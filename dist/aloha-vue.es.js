import { toRef as d, inject as de, computed as _, ref as B, withDirectives as Nt, h as c, resolveComponent as Vr, watch as rt, onBeforeUnmount as Ot, unref as Fg, Teleport as da, toRefs as Ec, onUnmounted as Bp, nextTick as Li, onMounted as jr, provide as Je, getCurrentInstance as qg } from "vue";
import qn from "moment";
var wp = typeof global == "object" && global && global.Object === Object && global, $g = typeof self == "object" && self && self.Object === Object && self, fr = wp || $g || Function("return this")(), _r = fr.Symbol, Pp = Object.prototype, Ug = Pp.hasOwnProperty, kg = Pp.toString, Qi = _r ? _r.toStringTag : void 0;
function Hg(e) {
  var t = Ug.call(e, Qi), n = e[Qi];
  try {
    e[Qi] = void 0;
    var r = !0;
  } catch {
  }
  var s = kg.call(e);
  return r && (t ? e[Qi] = n : delete e[Qi]), s;
}
var Vg = Object.prototype, Wg = Vg.toString;
function Gg(e) {
  return Wg.call(e);
}
var jg = "[object Null]", Kg = "[object Undefined]", QA = _r ? _r.toStringTag : void 0;
function ca(e) {
  return e == null ? e === void 0 ? Kg : jg : QA && QA in Object(e) ? Hg(e) : Gg(e);
}
function dr(e) {
  return e != null && typeof e == "object";
}
var zg = "[object Symbol]";
function Fs(e) {
  return typeof e == "symbol" || dr(e) && ca(e) == zg;
}
function Ei(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, s = Array(r); ++n < r; )
    s[n] = t(e[n], n, e);
  return s;
}
var Se = Array.isArray, eE = _r ? _r.prototype : void 0, tE = eE ? eE.toString : void 0;
function Ol(e) {
  if (typeof e == "string")
    return e;
  if (Se(e))
    return Ei(e, Ol) + "";
  if (Fs(e))
    return tE ? tE.call(e) : "";
  var t = e + "";
  return t == "0" && 1 / e == -1 / 0 ? "-0" : t;
}
var Yg = /\s/;
function Xg(e) {
  for (var t = e.length; t-- && Yg.test(e.charAt(t)); )
    ;
  return t;
}
var Zg = /^\s+/;
function Jg(e) {
  return e && e.slice(0, Xg(e) + 1).replace(Zg, "");
}
function Vn(e) {
  var t = typeof e;
  return e != null && (t == "object" || t == "function");
}
var nE = NaN, Qg = /^[-+]0x[0-9a-f]+$/i, eO = /^0b[01]+$/i, tO = /^0o[0-7]+$/i, nO = parseInt;
function mi(e) {
  if (typeof e == "number")
    return e;
  if (Fs(e))
    return nE;
  if (Vn(e)) {
    var t = typeof e.valueOf == "function" ? e.valueOf() : e;
    e = Vn(t) ? t + "" : t;
  }
  if (typeof e != "string")
    return e === 0 ? e : +e;
  e = Jg(e);
  var n = eO.test(e);
  return n || tO.test(e) ? nO(e.slice(2), n ? 2 : 8) : Qg.test(e) ? nE : +e;
}
var rO = 1 / 0, aO = 17976931348623157e292;
function ko(e) {
  if (!e)
    return e === 0 ? e : 0;
  if (e = mi(e), e === rO || e === -1 / 0) {
    var t = e < 0 ? -1 : 1;
    return t * aO;
  }
  return e === e ? e : 0;
}
function Kr(e) {
  var t = ko(e), n = t % 1;
  return t === t ? n ? t - n : t : 0;
}
function Hs(e) {
  return e;
}
var sO = "[object AsyncFunction]", iO = "[object Function]", lO = "[object GeneratorFunction]", oO = "[object Proxy]";
function Ne(e) {
  if (!Vn(e))
    return !1;
  var t = ca(e);
  return t == iO || t == lO || t == sO || t == oO;
}
var hd = fr["__core-js_shared__"], rE = function() {
  var e = /[^.]+$/.exec(hd && hd.keys && hd.keys.IE_PROTO || "");
  return e ? "Symbol(src)_1." + e : "";
}();
function uO(e) {
  return !!rE && rE in e;
}
var _O = Function.prototype, dO = _O.toString;
function Vs(e) {
  if (e != null) {
    try {
      return dO.call(e);
    } catch {
    }
    try {
      return e + "";
    } catch {
    }
  }
  return "";
}
var cO = /[\\^$.*+?()[\]{}|]/g, fO = /^\[object .+?Constructor\]$/, hO = Function.prototype, AO = Object.prototype, EO = hO.toString, pO = AO.hasOwnProperty, TO = RegExp(
  "^" + EO.call(pO).replace(cO, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function SO(e) {
  if (!Vn(e) || uO(e))
    return !1;
  var t = Ne(e) ? TO : fO;
  return t.test(Vs(e));
}
function LO(e, t) {
  return e == null ? void 0 : e[t];
}
function Ws(e, t) {
  var n = LO(e, t);
  return SO(n) ? n : void 0;
}
var Fd = Ws(fr, "WeakMap"), aE = Object.create, mO = /* @__PURE__ */ function() {
  function e() {
  }
  return function(t) {
    if (!Vn(t))
      return {};
    if (aE)
      return aE(t);
    e.prototype = t;
    var n = new e();
    return e.prototype = void 0, n;
  };
}();
function bO(e, t, n) {
  switch (n.length) {
    case 0:
      return e.call(t);
    case 1:
      return e.call(t, n[0]);
    case 2:
      return e.call(t, n[0], n[1]);
    case 3:
      return e.call(t, n[0], n[1], n[2]);
  }
  return e.apply(t, n);
}
function IO() {
}
function vO(e, t) {
  var n = -1, r = e.length;
  for (t || (t = Array(r)); ++n < r; )
    t[n] = e[n];
  return t;
}
var yO = 800, RO = 16, gO = Date.now;
function OO(e) {
  var t = 0, n = 0;
  return function() {
    var r = gO(), s = RO - (r - n);
    if (n = r, s > 0) {
      if (++t >= yO)
        return arguments[0];
    } else
      t = 0;
    return e.apply(void 0, arguments);
  };
}
function CO(e) {
  return function() {
    return e;
  };
}
var nu = function() {
  try {
    var e = Ws(Object, "defineProperty");
    return e({}, "", {}), e;
  } catch {
  }
}(), DO = nu ? function(e, t) {
  return nu(e, "toString", {
    configurable: !0,
    enumerable: !1,
    value: CO(t),
    writable: !0
  });
} : Hs, NO = OO(DO);
function xp(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r && t(e[n], n, e) !== !1; )
    ;
  return e;
}
function Mp(e, t, n, r) {
  for (var s = e.length, i = n + -1; ++i < s; )
    if (t(e[i], i, e))
      return i;
  return -1;
}
function BO(e) {
  return e !== e;
}
function wO(e, t, n) {
  for (var r = n - 1, s = e.length; ++r < s; )
    if (e[r] === t)
      return r;
  return -1;
}
function Fp(e, t, n) {
  return t === t ? wO(e, t, n) : Mp(e, BO, n);
}
function qp(e, t) {
  var n = e == null ? 0 : e.length;
  return !!n && Fp(e, t, 0) > -1;
}
var PO = 9007199254740991, xO = /^(?:0|[1-9]\d*)$/;
function Tu(e, t) {
  var n = typeof e;
  return t = t ?? PO, !!t && (n == "number" || n != "symbol" && xO.test(e)) && e > -1 && e % 1 == 0 && e < t;
}
function pc(e, t, n) {
  t == "__proto__" && nu ? nu(e, t, {
    configurable: !0,
    enumerable: !0,
    value: n,
    writable: !0
  }) : e[t] = n;
}
function Su(e, t) {
  return e === t || e !== e && t !== t;
}
var MO = Object.prototype, FO = MO.hasOwnProperty;
function Lu(e, t, n) {
  var r = e[t];
  (!(FO.call(e, t) && Su(r, n)) || n === void 0 && !(t in e)) && pc(e, t, n);
}
function Cl(e, t, n, r) {
  var s = !n;
  n || (n = {});
  for (var i = -1, o = t.length; ++i < o; ) {
    var u = t[i], f = void 0;
    f === void 0 && (f = e[u]), s ? pc(n, u, f) : Lu(n, u, f);
  }
  return n;
}
var sE = Math.max;
function qO(e, t, n) {
  return t = sE(t === void 0 ? e.length - 1 : t, 0), function() {
    for (var r = arguments, s = -1, i = sE(r.length - t, 0), o = Array(i); ++s < i; )
      o[s] = r[t + s];
    s = -1;
    for (var u = Array(t + 1); ++s < t; )
      u[s] = r[s];
    return u[t] = n(o), bO(e, this, u);
  };
}
function mu(e, t) {
  return NO(qO(e, t, Hs), e + "");
}
var $O = 9007199254740991;
function Tc(e) {
  return typeof e == "number" && e > -1 && e % 1 == 0 && e <= $O;
}
function Cr(e) {
  return e != null && Tc(e.length) && !Ne(e);
}
function ru(e, t, n) {
  if (!Vn(n))
    return !1;
  var r = typeof t;
  return (r == "number" ? Cr(n) && Tu(t, n.length) : r == "string" && t in n) ? Su(n[t], e) : !1;
}
function UO(e) {
  return mu(function(t, n) {
    var r = -1, s = n.length, i = s > 1 ? n[s - 1] : void 0, o = s > 2 ? n[2] : void 0;
    for (i = e.length > 3 && typeof i == "function" ? (s--, i) : void 0, o && ru(n[0], n[1], o) && (i = s < 3 ? void 0 : i, s = 1), t = Object(t); ++r < s; ) {
      var u = n[r];
      u && e(t, u, r, i);
    }
    return t;
  });
}
var kO = Object.prototype;
function Dl(e) {
  var t = e && e.constructor, n = typeof t == "function" && t.prototype || kO;
  return e === n;
}
function $p(e, t) {
  for (var n = -1, r = Array(e); ++n < e; )
    r[n] = t(n);
  return r;
}
var HO = "[object Arguments]";
function iE(e) {
  return dr(e) && ca(e) == HO;
}
var Up = Object.prototype, VO = Up.hasOwnProperty, WO = Up.propertyIsEnumerable, bu = iE(/* @__PURE__ */ function() {
  return arguments;
}()) ? iE : function(e) {
  return dr(e) && VO.call(e, "callee") && !WO.call(e, "callee");
};
function GO() {
  return !1;
}
var kp = typeof exports == "object" && exports && !exports.nodeType && exports, lE = kp && typeof module == "object" && module && !module.nodeType && module, jO = lE && lE.exports === kp, oE = jO ? fr.Buffer : void 0, KO = oE ? oE.isBuffer : void 0, El = KO || GO, zO = "[object Arguments]", YO = "[object Array]", XO = "[object Boolean]", ZO = "[object Date]", JO = "[object Error]", QO = "[object Function]", eC = "[object Map]", tC = "[object Number]", nC = "[object Object]", rC = "[object RegExp]", aC = "[object Set]", sC = "[object String]", iC = "[object WeakMap]", lC = "[object ArrayBuffer]", oC = "[object DataView]", uC = "[object Float32Array]", _C = "[object Float64Array]", dC = "[object Int8Array]", cC = "[object Int16Array]", fC = "[object Int32Array]", hC = "[object Uint8Array]", AC = "[object Uint8ClampedArray]", EC = "[object Uint16Array]", pC = "[object Uint32Array]", It = {};
It[uC] = It[_C] = It[dC] = It[cC] = It[fC] = It[hC] = It[AC] = It[EC] = It[pC] = !0;
It[zO] = It[YO] = It[lC] = It[XO] = It[oC] = It[ZO] = It[JO] = It[QO] = It[eC] = It[tC] = It[nC] = It[rC] = It[aC] = It[sC] = It[iC] = !1;
function TC(e) {
  return dr(e) && Tc(e.length) && !!It[ca(e)];
}
function Iu(e) {
  return function(t) {
    return e(t);
  };
}
var Hp = typeof exports == "object" && exports && !exports.nodeType && exports, ul = Hp && typeof module == "object" && module && !module.nodeType && module, SC = ul && ul.exports === Hp, Ad = SC && wp.process, bi = function() {
  try {
    var e = ul && ul.require && ul.require("util").types;
    return e || Ad && Ad.binding && Ad.binding("util");
  } catch {
  }
}(), uE = bi && bi.isTypedArray, Sc = uE ? Iu(uE) : TC, LC = Object.prototype, mC = LC.hasOwnProperty;
function Vp(e, t) {
  var n = Se(e), r = !n && bu(e), s = !n && !r && El(e), i = !n && !r && !s && Sc(e), o = n || r || s || i, u = o ? $p(e.length, String) : [], f = u.length;
  for (var A in e)
    (t || mC.call(e, A)) && !(o && // Safari 9 has enumerable `arguments.length` in strict mode.
    (A == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    s && (A == "offset" || A == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    i && (A == "buffer" || A == "byteLength" || A == "byteOffset") || // Skip index properties.
    Tu(A, f))) && u.push(A);
  return u;
}
function Wp(e, t) {
  return function(n) {
    return e(t(n));
  };
}
var bC = Wp(Object.keys, Object), IC = Object.prototype, vC = IC.hasOwnProperty;
function Lc(e) {
  if (!Dl(e))
    return bC(e);
  var t = [];
  for (var n in Object(e))
    vC.call(e, n) && n != "constructor" && t.push(n);
  return t;
}
function fa(e) {
  return Cr(e) ? Vp(e) : Lc(e);
}
var yC = Object.prototype, RC = yC.hasOwnProperty, qd = UO(function(e, t) {
  if (Dl(t) || Cr(t)) {
    Cl(t, fa(t), e);
    return;
  }
  for (var n in t)
    RC.call(t, n) && Lu(e, n, t[n]);
});
function gC(e) {
  var t = [];
  if (e != null)
    for (var n in Object(e))
      t.push(n);
  return t;
}
var OC = Object.prototype, CC = OC.hasOwnProperty;
function DC(e) {
  if (!Vn(e))
    return gC(e);
  var t = Dl(e), n = [];
  for (var r in e)
    r == "constructor" && (t || !CC.call(e, r)) || n.push(r);
  return n;
}
function mc(e) {
  return Cr(e) ? Vp(e, !0) : DC(e);
}
var NC = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, BC = /^\w*$/;
function bc(e, t) {
  if (Se(e))
    return !1;
  var n = typeof e;
  return n == "number" || n == "symbol" || n == "boolean" || e == null || Fs(e) ? !0 : BC.test(e) || !NC.test(e) || t != null && e in Object(t);
}
var pl = Ws(Object, "create");
function wC() {
  this.__data__ = pl ? pl(null) : {}, this.size = 0;
}
function PC(e) {
  var t = this.has(e) && delete this.__data__[e];
  return this.size -= t ? 1 : 0, t;
}
var xC = "__lodash_hash_undefined__", MC = Object.prototype, FC = MC.hasOwnProperty;
function qC(e) {
  var t = this.__data__;
  if (pl) {
    var n = t[e];
    return n === xC ? void 0 : n;
  }
  return FC.call(t, e) ? t[e] : void 0;
}
var $C = Object.prototype, UC = $C.hasOwnProperty;
function kC(e) {
  var t = this.__data__;
  return pl ? t[e] !== void 0 : UC.call(t, e);
}
var HC = "__lodash_hash_undefined__";
function VC(e, t) {
  var n = this.__data__;
  return this.size += this.has(e) ? 0 : 1, n[e] = pl && t === void 0 ? HC : t, this;
}
function qs(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
qs.prototype.clear = wC;
qs.prototype.delete = PC;
qs.prototype.get = qC;
qs.prototype.has = kC;
qs.prototype.set = VC;
function WC() {
  this.__data__ = [], this.size = 0;
}
function vu(e, t) {
  for (var n = e.length; n--; )
    if (Su(e[n][0], t))
      return n;
  return -1;
}
var GC = Array.prototype, jC = GC.splice;
function KC(e) {
  var t = this.__data__, n = vu(t, e);
  if (n < 0)
    return !1;
  var r = t.length - 1;
  return n == r ? t.pop() : jC.call(t, n, 1), --this.size, !0;
}
function zC(e) {
  var t = this.__data__, n = vu(t, e);
  return n < 0 ? void 0 : t[n][1];
}
function YC(e) {
  return vu(this.__data__, e) > -1;
}
function XC(e, t) {
  var n = this.__data__, r = vu(n, e);
  return r < 0 ? (++this.size, n.push([e, t])) : n[r][1] = t, this;
}
function ha(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
ha.prototype.clear = WC;
ha.prototype.delete = KC;
ha.prototype.get = zC;
ha.prototype.has = YC;
ha.prototype.set = XC;
var Tl = Ws(fr, "Map");
function ZC() {
  this.size = 0, this.__data__ = {
    hash: new qs(),
    map: new (Tl || ha)(),
    string: new qs()
  };
}
function JC(e) {
  var t = typeof e;
  return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null;
}
function yu(e, t) {
  var n = e.__data__;
  return JC(t) ? n[typeof t == "string" ? "string" : "hash"] : n.map;
}
function QC(e) {
  var t = yu(this, e).delete(e);
  return this.size -= t ? 1 : 0, t;
}
function eD(e) {
  return yu(this, e).get(e);
}
function tD(e) {
  return yu(this, e).has(e);
}
function nD(e, t) {
  var n = yu(this, e), r = n.size;
  return n.set(e, t), this.size += n.size == r ? 0 : 1, this;
}
function Aa(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
Aa.prototype.clear = ZC;
Aa.prototype.delete = QC;
Aa.prototype.get = eD;
Aa.prototype.has = tD;
Aa.prototype.set = nD;
var rD = "Expected a function";
function Ic(e, t) {
  if (typeof e != "function" || t != null && typeof t != "function")
    throw new TypeError(rD);
  var n = function() {
    var r = arguments, s = t ? t.apply(this, r) : r[0], i = n.cache;
    if (i.has(s))
      return i.get(s);
    var o = e.apply(this, r);
    return n.cache = i.set(s, o) || i, o;
  };
  return n.cache = new (Ic.Cache || Aa)(), n;
}
Ic.Cache = Aa;
var aD = 500;
function sD(e) {
  var t = Ic(e, function(r) {
    return n.size === aD && n.clear(), r;
  }), n = t.cache;
  return t;
}
var iD = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, lD = /\\(\\)?/g, oD = sD(function(e) {
  var t = [];
  return e.charCodeAt(0) === 46 && t.push(""), e.replace(iD, function(n, r, s, i) {
    t.push(s ? i.replace(lD, "$1") : r || n);
  }), t;
});
function Vt(e) {
  return e == null ? "" : Ol(e);
}
function vc(e, t) {
  return Se(e) ? e : bc(e, t) ? [e] : oD(Vt(e));
}
function Nl(e) {
  if (typeof e == "string" || Fs(e))
    return e;
  var t = e + "";
  return t == "0" && 1 / e == -1 / 0 ? "-0" : t;
}
function yc(e, t) {
  t = vc(t, e);
  for (var n = 0, r = t.length; e != null && n < r; )
    e = e[Nl(t[n++])];
  return n && n == r ? e : void 0;
}
function ce(e, t, n) {
  var r = e == null ? void 0 : yc(e, t);
  return r === void 0 ? n : r;
}
function Rc(e, t) {
  for (var n = -1, r = t.length, s = e.length; ++n < r; )
    e[s + n] = t[n];
  return e;
}
var _E = _r ? _r.isConcatSpreadable : void 0;
function uD(e) {
  return Se(e) || bu(e) || !!(_E && e && e[_E]);
}
function gc(e, t, n, r, s) {
  var i = -1, o = e.length;
  for (n || (n = uD), s || (s = []); ++i < o; ) {
    var u = e[i];
    n(u) ? Rc(s, u) : r || (s[s.length] = u);
  }
  return s;
}
var Oc = Wp(Object.getPrototypeOf, Object), _D = "[object Object]", dD = Function.prototype, cD = Object.prototype, Gp = dD.toString, fD = cD.hasOwnProperty, hD = Gp.call(Object);
function st(e) {
  if (!dr(e) || ca(e) != _D)
    return !1;
  var t = Oc(e);
  if (t === null)
    return !0;
  var n = fD.call(t, "constructor") && t.constructor;
  return typeof n == "function" && n instanceof n && Gp.call(n) == hD;
}
function jp(e, t, n) {
  var r = -1, s = e.length;
  t < 0 && (t = -t > s ? 0 : s + t), n = n > s ? s : n, n < 0 && (n += s), s = t > n ? 0 : n - t >>> 0, t >>>= 0;
  for (var i = Array(s); ++r < s; )
    i[r] = e[r + t];
  return i;
}
function Kp(e, t, n) {
  var r = e.length;
  return n = n === void 0 ? r : n, !t && n >= r ? e : jp(e, t, n);
}
var AD = "\\ud800-\\udfff", ED = "\\u0300-\\u036f", pD = "\\ufe20-\\ufe2f", TD = "\\u20d0-\\u20ff", SD = ED + pD + TD, LD = "\\ufe0e\\ufe0f", mD = "\\u200d", bD = RegExp("[" + mD + AD + SD + LD + "]");
function Ru(e) {
  return bD.test(e);
}
function ID(e) {
  return e.split("");
}
var zp = "\\ud800-\\udfff", vD = "\\u0300-\\u036f", yD = "\\ufe20-\\ufe2f", RD = "\\u20d0-\\u20ff", gD = vD + yD + RD, OD = "\\ufe0e\\ufe0f", CD = "[" + zp + "]", $d = "[" + gD + "]", Ud = "\\ud83c[\\udffb-\\udfff]", DD = "(?:" + $d + "|" + Ud + ")", Yp = "[^" + zp + "]", Xp = "(?:\\ud83c[\\udde6-\\uddff]){2}", Zp = "[\\ud800-\\udbff][\\udc00-\\udfff]", ND = "\\u200d", Jp = DD + "?", Qp = "[" + OD + "]?", BD = "(?:" + ND + "(?:" + [Yp, Xp, Zp].join("|") + ")" + Qp + Jp + ")*", wD = Qp + Jp + BD, PD = "(?:" + [Yp + $d + "?", $d, Xp, Zp, CD].join("|") + ")", xD = RegExp(Ud + "(?=" + Ud + ")|" + PD + wD, "g");
function MD(e) {
  return e.match(xD) || [];
}
function eT(e) {
  return Ru(e) ? MD(e) : ID(e);
}
function FD(e) {
  return function(t) {
    t = Vt(t);
    var n = Ru(t) ? eT(t) : void 0, r = n ? n[0] : t.charAt(0), s = n ? Kp(n, 1).join("") : t.slice(1);
    return r[e]() + s;
  };
}
var tT = FD("toUpperCase");
function qD(e) {
  return tT(Vt(e).toLowerCase());
}
function $D(e, t, n, r) {
  var s = -1, i = e == null ? 0 : e.length;
  for (r && i && (n = e[++s]); ++s < i; )
    n = t(n, e[s], s, e);
  return n;
}
function nT() {
  if (!arguments.length)
    return [];
  var e = arguments[0];
  return Se(e) ? e : [e];
}
var UD = fr.isFinite, kD = Math.min;
function rT(e) {
  var t = Math[e];
  return function(n, r) {
    if (n = mi(n), r = r == null ? 0 : kD(Kr(r), 292), r && UD(n)) {
      var s = (Vt(n) + "e").split("e"), i = t(s[0] + "e" + (+s[1] + r));
      return s = (Vt(i) + "e").split("e"), +(s[0] + "e" + (+s[1] - r));
    }
    return t(n);
  };
}
var HD = rT("ceil");
function aT(e, t, n) {
  return e === e && (n !== void 0 && (e = e <= n ? e : n), e = e >= t ? e : t), e;
}
function VD() {
  this.__data__ = new ha(), this.size = 0;
}
function WD(e) {
  var t = this.__data__, n = t.delete(e);
  return this.size = t.size, n;
}
function GD(e) {
  return this.__data__.get(e);
}
function jD(e) {
  return this.__data__.has(e);
}
var KD = 200;
function zD(e, t) {
  var n = this.__data__;
  if (n instanceof ha) {
    var r = n.__data__;
    if (!Tl || r.length < KD - 1)
      return r.push([e, t]), this.size = ++n.size, this;
    n = this.__data__ = new Aa(r);
  }
  return n.set(e, t), this.size = n.size, this;
}
function Ur(e) {
  var t = this.__data__ = new ha(e);
  this.size = t.size;
}
Ur.prototype.clear = VD;
Ur.prototype.delete = WD;
Ur.prototype.get = GD;
Ur.prototype.has = jD;
Ur.prototype.set = zD;
function YD(e, t) {
  return e && Cl(t, fa(t), e);
}
function XD(e, t) {
  return e && Cl(t, mc(t), e);
}
var sT = typeof exports == "object" && exports && !exports.nodeType && exports, dE = sT && typeof module == "object" && module && !module.nodeType && module, ZD = dE && dE.exports === sT, cE = ZD ? fr.Buffer : void 0, fE = cE ? cE.allocUnsafe : void 0;
function JD(e, t) {
  if (t)
    return e.slice();
  var n = e.length, r = fE ? fE(n) : new e.constructor(n);
  return e.copy(r), r;
}
function iT(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, s = 0, i = []; ++n < r; ) {
    var o = e[n];
    t(o, n, e) && (i[s++] = o);
  }
  return i;
}
function lT() {
  return [];
}
var QD = Object.prototype, eN = QD.propertyIsEnumerable, hE = Object.getOwnPropertySymbols, Cc = hE ? function(e) {
  return e == null ? [] : (e = Object(e), iT(hE(e), function(t) {
    return eN.call(e, t);
  }));
} : lT;
function tN(e, t) {
  return Cl(e, Cc(e), t);
}
var nN = Object.getOwnPropertySymbols, oT = nN ? function(e) {
  for (var t = []; e; )
    Rc(t, Cc(e)), e = Oc(e);
  return t;
} : lT;
function rN(e, t) {
  return Cl(e, oT(e), t);
}
function uT(e, t, n) {
  var r = t(e);
  return Se(e) ? r : Rc(r, n(e));
}
function kd(e) {
  return uT(e, fa, Cc);
}
function aN(e) {
  return uT(e, mc, oT);
}
var Hd = Ws(fr, "DataView"), Vd = Ws(fr, "Promise"), pi = Ws(fr, "Set"), AE = "[object Map]", sN = "[object Object]", EE = "[object Promise]", pE = "[object Set]", TE = "[object WeakMap]", SE = "[object DataView]", iN = Vs(Hd), lN = Vs(Tl), oN = Vs(Vd), uN = Vs(pi), _N = Vs(Fd), $n = ca;
(Hd && $n(new Hd(new ArrayBuffer(1))) != SE || Tl && $n(new Tl()) != AE || Vd && $n(Vd.resolve()) != EE || pi && $n(new pi()) != pE || Fd && $n(new Fd()) != TE) && ($n = function(e) {
  var t = ca(e), n = t == sN ? e.constructor : void 0, r = n ? Vs(n) : "";
  if (r)
    switch (r) {
      case iN:
        return SE;
      case lN:
        return AE;
      case oN:
        return EE;
      case uN:
        return pE;
      case _N:
        return TE;
    }
  return t;
});
var dN = Object.prototype, cN = dN.hasOwnProperty;
function fN(e) {
  var t = e.length, n = new e.constructor(t);
  return t && typeof e[0] == "string" && cN.call(e, "index") && (n.index = e.index, n.input = e.input), n;
}
var au = fr.Uint8Array;
function Dc(e) {
  var t = new e.constructor(e.byteLength);
  return new au(t).set(new au(e)), t;
}
function hN(e, t) {
  var n = t ? Dc(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.byteLength);
}
var AN = /\w*$/;
function EN(e) {
  var t = new e.constructor(e.source, AN.exec(e));
  return t.lastIndex = e.lastIndex, t;
}
var LE = _r ? _r.prototype : void 0, mE = LE ? LE.valueOf : void 0;
function pN(e) {
  return mE ? Object(mE.call(e)) : {};
}
function TN(e, t) {
  var n = t ? Dc(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.length);
}
var SN = "[object Boolean]", LN = "[object Date]", mN = "[object Map]", bN = "[object Number]", IN = "[object RegExp]", vN = "[object Set]", yN = "[object String]", RN = "[object Symbol]", gN = "[object ArrayBuffer]", ON = "[object DataView]", CN = "[object Float32Array]", DN = "[object Float64Array]", NN = "[object Int8Array]", BN = "[object Int16Array]", wN = "[object Int32Array]", PN = "[object Uint8Array]", xN = "[object Uint8ClampedArray]", MN = "[object Uint16Array]", FN = "[object Uint32Array]";
function qN(e, t, n) {
  var r = e.constructor;
  switch (t) {
    case gN:
      return Dc(e);
    case SN:
    case LN:
      return new r(+e);
    case ON:
      return hN(e, n);
    case CN:
    case DN:
    case NN:
    case BN:
    case wN:
    case PN:
    case xN:
    case MN:
    case FN:
      return TN(e, n);
    case mN:
      return new r();
    case bN:
    case yN:
      return new r(e);
    case IN:
      return EN(e);
    case vN:
      return new r();
    case RN:
      return pN(e);
  }
}
function $N(e) {
  return typeof e.constructor == "function" && !Dl(e) ? mO(Oc(e)) : {};
}
var UN = "[object Map]";
function kN(e) {
  return dr(e) && $n(e) == UN;
}
var bE = bi && bi.isMap, HN = bE ? Iu(bE) : kN, VN = "[object Set]";
function WN(e) {
  return dr(e) && $n(e) == VN;
}
var IE = bi && bi.isSet, GN = IE ? Iu(IE) : WN, jN = 1, KN = 2, zN = 4, _T = "[object Arguments]", YN = "[object Array]", XN = "[object Boolean]", ZN = "[object Date]", JN = "[object Error]", dT = "[object Function]", QN = "[object GeneratorFunction]", eB = "[object Map]", tB = "[object Number]", cT = "[object Object]", nB = "[object RegExp]", rB = "[object Set]", aB = "[object String]", sB = "[object Symbol]", iB = "[object WeakMap]", lB = "[object ArrayBuffer]", oB = "[object DataView]", uB = "[object Float32Array]", _B = "[object Float64Array]", dB = "[object Int8Array]", cB = "[object Int16Array]", fB = "[object Int32Array]", hB = "[object Uint8Array]", AB = "[object Uint8ClampedArray]", EB = "[object Uint16Array]", pB = "[object Uint32Array]", Lt = {};
Lt[_T] = Lt[YN] = Lt[lB] = Lt[oB] = Lt[XN] = Lt[ZN] = Lt[uB] = Lt[_B] = Lt[dB] = Lt[cB] = Lt[fB] = Lt[eB] = Lt[tB] = Lt[cT] = Lt[nB] = Lt[rB] = Lt[aB] = Lt[sB] = Lt[hB] = Lt[AB] = Lt[EB] = Lt[pB] = !0;
Lt[JN] = Lt[dT] = Lt[iB] = !1;
function _l(e, t, n, r, s, i) {
  var o, u = t & jN, f = t & KN, A = t & zN;
  if (o !== void 0)
    return o;
  if (!Vn(e))
    return e;
  var E = Se(e);
  if (E) {
    if (o = fN(e), !u)
      return vO(e, o);
  } else {
    var p = $n(e), T = p == dT || p == QN;
    if (El(e))
      return JD(e, u);
    if (p == cT || p == _T || T && !s) {
      if (o = f || T ? {} : $N(e), !u)
        return f ? rN(e, XD(o, e)) : tN(e, YD(o, e));
    } else {
      if (!Lt[p])
        return s ? e : {};
      o = qN(e, p, u);
    }
  }
  i || (i = new Ur());
  var S = i.get(e);
  if (S)
    return S;
  i.set(e, o), GN(e) ? e.forEach(function(I) {
    o.add(_l(I, t, n, I, e, i));
  }) : HN(e) && e.forEach(function(I, v) {
    o.set(v, _l(I, t, n, v, e, i));
  });
  var m = A ? f ? aN : kd : f ? mc : fa, b = E ? void 0 : m(e);
  return xp(b || e, function(I, v) {
    b && (v = I, I = e[v]), Lu(o, v, _l(I, t, n, v, e, i));
  }), o;
}
var TB = 4;
function fT(e) {
  return _l(e, TB);
}
var SB = 1, LB = 4;
function he(e) {
  return _l(e, SB | LB);
}
var mB = "__lodash_hash_undefined__";
function bB(e) {
  return this.__data__.set(e, mB), this;
}
function IB(e) {
  return this.__data__.has(e);
}
function Ii(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.__data__ = new Aa(); ++t < n; )
    this.add(e[t]);
}
Ii.prototype.add = Ii.prototype.push = bB;
Ii.prototype.has = IB;
function vB(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r; )
    if (t(e[n], n, e))
      return !0;
  return !1;
}
function Nc(e, t) {
  return e.has(t);
}
var yB = 1, RB = 2;
function hT(e, t, n, r, s, i) {
  var o = n & yB, u = e.length, f = t.length;
  if (u != f && !(o && f > u))
    return !1;
  var A = i.get(e), E = i.get(t);
  if (A && E)
    return A == t && E == e;
  var p = -1, T = !0, S = n & RB ? new Ii() : void 0;
  for (i.set(e, t), i.set(t, e); ++p < u; ) {
    var m = e[p], b = t[p];
    if (r)
      var I = o ? r(b, m, p, t, e, i) : r(m, b, p, e, t, i);
    if (I !== void 0) {
      if (I)
        continue;
      T = !1;
      break;
    }
    if (S) {
      if (!vB(t, function(v, g) {
        if (!Nc(S, g) && (m === v || s(m, v, n, r, i)))
          return S.push(g);
      })) {
        T = !1;
        break;
      }
    } else if (!(m === b || s(m, b, n, r, i))) {
      T = !1;
      break;
    }
  }
  return i.delete(e), i.delete(t), T;
}
function gB(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r, s) {
    n[++t] = [s, r];
  }), n;
}
function Bc(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r) {
    n[++t] = r;
  }), n;
}
var OB = 1, CB = 2, DB = "[object Boolean]", NB = "[object Date]", BB = "[object Error]", wB = "[object Map]", PB = "[object Number]", xB = "[object RegExp]", MB = "[object Set]", FB = "[object String]", qB = "[object Symbol]", $B = "[object ArrayBuffer]", UB = "[object DataView]", vE = _r ? _r.prototype : void 0, Ed = vE ? vE.valueOf : void 0;
function kB(e, t, n, r, s, i, o) {
  switch (n) {
    case UB:
      if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset)
        return !1;
      e = e.buffer, t = t.buffer;
    case $B:
      return !(e.byteLength != t.byteLength || !i(new au(e), new au(t)));
    case DB:
    case NB:
    case PB:
      return Su(+e, +t);
    case BB:
      return e.name == t.name && e.message == t.message;
    case xB:
    case FB:
      return e == t + "";
    case wB:
      var u = gB;
    case MB:
      var f = r & OB;
      if (u || (u = Bc), e.size != t.size && !f)
        return !1;
      var A = o.get(e);
      if (A)
        return A == t;
      r |= CB, o.set(e, t);
      var E = hT(u(e), u(t), r, s, i, o);
      return o.delete(e), E;
    case qB:
      if (Ed)
        return Ed.call(e) == Ed.call(t);
  }
  return !1;
}
var HB = 1, VB = Object.prototype, WB = VB.hasOwnProperty;
function GB(e, t, n, r, s, i) {
  var o = n & HB, u = kd(e), f = u.length, A = kd(t), E = A.length;
  if (f != E && !o)
    return !1;
  for (var p = f; p--; ) {
    var T = u[p];
    if (!(o ? T in t : WB.call(t, T)))
      return !1;
  }
  var S = i.get(e), m = i.get(t);
  if (S && m)
    return S == t && m == e;
  var b = !0;
  i.set(e, t), i.set(t, e);
  for (var I = o; ++p < f; ) {
    T = u[p];
    var v = e[T], g = t[T];
    if (r)
      var R = o ? r(g, v, T, t, e, i) : r(v, g, T, e, t, i);
    if (!(R === void 0 ? v === g || s(v, g, n, r, i) : R)) {
      b = !1;
      break;
    }
    I || (I = T == "constructor");
  }
  if (b && !I) {
    var D = e.constructor, w = t.constructor;
    D != w && "constructor" in e && "constructor" in t && !(typeof D == "function" && D instanceof D && typeof w == "function" && w instanceof w) && (b = !1);
  }
  return i.delete(e), i.delete(t), b;
}
var jB = 1, yE = "[object Arguments]", RE = "[object Array]", wo = "[object Object]", KB = Object.prototype, gE = KB.hasOwnProperty;
function zB(e, t, n, r, s, i) {
  var o = Se(e), u = Se(t), f = o ? RE : $n(e), A = u ? RE : $n(t);
  f = f == yE ? wo : f, A = A == yE ? wo : A;
  var E = f == wo, p = A == wo, T = f == A;
  if (T && El(e)) {
    if (!El(t))
      return !1;
    o = !0, E = !1;
  }
  if (T && !E)
    return i || (i = new Ur()), o || Sc(e) ? hT(e, t, n, r, s, i) : kB(e, t, f, n, r, s, i);
  if (!(n & jB)) {
    var S = E && gE.call(e, "__wrapped__"), m = p && gE.call(t, "__wrapped__");
    if (S || m) {
      var b = S ? e.value() : e, I = m ? t.value() : t;
      return i || (i = new Ur()), s(b, I, n, r, i);
    }
  }
  return T ? (i || (i = new Ur()), GB(e, t, n, r, s, i)) : !1;
}
function gu(e, t, n, r, s) {
  return e === t ? !0 : e == null || t == null || !dr(e) && !dr(t) ? e !== e && t !== t : zB(e, t, n, r, gu, s);
}
var YB = 1, XB = 2;
function ZB(e, t, n, r) {
  var s = n.length, i = s;
  if (e == null)
    return !i;
  for (e = Object(e); s--; ) {
    var o = n[s];
    if (o[2] ? o[1] !== e[o[0]] : !(o[0] in e))
      return !1;
  }
  for (; ++s < i; ) {
    o = n[s];
    var u = o[0], f = e[u], A = o[1];
    if (o[2]) {
      if (f === void 0 && !(u in e))
        return !1;
    } else {
      var E = new Ur(), p;
      if (!(p === void 0 ? gu(A, f, YB | XB, r, E) : p))
        return !1;
    }
  }
  return !0;
}
function AT(e) {
  return e === e && !Vn(e);
}
function JB(e) {
  for (var t = fa(e), n = t.length; n--; ) {
    var r = t[n], s = e[r];
    t[n] = [r, s, AT(s)];
  }
  return t;
}
function ET(e, t) {
  return function(n) {
    return n == null ? !1 : n[e] === t && (t !== void 0 || e in Object(n));
  };
}
function QB(e) {
  var t = JB(e);
  return t.length == 1 && t[0][2] ? ET(t[0][0], t[0][1]) : function(n) {
    return n === e || ZB(n, e, t);
  };
}
function ew(e, t) {
  return e != null && t in Object(e);
}
function tw(e, t, n) {
  t = vc(t, e);
  for (var r = -1, s = t.length, i = !1; ++r < s; ) {
    var o = Nl(t[r]);
    if (!(i = e != null && n(e, o)))
      break;
    e = e[o];
  }
  return i || ++r != s ? i : (s = e == null ? 0 : e.length, !!s && Tc(s) && Tu(o, s) && (Se(e) || bu(e)));
}
function nw(e, t) {
  return e != null && tw(e, t, ew);
}
var rw = 1, aw = 2;
function sw(e, t) {
  return bc(e) && AT(t) ? ET(Nl(e), t) : function(n) {
    var r = ce(n, e);
    return r === void 0 && r === t ? nw(n, e) : gu(t, r, rw | aw);
  };
}
function pT(e) {
  return function(t) {
    return t == null ? void 0 : t[e];
  };
}
function iw(e) {
  return function(t) {
    return yc(t, e);
  };
}
function lw(e) {
  return bc(e) ? pT(Nl(e)) : iw(e);
}
function Ea(e) {
  return typeof e == "function" ? e : e == null ? Hs : typeof e == "object" ? Se(e) ? sw(e[0], e[1]) : QB(e) : lw(e);
}
function ow(e, t, n, r) {
  for (var s = -1, i = e == null ? 0 : e.length; ++s < i; ) {
    var o = e[s];
    t(r, o, n(o), e);
  }
  return r;
}
function TT(e) {
  return function(t, n, r) {
    for (var s = -1, i = Object(t), o = r(t), u = o.length; u--; ) {
      var f = o[e ? u : ++s];
      if (n(i[f], f, i) === !1)
        break;
    }
    return t;
  };
}
var uw = TT();
function _w(e, t) {
  return e && uw(e, t, fa);
}
function ST(e, t) {
  return function(n, r) {
    if (n == null)
      return n;
    if (!Cr(n))
      return e(n, r);
    for (var s = n.length, i = t ? s : -1, o = Object(n); (t ? i-- : ++i < s) && r(o[i], i, o) !== !1; )
      ;
    return n;
  };
}
var Ci = ST(_w);
function dw(e, t, n, r) {
  return Ci(e, function(s, i, o) {
    t(r, s, n(s), o);
  }), r;
}
function cw(e, t) {
  return function(n, r) {
    var s = Se(n) ? ow : dw, i = {};
    return s(n, e, Ea(r), i);
  };
}
var pd = function() {
  return fr.Date.now();
}, fw = "Expected a function", hw = Math.max, Aw = Math.min;
function Sl(e, t, n) {
  var r, s, i, o, u, f, A = 0, E = !1, p = !1, T = !0;
  if (typeof e != "function")
    throw new TypeError(fw);
  t = mi(t) || 0, Vn(n) && (E = !!n.leading, p = "maxWait" in n, i = p ? hw(mi(n.maxWait) || 0, t) : i, T = "trailing" in n ? !!n.trailing : T);
  function S(F) {
    var P = r, M = s;
    return r = s = void 0, A = F, o = e.apply(M, P), o;
  }
  function m(F) {
    return A = F, u = setTimeout(v, t), E ? S(F) : o;
  }
  function b(F) {
    var P = F - f, M = F - A, O = t - P;
    return p ? Aw(O, i - M) : O;
  }
  function I(F) {
    var P = F - f, M = F - A;
    return f === void 0 || P >= t || P < 0 || p && M >= i;
  }
  function v() {
    var F = pd();
    if (I(F))
      return g(F);
    u = setTimeout(v, b(F));
  }
  function g(F) {
    return u = void 0, T && r ? S(F) : (r = s = void 0, o);
  }
  function R() {
    u !== void 0 && clearTimeout(u), A = 0, r = f = s = u = void 0;
  }
  function D() {
    return u === void 0 ? o : g(pd());
  }
  function w() {
    var F = pd(), P = I(F);
    if (r = arguments, s = this, f = F, P) {
      if (u === void 0)
        return m(f);
      if (p)
        return clearTimeout(u), u = setTimeout(v, t), S(f);
    }
    return u === void 0 && (u = setTimeout(v, t)), o;
  }
  return w.cancel = R, w.flush = D, w;
}
function Wd(e) {
  return dr(e) && Cr(e);
}
var Ew = 200;
function pw(e, t, n, r) {
  var s = -1, i = qp, o = !0, u = e.length, f = [], A = t.length;
  if (!u)
    return f;
  t.length >= Ew && (i = Nc, o = !1, t = new Ii(t));
  e:
    for (; ++s < u; ) {
      var E = e[s], p = E;
      if (E = E !== 0 ? E : 0, o && p === p) {
        for (var T = A; T--; )
          if (t[T] === p)
            continue e;
        f.push(E);
      } else i(t, p, r) || f.push(E);
    }
  return f;
}
var Tw = mu(function(e, t) {
  return Wd(e) ? pw(e, gc(t, 1, Wd, !0)) : [];
});
function vi(e) {
  var t = e == null ? 0 : e.length;
  return t ? e[t - 1] : void 0;
}
function wc(e) {
  return typeof e == "function" ? e : Hs;
}
function z(e, t) {
  var n = Se(e) ? xp : Ci;
  return n(e, wc(t));
}
function Sw(e, t) {
  for (var n = e == null ? 0 : e.length; n-- && t(e[n], n, e) !== !1; )
    ;
  return e;
}
var Lw = TT(!0);
function mw(e, t) {
  return e && Lw(e, t, fa);
}
var bw = ST(mw, !0);
function Iw(e, t) {
  var n = Se(e) ? Sw : bw;
  return n(e, wc(t));
}
function vw(e, t, n) {
  e = Vt(e), t = Ol(t);
  var r = e.length;
  n = n === void 0 ? r : aT(Kr(n), 0, r);
  var s = n;
  return n -= t.length, n >= 0 && e.slice(n, s) == t;
}
var LT = /[\\^$.*+?()[\]{}|]/g, yw = RegExp(LT.source);
function Ou(e) {
  return e = Vt(e), e && yw.test(e) ? e.replace(LT, "\\$&") : e;
}
function Rw(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r; )
    if (!t(e[n], n, e))
      return !1;
  return !0;
}
function gw(e, t) {
  var n = !0;
  return Ci(e, function(r, s, i) {
    return n = !!t(r, s, i), n;
  }), n;
}
function Pc(e, t, n) {
  var r = Se(e) ? Rw : gw;
  return r(e, Ea(t));
}
function Ow(e, t) {
  var n = [];
  return Ci(e, function(r, s, i) {
    t(r, s, i) && n.push(r);
  }), n;
}
function mt(e, t) {
  var n = Se(e) ? iT : Ow;
  return n(e, Ea(t));
}
function Cw(e) {
  return function(t, n, r) {
    var s = Object(t);
    if (!Cr(t)) {
      var i = Ea(n);
      t = fa(t), n = function(u) {
        return i(s[u], u, s);
      };
    }
    var o = e(t, n, r);
    return o > -1 ? s[i ? t[o] : o] : void 0;
  };
}
var Dw = Math.max;
function la(e, t, n) {
  var r = e == null ? 0 : e.length;
  if (!r)
    return -1;
  var s = n == null ? 0 : Kr(n);
  return s < 0 && (s = Dw(r + s, 0)), Mp(e, Ea(t), s);
}
var xc = Cw(la);
function mT(e, t) {
  var n = -1, r = Cr(e) ? Array(e.length) : [];
  return Ci(e, function(s, i, o) {
    r[++n] = t(s, i, o);
  }), r;
}
function Fn(e, t) {
  var n = Se(e) ? Ei : mT;
  return n(e, Ea(t));
}
function Nw(e, t) {
  return e > t;
}
var Bw = "[object String]";
function ot(e) {
  return typeof e == "string" || !Se(e) && dr(e) && ca(e) == Bw;
}
function ww(e, t) {
  return Ei(t, function(n) {
    return e[n];
  });
}
function Mc(e) {
  return e == null ? [] : ww(e, fa(e));
}
var Pw = Math.max;
function Gd(e, t, n, r) {
  e = Cr(e) ? e : Mc(e), n = n ? Kr(n) : 0;
  var s = e.length;
  return n < 0 && (n = Pw(s + n, 0)), ot(e) ? n <= s && e.indexOf(t, n) > -1 : !!s && Fp(e, t, n) > -1;
}
var xw = "[object Map]", Mw = "[object Set]", Fw = Object.prototype, qw = Fw.hasOwnProperty;
function pn(e) {
  if (e == null)
    return !0;
  if (Cr(e) && (Se(e) || typeof e == "string" || typeof e.splice == "function" || El(e) || Sc(e) || bu(e)))
    return !e.length;
  var t = $n(e);
  if (t == xw || t == Mw)
    return !e.size;
  if (Dl(e))
    return !Lc(e).length;
  for (var n in e)
    if (qw.call(e, n))
      return !1;
  return !0;
}
function Fc(e, t) {
  return gu(e, t);
}
function pa(e) {
  return typeof e == "number" && e == Kr(e);
}
var $w = "[object Number]";
function On(e) {
  return typeof e == "number" || dr(e) && ca(e) == $w;
}
function Uw(e) {
  return On(e) && e != +e;
}
function se(e) {
  return e == null;
}
function Pe(e) {
  return e === void 0;
}
var $a = cw(function(e, t, n) {
  pc(e, n, t);
});
function kw(e, t) {
  return e < t;
}
function bT(e, t, n) {
  for (var r = -1, s = e.length; ++r < s; ) {
    var i = e[r], o = t(i);
    if (o != null && (u === void 0 ? o === o && !Fs(o) : n(o, u)))
      var u = o, f = i;
  }
  return f;
}
function Hw(e) {
  return e && e.length ? bT(e, Hs, Nw) : void 0;
}
function Vw(e) {
  return e && e.length ? bT(e, Hs, kw) : void 0;
}
function Ww(e, t, n, r) {
  if (!Vn(e))
    return e;
  t = vc(t, e);
  for (var s = -1, i = t.length, o = i - 1, u = e; u != null && ++s < i; ) {
    var f = Nl(t[s]), A = n;
    if (f === "__proto__" || f === "constructor" || f === "prototype")
      return e;
    if (s != o) {
      var E = u[f];
      A = void 0, A === void 0 && (A = Vn(E) ? E : Tu(t[s + 1]) ? [] : {});
    }
    Lu(u, f, A), u = u[f];
  }
  return e;
}
function Gw(e, t) {
  var n = e.length;
  for (e.sort(t); n--; )
    e[n] = e[n].value;
  return e;
}
function jw(e, t) {
  if (e !== t) {
    var n = e !== void 0, r = e === null, s = e === e, i = Fs(e), o = t !== void 0, u = t === null, f = t === t, A = Fs(t);
    if (!u && !A && !i && e > t || i && o && f && !u && !A || r && o && f || !n && f || !s)
      return 1;
    if (!r && !i && !A && e < t || A && n && s && !r && !i || u && n && s || !o && s || !f)
      return -1;
  }
  return 0;
}
function Kw(e, t, n) {
  for (var r = -1, s = e.criteria, i = t.criteria, o = s.length, u = n.length; ++r < o; ) {
    var f = jw(s[r], i[r]);
    if (f) {
      if (r >= u)
        return f;
      var A = n[r];
      return f * (A == "desc" ? -1 : 1);
    }
  }
  return e.index - t.index;
}
function IT(e, t, n) {
  t.length ? t = Ei(t, function(i) {
    return Se(i) ? function(o) {
      return yc(o, i.length === 1 ? i[0] : i);
    } : i;
  }) : t = [Hs];
  var r = -1;
  t = Ei(t, Iu(Ea));
  var s = mT(e, function(i, o, u) {
    var f = Ei(t, function(A) {
      return A(i);
    });
    return { criteria: f, index: ++r, value: i };
  });
  return Gw(s, function(i, o) {
    return Kw(i, o, n);
  });
}
function qc(e, t, n, r) {
  return e == null ? [] : (Se(t) || (t = t == null ? [] : [t]), n = n, Se(n) || (n = n == null ? [] : [n]), IT(e, t, n));
}
var zw = 9007199254740991, Yw = Math.floor;
function jd(e, t) {
  var n = "";
  if (!e || t < 1 || t > zw)
    return n;
  do
    t % 2 && (n += e), t = Yw(t / 2), t && (e += e);
  while (t);
  return n;
}
var Xw = pT("length"), vT = "\\ud800-\\udfff", Zw = "\\u0300-\\u036f", Jw = "\\ufe20-\\ufe2f", Qw = "\\u20d0-\\u20ff", eP = Zw + Jw + Qw, tP = "\\ufe0e\\ufe0f", nP = "[" + vT + "]", Kd = "[" + eP + "]", zd = "\\ud83c[\\udffb-\\udfff]", rP = "(?:" + Kd + "|" + zd + ")", yT = "[^" + vT + "]", RT = "(?:\\ud83c[\\udde6-\\uddff]){2}", gT = "[\\ud800-\\udbff][\\udc00-\\udfff]", aP = "\\u200d", OT = rP + "?", CT = "[" + tP + "]?", sP = "(?:" + aP + "(?:" + [yT, RT, gT].join("|") + ")" + CT + OT + ")*", iP = CT + OT + sP, lP = "(?:" + [yT + Kd + "?", Kd, RT, gT, nP].join("|") + ")", OE = RegExp(zd + "(?=" + zd + ")|" + lP + iP, "g");
function oP(e) {
  for (var t = OE.lastIndex = 0; OE.test(e); )
    ++t;
  return t;
}
function $c(e) {
  return Ru(e) ? oP(e) : Xw(e);
}
var uP = Math.ceil;
function _P(e, t) {
  t = t === void 0 ? " " : Ol(t);
  var n = t.length;
  if (n < 2)
    return n ? jd(t, e) : t;
  var r = jd(t, uP(e / $c(t)));
  return Ru(t) ? Kp(eT(r), 0, e).join("") : r.slice(0, e);
}
function dP(e, t, n) {
  e = Vt(e), t = Kr(t);
  var r = t ? $c(e) : 0;
  return t && r < t ? _P(t - r, n) + e : e;
}
var cP = Math.ceil, fP = Math.max;
function hP(e, t, n, r) {
  for (var s = -1, i = fP(cP((t - e) / (n || 1)), 0), o = Array(i); i--; )
    o[++s] = e, e += n;
  return o;
}
function AP(e) {
  return function(t, n, r) {
    return r && typeof r != "number" && ru(t, n, r) && (n = r = void 0), t = ko(t), n === void 0 ? (n = t, t = 0) : n = ko(n), r = r === void 0 ? t < n ? 1 : -1 : ko(r), hP(t, n, r);
  };
}
var Ho = AP();
function EP(e, t, n, r, s) {
  return s(e, function(i, o, u) {
    n = r ? (r = !1, i) : t(n, i, o, u);
  }), n;
}
function pP(e, t, n) {
  var r = Se(e) ? $D : EP, s = arguments.length < 3;
  return r(e, Ea(t), n, s, Ci);
}
function TP(e, t, n) {
  return t === void 0 ? t = 1 : t = Kr(t), jd(Vt(e), t);
}
var SP = rT("round");
function Uc(e, t, n) {
  return e == null ? e : Ww(e, t, n);
}
var LP = "[object Map]", mP = "[object Set]";
function Di(e) {
  if (e == null)
    return 0;
  if (Cr(e))
    return ot(e) ? $c(e) : e.length;
  var t = $n(e);
  return t == LP || t == mP ? e.size : Lc(e).length;
}
var Yd = mu(function(e, t) {
  if (e == null)
    return [];
  var n = t.length;
  return n > 1 && ru(e, t[0], t[1]) ? t = [] : n > 2 && ru(t[0], t[1], t[2]) && (t = [t[0]]), IT(e, gc(t), []);
});
function kc(e, t, n) {
  return e = Vt(e), n = n == null ? 0 : aT(Kr(n), 0, e.length), t = Ol(t), e.slice(n, n + t.length) == t;
}
function DT(e, t, n) {
  return e && e.length ? (t = t === void 0 ? 1 : Kr(t), jp(e, 0, t < 0 ? 0 : t)) : [];
}
var bP = 9007199254740991, Td = 4294967295, IP = Math.min;
function ur(e, t) {
  if (e = Kr(e), e < 1 || e > bP)
    return [];
  var n = Td, r = IP(e, Td);
  t = wc(t), e -= Td;
  for (var s = $p(r, t); ++n < e; )
    t(n);
  return s;
}
function NT(e) {
  return Vt(e).toLowerCase();
}
function BT(e) {
  return Vt(e).toUpperCase();
}
var vP = 1 / 0, yP = pi && 1 / Bc(new pi([, -0]))[1] == vP ? function(e) {
  return new pi(e);
} : IO, RP = 200;
function Hc(e, t, n) {
  var r = -1, s = qp, i = e.length, o = !0, u = [], f = u;
  if (i >= RP) {
    var A = t ? null : yP(e);
    if (A)
      return Bc(A);
    o = !1, s = Nc, f = new Ii();
  } else
    f = t ? [] : u;
  e:
    for (; ++r < i; ) {
      var E = e[r], p = t ? t(E) : E;
      if (E = E !== 0 ? E : 0, o && p === p) {
        for (var T = f.length; T--; )
          if (f[T] === p)
            continue e;
        t && f.push(p), u.push(E);
      } else s(f, p, n) || (f !== u && f.push(p), u.push(E));
    }
  return u;
}
var gP = mu(function(e) {
  return Hc(gc(e, 1, Wd, !0));
});
function OP(e) {
  return e && e.length ? Hc(e) : [];
}
function wT(e, t) {
  return e && e.length ? Hc(e, Ea(t)) : [];
}
var CP = 0;
function at(e) {
  var t = ++CP;
  return Vt(e) + t;
}
function DP(e, {
  classButtonLocal: t = _(() => {
  }),
  isOpen: n = _(() => !1),
  toggleLocal: r = () => {
  },
  currentId: s = _(() => "")
}) {
  const i = d(e, "item"), o = de("classButton"), u = de("disabled"), f = de("id"), A = de("isCaret"), E = de("keyContent"), p = de("keyLabel"), T = de("readonly"), S = de("withGap"), m = _(() => !!(u.value || i.value.disabled)), b = _(() => Pe(i.value.isCaret) ? A.value : i.value.isCaret), I = _(() => T.value || i.value.readonly), v = _(() => `${f.value}_${s.value}`), g = _(() => I.value ? "div" : "a"), R = _(() => {
    const F = {
      class: ["a_accordion__button", o.value, t.value, {
        a_accordion__button_collapsed: !n.value,
        a_accordion__button_has_not_caret: !b.value,
        a_accordion__button_with_gap: S.value,
        readonly: I.value
      }],
      id: i.value.id
    };
    return I.value || (F.ariaExpanded = n.value, F["aria-controls"] = v.value, F.rolw = "button", F.tabindex = 0, F.disabled = m.value, F.onClick = r), F;
  }), D = _(() => p.value ? ce(i.value, p.value) : ""), w = _(() => E.value ? ce(i.value, E.value) : "");
  return {
    buttonAttributes: R,
    buttonTag: g,
    contentLocal: w,
    idForCollapse: v,
    labelLocal: D
  };
}
function NP(e) {
  const t = d(e, "item"), n = de("keyChildren"), r = _(() => ce(t.value, n.value, []) || []), s = _(() => r.value.length !== 0);
  return {
    children: r,
    hasChildren: s
  };
}
function BP(e) {
  const t = d(e, "item"), n = de("keyClassBody"), r = de("keyClassHeader"), s = de("keyClassButton"), i = _(() => {
    if (n.value)
      return ce(t.value, n.value);
  }), o = _(() => {
    if (r.value)
      return ce(t.value, r.value);
  }), u = _(() => {
    if (s.value)
      return ce(t.value, s.value);
  });
  return {
    classBodyLocal: i,
    classButtonLocal: u,
    classHeaderLocal: o
  };
}
const wP = "_a_children", we = "_a_id", vt = "_a_label", di = "_a_label_search", Ll = "_a_parent";
function PP(e) {
  const t = d(e, "isParentOpen"), n = d(e, "item"), r = d(e, "itemIndex"), s = d(e, "keyId"), i = d(e, "parentsIds"), o = d(e, "parentIndexes"), u = de("idsForOpen"), f = de("toggle"), A = _(() => n.value[we]), E = _(() => t.value ? u.value.indexOf(A.value) !== -1 : !1), p = _(() => {
    const v = he(i.value);
    return v.push(`${A.value}`), v;
  }), T = _(() => o.value.join(".")), S = _(() => T.value ? `${T.value}.${r.value}` : `${r.value}`), m = _(() => {
    const v = he(o.value);
    return v.push(`${S.value}`), v;
  }), b = (v) => {
    f({
      $event: v,
      parentsIds: i.value,
      isOpen: E.value,
      item: n.value,
      itemIndex: r.value
    });
  };
  return {
    closeItemIfOpen: () => {
      E.value && s.value && b();
    },
    currentId: A,
    isOpen: E,
    parentIndexesForChild: m,
    parentsIdsForChild: p,
    toggleLocal: b
  };
}
function xP(e) {
  const t = d(e, "item"), n = de("keyIsRender"), r = de("keyIsRenderBodyByFirstOpen"), s = B(!1), i = _(() => {
    if (r.value)
      return ce(t.value, r.value);
  }), o = _(() => i.value ? s.value : !0), u = _(() => n.value ? !!ce(t.value, n.value, !0) : !0);
  return {
    isBodyVisible: o,
    isOpenFirst: s,
    isRender: u
  };
}
/*! @license DOMPurify 3.2.3 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.3/LICENSE */
const {
  entries: PT,
  setPrototypeOf: CE,
  isFrozen: MP,
  getPrototypeOf: FP,
  getOwnPropertyDescriptor: qP
} = Object;
let {
  freeze: Tn,
  seal: cr,
  create: xT
} = Object, {
  apply: Xd,
  construct: Zd
} = typeof Reflect < "u" && Reflect;
Tn || (Tn = function(t) {
  return t;
});
cr || (cr = function(t) {
  return t;
});
Xd || (Xd = function(t, n, r) {
  return t.apply(n, r);
});
Zd || (Zd = function(t, n) {
  return new t(...n);
});
const Po = Wn(Array.prototype.forEach), DE = Wn(Array.prototype.pop), el = Wn(Array.prototype.push), Vo = Wn(String.prototype.toLowerCase), Sd = Wn(String.prototype.toString), NE = Wn(String.prototype.match), tl = Wn(String.prototype.replace), $P = Wn(String.prototype.indexOf), UP = Wn(String.prototype.trim), Ir = Wn(Object.prototype.hasOwnProperty), An = Wn(RegExp.prototype.test), nl = kP(TypeError);
function Wn(e) {
  return function(t) {
    for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++)
      r[s - 1] = arguments[s];
    return Xd(e, t, r);
  };
}
function kP(e) {
  return function() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return Zd(e, n);
  };
}
function Ze(e, t) {
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Vo;
  CE && CE(e, null);
  let r = t.length;
  for (; r--; ) {
    let s = t[r];
    if (typeof s == "string") {
      const i = n(s);
      i !== s && (MP(t) || (t[r] = i), s = i);
    }
    e[s] = !0;
  }
  return e;
}
function HP(e) {
  for (let t = 0; t < e.length; t++)
    Ir(e, t) || (e[t] = null);
  return e;
}
function Bs(e) {
  const t = xT(null);
  for (const [n, r] of PT(e))
    Ir(e, n) && (Array.isArray(r) ? t[n] = HP(r) : r && typeof r == "object" && r.constructor === Object ? t[n] = Bs(r) : t[n] = r);
  return t;
}
function rl(e, t) {
  for (; e !== null; ) {
    const r = qP(e, t);
    if (r) {
      if (r.get)
        return Wn(r.get);
      if (typeof r.value == "function")
        return Wn(r.value);
    }
    e = FP(e);
  }
  function n() {
    return null;
  }
  return n;
}
const BE = Tn(["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"]), Ld = Tn(["svg", "a", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "filter", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "style", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern"]), md = Tn(["feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence"]), VP = Tn(["animate", "color-profile", "cursor", "discard", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignobject", "hatch", "hatchpath", "mesh", "meshgradient", "meshpatch", "meshrow", "missing-glyph", "script", "set", "solidcolor", "unknown", "use"]), bd = Tn(["math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover", "mprescripts"]), WP = Tn(["maction", "maligngroup", "malignmark", "mlongdiv", "mscarries", "mscarry", "msgroup", "mstack", "msline", "msrow", "semantics", "annotation", "annotation-xml", "mprescripts", "none"]), wE = Tn(["#text"]), PE = Tn(["accept", "action", "align", "alt", "autocapitalize", "autocomplete", "autopictureinpicture", "autoplay", "background", "bgcolor", "border", "capture", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "controls", "controlslist", "coords", "crossorigin", "datetime", "decoding", "default", "dir", "disabled", "disablepictureinpicture", "disableremoteplayback", "download", "draggable", "enctype", "enterkeyhint", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "inputmode", "integrity", "ismap", "kind", "label", "lang", "list", "loading", "loop", "low", "max", "maxlength", "media", "method", "min", "minlength", "multiple", "muted", "name", "nonce", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "playsinline", "popover", "popovertarget", "popovertargetaction", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "role", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "sizes", "span", "srclang", "start", "src", "srcset", "step", "style", "summary", "tabindex", "title", "translate", "type", "usemap", "valign", "value", "width", "wrap", "xmlns", "slot"]), Id = Tn(["accent-height", "accumulate", "additive", "alignment-baseline", "amplitude", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "class", "clip", "clippathunits", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "exponent", "fill", "fill-opacity", "fill-rule", "filter", "filterunits", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "height", "href", "id", "image-rendering", "in", "in2", "intercept", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lang", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "media", "method", "mode", "min", "name", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "preserveaspectratio", "primitiveunits", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "result", "rotate", "scale", "seed", "shape-rendering", "slope", "specularconstant", "specularexponent", "spreadmethod", "startoffset", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "style", "surfacescale", "systemlanguage", "tabindex", "tablevalues", "targetx", "targety", "transform", "transform-origin", "text-anchor", "text-decoration", "text-rendering", "textlength", "type", "u1", "u2", "unicode", "values", "viewbox", "visibility", "version", "vert-adv-y", "vert-origin-x", "vert-origin-y", "width", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "xmlns", "y", "y1", "y2", "z", "zoomandpan"]), xE = Tn(["accent", "accentunder", "align", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "dir", "display", "displaystyle", "encoding", "fence", "frame", "height", "href", "id", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "width", "xmlns"]), xo = Tn(["xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"]), GP = cr(/\{\{[\w\W]*|[\w\W]*\}\}/gm), jP = cr(/<%[\w\W]*|[\w\W]*%>/gm), KP = cr(/\$\{[\w\W]*}/gm), zP = cr(/^data-[\-\w.\u00B7-\uFFFF]+$/), YP = cr(/^aria-[\-\w]+$/), MT = cr(
  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i
  // eslint-disable-line no-useless-escape
), XP = cr(/^(?:\w+script|data):/i), ZP = cr(
  /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g
  // eslint-disable-line no-control-regex
), FT = cr(/^html$/i), JP = cr(/^[a-z][.\w]*(-[.\w]+)+$/i);
var ME = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  ARIA_ATTR: YP,
  ATTR_WHITESPACE: ZP,
  CUSTOM_ELEMENT: JP,
  DATA_ATTR: zP,
  DOCTYPE_NAME: FT,
  ERB_EXPR: jP,
  IS_ALLOWED_URI: MT,
  IS_SCRIPT_OR_DATA: XP,
  MUSTACHE_EXPR: GP,
  TMPLIT_EXPR: KP
});
const al = {
  element: 1,
  text: 3,
  // Deprecated
  progressingInstruction: 7,
  comment: 8,
  document: 9
}, QP = function() {
  return typeof window > "u" ? null : window;
}, ex = function(t, n) {
  if (typeof t != "object" || typeof t.createPolicy != "function")
    return null;
  let r = null;
  const s = "data-tt-policy-suffix";
  n && n.hasAttribute(s) && (r = n.getAttribute(s));
  const i = "dompurify" + (r ? "#" + r : "");
  try {
    return t.createPolicy(i, {
      createHTML(o) {
        return o;
      },
      createScriptURL(o) {
        return o;
      }
    });
  } catch {
    return console.warn("TrustedTypes policy " + i + " could not be created."), null;
  }
}, FE = function() {
  return {
    afterSanitizeAttributes: [],
    afterSanitizeElements: [],
    afterSanitizeShadowDOM: [],
    beforeSanitizeAttributes: [],
    beforeSanitizeElements: [],
    beforeSanitizeShadowDOM: [],
    uponSanitizeAttribute: [],
    uponSanitizeElement: [],
    uponSanitizeShadowNode: []
  };
};
function qT() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : QP();
  const t = (De) => qT(De);
  if (t.version = "3.2.3", t.removed = [], !e || !e.document || e.document.nodeType !== al.document)
    return t.isSupported = !1, t;
  let {
    document: n
  } = e;
  const r = n, s = r.currentScript, {
    DocumentFragment: i,
    HTMLTemplateElement: o,
    Node: u,
    Element: f,
    NodeFilter: A,
    NamedNodeMap: E = e.NamedNodeMap || e.MozNamedAttrMap,
    HTMLFormElement: p,
    DOMParser: T,
    trustedTypes: S
  } = e, m = f.prototype, b = rl(m, "cloneNode"), I = rl(m, "remove"), v = rl(m, "nextSibling"), g = rl(m, "childNodes"), R = rl(m, "parentNode");
  if (typeof o == "function") {
    const De = n.createElement("template");
    De.content && De.content.ownerDocument && (n = De.content.ownerDocument);
  }
  let D, w = "";
  const {
    implementation: F,
    createNodeIterator: P,
    createDocumentFragment: M,
    getElementsByTagName: O
  } = n, {
    importNode: q
  } = r;
  let U = FE();
  t.isSupported = typeof PT == "function" && typeof R == "function" && F && F.createHTMLDocument !== void 0;
  const {
    MUSTACHE_EXPR: G,
    ERB_EXPR: te,
    TMPLIT_EXPR: re,
    DATA_ATTR: ie,
    ARIA_ATTR: le,
    IS_SCRIPT_OR_DATA: oe,
    ATTR_WHITESPACE: Te,
    CUSTOM_ELEMENT: Be
  } = ME;
  let {
    IS_ALLOWED_URI: Ae
  } = ME, _e = null;
  const ve = Ze({}, [...BE, ...Ld, ...md, ...bd, ...wE]);
  let be = null;
  const je = Ze({}, [...PE, ...Id, ...xE, ...xo]);
  let Re = Object.seal(xT(null, {
    tagNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    attributeNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    allowCustomizedBuiltInElements: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: !1
    }
  })), J = null, H = null, X = !0, ae = !0, ge = !1, Ce = !0, ke = !1, Qe = !0, Ue = !1, $e = !1, it = !1, Ke = !1, lt = !1, et = !1, ht = !0, At = !1;
  const Mt = "user-content-";
  let tn = !0, hr = !1, nn = {}, Kn = null;
  const zn = Ze({}, ["annotation-xml", "audio", "colgroup", "desc", "foreignobject", "head", "iframe", "math", "mi", "mn", "mo", "ms", "mtext", "noembed", "noframes", "noscript", "plaintext", "script", "style", "svg", "template", "thead", "title", "video", "xmp"]);
  let Cn = null;
  const Nr = Ze({}, ["audio", "video", "img", "source", "image", "track"]);
  let Ar = null;
  const Br = Ze({}, ["alt", "class", "for", "id", "label", "name", "pattern", "placeholder", "role", "summary", "title", "value", "style", "xmlns"]), Yn = "http://www.w3.org/1998/Math/MathML", Xn = "http://www.w3.org/2000/svg", Zt = "http://www.w3.org/1999/xhtml";
  let mn = Zt, Er = !1, pr = null;
  const Ts = Ze({}, [Yn, Xn, Zt], Sd);
  let wr = Ze({}, ["mi", "mo", "mn", "ms", "mtext"]), Zn = Ze({}, ["annotation-xml"]);
  const Sa = Ze({}, ["title", "style", "font", "a", "script"]);
  let Dn = null;
  const Ss = ["application/xhtml+xml", "text/html"], Ls = "text/html";
  let yt = null, Jn = null;
  const Yr = n.createElement("form"), La = function(k) {
    return k instanceof RegExp || k instanceof Function;
  }, Xr = function() {
    let k = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (!(Jn && Jn === k)) {
      if ((!k || typeof k != "object") && (k = {}), k = Bs(k), Dn = // eslint-disable-next-line unicorn/prefer-includes
      Ss.indexOf(k.PARSER_MEDIA_TYPE) === -1 ? Ls : k.PARSER_MEDIA_TYPE, yt = Dn === "application/xhtml+xml" ? Sd : Vo, _e = Ir(k, "ALLOWED_TAGS") ? Ze({}, k.ALLOWED_TAGS, yt) : ve, be = Ir(k, "ALLOWED_ATTR") ? Ze({}, k.ALLOWED_ATTR, yt) : je, pr = Ir(k, "ALLOWED_NAMESPACES") ? Ze({}, k.ALLOWED_NAMESPACES, Sd) : Ts, Ar = Ir(k, "ADD_URI_SAFE_ATTR") ? Ze(Bs(Br), k.ADD_URI_SAFE_ATTR, yt) : Br, Cn = Ir(k, "ADD_DATA_URI_TAGS") ? Ze(Bs(Nr), k.ADD_DATA_URI_TAGS, yt) : Nr, Kn = Ir(k, "FORBID_CONTENTS") ? Ze({}, k.FORBID_CONTENTS, yt) : zn, J = Ir(k, "FORBID_TAGS") ? Ze({}, k.FORBID_TAGS, yt) : {}, H = Ir(k, "FORBID_ATTR") ? Ze({}, k.FORBID_ATTR, yt) : {}, nn = Ir(k, "USE_PROFILES") ? k.USE_PROFILES : !1, X = k.ALLOW_ARIA_ATTR !== !1, ae = k.ALLOW_DATA_ATTR !== !1, ge = k.ALLOW_UNKNOWN_PROTOCOLS || !1, Ce = k.ALLOW_SELF_CLOSE_IN_ATTR !== !1, ke = k.SAFE_FOR_TEMPLATES || !1, Qe = k.SAFE_FOR_XML !== !1, Ue = k.WHOLE_DOCUMENT || !1, Ke = k.RETURN_DOM || !1, lt = k.RETURN_DOM_FRAGMENT || !1, et = k.RETURN_TRUSTED_TYPE || !1, it = k.FORCE_BODY || !1, ht = k.SANITIZE_DOM !== !1, At = k.SANITIZE_NAMED_PROPS || !1, tn = k.KEEP_CONTENT !== !1, hr = k.IN_PLACE || !1, Ae = k.ALLOWED_URI_REGEXP || MT, mn = k.NAMESPACE || Zt, wr = k.MATHML_TEXT_INTEGRATION_POINTS || wr, Zn = k.HTML_INTEGRATION_POINTS || Zn, Re = k.CUSTOM_ELEMENT_HANDLING || {}, k.CUSTOM_ELEMENT_HANDLING && La(k.CUSTOM_ELEMENT_HANDLING.tagNameCheck) && (Re.tagNameCheck = k.CUSTOM_ELEMENT_HANDLING.tagNameCheck), k.CUSTOM_ELEMENT_HANDLING && La(k.CUSTOM_ELEMENT_HANDLING.attributeNameCheck) && (Re.attributeNameCheck = k.CUSTOM_ELEMENT_HANDLING.attributeNameCheck), k.CUSTOM_ELEMENT_HANDLING && typeof k.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements == "boolean" && (Re.allowCustomizedBuiltInElements = k.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements), ke && (ae = !1), lt && (Ke = !0), nn && (_e = Ze({}, wE), be = [], nn.html === !0 && (Ze(_e, BE), Ze(be, PE)), nn.svg === !0 && (Ze(_e, Ld), Ze(be, Id), Ze(be, xo)), nn.svgFilters === !0 && (Ze(_e, md), Ze(be, Id), Ze(be, xo)), nn.mathMl === !0 && (Ze(_e, bd), Ze(be, xE), Ze(be, xo))), k.ADD_TAGS && (_e === ve && (_e = Bs(_e)), Ze(_e, k.ADD_TAGS, yt)), k.ADD_ATTR && (be === je && (be = Bs(be)), Ze(be, k.ADD_ATTR, yt)), k.ADD_URI_SAFE_ATTR && Ze(Ar, k.ADD_URI_SAFE_ATTR, yt), k.FORBID_CONTENTS && (Kn === zn && (Kn = Bs(Kn)), Ze(Kn, k.FORBID_CONTENTS, yt)), tn && (_e["#text"] = !0), Ue && Ze(_e, ["html", "head", "body"]), _e.table && (Ze(_e, ["tbody"]), delete J.tbody), k.TRUSTED_TYPES_POLICY) {
        if (typeof k.TRUSTED_TYPES_POLICY.createHTML != "function")
          throw nl('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');
        if (typeof k.TRUSTED_TYPES_POLICY.createScriptURL != "function")
          throw nl('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');
        D = k.TRUSTED_TYPES_POLICY, w = D.createHTML("");
      } else
        D === void 0 && (D = ex(S, s)), D !== null && typeof w == "string" && (w = D.createHTML(""));
      Tn && Tn(k), Jn = k;
    }
  }, ma = Ze({}, [...Ld, ...md, ...VP]), Pr = Ze({}, [...bd, ...WP]), Pi = function(k) {
    let ue = R(k);
    (!ue || !ue.tagName) && (ue = {
      namespaceURI: mn,
      tagName: "template"
    });
    const Ie = Vo(k.tagName), ct = Vo(ue.tagName);
    return pr[k.namespaceURI] ? k.namespaceURI === Xn ? ue.namespaceURI === Zt ? Ie === "svg" : ue.namespaceURI === Yn ? Ie === "svg" && (ct === "annotation-xml" || wr[ct]) : !!ma[Ie] : k.namespaceURI === Yn ? ue.namespaceURI === Zt ? Ie === "math" : ue.namespaceURI === Xn ? Ie === "math" && Zn[ct] : !!Pr[Ie] : k.namespaceURI === Zt ? ue.namespaceURI === Xn && !Zn[ct] || ue.namespaceURI === Yn && !wr[ct] ? !1 : !Pr[Ie] && (Sa[Ie] || !ma[Ie]) : !!(Dn === "application/xhtml+xml" && pr[k.namespaceURI]) : !1;
  }, rn = function(k) {
    el(t.removed, {
      element: k
    });
    try {
      R(k).removeChild(k);
    } catch {
      I(k);
    }
  }, ba = function(k, ue) {
    try {
      el(t.removed, {
        attribute: ue.getAttributeNode(k),
        from: ue
      });
    } catch {
      el(t.removed, {
        attribute: null,
        from: ue
      });
    }
    if (ue.removeAttribute(k), k === "is")
      if (Ke || lt)
        try {
          rn(ue);
        } catch {
        }
      else
        try {
          ue.setAttribute(k, "");
        } catch {
        }
  }, zs = function(k) {
    let ue = null, Ie = null;
    if (it)
      k = "<remove></remove>" + k;
    else {
      const wt = NE(k, /^[\r\n\t ]+/);
      Ie = wt && wt[0];
    }
    Dn === "application/xhtml+xml" && mn === Zt && (k = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + k + "</body></html>");
    const ct = D ? D.createHTML(k) : k;
    if (mn === Zt)
      try {
        ue = new T().parseFromString(ct, Dn);
      } catch {
      }
    if (!ue || !ue.documentElement) {
      ue = F.createDocument(mn, "template", null);
      try {
        ue.documentElement.innerHTML = Er ? w : ct;
      } catch {
      }
    }
    const Wt = ue.body || ue.documentElement;
    return k && Ie && Wt.insertBefore(n.createTextNode(Ie), Wt.childNodes[0] || null), mn === Zt ? O.call(ue, Ue ? "html" : "body")[0] : Ue ? ue.documentElement : Wt;
  }, Ys = function(k) {
    return P.call(
      k.ownerDocument || k,
      k,
      // eslint-disable-next-line no-bitwise
      A.SHOW_ELEMENT | A.SHOW_COMMENT | A.SHOW_TEXT | A.SHOW_PROCESSING_INSTRUCTION | A.SHOW_CDATA_SECTION,
      null
    );
  }, Tr = function(k) {
    return k instanceof p && (typeof k.nodeName != "string" || typeof k.textContent != "string" || typeof k.removeChild != "function" || !(k.attributes instanceof E) || typeof k.removeAttribute != "function" || typeof k.setAttribute != "function" || typeof k.namespaceURI != "string" || typeof k.insertBefore != "function" || typeof k.hasChildNodes != "function");
  }, ms = function(k) {
    return typeof u == "function" && k instanceof u;
  };
  function dn(De, k, ue) {
    Po(De, (Ie) => {
      Ie.call(t, k, ue, Jn);
    });
  }
  const Xs = function(k) {
    let ue = null;
    if (dn(U.beforeSanitizeElements, k, null), Tr(k))
      return rn(k), !0;
    const Ie = yt(k.nodeName);
    if (dn(U.uponSanitizeElement, k, {
      tagName: Ie,
      allowedTags: _e
    }), k.hasChildNodes() && !ms(k.firstElementChild) && An(/<[/\w]/g, k.innerHTML) && An(/<[/\w]/g, k.textContent) || k.nodeType === al.progressingInstruction || Qe && k.nodeType === al.comment && An(/<[/\w]/g, k.data))
      return rn(k), !0;
    if (!_e[Ie] || J[Ie]) {
      if (!J[Ie] && xi(Ie) && (Re.tagNameCheck instanceof RegExp && An(Re.tagNameCheck, Ie) || Re.tagNameCheck instanceof Function && Re.tagNameCheck(Ie)))
        return !1;
      if (tn && !Kn[Ie]) {
        const ct = R(k) || k.parentNode, Wt = g(k) || k.childNodes;
        if (Wt && ct) {
          const wt = Wt.length;
          for (let an = wt - 1; an >= 0; --an) {
            const Qn = b(Wt[an], !0);
            Qn.__removalCount = (k.__removalCount || 0) + 1, ct.insertBefore(Qn, v(k));
          }
        }
      }
      return rn(k), !0;
    }
    return k instanceof f && !Pi(k) || (Ie === "noscript" || Ie === "noembed" || Ie === "noframes") && An(/<\/no(script|embed|frames)/i, k.innerHTML) ? (rn(k), !0) : (ke && k.nodeType === al.text && (ue = k.textContent, Po([G, te, re], (ct) => {
      ue = tl(ue, ct, " ");
    }), k.textContent !== ue && (el(t.removed, {
      element: k.cloneNode()
    }), k.textContent = ue)), dn(U.afterSanitizeElements, k, null), !1);
  }, Wl = function(k, ue, Ie) {
    if (ht && (ue === "id" || ue === "name") && (Ie in n || Ie in Yr))
      return !1;
    if (!(ae && !H[ue] && An(ie, ue))) {
      if (!(X && An(le, ue))) {
        if (!be[ue] || H[ue]) {
          if (
            // First condition does a very basic check if a) it's basically a valid custom element tagname AND
            // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck
            !(xi(k) && (Re.tagNameCheck instanceof RegExp && An(Re.tagNameCheck, k) || Re.tagNameCheck instanceof Function && Re.tagNameCheck(k)) && (Re.attributeNameCheck instanceof RegExp && An(Re.attributeNameCheck, ue) || Re.attributeNameCheck instanceof Function && Re.attributeNameCheck(ue)) || // Alternative, second condition checks if it's an `is`-attribute, AND
            // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            ue === "is" && Re.allowCustomizedBuiltInElements && (Re.tagNameCheck instanceof RegExp && An(Re.tagNameCheck, Ie) || Re.tagNameCheck instanceof Function && Re.tagNameCheck(Ie)))
          ) return !1;
        } else if (!Ar[ue]) {
          if (!An(Ae, tl(Ie, Te, ""))) {
            if (!((ue === "src" || ue === "xlink:href" || ue === "href") && k !== "script" && $P(Ie, "data:") === 0 && Cn[k])) {
              if (!(ge && !An(oe, tl(Ie, Te, "")))) {
                if (Ie)
                  return !1;
              }
            }
          }
        }
      }
    }
    return !0;
  }, xi = function(k) {
    return k !== "annotation-xml" && NE(k, Be);
  }, Gl = function(k) {
    dn(U.beforeSanitizeAttributes, k, null);
    const {
      attributes: ue
    } = k;
    if (!ue || Tr(k))
      return;
    const Ie = {
      attrName: "",
      attrValue: "",
      keepAttr: !0,
      allowedAttributes: be,
      forceKeepAttr: void 0
    };
    let ct = ue.length;
    for (; ct--; ) {
      const Wt = ue[ct], {
        name: wt,
        namespaceURI: an,
        value: Qn
      } = Wt, bs = yt(wt);
      let Gt = wt === "value" ? Qn : UP(Qn);
      if (Ie.attrName = bs, Ie.attrValue = Gt, Ie.keepAttr = !0, Ie.forceKeepAttr = void 0, dn(U.uponSanitizeAttribute, k, Ie), Gt = Ie.attrValue, At && (bs === "id" || bs === "name") && (ba(wt, k), Gt = Mt + Gt), Qe && An(/((--!?|])>)|<\/(style|title)/i, Gt)) {
        ba(wt, k);
        continue;
      }
      if (Ie.forceKeepAttr || (ba(wt, k), !Ie.keepAttr))
        continue;
      if (!Ce && An(/\/>/i, Gt)) {
        ba(wt, k);
        continue;
      }
      ke && Po([G, te, re], (Fi) => {
        Gt = tl(Gt, Fi, " ");
      });
      const Mi = yt(k.nodeName);
      if (Wl(Mi, bs, Gt)) {
        if (D && typeof S == "object" && typeof S.getAttributeType == "function" && !an)
          switch (S.getAttributeType(Mi, bs)) {
            case "TrustedHTML": {
              Gt = D.createHTML(Gt);
              break;
            }
            case "TrustedScriptURL": {
              Gt = D.createScriptURL(Gt);
              break;
            }
          }
        try {
          an ? k.setAttributeNS(an, wt, Gt) : k.setAttribute(wt, Gt), Tr(k) ? rn(k) : DE(t.removed);
        } catch {
        }
      }
    }
    dn(U.afterSanitizeAttributes, k, null);
  }, r_ = function De(k) {
    let ue = null;
    const Ie = Ys(k);
    for (dn(U.beforeSanitizeShadowDOM, k, null); ue = Ie.nextNode(); )
      dn(U.uponSanitizeShadowNode, ue, null), Xs(ue), Gl(ue), ue.content instanceof i && De(ue.content);
    dn(U.afterSanitizeShadowDOM, k, null);
  };
  return t.sanitize = function(De) {
    let k = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, ue = null, Ie = null, ct = null, Wt = null;
    if (Er = !De, Er && (De = "<!-->"), typeof De != "string" && !ms(De))
      if (typeof De.toString == "function") {
        if (De = De.toString(), typeof De != "string")
          throw nl("dirty is not a string, aborting");
      } else
        throw nl("toString is not a function");
    if (!t.isSupported)
      return De;
    if ($e || Xr(k), t.removed = [], typeof De == "string" && (hr = !1), hr) {
      if (De.nodeName) {
        const Qn = yt(De.nodeName);
        if (!_e[Qn] || J[Qn])
          throw nl("root node is forbidden and cannot be sanitized in-place");
      }
    } else if (De instanceof u)
      ue = zs("<!---->"), Ie = ue.ownerDocument.importNode(De, !0), Ie.nodeType === al.element && Ie.nodeName === "BODY" || Ie.nodeName === "HTML" ? ue = Ie : ue.appendChild(Ie);
    else {
      if (!Ke && !ke && !Ue && // eslint-disable-next-line unicorn/prefer-includes
      De.indexOf("<") === -1)
        return D && et ? D.createHTML(De) : De;
      if (ue = zs(De), !ue)
        return Ke ? null : et ? w : "";
    }
    ue && it && rn(ue.firstChild);
    const wt = Ys(hr ? De : ue);
    for (; ct = wt.nextNode(); )
      Xs(ct), Gl(ct), ct.content instanceof i && r_(ct.content);
    if (hr)
      return De;
    if (Ke) {
      if (lt)
        for (Wt = M.call(ue.ownerDocument); ue.firstChild; )
          Wt.appendChild(ue.firstChild);
      else
        Wt = ue;
      return (be.shadowroot || be.shadowrootmode) && (Wt = q.call(r, Wt, !0)), Wt;
    }
    let an = Ue ? ue.outerHTML : ue.innerHTML;
    return Ue && _e["!doctype"] && ue.ownerDocument && ue.ownerDocument.doctype && ue.ownerDocument.doctype.name && An(FT, ue.ownerDocument.doctype.name) && (an = "<!DOCTYPE " + ue.ownerDocument.doctype.name + `>
` + an), ke && Po([G, te, re], (Qn) => {
      an = tl(an, Qn, " ");
    }), D && et ? D.createHTML(an) : an;
  }, t.setConfig = function() {
    let De = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    Xr(De), $e = !0;
  }, t.clearConfig = function() {
    Jn = null, $e = !1;
  }, t.isValidAttribute = function(De, k, ue) {
    Jn || Xr({});
    const Ie = yt(De), ct = yt(k);
    return Wl(Ie, ct, ue);
  }, t.addHook = function(De, k) {
    typeof k == "function" && el(U[De], k);
  }, t.removeHook = function(De) {
    return DE(U[De]);
  }, t.removeHooks = function(De) {
    U[De] = [];
  }, t.removeAllHooks = function() {
    U = FE();
  }, t;
}
var Vc = qT();
const She = Vc, Lhe = Vc.sanitize;
function su(e) {
  return Vc.sanitize(tx(e), { ADD_ATTR: ["target"] });
}
function tx(e) {
  return On(e) ? Vt(e) : e;
}
function mhe(e) {
  return !Se(e) || !e.length ? !1 : Pc(e, ot);
}
function nx(e) {
  return !Se(e) || !e.length ? !1 : Pc(e, Se);
}
function rx(e) {
  const t = Object.keys(e);
  return t.length === 0 ? "" : `<ul class="a_list_without_styles">${t.map((r) => `<li>${e[r]}</li>`).join("")}</ul>`;
}
function ax({ array: e, keyChildren: t }) {
  return $T({ array: e, keyChildren: t, count: 0 });
}
function $T({ array: e, keyChildren: t, count: n = 0 }) {
  return Se(e) && z(e, (r) => {
    n++;
    const s = ce(r, t);
    n = $T({ array: s, keyChildren: t, count: n });
  }), n;
}
function Wc(e) {
  return new DOMParser().parseFromString(e, "text/html").body.textContent || "";
}
const Kt = {
  beforeMount(e, t) {
    e.innerHTML = se(t.value) || t.value === "" ? "" : su(t.value);
  },
  updated(e, t) {
    e.innerHTML = se(t.value) || t.value === "" ? "" : su(t.value);
  }
}, sx = {
  name: "AAccordionItem",
  props: {
    isParentOpen: {
      type: Boolean,
      required: !0
    },
    item: {
      type: Object,
      required: !0
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    parentsIds: {
      type: Array,
      required: !1,
      default: () => []
    },
    parentIndexes: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  inject: [
    "classBody",
    "classHeader",
    "id",
    "withGap"
  ],
  setup(e) {
    const {
      closeItemIfOpen: t,
      currentId: n,
      isOpen: r,
      parentIndexesForChild: s,
      parentsIdsForChild: i,
      toggleLocal: o
    } = PP(e), {
      children: u,
      hasChildren: f
    } = NP(e), {
      classBodyLocal: A,
      classButtonLocal: E,
      classHeaderLocal: p
    } = BP(e), {
      isBodyVisible: T,
      isOpenFirst: S,
      isRender: m
    } = xP(e), {
      buttonAttributes: b,
      buttonTag: I,
      contentLocal: v,
      idForCollapse: g,
      labelLocal: R
    } = DP(e, {
      classButtonLocal: E,
      isOpen: r,
      toggleLocal: o,
      currentId: n
    });
    return rt(r, (D) => {
      D && !S.value && (S.value = !0);
    }, {
      immediate: !0
    }), Ot(() => {
      t();
    }), {
      buttonAttributes: b,
      buttonTag: I,
      children: u,
      classBodyLocal: A,
      classButtonLocal: E,
      classHeaderLocal: p,
      contentLocal: v,
      currentId: n,
      hasChildren: f,
      idForCollapse: g,
      isBodyVisible: T,
      isOpen: r,
      isRender: m,
      labelLocal: R,
      parentIndexesForChild: s,
      parentsIdsForChild: i
    };
  },
  render() {
    let e = [];
    return this.isBodyVisible && (e = [
      this.item.slotContent && this.$slots[this.item.slotContent] ? this.$slots[this.item.slotContent]({
        item: this.item,
        itemIndex: this.itemIndex,
        parentsIds: this.parentsIds,
        parentIndexes: this.parentIndexes,
        id: this.id,
        currentId: this.currentId
      }) : this.$slots.accordionContent ? this.$slots.accordionContent({
        item: this.item,
        itemIndex: this.itemIndex,
        parentsIds: this.parentsIds,
        parentIndexes: this.parentIndexes,
        id: this.id,
        currentId: this.currentId
      }) : this.contentLocal && Nt(c("div"), [
        [Kt, this.contentLocal]
      ]),
      this.hasChildren && c("div", {
        class: ["a_accordion"]
      }, [
        this.children.map((t, n) => c(Vr("AAccordionItem"), {
          key: t[we],
          item: t,
          itemIndex: n,
          isParentOpen: this.isOpen,
          parentsIds: this.parentsIdsForChild,
          parentIndexes: this.parentIndexesForChild,
          keyId: this.keyId
        }, this.$slots))
      ])
    ]), this.isRender && c("div", {
      class: [
        "a_accordion__item",
        {
          a_accordion__item_with_gap: this.withGap
        }
      ]
    }, [
      c("div", {
        class: ["a_accordion__header", this.classHeader, this.classHeaderLocal]
      }, [
        c(this.buttonTag, this.buttonAttributes, [
          this.item.slotButton && this.$slots[this.item.slotButton] ? this.$slots[this.item.slotButton]({
            item: this.item,
            itemIndex: this.itemIndex,
            parentsIds: this.parentsIds,
            parentIndexes: this.parentIndexes,
            id: this.id,
            currentId: this.currentId
          }) : this.$slots.accordionButton && this.$slots.accordionButton({
            item: this.item,
            itemIndex: this.itemIndex,
            parentsIds: this.parentsIds,
            parentIndexes: this.parentIndexes,
            id: this.id,
            currentId: this.currentId
          }),
          this.labelLocal && Nt(c("span"), [
            [Kt, this.labelLocal]
          ])
        ])
      ]),
      c("div", {
        id: this.idForCollapse,
        class: ["a_accordion__collapse_box", {
          a_accordion__collapse_box_show: this.isOpen
        }]
      }, [
        c("div", {
          class: ["a_accordion__body", this.classBody, this.classBodyLocal]
        }, e)
      ])
    ]);
  }
};
function ix(e) {
  const t = d(e, "data"), n = d(e, "keyId"), r = d(e, "keyChildren"), s = ({ items: o, parentIds: u = "" }) => {
    z(o, (f, A) => {
      const E = ce(f, n.value);
      let p;
      se(E) ? p = `${u}${A}` : p = `${u}${E}`, f[we] = p;
      const T = f[r.value];
      T && T.length && s({ items: T, parentIds: `${p}_` });
    });
  };
  return {
    dataWithIds: _(() => {
      const o = he(t.value);
      return s({ items: o }), o;
    })
  };
}
function lx(e, {
  idsForOpen: t = _(() => []),
  dataWithIds: n = _(() => [])
}) {
  const r = d(e, "indexesForOpen"), s = d(e, "keyChildren"), i = ({ indexForOpen: f }) => {
    let A = `${f}`.replaceAll(".", `.${s.value}.`);
    return A += `.${we}`, A;
  }, o = ({ isInit: f } = {}) => {
    if (f && !r.value.length)
      return;
    const A = [];
    s.value ? z(r.value, (E) => {
      const p = ce(n.value, i({ indexForOpen: E }));
      se(p) || A.push(p);
    }) : z(r.value, (E) => {
      const p = ce(n.value, `${E}.${we}`);
      se(p) || A.push(p);
    }), t.value = A;
  }, u = () => {
    o({ isInit: !0 });
  };
  return rt(r, () => {
    o();
  }), {
    initIdsFromIndexesForOpen: u
  };
}
function ox(e, { emit: t }) {
  const n = d(e, "alwaysOpen"), r = d(e, "disabled"), s = d(e, "idsForOpenDefault"), i = d(e, "prevent"), o = d(e, "stop"), u = B(void 0), f = () => {
    u.value = s.value;
  }, A = ({ currentId: T, isOpen: S }) => {
    if (S) {
      const m = T.split("__")[0];
      u.value = mt(u.value, (b) => !kc(b, m));
    } else
      u.value.push(T);
  }, E = ({ currentId: T, parentsIds: S, isOpen: m }) => {
    m ? u.value = S : u.value = [...S, T];
  }, p = ({ item: T, parentsIds: S, isOpen: m, $event: b }) => {
    if (r.value)
      return;
    const I = he(S), v = T[we];
    n.value ? A({ currentId: v, isOpen: m }) : E({ parentsIds: I, currentId: v, isOpen: m }), t("toggle", { idsForOpen: u.value, currentId: v, parentsIds: I, isOpen: m, $event: b, item: T }), o.value && b && b.stopPropagation(), i.value && b && b.preventDefault();
  };
  return rt(s, (T) => {
    Fc(T, u.value) || (u.value = he(T));
  }), {
    idsForOpen: u,
    initIdsForOpen: f,
    toggleLocal: p
  };
}
const bhe = {
  name: "AAccordion",
  provide() {
    return {
      classBody: _(() => this.classBody),
      classButton: _(() => this.classButton),
      classHeader: _(() => this.classHeader),
      disabled: _(() => this.disabled),
      id: _(() => this.id),
      idsForOpen: _(() => this.idsForOpen),
      isCaret: _(() => this.isCaret),
      keyChildren: _(() => this.keyChildren),
      keyClassBody: _(() => this.keyClassBody),
      keyClassButton: _(() => this.keyClassButton),
      keyClassHeader: _(() => this.keyClassHeader),
      keyContent: _(() => this.keyContent),
      keyIsRender: _(() => this.keyIsRender),
      keyIsRenderBodyByFirstOpen: _(() => this.keyIsRenderBodyByFirstOpen),
      keyLabel: _(() => this.keyLabel),
      readonly: _(() => this.readonly),
      withGap: _(() => this.withGap),
      toggle: this.toggleLocal
    };
  },
  props: {
    alwaysOpen: {
      type: Boolean,
      required: !1
    },
    classBody: {
      type: [String, Object],
      required: !1,
      default: ""
    },
    classButton: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classHeader: {
      type: [String, Object],
      required: !1,
      default: ""
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: at("accordion_")
    },
    idsForOpenDefault: {
      type: Array,
      required: !1,
      default: () => []
    },
    isCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    data: {
      type: Array,
      required: !0
    },
    keyClassBody: {
      type: String,
      required: !1,
      default: "classBody"
    },
    keyClassButton: {
      type: String,
      required: !1,
      default: "classButton"
    },
    keyClassHeader: {
      type: String,
      required: !1,
      default: "classHeader"
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyIsRender: {
      type: String,
      required: !1,
      default: "isRender"
    },
    keyIsRenderBodyByFirstOpen: {
      type: String,
      required: !1,
      default: "isRenderBodyByFirstOpen"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyChildren: {
      type: String,
      required: !1,
      default: "children"
    },
    prevent: {
      type: Boolean,
      required: !1
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    stop: {
      type: Boolean,
      required: !1
    },
    withGap: {
      type: Boolean,
      required: !1
    },
    indexesForOpen: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      idsForOpen: n,
      initIdsForOpen: r,
      toggleLocal: s
    } = ox(e, t), {
      dataWithIds: i
    } = ix(e), {
      initIdsFromIndexesForOpen: o
    } = lx(e, {
      idsForOpen: n,
      dataWithIds: i
    });
    return r(), o(), {
      dataWithIds: i,
      idsForOpen: n,
      toggleLocal: s
    };
  },
  render() {
    return c("div", {
      class: ["a_accordion"]
    }, [
      this.dataWithIds.map((e, t) => c(sx, {
        key: e[we],
        item: e,
        itemIndex: t,
        isParentOpen: !0,
        keyId: this.keyId
      }, this.$slots))
    ]);
  }
};
function ux(e) {
  const t = d(e, "ariaAtomic"), n = d(e, "role"), r = _(() => {
    if (t.value)
      return !0;
  }), s = _(() => {
    if (n.value)
      return n.value;
  });
  return {
    ariaAtomicLocal: r,
    roleLocal: s
  };
}
function _x(e) {
  const t = d(e, "type");
  return {
    alertClassLocal: _(() => `a_alert a_alert_${t.value}`)
  };
}
function dx(e, { emit: t }) {
  const n = d(e, "closable"), r = d(e, "removeAlertOnClose"), s = B(!1);
  return {
    close: () => {
      n.value && (r.value && (s.value = !0), t("close"));
    },
    isHidden: s
  };
}
const cx = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>
</svg>`, Cu = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4m.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2"/>
</svg>`, fx = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle-fill" viewBox="0 0 16 16">
  <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2"/>
</svg>`, Du = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293z"/>
</svg>`, $t = B({
  propsDefault: {
    alertClass: void 0,
    alertContentClass: void 0,
    btnCloseAttributes: {},
    closable: !1,
    extra: void 0,
    html: void 0,
    icon: void 0,
    iconClass: void 0,
    isVisible: !1,
    removeAlertOnClose: !1,
    safeHtml: void 0,
    showIcon: !1,
    text: void 0,
    textClose: "_ALERT_CLOSE_",
    type: "danger"
  },
  icons: {
    success: cx,
    danger: Du,
    info: fx,
    warning: Cu
  }
}), Ihe = {
  install: (e, {
    propsDefault: t = {},
    icons: n = {}
  } = {}) => {
    $t.value.propsDefault = {
      ...$t.value.propsDefault,
      ...t
    }, $t.value.icons = {
      ...$t.value.icons,
      ...n
    };
  }
};
function hx(e) {
  const t = d(e, "icon"), n = d(e, "showIcon"), r = d(e, "type");
  return {
    iconLocal: _(() => {
      if (n.value)
        return t.value ? t.value : $t.value.icons[r.value];
    })
  };
}
const Gc = {
  name: "AAlert",
  props: {
    alertClass: {
      type: [String, Object],
      required: !1,
      default: () => $t.value.propsDefault.alertClass
    },
    alertContentClass: {
      type: [String, Object],
      required: !1,
      default: () => $t.value.propsDefault.alertContentClass
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaAtomic: {
      type: Boolean,
      required: !1,
      default: !0
    },
    btnCloseAttributes: {
      type: Object,
      required: !1,
      default: () => $t.value.propsDefault.btnCloseAttributes
    },
    closable: {
      type: Boolean,
      required: !1,
      default: () => $t.value.propsDefault.closable
    },
    extra: {
      type: Object,
      required: !1,
      default: () => $t.value.propsDefault.extra
    },
    html: {
      type: String,
      required: !1,
      default: () => $t.value.propsDefault.html
    },
    icon: {
      type: String,
      required: !1,
      default: () => $t.value.propsDefault.icon
    },
    iconClass: {
      type: String,
      required: !1,
      default: () => $t.value.propsDefault.iconClass
    },
    isVisible: {
      type: Boolean,
      required: !1,
      default: () => $t.value.propsDefault.isVisible
    },
    removeAlertOnClose: {
      type: Boolean,
      required: !1,
      default: () => $t.value.propsDefault.removeAlertOnClose
    },
    role: {
      type: String,
      required: !1,
      default: "alert"
    },
    safeHtml: {
      type: String,
      required: !1,
      default: () => $t.value.propsDefault.safeHtml
    },
    showIcon: {
      type: Boolean,
      required: !1,
      default: () => $t.value.propsDefault.showIcon
    },
    text: {
      type: String,
      required: !1,
      default: () => $t.value.propsDefault.text
    },
    textClose: {
      type: String,
      required: !1,
      default: () => $t.value.propsDefault.textClose
    },
    type: {
      type: String,
      required: !1,
      default: () => $t.value.propsDefault.type
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      alertClassLocal: r
    } = _x(e), {
      close: s,
      isHidden: i
    } = dx(e, t), {
      iconLocal: o
    } = hx(e), {
      ariaAtomicLocal: u,
      roleLocal: f
    } = ux(e);
    return n({
      close: s,
      isHidden: i
    }), {
      alertClassLocal: r,
      ariaAtomicLocal: u,
      close: s,
      iconLocal: o,
      isHidden: i,
      roleLocal: f
    };
  },
  render() {
    return this.isHidden ? null : c("div", {
      class: [
        "a_alert__parent",
        {
          a_alert__parent_closable: this.closable
        }
      ]
    }, [
      c("div", {
        role: this.roleLocal,
        ariaAtomic: this.ariaAtomicLocal
      }, [
        this.isVisible && c("div", {
          class: [this.alertClass, this.alertClassLocal]
        }, [
          this.iconLocal && c(_t, {
            icon: this.iconLocal,
            class: [
              "a_alert__icon",
              this.iconClass
            ]
          }),
          c("div", {
            class: [
              "a_alert__content",
              this.alertContentClass
            ]
          }, [
            (this.html || this.text || this.safeHtml) && c(pe, {
              alwaysTranslate: this.alwaysTranslate,
              extra: this.extra,
              html: this.html,
              safeHtml: this.safeHtml,
              text: this.text
            }),
            this.$slots.default && this.$slots.default()
          ])
        ])
      ]),
      this.isVisible && this.closable && c(pt, {
        alwaysTranslate: this.alwaysTranslate,
        type: "button",
        class: "a_btn_close",
        textScreenReader: this.textClose,
        ...this.btnCloseAttributes,
        onClick: this.close
      })
    ]);
  }
};
function UT(e, { emit: t }) {
  return {
    clickEmit: (r) => {
      t("click", r);
    }
  };
}
const Gn = [
  "auto",
  "auto-start",
  "auto-end",
  "top",
  "top-start",
  "top-end",
  "right",
  "right-start",
  "right-end",
  "bottom",
  "bottom-start",
  "bottom-end",
  "left",
  "left-start",
  "left-end"
], pt = {
  name: "AButton",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaDisabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => at("a_btn_")
    },
    isSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    modelSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tabindex: {
      type: [Number, String],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Gn.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => ot(e) ? e === "auto" : pa(e)
    },
    type: {
      type: String,
      required: !1,
      default: "button",
      validator: (e) => ["button", "submit", "reset"].indexOf(e) !== -1
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      clickEmit: n
    } = UT(e, t);
    return {
      clickEmit: n
    };
  },
  render() {
    return c(Ee, {
      ...this.$attrs,
      ...this.$props,
      onClick: this.clickEmit
    }, this.$slots);
  }
};
var Mo = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Ax(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Fo = { exports: {} }, qE;
function Ex() {
  if (qE) return Fo.exports;
  qE = 1;
  function e() {
  }
  return e.prototype = {
    on: function(t, n, r) {
      var s = this.e || (this.e = {});
      return (s[t] || (s[t] = [])).push({
        fn: n,
        ctx: r
      }), this;
    },
    once: function(t, n, r) {
      var s = this;
      function i() {
        s.off(t, i), n.apply(r, arguments);
      }
      return i._ = n, this.on(t, i, r);
    },
    emit: function(t) {
      var n = [].slice.call(arguments, 1), r = ((this.e || (this.e = {}))[t] || []).slice(), s = 0, i = r.length;
      for (s; s < i; s++)
        r[s].fn.apply(r[s].ctx, n);
      return this;
    },
    off: function(t, n) {
      var r = this.e || (this.e = {}), s = r[t], i = [];
      if (s && n)
        for (var o = 0, u = s.length; o < u; o++)
          s[o].fn !== n && s[o].fn._ !== n && i.push(s[o]);
      return i.length ? r[t] = i : delete r[t], this;
    }
  }, Fo.exports = e, Fo.exports.TinyEmitter = e, Fo.exports;
}
var vd, $E;
function px() {
  if ($E) return vd;
  $E = 1;
  var e = Ex();
  return vd = new e(), vd;
}
var Tx = px();
const qo = /* @__PURE__ */ Ax(Tx), gt = {
  $on: (...e) => qo.on(...e),
  $once: (...e) => qo.once(...e),
  $off: (...e) => qo.off(...e),
  $emit: (...e) => qo.emit(...e)
}, iu = B(void 0);
function Wo(e) {
  iu.value = e, gt.$emit("updateViewOnResize", e), e ? document.body.classList.add("a_mobile") : document.body.classList.remove("a_mobile");
}
function Sn() {
  return {
    isMobileWidth: iu,
    setIsMobileWidth: Wo
  };
}
const Nu = B("de");
let xa = {};
const kT = B(/* @__PURE__ */ new Date()), jc = B(/* @__PURE__ */ new Date());
let Kc = {};
const Ti = B(!0), Sx = _(() => [
  Nu.value,
  kT.value,
  Ti.value
]);
rt(Sx, () => {
  Ix();
}, {
  immediate: !0
});
function Ni() {
  return {
    isTranslate: Ti,
    language: Nu,
    setI18n: HT,
    setLanguage: VT,
    toggleTranslate: bx,
    translationChanges: jc,
    updateI18n: Lx,
    updateI18nForLanguage: mx,
    updateTranslation: WT
  };
}
function HT(e = {}) {
  xa = e;
}
function Lx(e = {}) {
  xa = {
    ...xa,
    ...e
  };
}
function mx({ i18n: e = {}, language: t }) {
  xa[t] = xa[t] || {}, xa[t] = {
    ...xa[t] || {},
    ...e
  };
}
function VT(e = "") {
  Nu.value = e;
}
function bx(e) {
  Pe(e) ? Ti.value = !Ti.value : Ti.value = !!e;
}
function Ix() {
  Kc = xa[Nu.value], jc.value = /* @__PURE__ */ new Date();
}
function WT() {
  kT.value = /* @__PURE__ */ new Date();
}
const Jd = B({
  replaceText: void 0
}), vx = (e = {}) => {
  Ne(e == null ? void 0 : e.replaceText) && (Jd.value.replaceText = e == null ? void 0 : e.replaceText);
}, vhe = {
  install: (e, t, n, r = {}) => {
    HT(t), VT(n), WT(), vx(r);
  }
};
function Gs() {
  return {
    getTranslatedAttributes: Bu,
    getTranslatedText: Dt,
    getTranslationAttributes: zc,
    isPlaceholderTranslate: oa,
    replaceText: GT,
    spliceString: jT
  };
}
function oa(e = "") {
  return !(!ot(e) || e[0] !== "_" || e[e.length - 1] !== "_");
}
function Dt({ placeholder: e, translationObj: t = Kc, extra: n, alwaysTranslate: r = !1 }) {
  if (!t || !jc.value)
    return e;
  let s;
  return !r && !Ti.value ? s = e : s = se(t[e]) ? e : t[e], n ? GT({
    text: s,
    object: n
  }) : s;
}
function GT({ text: e = "", object: t }) {
  var s, i;
  if (Ne((s = Jd.value) == null ? void 0 : s.replaceText))
    return (i = Jd.value) == null ? void 0 : i.replaceText({ text: e, object: t });
  if (!st(t))
    return e;
  let n = e, r = 0;
  for (; ; ) {
    const o = n.indexOf("{{", r), u = n.indexOf("}}", r);
    if (o === -1 || u === -1)
      break;
    const f = n.slice(o + 2, u).trim(), A = ce(t, f);
    n = jT({
      text: n,
      replaceText: A,
      firstIndex: o,
      lastindex: u + 2
    }), r = o + `${A}`.length;
  }
  return n;
}
function jT({
  text: e = "",
  replaceText: t = "",
  firstIndex: n,
  lastindex: r
}) {
  return `${e.slice(0, n)}${t}${e.slice(r, e.length)}`;
}
function zc({ attr: e = "", value: t = "", translation: n = "", isTranslate: r = !0 }) {
  const s = {};
  return se(n) || (s[e] = n), r && (s[`data-translate-${e}`] = t), s;
}
function Bu({
  attr: e = "",
  placeholder: t = "",
  extra: n,
  translationObj: r = Kc
}) {
  const s = oa(t), i = Dt({
    placeholder: t,
    extra: n,
    translationObj: r,
    alwaysTranslate: !0
  });
  return zc({
    attr: e,
    value: t,
    translation: i,
    isTranslate: s
  });
}
function Yc(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "ariaLabel"), r = d(e, "extra"), {
    translationChanges: s
  } = Ni(), {
    isPlaceholderTranslate: i,
    getTranslatedText: o,
    getTranslationAttributes: u
  } = Gs(), {
    isMobileWidth: f
  } = Sn(), A = _(() => st(n.value) ? f.value ? n.value.mobile : n.value.desktop : n.value), E = _(() => !Pe(A.value)), p = _(() => !(!E.value || !i(A.value))), T = _(() => {
    if (s.value)
      return p.value ? o({
        placeholder: A.value,
        extra: r.value,
        alwaysTranslate: t.value
      }) : A.value;
  });
  return {
    ariaLabelAttributes: _(() => E.value ? u({
      attr: "aria-label",
      translation: T.value,
      value: A.value,
      isTranslate: p.value
    }) : {}),
    hasAriaLabel: E
  };
}
const yx = {
  button: !0,
  submit: !0,
  reset: !0
};
function Rx(e, {
  isRouterLink: t = _(() => !1),
  tagLocal: n = _(() => "")
}) {
  const r = d(e, "disabled"), s = d(e, "href"), i = d(e, "target"), o = d(e, "to"), u = d(e, "type"), f = _(() => {
    if (n.value === "button" && yx[u.value])
      return u.value;
  });
  return {
    toHrefAttributes: _(() => t.value ? {
      target: i.value,
      to: o.value
    } : r.value ? {} : {
      href: s.value,
      target: i.value
    }),
    typeAttribut: f
  };
}
function gx(e, { emit: t }) {
  const n = d(e, "prevent"), r = d(e, "stop"), s = d(e, "disabled"), i = d(e, "ariaDisabled");
  return {
    onClick: (u) => {
      n.value && u.preventDefault(), r.value && u.stopPropagation(), !(s.value || i.value) && t("click", {
        props: e,
        $event: u
      });
    }
  };
}
function Ox(e, {
  isTitleVisible: t = B(!1)
}) {
  const n = d(e, "id"), r = d(e, "minWidth"), s = d(e, "width"), i = d(e, "maxWidth"), o = d(e, "withoutAriaDescribedby"), u = _(() => {
    if (!o.value && t.value)
      return `${n.value}_title`;
  }), f = _(() => {
    const A = {};
    return se(r.value) || (A["min-width"] = `${r.value}px`), se(s.value) || (A.width = `${s.value}px`), se(i.value) || (A["max-width"] = `${i.value}px`), A;
  });
  return {
    ariaDescribedby: u,
    tooltipStyles: f
  };
}
const Cx = ["top", "right", "bottom", "left"], UE = ["start", "end"], kE = /* @__PURE__ */ Cx.reduce((e, t) => e.concat(t, t + "-" + UE[0], t + "-" + UE[1]), []), yi = Math.min, xs = Math.max, lu = Math.round, $o = Math.floor, kr = (e) => ({
  x: e,
  y: e
}), Dx = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, Nx = {
  start: "end",
  end: "start"
};
function Qd(e, t, n) {
  return xs(e, yi(t, n));
}
function Ua(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function Wr(e) {
  return e.split("-")[0];
}
function Hr(e) {
  return e.split("-")[1];
}
function Xc(e) {
  return e === "x" ? "y" : "x";
}
function Zc(e) {
  return e === "y" ? "height" : "width";
}
function Fa(e) {
  return ["top", "bottom"].includes(Wr(e)) ? "y" : "x";
}
function Jc(e) {
  return Xc(Fa(e));
}
function KT(e, t, n) {
  n === void 0 && (n = !1);
  const r = Hr(e), s = Jc(e), i = Zc(s);
  let o = s === "x" ? r === (n ? "end" : "start") ? "right" : "left" : r === "start" ? "bottom" : "top";
  return t.reference[i] > t.floating[i] && (o = uu(o)), [o, uu(o)];
}
function Bx(e) {
  const t = uu(e);
  return [ou(e), t, ou(t)];
}
function ou(e) {
  return e.replace(/start|end/g, (t) => Nx[t]);
}
function wx(e, t, n) {
  const r = ["left", "right"], s = ["right", "left"], i = ["top", "bottom"], o = ["bottom", "top"];
  switch (e) {
    case "top":
    case "bottom":
      return n ? t ? s : r : t ? r : s;
    case "left":
    case "right":
      return t ? i : o;
    default:
      return [];
  }
}
function Px(e, t, n, r) {
  const s = Hr(e);
  let i = wx(Wr(e), n === "start", r);
  return s && (i = i.map((o) => o + "-" + s), t && (i = i.concat(i.map(ou)))), i;
}
function uu(e) {
  return e.replace(/left|right|bottom|top/g, (t) => Dx[t]);
}
function xx(e) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...e
  };
}
function zT(e) {
  return typeof e != "number" ? xx(e) : {
    top: e,
    right: e,
    bottom: e,
    left: e
  };
}
function _u(e) {
  const {
    x: t,
    y: n,
    width: r,
    height: s
  } = e;
  return {
    width: r,
    height: s,
    top: n,
    left: t,
    right: t + r,
    bottom: n + s,
    x: t,
    y: n
  };
}
function HE(e, t, n) {
  let {
    reference: r,
    floating: s
  } = e;
  const i = Fa(t), o = Jc(t), u = Zc(o), f = Wr(t), A = i === "y", E = r.x + r.width / 2 - s.width / 2, p = r.y + r.height / 2 - s.height / 2, T = r[u] / 2 - s[u] / 2;
  let S;
  switch (f) {
    case "top":
      S = {
        x: E,
        y: r.y - s.height
      };
      break;
    case "bottom":
      S = {
        x: E,
        y: r.y + r.height
      };
      break;
    case "right":
      S = {
        x: r.x + r.width,
        y: p
      };
      break;
    case "left":
      S = {
        x: r.x - s.width,
        y: p
      };
      break;
    default:
      S = {
        x: r.x,
        y: r.y
      };
  }
  switch (Hr(t)) {
    case "start":
      S[o] -= T * (n && A ? -1 : 1);
      break;
    case "end":
      S[o] += T * (n && A ? -1 : 1);
      break;
  }
  return S;
}
const Mx = async (e, t, n) => {
  const {
    placement: r = "bottom",
    strategy: s = "absolute",
    middleware: i = [],
    platform: o
  } = n, u = i.filter(Boolean), f = await (o.isRTL == null ? void 0 : o.isRTL(t));
  let A = await o.getElementRects({
    reference: e,
    floating: t,
    strategy: s
  }), {
    x: E,
    y: p
  } = HE(A, r, f), T = r, S = {}, m = 0;
  for (let b = 0; b < u.length; b++) {
    const {
      name: I,
      fn: v
    } = u[b], {
      x: g,
      y: R,
      data: D,
      reset: w
    } = await v({
      x: E,
      y: p,
      initialPlacement: r,
      placement: T,
      strategy: s,
      middlewareData: S,
      rects: A,
      platform: o,
      elements: {
        reference: e,
        floating: t
      }
    });
    E = g ?? E, p = R ?? p, S = {
      ...S,
      [I]: {
        ...S[I],
        ...D
      }
    }, w && m <= 50 && (m++, typeof w == "object" && (w.placement && (T = w.placement), w.rects && (A = w.rects === !0 ? await o.getElementRects({
      reference: e,
      floating: t,
      strategy: s
    }) : w.rects), {
      x: E,
      y: p
    } = HE(A, T, f)), b = -1);
  }
  return {
    x: E,
    y: p,
    placement: T,
    strategy: s,
    middlewareData: S
  };
};
async function Qc(e, t) {
  var n;
  t === void 0 && (t = {});
  const {
    x: r,
    y: s,
    platform: i,
    rects: o,
    elements: u,
    strategy: f
  } = e, {
    boundary: A = "clippingAncestors",
    rootBoundary: E = "viewport",
    elementContext: p = "floating",
    altBoundary: T = !1,
    padding: S = 0
  } = Ua(t, e), m = zT(S), I = u[T ? p === "floating" ? "reference" : "floating" : p], v = _u(await i.getClippingRect({
    element: (n = await (i.isElement == null ? void 0 : i.isElement(I))) == null || n ? I : I.contextElement || await (i.getDocumentElement == null ? void 0 : i.getDocumentElement(u.floating)),
    boundary: A,
    rootBoundary: E,
    strategy: f
  })), g = p === "floating" ? {
    x: r,
    y: s,
    width: o.floating.width,
    height: o.floating.height
  } : o.reference, R = await (i.getOffsetParent == null ? void 0 : i.getOffsetParent(u.floating)), D = await (i.isElement == null ? void 0 : i.isElement(R)) ? await (i.getScale == null ? void 0 : i.getScale(R)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, w = _u(i.convertOffsetParentRelativeRectToViewportRelativeRect ? await i.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements: u,
    rect: g,
    offsetParent: R,
    strategy: f
  }) : g);
  return {
    top: (v.top - w.top + m.top) / D.y,
    bottom: (w.bottom - v.bottom + m.bottom) / D.y,
    left: (v.left - w.left + m.left) / D.x,
    right: (w.right - v.right + m.right) / D.x
  };
}
const Fx = (e) => ({
  name: "arrow",
  options: e,
  async fn(t) {
    const {
      x: n,
      y: r,
      placement: s,
      rects: i,
      platform: o,
      elements: u,
      middlewareData: f
    } = t, {
      element: A,
      padding: E = 0
    } = Ua(e, t) || {};
    if (A == null)
      return {};
    const p = zT(E), T = {
      x: n,
      y: r
    }, S = Jc(s), m = Zc(S), b = await o.getDimensions(A), I = S === "y", v = I ? "top" : "left", g = I ? "bottom" : "right", R = I ? "clientHeight" : "clientWidth", D = i.reference[m] + i.reference[S] - T[S] - i.floating[m], w = T[S] - i.reference[S], F = await (o.getOffsetParent == null ? void 0 : o.getOffsetParent(A));
    let P = F ? F[R] : 0;
    (!P || !await (o.isElement == null ? void 0 : o.isElement(F))) && (P = u.floating[R] || i.floating[m]);
    const M = D / 2 - w / 2, O = P / 2 - b[m] / 2 - 1, q = yi(p[v], O), U = yi(p[g], O), G = q, te = P - b[m] - U, re = P / 2 - b[m] / 2 + M, ie = Qd(G, re, te), le = !f.arrow && Hr(s) != null && re !== ie && i.reference[m] / 2 - (re < G ? q : U) - b[m] / 2 < 0, oe = le ? re < G ? re - G : re - te : 0;
    return {
      [S]: T[S] + oe,
      data: {
        [S]: ie,
        centerOffset: re - ie - oe,
        ...le && {
          alignmentOffset: oe
        }
      },
      reset: le
    };
  }
});
function qx(e, t, n) {
  return (e ? [...n.filter((s) => Hr(s) === e), ...n.filter((s) => Hr(s) !== e)] : n.filter((s) => Wr(s) === s)).filter((s) => e ? Hr(s) === e || (t ? ou(s) !== s : !1) : !0);
}
const $x = function(e) {
  return e === void 0 && (e = {}), {
    name: "autoPlacement",
    options: e,
    async fn(t) {
      var n, r, s;
      const {
        rects: i,
        middlewareData: o,
        placement: u,
        platform: f,
        elements: A
      } = t, {
        crossAxis: E = !1,
        alignment: p,
        allowedPlacements: T = kE,
        autoAlignment: S = !0,
        ...m
      } = Ua(e, t), b = p !== void 0 || T === kE ? qx(p || null, S, T) : T, I = await Qc(t, m), v = ((n = o.autoPlacement) == null ? void 0 : n.index) || 0, g = b[v];
      if (g == null)
        return {};
      const R = KT(g, i, await (f.isRTL == null ? void 0 : f.isRTL(A.floating)));
      if (u !== g)
        return {
          reset: {
            placement: b[0]
          }
        };
      const D = [I[Wr(g)], I[R[0]], I[R[1]]], w = [...((r = o.autoPlacement) == null ? void 0 : r.overflows) || [], {
        placement: g,
        overflows: D
      }], F = b[v + 1];
      if (F)
        return {
          data: {
            index: v + 1,
            overflows: w
          },
          reset: {
            placement: F
          }
        };
      const P = w.map((q) => {
        const U = Hr(q.placement);
        return [q.placement, U && E ? (
          // Check along the mainAxis and main crossAxis side.
          q.overflows.slice(0, 2).reduce((G, te) => G + te, 0)
        ) : (
          // Check only the mainAxis.
          q.overflows[0]
        ), q.overflows];
      }).sort((q, U) => q[1] - U[1]), O = ((s = P.filter((q) => q[2].slice(
        0,
        // Aligned placements should not check their opposite crossAxis
        // side.
        Hr(q[0]) ? 2 : 3
      ).every((U) => U <= 0))[0]) == null ? void 0 : s[0]) || P[0][0];
      return O !== u ? {
        data: {
          index: v + 1,
          overflows: w
        },
        reset: {
          placement: O
        }
      } : {};
    }
  };
}, Ux = function(e) {
  return e === void 0 && (e = {}), {
    name: "flip",
    options: e,
    async fn(t) {
      var n, r;
      const {
        placement: s,
        middlewareData: i,
        rects: o,
        initialPlacement: u,
        platform: f,
        elements: A
      } = t, {
        mainAxis: E = !0,
        crossAxis: p = !0,
        fallbackPlacements: T,
        fallbackStrategy: S = "bestFit",
        fallbackAxisSideDirection: m = "none",
        flipAlignment: b = !0,
        ...I
      } = Ua(e, t);
      if ((n = i.arrow) != null && n.alignmentOffset)
        return {};
      const v = Wr(s), g = Fa(u), R = Wr(u) === u, D = await (f.isRTL == null ? void 0 : f.isRTL(A.floating)), w = T || (R || !b ? [uu(u)] : Bx(u)), F = m !== "none";
      !T && F && w.push(...Px(u, b, m, D));
      const P = [u, ...w], M = await Qc(t, I), O = [];
      let q = ((r = i.flip) == null ? void 0 : r.overflows) || [];
      if (E && O.push(M[v]), p) {
        const ie = KT(s, o, D);
        O.push(M[ie[0]], M[ie[1]]);
      }
      if (q = [...q, {
        placement: s,
        overflows: O
      }], !O.every((ie) => ie <= 0)) {
        var U, G;
        const ie = (((U = i.flip) == null ? void 0 : U.index) || 0) + 1, le = P[ie];
        if (le) {
          var te;
          const Te = p === "alignment" ? g !== Fa(le) : !1, Be = ((te = q[0]) == null ? void 0 : te.overflows[0]) > 0;
          if (!Te || Be)
            return {
              data: {
                index: ie,
                overflows: q
              },
              reset: {
                placement: le
              }
            };
        }
        let oe = (G = q.filter((Te) => Te.overflows[0] <= 0).sort((Te, Be) => Te.overflows[1] - Be.overflows[1])[0]) == null ? void 0 : G.placement;
        if (!oe)
          switch (S) {
            case "bestFit": {
              var re;
              const Te = (re = q.filter((Be) => {
                if (F) {
                  const Ae = Fa(Be.placement);
                  return Ae === g || // Create a bias to the `y` side axis due to horizontal
                  // reading directions favoring greater width.
                  Ae === "y";
                }
                return !0;
              }).map((Be) => [Be.placement, Be.overflows.filter((Ae) => Ae > 0).reduce((Ae, _e) => Ae + _e, 0)]).sort((Be, Ae) => Be[1] - Ae[1])[0]) == null ? void 0 : re[0];
              Te && (oe = Te);
              break;
            }
            case "initialPlacement":
              oe = u;
              break;
          }
        if (s !== oe)
          return {
            reset: {
              placement: oe
            }
          };
      }
      return {};
    }
  };
};
async function kx(e, t) {
  const {
    placement: n,
    platform: r,
    elements: s
  } = e, i = await (r.isRTL == null ? void 0 : r.isRTL(s.floating)), o = Wr(n), u = Hr(n), f = Fa(n) === "y", A = ["left", "top"].includes(o) ? -1 : 1, E = i && f ? -1 : 1, p = Ua(t, e);
  let {
    mainAxis: T,
    crossAxis: S,
    alignmentAxis: m
  } = typeof p == "number" ? {
    mainAxis: p,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: p.mainAxis || 0,
    crossAxis: p.crossAxis || 0,
    alignmentAxis: p.alignmentAxis
  };
  return u && typeof m == "number" && (S = u === "end" ? m * -1 : m), f ? {
    x: S * E,
    y: T * A
  } : {
    x: T * A,
    y: S * E
  };
}
const Hx = function(e) {
  return e === void 0 && (e = 0), {
    name: "offset",
    options: e,
    async fn(t) {
      var n, r;
      const {
        x: s,
        y: i,
        placement: o,
        middlewareData: u
      } = t, f = await kx(t, e);
      return o === ((n = u.offset) == null ? void 0 : n.placement) && (r = u.arrow) != null && r.alignmentOffset ? {} : {
        x: s + f.x,
        y: i + f.y,
        data: {
          ...f,
          placement: o
        }
      };
    }
  };
}, Vx = function(e) {
  return e === void 0 && (e = {}), {
    name: "shift",
    options: e,
    async fn(t) {
      const {
        x: n,
        y: r,
        placement: s
      } = t, {
        mainAxis: i = !0,
        crossAxis: o = !1,
        limiter: u = {
          fn: (I) => {
            let {
              x: v,
              y: g
            } = I;
            return {
              x: v,
              y: g
            };
          }
        },
        ...f
      } = Ua(e, t), A = {
        x: n,
        y: r
      }, E = await Qc(t, f), p = Fa(Wr(s)), T = Xc(p);
      let S = A[T], m = A[p];
      if (i) {
        const I = T === "y" ? "top" : "left", v = T === "y" ? "bottom" : "right", g = S + E[I], R = S - E[v];
        S = Qd(g, S, R);
      }
      if (o) {
        const I = p === "y" ? "top" : "left", v = p === "y" ? "bottom" : "right", g = m + E[I], R = m - E[v];
        m = Qd(g, m, R);
      }
      const b = u.fn({
        ...t,
        [T]: S,
        [p]: m
      });
      return {
        ...b,
        data: {
          x: b.x - n,
          y: b.y - r,
          enabled: {
            [T]: i,
            [p]: o
          }
        }
      };
    }
  };
}, Wx = function(e) {
  return e === void 0 && (e = {}), {
    options: e,
    fn(t) {
      const {
        x: n,
        y: r,
        placement: s,
        rects: i,
        middlewareData: o
      } = t, {
        offset: u = 0,
        mainAxis: f = !0,
        crossAxis: A = !0
      } = Ua(e, t), E = {
        x: n,
        y: r
      }, p = Fa(s), T = Xc(p);
      let S = E[T], m = E[p];
      const b = Ua(u, t), I = typeof b == "number" ? {
        mainAxis: b,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...b
      };
      if (f) {
        const R = T === "y" ? "height" : "width", D = i.reference[T] - i.floating[R] + I.mainAxis, w = i.reference[T] + i.reference[R] - I.mainAxis;
        S < D ? S = D : S > w && (S = w);
      }
      if (A) {
        var v, g;
        const R = T === "y" ? "width" : "height", D = ["top", "left"].includes(Wr(s)), w = i.reference[p] - i.floating[R] + (D && ((v = o.offset) == null ? void 0 : v[p]) || 0) + (D ? 0 : I.crossAxis), F = i.reference[p] + i.reference[R] + (D ? 0 : ((g = o.offset) == null ? void 0 : g[p]) || 0) - (D ? I.crossAxis : 0);
        m < w ? m = w : m > F && (m = F);
      }
      return {
        [T]: S,
        [p]: m
      };
    }
  };
};
function wu() {
  return typeof window < "u";
}
function js(e) {
  return ef(e) ? (e.nodeName || "").toLowerCase() : "#document";
}
function kn(e) {
  var t;
  return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;
}
function zr(e) {
  var t;
  return (t = (ef(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement;
}
function ef(e) {
  return wu() ? e instanceof Node || e instanceof kn(e).Node : !1;
}
function Rr(e) {
  return wu() ? e instanceof Element || e instanceof kn(e).Element : !1;
}
function Gr(e) {
  return wu() ? e instanceof HTMLElement || e instanceof kn(e).HTMLElement : !1;
}
function VE(e) {
  return !wu() || typeof ShadowRoot > "u" ? !1 : e instanceof ShadowRoot || e instanceof kn(e).ShadowRoot;
}
function Bl(e) {
  const {
    overflow: t,
    overflowX: n,
    overflowY: r,
    display: s
  } = gr(e);
  return /auto|scroll|overlay|hidden|clip/.test(t + r + n) && !["inline", "contents"].includes(s);
}
function Gx(e) {
  return ["table", "td", "th"].includes(js(e));
}
function Pu(e) {
  return [":popover-open", ":modal"].some((t) => {
    try {
      return e.matches(t);
    } catch {
      return !1;
    }
  });
}
function tf(e) {
  const t = nf(), n = Rr(e) ? gr(e) : e;
  return ["transform", "translate", "scale", "rotate", "perspective"].some((r) => n[r] ? n[r] !== "none" : !1) || (n.containerType ? n.containerType !== "normal" : !1) || !t && (n.backdropFilter ? n.backdropFilter !== "none" : !1) || !t && (n.filter ? n.filter !== "none" : !1) || ["transform", "translate", "scale", "rotate", "perspective", "filter"].some((r) => (n.willChange || "").includes(r)) || ["paint", "layout", "strict", "content"].some((r) => (n.contain || "").includes(r));
}
function jx(e) {
  let t = ka(e);
  for (; Gr(t) && !Ri(t); ) {
    if (tf(t))
      return t;
    if (Pu(t))
      return null;
    t = ka(t);
  }
  return null;
}
function nf() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
function Ri(e) {
  return ["html", "body", "#document"].includes(js(e));
}
function gr(e) {
  return kn(e).getComputedStyle(e);
}
function xu(e) {
  return Rr(e) ? {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  } : {
    scrollLeft: e.scrollX,
    scrollTop: e.scrollY
  };
}
function ka(e) {
  if (js(e) === "html")
    return e;
  const t = (
    // Step into the shadow DOM of the parent of a slotted node.
    e.assignedSlot || // DOM Element detected.
    e.parentNode || // ShadowRoot detected.
    VE(e) && e.host || // Fallback.
    zr(e)
  );
  return VE(t) ? t.host : t;
}
function YT(e) {
  const t = ka(e);
  return Ri(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : Gr(t) && Bl(t) ? t : YT(t);
}
function ml(e, t, n) {
  var r;
  t === void 0 && (t = []), n === void 0 && (n = !0);
  const s = YT(e), i = s === ((r = e.ownerDocument) == null ? void 0 : r.body), o = kn(s);
  if (i) {
    const u = ec(o);
    return t.concat(o, o.visualViewport || [], Bl(s) ? s : [], u && n ? ml(u) : []);
  }
  return t.concat(s, ml(s, [], n));
}
function ec(e) {
  return e.parent && Object.getPrototypeOf(e.parent) ? e.frameElement : null;
}
function XT(e) {
  const t = gr(e);
  let n = parseFloat(t.width) || 0, r = parseFloat(t.height) || 0;
  const s = Gr(e), i = s ? e.offsetWidth : n, o = s ? e.offsetHeight : r, u = lu(n) !== i || lu(r) !== o;
  return u && (n = i, r = o), {
    width: n,
    height: r,
    $: u
  };
}
function rf(e) {
  return Rr(e) ? e : e.contextElement;
}
function Si(e) {
  const t = rf(e);
  if (!Gr(t))
    return kr(1);
  const n = t.getBoundingClientRect(), {
    width: r,
    height: s,
    $: i
  } = XT(t);
  let o = (i ? lu(n.width) : n.width) / r, u = (i ? lu(n.height) : n.height) / s;
  return (!o || !Number.isFinite(o)) && (o = 1), (!u || !Number.isFinite(u)) && (u = 1), {
    x: o,
    y: u
  };
}
const Kx = /* @__PURE__ */ kr(0);
function ZT(e) {
  const t = kn(e);
  return !nf() || !t.visualViewport ? Kx : {
    x: t.visualViewport.offsetLeft,
    y: t.visualViewport.offsetTop
  };
}
function zx(e, t, n) {
  return t === void 0 && (t = !1), !n || t && n !== kn(e) ? !1 : t;
}
function $s(e, t, n, r) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  const s = e.getBoundingClientRect(), i = rf(e);
  let o = kr(1);
  t && (r ? Rr(r) && (o = Si(r)) : o = Si(e));
  const u = zx(i, n, r) ? ZT(i) : kr(0);
  let f = (s.left + u.x) / o.x, A = (s.top + u.y) / o.y, E = s.width / o.x, p = s.height / o.y;
  if (i) {
    const T = kn(i), S = r && Rr(r) ? kn(r) : r;
    let m = T, b = ec(m);
    for (; b && r && S !== m; ) {
      const I = Si(b), v = b.getBoundingClientRect(), g = gr(b), R = v.left + (b.clientLeft + parseFloat(g.paddingLeft)) * I.x, D = v.top + (b.clientTop + parseFloat(g.paddingTop)) * I.y;
      f *= I.x, A *= I.y, E *= I.x, p *= I.y, f += R, A += D, m = kn(b), b = ec(m);
    }
  }
  return _u({
    width: E,
    height: p,
    x: f,
    y: A
  });
}
function af(e, t) {
  const n = xu(e).scrollLeft;
  return t ? t.left + n : $s(zr(e)).left + n;
}
function JT(e, t, n) {
  n === void 0 && (n = !1);
  const r = e.getBoundingClientRect(), s = r.left + t.scrollLeft - (n ? 0 : (
    // RTL <body> scrollbar.
    af(e, r)
  )), i = r.top + t.scrollTop;
  return {
    x: s,
    y: i
  };
}
function Yx(e) {
  let {
    elements: t,
    rect: n,
    offsetParent: r,
    strategy: s
  } = e;
  const i = s === "fixed", o = zr(r), u = t ? Pu(t.floating) : !1;
  if (r === o || u && i)
    return n;
  let f = {
    scrollLeft: 0,
    scrollTop: 0
  }, A = kr(1);
  const E = kr(0), p = Gr(r);
  if ((p || !p && !i) && ((js(r) !== "body" || Bl(o)) && (f = xu(r)), Gr(r))) {
    const S = $s(r);
    A = Si(r), E.x = S.x + r.clientLeft, E.y = S.y + r.clientTop;
  }
  const T = o && !p && !i ? JT(o, f, !0) : kr(0);
  return {
    width: n.width * A.x,
    height: n.height * A.y,
    x: n.x * A.x - f.scrollLeft * A.x + E.x + T.x,
    y: n.y * A.y - f.scrollTop * A.y + E.y + T.y
  };
}
function Xx(e) {
  return Array.from(e.getClientRects());
}
function Zx(e) {
  const t = zr(e), n = xu(e), r = e.ownerDocument.body, s = xs(t.scrollWidth, t.clientWidth, r.scrollWidth, r.clientWidth), i = xs(t.scrollHeight, t.clientHeight, r.scrollHeight, r.clientHeight);
  let o = -n.scrollLeft + af(e);
  const u = -n.scrollTop;
  return gr(r).direction === "rtl" && (o += xs(t.clientWidth, r.clientWidth) - s), {
    width: s,
    height: i,
    x: o,
    y: u
  };
}
function Jx(e, t) {
  const n = kn(e), r = zr(e), s = n.visualViewport;
  let i = r.clientWidth, o = r.clientHeight, u = 0, f = 0;
  if (s) {
    i = s.width, o = s.height;
    const A = nf();
    (!A || A && t === "fixed") && (u = s.offsetLeft, f = s.offsetTop);
  }
  return {
    width: i,
    height: o,
    x: u,
    y: f
  };
}
function Qx(e, t) {
  const n = $s(e, !0, t === "fixed"), r = n.top + e.clientTop, s = n.left + e.clientLeft, i = Gr(e) ? Si(e) : kr(1), o = e.clientWidth * i.x, u = e.clientHeight * i.y, f = s * i.x, A = r * i.y;
  return {
    width: o,
    height: u,
    x: f,
    y: A
  };
}
function WE(e, t, n) {
  let r;
  if (t === "viewport")
    r = Jx(e, n);
  else if (t === "document")
    r = Zx(zr(e));
  else if (Rr(t))
    r = Qx(t, n);
  else {
    const s = ZT(e);
    r = {
      x: t.x - s.x,
      y: t.y - s.y,
      width: t.width,
      height: t.height
    };
  }
  return _u(r);
}
function QT(e, t) {
  const n = ka(e);
  return n === t || !Rr(n) || Ri(n) ? !1 : gr(n).position === "fixed" || QT(n, t);
}
function eM(e, t) {
  const n = t.get(e);
  if (n)
    return n;
  let r = ml(e, [], !1).filter((u) => Rr(u) && js(u) !== "body"), s = null;
  const i = gr(e).position === "fixed";
  let o = i ? ka(e) : e;
  for (; Rr(o) && !Ri(o); ) {
    const u = gr(o), f = tf(o);
    !f && u.position === "fixed" && (s = null), (i ? !f && !s : !f && u.position === "static" && !!s && ["absolute", "fixed"].includes(s.position) || Bl(o) && !f && QT(e, o)) ? r = r.filter((E) => E !== o) : s = u, o = ka(o);
  }
  return t.set(e, r), r;
}
function tM(e) {
  let {
    element: t,
    boundary: n,
    rootBoundary: r,
    strategy: s
  } = e;
  const o = [...n === "clippingAncestors" ? Pu(t) ? [] : eM(t, this._c) : [].concat(n), r], u = o[0], f = o.reduce((A, E) => {
    const p = WE(t, E, s);
    return A.top = xs(p.top, A.top), A.right = yi(p.right, A.right), A.bottom = yi(p.bottom, A.bottom), A.left = xs(p.left, A.left), A;
  }, WE(t, u, s));
  return {
    width: f.right - f.left,
    height: f.bottom - f.top,
    x: f.left,
    y: f.top
  };
}
function nM(e) {
  const {
    width: t,
    height: n
  } = XT(e);
  return {
    width: t,
    height: n
  };
}
function rM(e, t, n) {
  const r = Gr(t), s = zr(t), i = n === "fixed", o = $s(e, !0, i, t);
  let u = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const f = kr(0);
  function A() {
    f.x = af(s);
  }
  if (r || !r && !i)
    if ((js(t) !== "body" || Bl(s)) && (u = xu(t)), r) {
      const S = $s(t, !0, i, t);
      f.x = S.x + t.clientLeft, f.y = S.y + t.clientTop;
    } else s && A();
  i && !r && s && A();
  const E = s && !r && !i ? JT(s, u) : kr(0), p = o.left + u.scrollLeft - f.x - E.x, T = o.top + u.scrollTop - f.y - E.y;
  return {
    x: p,
    y: T,
    width: o.width,
    height: o.height
  };
}
function yd(e) {
  return gr(e).position === "static";
}
function GE(e, t) {
  if (!Gr(e) || gr(e).position === "fixed")
    return null;
  if (t)
    return t(e);
  let n = e.offsetParent;
  return zr(e) === n && (n = n.ownerDocument.body), n;
}
function eS(e, t) {
  const n = kn(e);
  if (Pu(e))
    return n;
  if (!Gr(e)) {
    let s = ka(e);
    for (; s && !Ri(s); ) {
      if (Rr(s) && !yd(s))
        return s;
      s = ka(s);
    }
    return n;
  }
  let r = GE(e, t);
  for (; r && Gx(r) && yd(r); )
    r = GE(r, t);
  return r && Ri(r) && yd(r) && !tf(r) ? n : r || jx(e) || n;
}
const aM = async function(e) {
  const t = this.getOffsetParent || eS, n = this.getDimensions, r = await n(e.floating);
  return {
    reference: rM(e.reference, await t(e.floating), e.strategy),
    floating: {
      x: 0,
      y: 0,
      width: r.width,
      height: r.height
    }
  };
};
function sM(e) {
  return gr(e).direction === "rtl";
}
const iM = {
  convertOffsetParentRelativeRectToViewportRelativeRect: Yx,
  getDocumentElement: zr,
  getClippingRect: tM,
  getOffsetParent: eS,
  getElementRects: aM,
  getClientRects: Xx,
  getDimensions: nM,
  getScale: Si,
  isElement: Rr,
  isRTL: sM
};
function tS(e, t) {
  return e.x === t.x && e.y === t.y && e.width === t.width && e.height === t.height;
}
function lM(e, t) {
  let n = null, r;
  const s = zr(e);
  function i() {
    var u;
    clearTimeout(r), (u = n) == null || u.disconnect(), n = null;
  }
  function o(u, f) {
    u === void 0 && (u = !1), f === void 0 && (f = 1), i();
    const A = e.getBoundingClientRect(), {
      left: E,
      top: p,
      width: T,
      height: S
    } = A;
    if (u || t(), !T || !S)
      return;
    const m = $o(p), b = $o(s.clientWidth - (E + T)), I = $o(s.clientHeight - (p + S)), v = $o(E), R = {
      rootMargin: -m + "px " + -b + "px " + -I + "px " + -v + "px",
      threshold: xs(0, yi(1, f)) || 1
    };
    let D = !0;
    function w(F) {
      const P = F[0].intersectionRatio;
      if (P !== f) {
        if (!D)
          return o();
        P ? o(!1, P) : r = setTimeout(() => {
          o(!1, 1e-7);
        }, 1e3);
      }
      P === 1 && !tS(A, e.getBoundingClientRect()) && o(), D = !1;
    }
    try {
      n = new IntersectionObserver(w, {
        ...R,
        // Handle <iframe>s
        root: s.ownerDocument
      });
    } catch {
      n = new IntersectionObserver(w, R);
    }
    n.observe(e);
  }
  return o(!0), i;
}
function wl(e, t, n, r) {
  r === void 0 && (r = {});
  const {
    ancestorScroll: s = !0,
    ancestorResize: i = !0,
    elementResize: o = typeof ResizeObserver == "function",
    layoutShift: u = typeof IntersectionObserver == "function",
    animationFrame: f = !1
  } = r, A = rf(e), E = s || i ? [...A ? ml(A) : [], ...ml(t)] : [];
  E.forEach((v) => {
    s && v.addEventListener("scroll", n, {
      passive: !0
    }), i && v.addEventListener("resize", n);
  });
  const p = A && u ? lM(A, n) : null;
  let T = -1, S = null;
  o && (S = new ResizeObserver((v) => {
    let [g] = v;
    g && g.target === A && S && (S.unobserve(t), cancelAnimationFrame(T), T = requestAnimationFrame(() => {
      var R;
      (R = S) == null || R.observe(t);
    })), n();
  }), A && !f && S.observe(A), S.observe(t));
  let m, b = f ? $s(e) : null;
  f && I();
  function I() {
    const v = $s(e);
    b && !tS(b, v) && n(), b = v, m = requestAnimationFrame(I);
  }
  return n(), () => {
    var v;
    E.forEach((g) => {
      s && g.removeEventListener("scroll", n), i && g.removeEventListener("resize", n);
    }), p == null || p(), (v = S) == null || v.disconnect(), S = null, f && cancelAnimationFrame(m);
  };
}
const oM = Hx, uM = $x, Pl = Vx, xl = Ux, _M = Fx, Mu = Wx, Ml = (e, t, n) => {
  const r = /* @__PURE__ */ new Map(), s = {
    platform: iM,
    ...n
  }, i = {
    ...s.platform,
    _c: r
  };
  return Mx(e, t, {
    ...s,
    platform: i
  });
};
function dM(e) {
  return e != null && typeof e == "object" && "$el" in e;
}
function cM(e) {
  if (dM(e)) {
    const t = e.$el;
    return ef(t) && js(t) === "#comment" ? null : t;
  }
  return e;
}
function fM(e) {
  return typeof e == "function" ? e() : Fg(e);
}
function hM(e) {
  return {
    name: "arrow",
    options: e,
    fn(t) {
      const n = cM(fM(e.element));
      return n == null ? {} : _M({
        element: n,
        padding: e.padding
      }).fn(t);
    }
  };
}
const Z = {
  arrowDown: 40,
  arrowLeft: 37,
  arrowRight: 39,
  arrowUp: 38,
  e: 69,
  enter: 13,
  escape: 27,
  minus: 189,
  numMinus: 109,
  numPlus: 107,
  plus: 187,
  space: 32,
  tab: 9,
  backspace: 8,
  del: 46,
  home: 36,
  end: 35
};
function AM(e) {
  const t = d(e, "id"), n = d(e, "offsetDistance"), r = d(e, "offsetSkidding"), s = d(e, "placement"), i = d(e, "timeClose"), o = B(void 0), u = B(void 0), f = B(!1), A = B(void 0), E = B(void 0), p = B(void 0), T = _(() => document.getElementById(t.value)), S = _(() => s.value && s.value.includes("auto")), m = _(() => [
    oM({
      mainAxis: n.value || 0,
      crossAxis: r.value || 0,
      alignmentAxis: null
    }),
    S.value ? uM() : xl(),
    Pl({ limiter: Mu() }),
    E.value && hM({
      element: E.value,
      padding: 5
    })
  ]), b = (U) => {
    U.keyCode === Z.escape && q();
  }, I = () => {
    document.addEventListener("keydown", b);
  }, v = () => {
    document.removeEventListener("keydown", b);
  }, g = () => {
    gt.$on("closeHtmlTitle", q);
  }, R = () => {
    gt.$off("closeHtmlTitle", q);
  }, D = () => {
    o.value && (o.value(), o.value = void 0);
  }, w = () => {
    A.value = setTimeout(() => {
      q();
    }, i.value);
  }, F = () => {
    if (f.value) {
      clearTimeout(A.value);
      return;
    }
    f.value = !0;
  }, P = () => {
    o.value || !T.value || !p.value || (o.value = wl(T.value, p.value, () => {
      !T.value || !p.value || Ml(
        T.value,
        p.value,
        {
          placement: s.value,
          middleware: m.value
        }
      ).then(({ x: U, y: G, middlewareData: te, placement: re }) => {
        Object.assign(p.value.style, {
          left: `${U}px`,
          top: `${G}px`
        });
        const ie = re.split("-")[0], le = {
          top: "bottom",
          right: "left",
          bottom: "top",
          left: "right"
        }[ie];
        if (te.arrow) {
          const { x: oe, y: Te } = te.arrow;
          Object.assign(E.value.style, {
            left: se(oe) ? "" : `${oe}px`,
            top: se(Te) ? "" : `${Te}px`,
            [le]: `${-E.value.offsetWidth / 2}px`
          });
        }
      });
    }), gt.$emit("closeHtmlTitle"), g(), I());
  }, M = () => {
    clearTimeout(A.value);
  }, O = () => {
    w();
  };
  function q() {
    clearTimeout(A.value), D(), R(), v(), f.value = !1;
  }
  return {
    closeTitle: q,
    closeTitleWithTimer: w,
    componentRef: u,
    isTitleVisible: f,
    mouseEnterTooltip: M,
    mouseLeaveTooltip: O,
    showTitle: F,
    startPopper: P,
    titleArrowRef: E,
    titleRef: p
  };
}
function sf(e) {
  const t = d(e, "popperContainerId"), n = _(() => `#${t.value}`);
  return {
    addPopperContainerInBody: ({ className: s = "a_popup_container" } = {}) => {
      if (!document.getElementById(t.value)) {
        const o = document.createElement("div");
        o.id = t.value, o.className = s, document.body.prepend(o);
      }
    },
    popperContainerIdSelector: n
  };
}
const EM = ["RouterLink", "router-link"];
function pM(e) {
  const t = d(e, "tag");
  return {
    tagLocal: _(() => EM.indexOf(t.value) !== -1 ? Vr(t.value) : t.value)
  };
}
function TM(e, {
  showTitle: t = () => {
  },
  closeTitle: n = () => {
  },
  closeTitleWithTimer: r = () => {
  }
}) {
  const s = d(e, "isHide");
  return {
    onBlur: () => {
      n();
    },
    onFocus: () => {
      s.value || t();
    },
    onMouseenter: () => {
      s.value || t();
    },
    onMouseleave: () => {
      r();
    }
  };
}
const bl = {
  /*
   * called before bound element's attributes
   * or event listeners are applied
   */
  created(e, t) {
    var n;
    Ne((n = t.value) == null ? void 0 : n.created) && t.value.created(e, t);
  },
  // called right before the element is inserted into the DOM.
  beforeMount(e, t) {
    var n;
    Ne((n = t.value) == null ? void 0 : n.beforeMount) && t.value.beforeMount(e, t);
  },
  /*
   * called when the bound element's parent component
   * and all its children are mounted.
   */
  mounted(e, t) {
    var n;
    Ne((n = t.value) == null ? void 0 : n.mounted) && t.value.mounted(e, t);
  },
  // called before the parent component is unmounted
  beforeUnmount(e, t) {
    var n;
    Ne((n = t.value) == null ? void 0 : n.beforeUnmount) && t.value.beforeUnmount(e, t);
  },
  // called when the parent component is unmounted
  unmounted(e, t) {
    var n;
    Ne((n = t.value) == null ? void 0 : n.unmounted) && t.value.unmounted(e, t);
  }
}, SM = {
  name: "ATooltip",
  props: {
    arrowPadding: {
      type: [Number, Function],
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => at("a_tooltip_")
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    maxWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    minWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    offsetDistance: {
      type: Number,
      required: !1,
      default: 6
    },
    offsetSkidding: {
      type: Number,
      required: !1,
      default: 0
    },
    placement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Gn.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: "a_tooltip_container"
    },
    showArrow: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tag: {
      type: String,
      required: !1,
      default: "span"
    },
    timeClose: {
      type: Number,
      required: !1,
      default: 100,
      validator: (e) => e >= 0
    },
    width: {
      type: Number,
      required: !1,
      default: void 0
    },
    withoutAriaDescribedby: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      closeTitle: t,
      closeTitleWithTimer: n,
      componentRef: r,
      isTitleVisible: s,
      mouseEnterTooltip: i,
      mouseLeaveTooltip: o,
      showTitle: u,
      startPopper: f,
      titleArrowRef: A,
      titleRef: E
    } = AM(e), {
      onBlur: p,
      onFocus: T,
      onMouseenter: S,
      onMouseleave: m
    } = TM(e, {
      showTitle: u,
      closeTitle: t,
      closeTitleWithTimer: n
    }), {
      tagLocal: b
    } = pM(e), {
      ariaDescribedby: I,
      tooltipStyles: v
    } = Ox(e, {
      isTitleVisible: s
    }), {
      addPopperContainerInBody: g,
      popperContainerIdSelector: R
    } = sf(e);
    return g(), Ot(() => {
      t();
    }), {
      ariaDescribedby: I,
      closeTitle: t,
      componentRef: r,
      isTitleVisible: s,
      mouseEnterTooltip: i,
      mouseLeaveTooltip: o,
      onBlur: p,
      onFocus: T,
      onMouseenter: S,
      onMouseleave: m,
      showTitle: u,
      popperContainerIdSelector: R,
      startPopper: f,
      tagLocal: b,
      titleArrowRef: A,
      titleRef: E,
      tooltipStyles: v
    };
  },
  render() {
    return c(this.tagLocal, {
      ref: "componentRef",
      id: this.id,
      "aria-describedby": this.ariaDescribedby,
      onFocus: this.onFocus,
      onBlur: this.onBlur,
      onMouseenter: this.onMouseenter,
      onMouseleave: this.onMouseleave
    }, {
      default: () => [
        this.$slots.default && this.$slots.default(),
        !this.isHide && c(da, {
          to: this.popperContainerIdSelector
        }, [
          /*
           * h("div", {
           *   id: this.ariaDescribedby,
           *   class: "a_sr_only",
           * }, [
           *   this.$slots.title && this.$slots.title(),
           * ]),
           */
          !!(this.$slots.title && this.isTitleVisible) && Nt(c("div", {
            ref: "titleRef",
            class: "a_tooltip__container",
            style: this.tooltipStyles,
            onMouseenter: this.mouseEnterTooltip,
            onMouseleave: this.mouseLeaveTooltip
          }, [
            this.showArrow && c("div", {
              ref: "titleArrowRef",
              "data-popper-arrow": !0,
              class: "a_tooltip__arrow"
            }),
            c("div", {
              id: this.ariaDescribedby,
              class: "a_tooltip__wrapper"
            }, this.$slots.title && this.$slots.title())
          ]), [
            [bl, {
              mounted: this.startPopper
            }]
          ])
        ])
      ]
    });
  }
};
function LM(e, {
  tagLocal: t = _(() => "")
}) {
  const n = d(e, "isTitleHtml");
  return {
    componentLocal: _(() => n.value ? SM : t.value)
  };
}
function mM(e) {
  const t = d(e, "type"), n = d(e, "disabled");
  return {
    disabledLocal: _(() => {
      if (["button", "submit", "reset"].indexOf(t.value) !== -1 && n.value)
        return !0;
    })
  };
}
function bM(e, {
  tagLocal: t = _(() => "")
}) {
  const n = d(e, "isTitleHtml"), r = d(e, "titleAttributes"), s = d(e, "titlePlacement"), i = B(void 0), o = _(() => n.value ? {
    tag: t.value,
    placement: s.value,
    withoutAriaDescribedby: !0,
    ...r.value
  } : {});
  return {
    elementRef: i,
    htmlTitleAttributes: o
  };
}
function IM(e) {
  const t = d(e, "loading"), n = d(e, "loadingAlign"), r = _(() => t.value && n.value === "left"), s = _(() => t.value && n.value === "right");
  return {
    isLoadingLeft: r,
    isLoadingRight: s
  };
}
function vM(e) {
  const t = d(e, "disabled"), n = d(e, "to"), r = d(e, "type");
  return {
    isRouterLink: _(() => r.value === "link" && !!n.value && !t.value)
  };
}
const jE = "a_btn a_btn_switch";
function yM(e) {
  const t = d(e, "isSwitch"), n = d(e, "modelSwitch"), r = _(() => {
    if (t.value)
      return !!n.value;
  }), s = _(() => {
    if (t.value)
      return n.value ? `${jE} a_btn_switch_active` : jE;
  });
  return {
    isSwitchActive: r,
    switchClass: s
  };
}
const RM = {
  button: "button",
  submit: "button",
  reset: "button",
  link: "a",
  text: "span"
};
function gM(e, {
  isRouterLink: t = _(() => !1)
}) {
  const n = d(e, "tag"), r = d(e, "type");
  return {
    tagLocal: _(() => n.value ? n.value : t.value ? Vr("RouterLink") : RM[r.value] || "span")
  };
}
function OM(e) {
  const t = d(e, "html"), n = d(e, "htmlScreenReader"), r = d(e, "safeHtml"), s = d(e, "safeHtmlScreenReader"), i = d(e, "text"), o = d(e, "textScreenReader"), u = _(() => st(i.value) ? !pn(i.value) : !se(i.value) && i.value !== ""), f = _(() => st(r.value) ? !pn(r.value) : !se(r.value) && r.value !== ""), A = _(() => st(t.value) ? !pn(t.value) : !se(t.value) && t.value !== ""), E = _(() => u.value || f.value || A.value), p = _(() => st(o.value) ? !pn(o.value) : !se(o.value) && o.value !== ""), T = _(() => st(s.value) ? !pn(s.value) : !se(s.value) && s.value !== ""), S = _(() => st(n.value) ? !pn(n.value) : !se(n.value) && n.value !== ""), m = _(() => p.value || T.value || S.value);
  return {
    isTextOrHtmlVisible: E,
    isTextOrHtmlScreenReaderVisible: m
  };
}
function CM(e) {
  const t = d(e, "title");
  return {
    isTitleVisible: _(() => Se(t.value) && t.value.length > 0 ? !0 : st(t.value) ? !pn(t.value) : !Pe(t.value))
  };
}
function Bt(e) {
  const t = d(e, "excludeRenderAttributes");
  return {
    attributesToExcludeFromRender: _(() => {
      const r = {};
      return z(t.value, (s) => {
        r[s] = void 0;
      }), r;
    })
  };
}
const Ee = {
  name: "AElement",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaDisabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    href: {
      type: String,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => at("a_element_")
    },
    isSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    modelSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tabindex: {
      type: [Number, String],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: void 0
    },
    target: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Gn.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => ot(e) ? e === "auto" : pa(e)
    },
    to: {
      type: [Object, String],
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0,
      default: "text",
      validator: (e) => ["button", "submit", "reset", "link", "text"].indexOf(e) !== -1
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      isRouterLink: r
    } = vM(e), {
      disabledLocal: s
    } = mM(e), {
      tagLocal: i
    } = gM(e, {
      isRouterLink: r
    }), {
      toHrefAttributes: o,
      typeAttribut: u
    } = Rx(e, {
      isRouterLink: r,
      tagLocal: i
    }), {
      isTitleVisible: f
    } = CM(e), {
      isLoadingLeft: A,
      isLoadingRight: E
    } = IM(e), {
      isTextOrHtmlVisible: p,
      isTextOrHtmlScreenReaderVisible: T
    } = OM(e), {
      onClick: S
    } = gx(e, t), {
      componentLocal: m
    } = LM(e, {
      tagLocal: i
    }), {
      elementRef: b,
      htmlTitleAttributes: I
    } = bM(e, {
      tagLocal: i
    }), {
      ariaLabelAttributes: v
    } = Yc(e), {
      isSwitchActive: g,
      switchClass: R
    } = yM(e);
    return {
      ariaLabelAttributes: v,
      attributesToExcludeFromRender: n,
      componentLocal: m,
      disabledLocal: s,
      elementRef: b,
      htmlTitleAttributes: I,
      isLoadingLeft: A,
      isLoadingRight: E,
      isSwitchActive: g,
      isTextOrHtmlScreenReaderVisible: T,
      isTextOrHtmlVisible: p,
      isTitleVisible: f,
      onClick: S,
      switchClass: R,
      tagLocal: i,
      toHrefAttributes: o,
      typeAttribut: u
    };
  },
  render() {
    return c(this.componentLocal, {
      ...this.$attrs,
      ...this.htmlTitleAttributes,
      ...this.ariaLabelAttributes,
      ...this.toHrefAttributes,
      ref: "elementRef",
      id: this.id,
      class: [
        this.classDefault,
        this.switchClass,
        this.class,
        {
          [this.classDisabled]: this.ariaDisabled
        }
      ],
      type: this.typeAttribut,
      tabindex: this.tabindex,
      disabled: this.disabledLocal,
      ariaDisabled: this.ariaDisabled,
      "aria-pressed": this.isSwitchActive,
      isAllRowsSelected: void 0,
      // TODO: ATable
      onClick: this.onClick,
      ...this.attributes,
      ...this.attributesToExcludeFromRender
    }, {
      default: () => [
        !this.isTitleHtml && this.isTitleVisible ? c(pe, {
          tag: "span",
          alwaysTranslate: this.alwaysTranslate,
          ariaHidden: !0,
          class: [
            "a_position_absolute_all",
            this.classDefaultHidden
          ],
          title: this.title,
          extra: this.extra,
          style: {
            zIndex: this.titleZIndex
          },
          ...this.titleAttributes
        }) : "",
        this.isTextOrHtmlScreenReaderVisible ? c(pe, {
          alwaysTranslate: this.alwaysTranslate,
          class: [
            "a_sr_only",
            this.classDefaultHidden
          ],
          tag: "span",
          text: this.textScreenReader,
          html: this.htmlScreenReader,
          safeHtml: this.safeHtmlScreenReader,
          extra: this.extra
        }) : "",
        this.$slots.buttonPrepend ? this.$slots.buttonPrepend({ extraData: this.extraData }) : "",
        this.isLoadingLeft ? c(Rl, {
          class: [
            "aloha_btn__spinner_left",
            this.loadingClass
          ]
        }) : "",
        c(_t, {
          icon: this.iconLeft,
          iconTag: this.iconTag,
          class: [
            "aloha_btn__icon_left",
            this.iconClass
          ],
          ...this.iconAttributes
        }),
        this.$slots.default ? this.$slots.default({ extraData: this.extraData }) : "",
        this.isTextOrHtmlVisible ? c(pe, {
          alwaysTranslate: this.alwaysTranslate,
          ariaHidden: this.textAriaHidden,
          class: this.textClass,
          extra: this.extra,
          html: this.html,
          safeHtml: this.safeHtml,
          tag: this.textTag,
          text: this.text,
          textAfter: this.textAfter,
          textBefore: this.textBefore
        }) : "",
        c(_t, {
          icon: this.iconRight,
          iconTag: this.iconTag,
          class: [
            "aloha_btn__icon_right",
            this.iconClass
          ],
          ...this.iconAttributes
        }),
        this.isLoadingRight ? c(Rl, {
          class: [
            "aloha_btn__spinner_right",
            this.loadingClass
          ]
        }) : "",
        this.$slots.buttonAppend ? this.$slots.buttonAppend({ extraData: this.extraData }) : ""
      ],
      title: !this.isTitleHtml || !this.title && !this.$slots.buttonTitle ? () => "" : () => [
        this.isTitleVisible ? c(pe, {
          alwaysTranslate: this.alwaysTranslate,
          html: this.title,
          tag: "span",
          extra: this.extra
        }) : "",
        this.$slots.buttonTitle ? this.$slots.buttonTitle({ extraData: this.extraData }) : ""
      ]
    });
  }
};
function nS(e) {
  const t = d(e, "dataItem"), n = d(e, "isButtonGroup"), r = d(e, "classButtonGroupDefault");
  return {
    classButton: _(() => {
      if (n.value)
        return t.value.classButton || r.value;
    })
  };
}
function DM(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = d(e, "modelValue");
  return {
    isChecked: _(() => n.value && n.value.indexOf(t.value) !== -1)
  };
}
function NM(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: s = _(() => {
  })
}) {
  const i = d(e, "dataItem"), o = d(e, "modelValue"), u = (A) => {
    if (n.value) {
      A.preventDefault(), A.stopPropagation();
      return;
    }
    const E = he(o.value) || [];
    if (r.value) {
      const p = E.indexOf(s.value);
      E.splice(p, 1);
    } else
      E.push(s.value);
    t("changeModelValue", {
      model: E,
      item: i.value,
      $event: A
    }), A.preventDefault(), A.stopPropagation();
  };
  return {
    onClick: u,
    onKeydown: (A) => {
      (A.key === "Enter" || A.keyCode === Z.space) && (u(A), A.stopPropagation(), A.preventDefault());
    }
  };
}
function lf(e) {
  const t = d(e, "dataItem"), n = d(e, "id"), r = d(e, "idSuffix"), s = d(e, "itemIndex"), i = _(() => t.value[we]), o = _(() => t.value[vt]), u = _(() => r.value ? `_${r.value}` : "");
  return {
    idLocal: _(() => `${n.value}_${s.value}${u.value}`),
    labelLocal: o,
    valueLocal: i
  };
}
function of(e) {
  const t = d(e, "dataItem"), n = d(e, "disabled"), r = d(e, "keyDisabled"), s = d(e, "keyDisabledCallback");
  return {
    disabledElement: _(() => {
      if (n.value || Ne(s.value) && s.value({ item: t.value }) || r.value && ce(t.value, r.value))
        return !0;
    })
  };
}
function rS(e) {
  const t = d(e, "dataItem"), n = d(e, "keyTitle"), r = d(e, "keyTitleCallback");
  return {
    titleLocal: _(() => {
      if (r.value)
        return r.value({ item: t.value });
      if (n.value)
        return ce(t.value, n.value);
    })
  };
}
function BM(e, {
  trueValue: t = "_YES_",
  falseValue: n = "_NO_",
  useNil: r = !0
} = {}) {
  return r && se(e) ? "" : Dt(e ? { placeholder: t } : { placeholder: n });
}
function wM(e) {
  return qD(e);
}
function dl(e, { suffix: t = "", digits: n = 2, digitGrouping: r = !0 } = {}) {
  if (se(e))
    return "";
  let s = Vt(e);
  if (s.split(",").length - 1 > 1)
    return e;
  s = s.replace(",", ".").replace(/[.](?=.*[.])/g, "");
  let o = mi(s);
  if (o === 0)
    return `0${n > 0 ? "," : ""}${TP("0", n)}${t ? ` ${t}` : ""}`;
  if (!o)
    return e;
  o = SP(o, n), s = Vt(o);
  const u = s.split(".");
  let f = "";
  if (u[1])
    for (let S = 0; S < n; S++) {
      const m = Pe(u[1][S]) ? "0" : u[1][S];
      f = `${f}${m}`;
    }
  else
    f = dP("", n, "0");
  let A = Vt(u[0] || "0"), E = !1;
  A.startsWith("-") && (A = A.substring(1), E = !0);
  let p = 0, T = "";
  return Iw(A, (S) => {
    p > 0 && p % 3 === 0 && r && (T += "."), p++, T += S;
  }), `${E ? "-" : ""}${T.split("").reverse().join("")}${Di(f) > 0 ? "," : ""}${f}${t ? ` ${t}` : ""}`;
}
function PM(e, { suffix: t = "€", digits: n = 2, digitGrouping: r = !0 } = {}) {
  return dl(e, { suffix: t, digits: n, digitGrouping: r });
}
qn.suppressDeprecationWarnings = !0;
const KE = {
  date: () => "DD.MM.YYYY",
  datetime: () => "DD.MM.YYYY HH:mm",
  fullDate: () => "dddd, DD. MMMM YYYY, HH:mm",
  time: () => "HH:mm",
  timeWithSeconds: () => "HH:mm:ss"
};
function xM(e, { format: t = "date" } = {}) {
  if (se(e) || e === "")
    return "";
  const n = qn(String(e));
  return n.isValid() ? (Ne(KE[t]) && (t = KE[t]()), n.format(t)) : e;
}
function MM(e, { emptyValue: t = "-" } = {}) {
  return se(e) || e === "" ? t : e;
}
function FM(e, { linkClass: t } = {}) {
  if (se(e) || e === "" || !ot(e) || !/^\S+@\S+\.\S+$/.test(e))
    return "";
  let n = "";
  return t && (n = ` class="${t}"`), `<a href="mailto:${e}"${n}>${e}</a>`;
}
function qM(e) {
  const t = document.createElement("div");
  return t.textContent = e, t.innerHTML;
}
function $M(e, { units: t = "kb", sourceUnits: n = "b", digits: r = 2 } = {}) {
  const i = [
    "b",
    "kb",
    "mb",
    "gb",
    "tb",
    "pb",
    "eb",
    "zb",
    "yb"
  ], o = mi(e);
  if (Uw(o))
    return "";
  const u = i.indexOf(n);
  let f = i.indexOf(t);
  if (u === -1)
    return "";
  const A = o * Math.pow(1024, u);
  f === -1 && (f = Math.floor(Math.log(A) / Math.log(1024)), f < 0 && (f = 0), t = i[f]);
  const E = Dt({ placeholder: `_A_FILE_SIZE_${BT(t)}_` });
  if (o === 0)
    return dl(0, { suffix: E, digits: r });
  if (u === f)
    return dl(o, { suffix: E, digits: r });
  const p = A / Math.pow(1024, Math.abs(f));
  return dl(p, { suffix: E, digits: r });
}
function UM(e, { replacer: t, space: n = 2, isHtml: r = !1, jsonClass: s = "a_code_content", tag: i = "pre" } = {}) {
  if (se(e))
    return "";
  try {
    const o = JSON.stringify(e, t, n);
    if (r) {
      const u = s ? ` class="${s}"` : "";
      return `<${i}${u}>${o}</${i}>`;
    }
    return o;
  } catch {
    return "";
  }
}
function kM(e) {
  return e ? pP(e, (t, n, r) => `${t}${t ? ", " : ""}${r}: ${n}`, "") : "";
}
function HM(e, { limit: t = 30, maxThreeDots: n = !0 } = {}) {
  if (se(e))
    return "";
  const r = Vt(e);
  if (r.length <= t)
    return r;
  if (n) {
    const s = r.slice(0, t).trimEnd();
    let i = "...", o = !0;
    for (let u = s.length - 1; u > s.length - 4 && s[u] === "."; u--) {
      if (o)
        i = i.slice(0, -1);
      else
        break;
      o = !0;
    }
    return `${s}${i}`;
  }
  return `${r.substring(0, t)}...`;
}
function VM(e, { linkText: t = "", protocol: n = "https://", target: r = "", linkClass: s = "" } = {}) {
  if (se(e) || !ot(e))
    return "";
  let i = n;
  (e.startsWith("https://") || e.startsWith("http://")) && (i = "");
  const o = r ? ` target="${r}"` : "", u = s ? ` class="${s}"` : "";
  return `<a href="${i}${e}"${o}${u}>${t || e}</a>`;
}
function du(e, {
  defaultValue: t = "",
  isChild: n = !1,
  isHtml: r = !0,
  isSimpleArray: s = !1,
  keyChildren: i = "",
  keyLabel: o = "",
  keyLabelCallback: u,
  lastSeparator: f,
  listClass: A = "",
  separator: E,
  separatorHtml: p = "",
  tag: T = "ul"
} = {}) {
  if (!Se(e) || !e.length)
    return t;
  let S = "";
  return r === !1 || r === "false" ? (Pe(E) && (E = ", "), z(e, (m, b) => {
    let I = zE({
      keyLabel: o,
      keyLabelCallback: u,
      index: b,
      item: m,
      isSimpleArray: s
    }), v;
    if (s) {
      if (Se(I)) {
        let g = "";
        z(I, (R) => {
          Se(R) ? v = R : g = R;
        }), I = g;
      }
    } else i && (v = ce(m, i));
    !Pe(f) && b === e.length - 1 ? S += `${b !== 0 || n ? f : ""}${I}` : S += `${b !== 0 || n ? E : ""}${I}`, v != null && v.length && (S += du(v, {
      isChild: !0,
      isHtml: r,
      isSimpleArray: s,
      keyChildren: i,
      keyLabel: o,
      keyLabelCallback: u,
      separator: E
    }));
  }), S) : (z(e, (m, b) => {
    const I = e.length === b + 1, v = zE({
      keyLabel: o,
      keyLabelCallback: u,
      index: b,
      item: m,
      isSimpleArray: s
    });
    let g, R = v;
    s ? Se(v) && z(v, (D) => {
      Se(D) ? g = D : R = D;
    }) : i && (g = ce(m, i)), E && !I && (R += E), g != null && g.length && (R += du(g, {
      isChild: !0,
      isHtml: r,
      isSimpleArray: s,
      keyChildren: i,
      keyLabel: o,
      keyLabelCallback: u,
      listClass: A,
      tag: T
    })), p && !I && (R += p), S += `<li>${R}</li>`;
  }), `<${T}${WM({ listClass: A })}>${S}</${T}>`);
}
function zE({ keyLabel: e, keyLabelCallback: t, index: n, item: r, isSimpleArray: s }) {
  let i;
  return s ? i = r : Ne(t) ? i = t({ item: r, itemIndex: n }) : i = e ? ce(r, e) : r, Pe(i) && (i = ""), i;
}
function WM({ listClass: e }) {
  return e ? ` class="${e}"` : "";
}
function GM(e) {
  return NT(e);
}
function jM(e, { chars: t = 4, mask: n = "*" } = {}) {
  if (se(e))
    return "";
  const r = Vt(e);
  if (r.length <= t)
    return r;
  const s = Hw([t, 0]), i = n.repeat(r.length - s), o = s === 0 ? "" : r.slice(-s);
  return `${i}${o}`;
}
function KM(e, { mapping: t = {}, defaultValue: n = "" } = {}) {
  return `${e}` in t ? t[e] : n;
}
function zM(e, {
  searchModel: t = "",
  searchClass: n = "a_search_highlight",
  tag: r = "mark",
  attributes: s = [],
  caseSensitive: i = !1,
  isHtml: o = !1
} = {}) {
  if (!e)
    return "";
  if (t === "" || se(t))
    return e;
  const u = i ? "g" : "gi", f = new RegExp(Ou(t), u), A = s.length ? ` ${s.join(" ")}` : "";
  if (!o)
    return e.replace(f, (T) => aS({
      value: T,
      tag: r,
      searchClass: n,
      attributesString: A
    }));
  const p = new DOMParser().parseFromString(e, "text/html");
  return sS({
    node: p.body,
    tag: r,
    searchClass: n,
    re: f,
    attributesString: A
  }), p.body.innerHTML;
}
function aS({ value: e, tag: t, searchClass: n, attributesString: r }) {
  return `<${t} class="${n}"${r}>${e}</${t}>`;
}
function sS({ node: e, re: t, tag: n, searchClass: r, attributesString: s }) {
  if (e.nodeType === Node.TEXT_NODE) {
    if (e.nodeValue.match(t)) {
      const o = e.parentNode, u = e.nodeValue.replace(t, (A) => aS({
        value: A,
        tag: n,
        searchClass: r,
        attributesString: s
      })), f = document.createElement("span");
      for (f.innerHTML = u; f.firstChild; )
        o.insertBefore(f.firstChild, e);
      o.removeChild(e);
    }
  } else e.nodeType === Node.ELEMENT_NODE && Array.from(e.childNodes).forEach((i) => sS({
    node: i,
    re: t,
    tag: n,
    searchClass: r,
    attributesString: s
  }));
}
function YM(e) {
  return BT(e);
}
const XM = B({});
function jn() {
  return {
    filterBoolean: (R, { trueValue: D = "_YES_", falseValue: w = "_NO_", useNil: F = !0 } = {}) => BM(R, {
      trueValue: D,
      falseValue: w,
      useNil: F
    }),
    filterCapitalize: (R) => wM(R),
    filterCurrency: (R, { suffix: D = "€", digits: w = 2, digitGrouping: F = !0 } = {}) => PM(R, { suffix: D, digits: w, digitGrouping: F }),
    filterDate: (R, { format: D = "date" } = {}) => xM(R, { format: D }),
    filterDefaultForEmpty: (R, { emptyValue: D = "-" } = {}) => MM(R, {
      emptyValue: D
    }),
    filterEmail: (R, { linkClass: D } = {}) => FM(R, { linkClass: D }),
    filterEscapeHtml: (R) => qM(R),
    filterFileSize: (R, { units: D = "kb", sourceUnits: w = "b", digits: F = 2 } = {}) => $M(R, { units: D, sourceUnits: w, digits: F }),
    filterFloat: (R, { suffix: D = "", digits: w = 2, digitGrouping: F = !0 } = {}) => dl(R, { suffix: D, digits: w, digitGrouping: F }),
    filterJson: (R, {
      replacer: D,
      space: w = 2,
      isHtml: F = !1,
      jsonClass: P = "a_code_content",
      tag: M = "pre"
    } = {}) => UM(R, { replacer: D, space: w, isHtml: F, jsonClass: P, tag: M }),
    filterKeyValue: (R) => kM(R),
    filterLimitTo: (R, {
      limit: D = 30,
      maxThreeDots: w = !0
    } = {}) => HM(R, { limit: D, maxThreeDots: w }),
    filterLink: (R, { linkText: D = "", protocol: w = "https://", target: F = "", linkClass: P = "" } = {}) => VM(R, { linkText: D, protocol: w, target: F, linkClass: P }),
    filterList: (R, {
      isHtml: D = !0,
      isSimpleArray: w = !1,
      keyChildren: F = "",
      keyLabel: P = "",
      keyLabelCallback: M,
      listClass: O = "",
      separator: q = ", ",
      tag: U = "ul"
    } = {}) => du(R, { isHtml: D, listClass: O, keyLabel: P, keyLabelCallback: M, keyChildren: F, isSimpleArray: w, separator: q, tag: U }),
    filterLowerCase: (R) => GM(R),
    filterMask: (R, { chars: D = 4, mask: w = "*" } = {}) => jM(R, { chars: D, mask: w }),
    filterPropertyByValue: (R, { mapping: D = {}, defaultValue: w = "" } = {}) => KM(R, { mapping: D, defaultValue: w }),
    filterSearchHighlight: (R, {
      searchModel: D = "",
      searchClass: w = "a_search_highlight",
      tag: F = "mark",
      attributes: P = [],
      caseSensitive: M = !1,
      isHtml: O = !1
    } = {}) => zM(R, {
      searchModel: D,
      searchClass: w,
      tag: F,
      attributes: P,
      caseSensitive: M,
      isHtml: O
    }),
    filterUpperCase: (R) => YM(R),
    ...XM.value
  };
}
function uf(e, {
  labelLocal: t = _(() => ""),
  valueLocal: n = _(() => "")
}) {
  const r = d(e, "isHiddenWithSearch"), s = d(e, "modelSearch"), i = d(e, "searching"), o = d(e, "searchingElements"), u = d(e, "searchTextInHtml"), f = d(e, "showElementWennGroupFound"), {
    filterSearchHighlight: A
  } = jn(), E = _(() => !!(r.value || i.value && !f.value && !o.value[n.value])), p = _(() => E.value ? t.value : A(t.value, {
    searchModel: s.value,
    isHtml: u.value
  })), T = _(() => E.value ? "display: none;" : void 0), S = _(() => E.value ? !0 : void 0);
  return {
    currentLabelFiltered: p,
    dataHideWithSearch: S,
    styleWithSearch: T
  };
}
const Go = {
  name: "ACheckboxItem",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: ""
    },
    modelValue: {
      type: Array,
      required: !1
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: s
    } = lf(e), {
      classButton: i
    } = nS(e), {
      isChecked: o
    } = DM(e, {
      valueLocal: s
    }), {
      disabledElement: u
    } = of(e), {
      onClick: f,
      onKeydown: A
    } = NM(e, t, {
      isChecked: o,
      valueLocal: s
    }), {
      currentLabelFiltered: E,
      styleWithSearch: p
    } = uf(e, {
      labelLocal: r,
      valueLocal: s
    }), {
      titleLocal: T
    } = rS(e);
    return {
      classButton: i,
      currentLabelFiltered: E,
      disabledElement: u,
      idLocal: n,
      isChecked: o,
      labelLocal: r,
      onClick: f,
      onKeydown: A,
      styleWithSearch: p,
      titleLocal: T,
      valueLocal: s
    };
  },
  render() {
    return this.readonly ? c(Ee, {
      alwaysTranslate: this.alwaysTranslate,
      classDefault: "",
      extra: {
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      },
      tag: "li",
      title: this.titleLocal,
      type: "text"
    }, () => [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : this.labelLocal && Nt(c("span", {
        class: "a_custom_control_label__text"
      }), [
        [Kt, this.currentLabelFiltered]
      ])
    ]) : this.isButtonGroup ? [
      c("input", {
        id: this.idLocal,
        checked: this.isChecked,
        class: "a_btn_check",
        disabled: this.disabledElement,
        name: this.id,
        style: this.styleWithSearch,
        type: "checkbox",
        value: this.valueLocal,
        onClick: this.onClick,
        onKeydown: this.onKeydown
      }),
      c(Ee, {
        alwaysTranslate: this.alwaysTranslate,
        class: this.classButton,
        classDefault: "",
        extra: {
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        },
        for: this.idLocal,
        tag: "label",
        title: this.titleLocal,
        type: "button"
      }, () => [
        this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          id: this.id,
          item: this.dataItem,
          itemIndex: this.itemIndex,
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        }) : this.labelLocal && Nt(c("span", {}), [
          [Kt, this.currentLabelFiltered]
        ])
      ])
    ] : [
      c("div", {
        class: ["a_custom_control a_custom_checkbox", {
          a_custom_control_invalid: this.isErrors
        }],
        style: this.styleWithSearch
      }, [
        c("input", {
          id: this.idLocal,
          checked: this.isChecked,
          class: "a_custom_control_input",
          disabled: this.disabledElement,
          name: this.id,
          type: "checkbox",
          value: this.valueLocal,
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(Ee, {
          alwaysTranslate: this.alwaysTranslate,
          class: {
            a_custom_control_label: !0,
            a_custom_control_label_width_auto: this.isWidthAuto
          },
          classDefault: "",
          extra: {
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          },
          for: this.idLocal,
          tag: "label",
          title: this.titleLocal,
          type: "button"
        }, () => [
          this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            id: this.id,
            item: this.dataItem,
            itemIndex: this.itemIndex,
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          }) : this.labelLocal && Nt(c("span", {
            class: "a_custom_control_label__text"
          }), [
            [Kt, this.currentLabelFiltered]
          ])
        ])
      ]),
      this.slotAppendName && this.$slots[this.slotAppendName] ? this.$slots[this.slotAppendName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        isChecked: this.isChecked,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : ""
    ];
  }
};
function ZM(e) {
  const t = d(e, "data"), n = d(e, "modelValueObj"), r = _(() => {
    const o = {
      indeterminate: void 0,
      checkedAll: !1,
      checkedSome: !1,
      uncheckedSome: !1
    };
    return pn(n.value) || (z(t.value, (u) => {
      const f = u[we];
      if (n.value[f] ? o.checkedSome = !0 : o.uncheckedSome = !0, o.checkedSome && o.uncheckedSome)
        return o.indeterminate = !0, !1;
    }), o.checkedSome && !o.uncheckedSome && (o.checkedAll = !0)), o;
  }), s = _(() => r.value.checkedAll), i = _(() => r.value.indeterminate);
  return {
    isCheckedAll: s,
    isIndeterminate: i
  };
}
function JM(e, { emit: t }, {
  isCheckedAll: n = _(() => !1),
  isIndeterminate: r = _(() => {
  })
}) {
  const s = d(e, "data"), i = d(e, "dataKeyByKeyId"), o = d(e, "modelValue"), u = () => mt(o.value || [], (T) => !i.value[T]), f = ({ model: T }) => (z(s.value, (S) => {
    const m = S[we];
    T.push(m);
  }), T), A = (T) => {
    let S = u();
    (r.value || !n.value) && (S = f({ model: S })), t("changeModelValue", {
      $event: T,
      model: S
    });
  }, E = (T) => {
    T.stopPropagation(), T.preventDefault(), A(T);
  };
  return {
    onClick: E,
    onKeydown: (T) => {
      (T.keyCode === Z.enter || T.keyCode === Z.space) && (E(T), T.stopPropagation(), T.preventDefault());
    }
  };
}
function QM(e) {
  const t = d(e, "id"), n = _(() => `${t.value}_legend`);
  return {
    idGroup: _(() => `${t.value}_group`),
    idLocal: n
  };
}
function eF(e) {
  const t = d(e, "label"), n = d(e, "modelSearch"), r = d(e, "showSearchHighlight"), {
    filterSearchHighlight: s
  } = jn();
  return {
    labelSearchHighlight: _(() => r.value ? s(t.value, { searchModel: n.value }) : t.value)
  };
}
const iS = {
  name: "ACheckboxLegend",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    dataKeyByKeyId: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: !1
    },
    id: {
      type: String,
      required: !0
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    label: {
      type: String,
      required: !1,
      default: void 0
    },
    legendClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    main: {
      type: Boolean,
      required: !1
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: () => []
    },
    modelValueObj: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    showSearchHighlight: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textAfterLabel: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idGroup: n,
      idLocal: r
    } = QM(e), {
      isCheckedAll: s,
      isIndeterminate: i
    } = ZM(e), {
      onClick: o,
      onKeydown: u
    } = JM(e, t, {
      isCheckedAll: s,
      isIndeterminate: i
    }), {
      labelSearchHighlight: f
    } = eF(e);
    return {
      idGroup: n,
      idLocal: r,
      isCheckedAll: s,
      isIndeterminate: i,
      labelSearchHighlight: f,
      onClick: o,
      onKeydown: u
    };
  },
  render() {
    return this.hasControlCheckbox ? c("legend", {
      class: [
        "a_legend",
        {
          a_legend_invalid: this.isErrors
        },
        this.legendClass
      ]
    }, [
      c("div", {
        class: ["a_custom_control a_custom_checkbox", {
          a_custom_control_invalid: this.isErrors
        }]
      }, [
        c("input", {
          id: this.idLocal,
          "aria-controls": this.idGroup,
          checked: this.isCheckedAll,
          class: "a_custom_control_input",
          disabled: this.disabled,
          indeterminate: this.isIndeterminate,
          type: "checkbox",
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(Ee, {
          alwaysTranslate: this.alwaysTranslate,
          class: "a_custom_control_label a_custom_control_label_width_auto",
          classDefault: "",
          for: this.idLocal,
          html: this.labelSearchHighlight,
          textScreenReader: this.labelScreenReader,
          tag: "label",
          textAfter: this.textAfterLabel,
          textClass: "a_custom_control_label__text",
          type: "text"
        })
      ])
    ]) : c(Ee, {
      id: this.idLocal,
      class: [
        "a_legend",
        {
          a_legend_invalid: this.isErrors
        },
        this.legendClass
      ],
      html: this.labelSearchHighlight,
      tag: "legend",
      textAfter: this.textAfterLabel,
      textScreenReader: this.labelScreenReader,
      type: "text"
    });
  }
};
function _f(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = d(e, "label"), r = _(() => `${t.value}_group`);
  return {
    groupAriaLabelledby: _(() => {
      if (n.value)
        return `${t.value}_legend`;
    }),
    groupId: r
  };
}
function tF(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "disabled");
  return {
    onChangeModelValue: ({ model: s, $event: i }) => {
      n.value || setTimeout(() => {
        t({
          model: s,
          $event: i
        });
      });
    }
  };
}
function nF(e, {
  dataKeyByKeyIdLocal: t = _(() => ({}))
}) {
  const n = d(e, "modelValue"), r = _(() => {
    const o = {};
    return z(n.value || [], (u) => {
      o[u] = !0;
    }), o;
  }), s = _(() => n.value ? mt(n.value, (o) => t.value[o]) : []);
  return {
    isModelValue: _(() => s.value.length > 0),
    modelValueFiltered: s,
    modelValueObj: r
  };
}
const Fl = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
  <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0"/>
</svg>`, rF = {
  name: "ACheckbox",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    attributesFieldset: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    classDataParent: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => []
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_checkbox_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inline: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: void 0
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "value"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: Array,
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    search: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: void 0
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrder: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_",
        notElementsWithSearch: "_A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_",
        search: "_A_CHECKBOX_SEARCH_"
      })
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "focusin",
    "focusout",
    "onSearchOutside",
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      componentStyleHide: r
    } = Xt(e), {
      ariaDescribedbyLocal: s,
      changeModel: i,
      errorsId: o,
      helpTextId: u,
      htmlIdLocal: f,
      isErrors: A,
      onFocusin: E,
      onFocusout: p,
      rootRef: T
    } = zt(e, t), {
      textAfterLabel: S
    } = n_(e), {
      dataAll: m,
      dataFromServer: b,
      dataExtraLocal: I,
      dataKeyByKeyIdLocal: v,
      dataLocal: g,
      hasDataExtra: R
    } = e_(e), {
      loadDataFromServer: D,
      loadDataFromServerForSearchAPI: w,
      loadingDataFromServer: F,
      loadingSearchApi: P,
      onSearchInApi: M,
      searchApiLocal: O,
      updateUrlPropsComputed: q,
      urlPropsComputed: U
    } = Zu(e, {
      changeModel: i,
      dataExtraLocal: I,
      dataFromServer: b
    }), {
      loadingLocal: G
    } = t_(e, {
      loadingDataFromServer: F
    });
    Qu(t, {
      dataKeyByKeyIdLocal: v,
      dataLocal: g
    });
    const {
      dataSort: te
    } = Ju(e, {
      data: g
    }), {
      dataGrouped: re,
      groupsForLever: ie,
      hasKeyGroup: le,
      keyGroupArray: oe
    } = Of(e, {
      data: te
    }), {
      hasNotElementsExtraWithSearch: Te,
      hasNotElementsWithSearch: Be,
      idForButtonSearchOutside: Ae,
      modelSearch: _e,
      modelSearchLowerCase: ve,
      modelSearchOutside: be,
      onSearchOutside: je,
      searching: Re,
      searchingElements: J,
      searchingElementsExtra: H,
      searchingGroups: X,
      searchingGroupsWithSearchInGroup: ae,
      searchOutsideOrApi: ge,
      searchOutsideRef: Ce,
      updateModelSearch: ke,
      updateModelSearchOutside: Qe
    } = Df(e, t, {
      data: te,
      dataExtra: I,
      groupsForLever: ie,
      htmlIdLocal: f,
      hasKeyGroup: le,
      keyGroupArray: oe,
      searchApiLocal: O,
      onSearchInApi: M
    }), {
      onChangeModelValue: Ue
    } = tF(e, {
      changeModel: i
    }), {
      iconCollapse: $e,
      initIsCollapsedLocal: it,
      isCollapsedLocal: Ke,
      titleCollapse: lt,
      toggleCollapse: et
    } = Cf(e, t), {
      isModelValue: ht,
      modelValueFiltered: At,
      modelValueObj: Mt
    } = nF(e, {
      dataKeyByKeyIdLocal: v
    }), {
      groupId: tn
    } = _f(e, {
      htmlIdLocal: f
    });
    return rt(U, q, {
      deep: !0
    }), it(), D(), w(), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      componentStyleHide: r,
      dataAll: m,
      dataExtraLocal: I,
      dataGrouped: re,
      dataKeyByKeyIdLocal: v,
      dataSort: te,
      errorsId: o,
      groupId: tn,
      groupsForLever: ie,
      hasDataExtra: R,
      hasKeyGroup: le,
      hasNotElementsExtraWithSearch: Te,
      hasNotElementsWithSearch: Be,
      helpTextId: u,
      htmlIdLocal: f,
      iconCollapse: $e,
      idForButtonSearchOutside: Ae,
      isCollapsedLocal: Ke,
      isErrors: A,
      isModelValue: ht,
      loadingLocal: G,
      loadingSearchApi: P,
      modelSearch: _e,
      modelSearchLowerCase: ve,
      modelSearchOutside: be,
      modelValueFiltered: At,
      modelValueObj: Mt,
      onChangeModelValue: Ue,
      onFocusin: E,
      onFocusout: p,
      onSearchOutside: je,
      rootRef: T,
      searching: Re,
      searchingElements: J,
      searchingElementsExtra: H,
      searchingGroups: X,
      searchingGroupsWithSearchInGroup: ae,
      searchOutsideOrApi: ge,
      searchOutsideRef: Ce,
      textAfterLabel: S,
      titleCollapse: lt,
      toggleCollapse: et,
      updateModelSearch: ke,
      updateModelSearchOutside: Qe
    };
  },
  render() {
    var e, t, n;
    return this.isRender ? this.readonly ? c(Ln, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: void 0,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "checkbox"
    }, this.isModelValue ? () => [
      c("ul", {}, [
        this.modelValueFiltered.map((r, s) => c(Go, {
          key: s,
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          dataItem: this.dataKeyByKeyIdLocal[r] || {},
          isButtonGroup: this.isButtonGroup,
          itemIndex: s,
          readonly: !0,
          slotName: this.slotName
        }, this.$slots))
      ])
    ] : "") : c("div", {
      ref: "rootRef",
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      onFocusin: this.onFocusin,
      onFocusout: this.onFocusout,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: [
          "a_form_element__parent",
          {
            a_checkbox_inline: this.inline,
            a_checkbox_control: this.hasControlCheckbox
          }
        ]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("fieldset", {
            id: this.htmlIdLocal,
            tabindex: -1,
            class: [
              "a_fieldset",
              this.classFieldset,
              {
                a_fieldset_no_border: !this.hasBorder,
                a_fieldset_invalid: this.isErrors,
                a_fieldset_collapsed: this.isCollapsedLocal
              }
            ],
            "aria-describedby": this.ariaDescribedbyLocal,
            ...this.attributesFieldset
          }, [
            this.label || this.labelScreenReader ? c(iS, {
              id: this.htmlIdLocal,
              alwaysTranslate: this.alwaysTranslate,
              data: this.dataAll,
              dataKeyByKeyId: this.dataKeyByKeyIdLocal,
              disabled: this.disabled,
              hasControlCheckbox: this.hasControlCheckbox,
              isErrors: this.isErrors,
              label: this.label,
              legendClass: this.labelClass,
              labelScreenReader: this.labelScreenReader,
              main: !0,
              modelValue: this.modelValue,
              modelValueObj: this.modelValueObj,
              textAfter: this.textAfterLabel,
              onChangeModelValue: this.onChangeModelValue
            }) : "",
            this.collapsible ? c(Ee, {
              "aria-controls": this.groupId,
              "aria-expanded": !this.isCollapsedLocal,
              alwaysTranslate: this.alwaysTranslate,
              class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
              iconLeft: this.iconCollapse,
              title: this.titleCollapse,
              textScreenReader: this.titleCollapse,
              type: "button",
              onClick: this.toggleCollapse
            }) : "",
            c("div", {
              id: this.groupId,
              class: "a_fieldset__content"
            }, [
              this.searchOutsideOrApi ? c("div", {
                class: "a_fieldset__search"
              }, [
                c("form", {
                  onSubmit: this.onSearchOutside
                }, [
                  c("div", {
                    class: "input-group"
                  }, [
                    c(Rn, {
                      alwaysTranslate: this.alwaysTranslate,
                      label: ((e = this.texts) == null ? void 0 : e.search) || "_A_CHECKBOX_SEARCH_",
                      inputClass: "a_select__element_clickable",
                      modelValue: this.modelSearchOutside,
                      modelUndefined: "",
                      "onUpdate:modelValue": this.updateModelSearchOutside
                    }),
                    c(Ee, {
                      alwaysTranslate: this.alwaysTranslate,
                      ariaDisabled: this.loadingSearchApi,
                      disabled: this.disabled,
                      class: "a_btn a_btn_primary",
                      type: "submit",
                      iconLeft: Fl
                    })
                  ])
                ])
              ]) : "",
              this.search ? c(Rn, {
                alwaysTranslate: this.alwaysTranslate,
                label: ((t = this.texts) == null ? void 0 : t.search) || "_A_CHECKBOX_SEARCH_",
                class: "a_fieldset__search",
                modelValue: this.modelSearch,
                modelUndefined: "",
                "onUpdate:modelValue": this.updateModelSearch
              }) : "",
              this.loadingLocal ? c(vl) : "",
              this.hasDataExtra ? c("div", {
                class: "a_checkbox__data_extra"
              }, [
                ...this.dataExtraLocal.map((r, s) => c(Go, {
                  key: s,
                  id: this.htmlIdLocal,
                  alwaysTranslate: this.alwaysTranslate,
                  idSuffix: "extra",
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataItem: r,
                  disabled: this.disabled,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  itemIndex: s,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElementsExtra,
                  searchTextInHtml: this.searchTextInHtml,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.hasNotElementsExtraWithSearch ? "" : c("div", {
                  class: "a_divider",
                  ariaHidden: !0
                })
              ]) : "",
              c("div", {}, this.hasKeyGroup ? [
                c(cf, {
                  id: `${this.htmlIdLocal}_lev_0`,
                  alwaysTranslate: this.alwaysTranslate,
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataGrouped: this.dataGrouped,
                  disabled: this.disabled,
                  hasControlCheckbox: this.hasControlCheckbox,
                  groupsForLever: this.groupsForLever,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  levelIndex: 0,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  modelValueObj: this.modelValueObj,
                  searching: this.searching,
                  searchingElements: this.searchingElements,
                  searchingGroups: this.searchingGroups,
                  searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                  searchTextInHtml: this.searchTextInHtml,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  type: "checkbox",
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)
              ] : [
                c("div", {
                  class: [
                    "a_checkbox_data",
                    {
                      a_btn_group: this.isButtonGroup
                    },
                    this.classDataParent
                  ]
                }, [
                  ...this.dataSort.map((r, s) => c(Go, {
                    key: s,
                    id: this.htmlIdLocal,
                    alwaysTranslate: this.alwaysTranslate,
                    classButtonGroupDefault: this.classButtonGroupDefault,
                    dataItem: r,
                    disabled: this.disabled,
                    isButtonGroup: this.isButtonGroup,
                    isErrors: this.isErrors,
                    isWidthAuto: this.isWidthAuto,
                    itemIndex: s,
                    keyDisabled: this.keyDisabled,
                    keyTitle: this.keyTitle,
                    keyTitleCallback: this.keyTitleCallback,
                    modelSearch: this.modelSearchLowerCase,
                    modelValue: this.modelValue,
                    searching: this.searching,
                    searchingElements: this.searchingElements,
                    searchTextInHtml: this.searchTextInHtml,
                    slotAppendName: this.slotAppendName,
                    slotName: this.slotName,
                    onChangeModelValue: this.onChangeModelValue
                  }, this.$slots))
                ])
              ]),
              !this.dataSort.length || this.hasNotElementsWithSearch ? c(pe, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_form__not_elements",
                text: ((n = this.texts) == null ? void 0 : n.notElementsWithSearch) || "_A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_"
              }) : ""
            ])
          ])
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function aF({ emit: e }) {
  return {
    onChangeModelValue: (n) => {
      e("changeModelValue", n);
    }
  };
}
function sF(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = d(e, "modelValue");
  return {
    isChecked: _(() => Se(n.value) ? n.value.indexOf(t.value) !== -1 : n.value === t.value)
  };
}
function iF(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: s = _(() => {
  })
}) {
  const i = d(e, "dataItem"), o = (f) => {
    if (n.value || r.value) {
      f.preventDefault(), f.stopPropagation();
      return;
    }
    t("changeModelValue", {
      model: s.value,
      item: i.value,
      $event: f
    }), f.preventDefault(), f.stopPropagation();
  };
  return {
    onClick: o,
    onKeydown: (f) => {
      (f.key === "Enter" || f.keyCode === Z.space) && (o(f), f.stopPropagation(), f.preventDefault());
    }
  };
}
const jo = {
  name: "ARadioItem",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: s
    } = lf(e), {
      classButton: i
    } = nS(e), {
      isChecked: o
    } = sF(e, {
      valueLocal: s
    }), {
      disabledElement: u
    } = of(e), {
      onClick: f,
      onKeydown: A
    } = iF(e, t, {
      disabledElement: u,
      isChecked: o,
      valueLocal: s
    }), {
      currentLabelFiltered: E,
      styleWithSearch: p
    } = uf(e, {
      labelLocal: r,
      valueLocal: s
    }), {
      titleLocal: T
    } = rS(e);
    return {
      classButton: i,
      currentLabelFiltered: E,
      disabledElement: u,
      idLocal: n,
      isChecked: o,
      labelLocal: r,
      onClick: f,
      onKeydown: A,
      styleWithSearch: p,
      titleLocal: T,
      valueLocal: s
    };
  },
  render() {
    return this.readonly ? c(Ee, {
      alwaysTranslate: this.alwaysTranslate,
      classDefault: "",
      extra: {
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      },
      tag: "span",
      title: this.titleLocal,
      type: "text"
    }, () => [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : this.labelLocal && Nt(c("span", {
        class: "a_custom_control_label__text"
      }), [
        [Kt, this.currentLabelFiltered]
      ])
    ]) : this.isButtonGroup ? [
      c("input", {
        id: this.idLocal,
        checked: this.isChecked,
        class: "a_btn_check",
        disabled: this.disabledElement,
        name: this.id,
        style: this.styleWithSearch,
        type: "radio",
        value: this.valueLocal,
        onClick: this.onClick,
        onKeydown: this.onKeydown
      }),
      c(Ee, {
        alwaysTranslate: this.alwaysTranslate,
        class: this.classButton,
        classDefault: "",
        extra: {
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        },
        for: this.idLocal,
        tag: "label",
        title: this.titleLocal,
        type: "button"
      }, () => [
        this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          id: this.id,
          item: this.dataItem,
          itemIndex: this.itemIndex,
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        }) : this.labelLocal && Nt(c("span", {}), [
          [Kt, this.currentLabelFiltered]
        ])
      ])
    ] : [
      c("div", {
        class: ["a_custom_control a_custom_radio", {
          a_custom_control_invalid: this.isErrors
        }],
        style: this.styleWithSearch
      }, [
        c("input", {
          id: this.idLocal,
          checked: this.isChecked,
          class: "a_custom_control_input",
          disabled: this.disabledElement,
          name: this.id,
          type: "radio",
          value: this.valueLocal,
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(Ee, {
          alwaysTranslate: this.alwaysTranslate,
          class: {
            a_custom_control_label: !0,
            a_custom_control_label_width_auto: this.isWidthAuto
          },
          classDefault: "",
          extra: {
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          },
          for: this.idLocal,
          tag: "label",
          title: this.titleLocal,
          type: "button"
        }, () => [
          this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            id: this.id,
            item: this.dataItem,
            itemIndex: this.itemIndex,
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          }) : this.labelLocal && Nt(c("span", {
            class: "a_custom_control_label__text"
          }), [
            [Kt, this.currentLabelFiltered]
          ])
        ])
      ]),
      this.slotAppendName && this.$slots[this.slotAppendName] ? this.$slots[this.slotAppendName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        isChecked: this.isChecked,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : ""
    ];
  }
};
function lF(e) {
  const t = d(e, "ariLabel");
  return {
    attributesAriaLabelHidden: _(() => t.value ? {
      ariaLabel: t.value
    } : {
      ariaHidden: !0
    })
  };
}
function oF(e, {
  isIconSvg: t = _(() => !1)
}) {
  const n = d(e, "icon");
  return {
    iconClass: _(() => {
      if (!t.value)
        return `a_icon_${n.value || "_NoImage"}`;
    })
  };
}
const uF = `<svg
   xmlns="http://www.w3.org/2000/svg"
   viewBox="0 0 18 18"
   height="18"
   width="18"
>
  <g
   transform="matrix(0.26617655,0,0,0.26617655,-33.607656,-85.223817)"
  >
    <path
      style="fill:#35495e;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 139.13004,365.87267 -4.53409,7.81862 h 51.05837 l -4.53409,-7.81862 z"
    />
    <path
      style="fill:#41b883;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 134.59595,373.69129 -4.51704,7.7892 h 60.09245 l -4.51704,-7.7892 z"
    />
    <path
      style="fill:#41b883;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 160.07266,329.49377 -16.90595,29.1543 -16.90594,29.15378 h 7.67291 l 13.03745,-22.48287 13.03745,-22.48236 13.03745,22.48236 13.03744,22.48287 h 7.80159 l -16.90594,-29.15378 z"
    />
    <path
      style="fill:#35495e;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 160.00903,342.83634 -13.03745,22.48287 -13.03796,22.48286 h 8.03103 l 9.02632,-15.56546 9.02581,-15.56494 9.02632,15.56494 9.02581,15.56546 h 8.01501 l -13.03744,-22.48286 z"
    />
  </g>
</svg>`, _F = `<svg
  xmlns="http://www.w3.org/2000/svg"
  version="1.1"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <path
    d="M 14.204045,11.607942 C 15.968997,11.607942 17.4,13.038977 17.4,14.80397 17.4,16.568964 15.968997,18 14.204045,18 12.439093,18 11.00809,16.568964 11.00809,14.80397 c 0,-1.764993 1.431003,-3.196028 3.195955,-3.196028 z M 1.7468526,0 H 15.702424 c 0.317838,0 0.601987,0.13036037 0.809974,0.33688648 0.207986,0.20799097 0.336879,0.49654172 0.336879,0.80999272 V 11.401416 C 16.488962,11.121653 16.081779,10.89755 15.640907,10.745219 V 1.4251769 c 0,-0.062983 -0.02344,-0.1157132 -0.06738,-0.1537962 -0.03808,-0.038083 -0.09667,-0.067377 -0.153792,-0.067377 H 2.0192852 c -0.062982,0 -0.1157107,0.023436 -0.1537926,0.067377 -0.038082,0.038083 -0.067375,0.095207 -0.067375,0.1537962 V 11.681178 h 0.00439 L 6.4851264,7.1976561 c 0.1874805,-0.1728376 0.4818832,-0.153796 0.6503226,0.033689 0.00439,0.00439 0.00439,0.010252 0.010252,0.010252 l 3.937088,4.6578239 c -0.692799,0.758727 -1.116094,1.769387 -1.116094,2.878184 0,0.481894 0.08056,0.944747 0.227027,1.376841 H 1.7468526 c -0.3178379,0 -0.6019878,-0.130361 -0.8099738,-0.336887 C 0.7288927,15.611034 0.6,15.321018 0.6,15.007567 V 1.1468792 C 0.6,0.82903398 0.7303573,0.54487745 0.9368788,0.33688648 1.1434002,0.12889569 1.4334089,0 1.7468526,0 Z m 9.6523104,11.585971 0.543401,-3.3381075 c 0.04394,-0.2504678 0.279755,-0.42477 0.530217,-0.3808284 0.09667,0.014647 0.183086,0.062984 0.250463,0.1259664 l 2.50462,2.6321095 c -0.319302,-0.07616 -0.650322,-0.115713 -0.993061,-0.115713 -1.088264,-0.0015 -2.081324,0.405729 -2.83564,1.076573 z m 1.171752,-8.9582554 c 0.458448,0 0.87735,0.1874847 1.176147,0.4862886 0.303191,0.3031979 0.486278,0.717715 0.486278,1.1761738 0,0.4584587 -0.187481,0.8773698 -0.486278,1.1761737 -0.303191,0.3031979 -0.717699,0.4862888 -1.176147,0.4862888 -0.458447,0 -0.87735,-0.1874849 -1.176146,-0.4862888 -0.303191,-0.3031979 -0.486277,-0.717715 -0.486277,-1.1761737 0,-0.4584588 0.18748,-0.8773701 0.486277,-1.1761738 0.303191,-0.3031981 0.719163,-0.4862886 1.176146,-0.4862886 z m 0.562442,10.2325654 2.923522,3.163805 c 0.231421,-0.350069 0.366173,-0.76898 0.366173,-1.220116 0,-1.224509 -0.99306,-2.217592 -2.217542,-2.217592 -0.389608,-0.0015 -0.754315,0.09814 -1.072153,0.273903 z m 2.141377,3.885914 -2.923522,-3.163805 c -0.231421,0.350069 -0.366172,0.768981 -0.366172,1.220116 0,1.224509 0.99306,2.217593 2.217541,2.217593 0.389607,0.0015 0.754316,-0.09814 1.072153,-0.273904 z"
  />
</svg>`, Il = B({
  icons: {
    _NoImage: _F,
    Aloha: uF
  }
}), yhe = {
  install: (e, {
    icons: t = {}
  } = {}) => {
    Il.value.icons = {
      ...Il.value.icons,
      ...t
    };
  }
};
function dF(e) {
  const t = d(e, "icon"), {
    isMobileWidth: n
  } = Sn(), r = _(() => st(t.value) ? n.value ? t.value.mobile : t.value.desktop : t.value), s = _(() => !se(r.value) && r.value !== ""), i = _(() => {
    const u = r.value;
    return !!(ot(u) && u.trim().startsWith("<svg"));
  }), o = _(() => {
    if (i.value)
      return r.value;
    const u = Il.value.icons[r.value];
    return u || Il.value.icons._NoImage;
  });
  return {
    hasIcon: s,
    iconSvg: o,
    isIconSvg: i
  };
}
const _t = {
  name: "AIcon",
  props: {
    ariLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    icon: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: "i"
    },
    isSaveHtml: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  setup(e) {
    const {
      attributesAriaLabelHidden: t
    } = lF(e), {
      hasIcon: n,
      iconSvg: r,
      isIconSvg: s
    } = dF(e), {
      iconClass: i
    } = oF(e, {
      isIconSvg: s
    });
    return {
      attributesAriaLabelHidden: t,
      hasIcon: n,
      iconClass: i,
      iconSvg: r
    };
  },
  render() {
    if (this.hasIcon)
      return this.isSaveHtml ? c(this.iconTag, {
        class: ["a_icon", this.iconClass],
        innerHTML: this.iconSvg,
        ...this.attributesAriaLabelHidden
      }) : Nt(c(this.iconTag, {
        class: ["a_icon", this.iconClass],
        ...this.attributesAriaLabelHidden
      }), [
        [Kt, this.iconSvg]
      ]);
  }
};
function cF(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = d(e, "type"), r = d(e, "modelValue");
  return {
    isChecked: _(() => n.value === "multiselect" ? !!(r.value && r.value.indexOf(t.value) !== -1) : r.value === t.value)
  };
}
function fF(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: s = _(() => {
  })
}) {
  const i = (u) => {
    n.value || (t("changeModelValue", {
      currentValue: s.value,
      $event: u,
      isSelected: r.value
    }), u.stopPropagation(), u.preventDefault());
  };
  return {
    onClick: i,
    onKeydown: (u) => {
      n.value || (u.keyCode === Z.enter || u.keyCode === Z.space) && i(u);
    }
  };
}
const df = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-lg" viewBox="0 0 16 16">
  <path d="M12.736 3.97a.733.733 0 0 1 1.047 0c.286.289.29.756.01 1.05L7.88 12.01a.733.733 0 0 1-1.065.02L3.217 8.384a.757.757 0 0 1 0-1.06.733.733 0 0 1 1.047 0l3.052 3.093 5.4-6.425z"/>
</svg>`, Ko = {
  name: "ASelectElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: s
    } = lf(e), {
      isChecked: i
    } = cF(e, {
      valueLocal: s
    }), {
      disabledElement: o
    } = of(e), {
      onClick: u,
      onKeydown: f
    } = fF(e, t, {
      disabledElement: o,
      isChecked: i,
      valueLocal: s
    }), {
      currentLabelFiltered: A,
      dataHideWithSearch: E,
      styleWithSearch: p
    } = uf(e, {
      labelLocal: r,
      valueLocal: s
    });
    return {
      currentLabelFiltered: A,
      dataHideWithSearch: E,
      disabledElement: o,
      idLocal: n,
      isChecked: i,
      labelLocal: r,
      onClick: u,
      onKeydown: f,
      styleWithSearch: p
    };
  },
  render() {
    return c("div", {
      ariaSelected: this.isChecked,
      class: ["a_select__menu__link a_select__element_clickable", {
        a_select__menu__link_selected: this.isChecked,
        a_select__menu__link_disabled: this.disabledElement
      }],
      "data-hide": this.dataHideWithSearch,
      disabled: this.disabledElement,
      role: "option",
      style: this.styleWithSearch,
      tabindex: "-1",
      onClick: this.onClick,
      onKeydown: this.onKeydown
    }, [
      c("span", {
        class: "a_select__menu__link__icon_box"
      }, [
        this.isChecked && c(_t, {
          icon: df
        })
      ]),
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered,
        inDropdown: !0
      }) : Nt(c("span"), [
        [Kt, this.currentLabelFiltered]
      ])
    ]);
  }
};
function hF(e) {
  const t = d(e, "type"), n = _(() => t.value === "select" || t.value === "multiselect");
  return {
    currentComponent: _(() => t.value === "radio" ? jo : t.value === "checkbox" ? Go : n.value ? Ko : ""),
    isComponentSelect: n
  };
}
function AF(e) {
  const t = d(e, "levelIndex"), n = d(e, "groupsForLever"), r = d(e, "groupParentKey"), s = _(() => !!n.value[t.value]);
  return {
    currentGroups: _(() => {
      const o = n.value[t.value];
      return se(r.value) ? o : mt(n.value[t.value], ["groupParentKey", r.value]);
    }),
    isComponentVisible: s
  };
}
const cf = {
  name: "ACheckboxRadioGroups",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    dataGrouped: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    groupParentKey: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    groupsForLever: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: !1
    },
    hideParentWithSearch: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    levelIndex: {
      type: Number,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    modelValueObj: {
      type: Object,
      required: !1,
      default: void 0
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    searchingGroups: {
      type: Object,
      required: !0
    },
    searchingGroupsWithSearchInGroup: {
      type: Object,
      required: !0
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0,
      validator: (e) => ["radio", "checkbox", "select", "multiselect"].indexOf(e) !== -1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      onChangeModelValue: n
    } = aF(t), {
      currentComponent: r,
      isComponentSelect: s
    } = hF(e), {
      isComponentVisible: i,
      currentGroups: o
    } = AF(e);
    return {
      currentComponent: r,
      currentGroups: o,
      isComponentSelect: s,
      isComponentVisible: i,
      onChangeModelValue: n
    };
  },
  render() {
    return this.isComponentVisible ? [
      ...this.currentGroups.map((e, t) => {
        let n, r = !1, s = !1;
        if (this.searching) {
          const i = `${this.groupParentKey ? `${this.groupParentKey}_` : ""}${e.groupKey}`;
          s = this.searchingGroupsWithSearchInGroup[i], (this.isHiddenWithSearch || !this.searchingGroups[i] && !s) && (n = "display: none;", r = !0);
        }
        return e.groupKey === "_not_grouped" ? c("div", {
          class: [
            "a_checkbox_radio_group__data",
            {
              a_btn_group: this.isButtonGroup
            }
          ],
          style: n
        }, [
          ...this.dataGrouped[e.allGroupKeys].map((i, o) => c(this.currentComponent, {
            id: `${this.id}`,
            alwaysTranslate: this.alwaysTranslate,
            classButtonGroupDefault: this.isComponentSelect ? void 0 : this.classButtonGroupDefault,
            dataItem: i,
            disabled: this.disabled,
            isButtonGroup: this.isComponentSelect ? void 0 : this.isButtonGroup,
            isErrors: this.isComponentSelect ? void 0 : this.isErrors,
            isHiddenWithSearch: r,
            isWidthAuto: this.isComponentSelect ? void 0 : this.isWidthAuto,
            itemIndex: o,
            keyDisabled: this.keyDisabled,
            keyDisabledCallback: this.keyDisabledCallback,
            keyTitle: this.keyTitle,
            keyTitleCallback: this.keyTitleCallback,
            modelSearch: this.modelSearch,
            modelValue: this.modelValue,
            searching: this.searching,
            searchingElements: this.searchingElements,
            searchTextInHtml: this.searchTextInHtml,
            showElementWennGroupFound: s,
            slotAppendName: this.slotAppendName,
            slotName: this.slotName,
            type: this.type,
            onChangeModelValue: this.onChangeModelValue
          }, this.$slots))
        ]) : c("fieldset", {
          class: "a_fieldset",
          style: n
        }, [
          c(iS, {
            id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}`,
            alwaysTranslate: this.alwaysTranslate,
            data: e.data,
            dataKeyByKeyId: e.dataKeyByKeyId,
            disabled: this.disabled,
            hasControlCheckbox: this.hasControlCheckbox,
            isErrors: this.isErrors,
            label: e.groupLabel,
            modelSearch: this.modelSearch,
            modelValue: this.modelValue,
            modelValueObj: this.modelValueObj,
            showSearchHighlight: s,
            onChangeModelValue: this.onChangeModelValue
          }),
          c("div", {
            id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}_group`,
            "aria-labelledby": `${this.id}_lev_${this.levelIndex + 1}_gr_${t}_legend`,
            role: "group"
          }, [
            !!(this.dataGrouped[e.allGroupKeys] || []).length && c("div", {
              class: [
                "a_checkbox_radio_group__data",
                {
                  a_btn_group: this.isButtonGroup
                }
              ]
            }, [
              ...(this.dataGrouped[e.allGroupKeys] || []).map((i, o) => c(this.currentComponent, {
                id: `${this.id}_gr_${t}`,
                alwaysTranslate: this.alwaysTranslate,
                classButtonGroupDefault: this.isComponentSelect ? void 0 : this.classButtonGroupDefault,
                dataItem: i,
                disabled: this.disabled,
                isButtonGroup: this.isComponentSelect ? void 0 : this.isButtonGroup,
                isErrors: this.isComponentSelect ? void 0 : this.isErrors,
                isHiddenWithSearch: r,
                isWidthAuto: this.isComponentSelect ? void 0 : this.isWidthAuto,
                itemIndex: o,
                keyDisabled: this.keyDisabled,
                keyDisabledCallback: this.keyDisabledCallback,
                keyTitle: this.keyTitle,
                keyTitleCallback: this.keyTitleCallback,
                modelSearch: this.modelSearch,
                modelValue: this.modelValue,
                searching: this.searching,
                searchingElements: this.searchingElements,
                searchTextInHtml: this.searchTextInHtml,
                showElementWennGroupFound: s,
                slotAppendName: this.slotAppendName,
                slotName: this.slotName,
                type: this.type,
                onChangeModelValue: this.onChangeModelValue
              }, this.$slots))
            ]),
            c(Vr("ACheckboxRadioGroups"), {
              id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}`,
              alwaysTranslate: this.alwaysTranslate,
              classButtonGroupDefault: this.classButtonGroupDefault,
              dataGrouped: this.dataGrouped,
              disabled: this.disabled,
              groupParentKey: e.groupKey,
              groupsForLever: this.groupsForLever,
              hasControlCheckbox: this.hasControlCheckbox,
              isButtonGroup: this.isButtonGroup,
              isErrors: this.isErrors,
              isHiddenWithSearch: r,
              isWidthAuto: this.isWidthAuto,
              keyDisabled: this.keyDisabled,
              keyDisabledCallback: this.keyDisabledCallback,
              keyTitle: this.keyTitle,
              keyTitleCallback: this.keyTitleCallback,
              levelIndex: this.levelIndex + 1,
              modelSearch: this.modelSearch,
              modelValue: this.modelValue,
              modelValueObj: this.modelValueObj,
              searching: this.searching,
              searchingElements: this.searchingElements,
              searchingGroups: this.searchingGroups,
              searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
              searchTextInHtml: this.searchTextInHtml,
              slotName: this.slotName,
              slotAppendName: this.slotAppendName,
              type: this.type,
              onChangeModelValue: this.onChangeModelValue
            }, this.$slots)
          ])
        ]);
      })
    ] : null;
  }
};
function lS(e) {
  const t = d(e, "align"), n = d(e, "size"), r = d(e, "textAlign"), s = _(() => `a_text_${t.value}`), i = _(() => r.value === "left" ? "a_cloak__box_text_left" : "a_cloak__box_text_right"), o = _(() => `a_fs_${n.value}`);
  return {
    classAlign: s,
    classForBox: i,
    classTextSize: o
  };
}
const Ba = B({
  propsDefault: {
    align: "center",
    extra: void 0,
    size: 6,
    tag: "div",
    text: "_A_CLOAK_LOADING_",
    textAlign: "right"
  }
}), Rhe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Ba.value.propsDefault = {
      ...Ba.value.propsDefault,
      ...t
    };
  }
}, Un = B({
  propsDefault: {
    ariaLabel: "_A_SPINNER_LOADING_",
    class: "a_spinner",
    extra: void 0,
    safeHtml: "",
    size: void 0,
    tag: "span"
  }
}), ghe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Un.value.propsDefault = {
      ...Un.value.propsDefault,
      ...t
    };
  }
}, vl = {
  name: "ACloak",
  props: {
    align: {
      type: String,
      required: !1,
      default: () => Ba.value.propsDefault.align,
      validator: (e) => ["left", "center", "right"].indexOf(e) !== -1
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: Ba.value.propsDefault.extra
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => Ba.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    spinnerClass: {
      type: [String, Object],
      required: !1,
      default: () => Un.value.propsDefault.class
    },
    spinnerSafeHtml: {
      type: String,
      required: !1,
      default: () => Un.value.propsDefault.safeHtml
    },
    spinnerTag: {
      type: String,
      required: !1,
      default: () => Un.value.propsDefault.tag
    },
    tag: {
      type: String,
      required: !1,
      default: () => Ba.value.propsDefault.tag
    },
    text: {
      type: String,
      required: !1,
      default: () => Ba.value.propsDefault.text
    },
    textAlign: {
      type: String,
      required: !1,
      default: () => Ba.value.propsDefault.textAlign,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    }
  },
  setup(e) {
    const {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    } = lS(e);
    return {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    };
  },
  render() {
    const e = this.textAlign === "left", t = c(pe, {
      alwaysTranslate: this.alwaysTranslate,
      tag: "span",
      class: [
        "a_cloak__text",
        e ? "a_cloak__text_left" : "a_cloak__text_right",
        this.classTextSize
      ],
      text: this.text,
      extra: this.extra
    });
    return c(
      this.tag,
      {
        role: "status",
        class: this.classAlign
      },
      [
        c("div", {
          class: ["a_cloak__box", this.classForBox]
        }, [
          e ? t : "",
          c(Rl, {
            alwaysTranslate: this.alwaysTranslate,
            class: [
              "a_cloak__spinner",
              this.spinnerClass
            ],
            "aria-hidden": "true",
            safeHtml: this.spinnerSafeHtml,
            size: this.size,
            tag: this.spinnerTag
          }),
          e ? "" : t
        ])
      ]
    );
  }
};
function EF(e) {
  const t = d(e, "type");
  return {
    btnClass: _(() => `a_carousel__arrow_${t.value}`)
  };
}
function pF(e) {
  const t = d(e, "texts"), n = d(e, "type");
  return {
    btnTitle: _(() => {
      if (n.value === "previous")
        return t.value.previousSlide;
      if (n.value === "next")
        return t.value.nextSlide;
    })
  };
}
const YE = {
  name: "ACarouselBtn",
  props: {
    ariaDisabled: {
      type: Boolean,
      required: !1
    },
    btnAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    icon: {
      type: String,
      required: !1,
      default: void 0
    },
    texts: {
      type: Object,
      required: !0
    },
    type: {
      type: String,
      required: !0,
      validator: (e) => ["previous", "next"].includes(e)
    }
  },
  emits: [
    "toSlide"
  ],
  setup(e) {
    const {
      btnClass: t
    } = EF(e), {
      btnTitle: n
    } = pF(e);
    return {
      btnClass: t,
      btnTitle: n
    };
  },
  render() {
    return c(Ee, {
      class: [
        "a_carousel__arrow",
        this.btnClass
      ],
      ariaDisabled: this.ariaDisabled,
      disabled: this.disabled,
      iconLeft: this.icon,
      title: this.btnTitle,
      textScreenReader: this.btnTitle,
      type: "button",
      onClick: () => this.$emit("toSlide"),
      ...this.btnAttributes
    });
  }
};
function TF() {
  return {
    ariaLabelTabsAttributes: _(() => Bu({
      attr: "aria-label",
      placeholder: "_A_CAROUSEL_CONTROLS_SLIDES_"
    }))
  };
}
function SF({ emit: e }) {
  return {
    changeActiveId: ({ item: r }) => {
      e("changeActiveId", { id: r[we] });
    },
    onPressBtn: (r) => {
      r.keyCode === Z.arrowLeft ? (r.preventDefault(), e("toPreviousSlide")) : r.keyCode === Z.arrowRight && (r.preventDefault(), e("toNextSlide"));
    }
  };
}
const LF = {
  icons: {
    dots: `<svg width="34" height="34" version="1.1" xmlns="http://www.w3.org/2000/svg">
  <circle class="border" cx="16" cy="15" r="10"></circle>
  <circle class="tab-background" cx="16" cy="15" r="8"></circle>
  <circle class="tab" cx="16" cy="15" r="6"></circle>
</svg>`
  }
}, mF = {
  name: "ACarouselControls",
  props: {
    activeId: {
      type: [String, Number],
      required: !0
    },
    autoplayInterval: {
      type: Number,
      required: !1,
      default: 5e3
    },
    autoplayShow: {
      type: Boolean,
      required: !1,
      default: !1
    },
    autoplayStart: {
      type: Boolean,
      default: !1
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    parentId: {
      type: String,
      required: !0
    },
    indicatorsShow: {
      type: Boolean,
      required: !1,
      default: !0
    },
    indicatorsType: {
      type: String,
      required: !1,
      default: "dots",
      validator: (e) => ["dots"].indexOf(e) !== -1
    },
    texts: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "changeActiveId",
    "toNextSlide",
    "toPreviousSlide"
  ],
  setup(e, t) {
    const {
      ariaLabelTabsAttributes: n
    } = TF(), {
      changeActiveId: r,
      onPressBtn: s
    } = SF(t);
    return {
      ariaLabelTabsAttributes: n,
      changeActiveId: r,
      onPressBtn: s
    };
  },
  render() {
    return [
      c("div", {
        class: "a_carousel__tabs__wrapper"
      }, [
        c("div", {
          class: [
            "a_carousel__tabs",
            this.indicatorsType ? `a_carousel__tabs_${this.indicatorsType}` : "a_carousel__tabs_custom"
          ],
          role: "tablist",
          ...this.ariaLabelTabsAttributes
        }, [
          ...this.data.map((e, t) => {
            const n = t + 1, r = this.activeId === e[we];
            return c(Ee, {
              id: `${this.parentId}_tab_${n}`,
              "aria-selected": !1,
              "aria-controls": `${this.parentId}_item_${n}`,
              class: [
                "a_carousel__tabs__btn",
                {
                  a_carousel__tabs__btn_active: r
                }
              ],
              iconLeft: LF.icons.dots,
              disabled: this.disabled,
              type: "button",
              tabindex: r ? 0 : -1,
              role: "tab",
              title: this.texts.controlsSlide,
              textScreenReader: this.texts.controlsSlide,
              extra: {
                number: n
              },
              onClick: () => this.changeActiveId({ item: e }),
              onKeydown: this.onPressBtn
            });
          })
        ])
      ])
    ];
  }
};
function bF(e) {
  const t = d(e, "dataCount"), n = d(e, "itemIndex"), r = d(e, "parentId"), s = d(e, "texts"), i = _(() => n.value + 1), o = _(() => `${r.value}_item_${i.value}`);
  return {
    ariaLabelAttributes: _(() => Bu({
      attr: "aria-label",
      placeholder: s.value.itemAriaLabel,
      extra: {
        count: t.value,
        number: i.value
      }
    })),
    idLocal: o
  };
}
function IF(e) {
  const t = d(e, "activeId"), n = d(e, "item");
  return {
    isActive: _(() => n.value[we] === t.value)
  };
}
const vF = {
  name: "ACarouselItem",
  props: {
    activeId: {
      type: [String, Number],
      required: !0
    },
    dataCount: {
      type: Number,
      required: !0
    },
    item: {
      type: Object,
      required: !0
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    parentId: {
      type: String,
      required: !0
    },
    texts: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "change",
    "play",
    "stop",
    "update:modelValue"
  ],
  setup(e) {
    const {
      ariaLabelAttributes: t,
      idLocal: n
    } = bF(e), {
      isActive: r
    } = IF(e);
    return {
      ariaLabelAttributes: t,
      idLocal: n,
      isActive: r
    };
  },
  render() {
    return c("div", {
      id: this.idLocal,
      "aria-roledescription": "slide",
      class: [
        "a_carousel__item",
        {
          a_carousel__item_active: this.isActive
        }
      ],
      ...this.ariaLabelAttributes
    }, [
      this.$slots.item ? this.$slots.item({
        activeId: this.activeId,
        dataCount: this.dataCount,
        item: this.item,
        itemIndex: this.itemIndex,
        isActive: this.isActive,
        parentId: this.parentId
      }) : void 0
    ]);
  }
};
function yF(e, {
  dataLocal: t = _(() => [])
}) {
  const n = d(e, "modelValue"), r = B(void 0), s = () => {
    var f, A;
    se(n.value) ? r.value = (A = (f = t.value) == null ? void 0 : f[0]) == null ? void 0 : A[we] : r.value = n.value;
  }, i = ({ id: f }) => {
    r.value = f;
  };
  return {
    activeId: r,
    changeActiveId: i,
    initActiveId: s,
    toNextSlide: () => {
      var E, p;
      const f = la(t.value, [we, r.value]);
      let A;
      f === -1 || f >= t.value.length - 1 ? A = 0 : A = f + 1, i({
        id: (p = (E = t.value) == null ? void 0 : E[A]) == null ? void 0 : p[we]
      });
    },
    toPreviousSlide: () => {
      var E, p;
      const f = la(t.value, [we, r.value]);
      let A;
      f === -1 || f <= 0 ? A = t.value.length - 1 : A = f - 1, i({
        id: (p = (E = t.value) == null ? void 0 : E[A]) == null ? void 0 : p[we]
      });
    }
  };
}
function RF(e) {
  const t = d(e, "ariaLabel"), n = d(e, "extra");
  return {
    ariaLabelAttributes: _(() => Bu({
      attr: "aria-label",
      placeholder: t.value,
      extra: n.value
    }))
  };
}
function gF(e) {
  const t = d(e, "arrowsPlacement"), n = d(e, "arrowsTrigger"), r = d(e, "indicatorsPlacement"), s = _(() => r.value ? `a_carousel_tabs_${r.value}` : void 0), i = _(() => t.value ? `a_carousel_arrows_${t.value}` : void 0), o = _(() => {
    const u = nT(n.value), f = [];
    return z(u, (A) => {
      f.push(`a_carousel_trigger_${A}`);
    }), f.join(" ");
  });
  return {
    arrowsPlacementClass: i,
    arrowsTriggerClass: o,
    indicatorsPlacementClass: s
  };
}
function OF(e) {
  const t = d(e, "data"), n = d(e, "keyId");
  return {
    dataLocal: _(() => {
      const s = he(t.value);
      return n.value ? z(s, (i, o) => {
        i[we] = ce(i, n.value) || o;
      }) : z(s, (i, o) => {
        i[we] = o;
      }), s;
    })
  };
}
function CF(e) {
  const t = Ec(e, "texts");
  return {
    textsLocal: _(() => ({
      nextSlide: "_A_CAROUSEL_NEXT_SLIDE_",
      previousSlide: "_A_CAROUSEL_PREVIOUS_SLIDE_",
      controlsSlide: "_A_CAROUSEL_CONTROLS_SLIDE_{{number}}_",
      controlsSlides: "_A_CAROUSEL_CONTROLS_SLIDES_",
      controlsStart: "_A_CAROUSEL_CONTROLS_START_",
      controlsStop: "_A_CAROUSEL_CONTROLS_STOP_",
      itemAriaLabel: "_A_CAROUSEL_ITEM_ARIA_LABEL_{{number}}_{{count}}_",
      ...t.value
    }))
  };
}
const oS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
</svg>`, ff = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708"/>
</svg>`, Ohe = {
  name: "ACarousel",
  props: {
    ariaLabel: {
      type: String,
      required: !0
    },
    ariaDisabled: {
      type: Boolean,
      required: !1
    },
    arrowPreviousAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    arrowPreviousIcon: {
      type: String,
      required: !1,
      default: oS
    },
    arrowNextAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    arrowNextIcon: {
      type: String,
      required: !1,
      default: ff
    },
    arrowsShow: {
      type: Boolean,
      required: !1,
      default: !0
    },
    arrowsTrigger: {
      type: [String, Array],
      default: "always",
      validator: (e) => {
        const t = nT(e);
        return Se(t) && Pc(t, (n) => ["always", "hover", "focus"].includes(n));
      }
    },
    arrowsPlacement: {
      type: String,
      default: "sides-center",
      // positioned at the sides, vertically centered
      validator: (e) => [
        "sides-center"
        // arrows on the left and right sides, vertically centered (default)
        /*
         * "sides-top", // arrows on the sides at the top
         * "sides-bottom", // arrows on the sides at the bottom
         * "with-indicators-before", // arrows before the indicator panel
         * "with-indicators-after", // arrows after the indicator panel
         * "with-indicators-sides", // arrows on the left and right of the indicator panel
         * "top-left", // absolutely positioned in the top-left corner
         * "top-right", // absolutely positioned in the top-right corner
         * "bottom-left", // absolutely positioned in the bottom-left corner
         * "bottom-right", // absolutely positioned in the bottom-right corner
         */
      ].includes(e)
    },
    autoplayInterval: {
      type: Number,
      required: !1,
      default: 5e3
    },
    autoplayShow: {
      type: Boolean,
      required: !1,
      default: !1
    },
    autoplayStart: {
      type: Boolean,
      required: !1,
      default: !1
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => at("a_carousel_")
    },
    indicatorsShow: {
      type: Boolean,
      required: !1,
      default: !0
    },
    indicatorsType: {
      type: String,
      required: !1,
      default: "dots",
      validator: (e) => ["dots"].indexOf(e) !== -1
    },
    indicatorsPlacement: {
      type: String,
      required: !1,
      default: "bottom",
      validator: (e) => [
        "top",
        "top-start",
        "top-end",
        "bottom",
        "bottom-start",
        "bottom-end"
      ].indexOf(e) !== -1
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [Number, String],
      required: !1,
      default: void 0
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        nextSlide: "_A_CAROUSEL_NEXT_SLIDE_",
        previousSlide: "_A_CAROUSEL_PREVIOUS_SLIDE_",
        controlsSlide: "_A_CAROUSEL_CONTROLS_SLIDE_{{number}}_",
        controlsSlides: "_A_CAROUSEL_CONTROLS_SLIDES_",
        controlsStart: "_A_CAROUSEL_CONTROLS_START_",
        controlsStop: "_A_CAROUSEL_CONTROLS_STOP_",
        itemAriaLabel: "_A_CAROUSEL_ITEM_ARIA_LABEL_{{number}}_{{count}}_"
      })
    }
  },
  emits: [
    "change",
    "play",
    "stop",
    "update:modelValue"
  ],
  setup(e) {
    const {
      textsLocal: t
    } = CF(e), {
      ariaLabelAttributes: n
    } = RF(e), {
      arrowsPlacementClass: r,
      arrowsTriggerClass: s,
      indicatorsPlacementClass: i
    } = gF(e), {
      dataLocal: o
    } = OF(e), {
      activeId: u,
      changeActiveId: f,
      initActiveId: A,
      toNextSlide: E,
      toPreviousSlide: p
    } = yF(e, {
      dataLocal: o
    });
    return A(), {
      activeId: u,
      ariaLabelAttributes: n,
      arrowsPlacementClass: r,
      arrowsTriggerClass: s,
      changeActiveId: f,
      dataLocal: o,
      indicatorsPlacementClass: i,
      textsLocal: t,
      toNextSlide: E,
      toPreviousSlide: p
    };
  },
  render() {
    return c("section", {
      id: this.id,
      "aria-roledescription": "carousel",
      class: [
        "a_carousel",
        this.indicatorsPlacementClass,
        this.arrowsPlacementClass,
        this.arrowsTriggerClass
      ],
      ...this.ariaLabelAttributes
    }, [
      c("div", {
        class: "a_carousel__inner"
      }, [
        this.arrowsShow ? c(YE, {
          btnAttributes: this.arrowPreviousAttributes,
          disabled: this.disabled,
          icon: this.arrowPreviousIcon,
          texts: this.textsLocal,
          type: "previous",
          onToSlide: this.toPreviousSlide
        }) : void 0,
        c(mF, {
          activeId: this.activeId,
          autoplayInterval: this.autoplayInterval,
          autoplayShow: this.autoplayShow,
          data: this.dataLocal,
          disabled: this.disabled,
          extra: this.extra,
          parentId: this.id,
          indicatorsShow: this.indicatorsShow,
          indicatorsType: this.indicatorsType,
          texts: this.texts,
          onChangeActiveId: this.changeActiveId,
          onToNextSlide: this.toNextSlide,
          onToPreviousSlide: this.toPreviousSlide
        }),
        c("div", {
          "aria-live": "polite",
          class: "a_carousel__items"
        }, [
          ...this.dataLocal.map((e, t) => c(vF, {
            key: e[we],
            activeId: this.activeId,
            dataCount: this.dataLocal.length,
            item: e,
            itemIndex: t,
            parentId: this.id,
            texts: this.textsLocal
          }, this.$slots))
        ]),
        this.arrowsShow ? c(YE, {
          btnAttributes: this.arrowNextAttributes,
          disabled: this.disabled,
          icon: this.arrowNextIcon,
          texts: this.textsLocal,
          type: "next",
          onToSlide: this.toNextSlide
        }) : void 0
      ])
    ]);
  }
}, hf = {
  props: {
    id: {
      type: String,
      required: !0
    }
  },
  computed: {
    idForHeader() {
      return `${this.id}_header`;
    },
    nameForEventBusDestroyKeyDownEvent() {
      return `${this.id}DestroyKeyDown`;
    },
    attributesForMainElement() {
      return this.idForFocus ? {
        "aria-activedescendant": this.idForFocus
      } : {};
    }
  },
  created() {
    this.setEventBus();
  },
  beforeUnmount() {
    this.destroyEventBus(), this.destroyListenerForPressButtons();
  },
  methods: {
    setEventBus() {
      gt.$on(this.nameForEventBusDestroyKeyDownEvent, this.destroyListenerForPressButtons);
    },
    emitEventBusDestroyAllListenerForPressButtonsForPanels() {
      gt.$emit(this.nameForEventBusDestroyKeyDownEvent);
    },
    destroyEventBus() {
      gt.$off(this.nameForEventBusDestroyKeyDownEvent, this.destroyListenerForPressButtons);
    },
    setListenerForPressButtons() {
      document.addEventListener("keydown", this.pressButton);
    },
    destroyListenerForPressButtons() {
      document.removeEventListener("keydown", this.pressButton), this.destroyListenerForPressButtonsCallback();
    },
    stopCurrentEvent(e) {
      e.preventDefault(), e.stopPropagation();
    },
    setFocusToElementWithTimeout(e) {
      setTimeout(() => {
        const t = document.getElementById(e);
        t && t.focus();
      });
    },
    destroyListenerForPressButtonsCallback() {
    }
  }
};
function cu(e) {
  return Object.prototype.toString.call(e) === "[object Object]";
}
function tc(e) {
  return e instanceof Date;
}
function vr(e) {
  return e == null ? !1 : !isNaN(new Date(e).getTime());
}
function DF(e) {
  return Array.isArray(e) && e.length === 2 && vr(e[0]) && vr(e[1]) && new Date(e[1]).getTime() >= new Date(e[0]).getTime();
}
function fu(e, t) {
  if (!e)
    return "";
  try {
    return qn(e).format(t);
  } catch {
    return "";
  }
}
function XE(e, t, n) {
  try {
    return qn(e, n).format(t) || null;
  } catch {
    return null;
  }
}
const ZE = {
  name: "APanelDate",
  mixins: [
    hf
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    startAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    endAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    dateFormat: {
      type: String,
      default: "YYYY-MM-DD"
    },
    calendarMonth: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getMonth()
    },
    calendarYear: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getFullYear()
    },
    firstDayOfWeek: {
      default: 7,
      type: Number,
      validator: (e) => e >= 1 && e <= 7
    },
    disabledDate: {
      type: Function,
      default: () => !1
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "handleIconMonth",
    "select"
  ],
  data() {
    return {
      dayForFocusButton: void 0
    };
  },
  computed: {
    ths() {
      return this.getDays(this.firstDayOfWeek);
    },
    dates() {
      return this.getDates(this.calendarYear, this.calendarMonth, this.firstDayOfWeek);
    },
    trsWithTds() {
      const e = [];
      for (let t = 0; t < 6; t++) {
        const n = [];
        this.dates.slice(7 * t, 7 * t + 7).forEach((r) => {
          const s = this.isCurrentDayToday(r), i = this.getCellTime(r), o = this.disabledDate(i);
          n.push({
            class: this.getCellClasses({
              cellTime: i,
              isToday: s,
              month: r.month
            }),
            id: this.getId({
              month: r.month,
              day: r.day
            }),
            year: r.year,
            month: r.month,
            fullDate: this.getCellTitle(r),
            date: r,
            label: r.day,
            isToday: s,
            isDisabled: o,
            isCurrentMonth: r.month === this.calendarMonth
          });
        }), e.push(n);
      }
      return e;
    },
    dayFromValueOrToday() {
      return this.dayFromValue || (/* @__PURE__ */ new Date()).getDate();
    },
    dayFromValue() {
      return this.value ? new Date(this.value).getDate() : "";
    },
    idForFocus() {
      return this.dayForFocusButton ? `${this.id}_${this.dayForFocusButton}` : "";
    },
    daysInMonth() {
      return qn(`${this.calendarYear}_${this.calendarMonth + 1}`, "YYYY-MM").daysInMonth();
    },
    todayTranslate() {
      return this.currentLanguage.today;
    }
  },
  methods: {
    selectDate(e, { year: t, month: n, day: r }) {
      e.stopPropagation();
      const s = new Date(t, n, r);
      this.disabledDate(s) || this.$emit("select", s);
    },
    getDays(e) {
      const t = this.currentLanguage.days, n = parseInt(e, 10);
      return t.concat(t).slice(n, n + 7);
    },
    getDates(e, t, n) {
      const r = [], s = new Date(e, t);
      s.setDate(0);
      const i = (s.getDay() + 7 - n) % 7 + 1, o = s.getDate() - (i - 1);
      for (let A = 0; A < i; A++)
        r.push({ year: e, month: t - 1, day: o + A });
      s.setMonth(s.getMonth() + 2, 0);
      const u = s.getDate();
      for (let A = 0; A < u; A++)
        r.push({ year: e, month: t, day: 1 + A });
      s.setMonth(s.getMonth() + 1, 1);
      const f = 42 - (i + u);
      for (let A = 0; A < f; A++)
        r.push({ year: e, month: t + 1, day: 1 + A });
      return r;
    },
    isCurrentDayToday({ year: e, month: t, day: n }) {
      const r = this.getCellTime({ year: e, month: t, day: n }), s = (/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0);
      return r === s;
    },
    getCellClasses({ cellTime: e, isToday: t, month: n }) {
      const r = [], s = this.value && new Date(this.value).setHours(0, 0, 0, 0), i = this.startAt && new Date(this.startAt).setHours(0, 0, 0, 0), o = this.endAt && new Date(this.endAt).setHours(0, 0, 0, 0);
      return n < this.calendarMonth ? r.push("last-month") : n > this.calendarMonth ? r.push("next-month") : r.push("cur-month"), t && r.push("today"), this.disabledDate(e) && r.push("disabled"), s && (e === s ? r.push("actived") : (i && e <= s || o && e >= s) && r.push("inrange")), r.join(" ");
    },
    getCellTime({ year: e, month: t, day: n }) {
      return new Date(e, t, n).getTime();
    },
    getCellTitle({ year: e, month: t, day: n }) {
      return fu(new Date(e, t, n), this.dateFormat);
    },
    getId({ month: e, day: t }) {
      let n = `${this.id}_${t}`;
      return e < this.calendarMonth ? n += "_last_month" : e > this.calendarMonth && (n += "_next_month"), n;
    },
    setFocusToActiveDay() {
      setTimeout(() => {
        this.setDefaultDayForFocusButton(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultDayForFocusButton() {
      this.dayForFocusButton = this.dayFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === Z.arrowUp ? (this.setFocusToPast(7), this.stopCurrentEvent(e)) : t === Z.arrowDown ? (this.setFocusToFuture(7), this.stopCurrentEvent(e)) : t === Z.arrowLeft ? (this.setFocusToPast(1), this.stopCurrentEvent(e)) : t === Z.arrowRight && (this.setFocusToFuture(1), this.stopCurrentEvent(e));
    },
    setFocusToPast(e) {
      const t = this.dayForFocusButton - e;
      t > 0 ? this.dayForFocusButton = t : (this.$emit("handleIconMonth", -1), setTimeout(() => {
        this.dayForFocusButton = this.daysInMonth - Math.abs(t);
      })), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToFuture(e) {
      const t = this.dayForFocusButton + e;
      if (t <= this.daysInMonth)
        this.dayForFocusButton = t;
      else {
        const n = this.daysInMonth;
        this.$emit("handleIconMonth", 1), this.dayForFocusButton = t - n;
      }
      this.setFocusToElementWithTimeout(this.idForFocus);
    },
    destroyListenerForPressButtonsCallback() {
      this.dayForFocusButton = void 0;
    }
  },
  render() {
    return c("table", {
      class: "pux_datepicker__panel pux_datepicker__panel_date",
      role: "grid",
      ariaReadonly: !0,
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      c("thead", null, [
        c("tr", null, [
          this.ths.map((e, t) => c("th", {
            key: t,
            ariaLabel: e.longName
          }, e.shortName))
        ])
      ]),
      c("tbody", null, [
        this.trsWithTds.map((e, t) => c("tr", {
          key: t
        }, [
          e.map((n, r) => c("td", {
            key: r,
            class: ["cell", n.class, {
              pux_datepicker__panel__cell_focus: n.id === this.idForFocus
            }]
          }, [
            c("button", {
              id: n.id,
              class: "pux_datepicker__panel__button",
              type: "button",
              tabindex: -1,
              ariaHidden: !0,
              ariaSelected: !!(n.isCurrentMonth && n.label === this.dayFromValue),
              onClick: (s) => this.selectDate(s, n.date)
            }, [
              c("span", {
                ariaHidden: !0
              }, n.label),
              c("span", {
                class: "a_sr_only"
              }, n.fullDate),
              n.isToday && c("span", {
                class: "a_sr_only"
              }, this.todayTranslate)
            ])
          ]))
        ]))
      ])
    ]);
  }
}, JE = {
  name: "APanelMonth",
  mixins: [
    hf
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    calendarYear: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getFullYear(),
      required: !1
    },
    disabledMonth: {
      type: Function,
      required: !1,
      default: void 0
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "handleIconYear",
    "select"
  ],
  data() {
    return {
      monthIndexForFocus: void 0
    };
  },
  computed: {
    currentYear() {
      return this.value && new Date(this.value).getFullYear();
    },
    currentMonth() {
      return this.value && new Date(this.value).getMonth();
    },
    monthsTranslate() {
      return this.currentLanguage.months;
    },
    months() {
      const e = [];
      return this.monthsTranslate.forEach((t, n) => {
        e.push({
          isActive: this.currentYear === this.calendarYear && this.currentMonth === n,
          isDisabled: this.isDisabled(n),
          label: t,
          id: this.getIdForMonth(n)
        });
      }), e;
    },
    idForFocus() {
      return Pe(this.monthIndexForFocus) ? "" : this.getIdForMonth(this.monthIndexForFocus);
    },
    monthFromValueOrToday() {
      return this.monthFromValue || (/* @__PURE__ */ new Date()).getMonth();
    },
    monthFromValue() {
      return this.value ? new Date(this.value).getMonth() : "";
    }
  },
  methods: {
    isDisabled(e) {
      return !!(typeof this.disabledMonth == "function" && this.disabledMonth(e));
    },
    selectMonth(e, t, n) {
      e.stopPropagation(), e.preventDefault(), !this.isDisabled(t) && this.$emit("select", { month: t, isButtonClick: n });
    },
    getIdForMonth(e) {
      return `${this.id}_month_${e}`;
    },
    setFocusToActiveMonth() {
      setTimeout(() => {
        this.setDefaultMonthForFocus(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultMonthForFocus() {
      this.monthIndexForFocus = this.monthFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === Z.arrowUp || t === Z.arrowLeft ? (this.setFocusToLastMonth(), this.stopCurrentEvent(e)) : (t === Z.arrowDown || t === Z.arrowRight) && (this.setFocusToNextMonth(), this.stopCurrentEvent(e));
    },
    setFocusToLastMonth() {
      const e = this.monthIndexForFocus - 1;
      e >= 0 ? this.monthIndexForFocus = e : (this.$emit("handleIconYear", -1), this.monthIndexForFocus = 11), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToNextMonth() {
      const e = this.monthIndexForFocus + 1;
      e <= 11 ? this.monthIndexForFocus = e : (this.$emit("handleIconYear", 1), this.monthIndexForFocus = 0), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    keypress(e, t) {
      (e.keyCode === Z.enter || e.keyCode === Z.space) && this.selectMonth(e, t);
    }
  },
  render() {
    return c("ul", {
      class: "pux_datepicker__panel pux_datepicker__panel_month pux_datepicker__panel__list",
      role: "listbox",
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      this.months.map((e, t) => c("li", {
        id: e.id,
        key: e.id,
        class: ["cell", {
          actived: e.isActive,
          disabled: e.isDisabled,
          pux_datepicker__panel__cell_focus: t === this.monthIndexForFocus
        }],
        role: "option",
        ariaSelected: !!e.isActive,
        tabindex: -1,
        onClick: (n) => this.selectMonth(n, t),
        onKeypress: (n) => this.keypress(n, t)
      }, e.label))
    ]);
  }
};
function NF(e, {
  getCurrentId: t = () => {
  },
  timesFiltered: n = _(() => [])
}) {
  const r = B(void 0), s = B(void 0), i = _(() => `${s.value}_${r.value}`), o = _(() => t({
    columnIndex: s.value,
    rowIndex: r.value
  })), u = (b) => {
    const I = document.getElementById(b);
    I && I.focus();
  }, f = () => {
    const b = n.value[s.value];
    r.value > 0 ? r.value-- : r.value = b.length - 1, u(o.value);
  }, A = () => {
    const b = n.value[s.value];
    r.value < b.length - 1 ? r.value++ : r.value = 0, u(o.value);
  }, E = () => {
    s.value > 0 ? s.value-- : s.value = n.value.length - 1, r.value = 0, u(o.value);
  }, p = () => {
    s.value < n.value.length - 1 ? s.value++ : s.value = 0, r.value = 0, u(o.value);
  }, T = (b) => {
    b.preventDefault(), b.stopPropagation();
  };
  return {
    fullIndexForFocus: i,
    idForFocus: o,
    pressButton: (b) => {
      const I = b.keyCode;
      I === Z.arrowUp ? (f(), T(b)) : I === Z.arrowDown ? (A(), T(b)) : I === Z.arrowLeft ? (E(), T(b)) : I === Z.arrowRight && (p(), T(b));
    },
    setDefaultTimeForFocus: () => {
      r.value = 0, s.value = 0;
    }
  };
}
function BF({
  idForFocus: e = _(() => ""),
  setDefaultTimeForFocus: t = () => {
  },
  setListenerForPressButtons: n = () => {
  }
}) {
  return {
    setFocusToActiveTime: () => {
      setTimeout(() => {
        t(), document.getElementById(e.value).focus(), n();
      });
    }
  };
}
function uS(e, {
  destroyListenerForPressButtonsCallback: t = () => {
  },
  idForFocus: n = _(() => ""),
  pressButton: r = () => {
  }
}) {
  const s = d(e, "id"), i = _(() => `${s.value}_header`), o = _(() => n.value ? {
    "aria-activedescendant": n.value
  } : {}), u = _(() => `${s.value}DestroyKeyDown`), f = () => {
    document.removeEventListener("keydown", r), t();
  };
  return {
    attributesForMainElement: o,
    destroyEventBus: () => {
      gt.$off(u.value, f);
    },
    destroyListenerForPressButtons: f,
    idForHeader: i,
    setEventBus: () => {
      gt.$on(u.value, f);
    },
    setListenerForPressButtons: () => {
      document.addEventListener("keydown", r);
    }
  };
}
function wF(e, { emit: t }) {
  const n = d(e, "disabledTime"), r = (i, o) => {
    Ne(n.value) && n.value(i) || t("select", new Date(i), o);
  };
  return {
    keypress: (i, o, u) => {
      (i.keyCode === Z.enter || i.keyCode === Z.space) && (r(o, u), i.stopPropagation(), i.preventDefault());
    },
    selectTime: r
  };
}
function PF(e) {
  const t = d(e, "currentLanguage"), n = d(e, "disabledTime"), r = d(e, "id"), s = d(e, "minuteStep"), i = d(e, "value"), o = _(() => Ne(n.value)), u = (D) => ("00" + D).slice(String(D).length), f = _(() => i.value ? new Date(i.value) : (/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0)), A = ({ columnIndex: D, rowIndex: w }) => `${r.value}_time_${D}_${w}`, E = _(() => Ho(24)), p = _(() => i.value ? new Date(i.value).getHours() : 0), T = _(() => s.value || 1), S = _(() => parseInt(60 / T.value)), m = _(() => Ho(0, S.value * T.value, T.value)), b = _(() => i.value ? new Date(i.value).getMinutes() : 0), I = _(() => s.value === 0 ? Ho(0, 60) : []), v = _(() => i.value ? new Date(i.value).getSeconds() : 0), g = ({ times: D, timeFunctionName: w, currentTime: F, ariaLabel: P, columnIndex: M }) => {
    const O = [];
    return D.forEach((q, U) => {
      const G = new Date(f.value)[w](q), te = q === F, re = o.value && n.value(G), ie = u(q);
      O.push({
        label: ie,
        time: G,
        isActive: te,
        isDisabled: re,
        ariaLabel: `${P}: ${ie}`,
        id: A({
          columnIndex: M,
          rowIndex: U
        })
      });
    }), O;
  }, R = _(() => {
    const D = [];
    let w = 0;
    const F = g({
      times: E.value,
      timeFunctionName: "setHours",
      currentTime: p.value,
      ariaLabel: t.value.hours,
      columnIndex: w
    });
    F.length && (D.push(F), w++);
    const P = g({
      times: m.value,
      timeFunctionName: "setMinutes",
      currentTime: b.value,
      ariaLabel: t.value.minutes,
      columnIndex: w
    });
    P.length && (D.push(P), w++);
    const M = g({
      times: I.value,
      timeFunctionName: "setSeconds",
      currentTime: v.value,
      ariaLabel: t.value.seconds,
      columnIndex: w
    });
    return M.length && D.push(M), D;
  });
  return {
    getCurrentId: A,
    timesFiltered: R
  };
}
const QE = {
  name: "APanelTime",
  props: {
    currentLanguage: {
      type: Object,
      required: !0
    },
    disabledTime: {
      type: Function,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    minuteStep: {
      type: Number,
      default: 0,
      validator: (e) => e >= 0 && e <= 60
    },
    timeType: {
      type: Array,
      default() {
        return ["24", "a"];
      }
    },
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: void 0
    }
  },
  emits: [
    "select"
  ],
  setup(e, t) {
    const {
      getCurrentId: n,
      timesFiltered: r
    } = PF(e), {
      fullIndexForFocus: s,
      idForFocus: i,
      pressButton: o,
      setDefaultTimeForFocus: u
    } = NF(e, {
      getCurrentId: n,
      timesFiltered: r
    }), {
      keypress: f,
      selectTime: A
    } = wF(e, t), {
      attributesForMainElement: E,
      destroyEventBus: p,
      destroyListenerForPressButtons: T,
      idForHeader: S,
      setEventBus: m,
      setListenerForPressButtons: b
    } = uS(e, {
      idForFocus: i,
      pressButton: o
    }), {
      setFocusToActiveTime: I
    } = BF({
      idForFocus: i,
      setDefaultTimeForFocus: u,
      setListenerForPressButtons: b
    });
    return m(), Ot(() => {
      p(), T();
    }), {
      attributesForMainElement: E,
      idForHeader: S,
      fullIndexForFocus: s,
      keypress: f,
      selectTime: A,
      setFocusToActiveTime: I,
      timesFiltered: r
    };
  },
  render() {
    return c("div", {
      class: "pux_datepicker__panel pux_datepicker__panel_time",
      ...this.attributesForMainElement
    }, [
      this.timesFiltered.map((e, t) => c("ul", {
        key: t,
        class: "pux_datepicker__time_list",
        role: "listbox",
        "aria-labelledby": this.idForHeader,
        style: { width: `${100 / this.timesFiltered.length}%` }
      }, [
        e.map((n, r) => c("li", {
          id: n.id,
          key: r,
          class: ["cell", {
            actived: n.isActive,
            disabled: n.isDisabled,
            pux_datepicker__panel__cell_focus: t + "_" + r === this.fullIndexForFocus
          }],
          tabindex: -1,
          role: "option",
          ariaSelected: !!n.isActive,
          ariaLabel: n.ariaLabel,
          onClick: () => this.selectTime(n.time),
          onKeypress: (s) => this.keypress(s, n.time, t === this.timesFiltered.length - 1)
        }, n.label))
      ]))
    ]);
  }
}, xF = {
  name: "APanelYearItem",
  props: {
    prefixForId: {
      type: String,
      required: !0
    },
    year: {
      type: Number,
      required: !0
    },
    yearFromValue: {
      type: Number,
      required: !1,
      default: void 0
    },
    yearIndex: {
      type: Number,
      required: !0
    },
    isDisabled: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "selectYear"
  ],
  computed: {
    isDisabledLocal() {
      return this.isDisabled(this.year);
    },
    isYearActive() {
      return this.yearFromValue === this.year;
    },
    idForList() {
      return `${this.prefixForId}${this.yearIndex}`;
    },
    ariaSelected() {
      return `${this.isYearActive}`;
    }
  },
  methods: {
    selectYearLocal(e, t) {
      e.stopPropagation(), e.preventDefault(), !this.isDisabledLocal && this.$emit("selectYear", { year: this.year, isButtonClick: t });
    },
    keypress(e) {
      (e.keyCode === Z.enter || e.keyCode === Z.space) && this.selectYearLocal(e, !0);
    }
  },
  render() {
    return c("li", {
      id: this.idForList,
      class: ["cell", {
        actived: this.isYearActive,
        disabled: this.isDisabledLocal
      }],
      role: "option",
      tabindex: -1,
      "aria-selected": this.ariaSelected,
      onClick: this.selectYearLocal,
      onKeypress: this.keypress
    }, this.year);
  }
};
function MF(e, { emit: t }) {
  const n = d(e, "id"), r = B(void 0), s = _(() => `${n.value}_year_`), i = (T) => `${s.value}${T}`, o = _(() => Pe(r.value) ? "" : i(r.value)), u = (T) => {
    T.preventDefault(), T.stopPropagation();
  }, f = (T) => {
    setTimeout(() => {
      const S = document.getElementById(T);
      S && S.focus();
    });
  }, A = () => {
    const T = r.value - 1;
    T >= 0 && T <= 9 ? r.value = T : (t("handleIconYear", -1), r.value = 9), f(o.value);
  }, E = () => {
    const T = r.value + 1;
    T <= 9 && T >= 0 ? r.value = T : (t("handleIconYear", 1), r.value = 0), f(o.value);
  };
  return {
    idForFocus: o,
    prefixForId: s,
    pressButton: (T) => {
      const S = T.keyCode;
      S === Z.arrowUp || S === Z.arrowLeft ? (A(), u(T)) : (S === Z.arrowDown || S === Z.arrowRight) && (E(), u(T));
    },
    yearIndexForFocus: r
  };
}
function FF(e, {
  idForFocus: t = _(() => ""),
  setListenerForPressButtons: n = () => {
  },
  yearIndexForFocus: r = B(void 0)
}) {
  const s = d(e, "firstYear"), i = d(e, "value"), o = _(() => Math.floor(s.value / 10) * 10), u = _(() => i.value && new Date(i.value).getFullYear()), f = _(() => u.value || (/* @__PURE__ */ new Date()).getFullYear()), A = _(() => {
    const T = f.value - o.value;
    return T <= 9 && T >= 0 ? T : 0;
  }), E = () => {
    r.value = A.value;
  };
  return {
    firstYearLocal: o,
    setFocusToActiveYear: () => {
      setTimeout(() => {
        E(), document.getElementById(t.value).focus(), n();
      });
    },
    yearFromValue: u
  };
}
function qF(e, { emit: t }) {
  const n = d(e, "disabledYear"), r = (i) => !!(Ne(n.value) && n.value(i));
  return {
    isDisabled: r,
    selectYear: ({ year: i, isButtonClick: o }) => {
      r(i) || t("select", { year: i, isButtonClick: o });
    }
  };
}
const ep = {
  name: "APanelYear",
  props: {
    disabledYear: {
      type: Function,
      required: !1,
      default: void 0
    },
    firstYear: {
      type: Number,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "handleIconYear",
    "select"
  ],
  setup(e, t) {
    const {
      isDisabled: n,
      selectYear: r
    } = qF(e, t), {
      idForFocus: s,
      prefixForId: i,
      pressButton: o,
      yearIndexForFocus: u
    } = MF(e, t), {
      attributesForMainElement: f,
      destroyEventBus: A,
      destroyListenerForPressButtons: E,
      idForHeader: p,
      setEventBus: T,
      setListenerForPressButtons: S
    } = uS(e, {
      idForFocus: s,
      pressButton: o
    }), {
      firstYearLocal: m,
      setFocusToActiveYear: b,
      yearFromValue: I
    } = FF(e, {
      idForFocus: s,
      setListenerForPressButtons: S,
      yearIndexForFocus: u
    });
    return T(), Ot(() => {
      A(), E();
    }), {
      attributesForMainElement: f,
      firstYearLocal: m,
      idForFocus: s,
      idForHeader: p,
      isDisabled: n,
      prefixForId: i,
      selectYear: r,
      setFocusToActiveYear: b,
      yearFromValue: I,
      yearIndexForFocus: u
    };
  },
  render() {
    return c("ul", {
      class: "pux_datepicker__panel pux_datepicker__panel_year pux_datepicker__panel__list",
      role: "listbox",
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      Ho(10).map((e) => c(xF, {
        key: e,
        class: {
          pux_datepicker__panel__cell_focus: e === this.yearIndexForFocus
        },
        year: this.firstYearLocal + e,
        yearFromValue: this.yearFromValue,
        yearIndex: e,
        prefixForId: this.prefixForId,
        isDisabled: this.isDisabled,
        onSelectYear: this.selectYear
      }))
    ]);
  }
};
function $F(e, t) {
  if (!t) {
    e.scrollTop = 0;
    return;
  }
  const n = [];
  let r = t.offsetParent;
  for (; r && e !== r && e.contains(r); )
    n.push(r), r = r.offsetParent;
  const s = t.offsetTop + n.reduce((f, A) => f + A.offsetTop, 0), i = s + t.offsetHeight, o = e.scrollTop, u = o + e.clientHeight;
  s < o ? e.scrollTop = s : i > u && (e.scrollTop = i - e.clientHeight);
}
const Rd = {
  name: "ADatepickerCalendarPanel",
  components: {
    APanelDate: ZE,
    APanelMonth: JE,
    APanelTime: QE,
    APanelYear: ep
  },
  mixins: [
    hf
  ],
  props: {
    currentLanguage: {
      type: Object,
      required: !0
    },
    dateFormat: {
      type: String,
      default: "YYYY-MM-DD"
    },
    defaultValue: {
      validator: function(e) {
        return vr(e);
      },
      default: void 0
    },
    disabledDays: {
      type: [Array, Function],
      default: function() {
        return [];
      }
    },
    endAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    firstDayOfWeek: {
      default: 1,
      type: Number,
      validator: (e) => e >= 1 && e <= 7
    },
    id: {
      type: String,
      required: !0
    },
    index: {
      type: Number,
      default: void 0
    },
    minuteStep: {
      type: Number,
      default: 0,
      validator: (e) => e >= 0 && e <= 60
    },
    notAfter: {
      default: null,
      validator: function(e) {
        return !e || vr(e);
      }
    },
    notBefore: {
      default: null,
      validator: function(e) {
        return !e || vr(e);
      }
    },
    startAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      default: "date"
      // ["date", "datetime"]
    },
    value: {
      default: null,
      validator: function(e) {
        return e === null || vr(e);
      }
    },
    visible: {
      type: Boolean,
      default: !1
    }
  },
  emits: [
    "closePopup",
    "selectDate",
    "selectTime"
  ],
  data() {
    const e = this.getNow(this.value), t = e.getFullYear(), n = e.getMonth(), r = Math.floor(t / 10) * 10;
    return {
      panel: "NONE",
      dates: [],
      calendarMonth: n,
      calendarYear: t,
      firstYear: r,
      isFocusPanelChild: !1,
      isWorkWithKeyboard: !1
    };
  },
  computed: {
    now: {
      get() {
        return new Date(this.calendarYear, this.calendarMonth).getTime();
      },
      set(e) {
        const t = new Date(e);
        this.calendarYear = t.getFullYear(), this.calendarMonth = t.getMonth();
      }
    },
    timeType() {
      const e = /h+/.test(this.$parent.format) ? "12" : "24", t = /A/.test(this.$parent.format) ? "A" : "a";
      return [e, t];
    },
    timeHeader() {
      return this.type === "time" ? this.$parent.format : this.value && fu(this.value, this.dateFormat);
    },
    yearHeader() {
      const e = this.firstYear + 9;
      return this.currentLanguage.headerYears(this.firstYear, e);
    },
    months() {
      return this.currentLanguage.months;
    },
    notBeforeTime() {
      return this.getCriticalTime(this.notBefore);
    },
    notAfterTime() {
      return this.getCriticalTime(this.notAfter);
    },
    suffixForHeader() {
      return this.panel === "TIME" ? this.currentLanguage.placeholder.regionTime : this.currentLanguage.placeholder.regionDate;
    },
    idForHeaderParent() {
      return `${this.idForHeader}_parent`;
    },
    ariaLabelForButtonLastYear() {
      return this.panel === "YEAR" ? this.currentLanguage.buttons.lastYears : this.currentLanguage.buttons.lastYear;
    },
    ariaLabelForButtonLastMonth() {
      return this.currentLanguage.buttons.lastMonth;
    },
    ariaLabelForButtonNextMonth() {
      return this.currentLanguage.buttons.nextMonth;
    },
    ariaLabelForButtonNextYear() {
      return this.panel === "YEAR" ? this.currentLanguage.buttons.nextYears : this.currentLanguage.buttons.nextYear;
    },
    ariaLabelForButtonCurrentMonth() {
      return this.currentLanguage.buttons.toMonthsView;
    },
    ariaLabelForButtonCurrentYear() {
      return this.currentLanguage.buttons.toYearsView;
    },
    ariaLabelForButtonToDays() {
      return this.currentLanguage.buttons.toDaysView;
    }
  },
  watch: {
    value: {
      immediate: !0,
      handler: "updateNow"
    },
    defaultValue: {
      handler: "updateNow"
    },
    visible: {
      immediate: !0,
      handler: "init"
    },
    panel: {
      handler: "handelPanelChange"
    }
  },
  beforeUnmount() {
    this.destroyListenerForPressTabButton(), this.destroyListenerForPressEscapeButton();
  },
  methods: {
    handelPanelChange(e) {
      e === "YEAR" ? this.firstYear = Math.floor(this.calendarYear / 10) * 10 : e === "TIME" && this.$nextTick().then(() => {
        const t = this.$el.querySelectorAll(".pux_datepicker__panel_time .pux_datepicker__time_list");
        for (let n = 0, r = t.length; n < r; n++) {
          const s = t[n];
          $F(s, s.querySelector(".actived"));
        }
      });
    },
    init(e) {
      if (e) {
        const t = this.type;
        t === "month" ? this.showPanelMonth() : t === "year" ? this.showPanelYear() : t === "time" ? this.showPanelTime() : this.showPanelDate(), this.setListenerForPressEscapeButton();
      } else
        this.showPanelNone(), this.updateNow(this.value), this.destroyListenerForPressEscapeButton();
      this.emitEventBusDestroyAllListenerForPressButtonsForPanels();
    },
    getNow(e) {
      return e ? new Date(e) : this.defaultValue && vr(this.defaultValue) ? new Date(this.defaultValue) : /* @__PURE__ */ new Date();
    },
    updateNow(e) {
      this.now = this.getNow(e);
    },
    getCriticalTime(e) {
      if (!e)
        return null;
      const t = new Date(e);
      return this.type === "year" ? new Date(t.getFullYear(), 0).getTime() : this.type === "month" ? new Date(t.getFullYear(), t.getMonth()).getTime() : this.type === "date" ? t.setHours(0, 0, 0, 0) : t.getTime();
    },
    inBefore(e, t) {
      return t === void 0 && (t = this.startAt), this.notBeforeTime && e < this.notBeforeTime || t && e < this.getCriticalTime(t);
    },
    inAfter(e, t) {
      return t === void 0 && (t = this.endAt), this.notAfterTime && e > this.notAfterTime || t && e > this.getCriticalTime(t);
    },
    inDisabledDays(e) {
      return Array.isArray(this.disabledDays) ? this.disabledDays.some((t) => this.getCriticalTime(t) === e) : typeof this.disabledDays == "function" ? this.disabledDays(new Date(e)) : !1;
    },
    isDisabledYear(e) {
      const t = new Date(e, 0).getTime(), n = new Date(e + 1, 0).getTime() - 1;
      return this.inBefore(n) || this.inAfter(t) || this.type === "year" && this.inDisabledDays(t);
    },
    isDisabledMonth(e) {
      const t = new Date(this.calendarYear, e).getTime(), n = new Date(this.calendarYear, e + 1).getTime() - 1;
      return this.inBefore(n) || this.inAfter(t) || this.type === "month" && this.inDisabledDays(t);
    },
    isDisabledDate(e) {
      const t = new Date(e).getTime(), n = new Date(e).setHours(23, 59, 59, 999);
      return this.inBefore(n) || this.inAfter(t) || this.inDisabledDays(t);
    },
    isDisabledTime(e, t, n) {
      const r = new Date(e).getTime();
      return this.inBefore(r, t) || this.inAfter(r, n) || this.inDisabledDays(r);
    },
    selectDate(e) {
      if (this.type === "datetime") {
        let t = new Date(e);
        tc(this.value) && t.setHours(
          this.value.getHours(),
          this.value.getMinutes(),
          this.value.getSeconds()
        ), this.isDisabledTime(t) && (t.setHours(0, 0, 0, 0), this.notBefore && t.getTime() < new Date(this.notBefore).getTime() && (t = new Date(this.notBefore)), this.startAt && t.getTime() < new Date(this.startAt).getTime() && (t = new Date(this.startAt))), this.selectTime(t), this.showPanelTime();
        return;
      }
      this.$emit("selectDate", e);
    },
    selectYear({ year: e, isButtonClick: t }) {
      if (this.changeCalendarYear(e), this.type.toLowerCase() === "year")
        return this.selectDate(new Date(this.now));
      this.showPanelMonth(), t && this.setFocusToActivePanel();
    },
    selectMonth({ month: e, isButtonClick: t }) {
      if (this.changeCalendarMonth(e), this.type.toLowerCase() === "month")
        return this.selectDate(new Date(this.now));
      this.showPanelDate(), t && this.setFocusToActivePanel();
    },
    selectTime(e, t = !1) {
      this.$emit("selectTime", e, t);
    },
    changeCalendarYear(e) {
      this.updateNow(new Date(e, this.calendarMonth));
    },
    changeCalendarMonth(e) {
      this.updateNow(new Date(this.calendarYear, e));
    },
    getSibling() {
      const e = [
        this.$parent.$refs.calendarPanelRef
      ];
      this.$parent.$refs.calendarPanel2Ref && e.push(this.$parent.$refs.calendarPanel2Ref);
      const t = e.filter(
        (r) => r.$options.name === this.$options.name
      ), n = t.indexOf(this);
      return t[n ^ 1];
    },
    handleIconMonth(e) {
      const t = this.calendarMonth;
      this.changeCalendarMonth(t + e), this.$parent.$emit("changeCalendarMonth", {
        month: t,
        flag: e,
        vm: this,
        sibling: this.getSibling()
      });
    },
    handleIconYear(e) {
      if (this.panel === "YEAR")
        this.changePanelYears(e);
      else {
        const t = this.calendarYear;
        this.changeCalendarYear(t + e), this.$parent.$emit("changeCalendarYear", {
          year: t,
          flag: e,
          vm: this,
          sibling: this.getSibling()
        });
      }
    },
    handleBtnYear(e) {
      e.stopPropagation(), this.showPanelYear(), this.isWorkWithKeyboard && this.setFocusToActivePanel();
    },
    handleBtnMonth(e) {
      e.stopPropagation(), this.showPanelMonth(), this.isWorkWithKeyboard && this.setFocusToActivePanel();
    },
    handleTimeHeader(e) {
      e.stopPropagation(), this.type !== "time" && (this.showPanelDate(), this.isWorkWithKeyboard && this.setFocusToActivePanel());
    },
    changePanelYears(e) {
      this.firstYear = this.firstYear + e * 10;
    },
    showPanelNone() {
      this.panel = "NONE", this.isFocusPanelChild = !1, this.destroyListenerForPressTabButton(), this.emitEventBusDestroyAllListenerForPressButtonsForPanels(), this.setWorkWithoutKeyboard();
    },
    showPanelTime() {
      this.panel = "TIME";
    },
    showPanelDate() {
      this.panel = "DATE";
    },
    showPanelYear() {
      this.panel = "YEAR";
    },
    showPanelMonth() {
      this.panel = "MONTH";
    },
    setFocusToActivePanelFromParent() {
      this.setWorkWithKeyboard(), this.setFocusToActivePanel(), this.setListenerForPressTabButton();
    },
    setFocusToActivePanel() {
      this.isFocusPanelChild = !0, this.setFocusToActiveElementInChild();
    },
    removeFocusFromActivePanel() {
      this.isFocusPanelChild && (this.isFocusPanelChild = !1, this.emitEventBusDestroyAllListenerForPressButtonsForPanels());
    },
    setFocusToActiveElementInChild() {
      var e, t, n, r, s, i, o, u;
      this.panel === "DATE" ? (t = (e = this.$refs) == null ? void 0 : e.panelDate) == null || t.setFocusToActiveDay() : this.panel === "TIME" ? (r = (n = this.$refs) == null ? void 0 : n.panelTime) == null || r.setFocusToActiveTime() : this.panel === "YEAR" ? (i = (s = this.$refs) == null ? void 0 : s.panelYear) == null || i.setFocusToActiveYear() : this.panel === "MONTH" && ((u = (o = this.$refs) == null ? void 0 : o.panelMonth) == null || u.setFocusToActiveMonth());
    },
    setListenerForPressTabButton() {
      document.addEventListener("keydown", this.pressTabButton);
    },
    destroyListenerForPressTabButton() {
      document.removeEventListener("keydown", this.pressTabButton);
    },
    pressTabButton(e) {
      e.keyCode === Z.tab && (this.trapFocus(e), this.stopCurrentEvent(e));
    },
    trapFocus(e) {
      const t = this.$el.querySelectorAll(".pux_datepicker__calendar__tab");
      if (t.length <= 1)
        return;
      let n = !1, r = !1;
      z(t, (s, i) => {
        if (document.activeElement === s)
          return e.shiftKey ? i === 0 ? (t[t.length - 1].focus(), r = !0) : t[i - 1].focus() : (i === t.length - 1 ? t[0].focus() : t[i + 1].focus(), i === t.length - 2 && (r = !0)), n = !0, !1;
      }), n || (e.shiftKey ? t[t.length - 2].focus() : t[0].focus()), r ? this.setFocusToActivePanel() : this.removeFocusFromActivePanel();
    },
    setWorkWithKeyboard() {
      this.isWorkWithKeyboard = !0;
    },
    setWorkWithoutKeyboard() {
      this.isWorkWithKeyboard = !1;
    },
    setListenerForPressEscapeButton() {
      document.addEventListener("keydown", this.pressEscapeButton);
    },
    destroyListenerForPressEscapeButton() {
      document.removeEventListener("keydown", this.pressEscapeButton);
    },
    pressEscapeButton(e) {
      e.keyCode === Z.escape && this.$emit("closePopup", !0);
    }
  },
  render() {
    return c("div", {
      class: ["pux_datepicker__calendar", `pux_datepicker__calendar_${this.panel.toLowerCase()}`],
      role: "region",
      "aria-labelledby": this.idForHeaderParent,
      onClick: (e) => e.stopPropagation()
    }, [
      c("div", {
        id: this.idForHeaderParent,
        class: "a_sr_only",
        role: "header"
      }, [
        c("div", {
          id: this.idForHeader,
          "aria-live": "polite"
        }, [
          this.panel === "DATE" && c("span", null, this.months[this.calendarMonth]),
          (this.panel === "DATE" || this.panel === "MONTH") && c("span", null, this.calendarYear),
          this.panel === "YEAR" && c("span", null, this.yearHeader),
          this.panel === "TIME" && c("span", null, this.timeHeader)
        ]),
        c("div", null, this.suffixForHeader)
      ]),
      c("div", {
        class: "pux_datepicker__calendar__header"
      }, [
        c("div", null, [
          this.panel !== "TIME" && c("button", {
            class: "pux_datepicker__icon_last_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonLastYear,
            innerHTML: "&laquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconYear(-1);
            }
          }),
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__icon_last_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonLastMonth,
            innerHTML: "&lsaquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconMonth(-1);
            }
          })
        ]),
        c("div", null, [
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__current_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonCurrentMonth,
            onClick: this.handleBtnMonth
          }, this.months[this.calendarMonth]),
          (this.panel === "DATE" || this.panel === "MONTH") && c("button", {
            class: "pux_datepicker__current_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonCurrentYear,
            onClick: this.handleBtnYear
          }, this.calendarYear),
          this.panel === "YEAR" && c("span", {
            class: "pux_datepicker__current_year"
          }, this.yearHeader),
          this.panel === "TIME" && c("span", null, [
            this.type === "time" ? c("span", {
              class: "pux_datepicker__time_header"
            }, this.timeHeader) : c("button", {
              class: "pux_datepicker__time_header pux_datepicker__calendar__tab",
              type: "button",
              ariaLabel: this.ariaLabelForButtonToDays,
              onClick: this.handleTimeHeader
            }, this.timeHeader)
          ])
        ]),
        c("div", null, [
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__icon_next_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonNextMonth,
            innerHTML: "&rsaquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconMonth(1);
            }
          }),
          this.panel !== "TIME" && c("button", {
            class: "pux_datepicker__icon_next_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonNextYear,
            innerHTML: "&raquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconYear(1);
            }
          })
        ])
      ]),
      c("div", {
        class: "pux_datepicker__calendar__content",
        role: "application"
      }, [
        c(ZE, {
          ref: "panelDate",
          id: this.id,
          style: this.panel !== "DATE" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "DATE"
          },
          tabindex: 0,
          value: this.value,
          dateFormat: this.dateFormat,
          calendarMonth: this.calendarMonth,
          calendarYear: this.calendarYear,
          startAt: this.startAt,
          endAt: this.endAt,
          firstDayOfWeek: this.firstDayOfWeek,
          disabledDate: this.isDisabledDate,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectDate,
          onHandleIconMonth: this.handleIconMonth
        }),
        c(ep, {
          ref: "panelYear",
          id: this.id,
          style: this.panel !== "YEAR" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "YEAR"
          },
          value: this.value,
          disabledYear: this.isDisabledYear,
          firstYear: this.firstYear,
          onSelect: this.selectYear,
          onHandleIconYear: this.handleIconYear
        }),
        c(JE, {
          ref: "panelMonth",
          id: this.id,
          style: this.panel !== "MONTH" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "MONTH"
          },
          value: this.value,
          disabledMonth: this.isDisabledMonth,
          calendarYear: this.calendarYear,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectMonth,
          onHandleIconYear: this.handleIconYear
        }),
        c(QE, {
          ref: "panelTime",
          id: this.id,
          style: this.panel !== "TIME" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "TIME"
          },
          minuteStep: this.minuteStep,
          value: this.value,
          disabledTime: this.isDisabledTime,
          timeType: this.timeType,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectTime
        })
      ])
    ]);
  }
}, UF = {
  name: "ADatepickerIcon",
  computed: {
    svgHtml() {
      return `<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 200 200" class="a_datepicker__calendar_icon">
        <rect x="13" y="29" rx="14" ry="14" width="174" height="158" fill="transparent"></rect> 
        <line x1="46" x2="46" y1="8" y2="50"></line> <line x1="154" x2="154" y1="8" y2="50"></line> 
        <line x1="13" x2="187" y1="70" y2="70"></line> 
        <text x="50%" y="135" font-size="90" stroke-width="1" text-anchor="middle" dominant-baseline="middle">${this.todayInDayFormat}</text>
      </svg>`;
    },
    todayInDayFormat() {
      return (/* @__PURE__ */ new Date()).getDate();
    }
  },
  render() {
    return c("span", {
      ariaHidden: !0,
      innerHTML: this.svgHtml
    });
  }
};
function kF(e, {
  currentLanguage: t = _(() => ({})),
  popupVisible: n = B(!1)
}) {
  const r = d(e, "extra"), s = d(e, "id"), i = d(e, "placeholder"), o = d(e, "range"), u = d(e, "type"), f = d(e, "width"), A = _(() => ot(i.value) ? Dt({ placeholder: i.value, extra: r.value }) : o.value ? t.value.placeholder.dateRange : u.value === "time" ? t.value.placeholder.time : t.value.placeholder.date), E = _(() => `${s.value}_panel`), p = _(() => [
    `${E.value}_0`,
    `${E.value}_1`
  ]), T = _(() => `${!n.value}`), S = _(() => `${n.value}`), m = _(() => `${s.value}_calendar`), b = _(() => On(f.value) || ot(f.value) && /^\d+$/.test(f.value) ? f.value + "px" : f.value), I = _(() => String(u.value).toLowerCase());
  return {
    ariaExpandedForCalendar: S,
    ariaHiddenForCalendar: T,
    idForCalendar: m,
    idForPanel: E,
    idsForPanelRange: p,
    innerPlaceholder: A,
    innerType: I,
    widthLocal: b
  };
}
function HF(e, { emit: t }, {
  calendarPanelRef: n = B(void 0),
  changeModel: r = () => {
  },
  closePopover: s = () => {
  },
  formatLocal: i = _(() => ""),
  formatSaveLocal: o = _(() => ""),
  setCloseFocus: u = () => {
  }
}) {
  const f = d(e, "range"), A = d(e, "confirm"), E = d(e, "disabled"), p = d(e, "modelValue"), T = d(e, "editable"), S = d(e, "type"), m = B(null), b = B(null), I = () => {
    m.value = f.value ? [null, null] : null;
  }, v = (J) => !!XE(J, i.value, o.value), g = (J) => {
    try {
      return qn(J, o.value).isValid() && qn(J, o.value).format(i.value) || "";
    } catch {
      return "";
    }
  }, R = (J) => {
    try {
      return !!qn(J, o.value).isValid();
    } catch {
      return !1;
    }
  }, D = (J) => cu(i.value) && typeof this.format.stringify == "function" ? i.value.stringify(J) : fu(J, i.value), w = _(() => b.value !== null ? b.value : f.value ? "" : v(p.value) ? g(p.value) : ""), F = (J, H) => tc(J) && tc(H) && J.getTime() === H.getTime(), P = (J, H) => Array.isArray(J) && Array.isArray(H) && J.length === H.length && J.every((X, ae) => F(X, H[ae])), M = (J) => {
    const H = f.value ? "" : (
      // TODO: range this.currentValue.map(date2value)
      fu(m.value, o.value)
    );
    r({
      model: H
    }), t(J, H);
  }, O = (J = !1) => A.value && !J || E.value || (f.value ? P(p.value, m.value) : F(p.value, m.value)) ? !1 : (M("change"), !0), q = (J) => {
    J && J.stopPropagation();
    const H = f.value ? [null, null] : null;
    m.value = H, O(!0), t("clear");
  }, U = (J) => {
    m.value = J, O() && s(), u();
  }, G = (J, H) => {
    m.value = J, O() && H && s(), H && u();
  }, te = (J) => {
    m.value[0] = J, m.value[1] && O();
  }, re = (J) => {
    m.value[1] = J, m.value[0] && O();
  }, ie = (J) => {
    te(J);
  }, le = (J) => {
    re(J);
  }, oe = (J) => cu(i.value) && typeof i.value.parse == "function" ? i.value.parse(J) : XE(J, i.value, o.value), Te = (J) => {
    try {
      return qn(J, i.value).isValid() && qn(J, i.value).format() || null;
    } catch {
      return null;
    }
  }, Be = (J) => {
    try {
      return qn(J, o.value).isValid() && qn(J, o.value).format() || null;
    } catch {
      return null;
    }
  }, Ae = () => {
    if (T.value && b.value !== null) {
      let J = w.value;
      const H = n.value.isDisabledTime;
      if (!J) {
        q();
        return;
      }
      if (f.value)
        return;
      S.value === "time" && (J = `${qn().format("DD.MM.YYYY")} ${J}`);
      const X = Te(J);
      if (X && !H(X, null, null)) {
        m.value = X, O(!0), s();
        return;
      }
      t("inputError", J);
    }
  }, _e = () => {
    n.value.setFocusToActivePanelFromParent();
  };
  return {
    clearDate: q,
    confirmDate: () => {
      (f.value ? DF(m.value) : vr(m.value)) && O(!0), M("confirm"), s();
    },
    currentValue: m,
    emitDate: M,
    handleChange: Ae,
    handleInput: (J) => {
      b.value = J.target.value;
    },
    handleKeydown: (J) => {
      const H = J.keyCode;
      H === Z.tab || H === Z.enter ? (Ae(), b.value = null, s()) : (H === Z.arrowUp || H === Z.arrowDown) && (_e(), J.stopPropagation(), J.preventDefault());
    },
    initCurrentValue: I,
    onModelValueChange: (J) => {
      f.value ? m.value = [null, null] : m.value = R(J) ? Be(J) : null;
    },
    parse: oe,
    selectDate: U,
    selectEndDate: re,
    selectEndTime: le,
    selectStartDate: te,
    selectStartTime: ie,
    selectTime: G,
    stringify: D,
    text: w,
    updateDate: O,
    userInput: b
  };
}
const VF = {
  en: {
    days: [
      {
        shortName: "Sun",
        longName: "Sunday"
      },
      {
        shortName: "Mon",
        longName: "Monday"
      },
      {
        shortName: "Tue",
        longName: "Tuesday"
      },
      {
        shortName: "Wed",
        longName: "Wednesday"
      },
      {
        shortName: "Thu",
        longName: "Thursday"
      },
      {
        shortName: "Fri",
        longName: "Friday"
      },
      {
        shortName: "Sat",
        longName: "Saturday"
      }
    ],
    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    pickers: ["next 7 days", "next 30 days", "previous 7 days", "previous 30 days"],
    placeholder: {
      date: "Enter date in format DD.MM.YYYY",
      time: "Enter time in format HH:MM",
      dateRange: "Select Date Range",
      regionDate: "Date picker",
      regionTime: "Time picker"
    },
    today: "today",
    buttons: {
      lastYear: "Last year",
      lastYears: "Last 10 years",
      nextYear: "Next year",
      nextYears: "Next 10 years",
      lastMonth: "Last month",
      nextMonth: "Next month",
      monthsView: "Show detailed month view",
      toDaysView: "Switch to the day selection",
      toMonthsView: "Switch to the month selection",
      toYearsView: "switch to the selection of the years"
    },
    hours: "Hours",
    minutes: "Minutes",
    seconds: "Seconds",
    headerYears: (e, t) => `${e} to ${t}`
  },
  ru: {
    days: [
      {
        shortName: "Вс",
        longName: "Воскресенье"
      },
      {
        shortName: "Пн",
        longName: "Понедельник"
      },
      {
        shortName: "Вт",
        longName: "Вторник"
      },
      {
        shortName: "Ср",
        longName: "Среда"
      },
      {
        shortName: "Чт",
        longName: "Четверг"
      },
      {
        shortName: "Пт",
        longName: "Пятница"
      },
      {
        shortName: "Сб",
        longName: "Суббота"
      }
    ],
    months: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
    pickers: ["след. 7 дней", "след. 30 дней", "прош. 7 дней", "прош. 30 дней"],
    placeholder: {
      date: "Введите дату в формате ДД.ММ.ГГГГ",
      time: "Enter время in format ЧЧ.ММ",
      dateRange: "Выберите период",
      regionDate: "Выбор даты",
      regionTime: "Выбор времени"
    },
    today: "Сегодня",
    buttons: {
      lastYear: "Предыдущий год",
      lastYears: "Предыдущие 10 лет",
      nextYear: "Следующий год",
      nextYears: "Следующие 10 лет",
      lastMonth: "Предыдущий месяц",
      nextMonth: "Следующий месяц",
      toDaysView: "Перейти к выбору дня",
      toMonthsView: "Перейти к выбору месяца",
      toYearsView: "Перейти к выбору года"
    },
    hours: "Часы",
    minutes: "Минуты",
    seconds: "Секунды",
    headerYears: (e, t) => `с ${e} по ${t}`
  },
  de: {
    days: [
      {
        shortName: "So",
        longName: "Sontag"
      },
      {
        shortName: "Mo",
        longName: "Montag"
      },
      {
        shortName: "Di",
        longName: "Dienstag"
      },
      {
        shortName: "Mi",
        longName: "Mittwoch"
      },
      {
        shortName: "Do",
        longName: "Donnerstag"
      },
      {
        shortName: "Fr",
        longName: "Freitag"
      },
      {
        shortName: "Sa",
        longName: "Samstag"
      }
    ],
    months: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
    pickers: ["nächste 7 Tage", "nächste 30 Tage", "vorige 7 Tage", "vorige 30 Tage"],
    placeholder: {
      date: "Datum im Format TT.MM.JJJJ eingeben",
      time: "Zeit im Format HH.MM eingeben",
      dateRange: "Zeitraum auswählen",
      regionDate: "Datumsauswahl",
      regionTime: "Zeitauswahl"
    },
    today: "Heute",
    buttons: {
      lastYear: "Voriges Jahr",
      lastYears: "Vorige 10 Jahre",
      nextYear: "Nächstes Jahr",
      nextYears: "Nächste 10 Jahre",
      lastMonth: "Voriger Monat",
      nextMonth: "Nächster Monat",
      toDaysView: "Zur Auswahl der Tage wechseln",
      toMonthsView: "Zur Auswahl der Monate wechseln",
      toYearsView: "Zur Auswahl der Jahre wechseln"
    },
    hours: "Stunden",
    minutes: "Minuten",
    seconds: "Sekunden",
    headerYears: (e, t) => `${e} bis ${t}`
  }
};
function WF(e) {
  const t = d(e, "languages"), n = d(e, "lang"), r = _(() => ({
    ...VF,
    ...t.value
  }));
  return {
    currentLanguage: _(() => r.value[n.value])
  };
}
function GF(e, {
  calendarRef: t = B(void 0),
  focusByCloseRef: n = B(void 0),
  inputRef: r = B(void 0)
}) {
  const s = d(e, "placement"), i = d(e, "disabled"), o = B(void 0), u = B(void 0), f = () => {
    document.addEventListener("click", b);
  }, A = () => {
    document.removeEventListener("click", b);
  }, E = () => {
    !o.value && !i.value && r.value && t.value && (o.value = wl(
      r.value,
      t.value,
      () => {
        t.value && r.value && Ml(
          r.value,
          t.value,
          {
            placement: s.value,
            middleware: [
              xl(),
              Pl({ limiter: Mu() })
            ]
          }
        ).then(({ x: I, y: v }) => {
          Object.assign(t.value.style, {
            left: `${I}px`,
            top: `${v}px`
          });
        });
      }
    ), setTimeout(() => {
      f();
    }, 300));
  }, p = () => {
    n.value && n.value.focus && n.value.focus();
  }, T = () => {
    o.value && (o.value(), o.value = void 0);
  }, S = (I) => {
    A(), T(), u.value = !1, I && p();
  }, m = () => {
    u.value = !0;
  };
  function b(I) {
    t.value.contains(I.target) || S();
  }
  return Bp(() => {
    T(), A();
  }), {
    closePopover: S,
    destroyPopover: T,
    initCalendar: m,
    openPopoverWithFloatingUi: E,
    popupVisible: u,
    setCloseFocus: p
  };
}
function jF() {
  const e = B(void 0), t = B(void 0), n = B(void 0), r = B(void 0), s = B(void 0);
  return {
    calendarRef: e,
    calendarPanelRef: t,
    calendarPanel2Ref: n,
    focusByCloseRef: s,
    inputRef: r
  };
}
function KF(e) {
  const t = d(e, "format"), n = d(e, "formatSave"), r = d(e, "type"), s = {
    date: "DD.MM.YYYY",
    time: "HH:mm:ss",
    datetime: "DD.MM.YYYY HH:mm:ss",
    month: "MM",
    year: "YYYY"
  }, i = {
    date: "YYYY-MM-DD",
    time: "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]",
    datetime: "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]",
    month: "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]",
    year: "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"
  }, o = _(() => n.value ? n.value : i[r.value]);
  return {
    formatLocal: _(() => t.value ? t.value : s[r.value]),
    formatSaveLocal: o
  };
}
const Af = {
  props: {
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_ui_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      required: !1
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ]
}, gd = {
  date: {
    value2date: (e) => vr(e) ? new Date(e) : null,
    date2value: (e) => e
  },
  timestamp: {
    value2date: (e) => vr(e) ? new Date(e) : null,
    date2value: (e) => e && new Date(e).getTime()
  }
}, ci = {
  name: "ADatepicker",
  mixins: [
    Af
  ],
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    appendToBody: {
      type: Boolean,
      default: !1
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    clearable: {
      type: Boolean,
      default: !0
    },
    confirm: {
      type: Boolean,
      default: !1
    },
    confirmText: {
      type: String,
      default: "OK"
    },
    dateFormat: {
      type: String,
      // format the time header and date tooltip
      default: void 0
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    editable: {
      type: Boolean,
      default: !0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    firstDayOfWeek: {
      type: Number,
      required: !1,
      default: 1,
      validator: (e) => e >= 1 && e <= 7
    },
    format: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    formatSave: {
      type: String,
      required: !1,
      default: void 0
    },
    iconDay: {
      type: [Number, String],
      default: void 0
    },
    inputAttr: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: "pux_datepicker__input"
    },
    inputName: {
      type: String,
      default: "date"
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !1
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    lang: {
      type: String,
      default: "de",
      required: !1
    },
    languages: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    minuteStep: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0 && e <= 60
    },
    modelValue: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: void 0
    },
    placeholder: {
      type: String,
      default: null
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => Gn.indexOf(e) !== -1
    },
    popupStyle: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    range: {
      type: Boolean,
      default: !1
    },
    rangeSeparator: {
      type: String,
      default: "~"
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    shortcuts: {
      type: [Boolean, Array],
      default: !0
    },
    type: {
      type: String,
      default: "date",
      // ["date", "datetime"] zendy added "month", "year", mxie added "time"
      validator: (e) => ["date", "datetime", "month", "year", "time"].indexOf(e) !== -1
    },
    valueType: {
      default: "format",
      validator: function(e) {
        return ["timestamp", "format", "date"].indexOf(e) !== -1 || cu(e);
      }
    },
    width: {
      type: [String, Number],
      default: null
    }
  },
  emits: [
    "blur",
    "change",
    "clear",
    "confirm",
    "focus",
    "input",
    "inputError",
    "changeCalendarMonth",
    "changeCalendarYear"
  ],
  setup(e, t) {
    const n = d(e, "modelValue"), {
      formatLocal: r,
      formatSaveLocal: s
    } = KF(e), {
      attributesToExcludeFromRender: i
    } = Bt(e), {
      calendarRef: o,
      calendarPanelRef: u,
      calendarPanel2Ref: f,
      focusByCloseRef: A,
      inputRef: E
    } = jF(), {
      componentStyleHide: p
    } = Xt(e), {
      ariaDescribedbyLocal: T,
      changeModel: S,
      clearModel: m,
      errorsId: b,
      helpTextId: I,
      htmlIdLocal: v,
      isErrors: g,
      isModel: R,
      onBlur: D,
      onFocus: w
    } = zt(e, t), {
      isAutofill: F
    } = Rf({ inputRef: E }), {
      currentLanguage: P
    } = WF(e), {
      closePopover: M,
      destroyPopover: O,
      initCalendar: q,
      openPopoverWithFloatingUi: U,
      popupVisible: G,
      setCloseFocus: te
    } = GF(e, {
      calendarRef: o,
      focusByCloseRef: A,
      inputRef: E
    }), {
      ariaExpandedForCalendar: re,
      ariaHiddenForCalendar: ie,
      idForCalendar: le,
      idForPanel: oe,
      idsForPanelRange: Te,
      innerPlaceholder: Be,
      innerType: Ae,
      widthLocal: _e
    } = kF(e, {
      currentLanguage: P,
      popupVisible: G
    }), {
      clearDate: ve,
      confirmDate: be,
      currentValue: je,
      emitDate: Re,
      handleChange: J,
      handleInput: H,
      handleKeydown: X,
      initCurrentValue: ae,
      onModelValueChange: ge,
      parse: Ce,
      selectDate: ke,
      selectEndDate: Qe,
      selectEndTime: Ue,
      selectStartDate: $e,
      selectStartTime: it,
      selectTime: Ke,
      stringify: lt,
      text: et,
      updateDate: ht,
      userInput: At
    } = HF(e, t, {
      calendarPanelRef: u,
      changeModel: S,
      closePopover: M,
      formatLocal: r,
      formatSaveLocal: s,
      setCloseFocus: te
    }), Mt = () => {
      E.value && E.value.blur();
    };
    return ae(), rt(n, ge, {
      immediate: !0
    }), {
      ariaDescribedbyLocal: T,
      ariaExpandedForCalendar: re,
      ariaHiddenForCalendar: ie,
      attributesToExcludeFromRender: i,
      blur: Mt,
      calendarPanel2Ref: f,
      calendarPanelRef: u,
      calendarRef: o,
      changeModel: S,
      clearDate: ve,
      clearModel: m,
      parse: Ce,
      closePopover: M,
      componentStyleHide: p,
      confirmDate: be,
      stringify: lt,
      currentLanguage: P,
      currentValue: je,
      destroyPopover: O,
      emitDate: Re,
      errorsId: b,
      text: et,
      focusByCloseRef: A,
      formatLocal: r,
      handleChange: J,
      handleInput: H,
      handleKeydown: X,
      helpTextId: I,
      htmlIdLocal: v,
      idForCalendar: le,
      idForPanel: oe,
      idsForPanelRange: Te,
      initCalendar: q,
      innerPlaceholder: Be,
      innerType: Ae,
      inputRef: E,
      isAutofill: F,
      isErrors: g,
      isModel: R,
      onBlur: D,
      onFocus: w,
      openPopoverWithFloatingUi: U,
      popupVisible: G,
      selectDate: ke,
      selectEndDate: Qe,
      selectEndTime: Ue,
      selectStartDate: $e,
      selectStartTime: it,
      selectTime: Ke,
      setCloseFocus: te,
      updateDate: ht,
      userInput: At,
      widthLocal: _e
    };
  },
  computed: {
    transform() {
      const e = this.valueType;
      return cu(e) ? { ...gd.date, ...e } : e === "format" ? {
        value2date: this.parse.bind(this),
        date2value: this.stringify.bind(this)
      } : gd[e] || gd.date;
    },
    showClearIcon() {
      return !this.disabled && this.clearable && this.text;
    },
    innerShortcuts() {
      if (Array.isArray(this.shortcuts))
        return this.shortcuts;
      if (this.shortcuts === !1)
        return [];
      const e = this.currentLanguage.pickers;
      return [
        {
          text: e[0],
          onClick(n) {
            n.currentValue = [/* @__PURE__ */ new Date(), new Date(Date.now() + 3600 * 1e3 * 24 * 7)], n.updateDate(!0);
          }
        },
        {
          text: e[1],
          onClick(n) {
            n.currentValue = [/* @__PURE__ */ new Date(), new Date(Date.now() + 3600 * 1e3 * 24 * 30)], n.updateDate(!0);
          }
        },
        {
          text: e[2],
          onClick(n) {
            n.currentValue = [new Date(Date.now() - 3600 * 1e3 * 24 * 7), /* @__PURE__ */ new Date()], n.updateDate(!0);
          }
        },
        {
          text: e[3],
          onClick(n) {
            n.currentValue = [new Date(Date.now() - 3600 * 1e3 * 24 * 30), /* @__PURE__ */ new Date()], n.updateDate(!0);
          }
        }
      ];
    },
    innerDateFormat() {
      return this.dateFormat ? this.dateFormat : typeof this.formatLocal != "string" ? "YYYY-MM-DD" : this.innerType === "date" ? this.formatLocal : this.formatLocal.replace(/[Hh]+.*[msSaAZ]|\[.*?\]/g, "").trim() || "YYYY-MM-DD";
    }
  },
  watch: {
    popupVisible(e) {
      e ? this.initCalendar() : (this.userInput = null, this.blur());
    }
  },
  methods: {
    isValidValue(e) {
      const { value2date: t } = this.transform;
      return vr(t(e));
    },
    isValidRangeValue(e) {
      const { value2date: t } = this.transform;
      return Array.isArray(e) && e.length === 2 && this.isValidValue(e[0]) && this.isValidValue(e[1]) && t(e[1]).getTime() >= t(e[0]).getTime();
    },
    selectRange(e) {
      typeof e.onClick == "function" ? e.onClick(this) !== !1 && this.closePopover() : (this.currentValue = [new Date(e.start), new Date(e.end)], this.updateDate(!0), this.closePopover());
    },
    handleBlur(e) {
      this.$emit("blur", e);
    },
    handleFocus(e) {
      this.initCalendar(), this.$emit("focus", e);
    }
  },
  render() {
    return this.isRender ? this.readonly ? c(Ln, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.text,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: this.type
    }) : c("div", {
      ...this.$attrs,
      class: [
        this.class,
        "a_form_element__container"
      ],
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel || this.isAutofill
        }]
      }, [
        this.label && c(Ut, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: this.isLabelFloat,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            class: ["pux_datepicker", {
              pux_datepicker_range: this.range,
              disabled: this.disabled
            }],
            style: { width: this.widthLocal },
            onMousedown: this.initCalendar,
            onTouchstart: this.initCalendar
          }, [
            c("div", {
              class: "pux_datepicker__input_wrapper",
              role: "application"
            }, [
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                class: [
                  "a_form_control pux_datepicker__input",
                  this.inputClass,
                  {
                    a_form_control_invalid: this.isErrors
                  }
                ],
                name: this.inputName,
                type: "text",
                autocomplete: "off",
                disabled: this.disabled,
                readonly: !this.editable,
                value: this.text,
                placeholder: this.innerPlaceholder,
                ariaHaspopup: !0,
                "aria-owns": this.idForCalendar,
                ...this.inputAttr,
                onKeydown: this.handleKeydown,
                onFocus: this.handleFocus,
                onBlur: this.handleBlur,
                onInput: this.handleInput,
                onChange: this.handleChange
              }),
              this.showClearIcon && c("span", {
                class: "pux_datepicker__input_wrapper__append pux_datepicker__input_wrapper__clear_wrapper",
                ariaHidden: !0,
                onMousedown: this.clearDate
              }, [
                c("i", {
                  class: "pux_datepicker__input__icon pux_datepicker__input__clear_icon"
                })
              ]),
              c("span", {
                class: "pux_datepicker__input_wrapper__append"
              }, [
                c(UF)
              ])
            ]),
            c(da, {
              to: "body"
            }, [
              this.popupVisible && Nt(c("div", {
                ref: "calendarRef",
                id: this.idForCalendar,
                class: "pux_datepicker__popup",
                ariaHidden: this.ariaHiddenForCalendar,
                ariaExpanded: this.ariaExpandedForCalendar,
                style: this.popupStyle
              }, [
                !!(this.range && this.innerShortcuts.length) && c("div", {
                  class: "pux_datepicker__shortcuts_wrapper"
                }, [
                  this.innerShortcuts.map((e, t) => c("button", {
                    key: t,
                    class: "pux_datepicker__shortcuts_wrapper__shortcuts",
                    type: "button",
                    onClick: () => this.selectRange(e)
                  }, e.text))
                ]),
                this.range ? c("div", {
                  class: "pux_datepicker__range_wrapper"
                }, [
                  c(Rd, {
                    ref: "calendarPanelRef",
                    id: this.idsForPanelRange[0],
                    currentLanguage: this.currentLanguage,
                    dateFormat: this.innerDateFormat,
                    endAt: this.currentValue[1],
                    firstDayOfWeek: this.firstDayOfWeek,
                    index: 0,
                    minuteStep: this.minuteStep,
                    startAt: null,
                    style: "box-shadow: 1px 0 rgba(0, 0, 0, .1);",
                    type: this.innerType,
                    value: this.currentValue[0],
                    visible: this.popupVisible,
                    onSelectDate: this.selectStartDate,
                    onSelectTime: this.selectStartTime,
                    onClosePopup: this.closePopover
                  }),
                  c(Rd, {
                    ref: "calendarPanel2Ref",
                    id: this.idsForPanelRange[1],
                    currentLanguage: this.currentLanguage,
                    dateFormat: this.innerDateFormat,
                    endAt: null,
                    firstDayOfWeek: this.firstDayOfWeek,
                    index: 1,
                    minuteStep: this.minuteStep,
                    startAt: this.currentValue[0],
                    type: this.innerType,
                    value: this.currentValue[1],
                    visible: this.popupVisible,
                    onSelectDate: this.selectEndDate,
                    onSelectTime: this.selectEndTime,
                    onClosePopup: this.closePopover
                  })
                ]) : c(Rd, {
                  ref: "calendarPanelRef",
                  id: this.idForPanel,
                  currentLanguage: this.currentLanguage,
                  dateFormat: this.innerDateFormat,
                  firstDayOfWeek: this.firstDayOfWeek,
                  index: -1,
                  minuteStep: this.minuteStep,
                  type: this.innerType,
                  value: this.currentValue,
                  visible: this.popupVisible,
                  onSelectDate: this.selectDate,
                  onSelectTime: this.selectTime,
                  onClosePopup: this.closePopover
                }),
                this.confirm && c("div", {
                  class: "pux_datepicker__footer"
                }, [
                  c("button", {
                    class: "pux_datepicker__footer__btn pux_datepicker__footer__btn_confirm",
                    type: "button",
                    onClick: this.confirmDate
                  }, this.confirmText)
                ])
              ]), [
                [bl, {
                  mounted: this.openPopoverWithFloatingUi
                }]
              ])
            ]),
            c("div", {
              ref: "focusByCloseRef",
              ariaHidden: !0,
              tabindex: -1
            })
          ])
          /*
           * this.isClearButtonLocal && h(AFormElementBtnClear, {
           *   disabled: this.disabled,
           *   clearButtonClass: this.clearButtonClass,
           *   onClear: this.clearModel,
           * }),
           */
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function zF({
  idFrom: e = _(() => "")
}) {
  return {
    setFocusToFromInput: () => {
      const n = document.getElementById(e.value);
      n && n.focus();
    }
  };
}
function YF({
  htmlIdLocal: e = _(() => "")
}) {
  const t = _(() => `${e.value}_from`), n = _(() => `${e.value}_until`);
  return {
    idFrom: t,
    idUntil: n
  };
}
function XF(e, {
  htmlIdLocal: t = _(() => ""),
  idFrom: n = _(() => ""),
  idUntil: r = _(() => "")
}) {
  const s = d(e, "inputAttributes"), i = d(e, "inputAttributesFrom"), o = d(e, "inputAttributesUntil"), u = _(() => `${t.value}_label`), f = _(() => ({
    "aria-labelledby": `${u.value} ${n.value}`,
    ...s.value,
    ...i.value
  })), A = _(() => ({
    "aria-labelledby": `${u.value} ${r.value}`,
    ...s.value,
    ...o.value
  }));
  return {
    inputAttributesFromLocal: f,
    inputAttributesUntilLocal: A
  };
}
function ZF(e, {
  changeModel: t = () => ({})
}) {
  const n = d(e, "keyFrom"), r = d(e, "keyUntil"), s = d(e, "modelValue"), i = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[n.value];
  }), o = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[r.value];
  });
  return {
    changeModelFrom: (A) => {
      const E = he(s.value) || {};
      E[n.value] = A, t({ model: E });
    },
    changeModelUntil: (A) => {
      const E = he(s.value) || {};
      E[r.value] = A, t({ model: E });
    },
    modelValueFrom: i,
    modelValueUntil: o
  };
}
function JF(e) {
  const t = d(e, "readonlyDefault"), n = d(e, "readonlyDefaultFrom"), r = d(e, "readonlyDefaultUntil"), s = _(() => Pe(n.value) ? t.value : n.value), i = _(() => Pe(r.value) ? t.value : r.value);
  return {
    readonlyDefaultFromLocal: s,
    readonlyDefaultUntilLocal: i
  };
}
const QF = {
  name: "ADatepickerRange",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    appendToBody: {
      type: Boolean,
      default: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearable: {
      type: Boolean,
      default: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    disabledFrom: {
      type: Boolean,
      required: !1
    },
    disabledUntil: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    firstDayOfWeek: {
      type: Number,
      required: !1,
      default: 1,
      validator: (e) => e >= 1 && e <= 7
    },
    format: {
      type: [String, Object],
      default: "DD.MM.YYYY"
    },
    formatSave: {
      type: String,
      required: !1,
      default: "YYYY-MM-DD"
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconDay: {
      type: [Number, String],
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_datepicker_range_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesFrom: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesUntil: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: "pux_datepicker__input"
    },
    inputName: {
      type: String,
      default: "date"
    },
    inputWidth: {
      type: [Number, String],
      required: !1,
      default: 270
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyFrom: {
      tpe: String,
      required: !1,
      default: "from"
    },
    keyUntil: {
      tpe: String,
      required: !1,
      default: "until"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelFrom: {
      type: String,
      required: !1,
      default: "_A_DATEPICKER_RANGE_FROM_"
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    labelUntil: {
      type: String,
      required: !1,
      default: "_A_DATEPICKER_RANGE_UNTIL_"
    },
    lang: {
      type: String,
      default: "de",
      required: !1
    },
    modelUndefined: {
      required: !1,
      default: void 0
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholderFrom: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholderUntil: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => Gn.indexOf(e) !== -1
    },
    popupStyle: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    readonlyDefaultFrom: {
      type: String,
      required: !1,
      default: void 0
    },
    readonlyDefaultUntil: {
      type: String,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    shortcuts: {
      type: [Boolean, Array],
      default: !0
    },
    type: {
      type: String,
      required: !1,
      default: "dateRange"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      componentStyleHide: r
    } = Xt(e), {
      changeModel: s,
      errorsId: i,
      helpTextId: o,
      htmlIdLocal: u,
      isErrors: f
    } = zt(e, t), {
      changeModelFrom: A,
      changeModelUntil: E,
      modelValueFrom: p,
      modelValueUntil: T
    } = ZF(e, {
      changeModel: s
    }), {
      idFrom: S,
      idUntil: m
    } = YF({
      htmlIdLocal: u
    }), {
      inputAttributesFromLocal: b,
      inputAttributesUntilLocal: I
    } = XF(e, {
      htmlIdLocal: u,
      idFrom: S,
      idUntil: m
    }), {
      setFocusToFromInput: v
    } = zF({
      idFrom: S
    }), {
      destroyEventBusClickLabel: g,
      initEventBusClickLabel: R
    } = gf({
      htmlIdLocal: u,
      clickLabel: v
    }), {
      readonlyDefaultFromLocal: D,
      readonlyDefaultUntilLocal: w
    } = JF(e);
    return R(), Ot(() => {
      g();
    }), {
      attributesToExcludeFromRender: n,
      changeModelFrom: A,
      changeModelUntil: E,
      componentStyleHide: r,
      errorsId: i,
      helpTextId: o,
      htmlIdLocal: u,
      idFrom: S,
      idUntil: m,
      inputAttributesFromLocal: b,
      inputAttributesUntilLocal: I,
      isErrors: f,
      modelValueFrom: p,
      modelValueUntil: T,
      readonlyDefaultFromLocal: D,
      readonlyDefaultUntilLocal: w
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Ln, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      isRange: !0,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "dateRange",
      valueParentClass: "a_form_element_readonly_value_range"
    }, () => [
      c(ci, {
        id: this.idFrom,
        alwaysTranslate: this.alwaysTranslate,
        format: this.format,
        formatSave: this.formatSave,
        iconDay: this.iconDay,
        label: this.labelFrom,
        lang: this.lang,
        modelValue: this.modelValueFrom,
        readonly: !0,
        readonlyDefault: this.readonlyDefaultFromLocal,
        shortcuts: this.shortcuts,
        type: "date"
      }),
      c(ci, {
        id: this.idUntil,
        alwaysTranslate: this.alwaysTranslate,
        format: this.format,
        formatSave: this.formatSave,
        iconDay: this.iconDay,
        lang: this.lang,
        label: this.labelUntil,
        modelValue: this.modelValueUntil,
        readonly: !0,
        readonlyDefault: this.readonlyDefaultUntilLocal,
        shortcuts: this.shortcuts,
        type: "date"
      })
    ]) : c("div", {
      ...this.$attrs,
      class: "a_datepicker_range",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_invalid: this.isErrors
        }]
      }, [
        this.label && c(Ut, {
          id: this.idFrom,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: !1,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_datepicker_range__content"
        }, [
          c("div", {
            class: "a_datepicker_range__group a_datepicker_range__group_min"
          }, [
            c(Ut, {
              id: this.idFrom,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_datepicker_range__label a_datepicker_range__label_min",
              isLabelFloat: !1,
              label: this.labelFrom,
              isError: this.isErrors
            }),
            c(ci, {
              id: this.idFrom,
              ref: "from",
              alwaysTranslate: this.alwaysTranslate,
              inputAttr: this.inputAttributesFromLocal,
              modelValue: this.modelValueFrom,
              formatSave: this.formatSave,
              firstDayOfWeek: this.firstDayOfWeek,
              appendToBody: this.appendToBody,
              popupStyle: this.popupStyle,
              iconDay: this.iconDay,
              inputName: this.inputName,
              placement: this.placement,
              clearable: this.clearable,
              shortcuts: this.shortcuts,
              lang: this.lang,
              inputClass: this.inputClass,
              placeholder: this.placeholderFrom,
              disabled: this.disabled || this.disabledFrom,
              width: this.inputWidth,
              format: this.format,
              type: "date",
              onChange: this.changeModelFrom
            })
          ]),
          c("div", {
            class: "a_datepicker_range__group"
          }, [
            c(Ut, {
              id: this.idUntil,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_datepicker_range__label a_datepicker_range__label_max",
              isLabelFloat: !1,
              label: this.labelUntil,
              isError: this.isErrors
            }),
            c(ci, {
              id: this.idUntil,
              ref: "until",
              alwaysTranslate: this.alwaysTranslate,
              modelValue: this.modelValueUntil,
              formatSave: this.formatSave,
              firstDayOfWeek: this.firstDayOfWeek,
              appendToBody: this.appendToBody,
              popupStyle: this.popupStyle,
              iconDay: this.iconDay,
              inputName: this.inputName,
              placement: this.placement,
              clearable: this.clearable,
              shortcuts: this.shortcuts,
              lang: this.lang,
              inputClass: this.inputClass,
              placeholder: this.placeholderUntil,
              disabled: this.disabled || this.disabledUntil,
              width: this.inputWidth,
              format: this.format,
              type: "date",
              inputAttr: this.inputAttributesUntilLocal,
              onChange: this.changeModelUntil
            })
          ]),
          c(Yt, {
            alwaysTranslate: this.alwaysTranslate,
            class: "a_datepicker_range__help_text",
            id: this.helpTextId,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(en, {
            id: this.errorsId,
            alwaysTranslate: this.alwaysTranslate,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
};
function e0(e, {
  isOpen: t = B(!1)
}) {
  const n = d(e, "btnIconLeftLess"), r = d(e, "btnIconLeftMore"), s = d(e, "btnIconRightLess"), i = d(e, "btnIconRightMore"), o = d(e, "btnTextLess"), u = d(e, "btnTextMore"), f = d(e, "btnTitleLess"), A = d(e, "btnTitleMore"), E = d(e, "showLess"), p = B(void 0), T = _(() => t.value ? o.value : u.value), S = _(() => t.value ? f.value : A.value), m = _(() => t.value ? n.value : r.value), b = _(() => t.value ? s.value : i.value), I = _(() => t.value ? E.value : !0);
  return {
    btnIconLeft: m,
    btnIconRight: b,
    btnText: T,
    btnTitle: S,
    buttonRef: p,
    isButtonVisible: I
  };
}
function t0(e) {
  const t = d(e, "isOpenDefault"), n = B(void 0);
  return {
    initIsOpen: () => {
      n.value = t.value;
    },
    isOpen: n
  };
}
function n0(e, {
  isOpen: t = B(!1)
}) {
  const n = d(e, "htmlLess"), r = d(e, "htmlMore"), s = d(e, "safeHtmlLess"), i = d(e, "safeHtmlMore"), o = d(e, "textLess"), u = d(e, "textMore"), f = _(() => t.value ? r.value : n.value), A = _(() => t.value ? i.value : s.value), E = _(() => t.value ? u.value : o.value), p = _(() => !!(E.value || A.value || f.value));
  return {
    htmlLocal: f,
    isTextOrHtmlVisible: p,
    safeHtmlLocal: A,
    textLocal: E
  };
}
const r0 = [
  "a[href]:not([tabindex='-1'])",
  "button:not([disabled]):not([tabindex='-1'])",
  "area[href]:not([tabindex='-1'])",
  "input:not([disabled]):not([tabindex='-1'])",
  "select:not([disabled]):not([tabindex='-1'])",
  "textarea:not([disabled]):not([tabindex='-1'])",
  "iframe:not([tabindex='-1'])",
  "[tabindex]:not([tabindex='-1'])",
  "[contentEditable=true]:not([tabindex='-1'])"
], gi = r0.join(", ");
function Che({ element: e, isMiddleOfScreen: t = !0, behavior: n = "smooth" }) {
  t ? window.scroll({
    top: e.offsetTop - window.innerHeight / 2,
    behavior: n
  }) : e.scrollIntoView();
}
function Or({ element: e, selector: t }) {
  const n = e || document.querySelector(t);
  n && (n.hasAttribute("tabindex") ? n.focus() : (n.setAttribute("tabindex", "-1"), n.focus(), n.removeAttribute("tabindex")));
}
function _S(e) {
  const t = e.getBoundingClientRect();
  return t.width > 0 && t.height > 0;
}
function a0({ element: e } = {}) {
  const t = document.querySelectorAll(gi), n = e || document.activeElement, r = Array.from(t).indexOf(n);
  if (r !== -1) {
    let s = r + 1;
    s >= t.length && (s = 0);
    let i = t[s];
    for (; s < t.length && !_S(i); )
      s++, s >= t.length && (s = 0), i = t[s];
    s < t.length && i.focus();
  }
}
function s0({ element: e } = {}) {
  const t = document.querySelectorAll(gi), n = e || document.activeElement, r = Array.from(t).indexOf(n);
  if (r !== -1) {
    let s = r - 1;
    s < 0 && (s = t.length - 1);
    let i = t[s];
    for (; s >= 0 && !_S(i); )
      s--, s < 0 && (s = t.length - 1), i = t[s];
    s >= 0 && i.focus();
  }
}
function Dhe({ element: e }) {
  if (e.id)
    return `#${e.id}`;
  const t = [];
  for (; e; ) {
    const n = e.tagName;
    n === "BODY" || n === "HTML" ? t.unshift(n) : t.unshift(
      e.className ? `${n}.${e.className.replace(/\s+/g, ".")}` : n
    );
    const r = parent.children;
    r != null && r.length && r.length > 1 && (t[0] += `:nth-child(${Array.prototype.indexOf.call(r, e) + 1})`), e = e.parentElement;
  }
  return t.join(" > ");
}
function i0(e, { emit: t }, {
  isOpen: n = B(!1)
}) {
  const r = B(void 0);
  return {
    containerRef: r,
    toggleButton: () => {
      n.value = !n.value, t("toggle", { isOpen: n.value }), n.value && !window.isScrollDisabled && Li().then(
        () => Or({
          element: r.value
        })
      );
    }
  };
}
const Nhe = {
  name: "ADisclosure",
  inheritAttrs: !0,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    btnAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link a_p_0"
    },
    btnIconLeftLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconLeftMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnId: {
      type: String,
      required: !1,
      default: void 0
    },
    btnParentClass: {
      type: String,
      required: !1,
      default: "a_text_center"
    },
    btnTextLess: {
      type: String,
      required: !1,
      default: "_A_DISCLOSURE_LESS_"
    },
    btnTextMore: {
      type: String,
      required: !1,
      default: "_A_DISCLOSURE_MORE_"
    },
    btnTitleLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitleMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitlePlacement: {
      type: String,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    htmlLess: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlMore: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => at("a_disclosure_")
    },
    isBtnTitleHtml: {
      type: Boolean,
      required: !1
    },
    isOpenDefault: {
      type: Boolean,
      required: !1,
      default: !1
    },
    safeHtmlLess: {
      type: String,
      required: !1,
      default: void 0
    },
    safeHtmlMore: {
      type: String,
      required: !1,
      default: void 0
    },
    showLess: {
      type: Boolean,
      required: !1,
      default: !0
    },
    textLess: {
      type: String,
      required: !1,
      default: void 0
    },
    textMore: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      initIsOpen: r,
      isOpen: s
    } = t0(e), {
      htmlLocal: i,
      isTextOrHtmlVisible: o,
      safeHtmlLocal: u,
      textLocal: f
    } = n0(e, {
      isOpen: s
    }), {
      containerRef: A,
      toggleButton: E
    } = i0(e, t, {
      isOpen: s
    }), {
      btnIconLeft: p,
      btnIconRight: T,
      btnText: S,
      btnTitle: m,
      buttonRef: b,
      isButtonVisible: I
    } = e0(e, {
      isOpen: s
    });
    return r(), n({
      buttonRef: b,
      containerRef: A,
      isOpen: s,
      toggleButton: E
    }), {
      btnIconLeft: p,
      btnIconRight: T,
      btnText: S,
      btnTitle: m,
      buttonRef: b,
      containerRef: A,
      htmlLocal: i,
      isButtonVisible: I,
      isOpen: s,
      isTextOrHtmlVisible: o,
      safeHtmlLocal: u,
      textLocal: f,
      toggleButton: E
    };
  },
  render() {
    return c("div", {
      class: [
        "a_show_more",
        {
          a_show_more_open: this.isOpen
        }
      ]
    }, [
      c("div", {
        class: "a_show_more__wrapper"
      }, [
        c("div", {
          ref: "containerRef",
          id: this.id,
          ariaExpanded: this.isOpen,
          ...this.$attrs
        }, [
          this.isTextOrHtmlVisible && c(pe, {
            alwaysTranslate: this.alwaysTranslate,
            html: this.htmlLocal,
            safeHtml: this.safeHtmlLocal,
            tag: "div",
            text: this.textLocal
          }),
          this.isOpen ? this.$slots.more && this.$slots.more({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          }) : this.$slots.less && this.$slots.less({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          })
        ])
      ]),
      this.isButtonVisible && c("div", {
        class: this.btnParentClass
      }, [
        c(Ee, {
          ref: "buttonRef",
          id: this.btnId,
          alwaysTranslate: this.alwaysTranslate,
          "aria-controls": this.id,
          class: [
            "a_show_more__button",
            this.btnClass
          ],
          disabled: this.disabled,
          iconLeft: this.btnIconLeft,
          iconRight: this.btnIconRight,
          isTitleHtml: this.isBtnTitleHtml,
          text: this.btnText,
          title: this.btnTitle,
          titlePlacement: this.btnTitlePlacement,
          type: "button",
          ...this.btnAttributes,
          onClick: this.toggleButton
        }, () => this.$slots.button && this.$slots.button({
          isButtonVisible: this.isButtonVisible,
          isOpen: this.isOpen
        }))
      ])
    ]);
  }
};
function l0(e) {
  const t = d(e, "action");
  return {
    attributesAction: _(() => {
      const r = {
        ...t.value,
        isHiddenCallback: void 0,
        classReplace: void 0
      };
      return t.value.classReplace ? r.class = t.value.classReplace : ot(r.class) ? r.class += " a_dropdown__item" : st(r.class) ? r.class.a_dropdown__item = !0 : r.class = "a_dropdown__item", r.type === "link" && (r.type = void 0), r;
    })
  };
}
const o0 = {
  name: "ADropdownAction",
  props: {
    action: {
      type: Object,
      required: !0
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      attributesAction: t
    } = l0(e);
    return {
      attributesAction: t
    };
  },
  render() {
    return this.action.type === "button" ? c("li", {
      class: this.action.liClass
    }, [
      c(pt, {
        ...this.attributesAction,
        alwaysTranslate: this.alwaysTranslate,
        isHidden: void 0,
        callback: void 0,
        classButton: void 0,
        classExtra: void 0,
        isConfirm: void 0,
        callbackLocal: void 0,
        onClick: this.action.callback
      })
    ]) : this.action.type === "divider" ? c("li", {
      class: [
        "a_dropdown__divider",
        this.action.liClass
      ]
    }) : this.action.type === "link" ? c("li", {
      class: this.action.liClass
    }, [
      c(Hu, {
        ...this.attributesAction,
        alwaysTranslate: this.alwaysTranslate,
        classButton: void 0,
        classExtra: void 0,
        isHidden: void 0,
        isConfirm: void 0,
        callbackLocal: void 0
      })
    ]) : this.action.type === "template" && this.action.slotName && this.$slots[this.action.slotName] ? this.$slots[this.action.slotName]({
      action: this.action
    }) : null;
  }
}, qa = B({});
function Ef({ id: e, idRef: t } = {}) {
  const n = _(() => Od(t ? { id: t.value } : { id: e })), r = _(() => {
    let s = !1;
    return pn(qa.value) || z(qa.value, (i) => {
      if (i)
        return s = !0, !1;
    }), s;
  });
  return {
    closePopup: rc,
    isCurrentPopupOpen: Od,
    isOnePopupOpen: r,
    isPopupOpen: n,
    openPopup: nc,
    popupOpenIds: qa,
    togglePopup: u0
  };
}
function Od({ id: e }) {
  return !!qa.value[e];
}
function nc({ id: e }) {
  qa.value[e] = !0;
}
function rc({ id: e }) {
  e in qa.value && delete qa.value[e];
}
function u0({ id: e, statusOpen: t }) {
  Pe(t) ? qa.value[e] ? rc({ id: e }) : nc({ id: e }) : t ? nc({ id: e }) : rc({ id: e });
}
function dS({ actions: e }) {
  const t = mt(e, (s) => !s.isHidden), n = [];
  z(t, (s) => {
    (s.type !== "divider" || n.length > 0 && vi(n).type !== "divider") && n.push(s);
  });
  const r = vi(n);
  return r && r.type === "divider" && n.pop(), n;
}
function zo({ class1: e, class2: t, defaultValue: n = void 0 }) {
  return e ? t ? `${e} ${t}` : e : t || n;
}
function _0(e) {
  const t = d(e, "actions"), n = _(() => dS({
    actions: t.value
  })), r = _(() => n.value.length > 0);
  return {
    actionsFiltered: n,
    hasActions: r
  };
}
function d0(e, {
  eventsMenu: t = _(() => ({})),
  statusExpanded: n = B(!1),
  wasOpened: r = B(!1)
}) {
  const s = d(e, "buttonAttributes"), i = d(e, "buttonTag"), o = d(e, "disabled"), u = d(e, "dropdownAttributes"), f = d(e, "dropdownClass"), A = d(e, "id"), E = d(e, "menuWidth"), p = d(e, "persist"), T = _(() => s.value.id || A.value), S = _(() => {
    const v = he(s.value);
    return v["aria-haspopup"] = "true", v["aria-expanded"] = n.value, i.value === "button" && (v.type = v.type || "button"), v;
  }), m = _(() => {
    const v = {};
    return o.value && (i.value === "button" ? v.disabled = !0 : i.value === "a" && (v.ariaDisabled = !0)), v;
  }), b = _(() => {
    const v = he(u.value);
    return v.class = ["a_dropdown__menu", f.value, {
      a_dropdown__menu_show: n.value
    }], E.value && (v.style = `width: ${E.value}px`), qd({}, v, t.value);
  }), I = _(() => n.value || p.value && r.value);
  return {
    idLocal: T,
    buttonAttributesDisabled: m,
    buttonAttributesLocal: S,
    dropdownAttributesLocal: b,
    isMenuRendered: I
  };
}
function c0(e) {
  const t = d(e, "buttonClass"), n = d(e, "class");
  return {
    buttonClassLocal: _(() => {
      let s = {};
      return t.value && (ot(t.value) ? s[t.value] = !0 : st(t.value) && (s = qd(s, t.value))), n.value && (ot(n.value) ? s[n.value] = !0 : st(n.value) && (s = qd(s, n.value))), s;
    })
  };
}
function f0(e, {
  onToggle: t = () => {
  },
  onKeydown: n = () => {
  },
  onOpen: r = () => {
  },
  onClose: s = () => {
  },
  timerCloseHover: i = B(void 0),
  triggerOpen: o = B(void 0)
}) {
  const u = d(e, "triggers"), f = _(() => {
    const S = {};
    return z(u.value, (m) => {
      S[m] = !0;
    }), S;
  }), A = _(() => {
    const S = {};
    return f.value.click && (S.onClick = t, S.onKeydown = n), f.value.focus && (S.onFocus = () => r({ trigger: "focus" })), f.value.hover && (S.onMouseenter = () => r({ trigger: "hover" }), S.onMouseleave = () => s({ trigger: "hover" })), S;
  }), E = () => {
    o.value === "hover" && clearTimeout(i.value);
  }, p = () => {
    s({ trigger: "hover" });
  }, T = _(() => {
    const S = {};
    return f.value.hover && (S.onMouseenter = E, S.onMouseleave = p), S;
  });
  return {
    eventsLocal: A,
    eventsMenu: T
  };
}
function h0(e, {
  dropdownRef: t = B(void 0)
}) {
  const n = d(e, "elementsForArrows");
  return {
    setFocusToFirstElement: () => {
      if (!t.value)
        return;
      const s = t.value.querySelectorAll(n.value);
      s.length !== 0 && s[0].focus();
    }
  };
}
function A0(e, {
  dropdownButtonRef: t = B(void 0),
  dropdownRef: n = B(void 0)
}) {
  const r = d(e, "floatingFlip"), s = d(e, "floatingShift"), i = d(e, "placement"), o = B(void 0), u = _(() => {
    var p, T;
    const E = [];
    return (p = r.value) != null && p.use && E.push(
      xl(r.value)
    ), (T = s.value) != null && T.use && E.push(
      Pl(s.value)
    ), E;
  });
  return {
    destroyPopover: () => {
      o.value && (o.value(), o.value = void 0);
    },
    startPopper: () => {
      !o.value && t.value.$el && n.value && (o.value = wl(
        t.value.$el,
        n.value,
        () => {
          !t.value.$el || !n.value || Ml(
            t.value.$el,
            n.value,
            {
              placement: i.value,
              middleware: u.value
            }
          ).then(({ x: E, y: p }) => {
            Object.assign(n.value.style, {
              left: `${E}px`,
              top: `${p}px`
            });
          });
        }
      ));
    }
  };
}
function E0() {
  const e = B(void 0), t = B(void 0);
  return {
    dropdownButtonRef: e,
    dropdownRef: t
  };
}
const Cd = B(!1);
function cS() {
  return {
    closeDropdownGlobal: () => {
      Cd.value = !1;
    },
    isDropdownGlobalOpen: Cd,
    openDropdownGlobal: () => {
      Cd.value = !0;
    }
  };
}
function p0(e, { emit: t }, {
  closePopup: n = () => {
  },
  dropdownButtonRef: r = B(void 0),
  dropdownRef: s = B(void 0),
  destroyPopover: i = () => {
  },
  openPopup: o = () => {
  },
  setFocusToFirstElement: u = () => {
  },
  startPopper: f = () => {
  }
}) {
  const A = d(e, "disabled"), E = d(e, "dropdownRenderDefault"), p = d(e, "elementsForArrows"), T = d(e, "id"), S = d(e, "isCloseByClickInside"), m = d(e, "isCloseByClickOutside"), b = d(e, "isListWidthSameWithButton"), I = d(e, "lockArrowsNavigation"), v = d(e, "lockTabNavigation"), g = d(e, "persist"), R = d(e, "useEscape"), D = B(void 0), w = B(!1), F = B(!1), P = B(void 0), M = B(void 0), O = B(!1), {
    closeDropdownGlobal: q,
    openDropdownGlobal: U
  } = cS(), G = () => {
    O.value = E.value || !1;
  }, te = ({ down: H }) => {
    var ae;
    const X = s.value.querySelectorAll(p.value);
    if (X.length !== 0) {
      if (((ae = r.value) == null ? void 0 : ae.$el) === document.activeElement) {
        H ? X[0].focus() : X[X.length - 1].focus();
        return;
      }
      z(X, (ge, Ce) => {
        if (ge === document.activeElement)
          return H ? Ce < X.length - 1 && X[Ce + 1].focus() : Ce > 0 && X[Ce - 1].focus(), !1;
      });
    }
  }, re = () => {
    var H, X;
    (X = (H = r.value) == null ? void 0 : H.$el) == null || X.focus();
  }, ie = (H) => {
    const X = H || window.$event;
    if (X.keyCode === Z.arrowDown || X.keyCode === Z.arrowUp) {
      if (!I.value)
        return;
      const ae = X.keyCode === Z.arrowDown;
      te({ down: ae }), H.preventDefault(), H.stopPropagation();
    } else if (X.keyCode === Z.escape)
      R.value && (Re({ trigger: "click" }), H.preventDefault(), H.stopPropagation());
    else if (X.keyCode === Z.tab) {
      if (!v.value)
        return;
      X.shiftKey ? (Re(), setTimeout(() => {
        var ae;
        s0({
          element: (ae = r.value) == null ? void 0 : ae.$el
        });
      })) : (Re(), setTimeout(() => {
        var ae;
        a0({
          element: (ae = r.value) == null ? void 0 : ae.$el
        });
      })), H.stopPropagation(), H.preventDefault();
    }
  }, le = () => {
    m.value && document.addEventListener("click", J);
  }, oe = () => {
    m.value && document.removeEventListener("click", J);
  }, Te = () => {
    w.value || (w.value = !0, document.body.addEventListener("keydown", ie));
  }, Be = () => {
    w.value && (w.value = !1, document.body.removeEventListener("keydown", ie));
  }, Ae = () => {
    b.value && r.value && (D.value = r.value.clientWidth);
  }, _e = ({ trigger: H = "click", selectorToFocus: X } = {}) => {
    H === "hover" && M.value === "hover" && clearTimeout(P.value), !(A.value || F.value) && (M.value = H, Ae(), Te(), F.value = !0, g.value && O.value && f(), O.value = !0, setTimeout(() => {
      le(), X ? setTimeout(() => {
        document.getElementById(X).focus();
      }) : H === "click" && setTimeout(() => {
        u();
      }), U(), o({
        id: T.value
      }), t("open");
    }));
  }, ve = ({ $event: H }) => {
    M.value === "hover" ? F.value && (M.value = "click", H.stopPropagation()) : F.value ? Re({ trigger: "click" }) : _e();
  }, be = (H) => {
    (H.keyCode === Z.enter || H.keyCode === Z.space) && (ve({ $event: H }), H.stopPropagation(), H.preventDefault()), (H.keyCode === Z.arrowUp || H.keyCode === Z.arrowDown) && (F.value || _e());
  };
  function je({ trigger: H }) {
    oe(), Be(), i(), F.value = !1, q(), H && H !== "hover" && // the event did not come from outside
    M.value !== "hover" && re(), M.value = void 0, n({
      id: T.value
    }), t("close");
  }
  function Re({ trigger: H } = {}) {
    if (F.value)
      if (H === "hover") {
        if (M.value !== "hover")
          return;
        P.value = setTimeout(() => {
          je({ trigger: H });
        }, 120);
      } else
        je({ trigger: H });
  }
  function J(H) {
    s.value.contains(H.target) ? S.value && (Re(), re()) : Re();
  }
  return {
    buttonWidth: D,
    destroyEventCloseClick: oe,
    destroyEventPressArrows: Be,
    initWasOpened: G,
    onClose: Re,
    onKeydown: be,
    onOpen: _e,
    onToggle: ve,
    statusExpanded: F,
    timerCloseHover: P,
    triggerOpen: M,
    wasOpened: O
  };
}
const Ha = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708"/>
</svg>`, _a = {
  name: "ADropdown",
  inheritAttrs: !1,
  props: {
    actions: {
      type: Array,
      required: !1,
      default: () => []
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    buttonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    buttonIconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonIconClass: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonIconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    buttonIconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    buttonIconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonIsTitleHtml: {
      type: Boolean,
      required: !1
    },
    buttonLoading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    buttonLoadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    buttonLoadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    buttonPrevent: {
      type: Boolean,
      required: !1
    },
    buttonStop: {
      type: Boolean,
      required: !1
    },
    buttonTag: {
      type: String,
      required: !1,
      default: "button"
    },
    buttonText: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTextAriaHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    buttonTextClass: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonTextScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTitle: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTitlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => ["top", "left", "bottom", "right"].indexOf(e) !== -1
    },
    caretIcon: {
      type: String,
      required: !1,
      default: Ha
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dropdownClass: {
      type: String,
      required: !1,
      default: void 0
    },
    dropdownRenderDefault: {
      type: Boolean,
      required: !1
    },
    dropdownTag: {
      type: String,
      required: !1,
      default: "ul"
    },
    elementsForArrows: {
      type: String,
      required: !1,
      default: gi
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    floatingFlip: {
      type: Object,
      required: !1,
      /*
       * mainAxis?: boolean;
       * crossAxis?: boolean;
       * fallbackAxisSideDirection?: 'none' | 'start' | 'end';
       * flipAlignment?: boolean;
       * fallbackPlacements?: Array<Placement>;
       * fallbackStrategy?: 'bestFit' | 'initialPlacement';
       */
      default: () => ({})
    },
    floatingShift: {
      type: Object,
      required: !1,
      default: () => ({
        use: !0,
        crossAxis: !0,
        padding: 20
      })
    },
    hasCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => at("a_dropdown_btn_")
    },
    inBody: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isCloseByClickInside: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isCloseByClickOutside: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHideWithoutActionAndSlot: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isListWidthSameWithButton: {
      type: Boolean,
      required: !1
    },
    lockArrowsNavigation: {
      type: Boolean,
      required: !1,
      default: !0
    },
    lockTabNavigation: {
      type: Boolean,
      required: !1,
      default: !0
    },
    menuWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    persist: {
      type: Boolean,
      required: !1,
      default: !0
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => Gn.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: "a_tooltip_container"
    },
    triggers: {
      type: Array,
      required: !1,
      default: () => ["click"],
      validator: (e) => Tw(e, ["click", "hover", "focus"]).length === 0
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: [
    "open",
    "close"
  ],
  setup(e, t) {
    const n = d(e, "id"), {
      closePopup: r,
      openPopup: s
    } = Ef(), {
      dropdownButtonRef: i,
      dropdownRef: o
    } = E0(), {
      setFocusToFirstElement: u
    } = h0(e, {
      dropdownRef: o
    }), {
      destroyPopover: f,
      startPopper: A
    } = A0(e, {
      dropdownButtonRef: i,
      dropdownRef: o
    }), {
      buttonWidth: E,
      destroyEventCloseClick: p,
      destroyEventPressArrows: T,
      initWasOpened: S,
      onClose: m,
      onKeydown: b,
      onOpen: I,
      onToggle: v,
      statusExpanded: g,
      timerCloseHover: R,
      triggerOpen: D,
      wasOpened: w
    } = p0(e, t, {
      closePopup: r,
      destroyPopover: f,
      dropdownButtonRef: i,
      dropdownRef: o,
      openPopup: s,
      setFocusToFirstElement: u,
      startPopper: A
    }), {
      eventsLocal: F,
      eventsMenu: P
    } = f0(e, {
      onToggle: v,
      onKeydown: b,
      onOpen: I,
      onClose: m,
      timerCloseHover: R,
      triggerOpen: D
    }), {
      idLocal: M,
      buttonAttributesDisabled: O,
      buttonAttributesLocal: q,
      dropdownAttributesLocal: U,
      isMenuRendered: G
    } = d0(e, {
      eventsMenu: P,
      statusExpanded: g,
      wasOpened: w
    }), {
      actionsFiltered: te,
      hasActions: re
    } = _0(e), {
      addPopperContainerInBody: ie,
      popperContainerIdSelector: le
    } = sf(e), {
      buttonClassLocal: oe
    } = c0(e);
    return S(), ie(), Ot(() => {
      p(), T(), f(), r({
        id: n.value
      });
    }), {
      actionsFiltered: te,
      buttonAttributesDisabled: O,
      buttonAttributesLocal: q,
      buttonClassLocal: oe,
      buttonWidth: E,
      dropdownAttributesLocal: U,
      dropdownButtonRef: i,
      dropdownRef: o,
      eventsLocal: F,
      hasActions: re,
      idLocal: M,
      isMenuRendered: G,
      onClose: m,
      onOpen: I,
      popperContainerIdSelector: le,
      startPopper: A,
      statusExpanded: g
    };
  },
  render() {
    return this.isHideWithoutActionAndSlot && !this.hasActions && !this.$slots.dropdown ? null : [
      c(Ee, {
        ref: "dropdownButtonRef",
        ...this.$attrs,
        id: this.idLocal,
        alwaysTranslate: this.alwaysTranslate,
        tag: this.buttonTag,
        class: this.buttonClassLocal,
        text: this.buttonText,
        textScreenReader: this.buttonTextScreenReader,
        textAriaHidden: this.buttonTextAriaHidden,
        textClass: this.buttonTextClass,
        title: this.buttonTitle,
        isTitleHtml: this.buttonIsTitleHtml,
        titlePlacement: this.buttonTitlePlacement,
        loading: this.buttonLoading,
        loadingClass: this.buttonLoadingClass,
        loadingAlign: this.buttonLoadingAlign,
        iconLeft: this.buttonIconLeft,
        iconRight: this.buttonIconRight,
        iconClass: this.buttonIconClass,
        iconAttributes: this.buttonIconAttributes,
        iconTag: this.buttonIconTag,
        prevent: this.buttonPrevent,
        stop: this.buttonStop,
        extra: this.extra,
        type: "button",
        attributes: this.buttonAttributesLocal,
        ...this.buttonAttributesDisabled,
        ...this.eventsLocal
      }, {
        default: () => this.$slots.button && this.$slots.button(),
        buttonAppend: () => this.hasCaret && c(_t, {
          class: "a_dropdown__caret",
          icon: this.caretIcon
        })
      }),
      c(da, {
        to: this.popperContainerIdSelector,
        disabled: !this.inBody
      }, [
        this.isMenuRendered && Nt(c(
          "div",
          {
            ref: "dropdownRef",
            role: "application",
            "aria-labelledby": this.idLocal,
            ariaHidden: !this.statusExpanded,
            ...this.dropdownAttributesLocal
          },
          [
            c(this.dropdownTag, {}, [
              this.$slots.dropdown && this.$slots.dropdown(),
              this.hasActions && this.actionsFiltered.map((e, t) => c(o0, {
                key: t,
                action: e,
                alwaysTranslate: this.alwaysTranslate
              }, this.$slots))
            ])
          ]
        ), [
          [bl, {
            mounted: this.startPopper
          }]
        ])
      ])
    ];
  }
};
function T0({
  htmlLocalOptions: e = _(() => {
  }),
  textLocalOptions: t = _(() => ({})),
  titleLocalOptions: n = _(() => ({}))
}) {
  const r = _(() => {
    var i, o, u, f;
    return ((i = t.value) == null ? void 0 : i.dataTranslateText) || ((o = e.value) == null ? void 0 : o.dataTranslateSafeHtml) || ((u = e.value) == null ? void 0 : u.dataTranslateHtml) || ((f = n.value) == null ? void 0 : f.title);
  });
  return {
    attributesLocal: _(() => {
      var o, u, f;
      const i = {};
      return (o = t.value) != null && o.dataTranslateText ? i["data-translate-text"] = t.value.dataTranslateText : (u = e.value) != null && u.dataTranslateSafeHtml ? i["data-translate-safe-html"] = e.value.dataTranslateSafeHtml : (f = e.value) != null && f.dataTranslateHtml && (i["data-translate-html"] = e.value.dataTranslateHtml), n.value.title && (i.title = n.value.title, n.value.dataTranslateTitle && (i["data-translate-title"] = n.value.dataTranslateTitle)), i;
    }),
    hasAttributesLocal: r
  };
}
function S0(e, {
  hasTextAfter: t = _(() => !1),
  hasTextBefore: n = _(() => !1),
  textAfterForCurrentDevice: r = _(() => ""),
  textBeforeForCurrentDevice: s = _(() => "")
}) {
  const i = d(e, "alwaysTranslate"), o = d(e, "extra"), u = d(e, "html"), f = d(e, "safeHtml"), {
    isPlaceholderTranslate: A,
    getTranslatedText: E
  } = Gs(), {
    isMobileWidth: p
  } = Sn(), {
    translationChanges: T
  } = Ni(), S = _(() => st(f.value) ? p.value ? f.value.mobile : f.value.desktop : f.value), m = _(() => st(u.value) ? p.value ? u.value.mobile : u.value.desktop : u.value), b = _(() => Se(f.value)), I = _(() => Se(u.value)), v = _(() => b.value ? f.value.length > 0 : !Pe(S.value)), g = _(() => I.value ? u.value.length > 0 : !Pe(m.value)), R = _(() => n.value ? `<span>${s.value}</span>` : ""), D = _(() => t.value ? `<span>${r.value}</span>` : ""), w = _(() => {
    const P = {
      safeHtml: void 0,
      html: void 0,
      dataTranslateHtml: void 0,
      dataTranslateSafeHtml: void 0
    };
    if (!T.value)
      return P;
    if (v.value) {
      const M = b.value ? f.value : [S.value];
      let O = "", q = "";
      z(M, (U) => {
        !U && U !== 0 || (O && (O += " ", q += " "), A(U) ? (O += E({
          placeholder: U,
          extra: o.value,
          alwaysTranslate: i.value
        }), q += U) : O += U);
      }), P.safeHtml = O || void 0, P.dataTranslateSafeHtml = q || void 0;
    } else if (g.value) {
      const M = I.value ? u.value : [m.value];
      let O = "", q = "";
      z(M, (U) => {
        !U && U !== 0 || (O && (O += " ", q += " "), A(U) ? (O += su(E({
          placeholder: U,
          extra: o.value,
          alwaysTranslate: i.value
        })), q += U) : O += su(U));
      }), P.html = se(O) ? void 0 : O, P.dataTranslateHtml = se(q) ? void 0 : q;
    }
    return P;
  }), F = _(() => `${R.value}${w.value.safeHtml || w.value.html}${D.value}`);
  return {
    hasHtml: g,
    hasSafeHtml: v,
    htmlLocalOptions: w,
    htmlLocalWithBeforeAndAfter: F
  };
}
function ql(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "extra"), r = d(e, "placeholder"), {
    translationChanges: s
  } = Ni(), {
    isPlaceholderTranslate: i,
    getTranslatedText: o,
    getTranslationAttributes: u
  } = Gs(), {
    isMobileWidth: f
  } = Sn(), A = _(() => st(r.value) ? f.value ? r.value.mobile : r.value.desktop : r.value), E = _(() => !Pe(A.value)), p = _(() => !(!E.value || !i(A.value))), T = _(() => {
    if (s.value)
      return p.value ? o({
        placeholder: A.value,
        extra: n.value,
        alwaysTranslate: t.value
      }) : A.value;
  }), S = _(() => {
    const m = {};
    return E.value ? u({
      attr: "placeholder",
      translation: T.value,
      value: A.value,
      isTranslate: p.value
    }) : m;
  });
  return {
    hasPlaceholder: E,
    placeholderAttributes: S
  };
}
function L0({
  hasAriaLabel: e,
  hasAttributesLocal: t,
  hasPlaceholder: n,
  hasTextAfter: r,
  hasTextBefore: s
}) {
  return {
    hasRestAttributes: _(() => e.value || t.value || n.value || r.value || s.value)
  };
}
function m0(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "extra"), r = d(e, "text"), {
    isPlaceholderTranslate: s,
    getTranslatedText: i
  } = Gs(), {
    isMobileWidth: o
  } = Sn(), {
    translationChanges: u
  } = Ni(), f = _(() => st(r.value) ? o.value ? r.value.mobile : r.value.desktop : r.value), A = _(() => Se(r.value)), E = _(() => A.value ? r.value.length > 0 : !Pe(f.value)), p = _(() => {
    const T = {
      text: void 0,
      dataTranslateText: void 0
    };
    if (!u.value)
      return T;
    if (E.value) {
      const S = A.value ? r.value : [f.value];
      let m = "", b = "";
      z(S, (I) => {
        !I && I !== 0 || (m && (m += " ", b += " "), s(I) ? (m += i({
          placeholder: I,
          extra: n.value,
          alwaysTranslate: t.value
        }), b += I) : m += I);
      }), T.text = m || void 0, T.dataTranslateText = b || void 0;
    }
    return T;
  });
  return {
    hasText: E,
    textLocalOptions: p
  };
}
function b0(e) {
  const t = d(e, "textAfter"), n = d(e, "textBefore"), {
    isMobileWidth: r
  } = Sn(), s = _(() => st(t.value) ? r.value ? t.value.mobile : t.value.desktop : t.value), i = _(() => st(n.value) ? r.value ? n.value.mobile : n.value.desktop : n.value), o = _(() => !se(s.value) && s.value !== ""), u = _(() => !se(i.value) && i.value !== "");
  return {
    hasTextAfter: o,
    hasTextBefore: u,
    textAfterForCurrentDevice: s,
    textBeforeForCurrentDevice: i
  };
}
function I0(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "extra"), r = d(e, "title"), {
    isPlaceholderTranslate: s,
    getTranslatedText: i
  } = Gs(), {
    isMobileWidth: o
  } = Sn(), {
    translationChanges: u
  } = Ni(), f = _(() => st(r.value) ? o.value ? r.value.mobile : r.value.desktop : r.value), A = _(() => Se(r.value)), E = _(() => A.value ? r.value.length > 0 : !(se(f.value) || f.value === ""));
  return {
    titleLocalOptions: _(() => {
      if (!u.value)
        return;
      const T = {
        title: void 0,
        dataTranslateTitle: void 0
      };
      if (!E.value)
        return T;
      const S = A.value ? r.value : [f.value];
      let m = "", b = "";
      return z(S, (I) => {
        !I && I !== 0 || (m && (m += " ", b += " "), s(I) ? (m += i({
          placeholder: I,
          extra: n.value,
          alwaysTranslate: t.value
        }), b += I) : m += I);
      }), T.title = m || void 0, T.dataTranslateTitle = b || void 0, T;
    })
  };
}
const pe = {
  name: "ATranslation",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: ""
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: ""
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      hasTextAfter: t,
      hasTextBefore: n,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: s
    } = b0(e), {
      hasText: i,
      textLocalOptions: o
    } = m0(e), {
      hasHtml: u,
      hasSafeHtml: f,
      htmlLocalOptions: A,
      htmlLocalWithBeforeAndAfter: E
    } = S0(e, {
      hasTextAfter: t,
      hasTextBefore: n,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: s
    }), {
      titleLocalOptions: p
    } = I0(e), {
      hasPlaceholder: T,
      placeholderAttributes: S
    } = ql(e), {
      ariaLabelAttributes: m,
      hasAriaLabel: b
    } = Yc(e), {
      attributesLocal: I,
      hasAttributesLocal: v
    } = T0({
      htmlLocalOptions: A,
      textLocalOptions: o,
      titleLocalOptions: p
    }), {
      hasRestAttributes: g
    } = L0({
      hasAriaLabel: b,
      hasAttributesLocal: v,
      hasPlaceholder: T,
      hasTextAfter: t,
      hasTextBefore: n
    });
    return {
      ariaLabelAttributes: m,
      attributesLocal: I,
      hasText: i,
      hasTextAfter: t,
      hasTextBefore: n,
      hasHtml: u,
      hasRestAttributes: g,
      hasSafeHtml: f,
      htmlLocalWithBeforeAndAfter: E,
      placeholderAttributes: S,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: s,
      textLocalOptions: o
    };
  },
  render() {
    return this.hasText ? c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes
    }, [
      this.textBeforeForCurrentDevice,
      this.textLocalOptions.text,
      this.$slots.default && this.$slots.default(),
      this.textAfterForCurrentDevice
    ]) : this.hasSafeHtml || this.hasHtml ? c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes,
      innerHTML: this.htmlLocalWithBeforeAndAfter
    }) : (this.hasRestAttributes || this.$slots.default) && c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes
    }, [
      this.textBeforeForCurrentDevice,
      this.$slots.default && this.$slots.default(),
      this.textAfterForCurrentDevice
    ]);
  }
}, _n = {
  components: {},
  containerComponents: {},
  goToErrorCallback: void 0
}, Bhe = {
  install: (e, {
    components: t = {},
    containerComponents: n = {},
    goToErrorCallback: r
  } = {}) => {
    _n.components = t, _n.containerComponents = n, _n.goToErrorCallback = r;
  }
}, v0 = {
  name: "AErrorsElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    error: {
      type: [Object, Array, String],
      required: !1,
      default: void 0
    },
    errorKey: {
      type: String,
      required: !1,
      default: void 0
    },
    errorLabels: {
      type: [String, Object],
      required: !0
    },
    goToError: {
      type: Function,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_errors_")
    },
    isErrorLink: {
      type: Boolean,
      required: !0
    }
  },
  setup(e) {
    const t = d(e, "errorLabels"), n = _(() => ot(t.value) ? t.value : st(t.value) ? t.value.label : ""), r = d(e, "isErrorLink"), s = _(() => st(t.value) && t.value.link && r.value), i = d(e, "error"), o = _(() => ot(i.value)), u = _(() => Se(i.value)), f = _(() => st(i.value)), A = _(() => Se(t.value)), E = d(e, "id"), p = _(() => ce(t.value, "id") || E.value), T = d(e, "goToError"), S = d(e, "errorKey"), m = () => {
      if (Ne(T.value))
        return T.value({
          id: p.value,
          key: S.value
        });
      let I = p.value;
      if (se(S.value) || (I = `${I}_${S.value}`), Di(I) > 0) {
        if (Ne(_n.goToErrorCallback)) {
          _n.goToErrorCallback({
            idStr: I
          });
          return;
        }
        const v = document.getElementById(I);
        v && v.focus();
      }
    };
    return {
      currentLabel: n,
      goToErrorLocal: m,
      isErrorArray: u,
      isErrorLabelsArray: A,
      isErrorLinkLocal: s,
      isErrorObject: f,
      isErrorString: o,
      onKeydown: (I) => {
        (I.keyCode === Z.enter || I.keyCode === Z.space) && (m(), I.stopPropagation(), I.preventDefault());
      }
    };
  },
  render() {
    return c("div", {
      class: "a_error__list__li"
    }, [
      this.isErrorString ? this.isErrorLinkLocal ? c(Ee, {
        type: "link",
        class: "a_errors__label a_btn a_btn_link a_p_0",
        tabindex: 0,
        "aria-describedby": this.id,
        safeHtml: this.currentLabel,
        textTag: "strong",
        textAfter: ":",
        onClick: this.goToErrorLocal,
        onKeydown: this.onKeydown
      }) : c("div", {
        class: "a_errors__label",
        "aria-describedby": this.id
      }, [
        c(pe, {
          tag: "strong",
          safeHtml: this.currentLabel
        })
      ]) : "",
      c(
        "div",
        {
          id: this.id,
          class: "a_errors__errors"
        },
        this.isErrorString ? [
          c(pe, {
            alwaysTranslate: this.alwaysTranslate,
            tag: "span",
            html: this.error
          })
        ] : this.isErrorArray ? [...this.error.map((e, t) => c(Vr("AErrorsElement"), {
          key: t,
          error: e,
          alwaysTranslate: this.alwaysTranslate,
          errorLabels: this.isErrorLabelsArray ? this.errorLabels[t] || this.errorLabels : this.errorLabels,
          goToError: this.goToError,
          isErrorLink: this.isErrorLink
        }))] : this.isErrorObject ? [
          c("div", {
            class: "a_pl_2"
          }, [
            ...Object.keys(this.error).map((e) => c(Vr("AErrorsElement"), {
              key: e,
              alwaysTranslate: this.alwaysTranslate,
              error: this.error[e],
              errorLabels: this.errorLabels[e] || this.errorLabels,
              goToError: this.goToError,
              isErrorLink: this.isErrorLink
            }))
          ])
        ] : []
      )
    ]);
  }
};
function y0({ emit: e }) {
  return {
    close: () => {
      e("close");
    }
  };
}
function R0(e) {
  const t = d(e, "errors");
  return {
    hasErrors: _(() => !pn(t.value))
  };
}
function g0(e, {
  hasErrors: t = _(() => !1)
}) {
  const n = d(e, "autoFocus"), r = B(void 0);
  return {
    elRef: r,
    setFocusToElement: () => {
      n.value && t.value && setTimeout(() => {
        r.value.$el.focus();
      });
    }
  };
}
function O0(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = d(e, "errors"), r = _(() => n.value ? ot(n.value) ? !0 : Se(n.value) ? !!Di(n.value) : !1 : !1);
  return {
    errorsId: _(() => `${t.value}_errors_text`),
    isErrors: r
  };
}
function zt(e, { emit: t }) {
  const n = d(e, "change"), r = d(e, "disabled"), s = d(e, "helpText"), i = d(e, "htmlId"), o = d(e, "id"), u = d(e, "idPrefix"), f = d(e, "modelUndefined"), A = d(e, "modelValue"), E = B(!1), p = B(!1), T = B(void 0), S = _(() => yl({
    id: o.value,
    idPrefix: u.value,
    htmlId: i.value
  })), {
    errorsId: m,
    isErrors: b
  } = O0(e, {
    htmlIdLocal: S
  }), I = ({ model: O, currentModel: q, item: U }) => {
    t("update:modelValue", O), n.value({
      currentModel: q,
      id: o.value,
      item: U,
      model: O,
      props: Ec(e)
    });
  }, v = _(() => !!(A.value || A.value === 0)), g = () => {
    r.value || I({
      model: f.value
    });
  }, R = _(() => `${S.value}_help_text`);
  return {
    ariaDescribedbyLocal: _(() => {
      let O = "";
      return s.value && (O += R.value), b.value && (O && (O += " "), O += m.value), O || void 0;
    }),
    changeModel: I,
    clearModel: g,
    errorsId: m,
    helpTextId: R,
    htmlIdLocal: S,
    isErrors: b,
    isFocus: E,
    isFocusIn: p,
    isModel: v,
    onBlur: (O) => {
      E.value = !1, t("blur", {
        event: O,
        props: e
      });
    },
    onFocus: (O) => {
      E.value = !0, t("focus", {
        event: O,
        props: e
      });
    },
    onFocusin: (O) => {
      p.value || (p.value = !0, t("focusin", {
        event: O,
        props: e
      }));
    },
    onFocusout: (O) => {
      p.value && T.value && !T.value.contains(O.relatedTarget) && (p.value = !1, t("focusout", {
        event: O,
        props: e
      }));
    },
    rootRef: T
  };
}
function yl({ id: e, idPrefix: t, htmlId: n }) {
  return n || `${t || ""}${e}`;
}
function C0(e) {
  const t = d(e, "optionsList"), n = d(e, "idPrefix"), r = (i) => {
    let o = {};
    return z(i, (u) => {
      o[u.id] = {
        label: u.labelError || u.label,
        link: Pe(u.isErrorLink) ? !0 : u.isErrorLink,
        id: yl({
          id: u.id,
          idPrefix: u.idPrefix || n.value,
          htmlId: u.htmlId
        })
      }, u.children && u.children.length && (o = {
        ...o,
        ...r(u.children)
      });
    }), o;
  };
  return {
    labelsLocal: _(() => {
      let i = {};
      return t.value.forEach((o) => {
        i[o.id] = {
          label: o.labelError || o.label,
          link: Pe(o.isErrorLink) ? !0 : o.isErrorLink,
          id: yl({
            id: o.id,
            idPrefix: o.idPrefix || n.value,
            htmlId: o.htmlId
          })
        }, o.children && o.children.length && (i = {
          ...i,
          ...r(o.children)
        });
      }), i;
    })
  };
}
const D0 = {
  name: "AErrors",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closable: {
      type: Boolean,
      required: !1,
      default: !0
    },
    goToError: {
      type: Function,
      required: !1,
      default: void 0
    },
    optionsList: {
      type: Array,
      required: !1,
      default: () => []
    },
    autoFocus: {
      type: Boolean,
      required: !1,
      default: !0
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: "Bitte überprüfen Sie Ihre Eingaben."
    },
    isErrorLink: {
      type: Boolean,
      required: !1,
      default: !0
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      hasErrors: n
    } = R0(e), {
      elRef: r,
      setFocusToElement: s
    } = g0(e, {
      hasErrors: n
    }), {
      labelsLocal: i
    } = C0(e), {
      close: o
    } = y0(t);
    return rt(n, () => {
      s();
    }), jr(() => {
      s();
    }), {
      close: o,
      elRef: r,
      hasErrors: n,
      labelsLocal: i
    };
  },
  render() {
    return c(Gc, {
      ref: "elRef",
      alwaysTranslate: this.alwaysTranslate,
      tabindex: -1,
      role: "alert",
      "aria-atomic": !0,
      isVisible: this.hasErrors,
      closable: this.closable,
      onClose: this.close
    }, () => [
      this.hasErrors && c("div", {
        class: "a_errors"
      }, [
        c("div", {
          class: "a_errors__header"
        }, [
          c("strong", null, this.textErrorHeader)
        ]),
        c("div", {
          class: "a_errors__list"
        }, [
          ...Object.keys(this.errors).map((e) => c(v0, {
            key: e,
            alwaysTranslate: this.alwaysTranslate,
            error: this.errors[e],
            errorLabels: this.labelsLocal[e] || this.labelsLocal,
            goToError: this.goToError,
            isErrorLink: this.isErrorLink
          }))
        ])
      ])
    ]);
  }
}, en = {
  name: "AErrorsText",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const t = d(e, "errors");
    return {
      errorsLocal: _(() => ot(t.value) ? [t.value] : t.value)
    };
  },
  render() {
    return c("ul", {
      id: this.id,
      class: "a_form_element__invalid_text"
    }, [
      this.errorsLocal.map((e) => c("li", null, e))
    ]);
  }
};
function N0(e, { emit: t }) {
  const n = d(e, "change"), r = d(e, "modelValue");
  return {
    onUpdateModelLocal: ({ currentModel: i, id: o, item: u, model: f, props: A, component: E }) => {
      const p = he(r.value || {});
      Uc(p, o, he(f)), t("update:modelValue", p), n.value({ currentModel: i, id: o, item: u, fullModel: p, model: f, props: A }), Ne(E.change) && E.change({ currentModel: i, id: o, item: u, fullModel: p, model: f, props: A });
    }
  };
}
function B0(e) {
  const t = d(e, "classColumns"), n = "a_form_element_readonly_value_fieldset";
  return {
    classColumnsReadonly: _(() => st(t.value) ? {
      ...t.value,
      [n]: !0
    } : ot(t.value) && t.value.length ? `${t.value} ${n}` : n)
  };
}
function w0({
  isBtnShowPasswordVisible: e = _(() => !1),
  isClearButtonLocal: t = _(() => !1)
}) {
  return {
    inputClassBtns: _(() => {
      if (e.value)
        return t.value ? "a_form_element_with_two_btns" : "a_form_element_with_one_btn";
      if (t.value)
        return "a_form_element_with_one_btn";
    })
  };
}
function P0(e) {
  const t = d(e, "modelValue"), n = d(e, "type");
  return {
    modelValueLocal: _(() => n.value === "color" && !t.value ? "#000000" : t.value)
  };
}
function x0(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "disabled"), r = d(e, "type"), s = B(void 0);
  return {
    inputRef: s,
    onInput: (o) => {
      if (n.value)
        return;
      let u = o.target.value;
      r.value === "integer" && (u = u.replace(/\D/g, ""), u !== "" && (u = +u), s.value.value = u), r.value === "number" && u !== "" && (u = +u), t({
        model: u
      });
    }
  };
}
const fS = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01757813,0,0,0.0175781,-0.02634961,0.65854895)"
  >
    <path
      d="m 318.642,688.822 44.574,-80.57 q -49.718,-35.998 -77.712,-90.858 -27.994,-54.86 -27.999,-116.002 0,-69.147 34.857,-128.572 Q 161.506,339.676 74.649,474.533 170.076,621.96 318.651,688.819 Z M 540.925,255.106 q 0,-11.42 -8.004,-19.424 -8.004,-8.004 -19.424,-8.004 -71.429,0 -122.571,51.142 -51.142,51.142 -51.142,122.571 0,11.42 8.004,19.424 8.004,8.004 19.424,8.004 11.42,0 19.424,-8.004 8.004,-8.004 8.004,-19.424 0,-49.143 34.857,-83.997 34.857,-34.854 83.997,-34.857 11.42,0 19.424,-8.004 8.004,-8.004 8.004,-19.424 z M 748.354,145.968 q 0,4.001 -0.584,5.141 -60.003,107.428 -179.999,323.427 -119.996,215.999 -180.573,324 l -27.999,50.859 q -5.725,9.142 -16.006,9.142 -6.864,0 -76.57,-40 -9.142,-5.725 -9.142,-16.006 0,-6.864 25.149,-49.718 Q 200.917,715.671 132.062,653.954 63.207,592.237 12.919,513.955 1.499,496.244 1.499,474.522 q 0,-21.722 11.42,-39.433 87.429,-134.286 217.143,-211.999 129.714,-77.713 283.429,-77.712 50.859,0 102.861,9.725 l 30.855,-55.425 q 5.725,-9.142 16.006,-9.142 2.863,0 10.282,3.418 7.419,3.418 17.711,8.865 10.292,5.447 18.858,10.564 8.566,5.117 18.008,10.564 9.442,5.447 11.143,6.566 9.142,5.725 9.142,15.423 z m 21.143,255.427 q 0,79.43 -45.141,144.859 -45.141,65.429 -119.429,94 l 160,-286.857 q 4.57,25.711 4.57,48 z m 256.002,73.144 q 0,20.008 -11.42,39.433 -22.287,36.571 -62.285,82.856 -85.714,98.284 -198.568,152.568 -112.854,54.284 -239.713,54.285 l 42.284,-75.43 q 121.144,-10.282 224.285,-78.29 103.141,-68.008 172.286,-175.429 -65.711,-102.285 -161.146,-168 l 35.998,-64.004 q 54.285,36.571 104.285,87.429 50,50.858 82.572,105.143 11.42,19.424 11.42,39.433 z"
    />
  </g>
</svg>`, hS = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01752671,0,0,0.01752691,-1.7526709e-5,0.68479724)"
  >
    <path
      d="M 953.646,474.431 Q 866.534,339.176 735.292,272.123 q 34.959,59.601 34.959,128.952 0,106.025 -75.367,181.39 -75.367,75.365 -181.39,75.367 -106.023,0.002 -181.39,-75.367 -75.367,-75.369 -75.367,-181.39 0,-69.35 34.959,-128.952 -131.243,67.052 -218.354,202.308 76.223,117.492 191.132,187.121 114.909,69.629 249.018,69.633 134.109,0.004 249.018,-69.633 114.909,-69.637 191.132,-187.121 z M 541.004,254.353 q 0,-11.454 -8.027,-19.481 -8.027,-8.027 -19.481,-8.027 -71.639,0 -122.932,51.293 -51.293,51.293 -51.293,122.932 0,11.454 8.027,19.481 8.027,8.027 19.481,8.027 11.454,0 19.481,-8.027 8.027,-8.027 8.027,-19.481 0,-49.288 34.959,-84.246 34.959,-34.958 84.246,-34.959 11.454,0 19.481,-8.027 Q 541,265.811 541,254.357 Z m 486.001,220.078 q 0,19.481 -11.454,39.549 Q 935.316,645.795 799.773,725.169 664.23,804.543 513.503,804.546 362.776,804.549 227.233,724.882 91.69,645.215 11.455,513.974 0.001,493.906 0.001,474.425 q 0,-19.481 11.454,-39.549 80.235,-131.243 215.778,-210.908 135.543,-79.665 286.27,-79.664 150.727,0.001 286.27,79.664 135.543,79.663 215.778,210.908 11.454,20.068 11.454,39.549 z"
    />
  </g>
</svg>`;
function M0(e, {
  setTypeLocal: t = () => {
  },
  typeForInput: n = _(() => "")
}) {
  const r = d(e, "showPassword"), s = d(e, "type"), i = _(() => !!(s.value === "password" && r.value)), o = _(() => n.value === "password"), u = _(() => o.value ? fS : hS), f = () => {
    t({
      type: o.value ? "text" : "password"
    });
  }, A = _(() => o.value ? "_A_INPUT_SHOW_PASSWORD_" : "_A_INPUT_HIDE_PASSWORD_");
  return {
    iconBtnShowPassword: u,
    isBtnShowPasswordVisible: i,
    titleBtnShowPassword: A,
    toggleTypePassword: f
  };
}
function F0(e) {
  const t = d(e, "modelValue"), n = d(e, "readonlyPasswordLength"), r = d(e, "readonlyPasswordSymbol"), s = d(e, "showPassword"), i = d(e, "type");
  return {
    modelValueReadonly: _(() => i.value === "password" ? s.value ? t.value : r.value.repeat(n.value) : t.value)
  };
}
function q0(e) {
  const t = d(e, "type"), n = B(void 0), r = _(() => n.value === "integer" ? "text" : n.value);
  return {
    setTypeLocal: ({ type: i } = {}) => {
      i ? n.value = i : n.value = t.value;
    },
    typeForInput: r
  };
}
const Rn = {
  name: "AInput",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_input_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    maxlength: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    readonlyPasswordLength: {
      type: Number,
      required: !1,
      default: 8,
      validator: (e) => e > 0 && pa(e)
    },
    readonlyPasswordSymbol: {
      type: String,
      required: !1,
      default: "*"
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    showPassword: {
      type: Boolean,
      required: !1,
      default: !0
    },
    step: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "text"
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const n = d(e, "type"), {
      disabledAttribut: r
    } = Vl(e), {
      setTypeLocal: s,
      typeForInput: i
    } = q0(e), {
      attributesToExcludeFromRender: o
    } = Bt(e), {
      componentStyleHide: u
    } = Xt(e), {
      ariaDescribedbyLocal: f,
      changeModel: A,
      clearModel: E,
      errorsId: p,
      helpTextId: T,
      htmlIdLocal: S,
      isErrors: m,
      isModel: b,
      onBlur: I,
      onFocus: v
    } = zt(e, t), {
      isClearButtonLocal: g
    } = Xu(e, {
      isModel: b
    }), {
      inputRef: R,
      onInput: D
    } = x0(e, {
      changeModel: A
    }), {
      iconBtnShowPassword: w,
      isBtnShowPasswordVisible: F,
      titleBtnShowPassword: P,
      toggleTypePassword: M
    } = M0(e, {
      setTypeLocal: s,
      typeForInput: i
    }), {
      isAutofill: O
    } = Rf({ inputRef: R }), {
      inputClassBtns: q
    } = w0({
      isBtnShowPasswordVisible: F,
      isClearButtonLocal: g
    }), {
      placeholderAttributes: U
    } = ql(e), {
      modelValueLocal: G
    } = P0(e), {
      modelValueReadonly: te
    } = F0(e);
    return rt(n, () => {
      s();
    }), s(), {
      ariaDescribedbyLocal: f,
      attributesToExcludeFromRender: o,
      clearModel: E,
      componentStyleHide: u,
      disabledAttribut: r,
      errorsId: p,
      helpTextId: T,
      htmlIdLocal: S,
      iconBtnShowPassword: w,
      inputClassBtns: q,
      inputRef: R,
      isAutofill: O,
      isBtnShowPasswordVisible: F,
      isClearButtonLocal: g,
      isErrors: m,
      isModel: b,
      modelValueLocal: G,
      modelValueReadonly: te,
      onBlur: I,
      onFocus: v,
      onInput: D,
      placeholderAttributes: U,
      titleBtnShowPassword: P,
      toggleTypePassword: M,
      typeForInput: i
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Ln, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.modelValueReadonly,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: this.type
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel || this.isAutofill,
          a_form_element__parent_float_has_icon_prepend: this.iconPrepend
        }]
      }, [
        this.label || this.labelScreenReader ? c(Ut, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type
        }) : "",
        c("div", {
          class: "a_form_element"
        }, [
          this.iconPrepend && c(_t, {
            icon: this.iconPrepend,
            class: "a_input__icon_prepend"
          }),
          c("input", {
            ref: "inputRef",
            id: this.htmlIdLocal,
            autocomplete: this.autocomplete,
            value: this.modelValueLocal,
            type: this.typeForInput,
            class: [
              "a_form_control a_input",
              this.inputClass,
              this.inputClassBtns,
              {
                a_form_control_invalid: this.isErrors
              }
            ],
            disabled: this.disabledAttribut,
            ariaRequired: this.required,
            ariaInvalid: this.isErrors,
            "aria-describedby": this.ariaDescribedbyLocal,
            maxlength: this.maxlength,
            step: this.step,
            ...this.placeholderAttributes,
            ...this.inputAttributes,
            onInput: this.onInput,
            onFocus: this.onFocus,
            onBlur: this.onBlur
          }),
          this.isBtnShowPasswordVisible || this.isClearButtonLocal ? c("div", {
            class: "a_form_control__actions"
          }, [
            this.isBtnShowPasswordVisible ? c(pt, {
              alwaysTranslate: this.alwaysTranslate,
              class: "a_btn a_btn_transparent_dark a_btn_small a_form_control__actions__btn",
              iconLeft: this.iconBtnShowPassword,
              type: "button",
              title: this.titleBtnShowPassword,
              textScreenReader: this.titleBtnShowPassword,
              disabled: this.disabled,
              onClick: this.toggleTypePassword
            }) : "",
            this.isClearButtonLocal ? c(ku, {
              alwaysTranslate: this.alwaysTranslate,
              disabled: this.disabled,
              class: this.clearButtonClass,
              onClear: this.clearModel
            }) : ""
          ]) : ""
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function $0(e, {
  adjustFloatPartAndDivider: t = () => {
  },
  ensurePrecision: n = () => {
  },
  setCurrentValue: r = () => {
  },
  modelNumber: s = _(() => {
  })
}) {
  const i = d(e, "decimalDivider"), o = d(e, "disabled"), u = d(e, "modelValue"), f = d(e, "max"), A = d(e, "min"), E = d(e, "step"), p = _(() => s.value <= A.value), T = _(() => s.value >= f.value), S = () => {
    const v = t(f.value);
    r(v);
  }, m = () => {
    const v = t(A.value);
    r(v);
  };
  return {
    increase: () => {
      if (o.value || T.value)
        return;
      const v = s.value, g = n({
        value: v,
        currentValue: u.value
      }).replace(".", i.value);
      if (v + E.value > f.value) {
        S();
        return;
      }
      r(t(g));
    },
    decrease: () => {
      if (o.value || p.value)
        return;
      const v = s.value, g = n({
        value: v,
        currentValue: u.value,
        coefficient: -1
      }).replace(".", i.value);
      if (v - E.value < A.value) {
        m();
        return;
      }
      r(t(g));
    }
  };
}
function U0(e, {
  adjustFloatPartAndDivider: t = () => {
  },
  decrease: n = () => {
  },
  getCleanIntValue: r = () => {
  },
  increase: s = () => {
  },
  modelNumber: i = _(() => {
  }),
  modelUndefinedLocal: o = _(() => {
  }),
  onBlur: u = () => {
  },
  setCurrentValue: f = () => {
  }
}) {
  const A = d(e, "decimalDivider"), E = B(void 0), p = d(e, "max"), T = d(e, "min"), S = d(e, "modelValue"), m = d(e, "readonly"), b = d(e, "required"), I = d(e, "decimalPartLength"), v = d(e, "thousandDivider"), g = d(e, "validationOnChange"), R = B(0), D = navigator.userAgent.indexOf("Firefox") !== -1 ? 1 : 0, w = [
    Z.tab,
    Z.del,
    Z.escape,
    Z.backspace,
    Z.arrowLeft,
    Z.arrowRight,
    Z.home,
    Z.end
  ], F = _(() => !I.value), P = (H) => Number(`${H}`.replaceAll(v.value, "").replace(A.value, ".")), M = (H, X) => {
    f(H, X);
  }, O = (H) => {
    setTimeout(() => {
      E.value.setSelectionRange(H, H);
    });
  }, q = () => {
    const H = t(p.value);
    M(H);
  }, U = () => {
    const H = t(T.value);
    M(H);
  }, G = (H) => {
    const X = P(H);
    if (X > p.value)
      return q(), !0;
    if (X < T.value)
      return U(), !0;
  }, te = (H, X, ae = !1) => {
    var ht, At;
    if (!b.value && se(X) && !((ht = H == null ? void 0 : H.target) != null && ht.value)) {
      M(X, ae);
      return;
    }
    let ge;
    ae ? ge = typeof X == "number" ? `${X}`.replace(".", A.value) : X : ge = se(X) ? H.target.value : `${X}`;
    const ke = ge.indexOf(A.value) !== -1, Qe = (At = E.value) == null ? void 0 : At.selectionStart, Ue = ge.split(A.value), $e = Ue[0].length && Ue[0][0] === "-" ? "-" : "", it = Number(Ue[0].replace(/[^0-9]/g, "")).toString(), Ke = Ue[1] ? Ue[1].substring(0, I.value) : "";
    if (se(it) || it === "")
      return;
    const lt = v.value ? r({ value: it, thousandDivider: v.value }) : it;
    let et;
    if (F.value)
      et = `${$e}${lt}`;
    else if (ae) {
      const Mt = Ke || "", tn = ur(I.value - Mt.length, () => "0").join("");
      et = `${$e}${lt}${A.value}${Mt}${tn}`;
    } else Ke ? et = `${$e}${lt}${A.value}${Ke}` : ke ? et = `${$e}${lt}${A.value}` : et = `${$e}${lt}`;
    g.value && G(et) || (M(et, ae), O(Qe));
  }, re = ({ value: H }) => {
    T.value >= 0 || H[0] !== "-" && (R.value++, setTimeout(() => {
      const X = `-${H}`;
      g.value && G(X) || (M(X), R.value--);
    }, D));
  }, ie = ({ value: H }) => {
    H[0] === "-" && (R.value++, setTimeout(() => {
      const X = H.replace("-", "");
      g.value && G(X) || (M(X), R.value--);
    }, D));
  }, le = ({ value: H }) => {
    R.value++, setTimeout(() => {
      const X = E.value.selectionStart;
      if (v.value && H[X - 1] === v.value) {
        const ae = X - 1;
        O(ae);
      }
      R.value--;
    }, D);
  }, oe = ({ value: H }) => {
    setTimeout(() => {
      R.value++;
      const X = E.value.selectionStart;
      if (v.value && H[X - 1] === v.value) {
        const ae = X + 1;
        O(ae);
      }
      R.value--;
    }, D);
  }, Te = ({ value: H, cursorPosition: X }, ae) => {
    setTimeout(() => {
      R.value++;
      let ge = E.value.value;
      if (ae) {
        const Ce = H.length + 1;
        ge[ge.length - 1] === A.value && (ge += ur(I.value, () => "0").join(""), M(ge), O(Ce));
      } else {
        const Ce = H.substring(0, X).split("").reverse().join("").replaceAll(v.value, "").match(/.{1,3}/g).join(v.value).split("").reverse().join("");
        let ke = H.substring(X, H.length).replace(/[^0-9]/g, "").substring(0, I.value);
        ke = `${ke}${ur(I.value - ke.length, () => "0").join("")}`;
        const Qe = [
          Ce,
          ke
        ].join(A.value);
        M(Qe), O(Ce.length + 1);
      }
      R.value--;
    });
  }, Be = ({ cursorPosition: H, numberOfSymbols: X }) => {
    let ae = H && H - 1;
    E.value.value.length < X - 1 && ae > 0 && ae--, O(ae);
  }, Ae = ({ hasDecimalDivider: H, value: X, cursorPosition: ae }) => {
    const ge = X.length;
    if (!F.value) {
      const Ce = X.indexOf(A.value);
      if (H && Ce === ae - 1) {
        const Qe = X.split(A.value)[0];
        R.value++, setTimeout(() => {
          Be({ cursorPosition: ae, numberOfSymbols: ge }), M(Qe), R.value--;
        }, D);
        return;
      }
      R.value++, setTimeout(() => {
        Be({ cursorPosition: ae, numberOfSymbols: ge }), R.value--;
      }, D);
    }
  }, _e = ({ value: H, $event: X, hasDecimalDivider: ae, cursorPosition: ge }) => {
    if (!F.value && ae && H[ge] === A.value) {
      const ke = H.split(A.value)[0];
      M(ke), O(ge);
      return;
    }
    if (v.value)
      if (H[ge] === v.value) {
        X.preventDefault();
        const Ce = ge, ke = H.split(A.value), Qe = ke[0], Ue = ke[1];
        let $e = Qe.split("");
        $e.splice(ge + 1, 1), $e = $e.reverse().join("").replaceAll(v.value, "").match(/.{1,3}/g).join(v.value).split("").reverse().join("");
        let it;
        F.value ? it = $e : Ue ? it = `${$e}${A.value}${Ue}` : ae ? it = `${$e}${A.value}` : it = $e, M(it), O(Ce + 1);
      } else
        setTimeout(() => {
          R.value++, E.value.value.length < H.length - 1 && O(ge > 0 ? ge - 1 : 0), R.value--;
        }, D);
  };
  return {
    handleInput: te,
    handleKeydown: (H) => {
      if (R.value) {
        H.preventDefault();
        return;
      }
      const X = H.target.value, ae = H.keyCode, ge = H.key, Ce = ae >= 48 && ae <= 57 || ae >= 96 && ae <= 105, ke = ge === A.value && !!I.value, Qe = H.target.value.indexOf(A.value), Ue = Qe !== -1, $e = E.value.selectionStart, it = $e === X.length, Ke = {
        value: X,
        hasDecimalDivider: Ue,
        cursorPosition: $e,
        $event: H
      };
      if (ae === Z.arrowUp) {
        s(), H.preventDefault();
        return;
      }
      if (ae === Z.arrowDown) {
        n(), H.preventDefault();
        return;
      }
      if (ae === Z.minus || ae === Z.numMinus) {
        re(Ke), H.preventDefault();
        return;
      }
      if (ae === Z.plus && H.shiftKey || ae === Z.numPlus) {
        ie(Ke), H.preventDefault();
        return;
      }
      if (ae === Z.arrowLeft) {
        le(Ke);
        return;
      }
      if (ae === Z.arrowRight) {
        oe(Ke);
        return;
      }
      if (ke) {
        if (Ue) {
          O(Qe + 1), H.preventDefault();
          return;
        }
        it || H.preventDefault(), Te(Ke, it);
        return;
      }
      if (H.keyCode === Z.backspace) {
        if (E.value.selectionStart !== E.value.selectionEnd)
          return;
        Ae(Ke);
        return;
      }
      if (H.keyCode === Z.del) {
        _e(Ke);
        return;
      }
      if (Ce && !H.ctrlKey && Ue) {
        const lt = X.indexOf(A.value);
        if ($e > lt && X.split(A.value)[1].length === I.value) {
          if (it) {
            H.preventDefault();
            return;
          }
          H.preventDefault();
          const At = X.split("");
          At[$e] = ge;
          const Mt = At.join("");
          M(Mt), R.value++, setTimeout(() => {
            O($e + 1), R.value--;
          }, D);
          return;
        }
      }
      if (!Ce && !H.ctrlKey && !Gd(w, H.keyCode) && H.preventDefault(), H.keyCode !== Z.home && H.keyCode !== Z.end && !H.ctrlKey && H.keyCode)
        if ($e === 0 && X.length && X[0] === "0") {
          H.preventDefault();
          const lt = `${ge}${X.slice(1)}`;
          M(lt), O(1);
        } else {
          const lt = X.length;
          R.value++, setTimeout(() => {
            let et = $e + 1;
            const ht = E.value.value.length;
            ht - 1 > lt ? et++ : ht === lt && et--, O(et), R.value--;
          }, D);
        }
    },
    handlePaste: (H) => {
      var ht;
      H.preventDefault();
      const ae = (H.clipboardData || window.clipboardData).getData("text").split(A.value), ge = ae[0].replace(/[^0-9]/g, ""), Ce = ((ht = ae[1]) == null ? void 0 : ht.replace(/[^0-9]/g, "")) || "";
      let ke;
      const Qe = E.value.selectionStart, Ue = E.value.selectionEnd, $e = E.value.value, it = $e.indexOf(A.value) !== -1, lt = $e.substring(Qe, Ue).indexOf(A.value) !== -1;
      it && !lt ? ke = Ce ? [ge, Ce].join("") : ge : ke = Ce ? [ge, Ce].join(A.value) : ge;
      const et = $e.slice(0, Qe) + ke + $e.slice(Ue);
      te(null, et);
    },
    initFirstCheck: () => {
      m.value || setTimeout(() => {
        let H;
        if (S.value || S.value === 0) {
          if (H = S.value.toString().replace(".", A.value), A.value) {
            const X = H.toString().split(A.value), ae = X[0], ge = ae[0] === "-" ? "-" : "", Ce = X.length > 1 ? X[1] : "", ke = Ce.length, Qe = ur(I.value - ke, () => "0").join("");
            H = `${ge}${ae}${A.value}${Ce}${Qe}`;
          }
        } else
          H = b.value ? [
            "0",
            A.value,
            ur(I.value, () => "0").join("")
          ].join("") : o.value;
        te(null, H, !0);
      });
    },
    inputRef: E,
    onBlurNumber: (H) => {
      let X = H.target.value;
      if (F.value || (X = X.split(A.value)[0]), se(X) || X === "") {
        if (b.value) {
          if (T.value > 0) {
            const ge = A.value ? `0${A.value}${ur(I.value, () => "0").join("")}` : "0";
            M(ge);
          } else
            U();
          u(H);
          return;
        }
        const ae = o.value;
        M(ae), u(H);
        return;
      } else if (i.value < T.value) {
        U();
        return;
      } else if (i.value > p.value) {
        q();
        return;
      }
      if (I.value) {
        let ae = `${H.target.value}`;
        const Ce = ae.split(A.value)[1];
        ae.indexOf(A.value) === -1 ? ae += `${A.value}${ur(I.value, () => "0").join("")}` : Ce.length < I.value && (ae += `${ur(I.value - Ce.length, () => "0").join("")}`), M(ae);
      }
      u(H);
    },
    onClickNumber: (H) => {
      R.value++, setTimeout(() => {
        const X = H.target.selectionStart, ae = H.target.value;
        v.value && v.value === ae[X - 1] && O(X - 1), R.value--;
      });
    }
  };
}
function k0(e, {
  adjustFloatPartAndDivider: t = () => {
  },
  changeModel: n = () => {
  }
}) {
  const r = d(e, "required"), s = d(e, "modelValue"), i = d(e, "modelType"), o = d(e, "modelUndefined"), u = d(e, "decimalDivider"), f = d(e, "disabled"), A = d(e, "decimalPartLength"), E = d(e, "thousandDivider"), p = B(void 0), T = B(!1), S = B(void 0), m = () => {
    p.value = t(s.value), S.value = s.value;
  }, b = _(() => Number(`${p.value}`.replaceAll(E.value, "").replace(u.value, "."))), I = _(() => r.value ? [
    "0",
    u.value,
    ur(A.value, () => "0").join("")
  ].join("") : o.value), v = (R, D = !1) => {
    p.value = se(R) ? "" : R;
    let w;
    !r.value && se(R) ? w = I.value : w = i.value === "number" ? Number(`${R}`.replaceAll(E.value, "").replace(u.value, ".")) : R, D || (T.value = !0, S.value = w, n({ model: w }));
  };
  return {
    clearModel: () => {
      f.value || v(I.value);
    },
    displayValue: p,
    initLocalVars: m,
    isInternalChange: T,
    localModel: S,
    modelNumber: b,
    modelUndefinedLocal: I,
    setCurrentValue: v
  };
}
function H0(e) {
  const t = d(e, "decimalDivider"), n = d(e, "decimalPartLength"), r = d(e, "thousandDivider"), s = ({ value: o, thousandDivider: u }) => o.replaceAll(u, "").replaceAll("-", "").split("").reverse().join("").match(/.{1,3}/g).join(u).split("").reverse().join("");
  return {
    adjustFloatPartAndDivider: (o) => {
      if (se(o))
        return "";
      if (t.value) {
        const u = typeof o == "number" ? o.toString().split(".") : o.toString().split(t.value), f = u[0], A = f[0] === "-" ? "-" : "", E = r.value ? s({ value: f, thousandDivider: r.value }) : f, p = u.length > 1 ? u[1] : "", T = p.length, S = ur(n.value - T, () => "0").join("");
        return `${A}${E}${t.value}${p}${S}`;
      }
      return o;
    },
    getCleanIntValue: s
  };
}
function whe(e) {
  return pa(e) ? Math.abs(e % 2) === 1 : !1;
}
function V0(e) {
  return pa(e) ? e % 2 === 0 : !1;
}
function Yo(e, t) {
  if (t === 0)
    return Math.round(e);
  let n = String(e);
  const r = n.indexOf(".");
  if (r === -1 || !n.replace(".", "").split("")[r + t])
    return e;
  const o = n.length;
  return n.charAt(o - 1) === "5" && (n = `${n.slice(0, Math.max(0, o - 1))}6`), Number.parseFloat(Number(n).toFixed(t));
}
function W0(e) {
  const t = d(e, "step"), n = d(e, "decimalPartLength");
  return {
    ensurePrecision: ({ value: s, currentValue: i, coefficient: o = 1 }) => On(s) ? Yo(s + t.value * o, n.value).toString() : i
  };
}
function G0(e) {
  const t = d(e, "inputWidth");
  return {
    inputWidthStyleValue: _(() => {
      let r = t.value;
      return On(t.value) && (r = `${t.value}px`), Pe(r) ? {} : {
        "--a_input_number_width": r
      };
    })
  };
}
const AS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-dash" viewBox="0 0 16 16">
  <path d="M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8"/>
</svg>`, ES = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4"/>
</svg>`, j0 = {
  name: "AInputCurrency",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    controlsType: {
      type: String,
      required: !1,
      default: () => on.propsDefault.controlsType,
      validator: (e) => ["plus-minus", "arrows", "none"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    currencySymbol: {
      type: String,
      required: !1,
      default: () => on.propsDefault.currencySymbol
    },
    currencySymbolPosition: {
      type: String,
      required: !1,
      default: () => on.propsDefault.currencySymbolPosition,
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    decimalDivider: {
      type: String,
      required: !1,
      default: () => on.propsDefault.decimalDivider,
      validator: (e, t) => {
        const n = t == null ? void 0 : t.thousandDivider;
        return n ? [".", ","].indexOf(e) !== -1 && e !== n : [".", ","].indexOf(e) !== -1;
      }
    },
    decimalPartLength: {
      type: Number,
      required: !1,
      default: () => on.propsDefault.decimalPartLength,
      validator: (e) => e >= 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: () => on.propsDefault.iconPrepend
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_input_currency_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    inputWidth: {
      type: [String, Number],
      required: !1,
      default: () => on.propsDefault.inputWidth
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: () => on.propsDefault.isLabelFloat
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: () => on.propsDefault.max
    },
    min: {
      type: Number,
      required: !1,
      default: () => on.propsDefault.min
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelType: {
      type: String,
      required: !1,
      default: "number",
      validator: (e) => ["number", "string"].indexOf(e) !== -1
    },
    modelUndefined: {
      required: !1,
      default: () => on.propsDefault.modelUndefined
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: () => on.propsDefault.placeholder
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    step: {
      type: Number,
      required: !1,
      default: () => on.propsDefault.step,
      validator: (e) => e > 0
    },
    thousandDivider: {
      type: String,
      required: !1,
      default: () => on.propsDefault.thousandDivider,
      validator: (e, t) => {
        const n = t == null ? void 0 : t.decimalDivider;
        return n ? [".", ",", " "].indexOf(e) !== -1 && e !== n : [".", ",", " "].indexOf(e) !== -1;
      }
    },
    validationOnChange: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const n = d(e, "modelValue"), {
      attributesToExcludeFromRender: r
    } = Bt(e), {
      componentStyleHide: s
    } = Xt(e), {
      adjustFloatPartAndDivider: i,
      getCleanIntValue: o
    } = H0(e), {
      ariaDescribedbyLocal: u,
      changeModel: f,
      errorsId: A,
      helpTextId: E,
      htmlIdLocal: p,
      isErrors: T,
      isModel: S,
      onBlur: m,
      onFocus: b
    } = zt(e, t), {
      isClearButtonLocal: I
    } = Xu(e, {
      isModel: S
    }), {
      placeholderAttributes: v
    } = ql(e), {
      inputWidthStyleValue: g
    } = G0(e), {
      ensurePrecision: R
    } = W0(e), {
      clearModel: D,
      displayValue: w,
      initLocalVars: F,
      isInternalChange: P,
      localModel: M,
      modelNumber: O,
      modelUndefinedLocal: q,
      setCurrentValue: U
    } = k0(e, {
      adjustFloatPartAndDivider: i,
      changeModel: f
    }), {
      increase: G,
      decrease: te
    } = $0(e, {
      adjustFloatPartAndDivider: i,
      ensurePrecision: R,
      setCurrentValue: U,
      modelNumber: O
    }), {
      handleInput: re,
      handleKeydown: ie,
      handlePaste: le,
      initFirstCheck: oe,
      inputRef: Te,
      onBlurNumber: Be,
      onClickNumber: Ae
    } = U0(e, {
      adjustFloatPartAndDivider: i,
      decrease: te,
      getCleanIntValue: o,
      increase: G,
      modelNumber: O,
      modelUndefinedLocal: q,
      onBlur: m,
      setCurrentValue: U
    });
    return F(), oe(), rt(n, (_e) => {
      P.value || (M.value = _e, re(null, _e, !0)), P.value = !1;
    }), {
      ariaDescribedbyLocal: u,
      attributesToExcludeFromRender: r,
      clearModel: D,
      componentStyleHide: s,
      decrease: te,
      displayValue: w,
      errorsId: A,
      handleInput: re,
      handleKeydown: ie,
      handlePaste: le,
      helpTextId: E,
      htmlIdLocal: p,
      increase: G,
      inputRef: Te,
      inputWidthStyleValue: g,
      isClearButtonLocal: I,
      isErrors: T,
      isModel: S,
      onBlurNumber: Be,
      onClickNumber: Ae,
      onFocus: b,
      placeholderAttributes: v
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Ln, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.displayValue,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "currency"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__container"
      }, [
        c("div", {
          class: ["a_form_element__parent", {
            a_form_element__parent_float: this.isLabelFloat,
            a_form_element__parent_not_empty: this.isModel,
            a_form_element__parent_float_has_icon_prepend: this.iconPrepend,
            a_form_element__parent_invalid: this.isErrors
          }]
        }, [
          (this.label || this.labelScreenReader) && !this.isLabelFloat ? c(Ut, {
            id: this.htmlIdLocal,
            extra: this.extra,
            isLabelFloat: this.isLabelFloat,
            isError: this.isErrors,
            label: this.label,
            labelClass: this.labelClass,
            labelScreenReader: this.labelScreenReader,
            required: this.required,
            type: "text"
          }) : "",
          c("div", {
            class: [
              "a_form_element_number",
              {
                a_form_element_number_controls: this.controlsType && this.controlsType !== "none"
              }
            ]
          }, [
            this.currencySymbol && this.currencySymbolPosition === "left" && c("span", {
              class: "a_form_element_number__currency_symbol"
            }, this.currencySymbol),
            c("div", {
              class: "a_form_element",
              style: {
                ...this.inputWidthStyleValue
              }
            }, [
              (this.label || this.labelScreenReader) && this.isLabelFloat ? c(Ut, {
                id: this.htmlIdLocal,
                isLabelFloat: this.isLabelFloat,
                isError: this.isErrors,
                label: this.label,
                labelClass: this.labelClass,
                labelScreenReader: this.labelScreenReader,
                required: this.required,
                type: "text"
              }) : "",
              this.iconPrepend && c(_t, {
                icon: this.iconPrepend,
                class: "a_input__icon_prepend"
              }),
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                autocomplete: this.autocomplete,
                value: this.displayValue,
                type: "text",
                class: [
                  "a_form_control a_input a_input_number",
                  this.inputClass,
                  {
                    a_form_element_with_one_btn: this.isClearButtonLocal,
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabled,
                ariaRequired: this.required,
                ariaInvalid: this.isErrors,
                "aria-describedby": this.ariaDescribedbyLocal,
                ...this.placeholderAttributes,
                ...this.inputAttributes,
                onInput: this.handleInput,
                onKeydown: this.handleKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlurNumber,
                onClick: this.onClickNumber,
                onPaste: this.handlePaste
              }),
              this.isClearButtonLocal ? c("div", {
                class: "a_form_control__actions"
              }, [
                c(ku, {
                  alwaysTranslate: this.alwaysTranslate,
                  disabled: !1,
                  class: this.clearButtonClass,
                  onClear: this.clearModel
                })
              ]) : ""
            ]),
            this.controlsType === "plus-minus" && c("div", {
              class: "a_btn_group"
            }, [
              c(Ee, {
                class: "a_btn a_btn_outline_secondary",
                iconLeft: AS,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_CURRENCY_BTN_DECREASE_",
                textScreenReader: "_A_INPUT_CURRENCY_BTN_DECREASE_",
                type: "button",
                onClick: this.decrease
              }),
              c(Ee, {
                class: "a_btn a_btn_outline_secondary",
                iconLeft: ES,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_CURRENCY_BTN_INCREASE_",
                textScreenReader: "_A_INPUT_CURRENCY_BTN_INCREASE_",
                type: "button",
                onClick: this.increase
              })
            ]),
            this.currencySymbol && this.currencySymbolPosition === "right" && c("div", {
              class: "a_form_element_number__currency_symbol"
            }, this.currencySymbol)
          ]),
          c(Yt, {
            id: this.helpTextId,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(en, {
            id: this.errorsId,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
}, Yt = {
  name: "AFormHelpText",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    html: {
      type: [String, Number],
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  render() {
    return this.html && c(pe, {
      id: this.id,
      alwaysTranslate: this.alwaysTranslate,
      class: "a_form_element__help_text",
      html: this.html,
      extra: this.extra
    });
  }
};
function pS(e) {
  return `clickALabel_${e}`;
}
function K0(e, {
  idLabelLocal: t = _(() => ""),
  preventLocal: n = _(() => !1),
  stopLocal: r = _(() => !1)
}) {
  const s = d(e, "clickLabel"), i = d(e, "id");
  return {
    onClick: ({ $event: u }) => {
      Ne(s.value) && s.value({
        id: i.value,
        idLabel: t.value,
        $event: u
      }), n.value && (u == null || u.preventDefault()), r.value && (u == null || u.stopPropagation()), setTimeout(() => {
        gt.$emit(pS(i.value), {
          id: i.value,
          idLabel: t.value,
          $event: u
        });
      });
    }
  };
}
function z0(e, {
  hideForLocal: t = _(() => !1),
  hideIdLocal: n = _(() => !1)
}) {
  const r = d(e, "id"), s = d(e, "idSuffix"), i = d(e, "readonly"), o = _(() => {
    if (!n.value)
      return `${r.value}${s.value}`;
  });
  return {
    forLabelLocal: _(() => {
      if (!(t.value || i.value))
        return r.value;
    }),
    idLabelLocal: o
  };
}
function Y0(e) {
  const t = d(e, "isLabelFloat"), n = d(e, "label"), r = d(e, "readonly"), s = d(e, "required"), i = _(() => !se(n.value)), o = _(() => i.value ? n.value : void 0), u = _(() => s.value && i.value && !r.value ? "*" : ""), f = _(() => {
    if (t.value && !r.value)
      return o.value;
  });
  return {
    isLabel: i,
    labelLocal: o,
    textAfterLabel: u,
    titleLocal: f
  };
}
const Oi = B({
  fieldset: !0,
  group: !0
}), pf = B({
  checkbox: !0,
  multiselect: !0,
  multiselectOrdered: !0
}), TS = B({
  dateRange: !0,
  integerNonNegativeRange: !0,
  integerPositiveRange: !0,
  integerRange: !0,
  numberRange: !0
}), X0 = B({
  checkbox: !0,
  multiselect: !0,
  multiselectOrdered: !0,
  radio: !0,
  select: !0
}), Z0 = B({
  select: {
    hideFor: !0,
    prevent: !0
  },
  multiselect: {
    hideFor: !0,
    prevent: !0
  },
  file: {
    hideId: !0
  },
  // numberRange
  numberRange: {
    hideFor: !0,
    prevent: !0
  },
  integerNonNegativeRange: {
    hideFor: !0,
    prevent: !0
  },
  integerPositiveRange: {
    hideFor: !0,
    prevent: !0
  },
  integerRange: {
    hideFor: !0,
    prevent: !0
  },
  // numberRange /
  dateRange: {
    hideFor: !0,
    prevent: !0
  }
});
function J0(e) {
  const t = d(e, "hideFor"), n = d(e, "hideId"), r = d(e, "prevent"), s = d(e, "stop"), i = d(e, "type"), o = _(() => Z0.value[i.value] || {}), u = ({ prop: T, propForType: S }) => Pe(T) ? S : T, f = _(() => u({
    prop: s.value,
    propForType: o.value.stop
  })), A = _(() => u({
    prop: r.value,
    propForType: o.value.prevent
  })), E = _(() => u({
    prop: n.value,
    propForType: o.value.hideId
  }));
  return {
    hideForLocal: _(() => u({
      prop: t.value,
      propForType: o.value.hideFor
    })),
    hideIdLocal: E,
    preventLocal: A,
    stopLocal: f
  };
}
const Ut = {
  name: "ALabel",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    clickLabel: {
      type: Function,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hideFor: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    hideId: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: "_label"
    },
    isError: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "label"
    },
    type: {
      type: String,
      required: !1
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = Bt(e), {
      hideForLocal: n,
      hideIdLocal: r,
      preventLocal: s,
      stopLocal: i
    } = J0(e), {
      forLabelLocal: o,
      idLabelLocal: u
    } = z0(e, {
      hideForLocal: n,
      hideIdLocal: r
    }), {
      isLabel: f,
      labelLocal: A,
      textAfterLabel: E,
      titleLocal: p
    } = Y0(e), {
      onClick: T
    } = K0(e, {
      idLabelLocal: u,
      preventLocal: s,
      stopLocal: i
    });
    return {
      attributesToExcludeFromRender: t,
      forLabelLocal: o,
      idLabelLocal: u,
      isLabel: f,
      labelLocal: A,
      onClick: T,
      textAfterLabel: E,
      titleLocal: p
    };
  },
  render() {
    return c(Ee, {
      id: this.idLabelLocal,
      alwaysTranslate: this.alwaysTranslate,
      class: [
        "a_form_element_label",
        this.labelClass,
        this.isLabelFloat && !this.readonly ? "a_form_element_label_float" : "a_form_element_label_static",
        {
          a_form_element_label_error: this.isError,
          a_form_element_readonly_label: this.readonly
        }
      ],
      extra: this.extra,
      for: this.forLabelLocal,
      html: this.labelLocal,
      htmlScreenReader: this.labelScreenReader,
      loading: this.loading,
      loadingAlign: "right",
      loadingClass: "a_spinner_small a_form_element_label__spinner",
      tag: this.tag,
      textAfter: this.textAfterLabel,
      textAriaHidden: !!this.labelScreenReader,
      title: this.titleLocal,
      type: "text",
      onClick: this.readonly ? void 0 : this.onClick,
      ...this.attributesToExcludeFromRender
    });
  }
};
function Xt(e) {
  const t = d(e, "dependencies"), n = d(e, "isHide"), r = d(e, "modelDependencies"), s = ({ id: u, value: f }) => {
    var A;
    return ((A = r.value) == null ? void 0 : A[u]) === f;
  }, i = _(() => {
    if (!t.value)
      return !1;
    if (st(t.value))
      return !s(t.value);
    if (Se(t.value)) {
      let u = !1;
      return z(t.value, (f) => {
        if (!s(f))
          return u = !0, !1;
      }), u;
    }
    return !1;
  });
  return {
    componentStyleHide: _(() => n.value || i.value ? "display: none;" : "")
  };
}
const Q0 = {
  name: "AInputFile",
  inheritAttrs: !1,
  mixins: [
    Af
  ],
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    isMultiple: {
      type: Boolean,
      required: !1
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    modelUndefined: {
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number, Object, Array],
      required: !1
    },
    text: {
      type: String,
      required: !1,
      default: "Dateien auswählen"
    },
    type: {
      type: String,
      required: !1,
      default: "input"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      componentStyleHide: r
    } = Xt(e), {
      ariaDescribedbyLocal: s,
      changeModel: i,
      clearModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = zt(e, t), S = d(e, "isMultiple"), m = d(e, "modelValue"), b = _(() => S.value ? !!(Se(m.value) && m.value.length > 0) : !!(st(m.value) && Di(m.value) > 0)), I = _(() => b.value ? S.value ? m.value : [m.value] : []), v = B(void 0), g = d(e, "disabled"), R = (F) => {
      if (g.value)
        return;
      const P = F.target.files;
      if (P && P.length) {
        const M = [];
        z(P, (O) => {
          M.push({
            id: "",
            size: O.size,
            name: O.webkitRelativePath || O.relativePath || O.name,
            type: O.type,
            file: O
          });
        }), i({
          model: S.value ? M : M[0]
        });
      }
    }, D = d(e, "required"), w = _(() => D.value ? "*" : "");
    return {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      clearModel: o,
      componentStyleHide: r,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      inputRef: v,
      isErrors: E,
      isModel: b,
      modelValueListLocal: I,
      onBlur: p,
      onFocus: T,
      onInput: R,
      textAfterLabel: w
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__parent"
      }, [
        this.label && c(Ut, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          hideId: !0,
          type: this.type,
          isError: this.isErrors
        }),
        c("div", {}, [
          c("label", {
            for: this.htmlIdLocal,
            class: ["a_file__label a_form_control", this.labelClass, {
              disabled: this.disabled
            }],
            required: this.required,
            type: this.type
          }, [
            c("input", {
              ref: "inputRef",
              id: this.htmlIdLocal,
              type: "file",
              multiple: this.isMultiple,
              class: [
                "a_file__input",
                this.inputClass,
                {
                  a_form_control_invalid: this.isErrors
                }
              ],
              disabled: this.disabled,
              ariaRequired: this.required,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              ...this.inputAttributes,
              onInput: this.onInput,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }),
            c("span", {
              class: "a_file__label"
            }, this.text)
          ])
        ]),
        this.isModel && c("ul", {}, [
          this.modelValueListLocal.map((e) => c("li", {}, e.name))
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function e1(e, {
  currentValue: t = B(0),
  displayValue: n = _(() => ""),
  ensurePrecision: r = () => {
  },
  setCurrentValue: s = () => {
  },
  minLocal: i = _(() => {
  })
}) {
  const o = d(e, "disabled"), u = d(e, "modelValue"), f = d(e, "max"), A = d(e, "readonly"), E = _(() => On(u.value) && u.value <= i.value), p = _(() => On(u.value) && u.value >= f.value);
  return {
    increase: () => {
      if (A.value || o.value || p.value)
        return;
      const m = Number(n.value) || 0, b = r({ value: m, currentValue: t.value });
      s(b);
    },
    decrease: () => {
      if (A.value || o.value || E.value)
        return;
      const m = Number(n.value) || 0, b = r({ value: m, currentValue: t.value, coefficient: -1 });
      s(b);
    }
  };
}
function t1(e, {
  decrease: t = () => {
  },
  increase: n = () => {
  },
  inputRef: r = B({}),
  onBlur: s = () => {
  },
  setCurrentValue: i = () => {
  },
  userInput: o = B(null),
  currentValue: u = B(void 0),
  displayValue: f = _(() => ""),
  isTypeNumber: A = _(() => !0)
}) {
  const E = d(e, "type"), p = d(e, "eAllowed"), T = d(e, "min"), S = d(e, "modelValue");
  return {
    handleInput: (g) => {
      if (A.value) {
        const D = g.target.value;
        o.value = D;
        const w = D === "" ? null : Number(D);
        i(w, !1);
        return;
      }
      let R = g.target.value.trim();
      if (E.value === "integerNonNegative") {
        const D = R.match(/\d+/g);
        if (D !== null) {
          let w = parseInt(D.join(""), 10);
          w = Math.max(w, 0), R = w;
        } else
          R = null;
        i(R), r.value.value = R;
      } else if (E.value === "integerPositive") {
        if (R === "0")
          R = null;
        else {
          const D = R.match(/\d+/g);
          if (D !== null) {
            let w = parseInt(D.join(""), 10);
            w = Math.max(w, 1), R = w;
          } else
            R = null;
        }
        i(R), r.value.value = R;
      } else if (E.value === "integer") {
        const D = R.match(/\d+/g);
        if (D !== null) {
          let w = parseInt(D.join(""), 10);
          R.indexOf("-") !== -1 && (w = -w), R = w, i(R), r.value.value = R;
        } else R === "-" ? (R = "-", r.value.value = R) : (R = null, i(R), r.value.value = R);
      }
    },
    handleInputChange: (g) => {
      if (!A.value)
        return;
      const R = g.target.value, D = R !== "" ? Number(R) : "";
      (On(D) && !Number.isNaN(D) || R === "") && i(D), o.value = null;
    },
    handleKeydown: (g) => {
      g.keyCode === Z.arrowUp ? (n(), g.preventDefault()) : g.keyCode === Z.arrowDown ? (t(), g.preventDefault()) : (!p.value && g.keyCode === Z.e || T.value >= 0 && g.keyCode === Z.minus || g.keyCode === Z.plus) && (g.preventDefault(), g.stopPropagation());
    },
    onBlurNumber: (g) => {
      (o.value !== null || !S.value && S.value !== 0) && (o.value = null, u.value = S.value, r.value.value = f.value), s(g);
    }
  };
}
function n1(e) {
  const t = d(e, "type"), n = d(e, "min");
  return {
    minLocal: _(() => {
      let s;
      return t.value === "integerNonNegative" ? s = 0 : t.value === "integerPositive" && (s = 1), (Pe(s) || !se(n.value) && n.value > s) && (s = n.value), s;
    })
  };
}
function r1(e, {
  verifyValue: t = () => {
  },
  changeModel: n = () => {
  }
}) {
  const r = d(e, "precision"), s = d(e, "modelValue"), i = B(null), o = B(null), u = () => {
    o.value = s.value;
  }, f = _(() => {
    if (i.value !== null)
      return i.value;
    let E = o.value;
    if (se(E))
      return "";
    if (On(E)) {
      if (Number.isNaN(E))
        return "";
      Pe(r.value) || (E = E.toFixed(r.value));
    }
    return E;
  });
  return {
    currentValue: o,
    displayValue: f,
    initCurrentValue: u,
    setCurrentValue: (E, p = !0) => {
      const T = o.value, S = t(E);
      if (T !== S) {
        if (!p) {
          n({ model: S });
          return;
        }
        i.value = null, n({ model: S }), o.value = S;
      }
    },
    userInput: i
  };
}
function a1(e) {
  const t = d(e, "max"), n = d(e, "min"), r = d(e, "step"), s = d(e, "type"), i = _(() => s.value === "number"), o = _(() => i.value ? "number" : "text"), u = _(() => i.value ? {
    max: t.value,
    min: n.value,
    step: r.value
  } : {});
  return {
    inputType: o,
    isTypeNumber: i,
    numberAttributes: u
  };
}
function s1(e, {
  changeModel: t = () => {
  },
  minLocal: n = _(() => {
  })
}) {
  const r = d(e, "modelUndefined"), s = d(e, "stepStrictly"), i = d(e, "step"), o = d(e, "precision"), u = d(e, "max"), f = d(e, "modelValue"), A = (S) => {
    if (se(S))
      return 0;
    const m = S.toString(), b = m.indexOf(".");
    let I = 0;
    return b !== -1 && (I = m.length - b - 1), I;
  }, E = _(() => {
    const S = A(i.value);
    return Pe(o.value) ? Math.max(A(f.value), S) : (S > o.value && console.warn(
      "AInputNumber",
      "precision should not be less than the decimal places of step"
    ), o.value);
  });
  return {
    ensurePrecision: ({ value: S, currentValue: m, coefficient: b = 1 }) => On(S) ? Yo(S + i.value * b, E.value) : m,
    verifyValue: (S, m) => {
      let b = Number(S);
      return se(S) || Number.isNaN(b) ? null : (S === "" && (b = r.value), s.value && (b = Yo(Math.round(b / i.value) * i.value, o.value)), Pe(o.value) || (b = Yo(b, o.value)), b > u.value ? (b = u.value, m && t({ model: b })) : b < n.value && (b = n.value, m && t({ model: b })), b);
    }
  };
}
function i1(e) {
  const t = d(e, "inputWidth");
  return {
    inputWidthStyleValue: _(() => {
      let r = t.value;
      return On(t.value) && (r = `${t.value}px`), Pe(r) ? {} : {
        "--a_input_number_width": r
      };
    })
  };
}
const Ma = {
  name: "AInputNumber",
  inheritAttrs: !1,
  mixins: [
    Af
  ],
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    controlsType: {
      type: String,
      required: !1,
      default: () => En.propsDefault.controlsType,
      validator: (e) => ["plus-minus", "arrows", "none"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    eAllowed: {
      type: Boolean,
      required: !1,
      default: () => En.propsDefault.eAllowed
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: () => En.propsDefault.iconPrepend
    },
    inputWidth: {
      type: [String, Number],
      required: !1,
      default: () => En.propsDefault.inputWidth
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: () => En.propsDefault.isLabelFloat
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: () => En.propsDefault.max
    },
    min: {
      type: Number,
      required: !1,
      default: () => En.propsDefault.min
    },
    modelUndefined: {
      required: !1,
      default: () => En.propsDefault.modelUndefined
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: () => En.propsDefault.placeholder
    },
    precision: {
      type: Number,
      validator: (e) => e >= 0 && e === Number.parseInt(`${e}`, 10),
      default: () => En.propsDefault.precision
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    step: {
      type: Number,
      required: !1,
      default: () => En.propsDefault.step
    },
    stepStrictly: {
      type: Boolean,
      required: !1,
      default: () => En.propsDefault.stepStrictly
    },
    type: {
      type: String,
      required: !1,
      default: () => En.propsDefault.type,
      validator: (e) => ["number", "integerNonNegative", "integerPositive", "integer"].indexOf(e) !== -1
      // TODO: "float", "floatPositiv", "floatNonNegative"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      componentStyleHide: r
    } = Xt(e), {
      ariaDescribedbyLocal: s,
      changeModel: i,
      clearModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: S
    } = zt(e, t), {
      isClearButtonLocal: m
    } = Xu(e, {
      isModel: p
    }), {
      minLocal: b
    } = n1(e), {
      inputType: I,
      isTypeNumber: v,
      numberAttributes: g
    } = a1(e), {
      placeholderAttributes: R
    } = ql(e), {
      inputWidthStyleValue: D
    } = i1(e), w = B(void 0), F = d(e, "disabled"), P = (ve) => {
      if (F.value)
        return;
      const be = ve.target.value;
      i({
        model: +be
      });
    }, {
      isAutofill: M
    } = Rf({ inputRef: w }), {
      ensurePrecision: O,
      verifyValue: q
    } = s1(e, {
      changeModel: i,
      minLocal: b
    }), {
      currentValue: U,
      displayValue: G,
      initCurrentValue: te,
      setCurrentValue: re,
      userInput: ie
    } = r1(e, {
      verifyValue: q,
      changeModel: i
    }), {
      increase: le,
      decrease: oe
    } = e1(e, {
      currentValue: U,
      displayValue: G,
      ensurePrecision: O,
      setCurrentValue: re,
      minLocal: b
    }), {
      handleInput: Te,
      handleInputChange: Be,
      handleKeydown: Ae,
      onBlurNumber: _e
    } = t1(e, {
      currentValue: U,
      decrease: oe,
      displayValue: G,
      increase: le,
      inputRef: w,
      onBlur: T,
      setCurrentValue: re,
      userInput: ie,
      isTypeNumber: v
    });
    return te(), rt(
      () => e.modelValue,
      (ve) => {
        const be = q(ie.value), je = q(ve, !0);
        !On(be) && (!be || be !== je) && (U.value = je, ie.value = null);
      },
      { immediate: !0 }
    ), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      clearModel: o,
      componentStyleHide: r,
      currentValue: U,
      decrease: oe,
      displayValue: G,
      errorsId: u,
      handleInput: Te,
      handleInputChange: Be,
      handleKeydown: Ae,
      helpTextId: f,
      htmlIdLocal: A,
      increase: le,
      inputRef: w,
      inputType: I,
      inputWidthStyleValue: D,
      isAutofill: M,
      isClearButtonLocal: m,
      isErrors: E,
      isModel: p,
      numberAttributes: g,
      onBlurNumber: _e,
      onFocus: S,
      onInput: P,
      placeholderAttributes: R,
      userInput: ie
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Ln, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.displayValue,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: this.type
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__container"
      }, [
        c("div", {
          class: ["a_form_element__parent", {
            a_form_element__parent_float: this.isLabelFloat,
            a_form_element__parent_not_empty: this.isModel || this.isAutofill,
            a_form_element__parent_float_has_icon_prepend: this.iconPrepend,
            a_form_element__parent_invalid: this.isErrors
          }]
        }, [
          this.label && !this.isLabelFloat && c(Ut, {
            id: this.htmlIdLocal,
            alwaysTranslate: this.alwaysTranslate,
            label: this.label,
            labelClass: this.labelClass,
            labelScreenReader: this.labelScreenReader,
            required: this.required,
            type: this.type,
            isLabelFloat: this.isLabelFloat,
            isError: this.isErrors
          }),
          c("div", {
            class: [
              "a_form_element_number",
              {
                a_form_element_number_controls: this.controlsType !== "none"
              }
            ]
          }, [
            c("div", {
              class: "a_form_element",
              style: {
                ...this.inputWidthStyleValue
              }
            }, [
              this.label && this.isLabelFloat && c(Ut, {
                id: this.htmlIdLocal,
                alwaysTranslate: this.alwaysTranslate,
                label: this.label,
                labelClass: this.labelClass,
                labelScreenReader: this.labelScreenReader,
                required: this.required,
                type: this.type,
                isLabelFloat: this.isLabelFloat,
                isError: this.isErrors
              }),
              this.iconPrepend && c(_t, {
                icon: this.iconPrepend,
                class: "a_input__icon_prepend"
              }),
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                autocomplete: this.autocomplete,
                value: this.displayValue,
                type: this.inputType,
                class: [
                  "a_form_control a_input a_input_number",
                  this.inputClass,
                  {
                    a_form_element_with_one_btn: this.isClearButtonLocal,
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabled,
                ariaRequired: this.required,
                ariaInvalid: this.isErrors,
                "aria-describedby": this.ariaDescribedbyLocal,
                ...this.numberAttributes,
                ...this.placeholderAttributes,
                ...this.inputAttributes,
                onInput: this.handleInput,
                onChange: this.handleInputChange,
                onKeydown: this.handleKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlurNumber
              }),
              this.isClearButtonLocal ? c("div", {
                class: "a_form_control__actions"
              }, [
                c(ku, {
                  alwaysTranslate: this.alwaysTranslate,
                  disabled: this.disabled,
                  class: this.clearButtonClass,
                  onClear: this.clearModel
                })
              ]) : ""
            ]),
            this.controlsType === "plus-minus" && c("div", {
              class: "a_btn_group"
            }, [
              c(Ee, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_btn a_btn_outline_secondary",
                iconLeft: AS,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_NUMBER_BTN_DECREASE_",
                textScreenReader: "_A_INPUT_NUMBER_BTN_DECREASE_",
                type: "button",
                onClick: this.decrease
              }),
              c(Ee, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_btn a_btn_outline_secondary",
                iconLeft: ES,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_NUMBER_BTN_INCREASE_",
                textScreenReader: "_A_INPUT_NUMBER_BTN_INCREASE_",
                type: "button",
                onClick: this.increase
              })
            ])
          ]),
          c(Yt, {
            id: this.helpTextId,
            alwaysTranslate: this.alwaysTranslate,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(en, {
            id: this.errorsId,
            alwaysTranslate: this.alwaysTranslate,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
};
function l1({
  idMin: e = _(() => "")
}) {
  return {
    setFocusToMinInput: () => {
      const n = document.getElementById(e.value);
      n && n.focus();
    }
  };
}
function o1({
  htmlIdLocal: e = _(() => "")
}) {
  const t = _(() => `${e.value}_min`);
  return {
    idMax: _(() => `${e.value}_max`),
    idMin: t
  };
}
function u1(e, {
  htmlIdLocal: t = _(() => ""),
  idMax: n = _(() => ""),
  idMin: r = _(() => "")
}) {
  const s = d(e, "inputAttributes"), i = d(e, "inputAttributesMax"), o = d(e, "inputAttributesMin"), u = _(() => `${t.value}_label`), f = _(() => ({
    "aria-labelledby": `${u.value} ${r.value}`,
    ...s.value,
    ...o.value
  }));
  return {
    inputAttributesMaxLocal: _(() => ({
      "aria-labelledby": `${u.value} ${n.value}`,
      ...s.value,
      ...i.value
    })),
    inputAttributesMinLocal: f
  };
}
function _1(e, {
  changeModel: t = () => ({})
}) {
  const n = d(e, "keyMax"), r = d(e, "keyMin"), s = d(e, "modelValue"), i = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[r.value];
  }), o = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[n.value];
  });
  return {
    changeModelMax: ({ model: A }) => {
      const E = he(s.value);
      E[n.value] = A, t({ model: E });
    },
    changeModelMin: ({ model: A }) => {
      const E = he(s.value);
      E[r.value] = A, t({ model: E });
    },
    modelValueMax: o,
    modelValueMin: i
  };
}
function d1(e) {
  const t = d(e, "readonlyDefault"), n = d(e, "readonlyDefaultMax"), r = d(e, "readonlyDefaultMin"), s = _(() => Pe(n.value) ? t.value : n.value), i = _(() => Pe(r.value) ? t.value : r.value);
  return {
    readonlyDefaultMaxLocal: s,
    readonlyDefaultMinLocal: i
  };
}
function c1(e) {
  const t = d(e, "type");
  return {
    typeLocal: _(() => t.value.replace("Range", ""))
  };
}
const Tf = ["numberRange", "integerNonNegativeRange", "integerPositiveRange", "integerRange"], SS = {};
z(Tf, (e) => {
  SS[e] = !0;
});
const LS = SS, Uo = {
  name: "AInputNumberRange",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    controlsType: {
      type: String,
      required: !1,
      default: "plus-minus",
      validator: (e) => ["plus-minus", "arrows"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_input_number_range_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesMax: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesMin: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputWidth: {
      type: [Number, String],
      required: !1,
      default: 200
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyMax: {
      tpe: String,
      required: !1,
      default: "max"
    },
    keyMin: {
      tpe: String,
      required: !1,
      default: "min"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelMax: {
      type: String,
      required: !1,
      default: "_A_INPUT_NUMBER_RANGE_LABEL_MAX_"
    },
    labelMin: {
      type: String,
      required: !1,
      default: "_A_INPUT_NUMBER_RANGE_LABEL_MIN_"
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: void 0
    },
    min: {
      type: Number,
      required: !1,
      default: void 0
    },
    modelUndefined: {
      required: !1,
      default: void 0
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholderMax: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholderMin: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    precision: {
      type: Number,
      validator: (e) => e >= 0 && e === Number.parseInt(`${e}`, 10)
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    readonlyDefaultMax: {
      type: String,
      required: !1,
      default: void 0
    },
    readonlyDefaultMin: {
      type: String,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    step: {
      type: Number,
      required: !1,
      default: 1
    },
    stepStrictly: {
      type: Boolean,
      required: !1
    },
    type: {
      type: String,
      required: !1,
      default: "numberRange",
      validator: (e) => Tf.indexOf(e) !== -1
      // TODO: "float", "floatPositiv", "floatNonNegative"
    }
  },
  emits: [
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      componentStyleHide: r
    } = Xt(e), {
      changeModel: s,
      errorsId: i,
      helpTextId: o,
      htmlIdLocal: u,
      isErrors: f
    } = zt(e, t), {
      changeModelMax: A,
      changeModelMin: E,
      modelValueMax: p,
      modelValueMin: T
    } = _1(e, {
      changeModel: s
    }), {
      idMax: S,
      idMin: m
    } = o1({
      htmlIdLocal: u
    }), {
      typeLocal: b
    } = c1(e), {
      inputAttributesMaxLocal: I,
      inputAttributesMinLocal: v
    } = u1(e, {
      htmlIdLocal: u,
      idMax: S,
      idMin: m
    }), {
      setFocusToMinInput: g
    } = l1({
      idMin: m
    }), {
      destroyEventBusClickLabel: R,
      initEventBusClickLabel: D
    } = gf({
      htmlIdLocal: u,
      clickLabel: g
    }), {
      readonlyDefaultMaxLocal: w,
      readonlyDefaultMinLocal: F
    } = d1(e);
    return D(), Ot(() => {
      R();
    }), {
      attributesToExcludeFromRender: n,
      changeModelMax: A,
      changeModelMin: E,
      componentStyleHide: r,
      errorsId: i,
      helpTextId: o,
      htmlIdLocal: u,
      idMax: S,
      idMin: m,
      inputAttributesMaxLocal: I,
      inputAttributesMinLocal: v,
      isErrors: f,
      modelValueMax: p,
      modelValueMin: T,
      readonlyDefaultMaxLocal: w,
      readonlyDefaultMinLocal: F,
      typeLocal: b
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Ln, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      isRange: !0,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "numberRange",
      valueParentClass: "a_form_element_readonly_value_range"
    }, () => [
      c(Ma, {
        id: this.idMin,
        alwaysTranslate: this.alwaysTranslate,
        inputWidth: this.inputWidth,
        label: this.labelMin,
        max: this.max,
        min: this.min,
        precision: this.precision,
        readonly: !0,
        readonlyDefault: this.readonlyDefaultMinLocal,
        type: this.typeLocal,
        required: this.required,
        modelValue: this.modelValueMin
      }),
      c(Ma, {
        id: this.idMax,
        alwaysTranslate: this.alwaysTranslate,
        inputWidth: this.inputWidth,
        label: this.labelMax,
        max: this.max,
        min: this.min,
        precision: this.precision,
        readonly: !0,
        readonlyDefault: this.readonlyDefaultMaxLocal,
        type: this.typeLocal,
        required: this.required,
        modelValue: this.modelValueMax
      })
    ]) : c("div", {
      ...this.$attrs,
      class: "a_input_number_range",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_invalid: this.isErrors
        }]
      }, [
        this.label ? c(Ut, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: !1,
          isError: this.isErrors
        }) : "",
        c("div", {
          class: "a_input_number_range__content"
        }, [
          c("div", {
            class: "a_input_number_range__group a_input_number_range__group_min"
          }, [
            c(Ut, {
              id: this.idMin,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_input_number_range__label a_input_number_range__label_min",
              isLabelFloat: !1,
              label: this.labelMin,
              isError: this.isErrors
            }),
            c(Ma, {
              id: this.idMin,
              alwaysTranslate: this.alwaysTranslate,
              controlsType: this.controlsType,
              iconPrepend: this.iconPrepend,
              inputWidth: this.inputWidth,
              isLabelFloat: !0,
              max: this.max,
              min: this.min,
              modelUndefined: this.modelUndefined,
              precision: this.precision,
              step: this.step,
              stepStrictly: this.stepStrictly,
              type: this.typeLocal,
              disabled: this.disabled,
              inputAttributes: this.inputAttributesMinLocal,
              required: this.required,
              modelValue: this.modelValueMin,
              placeholder: this.placeholderMin,
              change: this.changeModelMin
            })
          ]),
          c("div", {
            class: "a_input_number_range__group a_input_number_range__group_max"
          }, [
            c(Ut, {
              id: this.idMax,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_input_number_range__label a_input_number_range__label_max",
              isLabelFloat: !1,
              label: this.labelMax,
              isError: this.isErrors
            }),
            c(Ma, {
              id: this.idMax,
              alwaysTranslate: this.alwaysTranslate,
              controlsType: this.controlsType,
              iconPrepend: this.iconPrepend,
              inputWidth: this.inputWidth,
              isLabelFloat: !0,
              max: this.max,
              min: this.min,
              modelUndefined: this.modelUndefined,
              precision: this.precision,
              step: this.step,
              stepStrictly: this.stepStrictly,
              type: this.typeLocal,
              disabled: this.disabled,
              inputAttributes: this.inputAttributesMaxLocal,
              required: this.required,
              modelValue: this.modelValueMax,
              placeholder: this.placeholderMax,
              change: this.changeModelMax
            })
          ])
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors ? c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        }) : ""
      ])
    ]) : null;
  }
};
function f1(e) {
  const t = d(e, "heightCss"), n = _(() => {
    if (t.value)
      return `height: ${t.value}`;
  }), r = _(() => {
    if (t.value)
      return `max-height: ${t.value}`;
  });
  return {
    styleHeight: n,
    styleMaxHeight: r
  };
}
function h1(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "disabled"), r = d(e, "modelUndefined"), s = d(e, "modelValue"), i = B(void 0), o = B(""), u = B(""), f = B(void 0), A = () => {
    i.value = he(s.value) || "";
  }, E = () => {
    n.value || t({
      model: r.value
    });
  }, p = () => {
    try {
      s.value ? o.value = JSON.stringify(s.value, void 0, 2) : o.value = "", u.value = o.value, f.value = void 0;
    } catch {
    }
  }, T = (I) => {
    if (!n.value)
      if (!u.value || u.value.length === 0)
        t({
          $event: I,
          model: r.value
        });
      else
        try {
          const v = JSON.parse(u.value);
          t({
            $event: I,
            model: v
          }), o.value = JSON.stringify(v, void 0, 2), f.value = null;
        } catch (v) {
          f.value = v.toString();
        }
  };
  return {
    clearModel: E,
    formatJson: () => {
      try {
        u.value = JSON.stringify(JSON.parse(u.value), void 0, 2);
      } catch (I) {
        f.value = I.toString();
      }
    },
    initialValue: i,
    initInitialValue: A,
    jsonString: o,
    jsonStringInput: u,
    JSONtoString: p,
    onInput: (I) => {
      n.value || (u.value = I.target.value, T());
    },
    parseError: f,
    resetModel: () => {
      n.value || (t({
        model: i.value
      }), setTimeout(() => {
        p();
      }));
    },
    stringToJSON: T
  };
}
function A1(e) {
  const t = d(e, "modelValue"), n = d(e, "readonlyDefault"), {
    filterJson: r
  } = jn();
  return {
    modelValueReadonly: _(() => se(t.value) || t.value === "" ? n.value : r(t.value))
  };
}
const E1 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-repeat" viewBox="0 0 16 16">
  <path d="M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41m-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9"/>
  <path fill-rule="evenodd" d="M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5 5 0 0 0 8 3M3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9z"/>
</svg>`, p1 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-braces" viewBox="0 0 16 16">
  <path d="M2.114 8.063V7.9c1.005-.102 1.497-.615 1.497-1.6V4.503c0-1.094.39-1.538 1.354-1.538h.273V2h-.376C3.25 2 2.49 2.759 2.49 4.352v1.524c0 1.094-.376 1.456-1.49 1.456v1.299c1.114 0 1.49.362 1.49 1.456v1.524c0 1.593.759 2.352 2.372 2.352h.376v-.964h-.273c-.964 0-1.354-.444-1.354-1.538V9.663c0-.984-.492-1.497-1.497-1.6M13.886 7.9v.163c-1.005.103-1.497.616-1.497 1.6v1.798c0 1.094-.39 1.538-1.354 1.538h-.273v.964h.376c1.613 0 2.372-.759 2.372-2.352v-1.524c0-1.094.376-1.456 1.49-1.456V7.332c-1.114 0-1.49-.362-1.49-1.456V4.352C13.51 2.759 12.75 2 11.138 2h-.376v.964h.273c.964 0 1.354.444 1.354 1.538V6.3c0 .984.492 1.497 1.497 1.6"/>
</svg>`, Sf = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
  <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"/>
  <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"/>
</svg>`, T1 = {
  name: "AJson",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    heightCss: {
      type: String,
      required: !1,
      default: "400px;"
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_json_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = Vl(e), {
      attributesToExcludeFromRender: r
    } = Bt(e), {
      componentStyleHide: s
    } = Xt(e), {
      ariaDescribedbyLocal: i,
      changeModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: S
    } = zt(e, t), {
      styleHeight: m,
      styleMaxHeight: b
    } = f1(e), {
      clearModel: I,
      formatJson: v,
      initialValue: g,
      initInitialValue: R,
      jsonString: D,
      jsonStringInput: w,
      JSONtoString: F,
      onInput: P,
      parseError: M,
      resetModel: O
    } = h1(e, {
      changeModel: o
    }), {
      modelValueReadonly: q
    } = A1(e);
    return R(), F(), {
      ariaDescribedbyLocal: i,
      attributesToExcludeFromRender: r,
      changeModel: o,
      clearModel: I,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: u,
      formatJson: v,
      helpTextId: f,
      htmlIdLocal: A,
      onInput: P,
      initialValue: g,
      initInitialValue: R,
      isErrors: E,
      isModel: p,
      jsonString: D,
      jsonStringInput: w,
      JSONtoString: F,
      modelValueReadonly: q,
      onBlur: T,
      onFocus: S,
      parseError: M,
      resetModel: O,
      styleHeight: m,
      styleMaxHeight: b
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Ln, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.modelValueReadonly,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "json",
      valueClass: "a_code_content",
      valueTag: "pre"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(Ut, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: !1,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required
        }) : "",
        c("div", {
          class: "a_columns a_columns_count_12"
        }, [
          c("div", {
            class: "a_column a_column_6 a_column_12_touch"
          }, [
            c("div", {
              class: "a_d_flex a_justify_content_between"
            }, [
              c(Ut, {
                id: this.htmlIdLocal,
                alwaysTranslate: this.alwaysTranslate,
                extra: this.extra,
                idSuffix: "_input",
                isError: this.isErrors,
                isLabelFloat: !1,
                label: "_A_JSON_INPUT_"
              }),
              c("div", {
                class: "a_btn_group",
                role: "group"
              }, [
                c(Ee, {
                  class: [
                    "a_btn",
                    {
                      a_btn_transparent_info: !this.parseError,
                      a_btn_transparent_dark: this.parseError
                    }
                  ],
                  disabled: !!this.parseError,
                  iconLeft: p1,
                  textScreenReader: "_A_JSON_FORMAT_INPUT_",
                  title: "_A_JSON_FORMAT_INPUT_",
                  type: "button",
                  onClick: this.formatJson
                }),
                c(Ee, {
                  class: "a_btn a_btn_transparent_warning",
                  iconLeft: E1,
                  textScreenReader: "_A_JSON_RESET_INPUT_",
                  title: "_A_JSON_RESET_INPUT_",
                  type: "button",
                  onClick: this.JSONtoString
                }),
                c(Ee, {
                  class: "a_btn a_btn_transparent_danger",
                  iconLeft: Sf,
                  textScreenReader: "_A_JSON_DISCARD_ALL_CHANGES_",
                  title: "_A_JSON_DISCARD_ALL_CHANGES_",
                  type: "button",
                  onClick: this.resetModel
                })
              ])
            ]),
            c("div", {
              class: "a_form_element a_form_element_textarea"
            }, [
              c("textarea", {
                ref: "textareaRef",
                id: this.htmlIdLocal,
                style: this.styleHeight,
                value: this.jsonStringInput,
                "aria-describedby": this.ariaDescribedbyLocal,
                ariaInvalid: this.isErrors,
                ariaRequired: this.required,
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: [
                  "a_form_control a_json__textarea",
                  this.inputClass,
                  {
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabledAttribut,
                spellcheck: "false",
                ...this.inputAttributes,
                onInput: this.onInput,
                onFocus: this.onFocus,
                onBlur: this.onBlur
              })
            ]),
            this.parseError ? c(pe, {
              alwaysTranslate: this.alwaysTranslate,
              class: "a_form_element__invalid_text",
              html: "_A_JSON_ERROR_HTML_{{error}}_",
              extra: {
                error: this.parseError
              }
            }) : ""
          ]),
          c("div", {
            class: "a_column a_column_6 a_column_12_touch"
          }, [
            c(pe, {
              tag: "div",
              text: "_A_JSON_CURRENT_VALUE_"
            }),
            Nt(c("div", {
              class: "a_json__code",
              style: this.styleMaxHeight
            }), [
              [Kt, this.jsonString]
            ])
          ])
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, fi = {
  name: "ASelectLabelElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Object,
      required: !0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = d(e, "data");
    return {
      currentLabel: _(() => t.value[vt])
    };
  },
  render() {
    return c(this.tag, {}, [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        item: this.data,
        label: this.currentLabel,
        inDropdown: !1
      }) : Nt(c("span"), [
        [Kt, this.currentLabel]
      ])
    ]);
  }
};
function S1(e) {
  const t = d(e, "btnGroupAriaLabel"), n = d(e, "id"), r = d(e, "index"), s = ({ id: p, index: T }) => `${p}_${T}_up`, i = ({ id: p, index: T }) => `${p}_${T}_down`, o = _(() => `${n.value}_${r.value}_label`), u = _(() => `${n.value}_${r.value}_delete`), f = _(() => s({ id: n.value, index: r.value })), A = _(() => i({ id: n.value, index: r.value }));
  return {
    ariaLabelAttributes: _(() => zc({
      attr: "aria-label",
      value: t.value,
      translation: Dt({ placeholder: t.value })
    })),
    getIdBtnDown: i,
    getIdBtnUp: s,
    idBtnDelete: u,
    idBtnDown: A,
    idBtnUp: f,
    idSelectLabel: o
  };
}
function L1(e, { emit: t }, {
  getIdBtnDown: n = () => {
  },
  getIdBtnUp: r = () => {
  }
}) {
  const s = d(e, "id"), i = d(e, "index"), o = d(e, "isLastItem"), u = d(e, "modelValue"), f = _(() => i.value === 0);
  return {
    deleteItem: () => {
      t("deleteItem", { modelValue: u.value });
    },
    isFirstItem: f,
    onDownItem: () => {
      o.value || t("downItem", {
        index: i.value,
        idForFocus: n({
          id: s.value,
          index: i.value + 1
        })
      });
    },
    onUpItem: () => {
      f.value || t("upItem", {
        index: i.value,
        idForFocus: r({
          id: s.value,
          index: i.value - 1
        })
      });
    }
  };
}
const m1 = {
  name: "AMultiselectOrderedItem",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    btnDeleteClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    btnDeleteIcon: {
      type: String,
      required: !1,
      default: void 0
    },
    btnDeleteTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    btnDownClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    btnDownIcon: {
      type: String,
      required: !1,
      default: void 0
    },
    btnDownTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    btnGroupAriaLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    btnGroupClass: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    btnUpClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    btnUpIcon: {
      type: String,
      required: !1,
      default: void 0
    },
    btnUpTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    listItemClass: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    data: {
      type: Object,
      required: !0
    },
    index: {
      type: Number,
      required: !0
    },
    isLastItem: {
      type: Boolean,
      required: !0
    },
    modelValue: {
      type: null,
      required: !0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "deleteItem",
    "downItem",
    "upItem"
  ],
  setup(e, t) {
    const {
      ariaLabelAttributes: n,
      getIdBtnDown: r,
      getIdBtnUp: s,
      idBtnDelete: i,
      idBtnDown: o,
      idBtnUp: u,
      idSelectLabel: f
    } = S1(e), {
      deleteItem: A,
      isFirstItem: E,
      onDownItem: p,
      onUpItem: T
    } = L1(e, t, {
      getIdBtnDown: r,
      getIdBtnUp: s
    });
    return {
      ariaLabelAttributes: n,
      deleteItem: A,
      idBtnDelete: i,
      idBtnDown: o,
      idBtnUp: u,
      idSelectLabel: f,
      isFirstItem: E,
      onDownItem: p,
      onUpItem: T
    };
  },
  render() {
    return c("li", {
      class: this.listItemClass
    }, [
      c(fi, {
        id: this.idSelectLabel,
        alwaysTranslate: this.alwaysTranslate,
        data: this.data,
        slotName: this.slotName
      }, this.$slots),
      c("div", {
        class: this.btnGroupClass,
        role: "group",
        "aria-describedBy": this.idSelectLabel,
        ...this.ariaLabelAttributes
      }, [
        c(Ee, {
          id: this.idBtnUp,
          ariaDisabled: this.disabled || this.isFirstItem,
          class: [
            this.btnUpClass,
            {
              disabled: this.disabled || this.isFirstItem
            }
          ],
          iconLeft: this.btnUpIcon,
          textScreenReader: this.btnUpTitle,
          title: this.btnUpTitle,
          type: "button",
          onClick: this.onUpItem
        }),
        c(Ee, {
          id: this.idBtnDown,
          ariaDisabled: this.disabled || this.isLastItem,
          class: [
            this.btnDownClass,
            {
              disabled: this.disabled || this.isLastItem
            }
          ],
          iconLeft: this.btnDownIcon,
          textScreenReader: this.btnDownTitle,
          title: this.btnDownTitle,
          type: "button",
          onClick: this.onDownItem
        }),
        c(Ee, {
          id: this.idBtnDelete,
          ariaDisabled: this.disabled,
          class: [
            this.btnDeleteClass,
            {
              disabled: this.disabled
            }
          ],
          iconLeft: this.btnDeleteIcon,
          textScreenReader: this.btnDeleteTitle,
          title: this.btnDeleteTitle,
          type: "button",
          onClick: this.deleteItem
        })
      ])
    ]);
  }
};
var ol = { exports: {} };
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
var b1 = ol.exports, tp;
function I1() {
  return tp || (tp = 1, function(e, t) {
    (function() {
      var n, r = "4.17.21", s = 200, i = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", o = "Expected a function", u = "Invalid `variable` option passed into `_.template`", f = "__lodash_hash_undefined__", A = 500, E = "__lodash_placeholder__", p = 1, T = 2, S = 4, m = 1, b = 2, I = 1, v = 2, g = 4, R = 8, D = 16, w = 32, F = 64, P = 128, M = 256, O = 512, q = 30, U = "...", G = 800, te = 16, re = 1, ie = 2, le = 3, oe = 1 / 0, Te = 9007199254740991, Be = 17976931348623157e292, Ae = NaN, _e = 4294967295, ve = _e - 1, be = _e >>> 1, je = [
        ["ary", P],
        ["bind", I],
        ["bindKey", v],
        ["curry", R],
        ["curryRight", D],
        ["flip", O],
        ["partial", w],
        ["partialRight", F],
        ["rearg", M]
      ], Re = "[object Arguments]", J = "[object Array]", H = "[object AsyncFunction]", X = "[object Boolean]", ae = "[object Date]", ge = "[object DOMException]", Ce = "[object Error]", ke = "[object Function]", Qe = "[object GeneratorFunction]", Ue = "[object Map]", $e = "[object Number]", it = "[object Null]", Ke = "[object Object]", lt = "[object Promise]", et = "[object Proxy]", ht = "[object RegExp]", At = "[object Set]", Mt = "[object String]", tn = "[object Symbol]", hr = "[object Undefined]", nn = "[object WeakMap]", Kn = "[object WeakSet]", zn = "[object ArrayBuffer]", Cn = "[object DataView]", Nr = "[object Float32Array]", Ar = "[object Float64Array]", Br = "[object Int8Array]", Yn = "[object Int16Array]", Xn = "[object Int32Array]", Zt = "[object Uint8Array]", mn = "[object Uint8ClampedArray]", Er = "[object Uint16Array]", pr = "[object Uint32Array]", Ts = /\b__p \+= '';/g, wr = /\b(__p \+=) '' \+/g, Zn = /(__e\(.*?\)|\b__t\)) \+\n'';/g, Sa = /&(?:amp|lt|gt|quot|#39);/g, Dn = /[&<>"']/g, Ss = RegExp(Sa.source), Ls = RegExp(Dn.source), yt = /<%-([\s\S]+?)%>/g, Jn = /<%([\s\S]+?)%>/g, Yr = /<%=([\s\S]+?)%>/g, La = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, Xr = /^\w*$/, ma = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, Pr = /[\\^$.*+?()[\]{}|]/g, Pi = RegExp(Pr.source), rn = /^\s+/, ba = /\s/, zs = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, Ys = /\{\n\/\* \[wrapped with (.+)\] \*/, Tr = /,? & /, ms = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, dn = /[()=,{}\[\]\/\s]/, Xs = /\\(\\)?/g, Wl = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, xi = /\w*$/, Gl = /^[-+]0x[0-9a-f]+$/i, r_ = /^0b[01]+$/i, De = /^\[object .+?Constructor\]$/, k = /^0o[0-7]+$/i, ue = /^(?:0|[1-9]\d*)$/, Ie = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, ct = /($^)/, Wt = /['\n\r\u2028\u2029\\]/g, wt = "\\ud800-\\udfff", an = "\\u0300-\\u036f", Qn = "\\ufe20-\\ufe2f", bs = "\\u20d0-\\u20ff", Gt = an + Qn + bs, Mi = "\\u2700-\\u27bf", Fi = "a-z\\xdf-\\xf6\\xf8-\\xff", wL = "\\xac\\xb1\\xd7\\xf7", PL = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", xL = "\\u2000-\\u206f", ML = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", Nf = "A-Z\\xc0-\\xd6\\xd8-\\xde", Bf = "\\ufe0e\\ufe0f", wf = wL + PL + xL + ML, a_ = "['’]", FL = "[" + wt + "]", Pf = "[" + wf + "]", jl = "[" + Gt + "]", xf = "\\d+", qL = "[" + Mi + "]", Mf = "[" + Fi + "]", Ff = "[^" + wt + wf + xf + Mi + Fi + Nf + "]", s_ = "\\ud83c[\\udffb-\\udfff]", $L = "(?:" + jl + "|" + s_ + ")", qf = "[^" + wt + "]", i_ = "(?:\\ud83c[\\udde6-\\uddff]){2}", l_ = "[\\ud800-\\udbff][\\udc00-\\udfff]", Zs = "[" + Nf + "]", $f = "\\u200d", Uf = "(?:" + Mf + "|" + Ff + ")", UL = "(?:" + Zs + "|" + Ff + ")", kf = "(?:" + a_ + "(?:d|ll|m|re|s|t|ve))?", Hf = "(?:" + a_ + "(?:D|LL|M|RE|S|T|VE))?", Vf = $L + "?", Wf = "[" + Bf + "]?", kL = "(?:" + $f + "(?:" + [qf, i_, l_].join("|") + ")" + Wf + Vf + ")*", HL = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", VL = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", Gf = Wf + Vf + kL, WL = "(?:" + [qL, i_, l_].join("|") + ")" + Gf, GL = "(?:" + [qf + jl + "?", jl, i_, l_, FL].join("|") + ")", jL = RegExp(a_, "g"), KL = RegExp(jl, "g"), o_ = RegExp(s_ + "(?=" + s_ + ")|" + GL + Gf, "g"), zL = RegExp([
        Zs + "?" + Mf + "+" + kf + "(?=" + [Pf, Zs, "$"].join("|") + ")",
        UL + "+" + Hf + "(?=" + [Pf, Zs + Uf, "$"].join("|") + ")",
        Zs + "?" + Uf + "+" + kf,
        Zs + "+" + Hf,
        VL,
        HL,
        xf,
        WL
      ].join("|"), "g"), YL = RegExp("[" + $f + wt + Gt + Bf + "]"), XL = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, ZL = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
      ], JL = -1, bt = {};
      bt[Nr] = bt[Ar] = bt[Br] = bt[Yn] = bt[Xn] = bt[Zt] = bt[mn] = bt[Er] = bt[pr] = !0, bt[Re] = bt[J] = bt[zn] = bt[X] = bt[Cn] = bt[ae] = bt[Ce] = bt[ke] = bt[Ue] = bt[$e] = bt[Ke] = bt[ht] = bt[At] = bt[Mt] = bt[nn] = !1;
      var St = {};
      St[Re] = St[J] = St[zn] = St[Cn] = St[X] = St[ae] = St[Nr] = St[Ar] = St[Br] = St[Yn] = St[Xn] = St[Ue] = St[$e] = St[Ke] = St[ht] = St[At] = St[Mt] = St[tn] = St[Zt] = St[mn] = St[Er] = St[pr] = !0, St[Ce] = St[ke] = St[nn] = !1;
      var QL = {
        // Latin-1 Supplement block.
        À: "A",
        Á: "A",
        Â: "A",
        Ã: "A",
        Ä: "A",
        Å: "A",
        à: "a",
        á: "a",
        â: "a",
        ã: "a",
        ä: "a",
        å: "a",
        Ç: "C",
        ç: "c",
        Ð: "D",
        ð: "d",
        È: "E",
        É: "E",
        Ê: "E",
        Ë: "E",
        è: "e",
        é: "e",
        ê: "e",
        ë: "e",
        Ì: "I",
        Í: "I",
        Î: "I",
        Ï: "I",
        ì: "i",
        í: "i",
        î: "i",
        ï: "i",
        Ñ: "N",
        ñ: "n",
        Ò: "O",
        Ó: "O",
        Ô: "O",
        Õ: "O",
        Ö: "O",
        Ø: "O",
        ò: "o",
        ó: "o",
        ô: "o",
        õ: "o",
        ö: "o",
        ø: "o",
        Ù: "U",
        Ú: "U",
        Û: "U",
        Ü: "U",
        ù: "u",
        ú: "u",
        û: "u",
        ü: "u",
        Ý: "Y",
        ý: "y",
        ÿ: "y",
        Æ: "Ae",
        æ: "ae",
        Þ: "Th",
        þ: "th",
        ß: "ss",
        // Latin Extended-A block.
        Ā: "A",
        Ă: "A",
        Ą: "A",
        ā: "a",
        ă: "a",
        ą: "a",
        Ć: "C",
        Ĉ: "C",
        Ċ: "C",
        Č: "C",
        ć: "c",
        ĉ: "c",
        ċ: "c",
        č: "c",
        Ď: "D",
        Đ: "D",
        ď: "d",
        đ: "d",
        Ē: "E",
        Ĕ: "E",
        Ė: "E",
        Ę: "E",
        Ě: "E",
        ē: "e",
        ĕ: "e",
        ė: "e",
        ę: "e",
        ě: "e",
        Ĝ: "G",
        Ğ: "G",
        Ġ: "G",
        Ģ: "G",
        ĝ: "g",
        ğ: "g",
        ġ: "g",
        ģ: "g",
        Ĥ: "H",
        Ħ: "H",
        ĥ: "h",
        ħ: "h",
        Ĩ: "I",
        Ī: "I",
        Ĭ: "I",
        Į: "I",
        İ: "I",
        ĩ: "i",
        ī: "i",
        ĭ: "i",
        į: "i",
        ı: "i",
        Ĵ: "J",
        ĵ: "j",
        Ķ: "K",
        ķ: "k",
        ĸ: "k",
        Ĺ: "L",
        Ļ: "L",
        Ľ: "L",
        Ŀ: "L",
        Ł: "L",
        ĺ: "l",
        ļ: "l",
        ľ: "l",
        ŀ: "l",
        ł: "l",
        Ń: "N",
        Ņ: "N",
        Ň: "N",
        Ŋ: "N",
        ń: "n",
        ņ: "n",
        ň: "n",
        ŋ: "n",
        Ō: "O",
        Ŏ: "O",
        Ő: "O",
        ō: "o",
        ŏ: "o",
        ő: "o",
        Ŕ: "R",
        Ŗ: "R",
        Ř: "R",
        ŕ: "r",
        ŗ: "r",
        ř: "r",
        Ś: "S",
        Ŝ: "S",
        Ş: "S",
        Š: "S",
        ś: "s",
        ŝ: "s",
        ş: "s",
        š: "s",
        Ţ: "T",
        Ť: "T",
        Ŧ: "T",
        ţ: "t",
        ť: "t",
        ŧ: "t",
        Ũ: "U",
        Ū: "U",
        Ŭ: "U",
        Ů: "U",
        Ű: "U",
        Ų: "U",
        ũ: "u",
        ū: "u",
        ŭ: "u",
        ů: "u",
        ű: "u",
        ų: "u",
        Ŵ: "W",
        ŵ: "w",
        Ŷ: "Y",
        ŷ: "y",
        Ÿ: "Y",
        Ź: "Z",
        Ż: "Z",
        Ž: "Z",
        ź: "z",
        ż: "z",
        ž: "z",
        Ĳ: "IJ",
        ĳ: "ij",
        Œ: "Oe",
        œ: "oe",
        ŉ: "'n",
        ſ: "s"
      }, em = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      }, tm = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      }, nm = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
      }, rm = parseFloat, am = parseInt, jf = typeof Mo == "object" && Mo && Mo.Object === Object && Mo, sm = typeof self == "object" && self && self.Object === Object && self, Jt = jf || sm || Function("return this")(), u_ = t && !t.nodeType && t, Is = u_ && !0 && e && !e.nodeType && e, Kf = Is && Is.exports === u_, __ = Kf && jf.process, er = function() {
        try {
          var V = Is && Is.require && Is.require("util").types;
          return V || __ && __.binding && __.binding("util");
        } catch {
        }
      }(), zf = er && er.isArrayBuffer, Yf = er && er.isDate, Xf = er && er.isMap, Zf = er && er.isRegExp, Jf = er && er.isSet, Qf = er && er.isTypedArray;
      function Nn(V, Y, j) {
        switch (j.length) {
          case 0:
            return V.call(Y);
          case 1:
            return V.call(Y, j[0]);
          case 2:
            return V.call(Y, j[0], j[1]);
          case 3:
            return V.call(Y, j[0], j[1], j[2]);
        }
        return V.apply(Y, j);
      }
      function im(V, Y, j, Le) {
        for (var He = -1, ut = V == null ? 0 : V.length; ++He < ut; ) {
          var kt = V[He];
          Y(Le, kt, j(kt), V);
        }
        return Le;
      }
      function tr(V, Y) {
        for (var j = -1, Le = V == null ? 0 : V.length; ++j < Le && Y(V[j], j, V) !== !1; )
          ;
        return V;
      }
      function lm(V, Y) {
        for (var j = V == null ? 0 : V.length; j-- && Y(V[j], j, V) !== !1; )
          ;
        return V;
      }
      function eh(V, Y) {
        for (var j = -1, Le = V == null ? 0 : V.length; ++j < Le; )
          if (!Y(V[j], j, V))
            return !1;
        return !0;
      }
      function Ia(V, Y) {
        for (var j = -1, Le = V == null ? 0 : V.length, He = 0, ut = []; ++j < Le; ) {
          var kt = V[j];
          Y(kt, j, V) && (ut[He++] = kt);
        }
        return ut;
      }
      function Kl(V, Y) {
        var j = V == null ? 0 : V.length;
        return !!j && Js(V, Y, 0) > -1;
      }
      function d_(V, Y, j) {
        for (var Le = -1, He = V == null ? 0 : V.length; ++Le < He; )
          if (j(Y, V[Le]))
            return !0;
        return !1;
      }
      function Rt(V, Y) {
        for (var j = -1, Le = V == null ? 0 : V.length, He = Array(Le); ++j < Le; )
          He[j] = Y(V[j], j, V);
        return He;
      }
      function va(V, Y) {
        for (var j = -1, Le = Y.length, He = V.length; ++j < Le; )
          V[He + j] = Y[j];
        return V;
      }
      function c_(V, Y, j, Le) {
        var He = -1, ut = V == null ? 0 : V.length;
        for (Le && ut && (j = V[++He]); ++He < ut; )
          j = Y(j, V[He], He, V);
        return j;
      }
      function om(V, Y, j, Le) {
        var He = V == null ? 0 : V.length;
        for (Le && He && (j = V[--He]); He--; )
          j = Y(j, V[He], He, V);
        return j;
      }
      function f_(V, Y) {
        for (var j = -1, Le = V == null ? 0 : V.length; ++j < Le; )
          if (Y(V[j], j, V))
            return !0;
        return !1;
      }
      var um = h_("length");
      function _m(V) {
        return V.split("");
      }
      function dm(V) {
        return V.match(ms) || [];
      }
      function th(V, Y, j) {
        var Le;
        return j(V, function(He, ut, kt) {
          if (Y(He, ut, kt))
            return Le = ut, !1;
        }), Le;
      }
      function zl(V, Y, j, Le) {
        for (var He = V.length, ut = j + (Le ? 1 : -1); Le ? ut-- : ++ut < He; )
          if (Y(V[ut], ut, V))
            return ut;
        return -1;
      }
      function Js(V, Y, j) {
        return Y === Y ? Im(V, Y, j) : zl(V, nh, j);
      }
      function cm(V, Y, j, Le) {
        for (var He = j - 1, ut = V.length; ++He < ut; )
          if (Le(V[He], Y))
            return He;
        return -1;
      }
      function nh(V) {
        return V !== V;
      }
      function rh(V, Y) {
        var j = V == null ? 0 : V.length;
        return j ? E_(V, Y) / j : Ae;
      }
      function h_(V) {
        return function(Y) {
          return Y == null ? n : Y[V];
        };
      }
      function A_(V) {
        return function(Y) {
          return V == null ? n : V[Y];
        };
      }
      function ah(V, Y, j, Le, He) {
        return He(V, function(ut, kt, Tt) {
          j = Le ? (Le = !1, ut) : Y(j, ut, kt, Tt);
        }), j;
      }
      function fm(V, Y) {
        var j = V.length;
        for (V.sort(Y); j--; )
          V[j] = V[j].value;
        return V;
      }
      function E_(V, Y) {
        for (var j, Le = -1, He = V.length; ++Le < He; ) {
          var ut = Y(V[Le]);
          ut !== n && (j = j === n ? ut : j + ut);
        }
        return j;
      }
      function p_(V, Y) {
        for (var j = -1, Le = Array(V); ++j < V; )
          Le[j] = Y(j);
        return Le;
      }
      function hm(V, Y) {
        return Rt(Y, function(j) {
          return [j, V[j]];
        });
      }
      function sh(V) {
        return V && V.slice(0, uh(V) + 1).replace(rn, "");
      }
      function Bn(V) {
        return function(Y) {
          return V(Y);
        };
      }
      function T_(V, Y) {
        return Rt(Y, function(j) {
          return V[j];
        });
      }
      function qi(V, Y) {
        return V.has(Y);
      }
      function ih(V, Y) {
        for (var j = -1, Le = V.length; ++j < Le && Js(Y, V[j], 0) > -1; )
          ;
        return j;
      }
      function lh(V, Y) {
        for (var j = V.length; j-- && Js(Y, V[j], 0) > -1; )
          ;
        return j;
      }
      function Am(V, Y) {
        for (var j = V.length, Le = 0; j--; )
          V[j] === Y && ++Le;
        return Le;
      }
      var Em = A_(QL), pm = A_(em);
      function Tm(V) {
        return "\\" + nm[V];
      }
      function Sm(V, Y) {
        return V == null ? n : V[Y];
      }
      function Qs(V) {
        return YL.test(V);
      }
      function Lm(V) {
        return XL.test(V);
      }
      function mm(V) {
        for (var Y, j = []; !(Y = V.next()).done; )
          j.push(Y.value);
        return j;
      }
      function S_(V) {
        var Y = -1, j = Array(V.size);
        return V.forEach(function(Le, He) {
          j[++Y] = [He, Le];
        }), j;
      }
      function oh(V, Y) {
        return function(j) {
          return V(Y(j));
        };
      }
      function ya(V, Y) {
        for (var j = -1, Le = V.length, He = 0, ut = []; ++j < Le; ) {
          var kt = V[j];
          (kt === Y || kt === E) && (V[j] = E, ut[He++] = j);
        }
        return ut;
      }
      function Yl(V) {
        var Y = -1, j = Array(V.size);
        return V.forEach(function(Le) {
          j[++Y] = Le;
        }), j;
      }
      function bm(V) {
        var Y = -1, j = Array(V.size);
        return V.forEach(function(Le) {
          j[++Y] = [Le, Le];
        }), j;
      }
      function Im(V, Y, j) {
        for (var Le = j - 1, He = V.length; ++Le < He; )
          if (V[Le] === Y)
            return Le;
        return -1;
      }
      function vm(V, Y, j) {
        for (var Le = j + 1; Le--; )
          if (V[Le] === Y)
            return Le;
        return Le;
      }
      function ei(V) {
        return Qs(V) ? Rm(V) : um(V);
      }
      function Sr(V) {
        return Qs(V) ? gm(V) : _m(V);
      }
      function uh(V) {
        for (var Y = V.length; Y-- && ba.test(V.charAt(Y)); )
          ;
        return Y;
      }
      var ym = A_(tm);
      function Rm(V) {
        for (var Y = o_.lastIndex = 0; o_.test(V); )
          ++Y;
        return Y;
      }
      function gm(V) {
        return V.match(o_) || [];
      }
      function Om(V) {
        return V.match(zL) || [];
      }
      var Cm = function V(Y) {
        Y = Y == null ? Jt : ti.defaults(Jt.Object(), Y, ti.pick(Jt, ZL));
        var j = Y.Array, Le = Y.Date, He = Y.Error, ut = Y.Function, kt = Y.Math, Tt = Y.Object, L_ = Y.RegExp, Dm = Y.String, nr = Y.TypeError, Xl = j.prototype, Nm = ut.prototype, ni = Tt.prototype, Zl = Y["__core-js_shared__"], Jl = Nm.toString, ft = ni.hasOwnProperty, Bm = 0, _h = function() {
          var a = /[^.]+$/.exec(Zl && Zl.keys && Zl.keys.IE_PROTO || "");
          return a ? "Symbol(src)_1." + a : "";
        }(), Ql = ni.toString, wm = Jl.call(Tt), Pm = Jt._, xm = L_(
          "^" + Jl.call(ft).replace(Pr, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
        ), eo = Kf ? Y.Buffer : n, Ra = Y.Symbol, to = Y.Uint8Array, dh = eo ? eo.allocUnsafe : n, no = oh(Tt.getPrototypeOf, Tt), ch = Tt.create, fh = ni.propertyIsEnumerable, ro = Xl.splice, hh = Ra ? Ra.isConcatSpreadable : n, $i = Ra ? Ra.iterator : n, vs = Ra ? Ra.toStringTag : n, ao = function() {
          try {
            var a = Cs(Tt, "defineProperty");
            return a({}, "", {}), a;
          } catch {
          }
        }(), Mm = Y.clearTimeout !== Jt.clearTimeout && Y.clearTimeout, Fm = Le && Le.now !== Jt.Date.now && Le.now, qm = Y.setTimeout !== Jt.setTimeout && Y.setTimeout, so = kt.ceil, io = kt.floor, m_ = Tt.getOwnPropertySymbols, $m = eo ? eo.isBuffer : n, Ah = Y.isFinite, Um = Xl.join, km = oh(Tt.keys, Tt), Ht = kt.max, sn = kt.min, Hm = Le.now, Vm = Y.parseInt, Eh = kt.random, Wm = Xl.reverse, b_ = Cs(Y, "DataView"), Ui = Cs(Y, "Map"), I_ = Cs(Y, "Promise"), ri = Cs(Y, "Set"), ki = Cs(Y, "WeakMap"), Hi = Cs(Tt, "create"), lo = ki && new ki(), ai = {}, Gm = Ds(b_), jm = Ds(Ui), Km = Ds(I_), zm = Ds(ri), Ym = Ds(ki), oo = Ra ? Ra.prototype : n, Vi = oo ? oo.valueOf : n, ph = oo ? oo.toString : n;
        function C(a) {
          if (Pt(a) && !Ve(a) && !(a instanceof tt)) {
            if (a instanceof rr)
              return a;
            if (ft.call(a, "__wrapped__"))
              return TA(a);
          }
          return new rr(a);
        }
        var si = /* @__PURE__ */ function() {
          function a() {
          }
          return function(l) {
            if (!Ct(l))
              return {};
            if (ch)
              return ch(l);
            a.prototype = l;
            var h = new a();
            return a.prototype = n, h;
          };
        }();
        function uo() {
        }
        function rr(a, l) {
          this.__wrapped__ = a, this.__actions__ = [], this.__chain__ = !!l, this.__index__ = 0, this.__values__ = n;
        }
        C.templateSettings = {
          /**
           * Used to detect `data` property values to be HTML-escaped.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          escape: yt,
          /**
           * Used to detect code to be evaluated.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          evaluate: Jn,
          /**
           * Used to detect `data` property values to inject.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          interpolate: Yr,
          /**
           * Used to reference the data object in the template text.
           *
           * @memberOf _.templateSettings
           * @type {string}
           */
          variable: "",
          /**
           * Used to import variables into the compiled template.
           *
           * @memberOf _.templateSettings
           * @type {Object}
           */
          imports: {
            /**
             * A reference to the `lodash` function.
             *
             * @memberOf _.templateSettings.imports
             * @type {Function}
             */
            _: C
          }
        }, C.prototype = uo.prototype, C.prototype.constructor = C, rr.prototype = si(uo.prototype), rr.prototype.constructor = rr;
        function tt(a) {
          this.__wrapped__ = a, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = _e, this.__views__ = [];
        }
        function Xm() {
          var a = new tt(this.__wrapped__);
          return a.__actions__ = bn(this.__actions__), a.__dir__ = this.__dir__, a.__filtered__ = this.__filtered__, a.__iteratees__ = bn(this.__iteratees__), a.__takeCount__ = this.__takeCount__, a.__views__ = bn(this.__views__), a;
        }
        function Zm() {
          if (this.__filtered__) {
            var a = new tt(this);
            a.__dir__ = -1, a.__filtered__ = !0;
          } else
            a = this.clone(), a.__dir__ *= -1;
          return a;
        }
        function Jm() {
          var a = this.__wrapped__.value(), l = this.__dir__, h = Ve(a), L = l < 0, y = h ? a.length : 0, N = _I(0, y, this.__views__), x = N.start, $ = N.end, W = $ - x, Q = L ? $ : x - 1, ee = this.__iteratees__, ne = ee.length, fe = 0, ye = sn(W, this.__takeCount__);
          if (!h || !L && y == W && ye == W)
            return kh(a, this.__actions__);
          var Me = [];
          e:
            for (; W-- && fe < ye; ) {
              Q += l;
              for (var ze = -1, Fe = a[Q]; ++ze < ne; ) {
                var Xe = ee[ze], nt = Xe.iteratee, xn = Xe.type, hn = nt(Fe);
                if (xn == ie)
                  Fe = hn;
                else if (!hn) {
                  if (xn == re)
                    continue e;
                  break e;
                }
              }
              Me[fe++] = Fe;
            }
          return Me;
        }
        tt.prototype = si(uo.prototype), tt.prototype.constructor = tt;
        function ys(a) {
          var l = -1, h = a == null ? 0 : a.length;
          for (this.clear(); ++l < h; ) {
            var L = a[l];
            this.set(L[0], L[1]);
          }
        }
        function Qm() {
          this.__data__ = Hi ? Hi(null) : {}, this.size = 0;
        }
        function eb(a) {
          var l = this.has(a) && delete this.__data__[a];
          return this.size -= l ? 1 : 0, l;
        }
        function tb(a) {
          var l = this.__data__;
          if (Hi) {
            var h = l[a];
            return h === f ? n : h;
          }
          return ft.call(l, a) ? l[a] : n;
        }
        function nb(a) {
          var l = this.__data__;
          return Hi ? l[a] !== n : ft.call(l, a);
        }
        function rb(a, l) {
          var h = this.__data__;
          return this.size += this.has(a) ? 0 : 1, h[a] = Hi && l === n ? f : l, this;
        }
        ys.prototype.clear = Qm, ys.prototype.delete = eb, ys.prototype.get = tb, ys.prototype.has = nb, ys.prototype.set = rb;
        function Zr(a) {
          var l = -1, h = a == null ? 0 : a.length;
          for (this.clear(); ++l < h; ) {
            var L = a[l];
            this.set(L[0], L[1]);
          }
        }
        function ab() {
          this.__data__ = [], this.size = 0;
        }
        function sb(a) {
          var l = this.__data__, h = _o(l, a);
          if (h < 0)
            return !1;
          var L = l.length - 1;
          return h == L ? l.pop() : ro.call(l, h, 1), --this.size, !0;
        }
        function ib(a) {
          var l = this.__data__, h = _o(l, a);
          return h < 0 ? n : l[h][1];
        }
        function lb(a) {
          return _o(this.__data__, a) > -1;
        }
        function ob(a, l) {
          var h = this.__data__, L = _o(h, a);
          return L < 0 ? (++this.size, h.push([a, l])) : h[L][1] = l, this;
        }
        Zr.prototype.clear = ab, Zr.prototype.delete = sb, Zr.prototype.get = ib, Zr.prototype.has = lb, Zr.prototype.set = ob;
        function Jr(a) {
          var l = -1, h = a == null ? 0 : a.length;
          for (this.clear(); ++l < h; ) {
            var L = a[l];
            this.set(L[0], L[1]);
          }
        }
        function ub() {
          this.size = 0, this.__data__ = {
            hash: new ys(),
            map: new (Ui || Zr)(),
            string: new ys()
          };
        }
        function _b(a) {
          var l = Io(this, a).delete(a);
          return this.size -= l ? 1 : 0, l;
        }
        function db(a) {
          return Io(this, a).get(a);
        }
        function cb(a) {
          return Io(this, a).has(a);
        }
        function fb(a, l) {
          var h = Io(this, a), L = h.size;
          return h.set(a, l), this.size += h.size == L ? 0 : 1, this;
        }
        Jr.prototype.clear = ub, Jr.prototype.delete = _b, Jr.prototype.get = db, Jr.prototype.has = cb, Jr.prototype.set = fb;
        function Rs(a) {
          var l = -1, h = a == null ? 0 : a.length;
          for (this.__data__ = new Jr(); ++l < h; )
            this.add(a[l]);
        }
        function hb(a) {
          return this.__data__.set(a, f), this;
        }
        function Ab(a) {
          return this.__data__.has(a);
        }
        Rs.prototype.add = Rs.prototype.push = hb, Rs.prototype.has = Ab;
        function Lr(a) {
          var l = this.__data__ = new Zr(a);
          this.size = l.size;
        }
        function Eb() {
          this.__data__ = new Zr(), this.size = 0;
        }
        function pb(a) {
          var l = this.__data__, h = l.delete(a);
          return this.size = l.size, h;
        }
        function Tb(a) {
          return this.__data__.get(a);
        }
        function Sb(a) {
          return this.__data__.has(a);
        }
        function Lb(a, l) {
          var h = this.__data__;
          if (h instanceof Zr) {
            var L = h.__data__;
            if (!Ui || L.length < s - 1)
              return L.push([a, l]), this.size = ++h.size, this;
            h = this.__data__ = new Jr(L);
          }
          return h.set(a, l), this.size = h.size, this;
        }
        Lr.prototype.clear = Eb, Lr.prototype.delete = pb, Lr.prototype.get = Tb, Lr.prototype.has = Sb, Lr.prototype.set = Lb;
        function Th(a, l) {
          var h = Ve(a), L = !h && Ns(a), y = !h && !L && Na(a), N = !h && !L && !y && ui(a), x = h || L || y || N, $ = x ? p_(a.length, Dm) : [], W = $.length;
          for (var Q in a)
            (l || ft.call(a, Q)) && !(x && // Safari 9 has enumerable `arguments.length` in strict mode.
            (Q == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
            y && (Q == "offset" || Q == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
            N && (Q == "buffer" || Q == "byteLength" || Q == "byteOffset") || // Skip index properties.
            na(Q, W))) && $.push(Q);
          return $;
        }
        function Sh(a) {
          var l = a.length;
          return l ? a[P_(0, l - 1)] : n;
        }
        function mb(a, l) {
          return vo(bn(a), gs(l, 0, a.length));
        }
        function bb(a) {
          return vo(bn(a));
        }
        function v_(a, l, h) {
          (h !== n && !mr(a[l], h) || h === n && !(l in a)) && Qr(a, l, h);
        }
        function Wi(a, l, h) {
          var L = a[l];
          (!(ft.call(a, l) && mr(L, h)) || h === n && !(l in a)) && Qr(a, l, h);
        }
        function _o(a, l) {
          for (var h = a.length; h--; )
            if (mr(a[h][0], l))
              return h;
          return -1;
        }
        function Ib(a, l, h, L) {
          return ga(a, function(y, N, x) {
            l(L, y, h(y), x);
          }), L;
        }
        function Lh(a, l) {
          return a && Mr(l, jt(l), a);
        }
        function vb(a, l) {
          return a && Mr(l, vn(l), a);
        }
        function Qr(a, l, h) {
          l == "__proto__" && ao ? ao(a, l, {
            configurable: !0,
            enumerable: !0,
            value: h,
            writable: !0
          }) : a[l] = h;
        }
        function y_(a, l) {
          for (var h = -1, L = l.length, y = j(L), N = a == null; ++h < L; )
            y[h] = N ? n : sd(a, l[h]);
          return y;
        }
        function gs(a, l, h) {
          return a === a && (h !== n && (a = a <= h ? a : h), l !== n && (a = a >= l ? a : l)), a;
        }
        function ar(a, l, h, L, y, N) {
          var x, $ = l & p, W = l & T, Q = l & S;
          if (h && (x = y ? h(a, L, y, N) : h(a)), x !== n)
            return x;
          if (!Ct(a))
            return a;
          var ee = Ve(a);
          if (ee) {
            if (x = cI(a), !$)
              return bn(a, x);
          } else {
            var ne = ln(a), fe = ne == ke || ne == Qe;
            if (Na(a))
              return Wh(a, $);
            if (ne == Ke || ne == Re || fe && !y) {
              if (x = W || fe ? {} : uA(a), !$)
                return W ? tI(a, vb(x, a)) : eI(a, Lh(x, a));
            } else {
              if (!St[ne])
                return y ? a : {};
              x = fI(a, ne, $);
            }
          }
          N || (N = new Lr());
          var ye = N.get(a);
          if (ye)
            return ye;
          N.set(a, x), qA(a) ? a.forEach(function(Fe) {
            x.add(ar(Fe, l, h, Fe, a, N));
          }) : MA(a) && a.forEach(function(Fe, Xe) {
            x.set(Xe, ar(Fe, l, h, Xe, a, N));
          });
          var Me = Q ? W ? G_ : W_ : W ? vn : jt, ze = ee ? n : Me(a);
          return tr(ze || a, function(Fe, Xe) {
            ze && (Xe = Fe, Fe = a[Xe]), Wi(x, Xe, ar(Fe, l, h, Xe, a, N));
          }), x;
        }
        function yb(a) {
          var l = jt(a);
          return function(h) {
            return mh(h, a, l);
          };
        }
        function mh(a, l, h) {
          var L = h.length;
          if (a == null)
            return !L;
          for (a = Tt(a); L--; ) {
            var y = h[L], N = l[y], x = a[y];
            if (x === n && !(y in a) || !N(x))
              return !1;
          }
          return !0;
        }
        function bh(a, l, h) {
          if (typeof a != "function")
            throw new nr(o);
          return Zi(function() {
            a.apply(n, h);
          }, l);
        }
        function Gi(a, l, h, L) {
          var y = -1, N = Kl, x = !0, $ = a.length, W = [], Q = l.length;
          if (!$)
            return W;
          h && (l = Rt(l, Bn(h))), L ? (N = d_, x = !1) : l.length >= s && (N = qi, x = !1, l = new Rs(l));
          e:
            for (; ++y < $; ) {
              var ee = a[y], ne = h == null ? ee : h(ee);
              if (ee = L || ee !== 0 ? ee : 0, x && ne === ne) {
                for (var fe = Q; fe--; )
                  if (l[fe] === ne)
                    continue e;
                W.push(ee);
              } else N(l, ne, L) || W.push(ee);
            }
          return W;
        }
        var ga = Yh(xr), Ih = Yh(g_, !0);
        function Rb(a, l) {
          var h = !0;
          return ga(a, function(L, y, N) {
            return h = !!l(L, y, N), h;
          }), h;
        }
        function co(a, l, h) {
          for (var L = -1, y = a.length; ++L < y; ) {
            var N = a[L], x = l(N);
            if (x != null && ($ === n ? x === x && !Pn(x) : h(x, $)))
              var $ = x, W = N;
          }
          return W;
        }
        function gb(a, l, h, L) {
          var y = a.length;
          for (h = Ge(h), h < 0 && (h = -h > y ? 0 : y + h), L = L === n || L > y ? y : Ge(L), L < 0 && (L += y), L = h > L ? 0 : UA(L); h < L; )
            a[h++] = l;
          return a;
        }
        function vh(a, l) {
          var h = [];
          return ga(a, function(L, y, N) {
            l(L, y, N) && h.push(L);
          }), h;
        }
        function Qt(a, l, h, L, y) {
          var N = -1, x = a.length;
          for (h || (h = AI), y || (y = []); ++N < x; ) {
            var $ = a[N];
            l > 0 && h($) ? l > 1 ? Qt($, l - 1, h, L, y) : va(y, $) : L || (y[y.length] = $);
          }
          return y;
        }
        var R_ = Xh(), yh = Xh(!0);
        function xr(a, l) {
          return a && R_(a, l, jt);
        }
        function g_(a, l) {
          return a && yh(a, l, jt);
        }
        function fo(a, l) {
          return Ia(l, function(h) {
            return ra(a[h]);
          });
        }
        function Os(a, l) {
          l = Ca(l, a);
          for (var h = 0, L = l.length; a != null && h < L; )
            a = a[Fr(l[h++])];
          return h && h == L ? a : n;
        }
        function Rh(a, l, h) {
          var L = l(a);
          return Ve(a) ? L : va(L, h(a));
        }
        function cn(a) {
          return a == null ? a === n ? hr : it : vs && vs in Tt(a) ? uI(a) : bI(a);
        }
        function O_(a, l) {
          return a > l;
        }
        function Ob(a, l) {
          return a != null && ft.call(a, l);
        }
        function Cb(a, l) {
          return a != null && l in Tt(a);
        }
        function Db(a, l, h) {
          return a >= sn(l, h) && a < Ht(l, h);
        }
        function C_(a, l, h) {
          for (var L = h ? d_ : Kl, y = a[0].length, N = a.length, x = N, $ = j(N), W = 1 / 0, Q = []; x--; ) {
            var ee = a[x];
            x && l && (ee = Rt(ee, Bn(l))), W = sn(ee.length, W), $[x] = !h && (l || y >= 120 && ee.length >= 120) ? new Rs(x && ee) : n;
          }
          ee = a[0];
          var ne = -1, fe = $[0];
          e:
            for (; ++ne < y && Q.length < W; ) {
              var ye = ee[ne], Me = l ? l(ye) : ye;
              if (ye = h || ye !== 0 ? ye : 0, !(fe ? qi(fe, Me) : L(Q, Me, h))) {
                for (x = N; --x; ) {
                  var ze = $[x];
                  if (!(ze ? qi(ze, Me) : L(a[x], Me, h)))
                    continue e;
                }
                fe && fe.push(Me), Q.push(ye);
              }
            }
          return Q;
        }
        function Nb(a, l, h, L) {
          return xr(a, function(y, N, x) {
            l(L, h(y), N, x);
          }), L;
        }
        function ji(a, l, h) {
          l = Ca(l, a), a = fA(a, l);
          var L = a == null ? a : a[Fr(ir(l))];
          return L == null ? n : Nn(L, a, h);
        }
        function gh(a) {
          return Pt(a) && cn(a) == Re;
        }
        function Bb(a) {
          return Pt(a) && cn(a) == zn;
        }
        function wb(a) {
          return Pt(a) && cn(a) == ae;
        }
        function Ki(a, l, h, L, y) {
          return a === l ? !0 : a == null || l == null || !Pt(a) && !Pt(l) ? a !== a && l !== l : Pb(a, l, h, L, Ki, y);
        }
        function Pb(a, l, h, L, y, N) {
          var x = Ve(a), $ = Ve(l), W = x ? J : ln(a), Q = $ ? J : ln(l);
          W = W == Re ? Ke : W, Q = Q == Re ? Ke : Q;
          var ee = W == Ke, ne = Q == Ke, fe = W == Q;
          if (fe && Na(a)) {
            if (!Na(l))
              return !1;
            x = !0, ee = !1;
          }
          if (fe && !ee)
            return N || (N = new Lr()), x || ui(a) ? iA(a, l, h, L, y, N) : lI(a, l, W, h, L, y, N);
          if (!(h & m)) {
            var ye = ee && ft.call(a, "__wrapped__"), Me = ne && ft.call(l, "__wrapped__");
            if (ye || Me) {
              var ze = ye ? a.value() : a, Fe = Me ? l.value() : l;
              return N || (N = new Lr()), y(ze, Fe, h, L, N);
            }
          }
          return fe ? (N || (N = new Lr()), oI(a, l, h, L, y, N)) : !1;
        }
        function xb(a) {
          return Pt(a) && ln(a) == Ue;
        }
        function D_(a, l, h, L) {
          var y = h.length, N = y, x = !L;
          if (a == null)
            return !N;
          for (a = Tt(a); y--; ) {
            var $ = h[y];
            if (x && $[2] ? $[1] !== a[$[0]] : !($[0] in a))
              return !1;
          }
          for (; ++y < N; ) {
            $ = h[y];
            var W = $[0], Q = a[W], ee = $[1];
            if (x && $[2]) {
              if (Q === n && !(W in a))
                return !1;
            } else {
              var ne = new Lr();
              if (L)
                var fe = L(Q, ee, W, a, l, ne);
              if (!(fe === n ? Ki(ee, Q, m | b, L, ne) : fe))
                return !1;
            }
          }
          return !0;
        }
        function Oh(a) {
          if (!Ct(a) || pI(a))
            return !1;
          var l = ra(a) ? xm : De;
          return l.test(Ds(a));
        }
        function Mb(a) {
          return Pt(a) && cn(a) == ht;
        }
        function Fb(a) {
          return Pt(a) && ln(a) == At;
        }
        function qb(a) {
          return Pt(a) && Do(a.length) && !!bt[cn(a)];
        }
        function Ch(a) {
          return typeof a == "function" ? a : a == null ? yn : typeof a == "object" ? Ve(a) ? Bh(a[0], a[1]) : Nh(a) : ZA(a);
        }
        function N_(a) {
          if (!Xi(a))
            return km(a);
          var l = [];
          for (var h in Tt(a))
            ft.call(a, h) && h != "constructor" && l.push(h);
          return l;
        }
        function $b(a) {
          if (!Ct(a))
            return mI(a);
          var l = Xi(a), h = [];
          for (var L in a)
            L == "constructor" && (l || !ft.call(a, L)) || h.push(L);
          return h;
        }
        function B_(a, l) {
          return a < l;
        }
        function Dh(a, l) {
          var h = -1, L = In(a) ? j(a.length) : [];
          return ga(a, function(y, N, x) {
            L[++h] = l(y, N, x);
          }), L;
        }
        function Nh(a) {
          var l = K_(a);
          return l.length == 1 && l[0][2] ? dA(l[0][0], l[0][1]) : function(h) {
            return h === a || D_(h, a, l);
          };
        }
        function Bh(a, l) {
          return Y_(a) && _A(l) ? dA(Fr(a), l) : function(h) {
            var L = sd(h, a);
            return L === n && L === l ? id(h, a) : Ki(l, L, m | b);
          };
        }
        function ho(a, l, h, L, y) {
          a !== l && R_(l, function(N, x) {
            if (y || (y = new Lr()), Ct(N))
              Ub(a, l, x, h, ho, L, y);
            else {
              var $ = L ? L(Z_(a, x), N, x + "", a, l, y) : n;
              $ === n && ($ = N), v_(a, x, $);
            }
          }, vn);
        }
        function Ub(a, l, h, L, y, N, x) {
          var $ = Z_(a, h), W = Z_(l, h), Q = x.get(W);
          if (Q) {
            v_(a, h, Q);
            return;
          }
          var ee = N ? N($, W, h + "", a, l, x) : n, ne = ee === n;
          if (ne) {
            var fe = Ve(W), ye = !fe && Na(W), Me = !fe && !ye && ui(W);
            ee = W, fe || ye || Me ? Ve($) ? ee = $ : Ft($) ? ee = bn($) : ye ? (ne = !1, ee = Wh(W, !0)) : Me ? (ne = !1, ee = Gh(W, !0)) : ee = [] : Ji(W) || Ns(W) ? (ee = $, Ns($) ? ee = kA($) : (!Ct($) || ra($)) && (ee = uA(W))) : ne = !1;
          }
          ne && (x.set(W, ee), y(ee, W, L, N, x), x.delete(W)), v_(a, h, ee);
        }
        function wh(a, l) {
          var h = a.length;
          if (h)
            return l += l < 0 ? h : 0, na(l, h) ? a[l] : n;
        }
        function Ph(a, l, h) {
          l.length ? l = Rt(l, function(N) {
            return Ve(N) ? function(x) {
              return Os(x, N.length === 1 ? N[0] : N);
            } : N;
          }) : l = [yn];
          var L = -1;
          l = Rt(l, Bn(xe()));
          var y = Dh(a, function(N, x, $) {
            var W = Rt(l, function(Q) {
              return Q(N);
            });
            return { criteria: W, index: ++L, value: N };
          });
          return fm(y, function(N, x) {
            return Qb(N, x, h);
          });
        }
        function kb(a, l) {
          return xh(a, l, function(h, L) {
            return id(a, L);
          });
        }
        function xh(a, l, h) {
          for (var L = -1, y = l.length, N = {}; ++L < y; ) {
            var x = l[L], $ = Os(a, x);
            h($, x) && zi(N, Ca(x, a), $);
          }
          return N;
        }
        function Hb(a) {
          return function(l) {
            return Os(l, a);
          };
        }
        function w_(a, l, h, L) {
          var y = L ? cm : Js, N = -1, x = l.length, $ = a;
          for (a === l && (l = bn(l)), h && ($ = Rt(a, Bn(h))); ++N < x; )
            for (var W = 0, Q = l[N], ee = h ? h(Q) : Q; (W = y($, ee, W, L)) > -1; )
              $ !== a && ro.call($, W, 1), ro.call(a, W, 1);
          return a;
        }
        function Mh(a, l) {
          for (var h = a ? l.length : 0, L = h - 1; h--; ) {
            var y = l[h];
            if (h == L || y !== N) {
              var N = y;
              na(y) ? ro.call(a, y, 1) : F_(a, y);
            }
          }
          return a;
        }
        function P_(a, l) {
          return a + io(Eh() * (l - a + 1));
        }
        function Vb(a, l, h, L) {
          for (var y = -1, N = Ht(so((l - a) / (h || 1)), 0), x = j(N); N--; )
            x[L ? N : ++y] = a, a += h;
          return x;
        }
        function x_(a, l) {
          var h = "";
          if (!a || l < 1 || l > Te)
            return h;
          do
            l % 2 && (h += a), l = io(l / 2), l && (a += a);
          while (l);
          return h;
        }
        function Ye(a, l) {
          return J_(cA(a, l, yn), a + "");
        }
        function Wb(a) {
          return Sh(_i(a));
        }
        function Gb(a, l) {
          var h = _i(a);
          return vo(h, gs(l, 0, h.length));
        }
        function zi(a, l, h, L) {
          if (!Ct(a))
            return a;
          l = Ca(l, a);
          for (var y = -1, N = l.length, x = N - 1, $ = a; $ != null && ++y < N; ) {
            var W = Fr(l[y]), Q = h;
            if (W === "__proto__" || W === "constructor" || W === "prototype")
              return a;
            if (y != x) {
              var ee = $[W];
              Q = L ? L(ee, W, $) : n, Q === n && (Q = Ct(ee) ? ee : na(l[y + 1]) ? [] : {});
            }
            Wi($, W, Q), $ = $[W];
          }
          return a;
        }
        var Fh = lo ? function(a, l) {
          return lo.set(a, l), a;
        } : yn, jb = ao ? function(a, l) {
          return ao(a, "toString", {
            configurable: !0,
            enumerable: !1,
            value: od(l),
            writable: !0
          });
        } : yn;
        function Kb(a) {
          return vo(_i(a));
        }
        function sr(a, l, h) {
          var L = -1, y = a.length;
          l < 0 && (l = -l > y ? 0 : y + l), h = h > y ? y : h, h < 0 && (h += y), y = l > h ? 0 : h - l >>> 0, l >>>= 0;
          for (var N = j(y); ++L < y; )
            N[L] = a[L + l];
          return N;
        }
        function zb(a, l) {
          var h;
          return ga(a, function(L, y, N) {
            return h = l(L, y, N), !h;
          }), !!h;
        }
        function Ao(a, l, h) {
          var L = 0, y = a == null ? L : a.length;
          if (typeof l == "number" && l === l && y <= be) {
            for (; L < y; ) {
              var N = L + y >>> 1, x = a[N];
              x !== null && !Pn(x) && (h ? x <= l : x < l) ? L = N + 1 : y = N;
            }
            return y;
          }
          return M_(a, l, yn, h);
        }
        function M_(a, l, h, L) {
          var y = 0, N = a == null ? 0 : a.length;
          if (N === 0)
            return 0;
          l = h(l);
          for (var x = l !== l, $ = l === null, W = Pn(l), Q = l === n; y < N; ) {
            var ee = io((y + N) / 2), ne = h(a[ee]), fe = ne !== n, ye = ne === null, Me = ne === ne, ze = Pn(ne);
            if (x)
              var Fe = L || Me;
            else Q ? Fe = Me && (L || fe) : $ ? Fe = Me && fe && (L || !ye) : W ? Fe = Me && fe && !ye && (L || !ze) : ye || ze ? Fe = !1 : Fe = L ? ne <= l : ne < l;
            Fe ? y = ee + 1 : N = ee;
          }
          return sn(N, ve);
        }
        function qh(a, l) {
          for (var h = -1, L = a.length, y = 0, N = []; ++h < L; ) {
            var x = a[h], $ = l ? l(x) : x;
            if (!h || !mr($, W)) {
              var W = $;
              N[y++] = x === 0 ? 0 : x;
            }
          }
          return N;
        }
        function $h(a) {
          return typeof a == "number" ? a : Pn(a) ? Ae : +a;
        }
        function wn(a) {
          if (typeof a == "string")
            return a;
          if (Ve(a))
            return Rt(a, wn) + "";
          if (Pn(a))
            return ph ? ph.call(a) : "";
          var l = a + "";
          return l == "0" && 1 / a == -1 / 0 ? "-0" : l;
        }
        function Oa(a, l, h) {
          var L = -1, y = Kl, N = a.length, x = !0, $ = [], W = $;
          if (h)
            x = !1, y = d_;
          else if (N >= s) {
            var Q = l ? null : sI(a);
            if (Q)
              return Yl(Q);
            x = !1, y = qi, W = new Rs();
          } else
            W = l ? [] : $;
          e:
            for (; ++L < N; ) {
              var ee = a[L], ne = l ? l(ee) : ee;
              if (ee = h || ee !== 0 ? ee : 0, x && ne === ne) {
                for (var fe = W.length; fe--; )
                  if (W[fe] === ne)
                    continue e;
                l && W.push(ne), $.push(ee);
              } else y(W, ne, h) || (W !== $ && W.push(ne), $.push(ee));
            }
          return $;
        }
        function F_(a, l) {
          return l = Ca(l, a), a = fA(a, l), a == null || delete a[Fr(ir(l))];
        }
        function Uh(a, l, h, L) {
          return zi(a, l, h(Os(a, l)), L);
        }
        function Eo(a, l, h, L) {
          for (var y = a.length, N = L ? y : -1; (L ? N-- : ++N < y) && l(a[N], N, a); )
            ;
          return h ? sr(a, L ? 0 : N, L ? N + 1 : y) : sr(a, L ? N + 1 : 0, L ? y : N);
        }
        function kh(a, l) {
          var h = a;
          return h instanceof tt && (h = h.value()), c_(l, function(L, y) {
            return y.func.apply(y.thisArg, va([L], y.args));
          }, h);
        }
        function q_(a, l, h) {
          var L = a.length;
          if (L < 2)
            return L ? Oa(a[0]) : [];
          for (var y = -1, N = j(L); ++y < L; )
            for (var x = a[y], $ = -1; ++$ < L; )
              $ != y && (N[y] = Gi(N[y] || x, a[$], l, h));
          return Oa(Qt(N, 1), l, h);
        }
        function Hh(a, l, h) {
          for (var L = -1, y = a.length, N = l.length, x = {}; ++L < y; ) {
            var $ = L < N ? l[L] : n;
            h(x, a[L], $);
          }
          return x;
        }
        function $_(a) {
          return Ft(a) ? a : [];
        }
        function U_(a) {
          return typeof a == "function" ? a : yn;
        }
        function Ca(a, l) {
          return Ve(a) ? a : Y_(a, l) ? [a] : pA(dt(a));
        }
        var Yb = Ye;
        function Da(a, l, h) {
          var L = a.length;
          return h = h === n ? L : h, !l && h >= L ? a : sr(a, l, h);
        }
        var Vh = Mm || function(a) {
          return Jt.clearTimeout(a);
        };
        function Wh(a, l) {
          if (l)
            return a.slice();
          var h = a.length, L = dh ? dh(h) : new a.constructor(h);
          return a.copy(L), L;
        }
        function k_(a) {
          var l = new a.constructor(a.byteLength);
          return new to(l).set(new to(a)), l;
        }
        function Xb(a, l) {
          var h = l ? k_(a.buffer) : a.buffer;
          return new a.constructor(h, a.byteOffset, a.byteLength);
        }
        function Zb(a) {
          var l = new a.constructor(a.source, xi.exec(a));
          return l.lastIndex = a.lastIndex, l;
        }
        function Jb(a) {
          return Vi ? Tt(Vi.call(a)) : {};
        }
        function Gh(a, l) {
          var h = l ? k_(a.buffer) : a.buffer;
          return new a.constructor(h, a.byteOffset, a.length);
        }
        function jh(a, l) {
          if (a !== l) {
            var h = a !== n, L = a === null, y = a === a, N = Pn(a), x = l !== n, $ = l === null, W = l === l, Q = Pn(l);
            if (!$ && !Q && !N && a > l || N && x && W && !$ && !Q || L && x && W || !h && W || !y)
              return 1;
            if (!L && !N && !Q && a < l || Q && h && y && !L && !N || $ && h && y || !x && y || !W)
              return -1;
          }
          return 0;
        }
        function Qb(a, l, h) {
          for (var L = -1, y = a.criteria, N = l.criteria, x = y.length, $ = h.length; ++L < x; ) {
            var W = jh(y[L], N[L]);
            if (W) {
              if (L >= $)
                return W;
              var Q = h[L];
              return W * (Q == "desc" ? -1 : 1);
            }
          }
          return a.index - l.index;
        }
        function Kh(a, l, h, L) {
          for (var y = -1, N = a.length, x = h.length, $ = -1, W = l.length, Q = Ht(N - x, 0), ee = j(W + Q), ne = !L; ++$ < W; )
            ee[$] = l[$];
          for (; ++y < x; )
            (ne || y < N) && (ee[h[y]] = a[y]);
          for (; Q--; )
            ee[$++] = a[y++];
          return ee;
        }
        function zh(a, l, h, L) {
          for (var y = -1, N = a.length, x = -1, $ = h.length, W = -1, Q = l.length, ee = Ht(N - $, 0), ne = j(ee + Q), fe = !L; ++y < ee; )
            ne[y] = a[y];
          for (var ye = y; ++W < Q; )
            ne[ye + W] = l[W];
          for (; ++x < $; )
            (fe || y < N) && (ne[ye + h[x]] = a[y++]);
          return ne;
        }
        function bn(a, l) {
          var h = -1, L = a.length;
          for (l || (l = j(L)); ++h < L; )
            l[h] = a[h];
          return l;
        }
        function Mr(a, l, h, L) {
          var y = !h;
          h || (h = {});
          for (var N = -1, x = l.length; ++N < x; ) {
            var $ = l[N], W = L ? L(h[$], a[$], $, h, a) : n;
            W === n && (W = a[$]), y ? Qr(h, $, W) : Wi(h, $, W);
          }
          return h;
        }
        function eI(a, l) {
          return Mr(a, z_(a), l);
        }
        function tI(a, l) {
          return Mr(a, lA(a), l);
        }
        function po(a, l) {
          return function(h, L) {
            var y = Ve(h) ? im : Ib, N = l ? l() : {};
            return y(h, a, xe(L, 2), N);
          };
        }
        function ii(a) {
          return Ye(function(l, h) {
            var L = -1, y = h.length, N = y > 1 ? h[y - 1] : n, x = y > 2 ? h[2] : n;
            for (N = a.length > 3 && typeof N == "function" ? (y--, N) : n, x && fn(h[0], h[1], x) && (N = y < 3 ? n : N, y = 1), l = Tt(l); ++L < y; ) {
              var $ = h[L];
              $ && a(l, $, L, N);
            }
            return l;
          });
        }
        function Yh(a, l) {
          return function(h, L) {
            if (h == null)
              return h;
            if (!In(h))
              return a(h, L);
            for (var y = h.length, N = l ? y : -1, x = Tt(h); (l ? N-- : ++N < y) && L(x[N], N, x) !== !1; )
              ;
            return h;
          };
        }
        function Xh(a) {
          return function(l, h, L) {
            for (var y = -1, N = Tt(l), x = L(l), $ = x.length; $--; ) {
              var W = x[a ? $ : ++y];
              if (h(N[W], W, N) === !1)
                break;
            }
            return l;
          };
        }
        function nI(a, l, h) {
          var L = l & I, y = Yi(a);
          function N() {
            var x = this && this !== Jt && this instanceof N ? y : a;
            return x.apply(L ? h : this, arguments);
          }
          return N;
        }
        function Zh(a) {
          return function(l) {
            l = dt(l);
            var h = Qs(l) ? Sr(l) : n, L = h ? h[0] : l.charAt(0), y = h ? Da(h, 1).join("") : l.slice(1);
            return L[a]() + y;
          };
        }
        function li(a) {
          return function(l) {
            return c_(YA(zA(l).replace(jL, "")), a, "");
          };
        }
        function Yi(a) {
          return function() {
            var l = arguments;
            switch (l.length) {
              case 0:
                return new a();
              case 1:
                return new a(l[0]);
              case 2:
                return new a(l[0], l[1]);
              case 3:
                return new a(l[0], l[1], l[2]);
              case 4:
                return new a(l[0], l[1], l[2], l[3]);
              case 5:
                return new a(l[0], l[1], l[2], l[3], l[4]);
              case 6:
                return new a(l[0], l[1], l[2], l[3], l[4], l[5]);
              case 7:
                return new a(l[0], l[1], l[2], l[3], l[4], l[5], l[6]);
            }
            var h = si(a.prototype), L = a.apply(h, l);
            return Ct(L) ? L : h;
          };
        }
        function rI(a, l, h) {
          var L = Yi(a);
          function y() {
            for (var N = arguments.length, x = j(N), $ = N, W = oi(y); $--; )
              x[$] = arguments[$];
            var Q = N < 3 && x[0] !== W && x[N - 1] !== W ? [] : ya(x, W);
            if (N -= Q.length, N < h)
              return nA(
                a,
                l,
                To,
                y.placeholder,
                n,
                x,
                Q,
                n,
                n,
                h - N
              );
            var ee = this && this !== Jt && this instanceof y ? L : a;
            return Nn(ee, this, x);
          }
          return y;
        }
        function Jh(a) {
          return function(l, h, L) {
            var y = Tt(l);
            if (!In(l)) {
              var N = xe(h, 3);
              l = jt(l), h = function($) {
                return N(y[$], $, y);
              };
            }
            var x = a(l, h, L);
            return x > -1 ? y[N ? l[x] : x] : n;
          };
        }
        function Qh(a) {
          return ta(function(l) {
            var h = l.length, L = h, y = rr.prototype.thru;
            for (a && l.reverse(); L--; ) {
              var N = l[L];
              if (typeof N != "function")
                throw new nr(o);
              if (y && !x && bo(N) == "wrapper")
                var x = new rr([], !0);
            }
            for (L = x ? L : h; ++L < h; ) {
              N = l[L];
              var $ = bo(N), W = $ == "wrapper" ? j_(N) : n;
              W && X_(W[0]) && W[1] == (P | R | w | M) && !W[4].length && W[9] == 1 ? x = x[bo(W[0])].apply(x, W[3]) : x = N.length == 1 && X_(N) ? x[$]() : x.thru(N);
            }
            return function() {
              var Q = arguments, ee = Q[0];
              if (x && Q.length == 1 && Ve(ee))
                return x.plant(ee).value();
              for (var ne = 0, fe = h ? l[ne].apply(this, Q) : ee; ++ne < h; )
                fe = l[ne].call(this, fe);
              return fe;
            };
          });
        }
        function To(a, l, h, L, y, N, x, $, W, Q) {
          var ee = l & P, ne = l & I, fe = l & v, ye = l & (R | D), Me = l & O, ze = fe ? n : Yi(a);
          function Fe() {
            for (var Xe = arguments.length, nt = j(Xe), xn = Xe; xn--; )
              nt[xn] = arguments[xn];
            if (ye)
              var hn = oi(Fe), Mn = Am(nt, hn);
            if (L && (nt = Kh(nt, L, y, ye)), N && (nt = zh(nt, N, x, ye)), Xe -= Mn, ye && Xe < Q) {
              var qt = ya(nt, hn);
              return nA(
                a,
                l,
                To,
                Fe.placeholder,
                h,
                nt,
                qt,
                $,
                W,
                Q - Xe
              );
            }
            var br = ne ? h : this, sa = fe ? br[a] : a;
            return Xe = nt.length, $ ? nt = II(nt, $) : Me && Xe > 1 && nt.reverse(), ee && W < Xe && (nt.length = W), this && this !== Jt && this instanceof Fe && (sa = ze || Yi(sa)), sa.apply(br, nt);
          }
          return Fe;
        }
        function eA(a, l) {
          return function(h, L) {
            return Nb(h, a, l(L), {});
          };
        }
        function So(a, l) {
          return function(h, L) {
            var y;
            if (h === n && L === n)
              return l;
            if (h !== n && (y = h), L !== n) {
              if (y === n)
                return L;
              typeof h == "string" || typeof L == "string" ? (h = wn(h), L = wn(L)) : (h = $h(h), L = $h(L)), y = a(h, L);
            }
            return y;
          };
        }
        function H_(a) {
          return ta(function(l) {
            return l = Rt(l, Bn(xe())), Ye(function(h) {
              var L = this;
              return a(l, function(y) {
                return Nn(y, L, h);
              });
            });
          });
        }
        function Lo(a, l) {
          l = l === n ? " " : wn(l);
          var h = l.length;
          if (h < 2)
            return h ? x_(l, a) : l;
          var L = x_(l, so(a / ei(l)));
          return Qs(l) ? Da(Sr(L), 0, a).join("") : L.slice(0, a);
        }
        function aI(a, l, h, L) {
          var y = l & I, N = Yi(a);
          function x() {
            for (var $ = -1, W = arguments.length, Q = -1, ee = L.length, ne = j(ee + W), fe = this && this !== Jt && this instanceof x ? N : a; ++Q < ee; )
              ne[Q] = L[Q];
            for (; W--; )
              ne[Q++] = arguments[++$];
            return Nn(fe, y ? h : this, ne);
          }
          return x;
        }
        function tA(a) {
          return function(l, h, L) {
            return L && typeof L != "number" && fn(l, h, L) && (h = L = n), l = aa(l), h === n ? (h = l, l = 0) : h = aa(h), L = L === n ? l < h ? 1 : -1 : aa(L), Vb(l, h, L, a);
          };
        }
        function mo(a) {
          return function(l, h) {
            return typeof l == "string" && typeof h == "string" || (l = lr(l), h = lr(h)), a(l, h);
          };
        }
        function nA(a, l, h, L, y, N, x, $, W, Q) {
          var ee = l & R, ne = ee ? x : n, fe = ee ? n : x, ye = ee ? N : n, Me = ee ? n : N;
          l |= ee ? w : F, l &= ~(ee ? F : w), l & g || (l &= -4);
          var ze = [
            a,
            l,
            y,
            ye,
            ne,
            Me,
            fe,
            $,
            W,
            Q
          ], Fe = h.apply(n, ze);
          return X_(a) && hA(Fe, ze), Fe.placeholder = L, AA(Fe, a, l);
        }
        function V_(a) {
          var l = kt[a];
          return function(h, L) {
            if (h = lr(h), L = L == null ? 0 : sn(Ge(L), 292), L && Ah(h)) {
              var y = (dt(h) + "e").split("e"), N = l(y[0] + "e" + (+y[1] + L));
              return y = (dt(N) + "e").split("e"), +(y[0] + "e" + (+y[1] - L));
            }
            return l(h);
          };
        }
        var sI = ri && 1 / Yl(new ri([, -0]))[1] == oe ? function(a) {
          return new ri(a);
        } : dd;
        function rA(a) {
          return function(l) {
            var h = ln(l);
            return h == Ue ? S_(l) : h == At ? bm(l) : hm(l, a(l));
          };
        }
        function ea(a, l, h, L, y, N, x, $) {
          var W = l & v;
          if (!W && typeof a != "function")
            throw new nr(o);
          var Q = L ? L.length : 0;
          if (Q || (l &= -97, L = y = n), x = x === n ? x : Ht(Ge(x), 0), $ = $ === n ? $ : Ge($), Q -= y ? y.length : 0, l & F) {
            var ee = L, ne = y;
            L = y = n;
          }
          var fe = W ? n : j_(a), ye = [
            a,
            l,
            h,
            L,
            y,
            ee,
            ne,
            N,
            x,
            $
          ];
          if (fe && LI(ye, fe), a = ye[0], l = ye[1], h = ye[2], L = ye[3], y = ye[4], $ = ye[9] = ye[9] === n ? W ? 0 : a.length : Ht(ye[9] - Q, 0), !$ && l & (R | D) && (l &= -25), !l || l == I)
            var Me = nI(a, l, h);
          else l == R || l == D ? Me = rI(a, l, $) : (l == w || l == (I | w)) && !y.length ? Me = aI(a, l, h, L) : Me = To.apply(n, ye);
          var ze = fe ? Fh : hA;
          return AA(ze(Me, ye), a, l);
        }
        function aA(a, l, h, L) {
          return a === n || mr(a, ni[h]) && !ft.call(L, h) ? l : a;
        }
        function sA(a, l, h, L, y, N) {
          return Ct(a) && Ct(l) && (N.set(l, a), ho(a, l, n, sA, N), N.delete(l)), a;
        }
        function iI(a) {
          return Ji(a) ? n : a;
        }
        function iA(a, l, h, L, y, N) {
          var x = h & m, $ = a.length, W = l.length;
          if ($ != W && !(x && W > $))
            return !1;
          var Q = N.get(a), ee = N.get(l);
          if (Q && ee)
            return Q == l && ee == a;
          var ne = -1, fe = !0, ye = h & b ? new Rs() : n;
          for (N.set(a, l), N.set(l, a); ++ne < $; ) {
            var Me = a[ne], ze = l[ne];
            if (L)
              var Fe = x ? L(ze, Me, ne, l, a, N) : L(Me, ze, ne, a, l, N);
            if (Fe !== n) {
              if (Fe)
                continue;
              fe = !1;
              break;
            }
            if (ye) {
              if (!f_(l, function(Xe, nt) {
                if (!qi(ye, nt) && (Me === Xe || y(Me, Xe, h, L, N)))
                  return ye.push(nt);
              })) {
                fe = !1;
                break;
              }
            } else if (!(Me === ze || y(Me, ze, h, L, N))) {
              fe = !1;
              break;
            }
          }
          return N.delete(a), N.delete(l), fe;
        }
        function lI(a, l, h, L, y, N, x) {
          switch (h) {
            case Cn:
              if (a.byteLength != l.byteLength || a.byteOffset != l.byteOffset)
                return !1;
              a = a.buffer, l = l.buffer;
            case zn:
              return !(a.byteLength != l.byteLength || !N(new to(a), new to(l)));
            case X:
            case ae:
            case $e:
              return mr(+a, +l);
            case Ce:
              return a.name == l.name && a.message == l.message;
            case ht:
            case Mt:
              return a == l + "";
            case Ue:
              var $ = S_;
            case At:
              var W = L & m;
              if ($ || ($ = Yl), a.size != l.size && !W)
                return !1;
              var Q = x.get(a);
              if (Q)
                return Q == l;
              L |= b, x.set(a, l);
              var ee = iA($(a), $(l), L, y, N, x);
              return x.delete(a), ee;
            case tn:
              if (Vi)
                return Vi.call(a) == Vi.call(l);
          }
          return !1;
        }
        function oI(a, l, h, L, y, N) {
          var x = h & m, $ = W_(a), W = $.length, Q = W_(l), ee = Q.length;
          if (W != ee && !x)
            return !1;
          for (var ne = W; ne--; ) {
            var fe = $[ne];
            if (!(x ? fe in l : ft.call(l, fe)))
              return !1;
          }
          var ye = N.get(a), Me = N.get(l);
          if (ye && Me)
            return ye == l && Me == a;
          var ze = !0;
          N.set(a, l), N.set(l, a);
          for (var Fe = x; ++ne < W; ) {
            fe = $[ne];
            var Xe = a[fe], nt = l[fe];
            if (L)
              var xn = x ? L(nt, Xe, fe, l, a, N) : L(Xe, nt, fe, a, l, N);
            if (!(xn === n ? Xe === nt || y(Xe, nt, h, L, N) : xn)) {
              ze = !1;
              break;
            }
            Fe || (Fe = fe == "constructor");
          }
          if (ze && !Fe) {
            var hn = a.constructor, Mn = l.constructor;
            hn != Mn && "constructor" in a && "constructor" in l && !(typeof hn == "function" && hn instanceof hn && typeof Mn == "function" && Mn instanceof Mn) && (ze = !1);
          }
          return N.delete(a), N.delete(l), ze;
        }
        function ta(a) {
          return J_(cA(a, n, mA), a + "");
        }
        function W_(a) {
          return Rh(a, jt, z_);
        }
        function G_(a) {
          return Rh(a, vn, lA);
        }
        var j_ = lo ? function(a) {
          return lo.get(a);
        } : dd;
        function bo(a) {
          for (var l = a.name + "", h = ai[l], L = ft.call(ai, l) ? h.length : 0; L--; ) {
            var y = h[L], N = y.func;
            if (N == null || N == a)
              return y.name;
          }
          return l;
        }
        function oi(a) {
          var l = ft.call(C, "placeholder") ? C : a;
          return l.placeholder;
        }
        function xe() {
          var a = C.iteratee || ud;
          return a = a === ud ? Ch : a, arguments.length ? a(arguments[0], arguments[1]) : a;
        }
        function Io(a, l) {
          var h = a.__data__;
          return EI(l) ? h[typeof l == "string" ? "string" : "hash"] : h.map;
        }
        function K_(a) {
          for (var l = jt(a), h = l.length; h--; ) {
            var L = l[h], y = a[L];
            l[h] = [L, y, _A(y)];
          }
          return l;
        }
        function Cs(a, l) {
          var h = Sm(a, l);
          return Oh(h) ? h : n;
        }
        function uI(a) {
          var l = ft.call(a, vs), h = a[vs];
          try {
            a[vs] = n;
            var L = !0;
          } catch {
          }
          var y = Ql.call(a);
          return L && (l ? a[vs] = h : delete a[vs]), y;
        }
        var z_ = m_ ? function(a) {
          return a == null ? [] : (a = Tt(a), Ia(m_(a), function(l) {
            return fh.call(a, l);
          }));
        } : cd, lA = m_ ? function(a) {
          for (var l = []; a; )
            va(l, z_(a)), a = no(a);
          return l;
        } : cd, ln = cn;
        (b_ && ln(new b_(new ArrayBuffer(1))) != Cn || Ui && ln(new Ui()) != Ue || I_ && ln(I_.resolve()) != lt || ri && ln(new ri()) != At || ki && ln(new ki()) != nn) && (ln = function(a) {
          var l = cn(a), h = l == Ke ? a.constructor : n, L = h ? Ds(h) : "";
          if (L)
            switch (L) {
              case Gm:
                return Cn;
              case jm:
                return Ue;
              case Km:
                return lt;
              case zm:
                return At;
              case Ym:
                return nn;
            }
          return l;
        });
        function _I(a, l, h) {
          for (var L = -1, y = h.length; ++L < y; ) {
            var N = h[L], x = N.size;
            switch (N.type) {
              case "drop":
                a += x;
                break;
              case "dropRight":
                l -= x;
                break;
              case "take":
                l = sn(l, a + x);
                break;
              case "takeRight":
                a = Ht(a, l - x);
                break;
            }
          }
          return { start: a, end: l };
        }
        function dI(a) {
          var l = a.match(Ys);
          return l ? l[1].split(Tr) : [];
        }
        function oA(a, l, h) {
          l = Ca(l, a);
          for (var L = -1, y = l.length, N = !1; ++L < y; ) {
            var x = Fr(l[L]);
            if (!(N = a != null && h(a, x)))
              break;
            a = a[x];
          }
          return N || ++L != y ? N : (y = a == null ? 0 : a.length, !!y && Do(y) && na(x, y) && (Ve(a) || Ns(a)));
        }
        function cI(a) {
          var l = a.length, h = new a.constructor(l);
          return l && typeof a[0] == "string" && ft.call(a, "index") && (h.index = a.index, h.input = a.input), h;
        }
        function uA(a) {
          return typeof a.constructor == "function" && !Xi(a) ? si(no(a)) : {};
        }
        function fI(a, l, h) {
          var L = a.constructor;
          switch (l) {
            case zn:
              return k_(a);
            case X:
            case ae:
              return new L(+a);
            case Cn:
              return Xb(a, h);
            case Nr:
            case Ar:
            case Br:
            case Yn:
            case Xn:
            case Zt:
            case mn:
            case Er:
            case pr:
              return Gh(a, h);
            case Ue:
              return new L();
            case $e:
            case Mt:
              return new L(a);
            case ht:
              return Zb(a);
            case At:
              return new L();
            case tn:
              return Jb(a);
          }
        }
        function hI(a, l) {
          var h = l.length;
          if (!h)
            return a;
          var L = h - 1;
          return l[L] = (h > 1 ? "& " : "") + l[L], l = l.join(h > 2 ? ", " : " "), a.replace(zs, `{
/* [wrapped with ` + l + `] */
`);
        }
        function AI(a) {
          return Ve(a) || Ns(a) || !!(hh && a && a[hh]);
        }
        function na(a, l) {
          var h = typeof a;
          return l = l ?? Te, !!l && (h == "number" || h != "symbol" && ue.test(a)) && a > -1 && a % 1 == 0 && a < l;
        }
        function fn(a, l, h) {
          if (!Ct(h))
            return !1;
          var L = typeof l;
          return (L == "number" ? In(h) && na(l, h.length) : L == "string" && l in h) ? mr(h[l], a) : !1;
        }
        function Y_(a, l) {
          if (Ve(a))
            return !1;
          var h = typeof a;
          return h == "number" || h == "symbol" || h == "boolean" || a == null || Pn(a) ? !0 : Xr.test(a) || !La.test(a) || l != null && a in Tt(l);
        }
        function EI(a) {
          var l = typeof a;
          return l == "string" || l == "number" || l == "symbol" || l == "boolean" ? a !== "__proto__" : a === null;
        }
        function X_(a) {
          var l = bo(a), h = C[l];
          if (typeof h != "function" || !(l in tt.prototype))
            return !1;
          if (a === h)
            return !0;
          var L = j_(h);
          return !!L && a === L[0];
        }
        function pI(a) {
          return !!_h && _h in a;
        }
        var TI = Zl ? ra : fd;
        function Xi(a) {
          var l = a && a.constructor, h = typeof l == "function" && l.prototype || ni;
          return a === h;
        }
        function _A(a) {
          return a === a && !Ct(a);
        }
        function dA(a, l) {
          return function(h) {
            return h == null ? !1 : h[a] === l && (l !== n || a in Tt(h));
          };
        }
        function SI(a) {
          var l = Oo(a, function(L) {
            return h.size === A && h.clear(), L;
          }), h = l.cache;
          return l;
        }
        function LI(a, l) {
          var h = a[1], L = l[1], y = h | L, N = y < (I | v | P), x = L == P && h == R || L == P && h == M && a[7].length <= l[8] || L == (P | M) && l[7].length <= l[8] && h == R;
          if (!(N || x))
            return a;
          L & I && (a[2] = l[2], y |= h & I ? 0 : g);
          var $ = l[3];
          if ($) {
            var W = a[3];
            a[3] = W ? Kh(W, $, l[4]) : $, a[4] = W ? ya(a[3], E) : l[4];
          }
          return $ = l[5], $ && (W = a[5], a[5] = W ? zh(W, $, l[6]) : $, a[6] = W ? ya(a[5], E) : l[6]), $ = l[7], $ && (a[7] = $), L & P && (a[8] = a[8] == null ? l[8] : sn(a[8], l[8])), a[9] == null && (a[9] = l[9]), a[0] = l[0], a[1] = y, a;
        }
        function mI(a) {
          var l = [];
          if (a != null)
            for (var h in Tt(a))
              l.push(h);
          return l;
        }
        function bI(a) {
          return Ql.call(a);
        }
        function cA(a, l, h) {
          return l = Ht(l === n ? a.length - 1 : l, 0), function() {
            for (var L = arguments, y = -1, N = Ht(L.length - l, 0), x = j(N); ++y < N; )
              x[y] = L[l + y];
            y = -1;
            for (var $ = j(l + 1); ++y < l; )
              $[y] = L[y];
            return $[l] = h(x), Nn(a, this, $);
          };
        }
        function fA(a, l) {
          return l.length < 2 ? a : Os(a, sr(l, 0, -1));
        }
        function II(a, l) {
          for (var h = a.length, L = sn(l.length, h), y = bn(a); L--; ) {
            var N = l[L];
            a[L] = na(N, h) ? y[N] : n;
          }
          return a;
        }
        function Z_(a, l) {
          if (!(l === "constructor" && typeof a[l] == "function") && l != "__proto__")
            return a[l];
        }
        var hA = EA(Fh), Zi = qm || function(a, l) {
          return Jt.setTimeout(a, l);
        }, J_ = EA(jb);
        function AA(a, l, h) {
          var L = l + "";
          return J_(a, hI(L, vI(dI(L), h)));
        }
        function EA(a) {
          var l = 0, h = 0;
          return function() {
            var L = Hm(), y = te - (L - h);
            if (h = L, y > 0) {
              if (++l >= G)
                return arguments[0];
            } else
              l = 0;
            return a.apply(n, arguments);
          };
        }
        function vo(a, l) {
          var h = -1, L = a.length, y = L - 1;
          for (l = l === n ? L : l; ++h < l; ) {
            var N = P_(h, y), x = a[N];
            a[N] = a[h], a[h] = x;
          }
          return a.length = l, a;
        }
        var pA = SI(function(a) {
          var l = [];
          return a.charCodeAt(0) === 46 && l.push(""), a.replace(ma, function(h, L, y, N) {
            l.push(y ? N.replace(Xs, "$1") : L || h);
          }), l;
        });
        function Fr(a) {
          if (typeof a == "string" || Pn(a))
            return a;
          var l = a + "";
          return l == "0" && 1 / a == -1 / 0 ? "-0" : l;
        }
        function Ds(a) {
          if (a != null) {
            try {
              return Jl.call(a);
            } catch {
            }
            try {
              return a + "";
            } catch {
            }
          }
          return "";
        }
        function vI(a, l) {
          return tr(je, function(h) {
            var L = "_." + h[0];
            l & h[1] && !Kl(a, L) && a.push(L);
          }), a.sort();
        }
        function TA(a) {
          if (a instanceof tt)
            return a.clone();
          var l = new rr(a.__wrapped__, a.__chain__);
          return l.__actions__ = bn(a.__actions__), l.__index__ = a.__index__, l.__values__ = a.__values__, l;
        }
        function yI(a, l, h) {
          (h ? fn(a, l, h) : l === n) ? l = 1 : l = Ht(Ge(l), 0);
          var L = a == null ? 0 : a.length;
          if (!L || l < 1)
            return [];
          for (var y = 0, N = 0, x = j(so(L / l)); y < L; )
            x[N++] = sr(a, y, y += l);
          return x;
        }
        function RI(a) {
          for (var l = -1, h = a == null ? 0 : a.length, L = 0, y = []; ++l < h; ) {
            var N = a[l];
            N && (y[L++] = N);
          }
          return y;
        }
        function gI() {
          var a = arguments.length;
          if (!a)
            return [];
          for (var l = j(a - 1), h = arguments[0], L = a; L--; )
            l[L - 1] = arguments[L];
          return va(Ve(h) ? bn(h) : [h], Qt(l, 1));
        }
        var OI = Ye(function(a, l) {
          return Ft(a) ? Gi(a, Qt(l, 1, Ft, !0)) : [];
        }), CI = Ye(function(a, l) {
          var h = ir(l);
          return Ft(h) && (h = n), Ft(a) ? Gi(a, Qt(l, 1, Ft, !0), xe(h, 2)) : [];
        }), DI = Ye(function(a, l) {
          var h = ir(l);
          return Ft(h) && (h = n), Ft(a) ? Gi(a, Qt(l, 1, Ft, !0), n, h) : [];
        });
        function NI(a, l, h) {
          var L = a == null ? 0 : a.length;
          return L ? (l = h || l === n ? 1 : Ge(l), sr(a, l < 0 ? 0 : l, L)) : [];
        }
        function BI(a, l, h) {
          var L = a == null ? 0 : a.length;
          return L ? (l = h || l === n ? 1 : Ge(l), l = L - l, sr(a, 0, l < 0 ? 0 : l)) : [];
        }
        function wI(a, l) {
          return a && a.length ? Eo(a, xe(l, 3), !0, !0) : [];
        }
        function PI(a, l) {
          return a && a.length ? Eo(a, xe(l, 3), !0) : [];
        }
        function xI(a, l, h, L) {
          var y = a == null ? 0 : a.length;
          return y ? (h && typeof h != "number" && fn(a, l, h) && (h = 0, L = y), gb(a, l, h, L)) : [];
        }
        function SA(a, l, h) {
          var L = a == null ? 0 : a.length;
          if (!L)
            return -1;
          var y = h == null ? 0 : Ge(h);
          return y < 0 && (y = Ht(L + y, 0)), zl(a, xe(l, 3), y);
        }
        function LA(a, l, h) {
          var L = a == null ? 0 : a.length;
          if (!L)
            return -1;
          var y = L - 1;
          return h !== n && (y = Ge(h), y = h < 0 ? Ht(L + y, 0) : sn(y, L - 1)), zl(a, xe(l, 3), y, !0);
        }
        function mA(a) {
          var l = a == null ? 0 : a.length;
          return l ? Qt(a, 1) : [];
        }
        function MI(a) {
          var l = a == null ? 0 : a.length;
          return l ? Qt(a, oe) : [];
        }
        function FI(a, l) {
          var h = a == null ? 0 : a.length;
          return h ? (l = l === n ? 1 : Ge(l), Qt(a, l)) : [];
        }
        function qI(a) {
          for (var l = -1, h = a == null ? 0 : a.length, L = {}; ++l < h; ) {
            var y = a[l];
            L[y[0]] = y[1];
          }
          return L;
        }
        function bA(a) {
          return a && a.length ? a[0] : n;
        }
        function $I(a, l, h) {
          var L = a == null ? 0 : a.length;
          if (!L)
            return -1;
          var y = h == null ? 0 : Ge(h);
          return y < 0 && (y = Ht(L + y, 0)), Js(a, l, y);
        }
        function UI(a) {
          var l = a == null ? 0 : a.length;
          return l ? sr(a, 0, -1) : [];
        }
        var kI = Ye(function(a) {
          var l = Rt(a, $_);
          return l.length && l[0] === a[0] ? C_(l) : [];
        }), HI = Ye(function(a) {
          var l = ir(a), h = Rt(a, $_);
          return l === ir(h) ? l = n : h.pop(), h.length && h[0] === a[0] ? C_(h, xe(l, 2)) : [];
        }), VI = Ye(function(a) {
          var l = ir(a), h = Rt(a, $_);
          return l = typeof l == "function" ? l : n, l && h.pop(), h.length && h[0] === a[0] ? C_(h, n, l) : [];
        });
        function WI(a, l) {
          return a == null ? "" : Um.call(a, l);
        }
        function ir(a) {
          var l = a == null ? 0 : a.length;
          return l ? a[l - 1] : n;
        }
        function GI(a, l, h) {
          var L = a == null ? 0 : a.length;
          if (!L)
            return -1;
          var y = L;
          return h !== n && (y = Ge(h), y = y < 0 ? Ht(L + y, 0) : sn(y, L - 1)), l === l ? vm(a, l, y) : zl(a, nh, y, !0);
        }
        function jI(a, l) {
          return a && a.length ? wh(a, Ge(l)) : n;
        }
        var KI = Ye(IA);
        function IA(a, l) {
          return a && a.length && l && l.length ? w_(a, l) : a;
        }
        function zI(a, l, h) {
          return a && a.length && l && l.length ? w_(a, l, xe(h, 2)) : a;
        }
        function YI(a, l, h) {
          return a && a.length && l && l.length ? w_(a, l, n, h) : a;
        }
        var XI = ta(function(a, l) {
          var h = a == null ? 0 : a.length, L = y_(a, l);
          return Mh(a, Rt(l, function(y) {
            return na(y, h) ? +y : y;
          }).sort(jh)), L;
        });
        function ZI(a, l) {
          var h = [];
          if (!(a && a.length))
            return h;
          var L = -1, y = [], N = a.length;
          for (l = xe(l, 3); ++L < N; ) {
            var x = a[L];
            l(x, L, a) && (h.push(x), y.push(L));
          }
          return Mh(a, y), h;
        }
        function Q_(a) {
          return a == null ? a : Wm.call(a);
        }
        function JI(a, l, h) {
          var L = a == null ? 0 : a.length;
          return L ? (h && typeof h != "number" && fn(a, l, h) ? (l = 0, h = L) : (l = l == null ? 0 : Ge(l), h = h === n ? L : Ge(h)), sr(a, l, h)) : [];
        }
        function QI(a, l) {
          return Ao(a, l);
        }
        function ev(a, l, h) {
          return M_(a, l, xe(h, 2));
        }
        function tv(a, l) {
          var h = a == null ? 0 : a.length;
          if (h) {
            var L = Ao(a, l);
            if (L < h && mr(a[L], l))
              return L;
          }
          return -1;
        }
        function nv(a, l) {
          return Ao(a, l, !0);
        }
        function rv(a, l, h) {
          return M_(a, l, xe(h, 2), !0);
        }
        function av(a, l) {
          var h = a == null ? 0 : a.length;
          if (h) {
            var L = Ao(a, l, !0) - 1;
            if (mr(a[L], l))
              return L;
          }
          return -1;
        }
        function sv(a) {
          return a && a.length ? qh(a) : [];
        }
        function iv(a, l) {
          return a && a.length ? qh(a, xe(l, 2)) : [];
        }
        function lv(a) {
          var l = a == null ? 0 : a.length;
          return l ? sr(a, 1, l) : [];
        }
        function ov(a, l, h) {
          return a && a.length ? (l = h || l === n ? 1 : Ge(l), sr(a, 0, l < 0 ? 0 : l)) : [];
        }
        function uv(a, l, h) {
          var L = a == null ? 0 : a.length;
          return L ? (l = h || l === n ? 1 : Ge(l), l = L - l, sr(a, l < 0 ? 0 : l, L)) : [];
        }
        function _v(a, l) {
          return a && a.length ? Eo(a, xe(l, 3), !1, !0) : [];
        }
        function dv(a, l) {
          return a && a.length ? Eo(a, xe(l, 3)) : [];
        }
        var cv = Ye(function(a) {
          return Oa(Qt(a, 1, Ft, !0));
        }), fv = Ye(function(a) {
          var l = ir(a);
          return Ft(l) && (l = n), Oa(Qt(a, 1, Ft, !0), xe(l, 2));
        }), hv = Ye(function(a) {
          var l = ir(a);
          return l = typeof l == "function" ? l : n, Oa(Qt(a, 1, Ft, !0), n, l);
        });
        function Av(a) {
          return a && a.length ? Oa(a) : [];
        }
        function Ev(a, l) {
          return a && a.length ? Oa(a, xe(l, 2)) : [];
        }
        function pv(a, l) {
          return l = typeof l == "function" ? l : n, a && a.length ? Oa(a, n, l) : [];
        }
        function ed(a) {
          if (!(a && a.length))
            return [];
          var l = 0;
          return a = Ia(a, function(h) {
            if (Ft(h))
              return l = Ht(h.length, l), !0;
          }), p_(l, function(h) {
            return Rt(a, h_(h));
          });
        }
        function vA(a, l) {
          if (!(a && a.length))
            return [];
          var h = ed(a);
          return l == null ? h : Rt(h, function(L) {
            return Nn(l, n, L);
          });
        }
        var Tv = Ye(function(a, l) {
          return Ft(a) ? Gi(a, l) : [];
        }), Sv = Ye(function(a) {
          return q_(Ia(a, Ft));
        }), Lv = Ye(function(a) {
          var l = ir(a);
          return Ft(l) && (l = n), q_(Ia(a, Ft), xe(l, 2));
        }), mv = Ye(function(a) {
          var l = ir(a);
          return l = typeof l == "function" ? l : n, q_(Ia(a, Ft), n, l);
        }), bv = Ye(ed);
        function Iv(a, l) {
          return Hh(a || [], l || [], Wi);
        }
        function vv(a, l) {
          return Hh(a || [], l || [], zi);
        }
        var yv = Ye(function(a) {
          var l = a.length, h = l > 1 ? a[l - 1] : n;
          return h = typeof h == "function" ? (a.pop(), h) : n, vA(a, h);
        });
        function yA(a) {
          var l = C(a);
          return l.__chain__ = !0, l;
        }
        function Rv(a, l) {
          return l(a), a;
        }
        function yo(a, l) {
          return l(a);
        }
        var gv = ta(function(a) {
          var l = a.length, h = l ? a[0] : 0, L = this.__wrapped__, y = function(N) {
            return y_(N, a);
          };
          return l > 1 || this.__actions__.length || !(L instanceof tt) || !na(h) ? this.thru(y) : (L = L.slice(h, +h + (l ? 1 : 0)), L.__actions__.push({
            func: yo,
            args: [y],
            thisArg: n
          }), new rr(L, this.__chain__).thru(function(N) {
            return l && !N.length && N.push(n), N;
          }));
        });
        function Ov() {
          return yA(this);
        }
        function Cv() {
          return new rr(this.value(), this.__chain__);
        }
        function Dv() {
          this.__values__ === n && (this.__values__ = $A(this.value()));
          var a = this.__index__ >= this.__values__.length, l = a ? n : this.__values__[this.__index__++];
          return { done: a, value: l };
        }
        function Nv() {
          return this;
        }
        function Bv(a) {
          for (var l, h = this; h instanceof uo; ) {
            var L = TA(h);
            L.__index__ = 0, L.__values__ = n, l ? y.__wrapped__ = L : l = L;
            var y = L;
            h = h.__wrapped__;
          }
          return y.__wrapped__ = a, l;
        }
        function wv() {
          var a = this.__wrapped__;
          if (a instanceof tt) {
            var l = a;
            return this.__actions__.length && (l = new tt(this)), l = l.reverse(), l.__actions__.push({
              func: yo,
              args: [Q_],
              thisArg: n
            }), new rr(l, this.__chain__);
          }
          return this.thru(Q_);
        }
        function Pv() {
          return kh(this.__wrapped__, this.__actions__);
        }
        var xv = po(function(a, l, h) {
          ft.call(a, h) ? ++a[h] : Qr(a, h, 1);
        });
        function Mv(a, l, h) {
          var L = Ve(a) ? eh : Rb;
          return h && fn(a, l, h) && (l = n), L(a, xe(l, 3));
        }
        function Fv(a, l) {
          var h = Ve(a) ? Ia : vh;
          return h(a, xe(l, 3));
        }
        var qv = Jh(SA), $v = Jh(LA);
        function Uv(a, l) {
          return Qt(Ro(a, l), 1);
        }
        function kv(a, l) {
          return Qt(Ro(a, l), oe);
        }
        function Hv(a, l, h) {
          return h = h === n ? 1 : Ge(h), Qt(Ro(a, l), h);
        }
        function RA(a, l) {
          var h = Ve(a) ? tr : ga;
          return h(a, xe(l, 3));
        }
        function gA(a, l) {
          var h = Ve(a) ? lm : Ih;
          return h(a, xe(l, 3));
        }
        var Vv = po(function(a, l, h) {
          ft.call(a, h) ? a[h].push(l) : Qr(a, h, [l]);
        });
        function Wv(a, l, h, L) {
          a = In(a) ? a : _i(a), h = h && !L ? Ge(h) : 0;
          var y = a.length;
          return h < 0 && (h = Ht(y + h, 0)), No(a) ? h <= y && a.indexOf(l, h) > -1 : !!y && Js(a, l, h) > -1;
        }
        var Gv = Ye(function(a, l, h) {
          var L = -1, y = typeof l == "function", N = In(a) ? j(a.length) : [];
          return ga(a, function(x) {
            N[++L] = y ? Nn(l, x, h) : ji(x, l, h);
          }), N;
        }), jv = po(function(a, l, h) {
          Qr(a, h, l);
        });
        function Ro(a, l) {
          var h = Ve(a) ? Rt : Dh;
          return h(a, xe(l, 3));
        }
        function Kv(a, l, h, L) {
          return a == null ? [] : (Ve(l) || (l = l == null ? [] : [l]), h = L ? n : h, Ve(h) || (h = h == null ? [] : [h]), Ph(a, l, h));
        }
        var zv = po(function(a, l, h) {
          a[h ? 0 : 1].push(l);
        }, function() {
          return [[], []];
        });
        function Yv(a, l, h) {
          var L = Ve(a) ? c_ : ah, y = arguments.length < 3;
          return L(a, xe(l, 4), h, y, ga);
        }
        function Xv(a, l, h) {
          var L = Ve(a) ? om : ah, y = arguments.length < 3;
          return L(a, xe(l, 4), h, y, Ih);
        }
        function Zv(a, l) {
          var h = Ve(a) ? Ia : vh;
          return h(a, Co(xe(l, 3)));
        }
        function Jv(a) {
          var l = Ve(a) ? Sh : Wb;
          return l(a);
        }
        function Qv(a, l, h) {
          (h ? fn(a, l, h) : l === n) ? l = 1 : l = Ge(l);
          var L = Ve(a) ? mb : Gb;
          return L(a, l);
        }
        function ey(a) {
          var l = Ve(a) ? bb : Kb;
          return l(a);
        }
        function ty(a) {
          if (a == null)
            return 0;
          if (In(a))
            return No(a) ? ei(a) : a.length;
          var l = ln(a);
          return l == Ue || l == At ? a.size : N_(a).length;
        }
        function ny(a, l, h) {
          var L = Ve(a) ? f_ : zb;
          return h && fn(a, l, h) && (l = n), L(a, xe(l, 3));
        }
        var ry = Ye(function(a, l) {
          if (a == null)
            return [];
          var h = l.length;
          return h > 1 && fn(a, l[0], l[1]) ? l = [] : h > 2 && fn(l[0], l[1], l[2]) && (l = [l[0]]), Ph(a, Qt(l, 1), []);
        }), go = Fm || function() {
          return Jt.Date.now();
        };
        function ay(a, l) {
          if (typeof l != "function")
            throw new nr(o);
          return a = Ge(a), function() {
            if (--a < 1)
              return l.apply(this, arguments);
          };
        }
        function OA(a, l, h) {
          return l = h ? n : l, l = a && l == null ? a.length : l, ea(a, P, n, n, n, n, l);
        }
        function CA(a, l) {
          var h;
          if (typeof l != "function")
            throw new nr(o);
          return a = Ge(a), function() {
            return --a > 0 && (h = l.apply(this, arguments)), a <= 1 && (l = n), h;
          };
        }
        var td = Ye(function(a, l, h) {
          var L = I;
          if (h.length) {
            var y = ya(h, oi(td));
            L |= w;
          }
          return ea(a, L, l, h, y);
        }), DA = Ye(function(a, l, h) {
          var L = I | v;
          if (h.length) {
            var y = ya(h, oi(DA));
            L |= w;
          }
          return ea(l, L, a, h, y);
        });
        function NA(a, l, h) {
          l = h ? n : l;
          var L = ea(a, R, n, n, n, n, n, l);
          return L.placeholder = NA.placeholder, L;
        }
        function BA(a, l, h) {
          l = h ? n : l;
          var L = ea(a, D, n, n, n, n, n, l);
          return L.placeholder = BA.placeholder, L;
        }
        function wA(a, l, h) {
          var L, y, N, x, $, W, Q = 0, ee = !1, ne = !1, fe = !0;
          if (typeof a != "function")
            throw new nr(o);
          l = lr(l) || 0, Ct(h) && (ee = !!h.leading, ne = "maxWait" in h, N = ne ? Ht(lr(h.maxWait) || 0, l) : N, fe = "trailing" in h ? !!h.trailing : fe);
          function ye(qt) {
            var br = L, sa = y;
            return L = y = n, Q = qt, x = a.apply(sa, br), x;
          }
          function Me(qt) {
            return Q = qt, $ = Zi(Xe, l), ee ? ye(qt) : x;
          }
          function ze(qt) {
            var br = qt - W, sa = qt - Q, JA = l - br;
            return ne ? sn(JA, N - sa) : JA;
          }
          function Fe(qt) {
            var br = qt - W, sa = qt - Q;
            return W === n || br >= l || br < 0 || ne && sa >= N;
          }
          function Xe() {
            var qt = go();
            if (Fe(qt))
              return nt(qt);
            $ = Zi(Xe, ze(qt));
          }
          function nt(qt) {
            return $ = n, fe && L ? ye(qt) : (L = y = n, x);
          }
          function xn() {
            $ !== n && Vh($), Q = 0, L = W = y = $ = n;
          }
          function hn() {
            return $ === n ? x : nt(go());
          }
          function Mn() {
            var qt = go(), br = Fe(qt);
            if (L = arguments, y = this, W = qt, br) {
              if ($ === n)
                return Me(W);
              if (ne)
                return Vh($), $ = Zi(Xe, l), ye(W);
            }
            return $ === n && ($ = Zi(Xe, l)), x;
          }
          return Mn.cancel = xn, Mn.flush = hn, Mn;
        }
        var sy = Ye(function(a, l) {
          return bh(a, 1, l);
        }), iy = Ye(function(a, l, h) {
          return bh(a, lr(l) || 0, h);
        });
        function ly(a) {
          return ea(a, O);
        }
        function Oo(a, l) {
          if (typeof a != "function" || l != null && typeof l != "function")
            throw new nr(o);
          var h = function() {
            var L = arguments, y = l ? l.apply(this, L) : L[0], N = h.cache;
            if (N.has(y))
              return N.get(y);
            var x = a.apply(this, L);
            return h.cache = N.set(y, x) || N, x;
          };
          return h.cache = new (Oo.Cache || Jr)(), h;
        }
        Oo.Cache = Jr;
        function Co(a) {
          if (typeof a != "function")
            throw new nr(o);
          return function() {
            var l = arguments;
            switch (l.length) {
              case 0:
                return !a.call(this);
              case 1:
                return !a.call(this, l[0]);
              case 2:
                return !a.call(this, l[0], l[1]);
              case 3:
                return !a.call(this, l[0], l[1], l[2]);
            }
            return !a.apply(this, l);
          };
        }
        function oy(a) {
          return CA(2, a);
        }
        var uy = Yb(function(a, l) {
          l = l.length == 1 && Ve(l[0]) ? Rt(l[0], Bn(xe())) : Rt(Qt(l, 1), Bn(xe()));
          var h = l.length;
          return Ye(function(L) {
            for (var y = -1, N = sn(L.length, h); ++y < N; )
              L[y] = l[y].call(this, L[y]);
            return Nn(a, this, L);
          });
        }), nd = Ye(function(a, l) {
          var h = ya(l, oi(nd));
          return ea(a, w, n, l, h);
        }), PA = Ye(function(a, l) {
          var h = ya(l, oi(PA));
          return ea(a, F, n, l, h);
        }), _y = ta(function(a, l) {
          return ea(a, M, n, n, n, l);
        });
        function dy(a, l) {
          if (typeof a != "function")
            throw new nr(o);
          return l = l === n ? l : Ge(l), Ye(a, l);
        }
        function cy(a, l) {
          if (typeof a != "function")
            throw new nr(o);
          return l = l == null ? 0 : Ht(Ge(l), 0), Ye(function(h) {
            var L = h[l], y = Da(h, 0, l);
            return L && va(y, L), Nn(a, this, y);
          });
        }
        function fy(a, l, h) {
          var L = !0, y = !0;
          if (typeof a != "function")
            throw new nr(o);
          return Ct(h) && (L = "leading" in h ? !!h.leading : L, y = "trailing" in h ? !!h.trailing : y), wA(a, l, {
            leading: L,
            maxWait: l,
            trailing: y
          });
        }
        function hy(a) {
          return OA(a, 1);
        }
        function Ay(a, l) {
          return nd(U_(l), a);
        }
        function Ey() {
          if (!arguments.length)
            return [];
          var a = arguments[0];
          return Ve(a) ? a : [a];
        }
        function py(a) {
          return ar(a, S);
        }
        function Ty(a, l) {
          return l = typeof l == "function" ? l : n, ar(a, S, l);
        }
        function Sy(a) {
          return ar(a, p | S);
        }
        function Ly(a, l) {
          return l = typeof l == "function" ? l : n, ar(a, p | S, l);
        }
        function my(a, l) {
          return l == null || mh(a, l, jt(l));
        }
        function mr(a, l) {
          return a === l || a !== a && l !== l;
        }
        var by = mo(O_), Iy = mo(function(a, l) {
          return a >= l;
        }), Ns = gh(/* @__PURE__ */ function() {
          return arguments;
        }()) ? gh : function(a) {
          return Pt(a) && ft.call(a, "callee") && !fh.call(a, "callee");
        }, Ve = j.isArray, vy = zf ? Bn(zf) : Bb;
        function In(a) {
          return a != null && Do(a.length) && !ra(a);
        }
        function Ft(a) {
          return Pt(a) && In(a);
        }
        function yy(a) {
          return a === !0 || a === !1 || Pt(a) && cn(a) == X;
        }
        var Na = $m || fd, Ry = Yf ? Bn(Yf) : wb;
        function gy(a) {
          return Pt(a) && a.nodeType === 1 && !Ji(a);
        }
        function Oy(a) {
          if (a == null)
            return !0;
          if (In(a) && (Ve(a) || typeof a == "string" || typeof a.splice == "function" || Na(a) || ui(a) || Ns(a)))
            return !a.length;
          var l = ln(a);
          if (l == Ue || l == At)
            return !a.size;
          if (Xi(a))
            return !N_(a).length;
          for (var h in a)
            if (ft.call(a, h))
              return !1;
          return !0;
        }
        function Cy(a, l) {
          return Ki(a, l);
        }
        function Dy(a, l, h) {
          h = typeof h == "function" ? h : n;
          var L = h ? h(a, l) : n;
          return L === n ? Ki(a, l, n, h) : !!L;
        }
        function rd(a) {
          if (!Pt(a))
            return !1;
          var l = cn(a);
          return l == Ce || l == ge || typeof a.message == "string" && typeof a.name == "string" && !Ji(a);
        }
        function Ny(a) {
          return typeof a == "number" && Ah(a);
        }
        function ra(a) {
          if (!Ct(a))
            return !1;
          var l = cn(a);
          return l == ke || l == Qe || l == H || l == et;
        }
        function xA(a) {
          return typeof a == "number" && a == Ge(a);
        }
        function Do(a) {
          return typeof a == "number" && a > -1 && a % 1 == 0 && a <= Te;
        }
        function Ct(a) {
          var l = typeof a;
          return a != null && (l == "object" || l == "function");
        }
        function Pt(a) {
          return a != null && typeof a == "object";
        }
        var MA = Xf ? Bn(Xf) : xb;
        function By(a, l) {
          return a === l || D_(a, l, K_(l));
        }
        function wy(a, l, h) {
          return h = typeof h == "function" ? h : n, D_(a, l, K_(l), h);
        }
        function Py(a) {
          return FA(a) && a != +a;
        }
        function xy(a) {
          if (TI(a))
            throw new He(i);
          return Oh(a);
        }
        function My(a) {
          return a === null;
        }
        function Fy(a) {
          return a == null;
        }
        function FA(a) {
          return typeof a == "number" || Pt(a) && cn(a) == $e;
        }
        function Ji(a) {
          if (!Pt(a) || cn(a) != Ke)
            return !1;
          var l = no(a);
          if (l === null)
            return !0;
          var h = ft.call(l, "constructor") && l.constructor;
          return typeof h == "function" && h instanceof h && Jl.call(h) == wm;
        }
        var ad = Zf ? Bn(Zf) : Mb;
        function qy(a) {
          return xA(a) && a >= -9007199254740991 && a <= Te;
        }
        var qA = Jf ? Bn(Jf) : Fb;
        function No(a) {
          return typeof a == "string" || !Ve(a) && Pt(a) && cn(a) == Mt;
        }
        function Pn(a) {
          return typeof a == "symbol" || Pt(a) && cn(a) == tn;
        }
        var ui = Qf ? Bn(Qf) : qb;
        function $y(a) {
          return a === n;
        }
        function Uy(a) {
          return Pt(a) && ln(a) == nn;
        }
        function ky(a) {
          return Pt(a) && cn(a) == Kn;
        }
        var Hy = mo(B_), Vy = mo(function(a, l) {
          return a <= l;
        });
        function $A(a) {
          if (!a)
            return [];
          if (In(a))
            return No(a) ? Sr(a) : bn(a);
          if ($i && a[$i])
            return mm(a[$i]());
          var l = ln(a), h = l == Ue ? S_ : l == At ? Yl : _i;
          return h(a);
        }
        function aa(a) {
          if (!a)
            return a === 0 ? a : 0;
          if (a = lr(a), a === oe || a === -1 / 0) {
            var l = a < 0 ? -1 : 1;
            return l * Be;
          }
          return a === a ? a : 0;
        }
        function Ge(a) {
          var l = aa(a), h = l % 1;
          return l === l ? h ? l - h : l : 0;
        }
        function UA(a) {
          return a ? gs(Ge(a), 0, _e) : 0;
        }
        function lr(a) {
          if (typeof a == "number")
            return a;
          if (Pn(a))
            return Ae;
          if (Ct(a)) {
            var l = typeof a.valueOf == "function" ? a.valueOf() : a;
            a = Ct(l) ? l + "" : l;
          }
          if (typeof a != "string")
            return a === 0 ? a : +a;
          a = sh(a);
          var h = r_.test(a);
          return h || k.test(a) ? am(a.slice(2), h ? 2 : 8) : Gl.test(a) ? Ae : +a;
        }
        function kA(a) {
          return Mr(a, vn(a));
        }
        function Wy(a) {
          return a ? gs(Ge(a), -9007199254740991, Te) : a === 0 ? a : 0;
        }
        function dt(a) {
          return a == null ? "" : wn(a);
        }
        var Gy = ii(function(a, l) {
          if (Xi(l) || In(l)) {
            Mr(l, jt(l), a);
            return;
          }
          for (var h in l)
            ft.call(l, h) && Wi(a, h, l[h]);
        }), HA = ii(function(a, l) {
          Mr(l, vn(l), a);
        }), Bo = ii(function(a, l, h, L) {
          Mr(l, vn(l), a, L);
        }), jy = ii(function(a, l, h, L) {
          Mr(l, jt(l), a, L);
        }), Ky = ta(y_);
        function zy(a, l) {
          var h = si(a);
          return l == null ? h : Lh(h, l);
        }
        var Yy = Ye(function(a, l) {
          a = Tt(a);
          var h = -1, L = l.length, y = L > 2 ? l[2] : n;
          for (y && fn(l[0], l[1], y) && (L = 1); ++h < L; )
            for (var N = l[h], x = vn(N), $ = -1, W = x.length; ++$ < W; ) {
              var Q = x[$], ee = a[Q];
              (ee === n || mr(ee, ni[Q]) && !ft.call(a, Q)) && (a[Q] = N[Q]);
            }
          return a;
        }), Xy = Ye(function(a) {
          return a.push(n, sA), Nn(VA, n, a);
        });
        function Zy(a, l) {
          return th(a, xe(l, 3), xr);
        }
        function Jy(a, l) {
          return th(a, xe(l, 3), g_);
        }
        function Qy(a, l) {
          return a == null ? a : R_(a, xe(l, 3), vn);
        }
        function eR(a, l) {
          return a == null ? a : yh(a, xe(l, 3), vn);
        }
        function tR(a, l) {
          return a && xr(a, xe(l, 3));
        }
        function nR(a, l) {
          return a && g_(a, xe(l, 3));
        }
        function rR(a) {
          return a == null ? [] : fo(a, jt(a));
        }
        function aR(a) {
          return a == null ? [] : fo(a, vn(a));
        }
        function sd(a, l, h) {
          var L = a == null ? n : Os(a, l);
          return L === n ? h : L;
        }
        function sR(a, l) {
          return a != null && oA(a, l, Ob);
        }
        function id(a, l) {
          return a != null && oA(a, l, Cb);
        }
        var iR = eA(function(a, l, h) {
          l != null && typeof l.toString != "function" && (l = Ql.call(l)), a[l] = h;
        }, od(yn)), lR = eA(function(a, l, h) {
          l != null && typeof l.toString != "function" && (l = Ql.call(l)), ft.call(a, l) ? a[l].push(h) : a[l] = [h];
        }, xe), oR = Ye(ji);
        function jt(a) {
          return In(a) ? Th(a) : N_(a);
        }
        function vn(a) {
          return In(a) ? Th(a, !0) : $b(a);
        }
        function uR(a, l) {
          var h = {};
          return l = xe(l, 3), xr(a, function(L, y, N) {
            Qr(h, l(L, y, N), L);
          }), h;
        }
        function _R(a, l) {
          var h = {};
          return l = xe(l, 3), xr(a, function(L, y, N) {
            Qr(h, y, l(L, y, N));
          }), h;
        }
        var dR = ii(function(a, l, h) {
          ho(a, l, h);
        }), VA = ii(function(a, l, h, L) {
          ho(a, l, h, L);
        }), cR = ta(function(a, l) {
          var h = {};
          if (a == null)
            return h;
          var L = !1;
          l = Rt(l, function(N) {
            return N = Ca(N, a), L || (L = N.length > 1), N;
          }), Mr(a, G_(a), h), L && (h = ar(h, p | T | S, iI));
          for (var y = l.length; y--; )
            F_(h, l[y]);
          return h;
        });
        function fR(a, l) {
          return WA(a, Co(xe(l)));
        }
        var hR = ta(function(a, l) {
          return a == null ? {} : kb(a, l);
        });
        function WA(a, l) {
          if (a == null)
            return {};
          var h = Rt(G_(a), function(L) {
            return [L];
          });
          return l = xe(l), xh(a, h, function(L, y) {
            return l(L, y[0]);
          });
        }
        function AR(a, l, h) {
          l = Ca(l, a);
          var L = -1, y = l.length;
          for (y || (y = 1, a = n); ++L < y; ) {
            var N = a == null ? n : a[Fr(l[L])];
            N === n && (L = y, N = h), a = ra(N) ? N.call(a) : N;
          }
          return a;
        }
        function ER(a, l, h) {
          return a == null ? a : zi(a, l, h);
        }
        function pR(a, l, h, L) {
          return L = typeof L == "function" ? L : n, a == null ? a : zi(a, l, h, L);
        }
        var GA = rA(jt), jA = rA(vn);
        function TR(a, l, h) {
          var L = Ve(a), y = L || Na(a) || ui(a);
          if (l = xe(l, 4), h == null) {
            var N = a && a.constructor;
            y ? h = L ? new N() : [] : Ct(a) ? h = ra(N) ? si(no(a)) : {} : h = {};
          }
          return (y ? tr : xr)(a, function(x, $, W) {
            return l(h, x, $, W);
          }), h;
        }
        function SR(a, l) {
          return a == null ? !0 : F_(a, l);
        }
        function LR(a, l, h) {
          return a == null ? a : Uh(a, l, U_(h));
        }
        function mR(a, l, h, L) {
          return L = typeof L == "function" ? L : n, a == null ? a : Uh(a, l, U_(h), L);
        }
        function _i(a) {
          return a == null ? [] : T_(a, jt(a));
        }
        function bR(a) {
          return a == null ? [] : T_(a, vn(a));
        }
        function IR(a, l, h) {
          return h === n && (h = l, l = n), h !== n && (h = lr(h), h = h === h ? h : 0), l !== n && (l = lr(l), l = l === l ? l : 0), gs(lr(a), l, h);
        }
        function vR(a, l, h) {
          return l = aa(l), h === n ? (h = l, l = 0) : h = aa(h), a = lr(a), Db(a, l, h);
        }
        function yR(a, l, h) {
          if (h && typeof h != "boolean" && fn(a, l, h) && (l = h = n), h === n && (typeof l == "boolean" ? (h = l, l = n) : typeof a == "boolean" && (h = a, a = n)), a === n && l === n ? (a = 0, l = 1) : (a = aa(a), l === n ? (l = a, a = 0) : l = aa(l)), a > l) {
            var L = a;
            a = l, l = L;
          }
          if (h || a % 1 || l % 1) {
            var y = Eh();
            return sn(a + y * (l - a + rm("1e-" + ((y + "").length - 1))), l);
          }
          return P_(a, l);
        }
        var RR = li(function(a, l, h) {
          return l = l.toLowerCase(), a + (h ? KA(l) : l);
        });
        function KA(a) {
          return ld(dt(a).toLowerCase());
        }
        function zA(a) {
          return a = dt(a), a && a.replace(Ie, Em).replace(KL, "");
        }
        function gR(a, l, h) {
          a = dt(a), l = wn(l);
          var L = a.length;
          h = h === n ? L : gs(Ge(h), 0, L);
          var y = h;
          return h -= l.length, h >= 0 && a.slice(h, y) == l;
        }
        function OR(a) {
          return a = dt(a), a && Ls.test(a) ? a.replace(Dn, pm) : a;
        }
        function CR(a) {
          return a = dt(a), a && Pi.test(a) ? a.replace(Pr, "\\$&") : a;
        }
        var DR = li(function(a, l, h) {
          return a + (h ? "-" : "") + l.toLowerCase();
        }), NR = li(function(a, l, h) {
          return a + (h ? " " : "") + l.toLowerCase();
        }), BR = Zh("toLowerCase");
        function wR(a, l, h) {
          a = dt(a), l = Ge(l);
          var L = l ? ei(a) : 0;
          if (!l || L >= l)
            return a;
          var y = (l - L) / 2;
          return Lo(io(y), h) + a + Lo(so(y), h);
        }
        function PR(a, l, h) {
          a = dt(a), l = Ge(l);
          var L = l ? ei(a) : 0;
          return l && L < l ? a + Lo(l - L, h) : a;
        }
        function xR(a, l, h) {
          a = dt(a), l = Ge(l);
          var L = l ? ei(a) : 0;
          return l && L < l ? Lo(l - L, h) + a : a;
        }
        function MR(a, l, h) {
          return h || l == null ? l = 0 : l && (l = +l), Vm(dt(a).replace(rn, ""), l || 0);
        }
        function FR(a, l, h) {
          return (h ? fn(a, l, h) : l === n) ? l = 1 : l = Ge(l), x_(dt(a), l);
        }
        function qR() {
          var a = arguments, l = dt(a[0]);
          return a.length < 3 ? l : l.replace(a[1], a[2]);
        }
        var $R = li(function(a, l, h) {
          return a + (h ? "_" : "") + l.toLowerCase();
        });
        function UR(a, l, h) {
          return h && typeof h != "number" && fn(a, l, h) && (l = h = n), h = h === n ? _e : h >>> 0, h ? (a = dt(a), a && (typeof l == "string" || l != null && !ad(l)) && (l = wn(l), !l && Qs(a)) ? Da(Sr(a), 0, h) : a.split(l, h)) : [];
        }
        var kR = li(function(a, l, h) {
          return a + (h ? " " : "") + ld(l);
        });
        function HR(a, l, h) {
          return a = dt(a), h = h == null ? 0 : gs(Ge(h), 0, a.length), l = wn(l), a.slice(h, h + l.length) == l;
        }
        function VR(a, l, h) {
          var L = C.templateSettings;
          h && fn(a, l, h) && (l = n), a = dt(a), l = Bo({}, l, L, aA);
          var y = Bo({}, l.imports, L.imports, aA), N = jt(y), x = T_(y, N), $, W, Q = 0, ee = l.interpolate || ct, ne = "__p += '", fe = L_(
            (l.escape || ct).source + "|" + ee.source + "|" + (ee === Yr ? Wl : ct).source + "|" + (l.evaluate || ct).source + "|$",
            "g"
          ), ye = "//# sourceURL=" + (ft.call(l, "sourceURL") ? (l.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++JL + "]") + `
`;
          a.replace(fe, function(Fe, Xe, nt, xn, hn, Mn) {
            return nt || (nt = xn), ne += a.slice(Q, Mn).replace(Wt, Tm), Xe && ($ = !0, ne += `' +
__e(` + Xe + `) +
'`), hn && (W = !0, ne += `';
` + hn + `;
__p += '`), nt && (ne += `' +
((__t = (` + nt + `)) == null ? '' : __t) +
'`), Q = Mn + Fe.length, Fe;
          }), ne += `';
`;
          var Me = ft.call(l, "variable") && l.variable;
          if (!Me)
            ne = `with (obj) {
` + ne + `
}
`;
          else if (dn.test(Me))
            throw new He(u);
          ne = (W ? ne.replace(Ts, "") : ne).replace(wr, "$1").replace(Zn, "$1;"), ne = "function(" + (Me || "obj") + `) {
` + (Me ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + ($ ? ", __e = _.escape" : "") + (W ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + ne + `return __p
}`;
          var ze = XA(function() {
            return ut(N, ye + "return " + ne).apply(n, x);
          });
          if (ze.source = ne, rd(ze))
            throw ze;
          return ze;
        }
        function WR(a) {
          return dt(a).toLowerCase();
        }
        function GR(a) {
          return dt(a).toUpperCase();
        }
        function jR(a, l, h) {
          if (a = dt(a), a && (h || l === n))
            return sh(a);
          if (!a || !(l = wn(l)))
            return a;
          var L = Sr(a), y = Sr(l), N = ih(L, y), x = lh(L, y) + 1;
          return Da(L, N, x).join("");
        }
        function KR(a, l, h) {
          if (a = dt(a), a && (h || l === n))
            return a.slice(0, uh(a) + 1);
          if (!a || !(l = wn(l)))
            return a;
          var L = Sr(a), y = lh(L, Sr(l)) + 1;
          return Da(L, 0, y).join("");
        }
        function zR(a, l, h) {
          if (a = dt(a), a && (h || l === n))
            return a.replace(rn, "");
          if (!a || !(l = wn(l)))
            return a;
          var L = Sr(a), y = ih(L, Sr(l));
          return Da(L, y).join("");
        }
        function YR(a, l) {
          var h = q, L = U;
          if (Ct(l)) {
            var y = "separator" in l ? l.separator : y;
            h = "length" in l ? Ge(l.length) : h, L = "omission" in l ? wn(l.omission) : L;
          }
          a = dt(a);
          var N = a.length;
          if (Qs(a)) {
            var x = Sr(a);
            N = x.length;
          }
          if (h >= N)
            return a;
          var $ = h - ei(L);
          if ($ < 1)
            return L;
          var W = x ? Da(x, 0, $).join("") : a.slice(0, $);
          if (y === n)
            return W + L;
          if (x && ($ += W.length - $), ad(y)) {
            if (a.slice($).search(y)) {
              var Q, ee = W;
              for (y.global || (y = L_(y.source, dt(xi.exec(y)) + "g")), y.lastIndex = 0; Q = y.exec(ee); )
                var ne = Q.index;
              W = W.slice(0, ne === n ? $ : ne);
            }
          } else if (a.indexOf(wn(y), $) != $) {
            var fe = W.lastIndexOf(y);
            fe > -1 && (W = W.slice(0, fe));
          }
          return W + L;
        }
        function XR(a) {
          return a = dt(a), a && Ss.test(a) ? a.replace(Sa, ym) : a;
        }
        var ZR = li(function(a, l, h) {
          return a + (h ? " " : "") + l.toUpperCase();
        }), ld = Zh("toUpperCase");
        function YA(a, l, h) {
          return a = dt(a), l = h ? n : l, l === n ? Lm(a) ? Om(a) : dm(a) : a.match(l) || [];
        }
        var XA = Ye(function(a, l) {
          try {
            return Nn(a, n, l);
          } catch (h) {
            return rd(h) ? h : new He(h);
          }
        }), JR = ta(function(a, l) {
          return tr(l, function(h) {
            h = Fr(h), Qr(a, h, td(a[h], a));
          }), a;
        });
        function QR(a) {
          var l = a == null ? 0 : a.length, h = xe();
          return a = l ? Rt(a, function(L) {
            if (typeof L[1] != "function")
              throw new nr(o);
            return [h(L[0]), L[1]];
          }) : [], Ye(function(L) {
            for (var y = -1; ++y < l; ) {
              var N = a[y];
              if (Nn(N[0], this, L))
                return Nn(N[1], this, L);
            }
          });
        }
        function eg(a) {
          return yb(ar(a, p));
        }
        function od(a) {
          return function() {
            return a;
          };
        }
        function tg(a, l) {
          return a == null || a !== a ? l : a;
        }
        var ng = Qh(), rg = Qh(!0);
        function yn(a) {
          return a;
        }
        function ud(a) {
          return Ch(typeof a == "function" ? a : ar(a, p));
        }
        function ag(a) {
          return Nh(ar(a, p));
        }
        function sg(a, l) {
          return Bh(a, ar(l, p));
        }
        var ig = Ye(function(a, l) {
          return function(h) {
            return ji(h, a, l);
          };
        }), lg = Ye(function(a, l) {
          return function(h) {
            return ji(a, h, l);
          };
        });
        function _d(a, l, h) {
          var L = jt(l), y = fo(l, L);
          h == null && !(Ct(l) && (y.length || !L.length)) && (h = l, l = a, a = this, y = fo(l, jt(l)));
          var N = !(Ct(h) && "chain" in h) || !!h.chain, x = ra(a);
          return tr(y, function($) {
            var W = l[$];
            a[$] = W, x && (a.prototype[$] = function() {
              var Q = this.__chain__;
              if (N || Q) {
                var ee = a(this.__wrapped__), ne = ee.__actions__ = bn(this.__actions__);
                return ne.push({ func: W, args: arguments, thisArg: a }), ee.__chain__ = Q, ee;
              }
              return W.apply(a, va([this.value()], arguments));
            });
          }), a;
        }
        function og() {
          return Jt._ === this && (Jt._ = Pm), this;
        }
        function dd() {
        }
        function ug(a) {
          return a = Ge(a), Ye(function(l) {
            return wh(l, a);
          });
        }
        var _g = H_(Rt), dg = H_(eh), cg = H_(f_);
        function ZA(a) {
          return Y_(a) ? h_(Fr(a)) : Hb(a);
        }
        function fg(a) {
          return function(l) {
            return a == null ? n : Os(a, l);
          };
        }
        var hg = tA(), Ag = tA(!0);
        function cd() {
          return [];
        }
        function fd() {
          return !1;
        }
        function Eg() {
          return {};
        }
        function pg() {
          return "";
        }
        function Tg() {
          return !0;
        }
        function Sg(a, l) {
          if (a = Ge(a), a < 1 || a > Te)
            return [];
          var h = _e, L = sn(a, _e);
          l = xe(l), a -= _e;
          for (var y = p_(L, l); ++h < a; )
            l(h);
          return y;
        }
        function Lg(a) {
          return Ve(a) ? Rt(a, Fr) : Pn(a) ? [a] : bn(pA(dt(a)));
        }
        function mg(a) {
          var l = ++Bm;
          return dt(a) + l;
        }
        var bg = So(function(a, l) {
          return a + l;
        }, 0), Ig = V_("ceil"), vg = So(function(a, l) {
          return a / l;
        }, 1), yg = V_("floor");
        function Rg(a) {
          return a && a.length ? co(a, yn, O_) : n;
        }
        function gg(a, l) {
          return a && a.length ? co(a, xe(l, 2), O_) : n;
        }
        function Og(a) {
          return rh(a, yn);
        }
        function Cg(a, l) {
          return rh(a, xe(l, 2));
        }
        function Dg(a) {
          return a && a.length ? co(a, yn, B_) : n;
        }
        function Ng(a, l) {
          return a && a.length ? co(a, xe(l, 2), B_) : n;
        }
        var Bg = So(function(a, l) {
          return a * l;
        }, 1), wg = V_("round"), Pg = So(function(a, l) {
          return a - l;
        }, 0);
        function xg(a) {
          return a && a.length ? E_(a, yn) : 0;
        }
        function Mg(a, l) {
          return a && a.length ? E_(a, xe(l, 2)) : 0;
        }
        return C.after = ay, C.ary = OA, C.assign = Gy, C.assignIn = HA, C.assignInWith = Bo, C.assignWith = jy, C.at = Ky, C.before = CA, C.bind = td, C.bindAll = JR, C.bindKey = DA, C.castArray = Ey, C.chain = yA, C.chunk = yI, C.compact = RI, C.concat = gI, C.cond = QR, C.conforms = eg, C.constant = od, C.countBy = xv, C.create = zy, C.curry = NA, C.curryRight = BA, C.debounce = wA, C.defaults = Yy, C.defaultsDeep = Xy, C.defer = sy, C.delay = iy, C.difference = OI, C.differenceBy = CI, C.differenceWith = DI, C.drop = NI, C.dropRight = BI, C.dropRightWhile = wI, C.dropWhile = PI, C.fill = xI, C.filter = Fv, C.flatMap = Uv, C.flatMapDeep = kv, C.flatMapDepth = Hv, C.flatten = mA, C.flattenDeep = MI, C.flattenDepth = FI, C.flip = ly, C.flow = ng, C.flowRight = rg, C.fromPairs = qI, C.functions = rR, C.functionsIn = aR, C.groupBy = Vv, C.initial = UI, C.intersection = kI, C.intersectionBy = HI, C.intersectionWith = VI, C.invert = iR, C.invertBy = lR, C.invokeMap = Gv, C.iteratee = ud, C.keyBy = jv, C.keys = jt, C.keysIn = vn, C.map = Ro, C.mapKeys = uR, C.mapValues = _R, C.matches = ag, C.matchesProperty = sg, C.memoize = Oo, C.merge = dR, C.mergeWith = VA, C.method = ig, C.methodOf = lg, C.mixin = _d, C.negate = Co, C.nthArg = ug, C.omit = cR, C.omitBy = fR, C.once = oy, C.orderBy = Kv, C.over = _g, C.overArgs = uy, C.overEvery = dg, C.overSome = cg, C.partial = nd, C.partialRight = PA, C.partition = zv, C.pick = hR, C.pickBy = WA, C.property = ZA, C.propertyOf = fg, C.pull = KI, C.pullAll = IA, C.pullAllBy = zI, C.pullAllWith = YI, C.pullAt = XI, C.range = hg, C.rangeRight = Ag, C.rearg = _y, C.reject = Zv, C.remove = ZI, C.rest = dy, C.reverse = Q_, C.sampleSize = Qv, C.set = ER, C.setWith = pR, C.shuffle = ey, C.slice = JI, C.sortBy = ry, C.sortedUniq = sv, C.sortedUniqBy = iv, C.split = UR, C.spread = cy, C.tail = lv, C.take = ov, C.takeRight = uv, C.takeRightWhile = _v, C.takeWhile = dv, C.tap = Rv, C.throttle = fy, C.thru = yo, C.toArray = $A, C.toPairs = GA, C.toPairsIn = jA, C.toPath = Lg, C.toPlainObject = kA, C.transform = TR, C.unary = hy, C.union = cv, C.unionBy = fv, C.unionWith = hv, C.uniq = Av, C.uniqBy = Ev, C.uniqWith = pv, C.unset = SR, C.unzip = ed, C.unzipWith = vA, C.update = LR, C.updateWith = mR, C.values = _i, C.valuesIn = bR, C.without = Tv, C.words = YA, C.wrap = Ay, C.xor = Sv, C.xorBy = Lv, C.xorWith = mv, C.zip = bv, C.zipObject = Iv, C.zipObjectDeep = vv, C.zipWith = yv, C.entries = GA, C.entriesIn = jA, C.extend = HA, C.extendWith = Bo, _d(C, C), C.add = bg, C.attempt = XA, C.camelCase = RR, C.capitalize = KA, C.ceil = Ig, C.clamp = IR, C.clone = py, C.cloneDeep = Sy, C.cloneDeepWith = Ly, C.cloneWith = Ty, C.conformsTo = my, C.deburr = zA, C.defaultTo = tg, C.divide = vg, C.endsWith = gR, C.eq = mr, C.escape = OR, C.escapeRegExp = CR, C.every = Mv, C.find = qv, C.findIndex = SA, C.findKey = Zy, C.findLast = $v, C.findLastIndex = LA, C.findLastKey = Jy, C.floor = yg, C.forEach = RA, C.forEachRight = gA, C.forIn = Qy, C.forInRight = eR, C.forOwn = tR, C.forOwnRight = nR, C.get = sd, C.gt = by, C.gte = Iy, C.has = sR, C.hasIn = id, C.head = bA, C.identity = yn, C.includes = Wv, C.indexOf = $I, C.inRange = vR, C.invoke = oR, C.isArguments = Ns, C.isArray = Ve, C.isArrayBuffer = vy, C.isArrayLike = In, C.isArrayLikeObject = Ft, C.isBoolean = yy, C.isBuffer = Na, C.isDate = Ry, C.isElement = gy, C.isEmpty = Oy, C.isEqual = Cy, C.isEqualWith = Dy, C.isError = rd, C.isFinite = Ny, C.isFunction = ra, C.isInteger = xA, C.isLength = Do, C.isMap = MA, C.isMatch = By, C.isMatchWith = wy, C.isNaN = Py, C.isNative = xy, C.isNil = Fy, C.isNull = My, C.isNumber = FA, C.isObject = Ct, C.isObjectLike = Pt, C.isPlainObject = Ji, C.isRegExp = ad, C.isSafeInteger = qy, C.isSet = qA, C.isString = No, C.isSymbol = Pn, C.isTypedArray = ui, C.isUndefined = $y, C.isWeakMap = Uy, C.isWeakSet = ky, C.join = WI, C.kebabCase = DR, C.last = ir, C.lastIndexOf = GI, C.lowerCase = NR, C.lowerFirst = BR, C.lt = Hy, C.lte = Vy, C.max = Rg, C.maxBy = gg, C.mean = Og, C.meanBy = Cg, C.min = Dg, C.minBy = Ng, C.stubArray = cd, C.stubFalse = fd, C.stubObject = Eg, C.stubString = pg, C.stubTrue = Tg, C.multiply = Bg, C.nth = jI, C.noConflict = og, C.noop = dd, C.now = go, C.pad = wR, C.padEnd = PR, C.padStart = xR, C.parseInt = MR, C.random = yR, C.reduce = Yv, C.reduceRight = Xv, C.repeat = FR, C.replace = qR, C.result = AR, C.round = wg, C.runInContext = V, C.sample = Jv, C.size = ty, C.snakeCase = $R, C.some = ny, C.sortedIndex = QI, C.sortedIndexBy = ev, C.sortedIndexOf = tv, C.sortedLastIndex = nv, C.sortedLastIndexBy = rv, C.sortedLastIndexOf = av, C.startCase = kR, C.startsWith = HR, C.subtract = Pg, C.sum = xg, C.sumBy = Mg, C.template = VR, C.times = Sg, C.toFinite = aa, C.toInteger = Ge, C.toLength = UA, C.toLower = WR, C.toNumber = lr, C.toSafeInteger = Wy, C.toString = dt, C.toUpper = GR, C.trim = jR, C.trimEnd = KR, C.trimStart = zR, C.truncate = YR, C.unescape = XR, C.uniqueId = mg, C.upperCase = ZR, C.upperFirst = ld, C.each = RA, C.eachRight = gA, C.first = bA, _d(C, function() {
          var a = {};
          return xr(C, function(l, h) {
            ft.call(C.prototype, h) || (a[h] = l);
          }), a;
        }(), { chain: !1 }), C.VERSION = r, tr(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(a) {
          C[a].placeholder = C;
        }), tr(["drop", "take"], function(a, l) {
          tt.prototype[a] = function(h) {
            h = h === n ? 1 : Ht(Ge(h), 0);
            var L = this.__filtered__ && !l ? new tt(this) : this.clone();
            return L.__filtered__ ? L.__takeCount__ = sn(h, L.__takeCount__) : L.__views__.push({
              size: sn(h, _e),
              type: a + (L.__dir__ < 0 ? "Right" : "")
            }), L;
          }, tt.prototype[a + "Right"] = function(h) {
            return this.reverse()[a](h).reverse();
          };
        }), tr(["filter", "map", "takeWhile"], function(a, l) {
          var h = l + 1, L = h == re || h == le;
          tt.prototype[a] = function(y) {
            var N = this.clone();
            return N.__iteratees__.push({
              iteratee: xe(y, 3),
              type: h
            }), N.__filtered__ = N.__filtered__ || L, N;
          };
        }), tr(["head", "last"], function(a, l) {
          var h = "take" + (l ? "Right" : "");
          tt.prototype[a] = function() {
            return this[h](1).value()[0];
          };
        }), tr(["initial", "tail"], function(a, l) {
          var h = "drop" + (l ? "" : "Right");
          tt.prototype[a] = function() {
            return this.__filtered__ ? new tt(this) : this[h](1);
          };
        }), tt.prototype.compact = function() {
          return this.filter(yn);
        }, tt.prototype.find = function(a) {
          return this.filter(a).head();
        }, tt.prototype.findLast = function(a) {
          return this.reverse().find(a);
        }, tt.prototype.invokeMap = Ye(function(a, l) {
          return typeof a == "function" ? new tt(this) : this.map(function(h) {
            return ji(h, a, l);
          });
        }), tt.prototype.reject = function(a) {
          return this.filter(Co(xe(a)));
        }, tt.prototype.slice = function(a, l) {
          a = Ge(a);
          var h = this;
          return h.__filtered__ && (a > 0 || l < 0) ? new tt(h) : (a < 0 ? h = h.takeRight(-a) : a && (h = h.drop(a)), l !== n && (l = Ge(l), h = l < 0 ? h.dropRight(-l) : h.take(l - a)), h);
        }, tt.prototype.takeRightWhile = function(a) {
          return this.reverse().takeWhile(a).reverse();
        }, tt.prototype.toArray = function() {
          return this.take(_e);
        }, xr(tt.prototype, function(a, l) {
          var h = /^(?:filter|find|map|reject)|While$/.test(l), L = /^(?:head|last)$/.test(l), y = C[L ? "take" + (l == "last" ? "Right" : "") : l], N = L || /^find/.test(l);
          y && (C.prototype[l] = function() {
            var x = this.__wrapped__, $ = L ? [1] : arguments, W = x instanceof tt, Q = $[0], ee = W || Ve(x), ne = function(Xe) {
              var nt = y.apply(C, va([Xe], $));
              return L && fe ? nt[0] : nt;
            };
            ee && h && typeof Q == "function" && Q.length != 1 && (W = ee = !1);
            var fe = this.__chain__, ye = !!this.__actions__.length, Me = N && !fe, ze = W && !ye;
            if (!N && ee) {
              x = ze ? x : new tt(this);
              var Fe = a.apply(x, $);
              return Fe.__actions__.push({ func: yo, args: [ne], thisArg: n }), new rr(Fe, fe);
            }
            return Me && ze ? a.apply(this, $) : (Fe = this.thru(ne), Me ? L ? Fe.value()[0] : Fe.value() : Fe);
          });
        }), tr(["pop", "push", "shift", "sort", "splice", "unshift"], function(a) {
          var l = Xl[a], h = /^(?:push|sort|unshift)$/.test(a) ? "tap" : "thru", L = /^(?:pop|shift)$/.test(a);
          C.prototype[a] = function() {
            var y = arguments;
            if (L && !this.__chain__) {
              var N = this.value();
              return l.apply(Ve(N) ? N : [], y);
            }
            return this[h](function(x) {
              return l.apply(Ve(x) ? x : [], y);
            });
          };
        }), xr(tt.prototype, function(a, l) {
          var h = C[l];
          if (h) {
            var L = h.name + "";
            ft.call(ai, L) || (ai[L] = []), ai[L].push({ name: l, func: h });
          }
        }), ai[To(n, v).name] = [{
          name: "wrapper",
          func: n
        }], tt.prototype.clone = Xm, tt.prototype.reverse = Zm, tt.prototype.value = Jm, C.prototype.at = gv, C.prototype.chain = Ov, C.prototype.commit = Cv, C.prototype.next = Dv, C.prototype.plant = Bv, C.prototype.reverse = wv, C.prototype.toJSON = C.prototype.valueOf = C.prototype.value = Pv, C.prototype.first = C.prototype.head, $i && (C.prototype[$i] = Nv), C;
      }, ti = Cm();
      Is ? ((Is.exports = ti)._ = ti, u_._ = ti) : Jt._ = ti;
    }).call(b1);
  }(ol, ol.exports)), ol.exports;
}
var cl = I1();
function v1(e, {
  changeModel: t = () => {
  },
  dataExtraLocalFiltered: n = _(() => []),
  dataSortFiltered: r = _(() => []),
  modelValueFiltered: s = _(() => [])
}) {
  const i = d(e, "disabled"), o = d(e, "modelValue"), u = _(() => i.value || s.value.length === 0), f = _(() => i.value || n.value.length === 0 && r.value.length === 0), A = () => {
    if (f.value)
      return;
    const T = he(o.value);
    cl.forEach(n.value, (S) => {
      T.push(S[we]);
    }), cl.forEach(r.value, (S) => {
      T.push(S[we]);
    }), t({ model: T });
  }, E = _(() => {
    const T = {};
    return cl.forEach(s.value, (S) => {
      T[S] = !0;
    }), T;
  });
  return {
    deselectAll: () => {
      if (u.value)
        return;
      const T = mt(o.value, (S) => !E.value[S]);
      t({ model: T });
    },
    disabledDeselectAll: u,
    disabledSelectAll: f,
    selectAll: A
  };
}
function y1(e, {
  htmlIdLocal: t = _(() => "")
}) {
  return {
    idForSelect: _(() => `${t.value}_select`)
  };
}
function R1(e, {
  dataExtraLocal: t = _(() => []),
  dataSort: n = _(() => []),
  modelValueFiltered: r = _(() => [])
}) {
  const s = _(() => r.value.length ? mt(n.value, (o) => !r.value.includes(o[we])) : n.value);
  return {
    dataExtraLocalFiltered: _(() => r.value.length ? mt(t.value, (o) => !r.value.includes(o[we])) : t.value),
    dataSortFiltered: s
  };
}
function g1(e, {
  changeModel: t = () => {
  },
  dataKeyByKeyIdLocal: n = _(() => ({}))
}) {
  const r = d(e, "modelValue"), s = _(() => !Se(r.value) || !r.value.length ? [] : mt(r.value, (A) => n.value[A]));
  return {
    changeModelFromSelect: ({ model: A }) => {
      if (Se(A) && A.length) {
        const E = he(r.value);
        E.push(...A), t({ model: E });
      }
    },
    deleteItem: ({ modelValue: A }) => {
      const E = la(r.value, (T) => T === A), p = he(r.value);
      p.splice(E, 1), t({ model: p });
    },
    modelValueFiltered: s,
    onDownItem: async ({ index: A, idForFocus: E }) => {
      const p = A + 1, T = s.value[A], S = s.value[p], m = la(r.value, (v) => v === T), b = la(r.value, (v) => v === S), I = he(r.value);
      [I[m], I[b]] = [I[b], I[m]], t({ model: I }), await Li(), Or({
        selector: `#${E}`
      });
    },
    onUpItem: async ({ index: A, idForFocus: E }) => {
      const p = A - 1, T = s.value[A], S = s.value[p], m = la(r.value, (v) => v === T), b = la(r.value, (v) => v === S), I = he(r.value);
      [I[m], I[b]] = [I[b], I[m]], t({ model: I }), await Li(), Or({
        selector: `#${E}`
      });
    }
  };
}
const Fu = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-up" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708z"/>
</svg>`, ia = {
  btnDeleteTitle: "_A_MULTISELECT_ORDERED_BTN_DELETE_",
  btnDownTitle: "_A_MULTISELECT_ORDERED_BTN_DOWN_",
  btnGroupAriaLabel: "_A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_",
  btnUpTitle: "_A_MULTISELECT_ORDERED_BTN_UP_",
  deselectAll: "_A_MULTISELECT_ORDERED_DESELECT_ALL_",
  groupAllAriaLabel: "_A_MULTISELECT_ORDERED_GROUP_ALL_",
  modelEmpty: "_A_MULTISELECT_ORDERED_MODEL_EMPTY_",
  selectAll: "_A_MULTISELECT_ORDERED_SELECT_ALL_"
}, qe = {
  propsDefault: {
    attributesBtnDeselectAll: {},
    attributesBtnSelectAll: {},
    attributesFieldset: {},
    btnDeleteClass: "a_btn a_btn_primary",
    btnDeleteIcon: Sf,
    btnDownClass: "a_btn a_btn_outline_secondary",
    btnDownIcon: Ha,
    btnGroupClass: "a_btn_group",
    btnUpClass: "a_btn a_btn_outline_secondary",
    btnUpIcon: Fu,
    classFieldset: void 0,
    hasBorder: !0,
    isDeselectAll: !1,
    isSelectAll: !1,
    keyDisabled: void 0,
    keyGroup: void 0,
    keyId: "value",
    keyLabel: "label",
    labelClass: void 0,
    listItemClass: "a_list_group__item",
    readonlyDefault: "",
    search: !1,
    searchApi: !1,
    searchApiKey: void 0,
    searchInGroup: !1,
    searchOutside: !1,
    searchTextInHtml: !1,
    searchTimeout: 0,
    selectButtonClass: void 0,
    selectButtonClassDefault: "a_form_control a_select_toggle",
    selectCaretIcon: Ha,
    selectHasCaret: !0,
    selectInBody: !0,
    selectIsCloseByClick: !1,
    selectIsLabelFloat: !0,
    selectIsSelectionCloseable: !0,
    selectLabel: "_A_MULTISELECT_ORDERED_LABEL_SELECT_",
    selectLabelClass: void 0,
    selectMenuClass: void 0,
    selectMenuWidthType: "as_button",
    selectPlacement: "bottom-end",
    selectPopperContainerId: "a_select_container",
    slotName: void 0,
    sortOrder: "asc",
    sortOrderGroup: "asc",
    texts: {
      ...ia
    },
    translateData: !1
  }
}, Phe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    qe.propsDefault = {
      ...qe.propsDefault,
      ...t
    };
  }
};
function O1(e) {
  const t = d(e, "texts"), n = _(() => t.value.btnDeleteTitle || ia.btnDeleteTitle), r = _(() => t.value.btnDownTitle || ia.btnDownTitle), s = _(() => t.value.btnGroupAriaLabel || ia.btnGroupAriaLabel), i = _(() => t.value.btnUpTitle || ia.btnUpTitle), o = _(() => t.value.deselectAll || ia.deselectAll), u = _(() => t.value.modelEmpty || ia.modelEmpty), f = _(() => t.value.selectAll || ia.selectAll), A = _(() => t.value.groupAllAriaLabel || ia.groupAllAriaLabel);
  return {
    textBtnDeleteTitle: n,
    textBtnDownTitle: r,
    textBtnGroupAriaLabel: s,
    textBtnUpTitle: i,
    textDeselectAll: o,
    textGroupAllAriaLabel: A,
    textModelEmpty: u,
    textSelectAll: f
  };
}
const mS = "AIsDataPrepared", C1 = {
  name: "AMultiselectOrdered",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    attributesBtnDeselectAll: {
      type: Object,
      required: !1,
      default: () => qe.propsDefault.attributesBtnDeselectAll
    },
    attributesBtnSelectAll: {
      type: Object,
      required: !1,
      default: () => qe.propsDefault.attributesBtnSelectAll
    },
    attributesFieldset: {
      type: Object,
      required: !1,
      default: () => qe.propsDefault.attributesFieldset
    },
    btnDeleteClass: {
      type: [String, Object],
      required: !1,
      default: () => qe.propsDefault.btnDeleteClass
    },
    btnDeleteIcon: {
      type: String,
      required: !1,
      default: () => qe.propsDefault.btnDeleteIcon
    },
    btnDownClass: {
      type: [String, Object],
      required: !1,
      default: () => qe.propsDefault.btnDownClass
    },
    btnDownIcon: {
      type: String,
      required: !1,
      default: () => qe.propsDefault.btnDownIcon
    },
    btnGroupClass: {
      type: [String, Object, Array],
      required: !1,
      default: () => qe.propsDefault.btnGroupClass
    },
    btnUpClass: {
      type: [String, Object],
      required: !1,
      default: () => qe.propsDefault.btnUpClass
    },
    btnUpIcon: {
      type: String,
      required: !1,
      default: () => qe.propsDefault.btnUpIcon
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: () => qe.propsDefault.classFieldset
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => []
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: () => qe.propsDefault.hasBorder
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_m_select_ordered_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isDeselectAll: {
      type: Boolean,
      required: !1,
      default: () => qe.propsDefault.isDeselectAll
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSelectAll: {
      type: Boolean,
      required: !1,
      default: () => qe.propsDefault.isSelectAll
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: () => qe.propsDefault.keyDisabled
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: () => qe.propsDefault.keyGroup
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: () => qe.propsDefault.keyId
    },
    keyLabel: {
      type: String,
      required: !1,
      default: () => qe.propsDefault.keyLabel
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: () => qe.propsDefault.labelClass
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    listItemClass: {
      type: [String, Object, Array],
      required: !1,
      default: () => qe.propsDefault.listItemClass
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: Array,
      required: !1,
      default: () => []
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: () => qe.propsDefault.readonlyDefault
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    search: {
      type: Boolean,
      required: !1,
      default: () => qe.propsDefault.search
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: () => qe.propsDefault.searchApi
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: () => qe.propsDefault.searchApiKey
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: () => qe.propsDefault.searchInGroup
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: () => qe.propsDefault.searchOutside
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1,
      default: () => qe.propsDefault.searchTextInHtml
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: () => qe.propsDefault.searchTimeout
    },
    selectButtonClass: {
      type: String,
      required: !1,
      default: () => qe.propsDefault.selectButtonClass
    },
    selectButtonClassDefault: {
      type: [String, Object],
      required: !1,
      default: () => qe.propsDefault.selectButtonClassDefault
    },
    selectCaretIcon: {
      type: [String, Object],
      required: !1,
      default: () => qe.propsDefault.selectCaretIcon
    },
    selectHasCaret: {
      type: Boolean,
      required: !1,
      default: () => qe.propsDefault.selectHasCaret
    },
    selectInBody: {
      type: Boolean,
      required: !1,
      default: () => qe.propsDefault.selectInBody
    },
    selectIsCloseByClick: {
      type: Boolean,
      required: !1,
      default: () => qe.propsDefault.selectIsCloseByClick
    },
    selectIsLabelFloat: {
      type: Boolean,
      required: !1,
      default: () => qe.propsDefault.selectIsLabelFloat
    },
    selectIsSelectionCloseable: {
      type: Boolean,
      required: !1,
      default: () => qe.propsDefault.selectIsSelectionCloseable
    },
    selectLabel: {
      type: [String, Number],
      required: !1,
      default: () => qe.propsDefault.selectLabel
    },
    selectLabelClass: {
      type: [String, Object],
      required: !1,
      default: () => qe.propsDefault.selectLabelClass
    },
    selectLabelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    selectMenuClass: {
      type: [String, Object],
      required: !1,
      default: () => qe.propsDefault.selectMenuClass
    },
    selectMenuWidthType: {
      type: String,
      required: !1,
      default: () => qe.propsDefault.selectMenuWidthType,
      validator: (e) => ["as_button", "by_content"].indexOf(e) !== -1
    },
    selectPlaceholder: {
      type: String,
      required: !1,
      default: void 0
    },
    selectPlacement: {
      type: String,
      required: !1,
      default: () => qe.propsDefault.selectPlacement,
      validator: (e) => Gn.indexOf(e) !== -1
    },
    selectPopperContainerId: {
      type: String,
      required: !1,
      default: () => qe.propsDefault.selectPopperContainerId
    },
    slotName: {
      type: String,
      required: !1,
      default: () => qe.propsDefault.slotName
    },
    sortOrder: {
      type: String,
      required: !1,
      default: () => qe.propsDefault.sortOrder,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: () => qe.propsDefault.sortOrderGroup,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    texts: {
      type: Object,
      required: !1,
      default: () => qe.propsDefault.texts
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: () => qe.propsDefault.translateData
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "blur",
    "focus",
    "onSearchOutside",
    "open",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      componentStyleHide: r
    } = Xt(e), {
      textAfterLabel: s
    } = n_(e), {
      textBtnDeleteTitle: i,
      textBtnDownTitle: o,
      textBtnGroupAriaLabel: u,
      textBtnUpTitle: f,
      textDeselectAll: A,
      textGroupAllAriaLabel: E,
      textModelEmpty: p,
      textSelectAll: T
    } = O1(e), {
      ariaDescribedbyLocal: S,
      changeModel: m,
      clearModel: b,
      errorsId: I,
      helpTextId: v,
      htmlIdLocal: g,
      isErrors: R,
      onBlur: D,
      onFocus: w
    } = zt(e, t), {
      idForSelect: F
    } = y1(e, {
      htmlIdLocal: g
    }), {
      dataFromServer: P,
      dataExtraLocal: M,
      dataKeyByKeyIdLocal: O,
      dataLocal: q,
      hasDataExtra: U
    } = e_(e), {
      loadDataFromServer: G,
      loadDataFromServerForSearchAPI: te,
      loadingDataFromServer: re,
      loadingSearchApi: ie,
      updateUrlPropsComputed: le,
      urlPropsComputed: oe
    } = Zu(e, {
      changeModel: m,
      dataExtraLocal: M,
      dataFromServer: P
    }), {
      loadingLocal: Te
    } = t_(e, {
      loadingDataFromServer: re
    });
    Qu(t, {
      dataKeyByKeyIdLocal: O,
      dataLocal: q
    });
    const {
      changeModelFromSelect: Be,
      deleteItem: Ae,
      modelValueFiltered: _e,
      onDownItem: ve,
      onUpItem: be
    } = g1(e, {
      changeModel: m,
      dataKeyByKeyIdLocal: O
    }), {
      dataSort: je
    } = Ju(e, {
      data: q
    }), {
      dataExtraLocalFiltered: Re,
      dataSortFiltered: J
    } = R1(e, {
      dataExtraLocal: M,
      dataSort: je,
      modelValueFiltered: _e
    }), {
      deselectAll: H,
      disabledDeselectAll: X,
      disabledSelectAll: ae,
      selectAll: ge
    } = v1(e, {
      changeModel: m,
      dataExtraLocalFiltered: Re,
      dataSortFiltered: J,
      modelValueFiltered: _e
    });
    return rt(oe, le), Je(mS, !0), G(), te(), {
      ariaDescribedbyLocal: S,
      attributesToExcludeFromRender: n,
      changeModelFromSelect: Be,
      clearModel: b,
      componentStyleHide: r,
      dataExtraLocalFiltered: Re,
      dataKeyByKeyIdLocal: O,
      dataLocal: q,
      dataSortFiltered: J,
      deleteItem: Ae,
      deselectAll: H,
      disabledDeselectAll: X,
      disabledSelectAll: ae,
      errorsId: I,
      hasDataExtra: U,
      helpTextId: v,
      htmlIdLocal: g,
      idForSelect: F,
      isErrors: R,
      loadingLocal: Te,
      loadingSearchApi: ie,
      modelValueFiltered: _e,
      onBlur: D,
      onDownItem: ve,
      onFocus: w,
      onUpItem: be,
      selectAll: ge,
      textAfterLabel: s,
      textBtnDeleteTitle: i,
      textBtnDownTitle: o,
      textBtnGroupAriaLabel: u,
      textBtnUpTitle: f,
      textDeselectAll: A,
      textGroupAllAriaLabel: E,
      textModelEmpty: p,
      textSelectAll: T
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Ln, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: void 0,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "multiselectOrdered"
    }, this.modelValueFiltered.length ? () => [
      c("ul", {}, [
        this.modelValueFiltered.map((e) => c(fi, {
          key: e,
          alwaysTranslate: this.alwaysTranslate,
          data: this.dataKeyByKeyIdLocal[e] || {},
          slotName: this.slotName,
          tag: "li"
        }, this.$slots))
      ])
    ] : "") : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__parent"
      }, [
        c("fieldset", {
          id: this.htmlIdLocal,
          tabindex: -1,
          class: ["a_fieldset", this.classFieldset, {
            a_fieldset_invalid: this.isErrors,
            a_fieldset_no_border: !this.hasBorder
          }],
          "aria-describedby": this.ariaDescribedbyLocal,
          ...this.attributesFieldset
        }, [
          this.label || this.labelScreenReader ? c(Ee, {
            type: "text",
            alwaysTranslate: this.alwaysTranslate,
            tag: "legend",
            class: [
              "a_legend",
              {
                a_legend_invalid: this.isErrors
              },
              this.labelClass
            ],
            extra: this.extra,
            html: this.label,
            textScreenReader: this.labelScreenReader,
            textAfter: this.textAfterLabel
          }) : "",
          c("div", {
            class: [
              "a_fieldset__content"
            ]
          }, [
            this.modelValueFiltered.length ? c("ul", {
              class: "a_list_group a_m_select_ordered__ul"
            }, this.modelValueFiltered.map((e, t) => c(m1, {
              id: this.htmlIdLocal,
              key: e,
              alwaysTranslate: this.alwaysTranslate,
              btnDeleteClass: this.btnDeleteClass,
              btnDeleteIcon: this.btnDeleteIcon,
              btnDeleteTitle: this.textBtnDeleteTitle,
              btnDownClass: this.btnDownClass,
              btnDownIcon: this.btnDownIcon,
              btnDownTitle: this.textBtnDownTitle,
              btnGroupAriaLabel: this.textBtnGroupAriaLabel,
              btnGroupClass: this.btnGroupClass,
              btnUpClass: this.btnUpClass,
              btnUpIcon: this.btnUpIcon,
              btnUpTitle: this.textBtnUpTitle,
              listItemClass: this.listItemClass,
              data: this.dataKeyByKeyIdLocal[e] || {},
              disabled: this.disabled,
              index: t,
              isLastItem: t === this.modelValueFiltered.length - 1,
              modelValue: e,
              slotName: this.slotName,
              onDeleteItem: this.deleteItem,
              onUpItem: this.onUpItem,
              onDownItem: this.onDownItem
            }, this.$slots))) : "",
            this.isDeselectAll || this.isSelectAll || !this.modelValueFiltered.length ? c("div", {
              class: "a_m_select_ordered__panel"
            }, [
              this.modelValueFiltered.length ? "" : c(pe, {
                class: "a_m_select_ordered__empty",
                tag: "div",
                html: this.textModelEmpty
              }),
              c(pe, {
                ariaLabel: this.textGroupAllAriaLabel,
                role: "group",
                class: "a_btn_group",
                tag: "div"
              }, () => [
                this.isSelectAll ? c(Ee, {
                  ariaDisabled: this.disabledSelectAll,
                  type: "button",
                  text: this.textSelectAll,
                  onClick: this.selectAll,
                  ...this.attributesBtnSelectAll,
                  class: [
                    this.attributesBtnDeselectAll.class || "a_btn a_btn_outline_secondary",
                    {
                      disabled: this.disabledSelectAll
                    }
                  ]
                }) : "",
                this.isDeselectAll ? c(Ee, {
                  ariaDisabled: this.disabledDeselectAll,
                  type: "button",
                  text: this.textDeselectAll,
                  onClick: this.deselectAll,
                  ...this.attributesBtnDeselectAll,
                  class: [
                    this.attributesBtnDeselectAll.class || "a_btn a_btn_outline_secondary",
                    {
                      disabled: this.disabledDeselectAll
                    }
                  ]
                }) : ""
              ])
            ]) : "",
            c(Us, {
              alwaysTranslate: this.alwaysTranslate,
              buttonClass: this.selectButtonClass,
              buttonClassDefault: this.selectButtonClassDefault,
              caretIcon: this.selectCaretIcon,
              change: this.changeModelFromSelect,
              data: this.dataSortFiltered,
              dataExtra: this.dataExtraLocalFiltered,
              disabled: this.disabled,
              extra: this.extra,
              hasCaret: this.selectHasCaret,
              id: this.idForSelect,
              inBody: this.selectInBody,
              isCloseByClick: this.selectIsCloseByClick,
              isDataSimpleArray: this.isDataSimpleArray,
              isLabelFloat: this.selectIsLabelFloat,
              isSelectionCloseable: this.selectIsSelectionCloseable,
              keyDisabled: this.keyDisabled,
              keyDisabledCallback: this.keyDisabledCallback,
              keyGroup: this.keyGroup,
              keyGroupLabelCallback: this.keyGroupLabelCallback,
              keyId: this.keyId,
              keyLabel: this.keyLabel,
              keyLabelCallback: this.keyLabelCallback,
              label: this.selectLabel,
              labelClass: this.selectLabelClass,
              labelScreenReader: this.selectLabelScreenReader,
              loading: this.loading,
              menuWidthType: this.selectMenuWidthType,
              options: this.options,
              placeholder: this.selectPlaceholder,
              placement: this.selectPlacement,
              popperContainerId: this.selectPopperContainerId,
              search: this.search,
              searchInGroup: this.searchInGroup,
              searchTimeout: this.searchTimeout,
              searchTextInHtml: this.searchTextInHtml,
              selectMenuClass: this.selectMenuClass,
              slotName: this.slotName,
              type: "multiselect"
            }, this.$slots)
          ])
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function D1(e) {
  const t = d(e, "label");
  return {
    hasLabel: _(() => !se(t.value))
  };
}
function N1(e) {
  const t = d(e, "modelValue"), n = d(e, "trueValue"), r = d(e, "falseValue");
  return {
    modelValueReadonly: _(() => t.value === n.value ? "_YES_" : t.value === r.value ? "_NO_" : t.value)
  };
}
function B1(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "modelValue"), r = d(e, "trueValue"), s = d(e, "falseValue"), i = d(e, "disabled"), o = _(() => n.value === r.value), u = (A) => {
    i.value || (setTimeout(() => {
      const E = o.value ? s.value : r.value;
      t({
        model: E,
        $event: A
      });
    }), A.stopPropagation(), A.preventDefault());
  };
  return {
    isChecked: o,
    onClick: u,
    onKeydown: (A) => {
      (A.keyCode === Z.enter || A.keyCode === Z.space) && u(A);
    }
  };
}
const qu = {
  name: "AOneCheckbox",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    falseValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_one_checkbox_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelTitle: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    trueValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !0
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = Vl(e), {
      attributesToExcludeFromRender: r
    } = Bt(e), {
      componentStyleHide: s
    } = Xt(e), {
      ariaDescribedbyLocal: i,
      changeModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = zt(e, t), {
      isChecked: S,
      onClick: m,
      onKeydown: b
    } = B1(e, {
      changeModel: o
    }), {
      hasLabel: I
    } = D1(e), {
      modelValueReadonly: v
    } = N1(e);
    return {
      ariaDescribedbyLocal: i,
      attributesToExcludeFromRender: r,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: u,
      hasLabel: I,
      helpTextId: f,
      htmlIdLocal: A,
      isChecked: S,
      isErrors: E,
      modelValueReadonly: v,
      onBlur: p,
      onClick: m,
      onFocus: T,
      onKeydown: b
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Ln, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.modelValueReadonly,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "oneCheckbox"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent"]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            class: ["a_custom_control a_custom_checkbox", {
              a_custom_control_invalid: this.isErrors
            }]
          }, [
            c("input", {
              id: this.htmlIdLocal,
              value: this.modelValue,
              type: "checkbox",
              checked: this.isChecked,
              class: "a_custom_control_input",
              disabled: this.disabledAttribut,
              ariaRequired: this.required,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              indeterminate: this.indeterminate,
              ...this.inputAttributes,
              onClick: this.onClick,
              onKeydown: this.onKeydown,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }),
            c(Ee, {
              alwaysTranslate: this.alwaysTranslate,
              class: [
                "a_custom_control_label",
                {
                  a_custom_control_label_width_auto: this.isWidthAuto
                }
              ],
              extra: this.extra,
              for: this.htmlIdLocal,
              tag: "label",
              title: this.isLabelTitle ? this.label : void 0,
              type: "text",
              ...this.labelAttributes
            }, () => {
              var e;
              return [
                (e = this.$slots) != null && e[this.slotName] ? this.$slots[this.slotName]({
                  id: this.htmlIdLocal,
                  labelClass: [
                    "a_custom_control_label__text",
                    this.labelClass
                  ],
                  label: this.label,
                  labelScreenReader: this.labelScreenReader,
                  props: this.$props,
                  required: this.required
                }) : this.hasLabel && c("span", {
                  class: [
                    "a_custom_control_label__text",
                    this.labelClass
                  ]
                }, [
                  c(Ee, {
                    alwaysTranslate: this.alwaysTranslate,
                    extra: this.extra,
                    html: this.label,
                    textScreenReader: this.labelScreenReader,
                    tag: "span",
                    title: this.isLabelTitle ? this.label : void 0,
                    type: "text"
                  }),
                  this.required ? c("span", null, "*") : ""
                ])
              ];
            })
          ])
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function w1(e, {
  changeModel: t = () => {
  },
  dataKeyByKeyIdLocal: n = _(() => ({}))
}) {
  const r = d(e, "disabled"), s = d(e, "isModelArray"), i = d(e, "modelValue");
  return {
    onChangeModelValue: ({ model: u, $event: f }) => {
      r.value || (s.value ? !i.value || i.value.length === 0 ? setTimeout(() => {
        t({
          model: [u],
          $event: f
        });
      }) : setTimeout(() => {
        const A = [];
        z(i.value, (E) => {
          n.value[E] || A.push(E);
        }), A.push(u), t({
          model: A,
          $event: f
        });
      }) : setTimeout(() => {
        t({
          model: u,
          $event: f
        });
      }));
    }
  };
}
function P1(e, {
  dataKeyByKeyIdLocal: t = _(() => ({}))
}) {
  const n = d(e, "isModelArray"), r = d(e, "modelValue");
  return {
    modelValueItemReadonly: _(() => {
      var i;
      if (n.value) {
        let o;
        return (i = r.value) != null && i.length && cl.forEach(r.value, (u) => {
          if (u in t.value)
            return o = t.value[u], !1;
        }), o;
      }
      return t.value[r.value];
    })
  };
}
const bS = {
  name: "ARadio",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    attributesFieldset: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    classDataParent: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => []
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_radio_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inline: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isModelArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: void 0
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "value"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    search: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: void 0
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrder: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_",
        notElementsWithSearch: "_A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_",
        search: "_A_RADIO_SEARCH_"
      })
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "focusin",
    "focusout",
    "onSearchOutside",
    "toggleCollapse",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      componentStyleHide: r
    } = Xt(e), {
      ariaDescribedbyLocal: s,
      changeModel: i,
      errorsId: o,
      helpTextId: u,
      htmlIdLocal: f,
      isErrors: A,
      onFocusin: E,
      onFocusout: p,
      rootRef: T
    } = zt(e, t), {
      textAfterLabel: S
    } = n_(e), {
      dataFromServer: m,
      dataExtraLocal: b,
      dataKeyByKeyIdLocal: I,
      dataLocal: v,
      hasDataExtra: g
    } = e_(e), {
      loadDataFromServer: R,
      loadDataFromServerForSearchAPI: D,
      loadingDataFromServer: w,
      loadingSearchApi: F,
      onSearchInApi: P,
      searchApiLocal: M,
      updateUrlPropsComputed: O,
      urlPropsComputed: q
    } = Zu(e, {
      changeModel: i,
      dataExtraLocal: b,
      dataFromServer: m
    }), {
      loadingLocal: U
    } = t_(e, {
      loadingDataFromServer: w
    });
    Qu(t, {
      dataKeyByKeyIdLocal: I,
      dataLocal: v
    });
    const {
      dataSort: G
    } = Ju(e, {
      data: v
    }), {
      dataGrouped: te,
      groupsForLever: re,
      hasKeyGroup: ie,
      keyGroupArray: le
    } = Of(e, {
      data: G
    }), {
      hasNotElementsExtraWithSearch: oe,
      hasNotElementsWithSearch: Te,
      idForButtonSearchOutside: Be,
      modelSearch: Ae,
      modelSearchLowerCase: _e,
      modelSearchOutside: ve,
      onSearchOutside: be,
      searching: je,
      searchingElements: Re,
      searchingElementsExtra: J,
      searchingGroups: H,
      searchingGroupsWithSearchInGroup: X,
      searchOutsideOrApi: ae,
      searchOutsideRef: ge,
      updateModelSearch: Ce,
      updateModelSearchOutside: ke
    } = Df(e, t, {
      data: G,
      dataExtra: b,
      groupsForLever: re,
      htmlIdLocal: f,
      hasKeyGroup: ie,
      keyGroupArray: le,
      searchApiLocal: M,
      onSearchInApi: P
    }), {
      onChangeModelValue: Qe
    } = w1(e, {
      changeModel: i,
      dataKeyByKeyIdLocal: I
    }), {
      iconCollapse: Ue,
      initIsCollapsedLocal: $e,
      isCollapsedLocal: it,
      titleCollapse: Ke,
      toggleCollapse: lt
    } = Cf(e, t), {
      groupId: et
    } = _f(e, {
      htmlIdLocal: f
    }), {
      modelValueItemReadonly: ht
    } = P1(e, {
      dataKeyByKeyIdLocal: I
    });
    return rt(q, O), $e(), R(), D(), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      componentStyleHide: r,
      dataExtraLocal: b,
      dataGrouped: te,
      dataSort: G,
      errorsId: o,
      groupId: et,
      groupsForLever: re,
      hasDataExtra: g,
      hasKeyGroup: ie,
      hasNotElementsExtraWithSearch: oe,
      hasNotElementsWithSearch: Te,
      helpTextId: u,
      htmlIdLocal: f,
      iconCollapse: Ue,
      idForButtonSearchOutside: Be,
      isCollapsedLocal: it,
      isErrors: A,
      loadingLocal: U,
      loadingSearchApi: F,
      modelSearch: Ae,
      modelSearchLowerCase: _e,
      modelSearchOutside: ve,
      modelValueItemReadonly: ht,
      onChangeModelValue: Qe,
      onFocusin: E,
      onFocusout: p,
      onSearchOutside: be,
      rootRef: T,
      searching: je,
      searchingElements: Re,
      searchingElementsExtra: J,
      searchingGroups: H,
      searchingGroupsWithSearchInGroup: X,
      searchOutsideOrApi: ae,
      searchOutsideRef: ge,
      textAfterLabel: S,
      titleCollapse: Ke,
      toggleCollapse: lt,
      updateModelSearch: Ce,
      updateModelSearchOutside: ke
    };
  },
  render() {
    var e, t, n;
    return this.isRender ? this.readonly ? c(Ln, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: void 0,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "radio"
    }, this.modelValueItemReadonly ? () => [
      c(jo, {
        id: this.htmlIdLocal,
        alwaysTranslate: this.alwaysTranslate,
        dataItem: this.modelValueItemReadonly,
        itemIndex: -1,
        modelValue: this.modelValue,
        readonly: !0,
        slotAppendName: this.slotAppendName,
        slotName: this.slotName
      }, this.$slots)
    ] : void 0) : c("div", {
      ref: "rootRef",
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      onFocusin: this.onFocusin,
      onFocusout: this.onFocusout,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: [
          "a_form_element__parent",
          {
            a_radio_inline: this.inline
          }
        ]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("fieldset", {
            id: this.htmlIdLocal,
            tabindex: -1,
            class: [
              "a_fieldset",
              this.classFieldset,
              {
                a_fieldset_no_border: !this.hasBorder,
                a_fieldset_invalid: this.isErrors,
                a_fieldset_collapsed: this.isCollapsedLocal
              }
            ],
            "aria-describedby": this.ariaDescribedbyLocal,
            ...this.attributesFieldset
          }, [
            this.label || this.labelScreenReader ? c(Ee, {
              type: "text",
              alwaysTranslate: this.alwaysTranslate,
              tag: "legend",
              class: [
                "a_legend",
                {
                  a_legend_invalid: this.isErrors
                },
                this.labelClass
              ],
              extra: this.extra,
              html: this.label,
              textScreenReader: this.labelScreenReader,
              textAfter: this.textAfterLabel
            }) : "",
            this.collapsible ? c(Ee, {
              "aria-controls": this.groupId,
              "aria-expanded": !this.isCollapsedLocal,
              alwaysTranslate: this.alwaysTranslate,
              class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
              iconLeft: this.iconCollapse,
              title: this.titleCollapse,
              textScreenReader: this.titleCollapse,
              type: "button",
              onClick: this.toggleCollapse
            }) : "",
            c("div", {
              id: this.groupId,
              class: "a_fieldset__content"
            }, [
              this.searchOutsideOrApi ? c("div", {
                class: "a_fieldset__search"
              }, [
                c("form", {
                  onSubmit: this.onSearchOutside
                }, [
                  c("div", {
                    class: "input-group"
                  }, [
                    c(Rn, {
                      alwaysTranslate: this.alwaysTranslate,
                      label: ((e = this.texts) == null ? void 0 : e.search) || "_A_RADIO_SEARCH_",
                      inputClass: "a_select__element_clickable",
                      modelValue: this.modelSearchOutside,
                      modelUndefined: "",
                      "onUpdate:modelValue": this.updateModelSearchOutside
                    }),
                    c(Ee, {
                      alwaysTranslate: this.alwaysTranslate,
                      ariaDisabled: this.loadingSearchApi,
                      class: "a_btn a_btn_primary",
                      disabled: this.disabled,
                      iconLeft: Fl,
                      type: "submit"
                    })
                  ])
                ])
              ]) : "",
              this.search ? c(Rn, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_fieldset__search",
                label: ((t = this.texts) == null ? void 0 : t.search) || "_A_RADIO_SEARCH_",
                modelValue: this.modelSearch,
                modelUndefined: "",
                "onUpdate:modelValue": this.updateModelSearch
              }) : "",
              this.loadingLocal ? c(vl) : "",
              this.hasDataExtra ? c("div", {
                class: "a_radio__data_extra"
              }, [
                ...this.dataExtraLocal.map((r, s) => c(jo, {
                  key: r[we],
                  id: this.htmlIdLocal,
                  alwaysTranslate: this.alwaysTranslate,
                  idSuffix: "extra",
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataItem: r,
                  disabled: this.disabled,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  itemIndex: s,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElementsExtra,
                  searchTextInHtml: this.searchTextInHtml,
                  slotName: this.slotName,
                  slotAppendName: this.slotAppendName,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.hasNotElementsExtraWithSearch ? "" : c("div", {
                  class: "a_divider",
                  ariaHidden: !0
                })
              ]) : "",
              c("div", {}, this.hasKeyGroup ? [
                c(cf, {
                  id: `${this.htmlIdLocal}_lev_0`,
                  alwaysTranslate: this.alwaysTranslate,
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataGrouped: this.dataGrouped,
                  disabled: this.disabled,
                  groupsForLever: this.groupsForLever,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  levelIndex: 0,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElements,
                  searchingGroups: this.searchingGroups,
                  searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                  searchTextInHtml: this.searchTextInHtml,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  type: "radio",
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)
              ] : [
                c("div", {
                  class: [
                    "a_radio_data",
                    {
                      a_btn_group: this.isButtonGroup
                    },
                    this.classDataParent
                  ]
                }, [
                  ...this.dataSort.map((r, s) => c(jo, {
                    key: r[we],
                    id: this.htmlIdLocal,
                    alwaysTranslate: this.alwaysTranslate,
                    classButtonGroupDefault: this.classButtonGroupDefault,
                    dataItem: r,
                    disabled: this.disabled,
                    isButtonGroup: this.isButtonGroup,
                    isErrors: this.isErrors,
                    isWidthAuto: this.isWidthAuto,
                    itemIndex: s,
                    keyDisabled: this.keyDisabled,
                    keyTitle: this.keyTitle,
                    keyTitleCallback: this.keyTitleCallback,
                    modelSearch: this.modelSearchLowerCase,
                    modelValue: this.modelValue,
                    searching: this.searching,
                    searchingElements: this.searchingElements,
                    searchTextInHtml: this.searchTextInHtml,
                    slotName: this.slotName,
                    slotAppendName: this.slotAppendName,
                    onChangeModelValue: this.onChangeModelValue
                  }, this.$slots))
                ])
              ]),
              !this.dataSort.length || this.hasNotElementsWithSearch ? c(pe, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_form__not_elements",
                text: ((n = this.texts) == null ? void 0 : n.notElementsWithSearch) || "_A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_"
              }) : ""
            ])
          ])
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function x1(e, {
  changeQueryModel: t = () => {
  },
  changeRouteModel: n = () => {
  },
  changeTargetModel: r = () => {
  },
  childrenForParam: s = _(() => []),
  hasParam: i = _(() => !1),
  htmlIdLocal: o = _(() => ""),
  routesLocal: u = _(() => [])
}) {
  const f = d(e, "helpTextParam"), A = d(e, "helpTextQuery"), E = d(e, "helpTextRoute"), p = d(e, "helpTextTarget"), T = d(e, "keyIdRoute"), S = d(e, "keyLabelCallbackRoute"), m = d(e, "keyLabelRoute"), b = d(e, "labelParam"), I = d(e, "labelQuery"), v = d(e, "labelRoute"), g = d(e, "labelTarget"), R = d(e, "modelValue"), D = d(e, "readonlyDefaultParam"), w = d(e, "readonlyDefaultQuery"), F = d(e, "readonlyDefaultRoute"), P = d(e, "readonlyDefaultTarget"), M = d(e, "required"), O = d(e, "sortOrderRoute"), q = d(e, "targets");
  return {
    dataFormChildren: _(() => {
      var G, te;
      return [
        {
          id: "route",
          change: n,
          data: u.value,
          deselectable: !0,
          helpText: E.value,
          idPrefix: o.value,
          isLabelFloat: !1,
          keyId: T.value,
          keyLabel: m.value,
          keyLabelCallback: S.value,
          label: v.value,
          readonlyDefault: F.value,
          required: M.value,
          search: !0,
          sortOrder: O.value,
          type: "select"
        },
        {
          id: "param",
          children: s.value,
          helpText: f.value,
          idPrefix: o.value,
          isRender: i.value,
          label: b.value,
          readonlyDefault: D.value,
          required: M.value,
          type: "fieldset"
        },
        {
          isHide: !((G = R.value) != null && G.route),
          id: "query",
          change: t,
          heightCss: "100px",
          helpText: A.value,
          idPrefix: o.value,
          label: I.value,
          readonlyDefault: w.value,
          type: "json"
        },
        {
          isHide: !((te = R.value) != null && te.route),
          id: "target",
          change: r,
          data: q.value,
          deselectable: !0,
          helpText: p.value,
          idPrefix: o.value,
          isLabelFloat: !1,
          keyId: "id",
          keyLabel: "label",
          label: g.value,
          readonlyDefault: P.value,
          translateData: !0,
          type: "select"
        }
      ];
    })
  };
}
function M1(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "modelValue");
  return {
    changeParamModel: ({ model: u, id: f }) => {
      const A = he(n.value) || {};
      A.param = A.param || {}, A.param[f] = u, t({ model: A });
    },
    changeQueryModel: ({ model: u }) => {
      const f = he(n.value) || {};
      f.query = u, t({ model: f });
    },
    changeRouteModel: ({ model: u }) => {
      var f;
      t(u ? {
        model: {
          route: u,
          query: (f = n.value) == null ? void 0 : f.query
        }
      } : {
        model: {}
      });
    },
    changeTargetModel: ({ model: u }) => {
      const f = he(n.value) || {};
      f.target = u, t({ model: f });
    }
  };
}
function F1(e, {
  changeParamModel: t = () => {
  },
  htmlIdLocal: n = _(() => ""),
  routePathKeyByKeyId: r = _(() => ({}))
}) {
  const s = d(e, "modelValue"), i = d(e, "required"), o = (E) => {
    const p = /:([a-zA-Z0-9_]+)/g, T = [];
    let S;
    for (; (S = p.exec(E)) !== null; )
      T.push(S[1]);
    return T;
  }, u = _(() => {
    var E;
    return (E = s.value) != null && E.route ? o(r.value[s.value.route]) : [];
  }), f = _(() => u.value.length > 0);
  return {
    childrenForParam: _(() => {
      const E = [];
      return z(u.value, (p) => {
        const T = {
          id: `param.${p}`,
          change: ({ model: S }) => t({ model: S, id: p }),
          label: p,
          type: "text",
          idPrefix: n.value,
          required: i.value
        };
        E.push(T);
      }), E;
    }),
    hasParam: f
  };
}
function q1(e) {
  const t = d(e, "keyIdRoute"), n = d(e, "routes"), r = _(() => n.value);
  return {
    routePathKeyByKeyId: _(() => {
      const i = {};
      return z(r.value, (o) => {
        const u = ce(o, t.value);
        i[u] = o.path;
      }), i;
    }),
    routesLocal: r
  };
}
const $1 = {
  name: "ARouterLinkConfig",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    attributesFieldset: {
      type: Object,
      required: !1,
      default: () => Et.propsDefault.attributesFieldset
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classColumn: {
      type: [String, Object],
      required: !1,
      default: () => Et.propsDefault.classColumn
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: () => Et.propsDefault.classColumns
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: () => Et.propsDefault.classFieldset
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => Et.propsDefault.excludeRenderAttributes
    },
    extra: {
      type: Object,
      required: !1,
      default: () => Et.propsDefault.extra
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: () => Et.propsDefault.hasBorder
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    helpTextParam: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.helpTextParam
    },
    helpTextQuery: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.helpTextQuery
    },
    helpTextRoute: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.helpTextRoute
    },
    helpTextTarget: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.helpTextTarget
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_router_link_config_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyIdRoute: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.keyIdRoute
    },
    keyLabelCallbackRoute: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyLabelRoute: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.keyLabelRoute
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: () => Et.propsDefault.labelClass
    },
    labelParam: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.labelParam
    },
    labelQuery: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.labelQuery
    },
    labelRoute: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.labelRoute
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelTarget: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.labelTarget
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.readonlyDefault
    },
    readonlyDefaultParam: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.readonlyDefaultParam
    },
    readonlyDefaultQuery: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.readonlyDefaultQuery
    },
    readonlyDefaultRoute: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.readonlyDefaultRoute
    },
    readonlyDefaultTarget: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.readonlyDefaultTarget
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    routes: {
      type: Array,
      required: !1,
      default: () => Et.propsDefault.routes
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrderRoute: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.sortOrderRoute,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    targets: {
      type: Array,
      required: !1,
      default: () => Et.propsDefault.targets
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      changeModel: n,
      htmlIdLocal: r
    } = zt(e, t), {
      changeParamModel: s,
      changeQueryModel: i,
      changeRouteModel: o,
      changeTargetModel: u
    } = M1(e, {
      changeModel: n
    }), {
      routePathKeyByKeyId: f,
      routesLocal: A
    } = q1(e), {
      childrenForParam: E,
      hasParam: p
    } = F1(e, {
      changeParamModel: s,
      htmlIdLocal: r,
      routePathKeyByKeyId: f
    }), {
      dataFormChildren: T
    } = x1(e, {
      changeQueryModel: i,
      changeRouteModel: o,
      changeTargetModel: u,
      childrenForParam: E,
      hasParam: p,
      htmlIdLocal: r,
      routesLocal: A
    });
    return {
      dataFormChildren: T,
      hasParam: p,
      htmlIdLocal: r
    };
  },
  render() {
    return c(yS, {
      ...this.$attrs,
      alwaysTranslate: this.alwaysTranslate,
      attributesFieldset: this.attributesFieldset,
      classColumn: this.classColumn,
      classColumns: this.classColumns,
      classFieldset: this.classFieldset,
      disabled: this.disabled,
      errors: this.errors,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      hasBorder: this.hasBorder,
      helpText: this.helpText,
      htmlId: this.htmlId,
      id: this.id,
      idPrefix: this.idPrefix,
      inputAttributes: this.inputAttributes,
      isHide: this.isHide,
      isRender: this.isRender,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelUndefined: this.modelUndefined,
      modelValue: this.modelValue,
      readonly: this.readonly,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      slotName: this.slotName,
      children: this.dataFormChildren,
      "onUpdate:modelValue": this.$emit["update:modelValue"]
    });
  }
};
function U1(e, { emit: t }) {
  const n = d(e, "data"), r = _(() => n.value[we]);
  return {
    closeModel: ({ $event: i }) => {
      t("changeModelValue", {
        currentValue: r.value,
        $event: i,
        isSelected: !0
      });
    }
  };
}
function k1(e) {
  const t = d(e, "data");
  return {
    currentLabel: _(() => t.value[vt])
  };
}
const Ta = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
  <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z"/>
</svg>`, np = {
  name: "ASelectValueCloseable",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hideDeleteButton: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      currentLabel: n
    } = k1(e), {
      closeModel: r
    } = U1(e, t);
    return {
      closeModel: r,
      currentLabel: n
    };
  },
  render() {
    return c("li", {
      class: "a_select__ul_closeable__item"
    }, [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        item: this.data,
        label: this.currentLabel,
        inDropdown: !1
      }) : c(pe, {
        alwaysTranslate: this.alwaysTranslate,
        tag: "span",
        html: this.currentLabel,
        extra: this.data.extra
      }),
      this.hideDeleteButton ? "" : c(Ee, {
        class: "a_btn a_btn_link a_select__ul_closeable__item__btn",
        disabled: this.disabled,
        iconLeft: Ta,
        prevent: !0,
        stop: !0,
        tabindex: -1,
        type: "button",
        onClick: this.closeModel
      })
    ]);
  }
};
function H1(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = d(e, "disabled"), r = _(() => `${t.value}_container`), s = _(() => `${t.value}_list`), i = _(() => `${t.value}_label`), o = _(() => n.value ? void 0 : 0);
  return {
    ariaLabelledby: i,
    containerId: r,
    idForList: s,
    tabindex: o
  };
}
function V1(e) {
  const t = d(e, "disabled"), n = d(e, "exclusiveOptionValue"), r = d(e, "isExclusiveOptionEnabled"), s = d(e, "modelValue"), i = _(() => r.value ? s.value && s.value.indexOf(n.value) !== -1 : !1), o = _(() => i.value || t.value), u = _(() => o.value || void 0);
  return {
    disabledAttribut: _(() => t.value || void 0),
    disabledLocal: o,
    disabledLocalAttribut: u,
    isExclusiveOptionSelected: i
  };
}
function W1(e, {
  isMultiselect: t = _(() => !1)
}) {
  const n = d(e, "isSelectAll"), r = d(e, "isDeselectAll");
  return {
    isDividerSelectDeselectVisible: _(() => t.value && (n.value || r.value))
  };
}
function G1(e) {
  const t = d(e, "exclusiveOptionLabel"), n = d(e, "exclusiveOptionValue"), r = d(e, "extra"), s = d(e, "isExclusiveOptionEnabled"), i = d(e, "searchTextInHtml"), o = _(() => {
    if (s.value) {
      const f = Dt({
        placeholder: t.value,
        extra: r.value
      }), A = {
        [we]: n.value,
        [vt]: f
      };
      return i.value && (A[di] = Wc(f)), A;
    }
  }), u = _(() => $a([o.value], we));
  return {
    exclusiveOption: o,
    exclusiveDataKeyByKeyIdLocal: u
  };
}
function j1(e, {
  dataKeyByKeyIdLocal: t = _(() => ({}))
}) {
  const n = d(e, "countMultiselect"), r = d(e, "exclusiveOptionValue"), s = d(e, "modelValue"), i = d(e, "type"), o = _(() => i.value === "multiselect"), u = _(() => !o.value || !s.value || !Se(s.value) ? [] : mt(s.value, (T) => t.value[T] || T === r.value)), f = _(() => o.value ? u.value.length > 0 : !se(s.value)), A = _(() => {
    var T;
    return ((T = u.value) == null ? void 0 : T.length) || 0;
  }), E = _(() => A.value > n.value), p = _(() => ({
    [vt]: "_A_SELECT_MORE_SELECTED_{{count}}_",
    extra: {
      count: A.value - n.value
    }
  }));
  return {
    isModelLengthLimitExceeded: E,
    isModelValue: f,
    isMultiselect: o,
    limitExceededModelData: p,
    modelValueLength: A,
    modelValueMultiselectFiltered: u
  };
}
function K1(e, {
  changeModel: t = () => {
  },
  dataAll: n = _(() => []),
  dataKeyByKeyIdLocal: r = _(() => ({})),
  disabledLocal: s = _(() => !1),
  isMultiselect: i = _(() => !1),
  togglePopover: o = () => {
  }
}) {
  const u = d(e, "countMultiselect"), f = d(e, "disabled"), A = d(e, "exclusiveOptionValue"), E = d(e, "isCloseByClick"), p = d(e, "isExclusiveOptionEnabled"), T = d(e, "deselectable"), S = d(e, "maxCountMultiselect"), m = d(e, "modelValue"), b = _(() => !i.value || !S.value ? !1 : ce(m.value, "length") >= S.value), I = _(() => Pe(E.value) ? !i.value : E.value), v = ({ currentValue: P, $event: M, isSelected: O }) => {
    let q;
    if (i.value)
      if (q = he(m.value) || [], O) {
        const U = q.indexOf(P);
        q.splice(U, 1), p.value && P === A.value && (q = []);
      } else if (p.value && P === A.value)
        q = [P];
      else {
        if (b.value)
          return;
        q.push(P);
      }
    else if (O)
      if (T.value)
        q = void 0;
      else
        return;
    else
      q = P;
    t({
      model: q,
      $event: M,
      currentModel: P,
      item: r.value[P]
    }), I.value && o();
  }, g = (P) => {
    const M = DT(m.value, u.value);
    t({
      model: M,
      $event: P
    });
  }, R = () => {
    if (s.value)
      return;
    const P = n.value.map((M) => M[we]);
    t({
      model: P
    });
  }, D = (P) => {
    const M = P.keyCode;
    (M === Z.enter || M === Z.space) && (R(), P.preventDefault());
  }, w = () => {
    f.value || t({
      model: []
    });
  };
  return {
    deleteExceededItems: g,
    onChangeModelValue: v,
    onDeselectAll: w,
    onKeydownDeselectAll: (P) => {
      const M = P.keyCode;
      (M === Z.enter || M === Z.space) && (w(), P.preventDefault());
    },
    onKeydownSelectAll: D,
    onSelectAll: R
  };
}
function z1(e, {
  dataKeyByKeyIdLocal: t = _(() => ({})),
  isModelLengthLimitExceeded: n,
  isModelValue: r = _(() => !1),
  isMultiselect: s,
  modelValueLength: i,
  modelValueMultiselectFiltered: o = _(() => [])
}) {
  const u = d(e, "isSelectionCloseable"), f = d(e, "keyTitle"), A = d(e, "keyTitleCallback"), E = d(e, "modelValue"), p = ({ item: m }) => Ne(A.value) ? A.value({ item: m, inDropdown: !1 }) || "" : f.value ? ce(m, f.value) || "" : m[vt], T = _(() => {
    if (!r.value)
      return;
    let m = "";
    if (s.value)
      u.value || !n.value ? z(o.value, (b, I) => {
        const v = t.value[b] || {};
        m += `${I > 0 ? ", " : ""}${p({ item: v })}`;
      }) : m = `${i.value} ausgewählt`;
    else {
      const b = t.value[E.value] || {};
      m = p({ item: b });
    }
    return m;
  });
  return {
    hasSelectedTitle: _(() => !!T.value),
    selectedTitle: T
  };
}
function Y1({
  $elements: e = _(() => []),
  clickOutsideCallback: t = () => {
  }
}) {
  const n = B("ontouchend" in document ? "touchstart" : "click"), r = (o) => {
    let u = !1;
    z(e.value, (f) => {
      if (f === o.target || f.contains(o.target))
        return u = !0, !1;
    }), u || t();
  }, s = () => {
    document.addEventListener(n.value, r);
  }, i = () => {
    document.removeEventListener(n.value, r);
  };
  return Ot(() => i()), {
    setEventClickOutside: s,
    destroyEventClickOutside: i
  };
}
const rp = ".a_select__element_clickable:not([disabled]):not([data-hide])";
function X1(e, {
  emit: t
}, {
  closePopup: n = () => {
  },
  htmlIdLocal: r = _(() => ""),
  openPopup: s = () => {
  }
}) {
  const i = d(e, "disabled"), o = d(e, "menuWidthType"), u = B(void 0), f = B(void 0), A = B(!1), E = B(void 0), p = B(void 0), T = d(e, "placement"), S = B(void 0), m = _(() => [
    u.value,
    E.value
  ]), b = _(() => {
    if (o.value === "as_button")
      return u.value.clientWidth;
  }), {
    setEventClickOutside: I,
    destroyEventClickOutside: v
  } = Y1({
    $elements: m,
    clickOutsideCallback: ie
  }), g = ({ isArrowDown: le }) => {
    const oe = p.value.querySelectorAll(rp);
    if (oe.length === 0)
      return;
    let Te = !1;
    z(oe, (Be, Ae) => {
      if (Be === document.activeElement)
        return Te = !0, le ? Ae < oe.length - 1 && oe[Ae + 1].focus() : Ae > 0 && oe[Ae - 1].focus(), !1;
    }), Te || oe[0].focus();
  }, R = () => {
    u.value.focus();
  }, D = (le) => {
    const oe = le.keyCode, Te = oe === Z.arrowDown;
    Te || oe === Z.arrowUp ? (g({ isArrowDown: Te }), le.preventDefault()) : oe === Z.escape ? (ie(), R(), le.preventDefault(), le.stopPropagation()) : oe === Z.tab && (ie(), R());
  }, w = () => {
    f.value && (f.value(), f.value = void 0);
  }, F = () => {
    s({
      id: r.value
    }), t("open");
  }, P = () => {
    const le = p.value.querySelector(rp);
    le && le.focus();
  }, M = () => {
    S.value || (S.value = !0, document.addEventListener("keydown", D));
  }, O = () => {
    F(), setTimeout(() => {
      P(), M();
    });
  }, q = () => {
    !f.value && u.value && p.value && (f.value = wl(
      u.value,
      p.value,
      () => {
        !u.value || !p.value || Ml(
          u.value,
          p.value,
          {
            placement: T.value,
            middleware: [
              xl(),
              Pl({ limiter: Mu() })
            ]
          }
        ).then(({ x: le, y: oe }) => {
          if (!u.value.clientWidth) {
            ie();
            return;
          }
          const Te = {
            left: `${le}px`,
            top: `${oe}px`
          };
          b.value && (Te.maxWidth = `${b.value}px`, Te.minWidth = `${b.value}px`), Object.assign(p.value.style, Te);
        });
      }
    ), O());
  }, U = () => {
    i.value || (A.value = !0, I(), q());
  }, G = () => {
    A.value ? (ie(), R()) : U();
  }, te = (le) => {
    const oe = le.keyCode;
    oe === Z.enter || oe === Z.space ? (G(), le.preventDefault()) : !A.value && (oe === Z.arrowUp || oe === Z.arrowDown) && (U(), le.preventDefault());
  }, re = () => {
    S.value && (S.value = !1, document.removeEventListener("keydown", D));
  };
  function ie() {
    A.value = !1, w(), v(), re(), n({
      id: r.value
    });
  }
  return Ot(() => re()), {
    buttonRef: u,
    handleKeydown: te,
    isOpen: A,
    menuParentRef: E,
    menuRef: p,
    togglePopover: G
  };
}
const me = {
  propsDefault: {
    buttonClass: void 0,
    caretIcon: Ha,
    countMultiselect: 4,
    dataExtra: [],
    exceededItemsDeletable: !0,
    inBody: !0,
    isCloseByClick: void 0,
    isDataSimpleArray: !1,
    deselectable: !0,
    isDeselectAll: !1,
    isSelectAll: !1,
    isSelectionCloseable: !0,
    keyDisabled: void 0,
    keyGroup: void 0,
    keyId: "value",
    keyLabel: "label",
    keyTitle: void 0,
    maxCountMultiselect: void 0,
    menuWidthType: "as_button",
    modelValue: void 0,
    placement: "bottom-end",
    popperContainerId: "a_select_container",
    readonlyDefault: "",
    search: !1,
    searchApi: !1,
    searchApiKey: void 0,
    searchOutside: !1,
    searchTextInHtml: !1,
    searchTimeout: 0,
    slotName: void 0,
    sortOrder: void 0,
    sortOrderGroup: void 0,
    textDeselectAll: "Alle abwählen",
    textSelectAll: "Alle auswählen",
    translateData: !1,
    type: "select"
  }
}, xhe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    me.propsDefault = {
      ...me.propsDefault,
      ...t
    };
  }
}, Us = {
  name: "ASelect",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonClass: {
      type: String,
      required: !1,
      default: () => me.propsDefault.buttonClass
    },
    buttonClassDefault: {
      type: [String, Object],
      required: !1,
      default: "a_form_control a_select_toggle"
    },
    caretIcon: {
      type: [String, Object],
      required: !1,
      default: () => me.propsDefault.caretIcon
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    class: {
      type: [String, Object],
      required: !1
    },
    countMultiselect: {
      type: Number,
      required: !1,
      default: () => me.propsDefault.countMultiselect
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => me.propsDefault.dataExtra
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    deselectable: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.deselectable
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    exceededItemsDeletable: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.exceededItemsDeletable
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    exclusiveOptionLabel: {
      type: String,
      required: !1,
      default: "_A_SELECT_EXCLUSIVE_"
    },
    exclusiveOptionValue: {
      type: [String, Number, Boolean],
      required: !1,
      default: "_exclusive_"
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_ui_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inBody: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.inBody
    },
    isCloseByClick: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.isCloseByClick
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.isDataSimpleArray
    },
    isDeselectAll: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.isDeselectAll
    },
    isExclusiveOptionEnabled: {
      type: Boolean,
      required: !1,
      default: !1,
      validator: (e, t) => (t == null ? void 0 : t.type) !== "multiselect" ? e === !1 : !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSelectAll: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.isSelectAll
    },
    isSelectionCloseable: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.isSelectionCloseable
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: () => me.propsDefault.keyDisabled
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: () => me.propsDefault.keyGroup
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: () => me.propsDefault.keyId
    },
    keyLabel: {
      type: String,
      required: !1,
      default: () => me.propsDefault.keyLabel
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: () => me.propsDefault.keyTitle
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    maxCountMultiselect: {
      type: Number,
      required: !1,
      default: () => me.propsDefault.maxCountMultiselect,
      validator: (e) => e > 0
    },
    menuWidthType: {
      type: String,
      required: !1,
      default: () => me.propsDefault.menuWidthType,
      validator: (e) => ["as_button", "by_content"].indexOf(e) !== -1
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: () => me.propsDefault.modelValue
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholder: {
      type: String,
      required: !1,
      default: void 0
    },
    placement: {
      type: String,
      required: !1,
      default: () => me.propsDefault.placement,
      validator: (e) => Gn.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: () => me.propsDefault.popperContainerId
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: () => me.propsDefault.readonlyDefault
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    search: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.search
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.searchApi
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: () => me.propsDefault.searchApiKey
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.searchOutside
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.searchTextInHtml
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: () => me.propsDefault.searchTimeout
    },
    selectMenuClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: () => me.propsDefault.slotName
    },
    sortOrder: {
      type: String,
      required: !1,
      default: () => me.propsDefault.sortOrder,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: () => me.propsDefault.sortOrderGroup,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    textDeselectAll: {
      type: String,
      required: !1,
      default: () => me.propsDefault.textDeselectAll
    },
    textSelectAll: {
      type: String,
      required: !1,
      default: () => me.propsDefault.textSelectAll
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.translateData
    },
    type: {
      type: String,
      required: !1,
      default: () => me.propsDefault.type,
      validator: (e) => ["select", "multiselect"].indexOf(e) !== -1
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "blur",
    "focus",
    "onSearchOutside",
    "open",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      componentStyleHide: r
    } = Xt(e), {
      ariaDescribedbyLocal: s,
      changeModel: i,
      clearModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = zt(e, t), {
      closePopup: S,
      openPopup: m
    } = Ef(), {
      dataAll: b,
      dataFromServer: I,
      dataExtraLocal: v,
      dataKeyByKeyIdLocal: g,
      dataLocal: R,
      hasDataExtra: D
    } = e_(e), {
      loadDataFromServer: w,
      loadDataFromServerForSearchAPI: F,
      loadingDataFromServer: P,
      loadingSearchApi: M,
      onSearchInApi: O,
      searchApiLocal: q,
      updateUrlPropsComputed: U,
      urlPropsComputed: G
    } = Zu(e, {
      changeModel: i,
      dataExtraLocal: v,
      dataFromServer: I
    }), {
      loadingLocal: te
    } = t_(e, {
      loadingDataFromServer: P
    }), {
      addPopperContainerInBody: re,
      popperContainerIdSelector: ie
    } = sf(e);
    Qu(t, {
      dataKeyByKeyIdLocal: g,
      dataLocal: R
    });
    const {
      disabledAttribut: le,
      disabledLocal: oe,
      disabledLocalAttribut: Te,
      isExclusiveOptionSelected: Be
    } = V1(e), {
      exclusiveOption: Ae,
      exclusiveDataKeyByKeyIdLocal: _e
    } = G1(e), {
      isModelLengthLimitExceeded: ve,
      isModelValue: be,
      isMultiselect: je,
      limitExceededModelData: Re,
      modelValueLength: J,
      modelValueMultiselectFiltered: H
    } = j1(e, {
      dataKeyByKeyIdLocal: g
    }), {
      ariaLabelledby: X,
      containerId: ae,
      idForList: ge,
      tabindex: Ce
    } = H1(e, {
      htmlIdLocal: A
    }), {
      dataSort: ke
    } = Ju(e, {
      data: R
    }), {
      dataGrouped: Qe,
      groupsForLever: Ue,
      hasKeyGroup: $e,
      keyGroupArray: it
    } = Of(e, {
      data: ke
    }), {
      hasNotElementsExclusiveWithSearch: Ke,
      hasNotElementsExtraWithSearch: lt,
      hasNotElementsWithSearch: et,
      idForButtonSearchOutside: ht,
      modelSearch: At,
      modelSearchLowerCase: Mt,
      modelSearchOutside: tn,
      onSearchOutside: hr,
      searching: nn,
      searchingElements: Kn,
      searchingElementsExclusive: zn,
      searchingElementsExtra: Cn,
      searchingGroups: Nr,
      searchingGroupsWithSearchInGroup: Ar,
      searchOutsideOrApi: Br,
      searchOutsideRef: Yn,
      updateModelSearch: Xn,
      updateModelSearchOutside: Zt
    } = Df(e, t, {
      data: ke,
      dataExtra: v,
      exclusiveOption: Ae,
      groupsForLever: Ue,
      hasKeyGroup: $e,
      htmlIdLocal: A,
      keyGroupArray: it,
      onSearchInApi: O,
      searchApiLocal: q
    }), {
      buttonRef: mn,
      handleKeydown: Er,
      isOpen: pr,
      menuParentRef: Ts,
      menuRef: wr,
      togglePopover: Zn
    } = X1(e, t, {
      closePopup: S,
      htmlIdLocal: A,
      openPopup: m
    }), {
      deleteExceededItems: Sa,
      onChangeModelValue: Dn,
      onDeselectAll: Ss,
      onKeydownDeselectAll: Ls,
      onKeydownSelectAll: yt,
      onSelectAll: Jn
    } = K1(e, {
      changeModel: i,
      dataAll: b,
      dataKeyByKeyIdLocal: g,
      disabledLocal: oe,
      isMultiselect: je,
      togglePopover: Zn
    }), {
      hasSelectedTitle: Yr,
      selectedTitle: La
    } = z1(e, {
      dataKeyByKeyIdLocal: g,
      isModelLengthLimitExceeded: ve,
      isModelValue: be,
      isMultiselect: je,
      modelValueLength: J,
      modelValueMultiselectFiltered: H
    }), {
      isDividerSelectDeselectVisible: Xr
    } = W1(e, {
      isMultiselect: je
    }), {
      destroyEventBusClickLabel: ma,
      initEventBusClickLabel: Pr
    } = gf({
      htmlIdLocal: A,
      clickLabel: Zn
    });
    return rt(G, U), re({ className: "a_select_container" }), Pr(), w(), F(), Ot(() => {
      ma(), S({
        id: A.value
      });
    }), {
      ariaDescribedbyLocal: s,
      ariaLabelledby: X,
      attributesToExcludeFromRender: n,
      buttonRef: mn,
      clearModel: o,
      componentStyleHide: r,
      containerId: ae,
      dataExtraLocal: v,
      dataGrouped: Qe,
      dataKeyByKeyIdLocal: g,
      dataLocal: R,
      dataSort: ke,
      deleteExceededItems: Sa,
      disabledAttribut: le,
      disabledLocal: oe,
      disabledLocalAttribut: Te,
      errorsId: u,
      exclusiveDataKeyByKeyIdLocal: _e,
      exclusiveOption: Ae,
      groupsForLever: Ue,
      handleKeydown: Er,
      hasDataExtra: D,
      hasKeyGroup: $e,
      hasNotElementsExclusiveWithSearch: Ke,
      hasNotElementsExtraWithSearch: lt,
      hasNotElementsWithSearch: et,
      hasSelectedTitle: Yr,
      helpTextId: f,
      htmlIdLocal: A,
      idForButtonSearchOutside: ht,
      idForList: ge,
      isDividerSelectDeselectVisible: Xr,
      isErrors: E,
      isExclusiveOptionSelected: Be,
      isModelLengthLimitExceeded: ve,
      isModelValue: be,
      isMultiselect: je,
      isOpen: pr,
      limitExceededModelData: Re,
      loadingLocal: te,
      loadingSearchApi: M,
      menuParentRef: Ts,
      menuRef: wr,
      modelSearch: At,
      modelSearchLowerCase: Mt,
      modelSearchOutside: tn,
      modelValueLength: J,
      modelValueMultiselectFiltered: H,
      onBlur: p,
      onChangeModelValue: Dn,
      onDeselectAll: Ss,
      onFocus: T,
      onKeydownDeselectAll: Ls,
      onKeydownSelectAll: yt,
      onSearchOutside: hr,
      onSelectAll: Jn,
      popperContainerIdSelector: ie,
      searching: nn,
      searchingElements: Kn,
      searchingElementsExclusive: zn,
      searchingElementsExtra: Cn,
      searchingGroups: Nr,
      searchingGroupsWithSearchInGroup: Ar,
      searchOutsideOrApi: Br,
      searchOutsideRef: Yn,
      selectedTitle: La,
      tabindex: Ce,
      togglePopover: Zn,
      updateModelSearch: Xn,
      updateModelSearchOutside: Zt
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Ln, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: void 0,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: this.type
    }, this.isModelValue ? () => [
      this.isMultiselect ? this.modelValueMultiselectFiltered.length ? c("ul", {}, [
        this.modelValueMultiselectFiltered.map((e) => c(fi, {
          key: e,
          alwaysTranslate: this.alwaysTranslate,
          data: this.dataKeyByKeyIdLocal[e] || {},
          slotName: this.slotName,
          tag: "li"
        }, this.$slots))
      ]) : "" : c(fi, {
        alwaysTranslate: this.alwaysTranslate,
        data: this.dataKeyByKeyIdLocal[this.modelValue] || {},
        slotName: this.slotName
      }, this.$slots)
    ] : "") : c("div", {
      ...this.$attrs,
      class: this.class,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModelValue || this.isOpen
        }]
      }, [
        this.label && c(Ut, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          loading: this.loadingLocal,
          required: this.required,
          type: this.type,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            id: this.containerId,
            ref: "ui_select",
            class: "a_select",
            role: "application"
          }, [
            c("div", {
              ref: "buttonRef",
              id: this.htmlIdLocal,
              autocomplete: this.autocomplete,
              class: [this.buttonClassDefault, this.buttonClass, {
                disabled: this.disabled,
                a_select_toggle_closeable: this.isMultiselect && this.isSelectionCloseable && this.isModelValue,
                a_form_control_invalid: this.isErrors
              }],
              "aria-labelledby": this.ariaLabelledby,
              role: "combobox",
              tabindex: this.tabindex,
              "aria-haspopup": "listbox",
              ariaExpanded: this.isOpen,
              ariaRequired: this.required,
              ariaDisabled: this.disabledLocal,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              title: this.hasSelectedTitle ? this.selectedTitle : void 0,
              // TODO: title
              onClick: this.togglePopover,
              onKeydown: this.handleKeydown,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }, [
              this.$slots.fixedPlaceholder ? this.$slots.fixedPlaceholder({
                dataKeyByKeyId: this.dataKeyByKeyIdLocal,
                modelValue: this.modelValue
              }) : this.isModelValue ? this.isMultiselect ? this.isSelectionCloseable ? c("ul", {
                class: "a_select__ul_closeable"
              }, [
                DT(this.modelValueMultiselectFiltered, this.countMultiselect).map((e, t) => c(np, {
                  key: t,
                  alwaysTranslate: this.alwaysTranslate,
                  data: this.dataKeyByKeyIdLocal[e] || this.exclusiveDataKeyByKeyIdLocal[e] || {},
                  slotName: this.slotName,
                  disabled: this.disabled,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.isModelLengthLimitExceeded && c(np, {
                  key: this.countMultiselect,
                  alwaysTranslate: this.alwaysTranslate,
                  data: this.limitExceededModelData,
                  disabled: this.disabledLocal,
                  hideDeleteButton: !this.exceededItemsDeletable,
                  onChangeModelValue: this.deleteExceededItems
                })
              ]) : c("span", {
                class: "a_select__value__label"
              }, [
                this.isModelLengthLimitExceeded ? c(pe, {
                  alwaysTranslate: this.alwaysTranslate,
                  text: "_A_SELECT_SELECTED_{{count}}_",
                  extra: {
                    count: this.modelValueLength
                  }
                }) : this.modelValueMultiselectFiltered.map((e, t) => c("span", {
                  key: t
                }, [
                  c("span", null, t !== 0 ? ", " : ""),
                  c(fi, {
                    alwaysTranslate: this.alwaysTranslate,
                    data: this.dataKeyByKeyIdLocal[e] || {},
                    slotName: this.slotName
                  }, this.$slots)
                ]))
              ]) : c(fi, {
                alwaysTranslate: this.alwaysTranslate,
                data: this.dataKeyByKeyIdLocal[this.modelValue] || {},
                class: "a_select__value__label",
                slotName: this.slotName
              }, this.$slots) : c(pe, {
                tag: "span",
                text: this.placeholder
              }),
              c(da, {
                to: this.popperContainerIdSelector,
                disabled: !this.inBody
              }, [
                c("div", {
                  ref: "menuParentRef",
                  id: this.idForList,
                  style: this.isOpen ? "" : "display: none;",
                  "aria-hidden": !this.isOpen,
                  role: "application"
                }, [
                  c("div", {
                    ref: "menuRef",
                    class: [
                      "a_select_menu",
                      {
                        a_select_menu_by_content: this.menuWidthType === "by_content"
                      },
                      this.selectMenuClass
                    ],
                    role: "listbox",
                    "aria-labelledby": this.htmlIdLocal,
                    onClick: (e) => e.stopPropagation()
                  }, [
                    this.searchOutsideOrApi && c("div", {
                      class: "a_select__search"
                    }, [
                      c("form", {
                        onSubmit: this.onSearchOutside
                      }, [
                        c("div", {
                          class: "a_select__search__group"
                        }, [
                          c(Rn, {
                            alwaysTranslate: this.alwaysTranslate,
                            label: "_A_SELECT_SEARCH_",
                            inputClass: "a_select__element_clickable",
                            modelValue: this.modelSearchOutside,
                            modelUndefined: "",
                            "onUpdate:modelValue": this.updateModelSearchOutside
                          }),
                          c(Ee, {
                            alwaysTranslate: this.alwaysTranslate,
                            ariaDisabled: this.loadingSearchApi,
                            disabled: this.disabledLocal,
                            class: "a_btn a_btn_primary a_select__element_clickable",
                            type: "submit",
                            iconLeft: Fl,
                            loadingAlign: "left"
                          })
                        ])
                      ])
                    ]),
                    this.search && c("div", {
                      class: "a_select__search"
                    }, [
                      c(Rn, {
                        alwaysTranslate: this.alwaysTranslate,
                        label: "_A_SELECT_SEARCH_",
                        inputClass: "a_select__element_clickable",
                        modelValue: this.modelSearch,
                        modelUndefined: "",
                        "onUpdate:modelValue": this.updateModelSearch
                      })
                    ]),
                    (this.searchOutside || this.search) && c("div", {
                      class: "a_select__divider",
                      ariaHidden: !0
                    }),
                    c("div", {
                      class: "a_select_menu__child"
                    }, [
                      this.isMultiselect && this.isSelectAll && c("div", {
                        class: [
                          "a_select__menu__link a_select__menu__link_selected a_select__element_clickable",
                          {
                            a_select__menu__link_disabled: this.disabledLocal
                          }
                        ],
                        disabled: this.disabledLocalAttribut,
                        role: "option",
                        tabindex: "-1",
                        onClick: this.onSelectAll,
                        onKeydown: this.onKeydownSelectAll
                      }, [
                        c("span", {
                          class: "a_select__menu__link__icon_box"
                        }, [
                          c(_t, {
                            icon: df
                          })
                        ]),
                        c("span", null, this.textSelectAll)
                      ]),
                      this.isMultiselect && this.isDeselectAll && c("div", {
                        class: [
                          "a_select__menu__link a_select__menu__link_selected a_select__element_clickable",
                          {
                            a_select__menu__link_disabled: this.disabled
                          }
                        ],
                        disabled: this.disabledAttribut,
                        role: "option",
                        tabindex: "-1",
                        onClick: this.onDeselectAll,
                        onKeydown: this.onKeydownDeselectAll
                      }, [
                        c("span", {
                          class: "a_select__menu__link__icon_box"
                        }, [
                          c(_t, {
                            icon: Ta
                          })
                        ]),
                        c("span", null, this.textDeselectAll)
                      ]),
                      this.isDividerSelectDeselectVisible && c("div", {
                        class: "a_select__divider",
                        ariaHidden: !0
                      }),
                      this.loadingLocal || this.loadingSearchApi ? c(vl) : "",
                      this.isMultiselect && this.isExclusiveOptionEnabled && c("div", {}, [
                        c(Ko, {
                          key: this.exclusiveOptionValue,
                          id: this.htmlIdLocal,
                          alwaysTranslate: !0,
                          dataItem: this.exclusiveOption,
                          disabled: !1,
                          itemIndex: 0,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          searching: this.searching,
                          searchingElements: this.searchingElementsExclusive,
                          searchingGroups: this.searchingGroups,
                          searchTextInHtml: this.searchTextInHtml,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)
                      ]),
                      this.hasDataExtra && c("div", {}, [
                        ...this.dataExtraLocal.map((e, t) => c(Ko, {
                          key: e[we],
                          id: this.htmlIdLocal,
                          alwaysTranslate: this.alwaysTranslate,
                          dataItem: e,
                          disabled: this.disabledLocal,
                          searching: this.searching,
                          searchingElements: this.searchingElementsExtra,
                          searchTextInHtml: this.searchTextInHtml,
                          itemIndex: this.isExclusiveOptionEnabled ? t + 1 : t,
                          keyDisabled: this.keyDisabled,
                          keyDisabledCallback: this.keyDisabledCallback,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          slotName: this.slotName,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)),
                        !this.hasNotElementsExtraWithSearch && !this.hasNotElementsExclusiveWithSearch && c("div", {
                          class: "a_select__divider",
                          ariaHidden: !0
                        })
                      ]),
                      c("div", {}, this.hasKeyGroup ? [
                        c(cf, {
                          id: `${this.htmlIdLocal}_lev_0`,
                          alwaysTranslate: this.alwaysTranslate,
                          dataGrouped: this.dataGrouped,
                          disabled: this.disabledLocal,
                          groupsForLever: this.groupsForLever,
                          isErrors: this.isErrors,
                          keyDisabled: this.keyDisabled,
                          keyDisabledCallback: this.keyDisabledCallback,
                          levelIndex: 0,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          searching: this.searching,
                          searchingElements: this.searchingElements,
                          searchingGroups: this.searchingGroups,
                          searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                          searchTextInHtml: this.searchTextInHtml,
                          slotName: this.slotName,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)
                      ] : [
                        c("div", {}, [
                          ...this.dataSort.map((e, t) => c(Ko, {
                            key: e[we],
                            id: this.htmlIdLocal,
                            alwaysTranslate: this.alwaysTranslate,
                            dataItem: e,
                            disabled: this.disabledLocal,
                            itemIndex: t,
                            keyDisabled: this.keyDisabled,
                            keyDisabledCallback: this.keyDisabledCallback,
                            modelSearch: this.modelSearchLowerCase,
                            modelValue: this.modelValue,
                            searching: this.searching,
                            searchingElements: this.searchingElements,
                            searchTextInHtml: this.searchTextInHtml,
                            slotName: this.slotName,
                            type: this.type,
                            onChangeModelValue: this.onChangeModelValue
                          }, this.$slots))
                        ])
                      ]),
                      !this.dataSort.length && !this.hasDataExtra || this.hasNotElementsWithSearch ? c(pe, {
                        alwaysTranslate: this.alwaysTranslate,
                        class: "a_form__not_elements",
                        text: "_A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_"
                      }) : ""
                    ])
                  ])
                ])
              ]),
              this.hasCaret ? c("span", {
                class: "a_caret"
              }, [
                c(_t, {
                  icon: this.caretIcon
                })
              ]) : ""
            ])
          ])
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, Z1 = {
  name: "ASelectIconSlot",
  inheritAttrs: !1,
  props: {
    inDropdown: {
      type: Boolean,
      required: !0
    },
    icon: {
      type: String,
      required: !0
    },
    label: {
      type: String,
      required: !1,
      default: void 0
    },
    labelFiltered: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("span", null, [
      c(_t, {
        icon: this.icon
      }),
      this.inDropdown ? Nt(c("span", {
        class: "a_ml_2"
      }), [
        [Kt, this.labelFiltered]
      ]) : c("span", {
        class: "a_ml_2"
      }, this.label)
    ]);
  }
};
function J1({ emit: e }) {
  return {
    blur: (i) => {
      e("blur", i);
    },
    focus: (i) => {
      e("focus", i);
    },
    open: (i) => {
      e("open", i);
    },
    updateModelValue: (i) => {
      e("update:modelValue", i);
    }
  };
}
function Q1(e) {
  const t = d(e, "data"), n = _(() => {
    const s = he(Il.value.icons);
    delete s.Aloha, delete s._NoImage;
    const i = [];
    return z(s, (o, u) => {
      i.push({
        value: u,
        label: u
      });
    }), i;
  });
  return {
    iconsLocal: _(() => t.value || n.value)
  };
}
function eq(e) {
  const t = d(e, "type");
  return {
    typeLocal: _(() => t.value === "selectIcon" ? "select" : t.value === "multiselectIcon" ? "multiselect" : t.value)
  };
}
const ap = {
  name: "ASelectIcon",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    buttonClass: {
      type: String,
      required: !1,
      default: () => me.propsDefault.buttonClass
    },
    buttonClassDefault: {
      type: [String, Object],
      required: !1,
      default: "a_form_control a_select_toggle"
    },
    caretIcon: {
      type: [String, Object],
      required: !1,
      default: () => me.propsDefault.caretIcon
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    class: {
      type: [String, Object],
      required: !1
    },
    countMultiselect: {
      type: Number,
      required: !1,
      default: () => me.propsDefault.countMultiselect
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    deselectable: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.deselectable
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    exceededItemsDeletable: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.exceededItemsDeletable
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_select_icon_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inBody: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.inBody
    },
    isCloseByClick: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.isCloseByClick
    },
    isDeselectAll: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.isDeselectAll
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSelectAll: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.isSelectAll
    },
    isSelectionCloseable: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.isSelectionCloseable
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: () => me.propsDefault.keyDisabled
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: () => me.propsDefault.keyGroup
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "value"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: () => me.propsDefault.keyTitle
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    maxCountMultiselect: {
      type: Number,
      required: !1,
      default: () => me.propsDefault.maxCountMultiselect,
      validator: (e) => e > 0
    },
    menuWidthType: {
      type: String,
      required: !1,
      default: () => me.propsDefault.menuWidthType,
      validator: (e) => ["as_button", "by_content"].indexOf(e) !== -1
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: () => me.propsDefault.modelValue
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholder: {
      type: String,
      required: !1,
      default: void 0
    },
    placement: {
      type: String,
      required: !1,
      default: () => me.propsDefault.placement,
      validator: (e) => Gn.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: () => me.propsDefault.popperContainerId
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: () => me.propsDefault.readonlyDefault
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    search: {
      type: Boolean,
      required: !1,
      default: !0
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.searchTextInHtml
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: () => me.propsDefault.searchTimeout
    },
    selectMenuClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: "icon"
    },
    sortOrder: {
      type: String,
      required: !1,
      default: () => me.propsDefault.sortOrder,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: () => me.propsDefault.sortOrderGroup,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    textDeselectAll: {
      type: String,
      required: !1,
      default: () => me.propsDefault.textDeselectAll
    },
    textSelectAll: {
      type: String,
      required: !1,
      default: () => me.propsDefault.textSelectAll
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: () => me.propsDefault.translateData
    },
    type: {
      type: String,
      required: !1,
      default: () => me.propsDefault.type,
      validator: (e) => ["select", "selectIcon", "multiselect", "multiselectIcon"].indexOf(e) !== -1
    }
  },
  emits: [
    "blur",
    "focus",
    "open",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      iconsLocal: n
    } = Q1(e), {
      blur: r,
      focus: s,
      open: i,
      updateModelValue: o
    } = J1(t), {
      typeLocal: u
    } = eq(e);
    return {
      blur: r,
      focus: s,
      iconsLocal: n,
      open: i,
      typeLocal: u,
      updateModelValue: o
    };
  },
  render() {
    return c(Us, {
      ...this.$props,
      type: this.typeLocal,
      data: this.iconsLocal,
      onBlur: this.blur,
      onFocus: this.focus,
      onOpen: this.open,
      "onUpdate:modelValue": this.updateModelValue
    }, {
      icon: ({ item: e, label: t, labelFiltered: n, inDropdown: r }) => c(Z1, {
        icon: e.value,
        label: t,
        labelFiltered: n,
        inDropdown: r
      }),
      ...this.$slots
    });
  }
};
function tq({
  isModelFalse: e = _(() => !1),
  isModelTrue: t = _(() => !1)
}) {
  return {
    isChecked: _(() => {
      if (t.value)
        return !0;
      if (e.value)
        return !1;
    })
  };
}
function nq(e, {
  isModelFalse: t = _(() => !1),
  isModelTrue: n = _(() => !1)
}) {
  const r = d(e, "trueLabel"), s = d(e, "falseLabel"), i = d(e, "defaultLabel"), o = d(e, "readonly"), u = d(e, "readonlyDefault");
  return {
    labelValueLocal: _(() => n.value ? r.value : t.value ? s.value : o.value ? u.value : i.value)
  };
}
function rq(e) {
  const t = d(e, "modelValue"), n = d(e, "trueValue"), r = d(e, "falseValue"), s = _(() => t.value === n.value || t.value === "true"), i = _(() => t.value === r.value || t.value === "false");
  return {
    isModelDefault: _(() => !s.value && !i.value),
    isModelFalse: i,
    isModelTrue: s
  };
}
function aq(e, {
  changeModel: t = () => {
  },
  isModelFalse: n = _(() => !1),
  isModelTrue: r = _(() => !1)
}) {
  const s = d(e, "defaultValue"), i = d(e, "disabled"), o = d(e, "falseValue"), u = d(e, "isThreeState"), f = d(e, "trueValue"), A = (p) => {
    if (i.value)
      return;
    let T;
    r.value ? T = o.value : u.value && n.value ? T = s.value : T = f.value, t({
      model: T,
      $event: p
    });
  };
  return {
    onInput: A,
    onKeydown: (p) => {
      (p.keyCode === Z.enter || p.keyCode === Z.space) && (A(p), p.stopPropagation(), p.preventDefault());
    }
  };
}
const IS = {
  name: "ASwitch",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    defaultLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_DEFAULT_LABEL_"
    },
    defaultValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    falseLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_FALSE_LABEL_"
    },
    falseValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !1
    },
    fullWidth: {
      type: Boolean,
      required: !1
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_switch_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isThreeState: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Gn.indexOf(e) !== -1
    },
    trueLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_TRUE_LABEL_"
    },
    trueValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !0
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = Vl(e), {
      attributesToExcludeFromRender: r
    } = Bt(e), {
      componentStyleHide: s
    } = Xt(e), {
      ariaDescribedbyLocal: i,
      changeModel: o,
      clearModel: u,
      errorsId: f,
      helpTextId: A,
      htmlIdLocal: E,
      isErrors: p,
      isModel: T,
      onBlur: S,
      onFocus: m
    } = zt(e, t), {
      isModelDefault: b,
      isModelFalse: I,
      isModelTrue: v
    } = rq(e), {
      labelValueLocal: g
    } = nq(e, {
      isModelFalse: I,
      isModelTrue: v
    }), {
      isChecked: R
    } = tq({
      isModelFalse: I,
      isModelTrue: v
    }), {
      onInput: D,
      onKeydown: w
    } = aq(e, {
      changeModel: o,
      isModelFalse: I,
      isModelTrue: v
    });
    return {
      ariaDescribedbyLocal: i,
      attributesToExcludeFromRender: r,
      clearModel: u,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: f,
      helpTextId: A,
      htmlIdLocal: E,
      isChecked: R,
      isErrors: p,
      isModel: T,
      isModelDefault: b,
      labelValueLocal: g,
      onBlur: S,
      onFocus: m,
      onInput: D,
      onKeydown: w
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Ln, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.labelValueLocal,
      required: this.required,
      style: this.componentStyleHide,
      type: "switch"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(Ut, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          isError: this.isErrors
        }) : "",
        c("div", {
          class: "switch_button__wrapper"
        }, [
          c(Ee, {
            class: [
              "switch_button",
              {
                switch_button_undefined: this.isModelDefault,
                switch_button_invalid: this.isErrors,
                switch_button_auto: !this.fullWidth
              }
            ],
            classDefault: "",
            isTitleHtml: this.isTitleHtml,
            tag: "div",
            title: this.title,
            titlePlacement: this.titlePlacement,
            type: "text"
          }, {
            default: () => [
              c("input", {
                id: this.htmlIdLocal,
                "aria-describedby": this.ariaDescribedbyLocal,
                ariaInvalid: this.isErrors,
                ariaRequired: this.required,
                checked: this.isChecked,
                class: [
                  "switch_button__input",
                  this.inputClass
                ],
                disabled: this.disabledAttribut,
                type: "checkbox",
                ...this.inputAttributes,
                onClick: this.onInput,
                onKeydown: this.onKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlur
              }),
              c(pe, {
                alwaysTranslate: this.alwaysTranslate,
                tag: "label",
                class: [
                  "switch_button__label",
                  {
                    switch_button__label_full: this.fullWidth
                  }
                ],
                for: this.htmlIdLocal,
                extra: this.extra,
                html: this.labelValueLocal
              })
            ]
          })
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, sq = {
  name: "ATemplate",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    html: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelValue: {
      required: !1
    },
    options: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = Bt(e), {
      componentStyleHide: n
    } = Xt(e);
    return {
      attributesToExcludeFromRender: t,
      componentStyleHide: n
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      this.$slots[this.slotName] ? c("div", {
        class: "a_template"
      }, this.$slots[this.slotName]({
        options: this.options,
        props: this.$props
      })) : "",
      this.html ? Nt(c("div", {
        class: "a_template"
      }), [
        [Kt, this.html]
      ]) : ""
    ]) : null;
  }
}, fl = typeof Map == "function" ? /* @__PURE__ */ new Map() : /* @__PURE__ */ function() {
  const e = [], t = [];
  return {
    has: function(r) {
      return e.indexOf(r) > -1;
    },
    get: function(r) {
      return t[e.indexOf(r)];
    },
    set: function(r, s) {
      e.indexOf(r) === -1 && (e.push(r), t.push(s));
    },
    delete: function(r) {
      const s = e.indexOf(r);
      s > -1 && (e.splice(s, 1), t.splice(s, 1));
    }
  };
}();
let vS = function(t) {
  return new Event(t, { bubbles: !0 });
};
try {
  new Event("test");
} catch {
  vS = function(n) {
    const r = document.createEvent("Event");
    return r.initEvent(n, !0, !1), r;
  };
}
function iq(e) {
  if (!e || !e.nodeName || e.nodeName !== "TEXTAREA" || fl.has(e))
    return;
  let t = null, n = null, r = null;
  function s() {
    const p = window.getComputedStyle(e, null);
    p.resize === "vertical" ? e.style.resize = "none" : p.resize === "both" && (e.style.resize = "horizontal"), p.boxSizing === "content-box" ? t = -(parseFloat(p.paddingTop) + parseFloat(p.paddingBottom)) : t = parseFloat(p.borderTopWidth) + parseFloat(p.borderBottomWidth), isNaN(t) && (t = 0), f();
  }
  function i(p) {
    {
      const T = e.style.width;
      e.style.width = "0px", e.offsetWidth, e.style.width = T;
    }
    e.style.overflowY = p;
  }
  function o(p) {
    const T = [];
    for (; p && p.parentNode && p.parentNode instanceof Element; )
      p.parentNode.scrollTop && T.push({
        node: p.parentNode,
        scrollTop: p.parentNode.scrollTop
      }), p = p.parentNode;
    return T;
  }
  function u() {
    if (e.scrollHeight === 0)
      return;
    const p = o(e), T = document.documentElement && document.documentElement.scrollTop;
    e.style.height = "", e.style.height = e.scrollHeight + t + "px", n = e.clientWidth, p.forEach(function(S) {
      S.node.scrollTop = S.scrollTop;
    }), T && (document.documentElement.scrollTop = T);
  }
  function f() {
    u();
    const p = Math.round(parseFloat(e.style.height)), T = window.getComputedStyle(e, null);
    let S = T.boxSizing === "content-box" ? Math.round(parseFloat(T.height)) : e.offsetHeight;
    if (S < p ? T.overflowY === "hidden" && (i("scroll"), u(), S = T.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(e, null).height)) : e.offsetHeight) : T.overflowY !== "hidden" && (i("hidden"), u(), S = T.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(e, null).height)) : e.offsetHeight), r !== S) {
      r = S;
      const m = vS("autosize:resized");
      try {
        e.dispatchEvent(m);
      } catch {
      }
    }
  }
  const A = function() {
    e.clientWidth !== n && f();
  }, E = (function(p) {
    window.removeEventListener("resize", A, !1), e.removeEventListener("input", f, !1), e.removeEventListener("keyup", f, !1), e.removeEventListener("autosize:destroy", E, !1), e.removeEventListener("autosize:update", f, !1), Object.keys(p).forEach(function(T) {
      e.style[T] = p[T];
    }), fl.delete(e);
  }).bind(e, {
    height: e.style.height,
    resize: e.style.resize,
    overflowY: e.style.overflowY,
    overflowX: e.style.overflowX,
    wordWrap: e.style.wordWrap
  });
  e.addEventListener("autosize:destroy", E, !1), "onpropertychange" in e && "oninput" in e && e.addEventListener("keyup", f, !1), window.addEventListener("resize", A, !1), e.addEventListener("input", f, !1), e.addEventListener("autosize:update", f, !1), e.style.overflowX = "hidden", e.style.wordWrap = "break-word", fl.set(e, {
    destroy: E,
    update: f
  }), s();
}
function lq(e) {
  const t = fl.get(e);
  t && t.destroy();
}
function oq(e) {
  const t = fl.get(e);
  t && t.update();
}
let ws;
typeof window > "u" || typeof window.getComputedStyle != "function" ? (ws = function(t) {
  return t;
}, ws.destroy = function(e) {
  return e;
}, ws.update = function(e) {
  return e;
}) : (ws = function(t, n) {
  return t && Array.prototype.forEach.call(t.length ? t : [t], function(r) {
    return iq(r);
  }), t;
}, ws.destroy = function(e) {
  return e && Array.prototype.forEach.call(e.length ? e : [e], lq), e;
}, ws.update = function(e) {
  return e && Array.prototype.forEach.call(e.length ? e : [e], oq), e;
});
const Dd = ws;
function uq(e) {
  const t = d(e, "isScalable"), n = B(!1), r = B(void 0);
  return {
    destroyAutosize: () => {
      n.value && (Dd.destroy(r.value), n.value = !1);
    },
    initAutosize: () => {
      t.value && (Dd(r.value), n.value = !0);
    },
    textareaRef: r,
    updateAutosize: () => {
      t.value && n.value && setTimeout(() => {
        Dd.update(r.value);
      });
    }
  };
}
function _q(e, {
  changeModel: t = () => {
  },
  updateAutosize: n = () => {
  }
}) {
  const r = d(e, "disabled"), s = d(e, "modelUndefined");
  return {
    clearModel: () => {
      r.value || (t({
        model: s.value
      }), n());
    },
    onInput: (u) => {
      if (r.value)
        return;
      const f = u.target.value;
      t({
        model: f
      });
    }
  };
}
function dq(e) {
  const t = d(e, "resize"), n = {
    v: "a_textarea_resize_v",
    h: "a_textarea_resize_h",
    none: "a_textarea_resize_none",
    auto: ""
  };
  return {
    resizeClass: _(() => n[t.value])
  };
}
function cq(e) {
  const t = d(e, "isScalable"), n = d(e, "rows");
  return {
    rowsLocal: _(() => {
      if (n.value)
        return n.value;
      if (t.value)
        return 1;
    })
  };
}
const fq = {
  name: "ATextarea",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_textarea_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isScalable: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    maxlength: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    resize: {
      type: String,
      required: !1,
      default: "v",
      validator: (e) => ["v", "h", "none", "auto"].indexOf(e) !== -1
    },
    rows: {
      type: [String, Number],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = Vl(e), {
      attributesToExcludeFromRender: r
    } = Bt(e), {
      componentStyleHide: s
    } = Xt(e), {
      ariaDescribedbyLocal: i,
      changeModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: S
    } = zt(e, t), {
      isClearButtonLocal: m
    } = Xu(e, {
      isModel: p
    }), {
      resizeClass: b
    } = dq(e), {
      destroyAutosize: I,
      initAutosize: v,
      textareaRef: g,
      updateAutosize: R
    } = uq(e), {
      clearModel: D,
      onInput: w
    } = _q(e, {
      changeModel: o,
      updateAutosize: R
    }), {
      rowsLocal: F
    } = cq(e), {
      placeholderAttributes: P
    } = ql(e);
    return jr(() => {
      v();
    }), Ot(() => {
      I();
    }), {
      ariaDescribedbyLocal: i,
      attributesToExcludeFromRender: r,
      changeModel: o,
      clearModel: D,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      isClearButtonLocal: m,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: S,
      onInput: w,
      placeholderAttributes: P,
      resizeClass: b,
      rowsLocal: F,
      textareaRef: g
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Ln, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.modelValue,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "textarea",
      valueClass: "a_code_content",
      valueTag: "div"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(Ut, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required
        }) : "",
        c("div", {
          class: [
            "a_form_element a_form_element_textarea",
            {
              a_form_element_textarea_scalable: this.isScalable
            }
          ]
        }, [
          c("textarea", {
            ref: "textareaRef",
            id: this.htmlIdLocal,
            autocomplete: this.autocomplete,
            value: this.modelValue,
            rows: this.rowsLocal,
            class: [
              "a_form_control a_textarea",
              this.inputClass,
              {
                a_textarea_scalable: this.isScalable,
                a_form_element_with_one_btn: this.isClearButton,
                a_form_control_invalid: this.isErrors
              },
              this.resizeClass
            ],
            disabled: this.disabledAttribut,
            ariaRequired: this.required,
            ariaInvalid: this.isErrors,
            "aria-describedby": this.ariaDescribedbyLocal,
            maxlength: this.maxlength,
            ...this.placeholderAttributes,
            ...this.inputAttributes,
            onInput: this.onInput,
            onFocus: this.onFocus,
            onBlur: this.onBlur
          }),
          this.isClearButtonLocal ? c("div", {
            class: "a_form_control__actions"
          }, [
            c(ku, {
              alwaysTranslate: this.alwaysTranslate,
              disabled: this.disabled,
              class: this.clearButtonClass,
              onClear: this.clearModel
            })
          ]) : ""
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, $l = {
  checkbox: rF,
  color: Rn,
  currency: j0,
  date: ci,
  dateRange: QF,
  datetime: ci,
  email: Rn,
  file: Q0,
  integer: Ma,
  integerNonNegative: Ma,
  integerNonNegativeRange: Uo,
  integerPositive: Ma,
  integerPositiveRange: Uo,
  integerRange: Uo,
  json: T1,
  multiselect: Us,
  multiselectIcon: ap,
  multiselectOrdered: C1,
  natural: Rn,
  number: Ma,
  numberRange: Uo,
  oneCheckbox: qu,
  password: Rn,
  radio: bS,
  routerLinkConfig: $1,
  select: Us,
  selectIcon: ap,
  switch: IS,
  template: sq,
  text: Rn,
  textarea: fq
}, yS = {
  name: "AFieldset",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    attributesFieldset: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    children: {
      type: Array,
      required: !1,
      default: () => []
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_12"
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12"
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_fieldset_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_"
      })
    }
  },
  emits: [
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), r = () => ({
      ...$l,
      group: OS,
      fieldset: Vr("AFieldset"),
      ..._n.components,
      ..._n.containerComponents
    }), {
      componentStyleHide: s
    } = Xt(e), {
      textAfterLabel: i
    } = n_(e), {
      ariaDescribedbyLocal: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      isErrors: E
    } = zt(e, t), {
      onUpdateModelLocal: p
    } = N0(e, t), T = ({ item: D, dataKeyByKeyId: w }) => {
      t.emit("updateData", { item: D, dataKeyByKeyId: w });
    }, {
      groupId: S
    } = _f(e, {
      htmlIdLocal: A
    }), {
      iconCollapse: m,
      initIsCollapsedLocal: b,
      isCollapsedLocal: I,
      titleCollapse: v,
      toggleCollapse: g
    } = Cf(e, t), {
      classColumnsReadonly: R
    } = B0(e);
    return b(), {
      ariaDescribedbyLocal: o,
      attributesToExcludeFromRender: n,
      classColumnsReadonly: R,
      componentStyleHide: s,
      componentTypesMapping: r,
      errorsId: u,
      groupId: S,
      helpTextId: f,
      htmlIdLocal: A,
      iconCollapse: m,
      isCollapsedLocal: I,
      isErrors: E,
      onUpdateDataLocal: T,
      onUpdateModelLocal: p,
      textAfterLabel: i,
      titleCollapse: v,
      toggleCollapse: g
    };
  },
  render() {
    if (!this.isRender)
      return null;
    const e = [
      this.children.map((t, n) => {
        if (t.isRender !== !1) {
          const r = Oi.value[t.type];
          let s;
          se(t.classColumn) ? s = this.classColumnDefault : t.classColumn && (s = t.classColumn);
          let i;
          t.isHide && (i = "display: none;");
          const o = this.componentTypesMapping()[t.type];
          return c("div", {
            class: s,
            style: i
          }, [
            c(o, {
              key: n,
              alwaysTranslate: this.alwaysTranslate,
              modelValue: r ? this.modelValue : ce(this.modelValue, t.id),
              modelDependencies: r ? this.modelValue : void 0,
              errors: ce(this.errorsAll, t.id),
              errorsAll: r ? this.errorsAll : void 0,
              idPrefix: this.idPrefix,
              onUpdateData: ({ dataKeyByKeyId: u }) => this.onUpdateDataLocal({ item: t, dataKeyByKeyId: u }),
              ...t,
              change: ({ currentModel: u, id: f, item: A, model: E, props: p }) => this.onUpdateModelLocal({
                currentModel: u,
                id: f,
                item: A,
                model: E,
                props: p,
                component: t
              }),
              readonly: this.readonly || t.readonly,
              readonlyDefault: "readonlyDefault" in t && !Pe(t.readonlyDefault) ? t.readonlyDefault : this.readonlyDefault,
              disabled: this.disabled || t.disabled,
              classColumn: void 0,
              slotAppend: void 0,
              ...this.attributesToExcludeFromRender
            }, this.$slots),
            t.slotAppend && this.$slots[t.slotAppend] ? this.$slots[t.slotAppend]({ item: t, itemIndex: n }) : ""
          ]);
        }
      }),
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.htmlIdLocal,
        props: this.$props
      }) : ""
    ];
    return this.readonly ? c(Ln, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      collapsible: this.collapsible,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      isCollapsed: this.isCollapsed,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      required: this.required,
      style: this.componentStyleHide,
      type: "fieldset",
      valueParentClass: this.classColumnsReadonly
    }, () => e) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__parent"
      }, [
        c("fieldset", {
          id: this.htmlIdLocal,
          tabindex: -1,
          class: ["a_fieldset", this.classFieldset, {
            a_fieldset_invalid: this.isErrors,
            a_fieldset_no_border: !this.hasBorder,
            a_fieldset_collapsed: this.isCollapsedLocal
          }],
          "aria-describedby": this.ariaDescribedbyLocal,
          ...this.attributesFieldset
        }, [
          this.label || this.labelScreenReader ? c(Ee, {
            type: "text",
            alwaysTranslate: this.alwaysTranslate,
            tag: "legend",
            class: [
              "a_legend",
              {
                a_legend_invalid: this.isErrors
              },
              this.labelClass
            ],
            extra: this.extra,
            html: this.label,
            textScreenReader: this.labelScreenReader,
            textAfter: this.textAfterLabel
          }) : "",
          this.collapsible ? c(Ee, {
            "aria-controls": this.groupId,
            "aria-expanded": !this.isCollapsedLocal,
            alwaysTranslate: this.alwaysTranslate,
            class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
            iconLeft: this.iconCollapse,
            title: this.titleCollapse,
            textScreenReader: this.titleCollapse,
            type: "button",
            onClick: this.toggleCollapse
          }) : "",
          c("div", {
            id: this.groupId,
            class: [
              this.classColumns,
              "a_fieldset__content"
            ]
          }, e)
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]);
  }
}, hq = ["datepickerRange", "dateRange"], RS = {};
z(hq, (e) => {
  RS[e] = !0;
});
const gS = RS;
function Aq(e) {
  const t = d(e, "children");
  return {
    specificAttributes: _(() => {
      const r = {};
      return z(t.value, (s) => {
        const i = LS[s.type], o = gS[s.type];
        i && Pe(s.inputWidth) && (r[s.id] = {
          inputWidth: "auto"
        }), o && (r[s.id] = {
          inputWidth: "inherit",
          inputAttributes: {
            style: "min-width: 181px"
          }
        });
      }), r;
    })
  };
}
const OS = {
  name: "AGroup",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    children: {
      type: Array,
      required: !1,
      default: () => []
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_6 a_column_12_touch"
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12 a_columns_gap_2"
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => at("a_group_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: [String, Number, Array, Object, Boolean],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), r = () => ({
      ...$l,
      ..._n.components,
      ..._n.containerComponents
    }), {
      componentStyleHide: s
    } = Xt(e), {
      ariaDescribedbyLocal: i,
      changeModel: o,
      clearModel: u,
      errorsId: f,
      helpTextId: A,
      htmlIdLocal: E,
      isErrors: p
    } = zt(e, t), T = d(e, "change"), S = d(e, "modelValue"), m = ({ currentModel: w, id: F, item: P, model: M, props: O, component: q }) => {
      const U = he(S.value || {});
      Uc(U, F, he(M)), t.emit("update:modelValue", U), T.value({ currentModel: w, id: F, item: P, fullModel: U, model: M, props: O }), Ne(q.change) && q.change({ currentModel: w, id: F, item: P, fullModel: U, model: M, props: O });
    }, b = ({ item: w, dataKeyByKeyId: F }) => {
      t.emit("updateData", { item: w, dataKeyByKeyId: F });
    }, I = d(e, "children"), v = d(e, "idPrefix"), g = _(() => I.value[0] || {}), R = _(() => yl({
      id: g.value.id,
      idPrefix: g.value.idPrefix || v.value,
      htmlId: g.value.htmlId
    })), {
      specificAttributes: D
    } = Aq(e);
    return {
      ariaDescribedbyLocal: i,
      attributesToExcludeFromRender: n,
      changeModel: o,
      clearModel: u,
      componentStyleHide: s,
      componentTypesMapping: r,
      errorsId: f,
      firstChild: g,
      helpTextId: A,
      htmlIdFirstChild: R,
      htmlIdLocal: E,
      isErrors: p,
      onUpdateDataLocal: b,
      onUpdateModelLocal: m,
      specificAttributes: D
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        id: this.htmlIdLocal,
        role: "group",
        tabindex: -1,
        class: [this.inputClass, {
          a_group_invalid: this.isErrors
        }],
        "aria-describedby": this.ariaDescribedbyLocal
      }, [
        c("div", {
          class: this.classColumns
        }, [
          this.firstChild.label && c(Ut, {
            id: this.htmlIdFirstChild,
            alwaysTranslate: this.alwaysTranslate,
            extra: this.extra,
            isError: !!this.errorsAll[this.firstChild.id],
            isLabelFloat: !1,
            label: this.label || this.firstChild.label,
            labelClass: this.labelClass || this.firstChild.labelClass || this.classColumnDefault,
            labelScreenReader: this.labelScreenReader || this.firstChild.labelScreenReader,
            required: this.required || this.firstChild.required,
            type: this.firstChild.type
          }),
          this.children.map((e, t) => {
            const n = Oi.value[e.type];
            let r;
            se(e.classColumn) ? r = this.classColumnDefault : e.classColumn && (r = e.classColumn);
            let s;
            e.isHide && (s = "display: none;");
            const i = this.componentTypesMapping()[e.type];
            return c("div", {
              class: r,
              style: s
            }, [
              c(i, {
                key: t,
                alwaysTranslate: this.alwaysTranslate,
                modelValue: n ? this.modelValue : ce(this.modelValue, e.id),
                modelDependencies: n ? this.modelValue : void 0,
                errors: this.errorsAll[e.id],
                errorsAll: n ? this.errorsAll : void 0,
                idPrefix: this.idPrefix,
                onUpdateData: ({ dataKeyByKeyId: o }) => this.onUpdateDataLocal({ item: e, dataKeyByKeyId: o }),
                ...e,
                change: ({ currentModel: o, id: u, item: f, model: A, props: E }) => this.onUpdateModelLocal({
                  currentModel: o,
                  id: u,
                  item: f,
                  model: A,
                  props: E,
                  component: e
                }),
                disabled: this.disabled || e.disabled,
                ...this.specificAttributes[e.id],
                label: t === 0 ? void 0 : e.label,
                slotAppend: void 0,
                classColumn: void 0,
                ...this.attributesToExcludeFromRender
              }, this.$slots),
              e.slotAppend && this.$slots[e.slotAppend] ? this.$slots[e.slotAppend]({ item: e, itemIndex: t }) : ""
            ]);
          })
        ])
      ]),
      c(Yt, {
        id: this.helpTextId,
        alwaysTranslate: this.alwaysTranslate,
        html: this.helpText,
        extra: this.extra
      }),
      this.isErrors && c(en, {
        class: "a_px_3",
        id: this.errorsId,
        alwaysTranslate: this.alwaysTranslate,
        errors: this.errors
      })
    ]) : null;
  }
}, Lf = {
  fieldset: yS,
  group: OS,
  ..._n.containerComponents
};
function Eq() {
  return {
    componentTypesMapping: () => ({
      ...$l,
      ...Lf,
      ..._n.components,
      ..._n.containerComponents
    })
  };
}
function pq(e) {
  const t = d(e, "filter");
  return {
    isContainer: _(() => !!Oi.value[t.value.type])
  };
}
function Tq(e) {
  const t = d(e, "filter");
  return {
    filterSpecificAttributes: _(() => {
      const r = {}, s = LS[t.value.type], i = gS[t.value.type];
      return s && Pe(t.value.inputWidth) && (r.inputWidth = "auto"), i && (r.inputWidth = "inherit", r.inputAttributes = {
        style: "min-width: 181px"
      }), r;
    })
  };
}
function Sq(e) {
  const t = d(e, "id");
  return {
    idPrefix: _(() => `${t.value}_`)
  };
}
function Lq(e, {
  isContainer: t = _(() => !1)
}) {
  const n = d(e, "filter"), r = d(e, "onUpdateModelFilters"), s = d(e, "unappliedModel");
  return {
    onUpdateModelFiltersLocal: (o) => {
      if (t.value)
        r.value({ fullModel: o });
      else {
        const u = he(s.value);
        u[n.value.id] = he(o), r.value({ fullModel: u });
      }
    }
  };
}
function mq(e) {
  const t = d(e, "filter"), n = d(e, "updateDataKeyByIdFromFilter"), r = ["select", "multiselect", "radio", "checkbox", "group", "fieldset"], s = ({ dataKeyByKeyId: o, item: u }) => {
    let f = t.value.id;
    u && (f = u.id), n.value({
      filterId: f,
      dataKeyByKeyId: o
    });
  };
  return {
    emitForComponentsWithData: _(() => {
      const o = {};
      return r.indexOf(t.value.type) !== -1 && (o.onUpdateData = s), o;
    })
  };
}
const bq = {
  name: "AFiltersHorizontalFilterUi",
  props: {
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filter: {
      type: Object,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    isLabelVisible: {
      type: Boolean,
      required: !0
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    unappliedModel: {
      type: Object,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = Bt(e), {
      isContainer: n
    } = pq(e), {
      onUpdateModelFiltersLocal: r
    } = Lq(e, {
      isContainer: n
    }), {
      emitForComponentsWithData: s
    } = mq(e), {
      idPrefix: i
    } = Sq(e), {
      componentTypesMapping: o
    } = Eq(), {
      filterSpecificAttributes: u
    } = Tq(e);
    return {
      attributesToExcludeFromRender: t,
      componentTypesMapping: o,
      emitForComponentsWithData: s,
      filterSpecificAttributes: u,
      idPrefix: i,
      isContainer: n,
      onUpdateModelFiltersLocal: r
    };
  },
  render() {
    const e = this.componentTypesMapping()[this.filter.type];
    return c(e, {
      idPrefix: this.idPrefix,
      modelValue: this.isContainer ? this.unappliedModel : this.unappliedModel[this.filter.id],
      "onUpdate:modelValue": this.onUpdateModelFiltersLocal,
      excludeRenderAttributes: this.excludeRenderAttributes,
      ...this.filter,
      ...this.filterSpecificAttributes,
      label: this.isLabelVisible ? this.filter.label : void 0,
      ...this.emitForComponentsWithData,
      ...this.attributesToExcludeFromRender
    }, this.$slots);
  }
};
function Iq(e) {
  const t = d(e, "id");
  return {
    idFilterRight: _(() => `${t.value}_filter_right`)
  };
}
const vq = {
  name: "AFilersRight",
  props: {
    appliedModel: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filters: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch"
  ],
  setup(e) {
    const {
      idFilterRight: t
    } = Iq(e);
    return {
      idFilterRight: t
    };
  },
  render() {
    return c("div", {
      id: this.idFilterRight,
      class: "a_filters_right"
    }, [
      c("form", {}, [
        this.filters.map((e) => c(bq, {
          id: this.id,
          class: "a_filters_right__filter_ui",
          excludeRenderAttributes: this.excludeRenderAttributes,
          filter: e,
          isLabelVisible: !0,
          onUpdateModelFilters: this.onUpdateModelFilters,
          unappliedModel: this.appliedModel,
          updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter
        }, this.$slots))
      ])
    ]);
  }
};
function yq(e) {
  const t = d(e, "closeFilterValue"), n = d(e, "disabled"), r = d(e, "filter");
  return {
    closeCurrentFilterValue: ({ modelValue: i }) => {
      n.value || t.value({
        filter: r.value,
        modelArray: i.modelArray,
        keyId: i.keyId
      });
    }
  };
}
function Rq(e, { emit: t }, {
  modelValuesForCurrentFilter: n = _(() => [])
}) {
  const r = d(e, "filter"), s = _(() => n.value.length > 0);
  return {
    isLeastOneFilterVisible: s,
    updateVisibleChildFilters: ({ destroy: o } = {}) => {
      t("updateVisibleChildFilters", {
        id: r.value.id,
        isVisible: o ? !1 : s.value
      });
    }
  };
}
function gq(e) {
  const t = d(e, "filter"), n = d(e, "id"), r = _(() => `eventATableFilterTopOnOpen_${n.value}`);
  return {
    goToFilter: ({ modelValue: i } = {}) => {
      let o = yl({
        id: t.value.id,
        idPrefix: `${n.value}_filter_top`,
        htmlId: t.value.htmlId
      });
      i.idSuffix && (o += i.idSuffix), t.value.main || gt.$emit(r.value, o);
    }
  };
}
function Oq({ filter: e, currentModel: t }) {
  return !(!e || e.hideFilterCenter || se(t) || t === "" || Se(t) && !t.length);
}
function Cq(e) {
  const t = d(e, "filter"), n = d(e, "model");
  return {
    hasCurrentFilter: _(() => Oq({
      filter: t.value,
      currentModel: n.value
    }))
  };
}
function Dq(e, { emit: t }, {
  hasCurrentFilter: n = _(() => !1)
}) {
  const r = d(e, "dataKeyByKeyIdPerFilter"), s = d(e, "filter"), i = _(() => n.value && X0.value[s.value.type] ? pn(r.value[s.value.id]) : !1);
  return {
    isFilterLoading: i,
    updateLoadingChildFilters: (u, f) => {
      u !== f && t("updateLoadingChildFilters", {
        id: s.value.id,
        isLoading: i.value
      });
    }
  };
}
function Nq(e, {
  hasCurrentFilter: t = _(() => !1)
}) {
  const n = d(e, "filter"), r = _(() => t.value ? n.value.label : ""), s = _(() => {
    if (t.value)
      return n.value.labelScreenReader;
  }), i = _(() => s.value || r.value);
  return {
    filterLabel: r,
    filterLabelForTitle: i
  };
}
function Bq(e, {
  filterLabel: t = _(() => ""),
  filterLabelForTitle: n = _(() => ""),
  hasCurrentFilter: r = _(() => !1)
}) {
  const s = d(e, "dataKeyByKeyIdPerFilter"), i = d(e, "filter"), o = d(e, "model"), {
    filterBoolean: u,
    filterDate: f
  } = jn(), A = _(() => {
    if (i.value)
      return s.value[i.value.id];
  }), E = _(() => {
    var S;
    return (S = o.value) != null && S.length ? mt(o.value, (m) => A.value && A.value[m]) : [];
  }), p = ({ label: S, suffixTranslated: m }) => {
    const b = Dt({
      placeholder: S
    });
    return m ? `${b} ${m}` : b;
  };
  return {
    modelValuesForCurrentFilter: _(() => {
      var S, m, b, I, v, g, R, D, w;
      if (!r.value)
        return [];
      if (i.value.type === "switch" || i.value.type === "oneCheckbox")
        return [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: u(o.value)
        }];
      if (i.value.type === "date")
        return [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: f(o.value)
        }];
      if (i.value.type === "select" || i.value.type === "radio") {
        const F = ce(A.value, `${o.value}.${vt}`);
        return F ? [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: F
        }] : [];
      }
      if (pf.value[i.value.type] || i.value.type === "radio" && i.value.isModelArray) {
        if (E.value.length) {
          if (E.value.length === 1) {
            const F = (S = A.value) == null ? void 0 : S[E.value[0]];
            return [{
              filterLabelTranslated: p({ label: t.value }),
              filterLabelForTitleTranslated: p({ label: n.value }),
              label: F == null ? void 0 : F[vt],
              item: F,
              modelArray: E.value
            }];
          }
          return [{
            filterLabelTranslated: p({ label: t.value }),
            filterLabelForTitleTranslated: p({ label: n.value }),
            label: Dt({
              placeholder: "_A_FILTERS_SELECTED_{{count}}_",
              extra: {
                count: E.value.length,
                modelArray: E.value
              }
            }),
            modelArray: E.value,
            extra: {
              count: E.value.length,
              modelArray: E.value
            }
          }];
        }
        return [];
      }
      if (i.value.type === "dateRange") {
        const F = i.value.keyFrom || "from", P = i.value.keyUntil || "until", M = [];
        if (!se((m = o.value) == null ? void 0 : m[F]) && ((b = o.value) == null ? void 0 : b[F]) !== "") {
          const O = Dt({
            placeholder: i.value.labelFrom || "_A_DATEPICKER_RANGE_FROM_"
          });
          M.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: O
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: O
            }),
            label: f(o.value[F]),
            idSuffix: "_from",
            keyId: F
          });
        }
        if (!se((I = o.value) == null ? void 0 : I[P]) && ((v = o.value) == null ? void 0 : v[P]) !== "") {
          const O = Dt({
            placeholder: i.value.labelUntil || "_A_DATEPICKER_RANGE_UNTIL_"
          });
          M.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: O
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: O
            }),
            label: f(o.value[P]),
            idSuffix: "_until",
            keyId: P
          });
        }
        return M;
      }
      if (Tf.indexOf(i.value.type) !== -1) {
        const F = i.value.keyMax || "max", P = i.value.keyMin || "min", M = [];
        if (!se((g = o.value) == null ? void 0 : g[P]) && ((R = o.value) == null ? void 0 : R[P]) !== "") {
          const O = Dt({
            placeholder: i.value.labelMin || "_A_INPUT_NUMBER_RANGE_LABEL_MIN_"
          });
          M.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: O
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: O
            }),
            label: o.value[P],
            idSuffix: "_min",
            keyId: P
          });
        }
        if (!se((D = o.value) == null ? void 0 : D[F]) && ((w = o.value) == null ? void 0 : w[F]) !== "") {
          const O = Dt({
            placeholder: i.value.labelMax || "_A_INPUT_NUMBER_RANGE_LABEL_MAX_"
          });
          M.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: O
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: O
            }),
            label: o.value[F],
            idSuffix: "_max",
            keyId: F
          });
        }
        return M;
      }
      return [{
        label: o.value,
        filterLabelTranslated: p({ label: t.value }),
        filterLabelForTitleTranslated: p({ label: n.value })
      }];
    })
  };
}
const wq = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pin-fill" viewBox="0 0 16 16">
  <path d="M4.146.146A.5.5 0 0 1 4.5 0h7a.5.5 0 0 1 .5.5c0 .68-.342 1.174-.646 1.479-.126.125-.25.224-.354.298v4.431l.078.048c.203.127.476.314.751.555C12.36 7.775 13 8.527 13 9.5a.5.5 0 0 1-.5.5h-4v4.5c0 .276-.224 1.5-.5 1.5s-.5-1.224-.5-1.5V10h-4a.5.5 0 0 1-.5-.5c0-.973.64-1.725 1.17-2.189A6 6 0 0 1 5 6.708V2.277a3 3 0 0 1-.354-.298C4.342 1.674 4 1.179 4 .5a.5.5 0 0 1 .146-.354"/>
</svg>`, Pq = {
  name: "AFilterCenterItem",
  props: {
    closeFilterValue: {
      type: Function,
      required: !0
    },
    dataKeyByKeyIdPerFilter: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    filter: {
      type: Object,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    model: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "updateVisibleChildFilters",
    "updateLoadingChildFilters"
  ],
  setup(e, t) {
    const {
      hasCurrentFilter: n
    } = Cq(e), {
      isFilterLoading: r,
      updateLoadingChildFilters: s
    } = Dq(e, t, {
      hasCurrentFilter: n
    }), {
      filterLabel: i,
      filterLabelForTitle: o
    } = Nq(e, {
      hasCurrentFilter: n
    }), {
      modelValuesForCurrentFilter: u
    } = Bq(e, {
      filterLabel: i,
      filterLabelForTitle: o,
      hasCurrentFilter: n
    }), {
      isLeastOneFilterVisible: f,
      updateVisibleChildFilters: A
    } = Rq(e, t, {
      modelValuesForCurrentFilter: u
    }), {
      goToFilter: E
    } = gq(e), {
      closeCurrentFilterValue: p
    } = yq(e);
    return rt(f, () => {
      A();
    }, {
      immediate: !0
    }), rt(r, (T, S) => {
      s(T, S);
    }, {
      immediate: !0
    }), Ot(() => {
      A({
        destroy: !0
      });
    }), {
      closeCurrentFilterValue: p,
      filterLabel: i,
      goToFilter: E,
      hasCurrentFilter: n,
      isLeastOneFilterVisible: f,
      modelValuesForCurrentFilter: u
    };
  },
  render() {
    return this.hasCurrentFilter && [
      this.modelValuesForCurrentFilter.map((e) => c("div", {
        role: "group",
        class: "a_filters_center__item a_btn_group a_btn_group_small"
      }, [
        this.filter.hasNotClose && c(Ee, {
          class: "a_btn a_btn_secondary",
          ariaHidden: !0,
          tabindex: -1,
          iconLeft: wq,
          type: "text"
        }),
        c(Ee, {
          class: "a_btn a_btn_secondary",
          title: "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_",
          textScreenReader: "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_",
          extra: {
            filterLabel: e.filterLabelForTitleTranslated,
            filterValue: e.label
          },
          type: "button",
          onClick: () => this.goToFilter({ modelValue: e })
        }, () => [
          e.filterLabelTranslated ? c("strong", {
            class: "a_filters_center__item__label",
            ariaHidden: !0
          }, [
            c(pe, {
              tag: "span",
              html: e.filterLabelTranslated,
              textAfter: ":"
            })
          ]) : "",
          this.filter.slotName && this.$slots[this.filter.slotName] ? this.$slots[this.filter.slotName]({
            item: e.item,
            label: e.label,
            extra: e.extra,
            inFilterCenter: !0
          }) : c("span", {
            class: "a_filters_center__item__value"
          }, e.label)
        ]),
        this.filter.hasNotClose ? "" : c(Ee, {
          class: "a_btn a_btn_secondary",
          disabled: this.disabled,
          iconLeft: Ta,
          title: "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_",
          textScreenReader: "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_",
          extra: {
            filterLabel: e.filterLabelForTitleTranslated,
            filterValue: e.label
          },
          type: "button",
          onClick: () => this.closeCurrentFilterValue({ modelValue: e })
        })
      ]))
    ];
  }
};
function xq() {
  const e = B({}), t = ({ id: r, isLoading: s }) => {
    e.value[r] = s;
  };
  return {
    isLeastOneChildFilterLoading: _(() => {
      let r = !1;
      return z(e.value, (s) => {
        if (s)
          return r = !0, !1;
      }), r;
    }),
    updateLoadingChildFilters: t
  };
}
function Mq(e) {
  const t = d(e, "filtersGroup"), n = B({}), r = ({ id: u, isVisible: f }) => {
    n.value[u] = f;
  }, s = _(() => {
    let u = !1;
    return z(n.value, (f) => {
      if (f)
        return u = !0, !1;
    }), u;
  }), i = _(() => !!(t.value.alwaysVisible.length || t.value.filters.length)), o = _(() => s.value ? void 0 : "display: none;");
  return {
    hasFilters: i,
    styleHide: o,
    updateVisibleChildFilters: r
  };
}
const Fq = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-clockwise" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2z"/>
  <path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466"/>
</svg>`, qq = {
  name: "AFilterCenter",
  props: {
    appliedModel: {
      type: Object,
      required: !0
    },
    closeAllFilters: {
      type: Function,
      required: !0
    },
    closeFilterValue: {
      type: Function,
      required: !0
    },
    dataKeyByKeyIdPerFilter: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    filtersGroup: {
      type: Object,
      required: !0,
      default: () => ({
        alwaysVisible: [],
        filters: []
      })
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    filtersVisibleAll: {
      type: Array,
      required: !0
    },
    id: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      hasFilters: t,
      styleHide: n,
      updateVisibleChildFilters: r
    } = Mq(e), {
      isLeastOneChildFilterLoading: s,
      updateLoadingChildFilters: i
    } = xq();
    return {
      hasFilters: t,
      isLeastOneChildFilterLoading: s,
      styleHide: n,
      updateLoadingChildFilters: i,
      updateVisibleChildFilters: r
    };
  },
  render() {
    return this.hasFilters ? c("div", {
      class: "a_filters_center"
    }, [
      c("div", {
        class: "a_filters_center__item"
      }, [
        this.$slots.filtersHorizontal ? this.$slots.filtersHorizontal() : ""
      ]),
      this.filtersVisibleAll.map((e) => c(Pq, {
        key: e.id,
        id: this.id,
        disabled: this.disabled,
        filter: e,
        closeFilterValue: this.closeFilterValue,
        dataKeyByKeyIdPerFilter: this.dataKeyByKeyIdPerFilter,
        model: this.appliedModel[e.id],
        onUpdateVisibleChildFilters: this.updateVisibleChildFilters,
        onUpdateLoadingChildFilters: this.updateLoadingChildFilters
      }, this.$slots)),
      this.isLeastOneChildFilterLoading ? c("div", {
        style: this.styleHide,
        class: "a_filters_center__item"
      }, [
        c(Rl, {
          class: "a_spinner_small"
        })
      ]) : "",
      c("div", {
        class: "a_filters_center__item",
        style: this.styleHide
      }, [
        c(pt, {
          class: "a_btn a_btn_link a_btn_small",
          iconLeft: Fq,
          text: "_A_FILTERS_DESELECT_ALL_",
          onClick: this.closeAllFilters
        })
      ])
    ]) : null;
  }
};
function $q(e, {
  model: t = B({})
}) {
  const n = d(e, "filtersSaved"), r = _(() => {
    const u = {};
    return z(n.value, (f) => {
      u[f.label] = !0;
    }), u;
  }), s = _(() => r.value[t.value.name]), i = _(() => {
    if (s.value)
      return "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_";
  });
  return {
    dataForm: _(() => [
      {
        id: "name",
        label: "_A_FILTERS_SAVE_LABEL_NAME_",
        type: "text",
        required: !0,
        extra: {
          name: t.value.name || ""
        },
        helpText: i.value
      }
    ]),
    isUpdate: s
  };
}
function Uq(e) {
  const t = d(e, "isModelFilterSavedNew"), n = d(e, "modelFiltersSaved"), r = B({});
  return {
    initModel: () => {
      n.value && !t.value && (r.value = {
        name: n.value
      });
    },
    model: r,
    updateModel: (o) => {
      r.value = o;
    }
  };
}
let CS = 5e3;
const hu = B({}), kq = _(() => Mc(hu.value));
let sp = 0;
function $u() {
  return {
    addNotification: Vq,
    removeNotification: DS,
    notifications: kq,
    setNotificationTimeout: Hq
  };
}
function Hq(e) {
  CS = e;
}
function Vq({ text: e, type: t = "success", timeout: n, extra: r, useValuesFromObject: s = !0 }) {
  const i = se(n) ? CS : n, o = sp, u = t === "error" ? "danger" : t;
  let f = e;
  st(e) && s && (f = rx(e)), hu.value[o] = {
    text: f,
    type: u,
    index: o,
    extra: r
  }, sp++, i && setTimeout(() => {
    DS(o);
  }, i);
}
function DS(e) {
  hu.value[e] && delete hu.value[e];
}
function Wq(e, { emit: t }, {
  isUpdate: n = _(() => !1),
  model: r = B({})
}) {
  const s = d(e, "changeModelFiltersSaved"), i = d(e, "updateFiltersSaved"), o = B(void 0), {
    addNotification: u
  } = $u(), f = _(() => !r.value.name), A = () => {
    t("close");
  };
  return {
    close: A,
    disabledBtnSave: f,
    loading: o,
    save: async () => {
      o.value = !0;
      const p = n.value;
      try {
        await i.value({
          action: p ? "update" : "create",
          label: r.value.name
        });
      } catch {
        u({
          text: "_A_FILTERS_SAVE_MSG_ERROR_",
          type: "danger"
        }), o.value = !1;
        return;
      }
      u({
        text: p ? "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_" : "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
        extra: {
          name: r.value.name
        }
      }), s.value({ model: r.value.name, isCreateOrEdit: !0 }), A(), o.value = !1;
    }
  };
}
const Gq = {
  name: "AFiltersSaveModal",
  props: {
    changeModelFiltersSaved: {
      type: Function,
      required: !0
    },
    filtersSaved: {
      type: Array,
      required: !0
    },
    isModelFilterSavedNew: {
      type: Boolean,
      required: !0
    },
    modelFiltersSaved: {
      type: String,
      required: !1,
      default: void 0
    },
    selectorCloseIds: {
      type: String,
      required: !0
    },
    updateFiltersSaved: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      initModel: n,
      model: r,
      updateModel: s
    } = Uq(e), {
      dataForm: i,
      isUpdate: o
    } = $q(e, {
      model: r
    }), {
      close: u,
      disabledBtnSave: f,
      loading: A,
      save: E
    } = Wq(e, t, {
      isUpdate: o,
      model: r
    });
    return n(), {
      close: u,
      dataForm: i,
      disabledBtnSave: f,
      initModel: n,
      loading: A,
      model: r,
      save: E,
      updateModel: s
    };
  },
  render() {
    return c(WU, {
      close: this.close,
      dataForm: this.dataForm,
      disabledSave: this.disabledBtnSave,
      headerText: "_A_FILTERS_SAVE_MODAL_HEADER_",
      modelValue: this.model,
      idPrefix: "modal_filter_top_",
      loading: this.loading,
      selectorCloseIds: this.selectorCloseIds,
      size: "large",
      save: this.save,
      stop: !0,
      zIndex: 1901,
      backdropZIndex: 1900,
      "onUpdate:modelValue": this.updateModel
    }, {
      modalBodyPrepend: () => [
        c(Gc, {
          type: "info",
          isVisible: !0,
          safeHtml: "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_"
        })
      ]
    });
  }
};
function jq(e) {
  const t = d(e, "filtersGroup"), n = B(void 0), r = _(() => !!(t.value.alwaysVisible.length || t.value.filters.length));
  return {
    closeDropdown: () => {
      var o;
      (o = n.value) == null || o.onClose({ trigger: "click" });
    },
    dropdownRef: n,
    isDropdownVisible: r,
    openDropdown: (o) => {
      var u;
      (u = n.value) == null || u.onOpen({ trigger: "click", selectorToFocus: o });
    }
  };
}
function Kq(e, {
  openDropdown: t = () => {
  }
}) {
  const n = d(e, "id");
  let r;
  return {
    destroyEventBus: () => {
      gt.$off(r, t);
    },
    initEventBus: () => {
      gt.$on(r, t);
    },
    initEventName: () => {
      r = `eventATableFilterTopOnOpen_${n.value}`;
    }
  };
}
function zq(e, { emit: t }) {
  const n = d(e, "filtersGroup"), r = d(e, "filtersVisible"), s = ({ isAdd: E, filterId: p, filter: T }) => {
    t("toggleFiltersVisible", { isAdd: E, filterId: p, filter: T });
  }, i = ({ model: E }) => {
    s({ isAdd: !0, filterId: E });
  }, o = ({ filter: E }) => {
    s({ isAdd: !1, filterId: E.id, filter: E });
  }, u = _(() => !!(n.value.filters && n.value.filters.length)), f = _(() => {
    const E = {};
    return z(r.value, (p) => {
      E[p.id] = !0;
    }), E;
  }), A = _(() => u.value ? mt(n.value.filters, (E) => !f.value[E.id]) : []);
  return {
    addFiltersVisible: i,
    deleteFiltersVisible: o,
    filtersHidden: A,
    hasFiltersHiddenDefault: u
  };
}
function Yq(e, {
  openDropdown: t = () => ({})
}) {
  const n = d(e, "filtersSaved"), r = d(e, "id"), s = d(e, "onUpdateModelFilters"), i = "_A_FILTERS_HOR_FILTER_NEW_", o = B(void 0), u = B(void 0), f = B(void 0), A = _(() => `${r.value}btn_save_`), E = _(() => u.value === i), p = _(() => {
    const I = [{
      label: i
    }];
    return z(he(n.value), (v) => {
      v.group = "_A_FILTERS_FILTER_SAVED_GROUP_MY_", I.push(v);
    }), I;
  });
  return {
    buttonSaveComponentId: A,
    changeModelFiltersSaved: ({ model: I, item: v, isDelete: g, isCreateOrEdit: R }) => {
      if (R) {
        u.value = I;
        return;
      }
      if ((v == null ? void 0 : v.label) === i || g) {
        s.value({
          fullModel: {},
          isUpdateFiltersVisible: !0
        }), u.value = i;
        return;
      }
      I ? (u.value = I, v && (s.value({
        fullModel: v.data || {},
        isUpdateFiltersVisible: !0
      }), t())) : v && (s.value({
        fullModel: v.data || {},
        isUpdateFiltersVisible: !0
      }), t());
    },
    closeModalSave: () => {
      o.value = !1;
    },
    filtersSavedLocal: p,
    initModelFiltersSaved: () => {
      u.value = i;
    },
    isModalSaveVisible: o,
    isModelFilterSavedNew: E,
    modelFiltersSaved: u,
    openModalSave: () => {
      f.value = A.value, o.value = !0;
    },
    selectorCloseIds: f
  };
}
const Nd = B(!0), sl = B({});
function mf() {
  const e = (r = {}) => {
    z(r, (s, i) => {
      sl.value[i] = s;
    });
  };
  return {
    changeConfirmOptions: e,
    closeConfirm: (r) => {
      r && Ne(sl.value.close) && sl.value.close(), Nd.value = !0, setTimeout(() => {
        sl.value = {};
      });
    },
    confirmOptions: sl,
    isModalHidden: Nd,
    openConfirm: (r = {}) => {
      e(r), Nd.value = !1;
    }
  };
}
function Xq(e, {
  changeModelFiltersSaved: t = () => {
  },
  idFilterTop: n = _(() => ""),
  isModelFilterSavedNew: r = _(() => !1),
  modelFiltersSaved: s = B(void 0)
}) {
  const i = d(e, "id"), o = d(e, "updateFiltersSaved"), {
    changeConfirmOptions: u,
    closeConfirm: f,
    isModalHidden: A,
    openConfirm: E
  } = mf(), {
    addNotification: p
  } = $u(), T = _(() => `${i.value}btn_save`), S = _(() => r.value ? "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_" : {
    mobile: "_A_FILTERS_DELETE_FILTER_SAVED_BTN_"
  }), m = _(() => r.value ? "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_" : "_A_FILTERS_DELETE_FILTER_SAVED_BTN_"), b = async () => {
    u({
      loading: !0
    });
    try {
      await o.value({
        action: "delete",
        label: s.value
      });
    } catch {
      p({
        text: "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
        type: "danger",
        extra: {
          name: s.value
        }
      }), u({
        loading: !1
      });
      return;
    }
    p({
      text: "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
      extra: {
        name: s.value
      }
    }), u({
      loading: !1
    }), f(), t({ model: void 0, isDelete: !0 });
  };
  return {
    buttonDeleteId: T,
    isConfirmHidden: A,
    openDeleteConfirm: () => {
      E({
        headerText: "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
        bodyHtml: "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
        extra: {
          name: s.value
        },
        save: b,
        selectorCloseIds: [T.value, n.value],
        saveButtonText: "_A_FILTERS_DELETE_FILTER_BTN_DELETE_",
        stop: !0,
        zIndex: 1901,
        backdropZIndex: 1900
      });
    },
    textScreenreaderButtonDeleteFiltersSaved: m,
    titleButtonDeleteFiltersSaved: S
  };
}
function Zq(e) {
  const t = d(e, "filtersGroup"), n = d(e, "filtersVisible"), r = d(e, "updateDataKeyByIdFromFilter"), s = "a_column a_column_12_touch a_column_3_fullhd a_column_3_widescreen a_column_3_desktop", i = "a_columns a_columns_count_12 a_columns_gap_x_2 a_columns_gap_y_2 a_columns_gap_y_1_touch", o = "a_filters__form_element a_column a_column_12_touch a_column_9_fullhd a_column_9_widescreen a_column_9_desktop", u = ["select", "multiselect", "radio", "checkbox", "group", "fieldset"], f = ({ dataKeyByKeyId: E, item: p, filter: T }) => {
    let S = T.id;
    p && (S = p.id), r.value({
      filterId: S,
      dataKeyByKeyId: E
    });
  };
  return {
    dataForForm: _(() => {
      const E = [];
      return z(t.value.alwaysVisible, (p) => {
        const T = he(p);
        T.labelClass = s, T.classColumn = o, u.indexOf(p.type) !== -1 && (T.onUpdateData = ({ dataKeyByKeyId: S, item: m }) => f({ dataKeyByKeyId: S, item: m, filter: p })), E.push({
          type: "group",
          id: `group_${p.id}`,
          classColumns: i,
          children: [
            T
          ]
        });
      }), z(n.value, (p) => {
        const T = he(p);
        T.labelClass = s, T.classColumn = `${o}  a_d_flex a_align_items_center`, T.slotAppend = "groupAppend", T.class = "a_width_100", u.indexOf(p.type) !== -1 && (T.onUpdateData = ({ dataKeyByKeyId: S, item: m }) => f({ dataKeyByKeyId: S, item: m, filter: p })), E.push({
          type: "group",
          id: `group_${p.id}`,
          classColumns: i,
          children: [
            T
          ]
        });
      }), E;
    })
  };
}
function Jq(e) {
  const t = d(e, "id");
  return {
    idFilterTop: _(() => `${t.value}_filter_top`)
  };
}
function Qq(e, { emit: t }, {
  closeDropdown: n = () => {
  }
}) {
  const r = d(e, "disabled");
  return {
    onSearch: () => {
      r.value || (n(), t("startSearch"));
    }
  };
}
const e$ = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-filter" viewBox="0 0 16 16">
  <path d="M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5"/>
</svg>`, t$ = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-floppy2-fill" viewBox="0 0 16 16">
  <path d="M12 2h-2v3h2z"/>
  <path d="M1.5 0A1.5 1.5 0 0 0 0 1.5v13A1.5 1.5 0 0 0 1.5 16h13a1.5 1.5 0 0 0 1.5-1.5V2.914a1.5 1.5 0 0 0-.44-1.06L14.147.439A1.5 1.5 0 0 0 13.086 0zM4 6a1 1 0 0 1-1-1V1h10v4a1 1 0 0 1-1 1zM3 9h10a1 1 0 0 1 1 1v5H2v-5a1 1 0 0 1 1-1"/>
</svg>`, NS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2"/>
</svg>`, BS = `<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 1024 1024">
    <path d="M761.37 637.327l256.642 256.642q5.988 6.844 5.988 15.399t-5.988 15.399l-93.246 93.246q-6.844 5.988-15.399 5.988t-15.399-5.988l-256.642-256.642q-101.802 66.727-223.278 66.727-171.095 0-292.572-121.477t-121.477-292.572 121.477-292.572 292.572-121.477 292.572 121.477 121.477 292.572q0 121.477-66.727 223.278zM130.887 414.049q0 116.344 82.981 199.325t200.181 82.981 199.753-82.553 82.553-199.753-82.553-199.753-199.753-82.553-200.181 82.981-82.981 199.325z"></path>
</svg>
`, n$ = {
  name: "AFiltersHorizontal",
  props: {
    canSave: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersGroup: {
      type: Object,
      required: !0,
      default: () => ({
        alwaysVisible: [],
        filters: []
      })
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    filtersSaved: {
      type: Array,
      required: !0
    },
    filtersVisible: {
      type: Array,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    mainModel: {
      type: Object,
      required: !1
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    unappliedModel: {
      type: Object,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    },
    updateFiltersSaved: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch",
    "toggleFiltersVisible"
  ],
  setup(e, t) {
    const {
      dataForForm: n
    } = Zq(e), {
      closeDropdown: r,
      dropdownRef: s,
      isDropdownVisible: i,
      openDropdown: o
    } = jq(e), {
      idFilterTop: u
    } = Jq(e), {
      onSearch: f
    } = Qq(e, t, {
      closeDropdown: r
    }), {
      destroyEventBus: A,
      initEventBus: E,
      initEventName: p
    } = Kq(e, {
      openDropdown: o
    }), {
      addFiltersVisible: T,
      deleteFiltersVisible: S,
      filtersHidden: m,
      hasFiltersHiddenDefault: b
    } = zq(e, t), {
      buttonSaveComponentId: I,
      changeModelFiltersSaved: v,
      closeModalSave: g,
      filtersSavedLocal: R,
      initModelFiltersSaved: D,
      isModalSaveVisible: w,
      isModelFilterSavedNew: F,
      modelFiltersSaved: P,
      openModalSave: M,
      selectorCloseIds: O
    } = Yq(e, {
      openDropdown: o
    }), {
      buttonDeleteId: q,
      isConfirmHidden: U,
      openDeleteConfirm: G,
      textScreenreaderButtonDeleteFiltersSaved: te,
      titleButtonDeleteFiltersSaved: re
    } = Xq(e, {
      changeModelFiltersSaved: v,
      idFilterTop: u,
      isModelFilterSavedNew: F,
      modelFiltersSaved: P
    });
    return p(), D(), E(), Ot(() => {
      A();
    }), {
      addFiltersVisible: T,
      buttonDeleteId: q,
      buttonSaveComponentId: I,
      changeModelFiltersSaved: v,
      closeDropdown: r,
      closeModalSave: g,
      dataForForm: n,
      deleteFiltersVisible: S,
      dropdownRef: s,
      filtersHidden: m,
      filtersSavedLocal: R,
      hasFiltersHiddenDefault: b,
      idFilterTop: u,
      initModelFiltersSaved: D,
      isConfirmHidden: U,
      isDropdownVisible: i,
      isModalSaveVisible: w,
      isModelFilterSavedNew: F,
      modelFiltersSaved: P,
      onSearch: f,
      openDeleteConfirm: G,
      openModalSave: M,
      selectorCloseIds: O,
      textScreenreaderButtonDeleteFiltersSaved: te,
      titleButtonDeleteFiltersSaved: re
    };
  },
  render() {
    return this.isDropdownVisible ? [
      c(_a, {
        ref: "dropdownRef",
        buttonIconLeft: e$,
        buttonText: "Filter",
        buttonClass: "a_btn a_btn_primary a_btn_small a_filter_horizontal__btn_dropdown",
        dropdownTag: "div",
        dropdownClass: "a_filter_horizontal__wrapper",
        dropdownRenderDefault: !0,
        isCloseByClickInside: !1,
        hasCaret: !1,
        inBody: !0,
        lockArrowsNavigation: !1,
        lockTabNavigation: !1,
        useEscape: !this.isModalSaveVisible && this.isConfirmHidden
      }, {
        ...this.$slots,
        dropdown: () => c("div", {
          class: "a_filter_horizontal"
        }, [
          c("div", {
            class: "a_filter_horizontal__header__wrapper"
          }, [
            c("div", {
              class: "a_filter_horizontal__header"
            }, [
              c("div", {
                class: "a_filter_horizontal__header__texts"
              }, [
                c(pe, {
                  class: "a_filter_horizontal__header__texts__filter",
                  tag: "span",
                  text: "_A_FILTERS_HOR_FILTER_HEADER_"
                }),
                this.isModelFilterSavedNew ? c(pe, {
                  class: "a_filter_horizontal__header__texts__new",
                  tag: "em",
                  text: this.modelFiltersSaved
                }) : c("span", {}, this.modelFiltersSaved)
              ]),
              this.canSave ? c(Us, {
                modelValue: this.modelFiltersSaved,
                change: this.changeModelFiltersSaved,
                class: "a_filters_top__save_select",
                data: this.filtersSavedLocal,
                deselectable: !1,
                keyId: "label",
                keyLabel: "label",
                keyGroup: "group",
                label: "_A_FILTERS_SAVE_SELECT_",
                menuWidthType: "by_content",
                search: !0,
                translateData: !0,
                type: "select"
              }) : ""
            ])
          ]),
          c("div", {
            class: "a_filter_horizontal__body__wrapper"
          }, [
            c("div", {
              class: "a_filter_horizontal__body"
            }, [
              c(Uu, {
                idPrefix: this.idFilterTop,
                class: "a_filter_horizontal__body__form",
                classColumnDefault: "",
                classColumns: "",
                data: this.dataForForm,
                excludeRenderAttributes: this.excludeRenderAttributes,
                modelValue: this.unappliedModel,
                showErrors: !1,
                onChange: this.onUpdateModelFilters
              }, {
                ...this.$slots,
                groupAppend: ({ item: e }) => c(Ee, {
                  type: "button",
                  class: "a_btn a_btn_primary a_ml_2",
                  title: "_A_FILTERS_TOP_CLOSE_",
                  textScreenReader: "_A_FILTERS_TOP_CLOSE_",
                  iconLeft: Ta,
                  stop: !0,
                  onClick: () => this.deleteFiltersVisible({ filter: e })
                }),
                formDataAppend: () => c("div", {
                  class: "a_filter_horizontal__add_filter__wrapper"
                }, [
                  c(Us, {
                    buttonClassDefault: "a_btn a_btn_primary a_filter_horizontal__add_filter",
                    change: this.addFiltersVisible,
                    data: this.filtersHidden,
                    hasCaret: !1,
                    disabled: !this.filtersHidden.length,
                    isLabelFloat: !1,
                    keyGroup: "group",
                    keyId: "id",
                    keyLabel: "label",
                    label: "_A_FILTERS_ADD_FILTER_",
                    labelClass: "a_sr_only",
                    menuWidthType: "by_content",
                    sortOrderGroup: "asc",
                    placement: "bottom-start",
                    search: !0,
                    translateData: !0,
                    type: "select"
                  }, {
                    fixedPlaceholder: () => [
                      c(pe, {
                        tag: "span",
                        ariaHidden: !0,
                        class: "a_position_absolute_all",
                        title: "_A_FILTERS_ADD_FILTER_"
                      }),
                      c(_t, {
                        icon: NS
                      })
                    ]
                  })
                ]),
                formAppend: () => this.canSave ? c("div", {
                  class: "a_filter_horizontal__save_actions"
                }, [
                  c(Ee, {
                    id: this.buttonSaveComponentId,
                    class: "a_btn a_btn_primary",
                    iconLeft: t$,
                    type: "button",
                    text: "_A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_",
                    onClick: this.openModalSave
                  }),
                  c(Ee, {
                    id: this.buttonDeleteId,
                    ariaDisabled: this.isModelFilterSavedNew,
                    class: "a_btn a_btn_secondary",
                    iconLeft: Sf,
                    text: {
                      desktop: "_A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_"
                    },
                    textAriaHidden: !0,
                    textScreenReader: this.textScreenreaderButtonDeleteFiltersSaved,
                    title: this.titleButtonDeleteFiltersSaved,
                    type: "button",
                    onClick: this.openDeleteConfirm
                  })
                ]) : ""
              })
            ]),
            c("div", {
              class: "a_filter_horizontal__footer"
            }, [
              c("div", {
                class: "a_filter_horizontal__footer__actions"
              }, [
                c(Ee, {
                  type: "button",
                  class: "a_btn a_btn_primary a_text_nowrap a_filter_horizontal__footer__actions__btn_search",
                  iconLeft: BS,
                  text: "_A_FILTERS_START_SEARCH_",
                  disabled: this.disabled,
                  onClick: this.onSearch
                }),
                c(Ee, {
                  type: "button",
                  class: "a_btn a_btn_secondary a_text_nowrap a_filter_horizontal__footer__actions__btn_close",
                  text: "_A_FILTERS_HOR_CLOSE_DROPDOWN_",
                  onClick: this.closeDropdown
                })
              ])
            ])
          ])
        ])
      }),
      this.isModalSaveVisible ? c(Gq, {
        changeModelFiltersSaved: this.changeModelFiltersSaved,
        filtersSaved: this.filtersSaved,
        isModelFilterSavedNew: this.isModelFilterSavedNew,
        modelFiltersSaved: this.modelFiltersSaved,
        selectorCloseIds: this.selectorCloseIds,
        updateFiltersSaved: this.updateFiltersSaved,
        onClose: this.closeModalSave
      }) : ""
    ] : null;
  }
};
function r$(e) {
  const t = d(e, "id");
  return {
    idFilterTop: _(() => `${t.value}_filter_main`)
  };
}
function a$(e) {
  const t = d(e, "filterMain"), n = _(() => !!t.value), r = _(() => n.value ? [
    t.value
  ] : []);
  return {
    hasFilterMain: n,
    dataMainFilter: r
  };
}
function s$(e, { emit: t }) {
  const n = d(e, "disabled");
  return {
    onSearch: () => {
      n.value || t("startSearch");
    }
  };
}
const i$ = {
  name: "AFiltersMain",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filterMain: {
      type: Object,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    mainModel: {
      type: Object,
      required: !1
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    },
    updateMainModel: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch"
  ],
  setup(e, t) {
    const {
      hasFilterMain: n,
      dataMainFilter: r
    } = a$(e), {
      idFilterTop: s
    } = r$(e), {
      onSearch: i
    } = s$(e, t);
    return {
      hasFilterMain: n,
      dataMainFilter: r,
      idFilterTop: s,
      onSearch: i
    };
  },
  render() {
    return this.hasFilterMain ? c("div", {
      id: this.idFilterTop,
      class: "a_filters_top"
    }, [
      c(Uu, {
        idPrefix: this.idFilterTop,
        class: "a_filters_top__form",
        classColumns: "a_filters_top__main_wrapper",
        classColumnDefault: "a_filters_top__main",
        data: this.dataMainFilter,
        excludeRenderAttributes: this.excludeRenderAttributes,
        modelValue: this.mainModel,
        showErrors: !1,
        onChange: this.updateMainModel
      }, {
        formDataAppend: () => c(pt, {
          class: "a_btn a_btn_primary a_text_nowrap a_filters_top__search",
          iconLeft: Fl,
          type: "submit",
          text: {
            desktop: "_A_FILTERS_START_SEARCH_"
          },
          textScreenReader: {
            mobile: "_A_FILTERS_START_SEARCH_"
          },
          prevent: !0,
          stop: !0,
          disabled: this.disabled,
          onClick: this.onSearch
        })
      })
    ]) : null;
  }
};
function l$(e, { emit: t }, {
  filtersHorizontalRef: n = B(void 0),
  filtersVisibleAll: r = _(() => []),
  onUpdateModelFilters: s = () => {
  }
}) {
  const i = d(e, "appliedModel"), o = d(e, "unappliedModel"), u = () => {
    var p;
    (p = n.value) == null || p.initModelFiltersSaved();
  }, f = ({ filter: p, keyId: T, modelArray: S, appliedModelLocal: m, unappliedModelLocal: b }) => {
    const I = p.id;
    return pf.value[p.type] ? (m[I] && m[I].length && (S ? m[I] = mt(m[I], (v) => S.indexOf(v) === -1) : m[I] = []), b[I] && b[I].length && (S ? b[I] = mt(b[I], (v) => S.indexOf(v) === -1) : b[I] = [])) : TS.value[p.type] && T ? (st(b == null ? void 0 : b[I]) && (b[I][T] = void 0), st(m == null ? void 0 : m[I]) && (m[I][T] = void 0)) : (b[I] = void 0, m[I] = void 0), {
      appliedModelLocal: m,
      unappliedModelLocal: b
    };
  };
  return {
    closeAllFilters: () => {
      let p = he(i.value), T = he(o.value);
      z(r.value, (S) => {
        const m = f({
          filter: S,
          appliedModelLocal: p,
          unappliedModelLocal: T
        });
        p = m.appliedModelLocal, T = m.unappliedModelLocal;
      }), u(), t("update:unappliedModel", T), t("update:appliedModel", p), setTimeout(() => {
        s({ fullModel: i.value });
      });
    },
    closeFilterValue: ({ filter: p, keyId: T, modelArray: S }) => {
      const m = he(i.value), b = he(o.value), {
        appliedModelLocal: I,
        unappliedModelLocal: v
      } = f({
        filter: p,
        keyId: T,
        modelArray: S,
        appliedModelLocal: m,
        unappliedModelLocal: b
      });
      t("update:unappliedModel", v), t("update:appliedModel", I), setTimeout(() => {
        s({ fullModel: i.value });
      });
    }
  };
}
function o$() {
  const e = B({});
  return {
    dataKeyByKeyIdPerFilter: e,
    updateDataKeyByIdFromFilter: ({ dataKeyByKeyId: n, filterId: r }) => {
      e.value[r] = he(n);
    }
  };
}
function u$(e) {
  const t = d(e, "excludeRenderAttributes"), n = [
    "alwaysVisible"
  ];
  return {
    excludeRenderAttributesComputed: _(() => gP(n, t.value))
  };
}
function _$({ filter: e = {}, modelObj: t = {} }) {
  var r;
  const n = e.id;
  return n in t ? pf.value[e.type] ? !!((r = t[n]) != null && r.length) : TS.value[e.type] ? !!(t[n] && !pn(t[n])) : !0 : !1;
}
function d$(e, { emit: t }) {
  const n = d(e, "filters"), r = d(e, "filterMain"), s = d(e, "unappliedModel"), i = B({}), o = B(void 0), u = B([]), f = _(() => !!(n.value.length || r.value)), A = _(() => {
    const v = {};
    return z(he(n.value), (g) => {
      v[g.id] = g, Oi.value[g.type] && g.children && g.children.length && z(g.children, (R) => {
        v[R.id] = R;
      });
    }), v;
  }), E = _(() => {
    const v = {
      alwaysVisible: [],
      filters: []
    };
    return z(he(n.value), (g) => {
      g.alwaysVisible ? v.alwaysVisible.push(g) : v.filters.push(g);
    }), v;
  }), p = _(() => {
    const v = [];
    return z(u.value, (g) => {
      A.value[g] && v.push(A.value[g]);
    }), v;
  }), T = _(() => {
    const v = [];
    v.push(...n.value);
    const g = [];
    return z(v, (R) => {
      g.push(R), Oi.value[R.type] && R.children && R.children.length && z(R.children, (D) => {
        g.push(D);
      });
    }), g;
  }), S = () => {
    const v = [];
    z(E.value.filters, (g) => {
      _$({
        filter: g,
        modelObj: s.value
      }) && v.push(g.id);
    }), u.value = v;
  };
  return {
    filtersDataKeyById: i,
    filtersGroup: E,
    filtersHorizontalRef: o,
    filtersKeyById: A,
    filtersVisible: p,
    filtersVisibleAll: T,
    filtersVisibleIds: u,
    hasFilters: f,
    onUpdateModelFilters: ({ fullModel: v, isUpdateFiltersVisible: g }) => {
      t("update:unappliedModel", v), g && setTimeout(() => {
        S();
      });
    },
    setFiltersVisibleIds: S,
    updateAppliedModel: ({ fullModel: v }) => {
      t("update:appliedModel", v);
    },
    updateMainModel: ({ fullModel: v }) => {
      t("update:mainModel", v);
    }
  };
}
function c$(e) {
  const t = d(e, "filtersSaved"), n = d(e, "unappliedModel"), r = d(e, "updateFiltersSaved"), s = B([]);
  return {
    filtersSavedLocal: s,
    initFiltersSaved: () => {
      s.value = t.value || [];
    },
    updateFiltersSavedLocal: ({ action: u = "", label: f = "" }) => {
      if (u === "create")
        s.value.push({
          label: f,
          data: he(n.value)
        });
      else {
        const A = la(s.value, ["label", f]);
        A !== -1 && (u === "delete" ? s.value.splice(A, 1) : u === "update" && s.value.splice(A, 1, {
          label: f,
          data: he(n.value)
        }));
      }
      Ne(r.value) && r.value({
        action: u,
        label: f,
        model: n.value,
        filtersSaved: s.value
      });
    }
  };
}
function f$(e, { emit: t }, {
  onUpdateModelFilters: n = () => {
  }
}) {
  const r = d(e, "appliedModel"), s = d(e, "unappliedModel");
  return {
    startSearch: () => {
      t("update:appliedModel", s.value), setTimeout(() => {
        n({ fullModel: r.value });
      });
    }
  };
}
function h$(e, {
  dataKeyByKeyIdPerFilter: t = B({}),
  filtersVisibleIds: n = B([]),
  onUpdateModelFilters: r = () => {
  }
}) {
  const s = d(e, "unappliedModel");
  return {
    toggleFiltersVisible: ({ isAdd: o = !0, filterId: u, filter: f }) => {
      var A, E;
      if (o)
        n.value.push(u);
      else {
        const p = n.value.indexOf(u);
        p !== -1 && n.value.splice(p, 1);
        const T = he(s.value);
        if (f && f.modelId) {
          const S = (A = t.value) == null ? void 0 : A[u];
          (E = T == null ? void 0 : T[f.modelId]) != null && E.length && S ? T[f.modelId] = mt(T[f.modelId], (m) => !S[m]) : T[u] = void 0;
        } else
          T[u] = void 0;
        r({ fullModel: T });
      }
    }
  };
}
const Mhe = {
  name: "AFilters",
  props: {
    appliedModel: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canSave: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filterMain: {
      type: Object,
      required: !1
    },
    filters: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersSaved: {
      type: Array,
      required: !1,
      default: () => []
    },
    id: {
      type: String,
      required: !1,
      default: () => at("a_filters_")
    },
    mainModel: {
      type: Object,
      required: !1
    },
    unappliedModel: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    updateFiltersSaved: {
      type: Function,
      required: !1,
      default: void 0
    },
    view: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => ["top", "right"].indexOf(e) !== -1
    },
    viewRightTeleportSelector: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "startSearch",
    "update:appliedModel",
    "update:mainModel",
    "update:unappliedModel"
  ],
  setup(e, t) {
    const n = d(e, "filtersSaved"), {
      filtersDataKeyById: r,
      filtersGroup: s,
      filtersHorizontalRef: i,
      filtersKeyById: o,
      filtersVisible: u,
      filtersVisibleAll: f,
      filtersVisibleIds: A,
      hasFilters: E,
      onUpdateModelFilters: p,
      setFiltersVisibleIds: T,
      updateAppliedModel: S,
      updateMainModel: m
    } = d$(e, t), {
      closeAllFilters: b,
      closeFilterValue: I
    } = l$(e, t, {
      filtersHorizontalRef: i,
      filtersVisibleAll: f,
      onUpdateModelFilters: p
    }), {
      dataKeyByKeyIdPerFilter: v,
      updateDataKeyByIdFromFilter: g
    } = o$(), {
      toggleFiltersVisible: R
    } = h$(e, {
      dataKeyByKeyIdPerFilter: v,
      filtersVisibleIds: A,
      onUpdateModelFilters: p
    }), {
      startSearch: D
    } = f$(e, t, {
      onUpdateModelFilters: p
    }), {
      filtersSavedLocal: w,
      initFiltersSaved: F,
      updateFiltersSavedLocal: P
    } = c$(e), {
      excludeRenderAttributesComputed: M
    } = u$(e);
    return rt(n, () => {
      F();
    }, {
      deep: !0
    }), T(), F(), {
      closeAllFilters: b,
      closeFilterValue: I,
      dataKeyByKeyIdPerFilter: v,
      excludeRenderAttributesComputed: M,
      filtersDataKeyById: r,
      filtersGroup: s,
      filtersHorizontalRef: i,
      filtersKeyById: o,
      filtersSavedLocal: w,
      filtersVisible: u,
      filtersVisibleAll: f,
      filtersVisibleIds: A,
      hasFilters: E,
      onUpdateModelFilters: p,
      setFiltersVisibleIds: T,
      startSearch: D,
      toggleFiltersVisible: R,
      updateAppliedModel: S,
      updateDataKeyByIdFromFilter: g,
      updateFiltersSavedLocal: P,
      updateMainModel: m
    };
  },
  render() {
    if (this.hasFilters)
      return c(
        "div",
        [
          this.view === "top" && c(i$, {
            id: this.id,
            disabled: this.disabled,
            excludeRenderAttributes: this.excludeRenderAttributesComputed,
            filterMain: this.filterMain,
            mainModel: this.mainModel,
            updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
            updateMainModel: this.updateMainModel,
            onStartSearch: this.startSearch
          }, this.$slots),
          this.view === "right" && c(da, {
            to: this.viewRightTeleportSelector,
            disabled: !this.viewRightTeleportSelector
          }, [
            c(vq, {
              id: this.id,
              disabled: this.disabled,
              excludeRenderAttributes: this.excludeRenderAttributesComputed,
              filters: this.filters,
              filtersKeyById: this.filtersKeyById,
              appliedModel: this.appliedModel,
              onUpdateModelFilters: this.updateAppliedModel,
              updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
              onStartSearch: this.startSearch
            }, this.$slots)
          ]),
          c(qq, {
            id: this.id,
            appliedModel: this.appliedModel,
            closeAllFilters: this.closeAllFilters,
            closeFilterValue: this.closeFilterValue,
            dataKeyByKeyIdPerFilter: this.dataKeyByKeyIdPerFilter,
            disabled: this.disabled,
            filtersGroup: this.filtersGroup,
            filtersKeyById: this.filtersKeyById,
            filtersVisibleAll: this.filtersVisibleAll
          }, {
            filtersHorizontal: () => this.view === "top" ? c(n$, {
              ref: "filtersHorizontalRef",
              id: this.id,
              canSave: this.canSave,
              disabled: this.disabled,
              excludeRenderAttributes: this.excludeRenderAttributesComputed,
              filtersGroup: this.filtersGroup,
              filtersKeyById: this.filtersKeyById,
              filtersSaved: this.filtersSavedLocal,
              filtersVisible: this.filtersVisible,
              onUpdateModelFilters: this.onUpdateModelFilters,
              unappliedModel: this.unappliedModel,
              updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
              updateFiltersSaved: this.updateFiltersSavedLocal,
              onStartSearch: this.startSearch,
              onToggleFiltersVisible: this.toggleFiltersVisible
            }, this.$slots) : "",
            ...this.$slots
          })
        ]
      );
  }
}, A$ = {
  name: "ARequired",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    text: {
      type: String,
      required: !1,
      default: "_A_REQUIRED_TEXT_"
    }
  },
  render() {
    return c(pe, {
      alwaysTranslate: this.alwaysTranslate,
      class: "a_required",
      html: this.text
    });
  }
};
function E$(e) {
  const t = d(e, "isHide");
  return {
    styleFormHide: _(() => t.value ? "display: none;" : "")
  };
}
function p$(e, { emit: t }) {
  const n = d(e, "modelValue"), r = _(() => n.value || {});
  return {
    modelValueLocal: r,
    onUpdateModelLocal: ({ currentModel: i, id: o, item: u, model: f, props: A, component: E }) => {
      const p = he(r.value);
      Uc(p, o, he(f)), t("update:modelValue", p), t("change", { currentModel: i, id: o, item: u, fullModel: p, model: f, props: A }), Ne(E.change) && E.change({ currentModel: i, id: o, item: u, fullModel: p, model: f, props: A });
    }
  };
}
function T$(e) {
  const t = d(e, "data"), n = d(e, "isRequired"), r = d(e, "readonly");
  return {
    isRequiredLocal: _(() => {
      if (r.value)
        return !1;
      if (n.value)
        return !0;
      let i = !1;
      return z(t.value, (o) => {
        if (o.required)
          return i = !0, !1;
      }), i;
    })
  };
}
const Uu = {
  name: "AForm",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12 a_columns_gap_2"
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_12"
    },
    data: {
      type: Array,
      required: !0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRequired: {
      type: Boolean,
      required: !1
    },
    modelValue: {
      type: Object,
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    showErrors: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tag: {
      type: String,
      required: !1,
      default: "form"
    },
    textRequired: {
      type: String,
      required: !1,
      default: void 0
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue",
    "change"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      modelValueLocal: r,
      onUpdateModelLocal: s
    } = p$(e, t), {
      styleFormHide: i
    } = E$(e), {
      isRequiredLocal: o
    } = T$(e);
    return {
      attributesToExcludeFromRender: n,
      componentTypesMapping: () => ({
        ...$l,
        ...Lf,
        ..._n.components,
        ..._n.containerComponents
      }),
      isRequiredLocal: o,
      modelValueLocal: r,
      onUpdateModelLocal: s,
      styleFormHide: i
    };
  },
  render() {
    return this.isRender ? c(this.tag, {
      class: "a_form",
      style: this.styleFormHide
    }, [
      this.$slots.formPrepend ? this.$slots.formPrepend() : "",
      this.isRequiredLocal ? c(A$, {
        text: this.textRequired
      }) : "",
      this.$slots.formPrependAfterRequired ? this.$slots.formPrependAfterRequired() : "",
      this.showErrors ? c(D0, {
        alwaysTranslate: this.alwaysTranslate,
        errors: this.errors,
        closable: !1,
        optionsList: this.data,
        idPrefix: this.idPrefix,
        textErrorHeader: this.textErrorHeader
      }) : "",
      c("div", {
        class: this.classColumns
      }, [
        this.$slots.formDataPrepend ? this.$slots.formDataPrepend() : "",
        ...this.data.map((e, t) => {
          const n = Oi.value[e.type];
          let r;
          se(e.classColumn) ? r = this.classColumnDefault : e.classColumn && (r = e.classColumn);
          const s = this.componentTypesMapping()[e.type];
          return c(s, {
            key: t,
            alwaysTranslate: this.alwaysTranslate,
            modelValue: n ? this.modelValueLocal : ce(this.modelValueLocal, e.id),
            modelDependencies: n ? this.modelValueLocal : void 0,
            class: r,
            errors: this.errors[e.id],
            errorsAll: n ? this.errors : void 0,
            idPrefix: this.idPrefix,
            excludeRenderAttributes: this.excludeRenderAttributes,
            ...e,
            change: ({ currentModel: i, id: o, item: u, model: f, props: A }) => this.onUpdateModelLocal({
              currentModel: i,
              id: o,
              item: u,
              model: f,
              props: A,
              component: e
            }),
            readonly: this.readonly || e.readonly,
            readonlyDefault: "readonlyDefault" in e && !Pe(e.readonlyDefault) ? e.readonlyDefault : this.readonlyDefault,
            classColumn: void 0,
            ...this.attributesToExcludeFromRender
          }, this.$slots);
        }),
        this.$slots.formDataAppend ? this.$slots.formDataAppend() : ""
      ]),
      this.$slots.formAppend ? this.$slots.formAppend() : ""
    ]) : null;
  }
}, Fhe = {
  name: "AFormElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      required: !1,
      default: void 0
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    type: {
      type: String,
      required: !0
    }
  },
  emits: [
    "update:modelValue"
  ],
  setup(e, { emit: t, slots: n }) {
    const r = d(e, "options"), s = d(e, "type"), i = () => ({
      ...$l,
      ...Lf,
      ..._n.components,
      ..._n.containerComponents
    });
    return () => {
      const o = i()[s.value];
      return c(o, {
        ...e,
        ...r.value,
        "onUpdate:modelValue": (u) => t("update:modelValue", u)
      }, n);
    };
  }
};
function S$({ emit: e }) {
  return {
    clearLocal: ({ $event: n }) => {
      n.stopPropagation(), n.preventDefault(), e("clear", n);
    }
  };
}
const ku = {
  name: "AFormElementBtnClear",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    class: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_transparent_dark a_btn_small"
    },
    icon: {
      type: String,
      required: !1,
      default: Ta
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    title: {
      type: String,
      required: !1,
      default: "_REMOVE_FIELD_CONTENT_"
    },
    textScreenReader: {
      type: String,
      required: !1,
      default: "_REMOVE_FIELD_CONTENT_"
    },
    tabindex: {
      type: Number,
      required: !1,
      default: -1
    },
    iconClass: {
      type: String,
      required: !1,
      default: "a_form_element__btn_close__icon"
    }
  },
  emits: [
    "clear"
  ],
  setup(e, t) {
    const {
      clearLocal: n
    } = S$(t);
    return {
      clearLocal: n
    };
  },
  render() {
    if (!this.disabled)
      return c(Ee, {
        class: [
          "a_form_control__actions__btn",
          this.class
        ],
        disabled: this.disabled,
        iconClass: this.iconClass,
        iconLeft: this.icon,
        onClick: this.clearLocal,
        tabindex: this.tabindex,
        textScreenReader: this.textScreenReader,
        title: this.title,
        type: "button"
      });
  }
};
function L$(e) {
  const t = d(e, "id"), n = d(e, "helpText"), r = d(e, "label"), s = d(e, "labelScreenReader"), i = de("isRangeProvide", !1), o = _(() => `${t.value}_label`), u = _(() => `${t.value}_help_text`), f = _(() => `${t.value}_value`), A = _(() => {
    if (!i.value && (r.value || s.value))
      return o.value;
  }), E = _(() => {
    if (!i.value)
      return !se(n.value) && n.value !== "" ? `${f.value} ${u.value}` : `${f.value}`;
  }), p = _(() => {
    if (!i.value)
      return "group";
  });
  return {
    ariaDescribedby: E,
    ariaLabelledby: A,
    helpTextId: u,
    isRangeProvide: i,
    labelId: o,
    role: p,
    valueId: f
  };
}
function m$(e) {
  const t = d(e, "modelValue"), n = d(e, "readonlyDefault");
  return {
    modelValueReadonly: _(() => se(t.value) || t.value === "" ? n.value : t.value)
  };
}
const Ln = {
  name: "AFormReadonly",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRange: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    type: {
      type: String,
      required: !1,
      default: void 0
    },
    valueClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    valueParentClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    valueTag: {
      type: String,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = d(e, "isRange"), {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      ariaDescribedby: r,
      ariaLabelledby: s,
      helpTextId: i,
      labelId: o,
      role: u,
      valueId: f
    } = L$(e), {
      modelValueReadonly: A
    } = m$(e);
    return Je("isRangeProvide", t), {
      ariaDescribedby: r,
      ariaLabelledby: s,
      attributesToExcludeFromRender: n,
      helpTextId: i,
      labelId: o,
      modelValueReadonly: A,
      role: u,
      valueId: f
    };
  },
  render() {
    return c("div", {
      "aria-labelledby": this.ariaLabelledby,
      "aria-describedby": this.ariaDescribedby,
      class: "a_form_element_readonly",
      role: this.role,
      ...this.attributesToExcludeFromRender
    }, [
      this.label || this.labelScreenReader ? c(Ut, {
        id: this.id,
        alwaysTranslate: this.alwaysTranslate,
        extra: this.extra,
        isLabelFloat: !1,
        label: this.label,
        labelClass: this.labelClass,
        labelScreenReader: this.labelScreenReader,
        readonly: !0,
        required: !1,
        tag: "div",
        type: this.type
      }) : "",
      c("div", {
        id: this.valueId,
        class: [
          "a_form_element_readonly_value",
          this.valueParentClass
        ]
      }, [
        this.$slots.default ? this.$slots.default() : c(pe, {
          class: this.valueClass,
          extra: this.extra,
          html: this.modelValueReadonly,
          tag: this.valueTag
        })
      ]),
      c(Yt, {
        id: this.helpTextId,
        alwaysTranslate: this.alwaysTranslate,
        html: this.helpText,
        extra: this.extra
      })
    ]);
  }
}, ac = {
  name: "AGet",
  props: {
    keyLabel: {
      type: [String, Array],
      required: !0,
      info: "Weg zu Informationen. Z.B.('a[0].b.c', 'vertrag.antrag_obj.pk', ['vertrag', aloha, 'pk'])"
    },
    data: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Haupt-Objekt oder -Array, wo man sucht"
    },
    tag: {
      type: String,
      required: !1,
      default: "span",
      info: "Semantisch-relevanter HTML-Tag.(span, div, ...)"
    },
    defaultValue: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Standardwert, wenn Lodash-Funktion 'get' undefined zurückschickt"
    },
    filter: {
      type: String,
      required: !1,
      default: void 0
    },
    filterParameters: {
      type: [Object, String, Number, Boolean],
      required: !1,
      default: () => {
      }
    },
    replacedWithDefault: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Wenn das Wert, das Lodash-Funktion 'get' zurückschickt, === this.replacedWithDefault, dann this.defaultValue"
    }
  },
  setup() {
    return jn();
  },
  computed: {
    valueLocal() {
      let e = ce(this.data, this.keyLabelLocal);
      if (se(e) && (e = this.defaultValue), this.isValueEqualsWithValueThenDefaultValue(e))
        return this.defaultValue;
      if (this.filter) {
        const t = `filter${tT(this.filter)}`;
        if (Ne(this[t]))
          return this[t](e, this.filterParameters);
        console.warn(`filter "${t}" ist not defined`);
      }
      return e;
    },
    keyLabelLocal() {
      return Se(this.keyLabel) ? this.keyLabel.join(".") : this.keyLabel;
    }
  },
  methods: {
    isValueEqualsWithValueThenDefaultValue(e) {
      if (Pe(this.replacedWithDefault))
        return !1;
      let t = !1;
      return Se(this.replacedWithDefault) ? z(this.replacedWithDefault, (n) => {
        if (n === e)
          return t = !0, !1;
      }) : this.replacedWithDefault === e && (t = !0), t;
    }
  },
  render() {
    return Nt(c(this.tag), [
      [Kt, this.valueLocal]
    ]);
  }
}, Hu = {
  name: "ALink",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    href: {
      type: String,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => at("a_link_")
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    target: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Gn.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => ot(e) ? e === "auto" : pa(e)
    },
    to: {
      type: [Object, String],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      clickEmit: n
    } = UT(e, t);
    return {
      clickEmit: n
    };
  },
  render() {
    return c(Ee, {
      ...this.$attrs,
      ...this.$props,
      type: "link",
      onClick: this.clickEmit
    }, this.$slots);
  }
};
function b$(e) {
  const t = d(e, "isLast"), n = d(e, "hasDropdownActions"), r = d(e, "hasDividerBeforeDropdown"), s = _(() => t.value && n.value), i = _(() => s.value && !r.value);
  return {
    isDropdownActionsAfterGroup: _(() => s.value && r.value),
    isDropdownActionsInGroup: i
  };
}
const I$ = {
  name: "AGroupButtonDropdownItem",
  props: {
    actionsClasses: {
      type: Array,
      required: !0
    },
    actionsIds: {
      type: Array,
      required: !0
    },
    actionsDropdown: {
      type: Array,
      required: !0
    },
    btnGroupClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn_group"
    },
    data: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !0
    },
    hasDividerBeforeDropdown: {
      type: Boolean,
      required: !0
    },
    hasDropdownActions: {
      type: Boolean,
      required: !0
    },
    isLast: {
      type: Boolean,
      required: !0
    }
  },
  setup(e) {
    const {
      isDropdownActionsAfterGroup: t,
      isDropdownActionsInGroup: n
    } = b$(e);
    return {
      isDropdownActionsAfterGroup: t,
      isDropdownActionsInGroup: n
    };
  },
  render() {
    return [
      !!this.data.children.length && c("div", {
        class: this.btnGroupClass
      }, [
        ...this.data.children.map((e) => {
          let t = e.classButton ? e.classButton : this.actionsClasses[e.actionNotDividerIndex];
          e.classExtra && (t = zo({
            class1: t,
            class2: e.classExtra
          }));
          const n = e.id ? e.id : this.actionsIds[e.actionNotDividerIndex], r = this.disabled || e.disabled;
          if (e.type === "button")
            return c(pt, {
              ...e,
              id: n,
              class: t,
              classButton: void 0,
              classExtra: void 0,
              disabled: r,
              onClick: e.callback,
              callback: void 0,
              actionNotDividerIndex: void 0,
              isHidden: void 0,
              isConfirm: void 0,
              callbackLocal: void 0
            });
          if (e.type === "link")
            return c(Hu, {
              ...e,
              id: n,
              classButton: void 0,
              classExtra: void 0,
              disabled: r,
              class: t,
              actionNotDividerIndex: void 0,
              isHidden: void 0,
              type: void 0,
              isConfirm: void 0,
              callbackLocal: void 0
            });
          if (e.type === "template" && e.slotName && this.$slots[e.slotName])
            return this.$slots[e.slotName]({
              id: n,
              class: t,
              action: e
            });
        }),
        this.isDropdownActionsInGroup && c(_a, {
          isHideWithoutActionAndSlot: !0,
          actions: this.actionsDropdown,
          disabled: this.disabled,
          ...this.dropdownAttributes
        }, this.$slots)
      ]),
      this.isDropdownActionsAfterGroup && c(_a, {
        isHideWithoutActionAndSlot: !0,
        actions: this.actionsDropdown,
        disabled: this.disabled,
        ...this.dropdownAttributes
      }, this.$slots)
    ];
  }
};
function v$(e) {
  const t = d(e, "actions"), n = d(e, "indexFirstDropdownAction"), r = d(e, "indexFirstDropdownActionMobile"), s = d(e, "minDropdownActions"), {
    isMobileWidth: i
  } = Sn(), o = _(() => dS({
    actions: t.value
  })), u = _(() => {
    const S = he(o.value);
    return z(S, (m) => {
      m.classButton = zo({
        class1: m.classButton,
        class2: m.class
      }), m.class = zo({
        class1: m.classDropdown,
        class2: m.class
      }), delete m.classDropdown, m.classExtra && (m.class = zo({
        class1: m.classExtra,
        class2: m.class
      }));
    }), S;
  }), f = _(() => i.value ? r.value : n.value), A = ({ actions: S = [], minCountActions: m = 0 }) => {
    let b = 0;
    return z(S, (I) => {
      if (b >= m)
        return !1;
      I.type !== "divider" && b++;
    }), b >= m;
  }, E = _(() => {
    const S = he(u.value), m = {
      buttons: [],
      dropdown: []
    };
    let b = 0, I = !0;
    return z(S, (v, g) => {
      if (b === f.value) {
        const R = S.slice(g, S.length);
        if (A({
          actions: R,
          minCountActions: s.value
        }))
          return m.dropdown = S.splice(g, S.length), f.value === 0 && m.buttons.push({
            type: "group",
            children: []
          }), !1;
      }
      v.type !== "divider" ? (v.actionNotDividerIndex = b, b++, I ? m.buttons.push({
        type: "group",
        children: [v]
      }) : vi(m.buttons).children.push(v), I = !1) : I = !0;
    }), m;
  }), p = _(() => E.value.dropdown.length > 0), T = _(() => u.value.length > 0);
  return {
    actionsAllWithClassesFiltered: u,
    actionsGrouped: E,
    hasActionsAllFiltered: T,
    hasDropdownActions: p
  };
}
const wa = B({
  propsDefault: {
    actionsClasses: ["a_btn a_btn_primary", "a_btn a_btn_secondary"],
    dropdownAttributes: {},
    hasDividerBeforeDropdown: !0,
    indexFirstDropdownAction: 1,
    indexFirstDropdownActionMobile: 0,
    minDropdownActions: 2,
    useActionClass: !0,
    useDropdownActionClass: !1
  }
}), qhe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    wa.value.propsDefault = {
      ...wa.value.propsDefault,
      ...t
    };
  }
}, sc = {
  name: "AGroupButtonDropdown",
  props: {
    actions: {
      type: Array,
      required: !1,
      default: () => []
    },
    actionsClasses: {
      type: Array,
      required: !1,
      default: () => wa.value.propsDefault.actionsClasses
    },
    actionsIds: {
      type: Array,
      required: !1,
      default: () => []
    },
    btnGroupClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn_group"
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !1,
      default: () => wa.value.propsDefault.dropdownAttributes
    },
    hasDividerBeforeDropdown: {
      type: Boolean,
      required: !1,
      default: () => wa.value.propsDefault.hasDividerBeforeDropdown
    },
    indexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: () => wa.value.propsDefault.indexFirstDropdownAction,
      validator: (e) => e >= -1
    },
    indexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: () => wa.value.propsDefault.indexFirstDropdownActionMobile,
      validator: (e) => e >= -1
    },
    minDropdownActions: {
      type: Number,
      required: !1,
      default: () => wa.value.propsDefault.minDropdownActions
    },
    innerFlagHasActions: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "update:innerFlagHasActions"
  ],
  setup(e, { emit: t }) {
    const {
      actionsAllWithClassesFiltered: n,
      actionsGrouped: r,
      hasActionsAllFiltered: s,
      hasDropdownActions: i
    } = v$(e);
    return rt(s, (o) => {
      t("update:innerFlagHasActions", o);
    }, {
      immediate: !0
    }), {
      actionsAllWithClassesFiltered: n,
      actionsGrouped: r,
      hasActionsAllFiltered: s,
      hasDropdownActions: i
    };
  },
  render() {
    if (this.hasActionsAllFiltered)
      return c("div", {
        class: "aloha_group_btn_dropdown"
      }, [
        ...this.actionsGrouped.buttons.map((e, t) => c(I$, {
          btnGroupClass: this.btnGroupClass,
          data: e,
          disabled: this.disabled,
          actionsDropdown: this.actionsGrouped.dropdown,
          hasDropdownActions: this.hasDropdownActions,
          dropdownAttributes: this.dropdownAttributes,
          actionsClasses: this.actionsClasses,
          actionsIds: this.actionsIds,
          isLast: t === this.actionsGrouped.buttons.length - 1,
          hasDividerBeforeDropdown: this.hasDividerBeforeDropdown
        }, this.$slots))
      ]);
  }
};
function y$(e) {
  const t = d(e, "callback"), n = d(e, "disabled"), r = d(e, "rootMargin"), s = d(e, "threshold");
  let i = {};
  const o = B(void 0);
  let u;
  const f = () => {
    i = {
      rootMargin: r.value,
      threshold: s.value
    };
  }, A = () => {
    u = new IntersectionObserver((T) => {
      const [S] = T;
      S.isIntersecting && t.value();
    }, i);
  }, E = () => {
    n.value || u.observe(o.value);
  }, p = () => {
    u && u.disconnect();
  };
  return rt(n, (T) => {
    T === !0 ? E() : p();
  }), {
    disconnectObserver: p,
    sentinelRef: o,
    setIntersectionObserver: A,
    setObserverOptions: f,
    startObserver: E
  };
}
const $he = {
  name: "AInfiniteScroll",
  props: {
    callback: {
      type: Function,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    rootMargin: {
      type: String,
      required: !1,
      default: "300px"
    },
    sentinelTag: {
      type: String,
      required: !1,
      default: "span"
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    threshold: {
      type: [Number, Array],
      required: !1,
      default: 0.5
    }
  },
  setup(e) {
    const {
      disconnectObserver: t,
      sentinelRef: n,
      setIntersectionObserver: r,
      setObserverOptions: s,
      startObserver: i
    } = y$(e);
    return jr(() => {
      s(), r(), i();
    }), Ot(() => {
      t();
    }), {
      sentinelRef: n
    };
  },
  render() {
    return c(this.tag, {}, [
      this.$slots.default ? this.$slots.default() : null,
      c(this.sentinelTag, {
        ref: "sentinelRef",
        style: "height: 1px; display: block;",
        ariaHidden: !0
      })
    ]);
  }
};
function R$(e) {
  const t = d(e, "textCopy"), n = B(void 0), {
    addNotification: r
  } = $u();
  return {
    copyText: async () => {
      var o;
      let i = "";
      if (t.value ? i = t.value : (o = n.value) != null && o.$el && z(n.value.$el.children, (u) => {
        u.classList.contains("a_sr_only") || (i += u.textContent);
      }), i)
        try {
          await navigator.clipboard.writeText(i), r({
            text: "_A_LINK_COPY_COPIED_TO_CLIPBOARD_"
          });
        } catch (u) {
          console.error(u);
        }
    },
    linkRef: n
  };
}
const g$ = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-copy" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z"/>
</svg>`, Uhe = {
  name: "ALinkCopy",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    buttonOptions: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonPosition: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "a_btn_group"
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    linkOptions: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    textCopy: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup() {
    const {
      copyText: e,
      linkRef: t
    } = R$();
    return {
      copyText: e,
      linkRef: t
    };
  },
  render() {
    var t, n;
    const e = c(pt, {
      alwaysTranslate: this.alwaysTranslate,
      class: "a_btn a_btn_secondary",
      disabled: this.disabled,
      iconLeft: g$,
      textScreenReader: "_A_LINK_COPY_BTN_TITLE_",
      title: "_A_LINK_COPY_BTN_TITLE_",
      onClick: this.copyText,
      ...this.buttonOptions
    }, (t = this.$slots) == null ? void 0 : t.button);
    return c("div", {
      class: [
        this.classDefault,
        this.class
      ],
      role: "group"
    }, [
      this.buttonPosition === "left" && e,
      c(Hu, {
        ref: "linkRef",
        alwaysTranslate: this.alwaysTranslate,
        disabled: this.disabled,
        ...this.linkOptions
      }, (n = this.$slots) == null ? void 0 : n.link),
      this.buttonPosition === "right" && e
    ]);
  }
};
function O$(e) {
  const t = d(e, "isDataSimpleArray"), n = d(e, "item"), r = d(e, "keyChildren"), s = _(() => Vn(n.value)), i = _(() => {
    var u;
    return t.value ? (u = n.value) == null ? void 0 : u[1] : !r.value || !s.value ? [] : ce(n.value, r.value) || [];
  }), o = _(() => Se(i.value) && i.value.length > 0);
  return {
    children: i,
    hasChildren: o
  };
}
function C$(e) {
  const t = d(e, "isDataSimpleArray"), n = d(e, "item"), r = d(e, "itemIndex"), s = d(e, "keyLabel"), i = d(e, "keyLabelCallback");
  return {
    label: _(() => {
      var u;
      return t.value ? Se(n.value) ? ((u = n.value) == null ? void 0 : u[0]) || "" : n.value : Ne(i.value) ? i.value({ item: n.value, itemIndex: r.value }) : s.value ? ce(n.value, s.value) : n.value;
    })
  };
}
const D$ = {
  name: "AListItem",
  props: {
    classItem: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    classMain: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    item: {
      type: [Object, String, Number, Array],
      required: !0
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !0
    },
    listItemTag: {
      type: String,
      required: !1,
      default: "li"
    },
    separator: {
      type: String,
      required: !1,
      default: void 0
    },
    separatorHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      children: t,
      hasChildren: n
    } = O$(e), {
      label: r
    } = C$(e);
    return {
      children: t,
      hasChildren: n,
      label: r
    };
  },
  render() {
    return c(this.listItemTag, {
      class: this.classItem
    }, [
      this.$slots.listItem ? this.$slots.listItem({
        item: this.item,
        itemIndex: this.itemIndex
      }) : Nt(c(this.labelTag), [
        [Kt, this.label]
      ]),
      this.separator ? c("span", {}, this.separator) : "",
      this.hasChildren ? c(w$, {
        classItem: this.classItem,
        classMain: this.classMain,
        data: this.children,
        isDataSimpleArray: this.isDataSimpleArray,
        keyChildren: this.keyChildren,
        keyId: this.keyId,
        keyLabel: this.keyLabel,
        keyLabelCallback: this.keyLabelCallback,
        labelTag: this.labelTag,
        listItemTag: this.listItemTag,
        separator: this.separator,
        separatorHtml: this.separatorHtml,
        tag: this.tag
      }, this.$slots) : "",
      this.separatorHtml ? Nt(c("div"), [
        [Kt, this.separatorHtml]
      ]) : ""
    ]);
  }
};
function N$(e) {
  const t = d(e, "data"), n = d(e, "isDataSimpleArray"), r = d(e, "keyChildren"), s = d(e, "keyLabel"), i = d(e, "keyLabelCallback"), o = d(e, "separator");
  return {
    plainText: _(() => du(t.value, {
      isHtml: !1,
      keyLabel: s.value,
      keyLabelCallback: i.value,
      keyChildren: r.value,
      isSimpleArray: n.value,
      separator: o.value
    }))
  };
}
function B$(e) {
  const t = d(e, "tag"), n = d(e, "isHtml");
  return {
    tagLocal: _(() => !n.value && (t.value === "ul" || t.value === "ol") ? "span" : t.value)
  };
}
const w$ = {
  name: "AList",
  props: {
    classItem: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    classMain: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isHtml: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !1,
      default: "span"
    },
    listItemTag: {
      type: String,
      required: !1,
      default: "li"
    },
    separator: {
      type: String,
      required: !1,
      default: void 0
    },
    separatorHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "ul"
    }
  },
  setup(e) {
    const {
      tagLocal: t
    } = B$(e), {
      plainText: n
    } = N$(e);
    return {
      plainText: n,
      tagLocal: t
    };
  },
  render() {
    return this.isHtml ? c(this.tag, {
      class: this.classMain
    }, [
      this.data.map((e, t) => {
        const n = this.keyId ? ce(e, this.keyId) : t;
        return c(D$, {
          key: n,
          classItem: this.classItem,
          classMain: this.classMain,
          isDataSimpleArray: this.isDataSimpleArray,
          item: e,
          itemIndex: t,
          keyChildren: this.keyChildren,
          keyId: this.keyId,
          keyLabel: this.keyLabel,
          keyLabelCallback: this.keyLabelCallback,
          labelTag: this.labelTag,
          listItemTag: this.listItemTag,
          separator: this.separator,
          separatorHtml: this.separatorHtml,
          tag: this.tag
        }, this.$slots);
      })
    ]) : c(this.tagLocal, null, this.plainText);
  }
};
function P$(e) {
  const t = d(e, "size");
  return {
    classSize: _(() => {
      if (t.value)
        return `a_spinner_size_${t.value}`;
    })
  };
}
const Rl = {
  name: "ASpinner",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: () => Un.value.propsDefault.ariaLabel
    },
    extra: {
      type: Object,
      required: !1,
      default: () => Un.value.propsDefault.extra
    },
    safeHtml: {
      type: String,
      required: !1,
      default: () => Un.value.propsDefault.safeHtml
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => Un.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    tag: {
      type: String,
      required: !1,
      default: () => Un.value.propsDefault.tag
    }
  },
  setup(e) {
    const {
      ariaLabelAttributes: t
    } = Yc(e), {
      classSize: n
    } = P$(e);
    return {
      ariaLabelAttributes: t,
      classSize: n
    };
  },
  render() {
    return c(this.tag, {
      class: [
        Un.value.propsDefault.class,
        this.classSize
      ],
      role: "status",
      innerHTML: this.safeHtml,
      ...this.ariaLabelAttributes
    });
  }
}, Pa = B({
  propsDefault: {
    align: "center",
    extra: void 0,
    size: 6,
    tag: "div",
    text: "_A_LOADING_LOADING_",
    textAlign: "right"
  }
}), khe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Pa.value.propsDefault = {
      ...Pa.value.propsDefault,
      ...t
    };
  }
}, wS = {
  name: "ALoading",
  inheritAttrs: !1,
  props: {
    align: {
      type: String,
      required: !1,
      default: () => Pa.value.propsDefault.align,
      validator: (e) => ["left", "center", "right"].indexOf(e) !== -1
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: () => Pa.value.propsDefault.extra
    },
    isLoading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => Pa.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    spinnerClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    spinnerSafeHtml: {
      type: String,
      required: !1,
      default: () => Un.value.propsDefault.safeHtml
    },
    spinnerTag: {
      type: String,
      required: !1,
      default: () => Un.value.propsDefault.tag
    },
    tag: {
      type: String,
      required: !1,
      default: () => Pa.value.propsDefault.tag
    },
    text: {
      type: String,
      required: !1,
      default: () => Pa.value.propsDefault.text
    },
    textAlign: {
      type: String,
      required: !1,
      default: () => Pa.value.propsDefault.textAlign,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    }
  },
  setup(e) {
    const {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    } = lS(e);
    return {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    };
  },
  render() {
    const e = this.textAlign === "left", t = c(pe, {
      alwaysTranslate: this.alwaysTranslate,
      tag: "span",
      class: [
        "a_cloak__text",
        e ? "a_cloak__text_left" : "a_cloak__text_right",
        this.classTextSize
      ],
      text: this.text,
      extra: this.extra
    });
    return [
      this.$slots.default && this.$slots.default(),
      this.isLoading && c(
        this.tag,
        {
          ...this.$attrs,
          role: "status",
          tabindex: -1,
          class: ["a_loading", this.classAlign]
        },
        [
          c("div", {
            class: ["a_cloak__box", this.classForBox]
          }, [
            e ? t : "",
            c(Rl, {
              alwaysTranslate: this.alwaysTranslate,
              class: [
                "a_cloak__spinner",
                this.spinnerClass
              ],
              "aria-hidden": "true",
              safeHtml: this.spinnerSafeHtml,
              size: this.size,
              tag: this.spinnerTag
            }),
            e ? "" : t
          ])
        ]
      )
    ];
  }
};
function PS({
  menuId: e = "a_menu_",
  panelId: t = ""
}) {
  const r = `${`#${ua({ menuId: e, id: t, suffix: "panel" })}`} .a_menu__listview a`;
  setTimeout(() => {
    const s = document.querySelector(r);
    s && s.focus();
  });
}
function ua({
  menuId: e = "a_menu_",
  id: t = "",
  suffix: n = ""
}) {
  return `${e}_${t}_${n}`;
}
const il = B({});
function xS(e) {
  const t = d(e, "menuId"), n = d(e, "canChangeBodyClass"), r = () => {
    n.value && (document.body.classList.add("a_menu__wrapper_open"), document.body.classList.remove("a_menu__wrapper_close")), il.value[t.value] = !0;
  }, s = () => {
    n.value && (document.body.classList.add("a_menu__wrapper_close"), document.body.classList.remove("a_menu__wrapper_open")), il.value[t.value] = !1;
  }, i = () => {
    n.value && (document.body.classList.remove("a_menu__wrapper_close"), document.body.classList.remove("a_menu__wrapper_open"));
  }, o = ({ isOpen: E } = {}) => {
    Pe(E) ? il.value[t.value] ? s() : r() : E ? r() : s();
  }, u = _(() => il.value[t.value]), f = () => {
    o(), u.value && PS({
      menuId: t.value,
      panelId: ""
    });
  };
  return {
    btnToggleTitle: _(() => il.value[t.value] ? "_A_MENU_2_BTN_CLOSE_" : "_A_MENU_2_BTN_OPEN_"),
    closeMenu: s,
    isMenuOpen: u,
    removeBodyClasses: i,
    toggleMenu: o,
    toggleMenuObButton: f
  };
}
const x$ = {
  name: "AMenuButtonToggle",
  props: {
    buttonToggleProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canChangeBodyClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    class: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    insideMenu: {
      type: Boolean,
      required: !1
    },
    menuId: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      btnToggleTitle: t,
      isMenuOpen: n,
      toggleMenuObButton: r
    } = xS(e);
    return {
      btnToggleTitle: t,
      isMenuOpen: n,
      toggleMenuObButton: r
    };
  },
  render() {
    return c(pt, {
      class: ["a_menu__btn_toggle", this.class, {
        a_menu__btn_toggle_open: this.isMenuOpen,
        a_menu__btn_toggle_close: !this.isMenuOpen,
        a_menu__btn_toggle_inside_menu: this.insideMenu,
        a_menu__btn_toggle_outside_menu: !this.insideMenu
      }],
      type: "button",
      title: this.btnToggleTitle,
      textScreenReader: this.btnToggleTitle,
      onClick: this.toggleMenuObButton,
      ...this.buttonToggleProps
    }, () => [
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_1 aloha_element__ml_0"
      }),
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_2 aloha_element__ml_0"
      }),
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_3 aloha_element__ml_0"
      })
    ]);
  }
};
function M$() {
  const e = de("togglePanel"), t = ({ parentId: r }) => {
    e({ parentId: r });
  };
  return {
    goBack: t,
    goBackKeydown: ({ $event: r, parentId: s }) => {
      (r.keyCode === Z.enter || r.keyCode === Z.space) && (t({ parentId: s }), r.stopPropagation(), r.preventDefault());
    }
  };
}
function F$(e) {
  const t = d(e, "dataKeyById"), n = d(e, "panelParentsOpen");
  return {
    breadcrumbsItems: _(() => {
      if (!n.value.length)
        return [];
      const s = [];
      let i = "_A_MENU_2_MAIN_MENU_";
      return z(n.value, (o, u) => {
        s.push({
          isFirst: u === 0,
          label: i,
          panelParentId: o
        }), i = ce(t.value, `${o}.${vt}`);
      }), s.push({
        panelParentId: void 0,
        label: i
      }), s;
    })
  };
}
function q$({
  breadcrumbsItems: e = _(() => []),
  breadcrumbsTruncatedOffset: t = B(0)
}) {
  const n = B([]), r = B([]), s = B(0), i = B(void 0), o = B(!1), u = B(0), f = B([]), A = () => {
    if (i.value < 0) {
      o.value = !0;
      return;
    }
    r.value.unshift(e.value[i.value]), i.value--;
  }, E = () => {
    n.value = e.value.slice(0, i.value + 1), o.value = !0;
  }, p = () => {
    if (r.value.length <= 1 || u.value + t.value <= s.value) {
      E();
      return;
    }
    r.value.splice(0, 1), i.value++, u.value -= vi(f.value), f.value.pop(), p();
  };
  return {
    breadcrumbsItemsDropdown: n,
    breadcrumbsItemsTruncated: r,
    isRenderedAll: o,
    renderItem: (m) => {
      const b = m.offsetWidth;
      u.value += b, f.value.push(b), u.value >= s.value ? p() : A();
    },
    renderParent: (m) => {
      i.value = e.value.length - 1, A(), s.value = m.offsetWidth;
    }
  };
}
const Ul = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots" viewBox="0 0 16 16">
  <path d="M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3"/>
</svg>`, $$ = {
  name: "AMenuBreadcrumbs",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !0
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    isPanelMain: {
      type: Boolean,
      required: !1
    },
    dataKeyById: {
      type: Object,
      required: !0
    },
    panelParentsOpen: {
      type: Array,
      required: !0
    }
  },
  setup(e) {
    const t = de("breadcrumbsTruncatedOffset"), {
      breadcrumbsItems: n
    } = F$(e), {
      goBack: r,
      goBackKeydown: s
    } = M$(), {
      breadcrumbsItemsDropdown: i,
      breadcrumbsItemsTruncated: o,
      isRenderedAll: u,
      renderItem: f,
      renderParent: A
    } = q$({
      breadcrumbsItems: n,
      breadcrumbsTruncatedOffset: t
    });
    return {
      breadcrumbsItems: n,
      breadcrumbsItemsDropdown: i,
      breadcrumbsItemsTruncated: o,
      goBack: r,
      goBackKeydown: s,
      isRenderedAll: u,
      renderItem: f,
      renderParent: A
    };
  },
  render() {
    if (this.isSearchActive || this.isPanelMain)
      return null;
    if (this.isBreadcrumbsTruncated)
      return c(pe, {
        ariaLabel: "_A_MENU_2_BREADCRUMB_",
        class: "a_menu__breadcrumb a_menu__breadcrumb_secondary",
        tag: "nav"
      }, () => [
        Nt(c("ul", {
          class: [
            "a_menu__breadcrumb__ul a_menu__breadcrumb__ul_truncated"
          ]
        }, [
          this.breadcrumbsItemsDropdown.length > 0 ? c("li", {
            class: "a_menu__breadcrumbs__item"
          }, [
            c(_a, {
              buttonClass: "a_btn a_btn_secondary a_btn_small a_menu__breadcrumb__ul_truncated__btn",
              buttonIconLeft: Ul,
              buttonTextScreenReader: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
              buttonTitle: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
              dropdownClass: "a_menu__breadcrumb__ul_truncated__dropdown",
              hasCaret: !1,
              inBody: !0,
              ...this.breadcrumbsTruncatedDropdownProps
            }, {
              dropdown: () => [
                this.breadcrumbsItemsDropdown.map((e) => {
                  const t = e.panelParentId ? {
                    tag: "a",
                    class: [
                      "a_menu__breadcrumbs__link",
                      this.breadcrumbsLinkClass
                    ],
                    role: "button",
                    tabindex: 0,
                    onClick: () => this.goBack({ parentId: e.panelParentId }),
                    onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
                  } : {
                    class: "a_menu__breadcrumbs__link",
                    tag: "strong"
                  };
                  return c("li", {
                    key: e.panelParentId,
                    class: "a_menu__breadcrumbs__item"
                  }, [
                    c(pt, {
                      text: e.label,
                      title: e.label,
                      ...t
                    }),
                    c("span", {
                      class: "a_menu__breadcrumbs__item__divider"
                    }, "/")
                  ]);
                })
              ]
            })
          ]) : "",
          this.breadcrumbsItemsTruncated.map((e) => {
            const t = e.panelParentId ? {
              tag: "a",
              class: [
                "a_menu__breadcrumbs__link",
                this.breadcrumbsLinkClass
              ],
              role: "button",
              tabindex: 0,
              onClick: () => this.goBack({ parentId: e.panelParentId }),
              onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
            } : {
              class: "a_menu__breadcrumbs__link",
              tag: "strong"
            };
            return Nt(c("li", {
              key: e.panelParentId,
              class: "a_menu__breadcrumbs__item"
            }, [
              !e.isFirst && c("span", {
                class: "a_menu__breadcrumbs__item__divider"
              }, "/"),
              c(pt, {
                text: e.label,
                title: e.label,
                ...t
              })
            ]), [
              [bl, { mounted: this.renderItem }]
            ]);
          })
        ]), [
          [bl, { mounted: this.renderParent }]
        ])
      ]);
    if (!this.isBreadcrumbsTruncated)
      return c(pe, {
        ariaLabel: "_A_MENU_2_BREADCRUMB_",
        class: "a_menu__breadcrumb a_menu__breadcrumb_secondary",
        tag: "nav"
      }, () => [
        c("ul", {
          class: [
            "a_menu__breadcrumb__ul"
          ]
        }, [
          this.breadcrumbsItems.map((e) => {
            const t = e.panelParentId ? {
              tag: "a",
              class: [
                "a_menu__breadcrumbs__link",
                this.breadcrumbsLinkClass
              ],
              role: "button",
              tabindex: 0,
              onClick: () => this.goBack({ parentId: e.panelParentId }),
              onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
            } : {
              class: "a_menu__breadcrumbs__link",
              tag: "strong"
            };
            return c("li", {
              key: e.panelParentId,
              class: "a_menu__breadcrumbs__item"
            }, [
              !e.isFirst && c("span", {
                class: "a_menu__breadcrumbs__item__divider"
              }, "/"),
              c(pt, {
                text: e.label,
                title: e.label,
                ...t
              })
            ]);
          })
        ])
      ]);
  }
};
function U$(e, {
  id: t = _(() => {
  })
}) {
  const n = d(e, "isLinkInSearchPanel"), r = de("activeRoutesIds");
  return {
    isLinkActive: _(() => n.value ? !1 : r.value.indexOf(t.value) !== -1)
  };
}
function k$(e) {
  const t = d(e, "isLinkInSearchPanel"), n = d(e, "item"), r = d(e, "keyIcon"), s = _(() => n.value[we]), i = _(() => {
    if (!t.value)
      return ce(n.value, r.value);
  }), o = _(() => {
    const u = "a_menu__link__icon";
    return n.value.iconClass ? `{ CLASS } ${n.value.iconClass}` : u;
  });
  return {
    icon: i,
    iconClassLocal: o,
    id: s
  };
}
function H$(e, {
  id: t = _(() => {
  })
}) {
  const n = d(e, "dataProParentChildren"), r = d(e, "item");
  return {
    countChildren: _(() => r.value.to ? 0 : n.value[t.value] && n.value[t.value].length)
  };
}
function V$(e, {
  id: t = _(() => {
  })
}) {
  const n = d(e, "isLinkInSearchPanel"), r = d(e, "item"), s = de("clickMenuLink"), i = de("isPanelMain"), o = de("togglePanel"), u = () => {
    o({
      parentId: t.value,
      isLinkInSearchPanel: n.value,
      isPanelMain: i.value
    });
  };
  return {
    clickLink: ({ $event: E }) => {
      n.value && o({ parentId: r.value[Ll], isLinkInSearchPanel: n.value }), s({ ctrlKey: E.ctrlKey, isPanelMain: i.value });
    },
    onKeydown: (E) => {
      (E.keyCode === Z.enter || E.keyCode === Z.space) && (u(), E.stopPropagation(), E.preventDefault());
    },
    openSubMenu: u
  };
}
function W$(e, {
  id: t = _(() => {
  })
}) {
  const n = d(e, "menuId");
  return {
    linkId: _(() => ua({
      menuId: n.value,
      id: t.value,
      suffix: "link"
    }))
  };
}
function G$(e) {
  const t = d(e, "isLinkInSearchPanel"), n = d(e, "item"), r = d(e, "modelSearch"), {
    filterSearchHighlight: s
  } = jn(), i = _(() => n.value[vt]);
  return {
    label: _(() => {
      const u = i.value;
      return t.value ? s(u, { searchModel: r.value }) : u;
    }),
    labelWithoutFilter: i
  };
}
function j$(e) {
  const t = d(e, "item"), n = _(() => !!t.value.disabled), r = _(() => n.value ? "#" : t.value.to);
  return {
    isItemLink: _(() => !!t.value.to),
    isLinkDisabled: n,
    toLocal: r
  };
}
function K$(e, {
  id: t = _(() => "")
}) {
  const n = de("isChildPanelOpen"), r = de("isMenuOpen"), s = de("isPanelMain"), i = de("panelParentsOpen"), o = _(() => s.value && i.value[0] === t.value), u = _(() => !r.value && n.value && i.value.indexOf(t.value) !== -1);
  return {
    isLinkOpen: _(() => o.value || u.value),
    isLinkOpenPanelMain: o,
    isLinkOpenPanelSecondaryMenuClose: u
  };
}
function z$(e) {
  const t = d(e, "item"), n = de("keySlot");
  return {
    currentSlot: _(() => {
      if (n.value)
        return ce(t.value, n.value);
    })
  };
}
function Y$(e) {
  const t = d(e, "isLinkInSearchPanel"), n = d(e, "isPanelOpen"), r = de("isMenuOpen"), s = de("isPanelMain", !1), i = de("isChildPanelOpen", !1);
  return {
    tabindex: _(() => t.value || s.value || n.value || !r.value && i.value ? 0 : -1)
  };
}
function X$(e, {
  isItemLink: t = _(() => !1),
  isLinkOpenPanelMain: n = _(() => !1),
  isLinkOpenPanelSecondaryMenuClose: r = _(() => !1),
  labelWithoutFilter: s = _(() => "")
}) {
  const i = d(e, "item"), o = _(() => !!i.value.isTitleHtml), u = _(() => n.value ? "_A_MENU_2_TO_MAIN_MENU_" : r.value ? [
    "_A_MENU_2_CLOSE_SUBMENU_",
    i.value.title || s.value
  ] : t.value ? i.value.title || s.value : [
    "_A_MENU_2_OPEN_SUBMENU_",
    i.value.title || s.value
  ]), f = _(() => ({
    minWidth: i.value.titleHtmlMinWidth,
    width: i.value.titleHtmlWidth,
    maxWidth: i.value.titleHtmlMaxWidth
  }));
  return {
    isTitleHtml: o,
    titleLocal: u,
    titleAttributes: f
  };
}
const ic = {
  name: "AMenuPanelLink",
  inject: [
    "isPanelMain",
    "showCountChildren"
  ],
  props: {
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    idsSearchVisible: {
      type: Object,
      required: !1,
      default: void 0
    },
    isLinkInSearchPanel: {
      type: Boolean,
      required: !1
    },
    isPanelOpen: {
      type: Boolean,
      required: !1
    },
    item: {
      type: Object,
      required: !0
    },
    keyIcon: {
      type: String,
      required: !1,
      default: void 0
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      currentSlot: t
    } = z$(e), {
      isItemLink: n,
      isLinkDisabled: r,
      toLocal: s
    } = j$(e), {
      label: i,
      labelWithoutFilter: o
    } = G$(e), {
      icon: u,
      iconClassLocal: f,
      id: A
    } = k$(e), {
      isLinkActive: E
    } = U$(e, {
      id: A
    }), {
      linkId: p
    } = W$(e, {
      id: A
    }), {
      isLinkOpen: T,
      isLinkOpenPanelMain: S,
      isLinkOpenPanelSecondaryMenuClose: m
    } = K$(e, {
      id: A
    }), {
      tabindex: b
    } = Y$(e), {
      countChildren: I
    } = H$(e, {
      id: A
    }), {
      isTitleHtml: v,
      titleLocal: g,
      titleAttributes: R
    } = X$(e, {
      isItemLink: n,
      isLinkOpenPanelMain: S,
      isLinkOpenPanelSecondaryMenuClose: m,
      labelWithoutFilter: o
    }), {
      clickLink: D,
      onKeydown: w,
      openSubMenu: F
    } = V$(e, {
      id: A
    });
    return {
      clickLink: D,
      countChildren: I,
      currentSlot: t,
      icon: u,
      iconClassLocal: f,
      isItemLink: n,
      isLinkActive: E,
      isLinkDisabled: r,
      isLinkOpen: T,
      isTitleHtml: v,
      label: i,
      labelWithoutFilter: o,
      linkId: p,
      onKeydown: w,
      openSubMenu: F,
      tabindex: b,
      titleAttributes: R,
      titleLocal: g,
      toLocal: s
    };
  },
  render() {
    return c("li", {
      class: "a_menu__listitem"
    }, [
      this.isLinkInSearchPanel && c("span", {
        class: "a_menu__breadcrumbs__item__divider",
        ariaHidden: !0
      }, "/"),
      this.currentSlot && this.$slots[this.currentSlot] ? this.$slots[this.currentSlot]({
        id: this.linkId,
        item: this.item,
        clickLink: this.clickLink,
        countChildren: this.countChildren,
        isLinkActive: this.isLinkActive,
        isLinkOpen: this.isLinkOpen,
        isPanelOpen: this.isPanelOpen,
        isPanelMain: this.isPanelMain,
        label: this.label,
        labelWithoutFilter: this.labelWithoutFilter,
        onKeydown: this.onKeydown,
        openSubMenu: this.openSubMenu,
        tabindex: this.tabindex
      }) : this.isItemLink ? c(Hu, {
        id: this.linkId,
        class: ["a_menu__link a_menu__link__text_truncated", {
          a_menu__link_disabled: this.isLinkDisabled,
          a_menu__link_active: this.isLinkActive,
          a_menu__link_panel_main: this.isPanelMain
        }],
        html: this.label,
        iconClass: this.iconClassLocal,
        iconLeft: this.icon,
        isTitleHtml: this.isTitleHtml,
        tabindex: this.tabindex,
        textAriaHidden: !0,
        textClass: "a_menu__link__text aloha_element__ml_0",
        textScreenReader: this.titleLocal,
        title: this.titleLocal,
        titleAttributes: this.titleAttributes,
        titlePlacement: "right",
        to: this.toLocal,
        onClick: this.clickLink
      }) : c(pt, {
        id: this.linkId,
        class: [
          "a_menu__link a_menu__link_btn a_menu__link__text_truncated",
          {
            a_menu__link_open: this.isLinkOpen,
            a_menu__link_active: this.isLinkActive,
            a_menu__link_panel_main: this.isPanelMain
          }
        ],
        html: this.label,
        iconClass: this.iconClassLocal,
        iconLeft: this.icon,
        isTitleHtml: this.isTitleHtml,
        role: "button",
        tabindex: this.tabindex,
        tag: "a",
        textAriaHidden: !0,
        textClass: "a_menu__link__text aloha_element__ml_0",
        textScreenReader: this.titleLocal,
        title: this.titleLocal,
        titleAttributes: this.titleAttributes,
        titlePlacement: "right",
        onClick: this.openSubMenu,
        onKeydown: this.onKeydown
      }, () => [
        c("span", {
          class: "a_menu__link__counter aloha_element__ml_0"
        }, [
          this.showCountChildren && c("span", {
            ariaHidden: !0
          }, this.countChildren),
          c(_t, {
            class: "a_menu__link__counter__icon",
            icon: ff
          })
        ])
      ])
    ]);
  }
};
function Z$(e) {
  const t = d(e, "groupItems");
  return {
    hasItems: _(() => t.value.length > 0)
  };
}
function J$(e) {
  const t = d(e, "groupIndex"), n = d(e, "groupLabel"), r = d(e, "menuId"), s = d(e, "paneIndex"), i = _(() => `${r.value}_${s.value}_${t.value}_label`);
  return {
    ariaLabelledbyObj: _(() => n.value ? {
      "aria-labelledby": i.value
    } : {}),
    labelId: i
  };
}
const ip = {
  name: "AMenuPanelGroup",
  props: {
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    groupIndex: {
      type: [Number, String],
      required: !0
    },
    groupItems: {
      type: Array,
      required: !0
    },
    groupLabel: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    isPanelOpen: {
      type: Boolean,
      required: !1
    },
    keyIcon: {
      type: String,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    paneIndex: {
      type: [Number, String],
      required: !0
    }
  },
  setup(e) {
    const {
      hasItems: t
    } = Z$(e), {
      ariaLabelledbyObj: n,
      labelId: r
    } = J$(e);
    return {
      ariaLabelledbyObj: n,
      hasItems: t,
      labelId: r
    };
  },
  render() {
    return this.hasItems ? this.groupLabel ? c("li", {
      ...this.ariaLabelledbyObj
    }, [
      c("div", {
        id: this.labelId,
        class: "a_menu__list_header"
      }, this.groupLabel),
      c("ul", {
        class: "a_menu__listview"
      }, [
        this.groupItems.map((e, t) => c(ic, {
          key: t,
          item: e,
          dataProParentChildren: this.dataProParentChildren,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId
        }, this.$slots))
      ])
    ]) : this.groupItems.map((e, t) => c(ic, {
      key: t,
      item: e,
      dataProParentChildren: this.dataProParentChildren,
      isPanelOpen: this.isPanelOpen,
      keyIcon: this.keyIcon,
      menuId: this.menuId
    }, this.$slots)) : null;
  }
};
function Q$(e) {
  const t = d(e, "panelItems"), n = d(e, "keyGroup"), r = _(() => {
    const i = [], o = {};
    return z(t.value, (u) => {
      const f = ce(u, n.value);
      se(f) ? i.push(u) : (o[f] = o[f] || [], o[f].push(u));
    }), {
      withoutGroup: i,
      withGroup: o
    };
  });
  return {
    isItemsWithoutGroup: _(() => r.value.withoutGroup.length > 0),
    itemsGroup: r
  };
}
function eU(e, {
  openedLevelIndex: t = _(() => 0)
}) {
  const n = d(e, "dataKeyById"), r = d(e, "isPanelMain"), s = d(e, "parentId"), i = de("isMenuOpen"), o = _(() => !r.value && !i.value && t.value === 0), u = _(() => ce(n.value, `${s.value}.${vt}`));
  return {
    isHeaderPanelVisible: o,
    parentLabel: u
  };
}
function tU(e) {
  const t = d(e, "menuId"), n = d(e, "parentId");
  return {
    panelId: _(() => ua({
      menuId: t.value,
      id: n.value,
      suffix: "panel"
    }))
  };
}
function nU(e) {
  const t = d(e, "panelParentsOpen"), n = d(e, "parentId"), r = _(() => t.value.indexOf(n.value)), s = _(() => {
    if (r.value !== -1)
      return `z-index: ${r.value + 2};`;
  });
  return {
    openedLevelIndex: r,
    styleZIndex: s
  };
}
function rU(e, {
  openedLevelIndex: t = _(() => -1)
}) {
  const n = d(e, "isPanelMain"), r = d(e, "isSearchActive"), s = d(e, "panelParentsOpen"), i = _(() => r.value ? !1 : n.value ? s.value.length === 0 : s.value.length ? t.value === s.value.length - 1 : !1);
  return {
    isChildPanelOpen: _(() => {
      if (n.value)
        return s.value.length > 0;
      const u = t.value;
      return u !== -1 && u !== s.value.length - 1;
    }),
    isPanelOpen: i
  };
}
const lp = {
  name: "AMenuPanel",
  props: {
    attributesBlockerClick: {
      type: Object,
      required: !0
    },
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataKeyById: {
      type: Object,
      required: !0
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !1
    },
    isPanelMain: {
      type: Boolean,
      required: !1
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    keyGroup: {
      type: String,
      required: !0
    },
    keyIcon: {
      type: String,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    paneIndex: {
      type: [Number, String],
      required: !0
    },
    panelItems: {
      type: Array,
      required: !0
    },
    panelParentsOpen: {
      type: Array,
      required: !0
    },
    parentId: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = d(e, "isPanelMain"), {
      panelId: n
    } = tU(e), {
      openedLevelIndex: r,
      styleZIndex: s
    } = nU(e), {
      isItemsWithoutGroup: i,
      itemsGroup: o
    } = Q$(e), {
      isChildPanelOpen: u,
      isPanelOpen: f
    } = rU(e, {
      openedLevelIndex: r
    }), {
      isHeaderPanelVisible: A,
      parentLabel: E
    } = eU(e, {
      openedLevelIndex: r
    });
    return Je("isChildPanelOpen", u), Je("isPanelMain", t), {
      isChildPanelOpen: u,
      isHeaderPanelVisible: A,
      isItemsWithoutGroup: i,
      isPanelOpen: f,
      itemsGroup: o,
      panelId: n,
      parentLabel: E,
      styleZIndex: s
    };
  },
  render() {
    return c("div", {
      id: this.panelId,
      class: ["a_menu__panel", {
        a_menu__panel_main: !this.isSearchActive && this.isPanelMain,
        a_menu__panel_secondary: !this.isPanelMain,
        a_menu__panel_opened: !this.isSearchActive && this.isPanelOpen,
        a_menu__panel_parent: !this.isSearchActive && this.isChildPanelOpen
      }],
      style: this.styleZIndex
    }, [
      !this.isPanelMain && this.isPanelOpen && c($$, {
        breadcrumbsLinkClass: this.breadcrumbsLinkClass,
        breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
        dataKeyById: this.dataKeyById,
        isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
        isPanelMain: this.isPanelMain,
        isSearchActive: this.isSearchActive,
        panelParentsOpen: this.panelParentsOpen
      }),
      this.isHeaderPanelVisible && c("div", {
        class: "a_menu__panel_header"
      }, [
        c(pe, {
          class: "a_menu__panel_header__text",
          html: this.parentLabel,
          tag: "strong"
        })
      ]),
      c("ul", {
        class: "a_menu__listview"
      }, [
        this.isItemsWithoutGroup && c(ip, {
          dataProParentChildren: this.dataProParentChildren,
          groupItems: this.itemsGroup.withoutGroup,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId,
          paneIndex: this.paneIndex,
          groupIndex: "00"
        }, this.$slots),
        Object.keys(this.itemsGroup.withGroup).map((e, t) => c(ip, {
          key: e,
          dataProParentChildren: this.dataProParentChildren,
          groupIndex: t,
          groupItems: this.itemsGroup.withGroup[e],
          groupLabel: e,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId,
          paneIndex: this.paneIndex
        }, this.$slots))
      ])
    ]);
  }
}, lc = "_a_breadcrumbs";
function aU(e) {
  const t = d(e, "item");
  return {
    breadcrumbsItems: _(() => {
      const r = [
        {
          label: "_A_MENU_2_MAIN_MENU_",
          isFirst: !0,
          parentIds: []
        }
      ], s = [];
      return z(t.value[lc], (i) => {
        s.push(i.parentId), r.push({
          label: i.label,
          parentId: i.parentId,
          parentIds: [
            ...s
          ]
        });
      }), r;
    })
  };
}
function sU() {
  const e = de("togglePanel"), t = ({ parentIds: r }) => {
    e({ parentIds: r });
  };
  return {
    goTo: t,
    goToKeydown: ({ $event: r, parentIds: s }) => {
      (r.keyCode === Z.enter || r.keyCode === Z.space) && (t({ parentIds: s }), r.stopPropagation(), r.preventDefault());
    }
  };
}
const iU = {
  name: "AMenuSearchPanelBreadcrumbs",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    item: {
      type: Object,
      required: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      breadcrumbsItems: t
    } = aU(e), {
      goTo: n,
      goToKeydown: r
    } = sU();
    return {
      breadcrumbsItems: t,
      goTo: n,
      goToKeydown: r
    };
  },
  render() {
    return c("li", {}, [
      c("ul", {
        class: "a_menu__breadcrumb__ul a_menu__breadcrumb__ul_search"
      }, [
        c("li", {}, [
          c(_a, {
            buttonClass: "a_btn a_btn_secondary a_btn_small a_menu__breadcrumb__ul_truncated__btn",
            buttonIconLeft: Ul,
            buttonTextScreenReader: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
            buttonTitle: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
            dropdownClass: "a_menu__breadcrumb__ul_truncated__dropdown",
            hasCaret: !1,
            inBody: !0,
            ...this.breadcrumbsTruncatedDropdownProps
          }, {
            dropdown: () => [
              this.breadcrumbsItems.map((e) => c("li", {
                key: e.parentId,
                class: "a_menu__breadcrumbs__item"
              }, [
                c(pt, {
                  text: e.label,
                  title: e.label,
                  tag: "a",
                  class: [
                    "a_menu__breadcrumbs__link",
                    this.breadcrumbsLinkClass
                  ],
                  role: "button",
                  tabindex: 0,
                  onClick: () => this.goTo({ parentIds: e.parentIds }),
                  onKeydown: (t) => this.goToKeydown({ $event: t, parentIds: e.parentIds })
                }),
                c("span", {
                  class: "a_menu__breadcrumbs__item__divider"
                }, "/")
              ]))
            ]
          })
        ]),
        c(ic, {
          item: this.item,
          dataProParentChildren: this.dataProParentChildren,
          isLinkInSearchPanel: !0,
          modelSearch: this.modelSearch,
          menuId: this.menuId
        }, this.$slots)
      ])
    ]);
  }
};
function lU(e) {
  const t = d(e, "itemsWithSearch"), n = d(e, "isSearchActive");
  return {
    isNoneFound: _(() => n.value ? t.value.length === 0 : !1)
  };
}
function oU(e, {
  isNoneFound: t = _(() => !1)
}) {
  return {
    textLocal: _(() => t.value ? "_A_MENU_2_SEARCH_NONE_FOUND_" : "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_")
  };
}
const uU = {
  name: "AMenuSearchPanel",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    itemsWithSearch: {
      type: Array,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      isNoneFound: t
    } = lU(e), {
      textLocal: n
    } = oU(e, {
      isNoneFound: t
    });
    return Je("isPanelMain", !1), Je("isChildPanelOpen", !1), {
      isNoneFound: t,
      textLocal: n
    };
  },
  render() {
    return this.isSearchActive ? c("div", {
      class: "a_menu__panels__main a_menu__panel_search"
    }, [
      c("div", {
        class: "a_menu__navbar_top_sub"
      }, [
        c(pe, {
          class: "a_menu__navbar_top_sub__text",
          tag: "strong",
          text: this.textLocal,
          extra: {
            count: this.itemsWithSearch.length
          }
        })
      ]),
      !this.isNoneFound && c("div", {
        class: "a_vertical_scroll"
      }, [
        c("div", {
          class: "a_scroll_content"
        }, [
          c("ul", {
            class: "a_menu__listview"
          }, [
            this.itemsWithSearch.map((e) => c(iU, {
              key: e[we],
              breadcrumbsLinkClass: this.breadcrumbsLinkClass,
              breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
              dataProParentChildren: this.dataProParentChildren,
              item: e,
              menuId: this.menuId,
              modelSearch: this.modelSearch
            }, this.$slots))
          ])
        ])
      ])
    ]) : null;
  }
};
function _U({
  onScroll: e = () => {
  },
  scrollContentRef: t = B(void 0)
}) {
  return {
    addScrollListener: () => {
      t.value.addEventListener("scroll", e);
    },
    destroyScrollListener: () => {
      t.value.removeEventListener("scroll", e);
    }
  };
}
function dU({
  checkScroll: e = () => {
  },
  containerRef: t = B(void 0),
  scrollContentChildRef: n = B(void 0)
}) {
  const r = B(void 0), s = B(!1), i = B(void 0), o = B(!1), u = B(0), f = B(0), A = (P) => {
    const O = P[0].contentRect.height;
    (u.value === 0 || u.value !== O) && (u.value = O, e());
  }, E = (P) => {
    const O = P[0].contentRect.height;
    (f.value === 0 || f.value !== O) && (f.value = O, e());
  }, p = () => {
    r.value = new ResizeObserver(
      Sl((P) => A(P), 300)
    );
  }, T = () => {
    i.value = new ResizeObserver(
      Sl((P) => E(P), 300)
    );
  }, S = () => {
    s.value || (r.value.observe(t.value), s.value = !0);
  }, m = () => {
    s.value && (r.value.unobserve(t.value), s.value = !1);
  }, b = () => {
    r.value.disconnect();
  }, I = () => {
    o.value || (i.value.observe(n.value), o.value = !0);
  }, v = () => {
    o.value && (i.value.unobserve(n.value), o.value = !1);
  }, g = () => {
    i.value.disconnect();
  };
  return {
    connectObservers: () => {
      S(), I();
    },
    destroyObservers: () => {
      b(), g();
    },
    disconnectObservers: () => {
      m(), v();
    },
    initObservers: () => {
      p(), T();
    }
  };
}
function cU(e) {
  const t = d(e, "scrollDistance"), n = B(!1), r = B(!1), s = B(void 0), i = B(!1), o = B(void 0), u = B(void 0), f = () => {
    const T = o.value;
    r.value = T.scrollTop > 0, n.value = T.scrollTop < T.scrollHeight - T.clientHeight;
  }, A = () => {
    i.value = o.value.scrollHeight > o.value.clientHeight, i.value && f();
  };
  return {
    canScrollDown: n,
    canScrollUp: r,
    checkScroll: A,
    containerRef: s,
    hasScroll: i,
    onScroll: f,
    scrollContentChildRef: u,
    scrollContentRef: o,
    scrollDown: () => {
      o.value.scrollTop += t.value, A();
    },
    scrollUp: () => {
      o.value.scrollTop -= t.value, A();
    }
  };
}
const fU = {
  name: "AVerticalScroll",
  props: {
    btnDownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnUpProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    scrollContentAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    scrollDistance: {
      type: Number,
      required: !1,
      default: 100
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    tagScrollContent: {
      type: String,
      required: !1,
      default: "div"
    }
  },
  setup(e) {
    const t = d(e, "disabled"), {
      canScrollDown: n,
      canScrollUp: r,
      checkScroll: s,
      containerRef: i,
      hasScroll: o,
      onScroll: u,
      scrollContentChildRef: f,
      scrollContentRef: A,
      scrollDown: E,
      scrollUp: p
    } = cU(e), {
      connectObservers: T,
      destroyObservers: S,
      disconnectObservers: m,
      initObservers: b
    } = dU({
      checkScroll: s,
      containerRef: i,
      scrollContentChildRef: f
    }), {
      addScrollListener: I,
      destroyScrollListener: v
    } = _U({
      onScroll: u,
      scrollContentRef: A
    });
    return jr(() => {
      b(), t.value || (T(), I());
    }), Ot(() => {
      S(), v();
    }), rt(t, (g) => {
      g ? (m(), v()) : (T(), I());
    }), {
      canScrollDown: n,
      canScrollUp: r,
      containerRef: i,
      hasScroll: o,
      scrollContentChildRef: f,
      scrollContentRef: A,
      scrollDown: E,
      scrollUp: p
    };
  },
  render() {
    return c(this.tag, {
      ref: "containerRef",
      class: [
        "a_vertical_scroll",
        {
          a_vertical_scroll_scrollable: this.hasScroll && !this.disabled
        }
      ]
    }, [
      c("div", {
        class: "a_vertical_scroll__btn__wrapper a_vertical_scroll__btn__wrapper_up"
      }, [
        c(pt, {
          class: "a_btn a_btn_transparent_secondary a_btn_small a_vertical_scroll__btn a_vertical_scroll__btn_up",
          iconLeft: Fu,
          disabled: !this.canScrollUp,
          tabindex: -1,
          title: "_A_VERTICAL_SCROLL_BTN_UP_TITLE_",
          textScreenReader: "_A_VERTICAL_SCROLL_BTN_UP_TITLE_",
          onClick: this.scrollUp,
          ...this.btnUpProps
        })
      ]),
      c(this.tagScrollContent, {
        ref: "scrollContentRef",
        class: "a_scroll_content",
        ...this.scrollContentAttributes
      }, [
        c("div", {
          ref: "scrollContentChildRef"
        }, [
          this.$slots.default && this.$slots.default()
        ])
      ]),
      c("div", {
        class: "a_vertical_scroll__btn__wrapper a_vertical_scroll__btn__wrapper_down"
      }, [
        c(pt, {
          class: "a_btn a_btn_transparent_secondary a_btn_small a_vertical_scroll__btn a_vertical_scroll__btn_down",
          iconLeft: Ha,
          disabled: !this.canScrollDown,
          title: "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_",
          textScreenReader: "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_",
          tabindex: -1,
          onClick: this.scrollDown,
          ...this.btnDownProps
        })
      ])
    ]);
  }
};
function hU(e, {
  closeAllPanels: t = () => {
  }
}) {
  const n = d(e, "isBlockerClickable"), r = () => {
    t();
  };
  return {
    attributesBlockerClick: _(() => {
      const i = {};
      return n.value && (i.onClick = r, i.class = "a_menu__blocker a_menu_clickable"), i;
    })
  };
}
function AU(e, {
  isMenuOpen: t = _(() => !1),
  isMobileWidth: n = B(void 0),
  toggleMenu: r = () => {
  }
}) {
  const s = d(e, "isBackdropMobileClickable"), i = d(e, "useBackdropMobile"), o = _(() => i.value && t.value && n.value), u = () => {
    r({
      isOpen: !1
    });
  };
  return {
    clickAttributesBackdrop: _(() => s.value ? {
      onClick: u
    } : {}),
    isBackdropVisible: o
  };
}
function EU(e, {
  dataKeyById: t = _(() => ({})),
  dataProParent: n = _(() => ({
    main: [],
    children: {}
  })),
  isMenuLinkClicked: r = B(!1),
  isMenuOpen: s = _(() => !1),
  panelParentsOpen: i = B([])
}) {
  const o = d(e, "compareUrlCallback"), f = qg().appContext.config.globalProperties.$router, A = B([]), E = _(() => f.currentRoute), p = ({ route: b = {}, ids: I = [] }) => {
    const v = b[Ll];
    return v && (I.unshift(v), p({ route: t.value[v], ids: I })), I;
  }, T = ({ routerFullPath: b, route: I }) => {
    const {
      fullPath: v
    } = f.resolve(I.to);
    return Ne(o.value) ? o.value({
      fullPath: v,
      routerFullPath: b,
      item: I,
      currentRoute: f.currentRoute.value
    }) : v === b;
  }, S = ({ routes: b = [], routerFullPath: I = "/" }) => {
    let v = !1;
    return z(b, (g) => {
      if (g.to && T({ routerFullPath: I, route: g })) {
        const R = p({ route: g, ids: [] });
        return !r.value && s.value && (i.value = R), A.value = [...R, g[we]], v = !0, !1;
      }
    }), v;
  };
  return {
    activeRoutesIds: A,
    checkAllRoutes: () => {
      const b = f.currentRoute.value.fullPath;
      let I = !1;
      I = S({ routes: n.value.main, routerFullPath: b }), !I && (z(n.value.children, (v) => {
        if (I = S({ routes: v, routerFullPath: b }), I)
          return !1;
      }), r.value && (r.value = !1));
    },
    currentRoute: E
  };
}
function pU(e) {
  const t = d(e, "data"), n = d(e, "isTranslated"), r = d(e, "keyChildren"), s = d(e, "keyId"), i = d(e, "keyLabel"), o = d(e, "keyLabelCallback"), u = ({ breadcrumbs: T = [], parentId: S, parentLabel: m }) => {
    const b = fT(T);
    return S && b.push({
      parentId: S,
      label: m
    }), b;
  }, f = ({ dataClone: T, dataFlat: S = [], parentId: m, parentLabel: b, breadcrumbs: I = [] }) => (z(T, (v) => {
    v[we] = ce(v, s.value), v[Ll] = m, v[lc] = u({
      breadcrumbs: I,
      parentId: m,
      parentLabel: b
    });
    let g;
    if (o.value ? g = o.value({ item: v }) : g = ce(v, i.value), n.value && oa(g) && (g = Dt({ placeholder: g })), v[vt] = g, r.value) {
      const R = ce(v, r.value);
      R && R.length && (f({
        dataClone: R,
        parentId: v[we],
        parentLabel: v[vt],
        dataFlat: S,
        breadcrumbs: v[lc]
      }), v[wP] = R);
    }
    S.push(v);
  }), S), A = _(() => {
    const T = he(t.value);
    let S = [];
    return S = f({ dataClone: T, dataFlat: S }), S;
  }), E = _(() => {
    const T = [], S = {};
    return z(A.value, (m) => {
      const b = m[Ll];
      se(b) ? T.push(m) : (S[b] = S[b] || [], S[b].push(m));
    }), {
      main: T,
      children: S
    };
  });
  return {
    dataKeyById: _(() => $a(A.value, we)),
    dataProParent: E
  };
}
function TU(e, {
  closeMenu: t = () => {
  },
  isMenuOpen: n = _(() => !1),
  isSubMenuOpen: r = _(() => !1),
  panelParentsOpen: s = B([]),
  togglePanel: i = () => {
  }
}) {
  const o = d(e, "menuId"), u = d(e, "useEscapeForMobile"), f = B(void 0), {
    isMobileWidth: A
  } = Sn(), E = _(() => !A.value && !n.value && r.value), p = (P) => {
    if (!f.value)
      return;
    const M = f.value.querySelectorAll(gi);
    if (M.length === 0) {
      P.preventDefault();
      return;
    }
    const O = M[0], q = M[M.length - 1];
    P.shiftKey ? document.activeElement === O && (q.focus(), P.preventDefault()) : document.activeElement === q && (O.focus(), P.preventDefault());
  }, T = (P) => {
    u.value && (t(), P.preventDefault(), P.stopPropagation());
  }, S = (P) => {
    const M = P || window.$event;
    M.key === "Escape" || M.keyCode === Z.escape ? T(P) : (M.key === "Tab" || M.keyCode === Z.tab) && p(M);
  }, m = ({ panelIndex: P, panelId: M }) => {
    const O = ua({
      menuId: o.value,
      id: M,
      suffix: "link"
    }), q = document.getElementById(O);
    if (q) {
      if (P > 0) {
        const U = s.value.slice(0, P);
        i({ parentIds: U, withoutFocus: !0 });
      }
      q.focus();
    }
  }, b = ({ panelIndex: P }) => {
    const M = s.value[P + 1], O = ua({
      menuId: o.value,
      id: M,
      suffix: "panel"
    }), q = document.querySelectorAll(`#${O} a.a_menu__link`);
    q.length && q[0].focus();
  }, I = ({ panelId: P }) => {
    const M = ua({
      menuId: o.value,
      id: P,
      suffix: "link"
    }), O = document.getElementById(M);
    O && (i({ parentIds: [], withoutFocus: !0 }), O.focus());
  }, v = ({ EVENT: P, PANEL_ELEMENT: M, panelIndex: O, panelId: q }) => {
    const U = M.querySelectorAll("a.a_menu__link");
    P.shiftKey ? document.activeElement === U[0] && (O > 0 ? m({ panelIndex: O, panelId: q }) : I({ panelId: q }), P.preventDefault()) : document.activeElement === U[U.length - 1] && (O < s.value.length - 1 ? b({ panelIndex: O }) : O > 0 ? m({ panelIndex: O, panelId: q }) : I({ panelId: q }), P.preventDefault());
  }, g = (P) => {
    const M = P || window.$event;
    (M.key === "Tab" || M.keyCode === Z.tab) && z(s.value, (O, q) => {
      const U = ua({
        menuId: o.value,
        id: O,
        suffix: "panel"
      }), G = document.getElementById(U);
      if (G && G.contains(document.activeElement))
        return v({ EVENT: M, PANEL_ELEMENT: G, panelIndex: q, panelId: O }), !1;
    });
  };
  return {
    isDesktopSubMenuVisibleWhenMenuClosed: E,
    menuRef: f,
    removeListenerForKeydownDesktop: () => {
      document.removeEventListener("keydown", g);
    },
    removeListenerForKeydownMobile: () => {
      document.removeEventListener("keydown", S);
    },
    setListenerForKeydownDesktop: () => {
      document.addEventListener("keydown", g);
    },
    setListenerForKeydownMobile: () => {
      A.value && document.addEventListener("keydown", S);
    }
  };
}
function SU(e, {
  closeAllPanels: t = () => {
  },
  isMenuOpen: n = _(() => !1),
  isMobileWidth: r = B(!1),
  resetSearch: s = () => {
  },
  toggleMenu: i = () => {
  }
}) {
  const o = d(e, "isBodyFocusAfterClick"), u = B(!1), f = () => {
    o.value && (document.body.hasAttribute("tabindex") ? document.body.focus() : (document.body.setAttribute("tabindex", "-1"), document.body.focus(), document.body.removeAttribute("tabindex")));
  };
  return {
    clickMenuLink: ({ ctrlKey: E = !1, isPanelMain: p = !1 } = {}) => {
      u.value = !0, s(), f(), (!n.value || p) && t(), r.value && !E && i({ isOpen: !1 });
    },
    isMenuLinkClicked: u
  };
}
function LU(e, {
  isMenuOpen: t = B(!1),
  toggleMenu: n = () => {
  }
}) {
  const r = d(e, "isBlockerClickable"), s = d(e, "menuId"), {
    isMobileWidth: i
  } = Sn(), o = _(() => i.value ? {
    role: "dialog",
    ariaModal: !0
  } : {}), u = _(() => `${s.value}_header`);
  return {
    attributesMenuClick: _(() => {
      const A = {};
      return r.value && !t.value && (A.onClick = () => n({ isOpen: !0 }), A.class = "a_menu a_menu_clickable"), A;
    }),
    attributesMobile: o,
    headerId: u
  };
}
function mU({
  isMenuOpen: e = _(() => !1),
  panelParentsOpen: t = B([])
}) {
  return {
    isLeastOnePanelOpenAndMenuClosed: _(() => !e.value && t.value.length > 0)
  };
}
function bU(e, {
  dataKeyById: t = _(() => ({})),
  resetSearch: n = () => {
  }
}) {
  const r = d(e, "menuId"), s = B([]), i = _(() => s.value.length > 0), o = ({ parentId: E, panelParentsOpenLocal: p }) => {
    if (E) {
      p.unshift(E);
      const T = t.value[E][Ll];
      return o({ parentId: T, panelParentsOpenLocal: p });
    }
    return p;
  };
  return {
    closeAllPanels: () => {
      s.value = [], n();
    },
    isSubMenuOpen: i,
    panelParentsOpen: s,
    setDefaultMenu: () => {
      n(), s.value = [];
    },
    togglePanel: ({ parentIds: E, parentId: p, isLinkInSearchPanel: T, withoutFocus: S }) => {
      if (E)
        s.value = E;
      else {
        const m = s.value.indexOf(p), b = o({ parentId: p, panelParentsOpenLocal: [] });
        !T && m !== -1 && b.splice(-1, 1), s.value = b;
      }
      S || PS({
        menuId: r.value,
        panelId: vi(s.value) || ""
      }), n();
    }
  };
}
function IU(e, {
  menuRef: t = B(void 0),
  isMenuOpen: n = _(() => !1),
  panelParentsOpen: r = B([])
}) {
  const s = d(e, "menuId"), i = B({}), o = B(!1), u = ({ id: b }) => {
    const I = ua({
      menuId: s.value,
      id: b,
      suffix: "link"
    });
    return document.getElementById(I);
  }, f = ({ id: b }) => {
    const I = ua({
      menuId: s.value,
      id: b,
      suffix: "panel"
    });
    return document.getElementById(I);
  }, A = (b) => {
    t.value.contains(b.target) || (r.value = []);
  }, E = () => {
    o.value || (o.value = !0, document.addEventListener("click", A));
  }, p = () => {
    o.value = !1, document.removeEventListener("click", A);
  }, T = (b) => {
    if (i.value[b]) {
      i.value[b](), delete i.value[b];
      const I = f({ id: b });
      I.style.removeProperty("left"), I.style.removeProperty("top");
    }
  };
  return {
    destroyPopover: () => {
      z(i.value, (b, I) => {
        T(I);
      }), p();
    },
    startPopper: () => {
      if (n.value)
        return;
      E();
      const b = fT(i.value);
      z(r.value, (I) => {
        if (i.value[I]) {
          delete b[I];
          return;
        }
        const v = u({ id: I }), g = f({ id: I });
        !v || !g || (i.value[I] = wl(
          v,
          g,
          () => {
            !v || !g || Ml(
              v,
              g,
              {
                placement: "right",
                middleware: [
                  xl(),
                  Pl({ limiter: Mu() })
                ]
              }
            ).then(({ x: R, y: D }) => {
              Object.assign(g.style, {
                left: `${R}px`,
                top: `${D}px`
              });
            });
          }
        ));
      }), z(b, (I, v) => {
        T(v);
      });
    }
  };
}
function vU(e, {
  removeListenerForKeydownMobile: t = () => {
  },
  toggleMenu: n = () => {
  }
}) {
  const r = d(e, "isMenuOpenInitial"), s = B(!1), {
    isMobileWidth: i
  } = Sn(), o = (E) => {
    E ? n({ isOpen: !1 }) : (n({ isOpen: r.value }), t());
  };
  return {
    destroyEventBusUpdateViewOnResize: () => {
      gt.$on("updateViewOnResize", o);
    },
    initEventBusUpdateViewOnResize: () => {
      gt.$on("updateViewOnResize", o);
    },
    initMenuOpenOrClose: () => {
      i.value ? n({ isOpen: !1 }) : n({ isOpen: r.value }), Li().then(() => {
        s.value = !0;
      });
    },
    isMenuInitialized: s,
    isMobileWidth: i
  };
}
function yU(e, {
  dataKeyById: t = _(() => ({}))
}) {
  const n = d(e, "menuId"), r = B(""), s = _(() => `${n.value}_search`), i = (p) => {
    r.value = p;
  }, o = _(() => !!r.value), u = _(() => o.value ? "display: none;" : void 0), f = () => {
    o.value && (r.value = "");
  }, A = _(() => Ou(r.value)), E = _(() => {
    const p = [];
    if (o.value) {
      const T = new RegExp(A.value, "gi");
      z(t.value, (S) => {
        `${S[vt]}`.search(T) !== -1 && p.push(S);
      });
    }
    return p;
  });
  return {
    isSearchActive: o,
    itemsWithSearch: E,
    modelSearch: r,
    resetSearch: f,
    searchInputId: s,
    styleSearchPanelMain: u,
    updateModelSearch: i
  };
}
function RU({
  searchInputId: e = _(() => {
  }),
  toggleMenu: t = () => {
  }
}) {
  const n = () => {
    t({ isOpen: !0 }), window.isScrollDisabled || setTimeout(() => {
      Or({
        selector: `#${e.value}`
      });
    });
  };
  return {
    clickOnSearchBtn: n,
    keydownOnSearchBtn: (s) => {
      (s.keyCode === Z.enter || s.keyCode === Z.space) && (n(), s.stopPropagation(), s.preventDefault());
    }
  };
}
const gU = 34, OU = 20, Hhe = {
  name: "AMenu",
  provide() {
    return {
      keySlot: _(() => this.keySlot)
    };
  },
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link"
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    breadcrumbsTruncatedOffset: {
      type: Number,
      required: !1,
      default: () => gU + OU
    },
    buttonToggleClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_transparent_secondary a_btn_small"
    },
    buttonToggleProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canChangeBodyClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    compareUrlCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    hasSearch: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBackdropMobileClickable: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBlockerClickable: {
      type: Boolean,
      required: !1
    },
    isBodyFocusAfterClick: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLinkTruncated: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMenuOpenInitial: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTranslated: {
      type: Boolean,
      required: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: String,
      required: !1,
      default: "group"
    },
    keyIcon: {
      type: String,
      required: !1,
      default: "icon"
    },
    keyId: {
      type: String,
      required: !1,
      default: "id"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyParent: {
      type: String,
      required: !1,
      default: "parent"
    },
    keySlot: {
      type: String,
      required: !1,
      default: void 0
    },
    menuId: {
      type: String,
      required: !1,
      default: () => at("a_menu_")
    },
    showCountChildren: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useBackdropMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useEscapeForMobile: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  setup(e) {
    const t = d(e, "isLinkTruncated"), n = d(e, "showCountChildren"), r = d(e, "breadcrumbsTruncatedOffset"), {
      dataKeyById: s,
      dataProParent: i
    } = pU(e), {
      isSearchActive: o,
      itemsWithSearch: u,
      modelSearch: f,
      resetSearch: A,
      searchInputId: E,
      styleSearchPanelMain: p,
      updateModelSearch: T
    } = yU(e, {
      dataKeyById: s
    }), {
      closeAllPanels: S,
      isSubMenuOpen: m,
      panelParentsOpen: b,
      setDefaultMenu: I,
      togglePanel: v
    } = bU(e, {
      dataKeyById: s,
      resetSearch: A
    }), {
      closeMenu: g,
      isMenuOpen: R,
      removeBodyClasses: D,
      toggleMenu: w
    } = xS(e), {
      isDesktopSubMenuVisibleWhenMenuClosed: F,
      menuRef: P,
      removeListenerForKeydownDesktop: M,
      removeListenerForKeydownMobile: O,
      setListenerForKeydownDesktop: q,
      setListenerForKeydownMobile: U
    } = TU(e, {
      closeMenu: g,
      isMenuOpen: R,
      isSubMenuOpen: m,
      panelParentsOpen: b,
      togglePanel: v
    }), {
      clickOnSearchBtn: G,
      keydownOnSearchBtn: te
    } = RU({
      searchInputId: E,
      toggleMenu: w
    }), {
      attributesMenuClick: re,
      attributesMobile: ie,
      headerId: le
    } = LU(e, {
      isMenuOpen: R,
      toggleMenu: w
    }), {
      destroyEventBusUpdateViewOnResize: oe,
      initEventBusUpdateViewOnResize: Te,
      initMenuOpenOrClose: Be,
      isMenuInitialized: Ae,
      isMobileWidth: _e
    } = vU(e, {
      removeListenerForKeydownMobile: O,
      toggleMenu: w
    }), {
      clickMenuLink: ve,
      isMenuLinkClicked: be
    } = SU(e, {
      closeAllPanels: S,
      isMenuOpen: R,
      isMobileWidth: _e,
      resetSearch: A,
      toggleMenu: w
    }), {
      attributesBlockerClick: je
    } = hU(e, {
      closeAllPanels: S
    }), {
      activeRoutesIds: Re,
      checkAllRoutes: J,
      currentRoute: H
    } = EU(e, {
      dataKeyById: s,
      dataProParent: i,
      isMenuLinkClicked: be,
      isMenuOpen: R,
      panelParentsOpen: b
    }), {
      destroyPopover: X,
      startPopper: ae
    } = IU(e, {
      menuRef: P,
      isMenuOpen: R,
      panelParentsOpen: b
    }), {
      isLeastOnePanelOpenAndMenuClosed: ge
    } = mU({
      isMenuOpen: R,
      panelParentsOpen: b
    }), {
      clickAttributesBackdrop: Ce,
      isBackdropVisible: ke
    } = AU(e, {
      isMenuOpen: R,
      isMobileWidth: _e,
      toggleMenu: w
    });
    return rt(H, () => {
      J();
    }, {
      immediate: !0,
      deep: !0
    }), rt(R, (Qe) => {
      Ae.value && (A(), S(), Qe ? (X(), U()) : O());
    }), rt(b, () => {
      ae();
    }, {
      deep: !0
    }), rt(F, (Qe) => {
      Qe ? q() : M();
    }), Je("activeRoutesIds", _(() => Re.value)), Je("clickMenuLink", ve), Je("isLinkTruncated", _(() => t.value)), Je("isMenuOpen", _(() => R.value)), Je("panelParentsOpen", b), Je("showCountChildren", _(() => n.value)), Je("togglePanel", v), Je("breadcrumbsTruncatedOffset", _(() => r.value)), Be(), Te(), Ot(() => {
      D(), oe(), X(), M(), O();
    }), {
      activeRoutesIds: Re,
      attributesBlockerClick: je,
      attributesMenuClick: re,
      attributesMobile: ie,
      checkAllRoutes: J,
      clickAttributesBackdrop: Ce,
      clickOnSearchBtn: G,
      dataKeyById: s,
      dataProParent: i,
      headerId: le,
      isBackdropVisible: ke,
      isLeastOnePanelOpenAndMenuClosed: ge,
      isMenuOpen: R,
      isMobileWidth: _e,
      isSearchActive: o,
      isSubMenuOpen: m,
      itemsWithSearch: u,
      keydownOnSearchBtn: te,
      menuRef: P,
      modelSearch: f,
      panelParentsOpen: b,
      removeBodyClasses: D,
      searchInputId: E,
      setDefaultMenu: I,
      styleSearchPanelMain: p,
      toggleMenu: w,
      togglePanel: v,
      updateModelSearch: T
    };
  },
  render() {
    return c("nav", {
      ref: "menuRef",
      id: this.menuId,
      "aria-labelledby": this.headerId,
      class: [
        "a_menu",
        {
          a_menu_sub_open: this.isSubMenuOpen,
          a_menu_open: this.isMenuOpen,
          a_menu_close: !this.isMenuOpen,
          a_menu_mobile: this.isMobileWidth
        }
      ],
      ...this.attributesMobile,
      ...this.attributesMenuClick
    }, [
      c("div", {
        class: "a_menu__navbar_top"
      }, [
        c(x$, {
          buttonToggleProps: this.buttonToggleProps,
          canChangeBodyClass: this.canChangeBodyClass,
          class: this.buttonToggleClass,
          insideMenu: !0,
          menuId: this.menuId
        }),
        this.$slots.menuSearch && this.$slots.menuSearch(),
        this.hasSearch && c(Rn, {
          id: this.searchInputId,
          class: "a_menu__navbar_top__search",
          modelValue: this.modelSearch,
          label: "_A_MENU_2_SEARCH_",
          "onUpdate:modelValue": this.updateModelSearch
        })
      ]),
      c("div", {
        class: "a_menu__panels__main",
        style: this.styleSearchPanelMain
      }, [
        c("div", {
          class: "a_menu__navbar_top_sub"
        }, [
          c(pe, {
            id: this.headerId,
            class: "a_menu__navbar_top_sub__text",
            tag: "strong",
            text: "_A_MENU_2_MAIN_MENU_"
          }),
          this.hasSearch && c(pt, {
            role: "button",
            tabindex: 0,
            tag: "a",
            class: "a_menu__navbar_top_sub__search a_menu__link a_menu__link_btn",
            iconLeft: Fl,
            iconClass: "a_menu__link__icon",
            title: "_A_MENU_2_OPEN_SEARCH_",
            textScreenReader: "_A_MENU_2_OPEN_SEARCH_",
            onClick: this.clickOnSearchBtn,
            onKeydown: this.keydownOnSearchBtn
          })
        ]),
        c(fU, {
          class: {
            a_menu__vertical_scroll_hidden: this.isLeastOnePanelOpenAndMenuClosed
          },
          disabled: this.isMenuOpen || this.isLeastOnePanelOpenAndMenuClosed
        }, () => [
          c(lp, {
            attributesBlockerClick: this.attributesBlockerClick,
            dataKeyById: this.dataKeyById,
            dataProParentChildren: this.dataProParent.children,
            isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
            isPanelMain: !0,
            isSearchActive: this.isSearchActive,
            keyGroup: this.keyGroup,
            keyIcon: this.keyIcon,
            menuId: this.menuId,
            paneIndex: "00",
            panelItems: this.dataProParent.main,
            panelParentsOpen: this.panelParentsOpen
          }, this.$slots)
        ]),
        c("div", {
          class: "a_menu__panels"
        }, [
          Object.keys(this.dataProParent.children).map((e, t) => c(lp, {
            key: e,
            attributesBlockerClick: {},
            breadcrumbsLinkClass: this.breadcrumbsLinkClass,
            breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
            dataKeyById: this.dataKeyById,
            dataProParentChildren: this.dataProParent.children,
            isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
            isSearchActive: this.isSearchActive,
            keyGroup: this.keyGroup,
            keyIcon: this.keyIcon,
            menuId: this.menuId,
            paneIndex: t,
            panelItems: this.dataProParent.children[e],
            panelParentsOpen: this.panelParentsOpen,
            parentId: e
          }, this.$slots))
        ])
      ]),
      c(uU, {
        breadcrumbsLinkClass: this.breadcrumbsLinkClass,
        breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
        dataProParentChildren: this.dataProParent.children,
        isSearchActive: this.isSearchActive,
        isSearchBreadcrumbsTruncated: this.isSearchBreadcrumbsTruncated,
        itemsWithSearch: this.itemsWithSearch,
        menuId: this.menuId,
        modelSearch: this.modelSearch
      }, this.$slots),
      this.isBackdropVisible ? c(da, {
        to: "body"
      }, [
        c("div", {
          class: "a_menu__backdrop a_backdrop a_backdrop_fade",
          "aria-hidden": !0,
          ...this.clickAttributesBackdrop
        })
      ]) : ""
    ]);
  }
};
function CU(e) {
  const t = d(e, "hideHeader"), n = d(e, "id");
  return {
    headerId: _(() => {
      if (!t.value)
        return `${n.value}_header`;
    })
  };
}
function MS(e) {
  const t = d(e, "bodyHtml"), n = d(e, "id");
  return {
    bodyHtmlId: _(() => {
      if (t.value)
        return `${n.value}_body_html`;
    })
  };
}
function DU(e) {
  const t = d(e, "close"), n = d(e, "isConfirm"), r = () => {
    n.value || t.value();
  };
  return {
    destroyEventBusCloseFromOutside: () => {
      gt.$off("closeModal", r);
    },
    initEventBusCloseFromOutside: () => {
      gt.$on("closeModal", r);
    }
  };
}
function NU(e) {
  const t = d(e, "disabled"), n = d(e, "loading");
  return {
    disabledLocal: _(() => t.value || n.value)
  };
}
function BU(e) {
  const t = d(e, "close"), n = d(e, "useEscape"), {
    isOnePopupOpen: r
  } = Ef();
  return {
    pressEscape: (i) => {
      !n.value || r.value || (t.value(), i.preventDefault(), i.stopPropagation());
    }
  };
}
function wU(e) {
  const t = d(e, "focusStartId"), n = d(e, "focusStartId"), r = B(void 0), s = B(void 0), i = () => {
    const A = document.getElementById(t.value);
    A && A.focus();
  }, o = () => {
    var E;
    const A = ((E = s.value) == null ? void 0 : E.querySelectorAll(gi)) || [];
    A.length !== 0 && A[0].focus();
  };
  return {
    modalRef: r,
    modalWrapperRef: s,
    setFocusByShowModal: () => {
      setTimeout(() => {
        n.value || (t.value ? i() : o());
      });
    },
    trapFocus: (A) => {
      const E = s.value.querySelectorAll(gi);
      if (E.length === 0) {
        A.preventDefault();
        return;
      }
      const p = E[0], T = E[E.length - 1];
      A.shiftKey ? document.activeElement === p && (T.focus(), A.preventDefault()) : document.activeElement === T && (p.focus(), A.preventDefault());
    }
  };
}
function PU(e) {
  const t = d(e, "selectorClose"), n = d(e, "selectorCloseIds"), r = _(() => {
    const o = [];
    return n.value && (ot(n.value) ? o.push(`#${n.value}`) : Se(n.value) && z(n.value, (u) => {
      o.push(`#${u}`);
    })), t.value && (ot(t.value) ? o.push(t.value) : Se(t.value) && o.push(...t.value)), o;
  }), s = ({ selector: o }) => {
    const u = document.querySelector(o);
    return u ? (u.focus(), !0) : !1;
  };
  return {
    setFocusByDestroy: () => {
      if (!r.value.length)
        return;
      const o = he(r.value);
      setTimeout(() => {
        z(o, (u) => {
          if (s({ selector: u }))
            return !1;
        });
      }, 300);
    }
  };
}
function xU({
  removeListenerForKeydown: e = () => {
  },
  setFocusByDestroy: t = () => {
  }
}) {
  return {
    hideModal: () => {
      document.body.classList.remove("a_modal_open"), t(), e();
    }
  };
}
function MU({
  pressEscape: e = () => {
  },
  trapFocus: t = () => {
  }
}) {
  const n = (i) => {
    const o = i || window.$event;
    o.key === "Escape" || o.keyCode === Z.escape ? e(i) : (o.key === "Tab" || o.keyCode === Z.tab) && t(o);
  };
  return {
    setListenerForKeydown: () => {
      document.addEventListener("keydown", n);
    },
    removeListenerForKeydown: () => {
      document.removeEventListener("keydown", n);
    }
  };
}
function FU(e, {
  checkOpenedModals: t = () => {
  },
  setFocusByShowModal: n = () => {
  },
  setListenerForKeydown: r = () => {
  }
}) {
  const s = d(e, "isModalHidden");
  return {
    showModal: () => {
      s.value || (t(), document.body.classList.add("a_modal_open"), n(), r());
    }
  };
}
function qU(e) {
  const t = d(e, "size");
  return {
    sizeClass: _(() => {
      if (t.value)
        return `a_modal_${t.value}`;
    })
  };
}
function $U(e) {
  const t = d(e, "stop");
  return {
    clickWrapperStoppPropagationEventMap: _(() => t.value ? {
      onClick: (r) => r.stopPropagation()
    } : {})
  };
}
function UU(e) {
  const t = d(e, "backdropZIndex"), n = d(e, "zIndex"), r = B(0), s = _(() => {
    const u = {};
    return n.value ? u["--a_modal_zindex"] = n.value : r.value > 1 && (u["--a_modal_zindex"] = 1055 + r.value - 1), u;
  }), i = _(() => {
    const u = {};
    return t.value ? u["--a__backdrop_zindex"] = t.value : r.value > 1 && (u["--a__backdrop_zindex"] = 1054 + r.value - 1), u;
  });
  return {
    checkOpenedModals: () => {
      const u = document.querySelectorAll(".a_backdrop");
      r.value = (u == null ? void 0 : u.length) || 0;
    },
    countOpenedModals: r,
    stylesBackdrop: i,
    stylesZIndexModal: s
  };
}
const Oe = B({
  propsDefault: {
    closeButtonClass: "a_btn a_btn_secondary",
    closeButtonText: "_A_MODAL_BTN_CANCEL_",
    closeButtonTextScreenReaderFooter: "_A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_",
    closeButtonTextScreenReaderHeader: "_A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_",
    headerTag: "h2",
    idPrefix: void 0,
    isCloseButtonHide: !1,
    isDataFormHide: !1,
    isDataFormRender: !0,
    isFooterSticky: !1,
    isRequired: !1,
    isSaveButtonHide: !1,
    modalClass: void 0,
    modalStyle: void 0,
    saveButtonClass: "a_btn a_btn_primary",
    saveButtonText: "_A_MODAL_BTN_SAVE_",
    saveButtonTextScreenReader: "_A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_",
    selectorClose: void 0,
    selectorCloseIds: void 0,
    size: void 0,
    textRequired: void 0,
    useEscape: !0
  }
}), Vhe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Oe.value.propsDefault = {
      ...Oe.value.propsDefault,
      ...t
    };
  }
}, Vu = {
  name: "AModal",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    bodyHtml: {
      type: String,
      required: !1,
      default: ""
    },
    bodyHtmlClass: {
      type: [String, Array, Object],
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideFooter: {
      type: Boolean,
      required: !1
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: () => at("a_modal_")
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isCloseButtonHide
    },
    isConfirm: {
      type: Boolean,
      required: !1
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isFooterSticky
    },
    isModalHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => Oe.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => Oe.value.propsDefault.modalStyle
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => Oe.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => Oe.value.propsDefault.selectorCloseIds
    },
    showCloseButtonHeader: {
      type: Boolean,
      required: !1,
      default: !0
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => Oe.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = d(e, "isModalHidden"), {
      checkOpenedModals: n,
      stylesBackdrop: r,
      stylesZIndexModal: s
    } = UU(e), {
      bodyHtmlId: i
    } = MS(e), {
      destroyEventBusCloseFromOutside: o,
      initEventBusCloseFromOutside: u
    } = DU(e), {
      headerId: f
    } = CU(e), {
      sizeClass: A
    } = qU(e), {
      disabledLocal: E
    } = NU(e), {
      modalRef: p,
      modalWrapperRef: T,
      setFocusByShowModal: S,
      trapFocus: m
    } = wU(e), {
      setFocusByDestroy: b
    } = PU(e), {
      pressEscape: I
    } = BU(e), {
      setListenerForKeydown: v,
      removeListenerForKeydown: g
    } = MU({
      pressEscape: I,
      trapFocus: m
    }), {
      showModal: R
    } = FU(e, {
      checkOpenedModals: n,
      setFocusByShowModal: S,
      setListenerForKeydown: v
    }), {
      hideModal: D
    } = xU({
      removeListenerForKeydown: g,
      setFocusByDestroy: b
    }), {
      clickWrapperStoppPropagationEventMap: w
    } = $U(e);
    return rt(t, () => {
      t.value ? D() : R();
    }), u(), jr(() => {
      R();
    }), Ot(() => {
      o();
    }), Bp(() => {
      D();
    }), {
      bodyHtmlId: i,
      clickWrapperStoppPropagationEventMap: w,
      disabledLocal: E,
      headerId: f,
      modalRef: p,
      modalWrapperRef: T,
      sizeClass: A,
      stylesBackdrop: r,
      stylesZIndexModal: s
    };
  },
  render() {
    const e = this.hideFooter ? "" : c("div", {
      ref: "modal_footer",
      class: [
        "a_modal_footer",
        {
          a_modal_footer_sticky: this.isFooterSticky
        }
      ]
    }, [
      c(wS, {
        alwaysTranslate: this.alwaysTranslate,
        isLoading: this.loading
      }, () => [
        c("div", {
          class: "a_modal_footer_actions"
        }, [
          this.$slots.modalFooterPrepend && this.$slots.modalFooterPrepend(),
          !this.isSaveButtonHide && this.save && c(Ee, {
            id: this.saveButtonId,
            alwaysTranslate: this.alwaysTranslate,
            class: this.saveButtonClass,
            disabled: this.disabledLocal || this.disabledSave,
            extra: this.extra,
            html: this.saveButtonText,
            textAriaHidden: !0,
            textScreenReader: this.saveButtonTextScreenReader,
            type: "button",
            ...this.saveButtonAttributes,
            onClick: this.save
          }),
          !this.isCloseButtonHide && c(Ee, {
            id: this.closeButtonId,
            alwaysTranslate: this.alwaysTranslate,
            class: this.closeButtonClass,
            disabled: this.disabledLocal,
            extra: this.extra,
            html: this.closeButtonText,
            textAriaHidden: !0,
            textScreenReader: this.closeButtonTextScreenReaderFooter,
            type: "button",
            ...this.closeButtonAttributes,
            onClick: () => this.close(!0)
          }),
          this.$slots.modalFooterAppend && this.$slots.modalFooterAppend()
        ])
      ])
    ]);
    return c(da, {
      to: "body"
    }, [
      c("div", {
        ref: "modalWrapperRef",
        ...this.clickWrapperStoppPropagationEventMap
      }, [
        c("div", {
          ref: "modalRef",
          id: this.id,
          class: ["a_modal", this.modalClass, {
            a_modal_confirm: this.isConfirm,
            a_modal_show: !this.isModalHidden
          }],
          role: "dialog",
          ariaModal: !0,
          "aria-labelledby": this.headerId,
          "aria-describedby": this.bodyHtmlId,
          style: [
            this.modalStyle,
            this.stylesZIndexModal
          ],
          ...this.$attrs
        }, [
          c("div", {
            class: ["a_modal_dialog a_modal_dialog_scrollable", this.sizeClass]
          }, [
            c("div", {
              class: [
                "a_modal_content",
                {
                  a_modal_content_with_footer_sticky: this.isFooterSticky
                }
              ]
            }, [
              this.hideHeader ? "" : c("div", {
                ref: "modal_header",
                class: "a_modal_header"
              }, [
                c("div", {
                  id: this.headerId
                }, [
                  this.$slots.modalHeader ? this.$slots.modalHeader() : "",
                  this.headerText ? c(this.headerTag, {
                    class: "a_modal_title"
                  }, [
                    c(pe, {
                      alwaysTranslate: this.alwaysTranslate,
                      tag: "span",
                      html: this.headerText,
                      extra: this.extra
                    })
                  ]) : ""
                ]),
                this.showCloseButtonHeader ? c(Ee, {
                  alwaysTranslate: this.alwaysTranslate,
                  class: "a_btn_close",
                  disabled: this.disabledLocal,
                  textScreenReader: this.closeButtonTextScreenReaderHeader,
                  title: this.closeButtonTextScreenReaderHeader,
                  type: "button",
                  onClick: () => this.close(!0)
                }) : ""
              ]),
              c("div", {
                ref: "modal_body",
                class: "a_modal_body"
              }, [
                c("div", {
                  ref: "modal_body",
                  class: "a_modal_body__content"
                }, [
                  this.bodyHtml && c(pe, {
                    id: this.bodyHtmlId,
                    alwaysTranslate: this.alwaysTranslate,
                    class: this.bodyHtmlClass,
                    html: this.bodyHtml,
                    extra: this.extra
                  }),
                  this.$slots.modalBody && this.$slots.modalBody()
                ]),
                this.isFooterSticky ? e : ""
              ]),
              this.isFooterSticky ? "" : e
            ])
          ])
        ])
      ]),
      !this.isModalHidden && c("div", {
        class: [
          "a_backdrop a_backdrop_fade a_backdrop_show",
          {
            a_backdrop_confirm: this.isConfirm
          }
        ],
        style: this.stylesBackdrop
      })
    ]);
  }
};
function kU({
  isModalHidden: e = B(!1)
}) {
  const t = () => {
    e.value = !0;
  };
  return {
    destroyEventBusCloseFromOutside: () => {
      gt.$off("closeModalConfirm", t);
    },
    initEventBusCloseFromOutside: () => {
      gt.$on("closeModalConfirm", t);
    }
  };
}
const Whe = {
  name: "AModalConfirm",
  setup() {
    const {
      closeConfirm: e,
      confirmOptions: t,
      isModalHidden: n
    } = mf(), {
      destroyEventBusCloseFromOutside: r,
      initEventBusCloseFromOutside: s
    } = kU({
      isModalHidden: n
    }), i = _(() => ({
      isModalHidden: n.value,
      isConfirm: !0,
      ...t.value,
      showCloseButtonHeader: !1,
      close: e
    }));
    return s(), Ot(() => {
      r();
    }), {
      modalProps: i
    };
  },
  render() {
    return c(Vu, this.modalProps, this.$slots);
  }
};
function HU(e) {
  const t = d(e, "dataForm");
  return {
    hasDataForm: _(() => t.value.length > 0)
  };
}
function VU({ emit: e }) {
  return {
    changeLocal: (r) => {
      e("change", r);
    },
    updateModelLocal: (r) => {
      e("update:modelValue", r);
    }
  };
}
const WU = {
  name: "AModalForm",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    bodyHtml: {
      type: String,
      required: !1,
      default: ""
    },
    bodyHtmlClass: {
      type: [String, Array, Object],
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    dataForm: {
      type: Array,
      required: !1,
      default: () => []
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideFooter: {
      type: Boolean,
      required: !1
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: () => at("a_modal_form_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.idPrefix
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isCloseButtonHide
    },
    isConfirm: {
      type: Boolean,
      required: !1
    },
    isDataFormHide: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isDataFormHide
    },
    isDataFormRender: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isDataFormRender
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isFooterSticky
    },
    isModalHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isRequired: {
      type: Boolean,
      required: !1,
      default: Oe.value.propsDefault.isRequired
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => Oe.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => Oe.value.propsDefault.modalStyle
    },
    modelValue: {
      type: Object,
      required: !1,
      default: void 0
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => Oe.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => Oe.value.propsDefault.selectorCloseIds
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => Oe.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: void 0
    },
    textRequired: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.textRequired
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "change",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      bodyHtmlId: n
    } = MS(e), {
      hasDataForm: r
    } = HU(e), {
      changeLocal: s,
      updateModelLocal: i
    } = VU(t);
    return {
      bodyHtmlId: n,
      changeLocal: s,
      hasDataForm: r,
      updateModelLocal: i
    };
  },
  render() {
    return c(Vu, {
      alwaysTranslate: this.alwaysTranslate,
      backdropZIndex: this.backdropZIndex,
      close: this.close,
      closeButtonClass: this.closeButtonClass,
      closeButtonId: this.closeButtonId,
      closeButtonText: this.closeButtonText,
      closeButtonTextScreenReaderFooter: this.closeButtonTextScreenReaderFooter,
      closeButtonTextScreenReaderHeader: this.closeButtonTextScreenReaderHeader,
      disabled: this.disabled,
      disabledSave: this.disabledSave,
      extra: this.extra,
      focusStartId: this.focusStartId,
      headerTag: this.headerTag,
      headerText: this.headerText,
      hideFooter: this.hideFooter,
      hideHeader: this.hideHeader,
      id: this.id,
      isCloseButtonHide: this.isCloseButtonHide,
      isConfirm: this.isConfirm,
      isFooterSticky: this.isFooterSticky,
      isModalHidden: this.isModalHidden,
      isSaveButtonHide: this.isSaveButtonHide,
      loading: this.loading,
      modalClass: this.modalClass,
      modalStyle: this.modalStyle,
      save: this.save,
      saveButtonClass: this.saveButtonClass,
      saveButtonId: this.saveButtonId,
      saveButtonText: this.saveButtonText,
      saveButtonTextScreenReader: this.saveButtonTextScreenReader,
      selectorClose: this.selectorClose,
      selectorCloseIds: this.selectorCloseIds,
      size: this.size,
      stop: this.stop,
      useEscape: this.useEscape,
      useFocusOnStart: this.useFocusOnStart,
      zIndex: this.zIndex,
      "aria-describedby": this.bodyHtmlId
    }, {
      ...this.$slots || {},
      modalBody: () => [
        this.$slots.modalBodyPrepend && this.$slots.modalBodyPrepend(),
        this.bodyHtml && c(pe, {
          id: this.bodyHtmlId,
          alwaysTranslate: this.alwaysTranslate,
          class: this.bodyHtmlClass,
          html: this.bodyHtml,
          extra: this.extra
        }),
        this.hasDataForm && c(Uu, {
          alwaysTranslate: this.alwaysTranslate,
          modelValue: this.modelValue,
          data: this.dataForm,
          errors: this.errors,
          idPrefix: this.idPrefix,
          isRequired: this.isRequired,
          textRequired: this.textRequired,
          textErrorHeader: this.textErrorHeader,
          isHide: this.isDataFormHide,
          isRender: this.isDataFormRender,
          "onUpdate:modelValue": this.updateModelLocal,
          onChange: this.changeLocal
        }, this.$slots),
        this.$slots.modalBodyAppend && this.$slots.modalBodyAppend()
      ]
    });
  }
};
function GU(e) {
  const t = d(e, "stepIndex"), n = d(e, "stepActiveComputed"), r = _(() => n.value === t.value), s = _(() => t.value < n.value);
  return {
    isStepActive: r,
    isStepBeforeActive: s
  };
}
function jU(e, {
  isStepDisabled: t = _(() => !1),
  isStepActive: n = _(() => !1)
}) {
  const r = d(e, "id"), s = d(e, "stepIndex"), i = _(() => t.value || n.value ? -1 : 0), o = _(() => n.value ? {
    "aria-current": "step"
  } : {}), u = _(() => `${r.value}_step_text_${s.value}`), f = _(() => `${r.value}_step_status_text_${s.value}`);
  return {
    ariaCurrentAttributes: o,
    tabindex: i,
    stepStatusTextId: f,
    stepTextId: u
  };
}
function FS(e) {
  const t = d(e, "id"), n = d(e, "stepIndex");
  return {
    contentId: _(() => `${t.value}_${n.value}_content`)
  };
}
function KU(e) {
  const t = d(e, "step"), n = d(e, "stepIndex"), r = d(e, "stepActiveComputed"), s = d(e, "isForwardStepButtonDisabled"), i = d(e, "isBackStepButtonDisabled"), o = d(e, "isForwardButtonDisabled"), u = d(e, "isBackButtonDisabled"), f = _(() => n.value < r.value), A = _(() => n.value > r.value);
  return {
    isStepDisabled: _(() => t.value.disabled ? !0 : A.value ? o.value || s.value : f.value ? u.value || i.value : !1)
  };
}
function zU(e) {
  const t = d(e, "step"), n = d(e, "stepIconError"), r = d(e, "stepIconErrorText"), s = d(e, "stepIconWarning"), i = d(e, "stepIconWarningText"), o = _(() => {
    if (t.value.error)
      return n.value;
    if (t.value.warning)
      return s.value;
  }), u = _(() => {
    if (t.value.error)
      return r.value;
    if (t.value.warning)
      return i.value;
  });
  return {
    iconErrorWarning: o,
    titleIconErrorWarning: u
  };
}
function YU(e, { emit: t }, {
  isStepDisabled: n = _(() => !1)
}) {
  const r = d(e, "step"), s = d(e, "stepIndex"), i = ({ $event: u }) => {
    n.value || t("onStepClick", {
      $event: u,
      step: r.value,
      stepIndex: s.value
    });
  };
  return {
    onClick: i,
    onKeydown: (u) => {
      (u.keyCode === Z.enter || u.keyCode === Z.space) && (i({ $event: u }), u.preventDefault(), u.stopPropagation());
    }
  };
}
function XU(e, {
  isStepActive: t = _(() => !1),
  isStepBeforeActive: n = _(() => !1),
  isStepDisabled: r = _(() => !1)
}) {
  const s = d(e, "step");
  return {
    linkClass: _(() => ["a_wizard__step__link", {
      active: t.value,
      before_active: n.value,
      default: r.value,
      done: !t.value && !r.value,
      error: s.value.error,
      warning: s.value.warning
    }])
  };
}
function ZU(e, {
  isStepActive: t = _(() => !1)
}) {
  const n = d(e, "isMobile"), r = d(e, "isStepNumberVisible"), s = d(e, "showOnlyActiveStepMobile"), i = d(e, "stepIndex"), o = _(() => i.value + 1), u = _(() => n.value && s.value && t.value), f = _(() => r.value ? u.value ? "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_" : o.value : "");
  return {
    stepNumber: o,
    stepNumberText: f
  };
}
function JU(e, {
  isStepActive: t = _(() => !1),
  isStepBeforeActive: n = _(() => !1)
}) {
  return {
    statusText: _(() => t.value ? "_A_WIZARD_STEP_ACTIVE_" : n.value ? "_A_WIZARD_STEP_VISITED_" : "_A_WIZARD_STEP_UPCOMING_")
  };
}
const QU = {
  name: "AWizardStep",
  props: {
    extra: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isMobile: {
      type: Boolean,
      required: !0
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    step: {
      type: Object,
      required: !0
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: Du
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: Cu
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    stepIndex: {
      type: Number,
      required: !0
    },
    stepsCount: {
      type: Number,
      required: !0
    }
  },
  emits: [
    "onStepClick"
  ],
  setup(e, t) {
    const {
      isStepActive: n,
      isStepBeforeActive: r
    } = GU(e), {
      stepNumber: s,
      stepNumberText: i
    } = ZU(e, {
      isStepActive: n
    }), {
      isStepDisabled: o
    } = KU(e), {
      linkClass: u
    } = XU(e, {
      isStepActive: n,
      isStepBeforeActive: r,
      isStepDisabled: o
    }), {
      onClick: f,
      onKeydown: A
    } = YU(e, t, {
      isStepDisabled: o
    }), {
      ariaCurrentAttributes: E,
      stepTextId: p,
      stepStatusTextId: T,
      tabindex: S
    } = jU(e, {
      isStepDisabled: o,
      isStepActive: n
    }), {
      contentId: m
    } = FS(e), {
      statusText: b
    } = JU(e, {
      isStepActive: n,
      isStepBeforeActive: r
    }), {
      iconErrorWarning: I,
      titleIconErrorWarning: v
    } = zU(e);
    return {
      ariaCurrentAttributes: E,
      contentId: m,
      iconErrorWarning: I,
      isStepActive: n,
      isStepDisabled: o,
      linkClass: u,
      onClick: f,
      onKeydown: A,
      statusText: b,
      stepNumber: s,
      stepNumberText: i,
      stepStatusTextId: T,
      stepTextId: p,
      tabindex: S,
      titleIconErrorWarning: v
    };
  },
  render() {
    return c(
      "li",
      {
        class: [
          "a_wizard__step",
          {
            a_wizard__step_active: this.isStepActive
          }
        ]
      },
      [
        c(Ee, {
          "aria-controls": this.contentId,
          "aria-describedby": this.stepStatusTextId,
          ariaDisabled: this.isStepDisabled,
          class: this.linkClass,
          classDefault: "",
          classDisabled: "disabled",
          role: "button",
          tabindex: this.tabindex,
          title: this.step.title,
          type: "link",
          onClick: this.onClick,
          onKeydown: this.onKeydown,
          ...this.ariaCurrentAttributes
        }, () => this.step.slotLabel && this.$slots[this.step.slotLabel] ? this.$slots[this.step.slotLabel]({
          isStepActive: this.isStepActive,
          isStepDisabled: this.isStepDisabled,
          step: this.step,
          stepIndex: this.stepIndex,
          stepNumber: this.stepNumber,
          stepTextId: this.stepTextId
        }) : [
          this.isStepNumberVisible ? c("span", {
            class: "a_wizard__step__number"
          }, [
            this.step.icon ? c(_t, {
              class: "a_wizard__step__number__icon",
              icon: this.step.icon
            }) : c(pe, {
              class: "a_wizard__step__number__text",
              tag: "span",
              text: this.stepNumberText,
              extra: {
                stepActive: this.stepNumber,
                stepsCount: this.stepsCount
              }
            })
          ]) : "",
          c("span", {
            class: "a_wizard__step__text"
          }, [
            c(pe, {
              id: this.stepTextId,
              class: "a_wizard__step__text__child",
              extra: this.extra,
              html: this.step.label,
              tag: "span"
            }),
            this.iconErrorWarning ? c(Ee, {
              iconClass: "a_wizard__step__text__icon",
              iconLeft: this.iconErrorWarning,
              tag: "span",
              textScreenReader: this.titleIconErrorWarning,
              title: this.titleIconErrorWarning,
              type: "text"
            }) : ""
          ])
        ]),
        c(pe, {
          id: this.stepStatusTextId,
          class: "a_sr_only",
          tag: "span",
          text: this.statusText
        }),
        c("span", {
          class: "a_wizard__step__divider",
          ariaHidden: !0
        })
      ]
    );
  }
};
function ek(e) {
  const t = d(e, "stepIndex"), n = d(e, "stepActiveComputed");
  return {
    isStepActive: _(() => t.value === n.value)
  };
}
function tk(e) {
  const t = d(e, "id"), n = d(e, "stepIndex");
  return {
    focusId: _(() => `${t.value}_${n.value}_focus`)
  };
}
function nk(e, {
  isStepActive: t = _(() => !1)
}) {
  const n = d(e, "stepsVisitedComputed"), r = d(e, "stepIndex"), s = _(() => t.value ? "" : "display: none;");
  return {
    isStepRender: _(() => t.value || n.value[r.value]),
    styleStep: s
  };
}
const rk = {
  name: "AWizardTab",
  props: {
    extra: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    step: {
      type: Object,
      required: !0
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    stepIndex: {
      type: Number,
      required: !0
    },
    stepsVisitedComputed: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    wizardAriaDescribedby: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      isStepActive: t
    } = ek(e), {
      isStepRender: n,
      styleStep: r
    } = nk(e, {
      isStepActive: t
    }), {
      focusId: s
    } = tk(e), {
      contentId: i
    } = FS(e);
    return {
      contentId: i,
      focusId: s,
      isStepRender: n,
      styleStep: r
    };
  },
  render() {
    return c("div", {
      id: this.contentId
    }, [
      this.isStepRender && c("div", {
        class: "a_wizard__tab_pane",
        style: this.styleStep
      }, [
        c("div", {
          id: this.focusId,
          class: "a_sr_only",
          tabindex: "-1",
          "aria-describedby": this.wizardAriaDescribedby
        }),
        this.$slots[this.step.slot] && this.$slots[this.step.slot]({
          step: this.step,
          stepIndex: this.stepIndex
        })
      ])
    ]);
  }
};
function ak(e, {
  isStepActiveFirst: t = _(() => !1),
  isStepActiveLast: n = _(() => !1)
}) {
  const r = d(e, "isBackButtonDisabled"), s = d(e, "isForwardButtonDisabled"), i = _(() => t.value ? !0 : r.value), o = _(() => n.value ? !0 : s.value);
  return {
    isBackButtonDisabledLocal: i,
    isForwardButtonDisabledLocal: o
  };
}
function sk(e, { emit: t }) {
  return {
    goOneStepBack: () => {
      t("goOneStepBack");
    },
    goOneStepForward: () => {
      t("goOneStepForward");
    }
  };
}
function ik(e) {
  const t = d(e, "steps"), n = d(e, "stepActiveComputed"), r = _(() => n.value === 0), s = _(() => n.value === t.value.length - 1);
  return {
    isStepActiveFirst: r,
    isStepActiveLast: s
  };
}
function lk(e, {
  isStepActiveFirst: t = _(() => !1),
  isStepActiveLast: n = _(() => !1)
}) {
  const r = d(e, "isForwardButtonHide"), s = d(e, "isBackButtonHide"), i = d(e, "isForwardLastButtonHide"), o = d(e, "isBackFirstButtonHide"), u = _(() => s.value ? !0 : t.value && o.value), f = _(() => r.value ? !0 : n.value && i.value);
  return {
    isBackButtonHideLocal: u,
    isForwardButtonHideLocal: f
  };
}
const ok = {
  name: "AWizardToolbar",
  props: {
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    steps: {
      type: Array,
      required: !0
    }
  },
  emits: [
    "goOneStepBack",
    "goOneStepForward"
  ],
  setup(e, t) {
    const {
      isStepActiveFirst: n,
      isStepActiveLast: r
    } = ik(e), {
      isBackButtonDisabledLocal: s,
      isForwardButtonDisabledLocal: i
    } = ak(e, {
      isStepActiveFirst: n,
      isStepActiveLast: r
    }), {
      isBackButtonHideLocal: o,
      isForwardButtonHideLocal: u
    } = lk(e, {
      isStepActiveFirst: n,
      isStepActiveLast: r
    }), {
      goOneStepBack: f,
      goOneStepForward: A
    } = sk(e, t);
    return {
      goOneStepBack: f,
      goOneStepForward: A,
      isBackButtonDisabledLocal: s,
      isBackButtonHideLocal: o,
      isForwardButtonDisabledLocal: i,
      isForwardButtonHideLocal: u
    };
  },
  render() {
    return c(
      "div",
      {
        class: "a_wizard__toolbar"
      },
      [
        !this.isBackButtonHideLocal && c(Ee, {
          class: this.backButtonClass,
          disabled: this.isBackButtonDisabledLocal,
          extra: this.extra,
          iconLeft: this.backButtonIconLeft,
          iconRight: this.backButtonIconRight,
          loading: this.isButtonsLoading,
          text: this.backButtonText,
          textAriaHidden: !0,
          textScreenReader: this.backButtonTitle,
          title: this.backButtonTitle,
          type: "button",
          onClick: this.goOneStepBack,
          ...this.backButtonAttributes
        }),
        !this.isForwardButtonHideLocal && c(Ee, {
          class: this.forwardButtonClass,
          disabled: this.isForwardButtonDisabledLocal,
          extra: this.extra,
          iconLeft: this.forwardButtonIconLeft,
          iconRight: this.forwardButtonIconRight,
          loading: this.isButtonsLoading,
          text: this.forwardButtonText,
          textAriaHidden: !0,
          textScreenReader: this.forwardButtonTitle,
          title: this.forwardButtonTitle,
          type: "button",
          onClick: this.goOneStepForward,
          ...this.forwardButtonAttributes
        }),
        this.$slots.toolbar && this.$slots.toolbar()
      ]
    );
  }
};
function uk(e, {
  stepActiveComputed: t = _(() => 0)
}) {
  const n = d(e, "ariaLabel"), r = d(e, "ariaLabelSteps"), s = d(e, "extra"), i = d(e, "id"), {
    getTranslationAttributes: o,
    getTranslatedText: u,
    isPlaceholderTranslate: f
  } = Gs(), A = _(() => f(n.value)), E = _(() => f(r.value)), p = _(() => {
    if (A.value)
      return u({
        placeholder: n.value,
        extra: s.value
      });
  }), T = _(() => {
    if (E.value)
      return u({
        placeholder: r.value,
        extra: s.value
      });
  }), S = _(() => o({
    attr: "aria-label",
    value: n.value,
    translation: p.value,
    isTranslate: A.value
  })), m = _(() => o({
    attr: "aria-label",
    value: r.value,
    translation: T.value,
    isTranslate: E.value
  })), b = _(() => `${i.value}_progressbar`), I = _(() => `${i.value}_step_text_${t.value}`), v = _(() => `${b.value} ${I.value}`);
  return {
    ariaLabelAttributes: S,
    ariaLabelStepsAttributes: m,
    idProgressbar: b,
    wizardAriaDescribedby: v
  };
}
function _k(e, {
  subTypeLocal: t = _(() => {
  })
}) {
  const n = d(e, "type"), r = d(e, "isStepsJustified");
  return {
    classWizard: _(() => {
      let i = `a_wizard a_wizard_${n.value}`;
      return r.value && (i += " a_wizard_justified"), t.value && (i += ` a_wizard_${n.value}_${cl.snakeCase(t.value)}`), i;
    })
  };
}
function dk(e, { emit: t }, {
  stepActiveComputed: n = _(() => 0),
  stepActiveLocal: r = B(0),
  stepsVisitedLocal: s = B({})
}) {
  const i = d(e, "isControlOutside"), o = d(e, "steps"), u = ({ stepIndex: T, step: S }) => {
    i.value ? t("goStepBack", {
      step: S,
      targetStepIndex: T,
      currentStepIndex: n.value
    }) : r.value = T;
  }, f = ({ stepIndex: T, step: S }) => {
    i.value ? t("goStepForward", {
      step: S,
      targetStepIndex: T,
      currentStepIndex: n.value
    }) : (r.value = T, s.value[T] = !0);
  };
  return {
    goOneStepBack: () => {
      n.value !== 0 && u({
        stepIndex: n.value - 1
      });
    },
    goOneStepForward: () => {
      n.value >= o.value.length - 1 || f({
        stepIndex: n.value + 1
      });
    },
    onStepClick: ({ stepIndex: T, step: S }) => {
      n.value !== T && (T < n.value ? u({ stepIndex: T, step: S }) : f({ stepIndex: T, step: S }));
    }
  };
}
function ck(e) {
  const t = d(e, "hasFocusJump"), n = d(e, "id"), r = B([]);
  return {
    setFocusToActiveStep: ({ stepActive: i }) => {
      t.value && !window.isScrollDisabled && setTimeout(() => {
        const o = `#${n.value}_${i}_focus`;
        Or({
          selector: o
        });
      });
    },
    wizardTabsRef: r
  };
}
function fk(e, {
  setFocusToActiveStep: t = () => {
  }
}) {
  const n = d(e, "stepActive"), r = d(e, "stepsVisited"), s = d(e, "isControlOutside"), i = B(!1), o = B(0), u = B({
    0: !0
  }), f = _(() => s.value ? n.value : o.value), A = _(() => s.value ? r.value : u.value), E = () => {
    s.value || se(n.value) || (o.value = n.value, u.value = {
      [n.value]: !0
    }), setTimeout(() => {
      i.value = !0;
    });
  };
  return rt(f, (p) => {
    i.value && t({ stepActive: p });
  }), {
    initStepActive: E,
    stepActiveComputed: f,
    stepActiveLocal: o,
    stepsVisitedComputed: A,
    stepsVisitedLocal: u
  };
}
function hk(e) {
  const t = d(e, "isMobile"), {
    isMobileWidth: n
  } = Sn();
  return {
    isMobileLocal: _(() => t.value || n.value)
  };
}
function Ak(e, {
  stepActiveComputed: t = _(() => 0)
}) {
  const n = d(e, "steps"), r = _(() => n.value.length);
  return {
    stepActiveNumber: _(() => t.value + 1),
    stepsCount: r
  };
}
function Ek(e) {
  const t = d(e, "toolbarBottomTeleportId"), n = _(() => !!t.value);
  return {
    toolbarBottomTeleportSelector: _(() => {
      if (n.value)
        return `#${t.value}`;
    }),
    useTeleportToolbarBottom: n
  };
}
function pk(e) {
  const t = d(e, "subType"), n = d(e, "type");
  return {
    subTypeLocal: _(() => {
      if (t.value)
        return t.value;
      if (n.value === "line")
        return "square";
    })
  };
}
const Tk = {
  name: "AWizard",
  props: {
    ariaLabel: {
      type: String,
      required: !1,
      default: "_A_WIZARD_ARIA_LABEL_"
    },
    ariaLabelSteps: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_ARIA_LABEL_"
    },
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_"
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_TITLE_"
    },
    extra: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_"
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_TITLE_"
    },
    hasFocusJump: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => at("a_wizard_")
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isControlOutside: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMobile: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isStepsJustified: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isToolbarBottom: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isToolbarTop: {
      type: Boolean,
      required: !1,
      default: !1
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    stepActive: {
      type: Number,
      required: !1,
      default: void 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: Du
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: Cu
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    steps: {
      type: Array,
      required: !1,
      default: () => []
    },
    stepsProgressbarText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_"
    },
    stepsVisited: {
      type: Object,
      required: !1,
      default: void 0
    },
    subType: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e, t) => {
        const n = {
          arrows: [],
          basic: [],
          line: ["square", "circle", "square-bordered", "circle-bordered"],
          round: []
        };
        if (t) {
          if (t.type in n)
            return se(e) || n[t.type].indexOf(e) !== -1;
        } else
          return ["square", "circle", "square-bordered", "circle-bordered"].indexOf(e) !== -1;
        return !1;
      }
    },
    toolbarBottomTeleportId: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "basic",
      validator: (e) => ["arrows", "line", "round", "basic"].indexOf(e) !== -1
    }
  },
  emits: [
    "goStepBack",
    "goStepForward"
  ],
  setup(e, t) {
    const {
      subTypeLocal: n
    } = pk(e), {
      classWizard: r
    } = _k(e, {
      subTypeLocal: n
    }), {
      setFocusToActiveStep: s,
      wizardTabsRef: i
    } = ck(e), {
      initStepActive: o,
      stepActiveComputed: u,
      stepActiveLocal: f,
      stepsVisitedComputed: A,
      stepsVisitedLocal: E
    } = fk(e, {
      setFocusToActiveStep: s
    }), {
      ariaLabelAttributes: p,
      ariaLabelStepsAttributes: T,
      idProgressbar: S,
      wizardAriaDescribedby: m
    } = uk(e, {
      stepActiveComputed: u
    }), {
      goOneStepBack: b,
      goOneStepForward: I,
      onStepClick: v
    } = dk(e, t, {
      stepActiveComputed: u,
      stepActiveLocal: f,
      stepsVisitedLocal: E
    }), {
      stepActiveNumber: g,
      stepsCount: R
    } = Ak(e, {
      stepActiveComputed: u
    }), {
      toolbarBottomTeleportSelector: D,
      useTeleportToolbarBottom: w
    } = Ek(e), {
      isMobileLocal: F
    } = hk(e);
    return o(), {
      ariaLabelAttributes: p,
      ariaLabelStepsAttributes: T,
      classWizard: r,
      goOneStepBack: b,
      goOneStepForward: I,
      idProgressbar: S,
      isMobileLocal: F,
      onStepClick: v,
      stepActiveComputed: u,
      stepActiveNumber: g,
      stepsCount: R,
      stepsVisitedComputed: A,
      toolbarBottomTeleportSelector: D,
      useTeleportToolbarBottom: w,
      wizardAriaDescribedby: m,
      wizardTabsRef: i
    };
  },
  render() {
    const e = c(ok, {
      backButtonAttributes: this.backButtonAttributes,
      backButtonClass: this.backButtonClass,
      backButtonIconLeft: this.backButtonIconLeft,
      backButtonIconRight: this.backButtonIconRight,
      backButtonText: this.backButtonText,
      backButtonTitle: this.backButtonTitle,
      extra: this.extra,
      forwardButtonAttributes: this.forwardButtonAttributes,
      forwardButtonClass: this.forwardButtonClass,
      forwardButtonIconLeft: this.forwardButtonIconLeft,
      forwardButtonIconRight: this.forwardButtonIconRight,
      forwardButtonText: this.forwardButtonText,
      forwardButtonTitle: this.forwardButtonTitle,
      isBackButtonDisabled: this.isBackButtonDisabled,
      isBackButtonHide: this.isBackButtonHide,
      isBackFirstButtonHide: this.isBackFirstButtonHide,
      isButtonsLoading: this.isButtonsLoading,
      isForwardButtonDisabled: this.isForwardButtonDisabled,
      isForwardButtonHide: this.isForwardButtonHide,
      isForwardLastButtonHide: this.isForwardLastButtonHide,
      stepActiveComputed: this.stepActiveComputed,
      steps: this.steps,
      onGoOneStepBack: this.goOneStepBack,
      onGoOneStepForward: this.goOneStepForward
    }, this.$slots);
    return c("div", {
      tabindex: 0,
      id: this.id,
      role: "application",
      "aria-describedby": this.wizardAriaDescribedby,
      class: [
        this.classWizard,
        {
          a_wizard_mobile: this.isMobileLocal,
          a_wizard_show_only_active_step_mobile: this.showOnlyActiveStepMobile
        }
      ],
      ...this.ariaLabelAttributes
    }, [
      c(pe, {
        id: this.idProgressbar,
        class: "a_sr_only",
        extra: {
          stepActive: this.stepActiveNumber,
          stepsCount: this.stepsCount
        },
        tag: "span",
        text: this.stepsProgressbarText
      }),
      c("ul", {
        class: "a_wizard__steps",
        role: "navigation",
        ...this.ariaLabelStepsAttributes
      }, [
        this.steps.map((t, n) => c(QU, {
          key: this.keyId ? t[this.keyId] : n,
          id: this.id,
          extra: this.extra,
          isBackButtonDisabled: this.isBackButtonDisabled,
          isBackStepButtonDisabled: this.isBackStepButtonDisabled,
          isForwardButtonDisabled: this.isForwardButtonDisabled,
          isForwardStepButtonDisabled: this.isForwardStepButtonDisabled,
          isMobile: this.isMobileLocal,
          isStepNumberVisible: this.isStepNumberVisible,
          showOnlyActiveStepMobile: this.showOnlyActiveStepMobile,
          step: t,
          stepActiveComputed: this.stepActiveComputed,
          stepIconError: this.stepIconError,
          stepIconWarning: this.stepIconWarning,
          stepIndex: n,
          stepsCount: this.stepsCount,
          onOnStepClick: this.onStepClick
        }, this.$slots))
      ]),
      this.isToolbarTop && e,
      c("div", {
        class: "a_wizard__tab_content"
      }, [
        this.steps.map((t, n) => c(rk, {
          key: this.keyId ? t[this.keyId] : n,
          id: this.id,
          extra: this.extra,
          step: t,
          stepActiveComputed: this.stepActiveComputed,
          stepIndex: n,
          stepsVisitedComputed: this.stepsVisitedComputed,
          wizardAriaDescribedby: this.wizardAriaDescribedby
        }, this.$slots))
      ]),
      this.isToolbarBottom && c(da, {
        to: this.toolbarBottomTeleportSelector,
        disabled: !this.useTeleportToolbarBottom
      }, [
        e
      ])
    ]);
  }
};
function Sk({ emit: e }) {
  return {
    goStepBackLocal: (r) => {
      e("goStepBack", r);
    },
    goStepForwardLocal: (r) => {
      e("goStepForward", r);
    }
  };
}
function Lk(e) {
  const t = d(e, "id"), n = _(() => `${t.value}_footer`), r = _(() => `${t.value}_wizard`);
  return {
    footerId: n,
    wizardId: r
  };
}
function mk() {
  const e = B(void 0);
  return {
    initWizard: () => {
      Li().then(
        () => {
          e.value = !0;
        }
      );
    },
    isWizardVisible: e
  };
}
const Ghe = {
  name: "AModalWizard",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isCloseButtonHide
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isFooterSticky
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => Oe.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => Oe.value.propsDefault.modalStyle
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => Oe.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => Oe.value.propsDefault.selectorCloseIds
    },
    showCloseButtonHeader: {
      type: Boolean,
      required: !1,
      default: !0
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => Oe.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    // WIZARD
    ariaLabel: {
      type: String,
      required: !1,
      default: "_A_WIZARD_ARIA_LABEL_"
    },
    ariaLabelSteps: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_ARIA_LABEL_"
    },
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_"
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_TITLE_"
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_"
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_TITLE_"
    },
    hasFocusJump: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => at("a_modal_wizard_")
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isControlOutside: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMobile: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isStepsJustified: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    stepActive: {
      type: Number,
      default: void 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: Du
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: Cu
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    steps: {
      type: Array,
      default: () => []
    },
    stepsProgressbarText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_"
    },
    subType: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e, t) => {
        const n = {
          arrows: [],
          basic: [],
          line: ["square", "circle", "square-bordered", "circle-bordered"],
          round: []
        };
        if (t) {
          if (t.type in n)
            return se(e) || n[t.type].indexOf(e) !== -1;
        } else
          return ["square", "circle", "square-bordered", "circle-bordered"].indexOf(e) !== -1;
        return !1;
      }
    },
    stepsVisited: {
      type: Object,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "basic",
      validator: (e) => ["arrows", "line", "round", "basic"].indexOf(e) !== -1
    }
  },
  emits: [
    "goStepBack",
    "goStepForward"
  ],
  setup(e, t) {
    const {
      goStepBackLocal: n,
      goStepForwardLocal: r
    } = Sk(t), {
      footerId: s,
      wizardId: i
    } = Lk(e), {
      initWizard: o,
      isWizardVisible: u
    } = mk();
    return o(), {
      footerId: s,
      goStepBackLocal: n,
      goStepForwardLocal: r,
      isWizardVisible: u,
      wizardId: i
    };
  },
  render() {
    return c(Vu, {
      alwaysTranslate: this.alwaysTranslate,
      backdropZIndex: this.backdropZIndex,
      close: this.close,
      closeButtonAttributes: this.closeButtonAttributes,
      closeButtonClass: this.closeButtonClass,
      closeButtonId: this.closeButtonId,
      closeButtonText: this.closeButtonText,
      closeButtonTextScreenReaderFooter: this.closeButtonTextScreenReaderFooter,
      closeButtonTextScreenReaderHeader: this.closeButtonTextScreenReaderHeader,
      disabled: this.disabled,
      disabledSave: this.disabledSave,
      extra: this.extra,
      focusStartId: this.focusStartId,
      headerTag: this.headerTag,
      headerText: this.headerText,
      hideHeader: this.hideHeader,
      id: this.id,
      isCloseButtonHide: this.isCloseButtonHide,
      isFooterSticky: this.isFooterSticky,
      isSaveButtonHide: this.isSaveButtonHide,
      loading: this.loading,
      modalClass: this.modalClass,
      modalStyle: this.modalStyle,
      save: this.save,
      saveButtonAttributes: this.saveButtonAttributes,
      saveButtonClass: this.saveButtonClass,
      saveButtonId: this.saveButtonId,
      saveButtonText: this.saveButtonText,
      saveButtonTextScreenReader: this.saveButtonTextScreenReader,
      selectorClose: this.selectorClose,
      selectorCloseIds: this.selectorCloseIds,
      showCloseButtonHeader: this.showCloseButtonHeader,
      size: this.size,
      stop: this.stop,
      useEscape: this.useEscape,
      useFocusOnStart: this.useFocusOnStart,
      zIndex: this.zIndex
    }, {
      ...this.$slots || {},
      modalBody: () => [
        this.isWizardVisible && c(Tk, {
          id: this.wizardId,
          ariaLabel: this.ariaLabel,
          ariaLabelSteps: this.ariaLabelSteps,
          backButtonAttributes: this.backButtonAttributes,
          backButtonClass: this.backButtonClass,
          backButtonIconLeft: this.backButtonIconLeft,
          backButtonIconRight: this.backButtonIconRight,
          backButtonText: this.backButtonText,
          backButtonTitle: this.backButtonTitle,
          forwardButtonAttributes: this.forwardButtonAttributes,
          forwardButtonClass: this.forwardButtonClass,
          forwardButtonIconLeft: this.forwardButtonIconLeft,
          forwardButtonIconRight: this.forwardButtonIconRight,
          forwardButtonText: this.forwardButtonText,
          forwardButtonTitle: this.forwardButtonTitle,
          hasFocusJump: this.hasFocusJump,
          extra: this.extra,
          isBackButtonDisabled: this.isBackButtonDisabled,
          isBackButtonHide: this.isBackButtonHide,
          isBackFirstButtonHide: this.isBackFirstButtonHide,
          isBackStepButtonDisabled: this.isBackStepButtonDisabled,
          isButtonsLoading: this.isButtonsLoading,
          isControlOutside: this.isControlOutside,
          isForwardButtonDisabled: this.isForwardButtonDisabled,
          isForwardButtonHide: this.isForwardButtonHide,
          isForwardLastButtonHide: this.isForwardLastButtonHide,
          isForwardStepButtonDisabled: this.isForwardStepButtonDisabled,
          isMobile: this.isMobile,
          isStepNumberVisible: this.isStepNumberVisible,
          isStepsJustified: this.isStepsJustified,
          keyId: this.keyId,
          isToolbarBottom: !0,
          isToolbarTop: !1,
          showOnlyActiveStepMobile: this.showOnlyActiveStepMobile,
          stepActive: this.stepActive,
          stepIconError: this.stepIconError,
          stepIconErrorText: this.stepIconErrorText,
          stepIconWarning: this.stepIconWarning,
          stepIconWarningText: this.stepIconWarningText,
          steps: this.steps,
          stepsProgressbarText: this.stepsProgressbarText,
          stepsVisited: this.stepsVisited,
          subType: this.subType,
          toolbarBottomTeleportId: this.footerId,
          type: this.type,
          onGoStepBack: this.goStepBackLocal,
          onGoStepForward: this.goStepForwardLocal
        }, this.$slots)
      ],
      modalFooterPrepend: () => [
        this.$slots.modalWizardFooterPrepend && this.$slots.modalWizardFooterPrepend(),
        c("div", {
          id: this.footerId
        }),
        this.$slots.modalWizardFooterAppend && this.$slots.modalWizardFooterAppend()
      ]
    });
  }
}, jhe = {
  name: "ANotification",
  setup() {
    const {
      notifications: e,
      removeNotification: t
    } = $u();
    return {
      notifications: e,
      removeNotification: t
    };
  },
  render() {
    return c(da, {
      to: "body"
    }, [
      c("div", {
        class: "a_notification_parent"
      }, this.notifications.map((e) => c(Gc, {
        key: e.index,
        alwaysTranslate: e.alwaysTranslate,
        isVisible: !0,
        closable: !0,
        type: e.type,
        alertClass: "a_notification",
        onClose: () => this.removeNotification(e.index)
      }, () => [
        c(pe, {
          alwaysTranslate: e.alwaysTranslate,
          html: e.text,
          extra: e.extra
        })
      ])))
    ]);
  }
}, Xo = B("");
function bk(e) {
  const t = d(e, "title"), n = d(e, "extra"), {
    translationChanges: r
  } = Ni(), {
    isPlaceholderTranslate: s,
    getTranslatedText: i
  } = Gs(), o = _(() => {
    if (r.value)
      return s(Xo.value) ? i({
        placeholder: Xo.value
      }) : Xo.value;
  }), u = _(() => {
    if (r.value)
      return s(t.value) ? i({
        placeholder: t.value,
        extra: n.value
      }) : t.value;
  }), f = () => {
    let A = "";
    u.value ? (A = u.value, o.value && (A += ` - ${o.value}`)) : o.value && (A = o.value), document.title = A;
  };
  f(), rt(u, () => {
    f();
  });
}
function Ik(e = "") {
  Xo.value = e;
}
const Khe = {
  name: "APageTabTitle",
  props: {
    title: {
      type: String,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    bk(e);
  },
  render() {
    return "";
  }
};
function vk(e, { emit: t }) {
  const n = d(e, "isLoadingTable"), r = d(e, "limit"), s = _(() => `${r.value}`), i = (f) => {
    n.value || t("update:limit", +f);
  };
  return {
    changeLimit: i,
    changeLimitFromSelect: ({ model: f }) => {
      i(f);
    },
    keyDownChangeLimit: (f, A) => {
      (f.keyCode === Z.enter || f.keyCode === Z.space) && (i(A), f.stopPropagation(), f.preventDefault());
    },
    limitString: s
  };
}
function yk(e) {
  const t = d(e, "offset"), n = d(e, "rowsLength"), r = d(e, "countAllRows"), {
    filterCurrency: s
  } = jn(), i = _(() => s(+t.value + 1, { suffix: "", digits: 0 })), o = _(() => s(+t.value + n.value, { suffix: "", digits: 0 })), u = _(() => s(r.value, { suffix: "", digits: 0 }));
  return {
    extraForTranslate: _(() => ({
      start: i.value,
      current: o.value,
      count: u.value
    }))
  };
}
const Rk = {
  name: "APaginationCountPerPage",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    limit: {
      type: Number,
      required: !0
    },
    limitsPerPage: {
      type: Array,
      required: !1,
      default: () => ["10", "25", "50", "100"]
    },
    mode: {
      type: String,
      required: !1,
      default: "group",
      validator: (e) => ["inline", "group", "select"].indexOf(e) !== -1
    },
    offset: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    showTextCountFromTo: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: [
    "update:limit"
  ],
  setup(e, t) {
    const {
      changeLimit: n,
      changeLimitFromSelect: r,
      keyDownChangeLimit: s,
      limitString: i
    } = vk(e, t), {
      extraForTranslate: o
    } = yk(e);
    return {
      changeLimit: n,
      changeLimitFromSelect: r,
      extraForTranslate: o,
      keyDownChangeLimit: s,
      limitString: i
    };
  },
  render() {
    return c("div", {
      class: "a_pagination__counts"
    }, this.mode === "inline" || this.mode === "group" ? [
      this.showTextCountFromTo ? c(pe, {
        class: "a_pagination__count_from_to",
        html: "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_",
        extra: this.extraForTranslate
      }) : "",
      c(pe, {
        tag: "span",
        class: "a_pagination__count__text",
        html: "_A_COUNT_PER_PAGE_"
      }),
      this.mode === "inline" ? c("div", {
        class: "a_pagination__count"
      }, [
        this.limitsPerPage.map((e) => {
          const t = +e === this.limit;
          return c("div", {
            class: "a_pagination__count__item"
          }, [
            c(Ee, {
              "aria-current": t ? !0 : void 0,
              class: "a_btn a_btn_link a_pagination__count__button",
              disabled: t || this.disabled,
              extra: {
                count: e
              },
              text: e,
              textAriaHidden: !0,
              textScreenReader: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              title: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              type: "button",
              onClick: () => this.changeLimit(e)
            })
          ]);
        })
      ]) : c("ul", {
        class: "a_pagination a_pagination_group"
      }, [
        this.limitsPerPage.map((e) => {
          const t = +e === this.limit;
          return c("li", {
            class: [
              "a_pagination__item",
              {
                active: t
              }
            ]
          }, [
            c(Ee, {
              "aria-current": t ? !0 : void 0,
              class: "a_pagination__item__link",
              disabled: this.disabled,
              extra: {
                count: e
              },
              role: "button",
              tabindex: t || this.disabled ? -1 : 0,
              tag: "a",
              text: e,
              textAriaHidden: !0,
              textScreenReader: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              title: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              type: "button",
              onClick: () => this.changeLimit(e),
              onKeydown: (n) => this.keyDownChangeLimit(n, e)
            })
          ]);
        })
      ])
    ] : [
      this.showTextCountFromTo ? c(pe, {
        class: "a_pagination__count_from_to",
        html: "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_",
        extra: this.extraForTranslate
      }) : "",
      c(Us, {
        label: "_A_COUNT_PER_PAGE_",
        labelClass: "a_sr_only",
        data: this.limitsPerPage,
        isDataSimpleArray: !0,
        isLabelFloat: !1,
        deselectable: !1,
        menuWidthType: "by_content",
        modelValue: this.limitString,
        disabled: this.disabled,
        change: this.changeLimitFromSelect
      })
    ]);
  }
};
function gk(e, {
  currentItem: t = _(() => 1),
  maxItems: n = _(() => 1)
}) {
  const r = d(e, "disabled"), s = _(() => r.value || t.value === 1), i = _(() => r.value || t.value === n.value);
  return {
    disabledButtonFirstPage: s,
    disabledButtonLastPage: i
  };
}
function Ok(e) {
  const t = d(e, "paginationMaxItems"), n = d(e, "offset"), r = d(e, "limit"), s = d(e, "totalRowsCount"), i = _(() => V0(t.value)), o = _(() => (n.value / r.value >> 0) + 1), u = _(() => HD(s.value / r.value)), f = _(() => Math.floor(t.value / 2)), A = _(() => t.value * 2 - 1), E = ({ currentItemIndex: T, paginationLength: S }) => {
    let m, b;
    const I = f.value, v = A.value;
    if (T <= I ? (m = 0, b = t.value) : T >= v - (I + 1) ? (m = v - t.value, b = v) : i.value ? (m = T - I + 1, b = T + I + 1) : (m = T - I, b = T + I + 1), b > S) {
      const g = b - S;
      b = S + 1, m = m - g, m < 0 && (m = 0);
    }
    return {
      indexStart: m,
      indexEnd: b
    };
  }, p = _(() => {
    const T = [];
    let S = -1;
    for (let I = t.value - 1; I > -t.value; I--) {
      const v = o.value - I;
      v > 0 && v <= u.value && T.push(v), I === 0 && (S = T.length - 1);
    }
    const {
      indexStart: m,
      indexEnd: b
    } = E({
      currentItemIndex: S,
      paginationLength: T.length
    });
    return T.slice(m, b);
  });
  return {
    currentItem: o,
    maxItems: u,
    paginationItems: p
  };
}
function Ck(e, { emit: t }, {
  currentItem: n = _(() => 1),
  disabledButtonFirstPage: r = _(() => !1),
  disabledButtonLastPage: s = _(() => !1),
  maxItems: i = _(() => 1)
}) {
  const o = d(e, "disabled"), u = d(e, "limit"), f = d(e, "offset"), A = (R) => {
    if (o.value || R === n.value)
      return;
    const D = (R - 1) * u.value;
    t("update:offset", D);
  }, E = () => {
    r.value || t("update:offset", 0);
  }, p = () => {
    r.value || t("update:offset", f.value - u.value);
  }, T = () => {
    s.value || t("update:offset", (i.value - 1) * u.value);
  }, S = () => {
    s.value || t("update:offset", f.value + u.value);
  };
  return {
    keyDownUpdateOffset: (R, D) => {
      (R.keyCode === Z.enter || R.keyCode === Z.space) && (A(D), R.stopPropagation(), R.preventDefault());
    },
    keyDownUpdateOffsetFirst: (R) => {
      (R.keyCode === Z.enter || R.keyCode === Z.space) && (E(), R.stopPropagation(), R.preventDefault());
    },
    keyDownUpdateOffsetLast: (R) => {
      (R.keyCode === Z.enter || R.keyCode === Z.space) && (T(), R.stopPropagation(), R.preventDefault());
    },
    keyDownUpdateOffsetNext: (R) => {
      (R.keyCode === Z.enter || R.keyCode === Z.space) && (S(), R.stopPropagation(), R.preventDefault());
    },
    keyDownUpdateOffsetPrevious: (R) => {
      (R.keyCode === Z.enter || R.keyCode === Z.space) && (p(), R.stopPropagation(), R.preventDefault());
    },
    updateOffset: A,
    updateOffsetFirst: E,
    updateOffsetLast: T,
    updateOffsetNext: S,
    updateOffsetPrevious: p
  };
}
const Dk = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
  <path fill-rule="evenodd" d="M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
</svg>`, Nk = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M3.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L9.293 8 3.646 2.354a.5.5 0 0 1 0-.708"/>
  <path fill-rule="evenodd" d="M7.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L13.293 8 7.646 2.354a.5.5 0 0 1 0-.708"/>
</svg>`, Bk = {
  name: "APaginationPages",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    limit: {
      type: Number,
      required: !0
    },
    mode: {
      type: String,
      required: !1,
      default: "normal",
      validator: (e) => ["normal", "short", "loadMore"].indexOf(e) !== -1
    },
    offset: {
      type: Number,
      required: !0
    },
    paginationMaxItems: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => pa(e) && e > 0
    },
    totalRowsCount: {
      type: Number,
      required: !0
    }
  },
  emits: [
    "update:offset"
  ],
  setup(e, t) {
    const {
      currentItem: n,
      maxItems: r,
      paginationItems: s
    } = Ok(e), {
      disabledButtonFirstPage: i,
      disabledButtonLastPage: o
    } = gk(e, {
      currentItem: n,
      maxItems: r
    }), {
      keyDownUpdateOffset: u,
      keyDownUpdateOffsetFirst: f,
      keyDownUpdateOffsetLast: A,
      keyDownUpdateOffsetNext: E,
      keyDownUpdateOffsetPrevious: p,
      updateOffset: T,
      updateOffsetFirst: S,
      updateOffsetLast: m,
      updateOffsetNext: b,
      updateOffsetPrevious: I
    } = Ck(e, t, {
      currentItem: n,
      disabledButtonFirstPage: i,
      disabledButtonLastPage: o,
      maxItems: r
    });
    return {
      currentItem: n,
      disabledButtonFirstPage: i,
      disabledButtonLastPage: o,
      keyDownUpdateOffset: u,
      keyDownUpdateOffsetFirst: f,
      keyDownUpdateOffsetLast: A,
      keyDownUpdateOffsetNext: E,
      keyDownUpdateOffsetPrevious: p,
      maxItems: r,
      paginationItems: s,
      updateOffset: T,
      updateOffsetFirst: S,
      updateOffsetLast: m,
      updateOffsetNext: b,
      updateOffsetPrevious: I
    };
  },
  render() {
    return c(pe, {
      tag: "nav",
      class: "a_pagination__nav",
      "aria-label": "_A_PAGINATION_NAVIGATION_"
    }, {
      default: () => this.mode === "loadMore" ? c(Ee, {
        class: "a_btn a_btn_primary",
        text: "Load more",
        type: "button"
      }) : [
        c("ul", {
          class: "a_pagination"
        }, [
          this.mode !== "short" ? c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonFirstPage }]
          }, [
            c(Ee, {
              class: "a_pagination__item__link",
              iconLeft: Dk,
              role: "button",
              tabindex: this.disabledButtonFirstPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_FIRST_PAGE_",
              title: "_A_PAGINATION_FIRST_PAGE_",
              type: "button",
              onClick: this.updateOffsetFirst,
              onKeydown: this.keyDownUpdateOffsetFirst
            })
          ]) : "",
          c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonFirstPage }]
          }, [
            c(Ee, {
              class: "a_pagination__item__link",
              iconLeft: oS,
              role: "button",
              tabindex: this.disabledButtonFirstPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_PREVIOUS_PAGE_",
              title: "_A_PAGINATION_PREVIOUS_PAGE_",
              type: "button",
              onClick: this.updateOffsetPrevious,
              onKeydown: this.keyDownUpdateOffsetPrevious
            })
          ]),
          this.mode === "short" ? c("li", {
            class: "a_pagination__item"
          }, [
            c(pe, {
              class: "a_pagination__item__link disabled",
              html: "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_",
              extra: {
                currentPage: this.currentItem,
                allPages: this.maxItems
              }
            })
          ]) : this.paginationItems.map((e) => {
            const t = e === this.currentItem;
            return c("li", {
              class: ["a_pagination__item", {
                active: t,
                disabled: this.disabled
              }]
            }, [
              c(Ee, {
                "aria-current": t ? !0 : void 0,
                class: "a_pagination__item__link",
                extra: {
                  page: e
                },
                role: "button",
                tabindex: t || this.disabled ? -1 : 0,
                tag: "a",
                text: e,
                textAriaHidden: !0,
                textScreenReader: "_A_PAGINATION_TO_PAGE_{{page}}_",
                title: "_A_PAGINATION_TO_PAGE_{{page}}_",
                type: "button",
                onClick: () => this.updateOffset(e),
                onKeydown: (n) => this.keyDownUpdateOffset(n, e)
              })
            ]);
          }),
          c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonLastPage }]
          }, [
            c(Ee, {
              class: "a_pagination__item__link",
              iconLeft: ff,
              role: "button",
              tabindex: this.disabledButtonLastPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_NEXT_PAGE_",
              title: "_A_PAGINATION_NEXT_PAGE_",
              type: "button",
              onClick: this.updateOffsetNext,
              onKeydown: this.keyDownUpdateOffsetNext
            })
          ]),
          this.mode !== "short" ? c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonLastPage }]
          }, [
            c(Ee, {
              class: "a_pagination__item__link",
              iconLeft: Nk,
              role: "button",
              tabindex: this.disabledButtonLastPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_LAST_PAGE_",
              title: "_A_PAGINATION_LAST_PAGE_",
              type: "button",
              onClick: this.updateOffsetLast,
              onKeydown: this.keyDownUpdateOffsetLast
            })
          ]) : ""
        ])
      ]
    });
  }
};
function wk(e, {
  isMobile: t = B(!1),
  updateLimit: n = () => {
  },
  updateOffset: r = () => {
  }
}) {
  const s = d(e, "modes"), i = d(e, "countAllRows"), o = d(e, "disabled"), u = d(e, "limitsPerPage"), f = d(e, "limit"), A = d(e, "offset"), E = d(e, "rowsLength"), p = d(e, "totalRowsCount"), T = d(e, "maxPages"), S = _(() => t.value ? s.value.mobile || {
    perPage: {
      mode: "select",
      position: 0,
      showTextCountFromTo: !1
    },
    pagination: {
      mode: "short",
      position: 1
    }
  } : s.value.desktop || {
    perPage: {
      mode: "inline",
      position: 0,
      showTextCountFromTo: !0
    },
    pagination: {
      mode: "normal",
      position: 1
    }
  }), m = _(() => {
    const I = [];
    return z(S.value, (v, g) => {
      I.push({
        ...v,
        component: g
      });
    }), Yd(I, "position");
  });
  return {
    components: _(() => {
      const I = [];
      return z(m.value, (v) => {
        v.component === "perPage" ? I.push(c(Rk, {
          countAllRows: i.value,
          disabled: o.value,
          limitsPerPage: u.value,
          limit: f.value,
          offset: A.value,
          rowsLength: E.value,
          mode: v.mode,
          showTextCountFromTo: v.showTextCountFromTo,
          "onUpdate:limit": n
        })) : v.component === "pagination" && I.push(c(Bk, {
          limit: f.value,
          disabled: o.value,
          totalRowsCount: p.value,
          offset: A.value,
          paginationMaxItems: T.value,
          mode: v.mode,
          "onUpdate:offset": r
        }));
      }), I;
    })
  };
}
function Pk(e, { emit: t }) {
  return {
    updateLimit: (s) => {
      t("update:limit", s);
    },
    updateOffset: (s) => {
      t("update:offset", s);
    }
  };
}
const xk = {
  name: "APagination",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hasRows: {
      type: Boolean,
      required: !0
    },
    limit: {
      type: Number,
      required: !0
    },
    limitsPerPage: {
      type: Array,
      required: !1,
      default: () => ["10", "25", "50", "100"]
    },
    maxPages: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => pa(e) && e > 0
    },
    offset: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    totalRowsCount: {
      type: Number,
      required: !0
    },
    modes: {
      type: Object,
      required: !1,
      default: () => ({
        /*
         * perPage: inline / group / select
         * pagination: normal / short / loadMore
         */
        desktop: {
          perPage: {
            mode: "group",
            position: 0,
            showTextCountFromTo: !0
          },
          pagination: {
            mode: "normal",
            position: 1
          }
        },
        mobile: {
          perPage: {
            mode: "select",
            position: 0,
            showTextCountFromTo: !1
          },
          pagination: {
            mode: "short",
            position: 1
          }
        }
      })
    }
  },
  emits: [
    "update:limit",
    "update:offset"
  ],
  setup(e, t) {
    const {
      isMobileWidth: n
    } = Sn(), {
      updateLimit: r,
      updateOffset: s
    } = Pk(e, t), {
      components: i
    } = wk(e, {
      isMobile: n,
      updateLimit: r,
      updateOffset: s
    });
    return {
      components: i,
      updateLimit: r,
      updateOffset: s
    };
  },
  render() {
    return this.hasRows ? c("div", {
      class: "a_pagination__parent"
    }, this.components) : null;
  }
};
function Mk(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = d(e, "classProgressBar");
  return {
    classProgressBarLocal: _(() => Ne(n.value) ? n.value(t.value) : n.value)
  };
}
function Fk(e) {
  const t = d(e, "duration");
  return {
    durationLocal: _(() => {
      if (!se(t.value))
        return `${t.value}s`;
    })
  };
}
function qS(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = d(e, "valueTextInteger"), {
    filterCurrency: r
  } = jn();
  return {
    valuePercent: _(() => n.value ? r(t.value, {
      suffix: "%",
      digits: 0
    }) : r(t.value, {
      suffix: "%",
      digits: 2
    }))
  };
}
function $S(e) {
  const t = d(e, "min"), n = d(e, "max"), r = d(e, "value");
  return {
    widthPercent: _(() => (r.value - t.value) / (n.value - t.value) * 100)
  };
}
const zhe = {
  name: "AProgress",
  props: {
    classProgressBar: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    duration: {
      type: Number,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1,
      default: !1
    },
    max: {
      type: Number,
      required: !1,
      default: 100
    },
    min: {
      type: Number,
      required: !1,
      default: 0
    },
    reverse: {
      type: Boolean,
      required: !1,
      default: !1
    },
    showValue: {
      type: Boolean,
      required: !1,
      default: !0
    },
    striped: {
      type: Boolean,
      required: !1,
      default: !1
    },
    stripedFlow: {
      type: Boolean,
      required: !1,
      default: !1
    },
    value: {
      type: Number,
      required: !1,
      default: 0
    },
    valueTextInteger: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  setup(e) {
    const {
      widthPercent: t
    } = $S(e), {
      valuePercent: n
    } = qS(e, {
      widthPercent: t
    }), {
      classProgressBarLocal: r
    } = Mk(e, {
      widthPercent: t
    }), {
      durationLocal: s
    } = Fk(e);
    return {
      classProgressBarLocal: r,
      durationLocal: s,
      valuePercent: n,
      widthPercent: t
    };
  },
  render() {
    let e;
    return this.$slots.progressText ? e = c("span", {
      class: "a_progress__text"
    }, [
      this.$slots.progressText && this.$slots.progressText({
        valuePercent: this.valuePercent
      })
    ]) : this.showValue && (e = c("span", {
      class: "a_progress__text"
    }, this.valuePercent)), c("div", {
      class: ["a_progress", {
        a_progress_reverse: this.reverse
      }]
    }, [
      c("div", {
        class: [
          "a_progress__bar",
          {
            a_progress__bar_striped: this.striped,
            a_progress__bar_striped_flow: this.stripedFlow,
            a_progress__bar_indeterminate: this.indeterminate
          },
          this.classProgressBarLocal
        ],
        role: "progressbar",
        "aria-valuenow": this.value,
        "aria-valuemin": this.min,
        "aria-valuemax": this.max,
        style: {
          width: `${this.widthPercent}%`,
          "animation-duration": this.durationLocal
        }
      }, [
        e
      ])
    ]);
  }
};
function qk(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = d(e, "strokeWidth"), r = 50, s = 2 * Math.PI * r, i = _(() => t.value * s / 100), o = _(() => `${i.value}px ${s - i.value}px`), u = _(() => `stroke-dasharray: ${o.value};`), f = _(() => r + n.value / 2);
  return {
    circleStyles: u,
    cxCy: f,
    radius: r
  };
}
function $k(e) {
  const t = d(e, "width");
  return {
    sizesLocal: _(() => On(t.value) ? `height: ${t.value}px; width: ${t.value}px;` : `height: ${t.value}; width: ${t.value};`)
  };
}
function Uk(e) {
  const t = d(e, "rotate"), n = d(e, "strokeWidth"), r = _(() => {
    const i = 100 + n.value;
    return `0 0 ${i} ${i}`;
  });
  return {
    svgTransform: _(() => `transform: rotate(${t.value - 90}deg);`),
    svgViewBox: r
  };
}
const Yhe = {
  name: "AProgressCircle",
  props: {
    duration: {
      type: Number,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1,
      default: !1
    },
    max: {
      type: Number,
      required: !1,
      default: 100
    },
    min: {
      type: Number,
      required: !1,
      default: 0
    },
    rotate: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0 && e <= 360
    },
    showValue: {
      type: Boolean,
      required: !1,
      default: !0
    },
    strokeWidth: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => e > 0
    },
    value: {
      type: Number,
      required: !1,
      default: 0
    },
    valueTextClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    valueTextInteger: {
      type: Boolean,
      required: !1,
      default: !1
    },
    width: {
      type: [Number, String],
      required: !1,
      default: 125
    }
  },
  setup(e) {
    const {
      widthPercent: t
    } = $S(e), {
      valuePercent: n
    } = qS(e, {
      widthPercent: t
    }), {
      circleStyles: r,
      cxCy: s,
      radius: i
    } = qk(e, {
      widthPercent: t
    }), {
      svgTransform: o,
      svgViewBox: u
    } = Uk(e), {
      sizesLocal: f
    } = $k(e);
    return {
      circleStyles: r,
      cxCy: s,
      radius: i,
      sizesLocal: f,
      svgTransform: o,
      svgViewBox: u,
      valuePercent: n,
      widthPercent: t
    };
  },
  render() {
    let e;
    return this.$slots.progressText ? e = c("span", {
      class: ["a_progress_circle__text", this.valueTextClass]
    }, [
      this.$slots.progressText && this.$slots.progressText({
        valuePercent: this.valuePercent
      })
    ]) : this.showValue && (e = c("span", {
      class: ["a_progress_circle__text", this.valueTextClass]
    }, this.valuePercent)), c("div", {
      class: "a_progress_circle",
      style: this.sizesLocal,
      role: "progressbar",
      "aria-valuenow": this.value,
      "aria-valuemin": this.min,
      "aria-valuemax": this.max
    }, [
      c("svg", {
        viewBox: this.svgViewBox,
        style: this.svgTransform
      }, [
        c("circle", {
          class: "a_progress_circle__base",
          cx: this.cxCy,
          cy: this.cxCy,
          r: this.radius,
          "stroke-width": this.strokeWidth
        }),
        c("circle", {
          class: ["a_progress_circle__scale", {
            a_progress_circle__scale_indeterminate: this.indeterminate
          }],
          cx: this.cxCy,
          cy: this.cxCy,
          r: this.radius,
          "stroke-width": this.strokeWidth,
          style: this.circleStyles
        })
      ]),
      e
    ]);
  }
}, bf = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16">
  <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
</svg>`, op = {
  name: "ADecimalIcon",
  components: {
    AIcon: _t
  },
  props: {
    value: {
      type: Number,
      default: 50
    },
    color: {
      type: String,
      default: "yellow"
    },
    icon: {
      type: String,
      default: bf
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    }
  },
  render() {
    const e = {
      class: "a_decimal_rate_icon a_rate_icon_decimal",
      style: {
        position: "absolute",
        overflow: "hidden",
        width: `${this.value}%`,
        color: this.color
      }
    };
    return c("i", e, [
      c(_t, {
        icon: this.icon,
        class: `a_decimal_rate_icon a_rate_icon_${this.size}`
      })
    ]);
  }
}, US = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star" viewBox="0 0 16 16">
  <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.56.56 0 0 0-.163-.505L1.71 6.745l4.052-.576a.53.53 0 0 0 .393-.288L8 2.223l1.847 3.658a.53.53 0 0 0 .393.288l4.052.575-2.906 2.77a.56.56 0 0 0-.163.506l.694 3.957-3.686-1.894a.5.5 0 0 0-.461 0z"/>
</svg>`, up = {
  name: "ARateIcon",
  components: {
    AIcon: _t,
    ADecimalIcon: op
  },
  props: {
    value: {
      type: Number,
      default: 50
    },
    color: {
      type: String,
      default: "yellow"
    },
    icon: {
      type: String,
      default: US
    },
    iconFill: {
      type: String,
      default: bf
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    },
    isHovered: {
      type: Boolean,
      default: !1
    }
  },
  emits: [
    "mouseenter",
    "mouseleave",
    "click",
    "dblclick",
    "mousemove"
  ],
  setup(e, { emit: t }) {
    return {
      handleMouseEnter(n) {
        t("mouseenter", n);
      },
      handleMouseLeave(n) {
        t("mouseleave", n);
      },
      handleClick(n) {
        t("click", n);
      },
      handleDblClick(n) {
        t("dblclick", n);
      },
      handleMouseMove(n) {
        t("mousemove", n);
      }
    };
  },
  render() {
    return c(
      "span",
      {
        class: `el-rate__item a_rate_icon_${this.size}`,
        style: {
          position: "relative",
          display: "inline-flex",
          alignItems: "center",
          justifyContent: "center"
        },
        onClick: this.handleClick,
        onDblclick: this.handleDblClick,
        onMouseenter: this.handleMouseEnter,
        onMouseleave: this.handleMouseLeave,
        onMousemove: this.handleMouseMove
      },
      [
        c("div", { class: "a_rate_icon_align" }, [
          c(_t, {
            icon: this.icon,
            class: "a_decimal_rate_icon a_rate_decimal",
            color: this.color
          }),
          c(op, {
            icon: this.iconFill,
            value: this.value,
            color: this.color,
            size: this.size
          })
        ])
      ]
    );
  }
}, Xhe = {
  name: "ARate",
  components: {
    AIcon: _t,
    ATranslation: pe,
    ARateIcon: up
  },
  props: {
    text: {
      type: String,
      default: null
    },
    extra: {
      type: Object,
      required: !1
    },
    rating: {
      type: Number,
      default: 5
    },
    icon: {
      type: String,
      default: US
    },
    iconFill: {
      type: String,
      default: bf
    },
    readonly: {
      type: Boolean,
      default: !1
    },
    showScore: {
      type: Boolean,
      default: !1
    },
    modelValue: {
      type: Number,
      default: 0
    },
    color: {
      type: String,
      default: "yellow"
    },
    hoveredColor: {
      type: String,
      default: "orange"
    },
    halfIcon: {
      type: Boolean,
      default: !1
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const {
      text: n,
      rating: r,
      modelValue: s,
      showScore: i,
      readonly: o,
      icon: u,
      extra: f,
      color: A,
      hoveredColor: E,
      halfIcon: p,
      size: T
    } = Ec(e), S = B(void 0), m = B(void 0), b = B(-1), I = () => {
      S.value = s.value, m.value = s.value;
    }, v = _(() => e.iconFill ? e.iconFill : `${e.icon}Fill`), g = () => {
      o.value || (S.value = 0, t("update:modelValue", S.value));
    }, R = (O, q) => {
      if (o.value)
        return;
      b.value = q;
      let U = q + 1;
      if (p.value) {
        const G = O.target.getBoundingClientRect();
        U = O.clientX - G.left < G.width / 2 ? q + 0.5 : q + 1;
      }
      m.value = U;
    }, D = () => {
      o.value || (b.value = -1);
    }, w = _(() => Array(r.value).fill(null).map((O, q) => q <= b.value ? E.value : q < S.value ? A.value : null)), F = (O, q) => {
      if (o.value)
        return;
      let U = q + 1;
      if (p.value) {
        const G = O.target.getBoundingClientRect();
        U = O.clientX - G.left < G.width / 2 ? q + 0.5 : q + 1;
      }
      t("update:modelValue", U), S.value = U;
    }, P = _(() => {
      const O = b.value >= 0 ? m.value : S.value, q = Math.floor(O), U = O % 1, G = Array(r.value).fill(0);
      for (let te = 0; te < q; te++)
        G[te] = 100;
      return U !== 0 && q < r.value && (G[q] = U * 100), G;
    }), M = (O, q) => {
      if (o.value)
        return;
      let U = q + 1;
      if (p.value) {
        const G = O.target.getBoundingClientRect();
        U = O.clientX - G.left < G.width / 2 ? q + 0.5 : q + 1;
      }
      m.value !== U && (m.value = U, b.value = q);
    };
    return I(), {
      rating: r,
      showScore: i,
      readonly: o,
      icon: u,
      iconFill: v,
      text: n,
      extra: f,
      color: A,
      size: T,
      onMouseEnterIcon: R,
      onMouseLeaveIcon: D,
      onClickIcon: F,
      onDoubleClickIcon: g,
      onMouseMoveIcon: M,
      modelValue: _(() => S.value),
      iconValues: P,
      computedColor: w
    };
  },
  render() {
    return c("div", { class: "a_rate_container" }, [
      ...Array.from({ length: this.rating }, (e, t) => c(up, {
        class: "a_rate_icon",
        icon: this.icon,
        iconFill: this.iconFill,
        value: this.iconValues[t],
        onClick: (n) => this.onClickIcon(n, t),
        onDblclick: this.onDoubleClickIcon,
        onMouseenter: (n) => this.onMouseEnterIcon(n, t),
        onMouseleave: this.onMouseLeaveIcon,
        onMousemove: (n) => this.onMouseMoveIcon(n, t),
        color: this.computedColor[t],
        size: this.size,
        key: t
      })),
      this.showScore && c("span", { class: "a_rate_score" }, this.modelValue.toString()),
      c(pe, {
        class: "a_rate_label",
        text: this.text,
        extra: this.extra
      })
    ]);
  }
}, kk = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
  <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0"/>
</svg>`, Hk = {
  name: "AResizer",
  props: {
    direction: {
      type: String,
      required: !0,
      validator: (e) => ["x", "y"].indexOf(e) !== -1
    },
    disabled: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "mousedown",
    "mousemove",
    "mouseoutDocument",
    "mouseup"
  ],
  data() {
    return {
      clientHeight: 0,
      clientWidth: 0
    };
  },
  computed: {
    isDirectionX() {
      return this.direction === "x";
    },
    isDirectionY() {
      return this.direction === "y";
    },
    directionClass() {
      return `a_resizer_${this.direction}`;
    },
    directionIcon() {
      if (this.direction === "x")
        return kk;
      if (this.direction === "y")
        return Ul;
    },
    cursor() {
      if (this.direction === "x")
        return "w-resize";
      if (this.direction === "y")
        return "s-resize";
    },
    bodyClass() {
      return `a_resizer_${this.direction}_active__body`;
    },
    attributesResizer() {
      const e = {
        class: ["a_resizer", this.directionClass, {
          a_resizer_disabled: this.disabled
        }],
        ariaHidden: !0
      };
      return this.disabled || (e.onMousedown = this.mousedown), e;
    }
  },
  unmounted() {
    this.removeMouseEventListeners(), this.removeClassFromBody();
  },
  methods: {
    mousedown(e) {
      this.addMouseEventListeners(), this.clientHeight = document.documentElement.clientHeight, this.clientWidth = document.documentElement.clientWidth, this.$emit("mousedown", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.addClassToBody();
    },
    mousemove(e) {
      this.$emit("mousemove", {
        $event: e,
        clientX: e.clientX,
        clientY: e.clientY,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      });
    },
    mouseup(e) {
      this.removeMouseEventListeners(), this.$emit("mouseup", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.removeClassFromBody();
    },
    mouseoutDocument(e) {
      this.removeMouseEventListeners(), this.$emit("mouseoutDocument", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.removeClassFromBody();
    },
    addMouseEventListeners() {
      document.addEventListener("mousemove", this.mousemove), document.addEventListener("mouseup", this.mouseup), document.addEventListener("mouseleave", this.mouseoutDocument);
    },
    removeMouseEventListeners() {
      document.removeEventListener("mousemove", this.mousemove), document.removeEventListener("mouseup", this.mouseup), document.removeEventListener("mouseleave", this.mouseoutDocument);
    },
    addClassToBody() {
      document.body.classList.add(this.bodyClass);
    },
    removeClassFromBody() {
      document.body.classList.remove(this.bodyClass);
    }
  },
  render() {
    return c("div", this.attributesResizer, [
      c("div", {
        class: "a_resizer__line"
      }),
      c(_t, {
        class: "a_resizer__icon",
        icon: this.directionIcon
      })
    ]);
  }
}, Vk = {
  name: "ACircle",
  props: {
    cx: {
      type: [Number, String],
      required: !0
    },
    cy: {
      type: [Number, String],
      required: !0
    },
    r: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("circle", {
      cx: this.cx,
      cy: this.cy,
      r: this.r,
      fill: this.fill,
      stroke: this.stroke,
      "stroke-width": this.strokeWidth
    });
  }
}, hl = {
  name: "ARect",
  props: {
    width: {
      type: [Number, String],
      required: !0
    },
    height: {
      type: [Number, String],
      required: !0
    },
    x: {
      type: [Number, String],
      required: !0
    },
    y: {
      type: [Number, String],
      required: !0
    },
    rx: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    ry: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("rect", {
      width: this.width,
      height: this.height,
      x: this.x,
      y: this.y,
      rx: this.rx,
      ry: this.ry,
      fill: this.fill,
      stroke: this.stroke,
      strokeWidth: this.strokeWidth
    });
  }
};
function Wk(e) {
  const t = d(e, "yStandTop"), n = d(e, "pipesWidth"), r = d(e, "centerX"), s = d(e, "balanceWidth"), i = d(e, "balanceCircleRadius"), o = d(e, "balanceTopHeight"), u = d(e, "degree"), f = _(() => t.value - i.value - n.value / 2), A = _(() => s.value / 2), E = _(() => r.value - A.value - i.value), p = _(() => r.value + i.value), T = _(() => t.value - i.value), S = _(() => r.value - n.value / 2), m = _(() => T.value - i.value - o.value);
  return {
    transformRotate: _(() => `rotate(${u.value}, ${r.value}, ${T.value})`),
    widthBalancePipe: A,
    xBalanceLeft: E,
    xBalanceRight: p,
    xBalanceTopHeight: S,
    yBalance: f,
    yBalanceCenter: T,
    yBalanceTopHeight: m
  };
}
const Gk = {
  name: "AScaleBalance",
  props: {
    degree: {
      type: Number,
      required: !0
    },
    pipesWidth: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    balanceWidth: {
      type: Number,
      required: !0
    },
    balanceCircleRadius: {
      type: Number,
      required: !0
    },
    balanceTopHeight: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      transformRotate: t,
      widthBalancePipe: n,
      xBalanceLeft: r,
      xBalanceRight: s,
      xBalanceTopHeight: i,
      yBalance: o,
      yBalanceCenter: u,
      yBalanceTopHeight: f
    } = Wk(e);
    return {
      transformRotate: t,
      widthBalancePipe: n,
      xBalanceLeft: r,
      xBalanceRight: s,
      xBalanceTopHeight: i,
      yBalance: o,
      yBalanceCenter: u,
      yBalanceTopHeight: f
    };
  },
  render() {
    return c("g", {
      transform: this.transformRotate
    }, [
      c(hl, {
        width: this.pipesWidth,
        height: this.balanceTopHeight,
        x: this.xBalanceTopHeight,
        y: this.yBalanceTopHeight,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(hl, {
        width: this.widthBalancePipe,
        height: this.pipesWidth,
        x: this.xBalanceLeft,
        y: this.yBalance,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(hl, {
        width: this.widthBalancePipe,
        height: this.pipesWidth,
        x: this.xBalanceRight,
        y: this.yBalance,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(Vk, {
        cx: this.centerX,
        cy: this.yBalanceCenter,
        r: this.balanceCircleRadius,
        fill: "none",
        stroke: "currentColor",
        strokeWidth: this.pipesWidth
      })
    ]);
  }
};
function jk(e) {
  const t = d(e, "direction"), n = d(e, "degree"), r = d(e, "balanceWidth"), s = d(e, "balanceCircleRadius"), i = d(e, "yStandTop"), o = d(e, "bowlThreadHeight"), u = d(e, "pipesWidth"), f = d(e, "centerX"), A = d(e, "bowlWidth"), E = _(() => r.value / 2 + s.value), p = _(() => i.value + o.value - u.value / 2 - s.value + 2), T = _(() => t.value === "right" ? n.value : n.value + 180), S = _(() => r.value / 2 + A.value / 2 + s.value - 2), m = _(() => r.value / 2 - A.value / 2 + s.value - 1), b = _(() => t.value === "left" ? f.value - S.value + E.value : f.value + m.value - E.value), I = _(() => (t.value === "right", E.value * Math.cos(T.value * Math.PI / 180) + b.value)), v = _(() => E.value * Math.sin(T.value * Math.PI / 180) + p.value);
  return {
    x: I,
    y: v
  };
}
const _p = {
  name: "AScaleBowl",
  props: {
    direction: {
      type: String,
      required: !0,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    },
    degree: {
      type: Number,
      required: !0
    },
    balanceWidth: {
      type: Number,
      required: !0
    },
    balanceCircleRadius: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    bowlThreadHeight: {
      type: Number,
      required: !0
    },
    pipesWidth: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    },
    bowlWidth: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      x: t,
      y: n
    } = jk(e);
    return {
      x: t,
      y: n
    };
  },
  render() {
    return c("use", {
      x: this.x,
      y: this.y,
      "xlink:href": "#scale_bowl"
    });
  }
}, Kk = {
  name: "APath",
  props: {
    d: {
      type: String,
      required: !0,
      default: ""
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    fillRule: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["evenodd", "inherit", "initial", "nonzero", "revert", "unset"].indexOf(e) !== -1
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("path", {
      d: this.d,
      fill: this.fill,
      fillRule: this.fillRule,
      stroke: this.stroke,
      strokeWidth: this.strokeWidth
    });
  }
};
function zk(e) {
  const t = d(e, "points"), n = (s) => Fn(s, (o) => {
    let u = "";
    return ot(o) ? u = o : Se(o) && (u = o.join(",")), u;
  }).join(" ");
  return {
    pointsLocal: _(() => ot(t.value) ? t.value : Se(t.value) ? n(t.value) : "")
  };
}
const Yk = {
  name: "APolyline",
  props: {
    points: {
      type: [Array, String],
      required: !0,
      default: []
    },
    fill: {
      type: String,
      required: !1,
      default: "none"
    },
    stroke: {
      type: String,
      required: !1,
      default: "currentColor"
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      pointsLocal: t
    } = zk(e);
    return {
      pointsLocal: t
    };
  },
  render() {
    return c("polyline", {
      points: this.pointsLocal,
      fill: this.fill,
      stroke: this.stroke,
      "stroke-width": this.strokeWidth
    });
  }
};
function Xk(e) {
  const t = d(e, "bowlThreadHeight"), n = d(e, "bowlThreadWidth"), r = d(e, "bowlThreadPaddingX"), s = d(e, "bowlWidth"), i = d(e, "bowlRadius"), o = _(() => {
    const f = r.value, A = r.value + n.value / 2, E = r.value + n.value, p = 1, T = p - t.value;
    return `${f},${p} ${A},${T} ${E},${p}`;
  });
  return {
    bowlD: _(() => `m0,0 a${i.value},${i.value} 0 1,0 ${s.value},0 z`),
    bowlThreadPoints: o
  };
}
const Zk = {
  name: "AScaleBowlDefs",
  props: {
    bowlThreadStrokeWidth: {
      type: Number,
      required: !0
    },
    bowlThreadWidth: {
      type: Number,
      required: !0
    },
    bowlThreadHeight: {
      type: Number,
      required: !0
    },
    bowlThreadPaddingX: {
      type: Number,
      required: !0
    },
    bowlWidth: {
      type: Number,
      required: !0
    },
    bowlRadius: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      bowlD: t,
      bowlThreadPoints: n
    } = Xk(e);
    return {
      bowlD: t,
      bowlThreadPoints: n
    };
  },
  render() {
    return c("defs", {}, [
      c("g", {
        id: "scale_bowl"
      }, [
        c(Yk, {
          points: this.bowlThreadPoints,
          strokeWidth: this.bowlThreadStrokeWidth
        }),
        c(Kk, {
          d: this.bowlD,
          fill: "currentColor"
        })
      ])
    ]);
  }
};
function Jk(e) {
  const t = d(e, "centerX"), n = d(e, "standWidth"), r = d(e, "pipesWidth"), s = _(() => t.value - r.value / 2), i = _(() => t.value - n.value / 2);
  return {
    xTop: s,
    xBottom: i
  };
}
const Qk = {
  name: "AScaleStand",
  props: {
    pipesWidth: {
      type: Number,
      required: !0
    },
    standWidth: {
      type: Number,
      required: !0
    },
    standHeight: {
      type: Number,
      required: !0
    },
    yStandBottom: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      xBottom: t,
      xTop: n
    } = Jk(e);
    return {
      xBottom: t,
      xTop: n
    };
  },
  render() {
    return c("g", null, [
      c(hl, {
        width: this.pipesWidth,
        height: this.standHeight,
        x: this.xTop,
        y: this.yStandTop,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(hl, {
        width: this.standWidth,
        height: this.pipesWidth,
        x: this.xBottom,
        y: this.yStandBottom,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      })
    ]);
  }
};
function eH(e) {
  const t = d(e, "value"), n = d(e, "classNegative"), r = d(e, "classPositive"), s = d(e, "classNeutral");
  return {
    cssClass: _(() => {
      if (t.value === 0) {
        if (s.value)
          return s.value;
      } else if (t.value < 0) {
        if (n.value)
          return n.value;
      } else if (r.value)
        return r.value;
    })
  };
}
function tH(e) {
  const t = d(e, "value"), n = d(e, "maxDegree");
  return {
    degree: _(() => n.value * t.value / 100)
  };
}
function nH(e) {
  const t = d(e, "viewBoxWidth"), n = d(e, "viewBoxHeight"), r = d(e, "pipesWidth"), s = d(e, "standHeight"), i = _(() => `0 0 ${t.value} ${n.value}`), o = _(() => t.value / 2), u = _(() => n.value - r.value), f = _(() => u.value - s.value + 1);
  return {
    centerX: o,
    viewBoxLocal: i,
    yStandBottom: u,
    yStandTop: f
  };
}
const Zhe = {
  name: "AScale",
  props: {
    balanceCircleRadius: {
      type: Number,
      required: !1,
      default: 3.5
    },
    balanceTopHeight: {
      type: Number,
      required: !1,
      default: 6
    },
    balanceWidth: {
      type: Number,
      required: !1,
      default: 60
    },
    bowlRadius: {
      type: Number,
      required: !1,
      default: 12.6
    },
    bowlThreadHeight: {
      type: Number,
      required: !1,
      default: 20
    },
    bowlThreadPaddingX: {
      type: Number,
      required: !1,
      default: 4
    },
    bowlThreadStrokeWidth: {
      type: Number,
      required: !1,
      default: 2
    },
    bowlThreadWidth: {
      type: Number,
      required: !1,
      default: 16
    },
    bowlWidth: {
      type: Number,
      required: !1,
      default: 25
    },
    classNegative: {
      type: String,
      required: !1,
      default: void 0
    },
    classNeutral: {
      type: String,
      required: !1,
      default: void 0
    },
    classPositive: {
      type: String,
      required: !1,
      default: void 0
    },
    maxDegree: {
      type: Number,
      required: !1,
      default: 30
    },
    pipesWidth: {
      type: Number,
      required: !1,
      default: 3
    },
    standHeight: {
      type: Number,
      required: !1,
      default: 46
    },
    standWidth: {
      type: Number,
      required: !1,
      default: 70
    },
    value: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= -100 && e <= 100
    },
    viewBoxHeight: {
      type: Number,
      required: !1,
      default: 80
    },
    viewBoxWidth: {
      type: Number,
      required: !1,
      default: 100
    }
  },
  setup(e) {
    const {
      degree: t
    } = tH(e), {
      cssClass: n
    } = eH(e), {
      centerX: r,
      viewBoxLocal: s,
      yStandBottom: i,
      yStandTop: o
    } = nH(e);
    return {
      centerX: r,
      cssClass: n,
      degree: t,
      viewBoxLocal: s,
      yStandBottom: i,
      yStandTop: o
    };
  },
  render() {
    return c("div", {
      class: this.cssClass
    }, [
      c("svg", {
        viewBox: this.viewBoxLocal,
        version: "1.1",
        xmlns: "http://www.w3.org/2000/svg"
      }, [
        c(Zk, {
          bowlThreadStrokeWidth: this.bowlThreadStrokeWidth,
          bowlThreadWidth: this.bowlThreadWidth,
          bowlThreadHeight: this.bowlThreadHeight,
          bowlThreadPaddingX: this.bowlThreadPaddingX,
          bowlWidth: this.bowlWidth,
          bowlRadius: this.bowlRadius
        }),
        c(Gk, {
          degree: this.degree,
          pipesWidth: this.pipesWidth,
          yStandTop: this.yStandTop,
          centerX: this.centerX,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          balanceTopHeight: this.balanceTopHeight
        }),
        c(Qk, {
          standWidth: this.standWidth,
          standHeight: this.standHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          yStandBottom: this.yStandBottom,
          yStandTop: this.yStandTop
        }),
        c(_p, {
          direction: "left",
          degree: this.degree,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          yStandTop: this.yStandTop,
          bowlThreadHeight: this.bowlThreadHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          bowlWidth: this.bowlWidth
        }),
        c(_p, {
          direction: "right",
          degree: this.degree,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          yStandTop: this.yStandTop,
          bowlThreadHeight: this.bowlThreadHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          bowlWidth: this.bowlWidth
        })
      ])
    ]);
  }
};
function rH(e, {
  hasTextAndLength: t = B(!1),
  isMoreButtonObservingVisible: n = B(!1),
  isOpen: r = B(!1),
  isTextShorterThanTextLength: s = B(!1)
}) {
  const i = d(e, "btnIconLeftLess"), o = d(e, "btnIconLeftMore"), u = d(e, "btnIconRightLess"), f = d(e, "btnIconRightMore"), A = d(e, "btnTextLess"), E = d(e, "btnTextMore"), p = d(e, "btnTitleLess"), T = d(e, "btnTitleMore"), S = d(e, "showLess"), m = B(void 0), b = _(() => r.value ? A.value : E.value), I = _(() => r.value ? p.value : T.value), v = _(() => r.value ? i.value : o.value), g = _(() => r.value ? u.value : f.value), R = _(() => t.value ? s.value ? !1 : S.value ? !0 : !r.value : n.value ? S.value ? !0 : !r.value : !1);
  return {
    btnIconLeft: v,
    btnIconRight: g,
    btnText: b,
    btnTitle: I,
    buttonRef: m,
    isButtonVisible: R
  };
}
function aH({
  hasTextAndLength: e = _(() => !1),
  isOpen: t = B(!1)
}) {
  return {
    ariaExpanded: _(() => {
      if (e.value)
        return t.value;
    })
  };
}
function sH(e, {
  hasTextAndLength: t = _(() => !1),
  isOpen: n = B(!1)
}) {
  const r = d(e, "height");
  return {
    maxHeightStyle: _(() => {
      if (!(t.value || n.value))
        return r.value === 0 ? "max-height: none;" : `max-height: ${r.value}px`;
    })
  };
}
function iH(e) {
  const t = d(e, "isOpenDefault"), n = B(void 0);
  return {
    initIsOpen: () => {
      n.value = t.value;
    },
    isOpen: n
  };
}
function lH(e, {
  isBtnHiddenDependentOnTextLength: t = _(() => !1)
}) {
  const n = d(e, "height"), r = B(void 0), s = B(void 0), i = B(void 0), o = () => {
    if (t.value)
      return;
    (ce(r.value, "offsetHeight") || 0) > n.value ? i.value = !0 : i.value = !1;
  };
  return {
    checkHeight: o,
    containerRef: r,
    isMoreButtonObservingVisible: i,
    startObservingMutation: () => {
      t.value || (s.value = new ResizeObserver(
        Sl(() => {
          o();
        }, 300)
      ), s.value.observe(r.value));
    },
    stopObservingMutation: () => {
      t.value || s.value && s.value.unobserve(r.value);
    }
  };
}
function oH({
  hasTextAndLength: e = _(() => !1),
  isOpen: t = B(!1)
}) {
  return {
    textScreenReaderLocal: _(() => {
      if (!e.value)
        return t.value ? "_A_SHOW_MORE_LESS_SCREEN_READER_" : "_A_SHOW_MORE_MORE_SCREEN_READER_";
    })
  };
}
function uH(e, {
  isOpen: t = B(!1)
}) {
  const n = d(e, "text"), r = d(e, "textLength"), s = _(() => !!(n.value && r.value)), i = _(() => r.value > n.value.length), o = _(() => s.value && i.value), u = _(() => {
    const A = n.value.slice(0, r.value).trimEnd();
    let E = "...", p = !0;
    for (let T = A.length - 1; T > A.length - 4 && A[T] === "."; T--) {
      if (p)
        E = E.slice(0, -1);
      else
        break;
      p = !0;
    }
    return `${A}${E}`;
  }), f = _(() => {
    if (s.value) {
      if (i.value)
        return n.value;
      if (!t.value)
        return u.value;
    }
    return n.value;
  });
  return {
    hasTextAndLength: s,
    isBtnHiddenDependentOnTextLength: o,
    isTextShorterThanTextLength: i,
    textLocal: f
  };
}
function _H(e, {
  textLocal: t = _(() => {
  })
}) {
  const n = d(e, "safeHtml"), r = d(e, "html");
  return {
    isTextOrHtmlVisible: _(() => !!(t.value || n.value || r.value))
  };
}
function dH(e, { emit: t }, {
  containerRef: n = B(void 0),
  hasTextAndLength: r = _(() => !1),
  isOpen: s = B(!1),
  stopObservingMutation: i = () => {
  }
}) {
  const o = d(e, "showLess");
  return {
    isOpen: s,
    toggleButton: () => {
      s.value = !s.value, s.value && !o.value && i(), t("toggle", { isOpen: s.value }), r.value && s.value && !window.isScrollDisabled && Li().then(
        () => Or({
          element: n.value
        })
      );
    }
  };
}
const Jhe = {
  name: "AShowMore",
  inheritAttrs: !0,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    btnAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link a_p_0"
    },
    btnIconLeftLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconLeftMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnId: {
      type: String,
      required: !1,
      default: void 0
    },
    btnParentClass: {
      type: String,
      required: !1,
      default: "a_text_center"
    },
    btnTextLess: {
      type: String,
      required: !1,
      default: "_A_SHOW_MORE_LESS_"
    },
    btnTextMore: {
      type: String,
      required: !1,
      default: "_A_SHOW_MORE_MORE_"
    },
    btnTitleLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitleMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitlePlacement: {
      type: String,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    height: {
      type: Number,
      required: !1,
      default: 200,
      validator: (e) => e >= 0
    },
    html: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => at("a_show_more_")
    },
    isBtnTitleHtml: {
      type: Boolean,
      required: !1
    },
    isOpenDefault: {
      type: Boolean,
      required: !1,
      default: !1
    },
    safeHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    showLess: {
      type: Boolean,
      required: !1,
      default: !0
    },
    text: {
      type: String,
      required: !1,
      default: void 0
    },
    textLength: {
      type: Number,
      required: !1,
      default: void 0,
      validator: (e) => e > 0
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      isOpen: r
    } = iH(e), {
      hasTextAndLength: s,
      isBtnHiddenDependentOnTextLength: i,
      isTextShorterThanTextLength: o,
      textLocal: u
    } = uH(e, {
      isOpen: r
    }), {
      isTextOrHtmlVisible: f
    } = _H(e, {
      textLocal: u
    }), {
      checkHeight: A,
      containerRef: E,
      isMoreButtonObservingVisible: p,
      startObservingMutation: T,
      stopObservingMutation: S
    } = lH(e, {
      isBtnHiddenDependentOnTextLength: i
    }), {
      toggleButton: m
    } = dH(e, t, {
      containerRef: E,
      hasTextAndLength: s,
      isOpen: r,
      stopObservingMutation: S
    }), {
      btnIconLeft: b,
      btnIconRight: I,
      btnText: v,
      btnTitle: g,
      buttonRef: R,
      isButtonVisible: D
    } = rH(e, {
      hasTextAndLength: s,
      isMoreButtonObservingVisible: p,
      isOpen: r,
      isTextShorterThanTextLength: o
    }), {
      maxHeightStyle: w
    } = sH(e, {
      hasTextAndLength: s,
      isOpen: r
    }), {
      textScreenReaderLocal: F
    } = oH({
      hasTextAndLength: s,
      isOpen: r
    }), {
      ariaExpanded: P
    } = aH({
      hasTextAndLength: s,
      isOpen: r
    });
    return n({
      buttonRef: R,
      containerRef: E,
      isOpen: r,
      toggleButton: m
    }), jr(() => {
      A(), T();
    }), Ot(() => {
      S();
    }), {
      ariaExpanded: P,
      btnIconLeft: b,
      btnIconRight: I,
      btnText: v,
      btnTitle: g,
      buttonRef: R,
      containerRef: E,
      hasTextAndLength: s,
      isButtonVisible: D,
      isOpen: r,
      isTextOrHtmlVisible: f,
      maxHeightStyle: w,
      textLocal: u,
      textScreenReaderLocal: F,
      toggleButton: m
    };
  },
  render() {
    return c("div", {
      class: [
        "a_show_more",
        {
          a_show_more_open: this.isOpen
        }
      ]
    }, [
      c("div", {
        class: "a_show_more__wrapper",
        style: this.maxHeightStyle
      }, [
        c("div", {
          ref: "containerRef",
          id: this.id,
          ariaExpanded: this.ariaExpanded,
          ...this.$attrs
        }, [
          this.isTextOrHtmlVisible && c(pe, {
            alwaysTranslate: this.alwaysTranslate,
            tag: "div",
            text: this.textLocal,
            html: this.html,
            safeHtml: this.safeHtml
          }),
          this.$slots.default && this.$slots.default({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          })
        ])
      ]),
      this.isButtonVisible && c("div", {
        class: this.btnParentClass
      }, [
        c(pt, {
          ref: "buttonRef",
          id: this.btnId,
          alwaysTranslate: this.alwaysTranslate,
          "aria-controls": this.id,
          class: [
            "a_show_more__button",
            this.btnClass
          ],
          disabled: this.disabled,
          iconLeft: this.btnIconLeft,
          iconRight: this.btnIconRight,
          isTitleHtml: this.isBtnTitleHtml,
          text: this.btnText,
          textAriaHidden: !this.hasTextAndLength,
          textScreenReader: this.textScreenReaderLocal,
          title: this.btnTitle,
          titlePlacement: this.btnTitlePlacement,
          ...this.btnAttributes,
          onClick: this.toggleButton
        }, () => this.$slots.button && this.$slots.button({
          isButtonVisible: this.isButtonVisible,
          isOpen: this.isOpen
        }))
      ])
    ]);
  }
};
function cH(e, {
  attributesForRoot: t = _(() => ({})),
  isColumnVisible: n = _(() => !1),
  isLocked: r = _(() => !1),
  labelTranslated: s = _(() => "")
}) {
  const i = d(e, "searchColumnModel"), o = _(() => {
    if (!i.value)
      return !0;
    const f = new RegExp(Ou(i.value), "gi");
    return `${s.value}`.search(f) !== -1;
  });
  return {
    attributesComponent: _(() => {
      const f = {
        ...t.value,
        class: "a_table__th__dropdown__li"
      };
      return o.value || (f.style = "display: none;"), !r.value && !n.value && (f.class += " a_table__th__dropdown__li_invisible"), f;
    })
  };
}
const fH = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01757813,0,0,0.01757813,-3.96314e-5,1.7578125e-5)"
  >
    <path
      d="m 493.034,717.353 v 0 c -22.097,-7.811 -37.924,-28.881 -37.924,-53.651 0,-31.421 25.469,-56.89 56.89,-56.89 31.421,0 56.89,25.469 56.89,56.89 0,24.769 -15.833,45.843 -37.924,53.651 v 98.392 c 0,9.98 -8.486,18.618 -18.966,18.618 -10.164,0 -18.966,-8.339 -18.966,-18.618 z m -265.48,-300.17 v 0 0 C 164.683,417.358 113.78,467.989 113.78,531.324 v 189.27 c 0,167.568 136.008,303.405 303.372,303.405 h 189.695 c 167.548,0 303.372,-136.179 303.372,-303.405 v -189.27 c 0,-62.93 -50.854,-113.956 -113.774,-114.141 V 284.414 C 796.445,127.332 668.777,-0.001 512,-0.001 c -157.093,0 -284.445,127.307 -284.445,284.415 v 132.769 z m 113.779,0 V 284.476 c 0,-94.496 76.411,-170.699 170.665,-170.699 94.063,0 170.665,76.426 170.665,170.699 V 417.183 H 341.33 Z"
    />
  </g>
</svg>`;
function hH(e, {
  isLocked: t = _(() => !1)
}) {
  const n = d(e, "column"), r = d(e, "disabledOptions"), s = de("changeModelColumnsVisible"), i = de("modelColumnsVisibleLocal"), o = _(() => n.value.id in i.value ? !!i.value[n.value.id] : !n.value.hide), u = _(() => t.value ? fH : o.value ? hS : fS), f = _(() => t.value ? "_A_TABLE_OPTIONS_BTN_LOCK_TITLE_" : o.value ? "_A_TABLE_OPTIONS_BTN_EYE_TITLE_" : "_A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_"), A = ({ $event: p }) => {
    p.stopPropagation(), p.preventDefault();
    const T = he(i.value);
    T[n.value.id] = !o.value, s(T);
  };
  return {
    buttonVisibleProps: _(() => {
      const p = {
        class: "a_table__th__dropdown_item__icon",
        tag: "span",
        iconLeft: u.value,
        title: f.value,
        textScreenReader: f.value
      };
      return t.value || (p.tag = "button", p.class += " a_table__th__dropdown_item__icon_btn a_btn a_btn_link", p.onClick = A, r.value && (p.disabled = !0)), p;
    }),
    isColumnVisible: o
  };
}
const dp = "a_table__drag_element";
function kS(e, { emit: t }, {
  classOverString: n = "",
  inDropdown: r = !1
}) {
  const s = d(e, "column"), i = d(e, "columnIndex"), o = d(e, "columnIndexDraggable"), u = de("isLoadingOptions"), f = de("isColumnsDnd"), A = B(null), E = _(() => o.value > i.value ? n : `${n}_right`), p = (g) => {
    var R, D, w;
    if ((R = g.target) == null || R.classList.add(dp), r) {
      const F = ((D = g.target) == null ? void 0 : D.offsetHeight) || 30;
      (w = g.target) == null || w.parentElement.style.setProperty("--a_table_draggable_li_height", `${F}px`);
    }
    g.dataTransfer.effectAllowed = "move", t("dragstartParent", {
      columnIndex: i.value
    });
  }, T = (g) => {
    var R, D;
    (R = g.target) == null || R.classList.remove(E.value), (D = g.target) == null || D.classList.remove(dp), t("dragendParent");
  }, S = () => {
    A.value && A.value.classList && A.value.classList.add(E.value), t("dragenterParent", {
      columnIndex: i.value
    });
  }, m = (g) => (g.preventDefault && g.preventDefault(), !1), b = () => {
    A.value && A.value.classList && A.value.classList.remove(E.value), t("dragleaveParent", {
      columnIndex: i.value
    });
  }, I = _(() => !!s.value.locked);
  return {
    attributesForRoot: _(() => {
      const g = {
        ref: "root"
      };
      return !I.value && f.value && (g.draggable = !u.value, g.onDragstart = p, g.onDragend = T, g.onDragenter = S, g.onDragover = m, g.onDragleave = b), g;
    }),
    isLocked: I,
    root: A
  };
}
function AH(e) {
  const t = d(e, "column"), n = d(e, "searchColumnModel"), {
    filterSearchHighlight: r
  } = jn(), s = _(() => oa(t.value.label) ? Dt({
    placeholder: t.value.label
  }) : t.value.label);
  return {
    labelLocal: _(() => r(s.value, { searchModel: n.value })),
    labelTranslated: s
  };
}
function EH(e) {
  const t = d(e, "columnIndex"), n = de("changeColumnsOrdering"), r = de("columnsOrdered"), s = de("tableId"), i = ({ columnIndex: T, iconKey: S }) => `${s.value}_${S}_${T}`, o = ({ $event: T }) => {
    T.stopPropagation();
    const S = t.value - 1;
    n({
      columnIndexDraggable: t.value,
      columnIndexOver: S
    }), window.isScrollDisabled || setTimeout(() => {
      Or({
        selector: `#${i({
          columnIndex: S,
          iconKey: "up"
        })}`
      });
    });
  }, u = ({ $event: T }) => {
    T.stopPropagation();
    const S = t.value + 1;
    n({
      columnIndexDraggable: t.value,
      columnIndexOver: S
    }), window.isScrollDisabled || setTimeout(() => {
      const m = `#${i({
        columnIndex: S,
        iconKey: "down"
      })}`;
      Or({
        selector: m
      });
    });
  }, f = _(() => i({
    columnIndex: t.value,
    iconKey: "up"
  })), A = _(() => i({
    columnIndex: t.value,
    iconKey: "down"
  })), E = _(() => t.value !== 0 && !r.value[t.value - 1].locked), p = _(() => r.value.length - 1 !== t.value && !r.value[t.value + 1].locked);
  return {
    idButtonArrowDown: A,
    idButtonArrowUp: f,
    isButtonArrowDownVisible: p,
    isButtonArrowUpVisible: E,
    moveColumnDown: u,
    moveColumnUp: o
  };
}
const pH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-grip-vertical" viewBox="0 0 16 16">
  <path d="M7 2a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M7 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/>
</svg>`, TH = {
  name: "ATableHeaderThActionItem",
  components: {
    AIcon: _t,
    ATranslation: pe
  },
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    columnIndexDraggable: {
      type: Number,
      required: !1,
      default: -1
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    searchColumnModel: {
      type: String,
      required: !0
    }
  },
  emits: [
    "dragendParent",
    "dragstartParent",
    "dragenterParent",
    "dragleaveParent"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsOrdered",
    "isColumnsDnd",
    "isLoadingOptions",
    "isLoadingTable",
    "modelColumnsVisibleLocal",
    "tableId"
  ],
  setup(e, t) {
    const {
      attributesForRoot: n,
      isLocked: r,
      root: s
    } = kS(e, t, {
      classOverString: "a_table__th__dropdown__li_over",
      inDropdown: !0
    }), {
      labelLocal: i,
      labelTranslated: o
    } = AH(e), {
      buttonVisibleProps: u,
      isColumnVisible: f
    } = hH(e, {
      isLocked: r
    }), {
      idButtonArrowDown: A,
      idButtonArrowUp: E,
      isButtonArrowDownVisible: p,
      isButtonArrowUpVisible: T,
      moveColumnDown: S,
      moveColumnUp: m
    } = EH(e), {
      attributesComponent: b
    } = cH(e, {
      attributesForRoot: n,
      isColumnVisible: f,
      isLocked: r,
      labelTranslated: o
    });
    return {
      attributesComponent: b,
      attributesForRoot: n,
      buttonVisibleProps: u,
      idButtonArrowDown: A,
      idButtonArrowUp: E,
      isButtonArrowDownVisible: p,
      isButtonArrowUpVisible: T,
      isLocked: r,
      labelLocal: i,
      moveColumnDown: S,
      moveColumnUp: m,
      root: s
    };
  },
  render() {
    return this.column.isRender === !1 ? null : c("li", this.attributesComponent, [
      c("div", {
        class: "a_dropdown__item_text a_table__th__dropdown_item"
      }, [
        c("div", {
          class: "a_table__th__dropdown_item__child"
        }, [
          c(pt, this.buttonVisibleProps),
          c("span", {
            class: "a_position_relative"
          }, [
            this.column.icon && c(_t, {
              icon: this.column.icon,
              class: "a_table__th__icon"
            }),
            c(pe, {
              tag: "span",
              class: "a_table__th__text",
              safeHtml: this.labelLocal
            }),
            this.column.title && c(pe, {
              title: this.column.title,
              ariaHidden: !0,
              tag: "span",
              class: "a_position_absolute_all"
            }),
            this.column.title && c(pe, {
              text: this.column.title,
              tag: "span",
              class: "a_sr_only"
            })
          ]),
          !this.isLocked && this.isColumnsDnd ? [
            this.isButtonArrowUpVisible && c(pt, {
              id: this.idButtonArrowUp,
              class: "a_sr_only_focusable a_btn a_btn_link a_p_0 a_table__th__dropdown_item__btn_arrow",
              disabled: this.disabledOptions,
              type: "button",
              iconLeft: Fu,
              title: "_A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_",
              textScreenReader: "_A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_",
              onClick: this.moveColumnUp
            }),
            this.isButtonArrowDownVisible && c(pt, {
              id: this.idButtonArrowDown,
              class: "a_sr_only_focusable a_btn a_btn_link a_p_0 a_table__th__dropdown_item__btn_arrow",
              disabled: this.disabledOptions,
              type: "button",
              iconLeft: Ha,
              title: "_A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_",
              textScreenReader: "_A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_",
              onClick: this.moveColumnDown
            })
          ] : ""
        ]),
        !this.isLocked && this.isColumnsDnd && c(_t, {
          icon: pH,
          class: "a_table__th__dropdown_item__icon_dnd"
        })
      ])
    ]);
  }
};
function HS(e) {
  const t = {};
  return e.forEach((n) => {
    t[n.id] = !n.hide;
  }), t;
}
function VS({ element: e, tagsName: t, classStop: n }) {
  if (e && e.tagName) {
    if (t.indexOf(e.tagName) !== -1)
      return !0;
    if (e.classList.contains(n))
      return !1;
    if (e.parentElement)
      return VS({ element: e.parentElement, tagsName: t, classStop: n });
  }
  return !1;
}
function SH({ $event: e, classStop: t = "", tagsName: n = [] } = {}) {
  return e && e.target ? VS({ element: e.target, tagsName: n, classStop: t }) : !1;
}
function Al({ column: e, modelColumnsVisibleLocal: t }) {
  return e.isRender === !1 ? !1 : e.id in t ? !!t[e.id] : !e.hide;
}
function LH({ column: e }) {
  return e.isRender === !1 ? !1 : !e.hide;
}
function mH({ columnIndex: e, indexFirstScrollInvisibleColumn: t }) {
  return se(t) ? !0 : e < t;
}
function bH({ column: e, columnIndex: t, modelIsTableWithoutScroll: n, modelColumnsVisibleLocal: r, indexFirstScrollInvisibleColumn: s }) {
  return n ? Al({
    column: e,
    modelColumnsVisibleLocal: r
  }) && mH({
    columnIndex: t,
    indexFirstScrollInvisibleColumn: s
  }) : Al({
    column: e,
    modelColumnsVisibleLocal: r
  });
}
function WS({ tableId: e }) {
  return `${e}_preview_right`;
}
function GS({ tableId: e }) {
  return `${e}_multiple_panel`;
}
function jS({ tableId: e }) {
  return `${e}_header_label`;
}
function Au({ row: e, rowIndex: t, keyId: n }) {
  return n ? ce(e, n) : t;
}
function KS({ rowAction: e, row: t, rowIndex: n }) {
  return e.isHidden ? !1 : Ne(e.isHiddenCallback) ? !e.isHiddenCallback({
    row: t,
    rowIndex: n
  }) : !0;
}
function IH() {
  const e = B("");
  return {
    searchColumnModel: e,
    updateSearchColumnModel: (n) => {
      e.value = n;
    }
  };
}
function zS({
  classOver: e = "",
  classOverRight: t = "",
  classOverParent: n = "",
  inHeader: r = !1
}) {
  const s = B(void 0), i = B(void 0), o = B(void 0), u = de("changeColumnsOrdering"), f = _(() => !se(i.value)), A = ({ columnIndex: b }) => {
    i.value = b;
  }, E = ({ columnIndex: b }) => {
    o.value = b;
  }, p = ({ columnIndex: b }) => {
    o.value === b && (o.value = void 0);
  }, T = (b) => {
    if (!(se(i.value) || se(o.value)))
      return u({
        columnIndexDraggable: i.value,
        columnIndexOver: o.value,
        inHeader: r
      }), b.stopPropagation(), !1;
  }, S = () => {
    s.value.querySelectorAll(`.${n}`).forEach((I) => {
      I.classList.remove(e), I.classList.remove(t);
    });
  };
  return {
    columnIndexDraggable: i,
    dragstart: A,
    dragenter: E,
    dragleave: p,
    dragend: () => {
      S(), i.value = void 0;
    },
    drop: T,
    isDragstart: f,
    root: s
  };
}
function YS() {
  const e = de("columnActionsWidthMinLocal"), t = de("modelIsTableWithoutScroll");
  return {
    stylesThTd: _(() => t.value ? {} : {
      style: `width: ${e.value}px;`
    })
  };
}
const vH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-counterclockwise" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2z"/>
  <path d="M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466"/>
</svg>`, yH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear-fill" viewBox="0 0 16 16">
  <path d="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z"/>
</svg>`, oc = {
  name: "ATableHeaderThAction",
  inject: [
    "changeModelIsTableWithoutScroll",
    "columnActionsWidthLocal",
    "changeColumnsOrdering",
    "changeModelColumnsVisible",
    "columns",
    "columnsOrdered",
    "isActionIconVisible",
    "modelIsTableWithoutScroll"
  ],
  props: {
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    }
  },
  setup() {
    const {
      columnIndexDraggable: e,
      dragend: t,
      dragenter: n,
      dragleave: r,
      dragstart: s,
      drop: i,
      isDragstart: o,
      root: u
    } = zS({
      classOver: "a_table__th__dropdown__li_over",
      classOverRight: "a_table__th__dropdown__li_over_right",
      classOverParent: "a_table__th__dropdown__li",
      inHeader: !1
    }), {
      searchColumnModel: f,
      updateSearchColumnModel: A
    } = IH(), {
      stylesThTd: E
    } = YS();
    return {
      columnIndexDraggable: e,
      dragend: t,
      dragenter: n,
      dragleave: r,
      dragstart: s,
      drop: i,
      isDragstart: o,
      root: u,
      searchColumnModel: f,
      stylesThTd: E,
      updateSearchColumnModel: A
    };
  },
  methods: {
    selectAllColumns() {
      const e = {};
      z(this.columnsOrdered, (t) => {
        e[t.id] = !0;
      }), this.changeModelColumnsVisible(e);
    },
    deselectAllColumns() {
      const e = {};
      z(this.columnsOrdered, (t) => {
        e[t.id] = !!t.locked;
      }), this.changeModelColumnsVisible(e);
    },
    resetColumns() {
      this.changeModelColumnsVisible(HS(this.columnsOrdered)), this.changeColumnsOrdering({ reset: !0 });
    }
  },
  render() {
    return c("div", {
      class: [
        "a_table__th a_table__cell a_table__cell_action",
        {
          a_table__cell_action_sticky: this.isRowActionsStickyLocal
        }
      ],
      role: "columnheader",
      ...this.stylesThTd
    }, [
      c("span", {
        class: "a_sr_only"
      }, "Aktionen"),
      this.isActionIconVisible && c(_a, {
        buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
        buttonTitle: "_A_TABLE_DROPDOWN_OPTIONS_TITLE_",
        buttonTextScreenReader: "_A_TABLE_DROPDOWN_OPTIONS_TITLE_",
        dropdownTag: "div",
        dropdownClass: "a_p_0",
        hasCaret: !1,
        isCloseByClickInside: !1,
        disabled: this.disabledOptions,
        placement: "left",
        menuWidth: 320,
        inBody: !0
      }, {
        button: () => c(_t, {
          icon: yH
        }),
        dropdown: () => [
          c("ul", {
            class: ["a_table__th__dropdown__ul", {
              a_table__th__dropdown__ul_dragstart: this.isDragstart
            }],
            ref: "root",
            onDrop: this.drop
          }, [
            c("li", null, [
              c("div", {
                class: "a_dropdown__item_text a_table__th__dropdown__search"
              }, [
                c(Rn, {
                  label: "Suchen",
                  modelValue: this.searchColumnModel,
                  isClearButton: !0,
                  modelUndefined: "",
                  "onUpdate:modelValue": this.updateSearchColumnModel
                })
              ])
            ]),
            c("li", {
              class: "a_dropdown__divider",
              "aria-hidden": !0
            }),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.selectAllColumns
              }, [
                c(_t, {
                  icon: df,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Alle einblenden")
              ])
            ]),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.deselectAllColumns
              }, [
                c(_t, {
                  icon: Ta,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Alle ausblenden")
              ])
            ]),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.resetColumns
              }, [
                c(_t, {
                  icon: vH,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Zurücksetzen")
              ])
            ]),
            c("li", null, [
              c(IS, {
                class: "a_dropdown__item_text a_text_nowrap",
                disabled: this.disabledOptions,
                modelValue: this.modelIsTableWithoutScroll,
                trueLabel: "Kompakte Ansicht",
                falseLabel: "Kompakte Ansicht",
                "onUpdate:modelValue": this.changeModelIsTableWithoutScroll
              })
            ]),
            c("li", {
              class: "a_dropdown__divider",
              "aria-hidden": !0
            }),
            this.columnsOrdered.map((e, t) => c(TH, {
              column: e,
              columnIndex: t,
              columnIndexDraggable: this.columnIndexDraggable,
              disabledOptions: this.disabledOptions,
              searchColumnModel: this.searchColumnModel,
              onDragstartParent: this.dragstart,
              onDragenterParent: this.dragenter,
              onDragleaveParent: this.dragleave,
              onDragendParent: this.dragend
            }))
          ])
        ]
      })
    ]);
  }
};
function XS(e, { emit: t }) {
  const n = d(e, "areAllRowsSelected"), r = d(e, "areAllVisibleRowsSelected"), s = d(e, "areSomeRowsSelected"), i = d(e, "rowsLocalLength"), o = _(() => !!(i.value === 0 || n.value)), u = _(() => s.value && !(r.value || n.value)), f = _(() => r.value || n.value), A = _(() => u.value || f.value ? "_A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_" : "_A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_");
  return {
    isCheckboxDisabled: o,
    isCheckboxIndeterminate: u,
    labelCheckbox: A,
    modelValueCheckboxLocal: f,
    toggleCheckbox: () => {
      o.value || t("setSelectedRowsIndexes", { isAll: !0 });
    }
  };
}
const RH = {
  name: "ATableGroupedHeader",
  props: {
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areAllVisibleRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    columnsForRender: {
      type: Array,
      required: !0
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !0
    },
    rowsLocalLength: {
      type: Number,
      required: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMobile",
    "isMultipleActionsActive"
  ],
  setup(e, t) {
    const {
      isCheckboxDisabled: n,
      isCheckboxIndeterminate: r,
      labelCheckbox: s,
      modelValueCheckboxLocal: i,
      toggleCheckbox: o
    } = XS(e, t);
    return {
      isCheckboxDisabled: n,
      isCheckboxIndeterminate: r,
      labelCheckbox: s,
      modelValueCheckboxLocal: i,
      toggleCheckbox: o
    };
  },
  render() {
    return this.isMobile ? null : c("div", {
      ref: "root",
      role: "rowgroup",
      class: "a_table__head"
    }, [
      c("div", {
        class: "a_table__row a_table__head__row",
        role: "row"
      }, [
        this.isMultipleActionsActive && c("div", {
          role: "columnheader",
          class: "a_table__th a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;",
          "aria-colindex": 1
        }, [
          c(qu, {
            isWidthAuto: !0,
            modelValue: this.modelValueCheckboxLocal,
            indeterminate: this.isCheckboxIndeterminate,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        this.columnsForRender,
        this.isActionColumnVisible && c(oc, {
          disabledOptions: this.disabledOptions,
          isRowActionsStickyLocal: this.isRowActionsStickyLocal
        })
      ])
    ]);
  }
};
function gH(e, {
  ariaSort: t = _(() => ({})),
  attributesForRoot: n = _(() => ({})),
  columnsStyles: r = _(() => ""),
  isLocked: s = _(() => !1),
  isSorting: i = _(() => !1),
  titlesSort: o = _(() => [])
}) {
  const u = d(e, "column"), f = d(e, "columnIndex"), A = d(e, "hasMultipleActions"), E = de("isLoadingOptions"), p = de("isLoadingOptions"), T = _(() => [
    "a_table__th a_table__cell",
    {
      a_table__th_draggable: !s.value && !p.value && E.value,
      a_table__th_sorting: i.value
    },
    u.value.classHeaderParent
  ]), S = _(() => {
    const b = [];
    return (u.value.title || u.value.title === 0) && b.push(u.value.title), b.push(...o.value), b;
  });
  return {
    attributesForTh: _(() => {
      let b = f.value + 1;
      return A.value && b++, {
        ...t.value,
        ...n.value,
        "aria-colindex": b,
        ref: "root",
        role: "columnheader",
        class: T.value,
        style: r.value
      };
    }),
    titlesLocal: S
  };
}
function OH(e) {
  const t = d(e, "column"), n = de("columnsVisibleAdditionalSpaceForOneGrow", 0), r = _(() => se(t.value.grow) ? 1 : t.value.grow);
  return {
    additionalWidthForCurrentColumn: _(() => n.value * r.value)
  };
}
function ZS(e) {
  const t = d(e, "column"), n = de("columnWidthDefault"), {
    additionalWidthForCurrentColumn: r
  } = OH(e), s = _(() => t.value.width || n.value), i = _(() => s.value + r.value), o = _(() => `width: ${i.value}px; min-width: ${i.value}px; max-width: ${i.value}px;`);
  return {
    columnsStyles: _(() => t.value.style ? `${o.value} ${t.value.style}` : o.value)
  };
}
const CH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-down-fill" viewBox="0 0 16 16">
  <path d="M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z"/>
</svg>`, DH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-up-fill" viewBox="0 0 16 16">
  <path d="m7.247 4.86-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z"/>
</svg>`, hi = B({
  propsDefault: {
    borderType: "bordered"
  },
  config: {
    isHtmlTitleSort: !1
  }
}), Qhe = {
  install: (e, {
    propsDefault: t = {},
    config: n = {}
  } = {}) => {
    hi.value.propsDefault = {
      ...hi.value.propsDefault,
      ...t
    }, hi.value.config = {
      ...hi.value.config,
      ...n
    };
  }
};
function NH(e) {
  const t = d(e, "column"), n = d(e, "columnIndex"), r = d(e, "disabledSort"), s = d(e, "isSortingMultiColumn"), i = d(e, "modelSort"), o = d(e, "showFirstSortingSequenceNumber"), u = de("changeModelSort"), f = de("tableId"), A = _(() => t.value.sortId), E = _(() => !!A.value), p = _(() => i.value.indexOf(A.value)), T = _(() => i.value.indexOf(`-${A.value}`)), S = _(() => p.value !== -1), m = _(() => T.value !== -1), b = _(() => E.value && (S.value || m.value)), I = _(() => {
    if (E.value) {
      let O = "none";
      return S.value ? O = "ascending" : m.value && (O = "descending"), {
        "aria-sort": O
      };
    }
    return {};
  }), v = _(() => c(_t, {
    icon: DH,
    class: "a_table__th__sort__icon a_table__th__sort__icon_up"
  })), g = _(() => c(_t, {
    icon: CH,
    class: "a_table__th__sort__icon a_table__th__sort__icon_down"
  })), R = _(() => {
    const O = [];
    return E.value && (m.value || O.push(v.value), S.value || O.push(g.value)), O;
  }), D = ({ $event: O }) => {
    r.value || u({
      $event: O,
      sortId: A.value
    });
  }, w = _(() => `${f.value}_th_${n.value}_screen_reader`), F = _(() => {
    var O;
    return E.value ? {
      type: "button",
      disabled: r.value,
      isTitleHtml: ((O = hi.value.config) == null ? void 0 : O.isHtmlTitleSort) || !1,
      "aria-describedby": w.value,
      onClick: D
    } : {
      tag: "span"
    };
  }), P = _(() => {
    if (!(!s.value && !b.value) && !(i.value.length <= 1 && !o.value)) {
      if (p.value !== -1)
        return p.value + 1;
      if (T.value !== -1)
        return T.value + 1;
    }
  }), M = _(() => {
    const O = [];
    return E.value && (O.push("_A_TABLE_SORT_TITLE_"), s.value && O.push("_A_TABLE_SORT_TITLE_MULTI_COLUMN_")), O;
  });
  return {
    ariaSort: I,
    attributesForButtonSort: F,
    columnTextScreenReaderId: w,
    iconsSortable: R,
    isSortable: E,
    isSorting: b,
    sequenceNumberSort: P,
    titlesSort: M
  };
}
const uc = {
  name: "ATableHeaderTh",
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnGroupNames: {
      type: Array,
      required: !1,
      default: void 0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    columnIndexDraggable: {
      type: Number,
      required: !1,
      default: -1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !1
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "dragendParent",
    "dragstartParent",
    "dragenterParent",
    "dragleaveParent"
  ],
  inject: [
    "changeModelSort",
    "isColumnsDnd",
    "isLoadingOptions",
    "isLoadingTable"
  ],
  setup(e, t) {
    const {
      columnsStyles: n
    } = ZS(e), {
      attributesForRoot: r,
      isLocked: s,
      root: i
    } = kS(e, t, {
      classOverString: "a_table__th_over",
      inDropdown: !1
    }), {
      ariaSort: o,
      attributesForButtonSort: u,
      columnTextScreenReaderId: f,
      iconsSortable: A,
      isSortable: E,
      isSorting: p,
      sequenceNumberSort: T,
      titlesSort: S
    } = NH(e), {
      attributesForTh: m,
      titlesLocal: b
    } = gH(e, {
      ariaSort: o,
      attributesForRoot: r,
      columnsStyles: n,
      isLocked: s,
      isSorting: p,
      titlesSort: S
    });
    return {
      attributesForButtonSort: u,
      attributesForTh: m,
      columnTextScreenReaderId: f,
      columnsStyles: n,
      iconsSortable: A,
      isSortable: E,
      root: i,
      sequenceNumberSort: T,
      titlesLocal: b,
      titlesSort: S
    };
  },
  render() {
    return c("div", this.attributesForTh, [
      c("div", {
        class: [
          "a_table__cell__child"
        ]
      }, [
        this.columnGroupNames && c(pe, {
          html: this.columnGroupNames,
          tag: "span",
          class: "a_sr_only"
        }),
        c(pe, {
          id: this.columnTextScreenReaderId,
          text: this.titlesLocal,
          tag: "span",
          class: "a_sr_only",
          ariaHidden: !0
        }),
        c(pt, {
          class: [
            "a_table__th__btn",
            this.column.class,
            this.column.classHeader,
            {
              "a_btn a_btn_link a_table__th__btn_sort": this.isSortable,
              a_table__th__btn_sequence: this.sequenceNumberSort
            }
          ],
          iconLeft: this.column.icon,
          iconClass: "a_table__th__icon",
          extra: this.column.extra,
          title: this.titlesLocal,
          textScreenReader: this.column.textScreenReader || void 0,
          ...this.attributesForButtonSort
        }, () => [
          this.column.label && c(pe, {
            html: this.column.label,
            tag: "span",
            extra: this.column.extra,
            class: "a_table__th__text aloha_element__ml_0",
            ariaHidden: !!this.column.textScreenReader
          }),
          this.isSortable && c("span", {
            class: "a_table__th__sort__box aloha_element__ml_0"
          }, [
            this.sequenceNumberSort && c("span", {
              class: [
                "a_table__th__sort__sequence_num",
                this.sortingSequenceNumberClass
              ]
            }, this.sequenceNumberSort),
            c("span", {
              class: "a_table__th__sort__icons"
            }, [
              ...this.iconsSortable
            ])
          ])
        ])
      ])
    ]);
  }
}, BH = {
  name: "ATableHeader",
  components: {
    ATableHeaderTh: uc,
    ATableHeaderThAction: oc
  },
  props: {
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areAllVisibleRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !0
    },
    rowsLocalLength: {
      type: Number,
      required: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMobile",
    "isMultipleActionsActive"
  ],
  setup(e, t) {
    const {
      columnIndexDraggable: n,
      dragstart: r,
      dragenter: s,
      dragleave: i,
      dragend: o,
      drop: u,
      isDragstart: f,
      root: A
    } = zS({
      classOver: "a_table__th_over",
      classOverRight: "a_table__th_over_right",
      classOverParent: "a_table__th",
      inHeader: !0
    }), {
      isCheckboxDisabled: E,
      isCheckboxIndeterminate: p,
      labelCheckbox: T,
      modelValueCheckboxLocal: S,
      toggleCheckbox: m
    } = XS(e, t);
    return {
      columnIndexDraggable: n,
      dragend: o,
      dragenter: s,
      dragleave: i,
      dragstart: r,
      drop: u,
      isCheckboxDisabled: E,
      isCheckboxIndeterminate: p,
      isDragstart: f,
      labelCheckbox: T,
      modelValueCheckboxLocal: S,
      root: A,
      toggleCheckbox: m
    };
  },
  render() {
    return this.isMobile ? null : c("div", {
      ref: "root",
      role: "rowgroup",
      class: ["a_table__head", {
        a_table__head_dragstart: this.isDragstart
      }]
    }, [
      c("div", {
        class: "a_table__row a_table__head__row",
        role: "row",
        onDrop: this.drop
      }, [
        this.isMultipleActionsActive && c("div", {
          role: "columnheader",
          class: "a_table__th a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;",
          "aria-colindex": 1
        }, [
          c(qu, {
            isWidthAuto: !0,
            modelValue: this.modelValueCheckboxLocal,
            indeterminate: this.isCheckboxIndeterminate,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        this.columnsFilteredForRender.map((e, t) => c(uc, {
          ref: "th",
          column: e,
          columnIndex: t,
          columnIndexDraggable: this.columnIndexDraggable,
          disabledSort: this.disabledSort,
          hasMultipleActions: this.hasMultipleActions,
          isSortingMultiColumn: this.isSortingMultiColumn,
          modelSort: this.modelSort,
          showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
          sortingSequenceNumberClass: this.sortingSequenceNumberClass,
          onDragstartParent: this.dragstart,
          onDragenterParent: this.dragenter,
          onDragleaveParent: this.dragleave,
          onDragendParent: this.dragend
        })),
        this.isActionColumnVisible && c(oc, {
          disabledOptions: this.disabledOptions,
          isRowActionsStickyLocal: this.isRowActionsStickyLocal
        })
      ])
    ]);
  }
};
function wH(e, { emit: t }, {
  nextAvailableRowIndex: n,
  previousAvailableRowIndex: r,
  rowNumber: s = _(() => 0)
}) {
  const i = d(e, "countAllRows"), o = d(e, "limitPagination"), u = d(e, "offsetPagination"), f = d(e, "rowIndex"), A = d(e, "usePagination"), E = _(() => s.value <= 1 || se(r.value)), p = _(() => s.value >= i.value || se(n.value));
  return {
    disabledBtnArrowLeft: E,
    disabledBtnArrowRight: p,
    toNextRow: () => {
      p.value || (A.value ? (f.value + 1) % o.value === 0 ? (t("update:offset", { offset: u.value + o.value, reload: !1 }), t("togglePreview", { rowIndex: 0 })) : t("togglePreview", { rowIndex: n.value }) : t("togglePreview", { rowIndex: n.value }));
    },
    toPreviousRow: () => {
      E.value || (A.value ? (f.value + 1) % o.value === 1 ? (t("update:offset", { offset: u.value - o.value, reload: !1 }), t("togglePreview", { rowIndex: o.value - 1 })) : t("togglePreview", { rowIndex: r.value }) : t("togglePreview", { rowIndex: r.value }));
    }
  };
}
function PH() {
  const e = de("tableId");
  return {
    idLocal: _(() => WS({ tableId: e.value }))
  };
}
function xH({ emit: e }, {
  previewRef: t = B(void 0)
}) {
  return {
    mousedown: ({ clientWidth: i }) => {
      e("mousedownResizePreviewRight", {
        clientWidth: i
      });
    },
    mousemove: ({ clientX: i }) => {
      e("mousemoveResizePreviewRight", {
        clientX: i,
        previewRef: t.value
      });
    },
    mouseup: () => {
      e("mouseupResizePreviewRight", {
        previewRightWidth: ce(t, "value.offsetWidth")
      });
    }
  };
}
const cp = B(void 0);
function JS() {
  return {
    previewRef: cp,
    removePreviewRef: () => {
      cp.value = void 0;
    }
  };
}
function MH(e) {
  const t = d(e, "countAllRows"), n = d(e, "disabledPreviewRowCallback"), r = d(e, "offsetPagination"), s = d(e, "rowIndex"), i = d(e, "rows"), o = d(e, "usePagination"), {
    filterCurrency: u
  } = jn(), f = _(() => o.value ? (r.value || 0) + s.value + 1 : s.value + 1), A = _(() => i.value[s.value]), E = _(() => {
    let m = null;
    if (!Ne(n.value))
      m = s.value === i.value.length - 1 ? null : s.value++;
    else
      for (let b = s.value + 1; b < i.value.length; b++) {
        const I = i.value[b];
        if (!n.value({ row: I, rowIndex: b })) {
          m = b;
          break;
        }
      }
    return m;
  }), p = _(() => {
    let m = null;
    if (!Ne(n.value))
      m = s.value === 0 ? null : s.value--;
    else
      for (let b = s.value - 1; b >= 0; b--) {
        const I = i.value[b];
        if (!n.value({ row: I, rowIndex: b })) {
          m = b;
          break;
        }
      }
    return m;
  }), T = _(() => u(t.value, { suffix: "", digits: 0 })), S = _(() => u(f.value, { suffix: "", digits: 0 }));
  return {
    countAllRowsFormatted: T,
    currentRow: A,
    nextAvailableRowIndex: E,
    previousAvailableRowIndex: p,
    rowNumber: f,
    rowNumberFormatted: S
  };
}
const FH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8"/>
</svg>`, qH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8"/>
</svg>`, $H = {
  name: "ATablePreviewRight",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    isLoadingTable: {
      type: Boolean,
      required: !1
    },
    isMobile: {
      type: Boolean,
      required: !1
    },
    limitPagination: {
      type: Number,
      required: !1,
      default: void 0
    },
    offsetPagination: {
      type: Number,
      required: !1,
      default: void 0
    },
    previewStyles: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    rows: {
      type: Array,
      required: !0
    },
    usePagination: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "closePreview",
    "mousedownResizePreviewRight",
    "mousemoveResizePreviewRight",
    "mouseupResizePreviewRight",
    "togglePreviewResize",
    "togglePreview",
    "update:offset"
  ],
  inject: [
    "isLoadingOptions"
  ],
  setup(e, t) {
    const n = d(e, "isMobile"), {
      previewRef: r
    } = JS(), {
      idLocal: s
    } = PH(), {
      mousedown: i,
      mousemove: o,
      mouseup: u
    } = xH(t, {
      previewRef: r
    }), {
      countAllRowsFormatted: f,
      currentRow: A,
      nextAvailableRowIndex: E,
      previousAvailableRowIndex: p,
      rowNumber: T,
      rowNumberFormatted: S
    } = MH(e), {
      disabledBtnArrowLeft: m,
      disabledBtnArrowRight: b,
      toNextRow: I,
      toPreviousRow: v
    } = wH(e, t, {
      nextAvailableRowIndex: E,
      previousAvailableRowIndex: p,
      rowNumber: T
    });
    return jr(() => {
      n.value || t.emit("togglePreviewResize", {
        isOpen: !0,
        previewRef: r.value
      });
    }), Ot(() => {
      n.value || t.emit("togglePreviewResize", {
        isOpen: !1,
        previewRef: r.value
      });
    }), {
      countAllRowsFormatted: f,
      currentRow: A,
      disabledBtnArrowLeft: m,
      disabledBtnArrowRight: b,
      idLocal: s,
      mousedown: i,
      mousemove: o,
      mouseup: u,
      previewRef: r,
      rowNumber: T,
      rowNumberFormatted: S,
      toNextRow: I,
      toPreviousRow: v
    };
  },
  render() {
    const e = [
      this.isLoadingTable ? c(vl) : c("div", {}, [
        c(pe, {
          class: "a_table__preview_right__header__text",
          tag: "span",
          text: "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_",
          extra: {
            rowNumber: this.rowNumber,
            rowNumberFormatted: this.rowNumberFormatted,
            countAllRows: this.countAllRows,
            countAllRowsFormatted: this.countAllRowsFormatted
          }
        }),
        c("div", {
          class: "a_table__preview_right__header__icons"
        }, [
          c(pt, {
            class: "a_btn a_btn_transparent_dark a_btn_small",
            disabled: this.disabledBtnArrowLeft,
            iconLeft: FH,
            title: "_A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_",
            textScreenReader: "_A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_",
            onClick: this.toPreviousRow
          }),
          c(pt, {
            class: "a_btn a_btn_transparent_dark a_btn_small",
            disabled: this.disabledBtnArrowRight,
            iconLeft: qH,
            title: "_A_TABLE_PREVIEW_RIGHT_NEXT_ROW_",
            textScreenReader: "_A_TABLE_PREVIEW_RIGHT_NEXT_ROW_",
            onClick: this.toNextRow
          })
        ])
      ]),
      this.isMobile ? "" : c(pt, {
        class: "a_btn a_btn_transparent_dark a_table__preview_right__btn_close",
        iconLeft: Ta,
        iconClass: "a_table__preview_right__btn_close__icon",
        title: "_A_TABLE_PREVIEW_RIGHT_CLOSE_",
        textScreenReader: "_A_TABLE_PREVIEW_RIGHT_CLOSE_",
        onClick: () => this.$emit("closePreview")
      })
    ], t = [
      this.isLoadingTable ? c(vl) : this.$slots.preview ? this.$slots.preview({
        row: this.currentRow,
        rowIndex: this.rowIndex
      }) : c(pe, {
        text: "_A_TABLE_PREVIEW_RIGHT_HAS_NOT_SLOT_"
      })
    ];
    return this.isMobile ? c(Vu, {
      hideFooter: !0,
      close: () => this.$emit("closePreview"),
      size: "xxl"
    }, {
      modalHeader: () => e,
      modalBody: () => t
    }) : c("div", {
      ref: "previewRef",
      id: this.idLocal,
      class: "a_table__preview_right",
      style: this.previewStyles,
      tabindex: -1
    }, [
      c(Hk, {
        class: "a_table__preview_right__resizer",
        direction: "x",
        disabled: this.isLoadingOptions,
        onMousedown: this.mousedown,
        onMousemove: this.mousemove,
        onMouseup: this.mouseup,
        onMouseoutDocument: this.mouseup
      }),
      c(pe, {
        class: "a_sr_only",
        text: "_A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_"
      }),
      c("div", {
        class: "a_table__preview_right__header"
      }, e),
      c("div", {
        class: "a_table__preview_right__body"
      }, t)
    ]);
  }
};
function UH() {
  const e = de("tableId"), t = [
    "additionalProps"
  ], n = _(() => `${e.value}_`);
  return {
    excludeRenderAttributes: t,
    idPrefix: n
  };
}
function kH(e) {
  const t = d(e, "additionalSortingColumns"), n = de("columnsOrdered", []), r = _(() => [
    ...mt(n.value, (o) => o.sortId),
    ...t.value
  ]), s = _(() => $a(r.value, "sortId")), i = _(() => r.value.length);
  return {
    columnsAll: r,
    columnsAllKeyBySortId: s,
    countColumnsAll: i
  };
}
function HH(e, {
  columnsAll: t = _(() => [])
}) {
  const n = B(void 0), r = B(!1), s = _(() => t.value.length > 0);
  return {
    closeDropdown: () => {
      var o;
      (o = n.value) == null || o.onClose({ trigger: "click" });
    },
    dropdownRef: n,
    isDropdownVisible: s,
    wasOpenDropdown: r
  };
}
function VH(e, {
  columnsAll: t = _(() => []),
  columnsAllKeyBySortId: n = _(() => ({})),
  unappliedModelSort: r = B([])
}) {
  const s = B([]), i = [
    {
      label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_",
      id: "asc"
    },
    {
      label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_",
      id: "desc"
    }
  ], o = _(() => mt(t.value, (f) => !xc(r.value, ["sortId", f.sortId])));
  return {
    dataForForm: s,
    initDataForForm: () => {
      const f = [];
      z(r.value, ({ sortId: A }, E) => {
        const p = E === 0, T = he(o.value);
        A && n.value[A] && T.unshift(n.value[A]), f.push({
          type: "fieldset",
          id: `group_${A}`,
          label: p ? "_A_TABLE_SORT_ADDITIONAL_SORT_BY_" : "_A_TABLE_SORT_ADDITIONAL_THEN_BY_",
          children: [
            {
              id: `[${E}].sortId`,
              type: "select",
              classColumn: "a_column a_column_12_touch a_column_7_fullhd a_column_7_widescreen a_column_7_desktop",
              deselectable: !1,
              data: T,
              keyId: "sortId",
              keyLabel: "label",
              translateData: !0,
              search: !0,
              label: "_A_TABLE_SORT_ADDITIONAL_COLUMN_"
            },
            {
              id: `[${E}].sortMode`,
              type: "select",
              classColumn: "a_column a_column_12_touch a_column_5_fullhd a_column_5_widescreen a_column_5_desktop a_d_flex a_align_items_center",
              class: "a_width_100",
              deselectable: !1,
              data: i,
              keyId: "id",
              keyLabel: "label",
              translateData: !0,
              search: !1,
              label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_",
              slotAppend: "slotAppend",
              additionalProps: {
                index: E
              }
            }
          ]
        });
      }), s.value = f;
    }
  };
}
function WH(e, {
  closeDropdown: t = () => {
  },
  countColumnsAll: n = _(() => 0),
  initDataForForm: r = () => {
  },
  unappliedModelSort: s = B([]),
  wasOpenDropdown: i = B(!1)
}) {
  const o = d(e, "isSortingMultiColumn"), u = d(e, "modelSort"), f = de("changeModelSort"), A = de("tableId"), E = ({ model: D } = {}) => {
    if (i.value && !D)
      return;
    i.value = !0;
    const w = D || he(u.value);
    w.length < n.value && w.push(void 0), o.value || w.length > 1 && (w.length = 1);
    const F = [];
    z(w, (P) => {
      const M = P && P.replace(/^-/, ""), O = kc(P, "-") ? "desc" : "asc";
      F.push({
        sortId: M,
        sortMode: O
      });
    }), s.value = F, r({ unappliedModelSort: F });
  }, p = ({ model: D }) => !o.value || D.length >= n.value ? !1 : !!vi(D).sortId, T = ({ model: D }) => {
    p({ model: D }) && D.push({
      sortId: void 0,
      sortMode: "asc"
    }), s.value = D, r({ unappliedModelSort: s.value });
  }, S = ({ item: D }) => {
    var M, O;
    const w = D.additionalProps.index;
    w === s.value.length - 1 ? s.value[w].sortId = void 0 : s.value.splice(w, 1);
    const P = s.value.length - 1;
    (O = (M = s.value) == null ? void 0 : M[P]) != null && O.sortId && s.value.push({
      sortId: void 0,
      sortMode: "asc"
    }), r({ unappliedModelSort: s.value });
  }, m = () => {
    const D = [];
    z(s.value, (w) => {
      w.sortId && D.push(`${w.sortMode === "asc" ? "" : "-"}${w.sortId}`);
    }), f({
      modelAll: D
    }), t();
  }, b = ({ modelSort: D = [], tableId: w }) => {
    w === A.value && E({ model: D });
  }, I = () => {
    gt.$on("changeTableSorting", b);
  }, v = () => {
    gt.$off("changeTableSorting", b);
  }, g = _(() => {
    var D;
    return ((D = u.value) == null ? void 0 : D.length) || 0;
  }), R = _(() => {
    if (g.value)
      return g.value;
  });
  return {
    changeModelSortInTable: m,
    countModelSort: g,
    destroyEventBus: v,
    initEventBus: I,
    initUnappliedModelSort: E,
    removeUnappliedModelSort: S,
    textCountModelSort: R,
    updateUnappliedModelSort: T
  };
}
const fp = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down-up" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M11.5 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L11 2.707V14.5a.5.5 0 0 0 .5.5m-7-14a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L4 13.293V1.5a.5.5 0 0 1 .5-.5"/>
</svg>`, GH = {
  name: "ATableSortingAdditional",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelSort: {
      type: Array,
      required: !1
    }
  },
  setup(e) {
    const t = B([]), {
      columnsAll: n,
      columnsAllKeyBySortId: r,
      countColumnsAll: s
    } = kH(e), {
      dataForForm: i,
      initDataForForm: o
    } = VH(e, {
      columnsAll: n,
      columnsAllKeyBySortId: r,
      unappliedModelSort: t
    }), {
      closeDropdown: u,
      dropdownRef: f,
      isDropdownVisible: A,
      wasOpenDropdown: E
    } = HH(e, {
      columnsAll: n
    }), {
      changeModelSortInTable: p,
      countModelSort: T,
      destroyEventBus: S,
      initEventBus: m,
      initUnappliedModelSort: b,
      removeUnappliedModelSort: I,
      textCountModelSort: v,
      updateUnappliedModelSort: g
    } = WH(e, {
      closeDropdown: u,
      countColumnsAll: s,
      initDataForForm: o,
      unappliedModelSort: t,
      wasOpenDropdown: E
    }), {
      excludeRenderAttributes: R,
      idPrefix: D
    } = UH();
    return m(), Ot(() => {
      S();
    }), {
      changeModelSortInTable: p,
      closeDropdown: u,
      countModelSort: T,
      dataForForm: i,
      dropdownRef: f,
      excludeRenderAttributes: R,
      idPrefix: D,
      initUnappliedModelSort: b,
      isDropdownVisible: A,
      removeUnappliedModelSort: I,
      textCountModelSort: v,
      unappliedModelSort: t,
      updateUnappliedModelSort: g,
      wasOpenDropdown: E
    };
  },
  render() {
    return this.isDropdownVisible ? c(_a, {
      ref: "dropdownRef",
      buttonClass: "a_btn a_btn_secondary a_table__action",
      buttonIconLeft: fp,
      buttonText: this.textCountModelSort,
      buttonTextAriaHidden: !0,
      buttonTitle: "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_",
      buttonTextScreenReader: "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_",
      buttonTextClass: "a_badge a_bg_primary",
      disabled: this.disabledSort,
      dropdownClass: "a_filter_horizontal__wrapper",
      dropdownRenderDefault: !1,
      dropdownTag: "div",
      hasCaret: !1,
      inBody: !0,
      extra: {
        count: this.countModelSort
      },
      isCloseByClickInside: !1,
      lockArrowsNavigation: !1,
      lockTabNavigation: !1,
      onOpen: this.initUnappliedModelSort
    }, {
      dropdown: () => c("div", {
        class: "a_filter_horizontal"
      }, [
        c("div", {
          class: "a_filter_horizontal__header__wrapper"
        }, [
          c("div", {
            class: "a_filter_horizontal__header"
          }, [
            c("div", {
              class: "a_filter_horizontal__header__texts"
            }, [
              c(pe, {
                class: "a_filter_horizontal__header__texts__filter",
                tag: "span",
                text: "_A_TABLE_SORT_ADDITIONAL_HEADER_"
              })
            ])
          ])
        ]),
        c("div", {
          class: "a_filter_horizontal__body__wrapper"
        }, [
          c("div", {
            class: "a_filter_horizontal__body"
          }, [
            c(Uu, {
              idPrefix: this.idPrefix,
              class: "a_filter_horizontal__body__form",
              classColumnDefault: "",
              classColumns: "",
              data: this.dataForForm,
              excludeRenderAttributes: this.excludeRenderAttributes,
              modelValue: this.unappliedModelSort,
              showErrors: !1,
              onChange: this.updateUnappliedModelSort
            }, {
              slotAppend: ({ item: e }) => {
                var t, n;
                return c(Ee, {
                  type: "button",
                  class: "a_btn a_btn_primary a_ml_2",
                  title: "_A_TABLE_SORT_ADDITIONAL_BTN_DELETE_",
                  textScreenReader: "_A_TABLE_SORT_ADDITIONAL_BTN_DELETE_",
                  disabled: !((n = (t = this.unappliedModelSort) == null ? void 0 : t[e.additionalProps.index]) != null && n.sortId),
                  iconLeft: Ta,
                  onClick: () => this.removeUnappliedModelSort({ item: e })
                });
              }
            })
          ]),
          c("div", {
            class: "a_filter_horizontal__footer"
          }, [
            c("div", {
              class: "a_filter_horizontal__footer__actions"
            }, [
              c(Ee, {
                type: "button",
                class: "a_btn a_btn_primary a_text_nowrap a_filter_horizontal__footer__actions__btn_search",
                iconLeft: fp,
                text: "_A_TABLE_SORT_ADDITIONAL_START_",
                disabled: this.disabledSort,
                onClick: this.changeModelSortInTable
              }),
              c(Ee, {
                type: "button",
                class: "a_btn a_btn_secondary a_text_nowrap a_filter_horizontal__footer__actions__btn_close",
                text: "_A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_",
                onClick: this.closeDropdown
              })
            ])
          ])
        ])
      ])
    }) : null;
  }
};
function jH(e, { emit: t }) {
  const n = d(e, "areAllRowsSelected"), r = d(e, "closeMultipleActionsActive"), s = d(e, "multipleActions"), i = d(e, "selectedRows"), o = d(e, "tableActions"), u = de("tableId"), f = de("currentMultipleActions"), A = de("rowsLocalAll"), {
    closeConfirm: E,
    openConfirm: p
  } = mf(), T = _(() => `${u.value}_btn_multiple`), S = _(() => {
    const R = [];
    return z(he(o.value), (D) => {
      if (!D.isHidden) {
        if (Ne(D.callback)) {
          const w = D.callback;
          D.callback = () => w({
            id: D.id,
            action: D
          });
        }
        R.push(D);
      }
    }), R;
  }), m = ({ action: R, callbackDefault: D }) => {
    const w = he(R);
    w.callback = D, t("toggleMultipleActionsActive", { isActive: !0, action: w });
  }, b = () => {
    t("toggleMultipleActionsActive", { action: f.value });
  }, I = _(() => {
    const R = he(s.value);
    return z(R, (D) => {
      if (Ne(D.callback)) {
        const w = D.callback;
        D.callback = () => m({ action: D, callbackDefault: w });
      }
    }), R;
  }), v = async () => {
    await f.value.callback({
      close: r.value,
      rows: i.value,
      rowsVisible: A.value,
      id: T.value,
      areAllRowsSelected: n.value,
      action: f.value
    }), E(), b();
  };
  return {
    buttonMultipleId: T,
    currentMultipleActions: f,
    multipleActionsFiltered: I,
    onCancelMultipleActions: b,
    onOpenModalMultipleActions: () => {
      f.value.isConfirm ? p({
        headerText: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_",
        bodyHtml: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_",
        saveButtonText: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_",
        extra: {
          action: Dt({
            placeholder: f.value.text
          }),
          selectedRows: i.value.length
        },
        save: v
      }) : f.value.callback({
        close: r.value,
        rows: i.value,
        rowsVisible: A.value,
        id: T.value,
        areAllRowsSelected: n.value,
        action: f.value
      });
    },
    tableActionsFiltered: S
  };
}
function KH(e) {
  const t = d(e, "countAllRows"), {
    filterFloat: n
  } = jn();
  return {
    countAllRowsFormatted: _(() => `(${n(t.value, { digits: 0 })})`)
  };
}
function zH() {
  const e = de("tableId");
  return {
    tableLabelId: _(() => jS({ tableId: e.value }))
  };
}
function YH(e, { emit: t }) {
  const n = d(e, "areAllRowsSelected"), r = d(e, "areSomeRowsSelected"), s = d(e, "countAllRows"), i = d(e, "isLoadingMultipleActions"), o = d(e, "selectedRows"), u = de("tableId"), {
    filterFloat: f
  } = jn(), A = _(() => GS({ tableId: u.value })), E = _(() => n.value ? s.value : o.value.length), p = _(() => ({
    countSelectedRows: E.value,
    countSelectedRowsFiltered: f(E.value, { digits: 0 }),
    countAllRows: s.value,
    countAllRowsFiltered: f(s.value, { digits: 0 })
  })), T = _(() => n.value ? "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_" : "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_"), S = _(() => !!(i.value || s.value === 0)), m = () => {
    S.value || t("toggleBtnAllRows");
  };
  return {
    isBtnMultipleActionDisabled: _(() => !r.value && !n.value),
    isBtnSelectAllRowsDisabled: S,
    multiplePanelId: A,
    textMultipleBtnAllRowsTranslate: T,
    textMultipleSelectedTranslateExtra: p,
    toggleBtnAllRows: m
  };
}
function XH(e, { emit: t }) {
  const n = d(e, "useViewSlot"), r = (i) => {
    t("updateViewCurrent", i);
  }, s = _(() => n.value ? "viewSlot" : void 0);
  return {
    updateViewCurrentLocal: r,
    viewSlotLocal: s
  };
}
const ZH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-ui-checks" viewBox="0 0 16 16">
  <path d="M7 2.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5zM2 1a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2zm0 8a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2zm.854-3.646a.5.5 0 0 1-.708 0l-1-1a.5.5 0 1 1 .708-.708l.646.647 1.646-1.647a.5.5 0 1 1 .708.708zm0 8a.5.5 0 0 1-.708 0l-1-1a.5.5 0 0 1 .708-.708l.646.647 1.646-1.647a.5.5 0 0 1 .708.708zM7 10.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5zm0-5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m0 8a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5"/>
</svg>`, JH = {
  name: "ATableTopPanel",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    closeMultipleActionsActive: {
      type: Function,
      required: !0
    },
    countAllRows: {
      type: Number,
      required: !0
    },
    disabledActions: {
      type: Boolean,
      required: !0
    },
    disabledMultipleActions: {
      type: Boolean,
      required: !0
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    disabledViews: {
      type: Boolean,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasViews: {
      type: Boolean,
      required: !0
    },
    isLabelVisible: {
      type: Boolean,
      required: !1
    },
    isLoadingMultipleActions: {
      type: Boolean,
      required: !1
    },
    isQuickSearch: {
      type: Boolean,
      required: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !0
    },
    modelQuickSearch: {
      type: String,
      required: !0
    },
    modelSort: {
      type: Array,
      required: !1
    },
    modelView: {
      type: String,
      required: !1,
      default: void 0
    },
    multipleActions: {
      type: Array,
      required: !0
    },
    selectedRows: {
      type: Array,
      required: !0
    },
    showCount: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tableActions: {
      type: Array,
      required: !0
    },
    tableActionsIndexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: -1
    },
    tableActionsIndexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: 0
    },
    useAdditionalSorting: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useViewSlot: {
      type: Boolean,
      required: !1
    },
    viewCurrent: {
      type: Object,
      required: !1,
      default: void 0
    },
    views: {
      type: Array,
      required: !0
    }
  },
  emits: [
    "toggleBtnAllRows",
    "toggleMultipleActionsActive",
    "updateModelQuickSearch",
    "updateViewCurrent"
  ],
  inject: [
    "isMultipleActionsActive",
    "rowsLocalAll",
    "tableId"
  ],
  setup(e, t) {
    const {
      tableLabelId: n
    } = zH(), {
      filterCurrency: r
    } = jn(), {
      buttonMultipleId: s,
      currentMultipleActions: i,
      multipleActionsFiltered: o,
      onCancelMultipleActions: u,
      onOpenModalMultipleActions: f,
      tableActionsFiltered: A
    } = jH(e, t), {
      isBtnMultipleActionDisabled: E,
      isBtnSelectAllRowsDisabled: p,
      multiplePanelId: T,
      textMultipleBtnAllRowsTranslate: S,
      textMultipleSelectedTranslateExtra: m,
      toggleBtnAllRows: b
    } = YH(e, t), {
      updateViewCurrentLocal: I,
      viewSlotLocal: v
    } = XH(e, t), {
      countAllRowsFormatted: g
    } = KH(e);
    return {
      buttonMultipleId: s,
      countAllRowsFormatted: g,
      currentMultipleActions: i,
      filterCurrency: r,
      isBtnMultipleActionDisabled: E,
      isBtnSelectAllRowsDisabled: p,
      multipleActionsFiltered: o,
      multiplePanelId: T,
      onCancelMultipleActions: u,
      onOpenModalMultipleActions: f,
      tableActionsFiltered: A,
      tableLabelId: n,
      textMultipleBtnAllRowsTranslate: S,
      textMultipleSelectedTranslateExtra: m,
      toggleBtnAllRows: b,
      updateViewCurrentLocal: I,
      viewSlotLocal: v
    };
  },
  methods: {
    updateModelQuickSearch(e) {
      this.$emit("updateModelQuickSearch", e);
    }
  },
  render() {
    var e, t, n, r;
    return [
      c("div", {
        class: "a_table__top_panel"
      }, [
        this.isLabelVisible ? this.$slots.tableLabel ? this.$slots.tableLabel({
          countAllRows: this.countAllRows,
          tableLabelId: this.tableLabelId
        }) : c(this.labelTag, {
          class: ["a_table__top_panel__label", this.labelClass]
        }, [
          c(pe, {
            id: this.tableLabelId,
            tag: "span",
            class: "a_table__top_panel__label__text",
            text: this.label,
            extra: this.extra
          }),
          this.showCount ? c(Ee, {
            class: "a_table__top_panel__label__count",
            extra: {
              count: this.countAllRows
            },
            tag: "span",
            text: this.countAllRowsFormatted,
            textAriaHidden: !0,
            textScreenReader: "_A_TABLE_ALL_ROWS_{{count}}_",
            title: "_A_TABLE_ALL_ROWS_{{count}}_",
            type: "text"
          }) : ""
        ]) : "",
        c("div", {
          class: "a_table__top_panel__actions"
        }, [
          this.$slots.tableActionsPrepend ? this.$slots.tableActionsPrepend({
            isMultipleActionsActive: this.isMultipleActionsActive,
            modelView: this.modelView
          }) : "",
          c(sc, {
            actions: this.tableActionsFiltered,
            actionsClasses: [],
            disabled: this.isMultipleActionsActive || this.disabledActions,
            indexFirstDropdownAction: this.tableActionsIndexFirstDropdownAction,
            indexFirstDropdownActionMobile: this.tableActionsIndexFirstDropdownActionMobile,
            minDropdownActions: 0,
            dropdownAttributes: {
              buttonClass: "a_btn a_btn_secondary a_table__action",
              buttonIconLeft: Ul,
              buttonText: {
                desktop: "_A_TABLE_ACTIONS_"
              },
              hasCaret: !1,
              inBody: !0,
              placement: "bottom-end"
            }
          }),
          c(sc, {
            actions: this.multipleActionsFiltered,
            actionsClasses: [],
            disabled: this.isMultipleActionsActive || this.disabledMultipleActions,
            indexFirstDropdownAction: 0,
            indexFirstDropdownActionMobile: 0,
            minDropdownActions: 0,
            dropdownAttributes: {
              id: this.buttonMultipleId,
              buttonClass: "a_btn a_btn_secondary a_table__action",
              buttonText: {
                desktop: "_A_TABLE_MULTIPLE_ACTIONS_"
              },
              buttonIconLeft: ZH,
              inBody: !0,
              placement: "bottom-end"
            }
          }),
          this.isQuickSearch ? c(Rn, {
            label: "_A_TABLE_QUICK_SEARCH_",
            class: "a_table__top_panel__actions__quick_search",
            modelUndefined: "",
            modelValue: this.modelQuickSearch,
            iconPrepend: BS,
            "onUpdate:modelValue": this.updateModelQuickSearch
          }) : "",
          this.hasViews ? c(bS, {
            modelValue: this.modelView,
            class: "a_d_inline_block",
            isButtonGroup: !0,
            disabled: this.disabledViews,
            slotName: this.viewSlotLocal,
            data: this.views,
            keyId: "id",
            keyLabel: "label",
            hasBorder: !1,
            classFieldset: "a_p_0",
            "onUpdate:modelValue": this.updateViewCurrentLocal
          }, {
            viewSlot: (s) => this.$slots.viewSlot && this.$slots.viewSlot({
              ...s
            })
          }) : "",
          this.useAdditionalSorting ? c(GH, {
            additionalSortingColumns: this.additionalSortingColumns,
            disabledSort: this.disabledSort,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSort
          }) : "",
          this.$slots.tableActionsAppend ? this.$slots.tableActionsAppend({
            isMultipleActionsActive: this.isMultipleActionsActive,
            modelView: this.modelView
          }) : ""
        ])
      ]),
      this.isMultipleActionsActive && this.currentMultipleActions ? c("div", {
        id: this.multiplePanelId,
        class: "a_table__multiple_panel"
      }, [
        c("div", {
          class: "a_table__multiple_panel__header"
        }, [
          c(pe, {
            class: "a_table__multiple_panel__header__text",
            tag: "strong",
            text: "_A_TABLE_MULTIPLE_ACTIONS_"
          }),
          c("div", {
            class: "a_table__multiple_panel__items"
          }, [
            c(pe, {
              class: "a_table__multiple_panel__items__selected",
              tag: "span",
              text: "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_",
              extra: this.textMultipleSelectedTranslateExtra
            }),
            ((e = this.currentMultipleActions) == null ? void 0 : e.isAllRowsSelected) && c(pt, {
              class: "a_btn a_btn_secondary a_table__multiple_panel__btn_all_rows",
              type: "button",
              text: this.textMultipleBtnAllRowsTranslate,
              extra: this.textMultipleSelectedTranslateExtra,
              disabled: this.isBtnSelectAllRowsDisabled || this.disabledMultipleActions,
              loading: this.isLoadingMultipleActions,
              onClick: this.toggleBtnAllRows
            })
          ])
        ]),
        c("div", {
          class: "a_table__multiple_panel__actions"
        }, [
          (t = this.currentMultipleActions) != null && t.slot && this.$slots.multipleActionActiveSlot ? this.$slots.multipleActionActiveSlot({
            disabled: this.isBtnMultipleActionDisabled || this.isLoadingMultipleActions || this.disabledMultipleActions,
            loading: this.isLoadingMultipleActions,
            text: (n = this.currentMultipleActions) == null ? void 0 : n.text,
            action: this.currentMultipleActions,
            onClick: this.onOpenModalMultipleActions,
            close: this.closeMultipleActionsActive,
            rows: this.selectedRows,
            rowsVisible: this.rowsLocalAll,
            id: this.buttonMultipleId,
            areAllRowsSelected: this.areAllRowsSelected
          }) : c(pt, {
            class: "a_btn a_btn_primary a_table__action",
            type: "button",
            disabled: this.isBtnMultipleActionDisabled || this.isLoadingMultipleActions || this.disabledMultipleActions,
            text: (r = this.currentMultipleActions) == null ? void 0 : r.text,
            loading: this.isLoadingMultipleActions,
            loadingAlign: "left",
            onClick: this.onOpenModalMultipleActions
          }),
          c(pt, {
            class: "a_btn a_btn_secondary a_table__action",
            type: "button",
            text: "_A_TABLE_MULTIPLE_CANCEL_",
            onClick: this.onCancelMultipleActions
          })
        ])
      ]) : ""
    ];
  }
};
function QH() {
  const e = B(void 0);
  return {
    componentRef: e,
    setFocusToComponent: () => {
      var n;
      (n = e.value) == null || n.focus({ preventScroll: !0 });
    }
  };
}
const eV = {
  name: "ATablePreviewDown",
  props: {
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    }
  },
  inject: [
    "onTogglePreview"
  ],
  setup() {
    const {
      componentRef: e,
      setFocusToComponent: t
    } = QH();
    return jr(() => {
      t();
    }), {
      componentRef: e
    };
  },
  render() {
    return c("div", {
      ref: "componentRef",
      class: "a_table__preview_down",
      tabindex: -1
    }, [
      c(pe, {
        class: "a_sr_only",
        text: "_A_TABLE_PREVIEW_DOWN_ARIA_LABEL_"
      }),
      this.$slots.preview && this.$slots.preview({
        row: this.row,
        rowIndex: this.rowIndex
      }),
      c(pt, {
        class: "a_btn a_btn_transparent_dark a_table__preview_down__btn_close",
        iconLeft: Ta,
        iconClass: "a_table__preview_down__btn_close__icon",
        title: "_A_TABLE_PREVIEW_DOWN_CLOSE_",
        textScreenReader: "_A_TABLE_PREVIEW_DOWN_CLOSE_",
        onClick: () => this.onTogglePreview({
          row: this.row,
          rowIndex: this.rowIndex
        })
      })
    ]);
  }
};
function tV(e) {
  const t = d(e, "column"), n = d(e, "disabledPreview"), r = d(e, "isFooter"), s = de("hasPreview"), i = de("isMobile"), {
    columnsStyles: o
  } = ZS(e);
  return {
    attributesForTd: _(() => {
      const f = {
        class: [
          "a_table__td a_table__cell",
          {
            a_table__cell_click: s.value && !r.value && !n.value
          },
          t.value.classRowParent
        ],
        style: o.value
      };
      return i.value || (f.role = "cell"), f;
    })
  };
}
function QS(e) {
  const t = d(e, "column"), n = d(e, "row"), r = _(() => !!t.value.to), s = _(() => {
    if (ot(t.value.to))
      return t.value.to;
    if (st(t.value.to)) {
      const o = he(t.value.to), u = o.params || {}, f = o.query || {};
      if (t.value.to.nameDynamic && !t.value.to.name) {
        const A = ce(n.value, t.value.to.nameDynamic);
        A && (o.name = A);
      }
      if (t.value.to.paramsDynamic) {
        let A = !1;
        if (z(t.value.to.paramsDynamic, (E, p) => {
          const T = ce(n.value, E);
          if (Pe(T))
            return A = !0, !1;
          u[p] = T;
        }), A)
          return;
      }
      if (t.value.to.queryDynamic) {
        let A = !1;
        if (z(t.value.to.queryDynamic, (E, p) => {
          const T = ce(n.value, E);
          if (Pe(T))
            return A = !0, !1;
          f[p] = T;
        }), A)
          return;
      }
      return o.params = u, o.query = f, o;
    }
  });
  return {
    classForLink: _(() => "a_btn a_btn_link a_p_0 a_text_left"),
    isLink: r,
    toLocal: s
  };
}
function eL(e) {
  const t = d(e, "column"), n = d(e, "isFooter"), r = _(() => n.value ? t.value.footerSlot : t.value.slot);
  return {
    hasSlot: _(() => !!r.value),
    slotName: r
  };
}
function tL(e) {
  const t = d(e, "column"), n = d(e, "isFooter"), r = d(e, "row"), s = de("columnsDefaultValue"), i = de("valuesForColumnDefault"), o = _(() => n.value && "footerDefaultValue" in t.value ? t.value.footerDefaultValue : "defaultValue" in t.value ? t.value.defaultValue : Pe(s.value) ? "" : s.value), u = _(() => n.value ? t.value.footerKeyLabel : t.value.keyLabel), f = _(() => n.value ? t.value.footerKeyLabelSafeHtml : t.value.keyLabelSafeHtml), A = _(() => n.value ? t.value.footerKeyLabelHtml : t.value.keyLabelHtml), E = _(() => {
    if (u.value)
      return ce(r.value, u.value);
  }), p = _(() => {
    if (f.value)
      return ce(r.value, f.value);
  }), T = _(() => {
    if (A.value)
      return ce(r.value, A.value);
  }), S = (g) => {
    let R = !1;
    return z(i.value, (D) => {
      if (g === D)
        return R = !0, !1;
    }), R ? o.value : g;
  }, m = _(() => S(E.value)), b = _(() => S(p.value)), I = _(() => S(T.value));
  return {
    textOrHtmlRender: _(() => {
      if (u.value)
        return c("span", null, m.value);
      if (f.value)
        return c("div", {
          innerHTML: b.value
        });
      if (A.value)
        return Nt(c("div"), [
          [Kt, I.value]
        ]);
    })
  };
}
const nL = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-right-fill" viewBox="0 0 16 16">
  <path d="m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z"/>
</svg>`, hp = {
  name: "ATableTd",
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    level: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    showIconChildren: {
      type: Boolean,
      required: !1
    }
  },
  inject: [
    "isMobile",
    "rowsLocalAll"
  ],
  setup(e) {
    const {
      attributesForTd: t
    } = tV(e), {
      classForLink: n,
      isLink: r,
      toLocal: s
    } = QS(e), {
      hasSlot: i,
      slotName: o
    } = eL(e), {
      textOrHtmlRender: u
    } = tL(e);
    return {
      attributesForTd: t,
      classForLink: n,
      hasSlot: i,
      isLink: r,
      slotName: o,
      textOrHtmlRender: u,
      toLocal: s
    };
  },
  render() {
    const e = c(
      "div",
      this.attributesForTd,
      [
        c("div", {
          class: [
            "a_table__cell__child",
            this.column.class,
            this.column.classRow
          ]
        }, [
          this.showIconChildren ? c(Ee, {
            "aria-hidden": !0,
            class: "a_table__row_level__icon",
            classDefault: "",
            iconLeft: nL,
            type: "text"
          }) : "",
          this.hasSlot && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            column: this.column,
            columnIndex: this.columnIndex,
            level: this.level,
            row: this.row,
            rowIndex: this.rowIndex,
            rows: this.rowsLocalAll
          }) : this.isLink && this.toLocal ? c(Vr("RouterLink"), {
            class: [
              this.column.class,
              this.classForLink,
              this.column.classRow
            ],
            to: this.toLocal
          }, () => [
            this.textOrHtmlRender
          ]) : this.textOrHtmlRender
        ])
      ]
    );
    return this.isMobile ? [
      c(pe, {
        text: this.column.label,
        tag: "dt"
      }),
      c("dd", {}, [
        e
      ])
    ] : e;
  }
}, Ap = {
  name: "ATableListItem",
  inject: [
    "rowsLocalAll"
  ],
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    isFooter: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      classForLink: t,
      isLink: n,
      toLocal: r
    } = QS(e), {
      hasSlot: s,
      slotName: i
    } = eL(e), {
      textOrHtmlRender: o
    } = tL(e);
    return {
      classForLink: t,
      hasSlot: s,
      isLink: n,
      slotName: i,
      textOrHtmlRender: o,
      toLocal: r
    };
  },
  render() {
    return [
      c(pe, {
        text: this.column.label,
        tag: "dt"
      }),
      c(
        "dd",
        null,
        this.hasSlot && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          column: this.column,
          columnIndex: this.columnIndex,
          row: this.row,
          rowIndex: this.rowIndex,
          rows: this.rowsLocalAll
        }) : this.isLink && this.toLocal ? [
          c(Vr("RouterLink"), {
            class: [
              this.column.class,
              this.classForLink,
              this.column.classRow
            ],
            to: this.toLocal
          }, () => [
            this.textOrHtmlRender
          ])
        ] : [
          this.textOrHtmlRender
        ]
      )
    ];
  }
};
function nV() {
  const e = de("columnsScrollInvisible"), t = de("modelIsTableWithoutScroll"), n = _(() => e.value.length), r = _(() => t.value ? n.value > 0 : !1);
  return {
    columnsScrollInvisibleText: _(() => n.value === 1 ? "_A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_" : "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_"),
    countColumnsScrollInvisible: n,
    isColumnsScrollInvisibleDropdownVisible: r
  };
}
function rV(e) {
  const t = d(e, "columnActionsView"), n = d(e, "isFooter"), r = d(e, "row"), s = d(e, "rowIndex"), i = de("columnActionsOnePlusDropdownOptions"), o = de("rowActions"), u = de("tableId"), f = _(() => `${u.value}_action_${s.value}`), A = _(() => Pe(i.value.indexFirstDropdownAction) ? 1 : i.value.indexFirstDropdownAction), E = ({ rowAction: O }) => {
    if (O.text)
      return O.text;
    if (Ne(O.textCallback))
      return O.textCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: O
      });
  }, p = ({ rowAction: O }) => {
    if (O.html)
      return O.html;
    if (Ne(O.htmlCallback))
      return O.htmlCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: O
      });
  }, T = ({ rowAction: O }) => {
    if (O.title)
      return O.title;
    if (Ne(O.titleCallback))
      return O.titleCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: O
      });
  }, S = ({ rowAction: O }) => O.disabled ? O.disabled : Ne(O.disabledCallback) ? O.disabledCallback({
    row: r.value,
    rowIndex: s.value,
    rowAction: O
  }) : !1, m = ({ rowAction: O }) => O.class ? O.class : Ne(O.classCallback) ? O.classCallback({
    row: r.value,
    rowIndex: s.value,
    rowAction: O
  }) : "", b = ({ rowAction: O }) => {
    if (O.iconLeft)
      return O.iconLeft;
    if (Ne(O.iconLeftCallback))
      return O.iconLeftCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: O
      });
  }, I = ({ rowAction: O }) => {
    if (O.iconRight)
      return O.iconRight;
    if (Ne(O.iconRightCallback))
      return O.iconRightCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: O
      });
  }, v = ({ rowAction: O }) => {
    if (ot(O.to))
      return O.to;
    if (st(O.to)) {
      const q = he(O.to), U = q.params || {}, G = q.query || {};
      if (O.to.nameDynamic && !O.to.name) {
        const te = ce(r.value, O.to.nameDynamic);
        te && (q.name = te);
      }
      if (O.to.paramsDynamic) {
        let te = !1;
        if (z(O.to.paramsDynamic, (re, ie) => {
          const le = ce(r.value, re);
          if (Pe(le))
            return te = !0, !1;
          U[ie] = le;
        }), te)
          return;
      }
      if (O.to.queryDynamic) {
        let te = !1;
        if (z(O.to.queryDynamic, (re, ie) => {
          const le = ce(r.value, re);
          if (Pe(le))
            return te = !0, !1;
          G[ie] = le;
        }), te)
          return;
      }
      return q.params = U, q.query = G, q;
    }
  }, g = ({ rowAction: O }) => O.href ? O.href : Ne(O.hrefCallback) ? O.hrefCallback({
    row: r.value,
    rowIndex: s.value,
    rowAction: O
  }) : !1, R = ({ rowAction: O }) => {
    if (O.extra)
      return O.extra;
    if (Ne(O.extraCallback))
      return O.extraCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: O
      });
  }, D = ({ rowAction: O }) => {
    if (O.textScreenReader)
      return O.textScreenReader;
    if (Ne(O.textScreenReaderCallback))
      return O.textScreenReaderCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: O
      });
  }, w = ({ rowActionIndexVisible: O }) => {
    if (t.value === "dropdown")
      return {
        id: f.value,
        ids: [f.value, u.value]
      };
    if (O < A.value) {
      const q = `${f.value}_${O}`;
      return {
        buttonId: q,
        id: q,
        ids: [q, u.value]
      };
    }
    return {
      id: f.value,
      ids: [f.value, u.value]
    };
  }, F = (O) => {
    z(O, (q, U) => {
      vw(U, "Callback") && (O[U] = void 0);
    });
  }, P = _(() => {
    const O = [];
    let q = 0;
    return z(he(o.value), (U) => {
      if (KS({
        rowAction: U,
        row: r.value,
        rowIndex: s.value
      })) {
        if (U.type !== "divider") {
          const G = E({ rowAction: U });
          G && (U.text = G);
          const te = p({ rowAction: U });
          te && (U.html = te);
          const re = T({ rowAction: U });
          re ? U.title = re : G && (U.title = G);
          const ie = S({ rowAction: U });
          ie && (U.disabled = ie);
          const le = m({ rowAction: U });
          le && (U.class = le);
          const oe = b({ rowAction: U });
          oe && (U.iconLeft = oe);
          const Te = I({ rowAction: U });
          Te && (U.iconRight = Te);
          const Be = R({ rowAction: U });
          Be && (U.extra = Be);
          const Ae = D({ rowAction: U });
          if (Be && (U.textScreenReader = Ae), U.type === "link") {
            const _e = v({ rowAction: U });
            _e ? U.to = _e : U.href = g({ rowAction: U });
          }
          if (Ne(U.callback)) {
            const {
              buttonId: _e,
              id: ve,
              ids: be
            } = w({
              rowActionIndexVisible: q
            });
            U.id = _e;
            const je = U.callback;
            U.callback = () => je({
              row: r.value,
              rowIndex: s.value,
              id: ve,
              ids: be,
              rowAction: U
            });
          }
          F(U), q++;
        }
        O.push(U);
      }
    }), O;
  }), M = _(() => !n.value && P.value.length > 0);
  return {
    buttonActionsId: f,
    isRowActionsDropdownVisible: M,
    rowActionsFiltered: P
  };
}
function aV(e) {
  const t = d(e, "rowIndex");
  return {
    rowNumber: _(() => t.value + 1)
  };
}
const sV = {
  name: "ATableTdAction",
  components: {
    AIcon: _t,
    ATableListItem: Ap
  },
  props: {
    columnActionsBtnGroupMaxWidthStyle: {
      type: String,
      required: !1,
      default: void 0
    },
    columnActionsView: {
      type: String,
      required: !0
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    }
  },
  inject: [
    "columnActionsOnePlusDropdownOptions",
    "columnsScrollInvisible",
    "tableId"
  ],
  setup(e) {
    const {
      isMobileWidth: t
    } = Sn(), {
      buttonActionsId: n,
      isRowActionsDropdownVisible: r,
      rowActionsFiltered: s
    } = rV(e), {
      columnsScrollInvisibleText: i,
      countColumnsScrollInvisible: o,
      isColumnsScrollInvisibleDropdownVisible: u
    } = nV(), {
      rowNumber: f
    } = aV(e), {
      stylesThTd: A
    } = YS();
    return {
      buttonActionsId: n,
      columnsScrollInvisibleText: i,
      countColumnsScrollInvisible: o,
      isColumnsScrollInvisibleDropdownVisible: u,
      isMobileWidth: t,
      isRowActionsDropdownVisible: r,
      rowActionsFiltered: s,
      rowNumber: f,
      stylesThTd: A
    };
  },
  render() {
    return c("div", {
      role: "cell",
      class: [
        "a_table__td a_table__cell a_table__cell_action",
        {
          a_table__cell_action_sticky: this.isRowActionsStickyLocal
        }
      ],
      ...this.stylesThTd
    }, [
      c("div", {
        class: [
          "a_table__cell__child",
          this.rowActionsClass
        ]
      }, [
        this.isColumnsScrollInvisibleDropdownVisible && c(_a, {
          buttonClass: "a_btn a_btn_link a_text_nowrap",
          buttonIconLeft: NS,
          buttonIconClass: "a_table__cell_action__additional_icon",
          buttonTitle: "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_",
          buttonTextScreenReader: "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_",
          buttonText: this.columnsScrollInvisibleText,
          buttonTextClass: "a_table__cell_action__additional_text",
          buttonTextAriaHidden: !0,
          extra: {
            count: this.countColumnsScrollInvisible
          },
          dropdownClass: "a_p_0 a_overflow_x_hidden a_table__extra_dropdown",
          dropdownTag: "div",
          hasCaret: !1,
          floatingFlip: {
            use: !0,
            fallbackPlacements: ["top-end", "left"]
          },
          inBody: !0,
          placement: "bottom-end",
          menuWidth: 600,
          isCloseByClickInside: !1
        }, {
          dropdown: () => [
            c("dl", {
              class: "a_list_dl a_list_dl_dt_right"
            }, [
              this.columnsScrollInvisible.map((e, t) => c(Ap, {
                column: e,
                columnIndex: t,
                row: this.row,
                rowIndex: this.rowIndex,
                isFooter: this.isFooter
              }, this.$slots))
            ])
          ]
        }),
        this.isRowActionsDropdownVisible || this.$slots.rowActions ? c("div", {
          class: "a_table__cell_action__group"
        }, [
          this.$slots.rowActions ? this.$slots.rowActions({
            tableId: this.tableId,
            row: this.row,
            rowIndex: this.rowIndex,
            isFooter: this.isFooter
          }) : "",
          this.isRowActionsDropdownVisible ? this.columnActionsView === "dropdown" || this.isMobileWidth && this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile === 0 ? c(_a, {
            id: this.buttonActionsId,
            actions: this.rowActionsFiltered,
            buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
            buttonIconLeft: Ul,
            buttonTextScreenReader: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
            buttonTitle: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
            disabled: this.disabledRowActions,
            extra: {
              rowNumber: this.rowNumber
            },
            hasCaret: !1,
            inBody: !0,
            placement: "bottom-end"
          }, this.$slots) : c(sc, {
            class: "a_d_inline_block",
            style: this.columnActionsBtnGroupMaxWidthStyle,
            actions: this.rowActionsFiltered,
            dropdownAttributes: {
              id: this.buttonActionsId,
              buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
              buttonIconLeft: Ha,
              buttonTextScreenReader: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
              buttonTitle: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
              extra: {
                rowNumber: this.rowNumber
              },
              hasCaret: !1,
              inBody: !0,
              placement: "bottom-end"
            },
            disabled: this.disabledRowActions,
            btnGroupClass: Pe(this.columnActionsOnePlusDropdownOptions.btnGroupClass) ? "a_btn_group a_btn_group_table" : this.columnActionsOnePlusDropdownOptions.btnGroupClass,
            hasDividerBeforeDropdown: this.columnActionsOnePlusDropdownOptions.hasDividerBeforeDropdown || !1,
            indexFirstDropdownAction: Pe(this.columnActionsOnePlusDropdownOptions.indexFirstDropdownAction) ? 1 : this.columnActionsOnePlusDropdownOptions.indexFirstDropdownAction,
            indexFirstDropdownActionMobile: Pe(this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile) ? 1 : this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile,
            minDropdownActions: Pe(this.columnActionsOnePlusDropdownOptions.minDropdownActions) ? 1 : this.columnActionsOnePlusDropdownOptions.minDropdownActions,
            actionsClasses: this.columnActionsOnePlusDropdownOptions.actionsClasses || ["a_btn a_btn_primary a_text_truncate"]
          }, this.$slots) : ""
        ]) : ""
      ])
    ]);
  }
};
function iV(e, {
  hasChildren: t = _(() => !1),
  hasPreviewLocal: n = _(() => !1),
  rowClassChildren: r = _(() => {
  }),
  rowClassLevelChildren: s = _(() => {
  }),
  rowClassPreview: i = _(() => {
  }),
  toggleChildren: o = () => {
  }
}) {
  const u = d(e, "disabledPreview"), f = d(e, "disabledPreviewRowCallback"), A = d(e, "isFooter"), E = d(e, "isTreeCollapsible"), p = d(e, "level"), T = d(e, "row"), S = d(e, "rowClass"), m = d(e, "rowIndex"), b = de("isMobile"), I = de("onTogglePreview"), v = de("tableId"), g = _(() => {
    const q = A.value ? "_footer" : "";
    return `${v.value}${q}_${m.value}`;
  }), R = _(() => Ne(S.value) ? S.value({
    level: p.value,
    row: T.value,
    rowindex: m.value
  }) : S.value), D = _(() => [
    "a_table__row a_table__body__row a_table__row_hover",
    r.value,
    s.value,
    i.value,
    R.value
  ]), w = _(() => b.value ? "listitem" : "row"), F = _(() => Ne(f.value) ? f.value({ row: T.value, rowIndex: m.value }) : u.value), P = (q) => {
    SH({
      $event: q,
      tagsName: [
        "A",
        "BUTTON",
        "INPUT",
        "LABEL"
      ],
      classStop: "a_table__row"
    }) || (t.value ? o() : n.value && I({
      row: T.value,
      rowIndex: m.value
    }));
  }, M = (q) => {
    q.keyCode === Z.enter && P(q);
  }, O = _(() => (E.value && t.value || n.value) && !F.value ? {
    tabindex: 0,
    onClick: P,
    onKeydown: M
  } : {});
  return {
    disabledPreviewRow: F,
    eventsLocal: O,
    roleLocal: w,
    rowClassComputed: D,
    rowHtmlId: g
  };
}
function lV(e, { emit: t }) {
  const n = d(e, "areAllRowsSelected"), r = d(e, "row"), s = d(e, "rowIndex"), i = d(e, "selectedRowsIndexes"), o = de("currentMultipleActions"), u = de("isMultipleActionsActive"), f = _(() => !!i.value[s.value] || n.value), A = _(() => {
    if (u.value) {
      if (Ne(ce(o.value, "isHiddenCallback")))
        return o.value.isHiddenCallback({
          row: r.value,
          rowIndex: s.value
        });
      if (n.value)
        return !0;
    }
    return !1;
  }), E = _(() => f.value ? "_A_TABLE_DESELECT_THIS_ROW_" : "_A_TABLE_SELECT_THIS_ROW_");
  return {
    isCheckboxDisabled: A,
    isRowSelected: f,
    labelCheckbox: E,
    toggleCheckbox: () => {
      A.value || t("setSelectedRowsIndexes", { rowIndex: s.value });
    }
  };
}
function oV(e) {
  const t = d(e, "isTree"), n = d(e, "keyChildren"), r = d(e, "level"), s = d(e, "row"), i = d(e, "rowIndex"), o = d(e, "rowsLength"), u = _(() => {
    if (!n.value)
      return [];
    const T = ce(s.value, n.value);
    return Se(T) ? T : [];
  }), f = _(() => u.value.length > 0), A = _(() => r.value + 1), E = _(() => t.value ? {
    "aria-level": r.value,
    "aria-posinset": i.value + 1,
    "aria-setsize": o.value
  } : {}), p = _(() => {
    if (t.value)
      return `a_table__row_level a_table__row_level_${r.value}`;
  });
  return {
    ariaTreeAttributes: E,
    children: u,
    hasChildren: f,
    levelForChildren: A,
    rowClassLevelChildren: p
  };
}
function uV(e, {
  hasChildren: t = _(() => !1)
}) {
  const n = d(e, "isOneOfParentsClose"), r = d(e, "isTreeCollapsible"), s = d(e, "isTreeOpened"), i = B(!1), o = _(() => {
    if (t.value)
      return i.value;
  }), u = _(() => ({
    a_table__row_has_children: t.value,
    a_table__row_hide: n.value,
    a_table__row_level_open: t.value && i.value
  })), f = _(() => !!(n.value || !i.value));
  return {
    ariaExpanded: o,
    initIsChildrenOpen: () => {
      (!r.value || s.value) && (i.value = !0);
    },
    isOneOfParentsCloseForChildren: f,
    rowClassChildren: u,
    toggleChildren: () => {
      i.value = !i.value;
    }
  };
}
function _V(e) {
  const t = d(e, "allVisibleMobileColumns"), n = d(e, "countVisibleMobileColumns"), r = de("isMobile"), s = B(!1), i = _(() => t.value.length - n.value), o = _(() => r.value && t.value.length > n.value), u = _(() => i.value === 1 ? "_A_TABLE_MOBILE_TR_PLUS_FIELD_" : "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_"), f = _(() => s.value ? "_A_TABLE_MOBILE_TR_CLOSE_" : u.value);
  return {
    countInvisibleMobileColumns: i,
    isAllColumnsVisibleMobile: s,
    isBtnToggleAllColumnsVisible: o,
    textBtnToggleAllColumns: f,
    toggleAllColumnsVisibleMobile: ({ $event: E }) => {
      s.value = !s.value, E.stopPropagation();
    }
  };
}
function dV(e, {
  hasChildren: t = _(() => !1)
}) {
  const n = d(e, "isFooter"), r = d(e, "rowIndex"), s = de("hasPreview"), i = de("previewRightRowIndex"), o = de("previewRightRowIndexLast"), u = _(() => !!(!t.value && s.value && !n.value)), f = _(() => r.value === i.value), A = _(() => !f.value && r.value === o.value), E = _(() => Dt({
    placeholder: f.value ? "_A_TABLE_ROW_PREVIEW_CLOSE_" : "_A_TABLE_ROW_PREVIEW_OPEN_"
  })), p = _(() => u.value ? {
    "aria-label": E.value
  } : {}), T = _(() => {
    if (u.value)
      return {
        a_table__row_preview_open: f.value,
        a_table__row_preview_was_open: A.value
      };
  });
  return {
    hasPreviewLocal: u,
    previewAttributes: p,
    rowClassPreview: T
  };
}
const Ep = {
  name: "ATableTr",
  props: {
    allVisibleMobileColumns: {
      type: Array,
      required: !0
    },
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    columnActionsBtnGroupMaxWidthStyle: {
      type: String,
      required: !1,
      default: void 0
    },
    columnActionsView: {
      type: String,
      required: !0
    },
    countVisibleMobileColumns: {
      type: Number,
      required: !0
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    isOneOfParentsClose: {
      type: Boolean,
      required: !1
    },
    isPreviewDownOpen: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isTree: {
      type: Boolean,
      required: !1
    },
    isTreeCollapsible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTreeOpened: {
      type: Boolean,
      required: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "id"
    },
    level: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowClass: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    selectedRowsIndexes: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  setup(e, t) {
    const {
      ariaTreeAttributes: n,
      children: r,
      hasChildren: s,
      levelForChildren: i,
      rowClassLevelChildren: o
    } = oV(e), {
      ariaExpanded: u,
      initIsChildrenOpen: f,
      isOneOfParentsCloseForChildren: A,
      rowClassChildren: E,
      toggleChildren: p
    } = uV(e, {
      hasChildren: s
    }), {
      hasPreviewLocal: T,
      previewAttributes: S,
      rowClassPreview: m
    } = dV(e, {
      hasChildren: s
    }), {
      disabledPreviewRow: b,
      eventsLocal: I,
      roleLocal: v,
      rowClassComputed: g,
      rowHtmlId: R
    } = iV(e, {
      hasChildren: s,
      hasPreviewLocal: T,
      rowClassChildren: E,
      rowClassLevelChildren: o,
      rowClassPreview: m,
      toggleChildren: p
    }), {
      countInvisibleMobileColumns: D,
      isAllColumnsVisibleMobile: w,
      isBtnToggleAllColumnsVisible: F,
      textBtnToggleAllColumns: P,
      toggleAllColumnsVisibleMobile: M
    } = _V(e), {
      isCheckboxDisabled: O,
      isRowSelected: q,
      labelCheckbox: U,
      toggleCheckbox: G
    } = lV(e, t);
    return f(), {
      ariaExpanded: u,
      ariaTreeAttributes: n,
      children: r,
      countInvisibleMobileColumns: D,
      disabledPreviewRow: b,
      eventsLocal: I,
      hasChildren: s,
      isAllColumnsVisibleMobile: w,
      isBtnToggleAllColumnsVisible: F,
      isCheckboxDisabled: O,
      isOneOfParentsCloseForChildren: A,
      isRowSelected: q,
      labelCheckbox: U,
      levelForChildren: i,
      previewAttributes: S,
      roleLocal: v,
      rowClassComputed: g,
      rowHtmlId: R,
      textBtnToggleAllColumns: P,
      toggleAllColumnsVisibleMobile: M,
      toggleCheckbox: G,
      toggleChildren: p
    };
  },
  inject: [
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMultipleActionsActive",
    "isMobile"
  ],
  render() {
    let e = [];
    this.isMobile && !this.isAllColumnsVisibleMobile ? z(this.allVisibleMobileColumns, (r, s) => {
      if (s + 1 > this.countVisibleMobileColumns)
        return !1;
      e.push(
        c(hp, {
          key: r.id,
          column: r,
          columnIndex: s,
          disabledPreview: this.disabledPreviewRow,
          level: this.level,
          row: this.row,
          rowIndex: this.rowIndex,
          isFooter: this.isFooter
        }, this.$slots)
      );
    }) : e = this.columnsFilteredForRender.map((r, s) => c(hp, {
      key: r.id,
      column: r,
      columnIndex: s,
      disabledPreview: this.disabledPreviewRow,
      level: this.level,
      row: this.row,
      rowIndex: this.rowIndex,
      isFooter: this.isFooter,
      showIconChildren: !!(this.isTreeCollapsible && this.hasChildren && s === 0)
    }, this.$slots));
    const t = this.isActionColumnVisible && c(sV, {
      columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
      columnActionsView: this.columnActionsView,
      disabledRowActions: this.disabledRowActions,
      row: this.row,
      rowIndex: this.rowIndex,
      isFooter: this.isFooter,
      rowActionsClass: this.rowActionsClass,
      isRowActionsStickyLocal: this.isRowActionsStickyLocal
    }, this.$slots), n = this.isMobile ? c("div", {
      class: "a_table_mobile__dl__wrapper"
    }, [
      this.$slots.rowMobilePrepend ? this.$slots.rowMobilePrepend({
        row: this.row,
        rowIndex: this.rowIndex,
        isFooter: this.isFooter
      }) : "",
      this.isTreeCollapsible && this.hasChildren ? c(Ee, {
        "aria-hidden": !0,
        class: "a_table__row_level__icon",
        classDefault: "",
        iconLeft: nL,
        type: "text"
      }) : "",
      c("dl", {
        class: "a_table_mobile__dl"
      }, e),
      this.$slots.rowMobileAppend ? this.$slots.rowMobileAppend({
        row: this.row,
        rowIndex: this.rowIndex,
        isFooter: this.isFooter
      }) : ""
    ]) : e;
    return [
      c("div", {
        id: this.rowHtmlId,
        role: this.roleLocal,
        class: this.rowClassComputed,
        "aria-expanded": this.ariaExpanded,
        ...this.previewAttributes,
        ...this.ariaTreeAttributes,
        ...this.eventsLocal
      }, [
        this.isMultipleActionsActive && c("div", {
          class: "a_table__td a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;"
        }, [
          !this.isFooter && c(qu, {
            isWidthAuto: !0,
            modelValue: this.isRowSelected,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        n,
        this.isMobile ? c("div", {
          class: "a_table_mobile__actions_parent"
        }, [
          this.isBtnToggleAllColumnsVisible && c(Ee, {
            class: "a_btn a_btn_link a_table_mobile__columns_btn_toggle",
            extra: {
              count: this.countInvisibleMobileColumns
            },
            text: this.textBtnToggleAllColumns,
            type: "button",
            onClick: this.toggleAllColumnsVisibleMobile
          }),
          t
        ]) : t
      ]),
      this.isPreviewDownOpen && c(eV, {
        row: this.row,
        rowIndex: this.rowIndex
      }, {
        preview: (r) => this.$slots.preview ? this.$slots.preview(r) : void 0
      }),
      this.hasChildren ? this.children.map((r, s) => c(Vr("ATableTr"), {
        key: r[this.keyId] || s,
        allVisibleMobileColumns: this.allVisibleMobileColumns,
        areAllRowsSelected: this.areAllRowsSelected,
        columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
        columnActionsView: this.columnActionsView,
        countVisibleMobileColumns: this.countVisibleMobileColumns,
        disabledPreview: this.disabledPreviewRow,
        disabledRowActions: this.disabledRowActions,
        isFooter: this.isFooter,
        isOneOfParentsClose: this.isOneOfParentsCloseForChildren,
        isPreviewDownOpen: !1,
        isRowActionsStickyLocal: this.isRowActionsStickyLocal,
        isTree: this.isTree,
        isTreeCollapsible: this.isTreeCollapsible,
        isTreeOpened: this.isTreeOpened,
        keyChildren: this.keyChildren,
        keyId: this.keyId,
        level: this.levelForChildren,
        row: r,
        rowActionsClass: this.rowActionsClass,
        rowClass: this.rowClass,
        rowIndex: s,
        rowsLength: this.children.length,
        selectedRowsIndexes: this.selectedRowsIndexes
      }, {
        get: (i) => [
          c(ac, {
            data: i.row,
            keyLabel: i.column.keyLabel,
            filter: i.column.filter,
            filterParameters: i.column.filterParameters,
            defaultValue: i.column.defaultValue,
            tag: i.column.filterTag || "div"
          })
        ],
        ...this.$slots
      })) : ""
    ];
  }
};
function cV(e, {
  isMobile: t = _(() => !1),
  rowsLocal: n = B([])
}) {
  const r = d(e, "columnActionsView"), s = d(e, "columnActionsWidth"), i = d(e, "columnActionsWidthDefaults"), o = d(e, "columnActionsWidthMin"), u = d(e, "rowActions"), f = _(() => r.value === "onePlusDropdown"), A = _(() => {
    let m = !1;
    e: for (let b = 0; b < n.value.length; b++) {
      const I = n.value[b];
      for (let v = 0; v < u.value.length; v++) {
        const g = u.value[v];
        if (KS({
          rowAction: g,
          row: I,
          rowIndex: b
        }) && g.type !== "divider") {
          m = !0;
          break e;
        }
      }
    }
    return m;
  }), E = _(() => !u.value.length || !f.value ? !1 : A.value), p = _(() => Pe(s.value) ? E.value && r.value === "onePlusDropdown" ? i.value.onePlusDropdown : i.value.default : s.value), T = _(() => Pe(o.value) ? E.value && r.value === "onePlusDropdown" ? i.value.onePlusDropdownMin : i.value.min : o.value);
  return {
    columnActionsBtnGroupMaxWidthStyle: _(() => {
      const m = i.value.btnGroupMaxWidth;
      if (!t.value && r.value !== "dropdown" && !Pe(m))
        return `max-width: ${m}px`;
    }),
    columnActionsWidthLocal: p,
    columnActionsWidthMinLocal: T,
    isColumnActionWide: E
  };
}
function fV(e, {
  columnsScrollInvisible: t = B([]),
  indexFirstScrollInvisibleColumn: n = B(void 0),
  modelColumnsVisibleLocal: r = B({}),
  modelIsTableWithoutScrollComputed: s = _(() => !1),
  columnsOrderedFromSimpleTable: i = _(() => [])
}) {
  const o = d(e, "columns"), u = d(e, "isActionColumnVisible"), f = d(e, "isSimpleTable"), A = d(e, "modelColumnsOrdering"), E = d(e, "multipleActions"), p = _(() => $a(o.value, "id")), T = _(() => {
    const g = {
      true: [],
      false: [],
      trueObject: {},
      falseObject: {},
      trueColumns: [],
      falseColumns: []
    };
    return z(he(o.value), (R) => {
      const D = R.id;
      R.locked ? (g.true.push(D), g.trueColumns.push(R), g.trueObject[D] = !0) : (g.false.push(D), g.falseColumns.push(R), g.falseObject[D] = !0);
    }), g;
  }), S = _(() => {
    if (f.value && i.value && i.value.length)
      return i.value;
    if (!A.value.length)
      return [...T.value.trueColumns, ...T.value.falseColumns];
    const g = [], R = he(p.value);
    return z(A.value, (D) => {
      R[D] && g.push(R[D]);
    }), g;
  }), m = _(() => {
    const g = [], R = {};
    return z(S.value, (D, w) => {
      bH({
        column: D,
        columnIndex: w,
        modelIsTableWithoutScroll: s.value,
        modelColumnsVisibleLocal: r.value,
        indexFirstScrollInvisibleColumn: n.value
      }) && (R[g.length] = w, g.push(D));
    }), {
      columns: g,
      columnsIndexesMapping: R
    };
  }), b = _(() => m.value.columnsIndexesMapping), I = _(() => m.value.columns), v = _(() => {
    let g = I.value.length;
    return s.value && (g += t.value.length), u.value && g++, E.value.length && g++, g;
  });
  return {
    columnIdsGroupByLocked: T,
    columnsFilteredForRender: I,
    columnsFilteredForRenderIndexesMapping: b,
    columnsOrdered: S,
    countNotHiddenColumns: v
  };
}
function hV(e, {
  modelSort: t = B([])
}) {
  const n = d(e, "columns"), r = d(e, "showFirstSortingSequenceNumber"), s = d(e, "sortingSequenceNumberClass"), i = _(() => mt(n.value, (v) => LH({ column: v }))), o = _(() => Fn(i.value, (v, g) => ({
    ...v,
    _index: v.prio || g
  }))), u = _(() => Fn(o.value, (v) => (v.group && v.group.length && (v.group = Fn(v.group, (g, R) => [
    g,
    R
  ].join("%%%"))), v))), f = ({ groups: v, group: g, level: R, columnsOrderedFromGroups: D, firstLevelGroupObject: w }) => {
    const F = g ? mt(v, (O) => Gd(O, g[R - 1])) : v, P = wT(F, (O) => O[R]), M = Fn(P, (O) => {
      const q = {
        id: O[R].split("%%%")[0]
      };
      let U;
      return R === 0 ? (U = q, U.columnIndexes = []) : U = w, O.length > R + 1 ? q.children = ce(
        f({
          groups: v,
          group: O,
          level: R + 1,
          columnsOrderedFromGroups: D,
          firstLevelGroupObject: U
        }),
        "recursiveGroup"
      ) : O.length === R + 1 && (q.columns = mt(u.value, (G) => Gd(G.group, O[R])), U.columnIndexes.push(...Fn(q.columns, "_index")), D.push(...q.columns)), q;
    });
    return {
      columnsOrderedFromGroups: D,
      recursiveGroup: M
    };
  }, A = _(() => Fn(u.value, (v) => ce(v, "group", v))), E = _(() => mt(A.value, (v) => Se(v))), p = _(() => mt(A.value, (v) => !Se(v))), T = _(() => {
    const v = [];
    return f({ groups: E.value, group: null, level: 0, columnsOrderedFromGroups: v });
  }), S = _(() => Yd([
    ...T.value.columnsOrderedFromGroups,
    ...p.value
  ], "_index")), m = (v) => c(uc, {
    ref: "th",
    class: "a_table__cell__child_group",
    column: v,
    columnGroupNames: Fn(v.group, (g) => g.split("%%%")[0]),
    columnIndex: v._index,
    hasMultipleActions: !1,
    modelSort: t.value,
    showFirstSortingSequenceNumber: r.value,
    sortingSequenceNumberClass: s.value
  }), b = (v) => c("div", {
    class: "a_table__th_group"
  }, [
    c("div", {
      class: "a_table__th_child_group"
    }, [
      c("div", {
        class: "a_table__cell_group a_text_center"
      }, [
        v.id && c(pe, {
          html: v.id,
          tag: "span",
          "aria-hidden": !0
        })
      ]),
      c("div", {
        class: "a_table__th_group_container"
      }, v.children ? Fn(v.children, (g) => b(g)) : Fn(v.columns, (g) => m(g)))
    ])
  ]), I = _(() => {
    const v = Yd([
      ...T.value.recursiveGroup,
      ...p.value
    ], (g) => g.columnIndexes ? Vw(g.columnIndexes) : g._index);
    return Fn(v, (g) => g.columnIndexes ? b(g) : m(g));
  });
  return {
    columnsOrderedFromSimpleTable: S,
    renderedGroupedColumns: I
  };
}
function AV(e, { emit: t }, {
  checkVisibleColumns: n = () => {
  },
  columnIdsGroupByLocked: r = _(() => ({
    true: [],
    false: [],
    trueObject: {},
    falseObject: {},
    trueColumns: [],
    falseColumns: []
  })),
  columnsFilteredForRenderIndexesMapping: s = _(() => ({}))
}) {
  const i = d(e, "columns"), o = d(e, "modelColumnsOrdering"), u = ({ columnIndexDraggable: E, columnIndexOver: p, reset: T, inHeader: S }) => {
    if (E === p && !T)
      return;
    S && (E = s.value[E], p = s.value[p]);
    let m;
    if (T)
      m = [...r.value.true, ...r.value.false];
    else {
      m = he(o.value);
      const b = m[E];
      m.splice(E, 1), m.splice(p, 0, b);
    }
    t("changeColumnsOrdering", {
      columnIndexDraggable: E,
      columnIndexOver: p,
      modelColumnsOrdering: m
    }), setTimeout(() => {
      n();
    });
  }, f = () => {
    let E = [], p = !1;
    if (!o.value.length)
      E = [...r.value.true, ...r.value.false];
    else {
      E = [...r.value.true];
      const T = he(r.value.falseObject);
      z(o.value, (S) => {
        T[S] && (E.push(S), delete T[S]);
      }), z(T, (S, m) => {
        E.push(m);
      }), JSON.stringify(o.value) !== JSON.stringify(E) && (p = !0);
    }
    return {
      shouldFixColumns: p,
      modelColumnsOrderingLocal: E
    };
  }, A = () => {
    const {
      shouldFixColumns: E,
      modelColumnsOrderingLocal: p
    } = f();
    E && t("changeColumnsOrdering", {
      modelColumnsOrdering: p,
      shouldFixColumns: E
    });
  };
  return rt(i, () => {
    A();
  }, {
    deep: !0
  }), {
    changeColumnsOrdering: u,
    checkColumnsOrdering: f
  };
}
function EV(e) {
  const t = d(e, "countAllRows"), n = d(e, "data"), r = d(e, "isTree"), s = d(e, "keyChildren"), i = d(e, "keyCountAllRowsInData"), o = _(() => st(n.value)), u = _(() => Se(n.value)), f = _(() => se(t.value) ? o.value ? +ce(n.value, i.value) : u.value ? r.value ? ax({
    array: n.value,
    keyChildren: s.value
  }) : n.value.length : 0 : t.value), A = _(() => se(t.value) ? n.value.length : t.value);
  return {
    countAllRowsLocal: f,
    totalRowsCount: A
  };
}
function pV({
  tableRef: e = B(void 0)
}) {
  return {
    scrollToTable: () => {
      if (e.value) {
        let s = e.value.getBoundingClientRect().top + window.scrollY - window.innerHeight / 2;
        s < 0 && (s = 0), document.documentElement.scrollTop = s;
      }
    },
    setFocusToTable: () => {
      e.value && (e.value.setAttribute("tabindex", "-1"), e.value.focus(), e.value.removeAttribute("tabindex"));
    }
  };
}
function TV(e, { emit: t }, {
  checkColumnsOrdering: n = () => {
  },
  checkVisibleColumns: r = () => {
  },
  modelColumnsVisibleLocal: s = B({})
}) {
  const i = d(e, "modelColumnsVisible"), o = d(e, "columns");
  return {
    initTable: () => {
      const {
        shouldFixColumns: f,
        modelColumnsOrderingLocal: A
      } = n();
      let E = !1;
      Di(i.value) ? s.value = he(i.value) : (E = !0, s.value = HS(o.value), r()), t("initTable", he({
        columnsOrdering: {
          model: A,
          shouldFix: f
        },
        columnsVisible: {
          model: s.value,
          shouldFix: E
        }
      }));
    }
  };
}
function SV(e, { emit: t }, {
  closePreviewAll: n = () => {
  },
  scrollToTable: r = () => {
  },
  setFocusToTable: s = () => {
  },
  viewCurrent: i = _(() => ({}))
}) {
  const o = d(e, "isTree"), u = d(e, "offsetStart"), f = d(e, "pagination"), A = B(void 0), E = B(void 0), p = () => {
    A.value = f.value.limitStart || 10, E.value = u.value;
  }, T = _(() => {
    var b;
    return o.value ? !1 : (b = f.value) != null && b.use ? i.value ? i.value.usePagination || !1 : !0 : !1;
  });
  return {
    changeLimit: (b) => {
      s(), r(), A.value = b, E.value = u.value, t("changeLimit", {
        offset: E.value,
        limit: b
      }), n();
    },
    changeOffset: (b) => {
      let I, v;
      st(b) ? (I = b.offset, v = b.reload) : (I = b, v = !0), v && (s(), r()), E.value = I, t("changeOffset", {
        offset: I,
        limit: A.value
      }), v && n();
    },
    initLocalVars: p,
    limit: A,
    offset: E,
    usePaginationLocal: T
  };
}
function LV({
  columnsOrdered: e = B([]),
  isMobile: t = B(!1),
  modelColumnsVisibleLocal: n = B({})
}) {
  return {
    allVisibleMobileColumns: _(() => t.value ? mt(e.value, (s) => s.isRender !== !1 && n.value[s.id] !== !1) : [])
  };
}
function mV(e, { emit: t }, {
  checkVisibleColumns: n = () => {
  },
  isMultipleActionsActive: r = B(void 0),
  rowsLocalAll: s = _(() => []),
  rowsLocalLength: i = _(() => 0)
}) {
  const o = d(e, "id"), u = d(e, "multipleActions"), f = B(void 0), A = B({}), E = B(!1), p = _(() => u.value.length > 0), T = _(() => Ne(ce(f.value, "isHiddenCallback"))), S = _(() => mt(s.value, (P, M) => A.value[M])), m = () => {
    A.value = {};
  }, b = () => {
    r.value = !1, f.value = void 0, E.value = !1, m();
  }, I = () => {
    if (window.isScrollDisabled)
      return;
    const P = GS({ tableId: o.value });
    Or({
      selector: `#${P}`
    });
  }, v = ({ isActive: P, action: M } = {}) => {
    if (P) {
      r.value = !0, f.value = M, setTimeout(() => {
        n(), I();
      }), t("toggleMultipleActions", { isActive: P, action: M });
      return;
    }
    r.value ? b() : r.value = !0, setTimeout(() => {
      n(), I();
    }), t("toggleMultipleActions", { isActive: P, action: M });
  }, g = _(() => Di(A.value)), R = _(() => i.value > 0 && i.value === g.value), D = _(() => g.value > 0);
  return {
    areAllRowsSelected: E,
    areAllVisibleRowsSelected: R,
    areSomeRowsSelected: D,
    closeMultipleActionsActive: b,
    currentMultipleActions: f,
    hasMultipleActions: p,
    selectedRows: S,
    selectedRowsIndexes: A,
    setEmptySelectedRowsIndexes: m,
    setSelectedRowsIndexes: ({ rowIndex: P, isAll: M }) => {
      if (M) {
        if (D.value)
          m();
        else {
          const O = {};
          T.value ? ur(i.value, (q) => {
            f.value.isHiddenCallback({
              row: s.value[q],
              rowIndex: q
            }) || (O[q] = !0);
          }) : ur(i.value, (q) => {
            O[q] = !0;
          }), A.value = O;
        }
        return;
      }
      A.value[P] ? delete A.value[P] : A.value[P] = !0;
    },
    toggleBtnAllRows: () => {
      E.value = !E.value, E.value && m();
    },
    toggleMultipleActionsActive: v
  };
}
function bV(e, { emit: t }, {
  aTableRef: n = B({}),
  tableGrandparentRef: r = B({})
}) {
  const {
    previewRef: s,
    removePreviewRef: i
  } = JS(), o = d(e, "previewBoxWidth"), u = 200, f = 50;
  let A, E = 0, p = 0, T = 0;
  const S = () => {
    p = n.value.getBoundingClientRect().left;
  }, m = ({ clientWidth: O }) => {
    E = O, A = O / 100 * f, S();
  }, b = ({ clientWidthLocal: O, clientXTableParent: q, previewBoxWidth: U }) => {
    const G = O - q - U;
    n.value.style.width = `${G}px`;
  }, I = ({ clientX: O = 0, previewRef: q, previewBoxWidth: U = 0 }) => {
    let G = U || E - O;
    G < u ? G = u : G > A && (G = A), b({ clientWidthLocal: E, clientXTableParent: p, previewBoxWidth: G }), q.style.width = `${G}px`;
  }, v = ({ previewRef: O }) => {
    ce(O, "style.removeProperty") && O.style.removeProperty("width"), ce(n, "value.style.removeProperty") && n.value.style.removeProperty("width");
  }, g = ({ previewRef: O }) => {
    E = document.documentElement.clientWidth, T = ce(r, "value.offsetWidth", 0), S(), I({
      previewRef: O,
      previewBoxWidth: o.value
    });
  }, R = ({ previewRef: O, isOpen: q }) => {
    q ? g({ previewRef: O }) : v({ previewRef: O });
  }, D = ({ previewRightWidth: O }) => {
    t("mouseupResizePreviewRight", { previewRightWidth: O });
  }, w = () => {
    g({
      previewRef: s.value
    });
  }, F = new ResizeObserver(
    Sl((O) => {
      const q = O[0].contentRect;
      T !== q.width && (T = q.width, w());
    }, 300)
  ), P = () => {
    F.observe(r.value);
  }, M = () => {
    F.unobserve(r.value);
  };
  return Ot(() => {
    i(), M();
  }), {
    addEventListenerWindowResize: P,
    mousedownResizePreviewRight: m,
    mousemoveResizePreviewRight: I,
    mouseupResizePreviewRight: D,
    removeEventListenerWindowResize: M,
    togglePreviewResize: R
  };
}
function IV(e, t, {
  aTableRef: n = B({}),
  isMobile: r = B(void 0),
  rowsLocalAll: s = _(() => []),
  tableGrandparentRef: i = B({})
}) {
  const {
    isDropdownGlobalOpen: o
  } = cS(), {
    addEventListenerWindowResize: u,
    mousedownResizePreviewRight: f,
    mousemoveResizePreviewRight: A,
    mouseupResizePreviewRight: E,
    removeEventListenerWindowResize: p,
    togglePreviewResize: T
  } = bV(e, t, {
    aTableRef: n,
    tableGrandparentRef: i
  }), S = d(e, "keyId"), m = d(e, "preview"), b = d(e, "id"), I = t.emit, v = B({}), g = B(void 0), R = B(void 0), D = _(() => !!m.value), w = ({ rowIndex: Ae }) => {
    window.isScrollDisabled || setTimeout(() => {
      const _e = `#${b.value}_${Ae}`;
      Or({ selector: _e });
    });
  }, F = () => {
    window.isScrollDisabled || setTimeout(() => {
      const Ae = `#${WS({ tableId: b.value })}`;
      Or({ selector: Ae });
    });
  }, P = _(() => m.value === "right" || r.value), M = _(() => !se(g.value)), O = () => {
    w({
      rowIndex: g.value
    }), I("togglePreview", {
      row: s.value[g.value],
      rowIndex: g.value,
      typeToggle: "close"
    }), R.value = g.value, g.value = void 0, p();
  }, q = () => {
    I("togglePreview", {
      row: s.value[g.value],
      rowIndex: g.value,
      typeToggle: "close"
    }), R.value = void 0, g.value = void 0, p();
  }, U = _(() => m.value === "down"), G = ({ rowIndex: Ae, row: _e }) => {
    const ve = Au({ row: _e, rowIndex: Ae, keyId: S.value });
    delete v.value[ve];
  }, te = () => {
    v.value = {};
  }, re = () => {
    q(), te();
  }, ie = ({ rowIndex: Ae, row: _e } = {}) => {
    P.value ? O() : U.value && G({ rowIndex: Ae, row: _e });
  }, le = ({ rowIndex: Ae }) => {
    !r.value && Pe(g.value) && u(), I("togglePreview", {
      row: s.value[Ae],
      rowIndex: Ae,
      typeToggle: "open"
    }), g.value = Ae, R.value = void 0, F();
  }, oe = ({ rowIndex: Ae }) => {
    g.value === Ae ? O() : le({ rowIndex: Ae });
  }, Te = ({ rowIndex: Ae, row: _e }) => {
    const ve = Au({ row: _e, rowIndex: Ae, keyId: S.value });
    v.value[ve] ? delete v.value[ve] : v.value[ve] = !0;
  };
  return {
    closePreview: ie,
    closePreviewAll: re,
    hasPreview: D,
    isPreviewRightOpen: M,
    mousedownResizePreviewRight: f,
    mousemoveResizePreviewRight: A,
    mouseupResizePreviewRight: E,
    onTogglePreview: ({ row: Ae, rowIndex: _e }) => {
      if (!o.value) {
        if (P.value) {
          oe({ rowIndex: _e });
          return;
        }
        U.value && Te({ row: Ae, rowIndex: _e });
      }
    },
    previewDownRowIds: v,
    previewRightRowIndex: g,
    previewRightRowIndexLast: R,
    togglePreviewResize: T
  };
}
function vV(e, {
  dataSorted: t = _(() => []),
  limit: n = B(0),
  offset: r = B(0),
  setEmptySelectedRowsIndexes: s = () => {
  },
  usePaginationLocal: i = _(() => !1)
}) {
  const o = d(e, "clearSelectedRowsOnDataChange"), u = d(e, "pagination"), f = d(e, "rowsCountRenderPerTick"), A = B([]), E = B([]);
  let p = !0, T = 0, S;
  const m = _(() => {
    if (n.value && !u.value.isOutside && i.value) {
      const M = r.value, O = M + n.value;
      return t.value.slice(M, O);
    }
    return t.value;
  }), b = _(() => m.value), I = _(() => b.value.length), v = _(() => !!I.value), g = () => {
    const M = T * f.value, O = M + f.value;
    Fn(m.value.slice(M, O), (q) => E.value.push(q)), T++;
  }, R = () => {
    S = setInterval(() => {
      T * f.value >= m.value.length ? clearInterval(S) : g();
    });
  }, D = () => {
    clearInterval(S);
  }, w = ({ row: M, rowIndex: O }) => {
    O > E.value.length - 1 || (E.value[O] = M);
  }, F = ({ row: M }) => {
    E.value.unshift(M);
  }, P = ({ index: M }) => {
    E.value.splice(M, 1);
  };
  return rt(m, (M) => {
    Fc(M, A.value) || (A.value = [...M], !p && o.value && s(), p = !1, E.value = [], T = 0, D(), f.value > 0 ? (g(), R()) : E.value = m.value);
  }, {
    immediate: !0,
    deep: !0
  }), {
    addRow: F,
    deleteRow: P,
    hasRows: v,
    rowsLocal: E,
    rowsLocalAll: b,
    rowsLocalLength: I,
    stopRenderRows: D,
    updateRow: w
  };
}
function yV(e, { emit: t }, {
  columnActionsWidth: n = _(() => 0),
  columnActionsWidthMin: r = _(() => 0),
  columnsOrdered: s = _(() => []),
  columnsScrollInvisible: i = B([]),
  indexFirstScrollInvisibleColumn: o = B(void 0),
  isMobile: u = B(!1),
  isMultipleActionsActive: f = B(void 0),
  modelColumnsVisibleLocal: A = B({}),
  modelIsTableWithoutScroll: E = B(!1),
  modelIsTableWithoutScrollComputed: p = _(() => !1)
}) {
  const T = d(e, "columnWidthDefault"), S = d(e, "isActionColumnVisible"), m = d(e, "isSimpleTable"), b = B(void 0), I = B(0), v = B(void 0);
  let g = !1;
  const R = 20, D = _(() => S.value ? r.value : 0), w = _(() => {
    const re = f.value ? r.value : 0, ie = m.value ? 0 : R;
    return re + ie;
  }), F = ({
    sumGrows: re = 0,
    freeSpaceWidth: ie = 0
  }) => {
    re > 0 ? I.value = ie / re : I.value = 0;
  }, P = () => {
    if (se(o.value) || s.value.length < o.value)
      i.value = [];
    else {
      const re = [];
      for (let ie = o.value; ie < s.value.length; ie++) {
        const le = s.value[ie];
        Al({
          column: le,
          modelColumnsVisibleLocal: A.value
        }) && re.push(he(le));
      }
      i.value = re;
    }
  }, M = () => {
    i.value = [], I.value = 0, o.value = 1e3, v.value = 0;
  }, O = () => {
    if (u.value || v.value === 0) {
      M();
      return;
    }
    if (Pe(v.value))
      return;
    const re = v.value - w.value - D.value, ie = v.value - w.value - n.value;
    let le = 0, oe = 0, Te = 0, Be = !1;
    if (z(s.value, (ve) => {
      if (!Al({
        column: ve,
        modelColumnsVisibleLocal: A.value
      })) {
        oe++;
        return;
      }
      const be = +ve.width || T.value;
      if (le + be > re)
        return Be = !0, !1;
      le += be, oe++, Te += se(ve.grow) ? 1 : ve.grow;
    }), Be && le > ie)
      for (let ve = oe - 1; ve >= 0; ve--) {
        oe--;
        const be = s.value[oe];
        if (!Al({
          column: be,
          modelColumnsVisibleLocal: A.value
        }))
          continue;
        const je = +be.width || T.value;
        if (le -= je, Te -= se(be.grow) ? 1 : be.grow, le <= ie)
          break;
      }
    let Ae = 0;
    const _e = Be ? ie : re;
    (p.value || oe === s.value.length) && (Ae = _e - le), o.value = oe, F({
      sumGrows: Te,
      freeSpaceWidth: Ae
    }), P();
  }, q = ({ entries: re, forceAdjust: ie }) => {
    const le = re[0].contentRect;
    (ie || v.value > le.width + R || v.value < le.width - R) && (g || (g = !0, v.value = le.width, O(), g = !1));
  }, U = new ResizeObserver(
    Sl((re) => {
      Pe(v.value) ? q({ entries: re, forceAdjust: !0 }) : q({ entries: re });
    }, 300)
  ), G = (re) => {
    re ? (U.unobserve(b.value), M()) : (U.observe(b.value), E.value && O());
  }, te = (re) => {
    E.value = re, t("updateModelIsTableWithoutScroll", re), E.value && O();
  };
  return jr(() => {
    u.value || U.observe(b.value);
  }), Ot(() => {
    U.unobserve(b.value);
  }), rt(s, () => {
    O();
  }), {
    aTableRef: b,
    changeModelIsTableWithoutScroll: te,
    checkVisibleColumns: O,
    columnsVisibleAdditionalSpaceForOneGrow: I,
    onWatchMobileScrollControl: G
  };
}
function RV(e) {
  const t = d(e, "hasMobile"), n = d(e, "isActionColumnVisible"), r = d(e, "isActionColumnVisible"), s = d(e, "isColumnsDnd"), i = d(e, "isSimpleTable"), o = d(e, "modelIsTableWithoutScrollStart"), u = d(e, "rowActions"), f = B(void 0), A = () => {
    f.value = o.value;
  }, {
    isMobileWidth: E
  } = Sn(), p = _(() => i.value ? u.value && !!u.value.length && n.value : r.value), T = _(() => !!(r.value && !i.value)), S = _(() => !!(s.value && !i.value)), m = _(() => t.value ? !!E.value : !1), b = _(() => i.value ? !1 : f.value);
  return {
    initModelIsTableWithoutScroll: A,
    isActionColumnVisibleLocal: p,
    isActionIconVisibleLocal: T,
    isColumnsDndLocal: S,
    isMobile: m,
    modelIsTableWithoutScroll: f,
    modelIsTableWithoutScrollComputed: b
  };
}
function gV(e, {
  viewCurrent: t = _(() => ({}))
}) {
  const n = d(e, "data"), r = d(e, "isSortingOutside"), s = d(e, "modelSort"), i = d(e, "useAdditionalSorting"), o = B([]), u = _(() => i.value ? t.value ? t.value.useAdditionalSorting || !1 : !0 : !1), f = () => {
    ot(s.value) ? o.value = [s.value] : Se(s.value) && (o.value = he(s.value));
  }, A = _(() => {
    const p = {
      models: [],
      directions: []
    };
    return o.value.length && z(o.value, (T) => {
      let S = "asc", m = T;
      kc(T, "-") && (S = "desc", m = T.slice(1)), p.models.push(m), p.directions.push(S);
    }), p;
  }), E = _(() => o.value.length && !r.value ? qc(n.value || [], A.value.models, A.value.directions) : n.value || []);
  return rt(s, () => {
    f();
  }), {
    dataSorted: E,
    initModelSort: f,
    modelSortLocal: o,
    useAdditionalSortingLocal: u
  };
}
function OV(e, { emit: t }, {
  modelSortLocal: n = B([]),
  closePreviewAll: r = () => {
  }
}) {
  const s = d(e, "id"), i = d(e, "isSortingMultiColumn"), o = d(e, "sortingMultiColumnKey"), u = _(() => `${o.value}Key`), f = (T) => i.value && T[u.value], A = ({ sortId: T }) => {
    const S = n.value.indexOf(T);
    if (S !== -1) {
      n.value.splice(S, 1, `-${T}`);
      return;
    }
    const m = n.value.indexOf(`-${T}`);
    if (m !== -1) {
      n.value.splice(m, 1);
      return;
    }
    n.value.push(T);
  }, E = ({ sortId: T }) => {
    if (n.value.indexOf(T) !== -1) {
      n.value = [`-${T}`];
      return;
    }
    if (n.value.indexOf(`-${T}`) !== -1) {
      n.value = [];
      return;
    }
    n.value = [T];
  };
  return {
    changeModelSort: ({ sortId: T, $event: S, modelAll: m }) => {
      m ? n.value = m : f(S) ? A({ sortId: T }) : E({ sortId: T }), t("changeSorting", {
        modelSort: he(n.value)
      }), gt.$emit("changeTableSorting", {
        modelSort: he(n.value),
        tableId: s.value
      }), r();
    }
  };
}
function CV(e, {
  isMobile: t = B(void 0),
  modelIsTableWithoutScrollComputed: n = _(() => {
  })
}) {
  const r = d(e, "rowActionsSticky");
  return {
    isRowActionsStickyLocal: _(() => !!(!t.value && r.value && !n.value))
  };
}
function DV(e, {
  countNotHiddenColumns: t = _(() => -1),
  isMobile: n = B(!1)
}) {
  const r = d(e, "id"), s = d(e, "isLabelVisible"), i = _(() => {
    const f = {};
    return n.value || (f.role = "table", f["aria-colcount"] = t.value), f;
  }), o = _(() => n.value ? "list" : "rowgroup"), u = _(() => {
    if (s.value)
      return jS({ tableId: r.value });
  });
  return {
    tableChildRole: o,
    tableLabelId: u,
    tableRoleAttributes: i
  };
}
function NV(e, { emit: t }, {
  modelColumnsVisibleLocal: n = B({}),
  checkVisibleColumns: r = () => {
  }
}) {
  return {
    changeModelColumnsVisible: (i) => {
      n.value = i, t("update:modelColumnsVisible", he(n.value)), r();
    }
  };
}
function BV(e) {
  const t = d(e, "texts");
  return {
    emptyText: _(() => Pe(t.value.empty) ? "_A_TABLE_EMPTY_TEXT_" : t.value.empty)
  };
}
function wV() {
  const e = B([]), t = B(void 0), n = B(void 0), r = B({}), s = B(void 0), i = B(void 0);
  return {
    columnsScrollInvisible: e,
    indexFirstScrollInvisibleColumn: t,
    isMultipleActionsActive: n,
    modelColumnsVisibleLocal: r,
    tableGrandparentRef: s,
    tableRef: i
  };
}
function PV(e, { emit: t }, {
  closePreviewAll: n = () => {
  }
}) {
  const r = d(e, "views"), s = d(e, "modelFilters"), i = d(e, "modelView"), o = _(() => $a(r.value, "id")), u = _(() => o.value[i.value]), f = _(() => r.value.length > 1), A = () => {
    if (f.value) {
      const T = xc(r.value, ["active", !0]);
      let S = r.value[0].id;
      T && (S = T.id), t("updateView", {
        _modelView: S,
        view: o.value[S],
        modelFilters: s.value,
        init: !0
      });
    }
  }, E = (T) => {
    n(), t("updateView", {
      _modelView: T,
      view: o.value[T],
      modelFilters: s.value
    });
  }, p = _(() => !u.value || u.value.type === "table");
  return {
    hasViews: f,
    initViewCurrent: A,
    isViewTableVisible: p,
    updateViewCurrent: E,
    viewCurrent: u
  };
}
const eAe = {
  name: "ATable",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    clearSelectedRowsOnDataChange: {
      type: Boolean,
      required: !1,
      default: !0
    },
    columnActionsOnePlusDropdownOptions: {
      type: Object,
      required: !1,
      default: () => ({
        actionsClasses: ["a_btn a_btn_primary a_text_truncate"],
        btnGroupClass: "a_btn_group a_btn_group_table",
        hasDividerBeforeDropdown: !1,
        indexFirstDropdownAction: 1,
        indexFirstDropdownActionMobile: 1,
        minDropdownActions: 1
      })
    },
    columnActionsView: {
      type: String,
      required: !1,
      default: "dropdown",
      validator: (e) => ["onePlusDropdown", "onePlusDropdownEmptyPlace", "dropdown"].indexOf(e) !== -1
    },
    columnActionsWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    columnActionsWidthDefaults: {
      type: Object,
      required: !1,
      default: () => ({
        default: 170,
        min: 50,
        onePlusDropdown: 320,
        onePlusDropdownMin: 200,
        btnGroupMaxWidth: 180
      })
    },
    columnActionsWidthMin: {
      type: Number,
      required: !1,
      default: void 0
    },
    columns: {
      type: Array,
      required: !0
    },
    columnsDefaultValue: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    columnWidthDefault: {
      type: Number,
      required: !1,
      default: 250
    },
    countAllRows: {
      type: Number,
      required: !1,
      default: void 0
    },
    countVisibleMobileColumns: {
      type: Number,
      required: !1,
      default: 4,
      validator: (e) => e > 0
    },
    borderType: {
      type: String,
      required: !1,
      default: () => hi.value.propsDefault.borderType,
      validator: (e) => ["bordered", "innerBordered"].indexOf(e) !== -1
    },
    data: {
      type: [Array, Object, Promise],
      required: !1
    },
    disabledActions: {
      type: Boolean,
      required: !1
    },
    disabledMultipleActions: {
      type: Boolean,
      required: !1
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    disabledViews: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    hasScrollClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => at("a_table")
    },
    isActionColumnVisible: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isActionIconVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isColumnsDnd: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLabelVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isLoadingMultipleActions: {
      type: Boolean,
      required: !1
    },
    isLoadingOptions: {
      type: Boolean,
      required: !1
    },
    isLoadingTable: {
      type: Boolean,
      required: !1
    },
    isQuickSearch: {
      type: Boolean,
      required: !1
    },
    isSimpleTable: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSortingOutside: {
      type: Boolean,
      required: !1
    },
    isTree: {
      type: Boolean,
      required: !1
    },
    isTreeCollapsible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTreeOpened: {
      type: Boolean,
      required: !1
    },
    keyCountAllRowsInData: {
      type: String,
      required: !1,
      default: "count"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyChildren: {
      type: String,
      required: !1,
      default: "children"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !1,
      default: "h2"
    },
    modelColumnsOrdering: {
      type: Array,
      required: !1,
      default: () => []
    },
    modelColumnsVisible: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelIsTableWithoutScrollStart: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelQuickSearch: {
      type: String,
      required: !1,
      default: ""
    },
    modelSort: {
      type: [String, Array],
      required: !1,
      default: () => []
    },
    modelView: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    multipleActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    offsetStart: {
      type: Number,
      required: !1,
      default: 0
    },
    pagination: {
      type: Object,
      required: !1,
      default: () => ({
        use: !1,
        maxPages: 5,
        limitsPerPage: [],
        limitStart: 10,
        disabled: !1,
        isOutside: !1,
        outside: !1,
        modes: {
          /*
           * perPage: inline / select
           * pagination: normal / short / loadMore
           */
          desktop: {
            pagination: {
              mode: "normal",
              position: 0
            },
            perPage: {
              mode: "inline",
              position: 1
            }
          },
          mobile: {
            pagination: {
              mode: "loadMore"
            }
          }
        }
      })
    },
    preview: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["right", "down"].indexOf(e) !== -1
    },
    previewBoxWidth: {
      type: Number,
      required: !1,
      default: 300
    },
    previewStyles: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowActionsSticky: {
      type: Boolean,
      required: !1,
      default: !0
    },
    rowClass: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    rowsCountRenderPerTick: {
      type: Number,
      required: !1,
      default: 25,
      validator: (e) => pa(e) && e >= 0
    },
    rowsFooter: {
      type: Array,
      required: !1,
      default: () => []
    },
    showCount: {
      type: Boolean,
      required: !1,
      default: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1,
      default: !1
    },
    sortingMultiColumnKey: {
      type: String,
      required: !1,
      default: "shift",
      validator: (e) => ["shift", "ctrl", "alt"].indexOf(e) !== -1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1,
      default: "a_badge"
    },
    tableActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    tableActionsIndexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: -1
    },
    tableActionsIndexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: 0
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        empty: "_A_TABLE_EMPTY_TEXT_"
      })
    },
    useAdditionalSorting: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useViewSlot: {
      type: Boolean,
      required: !1
    },
    valuesForColumnDefault: {
      type: Array,
      required: !1,
      default: () => [null, void 0, ""]
    },
    views: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  emits: [
    "changeColumnsOrdering",
    "changeColumnsVisible",
    "changeLimit",
    "changeOffset",
    "changeSorting",
    "mouseupResizePreviewRight",
    "initTable",
    "togglePreview",
    "toggleMultipleActions",
    "update:modelColumnsOrder",
    "update:modelColumnsVisible",
    "update:modelQuickSearch",
    "updateModelIsTableWithoutScroll",
    "updateView"
  ],
  provide() {
    return {
      changeModelColumnsVisible: this.changeModelColumnsVisible,
      columnActionsOnePlusDropdownOptions: _(() => this.columnActionsOnePlusDropdownOptions),
      columns: _(() => this.columns),
      columnsDefaultValue: _(() => this.columnsDefaultValue),
      columnWidthDefault: _(() => this.columnWidthDefault),
      isLoadingOptions: _(() => this.isLoadingOptions),
      isLoadingTable: _(() => this.isLoadingTable),
      keyId: _(() => this.keyId),
      rowActions: _(() => this.rowActions),
      tableId: _(() => this.id),
      valuesForColumnDefault: _(() => this.valuesForColumnDefault)
    };
  },
  setup(e, t) {
    const {
      initModelIsTableWithoutScroll: n,
      isActionColumnVisibleLocal: r,
      isActionIconVisibleLocal: s,
      isColumnsDndLocal: i,
      isMobile: o,
      modelIsTableWithoutScroll: u,
      modelIsTableWithoutScrollComputed: f
    } = RV(e), {
      countAllRowsLocal: A,
      totalRowsCount: E
    } = EV(e), {
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      isMultipleActionsActive: S,
      modelColumnsVisibleLocal: m,
      tableGrandparentRef: b,
      tableRef: I
    } = wV(), {
      scrollToTable: v,
      setFocusToTable: g
    } = pV({
      tableRef: I
    }), {
      hasViews: R,
      initViewCurrent: D,
      isViewTableVisible: w,
      updateViewCurrent: F,
      viewCurrent: P
    } = PV(e, t, {
      closePreviewAll: Tr
    }), {
      dataSorted: M,
      initModelSort: O,
      modelSortLocal: q,
      useAdditionalSortingLocal: U
    } = gV(e, {
      viewCurrent: P
    }), {
      columnsOrderedFromSimpleTable: G,
      renderedGroupedColumns: te
    } = hV(e, {
      modelSort: q
    }), {
      columnIdsGroupByLocked: re,
      columnsFilteredForRender: ie,
      columnsFilteredForRenderIndexesMapping: le,
      columnsOrdered: oe,
      countNotHiddenColumns: Te
    } = fV(e, {
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      modelColumnsVisibleLocal: m,
      modelIsTableWithoutScrollComputed: f,
      columnsOrderedFromSimpleTable: G
    }), {
      changeLimit: Be,
      changeOffset: Ae,
      initLocalVars: _e,
      limit: ve,
      offset: be,
      usePaginationLocal: je
    } = SV(e, t, {
      closePreviewAll: Tr,
      scrollToTable: v,
      setFocusToTable: g,
      viewCurrent: P
    }), {
      addRow: Re,
      deleteRow: J,
      hasRows: H,
      rowsLocal: X,
      rowsLocalAll: ae,
      rowsLocalLength: ge,
      stopRenderRows: Ce,
      updateRow: ke
    } = vV(e, {
      dataSorted: M,
      limit: ve,
      offset: be,
      setEmptySelectedRowsIndexes: ms,
      usePaginationLocal: je
    }), {
      columnActionsBtnGroupMaxWidthStyle: Qe,
      columnActionsWidthLocal: Ue,
      columnActionsWidthMinLocal: $e,
      isColumnActionWide: it
    } = cV(e, {
      isMobile: o,
      rowsLocal: X
    }), {
      aTableRef: Ke,
      changeModelIsTableWithoutScroll: lt,
      checkVisibleColumns: et,
      columnsVisibleAdditionalSpaceForOneGrow: ht,
      onWatchMobileScrollControl: At
    } = yV(e, t, {
      columnActionsWidth: Ue,
      columnActionsWidthMin: $e,
      columnsOrdered: oe,
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      isMobile: o,
      isMultipleActionsActive: S,
      modelColumnsVisibleLocal: m,
      modelIsTableWithoutScroll: u,
      modelIsTableWithoutScrollComputed: f
    }), {
      changeColumnsOrdering: Mt,
      checkColumnsOrdering: tn
    } = AV(e, t, {
      checkVisibleColumns: et,
      columnIdsGroupByLocked: re,
      columnsFilteredForRenderIndexesMapping: le
    }), {
      isRowActionsStickyLocal: hr
    } = CV(e, {
      isMobile: o,
      modelIsTableWithoutScrollComputed: f
    }), {
      areAllRowsSelected: nn,
      areAllVisibleRowsSelected: Kn,
      areSomeRowsSelected: zn,
      closeMultipleActionsActive: Cn,
      currentMultipleActions: Nr,
      hasMultipleActions: Ar,
      selectedRows: Br,
      selectedRowsIndexes: Yn,
      setEmptySelectedRowsIndexes: Xn,
      setSelectedRowsIndexes: Zt,
      toggleBtnAllRows: mn,
      toggleMultipleActionsActive: Er
    } = mV(e, t, {
      checkVisibleColumns: et,
      isMultipleActionsActive: S,
      rowsLocalAll: ae,
      rowsLocalLength: ge
    }), {
      changeModelColumnsVisible: pr
    } = NV(e, t, {
      modelColumnsVisibleLocal: m,
      checkVisibleColumns: et
    }), {
      closePreview: Ts,
      closePreviewAll: wr,
      hasPreview: Zn,
      isPreviewRightOpen: Sa,
      onTogglePreview: Dn,
      mousedownResizePreviewRight: Ss,
      mousemoveResizePreviewRight: Ls,
      mouseupResizePreviewRight: yt,
      previewDownRowIds: Jn,
      previewRightRowIndex: Yr,
      previewRightRowIndexLast: La,
      togglePreviewResize: Xr
    } = IV(e, t, {
      aTableRef: Ke,
      isMobile: o,
      rowsLocalAll: ae,
      tableGrandparentRef: b
    }), {
      tableChildRole: ma,
      tableLabelId: Pr,
      tableRoleAttributes: Pi
    } = DV(e, {
      countNotHiddenColumns: Te,
      isMobile: o
    }), {
      allVisibleMobileColumns: rn
    } = LV({
      columnsOrdered: oe,
      isMobile: o,
      modelColumnsVisibleLocal: m
    }), {
      changeModelSort: ba
    } = OV(e, t, {
      modelSortLocal: q,
      closePreviewAll: Tr
    }), {
      initTable: zs
    } = TV(e, t, {
      checkColumnsOrdering: tn,
      checkVisibleColumns: et,
      modelColumnsVisibleLocal: m
    }), {
      emptyText: Ys
    } = BV(e);
    function Tr() {
      wr();
    }
    function ms() {
      Xn();
    }
    return rt(o, (dn) => {
      At(dn), Tr();
    }), rt(it, (dn, Xs) => {
      dn !== Xs && et();
    }), Je("changeModelIsTableWithoutScroll", lt), Je("changeModelSort", ba), Je("columnsOrdered", oe), Je("columnsFilteredForRender", ie), Je("columnsScrollInvisible", p), Je("columnsVisibleAdditionalSpaceForOneGrow", ht), Je("columnActionsWidthLocal", Ue), Je("columnActionsWidthMinLocal", $e), Je("currentMultipleActions", Nr), Je("hasPreview", Zn), Je("indexFirstScrollInvisibleColumn", T), Je("isActionColumnVisible", r), Je("isActionIconVisible", s), Je("isColumnsDnd", i), Je("isMobile", o), Je("isMultipleActionsActive", S), Je("modelIsTableWithoutScroll", f), Je("onTogglePreview", Dn), Je("previewRightRowIndex", Yr), Je("previewRightRowIndexLast", La), Je("rowsLocalAll", ae), Je("modelColumnsVisibleLocal", m), Je("changeColumnsOrdering", Mt), _e(), n(), D(), zs(), O(), {
      addRow: Re,
      allVisibleMobileColumns: rn,
      areAllRowsSelected: nn,
      areAllVisibleRowsSelected: Kn,
      areSomeRowsSelected: zn,
      aTableRef: Ke,
      changeLimit: Be,
      changeModelColumnsVisible: pr,
      changeOffset: Ae,
      checkVisibleColumns: et,
      closeMultipleActionsActive: Cn,
      closePreview: Ts,
      closePreviewAll: Tr,
      columnActionsBtnGroupMaxWidthStyle: Qe,
      columnsFilteredForRender: ie,
      columnsOrdered: oe,
      countAllRowsLocal: A,
      deleteRow: J,
      emptyText: Ys,
      hasMultipleActions: Ar,
      hasRows: H,
      hasViews: R,
      isMobile: o,
      isMultipleActionsActive: S,
      isPreviewRightOpen: Sa,
      isRowActionsStickyLocal: hr,
      isViewTableVisible: w,
      limit: ve,
      modelColumnsVisibleLocal: m,
      modelIsTableWithoutScrollComputed: f,
      modelSortLocal: q,
      mousedownResizePreviewRight: Ss,
      mousemoveResizePreviewRight: Ls,
      mouseupResizePreviewRight: yt,
      offset: be,
      onTogglePreview: Dn,
      previewDownRowIds: Jn,
      previewRightRowIndex: Yr,
      renderedGroupedColumns: te,
      rowsLocal: X,
      rowsLocalAll: ae,
      rowsLocalLength: ge,
      selectedRows: Br,
      selectedRowsIndexes: Yn,
      setEmptySelectedRowsIndexes: ms,
      setSelectedRowsIndexes: Zt,
      stopRenderRows: Ce,
      tableChildRole: ma,
      tableGrandparentRef: b,
      tableLabelId: Pr,
      tableRef: I,
      tableRoleAttributes: Pi,
      toggleBtnAllRows: mn,
      toggleMultipleActionsActive: Er,
      togglePreviewResize: Xr,
      totalRowsCount: E,
      updateRow: ke,
      updateViewCurrent: F,
      useAdditionalSortingLocal: U,
      usePaginationLocal: je,
      viewCurrent: P
    };
  },
  data() {
    return {
      resolved: void 0,
      error: void 0
    };
  },
  computed: {
    hasRowsFooter() {
      return this.rowsFooter.length > 0;
    }
  },
  methods: {
    updateModelQuickSearch(e) {
      this.$emit("update:modelQuickSearch", e);
    }
  },
  render() {
    return c("div", {
      ref: "tableGrandparentRef",
      class: ["a_table__grandparent", {
        a_table_mobile: this.isMobile,
        a_table__grandparent_without_scroll: !this.hasScrollClass
      }]
    }, [
      this.$slots.tablePrepend && this.$slots.tablePrepend({
        id: this.id
      }),
      c("div", {
        ref: "aTableRef",
        class: ["a_table__parent", {
          a_table__parent_scrollable: this.hasScrollClass && !this.modelIsTableWithoutScrollComputed
        }]
      }, [
        c(JH, {
          additionalSortingColumns: this.additionalSortingColumns,
          areAllRowsSelected: this.areAllRowsSelected,
          areSomeRowsSelected: this.areSomeRowsSelected,
          closeMultipleActionsActive: this.closeMultipleActionsActive,
          countAllRows: this.countAllRowsLocal,
          disabledActions: this.disabledActions,
          disabledMultipleActions: this.disabledMultipleActions,
          disabledSort: this.disabledSort,
          disabledViews: this.disabledViews,
          extra: this.extra,
          hasViews: this.hasViews,
          isLabelVisible: this.isLabelVisible,
          isLoadingMultipleActions: this.isLoadingMultipleActions,
          isQuickSearch: this.isQuickSearch,
          isSortingMultiColumn: this.isSortingMultiColumn,
          label: this.label,
          labelClass: this.labelClass,
          labelTag: this.labelTag,
          modelQuickSearch: this.modelQuickSearch,
          modelSort: this.modelSortLocal,
          modelView: this.modelView,
          multipleActions: this.multipleActions,
          selectedRows: this.selectedRows,
          showCount: this.showCount,
          tableActions: this.tableActions,
          tableActionsIndexFirstDropdownAction: this.tableActionsIndexFirstDropdownAction,
          tableActionsIndexFirstDropdownActionMobile: this.tableActionsIndexFirstDropdownActionMobile,
          useAdditionalSorting: this.useAdditionalSortingLocal,
          useViewSlot: this.useViewSlot,
          viewCurrent: this.viewCurrent,
          views: this.views,
          onUpdateViewCurrent: this.updateViewCurrent,
          onUpdateModelQuickSearch: this.updateModelQuickSearch,
          onToggleMultipleActionsActive: this.toggleMultipleActionsActive,
          onToggleBtnAllRows: this.toggleBtnAllRows
        }, this.$slots),
        this.$slots.topPanelAppend ? this.$slots.topPanelAppend() : "",
        this.isViewTableVisible && c("div", {
          ref: "tableRef",
          "aria-labelledby": this.isLabelVisible ? this.tableLabelId : void 0,
          class: [
            "a_table",
            {
              a_table_simple: this.isSimpleTable,
              a_table_bordered: this.borderType === "bordered",
              a_table_inner_bordered: this.borderType === "innerBordered"
            }
          ],
          ...this.tableRoleAttributes
        }, [
          this.isSimpleTable ? c(RH, {
            areAllRowsSelected: this.areAllRowsSelected,
            areAllVisibleRowsSelected: this.areAllVisibleRowsSelected,
            areSomeRowsSelected: this.areSomeRowsSelected,
            disabledOptions: this.disabledOptions,
            disabledSort: this.disabledSort,
            hasMultipleActions: this.hasMultipleActions,
            isRowActionsStickyLocal: this.isRowActionsStickyLocal,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSortLocal,
            rowsLocalLength: this.rowsLocalLength,
            showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
            sortingSequenceNumberClass: this.sortingSequenceNumberClass,
            onSetSelectedRowsIndexes: this.setSelectedRowsIndexes,
            columnsForRender: this.renderedGroupedColumns
          }) : c(BH, {
            areAllRowsSelected: this.areAllRowsSelected,
            areAllVisibleRowsSelected: this.areAllVisibleRowsSelected,
            areSomeRowsSelected: this.areSomeRowsSelected,
            disabledOptions: this.disabledOptions,
            disabledSort: this.disabledSort,
            hasMultipleActions: this.hasMultipleActions,
            isRowActionsStickyLocal: this.isRowActionsStickyLocal,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSortLocal,
            rowsLocalLength: this.rowsLocalLength,
            showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
            sortingSequenceNumberClass: this.sortingSequenceNumberClass,
            onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
          }),
          c("div", {
            class: "a_table__loading"
          }, [
            c(wS, {
              isLoading: this.isLoadingTable
            }, () => [
              c("div", {
                class: "a_table__body",
                role: this.tableChildRole
              }, {
                default: () => this.rowsLocal.map((e, t) => {
                  const n = Au({ row: e, rowIndex: t, keyId: this.keyId });
                  return c(Ep, {
                    key: n,
                    allVisibleMobileColumns: this.allVisibleMobileColumns,
                    areAllRowsSelected: this.areAllRowsSelected,
                    columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
                    columnActionsView: this.columnActionsView,
                    countVisibleMobileColumns: this.countVisibleMobileColumns,
                    disabledPreview: this.disabledPreview,
                    disabledPreviewRowCallback: this.disabledPreviewRowCallback,
                    disabledRowActions: this.disabledRowActions,
                    isFooter: !1,
                    isPreviewDownOpen: this.previewDownRowIds[n],
                    isRowActionsStickyLocal: this.isRowActionsStickyLocal,
                    isTree: this.isTree,
                    isTreeCollapsible: this.isTreeCollapsible,
                    isTreeOpened: this.isTreeOpened,
                    keyChildren: this.keyChildren,
                    keyId: this.keyId,
                    level: 1,
                    row: e,
                    rowActionsClass: this.rowActionsClass,
                    rowClass: this.rowClass,
                    rowIndex: t,
                    rowsLength: this.rowsLocal.length,
                    selectedRowsIndexes: this.selectedRowsIndexes,
                    onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
                  }, {
                    get: (r) => [
                      c(ac, {
                        data: r.row,
                        keyLabel: r.column.keyLabel,
                        filter: r.column.filter,
                        filterParameters: r.column.filterParameters,
                        defaultValue: r.column.defaultValue,
                        tag: r.column.filterTag || "div"
                      })
                    ],
                    ...this.$slots
                  });
                })
              }),
              this.isViewTableVisible && !this.hasRows && c(pe, {
                class: "a_table__empty_text",
                text: this.emptyText
              }),
              this.hasRowsFooter && c("div", {
                class: "a_table__footer",
                role: this.tableChildRole
              }, this.rowsFooter.map((e, t) => {
                const n = Au({ row: e, rowIndex: t, keyId: this.keyId });
                return c(Ep, {
                  key: n,
                  allVisibleMobileColumns: this.allVisibleMobileColumns,
                  areAllRowsSelected: this.areAllRowsSelected,
                  columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
                  columnActionsView: this.columnActionsView,
                  countVisibleMobileColumns: this.countVisibleMobileColumns,
                  disabledPreview: this.disabledPreview,
                  disabledPreviewRowCallback: this.disabledPreviewRowCallback,
                  disabledRowActions: this.disabledRowActions,
                  isFooter: !0,
                  isRowActionsStickyLocal: this.isRowActionsStickyLocal,
                  isTree: this.isTree,
                  isTreeCollapsible: this.isTreeCollapsible,
                  isTreeOpened: this.isTreeOpened,
                  keyChildren: this.keyChildren,
                  keyId: this.keyId,
                  level: 1,
                  row: e,
                  rowActionsClass: this.rowActionsClass,
                  rowClass: this.rowClass,
                  rowIndex: t,
                  rowsLength: this.rowsFooter.length,
                  selectedRowsIndexes: this.selectedRowsIndexes,
                  onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
                }, {
                  get: (r) => [
                    c(ac, {
                      data: r.row,
                      keyLabel: r.column.footerPath,
                      filter: r.column.footerFilter,
                      filterParameters: r.column.footerFilterParameters,
                      defaultValue: r.column.footerDefaultValue
                    })
                  ],
                  ...this.$slots
                });
              }))
            ])
          ])
        ]),
        !this.isViewTableVisible && this.viewCurrent && this.$slots[this.viewCurrent.type] && this.$slots[this.viewCurrent.type]({
          isLoading: this.isLoadingTable,
          rows: this.rowsLocalAll
        }),
        this.usePaginationLocal && c(xk, {
          countAllRows: this.countAllRowsLocal,
          disabled: this.pagination.disabled,
          hasRows: this.hasRows,
          limit: this.limit,
          limitsPerPage: this.pagination.limitsPerPage,
          maxPages: this.pagination.maxPages,
          offset: this.offset,
          rowsLength: this.rowsLocalLength,
          totalRowsCount: this.totalRowsCount,
          "onUpdate:limit": this.changeLimit,
          "onUpdate:offset": this.changeOffset
        }),
        this.isPreviewRightOpen && c($H, {
          countAllRows: this.countAllRowsLocal,
          isMobile: this.isMobile,
          isLoadingTable: this.isLoadingTable,
          limitPagination: this.limit,
          offsetPagination: this.offset,
          previewStyles: this.previewStyles,
          rowIndex: this.previewRightRowIndex,
          rows: this.rowsLocalAll,
          disabledPreviewRowCallback: this.disabledPreviewRowCallback,
          usePagination: !!this.usePaginationLocal,
          onClosePreview: this.closePreview,
          onMousedownResizePreviewRight: this.mousedownResizePreviewRight,
          onMousemoveResizePreviewRight: this.mousemoveResizePreviewRight,
          onMouseupResizePreviewRight: this.mouseupResizePreviewRight,
          onTogglePreview: this.onTogglePreview,
          onTogglePreviewResize: this.togglePreviewResize,
          "onUpdate:offset": this.changeOffset
        }, this.$slots)
      ])
    ]);
  }
};
function rL(e) {
  const t = d(e, "activeTabIdLocal"), n = d(e, "index"), r = d(e, "keyId"), s = d(e, "parentId"), i = d(e, "tab"), o = _(() => r.value ? ce(i.value, r.value) : n.value), u = _(() => t.value === o.value), f = _(() => `${s.value}_${n.value}`);
  return {
    idForContent: _(() => `${f.value}_content`),
    idLocal: f,
    isActive: u,
    tabIdLocal: o
  };
}
function xV(e) {
  const t = d(e, "tab"), n = d(e, "keyContent");
  return {
    contentLocal: _(() => {
      if (n.value)
        return ce(t.value, n.value);
    })
  };
}
const MV = {
  name: "ATabsContent",
  props: {
    activeTabIdLocal: {
      type: [String, Number],
      required: !0
    },
    index: {
      type: Number,
      required: !0
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    parentId: {
      type: String,
      required: !0
    },
    tab: {
      type: Object,
      required: !0
    }
  },
  setup(e) {
    const {
      idForContent: t,
      idLocal: n,
      isActive: r,
      tabIdLocal: s
    } = rL(e), {
      contentLocal: i
    } = xV(e);
    return {
      contentLocal: i,
      idForContent: t,
      idLocal: n,
      isActive: r,
      tabIdLocal: s
    };
  },
  render() {
    let e = "";
    return this.tab.slotContent && this.$slots[this.tab.slotContent] ? e = this.$slots[this.tab.slotContent]({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.$slots.content ? e = this.$slots.content({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.contentLocal && (e = c(pe, {
      html: this.contentLocal
    })), c("div", {
      id: this.idForContent,
      "aria-labelledby": this.idLocal,
      class: [
        "a_tabs__content",
        {
          a_tabs__content_show: this.isActive
        }
      ],
      role: "tabpanel"
    }, [
      e
    ]);
  }
};
function FV({
  isDisabled: e = _(() => !1)
}) {
  return {
    tabindexLocal: _(() => e.value ? -1 : 0)
  };
}
function qV(e, { emit: t }, {
  isDisabled: n = _(() => !1),
  tabIdLocal: r = _(() => "")
}) {
  const s = d(e, "index"), i = d(e, "tab"), o = (f) => {
    n.value || t("changeTab", { $event: f, tab: i.value, tabId: r.value, index: s.value });
  };
  return {
    changeTabLocal: o,
    keydownTab: (f) => {
      (f.keyCode === Z.enter || f.keyCode === Z.space) && (o(f), f.stopPropagation(), f.preventDefault());
    }
  };
}
function $V(e) {
  const t = d(e, "disabled"), n = d(e, "keyDisabled"), r = d(e, "tab");
  return {
    isDisabled: _(() => {
      if (t.value || n.value && ce(r.value, n.value) === !0)
        return !0;
    })
  };
}
function UV(e) {
  const t = d(e, "tab"), n = d(e, "keyLabel");
  return {
    labelLocal: _(() => {
      if (n.value)
        return ce(t.value, n.value);
    })
  };
}
function kV(e) {
  const t = d(e, "tab"), n = d(e, "keyTitle");
  return {
    titleLocal: _(() => {
      if (n.value)
        return ce(t.value, n.value);
    })
  };
}
const HV = {
  name: "ATabsTab",
  props: {
    activeTabIdLocal: {
      type: [String, Number],
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    index: {
      type: Number,
      required: !0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyTitle: {
      type: String,
      required: !1,
      default: "title"
    },
    parentId: {
      type: String,
      required: !0
    },
    tab: {
      type: Object,
      required: !0
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Gn.indexOf(e) !== -1
    }
  },
  emits: [
    "changeTab"
  ],
  setup(e, t) {
    const {
      idForContent: n,
      idLocal: r,
      isActive: s,
      tabIdLocal: i
    } = rL(e), {
      isDisabled: o
    } = $V(e), {
      tabindexLocal: u
    } = FV({
      isDisabled: o
    }), {
      changeTabLocal: f,
      keydownTab: A
    } = qV(e, t, {
      isDisabled: o,
      tabIdLocal: i
    }), {
      labelLocal: E
    } = UV(e), {
      titleLocal: p
    } = kV(e);
    return {
      changeTabLocal: f,
      idForContent: n,
      idLocal: r,
      isActive: s,
      isDisabled: o,
      keydownTab: A,
      labelLocal: E,
      tabindexLocal: u,
      tabIdLocal: i,
      titleLocal: p
    };
  },
  render() {
    let e = "";
    return this.tab.slotTab && this.$slots[this.tab.slotTab] ? e = this.$slots[this.tab.slotTab]({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.$slots.tab ? e = this.$slots.tab({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.labelLocal && (e = c(pe, {
      html: this.labelLocal,
      tag: "span"
    })), c("li", {
      class: [
        "a_tabs__list__item",
        this.tab.classLi
      ]
    }, [
      c(Ee, {
        id: this.idLocal,
        "aria-controls": this.idForContent,
        ariaDisabled: this.isDisabled,
        ariaSelected: this.isActive,
        class: [
          "a_tabs__list__link",
          this.tab.class,
          {
            a_tabs__list__link_active: this.isActive,
            a_tabs__list__link_disabled: this.isDisabled
          }
        ],
        classDefault: "",
        isTitleHtml: this.isTitleHtml,
        role: "tab",
        tabindex: this.tabindexLocal,
        tag: "a",
        titlePlacement: this.titlePlacement,
        type: "button",
        title: this.titleLocal,
        onClick: this.changeTabLocal,
        onKeydown: this.keydownTab
      }, () => [
        e
      ])
    ]);
  }
};
function VV(e, { emit: t }) {
  const n = d(e, "activeTabId"), r = d(e, "data"), s = d(e, "isChangeOutside"), i = d(e, "keyActive"), o = d(e, "keyId"), u = B(void 0), f = () => {
    se(n.value) || (u.value = n.value);
  };
  return {
    activeTabIdLocal: u,
    changeTab: ({ $event: p, tab: T, tabId: S, index: m }) => {
      u.value !== S && (s.value || (u.value = S), t("change", { $event: p, tab: T, tabId: S, index: m }));
    },
    initActiveTabIdLocal: () => {
      f(), se(u.value) && (i.value && (z(r.value, (p, T) => {
        if (ce(p, i.value))
          return o.value ? u.value = ce(p, o.value) || T : u.value = T, !1;
      }), !se(u.value)) || (o.value ? u.value = ce(r.value, `[0].${o.value}`) || 0 : u.value = 0));
    },
    setActiveTabIdLocal: f
  };
}
const tAe = {
  name: "ATabs",
  props: {
    activeTabId: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => at("a_tabs_")
    },
    isBoxed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isChangeOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isVertical: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyActive: {
      type: String,
      required: !1,
      default: "active"
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyTitle: {
      type: String,
      required: !1,
      default: "title"
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Gn.indexOf(e) !== -1
    }
  },
  emits: [
    "change"
  ],
  setup(e, t) {
    const n = d(e, "activeTabId"), {
      activeTabIdLocal: r,
      changeTab: s,
      initActiveTabIdLocal: i,
      setActiveTabIdLocal: o
    } = VV(e, t);
    return i(), rt(n, () => {
      o();
    }), {
      activeTabIdLocal: r,
      changeTab: s
    };
  },
  render() {
    return c("div", {
      id: this.id,
      class: ["a_tabs", {
        a_tabs_boxed: this.isBoxed,
        a_tabs_vertical: this.isVertical
      }]
    }, [
      c("div", {
        class: "a_tabs__box"
      }, [
        c("ul", {
          class: "a_tabs__list",
          role: "tablist"
        }, [
          this.data.map((e, t) => c(HV, {
            key: t,
            activeTabIdLocal: this.activeTabIdLocal,
            disabled: this.disabled,
            index: t,
            isTitleHtml: this.isTitleHtml,
            keyDisabled: this.keyDisabled,
            keyId: this.keyId,
            keyLabel: this.keyLabel,
            keyTitle: this.keyTitle,
            parentId: this.id,
            tab: e,
            titlePlacement: this.titlePlacement,
            onChangeTab: this.changeTab
          }, this.$slots))
        ])
      ]),
      c("div", {
        class: "a_tabs__contents"
      }, [
        this.data.map((e, t) => c(MV, {
          key: t,
          activeTabIdLocal: this.activeTabIdLocal,
          index: t,
          keyContent: this.keyContent,
          keyId: this.keyId,
          parentId: this.id,
          tab: e
        }, this.$slots))
      ])
    ]);
  }
};
function aL(e, t) {
  return function() {
    return e.apply(t, arguments);
  };
}
const { toString: WV } = Object.prototype, { getPrototypeOf: If } = Object, Wu = /* @__PURE__ */ ((e) => (t) => {
  const n = WV.call(t);
  return e[n] || (e[n] = n.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null)), Dr = (e) => (e = e.toLowerCase(), (t) => Wu(t) === e), Gu = (e) => (t) => typeof t === e, { isArray: Bi } = Array, gl = Gu("undefined");
function GV(e) {
  return e !== null && !gl(e) && e.constructor !== null && !gl(e.constructor) && Hn(e.constructor.isBuffer) && e.constructor.isBuffer(e);
}
const sL = Dr("ArrayBuffer");
function jV(e) {
  let t;
  return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? t = ArrayBuffer.isView(e) : t = e && e.buffer && sL(e.buffer), t;
}
const KV = Gu("string"), Hn = Gu("function"), iL = Gu("number"), ju = (e) => e !== null && typeof e == "object", zV = (e) => e === !0 || e === !1, Zo = (e) => {
  if (Wu(e) !== "object")
    return !1;
  const t = If(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}, YV = Dr("Date"), XV = Dr("File"), ZV = Dr("Blob"), JV = Dr("FileList"), QV = (e) => ju(e) && Hn(e.pipe), eW = (e) => {
  let t;
  return e && (typeof FormData == "function" && e instanceof FormData || Hn(e.append) && ((t = Wu(e)) === "formdata" || // detect form-data instance
  t === "object" && Hn(e.toString) && e.toString() === "[object FormData]"));
}, tW = Dr("URLSearchParams"), [nW, rW, aW, sW] = ["ReadableStream", "Request", "Response", "Headers"].map(Dr), iW = (e) => e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function kl(e, t, { allOwnKeys: n = !1 } = {}) {
  if (e === null || typeof e > "u")
    return;
  let r, s;
  if (typeof e != "object" && (e = [e]), Bi(e))
    for (r = 0, s = e.length; r < s; r++)
      t.call(null, e[r], r, e);
  else {
    const i = n ? Object.getOwnPropertyNames(e) : Object.keys(e), o = i.length;
    let u;
    for (r = 0; r < o; r++)
      u = i[r], t.call(null, e[u], u, e);
  }
}
function lL(e, t) {
  t = t.toLowerCase();
  const n = Object.keys(e);
  let r = n.length, s;
  for (; r-- > 0; )
    if (s = n[r], t === s.toLowerCase())
      return s;
  return null;
}
const Ps = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : global, oL = (e) => !gl(e) && e !== Ps;
function _c() {
  const { caseless: e } = oL(this) && this || {}, t = {}, n = (r, s) => {
    const i = e && lL(t, s) || s;
    Zo(t[i]) && Zo(r) ? t[i] = _c(t[i], r) : Zo(r) ? t[i] = _c({}, r) : Bi(r) ? t[i] = r.slice() : t[i] = r;
  };
  for (let r = 0, s = arguments.length; r < s; r++)
    arguments[r] && kl(arguments[r], n);
  return t;
}
const lW = (e, t, n, { allOwnKeys: r } = {}) => (kl(t, (s, i) => {
  n && Hn(s) ? e[i] = aL(s, n) : e[i] = s;
}, { allOwnKeys: r }), e), oW = (e) => (e.charCodeAt(0) === 65279 && (e = e.slice(1)), e), uW = (e, t, n, r) => {
  e.prototype = Object.create(t.prototype, r), e.prototype.constructor = e, Object.defineProperty(e, "super", {
    value: t.prototype
  }), n && Object.assign(e.prototype, n);
}, _W = (e, t, n, r) => {
  let s, i, o;
  const u = {};
  if (t = t || {}, e == null) return t;
  do {
    for (s = Object.getOwnPropertyNames(e), i = s.length; i-- > 0; )
      o = s[i], (!r || r(o, e, t)) && !u[o] && (t[o] = e[o], u[o] = !0);
    e = n !== !1 && If(e);
  } while (e && (!n || n(e, t)) && e !== Object.prototype);
  return t;
}, dW = (e, t, n) => {
  e = String(e), (n === void 0 || n > e.length) && (n = e.length), n -= t.length;
  const r = e.indexOf(t, n);
  return r !== -1 && r === n;
}, cW = (e) => {
  if (!e) return null;
  if (Bi(e)) return e;
  let t = e.length;
  if (!iL(t)) return null;
  const n = new Array(t);
  for (; t-- > 0; )
    n[t] = e[t];
  return n;
}, fW = /* @__PURE__ */ ((e) => (t) => e && t instanceof e)(typeof Uint8Array < "u" && If(Uint8Array)), hW = (e, t) => {
  const r = (e && e[Symbol.iterator]).call(e);
  let s;
  for (; (s = r.next()) && !s.done; ) {
    const i = s.value;
    t.call(e, i[0], i[1]);
  }
}, AW = (e, t) => {
  let n;
  const r = [];
  for (; (n = e.exec(t)) !== null; )
    r.push(n);
  return r;
}, EW = Dr("HTMLFormElement"), pW = (e) => e.toLowerCase().replace(
  /[-_\s]([a-z\d])(\w*)/g,
  function(n, r, s) {
    return r.toUpperCase() + s;
  }
), pp = (({ hasOwnProperty: e }) => (t, n) => e.call(t, n))(Object.prototype), TW = Dr("RegExp"), uL = (e, t) => {
  const n = Object.getOwnPropertyDescriptors(e), r = {};
  kl(n, (s, i) => {
    let o;
    (o = t(s, i, e)) !== !1 && (r[i] = o || s);
  }), Object.defineProperties(e, r);
}, SW = (e) => {
  uL(e, (t, n) => {
    if (Hn(e) && ["arguments", "caller", "callee"].indexOf(n) !== -1)
      return !1;
    const r = e[n];
    if (Hn(r)) {
      if (t.enumerable = !1, "writable" in t) {
        t.writable = !1;
        return;
      }
      t.set || (t.set = () => {
        throw Error("Can not rewrite read-only method '" + n + "'");
      });
    }
  });
}, LW = (e, t) => {
  const n = {}, r = (s) => {
    s.forEach((i) => {
      n[i] = !0;
    });
  };
  return Bi(e) ? r(e) : r(String(e).split(t)), n;
}, mW = () => {
}, bW = (e, t) => e != null && Number.isFinite(e = +e) ? e : t, Bd = "abcdefghijklmnopqrstuvwxyz", Tp = "0123456789", _L = {
  DIGIT: Tp,
  ALPHA: Bd,
  ALPHA_DIGIT: Bd + Bd.toUpperCase() + Tp
}, IW = (e = 16, t = _L.ALPHA_DIGIT) => {
  let n = "";
  const { length: r } = t;
  for (; e--; )
    n += t[Math.random() * r | 0];
  return n;
};
function vW(e) {
  return !!(e && Hn(e.append) && e[Symbol.toStringTag] === "FormData" && e[Symbol.iterator]);
}
const yW = (e) => {
  const t = new Array(10), n = (r, s) => {
    if (ju(r)) {
      if (t.indexOf(r) >= 0)
        return;
      if (!("toJSON" in r)) {
        t[s] = r;
        const i = Bi(r) ? [] : {};
        return kl(r, (o, u) => {
          const f = n(o, s + 1);
          !gl(f) && (i[u] = f);
        }), t[s] = void 0, i;
      }
    }
    return r;
  };
  return n(e, 0);
}, RW = Dr("AsyncFunction"), gW = (e) => e && (ju(e) || Hn(e)) && Hn(e.then) && Hn(e.catch), dL = ((e, t) => e ? setImmediate : t ? ((n, r) => (Ps.addEventListener("message", ({ source: s, data: i }) => {
  s === Ps && i === n && r.length && r.shift()();
}, !1), (s) => {
  r.push(s), Ps.postMessage(n, "*");
}))(`axios@${Math.random()}`, []) : (n) => setTimeout(n))(
  typeof setImmediate == "function",
  Hn(Ps.postMessage)
), OW = typeof queueMicrotask < "u" ? queueMicrotask.bind(Ps) : typeof process < "u" && process.nextTick || dL, K = {
  isArray: Bi,
  isArrayBuffer: sL,
  isBuffer: GV,
  isFormData: eW,
  isArrayBufferView: jV,
  isString: KV,
  isNumber: iL,
  isBoolean: zV,
  isObject: ju,
  isPlainObject: Zo,
  isReadableStream: nW,
  isRequest: rW,
  isResponse: aW,
  isHeaders: sW,
  isUndefined: gl,
  isDate: YV,
  isFile: XV,
  isBlob: ZV,
  isRegExp: TW,
  isFunction: Hn,
  isStream: QV,
  isURLSearchParams: tW,
  isTypedArray: fW,
  isFileList: JV,
  forEach: kl,
  merge: _c,
  extend: lW,
  trim: iW,
  stripBOM: oW,
  inherits: uW,
  toFlatObject: _W,
  kindOf: Wu,
  kindOfTest: Dr,
  endsWith: dW,
  toArray: cW,
  forEachEntry: hW,
  matchAll: AW,
  isHTMLForm: EW,
  hasOwnProperty: pp,
  hasOwnProp: pp,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors: uL,
  freezeMethods: SW,
  toObjectSet: LW,
  toCamelCase: pW,
  noop: mW,
  toFiniteNumber: bW,
  findKey: lL,
  global: Ps,
  isContextDefined: oL,
  ALPHABET: _L,
  generateString: IW,
  isSpecCompliantForm: vW,
  toJSONObject: yW,
  isAsyncFn: RW,
  isThenable: gW,
  setImmediate: dL,
  asap: OW
};
function We(e, t, n, r, s) {
  Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = e, this.name = "AxiosError", t && (this.code = t), n && (this.config = n), r && (this.request = r), s && (this.response = s, this.status = s.status ? s.status : null);
}
K.inherits(We, Error, {
  toJSON: function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: K.toJSONObject(this.config),
      code: this.code,
      status: this.status
    };
  }
});
const cL = We.prototype, fL = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
].forEach((e) => {
  fL[e] = { value: e };
});
Object.defineProperties(We, fL);
Object.defineProperty(cL, "isAxiosError", { value: !0 });
We.from = (e, t, n, r, s, i) => {
  const o = Object.create(cL);
  return K.toFlatObject(e, o, function(f) {
    return f !== Error.prototype;
  }, (u) => u !== "isAxiosError"), We.call(o, e.message, t, n, r, s), o.cause = e, o.name = e.name, i && Object.assign(o, i), o;
};
const CW = null;
function dc(e) {
  return K.isPlainObject(e) || K.isArray(e);
}
function hL(e) {
  return K.endsWith(e, "[]") ? e.slice(0, -2) : e;
}
function Sp(e, t, n) {
  return e ? e.concat(t).map(function(s, i) {
    return s = hL(s), !n && i ? "[" + s + "]" : s;
  }).join(n ? "." : "") : t;
}
function DW(e) {
  return K.isArray(e) && !e.some(dc);
}
const NW = K.toFlatObject(K, {}, null, function(t) {
  return /^is[A-Z]/.test(t);
});
function Ku(e, t, n) {
  if (!K.isObject(e))
    throw new TypeError("target must be an object");
  t = t || new FormData(), n = K.toFlatObject(n, {
    metaTokens: !0,
    dots: !1,
    indexes: !1
  }, !1, function(b, I) {
    return !K.isUndefined(I[b]);
  });
  const r = n.metaTokens, s = n.visitor || E, i = n.dots, o = n.indexes, f = (n.Blob || typeof Blob < "u" && Blob) && K.isSpecCompliantForm(t);
  if (!K.isFunction(s))
    throw new TypeError("visitor must be a function");
  function A(m) {
    if (m === null) return "";
    if (K.isDate(m))
      return m.toISOString();
    if (!f && K.isBlob(m))
      throw new We("Blob is not supported. Use a Buffer instead.");
    return K.isArrayBuffer(m) || K.isTypedArray(m) ? f && typeof Blob == "function" ? new Blob([m]) : Buffer.from(m) : m;
  }
  function E(m, b, I) {
    let v = m;
    if (m && !I && typeof m == "object") {
      if (K.endsWith(b, "{}"))
        b = r ? b : b.slice(0, -2), m = JSON.stringify(m);
      else if (K.isArray(m) && DW(m) || (K.isFileList(m) || K.endsWith(b, "[]")) && (v = K.toArray(m)))
        return b = hL(b), v.forEach(function(R, D) {
          !(K.isUndefined(R) || R === null) && t.append(
            // eslint-disable-next-line no-nested-ternary
            o === !0 ? Sp([b], D, i) : o === null ? b : b + "[]",
            A(R)
          );
        }), !1;
    }
    return dc(m) ? !0 : (t.append(Sp(I, b, i), A(m)), !1);
  }
  const p = [], T = Object.assign(NW, {
    defaultVisitor: E,
    convertValue: A,
    isVisitable: dc
  });
  function S(m, b) {
    if (!K.isUndefined(m)) {
      if (p.indexOf(m) !== -1)
        throw Error("Circular reference detected in " + b.join("."));
      p.push(m), K.forEach(m, function(v, g) {
        (!(K.isUndefined(v) || v === null) && s.call(
          t,
          v,
          K.isString(g) ? g.trim() : g,
          b,
          T
        )) === !0 && S(v, b ? b.concat(g) : [g]);
      }), p.pop();
    }
  }
  if (!K.isObject(e))
    throw new TypeError("data must be an object");
  return S(e), t;
}
function Lp(e) {
  const t = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0"
  };
  return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function(r) {
    return t[r];
  });
}
function vf(e, t) {
  this._pairs = [], e && Ku(e, this, t);
}
const AL = vf.prototype;
AL.append = function(t, n) {
  this._pairs.push([t, n]);
};
AL.toString = function(t) {
  const n = t ? function(r) {
    return t.call(this, r, Lp);
  } : Lp;
  return this._pairs.map(function(s) {
    return n(s[0]) + "=" + n(s[1]);
  }, "").join("&");
};
function BW(e) {
  return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
function EL(e, t, n) {
  if (!t)
    return e;
  const r = n && n.encode || BW;
  K.isFunction(n) && (n = {
    serialize: n
  });
  const s = n && n.serialize;
  let i;
  if (s ? i = s(t, n) : i = K.isURLSearchParams(t) ? t.toString() : new vf(t, n).toString(r), i) {
    const o = e.indexOf("#");
    o !== -1 && (e = e.slice(0, o)), e += (e.indexOf("?") === -1 ? "?" : "&") + i;
  }
  return e;
}
class mp {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(t, n, r) {
    return this.handlers.push({
      fulfilled: t,
      rejected: n,
      synchronous: r ? r.synchronous : !1,
      runWhen: r ? r.runWhen : null
    }), this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(t) {
    this.handlers[t] && (this.handlers[t] = null);
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    this.handlers && (this.handlers = []);
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(t) {
    K.forEach(this.handlers, function(r) {
      r !== null && t(r);
    });
  }
}
const pL = {
  silentJSONParsing: !0,
  forcedJSONParsing: !0,
  clarifyTimeoutError: !1
}, wW = typeof URLSearchParams < "u" ? URLSearchParams : vf, PW = typeof FormData < "u" ? FormData : null, xW = typeof Blob < "u" ? Blob : null, MW = {
  isBrowser: !0,
  classes: {
    URLSearchParams: wW,
    FormData: PW,
    Blob: xW
  },
  protocols: ["http", "https", "file", "blob", "url", "data"]
}, yf = typeof window < "u" && typeof document < "u", cc = typeof navigator == "object" && navigator || void 0, FW = yf && (!cc || ["ReactNative", "NativeScript", "NS"].indexOf(cc.product) < 0), qW = typeof WorkerGlobalScope < "u" && // eslint-disable-next-line no-undef
self instanceof WorkerGlobalScope && typeof self.importScripts == "function", $W = yf && window.location.href || "http://localhost", UW = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hasBrowserEnv: yf,
  hasStandardBrowserEnv: FW,
  hasStandardBrowserWebWorkerEnv: qW,
  navigator: cc,
  origin: $W
}, Symbol.toStringTag, { value: "Module" })), un = {
  ...UW,
  ...MW
};
function kW(e, t) {
  return Ku(e, new un.classes.URLSearchParams(), Object.assign({
    visitor: function(n, r, s, i) {
      return un.isNode && K.isBuffer(n) ? (this.append(r, n.toString("base64")), !1) : i.defaultVisitor.apply(this, arguments);
    }
  }, t));
}
function HW(e) {
  return K.matchAll(/\w+|\[(\w*)]/g, e).map((t) => t[0] === "[]" ? "" : t[1] || t[0]);
}
function VW(e) {
  const t = {}, n = Object.keys(e);
  let r;
  const s = n.length;
  let i;
  for (r = 0; r < s; r++)
    i = n[r], t[i] = e[i];
  return t;
}
function TL(e) {
  function t(n, r, s, i) {
    let o = n[i++];
    if (o === "__proto__") return !0;
    const u = Number.isFinite(+o), f = i >= n.length;
    return o = !o && K.isArray(s) ? s.length : o, f ? (K.hasOwnProp(s, o) ? s[o] = [s[o], r] : s[o] = r, !u) : ((!s[o] || !K.isObject(s[o])) && (s[o] = []), t(n, r, s[o], i) && K.isArray(s[o]) && (s[o] = VW(s[o])), !u);
  }
  if (K.isFormData(e) && K.isFunction(e.entries)) {
    const n = {};
    return K.forEachEntry(e, (r, s) => {
      t(HW(r), s, n, 0);
    }), n;
  }
  return null;
}
function WW(e, t, n) {
  if (K.isString(e))
    try {
      return (t || JSON.parse)(e), K.trim(e);
    } catch (r) {
      if (r.name !== "SyntaxError")
        throw r;
    }
  return (n || JSON.stringify)(e);
}
const Hl = {
  transitional: pL,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [function(t, n) {
    const r = n.getContentType() || "", s = r.indexOf("application/json") > -1, i = K.isObject(t);
    if (i && K.isHTMLForm(t) && (t = new FormData(t)), K.isFormData(t))
      return s ? JSON.stringify(TL(t)) : t;
    if (K.isArrayBuffer(t) || K.isBuffer(t) || K.isStream(t) || K.isFile(t) || K.isBlob(t) || K.isReadableStream(t))
      return t;
    if (K.isArrayBufferView(t))
      return t.buffer;
    if (K.isURLSearchParams(t))
      return n.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1), t.toString();
    let u;
    if (i) {
      if (r.indexOf("application/x-www-form-urlencoded") > -1)
        return kW(t, this.formSerializer).toString();
      if ((u = K.isFileList(t)) || r.indexOf("multipart/form-data") > -1) {
        const f = this.env && this.env.FormData;
        return Ku(
          u ? { "files[]": t } : t,
          f && new f(),
          this.formSerializer
        );
      }
    }
    return i || s ? (n.setContentType("application/json", !1), WW(t)) : t;
  }],
  transformResponse: [function(t) {
    const n = this.transitional || Hl.transitional, r = n && n.forcedJSONParsing, s = this.responseType === "json";
    if (K.isResponse(t) || K.isReadableStream(t))
      return t;
    if (t && K.isString(t) && (r && !this.responseType || s)) {
      const o = !(n && n.silentJSONParsing) && s;
      try {
        return JSON.parse(t);
      } catch (u) {
        if (o)
          throw u.name === "SyntaxError" ? We.from(u, We.ERR_BAD_RESPONSE, this, null, this.response) : u;
      }
    }
    return t;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: un.classes.FormData,
    Blob: un.classes.Blob
  },
  validateStatus: function(t) {
    return t >= 200 && t < 300;
  },
  headers: {
    common: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": void 0
    }
  }
};
K.forEach(["delete", "get", "head", "post", "put", "patch"], (e) => {
  Hl.headers[e] = {};
});
const GW = K.toObjectSet([
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
]), jW = (e) => {
  const t = {};
  let n, r, s;
  return e && e.split(`
`).forEach(function(o) {
    s = o.indexOf(":"), n = o.substring(0, s).trim().toLowerCase(), r = o.substring(s + 1).trim(), !(!n || t[n] && GW[n]) && (n === "set-cookie" ? t[n] ? t[n].push(r) : t[n] = [r] : t[n] = t[n] ? t[n] + ", " + r : r);
  }), t;
}, bp = Symbol("internals");
function ll(e) {
  return e && String(e).trim().toLowerCase();
}
function Jo(e) {
  return e === !1 || e == null ? e : K.isArray(e) ? e.map(Jo) : String(e);
}
function KW(e) {
  const t = /* @__PURE__ */ Object.create(null), n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let r;
  for (; r = n.exec(e); )
    t[r[1]] = r[2];
  return t;
}
const zW = (e) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());
function wd(e, t, n, r, s) {
  if (K.isFunction(r))
    return r.call(this, t, n);
  if (s && (t = n), !!K.isString(t)) {
    if (K.isString(r))
      return t.indexOf(r) !== -1;
    if (K.isRegExp(r))
      return r.test(t);
  }
}
function YW(e) {
  return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (t, n, r) => n.toUpperCase() + r);
}
function XW(e, t) {
  const n = K.toCamelCase(" " + t);
  ["get", "set", "has"].forEach((r) => {
    Object.defineProperty(e, r + n, {
      value: function(s, i, o) {
        return this[r].call(this, t, s, i, o);
      },
      configurable: !0
    });
  });
}
let gn = class {
  constructor(t) {
    t && this.set(t);
  }
  set(t, n, r) {
    const s = this;
    function i(u, f, A) {
      const E = ll(f);
      if (!E)
        throw new Error("header name must be a non-empty string");
      const p = K.findKey(s, E);
      (!p || s[p] === void 0 || A === !0 || A === void 0 && s[p] !== !1) && (s[p || f] = Jo(u));
    }
    const o = (u, f) => K.forEach(u, (A, E) => i(A, E, f));
    if (K.isPlainObject(t) || t instanceof this.constructor)
      o(t, n);
    else if (K.isString(t) && (t = t.trim()) && !zW(t))
      o(jW(t), n);
    else if (K.isHeaders(t))
      for (const [u, f] of t.entries())
        i(f, u, r);
    else
      t != null && i(n, t, r);
    return this;
  }
  get(t, n) {
    if (t = ll(t), t) {
      const r = K.findKey(this, t);
      if (r) {
        const s = this[r];
        if (!n)
          return s;
        if (n === !0)
          return KW(s);
        if (K.isFunction(n))
          return n.call(this, s, r);
        if (K.isRegExp(n))
          return n.exec(s);
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(t, n) {
    if (t = ll(t), t) {
      const r = K.findKey(this, t);
      return !!(r && this[r] !== void 0 && (!n || wd(this, this[r], r, n)));
    }
    return !1;
  }
  delete(t, n) {
    const r = this;
    let s = !1;
    function i(o) {
      if (o = ll(o), o) {
        const u = K.findKey(r, o);
        u && (!n || wd(r, r[u], u, n)) && (delete r[u], s = !0);
      }
    }
    return K.isArray(t) ? t.forEach(i) : i(t), s;
  }
  clear(t) {
    const n = Object.keys(this);
    let r = n.length, s = !1;
    for (; r--; ) {
      const i = n[r];
      (!t || wd(this, this[i], i, t, !0)) && (delete this[i], s = !0);
    }
    return s;
  }
  normalize(t) {
    const n = this, r = {};
    return K.forEach(this, (s, i) => {
      const o = K.findKey(r, i);
      if (o) {
        n[o] = Jo(s), delete n[i];
        return;
      }
      const u = t ? YW(i) : String(i).trim();
      u !== i && delete n[i], n[u] = Jo(s), r[u] = !0;
    }), this;
  }
  concat(...t) {
    return this.constructor.concat(this, ...t);
  }
  toJSON(t) {
    const n = /* @__PURE__ */ Object.create(null);
    return K.forEach(this, (r, s) => {
      r != null && r !== !1 && (n[s] = t && K.isArray(r) ? r.join(", ") : r);
    }), n;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([t, n]) => t + ": " + n).join(`
`);
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(t) {
    return t instanceof this ? t : new this(t);
  }
  static concat(t, ...n) {
    const r = new this(t);
    return n.forEach((s) => r.set(s)), r;
  }
  static accessor(t) {
    const r = (this[bp] = this[bp] = {
      accessors: {}
    }).accessors, s = this.prototype;
    function i(o) {
      const u = ll(o);
      r[u] || (XW(s, o), r[u] = !0);
    }
    return K.isArray(t) ? t.forEach(i) : i(t), this;
  }
};
gn.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
K.reduceDescriptors(gn.prototype, ({ value: e }, t) => {
  let n = t[0].toUpperCase() + t.slice(1);
  return {
    get: () => e,
    set(r) {
      this[n] = r;
    }
  };
});
K.freezeMethods(gn);
function Pd(e, t) {
  const n = this || Hl, r = t || n, s = gn.from(r.headers);
  let i = r.data;
  return K.forEach(e, function(u) {
    i = u.call(n, i, s.normalize(), t ? t.status : void 0);
  }), s.normalize(), i;
}
function SL(e) {
  return !!(e && e.__CANCEL__);
}
function wi(e, t, n) {
  We.call(this, e ?? "canceled", We.ERR_CANCELED, t, n), this.name = "CanceledError";
}
K.inherits(wi, We, {
  __CANCEL__: !0
});
function LL(e, t, n) {
  const r = n.config.validateStatus;
  !n.status || !r || r(n.status) ? e(n) : t(new We(
    "Request failed with status code " + n.status,
    [We.ERR_BAD_REQUEST, We.ERR_BAD_RESPONSE][Math.floor(n.status / 100) - 4],
    n.config,
    n.request,
    n
  ));
}
function ZW(e) {
  const t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
  return t && t[1] || "";
}
function JW(e, t) {
  e = e || 10;
  const n = new Array(e), r = new Array(e);
  let s = 0, i = 0, o;
  return t = t !== void 0 ? t : 1e3, function(f) {
    const A = Date.now(), E = r[i];
    o || (o = A), n[s] = f, r[s] = A;
    let p = i, T = 0;
    for (; p !== s; )
      T += n[p++], p = p % e;
    if (s = (s + 1) % e, s === i && (i = (i + 1) % e), A - o < t)
      return;
    const S = E && A - E;
    return S ? Math.round(T * 1e3 / S) : void 0;
  };
}
function QW(e, t) {
  let n = 0, r = 1e3 / t, s, i;
  const o = (A, E = Date.now()) => {
    n = E, s = null, i && (clearTimeout(i), i = null), e.apply(null, A);
  };
  return [(...A) => {
    const E = Date.now(), p = E - n;
    p >= r ? o(A, E) : (s = A, i || (i = setTimeout(() => {
      i = null, o(s);
    }, r - p)));
  }, () => s && o(s)];
}
const Eu = (e, t, n = 3) => {
  let r = 0;
  const s = JW(50, 250);
  return QW((i) => {
    const o = i.loaded, u = i.lengthComputable ? i.total : void 0, f = o - r, A = s(f), E = o <= u;
    r = o;
    const p = {
      loaded: o,
      total: u,
      progress: u ? o / u : void 0,
      bytes: f,
      rate: A || void 0,
      estimated: A && u && E ? (u - o) / A : void 0,
      event: i,
      lengthComputable: u != null,
      [t ? "download" : "upload"]: !0
    };
    e(p);
  }, n);
}, Ip = (e, t) => {
  const n = e != null;
  return [(r) => t[0]({
    lengthComputable: n,
    total: e,
    loaded: r
  }), t[1]];
}, vp = (e) => (...t) => K.asap(() => e(...t)), e2 = un.hasStandardBrowserEnv ? /* @__PURE__ */ ((e, t) => (n) => (n = new URL(n, un.origin), e.protocol === n.protocol && e.host === n.host && (t || e.port === n.port)))(
  new URL(un.origin),
  un.navigator && /(msie|trident)/i.test(un.navigator.userAgent)
) : () => !0, t2 = un.hasStandardBrowserEnv ? (
  // Standard browser envs support document.cookie
  {
    write(e, t, n, r, s, i) {
      const o = [e + "=" + encodeURIComponent(t)];
      K.isNumber(n) && o.push("expires=" + new Date(n).toGMTString()), K.isString(r) && o.push("path=" + r), K.isString(s) && o.push("domain=" + s), i === !0 && o.push("secure"), document.cookie = o.join("; ");
    },
    read(e) {
      const t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
      return t ? decodeURIComponent(t[3]) : null;
    },
    remove(e) {
      this.write(e, "", Date.now() - 864e5);
    }
  }
) : (
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {
    },
    read() {
      return null;
    },
    remove() {
    }
  }
);
function n2(e) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e);
}
function r2(e, t) {
  return t ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "") : e;
}
function mL(e, t) {
  return e && !n2(t) ? r2(e, t) : t;
}
const yp = (e) => e instanceof gn ? { ...e } : e;
function ks(e, t) {
  t = t || {};
  const n = {};
  function r(A, E, p, T) {
    return K.isPlainObject(A) && K.isPlainObject(E) ? K.merge.call({ caseless: T }, A, E) : K.isPlainObject(E) ? K.merge({}, E) : K.isArray(E) ? E.slice() : E;
  }
  function s(A, E, p, T) {
    if (K.isUndefined(E)) {
      if (!K.isUndefined(A))
        return r(void 0, A, p, T);
    } else return r(A, E, p, T);
  }
  function i(A, E) {
    if (!K.isUndefined(E))
      return r(void 0, E);
  }
  function o(A, E) {
    if (K.isUndefined(E)) {
      if (!K.isUndefined(A))
        return r(void 0, A);
    } else return r(void 0, E);
  }
  function u(A, E, p) {
    if (p in t)
      return r(A, E);
    if (p in e)
      return r(void 0, A);
  }
  const f = {
    url: i,
    method: i,
    data: i,
    baseURL: o,
    transformRequest: o,
    transformResponse: o,
    paramsSerializer: o,
    timeout: o,
    timeoutMessage: o,
    withCredentials: o,
    withXSRFToken: o,
    adapter: o,
    responseType: o,
    xsrfCookieName: o,
    xsrfHeaderName: o,
    onUploadProgress: o,
    onDownloadProgress: o,
    decompress: o,
    maxContentLength: o,
    maxBodyLength: o,
    beforeRedirect: o,
    transport: o,
    httpAgent: o,
    httpsAgent: o,
    cancelToken: o,
    socketPath: o,
    responseEncoding: o,
    validateStatus: u,
    headers: (A, E, p) => s(yp(A), yp(E), p, !0)
  };
  return K.forEach(Object.keys(Object.assign({}, e, t)), function(E) {
    const p = f[E] || s, T = p(e[E], t[E], E);
    K.isUndefined(T) && p !== u || (n[E] = T);
  }), n;
}
const bL = (e) => {
  const t = ks({}, e);
  let { data: n, withXSRFToken: r, xsrfHeaderName: s, xsrfCookieName: i, headers: o, auth: u } = t;
  t.headers = o = gn.from(o), t.url = EL(mL(t.baseURL, t.url), e.params, e.paramsSerializer), u && o.set(
    "Authorization",
    "Basic " + btoa((u.username || "") + ":" + (u.password ? unescape(encodeURIComponent(u.password)) : ""))
  );
  let f;
  if (K.isFormData(n)) {
    if (un.hasStandardBrowserEnv || un.hasStandardBrowserWebWorkerEnv)
      o.setContentType(void 0);
    else if ((f = o.getContentType()) !== !1) {
      const [A, ...E] = f ? f.split(";").map((p) => p.trim()).filter(Boolean) : [];
      o.setContentType([A || "multipart/form-data", ...E].join("; "));
    }
  }
  if (un.hasStandardBrowserEnv && (r && K.isFunction(r) && (r = r(t)), r || r !== !1 && e2(t.url))) {
    const A = s && i && t2.read(i);
    A && o.set(s, A);
  }
  return t;
}, a2 = typeof XMLHttpRequest < "u", s2 = a2 && function(e) {
  return new Promise(function(n, r) {
    const s = bL(e);
    let i = s.data;
    const o = gn.from(s.headers).normalize();
    let { responseType: u, onUploadProgress: f, onDownloadProgress: A } = s, E, p, T, S, m;
    function b() {
      S && S(), m && m(), s.cancelToken && s.cancelToken.unsubscribe(E), s.signal && s.signal.removeEventListener("abort", E);
    }
    let I = new XMLHttpRequest();
    I.open(s.method.toUpperCase(), s.url, !0), I.timeout = s.timeout;
    function v() {
      if (!I)
        return;
      const R = gn.from(
        "getAllResponseHeaders" in I && I.getAllResponseHeaders()
      ), w = {
        data: !u || u === "text" || u === "json" ? I.responseText : I.response,
        status: I.status,
        statusText: I.statusText,
        headers: R,
        config: e,
        request: I
      };
      LL(function(P) {
        n(P), b();
      }, function(P) {
        r(P), b();
      }, w), I = null;
    }
    "onloadend" in I ? I.onloadend = v : I.onreadystatechange = function() {
      !I || I.readyState !== 4 || I.status === 0 && !(I.responseURL && I.responseURL.indexOf("file:") === 0) || setTimeout(v);
    }, I.onabort = function() {
      I && (r(new We("Request aborted", We.ECONNABORTED, e, I)), I = null);
    }, I.onerror = function() {
      r(new We("Network Error", We.ERR_NETWORK, e, I)), I = null;
    }, I.ontimeout = function() {
      let D = s.timeout ? "timeout of " + s.timeout + "ms exceeded" : "timeout exceeded";
      const w = s.transitional || pL;
      s.timeoutErrorMessage && (D = s.timeoutErrorMessage), r(new We(
        D,
        w.clarifyTimeoutError ? We.ETIMEDOUT : We.ECONNABORTED,
        e,
        I
      )), I = null;
    }, i === void 0 && o.setContentType(null), "setRequestHeader" in I && K.forEach(o.toJSON(), function(D, w) {
      I.setRequestHeader(w, D);
    }), K.isUndefined(s.withCredentials) || (I.withCredentials = !!s.withCredentials), u && u !== "json" && (I.responseType = s.responseType), A && ([T, m] = Eu(A, !0), I.addEventListener("progress", T)), f && I.upload && ([p, S] = Eu(f), I.upload.addEventListener("progress", p), I.upload.addEventListener("loadend", S)), (s.cancelToken || s.signal) && (E = (R) => {
      I && (r(!R || R.type ? new wi(null, e, I) : R), I.abort(), I = null);
    }, s.cancelToken && s.cancelToken.subscribe(E), s.signal && (s.signal.aborted ? E() : s.signal.addEventListener("abort", E)));
    const g = ZW(s.url);
    if (g && un.protocols.indexOf(g) === -1) {
      r(new We("Unsupported protocol " + g + ":", We.ERR_BAD_REQUEST, e));
      return;
    }
    I.send(i || null);
  });
}, i2 = (e, t) => {
  const { length: n } = e = e ? e.filter(Boolean) : [];
  if (t || n) {
    let r = new AbortController(), s;
    const i = function(A) {
      if (!s) {
        s = !0, u();
        const E = A instanceof Error ? A : this.reason;
        r.abort(E instanceof We ? E : new wi(E instanceof Error ? E.message : E));
      }
    };
    let o = t && setTimeout(() => {
      o = null, i(new We(`timeout ${t} of ms exceeded`, We.ETIMEDOUT));
    }, t);
    const u = () => {
      e && (o && clearTimeout(o), o = null, e.forEach((A) => {
        A.unsubscribe ? A.unsubscribe(i) : A.removeEventListener("abort", i);
      }), e = null);
    };
    e.forEach((A) => A.addEventListener("abort", i));
    const { signal: f } = r;
    return f.unsubscribe = () => K.asap(u), f;
  }
}, l2 = function* (e, t) {
  let n = e.byteLength;
  if (n < t) {
    yield e;
    return;
  }
  let r = 0, s;
  for (; r < n; )
    s = r + t, yield e.slice(r, s), r = s;
}, o2 = async function* (e, t) {
  for await (const n of u2(e))
    yield* l2(n, t);
}, u2 = async function* (e) {
  if (e[Symbol.asyncIterator]) {
    yield* e;
    return;
  }
  const t = e.getReader();
  try {
    for (; ; ) {
      const { done: n, value: r } = await t.read();
      if (n)
        break;
      yield r;
    }
  } finally {
    await t.cancel();
  }
}, Rp = (e, t, n, r) => {
  const s = o2(e, t);
  let i = 0, o, u = (f) => {
    o || (o = !0, r && r(f));
  };
  return new ReadableStream({
    async pull(f) {
      try {
        const { done: A, value: E } = await s.next();
        if (A) {
          u(), f.close();
          return;
        }
        let p = E.byteLength;
        if (n) {
          let T = i += p;
          n(T);
        }
        f.enqueue(new Uint8Array(E));
      } catch (A) {
        throw u(A), A;
      }
    },
    cancel(f) {
      return u(f), s.return();
    }
  }, {
    highWaterMark: 2
  });
}, zu = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", IL = zu && typeof ReadableStream == "function", _2 = zu && (typeof TextEncoder == "function" ? /* @__PURE__ */ ((e) => (t) => e.encode(t))(new TextEncoder()) : async (e) => new Uint8Array(await new Response(e).arrayBuffer())), vL = (e, ...t) => {
  try {
    return !!e(...t);
  } catch {
    return !1;
  }
}, d2 = IL && vL(() => {
  let e = !1;
  const t = new Request(un.origin, {
    body: new ReadableStream(),
    method: "POST",
    get duplex() {
      return e = !0, "half";
    }
  }).headers.has("Content-Type");
  return e && !t;
}), gp = 64 * 1024, fc = IL && vL(() => K.isReadableStream(new Response("").body)), pu = {
  stream: fc && ((e) => e.body)
};
zu && ((e) => {
  ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((t) => {
    !pu[t] && (pu[t] = K.isFunction(e[t]) ? (n) => n[t]() : (n, r) => {
      throw new We(`Response type '${t}' is not supported`, We.ERR_NOT_SUPPORT, r);
    });
  });
})(new Response());
const c2 = async (e) => {
  if (e == null)
    return 0;
  if (K.isBlob(e))
    return e.size;
  if (K.isSpecCompliantForm(e))
    return (await new Request(un.origin, {
      method: "POST",
      body: e
    }).arrayBuffer()).byteLength;
  if (K.isArrayBufferView(e) || K.isArrayBuffer(e))
    return e.byteLength;
  if (K.isURLSearchParams(e) && (e = e + ""), K.isString(e))
    return (await _2(e)).byteLength;
}, f2 = async (e, t) => {
  const n = K.toFiniteNumber(e.getContentLength());
  return n ?? c2(t);
}, h2 = zu && (async (e) => {
  let {
    url: t,
    method: n,
    data: r,
    signal: s,
    cancelToken: i,
    timeout: o,
    onDownloadProgress: u,
    onUploadProgress: f,
    responseType: A,
    headers: E,
    withCredentials: p = "same-origin",
    fetchOptions: T
  } = bL(e);
  A = A ? (A + "").toLowerCase() : "text";
  let S = i2([s, i && i.toAbortSignal()], o), m;
  const b = S && S.unsubscribe && (() => {
    S.unsubscribe();
  });
  let I;
  try {
    if (f && d2 && n !== "get" && n !== "head" && (I = await f2(E, r)) !== 0) {
      let w = new Request(t, {
        method: "POST",
        body: r,
        duplex: "half"
      }), F;
      if (K.isFormData(r) && (F = w.headers.get("content-type")) && E.setContentType(F), w.body) {
        const [P, M] = Ip(
          I,
          Eu(vp(f))
        );
        r = Rp(w.body, gp, P, M);
      }
    }
    K.isString(p) || (p = p ? "include" : "omit");
    const v = "credentials" in Request.prototype;
    m = new Request(t, {
      ...T,
      signal: S,
      method: n.toUpperCase(),
      headers: E.normalize().toJSON(),
      body: r,
      duplex: "half",
      credentials: v ? p : void 0
    });
    let g = await fetch(m);
    const R = fc && (A === "stream" || A === "response");
    if (fc && (u || R && b)) {
      const w = {};
      ["status", "statusText", "headers"].forEach((O) => {
        w[O] = g[O];
      });
      const F = K.toFiniteNumber(g.headers.get("content-length")), [P, M] = u && Ip(
        F,
        Eu(vp(u), !0)
      ) || [];
      g = new Response(
        Rp(g.body, gp, P, () => {
          M && M(), b && b();
        }),
        w
      );
    }
    A = A || "text";
    let D = await pu[K.findKey(pu, A) || "text"](g, e);
    return !R && b && b(), await new Promise((w, F) => {
      LL(w, F, {
        data: D,
        headers: gn.from(g.headers),
        status: g.status,
        statusText: g.statusText,
        config: e,
        request: m
      });
    });
  } catch (v) {
    throw b && b(), v && v.name === "TypeError" && /fetch/i.test(v.message) ? Object.assign(
      new We("Network Error", We.ERR_NETWORK, e, m),
      {
        cause: v.cause || v
      }
    ) : We.from(v, v && v.code, e, m);
  }
}), hc = {
  http: CW,
  xhr: s2,
  fetch: h2
};
K.forEach(hc, (e, t) => {
  if (e) {
    try {
      Object.defineProperty(e, "name", { value: t });
    } catch {
    }
    Object.defineProperty(e, "adapterName", { value: t });
  }
});
const Op = (e) => `- ${e}`, A2 = (e) => K.isFunction(e) || e === null || e === !1, yL = {
  getAdapter: (e) => {
    e = K.isArray(e) ? e : [e];
    const { length: t } = e;
    let n, r;
    const s = {};
    for (let i = 0; i < t; i++) {
      n = e[i];
      let o;
      if (r = n, !A2(n) && (r = hc[(o = String(n)).toLowerCase()], r === void 0))
        throw new We(`Unknown adapter '${o}'`);
      if (r)
        break;
      s[o || "#" + i] = r;
    }
    if (!r) {
      const i = Object.entries(s).map(
        ([u, f]) => `adapter ${u} ` + (f === !1 ? "is not supported by the environment" : "is not available in the build")
      );
      let o = t ? i.length > 1 ? `since :
` + i.map(Op).join(`
`) : " " + Op(i[0]) : "as no adapter specified";
      throw new We(
        "There is no suitable adapter to dispatch the request " + o,
        "ERR_NOT_SUPPORT"
      );
    }
    return r;
  },
  adapters: hc
};
function xd(e) {
  if (e.cancelToken && e.cancelToken.throwIfRequested(), e.signal && e.signal.aborted)
    throw new wi(null, e);
}
function Cp(e) {
  return xd(e), e.headers = gn.from(e.headers), e.data = Pd.call(
    e,
    e.transformRequest
  ), ["post", "put", "patch"].indexOf(e.method) !== -1 && e.headers.setContentType("application/x-www-form-urlencoded", !1), yL.getAdapter(e.adapter || Hl.adapter)(e).then(function(r) {
    return xd(e), r.data = Pd.call(
      e,
      e.transformResponse,
      r
    ), r.headers = gn.from(r.headers), r;
  }, function(r) {
    return SL(r) || (xd(e), r && r.response && (r.response.data = Pd.call(
      e,
      e.transformResponse,
      r.response
    ), r.response.headers = gn.from(r.response.headers))), Promise.reject(r);
  });
}
const RL = "1.7.9", Yu = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((e, t) => {
  Yu[e] = function(r) {
    return typeof r === e || "a" + (t < 1 ? "n " : " ") + e;
  };
});
const Dp = {};
Yu.transitional = function(t, n, r) {
  function s(i, o) {
    return "[Axios v" + RL + "] Transitional option '" + i + "'" + o + (r ? ". " + r : "");
  }
  return (i, o, u) => {
    if (t === !1)
      throw new We(
        s(o, " has been removed" + (n ? " in " + n : "")),
        We.ERR_DEPRECATED
      );
    return n && !Dp[o] && (Dp[o] = !0, console.warn(
      s(
        o,
        " has been deprecated since v" + n + " and will be removed in the near future"
      )
    )), t ? t(i, o, u) : !0;
  };
};
Yu.spelling = function(t) {
  return (n, r) => (console.warn(`${r} is likely a misspelling of ${t}`), !0);
};
function E2(e, t, n) {
  if (typeof e != "object")
    throw new We("options must be an object", We.ERR_BAD_OPTION_VALUE);
  const r = Object.keys(e);
  let s = r.length;
  for (; s-- > 0; ) {
    const i = r[s], o = t[i];
    if (o) {
      const u = e[i], f = u === void 0 || o(u, i, e);
      if (f !== !0)
        throw new We("option " + i + " must be " + f, We.ERR_BAD_OPTION_VALUE);
      continue;
    }
    if (n !== !0)
      throw new We("Unknown option " + i, We.ERR_BAD_OPTION);
  }
}
const Qo = {
  assertOptions: E2,
  validators: Yu
}, qr = Qo.validators;
let Ms = class {
  constructor(t) {
    this.defaults = t, this.interceptors = {
      request: new mp(),
      response: new mp()
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(t, n) {
    try {
      return await this._request(t, n);
    } catch (r) {
      if (r instanceof Error) {
        let s = {};
        Error.captureStackTrace ? Error.captureStackTrace(s) : s = new Error();
        const i = s.stack ? s.stack.replace(/^.+\n/, "") : "";
        try {
          r.stack ? i && !String(r.stack).endsWith(i.replace(/^.+\n.+\n/, "")) && (r.stack += `
` + i) : r.stack = i;
        } catch {
        }
      }
      throw r;
    }
  }
  _request(t, n) {
    typeof t == "string" ? (n = n || {}, n.url = t) : n = t || {}, n = ks(this.defaults, n);
    const { transitional: r, paramsSerializer: s, headers: i } = n;
    r !== void 0 && Qo.assertOptions(r, {
      silentJSONParsing: qr.transitional(qr.boolean),
      forcedJSONParsing: qr.transitional(qr.boolean),
      clarifyTimeoutError: qr.transitional(qr.boolean)
    }, !1), s != null && (K.isFunction(s) ? n.paramsSerializer = {
      serialize: s
    } : Qo.assertOptions(s, {
      encode: qr.function,
      serialize: qr.function
    }, !0)), Qo.assertOptions(n, {
      baseUrl: qr.spelling("baseURL"),
      withXsrfToken: qr.spelling("withXSRFToken")
    }, !0), n.method = (n.method || this.defaults.method || "get").toLowerCase();
    let o = i && K.merge(
      i.common,
      i[n.method]
    );
    i && K.forEach(
      ["delete", "get", "head", "post", "put", "patch", "common"],
      (m) => {
        delete i[m];
      }
    ), n.headers = gn.concat(o, i);
    const u = [];
    let f = !0;
    this.interceptors.request.forEach(function(b) {
      typeof b.runWhen == "function" && b.runWhen(n) === !1 || (f = f && b.synchronous, u.unshift(b.fulfilled, b.rejected));
    });
    const A = [];
    this.interceptors.response.forEach(function(b) {
      A.push(b.fulfilled, b.rejected);
    });
    let E, p = 0, T;
    if (!f) {
      const m = [Cp.bind(this), void 0];
      for (m.unshift.apply(m, u), m.push.apply(m, A), T = m.length, E = Promise.resolve(n); p < T; )
        E = E.then(m[p++], m[p++]);
      return E;
    }
    T = u.length;
    let S = n;
    for (p = 0; p < T; ) {
      const m = u[p++], b = u[p++];
      try {
        S = m(S);
      } catch (I) {
        b.call(this, I);
        break;
      }
    }
    try {
      E = Cp.call(this, S);
    } catch (m) {
      return Promise.reject(m);
    }
    for (p = 0, T = A.length; p < T; )
      E = E.then(A[p++], A[p++]);
    return E;
  }
  getUri(t) {
    t = ks(this.defaults, t);
    const n = mL(t.baseURL, t.url);
    return EL(n, t.params, t.paramsSerializer);
  }
};
K.forEach(["delete", "get", "head", "options"], function(t) {
  Ms.prototype[t] = function(n, r) {
    return this.request(ks(r || {}, {
      method: t,
      url: n,
      data: (r || {}).data
    }));
  };
});
K.forEach(["post", "put", "patch"], function(t) {
  function n(r) {
    return function(i, o, u) {
      return this.request(ks(u || {}, {
        method: t,
        headers: r ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url: i,
        data: o
      }));
    };
  }
  Ms.prototype[t] = n(), Ms.prototype[t + "Form"] = n(!0);
});
let p2 = class gL {
  constructor(t) {
    if (typeof t != "function")
      throw new TypeError("executor must be a function.");
    let n;
    this.promise = new Promise(function(i) {
      n = i;
    });
    const r = this;
    this.promise.then((s) => {
      if (!r._listeners) return;
      let i = r._listeners.length;
      for (; i-- > 0; )
        r._listeners[i](s);
      r._listeners = null;
    }), this.promise.then = (s) => {
      let i;
      const o = new Promise((u) => {
        r.subscribe(u), i = u;
      }).then(s);
      return o.cancel = function() {
        r.unsubscribe(i);
      }, o;
    }, t(function(i, o, u) {
      r.reason || (r.reason = new wi(i, o, u), n(r.reason));
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason)
      throw this.reason;
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(t) {
    if (this.reason) {
      t(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(t) : this._listeners = [t];
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(t) {
    if (!this._listeners)
      return;
    const n = this._listeners.indexOf(t);
    n !== -1 && this._listeners.splice(n, 1);
  }
  toAbortSignal() {
    const t = new AbortController(), n = (r) => {
      t.abort(r);
    };
    return this.subscribe(n), t.signal.unsubscribe = () => this.unsubscribe(n), t.signal;
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let t;
    return {
      token: new gL(function(s) {
        t = s;
      }),
      cancel: t
    };
  }
};
function T2(e) {
  return function(n) {
    return e.apply(null, n);
  };
}
function S2(e) {
  return K.isObject(e) && e.isAxiosError === !0;
}
const Ac = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(Ac).forEach(([e, t]) => {
  Ac[t] = e;
});
function OL(e) {
  const t = new Ms(e), n = aL(Ms.prototype.request, t);
  return K.extend(n, Ms.prototype, t, { allOwnKeys: !0 }), K.extend(n, t, null, { allOwnKeys: !0 }), n.create = function(s) {
    return OL(ks(e, s));
  }, n;
}
const xt = OL(Hl);
xt.Axios = Ms;
xt.CanceledError = wi;
xt.CancelToken = p2;
xt.isCancel = SL;
xt.VERSION = RL;
xt.toFormData = Ku;
xt.AxiosError = We;
xt.Cancel = xt.CanceledError;
xt.all = function(t) {
  return Promise.all(t);
};
xt.spread = T2;
xt.isAxiosError = S2;
xt.mergeConfig = ks;
xt.AxiosHeaders = gn;
xt.formToJSON = (e) => TL(K.isHTMLForm(e) ? new FormData(e) : e);
xt.getAdapter = yL.getAdapter;
xt.HttpStatusCode = Ac;
xt.default = xt;
const {
  Axios: aAe,
  AxiosError: sAe,
  CanceledError: iAe,
  isCancel: lAe,
  CancelToken: oAe,
  VERSION: uAe,
  all: _Ae,
  Cancel: dAe,
  isAxiosError: cAe,
  spread: fAe,
  toFormData: hAe,
  AxiosHeaders: AAe,
  HttpStatusCode: EAe,
  formToJSON: pAe,
  getAdapter: TAe,
  mergeConfig: SAe
} = xt, CL = B("/api/"), eu = B(xt.create()), or = B({}), tu = B({}), DL = B({}), $r = {}, yr = {}, NL = B({
  setUrlForArray: F2
});
function L2({ axiosCreateOptions: e = {} }) {
  eu.value = xt.create(e);
}
function m2({ baseUrl: e = "" }) {
  CL.value = e;
}
function b2({ errorCallbacks: e = {} }) {
  tu.value = e;
}
function I2({ headerParams: e = {} } = {}) {
  DL.value = e;
}
function v2({
  all: e = !1,
  abortGroup: t,
  excludeAbortGroup: n
}) {
  const r = U2({ excludeAbortGroup: n });
  if (e)
    z($r, (s, i) => {
      r[i] || (s.abort(), delete $r[i], yr[t] && delete yr[t]);
    });
  else if (t) {
    let s = [];
    ot(t) ? s.push(t) : Se(t) && (s = t), z(s, (i) => {
      r[i] || $r[i] && ($r[i].abort(), delete $r[i], yr[t] && delete yr[t]);
    });
  }
}
function y2() {
  or.value = {};
}
function R2({ apiSaveId: e }) {
  e in or.value && delete or.value[e];
}
function g2() {
  return {
    abortHttp: v2,
    clearAllApiSaved: y2,
    clearApiSaved: R2,
    deleteHttp: P2,
    getHttp: O2,
    getListHttp: C2,
    getOptionsHttp: D2,
    patchHttp: w2,
    postHttp: N2,
    putHttp: B2
  };
}
function O2({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  apiSaveId: o,
  keyId: u,
  fullResponse: f,
  showError: A,
  ignoreErrorHandler: E = !1,
  abortable: p = !0,
  abortGroup: T = ""
}) {
  return Ks({
    methodHttp: "get",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    apiSaveId: o,
    keyId: u,
    fullResponse: f,
    showError: A,
    ignoreErrorHandler: E,
    abortable: p,
    abortGroup: T
  });
}
function C2({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  apiSaveId: o,
  keyId: u,
  fullResponse: f,
  showError: A,
  ignoreErrorHandler: E = !1,
  abortable: p = !0,
  abortGroup: T = ""
}) {
  return Ks({
    methodHttp: "get",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    apiSaveId: o,
    keyId: u,
    fullResponse: f,
    showError: A,
    ignoreErrorHandler: E,
    abortable: p,
    abortGroup: T,
    expectedList: !0
  });
}
function D2({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  keyId: o,
  fullResponse: u,
  showError: f,
  ignoreErrorHandler: A = !1,
  abortable: E = !0,
  abortGroup: p = ""
}) {
  return Ks({
    methodHttp: "options",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    keyId: o,
    fullResponse: u,
    showError: f,
    abortable: E,
    abortGroup: p,
    ignoreErrorHandler: A
  });
}
function N2({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: f = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return Ks({
    methodHttp: "post",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: f
  });
}
function B2({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: f = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return Ks({
    methodHttp: "put",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: f
  });
}
function w2({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: f = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return Ks({
    methodHttp: "patch",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: f
  });
}
function P2({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: f = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return Ks({
    methodHttp: "delete",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: f
  });
}
function Ks({
  methodHttp: e,
  url: t,
  urlBase: n,
  urlParams: r,
  data: s,
  headerParams: i = {},
  responseType: o = "json",
  apiSaveId: u,
  keyId: f,
  fullResponse: A,
  showError: E = !1,
  ignoreErrorHandler: p = !1,
  abortable: T = !0,
  abortGroup: S = "",
  expectedList: m
}) {
  let b;
  if (u && (b = or.value[u], b && b.loading))
    return b.promise;
  const I = new Promise((v, g) => {
    if (b && !b.loading) {
      if (f) {
        if (b.keyData)
          return v(b.keyData);
        const P = Np({ data: b.data, keyId: f });
        return or.value[u].keyData = P, v(P);
      }
      return v(b.data);
    }
    const R = M2({ url: t, params: r });
    let D = `${se(n) ? CL.value : n}${R}`;
    D = D.replace(/^(https?:\/\/)|(\/){2,}/g, (P, M) => M || "/");
    const w = {
      ...DL.value,
      ...i
    }, F = $2({ abortGroup: S, abortable: T });
    k2({ abortGroup: S, abortable: T }), eu.value({
      method: e,
      url: D,
      data: s,
      headers: w,
      responseType: o,
      signal: F
    }).then(
      (P) => {
        if (A)
          return v(P);
        const M = q2({ expectedList: m, response: P }), O = Np({ data: M, keyId: f });
        return u && (or.value[u].data = M, or.value[u].keyData = O, or.value[u].loading = !1), v(f ? O : M);
      },
      (P) => {
        if ((P == null ? void 0 : P.code) === "ERR_CANCELED")
          return g(P);
        if (Ne(p)) {
          if (p({ error: P.response, showError: E, client: eu }))
            return g(P.response);
        } else if (p || x2({ error: P.response, showError: E, client: eu, reject: g, resolve: v }))
          return g(P.response);
      }
    ).finally(
      () => {
        H2({ abortGroup: S, abortable: T });
      }
    );
  });
  return b || (or.value[u] = or.value[u] || {}, or.value[u].loading = !0, or.value[u].promise = I), I;
}
function x2({ error: e, showError: t, client: n, resolve: r, reject: s }) {
  return e ? (() => {
    const o = tu.value[e.status];
    return Ne(o) ? o({ error: e, showError: t, client: n, resolve: r, reject: s }) : Ne(tu.value.all) ? tu.value.all({ error: e, showError: t, client: n, resolve: r, reject: s }) : !0;
  })() : !0;
}
function M2({ url: e, params: t }) {
  const n = e || "";
  let r = "";
  z(t, (i, o) => {
    Se(i) ? r = NL.value.setUrlForArray({ id: o, array: i, url: r }) : st(i) ? z(i, (u, f) => {
      u && (r && (r += "&"), r += `${f}=${u}`);
    }) : se(i) || (r && (r += "&"), r += `${o}=${i}`);
  });
  const s = r && n ? n.indexOf("?") === -1 ? "?" : "&" : "";
  return `${n}${s}${r}`;
}
function F2({ array: e, url: t, id: n }) {
  if (!e.length)
    return t;
  let r = t || "";
  return n === "fields" || n === "ordering" ? (r && (r += "&"), r += `${n}=`, r += e.join(",")) : z(e, (s) => {
    r && (r += "&"), r += `${n}=${s}`;
  }), r;
}
function Np({ data: e, keyId: t }) {
  if (t)
    return $a(e, t);
}
function q2({ expectedList: e, response: t }) {
  return e ? Se(t.data) ? t.data : t.data.results ? t.data.results : [] : t.data;
}
function $2({ abortGroup: e = "_global", abortable: t } = {}) {
  if (t)
    return $r[e] = $r[e] || new AbortController(), $r[e].signal;
}
function U2({ excludeAbortGroup: e }) {
  const t = {};
  return e && (ot(e) ? t[e] = !0 : Se(e) && z(e, (n) => {
    t[n] = !0;
  })), t;
}
function k2({ abortGroup: e, abortable: t }) {
  !t || !e || (yr[e] ? yr[e]++ : yr[e] = 1);
}
function H2({ abortGroup: e, abortable: t }) {
  !t || !e || (yr[e] && yr[e]--, yr[e] === 0 && $r[e] && (delete yr[e], delete $r[e]));
}
function LAe({ url: e, allCommasToArray: t = !1, keysCommaToArray: n = [] } = {}) {
  let r = e || window.location.search.substring(1);
  try {
    r = decodeURI(r);
  } catch (o) {
    console.error(o);
  }
  const s = r.split("&"), i = {};
  return z(s, (o) => {
    const u = o.split("=");
    if (u && u.length === 2)
      if (u[1].indexOf("[") !== -1 || u[1].indexOf("%5B") !== -1) {
        const f = u[1].replace("%5B", "[").replace("%5D", "]").replace(/%22/g, '"');
        i[u[0]] = JSON.parse(f);
      } else if (u[1].indexOf(",") !== -1 && (t || n.indexOf(u[0]) !== -1)) {
        const f = u[1].split(",");
        i[u[0]] = f;
      } else i[u[0]] ? ot(i[u[0]]) ? (i[u[0]] = [i[u[0]]], i[u[0]].push(u[1])) : Se(i[u[0]]) && i[u[0]].push(u[1]) : i[u[0]] = u[1];
  }), i;
}
function Vl(e) {
  const t = d(e, "disabled");
  return {
    disabledAttribut: _(() => {
      if (t.value === !0)
        return !0;
    })
  };
}
function Xu(e, {
  isModel: t = _(() => !0)
} = {}) {
  const n = d(e, "isClearButton");
  return {
    isClearButtonLocal: _(() => !!(n.value && t.value))
  };
}
function Rf({
  inputRef: e = B(void 0)
}) {
  const t = B(void 0), n = () => {
    t.value = !0;
  }, r = () => {
    t.value = !1;
  }, s = (i) => {
    switch (i.animationName) {
      case "onAutoFillStart":
        return n();
      case "onAutoFillCancel":
        return r();
    }
  };
  return jr(() => {
    e.value && e.value.addEventListener("animationstart", s);
  }), Ot(() => {
    e.value && e.value.removeEventListener && e.value.removeEventListener("animationstart", s);
  }), {
    isAutofill: t
  };
}
function gf({
  htmlIdLocal: e = _(() => ""),
  clickLabel: t = () => {
  }
}) {
  const n = _(() => pS(e.value)), r = () => {
    t();
  };
  return {
    destroyEventBusClickLabel: () => {
      gt.$off(n.value, r);
    },
    initEventBusClickLabel: () => {
      gt.$on(n.value, r);
    }
  };
}
function Of(e, {
  data: t = _(() => [])
}) {
  const n = d(e, "keyGroup"), r = d(e, "keyGroupLabelCallback"), s = d(e, "searchTextInHtml"), i = d(e, "sortOrderGroup"), o = _(() => Se(n.value) ? n.value : ot(n.value) ? [n.value] : []), u = _(() => o.value.length > 0), f = _(() => {
    if (!u.value)
      return;
    const E = {};
    return z(o.value, (p, T) => {
      E[T] = {};
    }), z(t.value, (p) => {
      let T;
      const S = [];
      let m = "";
      z(o.value, (b, I) => {
        let v = ce(p, b);
        if ((se(v) || v === "") && (v = "_not_grouped"), m += `${m ? "_" : ""}${v}`, !E[I][m]) {
          const g = Ne(r.value) ? r.value({ group: v, item: p }) : v;
          E[I][m] = {
            groupKey: v,
            groupLabel: g,
            groupParentKey: T,
            allGroupKeys: m,
            allParentKeys: he(S),
            data: [],
            dataKeyByKeyId: {}
          }, s.value && (E[I][m].groupLabelSearch = Wc(g));
        }
        E[I][m].data.push(p), E[I][m].dataKeyByKeyId[p[we]] = p, T = v, S.push(v);
      });
    }), z(E, (p, T) => {
      E[T] = Mc(p);
    }), i.value && z(E, (p, T) => {
      E[T] = qc(p, ["groupLabel"], [i.value]);
    }), E;
  });
  return {
    dataGrouped: _(() => {
      if (!u.value)
        return;
      const E = {};
      return z(t.value, (p) => {
        let T = "";
        z(o.value, (S) => {
          let m = ce(p, S);
          if (se(m) || m === "")
            return m = "_not_grouped", T += `${T ? "_" : ""}${m}`, !1;
          T += `${T ? "_" : ""}${m}`;
        }), E[T] = E[T] || [], E[T].push(p);
      }), E;
    }),
    groupsForLever: f,
    hasKeyGroup: u,
    keyGroupArray: o
  };
}
function Cf(e, { emit: t }) {
  const n = d(e, "collapsible"), r = d(e, "id"), s = d(e, "isCollapsed"), i = d(e, "texts"), o = B(!1), u = _(() => o.value ? Fu : Ha), f = _(() => {
    var S;
    return ((S = i.value) == null ? void 0 : S.collapseOpen) || "_A_FIELDSET_COLLAPSE_OPEN_";
  }), A = _(() => {
    var S;
    return ((S = i.value) == null ? void 0 : S.collapseClose) || "_A_FIELDSET_COLLAPSE_CLOSE_";
  }), E = _(() => o.value ? f.value : A.value), p = () => {
    o.value = !o.value, t("toggleCollapse", { isCollapsed: o.value, id: r.value, props: e });
  }, T = () => {
    n.value ? o.value = s.value || !1 : o.value = !1;
  };
  return rt(s, () => {
    o.value = s.value || !1;
  }), {
    iconCollapse: u,
    initIsCollapsedLocal: T,
    isCollapsedLocal: o,
    titleCollapse: E,
    toggleCollapse: p
  };
}
function Zu(e, {
  changeModel: t = () => {
  },
  dataExtraLocal: n = _(() => []),
  dataFromServer: r = B([])
} = {}) {
  const s = d(e, "apiSaveId"), i = d(e, "isDataSimpleArray"), o = d(e, "keyId"), u = d(e, "keyLabel"), f = d(e, "searchApi"), A = d(e, "modelValue"), E = d(e, "searchApiKey"), p = d(e, "type"), T = d(e, "url"), S = d(e, "urlParams"), m = B(!1), b = B(void 0), {
    getListHttp: I
  } = g2(), v = _(() => !!(f.value && E.value && T.value)), g = _(() => [
    s.value,
    T.value,
    S.value
  ]), R = () => {
    if (!T.value || v.value) {
      r.value = [];
      return;
    }
    b.value = !0, I({
      url: T.value,
      urlParams: S.value,
      apiSaveId: s.value
    }).then(
      (G) => {
        r.value = G;
      }
    ).finally(
      () => {
        b.value = !1;
      }
    );
  }, D = _(() => p.value === "checkbox" || p.value === "multiselect"), w = (G, te) => {
    Fc(te, G) || (R(), D.value ? t({
      model: [],
      currentModel: []
    }) : t({
      model: void 0,
      currentModel: void 0
    }));
  }, F = (G) => i.value ? OP(G) : wT(G, o.value), P = (G) => n.value.length ? !xc(n.value, [we, G]) : ot(G) || On(G), M = _(() => {
    let G = [];
    return Se(A.value) && A.value.length ? G = mt(A.value, (te) => P(te)) : P(A.value) && (G = [A.value]), G;
  }), O = ({ response: G }) => {
    const te = he(r.value), re = [], ie = he(M.value);
    z(te, (le) => {
      if (ie.length === 0)
        return !1;
      const oe = i.value ? le : ce(le, o.value), Te = ie.indexOf(oe);
      Te !== -1 && (ie.splice(Te, 1), re.push(le));
    }), re.push(...G), r.value = F(re);
  };
  return {
    loadDataFromServer: R,
    loadDataFromServerForSearchAPI: () => {
      if (!v.value || !M.value.length)
        return;
      let G;
      if (o.value === "pk" ? G = mt(M.value, (re) => !se(re)) : G = he(M.value), !G.length)
        return;
      b.value = !0;
      const te = {
        ...S.value,
        [o.value]: G,
        limit: G.length
      };
      return I({
        url: T.value,
        urlParams: te
      }).then(
        (re) => {
          r.value = re || [];
        }
      ).finally(() => {
        b.value = !1;
      });
    },
    loadingDataFromServer: b,
    loadingSearchApi: m,
    onSearchInApi: ({ search: G, data: te = [] }) => {
      v.value && (m.value = !0, I({
        url: T.value,
        urlParams: {
          ...S.value || {},
          [E.value]: G
        }
      }).then(
        (re) => {
          i.value && (re = Fn(re, (ie) => ie[u.value])), O({ response: re });
        }
      ).then(
        () => {
          m.value = !1;
        }
      ));
    },
    searchApiLocal: v,
    updateUrlPropsComputed: w,
    urlPropsComputed: g
  };
}
function Ju(e, {
  data: t = _(() => [])
}) {
  const n = d(e, "sortOrder");
  return {
    dataSort: _(() => n.value ? qc(t.value, [vt], [n.value]) : t.value)
  };
}
function Qu({ emit: e }, {
  dataKeyByKeyIdLocal: t = _(() => ({})),
  dataLocal: n = _(() => ({}))
}) {
  rt(n, () => {
    e("updateData", {
      dataKeyByKeyId: t.value
    });
  }, {
    immediate: !0,
    deep: !0
  });
}
function e_(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "data"), r = d(e, "dataExtra"), s = d(e, "isDataSimpleArray"), i = d(e, "keyId"), o = d(e, "keyLabel"), u = d(e, "keyLabelCallback"), f = d(e, "searchTextInHtml"), A = d(e, "translateData"), E = de(mS, !1), p = B([]), T = _(() => nx(r.value)), S = ({ _data: P }) => (z(P, (M) => {
    M[di] = Wc(M[vt]);
  }), P), m = ({ _data: P, _isArrayOfArrays: M = !1 }) => {
    if (E.value)
      return P;
    const O = he(P);
    if (M) {
      const q = [];
      return z(O, (U) => {
        const G = U[0];
        let te = U[1];
        A.value && oa(te) && (te = Dt({ placeholder: te, alwaysTranslate: t.value })), q.push({
          [we]: G,
          [vt]: te
        });
      }), q;
    }
    if (u.value) {
      if (s.value) {
        const q = [];
        return z(O, (U) => {
          let G = u.value({ item: U });
          A.value && oa(G) && (G = Dt({ placeholder: G, alwaysTranslate: t.value })), q.push({
            [we]: U,
            [vt]: G
          });
        }), q;
      }
      z(O, (q) => {
        let U = u.value({ item: q });
        A.value && oa(U) && (U = Dt({ placeholder: U, alwaysTranslate: t.value })), q[we] = ce(q, i.value), q[vt] = U;
      });
    } else {
      if (s.value) {
        const q = [];
        return z(O, (U) => {
          let G = U;
          A.value && oa(G) && (G = Dt({ placeholder: G, alwaysTranslate: t.value })), q.push({
            [we]: U,
            [vt]: G
          });
        }), q;
      }
      z(O, (q) => {
        let U = ce(q, o.value);
        A.value && oa(U) && (U = Dt({ placeholder: U, alwaysTranslate: t.value })), q[we] = ce(q, i.value), q[vt] = U;
      });
    }
    return O;
  }, b = _(() => p.value.length ? p.value : n.value || []), I = _(() => {
    let P = m({
      _data: b.value,
      _isArrayOfArrays: !1
    });
    return f.value && (P = S({ _data: P })), P;
  }), v = _(() => {
    let P = m({
      _data: r.value,
      _isArrayOfArrays: T.value
    });
    return f.value && (P = S({ _data: P })), P;
  }), g = _(() => $a(v.value, we)), R = _(() => $a(I.value, we)), D = _(() => ({
    ...g.value,
    ...R.value
  })), w = _(() => [
    ...v.value,
    ...I.value
  ]), F = _(() => v.value.length > 0);
  return {
    dataAll: w,
    dataExtraLocal: v,
    dataFromServer: p,
    dataKeyByKeyIdLocal: D,
    dataLocal: I,
    hasDataExtra: F
  };
}
function t_(e, {
  loadingDataFromServer: t = B(!1)
}) {
  const n = d(e, "loading");
  return {
    loadingLocal: _(() => !!(n.value || t.value))
  };
}
function Df(e, { emit: t }, {
  data: n = _(() => []),
  dataExtra: r = _(() => []),
  exclusiveOption: s = _(() => {
  }),
  groupsForLever: i = _(() => {
  }),
  hasKeyGroup: o = _(() => !1),
  htmlIdLocal: u = _(() => ""),
  keyGroupArray: f = _(() => []),
  onSearchInApi: A = () => {
  },
  searchApiLocal: E = _(() => !1)
}) {
  const p = d(e, "searchInGroup"), T = d(e, "searchOutside"), S = d(e, "searchTextInHtml"), m = d(e, "searchTimeout"), b = B(!1), I = B(""), v = B(""), g = B(!1), R = B({}), D = B({}), w = B({}), F = B({}), P = B({}), M = B(void 0), O = _(() => !!(T.value || E.value)), q = _(() => `${u.value}_search_global`), U = _(() => NT(I.value || "")), G = _(() => Ou(U.value)), te = _(() => new RegExp(G.value, "gi")), re = () => {
    let ve = !1;
    if (!p.value || !i.value) {
      P.value = {}, b.value = ve;
      return;
    }
    const be = {}, je = {};
    z(i.value, (Re) => {
      z(Re, (J) => {
        const H = S.value ? J.groupLabelSearch : J.groupLabel;
        H === "_not_grouped" && !J.groupParentKey || (be[J.groupParentKey] ? (be[J.allGroupKeys] = !0, J.data.length && (ve = !0)) : `${H}`.search(te.value) !== -1 && (be[J.allGroupKeys] = !0, J.data.length && (ve = !0), J.allParentKeys.length && z(J.allParentKeys, (X) => {
          je[X] = !0;
        })));
      });
    }), P.value = {
      ...be,
      ...je
    }, b.value = ve;
  }, ie = () => {
    const ve = {}, be = {}, je = {}, Re = {};
    if (I.value) {
      if (g.value = !0, o.value ? (re(), z(n.value, (J) => {
        const H = S.value ? J[di] : J[vt], X = J[we];
        if (`${H}`.search(te.value) !== -1) {
          be[X] = !0;
          let ae = "";
          z(f.value, (ge) => {
            let Ce = ce(J, ge);
            (se(Ce) || Ce === "") && (Ce = "_not_grouped"), ae += `${ae ? "_" : ""}${Ce}`, Re[ae] = !0;
          });
        }
      })) : z(n.value, (J) => {
        const H = S.value ? J[di] : J[vt], X = J[we];
        `${H}`.search(te.value) !== -1 && (be[X] = !0);
      }), z(r.value, (J) => {
        const H = S.value ? J[di] : J[vt], X = J[we];
        `${H}`.search(te.value) !== -1 && (ve[X] = !0);
      }), s.value) {
        const J = S.value ? s.value[di] : s.value[vt], H = s.value[we];
        `${J}`.search(te.value) !== -1 && (je[H] = !0);
      }
    } else
      g.value = !1;
    R.value = be, D.value = ve, w.value = je, F.value = Re;
  }, le = _(() => !!(g.value && pn(w.value))), oe = _(() => !!(g.value && pn(D.value))), Te = _(() => !!(g.value && pn(R.value) && oe.value && le.value && !b.value));
  return {
    hasNotElementsExclusiveWithSearch: le,
    hasNotElementsExtraWithSearch: oe,
    hasNotElementsWithSearch: Te,
    idForButtonSearchOutside: q,
    modelSearch: I,
    modelSearchLowerCase: U,
    modelSearchOutside: v,
    onSearchOutside: (ve) => {
      ve && ve.preventDefault(), A({
        search: v.value
      }), t("onSearchOutside", {
        model: v.value
      });
    },
    searching: g,
    searchingElements: R,
    searchingElementsExclusive: w,
    searchingElementsExtra: D,
    searchingGroups: F,
    searchingGroupsWithSearchInGroup: P,
    searchOutsideOrApi: O,
    searchOutsideRef: M,
    updateModelSearch: (ve) => {
      I.value = ve, m.value ? setTimeout(() => {
        ie();
      }, m.value) : ie();
    },
    updateModelSearchOutside: (ve) => {
      v.value = ve;
    }
  };
}
function n_(e) {
  const t = d(e, "required");
  return {
    textAfterLabel: _(() => t.value ? "*" : "")
  };
}
const Ai = B({
  propsDefault: {},
  config: {
    isHtmlTitleSort: !1,
    headerTopGroups: [
      {
        props: {},
        children: [
          {
            component: "filterMain",
            props: {}
          },
          {
            component: "buttonSearch",
            props: {}
          },
          {
            component: "buttonToggle",
            props: {}
          }
        ]
      },
      {
        props: {},
        children: [
          {
            component: "selectFiltersSaved",
            props: {}
          },
          {
            component: "buttonSaveTop",
            props: {}
          },
          {
            component: "buttonDeleteFiltersSaved",
            props: {}
          }
        ]
      }
    ],
    headerBottomGroups: [
      {
        props: {},
        children: [
          {
            component: "addFilterSelect",
            props: {}
          },
          {
            component: "buttonSearch",
            props: {}
          }
        ]
      }
    ]
  }
});
_(() => {
  const e = {};
  return z(Ai.value.config.headerTopGroups, (t) => {
    z(t.children, (n) => {
      e[n.component] = n.props;
    });
  }), z(Ai.value.config.headerBottomGroups, (t) => {
    z(t.children, (n) => {
      e[n.component] = n.props;
    });
  }), e;
});
const mAe = {
  install: (e, {
    propsDefault: t = {},
    config: n = {}
  } = {}) => {
    Ai.value.propsDefault = {
      ...Ai.value.propsDefault,
      ...t
    }, Ai.value.config = {
      ...Ai.value.config,
      ...n
    };
  }
}, bAe = {
  install: (e, { axiosCreateOptions: t = {}, baseUrl: n = "/api/", errorCallbacks: r = {}, headerParams: s = {}, setUrlForArray: i = void 0 } = {}) => {
    L2({ axiosCreateOptions: t }), m2({ baseUrl: n }), b2({ errorCallbacks: r }), I2({ headerParams: s }), Ne(i) && (NL.value.setUrlForArray = i);
  }
}, on = {
  propsDefault: {
    controlsType: "none",
    currencySymbol: "€",
    currencySymbolPosition: "right",
    decimalDivider: ",",
    decimalPartLength: 2,
    iconPrepend: void 0,
    inputWidth: 200,
    isLabelFloat: !1,
    max: void 0,
    min: void 0,
    modelUndefined: void 0,
    placeholder: void 0,
    step: 1,
    thousandDivider: "."
  }
}, IAe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    on.propsDefault = {
      ...on.propsDefault,
      ...t
    };
  }
}, En = {
  propsDefault: {
    controlsType: "plus-minus",
    eAllowed: !1,
    iconPrepend: void 0,
    inputWidth: 200,
    isLabelFloat: !1,
    max: void 0,
    min: void 0,
    modelUndefined: void 0,
    placeholder: void 0,
    precision: void 0,
    step: 1,
    stepStrictly: void 0,
    type: "number"
  }
}, vAe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    En.propsDefault = {
      ...En.propsDefault,
      ...t
    };
  }
}, yAe = {
  install: (e, t) => {
    e.provide("$aloha", t);
  }
}, RAe = {
  install: (e, {
    breakpoint: t
  } = {}) => {
    Wo(window.innerWidth <= t);
    const n = () => {
      window.innerWidth > t ? iu.value && Wo(!1) : iu.value || Wo(!0);
    };
    window.addEventListener("resize", n);
  }
}, gAe = {
  install: (e, t = "") => {
    Ik(t);
  }
}, Et = {
  propsDefault: {
    attributesFieldset: {},
    classColumn: "a_column a_column_12",
    classColumns: "a_columns a_columns_count_12 a_columns_gap_y_1",
    classFieldset: void 0,
    excludeRenderAttributes: [],
    extra: void 0,
    hasBorder: !0,
    helpTextParam: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_",
    helpTextRoute: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_",
    helpTextQuery: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_",
    helpTextTarget: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_",
    keyIdRoute: "name",
    keyLabelRoute: "path",
    labelClass: void 0,
    labelParam: "_A_ROUTER_LINK_CONFIG_LABEL_PARAM_",
    labelQuery: "_A_ROUTER_LINK_CONFIG_LABEL_QUERY_",
    labelRoute: "_A_ROUTER_LINK_CONFIG_LABEL_ROUTE_",
    labelTarget: "_A_ROUTER_LINK_CONFIG_LABEL_TARGET_",
    readonlyDefault: "",
    readonlyDefaultParam: void 0,
    readonlyDefaultQuery: void 0,
    readonlyDefaultRoute: void 0,
    readonlyDefaultTarget: void 0,
    routes: [],
    sortOrderRoute: "asc",
    targets: [
      {
        id: "_blank",
        label: "_A_TARGET_BLANK_"
      },
      {
        id: "_self",
        label: "_A_TARGET_SELF_"
      },
      {
        id: "_parent",
        label: "_A_TARGET_PARENT_"
      },
      {
        id: "_top",
        label: "_A_TARGET_TOP_"
      }
    ]
  }
};
function V2({ routes: e = [], excludedPathRoutes: t = [] }) {
  const n = [], r = {};
  return t.length && z(t, (s) => {
    r[s] = !0;
  }), z(e, (s) => {
    const i = s.path;
    s.name && !r[i] && n.push({
      path: s.path,
      name: s.name,
      meta: s.meta
    });
  }), n;
}
const OAe = {
  install: (e, {
    propsDefault: t = {},
    excludedPathRoutes: n = []
  } = {}) => {
    Et.propsDefault = {
      ...Et.propsDefault,
      ...t,
      routes: V2({ routes: t.routes, excludedPathRoutes: n })
    };
  }
};
function BL(e, t, n) {
  function r(o) {
    return o.toString(16);
  }
  function s(o) {
    return parseInt(o, 16);
  }
  e = e.replace(/#/g, ""), t = t.replace(/#/g, ""), n = typeof n < "u" ? n : 50;
  let i = "#";
  for (let o = 0; o <= 5; o += 2) {
    const u = s(e.substr(o, 2)), f = s(t.substr(o, 2));
    let A = r(Math.round(f + (u - f) * (n / 100)));
    for (; A.length < 2; )
      A = "0" + A;
    i += A;
  }
  return i;
}
function CAe(e, t) {
  return BL("#ffffff", e, t);
}
function DAe(e, t) {
  return BL("#000000", e, t);
}
function Md(e) {
  const t = e.toString(16);
  return t.length === 1 ? `0${t}` : t;
}
function NAe(e, t, n) {
  return `#${Md(e)}${Md(t)}${Md(n)}`;
}
function BAe(e, t = !1) {
  const n = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
  if (!n)
    return null;
  const r = parseInt(n[1], 16), s = parseInt(n[2], 16), i = parseInt(n[3], 16);
  return t ? `${r}, ${s}, ${i}` : {
    r,
    g: s,
    b: i
  };
}
const W2 = "الشريحة التالية", G2 = "الشريحة السابقة", j2 = "الشرائح", K2 = "بدء العرض التلقائي للشرائح", z2 = "إيقاف العرض التلقائي للشرائح", Y2 = {
  _A_CAROUSEL_NEXT_SLIDE_: W2,
  _A_CAROUSEL_PREVIOUS_SLIDE_: G2,
  "_A_CAROUSEL_CONTROLS_SLIDE_{{number}}_": "الشريحة {{ number }}",
  _A_CAROUSEL_CONTROLS_SLIDES_: j2,
  _A_CAROUSEL_CONTROLS_START_: K2,
  _A_CAROUSEL_CONTROLS_STOP_: z2,
  "_A_CAROUSEL_ITEM_ARIA_LABEL_{{number}}_{{count}}_": "{{ number }} من {{ count }}"
}, X2 = "Nächste Folie", Z2 = "Vorherige Folie", J2 = "Folien", Q2 = "Automatische Diashow starten", e5 = "Automatische Diashow stoppen", t5 = {
  _A_CAROUSEL_NEXT_SLIDE_: X2,
  _A_CAROUSEL_PREVIOUS_SLIDE_: Z2,
  "_A_CAROUSEL_CONTROLS_SLIDE_{{number}}_": "Folie {{ number }}",
  _A_CAROUSEL_CONTROLS_SLIDES_: J2,
  _A_CAROUSEL_CONTROLS_START_: Q2,
  _A_CAROUSEL_CONTROLS_STOP_: e5,
  "_A_CAROUSEL_ITEM_ARIA_LABEL_{{number}}_{{count}}_": "{{ number }} von {{ count }}"
}, n5 = "Next Slide", r5 = "Previous slide", a5 = "Slides", s5 = "Start automatic slide show", i5 = "Stop automatic slide show", l5 = {
  _A_CAROUSEL_NEXT_SLIDE_: n5,
  _A_CAROUSEL_PREVIOUS_SLIDE_: r5,
  "_A_CAROUSEL_CONTROLS_SLIDE_{{number}}_": "Slide {{ number }}",
  _A_CAROUSEL_CONTROLS_SLIDES_: a5,
  _A_CAROUSEL_CONTROLS_START_: s5,
  _A_CAROUSEL_CONTROLS_STOP_: i5,
  "_A_CAROUSEL_ITEM_ARIA_LABEL_{{number}}_{{count}}_": "{{ number }} of {{ count }}"
}, o5 = "Siguiente diapositiva", u5 = "Diapositiva anterior", _5 = "Diapositivas", d5 = "Iniciar presentación automática", c5 = "Detener presentación automática", f5 = {
  _A_CAROUSEL_NEXT_SLIDE_: o5,
  _A_CAROUSEL_PREVIOUS_SLIDE_: u5,
  "_A_CAROUSEL_CONTROLS_SLIDE_{{number}}_": "Diapositiva {{ number }}",
  _A_CAROUSEL_CONTROLS_SLIDES_: _5,
  _A_CAROUSEL_CONTROLS_START_: d5,
  _A_CAROUSEL_CONTROLS_STOP_: c5,
  "_A_CAROUSEL_ITEM_ARIA_LABEL_{{number}}_{{count}}_": "{{ number }} de {{ count }}"
}, h5 = "Diapositive suivante", A5 = "Diapositive précédente", E5 = "Diapositives", p5 = "Démarrer le diaporama automatique", T5 = "Arrêter le diaporama automatique", S5 = {
  _A_CAROUSEL_NEXT_SLIDE_: h5,
  _A_CAROUSEL_PREVIOUS_SLIDE_: A5,
  "_A_CAROUSEL_CONTROLS_SLIDE_{{number}}_": "Diapositive {{ number }}",
  _A_CAROUSEL_CONTROLS_SLIDES_: E5,
  _A_CAROUSEL_CONTROLS_START_: p5,
  _A_CAROUSEL_CONTROLS_STOP_: T5,
  "_A_CAROUSEL_ITEM_ARIA_LABEL_{{number}}_{{count}}_": "{{ number }} sur {{ count }}"
}, L5 = "Sljedeći slajd", m5 = "Prethodni slajd", b5 = "Slajdovi", I5 = "Pokreni automatsku prezentaciju", v5 = "Zaustavi automatsku prezentaciju", y5 = {
  _A_CAROUSEL_NEXT_SLIDE_: L5,
  _A_CAROUSEL_PREVIOUS_SLIDE_: m5,
  "_A_CAROUSEL_CONTROLS_SLIDE_{{number}}_": "Slajd {{ number }}",
  _A_CAROUSEL_CONTROLS_SLIDES_: b5,
  _A_CAROUSEL_CONTROLS_START_: I5,
  _A_CAROUSEL_CONTROLS_STOP_: v5,
  "_A_CAROUSEL_ITEM_ARIA_LABEL_{{number}}_{{count}}_": "{{ number }} od {{ count }}"
}, R5 = "Diapositiva successiva", g5 = "Diapositiva precedente", O5 = "Diapositive", C5 = "Avvia presentazione automatica", D5 = "Ferma presentazione automatica", N5 = {
  _A_CAROUSEL_NEXT_SLIDE_: R5,
  _A_CAROUSEL_PREVIOUS_SLIDE_: g5,
  "_A_CAROUSEL_CONTROLS_SLIDE_{{number}}_": "Diapositiva {{ number }}",
  _A_CAROUSEL_CONTROLS_SLIDES_: O5,
  _A_CAROUSEL_CONTROLS_START_: C5,
  _A_CAROUSEL_CONTROLS_STOP_: D5,
  "_A_CAROUSEL_ITEM_ARIA_LABEL_{{number}}_{{count}}_": "{{ number }} di {{ count }}"
}, B5 = "Следующий слайд", w5 = "Предыдущий слайд", P5 = "Слайды", x5 = "Запустить автоматическое пролистывание", M5 = "Остановить автоматическое пролистывание", F5 = {
  _A_CAROUSEL_NEXT_SLIDE_: B5,
  _A_CAROUSEL_PREVIOUS_SLIDE_: w5,
  "_A_CAROUSEL_CONTROLS_SLIDE_{{number}}_": "Слайд {{ number }}",
  _A_CAROUSEL_CONTROLS_SLIDES_: P5,
  _A_CAROUSEL_CONTROLS_START_: x5,
  _A_CAROUSEL_CONTROLS_STOP_: M5,
  "_A_CAROUSEL_ITEM_ARIA_LABEL_{{number}}_{{count}}_": "{{ number }} из {{ count }}"
}, Va = {
  ar: Y2,
  de: t5,
  en: l5,
  es: f5,
  fr: S5,
  hr: y5,
  it: N5,
  ru: F5
}, q5 = "[لا توجد عناصر متاحة للاختيار]", $5 = "بحث", U5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: q5,
  _A_CHECKBOX_SEARCH_: $5
}, k5 = "[Keine Elemente zur Auswahl verfügbar]", H5 = "Suche", V5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: k5,
  _A_CHECKBOX_SEARCH_: H5
}, W5 = "[No items available for selection]", G5 = "Search", j5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: W5,
  _A_CHECKBOX_SEARCH_: G5
}, K5 = "[No hay elementos disponibles para seleccionar]", z5 = "Buscar", Y5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: K5,
  _A_CHECKBOX_SEARCH_: z5
}, X5 = "[Aucun élément disponible pour la sélection]", Z5 = "Recherche", J5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: X5,
  _A_CHECKBOX_SEARCH_: Z5
}, Q5 = "[Nema dostupnih elemenata za odabir]", eG = "Pretraživanje", tG = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: Q5,
  _A_CHECKBOX_SEARCH_: eG
}, nG = "[Nessun elemento disponibile per la selezione]", rG = "Cerca", aG = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: nG,
  _A_CHECKBOX_SEARCH_: rG
}, sG = "[Нет элементов для выбора]", iG = "Поиск", lG = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: sG,
  _A_CHECKBOX_SEARCH_: iG
}, Wa = {
  ar: U5,
  de: V5,
  en: j5,
  es: Y5,
  fr: J5,
  hr: tG,
  it: aG,
  ru: lG
}, oG = "تحميل", uG = {
  _A_CLOAK_LOADING_: oG
}, _G = "Wird geladen", dG = {
  _A_CLOAK_LOADING_: _G
}, cG = "Loading", fG = {
  _A_CLOAK_LOADING_: cG
}, hG = "Cargando", AG = {
  _A_CLOAK_LOADING_: hG
}, EG = "Chargement", pG = {
  _A_CLOAK_LOADING_: EG
}, TG = "Učitavam", SG = {
  _A_CLOAK_LOADING_: TG
}, LG = "Caricamento", mG = {
  _A_CLOAK_LOADING_: LG
}, bG = "Загрузка", IG = {
  _A_CLOAK_LOADING_: bG
}, Ga = {
  ar: uG,
  de: dG,
  en: fG,
  es: AG,
  fr: pG,
  hr: SG,
  it: mG,
  ru: IG
}, vG = "من", yG = "إلى", RG = {
  _A_DATEPICKER_RANGE_FROM_: vG,
  _A_DATEPICKER_RANGE_UNTIL_: yG
}, gG = "von", OG = "bis", CG = {
  _A_DATEPICKER_RANGE_FROM_: gG,
  _A_DATEPICKER_RANGE_UNTIL_: OG
}, DG = "from", NG = "until", BG = {
  _A_DATEPICKER_RANGE_FROM_: DG,
  _A_DATEPICKER_RANGE_UNTIL_: NG
}, wG = "desde", PG = "hasta", xG = {
  _A_DATEPICKER_RANGE_FROM_: wG,
  _A_DATEPICKER_RANGE_UNTIL_: PG
}, MG = "de", FG = "à", qG = {
  _A_DATEPICKER_RANGE_FROM_: MG,
  _A_DATEPICKER_RANGE_UNTIL_: FG
}, $G = "od", UG = "do", kG = {
  _A_DATEPICKER_RANGE_FROM_: $G,
  _A_DATEPICKER_RANGE_UNTIL_: UG
}, HG = "da", VG = "a", WG = {
  _A_DATEPICKER_RANGE_FROM_: HG,
  _A_DATEPICKER_RANGE_UNTIL_: VG
}, GG = "с", jG = "по", KG = {
  _A_DATEPICKER_RANGE_FROM_: GG,
  _A_DATEPICKER_RANGE_UNTIL_: jG
}, ja = {
  ar: RG,
  de: CG,
  en: BG,
  es: xG,
  fr: qG,
  hr: kG,
  it: WG,
  ru: KG
}, zG = "إظهار أقل", YG = "أظهر المزيد", XG = {
  _A_DISCLOSURE_LESS_: zG,
  _A_DISCLOSURE_MORE_: YG
}, ZG = "Mehr anzeigen", JG = "Weniger anzeigen", QG = {
  _A_DISCLOSURE_MORE_: ZG,
  _A_DISCLOSURE_LESS_: JG
}, e3 = "Show less", t3 = "Show more", n3 = {
  _A_DISCLOSURE_LESS_: e3,
  _A_DISCLOSURE_MORE_: t3
}, r3 = "Mostrar menos", a3 = "Mostrar más", s3 = {
  _A_DISCLOSURE_LESS_: r3,
  _A_DISCLOSURE_MORE_: a3
}, i3 = "Afficher moins", l3 = "Afficher plus", o3 = {
  _A_DISCLOSURE_LESS_: i3,
  _A_DISCLOSURE_MORE_: l3
}, u3 = "Prikaži manje", _3 = "Prikaži više", d3 = {
  _A_DISCLOSURE_LESS_: u3,
  _A_DISCLOSURE_MORE_: _3
}, c3 = "Mostra meno", f3 = "Mostra di più", h3 = {
  _A_DISCLOSURE_LESS_: c3,
  _A_DISCLOSURE_MORE_: f3
}, A3 = "Показать меньше", E3 = "Показать больше", p3 = {
  _A_DISCLOSURE_LESS_: A3,
  _A_DISCLOSURE_MORE_: E3
}, Ka = {
  ar: XG,
  de: QG,
  en: n3,
  es: s3,
  fr: o3,
  hr: d3,
  it: h3,
  ru: p3
}, T3 = "افتح", S3 = "اغلق", L3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: T3,
  _A_FIELDSET_COLLAPSE_CLOSE_: S3
}, m3 = "Ausklappen", b3 = "Einklappen", I3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: m3,
  _A_FIELDSET_COLLAPSE_CLOSE_: b3
}, v3 = "Open", y3 = "Close", R3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: v3,
  _A_FIELDSET_COLLAPSE_CLOSE_: y3
}, g3 = "Abrir", O3 = "Cerrar", C3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: g3,
  _A_FIELDSET_COLLAPSE_CLOSE_: O3
}, D3 = "Ouvrir", N3 = "Fermer", B3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: D3,
  _A_FIELDSET_COLLAPSE_CLOSE_: N3
}, w3 = "Otvori", P3 = "Zatvori", x3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: w3,
  _A_FIELDSET_COLLAPSE_CLOSE_: P3
}, M3 = "Apri", F3 = "Chiudi", q3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: M3,
  _A_FIELDSET_COLLAPSE_CLOSE_: F3
}, $3 = "Открыть", U3 = "Закрыть", k3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: $3,
  _A_FIELDSET_COLLAPSE_CLOSE_: U3
}, za = {
  ar: L3,
  de: I3,
  en: R3,
  es: C3,
  fr: B3,
  hr: x3,
  it: q3,
  ru: k3
}, H3 = "_A_FILTERS_ADD_FILTER_", V3 = "إغلاق البحث المتقدم", W3 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", G3 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", j3 = "افتح البحث المتقدم", K3 = "_A_FILTERS_SAVE_BTN_", z3 = "_A_FILTERS_SAVE_LABEL_NAME_", Y3 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", X3 = "_A_FILTERS_SAVE_MODAL_HEADER_", Z3 = "_A_FILTERS_SAVE_MSG_ERROR_", J3 = "_A_FILTERS_SAVE_SELECT_", Q3 = "ابدأ البحث", e4 = "_A_FILTERS_TOP_CLOSE_", t4 = {
  _A_FILTERS_ADD_FILTER_: H3,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: V3,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: W3,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: G3,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: j3,
  _A_FILTERS_SAVE_BTN_: K3,
  _A_FILTERS_SAVE_LABEL_NAME_: z3,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: Y3,
  _A_FILTERS_SAVE_MODAL_HEADER_: X3,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: Z3,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: J3,
  _A_FILTERS_START_SEARCH_: Q3,
  _A_FILTERS_TOP_CLOSE_: e4
}, n4 = "Neues Filterkriterium", r4 = "Löschen", a4 = "Ausgewählten Filter löschen", s4 = "Ausgewählten Filter kann nicht gelöscht werden. (Gespeicherter Filter nicht ausgewählt)", i4 = "Filter löschen", l4 = "Zurücksetzen", o4 = "Meine Filter", u4 = "Schließen", _4 = "Filter:", d4 = "Neu", c4 = "Filter speichern", f4 = "Name", h4 = "Bitte geben Sie einen Namen für den zu speichernden Filter ein. Bei Eingabe eines bestehenden Namens wird der bereits gespeicherte Filter aktualisiert. Bei Eingabe eines neuen Namens wird ein neuer Filter gespeichert.", A4 = "Filter speichern", E4 = "Filter konnte nicht gespeichert werden.", p4 = "Gespeicherte Filter", T4 = "Suchen", S4 = "Filterkriterium entfernen", L4 = {
  _A_FILTERS_ADD_FILTER_: n4,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "Sind Sie sicher, dass Sie diese gespeicherten Filter <strong>{{ name }}</strong> löschen wollen?",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: r4,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "Gespeicherten Filter löschen",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "Ausgewählter Filter <strong>{{ name }}</strong> konnte nicht entfernt werden.",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "Ausgewählter Filter <strong>{{ name }}</strong> wurde entfernt.",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_: a4,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: s4,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_: i4,
  _A_FILTERS_DESELECT_ALL_: l4,
  _A_FILTERS_FILTER_SAVED_GROUP_MY_: o4,
  _A_FILTERS_HOR_CLOSE_DROPDOWN_: u4,
  "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_": "Filterwert {{ filterValue }} für Filter löschen: {{ filterLabel }}",
  _A_FILTERS_HOR_FILTER_HEADER_: _4,
  _A_FILTERS_HOR_FILTER_NEW_: d4,
  "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_": "Filter öffnen: {{ filterLabel }} mit Wert {{ filterValue }}",
  _A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_: c4,
  _A_FILTERS_SAVE_LABEL_NAME_: f4,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: h4,
  _A_FILTERS_SAVE_MODAL_HEADER_: A4,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": 'Der Filter mit dem Namen <strong>"{{ name }}"</strong> wird beim Speichern aktualisiert.',
  _A_FILTERS_SAVE_MSG_ERROR_: E4,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": 'Neuer Filter <strong>"{{ name }}"</strong> ist gespeichert.',
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": 'Filter <strong>"{{ name }}"</strong> ist aktualisiert.',
  _A_FILTERS_SAVE_SELECT_: p4,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} ausgewählt",
  _A_FILTERS_START_SEARCH_: T4,
  _A_FILTERS_TOP_CLOSE_: S4
}, m4 = "_A_FILTERS_ADD_FILTER_", b4 = "Close advanced search", I4 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", v4 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", y4 = "Reset selection", R4 = "Open advanced search", g4 = "_A_FILTERS_SAVE_BTN_", O4 = "_A_FILTERS_SAVE_LABEL_NAME_", C4 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", D4 = "_A_FILTERS_SAVE_MODAL_HEADER_", N4 = "_A_FILTERS_SAVE_MSG_ERROR_", B4 = "My saved searches", w4 = "start search", P4 = "_A_FILTERS_TOP_CLOSE_", x4 = "Your selection", M4 = {
  _A_FILTERS_ADD_FILTER_: m4,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: b4,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: I4,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: v4,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_DESELECT_ALL_: y4,
  "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_": "Clear filter value {{ filterValue }} for filter: {{ filterLabel }}",
  "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_": "Open filter: {{ filterLabel }} with value {{ filterValue }}",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: R4,
  _A_FILTERS_SAVE_BTN_: g4,
  _A_FILTERS_SAVE_LABEL_NAME_: O4,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: C4,
  _A_FILTERS_SAVE_MODAL_HEADER_: D4,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: N4,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: B4,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} selected",
  _A_FILTERS_START_SEARCH_: w4,
  _A_FILTERS_TOP_CLOSE_: P4,
  _A_FILTERS_YOUR_SELECTION_: x4
}, F4 = "_A_FILTERS_ADD_FILTER_", q4 = "Cerrar búsqueda avanzada", $4 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", U4 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", k4 = "Abrir búsqueda avanzada", H4 = "_A_FILTERS_SAVE_BTN_", V4 = "_A_FILTERS_SAVE_LABEL_NAME_", W4 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", G4 = "_A_FILTERS_SAVE_MODAL_HEADER_", j4 = "_A_FILTERS_SAVE_MSG_ERROR_", K4 = "_A_FILTERS_SAVE_SELECT_", z4 = "iniciar busqueda", Y4 = "_A_FILTERS_TOP_CLOSE_", X4 = {
  _A_FILTERS_ADD_FILTER_: F4,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: q4,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: $4,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: U4,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: k4,
  _A_FILTERS_SAVE_BTN_: H4,
  _A_FILTERS_SAVE_LABEL_NAME_: V4,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: W4,
  _A_FILTERS_SAVE_MODAL_HEADER_: G4,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: j4,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: K4,
  _A_FILTERS_START_SEARCH_: z4,
  _A_FILTERS_TOP_CLOSE_: Y4
}, Z4 = "_A_FILTERS_ADD_FILTER_", J4 = "Fermer la recherche avancée", Q4 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", e6 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", t6 = "Ouvrir la recherche avancée", n6 = "_A_FILTERS_SAVE_BTN_", r6 = "_A_FILTERS_SAVE_LABEL_NAME_", a6 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", s6 = "_A_FILTERS_SAVE_MODAL_HEADER_", i6 = "_A_FILTERS_SAVE_MSG_ERROR_", l6 = "_A_FILTERS_SAVE_SELECT_", o6 = "lancer la recherche", u6 = "_A_FILTERS_TOP_CLOSE_", _6 = {
  _A_FILTERS_ADD_FILTER_: Z4,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: J4,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: Q4,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: e6,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: t6,
  _A_FILTERS_SAVE_BTN_: n6,
  _A_FILTERS_SAVE_LABEL_NAME_: r6,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: a6,
  _A_FILTERS_SAVE_MODAL_HEADER_: s6,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: i6,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: l6,
  _A_FILTERS_START_SEARCH_: o6,
  _A_FILTERS_TOP_CLOSE_: u6
}, d6 = "_A_FILTERS_ADD_FILTER_", c6 = "Zatvorite napredno pretraživanje", f6 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", h6 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", A6 = "Otvorite napredno pretraživanje", E6 = "_A_FILTERS_SAVE_BTN_", p6 = "_A_FILTERS_SAVE_LABEL_NAME_", T6 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", S6 = "_A_FILTERS_SAVE_MODAL_HEADER_", L6 = "_A_FILTERS_SAVE_MSG_ERROR_", m6 = "_A_FILTERS_SAVE_SELECT_", b6 = "Započnite pretragu", I6 = "_A_FILTERS_TOP_CLOSE_", v6 = {
  _A_FILTERS_ADD_FILTER_: d6,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: c6,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: f6,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: h6,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: A6,
  _A_FILTERS_SAVE_BTN_: E6,
  _A_FILTERS_SAVE_LABEL_NAME_: p6,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: T6,
  _A_FILTERS_SAVE_MODAL_HEADER_: S6,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: L6,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: m6,
  _A_FILTERS_START_SEARCH_: b6,
  _A_FILTERS_TOP_CLOSE_: I6
}, y6 = "_A_FILTERS_ADD_FILTER_", R6 = "Chiudi la ricerca avanzata", g6 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", O6 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", C6 = "Apri la ricerca avanzata", D6 = "_A_FILTERS_SAVE_BTN_", N6 = "_A_FILTERS_SAVE_LABEL_NAME_", B6 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", w6 = "_A_FILTERS_SAVE_MODAL_HEADER_", P6 = "_A_FILTERS_SAVE_MSG_ERROR_", x6 = "_A_FILTERS_SAVE_SELECT_", M6 = "Inizia la ricerca", F6 = "_A_FILTERS_TOP_CLOSE_", q6 = {
  _A_FILTERS_ADD_FILTER_: y6,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: R6,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: g6,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: O6,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: C6,
  _A_FILTERS_SAVE_BTN_: D6,
  _A_FILTERS_SAVE_LABEL_NAME_: N6,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: B6,
  _A_FILTERS_SAVE_MODAL_HEADER_: w6,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: P6,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: x6,
  _A_FILTERS_START_SEARCH_: M6,
  _A_FILTERS_TOP_CLOSE_: F6
}, $6 = "Новое условие фильтра", U6 = "Удалить", k6 = "Удалить выбранный фильтр", H6 = "Не удается удалить выбранный фильтр. (Сохраненный фильтр не выбран)", V6 = "Удалить фильтр", W6 = "Сбросить", G6 = "Мои фильтры", j6 = "Закрыть", K6 = "Фильтр:", z6 = "Новый", Y6 = "Сохранить фильтр", X6 = "Имя", Z6 = "Пожалуйста, введите имя для сохраняемого фильтра. При вводе существующего имени, уже сохраненный фильтр будет обновлен. При вводе нового имени, будет сохранен новый фильтр.", J6 = "Сохранить фильтр", Q6 = "Не удалось сохранить фильтр.", e7 = "Сохраненные фильтры", t7 = "Поиск", n7 = "Удалить условие фильтра", r7 = {
  _A_FILTERS_ADD_FILTER_: $6,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "Вы уверены, что хотите удалить этот сохраненный фильтр <strong>{{ name }}</strong>?",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: U6,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "Удалить сохраненный фильтр",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "Не удалось удалить выбранный фильтр <strong>{{ name }}</strong>.",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "Выбранный фильтр <strong>{{ name }}</strong> был удален.",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_: k6,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: H6,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_: V6,
  _A_FILTERS_DESELECT_ALL_: W6,
  _A_FILTERS_FILTER_SAVED_GROUP_MY_: G6,
  _A_FILTERS_HOR_CLOSE_DROPDOWN_: j6,
  _A_FILTERS_HOR_FILTER_HEADER_: K6,
  _A_FILTERS_HOR_FILTER_NEW_: z6,
  _A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_: Y6,
  _A_FILTERS_SAVE_LABEL_NAME_: X6,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: Z6,
  _A_FILTERS_SAVE_MODAL_HEADER_: J6,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": 'Фильтр с именем <strong>"{{ name }}"</strong> будет обновлен при сохранении.',
  _A_FILTERS_SAVE_MSG_ERROR_: Q6,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": 'Новый фильтр <strong>"{{ name }}"</strong> был сохранен.',
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": 'Фильтр <strong>"{{ name }}"</strong> был обновлен.',
  _A_FILTERS_SAVE_SELECT_: e7,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} выбрано",
  _A_FILTERS_START_SEARCH_: t7,
  _A_FILTERS_TOP_CLOSE_: n7
}, Ya = {
  ar: t4,
  de: L4,
  en: M4,
  es: X4,
  fr: _6,
  hr: v6,
  it: q6,
  ru: r7
}, a7 = "تقليل القيمة", s7 = "زيادة القيمة", i7 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: a7,
  _A_INPUT_CURRENCY_BTN_INCREASE_: s7
}, l7 = "Wert verringern", o7 = "Wert erhöhen", u7 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: l7,
  _A_INPUT_CURRENCY_BTN_INCREASE_: o7
}, _7 = "Decrease value", d7 = "Increase value", c7 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: _7,
  _A_INPUT_CURRENCY_BTN_INCREASE_: d7
}, f7 = "Disminuir valor", h7 = "Aumentar valor", A7 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: f7,
  _A_INPUT_CURRENCY_BTN_INCREASE_: h7
}, E7 = "Diminuer la valeur", p7 = "Augmenter la valeur", T7 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: E7,
  _A_INPUT_CURRENCY_BTN_INCREASE_: p7
}, S7 = "Smanji vrijednost", L7 = "Povećaj vrijednost", m7 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: S7,
  _A_INPUT_CURRENCY_BTN_INCREASE_: L7
}, b7 = "Diminuisci valore", I7 = "Aumenta valore", v7 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: b7,
  _A_INPUT_CURRENCY_BTN_INCREASE_: I7
}, y7 = "Уменьшить значение", R7 = "Увеличить значение", g7 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: y7,
  _A_INPUT_CURRENCY_BTN_INCREASE_: R7
}, Xa = {
  ar: i7,
  de: u7,
  en: c7,
  es: A7,
  fr: T7,
  hr: m7,
  it: v7,
  ru: g7
}, O7 = "عرض كلمة المرور", C7 = "إخفاء كلمة المرور", D7 = {
  _A_INPUT_SHOW_PASSWORD_: O7,
  _A_INPUT_HIDE_PASSWORD_: C7
}, N7 = "Passwort anzeigen", B7 = "Passwort verbergen", w7 = {
  _A_INPUT_SHOW_PASSWORD_: N7,
  _A_INPUT_HIDE_PASSWORD_: B7
}, P7 = "Show password", x7 = "Hide password", M7 = {
  _A_INPUT_SHOW_PASSWORD_: P7,
  _A_INPUT_HIDE_PASSWORD_: x7
}, F7 = "Mostrar contraseña", q7 = "Ocultar contraseña", $7 = {
  _A_INPUT_SHOW_PASSWORD_: F7,
  _A_INPUT_HIDE_PASSWORD_: q7
}, U7 = "Afficher le mot de passe", k7 = "Masquer le mot de passe", H7 = {
  _A_INPUT_SHOW_PASSWORD_: U7,
  _A_INPUT_HIDE_PASSWORD_: k7
}, V7 = "Prikaži lozinku", W7 = "Sakrij lozinku", G7 = {
  _A_INPUT_SHOW_PASSWORD_: V7,
  _A_INPUT_HIDE_PASSWORD_: W7
}, j7 = "Mostra password", K7 = "Nascondi password", z7 = {
  _A_INPUT_SHOW_PASSWORD_: j7,
  _A_INPUT_HIDE_PASSWORD_: K7
}, Y7 = "Показать пароль", X7 = "Скрыть пароль", Z7 = {
  _A_INPUT_SHOW_PASSWORD_: Y7,
  _A_INPUT_HIDE_PASSWORD_: X7
}, Za = {
  ar: D7,
  de: w7,
  en: M7,
  es: $7,
  fr: H7,
  hr: G7,
  it: z7,
  ru: Z7
}, J7 = "تقليل القيمة", Q7 = "زيادة القيمة", e8 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: J7,
  _A_INPUT_NUMBER_BTN_INCREASE_: Q7
}, t8 = "Wert verringern", n8 = "Wert erhöhen", r8 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: t8,
  _A_INPUT_NUMBER_BTN_INCREASE_: n8
}, a8 = "Decrease value", s8 = "Increase value", i8 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: a8,
  _A_INPUT_NUMBER_BTN_INCREASE_: s8
}, l8 = "Disminuir valor", o8 = "Aumentar valor", u8 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: l8,
  _A_INPUT_NUMBER_BTN_INCREASE_: o8
}, _8 = "Diminuer la valeur", d8 = "Augmenter la valeur", c8 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: _8,
  _A_INPUT_NUMBER_BTN_INCREASE_: d8
}, f8 = "Smanji vrijednost", h8 = "Povećaj vrijednost", A8 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: f8,
  _A_INPUT_NUMBER_BTN_INCREASE_: h8
}, E8 = "Diminuisci valore", p8 = "Aumenta valore", T8 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: E8,
  _A_INPUT_NUMBER_BTN_INCREASE_: p8
}, S8 = "Уменьшить значение", L8 = "Увеличить значение", m8 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: S8,
  _A_INPUT_NUMBER_BTN_INCREASE_: L8
}, Ja = {
  ar: e8,
  de: r8,
  en: i8,
  es: u8,
  fr: c8,
  hr: A8,
  it: T8,
  ru: m8
}, b8 = "من", I8 = "إلى", v8 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: b8,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: I8
}, y8 = "von", R8 = "bis", g8 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: y8,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: R8
}, O8 = "from", C8 = "to", D8 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: O8,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: C8
}, N8 = "desde", B8 = "hasta", w8 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: N8,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: B8
}, P8 = "de", x8 = "à", M8 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: P8,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: x8
}, F8 = "od", q8 = "do", $8 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: F8,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: q8
}, U8 = "da", k8 = "a", H8 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: U8,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: k8
}, V8 = "от", W8 = "до", G8 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: V8,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: W8
}, Qa = {
  ar: v8,
  de: g8,
  en: D8,
  es: w8,
  fr: M8,
  hr: $8,
  it: H8,
  ru: G8
}, j8 = "القيمة الحالية", K8 = "تجاهل جميع التغييرات", z8 = "تنسيق الإدخال", Y8 = "إدخال", X8 = "إعادة تعيين الإدخال إلى القيمة الحالية", Z8 = {
  _A_JSON_CURRENT_VALUE_: j8,
  _A_JSON_DISCARD_ALL_CHANGES_: K8,
  "_A_JSON_ERROR_HTML_{{error}}_": "لا يمكن تحويل الإدخال إلى كائن JSON. يرجى التحقق من الإدخال الخاص بك:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: z8,
  _A_JSON_INPUT_: Y8,
  _A_JSON_RESET_INPUT_: X8
}, J8 = "Aktueller Wert", Q8 = "Alle Änderungen verwerfen", ej = "Eingabe formatieren", tj = "Eingabe", nj = "Eingabe aktuellen Wert zurücksetzen", rj = {
  _A_JSON_CURRENT_VALUE_: J8,
  _A_JSON_DISCARD_ALL_CHANGES_: Q8,
  "_A_JSON_ERROR_HTML_{{error}}_": "Die Eingabe kann nicht in ein JSON-Objekt konvertiert werden. Bitte prüfen Sie Ihre Eingabe:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: ej,
  _A_JSON_INPUT_: tj,
  _A_JSON_RESET_INPUT_: nj
}, aj = "Current Value", sj = "Discard All Changes", ij = "Format Input", lj = "Input", oj = "Reset Input to Current Value", uj = {
  _A_JSON_CURRENT_VALUE_: aj,
  _A_JSON_DISCARD_ALL_CHANGES_: sj,
  "_A_JSON_ERROR_HTML_{{error}}_": "Input cannot be converted into a JSON object. Please check your input:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: ij,
  _A_JSON_INPUT_: lj,
  _A_JSON_RESET_INPUT_: oj
}, _j = "Valor actual", dj = "Descartar todos los cambios", cj = "Formatear entrada", fj = "Entrada", hj = "Restablecer entrada al valor actual", Aj = {
  _A_JSON_CURRENT_VALUE_: _j,
  _A_JSON_DISCARD_ALL_CHANGES_: dj,
  "_A_JSON_ERROR_HTML_{{error}}_": "No se puede convertir la entrada en un objeto JSON. Por favor, revise su entrada:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: cj,
  _A_JSON_INPUT_: fj,
  _A_JSON_RESET_INPUT_: hj
}, Ej = "Valeur actuelle", pj = "Annuler toutes les modifications", Tj = "Formater l'entrée", Sj = "Entrée", Lj = "Réinitialiser l'entrée à la valeur actuelle", mj = {
  _A_JSON_CURRENT_VALUE_: Ej,
  _A_JSON_DISCARD_ALL_CHANGES_: pj,
  "_A_JSON_ERROR_HTML_{{error}}_": "L'entrée ne peut pas être convertie en objet JSON. Veuillez vérifier votre entrée:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: Tj,
  _A_JSON_INPUT_: Sj,
  _A_JSON_RESET_INPUT_: Lj
}, bj = "Trenutna vrijednost", Ij = "Odbaci sve promjene", vj = "Formatiraj unos", yj = "Unos", Rj = "Poništi unos na trenutnu vrijednost", gj = {
  _A_JSON_CURRENT_VALUE_: bj,
  _A_JSON_DISCARD_ALL_CHANGES_: Ij,
  "_A_JSON_ERROR_HTML_{{error}}_": "Unos se ne može pretvoriti u JSON objekt. Molimo provjerite svoj unos:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: vj,
  _A_JSON_INPUT_: yj,
  _A_JSON_RESET_INPUT_: Rj
}, Oj = "Valore attuale", Cj = "Annulla tutte le modifiche", Dj = "Formatta input", Nj = "Input", Bj = "Reimposta input al valore corrente", wj = {
  _A_JSON_CURRENT_VALUE_: Oj,
  _A_JSON_DISCARD_ALL_CHANGES_: Cj,
  "_A_JSON_ERROR_HTML_{{error}}_": "L'input non può essere convertito in un oggetto JSON. Si prega di controllare l'input:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: Dj,
  _A_JSON_INPUT_: Nj,
  _A_JSON_RESET_INPUT_: Bj
}, Pj = "Текущее значение", xj = "Отменить все изменения", Mj = "Форматировать ввод", Fj = "Ввод", qj = "Сбросить ввод до текущего значения", $j = {
  _A_JSON_CURRENT_VALUE_: Pj,
  _A_JSON_DISCARD_ALL_CHANGES_: xj,
  "_A_JSON_ERROR_HTML_{{error}}_": "Ввод не может быть преобразован в объект JSON. Пожалуйста, проверьте ваш ввод:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: Mj,
  _A_JSON_INPUT_: Fj,
  _A_JSON_RESET_INPUT_: qj
}, es = {
  ar: Z8,
  de: rj,
  en: uj,
  es: Aj,
  fr: mj,
  hr: gj,
  it: wj,
  ru: $j
}, Uj = "نسخ إلى الحافظة", kj = "تم النسخ إلى الحافظة", Hj = {
  _A_LINK_COPY_BTN_TITLE_: Uj,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: kj
}, Vj = "In die Zwischenablage kopieren", Wj = "In die Zwischenablage kopiert", Gj = {
  _A_LINK_COPY_BTN_TITLE_: Vj,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: Wj
}, jj = "Copy to clipboard", Kj = "Copied to clipboard", zj = {
  _A_LINK_COPY_BTN_TITLE_: jj,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: Kj
}, Yj = "Copiar al portapapeles", Xj = "Copiado al portapapeles", Zj = {
  _A_LINK_COPY_BTN_TITLE_: Yj,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: Xj
}, Jj = "Copier dans le presse-papiers", Qj = "Copié dans le presse-papiers", eK = {
  _A_LINK_COPY_BTN_TITLE_: Jj,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: Qj
}, tK = "Kopiraj u međuspremnik", nK = "Kopirano u međuspremnik", rK = {
  _A_LINK_COPY_BTN_TITLE_: tK,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: nK
}, aK = "Copia negli appunti", sK = "Copiato negli appunti", iK = {
  _A_LINK_COPY_BTN_TITLE_: aK,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: sK
}, lK = "Скопировать в буфер обмена", oK = "Скопировано в буфер обмена", uK = {
  _A_LINK_COPY_BTN_TITLE_: lK,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: oK
}, ts = {
  ar: Hj,
  de: Gj,
  en: zj,
  es: Zj,
  fr: eK,
  hr: rK,
  it: iK,
  ru: uK
}, _K = "تحميل", dK = {
  _A_LOADING_LOADING_: _K
}, cK = "Wird geladen", fK = {
  _A_LOADING_LOADING_: cK
}, hK = "Loading", AK = {
  _A_LOADING_LOADING_: hK
}, EK = "Cargando", pK = {
  _A_LOADING_LOADING_: EK
}, TK = "Chargement", SK = {
  _A_LOADING_LOADING_: TK
}, LK = "Učitavam", mK = {
  _A_LOADING_LOADING_: LK
}, bK = "Caricamento", IK = {
  _A_LOADING_LOADING_: bK
}, vK = "Загрузка", yK = {
  _A_LOADING_LOADING_: vK
}, ns = {
  ar: dK,
  de: fK,
  en: AK,
  es: pK,
  fr: SK,
  hr: mK,
  it: IK,
  ru: yK
}, RK = "Breadcrumb", gK = "إظهار الروابط المخفية", OK = "إغلاق القائمة", CK = "فتح القائمة", DK = "إغلاق القائمة الفرعية:", NK = "القائمة الرئيسية", BK = "فتح بحث القائمة", wK = "فتح القائمة الفرعية:", PK = "بحث القائمة", xK = "لم يتم العثور على عناصر القائمة", MK = "إلى القائمة الرئيسية", FK = {
  _A_MENU_2_BREADCRUMB_: RK,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: gK,
  _A_MENU_2_BTN_CLOSE_: OK,
  _A_MENU_2_BTN_OPEN_: CK,
  _A_MENU_2_CLOSE_SUBMENU_: DK,
  _A_MENU_2_MAIN_MENU_: NK,
  _A_MENU_2_OPEN_SEARCH_: BK,
  _A_MENU_2_OPEN_SUBMENU_: wK,
  _A_MENU_2_SEARCH_: PK,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "تم العثور على {{ count }} من عناصر القائمة",
  _A_MENU_2_SEARCH_NONE_FOUND_: xK,
  _A_MENU_2_TO_MAIN_MENU_: MK
}, qK = "Breadcrumb", $K = "Versteckte Links", UK = "Menü schließen", kK = "Menü öffnen", HK = "Untermenü schließen:", VK = "Hauptmenü", WK = "Öffnen Menüsuche", GK = "Untermenü öffnen:", jK = "Menüsuche", KK = "Keine Menüeinträge gefunden", zK = "Zum Hauptmenü", YK = {
  _A_MENU_2_BREADCRUMB_: qK,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: $K,
  _A_MENU_2_BTN_CLOSE_: UK,
  _A_MENU_2_BTN_OPEN_: kK,
  _A_MENU_2_CLOSE_SUBMENU_: HK,
  _A_MENU_2_MAIN_MENU_: VK,
  _A_MENU_2_OPEN_SEARCH_: WK,
  _A_MENU_2_OPEN_SUBMENU_: GK,
  _A_MENU_2_SEARCH_: jK,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} Menüeinträge gefunden",
  _A_MENU_2_SEARCH_NONE_FOUND_: KK,
  _A_MENU_2_TO_MAIN_MENU_: zK
}, XK = "Breadcrumb", ZK = "Show Hidden Links", JK = "Close Menu", QK = "Open Menu", e9 = "Close Submenu:", t9 = "Main Menu", n9 = "Open Menu Search", r9 = "Open Submenu:", a9 = "Menu Search", s9 = "No Menu Entries Found", i9 = "To Main Menu", l9 = {
  _A_MENU_2_BREADCRUMB_: XK,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: ZK,
  _A_MENU_2_BTN_CLOSE_: JK,
  _A_MENU_2_BTN_OPEN_: QK,
  _A_MENU_2_CLOSE_SUBMENU_: e9,
  _A_MENU_2_MAIN_MENU_: t9,
  _A_MENU_2_OPEN_SEARCH_: n9,
  _A_MENU_2_OPEN_SUBMENU_: r9,
  _A_MENU_2_SEARCH_: a9,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} Menu Entries Found",
  _A_MENU_2_SEARCH_NONE_FOUND_: s9,
  _A_MENU_2_TO_MAIN_MENU_: i9
}, o9 = "Breadcrumb", u9 = "Mostrar enlaces ocultos", _9 = "Cerrar menú", d9 = "Abrir menú", c9 = "Cerrar submenú:", f9 = "Menú principal", h9 = "Abrir búsqueda en menú", A9 = "Abrir submenú:", E9 = "Búsqueda en menú", p9 = "No se encontraron entradas de menú", T9 = "Al menú principal", S9 = {
  _A_MENU_2_BREADCRUMB_: o9,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: u9,
  _A_MENU_2_BTN_CLOSE_: _9,
  _A_MENU_2_BTN_OPEN_: d9,
  _A_MENU_2_CLOSE_SUBMENU_: c9,
  _A_MENU_2_MAIN_MENU_: f9,
  _A_MENU_2_OPEN_SEARCH_: h9,
  _A_MENU_2_OPEN_SUBMENU_: A9,
  _A_MENU_2_SEARCH_: E9,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} entradas de menú encontradas",
  _A_MENU_2_SEARCH_NONE_FOUND_: p9,
  _A_MENU_2_TO_MAIN_MENU_: T9
}, L9 = "Breadcrumb", m9 = "Afficher les liens cachés", b9 = "Fermer le menu", I9 = "Ouvrir le menu", v9 = "Fermer le sous-menu :", y9 = "Menu principal", R9 = "Ouvrir la recherche dans le menu", g9 = "Ouvrir le sous-menu :", O9 = "Recherche dans le menu", C9 = "Aucune entrée de menu trouvée", D9 = "Au menu principal", N9 = {
  _A_MENU_2_BREADCRUMB_: L9,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: m9,
  _A_MENU_2_BTN_CLOSE_: b9,
  _A_MENU_2_BTN_OPEN_: I9,
  _A_MENU_2_CLOSE_SUBMENU_: v9,
  _A_MENU_2_MAIN_MENU_: y9,
  _A_MENU_2_OPEN_SEARCH_: R9,
  _A_MENU_2_OPEN_SUBMENU_: g9,
  _A_MENU_2_SEARCH_: O9,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} entrées de menu trouvées",
  _A_MENU_2_SEARCH_NONE_FOUND_: C9,
  _A_MENU_2_TO_MAIN_MENU_: D9
}, B9 = "_A_MENU_2_BREADCRUMB_", w9 = "_A_MENU_2_BREADCRUMB_SHOW_BTN_", P9 = "Zatvaranje izbornika", x9 = "Otvaranje izbornika", M9 = "Glavni izbornik", F9 = "Zatvaranje podizbornika", q9 = "Otvaranje pretraživanja", $9 = "Otvaranje podizbornika:", U9 = "Pretraživanje izbornika", k9 = "Nisu pronađeni rezultati pretraživanja", H9 = "Natrag na glavni izbornik", V9 = {
  _A_MENU_2_BREADCRUMB_: B9,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: w9,
  _A_MENU_2_BTN_CLOSE_: P9,
  _A_MENU_2_BTN_OPEN_: x9,
  _A_MENU_2_MAIN_MENU_: M9,
  _A_MENU_2_CLOSE_SUBMENU_: F9,
  _A_MENU_2_OPEN_SEARCH_: q9,
  _A_MENU_2_OPEN_SUBMENU_: $9,
  _A_MENU_2_SEARCH_: U9,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "Broj pronađenih rezultata: {{ count }}",
  _A_MENU_2_SEARCH_NONE_FOUND_: k9,
  _A_MENU_2_TO_MAIN_MENU_: H9
}, W9 = "Breadcrumb", G9 = "Mostra link nascosti", j9 = "Chiudi menu", K9 = "Apri menu", z9 = "Chiudi sottomenu:", Y9 = "Menu principale", X9 = "Apri ricerca nel menu", Z9 = "Apri sottomenu:", J9 = "Ricerca nel menu", Q9 = "Nessuna voce di menu trovata", ez = "Al menu principale", tz = {
  _A_MENU_2_BREADCRUMB_: W9,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: G9,
  _A_MENU_2_BTN_CLOSE_: j9,
  _A_MENU_2_BTN_OPEN_: K9,
  _A_MENU_2_CLOSE_SUBMENU_: z9,
  _A_MENU_2_MAIN_MENU_: Y9,
  _A_MENU_2_OPEN_SEARCH_: X9,
  _A_MENU_2_OPEN_SUBMENU_: Z9,
  _A_MENU_2_SEARCH_: J9,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} voci di menu trovate",
  _A_MENU_2_SEARCH_NONE_FOUND_: Q9,
  _A_MENU_2_TO_MAIN_MENU_: ez
}, nz = "Breadcrumb", rz = "Скрытые ссылки", az = "Закрыть меню", sz = "Открыть меню", iz = "Главное меню", lz = "Закрыть подменю:", oz = "Открыть поиск в меню", uz = "Открыть подменю:", _z = "Поиск в меню", dz = "Пункты меню не найдены", cz = "В главное меню", fz = {
  _A_MENU_2_BREADCRUMB_: nz,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: rz,
  _A_MENU_2_BTN_CLOSE_: az,
  _A_MENU_2_BTN_OPEN_: sz,
  _A_MENU_2_MAIN_MENU_: iz,
  _A_MENU_2_CLOSE_SUBMENU_: lz,
  _A_MENU_2_OPEN_SEARCH_: oz,
  _A_MENU_2_OPEN_SUBMENU_: uz,
  _A_MENU_2_SEARCH_: _z,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "Найдены пункты меню: {{ count }}",
  _A_MENU_2_SEARCH_NONE_FOUND_: dz,
  _A_MENU_2_TO_MAIN_MENU_: cz
}, rs = {
  ar: FK,
  de: YK,
  en: l9,
  es: S9,
  fr: N9,
  hr: V9,
  it: tz,
  ru: fz
}, hz = "قطع", Az = "حفظ", Ez = "إغلاق النافذة المنبثقة (موجودة في الرأس)", pz = "إغلاق النافذة المنبثقة (موجودة في التذييل)", Tz = "حفظ البيانات في النافذة المنبثقة", Sz = {
  _A_MODAL_BTN_CANCEL_: hz,
  _A_MODAL_BTN_SAVE_: Az,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: Ez,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: pz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: Tz
}, Lz = "Abbrechen", mz = "Speichern", bz = "Modales Fenster schließen (im Header angeordnet)", Iz = "Modales Fenster schließen (im Footer angeordnet)", vz = "Daten im modalen Fenster speichern", yz = {
  _A_MODAL_BTN_CANCEL_: Lz,
  _A_MODAL_BTN_SAVE_: mz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: bz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: Iz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: vz
}, Rz = "cancel", gz = "save", Oz = "Close modal window (located in the header)", Cz = "Close modal window (located in the footer)", Dz = "Save data in the modal window", Nz = {
  _A_MODAL_BTN_CANCEL_: Rz,
  _A_MODAL_BTN_SAVE_: gz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: Oz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: Cz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: Dz
}, Bz = "Interrumpir", wz = "Guardar", Pz = "Cerrar ventana modal (ubicada en el encabezado)", xz = "Cerrar ventana modal (ubicada en el pie de página)", Mz = "Guardar los datos en la ventana modal", Fz = {
  _A_MODAL_BTN_CANCEL_: Bz,
  _A_MODAL_BTN_SAVE_: wz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: Pz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: xz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: Mz
}, qz = "Interrompre", $z = "Enregistrer", Uz = "Fermer la fenêtre modale (située dans l'en-tête)", kz = "Fermer la fenêtre modale (située dans le pied de page)", Hz = "Enregistrer les données dans la fenêtre modale", Vz = {
  _A_MODAL_BTN_CANCEL_: qz,
  _A_MODAL_BTN_SAVE_: $z,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: Uz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: kz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: Hz
}, Wz = "Odustani", Gz = "Spremi", jz = "Zatvori modalni prozor (smještena u zaglavlju)", Kz = "Zatvori modalni prozor (smještena u podnožju)", zz = "Spremi podatke u modalnom prozoru", Yz = {
  _A_MODAL_BTN_CANCEL_: Wz,
  _A_MODAL_BTN_SAVE_: Gz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: jz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: Kz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: zz
}, Xz = "Interrompere", Zz = "Salva", Jz = "Chiudi finestra modale (situata nell'intestazione)", Qz = "Chiudi finestra modale (situata nel piè di pagina)", eY = "Salva i dati nella finestra modale", tY = {
  _A_MODAL_BTN_CANCEL_: Xz,
  _A_MODAL_BTN_SAVE_: Zz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: Jz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: Qz,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: eY
}, nY = "Прервать", rY = "Сохранить", aY = "Закрыть модальное окно (расположена в хедере)", sY = "Закрыть модальное окно (расположена в футере)", iY = "Сохранить данные в модальном окне", lY = {
  _A_MODAL_BTN_CANCEL_: nY,
  _A_MODAL_BTN_SAVE_: rY,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: aY,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: sY,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: iY
}, as = {
  ar: Sz,
  de: yz,
  en: Nz,
  es: Fz,
  fr: Vz,
  hr: Yz,
  it: tY,
  ru: lY
}, oY = "إزالة من القائمة", uY = "نقل إلى نهاية القائمة", _Y = "الإجراءات لـ", dY = "نقل إلى بداية القائمة", cY = "إلغاء تحديد الكل", fY = "إدارة التحديد", hY = "اختر عنصراً", AY = "لم يتم اختيار عناصر", EY = "تحديد الكل", pY = {
  _A_MULTISELECT_ORDERED_BTN_DELETE_: oY,
  _A_MULTISELECT_ORDERED_BTN_DOWN_: uY,
  _A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_: _Y,
  _A_MULTISELECT_ORDERED_BTN_UP_: dY,
  _A_MULTISELECT_ORDERED_DESELECT_ALL_: cY,
  _A_MULTISELECT_ORDERED_GROUP_ALL_: fY,
  _A_MULTISELECT_ORDERED_LABEL_SELECT_: hY,
  _A_MULTISELECT_ORDERED_MODEL_EMPTY_: AY,
  _A_MULTISELECT_ORDERED_SELECT_ALL_: EY
}, TY = "Aus der Liste entfernen", SY = "Weiter ans Listenende verschieben", LY = "Aktionen für", mY = "Weiter an den Listenanfang verschieben", bY = "Alle abwählen", IY = "Auswahlsteuerung", vY = "Element auswählen", yY = "Keine Elemente ausgewählt", RY = "Alle auswählen", gY = {
  _A_MULTISELECT_ORDERED_BTN_DELETE_: TY,
  _A_MULTISELECT_ORDERED_BTN_DOWN_: SY,
  _A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_: LY,
  _A_MULTISELECT_ORDERED_BTN_UP_: mY,
  _A_MULTISELECT_ORDERED_DESELECT_ALL_: bY,
  _A_MULTISELECT_ORDERED_GROUP_ALL_: IY,
  _A_MULTISELECT_ORDERED_LABEL_SELECT_: vY,
  _A_MULTISELECT_ORDERED_MODEL_EMPTY_: yY,
  _A_MULTISELECT_ORDERED_SELECT_ALL_: RY
}, OY = "Remove from list", CY = "Move closer to the end of the list", DY = "Actions for", NY = "Move closer to the beginning of the list", BY = "Deselect all", wY = "Selection control", PY = "Select an item", xY = "No items selected", MY = "Select all", FY = {
  _A_MULTISELECT_ORDERED_BTN_DELETE_: OY,
  _A_MULTISELECT_ORDERED_BTN_DOWN_: CY,
  _A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_: DY,
  _A_MULTISELECT_ORDERED_BTN_UP_: NY,
  _A_MULTISELECT_ORDERED_DESELECT_ALL_: BY,
  _A_MULTISELECT_ORDERED_GROUP_ALL_: wY,
  _A_MULTISELECT_ORDERED_LABEL_SELECT_: PY,
  _A_MULTISELECT_ORDERED_MODEL_EMPTY_: xY,
  _A_MULTISELECT_ORDERED_SELECT_ALL_: MY
}, qY = "Eliminar de la lista", $Y = "Mover más cerca del final de la lista", UY = "Acciones para", kY = "Mover más cerca del principio de la lista", HY = "Deseleccionar todo", VY = "Control de selección", WY = "Seleccione un elemento", GY = "No hay elementos seleccionados", jY = "Seleccionar todo", KY = {
  _A_MULTISELECT_ORDERED_BTN_DELETE_: qY,
  _A_MULTISELECT_ORDERED_BTN_DOWN_: $Y,
  _A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_: UY,
  _A_MULTISELECT_ORDERED_BTN_UP_: kY,
  _A_MULTISELECT_ORDERED_DESELECT_ALL_: HY,
  _A_MULTISELECT_ORDERED_GROUP_ALL_: VY,
  _A_MULTISELECT_ORDERED_LABEL_SELECT_: WY,
  _A_MULTISELECT_ORDERED_MODEL_EMPTY_: GY,
  _A_MULTISELECT_ORDERED_SELECT_ALL_: jY
}, zY = "Supprimer de la liste", YY = "Déplacer vers la fin de la liste", XY = "Actions pour", ZY = "Déplacer vers le début de la liste", JY = "Tout désélectionner", QY = "Contrôle de sélection", eX = "Sélectionnez un élément", tX = "Aucun élément sélectionné", nX = "Tout sélectionner", rX = {
  _A_MULTISELECT_ORDERED_BTN_DELETE_: zY,
  _A_MULTISELECT_ORDERED_BTN_DOWN_: YY,
  _A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_: XY,
  _A_MULTISELECT_ORDERED_BTN_UP_: ZY,
  _A_MULTISELECT_ORDERED_DESELECT_ALL_: JY,
  _A_MULTISELECT_ORDERED_GROUP_ALL_: QY,
  _A_MULTISELECT_ORDERED_LABEL_SELECT_: eX,
  _A_MULTISELECT_ORDERED_MODEL_EMPTY_: tX,
  _A_MULTISELECT_ORDERED_SELECT_ALL_: nX
}, aX = "Ukloni iz popisa", sX = "Pomakni bliže kraju popisa", iX = "Radnje za", lX = "Pomakni bliže početku popisa", oX = "Poništi odabir svega", uX = "Upravljanje odabirom", _X = "Odaberite stavku", dX = "Nema odabranih stavki", cX = "Odaberi sve", fX = {
  _A_MULTISELECT_ORDERED_BTN_DELETE_: aX,
  _A_MULTISELECT_ORDERED_BTN_DOWN_: sX,
  _A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_: iX,
  _A_MULTISELECT_ORDERED_BTN_UP_: lX,
  _A_MULTISELECT_ORDERED_DESELECT_ALL_: oX,
  _A_MULTISELECT_ORDERED_GROUP_ALL_: uX,
  _A_MULTISELECT_ORDERED_LABEL_SELECT_: _X,
  _A_MULTISELECT_ORDERED_MODEL_EMPTY_: dX,
  _A_MULTISELECT_ORDERED_SELECT_ALL_: cX
}, hX = "Rimuovi dalla lista", AX = "Sposta verso la fine dell'elenco", EX = "Azioni per", pX = "Sposta verso l'inizio dell'elenco", TX = "Deseleziona tutto", SX = "Controllo della selezione", LX = "Seleziona un elemento", mX = "Nessun elemento selezionato", bX = "Seleziona tutto", IX = {
  _A_MULTISELECT_ORDERED_BTN_DELETE_: hX,
  _A_MULTISELECT_ORDERED_BTN_DOWN_: AX,
  _A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_: EX,
  _A_MULTISELECT_ORDERED_BTN_UP_: pX,
  _A_MULTISELECT_ORDERED_DESELECT_ALL_: TX,
  _A_MULTISELECT_ORDERED_GROUP_ALL_: SX,
  _A_MULTISELECT_ORDERED_LABEL_SELECT_: LX,
  _A_MULTISELECT_ORDERED_MODEL_EMPTY_: mX,
  _A_MULTISELECT_ORDERED_SELECT_ALL_: bX
}, vX = "Удалить из списка", yX = "Переместить ближе к концу списка", RX = "Действия с", gX = "Переместить ближе к началу списка", OX = "Очистить выбор", CX = "Управление выбором", DX = "Выберите элемент", NX = "Элементы не выбраны", BX = "Выбрать все элементы", wX = {
  _A_MULTISELECT_ORDERED_BTN_DELETE_: vX,
  _A_MULTISELECT_ORDERED_BTN_DOWN_: yX,
  _A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_: RX,
  _A_MULTISELECT_ORDERED_BTN_UP_: gX,
  _A_MULTISELECT_ORDERED_DESELECT_ALL_: OX,
  _A_MULTISELECT_ORDERED_GROUP_ALL_: CX,
  _A_MULTISELECT_ORDERED_LABEL_SELECT_: DX,
  _A_MULTISELECT_ORDERED_MODEL_EMPTY_: NX,
  _A_MULTISELECT_ORDERED_SELECT_ALL_: BX
}, ss = {
  ar: pY,
  de: gY,
  en: FY,
  es: KY,
  fr: rX,
  hr: fX,
  it: IX,
  ru: wX
}, PX = "[ALOHA]", xX = "[ALOHA]", MX = "[ALOHA]", FX = "التنقل بين الصفحات", qX = "[ALOHA]", $X = "[ALOHA]", UX = {
  _A_COUNT_PER_PAGE_: PX,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: xX,
  _A_PAGINATION_LAST_PAGE_: MX,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ allPages }}ل {{ currentPage }}",
  _A_PAGINATION_NAVIGATION_: FX,
  _A_PAGINATION_NEXT_PAGE_: qX,
  _A_PAGINATION_PREVIOUS_PAGE_: $X,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, kX = "Pro Seite:", HX = "Zur ersten Seite", VX = "Zur letzten Seite", WX = "Paginierungsnavigation", GX = "Zur nächsten Seite", jX = "Zur vorherigen Seite", KX = {
  _A_COUNT_PER_PAGE_: kX,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Zeilen pro Seite: {{ count }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} von {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: HX,
  _A_PAGINATION_LAST_PAGE_: VX,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} von {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: WX,
  _A_PAGINATION_NEXT_PAGE_: GX,
  _A_PAGINATION_PREVIOUS_PAGE_: jX,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "Zur Seite Nummer {{ page }}"
}, zX = "Per page:", YX = "To first page", XX = "To last page", ZX = "Pagination navigation", JX = "To next page", QX = "To previous page", eZ = {
  _A_COUNT_PER_PAGE_: zX,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Items per page:",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} to {{ current }} of {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: YX,
  _A_PAGINATION_LAST_PAGE_: XX,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} of {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: ZX,
  _A_PAGINATION_NEXT_PAGE_: JX,
  _A_PAGINATION_PREVIOUS_PAGE_: QX,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "To page {{ page }}"
}, tZ = "[ALOHA]", nZ = "[ALOHA]", rZ = "[ALOHA]", aZ = "Navegación de paginación", sZ = "[ALOHA]", iZ = "[ALOHA]", lZ = {
  _A_COUNT_PER_PAGE_: tZ,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: nZ,
  _A_PAGINATION_LAST_PAGE_: rZ,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} de {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: aZ,
  _A_PAGINATION_NEXT_PAGE_: sZ,
  _A_PAGINATION_PREVIOUS_PAGE_: iZ,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, oZ = "[ALOHA]", uZ = "[ALOHA]", _Z = "[ALOHA]", dZ = "Navigation dans la pagination", cZ = "[ALOHA]", fZ = "[ALOHA]", hZ = {
  _A_COUNT_PER_PAGE_: oZ,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: uZ,
  _A_PAGINATION_LAST_PAGE_: _Z,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} de {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: dZ,
  _A_PAGINATION_NEXT_PAGE_: cZ,
  _A_PAGINATION_PREVIOUS_PAGE_: fZ,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, AZ = "Po stranici:", EZ = "[ALOHA]", pZ = "[ALOHA]", TZ = "Navigacija po stranicama", SZ = "[ALOHA]", LZ = "[ALOHA]", mZ = {
  _A_COUNT_PER_PAGE_: AZ,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Broj redaka po stranici: {{ count }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} od {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: EZ,
  _A_PAGINATION_LAST_PAGE_: pZ,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} iz {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: TZ,
  _A_PAGINATION_NEXT_PAGE_: SZ,
  _A_PAGINATION_PREVIOUS_PAGE_: LZ,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, bZ = "[ALOHA]", IZ = "[ALOHA]", vZ = "[ALOHA]", yZ = "Navigazione dell'impaginazione", RZ = "[ALOHA]", gZ = "[ALOHA]", OZ = {
  _A_COUNT_PER_PAGE_: bZ,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: IZ,
  _A_PAGINATION_LAST_PAGE_: vZ,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} Di {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: yZ,
  _A_PAGINATION_NEXT_PAGE_: RZ,
  _A_PAGINATION_PREVIOUS_PAGE_: gZ,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, CZ = "На странице:", DZ = "К первой странице", NZ = "К последней странице", BZ = "Навигация по страницам", wZ = "К следующей странице", PZ = "К предыдущей странице", xZ = {
  _A_COUNT_PER_PAGE_: CZ,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Строк на странице: {{ cont }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} из {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: DZ,
  _A_PAGINATION_LAST_PAGE_: NZ,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} из {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: BZ,
  _A_PAGINATION_NEXT_PAGE_: wZ,
  _A_PAGINATION_PREVIOUS_PAGE_: PZ,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "К странице номер {{ page }}"
}, is = {
  ar: UX,
  de: KX,
  en: eZ,
  es: lZ,
  fr: hZ,
  hr: mZ,
  it: OZ,
  ru: xZ
}, MZ = "[لا توجد عناصر متاحة للاختيار]", FZ = "بحث", qZ = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: MZ,
  _A_RADIO_SEARCH_: FZ
}, $Z = "[Keine Elemente zur Auswahl verfügbar]", UZ = "Suche", kZ = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: $Z,
  _A_RADIO_SEARCH_: UZ
}, HZ = "[No items available for selection]", VZ = "Search", WZ = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: HZ,
  _A_RADIO_SEARCH_: VZ
}, GZ = "[No hay elementos disponibles para seleccionar]", jZ = "Buscar", KZ = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: GZ,
  _A_RADIO_SEARCH_: jZ
}, zZ = "[Aucun élément disponible pour la sélection]", YZ = "Recherche", XZ = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: zZ,
  _A_RADIO_SEARCH_: YZ
}, ZZ = "[Nema dostupnih elemenata za odabir]", JZ = "Pretraživanje", QZ = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: ZZ,
  _A_RADIO_SEARCH_: JZ
}, eJ = "[Nessun elemento disponibile per la selezione]", tJ = "Cerca", nJ = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: eJ,
  _A_RADIO_SEARCH_: tJ
}, rJ = "[Нет элементов для выбора]", aJ = "Поиск", sJ = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: rJ,
  _A_RADIO_SEARCH_: aJ
}, ls = {
  ar: qZ,
  de: kZ,
  en: WZ,
  es: KZ,
  fr: XZ,
  hr: QZ,
  it: nJ,
  ru: sJ
}, iJ = "الحقول المميزة بعلامة النجمة * مطلوبة.", lJ = {
  _A_REQUIRED_TEXT_: iJ
}, oJ = "Die mit *Sternchen versehenen Felder sind Pflichtfelder.", uJ = {
  _A_REQUIRED_TEXT_: oJ
}, _J = "Fields marked with an asterisk * are required.", dJ = {
  _A_REQUIRED_TEXT_: _J
}, cJ = "Los campos marcados con un asterisco * son obligatorios.", fJ = {
  _A_REQUIRED_TEXT_: cJ
}, hJ = "Les champs marqués d'un astérisque * sont obligatoires.", AJ = {
  _A_REQUIRED_TEXT_: hJ
}, EJ = "Polja označena zvjezdicom * su obavezna.", pJ = {
  _A_REQUIRED_TEXT_: EJ
}, TJ = "I campi contrassegnati con un asterisco * sono obbligatori.", SJ = {
  _A_REQUIRED_TEXT_: TJ
}, LJ = "Поля, отмеченные звездочкой *, являются обязательными.", mJ = {
  _A_REQUIRED_TEXT_: LJ
}, os = {
  ar: lJ,
  de: uJ,
  en: dJ,
  es: fJ,
  fr: AJ,
  hr: pJ,
  it: SJ,
  ru: mJ
}, bJ = "عرض كلمة المرور", IJ = "إخفاء كلمة المرور", vJ = {
  _A_INPUT_SHOW_PASSWORD_: bJ,
  _A_INPUT_HIDE_PASSWORD_: IJ
}, yJ = "Dynamische Parameter werden in Routen verwendet, um Daten innerhalb des Pfads zu übergeben. Sie werden durch einen Doppelpunkt <code>:</code> vor dem Parameternamen gekennzeichnet, zum Beispiel: <code>/user/:id</code>. Beim Navigieren wird dieser Parameter durch einen bestimmten Wert ersetzt, z. B.: <code>/user/123</code>.", RJ = '<span lang="en">URL</span>-Parameter ermöglichen das Übertragen zusätzlicher Informationen in der Anfrage. Sie werden nach dem <code>?</code>-Zeichen in der Adressleiste hinzugefügt und im Format "Schlüssel=Wert" geschrieben. Zum Beispiel: <code>?limit=10&sort=asc</code>.', gJ = "Die Adresse bestimmt, wohin der Link führt. Sie kann statisch sein (z. B. <code>/home</code>) oder dynamische Parameter enthalten (z. B. <code>/user/:id</code>). Wählen Sie die Adresse für die Navigation.", OJ = "Legt fest, wo der Link geöffnet wird. Verfügbare Optionen: im selben Fenster (<code>_self</code>), in einem neuen Fenster oder Tab (<code>_blank</code>), im übergeordneten Frame (<code>_parent</code>) oder im äußersten Frame (<code>_top</code>).", CJ = "Dynamische Parameter", DJ = '<span lang="en">URL</span>-Parameter', NJ = "Adresse auswählen", BJ = '<span lang="en">target</span>-Attribut', wJ = 'In einem neuen Tab öffnen <strong lang="en">_blank</strong>', PJ = 'Im übergeordneten Frame öffnen <strong lang="en">_parent</strong>', xJ = 'Im selben Fenster öffnen <strong lang="en">_self</strong>', MJ = 'Im äußersten Frame öffnen <strong lang="en">_top</strong>', FJ = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: yJ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: RJ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: gJ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: OJ,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: CJ,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: DJ,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: NJ,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: BJ,
  _A_TARGET_BLANK_: wJ,
  _A_TARGET_PARENT_: PJ,
  _A_TARGET_SELF_: xJ,
  _A_TARGET_TOP_: MJ
}, qJ = "Dynamic parameters are used in routes to pass data within the path. They are denoted by a colon <code>:</code> before the parameter name, for example: <code>/user/:id</code>. When navigating, this parameter is replaced with a specific value, such as: <code>/user/123</code>.", $J = '<span lang="en">URL</span> parameters allow passing additional information in the request. They are added after the <code>?</code> symbol in the address bar and follow the format "key=value". For example: <code>?limit=10&sort=asc</code>.', UJ = "The address determines where the link will navigate. It can be static (e.g., <code>/home</code>) or contain dynamic parameters (e.g., <code>/user/:id</code>). Select the address for navigation.", kJ = "Defines where the link will open. Available options: in the same window (<code>_self</code>), in a new window or tab (<code>_blank</code>), in the parent frame (<code>_parent</code>), or in the outermost frame (<code>_top</code>).", HJ = "Dynamic parameters", VJ = '<span lang="en">URL</span> parameters', WJ = "Select address", GJ = '<span lang="en">target</span> attribute', jJ = 'Open in a new tab <strong lang="en">_blank</strong>', KJ = 'Open in the parent frame <strong lang="en">_parent</strong>', zJ = 'Open in the same window <strong lang="en">_self</strong>', YJ = 'Open in the outermost frame <strong lang="en">_top</strong>', XJ = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: qJ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: $J,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: UJ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: kJ,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: HJ,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: VJ,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: WJ,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: GJ,
  _A_TARGET_BLANK_: jJ,
  _A_TARGET_PARENT_: KJ,
  _A_TARGET_SELF_: zJ,
  _A_TARGET_TOP_: YJ
}, ZJ = "Los parámetros dinámicos se utilizan en las rutas para transmitir datos dentro de la ruta. Se denotan con dos puntos <code>:</code> antes del nombre del parámetro, por ejemplo: <code>/user/:id</code>. Al navegar, este parámetro se reemplaza con un valor específico, como: <code>/user/123</code>.", JJ = 'Los parámetros de <span lang="en">URL</span> permiten enviar información adicional en la solicitud. Se agregan después del símbolo <code>?</code> en la barra de direcciones y tienen el formato "clave=valor". Por ejemplo: <code>?limit=10&sort=asc</code>.', QJ = "La dirección determina a dónde llevará el enlace. Puede ser estática (por ejemplo, <code>/home</code>) o contener parámetros dinámicos (por ejemplo, <code>/user/:id</code>). Seleccione la dirección de navegación.", eQ = "Define dónde se abrirá el enlace. Opciones disponibles: en la misma ventana (<code>_self</code>), en una nueva ventana o pestaña (<code>_blank</code>), en el marco padre (<code>_parent</code>) o en el marco superior (<code>_top</code>).", tQ = "Parámetros dinámicos", nQ = 'Parámetros de <span lang="en">URL</span>', rQ = "Seleccionar dirección", aQ = 'Atributo <span lang="en">target</span>', sQ = 'Abrir en una nueva pestaña <strong lang="en">_blank</strong>', iQ = 'Abrir en el marco padre <strong lang="en">_parent</strong>', lQ = 'Abrir en la misma ventana <strong lang="en">_self</strong>', oQ = 'Abrir en el marco superior <strong lang="en">_top</strong>', uQ = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: ZJ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: JJ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: QJ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: eQ,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: tQ,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: nQ,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: rQ,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: aQ,
  _A_TARGET_BLANK_: sQ,
  _A_TARGET_PARENT_: iQ,
  _A_TARGET_SELF_: lQ,
  _A_TARGET_TOP_: oQ
}, _Q = "Les paramètres dynamiques sont utilisés dans les routes pour transmettre des données dans le chemin. Ils sont indiqués par un deux-points <code>:</code> avant le nom du paramètre, par exemple : <code>/user/:id</code>. Lors de la navigation, ce paramètre est remplacé par une valeur spécifique, comme : <code>/user/123</code>.", dQ = `Les paramètres <span lang="en">URL</span> permettent de transmettre des informations supplémentaires dans la requête. Ils sont ajoutés après le symbole <code>?</code> dans la barre d'adresse et sont formatés en "clé=valeur". Par exemple : <code>?limit=10&sort=asc</code>.`, cQ = "L'adresse détermine où le lien dirigera. Elle peut être statique (ex. <code>/home</code>) ou contenir des paramètres dynamiques (ex. <code>/user/:id</code>). Sélectionnez l'adresse de navigation.", fQ = "Définit où le lien s'ouvrira. Options disponibles : dans la même fenêtre (<code>_self</code>), dans une nouvelle fenêtre ou un nouvel onglet (<code>_blank</code>), dans le cadre parent (<code>_parent</code>) ou dans le cadre principal (<code>_top</code>).", hQ = "Paramètres dynamiques", AQ = 'Paramètres <span lang="en">URL</span>', EQ = "Choisir une adresse", pQ = 'Attribut <span lang="en">target</span>', TQ = 'Ouvrir dans un nouvel onglet <strong lang="en">_blank</strong>', SQ = 'Ouvrir dans le cadre parent <strong lang="en">_parent</strong>', LQ = 'Ouvrir dans la même fenêtre <strong lang="en">_self</strong>', mQ = 'Ouvrir dans le cadre principal <strong lang="en">_top</strong>', bQ = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: _Q,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: dQ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: cQ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: fQ,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: hQ,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: AQ,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: EQ,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: pQ,
  _A_TARGET_BLANK_: TQ,
  _A_TARGET_PARENT_: SQ,
  _A_TARGET_SELF_: LQ,
  _A_TARGET_TOP_: mQ
}, IQ = "Dinamički parametri koriste se u rutama za prijenos podataka unutar putanje. Označeni su dvotočkom <code>:</code> ispred naziva parametra, primjer: <code>/user/:id</code>. Prilikom navigacije, ovaj parametar zamjenjuje se specifičnom vrijednošću, primjer: <code>/user/123</code>.", vQ = 'Parametri <span lang="en">URL</span> omogućuju prijenos dodatnih informacija u zahtjevu. Dodaju se nakon simbola <code>?</code> u adresnoj traci i zapisani su u formatu "ključ=vrijednost". Na primjer: <code>?limit=10&sort=asc</code>.', yQ = "Adresa određuje kamo će veza voditi. Može biti statična (npr. <code>/home</code>) ili sadržavati dinamičke parametre (npr. <code>/user/:id</code>). Odaberite adresu za navigaciju.", RQ = "Određuje gdje će se veza otvoriti. Dostupne opcije: u istom prozoru (<code>_self</code>), u novom prozoru ili kartici (<code>_blank</code>), u roditeljskom okviru (<code>_parent</code>) ili u najvišem okviru (<code>_top</code>).", gQ = "Dinamički parametri", OQ = 'Parametri <span lang="en">URL</span>', CQ = "Odaberi adresu", DQ = 'Atribut <span lang="en">target</span>', NQ = 'Otvori u novoj kartici <strong lang="en">_blank</strong>', BQ = 'Otvori u roditeljskom okviru <strong lang="en">_parent</strong>', wQ = 'Otvori u istom prozoru <strong lang="en">_self</strong>', PQ = 'Otvori u najvišem okviru <strong lang="en">_top</strong>', xQ = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: IQ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: vQ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: yQ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: RQ,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: gQ,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: OQ,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: CQ,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: DQ,
  _A_TARGET_BLANK_: NQ,
  _A_TARGET_PARENT_: BQ,
  _A_TARGET_SELF_: wQ,
  _A_TARGET_TOP_: PQ
}, MQ = "I parametri dinamici vengono utilizzati nelle rotte per trasmettere dati all'interno del percorso. Sono indicati con due punti <code>:</code> prima del nome del parametro, ad esempio: <code>/user/:id</code>. Durante la navigazione, questo parametro viene sostituito con un valore specifico, ad esempio: <code>/user/123</code>.", FQ = 'I parametri <span lang="en">URL</span> consentono di trasmettere informazioni aggiuntive nella richiesta. Vengono aggiunti dopo il simbolo <code>?</code> nella barra degli indirizzi e sono scritti nel formato "chiave=valore". Ad esempio: <code>?limit=10&sort=asc</code>.', qQ = "L'indirizzo determina dove porterà il link. Può essere statico (ad esempio, <code>/home</code>) o contenere parametri dinamici (ad esempio, <code>/user/:id</code>). Selezionare l'indirizzo per la navigazione.", $Q = "Definisce dove si aprirà il link. Opzioni disponibili: nella stessa finestra (<code>_self</code>), in una nuova finestra o scheda (<code>_blank</code>), nel frame padre (<code>_parent</code>) o nel frame superiore (<code>_top</code>).", UQ = "Parametri dinamici", kQ = 'Parametri <span lang="en">URL</span>', HQ = "Seleziona indirizzo", VQ = 'Attributo <span lang="en">target</span>', WQ = 'Apri in una nuova scheda <strong lang="en">_blank</strong>', GQ = 'Apri nel frame padre <strong lang="en">_parent</strong>', jQ = 'Apri nella stessa finestra <strong lang="en">_self</strong>', KQ = 'Apri nel frame superiore <strong lang="en">_top</strong>', zQ = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: MQ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: FQ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: qQ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: $Q,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: UQ,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: kQ,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: HQ,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: VQ,
  _A_TARGET_BLANK_: WQ,
  _A_TARGET_PARENT_: GQ,
  _A_TARGET_SELF_: jQ,
  _A_TARGET_TOP_: KQ
}, YQ = "Динамические параметры используются в маршрутах для передачи данных внутри пути. Они обозначаются двоеточием <code>:</code> перед именем параметра, например: <code>/user/:id</code>. При переходе этот параметр заменяется конкретным значением, например: <code>/user/123</code>.", XQ = 'Параметры <span lang="en">URL</span> позволяют передавать дополнительную информацию в запросе. Они добавляются после знака <code>?</code> в адресной строке и записываются в формате «ключ=значение». Например: <code>?limit=10&sort=asc</code>.', ZQ = "Адрес определяет, куда будет вести ссылка. Он может быть статическим (например, <code>/home</code>) или содержать динамические параметры (например, <code>/user/:id</code>). Выберите адрес, по которому будет происходить навигация.", JQ = "Определяет, где будет открываться ссылка. Доступные варианты: в том же окне (<code>_self</code>), в новом окне или вкладке (<code>_blank</code>), в родительском фрейме (<code>_parent</code>) или во внешнем фрейме (<code>_top</code>).", QQ = "Динамические параметры", eee = 'Параметры <span lang="en">URL</span>', tee = "Выберите адрес", nee = 'Атрибут <span lang="en">target</span>', ree = 'Открыть в новой вкладке <strong lang="en">_blank</strong>', aee = 'Открыть в родительском фрейме <strong lang="en">_parent</strong>', see = 'Открыть в этом же окне <strong lang="en">_self</strong>', iee = 'Открыть во внешнем фрейме <strong lang="en">_top</strong>', lee = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: YQ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: XQ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: ZQ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: JQ,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: QQ,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: eee,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: tee,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: nee,
  _A_TARGET_BLANK_: ree,
  _A_TARGET_PARENT_: aee,
  _A_TARGET_SELF_: see,
  _A_TARGET_TOP_: iee
}, us = {
  ar: vJ,
  de: FJ,
  en: XJ,
  es: uQ,
  fr: bQ,
  hr: xQ,
  it: zQ,
  ru: lee
}, oee = "اختر هذا الخيار فقط", uee = "[No choices]", _ee = "Search", dee = {
  _A_SELECT_EXCLUSIVE_: oee,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: uee,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: _ee,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, cee = "Nur diese Option auswählen", fee = "[Keine Auswahl]", hee = "Suche", Aee = {
  _A_SELECT_EXCLUSIVE_: cee,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: fee,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} ausgewählt",
  _A_SELECT_SEARCH_: hee,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} ausgewählt"
}, Eee = "Select only this option", pee = "[No choices]", Tee = "Search", See = {
  _A_SELECT_EXCLUSIVE_: Eee,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: pee,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: Tee,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, Lee = "Seleccionar solo esta opción", mee = "[No choices]", bee = "Search", Iee = {
  _A_SELECT_EXCLUSIVE_: Lee,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: mee,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: bee,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, vee = "Sélectionner uniquement cette option", yee = "[No choices]", Ree = "Search", gee = {
  _A_SELECT_EXCLUSIVE_: vee,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: yee,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: Ree,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, Oee = "Odaberi samo ovu opciju", Cee = "[No choices]", Dee = "Search", Nee = {
  _A_SELECT_EXCLUSIVE_: Oee,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: Cee,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: Dee,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, Bee = "Seleziona solo questa opzione", wee = "[No choices]", Pee = "Search", xee = {
  _A_SELECT_EXCLUSIVE_: Bee,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: wee,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: Pee,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, Mee = "Выбрать только этот вариант", Fee = "[Нет элементов для выбора]", qee = "Поиск", $ee = {
  _A_SELECT_EXCLUSIVE_: Mee,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: Fee,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} выбрано",
  _A_SELECT_SEARCH_: qee,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} выбрано"
}, _s = {
  ar: dee,
  de: Aee,
  en: See,
  es: Iee,
  fr: gee,
  hr: Nee,
  it: xee,
  ru: $ee
}, Uee = "إظهار أقل", kee = "أظهر المزيد", Hee = "إظهار أقل - يمكن تجاهل زر لأن جميع المحتويات قابلة للقراءة بواسطة قارئات الشاشة بالفعل", Vee = "إظهار المزيد - يمكن تجاهل زر لأن جميع المحتويات قابلة للقراءة بواسطة قارئات الشاشة بالفعل", Wee = {
  _A_SHOW_MORE_LESS_: Uee,
  _A_SHOW_MORE_MORE_: kee,
  _A_SHOW_MORE_LESS_SCREEN_READER_: Hee,
  _A_SHOW_MORE_MORE_SCREEN_READER_: Vee
}, Gee = "Mehr anzeigen", jee = "Weniger anzeigen", Kee = "Weniger anzeigen - Button kann ignoriert werden, da der gesamte Inhalt für ScreenReader bereits lesbar ist", zee = "Mehr anzeigen - Button kann ignoriert werden, da der gesamte Inhalt für ScreenReader bereits lesbar ist", Yee = {
  _A_SHOW_MORE_MORE_: Gee,
  _A_SHOW_MORE_LESS_: jee,
  _A_SHOW_MORE_LESS_SCREEN_READER_: Kee,
  _A_SHOW_MORE_MORE_SCREEN_READER_: zee
}, Xee = "Show less", Zee = "Show more", Jee = "Show less - Button can be ignored since all content is already readable by screen readers", Qee = "Show more - Button can be ignored since all content is already readable by screen readers", ete = {
  _A_SHOW_MORE_LESS_: Xee,
  _A_SHOW_MORE_MORE_: Zee,
  _A_SHOW_MORE_LESS_SCREEN_READER_: Jee,
  _A_SHOW_MORE_MORE_SCREEN_READER_: Qee
}, tte = "Mostrar menos", nte = "Mostrar más", rte = "Mostrar menos - El botón se puede ignorar ya que todo el contenido ya es legible para los lectores de pantalla", ate = "Mostrar más - El botón se puede ignorar ya que todo el contenido ya es legible para los lectores de pantalla", ste = {
  _A_SHOW_MORE_LESS_: tte,
  _A_SHOW_MORE_MORE_: nte,
  _A_SHOW_MORE_LESS_SCREEN_READER_: rte,
  _A_SHOW_MORE_MORE_SCREEN_READER_: ate
}, ite = "Afficher moins", lte = "Afficher plus", ote = "Afficher moins - Le bouton peut être ignoré car tout le contenu est déjà lisible par les lecteurs d'écran", ute = "Afficher plus - Le bouton peut être ignoré car tout le contenu est déjà lisible par les lecteurs d'écran", _te = {
  _A_SHOW_MORE_LESS_: ite,
  _A_SHOW_MORE_MORE_: lte,
  _A_SHOW_MORE_LESS_SCREEN_READER_: ote,
  _A_SHOW_MORE_MORE_SCREEN_READER_: ute
}, dte = "Prikaži manje", cte = "Prikaži više", fte = "Prikaži manje - Ovo dugme se može zanemariti jer je cjelokupan sadržaj već vidljiv čitaču zaslona.", hte = "Prikaži više - Ovo dugme se može zanemariti jer je cjelokupan sadržaj već vidljiv čitaču zaslona.", Ate = {
  _A_SHOW_MORE_LESS_: dte,
  _A_SHOW_MORE_MORE_: cte,
  _A_SHOW_MORE_LESS_SCREEN_READER_: fte,
  _A_SHOW_MORE_MORE_SCREEN_READER_: hte
}, Ete = "Mostra meno", pte = "Mostra di più", Tte = "Mostra meno - Il pulsante può essere ignorato poiché tutto il contenuto è già leggibile dagli screen reader", Ste = "Mostra di più - Il pulsante può essere ignorato poiché tutto il contenuto è già leggibile dagli screen reader", Lte = {
  _A_SHOW_MORE_LESS_: Ete,
  _A_SHOW_MORE_MORE_: pte,
  _A_SHOW_MORE_LESS_SCREEN_READER_: Tte,
  _A_SHOW_MORE_MORE_SCREEN_READER_: Ste
}, mte = "Показать меньше", bte = "Показать больше", Ite = "Показать меньше - Кнопку можно проигнорировать, так как весь контент уже доступен для чтения с помощью скринридера", vte = "Показать больше - Кнопку можно проигнорировать, так как весь контент уже доступен для чтения с помощью скринридера", yte = {
  _A_SHOW_MORE_LESS_: mte,
  _A_SHOW_MORE_MORE_: bte,
  _A_SHOW_MORE_LESS_SCREEN_READER_: Ite,
  _A_SHOW_MORE_MORE_SCREEN_READER_: vte
}, ds = {
  ar: Wee,
  de: Yee,
  en: ete,
  es: ste,
  fr: _te,
  hr: Ate,
  it: Lte,
  ru: yte
}, Rte = "تحميل", gte = {
  _A_SPINNER_LOADING_: Rte
}, Ote = "Wird geladen", Cte = {
  _A_SPINNER_LOADING_: Ote
}, Dte = "Loading", Nte = {
  _A_SPINNER_LOADING_: Dte
}, Bte = "Cargando", wte = {
  _A_SPINNER_LOADING_: Bte
}, Pte = "Chargement", xte = {
  _A_SPINNER_LOADING_: Pte
}, Mte = "Učitavam", Fte = {
  _A_SPINNER_LOADING_: Mte
}, qte = "Caricamento", $te = {
  _A_SPINNER_LOADING_: qte
}, Ute = "Загрузка", kte = {
  _A_SPINNER_LOADING_: Ute
}, cs = {
  ar: gte,
  de: Cte,
  en: Nte,
  es: wte,
  fr: xte,
  hr: Fte,
  it: $te,
  ru: kte
}, Hte = "غير محدد", Vte = "لا", Wte = "نعم", Gte = {
  _A_SWITCH_DEFAULT_LABEL_: Hte,
  _A_SWITCH_FALSE_LABEL_: Vte,
  _A_SWITCH_TRUE_LABEL_: Wte
}, jte = "Nicht ausgewählt", Kte = "Nein", zte = "Ja", Yte = {
  _A_SWITCH_DEFAULT_LABEL_: jte,
  _A_SWITCH_FALSE_LABEL_: Kte,
  _A_SWITCH_TRUE_LABEL_: zte
}, Xte = "Not selected", Zte = "No", Jte = "Yes", Qte = {
  _A_SWITCH_DEFAULT_LABEL_: Xte,
  _A_SWITCH_FALSE_LABEL_: Zte,
  _A_SWITCH_TRUE_LABEL_: Jte
}, ene = "No seleccionado", tne = "No", nne = "Sí", rne = {
  _A_SWITCH_DEFAULT_LABEL_: ene,
  _A_SWITCH_FALSE_LABEL_: tne,
  _A_SWITCH_TRUE_LABEL_: nne
}, ane = "Non sélectionné", sne = "Non", ine = "Oui", lne = {
  _A_SWITCH_DEFAULT_LABEL_: ane,
  _A_SWITCH_FALSE_LABEL_: sne,
  _A_SWITCH_TRUE_LABEL_: ine
}, one = "Nije odabrano", une = "Ne", _ne = "Da", dne = {
  _A_SWITCH_DEFAULT_LABEL_: one,
  _A_SWITCH_FALSE_LABEL_: une,
  _A_SWITCH_TRUE_LABEL_: _ne
}, cne = "Non selezionato", fne = "No", hne = "Sì", Ane = {
  _A_SWITCH_DEFAULT_LABEL_: cne,
  _A_SWITCH_FALSE_LABEL_: fne,
  _A_SWITCH_TRUE_LABEL_: hne
}, Ene = "Не выбрано", pne = "Нет", Tne = "Да", Sne = {
  _A_SWITCH_DEFAULT_LABEL_: Ene,
  _A_SWITCH_FALSE_LABEL_: pne,
  _A_SWITCH_TRUE_LABEL_: Tne
}, fs = {
  ar: Gte,
  de: Yte,
  en: Qte,
  es: rne,
  fr: lne,
  hr: dne,
  it: Ane,
  ru: Sne
}, Lne = "إجراءات", mne = "إلغاء تحديد جميع الصفوف المحددة", bne = "إلغاء تحديد هذا الصف", Ine = "1 حقل", vne = "تخصيص الجدول", yne = "لا توجد إدخالات.", Rne = "تنفيذ إجراء متعدد؟", gne = "متابعة", One = "إغلاق", Cne = "+ 1 حقل", Dne = "إجراءات متعددة", Nne = "إلغاء الإجراء المتعدد", Bne = "نقل العمود إلى اليمين", wne = "نقل العمود إلى اليسار", Pne = "إظهار العمود", xne = "إخفاء العمود", Mne = "العمود مقفل", Fne = "معاينة الصف", qne = "إغلاق المعاينة", $ne = "الرجاء استخدام الفتحة: 'معاينة'", Une = "معاينة الصف", kne = "إغلاق المعاينة", Hne = "إلى الصف التالي", Vne = "إلى الصف السابق", Wne = "بحث سريع", Gne = "إغلاق معاينة الصف", jne = "فتح معاينة الصف", Kne = "تحديد جميع الصفوف المرئية ذات الصلة", zne = "تحديد هذا الصف", Yne = "إلغاء الترتيب", Xne = "إغلاق", Zne = "عمود", Jne = "اتجاه", Qne = "تصاعدي", ere = "تنازلي", tre = "ترتيب", nre = "ترتيب حسب", rre = "ترتيب", are = "ثم حسب", sre = "انقر هنا للتبديل بين الترتيب التصاعدي، الترتيب التنازلي، وعدم الترتيب.", ire = "اضغط مع الاستمرار على مفتاح Shift أثناء النقر للجمع بين ترتيب أعمدة متعددة.", lre = {
  _A_TABLE_ACTIONS_: Lne,
  "_A_TABLE_ALL_ROWS_{{count}}_": "إجمالي عدد الإدخالات: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "إلغاء تحديد جميع الصفوف ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: mne,
  _A_TABLE_DESELECT_THIS_ROW_: bne,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "إجراءات للصف: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Ine,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} حقول",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "عرض المزيد من الحقول ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: vne,
  _A_TABLE_EMPTY_TEXT_: yne,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: Rne,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>هل تريد تنفيذ الإجراء <strong>{{ action }}</strong> على <strong>{{ selectedRows }}</strong> من العناصر؟</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: gne,
  _A_TABLE_MOBILE_TR_CLOSE_: One,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: Cne,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} حقول",
  _A_TABLE_MULTIPLE_ACTIONS_: Dne,
  _A_TABLE_MULTIPLE_CANCEL_: Nne,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} من {{ countAllRowsFiltered }} محددة",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: Bne,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: wne,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: Pne,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: xne,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: Mne,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: Fne,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: qne,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: $ne,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Une,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: kne,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} من {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Hne,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Vne,
  _A_TABLE_QUICK_SEARCH_: Wne,
  _A_TABLE_ROW_PREVIEW_CLOSE_: Gne,
  _A_TABLE_ROW_PREVIEW_OPEN_: jne,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "تحديد جميع الصفوف ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Kne,
  _A_TABLE_SELECT_THIS_ROW_: zne,
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: Yne,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: Xne,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Zne,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Jne,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Qne,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: ere,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "تغيير الترتيب (الأعمدة المحددة: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_HEADER_: tre,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: nre,
  _A_TABLE_SORT_ADDITIONAL_START_: rre,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: are,
  _A_TABLE_SORT_TITLE_: sre,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: ire
}, ore = "Aktionen", ure = "Alle ausgewählten Zeilen abwählen", _re = "Die Zeile abwählen", dre = "1 Feld", cre = "Tabelle anpassen", fre = "Keine Einträge vorhanden.", hre = "Mehrfachaktion durchführen?", Are = "Fortfahren", Ere = "Schließen", pre = "+ 1 Feld", Tre = "Mehrfachaktionen", Sre = "Mehrfachaktion abbrechen", Lre = "Spalte nach rechts verschieben", mre = "Spalte nach links verschieben", bre = "Spalte einblenden", Ire = "Spalte ausblenden", vre = "Spalte ist gesperrt", yre = "Vorschau der Zeile", Rre = "Vorschau schließen", gre = "Benutzen sie bitte slot: 'preview'", Ore = "Vorschau der Zeile", Cre = "Vorschau schließen", Dre = "Zur nächsten Zeile", Nre = "Zur vorherigen Zeile", Bre = "Schnellsuche", wre = "Vorschau der Zeile schließen", Pre = "Vorschau der Zeile öffnen", xre = "Alle sichtbaren, relevanten Zeilen auswählen", Mre = "Die Zeile auswählen", Fre = "Sortierung aufheben", qre = "Schließen", $re = "Spalte", Ure = "Reihenfolge", kre = "Aufsteigend", Hre = "Absteigend", Vre = "Sortierung", Wre = "Sortieren nach", Gre = "Sortieren", jre = "Dann nach", Kre = "Klicken Sie hier, um zwischen aufsteigender, absteigender und keiner Sortierung zu wechseln.", zre = "Halten Sie die Umschalttaste beim Klicken gedrückt, um die Sortierung mehrerer Spalten zu kombinieren.", Yre = {
  _A_TABLE_ACTIONS_: ore,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Gesamtanzahl der Einträge: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Alle Zeilen abwählen ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: ure,
  _A_TABLE_DESELECT_THIS_ROW_: _re,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Aktionen zur Zeile: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: dre,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} Felder",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Weitere Felder anzeigen ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: cre,
  _A_TABLE_EMPTY_TEXT_: fre,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: hre,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Möchten Sie die Aktion <strong>{{ action }}</strong> auf <strong>{{ selectedRows }}</strong> Objekten durchführen?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: Are,
  _A_TABLE_MOBILE_TR_CLOSE_: Ere,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: pre,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} Felder",
  _A_TABLE_MULTIPLE_ACTIONS_: Tre,
  _A_TABLE_MULTIPLE_CANCEL_: Sre,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} von {{ countAllRowsFiltered }} ausgewählt",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: Lre,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: mre,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: bre,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: Ire,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: vre,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: yre,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: Rre,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: gre,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Ore,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: Cre,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} von {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Dre,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Nre,
  _A_TABLE_QUICK_SEARCH_: Bre,
  _A_TABLE_ROW_PREVIEW_CLOSE_: wre,
  _A_TABLE_ROW_PREVIEW_OPEN_: Pre,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Alle Zeilen auswählen ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: xre,
  _A_TABLE_SELECT_THIS_ROW_: Mre,
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: Fre,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: qre,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: $re,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Ure,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: kre,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: Hre,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Sortierung ändern (ausgewählte Spalten: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_HEADER_: Vre,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Wre,
  _A_TABLE_SORT_ADDITIONAL_START_: Gre,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: jre,
  _A_TABLE_SORT_TITLE_: Kre,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: zre
}, Xre = "Actions", Zre = "Deselect all selected rows", Jre = "Deselect this row", Qre = "1 field", eae = "Customize table", tae = "No entries available.", nae = "Execute multiple actions?", rae = "Proceed", aae = "Close", sae = "+ 1 field", iae = "Multiple actions", lae = "Cancel multiple actions", oae = "Move column to the right", uae = "Move column to the left", _ae = "Show column", dae = "Hide column", cae = "Column is locked", fae = "Row preview", hae = "Close preview", Aae = "Row preview", Eae = "Close preview", pae = "Please use slot: 'preview'", Tae = "To the next row", Sae = "To the previous row", Lae = "Quick search", mae = "Close row preview", bae = "Open row preview", Iae = "Select all visible, relevant rows", vae = "Select this row", yae = "Click here to toggle between ascending, descending, and no sorting.", Rae = "Hold Shift while clicking to combine sorting of multiple columns.", gae = "Sorting", Oae = "Sort by", Cae = "Then by", Dae = "Column", Nae = "Direction", Bae = "Ascending", wae = "Descending", Pae = "Close", xae = "Sort", Mae = "Remove sorting", Fae = {
  _A_TABLE_ACTIONS_: Xre,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Total number of entries: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deselect all rows ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Zre,
  _A_TABLE_DESELECT_THIS_ROW_: Jre,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Actions for row: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Qre,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} fields",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Show more fields ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: eae,
  _A_TABLE_EMPTY_TEXT_: tae,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: nae,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Do you want to execute the action <strong>{{ action }}</strong> on <strong>{{ selectedRows }}</strong> items?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: rae,
  _A_TABLE_MOBILE_TR_CLOSE_: aae,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: sae,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} fields",
  _A_TABLE_MULTIPLE_ACTIONS_: iae,
  _A_TABLE_MULTIPLE_CANCEL_: lae,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} of {{ countAllRowsFiltered }} selected",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: oae,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: uae,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: _ae,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: dae,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: cae,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: fae,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: hae,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Aae,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: Eae,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: pae,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} of {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Tae,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Sae,
  _A_TABLE_QUICK_SEARCH_: Lae,
  _A_TABLE_ROW_PREVIEW_CLOSE_: mae,
  _A_TABLE_ROW_PREVIEW_OPEN_: bae,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Select all rows ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Iae,
  _A_TABLE_SELECT_THIS_ROW_: vae,
  _A_TABLE_SORT_TITLE_: yae,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: Rae,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: gae,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Oae,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Cae,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Dae,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Nae,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Bae,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: wae,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: Pae,
  _A_TABLE_SORT_ADDITIONAL_START_: xae,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Change sorting (selected columns: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: Mae
}, qae = "Acciones", $ae = "Deseleccionar todas las filas seleccionadas", Uae = "Deseleccionar esta fila", kae = "1 campo", Hae = "Personalizar tabla", Vae = "No hay entradas disponibles.", Wae = "¿Ejecutar múltiples acciones?", Gae = "Continuar", jae = "Cerrar", Kae = "+ 1 campo", zae = "Acciones múltiples", Yae = "Cancelar acciones múltiples", Xae = "Mover columna a la derecha", Zae = "Mover columna a la izquierda", Jae = "Mostrar columna", Qae = "Ocultar columna", ese = "La columna está bloqueada", tse = "Vista previa de la fila", nse = "Cerrar vista previa", rse = "Vista previa de la fila", ase = "Cerrar vista previa", sse = "Por favor, use el slot: 'preview'", ise = "A la siguiente fila", lse = "A la fila anterior", ose = "Búsqueda rápida", use = "Cerrar vista previa de la fila", _se = "Abrir vista previa de la fila", dse = "Seleccionar todas las filas visibles y relevantes", cse = "Seleccionar esta fila", fse = "Haga clic aquí para alternar entre orden ascendente, descendente o sin ordenar.", hse = "Mantenga presionada la tecla Shift al hacer clic para combinar la ordenación de varias columnas.", Ase = "Ordenar", Ese = "Ordenar por", pse = "Luego por", Tse = "Columna", Sse = "Dirección", Lse = "Ascendente", mse = "Descendente", bse = "Cerrar", Ise = "Ordenar", vse = "Eliminar orden", yse = {
  _A_TABLE_ACTIONS_: qae,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Número total de entradas: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deseleccionar todas las filas ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: $ae,
  _A_TABLE_DESELECT_THIS_ROW_: Uae,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Acciones para la fila: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: kae,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} campos",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Mostrar más campos ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: Hae,
  _A_TABLE_EMPTY_TEXT_: Vae,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: Wae,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>¿Desea ejecutar la acción <strong>{{ action }}</strong> en <strong>{{ selectedRows }}</strong> objetos?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: Gae,
  _A_TABLE_MOBILE_TR_CLOSE_: jae,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: Kae,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} campos",
  _A_TABLE_MULTIPLE_ACTIONS_: zae,
  _A_TABLE_MULTIPLE_CANCEL_: Yae,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} de {{ countAllRowsFiltered }} seleccionadas",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: Xae,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: Zae,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: Jae,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: Qae,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: ese,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: tse,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: nse,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: rse,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: ase,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: sse,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} de {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: ise,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: lse,
  _A_TABLE_QUICK_SEARCH_: ose,
  _A_TABLE_ROW_PREVIEW_CLOSE_: use,
  _A_TABLE_ROW_PREVIEW_OPEN_: _se,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Seleccionar todas las filas ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: dse,
  _A_TABLE_SELECT_THIS_ROW_: cse,
  _A_TABLE_SORT_TITLE_: fse,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: hse,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: Ase,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Ese,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: pse,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Tse,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Sse,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Lse,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: mse,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: bse,
  _A_TABLE_SORT_ADDITIONAL_START_: Ise,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Cambiar orden (columnas seleccionadas: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: vse
}, Rse = "Actions", gse = "Désélectionner toutes les lignes sélectionnées", Ose = "Désélectionner cette ligne", Cse = "1 champ", Dse = "Personnaliser le tableau", Nse = "Aucune entrée disponible.", Bse = "Exécuter plusieurs actions ?", wse = "Continuer", Pse = "Fermer", xse = "+ 1 champ", Mse = "Actions multiples", Fse = "Annuler l'action multiple", qse = "Déplacer la colonne vers la droite", $se = "Déplacer la colonne vers la gauche", Use = "Afficher la colonne", kse = "Masquer la colonne", Hse = "La colonne est verrouillée", Vse = "Aperçu de la ligne", Wse = "Fermer l'aperçu", Gse = "Aperçu de la ligne", jse = "Fermer l'aperçu", Kse = "Veuillez utiliser le slot : 'preview'", zse = "À la ligne suivante", Yse = "À la ligne précédente", Xse = "Recherche rapide", Zse = "Fermer l'aperçu de la ligne", Jse = "Ouvrir l'aperçu de la ligne", Qse = "Sélectionner toutes les lignes visibles et pertinentes", eie = "Sélectionner cette ligne", tie = "Cliquez ici pour alterner entre tri ascendant, descendant et sans tri.", nie = "Maintenez la touche Maj enfoncée en cliquant pour combiner le tri de plusieurs colonnes.", rie = "Tri", aie = "Trier par", sie = "Puis par", iie = "Colonne", lie = "Direction", oie = "Ascendant", uie = "Descendant", _ie = "Fermer", die = "Trier", cie = "Supprimer le tri", fie = {
  _A_TABLE_ACTIONS_: Rse,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Nombre total d'entrées : {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Désélectionner toutes les lignes ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: gse,
  _A_TABLE_DESELECT_THIS_ROW_: Ose,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Actions pour la ligne : {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Cse,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} champs",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Afficher plus de champs ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: Dse,
  _A_TABLE_EMPTY_TEXT_: Nse,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: Bse,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Voulez-vous exécuter l'action <strong>{{ action }}</strong> sur <strong>{{ selectedRows }}</strong> objets ?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: wse,
  _A_TABLE_MOBILE_TR_CLOSE_: Pse,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: xse,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} champs",
  _A_TABLE_MULTIPLE_ACTIONS_: Mse,
  _A_TABLE_MULTIPLE_CANCEL_: Fse,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} sur {{ countAllRowsFiltered }} sélectionnés",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: qse,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: $se,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: Use,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: kse,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: Hse,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: Vse,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: Wse,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Gse,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: jse,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: Kse,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} sur {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: zse,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Yse,
  _A_TABLE_QUICK_SEARCH_: Xse,
  _A_TABLE_ROW_PREVIEW_CLOSE_: Zse,
  _A_TABLE_ROW_PREVIEW_OPEN_: Jse,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Sélectionner toutes les lignes ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Qse,
  _A_TABLE_SELECT_THIS_ROW_: eie,
  _A_TABLE_SORT_TITLE_: tie,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: nie,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: rie,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: aie,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: sie,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: iie,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: lie,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: oie,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: uie,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: _ie,
  _A_TABLE_SORT_ADDITIONAL_START_: die,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Modifier le tri (colonnes sélectionnées : {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: cie
}, hie = "Akcije", Aie = "Poništi odabir svih odabranih redaka", Eie = "Poništi odabir ovog retka", pie = "1 polje", Tie = "Prilagodi tablicu", Sie = "Nema dostupnih unosa.", Lie = "Izvršiti više akcija?", mie = "Nastavi", bie = "Zatvori", Iie = "+ 1 polje", vie = "Višestruke akcije", yie = "Poništi višestruku akciju", Rie = "Premjesti stupac desno", gie = "Premjesti stupac lijevo", Oie = "Prikaži stupac", Cie = "Sakrij stupac", Die = "Stupac je zaključan", Nie = "Pregled retka", Bie = "Zatvori pregled", wie = "Pregled retka", Pie = "Zatvori pregled", xie = "Molimo koristite slot: 'pregled'", Mie = "Na sljedeći redak", Fie = "Na prethodni redak", qie = "Brza pretraga", $ie = "Zatvori pregled retka", Uie = "Otvori pregled retka", kie = "Odaberi sve vidljive, relevantne retke", Hie = "Odaberi ovaj redak", Vie = "Kliknite ovdje da biste se prebacivali između uzlaznog, silaznog i bez sortiranja.", Wie = "Držite tipku Shift dok klikate da biste kombinirali sortiranje više stupaca.", Gie = "Sortiranje", jie = "Sortiraj po", Kie = "Zatim po", zie = "Stupac", Yie = "Smjer", Xie = "Uzlazno", Zie = "Silazno", Jie = "Zatvori", Qie = "Sortiraj", ele = "Ukloni sortiranje", tle = {
  _A_TABLE_ACTIONS_: hie,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Ukupan broj unosa: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Poništi odabir svih redaka ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Aie,
  _A_TABLE_DESELECT_THIS_ROW_: Eie,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Akcije za redak: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: pie,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} polja",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Prikaži više polja ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: Tie,
  _A_TABLE_EMPTY_TEXT_: Sie,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: Lie,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Želite li izvršiti akciju <strong>{{ action }}</strong> na <strong>{{ selectedRows }}</strong> objekata?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: mie,
  _A_TABLE_MOBILE_TR_CLOSE_: bie,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: Iie,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} polja",
  _A_TABLE_MULTIPLE_ACTIONS_: vie,
  _A_TABLE_MULTIPLE_CANCEL_: yie,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} od {{ countAllRowsFiltered }} odabrano",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: Rie,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: gie,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: Oie,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: Cie,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: Die,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: Nie,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: Bie,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: wie,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: Pie,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: xie,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} od {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Mie,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Fie,
  _A_TABLE_QUICK_SEARCH_: qie,
  _A_TABLE_ROW_PREVIEW_CLOSE_: $ie,
  _A_TABLE_ROW_PREVIEW_OPEN_: Uie,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Odaberi sve retke ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: kie,
  _A_TABLE_SELECT_THIS_ROW_: Hie,
  _A_TABLE_SORT_TITLE_: Vie,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: Wie,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: Gie,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: jie,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Kie,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: zie,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Yie,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Xie,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: Zie,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: Jie,
  _A_TABLE_SORT_ADDITIONAL_START_: Qie,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Promijeni sortiranje (odabrani stupci: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: ele
}, nle = "Azioni", rle = "Deseleziona tutte le righe selezionate", ale = "Deseleziona questa riga", sle = "1 campo", ile = "Personalizza tabella", lle = "Nessuna voce disponibile.", ole = "Eseguire più azioni?", ule = "Continua", _le = "Chiudi", dle = "+ 1 campo", cle = "Azioni multiple", fle = "Annulla azione multipla", hle = "Sposta colonna a destra", Ale = "Sposta colonna a sinistra", Ele = "Mostra colonna", ple = "Nascondi colonna", Tle = "Colonna bloccata", Sle = "Anteprima riga", Lle = "Chiudi anteprima", mle = "Anteprima riga", ble = "Chiudi anteprima", Ile = "Si prega di utilizzare lo slot: 'preview'", vle = "Alla riga successiva", yle = "Alla riga precedente", Rle = "Ricerca rapida", gle = "Chiudi anteprima riga", Ole = "Apri anteprima riga", Cle = "Seleziona tutte le righe visibili e pertinenti", Dle = "Seleziona questa riga", Nle = "Clicca qui per alternare tra ordinamento crescente, decrescente e nessun ordinamento.", Ble = "Tieni premuto il tasto Maiusc mentre fai clic per combinare l'ordinamento di più colonne.", wle = "Ordinamento", Ple = "Ordina per", xle = "Poi per", Mle = "Colonna", Fle = "Direzione", qle = "Crescente", $le = "Decrescente", Ule = "Chiudi", kle = "Ordina", Hle = "Rimuovi ordinamento", Vle = {
  _A_TABLE_ACTIONS_: nle,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Numero totale di voci: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deseleziona tutte le righe ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: rle,
  _A_TABLE_DESELECT_THIS_ROW_: ale,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Azioni per la riga: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: sle,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} campi",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Mostra più campi ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: ile,
  _A_TABLE_EMPTY_TEXT_: lle,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: ole,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Vuoi eseguire l'azione <strong>{{ action }}</strong> su <strong>{{ selectedRows }}</strong> oggetti?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: ule,
  _A_TABLE_MOBILE_TR_CLOSE_: _le,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: dle,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} campi",
  _A_TABLE_MULTIPLE_ACTIONS_: cle,
  _A_TABLE_MULTIPLE_CANCEL_: fle,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} di {{ countAllRowsFiltered }} selezionate",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: hle,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: Ale,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: Ele,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: ple,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: Tle,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: Sle,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: Lle,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: mle,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: ble,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: Ile,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} di {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: vle,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: yle,
  _A_TABLE_QUICK_SEARCH_: Rle,
  _A_TABLE_ROW_PREVIEW_CLOSE_: gle,
  _A_TABLE_ROW_PREVIEW_OPEN_: Ole,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Seleziona tutte le righe ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Cle,
  _A_TABLE_SELECT_THIS_ROW_: Dle,
  _A_TABLE_SORT_TITLE_: Nle,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: Ble,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: wle,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Ple,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: xle,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Mle,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Fle,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: qle,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: $le,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: Ule,
  _A_TABLE_SORT_ADDITIONAL_START_: kle,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Modifica ordinamento (colonne selezionate: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: Hle
}, Wle = "Действия", Gle = "Отменить выбор всех выбранных строк", jle = "Отменить выбор строки", Kle = "1 поле", zle = "Настроить таблицу", Yle = "Нет доступных записей.", Xle = "Выполнить несколько действий?", Zle = "Продолжить", Jle = "Закрыть", Qle = "+ 1 поле", eoe = "Множественные действия", toe = "Отменить", noe = "Переместить столбец вправо", roe = "Переместить столбец влево", aoe = "Показать столбец", soe = "Скрыть столбец", ioe = "Столбец заблокирован", loe = "Предпросмотр строки", ooe = "Закрыть предварительный просмотр", uoe = "Предпросмотр строки", _oe = "Закрыть предварительный просмотр", doe = "Пожалуйста, используйте слот: 'preview'", coe = "К следующей строке", foe = "К предыдущей строке", hoe = "Быстрый поиск", Aoe = "Закрыть предпросмотр строки", Eoe = "Открыть предпросмотр строки", poe = "Выбрать все видимые, возможные строки", Toe = "Выбрать эту строку", Soe = "Нажмите здесь, чтобы переключиться между сортировкой по возрастанию, по убыванию и без сортировки.", Loe = "Удерживайте Shift при нажатии, чтобы объединить сортировку нескольких столбцов.", moe = "Сортировка", boe = "Сортировать по", Ioe = "Затем по", voe = "Столбец", yoe = "Направление", Roe = "По возрастанию", goe = "По убыванию", Ooe = "Закрыть", Coe = "Сортировать", Doe = "Отменить сортировку", Noe = {
  _A_TABLE_ACTIONS_: Wle,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Общее количество записей: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Отменить выбор всех строк ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Gle,
  _A_TABLE_DESELECT_THIS_ROW_: jle,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Действия для строки: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Kle,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} полей",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Показать дополнительные поля ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: zle,
  _A_TABLE_EMPTY_TEXT_: Yle,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: Xle,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Вы хотите выполнить действие <strong>{{ action }}</strong> для <strong>{{ selectedRows }}</strong> объектов?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: Zle,
  _A_TABLE_MOBILE_TR_CLOSE_: Jle,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: Qle,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} полей",
  _A_TABLE_MULTIPLE_ACTIONS_: eoe,
  _A_TABLE_MULTIPLE_CANCEL_: toe,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} из {{ countAllRowsFiltered }} выбрано",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: noe,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: roe,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: aoe,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: soe,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: ioe,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: loe,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: ooe,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: uoe,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: _oe,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: doe,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} из {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: coe,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: foe,
  _A_TABLE_QUICK_SEARCH_: hoe,
  _A_TABLE_ROW_PREVIEW_CLOSE_: Aoe,
  _A_TABLE_ROW_PREVIEW_OPEN_: Eoe,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Выбрать все строки ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: poe,
  _A_TABLE_SELECT_THIS_ROW_: Toe,
  _A_TABLE_SORT_TITLE_: Soe,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: Loe,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: moe,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: boe,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Ioe,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: voe,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: yoe,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Roe,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: goe,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: Ooe,
  _A_TABLE_SORT_ADDITIONAL_START_: Coe,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Изменить сортировку (выбрано столбцов: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: Doe
}, hs = {
  ar: lre,
  de: Yre,
  en: Fae,
  es: yse,
  fr: fie,
  hr: tle,
  it: Vle,
  ru: Noe
}, Boe = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", woe = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Poe = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Boe,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: woe
}, xoe = "Nach oben scrollen", Moe = "Nach unten scrollen", Foe = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: xoe,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Moe
}, qoe = "Scroll top", $oe = "Scroll down", Uoe = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: qoe,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: $oe
}, koe = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Hoe = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Voe = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: koe,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Hoe
}, Woe = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Goe = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", joe = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Woe,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Goe
}, Koe = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", zoe = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Yoe = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Koe,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: zoe
}, Xoe = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Zoe = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Joe = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Xoe,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Zoe
}, Qoe = "Прокрутить наверх", eue = "Прокрутить вниз", tue = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Qoe,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: eue
}, As = {
  ar: Poe,
  de: Foe,
  en: Uoe,
  es: Voe,
  fr: joe,
  hr: Yoe,
  it: Joe,
  ru: tue
}, nue = "معالج", rue = "التالي", aue = "الخطوة التالية", sue = "سابق", iue = "الخطوة السابقة", lue = "الخطوة الحالية", oue = "خطأ في الخطوة", uue = "الخطوة القادمة", _ue = "الخطوة المزار", due = "تحذير خطوة", cue = "خطوات المعالج", fue = {
  _A_WIZARD_ARIA_LABEL_: nue,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "الخطوة {{ stepNumber }}:",
  _A_WIZARD_NEXT_: rue,
  _A_WIZARD_NEXT_TITLE_: aue,
  _A_WIZARD_PREVIOUS_: sue,
  _A_WIZARD_PREVIOUS_TITLE_: iue,
  _A_WIZARD_STEP_ACTIVE_: lue,
  _A_WIZARD_STEP_ERROR_: oue,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} من {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: uue,
  _A_WIZARD_STEP_VISITED_: _ue,
  _A_WIZARD_STEP_WARNING_: due,
  _A_WIZARD_STEPS_ARIA_LABEL_: cue,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "{{ stepsCount }} من {{ stepActive }} خطوة"
}, hue = "Wizard", Aue = "Nächste", Eue = "Nächster Schritt", pue = "Vorherige", Tue = "Vorheriger Schritt", Sue = "Schritt aktuell", Lue = "Schrittfehler", mue = "Schritt bevorstehend", bue = "Schritt besucht", Iue = "Schrittwarnung", vue = "Wizard Schritte", yue = {
  _A_WIZARD_ARIA_LABEL_: hue,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Schritt {{ stepNumber }}:",
  _A_WIZARD_NEXT_: Aue,
  _A_WIZARD_NEXT_TITLE_: Eue,
  _A_WIZARD_PREVIOUS_: pue,
  _A_WIZARD_PREVIOUS_TITLE_: Tue,
  _A_WIZARD_STEP_ACTIVE_: Sue,
  _A_WIZARD_STEP_ERROR_: Lue,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} von {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: mue,
  _A_WIZARD_STEP_VISITED_: bue,
  _A_WIZARD_STEP_WARNING_: Iue,
  _A_WIZARD_STEPS_ARIA_LABEL_: vue,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Schritt {{ stepActive }} von {{ stepsCount }}"
}, Rue = "Wizard", gue = "Next", Oue = "Next step", Cue = "Previous", Due = "Previous step", Nue = "Step current", Bue = "Step error", wue = "Step upcoming", Pue = "Step visited", xue = "Step warning", Mue = "Wizard steps", Fue = {
  _A_WIZARD_ARIA_LABEL_: Rue,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Step {{ stepNumber }}:",
  _A_WIZARD_NEXT_: gue,
  _A_WIZARD_NEXT_TITLE_: Oue,
  _A_WIZARD_PREVIOUS_: Cue,
  _A_WIZARD_PREVIOUS_TITLE_: Due,
  _A_WIZARD_STEP_ACTIVE_: Nue,
  _A_WIZARD_STEP_ERROR_: Bue,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} of {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: wue,
  _A_WIZARD_STEP_VISITED_: Pue,
  _A_WIZARD_STEP_WARNING_: xue,
  _A_WIZARD_STEPS_ARIA_LABEL_: Mue,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Step {{ stepActive }} of {{ stepsCount }}"
}, que = "Asistente", $ue = "Próximo", Uue = "Siguiente paso", kue = "Previo", Hue = "Paso anterior", Vue = "Paso actual", Wue = "Error de paso", Gue = "Paso próximo", jue = "Paso visitado", Kue = "Advertencia de paso", zue = "Pasos del asistente", Yue = {
  _A_WIZARD_ARIA_LABEL_: que,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Paso {{ stepNumber }}:",
  _A_WIZARD_NEXT_: $ue,
  _A_WIZARD_NEXT_TITLE_: Uue,
  _A_WIZARD_PREVIOUS_: kue,
  _A_WIZARD_PREVIOUS_TITLE_: Hue,
  _A_WIZARD_STEP_ACTIVE_: Vue,
  _A_WIZARD_STEP_ERROR_: Wue,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} de {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: Gue,
  _A_WIZARD_STEP_VISITED_: jue,
  _A_WIZARD_STEP_WARNING_: Kue,
  _A_WIZARD_STEPS_ARIA_LABEL_: zue,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "escenario {{ stepActive }} de {{ stepsCount }}"
}, Xue = "Assistant", Zue = "Suivant", Jue = "Étape suivante", Que = "Précédent", e_e = "Étape précédente", t_e = "Étape actuelle", n_e = "Erreur de l'étape", r_e = "Étape à venir", a_e = "Étape visitée", s_e = "Avertissement de l'étape", i_e = "Étapes de l'assistant", l_e = {
  _A_WIZARD_ARIA_LABEL_: Xue,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Étape {{ stepNumber }} :",
  _A_WIZARD_NEXT_: Zue,
  _A_WIZARD_NEXT_TITLE_: Jue,
  _A_WIZARD_PREVIOUS_: Que,
  _A_WIZARD_PREVIOUS_TITLE_: e_e,
  _A_WIZARD_STEP_ACTIVE_: t_e,
  _A_WIZARD_STEP_ERROR_: n_e,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} sur {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: r_e,
  _A_WIZARD_STEP_VISITED_: a_e,
  _A_WIZARD_STEP_WARNING_: s_e,
  _A_WIZARD_STEPS_ARIA_LABEL_: i_e,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Etape {{ stepActive }} de {{ stepsCount }}"
}, o_e = "Čarobnjak", u_e = "Dalje", __e = "Sljedeći korak", d_e = "Natrag", c_e = "Prethodni korak", f_e = "Trenutni korak", h_e = "Pogreška koraka", A_e = "Preostali koraci", E_e = "Posjećeni korak", p_e = "Upozorenje koraka", T_e = "Koraci čarobnjaka", S_e = {
  _A_WIZARD_ARIA_LABEL_: o_e,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Korak {{ stepNumber }}:",
  _A_WIZARD_NEXT_: u_e,
  _A_WIZARD_NEXT_TITLE_: __e,
  _A_WIZARD_PREVIOUS_: d_e,
  _A_WIZARD_PREVIOUS_TITLE_: c_e,
  _A_WIZARD_STEP_ACTIVE_: f_e,
  _A_WIZARD_STEP_ERROR_: h_e,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} od {{stepsCount}}",
  _A_WIZARD_STEP_UPCOMING_: A_e,
  _A_WIZARD_STEP_VISITED_: E_e,
  _A_WIZARD_STEP_WARNING_: p_e,
  _A_WIZARD_STEPS_ARIA_LABEL_: T_e,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Korak {{ stepActive }} od {{ stepsCount }}"
}, L_e = "Wizard", m_e = "Prossimo", b_e = "Passo successivo", I_e = "Precedente", v_e = "Passo precedente", y_e = "Passo attuale", R_e = "Errore del passo", g_e = "Passo successivo", O_e = "Passo visitato", C_e = "Avvertimento del passo", D_e = "Passi dell'assistente", N_e = {
  _A_WIZARD_ARIA_LABEL_: L_e,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Passo {{ stepNumber }}:",
  _A_WIZARD_NEXT_: m_e,
  _A_WIZARD_NEXT_TITLE_: b_e,
  _A_WIZARD_PREVIOUS_: I_e,
  _A_WIZARD_PREVIOUS_TITLE_: v_e,
  _A_WIZARD_STEP_ACTIVE_: y_e,
  _A_WIZARD_STEP_ERROR_: R_e,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} di {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: g_e,
  _A_WIZARD_STEP_VISITED_: O_e,
  _A_WIZARD_STEP_WARNING_: C_e,
  _A_WIZARD_STEPS_ARIA_LABEL_: D_e,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "palcoscenico {{ stepActive }} Di {{ stepsCount }}"
}, B_e = "Мастер", w_e = "Следующий", P_e = "Следующий шаг", x_e = "Предыдущий", M_e = "Предыдущий шаг", F_e = "Шаг актуальный", q_e = "Ошибка шага", $_e = "Шаг предстоящий", U_e = "Шаг посещённый", k_e = "Предупреждение шага", H_e = "Шаги мастера", V_e = {
  _A_WIZARD_ARIA_LABEL_: B_e,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Шаг {{ stepNumber }}:",
  _A_WIZARD_NEXT_: w_e,
  _A_WIZARD_NEXT_TITLE_: P_e,
  _A_WIZARD_PREVIOUS_: x_e,
  _A_WIZARD_PREVIOUS_TITLE_: M_e,
  _A_WIZARD_STEP_ACTIVE_: F_e,
  _A_WIZARD_STEP_ERROR_: q_e,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} из {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: $_e,
  _A_WIZARD_STEP_VISITED_: U_e,
  _A_WIZARD_STEP_WARNING_: k_e,
  _A_WIZARD_STEPS_ARIA_LABEL_: H_e,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Шаг {{ stepActive }} из {{ stepsCount }}"
}, Es = {
  ar: fue,
  de: yue,
  en: Fue,
  es: Yue,
  fr: l_e,
  hr: S_e,
  it: N_e,
  ru: V_e
}, W_e = "Bytes", G_e = "KB", j_e = "MB", K_e = "GB", z_e = "TB", Y_e = "PB", X_e = "EB", Z_e = "ZB", J_e = "YB", Q_e = {
  _A_FILE_SIZE_B_: W_e,
  _A_FILE_SIZE_KB_: G_e,
  _A_FILE_SIZE_MB_: j_e,
  _A_FILE_SIZE_GB_: K_e,
  _A_FILE_SIZE_TB_: z_e,
  _A_FILE_SIZE_PB_: Y_e,
  _A_FILE_SIZE_EB_: X_e,
  _A_FILE_SIZE_ZB_: Z_e,
  _A_FILE_SIZE_YB_: J_e
}, ede = "Bytes", tde = "KB", nde = "MB", rde = "GB", ade = "TB", sde = "PB", ide = "EB", lde = "ZB", ode = "YB", ude = {
  _A_FILE_SIZE_B_: ede,
  _A_FILE_SIZE_KB_: tde,
  _A_FILE_SIZE_MB_: nde,
  _A_FILE_SIZE_GB_: rde,
  _A_FILE_SIZE_TB_: ade,
  _A_FILE_SIZE_PB_: sde,
  _A_FILE_SIZE_EB_: ide,
  _A_FILE_SIZE_ZB_: lde,
  _A_FILE_SIZE_YB_: ode
}, _de = "Bytes", dde = "KB", cde = "MB", fde = "GB", hde = "TB", Ade = "PB", Ede = "EB", pde = "ZB", Tde = "YB", Sde = {
  _A_FILE_SIZE_B_: _de,
  _A_FILE_SIZE_KB_: dde,
  _A_FILE_SIZE_MB_: cde,
  _A_FILE_SIZE_GB_: fde,
  _A_FILE_SIZE_TB_: hde,
  _A_FILE_SIZE_PB_: Ade,
  _A_FILE_SIZE_EB_: Ede,
  _A_FILE_SIZE_ZB_: pde,
  _A_FILE_SIZE_YB_: Tde
}, Lde = "Bytes", mde = "KB", bde = "MB", Ide = "GB", vde = "TB", yde = "PB", Rde = "EB", gde = "ZB", Ode = "YB", Cde = {
  _A_FILE_SIZE_B_: Lde,
  _A_FILE_SIZE_KB_: mde,
  _A_FILE_SIZE_MB_: bde,
  _A_FILE_SIZE_GB_: Ide,
  _A_FILE_SIZE_TB_: vde,
  _A_FILE_SIZE_PB_: yde,
  _A_FILE_SIZE_EB_: Rde,
  _A_FILE_SIZE_ZB_: gde,
  _A_FILE_SIZE_YB_: Ode
}, Dde = "Bytes", Nde = "KB", Bde = "MB", wde = "GB", Pde = "TB", xde = "PB", Mde = "EB", Fde = "ZB", qde = "YB", $de = {
  _A_FILE_SIZE_B_: Dde,
  _A_FILE_SIZE_KB_: Nde,
  _A_FILE_SIZE_MB_: Bde,
  _A_FILE_SIZE_GB_: wde,
  _A_FILE_SIZE_TB_: Pde,
  _A_FILE_SIZE_PB_: xde,
  _A_FILE_SIZE_EB_: Mde,
  _A_FILE_SIZE_ZB_: Fde,
  _A_FILE_SIZE_YB_: qde
}, Ude = "B", kde = "KB", Hde = "MB", Vde = "GB", Wde = "TB", Gde = "PB", jde = "EB", Kde = "ZB", zde = "YB", Yde = {
  _A_FILE_SIZE_B_: Ude,
  _A_FILE_SIZE_KB_: kde,
  _A_FILE_SIZE_MB_: Hde,
  _A_FILE_SIZE_GB_: Vde,
  _A_FILE_SIZE_TB_: Wde,
  _A_FILE_SIZE_PB_: Gde,
  _A_FILE_SIZE_EB_: jde,
  _A_FILE_SIZE_ZB_: Kde,
  _A_FILE_SIZE_YB_: zde
}, Xde = "Bytes", Zde = "KB", Jde = "MB", Qde = "GB", ece = "TB", tce = "PB", nce = "EB", rce = "ZB", ace = "YB", sce = {
  _A_FILE_SIZE_B_: Xde,
  _A_FILE_SIZE_KB_: Zde,
  _A_FILE_SIZE_MB_: Jde,
  _A_FILE_SIZE_GB_: Qde,
  _A_FILE_SIZE_TB_: ece,
  _A_FILE_SIZE_PB_: tce,
  _A_FILE_SIZE_EB_: nce,
  _A_FILE_SIZE_ZB_: rce,
  _A_FILE_SIZE_YB_: ace
}, ice = "Б", lce = "КБ", oce = "МБ", uce = "ГБ", _ce = "ТБ", dce = "ПБ", cce = "ЭБ", fce = "ЗБ", hce = "ИБ", Ace = {
  _A_FILE_SIZE_B_: ice,
  _A_FILE_SIZE_KB_: lce,
  _A_FILE_SIZE_MB_: oce,
  _A_FILE_SIZE_GB_: uce,
  _A_FILE_SIZE_TB_: _ce,
  _A_FILE_SIZE_PB_: dce,
  _A_FILE_SIZE_EB_: cce,
  _A_FILE_SIZE_ZB_: fce,
  _A_FILE_SIZE_YB_: hce
}, ps = {
  ar: Q_e,
  de: ude,
  en: Sde,
  es: Cde,
  fr: $de,
  hr: Yde,
  it: sce,
  ru: Ace
}, Ece = "غلق", pce = "يكمل", Tce = "مواد لكل صفحة", Sce = "مزيد من الإجراءات", Lce = "التالي", mce = "لا", bce = "سابق", Ice = "إزالة المحتوى", vce = "إزالة التحديد", yce = "قائمة البحث", Rce = "نعم", gce = {
  "_ADD_NOTIFICATION_{{type}}_": "إضافة إشعار {{ type }}",
  _ALERT_CLOSE_: Ece,
  _CONTINUE_: pce,
  _ITEMS_PER_PAGE_: Tce,
  _MORE_ACTIONS_: Sce,
  _NEXT_: Lce,
  _NO_: mce,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ count}} من {{ current }} - {{ start }}",
  _PREVIOUS_: bce,
  _REMOVE_FIELD_CONTENT_: Ice,
  _REMOVE_SELECTION_: vce,
  _SEARCH_MENU_: yce,
  _YES_: Rce
}, Oce = "Schließen", Cce = "Fortfahren", Dce = "Objekte pro Seite", Nce = "Weitere Aktionen", Bce = "Nächste", wce = "Nein", Pce = "Vorherige", xce = "Feldinhalt entfernen", Mce = "Auswahl entfernen", Fce = "Menüsuche", qce = "[Keine Auswahl]", $ce = "Ja", Uce = {
  "_ADD_NOTIFICATION_{{type}}_": "Benachrichtigung hinzufügen {{ type }}",
  _ALERT_CLOSE_: Oce,
  _CONTINUE_: Cce,
  _ITEMS_PER_PAGE_: Dce,
  _MORE_ACTIONS_: Nce,
  _NEXT_: Bce,
  _NO_: wce,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} von {{ count}}",
  _PREVIOUS_: Pce,
  _REMOVE_FIELD_CONTENT_: xce,
  _REMOVE_SELECTION_: Mce,
  _SEARCH_MENU_: Fce,
  _SELECT_TEXT_EMPTY_: qce,
  _YES_: $ce
}, kce = "Close", Hce = "Continue", Vce = "Items per page", Wce = "more actions", Gce = "Next", jce = "No", Kce = "Previous", zce = "Remove field content", Yce = "remove selection", Xce = "Search menu", Zce = "[No selection]", Jce = "Yes", Qce = {
  "_ADD_NOTIFICATION_{{type}}_": "Add Notification {{ type }}",
  _ALERT_CLOSE_: kce,
  _CONTINUE_: Hce,
  _ITEMS_PER_PAGE_: Vce,
  _MORE_ACTIONS_: Wce,
  _NEXT_: Gce,
  _NO_: jce,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} from {{ count}}",
  _PREVIOUS_: Kce,
  _REMOVE_FIELD_CONTENT_: zce,
  _REMOVE_SELECTION_: Yce,
  _SEARCH_MENU_: Xce,
  _SELECT_TEXT_EMPTY_: Zce,
  _YES_: Jce
}, efe = "Cerrar", tfe = "Continuar", nfe = "Artículos por página", rfe = "Otras acciones", afe = "Próximo", sfe = "No", ife = "Previo", lfe = "Quitar el contenido del campo", ofe = "eliminar selección", ufe = "Menú de búsqueda", _fe = "Sí", dfe = {
  "_ADD_NOTIFICATION_{{type}}_": "Agregar Notificación {{ type }}",
  _ALERT_CLOSE_: efe,
  _CONTINUE_: tfe,
  _ITEMS_PER_PAGE_: nfe,
  _MORE_ACTIONS_: rfe,
  _NEXT_: afe,
  _NO_: sfe,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} de {{ count}}",
  _PREVIOUS_: ife,
  _REMOVE_FIELD_CONTENT_: lfe,
  _REMOVE_SELECTION_: ofe,
  _SEARCH_MENU_: ufe,
  _YES_: _fe
}, cfe = "Fermer", ffe = "Continuer", hfe = "objets par page", Afe = "autres actions", Efe = "Suivant", pfe = "Non", Tfe = "Précédent", Sfe = "Supprimer le contenu du champ", Lfe = "supprimer la sélection", mfe = "Menu de recherche", bfe = "Oui", Ife = {
  "_ADD_NOTIFICATION_{{type}}_": "Ajouter notification {{ type }}",
  _ALERT_CLOSE_: cfe,
  _CONTINUE_: ffe,
  _ITEMS_PER_PAGE_: hfe,
  _MORE_ACTIONS_: Afe,
  _NEXT_: Efe,
  _NO_: pfe,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} depuis {{ count}}",
  _PREVIOUS_: Tfe,
  _REMOVE_FIELD_CONTENT_: Sfe,
  _REMOVE_SELECTION_: Lfe,
  _SEARCH_MENU_: mfe,
  _YES_: bfe
}, vfe = "Zatvori", yfe = "Nastaviti", Rfe = "Stavke po stranici", gfe = "Daljnje akcije", Ofe = "Sljedeći", Cfe = "Ne", Dfe = "Prethodni", Nfe = "Izbrišite sadržaj polja", Bfe = "Ukloniti odabir", wfe = "Pretraživanje izbornika", Pfe = "[Bez odabira]", xfe = "Da", Mfe = {
  "_ADD_NOTIFICATION_{{type}}_": "Dodaj obavijest {{ type }}",
  _ALERT_CLOSE_: vfe,
  _CONTINUE_: yfe,
  _ITEMS_PER_PAGE_: Rfe,
  _MORE_ACTIONS_: gfe,
  _NEXT_: Ofe,
  _NO_: Cfe,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} iz {{ count}}",
  _PREVIOUS_: Dfe,
  _REMOVE_FIELD_CONTENT_: Nfe,
  _REMOVE_SELECTION_: Bfe,
  _SEARCH_MENU_: wfe,
  _SELECT_TEXT_EMPTY_: Pfe,
  _YES_: xfe
}, Ffe = "Vicino", qfe = "Continua", $fe = "oggetti per pagina", Ufe = "Ulteriori azioni", kfe = "Prossimo", Hfe = "No", Vfe = "Precedente", Wfe = "Rimuovi il contenuto del campo", Gfe = "rimuovere la selezione", jfe = "Menù di ricerca", Kfe = "Sì", zfe = {
  "_ADD_NOTIFICATION_{{type}}_": "Aggiungi notifica {{ type }}",
  _ALERT_CLOSE_: Ffe,
  _CONTINUE_: qfe,
  _ITEMS_PER_PAGE_: $fe,
  _MORE_ACTIONS_: Ufe,
  _NEXT_: kfe,
  _NO_: Hfe,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} da {{ count}}",
  _PREVIOUS_: Vfe,
  _REMOVE_FIELD_CONTENT_: Wfe,
  _REMOVE_SELECTION_: Gfe,
  _SEARCH_MENU_: jfe,
  _YES_: Kfe
}, Yfe = "Закрыть", Xfe = "Продолжать", Zfe = "Элементов на странице", Jfe = "Дальнейшие действия", Qfe = "Следующий", ehe = "Нет", the = "Предыдущий", nhe = "Удалить содержимое поля", rhe = "удалить выделение", ahe = "Быстрый поиск", she = "поиск в меню", ihe = "[Нет элементов]", lhe = "Да", ohe = {
  "_ADD_NOTIFICATION_{{type}}_": "Добавить Уведомление {{ type }}",
  _ALERT_CLOSE_: Yfe,
  _CONTINUE_: Xfe,
  _ITEMS_PER_PAGE_: Zfe,
  _MORE_ACTIONS_: Jfe,
  _NEXT_: Qfe,
  _NO_: ehe,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} из {{ count}}",
  _PREVIOUS_: the,
  _REMOVE_FIELD_CONTENT_: nhe,
  _REMOVE_SELECTION_: rhe,
  _SCHNELLSUCHE_: ahe,
  _SEARCH_MENU_: she,
  _SELECT_TEXT_EMPTY_: ihe,
  _YES_: lhe
}, uhe = {
  ...gce,
  ...Va.ar,
  ...Wa.ar,
  ...Ga.ar,
  ...ja.ar,
  ...Ka.ar,
  ...za.ar,
  ...Ya.ar,
  ...Xa.ar,
  ...Za.ar,
  ...Ja.ar,
  ...Qa.ar,
  ...es.ar,
  ...ts.ar,
  ...ns.ar,
  ...rs.ar,
  ...as.ar,
  ...ss.ar,
  ...is.ar,
  ...ls.ar,
  ...os.ar,
  ...us.ar,
  ..._s.ar,
  ...ds.ar,
  ...cs.ar,
  ...fs.ar,
  ...hs.ar,
  ...As.ar,
  ...Es.ar,
  ...ps.ar
}, _he = {
  ...Uce,
  ...Va.de,
  ...Wa.de,
  ...Ga.de,
  ...ja.de,
  ...Ka.de,
  ...za.de,
  ...Ya.de,
  ...Xa.de,
  ...Za.de,
  ...Ja.de,
  ...Qa.de,
  ...es.de,
  ...ts.de,
  ...ns.de,
  ...rs.de,
  ...as.de,
  ...ss.de,
  ...is.de,
  ...ls.de,
  ...os.de,
  ...us.de,
  ..._s.de,
  ...ds.de,
  ...cs.de,
  ...fs.de,
  ...hs.de,
  ...As.de,
  ...Es.de,
  ...ps.de
}, dhe = {
  ...Qce,
  ...Va.en,
  ...Wa.en,
  ...Ga.en,
  ...ja.en,
  ...Ka.en,
  ...za.en,
  ...Ya.en,
  ...Xa.en,
  ...Za.en,
  ...Ja.en,
  ...Qa.en,
  ...es.en,
  ...ts.en,
  ...ns.en,
  ...rs.en,
  ...as.en,
  ...ss.en,
  ...is.en,
  ...ls.en,
  ...os.en,
  ...us.en,
  ..._s.en,
  ...ds.en,
  ...cs.en,
  ...fs.en,
  ...hs.en,
  ...As.en,
  ...Es.en,
  ...ps.en
}, che = {
  ...dfe,
  ...Va.es,
  ...Wa.es,
  ...Ga.es,
  ...ja.es,
  ...Ka.es,
  ...za.es,
  ...Ya.es,
  ...Xa.es,
  ...Za.es,
  ...Ja.es,
  ...Qa.es,
  ...es.es,
  ...ts.es,
  ...ns.es,
  ...rs.es,
  ...as.es,
  ...ss.es,
  ...is.es,
  ...ls.es,
  ...os.es,
  ...us.es,
  ..._s.es,
  ...ds.es,
  ...cs.es,
  ...fs.es,
  ...hs.es,
  ...As.es,
  ...Es.es,
  ...ps.es
}, fhe = {
  ...Ife,
  ...Va.fr,
  ...Wa.fr,
  ...Ga.fr,
  ...ja.fr,
  ...Ka.fr,
  ...za.fr,
  ...Ya.fr,
  ...Xa.fr,
  ...Za.fr,
  ...Ja.fr,
  ...Qa.fr,
  ...es.fr,
  ...ts.fr,
  ...ns.fr,
  ...rs.fr,
  ...as.fr,
  ...ss.fr,
  ...is.fr,
  ...ls.fr,
  ...os.fr,
  ...us.fr,
  ..._s.fr,
  ...ds.fr,
  ...cs.fr,
  ...fs.fr,
  ...hs.fr,
  ...As.fr,
  ...Es.fr,
  ...ps.fr
}, hhe = {
  ...Mfe,
  ...Va.hr,
  ...Wa.hr,
  ...Ga.hr,
  ...ja.hr,
  ...Ka.hr,
  ...za.hr,
  ...Ya.hr,
  ...Xa.hr,
  ...Za.hr,
  ...Ja.hr,
  ...Qa.hr,
  ...es.hr,
  ...ts.hr,
  ...ns.hr,
  ...rs.hr,
  ...as.hr,
  ...ss.hr,
  ...is.hr,
  ...ls.hr,
  ...os.hr,
  ...us.hr,
  ..._s.hr,
  ...ds.hr,
  ...cs.hr,
  ...fs.hr,
  ...hs.hr,
  ...As.hr,
  ...Es.hr,
  ...ps.hr
}, Ahe = {
  ...zfe,
  ...Va.it,
  ...Wa.it,
  ...Ga.it,
  ...ja.it,
  ...Ka.it,
  ...za.it,
  ...Ya.it,
  ...Xa.it,
  ...Za.it,
  ...Ja.it,
  ...Qa.it,
  ...es.it,
  ...ts.it,
  ...ns.it,
  ...rs.it,
  ...as.it,
  ...ss.it,
  ...is.it,
  ...ls.it,
  ...os.it,
  ...us.it,
  ..._s.it,
  ...ds.it,
  ...cs.it,
  ...fs.it,
  ...hs.it,
  ...As.it,
  ...Es.it,
  ...ps.it
}, Ehe = {
  ...ohe,
  ...Va.ru,
  ...Wa.ru,
  ...Ga.ru,
  ...ja.ru,
  ...Ka.ru,
  ...za.ru,
  ...Ya.ru,
  ...Xa.ru,
  ...Za.ru,
  ...Ja.ru,
  ...Qa.ru,
  ...es.ru,
  ...ts.ru,
  ...ns.ru,
  ...rs.ru,
  ...as.ru,
  ...ss.ru,
  ...is.ru,
  ...ls.ru,
  ...os.ru,
  ...us.ru,
  ..._s.ru,
  ...ds.ru,
  ...cs.ru,
  ...fs.ru,
  ...hs.ru,
  ...As.ru,
  ...Es.ru,
  ...ps.ru
}, wAe = {
  ar: uhe,
  de: _he,
  en: dhe,
  es: che,
  fr: fhe,
  hr: hhe,
  it: Ahe,
  ru: Ehe
};
export {
  bhe as AAccordion,
  Gc as AAlert,
  Ihe as AAlertPlugin,
  pt as AButton,
  Ohe as ACarousel,
  Va as ACarouselI18n,
  rF as ACheckbox,
  Wa as ACheckboxI18n,
  cf as ACheckboxRadioGroups,
  vl as ACloak,
  Ga as ACloakI18n,
  Rhe as ACloakPlugin,
  mf as AConfirmAPI,
  ci as ADatepicker,
  QF as ADatepickerRange,
  ja as ADatepickerRangeI18n,
  Nhe as ADisclosure,
  Ka as ADisclosureI18n,
  _a as ADropdown,
  cS as ADropdownGlobalAPI,
  Ee as AElement,
  D0 as AErrors,
  en as AErrorsText,
  Y1 as AEventOutsideAPI,
  yS as AFieldset,
  za as AFieldsetI18n,
  qq as AFilterCenter,
  Mhe as AFilters,
  jn as AFiltersAPI,
  XM as AFiltersAPI_additionFilters,
  n$ as AFiltersHorizontal,
  Ya as AFiltersI18n,
  mAe as AFiltersPlugin,
  vq as AFiltersRight,
  Uu as AForm,
  Fhe as AFormElement,
  ku as AFormElementBtnClear,
  Yt as AFormHelpText,
  Bhe as AFormPlugin,
  _n as AFormPluginOptions,
  Ln as AFormReadonly,
  ac as AGet,
  OS as AGroup,
  sc as AGroupButtonDropdown,
  qhe as AGroupButtonDropdownPlugin,
  g2 as AHttpAPI,
  NL as AHttpAPI_API_CONFIG,
  v2 as AHttpAPI_abortHttp,
  Ks as AHttpAPI_callHttpRequestAndCheckSavedApi,
  y2 as AHttpAPI_clearAllApiSaved,
  R2 as AHttpAPI_clearApiSaved,
  P2 as AHttpAPI_deleteHttp,
  O2 as AHttpAPI_getHttp,
  C2 as AHttpAPI_getListHttp,
  D2 as AHttpAPI_getOptionsHttp,
  LAe as AHttpAPI_getUrlParams,
  w2 as AHttpAPI_patchHttp,
  N2 as AHttpAPI_postHttp,
  B2 as AHttpAPI_putHttp,
  m2 as AHttpAPI_setBaseUrl,
  b2 as AHttpAPI_setErrorCallbacks,
  I2 as AHttpAPI_setHeaderParams,
  F2 as AHttpAPI_setUrlForArray,
  M2 as AHttpAPI_setUrlWithParams,
  bAe as AHttpPlugin,
  vhe as AI18nPlugin,
  _t as AIcon,
  yhe as AIconPlugin,
  $he as AInfiniteScroll,
  Rn as AInput,
  j0 as AInputCurrency,
  Xa as AInputCurrencyI18n,
  IAe as AInputCurrencyPlugin,
  on as AInputCurrencyPluginOptions,
  Q0 as AInputFile,
  Za as AInputI18n,
  Ma as AInputNumber,
  Ja as AInputNumberI18n,
  vAe as AInputNumberPlugin,
  En as AInputNumberPluginOptions,
  Uo as AInputNumberRange,
  Qa as AInputNumberRangeI18n,
  T1 as AJson,
  es as AJsonI18n,
  wP as AKeyChildren,
  we as AKeyId,
  vt as AKeyLabel,
  di as AKeyLabelSearch,
  Ll as AKeyParent,
  Z as AKeysCode,
  Ut as ALabel,
  Hu as ALink,
  Uhe as ALinkCopy,
  ts as ALinkCopyI18n,
  w$ as AList,
  wS as ALoading,
  ns as ALoadingI18n,
  khe as ALoadingPlugin,
  Hhe as AMenu,
  rs as AMenu2I18n,
  x$ as AMenuButtonToggle,
  xS as AMenuButtonToggle_ToggleAPI,
  Sn as AMobileAPI,
  iu as AMobileAPI_isMobileWidth,
  Wo as AMobileAPI_setIsMobileWidth,
  RAe as AMobilePlugin,
  Vu as AModal,
  Whe as AModalConfirm,
  WU as AModalForm,
  as as AModalI18n,
  Vhe as AModalPlugin,
  Ghe as AModalWizard,
  C1 as AMultiselectOrdered,
  ss as AMultiselectOrderedI18n,
  Phe as AMultiselectOrderedPlugin,
  qe as AMultiselectOrderedPluginOptions,
  jhe as ANotification,
  $u as ANotificationAPI,
  Vq as ANotificationAPI_addNotification,
  Hq as ANotificationAPI_setNotificationTimeout,
  bl as AOnHooks,
  qu as AOneCheckbox,
  Khe as APageTabTitle,
  bk as APageTabTitleAPI,
  Ik as APageTabTitleAPI_setBaseTitle,
  gAe as APageTabTitlePlugin,
  xk as APagination,
  is as APaginationI18n,
  Gn as APlacements,
  Ef as APopupAPI,
  rc as APopupAPI_closePopup,
  Od as APopupAPI_isCurrentPopupOpen,
  nc as APopupAPI_openPopup,
  u0 as APopupAPI_togglePopup,
  zhe as AProgress,
  Yhe as AProgressCircle,
  bS as ARadio,
  ls as ARadioI18n,
  Xhe as ARate,
  A$ as ARequired,
  os as ARequiredI18n,
  Hk as AResizer,
  $1 as ARouterLinkConfig,
  us as ARouterLinkConfigI18n,
  OAe as ARouterLinkConfigPlugin,
  Et as ARouterLinkConfigPluginOptions,
  Kt as ASafeHtml,
  Zhe as AScale,
  Us as ASelect,
  _s as ASelectI18n,
  ap as ASelectIcon,
  xhe as ASelectPlugin,
  Jhe as AShowMore,
  ds as AShowMoreI18n,
  Rl as ASpinner,
  cs as ASpinnerI18n,
  ghe as ASpinnerPlugin,
  IS as ASwitch,
  fs as ASwitchI18n,
  eAe as ATable,
  hs as ATableI18n,
  Qhe as ATablePlugin,
  tAe as ATabs,
  sq as ATemplate,
  fq as ATextarea,
  SM as ATooltip,
  pe as ATranslation,
  Oi as AUiTypes_typesContainer,
  Z0 as AUiTypes_typesLabelProps,
  pf as AUiTypes_typesModelArray,
  TS as AUiTypes_typesModelObject,
  X0 as AUiTypes_typesWithData,
  fU as AVerticalScroll,
  As as AVerticalScrollI18n,
  Tk as AWizard,
  Es as AWizardI18n,
  yAe as AlohaPlugin,
  gt as EventBus,
  ps as Filters18n,
  Of as UIDataGroupAPI,
  Bt as UIExcludeRenderAttributesAPI,
  zt as UiAPI,
  Xu as UiClearButtonAPI,
  Cf as UiCollapseAPI,
  Zu as UiDataFromServerAPI,
  Ju as UiDataSortAPI,
  Qu as UiDataWatchEmitAPI,
  e_ as UiDataWithKeyIdAndLabelAPI,
  Vl as UiDisabledAPI,
  Rf as UiInputAutofillAPI,
  gf as UiLabelClickEventBusAPI,
  t_ as UiLoadingAPI,
  Df as UiSearchAPI,
  Xt as UiStyleHideAPI,
  n_ as UiTextAfterLabelAPI,
  Md as colorToHex,
  zo as concatTwoStringsWithSpace,
  She as dompurify,
  Wc as extractTextFromHtml,
  BM as filterBoolean,
  wM as filterCapitalize,
  PM as filterCurrency,
  xM as filterDate,
  MM as filterDefaultForEmpty,
  FM as filterEmail,
  qM as filterEscapeHtml,
  $M as filterFileSize,
  dl as filterFloat,
  UM as filterJson,
  kM as filterKeyValue,
  HM as filterLimitTo,
  VM as filterLink,
  du as filterList,
  GM as filterLowerCase,
  jM as filterMask,
  KM as filterPropertyByValue,
  zM as filterSearchHighlight,
  YM as filterUpperCase,
  r0 as focusableList,
  gi as focusableSelector,
  ax as getTotalNestedCount,
  Bu as getTranslatedAttributes,
  Dt as getTranslatedText,
  zc as getTranslationAttributes,
  Dhe as getUniqueSelector,
  BAe as hexToRgb,
  xa as i18n,
  uhe as i18nAR,
  wAe as i18nAll,
  _he as i18nDE,
  dhe as i18nEN,
  che as i18nES,
  fhe as i18nFR,
  hhe as i18nHR,
  Ahe as i18nIT,
  Ehe as i18nRU,
  nx as isArrayOfArrays,
  mhe as isArrayOfStrings,
  V0 as isEven,
  whe as isOdd,
  oa as isPlaceholderTranslate,
  Ti as isTranslate,
  DAe as mixBlack,
  BL as mixColor,
  CAe as mixWhite,
  NAe as rgbToHex,
  Lhe as sanitize,
  su as sanitizeLocal,
  Che as scrollToElement,
  Or as setFocusToElement,
  a0 as setFocusToNextFocusableElement,
  s0 as setFocusToPreviousFocusableElement,
  HT as setI18n,
  VT as setLanguage,
  jc as timeTranslationLastChanged,
  Yo as toPrecision,
  bx as toggleTranslate,
  Kc as translation,
  Lx as updateI18n,
  mx as updateI18nForLanguage,
  WT as updateTranslation
};
