{
  "_PAGE_FILTER_LIST_ARGUMENTS_ARRAY_": "Das Array für die Liste",
  "_PAGE_FILTER_LIST_ARGUMENTS_IS_HTML_": "Wenn true, wird eine HTML-Liste (&lt;ul&gt;&lt;li&gt;...&lt;/li&gt;&lt;/ul&gt;) erstellt. Andernfalls wird eine Textliste generiert",
  "_PAGE_FILTER_LIST_ARGUMENTS_IS_SIMPLE_ARRAY_": "Gibt an, ob nur ein einfaches Array ohne Objekte verwendet wird",
  "_PAGE_FILTER_LIST_ARGUMENTS_KEY_CHILDREN_": "Schlüssel für Kinderelemente (nur wenn <strong>isSimpleArray=false</strong>)",
  "_PAGE_FILTER_LIST_ARGUMENTS_KEY_LABEL_": "Schlüssel für das anzuzeigende Text (nur wenn <strong>isSimpleArray=false</strong>)",
  "_PAGE_FILTER_LIST_ARGUMENTS_KEY_LABEL_CALLBACK_": "Funktion zur Generierung von Labels mit zwei Parametern (<strong>item</strong>, <strong>itemIndex</strong>)",
  "_PAGE_FILTER_LIST_ARGUMENTS_SEPARATOR_": "Separator zwischen Elementen (nur wenn <strong>isHtml=false</strong>)",
  "_PAGE_FILTER_LIST_ARGUMENTS_TAG_": "HTML-Tag für die gesamte Liste",
  "_PAGE_FILTER_LIST_ARGUMENTS_LIST_CLASS_": "CSS-Klasse z.B.: (a_list_without_styles)",
  "_PAGE_FILTER_LIST_ARGUMENTS_": "# Arguments:  \narray (Array): The array for the list\n[isHtml=true] (Boolean): If true, an HTML list (<ul><li>...</li></ul>) is created. Otherwise, a text list is generated (<span>...</span>)\n[isSimpleArray=false] (Boolean): Indicates whether only a simple array without objects is used\n[keyChildren=\"\"] (String): Key for child elements (only if isSimpleArray=false)\n[keyLabel=\"\"] (String): Key for the text to be displayed (only if isSimpleArray=false)\n[keyLabelCallback] (Function): Function to generate labels with two parameters (item, itemIndex)\n[separator=\", \"] (String): Separator between elements (only if isHtml=false)\n[tag=\"ul\"] (String): HTML tag for the entire list\n[listClass=\"\"] (String): CSS class (a_list_without_styles)",
  "_PAGE_FILTER_LIST_DESCRIPTION_": "The function creates a list from an array.",
  "_PAGE_FILTER_LIST_IS_SIMPLE_ARRAY_TREE_HEADER_": "Tree structure isSimpleArray=true"
}
