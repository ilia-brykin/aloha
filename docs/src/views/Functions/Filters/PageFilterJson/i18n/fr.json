{
  "_PAGE_FILTER_JSON_ARGUMENTS_VALUE_": "Der Wert oder das JavaScript-Objekt, das in eine JSON-Zeichenkette umgewandelt werden soll",
  "_PAGE_FILTER_JSON_ARGUMENTS_REPLACER_": "Eine Funktion, die das Verhalten des Umwandlungsprozesses beeinflusst, oder ein Array aus Zeichenketten und Zahlen, das Eigenschaften von value angibt, die in der Ausgabe enthalten sein sollen. Wenn replacer ein Array ist, werden alle Elemente in diesem Array, die keine Zeichenketten oder Zahlen sind (weder primitive Werte noch Wrapper-Objekte), einschließlich Symbol-Werte, vollständig ignoriert. Wenn replacer alles außer einer Funktion oder einem Array ist (z. B. null oder nicht angegeben), werden alle zeichenkettenbasierten Eigenschaften des Objekts in der resultierenden JSON-Zeichenkette aufgenommen",
  "_PAGE_FILTER_JSON_ARGUMENTS_SPACE_": "Eine Zeichenkette oder eine Zahl, die für die Einfügung von Leerzeichen (einschließlich Einrückung, Zeilenumbruchzeichen usw.) in die Ausgabe-JSON-Zeichenkette zu Lesbarkeitszwecken verwendet wird. Wenn dies eine Zahl ist, gibt sie die Anzahl der Leerzeichen oder anderer Zeichen an, die als Einrückung verwendet werden sollen, auf maximal 10 begrenzt (dh jede Zahl größer als 10 wird so behandelt, als wäre sie 10). Werte kleiner als 1 zeigen an, dass kein Leerzeichen verwendet werden soll. Wenn dies eine Zeichenkette ist, wird die Zeichenkette (oder die ersten 10 Zeichen der Zeichenkette, wenn sie länger ist als das) vor jedem verschachtelten Objekt oder Array eingefügt. Wenn space alles außer einer Zeichenkette oder Zahl ist (kann entweder ein Primitiv oder ein Wrapper-Objekt sein) — z. B. null oder nicht angegeben — wird kein Leerzeichen verwendet",
  "_PAGE_FILTER_JSON_ARGUMENTS_": "# Arguments :  \nvalue (Any): La valeur ou l'objet JavaScript à convertir en chaîne JSON\n[replacer] (Function | Array): Une fonction qui influence le comportement du processus de conversion, ou un tableau de chaînes et de nombres qui spécifie les propriétés de value à inclure dans le résultat. Si replacer est un tableau, tous les éléments dans ce tableau qui ne sont ni des chaînes ni des nombres (ni des valeurs primitives ni des objets d'emballage), y compris les valeurs de symbole, seront complètement ignorés. Si replacer est autre chose qu'une fonction ou un tableau (par exemple, null ou non spécifié), toutes les propriétés basées sur des chaînes de l'objet seront incluses dans la chaîne JSON résultante.\n[space=2] (Number | String): Une chaîne ou un nombre utilisé pour insérer des espaces (y compris l'indentation, les caractères de saut de ligne, etc.) dans la chaîne JSON de sortie pour des raisons de lisibilité. Si c'est un nombre, il indique le nombre d'espaces ou d'autres caractères à utiliser pour l'indentation, limité à un maximum de 10 (c'est-à-dire que tout nombre supérieur à 10 sera traité comme s'il était 10). Des valeurs inférieures à 1 indiquent qu'aucun espace ne doit être utilisé. Si c'est une chaîne, la chaîne (ou les 10 premiers caractères de la chaîne, si elle est plus longue que cela) est insérée avant chaque objet ou tableau imbriqué. Si space est autre chose qu'une chaîne ou un nombre (peut être soit un primitif soit un objet d'emballage) — par exemple, null ou non spécifié — aucun espace n'est utilisé.",
  "_PAGE_FILTER_JSON_DESCRIPTION_": "La fonction <strong>filterJson</strong> convertit un objet JavaScript ou une valeur en une chaîne JSON formatée. Elle permet la personnalisation du replacer (fonction modifiant le comportement de la conversion) et de l'indentation (nombre d'espaces ou autres caractères pour l'indentation)."
}
