{
  "_A_INPUT_CURRENCY_COMPONENT_DESCRIPTION_": "El componente <strong lang=\"en\">AInputCurrency</strong> proporciona la capacidad de ingresar y formatear valores monetarios. El componente admite diversas opciones, como la gestión de símbolos de moneda, la selección de separadores y el redondeo automático de números.",
  "_A_INPUT_CURRENCY_COMPONENT_NAME_": "Campo de entrada de moneda",
  "_A_INPUT_CURRENCY_GROUP_CONTROLS_TYPE_DESCRIPTION_": "Este ejemplo muestra cómo usar <strong lang=\"en\">controls-type</strong> para configurar la visualización de los elementos de control en el campo de entrada. En el primer campo, los elementos de control están desactivados, mientras que en el segundo se utilizan botones '+' y '-' para aumentar o disminuir el valor. Esto permite elegir el método más adecuado para controlar el valor según los requisitos.",
  "_A_INPUT_CURRENCY_GROUP_CONTROLS_TYPE_HEADER_": "Tipos de elementos de control",
  "_A_INPUT_CURRENCY_GROUP_DECIMAL_DIVIDER_DESCRIPTION_": "Este ejemplo muestra cómo usar <strong lang=\"en\">decimal-divider</strong> para configurar el separador decimal en el campo de entrada. En el primer campo se utiliza una coma <strong>','</strong> como separador, mientras que en el segundo se utiliza un punto <strong>'.'</strong>. Esto permite elegir el formato adecuado para mostrar los valores decimales según las configuraciones regionales o las preferencias del usuario. Importante: El separador decimal y el separador de miles deben ser diferentes.",
  "_A_INPUT_CURRENCY_GROUP_DECIMAL_DIVIDER_HEADER_": "Separador decimal",
  "_A_INPUT_CURRENCY_GROUP_DECIMAL_PART_LENGTH_DESCRIPTION_": "Este ejemplo muestra cómo usar <strong lang=\"en\">decimal-part-length</strong> para definir la cantidad de dígitos después del separador decimal en el componente <strong lang=\"en\">AInputCurrency</strong>. En el primer caso, la longitud de la parte decimal está configurada en <strong>0</strong>, lo que significa que no se muestra ninguna parte decimal. En el segundo ejemplo, la longitud se establece en <strong>1</strong>, lo que permite mostrar un dígito después del punto decimal. En los siguientes ejemplos, la longitud de la parte decimal se establece en <strong>2</strong> y <strong>4</strong>, lo que permite mostrar los valores decimales con mayor precisión.",
  "_A_INPUT_CURRENCY_GROUP_DECIMAL_PART_LENGTH_HEADER_": "Longitud de la parte decimal",
  "_A_INPUT_CURRENCY_GROUP_MAX_MIN_DESCRIPTION_": "Este ejemplo muestra cómo usar <strong lang=\"en\">max</strong> y <strong lang=\"en\">min</strong> para limitar los valores que se pueden ingresar en el campo. En el primer campo, la entrada está limitada a un rango de <strong>1</strong> a <strong>20</strong>, mientras que en el segundo está limitada a un rango de <strong>-10.05</strong> a <strong>19.05</strong>. Estas propiedades ayudan a controlar el rango permitido de números ingresados.",
  "_A_INPUT_CURRENCY_GROUP_MAX_MIN_HEADER_": "Límites máximo y mínimo",
  "_A_INPUT_CURRENCY_GROUP_MODEL_TYPE_DESCRIPTION_": "Este ejemplo muestra cómo usar <strong lang=\"en\">model-type</strong> para definir el tipo de datos que se almacenarán en el modelo. En el primer caso, el valor se almacena como <strong lang=\"en\">number</strong> (número), mientras que en el segundo se almacena como <strong lang=\"en\">string</strong> (cadena). Esta propiedad permite una gestión flexible del tipo de datos en el modelo según los requisitos de la aplicación.",
  "_A_INPUT_CURRENCY_GROUP_MODEL_TYPE_HEADER_": "Tipo de modelo",
  "_A_INPUT_CURRENCY_GROUP_STEP_DESCRIPTION_": "Este ejemplo muestra cómo usar <strong lang=\"en\">step</strong> para definir el valor de incremento en el componente <strong lang=\"en\">AInputCurrency</strong>. En el primer caso, el incremento se establece en <strong>2</strong>, lo que permite aumentar o disminuir el valor en <strong>2</strong> unidades por vez. En el segundo caso, el incremento se establece en <strong>0.01</strong>, lo que permite un control más preciso del valor mediante los botones de control. Esta propiedad es útil para ajustar la precisión en la entrada de datos numéricos.",
  "_A_INPUT_CURRENCY_GROUP_STEP_HEADER_": "Valor del incremento",
  "_A_INPUT_CURRENCY_GROUP_SYMBOL_DESCRIPTION_": "Este ejemplo muestra cómo usar <strong lang=\"en\">currency-symbol</strong> y <strong lang=\"en\">currency-symbol-position</strong> para mostrar el símbolo de la moneda en el campo de entrada. En el primer campo, el símbolo <strong>'%'</strong> se muestra a la derecha del valor ingresado. En el segundo y tercer campos, el símbolo <strong>'$'</strong> se muestra a la izquierda del valor. Esto permite una configuración flexible de la visualización de los símbolos de moneda según los requisitos.",
  "_A_INPUT_CURRENCY_GROUP_SYMBOL_HEADER_": "Símbolos de moneda y sus posiciones",
  "_A_INPUT_CURRENCY_GROUP_THOUSAND_DIVIDER_DESCRIPTION_": "Este ejemplo muestra cómo usar la propiedad <strong lang=\"en\">thousand-divider</strong> para definir el separador de miles en el componente <strong lang=\"en\">AInputCurrency</strong>. En el primer caso, se usa una coma <strong>','</strong> como separador de miles. En el segundo ejemplo, se utiliza un punto <strong>'.'</strong> como separador. En el tercer ejemplo, se utiliza un espacio <strong>' '</strong> como separador, mientras que en el último ejemplo no hay separador, lo que permite mostrar números sin separación de miles. Importante: El separador decimal y el separador de miles deben ser diferentes.",
  "_A_INPUT_CURRENCY_GROUP_THOUSAND_DIVIDER_HEADER_": "Separador de miles",
  "_A_INPUT_CURRENCY_GROUP_VALIDATION_ON_CHANGE_DESCRIPTION_": "Este ejemplo muestra cómo usar <strong lang=\"en\">validation-on-change</strong> en el componente <strong lang=\"en\">AInputCurrency</strong>. En el primer ejemplo, la validación de los valores no se realiza con cada cambio, ya que <strong lang=\"en\">validation-on-change</strong> está configurado en <strong>false</strong>. En el segundo ejemplo, cuando <strong lang=\"en\">validation-on-change</strong> está configurado en <strong>true</strong>, los valores ingresados se validan inmediatamente al cambiar.",
  "_A_INPUT_CURRENCY_GROUP_VALIDATION_ON_CHANGE_HEADER_": "Validación al cambiar",
  "_A_INPUT_CURRENCY_PROPS_CONTROLS_TYPE_DESCRIPTION_": "Define el tipo de elementos de control que se mostrarán junto al campo de entrada. Valores posibles: <strong lang=\"en\">plus-minus</strong> (botones para aumentar y disminuir), <strong lang=\"en\">arrows</strong> (flechas para cambiar valores) o <strong lang=\"en\">none</strong> (sin elementos de control).",
  "_A_INPUT_CURRENCY_PROPS_CURRENCY_SYMBOL_DESCRIPTION_": "Define el símbolo de la moneda que se mostrará en el campo de entrada, como <strong>$</strong>, <strong>€</strong> o <strong>₽</strong>.",
  "_A_INPUT_CURRENCY_PROPS_CURRENCY_SYMBOL_POSITION_DESCRIPTION_": "Determina la posición del símbolo de la moneda con respecto al valor ingresado. Valores posibles: <strong lang=\"en\">left</strong> (a la izquierda del valor) o <strong lang=\"en\">right</strong> (a la derecha del valor).",
  "_A_INPUT_CURRENCY_PROPS_DECIMAL_DIVIDER_DESCRIPTION_": "Define el símbolo que se utilizará como separador decimal. Valores posibles: <strong>.</strong> (punto) o <strong>,</strong> (coma).",
  "_A_INPUT_CURRENCY_PROPS_DECIMAL_PART_LENGTH_DESCRIPTION_": "Determina la cantidad de dígitos después del separador decimal que se mostrarán en el valor.",
  "_A_INPUT_CURRENCY_PROPS_INPUT_WIDTH_DESCRIPTION_": "Define el ancho del campo de entrada. El valor se puede especificar en píxeles o en porcentajes.",
  "_A_INPUT_CURRENCY_PROPS_INTEGER_PART_MAX_LENGTH_DESCRIPTION_": "Define la longitud máxima de la parte entera del valor, expresada en número de dígitos.",
  "_A_INPUT_CURRENCY_PROPS_MAX_DESCRIPTION_": "Define el valor máximo que se puede ingresar en el campo.",
  "_A_INPUT_CURRENCY_PROPS_MIN_DESCRIPTION_": "Define el valor mínimo que se puede ingresar en el campo.",
  "_A_INPUT_CURRENCY_PROPS_MODEL_TYPE_DESCRIPTION_": "Define el tipo de datos que se almacenará en el modelo. Valores posibles: <strong lang=\"en\">number</strong> (valor numérico) o <strong lang=\"en\">string</strong> (valor de cadena).",
  "_A_INPUT_CURRENCY_PROPS_THOUSAND_DIVIDER_DESCRIPTION_": "Define el símbolo utilizado para separar los miles en el valor. Valores posibles: <strong>.</strong> (punto), <strong>,</strong> (coma) o una cadena vacía (sin separador).",
  "_A_INPUT_CURRENCY_PROPS_VALIDATION_ON_CHANGE_DESCRIPTION_": "Si se establece en <strong lang=\"en\">true</strong>, se validará el valor ingresado cada vez que cambie."
}