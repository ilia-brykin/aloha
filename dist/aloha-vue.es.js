import { toRef as f, inject as _e, computed as _, ref as B, withDirectives as xt, h as c, resolveComponent as kr, watch as tt, onBeforeUnmount as Ct, unref as mR, Teleport as ia, onMounted as Vr, onUnmounted as dp, nextTick as au, provide as et, getCurrentInstance as LR, toRefs as bR } from "vue";
import wn from "moment";
/*! @license DOMPurify 3.2.3 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.3/LICENSE */
const {
  entries: cp,
  setPrototypeOf: wA,
  isFrozen: vR,
  getPrototypeOf: IR,
  getOwnPropertyDescriptor: gR
} = Object;
let {
  freeze: fn,
  seal: ar,
  create: fp
} = Object, {
  apply: Sd,
  construct: md
} = typeof Reflect < "u" && Reflect;
fn || (fn = function(t) {
  return t;
});
ar || (ar = function(t) {
  return t;
});
Sd || (Sd = function(t, n, r) {
  return t.apply(n, r);
});
md || (md = function(t, n) {
  return new t(...n);
});
const mo = $n(Array.prototype.forEach), PA = $n(Array.prototype.pop), Vi = $n(Array.prototype.push), Oo = $n(String.prototype.toLowerCase), X_ = $n(String.prototype.toString), FA = $n(String.prototype.match), Wi = $n(String.prototype.replace), yR = $n(String.prototype.indexOf), RR = $n(String.prototype.trim), Sr = $n(Object.prototype.hasOwnProperty), dn = $n(RegExp.prototype.test), Gi = OR(TypeError);
function $n(e) {
  return function(t) {
    for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++)
      r[s - 1] = arguments[s];
    return Sd(e, t, r);
  };
}
function OR(e) {
  return function() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return md(e, n);
  };
}
function ze(e, t) {
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Oo;
  wA && wA(e, null);
  let r = t.length;
  for (; r--; ) {
    let s = t[r];
    if (typeof s == "string") {
      const l = n(s);
      l !== s && (vR(t) || (t[r] = l), s = l);
    }
    e[s] = !0;
  }
  return e;
}
function CR(e) {
  for (let t = 0; t < e.length; t++)
    Sr(e, t) || (e[t] = null);
  return e;
}
function vs(e) {
  const t = fp(null);
  for (const [n, r] of cp(e))
    Sr(e, n) && (Array.isArray(r) ? t[n] = CR(r) : r && typeof r == "object" && r.constructor === Object ? t[n] = vs(r) : t[n] = r);
  return t;
}
function Ki(e, t) {
  for (; e !== null; ) {
    const r = gR(e, t);
    if (r) {
      if (r.get)
        return $n(r.get);
      if (typeof r.value == "function")
        return $n(r.value);
    }
    e = IR(e);
  }
  function n() {
    return null;
  }
  return n;
}
const xA = fn(["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"]), Z_ = fn(["svg", "a", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "filter", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "style", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern"]), J_ = fn(["feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence"]), NR = fn(["animate", "color-profile", "cursor", "discard", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignobject", "hatch", "hatchpath", "mesh", "meshgradient", "meshpatch", "meshrow", "missing-glyph", "script", "set", "solidcolor", "unknown", "use"]), Q_ = fn(["math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover", "mprescripts"]), DR = fn(["maction", "maligngroup", "malignmark", "mlongdiv", "mscarries", "mscarry", "msgroup", "mstack", "msline", "msrow", "semantics", "annotation", "annotation-xml", "mprescripts", "none"]), MA = fn(["#text"]), $A = fn(["accept", "action", "align", "alt", "autocapitalize", "autocomplete", "autopictureinpicture", "autoplay", "background", "bgcolor", "border", "capture", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "controls", "controlslist", "coords", "crossorigin", "datetime", "decoding", "default", "dir", "disabled", "disablepictureinpicture", "disableremoteplayback", "download", "draggable", "enctype", "enterkeyhint", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "inputmode", "integrity", "ismap", "kind", "label", "lang", "list", "loading", "loop", "low", "max", "maxlength", "media", "method", "min", "minlength", "multiple", "muted", "name", "nonce", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "playsinline", "popover", "popovertarget", "popovertargetaction", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "role", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "sizes", "span", "srclang", "start", "src", "srcset", "step", "style", "summary", "tabindex", "title", "translate", "type", "usemap", "valign", "value", "width", "wrap", "xmlns", "slot"]), ed = fn(["accent-height", "accumulate", "additive", "alignment-baseline", "amplitude", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "class", "clip", "clippathunits", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "exponent", "fill", "fill-opacity", "fill-rule", "filter", "filterunits", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "height", "href", "id", "image-rendering", "in", "in2", "intercept", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lang", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "media", "method", "mode", "min", "name", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "preserveaspectratio", "primitiveunits", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "result", "rotate", "scale", "seed", "shape-rendering", "slope", "specularconstant", "specularexponent", "spreadmethod", "startoffset", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "style", "surfacescale", "systemlanguage", "tabindex", "tablevalues", "targetx", "targety", "transform", "transform-origin", "text-anchor", "text-decoration", "text-rendering", "textlength", "type", "u1", "u2", "unicode", "values", "viewbox", "visibility", "version", "vert-adv-y", "vert-origin-x", "vert-origin-y", "width", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "xmlns", "y", "y1", "y2", "z", "zoomandpan"]), qA = fn(["accent", "accentunder", "align", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "dir", "display", "displaystyle", "encoding", "fence", "frame", "height", "href", "id", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "width", "xmlns"]), Lo = fn(["xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"]), BR = ar(/\{\{[\w\W]*|[\w\W]*\}\}/gm), wR = ar(/<%[\w\W]*|[\w\W]*%>/gm), PR = ar(/\$\{[\w\W]*}/gm), FR = ar(/^data-[\-\w.\u00B7-\uFFFF]+$/), xR = ar(/^aria-[\-\w]+$/), hp = ar(
  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i
  // eslint-disable-line no-useless-escape
), MR = ar(/^(?:\w+script|data):/i), $R = ar(
  /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g
  // eslint-disable-line no-control-regex
), Ap = ar(/^html$/i), qR = ar(/^[a-z][.\w]*(-[.\w]+)+$/i);
var kA = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  ARIA_ATTR: xR,
  ATTR_WHITESPACE: $R,
  CUSTOM_ELEMENT: qR,
  DATA_ATTR: FR,
  DOCTYPE_NAME: Ap,
  ERB_EXPR: wR,
  IS_ALLOWED_URI: hp,
  IS_SCRIPT_OR_DATA: MR,
  MUSTACHE_EXPR: BR,
  TMPLIT_EXPR: PR
});
const ji = {
  element: 1,
  text: 3,
  // Deprecated
  progressingInstruction: 7,
  comment: 8,
  document: 9
}, kR = function() {
  return typeof window > "u" ? null : window;
}, UR = function(t, n) {
  if (typeof t != "object" || typeof t.createPolicy != "function")
    return null;
  let r = null;
  const s = "data-tt-policy-suffix";
  n && n.hasAttribute(s) && (r = n.getAttribute(s));
  const l = "dompurify" + (r ? "#" + r : "");
  try {
    return t.createPolicy(l, {
      createHTML(o) {
        return o;
      },
      createScriptURL(o) {
        return o;
      }
    });
  } catch {
    return console.warn("TrustedTypes policy " + l + " could not be created."), null;
  }
}, UA = function() {
  return {
    afterSanitizeAttributes: [],
    afterSanitizeElements: [],
    afterSanitizeShadowDOM: [],
    beforeSanitizeAttributes: [],
    beforeSanitizeElements: [],
    beforeSanitizeShadowDOM: [],
    uponSanitizeAttribute: [],
    uponSanitizeElement: [],
    uponSanitizeShadowNode: []
  };
};
function Ep() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : kR();
  const t = (Re) => Ep(Re);
  if (t.version = "3.2.3", t.removed = [], !e || !e.document || e.document.nodeType !== ji.document)
    return t.isSupported = !1, t;
  let {
    document: n
  } = e;
  const r = n, s = r.currentScript, {
    DocumentFragment: l,
    HTMLTemplateElement: o,
    Node: u,
    Element: h,
    NodeFilter: A,
    NamedNodeMap: E = e.NamedNodeMap || e.MozNamedAttrMap,
    HTMLFormElement: p,
    DOMParser: T,
    trustedTypes: m
  } = e, L = h.prototype, b = Ki(L, "cloneNode"), v = Ki(L, "remove"), I = Ki(L, "nextSibling"), y = Ki(L, "childNodes"), R = Ki(L, "parentNode");
  if (typeof o == "function") {
    const Re = n.createElement("template");
    Re.content && Re.content.ownerDocument && (n = Re.content.ownerDocument);
  }
  let D, w = "";
  const {
    implementation: M,
    createNodeIterator: P,
    createDocumentFragment: x,
    getElementsByTagName: C
  } = n, {
    importNode: q
  } = r;
  let W = UA();
  t.isSupported = typeof cp == "function" && typeof R == "function" && M && M.createHTMLDocument !== void 0;
  const {
    MUSTACHE_EXPR: z,
    ERB_EXPR: oe,
    TMPLIT_EXPR: te,
    DATA_ATTR: ue,
    ARIA_ATTR: re,
    IS_SCRIPT_OR_DATA: ie,
    ATTR_WHITESPACE: Ae,
    CUSTOM_ELEMENT: we
  } = kA;
  let {
    IS_ALLOWED_URI: me
  } = kA, ae = null;
  const Oe = ze({}, [...xA, ...Z_, ...J_, ...Q_, ...MA]);
  let ve = null;
  const Ke = ze({}, [...$A, ...ed, ...qA, ...Lo]);
  let he = Object.seal(fp(null, {
    tagNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    attributeNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    allowCustomizedBuiltInElements: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: !1
    }
  })), k = null, G = null, ee = !0, de = !0, Ne = !1, Fe = !0, Ue = !1, Xe = !0, Ie = !1, Ge = !1, ft = !1, qe = !1, at = !1, _t = !1, bt = !0, It = !1;
  const ur = "user-content-";
  let kn = !0, _r = !1, Jt = {}, Un = null;
  const Hn = ze({}, ["annotation-xml", "audio", "colgroup", "desc", "foreignobject", "head", "iframe", "math", "mi", "mn", "mo", "ms", "mtext", "noembed", "noframes", "noscript", "plaintext", "script", "style", "svg", "template", "thead", "title", "video", "xmp"]);
  let In = null;
  const Or = ze({}, ["audio", "video", "img", "source", "image", "track"]);
  let dr = null;
  const Cr = ze({}, ["alt", "class", "for", "id", "label", "name", "pattern", "placeholder", "role", "summary", "title", "value", "style", "xmlns"]), Vn = "http://www.w3.org/1998/Math/MathML", Wn = "http://www.w3.org/2000/svg", Gt = "http://www.w3.org/1999/xhtml";
  let En = Gt, cr = !1, fr = null;
  const us = ze({}, [Vn, Wn, Gt], X_);
  let Nr = ze({}, ["mi", "mo", "mn", "ms", "mtext"]), Gn = ze({}, ["annotation-xml"]);
  const fa = ze({}, ["title", "style", "font", "a", "script"]);
  let gn = null;
  const _s = ["application/xhtml+xml", "text/html"], ds = "text/html";
  let mt = null, Kn = null;
  const Kr = n.createElement("form"), ha = function(U) {
    return U instanceof RegExp || U instanceof Function;
  }, jr = function() {
    let U = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (!(Kn && Kn === U)) {
      if ((!U || typeof U != "object") && (U = {}), U = vs(U), gn = // eslint-disable-next-line unicorn/prefer-includes
      _s.indexOf(U.PARSER_MEDIA_TYPE) === -1 ? ds : U.PARSER_MEDIA_TYPE, mt = gn === "application/xhtml+xml" ? X_ : Oo, ae = Sr(U, "ALLOWED_TAGS") ? ze({}, U.ALLOWED_TAGS, mt) : Oe, ve = Sr(U, "ALLOWED_ATTR") ? ze({}, U.ALLOWED_ATTR, mt) : Ke, fr = Sr(U, "ALLOWED_NAMESPACES") ? ze({}, U.ALLOWED_NAMESPACES, X_) : us, dr = Sr(U, "ADD_URI_SAFE_ATTR") ? ze(vs(Cr), U.ADD_URI_SAFE_ATTR, mt) : Cr, In = Sr(U, "ADD_DATA_URI_TAGS") ? ze(vs(Or), U.ADD_DATA_URI_TAGS, mt) : Or, Un = Sr(U, "FORBID_CONTENTS") ? ze({}, U.FORBID_CONTENTS, mt) : Hn, k = Sr(U, "FORBID_TAGS") ? ze({}, U.FORBID_TAGS, mt) : {}, G = Sr(U, "FORBID_ATTR") ? ze({}, U.FORBID_ATTR, mt) : {}, Jt = Sr(U, "USE_PROFILES") ? U.USE_PROFILES : !1, ee = U.ALLOW_ARIA_ATTR !== !1, de = U.ALLOW_DATA_ATTR !== !1, Ne = U.ALLOW_UNKNOWN_PROTOCOLS || !1, Fe = U.ALLOW_SELF_CLOSE_IN_ATTR !== !1, Ue = U.SAFE_FOR_TEMPLATES || !1, Xe = U.SAFE_FOR_XML !== !1, Ie = U.WHOLE_DOCUMENT || !1, qe = U.RETURN_DOM || !1, at = U.RETURN_DOM_FRAGMENT || !1, _t = U.RETURN_TRUSTED_TYPE || !1, ft = U.FORCE_BODY || !1, bt = U.SANITIZE_DOM !== !1, It = U.SANITIZE_NAMED_PROPS || !1, kn = U.KEEP_CONTENT !== !1, _r = U.IN_PLACE || !1, me = U.ALLOWED_URI_REGEXP || hp, En = U.NAMESPACE || Gt, Nr = U.MATHML_TEXT_INTEGRATION_POINTS || Nr, Gn = U.HTML_INTEGRATION_POINTS || Gn, he = U.CUSTOM_ELEMENT_HANDLING || {}, U.CUSTOM_ELEMENT_HANDLING && ha(U.CUSTOM_ELEMENT_HANDLING.tagNameCheck) && (he.tagNameCheck = U.CUSTOM_ELEMENT_HANDLING.tagNameCheck), U.CUSTOM_ELEMENT_HANDLING && ha(U.CUSTOM_ELEMENT_HANDLING.attributeNameCheck) && (he.attributeNameCheck = U.CUSTOM_ELEMENT_HANDLING.attributeNameCheck), U.CUSTOM_ELEMENT_HANDLING && typeof U.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements == "boolean" && (he.allowCustomizedBuiltInElements = U.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements), Ue && (de = !1), at && (qe = !0), Jt && (ae = ze({}, MA), ve = [], Jt.html === !0 && (ze(ae, xA), ze(ve, $A)), Jt.svg === !0 && (ze(ae, Z_), ze(ve, ed), ze(ve, Lo)), Jt.svgFilters === !0 && (ze(ae, J_), ze(ve, ed), ze(ve, Lo)), Jt.mathMl === !0 && (ze(ae, Q_), ze(ve, qA), ze(ve, Lo))), U.ADD_TAGS && (ae === Oe && (ae = vs(ae)), ze(ae, U.ADD_TAGS, mt)), U.ADD_ATTR && (ve === Ke && (ve = vs(ve)), ze(ve, U.ADD_ATTR, mt)), U.ADD_URI_SAFE_ATTR && ze(dr, U.ADD_URI_SAFE_ATTR, mt), U.FORBID_CONTENTS && (Un === Hn && (Un = vs(Un)), ze(Un, U.FORBID_CONTENTS, mt)), kn && (ae["#text"] = !0), Ie && ze(ae, ["html", "head", "body"]), ae.table && (ze(ae, ["tbody"]), delete k.tbody), U.TRUSTED_TYPES_POLICY) {
        if (typeof U.TRUSTED_TYPES_POLICY.createHTML != "function")
          throw Gi('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');
        if (typeof U.TRUSTED_TYPES_POLICY.createScriptURL != "function")
          throw Gi('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');
        D = U.TRUSTED_TYPES_POLICY, w = D.createHTML("");
      } else
        D === void 0 && (D = UR(m, s)), D !== null && typeof w == "string" && (w = D.createHTML(""));
      fn && fn(U), Kn = U;
    }
  }, Aa = ze({}, [...Z_, ...J_, ...NR]), Dr = ze({}, [...Q_, ...DR]), Ii = function(U) {
    let se = R(U);
    (!se || !se.tagName) && (se = {
      namespaceURI: En,
      tagName: "template"
    });
    const Le = Oo(U.tagName), dt = Oo(se.tagName);
    return fr[U.namespaceURI] ? U.namespaceURI === Wn ? se.namespaceURI === Gt ? Le === "svg" : se.namespaceURI === Vn ? Le === "svg" && (dt === "annotation-xml" || Nr[dt]) : !!Aa[Le] : U.namespaceURI === Vn ? se.namespaceURI === Gt ? Le === "math" : se.namespaceURI === Wn ? Le === "math" && Gn[dt] : !!Dr[Le] : U.namespaceURI === Gt ? se.namespaceURI === Wn && !Gn[dt] || se.namespaceURI === Vn && !Nr[dt] ? !1 : !Dr[Le] && (fa[Le] || !Aa[Le]) : !!(gn === "application/xhtml+xml" && fr[U.namespaceURI]) : !1;
  }, Qt = function(U) {
    Vi(t.removed, {
      element: U
    });
    try {
      R(U).removeChild(U);
    } catch {
      v(U);
    }
  }, Ea = function(U, se) {
    try {
      Vi(t.removed, {
        attribute: se.getAttributeNode(U),
        from: se
      });
    } catch {
      Vi(t.removed, {
        attribute: null,
        from: se
      });
    }
    if (se.removeAttribute(U), U === "is")
      if (qe || at)
        try {
          Qt(se);
        } catch {
        }
      else
        try {
          se.setAttribute(U, "");
        } catch {
        }
  }, ks = function(U) {
    let se = null, Le = null;
    if (ft)
      U = "<remove></remove>" + U;
    else {
      const gt = FA(U, /^[\r\n\t ]+/);
      Le = gt && gt[0];
    }
    gn === "application/xhtml+xml" && En === Gt && (U = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + U + "</body></html>");
    const dt = D ? D.createHTML(U) : U;
    if (En === Gt)
      try {
        se = new T().parseFromString(dt, gn);
      } catch {
      }
    if (!se || !se.documentElement) {
      se = M.createDocument(En, "template", null);
      try {
        se.documentElement.innerHTML = cr ? w : dt;
      } catch {
      }
    }
    const Ut = se.body || se.documentElement;
    return U && Le && Ut.insertBefore(n.createTextNode(Le), Ut.childNodes[0] || null), En === Gt ? C.call(se, Ie ? "html" : "body")[0] : Ie ? se.documentElement : Ut;
  }, Us = function(U) {
    return P.call(
      U.ownerDocument || U,
      U,
      // eslint-disable-next-line no-bitwise
      A.SHOW_ELEMENT | A.SHOW_COMMENT | A.SHOW_TEXT | A.SHOW_PROCESSING_INSTRUCTION | A.SHOW_CDATA_SECTION,
      null
    );
  }, hr = function(U) {
    return U instanceof p && (typeof U.nodeName != "string" || typeof U.textContent != "string" || typeof U.removeChild != "function" || !(U.attributes instanceof E) || typeof U.removeAttribute != "function" || typeof U.setAttribute != "function" || typeof U.namespaceURI != "string" || typeof U.insertBefore != "function" || typeof U.hasChildNodes != "function");
  }, cs = function(U) {
    return typeof u == "function" && U instanceof u;
  };
  function ln(Re, U, se) {
    mo(Re, (Le) => {
      Le.call(t, U, se, Kn);
    });
  }
  const Hs = function(U) {
    let se = null;
    if (ln(W.beforeSanitizeElements, U, null), hr(U))
      return Qt(U), !0;
    const Le = mt(U.nodeName);
    if (ln(W.uponSanitizeElement, U, {
      tagName: Le,
      allowedTags: ae
    }), U.hasChildNodes() && !cs(U.firstElementChild) && dn(/<[/\w]/g, U.innerHTML) && dn(/<[/\w]/g, U.textContent) || U.nodeType === ji.progressingInstruction || Xe && U.nodeType === ji.comment && dn(/<[/\w]/g, U.data))
      return Qt(U), !0;
    if (!ae[Le] || k[Le]) {
      if (!k[Le] && gi(Le) && (he.tagNameCheck instanceof RegExp && dn(he.tagNameCheck, Le) || he.tagNameCheck instanceof Function && he.tagNameCheck(Le)))
        return !1;
      if (kn && !Un[Le]) {
        const dt = R(U) || U.parentNode, Ut = y(U) || U.childNodes;
        if (Ut && dt) {
          const gt = Ut.length;
          for (let en = gt - 1; en >= 0; --en) {
            const jn = b(Ut[en], !0);
            jn.__removalCount = (U.__removalCount || 0) + 1, dt.insertBefore(jn, I(U));
          }
        }
      }
      return Qt(U), !0;
    }
    return U instanceof h && !Ii(U) || (Le === "noscript" || Le === "noembed" || Le === "noframes") && dn(/<\/no(script|embed|frames)/i, U.innerHTML) ? (Qt(U), !0) : (Ue && U.nodeType === ji.text && (se = U.textContent, mo([z, oe, te], (dt) => {
      se = Wi(se, dt, " ");
    }), U.textContent !== se && (Vi(t.removed, {
      element: U.cloneNode()
    }), U.textContent = se)), ln(W.afterSanitizeElements, U, null), !1);
  }, Dl = function(U, se, Le) {
    if (bt && (se === "id" || se === "name") && (Le in n || Le in Kr))
      return !1;
    if (!(de && !G[se] && dn(ue, se))) {
      if (!(ee && dn(re, se))) {
        if (!ve[se] || G[se]) {
          if (
            // First condition does a very basic check if a) it's basically a valid custom element tagname AND
            // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck
            !(gi(U) && (he.tagNameCheck instanceof RegExp && dn(he.tagNameCheck, U) || he.tagNameCheck instanceof Function && he.tagNameCheck(U)) && (he.attributeNameCheck instanceof RegExp && dn(he.attributeNameCheck, se) || he.attributeNameCheck instanceof Function && he.attributeNameCheck(se)) || // Alternative, second condition checks if it's an `is`-attribute, AND
            // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            se === "is" && he.allowCustomizedBuiltInElements && (he.tagNameCheck instanceof RegExp && dn(he.tagNameCheck, Le) || he.tagNameCheck instanceof Function && he.tagNameCheck(Le)))
          ) return !1;
        } else if (!dr[se]) {
          if (!dn(me, Wi(Le, Ae, ""))) {
            if (!((se === "src" || se === "xlink:href" || se === "href") && U !== "script" && yR(Le, "data:") === 0 && In[U])) {
              if (!(Ne && !dn(ie, Wi(Le, Ae, "")))) {
                if (Le)
                  return !1;
              }
            }
          }
        }
      }
    }
    return !0;
  }, gi = function(U) {
    return U !== "annotation-xml" && FA(U, we);
  }, Bl = function(U) {
    ln(W.beforeSanitizeAttributes, U, null);
    const {
      attributes: se
    } = U;
    if (!se || hr(U))
      return;
    const Le = {
      attrName: "",
      attrValue: "",
      keepAttr: !0,
      allowedAttributes: ve,
      forceKeepAttr: void 0
    };
    let dt = se.length;
    for (; dt--; ) {
      const Ut = se[dt], {
        name: gt,
        namespaceURI: en,
        value: jn
      } = Ut, fs = mt(gt);
      let Ht = gt === "value" ? jn : RR(jn);
      if (Le.attrName = fs, Le.attrValue = Ht, Le.keepAttr = !0, Le.forceKeepAttr = void 0, ln(W.uponSanitizeAttribute, U, Le), Ht = Le.attrValue, It && (fs === "id" || fs === "name") && (Ea(gt, U), Ht = ur + Ht), Xe && dn(/((--!?|])>)|<\/(style|title)/i, Ht)) {
        Ea(gt, U);
        continue;
      }
      if (Le.forceKeepAttr || (Ea(gt, U), !Le.keepAttr))
        continue;
      if (!Fe && dn(/\/>/i, Ht)) {
        Ea(gt, U);
        continue;
      }
      Ue && mo([z, oe, te], (Ri) => {
        Ht = Wi(Ht, Ri, " ");
      });
      const yi = mt(U.nodeName);
      if (Dl(yi, fs, Ht)) {
        if (D && typeof m == "object" && typeof m.getAttributeType == "function" && !en)
          switch (m.getAttributeType(yi, fs)) {
            case "TrustedHTML": {
              Ht = D.createHTML(Ht);
              break;
            }
            case "TrustedScriptURL": {
              Ht = D.createScriptURL(Ht);
              break;
            }
          }
        try {
          en ? U.setAttributeNS(en, gt, Ht) : U.setAttribute(gt, Ht), hr(U) ? Qt(U) : PA(t.removed);
        } catch {
        }
      }
    }
    ln(W.afterSanitizeAttributes, U, null);
  }, qu = function Re(U) {
    let se = null;
    const Le = Us(U);
    for (ln(W.beforeSanitizeShadowDOM, U, null); se = Le.nextNode(); )
      ln(W.uponSanitizeShadowNode, se, null), Hs(se), Bl(se), se.content instanceof l && Re(se.content);
    ln(W.afterSanitizeShadowDOM, U, null);
  };
  return t.sanitize = function(Re) {
    let U = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, se = null, Le = null, dt = null, Ut = null;
    if (cr = !Re, cr && (Re = "<!-->"), typeof Re != "string" && !cs(Re))
      if (typeof Re.toString == "function") {
        if (Re = Re.toString(), typeof Re != "string")
          throw Gi("dirty is not a string, aborting");
      } else
        throw Gi("toString is not a function");
    if (!t.isSupported)
      return Re;
    if (Ge || jr(U), t.removed = [], typeof Re == "string" && (_r = !1), _r) {
      if (Re.nodeName) {
        const jn = mt(Re.nodeName);
        if (!ae[jn] || k[jn])
          throw Gi("root node is forbidden and cannot be sanitized in-place");
      }
    } else if (Re instanceof u)
      se = ks("<!---->"), Le = se.ownerDocument.importNode(Re, !0), Le.nodeType === ji.element && Le.nodeName === "BODY" || Le.nodeName === "HTML" ? se = Le : se.appendChild(Le);
    else {
      if (!qe && !Ue && !Ie && // eslint-disable-next-line unicorn/prefer-includes
      Re.indexOf("<") === -1)
        return D && _t ? D.createHTML(Re) : Re;
      if (se = ks(Re), !se)
        return qe ? null : _t ? w : "";
    }
    se && ft && Qt(se.firstChild);
    const gt = Us(_r ? Re : se);
    for (; dt = gt.nextNode(); )
      Hs(dt), Bl(dt), dt.content instanceof l && qu(dt.content);
    if (_r)
      return Re;
    if (qe) {
      if (at)
        for (Ut = x.call(se.ownerDocument); se.firstChild; )
          Ut.appendChild(se.firstChild);
      else
        Ut = se;
      return (ve.shadowroot || ve.shadowrootmode) && (Ut = q.call(r, Ut, !0)), Ut;
    }
    let en = Ie ? se.outerHTML : se.innerHTML;
    return Ie && ae["!doctype"] && se.ownerDocument && se.ownerDocument.doctype && se.ownerDocument.doctype.name && dn(Ap, se.ownerDocument.doctype.name) && (en = "<!DOCTYPE " + se.ownerDocument.doctype.name + `>
` + en), Ue && mo([z, oe, te], (jn) => {
      en = Wi(en, jn, " ");
    }), D && _t ? D.createHTML(en) : en;
  }, t.setConfig = function() {
    let Re = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    jr(Re), Ge = !0;
  }, t.clearConfig = function() {
    Kn = null, Ge = !1;
  }, t.isValidAttribute = function(Re, U, se) {
    Kn || jr({});
    const Le = mt(Re), dt = mt(U);
    return Dl(Le, dt, se);
  }, t.addHook = function(Re, U) {
    typeof U == "function" && Vi(W[Re], U);
  }, t.removeHook = function(Re) {
    return PA(W[Re]);
  }, t.removeHooks = function(Re) {
    W[Re] = [];
  }, t.removeAllHooks = function() {
    W = UA();
  }, t;
}
var ec = Ep(), pp = typeof global == "object" && global && global.Object === Object && global, HR = typeof self == "object" && self && self.Object === Object && self, lr = pp || HR || Function("return this")(), sr = lr.Symbol, Tp = Object.prototype, VR = Tp.hasOwnProperty, WR = Tp.toString, zi = sr ? sr.toStringTag : void 0;
function GR(e) {
  var t = VR.call(e, zi), n = e[zi];
  try {
    e[zi] = void 0;
    var r = !0;
  } catch {
  }
  var s = WR.call(e);
  return r && (t ? e[zi] = n : delete e[zi]), s;
}
var KR = Object.prototype, jR = KR.toString;
function zR(e) {
  return jR.call(e);
}
var YR = "[object Null]", XR = "[object Undefined]", HA = sr ? sr.toStringTag : void 0;
function la(e) {
  return e == null ? e === void 0 ? XR : YR : HA && HA in Object(e) ? GR(e) : zR(e);
}
function ir(e) {
  return e != null && typeof e == "object";
}
var ZR = "[object Symbol]";
function Os(e) {
  return typeof e == "symbol" || ir(e) && la(e) == ZR;
}
function ii(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, s = Array(r); ++n < r; )
    s[n] = t(e[n], n, e);
  return s;
}
var Se = Array.isArray, VA = sr ? sr.prototype : void 0, WA = VA ? VA.toString : void 0;
function El(e) {
  if (typeof e == "string")
    return e;
  if (Se(e))
    return ii(e, El) + "";
  if (Os(e))
    return WA ? WA.call(e) : "";
  var t = e + "";
  return t == "0" && 1 / e == -1 / 0 ? "-0" : t;
}
var JR = /\s/;
function QR(e) {
  for (var t = e.length; t-- && JR.test(e.charAt(t)); )
    ;
  return t;
}
var eO = /^\s+/;
function tO(e) {
  return e && e.slice(0, QR(e) + 1).replace(eO, "");
}
function qn(e) {
  var t = typeof e;
  return e != null && (t == "object" || t == "function");
}
var GA = NaN, nO = /^[-+]0x[0-9a-f]+$/i, rO = /^0b[01]+$/i, aO = /^0o[0-7]+$/i, sO = parseInt;
function _i(e) {
  if (typeof e == "number")
    return e;
  if (Os(e))
    return GA;
  if (qn(e)) {
    var t = typeof e.valueOf == "function" ? e.valueOf() : e;
    e = qn(t) ? t + "" : t;
  }
  if (typeof e != "string")
    return e === 0 ? e : +e;
  e = tO(e);
  var n = rO.test(e);
  return n || aO.test(e) ? sO(e.slice(2), n ? 2 : 8) : nO.test(e) ? GA : +e;
}
var iO = 1 / 0, lO = 17976931348623157e292;
function Co(e) {
  if (!e)
    return e === 0 ? e : 0;
  if (e = _i(e), e === iO || e === -1 / 0) {
    var t = e < 0 ? -1 : 1;
    return t * lO;
  }
  return e === e ? e : 0;
}
function Wr(e) {
  var t = Co(e), n = t % 1;
  return t === t ? n ? t - n : t : 0;
}
function Ps(e) {
  return e;
}
var oO = "[object AsyncFunction]", uO = "[object Function]", _O = "[object GeneratorFunction]", dO = "[object Proxy]";
function Me(e) {
  if (!qn(e))
    return !1;
  var t = la(e);
  return t == uO || t == _O || t == oO || t == dO;
}
var td = lr["__core-js_shared__"], KA = function() {
  var e = /[^.]+$/.exec(td && td.keys && td.keys.IE_PROTO || "");
  return e ? "Symbol(src)_1." + e : "";
}();
function cO(e) {
  return !!KA && KA in e;
}
var fO = Function.prototype, hO = fO.toString;
function Fs(e) {
  if (e != null) {
    try {
      return hO.call(e);
    } catch {
    }
    try {
      return e + "";
    } catch {
    }
  }
  return "";
}
var AO = /[\\^$.*+?()[\]{}|]/g, EO = /^\[object .+?Constructor\]$/, pO = Function.prototype, TO = Object.prototype, SO = pO.toString, mO = TO.hasOwnProperty, LO = RegExp(
  "^" + SO.call(mO).replace(AO, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function bO(e) {
  if (!qn(e) || cO(e))
    return !1;
  var t = Me(e) ? LO : EO;
  return t.test(Fs(e));
}
function vO(e, t) {
  return e == null ? void 0 : e[t];
}
function xs(e, t) {
  var n = vO(e, t);
  return bO(n) ? n : void 0;
}
var Ld = xs(lr, "WeakMap"), jA = Object.create, IO = /* @__PURE__ */ function() {
  function e() {
  }
  return function(t) {
    if (!qn(t))
      return {};
    if (jA)
      return jA(t);
    e.prototype = t;
    var n = new e();
    return e.prototype = void 0, n;
  };
}();
function gO(e, t, n) {
  switch (n.length) {
    case 0:
      return e.call(t);
    case 1:
      return e.call(t, n[0]);
    case 2:
      return e.call(t, n[0], n[1]);
    case 3:
      return e.call(t, n[0], n[1], n[2]);
  }
  return e.apply(t, n);
}
function yO() {
}
function RO(e, t) {
  var n = -1, r = e.length;
  for (t || (t = Array(r)); ++n < r; )
    t[n] = e[n];
  return t;
}
var OO = 800, CO = 16, NO = Date.now;
function DO(e) {
  var t = 0, n = 0;
  return function() {
    var r = NO(), s = CO - (r - n);
    if (n = r, s > 0) {
      if (++t >= OO)
        return arguments[0];
    } else
      t = 0;
    return e.apply(void 0, arguments);
  };
}
function BO(e) {
  return function() {
    return e;
  };
}
var ko = function() {
  try {
    var e = xs(Object, "defineProperty");
    return e({}, "", {}), e;
  } catch {
  }
}(), wO = ko ? function(e, t) {
  return ko(e, "toString", {
    configurable: !0,
    enumerable: !1,
    value: BO(t),
    writable: !0
  });
} : Ps, PO = DO(wO);
function Sp(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r && t(e[n], n, e) !== !1; )
    ;
  return e;
}
function mp(e, t, n, r) {
  for (var s = e.length, l = n + -1; ++l < s; )
    if (t(e[l], l, e))
      return l;
  return -1;
}
function FO(e) {
  return e !== e;
}
function xO(e, t, n) {
  for (var r = n - 1, s = e.length; ++r < s; )
    if (e[r] === t)
      return r;
  return -1;
}
function Lp(e, t, n) {
  return t === t ? xO(e, t, n) : mp(e, FO, n);
}
function bp(e, t) {
  var n = e == null ? 0 : e.length;
  return !!n && Lp(e, t, 0) > -1;
}
var MO = 9007199254740991, $O = /^(?:0|[1-9]\d*)$/;
function su(e, t) {
  var n = typeof e;
  return t = t ?? MO, !!t && (n == "number" || n != "symbol" && $O.test(e)) && e > -1 && e % 1 == 0 && e < t;
}
function tc(e, t, n) {
  t == "__proto__" && ko ? ko(e, t, {
    configurable: !0,
    enumerable: !0,
    value: n,
    writable: !0
  }) : e[t] = n;
}
function iu(e, t) {
  return e === t || e !== e && t !== t;
}
var qO = Object.prototype, kO = qO.hasOwnProperty;
function lu(e, t, n) {
  var r = e[t];
  (!(kO.call(e, t) && iu(r, n)) || n === void 0 && !(t in e)) && tc(e, t, n);
}
function pl(e, t, n, r) {
  var s = !n;
  n || (n = {});
  for (var l = -1, o = t.length; ++l < o; ) {
    var u = t[l], h = void 0;
    h === void 0 && (h = e[u]), s ? tc(n, u, h) : lu(n, u, h);
  }
  return n;
}
var zA = Math.max;
function UO(e, t, n) {
  return t = zA(t === void 0 ? e.length - 1 : t, 0), function() {
    for (var r = arguments, s = -1, l = zA(r.length - t, 0), o = Array(l); ++s < l; )
      o[s] = r[t + s];
    s = -1;
    for (var u = Array(t + 1); ++s < t; )
      u[s] = r[s];
    return u[t] = n(o), gO(e, this, u);
  };
}
function ou(e, t) {
  return PO(UO(e, t, Ps), e + "");
}
var HO = 9007199254740991;
function nc(e) {
  return typeof e == "number" && e > -1 && e % 1 == 0 && e <= HO;
}
function gr(e) {
  return e != null && nc(e.length) && !Me(e);
}
function Uo(e, t, n) {
  if (!qn(n))
    return !1;
  var r = typeof t;
  return (r == "number" ? gr(n) && su(t, n.length) : r == "string" && t in n) ? iu(n[t], e) : !1;
}
function VO(e) {
  return ou(function(t, n) {
    var r = -1, s = n.length, l = s > 1 ? n[s - 1] : void 0, o = s > 2 ? n[2] : void 0;
    for (l = e.length > 3 && typeof l == "function" ? (s--, l) : void 0, o && Uo(n[0], n[1], o) && (l = s < 3 ? void 0 : l, s = 1), t = Object(t); ++r < s; ) {
      var u = n[r];
      u && e(t, u, r, l);
    }
    return t;
  });
}
var WO = Object.prototype;
function Tl(e) {
  var t = e && e.constructor, n = typeof t == "function" && t.prototype || WO;
  return e === n;
}
function vp(e, t) {
  for (var n = -1, r = Array(e); ++n < e; )
    r[n] = t(n);
  return r;
}
var GO = "[object Arguments]";
function YA(e) {
  return ir(e) && la(e) == GO;
}
var Ip = Object.prototype, KO = Ip.hasOwnProperty, jO = Ip.propertyIsEnumerable, uu = YA(/* @__PURE__ */ function() {
  return arguments;
}()) ? YA : function(e) {
  return ir(e) && KO.call(e, "callee") && !jO.call(e, "callee");
};
function zO() {
  return !1;
}
var gp = typeof exports == "object" && exports && !exports.nodeType && exports, XA = gp && typeof module == "object" && module && !module.nodeType && module, YO = XA && XA.exports === gp, ZA = YO ? lr.Buffer : void 0, XO = ZA ? ZA.isBuffer : void 0, sl = XO || zO, ZO = "[object Arguments]", JO = "[object Array]", QO = "[object Boolean]", eC = "[object Date]", tC = "[object Error]", nC = "[object Function]", rC = "[object Map]", aC = "[object Number]", sC = "[object Object]", iC = "[object RegExp]", lC = "[object Set]", oC = "[object String]", uC = "[object WeakMap]", _C = "[object ArrayBuffer]", dC = "[object DataView]", cC = "[object Float32Array]", fC = "[object Float64Array]", hC = "[object Int8Array]", AC = "[object Int16Array]", EC = "[object Int32Array]", pC = "[object Uint8Array]", TC = "[object Uint8ClampedArray]", SC = "[object Uint16Array]", mC = "[object Uint32Array]", Tt = {};
Tt[cC] = Tt[fC] = Tt[hC] = Tt[AC] = Tt[EC] = Tt[pC] = Tt[TC] = Tt[SC] = Tt[mC] = !0;
Tt[ZO] = Tt[JO] = Tt[_C] = Tt[QO] = Tt[dC] = Tt[eC] = Tt[tC] = Tt[nC] = Tt[rC] = Tt[aC] = Tt[sC] = Tt[iC] = Tt[lC] = Tt[oC] = Tt[uC] = !1;
function LC(e) {
  return ir(e) && nc(e.length) && !!Tt[la(e)];
}
function _u(e) {
  return function(t) {
    return e(t);
  };
}
var yp = typeof exports == "object" && exports && !exports.nodeType && exports, Qi = yp && typeof module == "object" && module && !module.nodeType && module, bC = Qi && Qi.exports === yp, nd = bC && pp.process, di = function() {
  try {
    var e = Qi && Qi.require && Qi.require("util").types;
    return e || nd && nd.binding && nd.binding("util");
  } catch {
  }
}(), JA = di && di.isTypedArray, rc = JA ? _u(JA) : LC, vC = Object.prototype, IC = vC.hasOwnProperty;
function Rp(e, t) {
  var n = Se(e), r = !n && uu(e), s = !n && !r && sl(e), l = !n && !r && !s && rc(e), o = n || r || s || l, u = o ? vp(e.length, String) : [], h = u.length;
  for (var A in e)
    (t || IC.call(e, A)) && !(o && // Safari 9 has enumerable `arguments.length` in strict mode.
    (A == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    s && (A == "offset" || A == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    l && (A == "buffer" || A == "byteLength" || A == "byteOffset") || // Skip index properties.
    su(A, h))) && u.push(A);
  return u;
}
function Op(e, t) {
  return function(n) {
    return e(t(n));
  };
}
var gC = Op(Object.keys, Object), yC = Object.prototype, RC = yC.hasOwnProperty;
function ac(e) {
  if (!Tl(e))
    return gC(e);
  var t = [];
  for (var n in Object(e))
    RC.call(e, n) && n != "constructor" && t.push(n);
  return t;
}
function oa(e) {
  return gr(e) ? Rp(e) : ac(e);
}
var OC = Object.prototype, CC = OC.hasOwnProperty, bd = VO(function(e, t) {
  if (Tl(t) || gr(t)) {
    pl(t, oa(t), e);
    return;
  }
  for (var n in t)
    CC.call(t, n) && lu(e, n, t[n]);
});
function NC(e) {
  var t = [];
  if (e != null)
    for (var n in Object(e))
      t.push(n);
  return t;
}
var DC = Object.prototype, BC = DC.hasOwnProperty;
function wC(e) {
  if (!qn(e))
    return NC(e);
  var t = Tl(e), n = [];
  for (var r in e)
    r == "constructor" && (t || !BC.call(e, r)) || n.push(r);
  return n;
}
function sc(e) {
  return gr(e) ? Rp(e, !0) : wC(e);
}
var PC = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, FC = /^\w*$/;
function ic(e, t) {
  if (Se(e))
    return !1;
  var n = typeof e;
  return n == "number" || n == "symbol" || n == "boolean" || e == null || Os(e) ? !0 : FC.test(e) || !PC.test(e) || t != null && e in Object(t);
}
var il = xs(Object, "create");
function xC() {
  this.__data__ = il ? il(null) : {}, this.size = 0;
}
function MC(e) {
  var t = this.has(e) && delete this.__data__[e];
  return this.size -= t ? 1 : 0, t;
}
var $C = "__lodash_hash_undefined__", qC = Object.prototype, kC = qC.hasOwnProperty;
function UC(e) {
  var t = this.__data__;
  if (il) {
    var n = t[e];
    return n === $C ? void 0 : n;
  }
  return kC.call(t, e) ? t[e] : void 0;
}
var HC = Object.prototype, VC = HC.hasOwnProperty;
function WC(e) {
  var t = this.__data__;
  return il ? t[e] !== void 0 : VC.call(t, e);
}
var GC = "__lodash_hash_undefined__";
function KC(e, t) {
  var n = this.__data__;
  return this.size += this.has(e) ? 0 : 1, n[e] = il && t === void 0 ? GC : t, this;
}
function Cs(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
Cs.prototype.clear = xC;
Cs.prototype.delete = MC;
Cs.prototype.get = UC;
Cs.prototype.has = WC;
Cs.prototype.set = KC;
function jC() {
  this.__data__ = [], this.size = 0;
}
function du(e, t) {
  for (var n = e.length; n--; )
    if (iu(e[n][0], t))
      return n;
  return -1;
}
var zC = Array.prototype, YC = zC.splice;
function XC(e) {
  var t = this.__data__, n = du(t, e);
  if (n < 0)
    return !1;
  var r = t.length - 1;
  return n == r ? t.pop() : YC.call(t, n, 1), --this.size, !0;
}
function ZC(e) {
  var t = this.__data__, n = du(t, e);
  return n < 0 ? void 0 : t[n][1];
}
function JC(e) {
  return du(this.__data__, e) > -1;
}
function QC(e, t) {
  var n = this.__data__, r = du(n, e);
  return r < 0 ? (++this.size, n.push([e, t])) : n[r][1] = t, this;
}
function ua(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
ua.prototype.clear = jC;
ua.prototype.delete = XC;
ua.prototype.get = ZC;
ua.prototype.has = JC;
ua.prototype.set = QC;
var ll = xs(lr, "Map");
function eN() {
  this.size = 0, this.__data__ = {
    hash: new Cs(),
    map: new (ll || ua)(),
    string: new Cs()
  };
}
function tN(e) {
  var t = typeof e;
  return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null;
}
function cu(e, t) {
  var n = e.__data__;
  return tN(t) ? n[typeof t == "string" ? "string" : "hash"] : n.map;
}
function nN(e) {
  var t = cu(this, e).delete(e);
  return this.size -= t ? 1 : 0, t;
}
function rN(e) {
  return cu(this, e).get(e);
}
function aN(e) {
  return cu(this, e).has(e);
}
function sN(e, t) {
  var n = cu(this, e), r = n.size;
  return n.set(e, t), this.size += n.size == r ? 0 : 1, this;
}
function _a(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
_a.prototype.clear = eN;
_a.prototype.delete = nN;
_a.prototype.get = rN;
_a.prototype.has = aN;
_a.prototype.set = sN;
var iN = "Expected a function";
function lc(e, t) {
  if (typeof e != "function" || t != null && typeof t != "function")
    throw new TypeError(iN);
  var n = function() {
    var r = arguments, s = t ? t.apply(this, r) : r[0], l = n.cache;
    if (l.has(s))
      return l.get(s);
    var o = e.apply(this, r);
    return n.cache = l.set(s, o) || l, o;
  };
  return n.cache = new (lc.Cache || _a)(), n;
}
lc.Cache = _a;
var lN = 500;
function oN(e) {
  var t = lc(e, function(r) {
    return n.size === lN && n.clear(), r;
  }), n = t.cache;
  return t;
}
var uN = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, _N = /\\(\\)?/g, dN = oN(function(e) {
  var t = [];
  return e.charCodeAt(0) === 46 && t.push(""), e.replace(uN, function(n, r, s, l) {
    t.push(s ? l.replace(_N, "$1") : r || n);
  }), t;
});
function qt(e) {
  return e == null ? "" : El(e);
}
function oc(e, t) {
  return Se(e) ? e : ic(e, t) ? [e] : dN(qt(e));
}
function Sl(e) {
  if (typeof e == "string" || Os(e))
    return e;
  var t = e + "";
  return t == "0" && 1 / e == -1 / 0 ? "-0" : t;
}
function uc(e, t) {
  t = oc(t, e);
  for (var n = 0, r = t.length; e != null && n < r; )
    e = e[Sl(t[n++])];
  return n && n == r ? e : void 0;
}
function fe(e, t, n) {
  var r = e == null ? void 0 : uc(e, t);
  return r === void 0 ? n : r;
}
function _c(e, t) {
  for (var n = -1, r = t.length, s = e.length; ++n < r; )
    e[s + n] = t[n];
  return e;
}
var QA = sr ? sr.isConcatSpreadable : void 0;
function cN(e) {
  return Se(e) || uu(e) || !!(QA && e && e[QA]);
}
function dc(e, t, n, r, s) {
  var l = -1, o = e.length;
  for (n || (n = cN), s || (s = []); ++l < o; ) {
    var u = e[l];
    n(u) ? _c(s, u) : r || (s[s.length] = u);
  }
  return s;
}
var cc = Op(Object.getPrototypeOf, Object), fN = "[object Object]", hN = Function.prototype, AN = Object.prototype, Cp = hN.toString, EN = AN.hasOwnProperty, pN = Cp.call(Object);
function nt(e) {
  if (!ir(e) || la(e) != fN)
    return !1;
  var t = cc(e);
  if (t === null)
    return !0;
  var n = EN.call(t, "constructor") && t.constructor;
  return typeof n == "function" && n instanceof n && Cp.call(n) == pN;
}
function Np(e, t, n) {
  var r = -1, s = e.length;
  t < 0 && (t = -t > s ? 0 : s + t), n = n > s ? s : n, n < 0 && (n += s), s = t > n ? 0 : n - t >>> 0, t >>>= 0;
  for (var l = Array(s); ++r < s; )
    l[r] = e[r + t];
  return l;
}
function Dp(e, t, n) {
  var r = e.length;
  return n = n === void 0 ? r : n, !t && n >= r ? e : Np(e, t, n);
}
var TN = "\\ud800-\\udfff", SN = "\\u0300-\\u036f", mN = "\\ufe20-\\ufe2f", LN = "\\u20d0-\\u20ff", bN = SN + mN + LN, vN = "\\ufe0e\\ufe0f", IN = "\\u200d", gN = RegExp("[" + IN + TN + bN + vN + "]");
function fu(e) {
  return gN.test(e);
}
function yN(e) {
  return e.split("");
}
var Bp = "\\ud800-\\udfff", RN = "\\u0300-\\u036f", ON = "\\ufe20-\\ufe2f", CN = "\\u20d0-\\u20ff", NN = RN + ON + CN, DN = "\\ufe0e\\ufe0f", BN = "[" + Bp + "]", vd = "[" + NN + "]", Id = "\\ud83c[\\udffb-\\udfff]", wN = "(?:" + vd + "|" + Id + ")", wp = "[^" + Bp + "]", Pp = "(?:\\ud83c[\\udde6-\\uddff]){2}", Fp = "[\\ud800-\\udbff][\\udc00-\\udfff]", PN = "\\u200d", xp = wN + "?", Mp = "[" + DN + "]?", FN = "(?:" + PN + "(?:" + [wp, Pp, Fp].join("|") + ")" + Mp + xp + ")*", xN = Mp + xp + FN, MN = "(?:" + [wp + vd + "?", vd, Pp, Fp, BN].join("|") + ")", $N = RegExp(Id + "(?=" + Id + ")|" + MN + xN, "g");
function qN(e) {
  return e.match($N) || [];
}
function $p(e) {
  return fu(e) ? qN(e) : yN(e);
}
function kN(e) {
  return function(t) {
    t = qt(t);
    var n = fu(t) ? $p(t) : void 0, r = n ? n[0] : t.charAt(0), s = n ? Dp(n, 1).join("") : t.slice(1);
    return r[e]() + s;
  };
}
var qp = kN("toUpperCase");
function UN(e) {
  return qp(qt(e).toLowerCase());
}
function HN(e, t, n, r) {
  var s = -1, l = e == null ? 0 : e.length;
  for (r && l && (n = e[++s]); ++s < l; )
    n = t(n, e[s], s, e);
  return n;
}
var VN = lr.isFinite, WN = Math.min;
function kp(e) {
  var t = Math[e];
  return function(n, r) {
    if (n = _i(n), r = r == null ? 0 : WN(Wr(r), 292), r && VN(n)) {
      var s = (qt(n) + "e").split("e"), l = t(s[0] + "e" + (+s[1] + r));
      return s = (qt(l) + "e").split("e"), +(s[0] + "e" + (+s[1] - r));
    }
    return t(n);
  };
}
var GN = kp("ceil");
function Up(e, t, n) {
  return e === e && (n !== void 0 && (e = e <= n ? e : n), e = e >= t ? e : t), e;
}
function KN() {
  this.__data__ = new ua(), this.size = 0;
}
function jN(e) {
  var t = this.__data__, n = t.delete(e);
  return this.size = t.size, n;
}
function zN(e) {
  return this.__data__.get(e);
}
function YN(e) {
  return this.__data__.has(e);
}
var XN = 200;
function ZN(e, t) {
  var n = this.__data__;
  if (n instanceof ua) {
    var r = n.__data__;
    if (!ll || r.length < XN - 1)
      return r.push([e, t]), this.size = ++n.size, this;
    n = this.__data__ = new _a(r);
  }
  return n.set(e, t), this.size = n.size, this;
}
function Mr(e) {
  var t = this.__data__ = new ua(e);
  this.size = t.size;
}
Mr.prototype.clear = KN;
Mr.prototype.delete = jN;
Mr.prototype.get = zN;
Mr.prototype.has = YN;
Mr.prototype.set = ZN;
function JN(e, t) {
  return e && pl(t, oa(t), e);
}
function QN(e, t) {
  return e && pl(t, sc(t), e);
}
var Hp = typeof exports == "object" && exports && !exports.nodeType && exports, eE = Hp && typeof module == "object" && module && !module.nodeType && module, eD = eE && eE.exports === Hp, tE = eD ? lr.Buffer : void 0, nE = tE ? tE.allocUnsafe : void 0;
function tD(e, t) {
  if (t)
    return e.slice();
  var n = e.length, r = nE ? nE(n) : new e.constructor(n);
  return e.copy(r), r;
}
function Vp(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, s = 0, l = []; ++n < r; ) {
    var o = e[n];
    t(o, n, e) && (l[s++] = o);
  }
  return l;
}
function Wp() {
  return [];
}
var nD = Object.prototype, rD = nD.propertyIsEnumerable, rE = Object.getOwnPropertySymbols, fc = rE ? function(e) {
  return e == null ? [] : (e = Object(e), Vp(rE(e), function(t) {
    return rD.call(e, t);
  }));
} : Wp;
function aD(e, t) {
  return pl(e, fc(e), t);
}
var sD = Object.getOwnPropertySymbols, Gp = sD ? function(e) {
  for (var t = []; e; )
    _c(t, fc(e)), e = cc(e);
  return t;
} : Wp;
function iD(e, t) {
  return pl(e, Gp(e), t);
}
function Kp(e, t, n) {
  var r = t(e);
  return Se(e) ? r : _c(r, n(e));
}
function gd(e) {
  return Kp(e, oa, fc);
}
function lD(e) {
  return Kp(e, sc, Gp);
}
var yd = xs(lr, "DataView"), Rd = xs(lr, "Promise"), li = xs(lr, "Set"), aE = "[object Map]", oD = "[object Object]", sE = "[object Promise]", iE = "[object Set]", lE = "[object WeakMap]", oE = "[object DataView]", uD = Fs(yd), _D = Fs(ll), dD = Fs(Rd), cD = Fs(li), fD = Fs(Ld), Pn = la;
(yd && Pn(new yd(new ArrayBuffer(1))) != oE || ll && Pn(new ll()) != aE || Rd && Pn(Rd.resolve()) != sE || li && Pn(new li()) != iE || Ld && Pn(new Ld()) != lE) && (Pn = function(e) {
  var t = la(e), n = t == oD ? e.constructor : void 0, r = n ? Fs(n) : "";
  if (r)
    switch (r) {
      case uD:
        return oE;
      case _D:
        return aE;
      case dD:
        return sE;
      case cD:
        return iE;
      case fD:
        return lE;
    }
  return t;
});
var hD = Object.prototype, AD = hD.hasOwnProperty;
function ED(e) {
  var t = e.length, n = new e.constructor(t);
  return t && typeof e[0] == "string" && AD.call(e, "index") && (n.index = e.index, n.input = e.input), n;
}
var Ho = lr.Uint8Array;
function hc(e) {
  var t = new e.constructor(e.byteLength);
  return new Ho(t).set(new Ho(e)), t;
}
function pD(e, t) {
  var n = t ? hc(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.byteLength);
}
var TD = /\w*$/;
function SD(e) {
  var t = new e.constructor(e.source, TD.exec(e));
  return t.lastIndex = e.lastIndex, t;
}
var uE = sr ? sr.prototype : void 0, _E = uE ? uE.valueOf : void 0;
function mD(e) {
  return _E ? Object(_E.call(e)) : {};
}
function LD(e, t) {
  var n = t ? hc(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.length);
}
var bD = "[object Boolean]", vD = "[object Date]", ID = "[object Map]", gD = "[object Number]", yD = "[object RegExp]", RD = "[object Set]", OD = "[object String]", CD = "[object Symbol]", ND = "[object ArrayBuffer]", DD = "[object DataView]", BD = "[object Float32Array]", wD = "[object Float64Array]", PD = "[object Int8Array]", FD = "[object Int16Array]", xD = "[object Int32Array]", MD = "[object Uint8Array]", $D = "[object Uint8ClampedArray]", qD = "[object Uint16Array]", kD = "[object Uint32Array]";
function UD(e, t, n) {
  var r = e.constructor;
  switch (t) {
    case ND:
      return hc(e);
    case bD:
    case vD:
      return new r(+e);
    case DD:
      return pD(e, n);
    case BD:
    case wD:
    case PD:
    case FD:
    case xD:
    case MD:
    case $D:
    case qD:
    case kD:
      return LD(e, n);
    case ID:
      return new r();
    case gD:
    case OD:
      return new r(e);
    case yD:
      return SD(e);
    case RD:
      return new r();
    case CD:
      return mD(e);
  }
}
function HD(e) {
  return typeof e.constructor == "function" && !Tl(e) ? IO(cc(e)) : {};
}
var VD = "[object Map]";
function WD(e) {
  return ir(e) && Pn(e) == VD;
}
var dE = di && di.isMap, GD = dE ? _u(dE) : WD, KD = "[object Set]";
function jD(e) {
  return ir(e) && Pn(e) == KD;
}
var cE = di && di.isSet, zD = cE ? _u(cE) : jD, YD = 1, XD = 2, ZD = 4, jp = "[object Arguments]", JD = "[object Array]", QD = "[object Boolean]", eB = "[object Date]", tB = "[object Error]", zp = "[object Function]", nB = "[object GeneratorFunction]", rB = "[object Map]", aB = "[object Number]", Yp = "[object Object]", sB = "[object RegExp]", iB = "[object Set]", lB = "[object String]", oB = "[object Symbol]", uB = "[object WeakMap]", _B = "[object ArrayBuffer]", dB = "[object DataView]", cB = "[object Float32Array]", fB = "[object Float64Array]", hB = "[object Int8Array]", AB = "[object Int16Array]", EB = "[object Int32Array]", pB = "[object Uint8Array]", TB = "[object Uint8ClampedArray]", SB = "[object Uint16Array]", mB = "[object Uint32Array]", Et = {};
Et[jp] = Et[JD] = Et[_B] = Et[dB] = Et[QD] = Et[eB] = Et[cB] = Et[fB] = Et[hB] = Et[AB] = Et[EB] = Et[rB] = Et[aB] = Et[Yp] = Et[sB] = Et[iB] = Et[lB] = Et[oB] = Et[pB] = Et[TB] = Et[SB] = Et[mB] = !0;
Et[tB] = Et[zp] = Et[uB] = !1;
function el(e, t, n, r, s, l) {
  var o, u = t & YD, h = t & XD, A = t & ZD;
  if (o !== void 0)
    return o;
  if (!qn(e))
    return e;
  var E = Se(e);
  if (E) {
    if (o = ED(e), !u)
      return RO(e, o);
  } else {
    var p = Pn(e), T = p == zp || p == nB;
    if (sl(e))
      return tD(e, u);
    if (p == Yp || p == jp || T && !s) {
      if (o = h || T ? {} : HD(e), !u)
        return h ? iD(e, QN(o, e)) : aD(e, JN(o, e));
    } else {
      if (!Et[p])
        return s ? e : {};
      o = UD(e, p, u);
    }
  }
  l || (l = new Mr());
  var m = l.get(e);
  if (m)
    return m;
  l.set(e, o), zD(e) ? e.forEach(function(v) {
    o.add(el(v, t, n, v, e, l));
  }) : GD(e) && e.forEach(function(v, I) {
    o.set(I, el(v, t, n, I, e, l));
  });
  var L = A ? h ? lD : gd : h ? sc : oa, b = E ? void 0 : L(e);
  return Sp(b || e, function(v, I) {
    b && (I = v, v = e[I]), lu(o, I, el(v, t, n, I, e, l));
  }), o;
}
var LB = 4;
function Xp(e) {
  return el(e, LB);
}
var bB = 1, vB = 4;
function pe(e) {
  return el(e, bB | vB);
}
var IB = "__lodash_hash_undefined__";
function gB(e) {
  return this.__data__.set(e, IB), this;
}
function yB(e) {
  return this.__data__.has(e);
}
function ci(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.__data__ = new _a(); ++t < n; )
    this.add(e[t]);
}
ci.prototype.add = ci.prototype.push = gB;
ci.prototype.has = yB;
function RB(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r; )
    if (t(e[n], n, e))
      return !0;
  return !1;
}
function Ac(e, t) {
  return e.has(t);
}
var OB = 1, CB = 2;
function Zp(e, t, n, r, s, l) {
  var o = n & OB, u = e.length, h = t.length;
  if (u != h && !(o && h > u))
    return !1;
  var A = l.get(e), E = l.get(t);
  if (A && E)
    return A == t && E == e;
  var p = -1, T = !0, m = n & CB ? new ci() : void 0;
  for (l.set(e, t), l.set(t, e); ++p < u; ) {
    var L = e[p], b = t[p];
    if (r)
      var v = o ? r(b, L, p, t, e, l) : r(L, b, p, e, t, l);
    if (v !== void 0) {
      if (v)
        continue;
      T = !1;
      break;
    }
    if (m) {
      if (!RB(t, function(I, y) {
        if (!Ac(m, y) && (L === I || s(L, I, n, r, l)))
          return m.push(y);
      })) {
        T = !1;
        break;
      }
    } else if (!(L === b || s(L, b, n, r, l))) {
      T = !1;
      break;
    }
  }
  return l.delete(e), l.delete(t), T;
}
function NB(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r, s) {
    n[++t] = [s, r];
  }), n;
}
function Ec(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r) {
    n[++t] = r;
  }), n;
}
var DB = 1, BB = 2, wB = "[object Boolean]", PB = "[object Date]", FB = "[object Error]", xB = "[object Map]", MB = "[object Number]", $B = "[object RegExp]", qB = "[object Set]", kB = "[object String]", UB = "[object Symbol]", HB = "[object ArrayBuffer]", VB = "[object DataView]", fE = sr ? sr.prototype : void 0, rd = fE ? fE.valueOf : void 0;
function WB(e, t, n, r, s, l, o) {
  switch (n) {
    case VB:
      if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset)
        return !1;
      e = e.buffer, t = t.buffer;
    case HB:
      return !(e.byteLength != t.byteLength || !l(new Ho(e), new Ho(t)));
    case wB:
    case PB:
    case MB:
      return iu(+e, +t);
    case FB:
      return e.name == t.name && e.message == t.message;
    case $B:
    case kB:
      return e == t + "";
    case xB:
      var u = NB;
    case qB:
      var h = r & DB;
      if (u || (u = Ec), e.size != t.size && !h)
        return !1;
      var A = o.get(e);
      if (A)
        return A == t;
      r |= BB, o.set(e, t);
      var E = Zp(u(e), u(t), r, s, l, o);
      return o.delete(e), E;
    case UB:
      if (rd)
        return rd.call(e) == rd.call(t);
  }
  return !1;
}
var GB = 1, KB = Object.prototype, jB = KB.hasOwnProperty;
function zB(e, t, n, r, s, l) {
  var o = n & GB, u = gd(e), h = u.length, A = gd(t), E = A.length;
  if (h != E && !o)
    return !1;
  for (var p = h; p--; ) {
    var T = u[p];
    if (!(o ? T in t : jB.call(t, T)))
      return !1;
  }
  var m = l.get(e), L = l.get(t);
  if (m && L)
    return m == t && L == e;
  var b = !0;
  l.set(e, t), l.set(t, e);
  for (var v = o; ++p < h; ) {
    T = u[p];
    var I = e[T], y = t[T];
    if (r)
      var R = o ? r(y, I, T, t, e, l) : r(I, y, T, e, t, l);
    if (!(R === void 0 ? I === y || s(I, y, n, r, l) : R)) {
      b = !1;
      break;
    }
    v || (v = T == "constructor");
  }
  if (b && !v) {
    var D = e.constructor, w = t.constructor;
    D != w && "constructor" in e && "constructor" in t && !(typeof D == "function" && D instanceof D && typeof w == "function" && w instanceof w) && (b = !1);
  }
  return l.delete(e), l.delete(t), b;
}
var YB = 1, hE = "[object Arguments]", AE = "[object Array]", bo = "[object Object]", XB = Object.prototype, EE = XB.hasOwnProperty;
function ZB(e, t, n, r, s, l) {
  var o = Se(e), u = Se(t), h = o ? AE : Pn(e), A = u ? AE : Pn(t);
  h = h == hE ? bo : h, A = A == hE ? bo : A;
  var E = h == bo, p = A == bo, T = h == A;
  if (T && sl(e)) {
    if (!sl(t))
      return !1;
    o = !0, E = !1;
  }
  if (T && !E)
    return l || (l = new Mr()), o || rc(e) ? Zp(e, t, n, r, s, l) : WB(e, t, h, n, r, s, l);
  if (!(n & YB)) {
    var m = E && EE.call(e, "__wrapped__"), L = p && EE.call(t, "__wrapped__");
    if (m || L) {
      var b = m ? e.value() : e, v = L ? t.value() : t;
      return l || (l = new Mr()), s(b, v, n, r, l);
    }
  }
  return T ? (l || (l = new Mr()), zB(e, t, n, r, s, l)) : !1;
}
function hu(e, t, n, r, s) {
  return e === t ? !0 : e == null || t == null || !ir(e) && !ir(t) ? e !== e && t !== t : ZB(e, t, n, r, hu, s);
}
var JB = 1, QB = 2;
function ew(e, t, n, r) {
  var s = n.length, l = s;
  if (e == null)
    return !l;
  for (e = Object(e); s--; ) {
    var o = n[s];
    if (o[2] ? o[1] !== e[o[0]] : !(o[0] in e))
      return !1;
  }
  for (; ++s < l; ) {
    o = n[s];
    var u = o[0], h = e[u], A = o[1];
    if (o[2]) {
      if (h === void 0 && !(u in e))
        return !1;
    } else {
      var E = new Mr(), p;
      if (!(p === void 0 ? hu(A, h, JB | QB, r, E) : p))
        return !1;
    }
  }
  return !0;
}
function Jp(e) {
  return e === e && !qn(e);
}
function tw(e) {
  for (var t = oa(e), n = t.length; n--; ) {
    var r = t[n], s = e[r];
    t[n] = [r, s, Jp(s)];
  }
  return t;
}
function Qp(e, t) {
  return function(n) {
    return n == null ? !1 : n[e] === t && (t !== void 0 || e in Object(n));
  };
}
function nw(e) {
  var t = tw(e);
  return t.length == 1 && t[0][2] ? Qp(t[0][0], t[0][1]) : function(n) {
    return n === e || ew(n, e, t);
  };
}
function rw(e, t) {
  return e != null && t in Object(e);
}
function aw(e, t, n) {
  t = oc(t, e);
  for (var r = -1, s = t.length, l = !1; ++r < s; ) {
    var o = Sl(t[r]);
    if (!(l = e != null && n(e, o)))
      break;
    e = e[o];
  }
  return l || ++r != s ? l : (s = e == null ? 0 : e.length, !!s && nc(s) && su(o, s) && (Se(e) || uu(e)));
}
function sw(e, t) {
  return e != null && aw(e, t, rw);
}
var iw = 1, lw = 2;
function ow(e, t) {
  return ic(e) && Jp(t) ? Qp(Sl(e), t) : function(n) {
    var r = fe(n, e);
    return r === void 0 && r === t ? sw(n, e) : hu(t, r, iw | lw);
  };
}
function eT(e) {
  return function(t) {
    return t == null ? void 0 : t[e];
  };
}
function uw(e) {
  return function(t) {
    return uc(t, e);
  };
}
function _w(e) {
  return ic(e) ? eT(Sl(e)) : uw(e);
}
function da(e) {
  return typeof e == "function" ? e : e == null ? Ps : typeof e == "object" ? Se(e) ? ow(e[0], e[1]) : nw(e) : _w(e);
}
function dw(e, t, n, r) {
  for (var s = -1, l = e == null ? 0 : e.length; ++s < l; ) {
    var o = e[s];
    t(r, o, n(o), e);
  }
  return r;
}
function tT(e) {
  return function(t, n, r) {
    for (var s = -1, l = Object(t), o = r(t), u = o.length; u--; ) {
      var h = o[e ? u : ++s];
      if (n(l[h], h, l) === !1)
        break;
    }
    return t;
  };
}
var cw = tT();
function fw(e, t) {
  return e && cw(e, t, oa);
}
function nT(e, t) {
  return function(n, r) {
    if (n == null)
      return n;
    if (!gr(n))
      return e(n, r);
    for (var s = n.length, l = t ? s : -1, o = Object(n); (t ? l-- : ++l < s) && r(o[l], l, o) !== !1; )
      ;
    return n;
  };
}
var pi = nT(fw);
function hw(e, t, n, r) {
  return pi(e, function(s, l, o) {
    t(r, s, n(s), o);
  }), r;
}
function Aw(e, t) {
  return function(n, r) {
    var s = Se(n) ? dw : hw, l = {};
    return s(n, e, da(r), l);
  };
}
var ad = function() {
  return lr.Date.now();
}, Ew = "Expected a function", pw = Math.max, Tw = Math.min;
function ol(e, t, n) {
  var r, s, l, o, u, h, A = 0, E = !1, p = !1, T = !0;
  if (typeof e != "function")
    throw new TypeError(Ew);
  t = _i(t) || 0, qn(n) && (E = !!n.leading, p = "maxWait" in n, l = p ? pw(_i(n.maxWait) || 0, t) : l, T = "trailing" in n ? !!n.trailing : T);
  function m(M) {
    var P = r, x = s;
    return r = s = void 0, A = M, o = e.apply(x, P), o;
  }
  function L(M) {
    return A = M, u = setTimeout(I, t), E ? m(M) : o;
  }
  function b(M) {
    var P = M - h, x = M - A, C = t - P;
    return p ? Tw(C, l - x) : C;
  }
  function v(M) {
    var P = M - h, x = M - A;
    return h === void 0 || P >= t || P < 0 || p && x >= l;
  }
  function I() {
    var M = ad();
    if (v(M))
      return y(M);
    u = setTimeout(I, b(M));
  }
  function y(M) {
    return u = void 0, T && r ? m(M) : (r = s = void 0, o);
  }
  function R() {
    u !== void 0 && clearTimeout(u), A = 0, r = h = s = u = void 0;
  }
  function D() {
    return u === void 0 ? o : y(ad());
  }
  function w() {
    var M = ad(), P = v(M);
    if (r = arguments, s = this, h = M, P) {
      if (u === void 0)
        return L(h);
      if (p)
        return clearTimeout(u), u = setTimeout(I, t), m(h);
    }
    return u === void 0 && (u = setTimeout(I, t)), o;
  }
  return w.cancel = R, w.flush = D, w;
}
function Od(e) {
  return ir(e) && gr(e);
}
var Sw = 200;
function mw(e, t, n, r) {
  var s = -1, l = bp, o = !0, u = e.length, h = [], A = t.length;
  if (!u)
    return h;
  t.length >= Sw && (l = Ac, o = !1, t = new ci(t));
  e:
    for (; ++s < u; ) {
      var E = e[s], p = E;
      if (E = E !== 0 ? E : 0, o && p === p) {
        for (var T = A; T--; )
          if (t[T] === p)
            continue e;
        h.push(E);
      } else l(t, p, r) || h.push(E);
    }
  return h;
}
var Lw = ou(function(e, t) {
  return Od(e) ? mw(e, dc(t, 1, Od, !0)) : [];
});
function fi(e) {
  var t = e == null ? 0 : e.length;
  return t ? e[t - 1] : void 0;
}
function pc(e) {
  return typeof e == "function" ? e : Ps;
}
function Y(e, t) {
  var n = Se(e) ? Sp : pi;
  return n(e, pc(t));
}
function bw(e, t) {
  for (var n = e == null ? 0 : e.length; n-- && t(e[n], n, e) !== !1; )
    ;
  return e;
}
var vw = tT(!0);
function Iw(e, t) {
  return e && vw(e, t, oa);
}
var gw = nT(Iw, !0);
function yw(e, t) {
  var n = Se(e) ? bw : gw;
  return n(e, pc(t));
}
function Rw(e, t, n) {
  e = qt(e), t = El(t);
  var r = e.length;
  n = n === void 0 ? r : Up(Wr(n), 0, r);
  var s = n;
  return n -= t.length, n >= 0 && e.slice(n, s) == t;
}
var rT = /[\\^$.*+?()[\]{}|]/g, Ow = RegExp(rT.source);
function Au(e) {
  return e = qt(e), e && Ow.test(e) ? e.replace(rT, "\\$&") : e;
}
function Cw(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r; )
    if (!t(e[n], n, e))
      return !1;
  return !0;
}
function Nw(e, t) {
  var n = !0;
  return pi(e, function(r, s, l) {
    return n = !!t(r, s, l), n;
  }), n;
}
function aT(e, t, n) {
  var r = Se(e) ? Cw : Nw;
  return r(e, da(t));
}
function Dw(e, t) {
  var n = [];
  return pi(e, function(r, s, l) {
    t(r, s, l) && n.push(r);
  }), n;
}
function Pt(e, t) {
  var n = Se(e) ? Vp : Dw;
  return n(e, da(t));
}
function Bw(e) {
  return function(t, n, r) {
    var s = Object(t);
    if (!gr(t)) {
      var l = da(n);
      t = oa(t), n = function(u) {
        return l(s[u], u, s);
      };
    }
    var o = e(t, n, r);
    return o > -1 ? s[l ? t[o] : o] : void 0;
  };
}
var ww = Math.max;
function sT(e, t, n) {
  var r = e == null ? 0 : e.length;
  if (!r)
    return -1;
  var s = n == null ? 0 : Wr(n);
  return s < 0 && (s = ww(r + s, 0)), mp(e, da(t), s);
}
var Tc = Bw(sT);
function iT(e, t) {
  var n = -1, r = gr(e) ? Array(e.length) : [];
  return pi(e, function(s, l, o) {
    r[++n] = t(s, l, o);
  }), r;
}
function Bn(e, t) {
  var n = Se(e) ? ii : iT;
  return n(e, da(t));
}
function Pw(e, t) {
  return e > t;
}
var Fw = "[object String]";
function ot(e) {
  return typeof e == "string" || !Se(e) && ir(e) && la(e) == Fw;
}
function xw(e, t) {
  return ii(t, function(n) {
    return e[n];
  });
}
function Sc(e) {
  return e == null ? [] : xw(e, oa(e));
}
var Mw = Math.max;
function Cd(e, t, n, r) {
  e = gr(e) ? e : Sc(e), n = n ? Wr(n) : 0;
  var s = e.length;
  return n < 0 && (n = Mw(s + n, 0)), ot(e) ? n <= s && e.indexOf(t, n) > -1 : !!s && Lp(e, t, n) > -1;
}
var $w = "[object Map]", qw = "[object Set]", kw = Object.prototype, Uw = kw.hasOwnProperty;
function cn(e) {
  if (e == null)
    return !0;
  if (gr(e) && (Se(e) || typeof e == "string" || typeof e.splice == "function" || sl(e) || rc(e) || uu(e)))
    return !e.length;
  var t = Pn(e);
  if (t == $w || t == qw)
    return !e.size;
  if (Tl(e))
    return !ac(e).length;
  for (var n in e)
    if (Uw.call(e, n))
      return !1;
  return !0;
}
function mc(e, t) {
  return hu(e, t);
}
function Fa(e) {
  return typeof e == "number" && e == Wr(e);
}
var Hw = "[object Number]";
function vn(e) {
  return typeof e == "number" || ir(e) && la(e) == Hw;
}
function Vw(e) {
  return vn(e) && e != +e;
}
function le(e) {
  return e == null;
}
function Pe(e) {
  return e === void 0;
}
var Da = Aw(function(e, t, n) {
  tc(e, n, t);
});
function Ww(e, t) {
  return e < t;
}
function lT(e, t, n) {
  for (var r = -1, s = e.length; ++r < s; ) {
    var l = e[r], o = t(l);
    if (o != null && (u === void 0 ? o === o && !Os(o) : n(o, u)))
      var u = o, h = l;
  }
  return h;
}
function Gw(e) {
  return e && e.length ? lT(e, Ps, Pw) : void 0;
}
function Kw(e) {
  return e && e.length ? lT(e, Ps, Ww) : void 0;
}
function jw(e, t, n, r) {
  if (!qn(e))
    return e;
  t = oc(t, e);
  for (var s = -1, l = t.length, o = l - 1, u = e; u != null && ++s < l; ) {
    var h = Sl(t[s]), A = n;
    if (h === "__proto__" || h === "constructor" || h === "prototype")
      return e;
    if (s != o) {
      var E = u[h];
      A = void 0, A === void 0 && (A = qn(E) ? E : su(t[s + 1]) ? [] : {});
    }
    lu(u, h, A), u = u[h];
  }
  return e;
}
function zw(e, t) {
  var n = e.length;
  for (e.sort(t); n--; )
    e[n] = e[n].value;
  return e;
}
function Yw(e, t) {
  if (e !== t) {
    var n = e !== void 0, r = e === null, s = e === e, l = Os(e), o = t !== void 0, u = t === null, h = t === t, A = Os(t);
    if (!u && !A && !l && e > t || l && o && h && !u && !A || r && o && h || !n && h || !s)
      return 1;
    if (!r && !l && !A && e < t || A && n && s && !r && !l || u && n && s || !o && s || !h)
      return -1;
  }
  return 0;
}
function Xw(e, t, n) {
  for (var r = -1, s = e.criteria, l = t.criteria, o = s.length, u = n.length; ++r < o; ) {
    var h = Yw(s[r], l[r]);
    if (h) {
      if (r >= u)
        return h;
      var A = n[r];
      return h * (A == "desc" ? -1 : 1);
    }
  }
  return e.index - t.index;
}
function oT(e, t, n) {
  t.length ? t = ii(t, function(l) {
    return Se(l) ? function(o) {
      return uc(o, l.length === 1 ? l[0] : l);
    } : l;
  }) : t = [Ps];
  var r = -1;
  t = ii(t, _u(da));
  var s = iT(e, function(l, o, u) {
    var h = ii(t, function(A) {
      return A(l);
    });
    return { criteria: h, index: ++r, value: l };
  });
  return zw(s, function(l, o) {
    return Xw(l, o, n);
  });
}
function Lc(e, t, n, r) {
  return e == null ? [] : (Se(t) || (t = t == null ? [] : [t]), n = n, Se(n) || (n = n == null ? [] : [n]), oT(e, t, n));
}
var Zw = 9007199254740991, Jw = Math.floor;
function Nd(e, t) {
  var n = "";
  if (!e || t < 1 || t > Zw)
    return n;
  do
    t % 2 && (n += e), t = Jw(t / 2), t && (e += e);
  while (t);
  return n;
}
var Qw = eT("length"), uT = "\\ud800-\\udfff", eP = "\\u0300-\\u036f", tP = "\\ufe20-\\ufe2f", nP = "\\u20d0-\\u20ff", rP = eP + tP + nP, aP = "\\ufe0e\\ufe0f", sP = "[" + uT + "]", Dd = "[" + rP + "]", Bd = "\\ud83c[\\udffb-\\udfff]", iP = "(?:" + Dd + "|" + Bd + ")", _T = "[^" + uT + "]", dT = "(?:\\ud83c[\\udde6-\\uddff]){2}", cT = "[\\ud800-\\udbff][\\udc00-\\udfff]", lP = "\\u200d", fT = iP + "?", hT = "[" + aP + "]?", oP = "(?:" + lP + "(?:" + [_T, dT, cT].join("|") + ")" + hT + fT + ")*", uP = hT + fT + oP, _P = "(?:" + [_T + Dd + "?", Dd, dT, cT, sP].join("|") + ")", pE = RegExp(Bd + "(?=" + Bd + ")|" + _P + uP, "g");
function dP(e) {
  for (var t = pE.lastIndex = 0; pE.test(e); )
    ++t;
  return t;
}
function bc(e) {
  return fu(e) ? dP(e) : Qw(e);
}
var cP = Math.ceil;
function fP(e, t) {
  t = t === void 0 ? " " : El(t);
  var n = t.length;
  if (n < 2)
    return n ? Nd(t, e) : t;
  var r = Nd(t, cP(e / bc(t)));
  return fu(t) ? Dp($p(r), 0, e).join("") : r.slice(0, e);
}
function hP(e, t, n) {
  e = qt(e), t = Wr(t);
  var r = t ? bc(e) : 0;
  return t && r < t ? fP(t - r, n) + e : e;
}
var AP = Math.ceil, EP = Math.max;
function pP(e, t, n, r) {
  for (var s = -1, l = EP(AP((t - e) / (n || 1)), 0), o = Array(l); l--; )
    o[++s] = e, e += n;
  return o;
}
function TP(e) {
  return function(t, n, r) {
    return r && typeof r != "number" && Uo(t, n, r) && (n = r = void 0), t = Co(t), n === void 0 ? (n = t, t = 0) : n = Co(n), r = r === void 0 ? t < n ? 1 : -1 : Co(r), pP(t, n, r);
  };
}
var SP = TP();
function mP(e, t, n, r, s) {
  return s(e, function(l, o, u) {
    n = r ? (r = !1, l) : t(n, l, o, u);
  }), n;
}
function LP(e, t, n) {
  var r = Se(e) ? HN : mP, s = arguments.length < 3;
  return r(e, da(t), n, s, pi);
}
function bP(e, t, n) {
  return t === void 0 ? t = 1 : t = Wr(t), Nd(qt(e), t);
}
var vP = kp("round");
function vc(e, t, n) {
  return e == null ? e : jw(e, t, n);
}
var IP = "[object Map]", gP = "[object Set]";
function Ti(e) {
  if (e == null)
    return 0;
  if (gr(e))
    return ot(e) ? bc(e) : e.length;
  var t = Pn(e);
  return t == IP || t == gP ? e.size : ac(e).length;
}
var wd = ou(function(e, t) {
  if (e == null)
    return [];
  var n = t.length;
  return n > 1 && Uo(e, t[0], t[1]) ? t = [] : n > 2 && Uo(t[0], t[1], t[2]) && (t = [t[0]]), oT(e, dc(t), []);
});
function Ic(e, t, n) {
  return e = qt(e), n = n == null ? 0 : Up(Wr(n), 0, e.length), t = El(t), e.slice(n, n + t.length) == t;
}
function AT(e, t, n) {
  return e && e.length ? (t = t === void 0 ? 1 : Wr(t), Np(e, 0, t < 0 ? 0 : t)) : [];
}
var yP = 9007199254740991, sd = 4294967295, RP = Math.min;
function rr(e, t) {
  if (e = Wr(e), e < 1 || e > yP)
    return [];
  var n = sd, r = RP(e, sd);
  t = pc(t), e -= sd;
  for (var s = vp(r, t); ++n < e; )
    t(n);
  return s;
}
function ET(e) {
  return qt(e).toLowerCase();
}
function pT(e) {
  return qt(e).toUpperCase();
}
var OP = 1 / 0, CP = li && 1 / Ec(new li([, -0]))[1] == OP ? function(e) {
  return new li(e);
} : yO, NP = 200;
function gc(e, t, n) {
  var r = -1, s = bp, l = e.length, o = !0, u = [], h = u;
  if (l >= NP) {
    var A = t ? null : CP(e);
    if (A)
      return Ec(A);
    o = !1, s = Ac, h = new ci();
  } else
    h = t ? [] : u;
  e:
    for (; ++r < l; ) {
      var E = e[r], p = t ? t(E) : E;
      if (E = E !== 0 ? E : 0, o && p === p) {
        for (var T = h.length; T--; )
          if (h[T] === p)
            continue e;
        t && h.push(p), u.push(E);
      } else s(h, p, n) || (h !== u && h.push(p), u.push(E));
    }
  return u;
}
var DP = ou(function(e) {
  return gc(dc(e, 1, Od, !0));
});
function BP(e) {
  return e && e.length ? gc(e) : [];
}
function TT(e, t) {
  return e && e.length ? gc(e, da(t)) : [];
}
var wP = 0;
function st(e) {
  var t = ++wP;
  return qt(e) + t;
}
const B_e = ec, w_e = ec.sanitize;
function Vo(e) {
  return ec.sanitize(PP(e), { ADD_ATTR: ["target"] });
}
function PP(e) {
  return vn(e) ? qt(e) : e;
}
function P_e(e) {
  return !Se(e) || !e.length ? !1 : aT(e, ot);
}
function FP(e) {
  return !Se(e) || !e.length ? !1 : aT(e, Se);
}
function xP(e) {
  const t = Object.keys(e);
  return t.length === 0 ? "" : `<ul class="a_list_without_styles">${t.map((r) => `<li>${e[r]}</li>`).join("")}</ul>`;
}
function MP({ array: e, keyChildren: t }) {
  return ST({ array: e, keyChildren: t, count: 0 });
}
function ST({ array: e, keyChildren: t, count: n = 0 }) {
  return Se(e) && Y(e, (r) => {
    n++;
    const s = fe(r, t);
    n = ST({ array: s, keyChildren: t, count: n });
  }), n;
}
const hn = {
  beforeMount(e, t) {
    e.innerHTML = le(t.value) || t.value === "" ? "" : Vo(t.value);
  },
  updated(e, t) {
    e.innerHTML = le(t.value) || t.value === "" ? "" : Vo(t.value);
  }
};
function $P(e, {
  classButtonLocal: t = _(() => {
  }),
  isOpen: n = _(() => !1),
  toggleLocal: r = () => {
  },
  currentId: s = _(() => "")
}) {
  const l = f(e, "item"), o = _e("classButton"), u = _e("disabled"), h = _e("id"), A = _e("isCaret"), E = _e("keyContent"), p = _e("keyLabel"), T = _e("readonly"), m = _e("withGap"), L = _(() => !!(u.value || l.value.disabled)), b = _(() => Pe(l.value.isCaret) ? A.value : l.value.isCaret), v = _(() => T.value || l.value.readonly), I = _(() => `${h.value}_${s.value}`), y = _(() => v.value ? "div" : "a"), R = _(() => {
    const M = {
      class: ["a_accordion__button", o.value, t.value, {
        a_accordion__button_collapsed: !n.value,
        a_accordion__button_has_not_caret: !b.value,
        a_accordion__button_with_gap: m.value,
        readonly: v.value
      }],
      id: l.value.id
    };
    return v.value || (M.ariaExpanded = n.value, M["aria-controls"] = I.value, M.rolw = "button", M.tabindex = 0, M.disabled = L.value, M.onClick = r), M;
  }), D = _(() => p.value ? fe(l.value, p.value) : ""), w = _(() => E.value ? fe(l.value, E.value) : "");
  return {
    buttonAttributes: R,
    buttonTag: y,
    contentLocal: w,
    idForCollapse: I,
    labelLocal: D
  };
}
function qP(e) {
  const t = f(e, "item"), n = _e("keyChildren"), r = _(() => fe(t.value, n.value, []) || []), s = _(() => r.value.length !== 0);
  return {
    children: r,
    hasChildren: s
  };
}
function kP(e) {
  const t = f(e, "item"), n = _e("keyClassBody"), r = _e("keyClassHeader"), s = _e("keyClassButton"), l = _(() => {
    if (n.value)
      return fe(t.value, n.value);
  }), o = _(() => {
    if (r.value)
      return fe(t.value, r.value);
  }), u = _(() => {
    if (s.value)
      return fe(t.value, s.value);
  });
  return {
    classBodyLocal: l,
    classButtonLocal: u,
    classHeaderLocal: o
  };
}
function UP(e) {
  const t = f(e, "item"), n = _e("keyIsRender"), r = _e("keyIsRenderBodyByFirstOpen"), s = B(!1), l = _(() => {
    if (r.value)
      return fe(t.value, r.value);
  }), o = _(() => l.value ? s.value : !0), u = _(() => n.value ? !!fe(t.value, n.value, !0) : !0);
  return {
    isBodyVisible: o,
    isOpenFirst: s,
    isRender: u
  };
}
const Ye = "_a_id";
function HP(e) {
  const t = f(e, "isParentOpen"), n = f(e, "item"), r = f(e, "itemIndex"), s = f(e, "keyId"), l = f(e, "parentsIds"), o = f(e, "parentIndexes"), u = _e("idsForOpen"), h = _e("toggle"), A = _(() => n.value[Ye]), E = _(() => t.value ? u.value.indexOf(A.value) !== -1 : !1), p = _(() => {
    const I = pe(l.value);
    return I.push(`${A.value}`), I;
  }), T = _(() => o.value.join(".")), m = _(() => T.value ? `${T.value}.${r.value}` : `${r.value}`), L = _(() => {
    const I = pe(o.value);
    return I.push(`${m.value}`), I;
  }), b = (I) => {
    h({
      $event: I,
      parentsIds: l.value,
      isOpen: E.value,
      item: n.value,
      itemIndex: r.value
    });
  };
  return {
    closeItemIfOpen: () => {
      E.value && s.value && b();
    },
    currentId: A,
    isOpen: E,
    parentIndexesForChild: L,
    parentsIdsForChild: p,
    toggleLocal: b
  };
}
const VP = {
  name: "AAccordionItem",
  props: {
    isParentOpen: {
      type: Boolean,
      required: !0
    },
    item: {
      type: Object,
      required: !0
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    parentsIds: {
      type: Array,
      required: !1,
      default: () => []
    },
    parentIndexes: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  inject: [
    "classBody",
    "classHeader",
    "id",
    "withGap"
  ],
  setup(e) {
    const {
      closeItemIfOpen: t,
      currentId: n,
      isOpen: r,
      parentIndexesForChild: s,
      parentsIdsForChild: l,
      toggleLocal: o
    } = HP(e), {
      children: u,
      hasChildren: h
    } = qP(e), {
      classBodyLocal: A,
      classButtonLocal: E,
      classHeaderLocal: p
    } = kP(e), {
      isBodyVisible: T,
      isOpenFirst: m,
      isRender: L
    } = UP(e), {
      buttonAttributes: b,
      buttonTag: v,
      contentLocal: I,
      idForCollapse: y,
      labelLocal: R
    } = $P(e, {
      classButtonLocal: E,
      isOpen: r,
      toggleLocal: o,
      currentId: n
    });
    return tt(r, (D) => {
      D && !m.value && (m.value = !0);
    }, {
      immediate: !0
    }), Ct(() => {
      t();
    }), {
      buttonAttributes: b,
      buttonTag: v,
      children: u,
      classBodyLocal: A,
      classButtonLocal: E,
      classHeaderLocal: p,
      contentLocal: I,
      currentId: n,
      hasChildren: h,
      idForCollapse: y,
      isBodyVisible: T,
      isOpen: r,
      isRender: L,
      labelLocal: R,
      parentIndexesForChild: s,
      parentsIdsForChild: l
    };
  },
  render() {
    let e = [];
    return this.isBodyVisible && (e = [
      this.item.slotContent && this.$slots[this.item.slotContent] ? this.$slots[this.item.slotContent]({
        item: this.item,
        itemIndex: this.itemIndex,
        parentsIds: this.parentsIds,
        parentIndexes: this.parentIndexes,
        id: this.id,
        currentId: this.currentId
      }) : this.$slots.accordionContent ? this.$slots.accordionContent({
        item: this.item,
        itemIndex: this.itemIndex,
        parentsIds: this.parentsIds,
        parentIndexes: this.parentIndexes,
        id: this.id,
        currentId: this.currentId
      }) : this.contentLocal && xt(c("div"), [
        [hn, this.contentLocal]
      ]),
      this.hasChildren && c("div", {
        class: ["a_accordion"]
      }, [
        this.children.map((t, n) => c(kr("AAccordionItem"), {
          key: t[Ye],
          item: t,
          itemIndex: n,
          isParentOpen: this.isOpen,
          parentsIds: this.parentsIdsForChild,
          parentIndexes: this.parentIndexesForChild,
          keyId: this.keyId
        }, this.$slots))
      ])
    ]), this.isRender && c("div", {
      class: [
        "a_accordion__item",
        {
          a_accordion__item_with_gap: this.withGap
        }
      ]
    }, [
      c("div", {
        class: ["a_accordion__header", this.classHeader, this.classHeaderLocal]
      }, [
        c(this.buttonTag, this.buttonAttributes, [
          this.item.slotButton && this.$slots[this.item.slotButton] ? this.$slots[this.item.slotButton]({
            item: this.item,
            itemIndex: this.itemIndex,
            parentsIds: this.parentsIds,
            parentIndexes: this.parentIndexes,
            id: this.id,
            currentId: this.currentId
          }) : this.$slots.accordionButton && this.$slots.accordionButton({
            item: this.item,
            itemIndex: this.itemIndex,
            parentsIds: this.parentsIds,
            parentIndexes: this.parentIndexes,
            id: this.id,
            currentId: this.currentId
          }),
          this.labelLocal && xt(c("span"), [
            [hn, this.labelLocal]
          ])
        ])
      ]),
      c("div", {
        id: this.idForCollapse,
        class: ["a_accordion__collapse_box", {
          a_accordion__collapse_box_show: this.isOpen
        }]
      }, [
        c("div", {
          class: ["a_accordion__body", this.classBody, this.classBodyLocal]
        }, e)
      ])
    ]);
  }
};
function WP(e) {
  const t = f(e, "data"), n = f(e, "keyId"), r = f(e, "keyChildren"), s = ({ items: o, parentIds: u = "" }) => {
    Y(o, (h, A) => {
      const E = fe(h, n.value);
      let p;
      le(E) ? p = `${u}${A}` : p = `${u}${E}`, h[Ye] = p;
      const T = h[r.value];
      T && T.length && s({ items: T, parentIds: `${p}_` });
    });
  };
  return {
    dataWithIds: _(() => {
      const o = pe(t.value);
      return s({ items: o }), o;
    })
  };
}
function GP(e, {
  idsForOpen: t = _(() => []),
  dataWithIds: n = _(() => [])
}) {
  const r = f(e, "indexesForOpen"), s = f(e, "keyChildren"), l = ({ indexForOpen: h }) => {
    let A = `${h}`.replaceAll(".", `.${s.value}.`);
    return A += `.${Ye}`, A;
  }, o = ({ isInit: h } = {}) => {
    if (h && !r.value.length)
      return;
    const A = [];
    s.value ? Y(r.value, (E) => {
      const p = fe(n.value, l({ indexForOpen: E }));
      le(p) || A.push(p);
    }) : Y(r.value, (E) => {
      const p = fe(n.value, `${E}.${Ye}`);
      le(p) || A.push(p);
    }), t.value = A;
  }, u = () => {
    o({ isInit: !0 });
  };
  return tt(r, () => {
    o();
  }), {
    initIdsFromIndexesForOpen: u
  };
}
function KP(e, { emit: t }) {
  const n = f(e, "alwaysOpen"), r = f(e, "disabled"), s = f(e, "idsForOpenDefault"), l = f(e, "prevent"), o = f(e, "stop"), u = B(void 0), h = () => {
    u.value = s.value;
  }, A = ({ currentId: T, isOpen: m }) => {
    if (m) {
      const L = T.split("__")[0];
      u.value = Pt(u.value, (b) => !Ic(b, L));
    } else
      u.value.push(T);
  }, E = ({ currentId: T, parentsIds: m, isOpen: L }) => {
    L ? u.value = m : u.value = [...m, T];
  }, p = ({ item: T, parentsIds: m, isOpen: L, $event: b }) => {
    if (r.value)
      return;
    const v = pe(m), I = T[Ye];
    n.value ? A({ currentId: I, isOpen: L }) : E({ parentsIds: v, currentId: I, isOpen: L }), t("toggle", { idsForOpen: u.value, currentId: I, parentsIds: v, isOpen: L, $event: b, item: T }), o.value && b && b.stopPropagation(), l.value && b && b.preventDefault();
  };
  return tt(s, (T) => {
    mc(T, u.value) || (u.value = pe(T));
  }), {
    idsForOpen: u,
    initIdsForOpen: h,
    toggleLocal: p
  };
}
const F_e = {
  name: "AAccordion",
  provide() {
    return {
      classBody: _(() => this.classBody),
      classButton: _(() => this.classButton),
      classHeader: _(() => this.classHeader),
      disabled: _(() => this.disabled),
      id: _(() => this.id),
      idsForOpen: _(() => this.idsForOpen),
      isCaret: _(() => this.isCaret),
      keyChildren: _(() => this.keyChildren),
      keyClassBody: _(() => this.keyClassBody),
      keyClassButton: _(() => this.keyClassButton),
      keyClassHeader: _(() => this.keyClassHeader),
      keyContent: _(() => this.keyContent),
      keyIsRender: _(() => this.keyIsRender),
      keyIsRenderBodyByFirstOpen: _(() => this.keyIsRenderBodyByFirstOpen),
      keyLabel: _(() => this.keyLabel),
      readonly: _(() => this.readonly),
      withGap: _(() => this.withGap),
      toggle: this.toggleLocal
    };
  },
  props: {
    alwaysOpen: {
      type: Boolean,
      required: !1
    },
    classBody: {
      type: [String, Object],
      required: !1,
      default: ""
    },
    classButton: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classHeader: {
      type: [String, Object],
      required: !1,
      default: ""
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: st("accordion_")
    },
    idsForOpenDefault: {
      type: Array,
      required: !1,
      default: () => []
    },
    isCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    data: {
      type: Array,
      required: !0
    },
    keyClassBody: {
      type: String,
      required: !1,
      default: "classBody"
    },
    keyClassButton: {
      type: String,
      required: !1,
      default: "classButton"
    },
    keyClassHeader: {
      type: String,
      required: !1,
      default: "classHeader"
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyIsRender: {
      type: String,
      required: !1,
      default: "isRender"
    },
    keyIsRenderBodyByFirstOpen: {
      type: String,
      required: !1,
      default: "isRenderBodyByFirstOpen"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyChildren: {
      type: String,
      required: !1,
      default: "children"
    },
    prevent: {
      type: Boolean,
      required: !1
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    stop: {
      type: Boolean,
      required: !1
    },
    withGap: {
      type: Boolean,
      required: !1
    },
    indexesForOpen: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      idsForOpen: n,
      initIdsForOpen: r,
      toggleLocal: s
    } = KP(e, t), {
      dataWithIds: l
    } = WP(e), {
      initIdsFromIndexesForOpen: o
    } = GP(e, {
      idsForOpen: n,
      dataWithIds: l
    });
    return r(), o(), {
      dataWithIds: l,
      idsForOpen: n,
      toggleLocal: s
    };
  },
  render() {
    return c("div", {
      class: ["a_accordion"]
    }, [
      this.dataWithIds.map((e, t) => c(VP, {
        key: e[Ye],
        item: e,
        itemIndex: t,
        isParentOpen: !0,
        keyId: this.keyId
      }, this.$slots))
    ]);
  }
};
function jP(e) {
  const t = f(e, "ariLabel");
  return {
    attributesAriaLabelHidden: _(() => t.value ? {
      ariaLabel: t.value
    } : {
      ariaHidden: !0
    })
  };
}
function zP(e, {
  isIconSvg: t = _(() => !1)
}) {
  const n = f(e, "icon");
  return {
    iconClass: _(() => {
      if (!t.value)
        return `a_icon_${n.value || "_NoImage"}`;
    })
  };
}
var vo = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function YP(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Io = { exports: {} }, TE;
function XP() {
  if (TE) return Io.exports;
  TE = 1;
  function e() {
  }
  return e.prototype = {
    on: function(t, n, r) {
      var s = this.e || (this.e = {});
      return (s[t] || (s[t] = [])).push({
        fn: n,
        ctx: r
      }), this;
    },
    once: function(t, n, r) {
      var s = this;
      function l() {
        s.off(t, l), n.apply(r, arguments);
      }
      return l._ = n, this.on(t, l, r);
    },
    emit: function(t) {
      var n = [].slice.call(arguments, 1), r = ((this.e || (this.e = {}))[t] || []).slice(), s = 0, l = r.length;
      for (s; s < l; s++)
        r[s].fn.apply(r[s].ctx, n);
      return this;
    },
    off: function(t, n) {
      var r = this.e || (this.e = {}), s = r[t], l = [];
      if (s && n)
        for (var o = 0, u = s.length; o < u; o++)
          s[o].fn !== n && s[o].fn._ !== n && l.push(s[o]);
      return l.length ? r[t] = l : delete r[t], this;
    }
  }, Io.exports = e, Io.exports.TinyEmitter = e, Io.exports;
}
var id, SE;
function ZP() {
  if (SE) return id;
  SE = 1;
  var e = XP();
  return id = new e(), id;
}
var JP = ZP();
const go = /* @__PURE__ */ YP(JP), Rt = {
  $on: (...e) => go.on(...e),
  $once: (...e) => go.once(...e),
  $off: (...e) => go.off(...e),
  $emit: (...e) => go.emit(...e)
}, Wo = B(void 0);
function No(e) {
  Wo.value = e, Rt.$emit("updateViewOnResize", e), e ? document.body.classList.add("a_mobile") : document.body.classList.remove("a_mobile");
}
function An() {
  return {
    isMobileWidth: Wo,
    setIsMobileWidth: No
  };
}
const QP = `<svg
  xmlns="http://www.w3.org/2000/svg"
  version="1.1"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <path
    d="M 14.204045,11.607942 C 15.968997,11.607942 17.4,13.038977 17.4,14.80397 17.4,16.568964 15.968997,18 14.204045,18 12.439093,18 11.00809,16.568964 11.00809,14.80397 c 0,-1.764993 1.431003,-3.196028 3.195955,-3.196028 z M 1.7468526,0 H 15.702424 c 0.317838,0 0.601987,0.13036037 0.809974,0.33688648 0.207986,0.20799097 0.336879,0.49654172 0.336879,0.80999272 V 11.401416 C 16.488962,11.121653 16.081779,10.89755 15.640907,10.745219 V 1.4251769 c 0,-0.062983 -0.02344,-0.1157132 -0.06738,-0.1537962 -0.03808,-0.038083 -0.09667,-0.067377 -0.153792,-0.067377 H 2.0192852 c -0.062982,0 -0.1157107,0.023436 -0.1537926,0.067377 -0.038082,0.038083 -0.067375,0.095207 -0.067375,0.1537962 V 11.681178 h 0.00439 L 6.4851264,7.1976561 c 0.1874805,-0.1728376 0.4818832,-0.153796 0.6503226,0.033689 0.00439,0.00439 0.00439,0.010252 0.010252,0.010252 l 3.937088,4.6578239 c -0.692799,0.758727 -1.116094,1.769387 -1.116094,2.878184 0,0.481894 0.08056,0.944747 0.227027,1.376841 H 1.7468526 c -0.3178379,0 -0.6019878,-0.130361 -0.8099738,-0.336887 C 0.7288927,15.611034 0.6,15.321018 0.6,15.007567 V 1.1468792 C 0.6,0.82903398 0.7303573,0.54487745 0.9368788,0.33688648 1.1434002,0.12889569 1.4334089,0 1.7468526,0 Z m 9.6523104,11.585971 0.543401,-3.3381075 c 0.04394,-0.2504678 0.279755,-0.42477 0.530217,-0.3808284 0.09667,0.014647 0.183086,0.062984 0.250463,0.1259664 l 2.50462,2.6321095 c -0.319302,-0.07616 -0.650322,-0.115713 -0.993061,-0.115713 -1.088264,-0.0015 -2.081324,0.405729 -2.83564,1.076573 z m 1.171752,-8.9582554 c 0.458448,0 0.87735,0.1874847 1.176147,0.4862886 0.303191,0.3031979 0.486278,0.717715 0.486278,1.1761738 0,0.4584587 -0.187481,0.8773698 -0.486278,1.1761737 -0.303191,0.3031979 -0.717699,0.4862888 -1.176147,0.4862888 -0.458447,0 -0.87735,-0.1874849 -1.176146,-0.4862888 -0.303191,-0.3031979 -0.486277,-0.717715 -0.486277,-1.1761737 0,-0.4584588 0.18748,-0.8773701 0.486277,-1.1761738 0.303191,-0.3031981 0.719163,-0.4862886 1.176146,-0.4862886 z m 0.562442,10.2325654 2.923522,3.163805 c 0.231421,-0.350069 0.366173,-0.76898 0.366173,-1.220116 0,-1.224509 -0.99306,-2.217592 -2.217542,-2.217592 -0.389608,-0.0015 -0.754315,0.09814 -1.072153,0.273903 z m 2.141377,3.885914 -2.923522,-3.163805 c -0.231421,0.350069 -0.366172,0.768981 -0.366172,1.220116 0,1.224509 0.99306,2.217593 2.217541,2.217593 0.389607,0.0015 0.754316,-0.09814 1.072153,-0.273904 z"
  />
</svg>`, e0 = `<svg
   xmlns="http://www.w3.org/2000/svg"
   viewBox="0 0 18 18"
   height="18"
   width="18"
>
  <g
   transform="matrix(0.26617655,0,0,0.26617655,-33.607656,-85.223817)"
  >
    <path
      style="fill:#35495e;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 139.13004,365.87267 -4.53409,7.81862 h 51.05837 l -4.53409,-7.81862 z"
    />
    <path
      style="fill:#41b883;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 134.59595,373.69129 -4.51704,7.7892 h 60.09245 l -4.51704,-7.7892 z"
    />
    <path
      style="fill:#41b883;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 160.07266,329.49377 -16.90595,29.1543 -16.90594,29.15378 h 7.67291 l 13.03745,-22.48287 13.03745,-22.48236 13.03745,22.48236 13.03744,22.48287 h 7.80159 l -16.90594,-29.15378 z"
    />
    <path
      style="fill:#35495e;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 160.00903,342.83634 -13.03745,22.48287 -13.03796,22.48286 h 8.03103 l 9.02632,-15.56546 9.02581,-15.56494 9.02632,15.56494 9.02581,15.56546 h 8.01501 l -13.03744,-22.48286 z"
    />
  </g>
</svg>`, Go = B({
  icons: {
    _NoImage: QP,
    Aloha: e0
  }
}), x_e = {
  install: (e, {
    icons: t = {}
  } = {}) => {
    Go.value.icons = {
      ...Go.value.icons,
      ...t
    };
  }
};
function t0(e) {
  const t = f(e, "icon"), {
    isMobileWidth: n
  } = An(), r = _(() => nt(t.value) ? n.value ? t.value.mobile : t.value.desktop : t.value), s = _(() => !le(r.value) && r.value !== ""), l = _(() => {
    const u = r.value;
    return !!(ot(u) && u.trim().startsWith("<svg"));
  }), o = _(() => {
    if (l.value)
      return r.value;
    const u = Go.value.icons[r.value];
    return u || Go.value.icons._NoImage;
  });
  return {
    hasIcon: s,
    iconSvg: o,
    isIconSvg: l
  };
}
const lt = {
  name: "AIcon",
  props: {
    ariLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    icon: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: "i"
    },
    isSaveHtml: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  setup(e) {
    const {
      attributesAriaLabelHidden: t
    } = jP(e), {
      hasIcon: n,
      iconSvg: r,
      isIconSvg: s
    } = t0(e), {
      iconClass: l
    } = zP(e, {
      isIconSvg: s
    });
    return {
      attributesAriaLabelHidden: t,
      hasIcon: n,
      iconClass: l,
      iconSvg: r
    };
  },
  render() {
    if (this.hasIcon)
      return this.isSaveHtml ? c(this.iconTag, {
        class: ["a_icon", this.iconClass],
        innerHTML: this.iconSvg,
        ...this.attributesAriaLabelHidden
      }) : xt(c(this.iconTag, {
        class: ["a_icon", this.iconClass],
        ...this.attributesAriaLabelHidden
      }), [
        [hn, this.iconSvg]
      ]);
  }
}, Eu = B("de");
let mT = {};
const LT = B(/* @__PURE__ */ new Date()), yc = B(/* @__PURE__ */ new Date());
let bT = {};
const oi = B(!0), n0 = _(() => [
  Eu.value,
  LT.value,
  oi.value
]);
tt(n0, () => {
  a0();
}, {
  immediate: !0
});
function Si() {
  return {
    isTranslate: oi,
    language: Eu,
    setI18n: vT,
    setLanguage: IT,
    toggleTranslate: r0,
    translationChanges: yc,
    updateTranslation: gT
  };
}
function vT(e = {}) {
  mT = e;
}
function IT(e = "") {
  Eu.value = e;
}
function r0(e) {
  Pe(e) ? oi.value = !oi.value : oi.value = !!e;
}
function a0() {
  bT = mT[Eu.value], yc.value = /* @__PURE__ */ new Date();
}
function gT() {
  LT.value = /* @__PURE__ */ new Date();
}
const Pd = B({
  replaceText: void 0
}), s0 = (e = {}) => {
  Me(e == null ? void 0 : e.replaceText) && (Pd.value.replaceText = e == null ? void 0 : e.replaceText);
}, M_e = {
  install: (e, t, n, r = {}) => {
    vT(t), IT(n), gT(), s0(r);
  }
};
function Ms() {
  return {
    getTranslatedText: wt,
    getTranslationAttributes: i0,
    isPlaceholderTranslate: Ca,
    replaceText: yT,
    spliceString: RT
  };
}
function Ca(e = "") {
  return !(!ot(e) || e[0] !== "_" || e[e.length - 1] !== "_");
}
function wt({ placeholder: e, translationObj: t = bT, extra: n, alwaysTranslate: r = !1 }) {
  if (!t || !yc.value)
    return e;
  let s;
  return !r && !oi.value ? s = e : s = le(t[e]) ? e : t[e], n ? yT({
    text: s,
    object: n
  }) : s;
}
function yT({ text: e = "", object: t }) {
  var s, l;
  if (Me((s = Pd.value) == null ? void 0 : s.replaceText))
    return (l = Pd.value) == null ? void 0 : l.replaceText({ text: e, object: t });
  if (!nt(t))
    return e;
  let n = e, r = 0;
  for (; ; ) {
    const o = n.indexOf("{{", r), u = n.indexOf("}}", r);
    if (o === -1 || u === -1)
      break;
    const h = n.slice(o + 2, u).trim(), A = fe(t, h);
    n = RT({
      text: n,
      replaceText: A,
      firstIndex: o,
      lastindex: u + 2
    }), r = o + `${A}`.length;
  }
  return n;
}
function RT({
  text: e = "",
  replaceText: t = "",
  firstIndex: n,
  lastindex: r
}) {
  return `${e.slice(0, n)}${t}${e.slice(r, e.length)}`;
}
function i0({ attr: e = "", value: t = "", translation: n = "", isTranslate: r = !0 }) {
  const s = {};
  return le(n) || (s[e] = n), r && (s[`data-translate-${e}`] = t), s;
}
function Rc(e) {
  const t = f(e, "alwaysTranslate"), n = f(e, "ariaLabel"), r = f(e, "extra"), {
    translationChanges: s
  } = Si(), {
    isPlaceholderTranslate: l,
    getTranslatedText: o,
    getTranslationAttributes: u
  } = Ms(), {
    isMobileWidth: h
  } = An(), A = _(() => nt(n.value) ? h.value ? n.value.mobile : n.value.desktop : n.value), E = _(() => !Pe(A.value)), p = _(() => !(!E.value || !l(A.value))), T = _(() => {
    if (s.value)
      return p.value ? o({
        placeholder: A.value,
        extra: r.value,
        alwaysTranslate: t.value
      }) : A.value;
  });
  return {
    ariaLabelAttributes: _(() => E.value ? u({
      attr: "aria-label",
      translation: T.value,
      value: A.value,
      isTranslate: p.value
    }) : {}),
    hasAriaLabel: E
  };
}
function l0(e) {
  const t = f(e, "size");
  return {
    classSize: _(() => {
      if (t.value)
        return `a_spinner_size_${t.value}`;
    })
  };
}
const Fn = B({
  propsDefault: {
    ariaLabel: "_A_SPINNER_LOADING_",
    class: "a_spinner",
    extra: void 0,
    safeHtml: "",
    size: void 0,
    tag: "span"
  }
}), $_e = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Fn.value.propsDefault = {
      ...Fn.value.propsDefault,
      ...t
    };
  }
}, ul = {
  name: "ASpinner",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: () => Fn.value.propsDefault.ariaLabel
    },
    extra: {
      type: Object,
      required: !1,
      default: () => Fn.value.propsDefault.extra
    },
    safeHtml: {
      type: String,
      required: !1,
      default: () => Fn.value.propsDefault.safeHtml
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => Fn.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    tag: {
      type: String,
      required: !1,
      default: () => Fn.value.propsDefault.tag
    }
  },
  setup(e) {
    const {
      ariaLabelAttributes: t
    } = Rc(e), {
      classSize: n
    } = l0(e);
    return {
      ariaLabelAttributes: t,
      classSize: n
    };
  },
  render() {
    return c(this.tag, {
      class: [
        Fn.value.propsDefault.class,
        this.classSize
      ],
      role: "status",
      innerHTML: this.safeHtml,
      ...this.ariaLabelAttributes
    });
  }
};
function o0({
  htmlLocalOptions: e = _(() => {
  }),
  textLocalOptions: t = _(() => ({})),
  titleLocalOptions: n = _(() => ({}))
}) {
  const r = _(() => {
    var l, o, u, h;
    return ((l = t.value) == null ? void 0 : l.dataTranslateText) || ((o = e.value) == null ? void 0 : o.dataTranslateSafeHtml) || ((u = e.value) == null ? void 0 : u.dataTranslateHtml) || ((h = n.value) == null ? void 0 : h.title);
  });
  return {
    attributesLocal: _(() => {
      var o, u, h;
      const l = {};
      return (o = t.value) != null && o.dataTranslateText ? l["data-translate-text"] = t.value.dataTranslateText : (u = e.value) != null && u.dataTranslateSafeHtml ? l["data-translate-safe-html"] = e.value.dataTranslateSafeHtml : (h = e.value) != null && h.dataTranslateHtml && (l["data-translate-html"] = e.value.dataTranslateHtml), n.value.title && (l.title = n.value.title, n.value.dataTranslateTitle && (l["data-translate-title"] = n.value.dataTranslateTitle)), l;
    }),
    hasAttributesLocal: r
  };
}
function u0(e, {
  hasTextAfter: t = _(() => !1),
  hasTextBefore: n = _(() => !1),
  textAfterForCurrentDevice: r = _(() => ""),
  textBeforeForCurrentDevice: s = _(() => "")
}) {
  const l = f(e, "alwaysTranslate"), o = f(e, "extra"), u = f(e, "html"), h = f(e, "safeHtml"), {
    isPlaceholderTranslate: A,
    getTranslatedText: E
  } = Ms(), {
    isMobileWidth: p
  } = An(), {
    translationChanges: T
  } = Si(), m = _(() => nt(h.value) ? p.value ? h.value.mobile : h.value.desktop : h.value), L = _(() => nt(u.value) ? p.value ? u.value.mobile : u.value.desktop : u.value), b = _(() => Se(h.value)), v = _(() => Se(u.value)), I = _(() => b.value ? h.value.length > 0 : !Pe(m.value)), y = _(() => v.value ? u.value.length > 0 : !Pe(L.value)), R = _(() => n.value ? `<span>${s.value}</span>` : ""), D = _(() => t.value ? `<span>${r.value}</span>` : ""), w = _(() => {
    const P = {
      safeHtml: void 0,
      html: void 0,
      dataTranslateHtml: void 0,
      dataTranslateSafeHtml: void 0
    };
    if (!T.value)
      return P;
    if (I.value) {
      const x = b.value ? h.value : [m.value];
      let C = "", q = "";
      Y(x, (W) => {
        !W && W !== 0 || (C && (C += " ", q += " "), A(W) ? (C += E({
          placeholder: W,
          extra: o.value,
          alwaysTranslate: l.value
        }), q += W) : C += W);
      }), P.safeHtml = C || void 0, P.dataTranslateSafeHtml = q || void 0;
    } else if (y.value) {
      const x = v.value ? u.value : [L.value];
      let C = "", q = "";
      Y(x, (W) => {
        !W && W !== 0 || (C && (C += " ", q += " "), A(W) ? (C += Vo(E({
          placeholder: W,
          extra: o.value,
          alwaysTranslate: l.value
        })), q += W) : C += Vo(W));
      }), P.html = le(C) ? void 0 : C, P.dataTranslateHtml = le(q) ? void 0 : q;
    }
    return P;
  }), M = _(() => `${R.value}${w.value.safeHtml || w.value.html}${D.value}`);
  return {
    hasHtml: y,
    hasSafeHtml: I,
    htmlLocalOptions: w,
    htmlLocalWithBeforeAndAfter: M
  };
}
function ml(e) {
  const t = f(e, "alwaysTranslate"), n = f(e, "extra"), r = f(e, "placeholder"), {
    translationChanges: s
  } = Si(), {
    isPlaceholderTranslate: l,
    getTranslatedText: o,
    getTranslationAttributes: u
  } = Ms(), {
    isMobileWidth: h
  } = An(), A = _(() => nt(r.value) ? h.value ? r.value.mobile : r.value.desktop : r.value), E = _(() => !Pe(A.value)), p = _(() => !(!E.value || !l(A.value))), T = _(() => {
    if (s.value)
      return p.value ? o({
        placeholder: A.value,
        extra: n.value,
        alwaysTranslate: t.value
      }) : A.value;
  }), m = _(() => {
    const L = {};
    return E.value ? u({
      attr: "placeholder",
      translation: T.value,
      value: A.value,
      isTranslate: p.value
    }) : L;
  });
  return {
    hasPlaceholder: E,
    placeholderAttributes: m
  };
}
function _0({
  hasAriaLabel: e,
  hasAttributesLocal: t,
  hasPlaceholder: n,
  hasTextAfter: r,
  hasTextBefore: s
}) {
  return {
    hasRestAttributes: _(() => e.value || t.value || n.value || r.value || s.value)
  };
}
function d0(e) {
  const t = f(e, "textAfter"), n = f(e, "textBefore"), {
    isMobileWidth: r
  } = An(), s = _(() => nt(t.value) ? r.value ? t.value.mobile : t.value.desktop : t.value), l = _(() => nt(n.value) ? r.value ? n.value.mobile : n.value.desktop : n.value), o = _(() => !le(s.value) && s.value !== ""), u = _(() => !le(l.value) && l.value !== "");
  return {
    hasTextAfter: o,
    hasTextBefore: u,
    textAfterForCurrentDevice: s,
    textBeforeForCurrentDevice: l
  };
}
function c0(e) {
  const t = f(e, "alwaysTranslate"), n = f(e, "extra"), r = f(e, "text"), {
    isPlaceholderTranslate: s,
    getTranslatedText: l
  } = Ms(), {
    isMobileWidth: o
  } = An(), {
    translationChanges: u
  } = Si(), h = _(() => nt(r.value) ? o.value ? r.value.mobile : r.value.desktop : r.value), A = _(() => Se(r.value)), E = _(() => A.value ? r.value.length > 0 : !Pe(h.value)), p = _(() => {
    const T = {
      text: void 0,
      dataTranslateText: void 0
    };
    if (!u.value)
      return T;
    if (E.value) {
      const m = A.value ? r.value : [h.value];
      let L = "", b = "";
      Y(m, (v) => {
        !v && v !== 0 || (L && (L += " ", b += " "), s(v) ? (L += l({
          placeholder: v,
          extra: n.value,
          alwaysTranslate: t.value
        }), b += v) : L += v);
      }), T.text = L || void 0, T.dataTranslateText = b || void 0;
    }
    return T;
  });
  return {
    hasText: E,
    textLocalOptions: p
  };
}
function f0(e) {
  const t = f(e, "alwaysTranslate"), n = f(e, "extra"), r = f(e, "title"), {
    isPlaceholderTranslate: s,
    getTranslatedText: l
  } = Ms(), {
    isMobileWidth: o
  } = An(), {
    translationChanges: u
  } = Si(), h = _(() => nt(r.value) ? o.value ? r.value.mobile : r.value.desktop : r.value), A = _(() => Se(r.value)), E = _(() => A.value ? r.value.length > 0 : !(le(h.value) || h.value === ""));
  return {
    titleLocalOptions: _(() => {
      if (!u.value)
        return;
      const T = {
        title: void 0,
        dataTranslateTitle: void 0
      };
      if (!E.value)
        return T;
      const m = A.value ? r.value : [h.value];
      let L = "", b = "";
      return Y(m, (v) => {
        !v && v !== 0 || (L && (L += " ", b += " "), s(v) ? (L += l({
          placeholder: v,
          extra: n.value,
          alwaysTranslate: t.value
        }), b += v) : L += v);
      }), T.title = L || void 0, T.dataTranslateTitle = b || void 0, T;
    })
  };
}
const Te = {
  name: "ATranslation",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: ""
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: ""
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      hasTextAfter: t,
      hasTextBefore: n,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: s
    } = d0(e), {
      hasText: l,
      textLocalOptions: o
    } = c0(e), {
      hasHtml: u,
      hasSafeHtml: h,
      htmlLocalOptions: A,
      htmlLocalWithBeforeAndAfter: E
    } = u0(e, {
      hasTextAfter: t,
      hasTextBefore: n,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: s
    }), {
      titleLocalOptions: p
    } = f0(e), {
      hasPlaceholder: T,
      placeholderAttributes: m
    } = ml(e), {
      ariaLabelAttributes: L,
      hasAriaLabel: b
    } = Rc(e), {
      attributesLocal: v,
      hasAttributesLocal: I
    } = o0({
      htmlLocalOptions: A,
      textLocalOptions: o,
      titleLocalOptions: p
    }), {
      hasRestAttributes: y
    } = _0({
      hasAriaLabel: b,
      hasAttributesLocal: I,
      hasPlaceholder: T,
      hasTextAfter: t,
      hasTextBefore: n
    });
    return {
      ariaLabelAttributes: L,
      attributesLocal: v,
      hasText: l,
      hasTextAfter: t,
      hasTextBefore: n,
      hasHtml: u,
      hasRestAttributes: y,
      hasSafeHtml: h,
      htmlLocalWithBeforeAndAfter: E,
      placeholderAttributes: m,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: s,
      textLocalOptions: o
    };
  },
  render() {
    return this.hasText ? c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes
    }, [
      this.textBeforeForCurrentDevice,
      this.textLocalOptions.text,
      this.$slots.default && this.$slots.default(),
      this.textAfterForCurrentDevice
    ]) : this.hasSafeHtml || this.hasHtml ? c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes,
      innerHTML: this.htmlLocalWithBeforeAndAfter
    }) : (this.hasRestAttributes || this.$slots.default) && c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes
    }, [
      this.textBeforeForCurrentDevice,
      this.$slots.default && this.$slots.default(),
      this.textAfterForCurrentDevice
    ]);
  }
}, h0 = {
  button: !0,
  submit: !0,
  reset: !0
};
function A0(e, {
  isRouterLink: t = _(() => !1),
  tagLocal: n = _(() => "")
}) {
  const r = f(e, "disabled"), s = f(e, "href"), l = f(e, "target"), o = f(e, "to"), u = f(e, "type"), h = _(() => {
    if (n.value === "button" && h0[u.value])
      return u.value;
  });
  return {
    toHrefAttributes: _(() => t.value ? {
      target: l.value,
      to: o.value
    } : r.value ? {} : {
      href: s.value,
      target: l.value
    }),
    typeAttribut: h
  };
}
function E0(e, { emit: t }) {
  const n = f(e, "prevent"), r = f(e, "stop"), s = f(e, "disabled"), l = f(e, "ariaDisabled");
  return {
    onClick: (u) => {
      n.value && u.preventDefault(), r.value && u.stopPropagation(), !(s.value || l.value) && t("click", {
        props: e,
        $event: u
      });
    }
  };
}
const _l = {
  /*
   * called before bound element's attributes
   * or event listeners are applied
   */
  created(e, t) {
    var n;
    Me((n = t.value) == null ? void 0 : n.created) && t.value.created(e, t);
  },
  // called right before the element is inserted into the DOM.
  beforeMount(e, t) {
    var n;
    Me((n = t.value) == null ? void 0 : n.beforeMount) && t.value.beforeMount(e, t);
  },
  /*
   * called when the bound element's parent component
   * and all its children are mounted.
   */
  mounted(e, t) {
    var n;
    Me((n = t.value) == null ? void 0 : n.mounted) && t.value.mounted(e, t);
  },
  // called before the parent component is unmounted
  beforeUnmount(e, t) {
    var n;
    Me((n = t.value) == null ? void 0 : n.beforeUnmount) && t.value.beforeUnmount(e, t);
  },
  // called when the parent component is unmounted
  unmounted(e, t) {
    var n;
    Me((n = t.value) == null ? void 0 : n.unmounted) && t.value.unmounted(e, t);
  }
};
function p0(e, {
  isTitleVisible: t = B(!1)
}) {
  const n = f(e, "id"), r = f(e, "minWidth"), s = f(e, "width"), l = f(e, "maxWidth"), o = f(e, "withoutAriaDescribedby"), u = _(() => {
    if (!o.value && t.value)
      return `${n.value}_title`;
  }), h = _(() => {
    const A = {};
    return le(r.value) || (A["min-width"] = `${r.value}px`), le(s.value) || (A.width = `${s.value}px`), le(l.value) || (A["max-width"] = `${l.value}px`), A;
  });
  return {
    ariaDescribedby: u,
    tooltipStyles: h
  };
}
const T0 = ["top", "right", "bottom", "left"], mE = ["start", "end"], LE = /* @__PURE__ */ T0.reduce((e, t) => e.concat(t, t + "-" + mE[0], t + "-" + mE[1]), []), hi = Math.min, ys = Math.max, Ko = Math.round, yo = Math.floor, $r = (e) => ({
  x: e,
  y: e
}), S0 = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, m0 = {
  start: "end",
  end: "start"
};
function Fd(e, t, n) {
  return ys(e, hi(t, n));
}
function Ba(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function Ur(e) {
  return e.split("-")[0];
}
function qr(e) {
  return e.split("-")[1];
}
function Oc(e) {
  return e === "x" ? "y" : "x";
}
function Cc(e) {
  return e === "y" ? "height" : "width";
}
function Ns(e) {
  return ["top", "bottom"].includes(Ur(e)) ? "y" : "x";
}
function Nc(e) {
  return Oc(Ns(e));
}
function OT(e, t, n) {
  n === void 0 && (n = !1);
  const r = qr(e), s = Nc(e), l = Cc(s);
  let o = s === "x" ? r === (n ? "end" : "start") ? "right" : "left" : r === "start" ? "bottom" : "top";
  return t.reference[l] > t.floating[l] && (o = zo(o)), [o, zo(o)];
}
function L0(e) {
  const t = zo(e);
  return [jo(e), t, jo(t)];
}
function jo(e) {
  return e.replace(/start|end/g, (t) => m0[t]);
}
function b0(e, t, n) {
  const r = ["left", "right"], s = ["right", "left"], l = ["top", "bottom"], o = ["bottom", "top"];
  switch (e) {
    case "top":
    case "bottom":
      return n ? t ? s : r : t ? r : s;
    case "left":
    case "right":
      return t ? l : o;
    default:
      return [];
  }
}
function v0(e, t, n, r) {
  const s = qr(e);
  let l = b0(Ur(e), n === "start", r);
  return s && (l = l.map((o) => o + "-" + s), t && (l = l.concat(l.map(jo)))), l;
}
function zo(e) {
  return e.replace(/left|right|bottom|top/g, (t) => S0[t]);
}
function I0(e) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...e
  };
}
function CT(e) {
  return typeof e != "number" ? I0(e) : {
    top: e,
    right: e,
    bottom: e,
    left: e
  };
}
function Yo(e) {
  const {
    x: t,
    y: n,
    width: r,
    height: s
  } = e;
  return {
    width: r,
    height: s,
    top: n,
    left: t,
    right: t + r,
    bottom: n + s,
    x: t,
    y: n
  };
}
function bE(e, t, n) {
  let {
    reference: r,
    floating: s
  } = e;
  const l = Ns(t), o = Nc(t), u = Cc(o), h = Ur(t), A = l === "y", E = r.x + r.width / 2 - s.width / 2, p = r.y + r.height / 2 - s.height / 2, T = r[u] / 2 - s[u] / 2;
  let m;
  switch (h) {
    case "top":
      m = {
        x: E,
        y: r.y - s.height
      };
      break;
    case "bottom":
      m = {
        x: E,
        y: r.y + r.height
      };
      break;
    case "right":
      m = {
        x: r.x + r.width,
        y: p
      };
      break;
    case "left":
      m = {
        x: r.x - s.width,
        y: p
      };
      break;
    default:
      m = {
        x: r.x,
        y: r.y
      };
  }
  switch (qr(t)) {
    case "start":
      m[o] -= T * (n && A ? -1 : 1);
      break;
    case "end":
      m[o] += T * (n && A ? -1 : 1);
      break;
  }
  return m;
}
const g0 = async (e, t, n) => {
  const {
    placement: r = "bottom",
    strategy: s = "absolute",
    middleware: l = [],
    platform: o
  } = n, u = l.filter(Boolean), h = await (o.isRTL == null ? void 0 : o.isRTL(t));
  let A = await o.getElementRects({
    reference: e,
    floating: t,
    strategy: s
  }), {
    x: E,
    y: p
  } = bE(A, r, h), T = r, m = {}, L = 0;
  for (let b = 0; b < u.length; b++) {
    const {
      name: v,
      fn: I
    } = u[b], {
      x: y,
      y: R,
      data: D,
      reset: w
    } = await I({
      x: E,
      y: p,
      initialPlacement: r,
      placement: T,
      strategy: s,
      middlewareData: m,
      rects: A,
      platform: o,
      elements: {
        reference: e,
        floating: t
      }
    });
    E = y ?? E, p = R ?? p, m = {
      ...m,
      [v]: {
        ...m[v],
        ...D
      }
    }, w && L <= 50 && (L++, typeof w == "object" && (w.placement && (T = w.placement), w.rects && (A = w.rects === !0 ? await o.getElementRects({
      reference: e,
      floating: t,
      strategy: s
    }) : w.rects), {
      x: E,
      y: p
    } = bE(A, T, h)), b = -1);
  }
  return {
    x: E,
    y: p,
    placement: T,
    strategy: s,
    middlewareData: m
  };
};
async function Dc(e, t) {
  var n;
  t === void 0 && (t = {});
  const {
    x: r,
    y: s,
    platform: l,
    rects: o,
    elements: u,
    strategy: h
  } = e, {
    boundary: A = "clippingAncestors",
    rootBoundary: E = "viewport",
    elementContext: p = "floating",
    altBoundary: T = !1,
    padding: m = 0
  } = Ba(t, e), L = CT(m), v = u[T ? p === "floating" ? "reference" : "floating" : p], I = Yo(await l.getClippingRect({
    element: (n = await (l.isElement == null ? void 0 : l.isElement(v))) == null || n ? v : v.contextElement || await (l.getDocumentElement == null ? void 0 : l.getDocumentElement(u.floating)),
    boundary: A,
    rootBoundary: E,
    strategy: h
  })), y = p === "floating" ? {
    x: r,
    y: s,
    width: o.floating.width,
    height: o.floating.height
  } : o.reference, R = await (l.getOffsetParent == null ? void 0 : l.getOffsetParent(u.floating)), D = await (l.isElement == null ? void 0 : l.isElement(R)) ? await (l.getScale == null ? void 0 : l.getScale(R)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, w = Yo(l.convertOffsetParentRelativeRectToViewportRelativeRect ? await l.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements: u,
    rect: y,
    offsetParent: R,
    strategy: h
  }) : y);
  return {
    top: (I.top - w.top + L.top) / D.y,
    bottom: (w.bottom - I.bottom + L.bottom) / D.y,
    left: (I.left - w.left + L.left) / D.x,
    right: (w.right - I.right + L.right) / D.x
  };
}
const y0 = (e) => ({
  name: "arrow",
  options: e,
  async fn(t) {
    const {
      x: n,
      y: r,
      placement: s,
      rects: l,
      platform: o,
      elements: u,
      middlewareData: h
    } = t, {
      element: A,
      padding: E = 0
    } = Ba(e, t) || {};
    if (A == null)
      return {};
    const p = CT(E), T = {
      x: n,
      y: r
    }, m = Nc(s), L = Cc(m), b = await o.getDimensions(A), v = m === "y", I = v ? "top" : "left", y = v ? "bottom" : "right", R = v ? "clientHeight" : "clientWidth", D = l.reference[L] + l.reference[m] - T[m] - l.floating[L], w = T[m] - l.reference[m], M = await (o.getOffsetParent == null ? void 0 : o.getOffsetParent(A));
    let P = M ? M[R] : 0;
    (!P || !await (o.isElement == null ? void 0 : o.isElement(M))) && (P = u.floating[R] || l.floating[L]);
    const x = D / 2 - w / 2, C = P / 2 - b[L] / 2 - 1, q = hi(p[I], C), W = hi(p[y], C), z = q, oe = P - b[L] - W, te = P / 2 - b[L] / 2 + x, ue = Fd(z, te, oe), re = !h.arrow && qr(s) != null && te !== ue && l.reference[L] / 2 - (te < z ? q : W) - b[L] / 2 < 0, ie = re ? te < z ? te - z : te - oe : 0;
    return {
      [m]: T[m] + ie,
      data: {
        [m]: ue,
        centerOffset: te - ue - ie,
        ...re && {
          alignmentOffset: ie
        }
      },
      reset: re
    };
  }
});
function R0(e, t, n) {
  return (e ? [...n.filter((s) => qr(s) === e), ...n.filter((s) => qr(s) !== e)] : n.filter((s) => Ur(s) === s)).filter((s) => e ? qr(s) === e || (t ? jo(s) !== s : !1) : !0);
}
const O0 = function(e) {
  return e === void 0 && (e = {}), {
    name: "autoPlacement",
    options: e,
    async fn(t) {
      var n, r, s;
      const {
        rects: l,
        middlewareData: o,
        placement: u,
        platform: h,
        elements: A
      } = t, {
        crossAxis: E = !1,
        alignment: p,
        allowedPlacements: T = LE,
        autoAlignment: m = !0,
        ...L
      } = Ba(e, t), b = p !== void 0 || T === LE ? R0(p || null, m, T) : T, v = await Dc(t, L), I = ((n = o.autoPlacement) == null ? void 0 : n.index) || 0, y = b[I];
      if (y == null)
        return {};
      const R = OT(y, l, await (h.isRTL == null ? void 0 : h.isRTL(A.floating)));
      if (u !== y)
        return {
          reset: {
            placement: b[0]
          }
        };
      const D = [v[Ur(y)], v[R[0]], v[R[1]]], w = [...((r = o.autoPlacement) == null ? void 0 : r.overflows) || [], {
        placement: y,
        overflows: D
      }], M = b[I + 1];
      if (M)
        return {
          data: {
            index: I + 1,
            overflows: w
          },
          reset: {
            placement: M
          }
        };
      const P = w.map((q) => {
        const W = qr(q.placement);
        return [q.placement, W && E ? (
          // Check along the mainAxis and main crossAxis side.
          q.overflows.slice(0, 2).reduce((z, oe) => z + oe, 0)
        ) : (
          // Check only the mainAxis.
          q.overflows[0]
        ), q.overflows];
      }).sort((q, W) => q[1] - W[1]), C = ((s = P.filter((q) => q[2].slice(
        0,
        // Aligned placements should not check their opposite crossAxis
        // side.
        qr(q[0]) ? 2 : 3
      ).every((W) => W <= 0))[0]) == null ? void 0 : s[0]) || P[0][0];
      return C !== u ? {
        data: {
          index: I + 1,
          overflows: w
        },
        reset: {
          placement: C
        }
      } : {};
    }
  };
}, C0 = function(e) {
  return e === void 0 && (e = {}), {
    name: "flip",
    options: e,
    async fn(t) {
      var n, r;
      const {
        placement: s,
        middlewareData: l,
        rects: o,
        initialPlacement: u,
        platform: h,
        elements: A
      } = t, {
        mainAxis: E = !0,
        crossAxis: p = !0,
        fallbackPlacements: T,
        fallbackStrategy: m = "bestFit",
        fallbackAxisSideDirection: L = "none",
        flipAlignment: b = !0,
        ...v
      } = Ba(e, t);
      if ((n = l.arrow) != null && n.alignmentOffset)
        return {};
      const I = Ur(s), y = Ns(u), R = Ur(u) === u, D = await (h.isRTL == null ? void 0 : h.isRTL(A.floating)), w = T || (R || !b ? [zo(u)] : L0(u)), M = L !== "none";
      !T && M && w.push(...v0(u, b, L, D));
      const P = [u, ...w], x = await Dc(t, v), C = [];
      let q = ((r = l.flip) == null ? void 0 : r.overflows) || [];
      if (E && C.push(x[I]), p) {
        const te = OT(s, o, D);
        C.push(x[te[0]], x[te[1]]);
      }
      if (q = [...q, {
        placement: s,
        overflows: C
      }], !C.every((te) => te <= 0)) {
        var W, z;
        const te = (((W = l.flip) == null ? void 0 : W.index) || 0) + 1, ue = P[te];
        if (ue)
          return {
            data: {
              index: te,
              overflows: q
            },
            reset: {
              placement: ue
            }
          };
        let re = (z = q.filter((ie) => ie.overflows[0] <= 0).sort((ie, Ae) => ie.overflows[1] - Ae.overflows[1])[0]) == null ? void 0 : z.placement;
        if (!re)
          switch (m) {
            case "bestFit": {
              var oe;
              const ie = (oe = q.filter((Ae) => {
                if (M) {
                  const we = Ns(Ae.placement);
                  return we === y || // Create a bias to the `y` side axis due to horizontal
                  // reading directions favoring greater width.
                  we === "y";
                }
                return !0;
              }).map((Ae) => [Ae.placement, Ae.overflows.filter((we) => we > 0).reduce((we, me) => we + me, 0)]).sort((Ae, we) => Ae[1] - we[1])[0]) == null ? void 0 : oe[0];
              ie && (re = ie);
              break;
            }
            case "initialPlacement":
              re = u;
              break;
          }
        if (s !== re)
          return {
            reset: {
              placement: re
            }
          };
      }
      return {};
    }
  };
};
async function N0(e, t) {
  const {
    placement: n,
    platform: r,
    elements: s
  } = e, l = await (r.isRTL == null ? void 0 : r.isRTL(s.floating)), o = Ur(n), u = qr(n), h = Ns(n) === "y", A = ["left", "top"].includes(o) ? -1 : 1, E = l && h ? -1 : 1, p = Ba(t, e);
  let {
    mainAxis: T,
    crossAxis: m,
    alignmentAxis: L
  } = typeof p == "number" ? {
    mainAxis: p,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: p.mainAxis || 0,
    crossAxis: p.crossAxis || 0,
    alignmentAxis: p.alignmentAxis
  };
  return u && typeof L == "number" && (m = u === "end" ? L * -1 : L), h ? {
    x: m * E,
    y: T * A
  } : {
    x: T * A,
    y: m * E
  };
}
const D0 = function(e) {
  return e === void 0 && (e = 0), {
    name: "offset",
    options: e,
    async fn(t) {
      var n, r;
      const {
        x: s,
        y: l,
        placement: o,
        middlewareData: u
      } = t, h = await N0(t, e);
      return o === ((n = u.offset) == null ? void 0 : n.placement) && (r = u.arrow) != null && r.alignmentOffset ? {} : {
        x: s + h.x,
        y: l + h.y,
        data: {
          ...h,
          placement: o
        }
      };
    }
  };
}, B0 = function(e) {
  return e === void 0 && (e = {}), {
    name: "shift",
    options: e,
    async fn(t) {
      const {
        x: n,
        y: r,
        placement: s
      } = t, {
        mainAxis: l = !0,
        crossAxis: o = !1,
        limiter: u = {
          fn: (v) => {
            let {
              x: I,
              y
            } = v;
            return {
              x: I,
              y
            };
          }
        },
        ...h
      } = Ba(e, t), A = {
        x: n,
        y: r
      }, E = await Dc(t, h), p = Ns(Ur(s)), T = Oc(p);
      let m = A[T], L = A[p];
      if (l) {
        const v = T === "y" ? "top" : "left", I = T === "y" ? "bottom" : "right", y = m + E[v], R = m - E[I];
        m = Fd(y, m, R);
      }
      if (o) {
        const v = p === "y" ? "top" : "left", I = p === "y" ? "bottom" : "right", y = L + E[v], R = L - E[I];
        L = Fd(y, L, R);
      }
      const b = u.fn({
        ...t,
        [T]: m,
        [p]: L
      });
      return {
        ...b,
        data: {
          x: b.x - n,
          y: b.y - r,
          enabled: {
            [T]: l,
            [p]: o
          }
        }
      };
    }
  };
}, w0 = function(e) {
  return e === void 0 && (e = {}), {
    options: e,
    fn(t) {
      const {
        x: n,
        y: r,
        placement: s,
        rects: l,
        middlewareData: o
      } = t, {
        offset: u = 0,
        mainAxis: h = !0,
        crossAxis: A = !0
      } = Ba(e, t), E = {
        x: n,
        y: r
      }, p = Ns(s), T = Oc(p);
      let m = E[T], L = E[p];
      const b = Ba(u, t), v = typeof b == "number" ? {
        mainAxis: b,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...b
      };
      if (h) {
        const R = T === "y" ? "height" : "width", D = l.reference[T] - l.floating[R] + v.mainAxis, w = l.reference[T] + l.reference[R] - v.mainAxis;
        m < D ? m = D : m > w && (m = w);
      }
      if (A) {
        var I, y;
        const R = T === "y" ? "width" : "height", D = ["top", "left"].includes(Ur(s)), w = l.reference[p] - l.floating[R] + (D && ((I = o.offset) == null ? void 0 : I[p]) || 0) + (D ? 0 : v.crossAxis), M = l.reference[p] + l.reference[R] + (D ? 0 : ((y = o.offset) == null ? void 0 : y[p]) || 0) - (D ? v.crossAxis : 0);
        L < w ? L = w : L > M && (L = M);
      }
      return {
        [T]: m,
        [p]: L
      };
    }
  };
};
function pu() {
  return typeof window < "u";
}
function $s(e) {
  return Bc(e) ? (e.nodeName || "").toLowerCase() : "#document";
}
function xn(e) {
  var t;
  return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;
}
function Gr(e) {
  var t;
  return (t = (Bc(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement;
}
function Bc(e) {
  return pu() ? e instanceof Node || e instanceof xn(e).Node : !1;
}
function br(e) {
  return pu() ? e instanceof Element || e instanceof xn(e).Element : !1;
}
function Hr(e) {
  return pu() ? e instanceof HTMLElement || e instanceof xn(e).HTMLElement : !1;
}
function vE(e) {
  return !pu() || typeof ShadowRoot > "u" ? !1 : e instanceof ShadowRoot || e instanceof xn(e).ShadowRoot;
}
function Ll(e) {
  const {
    overflow: t,
    overflowX: n,
    overflowY: r,
    display: s
  } = vr(e);
  return /auto|scroll|overlay|hidden|clip/.test(t + r + n) && !["inline", "contents"].includes(s);
}
function P0(e) {
  return ["table", "td", "th"].includes($s(e));
}
function Tu(e) {
  return [":popover-open", ":modal"].some((t) => {
    try {
      return e.matches(t);
    } catch {
      return !1;
    }
  });
}
function wc(e) {
  const t = Pc(), n = br(e) ? vr(e) : e;
  return ["transform", "translate", "scale", "rotate", "perspective"].some((r) => n[r] ? n[r] !== "none" : !1) || (n.containerType ? n.containerType !== "normal" : !1) || !t && (n.backdropFilter ? n.backdropFilter !== "none" : !1) || !t && (n.filter ? n.filter !== "none" : !1) || ["transform", "translate", "scale", "rotate", "perspective", "filter"].some((r) => (n.willChange || "").includes(r)) || ["paint", "layout", "strict", "content"].some((r) => (n.contain || "").includes(r));
}
function F0(e) {
  let t = wa(e);
  for (; Hr(t) && !Ai(t); ) {
    if (wc(t))
      return t;
    if (Tu(t))
      return null;
    t = wa(t);
  }
  return null;
}
function Pc() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
function Ai(e) {
  return ["html", "body", "#document"].includes($s(e));
}
function vr(e) {
  return xn(e).getComputedStyle(e);
}
function Su(e) {
  return br(e) ? {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  } : {
    scrollLeft: e.scrollX,
    scrollTop: e.scrollY
  };
}
function wa(e) {
  if ($s(e) === "html")
    return e;
  const t = (
    // Step into the shadow DOM of the parent of a slotted node.
    e.assignedSlot || // DOM Element detected.
    e.parentNode || // ShadowRoot detected.
    vE(e) && e.host || // Fallback.
    Gr(e)
  );
  return vE(t) ? t.host : t;
}
function NT(e) {
  const t = wa(e);
  return Ai(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : Hr(t) && Ll(t) ? t : NT(t);
}
function dl(e, t, n) {
  var r;
  t === void 0 && (t = []), n === void 0 && (n = !0);
  const s = NT(e), l = s === ((r = e.ownerDocument) == null ? void 0 : r.body), o = xn(s);
  if (l) {
    const u = xd(o);
    return t.concat(o, o.visualViewport || [], Ll(s) ? s : [], u && n ? dl(u) : []);
  }
  return t.concat(s, dl(s, [], n));
}
function xd(e) {
  return e.parent && Object.getPrototypeOf(e.parent) ? e.frameElement : null;
}
function DT(e) {
  const t = vr(e);
  let n = parseFloat(t.width) || 0, r = parseFloat(t.height) || 0;
  const s = Hr(e), l = s ? e.offsetWidth : n, o = s ? e.offsetHeight : r, u = Ko(n) !== l || Ko(r) !== o;
  return u && (n = l, r = o), {
    width: n,
    height: r,
    $: u
  };
}
function Fc(e) {
  return br(e) ? e : e.contextElement;
}
function ui(e) {
  const t = Fc(e);
  if (!Hr(t))
    return $r(1);
  const n = t.getBoundingClientRect(), {
    width: r,
    height: s,
    $: l
  } = DT(t);
  let o = (l ? Ko(n.width) : n.width) / r, u = (l ? Ko(n.height) : n.height) / s;
  return (!o || !Number.isFinite(o)) && (o = 1), (!u || !Number.isFinite(u)) && (u = 1), {
    x: o,
    y: u
  };
}
const x0 = /* @__PURE__ */ $r(0);
function BT(e) {
  const t = xn(e);
  return !Pc() || !t.visualViewport ? x0 : {
    x: t.visualViewport.offsetLeft,
    y: t.visualViewport.offsetTop
  };
}
function M0(e, t, n) {
  return t === void 0 && (t = !1), !n || t && n !== xn(e) ? !1 : t;
}
function Ds(e, t, n, r) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  const s = e.getBoundingClientRect(), l = Fc(e);
  let o = $r(1);
  t && (r ? br(r) && (o = ui(r)) : o = ui(e));
  const u = M0(l, n, r) ? BT(l) : $r(0);
  let h = (s.left + u.x) / o.x, A = (s.top + u.y) / o.y, E = s.width / o.x, p = s.height / o.y;
  if (l) {
    const T = xn(l), m = r && br(r) ? xn(r) : r;
    let L = T, b = xd(L);
    for (; b && r && m !== L; ) {
      const v = ui(b), I = b.getBoundingClientRect(), y = vr(b), R = I.left + (b.clientLeft + parseFloat(y.paddingLeft)) * v.x, D = I.top + (b.clientTop + parseFloat(y.paddingTop)) * v.y;
      h *= v.x, A *= v.y, E *= v.x, p *= v.y, h += R, A += D, L = xn(b), b = xd(L);
    }
  }
  return Yo({
    width: E,
    height: p,
    x: h,
    y: A
  });
}
function xc(e, t) {
  const n = Su(e).scrollLeft;
  return t ? t.left + n : Ds(Gr(e)).left + n;
}
function wT(e, t, n) {
  n === void 0 && (n = !1);
  const r = e.getBoundingClientRect(), s = r.left + t.scrollLeft - (n ? 0 : (
    // RTL <body> scrollbar.
    xc(e, r)
  )), l = r.top + t.scrollTop;
  return {
    x: s,
    y: l
  };
}
function $0(e) {
  let {
    elements: t,
    rect: n,
    offsetParent: r,
    strategy: s
  } = e;
  const l = s === "fixed", o = Gr(r), u = t ? Tu(t.floating) : !1;
  if (r === o || u && l)
    return n;
  let h = {
    scrollLeft: 0,
    scrollTop: 0
  }, A = $r(1);
  const E = $r(0), p = Hr(r);
  if ((p || !p && !l) && (($s(r) !== "body" || Ll(o)) && (h = Su(r)), Hr(r))) {
    const m = Ds(r);
    A = ui(r), E.x = m.x + r.clientLeft, E.y = m.y + r.clientTop;
  }
  const T = o && !p && !l ? wT(o, h, !0) : $r(0);
  return {
    width: n.width * A.x,
    height: n.height * A.y,
    x: n.x * A.x - h.scrollLeft * A.x + E.x + T.x,
    y: n.y * A.y - h.scrollTop * A.y + E.y + T.y
  };
}
function q0(e) {
  return Array.from(e.getClientRects());
}
function k0(e) {
  const t = Gr(e), n = Su(e), r = e.ownerDocument.body, s = ys(t.scrollWidth, t.clientWidth, r.scrollWidth, r.clientWidth), l = ys(t.scrollHeight, t.clientHeight, r.scrollHeight, r.clientHeight);
  let o = -n.scrollLeft + xc(e);
  const u = -n.scrollTop;
  return vr(r).direction === "rtl" && (o += ys(t.clientWidth, r.clientWidth) - s), {
    width: s,
    height: l,
    x: o,
    y: u
  };
}
function U0(e, t) {
  const n = xn(e), r = Gr(e), s = n.visualViewport;
  let l = r.clientWidth, o = r.clientHeight, u = 0, h = 0;
  if (s) {
    l = s.width, o = s.height;
    const A = Pc();
    (!A || A && t === "fixed") && (u = s.offsetLeft, h = s.offsetTop);
  }
  return {
    width: l,
    height: o,
    x: u,
    y: h
  };
}
function H0(e, t) {
  const n = Ds(e, !0, t === "fixed"), r = n.top + e.clientTop, s = n.left + e.clientLeft, l = Hr(e) ? ui(e) : $r(1), o = e.clientWidth * l.x, u = e.clientHeight * l.y, h = s * l.x, A = r * l.y;
  return {
    width: o,
    height: u,
    x: h,
    y: A
  };
}
function IE(e, t, n) {
  let r;
  if (t === "viewport")
    r = U0(e, n);
  else if (t === "document")
    r = k0(Gr(e));
  else if (br(t))
    r = H0(t, n);
  else {
    const s = BT(e);
    r = {
      x: t.x - s.x,
      y: t.y - s.y,
      width: t.width,
      height: t.height
    };
  }
  return Yo(r);
}
function PT(e, t) {
  const n = wa(e);
  return n === t || !br(n) || Ai(n) ? !1 : vr(n).position === "fixed" || PT(n, t);
}
function V0(e, t) {
  const n = t.get(e);
  if (n)
    return n;
  let r = dl(e, [], !1).filter((u) => br(u) && $s(u) !== "body"), s = null;
  const l = vr(e).position === "fixed";
  let o = l ? wa(e) : e;
  for (; br(o) && !Ai(o); ) {
    const u = vr(o), h = wc(o);
    !h && u.position === "fixed" && (s = null), (l ? !h && !s : !h && u.position === "static" && !!s && ["absolute", "fixed"].includes(s.position) || Ll(o) && !h && PT(e, o)) ? r = r.filter((E) => E !== o) : s = u, o = wa(o);
  }
  return t.set(e, r), r;
}
function W0(e) {
  let {
    element: t,
    boundary: n,
    rootBoundary: r,
    strategy: s
  } = e;
  const o = [...n === "clippingAncestors" ? Tu(t) ? [] : V0(t, this._c) : [].concat(n), r], u = o[0], h = o.reduce((A, E) => {
    const p = IE(t, E, s);
    return A.top = ys(p.top, A.top), A.right = hi(p.right, A.right), A.bottom = hi(p.bottom, A.bottom), A.left = ys(p.left, A.left), A;
  }, IE(t, u, s));
  return {
    width: h.right - h.left,
    height: h.bottom - h.top,
    x: h.left,
    y: h.top
  };
}
function G0(e) {
  const {
    width: t,
    height: n
  } = DT(e);
  return {
    width: t,
    height: n
  };
}
function K0(e, t, n) {
  const r = Hr(t), s = Gr(t), l = n === "fixed", o = Ds(e, !0, l, t);
  let u = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const h = $r(0);
  if (r || !r && !l)
    if (($s(t) !== "body" || Ll(s)) && (u = Su(t)), r) {
      const T = Ds(t, !0, l, t);
      h.x = T.x + t.clientLeft, h.y = T.y + t.clientTop;
    } else s && (h.x = xc(s));
  const A = s && !r && !l ? wT(s, u) : $r(0), E = o.left + u.scrollLeft - h.x - A.x, p = o.top + u.scrollTop - h.y - A.y;
  return {
    x: E,
    y: p,
    width: o.width,
    height: o.height
  };
}
function ld(e) {
  return vr(e).position === "static";
}
function gE(e, t) {
  if (!Hr(e) || vr(e).position === "fixed")
    return null;
  if (t)
    return t(e);
  let n = e.offsetParent;
  return Gr(e) === n && (n = n.ownerDocument.body), n;
}
function FT(e, t) {
  const n = xn(e);
  if (Tu(e))
    return n;
  if (!Hr(e)) {
    let s = wa(e);
    for (; s && !Ai(s); ) {
      if (br(s) && !ld(s))
        return s;
      s = wa(s);
    }
    return n;
  }
  let r = gE(e, t);
  for (; r && P0(r) && ld(r); )
    r = gE(r, t);
  return r && Ai(r) && ld(r) && !wc(r) ? n : r || F0(e) || n;
}
const j0 = async function(e) {
  const t = this.getOffsetParent || FT, n = this.getDimensions, r = await n(e.floating);
  return {
    reference: K0(e.reference, await t(e.floating), e.strategy),
    floating: {
      x: 0,
      y: 0,
      width: r.width,
      height: r.height
    }
  };
};
function z0(e) {
  return vr(e).direction === "rtl";
}
const Y0 = {
  convertOffsetParentRelativeRectToViewportRelativeRect: $0,
  getDocumentElement: Gr,
  getClippingRect: W0,
  getOffsetParent: FT,
  getElementRects: j0,
  getClientRects: q0,
  getDimensions: G0,
  getScale: ui,
  isElement: br,
  isRTL: z0
};
function xT(e, t) {
  return e.x === t.x && e.y === t.y && e.width === t.width && e.height === t.height;
}
function X0(e, t) {
  let n = null, r;
  const s = Gr(e);
  function l() {
    var u;
    clearTimeout(r), (u = n) == null || u.disconnect(), n = null;
  }
  function o(u, h) {
    u === void 0 && (u = !1), h === void 0 && (h = 1), l();
    const A = e.getBoundingClientRect(), {
      left: E,
      top: p,
      width: T,
      height: m
    } = A;
    if (u || t(), !T || !m)
      return;
    const L = yo(p), b = yo(s.clientWidth - (E + T)), v = yo(s.clientHeight - (p + m)), I = yo(E), R = {
      rootMargin: -L + "px " + -b + "px " + -v + "px " + -I + "px",
      threshold: ys(0, hi(1, h)) || 1
    };
    let D = !0;
    function w(M) {
      const P = M[0].intersectionRatio;
      if (P !== h) {
        if (!D)
          return o();
        P ? o(!1, P) : r = setTimeout(() => {
          o(!1, 1e-7);
        }, 1e3);
      }
      P === 1 && !xT(A, e.getBoundingClientRect()) && o(), D = !1;
    }
    try {
      n = new IntersectionObserver(w, {
        ...R,
        // Handle <iframe>s
        root: s.ownerDocument
      });
    } catch {
      n = new IntersectionObserver(w, R);
    }
    n.observe(e);
  }
  return o(!0), l;
}
function bl(e, t, n, r) {
  r === void 0 && (r = {});
  const {
    ancestorScroll: s = !0,
    ancestorResize: l = !0,
    elementResize: o = typeof ResizeObserver == "function",
    layoutShift: u = typeof IntersectionObserver == "function",
    animationFrame: h = !1
  } = r, A = Fc(e), E = s || l ? [...A ? dl(A) : [], ...dl(t)] : [];
  E.forEach((I) => {
    s && I.addEventListener("scroll", n, {
      passive: !0
    }), l && I.addEventListener("resize", n);
  });
  const p = A && u ? X0(A, n) : null;
  let T = -1, m = null;
  o && (m = new ResizeObserver((I) => {
    let [y] = I;
    y && y.target === A && m && (m.unobserve(t), cancelAnimationFrame(T), T = requestAnimationFrame(() => {
      var R;
      (R = m) == null || R.observe(t);
    })), n();
  }), A && !h && m.observe(A), m.observe(t));
  let L, b = h ? Ds(e) : null;
  h && v();
  function v() {
    const I = Ds(e);
    b && !xT(b, I) && n(), b = I, L = requestAnimationFrame(v);
  }
  return n(), () => {
    var I;
    E.forEach((y) => {
      s && y.removeEventListener("scroll", n), l && y.removeEventListener("resize", n);
    }), p == null || p(), (I = m) == null || I.disconnect(), m = null, h && cancelAnimationFrame(L);
  };
}
const Z0 = D0, J0 = O0, vl = B0, Il = C0, Q0 = y0, mu = w0, gl = (e, t, n) => {
  const r = /* @__PURE__ */ new Map(), s = {
    platform: Y0,
    ...n
  }, l = {
    ...s.platform,
    _c: r
  };
  return g0(e, t, {
    ...s,
    platform: l
  });
};
function eF(e) {
  return e != null && typeof e == "object" && "$el" in e;
}
function tF(e) {
  if (eF(e)) {
    const t = e.$el;
    return Bc(t) && $s(t) === "#comment" ? null : t;
  }
  return e;
}
function nF(e) {
  return typeof e == "function" ? e() : mR(e);
}
function rF(e) {
  return {
    name: "arrow",
    options: e,
    fn(t) {
      const n = tF(nF(e.element));
      return n == null ? {} : Q0({
        element: n,
        padding: e.padding
      }).fn(t);
    }
  };
}
const Z = {
  arrowDown: 40,
  arrowLeft: 37,
  arrowRight: 39,
  arrowUp: 38,
  e: 69,
  enter: 13,
  escape: 27,
  minus: 189,
  numMinus: 109,
  numPlus: 107,
  plus: 187,
  space: 32,
  tab: 9,
  backspace: 8,
  del: 46,
  home: 36,
  end: 35
};
function aF(e) {
  const t = f(e, "id"), n = f(e, "offsetDistance"), r = f(e, "offsetSkidding"), s = f(e, "placement"), l = f(e, "timeClose"), o = B(void 0), u = B(void 0), h = B(!1), A = B(void 0), E = B(void 0), p = B(void 0), T = _(() => document.getElementById(t.value)), m = _(() => s.value && s.value.includes("auto")), L = _(() => [
    Z0({
      mainAxis: n.value || 0,
      crossAxis: r.value || 0,
      alignmentAxis: null
    }),
    m.value ? J0() : Il(),
    vl({ limiter: mu() }),
    E.value && rF({
      element: E.value,
      padding: 5
    })
  ]), b = (W) => {
    W.keyCode === Z.escape && q();
  }, v = () => {
    document.addEventListener("keydown", b);
  }, I = () => {
    document.removeEventListener("keydown", b);
  }, y = () => {
    Rt.$on("closeHtmlTitle", q);
  }, R = () => {
    Rt.$off("closeHtmlTitle", q);
  }, D = () => {
    o.value && (o.value(), o.value = void 0);
  }, w = () => {
    A.value = setTimeout(() => {
      q();
    }, l.value);
  }, M = () => {
    if (h.value) {
      clearTimeout(A.value);
      return;
    }
    h.value = !0;
  }, P = () => {
    o.value || !T.value || !p.value || (o.value = bl(T.value, p.value, () => {
      !T.value || !p.value || gl(
        T.value,
        p.value,
        {
          placement: s.value,
          middleware: L.value
        }
      ).then(({ x: W, y: z, middlewareData: oe, placement: te }) => {
        Object.assign(p.value.style, {
          left: `${W}px`,
          top: `${z}px`
        });
        const ue = te.split("-")[0], re = {
          top: "bottom",
          right: "left",
          bottom: "top",
          left: "right"
        }[ue];
        if (oe.arrow) {
          const { x: ie, y: Ae } = oe.arrow;
          Object.assign(E.value.style, {
            left: le(ie) ? "" : `${ie}px`,
            top: le(Ae) ? "" : `${Ae}px`,
            [re]: `${-E.value.offsetWidth / 2}px`
          });
        }
      });
    }), Rt.$emit("closeHtmlTitle"), y(), v());
  }, x = () => {
    clearTimeout(A.value);
  }, C = () => {
    w();
  };
  function q() {
    clearTimeout(A.value), D(), R(), I(), h.value = !1;
  }
  return {
    closeTitle: q,
    closeTitleWithTimer: w,
    componentRef: u,
    isTitleVisible: h,
    mouseEnterTooltip: x,
    mouseLeaveTooltip: C,
    showTitle: M,
    startPopper: P,
    titleArrowRef: E,
    titleRef: p
  };
}
function Mc(e) {
  const t = f(e, "popperContainerId"), n = _(() => `#${t.value}`);
  return {
    addPopperContainerInBody: ({ className: s = "a_popup_container" } = {}) => {
      if (!document.getElementById(t.value)) {
        const o = document.createElement("div");
        o.id = t.value, o.className = s, document.body.prepend(o);
      }
    },
    popperContainerIdSelector: n
  };
}
const sF = ["RouterLink", "router-link"];
function iF(e) {
  const t = f(e, "tag");
  return {
    tagLocal: _(() => sF.indexOf(t.value) !== -1 ? kr(t.value) : t.value)
  };
}
function lF(e, {
  showTitle: t = () => {
  },
  closeTitle: n = () => {
  },
  closeTitleWithTimer: r = () => {
  }
}) {
  const s = f(e, "isHide");
  return {
    onBlur: () => {
      n();
    },
    onFocus: () => {
      s.value || t();
    },
    onMouseenter: () => {
      s.value || t();
    },
    onMouseleave: () => {
      r();
    }
  };
}
const yr = [
  "auto",
  "auto-start",
  "auto-end",
  "top",
  "top-start",
  "top-end",
  "right",
  "right-start",
  "right-end",
  "bottom",
  "bottom-start",
  "bottom-end",
  "left",
  "left-start",
  "left-end"
], oF = {
  name: "ATooltip",
  props: {
    arrowPadding: {
      type: [Number, Function],
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_tooltip_")
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    maxWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    minWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    offsetDistance: {
      type: Number,
      required: !1,
      default: 6
    },
    offsetSkidding: {
      type: Number,
      required: !1,
      default: 0
    },
    placement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => yr.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: "a_tooltip_container"
    },
    showArrow: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tag: {
      type: String,
      required: !1,
      default: "span"
    },
    timeClose: {
      type: Number,
      required: !1,
      default: 100,
      validator: (e) => e >= 0
    },
    width: {
      type: Number,
      required: !1,
      default: void 0
    },
    withoutAriaDescribedby: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      closeTitle: t,
      closeTitleWithTimer: n,
      componentRef: r,
      isTitleVisible: s,
      mouseEnterTooltip: l,
      mouseLeaveTooltip: o,
      showTitle: u,
      startPopper: h,
      titleArrowRef: A,
      titleRef: E
    } = aF(e), {
      onBlur: p,
      onFocus: T,
      onMouseenter: m,
      onMouseleave: L
    } = lF(e, {
      showTitle: u,
      closeTitle: t,
      closeTitleWithTimer: n
    }), {
      tagLocal: b
    } = iF(e), {
      ariaDescribedby: v,
      tooltipStyles: I
    } = p0(e, {
      isTitleVisible: s
    }), {
      addPopperContainerInBody: y,
      popperContainerIdSelector: R
    } = Mc(e);
    return y(), Ct(() => {
      t();
    }), {
      ariaDescribedby: v,
      closeTitle: t,
      componentRef: r,
      isTitleVisible: s,
      mouseEnterTooltip: l,
      mouseLeaveTooltip: o,
      onBlur: p,
      onFocus: T,
      onMouseenter: m,
      onMouseleave: L,
      showTitle: u,
      popperContainerIdSelector: R,
      startPopper: h,
      tagLocal: b,
      titleArrowRef: A,
      titleRef: E,
      tooltipStyles: I
    };
  },
  render() {
    return c(this.tagLocal, {
      ref: "componentRef",
      id: this.id,
      "aria-describedby": this.ariaDescribedby,
      onFocus: this.onFocus,
      onBlur: this.onBlur,
      onMouseenter: this.onMouseenter,
      onMouseleave: this.onMouseleave
    }, {
      default: () => [
        this.$slots.default && this.$slots.default(),
        !this.isHide && c(ia, {
          to: this.popperContainerIdSelector
        }, [
          /*
           * h("div", {
           *   id: this.ariaDescribedby,
           *   class: "a_sr_only",
           * }, [
           *   this.$slots.title && this.$slots.title(),
           * ]),
           */
          !!(this.$slots.title && this.isTitleVisible) && xt(c("div", {
            ref: "titleRef",
            class: "a_tooltip__container",
            style: this.tooltipStyles,
            onMouseenter: this.mouseEnterTooltip,
            onMouseleave: this.mouseLeaveTooltip
          }, [
            this.showArrow && c("div", {
              ref: "titleArrowRef",
              "data-popper-arrow": !0,
              class: "a_tooltip__arrow"
            }),
            c("div", {
              id: this.ariaDescribedby,
              class: "a_tooltip__wrapper"
            }, this.$slots.title && this.$slots.title())
          ]), [
            [_l, {
              mounted: this.startPopper
            }]
          ])
        ])
      ]
    });
  }
};
function uF(e, {
  tagLocal: t = _(() => "")
}) {
  const n = f(e, "isTitleHtml");
  return {
    componentLocal: _(() => n.value ? oF : t.value)
  };
}
function _F(e) {
  const t = f(e, "type"), n = f(e, "disabled");
  return {
    disabledLocal: _(() => {
      if (["button", "submit", "reset"].indexOf(t.value) !== -1 && n.value)
        return !0;
    })
  };
}
function dF(e, {
  tagLocal: t = _(() => "")
}) {
  const n = f(e, "isTitleHtml"), r = f(e, "titleAttributes"), s = f(e, "titlePlacement"), l = B(void 0), o = _(() => n.value ? {
    tag: t.value,
    placement: s.value,
    withoutAriaDescribedby: !0,
    ...r.value
  } : {});
  return {
    elementRef: l,
    htmlTitleAttributes: o
  };
}
function cF(e) {
  const t = f(e, "loading"), n = f(e, "loadingAlign"), r = _(() => t.value && n.value === "left"), s = _(() => t.value && n.value === "right");
  return {
    isLoadingLeft: r,
    isLoadingRight: s
  };
}
function fF(e) {
  const t = f(e, "disabled"), n = f(e, "to"), r = f(e, "type");
  return {
    isRouterLink: _(() => r.value === "link" && !!n.value && !t.value)
  };
}
const yE = "a_btn a_btn_switch";
function hF(e) {
  const t = f(e, "isSwitch"), n = f(e, "modelSwitch"), r = _(() => {
    if (t.value)
      return !!n.value;
  }), s = _(() => {
    if (t.value)
      return n.value ? `${yE} a_btn_switch_active` : yE;
  });
  return {
    isSwitchActive: r,
    switchClass: s
  };
}
const AF = {
  button: "button",
  submit: "button",
  reset: "button",
  link: "a",
  text: "span"
};
function EF(e, {
  isRouterLink: t = _(() => !1)
}) {
  const n = f(e, "tag"), r = f(e, "type");
  return {
    tagLocal: _(() => n.value ? n.value : t.value ? kr("RouterLink") : AF[r.value] || "span")
  };
}
function pF(e) {
  const t = f(e, "html"), n = f(e, "htmlScreenReader"), r = f(e, "safeHtml"), s = f(e, "safeHtmlScreenReader"), l = f(e, "text"), o = f(e, "textScreenReader"), u = _(() => nt(l.value) ? !cn(l.value) : !le(l.value) && l.value !== ""), h = _(() => nt(r.value) ? !cn(r.value) : !le(r.value) && r.value !== ""), A = _(() => nt(t.value) ? !cn(t.value) : !le(t.value) && t.value !== ""), E = _(() => u.value || h.value || A.value), p = _(() => nt(o.value) ? !cn(o.value) : !le(o.value) && o.value !== ""), T = _(() => nt(s.value) ? !cn(s.value) : !le(s.value) && s.value !== ""), m = _(() => nt(n.value) ? !cn(n.value) : !le(n.value) && n.value !== ""), L = _(() => p.value || T.value || m.value);
  return {
    isTextOrHtmlVisible: E,
    isTextOrHtmlScreenReaderVisible: L
  };
}
function TF(e) {
  const t = f(e, "title");
  return {
    isTitleVisible: _(() => Se(t.value) && t.value.length > 0 ? !0 : nt(t.value) ? !cn(t.value) : !Pe(t.value))
  };
}
function Nt(e) {
  const t = f(e, "excludeRenderAttributes");
  return {
    attributesToExcludeFromRender: _(() => {
      const r = {};
      return Y(t.value, (s) => {
        r[s] = void 0;
      }), r;
    })
  };
}
const ye = {
  name: "AElement",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaDisabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    href: {
      type: String,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_element_")
    },
    isSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    modelSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tabindex: {
      type: [Number, String],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: void 0
    },
    target: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => yr.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => ot(e) ? e === "auto" : Fa(e)
    },
    to: {
      type: [Object, String],
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0,
      default: "text",
      validator: (e) => ["button", "submit", "reset", "link", "text"].indexOf(e) !== -1
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      isRouterLink: r
    } = fF(e), {
      disabledLocal: s
    } = _F(e), {
      tagLocal: l
    } = EF(e, {
      isRouterLink: r
    }), {
      toHrefAttributes: o,
      typeAttribut: u
    } = A0(e, {
      isRouterLink: r,
      tagLocal: l
    }), {
      isTitleVisible: h
    } = TF(e), {
      isLoadingLeft: A,
      isLoadingRight: E
    } = cF(e), {
      isTextOrHtmlVisible: p,
      isTextOrHtmlScreenReaderVisible: T
    } = pF(e), {
      onClick: m
    } = E0(e, t), {
      componentLocal: L
    } = uF(e, {
      tagLocal: l
    }), {
      elementRef: b,
      htmlTitleAttributes: v
    } = dF(e, {
      tagLocal: l
    }), {
      ariaLabelAttributes: I
    } = Rc(e), {
      isSwitchActive: y,
      switchClass: R
    } = hF(e);
    return {
      ariaLabelAttributes: I,
      attributesToExcludeFromRender: n,
      componentLocal: L,
      disabledLocal: s,
      elementRef: b,
      htmlTitleAttributes: v,
      isLoadingLeft: A,
      isLoadingRight: E,
      isSwitchActive: y,
      isTextOrHtmlScreenReaderVisible: T,
      isTextOrHtmlVisible: p,
      isTitleVisible: h,
      onClick: m,
      switchClass: R,
      tagLocal: l,
      toHrefAttributes: o,
      typeAttribut: u
    };
  },
  render() {
    return c(this.componentLocal, {
      ...this.$attrs,
      ...this.htmlTitleAttributes,
      ...this.ariaLabelAttributes,
      ...this.toHrefAttributes,
      ref: "elementRef",
      id: this.id,
      class: [
        this.classDefault,
        this.switchClass,
        this.class,
        {
          [this.classDisabled]: this.ariaDisabled
        }
      ],
      type: this.typeAttribut,
      tabindex: this.tabindex,
      disabled: this.disabledLocal,
      ariaDisabled: this.ariaDisabled,
      "aria-pressed": this.isSwitchActive,
      isAllRowsSelected: void 0,
      // TODO: ATable
      onClick: this.onClick,
      ...this.attributes,
      ...this.attributesToExcludeFromRender
    }, {
      default: () => [
        !this.isTitleHtml && this.isTitleVisible ? c(Te, {
          tag: "span",
          alwaysTranslate: this.alwaysTranslate,
          ariaHidden: !0,
          class: [
            "a_position_absolute_all",
            this.classDefaultHidden
          ],
          title: this.title,
          extra: this.extra,
          style: {
            zIndex: this.titleZIndex
          },
          ...this.titleAttributes
        }) : "",
        this.isTextOrHtmlScreenReaderVisible ? c(Te, {
          alwaysTranslate: this.alwaysTranslate,
          class: [
            "a_sr_only",
            this.classDefaultHidden
          ],
          tag: "span",
          text: this.textScreenReader,
          html: this.htmlScreenReader,
          safeHtml: this.safeHtmlScreenReader,
          extra: this.extra
        }) : "",
        this.$slots.buttonPrepend ? this.$slots.buttonPrepend({ extraData: this.extraData }) : "",
        this.isLoadingLeft ? c(ul, {
          class: [
            "aloha_btn__spinner_left",
            this.loadingClass
          ]
        }) : "",
        c(lt, {
          icon: this.iconLeft,
          iconTag: this.iconTag,
          class: [
            "aloha_btn__icon_left",
            this.iconClass
          ],
          ...this.iconAttributes
        }),
        this.$slots.default ? this.$slots.default({ extraData: this.extraData }) : "",
        this.isTextOrHtmlVisible ? c(Te, {
          alwaysTranslate: this.alwaysTranslate,
          ariaHidden: this.textAriaHidden,
          class: this.textClass,
          extra: this.extra,
          html: this.html,
          safeHtml: this.safeHtml,
          tag: this.textTag,
          text: this.text,
          textAfter: this.textAfter,
          textBefore: this.textBefore
        }) : "",
        c(lt, {
          icon: this.iconRight,
          iconTag: this.iconTag,
          class: [
            "aloha_btn__icon_right",
            this.iconClass
          ],
          ...this.iconAttributes
        }),
        this.isLoadingRight ? c(ul, {
          class: [
            "aloha_btn__spinner_right",
            this.loadingClass
          ]
        }) : "",
        this.$slots.buttonAppend ? this.$slots.buttonAppend({ extraData: this.extraData }) : ""
      ],
      title: !this.isTitleHtml || !this.title && !this.$slots.buttonTitle ? () => "" : () => [
        this.isTitleVisible ? c(Te, {
          alwaysTranslate: this.alwaysTranslate,
          html: this.title,
          tag: "span",
          extra: this.extra
        }) : "",
        this.$slots.buttonTitle ? this.$slots.buttonTitle({ extraData: this.extraData }) : ""
      ]
    });
  }
};
function MT(e, { emit: t }) {
  return {
    clickEmit: (r) => {
      t("click", r);
    }
  };
}
const rt = {
  name: "AButton",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaDisabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_btn_")
    },
    isSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    modelSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tabindex: {
      type: [Number, String],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => yr.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => ot(e) ? e === "auto" : Fa(e)
    },
    type: {
      type: String,
      required: !1,
      default: "button",
      validator: (e) => ["button", "submit", "reset"].indexOf(e) !== -1
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      clickEmit: n
    } = MT(e, t);
    return {
      clickEmit: n
    };
  },
  render() {
    return c(ye, {
      ...this.$attrs,
      ...this.$props,
      onClick: this.clickEmit
    }, this.$slots);
  }
};
function SF(e) {
  const t = f(e, "ariaAtomic"), n = f(e, "role"), r = _(() => {
    if (t.value)
      return !0;
  }), s = _(() => {
    if (n.value)
      return n.value;
  });
  return {
    ariaAtomicLocal: r,
    roleLocal: s
  };
}
function mF(e) {
  const t = f(e, "type");
  return {
    alertClassLocal: _(() => `a_alert a_alert_${t.value}`)
  };
}
function LF(e, { emit: t }) {
  const n = f(e, "closable"), r = f(e, "removeAlertOnClose"), s = B(!1);
  return {
    close: () => {
      n.value && (r.value && (s.value = !0), t("close"));
    },
    isHidden: s
  };
}
const bF = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>
</svg>`, Lu = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4m.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2"/>
</svg>`, vF = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle-fill" viewBox="0 0 16 16">
  <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2"/>
</svg>`, bu = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293z"/>
</svg>`, Ft = B({
  propsDefault: {
    alertClass: void 0,
    alertContentClass: void 0,
    btnCloseAttributes: {},
    closable: !1,
    extra: void 0,
    html: void 0,
    icon: void 0,
    iconClass: void 0,
    isVisible: !1,
    removeAlertOnClose: !1,
    safeHtml: void 0,
    showIcon: !1,
    text: void 0,
    textClose: "_ALERT_CLOSE_",
    type: "danger"
  },
  icons: {
    success: bF,
    danger: bu,
    info: vF,
    warning: Lu
  }
}), q_e = {
  install: (e, {
    propsDefault: t = {},
    icons: n = {}
  } = {}) => {
    Ft.value.propsDefault = {
      ...Ft.value.propsDefault,
      ...t
    }, Ft.value.icons = {
      ...Ft.value.icons,
      ...n
    };
  }
};
function IF(e) {
  const t = f(e, "icon"), n = f(e, "showIcon"), r = f(e, "type");
  return {
    iconLocal: _(() => {
      if (n.value)
        return t.value ? t.value : Ft.value.icons[r.value];
    })
  };
}
const $c = {
  name: "AAlert",
  props: {
    alertClass: {
      type: [String, Object],
      required: !1,
      default: () => Ft.value.propsDefault.alertClass
    },
    alertContentClass: {
      type: [String, Object],
      required: !1,
      default: () => Ft.value.propsDefault.alertContentClass
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaAtomic: {
      type: Boolean,
      required: !1,
      default: !0
    },
    btnCloseAttributes: {
      type: Object,
      required: !1,
      default: () => Ft.value.propsDefault.btnCloseAttributes
    },
    closable: {
      type: Boolean,
      required: !1,
      default: () => Ft.value.propsDefault.closable
    },
    extra: {
      type: Object,
      required: !1,
      default: () => Ft.value.propsDefault.extra
    },
    html: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.html
    },
    icon: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.icon
    },
    iconClass: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.iconClass
    },
    isVisible: {
      type: Boolean,
      required: !1,
      default: () => Ft.value.propsDefault.isVisible
    },
    removeAlertOnClose: {
      type: Boolean,
      required: !1,
      default: () => Ft.value.propsDefault.removeAlertOnClose
    },
    role: {
      type: String,
      required: !1,
      default: "alert"
    },
    safeHtml: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.safeHtml
    },
    showIcon: {
      type: Boolean,
      required: !1,
      default: () => Ft.value.propsDefault.showIcon
    },
    text: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.text
    },
    textClose: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.textClose
    },
    type: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.type
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      alertClassLocal: r
    } = mF(e), {
      close: s,
      isHidden: l
    } = LF(e, t), {
      iconLocal: o
    } = IF(e), {
      ariaAtomicLocal: u,
      roleLocal: h
    } = SF(e);
    return n({
      close: s,
      isHidden: l
    }), {
      alertClassLocal: r,
      ariaAtomicLocal: u,
      close: s,
      iconLocal: o,
      isHidden: l,
      roleLocal: h
    };
  },
  render() {
    return this.isHidden ? null : c("div", {
      class: [
        "a_alert__parent",
        {
          a_alert__parent_closable: this.closable
        }
      ]
    }, [
      c("div", {
        role: this.roleLocal,
        ariaAtomic: this.ariaAtomicLocal
      }, [
        this.isVisible && c("div", {
          class: [this.alertClass, this.alertClassLocal]
        }, [
          this.iconLocal && c(lt, {
            icon: this.iconLocal,
            class: [
              "a_alert__icon",
              this.iconClass
            ]
          }),
          c("div", {
            class: [
              "a_alert__content",
              this.alertContentClass
            ]
          }, [
            (this.html || this.text || this.safeHtml) && c(Te, {
              alwaysTranslate: this.alwaysTranslate,
              extra: this.extra,
              html: this.html,
              safeHtml: this.safeHtml,
              text: this.text
            }),
            this.$slots.default && this.$slots.default()
          ])
        ])
      ]),
      this.isVisible && this.closable && c(rt, {
        alwaysTranslate: this.alwaysTranslate,
        type: "button",
        class: "a_btn_close",
        textScreenReader: this.textClose,
        ...this.btnCloseAttributes,
        onClick: this.close
      })
    ]);
  }
};
function $T(e) {
  const t = f(e, "dataItem"), n = f(e, "isButtonGroup"), r = f(e, "classButtonGroupDefault");
  return {
    classButton: _(() => {
      if (n.value)
        return t.value.classButton || r.value;
    })
  };
}
function gF(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = f(e, "modelValue");
  return {
    isChecked: _(() => n.value && n.value.indexOf(t.value) !== -1)
  };
}
function yF(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: s = _(() => {
  })
}) {
  const l = f(e, "dataItem"), o = f(e, "modelValue"), u = (A) => {
    if (n.value) {
      A.preventDefault(), A.stopPropagation();
      return;
    }
    const E = pe(o.value) || [];
    if (r.value) {
      const p = E.indexOf(s.value);
      E.splice(p, 1);
    } else
      E.push(s.value);
    t("changeModelValue", {
      model: E,
      item: l.value,
      $event: A
    }), A.preventDefault(), A.stopPropagation();
  };
  return {
    onClick: u,
    onKeydown: (A) => {
      (A.key === "Enter" || A.keyCode === Z.space) && (u(A), A.stopPropagation(), A.preventDefault());
    }
  };
}
const St = "_a_label";
function qc(e) {
  const t = f(e, "dataItem"), n = f(e, "id"), r = f(e, "idSuffix"), s = f(e, "itemIndex"), l = _(() => t.value[Ye]), o = _(() => t.value[St]), u = _(() => r.value ? `_${r.value}` : "");
  return {
    idLocal: _(() => `${n.value}_${s.value}${u.value}`),
    labelLocal: o,
    valueLocal: l
  };
}
function kc(e) {
  const t = f(e, "dataItem"), n = f(e, "disabled"), r = f(e, "keyDisabled");
  return {
    disabledElement: _(() => {
      if (n.value || r.value && fe(t.value, r.value))
        return !0;
    })
  };
}
function qT(e) {
  const t = f(e, "dataItem"), n = f(e, "keyTitle"), r = f(e, "keyTitleCallback");
  return {
    titleLocal: _(() => {
      if (r.value)
        return r.value({ item: t.value });
      if (n.value)
        return fe(t.value, n.value);
    })
  };
}
function RF(e, {
  trueValue: t = "_YES_",
  falseValue: n = "_NO_",
  useNil: r = !0
} = {}) {
  return r && le(e) ? "" : wt(e ? { placeholder: t } : { placeholder: n });
}
function OF(e) {
  return UN(e);
}
function tl(e, { suffix: t = "", digits: n = 2, digitGrouping: r = !0 } = {}) {
  if (le(e))
    return "";
  let s = qt(e);
  if (s.split(",").length - 1 > 1)
    return e;
  s = s.replace(",", ".").replace(/[.](?=.*[.])/g, "");
  let o = _i(s);
  if (o === 0)
    return `0${n > 0 ? "," : ""}${bP("0", n)}${t ? ` ${t}` : ""}`;
  if (!o)
    return e;
  o = vP(o, n), s = qt(o);
  const u = s.split(".");
  let h = "";
  if (u[1])
    for (let m = 0; m < n; m++) {
      const L = Pe(u[1][m]) ? "0" : u[1][m];
      h = `${h}${L}`;
    }
  else
    h = hP("", n, "0");
  let A = qt(u[0] || "0"), E = !1;
  A.startsWith("-") && (A = A.substring(1), E = !0);
  let p = 0, T = "";
  return yw(A, (m) => {
    p > 0 && p % 3 === 0 && r && (T += "."), p++, T += m;
  }), `${E ? "-" : ""}${T.split("").reverse().join("")}${Ti(h) > 0 ? "," : ""}${h}${t ? ` ${t}` : ""}`;
}
function CF(e, { suffix: t = "€", digits: n = 2, digitGrouping: r = !0 } = {}) {
  return tl(e, { suffix: t, digits: n, digitGrouping: r });
}
wn.suppressDeprecationWarnings = !0;
const RE = {
  date: () => "DD.MM.YYYY",
  datetime: () => "DD.MM.YYYY HH:mm",
  fullDate: () => "dddd, DD. MMMM YYYY, HH:mm",
  time: () => "HH:mm",
  timeWithSeconds: () => "HH:mm:ss"
};
function NF(e, { format: t = "date" } = {}) {
  if (le(e) || e === "")
    return "";
  const n = wn(String(e));
  return n.isValid() ? (Me(RE[t]) && (t = RE[t]()), n.format(t)) : e;
}
function DF(e, { emptyValue: t = "-" } = {}) {
  return le(e) || e === "" ? t : e;
}
function BF(e, { linkClass: t } = {}) {
  if (le(e) || e === "" || !ot(e) || !/^\S+@\S+\.\S+$/.test(e))
    return "";
  let n = "";
  return t && (n = ` class="${t}"`), `<a href="mailto:${e}"${n}>${e}</a>`;
}
function wF(e) {
  const t = document.createElement("div");
  return t.textContent = e, t.innerHTML;
}
function PF(e, { units: t = "kb", sourceUnits: n = "b", digits: r = 2 } = {}) {
  const l = [
    "b",
    "kb",
    "mb",
    "gb",
    "tb",
    "pb",
    "eb",
    "zb",
    "yb"
  ], o = _i(e);
  if (Vw(o))
    return "";
  const u = l.indexOf(n);
  let h = l.indexOf(t);
  if (u === -1)
    return "";
  const A = o * Math.pow(1024, u);
  h === -1 && (h = Math.floor(Math.log(A) / Math.log(1024)), h < 0 && (h = 0), t = l[h]);
  const E = wt({ placeholder: `_A_FILE_SIZE_${pT(t)}_` });
  if (o === 0)
    return tl(0, { suffix: E, digits: r });
  if (u === h)
    return tl(o, { suffix: E, digits: r });
  const p = A / Math.pow(1024, Math.abs(h));
  return tl(p, { suffix: E, digits: r });
}
function FF(e, { replacer: t, space: n = 2, isHtml: r = !1, jsonClass: s = "a_code_content", tag: l = "pre" } = {}) {
  if (le(e))
    return "";
  try {
    const o = JSON.stringify(e, t, n);
    if (r) {
      const u = s ? ` class="${s}"` : "";
      return `<${l}${u}>${o}</${l}>`;
    }
    return o;
  } catch {
    return "";
  }
}
function xF(e) {
  return e ? LP(e, (t, n, r) => `${t}${t ? ", " : ""}${r}: ${n}`, "") : "";
}
function MF(e, { limit: t = 30, maxThreeDots: n = !0 } = {}) {
  if (le(e))
    return "";
  const r = qt(e);
  if (r.length <= t)
    return r;
  if (n) {
    const s = r.slice(0, t).trimEnd();
    let l = "...", o = !0;
    for (let u = s.length - 1; u > s.length - 4 && s[u] === "."; u--) {
      if (o)
        l = l.slice(0, -1);
      else
        break;
      o = !0;
    }
    return `${s}${l}`;
  }
  return `${r.substring(0, t)}...`;
}
function $F(e, { linkText: t = "", protocol: n = "https://", target: r = "", linkClass: s = "" } = {}) {
  if (le(e) || !ot(e))
    return "";
  let l = n;
  (e.startsWith("https://") || e.startsWith("http://")) && (l = "");
  const o = r ? ` target="${r}"` : "", u = s ? ` class="${s}"` : "";
  return `<a href="${l}${e}"${o}${u}>${t || e}</a>`;
}
function Xo(e, {
  defaultValue: t = "",
  isChild: n = !1,
  isHtml: r = !0,
  isSimpleArray: s = !1,
  keyChildren: l = "",
  keyLabel: o = "",
  keyLabelCallback: u,
  lastSeparator: h,
  listClass: A = "",
  separator: E,
  separatorHtml: p = "",
  tag: T = "ul"
} = {}) {
  if (!Se(e) || !e.length)
    return t;
  let m = "";
  return r === !1 || r === "false" ? (Pe(E) && (E = ", "), Y(e, (L, b) => {
    let v = OE({
      keyLabel: o,
      keyLabelCallback: u,
      index: b,
      item: L,
      isSimpleArray: s
    }), I;
    if (s) {
      if (Se(v)) {
        let y = "";
        Y(v, (R) => {
          Se(R) ? I = R : y = R;
        }), v = y;
      }
    } else l && (I = fe(L, l));
    !Pe(h) && b === e.length - 1 ? m += `${b !== 0 || n ? h : ""}${v}` : m += `${b !== 0 || n ? E : ""}${v}`, I != null && I.length && (m += Xo(I, {
      isChild: !0,
      isHtml: r,
      isSimpleArray: s,
      keyChildren: l,
      keyLabel: o,
      keyLabelCallback: u,
      separator: E
    }));
  }), m) : (Y(e, (L, b) => {
    const v = e.length === b + 1, I = OE({
      keyLabel: o,
      keyLabelCallback: u,
      index: b,
      item: L,
      isSimpleArray: s
    });
    let y, R = I;
    s ? Se(I) && Y(I, (D) => {
      Se(D) ? y = D : R = D;
    }) : l && (y = fe(L, l)), E && !v && (R += E), y != null && y.length && (R += Xo(y, {
      isChild: !0,
      isHtml: r,
      isSimpleArray: s,
      keyChildren: l,
      keyLabel: o,
      keyLabelCallback: u,
      listClass: A,
      tag: T
    })), p && !v && (R += p), m += `<li>${R}</li>`;
  }), `<${T}${qF({ listClass: A })}>${m}</${T}>`);
}
function OE({ keyLabel: e, keyLabelCallback: t, index: n, item: r, isSimpleArray: s }) {
  let l;
  return s ? l = r : Me(t) ? l = t({ item: r, itemIndex: n }) : l = e ? fe(r, e) : r, Pe(l) && (l = ""), l;
}
function qF({ listClass: e }) {
  return e ? ` class="${e}"` : "";
}
function kF(e) {
  return ET(e);
}
function UF(e, { chars: t = 4, mask: n = "*" } = {}) {
  if (le(e))
    return "";
  const r = qt(e);
  if (r.length <= t)
    return r;
  const s = Gw([t, 0]), l = n.repeat(r.length - s), o = s === 0 ? "" : r.slice(-s);
  return `${l}${o}`;
}
function HF(e, { mapping: t = {}, defaultValue: n = "" } = {}) {
  return `${e}` in t ? t[e] : n;
}
function VF(e, {
  searchModel: t = "",
  searchClass: n = "a_search_highlight",
  tag: r = "mark",
  attributes: s = [],
  caseSensitive: l = !1,
  isHtml: o = !1
} = {}) {
  if (!e)
    return "";
  if (t === "" || le(t))
    return e;
  const u = l ? "g" : "gi", h = new RegExp(Au(t), u), A = s.length ? ` ${s.join(" ")}` : "";
  if (!o)
    return e.replace(h, (T) => kT({
      value: T,
      tag: r,
      searchClass: n,
      attributesString: A
    }));
  const p = new DOMParser().parseFromString(e, "text/html");
  return UT({
    node: p.body,
    tag: r,
    searchClass: n,
    re: h,
    attributesString: A
  }), p.body.innerHTML;
}
function kT({ value: e, tag: t, searchClass: n, attributesString: r }) {
  return `<${t} class="${n}"${r}>${e}</${t}>`;
}
function UT({ node: e, re: t, tag: n, searchClass: r, attributesString: s }) {
  if (e.nodeType === Node.TEXT_NODE) {
    if (e.nodeValue.match(t)) {
      const o = e.parentNode, u = e.nodeValue.replace(t, (A) => kT({
        value: A,
        tag: n,
        searchClass: r,
        attributesString: s
      })), h = document.createElement("span");
      for (h.innerHTML = u; h.firstChild; )
        o.insertBefore(h.firstChild, e);
      o.removeChild(e);
    }
  } else e.nodeType === Node.ELEMENT_NODE && Array.from(e.childNodes).forEach((l) => UT({
    node: l,
    re: t,
    tag: n,
    searchClass: r,
    attributesString: s
  }));
}
function WF(e) {
  return pT(e);
}
const GF = B({});
function or() {
  return {
    filterBoolean: (R, { trueValue: D = "_YES_", falseValue: w = "_NO_", useNil: M = !0 } = {}) => RF(R, {
      trueValue: D,
      falseValue: w,
      useNil: M
    }),
    filterCapitalize: (R) => OF(R),
    filterCurrency: (R, { suffix: D = "€", digits: w = 2, digitGrouping: M = !0 } = {}) => CF(R, { suffix: D, digits: w, digitGrouping: M }),
    filterDate: (R, { format: D = "date" } = {}) => NF(R, { format: D }),
    filterDefaultForEmpty: (R, { emptyValue: D = "-" } = {}) => DF(R, {
      emptyValue: D
    }),
    filterEmail: (R, { linkClass: D } = {}) => BF(R, { linkClass: D }),
    filterEscapeHtml: (R) => wF(R),
    filterFileSize: (R, { units: D = "kb", sourceUnits: w = "b", digits: M = 2 } = {}) => PF(R, { units: D, sourceUnits: w, digits: M }),
    filterFloat: (R, { suffix: D = "", digits: w = 2, digitGrouping: M = !0 } = {}) => tl(R, { suffix: D, digits: w, digitGrouping: M }),
    filterJson: (R, {
      replacer: D,
      space: w = 2,
      isHtml: M = !1,
      jsonClass: P = "a_code_content",
      tag: x = "pre"
    } = {}) => FF(R, { replacer: D, space: w, isHtml: M, jsonClass: P, tag: x }),
    filterKeyValue: (R) => xF(R),
    filterLimitTo: (R, {
      limit: D = 30,
      maxThreeDots: w = !0
    } = {}) => MF(R, { limit: D, maxThreeDots: w }),
    filterLink: (R, { linkText: D = "", protocol: w = "https://", target: M = "", linkClass: P = "" } = {}) => $F(R, { linkText: D, protocol: w, target: M, linkClass: P }),
    filterList: (R, {
      isHtml: D = !0,
      isSimpleArray: w = !1,
      keyChildren: M = "",
      keyLabel: P = "",
      keyLabelCallback: x,
      listClass: C = "",
      separator: q = ", ",
      tag: W = "ul"
    } = {}) => Xo(R, { isHtml: D, listClass: C, keyLabel: P, keyLabelCallback: x, keyChildren: M, isSimpleArray: w, separator: q, tag: W }),
    filterLowerCase: (R) => kF(R),
    filterMask: (R, { chars: D = 4, mask: w = "*" } = {}) => UF(R, { chars: D, mask: w }),
    filterPropertyByValue: (R, { mapping: D = {}, defaultValue: w = "" } = {}) => HF(R, { mapping: D, defaultValue: w }),
    filterSearchHighlight: (R, {
      searchModel: D = "",
      searchClass: w = "a_search_highlight",
      tag: M = "mark",
      attributes: P = [],
      caseSensitive: x = !1,
      isHtml: C = !1
    } = {}) => VF(R, {
      searchModel: D,
      searchClass: w,
      tag: M,
      attributes: P,
      caseSensitive: x,
      isHtml: C
    }),
    filterUpperCase: (R) => WF(R),
    ...GF.value
  };
}
function Uc(e, {
  labelLocal: t = _(() => ""),
  valueLocal: n = _(() => "")
}) {
  const r = f(e, "isHiddenWithSearch"), s = f(e, "modelSearch"), l = f(e, "searching"), o = f(e, "searchingElements"), u = f(e, "showElementWennGroupFound"), {
    filterSearchHighlight: h
  } = or(), A = _(() => !!(r.value || l.value && !u.value && !o.value[n.value])), E = _(() => A.value ? t.value : h(t.value, { searchModel: s.value })), p = _(() => A.value ? "display: none;" : void 0), T = _(() => A.value ? !0 : void 0);
  return {
    currentLabelFiltered: E,
    dataHideWithSearch: T,
    styleWithSearch: p
  };
}
const Md = {
  name: "ACheckboxItem",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !0
    },
    modelValue: {
      type: Array,
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: s
    } = qc(e), {
      classButton: l
    } = $T(e), {
      isChecked: o
    } = gF(e, {
      valueLocal: s
    }), {
      disabledElement: u
    } = kc(e), {
      onClick: h,
      onKeydown: A
    } = yF(e, t, {
      isChecked: o,
      valueLocal: s
    }), {
      currentLabelFiltered: E,
      styleWithSearch: p
    } = Uc(e, {
      labelLocal: r,
      valueLocal: s
    }), {
      titleLocal: T
    } = qT(e);
    return {
      classButton: l,
      currentLabelFiltered: E,
      disabledElement: u,
      idLocal: n,
      isChecked: o,
      labelLocal: r,
      onClick: h,
      onKeydown: A,
      styleWithSearch: p,
      titleLocal: T,
      valueLocal: s
    };
  },
  render() {
    return this.isButtonGroup ? [
      c("input", {
        id: this.idLocal,
        checked: this.isChecked,
        class: "a_btn_check",
        disabled: this.disabledElement,
        name: this.id,
        style: this.styleWithSearch,
        type: "checkbox",
        value: this.valueLocal,
        onClick: this.onClick,
        onKeydown: this.onKeydown
      }),
      c(ye, {
        alwaysTranslate: this.alwaysTranslate,
        class: this.classButton,
        classDefault: "",
        extra: {
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        },
        for: this.idLocal,
        tag: "label",
        title: this.titleLocal,
        type: "button"
      }, () => [
        this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          id: this.id,
          item: this.dataItem,
          itemIndex: this.itemIndex,
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        }) : this.labelLocal && xt(c("span", {}), [
          [hn, this.currentLabelFiltered]
        ])
      ])
    ] : [
      c("div", {
        class: ["a_custom_control a_custom_checkbox", {
          a_custom_control_invalid: this.isErrors
        }],
        style: this.styleWithSearch
      }, [
        c("input", {
          id: this.idLocal,
          checked: this.isChecked,
          class: "a_custom_control_input",
          disabled: this.disabledElement,
          name: this.id,
          type: "checkbox",
          value: this.valueLocal,
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(ye, {
          alwaysTranslate: this.alwaysTranslate,
          class: {
            a_custom_control_label: !0,
            a_custom_control_label_width_auto: this.isWidthAuto
          },
          classDefault: "",
          extra: {
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          },
          for: this.idLocal,
          tag: "label",
          title: this.titleLocal,
          type: "button"
        }, () => [
          this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            id: this.id,
            item: this.dataItem,
            itemIndex: this.itemIndex,
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          }) : this.labelLocal && xt(c("span", {
            class: "a_custom_control_label__text"
          }), [
            [hn, this.currentLabelFiltered]
          ])
        ])
      ]),
      this.slotAppendName && this.$slots[this.slotAppendName] ? this.$slots[this.slotAppendName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        isChecked: this.isChecked,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : ""
    ];
  }
};
function KF(e) {
  const t = f(e, "data"), n = f(e, "modelValueObj"), r = _(() => {
    const o = {
      indeterminate: void 0,
      checkedAll: !1,
      checkedSome: !1,
      uncheckedSome: !1
    };
    return cn(n.value) || (Y(t.value, (u) => {
      const h = u[Ye];
      if (n.value[h] ? o.checkedSome = !0 : o.uncheckedSome = !0, o.checkedSome && o.uncheckedSome)
        return o.indeterminate = !0, !1;
    }), o.checkedSome && !o.uncheckedSome && (o.checkedAll = !0)), o;
  }), s = _(() => r.value.checkedAll), l = _(() => r.value.indeterminate);
  return {
    isCheckedAll: s,
    isIndeterminate: l
  };
}
function jF(e, { emit: t }, {
  isCheckedAll: n = _(() => !1),
  isIndeterminate: r = _(() => {
  })
}) {
  const s = f(e, "data"), l = f(e, "dataKeyByKeyId"), o = f(e, "modelValue"), u = () => Pt(o.value || [], (T) => !l.value[T]), h = ({ model: T }) => (Y(s.value, (m) => {
    const L = m[Ye];
    T.push(L);
  }), T), A = (T) => {
    let m = u();
    (r.value || !n.value) && (m = h({ model: m })), t("changeModelValue", {
      $event: T,
      model: m
    });
  }, E = (T) => {
    T.stopPropagation(), T.preventDefault(), A(T);
  };
  return {
    onClick: E,
    onKeydown: (T) => {
      (T.keyCode === Z.enter || T.keyCode === Z.space) && (E(T), T.stopPropagation(), T.preventDefault());
    }
  };
}
function zF(e) {
  const t = f(e, "id"), n = _(() => `${t.value}_legend`);
  return {
    idGroup: _(() => `${t.value}_group`),
    idLocal: n
  };
}
function YF(e) {
  const t = f(e, "label"), n = f(e, "modelSearch"), r = f(e, "showSearchHighlight"), {
    filterSearchHighlight: s
  } = or();
  return {
    labelSearchHighlight: _(() => r.value ? s(t.value, { searchModel: n.value }) : t.value)
  };
}
const HT = {
  name: "ACheckboxLegend",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    dataKeyByKeyId: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: !1
    },
    id: {
      type: String,
      required: !0
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    label: {
      type: String,
      required: !1,
      default: void 0
    },
    legendClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    main: {
      type: Boolean,
      required: !1
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: () => []
    },
    modelValueObj: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    showSearchHighlight: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textAfterLabel: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idGroup: n,
      idLocal: r
    } = zF(e), {
      isCheckedAll: s,
      isIndeterminate: l
    } = KF(e), {
      onClick: o,
      onKeydown: u
    } = jF(e, t, {
      isCheckedAll: s,
      isIndeterminate: l
    }), {
      labelSearchHighlight: h
    } = YF(e);
    return {
      idGroup: n,
      idLocal: r,
      isCheckedAll: s,
      isIndeterminate: l,
      labelSearchHighlight: h,
      onClick: o,
      onKeydown: u
    };
  },
  render() {
    return this.hasControlCheckbox ? c("legend", {
      class: [
        "a_legend",
        {
          a_legend_invalid: this.isErrors
        },
        this.legendClass
      ]
    }, [
      c("div", {
        class: ["a_custom_control a_custom_checkbox", {
          a_custom_control_invalid: this.isErrors
        }]
      }, [
        c("input", {
          id: this.idLocal,
          "aria-controls": this.idGroup,
          checked: this.isCheckedAll,
          class: "a_custom_control_input",
          disabled: this.disabled,
          indeterminate: this.isIndeterminate,
          type: "checkbox",
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(ye, {
          alwaysTranslate: this.alwaysTranslate,
          class: "a_custom_control_label a_custom_control_label_width_auto",
          classDefault: "",
          for: this.idLocal,
          html: this.labelSearchHighlight,
          textScreenReader: this.labelScreenReader,
          tag: "label",
          textAfter: this.textAfterLabel,
          textClass: "a_custom_control_label__text",
          type: "text"
        })
      ])
    ]) : c(ye, {
      id: this.idLocal,
      class: [
        "a_legend",
        {
          a_legend_invalid: this.isErrors
        },
        this.legendClass
      ],
      html: this.labelSearchHighlight,
      tag: "legend",
      textAfter: this.textAfterLabel,
      textScreenReader: this.labelScreenReader,
      type: "text"
    });
  }
};
function XF(e) {
  const t = f(e, "levelIndex"), n = f(e, "groupsForLever"), r = f(e, "groupParentKey"), s = _(() => !!n.value[t.value]);
  return {
    currentGroups: _(() => {
      const o = n.value[t.value];
      return le(r.value) ? o : Pt(n.value[t.value], ["groupParentKey", r.value]);
    }),
    isComponentVisible: s
  };
}
function ZF(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = f(e, "modelValue");
  return {
    isChecked: _(() => Se(n.value) ? n.value.indexOf(t.value) !== -1 : n.value === t.value)
  };
}
function JF(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: s = _(() => {
  })
}) {
  const l = f(e, "dataItem"), o = (h) => {
    if (n.value || r.value) {
      h.preventDefault(), h.stopPropagation();
      return;
    }
    t("changeModelValue", {
      model: s.value,
      item: l.value,
      $event: h
    }), h.preventDefault(), h.stopPropagation();
  };
  return {
    onClick: o,
    onKeydown: (h) => {
      (h.key === "Enter" || h.keyCode === Z.space) && (o(h), h.stopPropagation(), h.preventDefault());
    }
  };
}
const $d = {
  name: "ARadioItem",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: s
    } = qc(e), {
      classButton: l
    } = $T(e), {
      isChecked: o
    } = ZF(e, {
      valueLocal: s
    }), {
      disabledElement: u
    } = kc(e), {
      onClick: h,
      onKeydown: A
    } = JF(e, t, {
      disabledElement: u,
      isChecked: o,
      valueLocal: s
    }), {
      currentLabelFiltered: E,
      styleWithSearch: p
    } = Uc(e, {
      labelLocal: r,
      valueLocal: s
    }), {
      titleLocal: T
    } = qT(e);
    return {
      classButton: l,
      currentLabelFiltered: E,
      disabledElement: u,
      idLocal: n,
      isChecked: o,
      labelLocal: r,
      onClick: h,
      onKeydown: A,
      styleWithSearch: p,
      titleLocal: T,
      valueLocal: s
    };
  },
  render() {
    return this.isButtonGroup ? [
      c("input", {
        id: this.idLocal,
        checked: this.isChecked,
        class: "a_btn_check",
        disabled: this.disabledElement,
        name: this.id,
        style: this.styleWithSearch,
        type: "radio",
        value: this.valueLocal,
        onClick: this.onClick,
        onKeydown: this.onKeydown
      }),
      c(ye, {
        alwaysTranslate: this.alwaysTranslate,
        class: this.classButton,
        classDefault: "",
        extra: {
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        },
        for: this.idLocal,
        tag: "label",
        title: this.titleLocal,
        type: "button"
      }, () => [
        this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          id: this.id,
          item: this.dataItem,
          itemIndex: this.itemIndex,
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        }) : this.labelLocal && xt(c("span", {}), [
          [hn, this.currentLabelFiltered]
        ])
      ])
    ] : [
      c("div", {
        class: ["a_custom_control a_custom_radio", {
          a_custom_control_invalid: this.isErrors
        }],
        style: this.styleWithSearch
      }, [
        c("input", {
          id: this.idLocal,
          checked: this.isChecked,
          class: "a_custom_control_input",
          disabled: this.disabledElement,
          name: this.id,
          type: "radio",
          value: this.valueLocal,
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(ye, {
          alwaysTranslate: this.alwaysTranslate,
          class: {
            a_custom_control_label: !0,
            a_custom_control_label_width_auto: this.isWidthAuto
          },
          classDefault: "",
          extra: {
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          },
          for: this.idLocal,
          tag: "label",
          title: this.titleLocal,
          type: "button"
        }, () => [
          this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            id: this.id,
            item: this.dataItem,
            itemIndex: this.itemIndex,
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          }) : this.labelLocal && xt(c("span", {
            class: "a_custom_control_label__text"
          }), [
            [hn, this.currentLabelFiltered]
          ])
        ])
      ]),
      this.slotAppendName && this.$slots[this.slotAppendName] ? this.$slots[this.slotAppendName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        isChecked: this.isChecked,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : ""
    ];
  }
};
function QF(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = f(e, "type"), r = f(e, "modelValue");
  return {
    isChecked: _(() => n.value === "multiselect" ? !!(r.value && r.value.indexOf(t.value) !== -1) : r.value === t.value)
  };
}
function ex(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: s = _(() => {
  })
}) {
  const l = (u) => {
    n.value || (t("changeModelValue", {
      currentValue: s.value,
      $event: u,
      isSelected: r.value
    }), u.stopPropagation(), u.preventDefault());
  };
  return {
    onClick: l,
    onKeydown: (u) => {
      n.value || (u.keyCode === Z.enter || u.keyCode === Z.space) && l(u);
    }
  };
}
const Hc = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-lg" viewBox="0 0 16 16">
  <path d="M12.736 3.97a.733.733 0 0 1 1.047 0c.286.289.29.756.01 1.05L7.88 12.01a.733.733 0 0 1-1.065.02L3.217 8.384a.757.757 0 0 1 0-1.06.733.733 0 0 1 1.047 0l3.052 3.093 5.4-6.425z"/>
</svg>`, Do = {
  name: "ASelectElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: s
    } = qc(e), {
      isChecked: l
    } = QF(e, {
      valueLocal: s
    }), {
      disabledElement: o
    } = kc(e), {
      onClick: u,
      onKeydown: h
    } = ex(e, t, {
      disabledElement: o,
      isChecked: l,
      valueLocal: s
    }), {
      currentLabelFiltered: A,
      dataHideWithSearch: E,
      styleWithSearch: p
    } = Uc(e, {
      labelLocal: r,
      valueLocal: s
    });
    return {
      currentLabelFiltered: A,
      dataHideWithSearch: E,
      disabledElement: o,
      idLocal: n,
      isChecked: l,
      labelLocal: r,
      onClick: u,
      onKeydown: h,
      styleWithSearch: p
    };
  },
  render() {
    return c("div", {
      ariaSelected: this.isChecked,
      class: ["a_select__menu__link a_select__element_clickable", {
        a_select__menu__link_selected: this.isChecked,
        a_select__menu__link_disabled: this.disabledElement
      }],
      "data-hide": this.dataHideWithSearch,
      disabled: this.disabledElement,
      role: "option",
      style: this.styleWithSearch,
      tabindex: "-1",
      onClick: this.onClick,
      onKeydown: this.onKeydown
    }, [
      c("span", {
        class: "a_select__menu__link__icon_box"
      }, [
        this.isChecked && c(lt, {
          icon: Hc
        })
      ]),
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered,
        inDropdown: !0
      }) : xt(c("span"), [
        [hn, this.currentLabelFiltered]
      ])
    ]);
  }
};
function tx(e) {
  const t = f(e, "type"), n = _(() => t.value === "select" || t.value === "multiselect");
  return {
    currentComponent: _(() => t.value === "radio" ? $d : t.value === "checkbox" ? Md : n.value ? Do : ""),
    isComponentSelect: n
  };
}
function nx({ emit: e }) {
  return {
    onChangeModelValue: (n) => {
      e("changeModelValue", n);
    }
  };
}
const Vc = {
  name: "ACheckboxRadioGroups",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    dataGrouped: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    groupParentKey: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    groupsForLever: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: !1
    },
    hideParentWithSearch: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    levelIndex: {
      type: Number,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    modelValueObj: {
      type: Object,
      required: !1,
      default: void 0
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    searchingGroups: {
      type: Object,
      required: !0
    },
    searchingGroupsWithSearchInGroup: {
      type: Object,
      required: !0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0,
      validator: (e) => ["radio", "checkbox", "select", "multiselect"].indexOf(e) !== -1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      onChangeModelValue: n
    } = nx(t), {
      currentComponent: r,
      isComponentSelect: s
    } = tx(e), {
      isComponentVisible: l,
      currentGroups: o
    } = XF(e);
    return {
      currentComponent: r,
      currentGroups: o,
      isComponentSelect: s,
      isComponentVisible: l,
      onChangeModelValue: n
    };
  },
  render() {
    return this.isComponentVisible ? [
      ...this.currentGroups.map((e, t) => {
        let n, r = !1, s = !1;
        if (this.searching) {
          const l = `${this.groupParentKey ? `${this.groupParentKey}_` : ""}${e.groupKey}`;
          s = this.searchingGroupsWithSearchInGroup[l], (this.isHiddenWithSearch || !this.searchingGroups[l] && !s) && (n = "display: none;", r = !0);
        }
        return e.groupKey === "_not_grouped" ? c("div", {
          class: [
            "a_checkbox_radio_group__data",
            {
              a_btn_group: this.isButtonGroup
            }
          ],
          style: n
        }, [
          ...this.dataGrouped[e.allGroupKeys].map((l, o) => c(this.currentComponent, {
            id: `${this.id}`,
            alwaysTranslate: this.alwaysTranslate,
            classButtonGroupDefault: this.isComponentSelect ? void 0 : this.classButtonGroupDefault,
            dataItem: l,
            disabled: this.disabled,
            isButtonGroup: this.isComponentSelect ? void 0 : this.isButtonGroup,
            isErrors: this.isComponentSelect ? void 0 : this.isErrors,
            isHiddenWithSearch: r,
            isWidthAuto: this.isComponentSelect ? void 0 : this.isWidthAuto,
            itemIndex: o,
            keyDisabled: this.keyDisabled,
            keyTitle: this.keyTitle,
            keyTitleCallback: this.keyTitleCallback,
            modelSearch: this.modelSearch,
            modelValue: this.modelValue,
            searching: this.searching,
            searchingElements: this.searchingElements,
            showElementWennGroupFound: s,
            slotAppendName: this.slotAppendName,
            slotName: this.slotName,
            type: this.type,
            onChangeModelValue: this.onChangeModelValue
          }, this.$slots))
        ]) : c("fieldset", {
          class: "a_fieldset",
          style: n
        }, [
          c(HT, {
            id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}`,
            alwaysTranslate: this.alwaysTranslate,
            data: e.data,
            dataKeyByKeyId: e.dataKeyByKeyId,
            disabled: this.disabled,
            hasControlCheckbox: this.hasControlCheckbox,
            isErrors: this.isErrors,
            label: e.groupLabel,
            modelSearch: this.modelSearch,
            modelValue: this.modelValue,
            modelValueObj: this.modelValueObj,
            showSearchHighlight: s,
            onChangeModelValue: this.onChangeModelValue
          }),
          c("div", {
            id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}_group`,
            "aria-labelledby": `${this.id}_lev_${this.levelIndex + 1}_gr_${t}_legend`,
            role: "group"
          }, [
            !!(this.dataGrouped[e.allGroupKeys] || []).length && c("div", {
              class: [
                "a_checkbox_radio_group__data",
                {
                  a_btn_group: this.isButtonGroup
                }
              ]
            }, [
              ...(this.dataGrouped[e.allGroupKeys] || []).map((l, o) => c(this.currentComponent, {
                id: `${this.id}_gr_${t}`,
                alwaysTranslate: this.alwaysTranslate,
                classButtonGroupDefault: this.isComponentSelect ? void 0 : this.classButtonGroupDefault,
                dataItem: l,
                disabled: this.disabled,
                isButtonGroup: this.isComponentSelect ? void 0 : this.isButtonGroup,
                isErrors: this.isComponentSelect ? void 0 : this.isErrors,
                isHiddenWithSearch: r,
                isWidthAuto: this.isComponentSelect ? void 0 : this.isWidthAuto,
                itemIndex: o,
                keyDisabled: this.keyDisabled,
                keyTitle: this.keyTitle,
                keyTitleCallback: this.keyTitleCallback,
                modelSearch: this.modelSearch,
                modelValue: this.modelValue,
                searching: this.searching,
                searchingElements: this.searchingElements,
                showElementWennGroupFound: s,
                slotAppendName: this.slotAppendName,
                slotName: this.slotName,
                type: this.type,
                onChangeModelValue: this.onChangeModelValue
              }, this.$slots))
            ]),
            c(kr("ACheckboxRadioGroups"), {
              id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}`,
              alwaysTranslate: this.alwaysTranslate,
              classButtonGroupDefault: this.classButtonGroupDefault,
              dataGrouped: this.dataGrouped,
              disabled: this.disabled,
              groupParentKey: e.groupKey,
              groupsForLever: this.groupsForLever,
              hasControlCheckbox: this.hasControlCheckbox,
              isButtonGroup: this.isButtonGroup,
              isErrors: this.isErrors,
              isHiddenWithSearch: r,
              isWidthAuto: this.isWidthAuto,
              keyDisabled: this.keyDisabled,
              keyTitle: this.keyTitle,
              keyTitleCallback: this.keyTitleCallback,
              levelIndex: this.levelIndex + 1,
              modelSearch: this.modelSearch,
              modelValue: this.modelValue,
              modelValueObj: this.modelValueObj,
              searching: this.searching,
              searchingElements: this.searchingElements,
              searchingGroups: this.searchingGroups,
              searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
              slotName: this.slotName,
              slotAppendName: this.slotAppendName,
              type: this.type,
              onChangeModelValue: this.onChangeModelValue
            }, this.$slots)
          ])
        ]);
      })
    ] : null;
  }
};
function VT(e) {
  const t = f(e, "align"), n = f(e, "size"), r = f(e, "textAlign"), s = _(() => `a_text_${t.value}`), l = _(() => r.value === "left" ? "a_cloak__box_text_left" : "a_cloak__box_text_right"), o = _(() => `a_fs_${n.value}`);
  return {
    classAlign: s,
    classForBox: l,
    classTextSize: o
  };
}
const ya = B({
  propsDefault: {
    align: "center",
    extra: void 0,
    size: 6,
    tag: "div",
    text: "_A_CLOAK_LOADING_",
    textAlign: "right"
  }
}), k_e = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    ya.value.propsDefault = {
      ...ya.value.propsDefault,
      ...t
    };
  }
}, cl = {
  name: "ACloak",
  props: {
    align: {
      type: String,
      required: !1,
      default: () => ya.value.propsDefault.align,
      validator: (e) => ["left", "center", "right"].indexOf(e) !== -1
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: ya.value.propsDefault.extra
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => ya.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    spinnerClass: {
      type: [String, Object],
      required: !1,
      default: () => Fn.value.propsDefault.class
    },
    spinnerSafeHtml: {
      type: String,
      required: !1,
      default: () => Fn.value.propsDefault.safeHtml
    },
    spinnerTag: {
      type: String,
      required: !1,
      default: () => Fn.value.propsDefault.tag
    },
    tag: {
      type: String,
      required: !1,
      default: () => ya.value.propsDefault.tag
    },
    text: {
      type: String,
      required: !1,
      default: () => ya.value.propsDefault.text
    },
    textAlign: {
      type: String,
      required: !1,
      default: () => ya.value.propsDefault.textAlign,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    }
  },
  setup(e) {
    const {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    } = VT(e);
    return {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    };
  },
  render() {
    const e = this.textAlign === "left", t = c(Te, {
      alwaysTranslate: this.alwaysTranslate,
      tag: "span",
      class: [
        "a_cloak__text",
        e ? "a_cloak__text_left" : "a_cloak__text_right",
        this.classTextSize
      ],
      text: this.text,
      extra: this.extra
    });
    return c(
      this.tag,
      {
        role: "status",
        class: this.classAlign
      },
      [
        c("div", {
          class: ["a_cloak__box", this.classForBox]
        }, [
          e ? t : "",
          c(ul, {
            alwaysTranslate: this.alwaysTranslate,
            class: [
              "a_cloak__spinner",
              this.spinnerClass
            ],
            "aria-hidden": "true",
            safeHtml: this.spinnerSafeHtml,
            size: this.size,
            tag: this.spinnerTag
          }),
          e ? "" : t
        ])
      ]
    );
  }
}, Yt = {
  name: "AErrorsText",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const t = f(e, "errors");
    return {
      errorsLocal: _(() => ot(t.value) ? [t.value] : t.value)
    };
  },
  render() {
    return c("ul", {
      id: this.id,
      class: "a_form_element__invalid_text"
    }, [
      this.errorsLocal.map((e) => c("li", null, e))
    ]);
  }
}, Xt = {
  name: "AFormHelpText",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    html: {
      type: [String, Number],
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  render() {
    return this.html && c(Te, {
      id: this.id,
      alwaysTranslate: this.alwaysTranslate,
      class: "a_form_element__help_text",
      html: this.html,
      extra: this.extra
    });
  }
};
function rx({ emit: e }) {
  return {
    clearLocal: ({ $event: n }) => {
      n.stopPropagation(), n.preventDefault(), e("clear", n);
    }
  };
}
const ca = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
  <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z"/>
</svg>`, vu = {
  name: "AFormElementBtnClear",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    class: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_transparent_dark a_btn_small"
    },
    icon: {
      type: String,
      required: !1,
      default: ca
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    title: {
      type: String,
      required: !1,
      default: "_REMOVE_FIELD_CONTENT_"
    },
    textScreenReader: {
      type: String,
      required: !1,
      default: "_REMOVE_FIELD_CONTENT_"
    },
    tabindex: {
      type: Number,
      required: !1,
      default: -1
    },
    iconClass: {
      type: String,
      required: !1,
      default: "a_form_element__btn_close__icon"
    }
  },
  emits: [
    "clear"
  ],
  setup(e, t) {
    const {
      clearLocal: n
    } = rx(t);
    return {
      clearLocal: n
    };
  },
  render() {
    if (!this.disabled)
      return c(ye, {
        class: [
          "a_form_control__actions__btn",
          this.class
        ],
        disabled: this.disabled,
        iconClass: this.iconClass,
        iconLeft: this.icon,
        onClick: this.clearLocal,
        tabindex: this.tabindex,
        textScreenReader: this.textScreenReader,
        title: this.title,
        type: "button"
      });
  }
};
function WT(e) {
  return `clickALabel_${e}`;
}
function ax(e, {
  idLabelLocal: t = _(() => ""),
  preventLocal: n = _(() => !1),
  stopLocal: r = _(() => !1)
}) {
  const s = f(e, "clickLabel"), l = f(e, "id");
  return {
    onClick: ({ $event: u }) => {
      Me(s.value) && s.value({
        id: l.value,
        idLabel: t.value,
        $event: u
      }), n.value && (u == null || u.preventDefault()), r.value && (u == null || u.stopPropagation()), setTimeout(() => {
        Rt.$emit(WT(l.value), {
          id: l.value,
          idLabel: t.value,
          $event: u
        });
      });
    }
  };
}
function sx(e, {
  hideForLocal: t = _(() => !1),
  hideIdLocal: n = _(() => !1)
}) {
  const r = f(e, "id"), s = f(e, "idSuffix"), l = _(() => {
    if (!n.value)
      return `${r.value}${s.value}`;
  });
  return {
    forLabelLocal: _(() => {
      if (!t.value)
        return r.value;
    }),
    idLabelLocal: l
  };
}
function ix(e) {
  const t = f(e, "isLabelFloat"), n = f(e, "label"), r = f(e, "required"), s = _(() => !le(n.value)), l = _(() => s.value ? n.value : void 0), o = _(() => r.value && s.value ? "*" : ""), u = _(() => {
    if (t.value)
      return l.value;
  });
  return {
    isLabel: s,
    labelLocal: l,
    textAfterLabel: o,
    titleLocal: u
  };
}
const Pa = B({
  fieldset: !0,
  group: !0
}), Wc = B({
  multiselect: !0,
  checkbox: !0
}), GT = B({
  dateRange: !0,
  integerNonNegativeRange: !0,
  integerPositiveRange: !0,
  integerRange: !0,
  numberRange: !0
}), lx = B({
  checkbox: !0,
  multiselect: !0,
  radio: !0,
  select: !0
}), ox = B({
  select: {
    hideFor: !0,
    prevent: !0
  },
  multiselect: {
    hideFor: !0,
    prevent: !0
  },
  file: {
    hideId: !0
  },
  // numberRange
  numberRange: {
    hideFor: !0,
    prevent: !0
  },
  integerNonNegativeRange: {
    hideFor: !0,
    prevent: !0
  },
  integerPositiveRange: {
    hideFor: !0,
    prevent: !0
  },
  integerRange: {
    hideFor: !0,
    prevent: !0
  },
  // numberRange /
  dateRange: {
    hideFor: !0,
    prevent: !0
  }
});
function ux(e) {
  const t = f(e, "hideFor"), n = f(e, "hideId"), r = f(e, "prevent"), s = f(e, "stop"), l = f(e, "type"), o = _(() => ox.value[l.value] || {}), u = ({ prop: T, propForType: m }) => Pe(T) ? m : T, h = _(() => u({
    prop: s.value,
    propForType: o.value.stop
  })), A = _(() => u({
    prop: r.value,
    propForType: o.value.prevent
  })), E = _(() => u({
    prop: n.value,
    propForType: o.value.hideId
  }));
  return {
    hideForLocal: _(() => u({
      prop: t.value,
      propForType: o.value.hideFor
    })),
    hideIdLocal: E,
    preventLocal: A,
    stopLocal: h
  };
}
const kt = {
  name: "ALabel",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    clickLabel: {
      type: Function,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hideFor: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    hideId: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: "_label"
    },
    isError: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "label"
    },
    type: {
      type: String,
      required: !1
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = Nt(e), {
      hideForLocal: n,
      hideIdLocal: r,
      preventLocal: s,
      stopLocal: l
    } = ux(e), {
      forLabelLocal: o,
      idLabelLocal: u
    } = sx(e, {
      hideForLocal: n,
      hideIdLocal: r
    }), {
      isLabel: h,
      labelLocal: A,
      textAfterLabel: E,
      titleLocal: p
    } = ix(e), {
      onClick: T
    } = ax(e, {
      idLabelLocal: u,
      preventLocal: s,
      stopLocal: l
    });
    return {
      attributesToExcludeFromRender: t,
      forLabelLocal: o,
      idLabelLocal: u,
      isLabel: h,
      labelLocal: A,
      onClick: T,
      textAfterLabel: E,
      titleLocal: p
    };
  },
  render() {
    return c(ye, {
      id: this.idLabelLocal,
      alwaysTranslate: this.alwaysTranslate,
      class: [
        "a_form_element_label",
        this.labelClass,
        this.isLabelFloat ? "a_form_element_label_float" : "a_form_element_label_static",
        {
          a_form_element_label_error: this.isError
        }
      ],
      extra: this.extra,
      for: this.forLabelLocal,
      html: this.labelLocal,
      htmlScreenReader: this.labelScreenReader,
      loading: this.loading,
      loadingAlign: "right",
      loadingClass: "a_spinner_small a_form_element_label__spinner",
      tag: this.tag,
      textAfter: this.textAfterLabel,
      textAriaHidden: !!this.labelScreenReader,
      title: this.titleLocal,
      type: "text",
      onClick: this.onClick,
      ...this.attributesToExcludeFromRender
    });
  }
};
function _x({
  isBtnShowPasswordVisible: e = _(() => !1),
  isClearButtonLocal: t = _(() => !1)
}) {
  return {
    inputClassBtns: _(() => {
      if (e.value)
        return t.value ? "a_form_element_with_two_btns" : "a_form_element_with_one_btn";
      if (t.value)
        return "a_form_element_with_one_btn";
    })
  };
}
function dx(e) {
  const t = f(e, "modelValue"), n = f(e, "type");
  return {
    modelValueLocal: _(() => n.value === "color" && !t.value ? "#000000" : t.value)
  };
}
function cx(e, {
  changeModel: t = () => {
  }
}) {
  const n = f(e, "disabled"), r = f(e, "type"), s = B(void 0);
  return {
    inputRef: s,
    onInput: (o) => {
      if (n.value)
        return;
      let u = o.target.value;
      r.value === "integer" && (u = u.replace(/\D/g, ""), u !== "" && (u = +u), s.value.value = u), r.value === "number" && u !== "" && (u = +u), t({
        model: u
      });
    }
  };
}
const KT = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01757813,0,0,0.0175781,-0.02634961,0.65854895)"
  >
    <path
      d="m 318.642,688.822 44.574,-80.57 q -49.718,-35.998 -77.712,-90.858 -27.994,-54.86 -27.999,-116.002 0,-69.147 34.857,-128.572 Q 161.506,339.676 74.649,474.533 170.076,621.96 318.651,688.819 Z M 540.925,255.106 q 0,-11.42 -8.004,-19.424 -8.004,-8.004 -19.424,-8.004 -71.429,0 -122.571,51.142 -51.142,51.142 -51.142,122.571 0,11.42 8.004,19.424 8.004,8.004 19.424,8.004 11.42,0 19.424,-8.004 8.004,-8.004 8.004,-19.424 0,-49.143 34.857,-83.997 34.857,-34.854 83.997,-34.857 11.42,0 19.424,-8.004 8.004,-8.004 8.004,-19.424 z M 748.354,145.968 q 0,4.001 -0.584,5.141 -60.003,107.428 -179.999,323.427 -119.996,215.999 -180.573,324 l -27.999,50.859 q -5.725,9.142 -16.006,9.142 -6.864,0 -76.57,-40 -9.142,-5.725 -9.142,-16.006 0,-6.864 25.149,-49.718 Q 200.917,715.671 132.062,653.954 63.207,592.237 12.919,513.955 1.499,496.244 1.499,474.522 q 0,-21.722 11.42,-39.433 87.429,-134.286 217.143,-211.999 129.714,-77.713 283.429,-77.712 50.859,0 102.861,9.725 l 30.855,-55.425 q 5.725,-9.142 16.006,-9.142 2.863,0 10.282,3.418 7.419,3.418 17.711,8.865 10.292,5.447 18.858,10.564 8.566,5.117 18.008,10.564 9.442,5.447 11.143,6.566 9.142,5.725 9.142,15.423 z m 21.143,255.427 q 0,79.43 -45.141,144.859 -45.141,65.429 -119.429,94 l 160,-286.857 q 4.57,25.711 4.57,48 z m 256.002,73.144 q 0,20.008 -11.42,39.433 -22.287,36.571 -62.285,82.856 -85.714,98.284 -198.568,152.568 -112.854,54.284 -239.713,54.285 l 42.284,-75.43 q 121.144,-10.282 224.285,-78.29 103.141,-68.008 172.286,-175.429 -65.711,-102.285 -161.146,-168 l 35.998,-64.004 q 54.285,36.571 104.285,87.429 50,50.858 82.572,105.143 11.42,19.424 11.42,39.433 z"
    />
  </g>
</svg>`, jT = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01752671,0,0,0.01752691,-1.7526709e-5,0.68479724)"
  >
    <path
      d="M 953.646,474.431 Q 866.534,339.176 735.292,272.123 q 34.959,59.601 34.959,128.952 0,106.025 -75.367,181.39 -75.367,75.365 -181.39,75.367 -106.023,0.002 -181.39,-75.367 -75.367,-75.369 -75.367,-181.39 0,-69.35 34.959,-128.952 -131.243,67.052 -218.354,202.308 76.223,117.492 191.132,187.121 114.909,69.629 249.018,69.633 134.109,0.004 249.018,-69.633 114.909,-69.637 191.132,-187.121 z M 541.004,254.353 q 0,-11.454 -8.027,-19.481 -8.027,-8.027 -19.481,-8.027 -71.639,0 -122.932,51.293 -51.293,51.293 -51.293,122.932 0,11.454 8.027,19.481 8.027,8.027 19.481,8.027 11.454,0 19.481,-8.027 8.027,-8.027 8.027,-19.481 0,-49.288 34.959,-84.246 34.959,-34.958 84.246,-34.959 11.454,0 19.481,-8.027 Q 541,265.811 541,254.357 Z m 486.001,220.078 q 0,19.481 -11.454,39.549 Q 935.316,645.795 799.773,725.169 664.23,804.543 513.503,804.546 362.776,804.549 227.233,724.882 91.69,645.215 11.455,513.974 0.001,493.906 0.001,474.425 q 0,-19.481 11.454,-39.549 80.235,-131.243 215.778,-210.908 135.543,-79.665 286.27,-79.664 150.727,0.001 286.27,79.664 135.543,79.663 215.778,210.908 11.454,20.068 11.454,39.549 z"
    />
  </g>
</svg>`;
function fx(e, {
  setTypeLocal: t = () => {
  },
  typeForInput: n = _(() => "")
}) {
  const r = f(e, "showPassword"), s = f(e, "type"), l = _(() => !!(s.value === "password" && r.value)), o = _(() => n.value === "password"), u = _(() => o.value ? KT : jT), h = () => {
    t({
      type: o.value ? "text" : "password"
    });
  }, A = _(() => o.value ? "_A_INPUT_SHOW_PASSWORD_" : "_A_INPUT_HIDE_PASSWORD_");
  return {
    iconBtnShowPassword: u,
    isBtnShowPasswordVisible: l,
    titleBtnShowPassword: A,
    toggleTypePassword: h
  };
}
function hx(e) {
  const t = f(e, "type"), n = B(void 0), r = _(() => n.value === "integer" ? "text" : n.value);
  return {
    setTypeLocal: ({ type: l } = {}) => {
      l ? n.value = l : n.value = t.value;
    },
    typeForInput: r
  };
}
function Ax(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = f(e, "errors"), r = _(() => n.value ? ot(n.value) ? !0 : Se(n.value) ? !!Ti(n.value) : !1 : !1);
  return {
    errorsId: _(() => `${t.value}_errors_text`),
    isErrors: r
  };
}
function Zt(e, { emit: t }) {
  const n = f(e, "change"), r = f(e, "disabled"), s = f(e, "helpText"), l = f(e, "htmlId"), o = f(e, "id"), u = f(e, "idPrefix"), h = f(e, "modelUndefined"), A = f(e, "modelValue"), E = B(!1), p = _(() => fl({
    id: o.value,
    idPrefix: u.value,
    htmlId: l.value
  })), {
    errorsId: T,
    isErrors: m
  } = Ax(e, {
    htmlIdLocal: p
  }), L = ({ model: w, currentModel: M, item: P }) => {
    t("update:modelValue", w), n.value({
      currentModel: M,
      id: o.value,
      item: P,
      model: w,
      props: e
    });
  }, b = _(() => !!(A.value || A.value === 0)), v = () => {
    r.value || L({
      model: h.value
    });
  }, I = _(() => `${p.value}_help_text`);
  return {
    ariaDescribedbyLocal: _(() => {
      let w = "";
      return s.value && (w += I.value), m.value && (w && (w += " "), w += T.value), w || void 0;
    }),
    changeModel: L,
    clearModel: v,
    errorsId: T,
    helpTextId: I,
    htmlIdLocal: p,
    isErrors: m,
    isFocus: E,
    isModel: b,
    onBlur: (w) => {
      E.value = !1, t("blur", {
        event: w,
        props: e
      });
    },
    onFocus: (w) => {
      E.value = !0, t("focus", {
        event: w,
        props: e
      });
    }
  };
}
function fl({ id: e, idPrefix: t, htmlId: n }) {
  return n || `${t || ""}${e}`;
}
function Iu(e, {
  isModel: t = _(() => !0)
} = {}) {
  const n = f(e, "isClearButton");
  return {
    isClearButtonLocal: _(() => !!(n.value && t.value))
  };
}
function mi(e) {
  const t = f(e, "disabled");
  return {
    disabledAttribut: _(() => {
      if (t.value === !0)
        return !0;
    })
  };
}
function Gc({
  inputRef: e = B(void 0)
}) {
  const t = B(void 0), n = () => {
    t.value = !0;
  }, r = () => {
    t.value = !1;
  }, s = (l) => {
    switch (l.animationName) {
      case "onAutoFillStart":
        return n();
      case "onAutoFillCancel":
        return r();
    }
  };
  return Vr(() => {
    e.value && e.value.addEventListener("animationstart", s);
  }), Ct(() => {
    e.value && e.value.removeEventListener && e.value.removeEventListener("animationstart", s);
  }), {
    isAutofill: t
  };
}
function Wt(e) {
  const t = f(e, "dependencies"), n = f(e, "isHide"), r = f(e, "modelDependencies"), s = ({ id: u, value: h }) => {
    var A;
    return ((A = r.value) == null ? void 0 : A[u]) === h;
  }, l = _(() => {
    if (!t.value)
      return !1;
    if (nt(t.value))
      return !s(t.value);
    if (Se(t.value)) {
      let u = !1;
      return Y(t.value, (h) => {
        if (!s(h))
          return u = !0, !1;
      }), u;
    }
    return !1;
  });
  return {
    componentStyleHide: _(() => n.value || l.value ? "display: none;" : "")
  };
}
const Ln = {
  name: "AInput",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_input_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    maxlength: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    showPassword: {
      type: Boolean,
      required: !1,
      default: !0
    },
    step: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "text"
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const n = f(e, "type"), {
      disabledAttribut: r
    } = mi(e), {
      setTypeLocal: s,
      typeForInput: l
    } = hx(e), {
      attributesToExcludeFromRender: o
    } = Nt(e), {
      componentStyleHide: u
    } = Wt(e), {
      ariaDescribedbyLocal: h,
      changeModel: A,
      clearModel: E,
      errorsId: p,
      helpTextId: T,
      htmlIdLocal: m,
      isErrors: L,
      isModel: b,
      onBlur: v,
      onFocus: I
    } = Zt(e, t), {
      isClearButtonLocal: y
    } = Iu(e, {
      isModel: b
    }), {
      inputRef: R,
      onInput: D
    } = cx(e, {
      changeModel: A
    }), {
      iconBtnShowPassword: w,
      isBtnShowPasswordVisible: M,
      titleBtnShowPassword: P,
      toggleTypePassword: x
    } = fx(e, {
      setTypeLocal: s,
      typeForInput: l
    }), {
      isAutofill: C
    } = Gc({ inputRef: R }), {
      inputClassBtns: q
    } = _x({
      isBtnShowPasswordVisible: M,
      isClearButtonLocal: y
    }), {
      placeholderAttributes: W
    } = ml(e), {
      modelValueLocal: z
    } = dx(e);
    return tt(n, () => {
      s();
    }), s(), {
      ariaDescribedbyLocal: h,
      attributesToExcludeFromRender: o,
      clearModel: E,
      componentStyleHide: u,
      disabledAttribut: r,
      errorsId: p,
      helpTextId: T,
      htmlIdLocal: m,
      iconBtnShowPassword: w,
      inputClassBtns: q,
      inputRef: R,
      isAutofill: C,
      isBtnShowPasswordVisible: M,
      isClearButtonLocal: y,
      isErrors: L,
      isModel: b,
      modelValueLocal: z,
      onBlur: v,
      onFocus: I,
      onInput: D,
      placeholderAttributes: W,
      titleBtnShowPassword: P,
      toggleTypePassword: x,
      typeForInput: l
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel || this.isAutofill,
          a_form_element__parent_float_has_icon_prepend: this.iconPrepend
        }]
      }, [
        this.label || this.labelScreenReader ? c(kt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: this.isLabelFloat,
          isError: this.isErrors
        }) : "",
        c("div", {
          class: "a_form_element"
        }, [
          this.iconPrepend && c(lt, {
            icon: this.iconPrepend,
            class: "a_input__icon_prepend"
          }),
          c("input", {
            ref: "inputRef",
            id: this.htmlIdLocal,
            autocomplete: this.autocomplete,
            value: this.modelValueLocal,
            type: this.typeForInput,
            class: [
              "a_form_control a_input",
              this.inputClass,
              this.inputClassBtns,
              {
                a_form_control_invalid: this.isErrors
              }
            ],
            disabled: this.disabledAttribut,
            ariaRequired: this.required,
            ariaInvalid: this.isErrors,
            "aria-describedby": this.ariaDescribedbyLocal,
            maxlength: this.maxlength,
            step: this.step,
            ...this.placeholderAttributes,
            ...this.inputAttributes,
            onInput: this.onInput,
            onFocus: this.onFocus,
            onBlur: this.onBlur
          }),
          this.isBtnShowPasswordVisible || this.isClearButtonLocal ? c("div", {
            class: "a_form_control__actions"
          }, [
            this.isBtnShowPasswordVisible ? c(rt, {
              alwaysTranslate: this.alwaysTranslate,
              class: "a_btn a_btn_transparent_dark a_btn_small a_form_control__actions__btn",
              iconLeft: this.iconBtnShowPassword,
              type: "button",
              title: this.titleBtnShowPassword,
              textScreenReader: this.titleBtnShowPassword,
              disabled: this.disabled,
              onClick: this.toggleTypePassword
            }) : "",
            this.isClearButtonLocal ? c(vu, {
              alwaysTranslate: this.alwaysTranslate,
              disabled: this.disabled,
              class: this.clearButtonClass,
              onClear: this.clearModel
            }) : ""
          ]) : ""
        ]),
        c(Xt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(Yt, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function gu(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = f(e, "label"), r = _(() => `${t.value}_group`);
  return {
    groupAriaLabelledby: _(() => {
      if (n.value)
        return `${t.value}_legend`;
    }),
    groupId: r
  };
}
function Ex(e, {
  changeModel: t = () => {
  }
}) {
  const n = f(e, "disabled");
  return {
    onChangeModelValue: ({ model: s, $event: l }) => {
      n.value || setTimeout(() => {
        t({
          model: s,
          $event: l
        });
      });
    }
  };
}
function px(e) {
  const t = f(e, "modelValue");
  return {
    modelValueObj: _(() => {
      const r = {};
      return Y(t.value || [], (s) => {
        r[s] = !0;
      }), r;
    })
  };
}
function yu(e) {
  const t = f(e, "required");
  return {
    textAfterLabel: _(() => t.value ? "*" : "")
  };
}
const Li = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708"/>
</svg>`, Kc = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-up" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708z"/>
</svg>`;
function jc(e, { emit: t }) {
  const n = f(e, "collapsible"), r = f(e, "id"), s = f(e, "isCollapsed"), l = f(e, "texts"), o = B(!1), u = _(() => o.value ? Kc : Li), h = _(() => {
    var m;
    return ((m = l.value) == null ? void 0 : m.collapseOpen) || "_A_FIELDSET_COLLAPSE_OPEN_";
  }), A = _(() => {
    var m;
    return ((m = l.value) == null ? void 0 : m.collapseClose) || "_A_FIELDSET_COLLAPSE_CLOSE_";
  }), E = _(() => o.value ? h.value : A.value), p = () => {
    o.value = !o.value, t("toggleCollapse", { isCollapsed: o.value, id: r.value, props: e });
  }, T = () => {
    n.value ? o.value = s.value || !1 : o.value = !1;
  };
  return tt(s, () => {
    o.value = s.value || !1;
  }), {
    iconCollapse: u,
    initIsCollapsedLocal: T,
    isCollapsedLocal: o,
    titleCollapse: E,
    toggleCollapse: p
  };
}
function zT(e, t) {
  return function() {
    return e.apply(t, arguments);
  };
}
const { toString: Tx } = Object.prototype, { getPrototypeOf: zc } = Object, Ru = /* @__PURE__ */ ((e) => (t) => {
  const n = Tx.call(t);
  return e[n] || (e[n] = n.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null)), Rr = (e) => (e = e.toLowerCase(), (t) => Ru(t) === e), Ou = (e) => (t) => typeof t === e, { isArray: bi } = Array, hl = Ou("undefined");
function Sx(e) {
  return e !== null && !hl(e) && e.constructor !== null && !hl(e.constructor) && Mn(e.constructor.isBuffer) && e.constructor.isBuffer(e);
}
const YT = Rr("ArrayBuffer");
function mx(e) {
  let t;
  return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? t = ArrayBuffer.isView(e) : t = e && e.buffer && YT(e.buffer), t;
}
const Lx = Ou("string"), Mn = Ou("function"), XT = Ou("number"), Cu = (e) => e !== null && typeof e == "object", bx = (e) => e === !0 || e === !1, Bo = (e) => {
  if (Ru(e) !== "object")
    return !1;
  const t = zc(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}, vx = Rr("Date"), Ix = Rr("File"), gx = Rr("Blob"), yx = Rr("FileList"), Rx = (e) => Cu(e) && Mn(e.pipe), Ox = (e) => {
  let t;
  return e && (typeof FormData == "function" && e instanceof FormData || Mn(e.append) && ((t = Ru(e)) === "formdata" || // detect form-data instance
  t === "object" && Mn(e.toString) && e.toString() === "[object FormData]"));
}, Cx = Rr("URLSearchParams"), [Nx, Dx, Bx, wx] = ["ReadableStream", "Request", "Response", "Headers"].map(Rr), Px = (e) => e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function yl(e, t, { allOwnKeys: n = !1 } = {}) {
  if (e === null || typeof e > "u")
    return;
  let r, s;
  if (typeof e != "object" && (e = [e]), bi(e))
    for (r = 0, s = e.length; r < s; r++)
      t.call(null, e[r], r, e);
  else {
    const l = n ? Object.getOwnPropertyNames(e) : Object.keys(e), o = l.length;
    let u;
    for (r = 0; r < o; r++)
      u = l[r], t.call(null, e[u], u, e);
  }
}
function ZT(e, t) {
  t = t.toLowerCase();
  const n = Object.keys(e);
  let r = n.length, s;
  for (; r-- > 0; )
    if (s = n[r], t === s.toLowerCase())
      return s;
  return null;
}
const gs = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : global, JT = (e) => !hl(e) && e !== gs;
function qd() {
  const { caseless: e } = JT(this) && this || {}, t = {}, n = (r, s) => {
    const l = e && ZT(t, s) || s;
    Bo(t[l]) && Bo(r) ? t[l] = qd(t[l], r) : Bo(r) ? t[l] = qd({}, r) : bi(r) ? t[l] = r.slice() : t[l] = r;
  };
  for (let r = 0, s = arguments.length; r < s; r++)
    arguments[r] && yl(arguments[r], n);
  return t;
}
const Fx = (e, t, n, { allOwnKeys: r } = {}) => (yl(t, (s, l) => {
  n && Mn(s) ? e[l] = zT(s, n) : e[l] = s;
}, { allOwnKeys: r }), e), xx = (e) => (e.charCodeAt(0) === 65279 && (e = e.slice(1)), e), Mx = (e, t, n, r) => {
  e.prototype = Object.create(t.prototype, r), e.prototype.constructor = e, Object.defineProperty(e, "super", {
    value: t.prototype
  }), n && Object.assign(e.prototype, n);
}, $x = (e, t, n, r) => {
  let s, l, o;
  const u = {};
  if (t = t || {}, e == null) return t;
  do {
    for (s = Object.getOwnPropertyNames(e), l = s.length; l-- > 0; )
      o = s[l], (!r || r(o, e, t)) && !u[o] && (t[o] = e[o], u[o] = !0);
    e = n !== !1 && zc(e);
  } while (e && (!n || n(e, t)) && e !== Object.prototype);
  return t;
}, qx = (e, t, n) => {
  e = String(e), (n === void 0 || n > e.length) && (n = e.length), n -= t.length;
  const r = e.indexOf(t, n);
  return r !== -1 && r === n;
}, kx = (e) => {
  if (!e) return null;
  if (bi(e)) return e;
  let t = e.length;
  if (!XT(t)) return null;
  const n = new Array(t);
  for (; t-- > 0; )
    n[t] = e[t];
  return n;
}, Ux = /* @__PURE__ */ ((e) => (t) => e && t instanceof e)(typeof Uint8Array < "u" && zc(Uint8Array)), Hx = (e, t) => {
  const r = (e && e[Symbol.iterator]).call(e);
  let s;
  for (; (s = r.next()) && !s.done; ) {
    const l = s.value;
    t.call(e, l[0], l[1]);
  }
}, Vx = (e, t) => {
  let n;
  const r = [];
  for (; (n = e.exec(t)) !== null; )
    r.push(n);
  return r;
}, Wx = Rr("HTMLFormElement"), Gx = (e) => e.toLowerCase().replace(
  /[-_\s]([a-z\d])(\w*)/g,
  function(n, r, s) {
    return r.toUpperCase() + s;
  }
), CE = (({ hasOwnProperty: e }) => (t, n) => e.call(t, n))(Object.prototype), Kx = Rr("RegExp"), QT = (e, t) => {
  const n = Object.getOwnPropertyDescriptors(e), r = {};
  yl(n, (s, l) => {
    let o;
    (o = t(s, l, e)) !== !1 && (r[l] = o || s);
  }), Object.defineProperties(e, r);
}, jx = (e) => {
  QT(e, (t, n) => {
    if (Mn(e) && ["arguments", "caller", "callee"].indexOf(n) !== -1)
      return !1;
    const r = e[n];
    if (Mn(r)) {
      if (t.enumerable = !1, "writable" in t) {
        t.writable = !1;
        return;
      }
      t.set || (t.set = () => {
        throw Error("Can not rewrite read-only method '" + n + "'");
      });
    }
  });
}, zx = (e, t) => {
  const n = {}, r = (s) => {
    s.forEach((l) => {
      n[l] = !0;
    });
  };
  return bi(e) ? r(e) : r(String(e).split(t)), n;
}, Yx = () => {
}, Xx = (e, t) => e != null && Number.isFinite(e = +e) ? e : t, od = "abcdefghijklmnopqrstuvwxyz", NE = "0123456789", eS = {
  DIGIT: NE,
  ALPHA: od,
  ALPHA_DIGIT: od + od.toUpperCase() + NE
}, Zx = (e = 16, t = eS.ALPHA_DIGIT) => {
  let n = "";
  const { length: r } = t;
  for (; e--; )
    n += t[Math.random() * r | 0];
  return n;
};
function Jx(e) {
  return !!(e && Mn(e.append) && e[Symbol.toStringTag] === "FormData" && e[Symbol.iterator]);
}
const Qx = (e) => {
  const t = new Array(10), n = (r, s) => {
    if (Cu(r)) {
      if (t.indexOf(r) >= 0)
        return;
      if (!("toJSON" in r)) {
        t[s] = r;
        const l = bi(r) ? [] : {};
        return yl(r, (o, u) => {
          const h = n(o, s + 1);
          !hl(h) && (l[u] = h);
        }), t[s] = void 0, l;
      }
    }
    return r;
  };
  return n(e, 0);
}, e1 = Rr("AsyncFunction"), t1 = (e) => e && (Cu(e) || Mn(e)) && Mn(e.then) && Mn(e.catch), tS = ((e, t) => e ? setImmediate : t ? ((n, r) => (gs.addEventListener("message", ({ source: s, data: l }) => {
  s === gs && l === n && r.length && r.shift()();
}, !1), (s) => {
  r.push(s), gs.postMessage(n, "*");
}))(`axios@${Math.random()}`, []) : (n) => setTimeout(n))(
  typeof setImmediate == "function",
  Mn(gs.postMessage)
), n1 = typeof queueMicrotask < "u" ? queueMicrotask.bind(gs) : typeof process < "u" && process.nextTick || tS, j = {
  isArray: bi,
  isArrayBuffer: YT,
  isBuffer: Sx,
  isFormData: Ox,
  isArrayBufferView: mx,
  isString: Lx,
  isNumber: XT,
  isBoolean: bx,
  isObject: Cu,
  isPlainObject: Bo,
  isReadableStream: Nx,
  isRequest: Dx,
  isResponse: Bx,
  isHeaders: wx,
  isUndefined: hl,
  isDate: vx,
  isFile: Ix,
  isBlob: gx,
  isRegExp: Kx,
  isFunction: Mn,
  isStream: Rx,
  isURLSearchParams: Cx,
  isTypedArray: Ux,
  isFileList: yx,
  forEach: yl,
  merge: qd,
  extend: Fx,
  trim: Px,
  stripBOM: xx,
  inherits: Mx,
  toFlatObject: $x,
  kindOf: Ru,
  kindOfTest: Rr,
  endsWith: qx,
  toArray: kx,
  forEachEntry: Hx,
  matchAll: Vx,
  isHTMLForm: Wx,
  hasOwnProperty: CE,
  hasOwnProp: CE,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors: QT,
  freezeMethods: jx,
  toObjectSet: zx,
  toCamelCase: Gx,
  noop: Yx,
  toFiniteNumber: Xx,
  findKey: ZT,
  global: gs,
  isContextDefined: JT,
  ALPHABET: eS,
  generateString: Zx,
  isSpecCompliantForm: Jx,
  toJSONObject: Qx,
  isAsyncFn: e1,
  isThenable: t1,
  setImmediate: tS,
  asap: n1
};
function ke(e, t, n, r, s) {
  Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = e, this.name = "AxiosError", t && (this.code = t), n && (this.config = n), r && (this.request = r), s && (this.response = s, this.status = s.status ? s.status : null);
}
j.inherits(ke, Error, {
  toJSON: function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: j.toJSONObject(this.config),
      code: this.code,
      status: this.status
    };
  }
});
const nS = ke.prototype, rS = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
].forEach((e) => {
  rS[e] = { value: e };
});
Object.defineProperties(ke, rS);
Object.defineProperty(nS, "isAxiosError", { value: !0 });
ke.from = (e, t, n, r, s, l) => {
  const o = Object.create(nS);
  return j.toFlatObject(e, o, function(h) {
    return h !== Error.prototype;
  }, (u) => u !== "isAxiosError"), ke.call(o, e.message, t, n, r, s), o.cause = e, o.name = e.name, l && Object.assign(o, l), o;
};
const r1 = null;
function kd(e) {
  return j.isPlainObject(e) || j.isArray(e);
}
function aS(e) {
  return j.endsWith(e, "[]") ? e.slice(0, -2) : e;
}
function DE(e, t, n) {
  return e ? e.concat(t).map(function(s, l) {
    return s = aS(s), !n && l ? "[" + s + "]" : s;
  }).join(n ? "." : "") : t;
}
function a1(e) {
  return j.isArray(e) && !e.some(kd);
}
const s1 = j.toFlatObject(j, {}, null, function(t) {
  return /^is[A-Z]/.test(t);
});
function Nu(e, t, n) {
  if (!j.isObject(e))
    throw new TypeError("target must be an object");
  t = t || new FormData(), n = j.toFlatObject(n, {
    metaTokens: !0,
    dots: !1,
    indexes: !1
  }, !1, function(b, v) {
    return !j.isUndefined(v[b]);
  });
  const r = n.metaTokens, s = n.visitor || E, l = n.dots, o = n.indexes, h = (n.Blob || typeof Blob < "u" && Blob) && j.isSpecCompliantForm(t);
  if (!j.isFunction(s))
    throw new TypeError("visitor must be a function");
  function A(L) {
    if (L === null) return "";
    if (j.isDate(L))
      return L.toISOString();
    if (!h && j.isBlob(L))
      throw new ke("Blob is not supported. Use a Buffer instead.");
    return j.isArrayBuffer(L) || j.isTypedArray(L) ? h && typeof Blob == "function" ? new Blob([L]) : Buffer.from(L) : L;
  }
  function E(L, b, v) {
    let I = L;
    if (L && !v && typeof L == "object") {
      if (j.endsWith(b, "{}"))
        b = r ? b : b.slice(0, -2), L = JSON.stringify(L);
      else if (j.isArray(L) && a1(L) || (j.isFileList(L) || j.endsWith(b, "[]")) && (I = j.toArray(L)))
        return b = aS(b), I.forEach(function(R, D) {
          !(j.isUndefined(R) || R === null) && t.append(
            // eslint-disable-next-line no-nested-ternary
            o === !0 ? DE([b], D, l) : o === null ? b : b + "[]",
            A(R)
          );
        }), !1;
    }
    return kd(L) ? !0 : (t.append(DE(v, b, l), A(L)), !1);
  }
  const p = [], T = Object.assign(s1, {
    defaultVisitor: E,
    convertValue: A,
    isVisitable: kd
  });
  function m(L, b) {
    if (!j.isUndefined(L)) {
      if (p.indexOf(L) !== -1)
        throw Error("Circular reference detected in " + b.join("."));
      p.push(L), j.forEach(L, function(I, y) {
        (!(j.isUndefined(I) || I === null) && s.call(
          t,
          I,
          j.isString(y) ? y.trim() : y,
          b,
          T
        )) === !0 && m(I, b ? b.concat(y) : [y]);
      }), p.pop();
    }
  }
  if (!j.isObject(e))
    throw new TypeError("data must be an object");
  return m(e), t;
}
function BE(e) {
  const t = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0"
  };
  return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function(r) {
    return t[r];
  });
}
function Yc(e, t) {
  this._pairs = [], e && Nu(e, this, t);
}
const sS = Yc.prototype;
sS.append = function(t, n) {
  this._pairs.push([t, n]);
};
sS.toString = function(t) {
  const n = t ? function(r) {
    return t.call(this, r, BE);
  } : BE;
  return this._pairs.map(function(s) {
    return n(s[0]) + "=" + n(s[1]);
  }, "").join("&");
};
function i1(e) {
  return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
function iS(e, t, n) {
  if (!t)
    return e;
  const r = n && n.encode || i1;
  j.isFunction(n) && (n = {
    serialize: n
  });
  const s = n && n.serialize;
  let l;
  if (s ? l = s(t, n) : l = j.isURLSearchParams(t) ? t.toString() : new Yc(t, n).toString(r), l) {
    const o = e.indexOf("#");
    o !== -1 && (e = e.slice(0, o)), e += (e.indexOf("?") === -1 ? "?" : "&") + l;
  }
  return e;
}
class wE {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(t, n, r) {
    return this.handlers.push({
      fulfilled: t,
      rejected: n,
      synchronous: r ? r.synchronous : !1,
      runWhen: r ? r.runWhen : null
    }), this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(t) {
    this.handlers[t] && (this.handlers[t] = null);
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    this.handlers && (this.handlers = []);
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(t) {
    j.forEach(this.handlers, function(r) {
      r !== null && t(r);
    });
  }
}
const lS = {
  silentJSONParsing: !0,
  forcedJSONParsing: !0,
  clarifyTimeoutError: !1
}, l1 = typeof URLSearchParams < "u" ? URLSearchParams : Yc, o1 = typeof FormData < "u" ? FormData : null, u1 = typeof Blob < "u" ? Blob : null, _1 = {
  isBrowser: !0,
  classes: {
    URLSearchParams: l1,
    FormData: o1,
    Blob: u1
  },
  protocols: ["http", "https", "file", "blob", "url", "data"]
}, Xc = typeof window < "u" && typeof document < "u", Ud = typeof navigator == "object" && navigator || void 0, d1 = Xc && (!Ud || ["ReactNative", "NativeScript", "NS"].indexOf(Ud.product) < 0), c1 = typeof WorkerGlobalScope < "u" && // eslint-disable-next-line no-undef
self instanceof WorkerGlobalScope && typeof self.importScripts == "function", f1 = Xc && window.location.href || "http://localhost", h1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hasBrowserEnv: Xc,
  hasStandardBrowserEnv: d1,
  hasStandardBrowserWebWorkerEnv: c1,
  navigator: Ud,
  origin: f1
}, Symbol.toStringTag, { value: "Module" })), sn = {
  ...h1,
  ..._1
};
function A1(e, t) {
  return Nu(e, new sn.classes.URLSearchParams(), Object.assign({
    visitor: function(n, r, s, l) {
      return sn.isNode && j.isBuffer(n) ? (this.append(r, n.toString("base64")), !1) : l.defaultVisitor.apply(this, arguments);
    }
  }, t));
}
function E1(e) {
  return j.matchAll(/\w+|\[(\w*)]/g, e).map((t) => t[0] === "[]" ? "" : t[1] || t[0]);
}
function p1(e) {
  const t = {}, n = Object.keys(e);
  let r;
  const s = n.length;
  let l;
  for (r = 0; r < s; r++)
    l = n[r], t[l] = e[l];
  return t;
}
function oS(e) {
  function t(n, r, s, l) {
    let o = n[l++];
    if (o === "__proto__") return !0;
    const u = Number.isFinite(+o), h = l >= n.length;
    return o = !o && j.isArray(s) ? s.length : o, h ? (j.hasOwnProp(s, o) ? s[o] = [s[o], r] : s[o] = r, !u) : ((!s[o] || !j.isObject(s[o])) && (s[o] = []), t(n, r, s[o], l) && j.isArray(s[o]) && (s[o] = p1(s[o])), !u);
  }
  if (j.isFormData(e) && j.isFunction(e.entries)) {
    const n = {};
    return j.forEachEntry(e, (r, s) => {
      t(E1(r), s, n, 0);
    }), n;
  }
  return null;
}
function T1(e, t, n) {
  if (j.isString(e))
    try {
      return (t || JSON.parse)(e), j.trim(e);
    } catch (r) {
      if (r.name !== "SyntaxError")
        throw r;
    }
  return (n || JSON.stringify)(e);
}
const Rl = {
  transitional: lS,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [function(t, n) {
    const r = n.getContentType() || "", s = r.indexOf("application/json") > -1, l = j.isObject(t);
    if (l && j.isHTMLForm(t) && (t = new FormData(t)), j.isFormData(t))
      return s ? JSON.stringify(oS(t)) : t;
    if (j.isArrayBuffer(t) || j.isBuffer(t) || j.isStream(t) || j.isFile(t) || j.isBlob(t) || j.isReadableStream(t))
      return t;
    if (j.isArrayBufferView(t))
      return t.buffer;
    if (j.isURLSearchParams(t))
      return n.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1), t.toString();
    let u;
    if (l) {
      if (r.indexOf("application/x-www-form-urlencoded") > -1)
        return A1(t, this.formSerializer).toString();
      if ((u = j.isFileList(t)) || r.indexOf("multipart/form-data") > -1) {
        const h = this.env && this.env.FormData;
        return Nu(
          u ? { "files[]": t } : t,
          h && new h(),
          this.formSerializer
        );
      }
    }
    return l || s ? (n.setContentType("application/json", !1), T1(t)) : t;
  }],
  transformResponse: [function(t) {
    const n = this.transitional || Rl.transitional, r = n && n.forcedJSONParsing, s = this.responseType === "json";
    if (j.isResponse(t) || j.isReadableStream(t))
      return t;
    if (t && j.isString(t) && (r && !this.responseType || s)) {
      const o = !(n && n.silentJSONParsing) && s;
      try {
        return JSON.parse(t);
      } catch (u) {
        if (o)
          throw u.name === "SyntaxError" ? ke.from(u, ke.ERR_BAD_RESPONSE, this, null, this.response) : u;
      }
    }
    return t;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: sn.classes.FormData,
    Blob: sn.classes.Blob
  },
  validateStatus: function(t) {
    return t >= 200 && t < 300;
  },
  headers: {
    common: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": void 0
    }
  }
};
j.forEach(["delete", "get", "head", "post", "put", "patch"], (e) => {
  Rl.headers[e] = {};
});
const S1 = j.toObjectSet([
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
]), m1 = (e) => {
  const t = {};
  let n, r, s;
  return e && e.split(`
`).forEach(function(o) {
    s = o.indexOf(":"), n = o.substring(0, s).trim().toLowerCase(), r = o.substring(s + 1).trim(), !(!n || t[n] && S1[n]) && (n === "set-cookie" ? t[n] ? t[n].push(r) : t[n] = [r] : t[n] = t[n] ? t[n] + ", " + r : r);
  }), t;
}, PE = Symbol("internals");
function Yi(e) {
  return e && String(e).trim().toLowerCase();
}
function wo(e) {
  return e === !1 || e == null ? e : j.isArray(e) ? e.map(wo) : String(e);
}
function L1(e) {
  const t = /* @__PURE__ */ Object.create(null), n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let r;
  for (; r = n.exec(e); )
    t[r[1]] = r[2];
  return t;
}
const b1 = (e) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());
function ud(e, t, n, r, s) {
  if (j.isFunction(r))
    return r.call(this, t, n);
  if (s && (t = n), !!j.isString(t)) {
    if (j.isString(r))
      return t.indexOf(r) !== -1;
    if (j.isRegExp(r))
      return r.test(t);
  }
}
function v1(e) {
  return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (t, n, r) => n.toUpperCase() + r);
}
function I1(e, t) {
  const n = j.toCamelCase(" " + t);
  ["get", "set", "has"].forEach((r) => {
    Object.defineProperty(e, r + n, {
      value: function(s, l, o) {
        return this[r].call(this, t, s, l, o);
      },
      configurable: !0
    });
  });
}
let bn = class {
  constructor(t) {
    t && this.set(t);
  }
  set(t, n, r) {
    const s = this;
    function l(u, h, A) {
      const E = Yi(h);
      if (!E)
        throw new Error("header name must be a non-empty string");
      const p = j.findKey(s, E);
      (!p || s[p] === void 0 || A === !0 || A === void 0 && s[p] !== !1) && (s[p || h] = wo(u));
    }
    const o = (u, h) => j.forEach(u, (A, E) => l(A, E, h));
    if (j.isPlainObject(t) || t instanceof this.constructor)
      o(t, n);
    else if (j.isString(t) && (t = t.trim()) && !b1(t))
      o(m1(t), n);
    else if (j.isHeaders(t))
      for (const [u, h] of t.entries())
        l(h, u, r);
    else
      t != null && l(n, t, r);
    return this;
  }
  get(t, n) {
    if (t = Yi(t), t) {
      const r = j.findKey(this, t);
      if (r) {
        const s = this[r];
        if (!n)
          return s;
        if (n === !0)
          return L1(s);
        if (j.isFunction(n))
          return n.call(this, s, r);
        if (j.isRegExp(n))
          return n.exec(s);
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(t, n) {
    if (t = Yi(t), t) {
      const r = j.findKey(this, t);
      return !!(r && this[r] !== void 0 && (!n || ud(this, this[r], r, n)));
    }
    return !1;
  }
  delete(t, n) {
    const r = this;
    let s = !1;
    function l(o) {
      if (o = Yi(o), o) {
        const u = j.findKey(r, o);
        u && (!n || ud(r, r[u], u, n)) && (delete r[u], s = !0);
      }
    }
    return j.isArray(t) ? t.forEach(l) : l(t), s;
  }
  clear(t) {
    const n = Object.keys(this);
    let r = n.length, s = !1;
    for (; r--; ) {
      const l = n[r];
      (!t || ud(this, this[l], l, t, !0)) && (delete this[l], s = !0);
    }
    return s;
  }
  normalize(t) {
    const n = this, r = {};
    return j.forEach(this, (s, l) => {
      const o = j.findKey(r, l);
      if (o) {
        n[o] = wo(s), delete n[l];
        return;
      }
      const u = t ? v1(l) : String(l).trim();
      u !== l && delete n[l], n[u] = wo(s), r[u] = !0;
    }), this;
  }
  concat(...t) {
    return this.constructor.concat(this, ...t);
  }
  toJSON(t) {
    const n = /* @__PURE__ */ Object.create(null);
    return j.forEach(this, (r, s) => {
      r != null && r !== !1 && (n[s] = t && j.isArray(r) ? r.join(", ") : r);
    }), n;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([t, n]) => t + ": " + n).join(`
`);
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(t) {
    return t instanceof this ? t : new this(t);
  }
  static concat(t, ...n) {
    const r = new this(t);
    return n.forEach((s) => r.set(s)), r;
  }
  static accessor(t) {
    const r = (this[PE] = this[PE] = {
      accessors: {}
    }).accessors, s = this.prototype;
    function l(o) {
      const u = Yi(o);
      r[u] || (I1(s, o), r[u] = !0);
    }
    return j.isArray(t) ? t.forEach(l) : l(t), this;
  }
};
bn.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
j.reduceDescriptors(bn.prototype, ({ value: e }, t) => {
  let n = t[0].toUpperCase() + t.slice(1);
  return {
    get: () => e,
    set(r) {
      this[n] = r;
    }
  };
});
j.freezeMethods(bn);
function _d(e, t) {
  const n = this || Rl, r = t || n, s = bn.from(r.headers);
  let l = r.data;
  return j.forEach(e, function(u) {
    l = u.call(n, l, s.normalize(), t ? t.status : void 0);
  }), s.normalize(), l;
}
function uS(e) {
  return !!(e && e.__CANCEL__);
}
function vi(e, t, n) {
  ke.call(this, e ?? "canceled", ke.ERR_CANCELED, t, n), this.name = "CanceledError";
}
j.inherits(vi, ke, {
  __CANCEL__: !0
});
function _S(e, t, n) {
  const r = n.config.validateStatus;
  !n.status || !r || r(n.status) ? e(n) : t(new ke(
    "Request failed with status code " + n.status,
    [ke.ERR_BAD_REQUEST, ke.ERR_BAD_RESPONSE][Math.floor(n.status / 100) - 4],
    n.config,
    n.request,
    n
  ));
}
function g1(e) {
  const t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
  return t && t[1] || "";
}
function y1(e, t) {
  e = e || 10;
  const n = new Array(e), r = new Array(e);
  let s = 0, l = 0, o;
  return t = t !== void 0 ? t : 1e3, function(h) {
    const A = Date.now(), E = r[l];
    o || (o = A), n[s] = h, r[s] = A;
    let p = l, T = 0;
    for (; p !== s; )
      T += n[p++], p = p % e;
    if (s = (s + 1) % e, s === l && (l = (l + 1) % e), A - o < t)
      return;
    const m = E && A - E;
    return m ? Math.round(T * 1e3 / m) : void 0;
  };
}
function R1(e, t) {
  let n = 0, r = 1e3 / t, s, l;
  const o = (A, E = Date.now()) => {
    n = E, s = null, l && (clearTimeout(l), l = null), e.apply(null, A);
  };
  return [(...A) => {
    const E = Date.now(), p = E - n;
    p >= r ? o(A, E) : (s = A, l || (l = setTimeout(() => {
      l = null, o(s);
    }, r - p)));
  }, () => s && o(s)];
}
const Zo = (e, t, n = 3) => {
  let r = 0;
  const s = y1(50, 250);
  return R1((l) => {
    const o = l.loaded, u = l.lengthComputable ? l.total : void 0, h = o - r, A = s(h), E = o <= u;
    r = o;
    const p = {
      loaded: o,
      total: u,
      progress: u ? o / u : void 0,
      bytes: h,
      rate: A || void 0,
      estimated: A && u && E ? (u - o) / A : void 0,
      event: l,
      lengthComputable: u != null,
      [t ? "download" : "upload"]: !0
    };
    e(p);
  }, n);
}, FE = (e, t) => {
  const n = e != null;
  return [(r) => t[0]({
    lengthComputable: n,
    total: e,
    loaded: r
  }), t[1]];
}, xE = (e) => (...t) => j.asap(() => e(...t)), O1 = sn.hasStandardBrowserEnv ? /* @__PURE__ */ ((e, t) => (n) => (n = new URL(n, sn.origin), e.protocol === n.protocol && e.host === n.host && (t || e.port === n.port)))(
  new URL(sn.origin),
  sn.navigator && /(msie|trident)/i.test(sn.navigator.userAgent)
) : () => !0, C1 = sn.hasStandardBrowserEnv ? (
  // Standard browser envs support document.cookie
  {
    write(e, t, n, r, s, l) {
      const o = [e + "=" + encodeURIComponent(t)];
      j.isNumber(n) && o.push("expires=" + new Date(n).toGMTString()), j.isString(r) && o.push("path=" + r), j.isString(s) && o.push("domain=" + s), l === !0 && o.push("secure"), document.cookie = o.join("; ");
    },
    read(e) {
      const t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
      return t ? decodeURIComponent(t[3]) : null;
    },
    remove(e) {
      this.write(e, "", Date.now() - 864e5);
    }
  }
) : (
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {
    },
    read() {
      return null;
    },
    remove() {
    }
  }
);
function N1(e) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e);
}
function D1(e, t) {
  return t ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "") : e;
}
function dS(e, t) {
  return e && !N1(t) ? D1(e, t) : t;
}
const ME = (e) => e instanceof bn ? { ...e } : e;
function Bs(e, t) {
  t = t || {};
  const n = {};
  function r(A, E, p, T) {
    return j.isPlainObject(A) && j.isPlainObject(E) ? j.merge.call({ caseless: T }, A, E) : j.isPlainObject(E) ? j.merge({}, E) : j.isArray(E) ? E.slice() : E;
  }
  function s(A, E, p, T) {
    if (j.isUndefined(E)) {
      if (!j.isUndefined(A))
        return r(void 0, A, p, T);
    } else return r(A, E, p, T);
  }
  function l(A, E) {
    if (!j.isUndefined(E))
      return r(void 0, E);
  }
  function o(A, E) {
    if (j.isUndefined(E)) {
      if (!j.isUndefined(A))
        return r(void 0, A);
    } else return r(void 0, E);
  }
  function u(A, E, p) {
    if (p in t)
      return r(A, E);
    if (p in e)
      return r(void 0, A);
  }
  const h = {
    url: l,
    method: l,
    data: l,
    baseURL: o,
    transformRequest: o,
    transformResponse: o,
    paramsSerializer: o,
    timeout: o,
    timeoutMessage: o,
    withCredentials: o,
    withXSRFToken: o,
    adapter: o,
    responseType: o,
    xsrfCookieName: o,
    xsrfHeaderName: o,
    onUploadProgress: o,
    onDownloadProgress: o,
    decompress: o,
    maxContentLength: o,
    maxBodyLength: o,
    beforeRedirect: o,
    transport: o,
    httpAgent: o,
    httpsAgent: o,
    cancelToken: o,
    socketPath: o,
    responseEncoding: o,
    validateStatus: u,
    headers: (A, E, p) => s(ME(A), ME(E), p, !0)
  };
  return j.forEach(Object.keys(Object.assign({}, e, t)), function(E) {
    const p = h[E] || s, T = p(e[E], t[E], E);
    j.isUndefined(T) && p !== u || (n[E] = T);
  }), n;
}
const cS = (e) => {
  const t = Bs({}, e);
  let { data: n, withXSRFToken: r, xsrfHeaderName: s, xsrfCookieName: l, headers: o, auth: u } = t;
  t.headers = o = bn.from(o), t.url = iS(dS(t.baseURL, t.url), e.params, e.paramsSerializer), u && o.set(
    "Authorization",
    "Basic " + btoa((u.username || "") + ":" + (u.password ? unescape(encodeURIComponent(u.password)) : ""))
  );
  let h;
  if (j.isFormData(n)) {
    if (sn.hasStandardBrowserEnv || sn.hasStandardBrowserWebWorkerEnv)
      o.setContentType(void 0);
    else if ((h = o.getContentType()) !== !1) {
      const [A, ...E] = h ? h.split(";").map((p) => p.trim()).filter(Boolean) : [];
      o.setContentType([A || "multipart/form-data", ...E].join("; "));
    }
  }
  if (sn.hasStandardBrowserEnv && (r && j.isFunction(r) && (r = r(t)), r || r !== !1 && O1(t.url))) {
    const A = s && l && C1.read(l);
    A && o.set(s, A);
  }
  return t;
}, B1 = typeof XMLHttpRequest < "u", w1 = B1 && function(e) {
  return new Promise(function(n, r) {
    const s = cS(e);
    let l = s.data;
    const o = bn.from(s.headers).normalize();
    let { responseType: u, onUploadProgress: h, onDownloadProgress: A } = s, E, p, T, m, L;
    function b() {
      m && m(), L && L(), s.cancelToken && s.cancelToken.unsubscribe(E), s.signal && s.signal.removeEventListener("abort", E);
    }
    let v = new XMLHttpRequest();
    v.open(s.method.toUpperCase(), s.url, !0), v.timeout = s.timeout;
    function I() {
      if (!v)
        return;
      const R = bn.from(
        "getAllResponseHeaders" in v && v.getAllResponseHeaders()
      ), w = {
        data: !u || u === "text" || u === "json" ? v.responseText : v.response,
        status: v.status,
        statusText: v.statusText,
        headers: R,
        config: e,
        request: v
      };
      _S(function(P) {
        n(P), b();
      }, function(P) {
        r(P), b();
      }, w), v = null;
    }
    "onloadend" in v ? v.onloadend = I : v.onreadystatechange = function() {
      !v || v.readyState !== 4 || v.status === 0 && !(v.responseURL && v.responseURL.indexOf("file:") === 0) || setTimeout(I);
    }, v.onabort = function() {
      v && (r(new ke("Request aborted", ke.ECONNABORTED, e, v)), v = null);
    }, v.onerror = function() {
      r(new ke("Network Error", ke.ERR_NETWORK, e, v)), v = null;
    }, v.ontimeout = function() {
      let D = s.timeout ? "timeout of " + s.timeout + "ms exceeded" : "timeout exceeded";
      const w = s.transitional || lS;
      s.timeoutErrorMessage && (D = s.timeoutErrorMessage), r(new ke(
        D,
        w.clarifyTimeoutError ? ke.ETIMEDOUT : ke.ECONNABORTED,
        e,
        v
      )), v = null;
    }, l === void 0 && o.setContentType(null), "setRequestHeader" in v && j.forEach(o.toJSON(), function(D, w) {
      v.setRequestHeader(w, D);
    }), j.isUndefined(s.withCredentials) || (v.withCredentials = !!s.withCredentials), u && u !== "json" && (v.responseType = s.responseType), A && ([T, L] = Zo(A, !0), v.addEventListener("progress", T)), h && v.upload && ([p, m] = Zo(h), v.upload.addEventListener("progress", p), v.upload.addEventListener("loadend", m)), (s.cancelToken || s.signal) && (E = (R) => {
      v && (r(!R || R.type ? new vi(null, e, v) : R), v.abort(), v = null);
    }, s.cancelToken && s.cancelToken.subscribe(E), s.signal && (s.signal.aborted ? E() : s.signal.addEventListener("abort", E)));
    const y = g1(s.url);
    if (y && sn.protocols.indexOf(y) === -1) {
      r(new ke("Unsupported protocol " + y + ":", ke.ERR_BAD_REQUEST, e));
      return;
    }
    v.send(l || null);
  });
}, P1 = (e, t) => {
  const { length: n } = e = e ? e.filter(Boolean) : [];
  if (t || n) {
    let r = new AbortController(), s;
    const l = function(A) {
      if (!s) {
        s = !0, u();
        const E = A instanceof Error ? A : this.reason;
        r.abort(E instanceof ke ? E : new vi(E instanceof Error ? E.message : E));
      }
    };
    let o = t && setTimeout(() => {
      o = null, l(new ke(`timeout ${t} of ms exceeded`, ke.ETIMEDOUT));
    }, t);
    const u = () => {
      e && (o && clearTimeout(o), o = null, e.forEach((A) => {
        A.unsubscribe ? A.unsubscribe(l) : A.removeEventListener("abort", l);
      }), e = null);
    };
    e.forEach((A) => A.addEventListener("abort", l));
    const { signal: h } = r;
    return h.unsubscribe = () => j.asap(u), h;
  }
}, F1 = function* (e, t) {
  let n = e.byteLength;
  if (n < t) {
    yield e;
    return;
  }
  let r = 0, s;
  for (; r < n; )
    s = r + t, yield e.slice(r, s), r = s;
}, x1 = async function* (e, t) {
  for await (const n of M1(e))
    yield* F1(n, t);
}, M1 = async function* (e) {
  if (e[Symbol.asyncIterator]) {
    yield* e;
    return;
  }
  const t = e.getReader();
  try {
    for (; ; ) {
      const { done: n, value: r } = await t.read();
      if (n)
        break;
      yield r;
    }
  } finally {
    await t.cancel();
  }
}, $E = (e, t, n, r) => {
  const s = x1(e, t);
  let l = 0, o, u = (h) => {
    o || (o = !0, r && r(h));
  };
  return new ReadableStream({
    async pull(h) {
      try {
        const { done: A, value: E } = await s.next();
        if (A) {
          u(), h.close();
          return;
        }
        let p = E.byteLength;
        if (n) {
          let T = l += p;
          n(T);
        }
        h.enqueue(new Uint8Array(E));
      } catch (A) {
        throw u(A), A;
      }
    },
    cancel(h) {
      return u(h), s.return();
    }
  }, {
    highWaterMark: 2
  });
}, Du = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", fS = Du && typeof ReadableStream == "function", $1 = Du && (typeof TextEncoder == "function" ? /* @__PURE__ */ ((e) => (t) => e.encode(t))(new TextEncoder()) : async (e) => new Uint8Array(await new Response(e).arrayBuffer())), hS = (e, ...t) => {
  try {
    return !!e(...t);
  } catch {
    return !1;
  }
}, q1 = fS && hS(() => {
  let e = !1;
  const t = new Request(sn.origin, {
    body: new ReadableStream(),
    method: "POST",
    get duplex() {
      return e = !0, "half";
    }
  }).headers.has("Content-Type");
  return e && !t;
}), qE = 64 * 1024, Hd = fS && hS(() => j.isReadableStream(new Response("").body)), Jo = {
  stream: Hd && ((e) => e.body)
};
Du && ((e) => {
  ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((t) => {
    !Jo[t] && (Jo[t] = j.isFunction(e[t]) ? (n) => n[t]() : (n, r) => {
      throw new ke(`Response type '${t}' is not supported`, ke.ERR_NOT_SUPPORT, r);
    });
  });
})(new Response());
const k1 = async (e) => {
  if (e == null)
    return 0;
  if (j.isBlob(e))
    return e.size;
  if (j.isSpecCompliantForm(e))
    return (await new Request(sn.origin, {
      method: "POST",
      body: e
    }).arrayBuffer()).byteLength;
  if (j.isArrayBufferView(e) || j.isArrayBuffer(e))
    return e.byteLength;
  if (j.isURLSearchParams(e) && (e = e + ""), j.isString(e))
    return (await $1(e)).byteLength;
}, U1 = async (e, t) => {
  const n = j.toFiniteNumber(e.getContentLength());
  return n ?? k1(t);
}, H1 = Du && (async (e) => {
  let {
    url: t,
    method: n,
    data: r,
    signal: s,
    cancelToken: l,
    timeout: o,
    onDownloadProgress: u,
    onUploadProgress: h,
    responseType: A,
    headers: E,
    withCredentials: p = "same-origin",
    fetchOptions: T
  } = cS(e);
  A = A ? (A + "").toLowerCase() : "text";
  let m = P1([s, l && l.toAbortSignal()], o), L;
  const b = m && m.unsubscribe && (() => {
    m.unsubscribe();
  });
  let v;
  try {
    if (h && q1 && n !== "get" && n !== "head" && (v = await U1(E, r)) !== 0) {
      let w = new Request(t, {
        method: "POST",
        body: r,
        duplex: "half"
      }), M;
      if (j.isFormData(r) && (M = w.headers.get("content-type")) && E.setContentType(M), w.body) {
        const [P, x] = FE(
          v,
          Zo(xE(h))
        );
        r = $E(w.body, qE, P, x);
      }
    }
    j.isString(p) || (p = p ? "include" : "omit");
    const I = "credentials" in Request.prototype;
    L = new Request(t, {
      ...T,
      signal: m,
      method: n.toUpperCase(),
      headers: E.normalize().toJSON(),
      body: r,
      duplex: "half",
      credentials: I ? p : void 0
    });
    let y = await fetch(L);
    const R = Hd && (A === "stream" || A === "response");
    if (Hd && (u || R && b)) {
      const w = {};
      ["status", "statusText", "headers"].forEach((C) => {
        w[C] = y[C];
      });
      const M = j.toFiniteNumber(y.headers.get("content-length")), [P, x] = u && FE(
        M,
        Zo(xE(u), !0)
      ) || [];
      y = new Response(
        $E(y.body, qE, P, () => {
          x && x(), b && b();
        }),
        w
      );
    }
    A = A || "text";
    let D = await Jo[j.findKey(Jo, A) || "text"](y, e);
    return !R && b && b(), await new Promise((w, M) => {
      _S(w, M, {
        data: D,
        headers: bn.from(y.headers),
        status: y.status,
        statusText: y.statusText,
        config: e,
        request: L
      });
    });
  } catch (I) {
    throw b && b(), I && I.name === "TypeError" && /fetch/i.test(I.message) ? Object.assign(
      new ke("Network Error", ke.ERR_NETWORK, e, L),
      {
        cause: I.cause || I
      }
    ) : ke.from(I, I && I.code, e, L);
  }
}), Vd = {
  http: r1,
  xhr: w1,
  fetch: H1
};
j.forEach(Vd, (e, t) => {
  if (e) {
    try {
      Object.defineProperty(e, "name", { value: t });
    } catch {
    }
    Object.defineProperty(e, "adapterName", { value: t });
  }
});
const kE = (e) => `- ${e}`, V1 = (e) => j.isFunction(e) || e === null || e === !1, AS = {
  getAdapter: (e) => {
    e = j.isArray(e) ? e : [e];
    const { length: t } = e;
    let n, r;
    const s = {};
    for (let l = 0; l < t; l++) {
      n = e[l];
      let o;
      if (r = n, !V1(n) && (r = Vd[(o = String(n)).toLowerCase()], r === void 0))
        throw new ke(`Unknown adapter '${o}'`);
      if (r)
        break;
      s[o || "#" + l] = r;
    }
    if (!r) {
      const l = Object.entries(s).map(
        ([u, h]) => `adapter ${u} ` + (h === !1 ? "is not supported by the environment" : "is not available in the build")
      );
      let o = t ? l.length > 1 ? `since :
` + l.map(kE).join(`
`) : " " + kE(l[0]) : "as no adapter specified";
      throw new ke(
        "There is no suitable adapter to dispatch the request " + o,
        "ERR_NOT_SUPPORT"
      );
    }
    return r;
  },
  adapters: Vd
};
function dd(e) {
  if (e.cancelToken && e.cancelToken.throwIfRequested(), e.signal && e.signal.aborted)
    throw new vi(null, e);
}
function UE(e) {
  return dd(e), e.headers = bn.from(e.headers), e.data = _d.call(
    e,
    e.transformRequest
  ), ["post", "put", "patch"].indexOf(e.method) !== -1 && e.headers.setContentType("application/x-www-form-urlencoded", !1), AS.getAdapter(e.adapter || Rl.adapter)(e).then(function(r) {
    return dd(e), r.data = _d.call(
      e,
      e.transformResponse,
      r
    ), r.headers = bn.from(r.headers), r;
  }, function(r) {
    return uS(r) || (dd(e), r && r.response && (r.response.data = _d.call(
      e,
      e.transformResponse,
      r.response
    ), r.response.headers = bn.from(r.response.headers))), Promise.reject(r);
  });
}
const ES = "1.7.9", Bu = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((e, t) => {
  Bu[e] = function(r) {
    return typeof r === e || "a" + (t < 1 ? "n " : " ") + e;
  };
});
const HE = {};
Bu.transitional = function(t, n, r) {
  function s(l, o) {
    return "[Axios v" + ES + "] Transitional option '" + l + "'" + o + (r ? ". " + r : "");
  }
  return (l, o, u) => {
    if (t === !1)
      throw new ke(
        s(o, " has been removed" + (n ? " in " + n : "")),
        ke.ERR_DEPRECATED
      );
    return n && !HE[o] && (HE[o] = !0, console.warn(
      s(
        o,
        " has been deprecated since v" + n + " and will be removed in the near future"
      )
    )), t ? t(l, o, u) : !0;
  };
};
Bu.spelling = function(t) {
  return (n, r) => (console.warn(`${r} is likely a misspelling of ${t}`), !0);
};
function W1(e, t, n) {
  if (typeof e != "object")
    throw new ke("options must be an object", ke.ERR_BAD_OPTION_VALUE);
  const r = Object.keys(e);
  let s = r.length;
  for (; s-- > 0; ) {
    const l = r[s], o = t[l];
    if (o) {
      const u = e[l], h = u === void 0 || o(u, l, e);
      if (h !== !0)
        throw new ke("option " + l + " must be " + h, ke.ERR_BAD_OPTION_VALUE);
      continue;
    }
    if (n !== !0)
      throw new ke("Unknown option " + l, ke.ERR_BAD_OPTION);
  }
}
const Po = {
  assertOptions: W1,
  validators: Bu
}, Fr = Po.validators;
let Rs = class {
  constructor(t) {
    this.defaults = t, this.interceptors = {
      request: new wE(),
      response: new wE()
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(t, n) {
    try {
      return await this._request(t, n);
    } catch (r) {
      if (r instanceof Error) {
        let s = {};
        Error.captureStackTrace ? Error.captureStackTrace(s) : s = new Error();
        const l = s.stack ? s.stack.replace(/^.+\n/, "") : "";
        try {
          r.stack ? l && !String(r.stack).endsWith(l.replace(/^.+\n.+\n/, "")) && (r.stack += `
` + l) : r.stack = l;
        } catch {
        }
      }
      throw r;
    }
  }
  _request(t, n) {
    typeof t == "string" ? (n = n || {}, n.url = t) : n = t || {}, n = Bs(this.defaults, n);
    const { transitional: r, paramsSerializer: s, headers: l } = n;
    r !== void 0 && Po.assertOptions(r, {
      silentJSONParsing: Fr.transitional(Fr.boolean),
      forcedJSONParsing: Fr.transitional(Fr.boolean),
      clarifyTimeoutError: Fr.transitional(Fr.boolean)
    }, !1), s != null && (j.isFunction(s) ? n.paramsSerializer = {
      serialize: s
    } : Po.assertOptions(s, {
      encode: Fr.function,
      serialize: Fr.function
    }, !0)), Po.assertOptions(n, {
      baseUrl: Fr.spelling("baseURL"),
      withXsrfToken: Fr.spelling("withXSRFToken")
    }, !0), n.method = (n.method || this.defaults.method || "get").toLowerCase();
    let o = l && j.merge(
      l.common,
      l[n.method]
    );
    l && j.forEach(
      ["delete", "get", "head", "post", "put", "patch", "common"],
      (L) => {
        delete l[L];
      }
    ), n.headers = bn.concat(o, l);
    const u = [];
    let h = !0;
    this.interceptors.request.forEach(function(b) {
      typeof b.runWhen == "function" && b.runWhen(n) === !1 || (h = h && b.synchronous, u.unshift(b.fulfilled, b.rejected));
    });
    const A = [];
    this.interceptors.response.forEach(function(b) {
      A.push(b.fulfilled, b.rejected);
    });
    let E, p = 0, T;
    if (!h) {
      const L = [UE.bind(this), void 0];
      for (L.unshift.apply(L, u), L.push.apply(L, A), T = L.length, E = Promise.resolve(n); p < T; )
        E = E.then(L[p++], L[p++]);
      return E;
    }
    T = u.length;
    let m = n;
    for (p = 0; p < T; ) {
      const L = u[p++], b = u[p++];
      try {
        m = L(m);
      } catch (v) {
        b.call(this, v);
        break;
      }
    }
    try {
      E = UE.call(this, m);
    } catch (L) {
      return Promise.reject(L);
    }
    for (p = 0, T = A.length; p < T; )
      E = E.then(A[p++], A[p++]);
    return E;
  }
  getUri(t) {
    t = Bs(this.defaults, t);
    const n = dS(t.baseURL, t.url);
    return iS(n, t.params, t.paramsSerializer);
  }
};
j.forEach(["delete", "get", "head", "options"], function(t) {
  Rs.prototype[t] = function(n, r) {
    return this.request(Bs(r || {}, {
      method: t,
      url: n,
      data: (r || {}).data
    }));
  };
});
j.forEach(["post", "put", "patch"], function(t) {
  function n(r) {
    return function(l, o, u) {
      return this.request(Bs(u || {}, {
        method: t,
        headers: r ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url: l,
        data: o
      }));
    };
  }
  Rs.prototype[t] = n(), Rs.prototype[t + "Form"] = n(!0);
});
let G1 = class pS {
  constructor(t) {
    if (typeof t != "function")
      throw new TypeError("executor must be a function.");
    let n;
    this.promise = new Promise(function(l) {
      n = l;
    });
    const r = this;
    this.promise.then((s) => {
      if (!r._listeners) return;
      let l = r._listeners.length;
      for (; l-- > 0; )
        r._listeners[l](s);
      r._listeners = null;
    }), this.promise.then = (s) => {
      let l;
      const o = new Promise((u) => {
        r.subscribe(u), l = u;
      }).then(s);
      return o.cancel = function() {
        r.unsubscribe(l);
      }, o;
    }, t(function(l, o, u) {
      r.reason || (r.reason = new vi(l, o, u), n(r.reason));
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason)
      throw this.reason;
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(t) {
    if (this.reason) {
      t(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(t) : this._listeners = [t];
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(t) {
    if (!this._listeners)
      return;
    const n = this._listeners.indexOf(t);
    n !== -1 && this._listeners.splice(n, 1);
  }
  toAbortSignal() {
    const t = new AbortController(), n = (r) => {
      t.abort(r);
    };
    return this.subscribe(n), t.signal.unsubscribe = () => this.unsubscribe(n), t.signal;
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let t;
    return {
      token: new pS(function(s) {
        t = s;
      }),
      cancel: t
    };
  }
};
function K1(e) {
  return function(n) {
    return e.apply(null, n);
  };
}
function j1(e) {
  return j.isObject(e) && e.isAxiosError === !0;
}
const Wd = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(Wd).forEach(([e, t]) => {
  Wd[t] = e;
});
function TS(e) {
  const t = new Rs(e), n = zT(Rs.prototype.request, t);
  return j.extend(n, Rs.prototype, t, { allOwnKeys: !0 }), j.extend(n, t, null, { allOwnKeys: !0 }), n.create = function(s) {
    return TS(Bs(e, s));
  }, n;
}
const Ot = TS(Rl);
Ot.Axios = Rs;
Ot.CanceledError = vi;
Ot.CancelToken = G1;
Ot.isCancel = uS;
Ot.VERSION = ES;
Ot.toFormData = Nu;
Ot.AxiosError = ke;
Ot.Cancel = Ot.CanceledError;
Ot.all = function(t) {
  return Promise.all(t);
};
Ot.spread = K1;
Ot.isAxiosError = j1;
Ot.mergeConfig = Bs;
Ot.AxiosHeaders = bn;
Ot.formToJSON = (e) => oS(j.isHTMLForm(e) ? new FormData(e) : e);
Ot.getAdapter = AS.getAdapter;
Ot.HttpStatusCode = Wd;
Ot.default = Ot;
const {
  Axios: V_e,
  AxiosError: W_e,
  CanceledError: G_e,
  isCancel: K_e,
  CancelToken: j_e,
  VERSION: z_e,
  all: Y_e,
  Cancel: X_e,
  isAxiosError: Z_e,
  spread: J_e,
  toFormData: Q_e,
  AxiosHeaders: ede,
  HttpStatusCode: tde,
  formToJSON: nde,
  getAdapter: rde,
  mergeConfig: ade
} = Ot, SS = B("/api/"), Fo = B(Ot.create()), nr = B({}), xo = B({}), mS = B({}), xr = {}, Lr = {}, LS = B({
  setUrlForArray: dM
});
function z1({ axiosCreateOptions: e = {} }) {
  Fo.value = Ot.create(e);
}
function Y1({ baseUrl: e = "" }) {
  SS.value = e;
}
function X1({ errorCallbacks: e = {} }) {
  xo.value = e;
}
function Z1({ headerParams: e = {} } = {}) {
  mS.value = e;
}
function J1({
  all: e = !1,
  abortGroup: t,
  excludeAbortGroup: n
}) {
  const r = hM({ excludeAbortGroup: n });
  if (e)
    Y(xr, (s, l) => {
      r[l] || (s.abort(), delete xr[l], Lr[t] && delete Lr[t]);
    });
  else if (t) {
    let s = [];
    ot(t) ? s.push(t) : Se(t) && (s = t), Y(s, (l) => {
      r[l] || xr[l] && (xr[l].abort(), delete xr[l], Lr[t] && delete Lr[t]);
    });
  }
}
function Q1() {
  nr.value = {};
}
function eM({ apiSaveId: e }) {
  e in nr.value && delete nr.value[e];
}
function tM() {
  return {
    abortHttp: J1,
    clearAllApiSaved: Q1,
    clearApiSaved: eM,
    deleteHttp: oM,
    getHttp: nM,
    getListHttp: rM,
    getOptionsHttp: aM,
    patchHttp: lM,
    postHttp: sM,
    putHttp: iM
  };
}
function nM({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: l,
  apiSaveId: o,
  keyId: u,
  fullResponse: h,
  showError: A,
  ignoreErrorHandler: E = !1,
  abortable: p = !0,
  abortGroup: T = ""
}) {
  return qs({
    methodHttp: "get",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: l,
    apiSaveId: o,
    keyId: u,
    fullResponse: h,
    showError: A,
    ignoreErrorHandler: E,
    abortable: p,
    abortGroup: T
  });
}
function rM({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: l,
  apiSaveId: o,
  keyId: u,
  fullResponse: h,
  showError: A,
  ignoreErrorHandler: E = !1,
  abortable: p = !0,
  abortGroup: T = ""
}) {
  return qs({
    methodHttp: "get",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: l,
    apiSaveId: o,
    keyId: u,
    fullResponse: h,
    showError: A,
    ignoreErrorHandler: E,
    abortable: p,
    abortGroup: T,
    expectedList: !0
  });
}
function aM({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: l,
  keyId: o,
  fullResponse: u,
  showError: h,
  ignoreErrorHandler: A = !1,
  abortable: E = !0,
  abortGroup: p = ""
}) {
  return qs({
    methodHttp: "options",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: l,
    keyId: o,
    fullResponse: u,
    showError: h,
    abortable: E,
    abortGroup: p,
    ignoreErrorHandler: A
  });
}
function sM({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: l,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: h = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return qs({
    methodHttp: "post",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: l,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: h
  });
}
function iM({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: l,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: h = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return qs({
    methodHttp: "put",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: l,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: h
  });
}
function lM({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: l,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: h = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return qs({
    methodHttp: "patch",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: l,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: h
  });
}
function oM({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: l,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: h = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return qs({
    methodHttp: "delete",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: l,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: h
  });
}
function qs({
  methodHttp: e,
  url: t,
  urlBase: n,
  urlParams: r,
  data: s,
  headerParams: l = {},
  responseType: o = "json",
  apiSaveId: u,
  keyId: h,
  fullResponse: A,
  showError: E = !1,
  ignoreErrorHandler: p = !1,
  abortable: T = !0,
  abortGroup: m = "",
  expectedList: L
}) {
  let b;
  if (u && (b = nr.value[u], b && b.loading))
    return b.promise;
  const v = new Promise((I, y) => {
    if (b && !b.loading) {
      if (h) {
        if (b.keyData)
          return I(b.keyData);
        const P = VE({ data: b.data, keyId: h });
        return nr.value[u].keyData = P, I(P);
      }
      return I(b.data);
    }
    const R = _M({ url: t, params: r });
    let D = `${le(n) ? SS.value : n}${R}`;
    D = D.replace(/\/\//g, "/");
    const w = {
      ...mS.value,
      ...l
    }, M = fM({ abortGroup: m, abortable: T });
    AM({ abortGroup: m, abortable: T }), Fo.value({
      method: e,
      url: D,
      data: s,
      headers: w,
      responseType: o,
      signal: M
    }).then(
      (P) => {
        if (A)
          return I(P);
        const x = cM({ expectedList: L, response: P }), C = VE({ data: x, keyId: h });
        return u && (nr.value[u].data = x, nr.value[u].keyData = C, nr.value[u].loading = !1), I(h ? C : x);
      },
      (P) => {
        if ((P == null ? void 0 : P.code) === "ERR_CANCELED")
          return y(P);
        if (Me(p)) {
          if (p({ error: P.response, showError: E, client: Fo }))
            return y(P.response);
        } else if (p || uM({ error: P.response, showError: E, client: Fo, reject: y, resolve: I }))
          return y(P.response);
      }
    ).finally(
      () => {
        EM({ abortGroup: m, abortable: T });
      }
    );
  });
  return b || (nr.value[u] = nr.value[u] || {}, nr.value[u].loading = !0, nr.value[u].promise = v), v;
}
function uM({ error: e, showError: t, client: n, resolve: r, reject: s }) {
  return e ? (() => {
    const o = xo.value[e.status];
    return Me(o) ? o({ error: e, showError: t, client: n, resolve: r, reject: s }) : Me(xo.value.all) ? xo.value.all({ error: e, showError: t, client: n, resolve: r, reject: s }) : !0;
  })() : !0;
}
function _M({ url: e, params: t }) {
  const n = e || "";
  let r = "";
  Y(t, (l, o) => {
    Se(l) ? r = LS.value.setUrlForArray({ id: o, array: l, url: r }) : nt(l) ? Y(l, (u, h) => {
      u && (r && (r += "&"), r += `${h}=${u}`);
    }) : le(l) || (r && (r += "&"), r += `${o}=${l}`);
  });
  const s = r && n ? n.indexOf("?") === -1 ? "?" : "&" : "";
  return `${n}${s}${r}`;
}
function dM({ array: e, url: t, id: n }) {
  if (!e.length)
    return t;
  let r = t || "";
  return n === "fields" || n === "ordering" ? (r && (r += "&"), r += `${n}=`, r += e.join(",")) : Y(e, (s) => {
    r && (r += "&"), r += `${n}=${s}`;
  }), r;
}
function VE({ data: e, keyId: t }) {
  if (t)
    return Da(e, t);
}
function cM({ expectedList: e, response: t }) {
  return e ? Se(t.data) ? t.data : t.data.results ? t.data.results : [] : t.data;
}
function fM({ abortGroup: e = "_global", abortable: t } = {}) {
  if (t)
    return xr[e] = xr[e] || new AbortController(), xr[e].signal;
}
function hM({ excludeAbortGroup: e }) {
  const t = {};
  return e && (ot(e) ? t[e] = !0 : Se(e) && Y(e, (n) => {
    t[n] = !0;
  })), t;
}
function AM({ abortGroup: e, abortable: t }) {
  !t || !e || (Lr[e] ? Lr[e]++ : Lr[e] = 1);
}
function EM({ abortGroup: e, abortable: t }) {
  !t || !e || (Lr[e] && Lr[e]--, Lr[e] === 0 && xr[e] && (delete Lr[e], delete xr[e]));
}
function sde({ url: e, allCommasToArray: t = !1, keysCommaToArray: n = [] } = {}) {
  let r = e || window.location.search.substring(1);
  try {
    r = decodeURI(r);
  } catch (o) {
    console.error(o);
  }
  const s = r.split("&"), l = {};
  return Y(s, (o) => {
    const u = o.split("=");
    if (u && u.length === 2)
      if (u[1].indexOf("[") !== -1 || u[1].indexOf("%5B") !== -1) {
        const h = u[1].replace("%5B", "[").replace("%5D", "]").replace(/%22/g, '"');
        l[u[0]] = JSON.parse(h);
      } else if (u[1].indexOf(",") !== -1 && (t || n.indexOf(u[0]) !== -1)) {
        const h = u[1].split(",");
        l[u[0]] = h;
      } else l[u[0]] ? ot(l[u[0]]) ? (l[u[0]] = [l[u[0]]], l[u[0]].push(u[1])) : Se(l[u[0]]) && l[u[0]].push(u[1]) : l[u[0]] = u[1];
  }), l;
}
function Zc(e, {
  changeModel: t = () => {
  },
  dataExtraLocal: n = _(() => []),
  dataFromServer: r = B([])
} = {}) {
  const s = f(e, "apiSaveId"), l = f(e, "isDataSimpleArray"), o = f(e, "keyId"), u = f(e, "keyLabel"), h = f(e, "searchApi"), A = f(e, "modelValue"), E = f(e, "searchApiKey"), p = f(e, "type"), T = f(e, "url"), m = f(e, "urlParams"), L = B(!1), b = B(void 0), {
    getListHttp: v
  } = tM(), I = _(() => !!(h.value && E.value && T.value)), y = _(() => [
    s.value,
    T.value,
    m.value
  ]), R = () => {
    if (!T.value || I.value) {
      r.value = [];
      return;
    }
    b.value = !0, v({
      url: T.value,
      urlParams: m.value,
      apiSaveId: s.value
    }).then(
      (z) => {
        r.value = z;
      }
    ).finally(
      () => {
        b.value = !1;
      }
    );
  }, D = _(() => p.value === "checkbox" || p.value === "multiselect"), w = (z, oe) => {
    mc(oe, z) || (R(), D.value ? t({
      model: [],
      currentModel: []
    }) : t({
      model: void 0,
      currentModel: void 0
    }));
  }, M = (z) => l.value ? BP(z) : TT(z, o.value), P = (z) => n.value.length ? !Tc(n.value, [Ye, z]) : ot(z) || vn(z), x = _(() => {
    let z = [];
    return Se(A.value) && A.value.length ? z = Pt(A.value, (oe) => P(oe)) : P(A.value) && (z = [A.value]), z;
  }), C = ({ response: z }) => {
    const oe = pe(r.value), te = [], ue = pe(x.value);
    Y(oe, (re) => {
      if (ue.length === 0)
        return !1;
      const ie = l.value ? re : fe(re, o.value), Ae = ue.indexOf(ie);
      Ae !== -1 && (ue.splice(Ae, 1), te.push(re));
    }), te.push(...z), r.value = M(te);
  };
  return {
    loadDataFromServer: R,
    loadDataFromServerForSearchAPI: () => {
      if (!I.value || !x.value.length)
        return;
      let z;
      if (o.value === "pk" ? z = Pt(x.value, (te) => !le(te)) : z = pe(x.value), !z.length)
        return;
      b.value = !0;
      const oe = {
        ...m.value,
        [o.value]: z,
        limit: z.length
      };
      return v({
        url: T.value,
        urlParams: oe
      }).then(
        (te) => {
          r.value = te || [];
        }
      ).finally(() => {
        b.value = !1;
      });
    },
    loadingDataFromServer: b,
    loadingSearchApi: L,
    onSearchInApi: ({ search: z, data: oe = [] }) => {
      I.value && (L.value = !0, v({
        url: T.value,
        urlParams: {
          ...m.value || {},
          [E.value]: z
        }
      }).then(
        (te) => {
          l.value && (te = Bn(te, (ue) => ue[u.value])), C({ response: te });
        }
      ).then(
        () => {
          L.value = !1;
        }
      ));
    },
    searchApiLocal: I,
    updateUrlPropsComputed: w,
    urlPropsComputed: y
  };
}
function Jc(e, {
  data: t = _(() => [])
}) {
  const n = f(e, "keyGroup"), r = f(e, "keyGroupLabelCallback"), s = f(e, "sortOrderGroup"), l = _(() => Se(n.value) ? n.value : ot(n.value) ? [n.value] : []), o = _(() => l.value.length > 0), u = _(() => {
    if (!o.value)
      return;
    const A = {};
    return Y(l.value, (E, p) => {
      A[p] = {};
    }), Y(t.value, (E) => {
      let p;
      const T = [];
      let m = "";
      Y(l.value, (L, b) => {
        let v = fe(E, L);
        (le(v) || v === "") && (v = "_not_grouped"), m += `${m ? "_" : ""}${v}`, A[b][m] || (A[b][m] = {
          groupKey: v,
          groupLabel: Me(r.value) ? r.value({ group: v, item: E }) : v,
          groupParentKey: p,
          allGroupKeys: m,
          allParentKeys: pe(T),
          data: [],
          dataKeyByKeyId: {}
        }), A[b][m].data.push(E), A[b][m].dataKeyByKeyId[E[Ye]] = E, p = v, T.push(v);
      });
    }), Y(A, (E, p) => {
      A[p] = Sc(E);
    }), s.value && Y(A, (E, p) => {
      A[p] = Lc(E, ["groupLabel"], [s.value]);
    }), A;
  });
  return {
    dataGrouped: _(() => {
      if (!o.value)
        return;
      const A = {};
      return Y(t.value, (E) => {
        let p = "";
        Y(l.value, (T) => {
          let m = fe(E, T);
          if (le(m) || m === "")
            return m = "_not_grouped", p += `${p ? "_" : ""}${m}`, !1;
          p += `${p ? "_" : ""}${m}`;
        }), A[p] = A[p] || [], A[p].push(E);
      }), A;
    }),
    groupsForLever: u,
    hasKeyGroup: o,
    keyGroupArray: l
  };
}
function Qc(e, {
  data: t = _(() => [])
}) {
  const n = f(e, "sortOrder");
  return {
    dataSort: _(() => n.value ? Lc(t.value, [St], [n.value]) : t.value)
  };
}
function ef({ emit: e }, {
  dataKeyByKeyIdLocal: t = _(() => ({})),
  dataLocal: n = _(() => ({}))
}) {
  tt(n, () => {
    e("updateData", {
      dataKeyByKeyId: t.value
    });
  }, {
    immediate: !0,
    deep: !0
  });
}
function tf(e) {
  const t = f(e, "alwaysTranslate"), n = f(e, "data"), r = f(e, "dataExtra"), s = f(e, "isDataSimpleArray"), l = f(e, "keyId"), o = f(e, "keyLabel"), u = f(e, "keyLabelCallback"), h = f(e, "translateData"), A = B([]), E = _(() => FP(r.value)), p = ({ _data: D, _isArrayOfArrays: w = !1 }) => {
    const M = pe(D);
    if (w) {
      const P = [];
      return Y(M, (x) => {
        const C = x[0];
        let q = x[1];
        h.value && Ca(q) && (q = wt({ placeholder: q, alwaysTranslate: t.value })), P.push({
          [Ye]: C,
          [St]: q
        });
      }), P;
    }
    if (u.value) {
      if (s.value) {
        const P = [];
        return Y(M, (x) => {
          let C = u.value({ item: x });
          h.value && Ca(C) && (C = wt({ placeholder: C, alwaysTranslate: t.value })), P.push({
            [Ye]: x,
            [St]: C
          });
        }), P;
      }
      Y(M, (P) => {
        let x = u.value({ item: P });
        h.value && Ca(x) && (x = wt({ placeholder: x, alwaysTranslate: t.value })), P[Ye] = fe(P, l.value), P[St] = x;
      });
    } else {
      if (s.value) {
        const P = [];
        return Y(M, (x) => {
          let C = x;
          h.value && Ca(C) && (C = wt({ placeholder: C, alwaysTranslate: t.value })), P.push({
            [Ye]: x,
            [St]: C
          });
        }), P;
      }
      Y(M, (P) => {
        let x = fe(P, o.value);
        h.value && Ca(x) && (x = wt({ placeholder: x, alwaysTranslate: t.value })), P[Ye] = fe(P, l.value), P[St] = x;
      });
    }
    return M;
  }, T = _(() => n.value || A.value), m = _(() => p({
    _data: T.value,
    _isArrayOfArrays: !1
  })), L = _(() => p({
    _data: r.value,
    _isArrayOfArrays: E.value
  })), b = _(() => Da(L.value, Ye)), v = _(() => Da(m.value, Ye)), I = _(() => ({
    ...b.value,
    ...v.value
  })), y = _(() => [
    ...L.value,
    ...m.value
  ]), R = _(() => L.value.length > 0);
  return {
    dataAll: y,
    dataExtraLocal: L,
    dataFromServer: A,
    dataKeyByKeyIdLocal: I,
    dataLocal: m,
    hasDataExtra: R
  };
}
function nf(e, {
  loadingDataFromServer: t = B(!1)
}) {
  const n = f(e, "loading");
  return {
    loadingLocal: _(() => !!(n.value || t.value))
  };
}
function rf(e, { emit: t }, {
  data: n = _(() => []),
  dataExtra: r = _(() => []),
  exclusiveOption: s = _(() => {
  }),
  groupsForLever: l = _(() => {
  }),
  hasKeyGroup: o = _(() => !1),
  htmlIdLocal: u = _(() => ""),
  keyGroupArray: h = _(() => []),
  onSearchInApi: A = () => {
  },
  searchApiLocal: E = _(() => !1)
}) {
  const p = f(e, "searchTimeout"), T = f(e, "searchInGroup"), m = f(e, "searchOutside"), L = B(!1), b = B(""), v = B(""), I = B(!1), y = B({}), R = B({}), D = B({}), w = B({}), M = B({}), P = B(void 0), x = _(() => !!(m.value || E.value)), C = _(() => `${u.value}_search_global`), q = _(() => ET(b.value || "")), W = _(() => Au(q.value)), z = _(() => new RegExp(W.value, "gi")), oe = () => {
    let ae = !1;
    if (!T.value || !l.value) {
      M.value = {}, L.value = ae;
      return;
    }
    const Oe = {}, ve = {};
    Y(l.value, (Ke) => {
      Y(Ke, (he) => {
        const k = he.groupLabel;
        k === "_not_grouped" && !he.groupParentKey || (Oe[he.groupParentKey] ? (Oe[he.allGroupKeys] = !0, he.data.length && (ae = !0)) : `${k}`.search(z.value) !== -1 && (Oe[he.allGroupKeys] = !0, he.data.length && (ae = !0), he.allParentKeys.length && Y(he.allParentKeys, (G) => {
          ve[G] = !0;
        })));
      });
    }), M.value = {
      ...Oe,
      ...ve
    }, L.value = ae;
  }, te = () => {
    const ae = {}, Oe = {}, ve = {}, Ke = {};
    if (b.value) {
      if (I.value = !0, o.value ? (oe(), Y(n.value, (he) => {
        const k = he[St], G = he[Ye];
        if (`${k}`.search(z.value) !== -1) {
          Oe[G] = !0;
          let ee = "";
          Y(h.value, (de) => {
            let Ne = fe(he, de);
            (le(Ne) || Ne === "") && (Ne = "_not_grouped"), ee += `${ee ? "_" : ""}${Ne}`, Ke[ee] = !0;
          });
        }
      })) : Y(n.value, (he) => {
        const k = he[St], G = he[Ye];
        `${k}`.search(z.value) !== -1 && (Oe[G] = !0);
      }), Y(r.value, (he) => {
        const k = he[St], G = he[Ye];
        `${k}`.search(z.value) !== -1 && (ae[G] = !0);
      }), s.value) {
        const he = s.value[St], k = s.value[Ye];
        `${he}`.search(z.value) !== -1 && (ve[k] = !0);
      }
    } else
      I.value = !1;
    y.value = Oe, R.value = ae, D.value = ve, w.value = Ke;
  }, ue = _(() => !!(I.value && cn(D.value))), re = _(() => !!(I.value && cn(R.value))), ie = _(() => !!(I.value && cn(y.value) && re.value && ue.value && !L.value));
  return {
    hasNotElementsExclusiveWithSearch: ue,
    hasNotElementsExtraWithSearch: re,
    hasNotElementsWithSearch: ie,
    idForButtonSearchOutside: C,
    modelSearch: b,
    modelSearchLowerCase: q,
    modelSearchOutside: v,
    onSearchOutside: (ae) => {
      ae && ae.preventDefault(), A({
        search: v.value
      }), t("onSearchOutside", {
        model: v.value
      });
    },
    searching: I,
    searchingElements: y,
    searchingElementsExclusive: D,
    searchingElementsExtra: R,
    searchingGroups: w,
    searchingGroupsWithSearchInGroup: M,
    searchOutsideOrApi: x,
    searchOutsideRef: P,
    updateModelSearch: (ae) => {
      b.value = ae, p.value ? setTimeout(() => {
        te();
      }, p.value) : te();
    },
    updateModelSearchOutside: (ae) => {
      v.value = ae;
    }
  };
}
const Ol = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
  <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0"/>
</svg>`, pM = {
  name: "ACheckbox",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    classDataParent: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => []
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_checkbox_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inline: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: void 0
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "value"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: Array,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    search: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: void 0
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrder: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_",
        notElementsWithSearch: "_A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_",
        search: "_A_CHECKBOX_SEARCH_"
      })
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "onSearchOutside",
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      componentStyleHide: r
    } = Wt(e), {
      ariaDescribedbyLocal: s,
      changeModel: l,
      errorsId: o,
      helpTextId: u,
      htmlIdLocal: h,
      isErrors: A,
      onBlur: E,
      onFocus: p
    } = Zt(e, t), {
      textAfterLabel: T
    } = yu(e), {
      dataAll: m,
      dataFromServer: L,
      dataExtraLocal: b,
      dataKeyByKeyIdLocal: v,
      dataLocal: I,
      hasDataExtra: y
    } = tf(e), {
      loadDataFromServer: R,
      loadDataFromServerForSearchAPI: D,
      loadingDataFromServer: w,
      loadingSearchApi: M,
      onSearchInApi: P,
      searchApiLocal: x,
      updateUrlPropsComputed: C,
      urlPropsComputed: q
    } = Zc(e, {
      changeModel: l,
      dataExtraLocal: b,
      dataFromServer: L
    }), {
      loadingLocal: W
    } = nf(e, {
      loadingDataFromServer: w
    });
    ef(t, {
      dataKeyByKeyIdLocal: v,
      dataLocal: I
    });
    const {
      dataSort: z
    } = Qc(e, {
      data: I
    }), {
      dataGrouped: oe,
      groupsForLever: te,
      hasKeyGroup: ue,
      keyGroupArray: re
    } = Jc(e, {
      data: z
    }), {
      hasNotElementsExtraWithSearch: ie,
      hasNotElementsWithSearch: Ae,
      idForButtonSearchOutside: we,
      modelSearch: me,
      modelSearchLowerCase: ae,
      modelSearchOutside: Oe,
      onSearchOutside: ve,
      searching: Ke,
      searchingElements: he,
      searchingElementsExtra: k,
      searchingGroups: G,
      searchingGroupsWithSearchInGroup: ee,
      searchOutsideOrApi: de,
      searchOutsideRef: Ne,
      updateModelSearch: Fe,
      updateModelSearchOutside: Ue
    } = rf(e, t, {
      data: z,
      dataExtra: b,
      groupsForLever: te,
      htmlIdLocal: h,
      hasKeyGroup: ue,
      keyGroupArray: re,
      searchApiLocal: x,
      onSearchInApi: P
    }), {
      onChangeModelValue: Xe
    } = Ex(e, {
      changeModel: l
    }), {
      iconCollapse: Ie,
      initIsCollapsedLocal: Ge,
      isCollapsedLocal: ft,
      titleCollapse: qe,
      toggleCollapse: at
    } = jc(e, t), {
      modelValueObj: _t
    } = px(e), {
      groupId: bt
    } = gu(e, {
      htmlIdLocal: h
    });
    return tt(q, C, {
      deep: !0
    }), Ge(), R(), D(), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      componentStyleHide: r,
      dataAll: m,
      dataExtraLocal: b,
      dataGrouped: oe,
      dataKeyByKeyIdLocal: v,
      dataSort: z,
      errorsId: o,
      groupId: bt,
      groupsForLever: te,
      hasDataExtra: y,
      hasKeyGroup: ue,
      hasNotElementsExtraWithSearch: ie,
      hasNotElementsWithSearch: Ae,
      helpTextId: u,
      htmlIdLocal: h,
      iconCollapse: Ie,
      idForButtonSearchOutside: we,
      isCollapsedLocal: ft,
      isErrors: A,
      loadingLocal: W,
      loadingSearchApi: M,
      modelSearch: me,
      modelSearchLowerCase: ae,
      modelSearchOutside: Oe,
      modelValueObj: _t,
      onBlur: E,
      onChangeModelValue: Xe,
      onFocus: p,
      onSearchOutside: ve,
      searching: Ke,
      searchingElements: he,
      searchingElementsExtra: k,
      searchingGroups: G,
      searchingGroupsWithSearchInGroup: ee,
      searchOutsideOrApi: de,
      searchOutsideRef: Ne,
      textAfterLabel: T,
      titleCollapse: qe,
      toggleCollapse: at,
      updateModelSearch: Fe,
      updateModelSearchOutside: Ue
    };
  },
  render() {
    var e, t, n;
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: [
          "a_form_element__parent",
          {
            a_checkbox_inline: this.inline,
            a_checkbox_control: this.hasControlCheckbox
          }
        ]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("fieldset", {
            id: this.htmlIdLocal,
            tabindex: -1,
            class: [
              "a_fieldset",
              this.classFieldset,
              {
                a_fieldset_no_border: !this.hasBorder,
                a_fieldset_invalid: this.isErrors,
                a_fieldset_collapsed: this.isCollapsedLocal
              }
            ],
            "aria-describedby": this.ariaDescribedbyLocal
          }, [
            this.label || this.labelScreenReader ? c(HT, {
              id: this.htmlIdLocal,
              alwaysTranslate: this.alwaysTranslate,
              data: this.dataAll,
              dataKeyByKeyId: this.dataKeyByKeyIdLocal,
              disabled: this.disabled,
              hasControlCheckbox: this.hasControlCheckbox,
              isErrors: this.isErrors,
              label: this.label,
              legendClass: this.labelClass,
              labelScreenReader: this.labelScreenReader,
              main: !0,
              modelValue: this.modelValue,
              modelValueObj: this.modelValueObj,
              textAfter: this.textAfterLabel,
              onChangeModelValue: this.onChangeModelValue
            }) : "",
            this.collapsible ? c(ye, {
              "aria-controls": this.groupId,
              "aria-expanded": !this.isCollapsedLocal,
              alwaysTranslate: this.alwaysTranslate,
              class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
              iconLeft: this.iconCollapse,
              title: this.titleCollapse,
              textScreenReader: this.titleCollapse,
              type: "button",
              onClick: this.toggleCollapse
            }) : "",
            c("div", {
              id: this.groupId,
              class: "a_fieldset__content"
            }, [
              this.searchOutsideOrApi ? c("div", {
                class: "a_fieldset__search"
              }, [
                c("form", {
                  onSubmit: this.onSearchOutside
                }, [
                  c("div", {
                    class: "input-group"
                  }, [
                    c(Ln, {
                      alwaysTranslate: this.alwaysTranslate,
                      label: ((e = this.texts) == null ? void 0 : e.search) || "_A_CHECKBOX_SEARCH_",
                      inputClass: "a_select__element_clickable",
                      modelValue: this.modelSearchOutside,
                      modelUndefined: "",
                      "onUpdate:modelValue": this.updateModelSearchOutside
                    }),
                    c(ye, {
                      alwaysTranslate: this.alwaysTranslate,
                      ariaDisabled: this.loadingSearchApi,
                      disabled: this.disabled,
                      class: "a_btn a_btn_primary",
                      type: "submit",
                      iconLeft: Ol
                    })
                  ])
                ])
              ]) : "",
              this.search ? c(Ln, {
                alwaysTranslate: this.alwaysTranslate,
                label: ((t = this.texts) == null ? void 0 : t.search) || "_A_CHECKBOX_SEARCH_",
                class: "a_fieldset__search",
                modelValue: this.modelSearch,
                modelUndefined: "",
                "onUpdate:modelValue": this.updateModelSearch
              }) : "",
              this.loadingLocal ? c(cl) : "",
              this.hasDataExtra ? c("div", {
                class: "a_checkbox__data_extra"
              }, [
                ...this.dataExtraLocal.map((r, s) => c(Md, {
                  key: s,
                  id: this.htmlIdLocal,
                  alwaysTranslate: this.alwaysTranslate,
                  idSuffix: "extra",
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataItem: r,
                  disabled: this.disabled,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  itemIndex: s,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElementsExtra,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.hasNotElementsExtraWithSearch ? "" : c("div", {
                  class: "a_divider",
                  ariaHidden: !0
                })
              ]) : "",
              c("div", {}, this.hasKeyGroup ? [
                c(Vc, {
                  id: `${this.htmlIdLocal}_lev_0`,
                  alwaysTranslate: this.alwaysTranslate,
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataGrouped: this.dataGrouped,
                  disabled: this.disabled,
                  hasControlCheckbox: this.hasControlCheckbox,
                  groupsForLever: this.groupsForLever,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  levelIndex: 0,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  modelValueObj: this.modelValueObj,
                  searching: this.searching,
                  searchingElements: this.searchingElements,
                  searchingGroups: this.searchingGroups,
                  searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  type: "checkbox",
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)
              ] : [
                c("div", {
                  class: [
                    "a_checkbox_data",
                    {
                      a_btn_group: this.isButtonGroup
                    },
                    this.classDataParent
                  ]
                }, [
                  ...this.dataSort.map((r, s) => c(Md, {
                    key: s,
                    id: this.htmlIdLocal,
                    alwaysTranslate: this.alwaysTranslate,
                    classButtonGroupDefault: this.classButtonGroupDefault,
                    dataItem: r,
                    disabled: this.disabled,
                    isButtonGroup: this.isButtonGroup,
                    isErrors: this.isErrors,
                    isWidthAuto: this.isWidthAuto,
                    itemIndex: s,
                    keyDisabled: this.keyDisabled,
                    keyTitle: this.keyTitle,
                    keyTitleCallback: this.keyTitleCallback,
                    modelSearch: this.modelSearchLowerCase,
                    modelValue: this.modelValue,
                    searching: this.searching,
                    searchingElements: this.searchingElements,
                    slotAppendName: this.slotAppendName,
                    slotName: this.slotName,
                    onChangeModelValue: this.onChangeModelValue
                  }, this.$slots))
                ])
              ]),
              !this.dataSort.length || this.hasNotElementsWithSearch ? c(Te, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_form__not_elements",
                text: ((n = this.texts) == null ? void 0 : n.notElementsWithSearch) || "_A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_"
              }) : ""
            ])
          ])
        ]),
        c(Xt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(Yt, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, Cl = {
  props: {
    id: {
      type: String,
      required: !0
    }
  },
  computed: {
    idForHeader() {
      return `${this.id}_header`;
    },
    nameForEventBusDestroyKeyDownEvent() {
      return `${this.id}DestroyKeyDown`;
    },
    attributesForMainElement() {
      return this.idForFocus ? {
        "aria-activedescendant": this.idForFocus
      } : {};
    }
  },
  created() {
    this.setEventBus();
  },
  beforeUnmount() {
    this.destroyEventBus(), this.destroyListenerForPressButtons();
  },
  methods: {
    setEventBus() {
      Rt.$on(this.nameForEventBusDestroyKeyDownEvent, this.destroyListenerForPressButtons);
    },
    emitEventBusDestroyAllListenerForPressButtonsForPanels() {
      Rt.$emit(this.nameForEventBusDestroyKeyDownEvent);
    },
    destroyEventBus() {
      Rt.$off(this.nameForEventBusDestroyKeyDownEvent, this.destroyListenerForPressButtons);
    },
    setListenerForPressButtons() {
      document.addEventListener("keydown", this.pressButton);
    },
    destroyListenerForPressButtons() {
      document.removeEventListener("keydown", this.pressButton), this.destroyListenerForPressButtonsCallback();
    },
    stopCurrentEvent(e) {
      e.preventDefault(), e.stopPropagation();
    },
    setFocusToElementWithTimeout(e) {
      setTimeout(() => {
        const t = document.getElementById(e);
        t && t.focus();
      });
    },
    destroyListenerForPressButtonsCallback() {
    }
  }
};
function Qo(e) {
  return Object.prototype.toString.call(e) === "[object Object]";
}
function Gd(e) {
  return e instanceof Date;
}
function mr(e) {
  return e == null ? !1 : !isNaN(new Date(e).getTime());
}
function TM(e) {
  return Array.isArray(e) && e.length === 2 && mr(e[0]) && mr(e[1]) && new Date(e[1]).getTime() >= new Date(e[0]).getTime();
}
function eu(e, t) {
  if (!e)
    return "";
  try {
    return wn(e).format(t);
  } catch {
    return "";
  }
}
function WE(e, t, n) {
  try {
    return wn(e, n).format(t) || null;
  } catch {
    return null;
  }
}
const GE = {
  name: "APanelDate",
  mixins: [
    Cl
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    startAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    endAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    dateFormat: {
      type: String,
      default: "YYYY-MM-DD"
    },
    calendarMonth: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getMonth()
    },
    calendarYear: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getFullYear()
    },
    firstDayOfWeek: {
      default: 7,
      type: Number,
      validator: (e) => e >= 1 && e <= 7
    },
    disabledDate: {
      type: Function,
      default: () => !1
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "handleIconMonth",
    "select"
  ],
  data() {
    return {
      dayForFocusButton: void 0
    };
  },
  computed: {
    ths() {
      return this.getDays(this.firstDayOfWeek);
    },
    dates() {
      return this.getDates(this.calendarYear, this.calendarMonth, this.firstDayOfWeek);
    },
    trsWithTds() {
      const e = [];
      for (let t = 0; t < 6; t++) {
        const n = [];
        this.dates.slice(7 * t, 7 * t + 7).forEach((r) => {
          const s = this.isCurrentDayToday(r), l = this.getCellTime(r), o = this.disabledDate(l);
          n.push({
            class: this.getCellClasses({
              cellTime: l,
              isToday: s,
              month: r.month
            }),
            id: this.getId({
              month: r.month,
              day: r.day
            }),
            year: r.year,
            month: r.month,
            fullDate: this.getCellTitle(r),
            date: r,
            label: r.day,
            isToday: s,
            isDisabled: o,
            isCurrentMonth: r.month === this.calendarMonth
          });
        }), e.push(n);
      }
      return e;
    },
    dayFromValueOrToday() {
      return this.dayFromValue || (/* @__PURE__ */ new Date()).getDate();
    },
    dayFromValue() {
      return this.value ? new Date(this.value).getDate() : "";
    },
    idForFocus() {
      return this.dayForFocusButton ? `${this.id}_${this.dayForFocusButton}` : "";
    },
    daysInMonth() {
      return wn(`${this.calendarYear}_${this.calendarMonth + 1}`, "YYYY-MM").daysInMonth();
    },
    todayTranslate() {
      return this.currentLanguage.today;
    }
  },
  methods: {
    selectDate(e, { year: t, month: n, day: r }) {
      e.stopPropagation();
      const s = new Date(t, n, r);
      this.disabledDate(s) || this.$emit("select", s);
    },
    getDays(e) {
      const t = this.currentLanguage.days, n = parseInt(e, 10);
      return t.concat(t).slice(n, n + 7);
    },
    getDates(e, t, n) {
      const r = [], s = new Date(e, t);
      s.setDate(0);
      const l = (s.getDay() + 7 - n) % 7 + 1, o = s.getDate() - (l - 1);
      for (let A = 0; A < l; A++)
        r.push({ year: e, month: t - 1, day: o + A });
      s.setMonth(s.getMonth() + 2, 0);
      const u = s.getDate();
      for (let A = 0; A < u; A++)
        r.push({ year: e, month: t, day: 1 + A });
      s.setMonth(s.getMonth() + 1, 1);
      const h = 42 - (l + u);
      for (let A = 0; A < h; A++)
        r.push({ year: e, month: t + 1, day: 1 + A });
      return r;
    },
    isCurrentDayToday({ year: e, month: t, day: n }) {
      const r = this.getCellTime({ year: e, month: t, day: n }), s = (/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0);
      return r === s;
    },
    getCellClasses({ cellTime: e, isToday: t, month: n }) {
      const r = [], s = this.value && new Date(this.value).setHours(0, 0, 0, 0), l = this.startAt && new Date(this.startAt).setHours(0, 0, 0, 0), o = this.endAt && new Date(this.endAt).setHours(0, 0, 0, 0);
      return n < this.calendarMonth ? r.push("last-month") : n > this.calendarMonth ? r.push("next-month") : r.push("cur-month"), t && r.push("today"), this.disabledDate(e) && r.push("disabled"), s && (e === s ? r.push("actived") : (l && e <= s || o && e >= s) && r.push("inrange")), r.join(" ");
    },
    getCellTime({ year: e, month: t, day: n }) {
      return new Date(e, t, n).getTime();
    },
    getCellTitle({ year: e, month: t, day: n }) {
      return eu(new Date(e, t, n), this.dateFormat);
    },
    getId({ month: e, day: t }) {
      let n = `${this.id}_${t}`;
      return e < this.calendarMonth ? n += "_last_month" : e > this.calendarMonth && (n += "_next_month"), n;
    },
    setFocusToActiveDay() {
      setTimeout(() => {
        this.setDefaultDayForFocusButton(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultDayForFocusButton() {
      this.dayForFocusButton = this.dayFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === Z.arrowUp ? (this.setFocusToPast(7), this.stopCurrentEvent(e)) : t === Z.arrowDown ? (this.setFocusToFuture(7), this.stopCurrentEvent(e)) : t === Z.arrowLeft ? (this.setFocusToPast(1), this.stopCurrentEvent(e)) : t === Z.arrowRight && (this.setFocusToFuture(1), this.stopCurrentEvent(e));
    },
    setFocusToPast(e) {
      const t = this.dayForFocusButton - e;
      t > 0 ? this.dayForFocusButton = t : (this.$emit("handleIconMonth", -1), setTimeout(() => {
        this.dayForFocusButton = this.daysInMonth - Math.abs(t);
      })), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToFuture(e) {
      const t = this.dayForFocusButton + e;
      if (t <= this.daysInMonth)
        this.dayForFocusButton = t;
      else {
        const n = this.daysInMonth;
        this.$emit("handleIconMonth", 1), this.dayForFocusButton = t - n;
      }
      this.setFocusToElementWithTimeout(this.idForFocus);
    },
    destroyListenerForPressButtonsCallback() {
      this.dayForFocusButton = void 0;
    }
  },
  render() {
    return c("table", {
      class: "pux_datepicker__panel pux_datepicker__panel_date",
      role: "grid",
      ariaReadonly: !0,
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      c("thead", null, [
        c("tr", null, [
          this.ths.map((e, t) => c("th", {
            key: t,
            ariaLabel: e.longName
          }, e.shortName))
        ])
      ]),
      c("tbody", null, [
        this.trsWithTds.map((e, t) => c("tr", {
          key: t
        }, [
          e.map((n, r) => c("td", {
            key: r,
            class: ["cell", n.class, {
              pux_datepicker__panel__cell_focus: n.id === this.idForFocus
            }]
          }, [
            c("button", {
              id: n.id,
              class: "pux_datepicker__panel__button",
              type: "button",
              tabindex: -1,
              ariaHidden: !0,
              ariaSelected: !!(n.isCurrentMonth && n.label === this.dayFromValue),
              onClick: (s) => this.selectDate(s, n.date)
            }, [
              c("span", {
                ariaHidden: !0
              }, n.label),
              c("span", {
                class: "a_sr_only"
              }, n.fullDate),
              n.isToday && c("span", {
                class: "a_sr_only"
              }, this.todayTranslate)
            ])
          ]))
        ]))
      ])
    ]);
  }
}, KE = {
  name: "APanelMonth",
  mixins: [
    Cl
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    calendarYear: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getFullYear(),
      required: !1
    },
    disabledMonth: {
      type: Function,
      required: !1,
      default: void 0
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "handleIconYear",
    "select"
  ],
  data() {
    return {
      monthIndexForFocus: void 0
    };
  },
  computed: {
    currentYear() {
      return this.value && new Date(this.value).getFullYear();
    },
    currentMonth() {
      return this.value && new Date(this.value).getMonth();
    },
    monthsTranslate() {
      return this.currentLanguage.months;
    },
    months() {
      const e = [];
      return this.monthsTranslate.forEach((t, n) => {
        e.push({
          isActive: this.currentYear === this.calendarYear && this.currentMonth === n,
          isDisabled: this.isDisabled(n),
          label: t,
          id: this.getIdForMonth(n)
        });
      }), e;
    },
    idForFocus() {
      return Pe(this.monthIndexForFocus) ? "" : this.getIdForMonth(this.monthIndexForFocus);
    },
    monthFromValueOrToday() {
      return this.monthFromValue || (/* @__PURE__ */ new Date()).getMonth();
    },
    monthFromValue() {
      return this.value ? new Date(this.value).getMonth() : "";
    }
  },
  methods: {
    isDisabled(e) {
      return !!(typeof this.disabledMonth == "function" && this.disabledMonth(e));
    },
    selectMonth(e, t, n) {
      e.stopPropagation(), e.preventDefault(), !this.isDisabled(t) && this.$emit("select", { month: t, isButtonClick: n });
    },
    getIdForMonth(e) {
      return `${this.id}_month_${e}`;
    },
    setFocusToActiveMonth() {
      setTimeout(() => {
        this.setDefaultMonthForFocus(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultMonthForFocus() {
      this.monthIndexForFocus = this.monthFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === Z.arrowUp || t === Z.arrowLeft ? (this.setFocusToLastMonth(), this.stopCurrentEvent(e)) : (t === Z.arrowDown || t === Z.arrowRight) && (this.setFocusToNextMonth(), this.stopCurrentEvent(e));
    },
    setFocusToLastMonth() {
      const e = this.monthIndexForFocus - 1;
      e >= 0 ? this.monthIndexForFocus = e : (this.$emit("handleIconYear", -1), this.monthIndexForFocus = 11), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToNextMonth() {
      const e = this.monthIndexForFocus + 1;
      e <= 11 ? this.monthIndexForFocus = e : (this.$emit("handleIconYear", 1), this.monthIndexForFocus = 0), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    keypress(e, t) {
      (e.keyCode === Z.enter || e.keyCode === Z.space) && this.selectMonth(e, t);
    }
  },
  render() {
    return c("ul", {
      class: "pux_datepicker__panel pux_datepicker__panel_month pux_datepicker__panel__list",
      role: "listbox",
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      this.months.map((e, t) => c("li", {
        id: e.id,
        key: e.id,
        class: ["cell", {
          actived: e.isActive,
          disabled: e.isDisabled,
          pux_datepicker__panel__cell_focus: t === this.monthIndexForFocus
        }],
        role: "option",
        ariaSelected: !!e.isActive,
        tabindex: -1,
        onClick: (n) => this.selectMonth(n, t),
        onKeypress: (n) => this.keypress(n, t)
      }, e.label))
    ]);
  }
}, jE = {
  name: "APanelTime",
  mixins: [
    Cl
  ],
  props: {
    minuteStep: {
      type: Number,
      default: 0,
      validator: (e) => e >= 0 && e <= 60
    },
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: void 0
    },
    timeType: {
      type: Array,
      default() {
        return ["24", "a"];
      }
    },
    disabledTime: {
      type: Function,
      required: !1,
      default: void 0
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "select"
  ],
  data() {
    return {
      timeIndexForFocus: void 0,
      columnIndexForFocus: void 0
    };
  },
  computed: {
    currentHours() {
      return this.value ? new Date(this.value).getHours() : 0;
    },
    currentMinutes() {
      return this.value ? new Date(this.value).getMinutes() : 0;
    },
    currentSeconds() {
      return this.value ? new Date(this.value).getSeconds() : 0;
    },
    date() {
      return this.value ? new Date(this.value) : (/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0);
    },
    isDisabledTimeFunction() {
      return typeof this.disabledTime == "function";
    },
    timesFiltered() {
      const e = [];
      let t = 0;
      const n = this.setColumn({
        times: this.hours,
        timeFunctionName: "setHours",
        currentTime: this.currentHours,
        ariaLabel: this.currentLanguage.hours,
        columnIndex: t
      });
      n.length && (e.push(n), t++);
      const r = this.setColumn({
        times: this.minutes,
        timeFunctionName: "setMinutes",
        currentTime: this.currentMinutes,
        ariaLabel: this.currentLanguage.minutes,
        columnIndex: t
      });
      r.length && (e.push(r), t++);
      const s = this.setColumn({
        times: this.seconds,
        timeFunctionName: "setSeconds",
        currentTime: this.currentSeconds,
        ariaLabel: this.currentLanguage.seconds,
        columnIndex: t
      });
      return s.length && e.push(s), e;
    },
    minuteStepLocal() {
      return this.minuteStep || 1;
    },
    minuteLength() {
      return parseInt(60 / this.minuteStepLocal);
    },
    hours() {
      return Array.apply(null, { length: 24 }).map((e, t) => t);
    },
    minutes() {
      return Array.apply(null, { length: this.minuteLength }).map(
        (e, t) => t * this.minuteStepLocal
      );
    },
    seconds() {
      return this.minuteStep === 0 ? Array.apply(null, { length: 60 }).map((e, t) => t) : [];
    },
    idForFocus() {
      return this.getCurrentId({
        columnIndex: this.columnIndexForFocus,
        rowIndex: this.timeIndexForFocus
      });
    },
    fullIndexForFocus() {
      return `${this.columnIndexForFocus}_${this.timeIndexForFocus}`;
    }
  },
  methods: {
    stringifyText(e) {
      return ("00" + e).slice(String(e).length);
    },
    selectTime(e, t) {
      typeof this.disabledTime == "function" && this.disabledTime(e) || this.$emit("select", new Date(e), t);
    },
    setColumn({ times: e, timeFunctionName: t, currentTime: n, ariaLabel: r, columnIndex: s }) {
      const l = [];
      return e.forEach((o, u) => {
        const h = new Date(this.date)[t](o), A = o === n, E = this.isDisabledTimeFunction && this.disabledTime(h), p = this.stringifyText(o);
        l.push({
          label: p,
          time: h,
          isActive: A,
          isDisabled: E,
          ariaLabel: `${r}: ${p}`,
          id: this.getCurrentId({
            columnIndex: s,
            rowIndex: u
          })
        });
      }), l;
    },
    getCurrentId({ columnIndex: e, rowIndex: t }) {
      return `${this.id}_time_${e}_${t}`;
    },
    setFocusToActiveTime() {
      setTimeout(() => {
        this.setDefaultTimeForFocus(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultTimeForFocus() {
      this.timeIndexForFocus = 0, this.columnIndexForFocus = 0;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === Z.arrowUp ? (this.setFocusToLastTime(), this.stopCurrentEvent(e)) : t === Z.arrowDown ? (this.setFocusToNextTime(), this.stopCurrentEvent(e)) : t === Z.arrowLeft ? (this.setFocusToLastTimeColumn(), this.stopCurrentEvent(e)) : t === Z.arrowRight && (this.setFocusToNextTimeColumn(), this.stopCurrentEvent(e));
    },
    setFocusToLastTime() {
      const e = this.timesFiltered[this.columnIndexForFocus];
      this.timeIndexForFocus > 0 ? this.timeIndexForFocus-- : this.timeIndexForFocus = e.length - 1, this.setFocusToElement(this.idForFocus);
    },
    setFocusToNextTime() {
      const e = this.timesFiltered[this.columnIndexForFocus];
      this.timeIndexForFocus < e.length - 1 ? this.timeIndexForFocus++ : this.timeIndexForFocus = 0, this.setFocusToElement(this.idForFocus);
    },
    setFocusToLastTimeColumn() {
      this.columnIndexForFocus > 0 ? this.columnIndexForFocus-- : this.columnIndexForFocus = this.timesFiltered.length - 1, this.timeIndexForFocus = 0, this.setFocusToElement(this.idForFocus);
    },
    setFocusToNextTimeColumn() {
      this.columnIndexForFocus < this.timesFiltered.length - 1 ? this.columnIndexForFocus++ : this.columnIndexForFocus = 0, this.timeIndexForFocus = 0, this.setFocusToElement(this.idForFocus);
    },
    setFocusToElement(e) {
      const t = document.getElementById(e);
      t && t.focus();
    },
    keypress(e, t, n) {
      (e.keyCode === Z.enter || e.keyCode === Z.space) && (this.selectTime(t, n), e.stopPropagation(), e.preventDefault());
    }
  },
  render() {
    return c("div", {
      class: "pux_datepicker__panel pux_datepicker__panel_time"
    }, [
      this.timesFiltered.map((e, t) => c("ul", {
        key: t,
        class: "pux_datepicker__time_list",
        role: "listbox",
        "aria-labelledby": this.idForHeader,
        style: { width: `${100 / this.timesFiltered.length}%` }
      }, [
        e.map((n, r) => c("li", {
          id: n.id,
          key: r,
          class: ["cell", {
            actived: n.isActive,
            disabled: n.isDisabled,
            pux_datepicker__panel__cell_focus: t + "_" + r === this.fullIndexForFocus
          }],
          tabindex: -1,
          role: "option",
          ariaSelected: !!n.isActive,
          ariaLabel: n.ariaLabel,
          onClick: () => this.selectTime(n.time),
          onKeypress: (s) => this.keypress(s, n.time, t === this.timesFiltered.length - 1)
        }, n.label))
      ]))
    ]);
  }
}, SM = {
  name: "APanelYearItem",
  props: {
    prefixForId: {
      type: String,
      required: !0
    },
    year: {
      type: Number,
      required: !0
    },
    yearFromValue: {
      type: Number,
      required: !1,
      default: void 0
    },
    yearIndex: {
      type: Number,
      required: !0
    },
    isDisabled: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "selectYear"
  ],
  computed: {
    isDisabledLocal() {
      return this.isDisabled(this.year);
    },
    isYearActive() {
      return this.yearFromValue === this.year;
    },
    idForList() {
      return `${this.prefixForId}${this.yearIndex}`;
    },
    ariaSelected() {
      return `${this.isYearActive}`;
    }
  },
  methods: {
    selectYearLocal(e, t) {
      e.stopPropagation(), e.preventDefault(), !this.isDisabledLocal && this.$emit("selectYear", { year: this.year, isButtonClick: t });
    },
    keypress(e) {
      (e.keyCode === Z.enter || e.keyCode === Z.space) && this.selectYearLocal(e, !0);
    }
  },
  render() {
    return c("li", {
      id: this.idForList,
      class: ["cell", {
        actived: this.isYearActive,
        disabled: this.isDisabledLocal
      }],
      role: "option",
      tabindex: -1,
      "aria-selected": this.ariaSelected,
      onClick: this.selectYearLocal,
      onKeypress: this.keypress
    }, this.year);
  }
}, zE = {
  name: "APanelYear",
  mixins: [
    Cl
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    firstYear: {
      type: Number,
      required: !0
    },
    disabledYear: {
      type: Function,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "handleIconYear",
    "select"
  ],
  data() {
    return {
      yearIndexForFocus: void 0
    };
  },
  computed: {
    firstYearLocal() {
      return Math.floor(this.firstYear / 10) * 10;
    },
    yearFromValue() {
      return this.value && new Date(this.value).getFullYear();
    },
    idForFocus() {
      return Pe(this.yearIndexForFocus) ? "" : this.getIdForYear(this.yearIndexForFocus);
    },
    yearIndexFromValueOrToday() {
      const e = this.yearFromValueOrToday - this.firstYearLocal;
      return e <= 9 && e >= 0 ? e : 0;
    },
    yearFromValueOrToday() {
      return this.yearFromValue || (/* @__PURE__ */ new Date()).getFullYear();
    },
    prefixForId() {
      return `${this.id}_year_`;
    }
  },
  methods: {
    isDisabled(e) {
      return !!(typeof this.disabledYear == "function" && this.disabledYear(e));
    },
    selectYear({ year: e, isButtonClick: t }) {
      this.isDisabled(e) || this.$emit("select", { year: e, isButtonClick: t });
    },
    getIdForYear(e) {
      return `${this.prefixForId}${e}`;
    },
    setFocusToActiveYear() {
      setTimeout(() => {
        this.setDefaultYearForFocus(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultYearForFocus() {
      this.yearIndexForFocus = this.yearIndexFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === Z.arrowUp || t === Z.arrowLeft ? (this.setFocusToLastYear(), this.stopCurrentEvent(e)) : (t === Z.arrowDown || t === Z.arrowRight) && (this.setFocusToNextYear(), this.stopCurrentEvent(e));
    },
    setFocusToLastYear() {
      const e = this.yearIndexForFocus - 1;
      e >= 0 && e <= 9 ? this.yearIndexForFocus = e : (this.$emit("handleIconYear", -1), this.yearIndexForFocus = 9), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToNextYear() {
      const e = this.yearIndexForFocus + 1;
      e <= 9 && e >= 0 ? this.yearIndexForFocus = e : (this.$emit("handleIconYear", 1), this.yearIndexForFocus = 0), this.setFocusToElementWithTimeout(this.idForFocus);
    }
  },
  render() {
    return c("ul", {
      class: "pux_datepicker__panel pux_datepicker__panel_year pux_datepicker__panel__list",
      role: "listbox",
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      SP(10).map((e) => c(SM, {
        key: e,
        class: {
          pux_datepicker__panel__cell_focus: e === this.yearIndexForFocus
        },
        year: this.firstYearLocal + e,
        yearFromValue: this.yearFromValue,
        yearIndex: e,
        prefixForId: this.prefixForId,
        isDisabled: this.isDisabled,
        onSelectYear: this.selectYear
      }))
    ]);
  }
};
function mM(e, t) {
  if (!t) {
    e.scrollTop = 0;
    return;
  }
  const n = [];
  let r = t.offsetParent;
  for (; r && e !== r && e.contains(r); )
    n.push(r), r = r.offsetParent;
  const s = t.offsetTop + n.reduce((h, A) => h + A.offsetTop, 0), l = s + t.offsetHeight, o = e.scrollTop, u = o + e.clientHeight;
  s < o ? e.scrollTop = s : l > u && (e.scrollTop = l - e.clientHeight);
}
const cd = {
  name: "ADatepickerCalendarPanel",
  components: {
    APanelDate: GE,
    APanelMonth: KE,
    APanelTime: jE,
    APanelYear: zE
  },
  mixins: [
    Cl
  ],
  props: {
    id: {
      type: String,
      required: !0
    },
    value: {
      default: null,
      validator: function(e) {
        return e === null || mr(e);
      }
    },
    startAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    endAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    visible: {
      type: Boolean,
      default: !1
    },
    type: {
      type: String,
      default: "date"
      // ["date", "datetime"]
    },
    dateFormat: {
      type: String,
      default: "YYYY-MM-DD"
    },
    index: {
      type: Number,
      default: void 0
    },
    defaultValue: {
      validator: function(e) {
        return mr(e);
      },
      default: void 0
    },
    firstDayOfWeek: {
      default: 1,
      type: Number,
      validator: (e) => e >= 1 && e <= 7
    },
    notBefore: {
      default: null,
      validator: function(e) {
        return !e || mr(e);
      }
    },
    notAfter: {
      default: null,
      validator: function(e) {
        return !e || mr(e);
      }
    },
    disabledDays: {
      type: [Array, Function],
      default: function() {
        return [];
      }
    },
    minuteStep: {
      type: Number,
      default: 0,
      validator: (e) => e >= 0 && e <= 60
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "closePopup",
    "selectDate",
    "selectTime"
  ],
  data() {
    const e = this.getNow(this.value), t = e.getFullYear(), n = e.getMonth(), r = Math.floor(t / 10) * 10;
    return {
      panel: "NONE",
      dates: [],
      calendarMonth: n,
      calendarYear: t,
      firstYear: r,
      isFocusPanelChild: !1,
      isWorkWithKeyboard: !1
    };
  },
  computed: {
    now: {
      get() {
        return new Date(this.calendarYear, this.calendarMonth).getTime();
      },
      set(e) {
        const t = new Date(e);
        this.calendarYear = t.getFullYear(), this.calendarMonth = t.getMonth();
      }
    },
    timeType() {
      const e = /h+/.test(this.$parent.format) ? "12" : "24", t = /A/.test(this.$parent.format) ? "A" : "a";
      return [e, t];
    },
    timeHeader() {
      return this.type === "time" ? this.$parent.format : this.value && eu(this.value, this.dateFormat);
    },
    yearHeader() {
      const e = this.firstYear + 9;
      return this.currentLanguage.headerYears(this.firstYear, e);
    },
    months() {
      return this.currentLanguage.months;
    },
    notBeforeTime() {
      return this.getCriticalTime(this.notBefore);
    },
    notAfterTime() {
      return this.getCriticalTime(this.notAfter);
    },
    suffixForHeader() {
      return this.panel === "TIME" ? this.currentLanguage.placeholder.regionTime : this.currentLanguage.placeholder.regionDate;
    },
    idForHeaderParent() {
      return `${this.idForHeader}_parent`;
    },
    ariaLabelForButtonLastYear() {
      return this.panel === "YEAR" ? this.currentLanguage.buttons.lastYears : this.currentLanguage.buttons.lastYear;
    },
    ariaLabelForButtonLastMonth() {
      return this.currentLanguage.buttons.lastMonth;
    },
    ariaLabelForButtonNextMonth() {
      return this.currentLanguage.buttons.nextMonth;
    },
    ariaLabelForButtonNextYear() {
      return this.panel === "YEAR" ? this.currentLanguage.buttons.nextYears : this.currentLanguage.buttons.nextYear;
    },
    ariaLabelForButtonCurrentMonth() {
      return this.currentLanguage.buttons.toMonthsView;
    },
    ariaLabelForButtonCurrentYear() {
      return this.currentLanguage.buttons.toYearsView;
    },
    ariaLabelForButtonToDays() {
      return this.currentLanguage.buttons.toDaysView;
    }
  },
  watch: {
    value: {
      immediate: !0,
      handler: "updateNow"
    },
    defaultValue: {
      handler: "updateNow"
    },
    visible: {
      immediate: !0,
      handler: "init"
    },
    panel: {
      handler: "handelPanelChange"
    }
  },
  beforeUnmount() {
    this.destroyListenerForPressTabButton(), this.destroyListenerForPressEscapeButton();
  },
  methods: {
    handelPanelChange(e) {
      e === "YEAR" ? this.firstYear = Math.floor(this.calendarYear / 10) * 10 : e === "TIME" && this.$nextTick().then(() => {
        const t = this.$el.querySelectorAll(".pux_datepicker__panel_time .pux_datepicker__time_list");
        for (let n = 0, r = t.length; n < r; n++) {
          const s = t[n];
          mM(s, s.querySelector(".actived"));
        }
      });
    },
    init(e) {
      if (e) {
        const t = this.type;
        t === "month" ? this.showPanelMonth() : t === "year" ? this.showPanelYear() : t === "time" ? this.showPanelTime() : this.showPanelDate(), this.setListenerForPressEscapeButton();
      } else
        this.showPanelNone(), this.updateNow(this.value), this.destroyListenerForPressEscapeButton();
      this.emitEventBusDestroyAllListenerForPressButtonsForPanels();
    },
    getNow(e) {
      return e ? new Date(e) : this.defaultValue && mr(this.defaultValue) ? new Date(this.defaultValue) : /* @__PURE__ */ new Date();
    },
    updateNow(e) {
      this.now = this.getNow(e);
    },
    getCriticalTime(e) {
      if (!e)
        return null;
      const t = new Date(e);
      return this.type === "year" ? new Date(t.getFullYear(), 0).getTime() : this.type === "month" ? new Date(t.getFullYear(), t.getMonth()).getTime() : this.type === "date" ? t.setHours(0, 0, 0, 0) : t.getTime();
    },
    inBefore(e, t) {
      return t === void 0 && (t = this.startAt), this.notBeforeTime && e < this.notBeforeTime || t && e < this.getCriticalTime(t);
    },
    inAfter(e, t) {
      return t === void 0 && (t = this.endAt), this.notAfterTime && e > this.notAfterTime || t && e > this.getCriticalTime(t);
    },
    inDisabledDays(e) {
      return Array.isArray(this.disabledDays) ? this.disabledDays.some((t) => this.getCriticalTime(t) === e) : typeof this.disabledDays == "function" ? this.disabledDays(new Date(e)) : !1;
    },
    isDisabledYear(e) {
      const t = new Date(e, 0).getTime(), n = new Date(e + 1, 0).getTime() - 1;
      return this.inBefore(n) || this.inAfter(t) || this.type === "year" && this.inDisabledDays(t);
    },
    isDisabledMonth(e) {
      const t = new Date(this.calendarYear, e).getTime(), n = new Date(this.calendarYear, e + 1).getTime() - 1;
      return this.inBefore(n) || this.inAfter(t) || this.type === "month" && this.inDisabledDays(t);
    },
    isDisabledDate(e) {
      const t = new Date(e).getTime(), n = new Date(e).setHours(23, 59, 59, 999);
      return this.inBefore(n) || this.inAfter(t) || this.inDisabledDays(t);
    },
    isDisabledTime(e, t, n) {
      const r = new Date(e).getTime();
      return this.inBefore(r, t) || this.inAfter(r, n) || this.inDisabledDays(r);
    },
    selectDate(e) {
      if (this.type === "datetime") {
        let t = new Date(e);
        Gd(this.value) && t.setHours(
          this.value.getHours(),
          this.value.getMinutes(),
          this.value.getSeconds()
        ), this.isDisabledTime(t) && (t.setHours(0, 0, 0, 0), this.notBefore && t.getTime() < new Date(this.notBefore).getTime() && (t = new Date(this.notBefore)), this.startAt && t.getTime() < new Date(this.startAt).getTime() && (t = new Date(this.startAt))), this.selectTime(t), this.showPanelTime();
        return;
      }
      this.$emit("selectDate", e);
    },
    selectYear({ year: e, isButtonClick: t }) {
      if (this.changeCalendarYear(e), this.type.toLowerCase() === "year")
        return this.selectDate(new Date(this.now));
      this.showPanelMonth(), t && this.setFocusToActivePanel();
    },
    selectMonth({ month: e, isButtonClick: t }) {
      if (this.changeCalendarMonth(e), this.type.toLowerCase() === "month")
        return this.selectDate(new Date(this.now));
      this.showPanelDate(), t && this.setFocusToActivePanel();
    },
    selectTime(e, t = !1) {
      this.$emit("selectTime", e, t);
    },
    changeCalendarYear(e) {
      this.updateNow(new Date(e, this.calendarMonth));
    },
    changeCalendarMonth(e) {
      this.updateNow(new Date(this.calendarYear, e));
    },
    getSibling() {
      const e = [
        this.$parent.$refs.calendarPanelRef
      ];
      this.$parent.$refs.calendarPanel2Ref && e.push(this.$parent.$refs.calendarPanel2Ref);
      const t = e.filter(
        (r) => r.$options.name === this.$options.name
      ), n = t.indexOf(this);
      return t[n ^ 1];
    },
    handleIconMonth(e) {
      const t = this.calendarMonth;
      this.changeCalendarMonth(t + e), this.$parent.$emit("changeCalendarMonth", {
        month: t,
        flag: e,
        vm: this,
        sibling: this.getSibling()
      });
    },
    handleIconYear(e) {
      if (this.panel === "YEAR")
        this.changePanelYears(e);
      else {
        const t = this.calendarYear;
        this.changeCalendarYear(t + e), this.$parent.$emit("changeCalendarYear", {
          year: t,
          flag: e,
          vm: this,
          sibling: this.getSibling()
        });
      }
    },
    handleBtnYear(e) {
      e.stopPropagation(), this.showPanelYear(), this.isWorkWithKeyboard && this.setFocusToActivePanel();
    },
    handleBtnMonth(e) {
      e.stopPropagation(), this.showPanelMonth(), this.isWorkWithKeyboard && this.setFocusToActivePanel();
    },
    handleTimeHeader(e) {
      e.stopPropagation(), this.type !== "time" && (this.showPanelDate(), this.isWorkWithKeyboard && this.setFocusToActivePanel());
    },
    changePanelYears(e) {
      this.firstYear = this.firstYear + e * 10;
    },
    showPanelNone() {
      this.panel = "NONE", this.isFocusPanelChild = !1, this.destroyListenerForPressTabButton(), this.emitEventBusDestroyAllListenerForPressButtonsForPanels(), this.setWorkWithoutKeyboard();
    },
    showPanelTime() {
      this.panel = "TIME";
    },
    showPanelDate() {
      this.panel = "DATE";
    },
    showPanelYear() {
      this.panel = "YEAR";
    },
    showPanelMonth() {
      this.panel = "MONTH";
    },
    setFocusToActivePanelFromParent() {
      this.setWorkWithKeyboard(), this.setFocusToActivePanel(), this.setListenerForPressTabButton();
    },
    setFocusToActivePanel() {
      this.isFocusPanelChild = !0, this.setFocusToActiveElementInChild();
    },
    removeFocusFromActivePanel() {
      this.isFocusPanelChild && (this.isFocusPanelChild = !1, this.emitEventBusDestroyAllListenerForPressButtonsForPanels());
    },
    setFocusToActiveElementInChild() {
      this.panel === "DATE" ? this.$refs.panelDate.setFocusToActiveDay() : this.panel === "TIME" ? this.$refs.panelTime.setFocusToActiveTime() : this.panel === "YEAR" ? this.$refs.panelYear.setFocusToActiveYear() : this.panel === "MONTH" && this.$refs.panelMonth.setFocusToActiveMonth();
    },
    setListenerForPressTabButton() {
      document.addEventListener("keydown", this.pressTabButton);
    },
    destroyListenerForPressTabButton() {
      document.removeEventListener("keydown", this.pressTabButton);
    },
    pressTabButton(e) {
      e.keyCode === Z.tab && (this.trapFocus(e), this.stopCurrentEvent(e));
    },
    trapFocus(e) {
      const t = this.$el.querySelectorAll(".pux_datepicker__calendar__tab");
      if (t.length <= 1)
        return;
      let n = !1, r = !1;
      Y(t, (s, l) => {
        if (document.activeElement === s)
          return e.shiftKey ? l === 0 ? (t[t.length - 1].focus(), r = !0) : t[l - 1].focus() : (l === t.length - 1 ? t[0].focus() : t[l + 1].focus(), l === t.length - 2 && (r = !0)), n = !0, !1;
      }), n || (e.shiftKey ? t[t.length - 2].focus() : t[0].focus()), r ? this.setFocusToActivePanel() : this.removeFocusFromActivePanel();
    },
    setWorkWithKeyboard() {
      this.isWorkWithKeyboard = !0;
    },
    setWorkWithoutKeyboard() {
      this.isWorkWithKeyboard = !1;
    },
    setListenerForPressEscapeButton() {
      document.addEventListener("keydown", this.pressEscapeButton);
    },
    destroyListenerForPressEscapeButton() {
      document.removeEventListener("keydown", this.pressEscapeButton);
    },
    pressEscapeButton(e) {
      e.keyCode === Z.escape && this.$emit("closePopup", !0);
    }
  },
  render() {
    return c("div", {
      class: ["pux_datepicker__calendar", `pux_datepicker__calendar_${this.panel.toLowerCase()}`],
      role: "region",
      "aria-labelledby": this.idForHeaderParent,
      onClick: (e) => e.stopPropagation()
    }, [
      c("div", {
        id: this.idForHeaderParent,
        class: "a_sr_only",
        role: "header"
      }, [
        c("div", {
          id: this.idForHeader,
          "aria-live": "polite"
        }, [
          this.panel === "DATE" && c("span", null, this.months[this.calendarMonth]),
          (this.panel === "DATE" || this.panel === "MONTH") && c("span", null, this.calendarYear),
          this.panel === "YEAR" && c("span", null, this.yearHeader),
          this.panel === "TIME" && c("span", null, this.timeHeader)
        ]),
        c("div", null, this.suffixForHeader)
      ]),
      c("div", {
        class: "pux_datepicker__calendar__header"
      }, [
        c("div", null, [
          this.panel !== "TIME" && c("button", {
            class: "pux_datepicker__icon_last_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonLastYear,
            innerHTML: "&laquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconYear(-1);
            }
          }),
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__icon_last_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonLastMonth,
            innerHTML: "&lsaquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconMonth(-1);
            }
          })
        ]),
        c("div", null, [
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__current_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonCurrentMonth,
            onClick: this.handleBtnMonth
          }, this.months[this.calendarMonth]),
          (this.panel === "DATE" || this.panel === "MONTH") && c("button", {
            class: "pux_datepicker__current_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonCurrentYear,
            onClick: this.handleBtnYear
          }, this.calendarYear),
          this.panel === "YEAR" && c("span", {
            class: "pux_datepicker__current_year"
          }, this.yearHeader),
          this.panel === "TIME" && c("span", null, [
            this.type === "time" ? c("span", {
              class: "pux_datepicker__time_header"
            }, this.timeHeader) : c("button", {
              class: "pux_datepicker__time_header pux_datepicker__calendar__tab",
              type: "button",
              ariaLabel: this.ariaLabelForButtonToDays,
              onClick: this.handleTimeHeader
            }, this.timeHeader)
          ])
        ]),
        c("div", null, [
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__icon_next_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonNextMonth,
            innerHTML: "&rsaquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconMonth(1);
            }
          }),
          this.panel !== "TIME" && c("button", {
            class: "pux_datepicker__icon_next_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonNextYear,
            innerHTML: "&raquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconYear(1);
            }
          })
        ])
      ]),
      c("div", {
        class: "pux_datepicker__calendar__content",
        role: "application"
      }, [
        c(GE, {
          ref: "panelDate",
          id: this.id,
          style: this.panel !== "DATE" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "DATE"
          },
          tabindex: 0,
          value: this.value,
          dateFormat: this.dateFormat,
          calendarMonth: this.calendarMonth,
          calendarYear: this.calendarYear,
          startAt: this.startAt,
          endAt: this.endAt,
          firstDayOfWeek: this.firstDayOfWeek,
          disabledDate: this.isDisabledDate,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectDate,
          onHandleIconMonth: this.handleIconMonth
        }),
        c(zE, {
          ref: "panelYear",
          id: this.id,
          style: this.panel !== "YEAR" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "YEAR"
          },
          value: this.value,
          disabledYear: this.isDisabledYear,
          firstYear: this.firstYear,
          onSelect: this.selectYear,
          onHandleIconYear: this.handleIconYear
        }),
        c(KE, {
          ref: "panelMonth",
          id: this.id,
          style: this.panel !== "MONTH" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "MONTH"
          },
          value: this.value,
          disabledMonth: this.isDisabledMonth,
          calendarYear: this.calendarYear,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectMonth,
          onHandleIconYear: this.handleIconYear
        }),
        c(jE, {
          ref: "panelTime",
          id: this.id,
          style: this.panel !== "TIME" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "TIME"
          },
          minuteStep: this.minuteStep,
          value: this.value,
          disabledTime: this.isDisabledTime,
          timeType: this.timeType,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectTime
        })
      ])
    ]);
  }
}, LM = {
  name: "ADatepickerIcon",
  computed: {
    svgHtml() {
      return `<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 200 200" class="a_datepicker__calendar_icon">
        <rect x="13" y="29" rx="14" ry="14" width="174" height="158" fill="transparent"></rect> 
        <line x1="46" x2="46" y1="8" y2="50"></line> <line x1="154" x2="154" y1="8" y2="50"></line> 
        <line x1="13" x2="187" y1="70" y2="70"></line> 
        <text x="50%" y="135" font-size="90" stroke-width="1" text-anchor="middle" dominant-baseline="middle">${this.todayInDayFormat}</text>
      </svg>`;
    },
    todayInDayFormat() {
      return (/* @__PURE__ */ new Date()).getDate();
    }
  },
  render() {
    return c("span", {
      ariaHidden: !0,
      innerHTML: this.svgHtml
    });
  }
}, af = {
  props: {
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_ui_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      required: !1
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ]
};
function bM(e, {
  currentLanguage: t = _(() => ({})),
  popupVisible: n = B(!1)
}) {
  const r = f(e, "extra"), s = f(e, "id"), l = f(e, "placeholder"), o = f(e, "range"), u = f(e, "type"), h = f(e, "width"), A = _(() => ot(l.value) ? wt({ placeholder: l.value, extra: r.value }) : o.value ? t.value.placeholder.dateRange : u.value === "time" ? t.value.placeholder.time : t.value.placeholder.date), E = _(() => `${s.value}_panel`), p = _(() => [
    `${E.value}_0`,
    `${E.value}_1`
  ]), T = _(() => `${!n.value}`), m = _(() => `${n.value}`), L = _(() => `${s.value}_calendar`), b = _(() => vn(h.value) || ot(h.value) && /^\d+$/.test(h.value) ? h.value + "px" : h.value), v = _(() => String(u.value).toLowerCase());
  return {
    ariaExpandedForCalendar: m,
    ariaHiddenForCalendar: T,
    idForCalendar: L,
    idForPanel: E,
    idsForPanelRange: p,
    innerPlaceholder: A,
    innerType: v,
    widthLocal: b
  };
}
function vM(e, { emit: t }, {
  calendarPanelRef: n = B(void 0),
  changeModel: r = () => {
  },
  closePopover: s = () => {
  },
  setCloseFocus: l = () => {
  }
}) {
  const o = f(e, "range"), u = f(e, "confirm"), h = f(e, "disabled"), A = f(e, "modelValue"), E = f(e, "formatSave"), p = f(e, "editable"), T = f(e, "format"), m = f(e, "type"), L = B(null), b = B(null), v = () => {
    L.value = o.value ? [null, null] : null;
  }, I = (k) => !!WE(k, T.value, E.value), y = (k) => {
    try {
      return wn(k, E.value).isValid() && wn(k, E.value).format(T.value) || "";
    } catch {
      return "";
    }
  }, R = (k) => {
    try {
      return !!wn(k, E.value).isValid();
    } catch {
      return !1;
    }
  }, D = (k) => Qo(T.value) && typeof this.format.stringify == "function" ? T.value.stringify(k) : eu(k, T.value), w = _(() => b.value !== null ? b.value : o.value ? "" : I(A.value) ? y(A.value) : ""), M = (k, G) => Gd(k) && Gd(G) && k.getTime() === G.getTime(), P = (k, G) => Array.isArray(k) && Array.isArray(G) && k.length === G.length && k.every((ee, de) => M(ee, G[de])), x = (k) => {
    const G = o.value ? "" : (
      // TODO: range this.currentValue.map(date2value)
      eu(L.value, E.value)
    );
    r({
      model: G
    }), t(k, G);
  }, C = (k = !1) => u.value && !k || h.value || (o.value ? P(A.value, L.value) : M(A.value, L.value)) ? !1 : (x("change"), !0), q = (k) => {
    k && k.stopPropagation();
    const G = o.value ? [null, null] : null;
    L.value = G, C(!0), t("clear");
  }, W = (k) => {
    L.value = k, C() && s(), l();
  }, z = (k, G) => {
    L.value = k, C() && G && s(), G && l();
  }, oe = (k) => {
    L.value[0] = k, L.value[1] && C();
  }, te = (k) => {
    L.value[1] = k, L.value[0] && C();
  }, ue = (k) => {
    oe(k);
  }, re = (k) => {
    te(k);
  }, ie = (k) => Qo(T.value) && typeof T.value.parse == "function" ? T.value.parse(k) : WE(k, T.value, E.value), Ae = (k) => {
    try {
      return wn(k, T.value).isValid() && wn(k, T.value).format() || null;
    } catch {
      return null;
    }
  }, we = (k) => {
    try {
      return wn(k, E.value).isValid() && wn(k, E.value).format() || null;
    } catch {
      return null;
    }
  }, me = () => {
    if (p.value && b.value !== null) {
      let k = w.value;
      const G = n.value.isDisabledTime;
      if (!k) {
        q();
        return;
      }
      if (o.value)
        return;
      m.value === "time" && (k = `${wn().format("DD.MM.YYYY")} ${k}`);
      const ee = Ae(k);
      if (ee && !G(ee, null, null)) {
        L.value = ee, C(!0), s();
        return;
      }
      t("inputError", k);
    }
  }, ae = () => {
    n.value.setFocusToActivePanelFromParent();
  };
  return {
    clearDate: q,
    confirmDate: () => {
      (o.value ? TM(L.value) : mr(L.value)) && C(!0), x("confirm"), s();
    },
    currentValue: L,
    emitDate: x,
    handleChange: me,
    handleInput: (k) => {
      b.value = k.target.value;
    },
    handleKeydown: (k) => {
      const G = k.keyCode;
      G === Z.tab || G === Z.enter ? (me(), b.value = null, s()) : (G === Z.arrowUp || G === Z.arrowDown) && (ae(), k.stopPropagation(), k.preventDefault());
    },
    initCurrentValue: v,
    onModelValueChange: (k) => {
      o.value ? L.value = [null, null] : L.value = R(k) ? we(k) : null;
    },
    parse: ie,
    selectDate: W,
    selectEndDate: te,
    selectEndTime: re,
    selectStartDate: oe,
    selectStartTime: ue,
    selectTime: z,
    stringify: D,
    text: w,
    updateDate: C,
    userInput: b
  };
}
const IM = {
  en: {
    days: [
      {
        shortName: "Sun",
        longName: "Sunday"
      },
      {
        shortName: "Mon",
        longName: "Monday"
      },
      {
        shortName: "Tue",
        longName: "Tuesday"
      },
      {
        shortName: "Wed",
        longName: "Wednesday"
      },
      {
        shortName: "Thu",
        longName: "Thursday"
      },
      {
        shortName: "Fri",
        longName: "Friday"
      },
      {
        shortName: "Sat",
        longName: "Saturday"
      }
    ],
    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    pickers: ["next 7 days", "next 30 days", "previous 7 days", "previous 30 days"],
    placeholder: {
      date: "Enter date in format DD.MM.YYYY",
      time: "Enter time in format HH:MM",
      dateRange: "Select Date Range",
      regionDate: "Date picker",
      regionTime: "Time picker"
    },
    today: "today",
    buttons: {
      lastYear: "Last year",
      lastYears: "Last 10 years",
      nextYear: "Next year",
      nextYears: "Next 10 years",
      lastMonth: "Last month",
      nextMonth: "Next month",
      monthsView: "Show detailed month view",
      toDaysView: "Switch to the day selection",
      toMonthsView: "Switch to the month selection",
      toYearsView: "switch to the selection of the years"
    },
    hours: "Hours",
    minutes: "Minutes",
    seconds: "Seconds",
    headerYears: (e, t) => `${e} to ${t}`
  },
  ru: {
    days: [
      {
        shortName: "Вс",
        longName: "Воскресенье"
      },
      {
        shortName: "Пн",
        longName: "Понедельник"
      },
      {
        shortName: "Вт",
        longName: "Вторник"
      },
      {
        shortName: "Ср",
        longName: "Среда"
      },
      {
        shortName: "Чт",
        longName: "Четверг"
      },
      {
        shortName: "Пт",
        longName: "Пятница"
      },
      {
        shortName: "Сб",
        longName: "Суббота"
      }
    ],
    months: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
    pickers: ["след. 7 дней", "след. 30 дней", "прош. 7 дней", "прош. 30 дней"],
    placeholder: {
      date: "Введите дату в формате ДД.ММ.ГГГГ",
      time: "Enter время in format ЧЧ.ММ",
      dateRange: "Выберите период",
      regionDate: "Выбор даты",
      regionTime: "Выбор времени"
    },
    today: "Сегодня",
    buttons: {
      lastYear: "Предыдущий год",
      lastYears: "Предыдущие 10 лет",
      nextYear: "Следующий год",
      nextYears: "Следующие 10 лет",
      lastMonth: "Предыдущий месяц",
      nextMonth: "Следующий месяц",
      toDaysView: "Перейти к выбору дня",
      toMonthsView: "Перейти к выбору месяца",
      toYearsView: "Перейти к выбору года"
    },
    hours: "Часы",
    minutes: "Минуты",
    seconds: "Секунды",
    headerYears: (e, t) => `с ${e} по ${t}`
  },
  de: {
    days: [
      {
        shortName: "So",
        longName: "Sontag"
      },
      {
        shortName: "Mo",
        longName: "Montag"
      },
      {
        shortName: "Di",
        longName: "Dienstag"
      },
      {
        shortName: "Mi",
        longName: "Mittwoch"
      },
      {
        shortName: "Do",
        longName: "Donnerstag"
      },
      {
        shortName: "Fr",
        longName: "Freitag"
      },
      {
        shortName: "Sa",
        longName: "Samstag"
      }
    ],
    months: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
    pickers: ["nächste 7 Tage", "nächste 30 Tage", "vorige 7 Tage", "vorige 30 Tage"],
    placeholder: {
      date: "Datum im Format TT.MM.JJJJ eingeben",
      time: "Zeit im Format HH.MM eingeben",
      dateRange: "Zeitraum auswählen",
      regionDate: "Datumsauswahl",
      regionTime: "Zeitauswahl"
    },
    today: "Heute",
    buttons: {
      lastYear: "Voriges Jahr",
      lastYears: "Vorige 10 Jahre",
      nextYear: "Nächstes Jahr",
      nextYears: "Nächste 10 Jahre",
      lastMonth: "Voriger Monat",
      nextMonth: "Nächster Monat",
      toDaysView: "Zur Auswahl der Tage wechseln",
      toMonthsView: "Zur Auswahl der Monate wechseln",
      toYearsView: "Zur Auswahl der Jahre wechseln"
    },
    hours: "Stunden",
    minutes: "Minuten",
    seconds: "Sekunden",
    headerYears: (e, t) => `${e} bis ${t}`
  }
};
function gM(e) {
  const t = f(e, "languages"), n = f(e, "lang"), r = _(() => ({
    ...IM,
    ...t.value
  }));
  return {
    currentLanguage: _(() => r.value[n.value])
  };
}
function yM(e, {
  calendarRef: t = B(void 0),
  focusByCloseRef: n = B(void 0),
  inputRef: r = B(void 0)
}) {
  const s = f(e, "placement"), l = f(e, "disabled"), o = B(void 0), u = B(void 0), h = () => {
    document.addEventListener("click", b);
  }, A = () => {
    document.removeEventListener("click", b);
  }, E = () => {
    !o.value && !l.value && r.value && t.value && (o.value = bl(
      r.value,
      t.value,
      () => {
        t.value && r.value && gl(
          r.value,
          t.value,
          {
            placement: s.value,
            middleware: [
              Il(),
              vl({ limiter: mu() })
            ]
          }
        ).then(({ x: v, y: I }) => {
          Object.assign(t.value.style, {
            left: `${v}px`,
            top: `${I}px`
          });
        });
      }
    ), setTimeout(() => {
      h();
    }, 300));
  }, p = () => {
    n.value && n.value.focus && n.value.focus();
  }, T = () => {
    o.value && (o.value(), o.value = void 0);
  }, m = (v) => {
    A(), T(), u.value = !1, v && p();
  }, L = () => {
    u.value = !0;
  };
  function b(v) {
    t.value.contains(v.target) || m();
  }
  return dp(() => {
    T(), A();
  }), {
    closePopover: m,
    destroyPopover: T,
    initCalendar: L,
    openPopoverWithFloatingUi: E,
    popupVisible: u,
    setCloseFocus: p
  };
}
function RM() {
  const e = B(void 0), t = B(void 0), n = B(void 0), r = B(void 0), s = B(void 0);
  return {
    calendarRef: e,
    calendarPanelRef: t,
    calendarPanel2Ref: n,
    focusByCloseRef: s,
    inputRef: r
  };
}
const fd = {
  date: {
    value2date: (e) => mr(e) ? new Date(e) : null,
    date2value: (e) => e
  },
  timestamp: {
    value2date: (e) => mr(e) ? new Date(e) : null,
    date2value: (e) => e && new Date(e).getTime()
  }
}, tu = {
  name: "ADatepicker",
  mixins: [
    af
  ],
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    appendToBody: {
      type: Boolean,
      default: !1
    },
    clearable: {
      type: Boolean,
      default: !0
    },
    confirm: {
      type: Boolean,
      default: !1
    },
    confirmText: {
      type: String,
      default: "OK"
    },
    dateFormat: {
      type: String,
      // format the time header and date tooltip
      default: void 0
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    editable: {
      type: Boolean,
      default: !0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    firstDayOfWeek: {
      type: Number,
      required: !1,
      default: 1,
      validator: (e) => e >= 1 && e <= 7
    },
    format: {
      type: [String, Object],
      default: "DD.MM.YYYY"
    },
    formatSave: {
      type: String,
      required: !1,
      default: "YYYY-MM-DD"
    },
    iconDay: {
      type: [Number, String],
      default: void 0
    },
    inputAttr: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: "pux_datepicker__input"
    },
    inputName: {
      type: String,
      default: "date"
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !1
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    lang: {
      type: String,
      default: "de",
      required: !1
    },
    languages: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: void 0
    },
    placeholder: {
      type: String,
      default: null
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => yr.indexOf(e) !== -1
    },
    popupStyle: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    range: {
      type: Boolean,
      default: !1
    },
    rangeSeparator: {
      type: String,
      default: "~"
    },
    shortcuts: {
      type: [Boolean, Array],
      default: !0
    },
    type: {
      type: String,
      default: "date"
      // ["date", "datetime"] zendy added "month", "year", mxie added "time"
    },
    valueType: {
      default: "format",
      validator: function(e) {
        return ["timestamp", "format", "date"].indexOf(e) !== -1 || Qo(e);
      }
    },
    width: {
      type: [String, Number],
      default: null
    }
  },
  emits: [
    "blur",
    "change",
    "clear",
    "confirm",
    "focus",
    "input",
    "inputError",
    "changeCalendarMonth",
    "changeCalendarYear"
  ],
  setup(e, t) {
    const n = f(e, "modelValue"), {
      attributesToExcludeFromRender: r
    } = Nt(e), {
      calendarRef: s,
      calendarPanelRef: l,
      calendarPanel2Ref: o,
      focusByCloseRef: u,
      inputRef: h
    } = RM(), {
      componentStyleHide: A
    } = Wt(e), {
      ariaDescribedbyLocal: E,
      changeModel: p,
      clearModel: T,
      errorsId: m,
      helpTextId: L,
      htmlIdLocal: b,
      isErrors: v,
      isModel: I,
      onBlur: y,
      onFocus: R
    } = Zt(e, t), {
      isAutofill: D
    } = Gc({ inputRef: h }), {
      currentLanguage: w
    } = gM(e), {
      closePopover: M,
      destroyPopover: P,
      initCalendar: x,
      openPopoverWithFloatingUi: C,
      popupVisible: q,
      setCloseFocus: W
    } = yM(e, {
      calendarRef: s,
      focusByCloseRef: u,
      inputRef: h
    }), {
      ariaExpandedForCalendar: z,
      ariaHiddenForCalendar: oe,
      idForCalendar: te,
      idForPanel: ue,
      idsForPanelRange: re,
      innerPlaceholder: ie,
      innerType: Ae,
      widthLocal: we
    } = bM(e, {
      currentLanguage: w,
      popupVisible: q
    }), {
      clearDate: me,
      confirmDate: ae,
      currentValue: Oe,
      emitDate: ve,
      handleChange: Ke,
      handleInput: he,
      handleKeydown: k,
      initCurrentValue: G,
      onModelValueChange: ee,
      parse: de,
      selectDate: Ne,
      selectEndDate: Fe,
      selectEndTime: Ue,
      selectStartDate: Xe,
      selectStartTime: Ie,
      selectTime: Ge,
      stringify: ft,
      text: qe,
      updateDate: at,
      userInput: _t
    } = vM(e, t, {
      calendarPanelRef: l,
      changeModel: p,
      closePopover: M,
      setCloseFocus: W
    }), bt = () => {
      h.value && h.value.blur();
    };
    return G(), tt(n, ee, {
      immediate: !0
    }), {
      ariaDescribedbyLocal: E,
      ariaExpandedForCalendar: z,
      ariaHiddenForCalendar: oe,
      attributesToExcludeFromRender: r,
      blur: bt,
      calendarPanel2Ref: o,
      calendarPanelRef: l,
      calendarRef: s,
      changeModel: p,
      clearDate: me,
      clearModel: T,
      parse: de,
      closePopover: M,
      componentStyleHide: A,
      confirmDate: ae,
      stringify: ft,
      currentLanguage: w,
      currentValue: Oe,
      destroyPopover: P,
      emitDate: ve,
      errorsId: m,
      text: qe,
      focusByCloseRef: u,
      handleChange: Ke,
      handleInput: he,
      handleKeydown: k,
      helpTextId: L,
      htmlIdLocal: b,
      idForCalendar: te,
      idForPanel: ue,
      idsForPanelRange: re,
      initCalendar: x,
      innerPlaceholder: ie,
      innerType: Ae,
      inputRef: h,
      isAutofill: D,
      isErrors: v,
      isModel: I,
      onBlur: y,
      onFocus: R,
      openPopoverWithFloatingUi: C,
      popupVisible: q,
      selectDate: Ne,
      selectEndDate: Fe,
      selectEndTime: Ue,
      selectStartDate: Xe,
      selectStartTime: Ie,
      selectTime: Ge,
      setCloseFocus: W,
      updateDate: at,
      userInput: _t,
      widthLocal: we
    };
  },
  computed: {
    transform() {
      const e = this.valueType;
      return Qo(e) ? { ...fd.date, ...e } : e === "format" ? {
        value2date: this.parse.bind(this),
        date2value: this.stringify.bind(this)
      } : fd[e] || fd.date;
    },
    showClearIcon() {
      return !this.disabled && this.clearable && this.text;
    },
    innerShortcuts() {
      if (Array.isArray(this.shortcuts))
        return this.shortcuts;
      if (this.shortcuts === !1)
        return [];
      const e = this.currentLanguage.pickers;
      return [
        {
          text: e[0],
          onClick(n) {
            n.currentValue = [/* @__PURE__ */ new Date(), new Date(Date.now() + 3600 * 1e3 * 24 * 7)], n.updateDate(!0);
          }
        },
        {
          text: e[1],
          onClick(n) {
            n.currentValue = [/* @__PURE__ */ new Date(), new Date(Date.now() + 3600 * 1e3 * 24 * 30)], n.updateDate(!0);
          }
        },
        {
          text: e[2],
          onClick(n) {
            n.currentValue = [new Date(Date.now() - 3600 * 1e3 * 24 * 7), /* @__PURE__ */ new Date()], n.updateDate(!0);
          }
        },
        {
          text: e[3],
          onClick(n) {
            n.currentValue = [new Date(Date.now() - 3600 * 1e3 * 24 * 30), /* @__PURE__ */ new Date()], n.updateDate(!0);
          }
        }
      ];
    },
    innerDateFormat() {
      return this.dateFormat ? this.dateFormat : typeof this.format != "string" ? "YYYY-MM-DD" : this.innerType === "date" ? this.format : this.format.replace(/[Hh]+.*[msSaAZ]|\[.*?\]/g, "").trim() || "YYYY-MM-DD";
    }
  },
  watch: {
    popupVisible(e) {
      e ? this.initCalendar() : (this.userInput = null, this.blur());
    }
  },
  methods: {
    isValidValue(e) {
      const { value2date: t } = this.transform;
      return mr(t(e));
    },
    isValidRangeValue(e) {
      const { value2date: t } = this.transform;
      return Array.isArray(e) && e.length === 2 && this.isValidValue(e[0]) && this.isValidValue(e[1]) && t(e[1]).getTime() >= t(e[0]).getTime();
    },
    selectRange(e) {
      typeof e.onClick == "function" ? e.onClick(this) !== !1 && this.closePopover() : (this.currentValue = [new Date(e.start), new Date(e.end)], this.updateDate(!0), this.closePopover());
    },
    handleBlur(e) {
      this.$emit("blur", e);
    },
    handleFocus(e) {
      this.initCalendar(), this.$emit("focus", e);
    }
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      class: "a_form_element__container",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel || this.isAutofill
        }]
      }, [
        this.label && c(kt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: this.isLabelFloat,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            class: ["pux_datepicker", {
              pux_datepicker_range: this.range,
              disabled: this.disabled
            }],
            style: { width: this.widthLocal },
            onMousedown: this.initCalendar,
            onTouchstart: this.initCalendar
          }, [
            c("div", {
              class: "pux_datepicker__input_wrapper",
              role: "application"
            }, [
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                class: [
                  "a_form_control pux_datepicker__input",
                  this.inputClass,
                  {
                    a_form_control_invalid: this.isErrors
                  }
                ],
                name: this.inputName,
                type: "text",
                autocomplete: "off",
                disabled: this.disabled,
                readonly: !this.editable,
                value: this.text,
                placeholder: this.innerPlaceholder,
                ariaHaspopup: !0,
                "aria-owns": this.idForCalendar,
                ...this.inputAttr,
                onKeydown: this.handleKeydown,
                onFocus: this.handleFocus,
                onBlur: this.handleBlur,
                onInput: this.handleInput,
                onChange: this.handleChange
              }),
              this.showClearIcon && c("span", {
                class: "pux_datepicker__input_wrapper__append pux_datepicker__input_wrapper__clear_wrapper",
                ariaHidden: !0,
                onMousedown: this.clearDate
              }, [
                c("i", {
                  class: "pux_datepicker__input__icon pux_datepicker__input__clear_icon"
                })
              ]),
              c("span", {
                class: "pux_datepicker__input_wrapper__append"
              }, [
                c(LM)
              ])
            ]),
            c(ia, {
              to: "body"
            }, [
              this.popupVisible && xt(c("div", {
                ref: "calendarRef",
                id: this.idForCalendar,
                class: "pux_datepicker__popup",
                ariaHidden: this.ariaHiddenForCalendar,
                ariaExpanded: this.ariaExpandedForCalendar,
                style: this.popupStyle
              }, [
                !!(this.range && this.innerShortcuts.length) && c("div", {
                  class: "pux_datepicker__shortcuts_wrapper"
                }, [
                  this.innerShortcuts.map((e, t) => c("button", {
                    key: t,
                    class: "pux_datepicker__shortcuts_wrapper__shortcuts",
                    type: "button",
                    onClick: () => this.selectRange(e)
                  }, e.text))
                ]),
                this.range ? c("div", {
                  class: "pux_datepicker__range_wrapper"
                }, [
                  c(cd, {
                    ref: "calendarPanelRef",
                    id: this.idsForPanelRange[0],
                    style: "box-shadow: 1px 0 rgba(0, 0, 0, .1);",
                    index: 0,
                    type: this.innerType,
                    dateFormat: this.innerDateFormat,
                    value: this.currentValue[0],
                    endAt: this.currentValue[1],
                    startAt: null,
                    visible: this.popupVisible,
                    currentLanguage: this.currentLanguage,
                    firstDayOfWeek: this.firstDayOfWeek,
                    onSelectDate: this.selectStartDate,
                    onSelectTime: this.selectStartTime,
                    onClosePopup: this.closePopover
                  }),
                  c(cd, {
                    ref: "calendarPanel2Ref",
                    id: this.idsForPanelRange[1],
                    index: 1,
                    type: this.innerType,
                    dateFormat: this.innerDateFormat,
                    value: this.currentValue[1],
                    endAt: null,
                    startAt: this.currentValue[0],
                    visible: this.popupVisible,
                    currentLanguage: this.currentLanguage,
                    firstDayOfWeek: this.firstDayOfWeek,
                    onSelectDate: this.selectEndDate,
                    onSelectTime: this.selectEndTime,
                    onClosePopup: this.closePopover
                  })
                ]) : c(cd, {
                  ref: "calendarPanelRef",
                  id: this.idForPanel,
                  index: -1,
                  type: this.innerType,
                  dateFormat: this.innerDateFormat,
                  value: this.currentValue,
                  visible: this.popupVisible,
                  currentLanguage: this.currentLanguage,
                  firstDayOfWeek: this.firstDayOfWeek,
                  onSelectDate: this.selectDate,
                  onSelectTime: this.selectTime,
                  onClosePopup: this.closePopover
                }),
                this.confirm && c("div", {
                  class: "pux_datepicker__footer"
                }, [
                  c("button", {
                    class: "pux_datepicker__footer__btn pux_datepicker__footer__btn_confirm",
                    type: "button",
                    onClick: this.confirmDate
                  }, this.confirmText)
                ])
              ]), [
                [_l, {
                  mounted: this.openPopoverWithFloatingUi
                }]
              ])
            ]),
            c("div", {
              ref: "focusByCloseRef",
              ariaHidden: !0,
              tabindex: -1
            })
          ])
          /*
           * this.isClearButtonLocal && h(AFormElementBtnClear, {
           *   disabled: this.disabled,
           *   clearButtonClass: this.clearButtonClass,
           *   onClear: this.clearModel,
           * }),
           */
        ]),
        c(Xt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(Yt, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function OM({
  idFrom: e = _(() => "")
}) {
  return {
    setFocusToFromInput: () => {
      const n = document.getElementById(e.value);
      n && n.focus();
    }
  };
}
function CM({
  htmlIdLocal: e = _(() => "")
}) {
  const t = _(() => `${e.value}_from`), n = _(() => `${e.value}_until`);
  return {
    idFrom: t,
    idUntil: n
  };
}
function NM(e, {
  htmlIdLocal: t = _(() => ""),
  idFrom: n = _(() => ""),
  idUntil: r = _(() => "")
}) {
  const s = f(e, "inputAttributes"), l = f(e, "inputAttributesFrom"), o = f(e, "inputAttributesUntil"), u = _(() => `${t.value}_label`), h = _(() => ({
    "aria-labelledby": `${u.value} ${n.value}`,
    ...s.value,
    ...l.value
  })), A = _(() => ({
    "aria-labelledby": `${u.value} ${r.value}`,
    ...s.value,
    ...o.value
  }));
  return {
    inputAttributesFromLocal: h,
    inputAttributesUntilLocal: A
  };
}
function DM(e, {
  changeModel: t = () => ({})
}) {
  const n = f(e, "keyFrom"), r = f(e, "keyUntil"), s = f(e, "modelValue"), l = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[n.value];
  }), o = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[r.value];
  });
  return {
    changeModelFrom: (A) => {
      const E = pe(s.value) || {};
      E[n.value] = A, t({ model: E });
    },
    changeModelUntil: (A) => {
      const E = pe(s.value) || {};
      E[r.value] = A, t({ model: E });
    },
    modelValueFrom: l,
    modelValueUntil: o
  };
}
function sf({
  htmlIdLocal: e = _(() => ""),
  clickLabel: t = () => {
  }
}) {
  const n = _(() => WT(e.value)), r = () => {
    t();
  };
  return {
    destroyEventBusClickLabel: () => {
      Rt.$off(n.value, r);
    },
    initEventBusClickLabel: () => {
      Rt.$on(n.value, r);
    }
  };
}
const BM = {
  name: "ADatepickerRange",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    appendToBody: {
      type: Boolean,
      default: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearable: {
      type: Boolean,
      default: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    disabledFrom: {
      type: Boolean,
      required: !1
    },
    disabledUntil: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    firstDayOfWeek: {
      type: Number,
      required: !1,
      default: 1,
      validator: (e) => e >= 1 && e <= 7
    },
    format: {
      type: [String, Object],
      default: "DD.MM.YYYY"
    },
    formatSave: {
      type: String,
      required: !1,
      default: "YYYY-MM-DD"
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconDay: {
      type: [Number, String],
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_datepicker_range_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesFrom: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesUntil: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: "pux_datepicker__input"
    },
    inputName: {
      type: String,
      default: "date"
    },
    inputWidth: {
      type: [Number, String],
      required: !1,
      default: 270
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyFrom: {
      tpe: String,
      required: !1,
      default: "from"
    },
    keyUntil: {
      tpe: String,
      required: !1,
      default: "until"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelFrom: {
      type: String,
      required: !1,
      default: "_A_DATEPICKER_RANGE_FROM_"
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    labelUntil: {
      type: String,
      required: !1,
      default: "_A_DATEPICKER_RANGE_UNTIL_"
    },
    lang: {
      type: String,
      default: "de",
      required: !1
    },
    modelUndefined: {
      required: !1,
      default: void 0
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholderFrom: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholderUntil: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => yr.indexOf(e) !== -1
    },
    popupStyle: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    shortcuts: {
      type: [Boolean, Array],
      default: !0
    },
    type: {
      type: String,
      required: !1,
      default: "dateRange"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      componentStyleHide: r
    } = Wt(e), {
      changeModel: s,
      errorsId: l,
      helpTextId: o,
      htmlIdLocal: u,
      isErrors: h
    } = Zt(e, t), {
      changeModelFrom: A,
      changeModelUntil: E,
      modelValueFrom: p,
      modelValueUntil: T
    } = DM(e, {
      changeModel: s
    }), {
      idFrom: m,
      idUntil: L
    } = CM({
      htmlIdLocal: u
    }), {
      inputAttributesFromLocal: b,
      inputAttributesUntilLocal: v
    } = NM(e, {
      htmlIdLocal: u,
      idFrom: m,
      idUntil: L
    }), {
      setFocusToFromInput: I
    } = OM({
      idFrom: m
    }), {
      destroyEventBusClickLabel: y,
      initEventBusClickLabel: R
    } = sf({
      htmlIdLocal: u,
      clickLabel: I
    });
    return R(), Ct(() => {
      y();
    }), {
      attributesToExcludeFromRender: n,
      changeModelFrom: A,
      changeModelUntil: E,
      componentStyleHide: r,
      errorsId: l,
      helpTextId: o,
      idFrom: m,
      idUntil: L,
      inputAttributesFromLocal: b,
      inputAttributesUntilLocal: v,
      isErrors: h,
      modelValueFrom: p,
      modelValueUntil: T
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      class: "a_datepicker_range",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_invalid: this.isErrors
        }]
      }, [
        this.label && c(kt, {
          id: this.idFrom,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: !1,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_datepicker_range__content"
        }, [
          c("div", {
            class: "a_datepicker_range__group a_datepicker_range__group_min"
          }, [
            c(kt, {
              id: this.idFrom,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_datepicker_range__label a_datepicker_range__label_min",
              isLabelFloat: !1,
              label: this.labelFrom,
              isError: this.isErrors
            }),
            c(tu, {
              id: this.idFrom,
              ref: "from",
              alwaysTranslate: this.alwaysTranslate,
              inputAttr: this.inputAttributesFromLocal,
              modelValue: this.modelValueFrom,
              formatSave: this.formatSave,
              firstDayOfWeek: this.firstDayOfWeek,
              appendToBody: this.appendToBody,
              popupStyle: this.popupStyle,
              iconDay: this.iconDay,
              inputName: this.inputName,
              placement: this.placement,
              clearable: this.clearable,
              shortcuts: this.shortcuts,
              lang: this.lang,
              inputClass: this.inputClass,
              placeholder: this.placeholderFrom,
              disabled: this.disabled || this.disabledFrom,
              width: this.inputWidth,
              format: this.format,
              type: "date",
              onChange: this.changeModelFrom
            })
          ]),
          c("div", {
            class: "a_datepicker_range__group"
          }, [
            c(kt, {
              id: this.idUntil,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_datepicker_range__label a_datepicker_range__label_max",
              isLabelFloat: !1,
              label: this.labelUntil,
              isError: this.isErrors
            }),
            c(tu, {
              id: this.idUntil,
              ref: "until",
              alwaysTranslate: this.alwaysTranslate,
              modelValue: this.modelValueUntil,
              formatSave: this.formatSave,
              firstDayOfWeek: this.firstDayOfWeek,
              appendToBody: this.appendToBody,
              popupStyle: this.popupStyle,
              iconDay: this.iconDay,
              inputName: this.inputName,
              placement: this.placement,
              clearable: this.clearable,
              shortcuts: this.shortcuts,
              lang: this.lang,
              inputClass: this.inputClass,
              placeholder: this.placeholderUntil,
              disabled: this.disabled || this.disabledUntil,
              width: this.inputWidth,
              format: this.format,
              type: "date",
              inputAttr: this.inputAttributesUntilLocal,
              onChange: this.changeModelUntil
            })
          ]),
          c(Xt, {
            alwaysTranslate: this.alwaysTranslate,
            class: "a_datepicker_range__help_text",
            id: this.helpTextId,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(Yt, {
            id: this.errorsId,
            alwaysTranslate: this.alwaysTranslate,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
};
function wM(e, {
  isOpen: t = B(!1)
}) {
  const n = f(e, "btnIconLeftLess"), r = f(e, "btnIconLeftMore"), s = f(e, "btnIconRightLess"), l = f(e, "btnIconRightMore"), o = f(e, "btnTextLess"), u = f(e, "btnTextMore"), h = f(e, "btnTitleLess"), A = f(e, "btnTitleMore"), E = f(e, "showLess"), p = B(void 0), T = _(() => t.value ? o.value : u.value), m = _(() => t.value ? h.value : A.value), L = _(() => t.value ? n.value : r.value), b = _(() => t.value ? s.value : l.value), v = _(() => t.value ? E.value : !0);
  return {
    btnIconLeft: L,
    btnIconRight: b,
    btnText: T,
    btnTitle: m,
    buttonRef: p,
    isButtonVisible: v
  };
}
function PM(e) {
  const t = f(e, "isOpenDefault"), n = B(void 0);
  return {
    initIsOpen: () => {
      n.value = t.value;
    },
    isOpen: n
  };
}
function FM(e, {
  isOpen: t = B(!1)
}) {
  const n = f(e, "htmlLess"), r = f(e, "htmlMore"), s = f(e, "safeHtmlLess"), l = f(e, "safeHtmlMore"), o = f(e, "textLess"), u = f(e, "textMore"), h = _(() => t.value ? r.value : n.value), A = _(() => t.value ? l.value : s.value), E = _(() => t.value ? u.value : o.value), p = _(() => !!(E.value || A.value || h.value));
  return {
    htmlLocal: h,
    isTextOrHtmlVisible: p,
    safeHtmlLocal: A,
    textLocal: E
  };
}
const xM = [
  "a[href]:not([tabindex='-1'])",
  "button:not([disabled]):not([tabindex='-1'])",
  "area[href]:not([tabindex='-1'])",
  "input:not([disabled]):not([tabindex='-1'])",
  "select:not([disabled]):not([tabindex='-1'])",
  "textarea:not([disabled]):not([tabindex='-1'])",
  "iframe:not([tabindex='-1'])",
  "[tabindex]:not([tabindex='-1'])",
  "[contentEditable=true]:not([tabindex='-1'])"
], Ei = xM.join(", ");
function ide({ element: e, isMiddleOfScreen: t = !0, behavior: n = "smooth" }) {
  t ? window.scroll({
    top: e.offsetTop - window.innerHeight / 2,
    behavior: n
  }) : e.scrollIntoView();
}
function aa({ element: e, selector: t }) {
  const n = e || document.querySelector(t);
  n && (n.hasAttribute("tabindex") ? n.focus() : (n.setAttribute("tabindex", "-1"), n.focus(), n.removeAttribute("tabindex")));
}
function bS(e) {
  const t = e.getBoundingClientRect();
  return t.width > 0 && t.height > 0;
}
function MM({ element: e } = {}) {
  const t = document.querySelectorAll(Ei), n = e || document.activeElement, r = Array.from(t).indexOf(n);
  if (r !== -1) {
    let s = r + 1;
    s >= t.length && (s = 0);
    let l = t[s];
    for (; s < t.length && !bS(l); )
      s++, s >= t.length && (s = 0), l = t[s];
    s < t.length && l.focus();
  }
}
function $M({ element: e } = {}) {
  const t = document.querySelectorAll(Ei), n = e || document.activeElement, r = Array.from(t).indexOf(n);
  if (r !== -1) {
    let s = r - 1;
    s < 0 && (s = t.length - 1);
    let l = t[s];
    for (; s >= 0 && !bS(l); )
      s--, s < 0 && (s = t.length - 1), l = t[s];
    s >= 0 && l.focus();
  }
}
function lde({ element: e }) {
  if (e.id)
    return `#${e.id}`;
  const t = [];
  for (; e; ) {
    const n = e.tagName;
    n === "BODY" || n === "HTML" ? t.unshift(n) : t.unshift(
      e.className ? `${n}.${e.className.replace(/\s+/g, ".")}` : n
    );
    const r = parent.children;
    r != null && r.length && r.length > 1 && (t[0] += `:nth-child(${Array.prototype.indexOf.call(r, e) + 1})`), e = e.parentElement;
  }
  return t.join(" > ");
}
function qM(e, { emit: t }, {
  isOpen: n = B(!1)
}) {
  const r = B(void 0);
  return {
    containerRef: r,
    toggleButton: () => {
      n.value = !n.value, t("toggle", { isOpen: n.value }), n.value && !window.isScrollDisabled && au().then(
        () => aa({
          element: r.value
        })
      );
    }
  };
}
const ode = {
  name: "ADisclosure",
  inheritAttrs: !0,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    btnAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link a_p_0"
    },
    btnIconLeftLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconLeftMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnId: {
      type: String,
      required: !1,
      default: void 0
    },
    btnParentClass: {
      type: String,
      required: !1,
      default: "a_text_center"
    },
    btnTextLess: {
      type: String,
      required: !1,
      default: "_A_DISCLOSURE_LESS_"
    },
    btnTextMore: {
      type: String,
      required: !1,
      default: "_A_DISCLOSURE_MORE_"
    },
    btnTitleLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitleMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitlePlacement: {
      type: String,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    htmlLess: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlMore: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_disclosure_")
    },
    isBtnTitleHtml: {
      type: Boolean,
      required: !1
    },
    isOpenDefault: {
      type: Boolean,
      required: !1,
      default: !1
    },
    safeHtmlLess: {
      type: String,
      required: !1,
      default: void 0
    },
    safeHtmlMore: {
      type: String,
      required: !1,
      default: void 0
    },
    showLess: {
      type: Boolean,
      required: !1,
      default: !0
    },
    textLess: {
      type: String,
      required: !1,
      default: void 0
    },
    textMore: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      initIsOpen: r,
      isOpen: s
    } = PM(e), {
      htmlLocal: l,
      isTextOrHtmlVisible: o,
      safeHtmlLocal: u,
      textLocal: h
    } = FM(e, {
      isOpen: s
    }), {
      containerRef: A,
      toggleButton: E
    } = qM(e, t, {
      isOpen: s
    }), {
      btnIconLeft: p,
      btnIconRight: T,
      btnText: m,
      btnTitle: L,
      buttonRef: b,
      isButtonVisible: v
    } = wM(e, {
      isOpen: s
    });
    return r(), n({
      buttonRef: b,
      containerRef: A,
      isOpen: s,
      toggleButton: E
    }), {
      btnIconLeft: p,
      btnIconRight: T,
      btnText: m,
      btnTitle: L,
      buttonRef: b,
      containerRef: A,
      htmlLocal: l,
      isButtonVisible: v,
      isOpen: s,
      isTextOrHtmlVisible: o,
      safeHtmlLocal: u,
      textLocal: h,
      toggleButton: E
    };
  },
  render() {
    return c("div", {
      class: [
        "a_show_more",
        {
          a_show_more_open: this.isOpen
        }
      ]
    }, [
      c("div", {
        class: "a_show_more__wrapper"
      }, [
        c("div", {
          ref: "containerRef",
          id: this.id,
          ariaExpanded: this.isOpen,
          ...this.$attrs
        }, [
          this.isTextOrHtmlVisible && c(Te, {
            alwaysTranslate: this.alwaysTranslate,
            html: this.htmlLocal,
            safeHtml: this.safeHtmlLocal,
            tag: "div",
            text: this.textLocal
          }),
          this.isOpen ? this.$slots.more && this.$slots.more({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          }) : this.$slots.less && this.$slots.less({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          })
        ])
      ]),
      this.isButtonVisible && c("div", {
        class: this.btnParentClass
      }, [
        c(ye, {
          ref: "buttonRef",
          id: this.btnId,
          alwaysTranslate: this.alwaysTranslate,
          "aria-controls": this.id,
          class: [
            "a_show_more__button",
            this.btnClass
          ],
          disabled: this.disabled,
          iconLeft: this.btnIconLeft,
          iconRight: this.btnIconRight,
          isTitleHtml: this.isBtnTitleHtml,
          text: this.btnText,
          title: this.btnTitle,
          titlePlacement: this.btnTitlePlacement,
          type: "button",
          ...this.btnAttributes,
          onClick: this.toggleButton
        }, () => this.$slots.button && this.$slots.button({
          isButtonVisible: this.isButtonVisible,
          isOpen: this.isOpen
        }))
      ])
    ]);
  }
}, wu = {
  name: "ALink",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    href: {
      type: String,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_link_")
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    target: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => yr.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => ot(e) ? e === "auto" : Fa(e)
    },
    to: {
      type: [Object, String],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      clickEmit: n
    } = MT(e, t);
    return {
      clickEmit: n
    };
  },
  render() {
    return c(ye, {
      ...this.$attrs,
      ...this.$props,
      type: "link",
      onClick: this.clickEmit
    }, this.$slots);
  }
};
function kM(e) {
  const t = f(e, "action");
  return {
    attributesAction: _(() => {
      const r = {
        ...t.value,
        isHiddenCallback: void 0,
        classReplace: void 0
      };
      return t.value.classReplace ? r.class = t.value.classReplace : ot(r.class) ? r.class += " a_dropdown__item" : nt(r.class) ? r.class.a_dropdown__item = !0 : r.class = "a_dropdown__item", r.type === "link" && (r.type = void 0), r;
    })
  };
}
const UM = {
  name: "ADropdownAction",
  props: {
    action: {
      type: Object,
      required: !0
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      attributesAction: t
    } = kM(e);
    return {
      attributesAction: t
    };
  },
  render() {
    return this.action.type === "button" ? c("li", {
      class: this.action.liClass
    }, [
      c(rt, {
        ...this.attributesAction,
        alwaysTranslate: this.alwaysTranslate,
        isHidden: void 0,
        callback: void 0,
        classButton: void 0,
        classExtra: void 0,
        isConfirm: void 0,
        callbackLocal: void 0,
        onClick: this.action.callback
      })
    ]) : this.action.type === "divider" ? c("li", {
      class: [
        "a_dropdown__divider",
        this.action.liClass
      ]
    }) : this.action.type === "link" ? c("li", {
      class: this.action.liClass
    }, [
      c(wu, {
        ...this.attributesAction,
        alwaysTranslate: this.alwaysTranslate,
        classButton: void 0,
        classExtra: void 0,
        isHidden: void 0,
        isConfirm: void 0,
        callbackLocal: void 0
      })
    ]) : this.action.type === "template" && this.action.slotName && this.$slots[this.action.slotName] ? this.$slots[this.action.slotName]({
      action: this.action
    }) : null;
  }
};
function vS({ actions: e }) {
  const t = Pt(e, (s) => !s.isHidden), n = [];
  Y(t, (s) => {
    (s.type !== "divider" || n.length > 0 && fi(n).type !== "divider") && n.push(s);
  });
  const r = fi(n);
  return r && r.type === "divider" && n.pop(), n;
}
function Mo({ class1: e, class2: t, defaultValue: n = void 0 }) {
  return e ? t ? `${e} ${t}` : e : t || n;
}
function HM(e) {
  const t = f(e, "actions"), n = _(() => vS({
    actions: t.value
  })), r = _(() => n.value.length > 0);
  return {
    actionsFiltered: n,
    hasActions: r
  };
}
const Na = B({});
function lf({ id: e, idRef: t } = {}) {
  const n = _(() => hd(t ? { id: t.value } : { id: e })), r = _(() => {
    let s = !1;
    return cn(Na.value) || Y(Na.value, (l) => {
      if (l)
        return s = !0, !1;
    }), s;
  });
  return {
    closePopup: jd,
    isCurrentPopupOpen: hd,
    isOnePopupOpen: r,
    isPopupOpen: n,
    openPopup: Kd,
    popupOpenIds: Na,
    togglePopup: VM
  };
}
function hd({ id: e }) {
  return !!Na.value[e];
}
function Kd({ id: e }) {
  Na.value[e] = !0;
}
function jd({ id: e }) {
  e in Na.value && delete Na.value[e];
}
function VM({ id: e, statusOpen: t }) {
  Pe(t) ? Na.value[e] ? jd({ id: e }) : Kd({ id: e }) : t ? Kd({ id: e }) : jd({ id: e });
}
function WM(e, {
  eventsMenu: t = _(() => ({})),
  statusExpanded: n = B(!1),
  wasOpened: r = B(!1)
}) {
  const s = f(e, "buttonAttributes"), l = f(e, "buttonTag"), o = f(e, "disabled"), u = f(e, "dropdownAttributes"), h = f(e, "dropdownClass"), A = f(e, "id"), E = f(e, "menuWidth"), p = f(e, "persist"), T = _(() => s.value.id || A.value), m = _(() => {
    const I = pe(s.value);
    return I["aria-haspopup"] = "true", I["aria-expanded"] = n.value, l.value === "button" && (I.type = I.type || "button"), I;
  }), L = _(() => {
    const I = {};
    return o.value && (l.value === "button" ? I.disabled = !0 : l.value === "a" && (I.ariaDisabled = !0)), I;
  }), b = _(() => {
    const I = pe(u.value);
    return I.class = ["a_dropdown__menu", h.value, {
      a_dropdown__menu_show: n.value
    }], E.value && (I.style = `width: ${E.value}px`), bd({}, I, t.value);
  }), v = _(() => n.value || p.value && r.value);
  return {
    idLocal: T,
    buttonAttributesDisabled: L,
    buttonAttributesLocal: m,
    dropdownAttributesLocal: b,
    isMenuRendered: v
  };
}
function GM(e) {
  const t = f(e, "buttonClass"), n = f(e, "class");
  return {
    buttonClassLocal: _(() => {
      let s = {};
      return t.value && (ot(t.value) ? s[t.value] = !0 : nt(t.value) && (s = bd(s, t.value))), n.value && (ot(n.value) ? s[n.value] = !0 : nt(n.value) && (s = bd(s, n.value))), s;
    })
  };
}
function KM(e, {
  onToggle: t = () => {
  },
  onKeydown: n = () => {
  },
  onOpen: r = () => {
  },
  onClose: s = () => {
  },
  timerCloseHover: l = B(void 0),
  triggerOpen: o = B(void 0)
}) {
  const u = f(e, "triggers"), h = _(() => {
    const m = {};
    return Y(u.value, (L) => {
      m[L] = !0;
    }), m;
  }), A = _(() => {
    const m = {};
    return h.value.click && (m.onClick = t, m.onKeydown = n), h.value.focus && (m.onFocus = () => r({ trigger: "focus" })), h.value.hover && (m.onMouseenter = () => r({ trigger: "hover" }), m.onMouseleave = () => s({ trigger: "hover" })), m;
  }), E = () => {
    o.value === "hover" && clearTimeout(l.value);
  }, p = () => {
    s({ trigger: "hover" });
  }, T = _(() => {
    const m = {};
    return h.value.hover && (m.onMouseenter = E, m.onMouseleave = p), m;
  });
  return {
    eventsLocal: A,
    eventsMenu: T
  };
}
function jM(e, {
  dropdownRef: t = B(void 0)
}) {
  const n = f(e, "elementsForArrows");
  return {
    setFocusToFirstElement: () => {
      if (!t.value)
        return;
      const s = t.value.querySelectorAll(n.value);
      s.length !== 0 && s[0].focus();
    }
  };
}
function zM(e, {
  dropdownButtonRef: t = B(void 0),
  dropdownRef: n = B(void 0)
}) {
  const r = f(e, "floatingFlip"), s = f(e, "floatingShift"), l = f(e, "placement"), o = B(void 0), u = _(() => {
    var p, T;
    const E = [];
    return (p = r.value) != null && p.use && E.push(
      Il(r.value)
    ), (T = s.value) != null && T.use && E.push(
      vl(s.value)
    ), E;
  });
  return {
    destroyPopover: () => {
      o.value && (o.value(), o.value = void 0);
    },
    startPopper: () => {
      !o.value && t.value.$el && n.value && (o.value = bl(
        t.value.$el,
        n.value,
        () => {
          !t.value.$el || !n.value || gl(
            t.value.$el,
            n.value,
            {
              placement: l.value,
              middleware: u.value
            }
          ).then(({ x: E, y: p }) => {
            Object.assign(n.value.style, {
              left: `${E}px`,
              top: `${p}px`
            });
          });
        }
      ));
    }
  };
}
function YM() {
  const e = B(void 0), t = B(void 0);
  return {
    dropdownButtonRef: e,
    dropdownRef: t
  };
}
const Ad = B(!1);
function IS() {
  return {
    closeDropdownGlobal: () => {
      Ad.value = !1;
    },
    isDropdownGlobalOpen: Ad,
    openDropdownGlobal: () => {
      Ad.value = !0;
    }
  };
}
function XM(e, { emit: t }, {
  closePopup: n = () => {
  },
  dropdownButtonRef: r = B(void 0),
  dropdownRef: s = B(void 0),
  destroyPopover: l = () => {
  },
  openPopup: o = () => {
  },
  setFocusToFirstElement: u = () => {
  },
  startPopper: h = () => {
  }
}) {
  const A = f(e, "disabled"), E = f(e, "dropdownRenderDefault"), p = f(e, "elementsForArrows"), T = f(e, "id"), m = f(e, "isCloseByClickInside"), L = f(e, "isCloseByClickOutside"), b = f(e, "isListWidthSameWithButton"), v = f(e, "lockArrowsNavigation"), I = f(e, "lockTabNavigation"), y = f(e, "persist"), R = f(e, "useEscape"), D = B(void 0), w = B(!1), M = B(!1), P = B(void 0), x = B(void 0), C = B(!1), {
    closeDropdownGlobal: q,
    openDropdownGlobal: W
  } = IS(), z = () => {
    C.value = E.value || !1;
  }, oe = ({ down: G }) => {
    var de;
    const ee = s.value.querySelectorAll(p.value);
    if (ee.length !== 0) {
      if (((de = r.value) == null ? void 0 : de.$el) === document.activeElement) {
        G ? ee[0].focus() : ee[ee.length - 1].focus();
        return;
      }
      Y(ee, (Ne, Fe) => {
        if (Ne === document.activeElement)
          return G ? Fe < ee.length - 1 && ee[Fe + 1].focus() : Fe > 0 && ee[Fe - 1].focus(), !1;
      });
    }
  }, te = () => {
    var G, ee;
    (ee = (G = r.value) == null ? void 0 : G.$el) == null || ee.focus();
  }, ue = (G) => {
    const ee = G || window.$event;
    if (ee.keyCode === Z.arrowDown || ee.keyCode === Z.arrowUp) {
      if (!v.value)
        return;
      const de = ee.keyCode === Z.arrowDown;
      oe({ down: de }), G.preventDefault(), G.stopPropagation();
    } else if (ee.keyCode === Z.escape)
      R.value && (he({ trigger: "click" }), G.preventDefault(), G.stopPropagation());
    else if (ee.keyCode === Z.tab) {
      if (!I.value)
        return;
      ee.shiftKey ? (he(), setTimeout(() => {
        var de;
        $M({
          element: (de = r.value) == null ? void 0 : de.$el
        });
      })) : (he(), setTimeout(() => {
        var de;
        MM({
          element: (de = r.value) == null ? void 0 : de.$el
        });
      })), G.stopPropagation(), G.preventDefault();
    }
  }, re = () => {
    L.value && document.addEventListener("click", k);
  }, ie = () => {
    L.value && document.removeEventListener("click", k);
  }, Ae = () => {
    w.value || (w.value = !0, document.body.addEventListener("keydown", ue));
  }, we = () => {
    w.value && (w.value = !1, document.body.removeEventListener("keydown", ue));
  }, me = () => {
    b.value && r.value && (D.value = r.value.clientWidth);
  }, ae = ({ trigger: G = "click", selectorToFocus: ee } = {}) => {
    G === "hover" && x.value === "hover" && clearTimeout(P.value), !(A.value || M.value) && (x.value = G, me(), Ae(), M.value = !0, y.value && C.value && h(), C.value = !0, setTimeout(() => {
      re(), ee ? setTimeout(() => {
        document.getElementById(ee).focus();
      }) : G === "click" && setTimeout(() => {
        u();
      }), W(), o({
        id: T.value
      }), t("open");
    }));
  }, Oe = ({ $event: G }) => {
    x.value === "hover" ? M.value && (x.value = "click", G.stopPropagation()) : M.value ? he({ trigger: "click" }) : ae();
  }, ve = (G) => {
    (G.keyCode === Z.enter || G.keyCode === Z.space) && (Oe({ $event: G }), G.stopPropagation(), G.preventDefault()), (G.keyCode === Z.arrowUp || G.keyCode === Z.arrowDown) && (M.value || ae());
  };
  function Ke({ trigger: G }) {
    ie(), we(), l(), M.value = !1, q(), G && G !== "hover" && // the event did not come from outside
    x.value !== "hover" && te(), x.value = void 0, n({
      id: T.value
    }), t("close");
  }
  function he({ trigger: G } = {}) {
    if (M.value)
      if (G === "hover") {
        if (x.value !== "hover")
          return;
        P.value = setTimeout(() => {
          Ke({ trigger: G });
        }, 120);
      } else
        Ke({ trigger: G });
  }
  function k(G) {
    s.value.contains(G.target) ? m.value && (he(), te()) : he();
  }
  return {
    buttonWidth: D,
    destroyEventCloseClick: ie,
    destroyEventPressArrows: we,
    initWasOpened: z,
    onClose: he,
    onKeydown: ve,
    onOpen: ae,
    onToggle: Oe,
    statusExpanded: M,
    timerCloseHover: P,
    triggerOpen: x,
    wasOpened: C
  };
}
const sa = {
  name: "ADropdown",
  inheritAttrs: !1,
  props: {
    actions: {
      type: Array,
      required: !1,
      default: () => []
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    buttonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    buttonIconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonIconClass: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonIconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    buttonIconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    buttonIconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonIsTitleHtml: {
      type: Boolean,
      required: !1
    },
    buttonLoading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    buttonLoadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    buttonLoadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    buttonPrevent: {
      type: Boolean,
      required: !1
    },
    buttonStop: {
      type: Boolean,
      required: !1
    },
    buttonTag: {
      type: String,
      required: !1,
      default: "button"
    },
    buttonText: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTextAriaHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    buttonTextClass: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonTextScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTitle: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTitlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => ["top", "left", "bottom", "right"].indexOf(e) !== -1
    },
    caretIcon: {
      type: String,
      required: !1,
      default: Li
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dropdownClass: {
      type: String,
      required: !1,
      default: void 0
    },
    dropdownRenderDefault: {
      type: Boolean,
      required: !1
    },
    dropdownTag: {
      type: String,
      required: !1,
      default: "ul"
    },
    elementsForArrows: {
      type: String,
      required: !1,
      default: Ei
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    floatingFlip: {
      type: Object,
      required: !1,
      /*
       * mainAxis?: boolean;
       * crossAxis?: boolean;
       * fallbackAxisSideDirection?: 'none' | 'start' | 'end';
       * flipAlignment?: boolean;
       * fallbackPlacements?: Array<Placement>;
       * fallbackStrategy?: 'bestFit' | 'initialPlacement';
       */
      default: () => ({})
    },
    floatingShift: {
      type: Object,
      required: !1,
      default: () => ({
        use: !0,
        crossAxis: !0,
        padding: 20
      })
    },
    hasCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_dropdown_btn_")
    },
    inBody: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isCloseByClickInside: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isCloseByClickOutside: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHideWithoutActionAndSlot: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isListWidthSameWithButton: {
      type: Boolean,
      required: !1
    },
    lockArrowsNavigation: {
      type: Boolean,
      required: !1,
      default: !0
    },
    lockTabNavigation: {
      type: Boolean,
      required: !1,
      default: !0
    },
    menuWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    persist: {
      type: Boolean,
      required: !1,
      default: !0
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => yr.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: "a_tooltip_container"
    },
    triggers: {
      type: Array,
      required: !1,
      default: () => ["click"],
      validator: (e) => Lw(e, ["click", "hover", "focus"]).length === 0
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: [
    "open",
    "close"
  ],
  setup(e, t) {
    const n = f(e, "id"), {
      closePopup: r,
      openPopup: s
    } = lf(), {
      dropdownButtonRef: l,
      dropdownRef: o
    } = YM(), {
      setFocusToFirstElement: u
    } = jM(e, {
      dropdownRef: o
    }), {
      destroyPopover: h,
      startPopper: A
    } = zM(e, {
      dropdownButtonRef: l,
      dropdownRef: o
    }), {
      buttonWidth: E,
      destroyEventCloseClick: p,
      destroyEventPressArrows: T,
      initWasOpened: m,
      onClose: L,
      onKeydown: b,
      onOpen: v,
      onToggle: I,
      statusExpanded: y,
      timerCloseHover: R,
      triggerOpen: D,
      wasOpened: w
    } = XM(e, t, {
      closePopup: r,
      destroyPopover: h,
      dropdownButtonRef: l,
      dropdownRef: o,
      openPopup: s,
      setFocusToFirstElement: u,
      startPopper: A
    }), {
      eventsLocal: M,
      eventsMenu: P
    } = KM(e, {
      onToggle: I,
      onKeydown: b,
      onOpen: v,
      onClose: L,
      timerCloseHover: R,
      triggerOpen: D
    }), {
      idLocal: x,
      buttonAttributesDisabled: C,
      buttonAttributesLocal: q,
      dropdownAttributesLocal: W,
      isMenuRendered: z
    } = WM(e, {
      eventsMenu: P,
      statusExpanded: y,
      wasOpened: w
    }), {
      actionsFiltered: oe,
      hasActions: te
    } = HM(e), {
      addPopperContainerInBody: ue,
      popperContainerIdSelector: re
    } = Mc(e), {
      buttonClassLocal: ie
    } = GM(e);
    return m(), ue(), Ct(() => {
      p(), T(), h(), r({
        id: n.value
      });
    }), {
      actionsFiltered: oe,
      buttonAttributesDisabled: C,
      buttonAttributesLocal: q,
      buttonClassLocal: ie,
      buttonWidth: E,
      dropdownAttributesLocal: W,
      dropdownButtonRef: l,
      dropdownRef: o,
      eventsLocal: M,
      hasActions: te,
      idLocal: x,
      isMenuRendered: z,
      onClose: L,
      onOpen: v,
      popperContainerIdSelector: re,
      startPopper: A,
      statusExpanded: y
    };
  },
  render() {
    return this.isHideWithoutActionAndSlot && !this.hasActions && !this.$slots.dropdown ? null : [
      c(ye, {
        ref: "dropdownButtonRef",
        ...this.$attrs,
        id: this.idLocal,
        alwaysTranslate: this.alwaysTranslate,
        tag: this.buttonTag,
        class: this.buttonClassLocal,
        text: this.buttonText,
        textScreenReader: this.buttonTextScreenReader,
        textAriaHidden: this.buttonTextAriaHidden,
        textClass: this.buttonTextClass,
        title: this.buttonTitle,
        isTitleHtml: this.buttonIsTitleHtml,
        titlePlacement: this.buttonTitlePlacement,
        loading: this.buttonLoading,
        loadingClass: this.buttonLoadingClass,
        loadingAlign: this.buttonLoadingAlign,
        iconLeft: this.buttonIconLeft,
        iconRight: this.buttonIconRight,
        iconClass: this.buttonIconClass,
        iconAttributes: this.buttonIconAttributes,
        iconTag: this.buttonIconTag,
        prevent: this.buttonPrevent,
        stop: this.buttonStop,
        extra: this.extra,
        type: "button",
        attributes: this.buttonAttributesLocal,
        ...this.buttonAttributesDisabled,
        ...this.eventsLocal
      }, {
        default: () => this.$slots.button && this.$slots.button(),
        buttonAppend: () => this.hasCaret && c(lt, {
          class: "a_dropdown__caret",
          icon: this.caretIcon
        })
      }),
      c(ia, {
        to: this.popperContainerIdSelector,
        disabled: !this.inBody
      }, [
        this.isMenuRendered && xt(c(
          "div",
          {
            ref: "dropdownRef",
            role: "application",
            "aria-labelledby": this.idLocal,
            ariaHidden: !this.statusExpanded,
            ...this.dropdownAttributesLocal
          },
          [
            c(this.dropdownTag, {}, [
              this.$slots.dropdown && this.$slots.dropdown(),
              this.hasActions && this.actionsFiltered.map((e, t) => c(UM, {
                key: t,
                action: e,
                alwaysTranslate: this.alwaysTranslate
              }, this.$slots))
            ])
          ]
        ), [
          [_l, {
            mounted: this.startPopper
          }]
        ])
      ])
    ];
  }
}, ZM = {
  name: "AErrorsElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    error: {
      type: [Object, Array, String],
      required: !1,
      default: void 0
    },
    errorKey: {
      type: String,
      required: !1,
      default: void 0
    },
    errorLabels: {
      type: [String, Object],
      required: !0
    },
    goToError: {
      type: Function,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_errors_")
    },
    isErrorLink: {
      type: Boolean,
      required: !0
    }
  },
  setup(e) {
    const t = f(e, "errorLabels"), n = _(() => ot(t.value) ? t.value : nt(t.value) ? t.value.label : ""), r = f(e, "isErrorLink"), s = _(() => nt(t.value) && t.value.link && r.value), l = f(e, "error"), o = _(() => ot(l.value)), u = _(() => Se(l.value)), h = _(() => nt(l.value)), A = _(() => Se(t.value)), E = f(e, "id"), p = _(() => fe(t.value, "id") || E.value), T = f(e, "goToError"), m = f(e, "errorKey"), L = () => {
      if (Me(T.value))
        return T.value({
          id: p.value,
          key: m.value
        });
      let v = p.value;
      if (le(m.value) || (v = `${v}_${m.value}`), Ti(v) > 0) {
        const I = document.getElementById(v);
        I && I.focus();
      }
    };
    return {
      currentLabel: n,
      goToErrorLocal: L,
      isErrorArray: u,
      isErrorLabelsArray: A,
      isErrorLinkLocal: s,
      isErrorObject: h,
      isErrorString: o,
      onKeydown: (v) => {
        (v.keyCode === Z.enter || v.keyCode === Z.space) && (L(), v.stopPropagation(), v.preventDefault());
      }
    };
  },
  render() {
    return c("div", {
      class: "a_error__list__li"
    }, [
      this.isErrorString ? this.isErrorLinkLocal ? c(ye, {
        type: "link",
        class: "a_errors__label a_btn a_btn_link a_p_0",
        tabindex: 0,
        "aria-describedby": this.id,
        safeHtml: this.currentLabel,
        textTag: "strong",
        textAfter: ":",
        onClick: this.goToErrorLocal,
        onKeydown: this.onKeydown
      }) : c("div", {
        class: "a_errors__label",
        "aria-describedby": this.id
      }, [
        c(Te, {
          tag: "strong",
          safeHtml: this.currentLabel
        })
      ]) : "",
      c(
        "div",
        {
          id: this.id,
          class: "a_errors__errors"
        },
        this.isErrorString ? [
          c(Te, {
            alwaysTranslate: this.alwaysTranslate,
            tag: "span",
            html: this.error
          })
        ] : this.isErrorArray ? [...this.error.map((e, t) => c(kr("AErrorsElement"), {
          key: t,
          error: e,
          alwaysTranslate: this.alwaysTranslate,
          errorLabels: this.isErrorLabelsArray ? this.errorLabels[t] || this.errorLabels : this.errorLabels,
          goToError: this.goToError,
          isErrorLink: this.isErrorLink
        }))] : this.isErrorObject ? [
          c("div", {
            class: "a_pl_2"
          }, [
            ...Object.keys(this.error).map((e) => c(kr("AErrorsElement"), {
              key: e,
              alwaysTranslate: this.alwaysTranslate,
              error: this.error[e],
              errorLabels: this.errorLabels[e] || this.errorLabels,
              goToError: this.goToError,
              isErrorLink: this.isErrorLink
            }))
          ])
        ] : []
      )
    ]);
  }
};
function JM({ emit: e }) {
  return {
    close: () => {
      e("close");
    }
  };
}
function QM(e) {
  const t = f(e, "errors");
  return {
    hasErrors: _(() => !cn(t.value))
  };
}
function e$(e, {
  hasErrors: t = _(() => !1)
}) {
  const n = f(e, "autoFocus"), r = B(void 0);
  return {
    elRef: r,
    setFocusToElement: () => {
      n.value && t.value && setTimeout(() => {
        r.value.$el.focus();
      });
    }
  };
}
function t$(e) {
  const t = f(e, "optionsList"), n = f(e, "idPrefix"), r = (l) => {
    let o = {};
    return Y(l, (u) => {
      o[u.id] = {
        label: u.labelError || u.label,
        link: Pe(u.isErrorLink) ? !0 : u.isErrorLink,
        id: fl({
          id: u.id,
          idPrefix: u.idPrefix || n.value,
          htmlId: u.htmlId
        })
      }, u.children && u.children.length && (o = {
        ...o,
        ...r(u.children)
      });
    }), o;
  };
  return {
    labelsLocal: _(() => {
      let l = {};
      return t.value.forEach((o) => {
        l[o.id] = {
          label: o.labelError || o.label,
          link: Pe(o.isErrorLink) ? !0 : o.isErrorLink,
          id: fl({
            id: o.id,
            idPrefix: o.idPrefix || n.value,
            htmlId: o.htmlId
          })
        }, o.children && o.children.length && (l = {
          ...l,
          ...r(o.children)
        });
      }), l;
    })
  };
}
const n$ = {
  name: "AErrors",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closable: {
      type: Boolean,
      required: !1,
      default: !0
    },
    goToError: {
      type: Function,
      required: !1,
      default: void 0
    },
    optionsList: {
      type: Array,
      required: !1,
      default: () => []
    },
    autoFocus: {
      type: Boolean,
      required: !1,
      default: !0
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: "Bitte überprüfen Sie Ihre Eingaben."
    },
    isErrorLink: {
      type: Boolean,
      required: !1,
      default: !0
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      hasErrors: n
    } = QM(e), {
      elRef: r,
      setFocusToElement: s
    } = e$(e, {
      hasErrors: n
    }), {
      labelsLocal: l
    } = t$(e), {
      close: o
    } = JM(t);
    return tt(n, () => {
      s();
    }), Vr(() => {
      s();
    }), {
      close: o,
      elRef: r,
      hasErrors: n,
      labelsLocal: l
    };
  },
  render() {
    return c($c, {
      ref: "elRef",
      alwaysTranslate: this.alwaysTranslate,
      tabindex: -1,
      role: "alert",
      "aria-atomic": !0,
      isVisible: this.hasErrors,
      closable: this.closable,
      onClose: this.close
    }, () => [
      this.hasErrors && c("div", {
        class: "a_errors"
      }, [
        c("div", {
          class: "a_errors__header"
        }, [
          c("strong", null, this.textErrorHeader)
        ]),
        c("div", {
          class: "a_errors__list"
        }, [
          ...Object.keys(this.errors).map((e) => c(ZM, {
            key: e,
            alwaysTranslate: this.alwaysTranslate,
            error: this.errors[e],
            errorLabels: this.labelsLocal[e] || this.labelsLocal,
            goToError: this.goToError,
            isErrorLink: this.isErrorLink
          }))
        ])
      ])
    ]);
  }
};
function r$(e, {
  ensurePrecision: t = () => {
  },
  getCleanIntValue: n = () => {
  },
  setCurrentValue: r = () => {
  },
  modelNumber: s = _(() => {
  })
}) {
  const l = f(e, "decimalDivider"), o = f(e, "disabled"), u = f(e, "modelValue"), h = f(e, "max"), A = f(e, "min"), E = f(e, "decimalPartLength"), p = f(e, "step"), T = f(e, "thousandDivider"), m = _(() => s.value <= A.value), L = _(() => s.value >= h.value), b = (D) => {
    if (l.value) {
      const w = typeof D == "number" ? D.toString().split(".") : D.toString().split(l.value), M = w[0], P = M[0] === "-" ? "-" : "", x = T.value ? n({ value: M, thousandDivider: T.value }) : M, C = w.length > 1 ? w[1] : "", q = C.length, W = rr(E.value - q, () => "0").join("");
      return `${P}${x}${l.value}${C}${W}`;
    }
    return D;
  }, v = () => {
    const D = b(h.value);
    r(D);
  }, I = () => {
    const D = b(A.value);
    r(D);
  };
  return {
    adjustFloatPartAndDivider: b,
    increase: () => {
      if (o.value || L.value)
        return;
      const D = s.value, w = t({
        value: D,
        currentValue: u.value
      }).replace(".", l.value);
      if (D + p.value > h.value) {
        v();
        return;
      }
      r(b(w));
    },
    decrease: () => {
      if (o.value || m.value)
        return;
      const D = s.value, w = t({
        value: D,
        currentValue: u.value,
        coefficient: -1
      }).replace(".", l.value);
      if (D - p.value < A.value) {
        I();
        return;
      }
      r(b(w));
    }
  };
}
function a$(e, {
  adjustFloatPartAndDivider: t = () => {
  },
  decrease: n = () => {
  },
  getCleanIntValue: r = () => {
  },
  increase: s = () => {
  },
  modelNumber: l = _(() => {
  }),
  modelUndefinedLocal: o = _(() => {
  }),
  onBlur: u = () => {
  },
  setCurrentValue: h = () => {
  }
}) {
  const A = f(e, "decimalDivider"), E = B(void 0), p = f(e, "max"), T = f(e, "min"), m = f(e, "modelValue"), L = f(e, "required"), b = f(e, "decimalPartLength"), v = f(e, "thousandDivider"), I = f(e, "validationOnChange"), y = B(0), R = navigator.userAgent.indexOf("Firefox") !== -1 ? 1 : 0, D = [
    Z.tab,
    Z.del,
    Z.escape,
    Z.backspace,
    Z.arrowLeft,
    Z.arrowRight,
    Z.home,
    Z.end
  ], w = _(() => !b.value), M = (k) => Number(`${k}`.replaceAll(v.value, "").replace(A.value, ".")), P = (k, G) => {
    h(k, G);
  }, x = (k) => {
    setTimeout(() => {
      E.value.setSelectionRange(k, k);
    });
  }, C = () => {
    const k = t(p.value);
    P(k);
  }, q = () => {
    const k = t(T.value);
    P(k);
  }, W = (k) => {
    const G = M(k);
    if (G > p.value)
      return C(), !0;
    if (G < T.value)
      return q(), !0;
  }, z = (k, G, ee = !1) => {
    var _t;
    if (!L.value && le(G) && !((_t = k == null ? void 0 : k.target) != null && _t.value)) {
      P(G, ee);
      return;
    }
    let de;
    ee ? de = typeof G == "number" ? `${G}`.replace(".", A.value) : G : de = le(G) ? k.target.value : `${G}`;
    const Fe = de.indexOf(A.value) !== -1, Ue = E.value.selectionStart, Xe = de.split(A.value), Ie = Xe[0].length && Xe[0][0] === "-" ? "-" : "", Ge = Number(Xe[0].replace(/[^0-9]/g, "")).toString(), ft = Xe[1] ? Xe[1].substring(0, b.value) : "";
    if (le(Ge) || Ge === "")
      return;
    const qe = v.value ? r({ value: Ge, thousandDivider: v.value }) : Ge;
    let at;
    if (w.value)
      at = `${Ie}${qe}`;
    else if (ee) {
      const bt = ft || "", It = rr(b.value - bt.length, () => "0").join("");
      at = `${Ie}${qe}${A.value}${bt}${It}`;
    } else ft ? at = `${Ie}${qe}${A.value}${ft}` : Fe ? at = `${Ie}${qe}${A.value}` : at = `${Ie}${qe}`;
    I.value && W(at) || (P(at, ee), x(Ue));
  }, oe = ({ value: k }) => {
    T.value >= 0 || k[0] !== "-" && (y.value++, setTimeout(() => {
      const G = `-${k}`;
      I.value && W(G) || (P(G), y.value--);
    }, R));
  }, te = ({ value: k }) => {
    k[0] === "-" && (y.value++, setTimeout(() => {
      const G = k.replace("-", "");
      I.value && W(G) || (P(G), y.value--);
    }, R));
  }, ue = ({ value: k }) => {
    y.value++, setTimeout(() => {
      const G = E.value.selectionStart;
      if (v.value && k[G - 1] === v.value) {
        const ee = G - 1;
        x(ee);
      }
      y.value--;
    }, R);
  }, re = ({ value: k }) => {
    setTimeout(() => {
      y.value++;
      const G = E.value.selectionStart;
      if (v.value && k[G - 1] === v.value) {
        const ee = G + 1;
        x(ee);
      }
      y.value--;
    }, R);
  }, ie = ({ value: k, cursorPosition: G }, ee) => {
    setTimeout(() => {
      y.value++;
      let de = E.value.value;
      if (ee) {
        const Ne = k.length + 1;
        de[de.length - 1] === A.value && (de += rr(b.value, () => "0").join(""), P(de), x(Ne));
      } else {
        const Ne = k.substring(0, G).split("").reverse().join("").replaceAll(v.value, "").match(/.{1,3}/g).join(v.value).split("").reverse().join("");
        let Fe = k.substring(G, k.length).replace(/[^0-9]/g, "").substring(0, b.value);
        Fe = `${Fe}${rr(b.value - Fe.length, () => "0").join("")}`;
        const Ue = [
          Ne,
          Fe
        ].join(A.value);
        P(Ue), x(Ne.length + 1);
      }
      y.value--;
    });
  }, Ae = ({ cursorPosition: k, numberOfSymbols: G }) => {
    let ee = k && k - 1;
    E.value.value.length < G - 1 && ee > 0 && ee--, x(ee);
  }, we = ({ hasDecimalDivider: k, value: G, cursorPosition: ee }) => {
    const de = G.length;
    if (!w.value) {
      const Ne = G.indexOf(A.value);
      if (k && Ne === ee - 1) {
        const Ue = G.split(A.value)[0];
        y.value++, setTimeout(() => {
          Ae({ cursorPosition: ee, numberOfSymbols: de }), P(Ue), y.value--;
        }, R);
        return;
      }
      y.value++, setTimeout(() => {
        Ae({ cursorPosition: ee, numberOfSymbols: de }), y.value--;
      }, R);
    }
  }, me = ({ value: k, $event: G, hasDecimalDivider: ee, cursorPosition: de }) => {
    if (!w.value && ee && k[de] === A.value) {
      const Fe = k.split(A.value)[0];
      P(Fe), x(de);
      return;
    }
    if (v.value)
      if (k[de] === v.value) {
        G.preventDefault();
        const Ne = de, Fe = k.split(A.value), Ue = Fe[0], Xe = Fe[1];
        let Ie = Ue.split("");
        Ie.splice(de + 1, 1), Ie = Ie.reverse().join("").replaceAll(v.value, "").match(/.{1,3}/g).join(v.value).split("").reverse().join("");
        let Ge;
        w.value ? Ge = Ie : Xe ? Ge = `${Ie}${A.value}${Xe}` : ee ? Ge = `${Ie}${A.value}` : Ge = Ie, P(Ge), x(Ne + 1);
      } else
        setTimeout(() => {
          y.value++, E.value.value.length < k.length - 1 && x(de > 0 ? de - 1 : 0), y.value--;
        }, R);
  };
  return {
    handleInput: z,
    handleKeydown: (k) => {
      if (y.value) {
        k.preventDefault();
        return;
      }
      const G = k.target.value, ee = k.keyCode, de = k.key, Ne = ee >= 48 && ee <= 57 || ee >= 96 && ee <= 105, Fe = de === A.value && !!b.value, Ue = k.target.value.indexOf(A.value), Xe = Ue !== -1, Ie = E.value.selectionStart, Ge = Ie === G.length, ft = {
        value: G,
        hasDecimalDivider: Xe,
        cursorPosition: Ie,
        $event: k
      };
      if (ee === Z.arrowUp) {
        s(), k.preventDefault();
        return;
      }
      if (ee === Z.arrowDown) {
        n(), k.preventDefault();
        return;
      }
      if (ee === Z.minus || ee === Z.numMinus) {
        oe(ft), k.preventDefault();
        return;
      }
      if (ee === Z.plus && k.shiftKey || ee === Z.numPlus) {
        te(ft), k.preventDefault();
        return;
      }
      if (ee === Z.arrowLeft) {
        ue(ft);
        return;
      }
      if (ee === Z.arrowRight) {
        re(ft);
        return;
      }
      if (Fe) {
        if (Xe) {
          x(Ue + 1), k.preventDefault();
          return;
        }
        Ge || k.preventDefault(), ie(ft, Ge);
        return;
      }
      if (k.keyCode === Z.backspace) {
        if (E.value.selectionStart !== E.value.selectionEnd)
          return;
        we(ft);
        return;
      }
      if (k.keyCode === Z.del) {
        me(ft);
        return;
      }
      if (Ne && !k.ctrlKey && Xe) {
        const qe = G.indexOf(A.value);
        if (Ie > qe && G.split(A.value)[1].length === b.value) {
          if (Ge) {
            k.preventDefault();
            return;
          }
          k.preventDefault();
          const bt = G.split("");
          bt[Ie] = de;
          const It = bt.join("");
          P(It), y.value++, setTimeout(() => {
            x(Ie + 1), y.value--;
          }, R);
          return;
        }
      }
      if (!Ne && !k.ctrlKey && !Cd(D, k.keyCode) && k.preventDefault(), k.keyCode !== Z.home && k.keyCode !== Z.end && !k.ctrlKey && k.keyCode)
        if (Ie === 0 && G.length && G[0] === "0") {
          k.preventDefault();
          const qe = `${de}${G.slice(1)}`;
          P(qe), x(1);
        } else {
          const qe = G.length;
          y.value++, setTimeout(() => {
            let at = Ie + 1;
            const _t = E.value.value.length;
            _t - 1 > qe ? at++ : _t === qe && at--, x(at), y.value--;
          }, R);
        }
    },
    handlePaste: (k) => {
      var _t;
      k.preventDefault();
      const ee = (k.clipboardData || window.clipboardData).getData("text").split(A.value), de = ee[0].replace(/[^0-9]/g, ""), Ne = ((_t = ee[1]) == null ? void 0 : _t.replace(/[^0-9]/g, "")) || "";
      let Fe;
      const Ue = E.value.selectionStart, Xe = E.value.selectionEnd, Ie = E.value.value, Ge = Ie.indexOf(A.value) !== -1, qe = Ie.substring(Ue, Xe).indexOf(A.value) !== -1;
      Ge && !qe ? Fe = Ne ? [de, Ne].join("") : de : Fe = Ne ? [de, Ne].join(A.value) : de;
      const at = Ie.slice(0, Ue) + Fe + Ie.slice(Xe);
      z(null, at);
    },
    initFirstCheck: () => {
      setTimeout(() => {
        let k;
        if (m.value || m.value === 0) {
          if (k = m.value.toString().replace(".", A.value), A.value) {
            const G = k.toString().split(A.value), ee = G[0], de = ee[0] === "-" ? "-" : "", Ne = G.length > 1 ? G[1] : "", Fe = Ne.length, Ue = rr(b.value - Fe, () => "0").join("");
            k = `${de}${ee}${A.value}${Ne}${Ue}`;
          }
        } else
          k = L.value ? [
            "0",
            A.value,
            rr(b.value, () => "0").join("")
          ].join("") : o.value;
        z(null, k, !0);
      });
    },
    inputRef: E,
    onBlurNumber: (k) => {
      let G = k.target.value;
      if (w.value || (G = G.split(A.value)[0]), le(G) || G === "") {
        if (L.value) {
          if (T.value > 0) {
            const de = A.value ? `0${A.value}${rr(b.value, () => "0").join("")}` : "0";
            P(de);
          } else
            q();
          u(k);
          return;
        }
        const ee = o.value;
        P(ee), u(k);
        return;
      } else if (l.value < T.value) {
        q();
        return;
      } else if (l.value > p.value) {
        C();
        return;
      }
      if (b.value) {
        let ee = `${k.target.value}`;
        const Ne = ee.split(A.value)[1];
        ee.indexOf(A.value) === -1 ? ee += `${A.value}${rr(b.value, () => "0").join("")}` : Ne.length < b.value && (ee += `${rr(b.value - Ne.length, () => "0").join("")}`), P(ee);
      }
      u(k);
    },
    onClickNumber: (k) => {
      y.value++, setTimeout(() => {
        const G = k.target.selectionStart, ee = k.target.value;
        v.value && v.value === ee[G - 1] && x(G - 1), y.value--;
      });
    }
  };
}
function s$(e, {
  changeModel: t = () => {
  }
}) {
  const n = f(e, "required"), r = f(e, "modelValue"), s = f(e, "modelType"), l = f(e, "modelUndefined"), o = f(e, "decimalDivider"), u = f(e, "disabled"), h = f(e, "decimalPartLength"), A = f(e, "thousandDivider"), E = B(void 0), p = B(!1), T = B(void 0), m = () => {
    E.value = r.value, T.value = r.value;
  }, L = _(() => Number(`${E.value}`.replaceAll(A.value, "").replace(o.value, "."))), b = _(() => n.value ? [
    "0",
    o.value,
    rr(h.value, () => "0").join("")
  ].join("") : l.value), v = (y, R = !1) => {
    E.value = le(y) ? "" : y;
    let D;
    !n.value && le(y) ? D = b.value : D = s.value === "number" ? Number(`${y}`.replaceAll(A.value, "").replace(o.value, ".")) : y, R || (p.value = !0, T.value = D, t({ model: D }));
  };
  return {
    clearModel: () => {
      u.value || v(b.value);
    },
    displayValue: E,
    initLocalVars: m,
    isInternalChange: p,
    localModel: T,
    modelNumber: L,
    modelUndefinedLocal: b,
    setCurrentValue: v
  };
}
function i$() {
  return {
    getCleanIntValue: ({ value: t, thousandDivider: n }) => t.replaceAll(n, "").replaceAll("-", "").split("").reverse().join("").match(/.{1,3}/g).join(n).split("").reverse().join("")
  };
}
function ude(e) {
  return Fa(e) ? Math.abs(e % 2) === 1 : !1;
}
function l$(e) {
  return Fa(e) ? e % 2 === 0 : !1;
}
function $o(e, t) {
  if (t === 0)
    return Math.round(e);
  let n = String(e);
  const r = n.indexOf(".");
  if (r === -1 || !n.replace(".", "").split("")[r + t])
    return e;
  const o = n.length;
  return n.charAt(o - 1) === "5" && (n = `${n.slice(0, Math.max(0, o - 1))}6`), Number.parseFloat(Number(n).toFixed(t));
}
function o$(e) {
  const t = f(e, "step"), n = f(e, "decimalPartLength");
  return {
    ensurePrecision: ({ value: s, currentValue: l, coefficient: o = 1 }) => vn(s) ? $o(s + t.value * o, n.value).toString() : l
  };
}
function u$(e) {
  const t = f(e, "inputWidth");
  return {
    inputWidthStyleValue: _(() => {
      let r = t.value;
      return vn(t.value) && (r = `${t.value}px`), Pe(r) ? {} : {
        "--a_input_number_width": r
      };
    })
  };
}
const gS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-dash" viewBox="0 0 16 16">
  <path d="M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8"/>
</svg>`, yS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4"/>
</svg>`, rn = B({
  propsDefault: {
    controlsType: "none",
    currencySymbol: "€",
    currencySymbolPosition: "right",
    decimalDivider: ",",
    decimalPartLength: 2,
    iconPrepend: void 0,
    inputWidth: 200,
    isLabelFloat: !1,
    max: void 0,
    min: void 0,
    modelUndefined: void 0,
    placeholder: void 0,
    step: 1,
    thousandDivider: "."
  }
}), _de = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    rn.value.propsDefault = {
      ...rn.value.propsDefault,
      ...t
    };
  }
}, _$ = {
  name: "AInputCurrency",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    controlsType: {
      type: String,
      required: !1,
      default: () => rn.value.propsDefault.controlsType,
      validator: (e) => ["plus-minus", "arrows", "none"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    currencySymbol: {
      type: String,
      required: !1,
      default: () => rn.value.propsDefault.currencySymbol
    },
    currencySymbolPosition: {
      type: String,
      required: !1,
      default: () => rn.value.propsDefault.currencySymbolPosition,
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    decimalDivider: {
      type: String,
      required: !1,
      default: () => rn.value.propsDefault.decimalDivider,
      validator: (e, t) => {
        const n = t == null ? void 0 : t.thousandDivider;
        return n ? [".", ","].indexOf(e) !== -1 && e !== n : [".", ","].indexOf(e) !== -1;
      }
    },
    decimalPartLength: {
      type: Number,
      required: !1,
      default: () => rn.value.propsDefault.decimalPartLength,
      validator: (e) => e >= 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: () => rn.value.propsDefault.iconPrepend
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_input_currency_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    inputWidth: {
      type: [String, Number],
      required: !1,
      default: () => rn.value.propsDefault.inputWidth
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: () => rn.value.propsDefault.isLabelFloat
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: () => rn.value.propsDefault.max
    },
    min: {
      type: Number,
      required: !1,
      default: () => rn.value.propsDefault.min
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelType: {
      type: String,
      required: !1,
      default: "number",
      validator: (e) => ["number", "string"].indexOf(e) !== -1
    },
    modelUndefined: {
      required: !1,
      default: () => rn.value.propsDefault.modelUndefined
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: () => rn.value.propsDefault.placeholder
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    step: {
      type: Number,
      required: !1,
      default: () => rn.value.propsDefault.step,
      validator: (e) => e > 0
    },
    thousandDivider: {
      type: String,
      required: !1,
      default: () => rn.value.propsDefault.thousandDivider,
      validator: (e, t) => {
        const n = t == null ? void 0 : t.decimalDivider;
        return n ? [".", ",", " "].indexOf(e) !== -1 && e !== n : [".", ",", " "].indexOf(e) !== -1;
      }
    },
    validationOnChange: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const n = f(e, "modelValue"), {
      attributesToExcludeFromRender: r
    } = Nt(e), {
      componentStyleHide: s
    } = Wt(e), {
      getCleanIntValue: l
    } = i$(), {
      ariaDescribedbyLocal: o,
      changeModel: u,
      errorsId: h,
      helpTextId: A,
      htmlIdLocal: E,
      isErrors: p,
      isModel: T,
      onBlur: m,
      onFocus: L
    } = Zt(e, t), {
      isClearButtonLocal: b
    } = Iu(e, {
      isModel: T
    }), {
      placeholderAttributes: v
    } = ml(e), {
      inputWidthStyleValue: I
    } = u$(e), {
      ensurePrecision: y
    } = o$(e), {
      clearModel: R,
      displayValue: D,
      initLocalVars: w,
      isInternalChange: M,
      localModel: P,
      modelNumber: x,
      modelUndefinedLocal: C,
      setCurrentValue: q
    } = s$(e, {
      changeModel: u
    }), {
      adjustFloatPartAndDivider: W,
      increase: z,
      decrease: oe
    } = r$(e, {
      ensurePrecision: y,
      getCleanIntValue: l,
      setCurrentValue: q,
      modelNumber: x
    }), {
      handleInput: te,
      handleKeydown: ue,
      handlePaste: re,
      initFirstCheck: ie,
      inputRef: Ae,
      onBlurNumber: we,
      onClickNumber: me
    } = a$(e, {
      adjustFloatPartAndDivider: W,
      decrease: oe,
      getCleanIntValue: l,
      increase: z,
      modelNumber: x,
      modelUndefinedLocal: C,
      onBlur: m,
      setCurrentValue: q
    });
    return w(), ie(), tt(n, (ae) => {
      M.value || (P.value = ae, te(null, ae, !0)), M.value = !1;
    }), {
      ariaDescribedbyLocal: o,
      attributesToExcludeFromRender: r,
      clearModel: R,
      componentStyleHide: s,
      decrease: oe,
      displayValue: D,
      errorsId: h,
      handleInput: te,
      handleKeydown: ue,
      handlePaste: re,
      helpTextId: A,
      htmlIdLocal: E,
      increase: z,
      inputRef: Ae,
      inputWidthStyleValue: I,
      isClearButtonLocal: b,
      isErrors: p,
      isModel: T,
      onBlurNumber: we,
      onClickNumber: me,
      onFocus: L,
      placeholderAttributes: v
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__container"
      }, [
        c("div", {
          class: ["a_form_element__parent", {
            a_form_element__parent_float: this.isLabelFloat,
            a_form_element__parent_not_empty: this.isModel,
            a_form_element__parent_float_has_icon_prepend: this.iconPrepend,
            a_form_element__parent_invalid: this.isErrors
          }]
        }, [
          (this.label || this.labelScreenReader) && !this.isLabelFloat ? c(kt, {
            id: this.htmlIdLocal,
            extra: this.extra,
            isLabelFloat: this.isLabelFloat,
            isError: this.isErrors,
            label: this.label,
            labelClass: this.labelClass,
            labelScreenReader: this.labelScreenReader,
            required: this.required,
            type: "text"
          }) : "",
          c("div", {
            class: [
              "a_form_element_number",
              {
                a_form_element_number_controls: this.controlsType && this.controlsType !== "none"
              }
            ]
          }, [
            this.currencySymbol && this.currencySymbolPosition === "left" && c("span", {
              class: "a_form_element_number__currency_symbol"
            }, this.currencySymbol),
            c("div", {
              class: "a_form_element",
              style: {
                ...this.inputWidthStyleValue
              }
            }, [
              (this.label || this.labelScreenReader) && this.isLabelFloat ? c(kt, {
                id: this.htmlIdLocal,
                isLabelFloat: this.isLabelFloat,
                isError: this.isErrors,
                label: this.label,
                labelClass: this.labelClass,
                labelScreenReader: this.labelScreenReader,
                required: this.required,
                type: "text"
              }) : "",
              this.iconPrepend && c(lt, {
                icon: this.iconPrepend,
                class: "a_input__icon_prepend"
              }),
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                autocomplete: this.autocomplete,
                value: this.displayValue,
                type: "text",
                class: [
                  "a_form_control a_input a_input_number",
                  this.inputClass,
                  {
                    a_form_element_with_one_btn: this.isClearButtonLocal,
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabled,
                ariaRequired: this.required,
                ariaInvalid: this.isErrors,
                "aria-describedby": this.ariaDescribedbyLocal,
                ...this.placeholderAttributes,
                ...this.inputAttributes,
                onInput: this.handleInput,
                onKeydown: this.handleKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlurNumber,
                onClick: this.onClickNumber,
                onPaste: this.handlePaste
              }),
              this.isClearButtonLocal ? c("div", {
                class: "a_form_control__actions"
              }, [
                c(vu, {
                  alwaysTranslate: this.alwaysTranslate,
                  disabled: !1,
                  class: this.clearButtonClass,
                  onClear: this.clearModel
                })
              ]) : ""
            ]),
            this.controlsType === "plus-minus" && c("div", {
              class: "a_btn_group"
            }, [
              c(rt, {
                class: "a_btn a_btn_outline_secondary",
                iconLeft: gS,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_CURRENCY_BTN_DECREASE_",
                textScreenReader: "_A_INPUT_CURRENCY_BTN_DECREASE_",
                onClick: this.decrease
              }),
              c(rt, {
                class: "a_btn a_btn_outline_secondary",
                iconLeft: yS,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_CURRENCY_BTN_INCREASE_",
                textScreenReader: "_A_INPUT_CURRENCY_BTN_INCREASE_",
                onClick: this.increase
              })
            ]),
            this.currencySymbol && this.currencySymbolPosition === "right" && c("div", {
              class: "a_form_element_number__currency_symbol"
            }, this.currencySymbol)
          ]),
          c(Xt, {
            id: this.helpTextId,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(Yt, {
            id: this.errorsId,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
}, d$ = {
  name: "AInputFile",
  inheritAttrs: !1,
  mixins: [
    af
  ],
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    isMultiple: {
      type: Boolean,
      required: !1
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    modelUndefined: {
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number, Object, Array],
      required: !1
    },
    text: {
      type: String,
      required: !1,
      default: "Dateien auswählen"
    },
    type: {
      type: String,
      required: !1,
      default: "input"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      componentStyleHide: r
    } = Wt(e), {
      ariaDescribedbyLocal: s,
      changeModel: l,
      clearModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = Zt(e, t), m = f(e, "isMultiple"), L = f(e, "modelValue"), b = _(() => m.value ? !!(Se(L.value) && L.value.length > 0) : !!(nt(L.value) && Ti(L.value) > 0)), v = _(() => b.value ? m.value ? L.value : [L.value] : []), I = B(void 0), y = f(e, "disabled"), R = (M) => {
      if (y.value)
        return;
      const P = M.target.files;
      if (P && P.length) {
        const x = [];
        Y(P, (C) => {
          x.push({
            id: "",
            size: C.size,
            name: C.webkitRelativePath || C.relativePath || C.name,
            type: C.type,
            file: C
          });
        }), l({
          model: m.value ? x : x[0]
        });
      }
    }, D = f(e, "required"), w = _(() => D.value ? "*" : "");
    return {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      clearModel: o,
      componentStyleHide: r,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      inputRef: I,
      isErrors: E,
      isModel: b,
      modelValueListLocal: v,
      onBlur: p,
      onFocus: T,
      onInput: R,
      textAfterLabel: w
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__parent"
      }, [
        this.label && c(kt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          hideId: !0,
          type: this.type,
          isError: this.isErrors
        }),
        c("div", {}, [
          c("label", {
            for: this.htmlIdLocal,
            class: ["a_file__label a_form_control", this.labelClass, {
              disabled: this.disabled
            }],
            required: this.required,
            type: this.type
          }, [
            c("input", {
              ref: "inputRef",
              id: this.htmlIdLocal,
              type: "file",
              multiple: this.isMultiple,
              class: [
                "a_file__input",
                this.inputClass,
                {
                  a_form_control_invalid: this.isErrors
                }
              ],
              disabled: this.disabled,
              ariaRequired: this.required,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              ...this.inputAttributes,
              onInput: this.onInput,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }),
            c("span", {
              class: "a_file__label"
            }, this.text)
          ])
        ]),
        this.isModel && c("ul", {}, [
          this.modelValueListLocal.map((e) => c("li", {}, e.name))
        ]),
        c(Xt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(Yt, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, c$ = {
  props: {
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    }
  }
};
function f$(e, {
  currentValue: t = B(0),
  displayValue: n = _(() => ""),
  ensurePrecision: r = () => {
  },
  setCurrentValue: s = () => {
  },
  minLocal: l = _(() => {
  })
}) {
  const o = f(e, "disabled"), u = f(e, "modelValue"), h = f(e, "max"), A = f(e, "readonly"), E = _(() => vn(u.value) && u.value <= l.value), p = _(() => vn(u.value) && u.value >= h.value);
  return {
    increase: () => {
      if (A.value || o.value || p.value)
        return;
      const L = Number(n.value) || 0, b = r({ value: L, currentValue: t.value });
      s(b);
    },
    decrease: () => {
      if (A.value || o.value || E.value)
        return;
      const L = Number(n.value) || 0, b = r({ value: L, currentValue: t.value, coefficient: -1 });
      s(b);
    }
  };
}
function h$(e, {
  decrease: t = () => {
  },
  increase: n = () => {
  },
  inputRef: r = B({}),
  onBlur: s = () => {
  },
  setCurrentValue: l = () => {
  },
  userInput: o = B(null),
  currentValue: u = B(void 0),
  displayValue: h = _(() => ""),
  isTypeNumber: A = _(() => !0)
}) {
  const E = f(e, "type"), p = f(e, "eAllowed"), T = f(e, "min"), m = f(e, "modelValue");
  return {
    handleInput: (y) => {
      if (A.value) {
        const D = y.target.value;
        o.value = D;
        const w = D === "" ? null : Number(D);
        l(w, !1);
        return;
      }
      let R = y.target.value.trim();
      if (E.value === "integerNonNegative") {
        const D = R.match(/\d+/g);
        if (D !== null) {
          let w = parseInt(D.join(""), 10);
          w = Math.max(w, 0), R = w;
        } else
          R = null;
        l(R), r.value.value = R;
      } else if (E.value === "integerPositive") {
        if (R === "0")
          R = null;
        else {
          const D = R.match(/\d+/g);
          if (D !== null) {
            let w = parseInt(D.join(""), 10);
            w = Math.max(w, 1), R = w;
          } else
            R = null;
        }
        l(R), r.value.value = R;
      } else if (E.value === "integer") {
        const D = R.match(/\d+/g);
        if (D !== null) {
          let w = parseInt(D.join(""), 10);
          R.indexOf("-") !== -1 && (w = -w), R = w, l(R), r.value.value = R;
        } else R === "-" ? (R = "-", r.value.value = R) : (R = null, l(R), r.value.value = R);
      }
    },
    handleInputChange: (y) => {
      if (!A.value)
        return;
      const R = y.target.value, D = R !== "" ? Number(R) : "";
      (vn(D) && !Number.isNaN(D) || R === "") && l(D), o.value = null;
    },
    handleKeydown: (y) => {
      y.keyCode === Z.arrowUp ? (n(), y.preventDefault()) : y.keyCode === Z.arrowDown ? (t(), y.preventDefault()) : (!p.value && y.keyCode === Z.e || T.value >= 0 && y.keyCode === Z.minus || y.keyCode === Z.plus) && (y.preventDefault(), y.stopPropagation());
    },
    onBlurNumber: (y) => {
      (o.value !== null || !m.value && m.value !== 0) && (o.value = null, u.value = m.value, r.value.value = h.value), s(y);
    }
  };
}
function A$(e) {
  const t = f(e, "type"), n = f(e, "min");
  return {
    minLocal: _(() => {
      let s;
      return t.value === "integerNonNegative" ? s = 0 : t.value === "integerPositive" && (s = 1), (Pe(s) || !le(n.value) && n.value > s) && (s = n.value), s;
    })
  };
}
function E$(e, {
  verifyValue: t = () => {
  },
  changeModel: n = () => {
  }
}) {
  const r = f(e, "precision"), s = f(e, "modelValue"), l = B(null), o = B(null), u = () => {
    o.value = s.value;
  }, h = _(() => {
    if (l.value !== null)
      return l.value;
    let E = o.value;
    if (le(E))
      return "";
    if (vn(E)) {
      if (Number.isNaN(E))
        return "";
      Pe(r.value) || (E = E.toFixed(r.value));
    }
    return E;
  });
  return {
    currentValue: o,
    displayValue: h,
    initCurrentValue: u,
    setCurrentValue: (E, p = !0) => {
      const T = o.value, m = t(E);
      if (T !== m) {
        if (!p) {
          n({ model: m });
          return;
        }
        l.value = null, n({ model: m }), o.value = m;
      }
    },
    userInput: l
  };
}
function p$(e) {
  const t = f(e, "max"), n = f(e, "min"), r = f(e, "step"), s = f(e, "type"), l = _(() => s.value === "number"), o = _(() => l.value ? "number" : "text"), u = _(() => l.value ? {
    max: t.value,
    min: n.value,
    step: r.value
  } : {});
  return {
    inputType: o,
    isTypeNumber: l,
    numberAttributes: u
  };
}
function T$(e, {
  changeModel: t = () => {
  },
  minLocal: n = _(() => {
  })
}) {
  const r = f(e, "modelUndefined"), s = f(e, "stepStrictly"), l = f(e, "step"), o = f(e, "precision"), u = f(e, "max"), h = f(e, "modelValue"), A = (m) => {
    if (le(m))
      return 0;
    const L = m.toString(), b = L.indexOf(".");
    let v = 0;
    return b !== -1 && (v = L.length - b - 1), v;
  }, E = _(() => {
    const m = A(l.value);
    return Pe(o.value) ? Math.max(A(h.value), m) : (m > o.value && console.warn(
      "AInputNumber",
      "precision should not be less than the decimal places of step"
    ), o.value);
  });
  return {
    ensurePrecision: ({ value: m, currentValue: L, coefficient: b = 1 }) => vn(m) ? $o(m + l.value * b, E.value) : L,
    verifyValue: (m, L) => {
      let b = Number(m);
      return le(m) || Number.isNaN(b) ? null : (m === "" && (b = r.value), s.value && (b = $o(Math.round(b / l.value) * l.value, o.value)), Pe(o.value) || (b = $o(b, o.value)), b > u.value ? (b = u.value, L && t({ model: b })) : b < n.value && (b = n.value, L && t({ model: b })), b);
    }
  };
}
function S$(e) {
  const t = f(e, "inputWidth");
  return {
    inputWidthStyleValue: _(() => {
      let r = t.value;
      return vn(t.value) && (r = `${t.value}px`), Pe(r) ? {} : {
        "--a_input_number_width": r
      };
    })
  };
}
const an = B({
  propsDefault: {
    controlsType: "plus-minus",
    eAllowed: !1,
    iconPrepend: void 0,
    inputWidth: 200,
    isLabelFloat: !1,
    max: void 0,
    min: void 0,
    modelUndefined: void 0,
    placeholder: void 0,
    precision: void 0,
    readonly: void 0,
    step: 1,
    stepStrictly: void 0,
    type: "number"
  }
}), dde = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    an.value.propsDefault = {
      ...an.value.propsDefault,
      ...t
    };
  }
}, ri = {
  name: "AInputNumber",
  inheritAttrs: !1,
  mixins: [
    c$,
    af
  ],
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    controlsType: {
      type: String,
      required: !1,
      default: () => an.value.propsDefault.controlsType,
      validator: (e) => ["plus-minus", "arrows", "none"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    eAllowed: {
      type: Boolean,
      required: !1,
      default: () => an.value.propsDefault.eAllowed
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: () => an.value.propsDefault.iconPrepend
    },
    inputWidth: {
      type: [String, Number],
      required: !1,
      default: () => an.value.propsDefault.inputWidth
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: () => an.value.propsDefault.isLabelFloat
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: () => an.value.propsDefault.max
    },
    min: {
      type: Number,
      required: !1,
      default: () => an.value.propsDefault.min
    },
    modelUndefined: {
      required: !1,
      default: () => an.value.propsDefault.modelUndefined
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: () => an.value.propsDefault.placeholder
    },
    precision: {
      type: Number,
      validator: (e) => e >= 0 && e === Number.parseInt(`${e}`, 10),
      default: () => an.value.propsDefault.precision
    },
    readonly: {
      type: Boolean,
      required: !1,
      default: () => an.value.propsDefault.readonly
    },
    step: {
      type: Number,
      required: !1,
      default: () => an.value.propsDefault.step
    },
    stepStrictly: {
      type: Boolean,
      required: !1,
      default: () => an.value.propsDefault.stepStrictly
    },
    type: {
      type: String,
      required: !1,
      default: () => an.value.propsDefault.type,
      validator: (e) => ["number", "integerNonNegative", "integerPositive", "integer"].indexOf(e) !== -1
      // TODO: "float", "floatPositiv", "floatNonNegative"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      componentStyleHide: r
    } = Wt(e), {
      ariaDescribedbyLocal: s,
      changeModel: l,
      clearModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: m
    } = Zt(e, t), {
      isClearButtonLocal: L
    } = Iu(e, {
      isModel: p
    }), {
      minLocal: b
    } = A$(e), {
      inputType: v,
      isTypeNumber: I,
      numberAttributes: y
    } = p$(e), {
      placeholderAttributes: R
    } = ml(e), {
      inputWidthStyleValue: D
    } = S$(e), w = B(void 0), M = f(e, "disabled"), P = (Oe) => {
      if (M.value)
        return;
      const ve = Oe.target.value;
      l({
        model: +ve
      });
    }, {
      isAutofill: x
    } = Gc({ inputRef: w }), {
      ensurePrecision: C,
      verifyValue: q
    } = T$(e, {
      changeModel: l,
      minLocal: b
    }), {
      currentValue: W,
      displayValue: z,
      initCurrentValue: oe,
      setCurrentValue: te,
      userInput: ue
    } = E$(e, {
      verifyValue: q,
      changeModel: l
    }), {
      increase: re,
      decrease: ie
    } = f$(e, {
      currentValue: W,
      displayValue: z,
      ensurePrecision: C,
      setCurrentValue: te,
      minLocal: b
    }), {
      handleInput: Ae,
      handleInputChange: we,
      handleKeydown: me,
      onBlurNumber: ae
    } = h$(e, {
      currentValue: W,
      decrease: ie,
      displayValue: z,
      increase: re,
      inputRef: w,
      onBlur: T,
      setCurrentValue: te,
      userInput: ue,
      isTypeNumber: I
    });
    return oe(), tt(
      () => e.modelValue,
      (Oe) => {
        const ve = q(ue.value), Ke = q(Oe, !0);
        !vn(ve) && (!ve || ve !== Ke) && (W.value = Ke, ue.value = null);
      },
      { immediate: !0 }
    ), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      clearModel: o,
      componentStyleHide: r,
      currentValue: W,
      decrease: ie,
      displayValue: z,
      errorsId: u,
      handleInput: Ae,
      handleInputChange: we,
      handleKeydown: me,
      helpTextId: h,
      htmlIdLocal: A,
      increase: re,
      inputRef: w,
      inputType: v,
      inputWidthStyleValue: D,
      isAutofill: x,
      isClearButtonLocal: L,
      isErrors: E,
      isModel: p,
      numberAttributes: y,
      onBlurNumber: ae,
      onFocus: m,
      onInput: P,
      placeholderAttributes: R,
      userInput: ue
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__container"
      }, [
        c("div", {
          class: ["a_form_element__parent", {
            a_form_element__parent_float: this.isLabelFloat,
            a_form_element__parent_not_empty: this.isModel || this.isAutofill,
            a_form_element__parent_float_has_icon_prepend: this.iconPrepend,
            a_form_element__parent_invalid: this.isErrors
          }]
        }, [
          this.label && !this.isLabelFloat && c(kt, {
            id: this.htmlIdLocal,
            alwaysTranslate: this.alwaysTranslate,
            label: this.label,
            labelClass: this.labelClass,
            labelScreenReader: this.labelScreenReader,
            required: this.required,
            type: this.type,
            isLabelFloat: this.isLabelFloat,
            isError: this.isErrors
          }),
          c("div", {
            class: [
              "a_form_element_number",
              {
                a_form_element_number_controls: this.controlsType !== "none"
              }
            ]
          }, [
            c("div", {
              class: "a_form_element",
              style: {
                ...this.inputWidthStyleValue
              }
            }, [
              this.label && this.isLabelFloat && c(kt, {
                id: this.htmlIdLocal,
                alwaysTranslate: this.alwaysTranslate,
                label: this.label,
                labelClass: this.labelClass,
                labelScreenReader: this.labelScreenReader,
                required: this.required,
                type: this.type,
                isLabelFloat: this.isLabelFloat,
                isError: this.isErrors
              }),
              this.iconPrepend && c(lt, {
                icon: this.iconPrepend,
                class: "a_input__icon_prepend"
              }),
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                autocomplete: this.autocomplete,
                value: this.displayValue,
                type: this.inputType,
                class: [
                  "a_form_control a_input a_input_number",
                  this.inputClass,
                  {
                    a_form_element_with_one_btn: this.isClearButtonLocal,
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabled,
                ariaRequired: this.required,
                ariaInvalid: this.isErrors,
                "aria-describedby": this.ariaDescribedbyLocal,
                ...this.numberAttributes,
                ...this.placeholderAttributes,
                ...this.inputAttributes,
                onInput: this.handleInput,
                onChange: this.handleInputChange,
                onKeydown: this.handleKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlurNumber
              }),
              this.isClearButtonLocal ? c("div", {
                class: "a_form_control__actions"
              }, [
                c(vu, {
                  alwaysTranslate: this.alwaysTranslate,
                  disabled: this.disabled,
                  class: this.clearButtonClass,
                  onClear: this.clearModel
                })
              ]) : ""
            ]),
            this.controlsType === "plus-minus" && c("div", {
              class: "a_btn_group"
            }, [
              c(rt, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_btn a_btn_outline_secondary",
                iconLeft: gS,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_NUMBER_BTN_DECREASE_",
                textScreenReader: "_A_INPUT_NUMBER_BTN_DECREASE_",
                onClick: this.decrease
              }),
              c(rt, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_btn a_btn_outline_secondary",
                iconLeft: yS,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_NUMBER_BTN_INCREASE_",
                textScreenReader: "_A_INPUT_NUMBER_BTN_INCREASE_",
                onClick: this.increase
              })
            ])
          ]),
          c(Xt, {
            id: this.helpTextId,
            alwaysTranslate: this.alwaysTranslate,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(Yt, {
            id: this.errorsId,
            alwaysTranslate: this.alwaysTranslate,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
};
function m$({
  idMin: e = _(() => "")
}) {
  return {
    setFocusToMinInput: () => {
      const n = document.getElementById(e.value);
      n && n.focus();
    }
  };
}
function L$({
  htmlIdLocal: e = _(() => "")
}) {
  const t = _(() => `${e.value}_min`);
  return {
    idMax: _(() => `${e.value}_max`),
    idMin: t
  };
}
function b$(e, {
  htmlIdLocal: t = _(() => ""),
  idMax: n = _(() => ""),
  idMin: r = _(() => "")
}) {
  const s = f(e, "inputAttributes"), l = f(e, "inputAttributesMax"), o = f(e, "inputAttributesMin"), u = _(() => `${t.value}_label`), h = _(() => ({
    "aria-labelledby": `${u.value} ${r.value}`,
    ...s.value,
    ...o.value
  }));
  return {
    inputAttributesMaxLocal: _(() => ({
      "aria-labelledby": `${u.value} ${n.value}`,
      ...s.value,
      ...l.value
    })),
    inputAttributesMinLocal: h
  };
}
function v$(e, {
  changeModel: t = () => ({})
}) {
  const n = f(e, "keyMax"), r = f(e, "keyMin"), s = f(e, "modelValue"), l = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[r.value];
  }), o = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[n.value];
  });
  return {
    changeModelMax: ({ model: A }) => {
      const E = pe(s.value);
      E[n.value] = A, t({ model: E });
    },
    changeModelMin: ({ model: A }) => {
      const E = pe(s.value);
      E[r.value] = A, t({ model: E });
    },
    modelValueMax: o,
    modelValueMin: l
  };
}
function I$(e) {
  const t = f(e, "type");
  return {
    typeLocal: _(() => t.value.replace("Range", ""))
  };
}
const of = ["numberRange", "integerNonNegativeRange", "integerPositiveRange", "integerRange"], RS = {};
Y(of, (e) => {
  RS[e] = !0;
});
const OS = RS, Ro = {
  name: "AInputNumberRange",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    controlsType: {
      type: String,
      required: !1,
      default: "plus-minus",
      validator: (e) => ["plus-minus", "arrows"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_input_number_range_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesMax: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesMin: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputWidth: {
      type: [Number, String],
      required: !1,
      default: 200
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyMax: {
      tpe: String,
      required: !1,
      default: "max"
    },
    keyMin: {
      tpe: String,
      required: !1,
      default: "min"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelMax: {
      type: String,
      required: !1,
      default: "_A_INPUT_NUMBER_RANGE_LABEL_MAX_"
    },
    labelMin: {
      type: String,
      required: !1,
      default: "_A_INPUT_NUMBER_RANGE_LABEL_MIN_"
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: void 0
    },
    min: {
      type: Number,
      required: !1,
      default: void 0
    },
    modelUndefined: {
      required: !1,
      default: void 0
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholderMax: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholderMin: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    precision: {
      type: Number,
      validator: (e) => e >= 0 && e === Number.parseInt(`${e}`, 10)
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    step: {
      type: Number,
      required: !1,
      default: 1
    },
    stepStrictly: {
      type: Boolean,
      required: !1
    },
    type: {
      type: String,
      required: !1,
      default: "numberRange",
      validator: (e) => of.indexOf(e) !== -1
      // TODO: "float", "floatPositiv", "floatNonNegative"
    }
  },
  emits: [
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      componentStyleHide: r
    } = Wt(e), {
      changeModel: s,
      errorsId: l,
      helpTextId: o,
      htmlIdLocal: u,
      isErrors: h
    } = Zt(e, t), {
      changeModelMax: A,
      changeModelMin: E,
      modelValueMax: p,
      modelValueMin: T
    } = v$(e, {
      changeModel: s
    }), {
      idMax: m,
      idMin: L
    } = L$({
      htmlIdLocal: u
    }), {
      typeLocal: b
    } = I$(e), {
      inputAttributesMaxLocal: v,
      inputAttributesMinLocal: I
    } = b$(e, {
      htmlIdLocal: u,
      idMax: m,
      idMin: L
    }), {
      setFocusToMinInput: y
    } = m$({
      idMin: L
    }), {
      destroyEventBusClickLabel: R,
      initEventBusClickLabel: D
    } = sf({
      htmlIdLocal: u,
      clickLabel: y
    });
    return D(), Ct(() => {
      R();
    }), {
      attributesToExcludeFromRender: n,
      changeModelMax: A,
      changeModelMin: E,
      componentStyleHide: r,
      errorsId: l,
      helpTextId: o,
      htmlIdLocal: u,
      idMax: m,
      idMin: L,
      inputAttributesMaxLocal: v,
      inputAttributesMinLocal: I,
      isErrors: h,
      modelValueMax: p,
      modelValueMin: T,
      typeLocal: b
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      class: "a_input_number_range",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_invalid: this.isErrors
        }]
      }, [
        this.label ? c(kt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: !1,
          isError: this.isErrors
        }) : "",
        c("div", {
          class: "a_input_number_range__content"
        }, [
          c("div", {
            class: "a_input_number_range__group a_input_number_range__group_min"
          }, [
            c(kt, {
              id: this.idMin,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_input_number_range__label a_input_number_range__label_min",
              isLabelFloat: !1,
              label: this.labelMin,
              isError: this.isErrors
            }),
            c(ri, {
              id: this.idMin,
              alwaysTranslate: this.alwaysTranslate,
              controlsType: this.controlsType,
              iconPrepend: this.iconPrepend,
              inputWidth: this.inputWidth,
              isLabelFloat: !0,
              max: this.max,
              min: this.min,
              modelUndefined: this.modelUndefined,
              precision: this.precision,
              readonly: this.readonly,
              step: this.step,
              stepStrictly: this.stepStrictly,
              type: this.typeLocal,
              disabled: this.disabled,
              inputAttributes: this.inputAttributesMinLocal,
              required: this.required,
              modelValue: this.modelValueMin,
              placeholder: this.placeholderMin,
              change: this.changeModelMin
            })
          ]),
          c("div", {
            class: "a_input_number_range__group a_input_number_range__group_max"
          }, [
            c(kt, {
              id: this.idMax,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_input_number_range__label a_input_number_range__label_max",
              isLabelFloat: !1,
              label: this.labelMax,
              isError: this.isErrors
            }),
            c(ri, {
              id: this.idMax,
              alwaysTranslate: this.alwaysTranslate,
              controlsType: this.controlsType,
              iconPrepend: this.iconPrepend,
              inputWidth: this.inputWidth,
              isLabelFloat: !0,
              max: this.max,
              min: this.min,
              modelUndefined: this.modelUndefined,
              precision: this.precision,
              readonly: this.readonly,
              step: this.step,
              stepStrictly: this.stepStrictly,
              type: this.typeLocal,
              disabled: this.disabled,
              inputAttributes: this.inputAttributesMaxLocal,
              required: this.required,
              modelValue: this.modelValueMax,
              placeholder: this.placeholderMax,
              change: this.changeModelMax
            })
          ])
        ]),
        c(Xt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors ? c(Yt, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        }) : ""
      ])
    ]) : null;
  }
};
function g$(e) {
  const t = f(e, "heightCss"), n = _(() => {
    if (t.value)
      return `height: ${t.value}`;
  }), r = _(() => {
    if (t.value)
      return `max-height: ${t.value}`;
  });
  return {
    styleHeight: n,
    styleMaxHeight: r
  };
}
function y$(e, {
  changeModel: t = () => {
  }
}) {
  const n = f(e, "disabled"), r = f(e, "modelUndefined"), s = f(e, "modelValue"), l = B(void 0), o = B(""), u = B(""), h = B(void 0), A = () => {
    l.value = pe(s.value) || "";
  }, E = () => {
    n.value || t({
      model: r.value
    });
  }, p = () => {
    try {
      s.value ? o.value = JSON.stringify(s.value, void 0, 2) : o.value = "", u.value = o.value, h.value = void 0;
    } catch {
    }
  }, T = (v) => {
    if (!n.value)
      if (!u.value || u.value.length === 0)
        t({
          $event: v,
          model: r.value
        });
      else
        try {
          const I = JSON.parse(u.value);
          t({
            $event: v,
            model: I
          }), o.value = JSON.stringify(I, void 0, 2), h.value = null;
        } catch (I) {
          h.value = I.toString();
        }
  };
  return {
    clearModel: E,
    formatJson: () => {
      try {
        u.value = JSON.stringify(JSON.parse(u.value), void 0, 2);
      } catch (v) {
        h.value = v.toString();
      }
    },
    initialValue: l,
    initInitialValue: A,
    jsonString: o,
    jsonStringInput: u,
    JSONtoString: p,
    onInput: (v) => {
      n.value || (u.value = v.target.value, T());
    },
    parseError: h,
    resetModel: () => {
      n.value || (t({
        model: l.value
      }), setTimeout(() => {
        p();
      }));
    },
    stringToJSON: T
  };
}
const R$ = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-repeat" viewBox="0 0 16 16">
  <path d="M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41m-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9"/>
  <path fill-rule="evenodd" d="M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5 5 0 0 0 8 3M3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9z"/>
</svg>`, O$ = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-braces" viewBox="0 0 16 16">
  <path d="M2.114 8.063V7.9c1.005-.102 1.497-.615 1.497-1.6V4.503c0-1.094.39-1.538 1.354-1.538h.273V2h-.376C3.25 2 2.49 2.759 2.49 4.352v1.524c0 1.094-.376 1.456-1.49 1.456v1.299c1.114 0 1.49.362 1.49 1.456v1.524c0 1.593.759 2.352 2.372 2.352h.376v-.964h-.273c-.964 0-1.354-.444-1.354-1.538V9.663c0-.984-.492-1.497-1.497-1.6M13.886 7.9v.163c-1.005.103-1.497.616-1.497 1.6v1.798c0 1.094-.39 1.538-1.354 1.538h-.273v.964h.376c1.613 0 2.372-.759 2.372-2.352v-1.524c0-1.094.376-1.456 1.49-1.456V7.332c-1.114 0-1.49-.362-1.49-1.456V4.352C13.51 2.759 12.75 2 11.138 2h-.376v.964h.273c.964 0 1.354.444 1.354 1.538V6.3c0 .984.492 1.497 1.497 1.6"/>
</svg>`, CS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
  <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"/>
  <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"/>
</svg>`, NS = {
  name: "AJson",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    heightCss: {
      type: String,
      required: !1,
      default: "400px;"
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_json_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = mi(e), {
      attributesToExcludeFromRender: r
    } = Nt(e), {
      componentStyleHide: s
    } = Wt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: m
    } = Zt(e, t), {
      styleHeight: L,
      styleMaxHeight: b
    } = g$(e), {
      clearModel: v,
      formatJson: I,
      initialValue: y,
      initInitialValue: R,
      jsonString: D,
      jsonStringInput: w,
      JSONtoString: M,
      onInput: P,
      parseError: x,
      resetModel: C
    } = y$(e, {
      changeModel: o
    });
    return R(), M(), {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: r,
      changeModel: o,
      clearModel: v,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: u,
      formatJson: I,
      helpTextId: h,
      htmlIdLocal: A,
      onInput: P,
      initialValue: y,
      initInitialValue: R,
      isErrors: E,
      isModel: p,
      jsonString: D,
      jsonStringInput: w,
      JSONtoString: M,
      onBlur: T,
      onFocus: m,
      parseError: x,
      resetModel: C,
      styleHeight: L,
      styleMaxHeight: b
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(kt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: !1,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required
        }) : "",
        c("div", {
          class: "a_columns a_columns_count_12"
        }, [
          c("div", {
            class: "a_column a_column_6 a_column_12_touch"
          }, [
            c("div", {
              class: "a_d_flex a_justify_content_between"
            }, [
              c(kt, {
                id: this.htmlIdLocal,
                alwaysTranslate: this.alwaysTranslate,
                extra: this.extra,
                idSuffix: "_input",
                isError: this.isErrors,
                isLabelFloat: !1,
                label: "_A_JSON_INPUT_"
              }),
              c("div", {
                class: "a_btn_group",
                role: "group"
              }, [
                c(ye, {
                  class: [
                    "a_btn",
                    {
                      a_btn_transparent_info: !this.parseError,
                      a_btn_transparent_dark: this.parseError
                    }
                  ],
                  disabled: !!this.parseError,
                  iconLeft: O$,
                  textScreenReader: "_A_JSON_FORMAT_INPUT_",
                  title: "_A_JSON_FORMAT_INPUT_",
                  type: "button",
                  onClick: this.formatJson
                }),
                c(ye, {
                  class: "a_btn a_btn_transparent_warning",
                  iconLeft: R$,
                  textScreenReader: "_A_JSON_RESET_INPUT_",
                  title: "_A_JSON_RESET_INPUT_",
                  type: "button",
                  onClick: this.JSONtoString
                }),
                c(ye, {
                  class: "a_btn a_btn_transparent_danger",
                  iconLeft: CS,
                  textScreenReader: "_A_JSON_DISCARD_ALL_CHANGES_",
                  title: "_A_JSON_DISCARD_ALL_CHANGES_",
                  type: "button",
                  onClick: this.resetModel
                })
              ])
            ]),
            c("div", {
              class: "a_form_element a_form_element_textarea"
            }, [
              c("textarea", {
                ref: "textareaRef",
                id: this.htmlIdLocal,
                style: this.styleHeight,
                value: this.jsonStringInput,
                "aria-describedby": this.ariaDescribedbyLocal,
                ariaInvalid: this.isErrors,
                ariaRequired: this.required,
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: [
                  "a_form_control a_json__textarea",
                  this.inputClass,
                  {
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabledAttribut,
                spellcheck: "false",
                ...this.inputAttributes,
                onInput: this.onInput,
                onFocus: this.onFocus,
                onBlur: this.onBlur
              })
            ]),
            this.parseError ? c(Te, {
              alwaysTranslate: this.alwaysTranslate,
              class: "a_form_element__invalid_text",
              html: "_A_JSON_ERROR_HTML_{{error}}_",
              extra: {
                error: this.parseError
              }
            }) : ""
          ]),
          c("div", {
            class: "a_column a_column_6 a_column_12_touch"
          }, [
            c(Te, {
              tag: "div",
              text: "_A_JSON_CURRENT_VALUE_"
            }),
            xt(c("div", {
              class: "a_json__code",
              style: this.styleMaxHeight
            }), [
              [hn, this.jsonString]
            ])
          ])
        ]),
        c(Xt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(Yt, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function C$(e) {
  const t = f(e, "label");
  return {
    hasLabel: _(() => !le(t.value))
  };
}
function N$(e, {
  changeModel: t = () => {
  }
}) {
  const n = f(e, "modelValue"), r = f(e, "trueValue"), s = f(e, "falseValue"), l = f(e, "disabled"), o = _(() => n.value === r.value), u = (A) => {
    l.value || (setTimeout(() => {
      const E = o.value ? s.value : r.value;
      t({
        model: E,
        $event: A
      });
    }), A.stopPropagation(), A.preventDefault());
  };
  return {
    isChecked: o,
    onClick: u,
    onKeydown: (A) => {
      (A.keyCode === Z.enter || A.keyCode === Z.space) && u(A);
    }
  };
}
const Pu = {
  name: "AOneCheckbox",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    falseValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_one_checkbox_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelTitle: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    trueValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !0
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = mi(e), {
      attributesToExcludeFromRender: r
    } = Nt(e), {
      componentStyleHide: s
    } = Wt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = Zt(e, t), {
      isChecked: m,
      onClick: L,
      onKeydown: b
    } = N$(e, {
      changeModel: o
    }), {
      hasLabel: v
    } = C$(e);
    return {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: r,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: u,
      hasLabel: v,
      helpTextId: h,
      htmlIdLocal: A,
      isChecked: m,
      isErrors: E,
      onBlur: p,
      onClick: L,
      onFocus: T,
      onKeydown: b
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent"]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            class: ["a_custom_control a_custom_checkbox", {
              a_custom_control_invalid: this.isErrors
            }]
          }, [
            c("input", {
              id: this.htmlIdLocal,
              value: this.modelValue,
              type: "checkbox",
              checked: this.isChecked,
              class: "a_custom_control_input",
              disabled: this.disabledAttribut,
              ariaRequired: this.required,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              indeterminate: this.indeterminate,
              ...this.inputAttributes,
              onClick: this.onClick,
              onKeydown: this.onKeydown,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }),
            c(ye, {
              alwaysTranslate: this.alwaysTranslate,
              class: [
                "a_custom_control_label",
                {
                  a_custom_control_label_width_auto: this.isWidthAuto
                }
              ],
              extra: this.extra,
              for: this.htmlIdLocal,
              tag: "label",
              title: this.isLabelTitle ? this.label : void 0,
              type: "text",
              ...this.labelAttributes
            }, () => {
              var e;
              return [
                (e = this.$slots) != null && e[this.slotName] ? this.$slots[this.slotName]({
                  id: this.htmlIdLocal,
                  labelClass: [
                    "a_custom_control_label__text",
                    this.labelClass
                  ],
                  label: this.label,
                  labelScreenReader: this.labelScreenReader,
                  props: this.$props,
                  required: this.required
                }) : this.hasLabel && c("span", {
                  class: [
                    "a_custom_control_label__text",
                    this.labelClass
                  ]
                }, [
                  c(ye, {
                    alwaysTranslate: this.alwaysTranslate,
                    extra: this.extra,
                    html: this.label,
                    textScreenReader: this.labelScreenReader,
                    tag: "span",
                    title: this.isLabelTitle ? this.label : void 0,
                    type: "text"
                  }),
                  this.required ? c("span", null, "*") : ""
                ])
              ];
            })
          ])
        ]),
        c(Xt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(Yt, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function D$(e, {
  changeModel: t = () => {
  },
  dataKeyByKeyIdLocal: n = _(() => ({}))
}) {
  const r = f(e, "disabled"), s = f(e, "isModelArray"), l = f(e, "modelValue");
  return {
    onChangeModelValue: ({ model: u, $event: h }) => {
      r.value || (s.value ? !l.value || l.value.length === 0 ? setTimeout(() => {
        t({
          model: [u],
          $event: h
        });
      }) : setTimeout(() => {
        const A = [];
        Y(l.value, (E) => {
          n.value[E] || A.push(E);
        }), A.push(u), t({
          model: A,
          $event: h
        });
      }) : setTimeout(() => {
        t({
          model: u,
          $event: h
        });
      }));
    }
  };
}
const DS = {
  name: "ARadio",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    classDataParent: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => []
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_radio_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inline: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isModelArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: void 0
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "value"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    search: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: void 0
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrder: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_",
        notElementsWithSearch: "_A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_",
        search: "_A_RADIO_SEARCH_"
      })
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "onSearchOutside",
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      componentStyleHide: r
    } = Wt(e), {
      ariaDescribedbyLocal: s,
      changeModel: l,
      errorsId: o,
      helpTextId: u,
      htmlIdLocal: h,
      isErrors: A,
      onBlur: E,
      onFocus: p
    } = Zt(e, t), {
      textAfterLabel: T
    } = yu(e), {
      dataFromServer: m,
      dataExtraLocal: L,
      dataKeyByKeyIdLocal: b,
      dataLocal: v,
      hasDataExtra: I
    } = tf(e), {
      loadDataFromServer: y,
      loadDataFromServerForSearchAPI: R,
      loadingDataFromServer: D,
      loadingSearchApi: w,
      onSearchInApi: M,
      searchApiLocal: P,
      updateUrlPropsComputed: x,
      urlPropsComputed: C
    } = Zc(e, {
      changeModel: l,
      dataExtraLocal: L,
      dataFromServer: m
    }), {
      loadingLocal: q
    } = nf(e, {
      loadingDataFromServer: D
    });
    ef(t, {
      dataKeyByKeyIdLocal: b,
      dataLocal: v
    });
    const {
      dataSort: W
    } = Qc(e, {
      data: v
    }), {
      dataGrouped: z,
      groupsForLever: oe,
      hasKeyGroup: te,
      keyGroupArray: ue
    } = Jc(e, {
      data: W
    }), {
      hasNotElementsExtraWithSearch: re,
      hasNotElementsWithSearch: ie,
      idForButtonSearchOutside: Ae,
      modelSearch: we,
      modelSearchLowerCase: me,
      modelSearchOutside: ae,
      onSearchOutside: Oe,
      searching: ve,
      searchingElements: Ke,
      searchingElementsExtra: he,
      searchingGroups: k,
      searchingGroupsWithSearchInGroup: G,
      searchOutsideOrApi: ee,
      searchOutsideRef: de,
      updateModelSearch: Ne,
      updateModelSearchOutside: Fe
    } = rf(e, t, {
      data: W,
      dataExtra: L,
      groupsForLever: oe,
      htmlIdLocal: h,
      hasKeyGroup: te,
      keyGroupArray: ue,
      searchApiLocal: P,
      onSearchInApi: M
    }), {
      onChangeModelValue: Ue
    } = D$(e, {
      changeModel: l,
      dataKeyByKeyIdLocal: b
    }), {
      iconCollapse: Xe,
      initIsCollapsedLocal: Ie,
      isCollapsedLocal: Ge,
      titleCollapse: ft,
      toggleCollapse: qe
    } = jc(e, t), {
      groupId: at
    } = gu(e, {
      htmlIdLocal: h
    });
    return tt(C, x, {
      deep: !0
    }), Ie(), y(), R(), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      componentStyleHide: r,
      dataExtraLocal: L,
      dataGrouped: z,
      dataSort: W,
      errorsId: o,
      groupId: at,
      groupsForLever: oe,
      hasDataExtra: I,
      hasKeyGroup: te,
      hasNotElementsExtraWithSearch: re,
      hasNotElementsWithSearch: ie,
      helpTextId: u,
      htmlIdLocal: h,
      iconCollapse: Xe,
      idForButtonSearchOutside: Ae,
      isCollapsedLocal: Ge,
      isErrors: A,
      loadingLocal: q,
      loadingSearchApi: w,
      modelSearch: we,
      modelSearchLowerCase: me,
      modelSearchOutside: ae,
      onBlur: E,
      onChangeModelValue: Ue,
      onFocus: p,
      onSearchOutside: Oe,
      searching: ve,
      searchingElements: Ke,
      searchingElementsExtra: he,
      searchingGroups: k,
      searchingGroupsWithSearchInGroup: G,
      searchOutsideOrApi: ee,
      searchOutsideRef: de,
      textAfterLabel: T,
      titleCollapse: ft,
      toggleCollapse: qe,
      updateModelSearch: Ne,
      updateModelSearchOutside: Fe
    };
  },
  render() {
    var e, t, n;
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: [
          "a_form_element__parent",
          {
            a_radio_inline: this.inline
          }
        ]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("fieldset", {
            id: this.htmlIdLocal,
            tabindex: -1,
            class: [
              "a_fieldset",
              this.classFieldset,
              {
                a_fieldset_no_border: !this.hasBorder,
                a_fieldset_invalid: this.isErrors,
                a_fieldset_collapsed: this.isCollapsedLocal
              }
            ],
            "aria-describedby": this.ariaDescribedbyLocal
          }, [
            this.label || this.labelScreenReader ? c(ye, {
              type: "text",
              alwaysTranslate: this.alwaysTranslate,
              tag: "legend",
              class: [
                "a_legend",
                {
                  a_legend_invalid: this.isErrors
                },
                this.labelClass
              ],
              extra: this.extra,
              html: this.label,
              textScreenReader: this.labelScreenReader,
              textAfter: this.textAfterLabel
            }) : "",
            this.collapsible ? c(ye, {
              "aria-controls": this.groupId,
              "aria-expanded": !this.isCollapsedLocal,
              alwaysTranslate: this.alwaysTranslate,
              class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
              iconLeft: this.iconCollapse,
              title: this.titleCollapse,
              textScreenReader: this.titleCollapse,
              type: "button",
              onClick: this.toggleCollapse
            }) : "",
            c("div", {
              id: this.groupId,
              class: "a_fieldset__content"
            }, [
              this.searchOutsideOrApi ? c("div", {
                class: "a_fieldset__search"
              }, [
                c("form", {
                  onSubmit: this.onSearchOutside
                }, [
                  c("div", {
                    class: "input-group"
                  }, [
                    c(Ln, {
                      alwaysTranslate: this.alwaysTranslate,
                      label: ((e = this.texts) == null ? void 0 : e.search) || "_A_RADIO_SEARCH_",
                      inputClass: "a_select__element_clickable",
                      modelValue: this.modelSearchOutside,
                      modelUndefined: "",
                      "onUpdate:modelValue": this.updateModelSearchOutside
                    }),
                    c(ye, {
                      alwaysTranslate: this.alwaysTranslate,
                      ariaDisabled: this.loadingSearchApi,
                      class: "a_btn a_btn_primary",
                      disabled: this.disabled,
                      iconLeft: Ol,
                      type: "submit"
                    })
                  ])
                ])
              ]) : "",
              this.search ? c(Ln, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_fieldset__search",
                label: ((t = this.texts) == null ? void 0 : t.search) || "_A_RADIO_SEARCH_",
                modelValue: this.modelSearch,
                modelUndefined: "",
                "onUpdate:modelValue": this.updateModelSearch
              }) : "",
              this.loadingLocal ? c(cl) : "",
              this.hasDataExtra ? c("div", {
                class: "a_radio__data_extra"
              }, [
                ...this.dataExtraLocal.map((r, s) => c($d, {
                  key: r[Ye],
                  id: this.htmlIdLocal,
                  alwaysTranslate: this.alwaysTranslate,
                  idSuffix: "extra",
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataItem: r,
                  disabled: this.disabled,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  itemIndex: s,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElementsExtra,
                  slotName: this.slotName,
                  slotAppendName: this.slotAppendName,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.hasNotElementsExtraWithSearch ? "" : c("div", {
                  class: "a_divider",
                  ariaHidden: !0
                })
              ]) : "",
              c("div", {}, this.hasKeyGroup ? [
                c(Vc, {
                  id: `${this.htmlIdLocal}_lev_0`,
                  alwaysTranslate: this.alwaysTranslate,
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataGrouped: this.dataGrouped,
                  disabled: this.disabled,
                  groupsForLever: this.groupsForLever,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  levelIndex: 0,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElements,
                  searchingGroups: this.searchingGroups,
                  searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  type: "radio",
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)
              ] : [
                c("div", {
                  class: [
                    "a_radio_data",
                    {
                      a_btn_group: this.isButtonGroup
                    },
                    this.classDataParent
                  ]
                }, [
                  ...this.dataSort.map((r, s) => c($d, {
                    key: r[Ye],
                    id: this.htmlIdLocal,
                    alwaysTranslate: this.alwaysTranslate,
                    classButtonGroupDefault: this.classButtonGroupDefault,
                    dataItem: r,
                    disabled: this.disabled,
                    isButtonGroup: this.isButtonGroup,
                    isErrors: this.isErrors,
                    isWidthAuto: this.isWidthAuto,
                    itemIndex: s,
                    keyDisabled: this.keyDisabled,
                    keyTitle: this.keyTitle,
                    keyTitleCallback: this.keyTitleCallback,
                    modelSearch: this.modelSearchLowerCase,
                    modelValue: this.modelValue,
                    searching: this.searching,
                    searchingElements: this.searchingElements,
                    slotName: this.slotName,
                    slotAppendName: this.slotAppendName,
                    onChangeModelValue: this.onChangeModelValue
                  }, this.$slots))
                ])
              ]),
              !this.dataSort.length || this.hasNotElementsWithSearch ? c(Te, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_form__not_elements",
                text: ((n = this.texts) == null ? void 0 : n.notElementsWithSearch) || "_A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_"
              }) : ""
            ])
          ])
        ]),
        c(Xt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(Yt, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, YE = {
  name: "ASelectLabelElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Object,
      required: !0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = f(e, "data");
    return {
      currentLabel: _(() => t.value[St])
    };
  },
  render() {
    return c("span", {}, [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        item: this.data,
        label: this.currentLabel,
        inDropdown: !1
      }) : xt(c("span"), [
        [hn, this.currentLabel]
      ])
    ]);
  }
}, XE = {
  name: "ASelectValueCloseable",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hideDeleteButton: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, { emit: t }) {
    const n = f(e, "data"), r = _(() => n.value[St]), s = _(() => n.value[Ye]);
    return {
      closeModel: (o) => {
        t("changeModelValue", {
          currentValue: s.value,
          $event: o,
          isSelected: !0
        }), o.stopPropagation(), o.preventDefault();
      },
      currentLabel: r
    };
  },
  render() {
    return c("li", {
      class: "a_select__ul_closeable__item"
    }, [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        item: this.data,
        label: this.currentLabel,
        inDropdown: !1
      }) : c(Te, {
        alwaysTranslate: this.alwaysTranslate,
        tag: "span",
        text: this.currentLabel,
        extra: this.data.extra
      }),
      !this.hideDeleteButton && c("button", {
        class: "a_btn a_btn_link a_select__ul_closeable__item__btn",
        type: "button",
        tabindex: -1,
        disabled: this.disabled,
        onClick: this.closeModel
      }, [
        c(lt, {
          icon: ca
        })
      ])
    ]);
  }
};
function B$(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = f(e, "disabled"), r = _(() => `${t.value}_container`), s = _(() => `${t.value}_list`), l = _(() => `${t.value}_label`), o = _(() => n.value ? void 0 : 0);
  return {
    ariaLabelledby: l,
    containerId: r,
    idForList: s,
    tabindex: o
  };
}
function w$(e) {
  const t = f(e, "disabled"), n = f(e, "exclusiveOptionValue"), r = f(e, "isExclusiveOptionEnabled"), s = f(e, "modelValue"), l = _(() => r.value ? s.value && s.value.indexOf(n.value) !== -1 : !1), o = _(() => l.value || t.value), u = _(() => o.value || void 0);
  return {
    disabledAttribut: _(() => t.value || void 0),
    disabledLocal: o,
    disabledLocalAttribut: u,
    isExclusiveOptionSelected: l
  };
}
function P$(e, {
  isMultiselect: t = _(() => !1)
}) {
  const n = f(e, "isSelectAll"), r = f(e, "isDeselectAll");
  return {
    isDividerSelectDeselectVisible: _(() => t.value && (n.value || r.value))
  };
}
function F$(e) {
  const t = f(e, "exclusiveOptionLabel"), n = f(e, "exclusiveOptionValue"), r = f(e, "extra"), s = f(e, "isExclusiveOptionEnabled"), l = _(() => {
    if (s.value)
      return {
        [Ye]: n.value,
        [St]: wt({
          placeholder: t.value,
          extra: r.value
        })
      };
  }), o = _(() => Da([l.value], Ye));
  return {
    exclusiveOption: l,
    exclusiveDataKeyByKeyIdLocal: o
  };
}
function x$(e, {
  dataKeyByKeyIdLocal: t = _(() => ({}))
}) {
  const n = f(e, "countMultiselect"), r = f(e, "exclusiveOptionValue"), s = f(e, "modelValue"), l = f(e, "type"), o = _(() => l.value === "multiselect"), u = _(() => !o.value || !s.value || !Se(s.value) ? [] : Pt(s.value, (T) => t.value[T] || T === r.value)), h = _(() => o.value ? u.value.length > 0 : !le(s.value)), A = _(() => {
    var T;
    return ((T = u.value) == null ? void 0 : T.length) || 0;
  }), E = _(() => A.value > n.value), p = _(() => ({
    [St]: "_A_SELECT_MORE_SELECTED_{{count}}_",
    extra: {
      count: A.value - n.value
    }
  }));
  return {
    isModelLengthLimitExceeded: E,
    isModelValue: h,
    isMultiselect: o,
    limitExceededModelData: p,
    modelValueLength: A,
    modelValueMultiselectFiltered: u
  };
}
function M$(e, {
  changeModel: t = () => {
  },
  dataAll: n = _(() => []),
  dataKeyByKeyIdLocal: r = _(() => ({})),
  disabledLocal: s = _(() => !1),
  isMultiselect: l = _(() => !1),
  togglePopover: o = () => {
  }
}) {
  const u = f(e, "countMultiselect"), h = f(e, "disabled"), A = f(e, "exclusiveOptionValue"), E = f(e, "isCloseByClick"), p = f(e, "isExclusiveOptionEnabled"), T = f(e, "deselectable"), m = f(e, "maxCountMultiselect"), L = f(e, "modelValue"), b = _(() => !l.value || !m.value ? !1 : fe(L.value, "length") >= m.value), v = _(() => Pe(E.value) ? !l.value : E.value), I = ({ currentValue: P, $event: x, isSelected: C }) => {
    let q;
    if (l.value)
      if (q = pe(L.value) || [], C) {
        const W = q.indexOf(P);
        q.splice(W, 1), p.value && P === A.value && (q = []);
      } else if (p.value && P === A.value)
        q = [P];
      else {
        if (b.value)
          return;
        q.push(P);
      }
    else if (C)
      if (T.value)
        q = void 0;
      else
        return;
    else
      q = P;
    t({
      model: q,
      $event: x,
      currentModel: P,
      item: r.value[P]
    }), v.value && o();
  }, y = (P) => {
    const x = AT(L.value, u.value);
    t({
      model: x,
      $event: P
    });
  }, R = () => {
    if (s.value)
      return;
    const P = n.value.map((x) => x[Ye]);
    t({
      model: P
    });
  }, D = (P) => {
    const x = P.keyCode;
    (x === Z.enter || x === Z.space) && (R(), P.preventDefault());
  }, w = () => {
    h.value || t({
      model: []
    });
  };
  return {
    deleteExceededItems: y,
    onChangeModelValue: I,
    onDeselectAll: w,
    onKeydownDeselectAll: (P) => {
      const x = P.keyCode;
      (x === Z.enter || x === Z.space) && (w(), P.preventDefault());
    },
    onKeydownSelectAll: D,
    onSelectAll: R
  };
}
function $$(e, {
  dataKeyByKeyIdLocal: t = _(() => ({})),
  isModelLengthLimitExceeded: n,
  isModelValue: r = _(() => !1),
  isMultiselect: s,
  modelValueLength: l,
  modelValueMultiselectFiltered: o = _(() => [])
}) {
  const u = f(e, "modelValue"), h = f(e, "isSelectionCloseable"), A = _(() => {
    if (!r.value)
      return;
    let p = "";
    return s.value ? h.value || !n.value ? Y(o.value, (T, m) => {
      const L = t.value[T] || {};
      p += `${m > 0 ? ", " : ""}${L[St]}`;
    }) : p = `${l.value} ausgewählt` : p = (t.value[u.value] || {})[St], p;
  });
  return {
    hasSelectedTitle: _(() => !!A.value),
    selectedTitle: A
  };
}
function q$({
  $elements: e = _(() => []),
  clickOutsideCallback: t = () => {
  }
}) {
  const n = B("ontouchend" in document ? "touchstart" : "click"), r = (o) => {
    let u = !1;
    Y(e.value, (h) => {
      if (h === o.target || h.contains(o.target))
        return u = !0, !1;
    }), u || t();
  }, s = () => {
    document.addEventListener(n.value, r);
  }, l = () => {
    document.removeEventListener(n.value, r);
  };
  return Ct(() => l()), {
    setEventClickOutside: s,
    destroyEventClickOutside: l
  };
}
const ZE = ".a_select__element_clickable:not([disabled]):not([data-hide])";
function k$(e, {
  emit: t
}, {
  closePopup: n = () => {
  },
  htmlIdLocal: r = _(() => ""),
  openPopup: s = () => {
  }
}) {
  const l = f(e, "disabled"), o = f(e, "menuWidthType"), u = B(void 0), h = B(void 0), A = B(!1), E = B(void 0), p = B(void 0), T = f(e, "placement"), m = B(void 0), L = _(() => [
    u.value,
    E.value
  ]), b = _(() => {
    if (o.value === "as_button")
      return u.value.clientWidth;
  }), {
    setEventClickOutside: v,
    destroyEventClickOutside: I
  } = q$({
    $elements: L,
    clickOutsideCallback: ue
  }), y = ({ isArrowDown: re }) => {
    const ie = p.value.querySelectorAll(ZE);
    if (ie.length === 0)
      return;
    let Ae = !1;
    Y(ie, (we, me) => {
      if (we === document.activeElement)
        return Ae = !0, re ? me < ie.length - 1 && ie[me + 1].focus() : me > 0 && ie[me - 1].focus(), !1;
    }), Ae || ie[0].focus();
  }, R = () => {
    u.value.focus();
  }, D = (re) => {
    const ie = re.keyCode, Ae = ie === Z.arrowDown;
    Ae || ie === Z.arrowUp ? (y({ isArrowDown: Ae }), re.preventDefault()) : ie === Z.escape ? (ue(), R(), re.preventDefault(), re.stopPropagation()) : ie === Z.tab && (ue(), R());
  }, w = () => {
    h.value && (h.value(), h.value = void 0);
  }, M = () => {
    s({
      id: r.value
    }), t("open");
  }, P = () => {
    const re = p.value.querySelector(ZE);
    re && re.focus();
  }, x = () => {
    m.value || (m.value = !0, document.addEventListener("keydown", D));
  }, C = () => {
    M(), setTimeout(() => {
      P(), x();
    });
  }, q = () => {
    !h.value && u.value && p.value && (h.value = bl(
      u.value,
      p.value,
      () => {
        !u.value || !p.value || gl(
          u.value,
          p.value,
          {
            placement: T.value,
            middleware: [
              Il(),
              vl({ limiter: mu() })
            ]
          }
        ).then(({ x: re, y: ie }) => {
          if (!u.value.clientWidth) {
            ue();
            return;
          }
          const Ae = {
            left: `${re}px`,
            top: `${ie}px`
          };
          b.value && (Ae.maxWidth = `${b.value}px`, Ae.minWidth = `${b.value}px`), Object.assign(p.value.style, Ae);
        });
      }
    ), C());
  }, W = () => {
    l.value || (A.value = !0, v(), q());
  }, z = () => {
    A.value ? (ue(), R()) : W();
  }, oe = (re) => {
    const ie = re.keyCode;
    ie === Z.enter || ie === Z.space ? (z(), re.preventDefault()) : !A.value && (ie === Z.arrowUp || ie === Z.arrowDown) && (W(), re.preventDefault());
  }, te = () => {
    m.value && (m.value = !1, document.removeEventListener("keydown", D));
  };
  function ue() {
    A.value = !1, w(), I(), te(), n({
      id: r.value
    });
  }
  return Ct(() => te()), {
    buttonRef: u,
    handleKeydown: oe,
    isOpen: A,
    menuParentRef: E,
    menuRef: p,
    togglePopover: z
  };
}
const Qe = B({
  propsDefault: {
    buttonClass: void 0,
    caretIcon: Li,
    countMultiselect: 4,
    dataExtra: [],
    exceededItemsDeletable: !0,
    inBody: !0,
    isCloseByClick: void 0,
    isDataSimpleArray: !1,
    deselectable: !0,
    isDeselectAll: !1,
    isSelectAll: !1,
    isSelectionCloseable: !0,
    keyDisabled: void 0,
    keyGroup: void 0,
    keyId: "value",
    keyLabel: "label",
    maxCountMultiselect: void 0,
    menuWidthType: "as_button",
    modelValue: void 0,
    placement: "bottom-end",
    popperContainerId: "a_select_container",
    search: !1,
    searchApi: !1,
    searchApiKey: void 0,
    searchOutside: !1,
    searchTimeout: 0,
    slotName: void 0,
    sortOrder: void 0,
    sortOrderGroup: void 0,
    textDeselectAll: "Alle abwählen",
    textSelectAll: "Alle auswählen",
    translateData: !1,
    type: "select"
  }
}), cde = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Qe.value.propsDefault = {
      ...Qe.value.propsDefault,
      ...t
    };
  }
}, ws = {
  name: "ASelect",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonClass: {
      type: String,
      required: !1,
      default: () => Qe.value.propsDefault.buttonClass
    },
    buttonClassDefault: {
      type: [String, Object],
      required: !1,
      default: "a_form_control a_select_toggle"
    },
    caretIcon: {
      type: [String, Object],
      required: !1,
      default: () => Qe.value.propsDefault.caretIcon
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    class: {
      type: [String, Object],
      required: !1
    },
    countMultiselect: {
      type: Number,
      required: !1,
      default: () => Qe.value.propsDefault.countMultiselect
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => Qe.value.propsDefault.dataExtra
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    deselectable: {
      type: Boolean,
      required: !1,
      default: () => Qe.value.propsDefault.deselectable
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    exceededItemsDeletable: {
      type: Boolean,
      required: !1,
      default: () => Qe.value.propsDefault.exceededItemsDeletable
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    exclusiveOptionLabel: {
      type: String,
      required: !1,
      default: "_A_SELECT_EXCLUSIVE_"
    },
    exclusiveOptionValue: {
      type: [String, Number, Boolean],
      required: !1,
      default: "_exclusive_"
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_ui_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inBody: {
      type: Boolean,
      required: !1,
      default: () => Qe.value.propsDefault.inBody
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      required: !1
    },
    isCloseByClick: {
      type: Boolean,
      required: !1,
      default: () => Qe.value.propsDefault.isCloseByClick
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: () => Qe.value.propsDefault.isDataSimpleArray
    },
    isDeselectAll: {
      type: Boolean,
      required: !1,
      default: () => Qe.value.propsDefault.isDeselectAll
    },
    isExclusiveOptionEnabled: {
      type: Boolean,
      required: !1,
      default: !1,
      validator: (e, t) => (t == null ? void 0 : t.type) !== "multiselect" ? e === !1 : !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSelectAll: {
      type: Boolean,
      required: !1,
      default: () => Qe.value.propsDefault.isSelectAll
    },
    isSelectionCloseable: {
      type: Boolean,
      required: !1,
      default: () => Qe.value.propsDefault.isSelectionCloseable
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: () => Qe.value.propsDefault.keyDisabled
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: () => Qe.value.propsDefault.keyGroup
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: () => Qe.value.propsDefault.keyId
    },
    keyLabel: {
      type: String,
      required: !1,
      default: () => Qe.value.propsDefault.keyLabel
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    maxCountMultiselect: {
      type: Number,
      required: !1,
      default: () => Qe.value.propsDefault.maxCountMultiselect,
      validator: (e) => e > 0
    },
    menuWidthType: {
      type: String,
      required: !1,
      default: () => Qe.value.propsDefault.menuWidthType,
      validator: (e) => ["as_button", "by_content"].indexOf(e) !== -1
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: () => Qe.value.propsDefault.modelValue
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholder: {
      type: String,
      required: !1,
      default: void 0
    },
    placement: {
      type: String,
      required: !1,
      default: () => Qe.value.propsDefault.placement,
      validator: (e) => yr.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: () => Qe.value.propsDefault.popperContainerId
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    search: {
      type: Boolean,
      required: !1,
      default: () => Qe.value.propsDefault.search
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: () => Qe.value.propsDefault.searchApi
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: () => Qe.value.propsDefault.searchApiKey
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: () => Qe.value.propsDefault.searchOutside
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: () => Qe.value.propsDefault.searchTimeout
    },
    selectMenuClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: () => Qe.value.propsDefault.slotName
    },
    sortOrder: {
      type: String,
      required: !1,
      default: () => Qe.value.propsDefault.sortOrder,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: () => Qe.value.propsDefault.sortOrderGroup,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    textDeselectAll: {
      type: String,
      required: !1,
      default: () => Qe.value.propsDefault.textDeselectAll
    },
    textSelectAll: {
      type: String,
      required: !1,
      default: () => Qe.value.propsDefault.textSelectAll
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: () => Qe.value.propsDefault.translateData
    },
    type: {
      type: String,
      required: !1,
      default: () => Qe.value.propsDefault.type,
      validator: (e) => ["select", "multiselect"].indexOf(e) !== -1
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "blur",
    "focus",
    "onSearchOutside",
    "open",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      componentStyleHide: r
    } = Wt(e), {
      ariaDescribedbyLocal: s,
      changeModel: l,
      clearModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = Zt(e, t), {
      closePopup: m,
      openPopup: L
    } = lf(), {
      dataAll: b,
      dataFromServer: v,
      dataExtraLocal: I,
      dataKeyByKeyIdLocal: y,
      dataLocal: R,
      hasDataExtra: D
    } = tf(e), {
      loadDataFromServer: w,
      loadDataFromServerForSearchAPI: M,
      loadingDataFromServer: P,
      loadingSearchApi: x,
      onSearchInApi: C,
      searchApiLocal: q,
      updateUrlPropsComputed: W,
      urlPropsComputed: z
    } = Zc(e, {
      changeModel: l,
      dataExtraLocal: I,
      dataFromServer: v
    }), {
      loadingLocal: oe
    } = nf(e, {
      loadingDataFromServer: P
    }), {
      addPopperContainerInBody: te,
      popperContainerIdSelector: ue
    } = Mc(e);
    ef(t, {
      dataKeyByKeyIdLocal: y,
      dataLocal: R
    });
    const {
      disabledAttribut: re,
      disabledLocal: ie,
      disabledLocalAttribut: Ae,
      isExclusiveOptionSelected: we
    } = w$(e), {
      exclusiveOption: me,
      exclusiveDataKeyByKeyIdLocal: ae
    } = F$(e), {
      isModelLengthLimitExceeded: Oe,
      isModelValue: ve,
      isMultiselect: Ke,
      limitExceededModelData: he,
      modelValueLength: k,
      modelValueMultiselectFiltered: G
    } = x$(e, {
      dataKeyByKeyIdLocal: y
    }), {
      ariaLabelledby: ee,
      containerId: de,
      idForList: Ne,
      tabindex: Fe
    } = B$(e, {
      htmlIdLocal: A
    }), {
      dataSort: Ue
    } = Qc(e, {
      data: R
    }), {
      dataGrouped: Xe,
      groupsForLever: Ie,
      hasKeyGroup: Ge,
      keyGroupArray: ft
    } = Jc(e, {
      data: Ue
    }), {
      hasNotElementsExclusiveWithSearch: qe,
      hasNotElementsExtraWithSearch: at,
      hasNotElementsWithSearch: _t,
      idForButtonSearchOutside: bt,
      modelSearch: It,
      modelSearchLowerCase: ur,
      modelSearchOutside: kn,
      onSearchOutside: _r,
      searching: Jt,
      searchingElements: Un,
      searchingElementsExclusive: Hn,
      searchingElementsExtra: In,
      searchingGroups: Or,
      searchingGroupsWithSearchInGroup: dr,
      searchOutsideOrApi: Cr,
      searchOutsideRef: Vn,
      updateModelSearch: Wn,
      updateModelSearchOutside: Gt
    } = rf(e, t, {
      data: Ue,
      dataExtra: I,
      exclusiveOption: me,
      groupsForLever: Ie,
      hasKeyGroup: Ge,
      htmlIdLocal: A,
      keyGroupArray: ft,
      onSearchInApi: C,
      searchApiLocal: q
    }), {
      buttonRef: En,
      handleKeydown: cr,
      isOpen: fr,
      menuParentRef: us,
      menuRef: Nr,
      togglePopover: Gn
    } = k$(e, t, {
      closePopup: m,
      htmlIdLocal: A,
      openPopup: L
    }), {
      deleteExceededItems: fa,
      onChangeModelValue: gn,
      onDeselectAll: _s,
      onKeydownDeselectAll: ds,
      onKeydownSelectAll: mt,
      onSelectAll: Kn
    } = M$(e, {
      changeModel: l,
      dataAll: b,
      dataKeyByKeyIdLocal: y,
      disabledLocal: ie,
      isMultiselect: Ke,
      togglePopover: Gn
    }), {
      hasSelectedTitle: Kr,
      selectedTitle: ha
    } = $$(e, {
      dataKeyByKeyIdLocal: y,
      isModelLengthLimitExceeded: Oe,
      isModelValue: ve,
      isMultiselect: Ke,
      modelValueLength: k,
      modelValueMultiselectFiltered: G
    }), {
      isDividerSelectDeselectVisible: jr
    } = P$(e, {
      isMultiselect: Ke
    }), {
      destroyEventBusClickLabel: Aa,
      initEventBusClickLabel: Dr
    } = sf({
      htmlIdLocal: A,
      clickLabel: Gn
    });
    return tt(z, W), te({ className: "a_select_container" }), Dr(), w(), M(), Ct(() => {
      Aa(), m({
        id: A.value
      });
    }), {
      ariaDescribedbyLocal: s,
      ariaLabelledby: ee,
      attributesToExcludeFromRender: n,
      buttonRef: En,
      clearModel: o,
      componentStyleHide: r,
      containerId: de,
      dataExtraLocal: I,
      dataGrouped: Xe,
      dataKeyByKeyIdLocal: y,
      dataLocal: R,
      dataSort: Ue,
      deleteExceededItems: fa,
      disabledAttribut: re,
      disabledLocal: ie,
      disabledLocalAttribut: Ae,
      errorsId: u,
      exclusiveDataKeyByKeyIdLocal: ae,
      exclusiveOption: me,
      groupsForLever: Ie,
      handleKeydown: cr,
      hasDataExtra: D,
      hasKeyGroup: Ge,
      hasNotElementsExclusiveWithSearch: qe,
      hasNotElementsExtraWithSearch: at,
      hasNotElementsWithSearch: _t,
      hasSelectedTitle: Kr,
      helpTextId: h,
      htmlIdLocal: A,
      idForButtonSearchOutside: bt,
      idForList: Ne,
      isDividerSelectDeselectVisible: jr,
      isErrors: E,
      isExclusiveOptionSelected: we,
      isModelLengthLimitExceeded: Oe,
      isModelValue: ve,
      isMultiselect: Ke,
      isOpen: fr,
      limitExceededModelData: he,
      loadingLocal: oe,
      loadingSearchApi: x,
      menuParentRef: us,
      menuRef: Nr,
      modelSearch: It,
      modelSearchLowerCase: ur,
      modelSearchOutside: kn,
      modelValueLength: k,
      modelValueMultiselectFiltered: G,
      onBlur: p,
      onChangeModelValue: gn,
      onDeselectAll: _s,
      onFocus: T,
      onKeydownDeselectAll: ds,
      onKeydownSelectAll: mt,
      onSearchOutside: _r,
      onSelectAll: Kn,
      popperContainerIdSelector: ue,
      searching: Jt,
      searchingElements: Un,
      searchingElementsExclusive: Hn,
      searchingElementsExtra: In,
      searchingGroups: Or,
      searchingGroupsWithSearchInGroup: dr,
      searchOutsideOrApi: Cr,
      searchOutsideRef: Vn,
      selectedTitle: ha,
      tabindex: Fe,
      togglePopover: Gn,
      updateModelSearch: Wn,
      updateModelSearchOutside: Gt
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      class: this.class,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModelValue || this.isOpen
        }]
      }, [
        this.label && c(kt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          loading: this.loadingLocal,
          required: this.required,
          type: this.type,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            id: this.containerId,
            ref: "ui_select",
            class: "a_select",
            role: "application"
          }, [
            c("div", {
              ref: "buttonRef",
              id: this.htmlIdLocal,
              autocomplete: this.autocomplete,
              class: [this.buttonClassDefault, this.buttonClass, {
                disabled: this.disabled,
                a_select_toggle_closeable: this.isMultiselect && this.isSelectionCloseable && this.isModelValue,
                a_form_control_invalid: this.isErrors
              }],
              "aria-labelledby": this.ariaLabelledby,
              role: "combobox",
              tabindex: this.tabindex,
              "aria-haspopup": "listbox",
              ariaExpanded: this.isOpen,
              ariaRequired: this.required,
              ariaDisabled: this.disabledLocal,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              title: this.hasSelectedTitle ? this.selectedTitle : void 0,
              // TODO: title
              onClick: this.togglePopover,
              onKeydown: this.handleKeydown,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }, [
              this.$slots.fixedPlaceholder ? this.$slots.fixedPlaceholder({
                dataKeyByKeyId: this.dataKeyByKeyIdLocal,
                modelValue: this.modelValue
              }) : this.isModelValue ? this.isMultiselect ? this.isSelectionCloseable ? c("ul", {
                class: "a_select__ul_closeable"
              }, [
                AT(this.modelValueMultiselectFiltered, this.countMultiselect).map((e, t) => c(XE, {
                  key: t,
                  alwaysTranslate: this.alwaysTranslate,
                  data: this.dataKeyByKeyIdLocal[e] || this.exclusiveDataKeyByKeyIdLocal[e] || {},
                  slotName: this.slotName,
                  disabled: this.disabled,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.isModelLengthLimitExceeded && c(XE, {
                  key: this.countMultiselect,
                  alwaysTranslate: this.alwaysTranslate,
                  data: this.limitExceededModelData,
                  disabled: this.disabledLocal,
                  hideDeleteButton: !this.exceededItemsDeletable,
                  onChangeModelValue: this.deleteExceededItems
                })
              ]) : c("span", {
                class: "a_select__value__label"
              }, [
                this.isModelLengthLimitExceeded ? c(Te, {
                  alwaysTranslate: this.alwaysTranslate,
                  text: "_A_SELECT_SELECTED_{{count}}_",
                  extra: {
                    count: this.modelValueLength
                  }
                }) : this.modelValueMultiselectFiltered.map((e, t) => c("span", {
                  key: t
                }, [
                  c("span", null, t !== 0 ? ", " : ""),
                  c(YE, {
                    alwaysTranslate: this.alwaysTranslate,
                    data: this.dataKeyByKeyIdLocal[e] || {},
                    slotName: this.slotName
                  }, this.$slots)
                ]))
              ]) : c(YE, {
                alwaysTranslate: this.alwaysTranslate,
                data: this.dataKeyByKeyIdLocal[this.modelValue] || {},
                class: "a_select__value__label",
                slotName: this.slotName
              }, this.$slots) : c(Te, {
                tag: "span",
                text: this.placeholder
              }),
              c(ia, {
                to: this.popperContainerIdSelector,
                disabled: !this.inBody
              }, [
                c("div", {
                  ref: "menuParentRef",
                  id: this.idForList,
                  style: this.isOpen ? "" : "display: none;",
                  "aria-hidden": !this.isOpen,
                  role: "application"
                }, [
                  c("div", {
                    ref: "menuRef",
                    class: [
                      "a_select_menu",
                      {
                        a_select_menu_by_content: this.menuWidthType === "by_content"
                      },
                      this.selectMenuClass
                    ],
                    role: "listbox",
                    "aria-labelledby": this.htmlIdLocal,
                    onClick: (e) => e.stopPropagation()
                  }, [
                    this.searchOutsideOrApi && c("div", {
                      class: "a_select__search"
                    }, [
                      c("form", {
                        onSubmit: this.onSearchOutside
                      }, [
                        c("div", {
                          class: "a_select__search__group"
                        }, [
                          c(Ln, {
                            alwaysTranslate: this.alwaysTranslate,
                            label: "_A_SELECT_SEARCH_",
                            inputClass: "a_select__element_clickable",
                            modelValue: this.modelSearchOutside,
                            modelUndefined: "",
                            "onUpdate:modelValue": this.updateModelSearchOutside
                          }),
                          c(rt, {
                            alwaysTranslate: this.alwaysTranslate,
                            ariaDisabled: this.loadingSearchApi,
                            disabled: this.disabledLocal,
                            class: "a_btn a_btn_primary a_select__element_clickable",
                            type: "submit",
                            iconLeft: Ol,
                            loadingAlign: "left"
                          })
                        ])
                      ])
                    ]),
                    this.search && c("div", {
                      class: "a_select__search"
                    }, [
                      c(Ln, {
                        alwaysTranslate: this.alwaysTranslate,
                        label: "_A_SELECT_SEARCH_",
                        inputClass: "a_select__element_clickable",
                        modelValue: this.modelSearch,
                        modelUndefined: "",
                        "onUpdate:modelValue": this.updateModelSearch
                      })
                    ]),
                    (this.searchOutside || this.search) && c("div", {
                      class: "a_select__divider",
                      ariaHidden: !0
                    }),
                    c("div", {
                      class: "a_select_menu__child"
                    }, [
                      this.isMultiselect && this.isSelectAll && c("div", {
                        class: [
                          "a_select__menu__link a_select__menu__link_selected a_select__element_clickable",
                          {
                            a_select__menu__link_disabled: this.disabledLocal
                          }
                        ],
                        disabled: this.disabledLocalAttribut,
                        role: "option",
                        tabindex: "-1",
                        onClick: this.onSelectAll,
                        onKeydown: this.onKeydownSelectAll
                      }, [
                        c("span", {
                          class: "a_select__menu__link__icon_box"
                        }, [
                          c(lt, {
                            icon: Hc
                          })
                        ]),
                        c("span", null, this.textSelectAll)
                      ]),
                      this.isMultiselect && this.isDeselectAll && c("div", {
                        class: [
                          "a_select__menu__link a_select__menu__link_selected a_select__element_clickable",
                          {
                            a_select__menu__link_disabled: this.disabled
                          }
                        ],
                        disabled: this.disabledAttribut,
                        role: "option",
                        tabindex: "-1",
                        onClick: this.onDeselectAll,
                        onKeydown: this.onKeydownDeselectAll
                      }, [
                        c("span", {
                          class: "a_select__menu__link__icon_box"
                        }, [
                          c(lt, {
                            icon: ca
                          })
                        ]),
                        c("span", null, this.textDeselectAll)
                      ]),
                      this.isDividerSelectDeselectVisible && c("div", {
                        class: "a_select__divider",
                        ariaHidden: !0
                      }),
                      this.loadingLocal || this.loadingSearchApi ? c(cl) : "",
                      this.isMultiselect && this.isExclusiveOptionEnabled && c("div", {}, [
                        c(Do, {
                          key: this.exclusiveOptionValue,
                          id: this.htmlIdLocal,
                          alwaysTranslate: !0,
                          dataItem: this.exclusiveOption,
                          disabled: !1,
                          searching: this.searching,
                          itemIndex: 0,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          searchingElements: this.searchingElementsExclusive,
                          searchingGroups: this.searchingGroups,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)
                      ]),
                      this.hasDataExtra && c("div", {}, [
                        ...this.dataExtraLocal.map((e, t) => c(Do, {
                          key: e[Ye],
                          id: this.htmlIdLocal,
                          alwaysTranslate: this.alwaysTranslate,
                          dataItem: e,
                          disabled: this.disabledLocal,
                          searching: this.searching,
                          searchingElements: this.searchingElementsExtra,
                          itemIndex: this.isExclusiveOptionEnabled ? t + 1 : t,
                          keyDisabled: this.keyDisabled,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          slotName: this.slotName,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)),
                        !this.hasNotElementsExtraWithSearch && !this.hasNotElementsExclusiveWithSearch && c("div", {
                          class: "a_select__divider",
                          ariaHidden: !0
                        })
                      ]),
                      c("div", {}, this.hasKeyGroup ? [
                        c(Vc, {
                          id: `${this.htmlIdLocal}_lev_0`,
                          alwaysTranslate: this.alwaysTranslate,
                          dataGrouped: this.dataGrouped,
                          disabled: this.disabledLocal,
                          groupsForLever: this.groupsForLever,
                          isErrors: this.isErrors,
                          keyDisabled: this.keyDisabled,
                          levelIndex: 0,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          searching: this.searching,
                          searchingElements: this.searchingElements,
                          searchingGroups: this.searchingGroups,
                          searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                          slotName: this.slotName,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)
                      ] : [
                        c("div", {}, [
                          ...this.dataSort.map((e, t) => c(Do, {
                            key: e[Ye],
                            id: this.htmlIdLocal,
                            alwaysTranslate: this.alwaysTranslate,
                            dataItem: e,
                            disabled: this.disabledLocal,
                            searching: this.searching,
                            searchingElements: this.searchingElements,
                            itemIndex: t,
                            keyDisabled: this.keyDisabled,
                            modelSearch: this.modelSearchLowerCase,
                            modelValue: this.modelValue,
                            slotName: this.slotName,
                            type: this.type,
                            onChangeModelValue: this.onChangeModelValue
                          }, this.$slots))
                        ])
                      ]),
                      !this.dataSort.length && !this.hasDataExtra || this.hasNotElementsWithSearch ? c(Te, {
                        alwaysTranslate: this.alwaysTranslate,
                        class: "a_form__not_elements",
                        text: "_A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_"
                      }) : ""
                    ])
                  ])
                ])
              ]),
              this.hasCaret ? c("span", {
                class: "a_caret"
              }, [
                c(lt, {
                  icon: this.caretIcon
                })
              ]) : ""
            ])
          ])
        ]),
        c(Xt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(Yt, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function U$(e, {
  changeModel: t = () => {
  }
}) {
  const n = f(e, "modelValue");
  return {
    changeParamModel: ({ model: u }) => {
      const h = pe(n.value) || {};
      h.param = u, t({ model: h });
    },
    changeQueryModel: ({ model: u }) => {
      const h = pe(n.value) || {};
      h.query = u, t({ model: h });
    },
    changeRouteModel: ({ model: u }) => {
      var h;
      t(u ? {
        model: {
          route: u,
          query: (h = n.value) == null ? void 0 : h.query
        }
      } : {
        model: {}
      });
    },
    changeTargetModel: ({ model: u }) => {
      const h = pe(n.value) || {};
      h.target = u, t({ model: h });
    }
  };
}
function H$(e, {
  htmlIdLocal: t = _(() => ""),
  routePathKeyByKeyId: n = _(() => ({}))
}) {
  const r = f(e, "modelValue"), s = f(e, "required"), l = (A) => {
    const E = /:([a-zA-Z0-9_]+)/g, p = [];
    let T;
    for (; (T = E.exec(A)) !== null; )
      p.push(T[1]);
    return p;
  }, o = _(() => {
    var A;
    return (A = r.value) != null && A.route ? l(n.value[r.value.route]) : [];
  }), u = _(() => o.value.length > 0);
  return {
    childrenForParam: _(() => {
      const A = [];
      return Y(o.value, (E) => {
        const p = {
          id: E,
          label: E,
          type: "text",
          idPrefix: t.value,
          required: s.value
        };
        A.push(p);
      }), A;
    }),
    hasParam: u
  };
}
function V$(e) {
  const t = f(e, "keyIdRoute"), n = f(e, "routes"), r = _(() => n.value);
  return {
    routePathKeyByKeyId: _(() => {
      const l = {};
      return Y(r.value, (o) => {
        const u = fe(o, t.value);
        l[u] = o.path;
      }), l;
    }),
    routesLocal: r
  };
}
const zt = {
  propsDefault: {
    classColumn: "a_column a_column_12",
    classColumns: "a_columns a_columns_count_12 a_columns_gap_y_1",
    helpTextParam: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_",
    helpTextRoute: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_",
    helpTextQuery: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_",
    helpTextTarget: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_",
    keyIdRoute: "name",
    keyLabelRoute: "path",
    labelParam: "_A_ROUTER_LINK_CONFIG_LABEL_PARAM_",
    labelQuery: "_A_ROUTER_LINK_CONFIG_LABEL_QUERY_",
    labelRoute: "_A_ROUTER_LINK_CONFIG_LABEL_ROUTE_",
    labelTarget: "_A_ROUTER_LINK_CONFIG_LABEL_TARGET_",
    routes: [],
    sortOrderRoute: "asc",
    targets: [
      {
        id: "_blank",
        label: "_A_TARGET_BLANK_"
      },
      {
        id: "_self",
        label: "_A_TARGET_SELF_"
      },
      {
        id: "_parent",
        label: "_A_TARGET_PARENT_"
      },
      {
        id: "_top",
        label: "_A_TARGET_TOP_"
      }
    ]
  }
};
function W$({ routes: e = [], excludedPathRoutes: t = [] }) {
  const n = [], r = {};
  return t.length && Y(t, (s) => {
    r[s] = !0;
  }), Y(e, (s) => {
    const l = s.path;
    s.name && !r[l] && n.push({
      path: s.path,
      name: s.name,
      meta: s.meta
    });
  }), n;
}
const fde = {
  install: (e, {
    propsDefault: t = {},
    excludedPathRoutes: n = []
  } = {}) => {
    zt.propsDefault = {
      ...zt.propsDefault,
      ...t,
      routes: W$({ routes: t.routes, excludedPathRoutes: n })
    };
  }
}, G$ = {
  name: "ARouterLinkConfig",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classColumn: {
      type: [String, Object],
      required: !1,
      default: () => zt.propsDefault.classColumn
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: () => zt.propsDefault.classColumns
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    helpTextParam: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.helpTextParam
    },
    helpTextQuery: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.helpTextQuery
    },
    helpTextRoute: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.helpTextRoute
    },
    helpTextTarget: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.helpTextTarget
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_router_link_config_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyIdRoute: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.keyIdRoute
    },
    keyLabelCallbackRoute: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyLabelRoute: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.keyLabelRoute
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelParam: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.labelParam
    },
    labelQuery: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.labelQuery
    },
    labelRoute: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.labelRoute
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelTarget: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.labelTarget
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    routes: {
      type: Array,
      required: !1,
      default: () => zt.propsDefault.routes
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrderRoute: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.sortOrderRoute,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    targets: {
      type: Array,
      required: !1,
      default: () => zt.propsDefault.targets
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = mi(e), {
      attributesToExcludeFromRender: r
    } = Nt(e), {
      componentStyleHide: s
    } = Wt(e), {
      textAfterLabel: l
    } = yu(e), {
      ariaDescribedbyLocal: o,
      changeModel: u,
      errorsId: h,
      helpTextId: A,
      htmlIdLocal: E,
      isErrors: p,
      isModel: T,
      onBlur: m,
      onFocus: L
    } = Zt(e, t), {
      groupId: b
    } = gu(e, {
      htmlIdLocal: E
    }), {
      changeParamModel: v,
      changeQueryModel: I,
      changeRouteModel: y,
      changeTargetModel: R
    } = U$(e, {
      changeModel: u
    }), {
      routePathKeyByKeyId: D,
      routesLocal: w
    } = V$(e), {
      childrenForParam: M,
      hasParam: P
    } = H$(e, {
      htmlIdLocal: E,
      routePathKeyByKeyId: D
    });
    return {
      ariaDescribedbyLocal: o,
      attributesToExcludeFromRender: r,
      changeParamModel: v,
      changeQueryModel: I,
      changeRouteModel: y,
      changeTargetModel: R,
      childrenForParam: M,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: h,
      groupId: b,
      hasParam: P,
      helpTextId: A,
      htmlIdLocal: E,
      isErrors: p,
      isModel: T,
      onBlur: m,
      onFocus: L,
      routesLocal: w,
      textAfterLabel: l
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__parent"
      }, [
        c("fieldset", {
          id: this.htmlIdLocal,
          tabindex: -1,
          class: ["a_fieldset", this.classFieldset, {
            a_fieldset_invalid: this.isErrors,
            a_fieldset_no_border: !this.hasBorder
          }],
          "aria-describedby": this.ariaDescribedbyLocal
        }, [
          this.label || this.labelScreenReader ? c(ye, {
            type: "text",
            alwaysTranslate: this.alwaysTranslate,
            tag: "legend",
            class: [
              "a_legend",
              {
                a_legend_invalid: this.isErrors
              },
              this.labelClass
            ],
            extra: this.extra,
            html: this.label,
            textScreenReader: this.labelScreenReader,
            textAfter: this.textAfterLabel
          }) : "",
          c("div", {
            id: this.groupId,
            class: [
              this.classColumns,
              "a_fieldset__content"
            ]
          }, [
            c("div", {
              class: this.classColumn
            }, [
              c(ws, {
                id: "route",
                change: this.changeRouteModel,
                data: this.routesLocal,
                deselectable: !0,
                helpText: this.helpTextRoute,
                idPrefix: this.htmlIdLocal,
                isLabelFloat: !1,
                keyId: this.keyIdRoute,
                keyLabel: this.keyLabelRoute,
                keyLabelCallback: this.keyLabelCallbackRoute,
                label: this.labelRoute,
                modelValue: this.modelValue.route,
                required: this.required,
                search: !0,
                sortOrder: this.sortOrderRoute,
                type: "select"
              })
            ]),
            this.hasParam ? c("div", {
              class: this.classColumn
            }, [
              c(MS, {
                id: "param",
                change: this.changeParamModel,
                children: this.childrenForParam,
                helpText: this.helpTextParam,
                idPrefix: this.htmlIdLocal,
                label: this.labelParam,
                modelValue: this.modelValue.param || {},
                required: this.required
              })
            ]) : "",
            this.modelValue.route ? c("div", {
              class: this.classColumn
            }, [
              c(NS, {
                id: "query",
                change: this.changeQueryModel,
                heightCss: "100px",
                helpText: this.helpTextQuery,
                idPrefix: this.htmlIdLocal,
                label: this.labelQuery,
                modelValue: this.modelValue.query
              })
            ]) : "",
            this.modelValue.route ? c("div", {
              class: this.classColumn
            }, [
              c(ws, {
                id: "target",
                change: this.changeTargetModel,
                data: this.targets,
                deselectable: !0,
                helpText: this.helpTextTarget,
                idPrefix: this.htmlIdLocal,
                isLabelFloat: !1,
                keyId: "id",
                keyLabel: "label",
                label: this.labelTarget,
                modelValue: this.modelValue.target,
                translateData: !0,
                type: "select"
              })
            ]) : "",
            this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
              id: this.htmlIdLocal,
              props: this.$props
            }) : ""
          ])
        ]),
        c(Xt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(Yt, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function K$({
  isModelFalse: e = _(() => !1),
  isModelTrue: t = _(() => !1)
}) {
  return {
    isChecked: _(() => {
      if (t.value)
        return !0;
      if (e.value)
        return !1;
    })
  };
}
function j$(e, {
  isModelFalse: t = _(() => !1),
  isModelTrue: n = _(() => !1)
}) {
  const r = f(e, "trueLabel"), s = f(e, "falseLabel"), l = f(e, "defaultLabel");
  return {
    labelValueLocal: _(() => n.value ? r.value : t.value ? s.value : l.value)
  };
}
function z$(e) {
  const t = f(e, "modelValue"), n = f(e, "trueValue"), r = f(e, "falseValue"), s = _(() => t.value === n.value || t.value === "true"), l = _(() => t.value === r.value || t.value === "false");
  return {
    isModelDefault: _(() => !s.value && !l.value),
    isModelFalse: l,
    isModelTrue: s
  };
}
function Y$(e, {
  changeModel: t = () => {
  },
  isModelFalse: n = _(() => !1),
  isModelTrue: r = _(() => !1)
}) {
  const s = f(e, "defaultValue"), l = f(e, "disabled"), o = f(e, "falseValue"), u = f(e, "isThreeState"), h = f(e, "trueValue"), A = (p) => {
    if (l.value)
      return;
    let T;
    r.value ? T = o.value : u.value && n.value ? T = s.value : T = h.value, t({
      model: T,
      $event: p
    });
  };
  return {
    onInput: A,
    onKeydown: (p) => {
      (p.keyCode === Z.enter || p.keyCode === Z.space) && (A(p), p.stopPropagation(), p.preventDefault());
    }
  };
}
const BS = {
  name: "ASwitch",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    defaultLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_DEFAULT_LABEL_"
    },
    defaultValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    falseLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_FALSE_LABEL_"
    },
    falseValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !1
    },
    fullWidth: {
      type: Boolean,
      required: !1
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_switch_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isThreeState: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => yr.indexOf(e) !== -1
    },
    trueLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_TRUE_LABEL_"
    },
    trueValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !0
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = mi(e), {
      attributesToExcludeFromRender: r
    } = Nt(e), {
      componentStyleHide: s
    } = Wt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      clearModel: u,
      errorsId: h,
      helpTextId: A,
      htmlIdLocal: E,
      isErrors: p,
      isModel: T,
      onBlur: m,
      onFocus: L
    } = Zt(e, t), {
      isModelDefault: b,
      isModelFalse: v,
      isModelTrue: I
    } = z$(e), {
      labelValueLocal: y
    } = j$(e, {
      isModelFalse: v,
      isModelTrue: I
    }), {
      isChecked: R
    } = K$({
      isModelFalse: v,
      isModelTrue: I
    }), {
      onInput: D,
      onKeydown: w
    } = Y$(e, {
      changeModel: o,
      isModelFalse: v,
      isModelTrue: I
    });
    return {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: r,
      clearModel: u,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: h,
      helpTextId: A,
      htmlIdLocal: E,
      isChecked: R,
      isErrors: p,
      isModel: T,
      isModelDefault: b,
      labelValueLocal: y,
      onBlur: m,
      onFocus: L,
      onInput: D,
      onKeydown: w
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(kt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          isError: this.isErrors
        }) : "",
        c("div", {
          class: "switch_button__wrapper"
        }, [
          c(ye, {
            class: [
              "switch_button",
              {
                switch_button_undefined: this.isModelDefault,
                switch_button_invalid: this.isErrors,
                switch_button_auto: !this.fullWidth
              }
            ],
            classDefault: "",
            isTitleHtml: this.isTitleHtml,
            tag: "div",
            title: this.title,
            titlePlacement: this.titlePlacement,
            type: "text"
          }, {
            default: () => [
              c("input", {
                id: this.htmlIdLocal,
                "aria-describedby": this.ariaDescribedbyLocal,
                ariaInvalid: this.isErrors,
                ariaRequired: this.required,
                checked: this.isChecked,
                class: [
                  "switch_button__input",
                  this.inputClass
                ],
                disabled: this.disabledAttribut,
                type: "checkbox",
                ...this.inputAttributes,
                onClick: this.onInput,
                onKeydown: this.onKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlur
              }),
              c(Te, {
                alwaysTranslate: this.alwaysTranslate,
                tag: "label",
                class: [
                  "switch_button__label",
                  {
                    switch_button__label_full: this.fullWidth
                  }
                ],
                for: this.htmlIdLocal,
                extra: this.extra,
                html: this.labelValueLocal
              })
            ]
          })
        ]),
        c(Xt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(Yt, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, X$ = {
  name: "ATemplate",
  inheritAttrs: !1,
  props: {
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    html: {
      type: String,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    options: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = Nt(e), {
      componentStyleHide: n
    } = Wt(e);
    return {
      attributesToExcludeFromRender: t,
      componentStyleHide: n
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      alwaysTranslate: void 0,
      type: void 0,
      modelValue: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      this.$slots[this.slotName] ? c("div", {
        class: "a_template"
      }, this.$slots[this.slotName]({
        options: this.options,
        props: this.$props
      })) : "",
      this.html ? xt(c("div", {
        class: "a_template"
      }), [
        [hn, this.html]
      ]) : ""
    ]) : null;
  }
}, nl = typeof Map == "function" ? /* @__PURE__ */ new Map() : /* @__PURE__ */ function() {
  const e = [], t = [];
  return {
    has: function(r) {
      return e.indexOf(r) > -1;
    },
    get: function(r) {
      return t[e.indexOf(r)];
    },
    set: function(r, s) {
      e.indexOf(r) === -1 && (e.push(r), t.push(s));
    },
    delete: function(r) {
      const s = e.indexOf(r);
      s > -1 && (e.splice(s, 1), t.splice(s, 1));
    }
  };
}();
let wS = function(t) {
  return new Event(t, { bubbles: !0 });
};
try {
  new Event("test");
} catch {
  wS = function(n) {
    const r = document.createEvent("Event");
    return r.initEvent(n, !0, !1), r;
  };
}
function Z$(e) {
  if (!e || !e.nodeName || e.nodeName !== "TEXTAREA" || nl.has(e))
    return;
  let t = null, n = null, r = null;
  function s() {
    const p = window.getComputedStyle(e, null);
    p.resize === "vertical" ? e.style.resize = "none" : p.resize === "both" && (e.style.resize = "horizontal"), p.boxSizing === "content-box" ? t = -(parseFloat(p.paddingTop) + parseFloat(p.paddingBottom)) : t = parseFloat(p.borderTopWidth) + parseFloat(p.borderBottomWidth), isNaN(t) && (t = 0), h();
  }
  function l(p) {
    {
      const T = e.style.width;
      e.style.width = "0px", e.offsetWidth, e.style.width = T;
    }
    e.style.overflowY = p;
  }
  function o(p) {
    const T = [];
    for (; p && p.parentNode && p.parentNode instanceof Element; )
      p.parentNode.scrollTop && T.push({
        node: p.parentNode,
        scrollTop: p.parentNode.scrollTop
      }), p = p.parentNode;
    return T;
  }
  function u() {
    if (e.scrollHeight === 0)
      return;
    const p = o(e), T = document.documentElement && document.documentElement.scrollTop;
    e.style.height = "", e.style.height = e.scrollHeight + t + "px", n = e.clientWidth, p.forEach(function(m) {
      m.node.scrollTop = m.scrollTop;
    }), T && (document.documentElement.scrollTop = T);
  }
  function h() {
    u();
    const p = Math.round(parseFloat(e.style.height)), T = window.getComputedStyle(e, null);
    let m = T.boxSizing === "content-box" ? Math.round(parseFloat(T.height)) : e.offsetHeight;
    if (m < p ? T.overflowY === "hidden" && (l("scroll"), u(), m = T.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(e, null).height)) : e.offsetHeight) : T.overflowY !== "hidden" && (l("hidden"), u(), m = T.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(e, null).height)) : e.offsetHeight), r !== m) {
      r = m;
      const L = wS("autosize:resized");
      try {
        e.dispatchEvent(L);
      } catch {
      }
    }
  }
  const A = function() {
    e.clientWidth !== n && h();
  }, E = (function(p) {
    window.removeEventListener("resize", A, !1), e.removeEventListener("input", h, !1), e.removeEventListener("keyup", h, !1), e.removeEventListener("autosize:destroy", E, !1), e.removeEventListener("autosize:update", h, !1), Object.keys(p).forEach(function(T) {
      e.style[T] = p[T];
    }), nl.delete(e);
  }).bind(e, {
    height: e.style.height,
    resize: e.style.resize,
    overflowY: e.style.overflowY,
    overflowX: e.style.overflowX,
    wordWrap: e.style.wordWrap
  });
  e.addEventListener("autosize:destroy", E, !1), "onpropertychange" in e && "oninput" in e && e.addEventListener("keyup", h, !1), window.addEventListener("resize", A, !1), e.addEventListener("input", h, !1), e.addEventListener("autosize:update", h, !1), e.style.overflowX = "hidden", e.style.wordWrap = "break-word", nl.set(e, {
    destroy: E,
    update: h
  }), s();
}
function J$(e) {
  const t = nl.get(e);
  t && t.destroy();
}
function Q$(e) {
  const t = nl.get(e);
  t && t.update();
}
let Is;
typeof window > "u" || typeof window.getComputedStyle != "function" ? (Is = function(t) {
  return t;
}, Is.destroy = function(e) {
  return e;
}, Is.update = function(e) {
  return e;
}) : (Is = function(t, n) {
  return t && Array.prototype.forEach.call(t.length ? t : [t], function(r) {
    return Z$(r);
  }), t;
}, Is.destroy = function(e) {
  return e && Array.prototype.forEach.call(e.length ? e : [e], J$), e;
}, Is.update = function(e) {
  return e && Array.prototype.forEach.call(e.length ? e : [e], Q$), e;
});
const Ed = Is;
function eq(e) {
  const t = f(e, "isScalable"), n = B(!1), r = B(void 0);
  return {
    destroyAutosize: () => {
      n.value && (Ed.destroy(r.value), n.value = !1);
    },
    initAutosize: () => {
      t.value && (Ed(r.value), n.value = !0);
    },
    textareaRef: r,
    updateAutosize: () => {
      t.value && n.value && setTimeout(() => {
        Ed.update(r.value);
      });
    }
  };
}
function tq(e, {
  changeModel: t = () => {
  },
  updateAutosize: n = () => {
  }
}) {
  const r = f(e, "disabled"), s = f(e, "modelUndefined");
  return {
    clearModel: () => {
      r.value || (t({
        model: s.value
      }), n());
    },
    onInput: (u) => {
      if (r.value)
        return;
      const h = u.target.value;
      t({
        model: h
      });
    }
  };
}
function nq(e) {
  const t = f(e, "resize"), n = {
    v: "a_textarea_resize_v",
    h: "a_textarea_resize_h",
    none: "a_textarea_resize_none",
    auto: ""
  };
  return {
    resizeClass: _(() => n[t.value])
  };
}
function rq(e) {
  const t = f(e, "isScalable"), n = f(e, "rows");
  return {
    rowsLocal: _(() => {
      if (n.value)
        return n.value;
      if (t.value)
        return 1;
    })
  };
}
const aq = {
  name: "ATextarea",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_textarea_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isScalable: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    maxlength: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    resize: {
      type: String,
      required: !1,
      default: "v",
      validator: (e) => ["v", "h", "none", "auto"].indexOf(e) !== -1
    },
    rows: {
      type: [String, Number],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = mi(e), {
      attributesToExcludeFromRender: r
    } = Nt(e), {
      componentStyleHide: s
    } = Wt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: m
    } = Zt(e, t), {
      isClearButtonLocal: L
    } = Iu(e, {
      isModel: p
    }), {
      resizeClass: b
    } = nq(e), {
      destroyAutosize: v,
      initAutosize: I,
      textareaRef: y,
      updateAutosize: R
    } = eq(e), {
      clearModel: D,
      onInput: w
    } = tq(e, {
      changeModel: o,
      updateAutosize: R
    }), {
      rowsLocal: M
    } = rq(e), {
      placeholderAttributes: P
    } = ml(e);
    return Vr(() => {
      I();
    }), Ct(() => {
      v();
    }), {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: r,
      changeModel: o,
      clearModel: D,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isClearButtonLocal: L,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: m,
      onInput: w,
      placeholderAttributes: P,
      resizeClass: b,
      rowsLocal: M,
      textareaRef: y
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(kt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required
        }) : "",
        c("div", {
          class: [
            "a_form_element a_form_element_textarea",
            {
              a_form_element_textarea_scalable: this.isScalable
            }
          ]
        }, [
          c("textarea", {
            ref: "textareaRef",
            id: this.htmlIdLocal,
            autocomplete: this.autocomplete,
            value: this.modelValue,
            rows: this.rowsLocal,
            class: [
              "a_form_control a_textarea",
              this.inputClass,
              {
                a_textarea_scalable: this.isScalable,
                a_form_element_with_one_btn: this.isClearButton,
                a_form_control_invalid: this.isErrors
              },
              this.resizeClass
            ],
            disabled: this.disabledAttribut,
            ariaRequired: this.required,
            ariaInvalid: this.isErrors,
            "aria-describedby": this.ariaDescribedbyLocal,
            maxlength: this.maxlength,
            ...this.placeholderAttributes,
            ...this.inputAttributes,
            onInput: this.onInput,
            onFocus: this.onFocus,
            onBlur: this.onBlur
          }),
          this.isClearButtonLocal ? c("div", {
            class: "a_form_control__actions"
          }, [
            c(vu, {
              alwaysTranslate: this.alwaysTranslate,
              disabled: this.disabled,
              class: this.clearButtonClass,
              onClear: this.clearModel
            })
          ]) : ""
        ]),
        c(Xt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(Yt, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, Fu = {
  checkbox: pM,
  color: Ln,
  currency: _$,
  date: tu,
  dateRange: BM,
  datetime: tu,
  email: Ln,
  file: d$,
  integer: ri,
  integerNonNegative: ri,
  integerNonNegativeRange: Ro,
  integerPositive: ri,
  integerPositiveRange: Ro,
  integerRange: Ro,
  json: NS,
  multiselect: ws,
  natural: Ln,
  number: ri,
  numberRange: Ro,
  oneCheckbox: Pu,
  password: Ln,
  radio: DS,
  routerLinkConfig: G$,
  select: ws,
  switch: BS,
  template: X$,
  text: Ln,
  textarea: aq
}, sq = ["datepickerRange", "dateRange"], PS = {};
Y(sq, (e) => {
  PS[e] = !0;
});
const FS = PS;
function iq(e) {
  const t = f(e, "children");
  return {
    specificAttributes: _(() => {
      const r = {};
      return Y(t.value, (s) => {
        const l = OS[s.type], o = FS[s.type];
        l && Pe(s.inputWidth) && (r[s.id] = {
          inputWidth: "auto"
        }), o && (r[s.id] = {
          inputWidth: "inherit",
          inputAttributes: {
            style: "min-width: 181px"
          }
        });
      }), r;
    })
  };
}
const Ir = {
  components: {},
  containerComponents: {}
}, hde = {
  install: (e, {
    components: t = {},
    containerComponents: n = {}
  } = {}) => {
    Ir.components = t, Ir.containerComponents = n;
  }
}, xS = {
  name: "AGroup",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    children: {
      type: Array,
      required: !1,
      default: () => []
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_6 a_column_12_touch"
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12 a_columns_gap_2"
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_group_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: [String, Number, Array, Object, Boolean],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), r = () => ({
      ...Fu,
      ...Ir.components,
      ...Ir.containerComponents
    }), {
      componentStyleHide: s
    } = Wt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      clearModel: u,
      errorsId: h,
      helpTextId: A,
      htmlIdLocal: E,
      isErrors: p
    } = Zt(e, t), T = f(e, "modelValue"), m = ({ item: D, model: w }) => {
      const M = D.id, P = pe(T.value);
      vc(P, M, pe(w)), t.emit("update:modelValue", P);
    }, L = ({ item: D, dataKeyByKeyId: w }) => {
      t.emit("updateData", { item: D, dataKeyByKeyId: w });
    }, b = f(e, "children"), v = f(e, "idPrefix"), I = _(() => b.value[0] || {}), y = _(() => fl({
      id: I.value.id,
      idPrefix: I.value.idPrefix || v.value,
      htmlId: I.value.htmlId
    })), {
      specificAttributes: R
    } = iq(e);
    return {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: n,
      changeModel: o,
      clearModel: u,
      componentStyleHide: s,
      componentTypesMapping: r,
      errorsId: h,
      firstChild: I,
      helpTextId: A,
      htmlIdFirstChild: y,
      htmlIdLocal: E,
      isErrors: p,
      onUpdateDataLocal: L,
      onUpdateModelLocal: m,
      specificAttributes: R
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        id: this.htmlIdLocal,
        role: "group",
        tabindex: -1,
        class: [this.inputClass, {
          a_group_invalid: this.isErrors
        }],
        "aria-describedby": this.ariaDescribedbyLocal
      }, [
        c("div", {
          class: this.classColumns
        }, [
          this.firstChild.label && c(kt, {
            id: this.htmlIdFirstChild,
            alwaysTranslate: this.alwaysTranslate,
            extra: this.extra,
            isError: !!this.errorsAll[this.firstChild.id],
            isLabelFloat: !1,
            label: this.label || this.firstChild.label,
            labelClass: this.labelClass || this.firstChild.labelClass || this.classColumnDefault,
            labelScreenReader: this.labelScreenReader || this.firstChild.labelScreenReader,
            required: this.required || this.firstChild.required,
            type: this.firstChild.type
          }),
          this.children.map((e, t) => {
            const n = Pa.value[e.type];
            let r;
            le(e.classColumn) ? r = this.classColumnDefault : e.classColumn && (r = e.classColumn);
            let s;
            e.isHide && (s = "display: none;");
            const l = this.componentTypesMapping()[e.type];
            return c("div", {
              class: r,
              style: s
            }, [
              c(l, {
                key: t,
                alwaysTranslate: this.alwaysTranslate,
                modelValue: n ? this.modelValue : fe(this.modelValue, e.id),
                modelDependencies: n ? this.modelValue : void 0,
                errors: this.errorsAll[e.id],
                errorsAll: n ? this.errorsAll : void 0,
                idPrefix: this.idPrefix,
                "onUpdate:modelValue": (o) => this.onUpdateModelLocal({ item: e, model: o }),
                onUpdateData: ({ dataKeyByKeyId: o }) => this.onUpdateDataLocal({ item: e, dataKeyByKeyId: o }),
                ...e,
                disabled: this.disabled || e.disabled,
                ...this.specificAttributes[e.id],
                label: t === 0 ? void 0 : e.label,
                slotAppend: void 0,
                classColumn: void 0,
                ...this.attributesToExcludeFromRender
              }, this.$slots),
              e.slotAppend && this.$slots[e.slotAppend] ? this.$slots[e.slotAppend]({ item: e, itemIndex: t }) : ""
            ]);
          })
        ])
      ]),
      c(Xt, {
        id: this.helpTextId,
        alwaysTranslate: this.alwaysTranslate,
        html: this.helpText,
        extra: this.extra
      }),
      this.isErrors && c(Yt, {
        class: "a_px_3",
        id: this.errorsId,
        alwaysTranslate: this.alwaysTranslate,
        errors: this.errors
      })
    ]) : null;
  }
};
function lq(e, t, {
  changeModel: n = () => {
  }
}) {
  const r = f(e, "modelValue");
  return {
    onUpdateModelLocal: ({ model: l, currentModel: o, item: u }) => {
      if (Pa.value[u.type])
        n({ model: l, currentModel: o, item: u });
      else {
        const h = u.id, A = pe(r.value);
        vc(A, h, pe(l)), n({ model: A, currentModel: o, item: u });
      }
    }
  };
}
const MS = {
  name: "AFieldset",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    children: {
      type: Array,
      required: !1,
      default: () => []
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_12"
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12"
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_fieldset_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_"
      })
    }
  },
  emits: [
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), r = () => ({
      ...Fu,
      group: xS,
      fieldset: kr("AFieldset"),
      ...Ir.components,
      ...Ir.containerComponents
    }), {
      componentStyleHide: s
    } = Wt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E
    } = Zt(e, t), {
      textAfterLabel: p
    } = yu(e), {
      onUpdateModelLocal: T
    } = lq(e, t, {
      changeModel: o
    }), m = ({ item: D, dataKeyByKeyId: w }) => {
      t.emit("updateData", { item: D, dataKeyByKeyId: w });
    }, {
      groupId: L
    } = gu(e, {
      htmlIdLocal: A
    }), {
      iconCollapse: b,
      initIsCollapsedLocal: v,
      isCollapsedLocal: I,
      titleCollapse: y,
      toggleCollapse: R
    } = jc(e, t);
    return v(), {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: n,
      componentStyleHide: s,
      componentTypesMapping: r,
      errorsId: u,
      groupId: L,
      helpTextId: h,
      htmlIdLocal: A,
      iconCollapse: b,
      isCollapsedLocal: I,
      isErrors: E,
      onUpdateDataLocal: m,
      onUpdateModelLocal: T,
      textAfterLabel: p,
      titleCollapse: y,
      toggleCollapse: R
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__parent"
      }, [
        c("fieldset", {
          id: this.htmlIdLocal,
          tabindex: -1,
          class: ["a_fieldset", this.classFieldset, {
            a_fieldset_invalid: this.isErrors,
            a_fieldset_no_border: !this.hasBorder,
            a_fieldset_collapsed: this.isCollapsedLocal
          }],
          "aria-describedby": this.ariaDescribedbyLocal
        }, [
          this.label || this.labelScreenReader ? c(ye, {
            type: "text",
            alwaysTranslate: this.alwaysTranslate,
            tag: "legend",
            class: [
              "a_legend",
              {
                a_legend_invalid: this.isErrors
              },
              this.labelClass
            ],
            extra: this.extra,
            html: this.label,
            textScreenReader: this.labelScreenReader,
            textAfter: this.textAfterLabel
          }) : "",
          this.collapsible ? c(ye, {
            "aria-controls": this.groupId,
            "aria-expanded": !this.isCollapsedLocal,
            alwaysTranslate: this.alwaysTranslate,
            class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
            iconLeft: this.iconCollapse,
            title: this.titleCollapse,
            textScreenReader: this.titleCollapse,
            type: "button",
            onClick: this.toggleCollapse
          }) : "",
          c("div", {
            id: this.groupId,
            class: [
              this.classColumns,
              "a_fieldset__content"
            ]
          }, [
            this.children.map((e, t) => {
              if (e.isRender !== !1) {
                const n = Pa.value[e.type];
                let r;
                le(e.classColumn) ? r = this.classColumnDefault : e.classColumn && (r = e.classColumn);
                let s;
                e.isHide && (s = "display: none;");
                const l = this.componentTypesMapping()[e.type];
                return c("div", {
                  class: r,
                  style: s
                }, [
                  c(l, {
                    key: t,
                    alwaysTranslate: this.alwaysTranslate,
                    modelValue: n ? this.modelValue : fe(this.modelValue, e.id),
                    modelDependencies: n ? this.modelValue : void 0,
                    errors: fe(this.errorsAll, e.id),
                    errorsAll: n ? this.errorsAll : void 0,
                    idPrefix: this.idPrefix,
                    "onUpdate:modelValue": (o) => this.onUpdateModelLocal({ item: e, model: o }),
                    onUpdateData: ({ dataKeyByKeyId: o }) => this.onUpdateDataLocal({ item: e, dataKeyByKeyId: o }),
                    ...e,
                    disabled: this.disabled || e.disabled,
                    classColumn: void 0,
                    slotAppend: void 0,
                    ...this.attributesToExcludeFromRender
                  }, this.$slots),
                  e.slotAppend && this.$slots[e.slotAppend] ? this.$slots[e.slotAppend]({ item: e, itemIndex: t }) : ""
                ]);
              }
            }),
            this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
              id: this.htmlIdLocal,
              props: this.$props
            }) : ""
          ])
        ]),
        c(Xt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(Yt, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, $S = {
  fieldset: MS,
  group: xS,
  ...Ir.containerComponents
};
function oq() {
  return {
    componentTypesMapping: () => ({
      ...Fu,
      ...$S,
      ...Ir.components,
      ...Ir.containerComponents
    })
  };
}
function uq(e) {
  const t = f(e, "filter");
  return {
    isContainer: _(() => !!Pa.value[t.value.type])
  };
}
function _q(e) {
  const t = f(e, "filter");
  return {
    filterSpecificAttributes: _(() => {
      const r = {}, s = OS[t.value.type], l = FS[t.value.type];
      return s && Pe(t.value.inputWidth) && (r.inputWidth = "auto"), l && (r.inputWidth = "inherit", r.inputAttributes = {
        style: "min-width: 181px"
      }), r;
    })
  };
}
function dq(e) {
  const t = f(e, "id");
  return {
    idPrefix: _(() => `${t.value}_`)
  };
}
function cq(e, {
  isContainer: t = _(() => !1)
}) {
  const n = f(e, "filter"), r = f(e, "onUpdateModelFilters"), s = f(e, "unappliedModel");
  return {
    onUpdateModelFiltersLocal: (o) => {
      if (t.value)
        r.value({ model: o });
      else {
        const u = pe(s.value);
        u[n.value.id] = pe(o), r.value({ model: u });
      }
    }
  };
}
function fq(e) {
  const t = f(e, "filter"), n = f(e, "updateDataKeyByIdFromFilter"), r = ["select", "multiselect", "radio", "checkbox", "group", "fieldset"], s = ({ dataKeyByKeyId: o, item: u }) => {
    let h = t.value.id;
    u && (h = u.id), n.value({
      filterId: h,
      dataKeyByKeyId: o
    });
  };
  return {
    emitForComponentsWithData: _(() => {
      const o = {};
      return r.indexOf(t.value.type) !== -1 && (o.onUpdateData = s), o;
    })
  };
}
const hq = {
  name: "AFiltersHorizontalFilterUi",
  props: {
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filter: {
      type: Object,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    isLabelVisible: {
      type: Boolean,
      required: !0
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    unappliedModel: {
      type: Object,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = Nt(e), {
      isContainer: n
    } = uq(e), {
      onUpdateModelFiltersLocal: r
    } = cq(e, {
      isContainer: n
    }), {
      emitForComponentsWithData: s
    } = fq(e), {
      idPrefix: l
    } = dq(e), {
      componentTypesMapping: o
    } = oq(), {
      filterSpecificAttributes: u
    } = _q(e);
    return {
      attributesToExcludeFromRender: t,
      componentTypesMapping: o,
      emitForComponentsWithData: s,
      filterSpecificAttributes: u,
      idPrefix: l,
      isContainer: n,
      onUpdateModelFiltersLocal: r
    };
  },
  render() {
    const e = this.componentTypesMapping()[this.filter.type];
    return c(e, {
      idPrefix: this.idPrefix,
      modelValue: this.isContainer ? this.unappliedModel : this.unappliedModel[this.filter.id],
      "onUpdate:modelValue": this.onUpdateModelFiltersLocal,
      excludeRenderAttributes: this.excludeRenderAttributes,
      ...this.filter,
      ...this.filterSpecificAttributes,
      label: this.isLabelVisible ? this.filter.label : void 0,
      ...this.emitForComponentsWithData,
      ...this.attributesToExcludeFromRender
    }, this.$slots);
  }
};
function Aq(e) {
  const t = f(e, "id");
  return {
    idFilterRight: _(() => `${t.value}_filter_right`)
  };
}
const Eq = {
  name: "AFilersRight",
  props: {
    appliedModel: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filters: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch"
  ],
  setup(e) {
    const {
      idFilterRight: t
    } = Aq(e);
    return {
      idFilterRight: t
    };
  },
  render() {
    return c("div", {
      id: this.idFilterRight,
      class: "a_filters_right"
    }, [
      c("form", {}, [
        this.filters.map((e) => c(hq, {
          id: this.id,
          class: "a_filters_right__filter_ui",
          excludeRenderAttributes: this.excludeRenderAttributes,
          filter: e,
          isLabelVisible: !0,
          onUpdateModelFilters: this.onUpdateModelFilters,
          unappliedModel: this.appliedModel,
          updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter
        }, this.$slots))
      ])
    ]);
  }
};
function pq(e) {
  const t = f(e, "closeFilterValue"), n = f(e, "disabled"), r = f(e, "filter");
  return {
    closeCurrentFilterValue: ({ modelValue: l }) => {
      n.value || t.value({
        filter: r.value,
        modelArray: l.modelArray,
        keyId: l.keyId
      });
    }
  };
}
function Tq(e, { emit: t }, {
  modelValuesForCurrentFilter: n = _(() => [])
}) {
  const r = f(e, "filter"), s = _(() => n.value.length > 0);
  return {
    isLeastOneFilterVisible: s,
    updateVisibleChildFilters: ({ destroy: o } = {}) => {
      t("updateVisibleChildFilters", {
        id: r.value.id,
        isVisible: o ? !1 : s.value
      });
    }
  };
}
function Sq(e) {
  const t = f(e, "filter"), n = f(e, "id"), r = _(() => `eventATableFilterTopOnOpen_${n.value}`);
  return {
    goToFilter: ({ modelValue: l } = {}) => {
      let o = fl({
        id: t.value.id,
        idPrefix: `${n.value}_filter_top`,
        htmlId: t.value.htmlId
      });
      l.idSuffix && (o += l.idSuffix), t.value.main || Rt.$emit(r.value, o);
    }
  };
}
function mq({ filter: e, currentModel: t }) {
  return !(!e || e.hideFilterCenter || le(t) || t === "" || Se(t) && !t.length);
}
function Lq(e) {
  const t = f(e, "filter"), n = f(e, "model");
  return {
    hasCurrentFilter: _(() => mq({
      filter: t.value,
      currentModel: n.value
    }))
  };
}
function bq(e, { emit: t }, {
  hasCurrentFilter: n = _(() => !1)
}) {
  const r = f(e, "dataKeyByKeyIdPerFilter"), s = f(e, "filter"), l = _(() => n.value && lx.value[s.value.type] ? cn(r.value[s.value.id]) : !1);
  return {
    isFilterLoading: l,
    updateLoadingChildFilters: (u, h) => {
      u !== h && t("updateLoadingChildFilters", {
        id: s.value.id,
        isLoading: l.value
      });
    }
  };
}
function vq(e, {
  hasCurrentFilter: t = _(() => !1)
}) {
  const n = f(e, "filter"), r = _(() => t.value ? n.value.label : ""), s = _(() => {
    if (t.value)
      return n.value.labelScreenReader;
  }), l = _(() => s.value || r.value);
  return {
    filterLabel: r,
    filterLabelForTitle: l
  };
}
function Iq(e, {
  filterLabel: t = _(() => ""),
  filterLabelForTitle: n = _(() => ""),
  hasCurrentFilter: r = _(() => !1)
}) {
  const s = f(e, "dataKeyByKeyIdPerFilter"), l = f(e, "filter"), o = f(e, "model"), {
    filterBoolean: u,
    filterDate: h
  } = or(), A = _(() => {
    if (l.value)
      return s.value[l.value.id];
  }), E = _(() => {
    var m;
    return (m = o.value) != null && m.length ? Pt(o.value, (L) => A.value && A.value[L]) : [];
  }), p = ({ label: m, suffixTranslated: L }) => {
    const b = wt({
      placeholder: m
    });
    return L ? `${b} ${L}` : b;
  };
  return {
    modelValuesForCurrentFilter: _(() => {
      var m, L, b, v, I, y, R, D, w;
      if (!r.value)
        return [];
      if (l.value.type === "switch" || l.value.type === "oneCheckbox")
        return [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: u(o.value)
        }];
      if (l.value.type === "date")
        return [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: h(o.value)
        }];
      if (l.value.type === "select" || l.value.type === "radio") {
        const M = fe(A.value, `${o.value}.${St}`);
        return M ? [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: M
        }] : [];
      }
      if (Wc.value[l.value.type] || l.value.type === "radio" && l.value.isModelArray) {
        if (E.value.length) {
          if (E.value.length === 1) {
            const M = (m = A.value) == null ? void 0 : m[E.value[0]];
            return [{
              filterLabelTranslated: p({ label: t.value }),
              filterLabelForTitleTranslated: p({ label: n.value }),
              label: M == null ? void 0 : M[St],
              item: M,
              modelArray: E.value
            }];
          }
          return [{
            filterLabelTranslated: p({ label: t.value }),
            filterLabelForTitleTranslated: p({ label: n.value }),
            label: wt({
              placeholder: "_A_FILTERS_SELECTED_{{count}}_",
              extra: {
                count: E.value.length,
                modelArray: E.value
              }
            }),
            modelArray: E.value,
            extra: {
              count: E.value.length,
              modelArray: E.value
            }
          }];
        }
        return [];
      }
      if (l.value.type === "dateRange") {
        const M = l.value.keyFrom || "from", P = l.value.keyUntil || "until", x = [];
        if (!le((L = o.value) == null ? void 0 : L[M]) && ((b = o.value) == null ? void 0 : b[M]) !== "") {
          const C = wt({
            placeholder: l.value.labelFrom || "_A_DATEPICKER_RANGE_FROM_"
          });
          x.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: C
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: C
            }),
            label: h(o.value[M]),
            idSuffix: "_from",
            keyId: M
          });
        }
        if (!le((v = o.value) == null ? void 0 : v[P]) && ((I = o.value) == null ? void 0 : I[P]) !== "") {
          const C = wt({
            placeholder: l.value.labelUntil || "_A_DATEPICKER_RANGE_UNTIL_"
          });
          x.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: C
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: C
            }),
            label: h(o.value[P]),
            idSuffix: "_until",
            keyId: P
          });
        }
        return x;
      }
      if (of.indexOf(l.value.type) !== -1) {
        const M = l.value.keyMax || "max", P = l.value.keyMin || "min", x = [];
        if (!le((y = o.value) == null ? void 0 : y[P]) && ((R = o.value) == null ? void 0 : R[P]) !== "") {
          const C = wt({
            placeholder: l.value.labelMin || "_A_INPUT_NUMBER_RANGE_LABEL_MIN_"
          });
          x.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: C
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: C
            }),
            label: o.value[P],
            idSuffix: "_min",
            keyId: P
          });
        }
        if (!le((D = o.value) == null ? void 0 : D[M]) && ((w = o.value) == null ? void 0 : w[M]) !== "") {
          const C = wt({
            placeholder: l.value.labelMax || "_A_INPUT_NUMBER_RANGE_LABEL_MAX_"
          });
          x.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: C
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: C
            }),
            label: o.value[M],
            idSuffix: "_max",
            keyId: M
          });
        }
        return x;
      }
      return [{
        label: o.value,
        filterLabelTranslated: p({ label: t.value }),
        filterLabelForTitleTranslated: p({ label: n.value })
      }];
    })
  };
}
const gq = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pin-fill" viewBox="0 0 16 16">
  <path d="M4.146.146A.5.5 0 0 1 4.5 0h7a.5.5 0 0 1 .5.5c0 .68-.342 1.174-.646 1.479-.126.125-.25.224-.354.298v4.431l.078.048c.203.127.476.314.751.555C12.36 7.775 13 8.527 13 9.5a.5.5 0 0 1-.5.5h-4v4.5c0 .276-.224 1.5-.5 1.5s-.5-1.224-.5-1.5V10h-4a.5.5 0 0 1-.5-.5c0-.973.64-1.725 1.17-2.189A6 6 0 0 1 5 6.708V2.277a3 3 0 0 1-.354-.298C4.342 1.674 4 1.179 4 .5a.5.5 0 0 1 .146-.354"/>
</svg>`, yq = {
  name: "AFilterCenterItem",
  props: {
    closeFilterValue: {
      type: Function,
      required: !0
    },
    dataKeyByKeyIdPerFilter: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    filter: {
      type: Object,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    model: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "updateVisibleChildFilters",
    "updateLoadingChildFilters"
  ],
  setup(e, t) {
    const {
      hasCurrentFilter: n
    } = Lq(e), {
      isFilterLoading: r,
      updateLoadingChildFilters: s
    } = bq(e, t, {
      hasCurrentFilter: n
    }), {
      filterLabel: l,
      filterLabelForTitle: o
    } = vq(e, {
      hasCurrentFilter: n
    }), {
      modelValuesForCurrentFilter: u
    } = Iq(e, {
      filterLabel: l,
      filterLabelForTitle: o,
      hasCurrentFilter: n
    }), {
      isLeastOneFilterVisible: h,
      updateVisibleChildFilters: A
    } = Tq(e, t, {
      modelValuesForCurrentFilter: u
    }), {
      goToFilter: E
    } = Sq(e), {
      closeCurrentFilterValue: p
    } = pq(e);
    return tt(h, () => {
      A();
    }, {
      immediate: !0
    }), tt(r, (T, m) => {
      s(T, m);
    }, {
      immediate: !0
    }), Ct(() => {
      A({
        destroy: !0
      });
    }), {
      closeCurrentFilterValue: p,
      filterLabel: l,
      goToFilter: E,
      hasCurrentFilter: n,
      isLeastOneFilterVisible: h,
      modelValuesForCurrentFilter: u
    };
  },
  render() {
    return this.hasCurrentFilter && [
      this.modelValuesForCurrentFilter.map((e) => c("div", {
        role: "group",
        class: "a_filters_center__item a_btn_group a_btn_group_small"
      }, [
        this.filter.hasNotClose && c(ye, {
          class: "a_btn a_btn_secondary",
          ariaHidden: !0,
          tabindex: -1,
          iconLeft: gq,
          type: "text"
        }),
        c(ye, {
          class: "a_btn a_btn_secondary",
          title: "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_",
          textScreenReader: "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_",
          extra: {
            filterLabel: e.filterLabelForTitleTranslated,
            filterValue: e.label
          },
          type: "button",
          onClick: () => this.goToFilter({ modelValue: e })
        }, () => [
          e.filterLabelTranslated ? c("strong", {
            class: "a_filters_center__item__label",
            ariaHidden: !0
          }, [
            c(Te, {
              tag: "span",
              html: e.filterLabelTranslated,
              textAfter: ":"
            })
          ]) : "",
          this.filter.slotName && this.$slots[this.filter.slotName] ? this.$slots[this.filter.slotName]({
            item: e.item,
            label: e.label,
            extra: e.extra,
            inFilterCenter: !0
          }) : c("span", {
            class: "a_filters_center__item__value"
          }, e.label)
        ]),
        this.filter.hasNotClose ? "" : c(ye, {
          class: "a_btn a_btn_secondary",
          disabled: this.disabled,
          iconLeft: ca,
          title: "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_",
          textScreenReader: "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_",
          extra: {
            filterLabel: e.filterLabelForTitleTranslated,
            filterValue: e.label
          },
          type: "button",
          onClick: () => this.closeCurrentFilterValue({ modelValue: e })
        })
      ]))
    ];
  }
};
function Rq() {
  const e = B({}), t = ({ id: r, isLoading: s }) => {
    e.value[r] = s;
  };
  return {
    isLeastOneChildFilterLoading: _(() => {
      let r = !1;
      return Y(e.value, (s) => {
        if (s)
          return r = !0, !1;
      }), r;
    }),
    updateLoadingChildFilters: t
  };
}
function Oq(e) {
  const t = f(e, "filtersGroup"), n = B({}), r = ({ id: u, isVisible: h }) => {
    n.value[u] = h;
  }, s = _(() => {
    let u = !1;
    return Y(n.value, (h) => {
      if (h)
        return u = !0, !1;
    }), u;
  }), l = _(() => !!(t.value.alwaysVisible.length || t.value.filters.length)), o = _(() => s.value ? void 0 : "display: none;");
  return {
    hasFilters: l,
    styleHide: o,
    updateVisibleChildFilters: r
  };
}
const Cq = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-clockwise" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2z"/>
  <path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466"/>
</svg>`, Nq = {
  name: "AFilterCenter",
  props: {
    appliedModel: {
      type: Object,
      required: !0
    },
    closeAllFilters: {
      type: Function,
      required: !0
    },
    closeFilterValue: {
      type: Function,
      required: !0
    },
    dataKeyByKeyIdPerFilter: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    filtersGroup: {
      type: Object,
      required: !0,
      default: () => ({
        alwaysVisible: [],
        filters: []
      })
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    filtersVisibleAll: {
      type: Array,
      required: !0
    },
    id: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      hasFilters: t,
      styleHide: n,
      updateVisibleChildFilters: r
    } = Oq(e), {
      isLeastOneChildFilterLoading: s,
      updateLoadingChildFilters: l
    } = Rq();
    return {
      hasFilters: t,
      isLeastOneChildFilterLoading: s,
      styleHide: n,
      updateLoadingChildFilters: l,
      updateVisibleChildFilters: r
    };
  },
  render() {
    return this.hasFilters ? c("div", {
      class: "a_filters_center"
    }, [
      c("div", {
        class: "a_filters_center__item"
      }, [
        this.$slots.filtersHorizontal ? this.$slots.filtersHorizontal() : ""
      ]),
      this.filtersVisibleAll.map((e) => c(yq, {
        key: e.id,
        id: this.id,
        disabled: this.disabled,
        filter: e,
        closeFilterValue: this.closeFilterValue,
        dataKeyByKeyIdPerFilter: this.dataKeyByKeyIdPerFilter,
        model: this.appliedModel[e.id],
        onUpdateVisibleChildFilters: this.updateVisibleChildFilters,
        onUpdateLoadingChildFilters: this.updateLoadingChildFilters
      }, this.$slots)),
      this.isLeastOneChildFilterLoading ? c("div", {
        style: this.styleHide,
        class: "a_filters_center__item"
      }, [
        c(ul, {
          class: "a_spinner_small"
        })
      ]) : "",
      c("div", {
        class: "a_filters_center__item",
        style: this.styleHide
      }, [
        c(rt, {
          class: "a_btn a_btn_link a_btn_small",
          iconLeft: Cq,
          text: "_A_FILTERS_DESELECT_ALL_",
          onClick: this.closeAllFilters
        })
      ])
    ]) : null;
  }
}, Dq = {
  name: "ARequired",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    text: {
      type: String,
      required: !1,
      default: "_A_REQUIRED_TEXT_"
    }
  },
  render() {
    return c(Te, {
      alwaysTranslate: this.alwaysTranslate,
      class: "a_required",
      html: this.text
    });
  }
};
function Bq(e) {
  const t = f(e, "isHide");
  return {
    styleFormHide: _(() => t.value ? "display: none;" : "")
  };
}
function wq(e, { emit: t }) {
  const n = f(e, "modelValue"), r = _(() => n.value || {});
  return {
    modelValueLocal: r,
    onUpdateModelLocal: ({ item: l, model: o }) => {
      if (Pa.value[l.type])
        t("update:modelValue", o), t("change", { model: o });
      else {
        const u = pe(r.value), h = l.id;
        vc(u, h, pe(o)), t("update:modelValue", u), t("change", { model: u });
      }
    }
  };
}
function Pq(e) {
  const t = f(e, "data"), n = f(e, "isRequired");
  return {
    isRequiredLocal: _(() => {
      if (n.value)
        return !0;
      let s = !1;
      return Y(t.value, (l) => {
        if (l.required)
          return s = !0, !1;
      }), s;
    })
  };
}
const xu = {
  name: "AForm",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12 a_columns_gap_2"
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_12"
    },
    data: {
      type: Array,
      required: !0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRequired: {
      type: Boolean,
      required: !1
    },
    modelValue: {
      type: Object,
      required: !1,
      default: void 0
    },
    showErrors: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tag: {
      type: String,
      required: !1,
      default: "form"
    },
    textRequired: {
      type: String,
      required: !1,
      default: void 0
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue",
    "change"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      modelValueLocal: r,
      onUpdateModelLocal: s
    } = wq(e, t), {
      styleFormHide: l
    } = Bq(e), {
      isRequiredLocal: o
    } = Pq(e);
    return {
      attributesToExcludeFromRender: n,
      componentTypesMapping: () => ({
        ...Fu,
        ...$S,
        ...Ir.components,
        ...Ir.containerComponents
      }),
      isRequiredLocal: o,
      modelValueLocal: r,
      onUpdateModelLocal: s,
      styleFormHide: l
    };
  },
  render() {
    return this.isRender ? c(this.tag, {
      class: "a_form",
      style: this.styleFormHide
    }, [
      this.$slots.formPrepend ? this.$slots.formPrepend() : "",
      this.isRequiredLocal ? c(Dq, {
        text: this.textRequired
      }) : "",
      this.$slots.formPrependAfterRequired ? this.$slots.formPrependAfterRequired() : "",
      this.showErrors ? c(n$, {
        alwaysTranslate: this.alwaysTranslate,
        errors: this.errors,
        closable: !1,
        optionsList: this.data,
        idPrefix: this.idPrefix,
        textErrorHeader: this.textErrorHeader
      }) : "",
      c("div", {
        class: this.classColumns
      }, [
        this.$slots.formDataPrepend ? this.$slots.formDataPrepend() : "",
        ...this.data.map((e, t) => {
          const n = Pa.value[e.type];
          let r;
          le(e.classColumn) ? r = this.classColumnDefault : e.classColumn && (r = e.classColumn);
          const s = this.componentTypesMapping()[e.type];
          return c(s, {
            key: t,
            alwaysTranslate: this.alwaysTranslate,
            modelValue: n ? this.modelValueLocal : fe(this.modelValueLocal, e.id),
            modelDependencies: n ? this.modelValueLocal : void 0,
            class: r,
            errors: this.errors[e.id],
            errorsAll: n ? this.errors : void 0,
            idPrefix: this.idPrefix,
            excludeRenderAttributes: this.excludeRenderAttributes,
            "onUpdate:modelValue": (l) => this.onUpdateModelLocal({ item: e, model: l }),
            ...e,
            classColumn: void 0,
            ...this.attributesToExcludeFromRender
          }, this.$slots);
        }),
        this.$slots.formDataAppend ? this.$slots.formDataAppend() : ""
      ]),
      this.$slots.formAppend ? this.$slots.formAppend() : ""
    ]) : null;
  }
}, Ra = B({
  propsDefault: {
    align: "center",
    extra: void 0,
    size: 6,
    tag: "div",
    text: "_A_LOADING_LOADING_",
    textAlign: "right"
  }
}), Ade = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Ra.value.propsDefault = {
      ...Ra.value.propsDefault,
      ...t
    };
  }
}, qS = {
  name: "ALoading",
  inheritAttrs: !1,
  props: {
    align: {
      type: String,
      required: !1,
      default: () => Ra.value.propsDefault.align,
      validator: (e) => ["left", "center", "right"].indexOf(e) !== -1
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: () => Ra.value.propsDefault.extra
    },
    isLoading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => Ra.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    spinnerClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    spinnerSafeHtml: {
      type: String,
      required: !1,
      default: () => Fn.value.propsDefault.safeHtml
    },
    spinnerTag: {
      type: String,
      required: !1,
      default: () => Fn.value.propsDefault.tag
    },
    tag: {
      type: String,
      required: !1,
      default: () => Ra.value.propsDefault.tag
    },
    text: {
      type: String,
      required: !1,
      default: () => Ra.value.propsDefault.text
    },
    textAlign: {
      type: String,
      required: !1,
      default: () => Ra.value.propsDefault.textAlign,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    }
  },
  setup(e) {
    const {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    } = VT(e);
    return {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    };
  },
  render() {
    const e = this.textAlign === "left", t = c(Te, {
      alwaysTranslate: this.alwaysTranslate,
      tag: "span",
      class: [
        "a_cloak__text",
        e ? "a_cloak__text_left" : "a_cloak__text_right",
        this.classTextSize
      ],
      text: this.text,
      extra: this.extra
    });
    return [
      this.$slots.default && this.$slots.default(),
      this.isLoading && c(
        this.tag,
        {
          ...this.$attrs,
          role: "status",
          tabindex: -1,
          class: ["a_loading", this.classAlign]
        },
        [
          c("div", {
            class: ["a_cloak__box", this.classForBox]
          }, [
            e ? t : "",
            c(ul, {
              alwaysTranslate: this.alwaysTranslate,
              class: [
                "a_cloak__spinner",
                this.spinnerClass
              ],
              "aria-hidden": "true",
              safeHtml: this.spinnerSafeHtml,
              size: this.size,
              tag: this.spinnerTag
            }),
            e ? "" : t
          ])
        ]
      )
    ];
  }
};
function Fq(e) {
  const t = f(e, "hideHeader"), n = f(e, "id");
  return {
    headerId: _(() => {
      if (!t.value)
        return `${n.value}_header`;
    })
  };
}
function kS(e) {
  const t = f(e, "bodyHtml"), n = f(e, "id");
  return {
    bodyHtmlId: _(() => {
      if (t.value)
        return `${n.value}_body_html`;
    })
  };
}
function xq(e) {
  const t = f(e, "close"), n = f(e, "isConfirm"), r = () => {
    n.value || t.value();
  };
  return {
    destroyEventBusCloseFromOutside: () => {
      Rt.$off("closeModal", r);
    },
    initEventBusCloseFromOutside: () => {
      Rt.$on("closeModal", r);
    }
  };
}
function Mq(e) {
  const t = f(e, "disabled"), n = f(e, "loading");
  return {
    disabledLocal: _(() => t.value || n.value)
  };
}
function $q(e) {
  const t = f(e, "close"), n = f(e, "useEscape"), {
    isOnePopupOpen: r
  } = lf();
  return {
    pressEscape: (l) => {
      !n.value || r.value || (t.value(), l.preventDefault(), l.stopPropagation());
    }
  };
}
function qq(e) {
  const t = f(e, "focusStartId"), n = f(e, "focusStartId"), r = B(void 0), s = B(void 0), l = () => {
    const A = document.getElementById(t.value);
    A && A.focus();
  }, o = () => {
    var E;
    const A = ((E = s.value) == null ? void 0 : E.querySelectorAll(Ei)) || [];
    A.length !== 0 && A[0].focus();
  };
  return {
    modalRef: r,
    modalWrapperRef: s,
    setFocusByShowModal: () => {
      setTimeout(() => {
        n.value || (t.value ? l() : o());
      });
    },
    trapFocus: (A) => {
      const E = s.value.querySelectorAll(Ei);
      if (E.length === 0) {
        A.preventDefault();
        return;
      }
      const p = E[0], T = E[E.length - 1];
      A.shiftKey ? document.activeElement === p && (T.focus(), A.preventDefault()) : document.activeElement === T && (p.focus(), A.preventDefault());
    }
  };
}
function kq(e) {
  const t = f(e, "selectorClose"), n = f(e, "selectorCloseIds"), r = _(() => {
    const o = [];
    return n.value && (ot(n.value) ? o.push(`#${n.value}`) : Se(n.value) && Y(n.value, (u) => {
      o.push(`#${u}`);
    })), t.value && (ot(t.value) ? o.push(t.value) : Se(t.value) && o.push(...t.value)), o;
  }), s = ({ selector: o }) => {
    const u = document.querySelector(o);
    return u ? (u.focus(), !0) : !1;
  };
  return {
    setFocusByDestroy: () => {
      if (!r.value.length)
        return;
      const o = pe(r.value);
      setTimeout(() => {
        Y(o, (u) => {
          if (s({ selector: u }))
            return !1;
        });
      }, 300);
    }
  };
}
function Uq({
  removeListenerForKeydown: e = () => {
  },
  setFocusByDestroy: t = () => {
  }
}) {
  return {
    hideModal: () => {
      document.body.classList.remove("a_modal_open"), t(), e();
    }
  };
}
function Hq({
  pressEscape: e = () => {
  },
  trapFocus: t = () => {
  }
}) {
  const n = (l) => {
    const o = l || window.$event;
    o.key === "Escape" || o.keyCode === Z.escape ? e(l) : (o.key === "Tab" || o.keyCode === Z.tab) && t(o);
  };
  return {
    setListenerForKeydown: () => {
      document.addEventListener("keydown", n);
    },
    removeListenerForKeydown: () => {
      document.removeEventListener("keydown", n);
    }
  };
}
function Vq(e, {
  checkOpenedModals: t = () => {
  },
  setFocusByShowModal: n = () => {
  },
  setListenerForKeydown: r = () => {
  }
}) {
  const s = f(e, "isModalHidden");
  return {
    showModal: () => {
      s.value || (t(), document.body.classList.add("a_modal_open"), n(), r());
    }
  };
}
function Wq(e) {
  const t = f(e, "size");
  return {
    sizeClass: _(() => {
      if (t.value)
        return `a_modal_${t.value}`;
    })
  };
}
function Gq(e) {
  const t = f(e, "stop");
  return {
    clickWrapperStoppPropagationEventMap: _(() => t.value ? {
      onClick: (r) => r.stopPropagation()
    } : {})
  };
}
function Kq(e) {
  const t = f(e, "backdropZIndex"), n = f(e, "zIndex"), r = B(0), s = _(() => {
    const u = {};
    return n.value ? u["--a_modal_zindex"] = n.value : r.value > 2 && (u["--a_modal_zindex"] = 1055 + r.value - 1), u;
  }), l = _(() => {
    const u = {};
    return t.value ? u["--a__backdrop_zindex"] = t.value : r.value > 2 && (u["--a__backdrop_zindex"] = 1050 + r.value - 1), u;
  });
  return {
    checkOpenedModals: () => {
      const u = document.querySelectorAll(".a_backdrop");
      r.value = (u == null ? void 0 : u.length) || 0;
    },
    countOpenedModals: r,
    stylesBackdrop: l,
    stylesZIndexModal: s
  };
}
const ge = B({
  propsDefault: {
    closeButtonClass: "a_btn a_btn_secondary",
    closeButtonText: "_A_MODAL_BTN_CANCEL_",
    closeButtonTextScreenReaderFooter: "_A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_",
    closeButtonTextScreenReaderHeader: "_A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_",
    headerTag: "h2",
    idPrefix: void 0,
    isCloseButtonHide: !1,
    isDataFormHide: !1,
    isDataFormRender: !0,
    isFooterSticky: !1,
    isRequired: !1,
    isSaveButtonHide: !1,
    modalClass: void 0,
    modalStyle: void 0,
    saveButtonClass: "a_btn a_btn_primary",
    saveButtonText: "_A_MODAL_BTN_SAVE_",
    saveButtonTextScreenReader: "_A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_",
    selectorClose: void 0,
    selectorCloseIds: void 0,
    size: void 0,
    textRequired: void 0,
    useEscape: !0
  }
}), Ede = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    ge.value.propsDefault = {
      ...ge.value.propsDefault,
      ...t
    };
  }
}, Mu = {
  name: "AModal",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    bodyHtml: {
      type: String,
      required: !1,
      default: ""
    },
    bodyHtmlClass: {
      type: [String, Array, Object],
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideFooter: {
      type: Boolean,
      required: !1
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_modal_")
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isCloseButtonHide
    },
    isConfirm: {
      type: Boolean,
      required: !1
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isFooterSticky
    },
    isModalHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalStyle
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorCloseIds
    },
    showCloseButtonHeader: {
      type: Boolean,
      required: !1,
      default: !0
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => ge.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = f(e, "isModalHidden"), {
      checkOpenedModals: n,
      stylesBackdrop: r,
      stylesZIndexModal: s
    } = Kq(e), {
      bodyHtmlId: l
    } = kS(e), {
      destroyEventBusCloseFromOutside: o,
      initEventBusCloseFromOutside: u
    } = xq(e), {
      headerId: h
    } = Fq(e), {
      sizeClass: A
    } = Wq(e), {
      disabledLocal: E
    } = Mq(e), {
      modalRef: p,
      modalWrapperRef: T,
      setFocusByShowModal: m,
      trapFocus: L
    } = qq(e), {
      setFocusByDestroy: b
    } = kq(e), {
      pressEscape: v
    } = $q(e), {
      setListenerForKeydown: I,
      removeListenerForKeydown: y
    } = Hq({
      pressEscape: v,
      trapFocus: L
    }), {
      showModal: R
    } = Vq(e, {
      checkOpenedModals: n,
      setFocusByShowModal: m,
      setListenerForKeydown: I
    }), {
      hideModal: D
    } = Uq({
      removeListenerForKeydown: y,
      setFocusByDestroy: b
    }), {
      clickWrapperStoppPropagationEventMap: w
    } = Gq(e);
    return tt(t, () => {
      t.value ? D() : R();
    }), u(), Vr(() => {
      R();
    }), Ct(() => {
      o();
    }), dp(() => {
      D();
    }), {
      bodyHtmlId: l,
      clickWrapperStoppPropagationEventMap: w,
      disabledLocal: E,
      headerId: h,
      modalRef: p,
      modalWrapperRef: T,
      sizeClass: A,
      stylesBackdrop: r,
      stylesZIndexModal: s
    };
  },
  render() {
    const e = this.hideFooter ? "" : c("div", {
      ref: "modal_footer",
      class: [
        "a_modal_footer",
        {
          a_modal_footer_sticky: this.isFooterSticky
        }
      ]
    }, [
      c(qS, {
        alwaysTranslate: this.alwaysTranslate,
        isLoading: this.loading
      }, () => [
        c("div", {
          class: "a_modal_footer_actions"
        }, [
          this.$slots.modalFooterPrepend && this.$slots.modalFooterPrepend(),
          !this.isSaveButtonHide && this.save && c(ye, {
            id: this.saveButtonId,
            alwaysTranslate: this.alwaysTranslate,
            class: this.saveButtonClass,
            disabled: this.disabledLocal || this.disabledSave,
            extra: this.extra,
            html: this.saveButtonText,
            textAriaHidden: !0,
            textScreenReader: this.saveButtonTextScreenReader,
            type: "button",
            ...this.saveButtonAttributes,
            onClick: this.save
          }),
          !this.isCloseButtonHide && c(ye, {
            id: this.closeButtonId,
            alwaysTranslate: this.alwaysTranslate,
            class: this.closeButtonClass,
            disabled: this.disabledLocal,
            extra: this.extra,
            html: this.closeButtonText,
            textAriaHidden: !0,
            textScreenReader: this.closeButtonTextScreenReaderFooter,
            type: "button",
            ...this.closeButtonAttributes,
            onClick: () => this.close(!0)
          }),
          this.$slots.modalFooterAppend && this.$slots.modalFooterAppend()
        ])
      ])
    ]);
    return c(ia, {
      to: "body"
    }, [
      c("div", {
        ref: "modalWrapperRef",
        ...this.clickWrapperStoppPropagationEventMap
      }, [
        c("div", {
          ref: "modalRef",
          id: this.id,
          class: ["a_modal", this.modalClass, {
            a_modal_confirm: this.isConfirm,
            a_modal_show: !this.isModalHidden
          }],
          role: "dialog",
          ariaModal: !0,
          "aria-labelledby": this.headerId,
          "aria-describedby": this.bodyHtmlId,
          style: [
            this.modalStyle,
            this.stylesZIndexModal
          ],
          ...this.$attrs
        }, [
          c("div", {
            class: ["a_modal_dialog a_modal_dialog_scrollable", this.sizeClass]
          }, [
            c("div", {
              class: [
                "a_modal_content",
                {
                  a_modal_content_with_footer_sticky: this.isFooterSticky
                }
              ]
            }, [
              this.hideHeader ? "" : c("div", {
                ref: "modal_header",
                class: "a_modal_header"
              }, [
                c("div", {
                  id: this.headerId
                }, [
                  this.$slots.modalHeader ? this.$slots.modalHeader() : "",
                  this.headerText ? c(this.headerTag, {
                    class: "a_modal_title"
                  }, [
                    c(Te, {
                      alwaysTranslate: this.alwaysTranslate,
                      tag: "span",
                      html: this.headerText,
                      extra: this.extra
                    })
                  ]) : ""
                ]),
                this.showCloseButtonHeader ? c(ye, {
                  alwaysTranslate: this.alwaysTranslate,
                  class: "a_btn_close",
                  disabled: this.disabledLocal,
                  textScreenReader: this.closeButtonTextScreenReaderHeader,
                  title: this.closeButtonTextScreenReaderHeader,
                  type: "button",
                  onClick: () => this.close(!0)
                }) : ""
              ]),
              c("div", {
                ref: "modal_body",
                class: "a_modal_body"
              }, [
                c("div", {
                  ref: "modal_body",
                  class: "a_modal_body__content"
                }, [
                  this.bodyHtml && c(Te, {
                    id: this.bodyHtmlId,
                    alwaysTranslate: this.alwaysTranslate,
                    class: this.bodyHtmlClass,
                    html: this.bodyHtml,
                    extra: this.extra
                  }),
                  this.$slots.modalBody && this.$slots.modalBody()
                ]),
                this.isFooterSticky ? e : ""
              ]),
              this.isFooterSticky ? "" : e
            ])
          ])
        ])
      ]),
      !this.isModalHidden && c("div", {
        class: [
          "a_backdrop a_backdrop_fade a_backdrop_show",
          {
            a_backdrop_confirm: this.isConfirm
          }
        ],
        style: this.stylesBackdrop
      })
    ]);
  }
};
function jq(e) {
  const t = f(e, "dataForm");
  return {
    hasDataForm: _(() => t.value.length > 0)
  };
}
function zq({ emit: e }) {
  return {
    updateModelLocal: (n) => {
      e("update:modelValue", n);
    }
  };
}
const Yq = {
  name: "AModalForm",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    bodyHtml: {
      type: String,
      required: !1,
      default: ""
    },
    bodyHtmlClass: {
      type: [String, Array, Object],
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    dataForm: {
      type: Array,
      required: !1,
      default: () => []
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideFooter: {
      type: Boolean,
      required: !1
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_modal_form_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.idPrefix
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isCloseButtonHide
    },
    isConfirm: {
      type: Boolean,
      required: !1
    },
    isDataFormHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isDataFormHide
    },
    isDataFormRender: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isDataFormRender
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isFooterSticky
    },
    isModalHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isRequired: {
      type: Boolean,
      required: !1,
      default: ge.value.propsDefault.isRequired
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalStyle
    },
    modelValue: {
      type: Object,
      required: !1,
      default: void 0
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorCloseIds
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => ge.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: void 0
    },
    textRequired: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.textRequired
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      bodyHtmlId: n
    } = kS(e), {
      hasDataForm: r
    } = jq(e), {
      updateModelLocal: s
    } = zq(t);
    return {
      bodyHtmlId: n,
      hasDataForm: r,
      updateModelLocal: s
    };
  },
  render() {
    return c(Mu, {
      alwaysTranslate: this.alwaysTranslate,
      backdropZIndex: this.backdropZIndex,
      close: this.close,
      closeButtonClass: this.closeButtonClass,
      closeButtonId: this.closeButtonId,
      closeButtonText: this.closeButtonText,
      closeButtonTextScreenReaderFooter: this.closeButtonTextScreenReaderFooter,
      closeButtonTextScreenReaderHeader: this.closeButtonTextScreenReaderHeader,
      disabled: this.disabled,
      disabledSave: this.disabledSave,
      extra: this.extra,
      focusStartId: this.focusStartId,
      headerTag: this.headerTag,
      headerText: this.headerText,
      hideFooter: this.hideFooter,
      hideHeader: this.hideHeader,
      id: this.id,
      isCloseButtonHide: this.isCloseButtonHide,
      isConfirm: this.isConfirm,
      isFooterSticky: this.isFooterSticky,
      isModalHidden: this.isModalHidden,
      isSaveButtonHide: this.isSaveButtonHide,
      loading: this.loading,
      modalClass: this.modalClass,
      modalStyle: this.modalStyle,
      save: this.save,
      saveButtonClass: this.saveButtonClass,
      saveButtonId: this.saveButtonId,
      saveButtonText: this.saveButtonText,
      saveButtonTextScreenReader: this.saveButtonTextScreenReader,
      selectorClose: this.selectorClose,
      selectorCloseIds: this.selectorCloseIds,
      size: this.size,
      stop: this.stop,
      useEscape: this.useEscape,
      useFocusOnStart: this.useFocusOnStart,
      zIndex: this.zIndex,
      "aria-describedby": this.bodyHtmlId
    }, {
      ...this.$slots || {},
      modalBody: () => [
        this.$slots.modalBodyPrepend && this.$slots.modalBodyPrepend(),
        this.bodyHtml && c(Te, {
          id: this.bodyHtmlId,
          alwaysTranslate: this.alwaysTranslate,
          class: this.bodyHtmlClass,
          html: this.bodyHtml,
          extra: this.extra
        }),
        this.hasDataForm && c(xu, {
          alwaysTranslate: this.alwaysTranslate,
          modelValue: this.modelValue,
          data: this.dataForm,
          errors: this.errors,
          idPrefix: this.idPrefix,
          isRequired: this.isRequired,
          textRequired: this.textRequired,
          textErrorHeader: this.textErrorHeader,
          isHide: this.isDataFormHide,
          isRender: this.isDataFormRender,
          "onUpdate:modelValue": this.updateModelLocal
        }, this.$slots),
        this.$slots.modalBodyAppend && this.$slots.modalBodyAppend()
      ]
    });
  }
};
function Xq(e, {
  model: t = B({})
}) {
  const n = f(e, "filtersSaved"), r = _(() => {
    const u = {};
    return Y(n.value, (h) => {
      u[h.label] = !0;
    }), u;
  }), s = _(() => r.value[t.value.name]), l = _(() => {
    if (s.value)
      return "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_";
  });
  return {
    dataForm: _(() => [
      {
        id: "name",
        label: "_A_FILTERS_SAVE_LABEL_NAME_",
        type: "text",
        required: !0,
        extra: {
          name: t.value.name || ""
        },
        helpText: l.value
      }
    ]),
    isUpdate: s
  };
}
function Zq(e) {
  const t = f(e, "isModelFilterSavedNew"), n = f(e, "modelFiltersSaved"), r = B({});
  return {
    initModel: () => {
      n.value && !t.value && (r.value = {
        name: n.value
      });
    },
    model: r,
    updateModel: (o) => {
      r.value = o;
    }
  };
}
let US = 5e3;
const nu = B({}), Jq = _(() => Sc(nu.value));
let JE = 0;
function $u() {
  return {
    addNotification: ek,
    removeNotification: HS,
    notifications: Jq,
    setNotificationTimeout: Qq
  };
}
function Qq(e) {
  US = e;
}
function ek({ text: e, type: t = "success", timeout: n, extra: r, useValuesFromObject: s = !0 }) {
  const l = le(n) ? US : n, o = JE, u = t === "error" ? "danger" : t;
  let h = e;
  nt(e) && s && (h = xP(e)), nu.value[o] = {
    text: h,
    type: u,
    index: o,
    extra: r
  }, JE++, l && setTimeout(() => {
    HS(o);
  }, l);
}
function HS(e) {
  nu.value[e] && delete nu.value[e];
}
function tk(e, { emit: t }, {
  isUpdate: n = _(() => !1),
  model: r = B({})
}) {
  const s = f(e, "changeModelFiltersSaved"), l = f(e, "updateFiltersSaved"), o = B(void 0), {
    addNotification: u
  } = $u(), h = _(() => !r.value.name), A = () => {
    t("close");
  };
  return {
    close: A,
    disabledBtnSave: h,
    loading: o,
    save: async () => {
      o.value = !0;
      const p = n.value;
      try {
        await l.value({
          action: p ? "update" : "create",
          label: r.value.name
        });
      } catch {
        u({
          text: "_A_FILTERS_SAVE_MSG_ERROR_",
          type: "danger"
        }), o.value = !1;
        return;
      }
      u({
        text: p ? "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_" : "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
        extra: {
          name: r.value.name
        }
      }), s.value({ model: r.value.name, isCreateOrEdit: !0 }), A(), o.value = !1;
    }
  };
}
const nk = {
  name: "AFiltersSaveModal",
  props: {
    changeModelFiltersSaved: {
      type: Function,
      required: !0
    },
    filtersSaved: {
      type: Array,
      required: !0
    },
    isModelFilterSavedNew: {
      type: Boolean,
      required: !0
    },
    modelFiltersSaved: {
      type: String,
      required: !1,
      default: void 0
    },
    selectorCloseIds: {
      type: String,
      required: !0
    },
    updateFiltersSaved: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      initModel: n,
      model: r,
      updateModel: s
    } = Zq(e), {
      dataForm: l,
      isUpdate: o
    } = Xq(e, {
      model: r
    }), {
      close: u,
      disabledBtnSave: h,
      loading: A,
      save: E
    } = tk(e, t, {
      isUpdate: o,
      model: r
    });
    return n(), {
      close: u,
      dataForm: l,
      disabledBtnSave: h,
      initModel: n,
      loading: A,
      model: r,
      save: E,
      updateModel: s
    };
  },
  render() {
    return c(Yq, {
      close: this.close,
      dataForm: this.dataForm,
      disabledSave: this.disabledBtnSave,
      headerText: "_A_FILTERS_SAVE_MODAL_HEADER_",
      modelValue: this.model,
      idPrefix: "modal_filter_top_",
      loading: this.loading,
      selectorCloseIds: this.selectorCloseIds,
      size: "large",
      save: this.save,
      stop: !0,
      zIndex: 1901,
      backdropZIndex: 1900,
      "onUpdate:modelValue": this.updateModel
    }, {
      modalBodyPrepend: () => [
        c($c, {
          type: "info",
          isVisible: !0,
          safeHtml: "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_"
        })
      ]
    });
  }
};
function rk(e) {
  const t = f(e, "filtersGroup"), n = B(void 0), r = _(() => !!(t.value.alwaysVisible.length || t.value.filters.length));
  return {
    closeDropdown: () => {
      var o;
      (o = n.value) == null || o.onClose({ trigger: "click" });
    },
    dropdownRef: n,
    isDropdownVisible: r,
    openDropdown: (o) => {
      var u;
      (u = n.value) == null || u.onOpen({ trigger: "click", selectorToFocus: o });
    }
  };
}
function ak(e, {
  openDropdown: t = () => {
  }
}) {
  const n = f(e, "id");
  let r;
  return {
    destroyEventBus: () => {
      Rt.$off(r, t);
    },
    initEventBus: () => {
      Rt.$on(r, t);
    },
    initEventName: () => {
      r = `eventATableFilterTopOnOpen_${n.value}`;
    }
  };
}
function sk(e, { emit: t }) {
  const n = f(e, "filtersGroup"), r = f(e, "filtersVisible"), s = ({ isAdd: E, filterId: p, filter: T }) => {
    t("toggleFiltersVisible", { isAdd: E, filterId: p, filter: T });
  }, l = ({ model: E }) => {
    s({ isAdd: !0, filterId: E });
  }, o = ({ filter: E }) => {
    s({ isAdd: !1, filterId: E.id, filter: E });
  }, u = _(() => !!(n.value.filters && n.value.filters.length)), h = _(() => {
    const E = {};
    return Y(r.value, (p) => {
      E[p.id] = !0;
    }), E;
  }), A = _(() => u.value ? Pt(n.value.filters, (E) => !h.value[E.id]) : []);
  return {
    addFiltersVisible: l,
    deleteFiltersVisible: o,
    filtersHidden: A,
    hasFiltersHiddenDefault: u
  };
}
function ik(e, {
  openDropdown: t = () => ({})
}) {
  const n = f(e, "filtersSaved"), r = f(e, "id"), s = f(e, "onUpdateModelFilters"), l = "_A_FILTERS_HOR_FILTER_NEW_", o = B(void 0), u = B(void 0), h = B(void 0), A = _(() => `${r.value}btn_save_`), E = _(() => u.value === l), p = _(() => {
    const v = [{
      label: l
    }];
    return Y(pe(n.value), (I) => {
      I.group = "_A_FILTERS_FILTER_SAVED_GROUP_MY_", v.push(I);
    }), v;
  });
  return {
    buttonSaveComponentId: A,
    changeModelFiltersSaved: ({ model: v, item: I, isDelete: y, isCreateOrEdit: R }) => {
      if (R) {
        u.value = v;
        return;
      }
      if ((I == null ? void 0 : I.label) === l || y) {
        s.value({
          model: {},
          isUpdateFiltersVisible: !0
        }), u.value = l;
        return;
      }
      v ? (u.value = v, I && (s.value({
        model: I.data || {},
        isUpdateFiltersVisible: !0
      }), t())) : I && (s.value({
        model: I.data || {},
        isUpdateFiltersVisible: !0
      }), t());
    },
    closeModalSave: () => {
      o.value = !1;
    },
    filtersSavedLocal: p,
    initModelFiltersSaved: () => {
      u.value = l;
    },
    isModalSaveVisible: o,
    isModelFilterSavedNew: E,
    modelFiltersSaved: u,
    openModalSave: () => {
      h.value = A.value, o.value = !0;
    },
    selectorCloseIds: h
  };
}
const pd = B(!0), Xi = B({});
function uf() {
  const e = (r = {}) => {
    Y(r, (s, l) => {
      Xi.value[l] = s;
    });
  };
  return {
    changeConfirmOptions: e,
    closeConfirm: (r) => {
      r && Me(Xi.value.close) && Xi.value.close(), pd.value = !0, setTimeout(() => {
        Xi.value = {};
      });
    },
    confirmOptions: Xi,
    isModalHidden: pd,
    openConfirm: (r = {}) => {
      e(r), pd.value = !1;
    }
  };
}
function lk(e, {
  changeModelFiltersSaved: t = () => {
  },
  idFilterTop: n = _(() => ""),
  isModelFilterSavedNew: r = _(() => !1),
  modelFiltersSaved: s = B(void 0)
}) {
  const l = f(e, "id"), o = f(e, "updateFiltersSaved"), {
    changeConfirmOptions: u,
    closeConfirm: h,
    isModalHidden: A,
    openConfirm: E
  } = uf(), {
    addNotification: p
  } = $u(), T = _(() => `${l.value}btn_save`), m = _(() => r.value ? "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_" : {
    mobile: "_A_FILTERS_DELETE_FILTER_SAVED_BTN_"
  }), L = _(() => r.value ? "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_" : "_A_FILTERS_DELETE_FILTER_SAVED_BTN_"), b = async () => {
    u({
      loading: !0
    });
    try {
      await o.value({
        action: "delete",
        label: s.value
      });
    } catch {
      p({
        text: "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
        type: "danger",
        extra: {
          name: s.value
        }
      }), u({
        loading: !1
      });
      return;
    }
    p({
      text: "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
      extra: {
        name: s.value
      }
    }), u({
      loading: !1
    }), h(), t({ model: void 0, isDelete: !0 });
  };
  return {
    buttonDeleteId: T,
    isConfirmHidden: A,
    openDeleteConfirm: () => {
      E({
        headerText: "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
        bodyHtml: "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
        extra: {
          name: s.value
        },
        save: b,
        selectorCloseIds: [T.value, n.value],
        saveButtonText: "_A_FILTERS_DELETE_FILTER_BTN_DELETE_",
        stop: !0,
        zIndex: 1901,
        backdropZIndex: 1900
      });
    },
    textScreenreaderButtonDeleteFiltersSaved: L,
    titleButtonDeleteFiltersSaved: m
  };
}
function ok(e) {
  const t = f(e, "filtersGroup"), n = f(e, "filtersVisible"), r = f(e, "updateDataKeyByIdFromFilter"), s = "a_column a_column_12_touch a_column_3_fullhd a_column_3_widescreen a_column_3_desktop", l = "a_columns a_columns_count_12 a_columns_gap_x_2 a_columns_gap_y_2 a_columns_gap_y_1_touch", o = "a_filters__form_element a_column a_column_12_touch a_column_9_fullhd a_column_9_widescreen a_column_9_desktop", u = ["select", "multiselect", "radio", "checkbox", "group", "fieldset"], h = ({ dataKeyByKeyId: E, item: p, filter: T }) => {
    let m = T.id;
    p && (m = p.id), r.value({
      filterId: m,
      dataKeyByKeyId: E
    });
  };
  return {
    dataForForm: _(() => {
      const E = [];
      return Y(t.value.alwaysVisible, (p) => {
        const T = pe(p);
        T.labelClass = s, T.classColumn = o, u.indexOf(p.type) !== -1 && (T.onUpdateData = ({ dataKeyByKeyId: m, item: L }) => h({ dataKeyByKeyId: m, item: L, filter: p })), E.push({
          type: "group",
          id: `group_${p.id}`,
          classColumns: l,
          children: [
            T
          ]
        });
      }), Y(n.value, (p) => {
        const T = pe(p);
        T.labelClass = s, T.classColumn = `${o}  a_d_flex a_align_items_center`, T.slotAppend = "groupAppend", T.class = "a_width_100", u.indexOf(p.type) !== -1 && (T.onUpdateData = ({ dataKeyByKeyId: m, item: L }) => h({ dataKeyByKeyId: m, item: L, filter: p })), E.push({
          type: "group",
          id: `group_${p.id}`,
          classColumns: l,
          children: [
            T
          ]
        });
      }), E;
    })
  };
}
function uk(e) {
  const t = f(e, "id");
  return {
    idFilterTop: _(() => `${t.value}_filter_top`)
  };
}
function _k(e, { emit: t }, {
  closeDropdown: n = () => {
  }
}) {
  const r = f(e, "disabled");
  return {
    onSearch: () => {
      r.value || (n(), t("startSearch"));
    }
  };
}
const dk = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-filter" viewBox="0 0 16 16">
  <path d="M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5"/>
</svg>`, ck = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-floppy2-fill" viewBox="0 0 16 16">
  <path d="M12 2h-2v3h2z"/>
  <path d="M1.5 0A1.5 1.5 0 0 0 0 1.5v13A1.5 1.5 0 0 0 1.5 16h13a1.5 1.5 0 0 0 1.5-1.5V2.914a1.5 1.5 0 0 0-.44-1.06L14.147.439A1.5 1.5 0 0 0 13.086 0zM4 6a1 1 0 0 1-1-1V1h10v4a1 1 0 0 1-1 1zM3 9h10a1 1 0 0 1 1 1v5H2v-5a1 1 0 0 1 1-1"/>
</svg>`, VS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2"/>
</svg>`, WS = `<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 1024 1024">
    <path d="M761.37 637.327l256.642 256.642q5.988 6.844 5.988 15.399t-5.988 15.399l-93.246 93.246q-6.844 5.988-15.399 5.988t-15.399-5.988l-256.642-256.642q-101.802 66.727-223.278 66.727-171.095 0-292.572-121.477t-121.477-292.572 121.477-292.572 292.572-121.477 292.572 121.477 121.477 292.572q0 121.477-66.727 223.278zM130.887 414.049q0 116.344 82.981 199.325t200.181 82.981 199.753-82.553 82.553-199.753-82.553-199.753-199.753-82.553-200.181 82.981-82.981 199.325z"></path>
</svg>
`, fk = {
  name: "AFiltersHorizontal",
  props: {
    canSave: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersGroup: {
      type: Object,
      required: !0,
      default: () => ({
        alwaysVisible: [],
        filters: []
      })
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    filtersSaved: {
      type: Array,
      required: !0
    },
    filtersVisible: {
      type: Array,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    mainModel: {
      type: Object,
      required: !1
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    unappliedModel: {
      type: Object,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    },
    updateFiltersSaved: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch",
    "toggleFiltersVisible"
  ],
  setup(e, t) {
    const {
      dataForForm: n
    } = ok(e), {
      closeDropdown: r,
      dropdownRef: s,
      isDropdownVisible: l,
      openDropdown: o
    } = rk(e), {
      idFilterTop: u
    } = uk(e), {
      onSearch: h
    } = _k(e, t, {
      closeDropdown: r
    }), {
      destroyEventBus: A,
      initEventBus: E,
      initEventName: p
    } = ak(e, {
      openDropdown: o
    }), {
      addFiltersVisible: T,
      deleteFiltersVisible: m,
      filtersHidden: L,
      hasFiltersHiddenDefault: b
    } = sk(e, t), {
      buttonSaveComponentId: v,
      changeModelFiltersSaved: I,
      closeModalSave: y,
      filtersSavedLocal: R,
      initModelFiltersSaved: D,
      isModalSaveVisible: w,
      isModelFilterSavedNew: M,
      modelFiltersSaved: P,
      openModalSave: x,
      selectorCloseIds: C
    } = ik(e, {
      openDropdown: o
    }), {
      buttonDeleteId: q,
      isConfirmHidden: W,
      openDeleteConfirm: z,
      textScreenreaderButtonDeleteFiltersSaved: oe,
      titleButtonDeleteFiltersSaved: te
    } = lk(e, {
      changeModelFiltersSaved: I,
      idFilterTop: u,
      isModelFilterSavedNew: M,
      modelFiltersSaved: P
    });
    return p(), D(), E(), Ct(() => {
      A();
    }), {
      addFiltersVisible: T,
      buttonDeleteId: q,
      buttonSaveComponentId: v,
      changeModelFiltersSaved: I,
      closeDropdown: r,
      closeModalSave: y,
      dataForForm: n,
      deleteFiltersVisible: m,
      dropdownRef: s,
      filtersHidden: L,
      filtersSavedLocal: R,
      hasFiltersHiddenDefault: b,
      idFilterTop: u,
      initModelFiltersSaved: D,
      isConfirmHidden: W,
      isDropdownVisible: l,
      isModalSaveVisible: w,
      isModelFilterSavedNew: M,
      modelFiltersSaved: P,
      onSearch: h,
      openDeleteConfirm: z,
      openModalSave: x,
      selectorCloseIds: C,
      textScreenreaderButtonDeleteFiltersSaved: oe,
      titleButtonDeleteFiltersSaved: te
    };
  },
  render() {
    return this.isDropdownVisible ? [
      c(sa, {
        ref: "dropdownRef",
        buttonIconLeft: dk,
        buttonText: "Filter",
        buttonClass: "a_btn a_btn_primary a_btn_small a_filter_horizontal__btn_dropdown",
        dropdownTag: "div",
        dropdownClass: "a_filter_horizontal__wrapper",
        dropdownRenderDefault: !0,
        isCloseByClickInside: !1,
        hasCaret: !1,
        inBody: !0,
        lockArrowsNavigation: !1,
        lockTabNavigation: !1,
        useEscape: !this.isModalSaveVisible && this.isConfirmHidden
      }, {
        ...this.$slots,
        dropdown: () => c("div", {
          class: "a_filter_horizontal"
        }, [
          c("div", {
            class: "a_filter_horizontal__header__wrapper"
          }, [
            c("div", {
              class: "a_filter_horizontal__header"
            }, [
              c("div", {
                class: "a_filter_horizontal__header__texts"
              }, [
                c(Te, {
                  class: "a_filter_horizontal__header__texts__filter",
                  tag: "span",
                  text: "_A_FILTERS_HOR_FILTER_HEADER_"
                }),
                this.isModelFilterSavedNew ? c(Te, {
                  class: "a_filter_horizontal__header__texts__new",
                  tag: "em",
                  text: this.modelFiltersSaved
                }) : c("span", {}, this.modelFiltersSaved)
              ]),
              this.canSave ? c(ws, {
                modelValue: this.modelFiltersSaved,
                change: this.changeModelFiltersSaved,
                class: "a_filters_top__save_select",
                data: this.filtersSavedLocal,
                deselectable: !1,
                keyId: "label",
                keyLabel: "label",
                keyGroup: "group",
                label: "_A_FILTERS_SAVE_SELECT_",
                menuWidthType: "by_content",
                search: !0,
                translateData: !0,
                type: "select"
              }) : ""
            ])
          ]),
          c("div", {
            class: "a_filter_horizontal__body__wrapper"
          }, [
            c("div", {
              class: "a_filter_horizontal__body"
            }, [
              c(xu, {
                idPrefix: this.idFilterTop,
                class: "a_filter_horizontal__body__form",
                classColumnDefault: "",
                classColumns: "",
                data: this.dataForForm,
                excludeRenderAttributes: this.excludeRenderAttributes,
                modelValue: this.unappliedModel,
                showErrors: !1,
                onChange: this.onUpdateModelFilters
              }, {
                ...this.$slots,
                groupAppend: ({ item: e }) => c(ye, {
                  type: "button",
                  class: "a_btn a_btn_primary a_ml_2",
                  title: "_A_FILTERS_TOP_CLOSE_",
                  textScreenReader: "_A_FILTERS_TOP_CLOSE_",
                  iconLeft: ca,
                  stop: !0,
                  onClick: () => this.deleteFiltersVisible({ filter: e })
                }),
                formDataAppend: () => c("div", {
                  class: "a_filter_horizontal__add_filter__wrapper"
                }, [
                  c(ws, {
                    buttonClassDefault: "a_btn a_btn_primary a_filter_horizontal__add_filter",
                    change: this.addFiltersVisible,
                    data: this.filtersHidden,
                    hasCaret: !1,
                    disabled: !this.filtersHidden.length,
                    isLabelFloat: !1,
                    keyGroup: "group",
                    keyId: "id",
                    keyLabel: "label",
                    label: "_A_FILTERS_ADD_FILTER_",
                    labelClass: "a_sr_only",
                    menuWidthType: "by_content",
                    sortOrderGroup: "asc",
                    placement: "bottom-start",
                    search: !0,
                    translateData: !0,
                    type: "select"
                  }, {
                    fixedPlaceholder: () => [
                      c(Te, {
                        tag: "span",
                        ariaHidden: !0,
                        class: "a_position_absolute_all",
                        title: "_A_FILTERS_ADD_FILTER_"
                      }),
                      c(lt, {
                        icon: VS
                      })
                    ]
                  })
                ]),
                formAppend: () => this.canSave ? c("div", {
                  class: "a_filter_horizontal__save_actions"
                }, [
                  c(ye, {
                    id: this.buttonSaveComponentId,
                    class: "a_btn a_btn_primary",
                    iconLeft: ck,
                    type: "button",
                    text: "_A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_",
                    onClick: this.openModalSave
                  }),
                  c(ye, {
                    id: this.buttonDeleteId,
                    ariaDisabled: this.isModelFilterSavedNew,
                    class: "a_btn a_btn_secondary",
                    iconLeft: CS,
                    text: {
                      desktop: "_A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_"
                    },
                    textAriaHidden: !0,
                    textScreenReader: this.textScreenreaderButtonDeleteFiltersSaved,
                    title: this.titleButtonDeleteFiltersSaved,
                    type: "button",
                    onClick: this.openDeleteConfirm
                  })
                ]) : ""
              })
            ]),
            c("div", {
              class: "a_filter_horizontal__footer"
            }, [
              c("div", {
                class: "a_filter_horizontal__footer__actions"
              }, [
                c(ye, {
                  type: "button",
                  class: "a_btn a_btn_primary a_text_nowrap a_filter_horizontal__footer__actions__btn_search",
                  iconLeft: WS,
                  text: "_A_FILTERS_START_SEARCH_",
                  disabled: this.disabled,
                  onClick: this.onSearch
                }),
                c(ye, {
                  type: "button",
                  class: "a_btn a_btn_secondary a_text_nowrap a_filter_horizontal__footer__actions__btn_close",
                  text: "_A_FILTERS_HOR_CLOSE_DROPDOWN_",
                  onClick: this.closeDropdown
                })
              ])
            ])
          ])
        ])
      }),
      this.isModalSaveVisible ? c(nk, {
        changeModelFiltersSaved: this.changeModelFiltersSaved,
        filtersSaved: this.filtersSaved,
        isModelFilterSavedNew: this.isModelFilterSavedNew,
        modelFiltersSaved: this.modelFiltersSaved,
        selectorCloseIds: this.selectorCloseIds,
        updateFiltersSaved: this.updateFiltersSaved,
        onClose: this.closeModalSave
      }) : ""
    ] : null;
  }
};
function hk(e) {
  const t = f(e, "id");
  return {
    idFilterTop: _(() => `${t.value}_filter_main`)
  };
}
function Ak(e) {
  const t = f(e, "filterMain"), n = _(() => !!t.value), r = _(() => n.value ? [
    t.value
  ] : []);
  return {
    hasFilterMain: n,
    dataMainFilter: r
  };
}
function Ek(e, { emit: t }) {
  const n = f(e, "disabled");
  return {
    onSearch: () => {
      n.value || t("startSearch");
    }
  };
}
const pk = {
  name: "AFiltersMain",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filterMain: {
      type: Object,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    mainModel: {
      type: Object,
      required: !1
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    },
    updateMainModel: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch"
  ],
  setup(e, t) {
    const {
      hasFilterMain: n,
      dataMainFilter: r
    } = Ak(e), {
      idFilterTop: s
    } = hk(e), {
      onSearch: l
    } = Ek(e, t);
    return {
      hasFilterMain: n,
      dataMainFilter: r,
      idFilterTop: s,
      onSearch: l
    };
  },
  render() {
    return this.hasFilterMain ? c("div", {
      id: this.idFilterTop,
      class: "a_filters_top"
    }, [
      c(xu, {
        idPrefix: this.idFilterTop,
        class: "a_filters_top__form",
        classColumns: "a_filters_top__main_wrapper",
        classColumnDefault: "a_filters_top__main",
        data: this.dataMainFilter,
        excludeRenderAttributes: this.excludeRenderAttributes,
        modelValue: this.mainModel,
        showErrors: !1,
        onChange: this.updateMainModel
      }, {
        formDataAppend: () => c(rt, {
          class: "a_btn a_btn_primary a_text_nowrap a_filters_top__search",
          iconLeft: Ol,
          type: "submit",
          text: {
            desktop: "_A_FILTERS_START_SEARCH_"
          },
          textScreenReader: {
            mobile: "_A_FILTERS_START_SEARCH_"
          },
          prevent: !0,
          stop: !0,
          disabled: this.disabled,
          onClick: this.onSearch
        })
      })
    ]) : null;
  }
};
function Tk(e, { emit: t }, {
  filtersHorizontalRef: n = B(void 0),
  filtersVisibleAll: r = _(() => []),
  onUpdateModelFilters: s = () => {
  }
}) {
  const l = f(e, "appliedModel"), o = f(e, "unappliedModel"), u = () => {
    var p;
    (p = n.value) == null || p.initModelFiltersSaved();
  }, h = ({ filter: p, keyId: T, modelArray: m, appliedModelLocal: L, unappliedModelLocal: b }) => {
    const v = p.id;
    return Wc.value[p.type] ? (L[v] && L[v].length && (m ? L[v] = Pt(L[v], (I) => m.indexOf(I) === -1) : L[v] = []), b[v] && b[v].length && (m ? b[v] = Pt(b[v], (I) => m.indexOf(I) === -1) : b[v] = [])) : GT.value[p.type] && T ? (nt(b == null ? void 0 : b[v]) && (b[v][T] = void 0), nt(L == null ? void 0 : L[v]) && (L[v][T] = void 0)) : (b[v] = void 0, L[v] = void 0), {
      appliedModelLocal: L,
      unappliedModelLocal: b
    };
  };
  return {
    closeAllFilters: () => {
      let p = pe(l.value), T = pe(o.value);
      Y(r.value, (m) => {
        const L = h({
          filter: m,
          appliedModelLocal: p,
          unappliedModelLocal: T
        });
        p = L.appliedModelLocal, T = L.unappliedModelLocal;
      }), u(), t("update:unappliedModel", T), t("update:appliedModel", p), setTimeout(() => {
        s({ model: l.value });
      });
    },
    closeFilterValue: ({ filter: p, keyId: T, modelArray: m }) => {
      const L = pe(l.value), b = pe(o.value), {
        appliedModelLocal: v,
        unappliedModelLocal: I
      } = h({
        filter: p,
        keyId: T,
        modelArray: m,
        appliedModelLocal: L,
        unappliedModelLocal: b
      });
      t("update:unappliedModel", I), t("update:appliedModel", v), setTimeout(() => {
        s({ model: l.value });
      });
    }
  };
}
function Sk() {
  const e = B({});
  return {
    dataKeyByKeyIdPerFilter: e,
    updateDataKeyByIdFromFilter: ({ dataKeyByKeyId: n, filterId: r }) => {
      e.value[r] = pe(n);
    }
  };
}
function mk(e) {
  const t = f(e, "excludeRenderAttributes"), n = [
    "alwaysVisible"
  ];
  return {
    excludeRenderAttributesComputed: _(() => DP(n, t.value))
  };
}
function Lk({ filter: e = {}, modelObj: t = {} }) {
  var r;
  const n = e.id;
  return n in t ? Wc.value[e.type] ? !!((r = t[n]) != null && r.length) : GT.value[e.type] ? !!(t[n] && !cn(t[n])) : !0 : !1;
}
function bk(e, { emit: t }) {
  const n = f(e, "filters"), r = f(e, "filterMain"), s = f(e, "unappliedModel"), l = B({}), o = B(void 0), u = B([]), h = _(() => !!(n.value.length || r.value)), A = _(() => {
    const I = {};
    return Y(pe(n.value), (y) => {
      I[y.id] = y, Pa.value[y.type] && y.children && y.children.length && Y(y.children, (R) => {
        I[R.id] = R;
      });
    }), I;
  }), E = _(() => {
    const I = {
      alwaysVisible: [],
      filters: []
    };
    return Y(pe(n.value), (y) => {
      y.alwaysVisible ? I.alwaysVisible.push(y) : I.filters.push(y);
    }), I;
  }), p = _(() => {
    const I = [];
    return Y(u.value, (y) => {
      A.value[y] && I.push(A.value[y]);
    }), I;
  }), T = _(() => {
    const I = [];
    I.push(...n.value);
    const y = [];
    return Y(I, (R) => {
      y.push(R), Pa.value[R.type] && R.children && R.children.length && Y(R.children, (D) => {
        y.push(D);
      });
    }), y;
  }), m = () => {
    const I = [];
    Y(E.value.filters, (y) => {
      Lk({
        filter: y,
        modelObj: s.value
      }) && I.push(y.id);
    }), u.value = I;
  };
  return {
    filtersDataKeyById: l,
    filtersGroup: E,
    filtersHorizontalRef: o,
    filtersKeyById: A,
    filtersVisible: p,
    filtersVisibleAll: T,
    filtersVisibleIds: u,
    hasFilters: h,
    onUpdateModelFilters: ({ model: I, isUpdateFiltersVisible: y }) => {
      t("update:unappliedModel", I), y && setTimeout(() => {
        m();
      });
    },
    setFiltersVisibleIds: m,
    updateAppliedModel: ({ model: I }) => {
      t("update:appliedModel", I);
    },
    updateMainModel: ({ model: I }) => {
      t("update:mainModel", I);
    }
  };
}
function vk(e) {
  const t = f(e, "filtersSaved"), n = f(e, "unappliedModel"), r = f(e, "updateFiltersSaved"), s = B([]);
  return {
    filtersSavedLocal: s,
    initFiltersSaved: () => {
      s.value = t.value || [];
    },
    updateFiltersSavedLocal: ({ action: u = "", label: h = "" }) => {
      if (u === "create")
        s.value.push({
          label: h,
          data: pe(n.value)
        });
      else {
        const A = sT(s.value, ["label", h]);
        A !== -1 && (u === "delete" ? s.value.splice(A, 1) : u === "update" && s.value.splice(A, 1, {
          label: h,
          data: pe(n.value)
        }));
      }
      Me(r.value) && r.value({
        action: u,
        label: h,
        model: n.value,
        filtersSaved: s.value
      });
    }
  };
}
function Ik(e, { emit: t }, {
  onUpdateModelFilters: n = () => {
  }
}) {
  const r = f(e, "appliedModel"), s = f(e, "unappliedModel");
  return {
    startSearch: () => {
      t("update:appliedModel", s.value), setTimeout(() => {
        n({ model: r.value });
      });
    }
  };
}
function gk(e, {
  dataKeyByKeyIdPerFilter: t = B({}),
  filtersVisibleIds: n = B([]),
  onUpdateModelFilters: r = () => {
  }
}) {
  const s = f(e, "unappliedModel");
  return {
    toggleFiltersVisible: ({ isAdd: o = !0, filterId: u, filter: h }) => {
      var A, E;
      if (o)
        n.value.push(u);
      else {
        const p = n.value.indexOf(u);
        p !== -1 && n.value.splice(p, 1);
        const T = pe(s.value);
        if (h && h.modelId) {
          const m = (A = t.value) == null ? void 0 : A[u];
          (E = T == null ? void 0 : T[h.modelId]) != null && E.length && m ? T[h.modelId] = Pt(T[h.modelId], (L) => !m[L]) : T[u] = void 0;
        } else
          T[u] = void 0;
        r({ model: T });
      }
    }
  };
}
const pde = {
  name: "AFilters",
  props: {
    appliedModel: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canSave: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filterMain: {
      type: Object,
      required: !1
    },
    filters: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersSaved: {
      type: Array,
      required: !1,
      default: () => []
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_filters_")
    },
    mainModel: {
      type: Object,
      required: !1
    },
    unappliedModel: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    updateFiltersSaved: {
      type: Function,
      required: !1,
      default: void 0
    },
    view: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => ["top", "right"].indexOf(e) !== -1
    },
    viewRightTeleportSelector: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "startSearch",
    "update:appliedModel",
    "update:mainModel",
    "update:unappliedModel"
  ],
  setup(e, t) {
    const n = f(e, "filtersSaved"), {
      filtersDataKeyById: r,
      filtersGroup: s,
      filtersHorizontalRef: l,
      filtersKeyById: o,
      filtersVisible: u,
      filtersVisibleAll: h,
      filtersVisibleIds: A,
      hasFilters: E,
      onUpdateModelFilters: p,
      setFiltersVisibleIds: T,
      updateAppliedModel: m,
      updateMainModel: L
    } = bk(e, t), {
      closeAllFilters: b,
      closeFilterValue: v
    } = Tk(e, t, {
      filtersHorizontalRef: l,
      filtersVisibleAll: h,
      onUpdateModelFilters: p
    }), {
      dataKeyByKeyIdPerFilter: I,
      updateDataKeyByIdFromFilter: y
    } = Sk(), {
      toggleFiltersVisible: R
    } = gk(e, {
      dataKeyByKeyIdPerFilter: I,
      filtersVisibleIds: A,
      onUpdateModelFilters: p
    }), {
      startSearch: D
    } = Ik(e, t, {
      onUpdateModelFilters: p
    }), {
      filtersSavedLocal: w,
      initFiltersSaved: M,
      updateFiltersSavedLocal: P
    } = vk(e), {
      excludeRenderAttributesComputed: x
    } = mk(e);
    return tt(n, () => {
      M();
    }, {
      deep: !0
    }), T(), M(), {
      closeAllFilters: b,
      closeFilterValue: v,
      dataKeyByKeyIdPerFilter: I,
      excludeRenderAttributesComputed: x,
      filtersDataKeyById: r,
      filtersGroup: s,
      filtersHorizontalRef: l,
      filtersKeyById: o,
      filtersSavedLocal: w,
      filtersVisible: u,
      filtersVisibleAll: h,
      filtersVisibleIds: A,
      hasFilters: E,
      onUpdateModelFilters: p,
      setFiltersVisibleIds: T,
      startSearch: D,
      toggleFiltersVisible: R,
      updateAppliedModel: m,
      updateDataKeyByIdFromFilter: y,
      updateFiltersSavedLocal: P,
      updateMainModel: L
    };
  },
  render() {
    if (this.hasFilters)
      return c(
        "div",
        [
          this.view === "top" && c(pk, {
            id: this.id,
            disabled: this.disabled,
            excludeRenderAttributes: this.excludeRenderAttributesComputed,
            filterMain: this.filterMain,
            mainModel: this.mainModel,
            updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
            updateMainModel: this.updateMainModel,
            onStartSearch: this.startSearch
          }, this.$slots),
          this.view === "right" && c(ia, {
            to: this.viewRightTeleportSelector,
            disabled: !this.viewRightTeleportSelector
          }, [
            c(Eq, {
              id: this.id,
              disabled: this.disabled,
              excludeRenderAttributes: this.excludeRenderAttributesComputed,
              filters: this.filters,
              filtersKeyById: this.filtersKeyById,
              appliedModel: this.appliedModel,
              onUpdateModelFilters: this.updateAppliedModel,
              updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
              onStartSearch: this.startSearch
            }, this.$slots)
          ]),
          c(Nq, {
            id: this.id,
            appliedModel: this.appliedModel,
            closeAllFilters: this.closeAllFilters,
            closeFilterValue: this.closeFilterValue,
            dataKeyByKeyIdPerFilter: this.dataKeyByKeyIdPerFilter,
            disabled: this.disabled,
            filtersGroup: this.filtersGroup,
            filtersKeyById: this.filtersKeyById,
            filtersVisibleAll: this.filtersVisibleAll
          }, {
            filtersHorizontal: () => this.view === "top" ? c(fk, {
              ref: "filtersHorizontalRef",
              id: this.id,
              canSave: this.canSave,
              disabled: this.disabled,
              excludeRenderAttributes: this.excludeRenderAttributesComputed,
              filtersGroup: this.filtersGroup,
              filtersKeyById: this.filtersKeyById,
              filtersSaved: this.filtersSavedLocal,
              filtersVisible: this.filtersVisible,
              onUpdateModelFilters: this.onUpdateModelFilters,
              unappliedModel: this.unappliedModel,
              updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
              updateFiltersSaved: this.updateFiltersSavedLocal,
              onStartSearch: this.startSearch,
              onToggleFiltersVisible: this.toggleFiltersVisible
            }, this.$slots) : "",
            ...this.$slots
          })
        ]
      );
  }
}, zd = {
  name: "AGet",
  props: {
    keyLabel: {
      type: [String, Array],
      required: !0,
      info: "Weg zu Informationen. Z.B.('a[0].b.c', 'vertrag.antrag_obj.pk', ['vertrag', aloha, 'pk'])"
    },
    data: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Haupt-Objekt oder -Array, wo man sucht"
    },
    tag: {
      type: String,
      required: !1,
      default: "span",
      info: "Semantisch-relevanter HTML-Tag.(span, div, ...)"
    },
    defaultValue: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Standardwert, wenn Lodash-Funktion 'get' undefined zurückschickt"
    },
    filter: {
      type: String,
      required: !1,
      default: void 0
    },
    filterParameters: {
      type: [Object, String, Number, Boolean],
      required: !1,
      default: () => {
      }
    },
    replacedWithDefault: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Wenn das Wert, das Lodash-Funktion 'get' zurückschickt, === this.replacedWithDefault, dann this.defaultValue"
    }
  },
  setup() {
    return or();
  },
  computed: {
    valueLocal() {
      let e = fe(this.data, this.keyLabelLocal);
      if (le(e) && (e = this.defaultValue), this.isValueEqualsWithValueThenDefaultValue(e))
        return this.defaultValue;
      if (this.filter) {
        const t = `filter${qp(this.filter)}`;
        if (Me(this[t]))
          return this[t](e, this.filterParameters);
        console.warn(`filter "${t}" ist not defined`);
      }
      return e;
    },
    keyLabelLocal() {
      return Se(this.keyLabel) ? this.keyLabel.join(".") : this.keyLabel;
    }
  },
  methods: {
    isValueEqualsWithValueThenDefaultValue(e) {
      if (Pe(this.replacedWithDefault))
        return !1;
      let t = !1;
      return Se(this.replacedWithDefault) ? Y(this.replacedWithDefault, (n) => {
        if (n === e)
          return t = !0, !1;
      }) : this.replacedWithDefault === e && (t = !0), t;
    }
  },
  render() {
    return xt(c(this.tag), [
      [hn, this.valueLocal]
    ]);
  }
};
function yk(e) {
  const t = f(e, "isLast"), n = f(e, "hasDropdownActions"), r = f(e, "hasDividerBeforeDropdown"), s = _(() => t.value && n.value), l = _(() => s.value && !r.value);
  return {
    isDropdownActionsAfterGroup: _(() => s.value && r.value),
    isDropdownActionsInGroup: l
  };
}
const Rk = {
  name: "AGroupButtonDropdownItem",
  props: {
    actionsClasses: {
      type: Array,
      required: !0
    },
    actionsIds: {
      type: Array,
      required: !0
    },
    actionsDropdown: {
      type: Array,
      required: !0
    },
    btnGroupClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn_group"
    },
    data: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !0
    },
    hasDividerBeforeDropdown: {
      type: Boolean,
      required: !0
    },
    hasDropdownActions: {
      type: Boolean,
      required: !0
    },
    isLast: {
      type: Boolean,
      required: !0
    }
  },
  setup(e) {
    const {
      isDropdownActionsAfterGroup: t,
      isDropdownActionsInGroup: n
    } = yk(e);
    return {
      isDropdownActionsAfterGroup: t,
      isDropdownActionsInGroup: n
    };
  },
  render() {
    return [
      !!this.data.children.length && c("div", {
        class: this.btnGroupClass
      }, [
        ...this.data.children.map((e) => {
          let t = e.classButton ? e.classButton : this.actionsClasses[e.actionNotDividerIndex];
          e.classExtra && (t = Mo({
            class1: t,
            class2: e.classExtra
          }));
          const n = e.id ? e.id : this.actionsIds[e.actionNotDividerIndex], r = this.disabled || e.disabled;
          if (e.type === "button")
            return c(rt, {
              ...e,
              id: n,
              class: t,
              classButton: void 0,
              classExtra: void 0,
              disabled: r,
              onClick: e.callback,
              callback: void 0,
              actionNotDividerIndex: void 0,
              isHidden: void 0,
              isConfirm: void 0,
              callbackLocal: void 0
            });
          if (e.type === "link")
            return c(wu, {
              ...e,
              id: n,
              classButton: void 0,
              classExtra: void 0,
              disabled: r,
              class: t,
              actionNotDividerIndex: void 0,
              isHidden: void 0,
              type: void 0,
              isConfirm: void 0,
              callbackLocal: void 0
            });
          if (e.type === "template" && e.slotName && this.$slots[e.slotName])
            return this.$slots[e.slotName]({
              id: n,
              class: t,
              action: e
            });
        }),
        this.isDropdownActionsInGroup && c(sa, {
          isHideWithoutActionAndSlot: !0,
          actions: this.actionsDropdown,
          disabled: this.disabled,
          ...this.dropdownAttributes
        }, this.$slots)
      ]),
      this.isDropdownActionsAfterGroup && c(sa, {
        isHideWithoutActionAndSlot: !0,
        actions: this.actionsDropdown,
        disabled: this.disabled,
        ...this.dropdownAttributes
      }, this.$slots)
    ];
  }
};
function Ok(e) {
  const t = f(e, "actions"), n = f(e, "indexFirstDropdownAction"), r = f(e, "indexFirstDropdownActionMobile"), s = f(e, "minDropdownActions"), {
    isMobileWidth: l
  } = An(), o = _(() => vS({
    actions: t.value
  })), u = _(() => {
    const m = pe(o.value);
    return Y(m, (L) => {
      L.classButton = Mo({
        class1: L.classButton,
        class2: L.class
      }), L.class = Mo({
        class1: L.classDropdown,
        class2: L.class
      }), delete L.classDropdown, L.classExtra && (L.class = Mo({
        class1: L.classExtra,
        class2: L.class
      }));
    }), m;
  }), h = _(() => l.value ? r.value : n.value), A = ({ actions: m = [], minCountActions: L = 0 }) => {
    let b = 0;
    return Y(m, (v) => {
      if (b >= L)
        return !1;
      v.type !== "divider" && b++;
    }), b >= L;
  }, E = _(() => {
    const m = pe(u.value), L = {
      buttons: [],
      dropdown: []
    };
    let b = 0, v = !0;
    return Y(m, (I, y) => {
      if (b === h.value) {
        const R = m.slice(y, m.length);
        if (A({
          actions: R,
          minCountActions: s.value
        }))
          return L.dropdown = m.splice(y, m.length), h.value === 0 && L.buttons.push({
            type: "group",
            children: []
          }), !1;
      }
      I.type !== "divider" ? (I.actionNotDividerIndex = b, b++, v ? L.buttons.push({
        type: "group",
        children: [I]
      }) : fi(L.buttons).children.push(I), v = !1) : v = !0;
    }), L;
  }), p = _(() => E.value.dropdown.length > 0), T = _(() => u.value.length > 0);
  return {
    actionsAllWithClassesFiltered: u,
    actionsGrouped: E,
    hasActionsAllFiltered: T,
    hasDropdownActions: p
  };
}
const Oa = B({
  propsDefault: {
    actionsClasses: ["a_btn a_btn_primary", "a_btn a_btn_secondary"],
    dropdownAttributes: {},
    hasDividerBeforeDropdown: !0,
    indexFirstDropdownAction: 1,
    indexFirstDropdownActionMobile: 0,
    minDropdownActions: 2,
    useActionClass: !0,
    useDropdownActionClass: !1
  }
}), Tde = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Oa.value.propsDefault = {
      ...Oa.value.propsDefault,
      ...t
    };
  }
}, Yd = {
  name: "AGroupButtonDropdown",
  props: {
    actions: {
      type: Array,
      required: !1,
      default: () => []
    },
    actionsClasses: {
      type: Array,
      required: !1,
      default: () => Oa.value.propsDefault.actionsClasses
    },
    actionsIds: {
      type: Array,
      required: !1,
      default: () => []
    },
    btnGroupClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn_group"
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !1,
      default: () => Oa.value.propsDefault.dropdownAttributes
    },
    hasDividerBeforeDropdown: {
      type: Boolean,
      required: !1,
      default: () => Oa.value.propsDefault.hasDividerBeforeDropdown
    },
    indexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: () => Oa.value.propsDefault.indexFirstDropdownAction,
      validator: (e) => e >= -1
    },
    indexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: () => Oa.value.propsDefault.indexFirstDropdownActionMobile,
      validator: (e) => e >= -1
    },
    minDropdownActions: {
      type: Number,
      required: !1,
      default: () => Oa.value.propsDefault.minDropdownActions
    },
    innerFlagHasActions: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "update:innerFlagHasActions"
  ],
  setup(e, { emit: t }) {
    const {
      actionsAllWithClassesFiltered: n,
      actionsGrouped: r,
      hasActionsAllFiltered: s,
      hasDropdownActions: l
    } = Ok(e);
    return tt(s, (o) => {
      t("update:innerFlagHasActions", o);
    }, {
      immediate: !0
    }), {
      actionsAllWithClassesFiltered: n,
      actionsGrouped: r,
      hasActionsAllFiltered: s,
      hasDropdownActions: l
    };
  },
  render() {
    if (this.hasActionsAllFiltered)
      return c("div", {
        class: "aloha_group_btn_dropdown"
      }, [
        ...this.actionsGrouped.buttons.map((e, t) => c(Rk, {
          btnGroupClass: this.btnGroupClass,
          data: e,
          disabled: this.disabled,
          actionsDropdown: this.actionsGrouped.dropdown,
          hasDropdownActions: this.hasDropdownActions,
          dropdownAttributes: this.dropdownAttributes,
          actionsClasses: this.actionsClasses,
          actionsIds: this.actionsIds,
          isLast: t === this.actionsGrouped.buttons.length - 1,
          hasDividerBeforeDropdown: this.hasDividerBeforeDropdown
        }, this.$slots))
      ]);
  }
};
function Ck(e) {
  const t = f(e, "callback"), n = f(e, "disabled"), r = f(e, "rootMargin"), s = f(e, "threshold");
  let l = {};
  const o = B(void 0);
  let u;
  const h = () => {
    l = {
      rootMargin: r.value,
      threshold: s.value
    };
  }, A = () => {
    u = new IntersectionObserver((T) => {
      const [m] = T;
      m.isIntersecting && t.value();
    }, l);
  }, E = () => {
    n.value || u.observe(o.value);
  }, p = () => {
    u && u.disconnect();
  };
  return tt(n, (T) => {
    T === !0 ? E() : p();
  }), {
    disconnectObserver: p,
    sentinelRef: o,
    setIntersectionObserver: A,
    setObserverOptions: h,
    startObserver: E
  };
}
const Sde = {
  name: "AInfiniteScroll",
  props: {
    callback: {
      type: Function,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    rootMargin: {
      type: String,
      required: !1,
      default: "300px"
    },
    sentinelTag: {
      type: String,
      required: !1,
      default: "span"
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    threshold: {
      type: [Number, Array],
      required: !1,
      default: 0.5
    }
  },
  setup(e) {
    const {
      disconnectObserver: t,
      sentinelRef: n,
      setIntersectionObserver: r,
      setObserverOptions: s,
      startObserver: l
    } = Ck(e);
    return Vr(() => {
      s(), r(), l();
    }), Ct(() => {
      t();
    }), {
      sentinelRef: n
    };
  },
  render() {
    return c(this.tag, {}, [
      this.$slots.default ? this.$slots.default() : null,
      c(this.sentinelTag, {
        ref: "sentinelRef",
        style: "height: 1px; display: block;",
        ariaHidden: !0
      })
    ]);
  }
};
function Nk(e) {
  const t = f(e, "textCopy"), n = B(void 0), {
    addNotification: r
  } = $u();
  return {
    copyText: async () => {
      var o;
      let l = "";
      if (t.value ? l = t.value : (o = n.value) != null && o.$el && Y(n.value.$el.children, (u) => {
        u.classList.contains("a_sr_only") || (l += u.textContent);
      }), l)
        try {
          await navigator.clipboard.writeText(l), r({
            text: "_A_LINK_COPY_COPIED_TO_CLIPBOARD_"
          });
        } catch (u) {
          console.error(u);
        }
    },
    linkRef: n
  };
}
const Dk = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-copy" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z"/>
</svg>`, mde = {
  name: "ALinkCopy",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    buttonOptions: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonPosition: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "a_btn_group"
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    linkOptions: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    textCopy: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup() {
    const {
      copyText: e,
      linkRef: t
    } = Nk();
    return {
      copyText: e,
      linkRef: t
    };
  },
  render() {
    var t, n;
    const e = c(rt, {
      alwaysTranslate: this.alwaysTranslate,
      class: "a_btn a_btn_secondary",
      disabled: this.disabled,
      iconLeft: Dk,
      textScreenReader: "_A_LINK_COPY_BTN_TITLE_",
      title: "_A_LINK_COPY_BTN_TITLE_",
      onClick: this.copyText,
      ...this.buttonOptions
    }, (t = this.$slots) == null ? void 0 : t.button);
    return c("div", {
      class: [
        this.classDefault,
        this.class
      ],
      role: "group"
    }, [
      this.buttonPosition === "left" && e,
      c(wu, {
        ref: "linkRef",
        alwaysTranslate: this.alwaysTranslate,
        disabled: this.disabled,
        ...this.linkOptions
      }, (n = this.$slots) == null ? void 0 : n.link),
      this.buttonPosition === "right" && e
    ]);
  }
};
function Bk(e) {
  const t = f(e, "isDataSimpleArray"), n = f(e, "item"), r = f(e, "keyChildren"), s = _(() => qn(n.value)), l = _(() => {
    var u;
    return t.value ? (u = n.value) == null ? void 0 : u[1] : !r.value || !s.value ? [] : fe(n.value, r.value) || [];
  }), o = _(() => Se(l.value) && l.value.length > 0);
  return {
    children: l,
    hasChildren: o
  };
}
function wk(e) {
  const t = f(e, "isDataSimpleArray"), n = f(e, "item"), r = f(e, "itemIndex"), s = f(e, "keyLabel"), l = f(e, "keyLabelCallback");
  return {
    label: _(() => {
      var u;
      return t.value ? Se(n.value) ? ((u = n.value) == null ? void 0 : u[0]) || "" : n.value : Me(l.value) ? l.value({ item: n.value, itemIndex: r.value }) : s.value ? fe(n.value, s.value) : n.value;
    })
  };
}
const Pk = {
  name: "AListItem",
  props: {
    classItem: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    classMain: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    item: {
      type: [Object, String, Number, Array],
      required: !0
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !0
    },
    listItemTag: {
      type: String,
      required: !1,
      default: "li"
    },
    separator: {
      type: String,
      required: !1,
      default: void 0
    },
    separatorHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      children: t,
      hasChildren: n
    } = Bk(e), {
      label: r
    } = wk(e);
    return {
      children: t,
      hasChildren: n,
      label: r
    };
  },
  render() {
    return c(this.listItemTag, {
      class: this.classItem
    }, [
      this.$slots.listItem ? this.$slots.listItem({
        item: this.item,
        itemIndex: this.itemIndex
      }) : xt(c(this.labelTag), [
        [hn, this.label]
      ]),
      this.separator ? c("span", {}, this.separator) : "",
      this.hasChildren ? c(Mk, {
        classItem: this.classItem,
        classMain: this.classMain,
        data: this.children,
        isDataSimpleArray: this.isDataSimpleArray,
        keyChildren: this.keyChildren,
        keyId: this.keyId,
        keyLabel: this.keyLabel,
        keyLabelCallback: this.keyLabelCallback,
        labelTag: this.labelTag,
        listItemTag: this.listItemTag,
        separator: this.separator,
        separatorHtml: this.separatorHtml,
        tag: this.tag
      }, this.$slots) : "",
      this.separatorHtml ? xt(c("div"), [
        [hn, this.separatorHtml]
      ]) : ""
    ]);
  }
};
function Fk(e) {
  const t = f(e, "data"), n = f(e, "isDataSimpleArray"), r = f(e, "keyChildren"), s = f(e, "keyLabel"), l = f(e, "keyLabelCallback"), o = f(e, "separator");
  return {
    plainText: _(() => Xo(t.value, {
      isHtml: !1,
      keyLabel: s.value,
      keyLabelCallback: l.value,
      keyChildren: r.value,
      isSimpleArray: n.value,
      separator: o.value
    }))
  };
}
function xk(e) {
  const t = f(e, "tag"), n = f(e, "isHtml");
  return {
    tagLocal: _(() => !n.value && (t.value === "ul" || t.value === "ol") ? "span" : t.value)
  };
}
const Mk = {
  name: "AList",
  props: {
    classItem: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    classMain: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isHtml: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !1,
      default: "span"
    },
    listItemTag: {
      type: String,
      required: !1,
      default: "li"
    },
    separator: {
      type: String,
      required: !1,
      default: void 0
    },
    separatorHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "ul"
    }
  },
  setup(e) {
    const {
      tagLocal: t
    } = xk(e), {
      plainText: n
    } = Fk(e);
    return {
      plainText: n,
      tagLocal: t
    };
  },
  render() {
    return this.isHtml ? c(this.tag, {
      class: this.classMain
    }, [
      this.data.map((e, t) => {
        const n = this.keyId ? fe(e, this.keyId) : t;
        return c(Pk, {
          key: n,
          classItem: this.classItem,
          classMain: this.classMain,
          isDataSimpleArray: this.isDataSimpleArray,
          item: e,
          itemIndex: t,
          keyChildren: this.keyChildren,
          keyId: this.keyId,
          keyLabel: this.keyLabel,
          keyLabelCallback: this.keyLabelCallback,
          labelTag: this.labelTag,
          listItemTag: this.listItemTag,
          separator: this.separator,
          separatorHtml: this.separatorHtml,
          tag: this.tag
        }, this.$slots);
      })
    ]) : c(this.tagLocal, null, this.plainText);
  }
};
function GS({
  menuId: e = "a_menu_",
  panelId: t = ""
}) {
  const r = `${`#${ra({ menuId: e, id: t, suffix: "panel" })}`} .a_menu__listview a`;
  setTimeout(() => {
    const s = document.querySelector(r);
    s && s.focus();
  });
}
function ra({
  menuId: e = "a_menu_",
  id: t = "",
  suffix: n = ""
}) {
  return `${e}_${t}_${n}`;
}
const Zi = B({});
function KS(e) {
  const t = f(e, "menuId"), n = f(e, "canChangeBodyClass"), r = () => {
    n.value && (document.body.classList.add("a_menu__wrapper_open"), document.body.classList.remove("a_menu__wrapper_close")), Zi.value[t.value] = !0;
  }, s = () => {
    n.value && (document.body.classList.add("a_menu__wrapper_close"), document.body.classList.remove("a_menu__wrapper_open")), Zi.value[t.value] = !1;
  }, l = () => {
    n.value && (document.body.classList.remove("a_menu__wrapper_close"), document.body.classList.remove("a_menu__wrapper_open"));
  }, o = ({ isOpen: E } = {}) => {
    Pe(E) ? Zi.value[t.value] ? s() : r() : E ? r() : s();
  }, u = _(() => Zi.value[t.value]), h = () => {
    o(), u.value && GS({
      menuId: t.value,
      panelId: ""
    });
  };
  return {
    btnToggleTitle: _(() => Zi.value[t.value] ? "_A_MENU_2_BTN_CLOSE_" : "_A_MENU_2_BTN_OPEN_"),
    closeMenu: s,
    isMenuOpen: u,
    removeBodyClasses: l,
    toggleMenu: o,
    toggleMenuObButton: h
  };
}
const $k = {
  name: "AMenuButtonToggle",
  props: {
    buttonToggleProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canChangeBodyClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    class: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    insideMenu: {
      type: Boolean,
      required: !1
    },
    menuId: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      btnToggleTitle: t,
      isMenuOpen: n,
      toggleMenuObButton: r
    } = KS(e);
    return {
      btnToggleTitle: t,
      isMenuOpen: n,
      toggleMenuObButton: r
    };
  },
  render() {
    return c(rt, {
      class: ["a_menu__btn_toggle", this.class, {
        a_menu__btn_toggle_open: this.isMenuOpen,
        a_menu__btn_toggle_close: !this.isMenuOpen,
        a_menu__btn_toggle_inside_menu: this.insideMenu,
        a_menu__btn_toggle_outside_menu: !this.insideMenu
      }],
      type: "button",
      title: this.btnToggleTitle,
      textScreenReader: this.btnToggleTitle,
      onClick: this.toggleMenuObButton,
      ...this.buttonToggleProps
    }, () => [
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_1 aloha_element__ml_0"
      }),
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_2 aloha_element__ml_0"
      }),
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_3 aloha_element__ml_0"
      })
    ]);
  }
};
function qk() {
  const e = _e("togglePanel"), t = ({ parentId: r }) => {
    e({ parentId: r });
  };
  return {
    goBack: t,
    goBackKeydown: ({ $event: r, parentId: s }) => {
      (r.keyCode === Z.enter || r.keyCode === Z.space) && (t({ parentId: s }), r.stopPropagation(), r.preventDefault());
    }
  };
}
function kk(e) {
  const t = f(e, "dataKeyById"), n = f(e, "panelParentsOpen");
  return {
    breadcrumbsItems: _(() => {
      if (!n.value.length)
        return [];
      const s = [];
      let l = "_A_MENU_2_MAIN_MENU_";
      return Y(n.value, (o, u) => {
        s.push({
          isFirst: u === 0,
          label: l,
          panelParentId: o
        }), l = fe(t.value, `${o}.${St}`);
      }), s.push({
        panelParentId: void 0,
        label: l
      }), s;
    })
  };
}
function Uk({
  breadcrumbsItems: e = _(() => []),
  breadcrumbsTruncatedOffset: t = B(0)
}) {
  const n = B([]), r = B([]), s = B(0), l = B(void 0), o = B(!1), u = B(0), h = B([]), A = () => {
    if (l.value < 0) {
      o.value = !0;
      return;
    }
    r.value.unshift(e.value[l.value]), l.value--;
  }, E = () => {
    n.value = e.value.slice(0, l.value + 1), o.value = !0;
  }, p = () => {
    if (r.value.length <= 1 || u.value + t.value <= s.value) {
      E();
      return;
    }
    r.value.splice(0, 1), l.value++, u.value -= fi(h.value), h.value.pop(), p();
  };
  return {
    breadcrumbsItemsDropdown: n,
    breadcrumbsItemsTruncated: r,
    isRenderedAll: o,
    renderItem: (L) => {
      const b = L.offsetWidth;
      u.value += b, h.value.push(b), u.value >= s.value ? p() : A();
    },
    renderParent: (L) => {
      l.value = e.value.length - 1, A(), s.value = L.offsetWidth;
    }
  };
}
const Nl = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots" viewBox="0 0 16 16">
  <path d="M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3"/>
</svg>`, Hk = {
  name: "AMenuBreadcrumbs",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !0
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    isPanelMain: {
      type: Boolean,
      required: !1
    },
    dataKeyById: {
      type: Object,
      required: !0
    },
    panelParentsOpen: {
      type: Array,
      required: !0
    }
  },
  setup(e) {
    const t = _e("breadcrumbsTruncatedOffset"), {
      breadcrumbsItems: n
    } = kk(e), {
      goBack: r,
      goBackKeydown: s
    } = qk(), {
      breadcrumbsItemsDropdown: l,
      breadcrumbsItemsTruncated: o,
      isRenderedAll: u,
      renderItem: h,
      renderParent: A
    } = Uk({
      breadcrumbsItems: n,
      breadcrumbsTruncatedOffset: t
    });
    return {
      breadcrumbsItems: n,
      breadcrumbsItemsDropdown: l,
      breadcrumbsItemsTruncated: o,
      goBack: r,
      goBackKeydown: s,
      isRenderedAll: u,
      renderItem: h,
      renderParent: A
    };
  },
  render() {
    if (this.isSearchActive || this.isPanelMain)
      return null;
    if (this.isBreadcrumbsTruncated)
      return c(Te, {
        ariaLabel: "_A_MENU_2_BREADCRUMB_",
        class: "a_menu__breadcrumb a_menu__breadcrumb_secondary",
        tag: "nav"
      }, () => [
        xt(c("ul", {
          class: [
            "a_menu__breadcrumb__ul a_menu__breadcrumb__ul_truncated"
          ]
        }, [
          this.breadcrumbsItemsDropdown.length > 0 ? c("li", {
            class: "a_menu__breadcrumbs__item"
          }, [
            c(sa, {
              buttonClass: "a_btn a_btn_secondary a_btn_small a_menu__breadcrumb__ul_truncated__btn",
              buttonIconLeft: Nl,
              buttonTextScreenReader: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
              buttonTitle: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
              dropdownClass: "a_menu__breadcrumb__ul_truncated__dropdown",
              hasCaret: !1,
              inBody: !0,
              ...this.breadcrumbsTruncatedDropdownProps
            }, {
              dropdown: () => [
                this.breadcrumbsItemsDropdown.map((e) => {
                  const t = e.panelParentId ? {
                    tag: "a",
                    class: [
                      "a_menu__breadcrumbs__link",
                      this.breadcrumbsLinkClass
                    ],
                    role: "button",
                    tabindex: 0,
                    onClick: () => this.goBack({ parentId: e.panelParentId }),
                    onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
                  } : {
                    class: "a_menu__breadcrumbs__link",
                    tag: "strong"
                  };
                  return c("li", {
                    key: e.panelParentId,
                    class: "a_menu__breadcrumbs__item"
                  }, [
                    c(rt, {
                      text: e.label,
                      title: e.label,
                      ...t
                    }),
                    c("span", {
                      class: "a_menu__breadcrumbs__item__divider"
                    }, "/")
                  ]);
                })
              ]
            })
          ]) : "",
          this.breadcrumbsItemsTruncated.map((e) => {
            const t = e.panelParentId ? {
              tag: "a",
              class: [
                "a_menu__breadcrumbs__link",
                this.breadcrumbsLinkClass
              ],
              role: "button",
              tabindex: 0,
              onClick: () => this.goBack({ parentId: e.panelParentId }),
              onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
            } : {
              class: "a_menu__breadcrumbs__link",
              tag: "strong"
            };
            return xt(c("li", {
              key: e.panelParentId,
              class: "a_menu__breadcrumbs__item"
            }, [
              !e.isFirst && c("span", {
                class: "a_menu__breadcrumbs__item__divider"
              }, "/"),
              c(rt, {
                text: e.label,
                title: e.label,
                ...t
              })
            ]), [
              [_l, { mounted: this.renderItem }]
            ]);
          })
        ]), [
          [_l, { mounted: this.renderParent }]
        ])
      ]);
    if (!this.isBreadcrumbsTruncated)
      return c(Te, {
        ariaLabel: "_A_MENU_2_BREADCRUMB_",
        class: "a_menu__breadcrumb a_menu__breadcrumb_secondary",
        tag: "nav"
      }, () => [
        c("ul", {
          class: [
            "a_menu__breadcrumb__ul"
          ]
        }, [
          this.breadcrumbsItems.map((e) => {
            const t = e.panelParentId ? {
              tag: "a",
              class: [
                "a_menu__breadcrumbs__link",
                this.breadcrumbsLinkClass
              ],
              role: "button",
              tabindex: 0,
              onClick: () => this.goBack({ parentId: e.panelParentId }),
              onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
            } : {
              class: "a_menu__breadcrumbs__link",
              tag: "strong"
            };
            return c("li", {
              key: e.panelParentId,
              class: "a_menu__breadcrumbs__item"
            }, [
              !e.isFirst && c("span", {
                class: "a_menu__breadcrumbs__item__divider"
              }, "/"),
              c(rt, {
                text: e.label,
                title: e.label,
                ...t
              })
            ]);
          })
        ])
      ]);
  }
};
function Vk(e, {
  id: t = _(() => {
  })
}) {
  const n = f(e, "isLinkInSearchPanel"), r = _e("activeRoutesIds");
  return {
    isLinkActive: _(() => n.value ? !1 : r.value.indexOf(t.value) !== -1)
  };
}
function Wk(e) {
  const t = f(e, "isLinkInSearchPanel"), n = f(e, "item"), r = f(e, "keyIcon"), s = _(() => n.value[Ye]), l = _(() => {
    if (!t.value)
      return fe(n.value, r.value);
  }), o = _(() => {
    const u = "a_menu__link__icon";
    return n.value.iconClass ? `{ CLASS } ${n.value.iconClass}` : u;
  });
  return {
    icon: l,
    iconClassLocal: o,
    id: s
  };
}
function Gk(e, {
  id: t = _(() => {
  })
}) {
  const n = f(e, "dataProParentChildren"), r = f(e, "item");
  return {
    countChildren: _(() => r.value.to ? 0 : n.value[t.value] && n.value[t.value].length)
  };
}
const Al = "_a_parent";
function Kk(e, {
  id: t = _(() => {
  })
}) {
  const n = f(e, "isLinkInSearchPanel"), r = f(e, "item"), s = _e("clickMenuLink"), l = _e("isPanelMain"), o = _e("togglePanel"), u = () => {
    o({
      parentId: t.value,
      isLinkInSearchPanel: n.value,
      isPanelMain: l.value
    });
  };
  return {
    clickLink: ({ $event: E }) => {
      n.value && o({ parentId: r.value[Al], isLinkInSearchPanel: n.value }), s({ ctrlKey: E.ctrlKey, isPanelMain: l.value });
    },
    onKeydown: (E) => {
      (E.keyCode === Z.enter || E.keyCode === Z.space) && (u(), E.stopPropagation(), E.preventDefault());
    },
    openSubMenu: u
  };
}
function jk(e, {
  id: t = _(() => {
  })
}) {
  const n = f(e, "menuId");
  return {
    linkId: _(() => ra({
      menuId: n.value,
      id: t.value,
      suffix: "link"
    }))
  };
}
function zk(e) {
  const t = f(e, "isLinkInSearchPanel"), n = f(e, "item"), r = f(e, "modelSearch"), {
    filterSearchHighlight: s
  } = or(), l = _(() => n.value[St]);
  return {
    label: _(() => {
      const u = l.value;
      return t.value ? s(u, { searchModel: r.value }) : u;
    }),
    labelWithoutFilter: l
  };
}
function Yk(e) {
  const t = f(e, "item"), n = _(() => !!t.value.disabled), r = _(() => n.value ? "#" : t.value.to);
  return {
    isItemLink: _(() => !!t.value.to),
    isLinkDisabled: n,
    toLocal: r
  };
}
function Xk(e, {
  id: t = _(() => "")
}) {
  const n = _e("isChildPanelOpen"), r = _e("isMenuOpen"), s = _e("isPanelMain"), l = _e("panelParentsOpen"), o = _(() => s.value && l.value[0] === t.value), u = _(() => !r.value && n.value && l.value.indexOf(t.value) !== -1);
  return {
    isLinkOpen: _(() => o.value || u.value),
    isLinkOpenPanelMain: o,
    isLinkOpenPanelSecondaryMenuClose: u
  };
}
function Zk(e) {
  const t = f(e, "item"), n = _e("keySlot");
  return {
    currentSlot: _(() => {
      if (n.value)
        return fe(t.value, n.value);
    })
  };
}
function Jk(e) {
  const t = f(e, "isLinkInSearchPanel"), n = f(e, "isPanelOpen"), r = _e("isMenuOpen"), s = _e("isPanelMain", !1), l = _e("isChildPanelOpen", !1);
  return {
    tabindex: _(() => t.value || s.value || n.value || !r.value && l.value ? 0 : -1)
  };
}
function Qk(e, {
  isItemLink: t = _(() => !1),
  isLinkOpenPanelMain: n = _(() => !1),
  isLinkOpenPanelSecondaryMenuClose: r = _(() => !1),
  labelWithoutFilter: s = _(() => "")
}) {
  const l = f(e, "item"), o = _(() => !!l.value.isTitleHtml), u = _(() => n.value ? "_A_MENU_2_TO_MAIN_MENU_" : r.value ? [
    "_A_MENU_2_CLOSE_SUBMENU_",
    l.value.title || s.value
  ] : t.value ? l.value.title || s.value : [
    "_A_MENU_2_OPEN_SUBMENU_",
    l.value.title || s.value
  ]), h = _(() => ({
    minWidth: l.value.titleHtmlMinWidth,
    width: l.value.titleHtmlWidth,
    maxWidth: l.value.titleHtmlMaxWidth
  }));
  return {
    isTitleHtml: o,
    titleLocal: u,
    titleAttributes: h
  };
}
const jS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708"/>
</svg>`, Xd = {
  name: "AMenuPanelLink",
  inject: [
    "isPanelMain",
    "showCountChildren"
  ],
  props: {
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    idsSearchVisible: {
      type: Object,
      required: !1,
      default: void 0
    },
    isLinkInSearchPanel: {
      type: Boolean,
      required: !1
    },
    isPanelOpen: {
      type: Boolean,
      required: !1
    },
    item: {
      type: Object,
      required: !0
    },
    keyIcon: {
      type: String,
      required: !1,
      default: void 0
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      currentSlot: t
    } = Zk(e), {
      isItemLink: n,
      isLinkDisabled: r,
      toLocal: s
    } = Yk(e), {
      label: l,
      labelWithoutFilter: o
    } = zk(e), {
      icon: u,
      iconClassLocal: h,
      id: A
    } = Wk(e), {
      isLinkActive: E
    } = Vk(e, {
      id: A
    }), {
      linkId: p
    } = jk(e, {
      id: A
    }), {
      isLinkOpen: T,
      isLinkOpenPanelMain: m,
      isLinkOpenPanelSecondaryMenuClose: L
    } = Xk(e, {
      id: A
    }), {
      tabindex: b
    } = Jk(e), {
      countChildren: v
    } = Gk(e, {
      id: A
    }), {
      isTitleHtml: I,
      titleLocal: y,
      titleAttributes: R
    } = Qk(e, {
      isItemLink: n,
      isLinkOpenPanelMain: m,
      isLinkOpenPanelSecondaryMenuClose: L,
      labelWithoutFilter: o
    }), {
      clickLink: D,
      onKeydown: w,
      openSubMenu: M
    } = Kk(e, {
      id: A
    });
    return {
      clickLink: D,
      countChildren: v,
      currentSlot: t,
      icon: u,
      iconClassLocal: h,
      isItemLink: n,
      isLinkActive: E,
      isLinkDisabled: r,
      isLinkOpen: T,
      isTitleHtml: I,
      label: l,
      labelWithoutFilter: o,
      linkId: p,
      onKeydown: w,
      openSubMenu: M,
      tabindex: b,
      titleAttributes: R,
      titleLocal: y,
      toLocal: s
    };
  },
  render() {
    return c("li", {
      class: "a_menu__listitem"
    }, [
      this.isLinkInSearchPanel && c("span", {
        class: "a_menu__breadcrumbs__item__divider",
        ariaHidden: !0
      }, "/"),
      this.currentSlot && this.$slots[this.currentSlot] ? this.$slots[this.currentSlot]({
        id: this.linkId,
        item: this.item,
        clickLink: this.clickLink,
        countChildren: this.countChildren,
        isLinkActive: this.isLinkActive,
        isLinkOpen: this.isLinkOpen,
        isPanelOpen: this.isPanelOpen,
        isPanelMain: this.isPanelMain,
        label: this.label,
        labelWithoutFilter: this.labelWithoutFilter,
        onKeydown: this.onKeydown,
        openSubMenu: this.openSubMenu,
        tabindex: this.tabindex
      }) : this.isItemLink ? c(wu, {
        id: this.linkId,
        class: ["a_menu__link a_menu__link__text_truncated", {
          a_menu__link_disabled: this.isLinkDisabled,
          a_menu__link_active: this.isLinkActive,
          a_menu__link_panel_main: this.isPanelMain
        }],
        html: this.label,
        iconClass: this.iconClassLocal,
        iconLeft: this.icon,
        isTitleHtml: this.isTitleHtml,
        tabindex: this.tabindex,
        textAriaHidden: !0,
        textClass: "a_menu__link__text aloha_element__ml_0",
        textScreenReader: this.titleLocal,
        title: this.titleLocal,
        titleAttributes: this.titleAttributes,
        titlePlacement: "right",
        to: this.toLocal,
        onClick: this.clickLink
      }) : c(rt, {
        id: this.linkId,
        class: [
          "a_menu__link a_menu__link_btn a_menu__link__text_truncated",
          {
            a_menu__link_open: this.isLinkOpen,
            a_menu__link_active: this.isLinkActive,
            a_menu__link_panel_main: this.isPanelMain
          }
        ],
        html: this.label,
        iconClass: this.iconClassLocal,
        iconLeft: this.icon,
        isTitleHtml: this.isTitleHtml,
        role: "button",
        tabindex: this.tabindex,
        tag: "a",
        textAriaHidden: !0,
        textClass: "a_menu__link__text aloha_element__ml_0",
        textScreenReader: this.titleLocal,
        title: this.titleLocal,
        titleAttributes: this.titleAttributes,
        titlePlacement: "right",
        onClick: this.openSubMenu,
        onKeydown: this.onKeydown
      }, () => [
        c("span", {
          class: "a_menu__link__counter aloha_element__ml_0"
        }, [
          this.showCountChildren && c("span", {
            ariaHidden: !0
          }, this.countChildren),
          c(lt, {
            class: "a_menu__link__counter__icon",
            icon: jS
          })
        ])
      ])
    ]);
  }
};
function eU(e) {
  const t = f(e, "groupItems");
  return {
    hasItems: _(() => t.value.length > 0)
  };
}
function tU(e) {
  const t = f(e, "groupIndex"), n = f(e, "groupLabel"), r = f(e, "menuId"), s = f(e, "paneIndex"), l = _(() => `${r.value}_${s.value}_${t.value}_label`);
  return {
    ariaLabelledbyObj: _(() => n.value ? {
      "aria-labelledby": l.value
    } : {}),
    labelId: l
  };
}
const QE = {
  name: "AMenuPanelGroup",
  props: {
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    groupIndex: {
      type: [Number, String],
      required: !0
    },
    groupItems: {
      type: Array,
      required: !0
    },
    groupLabel: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    isPanelOpen: {
      type: Boolean,
      required: !1
    },
    keyIcon: {
      type: String,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    paneIndex: {
      type: [Number, String],
      required: !0
    }
  },
  setup(e) {
    const {
      hasItems: t
    } = eU(e), {
      ariaLabelledbyObj: n,
      labelId: r
    } = tU(e);
    return {
      ariaLabelledbyObj: n,
      hasItems: t,
      labelId: r
    };
  },
  render() {
    return this.hasItems ? this.groupLabel ? c("li", {
      ...this.ariaLabelledbyObj
    }, [
      c("div", {
        id: this.labelId,
        class: "a_menu__list_header"
      }, this.groupLabel),
      c("ul", {
        class: "a_menu__listview"
      }, [
        this.groupItems.map((e, t) => c(Xd, {
          key: t,
          item: e,
          dataProParentChildren: this.dataProParentChildren,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId
        }, this.$slots))
      ])
    ]) : this.groupItems.map((e, t) => c(Xd, {
      key: t,
      item: e,
      dataProParentChildren: this.dataProParentChildren,
      isPanelOpen: this.isPanelOpen,
      keyIcon: this.keyIcon,
      menuId: this.menuId
    }, this.$slots)) : null;
  }
};
function nU(e) {
  const t = f(e, "panelItems"), n = f(e, "keyGroup"), r = _(() => {
    const l = [], o = {};
    return Y(t.value, (u) => {
      const h = fe(u, n.value);
      le(h) ? l.push(u) : (o[h] = o[h] || [], o[h].push(u));
    }), {
      withoutGroup: l,
      withGroup: o
    };
  });
  return {
    isItemsWithoutGroup: _(() => r.value.withoutGroup.length > 0),
    itemsGroup: r
  };
}
function rU(e, {
  openedLevelIndex: t = _(() => 0)
}) {
  const n = f(e, "dataKeyById"), r = f(e, "isPanelMain"), s = f(e, "parentId"), l = _e("isMenuOpen"), o = _(() => !r.value && !l.value && t.value === 0), u = _(() => fe(n.value, `${s.value}.${St}`));
  return {
    isHeaderPanelVisible: o,
    parentLabel: u
  };
}
function aU(e) {
  const t = f(e, "menuId"), n = f(e, "parentId");
  return {
    panelId: _(() => ra({
      menuId: t.value,
      id: n.value,
      suffix: "panel"
    }))
  };
}
function sU(e) {
  const t = f(e, "panelParentsOpen"), n = f(e, "parentId"), r = _(() => t.value.indexOf(n.value)), s = _(() => {
    if (r.value !== -1)
      return `z-index: ${r.value + 2};`;
  });
  return {
    openedLevelIndex: r,
    styleZIndex: s
  };
}
function iU(e, {
  openedLevelIndex: t = _(() => -1)
}) {
  const n = f(e, "isPanelMain"), r = f(e, "isSearchActive"), s = f(e, "panelParentsOpen"), l = _(() => r.value ? !1 : n.value ? s.value.length === 0 : s.value.length ? t.value === s.value.length - 1 : !1);
  return {
    isChildPanelOpen: _(() => {
      if (n.value)
        return s.value.length > 0;
      const u = t.value;
      return u !== -1 && u !== s.value.length - 1;
    }),
    isPanelOpen: l
  };
}
const ep = {
  name: "AMenuPanel",
  props: {
    attributesBlockerClick: {
      type: Object,
      required: !0
    },
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataKeyById: {
      type: Object,
      required: !0
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !1
    },
    isPanelMain: {
      type: Boolean,
      required: !1
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    keyGroup: {
      type: String,
      required: !0
    },
    keyIcon: {
      type: String,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    paneIndex: {
      type: [Number, String],
      required: !0
    },
    panelItems: {
      type: Array,
      required: !0
    },
    panelParentsOpen: {
      type: Array,
      required: !0
    },
    parentId: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = f(e, "isPanelMain"), {
      panelId: n
    } = aU(e), {
      openedLevelIndex: r,
      styleZIndex: s
    } = sU(e), {
      isItemsWithoutGroup: l,
      itemsGroup: o
    } = nU(e), {
      isChildPanelOpen: u,
      isPanelOpen: h
    } = iU(e, {
      openedLevelIndex: r
    }), {
      isHeaderPanelVisible: A,
      parentLabel: E
    } = rU(e, {
      openedLevelIndex: r
    });
    return et("isChildPanelOpen", u), et("isPanelMain", t), {
      isChildPanelOpen: u,
      isHeaderPanelVisible: A,
      isItemsWithoutGroup: l,
      isPanelOpen: h,
      itemsGroup: o,
      panelId: n,
      parentLabel: E,
      styleZIndex: s
    };
  },
  render() {
    return c("div", {
      id: this.panelId,
      class: ["a_menu__panel", {
        a_menu__panel_main: !this.isSearchActive && this.isPanelMain,
        a_menu__panel_secondary: !this.isPanelMain,
        a_menu__panel_opened: !this.isSearchActive && this.isPanelOpen,
        a_menu__panel_parent: !this.isSearchActive && this.isChildPanelOpen
      }],
      style: this.styleZIndex
    }, [
      !this.isPanelMain && this.isPanelOpen && c(Hk, {
        breadcrumbsLinkClass: this.breadcrumbsLinkClass,
        breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
        dataKeyById: this.dataKeyById,
        isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
        isPanelMain: this.isPanelMain,
        isSearchActive: this.isSearchActive,
        panelParentsOpen: this.panelParentsOpen
      }),
      this.isHeaderPanelVisible && c("div", {
        class: "a_menu__panel_header"
      }, [
        c(Te, {
          class: "a_menu__panel_header__text",
          html: this.parentLabel,
          tag: "strong"
        })
      ]),
      c("ul", {
        class: "a_menu__listview"
      }, [
        this.isItemsWithoutGroup && c(QE, {
          dataProParentChildren: this.dataProParentChildren,
          groupItems: this.itemsGroup.withoutGroup,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId,
          paneIndex: this.paneIndex,
          groupIndex: "00"
        }, this.$slots),
        Object.keys(this.itemsGroup.withGroup).map((e, t) => c(QE, {
          key: e,
          dataProParentChildren: this.dataProParentChildren,
          groupIndex: t,
          groupItems: this.itemsGroup.withGroup[e],
          groupLabel: e,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId,
          paneIndex: this.paneIndex
        }, this.$slots))
      ])
    ]);
  }
}, Zd = "_a_breadcrumbs";
function lU(e) {
  const t = f(e, "item");
  return {
    breadcrumbsItems: _(() => {
      const r = [
        {
          label: "_A_MENU_2_MAIN_MENU_",
          isFirst: !0,
          parentIds: []
        }
      ], s = [];
      return Y(t.value[Zd], (l) => {
        s.push(l.parentId), r.push({
          label: l.label,
          parentId: l.parentId,
          parentIds: [
            ...s
          ]
        });
      }), r;
    })
  };
}
function oU() {
  const e = _e("togglePanel"), t = ({ parentIds: r }) => {
    e({ parentIds: r });
  };
  return {
    goTo: t,
    goToKeydown: ({ $event: r, parentIds: s }) => {
      (r.keyCode === Z.enter || r.keyCode === Z.space) && (t({ parentIds: s }), r.stopPropagation(), r.preventDefault());
    }
  };
}
const uU = {
  name: "AMenuSearchPanelBreadcrumbs",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    item: {
      type: Object,
      required: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      breadcrumbsItems: t
    } = lU(e), {
      goTo: n,
      goToKeydown: r
    } = oU();
    return {
      breadcrumbsItems: t,
      goTo: n,
      goToKeydown: r
    };
  },
  render() {
    return c("li", {}, [
      c("ul", {
        class: "a_menu__breadcrumb__ul a_menu__breadcrumb__ul_search"
      }, [
        c("li", {}, [
          c(sa, {
            buttonClass: "a_btn a_btn_secondary a_btn_small a_menu__breadcrumb__ul_truncated__btn",
            buttonIconLeft: Nl,
            buttonTextScreenReader: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
            buttonTitle: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
            dropdownClass: "a_menu__breadcrumb__ul_truncated__dropdown",
            hasCaret: !1,
            inBody: !0,
            ...this.breadcrumbsTruncatedDropdownProps
          }, {
            dropdown: () => [
              this.breadcrumbsItems.map((e) => c("li", {
                key: e.parentId,
                class: "a_menu__breadcrumbs__item"
              }, [
                c(rt, {
                  text: e.label,
                  title: e.label,
                  tag: "a",
                  class: [
                    "a_menu__breadcrumbs__link",
                    this.breadcrumbsLinkClass
                  ],
                  role: "button",
                  tabindex: 0,
                  onClick: () => this.goTo({ parentIds: e.parentIds }),
                  onKeydown: (t) => this.goToKeydown({ $event: t, parentIds: e.parentIds })
                }),
                c("span", {
                  class: "a_menu__breadcrumbs__item__divider"
                }, "/")
              ]))
            ]
          })
        ]),
        c(Xd, {
          item: this.item,
          dataProParentChildren: this.dataProParentChildren,
          isLinkInSearchPanel: !0,
          modelSearch: this.modelSearch,
          menuId: this.menuId
        }, this.$slots)
      ])
    ]);
  }
};
function _U(e) {
  const t = f(e, "itemsWithSearch"), n = f(e, "isSearchActive");
  return {
    isNoneFound: _(() => n.value ? t.value.length === 0 : !1)
  };
}
function dU(e, {
  isNoneFound: t = _(() => !1)
}) {
  return {
    textLocal: _(() => t.value ? "_A_MENU_2_SEARCH_NONE_FOUND_" : "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_")
  };
}
const cU = {
  name: "AMenuSearchPanel",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    itemsWithSearch: {
      type: Array,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      isNoneFound: t
    } = _U(e), {
      textLocal: n
    } = dU(e, {
      isNoneFound: t
    });
    return et("isPanelMain", !1), et("isChildPanelOpen", !1), {
      isNoneFound: t,
      textLocal: n
    };
  },
  render() {
    return this.isSearchActive ? c("div", {
      class: "a_menu__panels__main a_menu__panel_search"
    }, [
      c("div", {
        class: "a_menu__navbar_top_sub"
      }, [
        c(Te, {
          class: "a_menu__navbar_top_sub__text",
          tag: "strong",
          text: this.textLocal,
          extra: {
            count: this.itemsWithSearch.length
          }
        })
      ]),
      !this.isNoneFound && c("div", {
        class: "a_vertical_scroll"
      }, [
        c("div", {
          class: "a_scroll_content"
        }, [
          c("ul", {
            class: "a_menu__listview"
          }, [
            this.itemsWithSearch.map((e) => c(uU, {
              key: e[Ye],
              breadcrumbsLinkClass: this.breadcrumbsLinkClass,
              breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
              dataProParentChildren: this.dataProParentChildren,
              item: e,
              menuId: this.menuId,
              modelSearch: this.modelSearch
            }, this.$slots))
          ])
        ])
      ])
    ]) : null;
  }
};
function fU({
  onScroll: e = () => {
  },
  scrollContentRef: t = B(void 0)
}) {
  return {
    addScrollListener: () => {
      t.value.addEventListener("scroll", e);
    },
    destroyScrollListener: () => {
      t.value.removeEventListener("scroll", e);
    }
  };
}
function hU({
  checkScroll: e = () => {
  },
  containerRef: t = B(void 0),
  scrollContentChildRef: n = B(void 0)
}) {
  const r = B(void 0), s = B(!1), l = B(void 0), o = B(!1), u = B(0), h = B(0), A = (P) => {
    const C = P[0].contentRect.height;
    (u.value === 0 || u.value !== C) && (u.value = C, e());
  }, E = (P) => {
    const C = P[0].contentRect.height;
    (h.value === 0 || h.value !== C) && (h.value = C, e());
  }, p = () => {
    r.value = new ResizeObserver(
      ol((P) => A(P), 300)
    );
  }, T = () => {
    l.value = new ResizeObserver(
      ol((P) => E(P), 300)
    );
  }, m = () => {
    s.value || (r.value.observe(t.value), s.value = !0);
  }, L = () => {
    s.value && (r.value.unobserve(t.value), s.value = !1);
  }, b = () => {
    r.value.disconnect();
  }, v = () => {
    o.value || (l.value.observe(n.value), o.value = !0);
  }, I = () => {
    o.value && (l.value.unobserve(n.value), o.value = !1);
  }, y = () => {
    l.value.disconnect();
  };
  return {
    connectObservers: () => {
      m(), v();
    },
    destroyObservers: () => {
      b(), y();
    },
    disconnectObservers: () => {
      L(), I();
    },
    initObservers: () => {
      p(), T();
    }
  };
}
function AU(e) {
  const t = f(e, "scrollDistance"), n = B(!1), r = B(!1), s = B(void 0), l = B(!1), o = B(void 0), u = B(void 0), h = () => {
    const T = o.value;
    r.value = T.scrollTop > 0, n.value = T.scrollTop < T.scrollHeight - T.clientHeight;
  }, A = () => {
    l.value = o.value.scrollHeight > o.value.clientHeight, l.value && h();
  };
  return {
    canScrollDown: n,
    canScrollUp: r,
    checkScroll: A,
    containerRef: s,
    hasScroll: l,
    onScroll: h,
    scrollContentChildRef: u,
    scrollContentRef: o,
    scrollDown: () => {
      o.value.scrollTop += t.value, A();
    },
    scrollUp: () => {
      o.value.scrollTop -= t.value, A();
    }
  };
}
const EU = {
  name: "AVerticalScroll",
  props: {
    btnDownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnUpProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    scrollContentAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    scrollDistance: {
      type: Number,
      required: !1,
      default: 100
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    tagScrollContent: {
      type: String,
      required: !1,
      default: "div"
    }
  },
  setup(e) {
    const t = f(e, "disabled"), {
      canScrollDown: n,
      canScrollUp: r,
      checkScroll: s,
      containerRef: l,
      hasScroll: o,
      onScroll: u,
      scrollContentChildRef: h,
      scrollContentRef: A,
      scrollDown: E,
      scrollUp: p
    } = AU(e), {
      connectObservers: T,
      destroyObservers: m,
      disconnectObservers: L,
      initObservers: b
    } = hU({
      checkScroll: s,
      containerRef: l,
      scrollContentChildRef: h
    }), {
      addScrollListener: v,
      destroyScrollListener: I
    } = fU({
      onScroll: u,
      scrollContentRef: A
    });
    return Vr(() => {
      b(), t.value || (T(), v());
    }), Ct(() => {
      m(), I();
    }), tt(t, (y) => {
      y ? (L(), I()) : (T(), v());
    }), {
      canScrollDown: n,
      canScrollUp: r,
      containerRef: l,
      hasScroll: o,
      scrollContentChildRef: h,
      scrollContentRef: A,
      scrollDown: E,
      scrollUp: p
    };
  },
  render() {
    return c(this.tag, {
      ref: "containerRef",
      class: [
        "a_vertical_scroll",
        {
          a_vertical_scroll_scrollable: this.hasScroll && !this.disabled
        }
      ]
    }, [
      c("div", {
        class: "a_vertical_scroll__btn__wrapper a_vertical_scroll__btn__wrapper_up"
      }, [
        c(rt, {
          class: "a_btn a_btn_transparent_secondary a_btn_small a_vertical_scroll__btn a_vertical_scroll__btn_up",
          iconLeft: Kc,
          disabled: !this.canScrollUp,
          tabindex: -1,
          title: "_A_VERTICAL_SCROLL_BTN_UP_TITLE_",
          textScreenReader: "_A_VERTICAL_SCROLL_BTN_UP_TITLE_",
          onClick: this.scrollUp,
          ...this.btnUpProps
        })
      ]),
      c(this.tagScrollContent, {
        ref: "scrollContentRef",
        class: "a_scroll_content",
        ...this.scrollContentAttributes
      }, [
        c("div", {
          ref: "scrollContentChildRef"
        }, [
          this.$slots.default && this.$slots.default()
        ])
      ]),
      c("div", {
        class: "a_vertical_scroll__btn__wrapper a_vertical_scroll__btn__wrapper_down"
      }, [
        c(rt, {
          class: "a_btn a_btn_transparent_secondary a_btn_small a_vertical_scroll__btn a_vertical_scroll__btn_down",
          iconLeft: Li,
          disabled: !this.canScrollDown,
          title: "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_",
          textScreenReader: "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_",
          tabindex: -1,
          onClick: this.scrollDown,
          ...this.btnDownProps
        })
      ])
    ]);
  }
};
function pU(e, {
  closeAllPanels: t = () => {
  }
}) {
  const n = f(e, "isBlockerClickable"), r = () => {
    t();
  };
  return {
    attributesBlockerClick: _(() => {
      const l = {};
      return n.value && (l.onClick = r, l.class = "a_menu__blocker a_menu_clickable"), l;
    })
  };
}
function TU(e, {
  isMenuOpen: t = _(() => !1),
  isMobileWidth: n = B(void 0),
  toggleMenu: r = () => {
  }
}) {
  const s = f(e, "isBackdropMobileClickable"), l = f(e, "useBackdropMobile"), o = _(() => l.value && t.value && n.value), u = () => {
    r({
      isOpen: !1
    });
  };
  return {
    clickAttributesBackdrop: _(() => s.value ? {
      onClick: u
    } : {}),
    isBackdropVisible: o
  };
}
function SU(e, {
  dataKeyById: t = _(() => ({})),
  dataProParent: n = _(() => ({
    main: [],
    children: {}
  })),
  isMenuLinkClicked: r = B(!1),
  isMenuOpen: s = _(() => !1),
  panelParentsOpen: l = B([])
}) {
  const o = f(e, "compareUrlCallback"), h = LR().appContext.config.globalProperties.$router, A = B([]), E = _(() => h.currentRoute), p = ({ route: b = {}, ids: v = [] }) => {
    const I = b[Al];
    return I && (v.unshift(I), p({ route: t.value[I], ids: v })), v;
  }, T = ({ routerFullPath: b, route: v }) => {
    const {
      fullPath: I
    } = h.resolve(v.to);
    return Me(o.value) ? o.value({
      fullPath: I,
      routerFullPath: b,
      item: v,
      currentRoute: h.currentRoute.value
    }) : I === b;
  }, m = ({ routes: b = [], routerFullPath: v = "/" }) => {
    let I = !1;
    return Y(b, (y) => {
      if (y.to && T({ routerFullPath: v, route: y })) {
        const R = p({ route: y, ids: [] });
        return !r.value && s.value && (l.value = R), A.value = [...R, y[Ye]], I = !0, !1;
      }
    }), I;
  };
  return {
    activeRoutesIds: A,
    checkAllRoutes: () => {
      const b = h.currentRoute.value.fullPath;
      let v = !1;
      v = m({ routes: n.value.main, routerFullPath: b }), !v && (Y(n.value.children, (I) => {
        if (v = m({ routes: I, routerFullPath: b }), v)
          return !1;
      }), r.value && (r.value = !1));
    },
    currentRoute: E
  };
}
const mU = "_a_children";
function LU(e) {
  const t = f(e, "data"), n = f(e, "isTranslated"), r = f(e, "keyChildren"), s = f(e, "keyId"), l = f(e, "keyLabel"), o = f(e, "keyLabelCallback"), u = ({ breadcrumbs: T = [], parentId: m, parentLabel: L }) => {
    const b = Xp(T);
    return m && b.push({
      parentId: m,
      label: L
    }), b;
  }, h = ({ dataClone: T, dataFlat: m = [], parentId: L, parentLabel: b, breadcrumbs: v = [] }) => (Y(T, (I) => {
    I[Ye] = fe(I, s.value), I[Al] = L, I[Zd] = u({
      breadcrumbs: v,
      parentId: L,
      parentLabel: b
    });
    let y;
    if (o.value ? y = o.value({ item: I }) : y = fe(I, l.value), n.value && Ca(y) && (y = wt({ placeholder: y })), I[St] = y, r.value) {
      const R = fe(I, r.value);
      R && R.length && (h({
        dataClone: R,
        parentId: I[Ye],
        parentLabel: I[St],
        dataFlat: m,
        breadcrumbs: I[Zd]
      }), I[mU] = R);
    }
    m.push(I);
  }), m), A = _(() => {
    const T = pe(t.value);
    let m = [];
    return m = h({ dataClone: T, dataFlat: m }), m;
  }), E = _(() => {
    const T = [], m = {};
    return Y(A.value, (L) => {
      const b = L[Al];
      le(b) ? T.push(L) : (m[b] = m[b] || [], m[b].push(L));
    }), {
      main: T,
      children: m
    };
  });
  return {
    dataKeyById: _(() => Da(A.value, Ye)),
    dataProParent: E
  };
}
function bU(e, {
  closeMenu: t = () => {
  },
  isMenuOpen: n = _(() => !1),
  isSubMenuOpen: r = _(() => !1),
  panelParentsOpen: s = B([]),
  togglePanel: l = () => {
  }
}) {
  const o = f(e, "menuId"), u = f(e, "useEscapeForMobile"), h = B(void 0), {
    isMobileWidth: A
  } = An(), E = _(() => !A.value && !n.value && r.value), p = (P) => {
    if (!h.value)
      return;
    const x = h.value.querySelectorAll(Ei);
    if (x.length === 0) {
      P.preventDefault();
      return;
    }
    const C = x[0], q = x[x.length - 1];
    P.shiftKey ? document.activeElement === C && (q.focus(), P.preventDefault()) : document.activeElement === q && (C.focus(), P.preventDefault());
  }, T = (P) => {
    u.value && (t(), P.preventDefault(), P.stopPropagation());
  }, m = (P) => {
    const x = P || window.$event;
    x.key === "Escape" || x.keyCode === Z.escape ? T(P) : (x.key === "Tab" || x.keyCode === Z.tab) && p(x);
  }, L = ({ panelIndex: P, panelId: x }) => {
    const C = ra({
      menuId: o.value,
      id: x,
      suffix: "link"
    }), q = document.getElementById(C);
    if (q) {
      if (P > 0) {
        const W = s.value.slice(0, P);
        l({ parentIds: W, withoutFocus: !0 });
      }
      q.focus();
    }
  }, b = ({ panelIndex: P }) => {
    const x = s.value[P + 1], C = ra({
      menuId: o.value,
      id: x,
      suffix: "panel"
    }), q = document.querySelectorAll(`#${C} a.a_menu__link`);
    q.length && q[0].focus();
  }, v = ({ panelId: P }) => {
    const x = ra({
      menuId: o.value,
      id: P,
      suffix: "link"
    }), C = document.getElementById(x);
    C && (l({ parentIds: [], withoutFocus: !0 }), C.focus());
  }, I = ({ EVENT: P, PANEL_ELEMENT: x, panelIndex: C, panelId: q }) => {
    const W = x.querySelectorAll("a.a_menu__link");
    P.shiftKey ? document.activeElement === W[0] && (C > 0 ? L({ panelIndex: C, panelId: q }) : v({ panelId: q }), P.preventDefault()) : document.activeElement === W[W.length - 1] && (C < s.value.length - 1 ? b({ panelIndex: C }) : C > 0 ? L({ panelIndex: C, panelId: q }) : v({ panelId: q }), P.preventDefault());
  }, y = (P) => {
    const x = P || window.$event;
    (x.key === "Tab" || x.keyCode === Z.tab) && Y(s.value, (C, q) => {
      const W = ra({
        menuId: o.value,
        id: C,
        suffix: "panel"
      }), z = document.getElementById(W);
      if (z && z.contains(document.activeElement))
        return I({ EVENT: x, PANEL_ELEMENT: z, panelIndex: q, panelId: C }), !1;
    });
  };
  return {
    isDesktopSubMenuVisibleWhenMenuClosed: E,
    menuRef: h,
    removeListenerForKeydownDesktop: () => {
      document.removeEventListener("keydown", y);
    },
    removeListenerForKeydownMobile: () => {
      document.removeEventListener("keydown", m);
    },
    setListenerForKeydownDesktop: () => {
      document.addEventListener("keydown", y);
    },
    setListenerForKeydownMobile: () => {
      A.value && document.addEventListener("keydown", m);
    }
  };
}
function vU(e, {
  closeAllPanels: t = () => {
  },
  isMenuOpen: n = _(() => !1),
  isMobileWidth: r = B(!1),
  resetSearch: s = () => {
  },
  toggleMenu: l = () => {
  }
}) {
  const o = f(e, "isBodyFocusAfterClick"), u = B(!1), h = () => {
    o.value && (document.body.hasAttribute("tabindex") ? document.body.focus() : (document.body.setAttribute("tabindex", "-1"), document.body.focus(), document.body.removeAttribute("tabindex")));
  };
  return {
    clickMenuLink: ({ ctrlKey: E = !1, isPanelMain: p = !1 } = {}) => {
      u.value = !0, s(), h(), (!n.value || p) && t(), r.value && !E && l({ isOpen: !1 });
    },
    isMenuLinkClicked: u
  };
}
function IU(e, {
  isMenuOpen: t = B(!1),
  toggleMenu: n = () => {
  }
}) {
  const r = f(e, "isBlockerClickable"), s = f(e, "menuId"), {
    isMobileWidth: l
  } = An(), o = _(() => l.value ? {
    role: "dialog",
    ariaModal: !0
  } : {}), u = _(() => `${s.value}_header`);
  return {
    attributesMenuClick: _(() => {
      const A = {};
      return r.value && !t.value && (A.onClick = () => n({ isOpen: !0 }), A.class = "a_menu a_menu_clickable"), A;
    }),
    attributesMobile: o,
    headerId: u
  };
}
function gU({
  isMenuOpen: e = _(() => !1),
  panelParentsOpen: t = B([])
}) {
  return {
    isLeastOnePanelOpenAndMenuClosed: _(() => !e.value && t.value.length > 0)
  };
}
function yU(e, {
  dataKeyById: t = _(() => ({})),
  resetSearch: n = () => {
  }
}) {
  const r = f(e, "menuId"), s = B([]), l = _(() => s.value.length > 0), o = ({ parentId: E, panelParentsOpenLocal: p }) => {
    if (E) {
      p.unshift(E);
      const T = t.value[E][Al];
      return o({ parentId: T, panelParentsOpenLocal: p });
    }
    return p;
  };
  return {
    closeAllPanels: () => {
      s.value = [], n();
    },
    isSubMenuOpen: l,
    panelParentsOpen: s,
    setDefaultMenu: () => {
      n(), s.value = [];
    },
    togglePanel: ({ parentIds: E, parentId: p, isLinkInSearchPanel: T, withoutFocus: m }) => {
      if (E)
        s.value = E;
      else {
        const L = s.value.indexOf(p), b = o({ parentId: p, panelParentsOpenLocal: [] });
        !T && L !== -1 && b.splice(-1, 1), s.value = b;
      }
      m || GS({
        menuId: r.value,
        panelId: fi(s.value) || ""
      }), n();
    }
  };
}
function RU(e, {
  menuRef: t = B(void 0),
  isMenuOpen: n = _(() => !1),
  panelParentsOpen: r = B([])
}) {
  const s = f(e, "menuId"), l = B({}), o = B(!1), u = ({ id: b }) => {
    const v = ra({
      menuId: s.value,
      id: b,
      suffix: "link"
    });
    return document.getElementById(v);
  }, h = ({ id: b }) => {
    const v = ra({
      menuId: s.value,
      id: b,
      suffix: "panel"
    });
    return document.getElementById(v);
  }, A = (b) => {
    t.value.contains(b.target) || (r.value = []);
  }, E = () => {
    o.value || (o.value = !0, document.addEventListener("click", A));
  }, p = () => {
    o.value = !1, document.removeEventListener("click", A);
  }, T = (b) => {
    if (l.value[b]) {
      l.value[b](), delete l.value[b];
      const v = h({ id: b });
      v.style.removeProperty("left"), v.style.removeProperty("top");
    }
  };
  return {
    destroyPopover: () => {
      Y(l.value, (b, v) => {
        T(v);
      }), p();
    },
    startPopper: () => {
      if (n.value)
        return;
      E();
      const b = Xp(l.value);
      Y(r.value, (v) => {
        if (l.value[v]) {
          delete b[v];
          return;
        }
        const I = u({ id: v }), y = h({ id: v });
        !I || !y || (l.value[v] = bl(
          I,
          y,
          () => {
            !I || !y || gl(
              I,
              y,
              {
                placement: "right",
                middleware: [
                  Il(),
                  vl({ limiter: mu() })
                ]
              }
            ).then(({ x: R, y: D }) => {
              Object.assign(y.style, {
                left: `${R}px`,
                top: `${D}px`
              });
            });
          }
        ));
      }), Y(b, (v, I) => {
        T(I);
      });
    }
  };
}
function OU(e, {
  removeListenerForKeydownMobile: t = () => {
  },
  toggleMenu: n = () => {
  }
}) {
  const r = f(e, "isMenuOpenInitial"), s = B(!1), {
    isMobileWidth: l
  } = An(), o = (E) => {
    E ? n({ isOpen: !1 }) : (n({ isOpen: r.value }), t());
  };
  return {
    destroyEventBusUpdateViewOnResize: () => {
      Rt.$on("updateViewOnResize", o);
    },
    initEventBusUpdateViewOnResize: () => {
      Rt.$on("updateViewOnResize", o);
    },
    initMenuOpenOrClose: () => {
      l.value ? n({ isOpen: !1 }) : n({ isOpen: r.value }), au().then(() => {
        s.value = !0;
      });
    },
    isMenuInitialized: s,
    isMobileWidth: l
  };
}
function CU(e, {
  dataKeyById: t = _(() => ({}))
}) {
  const n = f(e, "menuId"), r = B(""), s = _(() => `${n.value}_search`), l = (p) => {
    r.value = p;
  }, o = _(() => !!r.value), u = _(() => o.value ? "display: none;" : void 0), h = () => {
    o.value && (r.value = "");
  }, A = _(() => Au(r.value)), E = _(() => {
    const p = [];
    if (o.value) {
      const T = new RegExp(A.value, "gi");
      Y(t.value, (m) => {
        `${m[St]}`.search(T) !== -1 && p.push(m);
      });
    }
    return p;
  });
  return {
    isSearchActive: o,
    itemsWithSearch: E,
    modelSearch: r,
    resetSearch: h,
    searchInputId: s,
    styleSearchPanelMain: u,
    updateModelSearch: l
  };
}
function NU({
  searchInputId: e = _(() => {
  }),
  toggleMenu: t = () => {
  }
}) {
  const n = () => {
    t({ isOpen: !0 }), window.isScrollDisabled || setTimeout(() => {
      aa({
        selector: `#${e.value}`
      });
    });
  };
  return {
    clickOnSearchBtn: n,
    keydownOnSearchBtn: (s) => {
      (s.keyCode === Z.enter || s.keyCode === Z.space) && (n(), s.stopPropagation(), s.preventDefault());
    }
  };
}
const DU = 34, BU = 20, Lde = {
  name: "AMenu",
  provide() {
    return {
      keySlot: _(() => this.keySlot)
    };
  },
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link"
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    breadcrumbsTruncatedOffset: {
      type: Number,
      required: !1,
      default: () => DU + BU
    },
    buttonToggleClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_transparent_secondary a_btn_small"
    },
    buttonToggleProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canChangeBodyClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    compareUrlCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    hasSearch: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBackdropMobileClickable: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBlockerClickable: {
      type: Boolean,
      required: !1
    },
    isBodyFocusAfterClick: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLinkTruncated: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMenuOpenInitial: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTranslated: {
      type: Boolean,
      required: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: String,
      required: !1,
      default: "group"
    },
    keyIcon: {
      type: String,
      required: !1,
      default: "icon"
    },
    keyId: {
      type: String,
      required: !1,
      default: "id"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyParent: {
      type: String,
      required: !1,
      default: "parent"
    },
    keySlot: {
      type: String,
      required: !1,
      default: void 0
    },
    menuId: {
      type: String,
      required: !1,
      default: () => st("a_menu_")
    },
    showCountChildren: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useBackdropMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useEscapeForMobile: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  setup(e) {
    const t = f(e, "isLinkTruncated"), n = f(e, "showCountChildren"), r = f(e, "breadcrumbsTruncatedOffset"), {
      dataKeyById: s,
      dataProParent: l
    } = LU(e), {
      isSearchActive: o,
      itemsWithSearch: u,
      modelSearch: h,
      resetSearch: A,
      searchInputId: E,
      styleSearchPanelMain: p,
      updateModelSearch: T
    } = CU(e, {
      dataKeyById: s
    }), {
      closeAllPanels: m,
      isSubMenuOpen: L,
      panelParentsOpen: b,
      setDefaultMenu: v,
      togglePanel: I
    } = yU(e, {
      dataKeyById: s,
      resetSearch: A
    }), {
      closeMenu: y,
      isMenuOpen: R,
      removeBodyClasses: D,
      toggleMenu: w
    } = KS(e), {
      isDesktopSubMenuVisibleWhenMenuClosed: M,
      menuRef: P,
      removeListenerForKeydownDesktop: x,
      removeListenerForKeydownMobile: C,
      setListenerForKeydownDesktop: q,
      setListenerForKeydownMobile: W
    } = bU(e, {
      closeMenu: y,
      isMenuOpen: R,
      isSubMenuOpen: L,
      panelParentsOpen: b,
      togglePanel: I
    }), {
      clickOnSearchBtn: z,
      keydownOnSearchBtn: oe
    } = NU({
      searchInputId: E,
      toggleMenu: w
    }), {
      attributesMenuClick: te,
      attributesMobile: ue,
      headerId: re
    } = IU(e, {
      isMenuOpen: R,
      toggleMenu: w
    }), {
      destroyEventBusUpdateViewOnResize: ie,
      initEventBusUpdateViewOnResize: Ae,
      initMenuOpenOrClose: we,
      isMenuInitialized: me,
      isMobileWidth: ae
    } = OU(e, {
      removeListenerForKeydownMobile: C,
      toggleMenu: w
    }), {
      clickMenuLink: Oe,
      isMenuLinkClicked: ve
    } = vU(e, {
      closeAllPanels: m,
      isMenuOpen: R,
      isMobileWidth: ae,
      resetSearch: A,
      toggleMenu: w
    }), {
      attributesBlockerClick: Ke
    } = pU(e, {
      closeAllPanels: m
    }), {
      activeRoutesIds: he,
      checkAllRoutes: k,
      currentRoute: G
    } = SU(e, {
      dataKeyById: s,
      dataProParent: l,
      isMenuLinkClicked: ve,
      isMenuOpen: R,
      panelParentsOpen: b
    }), {
      destroyPopover: ee,
      startPopper: de
    } = RU(e, {
      menuRef: P,
      isMenuOpen: R,
      panelParentsOpen: b
    }), {
      isLeastOnePanelOpenAndMenuClosed: Ne
    } = gU({
      isMenuOpen: R,
      panelParentsOpen: b
    }), {
      clickAttributesBackdrop: Fe,
      isBackdropVisible: Ue
    } = TU(e, {
      isMenuOpen: R,
      isMobileWidth: ae,
      toggleMenu: w
    });
    return tt(G, () => {
      k();
    }, {
      immediate: !0,
      deep: !0
    }), tt(R, (Xe) => {
      me.value && (A(), m(), Xe ? (ee(), W()) : C());
    }), tt(b, () => {
      de();
    }, {
      deep: !0
    }), tt(M, (Xe) => {
      Xe ? q() : x();
    }), et("activeRoutesIds", _(() => he.value)), et("clickMenuLink", Oe), et("isLinkTruncated", _(() => t.value)), et("isMenuOpen", _(() => R.value)), et("panelParentsOpen", b), et("showCountChildren", _(() => n.value)), et("togglePanel", I), et("breadcrumbsTruncatedOffset", _(() => r.value)), we(), Ae(), Ct(() => {
      D(), ie(), ee(), x(), C();
    }), {
      activeRoutesIds: he,
      attributesBlockerClick: Ke,
      attributesMenuClick: te,
      attributesMobile: ue,
      checkAllRoutes: k,
      clickAttributesBackdrop: Fe,
      clickOnSearchBtn: z,
      dataKeyById: s,
      dataProParent: l,
      headerId: re,
      isBackdropVisible: Ue,
      isLeastOnePanelOpenAndMenuClosed: Ne,
      isMenuOpen: R,
      isMobileWidth: ae,
      isSearchActive: o,
      isSubMenuOpen: L,
      itemsWithSearch: u,
      keydownOnSearchBtn: oe,
      menuRef: P,
      modelSearch: h,
      panelParentsOpen: b,
      removeBodyClasses: D,
      searchInputId: E,
      setDefaultMenu: v,
      styleSearchPanelMain: p,
      toggleMenu: w,
      togglePanel: I,
      updateModelSearch: T
    };
  },
  render() {
    return c("nav", {
      ref: "menuRef",
      id: this.menuId,
      "aria-labelledby": this.headerId,
      class: [
        "a_menu",
        {
          a_menu_sub_open: this.isSubMenuOpen,
          a_menu_open: this.isMenuOpen,
          a_menu_close: !this.isMenuOpen,
          a_menu_mobile: this.isMobileWidth
        }
      ],
      ...this.attributesMobile,
      ...this.attributesMenuClick
    }, [
      c("div", {
        class: "a_menu__navbar_top"
      }, [
        c($k, {
          buttonToggleProps: this.buttonToggleProps,
          canChangeBodyClass: this.canChangeBodyClass,
          class: this.buttonToggleClass,
          insideMenu: !0,
          menuId: this.menuId
        }),
        this.$slots.menuSearch && this.$slots.menuSearch(),
        this.hasSearch && c(Ln, {
          id: this.searchInputId,
          class: "a_menu__navbar_top__search",
          modelValue: this.modelSearch,
          label: "_A_MENU_2_SEARCH_",
          "onUpdate:modelValue": this.updateModelSearch
        })
      ]),
      c("div", {
        class: "a_menu__panels__main",
        style: this.styleSearchPanelMain
      }, [
        c("div", {
          class: "a_menu__navbar_top_sub"
        }, [
          c(Te, {
            id: this.headerId,
            class: "a_menu__navbar_top_sub__text",
            tag: "strong",
            text: "_A_MENU_2_MAIN_MENU_"
          }),
          this.hasSearch && c(rt, {
            role: "button",
            tabindex: 0,
            tag: "a",
            class: "a_menu__navbar_top_sub__search a_menu__link a_menu__link_btn",
            iconLeft: Ol,
            iconClass: "a_menu__link__icon",
            title: "_A_MENU_2_OPEN_SEARCH_",
            textScreenReader: "_A_MENU_2_OPEN_SEARCH_",
            onClick: this.clickOnSearchBtn,
            onKeydown: this.keydownOnSearchBtn
          })
        ]),
        c(EU, {
          class: {
            a_menu__vertical_scroll_hidden: this.isLeastOnePanelOpenAndMenuClosed
          },
          disabled: this.isMenuOpen || this.isLeastOnePanelOpenAndMenuClosed
        }, () => [
          c(ep, {
            attributesBlockerClick: this.attributesBlockerClick,
            dataKeyById: this.dataKeyById,
            dataProParentChildren: this.dataProParent.children,
            isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
            isPanelMain: !0,
            isSearchActive: this.isSearchActive,
            keyGroup: this.keyGroup,
            keyIcon: this.keyIcon,
            menuId: this.menuId,
            paneIndex: "00",
            panelItems: this.dataProParent.main,
            panelParentsOpen: this.panelParentsOpen
          }, this.$slots)
        ]),
        c("div", {
          class: "a_menu__panels"
        }, [
          Object.keys(this.dataProParent.children).map((e, t) => c(ep, {
            key: e,
            attributesBlockerClick: {},
            breadcrumbsLinkClass: this.breadcrumbsLinkClass,
            breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
            dataKeyById: this.dataKeyById,
            dataProParentChildren: this.dataProParent.children,
            isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
            isSearchActive: this.isSearchActive,
            keyGroup: this.keyGroup,
            keyIcon: this.keyIcon,
            menuId: this.menuId,
            paneIndex: t,
            panelItems: this.dataProParent.children[e],
            panelParentsOpen: this.panelParentsOpen,
            parentId: e
          }, this.$slots))
        ])
      ]),
      c(cU, {
        breadcrumbsLinkClass: this.breadcrumbsLinkClass,
        breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
        dataProParentChildren: this.dataProParent.children,
        isSearchActive: this.isSearchActive,
        isSearchBreadcrumbsTruncated: this.isSearchBreadcrumbsTruncated,
        itemsWithSearch: this.itemsWithSearch,
        menuId: this.menuId,
        modelSearch: this.modelSearch
      }, this.$slots),
      this.isBackdropVisible ? c(ia, {
        to: "body"
      }, [
        c("div", {
          class: "a_menu__backdrop a_backdrop a_backdrop_fade",
          "aria-hidden": !0,
          ...this.clickAttributesBackdrop
        })
      ]) : ""
    ]);
  }
};
function wU({
  isModalHidden: e = B(!1)
}) {
  const t = () => {
    e.value = !0;
  };
  return {
    destroyEventBusCloseFromOutside: () => {
      Rt.$off("closeModalConfirm", t);
    },
    initEventBusCloseFromOutside: () => {
      Rt.$on("closeModalConfirm", t);
    }
  };
}
const bde = {
  name: "AModalConfirm",
  setup() {
    const {
      closeConfirm: e,
      confirmOptions: t,
      isModalHidden: n
    } = uf(), {
      destroyEventBusCloseFromOutside: r,
      initEventBusCloseFromOutside: s
    } = wU({
      isModalHidden: n
    }), l = _(() => ({
      isModalHidden: n.value,
      isConfirm: !0,
      ...t.value,
      showCloseButtonHeader: !1,
      close: e
    }));
    return s(), Ct(() => {
      r();
    }), {
      modalProps: l
    };
  },
  render() {
    return c(Mu, this.modalProps, this.$slots);
  }
};
function PU(e) {
  const t = f(e, "stepIndex"), n = f(e, "stepActiveComputed"), r = _(() => n.value === t.value), s = _(() => t.value < n.value);
  return {
    isStepActive: r,
    isStepBeforeActive: s
  };
}
function FU(e, {
  isStepDisabled: t = _(() => !1),
  isStepActive: n = _(() => !1)
}) {
  const r = f(e, "id"), s = f(e, "stepIndex"), l = _(() => t.value || n.value ? -1 : 0), o = _(() => n.value ? {
    "aria-current": "step"
  } : {}), u = _(() => `${r.value}_step_text_${s.value}`), h = _(() => `${r.value}_step_status_text_${s.value}`);
  return {
    ariaCurrentAttributes: o,
    tabindex: l,
    stepStatusTextId: h,
    stepTextId: u
  };
}
function zS(e) {
  const t = f(e, "id"), n = f(e, "stepIndex");
  return {
    contentId: _(() => `${t.value}_${n.value}_content`)
  };
}
function xU(e) {
  const t = f(e, "step"), n = f(e, "stepIndex"), r = f(e, "stepActiveComputed"), s = f(e, "isForwardStepButtonDisabled"), l = f(e, "isBackStepButtonDisabled"), o = f(e, "isForwardButtonDisabled"), u = f(e, "isBackButtonDisabled"), h = _(() => n.value < r.value), A = _(() => n.value > r.value);
  return {
    isStepDisabled: _(() => t.value.disabled ? !0 : A.value ? o.value || s.value : h.value ? u.value || l.value : !1)
  };
}
function MU(e, { emit: t }, {
  isStepDisabled: n = _(() => !1)
}) {
  const r = f(e, "step"), s = f(e, "stepIndex"), l = ({ $event: u }) => {
    n.value || t("onStepClick", {
      $event: u,
      step: r.value,
      stepIndex: s.value
    });
  };
  return {
    onClick: l,
    onKeydown: (u) => {
      (u.keyCode === Z.enter || u.keyCode === Z.space) && (l({ $event: u }), u.preventDefault(), u.stopPropagation());
    }
  };
}
function $U(e) {
  const t = f(e, "step"), n = f(e, "stepIconError"), r = f(e, "stepIconErrorText"), s = f(e, "stepIconWarning"), l = f(e, "stepIconWarningText"), o = _(() => {
    if (t.value.error)
      return n.value;
    if (t.value.warning)
      return s.value;
  }), u = _(() => {
    if (t.value.error)
      return r.value;
    if (t.value.warning)
      return l.value;
  });
  return {
    iconErrorWarning: o,
    titleIconErrorWarning: u
  };
}
function qU(e, {
  isStepActive: t = _(() => !1),
  isStepBeforeActive: n = _(() => !1),
  isStepDisabled: r = _(() => !1)
}) {
  const s = f(e, "step");
  return {
    linkClass: _(() => ["a_wizard__step__link", {
      active: t.value,
      before_active: n.value,
      default: r.value,
      done: !t.value && !r.value,
      error: s.value.error,
      warning: s.value.warning
    }])
  };
}
function kU(e, {
  isStepActive: t = _(() => !1)
}) {
  const n = f(e, "isMobile"), r = f(e, "isStepNumberVisible"), s = f(e, "showOnlyActiveStepMobile"), l = f(e, "stepIndex"), o = _(() => l.value + 1), u = _(() => n.value && s.value && t.value), h = _(() => r.value ? u.value ? "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_" : o.value : "");
  return {
    stepNumber: o,
    stepNumberText: h
  };
}
function UU(e, {
  isStepActive: t = _(() => !1),
  isStepBeforeActive: n = _(() => !1)
}) {
  return {
    statusText: _(() => t.value ? "_A_WIZARD_STEP_ACTIVE_" : n.value ? "_A_WIZARD_STEP_VISITED_" : "_A_WIZARD_STEP_UPCOMING_")
  };
}
const HU = {
  name: "AWizardStep",
  props: {
    extra: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isMobile: {
      type: Boolean,
      required: !0
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    step: {
      type: Object,
      required: !0
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: bu
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: Lu
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    stepIndex: {
      type: Number,
      required: !0
    },
    stepsCount: {
      type: Number,
      required: !0
    }
  },
  emits: [
    "onStepClick"
  ],
  setup(e, t) {
    const {
      isStepActive: n,
      isStepBeforeActive: r
    } = PU(e), {
      stepNumber: s,
      stepNumberText: l
    } = kU(e, {
      isStepActive: n
    }), {
      isStepDisabled: o
    } = xU(e), {
      linkClass: u
    } = qU(e, {
      isStepActive: n,
      isStepBeforeActive: r,
      isStepDisabled: o
    }), {
      onClick: h,
      onKeydown: A
    } = MU(e, t, {
      isStepDisabled: o
    }), {
      ariaCurrentAttributes: E,
      stepTextId: p,
      stepStatusTextId: T,
      tabindex: m
    } = FU(e, {
      isStepDisabled: o,
      isStepActive: n
    }), {
      contentId: L
    } = zS(e), {
      statusText: b
    } = UU(e, {
      isStepActive: n,
      isStepBeforeActive: r
    }), {
      iconErrorWarning: v,
      titleIconErrorWarning: I
    } = $U(e);
    return {
      ariaCurrentAttributes: E,
      contentId: L,
      iconErrorWarning: v,
      isStepActive: n,
      isStepDisabled: o,
      linkClass: u,
      onClick: h,
      onKeydown: A,
      statusText: b,
      stepNumber: s,
      stepNumberText: l,
      stepStatusTextId: T,
      stepTextId: p,
      tabindex: m,
      titleIconErrorWarning: I
    };
  },
  render() {
    return c(
      "li",
      {
        class: [
          "a_wizard__step",
          {
            a_wizard__step_active: this.isStepActive
          }
        ]
      },
      [
        c(ye, {
          "aria-controls": this.contentId,
          "aria-describedby": this.stepStatusTextId,
          ariaDisabled: this.isStepDisabled,
          class: this.linkClass,
          classDefault: "",
          classDisabled: "disabled",
          role: "button",
          tabindex: this.tabindex,
          title: this.step.title,
          type: "link",
          onClick: this.onClick,
          onKeydown: this.onKeydown,
          ...this.ariaCurrentAttributes
        }, () => this.step.slotLabel && this.$slots[this.step.slotLabel] ? this.$slots[this.step.slotLabel]({
          isStepActive: this.isStepActive,
          isStepDisabled: this.isStepDisabled,
          step: this.step,
          stepIndex: this.stepIndex,
          stepNumber: this.stepNumber,
          stepTextId: this.stepTextId
        }) : [
          this.isStepNumberVisible ? c("span", {
            class: "a_wizard__step__number"
          }, [
            this.step.icon ? c(lt, {
              class: "a_wizard__step__number__icon",
              icon: this.step.icon
            }) : c(Te, {
              class: "a_wizard__step__number__text",
              tag: "span",
              text: this.stepNumberText,
              extra: {
                stepActive: this.stepNumber,
                stepsCount: this.stepsCount
              }
            })
          ]) : "",
          c("span", {
            class: "a_wizard__step__text"
          }, [
            c(Te, {
              id: this.stepTextId,
              class: "a_wizard__step__text__child",
              extra: this.extra,
              html: this.step.label,
              tag: "span"
            }),
            this.iconErrorWarning ? c(ye, {
              iconClass: "a_wizard__step__text__icon",
              iconLeft: this.iconErrorWarning,
              tag: "span",
              textScreenReader: this.titleIconErrorWarning,
              title: this.titleIconErrorWarning,
              type: "text"
            }) : ""
          ])
        ]),
        c(Te, {
          id: this.stepStatusTextId,
          class: "a_sr_only",
          tag: "span",
          text: this.statusText
        }),
        c("span", {
          class: "a_wizard__step__divider",
          ariaHidden: !0
        })
      ]
    );
  }
};
function VU(e) {
  const t = f(e, "stepIndex"), n = f(e, "stepActiveComputed");
  return {
    isStepActive: _(() => t.value === n.value)
  };
}
function WU(e) {
  const t = f(e, "id"), n = f(e, "stepIndex");
  return {
    focusId: _(() => `${t.value}_${n.value}_focus`)
  };
}
function GU(e, {
  isStepActive: t = _(() => !1)
}) {
  const n = f(e, "stepsVisitedComputed"), r = f(e, "stepIndex"), s = _(() => t.value ? "" : "display: none;");
  return {
    isStepRender: _(() => t.value || n.value[r.value]),
    styleStep: s
  };
}
const KU = {
  name: "AWizardTab",
  props: {
    extra: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    step: {
      type: Object,
      required: !0
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    stepIndex: {
      type: Number,
      required: !0
    },
    stepsVisitedComputed: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    wizardAriaDescribedby: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      isStepActive: t
    } = VU(e), {
      isStepRender: n,
      styleStep: r
    } = GU(e, {
      isStepActive: t
    }), {
      focusId: s
    } = WU(e), {
      contentId: l
    } = zS(e);
    return {
      contentId: l,
      focusId: s,
      isStepRender: n,
      styleStep: r
    };
  },
  render() {
    return c("div", {
      id: this.contentId
    }, [
      this.isStepRender && c("div", {
        class: "a_wizard__tab_pane",
        style: this.styleStep
      }, [
        c("div", {
          id: this.focusId,
          class: "a_sr_only",
          tabindex: "-1",
          "aria-describedby": this.wizardAriaDescribedby
        }),
        this.$slots[this.step.slot] && this.$slots[this.step.slot]({
          step: this.step,
          stepIndex: this.stepIndex
        })
      ])
    ]);
  }
};
function jU(e, {
  isStepActiveFirst: t = _(() => !1),
  isStepActiveLast: n = _(() => !1)
}) {
  const r = f(e, "isBackButtonDisabled"), s = f(e, "isForwardButtonDisabled"), l = _(() => t.value ? !0 : r.value), o = _(() => n.value ? !0 : s.value);
  return {
    isBackButtonDisabledLocal: l,
    isForwardButtonDisabledLocal: o
  };
}
function zU(e, { emit: t }) {
  return {
    goOneStepBack: () => {
      t("goOneStepBack");
    },
    goOneStepForward: () => {
      t("goOneStepForward");
    }
  };
}
function YU(e) {
  const t = f(e, "steps"), n = f(e, "stepActiveComputed"), r = _(() => n.value === 0), s = _(() => n.value === t.value.length - 1);
  return {
    isStepActiveFirst: r,
    isStepActiveLast: s
  };
}
function XU(e, {
  isStepActiveFirst: t = _(() => !1),
  isStepActiveLast: n = _(() => !1)
}) {
  const r = f(e, "isForwardButtonHide"), s = f(e, "isBackButtonHide"), l = f(e, "isForwardLastButtonHide"), o = f(e, "isBackFirstButtonHide"), u = _(() => s.value ? !0 : t.value && o.value), h = _(() => r.value ? !0 : n.value && l.value);
  return {
    isBackButtonHideLocal: u,
    isForwardButtonHideLocal: h
  };
}
const ZU = {
  name: "AWizardToolbar",
  props: {
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    steps: {
      type: Array,
      required: !0
    }
  },
  emits: [
    "goOneStepBack",
    "goOneStepForward"
  ],
  setup(e, t) {
    const {
      isStepActiveFirst: n,
      isStepActiveLast: r
    } = YU(e), {
      isBackButtonDisabledLocal: s,
      isForwardButtonDisabledLocal: l
    } = jU(e, {
      isStepActiveFirst: n,
      isStepActiveLast: r
    }), {
      isBackButtonHideLocal: o,
      isForwardButtonHideLocal: u
    } = XU(e, {
      isStepActiveFirst: n,
      isStepActiveLast: r
    }), {
      goOneStepBack: h,
      goOneStepForward: A
    } = zU(e, t);
    return {
      goOneStepBack: h,
      goOneStepForward: A,
      isBackButtonDisabledLocal: s,
      isBackButtonHideLocal: o,
      isForwardButtonDisabledLocal: l,
      isForwardButtonHideLocal: u
    };
  },
  render() {
    return c(
      "div",
      {
        class: "a_wizard__toolbar"
      },
      [
        !this.isBackButtonHideLocal && c(ye, {
          class: this.backButtonClass,
          disabled: this.isBackButtonDisabledLocal,
          extra: this.extra,
          iconLeft: this.backButtonIconLeft,
          iconRight: this.backButtonIconRight,
          loading: this.isButtonsLoading,
          text: this.backButtonText,
          textAriaHidden: !0,
          textScreenReader: this.backButtonTitle,
          title: this.backButtonTitle,
          type: "button",
          onClick: this.goOneStepBack,
          ...this.backButtonAttributes
        }),
        !this.isForwardButtonHideLocal && c(ye, {
          class: this.forwardButtonClass,
          disabled: this.isForwardButtonDisabledLocal,
          extra: this.extra,
          iconLeft: this.forwardButtonIconLeft,
          iconRight: this.forwardButtonIconRight,
          loading: this.isButtonsLoading,
          text: this.forwardButtonText,
          textAriaHidden: !0,
          textScreenReader: this.forwardButtonTitle,
          title: this.forwardButtonTitle,
          type: "button",
          onClick: this.goOneStepForward,
          ...this.forwardButtonAttributes
        }),
        this.$slots.toolbar && this.$slots.toolbar()
      ]
    );
  }
};
function JU(e, {
  stepActiveComputed: t = _(() => 0)
}) {
  const n = f(e, "ariaLabel"), r = f(e, "ariaLabelSteps"), s = f(e, "extra"), l = f(e, "id"), {
    getTranslationAttributes: o,
    getTranslatedText: u,
    isPlaceholderTranslate: h
  } = Ms(), A = _(() => h(n.value)), E = _(() => h(r.value)), p = _(() => {
    if (A.value)
      return u({
        placeholder: n.value,
        extra: s.value
      });
  }), T = _(() => {
    if (E.value)
      return u({
        placeholder: r.value,
        extra: s.value
      });
  }), m = _(() => o({
    attr: "aria-label",
    value: n.value,
    translation: p.value,
    isTranslate: A.value
  })), L = _(() => o({
    attr: "aria-label",
    value: r.value,
    translation: T.value,
    isTranslate: E.value
  })), b = _(() => `${l.value}_progressbar`), v = _(() => `${l.value}_step_text_${t.value}`), I = _(() => `${b.value} ${v.value}`);
  return {
    ariaLabelAttributes: m,
    ariaLabelStepsAttributes: L,
    idProgressbar: b,
    wizardAriaDescribedby: I
  };
}
var Ji = { exports: {} };
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
var QU = Ji.exports, tp;
function eH() {
  return tp || (tp = 1, function(e, t) {
    (function() {
      var n, r = "4.17.21", s = 200, l = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", o = "Expected a function", u = "Invalid `variable` option passed into `_.template`", h = "__lodash_hash_undefined__", A = 500, E = "__lodash_placeholder__", p = 1, T = 2, m = 4, L = 1, b = 2, v = 1, I = 2, y = 4, R = 8, D = 16, w = 32, M = 64, P = 128, x = 256, C = 512, q = 30, W = "...", z = 800, oe = 16, te = 1, ue = 2, re = 3, ie = 1 / 0, Ae = 9007199254740991, we = 17976931348623157e292, me = NaN, ae = 4294967295, Oe = ae - 1, ve = ae >>> 1, Ke = [
        ["ary", P],
        ["bind", v],
        ["bindKey", I],
        ["curry", R],
        ["curryRight", D],
        ["flip", C],
        ["partial", w],
        ["partialRight", M],
        ["rearg", x]
      ], he = "[object Arguments]", k = "[object Array]", G = "[object AsyncFunction]", ee = "[object Boolean]", de = "[object Date]", Ne = "[object DOMException]", Fe = "[object Error]", Ue = "[object Function]", Xe = "[object GeneratorFunction]", Ie = "[object Map]", Ge = "[object Number]", ft = "[object Null]", qe = "[object Object]", at = "[object Promise]", _t = "[object Proxy]", bt = "[object RegExp]", It = "[object Set]", ur = "[object String]", kn = "[object Symbol]", _r = "[object Undefined]", Jt = "[object WeakMap]", Un = "[object WeakSet]", Hn = "[object ArrayBuffer]", In = "[object DataView]", Or = "[object Float32Array]", dr = "[object Float64Array]", Cr = "[object Int8Array]", Vn = "[object Int16Array]", Wn = "[object Int32Array]", Gt = "[object Uint8Array]", En = "[object Uint8ClampedArray]", cr = "[object Uint16Array]", fr = "[object Uint32Array]", us = /\b__p \+= '';/g, Nr = /\b(__p \+=) '' \+/g, Gn = /(__e\(.*?\)|\b__t\)) \+\n'';/g, fa = /&(?:amp|lt|gt|quot|#39);/g, gn = /[&<>"']/g, _s = RegExp(fa.source), ds = RegExp(gn.source), mt = /<%-([\s\S]+?)%>/g, Kn = /<%([\s\S]+?)%>/g, Kr = /<%=([\s\S]+?)%>/g, ha = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, jr = /^\w*$/, Aa = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, Dr = /[\\^$.*+?()[\]{}|]/g, Ii = RegExp(Dr.source), Qt = /^\s+/, Ea = /\s/, ks = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, Us = /\{\n\/\* \[wrapped with (.+)\] \*/, hr = /,? & /, cs = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, ln = /[()=,{}\[\]\/\s]/, Hs = /\\(\\)?/g, Dl = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, gi = /\w*$/, Bl = /^[-+]0x[0-9a-f]+$/i, qu = /^0b[01]+$/i, Re = /^\[object .+?Constructor\]$/, U = /^0o[0-7]+$/i, se = /^(?:0|[1-9]\d*)$/, Le = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, dt = /($^)/, Ut = /['\n\r\u2028\u2029\\]/g, gt = "\\ud800-\\udfff", en = "\\u0300-\\u036f", jn = "\\ufe20-\\ufe2f", fs = "\\u20d0-\\u20ff", Ht = en + jn + fs, yi = "\\u2700-\\u27bf", Ri = "a-z\\xdf-\\xf6\\xf8-\\xff", Em = "\\xac\\xb1\\xd7\\xf7", pm = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", Tm = "\\u2000-\\u206f", Sm = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", df = "A-Z\\xc0-\\xd6\\xd8-\\xde", cf = "\\ufe0e\\ufe0f", ff = Em + pm + Tm + Sm, ku = "['’]", mm = "[" + gt + "]", hf = "[" + ff + "]", wl = "[" + Ht + "]", Af = "\\d+", Lm = "[" + yi + "]", Ef = "[" + Ri + "]", pf = "[^" + gt + ff + Af + yi + Ri + df + "]", Uu = "\\ud83c[\\udffb-\\udfff]", bm = "(?:" + wl + "|" + Uu + ")", Tf = "[^" + gt + "]", Hu = "(?:\\ud83c[\\udde6-\\uddff]){2}", Vu = "[\\ud800-\\udbff][\\udc00-\\udfff]", Vs = "[" + df + "]", Sf = "\\u200d", mf = "(?:" + Ef + "|" + pf + ")", vm = "(?:" + Vs + "|" + pf + ")", Lf = "(?:" + ku + "(?:d|ll|m|re|s|t|ve))?", bf = "(?:" + ku + "(?:D|LL|M|RE|S|T|VE))?", vf = bm + "?", If = "[" + cf + "]?", Im = "(?:" + Sf + "(?:" + [Tf, Hu, Vu].join("|") + ")" + If + vf + ")*", gm = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", ym = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", gf = If + vf + Im, Rm = "(?:" + [Lm, Hu, Vu].join("|") + ")" + gf, Om = "(?:" + [Tf + wl + "?", wl, Hu, Vu, mm].join("|") + ")", Cm = RegExp(ku, "g"), Nm = RegExp(wl, "g"), Wu = RegExp(Uu + "(?=" + Uu + ")|" + Om + gf, "g"), Dm = RegExp([
        Vs + "?" + Ef + "+" + Lf + "(?=" + [hf, Vs, "$"].join("|") + ")",
        vm + "+" + bf + "(?=" + [hf, Vs + mf, "$"].join("|") + ")",
        Vs + "?" + mf + "+" + Lf,
        Vs + "+" + bf,
        ym,
        gm,
        Af,
        Rm
      ].join("|"), "g"), Bm = RegExp("[" + Sf + gt + Ht + cf + "]"), wm = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, Pm = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
      ], Fm = -1, pt = {};
      pt[Or] = pt[dr] = pt[Cr] = pt[Vn] = pt[Wn] = pt[Gt] = pt[En] = pt[cr] = pt[fr] = !0, pt[he] = pt[k] = pt[Hn] = pt[ee] = pt[In] = pt[de] = pt[Fe] = pt[Ue] = pt[Ie] = pt[Ge] = pt[qe] = pt[bt] = pt[It] = pt[ur] = pt[Jt] = !1;
      var At = {};
      At[he] = At[k] = At[Hn] = At[In] = At[ee] = At[de] = At[Or] = At[dr] = At[Cr] = At[Vn] = At[Wn] = At[Ie] = At[Ge] = At[qe] = At[bt] = At[It] = At[ur] = At[kn] = At[Gt] = At[En] = At[cr] = At[fr] = !0, At[Fe] = At[Ue] = At[Jt] = !1;
      var xm = {
        // Latin-1 Supplement block.
        À: "A",
        Á: "A",
        Â: "A",
        Ã: "A",
        Ä: "A",
        Å: "A",
        à: "a",
        á: "a",
        â: "a",
        ã: "a",
        ä: "a",
        å: "a",
        Ç: "C",
        ç: "c",
        Ð: "D",
        ð: "d",
        È: "E",
        É: "E",
        Ê: "E",
        Ë: "E",
        è: "e",
        é: "e",
        ê: "e",
        ë: "e",
        Ì: "I",
        Í: "I",
        Î: "I",
        Ï: "I",
        ì: "i",
        í: "i",
        î: "i",
        ï: "i",
        Ñ: "N",
        ñ: "n",
        Ò: "O",
        Ó: "O",
        Ô: "O",
        Õ: "O",
        Ö: "O",
        Ø: "O",
        ò: "o",
        ó: "o",
        ô: "o",
        õ: "o",
        ö: "o",
        ø: "o",
        Ù: "U",
        Ú: "U",
        Û: "U",
        Ü: "U",
        ù: "u",
        ú: "u",
        û: "u",
        ü: "u",
        Ý: "Y",
        ý: "y",
        ÿ: "y",
        Æ: "Ae",
        æ: "ae",
        Þ: "Th",
        þ: "th",
        ß: "ss",
        // Latin Extended-A block.
        Ā: "A",
        Ă: "A",
        Ą: "A",
        ā: "a",
        ă: "a",
        ą: "a",
        Ć: "C",
        Ĉ: "C",
        Ċ: "C",
        Č: "C",
        ć: "c",
        ĉ: "c",
        ċ: "c",
        č: "c",
        Ď: "D",
        Đ: "D",
        ď: "d",
        đ: "d",
        Ē: "E",
        Ĕ: "E",
        Ė: "E",
        Ę: "E",
        Ě: "E",
        ē: "e",
        ĕ: "e",
        ė: "e",
        ę: "e",
        ě: "e",
        Ĝ: "G",
        Ğ: "G",
        Ġ: "G",
        Ģ: "G",
        ĝ: "g",
        ğ: "g",
        ġ: "g",
        ģ: "g",
        Ĥ: "H",
        Ħ: "H",
        ĥ: "h",
        ħ: "h",
        Ĩ: "I",
        Ī: "I",
        Ĭ: "I",
        Į: "I",
        İ: "I",
        ĩ: "i",
        ī: "i",
        ĭ: "i",
        į: "i",
        ı: "i",
        Ĵ: "J",
        ĵ: "j",
        Ķ: "K",
        ķ: "k",
        ĸ: "k",
        Ĺ: "L",
        Ļ: "L",
        Ľ: "L",
        Ŀ: "L",
        Ł: "L",
        ĺ: "l",
        ļ: "l",
        ľ: "l",
        ŀ: "l",
        ł: "l",
        Ń: "N",
        Ņ: "N",
        Ň: "N",
        Ŋ: "N",
        ń: "n",
        ņ: "n",
        ň: "n",
        ŋ: "n",
        Ō: "O",
        Ŏ: "O",
        Ő: "O",
        ō: "o",
        ŏ: "o",
        ő: "o",
        Ŕ: "R",
        Ŗ: "R",
        Ř: "R",
        ŕ: "r",
        ŗ: "r",
        ř: "r",
        Ś: "S",
        Ŝ: "S",
        Ş: "S",
        Š: "S",
        ś: "s",
        ŝ: "s",
        ş: "s",
        š: "s",
        Ţ: "T",
        Ť: "T",
        Ŧ: "T",
        ţ: "t",
        ť: "t",
        ŧ: "t",
        Ũ: "U",
        Ū: "U",
        Ŭ: "U",
        Ů: "U",
        Ű: "U",
        Ų: "U",
        ũ: "u",
        ū: "u",
        ŭ: "u",
        ů: "u",
        ű: "u",
        ų: "u",
        Ŵ: "W",
        ŵ: "w",
        Ŷ: "Y",
        ŷ: "y",
        Ÿ: "Y",
        Ź: "Z",
        Ż: "Z",
        Ž: "Z",
        ź: "z",
        ż: "z",
        ž: "z",
        Ĳ: "IJ",
        ĳ: "ij",
        Œ: "Oe",
        œ: "oe",
        ŉ: "'n",
        ſ: "s"
      }, Mm = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      }, $m = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      }, qm = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
      }, km = parseFloat, Um = parseInt, yf = typeof vo == "object" && vo && vo.Object === Object && vo, Hm = typeof self == "object" && self && self.Object === Object && self, Kt = yf || Hm || Function("return this")(), Gu = t && !t.nodeType && t, hs = Gu && !0 && e && !e.nodeType && e, Rf = hs && hs.exports === Gu, Ku = Rf && yf.process, zn = function() {
        try {
          var H = hs && hs.require && hs.require("util").types;
          return H || Ku && Ku.binding && Ku.binding("util");
        } catch {
        }
      }(), Of = zn && zn.isArrayBuffer, Cf = zn && zn.isDate, Nf = zn && zn.isMap, Df = zn && zn.isRegExp, Bf = zn && zn.isSet, wf = zn && zn.isTypedArray;
      function yn(H, X, K) {
        switch (K.length) {
          case 0:
            return H.call(X);
          case 1:
            return H.call(X, K[0]);
          case 2:
            return H.call(X, K[0], K[1]);
          case 3:
            return H.call(X, K[0], K[1], K[2]);
        }
        return H.apply(X, K);
      }
      function Vm(H, X, K, Ee) {
        for (var xe = -1, it = H == null ? 0 : H.length; ++xe < it; ) {
          var Mt = H[xe];
          X(Ee, Mt, K(Mt), H);
        }
        return Ee;
      }
      function Yn(H, X) {
        for (var K = -1, Ee = H == null ? 0 : H.length; ++K < Ee && X(H[K], K, H) !== !1; )
          ;
        return H;
      }
      function Wm(H, X) {
        for (var K = H == null ? 0 : H.length; K-- && X(H[K], K, H) !== !1; )
          ;
        return H;
      }
      function Pf(H, X) {
        for (var K = -1, Ee = H == null ? 0 : H.length; ++K < Ee; )
          if (!X(H[K], K, H))
            return !1;
        return !0;
      }
      function pa(H, X) {
        for (var K = -1, Ee = H == null ? 0 : H.length, xe = 0, it = []; ++K < Ee; ) {
          var Mt = H[K];
          X(Mt, K, H) && (it[xe++] = Mt);
        }
        return it;
      }
      function Pl(H, X) {
        var K = H == null ? 0 : H.length;
        return !!K && Ws(H, X, 0) > -1;
      }
      function ju(H, X, K) {
        for (var Ee = -1, xe = H == null ? 0 : H.length; ++Ee < xe; )
          if (K(X, H[Ee]))
            return !0;
        return !1;
      }
      function Lt(H, X) {
        for (var K = -1, Ee = H == null ? 0 : H.length, xe = Array(Ee); ++K < Ee; )
          xe[K] = X(H[K], K, H);
        return xe;
      }
      function Ta(H, X) {
        for (var K = -1, Ee = X.length, xe = H.length; ++K < Ee; )
          H[xe + K] = X[K];
        return H;
      }
      function zu(H, X, K, Ee) {
        var xe = -1, it = H == null ? 0 : H.length;
        for (Ee && it && (K = H[++xe]); ++xe < it; )
          K = X(K, H[xe], xe, H);
        return K;
      }
      function Gm(H, X, K, Ee) {
        var xe = H == null ? 0 : H.length;
        for (Ee && xe && (K = H[--xe]); xe--; )
          K = X(K, H[xe], xe, H);
        return K;
      }
      function Yu(H, X) {
        for (var K = -1, Ee = H == null ? 0 : H.length; ++K < Ee; )
          if (X(H[K], K, H))
            return !0;
        return !1;
      }
      var Km = Xu("length");
      function jm(H) {
        return H.split("");
      }
      function zm(H) {
        return H.match(cs) || [];
      }
      function Ff(H, X, K) {
        var Ee;
        return K(H, function(xe, it, Mt) {
          if (X(xe, it, Mt))
            return Ee = it, !1;
        }), Ee;
      }
      function Fl(H, X, K, Ee) {
        for (var xe = H.length, it = K + (Ee ? 1 : -1); Ee ? it-- : ++it < xe; )
          if (X(H[it], it, H))
            return it;
        return -1;
      }
      function Ws(H, X, K) {
        return X === X ? iL(H, X, K) : Fl(H, xf, K);
      }
      function Ym(H, X, K, Ee) {
        for (var xe = K - 1, it = H.length; ++xe < it; )
          if (Ee(H[xe], X))
            return xe;
        return -1;
      }
      function xf(H) {
        return H !== H;
      }
      function Mf(H, X) {
        var K = H == null ? 0 : H.length;
        return K ? Ju(H, X) / K : me;
      }
      function Xu(H) {
        return function(X) {
          return X == null ? n : X[H];
        };
      }
      function Zu(H) {
        return function(X) {
          return H == null ? n : H[X];
        };
      }
      function $f(H, X, K, Ee, xe) {
        return xe(H, function(it, Mt, ht) {
          K = Ee ? (Ee = !1, it) : X(K, it, Mt, ht);
        }), K;
      }
      function Xm(H, X) {
        var K = H.length;
        for (H.sort(X); K--; )
          H[K] = H[K].value;
        return H;
      }
      function Ju(H, X) {
        for (var K, Ee = -1, xe = H.length; ++Ee < xe; ) {
          var it = X(H[Ee]);
          it !== n && (K = K === n ? it : K + it);
        }
        return K;
      }
      function Qu(H, X) {
        for (var K = -1, Ee = Array(H); ++K < H; )
          Ee[K] = X(K);
        return Ee;
      }
      function Zm(H, X) {
        return Lt(X, function(K) {
          return [K, H[K]];
        });
      }
      function qf(H) {
        return H && H.slice(0, Vf(H) + 1).replace(Qt, "");
      }
      function Rn(H) {
        return function(X) {
          return H(X);
        };
      }
      function e_(H, X) {
        return Lt(X, function(K) {
          return H[K];
        });
      }
      function Oi(H, X) {
        return H.has(X);
      }
      function kf(H, X) {
        for (var K = -1, Ee = H.length; ++K < Ee && Ws(X, H[K], 0) > -1; )
          ;
        return K;
      }
      function Uf(H, X) {
        for (var K = H.length; K-- && Ws(X, H[K], 0) > -1; )
          ;
        return K;
      }
      function Jm(H, X) {
        for (var K = H.length, Ee = 0; K--; )
          H[K] === X && ++Ee;
        return Ee;
      }
      var Qm = Zu(xm), eL = Zu(Mm);
      function tL(H) {
        return "\\" + qm[H];
      }
      function nL(H, X) {
        return H == null ? n : H[X];
      }
      function Gs(H) {
        return Bm.test(H);
      }
      function rL(H) {
        return wm.test(H);
      }
      function aL(H) {
        for (var X, K = []; !(X = H.next()).done; )
          K.push(X.value);
        return K;
      }
      function t_(H) {
        var X = -1, K = Array(H.size);
        return H.forEach(function(Ee, xe) {
          K[++X] = [xe, Ee];
        }), K;
      }
      function Hf(H, X) {
        return function(K) {
          return H(X(K));
        };
      }
      function Sa(H, X) {
        for (var K = -1, Ee = H.length, xe = 0, it = []; ++K < Ee; ) {
          var Mt = H[K];
          (Mt === X || Mt === E) && (H[K] = E, it[xe++] = K);
        }
        return it;
      }
      function xl(H) {
        var X = -1, K = Array(H.size);
        return H.forEach(function(Ee) {
          K[++X] = Ee;
        }), K;
      }
      function sL(H) {
        var X = -1, K = Array(H.size);
        return H.forEach(function(Ee) {
          K[++X] = [Ee, Ee];
        }), K;
      }
      function iL(H, X, K) {
        for (var Ee = K - 1, xe = H.length; ++Ee < xe; )
          if (H[Ee] === X)
            return Ee;
        return -1;
      }
      function lL(H, X, K) {
        for (var Ee = K + 1; Ee--; )
          if (H[Ee] === X)
            return Ee;
        return Ee;
      }
      function Ks(H) {
        return Gs(H) ? uL(H) : Km(H);
      }
      function Ar(H) {
        return Gs(H) ? _L(H) : jm(H);
      }
      function Vf(H) {
        for (var X = H.length; X-- && Ea.test(H.charAt(X)); )
          ;
        return X;
      }
      var oL = Zu($m);
      function uL(H) {
        for (var X = Wu.lastIndex = 0; Wu.test(H); )
          ++X;
        return X;
      }
      function _L(H) {
        return H.match(Wu) || [];
      }
      function dL(H) {
        return H.match(Dm) || [];
      }
      var cL = function H(X) {
        X = X == null ? Kt : js.defaults(Kt.Object(), X, js.pick(Kt, Pm));
        var K = X.Array, Ee = X.Date, xe = X.Error, it = X.Function, Mt = X.Math, ht = X.Object, n_ = X.RegExp, fL = X.String, Xn = X.TypeError, Ml = K.prototype, hL = it.prototype, zs = ht.prototype, $l = X["__core-js_shared__"], ql = hL.toString, ct = zs.hasOwnProperty, AL = 0, Wf = function() {
          var a = /[^.]+$/.exec($l && $l.keys && $l.keys.IE_PROTO || "");
          return a ? "Symbol(src)_1." + a : "";
        }(), kl = zs.toString, EL = ql.call(ht), pL = Kt._, TL = n_(
          "^" + ql.call(ct).replace(Dr, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
        ), Ul = Rf ? X.Buffer : n, ma = X.Symbol, Hl = X.Uint8Array, Gf = Ul ? Ul.allocUnsafe : n, Vl = Hf(ht.getPrototypeOf, ht), Kf = ht.create, jf = zs.propertyIsEnumerable, Wl = Ml.splice, zf = ma ? ma.isConcatSpreadable : n, Ci = ma ? ma.iterator : n, As = ma ? ma.toStringTag : n, Gl = function() {
          try {
            var a = ms(ht, "defineProperty");
            return a({}, "", {}), a;
          } catch {
          }
        }(), SL = X.clearTimeout !== Kt.clearTimeout && X.clearTimeout, mL = Ee && Ee.now !== Kt.Date.now && Ee.now, LL = X.setTimeout !== Kt.setTimeout && X.setTimeout, Kl = Mt.ceil, jl = Mt.floor, r_ = ht.getOwnPropertySymbols, bL = Ul ? Ul.isBuffer : n, Yf = X.isFinite, vL = Ml.join, IL = Hf(ht.keys, ht), $t = Mt.max, tn = Mt.min, gL = Ee.now, yL = X.parseInt, Xf = Mt.random, RL = Ml.reverse, a_ = ms(X, "DataView"), Ni = ms(X, "Map"), s_ = ms(X, "Promise"), Ys = ms(X, "Set"), Di = ms(X, "WeakMap"), Bi = ms(ht, "create"), zl = Di && new Di(), Xs = {}, OL = Ls(a_), CL = Ls(Ni), NL = Ls(s_), DL = Ls(Ys), BL = Ls(Di), Yl = ma ? ma.prototype : n, wi = Yl ? Yl.valueOf : n, Zf = Yl ? Yl.toString : n;
        function O(a) {
          if (yt(a) && !$e(a) && !(a instanceof Ze)) {
            if (a instanceof Zn)
              return a;
            if (ct.call(a, "__wrapped__"))
              return Jh(a);
          }
          return new Zn(a);
        }
        var Zs = /* @__PURE__ */ function() {
          function a() {
          }
          return function(i) {
            if (!vt(i))
              return {};
            if (Kf)
              return Kf(i);
            a.prototype = i;
            var d = new a();
            return a.prototype = n, d;
          };
        }();
        function Xl() {
        }
        function Zn(a, i) {
          this.__wrapped__ = a, this.__actions__ = [], this.__chain__ = !!i, this.__index__ = 0, this.__values__ = n;
        }
        O.templateSettings = {
          /**
           * Used to detect `data` property values to be HTML-escaped.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          escape: mt,
          /**
           * Used to detect code to be evaluated.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          evaluate: Kn,
          /**
           * Used to detect `data` property values to inject.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          interpolate: Kr,
          /**
           * Used to reference the data object in the template text.
           *
           * @memberOf _.templateSettings
           * @type {string}
           */
          variable: "",
          /**
           * Used to import variables into the compiled template.
           *
           * @memberOf _.templateSettings
           * @type {Object}
           */
          imports: {
            /**
             * A reference to the `lodash` function.
             *
             * @memberOf _.templateSettings.imports
             * @type {Function}
             */
            _: O
          }
        }, O.prototype = Xl.prototype, O.prototype.constructor = O, Zn.prototype = Zs(Xl.prototype), Zn.prototype.constructor = Zn;
        function Ze(a) {
          this.__wrapped__ = a, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = ae, this.__views__ = [];
        }
        function wL() {
          var a = new Ze(this.__wrapped__);
          return a.__actions__ = pn(this.__actions__), a.__dir__ = this.__dir__, a.__filtered__ = this.__filtered__, a.__iteratees__ = pn(this.__iteratees__), a.__takeCount__ = this.__takeCount__, a.__views__ = pn(this.__views__), a;
        }
        function PL() {
          if (this.__filtered__) {
            var a = new Ze(this);
            a.__dir__ = -1, a.__filtered__ = !0;
          } else
            a = this.clone(), a.__dir__ *= -1;
          return a;
        }
        function FL() {
          var a = this.__wrapped__.value(), i = this.__dir__, d = $e(a), S = i < 0, g = d ? a.length : 0, N = jb(0, g, this.__views__), F = N.start, $ = N.end, V = $ - F, J = S ? $ : F - 1, Q = this.__iteratees__, ne = Q.length, ce = 0, be = tn(V, this.__takeCount__);
          if (!d || !S && g == V && be == V)
            return Lh(a, this.__actions__);
          var De = [];
          e:
            for (; V-- && ce < be; ) {
              J += i;
              for (var Ve = -1, Be = a[J]; ++Ve < ne; ) {
                var je = Q[Ve], Je = je.iteratee, Nn = je.type, _n = Je(Be);
                if (Nn == ue)
                  Be = _n;
                else if (!_n) {
                  if (Nn == te)
                    continue e;
                  break e;
                }
              }
              De[ce++] = Be;
            }
          return De;
        }
        Ze.prototype = Zs(Xl.prototype), Ze.prototype.constructor = Ze;
        function Es(a) {
          var i = -1, d = a == null ? 0 : a.length;
          for (this.clear(); ++i < d; ) {
            var S = a[i];
            this.set(S[0], S[1]);
          }
        }
        function xL() {
          this.__data__ = Bi ? Bi(null) : {}, this.size = 0;
        }
        function ML(a) {
          var i = this.has(a) && delete this.__data__[a];
          return this.size -= i ? 1 : 0, i;
        }
        function $L(a) {
          var i = this.__data__;
          if (Bi) {
            var d = i[a];
            return d === h ? n : d;
          }
          return ct.call(i, a) ? i[a] : n;
        }
        function qL(a) {
          var i = this.__data__;
          return Bi ? i[a] !== n : ct.call(i, a);
        }
        function kL(a, i) {
          var d = this.__data__;
          return this.size += this.has(a) ? 0 : 1, d[a] = Bi && i === n ? h : i, this;
        }
        Es.prototype.clear = xL, Es.prototype.delete = ML, Es.prototype.get = $L, Es.prototype.has = qL, Es.prototype.set = kL;
        function zr(a) {
          var i = -1, d = a == null ? 0 : a.length;
          for (this.clear(); ++i < d; ) {
            var S = a[i];
            this.set(S[0], S[1]);
          }
        }
        function UL() {
          this.__data__ = [], this.size = 0;
        }
        function HL(a) {
          var i = this.__data__, d = Zl(i, a);
          if (d < 0)
            return !1;
          var S = i.length - 1;
          return d == S ? i.pop() : Wl.call(i, d, 1), --this.size, !0;
        }
        function VL(a) {
          var i = this.__data__, d = Zl(i, a);
          return d < 0 ? n : i[d][1];
        }
        function WL(a) {
          return Zl(this.__data__, a) > -1;
        }
        function GL(a, i) {
          var d = this.__data__, S = Zl(d, a);
          return S < 0 ? (++this.size, d.push([a, i])) : d[S][1] = i, this;
        }
        zr.prototype.clear = UL, zr.prototype.delete = HL, zr.prototype.get = VL, zr.prototype.has = WL, zr.prototype.set = GL;
        function Yr(a) {
          var i = -1, d = a == null ? 0 : a.length;
          for (this.clear(); ++i < d; ) {
            var S = a[i];
            this.set(S[0], S[1]);
          }
        }
        function KL() {
          this.size = 0, this.__data__ = {
            hash: new Es(),
            map: new (Ni || zr)(),
            string: new Es()
          };
        }
        function jL(a) {
          var i = uo(this, a).delete(a);
          return this.size -= i ? 1 : 0, i;
        }
        function zL(a) {
          return uo(this, a).get(a);
        }
        function YL(a) {
          return uo(this, a).has(a);
        }
        function XL(a, i) {
          var d = uo(this, a), S = d.size;
          return d.set(a, i), this.size += d.size == S ? 0 : 1, this;
        }
        Yr.prototype.clear = KL, Yr.prototype.delete = jL, Yr.prototype.get = zL, Yr.prototype.has = YL, Yr.prototype.set = XL;
        function ps(a) {
          var i = -1, d = a == null ? 0 : a.length;
          for (this.__data__ = new Yr(); ++i < d; )
            this.add(a[i]);
        }
        function ZL(a) {
          return this.__data__.set(a, h), this;
        }
        function JL(a) {
          return this.__data__.has(a);
        }
        ps.prototype.add = ps.prototype.push = ZL, ps.prototype.has = JL;
        function Er(a) {
          var i = this.__data__ = new zr(a);
          this.size = i.size;
        }
        function QL() {
          this.__data__ = new zr(), this.size = 0;
        }
        function eb(a) {
          var i = this.__data__, d = i.delete(a);
          return this.size = i.size, d;
        }
        function tb(a) {
          return this.__data__.get(a);
        }
        function nb(a) {
          return this.__data__.has(a);
        }
        function rb(a, i) {
          var d = this.__data__;
          if (d instanceof zr) {
            var S = d.__data__;
            if (!Ni || S.length < s - 1)
              return S.push([a, i]), this.size = ++d.size, this;
            d = this.__data__ = new Yr(S);
          }
          return d.set(a, i), this.size = d.size, this;
        }
        Er.prototype.clear = QL, Er.prototype.delete = eb, Er.prototype.get = tb, Er.prototype.has = nb, Er.prototype.set = rb;
        function Jf(a, i) {
          var d = $e(a), S = !d && bs(a), g = !d && !S && ga(a), N = !d && !S && !g && ti(a), F = d || S || g || N, $ = F ? Qu(a.length, fL) : [], V = $.length;
          for (var J in a)
            (i || ct.call(a, J)) && !(F && // Safari 9 has enumerable `arguments.length` in strict mode.
            (J == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
            g && (J == "offset" || J == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
            N && (J == "buffer" || J == "byteLength" || J == "byteOffset") || // Skip index properties.
            Qr(J, V))) && $.push(J);
          return $;
        }
        function Qf(a) {
          var i = a.length;
          return i ? a[E_(0, i - 1)] : n;
        }
        function ab(a, i) {
          return _o(pn(a), Ts(i, 0, a.length));
        }
        function sb(a) {
          return _o(pn(a));
        }
        function i_(a, i, d) {
          (d !== n && !pr(a[i], d) || d === n && !(i in a)) && Xr(a, i, d);
        }
        function Pi(a, i, d) {
          var S = a[i];
          (!(ct.call(a, i) && pr(S, d)) || d === n && !(i in a)) && Xr(a, i, d);
        }
        function Zl(a, i) {
          for (var d = a.length; d--; )
            if (pr(a[d][0], i))
              return d;
          return -1;
        }
        function ib(a, i, d, S) {
          return La(a, function(g, N, F) {
            i(S, g, d(g), F);
          }), S;
        }
        function eh(a, i) {
          return a && wr(i, Vt(i), a);
        }
        function lb(a, i) {
          return a && wr(i, Sn(i), a);
        }
        function Xr(a, i, d) {
          i == "__proto__" && Gl ? Gl(a, i, {
            configurable: !0,
            enumerable: !0,
            value: d,
            writable: !0
          }) : a[i] = d;
        }
        function l_(a, i) {
          for (var d = -1, S = i.length, g = K(S), N = a == null; ++d < S; )
            g[d] = N ? n : U_(a, i[d]);
          return g;
        }
        function Ts(a, i, d) {
          return a === a && (d !== n && (a = a <= d ? a : d), i !== n && (a = a >= i ? a : i)), a;
        }
        function Jn(a, i, d, S, g, N) {
          var F, $ = i & p, V = i & T, J = i & m;
          if (d && (F = g ? d(a, S, g, N) : d(a)), F !== n)
            return F;
          if (!vt(a))
            return a;
          var Q = $e(a);
          if (Q) {
            if (F = Yb(a), !$)
              return pn(a, F);
          } else {
            var ne = nn(a), ce = ne == Ue || ne == Xe;
            if (ga(a))
              return Ih(a, $);
            if (ne == qe || ne == he || ce && !g) {
              if (F = V || ce ? {} : Vh(a), !$)
                return V ? $b(a, lb(F, a)) : Mb(a, eh(F, a));
            } else {
              if (!At[ne])
                return g ? a : {};
              F = Xb(a, ne, $);
            }
          }
          N || (N = new Er());
          var be = N.get(a);
          if (be)
            return be;
          N.set(a, F), TA(a) ? a.forEach(function(Be) {
            F.add(Jn(Be, i, d, Be, a, N));
          }) : EA(a) && a.forEach(function(Be, je) {
            F.set(je, Jn(Be, i, d, je, a, N));
          });
          var De = J ? V ? R_ : y_ : V ? Sn : Vt, Ve = Q ? n : De(a);
          return Yn(Ve || a, function(Be, je) {
            Ve && (je = Be, Be = a[je]), Pi(F, je, Jn(Be, i, d, je, a, N));
          }), F;
        }
        function ob(a) {
          var i = Vt(a);
          return function(d) {
            return th(d, a, i);
          };
        }
        function th(a, i, d) {
          var S = d.length;
          if (a == null)
            return !S;
          for (a = ht(a); S--; ) {
            var g = d[S], N = i[g], F = a[g];
            if (F === n && !(g in a) || !N(F))
              return !1;
          }
          return !0;
        }
        function nh(a, i, d) {
          if (typeof a != "function")
            throw new Xn(o);
          return Ui(function() {
            a.apply(n, d);
          }, i);
        }
        function Fi(a, i, d, S) {
          var g = -1, N = Pl, F = !0, $ = a.length, V = [], J = i.length;
          if (!$)
            return V;
          d && (i = Lt(i, Rn(d))), S ? (N = ju, F = !1) : i.length >= s && (N = Oi, F = !1, i = new ps(i));
          e:
            for (; ++g < $; ) {
              var Q = a[g], ne = d == null ? Q : d(Q);
              if (Q = S || Q !== 0 ? Q : 0, F && ne === ne) {
                for (var ce = J; ce--; )
                  if (i[ce] === ne)
                    continue e;
                V.push(Q);
              } else N(i, ne, S) || V.push(Q);
            }
          return V;
        }
        var La = Ch(Br), rh = Ch(u_, !0);
        function ub(a, i) {
          var d = !0;
          return La(a, function(S, g, N) {
            return d = !!i(S, g, N), d;
          }), d;
        }
        function Jl(a, i, d) {
          for (var S = -1, g = a.length; ++S < g; ) {
            var N = a[S], F = i(N);
            if (F != null && ($ === n ? F === F && !Cn(F) : d(F, $)))
              var $ = F, V = N;
          }
          return V;
        }
        function _b(a, i, d, S) {
          var g = a.length;
          for (d = He(d), d < 0 && (d = -d > g ? 0 : g + d), S = S === n || S > g ? g : He(S), S < 0 && (S += g), S = d > S ? 0 : mA(S); d < S; )
            a[d++] = i;
          return a;
        }
        function ah(a, i) {
          var d = [];
          return La(a, function(S, g, N) {
            i(S, g, N) && d.push(S);
          }), d;
        }
        function jt(a, i, d, S, g) {
          var N = -1, F = a.length;
          for (d || (d = Jb), g || (g = []); ++N < F; ) {
            var $ = a[N];
            i > 0 && d($) ? i > 1 ? jt($, i - 1, d, S, g) : Ta(g, $) : S || (g[g.length] = $);
          }
          return g;
        }
        var o_ = Nh(), sh = Nh(!0);
        function Br(a, i) {
          return a && o_(a, i, Vt);
        }
        function u_(a, i) {
          return a && sh(a, i, Vt);
        }
        function Ql(a, i) {
          return pa(i, function(d) {
            return ea(a[d]);
          });
        }
        function Ss(a, i) {
          i = va(i, a);
          for (var d = 0, S = i.length; a != null && d < S; )
            a = a[Pr(i[d++])];
          return d && d == S ? a : n;
        }
        function ih(a, i, d) {
          var S = i(a);
          return $e(a) ? S : Ta(S, d(a));
        }
        function on(a) {
          return a == null ? a === n ? _r : ft : As && As in ht(a) ? Kb(a) : sv(a);
        }
        function __(a, i) {
          return a > i;
        }
        function db(a, i) {
          return a != null && ct.call(a, i);
        }
        function cb(a, i) {
          return a != null && i in ht(a);
        }
        function fb(a, i, d) {
          return a >= tn(i, d) && a < $t(i, d);
        }
        function d_(a, i, d) {
          for (var S = d ? ju : Pl, g = a[0].length, N = a.length, F = N, $ = K(N), V = 1 / 0, J = []; F--; ) {
            var Q = a[F];
            F && i && (Q = Lt(Q, Rn(i))), V = tn(Q.length, V), $[F] = !d && (i || g >= 120 && Q.length >= 120) ? new ps(F && Q) : n;
          }
          Q = a[0];
          var ne = -1, ce = $[0];
          e:
            for (; ++ne < g && J.length < V; ) {
              var be = Q[ne], De = i ? i(be) : be;
              if (be = d || be !== 0 ? be : 0, !(ce ? Oi(ce, De) : S(J, De, d))) {
                for (F = N; --F; ) {
                  var Ve = $[F];
                  if (!(Ve ? Oi(Ve, De) : S(a[F], De, d)))
                    continue e;
                }
                ce && ce.push(De), J.push(be);
              }
            }
          return J;
        }
        function hb(a, i, d, S) {
          return Br(a, function(g, N, F) {
            i(S, d(g), N, F);
          }), S;
        }
        function xi(a, i, d) {
          i = va(i, a), a = jh(a, i);
          var S = a == null ? a : a[Pr(er(i))];
          return S == null ? n : yn(S, a, d);
        }
        function lh(a) {
          return yt(a) && on(a) == he;
        }
        function Ab(a) {
          return yt(a) && on(a) == Hn;
        }
        function Eb(a) {
          return yt(a) && on(a) == de;
        }
        function Mi(a, i, d, S, g) {
          return a === i ? !0 : a == null || i == null || !yt(a) && !yt(i) ? a !== a && i !== i : pb(a, i, d, S, Mi, g);
        }
        function pb(a, i, d, S, g, N) {
          var F = $e(a), $ = $e(i), V = F ? k : nn(a), J = $ ? k : nn(i);
          V = V == he ? qe : V, J = J == he ? qe : J;
          var Q = V == qe, ne = J == qe, ce = V == J;
          if (ce && ga(a)) {
            if (!ga(i))
              return !1;
            F = !0, Q = !1;
          }
          if (ce && !Q)
            return N || (N = new Er()), F || ti(a) ? kh(a, i, d, S, g, N) : Wb(a, i, V, d, S, g, N);
          if (!(d & L)) {
            var be = Q && ct.call(a, "__wrapped__"), De = ne && ct.call(i, "__wrapped__");
            if (be || De) {
              var Ve = be ? a.value() : a, Be = De ? i.value() : i;
              return N || (N = new Er()), g(Ve, Be, d, S, N);
            }
          }
          return ce ? (N || (N = new Er()), Gb(a, i, d, S, g, N)) : !1;
        }
        function Tb(a) {
          return yt(a) && nn(a) == Ie;
        }
        function c_(a, i, d, S) {
          var g = d.length, N = g, F = !S;
          if (a == null)
            return !N;
          for (a = ht(a); g--; ) {
            var $ = d[g];
            if (F && $[2] ? $[1] !== a[$[0]] : !($[0] in a))
              return !1;
          }
          for (; ++g < N; ) {
            $ = d[g];
            var V = $[0], J = a[V], Q = $[1];
            if (F && $[2]) {
              if (J === n && !(V in a))
                return !1;
            } else {
              var ne = new Er();
              if (S)
                var ce = S(J, Q, V, a, i, ne);
              if (!(ce === n ? Mi(Q, J, L | b, S, ne) : ce))
                return !1;
            }
          }
          return !0;
        }
        function oh(a) {
          if (!vt(a) || ev(a))
            return !1;
          var i = ea(a) ? TL : Re;
          return i.test(Ls(a));
        }
        function Sb(a) {
          return yt(a) && on(a) == bt;
        }
        function mb(a) {
          return yt(a) && nn(a) == It;
        }
        function Lb(a) {
          return yt(a) && po(a.length) && !!pt[on(a)];
        }
        function uh(a) {
          return typeof a == "function" ? a : a == null ? mn : typeof a == "object" ? $e(a) ? ch(a[0], a[1]) : dh(a) : DA(a);
        }
        function f_(a) {
          if (!ki(a))
            return IL(a);
          var i = [];
          for (var d in ht(a))
            ct.call(a, d) && d != "constructor" && i.push(d);
          return i;
        }
        function bb(a) {
          if (!vt(a))
            return av(a);
          var i = ki(a), d = [];
          for (var S in a)
            S == "constructor" && (i || !ct.call(a, S)) || d.push(S);
          return d;
        }
        function h_(a, i) {
          return a < i;
        }
        function _h(a, i) {
          var d = -1, S = Tn(a) ? K(a.length) : [];
          return La(a, function(g, N, F) {
            S[++d] = i(g, N, F);
          }), S;
        }
        function dh(a) {
          var i = C_(a);
          return i.length == 1 && i[0][2] ? Gh(i[0][0], i[0][1]) : function(d) {
            return d === a || c_(d, a, i);
          };
        }
        function ch(a, i) {
          return D_(a) && Wh(i) ? Gh(Pr(a), i) : function(d) {
            var S = U_(d, a);
            return S === n && S === i ? H_(d, a) : Mi(i, S, L | b);
          };
        }
        function eo(a, i, d, S, g) {
          a !== i && o_(i, function(N, F) {
            if (g || (g = new Er()), vt(N))
              vb(a, i, F, d, eo, S, g);
            else {
              var $ = S ? S(w_(a, F), N, F + "", a, i, g) : n;
              $ === n && ($ = N), i_(a, F, $);
            }
          }, Sn);
        }
        function vb(a, i, d, S, g, N, F) {
          var $ = w_(a, d), V = w_(i, d), J = F.get(V);
          if (J) {
            i_(a, d, J);
            return;
          }
          var Q = N ? N($, V, d + "", a, i, F) : n, ne = Q === n;
          if (ne) {
            var ce = $e(V), be = !ce && ga(V), De = !ce && !be && ti(V);
            Q = V, ce || be || De ? $e($) ? Q = $ : Dt($) ? Q = pn($) : be ? (ne = !1, Q = Ih(V, !0)) : De ? (ne = !1, Q = gh(V, !0)) : Q = [] : Hi(V) || bs(V) ? (Q = $, bs($) ? Q = LA($) : (!vt($) || ea($)) && (Q = Vh(V))) : ne = !1;
          }
          ne && (F.set(V, Q), g(Q, V, S, N, F), F.delete(V)), i_(a, d, Q);
        }
        function fh(a, i) {
          var d = a.length;
          if (d)
            return i += i < 0 ? d : 0, Qr(i, d) ? a[i] : n;
        }
        function hh(a, i, d) {
          i.length ? i = Lt(i, function(N) {
            return $e(N) ? function(F) {
              return Ss(F, N.length === 1 ? N[0] : N);
            } : N;
          }) : i = [mn];
          var S = -1;
          i = Lt(i, Rn(Ce()));
          var g = _h(a, function(N, F, $) {
            var V = Lt(i, function(J) {
              return J(N);
            });
            return { criteria: V, index: ++S, value: N };
          });
          return Xm(g, function(N, F) {
            return xb(N, F, d);
          });
        }
        function Ib(a, i) {
          return Ah(a, i, function(d, S) {
            return H_(a, S);
          });
        }
        function Ah(a, i, d) {
          for (var S = -1, g = i.length, N = {}; ++S < g; ) {
            var F = i[S], $ = Ss(a, F);
            d($, F) && $i(N, va(F, a), $);
          }
          return N;
        }
        function gb(a) {
          return function(i) {
            return Ss(i, a);
          };
        }
        function A_(a, i, d, S) {
          var g = S ? Ym : Ws, N = -1, F = i.length, $ = a;
          for (a === i && (i = pn(i)), d && ($ = Lt(a, Rn(d))); ++N < F; )
            for (var V = 0, J = i[N], Q = d ? d(J) : J; (V = g($, Q, V, S)) > -1; )
              $ !== a && Wl.call($, V, 1), Wl.call(a, V, 1);
          return a;
        }
        function Eh(a, i) {
          for (var d = a ? i.length : 0, S = d - 1; d--; ) {
            var g = i[d];
            if (d == S || g !== N) {
              var N = g;
              Qr(g) ? Wl.call(a, g, 1) : S_(a, g);
            }
          }
          return a;
        }
        function E_(a, i) {
          return a + jl(Xf() * (i - a + 1));
        }
        function yb(a, i, d, S) {
          for (var g = -1, N = $t(Kl((i - a) / (d || 1)), 0), F = K(N); N--; )
            F[S ? N : ++g] = a, a += d;
          return F;
        }
        function p_(a, i) {
          var d = "";
          if (!a || i < 1 || i > Ae)
            return d;
          do
            i % 2 && (d += a), i = jl(i / 2), i && (a += a);
          while (i);
          return d;
        }
        function We(a, i) {
          return P_(Kh(a, i, mn), a + "");
        }
        function Rb(a) {
          return Qf(ni(a));
        }
        function Ob(a, i) {
          var d = ni(a);
          return _o(d, Ts(i, 0, d.length));
        }
        function $i(a, i, d, S) {
          if (!vt(a))
            return a;
          i = va(i, a);
          for (var g = -1, N = i.length, F = N - 1, $ = a; $ != null && ++g < N; ) {
            var V = Pr(i[g]), J = d;
            if (V === "__proto__" || V === "constructor" || V === "prototype")
              return a;
            if (g != F) {
              var Q = $[V];
              J = S ? S(Q, V, $) : n, J === n && (J = vt(Q) ? Q : Qr(i[g + 1]) ? [] : {});
            }
            Pi($, V, J), $ = $[V];
          }
          return a;
        }
        var ph = zl ? function(a, i) {
          return zl.set(a, i), a;
        } : mn, Cb = Gl ? function(a, i) {
          return Gl(a, "toString", {
            configurable: !0,
            enumerable: !1,
            value: W_(i),
            writable: !0
          });
        } : mn;
        function Nb(a) {
          return _o(ni(a));
        }
        function Qn(a, i, d) {
          var S = -1, g = a.length;
          i < 0 && (i = -i > g ? 0 : g + i), d = d > g ? g : d, d < 0 && (d += g), g = i > d ? 0 : d - i >>> 0, i >>>= 0;
          for (var N = K(g); ++S < g; )
            N[S] = a[S + i];
          return N;
        }
        function Db(a, i) {
          var d;
          return La(a, function(S, g, N) {
            return d = i(S, g, N), !d;
          }), !!d;
        }
        function to(a, i, d) {
          var S = 0, g = a == null ? S : a.length;
          if (typeof i == "number" && i === i && g <= ve) {
            for (; S < g; ) {
              var N = S + g >>> 1, F = a[N];
              F !== null && !Cn(F) && (d ? F <= i : F < i) ? S = N + 1 : g = N;
            }
            return g;
          }
          return T_(a, i, mn, d);
        }
        function T_(a, i, d, S) {
          var g = 0, N = a == null ? 0 : a.length;
          if (N === 0)
            return 0;
          i = d(i);
          for (var F = i !== i, $ = i === null, V = Cn(i), J = i === n; g < N; ) {
            var Q = jl((g + N) / 2), ne = d(a[Q]), ce = ne !== n, be = ne === null, De = ne === ne, Ve = Cn(ne);
            if (F)
              var Be = S || De;
            else J ? Be = De && (S || ce) : $ ? Be = De && ce && (S || !be) : V ? Be = De && ce && !be && (S || !Ve) : be || Ve ? Be = !1 : Be = S ? ne <= i : ne < i;
            Be ? g = Q + 1 : N = Q;
          }
          return tn(N, Oe);
        }
        function Th(a, i) {
          for (var d = -1, S = a.length, g = 0, N = []; ++d < S; ) {
            var F = a[d], $ = i ? i(F) : F;
            if (!d || !pr($, V)) {
              var V = $;
              N[g++] = F === 0 ? 0 : F;
            }
          }
          return N;
        }
        function Sh(a) {
          return typeof a == "number" ? a : Cn(a) ? me : +a;
        }
        function On(a) {
          if (typeof a == "string")
            return a;
          if ($e(a))
            return Lt(a, On) + "";
          if (Cn(a))
            return Zf ? Zf.call(a) : "";
          var i = a + "";
          return i == "0" && 1 / a == -1 / 0 ? "-0" : i;
        }
        function ba(a, i, d) {
          var S = -1, g = Pl, N = a.length, F = !0, $ = [], V = $;
          if (d)
            F = !1, g = ju;
          else if (N >= s) {
            var J = i ? null : Hb(a);
            if (J)
              return xl(J);
            F = !1, g = Oi, V = new ps();
          } else
            V = i ? [] : $;
          e:
            for (; ++S < N; ) {
              var Q = a[S], ne = i ? i(Q) : Q;
              if (Q = d || Q !== 0 ? Q : 0, F && ne === ne) {
                for (var ce = V.length; ce--; )
                  if (V[ce] === ne)
                    continue e;
                i && V.push(ne), $.push(Q);
              } else g(V, ne, d) || (V !== $ && V.push(ne), $.push(Q));
            }
          return $;
        }
        function S_(a, i) {
          return i = va(i, a), a = jh(a, i), a == null || delete a[Pr(er(i))];
        }
        function mh(a, i, d, S) {
          return $i(a, i, d(Ss(a, i)), S);
        }
        function no(a, i, d, S) {
          for (var g = a.length, N = S ? g : -1; (S ? N-- : ++N < g) && i(a[N], N, a); )
            ;
          return d ? Qn(a, S ? 0 : N, S ? N + 1 : g) : Qn(a, S ? N + 1 : 0, S ? g : N);
        }
        function Lh(a, i) {
          var d = a;
          return d instanceof Ze && (d = d.value()), zu(i, function(S, g) {
            return g.func.apply(g.thisArg, Ta([S], g.args));
          }, d);
        }
        function m_(a, i, d) {
          var S = a.length;
          if (S < 2)
            return S ? ba(a[0]) : [];
          for (var g = -1, N = K(S); ++g < S; )
            for (var F = a[g], $ = -1; ++$ < S; )
              $ != g && (N[g] = Fi(N[g] || F, a[$], i, d));
          return ba(jt(N, 1), i, d);
        }
        function bh(a, i, d) {
          for (var S = -1, g = a.length, N = i.length, F = {}; ++S < g; ) {
            var $ = S < N ? i[S] : n;
            d(F, a[S], $);
          }
          return F;
        }
        function L_(a) {
          return Dt(a) ? a : [];
        }
        function b_(a) {
          return typeof a == "function" ? a : mn;
        }
        function va(a, i) {
          return $e(a) ? a : D_(a, i) ? [a] : Zh(ut(a));
        }
        var Bb = We;
        function Ia(a, i, d) {
          var S = a.length;
          return d = d === n ? S : d, !i && d >= S ? a : Qn(a, i, d);
        }
        var vh = SL || function(a) {
          return Kt.clearTimeout(a);
        };
        function Ih(a, i) {
          if (i)
            return a.slice();
          var d = a.length, S = Gf ? Gf(d) : new a.constructor(d);
          return a.copy(S), S;
        }
        function v_(a) {
          var i = new a.constructor(a.byteLength);
          return new Hl(i).set(new Hl(a)), i;
        }
        function wb(a, i) {
          var d = i ? v_(a.buffer) : a.buffer;
          return new a.constructor(d, a.byteOffset, a.byteLength);
        }
        function Pb(a) {
          var i = new a.constructor(a.source, gi.exec(a));
          return i.lastIndex = a.lastIndex, i;
        }
        function Fb(a) {
          return wi ? ht(wi.call(a)) : {};
        }
        function gh(a, i) {
          var d = i ? v_(a.buffer) : a.buffer;
          return new a.constructor(d, a.byteOffset, a.length);
        }
        function yh(a, i) {
          if (a !== i) {
            var d = a !== n, S = a === null, g = a === a, N = Cn(a), F = i !== n, $ = i === null, V = i === i, J = Cn(i);
            if (!$ && !J && !N && a > i || N && F && V && !$ && !J || S && F && V || !d && V || !g)
              return 1;
            if (!S && !N && !J && a < i || J && d && g && !S && !N || $ && d && g || !F && g || !V)
              return -1;
          }
          return 0;
        }
        function xb(a, i, d) {
          for (var S = -1, g = a.criteria, N = i.criteria, F = g.length, $ = d.length; ++S < F; ) {
            var V = yh(g[S], N[S]);
            if (V) {
              if (S >= $)
                return V;
              var J = d[S];
              return V * (J == "desc" ? -1 : 1);
            }
          }
          return a.index - i.index;
        }
        function Rh(a, i, d, S) {
          for (var g = -1, N = a.length, F = d.length, $ = -1, V = i.length, J = $t(N - F, 0), Q = K(V + J), ne = !S; ++$ < V; )
            Q[$] = i[$];
          for (; ++g < F; )
            (ne || g < N) && (Q[d[g]] = a[g]);
          for (; J--; )
            Q[$++] = a[g++];
          return Q;
        }
        function Oh(a, i, d, S) {
          for (var g = -1, N = a.length, F = -1, $ = d.length, V = -1, J = i.length, Q = $t(N - $, 0), ne = K(Q + J), ce = !S; ++g < Q; )
            ne[g] = a[g];
          for (var be = g; ++V < J; )
            ne[be + V] = i[V];
          for (; ++F < $; )
            (ce || g < N) && (ne[be + d[F]] = a[g++]);
          return ne;
        }
        function pn(a, i) {
          var d = -1, S = a.length;
          for (i || (i = K(S)); ++d < S; )
            i[d] = a[d];
          return i;
        }
        function wr(a, i, d, S) {
          var g = !d;
          d || (d = {});
          for (var N = -1, F = i.length; ++N < F; ) {
            var $ = i[N], V = S ? S(d[$], a[$], $, d, a) : n;
            V === n && (V = a[$]), g ? Xr(d, $, V) : Pi(d, $, V);
          }
          return d;
        }
        function Mb(a, i) {
          return wr(a, N_(a), i);
        }
        function $b(a, i) {
          return wr(a, Uh(a), i);
        }
        function ro(a, i) {
          return function(d, S) {
            var g = $e(d) ? Vm : ib, N = i ? i() : {};
            return g(d, a, Ce(S, 2), N);
          };
        }
        function Js(a) {
          return We(function(i, d) {
            var S = -1, g = d.length, N = g > 1 ? d[g - 1] : n, F = g > 2 ? d[2] : n;
            for (N = a.length > 3 && typeof N == "function" ? (g--, N) : n, F && un(d[0], d[1], F) && (N = g < 3 ? n : N, g = 1), i = ht(i); ++S < g; ) {
              var $ = d[S];
              $ && a(i, $, S, N);
            }
            return i;
          });
        }
        function Ch(a, i) {
          return function(d, S) {
            if (d == null)
              return d;
            if (!Tn(d))
              return a(d, S);
            for (var g = d.length, N = i ? g : -1, F = ht(d); (i ? N-- : ++N < g) && S(F[N], N, F) !== !1; )
              ;
            return d;
          };
        }
        function Nh(a) {
          return function(i, d, S) {
            for (var g = -1, N = ht(i), F = S(i), $ = F.length; $--; ) {
              var V = F[a ? $ : ++g];
              if (d(N[V], V, N) === !1)
                break;
            }
            return i;
          };
        }
        function qb(a, i, d) {
          var S = i & v, g = qi(a);
          function N() {
            var F = this && this !== Kt && this instanceof N ? g : a;
            return F.apply(S ? d : this, arguments);
          }
          return N;
        }
        function Dh(a) {
          return function(i) {
            i = ut(i);
            var d = Gs(i) ? Ar(i) : n, S = d ? d[0] : i.charAt(0), g = d ? Ia(d, 1).join("") : i.slice(1);
            return S[a]() + g;
          };
        }
        function Qs(a) {
          return function(i) {
            return zu(CA(OA(i).replace(Cm, "")), a, "");
          };
        }
        function qi(a) {
          return function() {
            var i = arguments;
            switch (i.length) {
              case 0:
                return new a();
              case 1:
                return new a(i[0]);
              case 2:
                return new a(i[0], i[1]);
              case 3:
                return new a(i[0], i[1], i[2]);
              case 4:
                return new a(i[0], i[1], i[2], i[3]);
              case 5:
                return new a(i[0], i[1], i[2], i[3], i[4]);
              case 6:
                return new a(i[0], i[1], i[2], i[3], i[4], i[5]);
              case 7:
                return new a(i[0], i[1], i[2], i[3], i[4], i[5], i[6]);
            }
            var d = Zs(a.prototype), S = a.apply(d, i);
            return vt(S) ? S : d;
          };
        }
        function kb(a, i, d) {
          var S = qi(a);
          function g() {
            for (var N = arguments.length, F = K(N), $ = N, V = ei(g); $--; )
              F[$] = arguments[$];
            var J = N < 3 && F[0] !== V && F[N - 1] !== V ? [] : Sa(F, V);
            if (N -= J.length, N < d)
              return xh(
                a,
                i,
                ao,
                g.placeholder,
                n,
                F,
                J,
                n,
                n,
                d - N
              );
            var Q = this && this !== Kt && this instanceof g ? S : a;
            return yn(Q, this, F);
          }
          return g;
        }
        function Bh(a) {
          return function(i, d, S) {
            var g = ht(i);
            if (!Tn(i)) {
              var N = Ce(d, 3);
              i = Vt(i), d = function($) {
                return N(g[$], $, g);
              };
            }
            var F = a(i, d, S);
            return F > -1 ? g[N ? i[F] : F] : n;
          };
        }
        function wh(a) {
          return Jr(function(i) {
            var d = i.length, S = d, g = Zn.prototype.thru;
            for (a && i.reverse(); S--; ) {
              var N = i[S];
              if (typeof N != "function")
                throw new Xn(o);
              if (g && !F && oo(N) == "wrapper")
                var F = new Zn([], !0);
            }
            for (S = F ? S : d; ++S < d; ) {
              N = i[S];
              var $ = oo(N), V = $ == "wrapper" ? O_(N) : n;
              V && B_(V[0]) && V[1] == (P | R | w | x) && !V[4].length && V[9] == 1 ? F = F[oo(V[0])].apply(F, V[3]) : F = N.length == 1 && B_(N) ? F[$]() : F.thru(N);
            }
            return function() {
              var J = arguments, Q = J[0];
              if (F && J.length == 1 && $e(Q))
                return F.plant(Q).value();
              for (var ne = 0, ce = d ? i[ne].apply(this, J) : Q; ++ne < d; )
                ce = i[ne].call(this, ce);
              return ce;
            };
          });
        }
        function ao(a, i, d, S, g, N, F, $, V, J) {
          var Q = i & P, ne = i & v, ce = i & I, be = i & (R | D), De = i & C, Ve = ce ? n : qi(a);
          function Be() {
            for (var je = arguments.length, Je = K(je), Nn = je; Nn--; )
              Je[Nn] = arguments[Nn];
            if (be)
              var _n = ei(Be), Dn = Jm(Je, _n);
            if (S && (Je = Rh(Je, S, g, be)), N && (Je = Oh(Je, N, F, be)), je -= Dn, be && je < J) {
              var Bt = Sa(Je, _n);
              return xh(
                a,
                i,
                ao,
                Be.placeholder,
                d,
                Je,
                Bt,
                $,
                V,
                J - je
              );
            }
            var Tr = ne ? d : this, na = ce ? Tr[a] : a;
            return je = Je.length, $ ? Je = iv(Je, $) : De && je > 1 && Je.reverse(), Q && V < je && (Je.length = V), this && this !== Kt && this instanceof Be && (na = Ve || qi(na)), na.apply(Tr, Je);
          }
          return Be;
        }
        function Ph(a, i) {
          return function(d, S) {
            return hb(d, a, i(S), {});
          };
        }
        function so(a, i) {
          return function(d, S) {
            var g;
            if (d === n && S === n)
              return i;
            if (d !== n && (g = d), S !== n) {
              if (g === n)
                return S;
              typeof d == "string" || typeof S == "string" ? (d = On(d), S = On(S)) : (d = Sh(d), S = Sh(S)), g = a(d, S);
            }
            return g;
          };
        }
        function I_(a) {
          return Jr(function(i) {
            return i = Lt(i, Rn(Ce())), We(function(d) {
              var S = this;
              return a(i, function(g) {
                return yn(g, S, d);
              });
            });
          });
        }
        function io(a, i) {
          i = i === n ? " " : On(i);
          var d = i.length;
          if (d < 2)
            return d ? p_(i, a) : i;
          var S = p_(i, Kl(a / Ks(i)));
          return Gs(i) ? Ia(Ar(S), 0, a).join("") : S.slice(0, a);
        }
        function Ub(a, i, d, S) {
          var g = i & v, N = qi(a);
          function F() {
            for (var $ = -1, V = arguments.length, J = -1, Q = S.length, ne = K(Q + V), ce = this && this !== Kt && this instanceof F ? N : a; ++J < Q; )
              ne[J] = S[J];
            for (; V--; )
              ne[J++] = arguments[++$];
            return yn(ce, g ? d : this, ne);
          }
          return F;
        }
        function Fh(a) {
          return function(i, d, S) {
            return S && typeof S != "number" && un(i, d, S) && (d = S = n), i = ta(i), d === n ? (d = i, i = 0) : d = ta(d), S = S === n ? i < d ? 1 : -1 : ta(S), yb(i, d, S, a);
          };
        }
        function lo(a) {
          return function(i, d) {
            return typeof i == "string" && typeof d == "string" || (i = tr(i), d = tr(d)), a(i, d);
          };
        }
        function xh(a, i, d, S, g, N, F, $, V, J) {
          var Q = i & R, ne = Q ? F : n, ce = Q ? n : F, be = Q ? N : n, De = Q ? n : N;
          i |= Q ? w : M, i &= ~(Q ? M : w), i & y || (i &= -4);
          var Ve = [
            a,
            i,
            g,
            be,
            ne,
            De,
            ce,
            $,
            V,
            J
          ], Be = d.apply(n, Ve);
          return B_(a) && zh(Be, Ve), Be.placeholder = S, Yh(Be, a, i);
        }
        function g_(a) {
          var i = Mt[a];
          return function(d, S) {
            if (d = tr(d), S = S == null ? 0 : tn(He(S), 292), S && Yf(d)) {
              var g = (ut(d) + "e").split("e"), N = i(g[0] + "e" + (+g[1] + S));
              return g = (ut(N) + "e").split("e"), +(g[0] + "e" + (+g[1] - S));
            }
            return i(d);
          };
        }
        var Hb = Ys && 1 / xl(new Ys([, -0]))[1] == ie ? function(a) {
          return new Ys(a);
        } : j_;
        function Mh(a) {
          return function(i) {
            var d = nn(i);
            return d == Ie ? t_(i) : d == It ? sL(i) : Zm(i, a(i));
          };
        }
        function Zr(a, i, d, S, g, N, F, $) {
          var V = i & I;
          if (!V && typeof a != "function")
            throw new Xn(o);
          var J = S ? S.length : 0;
          if (J || (i &= -97, S = g = n), F = F === n ? F : $t(He(F), 0), $ = $ === n ? $ : He($), J -= g ? g.length : 0, i & M) {
            var Q = S, ne = g;
            S = g = n;
          }
          var ce = V ? n : O_(a), be = [
            a,
            i,
            d,
            S,
            g,
            Q,
            ne,
            N,
            F,
            $
          ];
          if (ce && rv(be, ce), a = be[0], i = be[1], d = be[2], S = be[3], g = be[4], $ = be[9] = be[9] === n ? V ? 0 : a.length : $t(be[9] - J, 0), !$ && i & (R | D) && (i &= -25), !i || i == v)
            var De = qb(a, i, d);
          else i == R || i == D ? De = kb(a, i, $) : (i == w || i == (v | w)) && !g.length ? De = Ub(a, i, d, S) : De = ao.apply(n, be);
          var Ve = ce ? ph : zh;
          return Yh(Ve(De, be), a, i);
        }
        function $h(a, i, d, S) {
          return a === n || pr(a, zs[d]) && !ct.call(S, d) ? i : a;
        }
        function qh(a, i, d, S, g, N) {
          return vt(a) && vt(i) && (N.set(i, a), eo(a, i, n, qh, N), N.delete(i)), a;
        }
        function Vb(a) {
          return Hi(a) ? n : a;
        }
        function kh(a, i, d, S, g, N) {
          var F = d & L, $ = a.length, V = i.length;
          if ($ != V && !(F && V > $))
            return !1;
          var J = N.get(a), Q = N.get(i);
          if (J && Q)
            return J == i && Q == a;
          var ne = -1, ce = !0, be = d & b ? new ps() : n;
          for (N.set(a, i), N.set(i, a); ++ne < $; ) {
            var De = a[ne], Ve = i[ne];
            if (S)
              var Be = F ? S(Ve, De, ne, i, a, N) : S(De, Ve, ne, a, i, N);
            if (Be !== n) {
              if (Be)
                continue;
              ce = !1;
              break;
            }
            if (be) {
              if (!Yu(i, function(je, Je) {
                if (!Oi(be, Je) && (De === je || g(De, je, d, S, N)))
                  return be.push(Je);
              })) {
                ce = !1;
                break;
              }
            } else if (!(De === Ve || g(De, Ve, d, S, N))) {
              ce = !1;
              break;
            }
          }
          return N.delete(a), N.delete(i), ce;
        }
        function Wb(a, i, d, S, g, N, F) {
          switch (d) {
            case In:
              if (a.byteLength != i.byteLength || a.byteOffset != i.byteOffset)
                return !1;
              a = a.buffer, i = i.buffer;
            case Hn:
              return !(a.byteLength != i.byteLength || !N(new Hl(a), new Hl(i)));
            case ee:
            case de:
            case Ge:
              return pr(+a, +i);
            case Fe:
              return a.name == i.name && a.message == i.message;
            case bt:
            case ur:
              return a == i + "";
            case Ie:
              var $ = t_;
            case It:
              var V = S & L;
              if ($ || ($ = xl), a.size != i.size && !V)
                return !1;
              var J = F.get(a);
              if (J)
                return J == i;
              S |= b, F.set(a, i);
              var Q = kh($(a), $(i), S, g, N, F);
              return F.delete(a), Q;
            case kn:
              if (wi)
                return wi.call(a) == wi.call(i);
          }
          return !1;
        }
        function Gb(a, i, d, S, g, N) {
          var F = d & L, $ = y_(a), V = $.length, J = y_(i), Q = J.length;
          if (V != Q && !F)
            return !1;
          for (var ne = V; ne--; ) {
            var ce = $[ne];
            if (!(F ? ce in i : ct.call(i, ce)))
              return !1;
          }
          var be = N.get(a), De = N.get(i);
          if (be && De)
            return be == i && De == a;
          var Ve = !0;
          N.set(a, i), N.set(i, a);
          for (var Be = F; ++ne < V; ) {
            ce = $[ne];
            var je = a[ce], Je = i[ce];
            if (S)
              var Nn = F ? S(Je, je, ce, i, a, N) : S(je, Je, ce, a, i, N);
            if (!(Nn === n ? je === Je || g(je, Je, d, S, N) : Nn)) {
              Ve = !1;
              break;
            }
            Be || (Be = ce == "constructor");
          }
          if (Ve && !Be) {
            var _n = a.constructor, Dn = i.constructor;
            _n != Dn && "constructor" in a && "constructor" in i && !(typeof _n == "function" && _n instanceof _n && typeof Dn == "function" && Dn instanceof Dn) && (Ve = !1);
          }
          return N.delete(a), N.delete(i), Ve;
        }
        function Jr(a) {
          return P_(Kh(a, n, tA), a + "");
        }
        function y_(a) {
          return ih(a, Vt, N_);
        }
        function R_(a) {
          return ih(a, Sn, Uh);
        }
        var O_ = zl ? function(a) {
          return zl.get(a);
        } : j_;
        function oo(a) {
          for (var i = a.name + "", d = Xs[i], S = ct.call(Xs, i) ? d.length : 0; S--; ) {
            var g = d[S], N = g.func;
            if (N == null || N == a)
              return g.name;
          }
          return i;
        }
        function ei(a) {
          var i = ct.call(O, "placeholder") ? O : a;
          return i.placeholder;
        }
        function Ce() {
          var a = O.iteratee || G_;
          return a = a === G_ ? uh : a, arguments.length ? a(arguments[0], arguments[1]) : a;
        }
        function uo(a, i) {
          var d = a.__data__;
          return Qb(i) ? d[typeof i == "string" ? "string" : "hash"] : d.map;
        }
        function C_(a) {
          for (var i = Vt(a), d = i.length; d--; ) {
            var S = i[d], g = a[S];
            i[d] = [S, g, Wh(g)];
          }
          return i;
        }
        function ms(a, i) {
          var d = nL(a, i);
          return oh(d) ? d : n;
        }
        function Kb(a) {
          var i = ct.call(a, As), d = a[As];
          try {
            a[As] = n;
            var S = !0;
          } catch {
          }
          var g = kl.call(a);
          return S && (i ? a[As] = d : delete a[As]), g;
        }
        var N_ = r_ ? function(a) {
          return a == null ? [] : (a = ht(a), pa(r_(a), function(i) {
            return jf.call(a, i);
          }));
        } : z_, Uh = r_ ? function(a) {
          for (var i = []; a; )
            Ta(i, N_(a)), a = Vl(a);
          return i;
        } : z_, nn = on;
        (a_ && nn(new a_(new ArrayBuffer(1))) != In || Ni && nn(new Ni()) != Ie || s_ && nn(s_.resolve()) != at || Ys && nn(new Ys()) != It || Di && nn(new Di()) != Jt) && (nn = function(a) {
          var i = on(a), d = i == qe ? a.constructor : n, S = d ? Ls(d) : "";
          if (S)
            switch (S) {
              case OL:
                return In;
              case CL:
                return Ie;
              case NL:
                return at;
              case DL:
                return It;
              case BL:
                return Jt;
            }
          return i;
        });
        function jb(a, i, d) {
          for (var S = -1, g = d.length; ++S < g; ) {
            var N = d[S], F = N.size;
            switch (N.type) {
              case "drop":
                a += F;
                break;
              case "dropRight":
                i -= F;
                break;
              case "take":
                i = tn(i, a + F);
                break;
              case "takeRight":
                a = $t(a, i - F);
                break;
            }
          }
          return { start: a, end: i };
        }
        function zb(a) {
          var i = a.match(Us);
          return i ? i[1].split(hr) : [];
        }
        function Hh(a, i, d) {
          i = va(i, a);
          for (var S = -1, g = i.length, N = !1; ++S < g; ) {
            var F = Pr(i[S]);
            if (!(N = a != null && d(a, F)))
              break;
            a = a[F];
          }
          return N || ++S != g ? N : (g = a == null ? 0 : a.length, !!g && po(g) && Qr(F, g) && ($e(a) || bs(a)));
        }
        function Yb(a) {
          var i = a.length, d = new a.constructor(i);
          return i && typeof a[0] == "string" && ct.call(a, "index") && (d.index = a.index, d.input = a.input), d;
        }
        function Vh(a) {
          return typeof a.constructor == "function" && !ki(a) ? Zs(Vl(a)) : {};
        }
        function Xb(a, i, d) {
          var S = a.constructor;
          switch (i) {
            case Hn:
              return v_(a);
            case ee:
            case de:
              return new S(+a);
            case In:
              return wb(a, d);
            case Or:
            case dr:
            case Cr:
            case Vn:
            case Wn:
            case Gt:
            case En:
            case cr:
            case fr:
              return gh(a, d);
            case Ie:
              return new S();
            case Ge:
            case ur:
              return new S(a);
            case bt:
              return Pb(a);
            case It:
              return new S();
            case kn:
              return Fb(a);
          }
        }
        function Zb(a, i) {
          var d = i.length;
          if (!d)
            return a;
          var S = d - 1;
          return i[S] = (d > 1 ? "& " : "") + i[S], i = i.join(d > 2 ? ", " : " "), a.replace(ks, `{
/* [wrapped with ` + i + `] */
`);
        }
        function Jb(a) {
          return $e(a) || bs(a) || !!(zf && a && a[zf]);
        }
        function Qr(a, i) {
          var d = typeof a;
          return i = i ?? Ae, !!i && (d == "number" || d != "symbol" && se.test(a)) && a > -1 && a % 1 == 0 && a < i;
        }
        function un(a, i, d) {
          if (!vt(d))
            return !1;
          var S = typeof i;
          return (S == "number" ? Tn(d) && Qr(i, d.length) : S == "string" && i in d) ? pr(d[i], a) : !1;
        }
        function D_(a, i) {
          if ($e(a))
            return !1;
          var d = typeof a;
          return d == "number" || d == "symbol" || d == "boolean" || a == null || Cn(a) ? !0 : jr.test(a) || !ha.test(a) || i != null && a in ht(i);
        }
        function Qb(a) {
          var i = typeof a;
          return i == "string" || i == "number" || i == "symbol" || i == "boolean" ? a !== "__proto__" : a === null;
        }
        function B_(a) {
          var i = oo(a), d = O[i];
          if (typeof d != "function" || !(i in Ze.prototype))
            return !1;
          if (a === d)
            return !0;
          var S = O_(d);
          return !!S && a === S[0];
        }
        function ev(a) {
          return !!Wf && Wf in a;
        }
        var tv = $l ? ea : Y_;
        function ki(a) {
          var i = a && a.constructor, d = typeof i == "function" && i.prototype || zs;
          return a === d;
        }
        function Wh(a) {
          return a === a && !vt(a);
        }
        function Gh(a, i) {
          return function(d) {
            return d == null ? !1 : d[a] === i && (i !== n || a in ht(d));
          };
        }
        function nv(a) {
          var i = Ao(a, function(S) {
            return d.size === A && d.clear(), S;
          }), d = i.cache;
          return i;
        }
        function rv(a, i) {
          var d = a[1], S = i[1], g = d | S, N = g < (v | I | P), F = S == P && d == R || S == P && d == x && a[7].length <= i[8] || S == (P | x) && i[7].length <= i[8] && d == R;
          if (!(N || F))
            return a;
          S & v && (a[2] = i[2], g |= d & v ? 0 : y);
          var $ = i[3];
          if ($) {
            var V = a[3];
            a[3] = V ? Rh(V, $, i[4]) : $, a[4] = V ? Sa(a[3], E) : i[4];
          }
          return $ = i[5], $ && (V = a[5], a[5] = V ? Oh(V, $, i[6]) : $, a[6] = V ? Sa(a[5], E) : i[6]), $ = i[7], $ && (a[7] = $), S & P && (a[8] = a[8] == null ? i[8] : tn(a[8], i[8])), a[9] == null && (a[9] = i[9]), a[0] = i[0], a[1] = g, a;
        }
        function av(a) {
          var i = [];
          if (a != null)
            for (var d in ht(a))
              i.push(d);
          return i;
        }
        function sv(a) {
          return kl.call(a);
        }
        function Kh(a, i, d) {
          return i = $t(i === n ? a.length - 1 : i, 0), function() {
            for (var S = arguments, g = -1, N = $t(S.length - i, 0), F = K(N); ++g < N; )
              F[g] = S[i + g];
            g = -1;
            for (var $ = K(i + 1); ++g < i; )
              $[g] = S[g];
            return $[i] = d(F), yn(a, this, $);
          };
        }
        function jh(a, i) {
          return i.length < 2 ? a : Ss(a, Qn(i, 0, -1));
        }
        function iv(a, i) {
          for (var d = a.length, S = tn(i.length, d), g = pn(a); S--; ) {
            var N = i[S];
            a[S] = Qr(N, d) ? g[N] : n;
          }
          return a;
        }
        function w_(a, i) {
          if (!(i === "constructor" && typeof a[i] == "function") && i != "__proto__")
            return a[i];
        }
        var zh = Xh(ph), Ui = LL || function(a, i) {
          return Kt.setTimeout(a, i);
        }, P_ = Xh(Cb);
        function Yh(a, i, d) {
          var S = i + "";
          return P_(a, Zb(S, lv(zb(S), d)));
        }
        function Xh(a) {
          var i = 0, d = 0;
          return function() {
            var S = gL(), g = oe - (S - d);
            if (d = S, g > 0) {
              if (++i >= z)
                return arguments[0];
            } else
              i = 0;
            return a.apply(n, arguments);
          };
        }
        function _o(a, i) {
          var d = -1, S = a.length, g = S - 1;
          for (i = i === n ? S : i; ++d < i; ) {
            var N = E_(d, g), F = a[N];
            a[N] = a[d], a[d] = F;
          }
          return a.length = i, a;
        }
        var Zh = nv(function(a) {
          var i = [];
          return a.charCodeAt(0) === 46 && i.push(""), a.replace(Aa, function(d, S, g, N) {
            i.push(g ? N.replace(Hs, "$1") : S || d);
          }), i;
        });
        function Pr(a) {
          if (typeof a == "string" || Cn(a))
            return a;
          var i = a + "";
          return i == "0" && 1 / a == -1 / 0 ? "-0" : i;
        }
        function Ls(a) {
          if (a != null) {
            try {
              return ql.call(a);
            } catch {
            }
            try {
              return a + "";
            } catch {
            }
          }
          return "";
        }
        function lv(a, i) {
          return Yn(Ke, function(d) {
            var S = "_." + d[0];
            i & d[1] && !Pl(a, S) && a.push(S);
          }), a.sort();
        }
        function Jh(a) {
          if (a instanceof Ze)
            return a.clone();
          var i = new Zn(a.__wrapped__, a.__chain__);
          return i.__actions__ = pn(a.__actions__), i.__index__ = a.__index__, i.__values__ = a.__values__, i;
        }
        function ov(a, i, d) {
          (d ? un(a, i, d) : i === n) ? i = 1 : i = $t(He(i), 0);
          var S = a == null ? 0 : a.length;
          if (!S || i < 1)
            return [];
          for (var g = 0, N = 0, F = K(Kl(S / i)); g < S; )
            F[N++] = Qn(a, g, g += i);
          return F;
        }
        function uv(a) {
          for (var i = -1, d = a == null ? 0 : a.length, S = 0, g = []; ++i < d; ) {
            var N = a[i];
            N && (g[S++] = N);
          }
          return g;
        }
        function _v() {
          var a = arguments.length;
          if (!a)
            return [];
          for (var i = K(a - 1), d = arguments[0], S = a; S--; )
            i[S - 1] = arguments[S];
          return Ta($e(d) ? pn(d) : [d], jt(i, 1));
        }
        var dv = We(function(a, i) {
          return Dt(a) ? Fi(a, jt(i, 1, Dt, !0)) : [];
        }), cv = We(function(a, i) {
          var d = er(i);
          return Dt(d) && (d = n), Dt(a) ? Fi(a, jt(i, 1, Dt, !0), Ce(d, 2)) : [];
        }), fv = We(function(a, i) {
          var d = er(i);
          return Dt(d) && (d = n), Dt(a) ? Fi(a, jt(i, 1, Dt, !0), n, d) : [];
        });
        function hv(a, i, d) {
          var S = a == null ? 0 : a.length;
          return S ? (i = d || i === n ? 1 : He(i), Qn(a, i < 0 ? 0 : i, S)) : [];
        }
        function Av(a, i, d) {
          var S = a == null ? 0 : a.length;
          return S ? (i = d || i === n ? 1 : He(i), i = S - i, Qn(a, 0, i < 0 ? 0 : i)) : [];
        }
        function Ev(a, i) {
          return a && a.length ? no(a, Ce(i, 3), !0, !0) : [];
        }
        function pv(a, i) {
          return a && a.length ? no(a, Ce(i, 3), !0) : [];
        }
        function Tv(a, i, d, S) {
          var g = a == null ? 0 : a.length;
          return g ? (d && typeof d != "number" && un(a, i, d) && (d = 0, S = g), _b(a, i, d, S)) : [];
        }
        function Qh(a, i, d) {
          var S = a == null ? 0 : a.length;
          if (!S)
            return -1;
          var g = d == null ? 0 : He(d);
          return g < 0 && (g = $t(S + g, 0)), Fl(a, Ce(i, 3), g);
        }
        function eA(a, i, d) {
          var S = a == null ? 0 : a.length;
          if (!S)
            return -1;
          var g = S - 1;
          return d !== n && (g = He(d), g = d < 0 ? $t(S + g, 0) : tn(g, S - 1)), Fl(a, Ce(i, 3), g, !0);
        }
        function tA(a) {
          var i = a == null ? 0 : a.length;
          return i ? jt(a, 1) : [];
        }
        function Sv(a) {
          var i = a == null ? 0 : a.length;
          return i ? jt(a, ie) : [];
        }
        function mv(a, i) {
          var d = a == null ? 0 : a.length;
          return d ? (i = i === n ? 1 : He(i), jt(a, i)) : [];
        }
        function Lv(a) {
          for (var i = -1, d = a == null ? 0 : a.length, S = {}; ++i < d; ) {
            var g = a[i];
            S[g[0]] = g[1];
          }
          return S;
        }
        function nA(a) {
          return a && a.length ? a[0] : n;
        }
        function bv(a, i, d) {
          var S = a == null ? 0 : a.length;
          if (!S)
            return -1;
          var g = d == null ? 0 : He(d);
          return g < 0 && (g = $t(S + g, 0)), Ws(a, i, g);
        }
        function vv(a) {
          var i = a == null ? 0 : a.length;
          return i ? Qn(a, 0, -1) : [];
        }
        var Iv = We(function(a) {
          var i = Lt(a, L_);
          return i.length && i[0] === a[0] ? d_(i) : [];
        }), gv = We(function(a) {
          var i = er(a), d = Lt(a, L_);
          return i === er(d) ? i = n : d.pop(), d.length && d[0] === a[0] ? d_(d, Ce(i, 2)) : [];
        }), yv = We(function(a) {
          var i = er(a), d = Lt(a, L_);
          return i = typeof i == "function" ? i : n, i && d.pop(), d.length && d[0] === a[0] ? d_(d, n, i) : [];
        });
        function Rv(a, i) {
          return a == null ? "" : vL.call(a, i);
        }
        function er(a) {
          var i = a == null ? 0 : a.length;
          return i ? a[i - 1] : n;
        }
        function Ov(a, i, d) {
          var S = a == null ? 0 : a.length;
          if (!S)
            return -1;
          var g = S;
          return d !== n && (g = He(d), g = g < 0 ? $t(S + g, 0) : tn(g, S - 1)), i === i ? lL(a, i, g) : Fl(a, xf, g, !0);
        }
        function Cv(a, i) {
          return a && a.length ? fh(a, He(i)) : n;
        }
        var Nv = We(rA);
        function rA(a, i) {
          return a && a.length && i && i.length ? A_(a, i) : a;
        }
        function Dv(a, i, d) {
          return a && a.length && i && i.length ? A_(a, i, Ce(d, 2)) : a;
        }
        function Bv(a, i, d) {
          return a && a.length && i && i.length ? A_(a, i, n, d) : a;
        }
        var wv = Jr(function(a, i) {
          var d = a == null ? 0 : a.length, S = l_(a, i);
          return Eh(a, Lt(i, function(g) {
            return Qr(g, d) ? +g : g;
          }).sort(yh)), S;
        });
        function Pv(a, i) {
          var d = [];
          if (!(a && a.length))
            return d;
          var S = -1, g = [], N = a.length;
          for (i = Ce(i, 3); ++S < N; ) {
            var F = a[S];
            i(F, S, a) && (d.push(F), g.push(S));
          }
          return Eh(a, g), d;
        }
        function F_(a) {
          return a == null ? a : RL.call(a);
        }
        function Fv(a, i, d) {
          var S = a == null ? 0 : a.length;
          return S ? (d && typeof d != "number" && un(a, i, d) ? (i = 0, d = S) : (i = i == null ? 0 : He(i), d = d === n ? S : He(d)), Qn(a, i, d)) : [];
        }
        function xv(a, i) {
          return to(a, i);
        }
        function Mv(a, i, d) {
          return T_(a, i, Ce(d, 2));
        }
        function $v(a, i) {
          var d = a == null ? 0 : a.length;
          if (d) {
            var S = to(a, i);
            if (S < d && pr(a[S], i))
              return S;
          }
          return -1;
        }
        function qv(a, i) {
          return to(a, i, !0);
        }
        function kv(a, i, d) {
          return T_(a, i, Ce(d, 2), !0);
        }
        function Uv(a, i) {
          var d = a == null ? 0 : a.length;
          if (d) {
            var S = to(a, i, !0) - 1;
            if (pr(a[S], i))
              return S;
          }
          return -1;
        }
        function Hv(a) {
          return a && a.length ? Th(a) : [];
        }
        function Vv(a, i) {
          return a && a.length ? Th(a, Ce(i, 2)) : [];
        }
        function Wv(a) {
          var i = a == null ? 0 : a.length;
          return i ? Qn(a, 1, i) : [];
        }
        function Gv(a, i, d) {
          return a && a.length ? (i = d || i === n ? 1 : He(i), Qn(a, 0, i < 0 ? 0 : i)) : [];
        }
        function Kv(a, i, d) {
          var S = a == null ? 0 : a.length;
          return S ? (i = d || i === n ? 1 : He(i), i = S - i, Qn(a, i < 0 ? 0 : i, S)) : [];
        }
        function jv(a, i) {
          return a && a.length ? no(a, Ce(i, 3), !1, !0) : [];
        }
        function zv(a, i) {
          return a && a.length ? no(a, Ce(i, 3)) : [];
        }
        var Yv = We(function(a) {
          return ba(jt(a, 1, Dt, !0));
        }), Xv = We(function(a) {
          var i = er(a);
          return Dt(i) && (i = n), ba(jt(a, 1, Dt, !0), Ce(i, 2));
        }), Zv = We(function(a) {
          var i = er(a);
          return i = typeof i == "function" ? i : n, ba(jt(a, 1, Dt, !0), n, i);
        });
        function Jv(a) {
          return a && a.length ? ba(a) : [];
        }
        function Qv(a, i) {
          return a && a.length ? ba(a, Ce(i, 2)) : [];
        }
        function eI(a, i) {
          return i = typeof i == "function" ? i : n, a && a.length ? ba(a, n, i) : [];
        }
        function x_(a) {
          if (!(a && a.length))
            return [];
          var i = 0;
          return a = pa(a, function(d) {
            if (Dt(d))
              return i = $t(d.length, i), !0;
          }), Qu(i, function(d) {
            return Lt(a, Xu(d));
          });
        }
        function aA(a, i) {
          if (!(a && a.length))
            return [];
          var d = x_(a);
          return i == null ? d : Lt(d, function(S) {
            return yn(i, n, S);
          });
        }
        var tI = We(function(a, i) {
          return Dt(a) ? Fi(a, i) : [];
        }), nI = We(function(a) {
          return m_(pa(a, Dt));
        }), rI = We(function(a) {
          var i = er(a);
          return Dt(i) && (i = n), m_(pa(a, Dt), Ce(i, 2));
        }), aI = We(function(a) {
          var i = er(a);
          return i = typeof i == "function" ? i : n, m_(pa(a, Dt), n, i);
        }), sI = We(x_);
        function iI(a, i) {
          return bh(a || [], i || [], Pi);
        }
        function lI(a, i) {
          return bh(a || [], i || [], $i);
        }
        var oI = We(function(a) {
          var i = a.length, d = i > 1 ? a[i - 1] : n;
          return d = typeof d == "function" ? (a.pop(), d) : n, aA(a, d);
        });
        function sA(a) {
          var i = O(a);
          return i.__chain__ = !0, i;
        }
        function uI(a, i) {
          return i(a), a;
        }
        function co(a, i) {
          return i(a);
        }
        var _I = Jr(function(a) {
          var i = a.length, d = i ? a[0] : 0, S = this.__wrapped__, g = function(N) {
            return l_(N, a);
          };
          return i > 1 || this.__actions__.length || !(S instanceof Ze) || !Qr(d) ? this.thru(g) : (S = S.slice(d, +d + (i ? 1 : 0)), S.__actions__.push({
            func: co,
            args: [g],
            thisArg: n
          }), new Zn(S, this.__chain__).thru(function(N) {
            return i && !N.length && N.push(n), N;
          }));
        });
        function dI() {
          return sA(this);
        }
        function cI() {
          return new Zn(this.value(), this.__chain__);
        }
        function fI() {
          this.__values__ === n && (this.__values__ = SA(this.value()));
          var a = this.__index__ >= this.__values__.length, i = a ? n : this.__values__[this.__index__++];
          return { done: a, value: i };
        }
        function hI() {
          return this;
        }
        function AI(a) {
          for (var i, d = this; d instanceof Xl; ) {
            var S = Jh(d);
            S.__index__ = 0, S.__values__ = n, i ? g.__wrapped__ = S : i = S;
            var g = S;
            d = d.__wrapped__;
          }
          return g.__wrapped__ = a, i;
        }
        function EI() {
          var a = this.__wrapped__;
          if (a instanceof Ze) {
            var i = a;
            return this.__actions__.length && (i = new Ze(this)), i = i.reverse(), i.__actions__.push({
              func: co,
              args: [F_],
              thisArg: n
            }), new Zn(i, this.__chain__);
          }
          return this.thru(F_);
        }
        function pI() {
          return Lh(this.__wrapped__, this.__actions__);
        }
        var TI = ro(function(a, i, d) {
          ct.call(a, d) ? ++a[d] : Xr(a, d, 1);
        });
        function SI(a, i, d) {
          var S = $e(a) ? Pf : ub;
          return d && un(a, i, d) && (i = n), S(a, Ce(i, 3));
        }
        function mI(a, i) {
          var d = $e(a) ? pa : ah;
          return d(a, Ce(i, 3));
        }
        var LI = Bh(Qh), bI = Bh(eA);
        function vI(a, i) {
          return jt(fo(a, i), 1);
        }
        function II(a, i) {
          return jt(fo(a, i), ie);
        }
        function gI(a, i, d) {
          return d = d === n ? 1 : He(d), jt(fo(a, i), d);
        }
        function iA(a, i) {
          var d = $e(a) ? Yn : La;
          return d(a, Ce(i, 3));
        }
        function lA(a, i) {
          var d = $e(a) ? Wm : rh;
          return d(a, Ce(i, 3));
        }
        var yI = ro(function(a, i, d) {
          ct.call(a, d) ? a[d].push(i) : Xr(a, d, [i]);
        });
        function RI(a, i, d, S) {
          a = Tn(a) ? a : ni(a), d = d && !S ? He(d) : 0;
          var g = a.length;
          return d < 0 && (d = $t(g + d, 0)), To(a) ? d <= g && a.indexOf(i, d) > -1 : !!g && Ws(a, i, d) > -1;
        }
        var OI = We(function(a, i, d) {
          var S = -1, g = typeof i == "function", N = Tn(a) ? K(a.length) : [];
          return La(a, function(F) {
            N[++S] = g ? yn(i, F, d) : xi(F, i, d);
          }), N;
        }), CI = ro(function(a, i, d) {
          Xr(a, d, i);
        });
        function fo(a, i) {
          var d = $e(a) ? Lt : _h;
          return d(a, Ce(i, 3));
        }
        function NI(a, i, d, S) {
          return a == null ? [] : ($e(i) || (i = i == null ? [] : [i]), d = S ? n : d, $e(d) || (d = d == null ? [] : [d]), hh(a, i, d));
        }
        var DI = ro(function(a, i, d) {
          a[d ? 0 : 1].push(i);
        }, function() {
          return [[], []];
        });
        function BI(a, i, d) {
          var S = $e(a) ? zu : $f, g = arguments.length < 3;
          return S(a, Ce(i, 4), d, g, La);
        }
        function wI(a, i, d) {
          var S = $e(a) ? Gm : $f, g = arguments.length < 3;
          return S(a, Ce(i, 4), d, g, rh);
        }
        function PI(a, i) {
          var d = $e(a) ? pa : ah;
          return d(a, Eo(Ce(i, 3)));
        }
        function FI(a) {
          var i = $e(a) ? Qf : Rb;
          return i(a);
        }
        function xI(a, i, d) {
          (d ? un(a, i, d) : i === n) ? i = 1 : i = He(i);
          var S = $e(a) ? ab : Ob;
          return S(a, i);
        }
        function MI(a) {
          var i = $e(a) ? sb : Nb;
          return i(a);
        }
        function $I(a) {
          if (a == null)
            return 0;
          if (Tn(a))
            return To(a) ? Ks(a) : a.length;
          var i = nn(a);
          return i == Ie || i == It ? a.size : f_(a).length;
        }
        function qI(a, i, d) {
          var S = $e(a) ? Yu : Db;
          return d && un(a, i, d) && (i = n), S(a, Ce(i, 3));
        }
        var kI = We(function(a, i) {
          if (a == null)
            return [];
          var d = i.length;
          return d > 1 && un(a, i[0], i[1]) ? i = [] : d > 2 && un(i[0], i[1], i[2]) && (i = [i[0]]), hh(a, jt(i, 1), []);
        }), ho = mL || function() {
          return Kt.Date.now();
        };
        function UI(a, i) {
          if (typeof i != "function")
            throw new Xn(o);
          return a = He(a), function() {
            if (--a < 1)
              return i.apply(this, arguments);
          };
        }
        function oA(a, i, d) {
          return i = d ? n : i, i = a && i == null ? a.length : i, Zr(a, P, n, n, n, n, i);
        }
        function uA(a, i) {
          var d;
          if (typeof i != "function")
            throw new Xn(o);
          return a = He(a), function() {
            return --a > 0 && (d = i.apply(this, arguments)), a <= 1 && (i = n), d;
          };
        }
        var M_ = We(function(a, i, d) {
          var S = v;
          if (d.length) {
            var g = Sa(d, ei(M_));
            S |= w;
          }
          return Zr(a, S, i, d, g);
        }), _A = We(function(a, i, d) {
          var S = v | I;
          if (d.length) {
            var g = Sa(d, ei(_A));
            S |= w;
          }
          return Zr(i, S, a, d, g);
        });
        function dA(a, i, d) {
          i = d ? n : i;
          var S = Zr(a, R, n, n, n, n, n, i);
          return S.placeholder = dA.placeholder, S;
        }
        function cA(a, i, d) {
          i = d ? n : i;
          var S = Zr(a, D, n, n, n, n, n, i);
          return S.placeholder = cA.placeholder, S;
        }
        function fA(a, i, d) {
          var S, g, N, F, $, V, J = 0, Q = !1, ne = !1, ce = !0;
          if (typeof a != "function")
            throw new Xn(o);
          i = tr(i) || 0, vt(d) && (Q = !!d.leading, ne = "maxWait" in d, N = ne ? $t(tr(d.maxWait) || 0, i) : N, ce = "trailing" in d ? !!d.trailing : ce);
          function be(Bt) {
            var Tr = S, na = g;
            return S = g = n, J = Bt, F = a.apply(na, Tr), F;
          }
          function De(Bt) {
            return J = Bt, $ = Ui(je, i), Q ? be(Bt) : F;
          }
          function Ve(Bt) {
            var Tr = Bt - V, na = Bt - J, BA = i - Tr;
            return ne ? tn(BA, N - na) : BA;
          }
          function Be(Bt) {
            var Tr = Bt - V, na = Bt - J;
            return V === n || Tr >= i || Tr < 0 || ne && na >= N;
          }
          function je() {
            var Bt = ho();
            if (Be(Bt))
              return Je(Bt);
            $ = Ui(je, Ve(Bt));
          }
          function Je(Bt) {
            return $ = n, ce && S ? be(Bt) : (S = g = n, F);
          }
          function Nn() {
            $ !== n && vh($), J = 0, S = V = g = $ = n;
          }
          function _n() {
            return $ === n ? F : Je(ho());
          }
          function Dn() {
            var Bt = ho(), Tr = Be(Bt);
            if (S = arguments, g = this, V = Bt, Tr) {
              if ($ === n)
                return De(V);
              if (ne)
                return vh($), $ = Ui(je, i), be(V);
            }
            return $ === n && ($ = Ui(je, i)), F;
          }
          return Dn.cancel = Nn, Dn.flush = _n, Dn;
        }
        var HI = We(function(a, i) {
          return nh(a, 1, i);
        }), VI = We(function(a, i, d) {
          return nh(a, tr(i) || 0, d);
        });
        function WI(a) {
          return Zr(a, C);
        }
        function Ao(a, i) {
          if (typeof a != "function" || i != null && typeof i != "function")
            throw new Xn(o);
          var d = function() {
            var S = arguments, g = i ? i.apply(this, S) : S[0], N = d.cache;
            if (N.has(g))
              return N.get(g);
            var F = a.apply(this, S);
            return d.cache = N.set(g, F) || N, F;
          };
          return d.cache = new (Ao.Cache || Yr)(), d;
        }
        Ao.Cache = Yr;
        function Eo(a) {
          if (typeof a != "function")
            throw new Xn(o);
          return function() {
            var i = arguments;
            switch (i.length) {
              case 0:
                return !a.call(this);
              case 1:
                return !a.call(this, i[0]);
              case 2:
                return !a.call(this, i[0], i[1]);
              case 3:
                return !a.call(this, i[0], i[1], i[2]);
            }
            return !a.apply(this, i);
          };
        }
        function GI(a) {
          return uA(2, a);
        }
        var KI = Bb(function(a, i) {
          i = i.length == 1 && $e(i[0]) ? Lt(i[0], Rn(Ce())) : Lt(jt(i, 1), Rn(Ce()));
          var d = i.length;
          return We(function(S) {
            for (var g = -1, N = tn(S.length, d); ++g < N; )
              S[g] = i[g].call(this, S[g]);
            return yn(a, this, S);
          });
        }), $_ = We(function(a, i) {
          var d = Sa(i, ei($_));
          return Zr(a, w, n, i, d);
        }), hA = We(function(a, i) {
          var d = Sa(i, ei(hA));
          return Zr(a, M, n, i, d);
        }), jI = Jr(function(a, i) {
          return Zr(a, x, n, n, n, i);
        });
        function zI(a, i) {
          if (typeof a != "function")
            throw new Xn(o);
          return i = i === n ? i : He(i), We(a, i);
        }
        function YI(a, i) {
          if (typeof a != "function")
            throw new Xn(o);
          return i = i == null ? 0 : $t(He(i), 0), We(function(d) {
            var S = d[i], g = Ia(d, 0, i);
            return S && Ta(g, S), yn(a, this, g);
          });
        }
        function XI(a, i, d) {
          var S = !0, g = !0;
          if (typeof a != "function")
            throw new Xn(o);
          return vt(d) && (S = "leading" in d ? !!d.leading : S, g = "trailing" in d ? !!d.trailing : g), fA(a, i, {
            leading: S,
            maxWait: i,
            trailing: g
          });
        }
        function ZI(a) {
          return oA(a, 1);
        }
        function JI(a, i) {
          return $_(b_(i), a);
        }
        function QI() {
          if (!arguments.length)
            return [];
          var a = arguments[0];
          return $e(a) ? a : [a];
        }
        function eg(a) {
          return Jn(a, m);
        }
        function tg(a, i) {
          return i = typeof i == "function" ? i : n, Jn(a, m, i);
        }
        function ng(a) {
          return Jn(a, p | m);
        }
        function rg(a, i) {
          return i = typeof i == "function" ? i : n, Jn(a, p | m, i);
        }
        function ag(a, i) {
          return i == null || th(a, i, Vt(i));
        }
        function pr(a, i) {
          return a === i || a !== a && i !== i;
        }
        var sg = lo(__), ig = lo(function(a, i) {
          return a >= i;
        }), bs = lh(/* @__PURE__ */ function() {
          return arguments;
        }()) ? lh : function(a) {
          return yt(a) && ct.call(a, "callee") && !jf.call(a, "callee");
        }, $e = K.isArray, lg = Of ? Rn(Of) : Ab;
        function Tn(a) {
          return a != null && po(a.length) && !ea(a);
        }
        function Dt(a) {
          return yt(a) && Tn(a);
        }
        function og(a) {
          return a === !0 || a === !1 || yt(a) && on(a) == ee;
        }
        var ga = bL || Y_, ug = Cf ? Rn(Cf) : Eb;
        function _g(a) {
          return yt(a) && a.nodeType === 1 && !Hi(a);
        }
        function dg(a) {
          if (a == null)
            return !0;
          if (Tn(a) && ($e(a) || typeof a == "string" || typeof a.splice == "function" || ga(a) || ti(a) || bs(a)))
            return !a.length;
          var i = nn(a);
          if (i == Ie || i == It)
            return !a.size;
          if (ki(a))
            return !f_(a).length;
          for (var d in a)
            if (ct.call(a, d))
              return !1;
          return !0;
        }
        function cg(a, i) {
          return Mi(a, i);
        }
        function fg(a, i, d) {
          d = typeof d == "function" ? d : n;
          var S = d ? d(a, i) : n;
          return S === n ? Mi(a, i, n, d) : !!S;
        }
        function q_(a) {
          if (!yt(a))
            return !1;
          var i = on(a);
          return i == Fe || i == Ne || typeof a.message == "string" && typeof a.name == "string" && !Hi(a);
        }
        function hg(a) {
          return typeof a == "number" && Yf(a);
        }
        function ea(a) {
          if (!vt(a))
            return !1;
          var i = on(a);
          return i == Ue || i == Xe || i == G || i == _t;
        }
        function AA(a) {
          return typeof a == "number" && a == He(a);
        }
        function po(a) {
          return typeof a == "number" && a > -1 && a % 1 == 0 && a <= Ae;
        }
        function vt(a) {
          var i = typeof a;
          return a != null && (i == "object" || i == "function");
        }
        function yt(a) {
          return a != null && typeof a == "object";
        }
        var EA = Nf ? Rn(Nf) : Tb;
        function Ag(a, i) {
          return a === i || c_(a, i, C_(i));
        }
        function Eg(a, i, d) {
          return d = typeof d == "function" ? d : n, c_(a, i, C_(i), d);
        }
        function pg(a) {
          return pA(a) && a != +a;
        }
        function Tg(a) {
          if (tv(a))
            throw new xe(l);
          return oh(a);
        }
        function Sg(a) {
          return a === null;
        }
        function mg(a) {
          return a == null;
        }
        function pA(a) {
          return typeof a == "number" || yt(a) && on(a) == Ge;
        }
        function Hi(a) {
          if (!yt(a) || on(a) != qe)
            return !1;
          var i = Vl(a);
          if (i === null)
            return !0;
          var d = ct.call(i, "constructor") && i.constructor;
          return typeof d == "function" && d instanceof d && ql.call(d) == EL;
        }
        var k_ = Df ? Rn(Df) : Sb;
        function Lg(a) {
          return AA(a) && a >= -9007199254740991 && a <= Ae;
        }
        var TA = Bf ? Rn(Bf) : mb;
        function To(a) {
          return typeof a == "string" || !$e(a) && yt(a) && on(a) == ur;
        }
        function Cn(a) {
          return typeof a == "symbol" || yt(a) && on(a) == kn;
        }
        var ti = wf ? Rn(wf) : Lb;
        function bg(a) {
          return a === n;
        }
        function vg(a) {
          return yt(a) && nn(a) == Jt;
        }
        function Ig(a) {
          return yt(a) && on(a) == Un;
        }
        var gg = lo(h_), yg = lo(function(a, i) {
          return a <= i;
        });
        function SA(a) {
          if (!a)
            return [];
          if (Tn(a))
            return To(a) ? Ar(a) : pn(a);
          if (Ci && a[Ci])
            return aL(a[Ci]());
          var i = nn(a), d = i == Ie ? t_ : i == It ? xl : ni;
          return d(a);
        }
        function ta(a) {
          if (!a)
            return a === 0 ? a : 0;
          if (a = tr(a), a === ie || a === -1 / 0) {
            var i = a < 0 ? -1 : 1;
            return i * we;
          }
          return a === a ? a : 0;
        }
        function He(a) {
          var i = ta(a), d = i % 1;
          return i === i ? d ? i - d : i : 0;
        }
        function mA(a) {
          return a ? Ts(He(a), 0, ae) : 0;
        }
        function tr(a) {
          if (typeof a == "number")
            return a;
          if (Cn(a))
            return me;
          if (vt(a)) {
            var i = typeof a.valueOf == "function" ? a.valueOf() : a;
            a = vt(i) ? i + "" : i;
          }
          if (typeof a != "string")
            return a === 0 ? a : +a;
          a = qf(a);
          var d = qu.test(a);
          return d || U.test(a) ? Um(a.slice(2), d ? 2 : 8) : Bl.test(a) ? me : +a;
        }
        function LA(a) {
          return wr(a, Sn(a));
        }
        function Rg(a) {
          return a ? Ts(He(a), -9007199254740991, Ae) : a === 0 ? a : 0;
        }
        function ut(a) {
          return a == null ? "" : On(a);
        }
        var Og = Js(function(a, i) {
          if (ki(i) || Tn(i)) {
            wr(i, Vt(i), a);
            return;
          }
          for (var d in i)
            ct.call(i, d) && Pi(a, d, i[d]);
        }), bA = Js(function(a, i) {
          wr(i, Sn(i), a);
        }), So = Js(function(a, i, d, S) {
          wr(i, Sn(i), a, S);
        }), Cg = Js(function(a, i, d, S) {
          wr(i, Vt(i), a, S);
        }), Ng = Jr(l_);
        function Dg(a, i) {
          var d = Zs(a);
          return i == null ? d : eh(d, i);
        }
        var Bg = We(function(a, i) {
          a = ht(a);
          var d = -1, S = i.length, g = S > 2 ? i[2] : n;
          for (g && un(i[0], i[1], g) && (S = 1); ++d < S; )
            for (var N = i[d], F = Sn(N), $ = -1, V = F.length; ++$ < V; ) {
              var J = F[$], Q = a[J];
              (Q === n || pr(Q, zs[J]) && !ct.call(a, J)) && (a[J] = N[J]);
            }
          return a;
        }), wg = We(function(a) {
          return a.push(n, qh), yn(vA, n, a);
        });
        function Pg(a, i) {
          return Ff(a, Ce(i, 3), Br);
        }
        function Fg(a, i) {
          return Ff(a, Ce(i, 3), u_);
        }
        function xg(a, i) {
          return a == null ? a : o_(a, Ce(i, 3), Sn);
        }
        function Mg(a, i) {
          return a == null ? a : sh(a, Ce(i, 3), Sn);
        }
        function $g(a, i) {
          return a && Br(a, Ce(i, 3));
        }
        function qg(a, i) {
          return a && u_(a, Ce(i, 3));
        }
        function kg(a) {
          return a == null ? [] : Ql(a, Vt(a));
        }
        function Ug(a) {
          return a == null ? [] : Ql(a, Sn(a));
        }
        function U_(a, i, d) {
          var S = a == null ? n : Ss(a, i);
          return S === n ? d : S;
        }
        function Hg(a, i) {
          return a != null && Hh(a, i, db);
        }
        function H_(a, i) {
          return a != null && Hh(a, i, cb);
        }
        var Vg = Ph(function(a, i, d) {
          i != null && typeof i.toString != "function" && (i = kl.call(i)), a[i] = d;
        }, W_(mn)), Wg = Ph(function(a, i, d) {
          i != null && typeof i.toString != "function" && (i = kl.call(i)), ct.call(a, i) ? a[i].push(d) : a[i] = [d];
        }, Ce), Gg = We(xi);
        function Vt(a) {
          return Tn(a) ? Jf(a) : f_(a);
        }
        function Sn(a) {
          return Tn(a) ? Jf(a, !0) : bb(a);
        }
        function Kg(a, i) {
          var d = {};
          return i = Ce(i, 3), Br(a, function(S, g, N) {
            Xr(d, i(S, g, N), S);
          }), d;
        }
        function jg(a, i) {
          var d = {};
          return i = Ce(i, 3), Br(a, function(S, g, N) {
            Xr(d, g, i(S, g, N));
          }), d;
        }
        var zg = Js(function(a, i, d) {
          eo(a, i, d);
        }), vA = Js(function(a, i, d, S) {
          eo(a, i, d, S);
        }), Yg = Jr(function(a, i) {
          var d = {};
          if (a == null)
            return d;
          var S = !1;
          i = Lt(i, function(N) {
            return N = va(N, a), S || (S = N.length > 1), N;
          }), wr(a, R_(a), d), S && (d = Jn(d, p | T | m, Vb));
          for (var g = i.length; g--; )
            S_(d, i[g]);
          return d;
        });
        function Xg(a, i) {
          return IA(a, Eo(Ce(i)));
        }
        var Zg = Jr(function(a, i) {
          return a == null ? {} : Ib(a, i);
        });
        function IA(a, i) {
          if (a == null)
            return {};
          var d = Lt(R_(a), function(S) {
            return [S];
          });
          return i = Ce(i), Ah(a, d, function(S, g) {
            return i(S, g[0]);
          });
        }
        function Jg(a, i, d) {
          i = va(i, a);
          var S = -1, g = i.length;
          for (g || (g = 1, a = n); ++S < g; ) {
            var N = a == null ? n : a[Pr(i[S])];
            N === n && (S = g, N = d), a = ea(N) ? N.call(a) : N;
          }
          return a;
        }
        function Qg(a, i, d) {
          return a == null ? a : $i(a, i, d);
        }
        function ey(a, i, d, S) {
          return S = typeof S == "function" ? S : n, a == null ? a : $i(a, i, d, S);
        }
        var gA = Mh(Vt), yA = Mh(Sn);
        function ty(a, i, d) {
          var S = $e(a), g = S || ga(a) || ti(a);
          if (i = Ce(i, 4), d == null) {
            var N = a && a.constructor;
            g ? d = S ? new N() : [] : vt(a) ? d = ea(N) ? Zs(Vl(a)) : {} : d = {};
          }
          return (g ? Yn : Br)(a, function(F, $, V) {
            return i(d, F, $, V);
          }), d;
        }
        function ny(a, i) {
          return a == null ? !0 : S_(a, i);
        }
        function ry(a, i, d) {
          return a == null ? a : mh(a, i, b_(d));
        }
        function ay(a, i, d, S) {
          return S = typeof S == "function" ? S : n, a == null ? a : mh(a, i, b_(d), S);
        }
        function ni(a) {
          return a == null ? [] : e_(a, Vt(a));
        }
        function sy(a) {
          return a == null ? [] : e_(a, Sn(a));
        }
        function iy(a, i, d) {
          return d === n && (d = i, i = n), d !== n && (d = tr(d), d = d === d ? d : 0), i !== n && (i = tr(i), i = i === i ? i : 0), Ts(tr(a), i, d);
        }
        function ly(a, i, d) {
          return i = ta(i), d === n ? (d = i, i = 0) : d = ta(d), a = tr(a), fb(a, i, d);
        }
        function oy(a, i, d) {
          if (d && typeof d != "boolean" && un(a, i, d) && (i = d = n), d === n && (typeof i == "boolean" ? (d = i, i = n) : typeof a == "boolean" && (d = a, a = n)), a === n && i === n ? (a = 0, i = 1) : (a = ta(a), i === n ? (i = a, a = 0) : i = ta(i)), a > i) {
            var S = a;
            a = i, i = S;
          }
          if (d || a % 1 || i % 1) {
            var g = Xf();
            return tn(a + g * (i - a + km("1e-" + ((g + "").length - 1))), i);
          }
          return E_(a, i);
        }
        var uy = Qs(function(a, i, d) {
          return i = i.toLowerCase(), a + (d ? RA(i) : i);
        });
        function RA(a) {
          return V_(ut(a).toLowerCase());
        }
        function OA(a) {
          return a = ut(a), a && a.replace(Le, Qm).replace(Nm, "");
        }
        function _y(a, i, d) {
          a = ut(a), i = On(i);
          var S = a.length;
          d = d === n ? S : Ts(He(d), 0, S);
          var g = d;
          return d -= i.length, d >= 0 && a.slice(d, g) == i;
        }
        function dy(a) {
          return a = ut(a), a && ds.test(a) ? a.replace(gn, eL) : a;
        }
        function cy(a) {
          return a = ut(a), a && Ii.test(a) ? a.replace(Dr, "\\$&") : a;
        }
        var fy = Qs(function(a, i, d) {
          return a + (d ? "-" : "") + i.toLowerCase();
        }), hy = Qs(function(a, i, d) {
          return a + (d ? " " : "") + i.toLowerCase();
        }), Ay = Dh("toLowerCase");
        function Ey(a, i, d) {
          a = ut(a), i = He(i);
          var S = i ? Ks(a) : 0;
          if (!i || S >= i)
            return a;
          var g = (i - S) / 2;
          return io(jl(g), d) + a + io(Kl(g), d);
        }
        function py(a, i, d) {
          a = ut(a), i = He(i);
          var S = i ? Ks(a) : 0;
          return i && S < i ? a + io(i - S, d) : a;
        }
        function Ty(a, i, d) {
          a = ut(a), i = He(i);
          var S = i ? Ks(a) : 0;
          return i && S < i ? io(i - S, d) + a : a;
        }
        function Sy(a, i, d) {
          return d || i == null ? i = 0 : i && (i = +i), yL(ut(a).replace(Qt, ""), i || 0);
        }
        function my(a, i, d) {
          return (d ? un(a, i, d) : i === n) ? i = 1 : i = He(i), p_(ut(a), i);
        }
        function Ly() {
          var a = arguments, i = ut(a[0]);
          return a.length < 3 ? i : i.replace(a[1], a[2]);
        }
        var by = Qs(function(a, i, d) {
          return a + (d ? "_" : "") + i.toLowerCase();
        });
        function vy(a, i, d) {
          return d && typeof d != "number" && un(a, i, d) && (i = d = n), d = d === n ? ae : d >>> 0, d ? (a = ut(a), a && (typeof i == "string" || i != null && !k_(i)) && (i = On(i), !i && Gs(a)) ? Ia(Ar(a), 0, d) : a.split(i, d)) : [];
        }
        var Iy = Qs(function(a, i, d) {
          return a + (d ? " " : "") + V_(i);
        });
        function gy(a, i, d) {
          return a = ut(a), d = d == null ? 0 : Ts(He(d), 0, a.length), i = On(i), a.slice(d, d + i.length) == i;
        }
        function yy(a, i, d) {
          var S = O.templateSettings;
          d && un(a, i, d) && (i = n), a = ut(a), i = So({}, i, S, $h);
          var g = So({}, i.imports, S.imports, $h), N = Vt(g), F = e_(g, N), $, V, J = 0, Q = i.interpolate || dt, ne = "__p += '", ce = n_(
            (i.escape || dt).source + "|" + Q.source + "|" + (Q === Kr ? Dl : dt).source + "|" + (i.evaluate || dt).source + "|$",
            "g"
          ), be = "//# sourceURL=" + (ct.call(i, "sourceURL") ? (i.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++Fm + "]") + `
`;
          a.replace(ce, function(Be, je, Je, Nn, _n, Dn) {
            return Je || (Je = Nn), ne += a.slice(J, Dn).replace(Ut, tL), je && ($ = !0, ne += `' +
__e(` + je + `) +
'`), _n && (V = !0, ne += `';
` + _n + `;
__p += '`), Je && (ne += `' +
((__t = (` + Je + `)) == null ? '' : __t) +
'`), J = Dn + Be.length, Be;
          }), ne += `';
`;
          var De = ct.call(i, "variable") && i.variable;
          if (!De)
            ne = `with (obj) {
` + ne + `
}
`;
          else if (ln.test(De))
            throw new xe(u);
          ne = (V ? ne.replace(us, "") : ne).replace(Nr, "$1").replace(Gn, "$1;"), ne = "function(" + (De || "obj") + `) {
` + (De ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + ($ ? ", __e = _.escape" : "") + (V ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + ne + `return __p
}`;
          var Ve = NA(function() {
            return it(N, be + "return " + ne).apply(n, F);
          });
          if (Ve.source = ne, q_(Ve))
            throw Ve;
          return Ve;
        }
        function Ry(a) {
          return ut(a).toLowerCase();
        }
        function Oy(a) {
          return ut(a).toUpperCase();
        }
        function Cy(a, i, d) {
          if (a = ut(a), a && (d || i === n))
            return qf(a);
          if (!a || !(i = On(i)))
            return a;
          var S = Ar(a), g = Ar(i), N = kf(S, g), F = Uf(S, g) + 1;
          return Ia(S, N, F).join("");
        }
        function Ny(a, i, d) {
          if (a = ut(a), a && (d || i === n))
            return a.slice(0, Vf(a) + 1);
          if (!a || !(i = On(i)))
            return a;
          var S = Ar(a), g = Uf(S, Ar(i)) + 1;
          return Ia(S, 0, g).join("");
        }
        function Dy(a, i, d) {
          if (a = ut(a), a && (d || i === n))
            return a.replace(Qt, "");
          if (!a || !(i = On(i)))
            return a;
          var S = Ar(a), g = kf(S, Ar(i));
          return Ia(S, g).join("");
        }
        function By(a, i) {
          var d = q, S = W;
          if (vt(i)) {
            var g = "separator" in i ? i.separator : g;
            d = "length" in i ? He(i.length) : d, S = "omission" in i ? On(i.omission) : S;
          }
          a = ut(a);
          var N = a.length;
          if (Gs(a)) {
            var F = Ar(a);
            N = F.length;
          }
          if (d >= N)
            return a;
          var $ = d - Ks(S);
          if ($ < 1)
            return S;
          var V = F ? Ia(F, 0, $).join("") : a.slice(0, $);
          if (g === n)
            return V + S;
          if (F && ($ += V.length - $), k_(g)) {
            if (a.slice($).search(g)) {
              var J, Q = V;
              for (g.global || (g = n_(g.source, ut(gi.exec(g)) + "g")), g.lastIndex = 0; J = g.exec(Q); )
                var ne = J.index;
              V = V.slice(0, ne === n ? $ : ne);
            }
          } else if (a.indexOf(On(g), $) != $) {
            var ce = V.lastIndexOf(g);
            ce > -1 && (V = V.slice(0, ce));
          }
          return V + S;
        }
        function wy(a) {
          return a = ut(a), a && _s.test(a) ? a.replace(fa, oL) : a;
        }
        var Py = Qs(function(a, i, d) {
          return a + (d ? " " : "") + i.toUpperCase();
        }), V_ = Dh("toUpperCase");
        function CA(a, i, d) {
          return a = ut(a), i = d ? n : i, i === n ? rL(a) ? dL(a) : zm(a) : a.match(i) || [];
        }
        var NA = We(function(a, i) {
          try {
            return yn(a, n, i);
          } catch (d) {
            return q_(d) ? d : new xe(d);
          }
        }), Fy = Jr(function(a, i) {
          return Yn(i, function(d) {
            d = Pr(d), Xr(a, d, M_(a[d], a));
          }), a;
        });
        function xy(a) {
          var i = a == null ? 0 : a.length, d = Ce();
          return a = i ? Lt(a, function(S) {
            if (typeof S[1] != "function")
              throw new Xn(o);
            return [d(S[0]), S[1]];
          }) : [], We(function(S) {
            for (var g = -1; ++g < i; ) {
              var N = a[g];
              if (yn(N[0], this, S))
                return yn(N[1], this, S);
            }
          });
        }
        function My(a) {
          return ob(Jn(a, p));
        }
        function W_(a) {
          return function() {
            return a;
          };
        }
        function $y(a, i) {
          return a == null || a !== a ? i : a;
        }
        var qy = wh(), ky = wh(!0);
        function mn(a) {
          return a;
        }
        function G_(a) {
          return uh(typeof a == "function" ? a : Jn(a, p));
        }
        function Uy(a) {
          return dh(Jn(a, p));
        }
        function Hy(a, i) {
          return ch(a, Jn(i, p));
        }
        var Vy = We(function(a, i) {
          return function(d) {
            return xi(d, a, i);
          };
        }), Wy = We(function(a, i) {
          return function(d) {
            return xi(a, d, i);
          };
        });
        function K_(a, i, d) {
          var S = Vt(i), g = Ql(i, S);
          d == null && !(vt(i) && (g.length || !S.length)) && (d = i, i = a, a = this, g = Ql(i, Vt(i)));
          var N = !(vt(d) && "chain" in d) || !!d.chain, F = ea(a);
          return Yn(g, function($) {
            var V = i[$];
            a[$] = V, F && (a.prototype[$] = function() {
              var J = this.__chain__;
              if (N || J) {
                var Q = a(this.__wrapped__), ne = Q.__actions__ = pn(this.__actions__);
                return ne.push({ func: V, args: arguments, thisArg: a }), Q.__chain__ = J, Q;
              }
              return V.apply(a, Ta([this.value()], arguments));
            });
          }), a;
        }
        function Gy() {
          return Kt._ === this && (Kt._ = pL), this;
        }
        function j_() {
        }
        function Ky(a) {
          return a = He(a), We(function(i) {
            return fh(i, a);
          });
        }
        var jy = I_(Lt), zy = I_(Pf), Yy = I_(Yu);
        function DA(a) {
          return D_(a) ? Xu(Pr(a)) : gb(a);
        }
        function Xy(a) {
          return function(i) {
            return a == null ? n : Ss(a, i);
          };
        }
        var Zy = Fh(), Jy = Fh(!0);
        function z_() {
          return [];
        }
        function Y_() {
          return !1;
        }
        function Qy() {
          return {};
        }
        function eR() {
          return "";
        }
        function tR() {
          return !0;
        }
        function nR(a, i) {
          if (a = He(a), a < 1 || a > Ae)
            return [];
          var d = ae, S = tn(a, ae);
          i = Ce(i), a -= ae;
          for (var g = Qu(S, i); ++d < a; )
            i(d);
          return g;
        }
        function rR(a) {
          return $e(a) ? Lt(a, Pr) : Cn(a) ? [a] : pn(Zh(ut(a)));
        }
        function aR(a) {
          var i = ++AL;
          return ut(a) + i;
        }
        var sR = so(function(a, i) {
          return a + i;
        }, 0), iR = g_("ceil"), lR = so(function(a, i) {
          return a / i;
        }, 1), oR = g_("floor");
        function uR(a) {
          return a && a.length ? Jl(a, mn, __) : n;
        }
        function _R(a, i) {
          return a && a.length ? Jl(a, Ce(i, 2), __) : n;
        }
        function dR(a) {
          return Mf(a, mn);
        }
        function cR(a, i) {
          return Mf(a, Ce(i, 2));
        }
        function fR(a) {
          return a && a.length ? Jl(a, mn, h_) : n;
        }
        function hR(a, i) {
          return a && a.length ? Jl(a, Ce(i, 2), h_) : n;
        }
        var AR = so(function(a, i) {
          return a * i;
        }, 1), ER = g_("round"), pR = so(function(a, i) {
          return a - i;
        }, 0);
        function TR(a) {
          return a && a.length ? Ju(a, mn) : 0;
        }
        function SR(a, i) {
          return a && a.length ? Ju(a, Ce(i, 2)) : 0;
        }
        return O.after = UI, O.ary = oA, O.assign = Og, O.assignIn = bA, O.assignInWith = So, O.assignWith = Cg, O.at = Ng, O.before = uA, O.bind = M_, O.bindAll = Fy, O.bindKey = _A, O.castArray = QI, O.chain = sA, O.chunk = ov, O.compact = uv, O.concat = _v, O.cond = xy, O.conforms = My, O.constant = W_, O.countBy = TI, O.create = Dg, O.curry = dA, O.curryRight = cA, O.debounce = fA, O.defaults = Bg, O.defaultsDeep = wg, O.defer = HI, O.delay = VI, O.difference = dv, O.differenceBy = cv, O.differenceWith = fv, O.drop = hv, O.dropRight = Av, O.dropRightWhile = Ev, O.dropWhile = pv, O.fill = Tv, O.filter = mI, O.flatMap = vI, O.flatMapDeep = II, O.flatMapDepth = gI, O.flatten = tA, O.flattenDeep = Sv, O.flattenDepth = mv, O.flip = WI, O.flow = qy, O.flowRight = ky, O.fromPairs = Lv, O.functions = kg, O.functionsIn = Ug, O.groupBy = yI, O.initial = vv, O.intersection = Iv, O.intersectionBy = gv, O.intersectionWith = yv, O.invert = Vg, O.invertBy = Wg, O.invokeMap = OI, O.iteratee = G_, O.keyBy = CI, O.keys = Vt, O.keysIn = Sn, O.map = fo, O.mapKeys = Kg, O.mapValues = jg, O.matches = Uy, O.matchesProperty = Hy, O.memoize = Ao, O.merge = zg, O.mergeWith = vA, O.method = Vy, O.methodOf = Wy, O.mixin = K_, O.negate = Eo, O.nthArg = Ky, O.omit = Yg, O.omitBy = Xg, O.once = GI, O.orderBy = NI, O.over = jy, O.overArgs = KI, O.overEvery = zy, O.overSome = Yy, O.partial = $_, O.partialRight = hA, O.partition = DI, O.pick = Zg, O.pickBy = IA, O.property = DA, O.propertyOf = Xy, O.pull = Nv, O.pullAll = rA, O.pullAllBy = Dv, O.pullAllWith = Bv, O.pullAt = wv, O.range = Zy, O.rangeRight = Jy, O.rearg = jI, O.reject = PI, O.remove = Pv, O.rest = zI, O.reverse = F_, O.sampleSize = xI, O.set = Qg, O.setWith = ey, O.shuffle = MI, O.slice = Fv, O.sortBy = kI, O.sortedUniq = Hv, O.sortedUniqBy = Vv, O.split = vy, O.spread = YI, O.tail = Wv, O.take = Gv, O.takeRight = Kv, O.takeRightWhile = jv, O.takeWhile = zv, O.tap = uI, O.throttle = XI, O.thru = co, O.toArray = SA, O.toPairs = gA, O.toPairsIn = yA, O.toPath = rR, O.toPlainObject = LA, O.transform = ty, O.unary = ZI, O.union = Yv, O.unionBy = Xv, O.unionWith = Zv, O.uniq = Jv, O.uniqBy = Qv, O.uniqWith = eI, O.unset = ny, O.unzip = x_, O.unzipWith = aA, O.update = ry, O.updateWith = ay, O.values = ni, O.valuesIn = sy, O.without = tI, O.words = CA, O.wrap = JI, O.xor = nI, O.xorBy = rI, O.xorWith = aI, O.zip = sI, O.zipObject = iI, O.zipObjectDeep = lI, O.zipWith = oI, O.entries = gA, O.entriesIn = yA, O.extend = bA, O.extendWith = So, K_(O, O), O.add = sR, O.attempt = NA, O.camelCase = uy, O.capitalize = RA, O.ceil = iR, O.clamp = iy, O.clone = eg, O.cloneDeep = ng, O.cloneDeepWith = rg, O.cloneWith = tg, O.conformsTo = ag, O.deburr = OA, O.defaultTo = $y, O.divide = lR, O.endsWith = _y, O.eq = pr, O.escape = dy, O.escapeRegExp = cy, O.every = SI, O.find = LI, O.findIndex = Qh, O.findKey = Pg, O.findLast = bI, O.findLastIndex = eA, O.findLastKey = Fg, O.floor = oR, O.forEach = iA, O.forEachRight = lA, O.forIn = xg, O.forInRight = Mg, O.forOwn = $g, O.forOwnRight = qg, O.get = U_, O.gt = sg, O.gte = ig, O.has = Hg, O.hasIn = H_, O.head = nA, O.identity = mn, O.includes = RI, O.indexOf = bv, O.inRange = ly, O.invoke = Gg, O.isArguments = bs, O.isArray = $e, O.isArrayBuffer = lg, O.isArrayLike = Tn, O.isArrayLikeObject = Dt, O.isBoolean = og, O.isBuffer = ga, O.isDate = ug, O.isElement = _g, O.isEmpty = dg, O.isEqual = cg, O.isEqualWith = fg, O.isError = q_, O.isFinite = hg, O.isFunction = ea, O.isInteger = AA, O.isLength = po, O.isMap = EA, O.isMatch = Ag, O.isMatchWith = Eg, O.isNaN = pg, O.isNative = Tg, O.isNil = mg, O.isNull = Sg, O.isNumber = pA, O.isObject = vt, O.isObjectLike = yt, O.isPlainObject = Hi, O.isRegExp = k_, O.isSafeInteger = Lg, O.isSet = TA, O.isString = To, O.isSymbol = Cn, O.isTypedArray = ti, O.isUndefined = bg, O.isWeakMap = vg, O.isWeakSet = Ig, O.join = Rv, O.kebabCase = fy, O.last = er, O.lastIndexOf = Ov, O.lowerCase = hy, O.lowerFirst = Ay, O.lt = gg, O.lte = yg, O.max = uR, O.maxBy = _R, O.mean = dR, O.meanBy = cR, O.min = fR, O.minBy = hR, O.stubArray = z_, O.stubFalse = Y_, O.stubObject = Qy, O.stubString = eR, O.stubTrue = tR, O.multiply = AR, O.nth = Cv, O.noConflict = Gy, O.noop = j_, O.now = ho, O.pad = Ey, O.padEnd = py, O.padStart = Ty, O.parseInt = Sy, O.random = oy, O.reduce = BI, O.reduceRight = wI, O.repeat = my, O.replace = Ly, O.result = Jg, O.round = ER, O.runInContext = H, O.sample = FI, O.size = $I, O.snakeCase = by, O.some = qI, O.sortedIndex = xv, O.sortedIndexBy = Mv, O.sortedIndexOf = $v, O.sortedLastIndex = qv, O.sortedLastIndexBy = kv, O.sortedLastIndexOf = Uv, O.startCase = Iy, O.startsWith = gy, O.subtract = pR, O.sum = TR, O.sumBy = SR, O.template = yy, O.times = nR, O.toFinite = ta, O.toInteger = He, O.toLength = mA, O.toLower = Ry, O.toNumber = tr, O.toSafeInteger = Rg, O.toString = ut, O.toUpper = Oy, O.trim = Cy, O.trimEnd = Ny, O.trimStart = Dy, O.truncate = By, O.unescape = wy, O.uniqueId = aR, O.upperCase = Py, O.upperFirst = V_, O.each = iA, O.eachRight = lA, O.first = nA, K_(O, function() {
          var a = {};
          return Br(O, function(i, d) {
            ct.call(O.prototype, d) || (a[d] = i);
          }), a;
        }(), { chain: !1 }), O.VERSION = r, Yn(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(a) {
          O[a].placeholder = O;
        }), Yn(["drop", "take"], function(a, i) {
          Ze.prototype[a] = function(d) {
            d = d === n ? 1 : $t(He(d), 0);
            var S = this.__filtered__ && !i ? new Ze(this) : this.clone();
            return S.__filtered__ ? S.__takeCount__ = tn(d, S.__takeCount__) : S.__views__.push({
              size: tn(d, ae),
              type: a + (S.__dir__ < 0 ? "Right" : "")
            }), S;
          }, Ze.prototype[a + "Right"] = function(d) {
            return this.reverse()[a](d).reverse();
          };
        }), Yn(["filter", "map", "takeWhile"], function(a, i) {
          var d = i + 1, S = d == te || d == re;
          Ze.prototype[a] = function(g) {
            var N = this.clone();
            return N.__iteratees__.push({
              iteratee: Ce(g, 3),
              type: d
            }), N.__filtered__ = N.__filtered__ || S, N;
          };
        }), Yn(["head", "last"], function(a, i) {
          var d = "take" + (i ? "Right" : "");
          Ze.prototype[a] = function() {
            return this[d](1).value()[0];
          };
        }), Yn(["initial", "tail"], function(a, i) {
          var d = "drop" + (i ? "" : "Right");
          Ze.prototype[a] = function() {
            return this.__filtered__ ? new Ze(this) : this[d](1);
          };
        }), Ze.prototype.compact = function() {
          return this.filter(mn);
        }, Ze.prototype.find = function(a) {
          return this.filter(a).head();
        }, Ze.prototype.findLast = function(a) {
          return this.reverse().find(a);
        }, Ze.prototype.invokeMap = We(function(a, i) {
          return typeof a == "function" ? new Ze(this) : this.map(function(d) {
            return xi(d, a, i);
          });
        }), Ze.prototype.reject = function(a) {
          return this.filter(Eo(Ce(a)));
        }, Ze.prototype.slice = function(a, i) {
          a = He(a);
          var d = this;
          return d.__filtered__ && (a > 0 || i < 0) ? new Ze(d) : (a < 0 ? d = d.takeRight(-a) : a && (d = d.drop(a)), i !== n && (i = He(i), d = i < 0 ? d.dropRight(-i) : d.take(i - a)), d);
        }, Ze.prototype.takeRightWhile = function(a) {
          return this.reverse().takeWhile(a).reverse();
        }, Ze.prototype.toArray = function() {
          return this.take(ae);
        }, Br(Ze.prototype, function(a, i) {
          var d = /^(?:filter|find|map|reject)|While$/.test(i), S = /^(?:head|last)$/.test(i), g = O[S ? "take" + (i == "last" ? "Right" : "") : i], N = S || /^find/.test(i);
          g && (O.prototype[i] = function() {
            var F = this.__wrapped__, $ = S ? [1] : arguments, V = F instanceof Ze, J = $[0], Q = V || $e(F), ne = function(je) {
              var Je = g.apply(O, Ta([je], $));
              return S && ce ? Je[0] : Je;
            };
            Q && d && typeof J == "function" && J.length != 1 && (V = Q = !1);
            var ce = this.__chain__, be = !!this.__actions__.length, De = N && !ce, Ve = V && !be;
            if (!N && Q) {
              F = Ve ? F : new Ze(this);
              var Be = a.apply(F, $);
              return Be.__actions__.push({ func: co, args: [ne], thisArg: n }), new Zn(Be, ce);
            }
            return De && Ve ? a.apply(this, $) : (Be = this.thru(ne), De ? S ? Be.value()[0] : Be.value() : Be);
          });
        }), Yn(["pop", "push", "shift", "sort", "splice", "unshift"], function(a) {
          var i = Ml[a], d = /^(?:push|sort|unshift)$/.test(a) ? "tap" : "thru", S = /^(?:pop|shift)$/.test(a);
          O.prototype[a] = function() {
            var g = arguments;
            if (S && !this.__chain__) {
              var N = this.value();
              return i.apply($e(N) ? N : [], g);
            }
            return this[d](function(F) {
              return i.apply($e(F) ? F : [], g);
            });
          };
        }), Br(Ze.prototype, function(a, i) {
          var d = O[i];
          if (d) {
            var S = d.name + "";
            ct.call(Xs, S) || (Xs[S] = []), Xs[S].push({ name: i, func: d });
          }
        }), Xs[ao(n, I).name] = [{
          name: "wrapper",
          func: n
        }], Ze.prototype.clone = wL, Ze.prototype.reverse = PL, Ze.prototype.value = FL, O.prototype.at = _I, O.prototype.chain = dI, O.prototype.commit = cI, O.prototype.next = fI, O.prototype.plant = AI, O.prototype.reverse = EI, O.prototype.toJSON = O.prototype.valueOf = O.prototype.value = pI, O.prototype.first = O.prototype.head, Ci && (O.prototype[Ci] = hI), O;
      }, js = cL();
      hs ? ((hs.exports = js)._ = js, Gu._ = js) : Kt._ = js;
    }).call(QU);
  }(Ji, Ji.exports)), Ji.exports;
}
var tH = eH();
function nH(e, {
  subTypeLocal: t = _(() => {
  })
}) {
  const n = f(e, "type"), r = f(e, "isStepsJustified");
  return {
    classWizard: _(() => {
      let l = `a_wizard a_wizard_${n.value}`;
      return r.value && (l += " a_wizard_justified"), t.value && (l += ` a_wizard_${n.value}_${tH.snakeCase(t.value)}`), l;
    })
  };
}
function rH(e, { emit: t }, {
  stepActiveComputed: n = _(() => 0),
  stepActiveLocal: r = B(0),
  stepsVisitedLocal: s = B({})
}) {
  const l = f(e, "isControlOutside"), o = f(e, "steps"), u = ({ stepIndex: T, step: m }) => {
    l.value ? t("goStepBack", {
      step: m,
      targetStepIndex: T,
      currentStepIndex: n.value
    }) : r.value = T;
  }, h = ({ stepIndex: T, step: m }) => {
    l.value ? t("goStepForward", {
      step: m,
      targetStepIndex: T,
      currentStepIndex: n.value
    }) : (r.value = T, s.value[T] = !0);
  };
  return {
    goOneStepBack: () => {
      n.value !== 0 && u({
        stepIndex: n.value - 1
      });
    },
    goOneStepForward: () => {
      n.value >= o.value.length - 1 || h({
        stepIndex: n.value + 1
      });
    },
    onStepClick: ({ stepIndex: T, step: m }) => {
      n.value !== T && (T < n.value ? u({ stepIndex: T, step: m }) : h({ stepIndex: T, step: m }));
    }
  };
}
function aH(e) {
  const t = f(e, "hasFocusJump"), n = f(e, "id"), r = B([]);
  return {
    setFocusToActiveStep: ({ stepActive: l }) => {
      t.value && !window.isScrollDisabled && setTimeout(() => {
        const o = `#${n.value}_${l}_focus`;
        aa({
          selector: o
        });
      });
    },
    wizardTabsRef: r
  };
}
function sH(e, {
  setFocusToActiveStep: t = () => {
  }
}) {
  const n = f(e, "stepActive"), r = f(e, "stepsVisited"), s = f(e, "isControlOutside"), l = B(!1), o = B(0), u = B({
    0: !0
  }), h = _(() => s.value ? n.value : o.value), A = _(() => s.value ? r.value : u.value), E = () => {
    s.value || le(n.value) || (o.value = n.value, u.value = {
      [n.value]: !0
    }), setTimeout(() => {
      l.value = !0;
    });
  };
  return tt(h, (p) => {
    l.value && t({ stepActive: p });
  }), {
    initStepActive: E,
    stepActiveComputed: h,
    stepActiveLocal: o,
    stepsVisitedComputed: A,
    stepsVisitedLocal: u
  };
}
function iH(e) {
  const t = f(e, "isMobile"), {
    isMobileWidth: n
  } = An();
  return {
    isMobileLocal: _(() => t.value || n.value)
  };
}
function lH(e, {
  stepActiveComputed: t = _(() => 0)
}) {
  const n = f(e, "steps"), r = _(() => n.value.length);
  return {
    stepActiveNumber: _(() => t.value + 1),
    stepsCount: r
  };
}
function oH(e) {
  const t = f(e, "toolbarBottomTeleportId"), n = _(() => !!t.value);
  return {
    toolbarBottomTeleportSelector: _(() => {
      if (n.value)
        return `#${t.value}`;
    }),
    useTeleportToolbarBottom: n
  };
}
function uH(e) {
  const t = f(e, "subType"), n = f(e, "type");
  return {
    subTypeLocal: _(() => {
      if (t.value)
        return t.value;
      if (n.value === "line")
        return "square";
    })
  };
}
const _H = {
  name: "AWizard",
  props: {
    ariaLabel: {
      type: String,
      required: !1,
      default: "_A_WIZARD_ARIA_LABEL_"
    },
    ariaLabelSteps: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_ARIA_LABEL_"
    },
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_"
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_TITLE_"
    },
    extra: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_"
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_TITLE_"
    },
    hasFocusJump: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_wizard_")
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isControlOutside: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMobile: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isStepsJustified: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isToolbarBottom: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isToolbarTop: {
      type: Boolean,
      required: !1,
      default: !1
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    stepActive: {
      type: Number,
      required: !1,
      default: void 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: bu
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: Lu
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    steps: {
      type: Array,
      required: !1,
      default: () => []
    },
    stepsProgressbarText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_"
    },
    stepsVisited: {
      type: Object,
      required: !1,
      default: void 0
    },
    subType: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e, t) => {
        const n = {
          arrows: [],
          basic: [],
          line: ["square", "circle", "square-bordered", "circle-bordered"],
          round: []
        };
        if (t) {
          if (t.type in n)
            return le(e) || n[t.type].indexOf(e) !== -1;
        } else
          return ["square", "circle", "square-bordered", "circle-bordered"].indexOf(e) !== -1;
        return !1;
      }
    },
    toolbarBottomTeleportId: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "basic",
      validator: (e) => ["arrows", "line", "round", "basic"].indexOf(e) !== -1
    }
  },
  emits: [
    "goStepBack",
    "goStepForward"
  ],
  setup(e, t) {
    const {
      subTypeLocal: n
    } = uH(e), {
      classWizard: r
    } = nH(e, {
      subTypeLocal: n
    }), {
      setFocusToActiveStep: s,
      wizardTabsRef: l
    } = aH(e), {
      initStepActive: o,
      stepActiveComputed: u,
      stepActiveLocal: h,
      stepsVisitedComputed: A,
      stepsVisitedLocal: E
    } = sH(e, {
      setFocusToActiveStep: s
    }), {
      ariaLabelAttributes: p,
      ariaLabelStepsAttributes: T,
      idProgressbar: m,
      wizardAriaDescribedby: L
    } = JU(e, {
      stepActiveComputed: u
    }), {
      goOneStepBack: b,
      goOneStepForward: v,
      onStepClick: I
    } = rH(e, t, {
      stepActiveComputed: u,
      stepActiveLocal: h,
      stepsVisitedLocal: E
    }), {
      stepActiveNumber: y,
      stepsCount: R
    } = lH(e, {
      stepActiveComputed: u
    }), {
      toolbarBottomTeleportSelector: D,
      useTeleportToolbarBottom: w
    } = oH(e), {
      isMobileLocal: M
    } = iH(e);
    return o(), {
      ariaLabelAttributes: p,
      ariaLabelStepsAttributes: T,
      classWizard: r,
      goOneStepBack: b,
      goOneStepForward: v,
      idProgressbar: m,
      isMobileLocal: M,
      onStepClick: I,
      stepActiveComputed: u,
      stepActiveNumber: y,
      stepsCount: R,
      stepsVisitedComputed: A,
      toolbarBottomTeleportSelector: D,
      useTeleportToolbarBottom: w,
      wizardAriaDescribedby: L,
      wizardTabsRef: l
    };
  },
  render() {
    const e = c(ZU, {
      backButtonAttributes: this.backButtonAttributes,
      backButtonClass: this.backButtonClass,
      backButtonIconLeft: this.backButtonIconLeft,
      backButtonIconRight: this.backButtonIconRight,
      backButtonText: this.backButtonText,
      backButtonTitle: this.backButtonTitle,
      extra: this.extra,
      forwardButtonAttributes: this.forwardButtonAttributes,
      forwardButtonClass: this.forwardButtonClass,
      forwardButtonIconLeft: this.forwardButtonIconLeft,
      forwardButtonIconRight: this.forwardButtonIconRight,
      forwardButtonText: this.forwardButtonText,
      forwardButtonTitle: this.forwardButtonTitle,
      isBackButtonDisabled: this.isBackButtonDisabled,
      isBackButtonHide: this.isBackButtonHide,
      isBackFirstButtonHide: this.isBackFirstButtonHide,
      isButtonsLoading: this.isButtonsLoading,
      isForwardButtonDisabled: this.isForwardButtonDisabled,
      isForwardButtonHide: this.isForwardButtonHide,
      isForwardLastButtonHide: this.isForwardLastButtonHide,
      stepActiveComputed: this.stepActiveComputed,
      steps: this.steps,
      onGoOneStepBack: this.goOneStepBack,
      onGoOneStepForward: this.goOneStepForward
    }, this.$slots);
    return c("div", {
      tabindex: 0,
      id: this.id,
      role: "application",
      "aria-describedby": this.wizardAriaDescribedby,
      class: [
        this.classWizard,
        {
          a_wizard_mobile: this.isMobileLocal,
          a_wizard_show_only_active_step_mobile: this.showOnlyActiveStepMobile
        }
      ],
      ...this.ariaLabelAttributes
    }, [
      c(Te, {
        id: this.idProgressbar,
        class: "a_sr_only",
        extra: {
          stepActive: this.stepActiveNumber,
          stepsCount: this.stepsCount
        },
        tag: "span",
        text: this.stepsProgressbarText
      }),
      c("ul", {
        class: "a_wizard__steps",
        role: "navigation",
        ...this.ariaLabelStepsAttributes
      }, [
        this.steps.map((t, n) => c(HU, {
          key: this.keyId ? t[this.keyId] : n,
          id: this.id,
          extra: this.extra,
          isBackButtonDisabled: this.isBackButtonDisabled,
          isBackStepButtonDisabled: this.isBackStepButtonDisabled,
          isForwardButtonDisabled: this.isForwardButtonDisabled,
          isForwardStepButtonDisabled: this.isForwardStepButtonDisabled,
          isMobile: this.isMobileLocal,
          isStepNumberVisible: this.isStepNumberVisible,
          showOnlyActiveStepMobile: this.showOnlyActiveStepMobile,
          step: t,
          stepActiveComputed: this.stepActiveComputed,
          stepIconError: this.stepIconError,
          stepIconWarning: this.stepIconWarning,
          stepIndex: n,
          stepsCount: this.stepsCount,
          onOnStepClick: this.onStepClick
        }, this.$slots))
      ]),
      this.isToolbarTop && e,
      c("div", {
        class: "a_wizard__tab_content"
      }, [
        this.steps.map((t, n) => c(KU, {
          key: this.keyId ? t[this.keyId] : n,
          id: this.id,
          extra: this.extra,
          step: t,
          stepActiveComputed: this.stepActiveComputed,
          stepIndex: n,
          stepsVisitedComputed: this.stepsVisitedComputed,
          wizardAriaDescribedby: this.wizardAriaDescribedby
        }, this.$slots))
      ]),
      this.isToolbarBottom && c(ia, {
        to: this.toolbarBottomTeleportSelector,
        disabled: !this.useTeleportToolbarBottom
      }, [
        e
      ])
    ]);
  }
};
function dH({ emit: e }) {
  return {
    goStepBackLocal: (r) => {
      e("goStepBack", r);
    },
    goStepForwardLocal: (r) => {
      e("goStepForward", r);
    }
  };
}
function cH(e) {
  const t = f(e, "id"), n = _(() => `${t.value}_footer`), r = _(() => `${t.value}_wizard`);
  return {
    footerId: n,
    wizardId: r
  };
}
function fH() {
  const e = B(void 0);
  return {
    initWizard: () => {
      au().then(
        () => {
          e.value = !0;
        }
      );
    },
    isWizardVisible: e
  };
}
const vde = {
  name: "AModalWizard",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isCloseButtonHide
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isFooterSticky
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalStyle
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorCloseIds
    },
    showCloseButtonHeader: {
      type: Boolean,
      required: !1,
      default: !0
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => ge.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    // WIZARD
    ariaLabel: {
      type: String,
      required: !1,
      default: "_A_WIZARD_ARIA_LABEL_"
    },
    ariaLabelSteps: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_ARIA_LABEL_"
    },
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_"
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_TITLE_"
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_"
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_TITLE_"
    },
    hasFocusJump: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_modal_wizard_")
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isControlOutside: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMobile: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isStepsJustified: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    stepActive: {
      type: Number,
      default: void 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: bu
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: Lu
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    steps: {
      type: Array,
      default: () => []
    },
    stepsProgressbarText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_"
    },
    subType: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e, t) => {
        const n = {
          arrows: [],
          basic: [],
          line: ["square", "circle", "square-bordered", "circle-bordered"],
          round: []
        };
        if (t) {
          if (t.type in n)
            return le(e) || n[t.type].indexOf(e) !== -1;
        } else
          return ["square", "circle", "square-bordered", "circle-bordered"].indexOf(e) !== -1;
        return !1;
      }
    },
    stepsVisited: {
      type: Object,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "basic",
      validator: (e) => ["arrows", "line", "round", "basic"].indexOf(e) !== -1
    }
  },
  emits: [
    "goStepBack",
    "goStepForward"
  ],
  setup(e, t) {
    const {
      goStepBackLocal: n,
      goStepForwardLocal: r
    } = dH(t), {
      footerId: s,
      wizardId: l
    } = cH(e), {
      initWizard: o,
      isWizardVisible: u
    } = fH();
    return o(), {
      footerId: s,
      goStepBackLocal: n,
      goStepForwardLocal: r,
      isWizardVisible: u,
      wizardId: l
    };
  },
  render() {
    return c(Mu, {
      alwaysTranslate: this.alwaysTranslate,
      backdropZIndex: this.backdropZIndex,
      close: this.close,
      closeButtonAttributes: this.closeButtonAttributes,
      closeButtonClass: this.closeButtonClass,
      closeButtonId: this.closeButtonId,
      closeButtonText: this.closeButtonText,
      closeButtonTextScreenReaderFooter: this.closeButtonTextScreenReaderFooter,
      closeButtonTextScreenReaderHeader: this.closeButtonTextScreenReaderHeader,
      disabled: this.disabled,
      disabledSave: this.disabledSave,
      extra: this.extra,
      focusStartId: this.focusStartId,
      headerTag: this.headerTag,
      headerText: this.headerText,
      hideHeader: this.hideHeader,
      id: this.id,
      isCloseButtonHide: this.isCloseButtonHide,
      isFooterSticky: this.isFooterSticky,
      isSaveButtonHide: this.isSaveButtonHide,
      loading: this.loading,
      modalClass: this.modalClass,
      modalStyle: this.modalStyle,
      save: this.save,
      saveButtonAttributes: this.saveButtonAttributes,
      saveButtonClass: this.saveButtonClass,
      saveButtonId: this.saveButtonId,
      saveButtonText: this.saveButtonText,
      saveButtonTextScreenReader: this.saveButtonTextScreenReader,
      selectorClose: this.selectorClose,
      selectorCloseIds: this.selectorCloseIds,
      showCloseButtonHeader: this.showCloseButtonHeader,
      size: this.size,
      stop: this.stop,
      useEscape: this.useEscape,
      useFocusOnStart: this.useFocusOnStart,
      zIndex: this.zIndex
    }, {
      ...this.$slots || {},
      modalBody: () => [
        this.isWizardVisible && c(_H, {
          id: this.wizardId,
          ariaLabel: this.ariaLabel,
          ariaLabelSteps: this.ariaLabelSteps,
          backButtonAttributes: this.backButtonAttributes,
          backButtonClass: this.backButtonClass,
          backButtonIconLeft: this.backButtonIconLeft,
          backButtonIconRight: this.backButtonIconRight,
          backButtonText: this.backButtonText,
          backButtonTitle: this.backButtonTitle,
          forwardButtonAttributes: this.forwardButtonAttributes,
          forwardButtonClass: this.forwardButtonClass,
          forwardButtonIconLeft: this.forwardButtonIconLeft,
          forwardButtonIconRight: this.forwardButtonIconRight,
          forwardButtonText: this.forwardButtonText,
          forwardButtonTitle: this.forwardButtonTitle,
          hasFocusJump: this.hasFocusJump,
          extra: this.extra,
          isBackButtonDisabled: this.isBackButtonDisabled,
          isBackButtonHide: this.isBackButtonHide,
          isBackFirstButtonHide: this.isBackFirstButtonHide,
          isBackStepButtonDisabled: this.isBackStepButtonDisabled,
          isButtonsLoading: this.isButtonsLoading,
          isControlOutside: this.isControlOutside,
          isForwardButtonDisabled: this.isForwardButtonDisabled,
          isForwardButtonHide: this.isForwardButtonHide,
          isForwardLastButtonHide: this.isForwardLastButtonHide,
          isForwardStepButtonDisabled: this.isForwardStepButtonDisabled,
          isMobile: this.isMobile,
          isStepNumberVisible: this.isStepNumberVisible,
          isStepsJustified: this.isStepsJustified,
          keyId: this.keyId,
          isToolbarBottom: !0,
          isToolbarTop: !1,
          showOnlyActiveStepMobile: this.showOnlyActiveStepMobile,
          stepActive: this.stepActive,
          stepIconError: this.stepIconError,
          stepIconErrorText: this.stepIconErrorText,
          stepIconWarning: this.stepIconWarning,
          stepIconWarningText: this.stepIconWarningText,
          steps: this.steps,
          stepsProgressbarText: this.stepsProgressbarText,
          stepsVisited: this.stepsVisited,
          subType: this.subType,
          toolbarBottomTeleportId: this.footerId,
          type: this.type,
          onGoStepBack: this.goStepBackLocal,
          onGoStepForward: this.goStepForwardLocal
        }, this.$slots)
      ],
      modalFooterPrepend: () => [
        this.$slots.modalWizardFooterPrepend && this.$slots.modalWizardFooterPrepend(),
        c("div", {
          id: this.footerId
        }),
        this.$slots.modalWizardFooterAppend && this.$slots.modalWizardFooterAppend()
      ]
    });
  }
}, Ide = {
  name: "ANotification",
  setup() {
    const {
      notifications: e,
      removeNotification: t
    } = $u();
    return {
      notifications: e,
      removeNotification: t
    };
  },
  render() {
    return c(ia, {
      to: "body"
    }, [
      c("div", {
        class: "a_notification_parent"
      }, this.notifications.map((e) => c($c, {
        key: e.index,
        alwaysTranslate: e.alwaysTranslate,
        isVisible: !0,
        closable: !0,
        type: e.type,
        alertClass: "a_notification",
        onClose: () => this.removeNotification(e.index)
      }, () => [
        c(Te, {
          alwaysTranslate: e.alwaysTranslate,
          html: e.text,
          extra: e.extra
        })
      ])))
    ]);
  }
}, qo = B("");
function hH(e) {
  const t = f(e, "title"), n = f(e, "extra"), {
    translationChanges: r
  } = Si(), {
    isPlaceholderTranslate: s,
    getTranslatedText: l
  } = Ms(), o = _(() => {
    if (r.value)
      return s(qo.value) ? l({
        placeholder: qo.value
      }) : qo.value;
  }), u = _(() => {
    if (r.value)
      return s(t.value) ? l({
        placeholder: t.value,
        extra: n.value
      }) : t.value;
  }), h = () => {
    let A = "";
    u.value ? (A = u.value, o.value && (A += ` - ${o.value}`)) : o.value && (A = o.value), document.title = A;
  };
  h(), tt(u, () => {
    h();
  });
}
function AH(e = "") {
  qo.value = e;
}
const gde = {
  name: "APageTabTitle",
  props: {
    title: {
      type: String,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    hH(e);
  },
  render() {
    return "";
  }
};
function EH(e, {
  currentItem: t = _(() => 1),
  maxItems: n = _(() => 1)
}) {
  const r = f(e, "disabled"), s = _(() => r.value || t.value === 1), l = _(() => r.value || t.value === n.value);
  return {
    disabledButtonFirstPage: s,
    disabledButtonLastPage: l
  };
}
function pH(e) {
  const t = f(e, "paginationMaxItems"), n = f(e, "offset"), r = f(e, "limit"), s = f(e, "totalRowsCount"), l = _(() => l$(t.value)), o = _(() => (n.value / r.value >> 0) + 1), u = _(() => GN(s.value / r.value)), h = _(() => Math.floor(t.value / 2)), A = _(() => t.value * 2 - 1), E = ({ currentItemIndex: T, paginationLength: m }) => {
    let L, b;
    const v = h.value, I = A.value;
    if (T <= v ? (L = 0, b = t.value) : T >= I - (v + 1) ? (L = I - t.value, b = I) : l.value ? (L = T - v + 1, b = T + v + 1) : (L = T - v, b = T + v + 1), b > m) {
      const y = b - m;
      b = m + 1, L = L - y, L < 0 && (L = 0);
    }
    return {
      indexStart: L,
      indexEnd: b
    };
  }, p = _(() => {
    const T = [];
    let m = -1;
    for (let v = t.value - 1; v > -t.value; v--) {
      const I = o.value - v;
      I > 0 && I <= u.value && T.push(I), v === 0 && (m = T.length - 1);
    }
    const {
      indexStart: L,
      indexEnd: b
    } = E({
      currentItemIndex: m,
      paginationLength: T.length
    });
    return T.slice(L, b);
  });
  return {
    currentItem: o,
    maxItems: u,
    paginationItems: p
  };
}
function TH(e, { emit: t }, {
  currentItem: n = _(() => 1),
  disabledButtonFirstPage: r = _(() => !1),
  disabledButtonLastPage: s = _(() => !1),
  maxItems: l = _(() => 1)
}) {
  const o = f(e, "disabled"), u = f(e, "limit"), h = f(e, "offset"), A = (R) => {
    if (o.value || R === n.value)
      return;
    const D = (R - 1) * u.value;
    t("update:offset", D);
  }, E = () => {
    r.value || t("update:offset", 0);
  }, p = () => {
    r.value || t("update:offset", h.value - u.value);
  }, T = () => {
    s.value || t("update:offset", (l.value - 1) * u.value);
  }, m = () => {
    s.value || t("update:offset", h.value + u.value);
  };
  return {
    keyDownUpdateOffset: (R, D) => {
      (R.keyCode === Z.enter || R.keyCode === Z.space) && (A(D), R.stopPropagation(), R.preventDefault());
    },
    keyDownUpdateOffsetFirst: (R) => {
      (R.keyCode === Z.enter || R.keyCode === Z.space) && (E(), R.stopPropagation(), R.preventDefault());
    },
    keyDownUpdateOffsetLast: (R) => {
      (R.keyCode === Z.enter || R.keyCode === Z.space) && (T(), R.stopPropagation(), R.preventDefault());
    },
    keyDownUpdateOffsetNext: (R) => {
      (R.keyCode === Z.enter || R.keyCode === Z.space) && (m(), R.stopPropagation(), R.preventDefault());
    },
    keyDownUpdateOffsetPrevious: (R) => {
      (R.keyCode === Z.enter || R.keyCode === Z.space) && (p(), R.stopPropagation(), R.preventDefault());
    },
    updateOffset: A,
    updateOffsetFirst: E,
    updateOffsetLast: T,
    updateOffsetNext: m,
    updateOffsetPrevious: p
  };
}
const SH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
  <path fill-rule="evenodd" d="M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
</svg>`, mH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M3.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L9.293 8 3.646 2.354a.5.5 0 0 1 0-.708"/>
  <path fill-rule="evenodd" d="M7.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L13.293 8 7.646 2.354a.5.5 0 0 1 0-.708"/>
</svg>`, LH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
</svg>`, bH = {
  name: "APaginationPages",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    limit: {
      type: Number,
      required: !0
    },
    mode: {
      type: String,
      required: !1,
      default: "normal",
      validator: (e) => ["normal", "short", "loadMore"].indexOf(e) !== -1
    },
    offset: {
      type: Number,
      required: !0
    },
    paginationMaxItems: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => Fa(e) && e > 0
    },
    totalRowsCount: {
      type: Number,
      required: !0
    }
  },
  emits: [
    "update:offset"
  ],
  setup(e, t) {
    const {
      currentItem: n,
      maxItems: r,
      paginationItems: s
    } = pH(e), {
      disabledButtonFirstPage: l,
      disabledButtonLastPage: o
    } = EH(e, {
      currentItem: n,
      maxItems: r
    }), {
      keyDownUpdateOffset: u,
      keyDownUpdateOffsetFirst: h,
      keyDownUpdateOffsetLast: A,
      keyDownUpdateOffsetNext: E,
      keyDownUpdateOffsetPrevious: p,
      updateOffset: T,
      updateOffsetFirst: m,
      updateOffsetLast: L,
      updateOffsetNext: b,
      updateOffsetPrevious: v
    } = TH(e, t, {
      currentItem: n,
      disabledButtonFirstPage: l,
      disabledButtonLastPage: o,
      maxItems: r
    });
    return {
      currentItem: n,
      disabledButtonFirstPage: l,
      disabledButtonLastPage: o,
      keyDownUpdateOffset: u,
      keyDownUpdateOffsetFirst: h,
      keyDownUpdateOffsetLast: A,
      keyDownUpdateOffsetNext: E,
      keyDownUpdateOffsetPrevious: p,
      maxItems: r,
      paginationItems: s,
      updateOffset: T,
      updateOffsetFirst: m,
      updateOffsetLast: L,
      updateOffsetNext: b,
      updateOffsetPrevious: v
    };
  },
  render() {
    return c(Te, {
      tag: "nav",
      class: "a_pagination__nav",
      "aria-label": "_A_PAGINATION_NAVIGATION_"
    }, {
      default: () => this.mode === "loadMore" ? c(ye, {
        class: "a_btn a_btn_primary",
        text: "Load more",
        type: "button"
      }) : [
        c("ul", {
          class: "a_pagination"
        }, [
          this.mode !== "short" ? c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonFirstPage }]
          }, [
            c(ye, {
              class: "a_pagination__item__link",
              iconLeft: SH,
              role: "button",
              tabindex: this.disabledButtonFirstPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_FIRST_PAGE_",
              title: "_A_PAGINATION_FIRST_PAGE_",
              type: "button",
              onClick: this.updateOffsetFirst,
              onKeydown: this.keyDownUpdateOffsetFirst
            })
          ]) : "",
          c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonFirstPage }]
          }, [
            c(ye, {
              class: "a_pagination__item__link",
              iconLeft: LH,
              role: "button",
              tabindex: this.disabledButtonFirstPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_PREVIOUS_PAGE_",
              title: "_A_PAGINATION_PREVIOUS_PAGE_",
              type: "button",
              onClick: this.updateOffsetPrevious,
              onKeydown: this.keyDownUpdateOffsetPrevious
            })
          ]),
          this.mode === "short" ? c("li", {
            class: "a_pagination__item"
          }, [
            c(Te, {
              class: "a_pagination__item__link disabled",
              html: "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_",
              extra: {
                currentPage: this.currentItem,
                allPages: this.maxItems
              }
            })
          ]) : this.paginationItems.map((e) => {
            const t = e === this.currentItem;
            return c("li", {
              class: ["a_pagination__item", {
                active: t,
                disabled: this.disabled
              }]
            }, [
              c(ye, {
                "aria-current": t ? !0 : void 0,
                class: "a_pagination__item__link",
                extra: {
                  page: e
                },
                role: "button",
                tabindex: t || this.disabled ? -1 : 0,
                tag: "a",
                text: e,
                textAriaHidden: !0,
                textScreenReader: "_A_PAGINATION_TO_PAGE_{{page}}_",
                title: "_A_PAGINATION_TO_PAGE_{{page}}_",
                type: "button",
                onClick: () => this.updateOffset(e),
                onKeydown: (n) => this.keyDownUpdateOffset(n, e)
              })
            ]);
          }),
          c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonLastPage }]
          }, [
            c(ye, {
              class: "a_pagination__item__link",
              iconLeft: jS,
              role: "button",
              tabindex: this.disabledButtonLastPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_NEXT_PAGE_",
              title: "_A_PAGINATION_NEXT_PAGE_",
              type: "button",
              onClick: this.updateOffsetNext,
              onKeydown: this.keyDownUpdateOffsetNext
            })
          ]),
          this.mode !== "short" ? c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonLastPage }]
          }, [
            c(ye, {
              class: "a_pagination__item__link",
              iconLeft: mH,
              role: "button",
              tabindex: this.disabledButtonLastPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_LAST_PAGE_",
              title: "_A_PAGINATION_LAST_PAGE_",
              type: "button",
              onClick: this.updateOffsetLast,
              onKeydown: this.keyDownUpdateOffsetLast
            })
          ]) : ""
        ])
      ]
    });
  }
};
function vH(e, { emit: t }) {
  const n = f(e, "isLoadingTable"), r = f(e, "limit"), s = _(() => `${r.value}`), l = (h) => {
    n.value || t("update:limit", +h);
  };
  return {
    changeLimit: l,
    changeLimitFromSelect: ({ model: h }) => {
      l(h);
    },
    keyDownChangeLimit: (h, A) => {
      (h.keyCode === Z.enter || h.keyCode === Z.space) && (l(A), h.stopPropagation(), h.preventDefault());
    },
    limitString: s
  };
}
function IH(e) {
  const t = f(e, "offset"), n = f(e, "rowsLength"), r = f(e, "countAllRows"), {
    filterCurrency: s
  } = or(), l = _(() => s(+t.value + 1, { suffix: "", digits: 0 })), o = _(() => s(+t.value + n.value, { suffix: "", digits: 0 })), u = _(() => s(r.value, { suffix: "", digits: 0 }));
  return {
    extraForTranslate: _(() => ({
      start: l.value,
      current: o.value,
      count: u.value
    }))
  };
}
const gH = {
  name: "APaginationCountPerPage",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    limit: {
      type: Number,
      required: !0
    },
    limitsPerPage: {
      type: Array,
      required: !1,
      default: () => ["10", "25", "50", "100"]
    },
    mode: {
      type: String,
      required: !1,
      default: "group",
      validator: (e) => ["inline", "group", "select"].indexOf(e) !== -1
    },
    offset: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    showTextCountFromTo: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: [
    "update:limit"
  ],
  setup(e, t) {
    const {
      changeLimit: n,
      changeLimitFromSelect: r,
      keyDownChangeLimit: s,
      limitString: l
    } = vH(e, t), {
      extraForTranslate: o
    } = IH(e);
    return {
      changeLimit: n,
      changeLimitFromSelect: r,
      extraForTranslate: o,
      keyDownChangeLimit: s,
      limitString: l
    };
  },
  render() {
    return c("div", {
      class: "a_pagination__counts"
    }, this.mode === "inline" || this.mode === "group" ? [
      this.showTextCountFromTo ? c(Te, {
        class: "a_pagination__count_from_to",
        html: "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_",
        extra: this.extraForTranslate
      }) : "",
      c(Te, {
        tag: "span",
        class: "a_pagination__count__text",
        html: "_A_COUNT_PER_PAGE_"
      }),
      this.mode === "inline" ? c("div", {
        class: "a_pagination__count"
      }, [
        this.limitsPerPage.map((e) => {
          const t = +e === this.limit;
          return c("div", {
            class: "a_pagination__count__item"
          }, [
            c(ye, {
              "aria-current": t ? !0 : void 0,
              class: "a_btn a_btn_link a_pagination__count__button",
              disabled: t || this.disabled,
              extra: {
                count: e
              },
              text: e,
              textAriaHidden: !0,
              textScreenReader: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              title: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              type: "button",
              onClick: () => this.changeLimit(e)
            })
          ]);
        })
      ]) : c("ul", {
        class: "a_pagination a_pagination_group"
      }, [
        this.limitsPerPage.map((e) => {
          const t = +e === this.limit;
          return c("li", {
            class: [
              "a_pagination__item",
              {
                active: t
              }
            ]
          }, [
            c(ye, {
              "aria-current": t ? !0 : void 0,
              class: "a_pagination__item__link",
              disabled: this.disabled,
              extra: {
                count: e
              },
              role: "button",
              tabindex: t || this.disabled ? -1 : 0,
              tag: "a",
              text: e,
              textAriaHidden: !0,
              textScreenReader: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              title: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              type: "button",
              onClick: () => this.changeLimit(e),
              onKeydown: (n) => this.keyDownChangeLimit(n, e)
            })
          ]);
        })
      ])
    ] : [
      this.showTextCountFromTo ? c(Te, {
        class: "a_pagination__count_from_to",
        html: "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_",
        extra: this.extraForTranslate
      }) : "",
      c(ws, {
        label: "_A_COUNT_PER_PAGE_",
        labelClass: "a_sr_only",
        data: this.limitsPerPage,
        isDataSimpleArray: !0,
        isLabelFloat: !1,
        deselectable: !1,
        menuWidthType: "by_content",
        modelValue: this.limitString,
        disabled: this.disabled,
        change: this.changeLimitFromSelect
      })
    ]);
  }
};
function yH(e, {
  isMobile: t = B(!1),
  updateLimit: n = () => {
  },
  updateOffset: r = () => {
  }
}) {
  const s = f(e, "modes"), l = f(e, "countAllRows"), o = f(e, "disabled"), u = f(e, "limitsPerPage"), h = f(e, "limit"), A = f(e, "offset"), E = f(e, "rowsLength"), p = f(e, "totalRowsCount"), T = f(e, "maxPages"), m = _(() => t.value ? s.value.mobile || {
    perPage: {
      mode: "select",
      position: 0,
      showTextCountFromTo: !1
    },
    pagination: {
      mode: "short",
      position: 1
    }
  } : s.value.desktop || {
    perPage: {
      mode: "inline",
      position: 0,
      showTextCountFromTo: !0
    },
    pagination: {
      mode: "normal",
      position: 1
    }
  }), L = _(() => {
    const v = [];
    return Y(m.value, (I, y) => {
      v.push({
        ...I,
        component: y
      });
    }), wd(v, "position");
  });
  return {
    components: _(() => {
      const v = [];
      return Y(L.value, (I) => {
        I.component === "perPage" ? v.push(c(gH, {
          countAllRows: l.value,
          disabled: o.value,
          limitsPerPage: u.value,
          limit: h.value,
          offset: A.value,
          rowsLength: E.value,
          mode: I.mode,
          showTextCountFromTo: I.showTextCountFromTo,
          "onUpdate:limit": n
        })) : I.component === "pagination" && v.push(c(bH, {
          limit: h.value,
          disabled: o.value,
          totalRowsCount: p.value,
          offset: A.value,
          paginationMaxItems: T.value,
          mode: I.mode,
          "onUpdate:offset": r
        }));
      }), v;
    })
  };
}
function RH(e, { emit: t }) {
  return {
    updateLimit: (s) => {
      t("update:limit", s);
    },
    updateOffset: (s) => {
      t("update:offset", s);
    }
  };
}
const OH = {
  name: "APagination",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hasRows: {
      type: Boolean,
      required: !0
    },
    limit: {
      type: Number,
      required: !0
    },
    limitsPerPage: {
      type: Array,
      required: !1,
      default: () => ["10", "25", "50", "100"]
    },
    maxPages: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => Fa(e) && e > 0
    },
    offset: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    totalRowsCount: {
      type: Number,
      required: !0
    },
    modes: {
      type: Object,
      required: !1,
      default: () => ({
        /*
         * perPage: inline / group / select
         * pagination: normal / short / loadMore
         */
        desktop: {
          perPage: {
            mode: "group",
            position: 0,
            showTextCountFromTo: !0
          },
          pagination: {
            mode: "normal",
            position: 1
          }
        },
        mobile: {
          perPage: {
            mode: "select",
            position: 0,
            showTextCountFromTo: !1
          },
          pagination: {
            mode: "short",
            position: 1
          }
        }
      })
    }
  },
  emits: [
    "update:limit",
    "update:offset"
  ],
  setup(e, t) {
    const {
      isMobileWidth: n
    } = An(), {
      updateLimit: r,
      updateOffset: s
    } = RH(e, t), {
      components: l
    } = yH(e, {
      isMobile: n,
      updateLimit: r,
      updateOffset: s
    });
    return {
      components: l,
      updateLimit: r,
      updateOffset: s
    };
  },
  render() {
    return this.hasRows ? c("div", {
      class: "a_pagination__parent"
    }, this.components) : null;
  }
};
function CH(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = f(e, "classProgressBar");
  return {
    classProgressBarLocal: _(() => Me(n.value) ? n.value(t.value) : n.value)
  };
}
function NH(e) {
  const t = f(e, "duration");
  return {
    durationLocal: _(() => {
      if (!le(t.value))
        return `${t.value}s`;
    })
  };
}
function YS(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = f(e, "valueTextInteger"), {
    filterCurrency: r
  } = or();
  return {
    valuePercent: _(() => n.value ? r(t.value, {
      suffix: "%",
      digits: 0
    }) : r(t.value, {
      suffix: "%",
      digits: 2
    }))
  };
}
function XS(e) {
  const t = f(e, "min"), n = f(e, "max"), r = f(e, "value");
  return {
    widthPercent: _(() => (r.value - t.value) / (n.value - t.value) * 100)
  };
}
const yde = {
  name: "AProgress",
  props: {
    classProgressBar: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    duration: {
      type: Number,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1,
      default: !1
    },
    max: {
      type: Number,
      required: !1,
      default: 100
    },
    min: {
      type: Number,
      required: !1,
      default: 0
    },
    reverse: {
      type: Boolean,
      required: !1,
      default: !1
    },
    showValue: {
      type: Boolean,
      required: !1,
      default: !0
    },
    striped: {
      type: Boolean,
      required: !1,
      default: !1
    },
    stripedFlow: {
      type: Boolean,
      required: !1,
      default: !1
    },
    value: {
      type: Number,
      required: !1,
      default: 0
    },
    valueTextInteger: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  setup(e) {
    const {
      widthPercent: t
    } = XS(e), {
      valuePercent: n
    } = YS(e, {
      widthPercent: t
    }), {
      classProgressBarLocal: r
    } = CH(e, {
      widthPercent: t
    }), {
      durationLocal: s
    } = NH(e);
    return {
      classProgressBarLocal: r,
      durationLocal: s,
      valuePercent: n,
      widthPercent: t
    };
  },
  render() {
    let e;
    return this.$slots.progressText ? e = c("span", {
      class: "a_progress__text"
    }, [
      this.$slots.progressText && this.$slots.progressText({
        valuePercent: this.valuePercent
      })
    ]) : this.showValue && (e = c("span", {
      class: "a_progress__text"
    }, this.valuePercent)), c("div", {
      class: ["a_progress", {
        a_progress_reverse: this.reverse
      }]
    }, [
      c("div", {
        class: [
          "a_progress__bar",
          {
            a_progress__bar_striped: this.striped,
            a_progress__bar_striped_flow: this.stripedFlow,
            a_progress__bar_indeterminate: this.indeterminate
          },
          this.classProgressBarLocal
        ],
        role: "progressbar",
        "aria-valuenow": this.value,
        "aria-valuemin": this.min,
        "aria-valuemax": this.max,
        style: {
          width: `${this.widthPercent}%`,
          "animation-duration": this.durationLocal
        }
      }, [
        e
      ])
    ]);
  }
};
function DH(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = f(e, "strokeWidth"), r = 50, s = 2 * Math.PI * r, l = _(() => t.value * s / 100), o = _(() => `${l.value}px ${s - l.value}px`), u = _(() => `stroke-dasharray: ${o.value};`), h = _(() => r + n.value / 2);
  return {
    circleStyles: u,
    cxCy: h,
    radius: r
  };
}
function BH(e) {
  const t = f(e, "width");
  return {
    sizesLocal: _(() => vn(t.value) ? `height: ${t.value}px; width: ${t.value}px;` : `height: ${t.value}; width: ${t.value};`)
  };
}
function wH(e) {
  const t = f(e, "rotate"), n = f(e, "strokeWidth"), r = _(() => {
    const l = 100 + n.value;
    return `0 0 ${l} ${l}`;
  });
  return {
    svgTransform: _(() => `transform: rotate(${t.value - 90}deg);`),
    svgViewBox: r
  };
}
const Rde = {
  name: "AProgressCircle",
  props: {
    duration: {
      type: Number,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1,
      default: !1
    },
    max: {
      type: Number,
      required: !1,
      default: 100
    },
    min: {
      type: Number,
      required: !1,
      default: 0
    },
    rotate: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0 && e <= 360
    },
    showValue: {
      type: Boolean,
      required: !1,
      default: !0
    },
    strokeWidth: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => e > 0
    },
    value: {
      type: Number,
      required: !1,
      default: 0
    },
    valueTextClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    valueTextInteger: {
      type: Boolean,
      required: !1,
      default: !1
    },
    width: {
      type: [Number, String],
      required: !1,
      default: 125
    }
  },
  setup(e) {
    const {
      widthPercent: t
    } = XS(e), {
      valuePercent: n
    } = YS(e, {
      widthPercent: t
    }), {
      circleStyles: r,
      cxCy: s,
      radius: l
    } = DH(e, {
      widthPercent: t
    }), {
      svgTransform: o,
      svgViewBox: u
    } = wH(e), {
      sizesLocal: h
    } = BH(e);
    return {
      circleStyles: r,
      cxCy: s,
      radius: l,
      sizesLocal: h,
      svgTransform: o,
      svgViewBox: u,
      valuePercent: n,
      widthPercent: t
    };
  },
  render() {
    let e;
    return this.$slots.progressText ? e = c("span", {
      class: ["a_progress_circle__text", this.valueTextClass]
    }, [
      this.$slots.progressText && this.$slots.progressText({
        valuePercent: this.valuePercent
      })
    ]) : this.showValue && (e = c("span", {
      class: ["a_progress_circle__text", this.valueTextClass]
    }, this.valuePercent)), c("div", {
      class: "a_progress_circle",
      style: this.sizesLocal,
      role: "progressbar",
      "aria-valuenow": this.value,
      "aria-valuemin": this.min,
      "aria-valuemax": this.max
    }, [
      c("svg", {
        viewBox: this.svgViewBox,
        style: this.svgTransform
      }, [
        c("circle", {
          class: "a_progress_circle__base",
          cx: this.cxCy,
          cy: this.cxCy,
          r: this.radius,
          "stroke-width": this.strokeWidth
        }),
        c("circle", {
          class: ["a_progress_circle__scale", {
            a_progress_circle__scale_indeterminate: this.indeterminate
          }],
          cx: this.cxCy,
          cy: this.cxCy,
          r: this.radius,
          "stroke-width": this.strokeWidth,
          style: this.circleStyles
        })
      ]),
      e
    ]);
  }
}, _f = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16">
  <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
</svg>`, np = {
  name: "ADecimalIcon",
  components: {
    AIcon: lt
  },
  props: {
    value: {
      type: Number,
      default: 50
    },
    color: {
      type: String,
      default: "yellow"
    },
    icon: {
      type: String,
      default: _f
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    }
  },
  render() {
    const e = {
      class: "a_decimal_rate_icon a_rate_icon_decimal",
      style: {
        position: "absolute",
        overflow: "hidden",
        width: `${this.value}%`,
        color: this.color
      }
    };
    return c("i", e, [
      c(lt, {
        icon: this.icon,
        class: `a_decimal_rate_icon a_rate_icon_${this.size}`
      })
    ]);
  }
}, ZS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star" viewBox="0 0 16 16">
  <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.56.56 0 0 0-.163-.505L1.71 6.745l4.052-.576a.53.53 0 0 0 .393-.288L8 2.223l1.847 3.658a.53.53 0 0 0 .393.288l4.052.575-2.906 2.77a.56.56 0 0 0-.163.506l.694 3.957-3.686-1.894a.5.5 0 0 0-.461 0z"/>
</svg>`, rp = {
  name: "ARateIcon",
  components: {
    AIcon: lt,
    ADecimalIcon: np
  },
  props: {
    value: {
      type: Number,
      default: 50
    },
    color: {
      type: String,
      default: "yellow"
    },
    icon: {
      type: String,
      default: ZS
    },
    iconFill: {
      type: String,
      default: _f
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    },
    isHovered: {
      type: Boolean,
      default: !1
    }
  },
  emits: [
    "mouseenter",
    "mouseleave",
    "click",
    "dblclick",
    "mousemove"
  ],
  setup(e, { emit: t }) {
    return {
      handleMouseEnter(n) {
        t("mouseenter", n);
      },
      handleMouseLeave(n) {
        t("mouseleave", n);
      },
      handleClick(n) {
        t("click", n);
      },
      handleDblClick(n) {
        t("dblclick", n);
      },
      handleMouseMove(n) {
        t("mousemove", n);
      }
    };
  },
  render() {
    return c(
      "span",
      {
        class: `el-rate__item a_rate_icon_${this.size}`,
        style: {
          position: "relative",
          display: "inline-flex",
          alignItems: "center",
          justifyContent: "center"
        },
        onClick: this.handleClick,
        onDblclick: this.handleDblClick,
        onMouseenter: this.handleMouseEnter,
        onMouseleave: this.handleMouseLeave,
        onMousemove: this.handleMouseMove
      },
      [
        c("div", { class: "a_rate_icon_align" }, [
          c(lt, {
            icon: this.icon,
            class: "a_decimal_rate_icon a_rate_decimal",
            color: this.color
          }),
          c(np, {
            icon: this.iconFill,
            value: this.value,
            color: this.color,
            size: this.size
          })
        ])
      ]
    );
  }
}, Ode = {
  name: "ARate",
  components: {
    AIcon: lt,
    ATranslation: Te,
    ARateIcon: rp
  },
  props: {
    text: {
      type: String,
      default: null
    },
    extra: {
      type: Object,
      required: !1
    },
    rating: {
      type: Number,
      default: 5
    },
    icon: {
      type: String,
      default: ZS
    },
    iconFill: {
      type: String,
      default: _f
    },
    readonly: {
      type: Boolean,
      default: !1
    },
    showScore: {
      type: Boolean,
      default: !1
    },
    modelValue: {
      type: Number,
      default: 0
    },
    color: {
      type: String,
      default: "yellow"
    },
    hoveredColor: {
      type: String,
      default: "orange"
    },
    halfIcon: {
      type: Boolean,
      default: !1
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const {
      text: n,
      rating: r,
      modelValue: s,
      showScore: l,
      readonly: o,
      icon: u,
      extra: h,
      color: A,
      hoveredColor: E,
      halfIcon: p,
      size: T
    } = bR(e), m = B(void 0), L = B(void 0), b = B(-1), v = () => {
      m.value = s.value, L.value = s.value;
    }, I = _(() => e.iconFill ? e.iconFill : `${e.icon}Fill`), y = () => {
      o.value || (m.value = 0, t("update:modelValue", m.value));
    }, R = (C, q) => {
      if (o.value)
        return;
      b.value = q;
      let W = q + 1;
      if (p.value) {
        const z = C.target.getBoundingClientRect();
        W = C.clientX - z.left < z.width / 2 ? q + 0.5 : q + 1;
      }
      L.value = W;
    }, D = () => {
      o.value || (b.value = -1);
    }, w = _(() => Array(r.value).fill(null).map((C, q) => q <= b.value ? E.value : q < m.value ? A.value : null)), M = (C, q) => {
      if (o.value)
        return;
      let W = q + 1;
      if (p.value) {
        const z = C.target.getBoundingClientRect();
        W = C.clientX - z.left < z.width / 2 ? q + 0.5 : q + 1;
      }
      t("update:modelValue", W), m.value = W;
    }, P = _(() => {
      const C = b.value >= 0 ? L.value : m.value, q = Math.floor(C), W = C % 1, z = Array(r.value).fill(0);
      for (let oe = 0; oe < q; oe++)
        z[oe] = 100;
      return W !== 0 && q < r.value && (z[q] = W * 100), z;
    }), x = (C, q) => {
      if (o.value)
        return;
      let W = q + 1;
      if (p.value) {
        const z = C.target.getBoundingClientRect();
        W = C.clientX - z.left < z.width / 2 ? q + 0.5 : q + 1;
      }
      L.value !== W && (L.value = W, b.value = q);
    };
    return v(), {
      rating: r,
      showScore: l,
      readonly: o,
      icon: u,
      iconFill: I,
      text: n,
      extra: h,
      color: A,
      size: T,
      onMouseEnterIcon: R,
      onMouseLeaveIcon: D,
      onClickIcon: M,
      onDoubleClickIcon: y,
      onMouseMoveIcon: x,
      modelValue: _(() => m.value),
      iconValues: P,
      computedColor: w
    };
  },
  render() {
    return c("div", { class: "a_rate_container" }, [
      ...Array.from({ length: this.rating }, (e, t) => c(rp, {
        class: "a_rate_icon",
        icon: this.icon,
        iconFill: this.iconFill,
        value: this.iconValues[t],
        onClick: (n) => this.onClickIcon(n, t),
        onDblclick: this.onDoubleClickIcon,
        onMouseenter: (n) => this.onMouseEnterIcon(n, t),
        onMouseleave: this.onMouseLeaveIcon,
        onMousemove: (n) => this.onMouseMoveIcon(n, t),
        color: this.computedColor[t],
        size: this.size,
        key: t
      })),
      this.showScore && c("span", { class: "a_rate_score" }, this.modelValue.toString()),
      c(Te, {
        class: "a_rate_label",
        text: this.text,
        extra: this.extra
      })
    ]);
  }
}, PH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
  <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0"/>
</svg>`, FH = {
  name: "AResizer",
  props: {
    direction: {
      type: String,
      required: !0,
      validator: (e) => ["x", "y"].indexOf(e) !== -1
    },
    disabled: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "mousedown",
    "mousemove",
    "mouseoutDocument",
    "mouseup"
  ],
  data() {
    return {
      clientHeight: 0,
      clientWidth: 0
    };
  },
  computed: {
    isDirectionX() {
      return this.direction === "x";
    },
    isDirectionY() {
      return this.direction === "y";
    },
    directionClass() {
      return `a_resizer_${this.direction}`;
    },
    directionIcon() {
      if (this.direction === "x")
        return PH;
      if (this.direction === "y")
        return Nl;
    },
    cursor() {
      if (this.direction === "x")
        return "w-resize";
      if (this.direction === "y")
        return "s-resize";
    },
    bodyClass() {
      return `a_resizer_${this.direction}_active__body`;
    },
    attributesResizer() {
      const e = {
        class: ["a_resizer", this.directionClass, {
          a_resizer_disabled: this.disabled
        }],
        ariaHidden: !0
      };
      return this.disabled || (e.onMousedown = this.mousedown), e;
    }
  },
  unmounted() {
    this.removeMouseEventListeners(), this.removeClassFromBody();
  },
  methods: {
    mousedown(e) {
      this.addMouseEventListeners(), this.clientHeight = document.documentElement.clientHeight, this.clientWidth = document.documentElement.clientWidth, this.$emit("mousedown", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.addClassToBody();
    },
    mousemove(e) {
      this.$emit("mousemove", {
        $event: e,
        clientX: e.clientX,
        clientY: e.clientY,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      });
    },
    mouseup(e) {
      this.removeMouseEventListeners(), this.$emit("mouseup", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.removeClassFromBody();
    },
    mouseoutDocument(e) {
      this.removeMouseEventListeners(), this.$emit("mouseoutDocument", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.removeClassFromBody();
    },
    addMouseEventListeners() {
      document.addEventListener("mousemove", this.mousemove), document.addEventListener("mouseup", this.mouseup), document.addEventListener("mouseleave", this.mouseoutDocument);
    },
    removeMouseEventListeners() {
      document.removeEventListener("mousemove", this.mousemove), document.removeEventListener("mouseup", this.mouseup), document.removeEventListener("mouseleave", this.mouseoutDocument);
    },
    addClassToBody() {
      document.body.classList.add(this.bodyClass);
    },
    removeClassFromBody() {
      document.body.classList.remove(this.bodyClass);
    }
  },
  render() {
    return c("div", this.attributesResizer, [
      c("div", {
        class: "a_resizer__line"
      }),
      c(lt, {
        class: "a_resizer__icon",
        icon: this.directionIcon
      })
    ]);
  }
}, xH = {
  name: "ACircle",
  props: {
    cx: {
      type: [Number, String],
      required: !0
    },
    cy: {
      type: [Number, String],
      required: !0
    },
    r: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("circle", {
      cx: this.cx,
      cy: this.cy,
      r: this.r,
      fill: this.fill,
      stroke: this.stroke,
      "stroke-width": this.strokeWidth
    });
  }
}, rl = {
  name: "ARect",
  props: {
    width: {
      type: [Number, String],
      required: !0
    },
    height: {
      type: [Number, String],
      required: !0
    },
    x: {
      type: [Number, String],
      required: !0
    },
    y: {
      type: [Number, String],
      required: !0
    },
    rx: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    ry: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("rect", {
      width: this.width,
      height: this.height,
      x: this.x,
      y: this.y,
      rx: this.rx,
      ry: this.ry,
      fill: this.fill,
      stroke: this.stroke,
      strokeWidth: this.strokeWidth
    });
  }
};
function MH(e) {
  const t = f(e, "yStandTop"), n = f(e, "pipesWidth"), r = f(e, "centerX"), s = f(e, "balanceWidth"), l = f(e, "balanceCircleRadius"), o = f(e, "balanceTopHeight"), u = f(e, "degree"), h = _(() => t.value - l.value - n.value / 2), A = _(() => s.value / 2), E = _(() => r.value - A.value - l.value), p = _(() => r.value + l.value), T = _(() => t.value - l.value), m = _(() => r.value - n.value / 2), L = _(() => T.value - l.value - o.value);
  return {
    transformRotate: _(() => `rotate(${u.value}, ${r.value}, ${T.value})`),
    widthBalancePipe: A,
    xBalanceLeft: E,
    xBalanceRight: p,
    xBalanceTopHeight: m,
    yBalance: h,
    yBalanceCenter: T,
    yBalanceTopHeight: L
  };
}
const $H = {
  name: "AScaleBalance",
  props: {
    degree: {
      type: Number,
      required: !0
    },
    pipesWidth: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    balanceWidth: {
      type: Number,
      required: !0
    },
    balanceCircleRadius: {
      type: Number,
      required: !0
    },
    balanceTopHeight: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      transformRotate: t,
      widthBalancePipe: n,
      xBalanceLeft: r,
      xBalanceRight: s,
      xBalanceTopHeight: l,
      yBalance: o,
      yBalanceCenter: u,
      yBalanceTopHeight: h
    } = MH(e);
    return {
      transformRotate: t,
      widthBalancePipe: n,
      xBalanceLeft: r,
      xBalanceRight: s,
      xBalanceTopHeight: l,
      yBalance: o,
      yBalanceCenter: u,
      yBalanceTopHeight: h
    };
  },
  render() {
    return c("g", {
      transform: this.transformRotate
    }, [
      c(rl, {
        width: this.pipesWidth,
        height: this.balanceTopHeight,
        x: this.xBalanceTopHeight,
        y: this.yBalanceTopHeight,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(rl, {
        width: this.widthBalancePipe,
        height: this.pipesWidth,
        x: this.xBalanceLeft,
        y: this.yBalance,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(rl, {
        width: this.widthBalancePipe,
        height: this.pipesWidth,
        x: this.xBalanceRight,
        y: this.yBalance,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(xH, {
        cx: this.centerX,
        cy: this.yBalanceCenter,
        r: this.balanceCircleRadius,
        fill: "none",
        stroke: "currentColor",
        strokeWidth: this.pipesWidth
      })
    ]);
  }
};
function qH(e) {
  const t = f(e, "direction"), n = f(e, "degree"), r = f(e, "balanceWidth"), s = f(e, "balanceCircleRadius"), l = f(e, "yStandTop"), o = f(e, "bowlThreadHeight"), u = f(e, "pipesWidth"), h = f(e, "centerX"), A = f(e, "bowlWidth"), E = _(() => r.value / 2 + s.value), p = _(() => l.value + o.value - u.value / 2 - s.value + 2), T = _(() => t.value === "right" ? n.value : n.value + 180), m = _(() => r.value / 2 + A.value / 2 + s.value - 2), L = _(() => r.value / 2 - A.value / 2 + s.value - 1), b = _(() => t.value === "left" ? h.value - m.value + E.value : h.value + L.value - E.value), v = _(() => (t.value === "right", E.value * Math.cos(T.value * Math.PI / 180) + b.value)), I = _(() => E.value * Math.sin(T.value * Math.PI / 180) + p.value);
  return {
    x: v,
    y: I
  };
}
const ap = {
  name: "AScaleBowl",
  props: {
    direction: {
      type: String,
      required: !0,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    },
    degree: {
      type: Number,
      required: !0
    },
    balanceWidth: {
      type: Number,
      required: !0
    },
    balanceCircleRadius: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    bowlThreadHeight: {
      type: Number,
      required: !0
    },
    pipesWidth: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    },
    bowlWidth: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      x: t,
      y: n
    } = qH(e);
    return {
      x: t,
      y: n
    };
  },
  render() {
    return c("use", {
      x: this.x,
      y: this.y,
      "xlink:href": "#scale_bowl"
    });
  }
}, kH = {
  name: "APath",
  props: {
    d: {
      type: String,
      required: !0,
      default: ""
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    fillRule: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["evenodd", "inherit", "initial", "nonzero", "revert", "unset"].indexOf(e) !== -1
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("path", {
      d: this.d,
      fill: this.fill,
      fillRule: this.fillRule,
      stroke: this.stroke,
      strokeWidth: this.strokeWidth
    });
  }
};
function UH(e) {
  const t = f(e, "points"), n = (s) => Bn(s, (o) => {
    let u = "";
    return ot(o) ? u = o : Se(o) && (u = o.join(",")), u;
  }).join(" ");
  return {
    pointsLocal: _(() => ot(t.value) ? t.value : Se(t.value) ? n(t.value) : "")
  };
}
const HH = {
  name: "APolyline",
  props: {
    points: {
      type: [Array, String],
      required: !0,
      default: []
    },
    fill: {
      type: String,
      required: !1,
      default: "none"
    },
    stroke: {
      type: String,
      required: !1,
      default: "currentColor"
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      pointsLocal: t
    } = UH(e);
    return {
      pointsLocal: t
    };
  },
  render() {
    return c("polyline", {
      points: this.pointsLocal,
      fill: this.fill,
      stroke: this.stroke,
      "stroke-width": this.strokeWidth
    });
  }
};
function VH(e) {
  const t = f(e, "bowlThreadHeight"), n = f(e, "bowlThreadWidth"), r = f(e, "bowlThreadPaddingX"), s = f(e, "bowlWidth"), l = f(e, "bowlRadius"), o = _(() => {
    const h = r.value, A = r.value + n.value / 2, E = r.value + n.value, p = 1, T = p - t.value;
    return `${h},${p} ${A},${T} ${E},${p}`;
  });
  return {
    bowlD: _(() => `m0,0 a${l.value},${l.value} 0 1,0 ${s.value},0 z`),
    bowlThreadPoints: o
  };
}
const WH = {
  name: "AScaleBowlDefs",
  props: {
    bowlThreadStrokeWidth: {
      type: Number,
      required: !0
    },
    bowlThreadWidth: {
      type: Number,
      required: !0
    },
    bowlThreadHeight: {
      type: Number,
      required: !0
    },
    bowlThreadPaddingX: {
      type: Number,
      required: !0
    },
    bowlWidth: {
      type: Number,
      required: !0
    },
    bowlRadius: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      bowlD: t,
      bowlThreadPoints: n
    } = VH(e);
    return {
      bowlD: t,
      bowlThreadPoints: n
    };
  },
  render() {
    return c("defs", {}, [
      c("g", {
        id: "scale_bowl"
      }, [
        c(HH, {
          points: this.bowlThreadPoints,
          strokeWidth: this.bowlThreadStrokeWidth
        }),
        c(kH, {
          d: this.bowlD,
          fill: "currentColor"
        })
      ])
    ]);
  }
};
function GH(e) {
  const t = f(e, "centerX"), n = f(e, "standWidth"), r = f(e, "pipesWidth"), s = _(() => t.value - r.value / 2), l = _(() => t.value - n.value / 2);
  return {
    xTop: s,
    xBottom: l
  };
}
const KH = {
  name: "AScaleStand",
  props: {
    pipesWidth: {
      type: Number,
      required: !0
    },
    standWidth: {
      type: Number,
      required: !0
    },
    standHeight: {
      type: Number,
      required: !0
    },
    yStandBottom: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      xBottom: t,
      xTop: n
    } = GH(e);
    return {
      xBottom: t,
      xTop: n
    };
  },
  render() {
    return c("g", null, [
      c(rl, {
        width: this.pipesWidth,
        height: this.standHeight,
        x: this.xTop,
        y: this.yStandTop,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(rl, {
        width: this.standWidth,
        height: this.pipesWidth,
        x: this.xBottom,
        y: this.yStandBottom,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      })
    ]);
  }
};
function jH(e) {
  const t = f(e, "value"), n = f(e, "classNegative"), r = f(e, "classPositive"), s = f(e, "classNeutral");
  return {
    cssClass: _(() => {
      if (t.value === 0) {
        if (s.value)
          return s.value;
      } else if (t.value < 0) {
        if (n.value)
          return n.value;
      } else if (r.value)
        return r.value;
    })
  };
}
function zH(e) {
  const t = f(e, "value"), n = f(e, "maxDegree");
  return {
    degree: _(() => n.value * t.value / 100)
  };
}
function YH(e) {
  const t = f(e, "viewBoxWidth"), n = f(e, "viewBoxHeight"), r = f(e, "pipesWidth"), s = f(e, "standHeight"), l = _(() => `0 0 ${t.value} ${n.value}`), o = _(() => t.value / 2), u = _(() => n.value - r.value), h = _(() => u.value - s.value + 1);
  return {
    centerX: o,
    viewBoxLocal: l,
    yStandBottom: u,
    yStandTop: h
  };
}
const Cde = {
  name: "AScale",
  props: {
    balanceCircleRadius: {
      type: Number,
      required: !1,
      default: 3.5
    },
    balanceTopHeight: {
      type: Number,
      required: !1,
      default: 6
    },
    balanceWidth: {
      type: Number,
      required: !1,
      default: 60
    },
    bowlRadius: {
      type: Number,
      required: !1,
      default: 12.6
    },
    bowlThreadHeight: {
      type: Number,
      required: !1,
      default: 20
    },
    bowlThreadPaddingX: {
      type: Number,
      required: !1,
      default: 4
    },
    bowlThreadStrokeWidth: {
      type: Number,
      required: !1,
      default: 2
    },
    bowlThreadWidth: {
      type: Number,
      required: !1,
      default: 16
    },
    bowlWidth: {
      type: Number,
      required: !1,
      default: 25
    },
    classNegative: {
      type: String,
      required: !1,
      default: void 0
    },
    classNeutral: {
      type: String,
      required: !1,
      default: void 0
    },
    classPositive: {
      type: String,
      required: !1,
      default: void 0
    },
    maxDegree: {
      type: Number,
      required: !1,
      default: 30
    },
    pipesWidth: {
      type: Number,
      required: !1,
      default: 3
    },
    standHeight: {
      type: Number,
      required: !1,
      default: 46
    },
    standWidth: {
      type: Number,
      required: !1,
      default: 70
    },
    value: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= -100 && e <= 100
    },
    viewBoxHeight: {
      type: Number,
      required: !1,
      default: 80
    },
    viewBoxWidth: {
      type: Number,
      required: !1,
      default: 100
    }
  },
  setup(e) {
    const {
      degree: t
    } = zH(e), {
      cssClass: n
    } = jH(e), {
      centerX: r,
      viewBoxLocal: s,
      yStandBottom: l,
      yStandTop: o
    } = YH(e);
    return {
      centerX: r,
      cssClass: n,
      degree: t,
      viewBoxLocal: s,
      yStandBottom: l,
      yStandTop: o
    };
  },
  render() {
    return c("div", {
      class: this.cssClass
    }, [
      c("svg", {
        viewBox: this.viewBoxLocal,
        version: "1.1",
        xmlns: "http://www.w3.org/2000/svg"
      }, [
        c(WH, {
          bowlThreadStrokeWidth: this.bowlThreadStrokeWidth,
          bowlThreadWidth: this.bowlThreadWidth,
          bowlThreadHeight: this.bowlThreadHeight,
          bowlThreadPaddingX: this.bowlThreadPaddingX,
          bowlWidth: this.bowlWidth,
          bowlRadius: this.bowlRadius
        }),
        c($H, {
          degree: this.degree,
          pipesWidth: this.pipesWidth,
          yStandTop: this.yStandTop,
          centerX: this.centerX,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          balanceTopHeight: this.balanceTopHeight
        }),
        c(KH, {
          standWidth: this.standWidth,
          standHeight: this.standHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          yStandBottom: this.yStandBottom,
          yStandTop: this.yStandTop
        }),
        c(ap, {
          direction: "left",
          degree: this.degree,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          yStandTop: this.yStandTop,
          bowlThreadHeight: this.bowlThreadHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          bowlWidth: this.bowlWidth
        }),
        c(ap, {
          direction: "right",
          degree: this.degree,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          yStandTop: this.yStandTop,
          bowlThreadHeight: this.bowlThreadHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          bowlWidth: this.bowlWidth
        })
      ])
    ]);
  }
};
function XH(e, {
  hasTextAndLength: t = B(!1),
  isMoreButtonObservingVisible: n = B(!1),
  isOpen: r = B(!1),
  isTextShorterThanTextLength: s = B(!1)
}) {
  const l = f(e, "btnIconLeftLess"), o = f(e, "btnIconLeftMore"), u = f(e, "btnIconRightLess"), h = f(e, "btnIconRightMore"), A = f(e, "btnTextLess"), E = f(e, "btnTextMore"), p = f(e, "btnTitleLess"), T = f(e, "btnTitleMore"), m = f(e, "showLess"), L = B(void 0), b = _(() => r.value ? A.value : E.value), v = _(() => r.value ? p.value : T.value), I = _(() => r.value ? l.value : o.value), y = _(() => r.value ? u.value : h.value), R = _(() => t.value ? s.value ? !1 : m.value ? !0 : !r.value : n.value ? m.value ? !0 : !r.value : !1);
  return {
    btnIconLeft: I,
    btnIconRight: y,
    btnText: b,
    btnTitle: v,
    buttonRef: L,
    isButtonVisible: R
  };
}
function ZH({
  hasTextAndLength: e = _(() => !1),
  isOpen: t = B(!1)
}) {
  return {
    ariaExpanded: _(() => {
      if (e.value)
        return t.value;
    })
  };
}
function JH(e, {
  hasTextAndLength: t = _(() => !1),
  isOpen: n = B(!1)
}) {
  const r = f(e, "height");
  return {
    maxHeightStyle: _(() => {
      if (!(t.value || n.value))
        return r.value === 0 ? "max-height: none;" : `max-height: ${r.value}px`;
    })
  };
}
function QH(e) {
  const t = f(e, "isOpenDefault"), n = B(void 0);
  return {
    initIsOpen: () => {
      n.value = t.value;
    },
    isOpen: n
  };
}
function eV(e, {
  isBtnHiddenDependentOnTextLength: t = _(() => !1)
}) {
  const n = f(e, "height"), r = B(void 0), s = B(void 0), l = B(void 0), o = () => {
    if (t.value)
      return;
    (fe(r.value, "offsetHeight") || 0) > n.value ? l.value = !0 : l.value = !1;
  };
  return {
    checkHeight: o,
    containerRef: r,
    isMoreButtonObservingVisible: l,
    startObservingMutation: () => {
      t.value || (s.value = new ResizeObserver(
        ol(() => {
          o();
        }, 300)
      ), s.value.observe(r.value));
    },
    stopObservingMutation: () => {
      t.value || s.value && s.value.unobserve(r.value);
    }
  };
}
function tV({
  hasTextAndLength: e = _(() => !1),
  isOpen: t = B(!1)
}) {
  return {
    textScreenReaderLocal: _(() => {
      if (!e.value)
        return t.value ? "_A_SHOW_MORE_LESS_SCREEN_READER_" : "_A_SHOW_MORE_MORE_SCREEN_READER_";
    })
  };
}
function nV(e, {
  isOpen: t = B(!1)
}) {
  const n = f(e, "text"), r = f(e, "textLength"), s = _(() => !!(n.value && r.value)), l = _(() => r.value > n.value.length), o = _(() => s.value && l.value), u = _(() => {
    const A = n.value.slice(0, r.value).trimEnd();
    let E = "...", p = !0;
    for (let T = A.length - 1; T > A.length - 4 && A[T] === "."; T--) {
      if (p)
        E = E.slice(0, -1);
      else
        break;
      p = !0;
    }
    return `${A}${E}`;
  }), h = _(() => {
    if (s.value) {
      if (l.value)
        return n.value;
      if (!t.value)
        return u.value;
    }
    return n.value;
  });
  return {
    hasTextAndLength: s,
    isBtnHiddenDependentOnTextLength: o,
    isTextShorterThanTextLength: l,
    textLocal: h
  };
}
function rV(e, {
  textLocal: t = _(() => {
  })
}) {
  const n = f(e, "safeHtml"), r = f(e, "html");
  return {
    isTextOrHtmlVisible: _(() => !!(t.value || n.value || r.value))
  };
}
function aV(e, { emit: t }, {
  containerRef: n = B(void 0),
  hasTextAndLength: r = _(() => !1),
  isOpen: s = B(!1),
  stopObservingMutation: l = () => {
  }
}) {
  const o = f(e, "showLess");
  return {
    isOpen: s,
    toggleButton: () => {
      s.value = !s.value, s.value && !o.value && l(), t("toggle", { isOpen: s.value }), r.value && s.value && !window.isScrollDisabled && au().then(
        () => aa({
          element: n.value
        })
      );
    }
  };
}
const Nde = {
  name: "AShowMore",
  inheritAttrs: !0,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    btnAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link a_p_0"
    },
    btnIconLeftLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconLeftMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnId: {
      type: String,
      required: !1,
      default: void 0
    },
    btnParentClass: {
      type: String,
      required: !1,
      default: "a_text_center"
    },
    btnTextLess: {
      type: String,
      required: !1,
      default: "_A_SHOW_MORE_LESS_"
    },
    btnTextMore: {
      type: String,
      required: !1,
      default: "_A_SHOW_MORE_MORE_"
    },
    btnTitleLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitleMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitlePlacement: {
      type: String,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    height: {
      type: Number,
      required: !1,
      default: 200,
      validator: (e) => e >= 0
    },
    html: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_show_more_")
    },
    isBtnTitleHtml: {
      type: Boolean,
      required: !1
    },
    isOpenDefault: {
      type: Boolean,
      required: !1,
      default: !1
    },
    safeHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    showLess: {
      type: Boolean,
      required: !1,
      default: !0
    },
    text: {
      type: String,
      required: !1,
      default: void 0
    },
    textLength: {
      type: Number,
      required: !1,
      default: void 0,
      validator: (e) => e > 0
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      isOpen: r
    } = QH(e), {
      hasTextAndLength: s,
      isBtnHiddenDependentOnTextLength: l,
      isTextShorterThanTextLength: o,
      textLocal: u
    } = nV(e, {
      isOpen: r
    }), {
      isTextOrHtmlVisible: h
    } = rV(e, {
      textLocal: u
    }), {
      checkHeight: A,
      containerRef: E,
      isMoreButtonObservingVisible: p,
      startObservingMutation: T,
      stopObservingMutation: m
    } = eV(e, {
      isBtnHiddenDependentOnTextLength: l
    }), {
      toggleButton: L
    } = aV(e, t, {
      containerRef: E,
      hasTextAndLength: s,
      isOpen: r,
      stopObservingMutation: m
    }), {
      btnIconLeft: b,
      btnIconRight: v,
      btnText: I,
      btnTitle: y,
      buttonRef: R,
      isButtonVisible: D
    } = XH(e, {
      hasTextAndLength: s,
      isMoreButtonObservingVisible: p,
      isOpen: r,
      isTextShorterThanTextLength: o
    }), {
      maxHeightStyle: w
    } = JH(e, {
      hasTextAndLength: s,
      isOpen: r
    }), {
      textScreenReaderLocal: M
    } = tV({
      hasTextAndLength: s,
      isOpen: r
    }), {
      ariaExpanded: P
    } = ZH({
      hasTextAndLength: s,
      isOpen: r
    });
    return n({
      buttonRef: R,
      containerRef: E,
      isOpen: r,
      toggleButton: L
    }), Vr(() => {
      A(), T();
    }), Ct(() => {
      m();
    }), {
      ariaExpanded: P,
      btnIconLeft: b,
      btnIconRight: v,
      btnText: I,
      btnTitle: y,
      buttonRef: R,
      containerRef: E,
      hasTextAndLength: s,
      isButtonVisible: D,
      isOpen: r,
      isTextOrHtmlVisible: h,
      maxHeightStyle: w,
      textLocal: u,
      textScreenReaderLocal: M,
      toggleButton: L
    };
  },
  render() {
    return c("div", {
      class: [
        "a_show_more",
        {
          a_show_more_open: this.isOpen
        }
      ]
    }, [
      c("div", {
        class: "a_show_more__wrapper",
        style: this.maxHeightStyle
      }, [
        c("div", {
          ref: "containerRef",
          id: this.id,
          ariaExpanded: this.ariaExpanded,
          ...this.$attrs
        }, [
          this.isTextOrHtmlVisible && c(Te, {
            alwaysTranslate: this.alwaysTranslate,
            tag: "div",
            text: this.textLocal,
            html: this.html,
            safeHtml: this.safeHtml
          }),
          this.$slots.default && this.$slots.default({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          })
        ])
      ]),
      this.isButtonVisible && c("div", {
        class: this.btnParentClass
      }, [
        c(rt, {
          ref: "buttonRef",
          id: this.btnId,
          alwaysTranslate: this.alwaysTranslate,
          "aria-controls": this.id,
          class: [
            "a_show_more__button",
            this.btnClass
          ],
          disabled: this.disabled,
          iconLeft: this.btnIconLeft,
          iconRight: this.btnIconRight,
          isTitleHtml: this.isBtnTitleHtml,
          text: this.btnText,
          textAriaHidden: !this.hasTextAndLength,
          textScreenReader: this.textScreenReaderLocal,
          title: this.btnTitle,
          titlePlacement: this.btnTitlePlacement,
          ...this.btnAttributes,
          onClick: this.toggleButton
        }, () => this.$slots.button && this.$slots.button({
          isButtonVisible: this.isButtonVisible,
          isOpen: this.isOpen
        }))
      ])
    ]);
  }
};
function sV(e, {
  ariaSort: t = _(() => ({})),
  attributesForRoot: n = _(() => ({})),
  columnsStyles: r = _(() => ""),
  isLocked: s = _(() => !1),
  isSorting: l = _(() => !1),
  titlesSort: o = _(() => [])
}) {
  const u = f(e, "column"), h = f(e, "columnIndex"), A = f(e, "hasMultipleActions"), E = _e("isLoadingOptions"), p = _e("isLoadingOptions"), T = _(() => [
    "a_table__th a_table__cell",
    {
      a_table__th_draggable: !s.value && !p.value && E.value,
      a_table__th_sorting: l.value
    },
    u.value.classHeaderParent
  ]), m = _(() => {
    const b = [];
    return (u.value.title || u.value.title === 0) && b.push(u.value.title), b.push(...o.value), b;
  });
  return {
    attributesForTh: _(() => {
      let b = h.value + 1;
      return A.value && b++, {
        ...t.value,
        ...n.value,
        "aria-colindex": b,
        ref: "root",
        role: "columnheader",
        class: T.value,
        style: r.value
      };
    }),
    titlesLocal: m
  };
}
function iV(e) {
  const t = f(e, "column"), n = _e("columnsVisibleAdditionalSpaceForOneGrow", 0), r = _(() => le(t.value.grow) ? 1 : t.value.grow);
  return {
    additionalWidthForCurrentColumn: _(() => n.value * r.value)
  };
}
function JS(e) {
  const t = f(e, "column"), n = _e("columnWidthDefault"), {
    additionalWidthForCurrentColumn: r
  } = iV(e), s = _(() => t.value.width || n.value), l = _(() => s.value + r.value), o = _(() => `width: ${l.value}px; min-width: ${l.value}px; max-width: ${l.value}px;`);
  return {
    columnsStyles: _(() => t.value.style ? `${o.value} ${t.value.style}` : o.value)
  };
}
const sp = "a_table__drag_element";
function QS(e, { emit: t }, {
  classOverString: n = "",
  inDropdown: r = !1
}) {
  const s = f(e, "column"), l = f(e, "columnIndex"), o = f(e, "columnIndexDraggable"), u = _e("isLoadingOptions"), h = _e("isColumnsDnd"), A = B(null), E = _(() => o.value > l.value ? n : `${n}_right`), p = (y) => {
    var R, D, w;
    if ((R = y.target) == null || R.classList.add(sp), r) {
      const M = ((D = y.target) == null ? void 0 : D.offsetHeight) || 30;
      (w = y.target) == null || w.parentElement.style.setProperty("--a_table_draggable_li_height", `${M}px`);
    }
    y.dataTransfer.effectAllowed = "move", t("dragstartParent", {
      columnIndex: l.value
    });
  }, T = (y) => {
    var R, D;
    (R = y.target) == null || R.classList.remove(E.value), (D = y.target) == null || D.classList.remove(sp), t("dragendParent");
  }, m = () => {
    A.value && A.value.classList && A.value.classList.add(E.value), t("dragenterParent", {
      columnIndex: l.value
    });
  }, L = (y) => (y.preventDefault && y.preventDefault(), !1), b = () => {
    A.value && A.value.classList && A.value.classList.remove(E.value), t("dragleaveParent", {
      columnIndex: l.value
    });
  }, v = _(() => !!s.value.locked);
  return {
    attributesForRoot: _(() => {
      const y = {
        ref: "root"
      };
      return !v.value && h.value && (y.draggable = !u.value, y.onDragstart = p, y.onDragend = T, y.onDragenter = m, y.onDragover = L, y.onDragleave = b), y;
    }),
    isLocked: v,
    root: A
  };
}
const lV = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-down-fill" viewBox="0 0 16 16">
  <path d="M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z"/>
</svg>`, oV = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-up-fill" viewBox="0 0 16 16">
  <path d="m7.247 4.86-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z"/>
</svg>`, ai = B({
  propsDefault: {
    borderType: "bordered"
  },
  config: {
    isHtmlTitleSort: !1
  }
}), Dde = {
  install: (e, {
    propsDefault: t = {},
    config: n = {}
  } = {}) => {
    ai.value.propsDefault = {
      ...ai.value.propsDefault,
      ...t
    }, ai.value.config = {
      ...ai.value.config,
      ...n
    };
  }
};
function uV(e) {
  const t = f(e, "column"), n = f(e, "columnIndex"), r = f(e, "disabledSort"), s = f(e, "isSortingMultiColumn"), l = f(e, "modelSort"), o = f(e, "showFirstSortingSequenceNumber"), u = _e("changeModelSort"), h = _e("tableId"), A = _(() => t.value.sortId), E = _(() => !!A.value), p = _(() => l.value.indexOf(A.value)), T = _(() => l.value.indexOf(`-${A.value}`)), m = _(() => p.value !== -1), L = _(() => T.value !== -1), b = _(() => E.value && (m.value || L.value)), v = _(() => {
    if (E.value) {
      let C = "none";
      return m.value ? C = "ascending" : L.value && (C = "descending"), {
        "aria-sort": C
      };
    }
    return {};
  }), I = _(() => c(lt, {
    icon: oV,
    class: "a_table__th__sort__icon a_table__th__sort__icon_up"
  })), y = _(() => c(lt, {
    icon: lV,
    class: "a_table__th__sort__icon a_table__th__sort__icon_down"
  })), R = _(() => {
    const C = [];
    return E.value && (L.value || C.push(I.value), m.value || C.push(y.value)), C;
  }), D = ({ $event: C }) => {
    r.value || u({
      $event: C,
      sortId: A.value
    });
  }, w = _(() => `${h.value}_th_${n.value}_screen_reader`), M = _(() => {
    var C;
    return E.value ? {
      type: "button",
      disabled: r.value,
      isTitleHtml: ((C = ai.value.config) == null ? void 0 : C.isHtmlTitleSort) || !1,
      "aria-describedby": w.value,
      onClick: D
    } : {
      tag: "span"
    };
  }), P = _(() => {
    if (!(!s.value && !b.value) && !(l.value.length <= 1 && !o.value)) {
      if (p.value !== -1)
        return p.value + 1;
      if (T.value !== -1)
        return T.value + 1;
    }
  }), x = _(() => {
    const C = [];
    return E.value && (C.push("_A_TABLE_SORT_TITLE_"), s.value && C.push("_A_TABLE_SORT_TITLE_MULTI_COLUMN_")), C;
  });
  return {
    ariaSort: v,
    attributesForButtonSort: M,
    columnTextScreenReaderId: w,
    iconsSortable: R,
    isSortable: E,
    isSorting: b,
    sequenceNumberSort: P,
    titlesSort: x
  };
}
const Jd = {
  name: "ATableHeaderTh",
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnGroupNames: {
      type: Array,
      required: !1,
      default: void 0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    columnIndexDraggable: {
      type: Number,
      required: !1,
      default: -1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !1
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "dragendParent",
    "dragstartParent",
    "dragenterParent",
    "dragleaveParent"
  ],
  inject: [
    "changeModelSort",
    "isColumnsDnd",
    "isLoadingOptions",
    "isLoadingTable"
  ],
  setup(e, t) {
    const {
      columnsStyles: n
    } = JS(e), {
      attributesForRoot: r,
      isLocked: s,
      root: l
    } = QS(e, t, {
      classOverString: "a_table__th_over",
      inDropdown: !1
    }), {
      ariaSort: o,
      attributesForButtonSort: u,
      columnTextScreenReaderId: h,
      iconsSortable: A,
      isSortable: E,
      isSorting: p,
      sequenceNumberSort: T,
      titlesSort: m
    } = uV(e), {
      attributesForTh: L,
      titlesLocal: b
    } = sV(e, {
      ariaSort: o,
      attributesForRoot: r,
      columnsStyles: n,
      isLocked: s,
      isSorting: p,
      titlesSort: m
    });
    return {
      attributesForButtonSort: u,
      attributesForTh: L,
      columnTextScreenReaderId: h,
      columnsStyles: n,
      iconsSortable: A,
      isSortable: E,
      root: l,
      sequenceNumberSort: T,
      titlesLocal: b,
      titlesSort: m
    };
  },
  render() {
    return c("div", this.attributesForTh, [
      c("div", {
        class: [
          "a_table__cell__child"
        ]
      }, [
        this.columnGroupNames && c(Te, {
          html: this.columnGroupNames,
          tag: "span",
          class: "a_sr_only"
        }),
        c(Te, {
          id: this.columnTextScreenReaderId,
          text: this.titlesLocal,
          tag: "span",
          class: "a_sr_only",
          ariaHidden: !0
        }),
        c(rt, {
          class: [
            "a_table__th__btn",
            this.column.class,
            this.column.classHeader,
            {
              "a_btn a_btn_link a_table__th__btn_sort": this.isSortable,
              a_table__th__btn_sequence: this.sequenceNumberSort
            }
          ],
          iconLeft: this.column.icon,
          iconClass: "a_table__th__icon",
          extra: this.column.extra,
          title: this.titlesLocal,
          textScreenReader: this.column.textScreenReader || void 0,
          ...this.attributesForButtonSort
        }, () => [
          this.column.label && c(Te, {
            html: this.column.label,
            tag: "span",
            extra: this.column.extra,
            class: "a_table__th__text aloha_element__ml_0",
            ariaHidden: !!this.column.textScreenReader
          }),
          this.isSortable && c("span", {
            class: "a_table__th__sort__box aloha_element__ml_0"
          }, [
            this.sequenceNumberSort && c("span", {
              class: [
                "a_table__th__sort__sequence_num",
                this.sortingSequenceNumberClass
              ]
            }, this.sequenceNumberSort),
            c("span", {
              class: "a_table__th__sort__icons"
            }, [
              ...this.iconsSortable
            ])
          ])
        ])
      ])
    ]);
  }
};
function _V(e, {
  attributesForRoot: t = _(() => ({})),
  isColumnVisible: n = _(() => !1),
  isLocked: r = _(() => !1),
  labelTranslated: s = _(() => "")
}) {
  const l = f(e, "searchColumnModel"), o = _(() => {
    if (!l.value)
      return !0;
    const h = new RegExp(Au(l.value), "gi");
    return `${s.value}`.search(h) !== -1;
  });
  return {
    attributesComponent: _(() => {
      const h = {
        ...t.value,
        class: "a_table__th__dropdown__li"
      };
      return o.value || (h.style = "display: none;"), !r.value && !n.value && (h.class += " a_table__th__dropdown__li_invisible"), h;
    })
  };
}
const dV = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01757813,0,0,0.01757813,-3.96314e-5,1.7578125e-5)"
  >
    <path
      d="m 493.034,717.353 v 0 c -22.097,-7.811 -37.924,-28.881 -37.924,-53.651 0,-31.421 25.469,-56.89 56.89,-56.89 31.421,0 56.89,25.469 56.89,56.89 0,24.769 -15.833,45.843 -37.924,53.651 v 98.392 c 0,9.98 -8.486,18.618 -18.966,18.618 -10.164,0 -18.966,-8.339 -18.966,-18.618 z m -265.48,-300.17 v 0 0 C 164.683,417.358 113.78,467.989 113.78,531.324 v 189.27 c 0,167.568 136.008,303.405 303.372,303.405 h 189.695 c 167.548,0 303.372,-136.179 303.372,-303.405 v -189.27 c 0,-62.93 -50.854,-113.956 -113.774,-114.141 V 284.414 C 796.445,127.332 668.777,-0.001 512,-0.001 c -157.093,0 -284.445,127.307 -284.445,284.415 v 132.769 z m 113.779,0 V 284.476 c 0,-94.496 76.411,-170.699 170.665,-170.699 94.063,0 170.665,76.426 170.665,170.699 V 417.183 H 341.33 Z"
    />
  </g>
</svg>`;
function cV(e, {
  isLocked: t = _(() => !1)
}) {
  const n = f(e, "column"), r = f(e, "disabledOptions"), s = _e("changeModelColumnsVisible"), l = _e("modelColumnsVisibleLocal"), o = _(() => n.value.id in l.value ? !!l.value[n.value.id] : !n.value.hide), u = _(() => t.value ? dV : o.value ? jT : KT), h = _(() => t.value ? "_A_TABLE_OPTIONS_BTN_LOCK_TITLE_" : o.value ? "_A_TABLE_OPTIONS_BTN_EYE_TITLE_" : "_A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_"), A = ({ $event: p }) => {
    p.stopPropagation(), p.preventDefault();
    const T = pe(l.value);
    T[n.value.id] = !o.value, s(T);
  };
  return {
    buttonVisibleProps: _(() => {
      const p = {
        class: "a_table__th__dropdown_item__icon",
        tag: "span",
        iconLeft: u.value,
        title: h.value,
        textScreenReader: h.value
      };
      return t.value || (p.tag = "button", p.class += " a_table__th__dropdown_item__icon_btn a_btn a_btn_link", p.onClick = A, r.value && (p.disabled = !0)), p;
    }),
    isColumnVisible: o
  };
}
function fV(e) {
  const t = f(e, "column"), n = f(e, "searchColumnModel"), {
    filterSearchHighlight: r
  } = or(), s = _(() => Ca(t.value.label) ? wt({
    placeholder: t.value.label
  }) : t.value.label);
  return {
    labelLocal: _(() => r(s.value, { searchModel: n.value })),
    labelTranslated: s
  };
}
function hV(e) {
  const t = f(e, "columnIndex"), n = _e("changeColumnsOrdering"), r = _e("columnsOrdered"), s = _e("tableId"), l = ({ columnIndex: T, iconKey: m }) => `${s.value}_${m}_${T}`, o = ({ $event: T }) => {
    T.stopPropagation();
    const m = t.value - 1;
    n({
      columnIndexDraggable: t.value,
      columnIndexOver: m
    }), window.isScrollDisabled || setTimeout(() => {
      aa({
        selector: `#${l({
          columnIndex: m,
          iconKey: "up"
        })}`
      });
    });
  }, u = ({ $event: T }) => {
    T.stopPropagation();
    const m = t.value + 1;
    n({
      columnIndexDraggable: t.value,
      columnIndexOver: m
    }), window.isScrollDisabled || setTimeout(() => {
      const L = `#${l({
        columnIndex: m,
        iconKey: "down"
      })}`;
      aa({
        selector: L
      });
    });
  }, h = _(() => l({
    columnIndex: t.value,
    iconKey: "up"
  })), A = _(() => l({
    columnIndex: t.value,
    iconKey: "down"
  })), E = _(() => t.value !== 0 && !r.value[t.value - 1].locked), p = _(() => r.value.length - 1 !== t.value && !r.value[t.value + 1].locked);
  return {
    idButtonArrowDown: A,
    idButtonArrowUp: h,
    isButtonArrowDownVisible: p,
    isButtonArrowUpVisible: E,
    moveColumnDown: u,
    moveColumnUp: o
  };
}
const AV = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-grip-vertical" viewBox="0 0 16 16">
  <path d="M7 2a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M7 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/>
</svg>`, EV = {
  name: "ATableHeaderThActionItem",
  components: {
    AIcon: lt,
    ATranslation: Te
  },
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    columnIndexDraggable: {
      type: Number,
      required: !1,
      default: -1
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    searchColumnModel: {
      type: String,
      required: !0
    }
  },
  emits: [
    "dragendParent",
    "dragstartParent",
    "dragenterParent",
    "dragleaveParent"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsOrdered",
    "isColumnsDnd",
    "isLoadingOptions",
    "isLoadingTable",
    "modelColumnsVisibleLocal",
    "tableId"
  ],
  setup(e, t) {
    const {
      attributesForRoot: n,
      isLocked: r,
      root: s
    } = QS(e, t, {
      classOverString: "a_table__th__dropdown__li_over",
      inDropdown: !0
    }), {
      labelLocal: l,
      labelTranslated: o
    } = fV(e), {
      buttonVisibleProps: u,
      isColumnVisible: h
    } = cV(e, {
      isLocked: r
    }), {
      idButtonArrowDown: A,
      idButtonArrowUp: E,
      isButtonArrowDownVisible: p,
      isButtonArrowUpVisible: T,
      moveColumnDown: m,
      moveColumnUp: L
    } = hV(e), {
      attributesComponent: b
    } = _V(e, {
      attributesForRoot: n,
      isColumnVisible: h,
      isLocked: r,
      labelTranslated: o
    });
    return {
      attributesComponent: b,
      attributesForRoot: n,
      buttonVisibleProps: u,
      idButtonArrowDown: A,
      idButtonArrowUp: E,
      isButtonArrowDownVisible: p,
      isButtonArrowUpVisible: T,
      isLocked: r,
      labelLocal: l,
      moveColumnDown: m,
      moveColumnUp: L,
      root: s
    };
  },
  render() {
    return this.column.isRender === !1 ? null : c("li", this.attributesComponent, [
      c("div", {
        class: "a_dropdown__item_text a_table__th__dropdown_item"
      }, [
        c("div", {
          class: "a_table__th__dropdown_item__child"
        }, [
          c(rt, this.buttonVisibleProps),
          c("span", {
            class: "a_position_relative"
          }, [
            this.column.icon && c(lt, {
              icon: this.column.icon,
              class: "a_table__th__icon"
            }),
            c(Te, {
              tag: "span",
              class: "a_table__th__text",
              safeHtml: this.labelLocal
            }),
            this.column.title && c(Te, {
              title: this.column.title,
              ariaHidden: !0,
              tag: "span",
              class: "a_position_absolute_all"
            }),
            this.column.title && c(Te, {
              text: this.column.title,
              tag: "span",
              class: "a_sr_only"
            })
          ]),
          !this.isLocked && this.isColumnsDnd ? [
            this.isButtonArrowUpVisible && c(rt, {
              id: this.idButtonArrowUp,
              class: "a_sr_only_focusable a_btn a_btn_link a_p_0 a_table__th__dropdown_item__btn_arrow",
              disabled: this.disabledOptions,
              type: "button",
              iconLeft: Kc,
              title: "_A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_",
              textScreenReader: "_A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_",
              onClick: this.moveColumnUp
            }),
            this.isButtonArrowDownVisible && c(rt, {
              id: this.idButtonArrowDown,
              class: "a_sr_only_focusable a_btn a_btn_link a_p_0 a_table__th__dropdown_item__btn_arrow",
              disabled: this.disabledOptions,
              type: "button",
              iconLeft: Li,
              title: "_A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_",
              textScreenReader: "_A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_",
              onClick: this.moveColumnDown
            })
          ] : ""
        ]),
        !this.isLocked && this.isColumnsDnd && c(lt, {
          icon: AV,
          class: "a_table__th__dropdown_item__icon_dnd"
        })
      ])
    ]);
  }
};
function pV() {
  const e = B("");
  return {
    searchColumnModel: e,
    updateSearchColumnModel: (n) => {
      e.value = n;
    }
  };
}
function em({
  classOver: e = "",
  classOverRight: t = "",
  classOverParent: n = "",
  inHeader: r = !1
}) {
  const s = B(void 0), l = B(void 0), o = B(void 0), u = _e("changeColumnsOrdering"), h = _(() => !le(l.value)), A = ({ columnIndex: b }) => {
    l.value = b;
  }, E = ({ columnIndex: b }) => {
    o.value = b;
  }, p = ({ columnIndex: b }) => {
    o.value === b && (o.value = void 0);
  }, T = (b) => {
    if (!(le(l.value) || le(o.value)))
      return u({
        columnIndexDraggable: l.value,
        columnIndexOver: o.value,
        inHeader: r
      }), b.stopPropagation(), !1;
  }, m = () => {
    s.value.querySelectorAll(`.${n}`).forEach((v) => {
      v.classList.remove(e), v.classList.remove(t);
    });
  };
  return {
    columnIndexDraggable: l,
    dragstart: A,
    dragenter: E,
    dragleave: p,
    dragend: () => {
      m(), l.value = void 0;
    },
    drop: T,
    isDragstart: h,
    root: s
  };
}
function tm() {
  const e = _e("columnActionsWidthMinLocal"), t = _e("modelIsTableWithoutScroll");
  return {
    stylesThTd: _(() => t.value ? {} : {
      style: `width: ${e.value}px;`
    })
  };
}
const TV = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-counterclockwise" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2z"/>
  <path d="M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466"/>
</svg>`, SV = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear-fill" viewBox="0 0 16 16">
  <path d="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z"/>
</svg>`;
function nm(e) {
  const t = {};
  return e.forEach((n) => {
    t[n.id] = !n.hide;
  }), t;
}
function rm({ element: e, tagsName: t, classStop: n }) {
  if (e && e.tagName) {
    if (t.indexOf(e.tagName) !== -1)
      return !0;
    if (e.classList.contains(n))
      return !1;
    if (e.parentElement)
      return rm({ element: e.parentElement, tagsName: t, classStop: n });
  }
  return !1;
}
function mV({ $event: e, classStop: t = "", tagsName: n = [] } = {}) {
  return e && e.target ? rm({ element: e.target, tagsName: n, classStop: t }) : !1;
}
function al({ column: e, modelColumnsVisibleLocal: t }) {
  return e.isRender === !1 ? !1 : e.id in t ? !!t[e.id] : !e.hide;
}
function LV({ column: e }) {
  return e.isRender === !1 ? !1 : !e.hide;
}
function bV({ columnIndex: e, indexFirstScrollInvisibleColumn: t }) {
  return le(t) ? !0 : e < t;
}
function vV({ column: e, columnIndex: t, modelIsTableWithoutScroll: n, modelColumnsVisibleLocal: r, indexFirstScrollInvisibleColumn: s }) {
  return n ? al({
    column: e,
    modelColumnsVisibleLocal: r
  }) && bV({
    columnIndex: t,
    indexFirstScrollInvisibleColumn: s
  }) : al({
    column: e,
    modelColumnsVisibleLocal: r
  });
}
function am({ tableId: e }) {
  return `${e}_preview_right`;
}
function sm({ tableId: e }) {
  return `${e}_multiple_panel`;
}
function im({ tableId: e }) {
  return `${e}_header_label`;
}
function ru({ row: e, rowIndex: t, keyId: n }) {
  return n ? fe(e, n) : t;
}
function lm({ rowAction: e, row: t, rowIndex: n }) {
  return e.isHidden ? !1 : Me(e.isHiddenCallback) ? !e.isHiddenCallback({
    row: t,
    rowIndex: n
  }) : !0;
}
const Qd = {
  name: "ATableHeaderThAction",
  inject: [
    "changeModelIsTableWithoutScroll",
    "columnActionsWidthLocal",
    "changeColumnsOrdering",
    "changeModelColumnsVisible",
    "columns",
    "columnsOrdered",
    "isActionIconVisible",
    "modelIsTableWithoutScroll"
  ],
  props: {
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    }
  },
  setup() {
    const {
      columnIndexDraggable: e,
      dragend: t,
      dragenter: n,
      dragleave: r,
      dragstart: s,
      drop: l,
      isDragstart: o,
      root: u
    } = em({
      classOver: "a_table__th__dropdown__li_over",
      classOverRight: "a_table__th__dropdown__li_over_right",
      classOverParent: "a_table__th__dropdown__li",
      inHeader: !1
    }), {
      searchColumnModel: h,
      updateSearchColumnModel: A
    } = pV(), {
      stylesThTd: E
    } = tm();
    return {
      columnIndexDraggable: e,
      dragend: t,
      dragenter: n,
      dragleave: r,
      dragstart: s,
      drop: l,
      isDragstart: o,
      root: u,
      searchColumnModel: h,
      stylesThTd: E,
      updateSearchColumnModel: A
    };
  },
  methods: {
    selectAllColumns() {
      const e = {};
      Y(this.columnsOrdered, (t) => {
        e[t.id] = !0;
      }), this.changeModelColumnsVisible(e);
    },
    deselectAllColumns() {
      const e = {};
      Y(this.columnsOrdered, (t) => {
        e[t.id] = !!t.locked;
      }), this.changeModelColumnsVisible(e);
    },
    resetColumns() {
      this.changeModelColumnsVisible(nm(this.columnsOrdered)), this.changeColumnsOrdering({ reset: !0 });
    }
  },
  render() {
    return c("div", {
      class: [
        "a_table__th a_table__cell a_table__cell_action",
        {
          a_table__cell_action_sticky: this.isRowActionsStickyLocal
        }
      ],
      role: "columnheader",
      ...this.stylesThTd
    }, [
      c("span", {
        class: "a_sr_only"
      }, "Aktionen"),
      this.isActionIconVisible && c(sa, {
        buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
        buttonTitle: "_A_TABLE_DROPDOWN_OPTIONS_TITLE_",
        buttonTextScreenReader: "_A_TABLE_DROPDOWN_OPTIONS_TITLE_",
        dropdownTag: "div",
        dropdownClass: "a_p_0",
        hasCaret: !1,
        isCloseByClickInside: !1,
        disabled: this.disabledOptions,
        placement: "left",
        menuWidth: 320,
        inBody: !0
      }, {
        button: () => c(lt, {
          icon: SV
        }),
        dropdown: () => [
          c("ul", {
            class: ["a_table__th__dropdown__ul", {
              a_table__th__dropdown__ul_dragstart: this.isDragstart
            }],
            ref: "root",
            onDrop: this.drop
          }, [
            c("li", null, [
              c("div", {
                class: "a_dropdown__item_text a_table__th__dropdown__search"
              }, [
                c(Ln, {
                  label: "Suchen",
                  modelValue: this.searchColumnModel,
                  isClearButton: !0,
                  modelUndefined: "",
                  "onUpdate:modelValue": this.updateSearchColumnModel
                })
              ])
            ]),
            c("li", {
              class: "a_dropdown__divider",
              "aria-hidden": !0
            }),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.selectAllColumns
              }, [
                c(lt, {
                  icon: Hc,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Alle einblenden")
              ])
            ]),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.deselectAllColumns
              }, [
                c(lt, {
                  icon: ca,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Alle ausblenden")
              ])
            ]),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.resetColumns
              }, [
                c(lt, {
                  icon: TV,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Zurücksetzen")
              ])
            ]),
            c("li", null, [
              c(BS, {
                class: "a_dropdown__item_text a_text_nowrap",
                disabled: this.disabledOptions,
                modelValue: this.modelIsTableWithoutScroll,
                trueLabel: "Kompakte Ansicht",
                falseLabel: "Kompakte Ansicht",
                "onUpdate:modelValue": this.changeModelIsTableWithoutScroll
              })
            ]),
            c("li", {
              class: "a_dropdown__divider",
              "aria-hidden": !0
            }),
            this.columnsOrdered.map((e, t) => c(EV, {
              column: e,
              columnIndex: t,
              columnIndexDraggable: this.columnIndexDraggable,
              disabledOptions: this.disabledOptions,
              searchColumnModel: this.searchColumnModel,
              onDragstartParent: this.dragstart,
              onDragenterParent: this.dragenter,
              onDragleaveParent: this.dragleave,
              onDragendParent: this.dragend
            }))
          ])
        ]
      })
    ]);
  }
};
function om(e, { emit: t }) {
  const n = f(e, "areAllRowsSelected"), r = f(e, "areAllVisibleRowsSelected"), s = f(e, "areSomeRowsSelected"), l = f(e, "rowsLocalLength"), o = _(() => !!(l.value === 0 || n.value)), u = _(() => s.value && !(r.value || n.value)), h = _(() => r.value || n.value), A = _(() => u.value || h.value ? "_A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_" : "_A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_");
  return {
    isCheckboxDisabled: o,
    isCheckboxIndeterminate: u,
    labelCheckbox: A,
    modelValueCheckboxLocal: h,
    toggleCheckbox: () => {
      o.value || t("setSelectedRowsIndexes", { isAll: !0 });
    }
  };
}
const IV = {
  name: "ATableHeader",
  components: {
    ATableHeaderTh: Jd,
    ATableHeaderThAction: Qd
  },
  props: {
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areAllVisibleRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !0
    },
    rowsLocalLength: {
      type: Number,
      required: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMobile",
    "isMultipleActionsActive"
  ],
  setup(e, t) {
    const {
      columnIndexDraggable: n,
      dragstart: r,
      dragenter: s,
      dragleave: l,
      dragend: o,
      drop: u,
      isDragstart: h,
      root: A
    } = em({
      classOver: "a_table__th_over",
      classOverRight: "a_table__th_over_right",
      classOverParent: "a_table__th",
      inHeader: !0
    }), {
      isCheckboxDisabled: E,
      isCheckboxIndeterminate: p,
      labelCheckbox: T,
      modelValueCheckboxLocal: m,
      toggleCheckbox: L
    } = om(e, t);
    return {
      columnIndexDraggable: n,
      dragend: o,
      dragenter: s,
      dragleave: l,
      dragstart: r,
      drop: u,
      isCheckboxDisabled: E,
      isCheckboxIndeterminate: p,
      isDragstart: h,
      labelCheckbox: T,
      modelValueCheckboxLocal: m,
      root: A,
      toggleCheckbox: L
    };
  },
  render() {
    return this.isMobile ? null : c("div", {
      ref: "root",
      role: "rowgroup",
      class: ["a_table__head", {
        a_table__head_dragstart: this.isDragstart
      }]
    }, [
      c("div", {
        class: "a_table__row a_table__head__row",
        role: "row",
        onDrop: this.drop
      }, [
        this.isMultipleActionsActive && c("div", {
          role: "columnheader",
          class: "a_table__th a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;",
          "aria-colindex": 1
        }, [
          c(Pu, {
            isWidthAuto: !0,
            modelValue: this.modelValueCheckboxLocal,
            indeterminate: this.isCheckboxIndeterminate,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        this.columnsFilteredForRender.map((e, t) => c(Jd, {
          ref: "th",
          column: e,
          columnIndex: t,
          columnIndexDraggable: this.columnIndexDraggable,
          disabledSort: this.disabledSort,
          hasMultipleActions: this.hasMultipleActions,
          isSortingMultiColumn: this.isSortingMultiColumn,
          modelSort: this.modelSort,
          showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
          sortingSequenceNumberClass: this.sortingSequenceNumberClass,
          onDragstartParent: this.dragstart,
          onDragenterParent: this.dragenter,
          onDragleaveParent: this.dragleave,
          onDragendParent: this.dragend
        })),
        this.isActionColumnVisible && c(Qd, {
          disabledOptions: this.disabledOptions,
          isRowActionsStickyLocal: this.isRowActionsStickyLocal
        })
      ])
    ]);
  }
}, gV = {
  name: "ATableGroupedHeader",
  props: {
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areAllVisibleRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    columnsForRender: {
      type: Array,
      required: !0
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !0
    },
    rowsLocalLength: {
      type: Number,
      required: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMobile",
    "isMultipleActionsActive"
  ],
  setup(e, t) {
    const {
      isCheckboxDisabled: n,
      isCheckboxIndeterminate: r,
      labelCheckbox: s,
      modelValueCheckboxLocal: l,
      toggleCheckbox: o
    } = om(e, t);
    return {
      isCheckboxDisabled: n,
      isCheckboxIndeterminate: r,
      labelCheckbox: s,
      modelValueCheckboxLocal: l,
      toggleCheckbox: o
    };
  },
  render() {
    return this.isMobile ? null : c("div", {
      ref: "root",
      role: "rowgroup",
      class: "a_table__head"
    }, [
      c("div", {
        class: "a_table__row a_table__head__row",
        role: "row"
      }, [
        this.isMultipleActionsActive && c("div", {
          role: "columnheader",
          class: "a_table__th a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;",
          "aria-colindex": 1
        }, [
          c(Pu, {
            isWidthAuto: !0,
            modelValue: this.modelValueCheckboxLocal,
            indeterminate: this.isCheckboxIndeterminate,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        this.columnsForRender,
        this.isActionColumnVisible && c(Qd, {
          disabledOptions: this.disabledOptions,
          isRowActionsStickyLocal: this.isRowActionsStickyLocal
        })
      ])
    ]);
  }
};
function yV(e, { emit: t }, {
  nextAvailableRowIndex: n,
  previousAvailableRowIndex: r,
  rowNumber: s = _(() => 0)
}) {
  const l = f(e, "countAllRows"), o = f(e, "limitPagination"), u = f(e, "offsetPagination"), h = f(e, "rowIndex"), A = f(e, "usePagination"), E = _(() => s.value <= 1 || le(r.value)), p = _(() => s.value >= l.value || le(n.value));
  return {
    disabledBtnArrowLeft: E,
    disabledBtnArrowRight: p,
    toNextRow: () => {
      p.value || (A.value ? (h.value + 1) % o.value === 0 ? (t("update:offset", { offset: u.value + o.value, reload: !1 }), t("togglePreview", { rowIndex: 0 })) : t("togglePreview", { rowIndex: n.value }) : t("togglePreview", { rowIndex: n.value }));
    },
    toPreviousRow: () => {
      E.value || (A.value ? (h.value + 1) % o.value === 1 ? (t("update:offset", { offset: u.value - o.value, reload: !1 }), t("togglePreview", { rowIndex: o.value - 1 })) : t("togglePreview", { rowIndex: r.value }) : t("togglePreview", { rowIndex: r.value }));
    }
  };
}
function RV() {
  const e = _e("tableId");
  return {
    idLocal: _(() => am({ tableId: e.value }))
  };
}
function OV({ emit: e }, {
  previewRef: t = B(void 0)
}) {
  return {
    mousedown: ({ clientWidth: l }) => {
      e("mousedownResizePreviewRight", {
        clientWidth: l
      });
    },
    mousemove: ({ clientX: l }) => {
      e("mousemoveResizePreviewRight", {
        clientX: l,
        previewRef: t.value
      });
    },
    mouseup: () => {
      e("mouseupResizePreviewRight", {
        previewRightWidth: fe(t, "value.offsetWidth")
      });
    }
  };
}
const ip = B(void 0);
function um() {
  return {
    previewRef: ip,
    removePreviewRef: () => {
      ip.value = void 0;
    }
  };
}
function CV(e) {
  const t = f(e, "countAllRows"), n = f(e, "disabledPreviewRowCallback"), r = f(e, "offsetPagination"), s = f(e, "rowIndex"), l = f(e, "rows"), o = f(e, "usePagination"), {
    filterCurrency: u
  } = or(), h = _(() => o.value ? (r.value || 0) + s.value + 1 : s.value + 1), A = _(() => l.value[s.value]), E = _(() => {
    let L = null;
    if (!Me(n.value))
      L = s.value === l.value.length - 1 ? null : s.value++;
    else
      for (let b = s.value + 1; b < l.value.length; b++) {
        const v = l.value[b];
        if (!n.value({ row: v, rowIndex: b })) {
          L = b;
          break;
        }
      }
    return L;
  }), p = _(() => {
    let L = null;
    if (!Me(n.value))
      L = s.value === 0 ? null : s.value--;
    else
      for (let b = s.value - 1; b >= 0; b--) {
        const v = l.value[b];
        if (!n.value({ row: v, rowIndex: b })) {
          L = b;
          break;
        }
      }
    return L;
  }), T = _(() => u(t.value, { suffix: "", digits: 0 })), m = _(() => u(h.value, { suffix: "", digits: 0 }));
  return {
    countAllRowsFormatted: T,
    currentRow: A,
    nextAvailableRowIndex: E,
    previousAvailableRowIndex: p,
    rowNumber: h,
    rowNumberFormatted: m
  };
}
const NV = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8"/>
</svg>`, DV = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8"/>
</svg>`, BV = {
  name: "ATablePreviewRight",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    isLoadingTable: {
      type: Boolean,
      required: !1
    },
    isMobile: {
      type: Boolean,
      required: !1
    },
    limitPagination: {
      type: Number,
      required: !1,
      default: void 0
    },
    offsetPagination: {
      type: Number,
      required: !1,
      default: void 0
    },
    previewStyles: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    rows: {
      type: Array,
      required: !0
    },
    usePagination: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "closePreview",
    "mousedownResizePreviewRight",
    "mousemoveResizePreviewRight",
    "mouseupResizePreviewRight",
    "togglePreviewResize",
    "togglePreview",
    "update:offset"
  ],
  inject: [
    "isLoadingOptions"
  ],
  setup(e, t) {
    const n = f(e, "isMobile"), {
      previewRef: r
    } = um(), {
      idLocal: s
    } = RV(), {
      mousedown: l,
      mousemove: o,
      mouseup: u
    } = OV(t, {
      previewRef: r
    }), {
      countAllRowsFormatted: h,
      currentRow: A,
      nextAvailableRowIndex: E,
      previousAvailableRowIndex: p,
      rowNumber: T,
      rowNumberFormatted: m
    } = CV(e), {
      disabledBtnArrowLeft: L,
      disabledBtnArrowRight: b,
      toNextRow: v,
      toPreviousRow: I
    } = yV(e, t, {
      nextAvailableRowIndex: E,
      previousAvailableRowIndex: p,
      rowNumber: T
    });
    return Vr(() => {
      n.value || t.emit("togglePreviewResize", {
        isOpen: !0,
        previewRef: r.value
      });
    }), Ct(() => {
      n.value || t.emit("togglePreviewResize", {
        isOpen: !1,
        previewRef: r.value
      });
    }), {
      countAllRowsFormatted: h,
      currentRow: A,
      disabledBtnArrowLeft: L,
      disabledBtnArrowRight: b,
      idLocal: s,
      mousedown: l,
      mousemove: o,
      mouseup: u,
      previewRef: r,
      rowNumber: T,
      rowNumberFormatted: m,
      toNextRow: v,
      toPreviousRow: I
    };
  },
  render() {
    const e = [
      this.isLoadingTable ? c(cl) : c("div", {}, [
        c(Te, {
          class: "a_table__preview_right__header__text",
          tag: "span",
          text: "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_",
          extra: {
            rowNumber: this.rowNumber,
            rowNumberFormatted: this.rowNumberFormatted,
            countAllRows: this.countAllRows,
            countAllRowsFormatted: this.countAllRowsFormatted
          }
        }),
        c("div", {
          class: "a_table__preview_right__header__icons"
        }, [
          c(rt, {
            class: "a_btn a_btn_transparent_dark a_btn_small",
            disabled: this.disabledBtnArrowLeft,
            iconLeft: NV,
            title: "_A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_",
            textScreenReader: "_A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_",
            onClick: this.toPreviousRow
          }),
          c(rt, {
            class: "a_btn a_btn_transparent_dark a_btn_small",
            disabled: this.disabledBtnArrowRight,
            iconLeft: DV,
            title: "_A_TABLE_PREVIEW_RIGHT_NEXT_ROW_",
            textScreenReader: "_A_TABLE_PREVIEW_RIGHT_NEXT_ROW_",
            onClick: this.toNextRow
          })
        ])
      ]),
      this.isMobile ? "" : c(rt, {
        class: "a_btn a_btn_transparent_dark a_table__preview_right__btn_close",
        iconLeft: ca,
        iconClass: "a_table__preview_right__btn_close__icon",
        title: "_A_TABLE_PREVIEW_RIGHT_CLOSE_",
        textScreenReader: "_A_TABLE_PREVIEW_RIGHT_CLOSE_",
        onClick: () => this.$emit("closePreview")
      })
    ], t = [
      this.isLoadingTable ? c(cl) : this.$slots.preview ? this.$slots.preview({
        row: this.currentRow,
        rowIndex: this.rowIndex
      }) : c(Te, {
        text: "_A_TABLE_PREVIEW_RIGHT_HAS_NOT_SLOT_"
      })
    ];
    return this.isMobile ? c(Mu, {
      hideFooter: !0,
      close: () => this.$emit("closePreview"),
      size: "xxl"
    }, {
      modalHeader: () => e,
      modalBody: () => t
    }) : c("div", {
      ref: "previewRef",
      id: this.idLocal,
      class: "a_table__preview_right",
      style: this.previewStyles,
      tabindex: -1
    }, [
      c(FH, {
        class: "a_table__preview_right__resizer",
        direction: "x",
        disabled: this.isLoadingOptions,
        onMousedown: this.mousedown,
        onMousemove: this.mousemove,
        onMouseup: this.mouseup,
        onMouseoutDocument: this.mouseup
      }),
      c(Te, {
        class: "a_sr_only",
        text: "_A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_"
      }),
      c("div", {
        class: "a_table__preview_right__header"
      }, e),
      c("div", {
        class: "a_table__preview_right__body"
      }, t)
    ]);
  }
};
function wV() {
  const e = _e("tableId"), t = [
    "additionalProps"
  ], n = _(() => `${e.value}_`);
  return {
    excludeRenderAttributes: t,
    idPrefix: n
  };
}
function PV(e) {
  const t = f(e, "additionalSortingColumns"), n = _e("columnsOrdered", []), r = _(() => [
    ...Pt(n.value, (o) => o.sortId),
    ...t.value
  ]), s = _(() => Da(r.value, "sortId")), l = _(() => r.value.length);
  return {
    columnsAll: r,
    columnsAllKeyBySortId: s,
    countColumnsAll: l
  };
}
function FV(e, {
  columnsAll: t = _(() => [])
}) {
  const n = B(void 0), r = B(!1), s = _(() => t.value.length > 0);
  return {
    closeDropdown: () => {
      var o;
      (o = n.value) == null || o.onClose({ trigger: "click" });
    },
    dropdownRef: n,
    isDropdownVisible: s,
    wasOpenDropdown: r
  };
}
function xV(e, {
  columnsAll: t = _(() => []),
  columnsAllKeyBySortId: n = _(() => ({})),
  unappliedModelSort: r = B([])
}) {
  const s = B([]), l = [
    {
      label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_",
      id: "asc"
    },
    {
      label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_",
      id: "desc"
    }
  ], o = _(() => Pt(t.value, (h) => !Tc(r.value, ["sortId", h.sortId])));
  return {
    dataForForm: s,
    initDataForForm: () => {
      const h = [];
      Y(r.value, ({ sortId: A }, E) => {
        const p = E === 0, T = pe(o.value);
        A && n.value[A] && T.unshift(n.value[A]), h.push({
          type: "fieldset",
          id: `group_${A}`,
          label: p ? "_A_TABLE_SORT_ADDITIONAL_SORT_BY_" : "_A_TABLE_SORT_ADDITIONAL_THEN_BY_",
          children: [
            {
              id: `[${E}].sortId`,
              type: "select",
              classColumn: "a_column a_column_12_touch a_column_7_fullhd a_column_7_widescreen a_column_7_desktop",
              deselectable: !1,
              data: T,
              keyId: "sortId",
              keyLabel: "label",
              translateData: !0,
              search: !0,
              label: "_A_TABLE_SORT_ADDITIONAL_COLUMN_"
            },
            {
              id: `[${E}].sortMode`,
              type: "select",
              classColumn: "a_column a_column_12_touch a_column_5_fullhd a_column_5_widescreen a_column_5_desktop a_d_flex a_align_items_center",
              class: "a_width_100",
              deselectable: !1,
              data: l,
              keyId: "id",
              keyLabel: "label",
              translateData: !0,
              search: !1,
              label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_",
              slotAppend: "slotAppend",
              additionalProps: {
                index: E
              }
            }
          ]
        });
      }), s.value = h;
    }
  };
}
function MV(e, {
  closeDropdown: t = () => {
  },
  countColumnsAll: n = _(() => 0),
  initDataForForm: r = () => {
  },
  unappliedModelSort: s = B([]),
  wasOpenDropdown: l = B(!1)
}) {
  const o = f(e, "isSortingMultiColumn"), u = f(e, "modelSort"), h = _e("changeModelSort"), A = _e("tableId"), E = ({ model: D } = {}) => {
    if (l.value && !D)
      return;
    l.value = !0;
    const w = D || pe(u.value);
    w.length < n.value && w.push(void 0), o.value || w.length > 1 && (w.length = 1);
    const M = [];
    Y(w, (P) => {
      const x = P && P.replace(/^-/, ""), C = Ic(P, "-") ? "desc" : "asc";
      M.push({
        sortId: x,
        sortMode: C
      });
    }), s.value = M, r({ unappliedModelSort: M });
  }, p = ({ model: D }) => !o.value || D.length >= n.value ? !1 : !!fi(D).sortId, T = ({ model: D }) => {
    p({ model: D }) && D.push({
      sortId: void 0,
      sortMode: "asc"
    }), s.value = D, r({ unappliedModelSort: s.value });
  }, m = ({ item: D }) => {
    var x, C;
    const w = D.additionalProps.index;
    w === s.value.length - 1 ? s.value[w].sortId = void 0 : s.value.splice(w, 1);
    const P = s.value.length - 1;
    (C = (x = s.value) == null ? void 0 : x[P]) != null && C.sortId && s.value.push({
      sortId: void 0,
      sortMode: "asc"
    }), r({ unappliedModelSort: s.value });
  }, L = () => {
    const D = [];
    Y(s.value, (w) => {
      w.sortId && D.push(`${w.sortMode === "asc" ? "" : "-"}${w.sortId}`);
    }), h({
      modelAll: D
    }), t();
  }, b = ({ modelSort: D = [], tableId: w }) => {
    w === A.value && E({ model: D });
  }, v = () => {
    Rt.$on("changeTableSorting", b);
  }, I = () => {
    Rt.$off("changeTableSorting", b);
  }, y = _(() => {
    var D;
    return ((D = u.value) == null ? void 0 : D.length) || 0;
  }), R = _(() => {
    if (y.value)
      return y.value;
  });
  return {
    changeModelSortInTable: L,
    countModelSort: y,
    destroyEventBus: I,
    initEventBus: v,
    initUnappliedModelSort: E,
    removeUnappliedModelSort: m,
    textCountModelSort: R,
    updateUnappliedModelSort: T
  };
}
const lp = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down-up" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M11.5 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L11 2.707V14.5a.5.5 0 0 0 .5.5m-7-14a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L4 13.293V1.5a.5.5 0 0 1 .5-.5"/>
</svg>`, $V = {
  name: "ATableSortingAdditional",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelSort: {
      type: Array,
      required: !1
    }
  },
  setup(e) {
    const t = B([]), {
      columnsAll: n,
      columnsAllKeyBySortId: r,
      countColumnsAll: s
    } = PV(e), {
      dataForForm: l,
      initDataForForm: o
    } = xV(e, {
      columnsAll: n,
      columnsAllKeyBySortId: r,
      unappliedModelSort: t
    }), {
      closeDropdown: u,
      dropdownRef: h,
      isDropdownVisible: A,
      wasOpenDropdown: E
    } = FV(e, {
      columnsAll: n
    }), {
      changeModelSortInTable: p,
      countModelSort: T,
      destroyEventBus: m,
      initEventBus: L,
      initUnappliedModelSort: b,
      removeUnappliedModelSort: v,
      textCountModelSort: I,
      updateUnappliedModelSort: y
    } = MV(e, {
      closeDropdown: u,
      countColumnsAll: s,
      initDataForForm: o,
      unappliedModelSort: t,
      wasOpenDropdown: E
    }), {
      excludeRenderAttributes: R,
      idPrefix: D
    } = wV();
    return L(), Ct(() => {
      m();
    }), {
      changeModelSortInTable: p,
      closeDropdown: u,
      countModelSort: T,
      dataForForm: l,
      dropdownRef: h,
      excludeRenderAttributes: R,
      idPrefix: D,
      initUnappliedModelSort: b,
      isDropdownVisible: A,
      removeUnappliedModelSort: v,
      textCountModelSort: I,
      unappliedModelSort: t,
      updateUnappliedModelSort: y,
      wasOpenDropdown: E
    };
  },
  render() {
    return this.isDropdownVisible ? c(sa, {
      ref: "dropdownRef",
      buttonClass: "a_btn a_btn_secondary a_table__action",
      buttonIconLeft: lp,
      buttonText: this.textCountModelSort,
      buttonTextAriaHidden: !0,
      buttonTitle: "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_",
      buttonTextScreenReader: "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_",
      buttonTextClass: "a_badge a_bg_primary",
      disabled: this.disabledSort,
      dropdownClass: "a_filter_horizontal__wrapper",
      dropdownRenderDefault: !1,
      dropdownTag: "div",
      hasCaret: !1,
      inBody: !0,
      extra: {
        count: this.countModelSort
      },
      isCloseByClickInside: !1,
      lockArrowsNavigation: !1,
      lockTabNavigation: !1,
      onOpen: this.initUnappliedModelSort
    }, {
      dropdown: () => c("div", {
        class: "a_filter_horizontal"
      }, [
        c("div", {
          class: "a_filter_horizontal__header__wrapper"
        }, [
          c("div", {
            class: "a_filter_horizontal__header"
          }, [
            c("div", {
              class: "a_filter_horizontal__header__texts"
            }, [
              c(Te, {
                class: "a_filter_horizontal__header__texts__filter",
                tag: "span",
                text: "_A_TABLE_SORT_ADDITIONAL_HEADER_"
              })
            ])
          ])
        ]),
        c("div", {
          class: "a_filter_horizontal__body__wrapper"
        }, [
          c("div", {
            class: "a_filter_horizontal__body"
          }, [
            c(xu, {
              idPrefix: this.idPrefix,
              class: "a_filter_horizontal__body__form",
              classColumnDefault: "",
              classColumns: "",
              data: this.dataForForm,
              excludeRenderAttributes: this.excludeRenderAttributes,
              modelValue: this.unappliedModelSort,
              showErrors: !1,
              onChange: this.updateUnappliedModelSort
            }, {
              slotAppend: ({ item: e }) => {
                var t, n;
                return c(ye, {
                  type: "button",
                  class: "a_btn a_btn_primary a_ml_2",
                  title: "_A_TABLE_SORT_ADDITIONAL_BTN_DELETE_",
                  textScreenReader: "_A_TABLE_SORT_ADDITIONAL_BTN_DELETE_",
                  disabled: !((n = (t = this.unappliedModelSort) == null ? void 0 : t[e.additionalProps.index]) != null && n.sortId),
                  iconLeft: ca,
                  onClick: () => this.removeUnappliedModelSort({ item: e })
                });
              }
            })
          ]),
          c("div", {
            class: "a_filter_horizontal__footer"
          }, [
            c("div", {
              class: "a_filter_horizontal__footer__actions"
            }, [
              c(ye, {
                type: "button",
                class: "a_btn a_btn_primary a_text_nowrap a_filter_horizontal__footer__actions__btn_search",
                iconLeft: lp,
                text: "_A_TABLE_SORT_ADDITIONAL_START_",
                disabled: this.disabledSort,
                onClick: this.changeModelSortInTable
              }),
              c(ye, {
                type: "button",
                class: "a_btn a_btn_secondary a_text_nowrap a_filter_horizontal__footer__actions__btn_close",
                text: "_A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_",
                onClick: this.closeDropdown
              })
            ])
          ])
        ])
      ])
    }) : null;
  }
};
function qV(e, { emit: t }) {
  const n = f(e, "areAllRowsSelected"), r = f(e, "closeMultipleActionsActive"), s = f(e, "multipleActions"), l = f(e, "selectedRows"), o = f(e, "tableActions"), u = _e("tableId"), h = _e("currentMultipleActions"), A = _e("rowsLocalAll"), {
    closeConfirm: E,
    openConfirm: p
  } = uf(), T = _(() => `${u.value}_btn_multiple`), m = _(() => {
    const R = [];
    return Y(pe(o.value), (D) => {
      if (!D.isHidden) {
        if (Me(D.callback)) {
          const w = D.callback;
          D.callback = () => w({
            id: D.id,
            action: D
          });
        }
        R.push(D);
      }
    }), R;
  }), L = ({ action: R, callbackDefault: D }) => {
    const w = pe(R);
    w.callback = D, t("toggleMultipleActionsActive", { isActive: !0, action: w });
  }, b = () => {
    t("toggleMultipleActionsActive", { action: h.value });
  }, v = _(() => {
    const R = pe(s.value);
    return Y(R, (D) => {
      if (Me(D.callback)) {
        const w = D.callback;
        D.callback = () => L({ action: D, callbackDefault: w });
      }
    }), R;
  }), I = async () => {
    await h.value.callback({
      close: r.value,
      rows: l.value,
      rowsVisible: A.value,
      id: T.value,
      areAllRowsSelected: n.value,
      action: h.value
    }), E(), b();
  };
  return {
    buttonMultipleId: T,
    currentMultipleActions: h,
    multipleActionsFiltered: v,
    onCancelMultipleActions: b,
    onOpenModalMultipleActions: () => {
      h.value.isConfirm ? p({
        headerText: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_",
        bodyHtml: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_",
        saveButtonText: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_",
        extra: {
          action: wt({
            placeholder: h.value.text
          }),
          selectedRows: l.value.length
        },
        save: I
      }) : h.value.callback({
        close: r.value,
        rows: l.value,
        rowsVisible: A.value,
        id: T.value,
        areAllRowsSelected: n.value,
        action: h.value
      });
    },
    tableActionsFiltered: m
  };
}
function kV(e) {
  const t = f(e, "countAllRows"), {
    filterFloat: n
  } = or();
  return {
    countAllRowsFormatted: _(() => `(${n(t.value, { digits: 0 })})`)
  };
}
function UV() {
  const e = _e("tableId");
  return {
    tableLabelId: _(() => im({ tableId: e.value }))
  };
}
function HV(e, { emit: t }) {
  const n = f(e, "areAllRowsSelected"), r = f(e, "areSomeRowsSelected"), s = f(e, "countAllRows"), l = f(e, "isLoadingMultipleActions"), o = f(e, "selectedRows"), u = _e("tableId"), {
    filterFloat: h
  } = or(), A = _(() => sm({ tableId: u.value })), E = _(() => n.value ? s.value : o.value.length), p = _(() => ({
    countSelectedRows: E.value,
    countSelectedRowsFiltered: h(E.value, { digits: 0 }),
    countAllRows: s.value,
    countAllRowsFiltered: h(s.value, { digits: 0 })
  })), T = _(() => n.value ? "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_" : "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_"), m = _(() => !!(l.value || s.value === 0)), L = () => {
    m.value || t("toggleBtnAllRows");
  };
  return {
    isBtnMultipleActionDisabled: _(() => !r.value && !n.value),
    isBtnSelectAllRowsDisabled: m,
    multiplePanelId: A,
    textMultipleBtnAllRowsTranslate: T,
    textMultipleSelectedTranslateExtra: p,
    toggleBtnAllRows: L
  };
}
function VV(e, { emit: t }) {
  const n = f(e, "useViewSlot"), r = (l) => {
    t("updateViewCurrent", l);
  }, s = _(() => n.value ? "viewSlot" : void 0);
  return {
    updateViewCurrentLocal: r,
    viewSlotLocal: s
  };
}
const WV = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-ui-checks" viewBox="0 0 16 16">
  <path d="M7 2.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5zM2 1a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2zm0 8a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2zm.854-3.646a.5.5 0 0 1-.708 0l-1-1a.5.5 0 1 1 .708-.708l.646.647 1.646-1.647a.5.5 0 1 1 .708.708zm0 8a.5.5 0 0 1-.708 0l-1-1a.5.5 0 0 1 .708-.708l.646.647 1.646-1.647a.5.5 0 0 1 .708.708zM7 10.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5zm0-5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m0 8a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5"/>
</svg>`, GV = {
  name: "ATableTopPanel",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    closeMultipleActionsActive: {
      type: Function,
      required: !0
    },
    countAllRows: {
      type: Number,
      required: !0
    },
    disabledActions: {
      type: Boolean,
      required: !0
    },
    disabledMultipleActions: {
      type: Boolean,
      required: !0
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    disabledViews: {
      type: Boolean,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasViews: {
      type: Boolean,
      required: !0
    },
    isLabelVisible: {
      type: Boolean,
      required: !1
    },
    isLoadingMultipleActions: {
      type: Boolean,
      required: !1
    },
    isQuickSearch: {
      type: Boolean,
      required: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !0
    },
    modelQuickSearch: {
      type: String,
      required: !0
    },
    modelSort: {
      type: Array,
      required: !1
    },
    modelView: {
      type: String,
      required: !1,
      default: void 0
    },
    multipleActions: {
      type: Array,
      required: !0
    },
    selectedRows: {
      type: Array,
      required: !0
    },
    showCount: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tableActions: {
      type: Array,
      required: !0
    },
    tableActionsIndexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: -1
    },
    tableActionsIndexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: 0
    },
    useAdditionalSorting: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useViewSlot: {
      type: Boolean,
      required: !1
    },
    viewCurrent: {
      type: Object,
      required: !1,
      default: void 0
    },
    views: {
      type: Array,
      required: !0
    }
  },
  emits: [
    "toggleBtnAllRows",
    "toggleMultipleActionsActive",
    "updateModelQuickSearch",
    "updateViewCurrent"
  ],
  inject: [
    "isMultipleActionsActive",
    "rowsLocalAll",
    "tableId"
  ],
  setup(e, t) {
    const {
      tableLabelId: n
    } = UV(), {
      filterCurrency: r
    } = or(), {
      buttonMultipleId: s,
      currentMultipleActions: l,
      multipleActionsFiltered: o,
      onCancelMultipleActions: u,
      onOpenModalMultipleActions: h,
      tableActionsFiltered: A
    } = qV(e, t), {
      isBtnMultipleActionDisabled: E,
      isBtnSelectAllRowsDisabled: p,
      multiplePanelId: T,
      textMultipleBtnAllRowsTranslate: m,
      textMultipleSelectedTranslateExtra: L,
      toggleBtnAllRows: b
    } = HV(e, t), {
      updateViewCurrentLocal: v,
      viewSlotLocal: I
    } = VV(e, t), {
      countAllRowsFormatted: y
    } = kV(e);
    return {
      buttonMultipleId: s,
      countAllRowsFormatted: y,
      currentMultipleActions: l,
      filterCurrency: r,
      isBtnMultipleActionDisabled: E,
      isBtnSelectAllRowsDisabled: p,
      multipleActionsFiltered: o,
      multiplePanelId: T,
      onCancelMultipleActions: u,
      onOpenModalMultipleActions: h,
      tableActionsFiltered: A,
      tableLabelId: n,
      textMultipleBtnAllRowsTranslate: m,
      textMultipleSelectedTranslateExtra: L,
      toggleBtnAllRows: b,
      updateViewCurrentLocal: v,
      viewSlotLocal: I
    };
  },
  methods: {
    updateModelQuickSearch(e) {
      this.$emit("updateModelQuickSearch", e);
    }
  },
  render() {
    return [
      c("div", {
        class: "a_table__top_panel"
      }, [
        this.isLabelVisible ? this.$slots.tableLabel ? this.$slots.tableLabel({
          countAllRows: this.countAllRows,
          tableLabelId: this.tableLabelId
        }) : c(this.labelTag, {
          class: ["a_table__top_panel__label", this.labelClass]
        }, [
          c(Te, {
            id: this.tableLabelId,
            tag: "span",
            class: "a_table__top_panel__label__text",
            text: this.label,
            extra: this.extra
          }),
          this.showCount ? c(ye, {
            class: "a_table__top_panel__label__count",
            extra: {
              count: this.countAllRows
            },
            tag: "span",
            text: this.countAllRowsFormatted,
            textAriaHidden: !0,
            textScreenReader: "_A_TABLE_ALL_ROWS_{{count}}_",
            title: "_A_TABLE_ALL_ROWS_{{count}}_",
            type: "text"
          }) : ""
        ]) : "",
        c("div", {
          class: "a_table__top_panel__actions"
        }, [
          this.$slots.tableActionsPrepend ? this.$slots.tableActionsPrepend({
            isMultipleActionsActive: this.isMultipleActionsActive,
            modelView: this.modelView
          }) : "",
          c(Yd, {
            actions: this.tableActionsFiltered,
            actionsClasses: [],
            disabled: this.isMultipleActionsActive || this.disabledActions,
            indexFirstDropdownAction: this.tableActionsIndexFirstDropdownAction,
            indexFirstDropdownActionMobile: this.tableActionsIndexFirstDropdownActionMobile,
            minDropdownActions: 0,
            dropdownAttributes: {
              buttonClass: "a_btn a_btn_secondary a_table__action",
              buttonIconLeft: Nl,
              buttonText: {
                desktop: "_A_TABLE_ACTIONS_"
              },
              hasCaret: !1,
              inBody: !0,
              placement: "bottom-end"
            }
          }),
          c(Yd, {
            actions: this.multipleActionsFiltered,
            actionsClasses: [],
            disabled: this.isMultipleActionsActive || this.disabledMultipleActions,
            indexFirstDropdownAction: 0,
            indexFirstDropdownActionMobile: 0,
            minDropdownActions: 0,
            dropdownAttributes: {
              id: this.buttonMultipleId,
              buttonClass: "a_btn a_btn_secondary a_table__action",
              buttonText: {
                desktop: "_A_TABLE_MULTIPLE_ACTIONS_"
              },
              buttonIconLeft: WV,
              inBody: !0,
              placement: "bottom-end"
            }
          }),
          this.isQuickSearch ? c(Ln, {
            label: "_A_TABLE_QUICK_SEARCH_",
            class: "a_table__top_panel__actions__quick_search",
            modelUndefined: "",
            modelValue: this.modelQuickSearch,
            iconPrepend: WS,
            "onUpdate:modelValue": this.updateModelQuickSearch
          }) : "",
          this.hasViews ? c(DS, {
            modelValue: this.modelView,
            class: "a_d_inline_block",
            isButtonGroup: !0,
            disabled: this.disabledViews,
            slotName: this.viewSlotLocal,
            data: this.views,
            keyId: "id",
            keyLabel: "label",
            hasBorder: !1,
            classFieldset: "a_p_0",
            "onUpdate:modelValue": this.updateViewCurrentLocal
          }, {
            viewSlot: (e) => this.$slots.viewSlot && this.$slots.viewSlot({
              ...e
            })
          }) : "",
          this.useAdditionalSorting ? c($V, {
            additionalSortingColumns: this.additionalSortingColumns,
            disabledSort: this.disabledSort,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSort
          }) : "",
          this.$slots.tableActionsAppend ? this.$slots.tableActionsAppend({
            isMultipleActionsActive: this.isMultipleActionsActive,
            modelView: this.modelView
          }) : ""
        ])
      ]),
      this.isMultipleActionsActive && c("div", {
        id: this.multiplePanelId,
        class: "a_table__multiple_panel"
      }, [
        c("div", {
          class: "a_table__multiple_panel__header"
        }, [
          c(Te, {
            class: "a_table__multiple_panel__header__text",
            tag: "strong",
            text: "_A_TABLE_MULTIPLE_ACTIONS_"
          }),
          c("div", {
            class: "a_table__multiple_panel__items"
          }, [
            c(Te, {
              class: "a_table__multiple_panel__items__selected",
              tag: "span",
              text: "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_",
              extra: this.textMultipleSelectedTranslateExtra
            }),
            this.currentMultipleActions.isAllRowsSelected && c(rt, {
              class: "a_btn a_btn_secondary a_table__multiple_panel__btn_all_rows",
              type: "button",
              text: this.textMultipleBtnAllRowsTranslate,
              extra: this.textMultipleSelectedTranslateExtra,
              disabled: this.isBtnSelectAllRowsDisabled || this.disabledMultipleActions,
              loading: this.isLoadingMultipleActions,
              onClick: this.toggleBtnAllRows
            })
          ])
        ]),
        c("div", {
          class: "a_table__multiple_panel__actions"
        }, [
          this.currentMultipleActions.slot && this.$slots.multipleActionActiveSlot ? this.$slots.multipleActionActiveSlot({
            disabled: this.isBtnMultipleActionDisabled || this.isLoadingMultipleActions || this.disabledMultipleActions,
            loading: this.isLoadingMultipleActions,
            text: this.currentMultipleActions.text,
            action: this.currentMultipleActions,
            onClick: this.onOpenModalMultipleActions,
            close: this.closeMultipleActionsActive,
            rows: this.selectedRows,
            rowsVisible: this.rowsLocalAll,
            id: this.buttonMultipleId,
            areAllRowsSelected: this.areAllRowsSelected
          }) : c(rt, {
            class: "a_btn a_btn_primary a_table__action",
            type: "button",
            disabled: this.isBtnMultipleActionDisabled || this.isLoadingMultipleActions || this.disabledMultipleActions,
            text: this.currentMultipleActions.text,
            loading: this.isLoadingMultipleActions,
            loadingAlign: "left",
            onClick: this.onOpenModalMultipleActions
          }),
          c(rt, {
            class: "a_btn a_btn_secondary a_table__action",
            type: "button",
            text: "_A_TABLE_MULTIPLE_CANCEL_",
            onClick: this.onCancelMultipleActions
          })
        ])
      ])
    ];
  }
};
function KV() {
  const e = B(void 0);
  return {
    componentRef: e,
    setFocusToComponent: () => {
      var n;
      (n = e.value) == null || n.focus({ preventScroll: !0 });
    }
  };
}
const jV = {
  name: "ATablePreviewDown",
  props: {
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    }
  },
  inject: [
    "onTogglePreview"
  ],
  setup() {
    const {
      componentRef: e,
      setFocusToComponent: t
    } = KV();
    return Vr(() => {
      t();
    }), {
      componentRef: e
    };
  },
  render() {
    return c("div", {
      ref: "componentRef",
      class: "a_table__preview_down",
      tabindex: -1
    }, [
      c(Te, {
        class: "a_sr_only",
        text: "_A_TABLE_PREVIEW_DOWN_ARIA_LABEL_"
      }),
      this.$slots.preview && this.$slots.preview({
        row: this.row,
        rowIndex: this.rowIndex
      }),
      c(rt, {
        class: "a_btn a_btn_transparent_dark a_table__preview_down__btn_close",
        iconLeft: ca,
        iconClass: "a_table__preview_down__btn_close__icon",
        title: "_A_TABLE_PREVIEW_DOWN_CLOSE_",
        textScreenReader: "_A_TABLE_PREVIEW_DOWN_CLOSE_",
        onClick: () => this.onTogglePreview({
          row: this.row,
          rowIndex: this.rowIndex
        })
      })
    ]);
  }
};
function zV(e) {
  const t = f(e, "column"), n = f(e, "disabledPreview"), r = f(e, "isFooter"), s = _e("hasPreview"), l = _e("isMobile"), {
    columnsStyles: o
  } = JS(e);
  return {
    attributesForTd: _(() => {
      const h = {
        class: [
          "a_table__td a_table__cell",
          {
            a_table__cell_click: s.value && !r.value && !n.value
          },
          t.value.classRowParent
        ],
        style: o.value
      };
      return l.value || (h.role = "cell"), h;
    })
  };
}
function _m(e) {
  const t = f(e, "column"), n = f(e, "row"), r = _(() => !!t.value.to), s = _(() => {
    if (ot(t.value.to))
      return t.value.to;
    if (nt(t.value.to)) {
      const o = pe(t.value.to), u = o.params || {}, h = o.query || {};
      if (t.value.to.nameDynamic && !t.value.to.name) {
        const A = fe(n.value, t.value.to.nameDynamic);
        A && (o.name = A);
      }
      if (t.value.to.paramsDynamic) {
        let A = !1;
        if (Y(t.value.to.paramsDynamic, (E, p) => {
          const T = fe(n.value, E);
          if (Pe(T))
            return A = !0, !1;
          u[p] = T;
        }), A)
          return;
      }
      if (t.value.to.queryDynamic) {
        let A = !1;
        if (Y(t.value.to.queryDynamic, (E, p) => {
          const T = fe(n.value, E);
          if (Pe(T))
            return A = !0, !1;
          h[p] = T;
        }), A)
          return;
      }
      return o.params = u, o.query = h, o;
    }
  });
  return {
    classForLink: _(() => "a_btn a_btn_link a_p_0 a_text_left"),
    isLink: r,
    toLocal: s
  };
}
function dm(e) {
  const t = f(e, "column"), n = f(e, "isFooter"), r = _(() => n.value ? t.value.footerSlot : t.value.slot);
  return {
    hasSlot: _(() => !!r.value),
    slotName: r
  };
}
function cm(e) {
  const t = f(e, "column"), n = f(e, "isFooter"), r = f(e, "row"), s = _e("columnsDefaultValue"), l = _e("valuesForColumnDefault"), o = _(() => n.value && "footerDefaultValue" in t.value ? t.value.footerDefaultValue : "defaultValue" in t.value ? t.value.defaultValue : Pe(s.value) ? "" : s.value), u = _(() => n.value ? t.value.footerKeyLabel : t.value.keyLabel), h = _(() => n.value ? t.value.footerKeyLabelSafeHtml : t.value.keyLabelSafeHtml), A = _(() => n.value ? t.value.footerKeyLabelHtml : t.value.keyLabelHtml), E = _(() => {
    if (u.value)
      return fe(r.value, u.value);
  }), p = _(() => {
    if (h.value)
      return fe(r.value, h.value);
  }), T = _(() => {
    if (A.value)
      return fe(r.value, A.value);
  }), m = (y) => {
    let R = !1;
    return Y(l.value, (D) => {
      if (y === D)
        return R = !0, !1;
    }), R ? o.value : y;
  }, L = _(() => m(E.value)), b = _(() => m(p.value)), v = _(() => m(T.value));
  return {
    textOrHtmlRender: _(() => {
      if (u.value)
        return c("span", null, L.value);
      if (h.value)
        return c("div", {
          innerHTML: b.value
        });
      if (A.value)
        return xt(c("div"), [
          [hn, v.value]
        ]);
    })
  };
}
const fm = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-right-fill" viewBox="0 0 16 16">
  <path d="m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z"/>
</svg>`, op = {
  name: "ATableTd",
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    level: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    showIconChildren: {
      type: Boolean,
      required: !1
    }
  },
  inject: [
    "isMobile",
    "rowsLocalAll"
  ],
  setup(e) {
    const {
      attributesForTd: t
    } = zV(e), {
      classForLink: n,
      isLink: r,
      toLocal: s
    } = _m(e), {
      hasSlot: l,
      slotName: o
    } = dm(e), {
      textOrHtmlRender: u
    } = cm(e);
    return {
      attributesForTd: t,
      classForLink: n,
      hasSlot: l,
      isLink: r,
      slotName: o,
      textOrHtmlRender: u,
      toLocal: s
    };
  },
  render() {
    const e = c(
      "div",
      this.attributesForTd,
      [
        c("div", {
          class: [
            "a_table__cell__child",
            this.column.class,
            this.column.classRow
          ]
        }, [
          this.showIconChildren ? c(ye, {
            "aria-hidden": !0,
            class: "a_table__row_level__icon",
            classDefault: "",
            iconLeft: fm,
            type: "text"
          }) : "",
          this.hasSlot && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            column: this.column,
            columnIndex: this.columnIndex,
            level: this.level,
            row: this.row,
            rowIndex: this.rowIndex,
            rows: this.rowsLocalAll
          }) : this.isLink && this.toLocal ? c(kr("RouterLink"), {
            class: [
              this.column.class,
              this.classForLink,
              this.column.classRow
            ],
            to: this.toLocal
          }, () => [
            this.textOrHtmlRender
          ]) : this.textOrHtmlRender
        ])
      ]
    );
    return this.isMobile ? [
      c(Te, {
        text: this.column.label,
        tag: "dt"
      }),
      c("dd", {}, [
        e
      ])
    ] : e;
  }
}, up = {
  name: "ATableListItem",
  inject: [
    "rowsLocalAll"
  ],
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    isFooter: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      classForLink: t,
      isLink: n,
      toLocal: r
    } = _m(e), {
      hasSlot: s,
      slotName: l
    } = dm(e), {
      textOrHtmlRender: o
    } = cm(e);
    return {
      classForLink: t,
      hasSlot: s,
      isLink: n,
      slotName: l,
      textOrHtmlRender: o,
      toLocal: r
    };
  },
  render() {
    return [
      c(Te, {
        text: this.column.label,
        tag: "dt"
      }),
      c(
        "dd",
        null,
        this.hasSlot && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          column: this.column,
          columnIndex: this.columnIndex,
          row: this.row,
          rowIndex: this.rowIndex,
          rows: this.rowsLocalAll
        }) : this.isLink && this.toLocal ? [
          c(kr("RouterLink"), {
            class: [
              this.column.class,
              this.classForLink,
              this.column.classRow
            ],
            to: this.toLocal
          }, () => [
            this.textOrHtmlRender
          ])
        ] : [
          this.textOrHtmlRender
        ]
      )
    ];
  }
};
function YV() {
  const e = _e("columnsScrollInvisible"), t = _e("modelIsTableWithoutScroll"), n = _(() => e.value.length), r = _(() => t.value ? n.value > 0 : !1);
  return {
    columnsScrollInvisibleText: _(() => n.value === 1 ? "_A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_" : "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_"),
    countColumnsScrollInvisible: n,
    isColumnsScrollInvisibleDropdownVisible: r
  };
}
function XV(e) {
  const t = f(e, "columnActionsView"), n = f(e, "isFooter"), r = f(e, "row"), s = f(e, "rowIndex"), l = _e("columnActionsOnePlusDropdownOptions"), o = _e("rowActions"), u = _e("tableId"), h = _(() => `${u.value}_action_${s.value}`), A = _(() => Pe(l.value.indexFirstDropdownAction) ? 1 : l.value.indexFirstDropdownAction), E = ({ rowAction: C }) => {
    if (C.text)
      return C.text;
    if (Me(C.textCallback))
      return C.textCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, p = ({ rowAction: C }) => {
    if (C.html)
      return C.html;
    if (Me(C.htmlCallback))
      return C.htmlCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, T = ({ rowAction: C }) => {
    if (C.title)
      return C.title;
    if (Me(C.titleCallback))
      return C.titleCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, m = ({ rowAction: C }) => C.disabled ? C.disabled : Me(C.disabledCallback) ? C.disabledCallback({
    row: r.value,
    rowIndex: s.value,
    rowAction: C
  }) : !1, L = ({ rowAction: C }) => C.class ? C.class : Me(C.classCallback) ? C.classCallback({
    row: r.value,
    rowIndex: s.value,
    rowAction: C
  }) : "", b = ({ rowAction: C }) => {
    if (C.iconLeft)
      return C.iconLeft;
    if (Me(C.iconLeftCallback))
      return C.iconLeftCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, v = ({ rowAction: C }) => {
    if (C.iconRight)
      return C.iconRight;
    if (Me(C.iconRightCallback))
      return C.iconRightCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, I = ({ rowAction: C }) => {
    if (ot(C.to))
      return C.to;
    if (nt(C.to)) {
      const q = pe(C.to), W = q.params || {}, z = q.query || {};
      if (C.to.nameDynamic && !C.to.name) {
        const oe = fe(r.value, C.to.nameDynamic);
        oe && (q.name = oe);
      }
      if (C.to.paramsDynamic) {
        let oe = !1;
        if (Y(C.to.paramsDynamic, (te, ue) => {
          const re = fe(r.value, te);
          if (Pe(re))
            return oe = !0, !1;
          W[ue] = re;
        }), oe)
          return;
      }
      if (C.to.queryDynamic) {
        let oe = !1;
        if (Y(C.to.queryDynamic, (te, ue) => {
          const re = fe(r.value, te);
          if (Pe(re))
            return oe = !0, !1;
          z[ue] = re;
        }), oe)
          return;
      }
      return q.params = W, q.query = z, q;
    }
  }, y = ({ rowAction: C }) => C.href ? C.href : Me(C.hrefCallback) ? C.hrefCallback({
    row: r.value,
    rowIndex: s.value,
    rowAction: C
  }) : !1, R = ({ rowAction: C }) => {
    if (C.extra)
      return C.extra;
    if (Me(C.extraCallback))
      return C.extraCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, D = ({ rowAction: C }) => {
    if (C.textScreenReader)
      return C.textScreenReader;
    if (Me(C.textScreenReaderCallback))
      return C.textScreenReaderCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, w = ({ rowActionIndexVisible: C }) => {
    if (t.value === "dropdown")
      return {
        id: h.value,
        ids: [h.value, u.value]
      };
    if (C < A.value) {
      const q = `${h.value}_${C}`;
      return {
        buttonId: q,
        id: q,
        ids: [q, u.value]
      };
    }
    return {
      id: h.value,
      ids: [h.value, u.value]
    };
  }, M = (C) => {
    Y(C, (q, W) => {
      Rw(W, "Callback") && (C[W] = void 0);
    });
  }, P = _(() => {
    const C = [];
    let q = 0;
    return Y(pe(o.value), (W) => {
      if (lm({
        rowAction: W,
        row: r.value,
        rowIndex: s.value
      })) {
        if (W.type !== "divider") {
          const z = E({ rowAction: W });
          z && (W.text = z);
          const oe = p({ rowAction: W });
          oe && (W.html = oe);
          const te = T({ rowAction: W });
          te ? W.title = te : z && (W.title = z);
          const ue = m({ rowAction: W });
          ue && (W.disabled = ue);
          const re = L({ rowAction: W });
          re && (W.class = re);
          const ie = b({ rowAction: W });
          ie && (W.iconLeft = ie);
          const Ae = v({ rowAction: W });
          Ae && (W.iconRight = Ae);
          const we = R({ rowAction: W });
          we && (W.extra = we);
          const me = D({ rowAction: W });
          if (we && (W.textScreenReader = me), W.type === "link") {
            const ae = I({ rowAction: W });
            ae ? W.to = ae : W.href = y({ rowAction: W });
          }
          if (Me(W.callback)) {
            const {
              buttonId: ae,
              id: Oe,
              ids: ve
            } = w({
              rowActionIndexVisible: q
            });
            W.id = ae;
            const Ke = W.callback;
            W.callback = () => Ke({
              row: r.value,
              rowIndex: s.value,
              id: Oe,
              ids: ve,
              rowAction: W
            });
          }
          M(W);
        }
        q++, C.push(W);
      }
    }), C;
  }), x = _(() => !n.value && P.value.length > 0);
  return {
    buttonActionsId: h,
    isRowActionsDropdownVisible: x,
    rowActionsFiltered: P
  };
}
function ZV(e) {
  const t = f(e, "rowIndex");
  return {
    rowNumber: _(() => t.value + 1)
  };
}
const JV = {
  name: "ATableTdAction",
  components: {
    AIcon: lt,
    ATableListItem: up
  },
  props: {
    columnActionsBtnGroupMaxWidthStyle: {
      type: String,
      required: !1,
      default: void 0
    },
    columnActionsView: {
      type: String,
      required: !0
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    }
  },
  inject: [
    "columnActionsOnePlusDropdownOptions",
    "columnsScrollInvisible",
    "tableId"
  ],
  setup(e) {
    const {
      isMobileWidth: t
    } = An(), {
      buttonActionsId: n,
      isRowActionsDropdownVisible: r,
      rowActionsFiltered: s
    } = XV(e), {
      columnsScrollInvisibleText: l,
      countColumnsScrollInvisible: o,
      isColumnsScrollInvisibleDropdownVisible: u
    } = YV(), {
      rowNumber: h
    } = ZV(e), {
      stylesThTd: A
    } = tm();
    return {
      buttonActionsId: n,
      columnsScrollInvisibleText: l,
      countColumnsScrollInvisible: o,
      isColumnsScrollInvisibleDropdownVisible: u,
      isMobileWidth: t,
      isRowActionsDropdownVisible: r,
      rowActionsFiltered: s,
      rowNumber: h,
      stylesThTd: A
    };
  },
  render() {
    return c("div", {
      role: "cell",
      class: [
        "a_table__td a_table__cell a_table__cell_action",
        {
          a_table__cell_action_sticky: this.isRowActionsStickyLocal
        }
      ],
      ...this.stylesThTd
    }, [
      c("div", {
        class: [
          "a_table__cell__child",
          this.rowActionsClass
        ]
      }, [
        this.isColumnsScrollInvisibleDropdownVisible && c(sa, {
          buttonClass: "a_btn a_btn_link a_text_nowrap",
          buttonIconLeft: VS,
          buttonIconClass: "a_table__cell_action__additional_icon",
          buttonTitle: "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_",
          buttonTextScreenReader: "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_",
          buttonText: this.columnsScrollInvisibleText,
          buttonTextClass: "a_table__cell_action__additional_text",
          buttonTextAriaHidden: !0,
          extra: {
            count: this.countColumnsScrollInvisible
          },
          dropdownClass: "a_p_0 a_overflow_x_hidden a_table__extra_dropdown",
          dropdownTag: "div",
          hasCaret: !1,
          floatingFlip: {
            use: !0,
            fallbackPlacements: ["top-end", "left"]
          },
          inBody: !0,
          placement: "bottom-end",
          menuWidth: 600,
          isCloseByClickInside: !1
        }, {
          dropdown: () => [
            c("dl", {
              class: "a_list_dl a_list_dl_dt_right"
            }, [
              this.columnsScrollInvisible.map((e, t) => c(up, {
                column: e,
                columnIndex: t,
                row: this.row,
                rowIndex: this.rowIndex,
                isFooter: this.isFooter
              }, this.$slots))
            ])
          ]
        }),
        this.isRowActionsDropdownVisible || this.$slots.rowActions ? c("div", {
          class: "a_table__cell_action__group"
        }, [
          this.$slots.rowActions ? this.$slots.rowActions({
            tableId: this.tableId,
            row: this.row,
            rowIndex: this.rowIndex,
            isFooter: this.isFooter
          }) : "",
          this.isRowActionsDropdownVisible ? this.columnActionsView === "dropdown" || this.isMobileWidth && this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile === 0 ? c(sa, {
            id: this.buttonActionsId,
            actions: this.rowActionsFiltered,
            buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
            buttonIconLeft: Nl,
            buttonTextScreenReader: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
            buttonTitle: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
            disabled: this.disabledRowActions,
            extra: {
              rowNumber: this.rowNumber
            },
            hasCaret: !1,
            inBody: !0,
            placement: "bottom-end"
          }, this.$slots) : c(Yd, {
            class: "a_d_inline_block",
            style: this.columnActionsBtnGroupMaxWidthStyle,
            actions: this.rowActionsFiltered,
            dropdownAttributes: {
              id: this.buttonActionsId,
              buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
              buttonIconLeft: Li,
              buttonTextScreenReader: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
              buttonTitle: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
              extra: {
                rowNumber: this.rowNumber
              },
              hasCaret: !1,
              inBody: !0,
              placement: "bottom-end"
            },
            disabled: this.disabledRowActions,
            btnGroupClass: Pe(this.columnActionsOnePlusDropdownOptions.btnGroupClass) ? "a_btn_group a_btn_group_table" : this.columnActionsOnePlusDropdownOptions.btnGroupClass,
            hasDividerBeforeDropdown: this.columnActionsOnePlusDropdownOptions.hasDividerBeforeDropdown || !1,
            indexFirstDropdownAction: Pe(this.columnActionsOnePlusDropdownOptions.indexFirstDropdownAction) ? 1 : this.columnActionsOnePlusDropdownOptions.indexFirstDropdownAction,
            indexFirstDropdownActionMobile: Pe(this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile) ? 1 : this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile,
            minDropdownActions: Pe(this.columnActionsOnePlusDropdownOptions.minDropdownActions) ? 1 : this.columnActionsOnePlusDropdownOptions.minDropdownActions,
            actionsClasses: this.columnActionsOnePlusDropdownOptions.actionsClasses || ["a_btn a_btn_primary a_text_truncate"]
          }, this.$slots) : ""
        ]) : ""
      ])
    ]);
  }
};
function QV(e, {
  hasChildren: t = _(() => !1),
  hasPreviewLocal: n = _(() => !1),
  rowClassChildren: r = _(() => {
  }),
  rowClassLevelChildren: s = _(() => {
  }),
  rowClassPreview: l = _(() => {
  }),
  toggleChildren: o = () => {
  }
}) {
  const u = f(e, "disabledPreview"), h = f(e, "disabledPreviewRowCallback"), A = f(e, "isFooter"), E = f(e, "isTreeCollapsible"), p = f(e, "level"), T = f(e, "row"), m = f(e, "rowClass"), L = f(e, "rowIndex"), b = _e("isMobile"), v = _e("onTogglePreview"), I = _e("tableId"), y = _(() => {
    const q = A.value ? "_footer" : "";
    return `${I.value}${q}_${L.value}`;
  }), R = _(() => Me(m.value) ? m.value({
    level: p.value,
    row: T.value,
    rowindex: L.value
  }) : m.value), D = _(() => [
    "a_table__row a_table__body__row a_table__row_hover",
    r.value,
    s.value,
    l.value,
    R.value
  ]), w = _(() => b.value ? "listitem" : "row"), M = _(() => Me(h.value) ? h.value({ row: T.value, rowIndex: L.value }) : u.value), P = (q) => {
    mV({
      $event: q,
      tagsName: [
        "A",
        "BUTTON",
        "INPUT",
        "LABEL"
      ],
      classStop: "a_table__row"
    }) || (t.value ? o() : n.value && v({
      row: T.value,
      rowIndex: L.value
    }));
  }, x = (q) => {
    q.keyCode === Z.enter && P(q);
  }, C = _(() => (E.value && t.value || n.value) && !M.value ? {
    tabindex: 0,
    onClick: P,
    onKeydown: x
  } : {});
  return {
    disabledPreviewRow: M,
    eventsLocal: C,
    roleLocal: w,
    rowClassComputed: D,
    rowHtmlId: y
  };
}
function eW(e, { emit: t }) {
  const n = f(e, "areAllRowsSelected"), r = f(e, "row"), s = f(e, "rowIndex"), l = f(e, "selectedRowsIndexes"), o = _e("currentMultipleActions"), u = _e("isMultipleActionsActive"), h = _(() => !!l.value[s.value] || n.value), A = _(() => {
    if (u.value) {
      if (Me(fe(o.value, "isHiddenCallback")))
        return o.value.isHiddenCallback({
          row: r.value,
          rowIndex: s.value
        });
      if (n.value)
        return !0;
    }
    return !1;
  }), E = _(() => h.value ? "_A_TABLE_DESELECT_THIS_ROW_" : "_A_TABLE_SELECT_THIS_ROW_");
  return {
    isCheckboxDisabled: A,
    isRowSelected: h,
    labelCheckbox: E,
    toggleCheckbox: () => {
      A.value || t("setSelectedRowsIndexes", { rowIndex: s.value });
    }
  };
}
function tW(e) {
  const t = f(e, "isTree"), n = f(e, "keyChildren"), r = f(e, "level"), s = f(e, "row"), l = f(e, "rowIndex"), o = f(e, "rowsLength"), u = _(() => {
    if (!n.value)
      return [];
    const T = fe(s.value, n.value);
    return Se(T) ? T : [];
  }), h = _(() => u.value.length > 0), A = _(() => r.value + 1), E = _(() => t.value ? {
    "aria-level": r.value,
    "aria-posinset": l.value + 1,
    "aria-setsize": o.value
  } : {}), p = _(() => {
    if (t.value)
      return `a_table__row_level a_table__row_level_${r.value}`;
  });
  return {
    ariaTreeAttributes: E,
    children: u,
    hasChildren: h,
    levelForChildren: A,
    rowClassLevelChildren: p
  };
}
function nW(e, {
  hasChildren: t = _(() => !1)
}) {
  const n = f(e, "isOneOfParentsClose"), r = f(e, "isTreeCollapsible"), s = f(e, "isTreeOpened"), l = B(!1), o = _(() => {
    if (t.value)
      return l.value;
  }), u = _(() => ({
    a_table__row_has_children: t.value,
    a_table__row_hide: n.value,
    a_table__row_level_open: t.value && l.value
  })), h = _(() => !!(n.value || !l.value));
  return {
    ariaExpanded: o,
    initIsChildrenOpen: () => {
      (!r.value || s.value) && (l.value = !0);
    },
    isOneOfParentsCloseForChildren: h,
    rowClassChildren: u,
    toggleChildren: () => {
      l.value = !l.value;
    }
  };
}
function rW(e) {
  const t = f(e, "allVisibleMobileColumns"), n = f(e, "countVisibleMobileColumns"), r = _e("isMobile"), s = B(!1), l = _(() => t.value.length - n.value), o = _(() => r.value && t.value.length > n.value), u = _(() => l.value === 1 ? "_A_TABLE_MOBILE_TR_PLUS_FIELD_" : "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_"), h = _(() => s.value ? "_A_TABLE_MOBILE_TR_CLOSE_" : u.value);
  return {
    countInvisibleMobileColumns: l,
    isAllColumnsVisibleMobile: s,
    isBtnToggleAllColumnsVisible: o,
    textBtnToggleAllColumns: h,
    toggleAllColumnsVisibleMobile: ({ $event: E }) => {
      s.value = !s.value, E.stopPropagation();
    }
  };
}
function aW(e, {
  hasChildren: t = _(() => !1)
}) {
  const n = f(e, "isFooter"), r = f(e, "rowIndex"), s = _e("hasPreview"), l = _e("previewRightRowIndex"), o = _e("previewRightRowIndexLast"), u = _(() => !!(!t.value && s.value && !n.value)), h = _(() => r.value === l.value), A = _(() => !h.value && r.value === o.value), E = _(() => wt({
    placeholder: h.value ? "_A_TABLE_ROW_PREVIEW_CLOSE_" : "_A_TABLE_ROW_PREVIEW_OPEN_"
  })), p = _(() => u.value ? {
    "aria-label": E.value
  } : {}), T = _(() => {
    if (u.value)
      return {
        a_table__row_preview_open: h.value,
        a_table__row_preview_was_open: A.value
      };
  });
  return {
    hasPreviewLocal: u,
    previewAttributes: p,
    rowClassPreview: T
  };
}
const _p = {
  name: "ATableTr",
  props: {
    allVisibleMobileColumns: {
      type: Array,
      required: !0
    },
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    columnActionsBtnGroupMaxWidthStyle: {
      type: String,
      required: !1,
      default: void 0
    },
    columnActionsView: {
      type: String,
      required: !0
    },
    countVisibleMobileColumns: {
      type: Number,
      required: !0
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    isOneOfParentsClose: {
      type: Boolean,
      required: !1
    },
    isPreviewDownOpen: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isTree: {
      type: Boolean,
      required: !1
    },
    isTreeCollapsible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTreeOpened: {
      type: Boolean,
      required: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "id"
    },
    level: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowClass: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    selectedRowsIndexes: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  setup(e, t) {
    const {
      ariaTreeAttributes: n,
      children: r,
      hasChildren: s,
      levelForChildren: l,
      rowClassLevelChildren: o
    } = tW(e), {
      ariaExpanded: u,
      initIsChildrenOpen: h,
      isOneOfParentsCloseForChildren: A,
      rowClassChildren: E,
      toggleChildren: p
    } = nW(e, {
      hasChildren: s
    }), {
      hasPreviewLocal: T,
      previewAttributes: m,
      rowClassPreview: L
    } = aW(e, {
      hasChildren: s
    }), {
      disabledPreviewRow: b,
      eventsLocal: v,
      roleLocal: I,
      rowClassComputed: y,
      rowHtmlId: R
    } = QV(e, {
      hasChildren: s,
      hasPreviewLocal: T,
      rowClassChildren: E,
      rowClassLevelChildren: o,
      rowClassPreview: L,
      toggleChildren: p
    }), {
      countInvisibleMobileColumns: D,
      isAllColumnsVisibleMobile: w,
      isBtnToggleAllColumnsVisible: M,
      textBtnToggleAllColumns: P,
      toggleAllColumnsVisibleMobile: x
    } = rW(e), {
      isCheckboxDisabled: C,
      isRowSelected: q,
      labelCheckbox: W,
      toggleCheckbox: z
    } = eW(e, t);
    return h(), {
      ariaExpanded: u,
      ariaTreeAttributes: n,
      children: r,
      countInvisibleMobileColumns: D,
      disabledPreviewRow: b,
      eventsLocal: v,
      hasChildren: s,
      isAllColumnsVisibleMobile: w,
      isBtnToggleAllColumnsVisible: M,
      isCheckboxDisabled: C,
      isOneOfParentsCloseForChildren: A,
      isRowSelected: q,
      labelCheckbox: W,
      levelForChildren: l,
      previewAttributes: m,
      roleLocal: I,
      rowClassComputed: y,
      rowHtmlId: R,
      textBtnToggleAllColumns: P,
      toggleAllColumnsVisibleMobile: x,
      toggleCheckbox: z,
      toggleChildren: p
    };
  },
  inject: [
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMultipleActionsActive",
    "isMobile"
  ],
  render() {
    let e = [];
    this.isMobile && !this.isAllColumnsVisibleMobile ? Y(this.allVisibleMobileColumns, (r, s) => {
      if (s + 1 > this.countVisibleMobileColumns)
        return !1;
      e.push(
        c(op, {
          key: r.id,
          column: r,
          columnIndex: s,
          disabledPreview: this.disabledPreviewRow,
          level: this.level,
          row: this.row,
          rowIndex: this.rowIndex,
          isFooter: this.isFooter
        }, this.$slots)
      );
    }) : e = this.columnsFilteredForRender.map((r, s) => c(op, {
      key: r.id,
      column: r,
      columnIndex: s,
      disabledPreview: this.disabledPreviewRow,
      level: this.level,
      row: this.row,
      rowIndex: this.rowIndex,
      isFooter: this.isFooter,
      showIconChildren: !!(this.isTreeCollapsible && this.hasChildren && s === 0)
    }, this.$slots));
    const t = this.isActionColumnVisible && c(JV, {
      columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
      columnActionsView: this.columnActionsView,
      disabledRowActions: this.disabledRowActions,
      row: this.row,
      rowIndex: this.rowIndex,
      isFooter: this.isFooter,
      rowActionsClass: this.rowActionsClass,
      isRowActionsStickyLocal: this.isRowActionsStickyLocal
    }, this.$slots), n = this.isMobile ? c("div", {
      class: "a_table_mobile__dl__wrapper"
    }, [
      this.$slots.rowMobilePrepend ? this.$slots.rowMobilePrepend({
        row: this.row,
        rowIndex: this.rowIndex,
        isFooter: this.isFooter
      }) : "",
      this.isTreeCollapsible && this.hasChildren ? c(ye, {
        "aria-hidden": !0,
        class: "a_table__row_level__icon",
        classDefault: "",
        iconLeft: fm,
        type: "text"
      }) : "",
      c("dl", {
        class: "a_table_mobile__dl"
      }, e),
      this.$slots.rowMobileAppend ? this.$slots.rowMobileAppend({
        row: this.row,
        rowIndex: this.rowIndex,
        isFooter: this.isFooter
      }) : ""
    ]) : e;
    return [
      c("div", {
        id: this.rowHtmlId,
        role: this.roleLocal,
        class: this.rowClassComputed,
        "aria-expanded": this.ariaExpanded,
        ...this.previewAttributes,
        ...this.ariaTreeAttributes,
        ...this.eventsLocal
      }, [
        this.isMultipleActionsActive && c("div", {
          class: "a_table__td a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;"
        }, [
          !this.isFooter && c(Pu, {
            isWidthAuto: !0,
            modelValue: this.isRowSelected,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        n,
        this.isMobile ? c("div", {
          class: "a_table_mobile__actions_parent"
        }, [
          this.isBtnToggleAllColumnsVisible && c(ye, {
            class: "a_btn a_btn_link a_table_mobile__columns_btn_toggle",
            extra: {
              count: this.countInvisibleMobileColumns
            },
            text: this.textBtnToggleAllColumns,
            type: "button",
            onClick: this.toggleAllColumnsVisibleMobile
          }),
          t
        ]) : t
      ]),
      this.isPreviewDownOpen && c(jV, {
        row: this.row,
        rowIndex: this.rowIndex
      }, {
        preview: (r) => this.$slots.preview ? this.$slots.preview(r) : void 0
      }),
      this.hasChildren ? this.children.map((r, s) => c(kr("ATableTr"), {
        key: r[this.keyId] || s,
        allVisibleMobileColumns: this.allVisibleMobileColumns,
        areAllRowsSelected: this.areAllRowsSelected,
        columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
        columnActionsView: this.columnActionsView,
        countVisibleMobileColumns: this.countVisibleMobileColumns,
        disabledPreview: this.disabledPreviewRow,
        disabledRowActions: this.disabledRowActions,
        isFooter: this.isFooter,
        isOneOfParentsClose: this.isOneOfParentsCloseForChildren,
        isPreviewDownOpen: !1,
        isRowActionsStickyLocal: this.isRowActionsStickyLocal,
        isTree: this.isTree,
        isTreeCollapsible: this.isTreeCollapsible,
        isTreeOpened: this.isTreeOpened,
        keyChildren: this.keyChildren,
        keyId: this.keyId,
        level: this.levelForChildren,
        row: r,
        rowActionsClass: this.rowActionsClass,
        rowClass: this.rowClass,
        rowIndex: s,
        rowsLength: this.children.length,
        selectedRowsIndexes: this.selectedRowsIndexes
      }, {
        get: (l) => [
          c(zd, {
            data: l.row,
            keyLabel: l.column.keyLabel,
            filter: l.column.filter,
            filterParameters: l.column.filterParameters,
            defaultValue: l.column.defaultValue,
            tag: l.column.filterTag || "div"
          })
        ],
        ...this.$slots
      })) : ""
    ];
  }
};
function sW(e, {
  isMobile: t = _(() => !1),
  rowsLocal: n = B([])
}) {
  const r = f(e, "columnActionsView"), s = f(e, "columnActionsWidth"), l = f(e, "columnActionsWidthDefaults"), o = f(e, "columnActionsWidthMin"), u = f(e, "rowActions"), h = _(() => r.value === "onePlusDropdown"), A = _(() => {
    let L = !1;
    e: for (let b = 0; b < n.value.length; b++) {
      const v = n.value[b];
      for (let I = 0; I < u.value.length; I++) {
        const y = u.value[I];
        if (lm({
          rowAction: y,
          row: v,
          rowIndex: b
        }) && y.type !== "divider") {
          L = !0;
          break e;
        }
      }
    }
    return L;
  }), E = _(() => !u.value.length || !h.value ? !1 : A.value), p = _(() => Pe(s.value) ? E.value && r.value === "onePlusDropdown" ? l.value.onePlusDropdown : l.value.default : s.value), T = _(() => Pe(o.value) ? E.value && r.value === "onePlusDropdown" ? l.value.onePlusDropdownMin : l.value.min : o.value);
  return {
    columnActionsBtnGroupMaxWidthStyle: _(() => {
      const L = l.value.btnGroupMaxWidth;
      if (!t.value && r.value !== "dropdown" && !Pe(L))
        return `max-width: ${L}px`;
    }),
    columnActionsWidthLocal: p,
    columnActionsWidthMinLocal: T,
    isColumnActionWide: E
  };
}
function iW(e, {
  columnsScrollInvisible: t = B([]),
  indexFirstScrollInvisibleColumn: n = B(void 0),
  modelColumnsVisibleLocal: r = B({}),
  modelIsTableWithoutScrollComputed: s = _(() => !1),
  columnsOrderedFromSimpleTable: l = _(() => [])
}) {
  const o = f(e, "columns"), u = f(e, "isActionColumnVisible"), h = f(e, "isSimpleTable"), A = f(e, "modelColumnsOrdering"), E = f(e, "multipleActions"), p = _(() => Da(o.value, "id")), T = _(() => {
    const y = {
      true: [],
      false: [],
      trueObject: {},
      falseObject: {},
      trueColumns: [],
      falseColumns: []
    };
    return Y(pe(o.value), (R) => {
      const D = R.id;
      R.locked ? (y.true.push(D), y.trueColumns.push(R), y.trueObject[D] = !0) : (y.false.push(D), y.falseColumns.push(R), y.falseObject[D] = !0);
    }), y;
  }), m = _(() => {
    if (h.value && l.value && l.value.length)
      return l.value;
    if (!A.value.length)
      return [...T.value.trueColumns, ...T.value.falseColumns];
    const y = [], R = pe(p.value);
    return Y(A.value, (D) => {
      R[D] && y.push(R[D]);
    }), y;
  }), L = _(() => {
    const y = [], R = {};
    return Y(m.value, (D, w) => {
      vV({
        column: D,
        columnIndex: w,
        modelIsTableWithoutScroll: s.value,
        modelColumnsVisibleLocal: r.value,
        indexFirstScrollInvisibleColumn: n.value
      }) && (R[y.length] = w, y.push(D));
    }), {
      columns: y,
      columnsIndexesMapping: R
    };
  }), b = _(() => L.value.columnsIndexesMapping), v = _(() => L.value.columns), I = _(() => {
    let y = v.value.length;
    return s.value && (y += t.value.length), u.value && y++, E.value.length && y++, y;
  });
  return {
    columnIdsGroupByLocked: T,
    columnsFilteredForRender: v,
    columnsFilteredForRenderIndexesMapping: b,
    columnsOrdered: m,
    countNotHiddenColumns: I
  };
}
function lW(e, {
  modelSort: t = B([])
}) {
  const n = f(e, "columns"), r = f(e, "showFirstSortingSequenceNumber"), s = f(e, "sortingSequenceNumberClass"), l = _(() => Pt(n.value, (I) => LV({ column: I }))), o = _(() => Bn(l.value, (I, y) => ({
    ...I,
    _index: I.prio || y
  }))), u = _(() => Bn(o.value, (I) => (I.group && I.group.length && (I.group = Bn(I.group, (y, R) => [
    y,
    R
  ].join("%%%"))), I))), h = ({ groups: I, group: y, level: R, columnsOrderedFromGroups: D, firstLevelGroupObject: w }) => {
    const M = y ? Pt(I, (C) => Cd(C, y[R - 1])) : I, P = TT(M, (C) => C[R]), x = Bn(P, (C) => {
      const q = {
        id: C[R].split("%%%")[0]
      };
      let W;
      return R === 0 ? (W = q, W.columnIndexes = []) : W = w, C.length > R + 1 ? q.children = fe(
        h({
          groups: I,
          group: C,
          level: R + 1,
          columnsOrderedFromGroups: D,
          firstLevelGroupObject: W
        }),
        "recursiveGroup"
      ) : C.length === R + 1 && (q.columns = Pt(u.value, (z) => Cd(z.group, C[R])), W.columnIndexes.push(...Bn(q.columns, "_index")), D.push(...q.columns)), q;
    });
    return {
      columnsOrderedFromGroups: D,
      recursiveGroup: x
    };
  }, A = _(() => Bn(u.value, (I) => fe(I, "group", I))), E = _(() => Pt(A.value, (I) => Se(I))), p = _(() => Pt(A.value, (I) => !Se(I))), T = _(() => {
    const I = [];
    return h({ groups: E.value, group: null, level: 0, columnsOrderedFromGroups: I });
  }), m = _(() => wd([
    ...T.value.columnsOrderedFromGroups,
    ...p.value
  ], "_index")), L = (I) => c(Jd, {
    ref: "th",
    class: "a_table__cell__child_group",
    column: I,
    columnGroupNames: Bn(I.group, (y) => y.split("%%%")[0]),
    columnIndex: I._index,
    hasMultipleActions: !1,
    modelSort: t.value,
    showFirstSortingSequenceNumber: r.value,
    sortingSequenceNumberClass: s.value
  }), b = (I) => c("div", {
    class: "a_table__th_group"
  }, [
    c("div", {
      class: "a_table__th_child_group"
    }, [
      c("div", {
        class: "a_table__cell_group a_text_center"
      }, [
        I.id && c(Te, {
          html: I.id,
          tag: "span",
          "aria-hidden": !0
        })
      ]),
      c("div", {
        class: "a_table__th_group_container"
      }, I.children ? Bn(I.children, (y) => b(y)) : Bn(I.columns, (y) => L(y)))
    ])
  ]), v = _(() => {
    const I = wd([
      ...T.value.recursiveGroup,
      ...p.value
    ], (y) => y.columnIndexes ? Kw(y.columnIndexes) : y._index);
    return Bn(I, (y) => y.columnIndexes ? b(y) : L(y));
  });
  return {
    columnsOrderedFromSimpleTable: m,
    renderedGroupedColumns: v
  };
}
function oW(e, { emit: t }, {
  checkVisibleColumns: n = () => {
  },
  columnIdsGroupByLocked: r = _(() => ({
    true: [],
    false: [],
    trueObject: {},
    falseObject: {},
    trueColumns: [],
    falseColumns: []
  })),
  columnsFilteredForRenderIndexesMapping: s = _(() => ({}))
}) {
  const l = f(e, "columns"), o = f(e, "modelColumnsOrdering"), u = ({ columnIndexDraggable: E, columnIndexOver: p, reset: T, inHeader: m }) => {
    if (E === p && !T)
      return;
    m && (E = s.value[E], p = s.value[p]);
    let L;
    if (T)
      L = [...r.value.true, ...r.value.false];
    else {
      L = pe(o.value);
      const b = L[E];
      L.splice(E, 1), L.splice(p, 0, b);
    }
    t("changeColumnsOrdering", {
      columnIndexDraggable: E,
      columnIndexOver: p,
      modelColumnsOrdering: L
    }), setTimeout(() => {
      n();
    });
  }, h = () => {
    let E = [], p = !1;
    if (!o.value.length)
      E = [...r.value.true, ...r.value.false];
    else {
      E = [...r.value.true];
      const T = pe(r.value.falseObject);
      Y(o.value, (m) => {
        T[m] && (E.push(m), delete T[m]);
      }), Y(T, (m, L) => {
        E.push(L);
      }), JSON.stringify(o.value) !== JSON.stringify(E) && (p = !0);
    }
    return {
      shouldFixColumns: p,
      modelColumnsOrderingLocal: E
    };
  }, A = () => {
    const {
      shouldFixColumns: E,
      modelColumnsOrderingLocal: p
    } = h();
    E && t("changeColumnsOrdering", {
      modelColumnsOrdering: p,
      shouldFixColumns: E
    });
  };
  return tt(l, () => {
    A();
  }, {
    deep: !0
  }), {
    changeColumnsOrdering: u,
    checkColumnsOrdering: h
  };
}
function uW(e) {
  const t = f(e, "countAllRows"), n = f(e, "data"), r = f(e, "isTree"), s = f(e, "keyChildren"), l = f(e, "keyCountAllRowsInData"), o = _(() => nt(n.value)), u = _(() => Se(n.value)), h = _(() => le(t.value) ? o.value ? +fe(n.value, l.value) : u.value ? r.value ? MP({
    array: n.value,
    keyChildren: s.value
  }) : n.value.length : 0 : t.value), A = _(() => le(t.value) ? n.value.length : t.value);
  return {
    countAllRowsLocal: h,
    totalRowsCount: A
  };
}
function _W({
  tableRef: e = B(void 0)
}) {
  return {
    scrollToTable: () => {
      if (e.value) {
        let s = e.value.getBoundingClientRect().top + window.scrollY - window.innerHeight / 2;
        s < 0 && (s = 0), document.documentElement.scrollTop = s;
      }
    },
    setFocusToTable: () => {
      e.value && (e.value.setAttribute("tabindex", "-1"), e.value.focus(), e.value.removeAttribute("tabindex"));
    }
  };
}
function dW(e, { emit: t }, {
  checkColumnsOrdering: n = () => {
  },
  checkVisibleColumns: r = () => {
  },
  modelColumnsVisibleLocal: s = B({})
}) {
  const l = f(e, "modelColumnsVisible"), o = f(e, "columns");
  return {
    initTable: () => {
      const {
        shouldFixColumns: h,
        modelColumnsOrderingLocal: A
      } = n();
      let E = !1;
      Ti(l.value) ? s.value = pe(l.value) : (E = !0, s.value = nm(o.value), r()), t("initTable", pe({
        columnsOrdering: {
          model: A,
          shouldFix: h
        },
        columnsVisible: {
          model: s.value,
          shouldFix: E
        }
      }));
    }
  };
}
function cW(e, { emit: t }, {
  closePreviewAll: n = () => {
  },
  scrollToTable: r = () => {
  },
  setFocusToTable: s = () => {
  },
  viewCurrent: l = _(() => ({}))
}) {
  const o = f(e, "isTree"), u = f(e, "offsetStart"), h = f(e, "pagination"), A = B(void 0), E = B(void 0), p = () => {
    A.value = h.value.limitStart || 10, E.value = u.value;
  }, T = _(() => {
    var b;
    return o.value ? !1 : (b = h.value) != null && b.use ? l.value ? l.value.usePagination || !1 : !0 : !1;
  });
  return {
    changeLimit: (b) => {
      s(), r(), A.value = b, E.value = u.value, t("changeLimit", {
        offset: E.value,
        limit: b
      }), n();
    },
    changeOffset: (b) => {
      let v, I;
      nt(b) ? (v = b.offset, I = b.reload) : (v = b, I = !0), I && (s(), r()), E.value = v, t("changeOffset", {
        offset: v,
        limit: A.value
      }), I && n();
    },
    initLocalVars: p,
    limit: A,
    offset: E,
    usePaginationLocal: T
  };
}
function fW({
  columnsOrdered: e = B([]),
  isMobile: t = B(!1),
  modelColumnsVisibleLocal: n = B({})
}) {
  return {
    allVisibleMobileColumns: _(() => t.value ? Pt(e.value, (s) => s.isRender !== !1 && n.value[s.id] !== !1) : [])
  };
}
function hW(e, { emit: t }, {
  checkVisibleColumns: n = () => {
  },
  isMultipleActionsActive: r = B(void 0),
  rowsLocalAll: s = _(() => []),
  rowsLocalLength: l = _(() => 0)
}) {
  const o = f(e, "id"), u = f(e, "multipleActions"), h = B(void 0), A = B({}), E = B(!1), p = _(() => u.value.length > 0), T = _(() => Me(fe(h.value, "isHiddenCallback"))), m = _(() => Pt(s.value, (P, x) => A.value[x])), L = () => {
    A.value = {};
  }, b = () => {
    r.value = !1, h.value = void 0, E.value = !1, L();
  }, v = () => {
    if (window.isScrollDisabled)
      return;
    const P = sm({ tableId: o.value });
    aa({
      selector: `#${P}`
    });
  }, I = ({ isActive: P, action: x } = {}) => {
    if (P) {
      r.value = !0, h.value = x, setTimeout(() => {
        n(), v();
      }), t("toggleMultipleActions", { isActive: P, action: x });
      return;
    }
    r.value ? b() : r.value = !0, setTimeout(() => {
      n(), v();
    }), t("toggleMultipleActions", { isActive: P, action: x });
  }, y = _(() => Ti(A.value)), R = _(() => l.value > 0 && l.value === y.value), D = _(() => y.value > 0);
  return {
    areAllRowsSelected: E,
    areAllVisibleRowsSelected: R,
    areSomeRowsSelected: D,
    closeMultipleActionsActive: b,
    currentMultipleActions: h,
    hasMultipleActions: p,
    selectedRows: m,
    selectedRowsIndexes: A,
    setEmptySelectedRowsIndexes: L,
    setSelectedRowsIndexes: ({ rowIndex: P, isAll: x }) => {
      if (x) {
        if (D.value)
          L();
        else {
          const C = {};
          T.value ? rr(l.value, (q) => {
            h.value.isHiddenCallback({
              row: s.value[q],
              rowIndex: q
            }) || (C[q] = !0);
          }) : rr(l.value, (q) => {
            C[q] = !0;
          }), A.value = C;
        }
        return;
      }
      A.value[P] ? delete A.value[P] : A.value[P] = !0;
    },
    toggleBtnAllRows: () => {
      E.value = !E.value, E.value && L();
    },
    toggleMultipleActionsActive: I
  };
}
function AW(e, { emit: t }, {
  aTableRef: n = B({}),
  tableGrandparentRef: r = B({})
}) {
  const {
    previewRef: s,
    removePreviewRef: l
  } = um(), o = f(e, "previewBoxWidth"), u = 200, h = 50;
  let A, E = 0, p = 0, T = 0;
  const m = () => {
    p = n.value.getBoundingClientRect().left;
  }, L = ({ clientWidth: C }) => {
    E = C, A = C / 100 * h, m();
  }, b = ({ clientWidthLocal: C, clientXTableParent: q, previewBoxWidth: W }) => {
    const z = C - q - W;
    n.value.style.width = `${z}px`;
  }, v = ({ clientX: C = 0, previewRef: q, previewBoxWidth: W = 0 }) => {
    let z = W || E - C;
    z < u ? z = u : z > A && (z = A), b({ clientWidthLocal: E, clientXTableParent: p, previewBoxWidth: z }), q.style.width = `${z}px`;
  }, I = ({ previewRef: C }) => {
    fe(C, "style.removeProperty") && C.style.removeProperty("width"), fe(n, "value.style.removeProperty") && n.value.style.removeProperty("width");
  }, y = ({ previewRef: C }) => {
    E = document.documentElement.clientWidth, T = fe(r, "value.offsetWidth", 0), m(), v({
      previewRef: C,
      previewBoxWidth: o.value
    });
  }, R = ({ previewRef: C, isOpen: q }) => {
    q ? y({ previewRef: C }) : I({ previewRef: C });
  }, D = ({ previewRightWidth: C }) => {
    t("mouseupResizePreviewRight", { previewRightWidth: C });
  }, w = () => {
    y({
      previewRef: s.value
    });
  }, M = new ResizeObserver(
    ol((C) => {
      const q = C[0].contentRect;
      T !== q.width && (T = q.width, w());
    }, 300)
  ), P = () => {
    M.observe(r.value);
  }, x = () => {
    M.unobserve(r.value);
  };
  return Ct(() => {
    l(), x();
  }), {
    addEventListenerWindowResize: P,
    mousedownResizePreviewRight: L,
    mousemoveResizePreviewRight: v,
    mouseupResizePreviewRight: D,
    removeEventListenerWindowResize: x,
    togglePreviewResize: R
  };
}
function EW(e, t, {
  aTableRef: n = B({}),
  isMobile: r = B(void 0),
  rowsLocalAll: s = _(() => []),
  tableGrandparentRef: l = B({})
}) {
  const {
    isDropdownGlobalOpen: o
  } = IS(), {
    addEventListenerWindowResize: u,
    mousedownResizePreviewRight: h,
    mousemoveResizePreviewRight: A,
    mouseupResizePreviewRight: E,
    removeEventListenerWindowResize: p,
    togglePreviewResize: T
  } = AW(e, t, {
    aTableRef: n,
    tableGrandparentRef: l
  }), m = f(e, "keyId"), L = f(e, "preview"), b = f(e, "id"), v = t.emit, I = B({}), y = B(void 0), R = B(void 0), D = _(() => !!L.value), w = ({ rowIndex: me }) => {
    window.isScrollDisabled || setTimeout(() => {
      const ae = `#${b.value}_${me}`;
      aa({ selector: ae });
    });
  }, M = () => {
    window.isScrollDisabled || setTimeout(() => {
      const me = `#${am({ tableId: b.value })}`;
      aa({ selector: me });
    });
  }, P = _(() => L.value === "right" || r.value), x = _(() => !le(y.value)), C = () => {
    w({
      rowIndex: y.value
    }), v("togglePreview", {
      row: s.value[y.value],
      rowIndex: y.value,
      typeToggle: "close"
    }), R.value = y.value, y.value = void 0, p();
  }, q = () => {
    v("togglePreview", {
      row: s.value[y.value],
      rowIndex: y.value,
      typeToggle: "close"
    }), R.value = void 0, y.value = void 0, p();
  }, W = _(() => L.value === "down"), z = ({ rowIndex: me, row: ae }) => {
    const Oe = ru({ row: ae, rowIndex: me, keyId: m.value });
    delete I.value[Oe];
  }, oe = () => {
    I.value = {};
  }, te = () => {
    q(), oe();
  }, ue = ({ rowIndex: me, row: ae } = {}) => {
    P.value ? C() : W.value && z({ rowIndex: me, row: ae });
  }, re = ({ rowIndex: me }) => {
    !r.value && Pe(y.value) && u(), v("togglePreview", {
      row: s.value[me],
      rowIndex: me,
      typeToggle: "open"
    }), y.value = me, R.value = void 0, M();
  }, ie = ({ rowIndex: me }) => {
    y.value === me ? C() : re({ rowIndex: me });
  }, Ae = ({ rowIndex: me, row: ae }) => {
    const Oe = ru({ row: ae, rowIndex: me, keyId: m.value });
    I.value[Oe] ? delete I.value[Oe] : I.value[Oe] = !0;
  };
  return {
    closePreview: ue,
    closePreviewAll: te,
    hasPreview: D,
    isPreviewRightOpen: x,
    mousedownResizePreviewRight: h,
    mousemoveResizePreviewRight: A,
    mouseupResizePreviewRight: E,
    onTogglePreview: ({ row: me, rowIndex: ae }) => {
      if (!o.value) {
        if (P.value) {
          ie({ rowIndex: ae });
          return;
        }
        W.value && Ae({ row: me, rowIndex: ae });
      }
    },
    previewDownRowIds: I,
    previewRightRowIndex: y,
    previewRightRowIndexLast: R,
    togglePreviewResize: T
  };
}
function pW(e, {
  dataSorted: t = _(() => []),
  limit: n = B(0),
  offset: r = B(0),
  setEmptySelectedRowsIndexes: s = () => {
  },
  usePaginationLocal: l = _(() => !1)
}) {
  const o = f(e, "clearSelectedRowsOnDataChange"), u = f(e, "pagination"), h = f(e, "rowsCountRenderPerTick"), A = B([]), E = B([]);
  let p = !0, T = 0, m;
  const L = _(() => {
    if (n.value && !u.value.isOutside && l.value) {
      const x = r.value, C = x + n.value;
      return t.value.slice(x, C);
    }
    return t.value;
  }), b = _(() => L.value), v = _(() => b.value.length), I = _(() => !!v.value), y = () => {
    const x = T * h.value, C = x + h.value;
    Bn(L.value.slice(x, C), (q) => E.value.push(q)), T++;
  }, R = () => {
    m = setInterval(() => {
      T * h.value >= L.value.length ? clearInterval(m) : y();
    });
  }, D = () => {
    clearInterval(m);
  }, w = ({ row: x, rowIndex: C }) => {
    C > E.value.length - 1 || (E.value[C] = x);
  }, M = ({ row: x }) => {
    E.value.unshift(x);
  }, P = ({ index: x }) => {
    E.value.splice(x, 1);
  };
  return tt(L, (x) => {
    mc(x, A.value) || (A.value = [...x], !p && o.value && s(), p = !1, E.value = [], T = 0, D(), h.value > 0 ? (y(), R()) : E.value = L.value);
  }, {
    immediate: !0,
    deep: !0
  }), {
    addRow: M,
    deleteRow: P,
    hasRows: I,
    rowsLocal: E,
    rowsLocalAll: b,
    rowsLocalLength: v,
    stopRenderRows: D,
    updateRow: w
  };
}
function TW(e, { emit: t }, {
  columnActionsWidth: n = _(() => 0),
  columnActionsWidthMin: r = _(() => 0),
  columnsOrdered: s = _(() => []),
  columnsScrollInvisible: l = B([]),
  indexFirstScrollInvisibleColumn: o = B(void 0),
  isMobile: u = B(!1),
  isMultipleActionsActive: h = B(void 0),
  modelColumnsVisibleLocal: A = B({}),
  modelIsTableWithoutScroll: E = B(!1),
  modelIsTableWithoutScrollComputed: p = _(() => !1)
}) {
  const T = f(e, "columnWidthDefault"), m = f(e, "isActionColumnVisible"), L = f(e, "isSimpleTable"), b = B(void 0), v = B(0), I = B(void 0);
  let y = !1;
  const R = 20, D = _(() => m.value ? r.value : 0), w = _(() => {
    const te = h.value ? r.value : 0, ue = L.value ? 0 : R;
    return te + ue;
  }), M = ({
    sumGrows: te = 0,
    freeSpaceWidth: ue = 0
  }) => {
    te > 0 ? v.value = ue / te : v.value = 0;
  }, P = () => {
    if (le(o.value) || s.value.length < o.value)
      l.value = [];
    else {
      const te = [];
      for (let ue = o.value; ue < s.value.length; ue++) {
        const re = s.value[ue];
        al({
          column: re,
          modelColumnsVisibleLocal: A.value
        }) && te.push(pe(re));
      }
      l.value = te;
    }
  }, x = () => {
    l.value = [], v.value = 0, o.value = 1e3, I.value = 0;
  }, C = () => {
    if (u.value || I.value === 0) {
      x();
      return;
    }
    if (Pe(I.value))
      return;
    const te = I.value - w.value - D.value, ue = I.value - w.value - n.value;
    let re = 0, ie = 0, Ae = 0, we = !1;
    if (Y(s.value, (Oe) => {
      if (!al({
        column: Oe,
        modelColumnsVisibleLocal: A.value
      })) {
        ie++;
        return;
      }
      const ve = +Oe.width || T.value;
      if (re + ve > te)
        return we = !0, !1;
      re += ve, ie++, Ae += le(Oe.grow) ? 1 : Oe.grow;
    }), we && re > ue)
      for (let Oe = ie - 1; Oe >= 0; Oe--) {
        ie--;
        const ve = s.value[ie];
        if (!al({
          column: ve,
          modelColumnsVisibleLocal: A.value
        }))
          continue;
        const Ke = +ve.width || T.value;
        if (re -= Ke, Ae -= le(ve.grow) ? 1 : ve.grow, re <= ue)
          break;
      }
    let me = 0;
    const ae = we ? ue : te;
    (p.value || ie === s.value.length) && (me = ae - re), o.value = ie, M({
      sumGrows: Ae,
      freeSpaceWidth: me
    }), P();
  }, q = ({ entries: te, forceAdjust: ue }) => {
    const re = te[0].contentRect;
    (ue || I.value > re.width + R || I.value < re.width - R) && (y || (y = !0, I.value = re.width, C(), y = !1));
  }, W = new ResizeObserver(
    ol((te) => {
      Pe(I.value) ? q({ entries: te, forceAdjust: !0 }) : q({ entries: te });
    }, 300)
  ), z = (te) => {
    te ? (W.unobserve(b.value), x()) : (W.observe(b.value), E.value && C());
  }, oe = (te) => {
    E.value = te, t("updateModelIsTableWithoutScroll", te), E.value && C();
  };
  return Vr(() => {
    u.value || W.observe(b.value);
  }), Ct(() => {
    W.unobserve(b.value);
  }), tt(s, () => {
    C();
  }), {
    aTableRef: b,
    changeModelIsTableWithoutScroll: oe,
    checkVisibleColumns: C,
    columnsVisibleAdditionalSpaceForOneGrow: v,
    onWatchMobileScrollControl: z
  };
}
function SW(e) {
  const t = f(e, "hasMobile"), n = f(e, "isActionColumnVisible"), r = f(e, "isActionColumnVisible"), s = f(e, "isColumnsDnd"), l = f(e, "isSimpleTable"), o = f(e, "modelIsTableWithoutScrollStart"), u = f(e, "rowActions"), h = B(void 0), A = () => {
    h.value = o.value;
  }, {
    isMobileWidth: E
  } = An(), p = _(() => l.value ? u.value && !!u.value.length && n.value : r.value), T = _(() => !!(r.value && !l.value)), m = _(() => !!(s.value && !l.value)), L = _(() => t.value ? !!E.value : !1), b = _(() => l.value ? !1 : h.value);
  return {
    initModelIsTableWithoutScroll: A,
    isActionColumnVisibleLocal: p,
    isActionIconVisibleLocal: T,
    isColumnsDndLocal: m,
    isMobile: L,
    modelIsTableWithoutScroll: h,
    modelIsTableWithoutScrollComputed: b
  };
}
function mW(e, {
  viewCurrent: t = _(() => ({}))
}) {
  const n = f(e, "data"), r = f(e, "isSortingOutside"), s = f(e, "modelSort"), l = f(e, "useAdditionalSorting"), o = B([]), u = _(() => l.value ? t.value ? t.value.useAdditionalSorting || !1 : !0 : !1), h = () => {
    ot(s.value) ? o.value = [s.value] : Se(s.value) && (o.value = pe(s.value));
  }, A = _(() => {
    const p = {
      models: [],
      directions: []
    };
    return o.value.length && Y(o.value, (T) => {
      let m = "asc", L = T;
      Ic(T, "-") && (m = "desc", L = T.slice(1)), p.models.push(L), p.directions.push(m);
    }), p;
  }), E = _(() => o.value.length && !r.value ? Lc(n.value || [], A.value.models, A.value.directions) : n.value || []);
  return tt(s, () => {
    h();
  }), {
    dataSorted: E,
    initModelSort: h,
    modelSortLocal: o,
    useAdditionalSortingLocal: u
  };
}
function LW(e, { emit: t }, {
  modelSortLocal: n = B([]),
  closePreviewAll: r = () => {
  }
}) {
  const s = f(e, "id"), l = f(e, "isSortingMultiColumn"), o = f(e, "sortingMultiColumnKey"), u = _(() => `${o.value}Key`), h = (T) => l.value && T[u.value], A = ({ sortId: T }) => {
    const m = n.value.indexOf(T);
    if (m !== -1) {
      n.value.splice(m, 1, `-${T}`);
      return;
    }
    const L = n.value.indexOf(`-${T}`);
    if (L !== -1) {
      n.value.splice(L, 1);
      return;
    }
    n.value.push(T);
  }, E = ({ sortId: T }) => {
    if (n.value.indexOf(T) !== -1) {
      n.value = [`-${T}`];
      return;
    }
    if (n.value.indexOf(`-${T}`) !== -1) {
      n.value = [];
      return;
    }
    n.value = [T];
  };
  return {
    changeModelSort: ({ sortId: T, $event: m, modelAll: L }) => {
      L ? n.value = L : h(m) ? A({ sortId: T }) : E({ sortId: T }), t("changeSorting", {
        modelSort: pe(n.value)
      }), Rt.$emit("changeTableSorting", {
        modelSort: pe(n.value),
        tableId: s.value
      }), r();
    }
  };
}
function bW(e, {
  isMobile: t = B(void 0),
  modelIsTableWithoutScrollComputed: n = _(() => {
  })
}) {
  const r = f(e, "rowActionsSticky");
  return {
    isRowActionsStickyLocal: _(() => !!(!t.value && r.value && !n.value))
  };
}
function vW(e, {
  countNotHiddenColumns: t = _(() => -1),
  isMobile: n = B(!1)
}) {
  const r = f(e, "id"), s = f(e, "isLabelVisible"), l = _(() => {
    const h = {};
    return n.value || (h.role = "table", h["aria-colcount"] = t.value), h;
  }), o = _(() => n.value ? "list" : "rowgroup"), u = _(() => {
    if (s.value)
      return im({ tableId: r.value });
  });
  return {
    tableChildRole: o,
    tableLabelId: u,
    tableRoleAttributes: l
  };
}
function IW(e, { emit: t }, {
  modelColumnsVisibleLocal: n = B({}),
  checkVisibleColumns: r = () => {
  }
}) {
  return {
    changeModelColumnsVisible: (l) => {
      n.value = l, t("update:modelColumnsVisible", pe(n.value)), r();
    }
  };
}
function gW(e) {
  const t = f(e, "texts");
  return {
    emptyText: _(() => Pe(t.value.empty) ? "_A_TABLE_EMPTY_TEXT_" : t.value.empty)
  };
}
function yW() {
  const e = B([]), t = B(void 0), n = B(void 0), r = B({}), s = B(void 0), l = B(void 0);
  return {
    columnsScrollInvisible: e,
    indexFirstScrollInvisibleColumn: t,
    isMultipleActionsActive: n,
    modelColumnsVisibleLocal: r,
    tableGrandparentRef: s,
    tableRef: l
  };
}
function RW(e, { emit: t }, {
  closePreviewAll: n = () => {
  }
}) {
  const r = f(e, "views"), s = f(e, "modelFilters"), l = f(e, "modelView"), o = _(() => Da(r.value, "id")), u = _(() => o.value[l.value]), h = _(() => r.value.length > 1), A = () => {
    if (h.value) {
      const T = Tc(r.value, ["active", !0]);
      let m = r.value[0].id;
      T && (m = T.id), t("updateView", {
        _modelView: m,
        view: o.value[m],
        modelFilters: s.value,
        init: !0
      });
    }
  }, E = (T) => {
    n(), t("updateView", {
      _modelView: T,
      view: o.value[T],
      modelFilters: s.value
    });
  }, p = _(() => !u.value || u.value.type === "table");
  return {
    hasViews: h,
    initViewCurrent: A,
    isViewTableVisible: p,
    updateViewCurrent: E,
    viewCurrent: u
  };
}
const Bde = {
  name: "ATable",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    clearSelectedRowsOnDataChange: {
      type: Boolean,
      required: !1,
      default: !0
    },
    columnActionsOnePlusDropdownOptions: {
      type: Object,
      required: !1,
      default: () => ({
        actionsClasses: ["a_btn a_btn_primary a_text_truncate"],
        btnGroupClass: "a_btn_group a_btn_group_table",
        hasDividerBeforeDropdown: !1,
        indexFirstDropdownAction: 1,
        indexFirstDropdownActionMobile: 1,
        minDropdownActions: 1
      })
    },
    columnActionsView: {
      type: String,
      required: !1,
      default: "dropdown",
      validator: (e) => ["onePlusDropdown", "onePlusDropdownEmptyPlace", "dropdown"].indexOf(e) !== -1
    },
    columnActionsWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    columnActionsWidthDefaults: {
      type: Object,
      required: !1,
      default: () => ({
        default: 170,
        min: 50,
        onePlusDropdown: 320,
        onePlusDropdownMin: 200,
        btnGroupMaxWidth: 180
      })
    },
    columnActionsWidthMin: {
      type: Number,
      required: !1,
      default: void 0
    },
    columns: {
      type: Array,
      required: !0
    },
    columnsDefaultValue: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    columnWidthDefault: {
      type: Number,
      required: !1,
      default: 250
    },
    countAllRows: {
      type: Number,
      required: !1,
      default: void 0
    },
    countVisibleMobileColumns: {
      type: Number,
      required: !1,
      default: 4,
      validator: (e) => e > 0
    },
    borderType: {
      type: String,
      required: !1,
      default: () => ai.value.propsDefault.borderType,
      validator: (e) => ["bordered", "innerBordered"].indexOf(e) !== -1
    },
    data: {
      type: [Array, Object, Promise],
      required: !1
    },
    disabledActions: {
      type: Boolean,
      required: !1
    },
    disabledMultipleActions: {
      type: Boolean,
      required: !1
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    disabledViews: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    hasScrollClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_table")
    },
    isActionColumnVisible: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isActionIconVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isColumnsDnd: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLabelVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isLoadingMultipleActions: {
      type: Boolean,
      required: !1
    },
    isLoadingOptions: {
      type: Boolean,
      required: !1
    },
    isLoadingTable: {
      type: Boolean,
      required: !1
    },
    isQuickSearch: {
      type: Boolean,
      required: !1
    },
    isSimpleTable: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSortingOutside: {
      type: Boolean,
      required: !1
    },
    isTree: {
      type: Boolean,
      required: !1
    },
    isTreeCollapsible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTreeOpened: {
      type: Boolean,
      required: !1
    },
    keyCountAllRowsInData: {
      type: String,
      required: !1,
      default: "count"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyChildren: {
      type: String,
      required: !1,
      default: "children"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !1,
      default: "h2"
    },
    modelColumnsOrdering: {
      type: Array,
      required: !1,
      default: () => []
    },
    modelColumnsVisible: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelIsTableWithoutScrollStart: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelQuickSearch: {
      type: String,
      required: !1,
      default: ""
    },
    modelSort: {
      type: [String, Array],
      required: !1,
      default: () => []
    },
    modelView: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    multipleActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    offsetStart: {
      type: Number,
      required: !1,
      default: 0
    },
    pagination: {
      type: Object,
      required: !1,
      default: () => ({
        use: !1,
        maxPages: 5,
        limitsPerPage: [],
        limitStart: 10,
        disabled: !1,
        isOutside: !1,
        outside: !1,
        modes: {
          /*
           * perPage: inline / select
           * pagination: normal / short / loadMore
           */
          desktop: {
            pagination: {
              mode: "normal",
              position: 0
            },
            perPage: {
              mode: "inline",
              position: 1
            }
          },
          mobile: {
            pagination: {
              mode: "loadMore"
            }
          }
        }
      })
    },
    preview: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["right", "down"].indexOf(e) !== -1
    },
    previewBoxWidth: {
      type: Number,
      required: !1,
      default: 300
    },
    previewStyles: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowActionsSticky: {
      type: Boolean,
      required: !1,
      default: !0
    },
    rowClass: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    rowsCountRenderPerTick: {
      type: Number,
      required: !1,
      default: 25,
      validator: (e) => Fa(e) && e >= 0
    },
    rowsFooter: {
      type: Array,
      required: !1,
      default: () => []
    },
    showCount: {
      type: Boolean,
      required: !1,
      default: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1,
      default: !1
    },
    sortingMultiColumnKey: {
      type: String,
      required: !1,
      default: "shift",
      validator: (e) => ["shift", "ctrl", "alt"].indexOf(e) !== -1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1,
      default: "a_badge"
    },
    tableActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    tableActionsIndexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: -1
    },
    tableActionsIndexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: 0
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        empty: "_A_TABLE_EMPTY_TEXT_"
      })
    },
    useAdditionalSorting: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useViewSlot: {
      type: Boolean,
      required: !1
    },
    valuesForColumnDefault: {
      type: Array,
      required: !1,
      default: () => [null, void 0, ""]
    },
    views: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  emits: [
    "changeColumnsOrdering",
    "changeColumnsVisible",
    "changeLimit",
    "changeOffset",
    "changeSorting",
    "mouseupResizePreviewRight",
    "initTable",
    "togglePreview",
    "toggleMultipleActions",
    "update:modelColumnsOrder",
    "update:modelColumnsVisible",
    "update:modelQuickSearch",
    "updateModelIsTableWithoutScroll",
    "updateView"
  ],
  provide() {
    return {
      changeModelColumnsVisible: this.changeModelColumnsVisible,
      columnActionsOnePlusDropdownOptions: _(() => this.columnActionsOnePlusDropdownOptions),
      columns: _(() => this.columns),
      columnsDefaultValue: _(() => this.columnsDefaultValue),
      columnWidthDefault: _(() => this.columnWidthDefault),
      isLoadingOptions: _(() => this.isLoadingOptions),
      isLoadingTable: _(() => this.isLoadingTable),
      keyId: _(() => this.keyId),
      rowActions: _(() => this.rowActions),
      tableId: _(() => this.id),
      valuesForColumnDefault: _(() => this.valuesForColumnDefault)
    };
  },
  setup(e, t) {
    const {
      initModelIsTableWithoutScroll: n,
      isActionColumnVisibleLocal: r,
      isActionIconVisibleLocal: s,
      isColumnsDndLocal: l,
      isMobile: o,
      modelIsTableWithoutScroll: u,
      modelIsTableWithoutScrollComputed: h
    } = SW(e), {
      countAllRowsLocal: A,
      totalRowsCount: E
    } = uW(e), {
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      isMultipleActionsActive: m,
      modelColumnsVisibleLocal: L,
      tableGrandparentRef: b,
      tableRef: v
    } = yW(), {
      scrollToTable: I,
      setFocusToTable: y
    } = _W({
      tableRef: v
    }), {
      hasViews: R,
      initViewCurrent: D,
      isViewTableVisible: w,
      updateViewCurrent: M,
      viewCurrent: P
    } = RW(e, t, {
      closePreviewAll: hr
    }), {
      dataSorted: x,
      initModelSort: C,
      modelSortLocal: q,
      useAdditionalSortingLocal: W
    } = mW(e, {
      viewCurrent: P
    }), {
      columnsOrderedFromSimpleTable: z,
      renderedGroupedColumns: oe
    } = lW(e, {
      modelSort: q
    }), {
      columnIdsGroupByLocked: te,
      columnsFilteredForRender: ue,
      columnsFilteredForRenderIndexesMapping: re,
      columnsOrdered: ie,
      countNotHiddenColumns: Ae
    } = iW(e, {
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      modelColumnsVisibleLocal: L,
      modelIsTableWithoutScrollComputed: h,
      columnsOrderedFromSimpleTable: z
    }), {
      changeLimit: we,
      changeOffset: me,
      initLocalVars: ae,
      limit: Oe,
      offset: ve,
      usePaginationLocal: Ke
    } = cW(e, t, {
      closePreviewAll: hr,
      scrollToTable: I,
      setFocusToTable: y,
      viewCurrent: P
    }), {
      addRow: he,
      deleteRow: k,
      hasRows: G,
      rowsLocal: ee,
      rowsLocalAll: de,
      rowsLocalLength: Ne,
      stopRenderRows: Fe,
      updateRow: Ue
    } = pW(e, {
      dataSorted: x,
      limit: Oe,
      offset: ve,
      setEmptySelectedRowsIndexes: cs,
      usePaginationLocal: Ke
    }), {
      columnActionsBtnGroupMaxWidthStyle: Xe,
      columnActionsWidthLocal: Ie,
      columnActionsWidthMinLocal: Ge,
      isColumnActionWide: ft
    } = sW(e, {
      isMobile: o,
      rowsLocal: ee
    }), {
      aTableRef: qe,
      changeModelIsTableWithoutScroll: at,
      checkVisibleColumns: _t,
      columnsVisibleAdditionalSpaceForOneGrow: bt,
      onWatchMobileScrollControl: It
    } = TW(e, t, {
      columnActionsWidth: Ie,
      columnActionsWidthMin: Ge,
      columnsOrdered: ie,
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      isMobile: o,
      isMultipleActionsActive: m,
      modelColumnsVisibleLocal: L,
      modelIsTableWithoutScroll: u,
      modelIsTableWithoutScrollComputed: h
    }), {
      changeColumnsOrdering: ur,
      checkColumnsOrdering: kn
    } = oW(e, t, {
      checkVisibleColumns: _t,
      columnIdsGroupByLocked: te,
      columnsFilteredForRenderIndexesMapping: re
    }), {
      isRowActionsStickyLocal: _r
    } = bW(e, {
      isMobile: o,
      modelIsTableWithoutScrollComputed: h
    }), {
      areAllRowsSelected: Jt,
      areAllVisibleRowsSelected: Un,
      areSomeRowsSelected: Hn,
      closeMultipleActionsActive: In,
      currentMultipleActions: Or,
      hasMultipleActions: dr,
      selectedRows: Cr,
      selectedRowsIndexes: Vn,
      setEmptySelectedRowsIndexes: Wn,
      setSelectedRowsIndexes: Gt,
      toggleBtnAllRows: En,
      toggleMultipleActionsActive: cr
    } = hW(e, t, {
      checkVisibleColumns: _t,
      isMultipleActionsActive: m,
      rowsLocalAll: de,
      rowsLocalLength: Ne
    }), {
      changeModelColumnsVisible: fr
    } = IW(e, t, {
      modelColumnsVisibleLocal: L,
      checkVisibleColumns: _t
    }), {
      closePreview: us,
      closePreviewAll: Nr,
      hasPreview: Gn,
      isPreviewRightOpen: fa,
      onTogglePreview: gn,
      mousedownResizePreviewRight: _s,
      mousemoveResizePreviewRight: ds,
      mouseupResizePreviewRight: mt,
      previewDownRowIds: Kn,
      previewRightRowIndex: Kr,
      previewRightRowIndexLast: ha,
      togglePreviewResize: jr
    } = EW(e, t, {
      aTableRef: qe,
      isMobile: o,
      rowsLocalAll: de,
      tableGrandparentRef: b
    }), {
      tableChildRole: Aa,
      tableLabelId: Dr,
      tableRoleAttributes: Ii
    } = vW(e, {
      countNotHiddenColumns: Ae,
      isMobile: o
    }), {
      allVisibleMobileColumns: Qt
    } = fW({
      columnsOrdered: ie,
      isMobile: o,
      modelColumnsVisibleLocal: L
    }), {
      changeModelSort: Ea
    } = LW(e, t, {
      modelSortLocal: q,
      closePreviewAll: hr
    }), {
      initTable: ks
    } = dW(e, t, {
      checkColumnsOrdering: kn,
      checkVisibleColumns: _t,
      modelColumnsVisibleLocal: L
    }), {
      emptyText: Us
    } = gW(e);
    function hr() {
      Nr();
    }
    function cs() {
      Wn();
    }
    return tt(o, (ln) => {
      It(ln), hr();
    }), tt(ft, (ln, Hs) => {
      ln !== Hs && _t();
    }), et("changeModelIsTableWithoutScroll", at), et("changeModelSort", Ea), et("columnsOrdered", ie), et("columnsFilteredForRender", ue), et("columnsScrollInvisible", p), et("columnsVisibleAdditionalSpaceForOneGrow", bt), et("columnActionsWidthLocal", Ie), et("columnActionsWidthMinLocal", Ge), et("currentMultipleActions", Or), et("hasPreview", Gn), et("indexFirstScrollInvisibleColumn", T), et("isActionColumnVisible", r), et("isActionIconVisible", s), et("isColumnsDnd", l), et("isMobile", o), et("isMultipleActionsActive", m), et("modelIsTableWithoutScroll", h), et("onTogglePreview", gn), et("previewRightRowIndex", Kr), et("previewRightRowIndexLast", ha), et("rowsLocalAll", de), et("modelColumnsVisibleLocal", L), et("changeColumnsOrdering", ur), ae(), n(), D(), ks(), C(), {
      addRow: he,
      allVisibleMobileColumns: Qt,
      areAllRowsSelected: Jt,
      areAllVisibleRowsSelected: Un,
      areSomeRowsSelected: Hn,
      aTableRef: qe,
      changeLimit: we,
      changeModelColumnsVisible: fr,
      changeOffset: me,
      checkVisibleColumns: _t,
      closeMultipleActionsActive: In,
      closePreview: us,
      closePreviewAll: hr,
      columnActionsBtnGroupMaxWidthStyle: Xe,
      columnsFilteredForRender: ue,
      columnsOrdered: ie,
      countAllRowsLocal: A,
      deleteRow: k,
      emptyText: Us,
      hasMultipleActions: dr,
      hasRows: G,
      hasViews: R,
      isMobile: o,
      isMultipleActionsActive: m,
      isPreviewRightOpen: fa,
      isRowActionsStickyLocal: _r,
      isViewTableVisible: w,
      limit: Oe,
      modelColumnsVisibleLocal: L,
      modelIsTableWithoutScrollComputed: h,
      modelSortLocal: q,
      mousedownResizePreviewRight: _s,
      mousemoveResizePreviewRight: ds,
      mouseupResizePreviewRight: mt,
      offset: ve,
      onTogglePreview: gn,
      previewDownRowIds: Kn,
      previewRightRowIndex: Kr,
      renderedGroupedColumns: oe,
      rowsLocal: ee,
      rowsLocalAll: de,
      rowsLocalLength: Ne,
      selectedRows: Cr,
      selectedRowsIndexes: Vn,
      setEmptySelectedRowsIndexes: cs,
      setSelectedRowsIndexes: Gt,
      stopRenderRows: Fe,
      tableChildRole: Aa,
      tableGrandparentRef: b,
      tableLabelId: Dr,
      tableRef: v,
      tableRoleAttributes: Ii,
      toggleBtnAllRows: En,
      toggleMultipleActionsActive: cr,
      togglePreviewResize: jr,
      totalRowsCount: E,
      updateRow: Ue,
      updateViewCurrent: M,
      useAdditionalSortingLocal: W,
      usePaginationLocal: Ke,
      viewCurrent: P
    };
  },
  data() {
    return {
      resolved: void 0,
      error: void 0
    };
  },
  computed: {
    hasRowsFooter() {
      return this.rowsFooter.length > 0;
    }
  },
  methods: {
    updateModelQuickSearch(e) {
      this.$emit("update:modelQuickSearch", e);
    }
  },
  render() {
    return c("div", {
      ref: "tableGrandparentRef",
      class: ["a_table__grandparent", {
        a_table_mobile: this.isMobile,
        a_table__grandparent_without_scroll: !this.hasScrollClass
      }]
    }, [
      this.$slots.tablePrepend && this.$slots.tablePrepend({
        id: this.id
      }),
      c("div", {
        ref: "aTableRef",
        class: ["a_table__parent", {
          a_table__parent_scrollable: this.hasScrollClass && !this.modelIsTableWithoutScrollComputed
        }]
      }, [
        c(GV, {
          additionalSortingColumns: this.additionalSortingColumns,
          areAllRowsSelected: this.areAllRowsSelected,
          areSomeRowsSelected: this.areSomeRowsSelected,
          closeMultipleActionsActive: this.closeMultipleActionsActive,
          countAllRows: this.countAllRowsLocal,
          disabledActions: this.disabledActions,
          disabledMultipleActions: this.disabledMultipleActions,
          disabledSort: this.disabledSort,
          disabledViews: this.disabledViews,
          extra: this.extra,
          hasViews: this.hasViews,
          isLabelVisible: this.isLabelVisible,
          isLoadingMultipleActions: this.isLoadingMultipleActions,
          isQuickSearch: this.isQuickSearch,
          isSortingMultiColumn: this.isSortingMultiColumn,
          label: this.label,
          labelClass: this.labelClass,
          labelTag: this.labelTag,
          modelQuickSearch: this.modelQuickSearch,
          modelSort: this.modelSortLocal,
          modelView: this.modelView,
          multipleActions: this.multipleActions,
          selectedRows: this.selectedRows,
          showCount: this.showCount,
          tableActions: this.tableActions,
          tableActionsIndexFirstDropdownAction: this.tableActionsIndexFirstDropdownAction,
          tableActionsIndexFirstDropdownActionMobile: this.tableActionsIndexFirstDropdownActionMobile,
          useAdditionalSorting: this.useAdditionalSortingLocal,
          useViewSlot: this.useViewSlot,
          viewCurrent: this.viewCurrent,
          views: this.views,
          onUpdateViewCurrent: this.updateViewCurrent,
          onUpdateModelQuickSearch: this.updateModelQuickSearch,
          onToggleMultipleActionsActive: this.toggleMultipleActionsActive,
          onToggleBtnAllRows: this.toggleBtnAllRows
        }, this.$slots),
        this.$slots.topPanelAppend ? this.$slots.topPanelAppend() : "",
        this.isViewTableVisible && c("div", {
          ref: "tableRef",
          "aria-labelledby": this.isLabelVisible ? this.tableLabelId : void 0,
          class: [
            "a_table",
            {
              a_table_simple: this.isSimpleTable,
              a_table_bordered: this.borderType === "bordered",
              a_table_inner_bordered: this.borderType === "innerBordered"
            }
          ],
          ...this.tableRoleAttributes
        }, [
          this.isSimpleTable ? c(gV, {
            areAllRowsSelected: this.areAllRowsSelected,
            areAllVisibleRowsSelected: this.areAllVisibleRowsSelected,
            areSomeRowsSelected: this.areSomeRowsSelected,
            disabledOptions: this.disabledOptions,
            disabledSort: this.disabledSort,
            hasMultipleActions: this.hasMultipleActions,
            isRowActionsStickyLocal: this.isRowActionsStickyLocal,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSortLocal,
            rowsLocalLength: this.rowsLocalLength,
            showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
            sortingSequenceNumberClass: this.sortingSequenceNumberClass,
            onSetSelectedRowsIndexes: this.setSelectedRowsIndexes,
            columnsForRender: this.renderedGroupedColumns
          }) : c(IV, {
            areAllRowsSelected: this.areAllRowsSelected,
            areAllVisibleRowsSelected: this.areAllVisibleRowsSelected,
            areSomeRowsSelected: this.areSomeRowsSelected,
            disabledOptions: this.disabledOptions,
            disabledSort: this.disabledSort,
            hasMultipleActions: this.hasMultipleActions,
            isRowActionsStickyLocal: this.isRowActionsStickyLocal,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSortLocal,
            rowsLocalLength: this.rowsLocalLength,
            showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
            sortingSequenceNumberClass: this.sortingSequenceNumberClass,
            onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
          }),
          c("div", {
            class: "a_table__loading"
          }, [
            c(qS, {
              isLoading: this.isLoadingTable
            }, () => [
              c("div", {
                class: "a_table__body",
                role: this.tableChildRole
              }, {
                default: () => this.rowsLocal.map((e, t) => {
                  const n = ru({ row: e, rowIndex: t, keyId: this.keyId });
                  return c(_p, {
                    key: n,
                    allVisibleMobileColumns: this.allVisibleMobileColumns,
                    areAllRowsSelected: this.areAllRowsSelected,
                    columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
                    columnActionsView: this.columnActionsView,
                    countVisibleMobileColumns: this.countVisibleMobileColumns,
                    disabledPreview: this.disabledPreview,
                    disabledPreviewRowCallback: this.disabledPreviewRowCallback,
                    disabledRowActions: this.disabledRowActions,
                    isFooter: !1,
                    isPreviewDownOpen: this.previewDownRowIds[n],
                    isRowActionsStickyLocal: this.isRowActionsStickyLocal,
                    isTree: this.isTree,
                    isTreeCollapsible: this.isTreeCollapsible,
                    isTreeOpened: this.isTreeOpened,
                    keyChildren: this.keyChildren,
                    keyId: this.keyId,
                    level: 1,
                    row: e,
                    rowActionsClass: this.rowActionsClass,
                    rowClass: this.rowClass,
                    rowIndex: t,
                    rowsLength: this.rowsLocal.length,
                    selectedRowsIndexes: this.selectedRowsIndexes,
                    onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
                  }, {
                    get: (r) => [
                      c(zd, {
                        data: r.row,
                        keyLabel: r.column.keyLabel,
                        filter: r.column.filter,
                        filterParameters: r.column.filterParameters,
                        defaultValue: r.column.defaultValue,
                        tag: r.column.filterTag || "div"
                      })
                    ],
                    ...this.$slots
                  });
                })
              }),
              this.isViewTableVisible && !this.hasRows && c(Te, {
                class: "a_table__empty_text",
                text: this.emptyText
              }),
              this.hasRowsFooter && c("div", {
                class: "a_table__footer",
                role: this.tableChildRole
              }, this.rowsFooter.map((e, t) => {
                const n = ru({ row: e, rowIndex: t, keyId: this.keyId });
                return c(_p, {
                  key: n,
                  allVisibleMobileColumns: this.allVisibleMobileColumns,
                  areAllRowsSelected: this.areAllRowsSelected,
                  columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
                  columnActionsView: this.columnActionsView,
                  countVisibleMobileColumns: this.countVisibleMobileColumns,
                  disabledPreview: this.disabledPreview,
                  disabledPreviewRowCallback: this.disabledPreviewRowCallback,
                  disabledRowActions: this.disabledRowActions,
                  isFooter: !0,
                  isRowActionsStickyLocal: this.isRowActionsStickyLocal,
                  isTree: this.isTree,
                  isTreeCollapsible: this.isTreeCollapsible,
                  isTreeOpened: this.isTreeOpened,
                  keyChildren: this.keyChildren,
                  keyId: this.keyId,
                  level: 1,
                  row: e,
                  rowActionsClass: this.rowActionsClass,
                  rowClass: this.rowClass,
                  rowIndex: t,
                  rowsLength: this.rowsFooter.length,
                  selectedRowsIndexes: this.selectedRowsIndexes,
                  onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
                }, {
                  get: (r) => [
                    c(zd, {
                      data: r.row,
                      keyLabel: r.column.footerPath,
                      filter: r.column.footerFilter,
                      filterParameters: r.column.footerFilterParameters,
                      defaultValue: r.column.footerDefaultValue
                    })
                  ],
                  ...this.$slots
                });
              }))
            ])
          ])
        ]),
        !this.isViewTableVisible && this.viewCurrent && this.$slots[this.viewCurrent.type] && this.$slots[this.viewCurrent.type]({
          isLoading: this.isLoadingTable,
          rows: this.rowsLocalAll
        }),
        this.usePaginationLocal && c(OH, {
          countAllRows: this.countAllRowsLocal,
          disabled: this.pagination.disabled,
          hasRows: this.hasRows,
          limit: this.limit,
          limitsPerPage: this.pagination.limitsPerPage,
          maxPages: this.pagination.maxPages,
          offset: this.offset,
          rowsLength: this.rowsLocalLength,
          totalRowsCount: this.totalRowsCount,
          "onUpdate:limit": this.changeLimit,
          "onUpdate:offset": this.changeOffset
        }),
        this.isPreviewRightOpen && c(BV, {
          countAllRows: this.countAllRowsLocal,
          isMobile: this.isMobile,
          isLoadingTable: this.isLoadingTable,
          limitPagination: this.limit,
          offsetPagination: this.offset,
          previewStyles: this.previewStyles,
          rowIndex: this.previewRightRowIndex,
          rows: this.rowsLocalAll,
          disabledPreviewRowCallback: this.disabledPreviewRowCallback,
          usePagination: !!this.usePaginationLocal,
          onClosePreview: this.closePreview,
          onMousedownResizePreviewRight: this.mousedownResizePreviewRight,
          onMousemoveResizePreviewRight: this.mousemoveResizePreviewRight,
          onMouseupResizePreviewRight: this.mouseupResizePreviewRight,
          onTogglePreview: this.onTogglePreview,
          onTogglePreviewResize: this.togglePreviewResize,
          "onUpdate:offset": this.changeOffset
        }, this.$slots)
      ])
    ]);
  }
};
function hm(e) {
  const t = f(e, "activeTabIdLocal"), n = f(e, "index"), r = f(e, "keyId"), s = f(e, "parentId"), l = f(e, "tab"), o = _(() => r.value ? fe(l.value, r.value) : n.value), u = _(() => t.value === o.value), h = _(() => `${s.value}_${n.value}`);
  return {
    idForContent: _(() => `${h.value}_content`),
    idLocal: h,
    isActive: u,
    tabIdLocal: o
  };
}
function OW(e) {
  const t = f(e, "tab"), n = f(e, "keyContent");
  return {
    contentLocal: _(() => {
      if (n.value)
        return fe(t.value, n.value);
    })
  };
}
const CW = {
  name: "ATabsContent",
  props: {
    activeTabIdLocal: {
      type: [String, Number],
      required: !0
    },
    index: {
      type: Number,
      required: !0
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    parentId: {
      type: String,
      required: !0
    },
    tab: {
      type: Object,
      required: !0
    }
  },
  setup(e) {
    const {
      idForContent: t,
      idLocal: n,
      isActive: r,
      tabIdLocal: s
    } = hm(e), {
      contentLocal: l
    } = OW(e);
    return {
      contentLocal: l,
      idForContent: t,
      idLocal: n,
      isActive: r,
      tabIdLocal: s
    };
  },
  render() {
    let e = "";
    return this.tab.slotContent && this.$slots[this.tab.slotContent] ? e = this.$slots[this.tab.slotContent]({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.$slots.content ? e = this.$slots.content({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.contentLocal && (e = c(Te, {
      html: this.contentLocal
    })), c("div", {
      id: this.idForContent,
      "aria-labelledby": this.idLocal,
      class: [
        "a_tabs__content",
        {
          a_tabs__content_show: this.isActive
        }
      ],
      role: "tabpanel"
    }, [
      e
    ]);
  }
};
function NW({
  isDisabled: e = _(() => !1)
}) {
  return {
    tabindexLocal: _(() => e.value ? -1 : 0)
  };
}
function DW(e, { emit: t }, {
  isDisabled: n = _(() => !1),
  tabIdLocal: r = _(() => "")
}) {
  const s = f(e, "index"), l = f(e, "tab"), o = (h) => {
    n.value || t("changeTab", { $event: h, tab: l.value, tabId: r.value, index: s.value });
  };
  return {
    changeTabLocal: o,
    keydownTab: (h) => {
      (h.keyCode === Z.enter || h.keyCode === Z.space) && (o(h), h.stopPropagation(), h.preventDefault());
    }
  };
}
function BW(e) {
  const t = f(e, "disabled"), n = f(e, "keyDisabled"), r = f(e, "tab");
  return {
    isDisabled: _(() => {
      if (t.value || n.value && fe(r.value, n.value) === !0)
        return !0;
    })
  };
}
function wW(e) {
  const t = f(e, "tab"), n = f(e, "keyLabel");
  return {
    labelLocal: _(() => {
      if (n.value)
        return fe(t.value, n.value);
    })
  };
}
function PW(e) {
  const t = f(e, "tab"), n = f(e, "keyTitle");
  return {
    titleLocal: _(() => {
      if (n.value)
        return fe(t.value, n.value);
    })
  };
}
const FW = {
  name: "ATabsTab",
  props: {
    activeTabIdLocal: {
      type: [String, Number],
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    index: {
      type: Number,
      required: !0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyTitle: {
      type: String,
      required: !1,
      default: "title"
    },
    parentId: {
      type: String,
      required: !0
    },
    tab: {
      type: Object,
      required: !0
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => yr.indexOf(e) !== -1
    }
  },
  emits: [
    "changeTab"
  ],
  setup(e, t) {
    const {
      idForContent: n,
      idLocal: r,
      isActive: s,
      tabIdLocal: l
    } = hm(e), {
      isDisabled: o
    } = BW(e), {
      tabindexLocal: u
    } = NW({
      isDisabled: o
    }), {
      changeTabLocal: h,
      keydownTab: A
    } = DW(e, t, {
      isDisabled: o,
      tabIdLocal: l
    }), {
      labelLocal: E
    } = wW(e), {
      titleLocal: p
    } = PW(e);
    return {
      changeTabLocal: h,
      idForContent: n,
      idLocal: r,
      isActive: s,
      isDisabled: o,
      keydownTab: A,
      labelLocal: E,
      tabindexLocal: u,
      tabIdLocal: l,
      titleLocal: p
    };
  },
  render() {
    let e = "";
    return this.tab.slotTab && this.$slots[this.tab.slotTab] ? e = this.$slots[this.tab.slotTab]({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.$slots.tab ? e = this.$slots.tab({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.labelLocal && (e = c(Te, {
      html: this.labelLocal,
      tag: "span"
    })), c("li", {
      class: [
        "a_tabs__list__item",
        this.tab.classLi
      ]
    }, [
      c(ye, {
        id: this.idLocal,
        "aria-controls": this.idForContent,
        ariaDisabled: this.isDisabled,
        ariaSelected: this.isActive,
        class: [
          "a_tabs__list__link",
          this.tab.class,
          {
            a_tabs__list__link_active: this.isActive,
            a_tabs__list__link_disabled: this.isDisabled
          }
        ],
        classDefault: "",
        isTitleHtml: this.isTitleHtml,
        role: "tab",
        tabindex: this.tabindexLocal,
        tag: "a",
        titlePlacement: this.titlePlacement,
        type: "button",
        title: this.titleLocal,
        onClick: this.changeTabLocal,
        onKeydown: this.keydownTab
      }, () => [
        e
      ])
    ]);
  }
};
function xW(e, { emit: t }) {
  const n = f(e, "activeTabId"), r = f(e, "data"), s = f(e, "isChangeOutside"), l = f(e, "keyActive"), o = f(e, "keyId"), u = B(void 0), h = () => {
    le(n.value) || (u.value = n.value);
  };
  return {
    activeTabIdLocal: u,
    changeTab: ({ $event: p, tab: T, tabId: m, index: L }) => {
      u.value !== m && (s.value || (u.value = m), t("change", { $event: p, tab: T, tabId: m, index: L }));
    },
    initActiveTabIdLocal: () => {
      h(), le(u.value) && (l.value && (Y(r.value, (p, T) => {
        if (fe(p, l.value))
          return o.value ? u.value = fe(p, o.value) || T : u.value = T, !1;
      }), !le(u.value)) || (o.value ? u.value = fe(r.value, `[0].${o.value}`) || 0 : u.value = 0));
    },
    setActiveTabIdLocal: h
  };
}
const wde = {
  name: "ATabs",
  props: {
    activeTabId: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_tabs_")
    },
    isBoxed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isChangeOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isVertical: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyActive: {
      type: String,
      required: !1,
      default: "active"
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyTitle: {
      type: String,
      required: !1,
      default: "title"
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => yr.indexOf(e) !== -1
    }
  },
  emits: [
    "change"
  ],
  setup(e, t) {
    const n = f(e, "activeTabId"), {
      activeTabIdLocal: r,
      changeTab: s,
      initActiveTabIdLocal: l,
      setActiveTabIdLocal: o
    } = xW(e, t);
    return l(), tt(n, () => {
      o();
    }), {
      activeTabIdLocal: r,
      changeTab: s
    };
  },
  render() {
    return c("div", {
      id: this.id,
      class: ["a_tabs", {
        a_tabs_boxed: this.isBoxed,
        a_tabs_vertical: this.isVertical
      }]
    }, [
      c("div", {
        class: "a_tabs__box"
      }, [
        c("ul", {
          class: "a_tabs__list",
          role: "tablist"
        }, [
          this.data.map((e, t) => c(FW, {
            key: t,
            activeTabIdLocal: this.activeTabIdLocal,
            disabled: this.disabled,
            index: t,
            isTitleHtml: this.isTitleHtml,
            keyDisabled: this.keyDisabled,
            keyId: this.keyId,
            keyLabel: this.keyLabel,
            keyTitle: this.keyTitle,
            parentId: this.id,
            tab: e,
            titlePlacement: this.titlePlacement,
            onChangeTab: this.changeTab
          }, this.$slots))
        ])
      ]),
      c("div", {
        class: "a_tabs__contents"
      }, [
        this.data.map((e, t) => c(CW, {
          key: t,
          activeTabIdLocal: this.activeTabIdLocal,
          index: t,
          keyContent: this.keyContent,
          keyId: this.keyId,
          parentId: this.id,
          tab: e
        }, this.$slots))
      ])
    ]);
  }
}, si = B({
  propsDefault: {},
  config: {
    isHtmlTitleSort: !1,
    headerTopGroups: [
      {
        props: {},
        children: [
          {
            component: "filterMain",
            props: {}
          },
          {
            component: "buttonSearch",
            props: {}
          },
          {
            component: "buttonToggle",
            props: {}
          }
        ]
      },
      {
        props: {},
        children: [
          {
            component: "selectFiltersSaved",
            props: {}
          },
          {
            component: "buttonSaveTop",
            props: {}
          },
          {
            component: "buttonDeleteFiltersSaved",
            props: {}
          }
        ]
      }
    ],
    headerBottomGroups: [
      {
        props: {},
        children: [
          {
            component: "addFilterSelect",
            props: {}
          },
          {
            component: "buttonSearch",
            props: {}
          }
        ]
      }
    ]
  }
});
_(() => {
  const e = {};
  return Y(si.value.config.headerTopGroups, (t) => {
    Y(t.children, (n) => {
      e[n.component] = n.props;
    });
  }), Y(si.value.config.headerBottomGroups, (t) => {
    Y(t.children, (n) => {
      e[n.component] = n.props;
    });
  }), e;
});
const Pde = {
  install: (e, {
    propsDefault: t = {},
    config: n = {}
  } = {}) => {
    si.value.propsDefault = {
      ...si.value.propsDefault,
      ...t
    }, si.value.config = {
      ...si.value.config,
      ...n
    };
  }
}, Fde = {
  install: (e, { axiosCreateOptions: t = {}, baseUrl: n = "/api/", errorCallbacks: r = {}, headerParams: s = {}, setUrlForArray: l = void 0 } = {}) => {
    z1({ axiosCreateOptions: t }), Y1({ baseUrl: n }), X1({ errorCallbacks: r }), Z1({ headerParams: s }), Me(l) && (LS.value.setUrlForArray = l);
  }
}, xde = {
  install: (e, t) => {
    e.provide("$aloha", t);
  }
}, Mde = {
  install: (e, {
    breakpoint: t
  } = {}) => {
    No(window.innerWidth <= t);
    const n = () => {
      window.innerWidth > t ? Wo.value && No(!1) : Wo.value || No(!0);
    };
    window.addEventListener("resize", n);
  }
}, $de = {
  install: (e, t = "") => {
    AH(t);
  }
};
function Am(e, t, n) {
  function r(o) {
    return o.toString(16);
  }
  function s(o) {
    return parseInt(o, 16);
  }
  e = e.replace(/#/g, ""), t = t.replace(/#/g, ""), n = typeof n < "u" ? n : 50;
  let l = "#";
  for (let o = 0; o <= 5; o += 2) {
    const u = s(e.substr(o, 2)), h = s(t.substr(o, 2));
    let A = r(Math.round(h + (u - h) * (n / 100)));
    for (; A.length < 2; )
      A = "0" + A;
    l += A;
  }
  return l;
}
function qde(e, t) {
  return Am("#ffffff", e, t);
}
function kde(e, t) {
  return Am("#000000", e, t);
}
function Td(e) {
  const t = e.toString(16);
  return t.length === 1 ? `0${t}` : t;
}
function Ude(e, t, n) {
  return `#${Td(e)}${Td(t)}${Td(n)}`;
}
function Hde(e, t = !1) {
  const n = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
  if (!n)
    return null;
  const r = parseInt(n[1], 16), s = parseInt(n[2], 16), l = parseInt(n[3], 16);
  return t ? `${r}, ${s}, ${l}` : {
    r,
    g: s,
    b: l
  };
}
const MW = "غلق", $W = "يكمل", qW = "مواد لكل صفحة", kW = "مزيد من الإجراءات", UW = "التالي", HW = "لا", VW = "سابق", WW = "إزالة المحتوى", GW = "إزالة التحديد", KW = "قائمة البحث", jW = "نعم", zW = {
  "_ADD_NOTIFICATION_{{type}}_": "إضافة إشعار {{ type }}",
  _ALERT_CLOSE_: MW,
  _CONTINUE_: $W,
  _ITEMS_PER_PAGE_: qW,
  _MORE_ACTIONS_: kW,
  _NEXT_: UW,
  _NO_: HW,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ count}} من {{ current }} - {{ start }}",
  _PREVIOUS_: VW,
  _REMOVE_FIELD_CONTENT_: WW,
  _REMOVE_SELECTION_: GW,
  _SEARCH_MENU_: KW,
  _YES_: jW
}, YW = "Schließen", XW = "Fortfahren", ZW = "Objekte pro Seite", JW = "Weitere Aktionen", QW = "Nächste", e2 = "Nein", t2 = "Vorherige", n2 = "Feldinhalt entfernen", r2 = "Auswahl entfernen", a2 = "Menüsuche", s2 = "[Keine Auswahl]", i2 = "Ja", l2 = {
  "_ADD_NOTIFICATION_{{type}}_": "Benachrichtigung hinzufügen {{ type }}",
  _ALERT_CLOSE_: YW,
  _CONTINUE_: XW,
  _ITEMS_PER_PAGE_: ZW,
  _MORE_ACTIONS_: JW,
  _NEXT_: QW,
  _NO_: e2,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} von {{ count}}",
  _PREVIOUS_: t2,
  _REMOVE_FIELD_CONTENT_: n2,
  _REMOVE_SELECTION_: r2,
  _SEARCH_MENU_: a2,
  _SELECT_TEXT_EMPTY_: s2,
  _YES_: i2
}, o2 = "Close", u2 = "Continue", _2 = "Items per page", d2 = "more actions", c2 = "Next", f2 = "No", h2 = "Previous", A2 = "Remove field content", E2 = "remove selection", p2 = "Search menu", T2 = "[No selection]", S2 = "Yes", m2 = {
  "_ADD_NOTIFICATION_{{type}}_": "Add Notification {{ type }}",
  _ALERT_CLOSE_: o2,
  _CONTINUE_: u2,
  _ITEMS_PER_PAGE_: _2,
  _MORE_ACTIONS_: d2,
  _NEXT_: c2,
  _NO_: f2,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} from {{ count}}",
  _PREVIOUS_: h2,
  _REMOVE_FIELD_CONTENT_: A2,
  _REMOVE_SELECTION_: E2,
  _SEARCH_MENU_: p2,
  _SELECT_TEXT_EMPTY_: T2,
  _YES_: S2
}, L2 = "Cerrar", b2 = "Continuar", v2 = "Artículos por página", I2 = "Otras acciones", g2 = "Próximo", y2 = "No", R2 = "Previo", O2 = "Quitar el contenido del campo", C2 = "eliminar selección", N2 = "Menú de búsqueda", D2 = "Sí", B2 = {
  "_ADD_NOTIFICATION_{{type}}_": "Agregar Notificación {{ type }}",
  _ALERT_CLOSE_: L2,
  _CONTINUE_: b2,
  _ITEMS_PER_PAGE_: v2,
  _MORE_ACTIONS_: I2,
  _NEXT_: g2,
  _NO_: y2,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} de {{ count}}",
  _PREVIOUS_: R2,
  _REMOVE_FIELD_CONTENT_: O2,
  _REMOVE_SELECTION_: C2,
  _SEARCH_MENU_: N2,
  _YES_: D2
}, w2 = "Fermer", P2 = "Continuer", F2 = "objets par page", x2 = "autres actions", M2 = "Suivant", $2 = "Non", q2 = "Précédent", k2 = "Supprimer le contenu du champ", U2 = "supprimer la sélection", H2 = "Menu de recherche", V2 = "Oui", W2 = {
  "_ADD_NOTIFICATION_{{type}}_": "Ajouter notification {{ type }}",
  _ALERT_CLOSE_: w2,
  _CONTINUE_: P2,
  _ITEMS_PER_PAGE_: F2,
  _MORE_ACTIONS_: x2,
  _NEXT_: M2,
  _NO_: $2,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} depuis {{ count}}",
  _PREVIOUS_: q2,
  _REMOVE_FIELD_CONTENT_: k2,
  _REMOVE_SELECTION_: U2,
  _SEARCH_MENU_: H2,
  _YES_: V2
}, G2 = "Zatvori", K2 = "Nastaviti", j2 = "Stavke po stranici", z2 = "Daljnje akcije", Y2 = "Sljedeći", X2 = "Ne", Z2 = "Prethodni", J2 = "Izbrišite sadržaj polja", Q2 = "Ukloniti odabir", e5 = "Pretraživanje izbornika", t5 = "[Bez odabira]", n5 = "Da", r5 = {
  "_ADD_NOTIFICATION_{{type}}_": "Dodaj obavijest {{ type }}",
  _ALERT_CLOSE_: G2,
  _CONTINUE_: K2,
  _ITEMS_PER_PAGE_: j2,
  _MORE_ACTIONS_: z2,
  _NEXT_: Y2,
  _NO_: X2,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} iz {{ count}}",
  _PREVIOUS_: Z2,
  _REMOVE_FIELD_CONTENT_: J2,
  _REMOVE_SELECTION_: Q2,
  _SEARCH_MENU_: e5,
  _SELECT_TEXT_EMPTY_: t5,
  _YES_: n5
}, a5 = "Vicino", s5 = "Continua", i5 = "oggetti per pagina", l5 = "Ulteriori azioni", o5 = "Prossimo", u5 = "No", _5 = "Precedente", d5 = "Rimuovi il contenuto del campo", c5 = "rimuovere la selezione", f5 = "Menù di ricerca", h5 = "Sì", A5 = {
  "_ADD_NOTIFICATION_{{type}}_": "Aggiungi notifica {{ type }}",
  _ALERT_CLOSE_: a5,
  _CONTINUE_: s5,
  _ITEMS_PER_PAGE_: i5,
  _MORE_ACTIONS_: l5,
  _NEXT_: o5,
  _NO_: u5,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} da {{ count}}",
  _PREVIOUS_: _5,
  _REMOVE_FIELD_CONTENT_: d5,
  _REMOVE_SELECTION_: c5,
  _SEARCH_MENU_: f5,
  _YES_: h5
}, E5 = "Закрыть", p5 = "Продолжать", T5 = "Элементов на странице", S5 = "Дальнейшие действия", m5 = "Следующий", L5 = "Нет", b5 = "Предыдущий", v5 = "Удалить содержимое поля", I5 = "удалить выделение", g5 = "Быстрый поиск", y5 = "поиск в меню", R5 = "[Нет элементов]", O5 = "Да", C5 = {
  "_ADD_NOTIFICATION_{{type}}_": "Добавить Уведомление {{ type }}",
  _ALERT_CLOSE_: E5,
  _CONTINUE_: p5,
  _ITEMS_PER_PAGE_: T5,
  _MORE_ACTIONS_: S5,
  _NEXT_: m5,
  _NO_: L5,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} из {{ count}}",
  _PREVIOUS_: b5,
  _REMOVE_FIELD_CONTENT_: v5,
  _REMOVE_SELECTION_: I5,
  _SCHNELLSUCHE_: g5,
  _SEARCH_MENU_: y5,
  _SELECT_TEXT_EMPTY_: R5,
  _YES_: O5
}, N5 = "[لا توجد عناصر متاحة للاختيار]", D5 = "بحث", B5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: N5,
  _A_CHECKBOX_SEARCH_: D5
}, w5 = "[Keine Elemente zur Auswahl verfügbar]", P5 = "Suche", F5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: w5,
  _A_CHECKBOX_SEARCH_: P5
}, x5 = "[No items available for selection]", M5 = "Search", $5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: x5,
  _A_CHECKBOX_SEARCH_: M5
}, q5 = "[No hay elementos disponibles para seleccionar]", k5 = "Buscar", U5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: q5,
  _A_CHECKBOX_SEARCH_: k5
}, H5 = "[Aucun élément disponible pour la sélection]", V5 = "Recherche", W5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: H5,
  _A_CHECKBOX_SEARCH_: V5
}, G5 = "[Nema dostupnih elemenata za odabir]", K5 = "Pretraživanje", j5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: G5,
  _A_CHECKBOX_SEARCH_: K5
}, z5 = "[Nessun elemento disponibile per la selezione]", Y5 = "Cerca", X5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: z5,
  _A_CHECKBOX_SEARCH_: Y5
}, Z5 = "[Нет элементов для выбора]", J5 = "Поиск", Q5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: Z5,
  _A_CHECKBOX_SEARCH_: J5
}, xa = {
  ar: B5,
  de: F5,
  en: $5,
  es: U5,
  fr: W5,
  hr: j5,
  it: X5,
  ru: Q5
}, eG = "من", tG = "إلى", nG = {
  _A_DATEPICKER_RANGE_FROM_: eG,
  _A_DATEPICKER_RANGE_UNTIL_: tG
}, rG = "von", aG = "bis", sG = {
  _A_DATEPICKER_RANGE_FROM_: rG,
  _A_DATEPICKER_RANGE_UNTIL_: aG
}, iG = "from", lG = "until", oG = {
  _A_DATEPICKER_RANGE_FROM_: iG,
  _A_DATEPICKER_RANGE_UNTIL_: lG
}, uG = "desde", _G = "hasta", dG = {
  _A_DATEPICKER_RANGE_FROM_: uG,
  _A_DATEPICKER_RANGE_UNTIL_: _G
}, cG = "de", fG = "à", hG = {
  _A_DATEPICKER_RANGE_FROM_: cG,
  _A_DATEPICKER_RANGE_UNTIL_: fG
}, AG = "od", EG = "do", pG = {
  _A_DATEPICKER_RANGE_FROM_: AG,
  _A_DATEPICKER_RANGE_UNTIL_: EG
}, TG = "da", SG = "a", mG = {
  _A_DATEPICKER_RANGE_FROM_: TG,
  _A_DATEPICKER_RANGE_UNTIL_: SG
}, LG = "с", bG = "по", vG = {
  _A_DATEPICKER_RANGE_FROM_: LG,
  _A_DATEPICKER_RANGE_UNTIL_: bG
}, Ma = {
  ar: nG,
  de: sG,
  en: oG,
  es: dG,
  fr: hG,
  hr: pG,
  it: mG,
  ru: vG
}, IG = "إظهار أقل", gG = "أظهر المزيد", yG = {
  _A_DISCLOSURE_LESS_: IG,
  _A_DISCLOSURE_MORE_: gG
}, RG = "Mehr anzeigen", OG = "Weniger anzeigen", CG = {
  _A_DISCLOSURE_MORE_: RG,
  _A_DISCLOSURE_LESS_: OG
}, NG = "Show less", DG = "Show more", BG = {
  _A_DISCLOSURE_LESS_: NG,
  _A_DISCLOSURE_MORE_: DG
}, wG = "Mostrar menos", PG = "Mostrar más", FG = {
  _A_DISCLOSURE_LESS_: wG,
  _A_DISCLOSURE_MORE_: PG
}, xG = "Afficher moins", MG = "Afficher plus", $G = {
  _A_DISCLOSURE_LESS_: xG,
  _A_DISCLOSURE_MORE_: MG
}, qG = "Prikaži manje", kG = "Prikaži više", UG = {
  _A_DISCLOSURE_LESS_: qG,
  _A_DISCLOSURE_MORE_: kG
}, HG = "Mostra meno", VG = "Mostra di più", WG = {
  _A_DISCLOSURE_LESS_: HG,
  _A_DISCLOSURE_MORE_: VG
}, GG = "Показать меньше", KG = "Показать больше", jG = {
  _A_DISCLOSURE_LESS_: GG,
  _A_DISCLOSURE_MORE_: KG
}, $a = {
  ar: yG,
  de: CG,
  en: BG,
  es: FG,
  fr: $G,
  hr: UG,
  it: WG,
  ru: jG
}, zG = "افتح", YG = "اغلق", XG = {
  _A_FIELDSET_COLLAPSE_OPEN_: zG,
  _A_FIELDSET_COLLAPSE_CLOSE_: YG
}, ZG = "Ausklappen", JG = "Einklappen", QG = {
  _A_FIELDSET_COLLAPSE_OPEN_: ZG,
  _A_FIELDSET_COLLAPSE_CLOSE_: JG
}, e3 = "Open", t3 = "Close", n3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: e3,
  _A_FIELDSET_COLLAPSE_CLOSE_: t3
}, r3 = "Abrir", a3 = "Cerrar", s3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: r3,
  _A_FIELDSET_COLLAPSE_CLOSE_: a3
}, i3 = "Ouvrir", l3 = "Fermer", o3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: i3,
  _A_FIELDSET_COLLAPSE_CLOSE_: l3
}, u3 = "Otvori", _3 = "Zatvori", d3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: u3,
  _A_FIELDSET_COLLAPSE_CLOSE_: _3
}, c3 = "Apri", f3 = "Chiudi", h3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: c3,
  _A_FIELDSET_COLLAPSE_CLOSE_: f3
}, A3 = "Открыть", E3 = "Закрыть", p3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: A3,
  _A_FIELDSET_COLLAPSE_CLOSE_: E3
}, qa = {
  ar: XG,
  de: QG,
  en: n3,
  es: s3,
  fr: o3,
  hr: d3,
  it: h3,
  ru: p3
}, T3 = "_A_FILTERS_ADD_FILTER_", S3 = "إغلاق البحث المتقدم", m3 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", L3 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", b3 = "افتح البحث المتقدم", v3 = "_A_FILTERS_SAVE_BTN_", I3 = "_A_FILTERS_SAVE_LABEL_NAME_", g3 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", y3 = "_A_FILTERS_SAVE_MODAL_HEADER_", R3 = "_A_FILTERS_SAVE_MSG_ERROR_", O3 = "_A_FILTERS_SAVE_SELECT_", C3 = "ابدأ البحث", N3 = "_A_FILTERS_TOP_CLOSE_", D3 = {
  _A_FILTERS_ADD_FILTER_: T3,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: S3,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: m3,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: L3,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: b3,
  _A_FILTERS_SAVE_BTN_: v3,
  _A_FILTERS_SAVE_LABEL_NAME_: I3,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: g3,
  _A_FILTERS_SAVE_MODAL_HEADER_: y3,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: R3,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: O3,
  _A_FILTERS_START_SEARCH_: C3,
  _A_FILTERS_TOP_CLOSE_: N3
}, B3 = "Neues Filterkriterium", w3 = "Löschen", P3 = "Ausgewählten Filter löschen", F3 = "Ausgewählten Filter kann nicht gelöscht werden. (Gespeicherter Filter nicht ausgewählt)", x3 = "Filter löschen", M3 = "Zurücksetzen", $3 = "Meine Filter", q3 = "Schließen", k3 = "Filter:", U3 = "Neu", H3 = "Filter speichern", V3 = "Name", W3 = "Bitte geben Sie einen Namen für den zu speichernden Filter ein. Bei Eingabe eines bestehenden Namens wird der bereits gespeicherte Filter aktualisiert. Bei Eingabe eines neuen Namens wird ein neuer Filter gespeichert.", G3 = "Filter speichern", K3 = "Filter konnte nicht gespeichert werden.", j3 = "Gespeicherte Filter", z3 = "Suchen", Y3 = "Filterkriterium entfernen", X3 = {
  _A_FILTERS_ADD_FILTER_: B3,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "Sind Sie sicher, dass Sie diese gespeicherten Filter <strong>{{ name }}</strong> löschen wollen?",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: w3,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "Gespeicherten Filter löschen",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "Ausgewählter Filter <strong>{{ name }}</strong> konnte nicht entfernt werden.",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "Ausgewählter Filter <strong>{{ name }}</strong> wurde entfernt.",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_: P3,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: F3,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_: x3,
  _A_FILTERS_DESELECT_ALL_: M3,
  _A_FILTERS_FILTER_SAVED_GROUP_MY_: $3,
  _A_FILTERS_HOR_CLOSE_DROPDOWN_: q3,
  "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_": "Filterwert {{ filterValue }} für Filter löschen: {{ filterLabel }}",
  _A_FILTERS_HOR_FILTER_HEADER_: k3,
  _A_FILTERS_HOR_FILTER_NEW_: U3,
  "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_": "Filter öffnen: {{ filterLabel }} mit Wert {{ filterValue }}",
  _A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_: H3,
  _A_FILTERS_SAVE_LABEL_NAME_: V3,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: W3,
  _A_FILTERS_SAVE_MODAL_HEADER_: G3,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": 'Der Filter mit dem Namen <strong>"{{ name }}"</strong> wird beim Speichern aktualisiert.',
  _A_FILTERS_SAVE_MSG_ERROR_: K3,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": 'Neuer Filter <strong>"{{ name }}"</strong> ist gespeichert.',
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": 'Filter <strong>"{{ name }}"</strong> ist aktualisiert.',
  _A_FILTERS_SAVE_SELECT_: j3,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} ausgewählt",
  _A_FILTERS_START_SEARCH_: z3,
  _A_FILTERS_TOP_CLOSE_: Y3
}, Z3 = "_A_FILTERS_ADD_FILTER_", J3 = "Close advanced search", Q3 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", e4 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", t4 = "Reset selection", n4 = "Open advanced search", r4 = "_A_FILTERS_SAVE_BTN_", a4 = "_A_FILTERS_SAVE_LABEL_NAME_", s4 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", i4 = "_A_FILTERS_SAVE_MODAL_HEADER_", l4 = "_A_FILTERS_SAVE_MSG_ERROR_", o4 = "My saved searches", u4 = "start search", _4 = "_A_FILTERS_TOP_CLOSE_", d4 = "Your selection", c4 = {
  _A_FILTERS_ADD_FILTER_: Z3,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: J3,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: Q3,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: e4,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_DESELECT_ALL_: t4,
  "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_": "Clear filter value {{ filterValue }} for filter: {{ filterLabel }}",
  "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_": "Open filter: {{ filterLabel }} with value {{ filterValue }}",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: n4,
  _A_FILTERS_SAVE_BTN_: r4,
  _A_FILTERS_SAVE_LABEL_NAME_: a4,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: s4,
  _A_FILTERS_SAVE_MODAL_HEADER_: i4,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: l4,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: o4,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} selected",
  _A_FILTERS_START_SEARCH_: u4,
  _A_FILTERS_TOP_CLOSE_: _4,
  _A_FILTERS_YOUR_SELECTION_: d4
}, f4 = "_A_FILTERS_ADD_FILTER_", h4 = "Cerrar búsqueda avanzada", A4 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", E4 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", p4 = "Abrir búsqueda avanzada", T4 = "_A_FILTERS_SAVE_BTN_", S4 = "_A_FILTERS_SAVE_LABEL_NAME_", m4 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", L4 = "_A_FILTERS_SAVE_MODAL_HEADER_", b4 = "_A_FILTERS_SAVE_MSG_ERROR_", v4 = "_A_FILTERS_SAVE_SELECT_", I4 = "iniciar busqueda", g4 = "_A_FILTERS_TOP_CLOSE_", y4 = {
  _A_FILTERS_ADD_FILTER_: f4,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: h4,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: A4,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: E4,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: p4,
  _A_FILTERS_SAVE_BTN_: T4,
  _A_FILTERS_SAVE_LABEL_NAME_: S4,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: m4,
  _A_FILTERS_SAVE_MODAL_HEADER_: L4,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: b4,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: v4,
  _A_FILTERS_START_SEARCH_: I4,
  _A_FILTERS_TOP_CLOSE_: g4
}, R4 = "_A_FILTERS_ADD_FILTER_", O4 = "Fermer la recherche avancée", C4 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", N4 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", D4 = "Ouvrir la recherche avancée", B4 = "_A_FILTERS_SAVE_BTN_", w4 = "_A_FILTERS_SAVE_LABEL_NAME_", P4 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", F4 = "_A_FILTERS_SAVE_MODAL_HEADER_", x4 = "_A_FILTERS_SAVE_MSG_ERROR_", M4 = "_A_FILTERS_SAVE_SELECT_", $4 = "lancer la recherche", q4 = "_A_FILTERS_TOP_CLOSE_", k4 = {
  _A_FILTERS_ADD_FILTER_: R4,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: O4,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: C4,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: N4,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: D4,
  _A_FILTERS_SAVE_BTN_: B4,
  _A_FILTERS_SAVE_LABEL_NAME_: w4,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: P4,
  _A_FILTERS_SAVE_MODAL_HEADER_: F4,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: x4,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: M4,
  _A_FILTERS_START_SEARCH_: $4,
  _A_FILTERS_TOP_CLOSE_: q4
}, U4 = "_A_FILTERS_ADD_FILTER_", H4 = "Zatvorite napredno pretraživanje", V4 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", W4 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", G4 = "Otvorite napredno pretraživanje", K4 = "_A_FILTERS_SAVE_BTN_", j4 = "_A_FILTERS_SAVE_LABEL_NAME_", z4 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", Y4 = "_A_FILTERS_SAVE_MODAL_HEADER_", X4 = "_A_FILTERS_SAVE_MSG_ERROR_", Z4 = "_A_FILTERS_SAVE_SELECT_", J4 = "Započnite pretragu", Q4 = "_A_FILTERS_TOP_CLOSE_", e6 = {
  _A_FILTERS_ADD_FILTER_: U4,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: H4,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: V4,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: W4,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: G4,
  _A_FILTERS_SAVE_BTN_: K4,
  _A_FILTERS_SAVE_LABEL_NAME_: j4,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: z4,
  _A_FILTERS_SAVE_MODAL_HEADER_: Y4,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: X4,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: Z4,
  _A_FILTERS_START_SEARCH_: J4,
  _A_FILTERS_TOP_CLOSE_: Q4
}, t6 = "_A_FILTERS_ADD_FILTER_", n6 = "Chiudi la ricerca avanzata", r6 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", a6 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", s6 = "Apri la ricerca avanzata", i6 = "_A_FILTERS_SAVE_BTN_", l6 = "_A_FILTERS_SAVE_LABEL_NAME_", o6 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", u6 = "_A_FILTERS_SAVE_MODAL_HEADER_", _6 = "_A_FILTERS_SAVE_MSG_ERROR_", d6 = "_A_FILTERS_SAVE_SELECT_", c6 = "Inizia la ricerca", f6 = "_A_FILTERS_TOP_CLOSE_", h6 = {
  _A_FILTERS_ADD_FILTER_: t6,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: n6,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: r6,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: a6,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: s6,
  _A_FILTERS_SAVE_BTN_: i6,
  _A_FILTERS_SAVE_LABEL_NAME_: l6,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: o6,
  _A_FILTERS_SAVE_MODAL_HEADER_: u6,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: _6,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: d6,
  _A_FILTERS_START_SEARCH_: c6,
  _A_FILTERS_TOP_CLOSE_: f6
}, A6 = "Новое условие фильтра", E6 = "Удалить", p6 = "Удалить выбранный фильтр", T6 = "Не удается удалить выбранный фильтр. (Сохраненный фильтр не выбран)", S6 = "Удалить фильтр", m6 = "Сбросить", L6 = "Мои фильтры", b6 = "Закрыть", v6 = "Фильтр:", I6 = "Новый", g6 = "Сохранить фильтр", y6 = "Имя", R6 = "Пожалуйста, введите имя для сохраняемого фильтра. При вводе существующего имени, уже сохраненный фильтр будет обновлен. При вводе нового имени, будет сохранен новый фильтр.", O6 = "Сохранить фильтр", C6 = "Не удалось сохранить фильтр.", N6 = "Сохраненные фильтры", D6 = "Поиск", B6 = "Удалить условие фильтра", w6 = {
  _A_FILTERS_ADD_FILTER_: A6,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "Вы уверены, что хотите удалить этот сохраненный фильтр <strong>{{ name }}</strong>?",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: E6,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "Удалить сохраненный фильтр",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "Не удалось удалить выбранный фильтр <strong>{{ name }}</strong>.",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "Выбранный фильтр <strong>{{ name }}</strong> был удален.",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_: p6,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: T6,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_: S6,
  _A_FILTERS_DESELECT_ALL_: m6,
  _A_FILTERS_FILTER_SAVED_GROUP_MY_: L6,
  _A_FILTERS_HOR_CLOSE_DROPDOWN_: b6,
  _A_FILTERS_HOR_FILTER_HEADER_: v6,
  _A_FILTERS_HOR_FILTER_NEW_: I6,
  _A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_: g6,
  _A_FILTERS_SAVE_LABEL_NAME_: y6,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: R6,
  _A_FILTERS_SAVE_MODAL_HEADER_: O6,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": 'Фильтр с именем <strong>"{{ name }}"</strong> будет обновлен при сохранении.',
  _A_FILTERS_SAVE_MSG_ERROR_: C6,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": 'Новый фильтр <strong>"{{ name }}"</strong> был сохранен.',
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": 'Фильтр <strong>"{{ name }}"</strong> был обновлен.',
  _A_FILTERS_SAVE_SELECT_: N6,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} выбрано",
  _A_FILTERS_START_SEARCH_: D6,
  _A_FILTERS_TOP_CLOSE_: B6
}, ka = {
  ar: D3,
  de: X3,
  en: c4,
  es: y4,
  fr: k4,
  hr: e6,
  it: h6,
  ru: w6
}, P6 = "عرض كلمة المرور", F6 = "إخفاء كلمة المرور", x6 = {
  _A_INPUT_SHOW_PASSWORD_: P6,
  _A_INPUT_HIDE_PASSWORD_: F6
}, M6 = "Passwort anzeigen", $6 = "Passwort verbergen", q6 = {
  _A_INPUT_SHOW_PASSWORD_: M6,
  _A_INPUT_HIDE_PASSWORD_: $6
}, k6 = "Show password", U6 = "Hide password", H6 = {
  _A_INPUT_SHOW_PASSWORD_: k6,
  _A_INPUT_HIDE_PASSWORD_: U6
}, V6 = "Mostrar contraseña", W6 = "Ocultar contraseña", G6 = {
  _A_INPUT_SHOW_PASSWORD_: V6,
  _A_INPUT_HIDE_PASSWORD_: W6
}, K6 = "Afficher le mot de passe", j6 = "Masquer le mot de passe", z6 = {
  _A_INPUT_SHOW_PASSWORD_: K6,
  _A_INPUT_HIDE_PASSWORD_: j6
}, Y6 = "Prikaži lozinku", X6 = "Sakrij lozinku", Z6 = {
  _A_INPUT_SHOW_PASSWORD_: Y6,
  _A_INPUT_HIDE_PASSWORD_: X6
}, J6 = "Mostra password", Q6 = "Nascondi password", e7 = {
  _A_INPUT_SHOW_PASSWORD_: J6,
  _A_INPUT_HIDE_PASSWORD_: Q6
}, t7 = "Показать пароль", n7 = "Скрыть пароль", r7 = {
  _A_INPUT_SHOW_PASSWORD_: t7,
  _A_INPUT_HIDE_PASSWORD_: n7
}, Ua = {
  ar: x6,
  de: q6,
  en: H6,
  es: G6,
  fr: z6,
  hr: Z6,
  it: e7,
  ru: r7
}, a7 = {}, s7 = "von", i7 = "bis", l7 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: s7,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: i7
}, o7 = {}, u7 = {}, _7 = {}, d7 = {}, c7 = {}, f7 = {}, Ha = {
  ar: a7,
  de: l7,
  en: o7,
  es: u7,
  fr: _7,
  hr: d7,
  it: c7,
  ru: f7
}, h7 = "نسخ إلى الحافظة", A7 = "تم النسخ إلى الحافظة", E7 = {
  _A_LINK_COPY_BTN_TITLE_: h7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: A7
}, p7 = "In die Zwischenablage kopieren", T7 = "In die Zwischenablage kopiert", S7 = {
  _A_LINK_COPY_BTN_TITLE_: p7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: T7
}, m7 = "Copy to clipboard", L7 = "Copied to clipboard", b7 = {
  _A_LINK_COPY_BTN_TITLE_: m7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: L7
}, v7 = "Copiar al portapapeles", I7 = "Copiado al portapapeles", g7 = {
  _A_LINK_COPY_BTN_TITLE_: v7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: I7
}, y7 = "Copier dans le presse-papiers", R7 = "Copié dans le presse-papiers", O7 = {
  _A_LINK_COPY_BTN_TITLE_: y7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: R7
}, C7 = "Kopiraj u međuspremnik", N7 = "Kopirano u međuspremnik", D7 = {
  _A_LINK_COPY_BTN_TITLE_: C7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: N7
}, B7 = "Copia negli appunti", w7 = "Copiato negli appunti", P7 = {
  _A_LINK_COPY_BTN_TITLE_: B7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: w7
}, F7 = "Скопировать в буфер обмена", x7 = "Скопировано в буфер обмена", M7 = {
  _A_LINK_COPY_BTN_TITLE_: F7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: x7
}, Va = {
  ar: E7,
  de: S7,
  en: b7,
  es: g7,
  fr: O7,
  hr: D7,
  it: P7,
  ru: M7
}, $7 = "قطع", q7 = "حفظ", k7 = "إغلاق النافذة المنبثقة (موجودة في الرأس)", U7 = "إغلاق النافذة المنبثقة (موجودة في التذييل)", H7 = "حفظ البيانات في النافذة المنبثقة", V7 = {
  _A_MODAL_BTN_CANCEL_: $7,
  _A_MODAL_BTN_SAVE_: q7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: k7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: U7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: H7
}, W7 = "Abbrechen", G7 = "Speichern", K7 = "Modales Fenster schließen (im Header angeordnet)", j7 = "Modales Fenster schließen (im Footer angeordnet)", z7 = "Daten im modalen Fenster speichern", Y7 = {
  _A_MODAL_BTN_CANCEL_: W7,
  _A_MODAL_BTN_SAVE_: G7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: K7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: j7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: z7
}, X7 = "cancel", Z7 = "save", J7 = "Close modal window (located in the header)", Q7 = "Close modal window (located in the footer)", e8 = "Save data in the modal window", t8 = {
  _A_MODAL_BTN_CANCEL_: X7,
  _A_MODAL_BTN_SAVE_: Z7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: J7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: Q7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: e8
}, n8 = "Interrumpir", r8 = "Guardar", a8 = "Cerrar ventana modal (ubicada en el encabezado)", s8 = "Cerrar ventana modal (ubicada en el pie de página)", i8 = "Guardar los datos en la ventana modal", l8 = {
  _A_MODAL_BTN_CANCEL_: n8,
  _A_MODAL_BTN_SAVE_: r8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: a8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: s8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: i8
}, o8 = "Interrompre", u8 = "Enregistrer", _8 = "Fermer la fenêtre modale (située dans l'en-tête)", d8 = "Fermer la fenêtre modale (située dans le pied de page)", c8 = "Enregistrer les données dans la fenêtre modale", f8 = {
  _A_MODAL_BTN_CANCEL_: o8,
  _A_MODAL_BTN_SAVE_: u8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: _8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: d8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: c8
}, h8 = "Odustani", A8 = "Spremi", E8 = "Zatvori modalni prozor (smještena u zaglavlju)", p8 = "Zatvori modalni prozor (smještena u podnožju)", T8 = "Spremi podatke u modalnom prozoru", S8 = {
  _A_MODAL_BTN_CANCEL_: h8,
  _A_MODAL_BTN_SAVE_: A8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: E8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: p8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: T8
}, m8 = "Interrompere", L8 = "Salva", b8 = "Chiudi finestra modale (situata nell'intestazione)", v8 = "Chiudi finestra modale (situata nel piè di pagina)", I8 = "Salva i dati nella finestra modale", g8 = {
  _A_MODAL_BTN_CANCEL_: m8,
  _A_MODAL_BTN_SAVE_: L8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: b8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: v8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: I8
}, y8 = "Прервать", R8 = "Сохранить", O8 = "Закрыть модальное окно (расположена в хедере)", C8 = "Закрыть модальное окно (расположена в футере)", N8 = "Сохранить данные в модальном окне", D8 = {
  _A_MODAL_BTN_CANCEL_: y8,
  _A_MODAL_BTN_SAVE_: R8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: O8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: C8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: N8
}, Wa = {
  ar: V7,
  de: Y7,
  en: t8,
  es: l8,
  fr: f8,
  hr: S8,
  it: g8,
  ru: D8
}, B8 = "[لا توجد عناصر متاحة للاختيار]", w8 = "بحث", P8 = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: B8,
  _A_RADIO_SEARCH_: w8
}, F8 = "[Keine Elemente zur Auswahl verfügbar]", x8 = "Suche", M8 = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: F8,
  _A_RADIO_SEARCH_: x8
}, $8 = "[No items available for selection]", q8 = "Search", k8 = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: $8,
  _A_RADIO_SEARCH_: q8
}, U8 = "[No hay elementos disponibles para seleccionar]", H8 = "Buscar", V8 = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: U8,
  _A_RADIO_SEARCH_: H8
}, W8 = "[Aucun élément disponible pour la sélection]", G8 = "Recherche", K8 = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: W8,
  _A_RADIO_SEARCH_: G8
}, j8 = "[Nema dostupnih elemenata za odabir]", z8 = "Pretraživanje", Y8 = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: j8,
  _A_RADIO_SEARCH_: z8
}, X8 = "[Nessun elemento disponibile per la selezione]", Z8 = "Cerca", J8 = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: X8,
  _A_RADIO_SEARCH_: Z8
}, Q8 = "[Нет элементов для выбора]", eK = "Поиск", tK = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: Q8,
  _A_RADIO_SEARCH_: eK
}, Ga = {
  ar: P8,
  de: M8,
  en: k8,
  es: V8,
  fr: K8,
  hr: Y8,
  it: J8,
  ru: tK
}, nK = "اختر هذا الخيار فقط", rK = "[No choices]", aK = "Search", sK = {
  _A_SELECT_EXCLUSIVE_: nK,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: rK,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: aK,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, iK = "Nur diese Option auswählen", lK = "[Keine Auswahl]", oK = "Suche", uK = {
  _A_SELECT_EXCLUSIVE_: iK,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: lK,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} ausgewählt",
  _A_SELECT_SEARCH_: oK,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} ausgewählt"
}, _K = "Select only this option", dK = "[No choices]", cK = "Search", fK = {
  _A_SELECT_EXCLUSIVE_: _K,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: dK,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: cK,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, hK = "Seleccionar solo esta opción", AK = "[No choices]", EK = "Search", pK = {
  _A_SELECT_EXCLUSIVE_: hK,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: AK,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: EK,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, TK = "Sélectionner uniquement cette option", SK = "[No choices]", mK = "Search", LK = {
  _A_SELECT_EXCLUSIVE_: TK,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: SK,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: mK,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, bK = "Odaberi samo ovu opciju", vK = "[No choices]", IK = "Search", gK = {
  _A_SELECT_EXCLUSIVE_: bK,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: vK,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: IK,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, yK = "Seleziona solo questa opzione", RK = "[No choices]", OK = "Search", CK = {
  _A_SELECT_EXCLUSIVE_: yK,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: RK,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: OK,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, NK = "Выбрать только этот вариант", DK = "[Нет элементов для выбора]", BK = "Поиск", wK = {
  _A_SELECT_EXCLUSIVE_: NK,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: DK,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} выбрано",
  _A_SELECT_SEARCH_: BK,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} выбрано"
}, Ka = {
  ar: sK,
  de: uK,
  en: fK,
  es: pK,
  fr: LK,
  hr: gK,
  it: CK,
  ru: wK
}, PK = "إظهار أقل", FK = "أظهر المزيد", xK = "إظهار أقل - يمكن تجاهل زر لأن جميع المحتويات قابلة للقراءة بواسطة قارئات الشاشة بالفعل", MK = "إظهار المزيد - يمكن تجاهل زر لأن جميع المحتويات قابلة للقراءة بواسطة قارئات الشاشة بالفعل", $K = {
  _A_SHOW_MORE_LESS_: PK,
  _A_SHOW_MORE_MORE_: FK,
  _A_SHOW_MORE_LESS_SCREEN_READER_: xK,
  _A_SHOW_MORE_MORE_SCREEN_READER_: MK
}, qK = "Mehr anzeigen", kK = "Weniger anzeigen", UK = "Weniger anzeigen - Button kann ignoriert werden, da der gesamte Inhalt für ScreenReader bereits lesbar ist", HK = "Mehr anzeigen - Button kann ignoriert werden, da der gesamte Inhalt für ScreenReader bereits lesbar ist", VK = {
  _A_SHOW_MORE_MORE_: qK,
  _A_SHOW_MORE_LESS_: kK,
  _A_SHOW_MORE_LESS_SCREEN_READER_: UK,
  _A_SHOW_MORE_MORE_SCREEN_READER_: HK
}, WK = "Show less", GK = "Show more", KK = "Show less - Button can be ignored since all content is already readable by screen readers", jK = "Show more - Button can be ignored since all content is already readable by screen readers", zK = {
  _A_SHOW_MORE_LESS_: WK,
  _A_SHOW_MORE_MORE_: GK,
  _A_SHOW_MORE_LESS_SCREEN_READER_: KK,
  _A_SHOW_MORE_MORE_SCREEN_READER_: jK
}, YK = "Mostrar menos", XK = "Mostrar más", ZK = "Mostrar menos - El botón se puede ignorar ya que todo el contenido ya es legible para los lectores de pantalla", JK = "Mostrar más - El botón se puede ignorar ya que todo el contenido ya es legible para los lectores de pantalla", QK = {
  _A_SHOW_MORE_LESS_: YK,
  _A_SHOW_MORE_MORE_: XK,
  _A_SHOW_MORE_LESS_SCREEN_READER_: ZK,
  _A_SHOW_MORE_MORE_SCREEN_READER_: JK
}, e9 = "Afficher moins", t9 = "Afficher plus", n9 = "Afficher moins - Le bouton peut être ignoré car tout le contenu est déjà lisible par les lecteurs d'écran", r9 = "Afficher plus - Le bouton peut être ignoré car tout le contenu est déjà lisible par les lecteurs d'écran", a9 = {
  _A_SHOW_MORE_LESS_: e9,
  _A_SHOW_MORE_MORE_: t9,
  _A_SHOW_MORE_LESS_SCREEN_READER_: n9,
  _A_SHOW_MORE_MORE_SCREEN_READER_: r9
}, s9 = "Prikaži manje", i9 = "Prikaži više", l9 = "Prikaži manje - Ovo dugme se može zanemariti jer je cjelokupan sadržaj već vidljiv čitaču zaslona.", o9 = "Prikaži više - Ovo dugme se može zanemariti jer je cjelokupan sadržaj već vidljiv čitaču zaslona.", u9 = {
  _A_SHOW_MORE_LESS_: s9,
  _A_SHOW_MORE_MORE_: i9,
  _A_SHOW_MORE_LESS_SCREEN_READER_: l9,
  _A_SHOW_MORE_MORE_SCREEN_READER_: o9
}, _9 = "Mostra meno", d9 = "Mostra di più", c9 = "Mostra meno - Il pulsante può essere ignorato poiché tutto il contenuto è già leggibile dagli screen reader", f9 = "Mostra di più - Il pulsante può essere ignorato poiché tutto il contenuto è già leggibile dagli screen reader", h9 = {
  _A_SHOW_MORE_LESS_: _9,
  _A_SHOW_MORE_MORE_: d9,
  _A_SHOW_MORE_LESS_SCREEN_READER_: c9,
  _A_SHOW_MORE_MORE_SCREEN_READER_: f9
}, A9 = "Показать меньше", E9 = "Показать больше", p9 = "Показать меньше - Кнопку можно проигнорировать, так как весь контент уже доступен для чтения с помощью скринридера", T9 = "Показать больше - Кнопку можно проигнорировать, так как весь контент уже доступен для чтения с помощью скринридера", S9 = {
  _A_SHOW_MORE_LESS_: A9,
  _A_SHOW_MORE_MORE_: E9,
  _A_SHOW_MORE_LESS_SCREEN_READER_: p9,
  _A_SHOW_MORE_MORE_SCREEN_READER_: T9
}, ja = {
  ar: $K,
  de: VK,
  en: zK,
  es: QK,
  fr: a9,
  hr: u9,
  it: h9,
  ru: S9
}, m9 = "إجراءات", L9 = "إلغاء تحديد جميع الصفوف المحددة", b9 = "إلغاء تحديد هذا الصف", v9 = "1 حقل", I9 = "تخصيص الجدول", g9 = "لا توجد إدخالات.", y9 = "تنفيذ إجراء متعدد؟", R9 = "متابعة", O9 = "إغلاق", C9 = "+ 1 حقل", N9 = "إجراءات متعددة", D9 = "إلغاء الإجراء المتعدد", B9 = "نقل العمود إلى اليمين", w9 = "نقل العمود إلى اليسار", P9 = "إظهار العمود", F9 = "إخفاء العمود", x9 = "العمود مقفل", M9 = "معاينة الصف", $9 = "إغلاق المعاينة", q9 = "الرجاء استخدام الفتحة: 'معاينة'", k9 = "معاينة الصف", U9 = "إغلاق المعاينة", H9 = "إلى الصف التالي", V9 = "إلى الصف السابق", W9 = "بحث سريع", G9 = "إغلاق معاينة الصف", K9 = "فتح معاينة الصف", j9 = "تحديد جميع الصفوف المرئية ذات الصلة", z9 = "تحديد هذا الصف", Y9 = "إلغاء الترتيب", X9 = "إغلاق", Z9 = "عمود", J9 = "اتجاه", Q9 = "تصاعدي", ej = "تنازلي", tj = "ترتيب", nj = "ترتيب حسب", rj = "ترتيب", aj = "ثم حسب", sj = "انقر هنا للتبديل بين الترتيب التصاعدي، الترتيب التنازلي، وعدم الترتيب.", ij = "اضغط مع الاستمرار على مفتاح Shift أثناء النقر للجمع بين ترتيب أعمدة متعددة.", lj = {
  _A_TABLE_ACTIONS_: m9,
  "_A_TABLE_ALL_ROWS_{{count}}_": "إجمالي عدد الإدخالات: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "إلغاء تحديد جميع الصفوف ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: L9,
  _A_TABLE_DESELECT_THIS_ROW_: b9,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "إجراءات للصف: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: v9,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} حقول",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "عرض المزيد من الحقول ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: I9,
  _A_TABLE_EMPTY_TEXT_: g9,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: y9,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>هل تريد تنفيذ الإجراء <strong>{{ action }}</strong> على <strong>{{ selectedRows }}</strong> من العناصر؟</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: R9,
  _A_TABLE_MOBILE_TR_CLOSE_: O9,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: C9,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} حقول",
  _A_TABLE_MULTIPLE_ACTIONS_: N9,
  _A_TABLE_MULTIPLE_CANCEL_: D9,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} من {{ countAllRowsFiltered }} محددة",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: B9,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: w9,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: P9,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: F9,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: x9,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: M9,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: $9,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: q9,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: k9,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: U9,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} من {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: H9,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: V9,
  _A_TABLE_QUICK_SEARCH_: W9,
  _A_TABLE_ROW_PREVIEW_CLOSE_: G9,
  _A_TABLE_ROW_PREVIEW_OPEN_: K9,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "تحديد جميع الصفوف ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: j9,
  _A_TABLE_SELECT_THIS_ROW_: z9,
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: Y9,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: X9,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Z9,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: J9,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Q9,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: ej,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "تغيير الترتيب (الأعمدة المحددة: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_HEADER_: tj,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: nj,
  _A_TABLE_SORT_ADDITIONAL_START_: rj,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: aj,
  _A_TABLE_SORT_TITLE_: sj,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: ij
}, oj = "Aktionen", uj = "Alle ausgewählten Zeilen abwählen", _j = "Die Zeile abwählen", dj = "1 Feld", cj = "Tabelle anpassen", fj = "Keine Einträge vorhanden.", hj = "Mehrfachaktion durchführen?", Aj = "Fortfahren", Ej = "Schließen", pj = "+ 1 Feld", Tj = "Mehrfachaktionen", Sj = "Mehrfachaktion abbrechen", mj = "Spalte nach rechts verschieben", Lj = "Spalte nach links verschieben", bj = "Spalte einblenden", vj = "Spalte ausblenden", Ij = "Spalte ist gesperrt", gj = "Vorschau der Zeile", yj = "Vorschau schließen", Rj = "Benutzen sie bitte slot: 'preview'", Oj = "Vorschau der Zeile", Cj = "Vorschau schließen", Nj = "Zur nächsten Zeile", Dj = "Zur vorherigen Zeile", Bj = "Schnellsuche", wj = "Vorschau der Zeile schließen", Pj = "Vorschau der Zeile öffnen", Fj = "Alle sichtbaren, relevanten Zeilen auswählen", xj = "Die Zeile auswählen", Mj = "Sortierung aufheben", $j = "Schließen", qj = "Spalte", kj = "Reihenfolge", Uj = "Aufsteigend", Hj = "Absteigend", Vj = "Sortierung", Wj = "Sortieren nach", Gj = "Sortieren", Kj = "Dann nach", jj = "Klicken Sie hier, um zwischen aufsteigender, absteigender und keiner Sortierung zu wechseln.", zj = "Halten Sie die Umschalttaste beim Klicken gedrückt, um die Sortierung mehrerer Spalten zu kombinieren.", Yj = {
  _A_TABLE_ACTIONS_: oj,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Gesamtanzahl der Einträge: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Alle Zeilen abwählen ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: uj,
  _A_TABLE_DESELECT_THIS_ROW_: _j,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Aktionen zur Zeile: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: dj,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} Felder",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Weitere Felder anzeigen ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: cj,
  _A_TABLE_EMPTY_TEXT_: fj,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: hj,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Möchten Sie die Aktion <strong>{{ action }}</strong> auf <strong>{{ selectedRows }}</strong> Objekten durchführen?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: Aj,
  _A_TABLE_MOBILE_TR_CLOSE_: Ej,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: pj,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} Felder",
  _A_TABLE_MULTIPLE_ACTIONS_: Tj,
  _A_TABLE_MULTIPLE_CANCEL_: Sj,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} von {{ countAllRowsFiltered }} ausgewählt",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: mj,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: Lj,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: bj,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: vj,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: Ij,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: gj,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: yj,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: Rj,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Oj,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: Cj,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} von {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Nj,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Dj,
  _A_TABLE_QUICK_SEARCH_: Bj,
  _A_TABLE_ROW_PREVIEW_CLOSE_: wj,
  _A_TABLE_ROW_PREVIEW_OPEN_: Pj,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Alle Zeilen auswählen ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Fj,
  _A_TABLE_SELECT_THIS_ROW_: xj,
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: Mj,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: $j,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: qj,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: kj,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Uj,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: Hj,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Sortierung ändern (ausgewählte Spalten: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_HEADER_: Vj,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Wj,
  _A_TABLE_SORT_ADDITIONAL_START_: Gj,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Kj,
  _A_TABLE_SORT_TITLE_: jj,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: zj
}, Xj = "Actions", Zj = "Deselect all selected rows", Jj = "Deselect this row", Qj = "1 field", ez = "Customize table", tz = "No entries available.", nz = "Execute multiple actions?", rz = "Proceed", az = "Close", sz = "+ 1 field", iz = "Multiple actions", lz = "Cancel multiple actions", oz = "Move column to the right", uz = "Move column to the left", _z = "Show column", dz = "Hide column", cz = "Column is locked", fz = "Row preview", hz = "Close preview", Az = "Row preview", Ez = "Close preview", pz = "Please use slot: 'preview'", Tz = "To the next row", Sz = "To the previous row", mz = "Quick search", Lz = "Close row preview", bz = "Open row preview", vz = "Select all visible, relevant rows", Iz = "Select this row", gz = "Click here to toggle between ascending, descending, and no sorting.", yz = "Hold Shift while clicking to combine sorting of multiple columns.", Rz = "Sorting", Oz = "Sort by", Cz = "Then by", Nz = "Column", Dz = "Direction", Bz = "Ascending", wz = "Descending", Pz = "Close", Fz = "Sort", xz = "Remove sorting", Mz = {
  _A_TABLE_ACTIONS_: Xj,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Total number of entries: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deselect all rows ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Zj,
  _A_TABLE_DESELECT_THIS_ROW_: Jj,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Actions for row: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Qj,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} fields",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Show more fields ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: ez,
  _A_TABLE_EMPTY_TEXT_: tz,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: nz,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Do you want to execute the action <strong>{{ action }}</strong> on <strong>{{ selectedRows }}</strong> items?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: rz,
  _A_TABLE_MOBILE_TR_CLOSE_: az,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: sz,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} fields",
  _A_TABLE_MULTIPLE_ACTIONS_: iz,
  _A_TABLE_MULTIPLE_CANCEL_: lz,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} of {{ countAllRowsFiltered }} selected",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: oz,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: uz,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: _z,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: dz,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: cz,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: fz,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: hz,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Az,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: Ez,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: pz,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} of {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Tz,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Sz,
  _A_TABLE_QUICK_SEARCH_: mz,
  _A_TABLE_ROW_PREVIEW_CLOSE_: Lz,
  _A_TABLE_ROW_PREVIEW_OPEN_: bz,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Select all rows ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: vz,
  _A_TABLE_SELECT_THIS_ROW_: Iz,
  _A_TABLE_SORT_TITLE_: gz,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: yz,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: Rz,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Oz,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Cz,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Nz,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Dz,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Bz,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: wz,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: Pz,
  _A_TABLE_SORT_ADDITIONAL_START_: Fz,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Change sorting (selected columns: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: xz
}, $z = "Acciones", qz = "Deseleccionar todas las filas seleccionadas", kz = "Deseleccionar esta fila", Uz = "1 campo", Hz = "Personalizar tabla", Vz = "No hay entradas disponibles.", Wz = "¿Ejecutar múltiples acciones?", Gz = "Continuar", Kz = "Cerrar", jz = "+ 1 campo", zz = "Acciones múltiples", Yz = "Cancelar acciones múltiples", Xz = "Mover columna a la derecha", Zz = "Mover columna a la izquierda", Jz = "Mostrar columna", Qz = "Ocultar columna", eY = "La columna está bloqueada", tY = "Vista previa de la fila", nY = "Cerrar vista previa", rY = "Vista previa de la fila", aY = "Cerrar vista previa", sY = "Por favor, use el slot: 'preview'", iY = "A la siguiente fila", lY = "A la fila anterior", oY = "Búsqueda rápida", uY = "Cerrar vista previa de la fila", _Y = "Abrir vista previa de la fila", dY = "Seleccionar todas las filas visibles y relevantes", cY = "Seleccionar esta fila", fY = "Haga clic aquí para alternar entre orden ascendente, descendente o sin ordenar.", hY = "Mantenga presionada la tecla Shift al hacer clic para combinar la ordenación de varias columnas.", AY = "Ordenar", EY = "Ordenar por", pY = "Luego por", TY = "Columna", SY = "Dirección", mY = "Ascendente", LY = "Descendente", bY = "Cerrar", vY = "Ordenar", IY = "Eliminar orden", gY = {
  _A_TABLE_ACTIONS_: $z,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Número total de entradas: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deseleccionar todas las filas ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: qz,
  _A_TABLE_DESELECT_THIS_ROW_: kz,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Acciones para la fila: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Uz,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} campos",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Mostrar más campos ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: Hz,
  _A_TABLE_EMPTY_TEXT_: Vz,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: Wz,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>¿Desea ejecutar la acción <strong>{{ action }}</strong> en <strong>{{ selectedRows }}</strong> objetos?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: Gz,
  _A_TABLE_MOBILE_TR_CLOSE_: Kz,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: jz,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} campos",
  _A_TABLE_MULTIPLE_ACTIONS_: zz,
  _A_TABLE_MULTIPLE_CANCEL_: Yz,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} de {{ countAllRowsFiltered }} seleccionadas",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: Xz,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: Zz,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: Jz,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: Qz,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: eY,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: tY,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: nY,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: rY,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: aY,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: sY,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} de {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: iY,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: lY,
  _A_TABLE_QUICK_SEARCH_: oY,
  _A_TABLE_ROW_PREVIEW_CLOSE_: uY,
  _A_TABLE_ROW_PREVIEW_OPEN_: _Y,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Seleccionar todas las filas ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: dY,
  _A_TABLE_SELECT_THIS_ROW_: cY,
  _A_TABLE_SORT_TITLE_: fY,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: hY,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: AY,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: EY,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: pY,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: TY,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: SY,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: mY,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: LY,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: bY,
  _A_TABLE_SORT_ADDITIONAL_START_: vY,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Cambiar orden (columnas seleccionadas: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: IY
}, yY = "Actions", RY = "Désélectionner toutes les lignes sélectionnées", OY = "Désélectionner cette ligne", CY = "1 champ", NY = "Personnaliser le tableau", DY = "Aucune entrée disponible.", BY = "Exécuter plusieurs actions ?", wY = "Continuer", PY = "Fermer", FY = "+ 1 champ", xY = "Actions multiples", MY = "Annuler l'action multiple", $Y = "Déplacer la colonne vers la droite", qY = "Déplacer la colonne vers la gauche", kY = "Afficher la colonne", UY = "Masquer la colonne", HY = "La colonne est verrouillée", VY = "Aperçu de la ligne", WY = "Fermer l'aperçu", GY = "Aperçu de la ligne", KY = "Fermer l'aperçu", jY = "Veuillez utiliser le slot : 'preview'", zY = "À la ligne suivante", YY = "À la ligne précédente", XY = "Recherche rapide", ZY = "Fermer l'aperçu de la ligne", JY = "Ouvrir l'aperçu de la ligne", QY = "Sélectionner toutes les lignes visibles et pertinentes", eX = "Sélectionner cette ligne", tX = "Cliquez ici pour alterner entre tri ascendant, descendant et sans tri.", nX = "Maintenez la touche Maj enfoncée en cliquant pour combiner le tri de plusieurs colonnes.", rX = "Tri", aX = "Trier par", sX = "Puis par", iX = "Colonne", lX = "Direction", oX = "Ascendant", uX = "Descendant", _X = "Fermer", dX = "Trier", cX = "Supprimer le tri", fX = {
  _A_TABLE_ACTIONS_: yY,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Nombre total d'entrées : {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Désélectionner toutes les lignes ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: RY,
  _A_TABLE_DESELECT_THIS_ROW_: OY,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Actions pour la ligne : {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: CY,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} champs",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Afficher plus de champs ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: NY,
  _A_TABLE_EMPTY_TEXT_: DY,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: BY,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Voulez-vous exécuter l'action <strong>{{ action }}</strong> sur <strong>{{ selectedRows }}</strong> objets ?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: wY,
  _A_TABLE_MOBILE_TR_CLOSE_: PY,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: FY,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} champs",
  _A_TABLE_MULTIPLE_ACTIONS_: xY,
  _A_TABLE_MULTIPLE_CANCEL_: MY,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} sur {{ countAllRowsFiltered }} sélectionnés",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: $Y,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: qY,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: kY,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: UY,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: HY,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: VY,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: WY,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: GY,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: KY,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: jY,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} sur {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: zY,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: YY,
  _A_TABLE_QUICK_SEARCH_: XY,
  _A_TABLE_ROW_PREVIEW_CLOSE_: ZY,
  _A_TABLE_ROW_PREVIEW_OPEN_: JY,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Sélectionner toutes les lignes ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: QY,
  _A_TABLE_SELECT_THIS_ROW_: eX,
  _A_TABLE_SORT_TITLE_: tX,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: nX,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: rX,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: aX,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: sX,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: iX,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: lX,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: oX,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: uX,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: _X,
  _A_TABLE_SORT_ADDITIONAL_START_: dX,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Modifier le tri (colonnes sélectionnées : {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: cX
}, hX = "Akcije", AX = "Poništi odabir svih odabranih redaka", EX = "Poništi odabir ovog retka", pX = "1 polje", TX = "Prilagodi tablicu", SX = "Nema dostupnih unosa.", mX = "Izvršiti više akcija?", LX = "Nastavi", bX = "Zatvori", vX = "+ 1 polje", IX = "Višestruke akcije", gX = "Poništi višestruku akciju", yX = "Premjesti stupac desno", RX = "Premjesti stupac lijevo", OX = "Prikaži stupac", CX = "Sakrij stupac", NX = "Stupac je zaključan", DX = "Pregled retka", BX = "Zatvori pregled", wX = "Pregled retka", PX = "Zatvori pregled", FX = "Molimo koristite slot: 'pregled'", xX = "Na sljedeći redak", MX = "Na prethodni redak", $X = "Brza pretraga", qX = "Zatvori pregled retka", kX = "Otvori pregled retka", UX = "Odaberi sve vidljive, relevantne retke", HX = "Odaberi ovaj redak", VX = "Kliknite ovdje da biste se prebacivali između uzlaznog, silaznog i bez sortiranja.", WX = "Držite tipku Shift dok klikate da biste kombinirali sortiranje više stupaca.", GX = "Sortiranje", KX = "Sortiraj po", jX = "Zatim po", zX = "Stupac", YX = "Smjer", XX = "Uzlazno", ZX = "Silazno", JX = "Zatvori", QX = "Sortiraj", eZ = "Ukloni sortiranje", tZ = {
  _A_TABLE_ACTIONS_: hX,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Ukupan broj unosa: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Poništi odabir svih redaka ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: AX,
  _A_TABLE_DESELECT_THIS_ROW_: EX,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Akcije za redak: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: pX,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} polja",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Prikaži više polja ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: TX,
  _A_TABLE_EMPTY_TEXT_: SX,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: mX,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Želite li izvršiti akciju <strong>{{ action }}</strong> na <strong>{{ selectedRows }}</strong> objekata?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: LX,
  _A_TABLE_MOBILE_TR_CLOSE_: bX,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: vX,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} polja",
  _A_TABLE_MULTIPLE_ACTIONS_: IX,
  _A_TABLE_MULTIPLE_CANCEL_: gX,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} od {{ countAllRowsFiltered }} odabrano",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: yX,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: RX,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: OX,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: CX,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: NX,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: DX,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: BX,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: wX,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: PX,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: FX,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} od {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: xX,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: MX,
  _A_TABLE_QUICK_SEARCH_: $X,
  _A_TABLE_ROW_PREVIEW_CLOSE_: qX,
  _A_TABLE_ROW_PREVIEW_OPEN_: kX,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Odaberi sve retke ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: UX,
  _A_TABLE_SELECT_THIS_ROW_: HX,
  _A_TABLE_SORT_TITLE_: VX,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: WX,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: GX,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: KX,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: jX,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: zX,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: YX,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: XX,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: ZX,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: JX,
  _A_TABLE_SORT_ADDITIONAL_START_: QX,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Promijeni sortiranje (odabrani stupci: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: eZ
}, nZ = "Azioni", rZ = "Deseleziona tutte le righe selezionate", aZ = "Deseleziona questa riga", sZ = "1 campo", iZ = "Personalizza tabella", lZ = "Nessuna voce disponibile.", oZ = "Eseguire più azioni?", uZ = "Continua", _Z = "Chiudi", dZ = "+ 1 campo", cZ = "Azioni multiple", fZ = "Annulla azione multipla", hZ = "Sposta colonna a destra", AZ = "Sposta colonna a sinistra", EZ = "Mostra colonna", pZ = "Nascondi colonna", TZ = "Colonna bloccata", SZ = "Anteprima riga", mZ = "Chiudi anteprima", LZ = "Anteprima riga", bZ = "Chiudi anteprima", vZ = "Si prega di utilizzare lo slot: 'preview'", IZ = "Alla riga successiva", gZ = "Alla riga precedente", yZ = "Ricerca rapida", RZ = "Chiudi anteprima riga", OZ = "Apri anteprima riga", CZ = "Seleziona tutte le righe visibili e pertinenti", NZ = "Seleziona questa riga", DZ = "Clicca qui per alternare tra ordinamento crescente, decrescente e nessun ordinamento.", BZ = "Tieni premuto il tasto Maiusc mentre fai clic per combinare l'ordinamento di più colonne.", wZ = "Ordinamento", PZ = "Ordina per", FZ = "Poi per", xZ = "Colonna", MZ = "Direzione", $Z = "Crescente", qZ = "Decrescente", kZ = "Chiudi", UZ = "Ordina", HZ = "Rimuovi ordinamento", VZ = {
  _A_TABLE_ACTIONS_: nZ,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Numero totale di voci: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deseleziona tutte le righe ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: rZ,
  _A_TABLE_DESELECT_THIS_ROW_: aZ,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Azioni per la riga: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: sZ,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} campi",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Mostra più campi ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: iZ,
  _A_TABLE_EMPTY_TEXT_: lZ,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: oZ,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Vuoi eseguire l'azione <strong>{{ action }}</strong> su <strong>{{ selectedRows }}</strong> oggetti?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: uZ,
  _A_TABLE_MOBILE_TR_CLOSE_: _Z,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: dZ,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} campi",
  _A_TABLE_MULTIPLE_ACTIONS_: cZ,
  _A_TABLE_MULTIPLE_CANCEL_: fZ,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} di {{ countAllRowsFiltered }} selezionate",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: hZ,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: AZ,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: EZ,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: pZ,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: TZ,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: SZ,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: mZ,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: LZ,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: bZ,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: vZ,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} di {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: IZ,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: gZ,
  _A_TABLE_QUICK_SEARCH_: yZ,
  _A_TABLE_ROW_PREVIEW_CLOSE_: RZ,
  _A_TABLE_ROW_PREVIEW_OPEN_: OZ,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Seleziona tutte le righe ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: CZ,
  _A_TABLE_SELECT_THIS_ROW_: NZ,
  _A_TABLE_SORT_TITLE_: DZ,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: BZ,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: wZ,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: PZ,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: FZ,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: xZ,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: MZ,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: $Z,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: qZ,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: kZ,
  _A_TABLE_SORT_ADDITIONAL_START_: UZ,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Modifica ordinamento (colonne selezionate: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: HZ
}, WZ = "Действия", GZ = "Отменить выбор всех выбранных строк", KZ = "Отменить выбор строки", jZ = "1 поле", zZ = "Настроить таблицу", YZ = "Нет доступных записей.", XZ = "Выполнить несколько действий?", ZZ = "Продолжить", JZ = "Закрыть", QZ = "+ 1 поле", eJ = "Множественные действия", tJ = "Отменить", nJ = "Переместить столбец вправо", rJ = "Переместить столбец влево", aJ = "Показать столбец", sJ = "Скрыть столбец", iJ = "Столбец заблокирован", lJ = "Предпросмотр строки", oJ = "Закрыть предварительный просмотр", uJ = "Предпросмотр строки", _J = "Закрыть предварительный просмотр", dJ = "Пожалуйста, используйте слот: 'preview'", cJ = "К следующей строке", fJ = "К предыдущей строке", hJ = "Быстрый поиск", AJ = "Закрыть предпросмотр строки", EJ = "Открыть предпросмотр строки", pJ = "Выбрать все видимые, возможные строки", TJ = "Выбрать эту строку", SJ = "Нажмите здесь, чтобы переключиться между сортировкой по возрастанию, по убыванию и без сортировки.", mJ = "Удерживайте Shift при нажатии, чтобы объединить сортировку нескольких столбцов.", LJ = "Сортировка", bJ = "Сортировать по", vJ = "Затем по", IJ = "Столбец", gJ = "Направление", yJ = "По возрастанию", RJ = "По убыванию", OJ = "Закрыть", CJ = "Сортировать", NJ = "Отменить сортировку", DJ = {
  _A_TABLE_ACTIONS_: WZ,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Общее количество записей: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Отменить выбор всех строк ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: GZ,
  _A_TABLE_DESELECT_THIS_ROW_: KZ,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Действия для строки: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: jZ,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} полей",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Показать дополнительные поля ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: zZ,
  _A_TABLE_EMPTY_TEXT_: YZ,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: XZ,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Вы хотите выполнить действие <strong>{{ action }}</strong> для <strong>{{ selectedRows }}</strong> объектов?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: ZZ,
  _A_TABLE_MOBILE_TR_CLOSE_: JZ,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: QZ,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} полей",
  _A_TABLE_MULTIPLE_ACTIONS_: eJ,
  _A_TABLE_MULTIPLE_CANCEL_: tJ,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} из {{ countAllRowsFiltered }} выбрано",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: nJ,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: rJ,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: aJ,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: sJ,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: iJ,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: lJ,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: oJ,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: uJ,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: _J,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: dJ,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} из {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: cJ,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: fJ,
  _A_TABLE_QUICK_SEARCH_: hJ,
  _A_TABLE_ROW_PREVIEW_CLOSE_: AJ,
  _A_TABLE_ROW_PREVIEW_OPEN_: EJ,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Выбрать все строки ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: pJ,
  _A_TABLE_SELECT_THIS_ROW_: TJ,
  _A_TABLE_SORT_TITLE_: SJ,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: mJ,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: LJ,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: bJ,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: vJ,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: IJ,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: gJ,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: yJ,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: RJ,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: OJ,
  _A_TABLE_SORT_ADDITIONAL_START_: CJ,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Изменить сортировку (выбрано столбцов: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: NJ
}, za = {
  ar: lj,
  de: Yj,
  en: Mz,
  es: gY,
  fr: fX,
  hr: tZ,
  it: VZ,
  ru: DJ
}, BJ = "معالج", wJ = "التالي", PJ = "الخطوة التالية", FJ = "سابق", xJ = "الخطوة السابقة", MJ = "الخطوة الحالية", $J = "خطأ في الخطوة", qJ = "الخطوة القادمة", kJ = "الخطوة المزار", UJ = "تحذير خطوة", HJ = "خطوات المعالج", VJ = {
  _A_WIZARD_ARIA_LABEL_: BJ,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "الخطوة {{ stepNumber }}:",
  _A_WIZARD_NEXT_: wJ,
  _A_WIZARD_NEXT_TITLE_: PJ,
  _A_WIZARD_PREVIOUS_: FJ,
  _A_WIZARD_PREVIOUS_TITLE_: xJ,
  _A_WIZARD_STEP_ACTIVE_: MJ,
  _A_WIZARD_STEP_ERROR_: $J,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} من {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: qJ,
  _A_WIZARD_STEP_VISITED_: kJ,
  _A_WIZARD_STEP_WARNING_: UJ,
  _A_WIZARD_STEPS_ARIA_LABEL_: HJ,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "{{ stepsCount }} من {{ stepActive }} خطوة"
}, WJ = "Wizard", GJ = "Nächste", KJ = "Nächster Schritt", jJ = "Vorherige", zJ = "Vorheriger Schritt", YJ = "Schritt aktuell", XJ = "Schrittfehler", ZJ = "Schritt bevorstehend", JJ = "Schritt besucht", QJ = "Schrittwarnung", eQ = "Wizard Schritte", tQ = {
  _A_WIZARD_ARIA_LABEL_: WJ,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Schritt {{ stepNumber }}:",
  _A_WIZARD_NEXT_: GJ,
  _A_WIZARD_NEXT_TITLE_: KJ,
  _A_WIZARD_PREVIOUS_: jJ,
  _A_WIZARD_PREVIOUS_TITLE_: zJ,
  _A_WIZARD_STEP_ACTIVE_: YJ,
  _A_WIZARD_STEP_ERROR_: XJ,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} von {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: ZJ,
  _A_WIZARD_STEP_VISITED_: JJ,
  _A_WIZARD_STEP_WARNING_: QJ,
  _A_WIZARD_STEPS_ARIA_LABEL_: eQ,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Schritt {{ stepActive }} von {{ stepsCount }}"
}, nQ = "Wizard", rQ = "Next", aQ = "Next step", sQ = "Previous", iQ = "Previous step", lQ = "Step current", oQ = "Step error", uQ = "Step upcoming", _Q = "Step visited", dQ = "Step warning", cQ = "Wizard steps", fQ = {
  _A_WIZARD_ARIA_LABEL_: nQ,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Step {{ stepNumber }}:",
  _A_WIZARD_NEXT_: rQ,
  _A_WIZARD_NEXT_TITLE_: aQ,
  _A_WIZARD_PREVIOUS_: sQ,
  _A_WIZARD_PREVIOUS_TITLE_: iQ,
  _A_WIZARD_STEP_ACTIVE_: lQ,
  _A_WIZARD_STEP_ERROR_: oQ,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} of {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: uQ,
  _A_WIZARD_STEP_VISITED_: _Q,
  _A_WIZARD_STEP_WARNING_: dQ,
  _A_WIZARD_STEPS_ARIA_LABEL_: cQ,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Step {{ stepActive }} of {{ stepsCount }}"
}, hQ = "Asistente", AQ = "Próximo", EQ = "Siguiente paso", pQ = "Previo", TQ = "Paso anterior", SQ = "Paso actual", mQ = "Error de paso", LQ = "Paso próximo", bQ = "Paso visitado", vQ = "Advertencia de paso", IQ = "Pasos del asistente", gQ = {
  _A_WIZARD_ARIA_LABEL_: hQ,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Paso {{ stepNumber }}:",
  _A_WIZARD_NEXT_: AQ,
  _A_WIZARD_NEXT_TITLE_: EQ,
  _A_WIZARD_PREVIOUS_: pQ,
  _A_WIZARD_PREVIOUS_TITLE_: TQ,
  _A_WIZARD_STEP_ACTIVE_: SQ,
  _A_WIZARD_STEP_ERROR_: mQ,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} de {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: LQ,
  _A_WIZARD_STEP_VISITED_: bQ,
  _A_WIZARD_STEP_WARNING_: vQ,
  _A_WIZARD_STEPS_ARIA_LABEL_: IQ,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "escenario {{ stepActive }} de {{ stepsCount }}"
}, yQ = "Assistant", RQ = "Suivant", OQ = "Étape suivante", CQ = "Précédent", NQ = "Étape précédente", DQ = "Étape actuelle", BQ = "Erreur de l'étape", wQ = "Étape à venir", PQ = "Étape visitée", FQ = "Avertissement de l'étape", xQ = "Étapes de l'assistant", MQ = {
  _A_WIZARD_ARIA_LABEL_: yQ,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Étape {{ stepNumber }} :",
  _A_WIZARD_NEXT_: RQ,
  _A_WIZARD_NEXT_TITLE_: OQ,
  _A_WIZARD_PREVIOUS_: CQ,
  _A_WIZARD_PREVIOUS_TITLE_: NQ,
  _A_WIZARD_STEP_ACTIVE_: DQ,
  _A_WIZARD_STEP_ERROR_: BQ,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} sur {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: wQ,
  _A_WIZARD_STEP_VISITED_: PQ,
  _A_WIZARD_STEP_WARNING_: FQ,
  _A_WIZARD_STEPS_ARIA_LABEL_: xQ,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Etape {{ stepActive }} de {{ stepsCount }}"
}, $Q = "Čarobnjak", qQ = "Dalje", kQ = "Sljedeći korak", UQ = "Natrag", HQ = "Prethodni korak", VQ = "Trenutni korak", WQ = "Pogreška koraka", GQ = "Preostali koraci", KQ = "Posjećeni korak", jQ = "Upozorenje koraka", zQ = "Koraci čarobnjaka", YQ = {
  _A_WIZARD_ARIA_LABEL_: $Q,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Korak {{ stepNumber }}:",
  _A_WIZARD_NEXT_: qQ,
  _A_WIZARD_NEXT_TITLE_: kQ,
  _A_WIZARD_PREVIOUS_: UQ,
  _A_WIZARD_PREVIOUS_TITLE_: HQ,
  _A_WIZARD_STEP_ACTIVE_: VQ,
  _A_WIZARD_STEP_ERROR_: WQ,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} od {{stepsCount}}",
  _A_WIZARD_STEP_UPCOMING_: GQ,
  _A_WIZARD_STEP_VISITED_: KQ,
  _A_WIZARD_STEP_WARNING_: jQ,
  _A_WIZARD_STEPS_ARIA_LABEL_: zQ,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Korak {{ stepActive }} od {{ stepsCount }}"
}, XQ = "Wizard", ZQ = "Prossimo", JQ = "Passo successivo", QQ = "Precedente", eee = "Passo precedente", tee = "Passo attuale", nee = "Errore del passo", ree = "Passo successivo", aee = "Passo visitato", see = "Avvertimento del passo", iee = "Passi dell'assistente", lee = {
  _A_WIZARD_ARIA_LABEL_: XQ,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Passo {{ stepNumber }}:",
  _A_WIZARD_NEXT_: ZQ,
  _A_WIZARD_NEXT_TITLE_: JQ,
  _A_WIZARD_PREVIOUS_: QQ,
  _A_WIZARD_PREVIOUS_TITLE_: eee,
  _A_WIZARD_STEP_ACTIVE_: tee,
  _A_WIZARD_STEP_ERROR_: nee,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} di {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: ree,
  _A_WIZARD_STEP_VISITED_: aee,
  _A_WIZARD_STEP_WARNING_: see,
  _A_WIZARD_STEPS_ARIA_LABEL_: iee,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "palcoscenico {{ stepActive }} Di {{ stepsCount }}"
}, oee = "Мастер", uee = "Следующий", _ee = "Следующий шаг", dee = "Предыдущий", cee = "Предыдущий шаг", fee = "Шаг актуальный", hee = "Ошибка шага", Aee = "Шаг предстоящий", Eee = "Шаг посещённый", pee = "Предупреждение шага", Tee = "Шаги мастера", See = {
  _A_WIZARD_ARIA_LABEL_: oee,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Шаг {{ stepNumber }}:",
  _A_WIZARD_NEXT_: uee,
  _A_WIZARD_NEXT_TITLE_: _ee,
  _A_WIZARD_PREVIOUS_: dee,
  _A_WIZARD_PREVIOUS_TITLE_: cee,
  _A_WIZARD_STEP_ACTIVE_: fee,
  _A_WIZARD_STEP_ERROR_: hee,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} из {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: Aee,
  _A_WIZARD_STEP_VISITED_: Eee,
  _A_WIZARD_STEP_WARNING_: pee,
  _A_WIZARD_STEPS_ARIA_LABEL_: Tee,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Шаг {{ stepActive }} из {{ stepsCount }}"
}, Ya = {
  ar: VJ,
  de: tQ,
  en: fQ,
  es: gQ,
  fr: MQ,
  hr: YQ,
  it: lee,
  ru: See
}, mee = "Breadcrumb", Lee = "إظهار الروابط المخفية", bee = "إغلاق القائمة", vee = "فتح القائمة", Iee = "إغلاق القائمة الفرعية:", gee = "القائمة الرئيسية", yee = "فتح بحث القائمة", Ree = "فتح القائمة الفرعية:", Oee = "بحث القائمة", Cee = "لم يتم العثور على عناصر القائمة", Nee = "إلى القائمة الرئيسية", Dee = {
  _A_MENU_2_BREADCRUMB_: mee,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: Lee,
  _A_MENU_2_BTN_CLOSE_: bee,
  _A_MENU_2_BTN_OPEN_: vee,
  _A_MENU_2_CLOSE_SUBMENU_: Iee,
  _A_MENU_2_MAIN_MENU_: gee,
  _A_MENU_2_OPEN_SEARCH_: yee,
  _A_MENU_2_OPEN_SUBMENU_: Ree,
  _A_MENU_2_SEARCH_: Oee,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "تم العثور على {{ count }} من عناصر القائمة",
  _A_MENU_2_SEARCH_NONE_FOUND_: Cee,
  _A_MENU_2_TO_MAIN_MENU_: Nee
}, Bee = "Breadcrumb", wee = "Versteckte Links", Pee = "Menü schließen", Fee = "Menü öffnen", xee = "Untermenü schließen:", Mee = "Hauptmenü", $ee = "Öffnen Menüsuche", qee = "Untermenü öffnen:", kee = "Menüsuche", Uee = "Keine Menüeinträge gefunden", Hee = "Zum Hauptmenü", Vee = {
  _A_MENU_2_BREADCRUMB_: Bee,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: wee,
  _A_MENU_2_BTN_CLOSE_: Pee,
  _A_MENU_2_BTN_OPEN_: Fee,
  _A_MENU_2_CLOSE_SUBMENU_: xee,
  _A_MENU_2_MAIN_MENU_: Mee,
  _A_MENU_2_OPEN_SEARCH_: $ee,
  _A_MENU_2_OPEN_SUBMENU_: qee,
  _A_MENU_2_SEARCH_: kee,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} Menüeinträge gefunden",
  _A_MENU_2_SEARCH_NONE_FOUND_: Uee,
  _A_MENU_2_TO_MAIN_MENU_: Hee
}, Wee = "Breadcrumb", Gee = "Show Hidden Links", Kee = "Close Menu", jee = "Open Menu", zee = "Close Submenu:", Yee = "Main Menu", Xee = "Open Menu Search", Zee = "Open Submenu:", Jee = "Menu Search", Qee = "No Menu Entries Found", ete = "To Main Menu", tte = {
  _A_MENU_2_BREADCRUMB_: Wee,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: Gee,
  _A_MENU_2_BTN_CLOSE_: Kee,
  _A_MENU_2_BTN_OPEN_: jee,
  _A_MENU_2_CLOSE_SUBMENU_: zee,
  _A_MENU_2_MAIN_MENU_: Yee,
  _A_MENU_2_OPEN_SEARCH_: Xee,
  _A_MENU_2_OPEN_SUBMENU_: Zee,
  _A_MENU_2_SEARCH_: Jee,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} Menu Entries Found",
  _A_MENU_2_SEARCH_NONE_FOUND_: Qee,
  _A_MENU_2_TO_MAIN_MENU_: ete
}, nte = "Breadcrumb", rte = "Mostrar enlaces ocultos", ate = "Cerrar menú", ste = "Abrir menú", ite = "Cerrar submenú:", lte = "Menú principal", ote = "Abrir búsqueda en menú", ute = "Abrir submenú:", _te = "Búsqueda en menú", dte = "No se encontraron entradas de menú", cte = "Al menú principal", fte = {
  _A_MENU_2_BREADCRUMB_: nte,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: rte,
  _A_MENU_2_BTN_CLOSE_: ate,
  _A_MENU_2_BTN_OPEN_: ste,
  _A_MENU_2_CLOSE_SUBMENU_: ite,
  _A_MENU_2_MAIN_MENU_: lte,
  _A_MENU_2_OPEN_SEARCH_: ote,
  _A_MENU_2_OPEN_SUBMENU_: ute,
  _A_MENU_2_SEARCH_: _te,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} entradas de menú encontradas",
  _A_MENU_2_SEARCH_NONE_FOUND_: dte,
  _A_MENU_2_TO_MAIN_MENU_: cte
}, hte = "Breadcrumb", Ate = "Afficher les liens cachés", Ete = "Fermer le menu", pte = "Ouvrir le menu", Tte = "Fermer le sous-menu :", Ste = "Menu principal", mte = "Ouvrir la recherche dans le menu", Lte = "Ouvrir le sous-menu :", bte = "Recherche dans le menu", vte = "Aucune entrée de menu trouvée", Ite = "Au menu principal", gte = {
  _A_MENU_2_BREADCRUMB_: hte,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: Ate,
  _A_MENU_2_BTN_CLOSE_: Ete,
  _A_MENU_2_BTN_OPEN_: pte,
  _A_MENU_2_CLOSE_SUBMENU_: Tte,
  _A_MENU_2_MAIN_MENU_: Ste,
  _A_MENU_2_OPEN_SEARCH_: mte,
  _A_MENU_2_OPEN_SUBMENU_: Lte,
  _A_MENU_2_SEARCH_: bte,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} entrées de menu trouvées",
  _A_MENU_2_SEARCH_NONE_FOUND_: vte,
  _A_MENU_2_TO_MAIN_MENU_: Ite
}, yte = "_A_MENU_2_BREADCRUMB_", Rte = "_A_MENU_2_BREADCRUMB_SHOW_BTN_", Ote = "Zatvaranje izbornika", Cte = "Otvaranje izbornika", Nte = "Glavni izbornik", Dte = "Zatvaranje podizbornika", Bte = "Otvaranje pretraživanja", wte = "Otvaranje podizbornika:", Pte = "Pretraživanje izbornika", Fte = "Nisu pronađeni rezultati pretraživanja", xte = "Natrag na glavni izbornik", Mte = {
  _A_MENU_2_BREADCRUMB_: yte,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: Rte,
  _A_MENU_2_BTN_CLOSE_: Ote,
  _A_MENU_2_BTN_OPEN_: Cte,
  _A_MENU_2_MAIN_MENU_: Nte,
  _A_MENU_2_CLOSE_SUBMENU_: Dte,
  _A_MENU_2_OPEN_SEARCH_: Bte,
  _A_MENU_2_OPEN_SUBMENU_: wte,
  _A_MENU_2_SEARCH_: Pte,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "Broj pronađenih rezultata: {{ count }}",
  _A_MENU_2_SEARCH_NONE_FOUND_: Fte,
  _A_MENU_2_TO_MAIN_MENU_: xte
}, $te = "Breadcrumb", qte = "Mostra link nascosti", kte = "Chiudi menu", Ute = "Apri menu", Hte = "Chiudi sottomenu:", Vte = "Menu principale", Wte = "Apri ricerca nel menu", Gte = "Apri sottomenu:", Kte = "Ricerca nel menu", jte = "Nessuna voce di menu trovata", zte = "Al menu principale", Yte = {
  _A_MENU_2_BREADCRUMB_: $te,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: qte,
  _A_MENU_2_BTN_CLOSE_: kte,
  _A_MENU_2_BTN_OPEN_: Ute,
  _A_MENU_2_CLOSE_SUBMENU_: Hte,
  _A_MENU_2_MAIN_MENU_: Vte,
  _A_MENU_2_OPEN_SEARCH_: Wte,
  _A_MENU_2_OPEN_SUBMENU_: Gte,
  _A_MENU_2_SEARCH_: Kte,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} voci di menu trovate",
  _A_MENU_2_SEARCH_NONE_FOUND_: jte,
  _A_MENU_2_TO_MAIN_MENU_: zte
}, Xte = "Breadcrumb", Zte = "Скрытые ссылки", Jte = "Закрыть меню", Qte = "Открыть меню", ene = "Главное меню", tne = "Закрыть подменю:", nne = "Открыть поиск в меню", rne = "Открыть подменю:", ane = "Поиск в меню", sne = "Пункты меню не найдены", ine = "В главное меню", lne = {
  _A_MENU_2_BREADCRUMB_: Xte,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: Zte,
  _A_MENU_2_BTN_CLOSE_: Jte,
  _A_MENU_2_BTN_OPEN_: Qte,
  _A_MENU_2_MAIN_MENU_: ene,
  _A_MENU_2_CLOSE_SUBMENU_: tne,
  _A_MENU_2_OPEN_SEARCH_: nne,
  _A_MENU_2_OPEN_SUBMENU_: rne,
  _A_MENU_2_SEARCH_: ane,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "Найдены пункты меню: {{ count }}",
  _A_MENU_2_SEARCH_NONE_FOUND_: sne,
  _A_MENU_2_TO_MAIN_MENU_: ine
}, Xa = {
  ar: Dee,
  de: Vee,
  en: tte,
  es: fte,
  fr: gte,
  hr: Mte,
  it: Yte,
  ru: lne
}, one = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", une = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", _ne = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: one,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: une
}, dne = "Nach oben scrollen", cne = "Nach unten scrollen", fne = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: dne,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: cne
}, hne = "Scroll top", Ane = "Scroll down", Ene = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: hne,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Ane
}, pne = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Tne = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Sne = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: pne,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Tne
}, mne = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Lne = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", bne = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: mne,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Lne
}, vne = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Ine = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", gne = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: vne,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Ine
}, yne = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Rne = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", One = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: yne,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Rne
}, Cne = "Прокрутить наверх", Nne = "Прокрутить вниз", Dne = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Cne,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Nne
}, Za = {
  ar: _ne,
  de: fne,
  en: Ene,
  es: Sne,
  fr: bne,
  hr: gne,
  it: One,
  ru: Dne
}, Bne = "Bytes", wne = "KB", Pne = "MB", Fne = "GB", xne = "TB", Mne = "PB", $ne = "EB", qne = "ZB", kne = "YB", Une = {
  _A_FILE_SIZE_B_: Bne,
  _A_FILE_SIZE_KB_: wne,
  _A_FILE_SIZE_MB_: Pne,
  _A_FILE_SIZE_GB_: Fne,
  _A_FILE_SIZE_TB_: xne,
  _A_FILE_SIZE_PB_: Mne,
  _A_FILE_SIZE_EB_: $ne,
  _A_FILE_SIZE_ZB_: qne,
  _A_FILE_SIZE_YB_: kne
}, Hne = "Bytes", Vne = "KB", Wne = "MB", Gne = "GB", Kne = "TB", jne = "PB", zne = "EB", Yne = "ZB", Xne = "YB", Zne = {
  _A_FILE_SIZE_B_: Hne,
  _A_FILE_SIZE_KB_: Vne,
  _A_FILE_SIZE_MB_: Wne,
  _A_FILE_SIZE_GB_: Gne,
  _A_FILE_SIZE_TB_: Kne,
  _A_FILE_SIZE_PB_: jne,
  _A_FILE_SIZE_EB_: zne,
  _A_FILE_SIZE_ZB_: Yne,
  _A_FILE_SIZE_YB_: Xne
}, Jne = "Bytes", Qne = "KB", ere = "MB", tre = "GB", nre = "TB", rre = "PB", are = "EB", sre = "ZB", ire = "YB", lre = {
  _A_FILE_SIZE_B_: Jne,
  _A_FILE_SIZE_KB_: Qne,
  _A_FILE_SIZE_MB_: ere,
  _A_FILE_SIZE_GB_: tre,
  _A_FILE_SIZE_TB_: nre,
  _A_FILE_SIZE_PB_: rre,
  _A_FILE_SIZE_EB_: are,
  _A_FILE_SIZE_ZB_: sre,
  _A_FILE_SIZE_YB_: ire
}, ore = "Bytes", ure = "KB", _re = "MB", dre = "GB", cre = "TB", fre = "PB", hre = "EB", Are = "ZB", Ere = "YB", pre = {
  _A_FILE_SIZE_B_: ore,
  _A_FILE_SIZE_KB_: ure,
  _A_FILE_SIZE_MB_: _re,
  _A_FILE_SIZE_GB_: dre,
  _A_FILE_SIZE_TB_: cre,
  _A_FILE_SIZE_PB_: fre,
  _A_FILE_SIZE_EB_: hre,
  _A_FILE_SIZE_ZB_: Are,
  _A_FILE_SIZE_YB_: Ere
}, Tre = "Bytes", Sre = "KB", mre = "MB", Lre = "GB", bre = "TB", vre = "PB", Ire = "EB", gre = "ZB", yre = "YB", Rre = {
  _A_FILE_SIZE_B_: Tre,
  _A_FILE_SIZE_KB_: Sre,
  _A_FILE_SIZE_MB_: mre,
  _A_FILE_SIZE_GB_: Lre,
  _A_FILE_SIZE_TB_: bre,
  _A_FILE_SIZE_PB_: vre,
  _A_FILE_SIZE_EB_: Ire,
  _A_FILE_SIZE_ZB_: gre,
  _A_FILE_SIZE_YB_: yre
}, Ore = "B", Cre = "KB", Nre = "MB", Dre = "GB", Bre = "TB", wre = "PB", Pre = "EB", Fre = "ZB", xre = "YB", Mre = {
  _A_FILE_SIZE_B_: Ore,
  _A_FILE_SIZE_KB_: Cre,
  _A_FILE_SIZE_MB_: Nre,
  _A_FILE_SIZE_GB_: Dre,
  _A_FILE_SIZE_TB_: Bre,
  _A_FILE_SIZE_PB_: wre,
  _A_FILE_SIZE_EB_: Pre,
  _A_FILE_SIZE_ZB_: Fre,
  _A_FILE_SIZE_YB_: xre
}, $re = "Bytes", qre = "KB", kre = "MB", Ure = "GB", Hre = "TB", Vre = "PB", Wre = "EB", Gre = "ZB", Kre = "YB", jre = {
  _A_FILE_SIZE_B_: $re,
  _A_FILE_SIZE_KB_: qre,
  _A_FILE_SIZE_MB_: kre,
  _A_FILE_SIZE_GB_: Ure,
  _A_FILE_SIZE_TB_: Hre,
  _A_FILE_SIZE_PB_: Vre,
  _A_FILE_SIZE_EB_: Wre,
  _A_FILE_SIZE_ZB_: Gre,
  _A_FILE_SIZE_YB_: Kre
}, zre = "Б", Yre = "КБ", Xre = "МБ", Zre = "ГБ", Jre = "ТБ", Qre = "ПБ", eae = "ЭБ", tae = "ЗБ", nae = "ИБ", rae = {
  _A_FILE_SIZE_B_: zre,
  _A_FILE_SIZE_KB_: Yre,
  _A_FILE_SIZE_MB_: Xre,
  _A_FILE_SIZE_GB_: Zre,
  _A_FILE_SIZE_TB_: Jre,
  _A_FILE_SIZE_PB_: Qre,
  _A_FILE_SIZE_EB_: eae,
  _A_FILE_SIZE_ZB_: tae,
  _A_FILE_SIZE_YB_: nae
}, Ja = {
  ar: Une,
  de: Zne,
  en: lre,
  es: pre,
  fr: Rre,
  hr: Mre,
  it: jre,
  ru: rae
}, aae = "[ALOHA]", sae = "[ALOHA]", iae = "[ALOHA]", lae = "التنقل بين الصفحات", oae = "[ALOHA]", uae = "[ALOHA]", _ae = {
  _A_COUNT_PER_PAGE_: aae,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: sae,
  _A_PAGINATION_LAST_PAGE_: iae,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ allPages }}ل {{ currentPage }}",
  _A_PAGINATION_NAVIGATION_: lae,
  _A_PAGINATION_NEXT_PAGE_: oae,
  _A_PAGINATION_PREVIOUS_PAGE_: uae,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, dae = "Pro Seite:", cae = "Zur ersten Seite", fae = "Zur letzten Seite", hae = "Paginierungsnavigation", Aae = "Zur nächsten Seite", Eae = "Zur vorherigen Seite", pae = {
  _A_COUNT_PER_PAGE_: dae,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Zeilen pro Seite: {{ count }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} von {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: cae,
  _A_PAGINATION_LAST_PAGE_: fae,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} von {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: hae,
  _A_PAGINATION_NEXT_PAGE_: Aae,
  _A_PAGINATION_PREVIOUS_PAGE_: Eae,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "Zur Seite Nummer {{ page }}"
}, Tae = "Per page:", Sae = "To first page", mae = "To last page", Lae = "Pagination navigation", bae = "To next page", vae = "To previous page", Iae = {
  _A_COUNT_PER_PAGE_: Tae,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Items per page:",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} to {{ current }} of {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: Sae,
  _A_PAGINATION_LAST_PAGE_: mae,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} of {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: Lae,
  _A_PAGINATION_NEXT_PAGE_: bae,
  _A_PAGINATION_PREVIOUS_PAGE_: vae,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "To page {{ page }}"
}, gae = "[ALOHA]", yae = "[ALOHA]", Rae = "[ALOHA]", Oae = "Navegación de paginación", Cae = "[ALOHA]", Nae = "[ALOHA]", Dae = {
  _A_COUNT_PER_PAGE_: gae,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: yae,
  _A_PAGINATION_LAST_PAGE_: Rae,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} de {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: Oae,
  _A_PAGINATION_NEXT_PAGE_: Cae,
  _A_PAGINATION_PREVIOUS_PAGE_: Nae,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, Bae = "[ALOHA]", wae = "[ALOHA]", Pae = "[ALOHA]", Fae = "Navigation dans la pagination", xae = "[ALOHA]", Mae = "[ALOHA]", $ae = {
  _A_COUNT_PER_PAGE_: Bae,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: wae,
  _A_PAGINATION_LAST_PAGE_: Pae,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} de {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: Fae,
  _A_PAGINATION_NEXT_PAGE_: xae,
  _A_PAGINATION_PREVIOUS_PAGE_: Mae,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, qae = "Po stranici:", kae = "[ALOHA]", Uae = "[ALOHA]", Hae = "Navigacija po stranicama", Vae = "[ALOHA]", Wae = "[ALOHA]", Gae = {
  _A_COUNT_PER_PAGE_: qae,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Broj redaka po stranici: {{ count }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} od {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: kae,
  _A_PAGINATION_LAST_PAGE_: Uae,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} iz {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: Hae,
  _A_PAGINATION_NEXT_PAGE_: Vae,
  _A_PAGINATION_PREVIOUS_PAGE_: Wae,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, Kae = "[ALOHA]", jae = "[ALOHA]", zae = "[ALOHA]", Yae = "Navigazione dell'impaginazione", Xae = "[ALOHA]", Zae = "[ALOHA]", Jae = {
  _A_COUNT_PER_PAGE_: Kae,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: jae,
  _A_PAGINATION_LAST_PAGE_: zae,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} Di {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: Yae,
  _A_PAGINATION_NEXT_PAGE_: Xae,
  _A_PAGINATION_PREVIOUS_PAGE_: Zae,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, Qae = "На странице:", ese = "К первой странице", tse = "К последней странице", nse = "Навигация по страницам", rse = "К следующей странице", ase = "К предыдущей странице", sse = {
  _A_COUNT_PER_PAGE_: Qae,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Строк на странице: {{ cont }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} из {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: ese,
  _A_PAGINATION_LAST_PAGE_: tse,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} из {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: nse,
  _A_PAGINATION_NEXT_PAGE_: rse,
  _A_PAGINATION_PREVIOUS_PAGE_: ase,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "К странице номер {{ page }}"
}, Qa = {
  ar: _ae,
  de: pae,
  en: Iae,
  es: Dae,
  fr: $ae,
  hr: Gae,
  it: Jae,
  ru: sse
}, ise = "القيمة الحالية", lse = "تجاهل جميع التغييرات", ose = "تنسيق الإدخال", use = "إدخال", _se = "إعادة تعيين الإدخال إلى القيمة الحالية", dse = {
  _A_JSON_CURRENT_VALUE_: ise,
  _A_JSON_DISCARD_ALL_CHANGES_: lse,
  "_A_JSON_ERROR_HTML_{{error}}_": "لا يمكن تحويل الإدخال إلى كائن JSON. يرجى التحقق من الإدخال الخاص بك:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: ose,
  _A_JSON_INPUT_: use,
  _A_JSON_RESET_INPUT_: _se
}, cse = "Aktueller Wert", fse = "Alle Änderungen verwerfen", hse = "Eingabe formatieren", Ase = "Eingabe", Ese = "Eingabe aktuellen Wert zurücksetzen", pse = {
  _A_JSON_CURRENT_VALUE_: cse,
  _A_JSON_DISCARD_ALL_CHANGES_: fse,
  "_A_JSON_ERROR_HTML_{{error}}_": "Die Eingabe kann nicht in ein JSON-Objekt konvertiert werden. Bitte prüfen Sie Ihre Eingabe:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: hse,
  _A_JSON_INPUT_: Ase,
  _A_JSON_RESET_INPUT_: Ese
}, Tse = "Current Value", Sse = "Discard All Changes", mse = "Format Input", Lse = "Input", bse = "Reset Input to Current Value", vse = {
  _A_JSON_CURRENT_VALUE_: Tse,
  _A_JSON_DISCARD_ALL_CHANGES_: Sse,
  "_A_JSON_ERROR_HTML_{{error}}_": "Input cannot be converted into a JSON object. Please check your input:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: mse,
  _A_JSON_INPUT_: Lse,
  _A_JSON_RESET_INPUT_: bse
}, Ise = "Valor actual", gse = "Descartar todos los cambios", yse = "Formatear entrada", Rse = "Entrada", Ose = "Restablecer entrada al valor actual", Cse = {
  _A_JSON_CURRENT_VALUE_: Ise,
  _A_JSON_DISCARD_ALL_CHANGES_: gse,
  "_A_JSON_ERROR_HTML_{{error}}_": "No se puede convertir la entrada en un objeto JSON. Por favor, revise su entrada:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: yse,
  _A_JSON_INPUT_: Rse,
  _A_JSON_RESET_INPUT_: Ose
}, Nse = "Valeur actuelle", Dse = "Annuler toutes les modifications", Bse = "Formater l'entrée", wse = "Entrée", Pse = "Réinitialiser l'entrée à la valeur actuelle", Fse = {
  _A_JSON_CURRENT_VALUE_: Nse,
  _A_JSON_DISCARD_ALL_CHANGES_: Dse,
  "_A_JSON_ERROR_HTML_{{error}}_": "L'entrée ne peut pas être convertie en objet JSON. Veuillez vérifier votre entrée:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: Bse,
  _A_JSON_INPUT_: wse,
  _A_JSON_RESET_INPUT_: Pse
}, xse = "Trenutna vrijednost", Mse = "Odbaci sve promjene", $se = "Formatiraj unos", qse = "Unos", kse = "Poništi unos na trenutnu vrijednost", Use = {
  _A_JSON_CURRENT_VALUE_: xse,
  _A_JSON_DISCARD_ALL_CHANGES_: Mse,
  "_A_JSON_ERROR_HTML_{{error}}_": "Unos se ne može pretvoriti u JSON objekt. Molimo provjerite svoj unos:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: $se,
  _A_JSON_INPUT_: qse,
  _A_JSON_RESET_INPUT_: kse
}, Hse = "Valore attuale", Vse = "Annulla tutte le modifiche", Wse = "Formatta input", Gse = "Input", Kse = "Reimposta input al valore corrente", jse = {
  _A_JSON_CURRENT_VALUE_: Hse,
  _A_JSON_DISCARD_ALL_CHANGES_: Vse,
  "_A_JSON_ERROR_HTML_{{error}}_": "L'input non può essere convertito in un oggetto JSON. Si prega di controllare l'input:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: Wse,
  _A_JSON_INPUT_: Gse,
  _A_JSON_RESET_INPUT_: Kse
}, zse = "Текущее значение", Yse = "Отменить все изменения", Xse = "Форматировать ввод", Zse = "Ввод", Jse = "Сбросить ввод до текущего значения", Qse = {
  _A_JSON_CURRENT_VALUE_: zse,
  _A_JSON_DISCARD_ALL_CHANGES_: Yse,
  "_A_JSON_ERROR_HTML_{{error}}_": "Ввод не может быть преобразован в объект JSON. Пожалуйста, проверьте ваш ввод:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: Xse,
  _A_JSON_INPUT_: Zse,
  _A_JSON_RESET_INPUT_: Jse
}, es = {
  ar: dse,
  de: pse,
  en: vse,
  es: Cse,
  fr: Fse,
  hr: Use,
  it: jse,
  ru: Qse
}, eie = "غير محدد", tie = "لا", nie = "نعم", rie = {
  _A_SWITCH_DEFAULT_LABEL_: eie,
  _A_SWITCH_FALSE_LABEL_: tie,
  _A_SWITCH_TRUE_LABEL_: nie
}, aie = "Nicht ausgewählt", sie = "Nein", iie = "Ja", lie = {
  _A_SWITCH_DEFAULT_LABEL_: aie,
  _A_SWITCH_FALSE_LABEL_: sie,
  _A_SWITCH_TRUE_LABEL_: iie
}, oie = "Not selected", uie = "No", _ie = "Yes", die = {
  _A_SWITCH_DEFAULT_LABEL_: oie,
  _A_SWITCH_FALSE_LABEL_: uie,
  _A_SWITCH_TRUE_LABEL_: _ie
}, cie = "No seleccionado", fie = "No", hie = "Sí", Aie = {
  _A_SWITCH_DEFAULT_LABEL_: cie,
  _A_SWITCH_FALSE_LABEL_: fie,
  _A_SWITCH_TRUE_LABEL_: hie
}, Eie = "Non sélectionné", pie = "Non", Tie = "Oui", Sie = {
  _A_SWITCH_DEFAULT_LABEL_: Eie,
  _A_SWITCH_FALSE_LABEL_: pie,
  _A_SWITCH_TRUE_LABEL_: Tie
}, mie = "Nije odabrano", Lie = "Ne", bie = "Da", vie = {
  _A_SWITCH_DEFAULT_LABEL_: mie,
  _A_SWITCH_FALSE_LABEL_: Lie,
  _A_SWITCH_TRUE_LABEL_: bie
}, Iie = "Non selezionato", gie = "No", yie = "Sì", Rie = {
  _A_SWITCH_DEFAULT_LABEL_: Iie,
  _A_SWITCH_FALSE_LABEL_: gie,
  _A_SWITCH_TRUE_LABEL_: yie
}, Oie = "Не выбрано", Cie = "Нет", Nie = "Да", Die = {
  _A_SWITCH_DEFAULT_LABEL_: Oie,
  _A_SWITCH_FALSE_LABEL_: Cie,
  _A_SWITCH_TRUE_LABEL_: Nie
}, ts = {
  ar: rie,
  de: lie,
  en: die,
  es: Aie,
  fr: Sie,
  hr: vie,
  it: Rie,
  ru: Die
}, Bie = "تحميل", wie = {
  _A_SPINNER_LOADING_: Bie
}, Pie = "Wird geladen", Fie = {
  _A_SPINNER_LOADING_: Pie
}, xie = "Loading", Mie = {
  _A_SPINNER_LOADING_: xie
}, $ie = "Cargando", qie = {
  _A_SPINNER_LOADING_: $ie
}, kie = "Chargement", Uie = {
  _A_SPINNER_LOADING_: kie
}, Hie = "Učitavam", Vie = {
  _A_SPINNER_LOADING_: Hie
}, Wie = "Caricamento", Gie = {
  _A_SPINNER_LOADING_: Wie
}, Kie = "Загрузка", jie = {
  _A_SPINNER_LOADING_: Kie
}, ns = {
  ar: wie,
  de: Fie,
  en: Mie,
  es: qie,
  fr: Uie,
  hr: Vie,
  it: Gie,
  ru: jie
}, zie = "تحميل", Yie = {
  _A_LOADING_LOADING_: zie
}, Xie = "Wird geladen", Zie = {
  _A_LOADING_LOADING_: Xie
}, Jie = "Loading", Qie = {
  _A_LOADING_LOADING_: Jie
}, ele = "Cargando", tle = {
  _A_LOADING_LOADING_: ele
}, nle = "Chargement", rle = {
  _A_LOADING_LOADING_: nle
}, ale = "Učitavam", sle = {
  _A_LOADING_LOADING_: ale
}, ile = "Caricamento", lle = {
  _A_LOADING_LOADING_: ile
}, ole = "Загрузка", ule = {
  _A_LOADING_LOADING_: ole
}, rs = {
  ar: Yie,
  de: Zie,
  en: Qie,
  es: tle,
  fr: rle,
  hr: sle,
  it: lle,
  ru: ule
}, _le = "تحميل", dle = {
  _A_CLOAK_LOADING_: _le
}, cle = "Wird geladen", fle = {
  _A_CLOAK_LOADING_: cle
}, hle = "Loading", Ale = {
  _A_CLOAK_LOADING_: hle
}, Ele = "Cargando", ple = {
  _A_CLOAK_LOADING_: Ele
}, Tle = "Chargement", Sle = {
  _A_CLOAK_LOADING_: Tle
}, mle = "Učitavam", Lle = {
  _A_CLOAK_LOADING_: mle
}, ble = "Caricamento", vle = {
  _A_CLOAK_LOADING_: ble
}, Ile = "Загрузка", gle = {
  _A_CLOAK_LOADING_: Ile
}, as = {
  ar: dle,
  de: fle,
  en: Ale,
  es: ple,
  fr: Sle,
  hr: Lle,
  it: vle,
  ru: gle
}, yle = "الحقول المميزة بعلامة النجمة * مطلوبة.", Rle = {
  _A_REQUIRED_TEXT_: yle
}, Ole = "Die mit *Sternchen versehenen Felder sind Pflichtfelder.", Cle = {
  _A_REQUIRED_TEXT_: Ole
}, Nle = "Fields marked with an asterisk * are required.", Dle = {
  _A_REQUIRED_TEXT_: Nle
}, Ble = "Los campos marcados con un asterisco * son obligatorios.", wle = {
  _A_REQUIRED_TEXT_: Ble
}, Ple = "Les champs marqués d'un astérisque * sont obligatoires.", Fle = {
  _A_REQUIRED_TEXT_: Ple
}, xle = "Polja označena zvjezdicom * su obavezna.", Mle = {
  _A_REQUIRED_TEXT_: xle
}, $le = "I campi contrassegnati con un asterisco * sono obbligatori.", qle = {
  _A_REQUIRED_TEXT_: $le
}, kle = "Поля, отмеченные звездочкой *, являются обязательными.", Ule = {
  _A_REQUIRED_TEXT_: kle
}, ss = {
  ar: Rle,
  de: Cle,
  en: Dle,
  es: wle,
  fr: Fle,
  hr: Mle,
  it: qle,
  ru: Ule
}, Hle = "تقليل القيمة", Vle = "زيادة القيمة", Wle = {
  _A_INPUT_NUMBER_BTN_DECREASE_: Hle,
  _A_INPUT_NUMBER_BTN_INCREASE_: Vle
}, Gle = "Wert verringern", Kle = "Wert erhöhen", jle = {
  _A_INPUT_NUMBER_BTN_DECREASE_: Gle,
  _A_INPUT_NUMBER_BTN_INCREASE_: Kle
}, zle = "Decrease value", Yle = "Increase value", Xle = {
  _A_INPUT_NUMBER_BTN_DECREASE_: zle,
  _A_INPUT_NUMBER_BTN_INCREASE_: Yle
}, Zle = "Disminuir valor", Jle = "Aumentar valor", Qle = {
  _A_INPUT_NUMBER_BTN_DECREASE_: Zle,
  _A_INPUT_NUMBER_BTN_INCREASE_: Jle
}, eoe = "Diminuer la valeur", toe = "Augmenter la valeur", noe = {
  _A_INPUT_NUMBER_BTN_DECREASE_: eoe,
  _A_INPUT_NUMBER_BTN_INCREASE_: toe
}, roe = "Smanji vrijednost", aoe = "Povećaj vrijednost", soe = {
  _A_INPUT_NUMBER_BTN_DECREASE_: roe,
  _A_INPUT_NUMBER_BTN_INCREASE_: aoe
}, ioe = "Diminuisci valore", loe = "Aumenta valore", ooe = {
  _A_INPUT_NUMBER_BTN_DECREASE_: ioe,
  _A_INPUT_NUMBER_BTN_INCREASE_: loe
}, uoe = "Уменьшить значение", _oe = "Увеличить значение", doe = {
  _A_INPUT_NUMBER_BTN_DECREASE_: uoe,
  _A_INPUT_NUMBER_BTN_INCREASE_: _oe
}, is = {
  ar: Wle,
  de: jle,
  en: Xle,
  es: Qle,
  fr: noe,
  hr: soe,
  it: ooe,
  ru: doe
}, coe = "تقليل القيمة", foe = "زيادة القيمة", hoe = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: coe,
  _A_INPUT_CURRENCY_BTN_INCREASE_: foe
}, Aoe = "Wert verringern", Eoe = "Wert erhöhen", poe = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: Aoe,
  _A_INPUT_CURRENCY_BTN_INCREASE_: Eoe
}, Toe = "Decrease value", Soe = "Increase value", moe = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: Toe,
  _A_INPUT_CURRENCY_BTN_INCREASE_: Soe
}, Loe = "Disminuir valor", boe = "Aumentar valor", voe = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: Loe,
  _A_INPUT_CURRENCY_BTN_INCREASE_: boe
}, Ioe = "Diminuer la valeur", goe = "Augmenter la valeur", yoe = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: Ioe,
  _A_INPUT_CURRENCY_BTN_INCREASE_: goe
}, Roe = "Smanji vrijednost", Ooe = "Povećaj vrijednost", Coe = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: Roe,
  _A_INPUT_CURRENCY_BTN_INCREASE_: Ooe
}, Noe = "Diminuisci valore", Doe = "Aumenta valore", Boe = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: Noe,
  _A_INPUT_CURRENCY_BTN_INCREASE_: Doe
}, woe = "Уменьшить значение", Poe = "Увеличить значение", Foe = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: woe,
  _A_INPUT_CURRENCY_BTN_INCREASE_: Poe
}, ls = {
  ar: hoe,
  de: poe,
  en: moe,
  es: voe,
  fr: yoe,
  hr: Coe,
  it: Boe,
  ru: Foe
}, xoe = "عرض كلمة المرور", Moe = "إخفاء كلمة المرور", $oe = {
  _A_INPUT_SHOW_PASSWORD_: xoe,
  _A_INPUT_HIDE_PASSWORD_: Moe
}, qoe = "Dynamische Parameter werden in Routen verwendet, um Daten innerhalb des Pfads zu übergeben. Sie werden durch einen Doppelpunkt <code>:</code> vor dem Parameternamen gekennzeichnet, zum Beispiel: <code>/user/:id</code>. Beim Navigieren wird dieser Parameter durch einen bestimmten Wert ersetzt, z. B.: <code>/user/123</code>.", koe = '<span lang="en">URL</span>-Parameter ermöglichen das Übertragen zusätzlicher Informationen in der Anfrage. Sie werden nach dem <code>?</code>-Zeichen in der Adressleiste hinzugefügt und im Format "Schlüssel=Wert" geschrieben. Zum Beispiel: <code>?limit=10&sort=asc</code>.', Uoe = "Die Adresse bestimmt, wohin der Link führt. Sie kann statisch sein (z. B. <code>/home</code>) oder dynamische Parameter enthalten (z. B. <code>/user/:id</code>). Wählen Sie die Adresse für die Navigation.", Hoe = "Legt fest, wo der Link geöffnet wird. Verfügbare Optionen: im selben Fenster (<code>_self</code>), in einem neuen Fenster oder Tab (<code>_blank</code>), im übergeordneten Frame (<code>_parent</code>) oder im äußersten Frame (<code>_top</code>).", Voe = "Dynamische Parameter", Woe = '<span lang="en">URL</span>-Parameter', Goe = "Adresse auswählen", Koe = '<span lang="en">target</span>-Attribut', joe = 'In einem neuen Tab öffnen <strong lang="en">_blank</strong>', zoe = 'Im übergeordneten Frame öffnen <strong lang="en">_parent</strong>', Yoe = 'Im selben Fenster öffnen <strong lang="en">_self</strong>', Xoe = 'Im äußersten Frame öffnen <strong lang="en">_top</strong>', Zoe = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: qoe,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: koe,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: Uoe,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: Hoe,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: Voe,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: Woe,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: Goe,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: Koe,
  _A_TARGET_BLANK_: joe,
  _A_TARGET_PARENT_: zoe,
  _A_TARGET_SELF_: Yoe,
  _A_TARGET_TOP_: Xoe
}, Joe = "Dynamic parameters are used in routes to pass data within the path. They are denoted by a colon <code>:</code> before the parameter name, for example: <code>/user/:id</code>. When navigating, this parameter is replaced with a specific value, such as: <code>/user/123</code>.", Qoe = '<span lang="en">URL</span> parameters allow passing additional information in the request. They are added after the <code>?</code> symbol in the address bar and follow the format "key=value". For example: <code>?limit=10&sort=asc</code>.', eue = "The address determines where the link will navigate. It can be static (e.g., <code>/home</code>) or contain dynamic parameters (e.g., <code>/user/:id</code>). Select the address for navigation.", tue = "Defines where the link will open. Available options: in the same window (<code>_self</code>), in a new window or tab (<code>_blank</code>), in the parent frame (<code>_parent</code>), or in the outermost frame (<code>_top</code>).", nue = "Dynamic parameters", rue = '<span lang="en">URL</span> parameters', aue = "Select address", sue = '<span lang="en">target</span> attribute', iue = 'Open in a new tab <strong lang="en">_blank</strong>', lue = 'Open in the parent frame <strong lang="en">_parent</strong>', oue = 'Open in the same window <strong lang="en">_self</strong>', uue = 'Open in the outermost frame <strong lang="en">_top</strong>', _ue = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: Joe,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: Qoe,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: eue,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: tue,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: nue,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: rue,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: aue,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: sue,
  _A_TARGET_BLANK_: iue,
  _A_TARGET_PARENT_: lue,
  _A_TARGET_SELF_: oue,
  _A_TARGET_TOP_: uue
}, due = "Los parámetros dinámicos se utilizan en las rutas para transmitir datos dentro de la ruta. Se denotan con dos puntos <code>:</code> antes del nombre del parámetro, por ejemplo: <code>/user/:id</code>. Al navegar, este parámetro se reemplaza con un valor específico, como: <code>/user/123</code>.", cue = 'Los parámetros de <span lang="en">URL</span> permiten enviar información adicional en la solicitud. Se agregan después del símbolo <code>?</code> en la barra de direcciones y tienen el formato "clave=valor". Por ejemplo: <code>?limit=10&sort=asc</code>.', fue = "La dirección determina a dónde llevará el enlace. Puede ser estática (por ejemplo, <code>/home</code>) o contener parámetros dinámicos (por ejemplo, <code>/user/:id</code>). Seleccione la dirección de navegación.", hue = "Define dónde se abrirá el enlace. Opciones disponibles: en la misma ventana (<code>_self</code>), en una nueva ventana o pestaña (<code>_blank</code>), en el marco padre (<code>_parent</code>) o en el marco superior (<code>_top</code>).", Aue = "Parámetros dinámicos", Eue = 'Parámetros de <span lang="en">URL</span>', pue = "Seleccionar dirección", Tue = 'Atributo <span lang="en">target</span>', Sue = 'Abrir en una nueva pestaña <strong lang="en">_blank</strong>', mue = 'Abrir en el marco padre <strong lang="en">_parent</strong>', Lue = 'Abrir en la misma ventana <strong lang="en">_self</strong>', bue = 'Abrir en el marco superior <strong lang="en">_top</strong>', vue = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: due,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: cue,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: fue,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: hue,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: Aue,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: Eue,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: pue,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: Tue,
  _A_TARGET_BLANK_: Sue,
  _A_TARGET_PARENT_: mue,
  _A_TARGET_SELF_: Lue,
  _A_TARGET_TOP_: bue
}, Iue = "Les paramètres dynamiques sont utilisés dans les routes pour transmettre des données dans le chemin. Ils sont indiqués par un deux-points <code>:</code> avant le nom du paramètre, par exemple : <code>/user/:id</code>. Lors de la navigation, ce paramètre est remplacé par une valeur spécifique, comme : <code>/user/123</code>.", gue = `Les paramètres <span lang="en">URL</span> permettent de transmettre des informations supplémentaires dans la requête. Ils sont ajoutés après le symbole <code>?</code> dans la barre d'adresse et sont formatés en "clé=valeur". Par exemple : <code>?limit=10&sort=asc</code>.`, yue = "L'adresse détermine où le lien dirigera. Elle peut être statique (ex. <code>/home</code>) ou contenir des paramètres dynamiques (ex. <code>/user/:id</code>). Sélectionnez l'adresse de navigation.", Rue = "Définit où le lien s'ouvrira. Options disponibles : dans la même fenêtre (<code>_self</code>), dans une nouvelle fenêtre ou un nouvel onglet (<code>_blank</code>), dans le cadre parent (<code>_parent</code>) ou dans le cadre principal (<code>_top</code>).", Oue = "Paramètres dynamiques", Cue = 'Paramètres <span lang="en">URL</span>', Nue = "Choisir une adresse", Due = 'Attribut <span lang="en">target</span>', Bue = 'Ouvrir dans un nouvel onglet <strong lang="en">_blank</strong>', wue = 'Ouvrir dans le cadre parent <strong lang="en">_parent</strong>', Pue = 'Ouvrir dans la même fenêtre <strong lang="en">_self</strong>', Fue = 'Ouvrir dans le cadre principal <strong lang="en">_top</strong>', xue = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: Iue,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: gue,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: yue,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: Rue,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: Oue,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: Cue,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: Nue,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: Due,
  _A_TARGET_BLANK_: Bue,
  _A_TARGET_PARENT_: wue,
  _A_TARGET_SELF_: Pue,
  _A_TARGET_TOP_: Fue
}, Mue = "Dinamički parametri koriste se u rutama za prijenos podataka unutar putanje. Označeni su dvotočkom <code>:</code> ispred naziva parametra, primjer: <code>/user/:id</code>. Prilikom navigacije, ovaj parametar zamjenjuje se specifičnom vrijednošću, primjer: <code>/user/123</code>.", $ue = 'Parametri <span lang="en">URL</span> omogućuju prijenos dodatnih informacija u zahtjevu. Dodaju se nakon simbola <code>?</code> u adresnoj traci i zapisani su u formatu "ključ=vrijednost". Na primjer: <code>?limit=10&sort=asc</code>.', que = "Adresa određuje kamo će veza voditi. Može biti statična (npr. <code>/home</code>) ili sadržavati dinamičke parametre (npr. <code>/user/:id</code>). Odaberite adresu za navigaciju.", kue = "Određuje gdje će se veza otvoriti. Dostupne opcije: u istom prozoru (<code>_self</code>), u novom prozoru ili kartici (<code>_blank</code>), u roditeljskom okviru (<code>_parent</code>) ili u najvišem okviru (<code>_top</code>).", Uue = "Dinamički parametri", Hue = 'Parametri <span lang="en">URL</span>', Vue = "Odaberi adresu", Wue = 'Atribut <span lang="en">target</span>', Gue = 'Otvori u novoj kartici <strong lang="en">_blank</strong>', Kue = 'Otvori u roditeljskom okviru <strong lang="en">_parent</strong>', jue = 'Otvori u istom prozoru <strong lang="en">_self</strong>', zue = 'Otvori u najvišem okviru <strong lang="en">_top</strong>', Yue = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: Mue,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: $ue,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: que,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: kue,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: Uue,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: Hue,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: Vue,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: Wue,
  _A_TARGET_BLANK_: Gue,
  _A_TARGET_PARENT_: Kue,
  _A_TARGET_SELF_: jue,
  _A_TARGET_TOP_: zue
}, Xue = "I parametri dinamici vengono utilizzati nelle rotte per trasmettere dati all'interno del percorso. Sono indicati con due punti <code>:</code> prima del nome del parametro, ad esempio: <code>/user/:id</code>. Durante la navigazione, questo parametro viene sostituito con un valore specifico, ad esempio: <code>/user/123</code>.", Zue = 'I parametri <span lang="en">URL</span> consentono di trasmettere informazioni aggiuntive nella richiesta. Vengono aggiunti dopo il simbolo <code>?</code> nella barra degli indirizzi e sono scritti nel formato "chiave=valore". Ad esempio: <code>?limit=10&sort=asc</code>.', Jue = "L'indirizzo determina dove porterà il link. Può essere statico (ad esempio, <code>/home</code>) o contenere parametri dinamici (ad esempio, <code>/user/:id</code>). Selezionare l'indirizzo per la navigazione.", Que = "Definisce dove si aprirà il link. Opzioni disponibili: nella stessa finestra (<code>_self</code>), in una nuova finestra o scheda (<code>_blank</code>), nel frame padre (<code>_parent</code>) o nel frame superiore (<code>_top</code>).", e_e = "Parametri dinamici", t_e = 'Parametri <span lang="en">URL</span>', n_e = "Seleziona indirizzo", r_e = 'Attributo <span lang="en">target</span>', a_e = 'Apri in una nuova scheda <strong lang="en">_blank</strong>', s_e = 'Apri nel frame padre <strong lang="en">_parent</strong>', i_e = 'Apri nella stessa finestra <strong lang="en">_self</strong>', l_e = 'Apri nel frame superiore <strong lang="en">_top</strong>', o_e = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: Xue,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: Zue,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: Jue,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: Que,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: e_e,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: t_e,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: n_e,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: r_e,
  _A_TARGET_BLANK_: a_e,
  _A_TARGET_PARENT_: s_e,
  _A_TARGET_SELF_: i_e,
  _A_TARGET_TOP_: l_e
}, u_e = "Динамические параметры используются в маршрутах для передачи данных внутри пути. Они обозначаются двоеточием <code>:</code> перед именем параметра, например: <code>/user/:id</code>. При переходе этот параметр заменяется конкретным значением, например: <code>/user/123</code>.", __e = 'Параметры <span lang="en">URL</span> позволяют передавать дополнительную информацию в запросе. Они добавляются после знака <code>?</code> в адресной строке и записываются в формате «ключ=значение». Например: <code>?limit=10&sort=asc</code>.', d_e = "Адрес определяет, куда будет вести ссылка. Он может быть статическим (например, <code>/home</code>) или содержать динамические параметры (например, <code>/user/:id</code>). Выберите адрес, по которому будет происходить навигация.", c_e = "Определяет, где будет открываться ссылка. Доступные варианты: в том же окне (<code>_self</code>), в новом окне или вкладке (<code>_blank</code>), в родительском фрейме (<code>_parent</code>) или во внешнем фрейме (<code>_top</code>).", f_e = "Динамические параметры", h_e = 'Параметры <span lang="en">URL</span>', A_e = "Выберите адрес", E_e = 'Атрибут <span lang="en">target</span>', p_e = 'Открыть в новой вкладке <strong lang="en">_blank</strong>', T_e = 'Открыть в родительском фрейме <strong lang="en">_parent</strong>', S_e = 'Открыть в этом же окне <strong lang="en">_self</strong>', m_e = 'Открыть во внешнем фрейме <strong lang="en">_top</strong>', L_e = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: u_e,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: __e,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: d_e,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: c_e,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: f_e,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: h_e,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: A_e,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: E_e,
  _A_TARGET_BLANK_: p_e,
  _A_TARGET_PARENT_: T_e,
  _A_TARGET_SELF_: S_e,
  _A_TARGET_TOP_: m_e
}, os = {
  ar: $oe,
  de: Zoe,
  en: _ue,
  es: vue,
  fr: xue,
  hr: Yue,
  it: o_e,
  ru: L_e
}, b_e = {
  ...zW,
  ...ja.ar,
  ...$a.ar,
  ...Ga.ar,
  ...xa.ar,
  ...Ka.ar,
  ...za.ar,
  ...qa.ar,
  ...Va.ar,
  ...Ua.ar,
  ...Ha.ar,
  ...ka.ar,
  ...Ya.ar,
  ...Wa.ar,
  ...Ma.ar,
  ...Xa.ar,
  ...Za.ar,
  ...Ja.ar,
  ...Qa.ar,
  ...es.ar,
  ...ts.ar,
  ...ns.ar,
  ...rs.ar,
  ...as.ar,
  ...ss.ar,
  ...is.ar,
  ...ls.ar,
  ...os.ar
}, v_e = {
  ...l2,
  ...ja.de,
  ...$a.de,
  ...Ga.de,
  ...xa.de,
  ...Ka.de,
  ...za.de,
  ...qa.de,
  ...Va.de,
  ...Ua.de,
  ...Ha.de,
  ...ka.de,
  ...Ya.de,
  ...Wa.de,
  ...Ma.de,
  ...Xa.de,
  ...Za.de,
  ...Ja.de,
  ...Qa.de,
  ...es.de,
  ...ts.de,
  ...ns.de,
  ...rs.de,
  ...as.de,
  ...ss.de,
  ...is.de,
  ...ls.de,
  ...os.de
}, I_e = {
  ...m2,
  ...ja.en,
  ...$a.en,
  ...Ga.en,
  ...xa.en,
  ...Ka.en,
  ...za.en,
  ...qa.en,
  ...Va.en,
  ...Ua.en,
  ...Ha.en,
  ...ka.en,
  ...Ya.en,
  ...Wa.en,
  ...Ma.en,
  ...Xa.en,
  ...Za.en,
  ...Ja.en,
  ...Qa.en,
  ...es.en,
  ...ts.en,
  ...ns.en,
  ...rs.en,
  ...as.en,
  ...ss.en,
  ...is.en,
  ...ls.en,
  ...os.en
}, g_e = {
  ...B2,
  ...ja.es,
  ...$a.es,
  ...Ga.es,
  ...xa.es,
  ...Ka.es,
  ...za.es,
  ...qa.es,
  ...Va.es,
  ...Ua.es,
  ...Ha.es,
  ...ka.es,
  ...Ya.es,
  ...Wa.es,
  ...Ma.es,
  ...Xa.es,
  ...Za.es,
  ...Ja.es,
  ...Qa.es,
  ...es.es,
  ...ts.es,
  ...ns.es,
  ...rs.es,
  ...as.es,
  ...ss.es,
  ...is.es,
  ...ls.es,
  ...os.es
}, y_e = {
  ...W2,
  ...ja.fr,
  ...$a.fr,
  ...Ga.fr,
  ...xa.fr,
  ...Ka.fr,
  ...za.fr,
  ...qa.fr,
  ...Va.fr,
  ...Ua.fr,
  ...Ha.fr,
  ...ka.fr,
  ...Ya.fr,
  ...Wa.fr,
  ...Ma.fr,
  ...Xa.fr,
  ...Za.fr,
  ...Ja.fr,
  ...Qa.fr,
  ...es.fr,
  ...ts.fr,
  ...ns.fr,
  ...rs.fr,
  ...as.fr,
  ...ss.fr,
  ...is.fr,
  ...ls.fr,
  ...os.fr
}, R_e = {
  ...r5,
  ...ja.hr,
  ...$a.hr,
  ...Ga.hr,
  ...xa.hr,
  ...Ka.hr,
  ...za.hr,
  ...qa.hr,
  ...Va.hr,
  ...Ua.hr,
  ...Ha.hr,
  ...ka.hr,
  ...Ya.hr,
  ...Wa.hr,
  ...Ma.hr,
  ...Xa.hr,
  ...Za.hr,
  ...Ja.hr,
  ...Qa.hr,
  ...es.hr,
  ...ts.hr,
  ...ns.hr,
  ...rs.hr,
  ...as.hr,
  ...ss.hr,
  ...is.hr,
  ...ls.hr,
  ...os.hr
}, O_e = {
  ...A5,
  ...ja.it,
  ...$a.it,
  ...Ga.it,
  ...xa.it,
  ...Ka.it,
  ...za.it,
  ...qa.it,
  ...Va.it,
  ...Ua.it,
  ...Ha.it,
  ...ka.it,
  ...Ya.it,
  ...Wa.it,
  ...Ma.it,
  ...Xa.it,
  ...Za.it,
  ...Ja.it,
  ...Qa.it,
  ...es.it,
  ...ts.it,
  ...ns.it,
  ...rs.it,
  ...as.it,
  ...ss.it,
  ...is.it,
  ...ls.it,
  ...os.it
}, C_e = {
  ...C5,
  ...ja.ru,
  ...$a.ru,
  ...Ga.ru,
  ...xa.ru,
  ...Ka.ru,
  ...za.ru,
  ...qa.ru,
  ...Va.ru,
  ...Ua.ru,
  ...Ha.ru,
  ...ka.ru,
  ...Ya.ru,
  ...Wa.ru,
  ...Ma.ru,
  ...Xa.ru,
  ...Za.ru,
  ...Ja.ru,
  ...Qa.ru,
  ...es.ru,
  ...ts.ru,
  ...ns.ru,
  ...rs.ru,
  ...as.ru,
  ...ss.ru,
  ...is.ru,
  ...ls.ru,
  ...os.ru
}, Vde = {
  ar: b_e,
  de: v_e,
  en: I_e,
  es: g_e,
  fr: y_e,
  hr: R_e,
  it: O_e,
  ru: C_e
};
export {
  F_e as AAccordion,
  $c as AAlert,
  q_e as AAlertPlugin,
  rt as AButton,
  pM as ACheckbox,
  xa as ACheckboxI18n,
  cl as ACloak,
  as as ACloakI18n,
  k_e as ACloakPlugin,
  uf as AConfirmAPI,
  tu as ADatepicker,
  BM as ADatepickerRange,
  Ma as ADatepickerRangeI18n,
  ode as ADisclosure,
  $a as ADisclosureI18n,
  sa as ADropdown,
  IS as ADropdownGlobalAPI,
  ye as AElement,
  n$ as AErrors,
  Yt as AErrorsText,
  q$ as AEventOutsideAPI,
  MS as AFieldset,
  qa as AFieldsetI18n,
  pde as AFilters,
  or as AFiltersAPI,
  GF as AFiltersAPI_additionFilters,
  fk as AFiltersHorizontal,
  ka as AFiltersI18n,
  Pde as AFiltersPlugin,
  Eq as AFiltersRight,
  xu as AForm,
  Xt as AFormHelpText,
  hde as AFormPlugin,
  zd as AGet,
  xS as AGroup,
  Yd as AGroupButtonDropdown,
  Tde as AGroupButtonDropdownPlugin,
  tM as AHttpAPI,
  LS as AHttpAPI_API_CONFIG,
  J1 as AHttpAPI_abortHttp,
  qs as AHttpAPI_callHttpRequestAndCheckSavedApi,
  Q1 as AHttpAPI_clearAllApiSaved,
  eM as AHttpAPI_clearApiSaved,
  oM as AHttpAPI_deleteHttp,
  nM as AHttpAPI_getHttp,
  rM as AHttpAPI_getListHttp,
  aM as AHttpAPI_getOptionsHttp,
  sde as AHttpAPI_getUrlParams,
  lM as AHttpAPI_patchHttp,
  sM as AHttpAPI_postHttp,
  iM as AHttpAPI_putHttp,
  Y1 as AHttpAPI_setBaseUrl,
  X1 as AHttpAPI_setErrorCallbacks,
  Z1 as AHttpAPI_setHeaderParams,
  dM as AHttpAPI_setUrlForArray,
  _M as AHttpAPI_setUrlWithParams,
  Fde as AHttpPlugin,
  M_e as AI18nPlugin,
  lt as AIcon,
  x_e as AIconPlugin,
  Sde as AInfiniteScroll,
  Ln as AInput,
  _$ as AInputCurrency,
  ls as AInputCurrencyI18n,
  _de as AInputCurrencyPlugin,
  d$ as AInputFile,
  Ua as AInputI18n,
  ri as AInputNumber,
  is as AInputNumberI18n,
  dde as AInputNumberPlugin,
  Ro as AInputNumberRange,
  Ha as AInputNumberRangeI18n,
  NS as AJson,
  es as AJsonI18n,
  mU as AKeyChildren,
  Ye as AKeyId,
  St as AKeyLabel,
  Al as AKeyParent,
  Z as AKeysCode,
  kt as ALabel,
  wu as ALink,
  mde as ALinkCopy,
  Va as ALinkCopyI18n,
  Mk as AList,
  qS as ALoading,
  rs as ALoadingI18n,
  Ade as ALoadingPlugin,
  Lde as AMenu,
  Xa as AMenu2I18n,
  $k as AMenuButtonToggle,
  KS as AMenuButtonToggle_ToggleAPI,
  An as AMobileAPI,
  Wo as AMobileAPI_isMobileWidth,
  No as AMobileAPI_setIsMobileWidth,
  Mde as AMobilePlugin,
  Mu as AModal,
  bde as AModalConfirm,
  Yq as AModalForm,
  Wa as AModalI18n,
  Ede as AModalPlugin,
  vde as AModalWizard,
  Ide as ANotification,
  $u as ANotificationAPI,
  ek as ANotificationAPI_addNotification,
  Qq as ANotificationAPI_setNotificationTimeout,
  _l as AOnHooks,
  Pu as AOneCheckbox,
  gde as APageTabTitle,
  hH as APageTabTitleAPI,
  AH as APageTabTitleAPI_setBaseTitle,
  $de as APageTabTitlePlugin,
  OH as APagination,
  Qa as APaginationI18n,
  yr as APlacements,
  lf as APopupAPI,
  jd as APopupAPI_closePopup,
  hd as APopupAPI_isCurrentPopupOpen,
  Kd as APopupAPI_openPopup,
  VM as APopupAPI_togglePopup,
  yde as AProgress,
  Rde as AProgressCircle,
  DS as ARadio,
  Ga as ARadioI18n,
  Ode as ARate,
  Dq as ARequired,
  ss as ARequiredI18n,
  FH as AResizer,
  G$ as ARouterLinkConfig,
  os as ARouterLinkConfigI18n,
  fde as ARouterLinkConfigPlugin,
  hn as ASafeHtml,
  Cde as AScale,
  ws as ASelect,
  Ka as ASelectI18n,
  cde as ASelectPlugin,
  Nde as AShowMore,
  ja as AShowMoreI18n,
  ul as ASpinner,
  ns as ASpinnerI18n,
  $_e as ASpinnerPlugin,
  BS as ASwitch,
  ts as ASwitchI18n,
  Bde as ATable,
  za as ATableI18n,
  Dde as ATablePlugin,
  wde as ATabs,
  X$ as ATemplate,
  aq as ATextarea,
  oF as ATooltip,
  Te as ATranslation,
  EU as AVerticalScroll,
  Za as AVerticalScrollI18n,
  _H as AWizard,
  Ya as AWizardI18n,
  xde as AlohaPlugin,
  Rt as EventBus,
  Ja as Filters18n,
  Nt as UIExcludeRenderAttributesAPI,
  Zt as UiAPI,
  Wt as UiStyleHideAPI,
  Td as colorToHex,
  Mo as concatTwoStringsWithSpace,
  B_e as dompurify,
  RF as filterBoolean,
  OF as filterCapitalize,
  CF as filterCurrency,
  NF as filterDate,
  DF as filterDefaultForEmpty,
  BF as filterEmail,
  wF as filterEscapeHtml,
  PF as filterFileSize,
  tl as filterFloat,
  FF as filterJson,
  xF as filterKeyValue,
  MF as filterLimitTo,
  $F as filterLink,
  Xo as filterList,
  kF as filterLowerCase,
  UF as filterMask,
  HF as filterPropertyByValue,
  VF as filterSearchHighlight,
  WF as filterUpperCase,
  xM as focusableList,
  Ei as focusableSelector,
  MP as getTotalNestedCount,
  wt as getTranslatedText,
  lde as getUniqueSelector,
  Hde as hexToRgb,
  mT as i18n,
  b_e as i18nAR,
  Vde as i18nAll,
  v_e as i18nDE,
  I_e as i18nEN,
  g_e as i18nES,
  y_e as i18nFR,
  R_e as i18nHR,
  O_e as i18nIT,
  C_e as i18nRU,
  FP as isArrayOfArrays,
  P_e as isArrayOfStrings,
  l$ as isEven,
  ude as isOdd,
  Ca as isPlaceholderTranslate,
  oi as isTranslate,
  kde as mixBlack,
  Am as mixColor,
  qde as mixWhite,
  Ude as rgbToHex,
  w_e as sanitize,
  Vo as sanitizeLocal,
  ide as scrollToElement,
  aa as setFocusToElement,
  MM as setFocusToNextFocusableElement,
  $M as setFocusToPreviousFocusableElement,
  vT as setI18n,
  IT as setLanguage,
  yc as timeTranslationLastChanged,
  $o as toPrecision,
  r0 as toggleTranslate,
  bT as translation,
  gT as updateTranslation
};
