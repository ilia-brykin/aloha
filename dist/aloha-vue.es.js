import { toRef as p, inject as fe, computed as d, ref as R, watch as st, onBeforeUnmount as Bt, withDirectives as Ft, h as c, resolveComponent as la, unref as KI, Teleport as fa, onMounted as ha, onUnmounted as Gv, nextTick as Yu, getCurrentInstance as Yv, provide as Ze, toRefs as XI } from "vue";
/*! @license DOMPurify 3.2.3 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.3/LICENSE */
const {
  entries: zv,
  setPrototypeOf: ib,
  isFrozen: ZI,
  getPrototypeOf: JI,
  getOwnPropertyDescriptor: QI
} = Object;
let {
  freeze: Ln,
  seal: yr,
  create: Kv
} = Object, {
  apply: vf,
  construct: yf
} = typeof Reflect < "u" && Reflect;
Ln || (Ln = function(t) {
  return t;
});
yr || (yr = function(t) {
  return t;
});
vf || (vf = function(t, n, r) {
  return t.apply(n, r);
});
yf || (yf = function(t, n) {
  return new t(...n);
});
const eu = Jn(Array.prototype.forEach), sb = Jn(Array.prototype.pop), ll = Jn(Array.prototype.push), cu = Jn(String.prototype.toLowerCase), Yc = Jn(String.prototype.toString), lb = Jn(String.prototype.match), ol = Jn(String.prototype.replace), eL = Jn(String.prototype.indexOf), tL = Jn(String.prototype.trim), Mr = Jn(Object.prototype.hasOwnProperty), Cn = Jn(RegExp.prototype.test), ul = nL(TypeError);
function Jn(e) {
  return function(t) {
    for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), a = 1; a < n; a++)
      r[a - 1] = arguments[a];
    return vf(e, t, r);
  };
}
function nL(e) {
  return function() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return yf(e, n);
  };
}
function tt(e, t) {
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : cu;
  ib && ib(e, null);
  let r = t.length;
  for (; r--; ) {
    let a = t[r];
    if (typeof a == "string") {
      const s = n(a);
      s !== a && (ZI(t) || (t[r] = s), a = s);
    }
    e[a] = !0;
  }
  return e;
}
function rL(e) {
  for (let t = 0; t < e.length; t++)
    Mr(e, t) || (e[t] = null);
  return e;
}
function Li(e) {
  const t = Kv(null);
  for (const [n, r] of zv(e))
    Mr(e, n) && (Array.isArray(r) ? t[n] = rL(r) : r && typeof r == "object" && r.constructor === Object ? t[n] = Li(r) : t[n] = r);
  return t;
}
function dl(e, t) {
  for (; e !== null; ) {
    const r = QI(e, t);
    if (r) {
      if (r.get)
        return Jn(r.get);
      if (typeof r.value == "function")
        return Jn(r.value);
    }
    e = JI(e);
  }
  function n() {
    return null;
  }
  return n;
}
const ob = Ln(["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"]), zc = Ln(["svg", "a", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "filter", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "style", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern"]), Kc = Ln(["feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence"]), aL = Ln(["animate", "color-profile", "cursor", "discard", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignobject", "hatch", "hatchpath", "mesh", "meshgradient", "meshpatch", "meshrow", "missing-glyph", "script", "set", "solidcolor", "unknown", "use"]), Xc = Ln(["math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover", "mprescripts"]), iL = Ln(["maction", "maligngroup", "malignmark", "mlongdiv", "mscarries", "mscarry", "msgroup", "mstack", "msline", "msrow", "semantics", "annotation", "annotation-xml", "mprescripts", "none"]), ub = Ln(["#text"]), db = Ln(["accept", "action", "align", "alt", "autocapitalize", "autocomplete", "autopictureinpicture", "autoplay", "background", "bgcolor", "border", "capture", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "controls", "controlslist", "coords", "crossorigin", "datetime", "decoding", "default", "dir", "disabled", "disablepictureinpicture", "disableremoteplayback", "download", "draggable", "enctype", "enterkeyhint", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "inputmode", "integrity", "ismap", "kind", "label", "lang", "list", "loading", "loop", "low", "max", "maxlength", "media", "method", "min", "minlength", "multiple", "muted", "name", "nonce", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "playsinline", "popover", "popovertarget", "popovertargetaction", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "role", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "sizes", "span", "srclang", "start", "src", "srcset", "step", "style", "summary", "tabindex", "title", "translate", "type", "usemap", "valign", "value", "width", "wrap", "xmlns", "slot"]), Zc = Ln(["accent-height", "accumulate", "additive", "alignment-baseline", "amplitude", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "class", "clip", "clippathunits", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "exponent", "fill", "fill-opacity", "fill-rule", "filter", "filterunits", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "height", "href", "id", "image-rendering", "in", "in2", "intercept", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lang", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "media", "method", "mode", "min", "name", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "preserveaspectratio", "primitiveunits", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "result", "rotate", "scale", "seed", "shape-rendering", "slope", "specularconstant", "specularexponent", "spreadmethod", "startoffset", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "style", "surfacescale", "systemlanguage", "tabindex", "tablevalues", "targetx", "targety", "transform", "transform-origin", "text-anchor", "text-decoration", "text-rendering", "textlength", "type", "u1", "u2", "unicode", "values", "viewbox", "visibility", "version", "vert-adv-y", "vert-origin-x", "vert-origin-y", "width", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "xmlns", "y", "y1", "y2", "z", "zoomandpan"]), cb = Ln(["accent", "accentunder", "align", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "dir", "display", "displaystyle", "encoding", "fence", "frame", "height", "href", "id", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "width", "xmlns"]), tu = Ln(["xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"]), sL = yr(/\{\{[\w\W]*|[\w\W]*\}\}/gm), lL = yr(/<%[\w\W]*|[\w\W]*%>/gm), oL = yr(/\$\{[\w\W]*}/gm), uL = yr(/^data-[\-\w.\u00B7-\uFFFF]+$/), dL = yr(/^aria-[\-\w]+$/), Xv = yr(
  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i
  // eslint-disable-line no-useless-escape
), cL = yr(/^(?:\w+script|data):/i), fL = yr(
  /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g
  // eslint-disable-line no-control-regex
), Zv = yr(/^html$/i), hL = yr(/^[a-z][.\w]*(-[.\w]+)+$/i);
var fb = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  ARIA_ATTR: dL,
  ATTR_WHITESPACE: fL,
  CUSTOM_ELEMENT: hL,
  DATA_ATTR: uL,
  DOCTYPE_NAME: Zv,
  ERB_EXPR: lL,
  IS_ALLOWED_URI: Xv,
  IS_SCRIPT_OR_DATA: cL,
  MUSTACHE_EXPR: sL,
  TMPLIT_EXPR: oL
});
const cl = {
  element: 1,
  attribute: 2,
  text: 3,
  cdataSection: 4,
  entityReference: 5,
  // Deprecated
  entityNode: 6,
  // Deprecated
  progressingInstruction: 7,
  comment: 8,
  document: 9,
  documentType: 10,
  documentFragment: 11,
  notation: 12
  // Deprecated
}, pL = function() {
  return typeof window > "u" ? null : window;
}, _L = function(t, n) {
  if (typeof t != "object" || typeof t.createPolicy != "function")
    return null;
  let r = null;
  const a = "data-tt-policy-suffix";
  n && n.hasAttribute(a) && (r = n.getAttribute(a));
  const s = "dompurify" + (r ? "#" + r : "");
  try {
    return t.createPolicy(s, {
      createHTML(o) {
        return o;
      },
      createScriptURL(o) {
        return o;
      }
    });
  } catch {
    return console.warn("TrustedTypes policy " + s + " could not be created."), null;
  }
}, hb = function() {
  return {
    afterSanitizeAttributes: [],
    afterSanitizeElements: [],
    afterSanitizeShadowDOM: [],
    beforeSanitizeAttributes: [],
    beforeSanitizeElements: [],
    beforeSanitizeShadowDOM: [],
    uponSanitizeAttribute: [],
    uponSanitizeElement: [],
    uponSanitizeShadowNode: []
  };
};
function Jv() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : pL();
  const t = (De) => Jv(De);
  if (t.version = "3.2.3", t.removed = [], !e || !e.document || e.document.nodeType !== cl.document)
    return t.isSupported = !1, t;
  let {
    document: n
  } = e;
  const r = n, a = r.currentScript, {
    DocumentFragment: s,
    HTMLTemplateElement: o,
    Node: u,
    Element: f,
    NodeFilter: _,
    NamedNodeMap: m = e.NamedNodeMap || e.MozNamedAttrMap,
    HTMLFormElement: b,
    DOMParser: v,
    trustedTypes: g
  } = e, S = f.prototype, A = dl(S, "cloneNode"), w = dl(S, "remove"), T = dl(S, "nextSibling"), I = dl(S, "childNodes"), C = dl(S, "parentNode");
  if (typeof o == "function") {
    const De = n.createElement("template");
    De.content && De.content.ownerDocument && (n = De.content.ownerDocument);
  }
  let E, P = "";
  const {
    implementation: M,
    createNodeIterator: k,
    createDocumentFragment: F,
    getElementsByTagName: D
  } = n, {
    importNode: W
  } = r;
  let $ = hb();
  t.isSupported = typeof zv == "function" && typeof C == "function" && M && M.createHTMLDocument !== void 0;
  const {
    MUSTACHE_EXPR: z,
    ERB_EXPR: ne,
    TMPLIT_EXPR: Q,
    DATA_ATTR: ce,
    ARIA_ATTR: he,
    IS_SCRIPT_OR_DATA: ve,
    ATTR_WHITESPACE: me,
    CUSTOM_ELEMENT: Ne
  } = fb;
  let {
    IS_ALLOWED_URI: we
  } = fb, oe = null;
  const xe = tt({}, [...ob, ...zc, ...Kc, ...Xc, ...ub]);
  let re = null;
  const Re = tt({}, [...db, ...Zc, ...cb, ...tu]);
  let Z = Object.seal(Kv(null, {
    tagNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    attributeNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    allowCustomizedBuiltInElements: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: !1
    }
  })), U = null, se = null, pe = !0, Ie = !0, He = !1, Ke = !0, Je = !1, ut = !0, Ee = !1, Qe = !1, At = !1, Fe = !1, ft = !1, Dt = !1, $t = !0, qt = !1;
  const Cr = "user-content-";
  let nr = !0, Ir = !1, cn = {}, rr = null;
  const ar = tt({}, ["annotation-xml", "audio", "colgroup", "desc", "foreignobject", "head", "iframe", "math", "mi", "mn", "mo", "ms", "mtext", "noembed", "noframes", "noscript", "plaintext", "script", "style", "svg", "template", "thead", "title", "video", "xmp"]);
  let Nn = null;
  const Yr = tt({}, ["audio", "video", "img", "source", "image", "track"]);
  let Vn = null;
  const zr = tt({}, ["alt", "class", "for", "id", "label", "name", "pattern", "placeholder", "role", "summary", "title", "value", "style", "xmlns"]), ir = "http://www.w3.org/1998/Math/MathML", sr = "http://www.w3.org/2000/svg", ln = "http://www.w3.org/1999/xhtml";
  let On = ln, Lr = !1, Er = null;
  const pi = tt({}, [ir, sr, ln], Yc);
  let Kr = tt({}, ["mi", "mo", "mn", "ms", "mtext"]), Or = tt({}, ["annotation-xml"]);
  const Ga = tt({}, ["title", "style", "font", "a", "script"]);
  let Xr = null;
  const Vs = ["application/xhtml+xml", "text/html"], Hs = "text/html";
  let kt = null, Zr = null;
  const Yi = n.createElement("form"), zi = function(N) {
    return N instanceof RegExp || N instanceof Function;
  }, _i = function() {
    let N = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (!(Zr && Zr === N)) {
      if ((!N || typeof N != "object") && (N = {}), N = Li(N), Xr = // eslint-disable-next-line unicorn/prefer-includes
      Vs.indexOf(N.PARSER_MEDIA_TYPE) === -1 ? Hs : N.PARSER_MEDIA_TYPE, kt = Xr === "application/xhtml+xml" ? Yc : cu, oe = Mr(N, "ALLOWED_TAGS") ? tt({}, N.ALLOWED_TAGS, kt) : xe, re = Mr(N, "ALLOWED_ATTR") ? tt({}, N.ALLOWED_ATTR, kt) : Re, Er = Mr(N, "ALLOWED_NAMESPACES") ? tt({}, N.ALLOWED_NAMESPACES, Yc) : pi, Vn = Mr(N, "ADD_URI_SAFE_ATTR") ? tt(Li(zr), N.ADD_URI_SAFE_ATTR, kt) : zr, Nn = Mr(N, "ADD_DATA_URI_TAGS") ? tt(Li(Yr), N.ADD_DATA_URI_TAGS, kt) : Yr, rr = Mr(N, "FORBID_CONTENTS") ? tt({}, N.FORBID_CONTENTS, kt) : ar, U = Mr(N, "FORBID_TAGS") ? tt({}, N.FORBID_TAGS, kt) : {}, se = Mr(N, "FORBID_ATTR") ? tt({}, N.FORBID_ATTR, kt) : {}, cn = Mr(N, "USE_PROFILES") ? N.USE_PROFILES : !1, pe = N.ALLOW_ARIA_ATTR !== !1, Ie = N.ALLOW_DATA_ATTR !== !1, He = N.ALLOW_UNKNOWN_PROTOCOLS || !1, Ke = N.ALLOW_SELF_CLOSE_IN_ATTR !== !1, Je = N.SAFE_FOR_TEMPLATES || !1, ut = N.SAFE_FOR_XML !== !1, Ee = N.WHOLE_DOCUMENT || !1, Fe = N.RETURN_DOM || !1, ft = N.RETURN_DOM_FRAGMENT || !1, Dt = N.RETURN_TRUSTED_TYPE || !1, At = N.FORCE_BODY || !1, $t = N.SANITIZE_DOM !== !1, qt = N.SANITIZE_NAMED_PROPS || !1, nr = N.KEEP_CONTENT !== !1, Ir = N.IN_PLACE || !1, we = N.ALLOWED_URI_REGEXP || Xv, On = N.NAMESPACE || ln, Kr = N.MATHML_TEXT_INTEGRATION_POINTS || Kr, Or = N.HTML_INTEGRATION_POINTS || Or, Z = N.CUSTOM_ELEMENT_HANDLING || {}, N.CUSTOM_ELEMENT_HANDLING && zi(N.CUSTOM_ELEMENT_HANDLING.tagNameCheck) && (Z.tagNameCheck = N.CUSTOM_ELEMENT_HANDLING.tagNameCheck), N.CUSTOM_ELEMENT_HANDLING && zi(N.CUSTOM_ELEMENT_HANDLING.attributeNameCheck) && (Z.attributeNameCheck = N.CUSTOM_ELEMENT_HANDLING.attributeNameCheck), N.CUSTOM_ELEMENT_HANDLING && typeof N.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements == "boolean" && (Z.allowCustomizedBuiltInElements = N.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements), Je && (Ie = !1), ft && (Fe = !0), cn && (oe = tt({}, ub), re = [], cn.html === !0 && (tt(oe, ob), tt(re, db)), cn.svg === !0 && (tt(oe, zc), tt(re, Zc), tt(re, tu)), cn.svgFilters === !0 && (tt(oe, Kc), tt(re, Zc), tt(re, tu)), cn.mathMl === !0 && (tt(oe, Xc), tt(re, cb), tt(re, tu))), N.ADD_TAGS && (oe === xe && (oe = Li(oe)), tt(oe, N.ADD_TAGS, kt)), N.ADD_ATTR && (re === Re && (re = Li(re)), tt(re, N.ADD_ATTR, kt)), N.ADD_URI_SAFE_ATTR && tt(Vn, N.ADD_URI_SAFE_ATTR, kt), N.FORBID_CONTENTS && (rr === ar && (rr = Li(rr)), tt(rr, N.FORBID_CONTENTS, kt)), nr && (oe["#text"] = !0), Ee && tt(oe, ["html", "head", "body"]), oe.table && (tt(oe, ["tbody"]), delete U.tbody), N.TRUSTED_TYPES_POLICY) {
        if (typeof N.TRUSTED_TYPES_POLICY.createHTML != "function")
          throw ul('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');
        if (typeof N.TRUSTED_TYPES_POLICY.createScriptURL != "function")
          throw ul('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');
        E = N.TRUSTED_TYPES_POLICY, P = E.createHTML("");
      } else
        E === void 0 && (E = _L(g, a)), E !== null && typeof P == "string" && (P = E.createHTML(""));
      Ln && Ln(N), Zr = N;
    }
  }, Ki = tt({}, [...zc, ...Kc, ...aL]), Ya = tt({}, [...Xc, ...iL]), $s = function(N) {
    let le = C(N);
    (!le || !le.tagName) && (le = {
      namespaceURI: On,
      tagName: "template"
    });
    const Te = cu(N.tagName), gt = cu(le.tagName);
    return Er[N.namespaceURI] ? N.namespaceURI === sr ? le.namespaceURI === ln ? Te === "svg" : le.namespaceURI === ir ? Te === "svg" && (gt === "annotation-xml" || Kr[gt]) : !!Ki[Te] : N.namespaceURI === ir ? le.namespaceURI === ln ? Te === "math" : le.namespaceURI === sr ? Te === "math" && Or[gt] : !!Ya[Te] : N.namespaceURI === ln ? le.namespaceURI === sr && !Or[gt] || le.namespaceURI === ir && !Kr[gt] ? !1 : !Ya[Te] && (Ga[Te] || !Ki[Te]) : !!(Xr === "application/xhtml+xml" && Er[N.namespaceURI]) : !1;
  }, fn = function(N) {
    ll(t.removed, {
      element: N
    });
    try {
      C(N).removeChild(N);
    } catch {
      w(N);
    }
  }, za = function(N, le) {
    try {
      ll(t.removed, {
        attribute: le.getAttributeNode(N),
        from: le
      });
    } catch {
      ll(t.removed, {
        attribute: null,
        from: le
      });
    }
    if (le.removeAttribute(N), N === "is")
      if (Fe || ft)
        try {
          fn(le);
        } catch {
        }
      else
        try {
          le.setAttribute(N, "");
        } catch {
        }
  }, Jr = function(N) {
    let le = null, Te = null;
    if (At)
      N = "<remove></remove>" + N;
    else {
      const Nt = lb(N, /^[\r\n\t ]+/);
      Te = Nt && Nt[0];
    }
    Xr === "application/xhtml+xml" && On === ln && (N = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + N + "</body></html>");
    const gt = E ? E.createHTML(N) : N;
    if (On === ln)
      try {
        le = new v().parseFromString(gt, Xr);
      } catch {
      }
    if (!le || !le.documentElement) {
      le = M.createDocument(On, "template", null);
      try {
        le.documentElement.innerHTML = Lr ? P : gt;
      } catch {
      }
    }
    const nn = le.body || le.documentElement;
    return N && Te && nn.insertBefore(n.createTextNode(Te), nn.childNodes[0] || null), On === ln ? D.call(le, Ee ? "html" : "body")[0] : Ee ? le.documentElement : nn;
  }, mi = function(N) {
    return k.call(
      N.ownerDocument || N,
      N,
      // eslint-disable-next-line no-bitwise
      _.SHOW_ELEMENT | _.SHOW_COMMENT | _.SHOW_TEXT | _.SHOW_PROCESSING_INSTRUCTION | _.SHOW_CDATA_SECTION,
      null
    );
  }, ba = function(N) {
    return N instanceof b && (typeof N.nodeName != "string" || typeof N.textContent != "string" || typeof N.removeChild != "function" || !(N.attributes instanceof m) || typeof N.removeAttribute != "function" || typeof N.setAttribute != "function" || typeof N.namespaceURI != "string" || typeof N.insertBefore != "function" || typeof N.hasChildNodes != "function");
  }, Xi = function(N) {
    return typeof u == "function" && N instanceof u;
  };
  function Dr(De, N, le) {
    eu(De, (Te) => {
      Te.call(t, N, le, Zr);
    });
  }
  const co = function(N) {
    let le = null;
    if (Dr($.beforeSanitizeElements, N, null), ba(N))
      return fn(N), !0;
    const Te = kt(N.nodeName);
    if (Dr($.uponSanitizeElement, N, {
      tagName: Te,
      allowedTags: oe
    }), N.hasChildNodes() && !Xi(N.firstElementChild) && Cn(/<[/\w]/g, N.innerHTML) && Cn(/<[/\w]/g, N.textContent) || N.nodeType === cl.progressingInstruction || ut && N.nodeType === cl.comment && Cn(/<[/\w]/g, N.data))
      return fn(N), !0;
    if (!oe[Te] || U[Te]) {
      if (!U[Te] && Ws(Te) && (Z.tagNameCheck instanceof RegExp && Cn(Z.tagNameCheck, Te) || Z.tagNameCheck instanceof Function && Z.tagNameCheck(Te)))
        return !1;
      if (nr && !rr[Te]) {
        const gt = C(N) || N.parentNode, nn = I(N) || N.childNodes;
        if (nn && gt) {
          const Nt = nn.length;
          for (let hn = Nt - 1; hn >= 0; --hn) {
            const lr = A(nn[hn], !0);
            lr.__removalCount = (N.__removalCount || 0) + 1, gt.insertBefore(lr, T(N));
          }
        }
      }
      return fn(N), !0;
    }
    return N instanceof f && !$s(N) || (Te === "noscript" || Te === "noembed" || Te === "noframes") && Cn(/<\/no(script|embed|frames)/i, N.innerHTML) ? (fn(N), !0) : (Je && N.nodeType === cl.text && (le = N.textContent, eu([z, ne, Q], (gt) => {
      le = ol(le, gt, " ");
    }), N.textContent !== le && (ll(t.removed, {
      element: N.cloneNode()
    }), N.textContent = le)), Dr($.afterSanitizeElements, N, null), !1);
  }, fo = function(N, le, Te) {
    if ($t && (le === "id" || le === "name") && (Te in n || Te in Yi))
      return !1;
    if (!(Ie && !se[le] && Cn(ce, le))) {
      if (!(pe && Cn(he, le))) {
        if (!re[le] || se[le]) {
          if (
            // First condition does a very basic check if a) it's basically a valid custom element tagname AND
            // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck
            !(Ws(N) && (Z.tagNameCheck instanceof RegExp && Cn(Z.tagNameCheck, N) || Z.tagNameCheck instanceof Function && Z.tagNameCheck(N)) && (Z.attributeNameCheck instanceof RegExp && Cn(Z.attributeNameCheck, le) || Z.attributeNameCheck instanceof Function && Z.attributeNameCheck(le)) || // Alternative, second condition checks if it's an `is`-attribute, AND
            // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            le === "is" && Z.allowCustomizedBuiltInElements && (Z.tagNameCheck instanceof RegExp && Cn(Z.tagNameCheck, Te) || Z.tagNameCheck instanceof Function && Z.tagNameCheck(Te)))
          ) return !1;
        } else if (!Vn[le]) {
          if (!Cn(we, ol(Te, me, ""))) {
            if (!((le === "src" || le === "xlink:href" || le === "href") && N !== "script" && eL(Te, "data:") === 0 && Nn[N])) {
              if (!(He && !Cn(ve, ol(Te, me, "")))) {
                if (Te)
                  return !1;
              }
            }
          }
        }
      }
    }
    return !0;
  }, Ws = function(N) {
    return N !== "annotation-xml" && lb(N, Ne);
  }, ho = function(N) {
    Dr($.beforeSanitizeAttributes, N, null);
    const {
      attributes: le
    } = N;
    if (!le || ba(N))
      return;
    const Te = {
      attrName: "",
      attrValue: "",
      keepAttr: !0,
      allowedAttributes: re,
      forceKeepAttr: void 0
    };
    let gt = le.length;
    for (; gt--; ) {
      const nn = le[gt], {
        name: Nt,
        namespaceURI: hn,
        value: lr
      } = nn, bi = kt(Nt);
      let rn = Nt === "value" ? lr : tL(lr);
      if (Te.attrName = bi, Te.attrValue = rn, Te.keepAttr = !0, Te.forceKeepAttr = void 0, Dr($.uponSanitizeAttribute, N, Te), rn = Te.attrValue, qt && (bi === "id" || bi === "name") && (za(Nt, N), rn = Cr + rn), ut && Cn(/((--!?|])>)|<\/(style|title)/i, rn)) {
        za(Nt, N);
        continue;
      }
      if (Te.forceKeepAttr || (za(Nt, N), !Te.keepAttr))
        continue;
      if (!Ke && Cn(/\/>/i, rn)) {
        za(Nt, N);
        continue;
      }
      Je && eu([z, ne, Q], (js) => {
        rn = ol(rn, js, " ");
      });
      const Us = kt(N.nodeName);
      if (fo(Us, bi, rn)) {
        if (E && typeof g == "object" && typeof g.getAttributeType == "function" && !hn)
          switch (g.getAttributeType(Us, bi)) {
            case "TrustedHTML": {
              rn = E.createHTML(rn);
              break;
            }
            case "TrustedScriptURL": {
              rn = E.createScriptURL(rn);
              break;
            }
          }
        try {
          hn ? N.setAttributeNS(hn, Nt, rn) : N.setAttribute(Nt, rn), ba(N) ? fn(N) : sb(t.removed);
        } catch {
        }
      }
    }
    Dr($.afterSanitizeAttributes, N, null);
  }, Md = function De(N) {
    let le = null;
    const Te = mi(N);
    for (Dr($.beforeSanitizeShadowDOM, N, null); le = Te.nextNode(); )
      Dr($.uponSanitizeShadowNode, le, null), co(le), ho(le), le.content instanceof s && De(le.content);
    Dr($.afterSanitizeShadowDOM, N, null);
  };
  return t.sanitize = function(De) {
    let N = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, le = null, Te = null, gt = null, nn = null;
    if (Lr = !De, Lr && (De = "<!-->"), typeof De != "string" && !Xi(De))
      if (typeof De.toString == "function") {
        if (De = De.toString(), typeof De != "string")
          throw ul("dirty is not a string, aborting");
      } else
        throw ul("toString is not a function");
    if (!t.isSupported)
      return De;
    if (Qe || _i(N), t.removed = [], typeof De == "string" && (Ir = !1), Ir) {
      if (De.nodeName) {
        const lr = kt(De.nodeName);
        if (!oe[lr] || U[lr])
          throw ul("root node is forbidden and cannot be sanitized in-place");
      }
    } else if (De instanceof u)
      le = Jr("<!---->"), Te = le.ownerDocument.importNode(De, !0), Te.nodeType === cl.element && Te.nodeName === "BODY" || Te.nodeName === "HTML" ? le = Te : le.appendChild(Te);
    else {
      if (!Fe && !Je && !Ee && // eslint-disable-next-line unicorn/prefer-includes
      De.indexOf("<") === -1)
        return E && Dt ? E.createHTML(De) : De;
      if (le = Jr(De), !le)
        return Fe ? null : Dt ? P : "";
    }
    le && At && fn(le.firstChild);
    const Nt = mi(Ir ? De : le);
    for (; gt = Nt.nextNode(); )
      co(gt), ho(gt), gt.content instanceof s && Md(gt.content);
    if (Ir)
      return De;
    if (Fe) {
      if (ft)
        for (nn = F.call(le.ownerDocument); le.firstChild; )
          nn.appendChild(le.firstChild);
      else
        nn = le;
      return (re.shadowroot || re.shadowrootmode) && (nn = W.call(r, nn, !0)), nn;
    }
    let hn = Ee ? le.outerHTML : le.innerHTML;
    return Ee && oe["!doctype"] && le.ownerDocument && le.ownerDocument.doctype && le.ownerDocument.doctype.name && Cn(Zv, le.ownerDocument.doctype.name) && (hn = "<!DOCTYPE " + le.ownerDocument.doctype.name + `>
` + hn), Je && eu([z, ne, Q], (lr) => {
      hn = ol(hn, lr, " ");
    }), E && Dt ? E.createHTML(hn) : hn;
  }, t.setConfig = function() {
    let De = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    _i(De), Qe = !0;
  }, t.clearConfig = function() {
    Zr = null, Qe = !1;
  }, t.isValidAttribute = function(De, N, le) {
    Zr || _i({});
    const Te = kt(De), gt = kt(N);
    return fo(Te, gt, le);
  }, t.addHook = function(De, N) {
    typeof N == "function" && ll($[De], N);
  }, t.removeHook = function(De) {
    return sb($[De]);
  }, t.removeHooks = function(De) {
    $[De] = [];
  }, t.removeAllHooks = function() {
    $ = hb();
  }, t;
}
var Qv = Jv(), ey = typeof global == "object" && global && global.Object === Object && global, mL = typeof self == "object" && self && self.Object === Object && self, wr = ey || mL || Function("return this")(), gr = wr.Symbol, ty = Object.prototype, bL = ty.hasOwnProperty, vL = ty.toString, fl = gr ? gr.toStringTag : void 0;
function yL(e) {
  var t = bL.call(e, fl), n = e[fl];
  try {
    e[fl] = void 0;
    var r = !0;
  } catch {
  }
  var a = vL.call(e);
  return r && (t ? e[fl] = n : delete e[fl]), a;
}
var gL = Object.prototype, SL = gL.toString;
function AL(e) {
  return SL.call(e);
}
var wL = "[object Null]", TL = "[object Undefined]", pb = gr ? gr.toStringTag : void 0;
function Fa(e) {
  return e == null ? e === void 0 ? TL : wL : pb && pb in Object(e) ? yL(e) : AL(e);
}
function Sr(e) {
  return e != null && typeof e == "object";
}
var xL = "[object Symbol]";
function Fi(e) {
  return typeof e == "symbol" || Sr(e) && Fa(e) == xL;
}
function bs(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, a = Array(r); ++n < r; )
    a[n] = t(e[n], n, e);
  return a;
}
var Ae = Array.isArray, CL = 1 / 0, _b = gr ? gr.prototype : void 0, mb = _b ? _b.toString : void 0;
function $l(e) {
  if (typeof e == "string")
    return e;
  if (Ae(e))
    return bs(e, $l) + "";
  if (Fi(e))
    return mb ? mb.call(e) : "";
  var t = e + "";
  return t == "0" && 1 / e == -CL ? "-0" : t;
}
var IL = /\s/;
function LL(e) {
  for (var t = e.length; t-- && IL.test(e.charAt(t)); )
    ;
  return t;
}
var EL = /^\s+/;
function OL(e) {
  return e && e.slice(0, LL(e) + 1).replace(EL, "");
}
function Qn(e) {
  var t = typeof e;
  return e != null && (t == "object" || t == "function");
}
var bb = NaN, DL = /^[-+]0x[0-9a-f]+$/i, PL = /^0b[01]+$/i, RL = /^0o[0-7]+$/i, BL = parseInt;
function Ts(e) {
  if (typeof e == "number")
    return e;
  if (Fi(e))
    return bb;
  if (Qn(e)) {
    var t = typeof e.valueOf == "function" ? e.valueOf() : e;
    e = Qn(t) ? t + "" : t;
  }
  if (typeof e != "string")
    return e === 0 ? e : +e;
  e = OL(e);
  var n = PL.test(e);
  return n || RL.test(e) ? BL(e.slice(2), n ? 2 : 8) : DL.test(e) ? bb : +e;
}
var vb = 1 / 0, kL = 17976931348623157e292;
function fu(e) {
  if (!e)
    return e === 0 ? e : 0;
  if (e = Ts(e), e === vb || e === -vb) {
    var t = e < 0 ? -1 : 1;
    return t * kL;
  }
  return e === e ? e : 0;
}
function pa(e) {
  var t = fu(e), n = t % 1;
  return t === t ? n ? t - n : t : 0;
}
function Hi(e) {
  return e;
}
var ML = "[object AsyncFunction]", FL = "[object Function]", qL = "[object GeneratorFunction]", NL = "[object Proxy]";
function We(e) {
  if (!Qn(e))
    return !1;
  var t = Fa(e);
  return t == FL || t == qL || t == ML || t == NL;
}
var Jc = wr["__core-js_shared__"], yb = function() {
  var e = /[^.]+$/.exec(Jc && Jc.keys && Jc.keys.IE_PROTO || "");
  return e ? "Symbol(src)_1." + e : "";
}();
function VL(e) {
  return !!yb && yb in e;
}
var HL = Function.prototype, $L = HL.toString;
function $i(e) {
  if (e != null) {
    try {
      return $L.call(e);
    } catch {
    }
    try {
      return e + "";
    } catch {
    }
  }
  return "";
}
var WL = /[\\^$.*+?()[\]{}|]/g, UL = /^\[object .+?Constructor\]$/, jL = Function.prototype, GL = Object.prototype, YL = jL.toString, zL = GL.hasOwnProperty, KL = RegExp(
  "^" + YL.call(zL).replace(WL, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function XL(e) {
  if (!Qn(e) || VL(e))
    return !1;
  var t = We(e) ? KL : UL;
  return t.test($i(e));
}
function ZL(e, t) {
  return e == null ? void 0 : e[t];
}
function Wi(e, t) {
  var n = ZL(e, t);
  return XL(n) ? n : void 0;
}
var gf = Wi(wr, "WeakMap"), gb = Object.create, JL = /* @__PURE__ */ function() {
  function e() {
  }
  return function(t) {
    if (!Qn(t))
      return {};
    if (gb)
      return gb(t);
    e.prototype = t;
    var n = new e();
    return e.prototype = void 0, n;
  };
}();
function QL(e, t, n) {
  switch (n.length) {
    case 0:
      return e.call(t);
    case 1:
      return e.call(t, n[0]);
    case 2:
      return e.call(t, n[0], n[1]);
    case 3:
      return e.call(t, n[0], n[1], n[2]);
  }
  return e.apply(t, n);
}
function eE() {
}
function tE(e, t) {
  var n = -1, r = e.length;
  for (t || (t = Array(r)); ++n < r; )
    t[n] = e[n];
  return t;
}
var nE = 800, rE = 16, aE = Date.now;
function iE(e) {
  var t = 0, n = 0;
  return function() {
    var r = aE(), a = rE - (r - n);
    if (n = r, a > 0) {
      if (++t >= nE)
        return arguments[0];
    } else
      t = 0;
    return e.apply(void 0, arguments);
  };
}
function sE(e) {
  return function() {
    return e;
  };
}
var Tu = function() {
  try {
    var e = Wi(Object, "defineProperty");
    return e({}, "", {}), e;
  } catch {
  }
}(), lE = Tu ? function(e, t) {
  return Tu(e, "toString", {
    configurable: !0,
    enumerable: !1,
    value: sE(t),
    writable: !0
  });
} : Hi, oE = iE(lE);
function ny(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r && t(e[n], n, e) !== !1; )
    ;
  return e;
}
function ry(e, t, n, r) {
  for (var a = e.length, s = n + -1; ++s < a; )
    if (t(e[s], s, e))
      return s;
  return -1;
}
function uE(e) {
  return e !== e;
}
function dE(e, t, n) {
  for (var r = n - 1, a = e.length; ++r < a; )
    if (e[r] === t)
      return r;
  return -1;
}
function ay(e, t, n) {
  return t === t ? dE(e, t, n) : ry(e, uE, n);
}
function iy(e, t) {
  var n = e == null ? 0 : e.length;
  return !!n && ay(e, t, 0) > -1;
}
var cE = 9007199254740991, fE = /^(?:0|[1-9]\d*)$/;
function zu(e, t) {
  var n = typeof e;
  return t = t ?? cE, !!t && (n == "number" || n != "symbol" && fE.test(e)) && e > -1 && e % 1 == 0 && e < t;
}
function ih(e, t, n) {
  t == "__proto__" && Tu ? Tu(e, t, {
    configurable: !0,
    enumerable: !0,
    value: n,
    writable: !0
  }) : e[t] = n;
}
function Ku(e, t) {
  return e === t || e !== e && t !== t;
}
var hE = Object.prototype, pE = hE.hasOwnProperty;
function Xu(e, t, n) {
  var r = e[t];
  (!(pE.call(e, t) && Ku(r, n)) || n === void 0 && !(t in e)) && ih(e, t, n);
}
function Wl(e, t, n, r) {
  var a = !n;
  n || (n = {});
  for (var s = -1, o = t.length; ++s < o; ) {
    var u = t[s], f = void 0;
    f === void 0 && (f = e[u]), a ? ih(n, u, f) : Xu(n, u, f);
  }
  return n;
}
var Sb = Math.max;
function _E(e, t, n) {
  return t = Sb(t === void 0 ? e.length - 1 : t, 0), function() {
    for (var r = arguments, a = -1, s = Sb(r.length - t, 0), o = Array(s); ++a < s; )
      o[a] = r[t + a];
    a = -1;
    for (var u = Array(t + 1); ++a < t; )
      u[a] = r[a];
    return u[t] = n(o), QL(e, this, u);
  };
}
function Zu(e, t) {
  return oE(_E(e, t, Hi), e + "");
}
var mE = 9007199254740991;
function sh(e) {
  return typeof e == "number" && e > -1 && e % 1 == 0 && e <= mE;
}
function Wr(e) {
  return e != null && sh(e.length) && !We(e);
}
function xu(e, t, n) {
  if (!Qn(n))
    return !1;
  var r = typeof t;
  return (r == "number" ? Wr(n) && zu(t, n.length) : r == "string" && t in n) ? Ku(n[t], e) : !1;
}
function bE(e) {
  return Zu(function(t, n) {
    var r = -1, a = n.length, s = a > 1 ? n[a - 1] : void 0, o = a > 2 ? n[2] : void 0;
    for (s = e.length > 3 && typeof s == "function" ? (a--, s) : void 0, o && xu(n[0], n[1], o) && (s = a < 3 ? void 0 : s, a = 1), t = Object(t); ++r < a; ) {
      var u = n[r];
      u && e(t, u, r, s);
    }
    return t;
  });
}
var vE = Object.prototype;
function Ul(e) {
  var t = e && e.constructor, n = typeof t == "function" && t.prototype || vE;
  return e === n;
}
function sy(e, t) {
  for (var n = -1, r = Array(e); ++n < e; )
    r[n] = t(n);
  return r;
}
var yE = "[object Arguments]";
function Ab(e) {
  return Sr(e) && Fa(e) == yE;
}
var ly = Object.prototype, gE = ly.hasOwnProperty, SE = ly.propertyIsEnumerable, Ju = Ab(/* @__PURE__ */ function() {
  return arguments;
}()) ? Ab : function(e) {
  return Sr(e) && gE.call(e, "callee") && !SE.call(e, "callee");
};
function AE() {
  return !1;
}
var oy = typeof exports == "object" && exports && !exports.nodeType && exports, wb = oy && typeof module == "object" && module && !module.nodeType && module, wE = wb && wb.exports === oy, Tb = wE ? wr.Buffer : void 0, TE = Tb ? Tb.isBuffer : void 0, Cl = TE || AE, xE = "[object Arguments]", CE = "[object Array]", IE = "[object Boolean]", LE = "[object Date]", EE = "[object Error]", OE = "[object Function]", DE = "[object Map]", PE = "[object Number]", RE = "[object Object]", BE = "[object RegExp]", kE = "[object Set]", ME = "[object String]", FE = "[object WeakMap]", qE = "[object ArrayBuffer]", NE = "[object DataView]", VE = "[object Float32Array]", HE = "[object Float64Array]", $E = "[object Int8Array]", WE = "[object Int16Array]", UE = "[object Int32Array]", jE = "[object Uint8Array]", GE = "[object Uint8ClampedArray]", YE = "[object Uint16Array]", zE = "[object Uint32Array]", Lt = {};
Lt[VE] = Lt[HE] = Lt[$E] = Lt[WE] = Lt[UE] = Lt[jE] = Lt[GE] = Lt[YE] = Lt[zE] = !0;
Lt[xE] = Lt[CE] = Lt[qE] = Lt[IE] = Lt[NE] = Lt[LE] = Lt[EE] = Lt[OE] = Lt[DE] = Lt[PE] = Lt[RE] = Lt[BE] = Lt[kE] = Lt[ME] = Lt[FE] = !1;
function KE(e) {
  return Sr(e) && sh(e.length) && !!Lt[Fa(e)];
}
function Qu(e) {
  return function(t) {
    return e(t);
  };
}
var uy = typeof exports == "object" && exports && !exports.nodeType && exports, yl = uy && typeof module == "object" && module && !module.nodeType && module, XE = yl && yl.exports === uy, Qc = XE && ey.process, xs = function() {
  try {
    var e = yl && yl.require && yl.require("util").types;
    return e || Qc && Qc.binding && Qc.binding("util");
  } catch {
  }
}(), xb = xs && xs.isTypedArray, lh = xb ? Qu(xb) : KE, ZE = Object.prototype, JE = ZE.hasOwnProperty;
function dy(e, t) {
  var n = Ae(e), r = !n && Ju(e), a = !n && !r && Cl(e), s = !n && !r && !a && lh(e), o = n || r || a || s, u = o ? sy(e.length, String) : [], f = u.length;
  for (var _ in e)
    (t || JE.call(e, _)) && !(o && // Safari 9 has enumerable `arguments.length` in strict mode.
    (_ == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    a && (_ == "offset" || _ == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    s && (_ == "buffer" || _ == "byteLength" || _ == "byteOffset") || // Skip index properties.
    zu(_, f))) && u.push(_);
  return u;
}
function cy(e, t) {
  return function(n) {
    return e(t(n));
  };
}
var QE = cy(Object.keys, Object), eO = Object.prototype, tO = eO.hasOwnProperty;
function oh(e) {
  if (!Ul(e))
    return QE(e);
  var t = [];
  for (var n in Object(e))
    tO.call(e, n) && n != "constructor" && t.push(n);
  return t;
}
function qa(e) {
  return Wr(e) ? dy(e) : oh(e);
}
var nO = Object.prototype, rO = nO.hasOwnProperty, Sf = bE(function(e, t) {
  if (Ul(t) || Wr(t)) {
    Wl(t, qa(t), e);
    return;
  }
  for (var n in t)
    rO.call(t, n) && Xu(e, n, t[n]);
});
function aO(e) {
  var t = [];
  if (e != null)
    for (var n in Object(e))
      t.push(n);
  return t;
}
var iO = Object.prototype, sO = iO.hasOwnProperty;
function lO(e) {
  if (!Qn(e))
    return aO(e);
  var t = Ul(e), n = [];
  for (var r in e)
    r == "constructor" && (t || !sO.call(e, r)) || n.push(r);
  return n;
}
function uh(e) {
  return Wr(e) ? dy(e, !0) : lO(e);
}
var oO = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, uO = /^\w*$/;
function dh(e, t) {
  if (Ae(e))
    return !1;
  var n = typeof e;
  return n == "number" || n == "symbol" || n == "boolean" || e == null || Fi(e) ? !0 : uO.test(e) || !oO.test(e) || t != null && e in Object(t);
}
var Il = Wi(Object, "create");
function dO() {
  this.__data__ = Il ? Il(null) : {}, this.size = 0;
}
function cO(e) {
  var t = this.has(e) && delete this.__data__[e];
  return this.size -= t ? 1 : 0, t;
}
var fO = "__lodash_hash_undefined__", hO = Object.prototype, pO = hO.hasOwnProperty;
function _O(e) {
  var t = this.__data__;
  if (Il) {
    var n = t[e];
    return n === fO ? void 0 : n;
  }
  return pO.call(t, e) ? t[e] : void 0;
}
var mO = Object.prototype, bO = mO.hasOwnProperty;
function vO(e) {
  var t = this.__data__;
  return Il ? t[e] !== void 0 : bO.call(t, e);
}
var yO = "__lodash_hash_undefined__";
function gO(e, t) {
  var n = this.__data__;
  return this.size += this.has(e) ? 0 : 1, n[e] = Il && t === void 0 ? yO : t, this;
}
function qi(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
qi.prototype.clear = dO;
qi.prototype.delete = cO;
qi.prototype.get = _O;
qi.prototype.has = vO;
qi.prototype.set = gO;
function SO() {
  this.__data__ = [], this.size = 0;
}
function ed(e, t) {
  for (var n = e.length; n--; )
    if (Ku(e[n][0], t))
      return n;
  return -1;
}
var AO = Array.prototype, wO = AO.splice;
function TO(e) {
  var t = this.__data__, n = ed(t, e);
  if (n < 0)
    return !1;
  var r = t.length - 1;
  return n == r ? t.pop() : wO.call(t, n, 1), --this.size, !0;
}
function xO(e) {
  var t = this.__data__, n = ed(t, e);
  return n < 0 ? void 0 : t[n][1];
}
function CO(e) {
  return ed(this.__data__, e) > -1;
}
function IO(e, t) {
  var n = this.__data__, r = ed(n, e);
  return r < 0 ? (++this.size, n.push([e, t])) : n[r][1] = t, this;
}
function Na(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
Na.prototype.clear = SO;
Na.prototype.delete = TO;
Na.prototype.get = xO;
Na.prototype.has = CO;
Na.prototype.set = IO;
var Ll = Wi(wr, "Map");
function LO() {
  this.size = 0, this.__data__ = {
    hash: new qi(),
    map: new (Ll || Na)(),
    string: new qi()
  };
}
function EO(e) {
  var t = typeof e;
  return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null;
}
function td(e, t) {
  var n = e.__data__;
  return EO(t) ? n[typeof t == "string" ? "string" : "hash"] : n.map;
}
function OO(e) {
  var t = td(this, e).delete(e);
  return this.size -= t ? 1 : 0, t;
}
function DO(e) {
  return td(this, e).get(e);
}
function PO(e) {
  return td(this, e).has(e);
}
function RO(e, t) {
  var n = td(this, e), r = n.size;
  return n.set(e, t), this.size += n.size == r ? 0 : 1, this;
}
function Va(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
Va.prototype.clear = LO;
Va.prototype.delete = OO;
Va.prototype.get = DO;
Va.prototype.has = PO;
Va.prototype.set = RO;
var BO = "Expected a function";
function ch(e, t) {
  if (typeof e != "function" || t != null && typeof t != "function")
    throw new TypeError(BO);
  var n = function() {
    var r = arguments, a = t ? t.apply(this, r) : r[0], s = n.cache;
    if (s.has(a))
      return s.get(a);
    var o = e.apply(this, r);
    return n.cache = s.set(a, o) || s, o;
  };
  return n.cache = new (ch.Cache || Va)(), n;
}
ch.Cache = Va;
var kO = 500;
function MO(e) {
  var t = ch(e, function(r) {
    return n.size === kO && n.clear(), r;
  }), n = t.cache;
  return t;
}
var FO = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, qO = /\\(\\)?/g, NO = MO(function(e) {
  var t = [];
  return e.charCodeAt(0) === 46 && t.push(""), e.replace(FO, function(n, r, a, s) {
    t.push(a ? s.replace(qO, "$1") : r || n);
  }), t;
});
function en(e) {
  return e == null ? "" : $l(e);
}
function fh(e, t) {
  return Ae(e) ? e : dh(e, t) ? [e] : NO(en(e));
}
var VO = 1 / 0;
function jl(e) {
  if (typeof e == "string" || Fi(e))
    return e;
  var t = e + "";
  return t == "0" && 1 / e == -VO ? "-0" : t;
}
function hh(e, t) {
  t = fh(t, e);
  for (var n = 0, r = t.length; e != null && n < r; )
    e = e[jl(t[n++])];
  return n && n == r ? e : void 0;
}
function de(e, t, n) {
  var r = e == null ? void 0 : hh(e, t);
  return r === void 0 ? n : r;
}
function ph(e, t) {
  for (var n = -1, r = t.length, a = e.length; ++n < r; )
    e[a + n] = t[n];
  return e;
}
var Cb = gr ? gr.isConcatSpreadable : void 0;
function HO(e) {
  return Ae(e) || Ju(e) || !!(Cb && e && e[Cb]);
}
function _h(e, t, n, r, a) {
  var s = -1, o = e.length;
  for (n || (n = HO), a || (a = []); ++s < o; ) {
    var u = e[s];
    n(u) ? ph(a, u) : r || (a[a.length] = u);
  }
  return a;
}
var mh = cy(Object.getPrototypeOf, Object), $O = "[object Object]", WO = Function.prototype, UO = Object.prototype, fy = WO.toString, jO = UO.hasOwnProperty, GO = fy.call(Object);
function dt(e) {
  if (!Sr(e) || Fa(e) != $O)
    return !1;
  var t = mh(e);
  if (t === null)
    return !0;
  var n = jO.call(t, "constructor") && t.constructor;
  return typeof n == "function" && n instanceof n && fy.call(n) == GO;
}
function hy(e, t, n) {
  var r = -1, a = e.length;
  t < 0 && (t = -t > a ? 0 : a + t), n = n > a ? a : n, n < 0 && (n += a), a = t > n ? 0 : n - t >>> 0, t >>>= 0;
  for (var s = Array(a); ++r < a; )
    s[r] = e[r + t];
  return s;
}
function py(e, t, n) {
  var r = e.length;
  return n = n === void 0 ? r : n, !t && n >= r ? e : hy(e, t, n);
}
var YO = "\\ud800-\\udfff", zO = "\\u0300-\\u036f", KO = "\\ufe20-\\ufe2f", XO = "\\u20d0-\\u20ff", ZO = zO + KO + XO, JO = "\\ufe0e\\ufe0f", QO = "\\u200d", eD = RegExp("[" + QO + YO + ZO + JO + "]");
function nd(e) {
  return eD.test(e);
}
function tD(e) {
  return e.split("");
}
var _y = "\\ud800-\\udfff", nD = "\\u0300-\\u036f", rD = "\\ufe20-\\ufe2f", aD = "\\u20d0-\\u20ff", iD = nD + rD + aD, sD = "\\ufe0e\\ufe0f", lD = "[" + _y + "]", Af = "[" + iD + "]", wf = "\\ud83c[\\udffb-\\udfff]", oD = "(?:" + Af + "|" + wf + ")", my = "[^" + _y + "]", by = "(?:\\ud83c[\\udde6-\\uddff]){2}", vy = "[\\ud800-\\udbff][\\udc00-\\udfff]", uD = "\\u200d", yy = oD + "?", gy = "[" + sD + "]?", dD = "(?:" + uD + "(?:" + [my, by, vy].join("|") + ")" + gy + yy + ")*", cD = gy + yy + dD, fD = "(?:" + [my + Af + "?", Af, by, vy, lD].join("|") + ")", hD = RegExp(wf + "(?=" + wf + ")|" + fD + cD, "g");
function pD(e) {
  return e.match(hD) || [];
}
function Sy(e) {
  return nd(e) ? pD(e) : tD(e);
}
function _D(e) {
  return function(t) {
    t = en(t);
    var n = nd(t) ? Sy(t) : void 0, r = n ? n[0] : t.charAt(0), a = n ? py(n, 1).join("") : t.slice(1);
    return r[e]() + a;
  };
}
var Ay = _D("toUpperCase");
function mD(e) {
  return Ay(en(e).toLowerCase());
}
function bD(e, t, n, r) {
  var a = -1, s = e == null ? 0 : e.length;
  for (r && s && (n = e[++a]); ++a < s; )
    n = t(n, e[a], a, e);
  return n;
}
var vD = wr.isFinite, yD = Math.min;
function wy(e) {
  var t = Math[e];
  return function(n, r) {
    if (n = Ts(n), r = r == null ? 0 : yD(pa(r), 292), r && vD(n)) {
      var a = (en(n) + "e").split("e"), s = t(a[0] + "e" + (+a[1] + r));
      return a = (en(s) + "e").split("e"), +(a[0] + "e" + (+a[1] - r));
    }
    return t(n);
  };
}
var gD = wy("ceil");
function Ty(e, t, n) {
  return e === e && (n !== void 0 && (e = e <= n ? e : n), e = e >= t ? e : t), e;
}
function SD() {
  this.__data__ = new Na(), this.size = 0;
}
function AD(e) {
  var t = this.__data__, n = t.delete(e);
  return this.size = t.size, n;
}
function wD(e) {
  return this.__data__.get(e);
}
function TD(e) {
  return this.__data__.has(e);
}
var xD = 200;
function CD(e, t) {
  var n = this.__data__;
  if (n instanceof Na) {
    var r = n.__data__;
    if (!Ll || r.length < xD - 1)
      return r.push([e, t]), this.size = ++n.size, this;
    n = this.__data__ = new Va(r);
  }
  return n.set(e, t), this.size = n.size, this;
}
function ia(e) {
  var t = this.__data__ = new Na(e);
  this.size = t.size;
}
ia.prototype.clear = SD;
ia.prototype.delete = AD;
ia.prototype.get = wD;
ia.prototype.has = TD;
ia.prototype.set = CD;
function ID(e, t) {
  return e && Wl(t, qa(t), e);
}
function LD(e, t) {
  return e && Wl(t, uh(t), e);
}
var xy = typeof exports == "object" && exports && !exports.nodeType && exports, Ib = xy && typeof module == "object" && module && !module.nodeType && module, ED = Ib && Ib.exports === xy, Lb = ED ? wr.Buffer : void 0, Eb = Lb ? Lb.allocUnsafe : void 0;
function OD(e, t) {
  if (t)
    return e.slice();
  var n = e.length, r = Eb ? Eb(n) : new e.constructor(n);
  return e.copy(r), r;
}
function Cy(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, a = 0, s = []; ++n < r; ) {
    var o = e[n];
    t(o, n, e) && (s[a++] = o);
  }
  return s;
}
function Iy() {
  return [];
}
var DD = Object.prototype, PD = DD.propertyIsEnumerable, Ob = Object.getOwnPropertySymbols, bh = Ob ? function(e) {
  return e == null ? [] : (e = Object(e), Cy(Ob(e), function(t) {
    return PD.call(e, t);
  }));
} : Iy;
function RD(e, t) {
  return Wl(e, bh(e), t);
}
var BD = Object.getOwnPropertySymbols, Ly = BD ? function(e) {
  for (var t = []; e; )
    ph(t, bh(e)), e = mh(e);
  return t;
} : Iy;
function kD(e, t) {
  return Wl(e, Ly(e), t);
}
function Ey(e, t, n) {
  var r = t(e);
  return Ae(e) ? r : ph(r, n(e));
}
function Tf(e) {
  return Ey(e, qa, bh);
}
function MD(e) {
  return Ey(e, uh, Ly);
}
var xf = Wi(wr, "DataView"), Cf = Wi(wr, "Promise"), vs = Wi(wr, "Set"), Db = "[object Map]", FD = "[object Object]", Pb = "[object Promise]", Rb = "[object Set]", Bb = "[object WeakMap]", kb = "[object DataView]", qD = $i(xf), ND = $i(Ll), VD = $i(Cf), HD = $i(vs), $D = $i(gf), zn = Fa;
(xf && zn(new xf(new ArrayBuffer(1))) != kb || Ll && zn(new Ll()) != Db || Cf && zn(Cf.resolve()) != Pb || vs && zn(new vs()) != Rb || gf && zn(new gf()) != Bb) && (zn = function(e) {
  var t = Fa(e), n = t == FD ? e.constructor : void 0, r = n ? $i(n) : "";
  if (r)
    switch (r) {
      case qD:
        return kb;
      case ND:
        return Db;
      case VD:
        return Pb;
      case HD:
        return Rb;
      case $D:
        return Bb;
    }
  return t;
});
var WD = Object.prototype, UD = WD.hasOwnProperty;
function jD(e) {
  var t = e.length, n = new e.constructor(t);
  return t && typeof e[0] == "string" && UD.call(e, "index") && (n.index = e.index, n.input = e.input), n;
}
var Cu = wr.Uint8Array;
function vh(e) {
  var t = new e.constructor(e.byteLength);
  return new Cu(t).set(new Cu(e)), t;
}
function GD(e, t) {
  var n = t ? vh(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.byteLength);
}
var YD = /\w*$/;
function zD(e) {
  var t = new e.constructor(e.source, YD.exec(e));
  return t.lastIndex = e.lastIndex, t;
}
var Mb = gr ? gr.prototype : void 0, Fb = Mb ? Mb.valueOf : void 0;
function KD(e) {
  return Fb ? Object(Fb.call(e)) : {};
}
function XD(e, t) {
  var n = t ? vh(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.length);
}
var ZD = "[object Boolean]", JD = "[object Date]", QD = "[object Map]", eP = "[object Number]", tP = "[object RegExp]", nP = "[object Set]", rP = "[object String]", aP = "[object Symbol]", iP = "[object ArrayBuffer]", sP = "[object DataView]", lP = "[object Float32Array]", oP = "[object Float64Array]", uP = "[object Int8Array]", dP = "[object Int16Array]", cP = "[object Int32Array]", fP = "[object Uint8Array]", hP = "[object Uint8ClampedArray]", pP = "[object Uint16Array]", _P = "[object Uint32Array]";
function mP(e, t, n) {
  var r = e.constructor;
  switch (t) {
    case iP:
      return vh(e);
    case ZD:
    case JD:
      return new r(+e);
    case sP:
      return GD(e, n);
    case lP:
    case oP:
    case uP:
    case dP:
    case cP:
    case fP:
    case hP:
    case pP:
    case _P:
      return XD(e, n);
    case QD:
      return new r();
    case eP:
    case rP:
      return new r(e);
    case tP:
      return zD(e);
    case nP:
      return new r();
    case aP:
      return KD(e);
  }
}
function bP(e) {
  return typeof e.constructor == "function" && !Ul(e) ? JL(mh(e)) : {};
}
var vP = "[object Map]";
function yP(e) {
  return Sr(e) && zn(e) == vP;
}
var qb = xs && xs.isMap, gP = qb ? Qu(qb) : yP, SP = "[object Set]";
function AP(e) {
  return Sr(e) && zn(e) == SP;
}
var Nb = xs && xs.isSet, wP = Nb ? Qu(Nb) : AP, TP = 1, xP = 2, CP = 4, Oy = "[object Arguments]", IP = "[object Array]", LP = "[object Boolean]", EP = "[object Date]", OP = "[object Error]", Dy = "[object Function]", DP = "[object GeneratorFunction]", PP = "[object Map]", RP = "[object Number]", Py = "[object Object]", BP = "[object RegExp]", kP = "[object Set]", MP = "[object String]", FP = "[object Symbol]", qP = "[object WeakMap]", NP = "[object ArrayBuffer]", VP = "[object DataView]", HP = "[object Float32Array]", $P = "[object Float64Array]", WP = "[object Int8Array]", UP = "[object Int16Array]", jP = "[object Int32Array]", GP = "[object Uint8Array]", YP = "[object Uint8ClampedArray]", zP = "[object Uint16Array]", KP = "[object Uint32Array]", Ct = {};
Ct[Oy] = Ct[IP] = Ct[NP] = Ct[VP] = Ct[LP] = Ct[EP] = Ct[HP] = Ct[$P] = Ct[WP] = Ct[UP] = Ct[jP] = Ct[PP] = Ct[RP] = Ct[Py] = Ct[BP] = Ct[kP] = Ct[MP] = Ct[FP] = Ct[GP] = Ct[YP] = Ct[zP] = Ct[KP] = !0;
Ct[OP] = Ct[Dy] = Ct[qP] = !1;
function gl(e, t, n, r, a, s) {
  var o, u = t & TP, f = t & xP, _ = t & CP;
  if (o !== void 0)
    return o;
  if (!Qn(e))
    return e;
  var m = Ae(e);
  if (m) {
    if (o = jD(e), !u)
      return tE(e, o);
  } else {
    var b = zn(e), v = b == Dy || b == DP;
    if (Cl(e))
      return OD(e, u);
    if (b == Py || b == Oy || v && !a) {
      if (o = f || v ? {} : bP(e), !u)
        return f ? kD(e, LD(o, e)) : RD(e, ID(o, e));
    } else {
      if (!Ct[b])
        return a ? e : {};
      o = mP(e, b, u);
    }
  }
  s || (s = new ia());
  var g = s.get(e);
  if (g)
    return g;
  s.set(e, o), wP(e) ? e.forEach(function(w) {
    o.add(gl(w, t, n, w, e, s));
  }) : gP(e) && e.forEach(function(w, T) {
    o.set(T, gl(w, t, n, T, e, s));
  });
  var S = _ ? f ? MD : Tf : f ? uh : qa, A = m ? void 0 : S(e);
  return ny(A || e, function(w, T) {
    A && (T = w, w = e[T]), Xu(o, T, gl(w, t, n, T, e, s));
  }), o;
}
var XP = 4;
function Ry(e) {
  return gl(e, XP);
}
var ZP = 1, JP = 4;
function Se(e) {
  return gl(e, ZP | JP);
}
var QP = "__lodash_hash_undefined__";
function eR(e) {
  return this.__data__.set(e, QP), this;
}
function tR(e) {
  return this.__data__.has(e);
}
function Cs(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.__data__ = new Va(); ++t < n; )
    this.add(e[t]);
}
Cs.prototype.add = Cs.prototype.push = eR;
Cs.prototype.has = tR;
function nR(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r; )
    if (t(e[n], n, e))
      return !0;
  return !1;
}
function yh(e, t) {
  return e.has(t);
}
var rR = 1, aR = 2;
function By(e, t, n, r, a, s) {
  var o = n & rR, u = e.length, f = t.length;
  if (u != f && !(o && f > u))
    return !1;
  var _ = s.get(e), m = s.get(t);
  if (_ && m)
    return _ == t && m == e;
  var b = -1, v = !0, g = n & aR ? new Cs() : void 0;
  for (s.set(e, t), s.set(t, e); ++b < u; ) {
    var S = e[b], A = t[b];
    if (r)
      var w = o ? r(A, S, b, t, e, s) : r(S, A, b, e, t, s);
    if (w !== void 0) {
      if (w)
        continue;
      v = !1;
      break;
    }
    if (g) {
      if (!nR(t, function(T, I) {
        if (!yh(g, I) && (S === T || a(S, T, n, r, s)))
          return g.push(I);
      })) {
        v = !1;
        break;
      }
    } else if (!(S === A || a(S, A, n, r, s))) {
      v = !1;
      break;
    }
  }
  return s.delete(e), s.delete(t), v;
}
function iR(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r, a) {
    n[++t] = [a, r];
  }), n;
}
function gh(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r) {
    n[++t] = r;
  }), n;
}
var sR = 1, lR = 2, oR = "[object Boolean]", uR = "[object Date]", dR = "[object Error]", cR = "[object Map]", fR = "[object Number]", hR = "[object RegExp]", pR = "[object Set]", _R = "[object String]", mR = "[object Symbol]", bR = "[object ArrayBuffer]", vR = "[object DataView]", Vb = gr ? gr.prototype : void 0, ef = Vb ? Vb.valueOf : void 0;
function yR(e, t, n, r, a, s, o) {
  switch (n) {
    case vR:
      if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset)
        return !1;
      e = e.buffer, t = t.buffer;
    case bR:
      return !(e.byteLength != t.byteLength || !s(new Cu(e), new Cu(t)));
    case oR:
    case uR:
    case fR:
      return Ku(+e, +t);
    case dR:
      return e.name == t.name && e.message == t.message;
    case hR:
    case _R:
      return e == t + "";
    case cR:
      var u = iR;
    case pR:
      var f = r & sR;
      if (u || (u = gh), e.size != t.size && !f)
        return !1;
      var _ = o.get(e);
      if (_)
        return _ == t;
      r |= lR, o.set(e, t);
      var m = By(u(e), u(t), r, a, s, o);
      return o.delete(e), m;
    case mR:
      if (ef)
        return ef.call(e) == ef.call(t);
  }
  return !1;
}
var gR = 1, SR = Object.prototype, AR = SR.hasOwnProperty;
function wR(e, t, n, r, a, s) {
  var o = n & gR, u = Tf(e), f = u.length, _ = Tf(t), m = _.length;
  if (f != m && !o)
    return !1;
  for (var b = f; b--; ) {
    var v = u[b];
    if (!(o ? v in t : AR.call(t, v)))
      return !1;
  }
  var g = s.get(e), S = s.get(t);
  if (g && S)
    return g == t && S == e;
  var A = !0;
  s.set(e, t), s.set(t, e);
  for (var w = o; ++b < f; ) {
    v = u[b];
    var T = e[v], I = t[v];
    if (r)
      var C = o ? r(I, T, v, t, e, s) : r(T, I, v, e, t, s);
    if (!(C === void 0 ? T === I || a(T, I, n, r, s) : C)) {
      A = !1;
      break;
    }
    w || (w = v == "constructor");
  }
  if (A && !w) {
    var E = e.constructor, P = t.constructor;
    E != P && "constructor" in e && "constructor" in t && !(typeof E == "function" && E instanceof E && typeof P == "function" && P instanceof P) && (A = !1);
  }
  return s.delete(e), s.delete(t), A;
}
var TR = 1, Hb = "[object Arguments]", $b = "[object Array]", nu = "[object Object]", xR = Object.prototype, Wb = xR.hasOwnProperty;
function CR(e, t, n, r, a, s) {
  var o = Ae(e), u = Ae(t), f = o ? $b : zn(e), _ = u ? $b : zn(t);
  f = f == Hb ? nu : f, _ = _ == Hb ? nu : _;
  var m = f == nu, b = _ == nu, v = f == _;
  if (v && Cl(e)) {
    if (!Cl(t))
      return !1;
    o = !0, m = !1;
  }
  if (v && !m)
    return s || (s = new ia()), o || lh(e) ? By(e, t, n, r, a, s) : yR(e, t, f, n, r, a, s);
  if (!(n & TR)) {
    var g = m && Wb.call(e, "__wrapped__"), S = b && Wb.call(t, "__wrapped__");
    if (g || S) {
      var A = g ? e.value() : e, w = S ? t.value() : t;
      return s || (s = new ia()), a(A, w, n, r, s);
    }
  }
  return v ? (s || (s = new ia()), wR(e, t, n, r, a, s)) : !1;
}
function rd(e, t, n, r, a) {
  return e === t ? !0 : e == null || t == null || !Sr(e) && !Sr(t) ? e !== e && t !== t : CR(e, t, n, r, rd, a);
}
var IR = 1, LR = 2;
function ky(e, t, n, r) {
  var a = n.length, s = a;
  if (e == null)
    return !s;
  for (e = Object(e); a--; ) {
    var o = n[a];
    if (o[2] ? o[1] !== e[o[0]] : !(o[0] in e))
      return !1;
  }
  for (; ++a < s; ) {
    o = n[a];
    var u = o[0], f = e[u], _ = o[1];
    if (o[2]) {
      if (f === void 0 && !(u in e))
        return !1;
    } else {
      var m = new ia(), b;
      if (!(b === void 0 ? rd(_, f, IR | LR, r, m) : b))
        return !1;
    }
  }
  return !0;
}
function My(e) {
  return e === e && !Qn(e);
}
function Fy(e) {
  for (var t = qa(e), n = t.length; n--; ) {
    var r = t[n], a = e[r];
    t[n] = [r, a, My(a)];
  }
  return t;
}
function qy(e, t) {
  return function(n) {
    return n == null ? !1 : n[e] === t && (t !== void 0 || e in Object(n));
  };
}
function ER(e) {
  var t = Fy(e);
  return t.length == 1 && t[0][2] ? qy(t[0][0], t[0][1]) : function(n) {
    return n === e || ky(n, e, t);
  };
}
function OR(e, t) {
  return e != null && t in Object(e);
}
function DR(e, t, n) {
  t = fh(t, e);
  for (var r = -1, a = t.length, s = !1; ++r < a; ) {
    var o = jl(t[r]);
    if (!(s = e != null && n(e, o)))
      break;
    e = e[o];
  }
  return s || ++r != a ? s : (a = e == null ? 0 : e.length, !!a && sh(a) && zu(o, a) && (Ae(e) || Ju(e)));
}
function PR(e, t) {
  return e != null && DR(e, t, OR);
}
var RR = 1, BR = 2;
function kR(e, t) {
  return dh(e) && My(t) ? qy(jl(e), t) : function(n) {
    var r = de(n, e);
    return r === void 0 && r === t ? PR(n, e) : rd(t, r, RR | BR);
  };
}
function Ny(e) {
  return function(t) {
    return t == null ? void 0 : t[e];
  };
}
function MR(e) {
  return function(t) {
    return hh(t, e);
  };
}
function FR(e) {
  return dh(e) ? Ny(jl(e)) : MR(e);
}
function Ha(e) {
  return typeof e == "function" ? e : e == null ? Hi : typeof e == "object" ? Ae(e) ? kR(e[0], e[1]) : ER(e) : FR(e);
}
function qR(e, t, n, r) {
  for (var a = -1, s = e == null ? 0 : e.length; ++a < s; ) {
    var o = e[a];
    t(r, o, n(o), e);
  }
  return r;
}
function Vy(e) {
  return function(t, n, r) {
    for (var a = -1, s = Object(t), o = r(t), u = o.length; u--; ) {
      var f = o[e ? u : ++a];
      if (n(s[f], f, s) === !1)
        break;
    }
    return t;
  };
}
var NR = Vy();
function VR(e, t) {
  return e && NR(e, t, qa);
}
function Hy(e, t) {
  return function(n, r) {
    if (n == null)
      return n;
    if (!Wr(n))
      return e(n, r);
    for (var a = n.length, s = t ? a : -1, o = Object(n); (t ? s-- : ++s < a) && r(o[s], s, o) !== !1; )
      ;
    return n;
  };
}
var Ds = Hy(VR);
function HR(e, t, n, r) {
  return Ds(e, function(a, s, o) {
    t(r, a, n(a), o);
  }), r;
}
function $R(e, t) {
  return function(n, r) {
    var a = Ae(n) ? qR : HR, s = {};
    return a(n, e, Ha(r), s);
  };
}
var tf = function() {
  return wr.Date.now();
}, WR = "Expected a function", UR = Math.max, jR = Math.min;
function El(e, t, n) {
  var r, a, s, o, u, f, _ = 0, m = !1, b = !1, v = !0;
  if (typeof e != "function")
    throw new TypeError(WR);
  t = Ts(t) || 0, Qn(n) && (m = !!n.leading, b = "maxWait" in n, s = b ? UR(Ts(n.maxWait) || 0, t) : s, v = "trailing" in n ? !!n.trailing : v);
  function g(M) {
    var k = r, F = a;
    return r = a = void 0, _ = M, o = e.apply(F, k), o;
  }
  function S(M) {
    return _ = M, u = setTimeout(T, t), m ? g(M) : o;
  }
  function A(M) {
    var k = M - f, F = M - _, D = t - k;
    return b ? jR(D, s - F) : D;
  }
  function w(M) {
    var k = M - f, F = M - _;
    return f === void 0 || k >= t || k < 0 || b && F >= s;
  }
  function T() {
    var M = tf();
    if (w(M))
      return I(M);
    u = setTimeout(T, A(M));
  }
  function I(M) {
    return u = void 0, v && r ? g(M) : (r = a = void 0, o);
  }
  function C() {
    u !== void 0 && clearTimeout(u), _ = 0, r = f = a = u = void 0;
  }
  function E() {
    return u === void 0 ? o : I(tf());
  }
  function P() {
    var M = tf(), k = w(M);
    if (r = arguments, a = this, f = M, k) {
      if (u === void 0)
        return S(f);
      if (b)
        return clearTimeout(u), u = setTimeout(T, t), g(f);
    }
    return u === void 0 && (u = setTimeout(T, t)), o;
  }
  return P.cancel = C, P.flush = E, P;
}
function If(e) {
  return Sr(e) && Wr(e);
}
var GR = 200;
function YR(e, t, n, r) {
  var a = -1, s = iy, o = !0, u = e.length, f = [], _ = t.length;
  if (!u)
    return f;
  t.length >= GR && (s = yh, o = !1, t = new Cs(t));
  e:
    for (; ++a < u; ) {
      var m = e[a], b = m;
      if (m = m !== 0 ? m : 0, o && b === b) {
        for (var v = _; v--; )
          if (t[v] === b)
            continue e;
        f.push(m);
      } else s(t, b, r) || f.push(m);
    }
  return f;
}
var zR = Zu(function(e, t) {
  return If(e) ? YR(e, _h(t, 1, If, !0)) : [];
});
function Is(e) {
  var t = e == null ? 0 : e.length;
  return t ? e[t - 1] : void 0;
}
function Sh(e) {
  return typeof e == "function" ? e : Hi;
}
function Y(e, t) {
  var n = Ae(e) ? ny : Ds;
  return n(e, Sh(t));
}
function KR(e, t) {
  for (var n = e == null ? 0 : e.length; n-- && t(e[n], n, e) !== !1; )
    ;
  return e;
}
var XR = Vy(!0);
function ZR(e, t) {
  return e && XR(e, t, qa);
}
var JR = Hy(ZR, !0);
function QR(e, t) {
  var n = Ae(e) ? KR : JR;
  return n(e, Sh(t));
}
function eB(e, t, n) {
  e = en(e), t = $l(t);
  var r = e.length;
  n = n === void 0 ? r : Ty(pa(n), 0, r);
  var a = n;
  return n -= t.length, n >= 0 && e.slice(n, a) == t;
}
var $y = /[\\^$.*+?()[\]{}|]/g, tB = RegExp($y.source);
function Gl(e) {
  return e = en(e), e && tB.test(e) ? e.replace($y, "\\$&") : e;
}
function nB(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r; )
    if (!t(e[n], n, e))
      return !1;
  return !0;
}
function rB(e, t) {
  var n = !0;
  return Ds(e, function(r, a, s) {
    return n = !!t(r, a, s), n;
  }), n;
}
function Wy(e, t, n) {
  var r = Ae(e) ? nB : rB;
  return r(e, Ha(t));
}
function aB(e, t) {
  var n = [];
  return Ds(e, function(r, a, s) {
    t(r, a, s) && n.push(r);
  }), n;
}
function Gt(e, t) {
  var n = Ae(e) ? Cy : aB;
  return n(e, Ha(t));
}
function iB(e) {
  return function(t, n, r) {
    var a = Object(t);
    if (!Wr(t)) {
      var s = Ha(n);
      t = qa(t), n = function(u) {
        return s(a[u], u, a);
      };
    }
    var o = e(t, n, r);
    return o > -1 ? a[s ? t[o] : o] : void 0;
  };
}
var sB = Math.max;
function Uy(e, t, n) {
  var r = e == null ? 0 : e.length;
  if (!r)
    return -1;
  var a = n == null ? 0 : pa(n);
  return a < 0 && (a = sB(r + a, 0)), ry(e, Ha(t), a);
}
var Ah = iB(Uy);
function jy(e, t) {
  var n = -1, r = Wr(e) ? Array(e.length) : [];
  return Ds(e, function(a, s, o) {
    r[++n] = t(a, s, o);
  }), r;
}
function Yn(e, t) {
  var n = Ae(e) ? bs : jy;
  return n(e, Ha(t));
}
function lB(e, t) {
  return e > t;
}
var oB = "[object String]";
function yt(e) {
  return typeof e == "string" || !Ae(e) && Sr(e) && Fa(e) == oB;
}
function uB(e, t) {
  return bs(t, function(n) {
    return e[n];
  });
}
function wh(e) {
  return e == null ? [] : uB(e, qa(e));
}
var dB = Math.max;
function Lf(e, t, n, r) {
  e = Wr(e) ? e : wh(e), n = n && !r ? pa(n) : 0;
  var a = e.length;
  return n < 0 && (n = dB(a + n, 0)), yt(e) ? n <= a && e.indexOf(t, n) > -1 : !!a && ay(e, t, n) > -1;
}
var cB = "[object Map]", fB = "[object Set]", hB = Object.prototype, pB = hB.hasOwnProperty;
function Mn(e) {
  if (e == null)
    return !0;
  if (Wr(e) && (Ae(e) || typeof e == "string" || typeof e.splice == "function" || Cl(e) || lh(e) || Ju(e)))
    return !e.length;
  var t = zn(e);
  if (t == cB || t == fB)
    return !e.size;
  if (Ul(e))
    return !oh(e).length;
  for (var n in e)
    if (pB.call(e, n))
      return !1;
  return !0;
}
function Gy(e, t) {
  return rd(e, t);
}
function hi(e) {
  return typeof e == "number" && e == pa(e);
}
function _B(e, t) {
  return e === t || ky(e, t, Fy(t));
}
var mB = "[object Number]";
function qn(e) {
  return typeof e == "number" || Sr(e) && Fa(e) == mB;
}
function bB(e) {
  return qn(e) && e != +e;
}
function ae(e) {
  return e == null;
}
function qe(e) {
  return e === void 0;
}
var ui = $R(function(e, t, n) {
  ih(e, n, t);
});
function vB(e, t) {
  return e < t;
}
function Yy(e, t, n) {
  for (var r = -1, a = e.length; ++r < a; ) {
    var s = e[r], o = t(s);
    if (o != null && (u === void 0 ? o === o && !Fi(o) : n(o, u)))
      var u = o, f = s;
  }
  return f;
}
function yB(e) {
  return e.length ? Yy(e, Hi, lB) : void 0;
}
function gB(e) {
  return e && e.length ? Yy(e, Hi, vB) : void 0;
}
function SB(e, t, n, r) {
  if (!Qn(e))
    return e;
  t = fh(t, e);
  for (var a = -1, s = t.length, o = s - 1, u = e; u != null && ++a < s; ) {
    var f = jl(t[a]), _ = n;
    if (f === "__proto__" || f === "constructor" || f === "prototype")
      return e;
    if (a != o) {
      var m = u[f];
      _ = void 0, _ === void 0 && (_ = Qn(m) ? m : zu(t[a + 1]) ? [] : {});
    }
    Xu(u, f, _), u = u[f];
  }
  return e;
}
function AB(e, t) {
  var n = e.length;
  for (e.sort(t); n--; )
    e[n] = e[n].value;
  return e;
}
function wB(e, t) {
  if (e !== t) {
    var n = e !== void 0, r = e === null, a = e === e, s = Fi(e), o = t !== void 0, u = t === null, f = t === t, _ = Fi(t);
    if (!u && !_ && !s && e > t || s && o && f && !u && !_ || r && o && f || !n && f || !a)
      return 1;
    if (!r && !s && !_ && e < t || _ && n && a && !r && !s || u && n && a || !o && a || !f)
      return -1;
  }
  return 0;
}
function TB(e, t, n) {
  for (var r = -1, a = e.criteria, s = t.criteria, o = a.length, u = n.length; ++r < o; ) {
    var f = wB(a[r], s[r]);
    if (f) {
      if (r >= u)
        return f;
      var _ = n[r];
      return f * (_ == "desc" ? -1 : 1);
    }
  }
  return e.index - t.index;
}
function zy(e, t, n) {
  t.length ? t = bs(t, function(s) {
    return Ae(s) ? function(o) {
      return hh(o, s.length === 1 ? s[0] : s);
    } : s;
  }) : t = [Hi];
  var r = -1;
  t = bs(t, Qu(Ha));
  var a = jy(e, function(s, o, u) {
    var f = bs(t, function(_) {
      return _(s);
    });
    return { criteria: f, index: ++r, value: s };
  });
  return AB(a, function(s, o) {
    return TB(s, o, n);
  });
}
function Th(e, t, n, r) {
  return e == null ? [] : (Ae(t) || (t = t == null ? [] : [t]), n = n, Ae(n) || (n = n == null ? [] : [n]), zy(e, t, n));
}
var xB = 9007199254740991, CB = Math.floor;
function Ef(e, t) {
  var n = "";
  if (!e || t < 1 || t > xB)
    return n;
  do
    t % 2 && (n += e), t = CB(t / 2), t && (e += e);
  while (t);
  return n;
}
var IB = Ny("length"), Ky = "\\ud800-\\udfff", LB = "\\u0300-\\u036f", EB = "\\ufe20-\\ufe2f", OB = "\\u20d0-\\u20ff", DB = LB + EB + OB, PB = "\\ufe0e\\ufe0f", RB = "[" + Ky + "]", Of = "[" + DB + "]", Df = "\\ud83c[\\udffb-\\udfff]", BB = "(?:" + Of + "|" + Df + ")", Xy = "[^" + Ky + "]", Zy = "(?:\\ud83c[\\udde6-\\uddff]){2}", Jy = "[\\ud800-\\udbff][\\udc00-\\udfff]", kB = "\\u200d", Qy = BB + "?", eg = "[" + PB + "]?", MB = "(?:" + kB + "(?:" + [Xy, Zy, Jy].join("|") + ")" + eg + Qy + ")*", FB = eg + Qy + MB, qB = "(?:" + [Xy + Of + "?", Of, Zy, Jy, RB].join("|") + ")", Ub = RegExp(Df + "(?=" + Df + ")|" + qB + FB, "g");
function NB(e) {
  for (var t = Ub.lastIndex = 0; Ub.test(e); )
    ++t;
  return t;
}
function xh(e) {
  return nd(e) ? NB(e) : IB(e);
}
var VB = Math.ceil;
function HB(e, t) {
  t = t === void 0 ? " " : $l(t);
  var n = t.length;
  if (n < 2)
    return n ? Ef(t, e) : t;
  var r = Ef(t, VB(e / xh(t)));
  return nd(t) ? py(Sy(r), 0, e).join("") : r.slice(0, e);
}
function $B(e, t, n) {
  e = en(e), t = pa(t);
  var r = t ? xh(e) : 0;
  return t && r < t ? HB(t - r, n) + e : e;
}
var WB = Math.ceil, UB = Math.max;
function jB(e, t, n, r) {
  for (var a = -1, s = UB(WB((t - e) / (n || 1)), 0), o = Array(s); s--; )
    o[++a] = e, e += n;
  return o;
}
function GB(e) {
  return function(t, n, r) {
    return r && typeof r != "number" && xu(t, n, r) && (n = r = void 0), t = fu(t), n === void 0 ? (n = t, t = 0) : n = fu(n), r = r === void 0 ? t < n ? 1 : -1 : fu(r), jB(t, n, r);
  };
}
var YB = GB();
function zB(e, t, n, r, a) {
  return a(e, function(s, o, u) {
    n = r ? (r = !1, s) : t(n, s, o, u);
  }), n;
}
function KB(e, t, n) {
  var r = Ae(e) ? bD : zB, a = arguments.length < 3;
  return r(e, Ha(t), n, a, Ds);
}
function XB(e, t, n) {
  return t === void 0 ? t = 1 : t = pa(t), Ef(en(e), t);
}
var ZB = wy("round");
function Ch(e, t, n) {
  return e == null ? e : SB(e, t, n);
}
var JB = "[object Map]", QB = "[object Set]";
function Ps(e) {
  if (e == null)
    return 0;
  if (Wr(e))
    return yt(e) ? xh(e) : e.length;
  var t = zn(e);
  return t == JB || t == QB ? e.size : oh(e).length;
}
var Pf = Zu(function(e, t) {
  if (e == null)
    return [];
  var n = t.length;
  return n > 1 && xu(e, t[0], t[1]) ? t = [] : n > 2 && xu(t[0], t[1], t[2]) && (t = [t[0]]), zy(e, _h(t), []);
});
function Ih(e, t, n) {
  return e = en(e), n = n == null ? 0 : Ty(pa(n), 0, e.length), t = $l(t), e.slice(n, n + t.length) == t;
}
function tg(e, t, n) {
  return e && e.length ? (t = t === void 0 ? 1 : pa(t), hy(e, 0, t < 0 ? 0 : t)) : [];
}
var ek = 9007199254740991, nf = 4294967295, tk = Math.min;
function br(e, t) {
  if (e = pa(e), e < 1 || e > ek)
    return [];
  var n = nf, r = tk(e, nf);
  t = Sh(t), e -= nf;
  for (var a = sy(r, t); ++n < e; )
    t(n);
  return a;
}
function ng(e) {
  return en(e).toLowerCase();
}
function rg(e) {
  return en(e).toUpperCase();
}
var nk = 1 / 0, rk = vs && 1 / gh(new vs([, -0]))[1] == nk ? function(e) {
  return new vs(e);
} : eE, ak = 200;
function Lh(e, t, n) {
  var r = -1, a = iy, s = e.length, o = !0, u = [], f = u;
  if (s >= ak) {
    var _ = t ? null : rk(e);
    if (_)
      return gh(_);
    o = !1, a = yh, f = new Cs();
  } else
    f = t ? [] : u;
  e:
    for (; ++r < s; ) {
      var m = e[r], b = t ? t(m) : m;
      if (m = m !== 0 ? m : 0, o && b === b) {
        for (var v = f.length; v--; )
          if (f[v] === b)
            continue e;
        t && f.push(b), u.push(m);
      } else a(f, b, n) || (f !== u && f.push(b), u.push(m));
    }
  return u;
}
var ik = Zu(function(e) {
  return Lh(_h(e, 1, If, !0));
});
function sk(e) {
  return e && e.length ? Lh(e) : [];
}
function ag(e, t) {
  return e && e.length ? Lh(e, Ha(t)) : [];
}
var lk = 0;
function mt(e) {
  var t = ++lk;
  return en(e) + t;
}
Qv.sanitize;
function Iu(e) {
  return Qv.sanitize(ok(e), { ADD_ATTR: ["target"] });
}
function ok(e) {
  return qn(e) ? en(e) : e;
}
function vU(e) {
  return !Ae(e) || !e.length ? !1 : Wy(e, yt);
}
function uk(e) {
  return !Ae(e) || !e.length ? !1 : Wy(e, Ae);
}
function dk(e) {
  const t = Object.keys(e);
  return t.length === 0 ? "" : `<ul class="a_list_without_styles">${t.map((r) => `<li>${e[r]}</li>`).join("")}</ul>`;
}
function ck({ array: e, keyChildren: t }) {
  return ig({ array: e, keyChildren: t, count: 0 });
}
function ig({ array: e, keyChildren: t, count: n = 0 }) {
  return Ae(e) && Y(e, (r) => {
    n++;
    const a = de(r, t);
    n = ig({ array: a, keyChildren: t, count: n });
  }), n;
}
const sn = {
  beforeMount(e, t) {
    e.innerHTML = ae(t.value) || t.value === "" ? "" : Iu(t.value);
  },
  updated(e, t) {
    e.innerHTML = ae(t.value) || t.value === "" ? "" : Iu(t.value);
  }
};
function fk(e, {
  classButtonLocal: t = d(() => {
  }),
  isOpen: n = d(() => !1),
  toggleLocal: r = () => {
  },
  currentId: a = d(() => "")
}) {
  const s = p(e, "item"), o = fe("classButton"), u = fe("disabled"), f = fe("id"), _ = fe("isCaret"), m = fe("keyContent"), b = fe("keyLabel"), v = fe("readonly"), g = fe("withGap"), S = d(() => !!(u.value || s.value.disabled)), A = d(() => qe(s.value.isCaret) ? _.value : s.value.isCaret), w = d(() => v.value || s.value.readonly), T = d(() => `${f.value}_${a.value}`), I = d(() => w.value ? "div" : "a"), C = d(() => {
    const M = {
      class: ["a_accordion__button", o.value, t.value, {
        a_accordion__button_collapsed: !n.value,
        a_accordion__button_has_not_caret: !A.value,
        a_accordion__button_with_gap: g.value,
        readonly: w.value
      }],
      id: s.value.id
    };
    return w.value || (M.ariaExpanded = n.value, M["aria-controls"] = T.value, M.rolw = "button", M.tabindex = 0, M.disabled = S.value, M.onClick = r), M;
  }), E = d(() => b.value ? de(s.value, b.value) : ""), P = d(() => m.value ? de(s.value, m.value) : "");
  return {
    buttonAttributes: C,
    buttonTag: I,
    contentLocal: P,
    idForCollapse: T,
    labelLocal: E
  };
}
function hk(e) {
  const t = p(e, "item"), n = fe("keyChildren"), r = d(() => de(t.value, n.value, []) || []), a = d(() => r.value.length !== 0);
  return {
    children: r,
    hasChildren: a
  };
}
function pk(e) {
  const t = p(e, "item"), n = fe("keyClassBody"), r = fe("keyClassHeader"), a = fe("keyClassButton"), s = d(() => {
    if (n.value)
      return de(t.value, n.value);
  }), o = d(() => {
    if (r.value)
      return de(t.value, r.value);
  }), u = d(() => {
    if (a.value)
      return de(t.value, a.value);
  });
  return {
    classBodyLocal: s,
    classButtonLocal: u,
    classHeaderLocal: o
  };
}
function _k(e) {
  const t = p(e, "item"), n = fe("keyIsRender"), r = fe("keyIsRenderBodyByFirstOpen"), a = R(!1), s = d(() => {
    if (r.value)
      return de(t.value, r.value);
  }), o = d(() => s.value ? a.value : !0), u = d(() => n.value ? !!de(t.value, n.value, !0) : !0);
  return {
    isBodyVisible: o,
    isOpenFirst: a,
    isRender: u
  };
}
const ze = "_a_id";
function mk(e) {
  const t = p(e, "isParentOpen"), n = p(e, "item"), r = p(e, "itemIndex"), a = p(e, "keyId"), s = p(e, "parentsIds"), o = p(e, "parentIndexes"), u = fe("idsForOpen"), f = fe("toggle"), _ = d(() => n.value[ze]), m = d(() => t.value ? u.value.indexOf(_.value) !== -1 : !1), b = d(() => {
    const T = Se(s.value);
    return T.push(`${_.value}`), T;
  }), v = d(() => o.value.join(".")), g = d(() => v.value ? `${v.value}.${r.value}` : `${r.value}`), S = d(() => {
    const T = Se(o.value);
    return T.push(`${g.value}`), T;
  }), A = (T) => {
    f({
      $event: T,
      parentsIds: s.value,
      isOpen: m.value,
      item: n.value,
      itemIndex: r.value
    });
  };
  return {
    closeItemIfOpen: () => {
      m.value && a.value && A();
    },
    currentId: _,
    isOpen: m,
    parentIndexesForChild: S,
    parentsIdsForChild: b,
    toggleLocal: A
  };
}
const bk = {
  name: "AAccordionItem",
  props: {
    isParentOpen: {
      type: Boolean,
      required: !0
    },
    item: {
      type: Object,
      required: !0
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    parentsIds: {
      type: Array,
      required: !1,
      default: () => []
    },
    parentIndexes: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  inject: [
    "classBody",
    "classHeader",
    "id",
    "withGap"
  ],
  setup(e) {
    const {
      closeItemIfOpen: t,
      currentId: n,
      isOpen: r,
      parentIndexesForChild: a,
      parentsIdsForChild: s,
      toggleLocal: o
    } = mk(e), {
      children: u,
      hasChildren: f
    } = hk(e), {
      classBodyLocal: _,
      classButtonLocal: m,
      classHeaderLocal: b
    } = pk(e), {
      isBodyVisible: v,
      isOpenFirst: g,
      isRender: S
    } = _k(e), {
      buttonAttributes: A,
      buttonTag: w,
      contentLocal: T,
      idForCollapse: I,
      labelLocal: C
    } = fk(e, {
      classButtonLocal: m,
      isOpen: r,
      toggleLocal: o,
      currentId: n
    });
    return st(r, (E) => {
      E && !g.value && (g.value = !0);
    }, {
      immediate: !0
    }), Bt(() => {
      t();
    }), {
      buttonAttributes: A,
      buttonTag: w,
      children: u,
      classBodyLocal: _,
      classButtonLocal: m,
      classHeaderLocal: b,
      contentLocal: T,
      currentId: n,
      hasChildren: f,
      idForCollapse: I,
      isBodyVisible: v,
      isOpen: r,
      isRender: S,
      labelLocal: C,
      parentIndexesForChild: a,
      parentsIdsForChild: s
    };
  },
  render() {
    let e = [];
    return this.isBodyVisible && (e = [
      this.item.slotContent && this.$slots[this.item.slotContent] ? this.$slots[this.item.slotContent]({
        item: this.item,
        itemIndex: this.itemIndex,
        parentsIds: this.parentsIds,
        parentIndexes: this.parentIndexes,
        id: this.id,
        currentId: this.currentId
      }) : this.$slots.accordionContent ? this.$slots.accordionContent({
        item: this.item,
        itemIndex: this.itemIndex,
        parentsIds: this.parentsIds,
        parentIndexes: this.parentIndexes,
        id: this.id,
        currentId: this.currentId
      }) : this.contentLocal && Ft(c("div"), [
        [sn, this.contentLocal]
      ]),
      this.hasChildren && c("div", {
        class: ["a_accordion"]
      }, [
        this.children.map((t, n) => c(la("AAccordionItem"), {
          key: t[ze],
          item: t,
          itemIndex: n,
          isParentOpen: this.isOpen,
          parentsIds: this.parentsIdsForChild,
          parentIndexes: this.parentIndexesForChild,
          keyId: this.keyId
        }, this.$slots))
      ])
    ]), this.isRender && c("div", {
      class: [
        "a_accordion__item",
        {
          a_accordion__item_with_gap: this.withGap
        }
      ]
    }, [
      c("div", {
        class: ["a_accordion__header", this.classHeader, this.classHeaderLocal]
      }, [
        c(this.buttonTag, this.buttonAttributes, [
          this.item.slotButton && this.$slots[this.item.slotButton] ? this.$slots[this.item.slotButton]({
            item: this.item,
            itemIndex: this.itemIndex,
            parentsIds: this.parentsIds,
            parentIndexes: this.parentIndexes,
            id: this.id,
            currentId: this.currentId
          }) : this.$slots.accordionButton && this.$slots.accordionButton({
            item: this.item,
            itemIndex: this.itemIndex,
            parentsIds: this.parentsIds,
            parentIndexes: this.parentIndexes,
            id: this.id,
            currentId: this.currentId
          }),
          this.labelLocal && Ft(c("span"), [
            [sn, this.labelLocal]
          ])
        ])
      ]),
      c("div", {
        id: this.idForCollapse,
        class: ["a_accordion__collapse_box", {
          a_accordion__collapse_box_show: this.isOpen
        }]
      }, [
        c("div", {
          class: ["a_accordion__body", this.classBody, this.classBodyLocal]
        }, e)
      ])
    ]);
  }
};
function vk(e) {
  const t = p(e, "data"), n = p(e, "keyId"), r = p(e, "keyChildren"), a = ({ items: o, parentIds: u = "" }) => {
    Y(o, (f, _) => {
      const m = de(f, n.value);
      let b = "";
      ae(m) ? b = `${u}${_}` : b = `${u}${m}`, f[ze] = b;
      const v = f[r.value];
      v && v.length && a({ items: v, parentIds: `${b}_` });
    });
  };
  return {
    dataWithIds: d(() => {
      const o = Se(t.value);
      return a({ items: o }), o;
    })
  };
}
function yk(e, {
  idsForOpen: t = d(() => []),
  dataWithIds: n = d(() => [])
}) {
  const r = p(e, "indexesForOpen"), a = p(e, "keyChildren"), s = ({ indexForOpen: f }) => {
    let _ = `${f}`.replaceAll(".", `.${a.value}.`);
    return _ += `.${ze}`, _;
  }, o = ({ isInit: f } = {}) => {
    if (f && !r.value.length)
      return;
    const _ = [];
    a.value ? Y(r.value, (m) => {
      const b = de(n.value, s({ indexForOpen: m }));
      ae(b) || _.push(b);
    }) : Y(r.value, (m) => {
      const b = de(n.value, `${m}.${ze}`);
      ae(b) || _.push(b);
    }), t.value = _;
  }, u = () => {
    o({ isInit: !0 });
  };
  return st(r, () => {
    o();
  }), {
    initIdsFromIndexesForOpen: u
  };
}
function gk(e, { emit: t }) {
  const n = p(e, "alwaysOpen"), r = p(e, "disabled"), a = p(e, "idsForOpenDefault"), s = p(e, "prevent"), o = p(e, "stop"), u = R(a.value), f = ({ currentId: b, isOpen: v }) => {
    if (v) {
      const g = b.split("__")[0];
      u.value = Gt(u.value, (S) => !Ih(S, g));
    } else
      u.value.push(b);
  }, _ = ({ currentId: b, parentsIds: v, isOpen: g }) => {
    g ? u.value = v : u.value = [...v, b];
  }, m = ({ item: b, parentsIds: v, isOpen: g, $event: S }) => {
    if (r.value)
      return;
    const A = Se(v), w = b[ze];
    n.value ? f({ item: b, currentId: w, isOpen: g }) : _({ parentsIds: A, currentId: w, isOpen: g }), t("toggle", { idsForOpen: u.value, currentId: w, parentsIds: A, isOpen: g, $event: S, item: b }), o.value && S && S.stopPropagation(), s.value && S && S.preventDefault();
  };
  return st(a, (b) => {
    Gy(b, u.value) || (u.value = Se(b));
  }), {
    idsForOpen: u,
    toggleLocal: m
  };
}
const yU = {
  name: "AAccordion",
  provide() {
    return {
      classBody: d(() => this.classBody),
      classButton: d(() => this.classButton),
      classHeader: d(() => this.classHeader),
      disabled: d(() => this.disabled),
      id: d(() => this.id),
      idsForOpen: d(() => this.idsForOpen),
      isCaret: d(() => this.isCaret),
      keyChildren: d(() => this.keyChildren),
      keyClassBody: d(() => this.keyClassBody),
      keyClassButton: d(() => this.keyClassButton),
      keyClassHeader: d(() => this.keyClassHeader),
      keyContent: d(() => this.keyContent),
      keyIsRender: d(() => this.keyIsRender),
      keyIsRenderBodyByFirstOpen: d(() => this.keyIsRenderBodyByFirstOpen),
      keyLabel: d(() => this.keyLabel),
      readonly: d(() => this.readonly),
      withGap: d(() => this.withGap),
      toggle: this.toggleLocal
    };
  },
  props: {
    alwaysOpen: {
      type: Boolean,
      required: !1
    },
    classBody: {
      type: [String, Object],
      required: !1,
      default: ""
    },
    classButton: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classHeader: {
      type: [String, Object],
      required: !1,
      default: ""
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: mt("accordion_")
    },
    idsForOpenDefault: {
      type: Array,
      required: !1,
      default: () => []
    },
    isCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    data: {
      type: Array,
      required: !0
    },
    keyClassBody: {
      type: String,
      required: !1,
      default: "classBody"
    },
    keyClassButton: {
      type: String,
      required: !1,
      default: "classButton"
    },
    keyClassHeader: {
      type: String,
      required: !1,
      default: "classHeader"
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyIsRender: {
      type: String,
      required: !1,
      default: "isRender"
    },
    keyIsRenderBodyByFirstOpen: {
      type: String,
      required: !1,
      default: "isRenderBodyByFirstOpen"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyChildren: {
      type: String,
      required: !1,
      default: "children"
    },
    prevent: {
      type: Boolean,
      required: !1
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    stop: {
      type: Boolean,
      required: !1
    },
    withGap: {
      type: Boolean,
      required: !1
    },
    indexesForOpen: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      idsForOpen: n,
      toggleLocal: r
    } = gk(e, t), {
      dataWithIds: a
    } = vk(e), {
      initIdsFromIndexesForOpen: s
    } = yk(e, {
      idsForOpen: n,
      dataWithIds: a
    });
    return s(), {
      dataWithIds: a,
      idsForOpen: n,
      toggleLocal: r
    };
  },
  render() {
    return c("div", {
      class: ["a_accordion"]
    }, [
      this.dataWithIds.map((e, t) => c(bk, {
        key: e[ze],
        item: e,
        itemIndex: t,
        isParentOpen: !0,
        keyId: this.keyId
      }, this.$slots))
    ]);
  }
};
function Sk(e) {
  const t = p(e, "ariLabel");
  return {
    attributesAriaLabelHidden: d(() => t.value ? {
      ariaLabel: t.value
    } : {
      ariaHidden: !0
    })
  };
}
function Ak(e, {
  isIconSvg: t = d(() => !1)
}) {
  const n = p(e, "icon");
  return {
    iconClass: d(() => {
      if (!t.value)
        return `a_icon_${n.value || "_NoImage"}`;
    })
  };
}
var ru = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function wk(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var au = { exports: {} }, jb;
function Tk() {
  if (jb) return au.exports;
  jb = 1;
  function e() {
  }
  return e.prototype = {
    on: function(t, n, r) {
      var a = this.e || (this.e = {});
      return (a[t] || (a[t] = [])).push({
        fn: n,
        ctx: r
      }), this;
    },
    once: function(t, n, r) {
      var a = this;
      function s() {
        a.off(t, s), n.apply(r, arguments);
      }
      return s._ = n, this.on(t, s, r);
    },
    emit: function(t) {
      var n = [].slice.call(arguments, 1), r = ((this.e || (this.e = {}))[t] || []).slice(), a = 0, s = r.length;
      for (a; a < s; a++)
        r[a].fn.apply(r[a].ctx, n);
      return this;
    },
    off: function(t, n) {
      var r = this.e || (this.e = {}), a = r[t], s = [];
      if (a && n)
        for (var o = 0, u = a.length; o < u; o++)
          a[o].fn !== n && a[o].fn._ !== n && s.push(a[o]);
      return s.length ? r[t] = s : delete r[t], this;
    }
  }, au.exports = e, au.exports.TinyEmitter = e, au.exports;
}
var rf, Gb;
function xk() {
  if (Gb) return rf;
  Gb = 1;
  var e = Tk();
  return rf = new e(), rf;
}
var Ck = xk();
const iu = /* @__PURE__ */ wk(Ck), Ht = {
  $on: (...e) => iu.on(...e),
  $once: (...e) => iu.once(...e),
  $off: (...e) => iu.off(...e),
  $emit: (...e) => iu.emit(...e)
}, Lu = R(void 0);
function hu(e) {
  Lu.value = e, Ht.$emit("updateViewOnResize", e), e ? document.body.classList.add("a_mobile") : document.body.classList.remove("a_mobile");
}
function En() {
  return {
    isMobileWidth: Lu,
    setIsMobileWidth: hu
  };
}
const Ik = `<svg
  xmlns="http://www.w3.org/2000/svg"
  version="1.1"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <path
    d="M 14.204045,11.607942 C 15.968997,11.607942 17.4,13.038977 17.4,14.80397 17.4,16.568964 15.968997,18 14.204045,18 12.439093,18 11.00809,16.568964 11.00809,14.80397 c 0,-1.764993 1.431003,-3.196028 3.195955,-3.196028 z M 1.7468526,0 H 15.702424 c 0.317838,0 0.601987,0.13036037 0.809974,0.33688648 0.207986,0.20799097 0.336879,0.49654172 0.336879,0.80999272 V 11.401416 C 16.488962,11.121653 16.081779,10.89755 15.640907,10.745219 V 1.4251769 c 0,-0.062983 -0.02344,-0.1157132 -0.06738,-0.1537962 -0.03808,-0.038083 -0.09667,-0.067377 -0.153792,-0.067377 H 2.0192852 c -0.062982,0 -0.1157107,0.023436 -0.1537926,0.067377 -0.038082,0.038083 -0.067375,0.095207 -0.067375,0.1537962 V 11.681178 h 0.00439 L 6.4851264,7.1976561 c 0.1874805,-0.1728376 0.4818832,-0.153796 0.6503226,0.033689 0.00439,0.00439 0.00439,0.010252 0.010252,0.010252 l 3.937088,4.6578239 c -0.692799,0.758727 -1.116094,1.769387 -1.116094,2.878184 0,0.481894 0.08056,0.944747 0.227027,1.376841 H 1.7468526 c -0.3178379,0 -0.6019878,-0.130361 -0.8099738,-0.336887 C 0.7288927,15.611034 0.6,15.321018 0.6,15.007567 V 1.1468792 C 0.6,0.82903398 0.7303573,0.54487745 0.9368788,0.33688648 1.1434002,0.12889569 1.4334089,0 1.7468526,0 Z m 9.6523104,11.585971 0.543401,-3.3381075 c 0.04394,-0.2504678 0.279755,-0.42477 0.530217,-0.3808284 0.09667,0.014647 0.183086,0.062984 0.250463,0.1259664 l 2.50462,2.6321095 c -0.319302,-0.07616 -0.650322,-0.115713 -0.993061,-0.115713 -1.088264,-0.0015 -2.081324,0.405729 -2.83564,1.076573 z m 1.171752,-8.9582554 c 0.458448,0 0.87735,0.1874847 1.176147,0.4862886 0.303191,0.3031979 0.486278,0.717715 0.486278,1.1761738 0,0.4584587 -0.187481,0.8773698 -0.486278,1.1761737 -0.303191,0.3031979 -0.717699,0.4862888 -1.176147,0.4862888 -0.458447,0 -0.87735,-0.1874849 -1.176146,-0.4862888 -0.303191,-0.3031979 -0.486277,-0.717715 -0.486277,-1.1761737 0,-0.4584588 0.18748,-0.8773701 0.486277,-1.1761738 0.303191,-0.3031981 0.719163,-0.4862886 1.176146,-0.4862886 z m 0.562442,10.2325654 2.923522,3.163805 c 0.231421,-0.350069 0.366173,-0.76898 0.366173,-1.220116 0,-1.224509 -0.99306,-2.217592 -2.217542,-2.217592 -0.389608,-0.0015 -0.754315,0.09814 -1.072153,0.273903 z m 2.141377,3.885914 -2.923522,-3.163805 c -0.231421,0.350069 -0.366172,0.768981 -0.366172,1.220116 0,1.224509 0.99306,2.217593 2.217541,2.217593 0.389607,0.0015 0.754316,-0.09814 1.072153,-0.273904 z"
  />
</svg>`, Lk = `<svg
   xmlns="http://www.w3.org/2000/svg"
   viewBox="0 0 18 18"
   height="18"
   width="18"
>
  <g
   transform="matrix(0.26617655,0,0,0.26617655,-33.607656,-85.223817)"
  >
    <path
      style="fill:#35495e;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 139.13004,365.87267 -4.53409,7.81862 h 51.05837 l -4.53409,-7.81862 z"
    />
    <path
      style="fill:#41b883;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 134.59595,373.69129 -4.51704,7.7892 h 60.09245 l -4.51704,-7.7892 z"
    />
    <path
      style="fill:#41b883;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 160.07266,329.49377 -16.90595,29.1543 -16.90594,29.15378 h 7.67291 l 13.03745,-22.48287 13.03745,-22.48236 13.03745,22.48236 13.03744,22.48287 h 7.80159 l -16.90594,-29.15378 z"
    />
    <path
      style="fill:#35495e;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 160.00903,342.83634 -13.03745,22.48287 -13.03796,22.48286 h 8.03103 l 9.02632,-15.56546 9.02581,-15.56494 9.02632,15.56494 9.02581,15.56546 h 8.01501 l -13.03744,-22.48286 z"
    />
  </g>
</svg>`, Eu = R({
  icons: {
    _NoImage: Ik,
    Aloha: Lk
  }
}), gU = {
  install: (e, {
    icons: t = {}
  } = {}) => {
    Eu.value.icons = {
      ...Eu.value.icons,
      ...t
    };
  }
};
function Ek(e) {
  const t = p(e, "icon"), {
    isMobileWidth: n
  } = En(), r = d(() => dt(t.value) ? n.value ? t.value.mobile : t.value.desktop : t.value), a = d(() => !ae(r.value) && r.value !== ""), s = d(() => {
    const u = r.value;
    return !!(yt(u) && u.trim().startsWith("<svg"));
  }), o = d(() => {
    if (s.value)
      return r.value;
    const u = Eu.value.icons[r.value];
    return u || Eu.value.icons._NoImage;
  });
  return {
    hasIcon: a,
    iconSvg: o,
    isIconSvg: s
  };
}
const lt = {
  name: "AIcon",
  props: {
    ariLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    icon: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: "i"
    },
    isSaveHtml: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  setup(e) {
    const {
      attributesAriaLabelHidden: t
    } = Sk(e), {
      hasIcon: n,
      iconSvg: r,
      isIconSvg: a
    } = Ek(e), {
      iconClass: s
    } = Ak(e, {
      isIconSvg: a
    });
    return {
      attributesAriaLabelHidden: t,
      hasIcon: n,
      iconClass: s,
      iconSvg: r
    };
  },
  render() {
    if (this.hasIcon)
      return this.isSaveHtml ? c(this.iconTag, {
        class: ["a_icon", this.iconClass],
        innerHTML: this.iconSvg,
        ...this.attributesAriaLabelHidden
      }) : Ft(c(this.iconTag, {
        class: ["a_icon", this.iconClass],
        ...this.attributesAriaLabelHidden
      }), [
        [sn, this.iconSvg]
      ]);
  }
}, ad = R("de");
let sg = {};
const lg = R(/* @__PURE__ */ new Date()), Eh = R(/* @__PURE__ */ new Date());
let og = {};
const ys = R(!0), Ok = d(() => [
  ad.value,
  lg.value,
  ys.value
]);
st(Ok, () => {
  Pk();
}, {
  immediate: !0
});
function Rs() {
  return {
    isTranslate: ys,
    language: ad,
    setI18n: ug,
    setLanguage: dg,
    toggleTranslate: Dk,
    translationChanges: Eh,
    updateTranslation: cg
  };
}
function ug(e = {}) {
  sg = e;
}
function dg(e = "") {
  ad.value = e;
}
function Dk(e) {
  qe(e) ? ys.value = !ys.value : ys.value = !!e;
}
function Pk() {
  og = sg[ad.value], Eh.value = /* @__PURE__ */ new Date();
}
function cg() {
  lg.value = /* @__PURE__ */ new Date();
}
const Rf = R({
  replaceText: void 0
}), Rk = (e = {}) => {
  We(e == null ? void 0 : e.replaceText) && (Rf.value.replaceText = e == null ? void 0 : e.replaceText);
}, SU = {
  install: (e, t, n, r = {}) => {
    ug(t), dg(n), cg(), Rk(r);
  }
};
function Ui() {
  return {
    getTranslatedText: Kt,
    getTranslationAttributes: Bk,
    isPlaceholderTranslate: ii,
    replaceText: fg,
    spliceString: hg
  };
}
function ii(e = "") {
  return !(!yt(e) || e[0] !== "_" || e[e.length - 1] !== "_");
}
function Kt({ placeholder: e, translationObj: t = og, extra: n, alwaysTranslate: r = !1 }) {
  if (!t || !Eh.value)
    return e;
  let a;
  return !r && !ys.value ? a = e : a = ae(t[e]) ? e : t[e], n ? fg({
    text: a,
    object: n
  }) : a;
}
function fg({ text: e = "", object: t }) {
  var a, s;
  if (We((a = Rf.value) == null ? void 0 : a.replaceText))
    return (s = Rf.value) == null ? void 0 : s.replaceText({ text: e, object: t });
  if (!dt(t))
    return e;
  let n = e, r = 0;
  for (; ; ) {
    const o = n.indexOf("{{", r), u = n.indexOf("}}", r);
    if (o === -1 || u === -1)
      break;
    const f = n.slice(o + 2, u).trim(), _ = de(t, f);
    n = hg({
      text: n,
      replaceText: _,
      firstIndex: o,
      lastindex: u + 2
    }), r = o + `${_}`.length;
  }
  return n;
}
function hg({
  text: e = "",
  replaceText: t = "",
  firstIndex: n,
  lastindex: r
}) {
  return `${e.slice(0, n)}${t}${e.slice(r, e.length)}`;
}
function Bk({ attr: e = "", value: t = "", translation: n = "", isTranslate: r = !0 }) {
  const a = {};
  return ae(n) || (a[e] = n), r && (a[`data-translate-${e}`] = t), a;
}
function Oh(e) {
  const t = p(e, "alwaysTranslate"), n = p(e, "ariaLabel"), r = p(e, "extra"), {
    translationChanges: a
  } = Rs(), {
    isPlaceholderTranslate: s,
    getTranslatedText: o,
    getTranslationAttributes: u
  } = Ui(), {
    isMobileWidth: f
  } = En(), _ = d(() => dt(n.value) ? f.value ? n.value.mobile : n.value.desktop : n.value), m = d(() => !qe(_.value)), b = d(() => !(!m.value || !s(_.value))), v = d(() => {
    if (a.value)
      return b.value ? o({
        placeholder: _.value,
        extra: r.value,
        alwaysTranslate: t.value
      }) : _.value;
  });
  return {
    ariaLabelAttributes: d(() => m.value ? u({
      attr: "aria-label",
      translation: v.value,
      value: _.value,
      isTranslate: b.value
    }) : {}),
    hasAriaLabel: m
  };
}
function kk(e) {
  const t = p(e, "size");
  return {
    classSize: d(() => {
      if (t.value)
        return `a_spinner_size_${t.value}`;
    })
  };
}
const Fr = R({
  propsDefault: {
    ariaLabel: "_A_SPINNER_LOADING_",
    class: "a_spinner",
    safeHtml: "",
    size: void 0,
    tag: "span"
  }
}), AU = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Fr.value.propsDefault = {
      ...Fr.value.propsDefault,
      ...t
    };
  }
}, Ol = {
  name: "ASpinner",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: () => Fr.value.propsDefault.ariaLabel
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: String,
      required: !1,
      default: () => Fr.value.propsDefault.safeHtml
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => Fr.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    tag: {
      type: String,
      required: !1,
      default: () => Fr.value.propsDefault.tag
    }
  },
  setup(e) {
    const {
      ariaLabelAttributes: t
    } = Oh(e), {
      classSize: n
    } = kk(e);
    return {
      ariaLabelAttributes: t,
      classSize: n
    };
  },
  render() {
    return c(this.tag, {
      class: [
        Fr.value.propsDefault.class,
        this.classSize
      ],
      role: "status",
      innerHTML: this.safeHtml,
      ...this.ariaLabelAttributes
    });
  }
};
function Mk({
  htmlLocalOptions: e = d(() => {
  }),
  textLocalOptions: t = d(() => ({})),
  titleLocalOptions: n = d(() => ({}))
}) {
  const r = d(() => {
    var s, o, u, f;
    return ((s = t.value) == null ? void 0 : s.dataTranslateText) || ((o = e.value) == null ? void 0 : o.dataTranslateSafeHtml) || ((u = e.value) == null ? void 0 : u.dataTranslateHtml) || ((f = n.value) == null ? void 0 : f.title);
  });
  return {
    attributesLocal: d(() => {
      var o, u, f;
      const s = {};
      return (o = t.value) != null && o.dataTranslateText ? s["data-translate-text"] = t.value.dataTranslateText : (u = e.value) != null && u.dataTranslateSafeHtml ? s["data-translate-safe-html"] = e.value.dataTranslateSafeHtml : (f = e.value) != null && f.dataTranslateHtml && (s["data-translate-html"] = e.value.dataTranslateHtml), n.value.title && (s.title = n.value.title, n.value.dataTranslateTitle && (s["data-translate-title"] = n.value.dataTranslateTitle)), s;
    }),
    hasAttributesLocal: r
  };
}
function Fk(e, {
  hasTextAfter: t = d(() => !1),
  hasTextBefore: n = d(() => !1),
  textAfterForCurrentDevice: r = d(() => ""),
  textBeforeForCurrentDevice: a = d(() => "")
}) {
  const s = p(e, "alwaysTranslate"), o = p(e, "extra"), u = p(e, "html"), f = p(e, "safeHtml"), {
    isPlaceholderTranslate: _,
    getTranslatedText: m
  } = Ui(), {
    isMobileWidth: b
  } = En(), {
    translationChanges: v
  } = Rs(), g = d(() => dt(f.value) ? b.value ? f.value.mobile : f.value.desktop : f.value), S = d(() => dt(u.value) ? b.value ? u.value.mobile : u.value.desktop : u.value), A = d(() => Ae(f.value)), w = d(() => Ae(u.value)), T = d(() => A.value ? f.value.length > 0 : !qe(g.value)), I = d(() => w.value ? u.value.length > 0 : !qe(S.value)), C = d(() => n.value ? `<span>${a.value}</span>` : ""), E = d(() => t.value ? `<span>${r.value}</span>` : ""), P = d(() => {
    const k = {
      safeHtml: void 0,
      html: void 0,
      dataTranslateHtml: void 0,
      dataTranslateSafeHtml: void 0
    };
    if (!v.value)
      return k;
    if (T.value) {
      const F = A.value ? f.value : [g.value];
      let D = "", W = "";
      Y(F, ($) => {
        !$ && $ !== 0 || (D && (D += " ", W += " "), _($) ? (D += m({
          placeholder: $,
          extra: o.value,
          alwaysTranslate: s.value
        }), W += $) : D += $);
      }), k.safeHtml = D || void 0, k.dataTranslateSafeHtml = W || void 0;
    } else if (I.value) {
      const F = w.value ? u.value : [S.value];
      let D = "", W = "";
      Y(F, ($) => {
        !$ && $ !== 0 || (D && (D += " ", W += " "), _($) ? (D += Iu(m({
          placeholder: $,
          extra: o.value,
          alwaysTranslate: s.value
        })), W += $) : D += Iu($));
      }), k.html = ae(D) ? void 0 : D, k.dataTranslateHtml = ae(W) ? void 0 : W;
    }
    return k;
  }), M = d(() => `${C.value}${P.value.safeHtml || P.value.html}${E.value}`);
  return {
    hasHtml: I,
    hasSafeHtml: T,
    htmlLocalOptions: P,
    htmlLocalWithBeforeAndAfter: M
  };
}
function Yl(e) {
  const t = p(e, "alwaysTranslate"), n = p(e, "extra"), r = p(e, "placeholder"), {
    translationChanges: a
  } = Rs(), {
    isPlaceholderTranslate: s,
    getTranslatedText: o,
    getTranslationAttributes: u
  } = Ui(), {
    isMobileWidth: f
  } = En(), _ = d(() => dt(r.value) ? f.value ? r.value.mobile : r.value.desktop : r.value), m = d(() => !qe(_.value)), b = d(() => !(!m.value || !s(_.value))), v = d(() => {
    if (a.value)
      return b.value ? o({
        placeholder: _.value,
        extra: n.value,
        alwaysTranslate: t.value
      }) : _.value;
  }), g = d(() => {
    const S = {};
    return m.value ? u({
      attr: "placeholder",
      translation: v.value,
      value: _.value,
      isTranslate: b.value
    }) : S;
  });
  return {
    hasPlaceholder: m,
    placeholderAttributes: g
  };
}
function qk({
  hasAriaLabel: e,
  hasAttributesLocal: t,
  hasPlaceholder: n,
  hasTextAfter: r,
  hasTextBefore: a
}) {
  return {
    hasRestAttributes: d(() => e.value || t.value || n.value || r.value || a.value)
  };
}
function Nk(e) {
  const t = p(e, "textAfter"), n = p(e, "textBefore"), {
    isMobileWidth: r
  } = En(), a = d(() => dt(t.value) ? r.value ? t.value.mobile : t.value.desktop : t.value), s = d(() => dt(n.value) ? r.value ? n.value.mobile : n.value.desktop : n.value), o = d(() => !ae(a.value) && a.value !== ""), u = d(() => !ae(s.value) && s.value !== "");
  return {
    hasTextAfter: o,
    hasTextBefore: u,
    textAfterForCurrentDevice: a,
    textBeforeForCurrentDevice: s
  };
}
function Vk(e) {
  const t = p(e, "alwaysTranslate"), n = p(e, "extra"), r = p(e, "text"), {
    isPlaceholderTranslate: a,
    getTranslatedText: s
  } = Ui(), {
    isMobileWidth: o
  } = En(), {
    translationChanges: u
  } = Rs(), f = d(() => dt(r.value) ? o.value ? r.value.mobile : r.value.desktop : r.value), _ = d(() => Ae(r.value)), m = d(() => _.value ? r.value.length > 0 : !qe(f.value)), b = d(() => {
    const v = {
      text: void 0,
      dataTranslateText: void 0
    };
    if (!u.value)
      return v;
    if (m.value) {
      const g = _.value ? r.value : [f.value];
      let S = "", A = "";
      Y(g, (w) => {
        !w && w !== 0 || (S && (S += " ", A += " "), a(w) ? (S += s({
          placeholder: w,
          extra: n.value,
          alwaysTranslate: t.value
        }), A += w) : S += w);
      }), v.text = S || void 0, v.dataTranslateText = A || void 0;
    }
    return v;
  });
  return {
    hasText: m,
    textLocalOptions: b
  };
}
function Hk(e) {
  const t = p(e, "alwaysTranslate"), n = p(e, "extra"), r = p(e, "title"), {
    isPlaceholderTranslate: a,
    getTranslatedText: s
  } = Ui(), {
    isMobileWidth: o
  } = En(), {
    translationChanges: u
  } = Rs(), f = d(() => dt(r.value) ? o.value ? r.value.mobile : r.value.desktop : r.value), _ = d(() => Ae(r.value)), m = d(() => _.value ? r.value.length > 0 : !(ae(f.value) || f.value === ""));
  return {
    titleLocalOptions: d(() => {
      if (!u.value)
        return;
      const v = {
        title: void 0,
        dataTranslateTitle: void 0
      };
      if (!m.value)
        return v;
      const g = _.value ? r.value : [f.value];
      let S = "", A = "";
      return Y(g, (w) => {
        !w && w !== 0 || (S && (S += " ", A += " "), a(w) ? (S += s({
          placeholder: w,
          extra: n.value,
          alwaysTranslate: t.value
        }), A += w) : S += w);
      }), v.title = S || void 0, v.dataTranslateTitle = A || void 0, v;
    })
  };
}
const be = {
  name: "ATranslation",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: ""
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: ""
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      hasTextAfter: t,
      hasTextBefore: n,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: a
    } = Nk(e), {
      hasText: s,
      textLocalOptions: o
    } = Vk(e), {
      hasHtml: u,
      hasSafeHtml: f,
      htmlLocalOptions: _,
      htmlLocalWithBeforeAndAfter: m
    } = Fk(e, {
      hasTextAfter: t,
      hasTextBefore: n,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: a
    }), {
      titleLocalOptions: b
    } = Hk(e), {
      hasPlaceholder: v,
      placeholderAttributes: g
    } = Yl(e), {
      ariaLabelAttributes: S,
      hasAriaLabel: A
    } = Oh(e), {
      attributesLocal: w,
      hasAttributesLocal: T
    } = Mk({
      htmlLocalOptions: _,
      textLocalOptions: o,
      titleLocalOptions: b
    }), {
      hasRestAttributes: I
    } = qk({
      hasAriaLabel: A,
      hasAttributesLocal: T,
      hasPlaceholder: v,
      hasTextAfter: t,
      hasTextBefore: n
    });
    return {
      ariaLabelAttributes: S,
      attributesLocal: w,
      hasText: s,
      hasTextAfter: t,
      hasTextBefore: n,
      hasHtml: u,
      hasRestAttributes: I,
      hasSafeHtml: f,
      htmlLocalWithBeforeAndAfter: m,
      placeholderAttributes: g,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: a,
      textLocalOptions: o
    };
  },
  render() {
    return this.hasText ? c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes
    }, [
      this.textBeforeForCurrentDevice,
      this.textLocalOptions.text,
      this.$slots.default && this.$slots.default(),
      this.textAfterForCurrentDevice
    ]) : this.hasSafeHtml || this.hasHtml ? c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes,
      innerHTML: this.htmlLocalWithBeforeAndAfter
    }) : (this.hasRestAttributes || this.$slots.default) && c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes
    }, [
      this.textBeforeForCurrentDevice,
      this.$slots.default && this.$slots.default(),
      this.textAfterForCurrentDevice
    ]);
  }
}, $k = {
  button: !0,
  submit: !0,
  reset: !0
};
function Wk(e, {
  isRouterLink: t = d(() => !1),
  tagLocal: n = d(() => "")
}) {
  const r = p(e, "disabled"), a = p(e, "href"), s = p(e, "target"), o = p(e, "to"), u = p(e, "type"), f = d(() => {
    if (n.value === "button" && $k[u.value])
      return u.value;
  });
  return {
    toHrefAttributes: d(() => t.value ? {
      target: s.value,
      to: o.value
    } : r.value ? {} : {
      href: a.value,
      target: s.value
    }),
    typeAttribut: f
  };
}
function Uk(e, { emit: t }) {
  return {
    onClick: (r) => {
      const a = p(e, "prevent"), s = p(e, "stop"), o = p(e, "disabled"), u = p(e, "ariaDisabled");
      a.value && r.preventDefault(), s.value && r.stopPropagation(), !(o.value || u.value) && t("click", {
        props: e,
        $event: r
      });
    }
  };
}
const Dl = {
  // called before bound element's attributes
  // or event listeners are applied
  created(e, t) {
    var n;
    We((n = t.value) == null ? void 0 : n.created) && t.value.created(e, t);
  },
  // called right before the element is inserted into the DOM.
  beforeMount(e, t) {
    var n;
    We((n = t.value) == null ? void 0 : n.beforeMount) && t.value.beforeMount(e, t);
  },
  // called when the bound element's parent component
  // and all its children are mounted.
  mounted(e, t) {
    var n;
    We((n = t.value) == null ? void 0 : n.mounted) && t.value.mounted(e, t);
  },
  // called before the parent component is unmounted
  beforeUnmount(e, t) {
    var n;
    We((n = t.value) == null ? void 0 : n.beforeUnmount) && t.value.beforeUnmount(e, t);
  },
  // called when the parent component is unmounted
  unmounted(e, t) {
    var n;
    We((n = t.value) == null ? void 0 : n.unmounted) && t.value.unmounted(e, t);
  }
};
function jk(e, {
  isTitleVisible: t = R(!1)
}) {
  const n = p(e, "id"), r = p(e, "minWidth"), a = p(e, "width"), s = p(e, "maxWidth"), o = p(e, "withoutAriaDescribedby"), u = d(() => {
    if (!o.value && t.value)
      return `${n.value}_title`;
  }), f = d(() => {
    const _ = {};
    return ae(r.value) || (_["min-width"] = `${r.value}px`), ae(a.value) || (_.width = `${a.value}px`), ae(s.value) || (_["max-width"] = `${s.value}px`), _;
  });
  return {
    ariaDescribedby: u,
    tooltipStyles: f
  };
}
const Gk = ["top", "right", "bottom", "left"], Yb = ["start", "end"], zb = /* @__PURE__ */ Gk.reduce((e, t) => e.concat(t, t + "-" + Yb[0], t + "-" + Yb[1]), []), Ls = Math.min, Bi = Math.max, Ou = Math.round, su = Math.floor, di = (e) => ({
  x: e,
  y: e
}), Yk = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, zk = {
  start: "end",
  end: "start"
};
function Bf(e, t, n) {
  return Bi(e, Ls(t, n));
}
function ci(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function oa(e) {
  return e.split("-")[0];
}
function sa(e) {
  return e.split("-")[1];
}
function Dh(e) {
  return e === "x" ? "y" : "x";
}
function Ph(e) {
  return e === "y" ? "height" : "width";
}
function zl(e) {
  return ["top", "bottom"].includes(oa(e)) ? "y" : "x";
}
function Rh(e) {
  return Dh(zl(e));
}
function pg(e, t, n) {
  n === void 0 && (n = !1);
  const r = sa(e), a = Rh(e), s = Ph(a);
  let o = a === "x" ? r === (n ? "end" : "start") ? "right" : "left" : r === "start" ? "bottom" : "top";
  return t.reference[s] > t.floating[s] && (o = Pu(o)), [o, Pu(o)];
}
function Kk(e) {
  const t = Pu(e);
  return [Du(e), t, Du(t)];
}
function Du(e) {
  return e.replace(/start|end/g, (t) => zk[t]);
}
function Xk(e, t, n) {
  const r = ["left", "right"], a = ["right", "left"], s = ["top", "bottom"], o = ["bottom", "top"];
  switch (e) {
    case "top":
    case "bottom":
      return n ? t ? a : r : t ? r : a;
    case "left":
    case "right":
      return t ? s : o;
    default:
      return [];
  }
}
function Zk(e, t, n, r) {
  const a = sa(e);
  let s = Xk(oa(e), n === "start", r);
  return a && (s = s.map((o) => o + "-" + a), t && (s = s.concat(s.map(Du)))), s;
}
function Pu(e) {
  return e.replace(/left|right|bottom|top/g, (t) => Yk[t]);
}
function Jk(e) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...e
  };
}
function _g(e) {
  return typeof e != "number" ? Jk(e) : {
    top: e,
    right: e,
    bottom: e,
    left: e
  };
}
function Ru(e) {
  const {
    x: t,
    y: n,
    width: r,
    height: a
  } = e;
  return {
    width: r,
    height: a,
    top: n,
    left: t,
    right: t + r,
    bottom: n + a,
    x: t,
    y: n
  };
}
function Kb(e, t, n) {
  let {
    reference: r,
    floating: a
  } = e;
  const s = zl(t), o = Rh(t), u = Ph(o), f = oa(t), _ = s === "y", m = r.x + r.width / 2 - a.width / 2, b = r.y + r.height / 2 - a.height / 2, v = r[u] / 2 - a[u] / 2;
  let g;
  switch (f) {
    case "top":
      g = {
        x: m,
        y: r.y - a.height
      };
      break;
    case "bottom":
      g = {
        x: m,
        y: r.y + r.height
      };
      break;
    case "right":
      g = {
        x: r.x + r.width,
        y: b
      };
      break;
    case "left":
      g = {
        x: r.x - a.width,
        y: b
      };
      break;
    default:
      g = {
        x: r.x,
        y: r.y
      };
  }
  switch (sa(t)) {
    case "start":
      g[o] -= v * (n && _ ? -1 : 1);
      break;
    case "end":
      g[o] += v * (n && _ ? -1 : 1);
      break;
  }
  return g;
}
const Qk = async (e, t, n) => {
  const {
    placement: r = "bottom",
    strategy: a = "absolute",
    middleware: s = [],
    platform: o
  } = n, u = s.filter(Boolean), f = await (o.isRTL == null ? void 0 : o.isRTL(t));
  let _ = await o.getElementRects({
    reference: e,
    floating: t,
    strategy: a
  }), {
    x: m,
    y: b
  } = Kb(_, r, f), v = r, g = {}, S = 0;
  for (let A = 0; A < u.length; A++) {
    const {
      name: w,
      fn: T
    } = u[A], {
      x: I,
      y: C,
      data: E,
      reset: P
    } = await T({
      x: m,
      y: b,
      initialPlacement: r,
      placement: v,
      strategy: a,
      middlewareData: g,
      rects: _,
      platform: o,
      elements: {
        reference: e,
        floating: t
      }
    });
    m = I ?? m, b = C ?? b, g = {
      ...g,
      [w]: {
        ...g[w],
        ...E
      }
    }, P && S <= 50 && (S++, typeof P == "object" && (P.placement && (v = P.placement), P.rects && (_ = P.rects === !0 ? await o.getElementRects({
      reference: e,
      floating: t,
      strategy: a
    }) : P.rects), {
      x: m,
      y: b
    } = Kb(_, v, f)), A = -1);
  }
  return {
    x: m,
    y: b,
    placement: v,
    strategy: a,
    middlewareData: g
  };
};
async function Bh(e, t) {
  var n;
  t === void 0 && (t = {});
  const {
    x: r,
    y: a,
    platform: s,
    rects: o,
    elements: u,
    strategy: f
  } = e, {
    boundary: _ = "clippingAncestors",
    rootBoundary: m = "viewport",
    elementContext: b = "floating",
    altBoundary: v = !1,
    padding: g = 0
  } = ci(t, e), S = _g(g), w = u[v ? b === "floating" ? "reference" : "floating" : b], T = Ru(await s.getClippingRect({
    element: (n = await (s.isElement == null ? void 0 : s.isElement(w))) == null || n ? w : w.contextElement || await (s.getDocumentElement == null ? void 0 : s.getDocumentElement(u.floating)),
    boundary: _,
    rootBoundary: m,
    strategy: f
  })), I = b === "floating" ? {
    ...o.floating,
    x: r,
    y: a
  } : o.reference, C = await (s.getOffsetParent == null ? void 0 : s.getOffsetParent(u.floating)), E = await (s.isElement == null ? void 0 : s.isElement(C)) ? await (s.getScale == null ? void 0 : s.getScale(C)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, P = Ru(s.convertOffsetParentRelativeRectToViewportRelativeRect ? await s.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements: u,
    rect: I,
    offsetParent: C,
    strategy: f
  }) : I);
  return {
    top: (T.top - P.top + S.top) / E.y,
    bottom: (P.bottom - T.bottom + S.bottom) / E.y,
    left: (T.left - P.left + S.left) / E.x,
    right: (P.right - T.right + S.right) / E.x
  };
}
const eM = (e) => ({
  name: "arrow",
  options: e,
  async fn(t) {
    const {
      x: n,
      y: r,
      placement: a,
      rects: s,
      platform: o,
      elements: u,
      middlewareData: f
    } = t, {
      element: _,
      padding: m = 0
    } = ci(e, t) || {};
    if (_ == null)
      return {};
    const b = _g(m), v = {
      x: n,
      y: r
    }, g = Rh(a), S = Ph(g), A = await o.getDimensions(_), w = g === "y", T = w ? "top" : "left", I = w ? "bottom" : "right", C = w ? "clientHeight" : "clientWidth", E = s.reference[S] + s.reference[g] - v[g] - s.floating[S], P = v[g] - s.reference[g], M = await (o.getOffsetParent == null ? void 0 : o.getOffsetParent(_));
    let k = M ? M[C] : 0;
    (!k || !await (o.isElement == null ? void 0 : o.isElement(M))) && (k = u.floating[C] || s.floating[S]);
    const F = E / 2 - P / 2, D = k / 2 - A[S] / 2 - 1, W = Ls(b[T], D), $ = Ls(b[I], D), z = W, ne = k - A[S] - $, Q = k / 2 - A[S] / 2 + F, ce = Bf(z, Q, ne), he = !f.arrow && sa(a) != null && Q !== ce && s.reference[S] / 2 - (Q < z ? W : $) - A[S] / 2 < 0, ve = he ? Q < z ? Q - z : Q - ne : 0;
    return {
      [g]: v[g] + ve,
      data: {
        [g]: ce,
        centerOffset: Q - ce - ve,
        ...he && {
          alignmentOffset: ve
        }
      },
      reset: he
    };
  }
});
function tM(e, t, n) {
  return (e ? [...n.filter((a) => sa(a) === e), ...n.filter((a) => sa(a) !== e)] : n.filter((a) => oa(a) === a)).filter((a) => e ? sa(a) === e || (t ? Du(a) !== a : !1) : !0);
}
const nM = function(e) {
  return e === void 0 && (e = {}), {
    name: "autoPlacement",
    options: e,
    async fn(t) {
      var n, r, a;
      const {
        rects: s,
        middlewareData: o,
        placement: u,
        platform: f,
        elements: _
      } = t, {
        crossAxis: m = !1,
        alignment: b,
        allowedPlacements: v = zb,
        autoAlignment: g = !0,
        ...S
      } = ci(e, t), A = b !== void 0 || v === zb ? tM(b || null, g, v) : v, w = await Bh(t, S), T = ((n = o.autoPlacement) == null ? void 0 : n.index) || 0, I = A[T];
      if (I == null)
        return {};
      const C = pg(I, s, await (f.isRTL == null ? void 0 : f.isRTL(_.floating)));
      if (u !== I)
        return {
          reset: {
            placement: A[0]
          }
        };
      const E = [w[oa(I)], w[C[0]], w[C[1]]], P = [...((r = o.autoPlacement) == null ? void 0 : r.overflows) || [], {
        placement: I,
        overflows: E
      }], M = A[T + 1];
      if (M)
        return {
          data: {
            index: T + 1,
            overflows: P
          },
          reset: {
            placement: M
          }
        };
      const k = P.map((W) => {
        const $ = sa(W.placement);
        return [W.placement, $ && m ? (
          // Check along the mainAxis and main crossAxis side.
          W.overflows.slice(0, 2).reduce((z, ne) => z + ne, 0)
        ) : (
          // Check only the mainAxis.
          W.overflows[0]
        ), W.overflows];
      }).sort((W, $) => W[1] - $[1]), D = ((a = k.filter((W) => W[2].slice(
        0,
        // Aligned placements should not check their opposite crossAxis
        // side.
        sa(W[0]) ? 2 : 3
      ).every(($) => $ <= 0))[0]) == null ? void 0 : a[0]) || k[0][0];
      return D !== u ? {
        data: {
          index: T + 1,
          overflows: P
        },
        reset: {
          placement: D
        }
      } : {};
    }
  };
}, rM = function(e) {
  return e === void 0 && (e = {}), {
    name: "flip",
    options: e,
    async fn(t) {
      var n, r;
      const {
        placement: a,
        middlewareData: s,
        rects: o,
        initialPlacement: u,
        platform: f,
        elements: _
      } = t, {
        mainAxis: m = !0,
        crossAxis: b = !0,
        fallbackPlacements: v,
        fallbackStrategy: g = "bestFit",
        fallbackAxisSideDirection: S = "none",
        flipAlignment: A = !0,
        ...w
      } = ci(e, t);
      if ((n = s.arrow) != null && n.alignmentOffset)
        return {};
      const T = oa(a), I = oa(u) === u, C = await (f.isRTL == null ? void 0 : f.isRTL(_.floating)), E = v || (I || !A ? [Pu(u)] : Kk(u));
      !v && S !== "none" && E.push(...Zk(u, A, S, C));
      const P = [u, ...E], M = await Bh(t, w), k = [];
      let F = ((r = s.flip) == null ? void 0 : r.overflows) || [];
      if (m && k.push(M[T]), b) {
        const z = pg(a, o, C);
        k.push(M[z[0]], M[z[1]]);
      }
      if (F = [...F, {
        placement: a,
        overflows: k
      }], !k.every((z) => z <= 0)) {
        var D, W;
        const z = (((D = s.flip) == null ? void 0 : D.index) || 0) + 1, ne = P[z];
        if (ne)
          return {
            data: {
              index: z,
              overflows: F
            },
            reset: {
              placement: ne
            }
          };
        let Q = (W = F.filter((ce) => ce.overflows[0] <= 0).sort((ce, he) => ce.overflows[1] - he.overflows[1])[0]) == null ? void 0 : W.placement;
        if (!Q)
          switch (g) {
            case "bestFit": {
              var $;
              const ce = ($ = F.map((he) => [he.placement, he.overflows.filter((ve) => ve > 0).reduce((ve, me) => ve + me, 0)]).sort((he, ve) => he[1] - ve[1])[0]) == null ? void 0 : $[0];
              ce && (Q = ce);
              break;
            }
            case "initialPlacement":
              Q = u;
              break;
          }
        if (a !== Q)
          return {
            reset: {
              placement: Q
            }
          };
      }
      return {};
    }
  };
};
async function aM(e, t) {
  const {
    placement: n,
    platform: r,
    elements: a
  } = e, s = await (r.isRTL == null ? void 0 : r.isRTL(a.floating)), o = oa(n), u = sa(n), f = zl(n) === "y", _ = ["left", "top"].includes(o) ? -1 : 1, m = s && f ? -1 : 1, b = ci(t, e);
  let {
    mainAxis: v,
    crossAxis: g,
    alignmentAxis: S
  } = typeof b == "number" ? {
    mainAxis: b,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...b
  };
  return u && typeof S == "number" && (g = u === "end" ? S * -1 : S), f ? {
    x: g * m,
    y: v * _
  } : {
    x: v * _,
    y: g * m
  };
}
const iM = function(e) {
  return e === void 0 && (e = 0), {
    name: "offset",
    options: e,
    async fn(t) {
      var n, r;
      const {
        x: a,
        y: s,
        placement: o,
        middlewareData: u
      } = t, f = await aM(t, e);
      return o === ((n = u.offset) == null ? void 0 : n.placement) && (r = u.arrow) != null && r.alignmentOffset ? {} : {
        x: a + f.x,
        y: s + f.y,
        data: {
          ...f,
          placement: o
        }
      };
    }
  };
}, sM = function(e) {
  return e === void 0 && (e = {}), {
    name: "shift",
    options: e,
    async fn(t) {
      const {
        x: n,
        y: r,
        placement: a
      } = t, {
        mainAxis: s = !0,
        crossAxis: o = !1,
        limiter: u = {
          fn: (w) => {
            let {
              x: T,
              y: I
            } = w;
            return {
              x: T,
              y: I
            };
          }
        },
        ...f
      } = ci(e, t), _ = {
        x: n,
        y: r
      }, m = await Bh(t, f), b = zl(oa(a)), v = Dh(b);
      let g = _[v], S = _[b];
      if (s) {
        const w = v === "y" ? "top" : "left", T = v === "y" ? "bottom" : "right", I = g + m[w], C = g - m[T];
        g = Bf(I, g, C);
      }
      if (o) {
        const w = b === "y" ? "top" : "left", T = b === "y" ? "bottom" : "right", I = S + m[w], C = S - m[T];
        S = Bf(I, S, C);
      }
      const A = u.fn({
        ...t,
        [v]: g,
        [b]: S
      });
      return {
        ...A,
        data: {
          x: A.x - n,
          y: A.y - r
        }
      };
    }
  };
}, lM = function(e) {
  return e === void 0 && (e = {}), {
    options: e,
    fn(t) {
      const {
        x: n,
        y: r,
        placement: a,
        rects: s,
        middlewareData: o
      } = t, {
        offset: u = 0,
        mainAxis: f = !0,
        crossAxis: _ = !0
      } = ci(e, t), m = {
        x: n,
        y: r
      }, b = zl(a), v = Dh(b);
      let g = m[v], S = m[b];
      const A = ci(u, t), w = typeof A == "number" ? {
        mainAxis: A,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...A
      };
      if (f) {
        const C = v === "y" ? "height" : "width", E = s.reference[v] - s.floating[C] + w.mainAxis, P = s.reference[v] + s.reference[C] - w.mainAxis;
        g < E ? g = E : g > P && (g = P);
      }
      if (_) {
        var T, I;
        const C = v === "y" ? "width" : "height", E = ["top", "left"].includes(oa(a)), P = s.reference[b] - s.floating[C] + (E && ((T = o.offset) == null ? void 0 : T[b]) || 0) + (E ? 0 : w.crossAxis), M = s.reference[b] + s.reference[C] + (E ? 0 : ((I = o.offset) == null ? void 0 : I[b]) || 0) - (E ? w.crossAxis : 0);
        S < P ? S = P : S > M && (S = M);
      }
      return {
        [v]: g,
        [b]: S
      };
    }
  };
};
function id() {
  return typeof window < "u";
}
function Ra(e) {
  return kh(e) ? (e.nodeName || "").toLowerCase() : "#document";
}
function Kn(e) {
  var t;
  return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;
}
function $a(e) {
  var t;
  return (t = (kh(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement;
}
function kh(e) {
  return id() ? e instanceof Node || e instanceof Kn(e).Node : !1;
}
function ua(e) {
  return id() ? e instanceof Element || e instanceof Kn(e).Element : !1;
}
function da(e) {
  return id() ? e instanceof HTMLElement || e instanceof Kn(e).HTMLElement : !1;
}
function Xb(e) {
  return !id() || typeof ShadowRoot > "u" ? !1 : e instanceof ShadowRoot || e instanceof Kn(e).ShadowRoot;
}
function Kl(e) {
  const {
    overflow: t,
    overflowX: n,
    overflowY: r,
    display: a
  } = Ar(e);
  return /auto|scroll|overlay|hidden|clip/.test(t + r + n) && !["inline", "contents"].includes(a);
}
function oM(e) {
  return ["table", "td", "th"].includes(Ra(e));
}
function uM(e) {
  return [":popover-open", ":modal"].some((t) => {
    try {
      return e.matches(t);
    } catch {
      return !1;
    }
  });
}
function Mh(e) {
  const t = Fh(), n = ua(e) ? Ar(e) : e;
  return n.transform !== "none" || n.perspective !== "none" || (n.containerType ? n.containerType !== "normal" : !1) || !t && (n.backdropFilter ? n.backdropFilter !== "none" : !1) || !t && (n.filter ? n.filter !== "none" : !1) || ["transform", "perspective", "filter"].some((r) => (n.willChange || "").includes(r)) || ["paint", "layout", "strict", "content"].some((r) => (n.contain || "").includes(r));
}
function dM(e) {
  let t = Es(e);
  for (; da(t) && !sd(t); ) {
    if (Mh(t))
      return t;
    if (uM(t))
      return null;
    t = Es(t);
  }
  return null;
}
function Fh() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
function sd(e) {
  return ["html", "body", "#document"].includes(Ra(e));
}
function Ar(e) {
  return Kn(e).getComputedStyle(e);
}
function ld(e) {
  return ua(e) ? {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  } : {
    scrollLeft: e.scrollX,
    scrollTop: e.scrollY
  };
}
function Es(e) {
  if (Ra(e) === "html")
    return e;
  const t = (
    // Step into the shadow DOM of the parent of a slotted node.
    e.assignedSlot || // DOM Element detected.
    e.parentNode || // ShadowRoot detected.
    Xb(e) && e.host || // Fallback.
    $a(e)
  );
  return Xb(t) ? t.host : t;
}
function mg(e) {
  const t = Es(e);
  return sd(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : da(t) && Kl(t) ? t : mg(t);
}
function Pl(e, t, n) {
  var r;
  t === void 0 && (t = []), n === void 0 && (n = !0);
  const a = mg(e), s = a === ((r = e.ownerDocument) == null ? void 0 : r.body), o = Kn(a);
  if (s) {
    const u = cM(o);
    return t.concat(o, o.visualViewport || [], Kl(a) ? a : [], u && n ? Pl(u) : []);
  }
  return t.concat(a, Pl(a, [], n));
}
function cM(e) {
  return e.parent && Object.getPrototypeOf(e.parent) ? e.frameElement : null;
}
function bg(e) {
  const t = Ar(e);
  let n = parseFloat(t.width) || 0, r = parseFloat(t.height) || 0;
  const a = da(e), s = a ? e.offsetWidth : n, o = a ? e.offsetHeight : r, u = Ou(n) !== s || Ou(r) !== o;
  return u && (n = s, r = o), {
    width: n,
    height: r,
    $: u
  };
}
function qh(e) {
  return ua(e) ? e : e.contextElement;
}
function gs(e) {
  const t = qh(e);
  if (!da(t))
    return di(1);
  const n = t.getBoundingClientRect(), {
    width: r,
    height: a,
    $: s
  } = bg(t);
  let o = (s ? Ou(n.width) : n.width) / r, u = (s ? Ou(n.height) : n.height) / a;
  return (!o || !Number.isFinite(o)) && (o = 1), (!u || !Number.isFinite(u)) && (u = 1), {
    x: o,
    y: u
  };
}
const fM = /* @__PURE__ */ di(0);
function vg(e) {
  const t = Kn(e);
  return !Fh() || !t.visualViewport ? fM : {
    x: t.visualViewport.offsetLeft,
    y: t.visualViewport.offsetTop
  };
}
function hM(e, t, n) {
  return t === void 0 && (t = !1), !n || t && n !== Kn(e) ? !1 : t;
}
function Ni(e, t, n, r) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  const a = e.getBoundingClientRect(), s = qh(e);
  let o = di(1);
  t && (r ? ua(r) && (o = gs(r)) : o = gs(e));
  const u = hM(s, n, r) ? vg(s) : di(0);
  let f = (a.left + u.x) / o.x, _ = (a.top + u.y) / o.y, m = a.width / o.x, b = a.height / o.y;
  if (s) {
    const v = Kn(s), g = r && ua(r) ? Kn(r) : r;
    let S = v, A = S.frameElement;
    for (; A && r && g !== S; ) {
      const w = gs(A), T = A.getBoundingClientRect(), I = Ar(A), C = T.left + (A.clientLeft + parseFloat(I.paddingLeft)) * w.x, E = T.top + (A.clientTop + parseFloat(I.paddingTop)) * w.y;
      f *= w.x, _ *= w.y, m *= w.x, b *= w.y, f += C, _ += E, S = Kn(A), A = S.frameElement;
    }
  }
  return Ru({
    width: m,
    height: b,
    x: f,
    y: _
  });
}
const pM = [":popover-open", ":modal"];
function yg(e) {
  return pM.some((t) => {
    try {
      return e.matches(t);
    } catch {
      return !1;
    }
  });
}
function _M(e) {
  let {
    elements: t,
    rect: n,
    offsetParent: r,
    strategy: a
  } = e;
  const s = a === "fixed", o = $a(r), u = t ? yg(t.floating) : !1;
  if (r === o || u && s)
    return n;
  let f = {
    scrollLeft: 0,
    scrollTop: 0
  }, _ = di(1);
  const m = di(0), b = da(r);
  if ((b || !b && !s) && ((Ra(r) !== "body" || Kl(o)) && (f = ld(r)), da(r))) {
    const v = Ni(r);
    _ = gs(r), m.x = v.x + r.clientLeft, m.y = v.y + r.clientTop;
  }
  return {
    width: n.width * _.x,
    height: n.height * _.y,
    x: n.x * _.x - f.scrollLeft * _.x + m.x,
    y: n.y * _.y - f.scrollTop * _.y + m.y
  };
}
function mM(e) {
  return Array.from(e.getClientRects());
}
function gg(e) {
  return Ni($a(e)).left + ld(e).scrollLeft;
}
function bM(e) {
  const t = $a(e), n = ld(e), r = e.ownerDocument.body, a = Bi(t.scrollWidth, t.clientWidth, r.scrollWidth, r.clientWidth), s = Bi(t.scrollHeight, t.clientHeight, r.scrollHeight, r.clientHeight);
  let o = -n.scrollLeft + gg(e);
  const u = -n.scrollTop;
  return Ar(r).direction === "rtl" && (o += Bi(t.clientWidth, r.clientWidth) - a), {
    width: a,
    height: s,
    x: o,
    y: u
  };
}
function vM(e, t) {
  const n = Kn(e), r = $a(e), a = n.visualViewport;
  let s = r.clientWidth, o = r.clientHeight, u = 0, f = 0;
  if (a) {
    s = a.width, o = a.height;
    const _ = Fh();
    (!_ || _ && t === "fixed") && (u = a.offsetLeft, f = a.offsetTop);
  }
  return {
    width: s,
    height: o,
    x: u,
    y: f
  };
}
function yM(e, t) {
  const n = Ni(e, !0, t === "fixed"), r = n.top + e.clientTop, a = n.left + e.clientLeft, s = da(e) ? gs(e) : di(1), o = e.clientWidth * s.x, u = e.clientHeight * s.y, f = a * s.x, _ = r * s.y;
  return {
    width: o,
    height: u,
    x: f,
    y: _
  };
}
function Zb(e, t, n) {
  let r;
  if (t === "viewport")
    r = vM(e, n);
  else if (t === "document")
    r = bM($a(e));
  else if (ua(t))
    r = yM(t, n);
  else {
    const a = vg(e);
    r = {
      ...t,
      x: t.x - a.x,
      y: t.y - a.y
    };
  }
  return Ru(r);
}
function Sg(e, t) {
  const n = Es(e);
  return n === t || !ua(n) || sd(n) ? !1 : Ar(n).position === "fixed" || Sg(n, t);
}
function gM(e, t) {
  const n = t.get(e);
  if (n)
    return n;
  let r = Pl(e, [], !1).filter((u) => ua(u) && Ra(u) !== "body"), a = null;
  const s = Ar(e).position === "fixed";
  let o = s ? Es(e) : e;
  for (; ua(o) && !sd(o); ) {
    const u = Ar(o), f = Mh(o);
    !f && u.position === "fixed" && (a = null), (s ? !f && !a : !f && u.position === "static" && !!a && ["absolute", "fixed"].includes(a.position) || Kl(o) && !f && Sg(e, o)) ? r = r.filter((m) => m !== o) : a = u, o = Es(o);
  }
  return t.set(e, r), r;
}
function SM(e) {
  let {
    element: t,
    boundary: n,
    rootBoundary: r,
    strategy: a
  } = e;
  const o = [...n === "clippingAncestors" ? gM(t, this._c) : [].concat(n), r], u = o[0], f = o.reduce((_, m) => {
    const b = Zb(t, m, a);
    return _.top = Bi(b.top, _.top), _.right = Ls(b.right, _.right), _.bottom = Ls(b.bottom, _.bottom), _.left = Bi(b.left, _.left), _;
  }, Zb(t, u, a));
  return {
    width: f.right - f.left,
    height: f.bottom - f.top,
    x: f.left,
    y: f.top
  };
}
function AM(e) {
  const {
    width: t,
    height: n
  } = bg(e);
  return {
    width: t,
    height: n
  };
}
function wM(e, t, n) {
  const r = da(t), a = $a(t), s = n === "fixed", o = Ni(e, !0, s, t);
  let u = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const f = di(0);
  if (r || !r && !s)
    if ((Ra(t) !== "body" || Kl(a)) && (u = ld(t)), r) {
      const b = Ni(t, !0, s, t);
      f.x = b.x + t.clientLeft, f.y = b.y + t.clientTop;
    } else a && (f.x = gg(a));
  const _ = o.left + u.scrollLeft - f.x, m = o.top + u.scrollTop - f.y;
  return {
    x: _,
    y: m,
    width: o.width,
    height: o.height
  };
}
function Jb(e, t) {
  return !da(e) || Ar(e).position === "fixed" ? null : t ? t(e) : e.offsetParent;
}
function Ag(e, t) {
  const n = Kn(e);
  if (!da(e) || yg(e))
    return n;
  let r = Jb(e, t);
  for (; r && oM(r) && Ar(r).position === "static"; )
    r = Jb(r, t);
  return r && (Ra(r) === "html" || Ra(r) === "body" && Ar(r).position === "static" && !Mh(r)) ? n : r || dM(e) || n;
}
const TM = async function(e) {
  const t = this.getOffsetParent || Ag, n = this.getDimensions;
  return {
    reference: wM(e.reference, await t(e.floating), e.strategy),
    floating: {
      x: 0,
      y: 0,
      ...await n(e.floating)
    }
  };
};
function xM(e) {
  return Ar(e).direction === "rtl";
}
const CM = {
  convertOffsetParentRelativeRectToViewportRelativeRect: _M,
  getDocumentElement: $a,
  getClippingRect: SM,
  getOffsetParent: Ag,
  getElementRects: TM,
  getClientRects: mM,
  getDimensions: AM,
  getScale: gs,
  isElement: ua,
  isRTL: xM
};
function IM(e, t) {
  let n = null, r;
  const a = $a(e);
  function s() {
    var u;
    clearTimeout(r), (u = n) == null || u.disconnect(), n = null;
  }
  function o(u, f) {
    u === void 0 && (u = !1), f === void 0 && (f = 1), s();
    const {
      left: _,
      top: m,
      width: b,
      height: v
    } = e.getBoundingClientRect();
    if (u || t(), !b || !v)
      return;
    const g = su(m), S = su(a.clientWidth - (_ + b)), A = su(a.clientHeight - (m + v)), w = su(_), I = {
      rootMargin: -g + "px " + -S + "px " + -A + "px " + -w + "px",
      threshold: Bi(0, Ls(1, f)) || 1
    };
    let C = !0;
    function E(P) {
      const M = P[0].intersectionRatio;
      if (M !== f) {
        if (!C)
          return o();
        M ? o(!1, M) : r = setTimeout(() => {
          o(!1, 1e-7);
        }, 100);
      }
      C = !1;
    }
    try {
      n = new IntersectionObserver(E, {
        ...I,
        // Handle <iframe>s
        root: a.ownerDocument
      });
    } catch {
      n = new IntersectionObserver(E, I);
    }
    n.observe(e);
  }
  return o(!0), s;
}
function Xl(e, t, n, r) {
  r === void 0 && (r = {});
  const {
    ancestorScroll: a = !0,
    ancestorResize: s = !0,
    elementResize: o = typeof ResizeObserver == "function",
    layoutShift: u = typeof IntersectionObserver == "function",
    animationFrame: f = !1
  } = r, _ = qh(e), m = a || s ? [..._ ? Pl(_) : [], ...Pl(t)] : [];
  m.forEach((T) => {
    a && T.addEventListener("scroll", n, {
      passive: !0
    }), s && T.addEventListener("resize", n);
  });
  const b = _ && u ? IM(_, n) : null;
  let v = -1, g = null;
  o && (g = new ResizeObserver((T) => {
    let [I] = T;
    I && I.target === _ && g && (g.unobserve(t), cancelAnimationFrame(v), v = requestAnimationFrame(() => {
      var C;
      (C = g) == null || C.observe(t);
    })), n();
  }), _ && !f && g.observe(_), g.observe(t));
  let S, A = f ? Ni(e) : null;
  f && w();
  function w() {
    const T = Ni(e);
    A && (T.x !== A.x || T.y !== A.y || T.width !== A.width || T.height !== A.height) && n(), A = T, S = requestAnimationFrame(w);
  }
  return n(), () => {
    var T;
    m.forEach((I) => {
      a && I.removeEventListener("scroll", n), s && I.removeEventListener("resize", n);
    }), b == null || b(), (T = g) == null || T.disconnect(), g = null, f && cancelAnimationFrame(S);
  };
}
const LM = nM, Zl = sM, Jl = rM, EM = eM, od = lM, Ql = (e, t, n) => {
  const r = /* @__PURE__ */ new Map(), a = {
    platform: CM,
    ...n
  }, s = {
    ...a.platform,
    _c: r
  };
  return Qk(e, t, {
    ...a,
    platform: s
  });
};
function OM(e) {
  return e != null && typeof e == "object" && "$el" in e;
}
function DM(e) {
  if (OM(e)) {
    const t = e.$el;
    return kh(t) && Ra(t) === "#comment" ? null : t;
  }
  return e;
}
function PM(e) {
  return typeof e == "function" ? e() : KI(e);
}
function RM(e) {
  return {
    name: "arrow",
    options: e,
    fn(t) {
      const n = DM(PM(e.element));
      return n == null ? {} : EM({
        element: n,
        padding: e.padding
      }).fn(t);
    }
  };
}
const X = {
  arrowDown: 40,
  arrowLeft: 37,
  arrowRight: 39,
  arrowUp: 38,
  e: 69,
  enter: 13,
  escape: 27,
  minus: 189,
  numMinus: 109,
  numPlus: 107,
  plus: 187,
  space: 32,
  tab: 9,
  backspace: 8,
  del: 46,
  home: 36,
  end: 35
};
function BM(e) {
  const t = p(e, "id"), n = p(e, "offsetDistance"), r = p(e, "offsetSkidding"), a = p(e, "placement"), s = p(e, "timeClose"), o = R(void 0), u = R(void 0), f = R(!1), _ = R(void 0), m = R(void 0), b = R(void 0), v = d(() => document.getElementById(t.value)), g = d(() => a.value && a.value.includes("auto")), S = d(() => [
    iM({
      mainAxis: n.value || 0,
      crossAxis: r.value || 0,
      alignmentAxis: null
    }),
    g.value ? LM() : Jl(),
    Zl({ limiter: od() }),
    m.value && RM({
      element: m.value,
      padding: 5
    })
  ]), A = ($) => {
    $.keyCode === X.escape && W();
  }, w = () => {
    document.addEventListener("keydown", A);
  }, T = () => {
    document.removeEventListener("keydown", A);
  }, I = () => {
    Ht.$on("closeHtmlTitle", W);
  }, C = () => {
    Ht.$off("closeHtmlTitle", W);
  }, E = () => {
    o.value && (o.value(), o.value = void 0);
  }, P = () => {
    _.value = setTimeout(() => {
      W();
    }, s.value);
  }, M = () => {
    if (f.value) {
      clearTimeout(_.value);
      return;
    }
    f.value = !0;
  }, k = () => {
    o.value || !v.value || !b.value || (o.value = Xl(v.value, b.value, () => {
      !v.value || !b.value || Ql(
        v.value,
        b.value,
        {
          placement: a.value,
          middleware: S.value
        }
      ).then(({ x: $, y: z, middlewareData: ne, placement: Q }) => {
        Object.assign(b.value.style, {
          left: `${$}px`,
          top: `${z}px`
        });
        const ce = Q.split("-")[0], he = {
          top: "bottom",
          right: "left",
          bottom: "top",
          left: "right"
        }[ce];
        if (ne.arrow) {
          const { x: ve, y: me } = ne.arrow;
          Object.assign(m.value.style, {
            left: ae(ve) ? "" : `${ve}px`,
            top: ae(me) ? "" : `${me}px`,
            [he]: `${-m.value.offsetWidth / 2}px`
          });
        }
      });
    }), Ht.$emit("closeHtmlTitle"), I(), w());
  }, F = () => {
    clearTimeout(_.value);
  }, D = () => {
    P();
  };
  function W() {
    clearTimeout(_.value), E(), C(), T(), f.value = !1;
  }
  return {
    closeTitle: W,
    closeTitleWithTimer: P,
    componentRef: u,
    isTitleVisible: f,
    mouseEnterTooltip: F,
    mouseLeaveTooltip: D,
    showTitle: M,
    startPopper: k,
    titleArrowRef: m,
    titleRef: b
  };
}
function Nh(e) {
  const t = p(e, "popperContainerId"), n = d(() => `#${t.value}`);
  return {
    addPopperContainerInBody: ({ className: a = "a_popup_container" } = {}) => {
      if (!document.getElementById(t.value)) {
        const o = document.createElement("div");
        o.id = t.value, o.className = a, document.body.prepend(o);
      }
    },
    popperContainerIdSelector: n
  };
}
const kM = ["RouterLink", "router-link"];
function MM(e) {
  const t = p(e, "tag");
  return {
    tagLocal: d(() => kM.indexOf(t.value) !== -1 ? la(t.value) : t.value)
  };
}
function FM(e, {
  showTitle: t = () => {
  },
  closeTitle: n = () => {
  },
  closeTitleWithTimer: r = () => {
  }
}) {
  const a = p(e, "isHide");
  return {
    onBlur: () => {
      n();
    },
    onFocus: () => {
      a.value || t();
    },
    onMouseenter: () => {
      a.value || t();
    },
    onMouseleave: () => {
      r();
    }
  };
}
const Ur = [
  "auto",
  "auto-start",
  "auto-end",
  "top",
  "top-start",
  "top-end",
  "right",
  "right-start",
  "right-end",
  "bottom",
  "bottom-start",
  "bottom-end",
  "left",
  "left-start",
  "left-end"
], wg = {
  name: "ATooltip",
  props: {
    arrowPadding: {
      type: [Number, Function],
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => mt("a_tooltip_")
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    maxWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    minWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    offsetDistance: {
      type: Number,
      required: !1,
      default: 6
    },
    offsetSkidding: {
      type: Number,
      required: !1,
      default: 0
    },
    placement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Ur.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: "a_tooltip_container"
    },
    showArrow: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tag: {
      type: String,
      required: !1,
      default: "span"
    },
    timeClose: {
      type: Number,
      required: !1,
      default: 100,
      validator: (e) => e >= 0
    },
    width: {
      type: Number,
      required: !1,
      default: void 0
    },
    withoutAriaDescribedby: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      closeTitle: t,
      closeTitleWithTimer: n,
      componentRef: r,
      isTitleVisible: a,
      mouseEnterTooltip: s,
      mouseLeaveTooltip: o,
      showTitle: u,
      startPopper: f,
      titleArrowRef: _,
      titleRef: m
    } = BM(e), {
      onBlur: b,
      onFocus: v,
      onMouseenter: g,
      onMouseleave: S
    } = FM(e, {
      showTitle: u,
      closeTitle: t,
      closeTitleWithTimer: n
    }), {
      tagLocal: A
    } = MM(e), {
      ariaDescribedby: w,
      tooltipStyles: T
    } = jk(e, {
      isTitleVisible: a
    }), {
      addPopperContainerInBody: I,
      popperContainerIdSelector: C
    } = Nh(e);
    return I(), Bt(() => {
      t();
    }), {
      ariaDescribedby: w,
      closeTitle: t,
      componentRef: r,
      isTitleVisible: a,
      mouseEnterTooltip: s,
      mouseLeaveTooltip: o,
      onBlur: b,
      onFocus: v,
      onMouseenter: g,
      onMouseleave: S,
      showTitle: u,
      popperContainerIdSelector: C,
      startPopper: f,
      tagLocal: A,
      titleArrowRef: _,
      titleRef: m,
      tooltipStyles: T
    };
  },
  render() {
    return c(this.tagLocal, {
      ref: "componentRef",
      id: this.id,
      "aria-describedby": this.ariaDescribedby,
      onFocus: this.onFocus,
      onBlur: this.onBlur,
      onMouseenter: this.onMouseenter,
      onMouseleave: this.onMouseleave
    }, {
      default: () => [
        this.$slots.default && this.$slots.default(),
        !this.isHide && c(fa, {
          to: this.popperContainerIdSelector
        }, [
          // h("div", {
          //   id: this.ariaDescribedby,
          //   class: "a_sr_only",
          // }, [
          //   this.$slots.title && this.$slots.title(),
          // ]),
          !!(this.$slots.title && this.isTitleVisible) && Ft(c("div", {
            ref: "titleRef",
            class: "a_tooltip__container",
            style: this.tooltipStyles,
            onMouseenter: this.mouseEnterTooltip,
            onMouseleave: this.mouseLeaveTooltip
          }, [
            this.showArrow && c("div", {
              ref: "titleArrowRef",
              "data-popper-arrow": !0,
              class: "a_tooltip__arrow"
            }),
            c("div", {
              id: this.ariaDescribedby,
              class: "a_tooltip__wrapper"
            }, this.$slots.title && this.$slots.title())
          ]), [
            [Dl, {
              mounted: this.startPopper
            }]
          ])
        ])
      ]
    });
  }
};
function qM(e, {
  tagLocal: t = d(() => "")
}) {
  const n = p(e, "isTitleHtml");
  return {
    componentLocal: d(() => n.value ? wg : t.value)
  };
}
function NM(e) {
  const t = p(e, "type"), n = p(e, "disabled");
  return {
    disabledLocal: d(() => {
      if (["button", "submit", "reset"].indexOf(t.value) !== -1 && n.value)
        return !0;
    })
  };
}
function VM(e, {
  tagLocal: t = d(() => "")
}) {
  const n = p(e, "isTitleHtml"), r = p(e, "titleAttributes"), a = p(e, "titlePlacement"), s = R(void 0), o = d(() => n.value ? {
    tag: t.value,
    placement: a.value,
    withoutAriaDescribedby: !0,
    ...r.value
  } : {});
  return {
    elementRef: s,
    htmlTitleAttributes: o
  };
}
function HM(e) {
  const t = p(e, "loading"), n = p(e, "loadingAlign"), r = d(() => t.value && n.value === "left"), a = d(() => t.value && n.value === "right");
  return {
    isLoadingLeft: r,
    isLoadingRight: a
  };
}
function $M(e) {
  const t = p(e, "disabled"), n = p(e, "to"), r = p(e, "type");
  return {
    isRouterLink: d(() => r.value === "link" && !!n.value && !t.value)
  };
}
const Qb = "a_btn a_btn_switch";
function WM(e) {
  const t = p(e, "isSwitch"), n = p(e, "modelSwitch"), r = d(() => {
    if (t.value)
      return !!n.value;
  }), a = d(() => {
    if (t.value)
      return n.value ? `${Qb} a_btn_switch_active` : Qb;
  });
  return {
    isSwitchActive: r,
    switchClass: a
  };
}
const UM = {
  button: "button",
  submit: "button",
  reset: "button",
  link: "a",
  text: "span"
};
function jM(e, {
  isRouterLink: t = d(() => !1)
}) {
  const n = p(e, "tag"), r = p(e, "type");
  return {
    tagLocal: d(() => n.value ? n.value : t.value ? la("RouterLink") : UM[r.value] || "span")
  };
}
function GM(e) {
  const t = p(e, "html"), n = p(e, "htmlScreenReader"), r = p(e, "safeHtml"), a = p(e, "safeHtmlScreenReader"), s = p(e, "text"), o = p(e, "textScreenReader"), u = d(() => dt(s.value) ? !Mn(s.value) : !ae(s.value) && s.value !== ""), f = d(() => dt(r.value) ? !Mn(r.value) : !ae(r.value) && r.value !== ""), _ = d(() => dt(t.value) ? !Mn(t.value) : !ae(t.value) && t.value !== ""), m = d(() => u.value || f.value || _.value), b = d(() => dt(o.value) ? !Mn(o.value) : !ae(o.value) && o.value !== ""), v = d(() => dt(a.value) ? !Mn(a.value) : !ae(a.value) && a.value !== ""), g = d(() => dt(n.value) ? !Mn(n.value) : !ae(n.value) && n.value !== ""), S = d(() => b.value || v.value || g.value);
  return {
    isTextOrHtmlVisible: m,
    isTextOrHtmlScreenReaderVisible: S
  };
}
function YM(e) {
  const t = p(e, "title");
  return {
    isTitleVisible: d(() => Ae(t.value) && t.value.length > 0 ? !0 : dt(t.value) ? !Mn(t.value) : !qe(t.value))
  };
}
function zt(e) {
  const t = p(e, "excludeRenderAttributes");
  return {
    attributesToExcludeFromRender: d(() => {
      const r = {};
      return Y(t.value, (a) => {
        r[a] = void 0;
      }), r;
    })
  };
}
const Oe = {
  name: "AElement",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaDisabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    href: {
      type: String,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => mt("a_element_")
    },
    isSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    modelSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tabindex: {
      type: [Number, String],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: void 0
    },
    target: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Ur.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => yt(e) ? e === "auto" : hi(e)
    },
    to: {
      type: [Object, String],
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0,
      default: "text",
      validator: (e) => ["button", "submit", "reset", "link", "text"].indexOf(e) !== -1
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = zt(e), {
      isRouterLink: r
    } = $M(e), {
      disabledLocal: a
    } = NM(e), {
      tagLocal: s
    } = jM(e, {
      isRouterLink: r
    }), {
      toHrefAttributes: o,
      typeAttribut: u
    } = Wk(e, {
      isRouterLink: r,
      tagLocal: s
    }), {
      isTitleVisible: f
    } = YM(e), {
      isLoadingLeft: _,
      isLoadingRight: m
    } = HM(e), {
      isTextOrHtmlVisible: b,
      isTextOrHtmlScreenReaderVisible: v
    } = GM(e), {
      onClick: g
    } = Uk(e, t), {
      componentLocal: S
    } = qM(e, {
      tagLocal: s
    }), {
      elementRef: A,
      htmlTitleAttributes: w
    } = VM(e, {
      tagLocal: s
    }), {
      ariaLabelAttributes: T
    } = Oh(e), {
      isSwitchActive: I,
      switchClass: C
    } = WM(e);
    return {
      ariaLabelAttributes: T,
      attributesToExcludeFromRender: n,
      componentLocal: S,
      disabledLocal: a,
      elementRef: A,
      htmlTitleAttributes: w,
      isLoadingLeft: _,
      isLoadingRight: m,
      isSwitchActive: I,
      isTextOrHtmlScreenReaderVisible: v,
      isTextOrHtmlVisible: b,
      isTitleVisible: f,
      onClick: g,
      switchClass: C,
      tagLocal: s,
      toHrefAttributes: o,
      typeAttribut: u
    };
  },
  render() {
    return c(this.componentLocal, {
      ...this.$attrs,
      ...this.htmlTitleAttributes,
      ...this.ariaLabelAttributes,
      ...this.toHrefAttributes,
      ref: "elementRef",
      id: this.id,
      class: [
        this.classDefault,
        this.switchClass,
        this.class,
        {
          [this.classDisabled]: this.ariaDisabled
        }
      ],
      type: this.typeAttribut,
      tabindex: this.tabindex,
      disabled: this.disabledLocal,
      ariaDisabled: this.ariaDisabled,
      "aria-pressed": this.isSwitchActive,
      isAllRowsSelected: void 0,
      // TODO: ATable
      onClick: this.onClick,
      ...this.attributes,
      ...this.attributesToExcludeFromRender
    }, {
      default: () => [
        !this.isTitleHtml && this.isTitleVisible ? c(be, {
          tag: "span",
          alwaysTranslate: this.alwaysTranslate,
          ariaHidden: !0,
          class: [
            "a_position_absolute_all",
            this.classDefaultHidden
          ],
          title: this.title,
          extra: this.extra,
          style: {
            zIndex: this.titleZIndex
          },
          ...this.titleAttributes
        }) : "",
        this.isTextOrHtmlScreenReaderVisible ? c(be, {
          alwaysTranslate: this.alwaysTranslate,
          class: [
            "a_sr_only",
            this.classDefaultHidden
          ],
          tag: "span",
          text: this.textScreenReader,
          html: this.htmlScreenReader,
          safeHtml: this.safeHtmlScreenReader,
          extra: this.extra
        }) : "",
        this.$slots.buttonPrepend ? this.$slots.buttonPrepend({ extraData: this.extraData }) : "",
        this.isLoadingLeft ? c(Ol, {
          class: [
            "aloha_btn__spinner_left",
            this.loadingClass
          ]
        }) : "",
        c(lt, {
          icon: this.iconLeft,
          iconTag: this.iconTag,
          class: [
            "aloha_btn__icon_left",
            this.iconClass
          ],
          ...this.iconAttributes
        }),
        this.$slots.default ? this.$slots.default({ extraData: this.extraData }) : "",
        this.isTextOrHtmlVisible ? c(be, {
          alwaysTranslate: this.alwaysTranslate,
          ariaHidden: this.textAriaHidden,
          class: this.textClass,
          extra: this.extra,
          html: this.html,
          safeHtml: this.safeHtml,
          tag: this.textTag,
          text: this.text,
          textAfter: this.textAfter,
          textBefore: this.textBefore
        }) : "",
        c(lt, {
          icon: this.iconRight,
          iconTag: this.iconTag,
          class: [
            "aloha_btn__icon_right",
            this.iconClass
          ],
          ...this.iconAttributes
        }),
        this.isLoadingRight ? c(Ol, {
          class: [
            "aloha_btn__spinner_right",
            this.loadingClass
          ]
        }) : "",
        this.$slots.buttonAppend ? this.$slots.buttonAppend({ extraData: this.extraData }) : ""
      ],
      title: !this.isTitleHtml || !this.title && !this.$slots.buttonTitle ? () => "" : () => [
        this.isTitleVisible ? c(be, {
          alwaysTranslate: this.alwaysTranslate,
          html: this.title,
          tag: "span",
          extra: this.extra
        }) : "",
        this.$slots.buttonTitle ? this.$slots.buttonTitle({ extraData: this.extraData }) : ""
      ]
    });
  }
};
function Tg(e, { emit: t }) {
  return {
    clickEmit: (r) => {
      t("click", r);
    }
  };
}
const ct = {
  name: "AButton",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaDisabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => mt("a_btn_")
    },
    isSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    modelSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tabindex: {
      type: [Number, String],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Ur.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => yt(e) ? e === "auto" : hi(e)
    },
    type: {
      type: String,
      required: !1,
      default: "button",
      validator: (e) => ["button", "submit", "reset"].indexOf(e) !== -1
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      clickEmit: n
    } = Tg(e, t);
    return {
      clickEmit: n
    };
  },
  render() {
    return c(Oe, {
      ...this.$attrs,
      ...this.$props,
      onClick: this.clickEmit
    }, this.$slots);
  }
};
function zM(e) {
  const t = p(e, "type");
  return {
    alertClassLocal: d(() => `a_alert a_alert_${t.value}`)
  };
}
function KM(e, { emit: t }) {
  const n = p(e, "closable"), r = p(e, "removeAlertOnClose"), a = R(!1);
  return {
    close: () => {
      n.value && (r.value && (a.value = !0), t("close"));
    },
    isHidden: a
  };
}
const XM = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>
</svg>`, ud = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4m.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2"/>
</svg>`, ZM = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle-fill" viewBox="0 0 16 16">
  <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2"/>
</svg>`, dd = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293z"/>
</svg>`, Jt = R({
  propsDefault: {
    alertClass: void 0,
    alertContentClass: void 0,
    btnCloseAttributes: {},
    closable: !1,
    html: void 0,
    icon: void 0,
    iconClass: void 0,
    isVisible: !1,
    removeAlertOnClose: !1,
    safeHtml: void 0,
    showIcon: !1,
    text: void 0,
    textClose: "_ALERT_CLOSE_",
    type: "danger"
  },
  icons: {
    success: XM,
    danger: dd,
    info: ZM,
    warning: ud
  }
}), wU = {
  install: (e, {
    propsDefault: t = {},
    icons: n = {}
  } = {}) => {
    Jt.value.propsDefault = {
      ...Jt.value.propsDefault,
      ...t
    }, Jt.value.icons = {
      ...Jt.value.icons,
      ...n
    };
  }
};
function JM(e) {
  const t = p(e, "icon"), n = p(e, "showIcon"), r = p(e, "type");
  return {
    iconLocal: d(() => {
      if (n.value)
        return t.value ? t.value : Jt.value.icons[r.value];
    })
  };
}
const Vh = {
  name: "AAlert",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    alertClass: {
      type: [String, Object],
      required: !1,
      default: () => Jt.value.propsDefault.alertClass
    },
    alertContentClass: {
      type: [String, Object],
      required: !1,
      default: () => Jt.value.propsDefault.alertContentClass
    },
    btnCloseAttributes: {
      type: Object,
      required: !1,
      default: () => Jt.value.propsDefault.btnCloseAttributes
    },
    closable: {
      type: Boolean,
      required: !1,
      default: () => Jt.value.propsDefault.closable
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    html: {
      type: String,
      required: !1,
      default: () => Jt.value.propsDefault.html
    },
    icon: {
      type: String,
      required: !1,
      default: () => Jt.value.propsDefault.icon
    },
    iconClass: {
      type: String,
      required: !1,
      default: () => Jt.value.propsDefault.iconClass
    },
    isVisible: {
      type: Boolean,
      required: !1,
      default: () => Jt.value.propsDefault.isVisible
    },
    removeAlertOnClose: {
      type: Boolean,
      required: !1,
      default: () => Jt.value.propsDefault.removeAlertOnClose
    },
    safeHtml: {
      type: String,
      required: !1,
      default: () => Jt.value.propsDefault.safeHtml
    },
    showIcon: {
      type: Boolean,
      required: !1,
      default: () => Jt.value.propsDefault.showIcon
    },
    text: {
      type: String,
      required: !1,
      default: () => Jt.value.propsDefault.text
    },
    textClose: {
      type: String,
      required: !1,
      default: () => Jt.value.propsDefault.textClose
    },
    type: {
      type: String,
      required: !1,
      default: () => Jt.value.propsDefault.type
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      alertClassLocal: r
    } = zM(e), {
      close: a,
      isHidden: s
    } = KM(e, t), {
      iconLocal: o
    } = JM(e);
    return n({
      close: a,
      isHidden: s
    }), {
      alertClassLocal: r,
      close: a,
      iconLocal: o,
      isHidden: s
    };
  },
  render() {
    return this.isHidden ? null : c("div", {
      class: [
        "a_alert__parent",
        {
          a_alert__parent_closable: this.closable
        }
      ]
    }, [
      c("div", {
        role: "alert",
        ariaAtomic: !0
      }, [
        this.isVisible && c("div", {
          class: [this.alertClass, this.alertClassLocal]
        }, [
          this.iconLocal && c(lt, {
            icon: this.iconLocal,
            class: [
              "a_alert__icon",
              this.iconClass
            ]
          }),
          c("div", {
            class: [
              "a_alert__content",
              this.alertContentClass
            ]
          }, [
            (this.html || this.text || this.safeHtml) && c(be, {
              alwaysTranslate: this.alwaysTranslate,
              extra: this.extra,
              html: this.html,
              safeHtml: this.safeHtml,
              text: this.text
            }),
            this.$slots.default && this.$slots.default()
          ])
        ])
      ]),
      this.isVisible && this.closable && c(ct, {
        alwaysTranslate: this.alwaysTranslate,
        type: "button",
        class: "a_btn_close",
        textScreenReader: this.textClose,
        ...this.btnCloseAttributes,
        onClick: this.close
      })
    ]);
  }
};
function xg(e) {
  const t = p(e, "dataItem"), n = p(e, "isButtonGroup"), r = p(e, "classButtonGroupDefault");
  return {
    classButton: d(() => {
      if (n.value)
        return t.value.classButton || r.value;
    })
  };
}
function QM(e, {
  valueLocal: t = d(() => {
  })
}) {
  const n = p(e, "modelValue");
  return {
    isChecked: d(() => n.value && n.value.indexOf(t.value) !== -1)
  };
}
function eF(e, { emit: t }, {
  disabledElement: n = d(() => {
  }),
  isChecked: r = d(() => !1),
  valueLocal: a = d(() => {
  })
}) {
  const s = p(e, "dataItem"), o = p(e, "modelValue"), u = (_) => {
    if (n.value) {
      _.preventDefault(), _.stopPropagation();
      return;
    }
    const m = Se(o.value) || [];
    if (r.value) {
      const b = m.indexOf(a.value);
      m.splice(b, 1);
    } else
      m.push(a.value);
    t("changeModelValue", {
      model: m,
      item: s.value,
      $event: _
    }), _.preventDefault(), _.stopPropagation();
  };
  return {
    onClick: u,
    onKeydown: (_) => {
      (_.key === "Enter" || _.keyCode === X.space) && (u(_), _.stopPropagation(), _.preventDefault());
    }
  };
}
const vt = "_a_label";
function Hh(e) {
  const t = p(e, "dataItem"), n = p(e, "id"), r = p(e, "idSuffix"), a = p(e, "itemIndex"), s = d(() => t.value[ze]), o = d(() => t.value[vt]), u = d(() => r.value ? `_${r.value}` : "");
  return {
    idLocal: d(() => `${n.value}_${a.value}${u.value}`),
    labelLocal: o,
    valueLocal: s
  };
}
function $h(e) {
  const t = p(e, "dataItem"), n = p(e, "disabled"), r = p(e, "keyDisabled");
  return {
    disabledElement: d(() => {
      if (n.value || r.value && de(t.value, r.value))
        return !0;
    })
  };
}
function Cg(e) {
  const t = p(e, "dataItem"), n = p(e, "keyTitle"), r = p(e, "keyTitleCallback");
  return {
    titleLocal: d(() => {
      if (r.value)
        return r.value({ item: t.value });
      if (n.value)
        return de(t.value, n.value);
    })
  };
}
function tF(e, {
  trueValue: t = "_YES_",
  falseValue: n = "_NO_",
  useNil: r = !0
} = {}) {
  return r && ae(e) ? "" : Kt(e ? { placeholder: t } : { placeholder: n });
}
function nF(e) {
  return mD(e);
}
function Sl(e, { suffix: t = "", digits: n = 2, digitGrouping: r = !0 } = {}) {
  if (ae(e))
    return "";
  let a = en(e);
  if (a.split(",").length - 1 > 1)
    return e;
  a = a.replace(",", ".").replace(/[.](?=.*[.])/g, "");
  let o = Ts(a);
  if (o === 0)
    return `0${n > 0 ? "," : ""}${XB("0", n)}${t ? ` ${t}` : ""}`;
  if (!o)
    return e;
  o = ZB(o, n), a = en(o);
  const u = a.split(".");
  let f = "";
  if (u[1])
    for (let g = 0; g < n; g++) {
      const S = qe(u[1][g]) ? "0" : u[1][g];
      f = `${f}${S}`;
    }
  else
    f = $B("", n, "0");
  let _ = en(u[0] || "0"), m = !1;
  _.startsWith("-") && (_ = _.substring(1), m = !0);
  let b = 0, v = "";
  return QR(_, (g) => {
    b > 0 && b % 3 === 0 && r && (v += "."), b++, v += g;
  }), `${m ? "-" : ""}${v.split("").reverse().join("")}${Ps(f) > 0 ? "," : ""}${f}${t ? ` ${t}` : ""}`;
}
function rF(e, { suffix: t = "€", digits: n = 2, digitGrouping: r = !0 } = {}) {
  return Sl(e, { suffix: t, digits: n, digitGrouping: r });
}
//! moment.js
//! version : 2.30.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
var Ig;
function ue() {
  return Ig.apply(null, arguments);
}
function aF(e) {
  Ig = e;
}
function Hr(e) {
  return e instanceof Array || Object.prototype.toString.call(e) === "[object Array]";
}
function ki(e) {
  return e != null && Object.prototype.toString.call(e) === "[object Object]";
}
function ht(e, t) {
  return Object.prototype.hasOwnProperty.call(e, t);
}
function Wh(e) {
  if (Object.getOwnPropertyNames)
    return Object.getOwnPropertyNames(e).length === 0;
  var t;
  for (t in e)
    if (ht(e, t))
      return !1;
  return !0;
}
function kn(e) {
  return e === void 0;
}
function Ba(e) {
  return typeof e == "number" || Object.prototype.toString.call(e) === "[object Number]";
}
function eo(e) {
  return e instanceof Date || Object.prototype.toString.call(e) === "[object Date]";
}
function Lg(e, t) {
  var n = [], r, a = e.length;
  for (r = 0; r < a; ++r)
    n.push(t(e[r], r));
  return n;
}
function si(e, t) {
  for (var n in t)
    ht(t, n) && (e[n] = t[n]);
  return ht(t, "toString") && (e.toString = t.toString), ht(t, "valueOf") && (e.valueOf = t.valueOf), e;
}
function _a(e, t, n, r) {
  return Zg(e, t, n, r, !0).utc();
}
function iF() {
  return {
    empty: !1,
    unusedTokens: [],
    unusedInput: [],
    overflow: -2,
    charsLeftOver: 0,
    nullInput: !1,
    invalidEra: null,
    invalidMonth: null,
    invalidFormat: !1,
    userInvalidated: !1,
    iso: !1,
    parsedDateParts: [],
    era: null,
    meridiem: null,
    rfc2822: !1,
    weekdayMismatch: !1
  };
}
function Ge(e) {
  return e._pf == null && (e._pf = iF()), e._pf;
}
var kf;
Array.prototype.some ? kf = Array.prototype.some : kf = function(e) {
  var t = Object(this), n = t.length >>> 0, r;
  for (r = 0; r < n; r++)
    if (r in t && e.call(this, t[r], r, t))
      return !0;
  return !1;
};
function Uh(e) {
  var t = null, n = !1, r = e._d && !isNaN(e._d.getTime());
  if (r && (t = Ge(e), n = kf.call(t.parsedDateParts, function(a) {
    return a != null;
  }), r = t.overflow < 0 && !t.empty && !t.invalidEra && !t.invalidMonth && !t.invalidWeekday && !t.weekdayMismatch && !t.nullInput && !t.invalidFormat && !t.userInvalidated && (!t.meridiem || t.meridiem && n), e._strict && (r = r && t.charsLeftOver === 0 && t.unusedTokens.length === 0 && t.bigHour === void 0)), Object.isFrozen == null || !Object.isFrozen(e))
    e._isValid = r;
  else
    return r;
  return e._isValid;
}
function cd(e) {
  var t = _a(NaN);
  return e != null ? si(Ge(t), e) : Ge(t).userInvalidated = !0, t;
}
var ev = ue.momentProperties = [], af = !1;
function jh(e, t) {
  var n, r, a, s = ev.length;
  if (kn(t._isAMomentObject) || (e._isAMomentObject = t._isAMomentObject), kn(t._i) || (e._i = t._i), kn(t._f) || (e._f = t._f), kn(t._l) || (e._l = t._l), kn(t._strict) || (e._strict = t._strict), kn(t._tzm) || (e._tzm = t._tzm), kn(t._isUTC) || (e._isUTC = t._isUTC), kn(t._offset) || (e._offset = t._offset), kn(t._pf) || (e._pf = Ge(t)), kn(t._locale) || (e._locale = t._locale), s > 0)
    for (n = 0; n < s; n++)
      r = ev[n], a = t[r], kn(a) || (e[r] = a);
  return e;
}
function to(e) {
  jh(this, e), this._d = new Date(e._d != null ? e._d.getTime() : NaN), this.isValid() || (this._d = /* @__PURE__ */ new Date(NaN)), af === !1 && (af = !0, ue.updateOffset(this), af = !1);
}
function $r(e) {
  return e instanceof to || e != null && e._isAMomentObject != null;
}
function Eg(e) {
  ue.suppressDeprecationWarnings === !1 && typeof console < "u" && console.warn && console.warn("Deprecation warning: " + e);
}
function Tr(e, t) {
  var n = !0;
  return si(function() {
    if (ue.deprecationHandler != null && ue.deprecationHandler(null, e), n) {
      var r = [], a, s, o, u = arguments.length;
      for (s = 0; s < u; s++) {
        if (a = "", typeof arguments[s] == "object") {
          a += `
[` + s + "] ";
          for (o in arguments[0])
            ht(arguments[0], o) && (a += o + ": " + arguments[0][o] + ", ");
          a = a.slice(0, -2);
        } else
          a = arguments[s];
        r.push(a);
      }
      Eg(
        e + `
Arguments: ` + Array.prototype.slice.call(r).join("") + `
` + new Error().stack
      ), n = !1;
    }
    return t.apply(this, arguments);
  }, t);
}
var tv = {};
function Og(e, t) {
  ue.deprecationHandler != null && ue.deprecationHandler(e, t), tv[e] || (Eg(t), tv[e] = !0);
}
ue.suppressDeprecationWarnings = !1;
ue.deprecationHandler = null;
function ma(e) {
  return typeof Function < "u" && e instanceof Function || Object.prototype.toString.call(e) === "[object Function]";
}
function sF(e) {
  var t, n;
  for (n in e)
    ht(e, n) && (t = e[n], ma(t) ? this[n] = t : this["_" + n] = t);
  this._config = e, this._dayOfMonthOrdinalParseLenient = new RegExp(
    (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source
  );
}
function Mf(e, t) {
  var n = si({}, e), r;
  for (r in t)
    ht(t, r) && (ki(e[r]) && ki(t[r]) ? (n[r] = {}, si(n[r], e[r]), si(n[r], t[r])) : t[r] != null ? n[r] = t[r] : delete n[r]);
  for (r in e)
    ht(e, r) && !ht(t, r) && ki(e[r]) && (n[r] = si({}, n[r]));
  return n;
}
function Gh(e) {
  e != null && this.set(e);
}
var Ff;
Object.keys ? Ff = Object.keys : Ff = function(e) {
  var t, n = [];
  for (t in e)
    ht(e, t) && n.push(t);
  return n;
};
var lF = {
  sameDay: "[Today at] LT",
  nextDay: "[Tomorrow at] LT",
  nextWeek: "dddd [at] LT",
  lastDay: "[Yesterday at] LT",
  lastWeek: "[Last] dddd [at] LT",
  sameElse: "L"
};
function oF(e, t, n) {
  var r = this._calendar[e] || this._calendar.sameElse;
  return ma(r) ? r.call(t, n) : r;
}
function ca(e, t, n) {
  var r = "" + Math.abs(e), a = t - r.length, s = e >= 0;
  return (s ? n ? "+" : "" : "-") + Math.pow(10, Math.max(0, a)).toString().substr(1) + r;
}
var Yh = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g, lu = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, sf = {}, Ss = {};
function Pe(e, t, n, r) {
  var a = r;
  typeof r == "string" && (a = function() {
    return this[r]();
  }), e && (Ss[e] = a), t && (Ss[t[0]] = function() {
    return ca(a.apply(this, arguments), t[1], t[2]);
  }), n && (Ss[n] = function() {
    return this.localeData().ordinal(
      a.apply(this, arguments),
      e
    );
  });
}
function uF(e) {
  return e.match(/\[[\s\S]/) ? e.replace(/^\[|\]$/g, "") : e.replace(/\\/g, "");
}
function dF(e) {
  var t = e.match(Yh), n, r;
  for (n = 0, r = t.length; n < r; n++)
    Ss[t[n]] ? t[n] = Ss[t[n]] : t[n] = uF(t[n]);
  return function(a) {
    var s = "", o;
    for (o = 0; o < r; o++)
      s += ma(t[o]) ? t[o].call(a, e) : t[o];
    return s;
  };
}
function pu(e, t) {
  return e.isValid() ? (t = Dg(t, e.localeData()), sf[t] = sf[t] || dF(t), sf[t](e)) : e.localeData().invalidDate();
}
function Dg(e, t) {
  var n = 5;
  function r(a) {
    return t.longDateFormat(a) || a;
  }
  for (lu.lastIndex = 0; n >= 0 && lu.test(e); )
    e = e.replace(
      lu,
      r
    ), lu.lastIndex = 0, n -= 1;
  return e;
}
var cF = {
  LTS: "h:mm:ss A",
  LT: "h:mm A",
  L: "MM/DD/YYYY",
  LL: "MMMM D, YYYY",
  LLL: "MMMM D, YYYY h:mm A",
  LLLL: "dddd, MMMM D, YYYY h:mm A"
};
function fF(e) {
  var t = this._longDateFormat[e], n = this._longDateFormat[e.toUpperCase()];
  return t || !n ? t : (this._longDateFormat[e] = n.match(Yh).map(function(r) {
    return r === "MMMM" || r === "MM" || r === "DD" || r === "dddd" ? r.slice(1) : r;
  }).join(""), this._longDateFormat[e]);
}
var hF = "Invalid date";
function pF() {
  return this._invalidDate;
}
var _F = "%d", mF = /\d{1,2}/;
function bF(e) {
  return this._ordinal.replace("%d", e);
}
var vF = {
  future: "in %s",
  past: "%s ago",
  s: "a few seconds",
  ss: "%d seconds",
  m: "a minute",
  mm: "%d minutes",
  h: "an hour",
  hh: "%d hours",
  d: "a day",
  dd: "%d days",
  w: "a week",
  ww: "%d weeks",
  M: "a month",
  MM: "%d months",
  y: "a year",
  yy: "%d years"
};
function yF(e, t, n, r) {
  var a = this._relativeTime[n];
  return ma(a) ? a(e, t, n, r) : a.replace(/%d/i, e);
}
function gF(e, t) {
  var n = this._relativeTime[e > 0 ? "future" : "past"];
  return ma(n) ? n(t) : n.replace(/%s/i, t);
}
var nv = {
  D: "date",
  dates: "date",
  date: "date",
  d: "day",
  days: "day",
  day: "day",
  e: "weekday",
  weekdays: "weekday",
  weekday: "weekday",
  E: "isoWeekday",
  isoweekdays: "isoWeekday",
  isoweekday: "isoWeekday",
  DDD: "dayOfYear",
  dayofyears: "dayOfYear",
  dayofyear: "dayOfYear",
  h: "hour",
  hours: "hour",
  hour: "hour",
  ms: "millisecond",
  milliseconds: "millisecond",
  millisecond: "millisecond",
  m: "minute",
  minutes: "minute",
  minute: "minute",
  M: "month",
  months: "month",
  month: "month",
  Q: "quarter",
  quarters: "quarter",
  quarter: "quarter",
  s: "second",
  seconds: "second",
  second: "second",
  gg: "weekYear",
  weekyears: "weekYear",
  weekyear: "weekYear",
  GG: "isoWeekYear",
  isoweekyears: "isoWeekYear",
  isoweekyear: "isoWeekYear",
  w: "week",
  weeks: "week",
  week: "week",
  W: "isoWeek",
  isoweeks: "isoWeek",
  isoweek: "isoWeek",
  y: "year",
  years: "year",
  year: "year"
};
function xr(e) {
  return typeof e == "string" ? nv[e] || nv[e.toLowerCase()] : void 0;
}
function zh(e) {
  var t = {}, n, r;
  for (r in e)
    ht(e, r) && (n = xr(r), n && (t[n] = e[r]));
  return t;
}
var SF = {
  date: 9,
  day: 11,
  weekday: 11,
  isoWeekday: 11,
  dayOfYear: 4,
  hour: 13,
  millisecond: 16,
  minute: 14,
  month: 8,
  quarter: 7,
  second: 15,
  weekYear: 1,
  isoWeekYear: 1,
  week: 5,
  isoWeek: 5,
  year: 1
};
function AF(e) {
  var t = [], n;
  for (n in e)
    ht(e, n) && t.push({ unit: n, priority: SF[n] });
  return t.sort(function(r, a) {
    return r.priority - a.priority;
  }), t;
}
var Pg = /\d/, er = /\d\d/, Rg = /\d{3}/, Kh = /\d{4}/, fd = /[+-]?\d{6}/, Ot = /\d\d?/, Bg = /\d\d\d\d?/, kg = /\d\d\d\d\d\d?/, hd = /\d{1,3}/, Xh = /\d{1,4}/, pd = /[+-]?\d{1,6}/, Bs = /\d+/, _d = /[+-]?\d+/, wF = /Z|[+-]\d\d:?\d\d/gi, md = /Z|[+-]\d\d(?::?\d\d)?/gi, TF = /[+-]?\d+(\.\d{1,3})?/, no = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i, ks = /^[1-9]\d?/, Zh = /^([1-9]\d|\d)/, Bu;
Bu = {};
function ge(e, t, n) {
  Bu[e] = ma(t) ? t : function(r, a) {
    return r && n ? n : t;
  };
}
function xF(e, t) {
  return ht(Bu, e) ? Bu[e](t._strict, t._locale) : new RegExp(CF(e));
}
function CF(e) {
  return Da(
    e.replace("\\", "").replace(
      /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
      function(t, n, r, a, s) {
        return n || r || a || s;
      }
    )
  );
}
function Da(e) {
  return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
}
function vr(e) {
  return e < 0 ? Math.ceil(e) || 0 : Math.floor(e);
}
function rt(e) {
  var t = +e, n = 0;
  return t !== 0 && isFinite(t) && (n = vr(t)), n;
}
var qf = {};
function wt(e, t) {
  var n, r = t, a;
  for (typeof e == "string" && (e = [e]), Ba(t) && (r = function(s, o) {
    o[t] = rt(s);
  }), a = e.length, n = 0; n < a; n++)
    qf[e[n]] = r;
}
function ro(e, t) {
  wt(e, function(n, r, a, s) {
    a._w = a._w || {}, t(n, a._w, a, s);
  });
}
function IF(e, t, n) {
  t != null && ht(qf, e) && qf[e](t, n._a, n, e);
}
function bd(e) {
  return e % 4 === 0 && e % 100 !== 0 || e % 400 === 0;
}
var yn = 0, Ea = 1, ra = 2, Qt = 3, Nr = 4, Oa = 5, Pi = 6, LF = 7, EF = 8;
Pe("Y", 0, 0, function() {
  var e = this.year();
  return e <= 9999 ? ca(e, 4) : "+" + e;
});
Pe(0, ["YY", 2], 0, function() {
  return this.year() % 100;
});
Pe(0, ["YYYY", 4], 0, "year");
Pe(0, ["YYYYY", 5], 0, "year");
Pe(0, ["YYYYYY", 6, !0], 0, "year");
ge("Y", _d);
ge("YY", Ot, er);
ge("YYYY", Xh, Kh);
ge("YYYYY", pd, fd);
ge("YYYYYY", pd, fd);
wt(["YYYYY", "YYYYYY"], yn);
wt("YYYY", function(e, t) {
  t[yn] = e.length === 2 ? ue.parseTwoDigitYear(e) : rt(e);
});
wt("YY", function(e, t) {
  t[yn] = ue.parseTwoDigitYear(e);
});
wt("Y", function(e, t) {
  t[yn] = parseInt(e, 10);
});
function Al(e) {
  return bd(e) ? 366 : 365;
}
ue.parseTwoDigitYear = function(e) {
  return rt(e) + (rt(e) > 68 ? 1900 : 2e3);
};
var Mg = Ms("FullYear", !0);
function OF() {
  return bd(this.year());
}
function Ms(e, t) {
  return function(n) {
    return n != null ? (Fg(this, e, n), ue.updateOffset(this, t), this) : Rl(this, e);
  };
}
function Rl(e, t) {
  if (!e.isValid())
    return NaN;
  var n = e._d, r = e._isUTC;
  switch (t) {
    case "Milliseconds":
      return r ? n.getUTCMilliseconds() : n.getMilliseconds();
    case "Seconds":
      return r ? n.getUTCSeconds() : n.getSeconds();
    case "Minutes":
      return r ? n.getUTCMinutes() : n.getMinutes();
    case "Hours":
      return r ? n.getUTCHours() : n.getHours();
    case "Date":
      return r ? n.getUTCDate() : n.getDate();
    case "Day":
      return r ? n.getUTCDay() : n.getDay();
    case "Month":
      return r ? n.getUTCMonth() : n.getMonth();
    case "FullYear":
      return r ? n.getUTCFullYear() : n.getFullYear();
    default:
      return NaN;
  }
}
function Fg(e, t, n) {
  var r, a, s, o, u;
  if (!(!e.isValid() || isNaN(n))) {
    switch (r = e._d, a = e._isUTC, t) {
      case "Milliseconds":
        return void (a ? r.setUTCMilliseconds(n) : r.setMilliseconds(n));
      case "Seconds":
        return void (a ? r.setUTCSeconds(n) : r.setSeconds(n));
      case "Minutes":
        return void (a ? r.setUTCMinutes(n) : r.setMinutes(n));
      case "Hours":
        return void (a ? r.setUTCHours(n) : r.setHours(n));
      case "Date":
        return void (a ? r.setUTCDate(n) : r.setDate(n));
      // case 'Day': // Not real
      //    return void (isUTC ? d.setUTCDay(value) : d.setDay(value));
      // case 'Month': // Not used because we need to pass two variables
      //     return void (isUTC ? d.setUTCMonth(value) : d.setMonth(value));
      case "FullYear":
        break;
      // See below ...
      default:
        return;
    }
    s = n, o = e.month(), u = e.date(), u = u === 29 && o === 1 && !bd(s) ? 28 : u, a ? r.setUTCFullYear(s, o, u) : r.setFullYear(s, o, u);
  }
}
function DF(e) {
  return e = xr(e), ma(this[e]) ? this[e]() : this;
}
function PF(e, t) {
  if (typeof e == "object") {
    e = zh(e);
    var n = AF(e), r, a = n.length;
    for (r = 0; r < a; r++)
      this[n[r].unit](e[n[r].unit]);
  } else if (e = xr(e), ma(this[e]))
    return this[e](t);
  return this;
}
function RF(e, t) {
  return (e % t + t) % t;
}
var jt;
Array.prototype.indexOf ? jt = Array.prototype.indexOf : jt = function(e) {
  var t;
  for (t = 0; t < this.length; ++t)
    if (this[t] === e)
      return t;
  return -1;
};
function Jh(e, t) {
  if (isNaN(e) || isNaN(t))
    return NaN;
  var n = RF(t, 12);
  return e += (t - n) / 12, n === 1 ? bd(e) ? 29 : 28 : 31 - n % 7 % 2;
}
Pe("M", ["MM", 2], "Mo", function() {
  return this.month() + 1;
});
Pe("MMM", 0, 0, function(e) {
  return this.localeData().monthsShort(this, e);
});
Pe("MMMM", 0, 0, function(e) {
  return this.localeData().months(this, e);
});
ge("M", Ot, ks);
ge("MM", Ot, er);
ge("MMM", function(e, t) {
  return t.monthsShortRegex(e);
});
ge("MMMM", function(e, t) {
  return t.monthsRegex(e);
});
wt(["M", "MM"], function(e, t) {
  t[Ea] = rt(e) - 1;
});
wt(["MMM", "MMMM"], function(e, t, n, r) {
  var a = n._locale.monthsParse(e, r, n._strict);
  a != null ? t[Ea] = a : Ge(n).invalidMonth = e;
});
var BF = "January_February_March_April_May_June_July_August_September_October_November_December".split(
  "_"
), qg = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"), Ng = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/, kF = no, MF = no;
function FF(e, t) {
  return e ? Hr(this._months) ? this._months[e.month()] : this._months[(this._months.isFormat || Ng).test(t) ? "format" : "standalone"][e.month()] : Hr(this._months) ? this._months : this._months.standalone;
}
function qF(e, t) {
  return e ? Hr(this._monthsShort) ? this._monthsShort[e.month()] : this._monthsShort[Ng.test(t) ? "format" : "standalone"][e.month()] : Hr(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone;
}
function NF(e, t, n) {
  var r, a, s, o = e.toLocaleLowerCase();
  if (!this._monthsParse)
    for (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = [], r = 0; r < 12; ++r)
      s = _a([2e3, r]), this._shortMonthsParse[r] = this.monthsShort(
        s,
        ""
      ).toLocaleLowerCase(), this._longMonthsParse[r] = this.months(s, "").toLocaleLowerCase();
  return n ? t === "MMM" ? (a = jt.call(this._shortMonthsParse, o), a !== -1 ? a : null) : (a = jt.call(this._longMonthsParse, o), a !== -1 ? a : null) : t === "MMM" ? (a = jt.call(this._shortMonthsParse, o), a !== -1 ? a : (a = jt.call(this._longMonthsParse, o), a !== -1 ? a : null)) : (a = jt.call(this._longMonthsParse, o), a !== -1 ? a : (a = jt.call(this._shortMonthsParse, o), a !== -1 ? a : null));
}
function VF(e, t, n) {
  var r, a, s;
  if (this._monthsParseExact)
    return NF.call(this, e, t, n);
  for (this._monthsParse || (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = []), r = 0; r < 12; r++) {
    if (a = _a([2e3, r]), n && !this._longMonthsParse[r] && (this._longMonthsParse[r] = new RegExp(
      "^" + this.months(a, "").replace(".", "") + "$",
      "i"
    ), this._shortMonthsParse[r] = new RegExp(
      "^" + this.monthsShort(a, "").replace(".", "") + "$",
      "i"
    )), !n && !this._monthsParse[r] && (s = "^" + this.months(a, "") + "|^" + this.monthsShort(a, ""), this._monthsParse[r] = new RegExp(s.replace(".", ""), "i")), n && t === "MMMM" && this._longMonthsParse[r].test(e))
      return r;
    if (n && t === "MMM" && this._shortMonthsParse[r].test(e))
      return r;
    if (!n && this._monthsParse[r].test(e))
      return r;
  }
}
function Vg(e, t) {
  if (!e.isValid())
    return e;
  if (typeof t == "string") {
    if (/^\d+$/.test(t))
      t = rt(t);
    else if (t = e.localeData().monthsParse(t), !Ba(t))
      return e;
  }
  var n = t, r = e.date();
  return r = r < 29 ? r : Math.min(r, Jh(e.year(), n)), e._isUTC ? e._d.setUTCMonth(n, r) : e._d.setMonth(n, r), e;
}
function Hg(e) {
  return e != null ? (Vg(this, e), ue.updateOffset(this, !0), this) : Rl(this, "Month");
}
function HF() {
  return Jh(this.year(), this.month());
}
function $F(e) {
  return this._monthsParseExact ? (ht(this, "_monthsRegex") || $g.call(this), e ? this._monthsShortStrictRegex : this._monthsShortRegex) : (ht(this, "_monthsShortRegex") || (this._monthsShortRegex = kF), this._monthsShortStrictRegex && e ? this._monthsShortStrictRegex : this._monthsShortRegex);
}
function WF(e) {
  return this._monthsParseExact ? (ht(this, "_monthsRegex") || $g.call(this), e ? this._monthsStrictRegex : this._monthsRegex) : (ht(this, "_monthsRegex") || (this._monthsRegex = MF), this._monthsStrictRegex && e ? this._monthsStrictRegex : this._monthsRegex);
}
function $g() {
  function e(f, _) {
    return _.length - f.length;
  }
  var t = [], n = [], r = [], a, s, o, u;
  for (a = 0; a < 12; a++)
    s = _a([2e3, a]), o = Da(this.monthsShort(s, "")), u = Da(this.months(s, "")), t.push(o), n.push(u), r.push(u), r.push(o);
  t.sort(e), n.sort(e), r.sort(e), this._monthsRegex = new RegExp("^(" + r.join("|") + ")", "i"), this._monthsShortRegex = this._monthsRegex, this._monthsStrictRegex = new RegExp(
    "^(" + n.join("|") + ")",
    "i"
  ), this._monthsShortStrictRegex = new RegExp(
    "^(" + t.join("|") + ")",
    "i"
  );
}
function UF(e, t, n, r, a, s, o) {
  var u;
  return e < 100 && e >= 0 ? (u = new Date(e + 400, t, n, r, a, s, o), isFinite(u.getFullYear()) && u.setFullYear(e)) : u = new Date(e, t, n, r, a, s, o), u;
}
function Bl(e) {
  var t, n;
  return e < 100 && e >= 0 ? (n = Array.prototype.slice.call(arguments), n[0] = e + 400, t = new Date(Date.UTC.apply(null, n)), isFinite(t.getUTCFullYear()) && t.setUTCFullYear(e)) : t = new Date(Date.UTC.apply(null, arguments)), t;
}
function ku(e, t, n) {
  var r = 7 + t - n, a = (7 + Bl(e, 0, r).getUTCDay() - t) % 7;
  return -a + r - 1;
}
function Wg(e, t, n, r, a) {
  var s = (7 + n - r) % 7, o = ku(e, r, a), u = 1 + 7 * (t - 1) + s + o, f, _;
  return u <= 0 ? (f = e - 1, _ = Al(f) + u) : u > Al(e) ? (f = e + 1, _ = u - Al(e)) : (f = e, _ = u), {
    year: f,
    dayOfYear: _
  };
}
function kl(e, t, n) {
  var r = ku(e.year(), t, n), a = Math.floor((e.dayOfYear() - r - 1) / 7) + 1, s, o;
  return a < 1 ? (o = e.year() - 1, s = a + Pa(o, t, n)) : a > Pa(e.year(), t, n) ? (s = a - Pa(e.year(), t, n), o = e.year() + 1) : (o = e.year(), s = a), {
    week: s,
    year: o
  };
}
function Pa(e, t, n) {
  var r = ku(e, t, n), a = ku(e + 1, t, n);
  return (Al(e) - r + a) / 7;
}
Pe("w", ["ww", 2], "wo", "week");
Pe("W", ["WW", 2], "Wo", "isoWeek");
ge("w", Ot, ks);
ge("ww", Ot, er);
ge("W", Ot, ks);
ge("WW", Ot, er);
ro(
  ["w", "ww", "W", "WW"],
  function(e, t, n, r) {
    t[r.substr(0, 1)] = rt(e);
  }
);
function jF(e) {
  return kl(e, this._week.dow, this._week.doy).week;
}
var GF = {
  dow: 0,
  // Sunday is the first day of the week.
  doy: 6
  // The week that contains Jan 6th is the first week of the year.
};
function YF() {
  return this._week.dow;
}
function zF() {
  return this._week.doy;
}
function KF(e) {
  var t = this.localeData().week(this);
  return e == null ? t : this.add((e - t) * 7, "d");
}
function XF(e) {
  var t = kl(this, 1, 4).week;
  return e == null ? t : this.add((e - t) * 7, "d");
}
Pe("d", 0, "do", "day");
Pe("dd", 0, 0, function(e) {
  return this.localeData().weekdaysMin(this, e);
});
Pe("ddd", 0, 0, function(e) {
  return this.localeData().weekdaysShort(this, e);
});
Pe("dddd", 0, 0, function(e) {
  return this.localeData().weekdays(this, e);
});
Pe("e", 0, 0, "weekday");
Pe("E", 0, 0, "isoWeekday");
ge("d", Ot);
ge("e", Ot);
ge("E", Ot);
ge("dd", function(e, t) {
  return t.weekdaysMinRegex(e);
});
ge("ddd", function(e, t) {
  return t.weekdaysShortRegex(e);
});
ge("dddd", function(e, t) {
  return t.weekdaysRegex(e);
});
ro(["dd", "ddd", "dddd"], function(e, t, n, r) {
  var a = n._locale.weekdaysParse(e, r, n._strict);
  a != null ? t.d = a : Ge(n).invalidWeekday = e;
});
ro(["d", "e", "E"], function(e, t, n, r) {
  t[r] = rt(e);
});
function ZF(e, t) {
  return typeof e != "string" ? e : isNaN(e) ? (e = t.weekdaysParse(e), typeof e == "number" ? e : null) : parseInt(e, 10);
}
function JF(e, t) {
  return typeof e == "string" ? t.weekdaysParse(e) % 7 || 7 : isNaN(e) ? null : e;
}
function Qh(e, t) {
  return e.slice(t, 7).concat(e.slice(0, t));
}
var QF = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), Ug = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"), eq = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"), tq = no, nq = no, rq = no;
function aq(e, t) {
  var n = Hr(this._weekdays) ? this._weekdays : this._weekdays[e && e !== !0 && this._weekdays.isFormat.test(t) ? "format" : "standalone"];
  return e === !0 ? Qh(n, this._week.dow) : e ? n[e.day()] : n;
}
function iq(e) {
  return e === !0 ? Qh(this._weekdaysShort, this._week.dow) : e ? this._weekdaysShort[e.day()] : this._weekdaysShort;
}
function sq(e) {
  return e === !0 ? Qh(this._weekdaysMin, this._week.dow) : e ? this._weekdaysMin[e.day()] : this._weekdaysMin;
}
function lq(e, t, n) {
  var r, a, s, o = e.toLocaleLowerCase();
  if (!this._weekdaysParse)
    for (this._weekdaysParse = [], this._shortWeekdaysParse = [], this._minWeekdaysParse = [], r = 0; r < 7; ++r)
      s = _a([2e3, 1]).day(r), this._minWeekdaysParse[r] = this.weekdaysMin(
        s,
        ""
      ).toLocaleLowerCase(), this._shortWeekdaysParse[r] = this.weekdaysShort(
        s,
        ""
      ).toLocaleLowerCase(), this._weekdaysParse[r] = this.weekdays(s, "").toLocaleLowerCase();
  return n ? t === "dddd" ? (a = jt.call(this._weekdaysParse, o), a !== -1 ? a : null) : t === "ddd" ? (a = jt.call(this._shortWeekdaysParse, o), a !== -1 ? a : null) : (a = jt.call(this._minWeekdaysParse, o), a !== -1 ? a : null) : t === "dddd" ? (a = jt.call(this._weekdaysParse, o), a !== -1 || (a = jt.call(this._shortWeekdaysParse, o), a !== -1) ? a : (a = jt.call(this._minWeekdaysParse, o), a !== -1 ? a : null)) : t === "ddd" ? (a = jt.call(this._shortWeekdaysParse, o), a !== -1 || (a = jt.call(this._weekdaysParse, o), a !== -1) ? a : (a = jt.call(this._minWeekdaysParse, o), a !== -1 ? a : null)) : (a = jt.call(this._minWeekdaysParse, o), a !== -1 || (a = jt.call(this._weekdaysParse, o), a !== -1) ? a : (a = jt.call(this._shortWeekdaysParse, o), a !== -1 ? a : null));
}
function oq(e, t, n) {
  var r, a, s;
  if (this._weekdaysParseExact)
    return lq.call(this, e, t, n);
  for (this._weekdaysParse || (this._weekdaysParse = [], this._minWeekdaysParse = [], this._shortWeekdaysParse = [], this._fullWeekdaysParse = []), r = 0; r < 7; r++) {
    if (a = _a([2e3, 1]).day(r), n && !this._fullWeekdaysParse[r] && (this._fullWeekdaysParse[r] = new RegExp(
      "^" + this.weekdays(a, "").replace(".", "\\.?") + "$",
      "i"
    ), this._shortWeekdaysParse[r] = new RegExp(
      "^" + this.weekdaysShort(a, "").replace(".", "\\.?") + "$",
      "i"
    ), this._minWeekdaysParse[r] = new RegExp(
      "^" + this.weekdaysMin(a, "").replace(".", "\\.?") + "$",
      "i"
    )), this._weekdaysParse[r] || (s = "^" + this.weekdays(a, "") + "|^" + this.weekdaysShort(a, "") + "|^" + this.weekdaysMin(a, ""), this._weekdaysParse[r] = new RegExp(s.replace(".", ""), "i")), n && t === "dddd" && this._fullWeekdaysParse[r].test(e))
      return r;
    if (n && t === "ddd" && this._shortWeekdaysParse[r].test(e))
      return r;
    if (n && t === "dd" && this._minWeekdaysParse[r].test(e))
      return r;
    if (!n && this._weekdaysParse[r].test(e))
      return r;
  }
}
function uq(e) {
  if (!this.isValid())
    return e != null ? this : NaN;
  var t = Rl(this, "Day");
  return e != null ? (e = ZF(e, this.localeData()), this.add(e - t, "d")) : t;
}
function dq(e) {
  if (!this.isValid())
    return e != null ? this : NaN;
  var t = (this.day() + 7 - this.localeData()._week.dow) % 7;
  return e == null ? t : this.add(e - t, "d");
}
function cq(e) {
  if (!this.isValid())
    return e != null ? this : NaN;
  if (e != null) {
    var t = JF(e, this.localeData());
    return this.day(this.day() % 7 ? t : t - 7);
  } else
    return this.day() || 7;
}
function fq(e) {
  return this._weekdaysParseExact ? (ht(this, "_weekdaysRegex") || ep.call(this), e ? this._weekdaysStrictRegex : this._weekdaysRegex) : (ht(this, "_weekdaysRegex") || (this._weekdaysRegex = tq), this._weekdaysStrictRegex && e ? this._weekdaysStrictRegex : this._weekdaysRegex);
}
function hq(e) {
  return this._weekdaysParseExact ? (ht(this, "_weekdaysRegex") || ep.call(this), e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex) : (ht(this, "_weekdaysShortRegex") || (this._weekdaysShortRegex = nq), this._weekdaysShortStrictRegex && e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex);
}
function pq(e) {
  return this._weekdaysParseExact ? (ht(this, "_weekdaysRegex") || ep.call(this), e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex) : (ht(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = rq), this._weekdaysMinStrictRegex && e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex);
}
function ep() {
  function e(m, b) {
    return b.length - m.length;
  }
  var t = [], n = [], r = [], a = [], s, o, u, f, _;
  for (s = 0; s < 7; s++)
    o = _a([2e3, 1]).day(s), u = Da(this.weekdaysMin(o, "")), f = Da(this.weekdaysShort(o, "")), _ = Da(this.weekdays(o, "")), t.push(u), n.push(f), r.push(_), a.push(u), a.push(f), a.push(_);
  t.sort(e), n.sort(e), r.sort(e), a.sort(e), this._weekdaysRegex = new RegExp("^(" + a.join("|") + ")", "i"), this._weekdaysShortRegex = this._weekdaysRegex, this._weekdaysMinRegex = this._weekdaysRegex, this._weekdaysStrictRegex = new RegExp(
    "^(" + r.join("|") + ")",
    "i"
  ), this._weekdaysShortStrictRegex = new RegExp(
    "^(" + n.join("|") + ")",
    "i"
  ), this._weekdaysMinStrictRegex = new RegExp(
    "^(" + t.join("|") + ")",
    "i"
  );
}
function tp() {
  return this.hours() % 12 || 12;
}
function _q() {
  return this.hours() || 24;
}
Pe("H", ["HH", 2], 0, "hour");
Pe("h", ["hh", 2], 0, tp);
Pe("k", ["kk", 2], 0, _q);
Pe("hmm", 0, 0, function() {
  return "" + tp.apply(this) + ca(this.minutes(), 2);
});
Pe("hmmss", 0, 0, function() {
  return "" + tp.apply(this) + ca(this.minutes(), 2) + ca(this.seconds(), 2);
});
Pe("Hmm", 0, 0, function() {
  return "" + this.hours() + ca(this.minutes(), 2);
});
Pe("Hmmss", 0, 0, function() {
  return "" + this.hours() + ca(this.minutes(), 2) + ca(this.seconds(), 2);
});
function jg(e, t) {
  Pe(e, 0, 0, function() {
    return this.localeData().meridiem(
      this.hours(),
      this.minutes(),
      t
    );
  });
}
jg("a", !0);
jg("A", !1);
function Gg(e, t) {
  return t._meridiemParse;
}
ge("a", Gg);
ge("A", Gg);
ge("H", Ot, Zh);
ge("h", Ot, ks);
ge("k", Ot, ks);
ge("HH", Ot, er);
ge("hh", Ot, er);
ge("kk", Ot, er);
ge("hmm", Bg);
ge("hmmss", kg);
ge("Hmm", Bg);
ge("Hmmss", kg);
wt(["H", "HH"], Qt);
wt(["k", "kk"], function(e, t, n) {
  var r = rt(e);
  t[Qt] = r === 24 ? 0 : r;
});
wt(["a", "A"], function(e, t, n) {
  n._isPm = n._locale.isPM(e), n._meridiem = e;
});
wt(["h", "hh"], function(e, t, n) {
  t[Qt] = rt(e), Ge(n).bigHour = !0;
});
wt("hmm", function(e, t, n) {
  var r = e.length - 2;
  t[Qt] = rt(e.substr(0, r)), t[Nr] = rt(e.substr(r)), Ge(n).bigHour = !0;
});
wt("hmmss", function(e, t, n) {
  var r = e.length - 4, a = e.length - 2;
  t[Qt] = rt(e.substr(0, r)), t[Nr] = rt(e.substr(r, 2)), t[Oa] = rt(e.substr(a)), Ge(n).bigHour = !0;
});
wt("Hmm", function(e, t, n) {
  var r = e.length - 2;
  t[Qt] = rt(e.substr(0, r)), t[Nr] = rt(e.substr(r));
});
wt("Hmmss", function(e, t, n) {
  var r = e.length - 4, a = e.length - 2;
  t[Qt] = rt(e.substr(0, r)), t[Nr] = rt(e.substr(r, 2)), t[Oa] = rt(e.substr(a));
});
function mq(e) {
  return (e + "").toLowerCase().charAt(0) === "p";
}
var bq = /[ap]\.?m?\.?/i, vq = Ms("Hours", !0);
function yq(e, t, n) {
  return e > 11 ? n ? "pm" : "PM" : n ? "am" : "AM";
}
var Yg = {
  calendar: lF,
  longDateFormat: cF,
  invalidDate: hF,
  ordinal: _F,
  dayOfMonthOrdinalParse: mF,
  relativeTime: vF,
  months: BF,
  monthsShort: qg,
  week: GF,
  weekdays: QF,
  weekdaysMin: eq,
  weekdaysShort: Ug,
  meridiemParse: bq
}, Rt = {}, hl = {}, Ml;
function gq(e, t) {
  var n, r = Math.min(e.length, t.length);
  for (n = 0; n < r; n += 1)
    if (e[n] !== t[n])
      return n;
  return r;
}
function rv(e) {
  return e && e.toLowerCase().replace("_", "-");
}
function Sq(e) {
  for (var t = 0, n, r, a, s; t < e.length; ) {
    for (s = rv(e[t]).split("-"), n = s.length, r = rv(e[t + 1]), r = r ? r.split("-") : null; n > 0; ) {
      if (a = vd(s.slice(0, n).join("-")), a)
        return a;
      if (r && r.length >= n && gq(s, r) >= n - 1)
        break;
      n--;
    }
    t++;
  }
  return Ml;
}
function Aq(e) {
  return !!(e && e.match("^[^/\\\\]*$"));
}
function vd(e) {
  var t = null, n;
  if (Rt[e] === void 0 && typeof module < "u" && module && module.exports && Aq(e))
    try {
      t = Ml._abbr, n = require, n("./locale/" + e), oi(t);
    } catch {
      Rt[e] = null;
    }
  return Rt[e];
}
function oi(e, t) {
  var n;
  return e && (kn(t) ? n = Wa(e) : n = np(e, t), n ? Ml = n : typeof console < "u" && console.warn && console.warn(
    "Locale " + e + " not found. Did you forget to load it?"
  )), Ml._abbr;
}
function np(e, t) {
  if (t !== null) {
    var n, r = Yg;
    if (t.abbr = e, Rt[e] != null)
      Og(
        "defineLocaleOverride",
        "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."
      ), r = Rt[e]._config;
    else if (t.parentLocale != null)
      if (Rt[t.parentLocale] != null)
        r = Rt[t.parentLocale]._config;
      else if (n = vd(t.parentLocale), n != null)
        r = n._config;
      else
        return hl[t.parentLocale] || (hl[t.parentLocale] = []), hl[t.parentLocale].push({
          name: e,
          config: t
        }), null;
    return Rt[e] = new Gh(Mf(r, t)), hl[e] && hl[e].forEach(function(a) {
      np(a.name, a.config);
    }), oi(e), Rt[e];
  } else
    return delete Rt[e], null;
}
function wq(e, t) {
  if (t != null) {
    var n, r, a = Yg;
    Rt[e] != null && Rt[e].parentLocale != null ? Rt[e].set(Mf(Rt[e]._config, t)) : (r = vd(e), r != null && (a = r._config), t = Mf(a, t), r == null && (t.abbr = e), n = new Gh(t), n.parentLocale = Rt[e], Rt[e] = n), oi(e);
  } else
    Rt[e] != null && (Rt[e].parentLocale != null ? (Rt[e] = Rt[e].parentLocale, e === oi() && oi(e)) : Rt[e] != null && delete Rt[e]);
  return Rt[e];
}
function Wa(e) {
  var t;
  if (e && e._locale && e._locale._abbr && (e = e._locale._abbr), !e)
    return Ml;
  if (!Hr(e)) {
    if (t = vd(e), t)
      return t;
    e = [e];
  }
  return Sq(e);
}
function Tq() {
  return Ff(Rt);
}
function rp(e) {
  var t, n = e._a;
  return n && Ge(e).overflow === -2 && (t = n[Ea] < 0 || n[Ea] > 11 ? Ea : n[ra] < 1 || n[ra] > Jh(n[yn], n[Ea]) ? ra : n[Qt] < 0 || n[Qt] > 24 || n[Qt] === 24 && (n[Nr] !== 0 || n[Oa] !== 0 || n[Pi] !== 0) ? Qt : n[Nr] < 0 || n[Nr] > 59 ? Nr : n[Oa] < 0 || n[Oa] > 59 ? Oa : n[Pi] < 0 || n[Pi] > 999 ? Pi : -1, Ge(e)._overflowDayOfYear && (t < yn || t > ra) && (t = ra), Ge(e)._overflowWeeks && t === -1 && (t = LF), Ge(e)._overflowWeekday && t === -1 && (t = EF), Ge(e).overflow = t), e;
}
var xq = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, Cq = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, Iq = /Z|[+-]\d\d(?::?\d\d)?/, ou = [
  ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
  ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
  ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
  ["GGGG-[W]WW", /\d{4}-W\d\d/, !1],
  ["YYYY-DDD", /\d{4}-\d{3}/],
  ["YYYY-MM", /\d{4}-\d\d/, !1],
  ["YYYYYYMMDD", /[+-]\d{10}/],
  ["YYYYMMDD", /\d{8}/],
  ["GGGG[W]WWE", /\d{4}W\d{3}/],
  ["GGGG[W]WW", /\d{4}W\d{2}/, !1],
  ["YYYYDDD", /\d{7}/],
  ["YYYYMM", /\d{6}/, !1],
  ["YYYY", /\d{4}/, !1]
], lf = [
  ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
  ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
  ["HH:mm:ss", /\d\d:\d\d:\d\d/],
  ["HH:mm", /\d\d:\d\d/],
  ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
  ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
  ["HHmmss", /\d\d\d\d\d\d/],
  ["HHmm", /\d\d\d\d/],
  ["HH", /\d\d/]
], Lq = /^\/?Date\((-?\d+)/i, Eq = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/, Oq = {
  UT: 0,
  GMT: 0,
  EDT: -4 * 60,
  EST: -5 * 60,
  CDT: -5 * 60,
  CST: -6 * 60,
  MDT: -6 * 60,
  MST: -7 * 60,
  PDT: -7 * 60,
  PST: -8 * 60
};
function zg(e) {
  var t, n, r = e._i, a = xq.exec(r) || Cq.exec(r), s, o, u, f, _ = ou.length, m = lf.length;
  if (a) {
    for (Ge(e).iso = !0, t = 0, n = _; t < n; t++)
      if (ou[t][1].exec(a[1])) {
        o = ou[t][0], s = ou[t][2] !== !1;
        break;
      }
    if (o == null) {
      e._isValid = !1;
      return;
    }
    if (a[3]) {
      for (t = 0, n = m; t < n; t++)
        if (lf[t][1].exec(a[3])) {
          u = (a[2] || " ") + lf[t][0];
          break;
        }
      if (u == null) {
        e._isValid = !1;
        return;
      }
    }
    if (!s && u != null) {
      e._isValid = !1;
      return;
    }
    if (a[4])
      if (Iq.exec(a[4]))
        f = "Z";
      else {
        e._isValid = !1;
        return;
      }
    e._f = o + (u || "") + (f || ""), ip(e);
  } else
    e._isValid = !1;
}
function Dq(e, t, n, r, a, s) {
  var o = [
    Pq(e),
    qg.indexOf(t),
    parseInt(n, 10),
    parseInt(r, 10),
    parseInt(a, 10)
  ];
  return s && o.push(parseInt(s, 10)), o;
}
function Pq(e) {
  var t = parseInt(e, 10);
  return t <= 49 ? 2e3 + t : t <= 999 ? 1900 + t : t;
}
function Rq(e) {
  return e.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
}
function Bq(e, t, n) {
  if (e) {
    var r = Ug.indexOf(e), a = new Date(
      t[0],
      t[1],
      t[2]
    ).getDay();
    if (r !== a)
      return Ge(n).weekdayMismatch = !0, n._isValid = !1, !1;
  }
  return !0;
}
function kq(e, t, n) {
  if (e)
    return Oq[e];
  if (t)
    return 0;
  var r = parseInt(n, 10), a = r % 100, s = (r - a) / 100;
  return s * 60 + a;
}
function Kg(e) {
  var t = Eq.exec(Rq(e._i)), n;
  if (t) {
    if (n = Dq(
      t[4],
      t[3],
      t[2],
      t[5],
      t[6],
      t[7]
    ), !Bq(t[1], n, e))
      return;
    e._a = n, e._tzm = kq(t[8], t[9], t[10]), e._d = Bl.apply(null, e._a), e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm), Ge(e).rfc2822 = !0;
  } else
    e._isValid = !1;
}
function Mq(e) {
  var t = Lq.exec(e._i);
  if (t !== null) {
    e._d = /* @__PURE__ */ new Date(+t[1]);
    return;
  }
  if (zg(e), e._isValid === !1)
    delete e._isValid;
  else
    return;
  if (Kg(e), e._isValid === !1)
    delete e._isValid;
  else
    return;
  e._strict ? e._isValid = !1 : ue.createFromInputFallback(e);
}
ue.createFromInputFallback = Tr(
  "value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",
  function(e) {
    e._d = /* @__PURE__ */ new Date(e._i + (e._useUTC ? " UTC" : ""));
  }
);
function fs(e, t, n) {
  return e ?? t ?? n;
}
function Fq(e) {
  var t = new Date(ue.now());
  return e._useUTC ? [
    t.getUTCFullYear(),
    t.getUTCMonth(),
    t.getUTCDate()
  ] : [t.getFullYear(), t.getMonth(), t.getDate()];
}
function ap(e) {
  var t, n, r = [], a, s, o;
  if (!e._d) {
    for (a = Fq(e), e._w && e._a[ra] == null && e._a[Ea] == null && qq(e), e._dayOfYear != null && (o = fs(e._a[yn], a[yn]), (e._dayOfYear > Al(o) || e._dayOfYear === 0) && (Ge(e)._overflowDayOfYear = !0), n = Bl(o, 0, e._dayOfYear), e._a[Ea] = n.getUTCMonth(), e._a[ra] = n.getUTCDate()), t = 0; t < 3 && e._a[t] == null; ++t)
      e._a[t] = r[t] = a[t];
    for (; t < 7; t++)
      e._a[t] = r[t] = e._a[t] == null ? t === 2 ? 1 : 0 : e._a[t];
    e._a[Qt] === 24 && e._a[Nr] === 0 && e._a[Oa] === 0 && e._a[Pi] === 0 && (e._nextDay = !0, e._a[Qt] = 0), e._d = (e._useUTC ? Bl : UF).apply(
      null,
      r
    ), s = e._useUTC ? e._d.getUTCDay() : e._d.getDay(), e._tzm != null && e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm), e._nextDay && (e._a[Qt] = 24), e._w && typeof e._w.d < "u" && e._w.d !== s && (Ge(e).weekdayMismatch = !0);
  }
}
function qq(e) {
  var t, n, r, a, s, o, u, f, _;
  t = e._w, t.GG != null || t.W != null || t.E != null ? (s = 1, o = 4, n = fs(
    t.GG,
    e._a[yn],
    kl(Et(), 1, 4).year
  ), r = fs(t.W, 1), a = fs(t.E, 1), (a < 1 || a > 7) && (f = !0)) : (s = e._locale._week.dow, o = e._locale._week.doy, _ = kl(Et(), s, o), n = fs(t.gg, e._a[yn], _.year), r = fs(t.w, _.week), t.d != null ? (a = t.d, (a < 0 || a > 6) && (f = !0)) : t.e != null ? (a = t.e + s, (t.e < 0 || t.e > 6) && (f = !0)) : a = s), r < 1 || r > Pa(n, s, o) ? Ge(e)._overflowWeeks = !0 : f != null ? Ge(e)._overflowWeekday = !0 : (u = Wg(n, r, a, s, o), e._a[yn] = u.year, e._dayOfYear = u.dayOfYear);
}
ue.ISO_8601 = function() {
};
ue.RFC_2822 = function() {
};
function ip(e) {
  if (e._f === ue.ISO_8601) {
    zg(e);
    return;
  }
  if (e._f === ue.RFC_2822) {
    Kg(e);
    return;
  }
  e._a = [], Ge(e).empty = !0;
  var t = "" + e._i, n, r, a, s, o, u = t.length, f = 0, _, m;
  for (a = Dg(e._f, e._locale).match(Yh) || [], m = a.length, n = 0; n < m; n++)
    s = a[n], r = (t.match(xF(s, e)) || [])[0], r && (o = t.substr(0, t.indexOf(r)), o.length > 0 && Ge(e).unusedInput.push(o), t = t.slice(
      t.indexOf(r) + r.length
    ), f += r.length), Ss[s] ? (r ? Ge(e).empty = !1 : Ge(e).unusedTokens.push(s), IF(s, r, e)) : e._strict && !r && Ge(e).unusedTokens.push(s);
  Ge(e).charsLeftOver = u - f, t.length > 0 && Ge(e).unusedInput.push(t), e._a[Qt] <= 12 && Ge(e).bigHour === !0 && e._a[Qt] > 0 && (Ge(e).bigHour = void 0), Ge(e).parsedDateParts = e._a.slice(0), Ge(e).meridiem = e._meridiem, e._a[Qt] = Nq(
    e._locale,
    e._a[Qt],
    e._meridiem
  ), _ = Ge(e).era, _ !== null && (e._a[yn] = e._locale.erasConvertYear(_, e._a[yn])), ap(e), rp(e);
}
function Nq(e, t, n) {
  var r;
  return n == null ? t : e.meridiemHour != null ? e.meridiemHour(t, n) : (e.isPM != null && (r = e.isPM(n), r && t < 12 && (t += 12), !r && t === 12 && (t = 0)), t);
}
function Vq(e) {
  var t, n, r, a, s, o, u = !1, f = e._f.length;
  if (f === 0) {
    Ge(e).invalidFormat = !0, e._d = /* @__PURE__ */ new Date(NaN);
    return;
  }
  for (a = 0; a < f; a++)
    s = 0, o = !1, t = jh({}, e), e._useUTC != null && (t._useUTC = e._useUTC), t._f = e._f[a], ip(t), Uh(t) && (o = !0), s += Ge(t).charsLeftOver, s += Ge(t).unusedTokens.length * 10, Ge(t).score = s, u ? s < r && (r = s, n = t) : (r == null || s < r || o) && (r = s, n = t, o && (u = !0));
  si(e, n || t);
}
function Hq(e) {
  if (!e._d) {
    var t = zh(e._i), n = t.day === void 0 ? t.date : t.day;
    e._a = Lg(
      [t.year, t.month, n, t.hour, t.minute, t.second, t.millisecond],
      function(r) {
        return r && parseInt(r, 10);
      }
    ), ap(e);
  }
}
function $q(e) {
  var t = new to(rp(Xg(e)));
  return t._nextDay && (t.add(1, "d"), t._nextDay = void 0), t;
}
function Xg(e) {
  var t = e._i, n = e._f;
  return e._locale = e._locale || Wa(e._l), t === null || n === void 0 && t === "" ? cd({ nullInput: !0 }) : (typeof t == "string" && (e._i = t = e._locale.preparse(t)), $r(t) ? new to(rp(t)) : (eo(t) ? e._d = t : Hr(n) ? Vq(e) : n ? ip(e) : Wq(e), Uh(e) || (e._d = null), e));
}
function Wq(e) {
  var t = e._i;
  kn(t) ? e._d = new Date(ue.now()) : eo(t) ? e._d = new Date(t.valueOf()) : typeof t == "string" ? Mq(e) : Hr(t) ? (e._a = Lg(t.slice(0), function(n) {
    return parseInt(n, 10);
  }), ap(e)) : ki(t) ? Hq(e) : Ba(t) ? e._d = new Date(t) : ue.createFromInputFallback(e);
}
function Zg(e, t, n, r, a) {
  var s = {};
  return (t === !0 || t === !1) && (r = t, t = void 0), (n === !0 || n === !1) && (r = n, n = void 0), (ki(e) && Wh(e) || Hr(e) && e.length === 0) && (e = void 0), s._isAMomentObject = !0, s._useUTC = s._isUTC = a, s._l = n, s._i = e, s._f = t, s._strict = r, $q(s);
}
function Et(e, t, n, r) {
  return Zg(e, t, n, r, !1);
}
var Uq = Tr(
  "moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",
  function() {
    var e = Et.apply(null, arguments);
    return this.isValid() && e.isValid() ? e < this ? this : e : cd();
  }
), jq = Tr(
  "moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",
  function() {
    var e = Et.apply(null, arguments);
    return this.isValid() && e.isValid() ? e > this ? this : e : cd();
  }
);
function Jg(e, t) {
  var n, r;
  if (t.length === 1 && Hr(t[0]) && (t = t[0]), !t.length)
    return Et();
  for (n = t[0], r = 1; r < t.length; ++r)
    (!t[r].isValid() || t[r][e](n)) && (n = t[r]);
  return n;
}
function Gq() {
  var e = [].slice.call(arguments, 0);
  return Jg("isBefore", e);
}
function Yq() {
  var e = [].slice.call(arguments, 0);
  return Jg("isAfter", e);
}
var zq = function() {
  return Date.now ? Date.now() : +/* @__PURE__ */ new Date();
}, pl = [
  "year",
  "quarter",
  "month",
  "week",
  "day",
  "hour",
  "minute",
  "second",
  "millisecond"
];
function Kq(e) {
  var t, n = !1, r, a = pl.length;
  for (t in e)
    if (ht(e, t) && !(jt.call(pl, t) !== -1 && (e[t] == null || !isNaN(e[t]))))
      return !1;
  for (r = 0; r < a; ++r)
    if (e[pl[r]]) {
      if (n)
        return !1;
      parseFloat(e[pl[r]]) !== rt(e[pl[r]]) && (n = !0);
    }
  return !0;
}
function Xq() {
  return this._isValid;
}
function Zq() {
  return jr(NaN);
}
function yd(e) {
  var t = zh(e), n = t.year || 0, r = t.quarter || 0, a = t.month || 0, s = t.week || t.isoWeek || 0, o = t.day || 0, u = t.hour || 0, f = t.minute || 0, _ = t.second || 0, m = t.millisecond || 0;
  this._isValid = Kq(t), this._milliseconds = +m + _ * 1e3 + // 1000
  f * 6e4 + // 1000 * 60
  u * 1e3 * 60 * 60, this._days = +o + s * 7, this._months = +a + r * 3 + n * 12, this._data = {}, this._locale = Wa(), this._bubble();
}
function _u(e) {
  return e instanceof yd;
}
function Nf(e) {
  return e < 0 ? Math.round(-1 * e) * -1 : Math.round(e);
}
function Jq(e, t, n) {
  var r = Math.min(e.length, t.length), a = Math.abs(e.length - t.length), s = 0, o;
  for (o = 0; o < r; o++)
    rt(e[o]) !== rt(t[o]) && s++;
  return s + a;
}
function Qg(e, t) {
  Pe(e, 0, 0, function() {
    var n = this.utcOffset(), r = "+";
    return n < 0 && (n = -n, r = "-"), r + ca(~~(n / 60), 2) + t + ca(~~n % 60, 2);
  });
}
Qg("Z", ":");
Qg("ZZ", "");
ge("Z", md);
ge("ZZ", md);
wt(["Z", "ZZ"], function(e, t, n) {
  n._useUTC = !0, n._tzm = sp(md, e);
});
var Qq = /([\+\-]|\d\d)/gi;
function sp(e, t) {
  var n = (t || "").match(e), r, a, s;
  return n === null ? null : (r = n[n.length - 1] || [], a = (r + "").match(Qq) || ["-", 0, 0], s = +(a[1] * 60) + rt(a[2]), s === 0 ? 0 : a[0] === "+" ? s : -s);
}
function lp(e, t) {
  var n, r;
  return t._isUTC ? (n = t.clone(), r = ($r(e) || eo(e) ? e.valueOf() : Et(e).valueOf()) - n.valueOf(), n._d.setTime(n._d.valueOf() + r), ue.updateOffset(n, !1), n) : Et(e).local();
}
function Vf(e) {
  return -Math.round(e._d.getTimezoneOffset());
}
ue.updateOffset = function() {
};
function eN(e, t, n) {
  var r = this._offset || 0, a;
  if (!this.isValid())
    return e != null ? this : NaN;
  if (e != null) {
    if (typeof e == "string") {
      if (e = sp(md, e), e === null)
        return this;
    } else Math.abs(e) < 16 && !n && (e = e * 60);
    return !this._isUTC && t && (a = Vf(this)), this._offset = e, this._isUTC = !0, a != null && this.add(a, "m"), r !== e && (!t || this._changeInProgress ? nS(
      this,
      jr(e - r, "m"),
      1,
      !1
    ) : this._changeInProgress || (this._changeInProgress = !0, ue.updateOffset(this, !0), this._changeInProgress = null)), this;
  } else
    return this._isUTC ? r : Vf(this);
}
function tN(e, t) {
  return e != null ? (typeof e != "string" && (e = -e), this.utcOffset(e, t), this) : -this.utcOffset();
}
function nN(e) {
  return this.utcOffset(0, e);
}
function rN(e) {
  return this._isUTC && (this.utcOffset(0, e), this._isUTC = !1, e && this.subtract(Vf(this), "m")), this;
}
function aN() {
  if (this._tzm != null)
    this.utcOffset(this._tzm, !1, !0);
  else if (typeof this._i == "string") {
    var e = sp(wF, this._i);
    e != null ? this.utcOffset(e) : this.utcOffset(0, !0);
  }
  return this;
}
function iN(e) {
  return this.isValid() ? (e = e ? Et(e).utcOffset() : 0, (this.utcOffset() - e) % 60 === 0) : !1;
}
function sN() {
  return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
}
function lN() {
  if (!kn(this._isDSTShifted))
    return this._isDSTShifted;
  var e = {}, t;
  return jh(e, this), e = Xg(e), e._a ? (t = e._isUTC ? _a(e._a) : Et(e._a), this._isDSTShifted = this.isValid() && Jq(e._a, t.toArray()) > 0) : this._isDSTShifted = !1, this._isDSTShifted;
}
function oN() {
  return this.isValid() ? !this._isUTC : !1;
}
function uN() {
  return this.isValid() ? this._isUTC : !1;
}
function eS() {
  return this.isValid() ? this._isUTC && this._offset === 0 : !1;
}
var dN = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/, cN = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
function jr(e, t) {
  var n = e, r = null, a, s, o;
  return _u(e) ? n = {
    ms: e._milliseconds,
    d: e._days,
    M: e._months
  } : Ba(e) || !isNaN(+e) ? (n = {}, t ? n[t] = +e : n.milliseconds = +e) : (r = dN.exec(e)) ? (a = r[1] === "-" ? -1 : 1, n = {
    y: 0,
    d: rt(r[ra]) * a,
    h: rt(r[Qt]) * a,
    m: rt(r[Nr]) * a,
    s: rt(r[Oa]) * a,
    ms: rt(Nf(r[Pi] * 1e3)) * a
    // the millisecond decimal point is included in the match
  }) : (r = cN.exec(e)) ? (a = r[1] === "-" ? -1 : 1, n = {
    y: Ii(r[2], a),
    M: Ii(r[3], a),
    w: Ii(r[4], a),
    d: Ii(r[5], a),
    h: Ii(r[6], a),
    m: Ii(r[7], a),
    s: Ii(r[8], a)
  }) : n == null ? n = {} : typeof n == "object" && ("from" in n || "to" in n) && (o = fN(
    Et(n.from),
    Et(n.to)
  ), n = {}, n.ms = o.milliseconds, n.M = o.months), s = new yd(n), _u(e) && ht(e, "_locale") && (s._locale = e._locale), _u(e) && ht(e, "_isValid") && (s._isValid = e._isValid), s;
}
jr.fn = yd.prototype;
jr.invalid = Zq;
function Ii(e, t) {
  var n = e && parseFloat(e.replace(",", "."));
  return (isNaN(n) ? 0 : n) * t;
}
function av(e, t) {
  var n = {};
  return n.months = t.month() - e.month() + (t.year() - e.year()) * 12, e.clone().add(n.months, "M").isAfter(t) && --n.months, n.milliseconds = +t - +e.clone().add(n.months, "M"), n;
}
function fN(e, t) {
  var n;
  return e.isValid() && t.isValid() ? (t = lp(t, e), e.isBefore(t) ? n = av(e, t) : (n = av(t, e), n.milliseconds = -n.milliseconds, n.months = -n.months), n) : { milliseconds: 0, months: 0 };
}
function tS(e, t) {
  return function(n, r) {
    var a, s;
    return r !== null && !isNaN(+r) && (Og(
      t,
      "moment()." + t + "(period, number) is deprecated. Please use moment()." + t + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."
    ), s = n, n = r, r = s), a = jr(n, r), nS(this, a, e), this;
  };
}
function nS(e, t, n, r) {
  var a = t._milliseconds, s = Nf(t._days), o = Nf(t._months);
  e.isValid() && (r = r ?? !0, o && Vg(e, Rl(e, "Month") + o * n), s && Fg(e, "Date", Rl(e, "Date") + s * n), a && e._d.setTime(e._d.valueOf() + a * n), r && ue.updateOffset(e, s || o));
}
var hN = tS(1, "add"), pN = tS(-1, "subtract");
function rS(e) {
  return typeof e == "string" || e instanceof String;
}
function _N(e) {
  return $r(e) || eo(e) || rS(e) || Ba(e) || bN(e) || mN(e) || e === null || e === void 0;
}
function mN(e) {
  var t = ki(e) && !Wh(e), n = !1, r = [
    "years",
    "year",
    "y",
    "months",
    "month",
    "M",
    "days",
    "day",
    "d",
    "dates",
    "date",
    "D",
    "hours",
    "hour",
    "h",
    "minutes",
    "minute",
    "m",
    "seconds",
    "second",
    "s",
    "milliseconds",
    "millisecond",
    "ms"
  ], a, s, o = r.length;
  for (a = 0; a < o; a += 1)
    s = r[a], n = n || ht(e, s);
  return t && n;
}
function bN(e) {
  var t = Hr(e), n = !1;
  return t && (n = e.filter(function(r) {
    return !Ba(r) && rS(e);
  }).length === 0), t && n;
}
function vN(e) {
  var t = ki(e) && !Wh(e), n = !1, r = [
    "sameDay",
    "nextDay",
    "lastDay",
    "nextWeek",
    "lastWeek",
    "sameElse"
  ], a, s;
  for (a = 0; a < r.length; a += 1)
    s = r[a], n = n || ht(e, s);
  return t && n;
}
function yN(e, t) {
  var n = e.diff(t, "days", !0);
  return n < -6 ? "sameElse" : n < -1 ? "lastWeek" : n < 0 ? "lastDay" : n < 1 ? "sameDay" : n < 2 ? "nextDay" : n < 7 ? "nextWeek" : "sameElse";
}
function gN(e, t) {
  arguments.length === 1 && (arguments[0] ? _N(arguments[0]) ? (e = arguments[0], t = void 0) : vN(arguments[0]) && (t = arguments[0], e = void 0) : (e = void 0, t = void 0));
  var n = e || Et(), r = lp(n, this).startOf("day"), a = ue.calendarFormat(this, r) || "sameElse", s = t && (ma(t[a]) ? t[a].call(this, n) : t[a]);
  return this.format(
    s || this.localeData().calendar(a, this, Et(n))
  );
}
function SN() {
  return new to(this);
}
function AN(e, t) {
  var n = $r(e) ? e : Et(e);
  return this.isValid() && n.isValid() ? (t = xr(t) || "millisecond", t === "millisecond" ? this.valueOf() > n.valueOf() : n.valueOf() < this.clone().startOf(t).valueOf()) : !1;
}
function wN(e, t) {
  var n = $r(e) ? e : Et(e);
  return this.isValid() && n.isValid() ? (t = xr(t) || "millisecond", t === "millisecond" ? this.valueOf() < n.valueOf() : this.clone().endOf(t).valueOf() < n.valueOf()) : !1;
}
function TN(e, t, n, r) {
  var a = $r(e) ? e : Et(e), s = $r(t) ? t : Et(t);
  return this.isValid() && a.isValid() && s.isValid() ? (r = r || "()", (r[0] === "(" ? this.isAfter(a, n) : !this.isBefore(a, n)) && (r[1] === ")" ? this.isBefore(s, n) : !this.isAfter(s, n))) : !1;
}
function xN(e, t) {
  var n = $r(e) ? e : Et(e), r;
  return this.isValid() && n.isValid() ? (t = xr(t) || "millisecond", t === "millisecond" ? this.valueOf() === n.valueOf() : (r = n.valueOf(), this.clone().startOf(t).valueOf() <= r && r <= this.clone().endOf(t).valueOf())) : !1;
}
function CN(e, t) {
  return this.isSame(e, t) || this.isAfter(e, t);
}
function IN(e, t) {
  return this.isSame(e, t) || this.isBefore(e, t);
}
function LN(e, t, n) {
  var r, a, s;
  if (!this.isValid())
    return NaN;
  if (r = lp(e, this), !r.isValid())
    return NaN;
  switch (a = (r.utcOffset() - this.utcOffset()) * 6e4, t = xr(t), t) {
    case "year":
      s = mu(this, r) / 12;
      break;
    case "month":
      s = mu(this, r);
      break;
    case "quarter":
      s = mu(this, r) / 3;
      break;
    case "second":
      s = (this - r) / 1e3;
      break;
    // 1000
    case "minute":
      s = (this - r) / 6e4;
      break;
    // 1000 * 60
    case "hour":
      s = (this - r) / 36e5;
      break;
    // 1000 * 60 * 60
    case "day":
      s = (this - r - a) / 864e5;
      break;
    // 1000 * 60 * 60 * 24, negate dst
    case "week":
      s = (this - r - a) / 6048e5;
      break;
    // 1000 * 60 * 60 * 24 * 7, negate dst
    default:
      s = this - r;
  }
  return n ? s : vr(s);
}
function mu(e, t) {
  if (e.date() < t.date())
    return -mu(t, e);
  var n = (t.year() - e.year()) * 12 + (t.month() - e.month()), r = e.clone().add(n, "months"), a, s;
  return t - r < 0 ? (a = e.clone().add(n - 1, "months"), s = (t - r) / (r - a)) : (a = e.clone().add(n + 1, "months"), s = (t - r) / (a - r)), -(n + s) || 0;
}
ue.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
ue.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
function EN() {
  return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
}
function ON(e) {
  if (!this.isValid())
    return null;
  var t = e !== !0, n = t ? this.clone().utc() : this;
  return n.year() < 0 || n.year() > 9999 ? pu(
    n,
    t ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"
  ) : ma(Date.prototype.toISOString) ? t ? this.toDate().toISOString() : new Date(this.valueOf() + this.utcOffset() * 60 * 1e3).toISOString().replace("Z", pu(n, "Z")) : pu(
    n,
    t ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ"
  );
}
function DN() {
  if (!this.isValid())
    return "moment.invalid(/* " + this._i + " */)";
  var e = "moment", t = "", n, r, a, s;
  return this.isLocal() || (e = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone", t = "Z"), n = "[" + e + '("]', r = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY", a = "-MM-DD[T]HH:mm:ss.SSS", s = t + '[")]', this.format(n + r + a + s);
}
function PN(e) {
  e || (e = this.isUtc() ? ue.defaultFormatUtc : ue.defaultFormat);
  var t = pu(this, e);
  return this.localeData().postformat(t);
}
function RN(e, t) {
  return this.isValid() && ($r(e) && e.isValid() || Et(e).isValid()) ? jr({ to: this, from: e }).locale(this.locale()).humanize(!t) : this.localeData().invalidDate();
}
function BN(e) {
  return this.from(Et(), e);
}
function kN(e, t) {
  return this.isValid() && ($r(e) && e.isValid() || Et(e).isValid()) ? jr({ from: this, to: e }).locale(this.locale()).humanize(!t) : this.localeData().invalidDate();
}
function MN(e) {
  return this.to(Et(), e);
}
function aS(e) {
  var t;
  return e === void 0 ? this._locale._abbr : (t = Wa(e), t != null && (this._locale = t), this);
}
var iS = Tr(
  "moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
  function(e) {
    return e === void 0 ? this.localeData() : this.locale(e);
  }
);
function sS() {
  return this._locale;
}
var Mu = 1e3, As = 60 * Mu, Fu = 60 * As, lS = (365 * 400 + 97) * 24 * Fu;
function ws(e, t) {
  return (e % t + t) % t;
}
function oS(e, t, n) {
  return e < 100 && e >= 0 ? new Date(e + 400, t, n) - lS : new Date(e, t, n).valueOf();
}
function uS(e, t, n) {
  return e < 100 && e >= 0 ? Date.UTC(e + 400, t, n) - lS : Date.UTC(e, t, n);
}
function FN(e) {
  var t, n;
  if (e = xr(e), e === void 0 || e === "millisecond" || !this.isValid())
    return this;
  switch (n = this._isUTC ? uS : oS, e) {
    case "year":
      t = n(this.year(), 0, 1);
      break;
    case "quarter":
      t = n(
        this.year(),
        this.month() - this.month() % 3,
        1
      );
      break;
    case "month":
      t = n(this.year(), this.month(), 1);
      break;
    case "week":
      t = n(
        this.year(),
        this.month(),
        this.date() - this.weekday()
      );
      break;
    case "isoWeek":
      t = n(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1)
      );
      break;
    case "day":
    case "date":
      t = n(this.year(), this.month(), this.date());
      break;
    case "hour":
      t = this._d.valueOf(), t -= ws(
        t + (this._isUTC ? 0 : this.utcOffset() * As),
        Fu
      );
      break;
    case "minute":
      t = this._d.valueOf(), t -= ws(t, As);
      break;
    case "second":
      t = this._d.valueOf(), t -= ws(t, Mu);
      break;
  }
  return this._d.setTime(t), ue.updateOffset(this, !0), this;
}
function qN(e) {
  var t, n;
  if (e = xr(e), e === void 0 || e === "millisecond" || !this.isValid())
    return this;
  switch (n = this._isUTC ? uS : oS, e) {
    case "year":
      t = n(this.year() + 1, 0, 1) - 1;
      break;
    case "quarter":
      t = n(
        this.year(),
        this.month() - this.month() % 3 + 3,
        1
      ) - 1;
      break;
    case "month":
      t = n(this.year(), this.month() + 1, 1) - 1;
      break;
    case "week":
      t = n(
        this.year(),
        this.month(),
        this.date() - this.weekday() + 7
      ) - 1;
      break;
    case "isoWeek":
      t = n(
        this.year(),
        this.month(),
        this.date() - (this.isoWeekday() - 1) + 7
      ) - 1;
      break;
    case "day":
    case "date":
      t = n(this.year(), this.month(), this.date() + 1) - 1;
      break;
    case "hour":
      t = this._d.valueOf(), t += Fu - ws(
        t + (this._isUTC ? 0 : this.utcOffset() * As),
        Fu
      ) - 1;
      break;
    case "minute":
      t = this._d.valueOf(), t += As - ws(t, As) - 1;
      break;
    case "second":
      t = this._d.valueOf(), t += Mu - ws(t, Mu) - 1;
      break;
  }
  return this._d.setTime(t), ue.updateOffset(this, !0), this;
}
function NN() {
  return this._d.valueOf() - (this._offset || 0) * 6e4;
}
function VN() {
  return Math.floor(this.valueOf() / 1e3);
}
function HN() {
  return new Date(this.valueOf());
}
function $N() {
  var e = this;
  return [
    e.year(),
    e.month(),
    e.date(),
    e.hour(),
    e.minute(),
    e.second(),
    e.millisecond()
  ];
}
function WN() {
  var e = this;
  return {
    years: e.year(),
    months: e.month(),
    date: e.date(),
    hours: e.hours(),
    minutes: e.minutes(),
    seconds: e.seconds(),
    milliseconds: e.milliseconds()
  };
}
function UN() {
  return this.isValid() ? this.toISOString() : null;
}
function jN() {
  return Uh(this);
}
function GN() {
  return si({}, Ge(this));
}
function YN() {
  return Ge(this).overflow;
}
function zN() {
  return {
    input: this._i,
    format: this._f,
    locale: this._locale,
    isUTC: this._isUTC,
    strict: this._strict
  };
}
Pe("N", 0, 0, "eraAbbr");
Pe("NN", 0, 0, "eraAbbr");
Pe("NNN", 0, 0, "eraAbbr");
Pe("NNNN", 0, 0, "eraName");
Pe("NNNNN", 0, 0, "eraNarrow");
Pe("y", ["y", 1], "yo", "eraYear");
Pe("y", ["yy", 2], 0, "eraYear");
Pe("y", ["yyy", 3], 0, "eraYear");
Pe("y", ["yyyy", 4], 0, "eraYear");
ge("N", op);
ge("NN", op);
ge("NNN", op);
ge("NNNN", i2);
ge("NNNNN", s2);
wt(
  ["N", "NN", "NNN", "NNNN", "NNNNN"],
  function(e, t, n, r) {
    var a = n._locale.erasParse(e, r, n._strict);
    a ? Ge(n).era = a : Ge(n).invalidEra = e;
  }
);
ge("y", Bs);
ge("yy", Bs);
ge("yyy", Bs);
ge("yyyy", Bs);
ge("yo", l2);
wt(["y", "yy", "yyy", "yyyy"], yn);
wt(["yo"], function(e, t, n, r) {
  var a;
  n._locale._eraYearOrdinalRegex && (a = e.match(n._locale._eraYearOrdinalRegex)), n._locale.eraYearOrdinalParse ? t[yn] = n._locale.eraYearOrdinalParse(e, a) : t[yn] = parseInt(e, 10);
});
function KN(e, t) {
  var n, r, a, s = this._eras || Wa("en")._eras;
  for (n = 0, r = s.length; n < r; ++n) {
    switch (typeof s[n].since) {
      case "string":
        a = ue(s[n].since).startOf("day"), s[n].since = a.valueOf();
        break;
    }
    switch (typeof s[n].until) {
      case "undefined":
        s[n].until = 1 / 0;
        break;
      case "string":
        a = ue(s[n].until).startOf("day").valueOf(), s[n].until = a.valueOf();
        break;
    }
  }
  return s;
}
function XN(e, t, n) {
  var r, a, s = this.eras(), o, u, f;
  for (e = e.toUpperCase(), r = 0, a = s.length; r < a; ++r)
    if (o = s[r].name.toUpperCase(), u = s[r].abbr.toUpperCase(), f = s[r].narrow.toUpperCase(), n)
      switch (t) {
        case "N":
        case "NN":
        case "NNN":
          if (u === e)
            return s[r];
          break;
        case "NNNN":
          if (o === e)
            return s[r];
          break;
        case "NNNNN":
          if (f === e)
            return s[r];
          break;
      }
    else if ([o, u, f].indexOf(e) >= 0)
      return s[r];
}
function ZN(e, t) {
  var n = e.since <= e.until ? 1 : -1;
  return t === void 0 ? ue(e.since).year() : ue(e.since).year() + (t - e.offset) * n;
}
function JN() {
  var e, t, n, r = this.localeData().eras();
  for (e = 0, t = r.length; e < t; ++e)
    if (n = this.clone().startOf("day").valueOf(), r[e].since <= n && n <= r[e].until || r[e].until <= n && n <= r[e].since)
      return r[e].name;
  return "";
}
function QN() {
  var e, t, n, r = this.localeData().eras();
  for (e = 0, t = r.length; e < t; ++e)
    if (n = this.clone().startOf("day").valueOf(), r[e].since <= n && n <= r[e].until || r[e].until <= n && n <= r[e].since)
      return r[e].narrow;
  return "";
}
function e2() {
  var e, t, n, r = this.localeData().eras();
  for (e = 0, t = r.length; e < t; ++e)
    if (n = this.clone().startOf("day").valueOf(), r[e].since <= n && n <= r[e].until || r[e].until <= n && n <= r[e].since)
      return r[e].abbr;
  return "";
}
function t2() {
  var e, t, n, r, a = this.localeData().eras();
  for (e = 0, t = a.length; e < t; ++e)
    if (n = a[e].since <= a[e].until ? 1 : -1, r = this.clone().startOf("day").valueOf(), a[e].since <= r && r <= a[e].until || a[e].until <= r && r <= a[e].since)
      return (this.year() - ue(a[e].since).year()) * n + a[e].offset;
  return this.year();
}
function n2(e) {
  return ht(this, "_erasNameRegex") || up.call(this), e ? this._erasNameRegex : this._erasRegex;
}
function r2(e) {
  return ht(this, "_erasAbbrRegex") || up.call(this), e ? this._erasAbbrRegex : this._erasRegex;
}
function a2(e) {
  return ht(this, "_erasNarrowRegex") || up.call(this), e ? this._erasNarrowRegex : this._erasRegex;
}
function op(e, t) {
  return t.erasAbbrRegex(e);
}
function i2(e, t) {
  return t.erasNameRegex(e);
}
function s2(e, t) {
  return t.erasNarrowRegex(e);
}
function l2(e, t) {
  return t._eraYearOrdinalRegex || Bs;
}
function up() {
  var e = [], t = [], n = [], r = [], a, s, o, u, f, _ = this.eras();
  for (a = 0, s = _.length; a < s; ++a)
    o = Da(_[a].name), u = Da(_[a].abbr), f = Da(_[a].narrow), t.push(o), e.push(u), n.push(f), r.push(o), r.push(u), r.push(f);
  this._erasRegex = new RegExp("^(" + r.join("|") + ")", "i"), this._erasNameRegex = new RegExp("^(" + t.join("|") + ")", "i"), this._erasAbbrRegex = new RegExp("^(" + e.join("|") + ")", "i"), this._erasNarrowRegex = new RegExp(
    "^(" + n.join("|") + ")",
    "i"
  );
}
Pe(0, ["gg", 2], 0, function() {
  return this.weekYear() % 100;
});
Pe(0, ["GG", 2], 0, function() {
  return this.isoWeekYear() % 100;
});
function gd(e, t) {
  Pe(0, [e, e.length], 0, t);
}
gd("gggg", "weekYear");
gd("ggggg", "weekYear");
gd("GGGG", "isoWeekYear");
gd("GGGGG", "isoWeekYear");
ge("G", _d);
ge("g", _d);
ge("GG", Ot, er);
ge("gg", Ot, er);
ge("GGGG", Xh, Kh);
ge("gggg", Xh, Kh);
ge("GGGGG", pd, fd);
ge("ggggg", pd, fd);
ro(
  ["gggg", "ggggg", "GGGG", "GGGGG"],
  function(e, t, n, r) {
    t[r.substr(0, 2)] = rt(e);
  }
);
ro(["gg", "GG"], function(e, t, n, r) {
  t[r] = ue.parseTwoDigitYear(e);
});
function o2(e) {
  return dS.call(
    this,
    e,
    this.week(),
    this.weekday() + this.localeData()._week.dow,
    this.localeData()._week.dow,
    this.localeData()._week.doy
  );
}
function u2(e) {
  return dS.call(
    this,
    e,
    this.isoWeek(),
    this.isoWeekday(),
    1,
    4
  );
}
function d2() {
  return Pa(this.year(), 1, 4);
}
function c2() {
  return Pa(this.isoWeekYear(), 1, 4);
}
function f2() {
  var e = this.localeData()._week;
  return Pa(this.year(), e.dow, e.doy);
}
function h2() {
  var e = this.localeData()._week;
  return Pa(this.weekYear(), e.dow, e.doy);
}
function dS(e, t, n, r, a) {
  var s;
  return e == null ? kl(this, r, a).year : (s = Pa(e, r, a), t > s && (t = s), p2.call(this, e, t, n, r, a));
}
function p2(e, t, n, r, a) {
  var s = Wg(e, t, n, r, a), o = Bl(s.year, 0, s.dayOfYear);
  return this.year(o.getUTCFullYear()), this.month(o.getUTCMonth()), this.date(o.getUTCDate()), this;
}
Pe("Q", 0, "Qo", "quarter");
ge("Q", Pg);
wt("Q", function(e, t) {
  t[Ea] = (rt(e) - 1) * 3;
});
function _2(e) {
  return e == null ? Math.ceil((this.month() + 1) / 3) : this.month((e - 1) * 3 + this.month() % 3);
}
Pe("D", ["DD", 2], "Do", "date");
ge("D", Ot, ks);
ge("DD", Ot, er);
ge("Do", function(e, t) {
  return e ? t._dayOfMonthOrdinalParse || t._ordinalParse : t._dayOfMonthOrdinalParseLenient;
});
wt(["D", "DD"], ra);
wt("Do", function(e, t) {
  t[ra] = rt(e.match(Ot)[0]);
});
var cS = Ms("Date", !0);
Pe("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
ge("DDD", hd);
ge("DDDD", Rg);
wt(["DDD", "DDDD"], function(e, t, n) {
  n._dayOfYear = rt(e);
});
function m2(e) {
  var t = Math.round(
    (this.clone().startOf("day") - this.clone().startOf("year")) / 864e5
  ) + 1;
  return e == null ? t : this.add(e - t, "d");
}
Pe("m", ["mm", 2], 0, "minute");
ge("m", Ot, Zh);
ge("mm", Ot, er);
wt(["m", "mm"], Nr);
var b2 = Ms("Minutes", !1);
Pe("s", ["ss", 2], 0, "second");
ge("s", Ot, Zh);
ge("ss", Ot, er);
wt(["s", "ss"], Oa);
var v2 = Ms("Seconds", !1);
Pe("S", 0, 0, function() {
  return ~~(this.millisecond() / 100);
});
Pe(0, ["SS", 2], 0, function() {
  return ~~(this.millisecond() / 10);
});
Pe(0, ["SSS", 3], 0, "millisecond");
Pe(0, ["SSSS", 4], 0, function() {
  return this.millisecond() * 10;
});
Pe(0, ["SSSSS", 5], 0, function() {
  return this.millisecond() * 100;
});
Pe(0, ["SSSSSS", 6], 0, function() {
  return this.millisecond() * 1e3;
});
Pe(0, ["SSSSSSS", 7], 0, function() {
  return this.millisecond() * 1e4;
});
Pe(0, ["SSSSSSSS", 8], 0, function() {
  return this.millisecond() * 1e5;
});
Pe(0, ["SSSSSSSSS", 9], 0, function() {
  return this.millisecond() * 1e6;
});
ge("S", hd, Pg);
ge("SS", hd, er);
ge("SSS", hd, Rg);
var li, fS;
for (li = "SSSS"; li.length <= 9; li += "S")
  ge(li, Bs);
function y2(e, t) {
  t[Pi] = rt(("0." + e) * 1e3);
}
for (li = "S"; li.length <= 9; li += "S")
  wt(li, y2);
fS = Ms("Milliseconds", !1);
Pe("z", 0, 0, "zoneAbbr");
Pe("zz", 0, 0, "zoneName");
function g2() {
  return this._isUTC ? "UTC" : "";
}
function S2() {
  return this._isUTC ? "Coordinated Universal Time" : "";
}
var ie = to.prototype;
ie.add = hN;
ie.calendar = gN;
ie.clone = SN;
ie.diff = LN;
ie.endOf = qN;
ie.format = PN;
ie.from = RN;
ie.fromNow = BN;
ie.to = kN;
ie.toNow = MN;
ie.get = DF;
ie.invalidAt = YN;
ie.isAfter = AN;
ie.isBefore = wN;
ie.isBetween = TN;
ie.isSame = xN;
ie.isSameOrAfter = CN;
ie.isSameOrBefore = IN;
ie.isValid = jN;
ie.lang = iS;
ie.locale = aS;
ie.localeData = sS;
ie.max = jq;
ie.min = Uq;
ie.parsingFlags = GN;
ie.set = PF;
ie.startOf = FN;
ie.subtract = pN;
ie.toArray = $N;
ie.toObject = WN;
ie.toDate = HN;
ie.toISOString = ON;
ie.inspect = DN;
typeof Symbol < "u" && Symbol.for != null && (ie[Symbol.for("nodejs.util.inspect.custom")] = function() {
  return "Moment<" + this.format() + ">";
});
ie.toJSON = UN;
ie.toString = EN;
ie.unix = VN;
ie.valueOf = NN;
ie.creationData = zN;
ie.eraName = JN;
ie.eraNarrow = QN;
ie.eraAbbr = e2;
ie.eraYear = t2;
ie.year = Mg;
ie.isLeapYear = OF;
ie.weekYear = o2;
ie.isoWeekYear = u2;
ie.quarter = ie.quarters = _2;
ie.month = Hg;
ie.daysInMonth = HF;
ie.week = ie.weeks = KF;
ie.isoWeek = ie.isoWeeks = XF;
ie.weeksInYear = f2;
ie.weeksInWeekYear = h2;
ie.isoWeeksInYear = d2;
ie.isoWeeksInISOWeekYear = c2;
ie.date = cS;
ie.day = ie.days = uq;
ie.weekday = dq;
ie.isoWeekday = cq;
ie.dayOfYear = m2;
ie.hour = ie.hours = vq;
ie.minute = ie.minutes = b2;
ie.second = ie.seconds = v2;
ie.millisecond = ie.milliseconds = fS;
ie.utcOffset = eN;
ie.utc = nN;
ie.local = rN;
ie.parseZone = aN;
ie.hasAlignedHourOffset = iN;
ie.isDST = sN;
ie.isLocal = oN;
ie.isUtcOffset = uN;
ie.isUtc = eS;
ie.isUTC = eS;
ie.zoneAbbr = g2;
ie.zoneName = S2;
ie.dates = Tr(
  "dates accessor is deprecated. Use date instead.",
  cS
);
ie.months = Tr(
  "months accessor is deprecated. Use month instead",
  Hg
);
ie.years = Tr(
  "years accessor is deprecated. Use year instead",
  Mg
);
ie.zone = Tr(
  "moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",
  tN
);
ie.isDSTShifted = Tr(
  "isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",
  lN
);
function A2(e) {
  return Et(e * 1e3);
}
function w2() {
  return Et.apply(null, arguments).parseZone();
}
function hS(e) {
  return e;
}
var pt = Gh.prototype;
pt.calendar = oF;
pt.longDateFormat = fF;
pt.invalidDate = pF;
pt.ordinal = bF;
pt.preparse = hS;
pt.postformat = hS;
pt.relativeTime = yF;
pt.pastFuture = gF;
pt.set = sF;
pt.eras = KN;
pt.erasParse = XN;
pt.erasConvertYear = ZN;
pt.erasAbbrRegex = r2;
pt.erasNameRegex = n2;
pt.erasNarrowRegex = a2;
pt.months = FF;
pt.monthsShort = qF;
pt.monthsParse = VF;
pt.monthsRegex = WF;
pt.monthsShortRegex = $F;
pt.week = jF;
pt.firstDayOfYear = zF;
pt.firstDayOfWeek = YF;
pt.weekdays = aq;
pt.weekdaysMin = sq;
pt.weekdaysShort = iq;
pt.weekdaysParse = oq;
pt.weekdaysRegex = fq;
pt.weekdaysShortRegex = hq;
pt.weekdaysMinRegex = pq;
pt.isPM = mq;
pt.meridiem = yq;
function qu(e, t, n, r) {
  var a = Wa(), s = _a().set(r, t);
  return a[n](s, e);
}
function pS(e, t, n) {
  if (Ba(e) && (t = e, e = void 0), e = e || "", t != null)
    return qu(e, t, n, "month");
  var r, a = [];
  for (r = 0; r < 12; r++)
    a[r] = qu(e, r, n, "month");
  return a;
}
function dp(e, t, n, r) {
  typeof e == "boolean" ? (Ba(t) && (n = t, t = void 0), t = t || "") : (t = e, n = t, e = !1, Ba(t) && (n = t, t = void 0), t = t || "");
  var a = Wa(), s = e ? a._week.dow : 0, o, u = [];
  if (n != null)
    return qu(t, (n + s) % 7, r, "day");
  for (o = 0; o < 7; o++)
    u[o] = qu(t, (o + s) % 7, r, "day");
  return u;
}
function T2(e, t) {
  return pS(e, t, "months");
}
function x2(e, t) {
  return pS(e, t, "monthsShort");
}
function C2(e, t, n) {
  return dp(e, t, n, "weekdays");
}
function I2(e, t, n) {
  return dp(e, t, n, "weekdaysShort");
}
function L2(e, t, n) {
  return dp(e, t, n, "weekdaysMin");
}
oi("en", {
  eras: [
    {
      since: "0001-01-01",
      until: 1 / 0,
      offset: 1,
      name: "Anno Domini",
      narrow: "AD",
      abbr: "AD"
    },
    {
      since: "0000-12-31",
      until: -1 / 0,
      offset: 1,
      name: "Before Christ",
      narrow: "BC",
      abbr: "BC"
    }
  ],
  dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
  ordinal: function(e) {
    var t = e % 10, n = rt(e % 100 / 10) === 1 ? "th" : t === 1 ? "st" : t === 2 ? "nd" : t === 3 ? "rd" : "th";
    return e + n;
  }
});
ue.lang = Tr(
  "moment.lang is deprecated. Use moment.locale instead.",
  oi
);
ue.langData = Tr(
  "moment.langData is deprecated. Use moment.localeData instead.",
  Wa
);
var Ia = Math.abs;
function E2() {
  var e = this._data;
  return this._milliseconds = Ia(this._milliseconds), this._days = Ia(this._days), this._months = Ia(this._months), e.milliseconds = Ia(e.milliseconds), e.seconds = Ia(e.seconds), e.minutes = Ia(e.minutes), e.hours = Ia(e.hours), e.months = Ia(e.months), e.years = Ia(e.years), this;
}
function _S(e, t, n, r) {
  var a = jr(t, n);
  return e._milliseconds += r * a._milliseconds, e._days += r * a._days, e._months += r * a._months, e._bubble();
}
function O2(e, t) {
  return _S(this, e, t, 1);
}
function D2(e, t) {
  return _S(this, e, t, -1);
}
function iv(e) {
  return e < 0 ? Math.floor(e) : Math.ceil(e);
}
function P2() {
  var e = this._milliseconds, t = this._days, n = this._months, r = this._data, a, s, o, u, f;
  return e >= 0 && t >= 0 && n >= 0 || e <= 0 && t <= 0 && n <= 0 || (e += iv(Hf(n) + t) * 864e5, t = 0, n = 0), r.milliseconds = e % 1e3, a = vr(e / 1e3), r.seconds = a % 60, s = vr(a / 60), r.minutes = s % 60, o = vr(s / 60), r.hours = o % 24, t += vr(o / 24), f = vr(mS(t)), n += f, t -= iv(Hf(f)), u = vr(n / 12), n %= 12, r.days = t, r.months = n, r.years = u, this;
}
function mS(e) {
  return e * 4800 / 146097;
}
function Hf(e) {
  return e * 146097 / 4800;
}
function R2(e) {
  if (!this.isValid())
    return NaN;
  var t, n, r = this._milliseconds;
  if (e = xr(e), e === "month" || e === "quarter" || e === "year")
    switch (t = this._days + r / 864e5, n = this._months + mS(t), e) {
      case "month":
        return n;
      case "quarter":
        return n / 3;
      case "year":
        return n / 12;
    }
  else
    switch (t = this._days + Math.round(Hf(this._months)), e) {
      case "week":
        return t / 7 + r / 6048e5;
      case "day":
        return t + r / 864e5;
      case "hour":
        return t * 24 + r / 36e5;
      case "minute":
        return t * 1440 + r / 6e4;
      case "second":
        return t * 86400 + r / 1e3;
      // Math.floor prevents floating point math errors here
      case "millisecond":
        return Math.floor(t * 864e5) + r;
      default:
        throw new Error("Unknown unit " + e);
    }
}
function Ua(e) {
  return function() {
    return this.as(e);
  };
}
var bS = Ua("ms"), B2 = Ua("s"), k2 = Ua("m"), M2 = Ua("h"), F2 = Ua("d"), q2 = Ua("w"), N2 = Ua("M"), V2 = Ua("Q"), H2 = Ua("y"), $2 = bS;
function W2() {
  return jr(this);
}
function U2(e) {
  return e = xr(e), this.isValid() ? this[e + "s"]() : NaN;
}
function ji(e) {
  return function() {
    return this.isValid() ? this._data[e] : NaN;
  };
}
var j2 = ji("milliseconds"), G2 = ji("seconds"), Y2 = ji("minutes"), z2 = ji("hours"), K2 = ji("days"), X2 = ji("months"), Z2 = ji("years");
function J2() {
  return vr(this.days() / 7);
}
var La = Math.round, hs = {
  ss: 44,
  // a few seconds to seconds
  s: 45,
  // seconds to minute
  m: 45,
  // minutes to hour
  h: 22,
  // hours to day
  d: 26,
  // days to month/week
  w: null,
  // weeks to month
  M: 11
  // months to year
};
function Q2(e, t, n, r, a) {
  return a.relativeTime(t || 1, !!n, e, r);
}
function e5(e, t, n, r) {
  var a = jr(e).abs(), s = La(a.as("s")), o = La(a.as("m")), u = La(a.as("h")), f = La(a.as("d")), _ = La(a.as("M")), m = La(a.as("w")), b = La(a.as("y")), v = s <= n.ss && ["s", s] || s < n.s && ["ss", s] || o <= 1 && ["m"] || o < n.m && ["mm", o] || u <= 1 && ["h"] || u < n.h && ["hh", u] || f <= 1 && ["d"] || f < n.d && ["dd", f];
  return n.w != null && (v = v || m <= 1 && ["w"] || m < n.w && ["ww", m]), v = v || _ <= 1 && ["M"] || _ < n.M && ["MM", _] || b <= 1 && ["y"] || ["yy", b], v[2] = t, v[3] = +e > 0, v[4] = r, Q2.apply(null, v);
}
function t5(e) {
  return e === void 0 ? La : typeof e == "function" ? (La = e, !0) : !1;
}
function n5(e, t) {
  return hs[e] === void 0 ? !1 : t === void 0 ? hs[e] : (hs[e] = t, e === "s" && (hs.ss = t - 1), !0);
}
function r5(e, t) {
  if (!this.isValid())
    return this.localeData().invalidDate();
  var n = !1, r = hs, a, s;
  return typeof e == "object" && (t = e, e = !1), typeof e == "boolean" && (n = e), typeof t == "object" && (r = Object.assign({}, hs, t), t.s != null && t.ss == null && (r.ss = t.s - 1)), a = this.localeData(), s = e5(this, !n, r, a), n && (s = a.pastFuture(+this, s)), a.postformat(s);
}
var of = Math.abs;
function cs(e) {
  return (e > 0) - (e < 0) || +e;
}
function Sd() {
  if (!this.isValid())
    return this.localeData().invalidDate();
  var e = of(this._milliseconds) / 1e3, t = of(this._days), n = of(this._months), r, a, s, o, u = this.asSeconds(), f, _, m, b;
  return u ? (r = vr(e / 60), a = vr(r / 60), e %= 60, r %= 60, s = vr(n / 12), n %= 12, o = e ? e.toFixed(3).replace(/\.?0+$/, "") : "", f = u < 0 ? "-" : "", _ = cs(this._months) !== cs(u) ? "-" : "", m = cs(this._days) !== cs(u) ? "-" : "", b = cs(this._milliseconds) !== cs(u) ? "-" : "", f + "P" + (s ? _ + s + "Y" : "") + (n ? _ + n + "M" : "") + (t ? m + t + "D" : "") + (a || r || e ? "T" : "") + (a ? b + a + "H" : "") + (r ? b + r + "M" : "") + (e ? b + o + "S" : "")) : "P0D";
}
var ot = yd.prototype;
ot.isValid = Xq;
ot.abs = E2;
ot.add = O2;
ot.subtract = D2;
ot.as = R2;
ot.asMilliseconds = bS;
ot.asSeconds = B2;
ot.asMinutes = k2;
ot.asHours = M2;
ot.asDays = F2;
ot.asWeeks = q2;
ot.asMonths = N2;
ot.asQuarters = V2;
ot.asYears = H2;
ot.valueOf = $2;
ot._bubble = P2;
ot.clone = W2;
ot.get = U2;
ot.milliseconds = j2;
ot.seconds = G2;
ot.minutes = Y2;
ot.hours = z2;
ot.days = K2;
ot.weeks = J2;
ot.months = X2;
ot.years = Z2;
ot.humanize = r5;
ot.toISOString = Sd;
ot.toString = Sd;
ot.toJSON = Sd;
ot.locale = aS;
ot.localeData = sS;
ot.toIsoString = Tr(
  "toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",
  Sd
);
ot.lang = iS;
Pe("X", 0, 0, "unix");
Pe("x", 0, 0, "valueOf");
ge("x", _d);
ge("X", TF);
wt("X", function(e, t, n) {
  n._d = new Date(parseFloat(e) * 1e3);
});
wt("x", function(e, t, n) {
  n._d = new Date(rt(e));
});
//! moment.js
ue.version = "2.30.1";
aF(Et);
ue.fn = ie;
ue.min = Gq;
ue.max = Yq;
ue.now = zq;
ue.utc = _a;
ue.unix = A2;
ue.months = T2;
ue.isDate = eo;
ue.locale = oi;
ue.invalid = cd;
ue.duration = jr;
ue.isMoment = $r;
ue.weekdays = C2;
ue.parseZone = w2;
ue.localeData = Wa;
ue.isDuration = _u;
ue.monthsShort = x2;
ue.weekdaysMin = L2;
ue.defineLocale = np;
ue.updateLocale = wq;
ue.locales = Tq;
ue.weekdaysShort = I2;
ue.normalizeUnits = xr;
ue.relativeTimeRounding = t5;
ue.relativeTimeThreshold = n5;
ue.calendarFormat = yN;
ue.prototype = ie;
ue.HTML5_FMT = {
  DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
  // <input type="datetime-local" />
  DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
  // <input type="datetime-local" step="1" />
  DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
  // <input type="datetime-local" step="0.001" />
  DATE: "YYYY-MM-DD",
  // <input type="date" />
  TIME: "HH:mm",
  // <input type="time" />
  TIME_SECONDS: "HH:mm:ss",
  // <input type="time" step="1" />
  TIME_MS: "HH:mm:ss.SSS",
  // <input type="time" step="0.001" />
  WEEK: "GGGG-[W]WW",
  // <input type="week" />
  MONTH: "YYYY-MM"
  // <input type="month" />
};
ue.suppressDeprecationWarnings = !0;
const sv = {
  date: () => "DD.MM.YYYY",
  datetime: () => "DD.MM.YYYY HH:mm",
  fullDate: () => "dddd, DD. MMMM YYYY, HH:mm",
  time: () => "HH:mm",
  timeWithSeconds: () => "HH:mm:ss"
};
function a5(e, { format: t = "date" } = {}) {
  if (ae(e) || e === "")
    return "";
  const n = ue(String(e));
  return n.isValid() ? (We(sv[t]) && (t = sv[t]()), n.format(t)) : e;
}
function i5(e, { emptyValue: t = "-" } = {}) {
  return ae(e) || e === "" ? t : e;
}
function s5(e, { linkClass: t } = {}) {
  if (ae(e) || e === "" || !yt(e) || !/^\S+@\S+\.\S+$/.test(e))
    return "";
  let n = "";
  return t && (n = ` class="${t}"`), `<a href="mailto:${e}"${n}>${e}</a>`;
}
function l5(e) {
  const t = document.createElement("div");
  return t.textContent = e, t.innerHTML;
}
function o5(e, { units: t = "kb", sourceUnits: n = "b", digits: r = 2 } = {}) {
  const s = [
    "b",
    "kb",
    "mb",
    "gb",
    "tb",
    "pb",
    "eb",
    "zb",
    "yb"
  ], o = Ts(e);
  if (bB(o))
    return "";
  const u = s.indexOf(n);
  let f = s.indexOf(t);
  if (u === -1)
    return "";
  const _ = o * Math.pow(1024, u);
  f === -1 && (f = Math.floor(Math.log(_) / Math.log(1024)), f < 0 && (f = 0), t = s[f]);
  const m = Kt({ placeholder: `_A_FILE_SIZE_${rg(t)}_` });
  if (o === 0)
    return Sl(0, { suffix: m, digits: r });
  if (u === f)
    return Sl(o, { suffix: m, digits: r });
  const b = _ / Math.pow(1024, Math.abs(f));
  return Sl(b, { suffix: m, digits: r });
}
function u5(e, { replacer: t, space: n = 2 } = {}) {
  if (ae(e))
    return "";
  try {
    return JSON.stringify(e, t, n);
  } catch {
    return "";
  }
}
function d5(e) {
  return e ? KB(e, (t, n, r) => `${t}${t ? ", " : ""}${r}: ${n}`, "") : "";
}
function c5(e, { limit: t = 30, maxThreeDots: n = !0 } = {}) {
  if (ae(e))
    return "";
  const r = en(e);
  if (r.length <= t)
    return r;
  if (n) {
    const a = r.slice(0, t).trimEnd();
    let s = "...", o = !0;
    for (let u = a.length - 1; u > a.length - 4 && a[u] === "."; u--) {
      if (o)
        s = s.slice(0, -1);
      else
        break;
      o = !0;
    }
    return `${a}${s}`;
  }
  return `${r.substring(0, t)}...`;
}
function f5(e, { linkText: t = "", protocol: n = "https://", target: r = "", linkClass: a = "" } = {}) {
  if (ae(e) || !yt(e))
    return "";
  let s = n;
  (e.startsWith("https://") || e.startsWith("http://")) && (s = "");
  const o = r ? ` target="${r}"` : "", u = a ? ` class="${a}"` : "";
  return `<a href="${s}${e}"${o}${u}>${t || e}</a>`;
}
function Nu(e, {
  defaultValue: t = "",
  isChild: n = !1,
  isHtml: r = !0,
  isSimpleArray: a = !1,
  keyChildren: s = "",
  keyLabel: o = "",
  keyLabelCallback: u,
  lastSeparator: f,
  listClass: _ = "",
  separator: m,
  separatorHtml: b = "",
  tag: v = "ul"
} = {}) {
  if (!Ae(e) || !e.length)
    return t;
  let g = "";
  return r === !1 || r === "false" ? (qe(m) && (m = ", "), Y(e, (S, A) => {
    let w = lv({
      keyLabel: o,
      keyLabelCallback: u,
      index: A,
      item: S,
      isSimpleArray: a
    }), T;
    if (a) {
      if (Ae(w)) {
        let I = "";
        Y(w, (C) => {
          Ae(C) ? T = C : I = C;
        }), w = I;
      }
    } else s && (T = de(S, s));
    !qe(f) && A === e.length - 1 ? g += `${A !== 0 || n ? f : ""}${w}` : g += `${A !== 0 || n ? m : ""}${w}`, T != null && T.length && (g += Nu(T, {
      isChild: !0,
      isHtml: r,
      isSimpleArray: a,
      keyChildren: s,
      keyLabel: o,
      keyLabelCallback: u,
      separator: m
    }));
  }), g) : (Y(e, (S, A) => {
    const w = e.length === A + 1, T = lv({
      keyLabel: o,
      keyLabelCallback: u,
      index: A,
      item: S,
      isSimpleArray: a
    });
    let I, C = T;
    a ? Ae(T) && Y(T, (E) => {
      Ae(E) ? I = E : C = E;
    }) : s && (I = de(S, s)), m && !w && (C += m), I != null && I.length && (C += Nu(I, {
      isChild: !0,
      isHtml: r,
      isSimpleArray: a,
      keyChildren: s,
      keyLabel: o,
      keyLabelCallback: u,
      listClass: _,
      tag: v
    })), b && !w && (C += b), g += `<li>${C}</li>`;
  }), `<${v}${h5({ listClass: _ })}>${g}</${v}>`);
}
function lv({ keyLabel: e, keyLabelCallback: t, index: n, item: r, isSimpleArray: a }) {
  let s;
  return a ? s = r : We(t) ? s = t({ item: r, itemIndex: n }) : s = e ? de(r, e) : r, qe(s) && (s = ""), s;
}
function h5({ listClass: e }) {
  return e ? ` class="${e}"` : "";
}
function p5(e) {
  return ng(e);
}
function _5(e, { chars: t = 4, mask: n = "*" } = {}) {
  if (ae(e))
    return "";
  const r = en(e);
  if (r.length <= t)
    return r;
  const a = yB([t, 0]), s = n.repeat(r.length - a), o = a === 0 ? "" : r.slice(-a);
  return `${s}${o}`;
}
function m5(e, { mapping: t = {}, defaultValue: n = "" } = {}) {
  return `${e}` in t ? t[e] : n;
}
function b5(e, { searchModel: t = "", searchClass: n = "a_search_highlight" }) {
  if (!e)
    return "";
  if (t === "" || ae(t))
    return e;
  const r = new RegExp(Gl(t), "gi");
  return e.replace(r, (a) => `<span class="${n}">${a}</span>`);
}
function v5(e) {
  return rg(e);
}
const y5 = R({});
function tr() {
  return {
    filterBoolean: (C, { trueValue: E = "_YES_", falseValue: P = "_NO_", useNil: M = !0 } = {}) => tF(C, {
      trueValue: E,
      falseValue: P,
      useNil: M
    }),
    filterCapitalize: (C) => nF(C),
    filterCurrency: (C, { suffix: E = "€", digits: P = 2, digitGrouping: M = !0 } = {}) => rF(C, { suffix: E, digits: P, digitGrouping: M }),
    filterDate: (C, { format: E = "date" } = {}) => a5(C, { format: E }),
    filterDefaultForEmpty: (C, { emptyValue: E = "-" } = {}) => i5(C, {
      emptyValue: E
    }),
    filterEmail: (C, { linkClass: E } = {}) => s5(C, { linkClass: E }),
    filterEscapeHtml: (C) => l5(C),
    filterFileSize: (C, { units: E = "kb", sourceUnits: P = "b", digits: M = 2 } = {}) => o5(C, { units: E, sourceUnits: P, digits: M }),
    filterFloat: (C, { suffix: E = "", digits: P = 2, digitGrouping: M = !0 } = {}) => Sl(C, { suffix: E, digits: P, digitGrouping: M }),
    filterJson: (C, { replacer: E, space: P = 2 } = {}) => u5(C, { replacer: E, space: P }),
    filterKeyValue: (C) => d5(C),
    filterLimitTo: (C, {
      limit: E = 30,
      maxThreeDots: P = !0
    } = {}) => c5(C, { limit: E, maxThreeDots: P }),
    filterLink: (C, { linkText: E = "", protocol: P = "https://", target: M = "", linkClass: k = "" } = {}) => f5(C, { linkText: E, protocol: P, target: M, linkClass: k }),
    filterList: (C, {
      isHtml: E = !0,
      isSimpleArray: P = !1,
      keyChildren: M = "",
      keyLabel: k = "",
      keyLabelCallback: F,
      listClass: D = "",
      separator: W = ", ",
      tag: $ = "ul"
    } = {}) => Nu(C, { isHtml: E, listClass: D, keyLabel: k, keyLabelCallback: F, keyChildren: M, isSimpleArray: P, separator: W, tag: $ }),
    filterLowerCase: (C) => p5(C),
    filterMask: (C, { chars: E = 4, mask: P = "*" } = {}) => _5(C, { chars: E, mask: P }),
    filterPropertyByValue: (C, { mapping: E = {}, defaultValue: P = "" } = {}) => m5(C, { mapping: E, defaultValue: P }),
    filterSearchHighlight: (C, { searchModel: E = "", searchClass: P = "a_search_highlight" } = {}) => b5(C, { searchModel: E, searchClass: P }),
    filterUpperCase: (C) => v5(C),
    ...y5.value
  };
}
function cp(e, {
  labelLocal: t = d(() => ""),
  valueLocal: n = d(() => "")
}) {
  const r = p(e, "isHiddenWithSearch"), a = p(e, "modelSearch"), s = p(e, "searching"), o = p(e, "searchingElements"), u = p(e, "showElementWennGroupFound"), {
    filterSearchHighlight: f
  } = tr(), _ = d(() => !!(r.value || s.value && !u.value && !o.value[n.value])), m = d(() => _.value ? t.value : f(t.value, { searchModel: a.value })), b = d(() => _.value ? "display: none;" : void 0), v = d(() => _.value ? !0 : void 0);
  return {
    currentLabelFiltered: m,
    dataHideWithSearch: v,
    styleWithSearch: b
  };
}
const $f = {
  name: "ACheckboxItem",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !0
    },
    modelValue: {
      type: Array,
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: a
    } = Hh(e), {
      classButton: s
    } = xg(e), {
      isChecked: o
    } = QM(e, {
      valueLocal: a
    }), {
      disabledElement: u
    } = $h(e), {
      onClick: f,
      onKeydown: _
    } = eF(e, t, {
      isChecked: o,
      valueLocal: a
    }), {
      currentLabelFiltered: m,
      styleWithSearch: b
    } = cp(e, {
      labelLocal: r,
      valueLocal: a
    }), {
      titleLocal: v
    } = Cg(e);
    return {
      classButton: s,
      currentLabelFiltered: m,
      disabledElement: u,
      idLocal: n,
      isChecked: o,
      labelLocal: r,
      onClick: f,
      onKeydown: _,
      styleWithSearch: b,
      titleLocal: v,
      valueLocal: a
    };
  },
  render() {
    return this.isButtonGroup ? [
      c("input", {
        id: this.idLocal,
        checked: this.isChecked,
        class: "a_btn_check",
        disabled: this.disabledElement,
        name: this.id,
        style: this.styleWithSearch,
        type: "checkbox",
        value: this.valueLocal,
        onClick: this.onClick,
        onKeydown: this.onKeydown
      }),
      c(Oe, {
        alwaysTranslate: this.alwaysTranslate,
        class: this.classButton,
        classDefault: "",
        extra: {
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        },
        for: this.idLocal,
        tag: "label",
        title: this.titleLocal,
        type: "button"
      }, () => [
        this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          id: this.id,
          item: this.dataItem,
          itemIndex: this.itemIndex,
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        }) : this.labelLocal && Ft(c("span", {}), [
          [sn, this.currentLabelFiltered]
        ])
      ])
    ] : [
      c("div", {
        class: ["a_custom_control a_custom_checkbox", {
          a_custom_control_invalid: this.isErrors
        }],
        style: this.styleWithSearch
      }, [
        c("input", {
          id: this.idLocal,
          checked: this.isChecked,
          class: "a_custom_control_input",
          disabled: this.disabledElement,
          name: this.id,
          type: "checkbox",
          value: this.valueLocal,
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(Oe, {
          alwaysTranslate: this.alwaysTranslate,
          class: {
            a_custom_control_label: !0,
            a_custom_control_label_width_auto: this.isWidthAuto
          },
          classDefault: "",
          extra: {
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          },
          for: this.idLocal,
          tag: "label",
          title: this.titleLocal,
          type: "button"
        }, () => [
          this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            id: this.id,
            item: this.dataItem,
            itemIndex: this.itemIndex,
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          }) : this.labelLocal && Ft(c("span", {
            class: "a_custom_control_label__text"
          }), [
            [sn, this.currentLabelFiltered]
          ])
        ])
      ]),
      this.slotAppendName && this.$slots[this.slotAppendName] ? this.$slots[this.slotAppendName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        isChecked: this.isChecked,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : ""
    ];
  }
};
function g5(e) {
  const t = p(e, "data"), n = p(e, "modelValueObj"), r = d(() => {
    const o = {
      indeterminate: void 0,
      checkedAll: !1,
      checkedSome: !1,
      uncheckedSome: !1
    };
    return Mn(n.value) || (Y(t.value, (u) => {
      const f = u[ze];
      if (n.value[f] ? o.checkedSome = !0 : o.uncheckedSome = !0, o.checkedSome && o.uncheckedSome)
        return o.indeterminate = !0, !1;
    }), o.checkedSome && !o.uncheckedSome && (o.checkedAll = !0)), o;
  }), a = d(() => r.value.checkedAll), s = d(() => r.value.indeterminate);
  return {
    isCheckedAll: a,
    isIndeterminate: s
  };
}
function S5(e, { emit: t }, {
  isCheckedAll: n = d(() => !1),
  isIndeterminate: r = d(() => {
  })
}) {
  const a = p(e, "data"), s = p(e, "dataKeyByKeyId"), o = p(e, "modelValue"), u = () => Gt(o.value || [], (v) => !s.value[v]), f = ({ model: v }) => (Y(a.value, (g) => {
    const S = g[ze];
    v.push(S);
  }), v), _ = (v) => {
    let g = u();
    (r.value || !n.value) && (g = f({ model: g })), t("changeModelValue", {
      $event: v,
      model: g
    });
  }, m = (v) => {
    v.stopPropagation(), v.preventDefault(), _(v);
  };
  return {
    onClick: m,
    onKeydown: (v) => {
      (v.keyCode === X.enter || v.keyCode === X.space) && (m(v), v.stopPropagation(), v.preventDefault());
    }
  };
}
function A5(e) {
  const t = p(e, "id"), n = d(() => `${t.value}_legend`);
  return {
    idGroup: d(() => `${t.value}_group`),
    idLocal: n
  };
}
function w5(e) {
  const t = p(e, "label"), n = p(e, "modelSearch"), r = p(e, "showSearchHighlight"), {
    filterSearchHighlight: a
  } = tr();
  return {
    labelSearchHighlight: d(() => r.value ? a(t.value, { searchModel: n.value }) : t.value)
  };
}
const vS = {
  name: "ACheckboxLegend",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    dataKeyByKeyId: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: !1
    },
    id: {
      type: String,
      required: !0
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    label: {
      type: String,
      required: !1,
      default: void 0
    },
    legendClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    main: {
      type: Boolean,
      required: !1
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: () => []
    },
    modelValueObj: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    showSearchHighlight: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textAfterLabel: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idGroup: n,
      idLocal: r
    } = A5(e), {
      isCheckedAll: a,
      isIndeterminate: s
    } = g5(e), {
      onClick: o,
      onKeydown: u
    } = S5(e, t, {
      isCheckedAll: a,
      isIndeterminate: s
    }), {
      labelSearchHighlight: f
    } = w5(e);
    return {
      idGroup: n,
      idLocal: r,
      isCheckedAll: a,
      isIndeterminate: s,
      labelSearchHighlight: f,
      onClick: o,
      onKeydown: u
    };
  },
  render() {
    return this.hasControlCheckbox ? c("legend", {
      class: [
        "a_legend",
        {
          a_legend_invalid: this.isErrors
        },
        this.legendClass
      ]
    }, [
      c("div", {
        class: ["a_custom_control a_custom_checkbox", {
          a_custom_control_invalid: this.isErrors
        }]
      }, [
        c("input", {
          id: this.idLocal,
          "aria-controls": this.idGroup,
          checked: this.isCheckedAll,
          class: "a_custom_control_input",
          disabled: this.disabled,
          indeterminate: this.isIndeterminate,
          type: "checkbox",
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(Oe, {
          alwaysTranslate: this.alwaysTranslate,
          class: "a_custom_control_label a_custom_control_label_width_auto",
          classDefault: "",
          for: this.idLocal,
          html: this.labelSearchHighlight,
          textScreenReader: this.labelScreenReader,
          tag: "label",
          textAfter: this.textAfterLabel,
          textClass: "a_custom_control_label__text",
          type: "text"
        })
      ])
    ]) : c(Oe, {
      id: this.idLocal,
      class: [
        "a_legend",
        {
          a_legend_invalid: this.isErrors
        },
        this.legendClass
      ],
      html: this.labelSearchHighlight,
      tag: "legend",
      textAfter: this.textAfterLabel,
      textScreenReader: this.labelScreenReader,
      type: "text"
    });
  }
};
function T5(e) {
  const t = p(e, "levelIndex"), n = p(e, "groupsForLever"), r = p(e, "groupParentKey"), a = d(() => !!n.value[t.value]);
  return {
    currentGroups: d(() => {
      const o = n.value[t.value];
      return ae(r.value) ? o : Gt(n.value[t.value], ["groupParentKey", r.value]);
    }),
    isComponentVisible: a
  };
}
function x5(e, {
  valueLocal: t = d(() => {
  })
}) {
  const n = p(e, "modelValue");
  return {
    isChecked: d(() => Ae(n.value) ? n.value.indexOf(t.value) !== -1 : n.value === t.value)
  };
}
function C5(e, { emit: t }, {
  disabledElement: n = d(() => {
  }),
  isChecked: r = d(() => !1),
  valueLocal: a = d(() => {
  })
}) {
  const s = p(e, "dataItem"), o = (f) => {
    if (n.value || r.value) {
      f.preventDefault(), f.stopPropagation();
      return;
    }
    t("changeModelValue", {
      model: a.value,
      item: s.value,
      $event: f
    }), f.preventDefault(), f.stopPropagation();
  };
  return {
    onClick: o,
    onKeydown: (f) => {
      (f.key === "Enter" || f.keyCode === X.space) && (o(f), f.stopPropagation(), f.preventDefault());
    }
  };
}
const Wf = {
  name: "ARadioItem",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: a
    } = Hh(e), {
      classButton: s
    } = xg(e), {
      isChecked: o
    } = x5(e, {
      valueLocal: a
    }), {
      disabledElement: u
    } = $h(e), {
      onClick: f,
      onKeydown: _
    } = C5(e, t, {
      disabledElement: u,
      isChecked: o,
      valueLocal: a
    }), {
      currentLabelFiltered: m,
      styleWithSearch: b
    } = cp(e, {
      labelLocal: r,
      valueLocal: a
    }), {
      titleLocal: v
    } = Cg(e);
    return {
      classButton: s,
      currentLabelFiltered: m,
      disabledElement: u,
      idLocal: n,
      isChecked: o,
      labelLocal: r,
      onClick: f,
      onKeydown: _,
      styleWithSearch: b,
      titleLocal: v,
      valueLocal: a
    };
  },
  render() {
    return this.isButtonGroup ? [
      c("input", {
        id: this.idLocal,
        checked: this.isChecked,
        class: "a_btn_check",
        disabled: this.disabledElement,
        name: this.id,
        style: this.styleWithSearch,
        type: "radio",
        value: this.valueLocal,
        onClick: this.onClick,
        onKeydown: this.onKeydown
      }),
      c(Oe, {
        alwaysTranslate: this.alwaysTranslate,
        class: this.classButton,
        classDefault: "",
        extra: {
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        },
        for: this.idLocal,
        tag: "label",
        title: this.titleLocal,
        type: "button"
      }, () => [
        this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          id: this.id,
          item: this.dataItem,
          itemIndex: this.itemIndex,
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        }) : this.labelLocal && Ft(c("span", {}), [
          [sn, this.currentLabelFiltered]
        ])
      ])
    ] : [
      c("div", {
        class: ["a_custom_control a_custom_radio", {
          a_custom_control_invalid: this.isErrors
        }],
        style: this.styleWithSearch
      }, [
        c("input", {
          id: this.idLocal,
          checked: this.isChecked,
          class: "a_custom_control_input",
          disabled: this.disabledElement,
          name: this.id,
          type: "radio",
          value: this.valueLocal,
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(Oe, {
          alwaysTranslate: this.alwaysTranslate,
          class: {
            a_custom_control_label: !0,
            a_custom_control_label_width_auto: this.isWidthAuto
          },
          classDefault: "",
          extra: {
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          },
          for: this.idLocal,
          tag: "label",
          title: this.titleLocal,
          type: "button"
        }, () => [
          this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            id: this.id,
            item: this.dataItem,
            itemIndex: this.itemIndex,
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          }) : this.labelLocal && Ft(c("span", {
            class: "a_custom_control_label__text"
          }), [
            [sn, this.currentLabelFiltered]
          ])
        ])
      ]),
      this.slotAppendName && this.$slots[this.slotAppendName] ? this.$slots[this.slotAppendName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        isChecked: this.isChecked,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : ""
    ];
  }
};
function I5(e, {
  valueLocal: t = d(() => {
  })
}) {
  const n = p(e, "type"), r = p(e, "modelValue");
  return {
    isChecked: d(() => n.value === "multiselect" ? !!(r.value && r.value.indexOf(t.value) !== -1) : r.value === t.value)
  };
}
function L5(e, { emit: t }, {
  disabledElement: n = d(() => {
  }),
  isChecked: r = d(() => !1),
  valueLocal: a = d(() => {
  })
}) {
  const s = (u) => {
    n.value || (t("changeModelValue", {
      currentValue: a.value,
      $event: u,
      isSelected: r.value
    }), u.stopPropagation(), u.preventDefault());
  };
  return {
    onClick: s,
    onKeydown: (u) => {
      n.value || (u.keyCode === X.enter || u.keyCode === X.space) && s(u);
    }
  };
}
const fp = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-lg" viewBox="0 0 16 16">
  <path d="M12.736 3.97a.733.733 0 0 1 1.047 0c.286.289.29.756.01 1.05L7.88 12.01a.733.733 0 0 1-1.065.02L3.217 8.384a.757.757 0 0 1 0-1.06.733.733 0 0 1 1.047 0l3.052 3.093 5.4-6.425z"/>
</svg>`, Uf = {
  name: "ASelectElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: a
    } = Hh(e), {
      isChecked: s
    } = I5(e, {
      valueLocal: a
    }), {
      disabledElement: o
    } = $h(e), {
      onClick: u,
      onKeydown: f
    } = L5(e, t, {
      disabledElement: o,
      isChecked: s,
      valueLocal: a
    }), {
      currentLabelFiltered: _,
      dataHideWithSearch: m,
      styleWithSearch: b
    } = cp(e, {
      labelLocal: r,
      valueLocal: a
    });
    return {
      currentLabelFiltered: _,
      dataHideWithSearch: m,
      disabledElement: o,
      idLocal: n,
      isChecked: s,
      labelLocal: r,
      onClick: u,
      onKeydown: f,
      styleWithSearch: b
    };
  },
  render() {
    return c("div", {
      ariaSelected: this.isChecked,
      class: ["a_select__menu__link a_select__element_clickable", {
        a_select__menu__link_selected: this.isChecked,
        a_select__menu__link_disabled: this.disabledElement
      }],
      "data-hide": this.dataHideWithSearch,
      disabled: this.disabledElement,
      role: "option",
      style: this.styleWithSearch,
      tabindex: "-1",
      onClick: this.onClick,
      onKeydown: this.onKeydown
    }, [
      c("span", {
        class: "a_select__menu__link__icon_box"
      }, [
        this.isChecked && c(lt, {
          icon: fp
        })
      ]),
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered,
        inDropdown: !0
      }) : Ft(c("span"), [
        [sn, this.currentLabelFiltered]
      ])
    ]);
  }
};
function E5(e) {
  const t = p(e, "type"), n = d(() => t.value === "select" || t.value === "multiselect");
  return {
    currentComponent: d(() => t.value === "radio" ? Wf : t.value === "checkbox" ? $f : n.value ? Uf : ""),
    isComponentSelect: n
  };
}
function O5({ emit: e }) {
  return {
    onChangeModelValue: (n) => {
      e("changeModelValue", n);
    }
  };
}
const hp = {
  name: "ACheckboxRadioGroups",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    dataGrouped: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    groupParentKey: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    groupsForLever: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: !1
    },
    hideParentWithSearch: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    levelIndex: {
      type: Number,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    modelValueObj: {
      type: Object,
      required: !1,
      default: void 0
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    searchingGroups: {
      type: Object,
      required: !0
    },
    searchingGroupsWithSearchInGroup: {
      type: Object,
      required: !0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0,
      validator: (e) => ["radio", "checkbox", "select", "multiselect"].indexOf(e) !== -1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      onChangeModelValue: n
    } = O5(t), {
      currentComponent: r,
      isComponentSelect: a
    } = E5(e), {
      isComponentVisible: s,
      currentGroups: o
    } = T5(e);
    return {
      currentComponent: r,
      currentGroups: o,
      isComponentSelect: a,
      isComponentVisible: s,
      onChangeModelValue: n
    };
  },
  render() {
    return this.isComponentVisible ? [
      ...this.currentGroups.map((e, t) => {
        let n, r = !1, a = !1;
        if (this.searching) {
          const s = `${this.groupParentKey ? `${this.groupParentKey}_` : ""}${e.groupKey}`;
          a = this.searchingGroupsWithSearchInGroup[s], (this.isHiddenWithSearch || !this.searchingGroups[s] && !a) && (n = "display: none;", r = !0);
        }
        return e.groupKey === "_not_grouped" ? c("div", {
          class: [
            "a_checkbox_radio_group__data",
            {
              a_btn_group: this.isButtonGroup
            }
          ],
          style: n
        }, [
          ...this.dataGrouped[e.allGroupKeys].map((s, o) => c(this.currentComponent, {
            id: `${this.id}`,
            alwaysTranslate: this.alwaysTranslate,
            classButtonGroupDefault: this.isComponentSelect ? void 0 : this.classButtonGroupDefault,
            dataItem: s,
            disabled: this.disabled,
            isButtonGroup: this.isComponentSelect ? void 0 : this.isButtonGroup,
            isErrors: this.isComponentSelect ? void 0 : this.isErrors,
            isHiddenWithSearch: r,
            isWidthAuto: this.isComponentSelect ? void 0 : this.isWidthAuto,
            itemIndex: o,
            keyDisabled: this.keyDisabled,
            keyTitle: this.keyTitle,
            keyTitleCallback: this.keyTitleCallback,
            modelSearch: this.modelSearch,
            modelValue: this.modelValue,
            searching: this.searching,
            searchingElements: this.searchingElements,
            showElementWennGroupFound: a,
            slotAppendName: this.slotAppendName,
            slotName: this.slotName,
            type: this.type,
            onChangeModelValue: this.onChangeModelValue
          }, this.$slots))
        ]) : c("fieldset", {
          class: "a_fieldset",
          style: n
        }, [
          c(vS, {
            id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}`,
            alwaysTranslate: this.alwaysTranslate,
            data: e.data,
            dataKeyByKeyId: e.dataKeyByKeyId,
            disabled: this.disabled,
            hasControlCheckbox: this.hasControlCheckbox,
            isErrors: this.isErrors,
            label: e.groupLabel,
            modelSearch: this.modelSearch,
            modelValue: this.modelValue,
            modelValueObj: this.modelValueObj,
            showSearchHighlight: a,
            onChangeModelValue: this.onChangeModelValue
          }),
          c("div", {
            id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}_group`,
            "aria-labelledby": `${this.id}_lev_${this.levelIndex + 1}_gr_${t}_legend`,
            role: "group"
          }, [
            !!(this.dataGrouped[e.allGroupKeys] || []).length && c("div", {
              class: [
                "a_checkbox_radio_group__data",
                {
                  a_btn_group: this.isButtonGroup
                }
              ]
            }, [
              ...(this.dataGrouped[e.allGroupKeys] || []).map((s, o) => c(this.currentComponent, {
                id: `${this.id}_gr_${t}`,
                alwaysTranslate: this.alwaysTranslate,
                classButtonGroupDefault: this.isComponentSelect ? void 0 : this.classButtonGroupDefault,
                dataItem: s,
                disabled: this.disabled,
                isButtonGroup: this.isComponentSelect ? void 0 : this.isButtonGroup,
                isErrors: this.isComponentSelect ? void 0 : this.isErrors,
                isHiddenWithSearch: r,
                isWidthAuto: this.isComponentSelect ? void 0 : this.isWidthAuto,
                itemIndex: o,
                keyDisabled: this.keyDisabled,
                keyTitle: this.keyTitle,
                keyTitleCallback: this.keyTitleCallback,
                modelSearch: this.modelSearch,
                modelValue: this.modelValue,
                searching: this.searching,
                searchingElements: this.searchingElements,
                showElementWennGroupFound: a,
                slotAppendName: this.slotAppendName,
                slotName: this.slotName,
                type: this.type,
                onChangeModelValue: this.onChangeModelValue
              }, this.$slots))
            ]),
            c(la("ACheckboxRadioGroups"), {
              id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}`,
              alwaysTranslate: this.alwaysTranslate,
              classButtonGroupDefault: this.classButtonGroupDefault,
              dataGrouped: this.dataGrouped,
              disabled: this.disabled,
              groupParentKey: e.groupKey,
              groupsForLever: this.groupsForLever,
              hasControlCheckbox: this.hasControlCheckbox,
              isButtonGroup: this.isButtonGroup,
              isErrors: this.isErrors,
              isHiddenWithSearch: r,
              isWidthAuto: this.isWidthAuto,
              keyDisabled: this.keyDisabled,
              keyTitle: this.keyTitle,
              keyTitleCallback: this.keyTitleCallback,
              levelIndex: this.levelIndex + 1,
              modelSearch: this.modelSearch,
              modelValue: this.modelValue,
              modelValueObj: this.modelValueObj,
              searching: this.searching,
              searchingElements: this.searchingElements,
              searchingGroups: this.searchingGroups,
              searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
              slotName: this.slotName,
              slotAppendName: this.slotAppendName,
              type: this.type,
              onChangeModelValue: this.onChangeModelValue
            }, this.$slots)
          ])
        ]);
      })
    ] : null;
  }
};
function yS(e) {
  const t = p(e, "align"), n = p(e, "size"), r = p(e, "textAlign"), a = d(() => `a_text_${t.value}`), s = d(() => r.value === "left" ? "a_cloak__box_text_left" : "a_cloak__box_text_right"), o = d(() => `a_fs_${n.value}`);
  return {
    classAlign: a,
    classForBox: s,
    classTextSize: o
  };
}
const Oi = R({
  propsDefault: {
    align: "center",
    size: 6,
    tag: "div",
    text: "_A_CLOAK_LOADING_",
    textAlign: "right"
  }
}), TU = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Oi.value.propsDefault = {
      ...Oi.value.propsDefault,
      ...t
    };
  }
}, Fl = {
  name: "ACloak",
  props: {
    align: {
      type: String,
      required: !1,
      default: () => Oi.value.propsDefault.align,
      validator: (e) => ["left", "center", "right"].indexOf(e) !== -1
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => Oi.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    spinnerClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    spinnerSafeHtml: {
      type: String,
      required: !1,
      default: () => Fr.value.propsDefault.safeHtml
    },
    spinnerTag: {
      type: String,
      required: !1,
      default: () => Fr.value.propsDefault.tag
    },
    tag: {
      type: String,
      required: !1,
      default: () => Oi.value.propsDefault.tag
    },
    text: {
      type: String,
      required: !1,
      default: () => Oi.value.propsDefault.text
    },
    textAlign: {
      type: String,
      required: !1,
      default: () => Oi.value.propsDefault.textAlign,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    }
  },
  setup(e) {
    const {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    } = yS(e);
    return {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    };
  },
  render() {
    const e = this.textAlign === "left", t = c(be, {
      alwaysTranslate: this.alwaysTranslate,
      tag: "span",
      class: [
        "a_cloak__text",
        e ? "a_cloak__text_left" : "a_cloak__text_right",
        this.classTextSize
      ],
      text: this.text,
      extra: this.extra
    });
    return c(
      this.tag,
      {
        role: "status",
        class: this.classAlign
      },
      [
        c("div", {
          class: ["a_cloak__box", this.classForBox]
        }, [
          e ? t : "",
          c(Ol, {
            alwaysTranslate: this.alwaysTranslate,
            class: [
              "a_cloak__spinner",
              this.spinnerClass
            ],
            "aria-hidden": "true",
            safeHtml: this.spinnerSafeHtml,
            size: this.size,
            tag: this.spinnerTag
          }),
          e ? "" : t
        ])
      ]
    );
  }
}, gn = {
  name: "AErrorsText",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const t = p(e, "errors");
    return {
      errorsLocal: d(() => yt(t.value) ? [t.value] : t.value)
    };
  },
  render() {
    return c("ul", {
      id: this.id,
      class: "a_form_element__invalid_text"
    }, [
      this.errorsLocal.map((e) => c("li", null, e))
    ]);
  }
}, Sn = {
  name: "AFormHelpText",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    html: {
      type: [String, Number],
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  render() {
    return this.html && c(be, {
      id: this.id,
      alwaysTranslate: this.alwaysTranslate,
      class: "a_form_element__help_text",
      html: this.html,
      extra: this.extra
    });
  }
};
function D5({ emit: e }) {
  return {
    clearLocal: ({ $event: n }) => {
      n.stopPropagation(), n.preventDefault(), e("clear", n);
    }
  };
}
const ja = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
  <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z"/>
</svg>`, Ad = {
  name: "AFormElementBtnClear",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    class: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_transparent_dark a_btn_small"
    },
    icon: {
      type: String,
      required: !1,
      default: ja
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    title: {
      type: String,
      required: !1,
      default: "_REMOVE_FIELD_CONTENT_"
    },
    textScreenReader: {
      type: String,
      required: !1,
      default: "_REMOVE_FIELD_CONTENT_"
    },
    tabindex: {
      type: Number,
      required: !1,
      default: -1
    },
    iconClass: {
      type: String,
      required: !1,
      default: "a_form_element__btn_close__icon"
    }
  },
  emits: [
    "clear"
  ],
  setup(e, t) {
    const {
      clearLocal: n
    } = D5(t);
    return {
      clearLocal: n
    };
  },
  render() {
    if (!this.disabled)
      return c(Oe, {
        class: [
          "a_form_control__actions__btn",
          this.class
        ],
        disabled: this.disabled,
        iconClass: this.iconClass,
        iconLeft: this.icon,
        onClick: this.clearLocal,
        tabindex: this.tabindex,
        textScreenReader: this.textScreenReader,
        title: this.title,
        type: "button"
      });
  }
};
function gS(e) {
  return `clickALabel_${e}`;
}
function P5(e, {
  idLabelLocal: t = d(() => ""),
  preventLocal: n = d(() => !1),
  stopLocal: r = d(() => !1)
}) {
  const a = p(e, "clickLabel"), s = p(e, "id");
  return {
    onClick: ({ $event: u }) => {
      We(a.value) && a.value({
        id: s.value,
        idLabel: t.value,
        $event: u
      }), n.value && (u == null || u.preventDefault()), r.value && (u == null || u.stopPropagation()), setTimeout(() => {
        Ht.$emit(gS(s.value), {
          id: s.value,
          idLabel: t.value,
          $event: u
        });
      });
    }
  };
}
function R5(e, {
  hideForLocal: t = d(() => !1),
  hideIdLocal: n = d(() => !1)
}) {
  const r = p(e, "id"), a = p(e, "idSuffix"), s = d(() => {
    if (!n.value)
      return `${r.value}${a.value}`;
  });
  return {
    forLabelLocal: d(() => {
      if (!t.value)
        return r.value;
    }),
    idLabelLocal: s
  };
}
function B5(e) {
  const t = p(e, "isLabelFloat"), n = p(e, "label"), r = p(e, "required"), a = d(() => !ae(n.value)), s = d(() => a.value ? n.value : void 0), o = d(() => r.value && a.value ? "*" : ""), u = d(() => {
    if (t.value)
      return s.value;
  });
  return {
    isLabel: a,
    labelLocal: s,
    textAfterLabel: o,
    titleLocal: u
  };
}
const fi = R({
  fieldset: !0,
  group: !0
}), pp = R({
  multiselect: !0,
  checkbox: !0
}), SS = R({
  dateRange: !0,
  integerNonNegativeRange: !0,
  integerPositiveRange: !0,
  integerRange: !0,
  numberRange: !0
}), k5 = R({
  checkbox: !0,
  multiselect: !0,
  radio: !0,
  select: !0
}), M5 = R({
  select: {
    hideFor: !0,
    prevent: !0
  },
  multiselect: {
    hideFor: !0,
    prevent: !0
  },
  file: {
    hideId: !0
  },
  // numberRange
  numberRange: {
    hideFor: !0,
    prevent: !0
  },
  integerNonNegativeRange: {
    hideFor: !0,
    prevent: !0
  },
  integerPositiveRange: {
    hideFor: !0,
    prevent: !0
  },
  integerRange: {
    hideFor: !0,
    prevent: !0
  },
  // numberRange /
  dateRange: {
    hideFor: !0,
    prevent: !0
  }
});
function F5(e) {
  const t = p(e, "hideFor"), n = p(e, "hideId"), r = p(e, "prevent"), a = p(e, "stop"), s = p(e, "type"), o = d(() => M5.value[s.value] || {}), u = ({ prop: v, propForType: g }) => qe(v) ? g : v, f = d(() => u({
    prop: a.value,
    propForType: o.value.stop
  })), _ = d(() => u({
    prop: r.value,
    propForType: o.value.prevent
  })), m = d(() => u({
    prop: n.value,
    propForType: o.value.hideId
  }));
  return {
    hideForLocal: d(() => u({
      prop: t.value,
      propForType: o.value.hideFor
    })),
    hideIdLocal: m,
    preventLocal: _,
    stopLocal: f
  };
}
const tn = {
  name: "ALabel",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    clickLabel: {
      type: Function,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hideFor: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    hideId: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: "_label"
    },
    isError: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "label"
    },
    type: {
      type: String,
      required: !1
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = zt(e), {
      hideForLocal: n,
      hideIdLocal: r,
      preventLocal: a,
      stopLocal: s
    } = F5(e), {
      forLabelLocal: o,
      idLabelLocal: u
    } = R5(e, {
      hideForLocal: n,
      hideIdLocal: r
    }), {
      isLabel: f,
      labelLocal: _,
      textAfterLabel: m,
      titleLocal: b
    } = B5(e), {
      onClick: v
    } = P5(e, {
      idLabelLocal: u,
      preventLocal: a,
      stopLocal: s
    });
    return {
      attributesToExcludeFromRender: t,
      forLabelLocal: o,
      idLabelLocal: u,
      isLabel: f,
      labelLocal: _,
      onClick: v,
      textAfterLabel: m,
      titleLocal: b
    };
  },
  render() {
    return c(Oe, {
      id: this.idLabelLocal,
      alwaysTranslate: this.alwaysTranslate,
      class: [
        "a_form_element_label",
        this.labelClass,
        this.isLabelFloat ? "a_form_element_label_float" : "a_form_element_label_static",
        {
          a_form_element_label_error: this.isError
        }
      ],
      extra: this.extra,
      for: this.forLabelLocal,
      html: this.labelLocal,
      htmlScreenReader: this.labelScreenReader,
      loading: this.loading,
      loadingAlign: "right",
      loadingClass: "a_spinner_small a_form_element_label__spinner",
      tag: this.tag,
      textAfter: this.textAfterLabel,
      textAriaHidden: !!this.labelScreenReader,
      title: this.titleLocal,
      type: "text",
      onClick: this.onClick,
      ...this.attributesToExcludeFromRender
    });
  }
};
function q5({
  isBtnShowPasswordVisible: e = d(() => !1),
  isClearButtonLocal: t = d(() => !1)
}) {
  return {
    inputClassBtns: d(() => {
      if (e.value)
        return t.value ? "a_form_element_with_two_btns" : "a_form_element_with_one_btn";
      if (t.value)
        return "a_form_element_with_one_btn";
    })
  };
}
function N5(e) {
  const t = p(e, "modelValue"), n = p(e, "type");
  return {
    modelValueLocal: d(() => n.value === "color" && !t.value ? "#000000" : t.value)
  };
}
function V5(e, {
  changeModel: t = () => {
  }
}) {
  const n = p(e, "disabled"), r = p(e, "type"), a = R(void 0);
  return {
    inputRef: a,
    onInput: (o) => {
      if (n.value)
        return;
      let u = o.target.value;
      r.value === "integer" && (u = u.replace(/\D/g, ""), u !== "" && (u = +u), a.value.value = u), r.value === "number" && u !== "" && (u = +u), t({
        model: u
      });
    }
  };
}
const AS = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01757813,0,0,0.0175781,-0.02634961,0.65854895)"
  >
    <path
      d="m 318.642,688.822 44.574,-80.57 q -49.718,-35.998 -77.712,-90.858 -27.994,-54.86 -27.999,-116.002 0,-69.147 34.857,-128.572 Q 161.506,339.676 74.649,474.533 170.076,621.96 318.651,688.819 Z M 540.925,255.106 q 0,-11.42 -8.004,-19.424 -8.004,-8.004 -19.424,-8.004 -71.429,0 -122.571,51.142 -51.142,51.142 -51.142,122.571 0,11.42 8.004,19.424 8.004,8.004 19.424,8.004 11.42,0 19.424,-8.004 8.004,-8.004 8.004,-19.424 0,-49.143 34.857,-83.997 34.857,-34.854 83.997,-34.857 11.42,0 19.424,-8.004 8.004,-8.004 8.004,-19.424 z M 748.354,145.968 q 0,4.001 -0.584,5.141 -60.003,107.428 -179.999,323.427 -119.996,215.999 -180.573,324 l -27.999,50.859 q -5.725,9.142 -16.006,9.142 -6.864,0 -76.57,-40 -9.142,-5.725 -9.142,-16.006 0,-6.864 25.149,-49.718 Q 200.917,715.671 132.062,653.954 63.207,592.237 12.919,513.955 1.499,496.244 1.499,474.522 q 0,-21.722 11.42,-39.433 87.429,-134.286 217.143,-211.999 129.714,-77.713 283.429,-77.712 50.859,0 102.861,9.725 l 30.855,-55.425 q 5.725,-9.142 16.006,-9.142 2.863,0 10.282,3.418 7.419,3.418 17.711,8.865 10.292,5.447 18.858,10.564 8.566,5.117 18.008,10.564 9.442,5.447 11.143,6.566 9.142,5.725 9.142,15.423 z m 21.143,255.427 q 0,79.43 -45.141,144.859 -45.141,65.429 -119.429,94 l 160,-286.857 q 4.57,25.711 4.57,48 z m 256.002,73.144 q 0,20.008 -11.42,39.433 -22.287,36.571 -62.285,82.856 -85.714,98.284 -198.568,152.568 -112.854,54.284 -239.713,54.285 l 42.284,-75.43 q 121.144,-10.282 224.285,-78.29 103.141,-68.008 172.286,-175.429 -65.711,-102.285 -161.146,-168 l 35.998,-64.004 q 54.285,36.571 104.285,87.429 50,50.858 82.572,105.143 11.42,19.424 11.42,39.433 z"
    />
  </g>
</svg>`, wS = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01752671,0,0,0.01752691,-1.7526709e-5,0.68479724)"
  >
    <path
      d="M 953.646,474.431 Q 866.534,339.176 735.292,272.123 q 34.959,59.601 34.959,128.952 0,106.025 -75.367,181.39 -75.367,75.365 -181.39,75.367 -106.023,0.002 -181.39,-75.367 -75.367,-75.369 -75.367,-181.39 0,-69.35 34.959,-128.952 -131.243,67.052 -218.354,202.308 76.223,117.492 191.132,187.121 114.909,69.629 249.018,69.633 134.109,0.004 249.018,-69.633 114.909,-69.637 191.132,-187.121 z M 541.004,254.353 q 0,-11.454 -8.027,-19.481 -8.027,-8.027 -19.481,-8.027 -71.639,0 -122.932,51.293 -51.293,51.293 -51.293,122.932 0,11.454 8.027,19.481 8.027,8.027 19.481,8.027 11.454,0 19.481,-8.027 8.027,-8.027 8.027,-19.481 0,-49.288 34.959,-84.246 34.959,-34.958 84.246,-34.959 11.454,0 19.481,-8.027 Q 541,265.811 541,254.357 Z m 486.001,220.078 q 0,19.481 -11.454,39.549 Q 935.316,645.795 799.773,725.169 664.23,804.543 513.503,804.546 362.776,804.549 227.233,724.882 91.69,645.215 11.455,513.974 0.001,493.906 0.001,474.425 q 0,-19.481 11.454,-39.549 80.235,-131.243 215.778,-210.908 135.543,-79.665 286.27,-79.664 150.727,0.001 286.27,79.664 135.543,79.663 215.778,210.908 11.454,20.068 11.454,39.549 z"
    />
  </g>
</svg>`;
function H5(e, {
  setTypeLocal: t = () => {
  },
  typeForInput: n = d(() => "")
}) {
  const r = p(e, "showPassword"), a = p(e, "type"), s = d(() => !!(a.value === "password" && r.value)), o = d(() => n.value === "password"), u = d(() => o.value ? AS : wS), f = () => {
    t({
      type: o.value ? "text" : "password"
    });
  }, _ = d(() => o.value ? "_A_INPUT_SHOW_PASSWORD_" : "_A_INPUT_HIDE_PASSWORD_");
  return {
    iconBtnShowPassword: u,
    isBtnShowPasswordVisible: s,
    titleBtnShowPassword: _,
    toggleTypePassword: f
  };
}
function $5(e) {
  const t = p(e, "type"), n = R(void 0), r = d(() => n.value === "integer" ? "text" : n.value);
  return {
    setTypeLocal: ({ type: s } = {}) => {
      s ? n.value = s : n.value = t.value;
    },
    typeForInput: r
  };
}
function W5(e, {
  htmlIdLocal: t = d(() => "")
}) {
  const n = p(e, "errors"), r = d(() => n.value ? yt(n.value) ? !0 : Ae(n.value) ? !!Ps(n.value) : !1 : !1);
  return {
    errorsId: d(() => `${t.value}_errors_text`),
    isErrors: r
  };
}
function An(e, { emit: t }) {
  const n = p(e, "change"), r = p(e, "disabled"), a = p(e, "helpText"), s = p(e, "htmlId"), o = p(e, "id"), u = p(e, "idPrefix"), f = p(e, "modelUndefined"), _ = p(e, "modelValue"), m = R(!1), b = d(() => ql({
    id: o.value,
    idPrefix: u.value,
    htmlId: s.value
  })), {
    errorsId: v,
    isErrors: g
  } = W5(e, {
    htmlIdLocal: b
  }), S = ({ model: P, currentModel: M, item: k }) => {
    t("update:modelValue", P), n.value({
      currentModel: M,
      id: o.value,
      item: k,
      model: P,
      props: e
    });
  }, A = d(() => !!(_.value || _.value === 0)), w = () => {
    r.value || S({
      model: f.value
    });
  }, T = d(() => `${b.value}_help_text`);
  return {
    ariaDescribedbyLocal: d(() => {
      let P = "";
      return a.value && (P += T.value), g.value && (P && (P += " "), P += v.value), P || void 0;
    }),
    changeModel: S,
    clearModel: w,
    errorsId: v,
    helpTextId: T,
    htmlIdLocal: b,
    isErrors: g,
    isFocus: m,
    isModel: A,
    onBlur: (P) => {
      m.value = !1, t("blur", {
        event: P,
        props: e
      });
    },
    onFocus: (P) => {
      m.value = !0, t("focus", {
        event: P,
        props: e
      });
    }
  };
}
function ql({ id: e, idPrefix: t, htmlId: n }) {
  return n || `${t || ""}${e}`;
}
function wd(e, {
  isModel: t = d(() => !0)
} = {}) {
  const n = p(e, "isClearButton");
  return {
    isClearButtonLocal: d(() => !!(n.value && t.value))
  };
}
function ao(e) {
  const t = p(e, "disabled");
  return {
    disabledAttribut: d(() => {
      if (t.value === !0)
        return !0;
    })
  };
}
function _p({
  inputRef: e = R(void 0)
}) {
  const t = R(void 0), n = () => {
    t.value = !0;
  }, r = () => {
    t.value = !1;
  }, a = (s) => {
    switch (s.animationName) {
      case "onAutoFillStart":
        return n();
      case "onAutoFillCancel":
        return r();
    }
  };
  return ha(() => {
    e.value && e.value.addEventListener("animationstart", a);
  }), Bt(() => {
    e.value && e.value.removeEventListener && e.value.removeEventListener("animationstart", a);
  }), {
    isAutofill: t
  };
}
function dn(e) {
  const t = p(e, "dependencies"), n = p(e, "isHide"), r = p(e, "modelDependencies"), a = ({ id: u, value: f }) => {
    var _;
    return ((_ = r.value) == null ? void 0 : _[u]) === f;
  }, s = d(() => {
    if (!t.value)
      return !1;
    if (dt(t.value))
      return !a(t.value);
    if (Ae(t.value)) {
      let u = !1;
      return Y(t.value, (f) => {
        if (!a(f))
          return u = !0, !1;
      }), u;
    }
    return !1;
  });
  return {
    componentStyleHide: d(() => n.value || s.value ? "display: none;" : "")
  };
}
const In = {
  name: "AInput",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => mt("a_input_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    maxlength: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    showPassword: {
      type: Boolean,
      required: !1,
      default: !0
    },
    step: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "text"
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const n = p(e, "type"), {
      disabledAttribut: r
    } = ao(e), {
      setTypeLocal: a,
      typeForInput: s
    } = $5(e), {
      attributesToExcludeFromRender: o
    } = zt(e), {
      componentStyleHide: u
    } = dn(e), {
      ariaDescribedbyLocal: f,
      changeModel: _,
      clearModel: m,
      errorsId: b,
      helpTextId: v,
      htmlIdLocal: g,
      isErrors: S,
      isModel: A,
      onBlur: w,
      onFocus: T
    } = An(e, t), {
      isClearButtonLocal: I
    } = wd(e, {
      isModel: A
    }), {
      inputRef: C,
      onInput: E
    } = V5(e, {
      changeModel: _
    }), {
      iconBtnShowPassword: P,
      isBtnShowPasswordVisible: M,
      titleBtnShowPassword: k,
      toggleTypePassword: F
    } = H5(e, {
      setTypeLocal: a,
      typeForInput: s
    }), {
      isAutofill: D
    } = _p({ inputRef: C }), {
      inputClassBtns: W
    } = q5({
      isBtnShowPasswordVisible: M,
      isClearButtonLocal: I
    }), {
      placeholderAttributes: $
    } = Yl(e), {
      modelValueLocal: z
    } = N5(e);
    return st(n, () => {
      a();
    }), a(), {
      ariaDescribedbyLocal: f,
      attributesToExcludeFromRender: o,
      clearModel: m,
      componentStyleHide: u,
      disabledAttribut: r,
      errorsId: b,
      helpTextId: v,
      htmlIdLocal: g,
      iconBtnShowPassword: P,
      inputClassBtns: W,
      inputRef: C,
      isAutofill: D,
      isBtnShowPasswordVisible: M,
      isClearButtonLocal: I,
      isErrors: S,
      isModel: A,
      modelValueLocal: z,
      onBlur: w,
      onFocus: T,
      onInput: E,
      placeholderAttributes: $,
      titleBtnShowPassword: k,
      toggleTypePassword: F,
      typeForInput: s
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel || this.isAutofill,
          a_form_element__parent_float_has_icon_prepend: this.iconPrepend
        }]
      }, [
        this.label || this.labelScreenReader ? c(tn, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: this.isLabelFloat,
          isError: this.isErrors
        }) : "",
        c("div", {
          class: "a_form_element"
        }, [
          this.iconPrepend && c(lt, {
            icon: this.iconPrepend,
            class: "a_input__icon_prepend"
          }),
          c("input", {
            ref: "inputRef",
            id: this.htmlIdLocal,
            autocomplete: this.autocomplete,
            value: this.modelValueLocal,
            type: this.typeForInput,
            class: [
              "a_form_control a_input",
              this.inputClass,
              this.inputClassBtns,
              {
                a_form_control_invalid: this.isErrors
              }
            ],
            disabled: this.disabledAttribut,
            ariaRequired: this.required,
            ariaInvalid: this.isErrors,
            "aria-describedby": this.ariaDescribedbyLocal,
            maxlength: this.maxlength,
            step: this.step,
            ...this.placeholderAttributes,
            ...this.inputAttributes,
            onInput: this.onInput,
            onFocus: this.onFocus,
            onBlur: this.onBlur
          }),
          this.isBtnShowPasswordVisible || this.isClearButtonLocal ? c("div", {
            class: "a_form_control__actions"
          }, [
            this.isBtnShowPasswordVisible ? c(ct, {
              alwaysTranslate: this.alwaysTranslate,
              class: "a_btn a_btn_transparent_dark a_btn_small a_form_control__actions__btn",
              iconLeft: this.iconBtnShowPassword,
              type: "button",
              title: this.titleBtnShowPassword,
              textScreenReader: this.titleBtnShowPassword,
              disabled: this.disabled,
              onClick: this.toggleTypePassword
            }) : "",
            this.isClearButtonLocal ? c(Ad, {
              alwaysTranslate: this.alwaysTranslate,
              disabled: this.disabled,
              class: this.clearButtonClass,
              onClear: this.clearModel
            }) : ""
          ]) : ""
        ]),
        c(Sn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(gn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function mp(e, {
  htmlIdLocal: t = d(() => "")
}) {
  const n = p(e, "label"), r = d(() => `${t.value}_group`);
  return {
    groupAriaLabelledby: d(() => {
      if (n.value)
        return `${t.value}_legend`;
    }),
    groupId: r
  };
}
function U5(e, {
  changeModel: t = () => {
  }
}) {
  const n = p(e, "disabled");
  return {
    onChangeModelValue: ({ model: a, $event: s }) => {
      n.value || setTimeout(() => {
        t({
          model: a,
          $event: s
        });
      });
    }
  };
}
function j5(e) {
  const t = p(e, "modelValue");
  return {
    modelValueObj: d(() => {
      const r = {};
      return Y(t.value || [], (a) => {
        r[a] = !0;
      }), r;
    })
  };
}
function bp(e) {
  const t = p(e, "required");
  return {
    textAfterLabel: d(() => t.value ? "*" : "")
  };
}
const Fs = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708"/>
</svg>`, vp = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-up" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708z"/>
</svg>`;
function yp(e, { emit: t }) {
  const n = p(e, "collapsible"), r = p(e, "id"), a = p(e, "isCollapsed"), s = p(e, "texts"), o = R(!1), u = d(() => o.value ? vp : Fs), f = d(() => {
    var g;
    return ((g = s.value) == null ? void 0 : g.collapseOpen) || "_A_FIELDSET_COLLAPSE_OPEN_";
  }), _ = d(() => {
    var g;
    return ((g = s.value) == null ? void 0 : g.collapseClose) || "_A_FIELDSET_COLLAPSE_CLOSE_";
  }), m = d(() => o.value ? f.value : _.value), b = () => {
    o.value = !o.value, t("toggleCollapse", { isCollapsed: o.value, id: r.value, props: e });
  }, v = () => {
    n.value ? o.value = a.value || !1 : o.value = !1;
  };
  return st(a, () => {
    o.value = a.value || !1;
  }), {
    iconCollapse: u,
    initIsCollapsedLocal: v,
    isCollapsedLocal: o,
    titleCollapse: m,
    toggleCollapse: b
  };
}
function TS(e, t) {
  return function() {
    return e.apply(t, arguments);
  };
}
const { toString: G5 } = Object.prototype, { getPrototypeOf: gp } = Object, Td = /* @__PURE__ */ ((e) => (t) => {
  const n = G5.call(t);
  return e[n] || (e[n] = n.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null)), Gr = (e) => (e = e.toLowerCase(), (t) => Td(t) === e), xd = (e) => (t) => typeof t === e, { isArray: qs } = Array, Nl = xd("undefined");
function Y5(e) {
  return e !== null && !Nl(e) && e.constructor !== null && !Nl(e.constructor) && Xn(e.constructor.isBuffer) && e.constructor.isBuffer(e);
}
const xS = Gr("ArrayBuffer");
function z5(e) {
  let t;
  return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? t = ArrayBuffer.isView(e) : t = e && e.buffer && xS(e.buffer), t;
}
const K5 = xd("string"), Xn = xd("function"), CS = xd("number"), Cd = (e) => e !== null && typeof e == "object", X5 = (e) => e === !0 || e === !1, bu = (e) => {
  if (Td(e) !== "object")
    return !1;
  const t = gp(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}, Z5 = Gr("Date"), J5 = Gr("File"), Q5 = Gr("Blob"), eV = Gr("FileList"), tV = (e) => Cd(e) && Xn(e.pipe), nV = (e) => {
  let t;
  return e && (typeof FormData == "function" && e instanceof FormData || Xn(e.append) && ((t = Td(e)) === "formdata" || // detect form-data instance
  t === "object" && Xn(e.toString) && e.toString() === "[object FormData]"));
}, rV = Gr("URLSearchParams"), [aV, iV, sV, lV] = ["ReadableStream", "Request", "Response", "Headers"].map(Gr), oV = (e) => e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function io(e, t, { allOwnKeys: n = !1 } = {}) {
  if (e === null || typeof e > "u")
    return;
  let r, a;
  if (typeof e != "object" && (e = [e]), qs(e))
    for (r = 0, a = e.length; r < a; r++)
      t.call(null, e[r], r, e);
  else {
    const s = n ? Object.getOwnPropertyNames(e) : Object.keys(e), o = s.length;
    let u;
    for (r = 0; r < o; r++)
      u = s[r], t.call(null, e[u], u, e);
  }
}
function IS(e, t) {
  t = t.toLowerCase();
  const n = Object.keys(e);
  let r = n.length, a;
  for (; r-- > 0; )
    if (a = n[r], t === a.toLowerCase())
      return a;
  return null;
}
const Ri = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : global, LS = (e) => !Nl(e) && e !== Ri;
function jf() {
  const { caseless: e } = LS(this) && this || {}, t = {}, n = (r, a) => {
    const s = e && IS(t, a) || a;
    bu(t[s]) && bu(r) ? t[s] = jf(t[s], r) : bu(r) ? t[s] = jf({}, r) : qs(r) ? t[s] = r.slice() : t[s] = r;
  };
  for (let r = 0, a = arguments.length; r < a; r++)
    arguments[r] && io(arguments[r], n);
  return t;
}
const uV = (e, t, n, { allOwnKeys: r } = {}) => (io(t, (a, s) => {
  n && Xn(a) ? e[s] = TS(a, n) : e[s] = a;
}, { allOwnKeys: r }), e), dV = (e) => (e.charCodeAt(0) === 65279 && (e = e.slice(1)), e), cV = (e, t, n, r) => {
  e.prototype = Object.create(t.prototype, r), e.prototype.constructor = e, Object.defineProperty(e, "super", {
    value: t.prototype
  }), n && Object.assign(e.prototype, n);
}, fV = (e, t, n, r) => {
  let a, s, o;
  const u = {};
  if (t = t || {}, e == null) return t;
  do {
    for (a = Object.getOwnPropertyNames(e), s = a.length; s-- > 0; )
      o = a[s], (!r || r(o, e, t)) && !u[o] && (t[o] = e[o], u[o] = !0);
    e = n !== !1 && gp(e);
  } while (e && (!n || n(e, t)) && e !== Object.prototype);
  return t;
}, hV = (e, t, n) => {
  e = String(e), (n === void 0 || n > e.length) && (n = e.length), n -= t.length;
  const r = e.indexOf(t, n);
  return r !== -1 && r === n;
}, pV = (e) => {
  if (!e) return null;
  if (qs(e)) return e;
  let t = e.length;
  if (!CS(t)) return null;
  const n = new Array(t);
  for (; t-- > 0; )
    n[t] = e[t];
  return n;
}, _V = /* @__PURE__ */ ((e) => (t) => e && t instanceof e)(typeof Uint8Array < "u" && gp(Uint8Array)), mV = (e, t) => {
  const r = (e && e[Symbol.iterator]).call(e);
  let a;
  for (; (a = r.next()) && !a.done; ) {
    const s = a.value;
    t.call(e, s[0], s[1]);
  }
}, bV = (e, t) => {
  let n;
  const r = [];
  for (; (n = e.exec(t)) !== null; )
    r.push(n);
  return r;
}, vV = Gr("HTMLFormElement"), yV = (e) => e.toLowerCase().replace(
  /[-_\s]([a-z\d])(\w*)/g,
  function(n, r, a) {
    return r.toUpperCase() + a;
  }
), ov = (({ hasOwnProperty: e }) => (t, n) => e.call(t, n))(Object.prototype), gV = Gr("RegExp"), ES = (e, t) => {
  const n = Object.getOwnPropertyDescriptors(e), r = {};
  io(n, (a, s) => {
    let o;
    (o = t(a, s, e)) !== !1 && (r[s] = o || a);
  }), Object.defineProperties(e, r);
}, SV = (e) => {
  ES(e, (t, n) => {
    if (Xn(e) && ["arguments", "caller", "callee"].indexOf(n) !== -1)
      return !1;
    const r = e[n];
    if (Xn(r)) {
      if (t.enumerable = !1, "writable" in t) {
        t.writable = !1;
        return;
      }
      t.set || (t.set = () => {
        throw Error("Can not rewrite read-only method '" + n + "'");
      });
    }
  });
}, AV = (e, t) => {
  const n = {}, r = (a) => {
    a.forEach((s) => {
      n[s] = !0;
    });
  };
  return qs(e) ? r(e) : r(String(e).split(t)), n;
}, wV = () => {
}, TV = (e, t) => e != null && Number.isFinite(e = +e) ? e : t, uf = "abcdefghijklmnopqrstuvwxyz", uv = "0123456789", OS = {
  DIGIT: uv,
  ALPHA: uf,
  ALPHA_DIGIT: uf + uf.toUpperCase() + uv
}, xV = (e = 16, t = OS.ALPHA_DIGIT) => {
  let n = "";
  const { length: r } = t;
  for (; e--; )
    n += t[Math.random() * r | 0];
  return n;
};
function CV(e) {
  return !!(e && Xn(e.append) && e[Symbol.toStringTag] === "FormData" && e[Symbol.iterator]);
}
const IV = (e) => {
  const t = new Array(10), n = (r, a) => {
    if (Cd(r)) {
      if (t.indexOf(r) >= 0)
        return;
      if (!("toJSON" in r)) {
        t[a] = r;
        const s = qs(r) ? [] : {};
        return io(r, (o, u) => {
          const f = n(o, a + 1);
          !Nl(f) && (s[u] = f);
        }), t[a] = void 0, s;
      }
    }
    return r;
  };
  return n(e, 0);
}, LV = Gr("AsyncFunction"), EV = (e) => e && (Cd(e) || Xn(e)) && Xn(e.then) && Xn(e.catch), DS = ((e, t) => e ? setImmediate : t ? ((n, r) => (Ri.addEventListener("message", ({ source: a, data: s }) => {
  a === Ri && s === n && r.length && r.shift()();
}, !1), (a) => {
  r.push(a), Ri.postMessage(n, "*");
}))(`axios@${Math.random()}`, []) : (n) => setTimeout(n))(
  typeof setImmediate == "function",
  Xn(Ri.postMessage)
), OV = typeof queueMicrotask < "u" ? queueMicrotask.bind(Ri) : typeof process < "u" && process.nextTick || DS, G = {
  isArray: qs,
  isArrayBuffer: xS,
  isBuffer: Y5,
  isFormData: nV,
  isArrayBufferView: z5,
  isString: K5,
  isNumber: CS,
  isBoolean: X5,
  isObject: Cd,
  isPlainObject: bu,
  isReadableStream: aV,
  isRequest: iV,
  isResponse: sV,
  isHeaders: lV,
  isUndefined: Nl,
  isDate: Z5,
  isFile: J5,
  isBlob: Q5,
  isRegExp: gV,
  isFunction: Xn,
  isStream: tV,
  isURLSearchParams: rV,
  isTypedArray: _V,
  isFileList: eV,
  forEach: io,
  merge: jf,
  extend: uV,
  trim: oV,
  stripBOM: dV,
  inherits: cV,
  toFlatObject: fV,
  kindOf: Td,
  kindOfTest: Gr,
  endsWith: hV,
  toArray: pV,
  forEachEntry: mV,
  matchAll: bV,
  isHTMLForm: vV,
  hasOwnProperty: ov,
  hasOwnProp: ov,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors: ES,
  freezeMethods: SV,
  toObjectSet: AV,
  toCamelCase: yV,
  noop: wV,
  toFiniteNumber: TV,
  findKey: IS,
  global: Ri,
  isContextDefined: LS,
  ALPHABET: OS,
  generateString: xV,
  isSpecCompliantForm: CV,
  toJSONObject: IV,
  isAsyncFn: LV,
  isThenable: EV,
  setImmediate: DS,
  asap: OV
};
function Ue(e, t, n, r, a) {
  Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = e, this.name = "AxiosError", t && (this.code = t), n && (this.config = n), r && (this.request = r), a && (this.response = a, this.status = a.status ? a.status : null);
}
G.inherits(Ue, Error, {
  toJSON: function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: G.toJSONObject(this.config),
      code: this.code,
      status: this.status
    };
  }
});
const PS = Ue.prototype, RS = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
].forEach((e) => {
  RS[e] = { value: e };
});
Object.defineProperties(Ue, RS);
Object.defineProperty(PS, "isAxiosError", { value: !0 });
Ue.from = (e, t, n, r, a, s) => {
  const o = Object.create(PS);
  return G.toFlatObject(e, o, function(f) {
    return f !== Error.prototype;
  }, (u) => u !== "isAxiosError"), Ue.call(o, e.message, t, n, r, a), o.cause = e, o.name = e.name, s && Object.assign(o, s), o;
};
const DV = null;
function Gf(e) {
  return G.isPlainObject(e) || G.isArray(e);
}
function BS(e) {
  return G.endsWith(e, "[]") ? e.slice(0, -2) : e;
}
function dv(e, t, n) {
  return e ? e.concat(t).map(function(a, s) {
    return a = BS(a), !n && s ? "[" + a + "]" : a;
  }).join(n ? "." : "") : t;
}
function PV(e) {
  return G.isArray(e) && !e.some(Gf);
}
const RV = G.toFlatObject(G, {}, null, function(t) {
  return /^is[A-Z]/.test(t);
});
function Id(e, t, n) {
  if (!G.isObject(e))
    throw new TypeError("target must be an object");
  t = t || new FormData(), n = G.toFlatObject(n, {
    metaTokens: !0,
    dots: !1,
    indexes: !1
  }, !1, function(A, w) {
    return !G.isUndefined(w[A]);
  });
  const r = n.metaTokens, a = n.visitor || m, s = n.dots, o = n.indexes, f = (n.Blob || typeof Blob < "u" && Blob) && G.isSpecCompliantForm(t);
  if (!G.isFunction(a))
    throw new TypeError("visitor must be a function");
  function _(S) {
    if (S === null) return "";
    if (G.isDate(S))
      return S.toISOString();
    if (!f && G.isBlob(S))
      throw new Ue("Blob is not supported. Use a Buffer instead.");
    return G.isArrayBuffer(S) || G.isTypedArray(S) ? f && typeof Blob == "function" ? new Blob([S]) : Buffer.from(S) : S;
  }
  function m(S, A, w) {
    let T = S;
    if (S && !w && typeof S == "object") {
      if (G.endsWith(A, "{}"))
        A = r ? A : A.slice(0, -2), S = JSON.stringify(S);
      else if (G.isArray(S) && PV(S) || (G.isFileList(S) || G.endsWith(A, "[]")) && (T = G.toArray(S)))
        return A = BS(A), T.forEach(function(C, E) {
          !(G.isUndefined(C) || C === null) && t.append(
            // eslint-disable-next-line no-nested-ternary
            o === !0 ? dv([A], E, s) : o === null ? A : A + "[]",
            _(C)
          );
        }), !1;
    }
    return Gf(S) ? !0 : (t.append(dv(w, A, s), _(S)), !1);
  }
  const b = [], v = Object.assign(RV, {
    defaultVisitor: m,
    convertValue: _,
    isVisitable: Gf
  });
  function g(S, A) {
    if (!G.isUndefined(S)) {
      if (b.indexOf(S) !== -1)
        throw Error("Circular reference detected in " + A.join("."));
      b.push(S), G.forEach(S, function(T, I) {
        (!(G.isUndefined(T) || T === null) && a.call(
          t,
          T,
          G.isString(I) ? I.trim() : I,
          A,
          v
        )) === !0 && g(T, A ? A.concat(I) : [I]);
      }), b.pop();
    }
  }
  if (!G.isObject(e))
    throw new TypeError("data must be an object");
  return g(e), t;
}
function cv(e) {
  const t = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0"
  };
  return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function(r) {
    return t[r];
  });
}
function Sp(e, t) {
  this._pairs = [], e && Id(e, this, t);
}
const kS = Sp.prototype;
kS.append = function(t, n) {
  this._pairs.push([t, n]);
};
kS.toString = function(t) {
  const n = t ? function(r) {
    return t.call(this, r, cv);
  } : cv;
  return this._pairs.map(function(a) {
    return n(a[0]) + "=" + n(a[1]);
  }, "").join("&");
};
function BV(e) {
  return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
function MS(e, t, n) {
  if (!t)
    return e;
  const r = n && n.encode || BV;
  G.isFunction(n) && (n = {
    serialize: n
  });
  const a = n && n.serialize;
  let s;
  if (a ? s = a(t, n) : s = G.isURLSearchParams(t) ? t.toString() : new Sp(t, n).toString(r), s) {
    const o = e.indexOf("#");
    o !== -1 && (e = e.slice(0, o)), e += (e.indexOf("?") === -1 ? "?" : "&") + s;
  }
  return e;
}
class fv {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(t, n, r) {
    return this.handlers.push({
      fulfilled: t,
      rejected: n,
      synchronous: r ? r.synchronous : !1,
      runWhen: r ? r.runWhen : null
    }), this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(t) {
    this.handlers[t] && (this.handlers[t] = null);
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    this.handlers && (this.handlers = []);
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(t) {
    G.forEach(this.handlers, function(r) {
      r !== null && t(r);
    });
  }
}
const FS = {
  silentJSONParsing: !0,
  forcedJSONParsing: !0,
  clarifyTimeoutError: !1
}, kV = typeof URLSearchParams < "u" ? URLSearchParams : Sp, MV = typeof FormData < "u" ? FormData : null, FV = typeof Blob < "u" ? Blob : null, qV = {
  isBrowser: !0,
  classes: {
    URLSearchParams: kV,
    FormData: MV,
    Blob: FV
  },
  protocols: ["http", "https", "file", "blob", "url", "data"]
}, Ap = typeof window < "u" && typeof document < "u", Yf = typeof navigator == "object" && navigator || void 0, NV = Ap && (!Yf || ["ReactNative", "NativeScript", "NS"].indexOf(Yf.product) < 0), VV = typeof WorkerGlobalScope < "u" && // eslint-disable-next-line no-undef
self instanceof WorkerGlobalScope && typeof self.importScripts == "function", HV = Ap && window.location.href || "http://localhost", $V = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hasBrowserEnv: Ap,
  hasStandardBrowserEnv: NV,
  hasStandardBrowserWebWorkerEnv: VV,
  navigator: Yf,
  origin: HV
}, Symbol.toStringTag, { value: "Module" })), vn = {
  ...$V,
  ...qV
};
function WV(e, t) {
  return Id(e, new vn.classes.URLSearchParams(), Object.assign({
    visitor: function(n, r, a, s) {
      return vn.isNode && G.isBuffer(n) ? (this.append(r, n.toString("base64")), !1) : s.defaultVisitor.apply(this, arguments);
    }
  }, t));
}
function UV(e) {
  return G.matchAll(/\w+|\[(\w*)]/g, e).map((t) => t[0] === "[]" ? "" : t[1] || t[0]);
}
function jV(e) {
  const t = {}, n = Object.keys(e);
  let r;
  const a = n.length;
  let s;
  for (r = 0; r < a; r++)
    s = n[r], t[s] = e[s];
  return t;
}
function qS(e) {
  function t(n, r, a, s) {
    let o = n[s++];
    if (o === "__proto__") return !0;
    const u = Number.isFinite(+o), f = s >= n.length;
    return o = !o && G.isArray(a) ? a.length : o, f ? (G.hasOwnProp(a, o) ? a[o] = [a[o], r] : a[o] = r, !u) : ((!a[o] || !G.isObject(a[o])) && (a[o] = []), t(n, r, a[o], s) && G.isArray(a[o]) && (a[o] = jV(a[o])), !u);
  }
  if (G.isFormData(e) && G.isFunction(e.entries)) {
    const n = {};
    return G.forEachEntry(e, (r, a) => {
      t(UV(r), a, n, 0);
    }), n;
  }
  return null;
}
function GV(e, t, n) {
  if (G.isString(e))
    try {
      return (t || JSON.parse)(e), G.trim(e);
    } catch (r) {
      if (r.name !== "SyntaxError")
        throw r;
    }
  return (0, JSON.stringify)(e);
}
const so = {
  transitional: FS,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [function(t, n) {
    const r = n.getContentType() || "", a = r.indexOf("application/json") > -1, s = G.isObject(t);
    if (s && G.isHTMLForm(t) && (t = new FormData(t)), G.isFormData(t))
      return a ? JSON.stringify(qS(t)) : t;
    if (G.isArrayBuffer(t) || G.isBuffer(t) || G.isStream(t) || G.isFile(t) || G.isBlob(t) || G.isReadableStream(t))
      return t;
    if (G.isArrayBufferView(t))
      return t.buffer;
    if (G.isURLSearchParams(t))
      return n.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1), t.toString();
    let u;
    if (s) {
      if (r.indexOf("application/x-www-form-urlencoded") > -1)
        return WV(t, this.formSerializer).toString();
      if ((u = G.isFileList(t)) || r.indexOf("multipart/form-data") > -1) {
        const f = this.env && this.env.FormData;
        return Id(
          u ? { "files[]": t } : t,
          f && new f(),
          this.formSerializer
        );
      }
    }
    return s || a ? (n.setContentType("application/json", !1), GV(t)) : t;
  }],
  transformResponse: [function(t) {
    const n = this.transitional || so.transitional, r = n && n.forcedJSONParsing, a = this.responseType === "json";
    if (G.isResponse(t) || G.isReadableStream(t))
      return t;
    if (t && G.isString(t) && (r && !this.responseType || a)) {
      const o = !(n && n.silentJSONParsing) && a;
      try {
        return JSON.parse(t);
      } catch (u) {
        if (o)
          throw u.name === "SyntaxError" ? Ue.from(u, Ue.ERR_BAD_RESPONSE, this, null, this.response) : u;
      }
    }
    return t;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: vn.classes.FormData,
    Blob: vn.classes.Blob
  },
  validateStatus: function(t) {
    return t >= 200 && t < 300;
  },
  headers: {
    common: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": void 0
    }
  }
};
G.forEach(["delete", "get", "head", "post", "put", "patch"], (e) => {
  so.headers[e] = {};
});
const YV = G.toObjectSet([
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
]), zV = (e) => {
  const t = {};
  let n, r, a;
  return e && e.split(`
`).forEach(function(o) {
    a = o.indexOf(":"), n = o.substring(0, a).trim().toLowerCase(), r = o.substring(a + 1).trim(), !(!n || t[n] && YV[n]) && (n === "set-cookie" ? t[n] ? t[n].push(r) : t[n] = [r] : t[n] = t[n] ? t[n] + ", " + r : r);
  }), t;
}, hv = Symbol("internals");
function _l(e) {
  return e && String(e).trim().toLowerCase();
}
function vu(e) {
  return e === !1 || e == null ? e : G.isArray(e) ? e.map(vu) : String(e);
}
function KV(e) {
  const t = /* @__PURE__ */ Object.create(null), n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let r;
  for (; r = n.exec(e); )
    t[r[1]] = r[2];
  return t;
}
const XV = (e) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());
function df(e, t, n, r, a) {
  if (G.isFunction(r))
    return r.call(this, t, n);
  if (a && (t = n), !!G.isString(t)) {
    if (G.isString(r))
      return t.indexOf(r) !== -1;
    if (G.isRegExp(r))
      return r.test(t);
  }
}
function ZV(e) {
  return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (t, n, r) => n.toUpperCase() + r);
}
function JV(e, t) {
  const n = G.toCamelCase(" " + t);
  ["get", "set", "has"].forEach((r) => {
    Object.defineProperty(e, r + n, {
      value: function(a, s, o) {
        return this[r].call(this, t, a, s, o);
      },
      configurable: !0
    });
  });
}
class Fn {
  constructor(t) {
    t && this.set(t);
  }
  set(t, n, r) {
    const a = this;
    function s(u, f, _) {
      const m = _l(f);
      if (!m)
        throw new Error("header name must be a non-empty string");
      const b = G.findKey(a, m);
      (!b || a[b] === void 0 || _ === !0 || _ === void 0 && a[b] !== !1) && (a[b || f] = vu(u));
    }
    const o = (u, f) => G.forEach(u, (_, m) => s(_, m, f));
    if (G.isPlainObject(t) || t instanceof this.constructor)
      o(t, n);
    else if (G.isString(t) && (t = t.trim()) && !XV(t))
      o(zV(t), n);
    else if (G.isHeaders(t))
      for (const [u, f] of t.entries())
        s(f, u, r);
    else
      t != null && s(n, t, r);
    return this;
  }
  get(t, n) {
    if (t = _l(t), t) {
      const r = G.findKey(this, t);
      if (r) {
        const a = this[r];
        if (!n)
          return a;
        if (n === !0)
          return KV(a);
        if (G.isFunction(n))
          return n.call(this, a, r);
        if (G.isRegExp(n))
          return n.exec(a);
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(t, n) {
    if (t = _l(t), t) {
      const r = G.findKey(this, t);
      return !!(r && this[r] !== void 0 && (!n || df(this, this[r], r, n)));
    }
    return !1;
  }
  delete(t, n) {
    const r = this;
    let a = !1;
    function s(o) {
      if (o = _l(o), o) {
        const u = G.findKey(r, o);
        u && (!n || df(r, r[u], u, n)) && (delete r[u], a = !0);
      }
    }
    return G.isArray(t) ? t.forEach(s) : s(t), a;
  }
  clear(t) {
    const n = Object.keys(this);
    let r = n.length, a = !1;
    for (; r--; ) {
      const s = n[r];
      (!t || df(this, this[s], s, t, !0)) && (delete this[s], a = !0);
    }
    return a;
  }
  normalize(t) {
    const n = this, r = {};
    return G.forEach(this, (a, s) => {
      const o = G.findKey(r, s);
      if (o) {
        n[o] = vu(a), delete n[s];
        return;
      }
      const u = t ? ZV(s) : String(s).trim();
      u !== s && delete n[s], n[u] = vu(a), r[u] = !0;
    }), this;
  }
  concat(...t) {
    return this.constructor.concat(this, ...t);
  }
  toJSON(t) {
    const n = /* @__PURE__ */ Object.create(null);
    return G.forEach(this, (r, a) => {
      r != null && r !== !1 && (n[a] = t && G.isArray(r) ? r.join(", ") : r);
    }), n;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([t, n]) => t + ": " + n).join(`
`);
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(t) {
    return t instanceof this ? t : new this(t);
  }
  static concat(t, ...n) {
    const r = new this(t);
    return n.forEach((a) => r.set(a)), r;
  }
  static accessor(t) {
    const r = (this[hv] = this[hv] = {
      accessors: {}
    }).accessors, a = this.prototype;
    function s(o) {
      const u = _l(o);
      r[u] || (JV(a, o), r[u] = !0);
    }
    return G.isArray(t) ? t.forEach(s) : s(t), this;
  }
}
Fn.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
G.reduceDescriptors(Fn.prototype, ({ value: e }, t) => {
  let n = t[0].toUpperCase() + t.slice(1);
  return {
    get: () => e,
    set(r) {
      this[n] = r;
    }
  };
});
G.freezeMethods(Fn);
function cf(e, t) {
  const n = this || so, r = t || n, a = Fn.from(r.headers);
  let s = r.data;
  return G.forEach(e, function(u) {
    s = u.call(n, s, a.normalize(), t ? t.status : void 0);
  }), a.normalize(), s;
}
function NS(e) {
  return !!(e && e.__CANCEL__);
}
function Ns(e, t, n) {
  Ue.call(this, e ?? "canceled", Ue.ERR_CANCELED, t, n), this.name = "CanceledError";
}
G.inherits(Ns, Ue, {
  __CANCEL__: !0
});
function VS(e, t, n) {
  const r = n.config.validateStatus;
  !n.status || !r || r(n.status) ? e(n) : t(new Ue(
    "Request failed with status code " + n.status,
    [Ue.ERR_BAD_REQUEST, Ue.ERR_BAD_RESPONSE][Math.floor(n.status / 100) - 4],
    n.config,
    n.request,
    n
  ));
}
function QV(e) {
  const t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
  return t && t[1] || "";
}
function eH(e, t) {
  e = e || 10;
  const n = new Array(e), r = new Array(e);
  let a = 0, s = 0, o;
  return t = t !== void 0 ? t : 1e3, function(f) {
    const _ = Date.now(), m = r[s];
    o || (o = _), n[a] = f, r[a] = _;
    let b = s, v = 0;
    for (; b !== a; )
      v += n[b++], b = b % e;
    if (a = (a + 1) % e, a === s && (s = (s + 1) % e), _ - o < t)
      return;
    const g = m && _ - m;
    return g ? Math.round(v * 1e3 / g) : void 0;
  };
}
function tH(e, t) {
  let n = 0, r = 1e3 / t, a, s;
  const o = (_, m = Date.now()) => {
    n = m, a = null, s && (clearTimeout(s), s = null), e.apply(null, _);
  };
  return [(..._) => {
    const m = Date.now(), b = m - n;
    b >= r ? o(_, m) : (a = _, s || (s = setTimeout(() => {
      s = null, o(a);
    }, r - b)));
  }, () => a && o(a)];
}
const Vu = (e, t, n = 3) => {
  let r = 0;
  const a = eH(50, 250);
  return tH((s) => {
    const o = s.loaded, u = s.lengthComputable ? s.total : void 0, f = o - r, _ = a(f), m = o <= u;
    r = o;
    const b = {
      loaded: o,
      total: u,
      progress: u ? o / u : void 0,
      bytes: f,
      rate: _ || void 0,
      estimated: _ && u && m ? (u - o) / _ : void 0,
      event: s,
      lengthComputable: u != null,
      [t ? "download" : "upload"]: !0
    };
    e(b);
  }, n);
}, pv = (e, t) => {
  const n = e != null;
  return [(r) => t[0]({
    lengthComputable: n,
    total: e,
    loaded: r
  }), t[1]];
}, _v = (e) => (...t) => G.asap(() => e(...t)), nH = vn.hasStandardBrowserEnv ? /* @__PURE__ */ ((e, t) => (n) => (n = new URL(n, vn.origin), e.protocol === n.protocol && e.host === n.host && (t || e.port === n.port)))(
  new URL(vn.origin),
  vn.navigator && /(msie|trident)/i.test(vn.navigator.userAgent)
) : () => !0, rH = vn.hasStandardBrowserEnv ? (
  // Standard browser envs support document.cookie
  {
    write(e, t, n, r, a, s) {
      const o = [e + "=" + encodeURIComponent(t)];
      G.isNumber(n) && o.push("expires=" + new Date(n).toGMTString()), G.isString(r) && o.push("path=" + r), G.isString(a) && o.push("domain=" + a), s === !0 && o.push("secure"), document.cookie = o.join("; ");
    },
    read(e) {
      const t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
      return t ? decodeURIComponent(t[3]) : null;
    },
    remove(e) {
      this.write(e, "", Date.now() - 864e5);
    }
  }
) : (
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {
    },
    read() {
      return null;
    },
    remove() {
    }
  }
);
function aH(e) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e);
}
function iH(e, t) {
  return t ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "") : e;
}
function HS(e, t) {
  return e && !aH(t) ? iH(e, t) : t;
}
const mv = (e) => e instanceof Fn ? { ...e } : e;
function Vi(e, t) {
  t = t || {};
  const n = {};
  function r(_, m, b, v) {
    return G.isPlainObject(_) && G.isPlainObject(m) ? G.merge.call({ caseless: v }, _, m) : G.isPlainObject(m) ? G.merge({}, m) : G.isArray(m) ? m.slice() : m;
  }
  function a(_, m, b, v) {
    if (G.isUndefined(m)) {
      if (!G.isUndefined(_))
        return r(void 0, _, b, v);
    } else return r(_, m, b, v);
  }
  function s(_, m) {
    if (!G.isUndefined(m))
      return r(void 0, m);
  }
  function o(_, m) {
    if (G.isUndefined(m)) {
      if (!G.isUndefined(_))
        return r(void 0, _);
    } else return r(void 0, m);
  }
  function u(_, m, b) {
    if (b in t)
      return r(_, m);
    if (b in e)
      return r(void 0, _);
  }
  const f = {
    url: s,
    method: s,
    data: s,
    baseURL: o,
    transformRequest: o,
    transformResponse: o,
    paramsSerializer: o,
    timeout: o,
    timeoutMessage: o,
    withCredentials: o,
    withXSRFToken: o,
    adapter: o,
    responseType: o,
    xsrfCookieName: o,
    xsrfHeaderName: o,
    onUploadProgress: o,
    onDownloadProgress: o,
    decompress: o,
    maxContentLength: o,
    maxBodyLength: o,
    beforeRedirect: o,
    transport: o,
    httpAgent: o,
    httpsAgent: o,
    cancelToken: o,
    socketPath: o,
    responseEncoding: o,
    validateStatus: u,
    headers: (_, m, b) => a(mv(_), mv(m), b, !0)
  };
  return G.forEach(Object.keys(Object.assign({}, e, t)), function(m) {
    const b = f[m] || a, v = b(e[m], t[m], m);
    G.isUndefined(v) && b !== u || (n[m] = v);
  }), n;
}
const $S = (e) => {
  const t = Vi({}, e);
  let { data: n, withXSRFToken: r, xsrfHeaderName: a, xsrfCookieName: s, headers: o, auth: u } = t;
  t.headers = o = Fn.from(o), t.url = MS(HS(t.baseURL, t.url), e.params, e.paramsSerializer), u && o.set(
    "Authorization",
    "Basic " + btoa((u.username || "") + ":" + (u.password ? unescape(encodeURIComponent(u.password)) : ""))
  );
  let f;
  if (G.isFormData(n)) {
    if (vn.hasStandardBrowserEnv || vn.hasStandardBrowserWebWorkerEnv)
      o.setContentType(void 0);
    else if ((f = o.getContentType()) !== !1) {
      const [_, ...m] = f ? f.split(";").map((b) => b.trim()).filter(Boolean) : [];
      o.setContentType([_ || "multipart/form-data", ...m].join("; "));
    }
  }
  if (vn.hasStandardBrowserEnv && (r && G.isFunction(r) && (r = r(t)), r || r !== !1 && nH(t.url))) {
    const _ = a && s && rH.read(s);
    _ && o.set(a, _);
  }
  return t;
}, sH = typeof XMLHttpRequest < "u", lH = sH && function(e) {
  return new Promise(function(n, r) {
    const a = $S(e);
    let s = a.data;
    const o = Fn.from(a.headers).normalize();
    let { responseType: u, onUploadProgress: f, onDownloadProgress: _ } = a, m, b, v, g, S;
    function A() {
      g && g(), S && S(), a.cancelToken && a.cancelToken.unsubscribe(m), a.signal && a.signal.removeEventListener("abort", m);
    }
    let w = new XMLHttpRequest();
    w.open(a.method.toUpperCase(), a.url, !0), w.timeout = a.timeout;
    function T() {
      if (!w)
        return;
      const C = Fn.from(
        "getAllResponseHeaders" in w && w.getAllResponseHeaders()
      ), P = {
        data: !u || u === "text" || u === "json" ? w.responseText : w.response,
        status: w.status,
        statusText: w.statusText,
        headers: C,
        config: e,
        request: w
      };
      VS(function(k) {
        n(k), A();
      }, function(k) {
        r(k), A();
      }, P), w = null;
    }
    "onloadend" in w ? w.onloadend = T : w.onreadystatechange = function() {
      !w || w.readyState !== 4 || w.status === 0 && !(w.responseURL && w.responseURL.indexOf("file:") === 0) || setTimeout(T);
    }, w.onabort = function() {
      w && (r(new Ue("Request aborted", Ue.ECONNABORTED, e, w)), w = null);
    }, w.onerror = function() {
      r(new Ue("Network Error", Ue.ERR_NETWORK, e, w)), w = null;
    }, w.ontimeout = function() {
      let E = a.timeout ? "timeout of " + a.timeout + "ms exceeded" : "timeout exceeded";
      const P = a.transitional || FS;
      a.timeoutErrorMessage && (E = a.timeoutErrorMessage), r(new Ue(
        E,
        P.clarifyTimeoutError ? Ue.ETIMEDOUT : Ue.ECONNABORTED,
        e,
        w
      )), w = null;
    }, s === void 0 && o.setContentType(null), "setRequestHeader" in w && G.forEach(o.toJSON(), function(E, P) {
      w.setRequestHeader(P, E);
    }), G.isUndefined(a.withCredentials) || (w.withCredentials = !!a.withCredentials), u && u !== "json" && (w.responseType = a.responseType), _ && ([v, S] = Vu(_, !0), w.addEventListener("progress", v)), f && w.upload && ([b, g] = Vu(f), w.upload.addEventListener("progress", b), w.upload.addEventListener("loadend", g)), (a.cancelToken || a.signal) && (m = (C) => {
      w && (r(!C || C.type ? new Ns(null, e, w) : C), w.abort(), w = null);
    }, a.cancelToken && a.cancelToken.subscribe(m), a.signal && (a.signal.aborted ? m() : a.signal.addEventListener("abort", m)));
    const I = QV(a.url);
    if (I && vn.protocols.indexOf(I) === -1) {
      r(new Ue("Unsupported protocol " + I + ":", Ue.ERR_BAD_REQUEST, e));
      return;
    }
    w.send(s || null);
  });
}, oH = (e, t) => {
  const { length: n } = e = e ? e.filter(Boolean) : [];
  if (t || n) {
    let r = new AbortController(), a;
    const s = function(_) {
      if (!a) {
        a = !0, u();
        const m = _ instanceof Error ? _ : this.reason;
        r.abort(m instanceof Ue ? m : new Ns(m instanceof Error ? m.message : m));
      }
    };
    let o = t && setTimeout(() => {
      o = null, s(new Ue(`timeout ${t} of ms exceeded`, Ue.ETIMEDOUT));
    }, t);
    const u = () => {
      e && (o && clearTimeout(o), o = null, e.forEach((_) => {
        _.unsubscribe ? _.unsubscribe(s) : _.removeEventListener("abort", s);
      }), e = null);
    };
    e.forEach((_) => _.addEventListener("abort", s));
    const { signal: f } = r;
    return f.unsubscribe = () => G.asap(u), f;
  }
}, uH = function* (e, t) {
  let n = e.byteLength;
  if (n < t) {
    yield e;
    return;
  }
  let r = 0, a;
  for (; r < n; )
    a = r + t, yield e.slice(r, a), r = a;
}, dH = async function* (e, t) {
  for await (const n of cH(e))
    yield* uH(n, t);
}, cH = async function* (e) {
  if (e[Symbol.asyncIterator]) {
    yield* e;
    return;
  }
  const t = e.getReader();
  try {
    for (; ; ) {
      const { done: n, value: r } = await t.read();
      if (n)
        break;
      yield r;
    }
  } finally {
    await t.cancel();
  }
}, bv = (e, t, n, r) => {
  const a = dH(e, t);
  let s = 0, o, u = (f) => {
    o || (o = !0, r && r(f));
  };
  return new ReadableStream({
    async pull(f) {
      try {
        const { done: _, value: m } = await a.next();
        if (_) {
          u(), f.close();
          return;
        }
        let b = m.byteLength;
        if (n) {
          let v = s += b;
          n(v);
        }
        f.enqueue(new Uint8Array(m));
      } catch (_) {
        throw u(_), _;
      }
    },
    cancel(f) {
      return u(f), a.return();
    }
  }, {
    highWaterMark: 2
  });
}, Ld = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", WS = Ld && typeof ReadableStream == "function", fH = Ld && (typeof TextEncoder == "function" ? /* @__PURE__ */ ((e) => (t) => e.encode(t))(new TextEncoder()) : async (e) => new Uint8Array(await new Response(e).arrayBuffer())), US = (e, ...t) => {
  try {
    return !!e(...t);
  } catch {
    return !1;
  }
}, hH = WS && US(() => {
  let e = !1;
  const t = new Request(vn.origin, {
    body: new ReadableStream(),
    method: "POST",
    get duplex() {
      return e = !0, "half";
    }
  }).headers.has("Content-Type");
  return e && !t;
}), vv = 64 * 1024, zf = WS && US(() => G.isReadableStream(new Response("").body)), Hu = {
  stream: zf && ((e) => e.body)
};
Ld && ((e) => {
  ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((t) => {
    !Hu[t] && (Hu[t] = G.isFunction(e[t]) ? (n) => n[t]() : (n, r) => {
      throw new Ue(`Response type '${t}' is not supported`, Ue.ERR_NOT_SUPPORT, r);
    });
  });
})(new Response());
const pH = async (e) => {
  if (e == null)
    return 0;
  if (G.isBlob(e))
    return e.size;
  if (G.isSpecCompliantForm(e))
    return (await new Request(vn.origin, {
      method: "POST",
      body: e
    }).arrayBuffer()).byteLength;
  if (G.isArrayBufferView(e) || G.isArrayBuffer(e))
    return e.byteLength;
  if (G.isURLSearchParams(e) && (e = e + ""), G.isString(e))
    return (await fH(e)).byteLength;
}, _H = async (e, t) => {
  const n = G.toFiniteNumber(e.getContentLength());
  return n ?? pH(t);
}, mH = Ld && (async (e) => {
  let {
    url: t,
    method: n,
    data: r,
    signal: a,
    cancelToken: s,
    timeout: o,
    onDownloadProgress: u,
    onUploadProgress: f,
    responseType: _,
    headers: m,
    withCredentials: b = "same-origin",
    fetchOptions: v
  } = $S(e);
  _ = _ ? (_ + "").toLowerCase() : "text";
  let g = oH([a, s && s.toAbortSignal()], o), S;
  const A = g && g.unsubscribe && (() => {
    g.unsubscribe();
  });
  let w;
  try {
    if (f && hH && n !== "get" && n !== "head" && (w = await _H(m, r)) !== 0) {
      let P = new Request(t, {
        method: "POST",
        body: r,
        duplex: "half"
      }), M;
      if (G.isFormData(r) && (M = P.headers.get("content-type")) && m.setContentType(M), P.body) {
        const [k, F] = pv(
          w,
          Vu(_v(f))
        );
        r = bv(P.body, vv, k, F);
      }
    }
    G.isString(b) || (b = b ? "include" : "omit");
    const T = "credentials" in Request.prototype;
    S = new Request(t, {
      ...v,
      signal: g,
      method: n.toUpperCase(),
      headers: m.normalize().toJSON(),
      body: r,
      duplex: "half",
      credentials: T ? b : void 0
    });
    let I = await fetch(S);
    const C = zf && (_ === "stream" || _ === "response");
    if (zf && (u || C && A)) {
      const P = {};
      ["status", "statusText", "headers"].forEach((D) => {
        P[D] = I[D];
      });
      const M = G.toFiniteNumber(I.headers.get("content-length")), [k, F] = u && pv(
        M,
        Vu(_v(u), !0)
      ) || [];
      I = new Response(
        bv(I.body, vv, k, () => {
          F && F(), A && A();
        }),
        P
      );
    }
    _ = _ || "text";
    let E = await Hu[G.findKey(Hu, _) || "text"](I, e);
    return !C && A && A(), await new Promise((P, M) => {
      VS(P, M, {
        data: E,
        headers: Fn.from(I.headers),
        status: I.status,
        statusText: I.statusText,
        config: e,
        request: S
      });
    });
  } catch (T) {
    throw A && A(), T && T.name === "TypeError" && /fetch/i.test(T.message) ? Object.assign(
      new Ue("Network Error", Ue.ERR_NETWORK, e, S),
      {
        cause: T.cause || T
      }
    ) : Ue.from(T, T && T.code, e, S);
  }
}), Kf = {
  http: DV,
  xhr: lH,
  fetch: mH
};
G.forEach(Kf, (e, t) => {
  if (e) {
    try {
      Object.defineProperty(e, "name", { value: t });
    } catch {
    }
    Object.defineProperty(e, "adapterName", { value: t });
  }
});
const yv = (e) => `- ${e}`, bH = (e) => G.isFunction(e) || e === null || e === !1, jS = {
  getAdapter: (e) => {
    e = G.isArray(e) ? e : [e];
    const { length: t } = e;
    let n, r;
    const a = {};
    for (let s = 0; s < t; s++) {
      n = e[s];
      let o;
      if (r = n, !bH(n) && (r = Kf[(o = String(n)).toLowerCase()], r === void 0))
        throw new Ue(`Unknown adapter '${o}'`);
      if (r)
        break;
      a[o || "#" + s] = r;
    }
    if (!r) {
      const s = Object.entries(a).map(
        ([u, f]) => `adapter ${u} ` + (f === !1 ? "is not supported by the environment" : "is not available in the build")
      );
      let o = t ? s.length > 1 ? `since :
` + s.map(yv).join(`
`) : " " + yv(s[0]) : "as no adapter specified";
      throw new Ue(
        "There is no suitable adapter to dispatch the request " + o,
        "ERR_NOT_SUPPORT"
      );
    }
    return r;
  },
  adapters: Kf
};
function ff(e) {
  if (e.cancelToken && e.cancelToken.throwIfRequested(), e.signal && e.signal.aborted)
    throw new Ns(null, e);
}
function gv(e) {
  return ff(e), e.headers = Fn.from(e.headers), e.data = cf.call(
    e,
    e.transformRequest
  ), ["post", "put", "patch"].indexOf(e.method) !== -1 && e.headers.setContentType("application/x-www-form-urlencoded", !1), jS.getAdapter(e.adapter || so.adapter)(e).then(function(r) {
    return ff(e), r.data = cf.call(
      e,
      e.transformResponse,
      r
    ), r.headers = Fn.from(r.headers), r;
  }, function(r) {
    return NS(r) || (ff(e), r && r.response && (r.response.data = cf.call(
      e,
      e.transformResponse,
      r.response
    ), r.response.headers = Fn.from(r.response.headers))), Promise.reject(r);
  });
}
const GS = "1.7.9", Ed = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((e, t) => {
  Ed[e] = function(r) {
    return typeof r === e || "a" + (t < 1 ? "n " : " ") + e;
  };
});
const Sv = {};
Ed.transitional = function(t, n, r) {
  function a(s, o) {
    return "[Axios v" + GS + "] Transitional option '" + s + "'" + o + (r ? ". " + r : "");
  }
  return (s, o, u) => {
    if (t === !1)
      throw new Ue(
        a(o, " has been removed" + (n ? " in " + n : "")),
        Ue.ERR_DEPRECATED
      );
    return n && !Sv[o] && (Sv[o] = !0, console.warn(
      a(
        o,
        " has been deprecated since v" + n + " and will be removed in the near future"
      )
    )), t ? t(s, o, u) : !0;
  };
};
Ed.spelling = function(t) {
  return (n, r) => (console.warn(`${r} is likely a misspelling of ${t}`), !0);
};
function vH(e, t, n) {
  if (typeof e != "object")
    throw new Ue("options must be an object", Ue.ERR_BAD_OPTION_VALUE);
  const r = Object.keys(e);
  let a = r.length;
  for (; a-- > 0; ) {
    const s = r[a], o = t[s];
    if (o) {
      const u = e[s], f = u === void 0 || o(u, s, e);
      if (f !== !0)
        throw new Ue("option " + s + " must be " + f, Ue.ERR_BAD_OPTION_VALUE);
      continue;
    }
    if (n !== !0)
      throw new Ue("Unknown option " + s, Ue.ERR_BAD_OPTION);
  }
}
const yu = {
  assertOptions: vH,
  validators: Ed
}, na = yu.validators;
class Mi {
  constructor(t) {
    this.defaults = t, this.interceptors = {
      request: new fv(),
      response: new fv()
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(t, n) {
    try {
      return await this._request(t, n);
    } catch (r) {
      if (r instanceof Error) {
        let a = {};
        Error.captureStackTrace ? Error.captureStackTrace(a) : a = new Error();
        const s = a.stack ? a.stack.replace(/^.+\n/, "") : "";
        try {
          r.stack ? s && !String(r.stack).endsWith(s.replace(/^.+\n.+\n/, "")) && (r.stack += `
` + s) : r.stack = s;
        } catch {
        }
      }
      throw r;
    }
  }
  _request(t, n) {
    typeof t == "string" ? (n = n || {}, n.url = t) : n = t || {}, n = Vi(this.defaults, n);
    const { transitional: r, paramsSerializer: a, headers: s } = n;
    r !== void 0 && yu.assertOptions(r, {
      silentJSONParsing: na.transitional(na.boolean),
      forcedJSONParsing: na.transitional(na.boolean),
      clarifyTimeoutError: na.transitional(na.boolean)
    }, !1), a != null && (G.isFunction(a) ? n.paramsSerializer = {
      serialize: a
    } : yu.assertOptions(a, {
      encode: na.function,
      serialize: na.function
    }, !0)), yu.assertOptions(n, {
      baseUrl: na.spelling("baseURL"),
      withXsrfToken: na.spelling("withXSRFToken")
    }, !0), n.method = (n.method || this.defaults.method || "get").toLowerCase();
    let o = s && G.merge(
      s.common,
      s[n.method]
    );
    s && G.forEach(
      ["delete", "get", "head", "post", "put", "patch", "common"],
      (S) => {
        delete s[S];
      }
    ), n.headers = Fn.concat(o, s);
    const u = [];
    let f = !0;
    this.interceptors.request.forEach(function(A) {
      typeof A.runWhen == "function" && A.runWhen(n) === !1 || (f = f && A.synchronous, u.unshift(A.fulfilled, A.rejected));
    });
    const _ = [];
    this.interceptors.response.forEach(function(A) {
      _.push(A.fulfilled, A.rejected);
    });
    let m, b = 0, v;
    if (!f) {
      const S = [gv.bind(this), void 0];
      for (S.unshift.apply(S, u), S.push.apply(S, _), v = S.length, m = Promise.resolve(n); b < v; )
        m = m.then(S[b++], S[b++]);
      return m;
    }
    v = u.length;
    let g = n;
    for (b = 0; b < v; ) {
      const S = u[b++], A = u[b++];
      try {
        g = S(g);
      } catch (w) {
        A.call(this, w);
        break;
      }
    }
    try {
      m = gv.call(this, g);
    } catch (S) {
      return Promise.reject(S);
    }
    for (b = 0, v = _.length; b < v; )
      m = m.then(_[b++], _[b++]);
    return m;
  }
  getUri(t) {
    t = Vi(this.defaults, t);
    const n = HS(t.baseURL, t.url);
    return MS(n, t.params, t.paramsSerializer);
  }
}
G.forEach(["delete", "get", "head", "options"], function(t) {
  Mi.prototype[t] = function(n, r) {
    return this.request(Vi(r || {}, {
      method: t,
      url: n,
      data: (r || {}).data
    }));
  };
});
G.forEach(["post", "put", "patch"], function(t) {
  function n(r) {
    return function(s, o, u) {
      return this.request(Vi(u || {}, {
        method: t,
        headers: r ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url: s,
        data: o
      }));
    };
  }
  Mi.prototype[t] = n(), Mi.prototype[t + "Form"] = n(!0);
});
class wp {
  constructor(t) {
    if (typeof t != "function")
      throw new TypeError("executor must be a function.");
    let n;
    this.promise = new Promise(function(s) {
      n = s;
    });
    const r = this;
    this.promise.then((a) => {
      if (!r._listeners) return;
      let s = r._listeners.length;
      for (; s-- > 0; )
        r._listeners[s](a);
      r._listeners = null;
    }), this.promise.then = (a) => {
      let s;
      const o = new Promise((u) => {
        r.subscribe(u), s = u;
      }).then(a);
      return o.cancel = function() {
        r.unsubscribe(s);
      }, o;
    }, t(function(s, o, u) {
      r.reason || (r.reason = new Ns(s, o, u), n(r.reason));
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason)
      throw this.reason;
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(t) {
    if (this.reason) {
      t(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(t) : this._listeners = [t];
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(t) {
    if (!this._listeners)
      return;
    const n = this._listeners.indexOf(t);
    n !== -1 && this._listeners.splice(n, 1);
  }
  toAbortSignal() {
    const t = new AbortController(), n = (r) => {
      t.abort(r);
    };
    return this.subscribe(n), t.signal.unsubscribe = () => this.unsubscribe(n), t.signal;
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let t;
    return {
      token: new wp(function(a) {
        t = a;
      }),
      cancel: t
    };
  }
}
function yH(e) {
  return function(n) {
    return e.apply(null, n);
  };
}
function gH(e) {
  return G.isObject(e) && e.isAxiosError === !0;
}
const Xf = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(Xf).forEach(([e, t]) => {
  Xf[t] = e;
});
function YS(e) {
  const t = new Mi(e), n = TS(Mi.prototype.request, t);
  return G.extend(n, Mi.prototype, t, { allOwnKeys: !0 }), G.extend(n, t, null, { allOwnKeys: !0 }), n.create = function(a) {
    return YS(Vi(e, a));
  }, n;
}
const Yt = YS(so);
Yt.Axios = Mi;
Yt.CanceledError = Ns;
Yt.CancelToken = wp;
Yt.isCancel = NS;
Yt.VERSION = GS;
Yt.toFormData = Id;
Yt.AxiosError = Ue;
Yt.Cancel = Yt.CanceledError;
Yt.all = function(t) {
  return Promise.all(t);
};
Yt.spread = yH;
Yt.isAxiosError = gH;
Yt.mergeConfig = Vi;
Yt.AxiosHeaders = Fn;
Yt.formToJSON = (e) => qS(G.isHTMLForm(e) ? new FormData(e) : e);
Yt.getAdapter = jS.getAdapter;
Yt.HttpStatusCode = Xf;
Yt.default = Yt;
const zS = R("/api/"), Zf = R(Yt.create()), mr = R({}), gu = R({}), KS = R({}), aa = {}, Vr = {}, XS = R({
  setUrlForArray: qH
});
function SH({ axiosCreateOptions: e = {} }) {
  Zf.value = Yt.create(e);
}
function AH({ baseUrl: e = "" }) {
  zS.value = e;
}
function wH({ errorCallbacks: e = {} }) {
  gu.value = e;
}
function TH({ headerParams: e = {} } = {}) {
  KS.value = e;
}
function xH({
  all: e = !1,
  abortGroup: t,
  excludeAbortGroup: n
}) {
  const r = HH({ excludeAbortGroup: n });
  if (e)
    Y(aa, (a, s) => {
      r[s] || (a.abort(), delete aa[s], Vr[t] && delete Vr[t]);
    });
  else if (t) {
    let a = [];
    yt(t) ? a.push(t) : Ae(t) && (a = t), Y(a, (s) => {
      r[s] || aa[s] && (aa[s].abort(), delete aa[s], Vr[t] && delete Vr[t]);
    });
  }
}
function CH() {
  mr.value = {};
}
function IH({ apiSaveId: e }) {
  e in mr.value && delete mr.value[e];
}
function LH() {
  return {
    abortHttp: xH,
    clearAllApiSaved: CH,
    clearApiSaved: IH,
    deleteHttp: kH,
    getHttp: EH,
    getListHttp: OH,
    getOptionsHttp: DH,
    patchHttp: BH,
    postHttp: PH,
    putHttp: RH
  };
}
function EH({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: a,
  responseType: s,
  apiSaveId: o,
  keyId: u,
  fullResponse: f,
  showError: _,
  ignoreErrorHandler: m = !1,
  abortable: b = !0,
  abortGroup: v = ""
}) {
  return Gi({
    methodHttp: "get",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: a,
    responseType: s,
    apiSaveId: o,
    keyId: u,
    fullResponse: f,
    showError: _,
    ignoreErrorHandler: m,
    abortable: b,
    abortGroup: v
  });
}
function OH({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: a,
  responseType: s,
  apiSaveId: o,
  keyId: u,
  fullResponse: f,
  showError: _,
  ignoreErrorHandler: m = !1,
  abortable: b = !0,
  abortGroup: v = ""
}) {
  return Gi({
    methodHttp: "get",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: a,
    responseType: s,
    apiSaveId: o,
    keyId: u,
    fullResponse: f,
    showError: _,
    ignoreErrorHandler: m,
    abortable: b,
    abortGroup: v,
    expectedList: !0
  });
}
function DH({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: a,
  responseType: s,
  keyId: o,
  fullResponse: u,
  showError: f,
  ignoreErrorHandler: _ = !1,
  abortable: m = !0,
  abortGroup: b = ""
}) {
  return Gi({
    methodHttp: "options",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: a,
    responseType: s,
    keyId: o,
    fullResponse: u,
    showError: f,
    abortable: m,
    abortGroup: b,
    ignoreErrorHandler: _
  });
}
function PH({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: a,
  responseType: s,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: f = !1,
  abortable: _ = !0,
  abortGroup: m = ""
}) {
  return Gi({
    methodHttp: "post",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: a,
    responseType: s,
    fullResponse: o,
    showError: u,
    abortable: _,
    abortGroup: m,
    ignoreErrorHandler: f
  });
}
function RH({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: a,
  responseType: s,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: f = !1,
  abortable: _ = !0,
  abortGroup: m = ""
}) {
  return Gi({
    methodHttp: "put",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: a,
    responseType: s,
    fullResponse: o,
    showError: u,
    abortable: _,
    abortGroup: m,
    ignoreErrorHandler: f
  });
}
function BH({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: a,
  responseType: s,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: f = !1,
  abortable: _ = !0,
  abortGroup: m = ""
}) {
  return Gi({
    methodHttp: "patch",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: a,
    responseType: s,
    fullResponse: o,
    showError: u,
    abortable: _,
    abortGroup: m,
    ignoreErrorHandler: f
  });
}
function kH({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: a,
  responseType: s,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: f = !1,
  abortable: _ = !0,
  abortGroup: m = ""
}) {
  return Gi({
    methodHttp: "delete",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: a,
    responseType: s,
    fullResponse: o,
    showError: u,
    abortable: _,
    abortGroup: m,
    ignoreErrorHandler: f
  });
}
function Gi({
  methodHttp: e,
  url: t,
  urlBase: n,
  urlParams: r,
  data: a,
  headerParams: s = {},
  responseType: o = "json",
  apiSaveId: u,
  keyId: f,
  fullResponse: _,
  showError: m = !1,
  ignoreErrorHandler: b = !1,
  abortable: v = !0,
  abortGroup: g = "",
  expectedList: S
}) {
  let A;
  if (u && (A = mr.value[u], A && A.loading))
    return A.promise;
  const w = new Promise((T, I) => {
    if (A && !A.loading) {
      if (f) {
        if (A.keyData)
          return T(A.keyData);
        const k = Av({ data: A.data, keyId: f });
        return mr.value[u].keyData = k, T(k);
      }
      return T(A.data);
    }
    const C = FH({ url: t, params: r });
    let E = `${ae(n) ? zS.value : n}${C}`;
    E = E.replace(/\/\//g, "/");
    const P = {
      ...KS.value,
      ...s
    }, M = VH({ abortGroup: g, abortable: v });
    $H({ abortGroup: g, abortable: v }), Zf.value({
      method: e,
      url: E,
      data: a,
      headers: P,
      responseType: o,
      signal: M
    }).then(
      (k) => {
        if (_)
          return T(k);
        const F = NH({ expectedList: S, response: k }), D = Av({ data: F, keyId: f });
        return u && (mr.value[u].data = F, mr.value[u].keyData = D, mr.value[u].loading = !1), T(f ? D : F);
      },
      (k) => {
        if ((k == null ? void 0 : k.code) === "ERR_CANCELED")
          return I(k);
        if (b || MH({ error: k.response, showError: m, client: Zf, reject: I, resolve: T }))
          return I(k.response);
      }
    ).finally(
      () => {
        WH({ abortGroup: g, abortable: v });
      }
    );
  });
  return A || (mr.value[u] = mr.value[u] || {}, mr.value[u].loading = !0, mr.value[u].promise = w), w;
}
function MH({ error: e, showError: t, client: n, resolve: r, reject: a }) {
  return e ? (() => {
    const o = gu.value[e.status];
    return We(o) ? o({ error: e, showError: t, client: n, resolve: r, reject: a }) : We(gu.value.all) ? gu.value.all({ error: e, showError: t, client: n, resolve: r, reject: a }) : !0;
  })() : !0;
}
function FH({ url: e, params: t }) {
  const n = e || "";
  let r = "";
  Y(t, (s, o) => {
    Ae(s) ? r = XS.value.setUrlForArray({ id: o, array: s, url: r }) : dt(s) ? Y(s, (u, f) => {
      u && (r && (r += "&"), r += `${f}=${u}`);
    }) : ae(s) || (r && (r += "&"), r += `${o}=${s}`);
  });
  const a = r && n ? n.indexOf("?") === -1 ? "?" : "&" : "";
  return `${n}${a}${r}`;
}
function qH({ array: e, url: t, id: n }) {
  if (!e.length)
    return t;
  let r = t || "";
  return n === "fields" || n === "ordering" ? (r && (r += "&"), r += `${n}=`, r += e.join(",")) : Y(e, (a) => {
    r && (r += "&"), r += `${n}=${a}`;
  }), r;
}
function Av({ data: e, keyId: t }) {
  if (t)
    return ui(e, t);
}
function NH({ expectedList: e, response: t }) {
  return e ? Ae(t.data) ? t.data : t.data.results ? t.data.results : [] : t.data;
}
function VH({ abortGroup: e = "_global", abortable: t } = {}) {
  if (t)
    return aa[e] = aa[e] || new AbortController(), aa[e].signal;
}
function HH({ excludeAbortGroup: e }) {
  const t = {};
  return e && (yt(e) ? t[e] = !0 : Ae(e) && Y(e, (n) => {
    t[n] = !0;
  })), t;
}
function $H({ abortGroup: e, abortable: t }) {
  !t || !e || (Vr[e] ? Vr[e]++ : Vr[e] = 1);
}
function WH({ abortGroup: e, abortable: t }) {
  !t || !e || (Vr[e] && Vr[e]--, Vr[e] === 0 && aa[e] && (delete Vr[e], delete aa[e]));
}
function Tp(e, {
  changeModel: t = () => {
  },
  dataExtraLocal: n = d(() => []),
  dataFromServer: r = R([])
} = {}) {
  const a = p(e, "apiSaveId"), s = p(e, "isDataSimpleArray"), o = p(e, "keyId"), u = p(e, "keyLabel"), f = p(e, "searchApi"), _ = p(e, "modelValue"), m = p(e, "searchApiKey"), b = p(e, "type"), v = p(e, "url"), g = p(e, "urlParams"), S = R(!1), A = R(void 0), {
    getListHttp: w
  } = LH(), T = d(() => !!(f.value && m.value && v.value)), I = d(() => [
    a,
    v,
    g
  ]), C = () => {
    if (!v.value || T.value) {
      r.value = [];
      return;
    }
    A.value = !0, w({
      url: v.value,
      urlParams: g.value,
      apiSaveId: a.value
    }).then(
      (z) => {
        r.value = z;
      }
    ).finally(
      () => {
        A.value = !1;
      }
    );
  }, E = d(() => b.value === "checkbox" || b.value === "multiselect"), P = (z, ne) => {
    !ae(ne) && !_B(ne, z) && (C(), E.value ? t({
      model: [],
      currentModel: []
    }) : t({
      model: void 0,
      currentModel: void 0
    }));
  }, M = (z) => s.value ? sk(z) : ag(z, o.value), k = (z) => n.value.length ? !Ah(n.value, [ze, z]) : yt(z) || qn(z), F = d(() => {
    let z = [];
    return Ae(_.value) && _.value.length ? z = Gt(_.value, (ne) => k(ne)) : k(_.value) && (z = [_.value]), z;
  }), D = ({ response: z }) => {
    const ne = Se(r.value), Q = [], ce = Se(F.value);
    Y(ne, (he) => {
      if (ce.length === 0)
        return !1;
      const ve = s.value ? he : de(he, o.value), me = ce.indexOf(ve);
      me !== -1 && (ce.splice(me, 1), Q.push(he));
    }), Q.push(...z), r.value = M(Q);
  };
  return {
    loadDataFromServer: C,
    loadDataFromServerForSearchAPI: () => {
      if (!T.value || !F.value.length)
        return;
      let z;
      if (o.value === "pk" ? z = Gt(F.value, (Q) => !ae(Q)) : z = Se(F.value), !z.length)
        return;
      A.value = !0;
      const ne = {
        ...g.value,
        [o.value]: z,
        limit: z.length
      };
      return w({
        url: v.value,
        urlParams: ne
      }).then(
        (Q) => {
          r.value = Q || [];
        }
      ).finally(() => {
        A.value = !1;
      });
    },
    loadingDataFromServer: A,
    loadingSearchApi: S,
    onSearchInApi: ({ search: z, data: ne = [] }) => {
      T.value && (S.value = !0, w({
        url: v.value,
        urlParams: {
          ...g.value || {},
          [m.value]: z
        }
      }).then(
        (Q) => {
          s.value && (Q = Yn(Q, (ce) => ce[u.value])), D({ response: Q, data: ne });
        }
      ).then(
        () => {
          S.value = !1;
        }
      ));
    },
    searchApiLocal: T,
    updateUrlPropsComputed: P,
    urlPropsComputed: I
  };
}
function xp(e, {
  data: t = d(() => [])
}) {
  const n = p(e, "keyGroup"), r = p(e, "keyGroupLabelCallback"), a = p(e, "sortOrderGroup"), s = d(() => Ae(n.value) ? n.value : yt(n.value) ? [n.value] : []), o = d(() => s.value.length > 0), u = d(() => {
    if (!o.value)
      return;
    const _ = {};
    return Y(s.value, (m, b) => {
      _[b] = {};
    }), Y(t.value, (m) => {
      let b;
      const v = [];
      let g = "";
      Y(s.value, (S, A) => {
        let w = de(m, S);
        (ae(w) || w === "") && (w = "_not_grouped"), g += `${g ? "_" : ""}${w}`, _[A][g] || (_[A][g] = {
          groupKey: w,
          groupLabel: We(r.value) ? r.value({ group: w, item: m }) : w,
          groupParentKey: b,
          allGroupKeys: g,
          allParentKeys: Se(v),
          data: [],
          dataKeyByKeyId: {}
        }), _[A][g].data.push(m), _[A][g].dataKeyByKeyId[m[ze]] = m, b = w, v.push(w);
      });
    }), Y(_, (m, b) => {
      _[b] = wh(m);
    }), a.value && Y(_, (m, b) => {
      _[b] = Th(m, ["groupLabel"], [a.value]);
    }), _;
  });
  return {
    dataGrouped: d(() => {
      if (!o.value)
        return;
      const _ = {};
      return Y(t.value, (m) => {
        let b = "";
        Y(s.value, (v) => {
          let g = de(m, v);
          if (ae(g) || g === "")
            return g = "_not_grouped", b += `${b ? "_" : ""}${g}`, !1;
          b += `${b ? "_" : ""}${g}`;
        }), _[b] = _[b] || [], _[b].push(m);
      }), _;
    }),
    groupsForLever: u,
    hasKeyGroup: o,
    keyGroupArray: s
  };
}
function Cp(e, {
  data: t = d(() => [])
}) {
  const n = p(e, "sortOrder");
  return {
    dataSort: d(() => n.value ? Th(t.value, [vt], [n.value]) : t.value)
  };
}
function Ip({ emit: e }, {
  dataKeyByKeyIdLocal: t = d(() => ({})),
  dataLocal: n = d(() => ({}))
}) {
  st(n, () => {
    e("updateData", {
      dataKeyByKeyId: t.value
    });
  }, {
    immediate: !0,
    deep: !0
  });
}
function Lp(e) {
  const t = p(e, "alwaysTranslate"), n = p(e, "data"), r = p(e, "dataExtra"), a = p(e, "isDataSimpleArray"), s = p(e, "keyId"), o = p(e, "keyLabel"), u = p(e, "keyLabelCallback"), f = p(e, "translateData"), _ = R([]), m = d(() => uk(r.value)), b = ({ _data: E, _isArrayOfArrays: P = !1 }) => {
    const M = Se(E);
    if (P) {
      const k = [];
      return Y(M, (F) => {
        const D = F[0];
        let W = F[1];
        f.value && ii(W) && (W = Kt({ placeholder: W, alwaysTranslate: t.value })), k.push({
          [ze]: D,
          [vt]: W
        });
      }), k;
    }
    if (u.value) {
      if (a.value) {
        const k = [];
        return Y(M, (F) => {
          let D = u.value({ item: F });
          f.value && ii(D) && (D = Kt({ placeholder: D, alwaysTranslate: t.value })), k.push({
            [ze]: F,
            [vt]: D
          });
        }), k;
      }
      Y(M, (k) => {
        let F = u.value({ item: k });
        f.value && ii(F) && (F = Kt({ placeholder: F, alwaysTranslate: t.value })), k[ze] = de(k, s.value), k[vt] = F;
      });
    } else {
      if (a.value) {
        const k = [];
        return Y(M, (F) => {
          let D = F;
          f.value && ii(D) && (D = Kt({ placeholder: D, alwaysTranslate: t.value })), k.push({
            [ze]: F,
            [vt]: D
          });
        }), k;
      }
      Y(M, (k) => {
        let F = de(k, o.value);
        f.value && ii(F) && (F = Kt({ placeholder: F, alwaysTranslate: t.value })), k[ze] = de(k, s.value), k[vt] = F;
      });
    }
    return M;
  }, v = d(() => n.value || _.value), g = d(() => b({
    _data: v.value,
    _isArrayOfArrays: !1
  })), S = d(() => b({
    _data: r.value,
    _isArrayOfArrays: m.value
  })), A = d(() => ui(S.value, ze)), w = d(() => ui(g.value, ze)), T = d(() => ({
    ...A.value,
    ...w.value
  })), I = d(() => [
    ...S.value,
    ...g.value
  ]), C = d(() => S.value.length > 0);
  return {
    dataAll: I,
    dataExtraLocal: S,
    dataFromServer: _,
    dataKeyByKeyIdLocal: T,
    dataLocal: g,
    hasDataExtra: C
  };
}
function Ep(e, {
  loadingDataFromServer: t = R(!1)
}) {
  const n = p(e, "loading");
  return {
    loadingLocal: d(() => !!(n.value || t.value))
  };
}
function Op(e, { emit: t }, {
  data: n = d(() => []),
  dataExtra: r = d(() => []),
  groupsForLever: a = d(() => {
  }),
  hasKeyGroup: s = d(() => !1),
  htmlIdLocal: o = d(() => ""),
  keyGroupArray: u = d(() => []),
  onSearchInApi: f = () => {
  },
  searchApiLocal: _ = d(() => !1)
}) {
  const m = p(e, "searchTimeout"), b = p(e, "searchInGroup"), v = p(e, "searchOutside"), g = R(!1), S = R(""), A = R(""), w = R(!1), T = R({}), I = R({}), C = R({}), E = R({}), P = R(void 0), M = d(() => !!(v.value || _.value)), k = d(() => `${o.value}_search_global`), F = d(() => ng(S.value || "")), D = d(() => Gl(F.value)), W = d(() => new RegExp(D.value, "gi")), $ = () => {
    let me = !1;
    if (!b.value || !a.value) {
      E.value = {}, g.value = me;
      return;
    }
    const Ne = {}, we = {};
    Y(a.value, (oe) => {
      Y(oe, (xe) => {
        const re = xe.groupLabel;
        re === "_not_grouped" && !xe.groupParentKey || (Ne[xe.groupParentKey] ? (Ne[xe.allGroupKeys] = !0, xe.data.length && (me = !0)) : `${re}`.search(W.value) !== -1 && (Ne[xe.allGroupKeys] = !0, xe.data.length && (me = !0), xe.allParentKeys.length && Y(xe.allParentKeys, (Re) => {
          we[Re] = !0;
        })));
      });
    }), E.value = {
      ...Ne,
      ...we
    }, g.value = me;
  }, z = () => {
    const me = {}, Ne = {}, we = {};
    S.value ? (w.value = !0, s.value ? ($(), Y(n.value, (oe) => {
      const xe = oe[vt], re = oe[ze];
      if (`${xe}`.search(W.value) !== -1) {
        Ne[re] = !0;
        let Re = "";
        Y(u.value, (Z) => {
          let U = de(oe, Z);
          (ae(U) || U === "") && (U = "_not_grouped"), Re += `${Re ? "_" : ""}${U}`, we[Re] = !0;
        });
      }
    })) : Y(n.value, (oe) => {
      const xe = oe[vt], re = oe[ze];
      `${xe}`.search(W.value) !== -1 && (Ne[re] = !0);
    }), Y(r.value, (oe) => {
      const xe = oe[vt], re = oe[ze];
      `${xe}`.search(W.value) !== -1 && (me[re] = !0);
    })) : w.value = !1, T.value = Ne, I.value = me, C.value = we;
  }, ne = d(() => !!(w.value && Mn(I.value))), Q = d(() => !!(w.value && Mn(T.value) && ne.value && !g.value));
  return {
    hasNotElementsExtraWithSearch: ne,
    hasNotElementsWithSearch: Q,
    idForButtonSearchOutside: k,
    modelSearch: S,
    modelSearchLowerCase: F,
    modelSearchOutside: A,
    onSearchOutside: (me) => {
      me && me.preventDefault(), f({
        search: A.value
      }), t("onSearchOutside", {
        model: A.value
      });
    },
    searching: w,
    searchingElements: T,
    searchingElementsExtra: I,
    searchingGroups: C,
    searchingGroupsWithSearchInGroup: E,
    searchOutsideOrApi: M,
    searchOutsideRef: P,
    updateModelSearch: (me) => {
      S.value = me, m.value ? setTimeout(() => {
        z();
      }, m.value) : z();
    },
    updateModelSearchOutside: (me) => {
      A.value = me;
    }
  };
}
const lo = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
  <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0"/>
</svg>`, UH = {
  name: "ACheckbox",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    classDataParent: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => []
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => mt("a_checkbox_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inline: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: void 0
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "value"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: Array,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    search: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: void 0
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrder: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_",
        notElementsWithSearch: "_A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_",
        search: "_A_CHECKBOX_SEARCH_"
      })
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "onSearchOutside",
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = zt(e), {
      componentStyleHide: r
    } = dn(e), {
      ariaDescribedbyLocal: a,
      changeModel: s,
      errorsId: o,
      helpTextId: u,
      htmlIdLocal: f,
      isErrors: _,
      onBlur: m,
      onFocus: b
    } = An(e, t), {
      textAfterLabel: v
    } = bp(e), {
      dataAll: g,
      dataFromServer: S,
      dataExtraLocal: A,
      dataKeyByKeyIdLocal: w,
      dataLocal: T,
      hasDataExtra: I
    } = Lp(e), {
      loadDataFromServer: C,
      loadDataFromServerForSearchAPI: E,
      loadingDataFromServer: P,
      loadingSearchApi: M,
      onSearchInApi: k,
      searchApiLocal: F,
      updateUrlPropsComputed: D,
      urlPropsComputed: W
    } = Tp(e, {
      changeModel: s,
      dataExtraLocal: A,
      dataFromServer: S
    }), {
      loadingLocal: $
    } = Ep(e, {
      loadingDataFromServer: P
    });
    Ip(t, {
      dataKeyByKeyIdLocal: w,
      dataLocal: T
    });
    const {
      dataSort: z
    } = Cp(e, {
      data: T
    }), {
      dataGrouped: ne,
      groupsForLever: Q,
      hasKeyGroup: ce,
      keyGroupArray: he
    } = xp(e, {
      data: z
    }), {
      hasNotElementsExtraWithSearch: ve,
      hasNotElementsWithSearch: me,
      idForButtonSearchOutside: Ne,
      modelSearch: we,
      modelSearchLowerCase: oe,
      modelSearchOutside: xe,
      onSearchOutside: re,
      searching: Re,
      searchingElements: Z,
      searchingElementsExtra: U,
      searchingGroups: se,
      searchingGroupsWithSearchInGroup: pe,
      searchOutsideOrApi: Ie,
      searchOutsideRef: He,
      updateModelSearch: Ke,
      updateModelSearchOutside: Je
    } = Op(e, t, {
      data: z,
      dataExtra: A,
      groupsForLever: Q,
      htmlIdLocal: f,
      hasKeyGroup: ce,
      keyGroupArray: he,
      searchApiLocal: F,
      onSearchInApi: k
    }), {
      onChangeModelValue: ut
    } = U5(e, {
      changeModel: s
    }), {
      iconCollapse: Ee,
      initIsCollapsedLocal: Qe,
      isCollapsedLocal: At,
      titleCollapse: Fe,
      toggleCollapse: ft
    } = yp(e, t), {
      modelValueObj: Dt
    } = j5(e), {
      groupId: $t
    } = mp(e, {
      htmlIdLocal: f
    });
    return st(W, D, {
      deep: !0
    }), Qe(), C(), E(), {
      ariaDescribedbyLocal: a,
      attributesToExcludeFromRender: n,
      componentStyleHide: r,
      dataAll: g,
      dataExtraLocal: A,
      dataGrouped: ne,
      dataKeyByKeyIdLocal: w,
      dataSort: z,
      errorsId: o,
      groupId: $t,
      groupsForLever: Q,
      hasDataExtra: I,
      hasKeyGroup: ce,
      hasNotElementsExtraWithSearch: ve,
      hasNotElementsWithSearch: me,
      helpTextId: u,
      htmlIdLocal: f,
      iconCollapse: Ee,
      idForButtonSearchOutside: Ne,
      isCollapsedLocal: At,
      isErrors: _,
      loadingLocal: $,
      loadingSearchApi: M,
      modelSearch: we,
      modelSearchLowerCase: oe,
      modelSearchOutside: xe,
      modelValueObj: Dt,
      onBlur: m,
      onChangeModelValue: ut,
      onFocus: b,
      onSearchOutside: re,
      searching: Re,
      searchingElements: Z,
      searchingElementsExtra: U,
      searchingGroups: se,
      searchingGroupsWithSearchInGroup: pe,
      searchOutsideOrApi: Ie,
      searchOutsideRef: He,
      textAfterLabel: v,
      titleCollapse: Fe,
      toggleCollapse: ft,
      updateModelSearch: Ke,
      updateModelSearchOutside: Je
    };
  },
  render() {
    var e, t, n;
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: [
          "a_form_element__parent",
          {
            a_checkbox_inline: this.inline,
            a_checkbox_control: this.hasControlCheckbox
          }
        ]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("fieldset", {
            id: this.htmlIdLocal,
            tabindex: -1,
            class: [
              "a_fieldset",
              this.classFieldset,
              {
                a_fieldset_no_border: !this.hasBorder,
                a_fieldset_invalid: this.isErrors,
                a_fieldset_collapsed: this.isCollapsedLocal
              }
            ],
            "aria-describedby": this.ariaDescribedbyLocal
          }, [
            this.label || this.labelScreenReader ? c(vS, {
              id: this.htmlIdLocal,
              alwaysTranslate: this.alwaysTranslate,
              data: this.dataAll,
              dataKeyByKeyId: this.dataKeyByKeyIdLocal,
              disabled: this.disabled,
              hasControlCheckbox: this.hasControlCheckbox,
              isErrors: this.isErrors,
              label: this.label,
              legendClass: this.labelClass,
              labelScreenReader: this.labelScreenReader,
              main: !0,
              modelValue: this.modelValue,
              modelValueObj: this.modelValueObj,
              textAfter: this.textAfterLabel,
              onChangeModelValue: this.onChangeModelValue
            }) : "",
            this.collapsible ? c(Oe, {
              "aria-controls": this.groupId,
              "aria-expanded": !this.isCollapsedLocal,
              alwaysTranslate: this.alwaysTranslate,
              class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
              iconLeft: this.iconCollapse,
              title: this.titleCollapse,
              textScreenReader: this.titleCollapse,
              type: "button",
              onClick: this.toggleCollapse
            }) : "",
            c("div", {
              id: this.groupId,
              class: "a_fieldset__content"
            }, [
              this.searchOutsideOrApi ? c("div", {
                class: "a_fieldset__search"
              }, [
                c("form", {
                  onSubmit: this.onSearchOutside
                }, [
                  c("div", {
                    class: "input-group"
                  }, [
                    c(In, {
                      alwaysTranslate: this.alwaysTranslate,
                      label: ((e = this.texts) == null ? void 0 : e.search) || "_A_CHECKBOX_SEARCH_",
                      inputClass: "a_select__element_clickable",
                      modelValue: this.modelSearchOutside,
                      modelUndefined: "",
                      "onUpdate:modelValue": this.updateModelSearchOutside
                    }),
                    c(Oe, {
                      alwaysTranslate: this.alwaysTranslate,
                      ariaDisabled: this.loadingSearchApi,
                      disabled: this.disabled,
                      class: "a_btn a_btn_primary",
                      type: "submit",
                      iconLeft: lo
                    })
                  ])
                ])
              ]) : "",
              this.search ? c(In, {
                alwaysTranslate: this.alwaysTranslate,
                label: ((t = this.texts) == null ? void 0 : t.search) || "_A_CHECKBOX_SEARCH_",
                class: "a_fieldset__search",
                modelValue: this.modelSearch,
                modelUndefined: "",
                "onUpdate:modelValue": this.updateModelSearch
              }) : "",
              this.loadingLocal ? c(Fl) : "",
              this.hasDataExtra ? c("div", {
                class: "a_checkbox__data_extra"
              }, [
                ...this.dataExtraLocal.map((r, a) => c($f, {
                  key: a,
                  id: this.htmlIdLocal,
                  alwaysTranslate: this.alwaysTranslate,
                  idSuffix: "extra",
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataItem: r,
                  disabled: this.disabled,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  itemIndex: a,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElementsExtra,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.hasNotElementsExtraWithSearch ? "" : c("div", {
                  class: "a_divider",
                  ariaHidden: !0
                })
              ]) : "",
              c("div", {}, this.hasKeyGroup ? [
                c(hp, {
                  id: `${this.htmlIdLocal}_lev_0`,
                  alwaysTranslate: this.alwaysTranslate,
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataGrouped: this.dataGrouped,
                  disabled: this.disabled,
                  hasControlCheckbox: this.hasControlCheckbox,
                  groupsForLever: this.groupsForLever,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  levelIndex: 0,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  modelValueObj: this.modelValueObj,
                  searching: this.searching,
                  searchingElements: this.searchingElements,
                  searchingGroups: this.searchingGroups,
                  searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  type: "checkbox",
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)
              ] : [
                c("div", {
                  class: [
                    "a_checkbox_data",
                    {
                      a_btn_group: this.isButtonGroup
                    },
                    this.classDataParent
                  ]
                }, [
                  ...this.dataSort.map((r, a) => c($f, {
                    key: a,
                    id: this.htmlIdLocal,
                    alwaysTranslate: this.alwaysTranslate,
                    classButtonGroupDefault: this.classButtonGroupDefault,
                    dataItem: r,
                    disabled: this.disabled,
                    isButtonGroup: this.isButtonGroup,
                    isErrors: this.isErrors,
                    isWidthAuto: this.isWidthAuto,
                    itemIndex: a,
                    keyDisabled: this.keyDisabled,
                    keyTitle: this.keyTitle,
                    keyTitleCallback: this.keyTitleCallback,
                    modelSearch: this.modelSearchLowerCase,
                    modelValue: this.modelValue,
                    searching: this.searching,
                    searchingElements: this.searchingElements,
                    slotAppendName: this.slotAppendName,
                    slotName: this.slotName,
                    onChangeModelValue: this.onChangeModelValue
                  }, this.$slots))
                ])
              ]),
              !this.dataSort.length || this.hasNotElementsWithSearch ? c(be, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_form__not_elements",
                text: ((n = this.texts) == null ? void 0 : n.notElementsWithSearch) || "_A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_"
              }) : ""
            ])
          ])
        ]),
        c(Sn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(gn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, oo = {
  props: {
    id: {
      type: String,
      required: !0
    }
  },
  computed: {
    idForHeader() {
      return `${this.id}_header`;
    },
    nameForEventBusDestroyKeyDownEvent() {
      return `${this.id}DestroyKeyDown`;
    },
    attributesForMainElement() {
      return this.idForFocus ? {
        "aria-activedescendant": this.idForFocus
      } : {};
    }
  },
  created() {
    this.setEventBus();
  },
  beforeUnmount() {
    this.destroyEventBus(), this.destroyListenerForPressButtons();
  },
  methods: {
    setEventBus() {
      Ht.$on(this.nameForEventBusDestroyKeyDownEvent, this.destroyListenerForPressButtons);
    },
    emitEventBusDestroyAllListenerForPressButtonsForPanels() {
      Ht.$emit(this.nameForEventBusDestroyKeyDownEvent);
    },
    destroyEventBus() {
      Ht.$off(this.nameForEventBusDestroyKeyDownEvent, this.destroyListenerForPressButtons);
    },
    setListenerForPressButtons() {
      document.addEventListener("keydown", this.pressButton);
    },
    destroyListenerForPressButtons() {
      document.removeEventListener("keydown", this.pressButton), this.destroyListenerForPressButtonsCallback();
    },
    stopCurrentEvent(e) {
      e.preventDefault(), e.stopPropagation();
    },
    setFocusToElementWithTimeout(e) {
      setTimeout(() => {
        const t = document.getElementById(e);
        t && t.focus();
      });
    },
    destroyListenerForPressButtonsCallback() {
    }
  }
};
function $u(e) {
  return Object.prototype.toString.call(e) === "[object Object]";
}
function Jf(e) {
  return e instanceof Date;
}
function qr(e) {
  return e == null ? !1 : !isNaN(new Date(e).getTime());
}
function jH(e) {
  return Array.isArray(e) && e.length === 2 && qr(e[0]) && qr(e[1]) && new Date(e[1]).getTime() >= new Date(e[0]).getTime();
}
function Wu(e, t) {
  if (!e)
    return "";
  try {
    return ue(e).format(t);
  } catch {
    return "";
  }
}
function wv(e, t, n) {
  try {
    return ue(e, n).format(t) || null;
  } catch {
    return null;
  }
}
const Tv = {
  name: "APanelDate",
  mixins: [
    oo
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    startAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    endAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    dateFormat: {
      type: String,
      default: "YYYY-MM-DD"
    },
    calendarMonth: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getMonth()
    },
    calendarYear: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getFullYear()
    },
    firstDayOfWeek: {
      default: 7,
      type: Number,
      validator: (e) => e >= 1 && e <= 7
    },
    disabledDate: {
      type: Function,
      default: () => !1
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "handleIconMonth",
    "select"
  ],
  data() {
    return {
      dayForFocusButton: void 0
    };
  },
  computed: {
    ths() {
      return this.getDays(this.firstDayOfWeek);
    },
    dates() {
      return this.getDates(this.calendarYear, this.calendarMonth, this.firstDayOfWeek);
    },
    trsWithTds() {
      const e = [];
      for (let t = 0; t < 6; t++) {
        const n = [];
        this.dates.slice(7 * t, 7 * t + 7).forEach((r) => {
          const a = this.isCurrentDayToday(r), s = this.getCellTime(r), o = this.disabledDate(s);
          n.push({
            class: this.getCellClasses({
              cellTime: s,
              isToday: a,
              month: r.month
            }),
            id: this.getId({
              month: r.month,
              day: r.day
            }),
            year: r.year,
            month: r.month,
            fullDate: this.getCellTitle(r),
            date: r,
            label: r.day,
            isToday: a,
            isDisabled: o,
            isCurrentMonth: r.month === this.calendarMonth
          });
        }), e.push(n);
      }
      return e;
    },
    dayFromValueOrToday() {
      return this.dayFromValue || (/* @__PURE__ */ new Date()).getDate();
    },
    dayFromValue() {
      return this.value ? new Date(this.value).getDate() : "";
    },
    idForFocus() {
      return this.dayForFocusButton ? `${this.id}_${this.dayForFocusButton}` : "";
    },
    daysInMonth() {
      return ue(`${this.calendarYear}_${this.calendarMonth + 1}`, "YYYY-MM").daysInMonth();
    },
    todayTranslate() {
      return this.currentLanguage.today;
    }
  },
  methods: {
    selectDate(e, { year: t, month: n, day: r }) {
      e.stopPropagation();
      const a = new Date(t, n, r);
      this.disabledDate(a) || this.$emit("select", a);
    },
    getDays(e) {
      const t = this.currentLanguage.days, n = parseInt(e, 10);
      return t.concat(t).slice(n, n + 7);
    },
    getDates(e, t, n) {
      const r = [], a = new Date(e, t);
      a.setDate(0);
      const s = (a.getDay() + 7 - n) % 7 + 1, o = a.getDate() - (s - 1);
      for (let _ = 0; _ < s; _++)
        r.push({ year: e, month: t - 1, day: o + _ });
      a.setMonth(a.getMonth() + 2, 0);
      const u = a.getDate();
      for (let _ = 0; _ < u; _++)
        r.push({ year: e, month: t, day: 1 + _ });
      a.setMonth(a.getMonth() + 1, 1);
      const f = 42 - (s + u);
      for (let _ = 0; _ < f; _++)
        r.push({ year: e, month: t + 1, day: 1 + _ });
      return r;
    },
    isCurrentDayToday({ year: e, month: t, day: n }) {
      const r = this.getCellTime({ year: e, month: t, day: n }), a = (/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0);
      return r === a;
    },
    getCellClasses({ cellTime: e, isToday: t, month: n }) {
      const r = [], a = this.value && new Date(this.value).setHours(0, 0, 0, 0), s = this.startAt && new Date(this.startAt).setHours(0, 0, 0, 0), o = this.endAt && new Date(this.endAt).setHours(0, 0, 0, 0);
      return n < this.calendarMonth ? r.push("last-month") : n > this.calendarMonth ? r.push("next-month") : r.push("cur-month"), t && r.push("today"), this.disabledDate(e) && r.push("disabled"), a && (e === a ? r.push("actived") : (s && e <= a || o && e >= a) && r.push("inrange")), r.join(" ");
    },
    getCellTime({ year: e, month: t, day: n }) {
      return new Date(e, t, n).getTime();
    },
    getCellTitle({ year: e, month: t, day: n }) {
      return Wu(new Date(e, t, n), this.dateFormat);
    },
    getId({ month: e, day: t }) {
      let n = `${this.id}_${t}`;
      return e < this.calendarMonth ? n += "_last_month" : e > this.calendarMonth && (n += "_next_month"), n;
    },
    setFocusToActiveDay() {
      setTimeout(() => {
        this.setDefaultDayForFocusButton(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultDayForFocusButton() {
      this.dayForFocusButton = this.dayFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === X.arrowUp ? (this.setFocusToPast(7), this.stopCurrentEvent(e)) : t === X.arrowDown ? (this.setFocusToFuture(7), this.stopCurrentEvent(e)) : t === X.arrowLeft ? (this.setFocusToPast(1), this.stopCurrentEvent(e)) : t === X.arrowRight && (this.setFocusToFuture(1), this.stopCurrentEvent(e));
    },
    setFocusToPast(e) {
      const t = this.dayForFocusButton - e;
      t > 0 ? this.dayForFocusButton = t : (this.$emit("handleIconMonth", -1), setTimeout(() => {
        this.dayForFocusButton = this.daysInMonth - Math.abs(t);
      })), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToFuture(e) {
      const t = this.dayForFocusButton + e;
      if (t <= this.daysInMonth)
        this.dayForFocusButton = t;
      else {
        const n = this.daysInMonth;
        this.$emit("handleIconMonth", 1), this.dayForFocusButton = t - n;
      }
      this.setFocusToElementWithTimeout(this.idForFocus);
    },
    destroyListenerForPressButtonsCallback() {
      this.dayForFocusButton = void 0;
    }
  },
  render() {
    return c("table", {
      class: "pux_datepicker__panel pux_datepicker__panel_date",
      role: "grid",
      ariaReadonly: !0,
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      c("thead", null, [
        c("tr", null, [
          this.ths.map((e, t) => c("th", {
            key: t,
            ariaLabel: e.longName
          }, e.shortName))
        ])
      ]),
      c("tbody", null, [
        this.trsWithTds.map((e, t) => c("tr", {
          key: t
        }, [
          e.map((n, r) => c("td", {
            key: r,
            class: ["cell", n.class, {
              pux_datepicker__panel__cell_focus: n.id === this.idForFocus
            }]
          }, [
            c("button", {
              id: n.id,
              class: "pux_datepicker__panel__button",
              type: "button",
              tabindex: -1,
              ariaHidden: !0,
              ariaSelected: !!(n.isCurrentMonth && n.label === this.dayFromValue),
              onClick: (a) => this.selectDate(a, n.date)
            }, [
              c("span", {
                ariaHidden: !0
              }, n.label),
              c("span", {
                class: "a_sr_only"
              }, n.fullDate),
              n.isToday && c("span", {
                class: "a_sr_only"
              }, this.todayTranslate)
            ])
          ]))
        ]))
      ])
    ]);
  }
}, xv = {
  name: "APanelMonth",
  mixins: [
    oo
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    calendarYear: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getFullYear(),
      required: !1
    },
    disabledMonth: {
      type: Function,
      required: !1,
      default: void 0
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "handleIconYear",
    "select"
  ],
  data() {
    return {
      monthIndexForFocus: void 0
    };
  },
  computed: {
    currentYear() {
      return this.value && new Date(this.value).getFullYear();
    },
    currentMonth() {
      return this.value && new Date(this.value).getMonth();
    },
    monthsTranslate() {
      return this.currentLanguage.months;
    },
    months() {
      const e = [];
      return this.monthsTranslate.forEach((t, n) => {
        e.push({
          isActive: this.currentYear === this.calendarYear && this.currentMonth === n,
          isDisabled: this.isDisabled(n),
          label: t,
          id: this.getIdForMonth(n)
        });
      }), e;
    },
    idForFocus() {
      return qe(this.monthIndexForFocus) ? "" : this.getIdForMonth(this.monthIndexForFocus);
    },
    monthFromValueOrToday() {
      return this.monthFromValue || (/* @__PURE__ */ new Date()).getMonth();
    },
    monthFromValue() {
      return this.value ? new Date(this.value).getMonth() : "";
    }
  },
  methods: {
    isDisabled(e) {
      return !!(typeof this.disabledMonth == "function" && this.disabledMonth(e));
    },
    selectMonth(e, t, n) {
      e.stopPropagation(), e.preventDefault(), !this.isDisabled(t) && this.$emit("select", { month: t, isButtonClick: n });
    },
    getIdForMonth(e) {
      return `${this.id}_month_${e}`;
    },
    setFocusToActiveMonth() {
      setTimeout(() => {
        this.setDefaultMonthForFocus(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultMonthForFocus() {
      this.monthIndexForFocus = this.monthFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === X.arrowUp || t === X.arrowLeft ? (this.setFocusToLastMonth(), this.stopCurrentEvent(e)) : (t === X.arrowDown || t === X.arrowRight) && (this.setFocusToNextMonth(), this.stopCurrentEvent(e));
    },
    setFocusToLastMonth() {
      const e = this.monthIndexForFocus - 1;
      e >= 0 ? this.monthIndexForFocus = e : (this.$emit("handleIconYear", -1), this.monthIndexForFocus = 11), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToNextMonth() {
      const e = this.monthIndexForFocus + 1;
      e <= 11 ? this.monthIndexForFocus = e : (this.$emit("handleIconYear", 1), this.monthIndexForFocus = 0), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    keypress(e, t) {
      (e.keyCode === X.enter || e.keyCode === X.space) && this.selectMonth(e, t);
    }
  },
  render() {
    return c("ul", {
      class: "pux_datepicker__panel pux_datepicker__panel_month pux_datepicker__panel__list",
      role: "listbox",
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      this.months.map((e, t) => c("li", {
        id: e.id,
        key: e.id,
        class: ["cell", {
          actived: e.isActive,
          disabled: e.isDisabled,
          pux_datepicker__panel__cell_focus: t === this.monthIndexForFocus
        }],
        role: "option",
        ariaSelected: !!e.isActive,
        tabindex: -1,
        onClick: (n) => this.selectMonth(n, t),
        onKeypress: (n) => this.keypress(n, t)
      }, e.label))
    ]);
  }
}, Cv = {
  name: "APanelTime",
  mixins: [
    oo
  ],
  props: {
    minuteStep: {
      type: Number,
      default: 0,
      validator: (e) => e >= 0 && e <= 60
    },
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: void 0
    },
    timeType: {
      type: Array,
      default() {
        return ["24", "a"];
      }
    },
    disabledTime: {
      type: Function,
      required: !1,
      default: void 0
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "select"
  ],
  data() {
    return {
      timeIndexForFocus: void 0,
      columnIndexForFocus: void 0
    };
  },
  computed: {
    currentHours() {
      return this.value ? new Date(this.value).getHours() : 0;
    },
    currentMinutes() {
      return this.value ? new Date(this.value).getMinutes() : 0;
    },
    currentSeconds() {
      return this.value ? new Date(this.value).getSeconds() : 0;
    },
    date() {
      return this.value ? new Date(this.value) : (/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0);
    },
    isDisabledTimeFunction() {
      return typeof this.disabledTime == "function";
    },
    timesFiltered() {
      const e = [];
      let t = 0;
      const n = this.setColumn({
        times: this.hours,
        timeFunctionName: "setHours",
        currentTime: this.currentHours,
        ariaLabel: this.currentLanguage.hours,
        columnIndex: t
      });
      n.length && (e.push(n), t++);
      const r = this.setColumn({
        times: this.minutes,
        timeFunctionName: "setMinutes",
        currentTime: this.currentMinutes,
        ariaLabel: this.currentLanguage.minutes,
        columnIndex: t
      });
      r.length && (e.push(r), t++);
      const a = this.setColumn({
        times: this.seconds,
        timeFunctionName: "setSeconds",
        currentTime: this.currentSeconds,
        ariaLabel: this.currentLanguage.seconds,
        columnIndex: t
      });
      return a.length && e.push(a), e;
    },
    minuteStepLocal() {
      return this.minuteStep || 1;
    },
    minuteLength() {
      return parseInt(60 / this.minuteStepLocal);
    },
    hours() {
      return Array.apply(null, { length: 24 }).map((e, t) => t);
    },
    minutes() {
      return Array.apply(null, { length: this.minuteLength }).map(
        (e, t) => t * this.minuteStepLocal
      );
    },
    seconds() {
      return this.minuteStep === 0 ? Array.apply(null, { length: 60 }).map((e, t) => t) : [];
    },
    idForFocus() {
      return this.getCurrentId({
        columnIndex: this.columnIndexForFocus,
        rowIndex: this.timeIndexForFocus
      });
    },
    fullIndexForFocus() {
      return `${this.columnIndexForFocus}_${this.timeIndexForFocus}`;
    }
  },
  methods: {
    stringifyText(e) {
      return ("00" + e).slice(String(e).length);
    },
    selectTime(e, t) {
      typeof this.disabledTime == "function" && this.disabledTime(e) || this.$emit("select", new Date(e), t);
    },
    setColumn({ times: e, timeFunctionName: t, currentTime: n, ariaLabel: r, columnIndex: a }) {
      const s = [];
      return e.forEach((o, u) => {
        const f = new Date(this.date)[t](o), _ = o === n, m = this.isDisabledTimeFunction && this.disabledTime(f), b = this.stringifyText(o);
        s.push({
          label: b,
          time: f,
          isActive: _,
          isDisabled: m,
          ariaLabel: `${r}: ${b}`,
          id: this.getCurrentId({
            columnIndex: a,
            rowIndex: u
          })
        });
      }), s;
    },
    getCurrentId({ columnIndex: e, rowIndex: t }) {
      return `${this.id}_time_${e}_${t}`;
    },
    setFocusToActiveTime() {
      setTimeout(() => {
        this.setDefaultTimeForFocus(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultTimeForFocus() {
      this.timeIndexForFocus = 0, this.columnIndexForFocus = 0;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === X.arrowUp ? (this.setFocusToLastTime(), this.stopCurrentEvent(e)) : t === X.arrowDown ? (this.setFocusToNextTime(), this.stopCurrentEvent(e)) : t === X.arrowLeft ? (this.setFocusToLastTimeColumn(), this.stopCurrentEvent(e)) : t === X.arrowRight && (this.setFocusToNextTimeColumn(), this.stopCurrentEvent(e));
    },
    setFocusToLastTime() {
      const e = this.timesFiltered[this.columnIndexForFocus];
      this.timeIndexForFocus > 0 ? this.timeIndexForFocus-- : this.timeIndexForFocus = e.length - 1, this.setFocusToElement(this.idForFocus);
    },
    setFocusToNextTime() {
      const e = this.timesFiltered[this.columnIndexForFocus];
      this.timeIndexForFocus < e.length - 1 ? this.timeIndexForFocus++ : this.timeIndexForFocus = 0, this.setFocusToElement(this.idForFocus);
    },
    setFocusToLastTimeColumn() {
      this.columnIndexForFocus > 0 ? this.columnIndexForFocus-- : this.columnIndexForFocus = this.timesFiltered.length - 1, this.timeIndexForFocus = 0, this.setFocusToElement(this.idForFocus);
    },
    setFocusToNextTimeColumn() {
      this.columnIndexForFocus < this.timesFiltered.length - 1 ? this.columnIndexForFocus++ : this.columnIndexForFocus = 0, this.timeIndexForFocus = 0, this.setFocusToElement(this.idForFocus);
    },
    setFocusToElement(e) {
      const t = document.getElementById(e);
      t && t.focus();
    },
    keypress(e, t, n) {
      (e.keyCode === X.enter || e.keyCode === X.space) && (this.selectTime(t, n), e.stopPropagation(), e.preventDefault());
    }
  },
  render() {
    return c("div", {
      class: "pux_datepicker__panel pux_datepicker__panel_time"
    }, [
      this.timesFiltered.map((e, t) => c("ul", {
        key: t,
        class: "pux_datepicker__time_list",
        role: "listbox",
        "aria-labelledby": this.idForHeader,
        style: { width: `${100 / this.timesFiltered.length}%` }
      }, [
        e.map((n, r) => c("li", {
          id: n.id,
          key: r,
          class: ["cell", {
            actived: n.isActive,
            disabled: n.isDisabled,
            pux_datepicker__panel__cell_focus: t + "_" + r === this.fullIndexForFocus
          }],
          tabindex: -1,
          role: "option",
          ariaSelected: !!n.isActive,
          ariaLabel: n.ariaLabel,
          onClick: () => this.selectTime(n.time),
          onKeypress: (a) => this.keypress(a, n.time, t === this.timesFiltered.length - 1)
        }, n.label))
      ]))
    ]);
  }
}, GH = {
  name: "APanelYearItem",
  props: {
    prefixForId: {
      type: String,
      required: !0
    },
    year: {
      type: Number,
      required: !0
    },
    yearFromValue: {
      type: Number,
      required: !1,
      default: void 0
    },
    yearIndex: {
      type: Number,
      required: !0
    },
    isDisabled: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "selectYear"
  ],
  computed: {
    isDisabledLocal() {
      return this.isDisabled(this.year);
    },
    isYearActive() {
      return this.yearFromValue === this.year;
    },
    idForList() {
      return `${this.prefixForId}${this.yearIndex}`;
    },
    ariaSelected() {
      return `${this.isYearActive}`;
    }
  },
  methods: {
    selectYearLocal(e, t) {
      e.stopPropagation(), e.preventDefault(), !this.isDisabledLocal && this.$emit("selectYear", { year: this.year, isButtonClick: t });
    },
    keypress(e) {
      (e.keyCode === X.enter || e.keyCode === X.space) && this.selectYearLocal(e, !0);
    }
  },
  render() {
    return c("li", {
      id: this.idForList,
      class: ["cell", {
        actived: this.isYearActive,
        disabled: this.isDisabledLocal
      }],
      role: "option",
      tabindex: -1,
      "aria-selected": this.ariaSelected,
      onClick: this.selectYearLocal,
      onKeypress: this.keypress
    }, this.year);
  }
}, Iv = {
  name: "APanelYear",
  mixins: [
    oo
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    firstYear: {
      type: Number,
      required: !0
    },
    disabledYear: {
      type: Function,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "handleIconYear",
    "select"
  ],
  data() {
    return {
      yearIndexForFocus: void 0
    };
  },
  computed: {
    firstYearLocal() {
      return Math.floor(this.firstYear / 10) * 10;
    },
    yearFromValue() {
      return this.value && new Date(this.value).getFullYear();
    },
    idForFocus() {
      return qe(this.yearIndexForFocus) ? "" : this.getIdForYear(this.yearIndexForFocus);
    },
    yearIndexFromValueOrToday() {
      const e = this.yearFromValueOrToday - this.firstYearLocal;
      return e <= 9 && e >= 0 ? e : 0;
    },
    yearFromValueOrToday() {
      return this.yearFromValue || (/* @__PURE__ */ new Date()).getFullYear();
    },
    prefixForId() {
      return `${this.id}_year_`;
    }
  },
  methods: {
    isDisabled(e) {
      return !!(typeof this.disabledYear == "function" && this.disabledYear(e));
    },
    selectYear({ year: e, isButtonClick: t }) {
      this.isDisabled(e) || this.$emit("select", { year: e, isButtonClick: t });
    },
    getIdForYear(e) {
      return `${this.prefixForId}${e}`;
    },
    setFocusToActiveYear() {
      setTimeout(() => {
        this.setDefaultYearForFocus(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultYearForFocus() {
      this.yearIndexForFocus = this.yearIndexFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === X.arrowUp || t === X.arrowLeft ? (this.setFocusToLastYear(), this.stopCurrentEvent(e)) : (t === X.arrowDown || t === X.arrowRight) && (this.setFocusToNextYear(), this.stopCurrentEvent(e));
    },
    setFocusToLastYear() {
      const e = this.yearIndexForFocus - 1;
      e >= 0 && e <= 9 ? this.yearIndexForFocus = e : (this.$emit("handleIconYear", -1), this.yearIndexForFocus = 9), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToNextYear() {
      const e = this.yearIndexForFocus + 1;
      e <= 9 && e >= 0 ? this.yearIndexForFocus = e : (this.$emit("handleIconYear", 1), this.yearIndexForFocus = 0), this.setFocusToElementWithTimeout(this.idForFocus);
    }
  },
  render() {
    return c("ul", {
      class: "pux_datepicker__panel pux_datepicker__panel_year pux_datepicker__panel__list",
      role: "listbox",
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      YB(10).map((e) => c(GH, {
        key: e,
        class: {
          pux_datepicker__panel__cell_focus: e === this.yearIndexForFocus
        },
        year: this.firstYearLocal + e,
        yearFromValue: this.yearFromValue,
        yearIndex: e,
        prefixForId: this.prefixForId,
        isDisabled: this.isDisabled,
        onSelectYear: this.selectYear
      }))
    ]);
  }
};
function YH(e, t) {
  if (!t) {
    e.scrollTop = 0;
    return;
  }
  const n = [];
  let r = t.offsetParent;
  for (; r && e !== r && e.contains(r); )
    n.push(r), r = r.offsetParent;
  const a = t.offsetTop + n.reduce((f, _) => f + _.offsetTop, 0), s = a + t.offsetHeight, o = e.scrollTop, u = o + e.clientHeight;
  a < o ? e.scrollTop = a : s > u && (e.scrollTop = s - e.clientHeight);
}
const hf = {
  name: "ADatepickerCalendarPanel",
  components: {
    APanelDate: Tv,
    APanelMonth: xv,
    APanelTime: Cv,
    APanelYear: Iv
  },
  mixins: [
    oo
  ],
  props: {
    id: {
      type: String,
      required: !0
    },
    value: {
      default: null,
      validator: function(e) {
        return e === null || qr(e);
      }
    },
    startAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    endAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    visible: {
      type: Boolean,
      default: !1
    },
    type: {
      type: String,
      default: "date"
      // ["date", "datetime"]
    },
    dateFormat: {
      type: String,
      default: "YYYY-MM-DD"
    },
    index: {
      type: Number,
      default: void 0
    },
    defaultValue: {
      validator: function(e) {
        return qr(e);
      },
      default: void 0
    },
    firstDayOfWeek: {
      default: 1,
      type: Number,
      validator: (e) => e >= 1 && e <= 7
    },
    notBefore: {
      default: null,
      validator: function(e) {
        return !e || qr(e);
      }
    },
    notAfter: {
      default: null,
      validator: function(e) {
        return !e || qr(e);
      }
    },
    disabledDays: {
      type: [Array, Function],
      default: function() {
        return [];
      }
    },
    minuteStep: {
      type: Number,
      default: 0,
      validator: (e) => e >= 0 && e <= 60
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "closePopup",
    "selectDate",
    "selectTime"
  ],
  data() {
    const e = this.getNow(this.value), t = e.getFullYear(), n = e.getMonth(), r = Math.floor(t / 10) * 10;
    return {
      panel: "NONE",
      dates: [],
      calendarMonth: n,
      calendarYear: t,
      firstYear: r,
      isFocusPanelChild: !1,
      isWorkWithKeyboard: !1
    };
  },
  computed: {
    now: {
      get() {
        return new Date(this.calendarYear, this.calendarMonth).getTime();
      },
      set(e) {
        const t = new Date(e);
        this.calendarYear = t.getFullYear(), this.calendarMonth = t.getMonth();
      }
    },
    timeType() {
      const e = /h+/.test(this.$parent.format) ? "12" : "24", t = /A/.test(this.$parent.format) ? "A" : "a";
      return [e, t];
    },
    timeHeader() {
      return this.type === "time" ? this.$parent.format : this.value && Wu(this.value, this.dateFormat);
    },
    yearHeader() {
      const e = this.firstYear + 9;
      return this.currentLanguage.headerYears(this.firstYear, e);
    },
    months() {
      return this.currentLanguage.months;
    },
    notBeforeTime() {
      return this.getCriticalTime(this.notBefore);
    },
    notAfterTime() {
      return this.getCriticalTime(this.notAfter);
    },
    suffixForHeader() {
      return this.panel === "TIME" ? this.currentLanguage.placeholder.regionTime : this.currentLanguage.placeholder.regionDate;
    },
    idForHeaderParent() {
      return `${this.idForHeader}_parent`;
    },
    ariaLabelForButtonLastYear() {
      return this.panel === "YEAR" ? this.currentLanguage.buttons.lastYears : this.currentLanguage.buttons.lastYear;
    },
    ariaLabelForButtonLastMonth() {
      return this.currentLanguage.buttons.lastMonth;
    },
    ariaLabelForButtonNextMonth() {
      return this.currentLanguage.buttons.nextMonth;
    },
    ariaLabelForButtonNextYear() {
      return this.panel === "YEAR" ? this.currentLanguage.buttons.nextYears : this.currentLanguage.buttons.nextYear;
    },
    ariaLabelForButtonCurrentMonth() {
      return this.currentLanguage.buttons.toMonthsView;
    },
    ariaLabelForButtonCurrentYear() {
      return this.currentLanguage.buttons.toYearsView;
    },
    ariaLabelForButtonToDays() {
      return this.currentLanguage.buttons.toDaysView;
    }
  },
  watch: {
    value: {
      immediate: !0,
      handler: "updateNow"
    },
    defaultValue: {
      handler: "updateNow"
    },
    visible: {
      immediate: !0,
      handler: "init"
    },
    panel: {
      handler: "handelPanelChange"
    }
  },
  beforeUnmount() {
    this.destroyListenerForPressTabButton(), this.destroyListenerForPressEscapeButton();
  },
  methods: {
    handelPanelChange(e) {
      e === "YEAR" ? this.firstYear = Math.floor(this.calendarYear / 10) * 10 : e === "TIME" && this.$nextTick(() => {
        const t = this.$el.querySelectorAll(".pux_datepicker__panel_time .pux_datepicker__time_list");
        for (let n = 0, r = t.length; n < r; n++) {
          const a = t[n];
          YH(a, a.querySelector(".actived"));
        }
      });
    },
    init(e) {
      if (e) {
        const t = this.type;
        t === "month" ? this.showPanelMonth() : t === "year" ? this.showPanelYear() : t === "time" ? this.showPanelTime() : this.showPanelDate(), this.setListenerForPressEscapeButton();
      } else
        this.showPanelNone(), this.updateNow(this.value), this.destroyListenerForPressEscapeButton();
      this.emitEventBusDestroyAllListenerForPressButtonsForPanels();
    },
    getNow(e) {
      return e ? new Date(e) : this.defaultValue && qr(this.defaultValue) ? new Date(this.defaultValue) : /* @__PURE__ */ new Date();
    },
    updateNow(e) {
      this.now = this.getNow(e);
    },
    getCriticalTime(e) {
      if (!e)
        return null;
      const t = new Date(e);
      return this.type === "year" ? new Date(t.getFullYear(), 0).getTime() : this.type === "month" ? new Date(t.getFullYear(), t.getMonth()).getTime() : this.type === "date" ? t.setHours(0, 0, 0, 0) : t.getTime();
    },
    inBefore(e, t) {
      return t === void 0 && (t = this.startAt), this.notBeforeTime && e < this.notBeforeTime || t && e < this.getCriticalTime(t);
    },
    inAfter(e, t) {
      return t === void 0 && (t = this.endAt), this.notAfterTime && e > this.notAfterTime || t && e > this.getCriticalTime(t);
    },
    inDisabledDays(e) {
      return Array.isArray(this.disabledDays) ? this.disabledDays.some((t) => this.getCriticalTime(t) === e) : typeof this.disabledDays == "function" ? this.disabledDays(new Date(e)) : !1;
    },
    isDisabledYear(e) {
      const t = new Date(e, 0).getTime(), n = new Date(e + 1, 0).getTime() - 1;
      return this.inBefore(n) || this.inAfter(t) || this.type === "year" && this.inDisabledDays(t);
    },
    isDisabledMonth(e) {
      const t = new Date(this.calendarYear, e).getTime(), n = new Date(this.calendarYear, e + 1).getTime() - 1;
      return this.inBefore(n) || this.inAfter(t) || this.type === "month" && this.inDisabledDays(t);
    },
    isDisabledDate(e) {
      const t = new Date(e).getTime(), n = new Date(e).setHours(23, 59, 59, 999);
      return this.inBefore(n) || this.inAfter(t) || this.inDisabledDays(t);
    },
    isDisabledTime(e, t, n) {
      const r = new Date(e).getTime();
      return this.inBefore(r, t) || this.inAfter(r, n) || this.inDisabledDays(r);
    },
    selectDate(e) {
      if (this.type === "datetime") {
        let t = new Date(e);
        Jf(this.value) && t.setHours(
          this.value.getHours(),
          this.value.getMinutes(),
          this.value.getSeconds()
        ), this.isDisabledTime(t) && (t.setHours(0, 0, 0, 0), this.notBefore && t.getTime() < new Date(this.notBefore).getTime() && (t = new Date(this.notBefore)), this.startAt && t.getTime() < new Date(this.startAt).getTime() && (t = new Date(this.startAt))), this.selectTime(t), this.showPanelTime();
        return;
      }
      this.$emit("selectDate", e);
    },
    selectYear({ year: e, isButtonClick: t }) {
      if (this.changeCalendarYear(e), this.type.toLowerCase() === "year")
        return this.selectDate(new Date(this.now));
      this.showPanelMonth(), t && this.setFocusToActivePanel();
    },
    selectMonth({ month: e, isButtonClick: t }) {
      if (this.changeCalendarMonth(e), this.type.toLowerCase() === "month")
        return this.selectDate(new Date(this.now));
      this.showPanelDate(), t && this.setFocusToActivePanel();
    },
    selectTime(e, t = !1) {
      this.$emit("selectTime", e, t);
    },
    changeCalendarYear(e) {
      this.updateNow(new Date(e, this.calendarMonth));
    },
    changeCalendarMonth(e) {
      this.updateNow(new Date(this.calendarYear, e));
    },
    getSibling() {
      const e = [
        this.$parent.$refs.calendarPanelRef
      ];
      this.$parent.$refs.calendarPanel2Ref && e.push(this.$parent.$refs.calendarPanel2Ref);
      const t = e.filter(
        (r) => r.$options.name === this.$options.name
      ), n = t.indexOf(this);
      return t[n ^ 1];
    },
    handleIconMonth(e) {
      const t = this.calendarMonth;
      this.changeCalendarMonth(t + e), this.$parent.$emit("changeCalendarMonth", {
        month: t,
        flag: e,
        vm: this,
        sibling: this.getSibling()
      });
    },
    handleIconYear(e) {
      if (this.panel === "YEAR")
        this.changePanelYears(e);
      else {
        const t = this.calendarYear;
        this.changeCalendarYear(t + e), this.$parent.$emit("changeCalendarYear", {
          year: t,
          flag: e,
          vm: this,
          sibling: this.getSibling()
        });
      }
    },
    handleBtnYear(e) {
      e.stopPropagation(), this.showPanelYear(), this.isWorkWithKeyboard && this.setFocusToActivePanel();
    },
    handleBtnMonth(e) {
      e.stopPropagation(), this.showPanelMonth(), this.isWorkWithKeyboard && this.setFocusToActivePanel();
    },
    handleTimeHeader(e) {
      e.stopPropagation(), this.type !== "time" && (this.showPanelDate(), this.isWorkWithKeyboard && this.setFocusToActivePanel());
    },
    changePanelYears(e) {
      this.firstYear = this.firstYear + e * 10;
    },
    showPanelNone() {
      this.panel = "NONE", this.isFocusPanelChild = !1, this.destroyListenerForPressTabButton(), this.emitEventBusDestroyAllListenerForPressButtonsForPanels(), this.setWorkWithoutKeyboard();
    },
    showPanelTime() {
      this.panel = "TIME";
    },
    showPanelDate() {
      this.panel = "DATE";
    },
    showPanelYear() {
      this.panel = "YEAR";
    },
    showPanelMonth() {
      this.panel = "MONTH";
    },
    setFocusToActivePanelFromParent() {
      this.setWorkWithKeyboard(), this.setFocusToActivePanel(), this.setListenerForPressTabButton();
    },
    setFocusToActivePanel() {
      this.isFocusPanelChild = !0, this.setFocusToActiveElementInChild();
    },
    removeFocusFromActivePanel() {
      this.isFocusPanelChild && (this.isFocusPanelChild = !1, this.emitEventBusDestroyAllListenerForPressButtonsForPanels());
    },
    setFocusToActiveElementInChild() {
      this.panel === "DATE" ? this.$refs.panelDate.setFocusToActiveDay() : this.panel === "TIME" ? this.$refs.panelTime.setFocusToActiveTime() : this.panel === "YEAR" ? this.$refs.panelYear.setFocusToActiveYear() : this.panel === "MONTH" && this.$refs.panelMonth.setFocusToActiveMonth();
    },
    setListenerForPressTabButton() {
      document.addEventListener("keydown", this.pressTabButton);
    },
    destroyListenerForPressTabButton() {
      document.removeEventListener("keydown", this.pressTabButton);
    },
    pressTabButton(e) {
      e.keyCode === X.tab && (this.trapFocus(e), this.stopCurrentEvent(e));
    },
    trapFocus(e) {
      const t = this.$el.querySelectorAll(".pux_datepicker__calendar__tab");
      if (t.length <= 1)
        return;
      let n = !1, r = !1;
      Y(t, (a, s) => {
        if (document.activeElement === a)
          return e.shiftKey ? s === 0 ? (t[t.length - 1].focus(), r = !0) : t[s - 1].focus() : (s === t.length - 1 ? t[0].focus() : t[s + 1].focus(), s === t.length - 2 && (r = !0)), n = !0, !1;
      }), n || (e.shiftKey ? t[t.length - 2].focus() : t[0].focus()), r ? this.setFocusToActivePanel() : this.removeFocusFromActivePanel();
    },
    setWorkWithKeyboard() {
      this.isWorkWithKeyboard = !0;
    },
    setWorkWithoutKeyboard() {
      this.isWorkWithKeyboard = !1;
    },
    setListenerForPressEscapeButton() {
      document.addEventListener("keydown", this.pressEscapeButton);
    },
    destroyListenerForPressEscapeButton() {
      document.removeEventListener("keydown", this.pressEscapeButton);
    },
    pressEscapeButton(e) {
      e.keyCode === X.escape && this.$emit("closePopup", !0);
    }
  },
  render() {
    return c("div", {
      class: ["pux_datepicker__calendar", `pux_datepicker__calendar_${this.panel.toLowerCase()}`],
      role: "region",
      "aria-labelledby": this.idForHeaderParent,
      onClick: (e) => e.stopPropagation()
    }, [
      c("div", {
        id: this.idForHeaderParent,
        class: "a_sr_only",
        role: "header"
      }, [
        c("div", {
          id: this.idForHeader,
          "aria-live": "polite"
        }, [
          this.panel === "DATE" && c("span", null, this.months[this.calendarMonth]),
          (this.panel === "DATE" || this.panel === "MONTH") && c("span", null, this.calendarYear),
          this.panel === "YEAR" && c("span", null, this.yearHeader),
          this.panel === "TIME" && c("span", null, this.timeHeader)
        ]),
        c("div", null, this.suffixForHeader)
      ]),
      c("div", {
        class: "pux_datepicker__calendar__header"
      }, [
        c("div", null, [
          this.panel !== "TIME" && c("button", {
            class: "pux_datepicker__icon_last_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonLastYear,
            innerHTML: "&laquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconYear(-1);
            }
          }),
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__icon_last_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonLastMonth,
            innerHTML: "&lsaquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconMonth(-1);
            }
          })
        ]),
        c("div", null, [
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__current_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonCurrentMonth,
            onClick: this.handleBtnMonth
          }, this.months[this.calendarMonth]),
          (this.panel === "DATE" || this.panel === "MONTH") && c("button", {
            class: "pux_datepicker__current_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonCurrentYear,
            onClick: this.handleBtnYear
          }, this.calendarYear),
          this.panel === "YEAR" && c("span", {
            class: "pux_datepicker__current_year"
          }, this.yearHeader),
          this.panel === "TIME" && c("span", null, [
            this.type === "time" ? c("span", {
              class: "pux_datepicker__time_header"
            }, this.timeHeader) : c("button", {
              class: "pux_datepicker__time_header pux_datepicker__calendar__tab",
              type: "button",
              ariaLabel: this.ariaLabelForButtonToDays,
              onClick: this.handleTimeHeader
            }, this.timeHeader)
          ])
        ]),
        c("div", null, [
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__icon_next_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonNextMonth,
            innerHTML: "&rsaquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconMonth(1);
            }
          }),
          this.panel !== "TIME" && c("button", {
            class: "pux_datepicker__icon_next_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonNextYear,
            innerHTML: "&raquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconYear(1);
            }
          })
        ])
      ]),
      c("div", {
        class: "pux_datepicker__calendar__content",
        role: "application"
      }, [
        c(Tv, {
          ref: "panelDate",
          id: this.id,
          style: this.panel !== "DATE" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "DATE"
          },
          tabindex: 0,
          value: this.value,
          dateFormat: this.dateFormat,
          calendarMonth: this.calendarMonth,
          calendarYear: this.calendarYear,
          startAt: this.startAt,
          endAt: this.endAt,
          firstDayOfWeek: this.firstDayOfWeek,
          disabledDate: this.isDisabledDate,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectDate,
          onHandleIconMonth: this.handleIconMonth
        }),
        c(Iv, {
          ref: "panelYear",
          id: this.id,
          style: this.panel !== "YEAR" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "YEAR"
          },
          value: this.value,
          disabledYear: this.isDisabledYear,
          firstYear: this.firstYear,
          onSelect: this.selectYear,
          onHandleIconYear: this.handleIconYear
        }),
        c(xv, {
          ref: "panelMonth",
          id: this.id,
          style: this.panel !== "MONTH" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "MONTH"
          },
          value: this.value,
          disabledMonth: this.isDisabledMonth,
          calendarYear: this.calendarYear,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectMonth,
          onHandleIconYear: this.handleIconYear
        }),
        c(Cv, {
          ref: "panelTime",
          id: this.id,
          style: this.panel !== "TIME" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "TIME"
          },
          minuteStep: this.minuteStep,
          value: this.value,
          disabledTime: this.isDisabledTime,
          timeType: this.timeType,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectTime
        })
      ])
    ]);
  }
}, zH = {
  name: "ADatepickerIcon",
  computed: {
    svgHtml() {
      return `<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 200 200" class="a_datepicker__calendar_icon">
        <rect x="13" y="29" rx="14" ry="14" width="174" height="158" fill="transparent"></rect> 
        <line x1="46" x2="46" y1="8" y2="50"></line> <line x1="154" x2="154" y1="8" y2="50"></line> 
        <line x1="13" x2="187" y1="70" y2="70"></line> 
        <text x="50%" y="135" font-size="90" stroke-width="1" text-anchor="middle" dominant-baseline="middle">${this.todayInDayFormat}</text>
      </svg>`;
    },
    todayInDayFormat() {
      return (/* @__PURE__ */ new Date()).getDate();
    }
  },
  render() {
    return c("span", {
      ariaHidden: !0,
      innerHTML: this.svgHtml
    });
  }
}, Dp = {
  props: {
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => mt("a_ui_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      required: !1
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ]
};
function KH(e, {
  currentLanguage: t = d(() => ({})),
  popupVisible: n = R(!1)
}) {
  const r = p(e, "extra"), a = p(e, "id"), s = p(e, "placeholder"), o = p(e, "range"), u = p(e, "type"), f = p(e, "width"), _ = d(() => yt(s.value) ? Kt({ placeholder: s.value, extra: r.value }) : o.value ? t.value.placeholder.dateRange : u.value === "time" ? t.value.placeholder.time : t.value.placeholder.date), m = d(() => `${a.value}_panel`), b = d(() => [
    `${m.value}_0`,
    `${m.value}_1`
  ]), v = d(() => `${!n.value}`), g = d(() => `${n.value}`), S = d(() => `${a.value}_calendar`), A = d(() => qn(f.value) || yt(f.value) && /^\d+$/.test(f.value) ? f.value + "px" : f.value), w = d(() => String(u.value).toLowerCase());
  return {
    ariaExpandedForCalendar: g,
    ariaHiddenForCalendar: v,
    idForCalendar: S,
    idForPanel: m,
    idsForPanelRange: b,
    innerPlaceholder: _,
    innerType: w,
    widthLocal: A
  };
}
function XH(e, { emit: t }, {
  calendarPanelRef: n = R(void 0),
  changeModel: r = () => {
  },
  closePopover: a = () => {
  },
  setCloseFocus: s = () => {
  }
}) {
  const o = p(e, "range"), u = p(e, "confirm"), f = p(e, "disabled"), _ = p(e, "modelValue"), m = p(e, "formatSave"), b = p(e, "editable"), v = p(e, "format"), g = p(e, "type"), S = R(o.value ? [null, null] : null), A = R(null), w = (Z) => !!wv(Z, v.value, m.value), T = (Z) => {
    try {
      return ue(Z, m.value).isValid() && ue(Z, m.value).format(v.value) || "";
    } catch {
      return "";
    }
  }, I = (Z) => {
    try {
      return !!ue(Z, m.value).isValid();
    } catch {
      return !1;
    }
  }, C = (Z) => $u(v.value) && typeof this.format.stringify == "function" ? v.value.stringify(Z) : Wu(Z, v.value), E = d(() => A.value !== null ? A.value : o.value ? "" : w(_.value) ? T(_.value) : ""), P = (Z, U) => Jf(Z) && Jf(U) && Z.getTime() === U.getTime(), M = (Z, U) => Array.isArray(Z) && Array.isArray(U) && Z.length === U.length && Z.every((se, pe) => P(se, U[pe])), k = (Z) => {
    const U = o.value ? "" : (
      // TODO: range this.currentValue.map(date2value)
      Wu(S.value, m.value)
    );
    r({
      model: U
    }), t(Z, U);
  }, F = (Z = !1) => u.value && !Z || f.value || (o.value ? M(_.value, S.value) : P(_.value, S.value)) ? !1 : (k("change"), !0), D = (Z) => {
    Z && Z.stopPropagation();
    const U = o.value ? [null, null] : null;
    S.value = U, F(!0), t("clear");
  }, W = (Z) => {
    S.value = Z, F() && a(), s();
  }, $ = (Z, U) => {
    S.value = Z, F() && U && a(), U && s();
  }, z = (Z) => {
    S.value[0] = Z, S.value[1] && F();
  }, ne = (Z) => {
    S.value[1] = Z, S.value[0] && F();
  }, Q = (Z) => {
    z(Z);
  }, ce = (Z) => {
    ne(Z);
  }, he = (Z) => $u(v.value) && typeof v.value.parse == "function" ? v.value.parse(Z) : wv(Z, v.value, m.value), ve = (Z) => {
    try {
      return ue(Z, v.value).isValid() && ue(Z, v.value).format() || null;
    } catch {
      return null;
    }
  }, me = (Z) => {
    try {
      return ue(Z, m.value).isValid() && ue(Z, m.value).format() || null;
    } catch {
      return null;
    }
  }, Ne = () => {
    if (b.value && A.value !== null) {
      let Z = E.value;
      const U = n.value.isDisabledTime;
      if (!Z) {
        D();
        return;
      }
      if (o.value)
        return;
      g.value === "time" && (Z = `${ue().format("DD.MM.YYYY")} ${Z}`);
      const se = ve(Z);
      if (se && !U(se, null, null)) {
        S.value = se, F(!0), a();
        return;
      }
      t("inputError", Z);
    }
  }, we = () => {
    n.value.setFocusToActivePanelFromParent();
  };
  return {
    clearDate: D,
    confirmDate: () => {
      (o.value ? jH(S.value) : qr(S.value)) && F(!0), k("confirm"), a();
    },
    currentValue: S,
    emitDate: k,
    handleChange: Ne,
    handleInput: (Z) => {
      A.value = Z.target.value;
    },
    handleKeydown: (Z) => {
      const U = Z.keyCode;
      U === X.tab || U === X.enter ? (Ne(), A.value = null, a()) : (U === X.arrowUp || U === X.arrowDown) && (we(), Z.stopPropagation(), Z.preventDefault());
    },
    onModelValueChange: (Z) => {
      o.value ? S.value = [null, null] : S.value = I(Z) ? me(Z) : null;
    },
    parse: he,
    selectDate: W,
    selectEndDate: ne,
    selectEndTime: ce,
    selectStartDate: z,
    selectStartTime: Q,
    selectTime: $,
    stringify: C,
    text: E,
    updateDate: F,
    userInput: A
  };
}
const ZH = {
  en: {
    days: [
      {
        shortName: "Sun",
        longName: "Sunday"
      },
      {
        shortName: "Mon",
        longName: "Monday"
      },
      {
        shortName: "Tue",
        longName: "Tuesday"
      },
      {
        shortName: "Wed",
        longName: "Wednesday"
      },
      {
        shortName: "Thu",
        longName: "Thursday"
      },
      {
        shortName: "Fri",
        longName: "Friday"
      },
      {
        shortName: "Sat",
        longName: "Saturday"
      }
    ],
    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    pickers: ["next 7 days", "next 30 days", "previous 7 days", "previous 30 days"],
    placeholder: {
      date: "Enter date in format DD.MM.YYYY",
      time: "Enter time in format HH:MM",
      dateRange: "Select Date Range",
      regionDate: "Date picker",
      regionTime: "Time picker"
    },
    today: "today",
    buttons: {
      lastYear: "Last year",
      lastYears: "Last 10 years",
      nextYear: "Next year",
      nextYears: "Next 10 years",
      lastMonth: "Last month",
      nextMonth: "Next month",
      monthsView: "Show detailed month view",
      toDaysView: "Switch to the day selection",
      toMonthsView: "Switch to the month selection",
      toYearsView: "switch to the selection of the years"
    },
    hours: "Hours",
    minutes: "Minutes",
    seconds: "Seconds",
    headerYears: (e, t) => `${e} to ${t}`
  },
  ru: {
    days: [
      {
        shortName: "Вс",
        longName: "Воскресенье"
      },
      {
        shortName: "Пн",
        longName: "Понедельник"
      },
      {
        shortName: "Вт",
        longName: "Вторник"
      },
      {
        shortName: "Ср",
        longName: "Среда"
      },
      {
        shortName: "Чт",
        longName: "Четверг"
      },
      {
        shortName: "Пт",
        longName: "Пятница"
      },
      {
        shortName: "Сб",
        longName: "Суббота"
      }
    ],
    months: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
    pickers: ["след. 7 дней", "след. 30 дней", "прош. 7 дней", "прош. 30 дней"],
    placeholder: {
      date: "Введите дату в формате ДД.ММ.ГГГГ",
      time: "Enter время in format ЧЧ.ММ",
      dateRange: "Выберите период",
      regionDate: "Выбор даты",
      regionTime: "Выбор времени"
    },
    today: "Сегодня",
    buttons: {
      lastYear: "Предыдущий год",
      lastYears: "Предыдущие 10 лет",
      nextYear: "Следующий год",
      nextYears: "Следующие 10 лет",
      lastMonth: "Предыдущий месяц",
      nextMonth: "Следующий месяц",
      toDaysView: "Перейти к выбору дня",
      toMonthsView: "Перейти к выбору месяца",
      toYearsView: "Перейти к выбору года"
    },
    hours: "Часы",
    minutes: "Минуты",
    seconds: "Секунды",
    headerYears: (e, t) => `с ${e} по ${t}`
  },
  de: {
    days: [
      {
        shortName: "So",
        longName: "Sontag"
      },
      {
        shortName: "Mo",
        longName: "Montag"
      },
      {
        shortName: "Di",
        longName: "Dienstag"
      },
      {
        shortName: "Mi",
        longName: "Mittwoch"
      },
      {
        shortName: "Do",
        longName: "Donnerstag"
      },
      {
        shortName: "Fr",
        longName: "Freitag"
      },
      {
        shortName: "Sa",
        longName: "Samstag"
      }
    ],
    months: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
    pickers: ["nächste 7 Tage", "nächste 30 Tage", "vorige 7 Tage", "vorige 30 Tage"],
    placeholder: {
      date: "Datum im Format TT.MM.JJJJ eingeben",
      time: "Zeit im Format HH.MM eingeben",
      dateRange: "Zeitraum auswählen",
      regionDate: "Datumsauswahl",
      regionTime: "Zeitauswahl"
    },
    today: "Heute",
    buttons: {
      lastYear: "Voriges Jahr",
      lastYears: "Vorige 10 Jahre",
      nextYear: "Nächstes Jahr",
      nextYears: "Nächste 10 Jahre",
      lastMonth: "Voriger Monat",
      nextMonth: "Nächster Monat",
      toDaysView: "Zur Auswahl der Tage wechseln",
      toMonthsView: "Zur Auswahl der Monate wechseln",
      toYearsView: "Zur Auswahl der Jahre wechseln"
    },
    hours: "Stunden",
    minutes: "Minuten",
    seconds: "Sekunden",
    headerYears: (e, t) => `${e} bis ${t}`
  }
};
function JH(e) {
  const t = p(e, "languages"), n = p(e, "lang"), r = d(() => ({
    ...ZH,
    ...t.value
  }));
  return {
    currentLanguage: d(() => r.value[n.value])
  };
}
function QH(e, {
  calendarRef: t = R(void 0),
  focusByCloseRef: n = R(void 0),
  inputRef: r = R(void 0)
}) {
  const a = p(e, "placement"), s = p(e, "disabled"), o = R(void 0), u = R(void 0), f = () => {
    document.addEventListener("click", A);
  }, _ = () => {
    document.removeEventListener("click", A);
  }, m = () => {
    !o.value && !s.value && r.value && t.value && (o.value = Xl(
      r.value,
      t.value,
      () => {
        t.value && r.value && Ql(
          r.value,
          t.value,
          {
            placement: a.value,
            middleware: [
              Jl(),
              Zl({ limiter: od() })
            ]
          }
        ).then(({ x: w, y: T }) => {
          Object.assign(t.value.style, {
            left: `${w}px`,
            top: `${T}px`
          });
        });
      }
    ), setTimeout(() => {
      f();
    }, 300));
  }, b = () => {
    n.value && n.value.focus && n.value.focus();
  }, v = () => {
    o.value && (o.value(), o.value = void 0);
  }, g = (w) => {
    _(), v(), u.value = !1, w && b();
  }, S = () => {
    u.value = !0;
  };
  function A(w) {
    t.value.contains(w.target) || g();
  }
  return Gv(() => {
    v(), _();
  }), {
    closePopover: g,
    destroyPopover: v,
    initCalendar: S,
    openPopoverWithFloatingUi: m,
    popupVisible: u,
    setCloseFocus: b
  };
}
function e$() {
  const e = R(void 0), t = R(void 0), n = R(void 0), r = R(void 0), a = R(void 0);
  return {
    calendarRef: e,
    calendarPanelRef: t,
    calendarPanel2Ref: n,
    focusByCloseRef: a,
    inputRef: r
  };
}
const pf = {
  date: {
    value2date: (e) => qr(e) ? new Date(e) : null,
    date2value: (e) => e
  },
  timestamp: {
    value2date: (e) => qr(e) ? new Date(e) : null,
    date2value: (e) => e && new Date(e).getTime()
  }
}, Uu = {
  name: "ADatepicker",
  mixins: [
    Dp
  ],
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    appendToBody: {
      type: Boolean,
      default: !1
    },
    clearable: {
      type: Boolean,
      default: !0
    },
    confirm: {
      type: Boolean,
      default: !1
    },
    confirmText: {
      type: String,
      default: "OK"
    },
    dateFormat: {
      type: String,
      // format the time header and date tooltip
      default: void 0
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    editable: {
      type: Boolean,
      default: !0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    firstDayOfWeek: {
      type: Number,
      required: !1,
      default: 1,
      validator: (e) => e >= 1 && e <= 7
    },
    format: {
      type: [String, Object],
      default: "DD.MM.YYYY"
    },
    formatSave: {
      type: String,
      required: !1,
      default: "YYYY-MM-DD"
    },
    iconDay: {
      type: [Number, String],
      default: void 0
    },
    inputAttr: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: "pux_datepicker__input"
    },
    inputName: {
      type: String,
      default: "date"
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !1
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    lang: {
      type: String,
      default: "de",
      required: !1
    },
    languages: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: void 0
    },
    placeholder: {
      type: String,
      default: null
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => Ur.indexOf(e) !== -1
    },
    popupStyle: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    range: {
      type: Boolean,
      default: !1
    },
    rangeSeparator: {
      type: String,
      default: "~"
    },
    shortcuts: {
      type: [Boolean, Array],
      default: !0
    },
    type: {
      type: String,
      default: "date"
      // ["date", "datetime"] zendy added "month", "year", mxie added "time"
    },
    valueType: {
      default: "format",
      validator: function(e) {
        return ["timestamp", "format", "date"].indexOf(e) !== -1 || $u(e);
      }
    },
    width: {
      type: [String, Number],
      default: null
    }
  },
  emits: [
    "blur",
    "change",
    "clear",
    "confirm",
    "focus",
    "input",
    "inputError",
    "changeCalendarMonth",
    "changeCalendarYear"
  ],
  setup(e, t) {
    const n = p(e, "modelValue"), {
      attributesToExcludeFromRender: r
    } = zt(e), {
      calendarRef: a,
      calendarPanelRef: s,
      calendarPanel2Ref: o,
      focusByCloseRef: u,
      inputRef: f
    } = e$(), {
      componentStyleHide: _
    } = dn(e), {
      ariaDescribedbyLocal: m,
      changeModel: b,
      clearModel: v,
      errorsId: g,
      helpTextId: S,
      htmlIdLocal: A,
      isErrors: w,
      isModel: T,
      onBlur: I,
      onFocus: C
    } = An(e, t), {
      isAutofill: E
    } = _p({ inputRef: f }), {
      currentLanguage: P
    } = JH(e), {
      closePopover: M,
      destroyPopover: k,
      initCalendar: F,
      openPopoverWithFloatingUi: D,
      popupVisible: W,
      setCloseFocus: $
    } = QH(e, {
      calendarRef: a,
      focusByCloseRef: u,
      inputRef: f
    }), {
      ariaExpandedForCalendar: z,
      ariaHiddenForCalendar: ne,
      idForCalendar: Q,
      idForPanel: ce,
      idsForPanelRange: he,
      innerPlaceholder: ve,
      innerType: me,
      widthLocal: Ne
    } = KH(e, {
      currentLanguage: P,
      popupVisible: W
    }), {
      clearDate: we,
      confirmDate: oe,
      currentValue: xe,
      emitDate: re,
      handleChange: Re,
      handleInput: Z,
      handleKeydown: U,
      onModelValueChange: se,
      parse: pe,
      selectDate: Ie,
      selectEndDate: He,
      selectEndTime: Ke,
      selectStartDate: Je,
      selectStartTime: ut,
      selectTime: Ee,
      stringify: Qe,
      text: At,
      updateDate: Fe,
      userInput: ft
    } = XH(e, t, {
      calendarPanelRef: s,
      changeModel: b,
      closePopover: M,
      setCloseFocus: $
    }), Dt = () => {
      f.value && f.value.blur();
    };
    return st(n, se, {
      immediate: !0
    }), {
      ariaDescribedbyLocal: m,
      ariaExpandedForCalendar: z,
      ariaHiddenForCalendar: ne,
      attributesToExcludeFromRender: r,
      blur: Dt,
      calendarPanel2Ref: o,
      calendarPanelRef: s,
      calendarRef: a,
      changeModel: b,
      clearDate: we,
      clearModel: v,
      parse: pe,
      closePopover: M,
      componentStyleHide: _,
      confirmDate: oe,
      stringify: Qe,
      currentLanguage: P,
      currentValue: xe,
      destroyPopover: k,
      emitDate: re,
      errorsId: g,
      text: At,
      focusByCloseRef: u,
      handleChange: Re,
      handleInput: Z,
      handleKeydown: U,
      helpTextId: S,
      htmlIdLocal: A,
      idForCalendar: Q,
      idForPanel: ce,
      idsForPanelRange: he,
      initCalendar: F,
      innerPlaceholder: ve,
      innerType: me,
      inputRef: f,
      isAutofill: E,
      isErrors: w,
      isModel: T,
      onBlur: I,
      onFocus: C,
      openPopoverWithFloatingUi: D,
      popupVisible: W,
      selectDate: Ie,
      selectEndDate: He,
      selectEndTime: Ke,
      selectStartDate: Je,
      selectStartTime: ut,
      selectTime: Ee,
      setCloseFocus: $,
      updateDate: Fe,
      userInput: ft,
      widthLocal: Ne
    };
  },
  computed: {
    transform() {
      const e = this.valueType;
      return $u(e) ? { ...pf.date, ...e } : e === "format" ? {
        value2date: this.parse.bind(this),
        date2value: this.stringify.bind(this)
      } : pf[e] || pf.date;
    },
    showClearIcon() {
      return !this.disabled && this.clearable && this.text;
    },
    innerShortcuts() {
      if (Array.isArray(this.shortcuts))
        return this.shortcuts;
      if (this.shortcuts === !1)
        return [];
      const e = this.currentLanguage.pickers;
      return [
        {
          text: e[0],
          onClick(n) {
            n.currentValue = [/* @__PURE__ */ new Date(), new Date(Date.now() + 3600 * 1e3 * 24 * 7)], n.updateDate(!0);
          }
        },
        {
          text: e[1],
          onClick(n) {
            n.currentValue = [/* @__PURE__ */ new Date(), new Date(Date.now() + 3600 * 1e3 * 24 * 30)], n.updateDate(!0);
          }
        },
        {
          text: e[2],
          onClick(n) {
            n.currentValue = [new Date(Date.now() - 3600 * 1e3 * 24 * 7), /* @__PURE__ */ new Date()], n.updateDate(!0);
          }
        },
        {
          text: e[3],
          onClick(n) {
            n.currentValue = [new Date(Date.now() - 3600 * 1e3 * 24 * 30), /* @__PURE__ */ new Date()], n.updateDate(!0);
          }
        }
      ];
    },
    innerDateFormat() {
      return this.dateFormat ? this.dateFormat : typeof this.format != "string" ? "YYYY-MM-DD" : this.innerType === "date" ? this.format : this.format.replace(/[Hh]+.*[msSaAZ]|\[.*?\]/g, "").trim() || "YYYY-MM-DD";
    }
  },
  watch: {
    popupVisible(e) {
      e ? this.initCalendar() : (this.userInput = null, this.blur());
    }
  },
  methods: {
    isValidValue(e) {
      const { value2date: t } = this.transform;
      return qr(t(e));
    },
    isValidRangeValue(e) {
      const { value2date: t } = this.transform;
      return Array.isArray(e) && e.length === 2 && this.isValidValue(e[0]) && this.isValidValue(e[1]) && t(e[1]).getTime() >= t(e[0]).getTime();
    },
    selectRange(e) {
      typeof e.onClick == "function" ? e.onClick(this) !== !1 && this.closePopover() : (this.currentValue = [new Date(e.start), new Date(e.end)], this.updateDate(!0), this.closePopover());
    },
    handleBlur(e) {
      this.$emit("blur", e);
    },
    handleFocus(e) {
      this.initCalendar(), this.$emit("focus", e);
    }
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      class: "a_form_element__container",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel || this.isAutofill
        }]
      }, [
        this.label && c(tn, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: this.isLabelFloat,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            class: ["pux_datepicker", {
              pux_datepicker_range: this.range,
              disabled: this.disabled
            }],
            style: { width: this.widthLocal },
            onMousedown: this.initCalendar,
            onTouchstart: this.initCalendar
          }, [
            c("div", {
              class: "pux_datepicker__input_wrapper",
              role: "application"
            }, [
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                class: [
                  "a_form_control pux_datepicker__input",
                  this.inputClass,
                  {
                    a_form_control_invalid: this.isErrors
                  }
                ],
                name: this.inputName,
                type: "text",
                autocomplete: "off",
                disabled: this.disabled,
                readonly: !this.editable,
                value: this.text,
                placeholder: this.innerPlaceholder,
                ariaHaspopup: !0,
                "aria-owns": this.idForCalendar,
                ...this.inputAttr,
                onKeydown: this.handleKeydown,
                onFocus: this.handleFocus,
                onBlur: this.handleBlur,
                onInput: this.handleInput,
                onChange: this.handleChange
              }),
              this.showClearIcon && c("span", {
                class: "pux_datepicker__input_wrapper__append pux_datepicker__input_wrapper__clear_wrapper",
                ariaHidden: !0,
                onMousedown: this.clearDate
              }, [
                c("i", {
                  class: "pux_datepicker__input__icon pux_datepicker__input__clear_icon"
                })
              ]),
              c("span", {
                class: "pux_datepicker__input_wrapper__append"
              }, [
                c(zH)
              ])
            ]),
            c(fa, {
              to: "body"
            }, [
              this.popupVisible && Ft(c("div", {
                ref: "calendarRef",
                id: this.idForCalendar,
                class: "pux_datepicker__popup",
                ariaHidden: this.ariaHiddenForCalendar,
                ariaExpanded: this.ariaExpandedForCalendar,
                style: this.popupStyle
              }, [
                !!(this.range && this.innerShortcuts.length) && c("div", {
                  class: "pux_datepicker__shortcuts_wrapper"
                }, [
                  this.innerShortcuts.map((e, t) => c("button", {
                    key: t,
                    class: "pux_datepicker__shortcuts_wrapper__shortcuts",
                    type: "button",
                    onClick: () => this.selectRange(e)
                  }, e.text))
                ]),
                this.range ? c("div", {
                  class: "pux_datepicker__range_wrapper"
                }, [
                  c(hf, {
                    ref: "calendarPanelRef",
                    id: this.idsForPanelRange[0],
                    style: "box-shadow: 1px 0 rgba(0, 0, 0, .1);",
                    index: 0,
                    type: this.innerType,
                    dateFormat: this.innerDateFormat,
                    value: this.currentValue[0],
                    endAt: this.currentValue[1],
                    startAt: null,
                    visible: this.popupVisible,
                    currentLanguage: this.currentLanguage,
                    firstDayOfWeek: this.firstDayOfWeek,
                    onSelectDate: this.selectStartDate,
                    onSelectTime: this.selectStartTime,
                    onClosePopup: this.closePopover
                  }),
                  c(hf, {
                    ref: "calendarPanel2Ref",
                    id: this.idsForPanelRange[1],
                    index: 1,
                    type: this.innerType,
                    dateFormat: this.innerDateFormat,
                    value: this.currentValue[1],
                    endAt: null,
                    startAt: this.currentValue[0],
                    visible: this.popupVisible,
                    currentLanguage: this.currentLanguage,
                    firstDayOfWeek: this.firstDayOfWeek,
                    onSelectDate: this.selectEndDate,
                    onSelectTime: this.selectEndTime,
                    onClosePopup: this.closePopover
                  })
                ]) : c(hf, {
                  ref: "calendarPanelRef",
                  id: this.idForPanel,
                  index: -1,
                  type: this.innerType,
                  dateFormat: this.innerDateFormat,
                  value: this.currentValue,
                  visible: this.popupVisible,
                  currentLanguage: this.currentLanguage,
                  firstDayOfWeek: this.firstDayOfWeek,
                  onSelectDate: this.selectDate,
                  onSelectTime: this.selectTime,
                  onClosePopup: this.closePopover
                }),
                this.confirm && c("div", {
                  class: "pux_datepicker__footer"
                }, [
                  c("button", {
                    class: "pux_datepicker__footer__btn pux_datepicker__footer__btn_confirm",
                    type: "button",
                    onClick: this.confirmDate
                  }, this.confirmText)
                ])
              ]), [
                [Dl, {
                  mounted: this.openPopoverWithFloatingUi
                }]
              ])
            ]),
            c("div", {
              ref: "focusByCloseRef",
              ariaHidden: !0,
              tabindex: -1
            })
          ])
          // this.isClearButtonLocal && h(AFormElementBtnClear, {
          //   disabled: this.disabled,
          //   clearButtonClass: this.clearButtonClass,
          //   onClear: this.clearModel,
          // }),
        ]),
        c(Sn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(gn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function t$({
  idFrom: e = d(() => "")
}) {
  return {
    setFocusToFromInput: () => {
      const n = document.getElementById(e.value);
      n && n.focus();
    }
  };
}
function n$({
  htmlIdLocal: e = d(() => "")
}) {
  const t = d(() => `${e.value}_from`), n = d(() => `${e.value}_until`);
  return {
    idFrom: t,
    idUntil: n
  };
}
function r$(e, {
  htmlIdLocal: t = d(() => ""),
  idFrom: n = d(() => ""),
  idUntil: r = d(() => "")
}) {
  const a = p(e, "inputAttributes"), s = p(e, "inputAttributesFrom"), o = p(e, "inputAttributesUntil"), u = d(() => `${t.value}_label`), f = d(() => ({
    "aria-labelledby": `${u.value} ${n.value}`,
    ...a.value,
    ...s.value
  })), _ = d(() => ({
    "aria-labelledby": `${u.value} ${r.value}`,
    ...a.value,
    ...o.value
  }));
  return {
    inputAttributesFromLocal: f,
    inputAttributesUntilLocal: _
  };
}
function a$(e, {
  changeModel: t = () => ({})
}) {
  const n = p(e, "keyFrom"), r = p(e, "keyUntil"), a = p(e, "modelValue"), s = d(() => {
    var _;
    return (_ = a.value) == null ? void 0 : _[n.value];
  }), o = d(() => {
    var _;
    return (_ = a.value) == null ? void 0 : _[r.value];
  });
  return {
    changeModelFrom: (_) => {
      const m = Se(a.value) || {};
      m[n.value] = _, t({ model: m });
    },
    changeModelUntil: (_) => {
      const m = Se(a.value) || {};
      m[r.value] = _, t({ model: m });
    },
    modelValueFrom: s,
    modelValueUntil: o
  };
}
function Pp({
  htmlIdLocal: e = d(() => ""),
  clickLabel: t = () => {
  }
}) {
  const n = d(() => gS(e.value)), r = () => {
    t();
  };
  return {
    destroyEventBusClickLabel: () => {
      Ht.$off(n.value, r);
    },
    initEventBusClickLabel: () => {
      Ht.$on(n.value, r);
    }
  };
}
const i$ = {
  name: "ADatepickerRange",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    appendToBody: {
      type: Boolean,
      default: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearable: {
      type: Boolean,
      default: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    disabledFrom: {
      type: Boolean,
      required: !1
    },
    disabledUntil: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    firstDayOfWeek: {
      type: Number,
      required: !1,
      default: 1,
      validator: (e) => e >= 1 && e <= 7
    },
    format: {
      type: [String, Object],
      default: "DD.MM.YYYY"
    },
    formatSave: {
      type: String,
      required: !1,
      default: "YYYY-MM-DD"
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconDay: {
      type: [Number, String],
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => mt("a_datepicker_range_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesFrom: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesUntil: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: "pux_datepicker__input"
    },
    inputName: {
      type: String,
      default: "date"
    },
    inputWidth: {
      type: [Number, String],
      required: !1,
      default: 270
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyFrom: {
      tpe: String,
      required: !1,
      default: "from"
    },
    keyUntil: {
      tpe: String,
      required: !1,
      default: "until"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelFrom: {
      type: String,
      required: !1,
      default: "_A_DATEPICKER_RANGE_FROM_"
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    labelUntil: {
      type: String,
      required: !1,
      default: "_A_DATEPICKER_RANGE_UNTIL_"
    },
    lang: {
      type: String,
      default: "de",
      required: !1
    },
    modelUndefined: {
      required: !1,
      default: void 0
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholderFrom: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholderUntil: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => Ur.indexOf(e) !== -1
    },
    popupStyle: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    shortcuts: {
      type: [Boolean, Array],
      default: !0
    },
    type: {
      type: String,
      required: !1,
      default: "dateRange"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = zt(e), {
      componentStyleHide: r
    } = dn(e), {
      changeModel: a,
      errorsId: s,
      helpTextId: o,
      htmlIdLocal: u,
      isErrors: f
    } = An(e, t), {
      changeModelFrom: _,
      changeModelUntil: m,
      modelValueFrom: b,
      modelValueUntil: v
    } = a$(e, {
      changeModel: a
    }), {
      idFrom: g,
      idUntil: S
    } = n$({
      htmlIdLocal: u
    }), {
      inputAttributesFromLocal: A,
      inputAttributesUntilLocal: w
    } = r$(e, {
      htmlIdLocal: u,
      idFrom: g,
      idUntil: S
    }), {
      setFocusToFromInput: T
    } = t$({
      idFrom: g
    }), {
      destroyEventBusClickLabel: I,
      initEventBusClickLabel: C
    } = Pp({
      htmlIdLocal: u,
      clickLabel: T
    });
    return C(), Bt(() => {
      I();
    }), {
      attributesToExcludeFromRender: n,
      changeModelFrom: _,
      changeModelUntil: m,
      componentStyleHide: r,
      errorsId: s,
      helpTextId: o,
      idFrom: g,
      idUntil: S,
      inputAttributesFromLocal: A,
      inputAttributesUntilLocal: w,
      isErrors: f,
      modelValueFrom: b,
      modelValueUntil: v
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      class: "a_datepicker_range",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_invalid: this.isErrors
        }]
      }, [
        this.label && c(tn, {
          id: this.idFrom,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: !1,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_datepicker_range__content"
        }, [
          c("div", {
            class: "a_datepicker_range__group a_datepicker_range__group_min"
          }, [
            c(tn, {
              id: this.idFrom,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_datepicker_range__label a_datepicker_range__label_min",
              isLabelFloat: !1,
              label: this.labelFrom,
              isError: this.isErrors
            }),
            c(Uu, {
              id: this.idFrom,
              ref: "from",
              alwaysTranslate: this.alwaysTranslate,
              inputAttr: this.inputAttributesFromLocal,
              modelValue: this.modelValueFrom,
              formatSave: this.formatSave,
              firstDayOfWeek: this.firstDayOfWeek,
              appendToBody: this.appendToBody,
              popupStyle: this.popupStyle,
              iconDay: this.iconDay,
              inputName: this.inputName,
              placement: this.placement,
              clearable: this.clearable,
              shortcuts: this.shortcuts,
              lang: this.lang,
              inputClass: this.inputClass,
              placeholder: this.placeholderFrom,
              disabled: this.disabled || this.disabledFrom,
              width: this.inputWidth,
              format: this.format,
              type: "date",
              onChange: this.changeModelFrom
            })
          ]),
          c("div", {
            class: "a_datepicker_range__group"
          }, [
            c(tn, {
              id: this.idUntil,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_datepicker_range__label a_datepicker_range__label_max",
              isLabelFloat: !1,
              label: this.labelUntil,
              isError: this.isErrors
            }),
            c(Uu, {
              id: this.idUntil,
              ref: "until",
              alwaysTranslate: this.alwaysTranslate,
              modelValue: this.modelValueUntil,
              formatSave: this.formatSave,
              firstDayOfWeek: this.firstDayOfWeek,
              appendToBody: this.appendToBody,
              popupStyle: this.popupStyle,
              iconDay: this.iconDay,
              inputName: this.inputName,
              placement: this.placement,
              clearable: this.clearable,
              shortcuts: this.shortcuts,
              lang: this.lang,
              inputClass: this.inputClass,
              placeholder: this.placeholderUntil,
              disabled: this.disabled || this.disabledUntil,
              width: this.inputWidth,
              format: this.format,
              type: "date",
              inputAttr: this.inputAttributesUntilLocal,
              onChange: this.changeModelUntil
            })
          ]),
          c(Sn, {
            alwaysTranslate: this.alwaysTranslate,
            class: "a_datepicker_range__help_text",
            id: this.helpTextId,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(gn, {
            id: this.errorsId,
            alwaysTranslate: this.alwaysTranslate,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
};
function s$(e, {
  isOpen: t = R(!1)
}) {
  const n = p(e, "btnIconLeftLess"), r = p(e, "btnIconLeftMore"), a = p(e, "btnIconRightLess"), s = p(e, "btnIconRightMore"), o = p(e, "btnTextLess"), u = p(e, "btnTextMore"), f = p(e, "btnTitleLess"), _ = p(e, "btnTitleMore"), m = p(e, "showLess"), b = R(void 0), v = d(() => t.value ? o.value : u.value), g = d(() => t.value ? f.value : _.value), S = d(() => t.value ? n.value : r.value), A = d(() => t.value ? a.value : s.value), w = d(() => t.value ? m.value : !0);
  return {
    btnIconLeft: S,
    btnIconRight: A,
    btnText: v,
    btnTitle: g,
    buttonRef: b,
    isButtonVisible: w
  };
}
function l$(e) {
  const t = p(e, "isOpenDefault");
  return {
    isOpen: R(t.value)
  };
}
function o$(e, {
  isOpen: t = R(!1)
}) {
  const n = p(e, "htmlLess"), r = p(e, "htmlMore"), a = p(e, "safeHtmlLess"), s = p(e, "safeHtmlMore"), o = p(e, "textLess"), u = p(e, "textMore"), f = d(() => t.value ? r.value : n.value), _ = d(() => t.value ? s.value : a.value), m = d(() => t.value ? u.value : o.value), b = d(() => !!(m.value || _.value || f.value));
  return {
    htmlLocal: f,
    isTextOrHtmlVisible: b,
    safeHtmlLocal: _,
    textLocal: m
  };
}
const u$ = [
  "a[href]:not([tabindex='-1'])",
  "button:not([disabled]):not([tabindex='-1'])",
  "area[href]:not([tabindex='-1'])",
  "input:not([disabled]):not([tabindex='-1'])",
  "select:not([disabled]):not([tabindex='-1'])",
  "textarea:not([disabled]):not([tabindex='-1'])",
  "iframe:not([tabindex='-1'])",
  "[tabindex]:not([tabindex='-1'])",
  "[contentEditable=true]:not([tabindex='-1'])"
], Os = u$.join(", ");
function ka({ element: e, selector: t }) {
  const n = e || document.querySelector(t);
  n && (n.hasAttribute("tabindex") ? n.focus() : (n.setAttribute("tabindex", "-1"), n.focus(), n.removeAttribute("tabindex")));
}
function ZS(e) {
  const t = e.getBoundingClientRect();
  return t.width > 0 && t.height > 0;
}
function d$({ element: e } = {}) {
  const t = document.querySelectorAll(Os), n = e || document.activeElement, r = Array.from(t).indexOf(n);
  if (r !== -1) {
    let a = r + 1;
    a >= t.length && (a = 0);
    let s = t[a];
    for (; a < t.length && !ZS(s); )
      a++, a >= t.length && (a = 0), s = t[a];
    a < t.length && s.focus();
  }
}
function c$({ element: e } = {}) {
  const t = document.querySelectorAll(Os), n = e || document.activeElement, r = Array.from(t).indexOf(n);
  if (r !== -1) {
    let a = r - 1;
    a < 0 && (a = t.length - 1);
    let s = t[a];
    for (; a >= 0 && !ZS(s); )
      a--, a < 0 && (a = t.length - 1), s = t[a];
    a >= 0 && s.focus();
  }
}
function f$(e, { emit: t }, {
  isOpen: n = R(!1)
}) {
  const r = R(void 0);
  return {
    containerRef: r,
    toggleButton: () => {
      n.value = !n.value, t("toggle", { isOpen: n.value }), n.value && !window.isScrollDisabled && Yu().then(
        () => ka({
          element: r.value
        })
      );
    }
  };
}
const xU = {
  name: "ADisclosure",
  inheritAttrs: !0,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    btnAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link a_p_0"
    },
    btnIconLeftLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconLeftMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnId: {
      type: String,
      required: !1,
      default: void 0
    },
    btnParentClass: {
      type: String,
      required: !1,
      default: "a_text_center"
    },
    btnTextLess: {
      type: String,
      required: !1,
      default: "_A_DISCLOSURE_LESS_"
    },
    btnTextMore: {
      type: String,
      required: !1,
      default: "_A_DISCLOSURE_MORE_"
    },
    btnTitleLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitleMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitlePlacement: {
      type: String,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    htmlLess: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlMore: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => mt("a_disclosure_")
    },
    isBtnTitleHtml: {
      type: Boolean,
      required: !1
    },
    isOpenDefault: {
      type: Boolean,
      required: !1,
      default: !1
    },
    safeHtmlLess: {
      type: String,
      required: !1,
      default: void 0
    },
    safeHtmlMore: {
      type: String,
      required: !1,
      default: void 0
    },
    showLess: {
      type: Boolean,
      required: !1,
      default: !0
    },
    textLess: {
      type: String,
      required: !1,
      default: void 0
    },
    textMore: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      isOpen: r
    } = l$(e), {
      htmlLocal: a,
      isTextOrHtmlVisible: s,
      safeHtmlLocal: o,
      textLocal: u
    } = o$(e, {
      isOpen: r
    }), {
      containerRef: f,
      toggleButton: _
    } = f$(e, t, {
      isOpen: r
    }), {
      btnIconLeft: m,
      btnIconRight: b,
      btnText: v,
      btnTitle: g,
      buttonRef: S,
      isButtonVisible: A
    } = s$(e, {
      isOpen: r
    });
    return n({
      buttonRef: S,
      containerRef: f,
      isOpen: r,
      toggleButton: _
    }), {
      btnIconLeft: m,
      btnIconRight: b,
      btnText: v,
      btnTitle: g,
      buttonRef: S,
      containerRef: f,
      htmlLocal: a,
      isButtonVisible: A,
      isOpen: r,
      isTextOrHtmlVisible: s,
      safeHtmlLocal: o,
      textLocal: u,
      toggleButton: _
    };
  },
  render() {
    return c("div", {
      class: [
        "a_show_more",
        {
          a_show_more_open: this.isOpen
        }
      ]
    }, [
      c("div", {
        class: "a_show_more__wrapper"
      }, [
        c("div", {
          ref: "containerRef",
          id: this.id,
          ariaExpanded: this.isOpen,
          ...this.$attrs
        }, [
          this.isTextOrHtmlVisible && c(be, {
            alwaysTranslate: this.alwaysTranslate,
            html: this.htmlLocal,
            safeHtml: this.safeHtmlLocal,
            tag: "div",
            text: this.textLocal
          }),
          this.isOpen ? this.$slots.more && this.$slots.more({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          }) : this.$slots.less && this.$slots.less({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          })
        ])
      ]),
      this.isButtonVisible && c("div", {
        class: this.btnParentClass
      }, [
        c(Oe, {
          ref: "buttonRef",
          id: this.btnId,
          alwaysTranslate: this.alwaysTranslate,
          "aria-controls": this.id,
          class: [
            "a_show_more__button",
            this.btnClass
          ],
          disabled: this.disabled,
          iconLeft: this.btnIconLeft,
          iconRight: this.btnIconRight,
          isTitleHtml: this.isBtnTitleHtml,
          text: this.btnText,
          title: this.btnTitle,
          titlePlacement: this.btnTitlePlacement,
          type: "button",
          ...this.btnAttributes,
          onClick: this.toggleButton
        }, () => this.$slots.button && this.$slots.button({
          isButtonVisible: this.isButtonVisible,
          isOpen: this.isOpen
        }))
      ])
    ]);
  }
}, Od = {
  name: "ALink",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    href: {
      type: String,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => mt("a_link_")
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    target: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Ur.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => yt(e) ? e === "auto" : hi(e)
    },
    to: {
      type: [Object, String],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      clickEmit: n
    } = Tg(e, t);
    return {
      clickEmit: n
    };
  },
  render() {
    return c(Oe, {
      ...this.$attrs,
      ...this.$props,
      type: "link",
      onClick: this.clickEmit
    }, this.$slots);
  }
};
function h$(e) {
  const t = p(e, "action");
  return {
    attributesAction: d(() => {
      const r = {
        ...t.value,
        isHiddenCallback: void 0,
        classReplace: void 0
      };
      return t.value.classReplace ? r.class = t.value.classReplace : yt(r.class) ? r.class += " a_dropdown__item" : dt(r.class) ? r.class.a_dropdown__item = !0 : r.class = "a_dropdown__item", r.type === "link" && (r.type = void 0), r;
    })
  };
}
const p$ = {
  name: "ADropdownAction",
  props: {
    action: {
      type: Object,
      required: !0
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      attributesAction: t
    } = h$(e);
    return {
      attributesAction: t
    };
  },
  render() {
    return this.action.type === "button" ? c("li", {
      class: this.action.liClass
    }, [
      c(ct, {
        ...this.attributesAction,
        alwaysTranslate: this.alwaysTranslate,
        isHidden: void 0,
        callback: void 0,
        classButton: void 0,
        classExtra: void 0,
        isConfirm: void 0,
        callbackLocal: void 0,
        onClick: this.action.callback
      })
    ]) : this.action.type === "divider" ? c("li", {
      class: [
        "a_dropdown__divider",
        this.action.liClass
      ]
    }) : this.action.type === "link" ? c("li", {
      class: this.action.liClass
    }, [
      c(Od, {
        ...this.attributesAction,
        alwaysTranslate: this.alwaysTranslate,
        classButton: void 0,
        classExtra: void 0,
        isHidden: void 0,
        isConfirm: void 0,
        callbackLocal: void 0
      })
    ]) : this.action.type === "template" && this.action.slotName && this.$slots[this.action.slotName] ? this.$slots[this.action.slotName]({
      action: this.action
    }) : null;
  }
};
function JS({ actions: e }) {
  const t = Gt(e, (a) => !a.isHidden), n = [];
  Y(t, (a) => {
    (a.type !== "divider" || n.length > 0 && Is(n).type !== "divider") && n.push(a);
  });
  const r = Is(n);
  return r && r.type === "divider" && n.pop(), n;
}
function Su({ class1: e, class2: t, defaultValue: n = void 0 }) {
  return e ? t ? `${e} ${t}` : e : t || n;
}
function _$(e) {
  const t = p(e, "actions"), n = d(() => JS({
    actions: t.value
  })), r = d(() => n.value.length > 0);
  return {
    actionsFiltered: n,
    hasActions: r
  };
}
function m$(e, {
  eventsMenu: t = d(() => ({})),
  statusExpanded: n = R(!1),
  wasOpened: r = R(!1)
}) {
  const a = p(e, "buttonAttributes"), s = p(e, "buttonTag"), o = p(e, "disabled"), u = p(e, "dropdownAttributes"), f = p(e, "dropdownClass"), _ = p(e, "id"), m = p(e, "menuWidth"), b = p(e, "persist"), v = d(() => a.value.id || _.value), g = d(() => {
    const T = Se(a.value);
    return T["aria-haspopup"] = "true", T["aria-expanded"] = n.value, s.value === "button" && (T.type = T.type || "button"), T;
  }), S = d(() => {
    const T = {};
    return o.value && (s.value === "button" ? T.disabled = !0 : s.value === "a" && (T.ariaDisabled = !0)), T;
  }), A = d(() => {
    const T = Se(u.value);
    return T.class = ["a_dropdown__menu", f.value, {
      a_dropdown__menu_show: n.value
    }], m.value && (T.style = `width: ${m.value}px`), Sf({}, T, t.value);
  }), w = d(() => n.value || b.value && r.value);
  return {
    idLocal: v,
    buttonAttributesDisabled: S,
    buttonAttributesLocal: g,
    dropdownAttributesLocal: A,
    isMenuRendered: w
  };
}
function b$(e) {
  const t = p(e, "buttonClass"), n = p(e, "class");
  return {
    buttonClassLocal: d(() => {
      let a = {};
      return t.value && (yt(t.value) ? a[t.value] = !0 : dt(t.value) && (a = Sf(a, t.value))), n.value && (yt(n.value) ? a[n.value] = !0 : dt(n.value) && (a = Sf(a, n.value))), a;
    })
  };
}
function v$(e, {
  onToggle: t = () => {
  },
  onKeydown: n = () => {
  },
  onOpen: r = () => {
  },
  onClose: a = () => {
  },
  timerCloseHover: s = R(void 0),
  triggerOpen: o = R(void 0)
}) {
  const u = p(e, "triggers"), f = d(() => {
    const g = {};
    return Y(u.value, (S) => {
      g[S] = !0;
    }), g;
  }), _ = d(() => {
    const g = {};
    return f.value.click && (g.onClick = t, g.onKeydown = n), f.value.focus && (g.onFocus = () => r({ trigger: "focus" })), f.value.hover && (g.onMouseenter = () => r({ trigger: "hover" }), g.onMouseleave = () => a({ trigger: "hover" })), g;
  }), m = () => {
    o.value === "hover" && clearTimeout(s.value);
  }, b = () => {
    a({ trigger: "hover" });
  }, v = d(() => {
    const g = {};
    return f.value.hover && (g.onMouseenter = m, g.onMouseleave = b), g;
  });
  return {
    eventsLocal: _,
    eventsMenu: v
  };
}
function y$(e, {
  dropdownRef: t = R(void 0)
}) {
  const n = p(e, "elementsForArrows");
  return {
    setFocusToFirstElement: () => {
      if (!t.value)
        return;
      const a = t.value.querySelectorAll(n.value);
      a.length !== 0 && a[0].focus();
    }
  };
}
function g$(e, {
  dropdownButtonRef: t = R(void 0),
  dropdownRef: n = R(void 0)
}) {
  const r = p(e, "floatingFlip"), a = p(e, "floatingShift"), s = p(e, "placement"), o = R(void 0), u = d(() => {
    var b, v;
    const m = [];
    return (b = r.value) != null && b.use && m.push(
      Jl(r.value)
    ), (v = a.value) != null && v.use && m.push(
      Zl(a.value)
    ), m;
  });
  return {
    destroyPopover: () => {
      o.value && (o.value(), o.value = void 0);
    },
    startPopper: () => {
      !o.value && t.value.$el && n.value && (o.value = Xl(
        t.value.$el,
        n.value,
        () => {
          !t.value.$el || !n.value || Ql(
            t.value.$el,
            n.value,
            {
              placement: s.value,
              middleware: u.value
            }
          ).then(({ x: m, y: b }) => {
            Object.assign(n.value.style, {
              left: `${m}px`,
              top: `${b}px`
            });
          });
        }
      ));
    }
  };
}
function S$() {
  const e = R(void 0), t = R(void 0);
  return {
    dropdownButtonRef: e,
    dropdownRef: t
  };
}
const _f = R(!1);
function QS() {
  return {
    closeDropdownGlobal: () => {
      _f.value = !1;
    },
    isDropdownGlobalOpen: _f,
    openDropdownGlobal: () => {
      _f.value = !0;
    }
  };
}
function A$(e, { emit: t }, {
  dropdownButtonRef: n = R(void 0),
  dropdownRef: r = R(void 0),
  destroyPopover: a = () => {
  },
  setFocusToFirstElement: s = () => {
  },
  startPopper: o = () => {
  }
}) {
  const u = p(e, "disabled"), f = p(e, "dropdownRenderDefault"), _ = p(e, "elementsForArrows"), m = p(e, "isCloseByClickInside"), b = p(e, "isCloseByClickOutside"), v = p(e, "isListWidthSameWithButton"), g = p(e, "lockArrowsNavigation"), S = p(e, "lockTabNavigation"), A = p(e, "persist"), w = p(e, "useEscape"), T = R(void 0), I = R(!1), C = R(!1), E = R(void 0), P = R(void 0), M = R(f.value || !1), {
    closeDropdownGlobal: k,
    openDropdownGlobal: F
  } = QS(), D = ({ down: re }) => {
    var Z;
    const Re = r.value.querySelectorAll(_.value);
    if (Re.length !== 0) {
      if (((Z = n.value) == null ? void 0 : Z.$el) === document.activeElement) {
        re ? Re[0].focus() : Re[Re.length - 1].focus();
        return;
      }
      Y(Re, (U, se) => {
        if (U === document.activeElement)
          return re ? se < Re.length - 1 && Re[se + 1].focus() : se > 0 && Re[se - 1].focus(), !1;
      });
    }
  }, W = () => {
    var re, Re;
    (Re = (re = n.value) == null ? void 0 : re.$el) == null || Re.focus();
  }, $ = (re) => {
    const Re = re || window.$event;
    if (Re.keyCode === X.arrowDown || Re.keyCode === X.arrowUp) {
      if (!g.value)
        return;
      const Z = Re.keyCode === X.arrowDown;
      D({ down: Z }), re.preventDefault(), re.stopPropagation();
    } else if (Re.keyCode === X.escape)
      w.value && (oe({ trigger: "click" }), re.preventDefault(), re.stopPropagation());
    else if (Re.keyCode === X.tab) {
      if (!S.value)
        return;
      Re.shiftKey ? (oe(), setTimeout(() => {
        var Z;
        c$({
          element: (Z = n.value) == null ? void 0 : Z.$el
        });
      })) : (oe(), setTimeout(() => {
        var Z;
        d$({
          element: (Z = n.value) == null ? void 0 : Z.$el
        });
      })), re.stopPropagation(), re.preventDefault();
    }
  }, z = () => {
    b.value && document.addEventListener("click", xe);
  }, ne = () => {
    b.value && document.removeEventListener("click", xe);
  }, Q = () => {
    I.value || (I.value = !0, document.body.addEventListener("keydown", $));
  }, ce = () => {
    I.value && (I.value = !1, document.body.removeEventListener("keydown", $));
  }, he = () => {
    v.value && n.value && (T.value = n.value.clientWidth);
  }, ve = ({ trigger: re = "click", selectorToFocus: Re } = {}) => {
    re === "hover" && P.value === "hover" && clearTimeout(E.value), !(u.value || C.value) && (P.value = re, he(), Q(), C.value = !0, A.value && M.value && o(), M.value = !0, setTimeout(() => {
      z(), Re ? setTimeout(() => {
        document.getElementById(Re).focus();
      }) : re === "click" && setTimeout(() => {
        s();
      }), F(), t("open");
    }));
  }, me = ({ $event: re }) => {
    P.value === "hover" ? C.value && (P.value = "click", re.stopPropagation()) : C.value ? oe({ trigger: "click" }) : ve();
  }, Ne = (re) => {
    (re.keyCode === X.enter || re.keyCode === X.space) && (me({ $event: re }), re.stopPropagation(), re.preventDefault()), (re.keyCode === X.arrowUp || re.keyCode === X.arrowDown) && (C.value || ve());
  };
  function we({ trigger: re }) {
    ne(), ce(), a(), C.value = !1, k(), re && re !== "hover" && // the event did not come from outside
    P.value !== "hover" && W(), P.value = void 0, t("close");
  }
  function oe({ trigger: re } = {}) {
    if (C.value)
      if (re === "hover") {
        if (P.value !== "hover")
          return;
        E.value = setTimeout(() => {
          we({ trigger: re });
        }, 120);
      } else
        we({ trigger: re });
  }
  function xe(re) {
    r.value.contains(re.target) ? m.value && (oe(), W()) : oe();
  }
  return {
    buttonWidth: T,
    destroyEventCloseClick: ne,
    destroyEventPressArrows: ce,
    onClose: oe,
    onKeydown: Ne,
    onOpen: ve,
    onToggle: me,
    statusExpanded: C,
    timerCloseHover: E,
    triggerOpen: P,
    wasOpened: M
  };
}
const Ma = {
  name: "ADropdown",
  inheritAttrs: !1,
  props: {
    actions: {
      type: Array,
      required: !1,
      default: () => []
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    buttonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    buttonIconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonIconClass: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonIconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    buttonIconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    buttonIconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonIsTitleHtml: {
      type: Boolean,
      required: !1
    },
    buttonLoading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    buttonLoadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    buttonLoadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    buttonPrevent: {
      type: Boolean,
      required: !1
    },
    buttonStop: {
      type: Boolean,
      required: !1
    },
    buttonTag: {
      type: String,
      required: !1,
      default: "button"
    },
    buttonText: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTextAriaHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    buttonTextClass: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonTextScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTitle: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTitlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => ["top", "left", "bottom", "right"].indexOf(e) !== -1
    },
    caretIcon: {
      type: String,
      required: !1,
      default: Fs
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dropdownClass: {
      type: String,
      required: !1,
      default: void 0
    },
    dropdownRenderDefault: {
      type: Boolean,
      required: !1
    },
    dropdownTag: {
      type: String,
      required: !1,
      default: "ul"
    },
    elementsForArrows: {
      type: String,
      required: !1,
      default: Os
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    floatingFlip: {
      type: Object,
      required: !1,
      // mainAxis?: boolean;
      // crossAxis?: boolean;
      // fallbackAxisSideDirection?: 'none' | 'start' | 'end';
      // flipAlignment?: boolean;
      // fallbackPlacements?: Array<Placement>;
      // fallbackStrategy?: 'bestFit' | 'initialPlacement';
      default: () => ({})
    },
    floatingShift: {
      type: Object,
      required: !1,
      default: () => ({
        use: !0,
        crossAxis: !0,
        padding: 20
      })
    },
    hasCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => mt("a_dropdown_btn_")
    },
    inBody: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isCloseByClickInside: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isCloseByClickOutside: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHideWithoutActionAndSlot: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isListWidthSameWithButton: {
      type: Boolean,
      required: !1
    },
    lockArrowsNavigation: {
      type: Boolean,
      required: !1,
      default: !0
    },
    lockTabNavigation: {
      type: Boolean,
      required: !1,
      default: !0
    },
    menuWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    persist: {
      type: Boolean,
      required: !1,
      default: !0
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => Ur.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: "a_tooltip_container"
    },
    triggers: {
      type: Array,
      required: !1,
      default: () => ["click"],
      validator: (e) => zR(e, ["click", "hover", "focus"]).length === 0
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: [
    "open",
    "close"
  ],
  setup(e, t) {
    const {
      dropdownButtonRef: n,
      dropdownRef: r
    } = S$(), {
      setFocusToFirstElement: a
    } = y$(e, {
      dropdownRef: r
    }), {
      destroyPopover: s,
      startPopper: o
    } = g$(e, {
      dropdownButtonRef: n,
      dropdownRef: r
    }), {
      buttonWidth: u,
      destroyEventCloseClick: f,
      destroyEventPressArrows: _,
      onClose: m,
      onKeydown: b,
      onOpen: v,
      onToggle: g,
      statusExpanded: S,
      timerCloseHover: A,
      triggerOpen: w,
      wasOpened: T
    } = A$(e, t, {
      dropdownButtonRef: n,
      dropdownRef: r,
      destroyPopover: s,
      setFocusToFirstElement: a,
      startPopper: o
    }), {
      eventsLocal: I,
      eventsMenu: C
    } = v$(e, {
      onToggle: g,
      onKeydown: b,
      onOpen: v,
      onClose: m,
      timerCloseHover: A,
      triggerOpen: w
    }), {
      idLocal: E,
      buttonAttributesDisabled: P,
      buttonAttributesLocal: M,
      dropdownAttributesLocal: k,
      isMenuRendered: F
    } = m$(e, {
      eventsMenu: C,
      statusExpanded: S,
      wasOpened: T
    }), {
      actionsFiltered: D,
      hasActions: W
    } = _$(e), {
      addPopperContainerInBody: $,
      popperContainerIdSelector: z
    } = Nh(e), {
      buttonClassLocal: ne
    } = b$(e);
    return $(), Bt(() => {
      f(), _(), s();
    }), {
      actionsFiltered: D,
      buttonAttributesDisabled: P,
      buttonAttributesLocal: M,
      buttonClassLocal: ne,
      buttonWidth: u,
      dropdownAttributesLocal: k,
      dropdownButtonRef: n,
      dropdownRef: r,
      eventsLocal: I,
      hasActions: W,
      idLocal: E,
      isMenuRendered: F,
      onClose: m,
      onOpen: v,
      popperContainerIdSelector: z,
      startPopper: o,
      statusExpanded: S
    };
  },
  render() {
    return this.isHideWithoutActionAndSlot && !this.hasActions && !this.$slots.dropdown ? null : [
      c(Oe, {
        ref: "dropdownButtonRef",
        ...this.$attrs,
        id: this.idLocal,
        alwaysTranslate: this.alwaysTranslate,
        tag: this.buttonTag,
        class: this.buttonClassLocal,
        text: this.buttonText,
        textScreenReader: this.buttonTextScreenReader,
        textAriaHidden: this.buttonTextAriaHidden,
        textClass: this.buttonTextClass,
        title: this.buttonTitle,
        isTitleHtml: this.buttonIsTitleHtml,
        titlePlacement: this.buttonTitlePlacement,
        loading: this.buttonLoading,
        loadingClass: this.buttonLoadingClass,
        loadingAlign: this.buttonLoadingAlign,
        iconLeft: this.buttonIconLeft,
        iconRight: this.buttonIconRight,
        iconClass: this.buttonIconClass,
        iconAttributes: this.buttonIconAttributes,
        iconTag: this.buttonIconTag,
        prevent: this.buttonPrevent,
        stop: this.buttonStop,
        extra: this.extra,
        type: "button",
        attributes: this.buttonAttributesLocal,
        ...this.buttonAttributesDisabled,
        ...this.eventsLocal
      }, {
        default: () => this.$slots.button && this.$slots.button(),
        buttonAppend: () => this.hasCaret && c(lt, {
          class: "a_dropdown__caret",
          icon: this.caretIcon
        })
      }),
      c(fa, {
        to: this.popperContainerIdSelector,
        disabled: !this.inBody
      }, [
        this.isMenuRendered && Ft(c(
          "div",
          {
            ref: "dropdownRef",
            role: "application",
            "aria-labelledby": this.idLocal,
            ariaHidden: !this.statusExpanded,
            ...this.dropdownAttributesLocal
          },
          [
            c(this.dropdownTag, {}, [
              this.$slots.dropdown && this.$slots.dropdown(),
              this.hasActions && this.actionsFiltered.map((e, t) => c(p$, {
                key: t,
                action: e,
                alwaysTranslate: this.alwaysTranslate
              }, this.$slots))
            ])
          ]
        ), [
          [Dl, {
            mounted: this.startPopper
          }]
        ])
      ])
    ];
  }
}, w$ = {
  name: "AErrorsElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    error: {
      type: [Object, Array, String],
      required: !1,
      default: void 0
    },
    errorKey: {
      type: String,
      required: !1,
      default: void 0
    },
    errorLabels: {
      type: [String, Object],
      required: !0
    },
    goToError: {
      type: Function,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => mt("a_errors_")
    },
    isErrorLink: {
      type: Boolean,
      required: !0
    }
  },
  setup(e) {
    const t = p(e, "errorLabels"), n = d(() => yt(t.value) ? t.value : dt(t.value) ? t.value.label : ""), r = p(e, "isErrorLink"), a = d(() => dt(t.value) && t.value.link && r.value), s = p(e, "error"), o = d(() => yt(s.value)), u = d(() => Ae(s.value)), f = d(() => dt(s.value)), _ = d(() => Ae(t.value)), m = p(e, "id"), b = d(() => de(t.value, "id") || m.value), v = p(e, "goToError"), g = p(e, "errorKey"), S = () => {
      if (We(v.value))
        return v.value({
          id: b.value,
          key: g.value
        });
      let w = b.value;
      if (ae(g.value) || (w = `${w}_${g.value}`), Ps(w) > 0) {
        const T = document.getElementById(w);
        T && T.focus();
      }
    };
    return {
      currentLabel: n,
      goToErrorLocal: S,
      isErrorArray: u,
      isErrorLabelsArray: _,
      isErrorLinkLocal: a,
      isErrorObject: f,
      isErrorString: o,
      onKeydown: (w) => {
        (w.keyCode === X.enter || w.keyCode === X.space) && (S(), w.stopPropagation(), w.preventDefault());
      }
    };
  },
  render() {
    return c("div", {
      class: "a_error__list__li"
    }, [
      this.isErrorString ? this.isErrorLinkLocal ? c(Oe, {
        type: "link",
        class: "a_errors__label a_btn a_btn_link a_p_0",
        tabindex: 0,
        "aria-describedby": this.id,
        safeHtml: this.currentLabel,
        textTag: "strong",
        textAfter: ":",
        onClick: this.goToErrorLocal,
        onKeydown: this.onKeydown
      }) : c("div", {
        class: "a_errors__label",
        "aria-describedby": this.id
      }, [
        c(be, {
          tag: "strong",
          safeHtml: this.currentLabel
        })
      ]) : "",
      c(
        "div",
        {
          id: this.id,
          class: "a_errors__errors"
        },
        this.isErrorString ? [
          c(be, {
            alwaysTranslate: this.alwaysTranslate,
            tag: "span",
            html: this.error
          })
        ] : this.isErrorArray ? [...this.error.map((e, t) => c(la("AErrorsElement"), {
          key: t,
          error: e,
          alwaysTranslate: this.alwaysTranslate,
          errorLabels: this.isErrorLabelsArray ? this.errorLabels[t] || this.errorLabels : this.errorLabels,
          goToError: this.goToError,
          isErrorLink: this.isErrorLink
        }))] : this.isErrorObject ? [
          c("div", {
            class: "a_pl_2"
          }, [
            ...Object.keys(this.error).map((e) => c(la("AErrorsElement"), {
              key: e,
              alwaysTranslate: this.alwaysTranslate,
              error: this.error[e],
              errorLabels: this.errorLabels[e] || this.errorLabels,
              goToError: this.goToError,
              isErrorLink: this.isErrorLink
            }))
          ])
        ] : []
      )
    ]);
  }
};
function T$({ emit: e }) {
  return {
    close: () => {
      e("close");
    }
  };
}
function x$(e) {
  const t = p(e, "errors");
  return {
    hasErrors: d(() => !Mn(t.value))
  };
}
function C$(e, {
  hasErrors: t = d(() => !1)
}) {
  const n = p(e, "autoFocus"), r = R(void 0);
  return {
    elRef: r,
    setFocusToElement: () => {
      n.value && t.value && setTimeout(() => {
        r.value.$el.focus();
      });
    }
  };
}
function I$(e) {
  const t = p(e, "optionsList"), n = p(e, "idPrefix"), r = (s) => {
    let o = {};
    return Y(s, (u) => {
      o[u.id] = {
        label: u.labelError || u.label,
        link: qe(u.isErrorLink) ? !0 : u.isErrorLink,
        id: ql({
          id: u.id,
          idPrefix: u.idPrefix || n.value,
          htmlId: u.htmlId
        })
      }, u.children && u.children.length && (o = {
        ...o,
        ...r(u.children)
      });
    }), o;
  };
  return {
    labelsLocal: d(() => {
      let s = {};
      return t.value.forEach((o) => {
        s[o.id] = {
          label: o.labelError || o.label,
          link: qe(o.isErrorLink) ? !0 : o.isErrorLink,
          id: ql({
            id: o.id,
            idPrefix: o.idPrefix || n.value,
            htmlId: o.htmlId
          })
        }, o.children && o.children.length && (s = {
          ...s,
          ...r(o.children)
        });
      }), s;
    })
  };
}
const L$ = {
  name: "AErrors",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closable: {
      type: Boolean,
      required: !1,
      default: !0
    },
    goToError: {
      type: Function,
      required: !1,
      default: void 0
    },
    optionsList: {
      type: Array,
      required: !1,
      default: () => []
    },
    autoFocus: {
      type: Boolean,
      required: !1,
      default: !0
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: "Bitte überprüfen Sie Ihre Eingaben."
    },
    isErrorLink: {
      type: Boolean,
      required: !1,
      default: !0
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      hasErrors: n
    } = x$(e), {
      elRef: r,
      setFocusToElement: a
    } = C$(e, {
      hasErrors: n
    }), {
      labelsLocal: s
    } = I$(e), {
      close: o
    } = T$(t);
    return st(n, () => {
      a();
    }), ha(() => {
      a();
    }), {
      close: o,
      elRef: r,
      hasErrors: n,
      labelsLocal: s
    };
  },
  render() {
    return c(Vh, {
      ref: "elRef",
      alwaysTranslate: this.alwaysTranslate,
      tabindex: -1,
      role: "alert",
      "aria-atomic": !0,
      isVisible: this.hasErrors,
      closable: this.closable,
      onClose: this.close
    }, () => [
      this.hasErrors && c("div", {
        class: "a_errors"
      }, [
        c("div", {
          class: "a_errors__header"
        }, [
          c("strong", null, this.textErrorHeader)
        ]),
        c("div", {
          class: "a_errors__list"
        }, [
          ...Object.keys(this.errors).map((e) => c(w$, {
            key: e,
            alwaysTranslate: this.alwaysTranslate,
            error: this.errors[e],
            errorLabels: this.labelsLocal[e] || this.labelsLocal,
            goToError: this.goToError,
            isErrorLink: this.isErrorLink
          }))
        ])
      ])
    ]);
  }
};
function E$(e, {
  ensurePrecision: t = () => {
  },
  getCleanIntValue: n = () => {
  },
  setCurrentValue: r = () => {
  },
  modelNumber: a = d(() => {
  })
}) {
  const s = p(e, "decimalDivider"), o = p(e, "disabled"), u = p(e, "modelValue"), f = p(e, "max"), _ = p(e, "min"), m = p(e, "decimalPartLength"), b = p(e, "step"), v = p(e, "thousandDivider"), g = d(() => a.value <= _.value), S = d(() => a.value >= f.value), A = (E) => {
    if (s.value) {
      const P = typeof E == "number" ? E.toString().split(".") : E.toString().split(s.value), M = P[0], k = M[0] === "-" ? "-" : "", F = v.value ? n({ value: M, thousandDivider: v.value }) : M, D = P.length > 1 ? P[1] : "", W = D.length, $ = br(m.value - W, () => "0").join("");
      return `${k}${F}${s.value}${D}${$}`;
    }
    return E;
  }, w = () => {
    const E = A(f.value);
    r(E);
  }, T = () => {
    const E = A(_.value);
    r(E);
  };
  return {
    adjustFloatPartAndDivider: A,
    increase: () => {
      if (o.value || S.value)
        return;
      const E = a.value, P = t({
        value: E,
        currentValue: u.value
      }).replace(".", s.value);
      if (E + b.value > f.value) {
        w();
        return;
      }
      r(A(P));
    },
    decrease: () => {
      if (o.value || g.value)
        return;
      const E = a.value, P = t({
        value: E,
        currentValue: u.value,
        coefficient: -1
      }).replace(".", s.value);
      if (E - b.value < _.value) {
        T();
        return;
      }
      r(A(P));
    }
  };
}
function O$(e, {
  adjustFloatPartAndDivider: t = () => {
  },
  decrease: n = () => {
  },
  getCleanIntValue: r = () => {
  },
  increase: a = () => {
  },
  modelNumber: s = d(() => {
  }),
  modelUndefinedLocal: o = d(() => {
  }),
  onBlur: u = () => {
  },
  setCurrentValue: f = () => {
  }
}) {
  const _ = p(e, "decimalDivider"), m = R(void 0), b = p(e, "max"), v = p(e, "min"), g = p(e, "modelValue"), S = p(e, "required"), A = p(e, "decimalPartLength"), w = p(e, "thousandDivider"), T = p(e, "validationOnChange"), I = R(0), C = navigator.userAgent.indexOf("Firefox") !== -1 ? 1 : 0, E = [
    X.tab,
    X.del,
    X.escape,
    X.backspace,
    X.arrowLeft,
    X.arrowRight,
    X.home,
    X.end
  ], P = d(() => !A.value), M = (U) => Number(`${U}`.replaceAll(w.value, "").replace(_.value, ".")), k = (U, se) => {
    f(U, se);
  }, F = (U) => {
    setTimeout(() => {
      m.value.setSelectionRange(U, U);
    });
  }, D = () => {
    const U = t(b.value);
    k(U);
  }, W = () => {
    const U = t(v.value);
    k(U);
  }, $ = (U) => {
    const se = M(U);
    if (se > b.value)
      return D(), !0;
    if (se < v.value)
      return W(), !0;
  }, z = (U, se, pe = !1) => {
    var Dt;
    if (!S.value && ae(se) && !((Dt = U == null ? void 0 : U.target) != null && Dt.value)) {
      k(se, pe);
      return;
    }
    let Ie;
    pe ? Ie = typeof se == "number" ? `${se}`.replace(".", _.value) : se : Ie = ae(se) ? U.target.value : `${se}`;
    const Ke = Ie.indexOf(_.value) !== -1, Je = m.value.selectionStart, ut = Ie.split(_.value), Ee = ut[0].length && ut[0][0] === "-" ? "-" : "", Qe = Number(ut[0].replace(/[^0-9]/g, "")).toString(), At = ut[1] ? ut[1].substring(0, A.value) : "";
    if (ae(Qe) || Qe === "")
      return;
    const Fe = w.value ? r({ value: Qe, thousandDivider: w.value }) : Qe;
    let ft;
    if (P.value)
      ft = `${Ee}${Fe}`;
    else if (pe) {
      const $t = At || "", qt = br(A.value - $t.length, () => "0").join("");
      ft = `${Ee}${Fe}${_.value}${$t}${qt}`;
    } else At ? ft = `${Ee}${Fe}${_.value}${At}` : Ke ? ft = `${Ee}${Fe}${_.value}` : ft = `${Ee}${Fe}`;
    T.value && $(ft) || (k(ft, pe), F(Je));
  }, ne = ({ value: U }) => {
    v.value >= 0 || U[0] !== "-" && (I.value++, setTimeout(() => {
      const se = `-${U}`;
      T.value && $(se) || (k(se), I.value--);
    }, C));
  }, Q = ({ value: U }) => {
    U[0] === "-" && (I.value++, setTimeout(() => {
      const se = U.replace("-", "");
      T.value && $(se) || (k(se), I.value--);
    }, C));
  }, ce = ({ value: U }) => {
    I.value++, setTimeout(() => {
      const se = m.value.selectionStart;
      if (w.value && U[se - 1] === w.value) {
        const pe = se - 1;
        F(pe);
      }
      I.value--;
    }, C);
  }, he = ({ value: U }) => {
    setTimeout(() => {
      I.value++;
      const se = m.value.selectionStart;
      if (w.value && U[se - 1] === w.value) {
        const pe = se + 1;
        F(pe);
      }
      I.value--;
    }, C);
  }, ve = ({ value: U, cursorPosition: se }, pe) => {
    setTimeout(() => {
      I.value++;
      let Ie = m.value.value;
      if (pe) {
        const He = U.length + 1;
        Ie[Ie.length - 1] === _.value && (Ie += br(A.value, () => "0").join(""), k(Ie), F(He));
      } else {
        const He = U.substring(0, se).split("").reverse().join("").replaceAll(w.value, "").match(/.{1,3}/g).join(w.value).split("").reverse().join("");
        let Ke = U.substring(se, U.length).replace(/[^0-9]/g, "").substring(0, A.value);
        Ke = `${Ke}${br(A.value - Ke.length, () => "0").join("")}`;
        const Je = [
          He,
          Ke
        ].join(_.value);
        k(Je), F(He.length + 1);
      }
      I.value--;
    });
  }, me = ({ cursorPosition: U, numberOfSymbols: se }) => {
    let pe = U && U - 1;
    m.value.value.length < se - 1 && pe > 0 && pe--, F(pe);
  }, Ne = ({ hasDecimalDivider: U, value: se, cursorPosition: pe }) => {
    const Ie = se.length;
    if (!P.value) {
      const He = se.indexOf(_.value);
      if (U && He === pe - 1) {
        const Je = se.split(_.value)[0];
        I.value++, setTimeout(() => {
          me({ cursorPosition: pe, numberOfSymbols: Ie }), k(Je), I.value--;
        }, C);
        return;
      }
      I.value++, setTimeout(() => {
        me({ cursorPosition: pe, numberOfSymbols: Ie }), I.value--;
      }, C);
    }
  }, we = ({ value: U, $event: se, hasDecimalDivider: pe, cursorPosition: Ie }) => {
    if (!P.value && pe && U[Ie] === _.value) {
      const Ke = U.split(_.value)[0];
      k(Ke), F(Ie);
      return;
    }
    if (w.value)
      if (U[Ie] === w.value) {
        se.preventDefault();
        const He = Ie, Ke = U.split(_.value), Je = Ke[0], ut = Ke[1];
        let Ee = Je.split("");
        Ee.splice(Ie + 1, 1), Ee = Ee.reverse().join("").replaceAll(w.value, "").match(/.{1,3}/g).join(w.value).split("").reverse().join("");
        let Qe;
        P.value ? Qe = Ee : ut ? Qe = `${Ee}${_.value}${ut}` : pe ? Qe = `${Ee}${_.value}` : Qe = Ee, k(Qe), F(He + 1);
      } else
        setTimeout(() => {
          I.value++, m.value.value.length < U.length - 1 && F(Ie > 0 ? Ie - 1 : 0), I.value--;
        }, C);
  };
  return {
    handleInput: z,
    handleKeydown: (U) => {
      if (I.value) {
        U.preventDefault();
        return;
      }
      const se = U.target.value, pe = U.keyCode, Ie = U.key, He = pe >= 48 && pe <= 57 || pe >= 96 && pe <= 105, Ke = Ie === _.value && !!A.value, Je = U.target.value.indexOf(_.value), ut = Je !== -1, Ee = m.value.selectionStart, Qe = Ee === se.length, At = {
        value: se,
        keyCode: pe,
        keyValue: Ie,
        keyIsNumber: He,
        keyIsDecimalDivider: Ke,
        hasDecimalDivider: ut,
        cursorPosition: Ee,
        $event: U
      };
      if (pe === X.arrowUp) {
        a(), U.preventDefault();
        return;
      }
      if (pe === X.arrowDown) {
        n(), U.preventDefault();
        return;
      }
      if (pe === X.minus || pe === X.numMinus) {
        ne(At), U.preventDefault();
        return;
      }
      if (pe === X.plus && U.shiftKey || pe === X.numPlus) {
        Q(At), U.preventDefault();
        return;
      }
      if (pe === X.arrowLeft) {
        ce(At);
        return;
      }
      if (pe === X.arrowRight) {
        he(At);
        return;
      }
      if (Ke) {
        if (ut) {
          F(Je + 1), U.preventDefault();
          return;
        }
        Qe || U.preventDefault(), ve(At, Qe);
        return;
      }
      if (U.keyCode === X.backspace) {
        if (m.value.selectionStart !== m.value.selectionEnd)
          return;
        Ne(At);
        return;
      }
      if (U.keyCode === X.del) {
        we(At);
        return;
      }
      if (He && !U.ctrlKey && ut) {
        const Fe = se.indexOf(_.value);
        if (Ee > Fe && se.split(_.value)[1].length === A.value) {
          if (Qe) {
            U.preventDefault();
            return;
          }
          U.preventDefault();
          const $t = se.split("");
          $t[Ee] = Ie;
          const qt = $t.join("");
          k(qt), I.value++, setTimeout(() => {
            F(Ee + 1), I.value--;
          }, C);
          return;
        }
      }
      if (!He && !U.ctrlKey && !Lf(E, U.keyCode) && U.preventDefault(), U.keyCode !== X.home && U.keyCode !== X.end && !U.ctrlKey && U.keyCode)
        if (Ee === 0 && se.length && se[0] === "0") {
          U.preventDefault();
          const Fe = `${Ie}${se.slice(1)}`;
          k(Fe), F(1);
        } else {
          const Fe = se.length;
          I.value++, setTimeout(() => {
            let ft = Ee + 1;
            const Dt = m.value.value.length;
            Dt - 1 > Fe ? ft++ : Dt === Fe && ft--, F(ft), I.value--;
          }, C);
        }
    },
    handlePaste: (U) => {
      var Dt;
      U.preventDefault();
      const pe = (U.clipboardData || window.clipboardData).getData("text").split(_.value), Ie = pe[0].replace(/[^0-9]/g, ""), He = ((Dt = pe[1]) == null ? void 0 : Dt.replace(/[^0-9]/g, "")) || "";
      let Ke;
      const Je = m.value.selectionStart, ut = m.value.selectionEnd, Ee = m.value.value, Qe = Ee.indexOf(_.value) !== -1, Fe = Ee.substring(Je, ut).indexOf(_.value) !== -1;
      Qe && !Fe ? Ke = He ? [Ie, He].join("") : Ie : Ke = He ? [Ie, He].join(_.value) : Ie;
      const ft = Ee.slice(0, Je) + Ke + Ee.slice(ut);
      z(null, ft);
    },
    initFirstCheck: () => {
      setTimeout(() => {
        let U;
        if (g.value || g.value === 0) {
          if (U = g.value.toString().replace(".", _.value), _.value) {
            const se = U.toString().split(_.value), pe = se[0], Ie = pe[0] === "-" ? "-" : "", He = se.length > 1 ? se[1] : "", Ke = He.length, Je = br(A.value - Ke, () => "0").join("");
            U = `${Ie}${pe}${_.value}${He}${Je}`;
          }
        } else
          U = S.value ? [
            "0",
            _.value,
            br(A.value, () => "0").join("")
          ].join("") : o.value;
        z(null, U, !0);
      });
    },
    inputRef: m,
    onBlurNumber: (U) => {
      let se = U.target.value;
      if (P.value || (se = se.split(_.value)[0]), ae(se) || se === "") {
        if (S.value) {
          if (v.value > 0) {
            const Ie = _.value ? `0${_.value}${br(A.value, () => "0").join("")}` : "0";
            k(Ie);
          } else
            W();
          u(U);
          return;
        }
        const pe = o.value;
        k(pe), u(U);
        return;
      } else if (s.value < v.value) {
        W();
        return;
      } else if (s.value > b.value) {
        D();
        return;
      }
      if (A.value) {
        let pe = `${U.target.value}`;
        const He = pe.split(_.value)[1];
        pe.indexOf(_.value) === -1 ? pe += `${_.value}${br(A.value, () => "0").join("")}` : He.length < A.value && (pe += `${br(A.value - He.length, () => "0").join("")}`), k(pe);
      }
      u(U);
    },
    onClickNumber: (U) => {
      I.value++, setTimeout(() => {
        const se = U.target.selectionStart, pe = U.target.value;
        w.value && w.value === pe[se - 1] && F(se - 1), I.value--;
      });
    }
  };
}
function D$(e, {
  changeModel: t = () => {
  }
}) {
  const n = p(e, "required"), r = p(e, "modelValue"), a = p(e, "modelType"), s = p(e, "modelUndefined"), o = p(e, "decimalDivider"), u = p(e, "disabled"), f = p(e, "decimalPartLength"), _ = p(e, "thousandDivider"), m = R(r.value), b = R(!1), v = R(r.value), g = d(() => Number(`${m.value}`.replaceAll(_.value, "").replace(o.value, "."))), S = d(() => n.value ? [
    "0",
    o.value,
    br(f.value, () => "0").join("")
  ].join("") : s.value), A = (T, I = !1) => {
    m.value = ae(T) ? "" : T;
    let C = T;
    !n.value && ae(T) ? C = S.value : C = a.value === "number" ? Number(`${T}`.replaceAll(_.value, "").replace(o.value, ".")) : T, I || (b.value = !0, v.value = C, t({ model: C }));
  };
  return {
    clearModel: () => {
      u.value || A(S.value);
    },
    displayValue: m,
    isInternalChange: b,
    localModel: v,
    modelNumber: g,
    modelUndefinedLocal: S,
    setCurrentValue: A
  };
}
function P$() {
  return {
    getCleanIntValue: ({ value: t, thousandDivider: n }) => t.replaceAll(n, "").replaceAll("-", "").split("").reverse().join("").match(/.{1,3}/g).join(n).split("").reverse().join("")
  };
}
function CU(e) {
  return hi(e) ? Math.abs(e % 2) === 1 : !1;
}
function R$(e) {
  return hi(e) ? e % 2 === 0 : !1;
}
function Au(e, t) {
  if (t === 0)
    return Math.round(e);
  let n = String(e);
  const r = n.indexOf(".");
  if (r === -1 || !n.replace(".", "").split("")[r + t])
    return e;
  const o = n.length;
  return n.charAt(o - 1) === "5" && (n = `${n.slice(0, Math.max(0, o - 1))}6`), Number.parseFloat(Number(n).toFixed(t));
}
function B$(e) {
  const t = p(e, "step"), n = p(e, "decimalPartLength");
  return {
    ensurePrecision: ({ value: a, currentValue: s, coefficient: o = 1 }) => qn(a) ? Au(a + t.value * o, n.value).toString() : s
  };
}
function k$(e) {
  const t = p(e, "inputWidth");
  return {
    inputWidthStyleValue: d(() => {
      let r = t.value;
      return qn(t.value) && (r = `${t.value}px`), qe(r) ? {} : {
        "--a_input_number_width": r
      };
    })
  };
}
const eA = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-dash" viewBox="0 0 16 16">
  <path d="M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8"/>
</svg>`, tA = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4"/>
</svg>`, mn = R({
  propsDefault: {
    controlsType: "none",
    currencySymbol: "€",
    currencySymbolPosition: "right",
    decimalDivider: ",",
    decimalPartLength: 2,
    iconPrepend: void 0,
    inputWidth: 200,
    isLabelFloat: !1,
    max: void 0,
    min: void 0,
    modelUndefined: void 0,
    placeholder: void 0,
    step: 1,
    thousandDivider: "."
  }
}), IU = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    mn.value.propsDefault = {
      ...mn.value.propsDefault,
      ...t
    };
  }
}, M$ = {
  name: "AInputCurrency",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    controlsType: {
      type: String,
      required: !1,
      default: () => mn.value.propsDefault.controlsType,
      validator: (e) => ["plus-minus", "arrows", "none"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    currencySymbol: {
      type: String,
      required: !1,
      default: () => mn.value.propsDefault.currencySymbol
    },
    currencySymbolPosition: {
      type: String,
      required: !1,
      default: () => mn.value.propsDefault.currencySymbolPosition,
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    decimalDivider: {
      type: String,
      required: !1,
      default: () => mn.value.propsDefault.decimalDivider,
      validator: (e, t) => {
        const n = t == null ? void 0 : t.thousandDivider;
        return n ? [".", ","].indexOf(e) !== -1 && e !== n : [".", ","].indexOf(e) !== -1;
      }
    },
    decimalPartLength: {
      type: Number,
      required: !1,
      default: () => mn.value.propsDefault.decimalPartLength,
      validator: (e) => e >= 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: () => mn.value.propsDefault.iconPrepend
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => mt("a_input_currency_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    inputWidth: {
      type: [String, Number],
      required: !1,
      default: () => mn.value.propsDefault.inputWidth
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: () => mn.value.propsDefault.isLabelFloat
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: () => mn.value.propsDefault.max
    },
    min: {
      type: Number,
      required: !1,
      default: () => mn.value.propsDefault.min
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelType: {
      type: String,
      required: !1,
      default: "number",
      validator: (e) => ["number", "string"].indexOf(e) !== -1
    },
    modelUndefined: {
      required: !1,
      default: () => mn.value.propsDefault.modelUndefined
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: () => mn.value.propsDefault.placeholder
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    step: {
      type: Number,
      required: !1,
      default: () => mn.value.propsDefault.step,
      validator: (e) => e > 0
    },
    thousandDivider: {
      type: String,
      required: !1,
      default: () => mn.value.propsDefault.thousandDivider,
      validator: (e, t) => {
        const n = t == null ? void 0 : t.decimalDivider;
        return n ? [".", ",", " "].indexOf(e) !== -1 && e !== n : [".", ",", " "].indexOf(e) !== -1;
      }
    },
    validationOnChange: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const n = p(e, "modelValue"), {
      attributesToExcludeFromRender: r
    } = zt(e), {
      componentStyleHide: a
    } = dn(e), {
      getCleanIntValue: s
    } = P$(), {
      ariaDescribedbyLocal: o,
      changeModel: u,
      errorsId: f,
      helpTextId: _,
      htmlIdLocal: m,
      isErrors: b,
      isModel: v,
      onBlur: g,
      onFocus: S
    } = An(e, t), {
      isClearButtonLocal: A
    } = wd(e, {
      isModel: v
    }), {
      placeholderAttributes: w
    } = Yl(e), {
      inputWidthStyleValue: T
    } = k$(e), {
      ensurePrecision: I
    } = B$(e), {
      clearModel: C,
      displayValue: E,
      isInternalChange: P,
      localModel: M,
      modelNumber: k,
      modelUndefinedLocal: F,
      setCurrentValue: D
    } = D$(e, {
      changeModel: u
    }), {
      adjustFloatPartAndDivider: W,
      increase: $,
      decrease: z
    } = E$(e, {
      displayValue: E,
      ensurePrecision: I,
      getCleanIntValue: s,
      setCurrentValue: D,
      modelNumber: k
    }), {
      handleInput: ne,
      handleKeydown: Q,
      handlePaste: ce,
      initFirstCheck: he,
      inputRef: ve,
      onBlurNumber: me,
      onClickNumber: Ne
    } = O$(e, {
      adjustFloatPartAndDivider: W,
      decrease: z,
      displayValue: E,
      getCleanIntValue: s,
      increase: $,
      modelNumber: k,
      modelUndefinedLocal: F,
      onBlur: g,
      setCurrentValue: D
    });
    return he(), st(n, (we) => {
      P.value || (M.value = we, ne(null, we, !0)), P.value = !1;
    }), {
      ariaDescribedbyLocal: o,
      attributesToExcludeFromRender: r,
      clearModel: C,
      componentStyleHide: a,
      decrease: z,
      displayValue: E,
      errorsId: f,
      handleInput: ne,
      handleKeydown: Q,
      handlePaste: ce,
      helpTextId: _,
      htmlIdLocal: m,
      increase: $,
      inputRef: ve,
      inputWidthStyleValue: T,
      isClearButtonLocal: A,
      isErrors: b,
      isModel: v,
      onBlurNumber: me,
      onClickNumber: Ne,
      onFocus: S,
      placeholderAttributes: w
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__container"
      }, [
        c("div", {
          class: ["a_form_element__parent", {
            a_form_element__parent_float: this.isLabelFloat,
            a_form_element__parent_not_empty: this.isModel,
            a_form_element__parent_float_has_icon_prepend: this.iconPrepend,
            a_form_element__parent_invalid: this.isErrors
          }]
        }, [
          (this.label || this.labelScreenReader) && !this.isLabelFloat ? c(tn, {
            id: this.htmlIdLocal,
            extra: this.extra,
            isLabelFloat: this.isLabelFloat,
            isError: this.isErrors,
            label: this.label,
            labelClass: this.labelClass,
            labelScreenReader: this.labelScreenReader,
            required: this.required,
            type: "text"
          }) : "",
          c("div", {
            class: [
              "a_form_element_number",
              {
                a_form_element_number_controls: this.controlsType && this.controlsType !== "none"
              }
            ]
          }, [
            this.currencySymbol && this.currencySymbolPosition === "left" && c("span", {
              class: "a_form_element_number__currency_symbol"
            }, this.currencySymbol),
            c("div", {
              class: "a_form_element",
              style: {
                ...this.inputWidthStyleValue
              }
            }, [
              (this.label || this.labelScreenReader) && this.isLabelFloat ? c(tn, {
                id: this.htmlIdLocal,
                isLabelFloat: this.isLabelFloat,
                isError: this.isErrors,
                label: this.label,
                labelClass: this.labelClass,
                labelScreenReader: this.labelScreenReader,
                required: this.required,
                type: "text"
              }) : "",
              this.iconPrepend && c(lt, {
                icon: this.iconPrepend,
                class: "a_input__icon_prepend"
              }),
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                autocomplete: this.autocomplete,
                value: this.displayValue,
                type: "text",
                class: [
                  "a_form_control a_input a_input_number",
                  this.inputClass,
                  {
                    a_form_element_with_one_btn: this.isClearButtonLocal,
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabled,
                ariaRequired: this.required,
                ariaInvalid: this.isErrors,
                "aria-describedby": this.ariaDescribedbyLocal,
                ...this.placeholderAttributes,
                ...this.inputAttributes,
                onInput: this.handleInput,
                onKeydown: this.handleKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlurNumber,
                onClick: this.onClickNumber,
                onPaste: this.handlePaste
              }),
              this.isClearButtonLocal ? c("div", {
                class: "a_form_control__actions"
              }, [
                c(Ad, {
                  alwaysTranslate: this.alwaysTranslate,
                  disabled: !1,
                  class: this.clearButtonClass,
                  onClear: this.clearModel
                })
              ]) : ""
            ]),
            this.controlsType === "plus-minus" && c("div", {
              class: "a_btn_group"
            }, [
              c(ct, {
                class: "a_btn a_btn_outline_secondary",
                iconLeft: eA,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_CURRENCY_BTN_DECREASE_",
                textScreenReader: "_A_INPUT_CURRENCY_BTN_DECREASE_",
                onClick: this.decrease
              }),
              c(ct, {
                class: "a_btn a_btn_outline_secondary",
                iconLeft: tA,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_CURRENCY_BTN_INCREASE_",
                textScreenReader: "_A_INPUT_CURRENCY_BTN_INCREASE_",
                onClick: this.increase
              })
            ]),
            this.currencySymbol && this.currencySymbolPosition === "right" && c("div", {
              class: "a_form_element_number__currency_symbol"
            }, this.currencySymbol)
          ]),
          c(Sn, {
            id: this.helpTextId,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(gn, {
            id: this.errorsId,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
}, F$ = {
  name: "AInputFile",
  inheritAttrs: !1,
  mixins: [
    Dp
  ],
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    isMultiple: {
      type: Boolean,
      required: !1
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    modelUndefined: {
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number, Object, Array],
      required: !1
    },
    text: {
      type: String,
      required: !1,
      default: "Dateien auswählen"
    },
    type: {
      type: String,
      required: !1,
      default: "input"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = zt(e), {
      componentStyleHide: r
    } = dn(e), {
      ariaDescribedbyLocal: a,
      changeModel: s,
      clearModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: _,
      isErrors: m,
      onBlur: b,
      onFocus: v
    } = An(e, t), g = p(e, "isMultiple"), S = p(e, "modelValue"), A = d(() => g.value ? !!(Ae(S.value) && S.value.length > 0) : !!(dt(S.value) && Ps(S.value) > 0)), w = d(() => A.value ? g.value ? S.value : [S.value] : []), T = R(void 0), I = p(e, "disabled"), C = (M) => {
      if (I.value)
        return;
      const k = M.target.files;
      if (k && k.length) {
        const F = [];
        Y(k, (D) => {
          F.push({
            id: "",
            size: D.size,
            name: D.webkitRelativePath || D.relativePath || D.name,
            type: D.type,
            file: D
          });
        }), s({
          model: g.value ? F : F[0]
        });
      }
    }, E = p(e, "required"), P = d(() => E.value ? "*" : "");
    return {
      ariaDescribedbyLocal: a,
      attributesToExcludeFromRender: n,
      clearModel: o,
      componentStyleHide: r,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: _,
      inputRef: T,
      isErrors: m,
      isModel: A,
      modelValueListLocal: w,
      onBlur: b,
      onFocus: v,
      onInput: C,
      textAfterLabel: P
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__parent"
      }, [
        this.label && c(tn, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          hideId: !0,
          type: this.type,
          isError: this.isErrors
        }),
        c("div", {}, [
          c("label", {
            for: this.htmlIdLocal,
            class: ["a_file__label a_form_control", this.labelClass, {
              disabled: this.disabled
            }],
            required: this.required,
            type: this.type
          }, [
            c("input", {
              ref: "inputRef",
              id: this.htmlIdLocal,
              type: "file",
              multiple: this.isMultiple,
              class: [
                "a_file__input",
                this.inputClass,
                {
                  a_form_control_invalid: this.isErrors
                }
              ],
              disabled: this.disabled,
              ariaRequired: this.required,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              ...this.inputAttributes,
              onInput: this.onInput,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }),
            c("span", {
              class: "a_file__label"
            }, this.text)
          ])
        ]),
        this.isModel && c("ul", {}, [
          this.modelValueListLocal.map((e) => c("li", {}, e.name))
        ]),
        c(Sn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(gn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, q$ = {
  props: {
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    }
  }
};
function N$(e, {
  currentValue: t = R(0),
  displayValue: n = d(() => ""),
  ensurePrecision: r = () => {
  },
  setCurrentValue: a = () => {
  },
  minLocal: s = d(() => {
  })
}) {
  const o = p(e, "disabled"), u = p(e, "modelValue"), f = p(e, "max"), _ = p(e, "readonly"), m = d(() => qn(u.value) && u.value <= s.value), b = d(() => qn(u.value) && u.value >= f.value);
  return {
    increase: () => {
      if (_.value || o.value || b.value)
        return;
      const S = Number(n.value) || 0, A = r({ value: S, currentValue: t.value });
      a(A);
    },
    decrease: () => {
      if (_.value || o.value || m.value)
        return;
      const S = Number(n.value) || 0, A = r({ value: S, currentValue: t.value, coefficient: -1 });
      a(A);
    }
  };
}
function V$(e, {
  decrease: t = () => {
  },
  increase: n = () => {
  },
  inputRef: r = R({}),
  onBlur: a = () => {
  },
  setCurrentValue: s = () => {
  },
  userInput: o = R(null),
  currentValue: u = R(void 0),
  displayValue: f = d(() => ""),
  isTypeNumber: _ = d(() => !0)
}) {
  const m = p(e, "type"), b = p(e, "eAllowed"), v = p(e, "min"), g = p(e, "modelValue");
  return {
    handleInput: (I) => {
      if (_.value) {
        const E = I.target.value;
        o.value = E;
        const P = E === "" ? null : Number(E);
        s(P, !1);
        return;
      }
      let C = I.target.value.trim();
      if (m.value === "integerNonNegative") {
        const E = C.match(/\d+/g);
        let P = 0;
        E !== null ? (P = parseInt(E.join(""), 10), P = Math.max(P, 0), C = P) : C = null, s(C), r.value.value = C;
      } else if (m.value === "integerPositive") {
        if (C === "0")
          C = null;
        else {
          const E = C.match(/\d+/g);
          let P = 0;
          E !== null ? (P = parseInt(E.join(""), 10), P = Math.max(P, 1), C = P) : C = null;
        }
        s(C), r.value.value = C;
      } else if (m.value === "integer") {
        const E = C.match(/\d+/g);
        let P = 0;
        E !== null ? (P = parseInt(E.join(""), 10), C.indexOf("-") !== -1 && (P = -P), C = P, s(C), r.value.value = C) : C === "-" ? (C = "-", r.value.value = C) : (C = null, s(C), r.value.value = C);
      }
    },
    handleInputChange: (I) => {
      if (!_.value)
        return;
      const C = I.target.value, E = C !== "" ? Number(C) : "";
      (qn(E) && !Number.isNaN(E) || C === "") && s(E), o.value = null;
    },
    handleKeydown: (I) => {
      I.keyCode === X.arrowUp ? (n(), I.preventDefault()) : I.keyCode === X.arrowDown ? (t(), I.preventDefault()) : (!b.value && I.keyCode === X.e || v.value >= 0 && I.keyCode === X.minus || I.keyCode === X.plus) && (I.preventDefault(), I.stopPropagation());
    },
    onBlurNumber: (I) => {
      (o.value !== null || !g.value && g.value !== 0) && (o.value = null, u.value = g.value, r.value.value = f.value), a(I);
    }
  };
}
function H$(e) {
  const t = p(e, "type"), n = p(e, "min");
  return {
    minLocal: d(() => {
      let a;
      return t.value === "integerNonNegative" ? a = 0 : t.value === "integerPositive" && (a = 1), (qe(a) || !ae(n.value) && n.value > a) && (a = n.value), a;
    })
  };
}
function $$(e, {
  verifyValue: t = () => {
  },
  changeModel: n = () => {
  }
}) {
  const r = p(e, "precision"), a = p(e, "modelValue"), s = R(null), o = R(a.value), u = d(() => {
    if (s.value !== null)
      return s.value;
    let _ = o.value;
    if (ae(_))
      return "";
    if (qn(_)) {
      if (Number.isNaN(_))
        return "";
      qe(r.value) || (_ = _.toFixed(r.value));
    }
    return _;
  });
  return {
    currentValue: o,
    displayValue: u,
    setCurrentValue: (_, m = !0) => {
      const b = o.value, v = t(_);
      if (b !== v) {
        if (!m) {
          n({ model: v });
          return;
        }
        s.value = null, n({ model: v }), o.value = v;
      }
    },
    userInput: s
  };
}
function W$(e) {
  const t = p(e, "max"), n = p(e, "min"), r = p(e, "step"), a = p(e, "type"), s = d(() => a.value === "number"), o = d(() => s.value ? "number" : "text"), u = d(() => s.value ? {
    max: t.value,
    min: n.value,
    step: r.value
  } : {});
  return {
    inputType: o,
    isTypeNumber: s,
    numberAttributes: u
  };
}
function U$(e, {
  changeModel: t = () => {
  },
  minLocal: n = d(() => {
  })
}) {
  const r = p(e, "modelUndefined"), a = p(e, "stepStrictly"), s = p(e, "step"), o = p(e, "precision"), u = p(e, "max"), f = p(e, "modelValue"), _ = (g) => {
    if (ae(g))
      return 0;
    const S = g.toString(), A = S.indexOf(".");
    let w = 0;
    return A !== -1 && (w = S.length - A - 1), w;
  }, m = d(() => {
    const g = _(s.value);
    return qe(o.value) ? Math.max(_(f.value), g) : (g > o.value && console.warn(
      "AInputNumber",
      "precision should not be less than the decimal places of step"
    ), o.value);
  });
  return {
    ensurePrecision: ({ value: g, currentValue: S, coefficient: A = 1 }) => qn(g) ? Au(g + s.value * A, m.value) : S,
    verifyValue: (g, S) => {
      let A = Number(g);
      return ae(g) || Number.isNaN(A) ? null : (g === "" && (A = r.value), a.value && (A = Au(Math.round(A / s.value) * s.value, o.value)), qe(o.value) || (A = Au(A, o.value)), A > u.value ? (A = u.value, S && t({ model: A })) : A < n.value && (A = n.value, S && t({ model: A })), A);
    }
  };
}
function j$(e) {
  const t = p(e, "inputWidth");
  return {
    inputWidthStyleValue: d(() => {
      let r = t.value;
      return qn(t.value) && (r = `${t.value}px`), qe(r) ? {} : {
        "--a_input_number_width": r
      };
    })
  };
}
const bn = R({
  propsDefault: {
    controlsType: "plus-minus",
    eAllowed: !1,
    iconPrepend: void 0,
    inputWidth: 200,
    isLabelFloat: !1,
    max: void 0,
    min: void 0,
    modelUndefined: void 0,
    placeholder: void 0,
    precision: void 0,
    readonly: void 0,
    step: 1,
    stepStrictly: void 0,
    type: "number"
  }
}), LU = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    bn.value.propsDefault = {
      ...bn.value.propsDefault,
      ...t
    };
  }
}, ps = {
  name: "AInputNumber",
  inheritAttrs: !1,
  mixins: [
    q$,
    Dp
  ],
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    controlsType: {
      type: String,
      required: !1,
      default: () => bn.value.propsDefault.controlsType,
      validator: (e) => ["plus-minus", "arrows", "none"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    eAllowed: {
      type: Boolean,
      required: !1,
      default: () => bn.value.propsDefault.eAllowed
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: () => bn.value.propsDefault.iconPrepend
    },
    inputWidth: {
      type: [String, Number],
      required: !1,
      default: () => bn.value.propsDefault.inputWidth
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: () => bn.value.propsDefault.isLabelFloat
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: () => bn.value.propsDefault.max
    },
    min: {
      type: Number,
      required: !1,
      default: () => bn.value.propsDefault.min
    },
    modelUndefined: {
      required: !1,
      default: () => bn.value.propsDefault.modelUndefined
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: () => bn.value.propsDefault.placeholder
    },
    precision: {
      type: Number,
      validator: (e) => e >= 0 && e === Number.parseInt(`${e}`, 10),
      default: () => bn.value.propsDefault.precision
    },
    readonly: {
      type: Boolean,
      required: !1,
      default: () => bn.value.propsDefault.readonly
    },
    step: {
      type: Number,
      required: !1,
      default: () => bn.value.propsDefault.step
    },
    stepStrictly: {
      type: Boolean,
      required: !1,
      default: () => bn.value.propsDefault.stepStrictly
    },
    type: {
      type: String,
      required: !1,
      default: () => bn.value.propsDefault.type,
      validator: (e) => ["number", "integerNonNegative", "integerPositive", "integer"].indexOf(e) !== -1
      // TODO: "float", "floatPositiv", "floatNonNegative"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = zt(e), {
      componentStyleHide: r
    } = dn(e), {
      ariaDescribedbyLocal: a,
      changeModel: s,
      clearModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: _,
      isErrors: m,
      isModel: b,
      onBlur: v,
      onFocus: g
    } = An(e, t), {
      isClearButtonLocal: S
    } = wd(e, {
      isModel: b
    }), {
      minLocal: A
    } = H$(e), {
      inputType: w,
      isTypeNumber: T,
      numberAttributes: I
    } = W$(e), {
      placeholderAttributes: C
    } = Yl(e), {
      inputWidthStyleValue: E
    } = j$(e), P = R(void 0), M = p(e, "disabled"), k = (oe) => {
      if (M.value)
        return;
      const xe = oe.target.value;
      s({
        model: +xe
      });
    }, {
      isAutofill: F
    } = _p({ inputRef: P }), {
      ensurePrecision: D,
      verifyValue: W
    } = U$(e, {
      changeModel: s,
      minLocal: A
    }), {
      currentValue: $,
      displayValue: z,
      setCurrentValue: ne,
      userInput: Q
    } = $$(e, {
      verifyValue: W,
      changeModel: s
    }), {
      increase: ce,
      decrease: he
    } = N$(e, {
      currentValue: $,
      displayValue: z,
      ensurePrecision: D,
      setCurrentValue: ne,
      minLocal: A
    }), {
      handleInput: ve,
      handleInputChange: me,
      handleKeydown: Ne,
      onBlurNumber: we
    } = V$(e, {
      currentValue: $,
      decrease: he,
      displayValue: z,
      increase: ce,
      inputRef: P,
      onBlur: v,
      setCurrentValue: ne,
      userInput: Q,
      isTypeNumber: T
    });
    return st(
      () => e.modelValue,
      (oe) => {
        const xe = W(Q.value), re = W(oe, !0);
        !qn(xe) && (!xe || xe !== re) && ($.value = re, Q.value = null);
      },
      { immediate: !0 }
    ), {
      ariaDescribedbyLocal: a,
      attributesToExcludeFromRender: n,
      clearModel: o,
      componentStyleHide: r,
      currentValue: $,
      decrease: he,
      displayValue: z,
      errorsId: u,
      handleInput: ve,
      handleInputChange: me,
      handleKeydown: Ne,
      helpTextId: f,
      htmlIdLocal: _,
      increase: ce,
      inputRef: P,
      inputType: w,
      inputWidthStyleValue: E,
      isAutofill: F,
      isClearButtonLocal: S,
      isErrors: m,
      isModel: b,
      numberAttributes: I,
      onBlurNumber: we,
      onFocus: g,
      onInput: k,
      placeholderAttributes: C,
      userInput: Q
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__container"
      }, [
        c("div", {
          class: ["a_form_element__parent", {
            a_form_element__parent_float: this.isLabelFloat,
            a_form_element__parent_not_empty: this.isModel || this.isAutofill,
            a_form_element__parent_float_has_icon_prepend: this.iconPrepend,
            a_form_element__parent_invalid: this.isErrors
          }]
        }, [
          this.label && !this.isLabelFloat && c(tn, {
            id: this.htmlIdLocal,
            alwaysTranslate: this.alwaysTranslate,
            label: this.label,
            labelClass: this.labelClass,
            labelScreenReader: this.labelScreenReader,
            required: this.required,
            type: this.type,
            isLabelFloat: this.isLabelFloat,
            isError: this.isErrors
          }),
          c("div", {
            class: [
              "a_form_element_number",
              {
                a_form_element_number_controls: this.controlsType !== "none"
              }
            ]
          }, [
            c("div", {
              class: "a_form_element",
              style: {
                ...this.inputWidthStyleValue
              }
            }, [
              this.label && this.isLabelFloat && c(tn, {
                id: this.htmlIdLocal,
                alwaysTranslate: this.alwaysTranslate,
                label: this.label,
                labelClass: this.labelClass,
                labelScreenReader: this.labelScreenReader,
                required: this.required,
                type: this.type,
                isLabelFloat: this.isLabelFloat,
                isError: this.isErrors
              }),
              this.iconPrepend && c(lt, {
                icon: this.iconPrepend,
                class: "a_input__icon_prepend"
              }),
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                autocomplete: this.autocomplete,
                value: this.displayValue,
                type: this.inputType,
                class: [
                  "a_form_control a_input a_input_number",
                  this.inputClass,
                  {
                    a_form_element_with_one_btn: this.isClearButtonLocal,
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabled,
                ariaRequired: this.required,
                ariaInvalid: this.isErrors,
                "aria-describedby": this.ariaDescribedbyLocal,
                ...this.numberAttributes,
                ...this.placeholderAttributes,
                ...this.inputAttributes,
                onInput: this.handleInput,
                onChange: this.handleInputChange,
                onKeydown: this.handleKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlurNumber
              }),
              this.isClearButtonLocal ? c("div", {
                class: "a_form_control__actions"
              }, [
                c(Ad, {
                  alwaysTranslate: this.alwaysTranslate,
                  disabled: this.disabled,
                  class: this.clearButtonClass,
                  onClear: this.clearModel
                })
              ]) : ""
            ]),
            this.controlsType === "plus-minus" && c("div", {
              class: "a_btn_group"
            }, [
              c(ct, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_btn a_btn_outline_secondary",
                iconLeft: eA,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_NUMBER_BTN_DECREASE_",
                textScreenReader: "_A_INPUT_NUMBER_BTN_DECREASE_",
                onClick: this.decrease
              }),
              c(ct, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_btn a_btn_outline_secondary",
                iconLeft: tA,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_NUMBER_BTN_INCREASE_",
                textScreenReader: "_A_INPUT_NUMBER_BTN_INCREASE_",
                onClick: this.increase
              })
            ])
          ]),
          c(Sn, {
            id: this.helpTextId,
            alwaysTranslate: this.alwaysTranslate,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(gn, {
            id: this.errorsId,
            alwaysTranslate: this.alwaysTranslate,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
};
function G$({
  idMin: e = d(() => "")
}) {
  return {
    setFocusToMinInput: () => {
      const n = document.getElementById(e.value);
      n && n.focus();
    }
  };
}
function Y$({
  htmlIdLocal: e = d(() => "")
}) {
  const t = d(() => `${e.value}_min`);
  return {
    idMax: d(() => `${e.value}_max`),
    idMin: t
  };
}
function z$(e, {
  htmlIdLocal: t = d(() => ""),
  idMax: n = d(() => ""),
  idMin: r = d(() => "")
}) {
  const a = p(e, "inputAttributes"), s = p(e, "inputAttributesMax"), o = p(e, "inputAttributesMin"), u = d(() => `${t.value}_label`), f = d(() => ({
    "aria-labelledby": `${u.value} ${r.value}`,
    ...a.value,
    ...o.value
  }));
  return {
    inputAttributesMaxLocal: d(() => ({
      "aria-labelledby": `${u.value} ${n.value}`,
      ...a.value,
      ...s.value
    })),
    inputAttributesMinLocal: f
  };
}
function K$(e, {
  changeModel: t = () => ({})
}) {
  const n = p(e, "keyMax"), r = p(e, "keyMin"), a = p(e, "modelValue"), s = d(() => {
    var _;
    return (_ = a.value) == null ? void 0 : _[r.value];
  }), o = d(() => {
    var _;
    return (_ = a.value) == null ? void 0 : _[n.value];
  });
  return {
    changeModelMax: ({ model: _ }) => {
      const m = Se(a.value);
      m[n.value] = _, t({ model: m });
    },
    changeModelMin: ({ model: _ }) => {
      const m = Se(a.value);
      m[r.value] = _, t({ model: m });
    },
    modelValueMax: o,
    modelValueMin: s
  };
}
function X$(e) {
  const t = p(e, "type");
  return {
    typeLocal: d(() => t.value.replace("Range", ""))
  };
}
const Rp = ["numberRange", "integerNonNegativeRange", "integerPositiveRange", "integerRange"], nA = {};
Y(Rp, (e) => {
  nA[e] = !0;
});
const rA = nA, uu = {
  name: "AInputNumberRange",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    controlsType: {
      type: String,
      required: !1,
      default: "plus-minus",
      validator: (e) => ["plus-minus", "arrows"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => mt("a_input_number_range_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesMax: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesMin: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputWidth: {
      type: [Number, String],
      required: !1,
      default: 200
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyMax: {
      tpe: String,
      required: !1,
      default: "max"
    },
    keyMin: {
      tpe: String,
      required: !1,
      default: "min"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelMax: {
      type: String,
      required: !1,
      default: "_A_INPUT_NUMBER_RANGE_LABEL_MAX_"
    },
    labelMin: {
      type: String,
      required: !1,
      default: "_A_INPUT_NUMBER_RANGE_LABEL_MIN_"
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: void 0
    },
    min: {
      type: Number,
      required: !1,
      default: void 0
    },
    modelUndefined: {
      required: !1,
      default: void 0
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholderMax: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholderMin: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    precision: {
      type: Number,
      validator: (e) => e >= 0 && e === Number.parseInt(`${e}`, 10)
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    step: {
      type: Number,
      required: !1,
      default: 1
    },
    stepStrictly: {
      type: Boolean,
      required: !1
    },
    type: {
      type: String,
      required: !1,
      default: "numberRange",
      validator: (e) => Rp.indexOf(e) !== -1
      // TODO: "float", "floatPositiv", "floatNonNegative"
    }
  },
  emits: [
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = zt(e), {
      componentStyleHide: r
    } = dn(e), {
      changeModel: a,
      errorsId: s,
      helpTextId: o,
      htmlIdLocal: u,
      isErrors: f
    } = An(e, t), {
      changeModelMax: _,
      changeModelMin: m,
      modelValueMax: b,
      modelValueMin: v
    } = K$(e, {
      changeModel: a
    }), {
      idMax: g,
      idMin: S
    } = Y$({
      htmlIdLocal: u
    }), {
      typeLocal: A
    } = X$(e), {
      inputAttributesMaxLocal: w,
      inputAttributesMinLocal: T
    } = z$(e, {
      htmlIdLocal: u,
      idMax: g,
      idMin: S
    }), {
      setFocusToMinInput: I
    } = G$({
      idMin: S
    }), {
      destroyEventBusClickLabel: C,
      initEventBusClickLabel: E
    } = Pp({
      htmlIdLocal: u,
      clickLabel: I
    });
    return E(), Bt(() => {
      C();
    }), {
      attributesToExcludeFromRender: n,
      changeModelMax: _,
      changeModelMin: m,
      componentStyleHide: r,
      errorsId: s,
      helpTextId: o,
      htmlIdLocal: u,
      idMax: g,
      idMin: S,
      inputAttributesMaxLocal: w,
      inputAttributesMinLocal: T,
      isErrors: f,
      modelValueMax: b,
      modelValueMin: v,
      typeLocal: A
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      class: "a_input_number_range",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_invalid: this.isErrors
        }]
      }, [
        this.label ? c(tn, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: !1,
          isError: this.isErrors
        }) : "",
        c("div", {
          class: "a_input_number_range__content"
        }, [
          c("div", {
            class: "a_input_number_range__group a_input_number_range__group_min"
          }, [
            c(tn, {
              id: this.idMin,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_input_number_range__label a_input_number_range__label_min",
              isLabelFloat: !1,
              label: this.labelMin,
              isError: this.isErrors
            }),
            c(ps, {
              id: this.idMin,
              alwaysTranslate: this.alwaysTranslate,
              controlsType: this.controlsType,
              iconPrepend: this.iconPrepend,
              inputWidth: this.inputWidth,
              isLabelFloat: !0,
              max: this.max,
              min: this.min,
              modelUndefined: this.modelUndefined,
              precision: this.precision,
              readonly: this.readonly,
              step: this.step,
              stepStrictly: this.stepStrictly,
              type: this.typeLocal,
              disabled: this.disabled,
              inputAttributes: this.inputAttributesMinLocal,
              required: this.required,
              modelValue: this.modelValueMin,
              placeholder: this.placeholderMin,
              change: this.changeModelMin
            })
          ]),
          c("div", {
            class: "a_input_number_range__group a_input_number_range__group_max"
          }, [
            c(tn, {
              id: this.idMax,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_input_number_range__label a_input_number_range__label_max",
              isLabelFloat: !1,
              label: this.labelMax,
              isError: this.isErrors
            }),
            c(ps, {
              id: this.idMax,
              alwaysTranslate: this.alwaysTranslate,
              controlsType: this.controlsType,
              iconPrepend: this.iconPrepend,
              inputWidth: this.inputWidth,
              isLabelFloat: !0,
              max: this.max,
              min: this.min,
              modelUndefined: this.modelUndefined,
              precision: this.precision,
              readonly: this.readonly,
              step: this.step,
              stepStrictly: this.stepStrictly,
              type: this.typeLocal,
              disabled: this.disabled,
              inputAttributes: this.inputAttributesMaxLocal,
              required: this.required,
              modelValue: this.modelValueMax,
              placeholder: this.placeholderMax,
              change: this.changeModelMax
            })
          ])
        ]),
        c(Sn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors ? c(gn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        }) : ""
      ])
    ]) : null;
  }
};
function Z$(e) {
  const t = p(e, "heightCss"), n = d(() => {
    if (t.value)
      return `height: ${t.value}`;
  }), r = d(() => {
    if (t.value)
      return `max-height: ${t.value}`;
  });
  return {
    styleHeight: n,
    styleMaxHeight: r
  };
}
function J$(e, {
  changeModel: t = () => {
  }
}) {
  const n = p(e, "disabled"), r = p(e, "modelUndefined"), a = p(e, "modelValue"), s = R(void 0), o = R(""), u = R(""), f = R(void 0), _ = () => {
    s.value = Se(a.value) || "";
  }, m = () => {
    n.value || t({
      model: r.value
    });
  }, b = () => {
    try {
      a.value ? o.value = JSON.stringify(a.value, void 0, 2) : o.value = "", u.value = o.value, f.value = void 0;
    } catch {
    }
  }, v = (w) => {
    if (!n.value)
      if (!u.value || u.value.length === 0)
        t({
          $event: w,
          model: r.value
        });
      else
        try {
          const T = JSON.parse(u.value);
          t({
            $event: w,
            model: T
          }), o.value = JSON.stringify(T, void 0, 2), f.value = null;
        } catch (T) {
          f.value = T.toString();
        }
  };
  return {
    clearModel: m,
    formatJson: () => {
      try {
        u.value = JSON.stringify(JSON.parse(u.value), void 0, 2);
      } catch (w) {
        f.value = w.toString();
      }
    },
    initialValue: s,
    initInitialValue: _,
    jsonString: o,
    jsonStringInput: u,
    JSONtoString: b,
    onInput: (w) => {
      n.value || (u.value = w.target.value, v());
    },
    parseError: f,
    resetModel: () => {
      n.value || (t({
        model: s.value
      }), setTimeout(() => {
        b();
      }));
    },
    stringToJSON: v
  };
}
const Q$ = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-repeat" viewBox="0 0 16 16">
  <path d="M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41m-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9"/>
  <path fill-rule="evenodd" d="M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5 5 0 0 0 8 3M3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9z"/>
</svg>`, e4 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-braces" viewBox="0 0 16 16">
  <path d="M2.114 8.063V7.9c1.005-.102 1.497-.615 1.497-1.6V4.503c0-1.094.39-1.538 1.354-1.538h.273V2h-.376C3.25 2 2.49 2.759 2.49 4.352v1.524c0 1.094-.376 1.456-1.49 1.456v1.299c1.114 0 1.49.362 1.49 1.456v1.524c0 1.593.759 2.352 2.372 2.352h.376v-.964h-.273c-.964 0-1.354-.444-1.354-1.538V9.663c0-.984-.492-1.497-1.497-1.6M13.886 7.9v.163c-1.005.103-1.497.616-1.497 1.6v1.798c0 1.094-.39 1.538-1.354 1.538h-.273v.964h.376c1.613 0 2.372-.759 2.372-2.352v-1.524c0-1.094.376-1.456 1.49-1.456V7.332c-1.114 0-1.49-.362-1.49-1.456V4.352C13.51 2.759 12.75 2 11.138 2h-.376v.964h.273c.964 0 1.354.444 1.354 1.538V6.3c0 .984.492 1.497 1.497 1.6"/>
</svg>`, aA = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
  <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"/>
  <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"/>
</svg>`, t4 = {
  name: "AJson",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    heightCss: {
      type: String,
      required: !1,
      default: "400px;"
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => mt("a_json_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = ao(e), {
      attributesToExcludeFromRender: r
    } = zt(e), {
      componentStyleHide: a
    } = dn(e), {
      ariaDescribedbyLocal: s,
      changeModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: _,
      isErrors: m,
      isModel: b,
      onBlur: v,
      onFocus: g
    } = An(e, t), {
      styleHeight: S,
      styleMaxHeight: A
    } = Z$(e), {
      clearModel: w,
      formatJson: T,
      initialValue: I,
      initInitialValue: C,
      jsonString: E,
      jsonStringInput: P,
      JSONtoString: M,
      onInput: k,
      parseError: F,
      resetModel: D
    } = J$(e, {
      changeModel: o
    });
    return C(), M(), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: r,
      changeModel: o,
      clearModel: w,
      componentStyleHide: a,
      disabledAttribut: n,
      errorsId: u,
      formatJson: T,
      helpTextId: f,
      htmlIdLocal: _,
      onInput: k,
      initialValue: I,
      initInitialValue: C,
      isErrors: m,
      isModel: b,
      jsonString: E,
      jsonStringInput: P,
      JSONtoString: M,
      onBlur: v,
      onFocus: g,
      parseError: F,
      resetModel: D,
      styleHeight: S,
      styleMaxHeight: A
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(tn, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: !1,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required
        }) : "",
        c("div", {
          class: "a_columns a_columns_count_12"
        }, [
          c("div", {
            class: "a_column a_column_6 a_column_12_touch"
          }, [
            c("div", {
              class: "a_d_flex a_justify_content_between"
            }, [
              c(tn, {
                id: this.htmlIdLocal,
                alwaysTranslate: this.alwaysTranslate,
                extra: this.extra,
                idSuffix: "_input",
                isError: this.isErrors,
                isLabelFloat: !1,
                label: "_A_JSON_INPUT_"
              }),
              c("div", {
                class: "a_btn_group",
                role: "group"
              }, [
                c(Oe, {
                  class: [
                    "a_btn",
                    {
                      a_btn_transparent_info: !this.parseError,
                      a_btn_transparent_dark: this.parseError
                    }
                  ],
                  disabled: !!this.parseError,
                  iconLeft: e4,
                  textScreenReader: "_A_JSON_FORMAT_INPUT_",
                  title: "_A_JSON_FORMAT_INPUT_",
                  type: "button",
                  onClick: this.formatJson
                }),
                c(Oe, {
                  class: "a_btn a_btn_transparent_warning",
                  iconLeft: Q$,
                  textScreenReader: "_A_JSON_RESET_INPUT_",
                  title: "_A_JSON_RESET_INPUT_",
                  type: "button",
                  onClick: this.JSONtoString
                }),
                c(Oe, {
                  class: "a_btn a_btn_transparent_danger",
                  iconLeft: aA,
                  textScreenReader: "_A_JSON_DISCARD_ALL_CHANGES_",
                  title: "_A_JSON_DISCARD_ALL_CHANGES_",
                  type: "button",
                  onClick: this.resetModel
                })
              ])
            ]),
            c("div", {
              class: "a_form_element a_form_element_textarea"
            }, [
              c("textarea", {
                ref: "textareaRef",
                id: this.htmlIdLocal,
                style: this.styleHeight,
                value: this.jsonStringInput,
                "aria-describedby": this.ariaDescribedbyLocal,
                ariaInvalid: this.isErrors,
                ariaRequired: this.required,
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: [
                  "a_form_control a_json__textarea",
                  this.inputClass,
                  {
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabledAttribut,
                spellcheck: "false",
                ...this.inputAttributes,
                onInput: this.onInput,
                onFocus: this.onFocus,
                onBlur: this.onBlur
              })
            ]),
            this.parseError ? c(be, {
              alwaysTranslate: this.alwaysTranslate,
              class: "a_form_element__invalid_text",
              html: "_A_JSON_ERROR_HTML_{{error}}_",
              extra: {
                error: this.parseError
              }
            }) : ""
          ]),
          c("div", {
            class: "a_column a_column_6 a_column_12_touch"
          }, [
            c(be, {
              tag: "div",
              text: "_A_JSON_CURRENT_VALUE_"
            }),
            Ft(c("div", {
              class: "a_json__code",
              style: this.styleMaxHeight
            }), [
              [sn, this.jsonString]
            ])
          ])
        ]),
        c(Sn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(gn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function n4(e) {
  const t = p(e, "label");
  return {
    hasLabel: d(() => !ae(t.value))
  };
}
function r4(e, {
  changeModel: t = () => {
  }
}) {
  const n = p(e, "modelValue"), r = p(e, "trueValue"), a = p(e, "falseValue"), s = p(e, "disabled"), o = d(() => n.value === r.value), u = (_) => {
    s.value || (setTimeout(() => {
      const m = o.value ? a.value : r.value;
      t({
        model: m,
        $event: _
      });
    }), _.stopPropagation(), _.preventDefault());
  };
  return {
    isChecked: o,
    onClick: u,
    onKeydown: (_) => {
      (_.keyCode === X.enter || _.keyCode === X.space) && u(_);
    }
  };
}
const Dd = {
  name: "AOneCheckbox",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    falseValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => mt("a_one_checkbox_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelTitle: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    trueValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !0
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = ao(e), {
      attributesToExcludeFromRender: r
    } = zt(e), {
      componentStyleHide: a
    } = dn(e), {
      ariaDescribedbyLocal: s,
      changeModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: _,
      isErrors: m,
      onBlur: b,
      onFocus: v
    } = An(e, t), {
      isChecked: g,
      onClick: S,
      onKeydown: A
    } = r4(e, {
      changeModel: o
    }), {
      hasLabel: w
    } = n4(e);
    return {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: r,
      componentStyleHide: a,
      disabledAttribut: n,
      errorsId: u,
      hasLabel: w,
      helpTextId: f,
      htmlIdLocal: _,
      isChecked: g,
      isErrors: m,
      onBlur: b,
      onClick: S,
      onFocus: v,
      onKeydown: A
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent"]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            class: ["a_custom_control a_custom_checkbox", {
              a_custom_control_invalid: this.isErrors
            }]
          }, [
            c("input", {
              id: this.htmlIdLocal,
              value: this.modelValue,
              type: "checkbox",
              checked: this.isChecked,
              class: "a_custom_control_input",
              disabled: this.disabledAttribut,
              ariaRequired: this.required,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              indeterminate: this.indeterminate,
              ...this.inputAttributes,
              onClick: this.onClick,
              onKeydown: this.onKeydown,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }),
            c("label", {
              for: this.htmlIdLocal,
              class: [
                "a_custom_control_label",
                {
                  a_custom_control_label_width_auto: this.isWidthAuto
                }
              ]
            }, [
              this.hasLabel && c("span", {
                class: [
                  "a_custom_control_label__text",
                  this.labelClass
                ]
              }, [
                c(Oe, {
                  alwaysTranslate: this.alwaysTranslate,
                  extra: this.extra,
                  html: this.label,
                  textScreenReader: this.labelScreenReader,
                  tag: "span",
                  title: this.isLabelTitle ? this.label : void 0,
                  type: "text"
                }),
                this.required ? c("span", null, "*") : ""
              ])
            ])
          ])
        ]),
        c(Sn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(gn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function a4(e, {
  changeModel: t = () => {
  },
  dataKeyByKeyIdLocal: n = d(() => ({}))
}) {
  const r = p(e, "disabled"), a = p(e, "isModelArray"), s = p(e, "modelValue");
  return {
    onChangeModelValue: ({ model: u, $event: f }) => {
      r.value || (a.value ? !s.value || s.value.length === 0 ? setTimeout(() => {
        t({
          model: [u],
          $event: f
        });
      }) : setTimeout(() => {
        const _ = [];
        Y(s.value, (m) => {
          n.value[m] || _.push(m);
        }), _.push(u), t({
          model: _,
          $event: f
        });
      }) : setTimeout(() => {
        t({
          model: u,
          $event: f
        });
      }));
    }
  };
}
const iA = {
  name: "ARadio",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    classDataParent: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => []
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => mt("a_radio_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inline: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isModelArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: void 0
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "value"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    search: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: void 0
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrder: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_",
        notElementsWithSearch: "_A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_",
        search: "_A_RADIO_SEARCH_"
      })
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "onSearchOutside",
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = zt(e), {
      componentStyleHide: r
    } = dn(e), {
      ariaDescribedbyLocal: a,
      changeModel: s,
      errorsId: o,
      helpTextId: u,
      htmlIdLocal: f,
      isErrors: _,
      onBlur: m,
      onFocus: b
    } = An(e, t), {
      textAfterLabel: v
    } = bp(e), {
      dataFromServer: g,
      dataExtraLocal: S,
      dataKeyByKeyIdLocal: A,
      dataLocal: w,
      hasDataExtra: T
    } = Lp(e), {
      loadDataFromServer: I,
      loadDataFromServerForSearchAPI: C,
      loadingDataFromServer: E,
      loadingSearchApi: P,
      onSearchInApi: M,
      searchApiLocal: k,
      updateUrlPropsComputed: F,
      urlPropsComputed: D
    } = Tp(e, {
      changeModel: s,
      dataExtraLocal: S,
      dataFromServer: g
    }), {
      loadingLocal: W
    } = Ep(e, {
      loadingDataFromServer: E
    });
    Ip(t, {
      dataKeyByKeyIdLocal: A,
      dataLocal: w
    });
    const {
      dataSort: $
    } = Cp(e, {
      data: w
    }), {
      dataGrouped: z,
      groupsForLever: ne,
      hasKeyGroup: Q,
      keyGroupArray: ce
    } = xp(e, {
      data: $
    }), {
      hasNotElementsExtraWithSearch: he,
      hasNotElementsWithSearch: ve,
      idForButtonSearchOutside: me,
      modelSearch: Ne,
      modelSearchLowerCase: we,
      modelSearchOutside: oe,
      onSearchOutside: xe,
      searching: re,
      searchingElements: Re,
      searchingElementsExtra: Z,
      searchingGroups: U,
      searchingGroupsWithSearchInGroup: se,
      searchOutsideOrApi: pe,
      searchOutsideRef: Ie,
      updateModelSearch: He,
      updateModelSearchOutside: Ke
    } = Op(e, t, {
      data: $,
      dataExtra: S,
      groupsForLever: ne,
      htmlIdLocal: f,
      hasKeyGroup: Q,
      keyGroupArray: ce,
      searchApiLocal: k,
      onSearchInApi: M
    }), {
      onChangeModelValue: Je
    } = a4(e, {
      changeModel: s,
      dataKeyByKeyIdLocal: A
    }), {
      iconCollapse: ut,
      initIsCollapsedLocal: Ee,
      isCollapsedLocal: Qe,
      titleCollapse: At,
      toggleCollapse: Fe
    } = yp(e, t), {
      groupId: ft
    } = mp(e, {
      htmlIdLocal: f
    });
    return st(D, F, {
      deep: !0
    }), Ee(), I(), C(), {
      ariaDescribedbyLocal: a,
      attributesToExcludeFromRender: n,
      componentStyleHide: r,
      dataExtraLocal: S,
      dataGrouped: z,
      dataSort: $,
      errorsId: o,
      groupId: ft,
      groupsForLever: ne,
      hasDataExtra: T,
      hasKeyGroup: Q,
      hasNotElementsExtraWithSearch: he,
      hasNotElementsWithSearch: ve,
      helpTextId: u,
      htmlIdLocal: f,
      iconCollapse: ut,
      idForButtonSearchOutside: me,
      isCollapsedLocal: Qe,
      isErrors: _,
      loadingLocal: W,
      loadingSearchApi: P,
      modelSearch: Ne,
      modelSearchLowerCase: we,
      modelSearchOutside: oe,
      onBlur: m,
      onChangeModelValue: Je,
      onFocus: b,
      onSearchOutside: xe,
      searching: re,
      searchingElements: Re,
      searchingElementsExtra: Z,
      searchingGroups: U,
      searchingGroupsWithSearchInGroup: se,
      searchOutsideOrApi: pe,
      searchOutsideRef: Ie,
      textAfterLabel: v,
      titleCollapse: At,
      toggleCollapse: Fe,
      updateModelSearch: He,
      updateModelSearchOutside: Ke
    };
  },
  render() {
    var e, t, n;
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: [
          "a_form_element__parent",
          {
            a_radio_inline: this.inline
          }
        ]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("fieldset", {
            id: this.htmlIdLocal,
            tabindex: -1,
            class: [
              "a_fieldset",
              this.classFieldset,
              {
                a_fieldset_no_border: !this.hasBorder,
                a_fieldset_invalid: this.isErrors,
                a_fieldset_collapsed: this.isCollapsedLocal
              }
            ],
            "aria-describedby": this.ariaDescribedbyLocal
          }, [
            this.label || this.labelScreenReader ? c(Oe, {
              type: "text",
              alwaysTranslate: this.alwaysTranslate,
              tag: "legend",
              class: [
                "a_legend",
                {
                  a_legend_invalid: this.isErrors
                },
                this.labelClass
              ],
              extra: this.extra,
              html: this.label,
              textScreenReader: this.labelScreenReader,
              textAfter: this.textAfterLabel
            }) : "",
            this.collapsible ? c(Oe, {
              "aria-controls": this.groupId,
              "aria-expanded": !this.isCollapsedLocal,
              alwaysTranslate: this.alwaysTranslate,
              class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
              iconLeft: this.iconCollapse,
              title: this.titleCollapse,
              textScreenReader: this.titleCollapse,
              type: "button",
              onClick: this.toggleCollapse
            }) : "",
            c("div", {
              id: this.groupId,
              class: "a_fieldset__content"
            }, [
              this.searchOutsideOrApi ? c("div", {
                class: "a_fieldset__search"
              }, [
                c("form", {
                  onSubmit: this.onSearchOutside
                }, [
                  c("div", {
                    class: "input-group"
                  }, [
                    c(In, {
                      alwaysTranslate: this.alwaysTranslate,
                      label: ((e = this.texts) == null ? void 0 : e.search) || "_A_RADIO_SEARCH_",
                      inputClass: "a_select__element_clickable",
                      modelValue: this.modelSearchOutside,
                      modelUndefined: "",
                      "onUpdate:modelValue": this.updateModelSearchOutside
                    }),
                    c(Oe, {
                      alwaysTranslate: this.alwaysTranslate,
                      ariaDisabled: this.loadingSearchApi,
                      class: "a_btn a_btn_primary",
                      disabled: this.disabled,
                      iconLeft: lo,
                      type: "submit"
                    })
                  ])
                ])
              ]) : "",
              this.search ? c(In, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_fieldset__search",
                label: ((t = this.texts) == null ? void 0 : t.search) || "_A_RADIO_SEARCH_",
                modelValue: this.modelSearch,
                modelUndefined: "",
                "onUpdate:modelValue": this.updateModelSearch
              }) : "",
              this.loadingLocal ? c(Fl) : "",
              this.hasDataExtra ? c("div", {
                class: "a_radio__data_extra"
              }, [
                ...this.dataExtraLocal.map((r, a) => c(Wf, {
                  key: r[ze],
                  id: this.htmlIdLocal,
                  alwaysTranslate: this.alwaysTranslate,
                  idSuffix: "extra",
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataItem: r,
                  disabled: this.disabled,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  itemIndex: a,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElementsExtra,
                  slotName: this.slotName,
                  slotAppendName: this.slotAppendName,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.hasNotElementsExtraWithSearch ? "" : c("div", {
                  class: "a_divider",
                  ariaHidden: !0
                })
              ]) : "",
              c("div", {}, this.hasKeyGroup ? [
                c(hp, {
                  id: `${this.htmlIdLocal}_lev_0`,
                  alwaysTranslate: this.alwaysTranslate,
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataGrouped: this.dataGrouped,
                  disabled: this.disabled,
                  groupsForLever: this.groupsForLever,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  levelIndex: 0,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElements,
                  searchingGroups: this.searchingGroups,
                  searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  type: "radio",
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)
              ] : [
                c("div", {
                  class: [
                    "a_radio_data",
                    {
                      a_btn_group: this.isButtonGroup
                    },
                    this.classDataParent
                  ]
                }, [
                  ...this.dataSort.map((r, a) => c(Wf, {
                    key: r[ze],
                    id: this.htmlIdLocal,
                    alwaysTranslate: this.alwaysTranslate,
                    classButtonGroupDefault: this.classButtonGroupDefault,
                    dataItem: r,
                    disabled: this.disabled,
                    isButtonGroup: this.isButtonGroup,
                    isErrors: this.isErrors,
                    isWidthAuto: this.isWidthAuto,
                    itemIndex: a,
                    keyDisabled: this.keyDisabled,
                    keyTitle: this.keyTitle,
                    keyTitleCallback: this.keyTitleCallback,
                    modelSearch: this.modelSearchLowerCase,
                    modelValue: this.modelValue,
                    searching: this.searching,
                    searchingElements: this.searchingElements,
                    slotName: this.slotName,
                    slotAppendName: this.slotAppendName,
                    onChangeModelValue: this.onChangeModelValue
                  }, this.$slots))
                ])
              ]),
              !this.dataSort.length || this.hasNotElementsWithSearch ? c(be, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_form__not_elements",
                text: ((n = this.texts) == null ? void 0 : n.notElementsWithSearch) || "_A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_"
              }) : ""
            ])
          ])
        ]),
        c(Sn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(gn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, Lv = {
  name: "ASelectLabelElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Object,
      required: !0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = p(e, "data");
    return {
      currentLabel: d(() => t.value[vt])
    };
  },
  render() {
    return c("span", {}, [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        item: this.data,
        label: this.currentLabel,
        inDropdown: !1
      }) : Ft(c("span"), [
        [sn, this.currentLabel]
      ])
    ]);
  }
}, Ev = {
  name: "ASelectValueCloseable",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hideDeleteButton: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, { emit: t }) {
    const n = p(e, "data"), r = d(() => n.value[vt]), a = d(() => n.value[ze]);
    return {
      closeModel: (o) => {
        t("changeModelValue", {
          currentValue: a.value,
          $event: o,
          isSelected: !0
        }), o.stopPropagation(), o.preventDefault();
      },
      currentLabel: r
    };
  },
  render() {
    return c("li", {
      class: "a_select__ul_closeable__item"
    }, [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        item: this.data,
        label: this.currentLabel,
        inDropdown: !1
      }) : c(be, {
        alwaysTranslate: this.alwaysTranslate,
        tag: "span",
        text: this.currentLabel,
        extra: this.data.extra
      }),
      !this.hideDeleteButton && c("button", {
        class: "a_btn a_btn_link a_select__ul_closeable__item__btn",
        type: "button",
        tabindex: -1,
        disabled: this.disabled,
        onClick: this.closeModel
      }, [
        c(lt, {
          icon: ja
        })
      ])
    ]);
  }
};
function i4(e, {
  htmlIdLocal: t = d(() => "")
}) {
  const n = p(e, "disabled"), r = d(() => `${t.value}_container`), a = d(() => `${t.value}_list`), s = d(() => `${t.value}_label`), o = d(() => n.value ? void 0 : 0);
  return {
    ariaLabelledby: s,
    containerId: r,
    idForList: a,
    tabindex: o
  };
}
function s4(e, {
  isMultiselect: t = d(() => !1)
}) {
  const n = p(e, "isSelectAll"), r = p(e, "isDeselectAll");
  return {
    isDividerSelectDeselectVisible: d(() => t.value && (n.value || r.value))
  };
}
function l4(e, {
  dataKeyByKeyIdLocal: t = d(() => ({}))
}) {
  const n = p(e, "countMultiselect"), r = p(e, "modelValue"), a = p(e, "type"), s = d(() => a.value === "multiselect"), o = d(() => !s.value || !r.value || !Ae(r.value) ? [] : Gt(r.value, (b) => t.value[b])), u = d(() => s.value ? o.value.length > 0 : !ae(r.value)), f = d(() => {
    var b;
    return ((b = o.value) == null ? void 0 : b.length) || 0;
  }), _ = d(() => f.value > n.value), m = d(() => ({
    [vt]: "_A_SELECT_MORE_SELECTED_{{count}}_",
    extra: {
      count: f.value - n.value
    }
  }));
  return {
    isModelLengthLimitExceeded: _,
    isModelValue: u,
    isMultiselect: s,
    limitExceededModelData: m,
    modelValueLength: f,
    modelValueMultiselectFiltered: o
  };
}
function o4(e, {
  changeModel: t = () => {
  },
  dataAll: n = d(() => []),
  dataKeyByKeyIdLocal: r = d(() => ({})),
  isMultiselect: a = d(() => !1),
  togglePopover: s = () => {
  }
}) {
  const o = p(e, "countMultiselect"), u = p(e, "isCloseByClick"), f = p(e, "deselectable"), _ = p(e, "maxCountMultiselect"), m = p(e, "modelValue"), b = d(() => !a.value || !_.value ? !1 : de(m.value, "length") >= _.value), v = d(() => qe(u.value) ? !a.value : u.value), g = ({ currentValue: C, $event: E, isSelected: P }) => {
    let M;
    if (a.value)
      if (M = Se(m.value) || [], P) {
        const k = M.indexOf(C);
        M.splice(k, 1);
      } else {
        if (b.value)
          return;
        M.push(C);
      }
    else if (P)
      if (f.value)
        M = void 0;
      else
        return;
    else
      M = C;
    t({
      model: M,
      $event: E,
      currentModel: C,
      item: r.value[C]
    }), v.value && s();
  }, S = (C) => {
    const E = tg(m.value, o.value);
    t({
      model: E,
      $event: C
    });
  }, A = () => {
    const C = n.value.map((E) => E[ze]);
    t({
      model: C
    });
  }, w = (C) => {
    const E = C.keyCode;
    (E === X.enter || E === X.space) && (A(), C.preventDefault());
  }, T = () => {
    t({
      model: []
    });
  };
  return {
    deleteExceededItems: S,
    onChangeModelValue: g,
    onDeselectAll: T,
    onKeydownDeselectAll: (C) => {
      const E = C.keyCode;
      (E === X.enter || E === X.space) && (T(), C.preventDefault());
    },
    onKeydownSelectAll: w,
    onSelectAll: A
  };
}
function u4(e, {
  dataKeyByKeyIdLocal: t = d(() => ({})),
  isModelLengthLimitExceeded: n,
  isModelValue: r = d(() => !1),
  isMultiselect: a,
  modelValueLength: s,
  modelValueMultiselectFiltered: o = d(() => [])
}) {
  const u = p(e, "modelValue"), f = p(e, "isSelectionCloseable"), _ = d(() => {
    if (!r.value)
      return;
    let b = "";
    return a.value ? f.value || !n.value ? Y(o.value, (v, g) => {
      const S = t.value[v] || {};
      b += `${g > 0 ? ", " : ""}${S[vt]}`;
    }) : b = `${s.value} ausgewählt` : b = (t.value[u.value] || {})[vt], b;
  });
  return {
    hasSelectedTitle: d(() => !!_.value),
    selectedTitle: _
  };
}
function d4({
  $elements: e = d(() => []),
  clickOutsideCallback: t = () => {
  }
}) {
  const n = R("ontouchend" in document ? "touchstart" : "click"), r = (o) => {
    let u = !1;
    Y(e.value, (f) => {
      if (f === o.target || f.contains(o.target))
        return u = !0, !1;
    }), u || t();
  }, a = () => {
    document.addEventListener(n.value, r);
  }, s = () => {
    document.removeEventListener(n.value, r);
  };
  return Bt(() => s()), {
    setEventClickOutside: a,
    destroyEventClickOutside: s
  };
}
const Ov = ".a_select__element_clickable:not([disabled]):not([data-hide])";
function c4(e, {
  emit: t
}) {
  const n = p(e, "disabled"), r = p(e, "menuWidthType"), a = R(void 0), s = R(void 0), o = R(!1), u = R(void 0), f = R(void 0), _ = p(e, "placement"), m = R(void 0), b = d(() => [
    a.value,
    u.value
  ]), v = d(() => {
    if (r.value === "as_button")
      return a.value.clientWidth;
  }), {
    setEventClickOutside: g,
    destroyEventClickOutside: S
  } = d4({
    $elements: b,
    clickOutsideCallback: z
  }), A = ({ isArrowDown: ne }) => {
    const Q = f.value.querySelectorAll(Ov);
    if (Q.length === 0)
      return;
    let ce = !1;
    Y(Q, (he, ve) => {
      if (he === document.activeElement)
        return ce = !0, ne ? ve < Q.length - 1 && Q[ve + 1].focus() : ve > 0 && Q[ve - 1].focus(), !1;
    }), ce || Q[0].focus();
  }, w = () => {
    a.value.focus();
  }, T = (ne) => {
    const Q = ne.keyCode, ce = Q === X.arrowDown;
    ce || Q === X.arrowUp ? (A({ isArrowDown: ce }), ne.preventDefault()) : Q === X.escape ? (z(), w(), ne.preventDefault(), ne.stopPropagation()) : Q === X.tab && (z(), w());
  }, I = () => {
    s.value && (s.value(), s.value = void 0);
  }, C = () => {
    t("open");
  }, E = () => {
    const ne = f.value.querySelector(Ov);
    ne && ne.focus();
  }, P = () => {
    m.value || (m.value = !0, document.addEventListener("keydown", T));
  }, M = () => {
    C(), setTimeout(() => {
      E(), P();
    });
  }, k = () => {
    !s.value && a.value && f.value && (s.value = Xl(
      a.value,
      f.value,
      () => {
        !a.value || !f.value || Ql(
          a.value,
          f.value,
          {
            placement: _.value,
            middleware: [
              Jl(),
              Zl({ limiter: od() })
            ]
          }
        ).then(({ x: ne, y: Q }) => {
          if (!a.value.clientWidth) {
            z();
            return;
          }
          const ce = {
            left: `${ne}px`,
            top: `${Q}px`
          };
          v.value && (ce.maxWidth = `${v.value}px`, ce.minWidth = `${v.value}px`), Object.assign(f.value.style, ce);
        });
      }
    ), M());
  }, F = () => {
    n.value || (o.value = !0, g(), k());
  }, D = () => {
    o.value ? (z(), w()) : F();
  }, W = (ne) => {
    const Q = ne.keyCode;
    Q === X.enter || Q === X.space ? (D(), ne.preventDefault()) : !o.value && (Q === X.arrowUp || Q === X.arrowDown) && (F(), ne.preventDefault());
  }, $ = () => {
    m.value && (m.value = !1, document.removeEventListener("keydown", T));
  };
  function z() {
    o.value = !1, I(), S(), $();
  }
  return Bt(() => $()), {
    buttonRef: a,
    handleKeydown: W,
    isOpen: o,
    menuParentRef: u,
    menuRef: f,
    togglePopover: D
  };
}
const it = R({
  propsDefault: {
    buttonClass: void 0,
    caretIcon: Fs,
    countMultiselect: 4,
    dataExtra: [],
    exceededItemsDeletable: !0,
    inBody: !0,
    isCloseByClick: void 0,
    isDataSimpleArray: !1,
    deselectable: !0,
    isDeselectAll: !1,
    isSelectAll: !1,
    isSelectionCloseable: !0,
    keyDisabled: void 0,
    keyGroup: void 0,
    keyId: "value",
    keyLabel: "label",
    maxCountMultiselect: void 0,
    menuWidthType: "as_button",
    modelValue: void 0,
    placement: "bottom-end",
    popperContainerId: "a_select_container",
    search: !1,
    searchApi: !1,
    searchApiKey: void 0,
    searchOutside: !1,
    searchTimeout: 0,
    slotName: void 0,
    sortOrder: void 0,
    sortOrderGroup: void 0,
    textDeselectAll: "Alle abwählen",
    textSelectAll: "Alle auswählen",
    translateData: !1,
    type: "select"
  }
}), EU = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    it.value.propsDefault = {
      ...it.value.propsDefault,
      ...t
    };
  }
}, Vl = {
  name: "ASelect",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonClass: {
      type: String,
      required: !1,
      default: () => it.value.propsDefault.buttonClass
    },
    buttonClassDefault: {
      type: [String, Object],
      required: !1,
      default: "a_form_control a_select_toggle"
    },
    caretIcon: {
      type: [String, Object],
      required: !1,
      default: () => it.value.propsDefault.caretIcon
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    class: {
      type: [String, Object],
      required: !1
    },
    countMultiselect: {
      type: Number,
      required: !1,
      default: () => it.value.propsDefault.countMultiselect
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => it.value.propsDefault.dataExtra
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    deselectable: {
      type: Boolean,
      required: !1,
      default: () => it.value.propsDefault.deselectable
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    exceededItemsDeletable: {
      type: Boolean,
      required: !1,
      default: () => it.value.propsDefault.exceededItemsDeletable
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => mt("a_ui_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inBody: {
      type: Boolean,
      required: !1,
      default: () => it.value.propsDefault.inBody
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      required: !1
    },
    isCloseByClick: {
      type: Boolean,
      required: !1,
      default: () => it.value.propsDefault.isCloseByClick
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: () => it.value.propsDefault.isDataSimpleArray
    },
    isDeselectAll: {
      type: Boolean,
      required: !1,
      default: () => it.value.propsDefault.isDeselectAll
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSelectAll: {
      type: Boolean,
      required: !1,
      default: () => it.value.propsDefault.isSelectAll
    },
    isSelectionCloseable: {
      type: Boolean,
      required: !1,
      default: () => it.value.propsDefault.isSelectionCloseable
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: () => it.value.propsDefault.keyDisabled
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: () => it.value.propsDefault.keyGroup
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: () => it.value.propsDefault.keyId
    },
    keyLabel: {
      type: String,
      required: !1,
      default: () => it.value.propsDefault.keyLabel
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    maxCountMultiselect: {
      type: Number,
      required: !1,
      default: () => it.value.propsDefault.maxCountMultiselect,
      validator: (e) => e > 0
    },
    menuWidthType: {
      type: String,
      required: !1,
      default: () => it.value.propsDefault.menuWidthType,
      validator: (e) => ["as_button", "by_content"].indexOf(e) !== -1
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: () => it.value.propsDefault.modelValue
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholder: {
      type: String,
      required: !1,
      default: void 0
    },
    placement: {
      type: String,
      required: !1,
      default: () => it.value.propsDefault.placement,
      validator: (e) => Ur.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: () => it.value.propsDefault.popperContainerId
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    search: {
      type: Boolean,
      required: !1,
      default: () => it.value.propsDefault.search
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: () => it.value.propsDefault.searchApi
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: () => it.value.propsDefault.searchApiKey
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: () => it.value.propsDefault.searchOutside
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: () => it.value.propsDefault.searchTimeout
    },
    selectMenuClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: () => it.value.propsDefault.slotName
    },
    sortOrder: {
      type: String,
      required: !1,
      default: () => it.value.propsDefault.sortOrder,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: () => it.value.propsDefault.sortOrderGroup,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    textDeselectAll: {
      type: String,
      required: !1,
      default: () => it.value.propsDefault.textDeselectAll
    },
    textSelectAll: {
      type: String,
      required: !1,
      default: () => it.value.propsDefault.textSelectAll
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: () => it.value.propsDefault.translateData
    },
    type: {
      type: String,
      required: !1,
      default: () => it.value.propsDefault.type,
      validator: (e) => ["select", "multiselect"].indexOf(e) !== -1
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "blur",
    "focus",
    "onSearchOutside",
    "open",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = zt(e), {
      componentStyleHide: r
    } = dn(e), {
      ariaDescribedbyLocal: a,
      changeModel: s,
      clearModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: _,
      isErrors: m,
      onBlur: b,
      onFocus: v
    } = An(e, t), {
      dataAll: g,
      dataFromServer: S,
      dataExtraLocal: A,
      dataKeyByKeyIdLocal: w,
      dataLocal: T,
      hasDataExtra: I
    } = Lp(e), {
      loadDataFromServer: C,
      loadDataFromServerForSearchAPI: E,
      loadingDataFromServer: P,
      loadingSearchApi: M,
      onSearchInApi: k,
      searchApiLocal: F,
      updateUrlPropsComputed: D,
      urlPropsComputed: W
    } = Tp(e, {
      changeModel: s,
      dataExtraLocal: A,
      dataFromServer: S
    }), {
      loadingLocal: $
    } = Ep(e, {
      loadingDataFromServer: P
    }), {
      addPopperContainerInBody: z,
      popperContainerIdSelector: ne
    } = Nh(e);
    Ip(t, {
      dataKeyByKeyIdLocal: w,
      dataLocal: T
    });
    const {
      isModelLengthLimitExceeded: Q,
      isModelValue: ce,
      isMultiselect: he,
      limitExceededModelData: ve,
      modelValueLength: me,
      modelValueMultiselectFiltered: Ne
    } = l4(e, {
      dataKeyByKeyIdLocal: w
    }), {
      ariaLabelledby: we,
      containerId: oe,
      idForList: xe,
      tabindex: re
    } = i4(e, {
      htmlIdLocal: _
    }), {
      dataSort: Re
    } = Cp(e, {
      data: T
    }), {
      dataGrouped: Z,
      groupsForLever: U,
      hasKeyGroup: se,
      keyGroupArray: pe
    } = xp(e, {
      data: Re
    }), {
      hasNotElementsExtraWithSearch: Ie,
      hasNotElementsWithSearch: He,
      idForButtonSearchOutside: Ke,
      modelSearch: Je,
      modelSearchLowerCase: ut,
      modelSearchOutside: Ee,
      onSearchOutside: Qe,
      searching: At,
      searchingElements: Fe,
      searchingElementsExtra: ft,
      searchingGroups: Dt,
      searchingGroupsWithSearchInGroup: $t,
      searchOutsideOrApi: qt,
      searchOutsideRef: Cr,
      updateModelSearch: nr,
      updateModelSearchOutside: Ir
    } = Op(e, t, {
      data: Re,
      dataExtra: A,
      groupsForLever: U,
      hasKeyGroup: se,
      htmlIdLocal: _,
      keyGroupArray: pe,
      onSearchInApi: k,
      searchApiLocal: F
    }), {
      buttonRef: cn,
      handleKeydown: rr,
      isOpen: ar,
      menuParentRef: Nn,
      menuRef: Yr,
      togglePopover: Vn
    } = c4(e, t), {
      deleteExceededItems: zr,
      onChangeModelValue: ir,
      onDeselectAll: sr,
      onKeydownDeselectAll: ln,
      onKeydownSelectAll: On,
      onSelectAll: Lr
    } = o4(e, {
      changeModel: s,
      dataAll: g,
      dataKeyByKeyIdLocal: w,
      isMultiselect: he,
      togglePopover: Vn
    }), {
      hasSelectedTitle: Er,
      selectedTitle: pi
    } = u4(e, {
      dataKeyByKeyIdLocal: w,
      isModelLengthLimitExceeded: Q,
      isModelValue: ce,
      isMultiselect: he,
      modelValueLength: me,
      modelValueMultiselectFiltered: Ne
    }), {
      isDividerSelectDeselectVisible: Kr
    } = s4(e, {
      isMultiselect: he
    }), {
      destroyEventBusClickLabel: Or,
      initEventBusClickLabel: Ga
    } = Pp({
      htmlIdLocal: _,
      clickLabel: Vn
    });
    return st(W, D, {
      deep: !0
    }), z({ className: "a_select_container" }), Ga(), C(), E(), Bt(() => {
      Or();
    }), {
      ariaDescribedbyLocal: a,
      ariaLabelledby: we,
      attributesToExcludeFromRender: n,
      buttonRef: cn,
      clearModel: o,
      componentStyleHide: r,
      containerId: oe,
      dataExtraLocal: A,
      dataGrouped: Z,
      dataKeyByKeyIdLocal: w,
      dataLocal: T,
      dataSort: Re,
      deleteExceededItems: zr,
      errorsId: u,
      groupsForLever: U,
      handleKeydown: rr,
      hasDataExtra: I,
      hasKeyGroup: se,
      hasNotElementsExtraWithSearch: Ie,
      hasNotElementsWithSearch: He,
      hasSelectedTitle: Er,
      helpTextId: f,
      htmlIdLocal: _,
      idForButtonSearchOutside: Ke,
      idForList: xe,
      isDividerSelectDeselectVisible: Kr,
      isErrors: m,
      isModelLengthLimitExceeded: Q,
      isModelValue: ce,
      isMultiselect: he,
      isOpen: ar,
      limitExceededModelData: ve,
      loadingLocal: $,
      loadingSearchApi: M,
      menuParentRef: Nn,
      menuRef: Yr,
      modelSearch: Je,
      modelSearchLowerCase: ut,
      modelSearchOutside: Ee,
      modelValueLength: me,
      modelValueMultiselectFiltered: Ne,
      onBlur: b,
      onChangeModelValue: ir,
      onDeselectAll: sr,
      onFocus: v,
      onKeydownDeselectAll: ln,
      onKeydownSelectAll: On,
      onSearchOutside: Qe,
      onSelectAll: Lr,
      popperContainerIdSelector: ne,
      searching: At,
      searchingElements: Fe,
      searchingElementsExtra: ft,
      searchingGroups: Dt,
      searchingGroupsWithSearchInGroup: $t,
      searchOutsideOrApi: qt,
      searchOutsideRef: Cr,
      selectedTitle: pi,
      tabindex: re,
      togglePopover: Vn,
      updateModelSearch: nr,
      updateModelSearchOutside: Ir
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      class: this.class,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModelValue || this.isOpen
        }]
      }, [
        this.label && c(tn, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          loading: this.loadingLocal,
          required: this.required,
          type: this.type,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            id: this.containerId,
            ref: "ui_select",
            class: "a_select",
            role: "application"
          }, [
            c("div", {
              ref: "buttonRef",
              id: this.htmlIdLocal,
              autocomplete: this.autocomplete,
              class: [this.buttonClassDefault, this.buttonClass, {
                disabled: this.disabled,
                a_select_toggle_closeable: this.isMultiselect && this.isSelectionCloseable && this.isModelValue,
                a_form_control_invalid: this.isErrors
              }],
              "aria-labelledby": this.ariaLabelledby,
              role: "combobox",
              tabindex: this.tabindex,
              "aria-haspopup": "listbox",
              ariaExpanded: this.isOpen,
              ariaRequired: this.required,
              ariaDisabled: this.disabled,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              title: this.hasSelectedTitle ? this.selectedTitle : void 0,
              // TODO: title
              onClick: this.togglePopover,
              onKeydown: this.handleKeydown,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }, [
              this.$slots.fixedPlaceholder ? this.$slots.fixedPlaceholder({
                dataKeyByKeyId: this.dataKeyByKeyIdLocal,
                modelValue: this.modelValue
              }) : this.isModelValue ? this.isMultiselect ? this.isSelectionCloseable ? c("ul", {
                class: "a_select__ul_closeable"
              }, [
                tg(this.modelValueMultiselectFiltered, this.countMultiselect).map((e, t) => c(Ev, {
                  key: t,
                  alwaysTranslate: this.alwaysTranslate,
                  data: this.dataKeyByKeyIdLocal[e] || {},
                  slotName: this.slotName,
                  disabled: this.disabled,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.isModelLengthLimitExceeded && c(Ev, {
                  key: this.countMultiselect,
                  alwaysTranslate: this.alwaysTranslate,
                  data: this.limitExceededModelData,
                  disabled: this.disabled,
                  hideDeleteButton: !this.exceededItemsDeletable,
                  onChangeModelValue: this.deleteExceededItems
                })
              ]) : c("span", {
                class: "a_select__value__label"
              }, [
                this.isModelLengthLimitExceeded ? c(be, {
                  alwaysTranslate: this.alwaysTranslate,
                  text: "_A_SELECT_SELECTED_{{count}}_",
                  extra: {
                    count: this.modelValueLength
                  }
                }) : this.modelValueMultiselectFiltered.map((e, t) => c("span", {
                  key: t
                }, [
                  c("span", null, t !== 0 ? ", " : ""),
                  c(Lv, {
                    alwaysTranslate: this.alwaysTranslate,
                    data: this.dataKeyByKeyIdLocal[e] || {},
                    slotName: this.slotName
                  }, this.$slots)
                ]))
              ]) : c(Lv, {
                alwaysTranslate: this.alwaysTranslate,
                data: this.dataKeyByKeyIdLocal[this.modelValue] || {},
                class: "a_select__value__label",
                slotName: this.slotName
              }, this.$slots) : c(be, {
                tag: "span",
                text: this.placeholder
              }),
              c(fa, {
                to: this.popperContainerIdSelector,
                disabled: !this.inBody
              }, [
                c("div", {
                  ref: "menuParentRef",
                  id: this.idForList,
                  style: this.isOpen ? "" : "display: none;",
                  "aria-hidden": !this.isOpen,
                  role: "application"
                }, [
                  c("div", {
                    ref: "menuRef",
                    class: [
                      "a_select_menu",
                      {
                        a_select_menu_by_content: this.menuWidthType === "by_content"
                      },
                      this.selectMenuClass
                    ],
                    role: "listbox",
                    "aria-labelledby": this.htmlIdLocal,
                    onClick: (e) => e.stopPropagation()
                  }, [
                    this.searchOutsideOrApi && c("div", {
                      class: "a_select__search"
                    }, [
                      c("form", {
                        onSubmit: this.onSearchOutside
                      }, [
                        c("div", {
                          class: "a_select__search__group"
                        }, [
                          c(In, {
                            alwaysTranslate: this.alwaysTranslate,
                            label: "_A_SELECT_SEARCH_",
                            inputClass: "a_select__element_clickable",
                            modelValue: this.modelSearchOutside,
                            modelUndefined: "",
                            "onUpdate:modelValue": this.updateModelSearchOutside
                          }),
                          c(ct, {
                            alwaysTranslate: this.alwaysTranslate,
                            ariaDisabled: this.loadingSearchApi,
                            disabled: this.disabled,
                            class: "a_btn a_btn_primary a_select__element_clickable",
                            type: "submit",
                            iconLeft: lo,
                            loadingAlign: "left"
                          })
                        ])
                      ])
                    ]),
                    this.search && c("div", {
                      class: "a_select__search"
                    }, [
                      c(In, {
                        alwaysTranslate: this.alwaysTranslate,
                        label: "_A_SELECT_SEARCH_",
                        inputClass: "a_select__element_clickable",
                        modelValue: this.modelSearch,
                        modelUndefined: "",
                        "onUpdate:modelValue": this.updateModelSearch
                      })
                    ]),
                    (this.searchOutside || this.search) && c("div", {
                      class: "a_select__divider",
                      ariaHidden: !0
                    }),
                    c("div", {
                      class: "a_select_menu__child"
                    }, [
                      this.isMultiselect && this.isSelectAll && c("div", {
                        class: "a_select__menu__link a_select__menu__link_selected a_select__element_clickable",
                        role: "option",
                        tabindex: "-1",
                        onClick: this.onSelectAll,
                        onKeydown: this.onKeydownSelectAll
                      }, [
                        c("span", {
                          class: "a_select__menu__link__icon_box"
                        }, [
                          c(lt, {
                            icon: fp
                          })
                        ]),
                        c("span", null, this.textSelectAll)
                      ]),
                      this.isMultiselect && this.isDeselectAll && c("div", {
                        class: "a_select__menu__link a_select__menu__link_selected a_select__element_clickable",
                        role: "option",
                        tabindex: "-1",
                        onClick: this.onDeselectAll,
                        onKeydown: this.onKeydownDeselectAll
                      }, [
                        c("span", {
                          class: "a_select__menu__link__icon_box"
                        }, [
                          c(lt, {
                            icon: ja
                          })
                        ]),
                        c("span", null, this.textDeselectAll)
                      ]),
                      this.isDividerSelectDeselectVisible && c("div", {
                        class: "a_select__divider",
                        ariaHidden: !0
                      }),
                      this.loadingLocal || this.loadingSearchApi ? c(Fl) : "",
                      this.hasDataExtra && c("div", {}, [
                        ...this.dataExtraLocal.map((e, t) => c(Uf, {
                          key: e[ze],
                          id: this.htmlIdLocal,
                          alwaysTranslate: this.alwaysTranslate,
                          dataItem: e,
                          disabled: this.disabled,
                          searching: this.searching,
                          searchingElements: this.searchingElementsExtra,
                          itemIndex: t,
                          keyDisabled: this.keyDisabled,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          slotName: this.slotName,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)),
                        !this.hasNotElementsExtraWithSearch && c("div", {
                          class: "a_select__divider",
                          ariaHidden: !0
                        })
                      ]),
                      c("div", {}, this.hasKeyGroup ? [
                        c(hp, {
                          id: `${this.htmlIdLocal}_lev_0`,
                          alwaysTranslate: this.alwaysTranslate,
                          dataGrouped: this.dataGrouped,
                          disabled: this.disabled,
                          groupsForLever: this.groupsForLever,
                          isErrors: this.isErrors,
                          keyDisabled: this.keyDisabled,
                          levelIndex: 0,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          searching: this.searching,
                          searchingElements: this.searchingElements,
                          searchingGroups: this.searchingGroups,
                          searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                          slotName: this.slotName,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)
                      ] : [
                        c("div", {}, [
                          ...this.dataSort.map((e, t) => c(Uf, {
                            key: e[ze],
                            id: this.htmlIdLocal,
                            alwaysTranslate: this.alwaysTranslate,
                            dataItem: e,
                            disabled: this.disabled,
                            searching: this.searching,
                            searchingElements: this.searchingElements,
                            itemIndex: t,
                            keyDisabled: this.keyDisabled,
                            modelSearch: this.modelSearchLowerCase,
                            modelValue: this.modelValue,
                            slotName: this.slotName,
                            type: this.type,
                            onChangeModelValue: this.onChangeModelValue
                          }, this.$slots))
                        ])
                      ]),
                      !this.dataSort.length && !this.hasDataExtra || this.hasNotElementsWithSearch ? c(be, {
                        alwaysTranslate: this.alwaysTranslate,
                        class: "a_form__not_elements",
                        text: "_A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_"
                      }) : ""
                    ])
                  ])
                ])
              ]),
              this.hasCaret ? c("span", {
                class: "a_caret"
              }, [
                c(lt, {
                  icon: this.caretIcon
                })
              ]) : ""
            ])
          ])
        ]),
        c(Sn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(gn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function f4({
  isModelFalse: e = d(() => !1),
  isModelTrue: t = d(() => !1)
}) {
  return {
    isChecked: d(() => {
      if (t.value)
        return !0;
      if (e.value)
        return !1;
    })
  };
}
function h4(e, {
  isModelFalse: t = d(() => !1),
  isModelTrue: n = d(() => !1)
}) {
  const r = p(e, "trueLabel"), a = p(e, "falseLabel"), s = p(e, "defaultLabel");
  return {
    labelValueLocal: d(() => n.value ? r.value : t.value ? a.value : s.value)
  };
}
function p4(e) {
  const t = p(e, "modelValue"), n = p(e, "trueValue"), r = p(e, "falseValue"), a = d(() => t.value === n.value || t.value === "true"), s = d(() => t.value === r.value || t.value === "false");
  return {
    isModelDefault: d(() => !a.value && !s.value),
    isModelFalse: s,
    isModelTrue: a
  };
}
function _4(e, {
  changeModel: t = () => {
  },
  isModelFalse: n = d(() => !1),
  isModelTrue: r = d(() => !1)
}) {
  const a = p(e, "defaultValue"), s = p(e, "disabled"), o = p(e, "falseValue"), u = p(e, "isThreeState"), f = p(e, "trueValue"), _ = (b) => {
    if (s.value)
      return;
    let v;
    r.value ? v = o.value : u.value && n.value ? v = a.value : v = f.value, t({
      model: v,
      $event: b
    });
  };
  return {
    onInput: _,
    onKeydown: (b) => {
      (b.keyCode === X.enter || b.keyCode === X.space) && (_(b), b.stopPropagation(), b.preventDefault());
    }
  };
}
const sA = {
  name: "ASwitch",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    defaultLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_DEFAULT_LABEL_"
    },
    defaultValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    falseLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_FALSE_LABEL_"
    },
    falseValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !1
    },
    fullWidth: {
      type: Boolean,
      required: !1
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => mt("a_switch_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isThreeState: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Ur.indexOf(e) !== -1
    },
    trueLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_TRUE_LABEL_"
    },
    trueValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !0
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = ao(e), {
      attributesToExcludeFromRender: r
    } = zt(e), {
      componentStyleHide: a
    } = dn(e), {
      ariaDescribedbyLocal: s,
      changeModel: o,
      clearModel: u,
      errorsId: f,
      helpTextId: _,
      htmlIdLocal: m,
      isErrors: b,
      isModel: v,
      onBlur: g,
      onFocus: S
    } = An(e, t), {
      isModelDefault: A,
      isModelFalse: w,
      isModelTrue: T
    } = p4(e), {
      labelValueLocal: I
    } = h4(e, {
      isModelFalse: w,
      isModelTrue: T
    }), {
      isChecked: C
    } = f4({
      isModelFalse: w,
      isModelTrue: T
    }), {
      onInput: E,
      onKeydown: P
    } = _4(e, {
      changeModel: o,
      isModelFalse: w,
      isModelTrue: T
    });
    return {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: r,
      clearModel: u,
      componentStyleHide: a,
      disabledAttribut: n,
      errorsId: f,
      helpTextId: _,
      htmlIdLocal: m,
      isChecked: C,
      isErrors: b,
      isModel: v,
      isModelDefault: A,
      labelValueLocal: I,
      onBlur: g,
      onFocus: S,
      onInput: E,
      onKeydown: P
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(tn, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          isError: this.isErrors
        }) : "",
        c("div", {
          class: "switch_button__wrapper"
        }, [
          c(Oe, {
            class: [
              "switch_button",
              {
                switch_button_undefined: this.isModelDefault,
                switch_button_invalid: this.isErrors,
                switch_button_auto: !this.fullWidth
              }
            ],
            classDefault: "",
            isTitleHtml: this.isTitleHtml,
            tag: "div",
            title: this.title,
            titlePlacement: this.titlePlacement,
            type: "text"
          }, {
            default: () => [
              c("input", {
                id: this.htmlIdLocal,
                "aria-describedby": this.ariaDescribedbyLocal,
                ariaInvalid: this.isErrors,
                ariaRequired: this.required,
                checked: this.isChecked,
                class: [
                  "switch_button__input",
                  this.inputClass
                ],
                disabled: this.disabledAttribut,
                type: "checkbox",
                ...this.inputAttributes,
                onClick: this.onInput,
                onKeydown: this.onKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlur
              }),
              c(be, {
                alwaysTranslate: this.alwaysTranslate,
                tag: "label",
                class: [
                  "switch_button__label",
                  {
                    switch_button__label_full: this.fullWidth
                  }
                ],
                for: this.htmlIdLocal,
                extra: this.extra,
                html: this.labelValueLocal
              })
            ]
          })
        ]),
        c(Sn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(gn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, m4 = {
  name: "ATemplate",
  inheritAttrs: !1,
  props: {
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    html: {
      type: String,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    options: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = zt(e), {
      componentStyleHide: n
    } = dn(e);
    return {
      attributesToExcludeFromRender: t,
      componentStyleHide: n
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      alwaysTranslate: void 0,
      type: void 0,
      modelValue: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      this.$slots[this.slotName] ? c("div", {
        class: "a_template"
      }, this.$slots[this.slotName]({
        options: this.options,
        props: this.$props
      })) : "",
      this.html ? Ft(c("div", {
        class: "a_template"
      }), [
        [sn, this.html]
      ]) : ""
    ]) : null;
  }
}, wl = typeof Map == "function" ? /* @__PURE__ */ new Map() : /* @__PURE__ */ function() {
  const e = [], t = [];
  return {
    has: function(r) {
      return e.indexOf(r) > -1;
    },
    get: function(r) {
      return t[e.indexOf(r)];
    },
    set: function(r, a) {
      e.indexOf(r) === -1 && (e.push(r), t.push(a));
    },
    delete: function(r) {
      const a = e.indexOf(r);
      a > -1 && (e.splice(a, 1), t.splice(a, 1));
    }
  };
}();
let lA = function(t) {
  return new Event(t, { bubbles: !0 });
};
try {
  new Event("test");
} catch {
  lA = function(n) {
    const r = document.createEvent("Event");
    return r.initEvent(n, !0, !1), r;
  };
}
function b4(e) {
  if (!e || !e.nodeName || e.nodeName !== "TEXTAREA" || wl.has(e))
    return;
  let t = null, n = null, r = null;
  function a() {
    const b = window.getComputedStyle(e, null);
    b.resize === "vertical" ? e.style.resize = "none" : b.resize === "both" && (e.style.resize = "horizontal"), b.boxSizing === "content-box" ? t = -(parseFloat(b.paddingTop) + parseFloat(b.paddingBottom)) : t = parseFloat(b.borderTopWidth) + parseFloat(b.borderBottomWidth), isNaN(t) && (t = 0), f();
  }
  function s(b) {
    {
      const v = e.style.width;
      e.style.width = "0px", e.offsetWidth, e.style.width = v;
    }
    e.style.overflowY = b;
  }
  function o(b) {
    const v = [];
    for (; b && b.parentNode && b.parentNode instanceof Element; )
      b.parentNode.scrollTop && v.push({
        node: b.parentNode,
        scrollTop: b.parentNode.scrollTop
      }), b = b.parentNode;
    return v;
  }
  function u() {
    if (e.scrollHeight === 0)
      return;
    const b = o(e), v = document.documentElement && document.documentElement.scrollTop;
    e.style.height = "", e.style.height = e.scrollHeight + t + "px", n = e.clientWidth, b.forEach(function(g) {
      g.node.scrollTop = g.scrollTop;
    }), v && (document.documentElement.scrollTop = v);
  }
  function f() {
    u();
    const b = Math.round(parseFloat(e.style.height)), v = window.getComputedStyle(e, null);
    let g = v.boxSizing === "content-box" ? Math.round(parseFloat(v.height)) : e.offsetHeight;
    if (g < b ? v.overflowY === "hidden" && (s("scroll"), u(), g = v.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(e, null).height)) : e.offsetHeight) : v.overflowY !== "hidden" && (s("hidden"), u(), g = v.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(e, null).height)) : e.offsetHeight), r !== g) {
      r = g;
      const S = lA("autosize:resized");
      try {
        e.dispatchEvent(S);
      } catch {
      }
    }
  }
  const _ = function() {
    e.clientWidth !== n && f();
  }, m = (function(b) {
    window.removeEventListener("resize", _, !1), e.removeEventListener("input", f, !1), e.removeEventListener("keyup", f, !1), e.removeEventListener("autosize:destroy", m, !1), e.removeEventListener("autosize:update", f, !1), Object.keys(b).forEach(function(v) {
      e.style[v] = b[v];
    }), wl.delete(e);
  }).bind(e, {
    height: e.style.height,
    resize: e.style.resize,
    overflowY: e.style.overflowY,
    overflowX: e.style.overflowX,
    wordWrap: e.style.wordWrap
  });
  e.addEventListener("autosize:destroy", m, !1), "onpropertychange" in e && "oninput" in e && e.addEventListener("keyup", f, !1), window.addEventListener("resize", _, !1), e.addEventListener("input", f, !1), e.addEventListener("autosize:update", f, !1), e.style.overflowX = "hidden", e.style.wordWrap = "break-word", wl.set(e, {
    destroy: m,
    update: f
  }), a();
}
function v4(e) {
  const t = wl.get(e);
  t && t.destroy();
}
function y4(e) {
  const t = wl.get(e);
  t && t.update();
}
let Ei = null;
typeof window > "u" || typeof window.getComputedStyle != "function" ? (Ei = function(t) {
  return t;
}, Ei.destroy = function(e) {
  return e;
}, Ei.update = function(e) {
  return e;
}) : (Ei = function(t, n) {
  return t && Array.prototype.forEach.call(t.length ? t : [t], function(r) {
    return b4(r);
  }), t;
}, Ei.destroy = function(e) {
  return e && Array.prototype.forEach.call(e.length ? e : [e], v4), e;
}, Ei.update = function(e) {
  return e && Array.prototype.forEach.call(e.length ? e : [e], y4), e;
});
const mf = Ei;
function g4(e) {
  const t = p(e, "isScalable"), n = R(!1), r = R(void 0);
  return {
    destroyAutosize: () => {
      n.value && (mf.destroy(r.value), n.value = !1);
    },
    initAutosize: () => {
      t.value && (mf(r.value), n.value = !0);
    },
    textareaRef: r,
    updateAutosize: () => {
      t.value && n.value && setTimeout(() => {
        mf.update(r.value);
      });
    }
  };
}
function S4(e, {
  changeModel: t = () => {
  },
  updateAutosize: n = () => {
  }
}) {
  const r = p(e, "disabled"), a = p(e, "modelUndefined");
  return {
    clearModel: () => {
      r.value || (t({
        model: a.value
      }), n());
    },
    onInput: (u) => {
      if (r.value)
        return;
      const f = u.target.value;
      t({
        model: f
      });
    }
  };
}
function A4(e) {
  const t = p(e, "resize"), n = {
    v: "a_textarea_resize_v",
    h: "a_textarea_resize_h",
    none: "a_textarea_resize_none",
    auto: ""
  };
  return {
    resizeClass: d(() => n[t.value])
  };
}
function w4(e) {
  const t = p(e, "isScalable"), n = p(e, "rows");
  return {
    rowsLocal: d(() => {
      if (n.value)
        return n.value;
      if (t.value)
        return 1;
    })
  };
}
const T4 = {
  name: "ATextarea",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => mt("a_textarea_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isScalable: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    maxlength: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    resize: {
      type: String,
      required: !1,
      default: "v",
      validator: (e) => ["v", "h", "none", "auto"].indexOf(e) !== -1
    },
    rows: {
      type: [String, Number],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = ao(e), {
      attributesToExcludeFromRender: r
    } = zt(e), {
      componentStyleHide: a
    } = dn(e), {
      ariaDescribedbyLocal: s,
      changeModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: _,
      isErrors: m,
      isModel: b,
      onBlur: v,
      onFocus: g
    } = An(e, t), {
      isClearButtonLocal: S
    } = wd(e, {
      isModel: b
    }), {
      resizeClass: A
    } = A4(e), {
      destroyAutosize: w,
      initAutosize: T,
      textareaRef: I,
      updateAutosize: C
    } = g4(e), {
      clearModel: E,
      onInput: P
    } = S4(e, {
      changeModel: o,
      updateAutosize: C
    }), {
      rowsLocal: M
    } = w4(e), {
      placeholderAttributes: k
    } = Yl(e);
    return ha(() => {
      T();
    }), Bt(() => {
      w();
    }), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: r,
      changeModel: o,
      clearModel: E,
      componentStyleHide: a,
      disabledAttribut: n,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: _,
      isClearButtonLocal: S,
      isErrors: m,
      isModel: b,
      onBlur: v,
      onFocus: g,
      onInput: P,
      placeholderAttributes: k,
      resizeClass: A,
      rowsLocal: M,
      textareaRef: I
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(tn, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required
        }) : "",
        c("div", {
          class: [
            "a_form_element a_form_element_textarea",
            {
              a_form_element_textarea_scalable: this.isScalable
            }
          ]
        }, [
          c("textarea", {
            ref: "textareaRef",
            id: this.htmlIdLocal,
            autocomplete: this.autocomplete,
            value: this.modelValue,
            rows: this.rowsLocal,
            class: [
              "a_form_control a_textarea",
              this.inputClass,
              {
                a_textarea_scalable: this.isScalable,
                a_form_element_with_one_btn: this.isClearButton,
                a_form_control_invalid: this.isErrors
              },
              this.resizeClass
            ],
            disabled: this.disabledAttribut,
            ariaRequired: this.required,
            ariaInvalid: this.isErrors,
            "aria-describedby": this.ariaDescribedbyLocal,
            maxlength: this.maxlength,
            ...this.placeholderAttributes,
            ...this.inputAttributes,
            onInput: this.onInput,
            onFocus: this.onFocus,
            onBlur: this.onBlur
          }),
          this.isClearButtonLocal ? c("div", {
            class: "a_form_control__actions"
          }, [
            c(Ad, {
              alwaysTranslate: this.alwaysTranslate,
              disabled: this.disabled,
              class: this.clearButtonClass,
              onClear: this.clearModel
            })
          ]) : ""
        ]),
        c(Sn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(gn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, Pd = {
  checkbox: UH,
  color: In,
  currency: M$,
  date: Uu,
  dateRange: i$,
  datetime: Uu,
  email: In,
  file: F$,
  integer: ps,
  integerNonNegative: ps,
  integerNonNegativeRange: uu,
  integerPositive: ps,
  integerPositiveRange: uu,
  integerRange: uu,
  json: t4,
  multiselect: Vl,
  natural: In,
  number: ps,
  numberRange: uu,
  oneCheckbox: Dd,
  password: In,
  radio: iA,
  select: Vl,
  switch: sA,
  template: m4,
  text: In,
  textarea: T4
}, x4 = ["datepickerRange", "dateRange"], oA = {};
Y(x4, (e) => {
  oA[e] = !0;
});
const uA = oA;
function C4(e) {
  const t = p(e, "children");
  return {
    specificAttributes: d(() => {
      const r = {};
      return Y(t.value, (a) => {
        const s = rA[a.type], o = uA[a.type];
        s && qe(a.inputWidth) && (r[a.id] = {
          inputWidth: "auto"
        }), o && (r[a.id] = {
          inputWidth: "inherit",
          inputAttributes: {
            style: "min-width: 181px"
          }
        });
      }), r;
    })
  };
}
const dA = {
  name: "AGroup",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    children: {
      type: Array,
      required: !1,
      default: () => []
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_6 a_column_12_touch"
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12 a_columns_gab_2"
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => mt("a_group_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: [String, Number, Array, Object, Boolean],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = zt(e), r = {
      ...Pd
    }, {
      componentStyleHide: a
    } = dn(e), {
      ariaDescribedbyLocal: s,
      changeModel: o,
      clearModel: u,
      errorsId: f,
      helpTextId: _,
      htmlIdLocal: m,
      isErrors: b
    } = An(e, t), v = p(e, "modelValue"), g = ({ item: E, model: P }) => {
      const M = E.id, k = Se(v.value);
      Ch(k, M, Se(P)), t.emit("update:modelValue", k);
    }, S = ({ item: E, dataKeyByKeyId: P }) => {
      t.emit("updateData", { item: E, dataKeyByKeyId: P });
    }, A = p(e, "children"), w = p(e, "idPrefix"), T = d(() => A.value[0] || {}), I = d(() => ql({
      id: T.value.id,
      idPrefix: T.value.idPrefix || w.value,
      htmlId: T.value.htmlId
    })), {
      specificAttributes: C
    } = C4(e);
    return {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      changeModel: o,
      clearModel: u,
      componentStyleHide: a,
      componentTypesMapping: r,
      errorsId: f,
      firstChild: T,
      helpTextId: _,
      htmlIdFirstChild: I,
      htmlIdLocal: m,
      isErrors: b,
      onUpdateDataLocal: S,
      onUpdateModelLocal: g,
      specificAttributes: C
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        id: this.htmlIdLocal,
        role: "group",
        tabindex: -1,
        class: [this.inputClass, {
          a_group_invalid: this.isErrors
        }],
        "aria-describedby": this.ariaDescribedbyLocal
      }, [
        c("div", {
          class: this.classColumns
        }, [
          this.firstChild.label && c(tn, {
            id: this.htmlIdFirstChild,
            alwaysTranslate: this.alwaysTranslate,
            extra: this.extra,
            isError: !!this.errorsAll[this.firstChild.id],
            isLabelFloat: !1,
            label: this.label || this.firstChild.label,
            labelClass: this.labelClass || this.firstChild.labelClass || this.classColumnDefault,
            labelScreenReader: this.labelScreenReader || this.firstChild.labelScreenReader,
            required: this.required || this.firstChild.required,
            type: this.firstChild.type
          }),
          this.children.map((e, t) => {
            const n = fi.value[e.type];
            let r;
            ae(e.classColumn) ? r = this.classColumnDefault : e.classColumn && (r = e.classColumn);
            let a;
            return e.isHide && (a = "display: none;"), c("div", {
              class: r,
              style: a
            }, [
              c(this.componentTypesMapping[e.type], {
                key: t,
                alwaysTranslate: this.alwaysTranslate,
                modelValue: n ? this.modelValue : de(this.modelValue, e.id),
                modelDependencies: n ? this.modelValue : void 0,
                errors: this.errorsAll[e.id],
                errorsAll: n ? this.errorsAll : void 0,
                idPrefix: this.idPrefix,
                "onUpdate:modelValue": (s) => this.onUpdateModelLocal({ item: e, model: s }),
                onUpdateData: ({ dataKeyByKeyId: s }) => this.onUpdateDataLocal({ item: e, dataKeyByKeyId: s }),
                ...e,
                disabled: this.disabled || e.disabled,
                ...this.specificAttributes[e.id],
                label: t === 0 ? void 0 : e.label,
                slotAppend: void 0,
                classColumn: void 0,
                ...this.attributesToExcludeFromRender
              }, this.$slots),
              e.slotAppend && this.$slots[e.slotAppend] ? this.$slots[e.slotAppend]({ item: e, itemIndex: t }) : ""
            ]);
          })
        ])
      ]),
      c(Sn, {
        id: this.helpTextId,
        alwaysTranslate: this.alwaysTranslate,
        html: this.helpText,
        extra: this.extra
      }),
      this.isErrors && c(gn, {
        class: "a_px_3",
        id: this.errorsId,
        alwaysTranslate: this.alwaysTranslate,
        errors: this.errors
      })
    ]) : null;
  }
};
function I4(e, t, {
  changeModel: n = () => {
  }
}) {
  const r = p(e, "modelValue");
  return {
    onUpdateModelLocal: ({ model: s, currentModel: o, item: u }) => {
      if (fi.value[u.type])
        n({ model: s, currentModel: o, item: u });
      else {
        const f = u.id, _ = Se(r.value);
        Ch(_, f, Se(s)), n({ model: _, currentModel: o, item: u });
      }
    }
  };
}
const L4 = {
  name: "AFieldset",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    children: {
      type: Array,
      required: !1,
      default: () => []
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_12"
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12"
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => mt("a_fieldset_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_"
      })
    }
  },
  emits: [
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = zt(e), r = {
      ...Pd,
      group: dA,
      fieldset: la("AFieldset")
    }, {
      componentStyleHide: a
    } = dn(e), {
      ariaDescribedbyLocal: s,
      changeModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: _,
      isErrors: m
    } = An(e, t), {
      textAfterLabel: b
    } = bp(e), {
      onUpdateModelLocal: v
    } = I4(e, t, {
      changeModel: o
    }), g = ({ item: E, dataKeyByKeyId: P }) => {
      t.emit("updateData", { item: E, dataKeyByKeyId: P });
    }, {
      groupId: S
    } = mp(e, {
      htmlIdLocal: _
    }), {
      iconCollapse: A,
      initIsCollapsedLocal: w,
      isCollapsedLocal: T,
      titleCollapse: I,
      toggleCollapse: C
    } = yp(e, t);
    return w(), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      componentStyleHide: a,
      componentTypesMapping: r,
      errorsId: u,
      groupId: S,
      helpTextId: f,
      htmlIdLocal: _,
      iconCollapse: A,
      isCollapsedLocal: T,
      isErrors: m,
      onUpdateDataLocal: g,
      onUpdateModelLocal: v,
      textAfterLabel: b,
      titleCollapse: I,
      toggleCollapse: C
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__parent"
      }, [
        c("fieldset", {
          id: this.htmlIdLocal,
          tabindex: -1,
          class: ["a_fieldset", this.classFieldset, {
            a_fieldset_invalid: this.isErrors,
            a_fieldset_no_border: !this.hasBorder,
            a_fieldset_collapsed: this.isCollapsedLocal
          }],
          "aria-describedby": this.ariaDescribedbyLocal
        }, [
          this.label || this.labelScreenReader ? c(Oe, {
            type: "text",
            alwaysTranslate: this.alwaysTranslate,
            tag: "legend",
            class: [
              "a_legend",
              {
                a_legend_invalid: this.isErrors
              },
              this.labelClass
            ],
            extra: this.extra,
            html: this.label,
            textScreenReader: this.labelScreenReader,
            textAfter: this.textAfterLabel
          }) : "",
          this.collapsible ? c(Oe, {
            "aria-controls": this.groupId,
            "aria-expanded": !this.isCollapsedLocal,
            alwaysTranslate: this.alwaysTranslate,
            class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
            iconLeft: this.iconCollapse,
            title: this.titleCollapse,
            textScreenReader: this.titleCollapse,
            type: "button",
            onClick: this.toggleCollapse
          }) : "",
          c("div", {
            id: this.groupId,
            class: [
              this.classColumns,
              "a_fieldset__content"
            ]
          }, [
            this.children.map((e, t) => {
              if (e.isRender !== !1) {
                const n = fi.value[e.type];
                let r;
                ae(e.classColumn) ? r = this.classColumnDefault : e.classColumn && (r = e.classColumn);
                let a;
                return e.isHide && (a = "display: none;"), c("div", {
                  class: r,
                  style: a
                }, [
                  c(this.componentTypesMapping[e.type], {
                    key: t,
                    alwaysTranslate: this.alwaysTranslate,
                    modelValue: n ? this.modelValue : de(this.modelValue, e.id),
                    modelDependencies: n ? this.modelValue : void 0,
                    errors: de(this.errorsAll, e.id),
                    errorsAll: n ? this.errorsAll : void 0,
                    idPrefix: this.idPrefix,
                    "onUpdate:modelValue": (s) => this.onUpdateModelLocal({ item: e, model: s }),
                    onUpdateData: ({ dataKeyByKeyId: s }) => this.onUpdateDataLocal({ item: e, dataKeyByKeyId: s }),
                    ...e,
                    disabled: this.disabled || e.disabled,
                    classColumn: void 0,
                    slotAppend: void 0,
                    ...this.attributesToExcludeFromRender
                  }, this.$slots),
                  e.slotAppend && this.$slots[e.slotAppend] ? this.$slots[e.slotAppend]({ item: e, itemIndex: t }) : ""
                ]);
              }
            }),
            this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
              id: this.htmlIdLocal,
              props: this.$props
            }) : ""
          ])
        ]),
        c(Sn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(gn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, cA = {
  fieldset: L4,
  group: dA
};
function E4() {
  return {
    componentTypesMapping: {
      ...Pd,
      ...cA
    }
  };
}
function O4(e) {
  const t = p(e, "filter");
  return {
    isContainer: d(() => !!fi.value[t.value.type])
  };
}
function D4(e) {
  const t = p(e, "filter");
  return {
    filterSpecificAttributes: d(() => {
      const r = {}, a = rA[t.value.type], s = uA[t.value.type];
      return a && qe(t.value.inputWidth) && (r.inputWidth = "auto"), s && (r.inputWidth = "inherit", r.inputAttributes = {
        style: "min-width: 181px"
      }), r;
    })
  };
}
function P4(e) {
  const t = p(e, "id");
  return {
    idPrefix: d(() => `${t.value}_`)
  };
}
function R4(e, {
  isContainer: t = d(() => !1)
}) {
  const n = p(e, "filter"), r = p(e, "onUpdateModelFilters"), a = p(e, "unappliedModel");
  return {
    onUpdateModelFiltersLocal: (o) => {
      if (t.value)
        r.value({ model: o });
      else {
        const u = Se(a.value);
        u[n.value.id] = Se(o), r.value({ model: u });
      }
    }
  };
}
function B4(e) {
  const t = p(e, "filter"), n = p(e, "updateDataKeyByIdFromFilter"), r = ["select", "multiselect", "radio", "checkbox", "group", "fieldset"], a = ({ dataKeyByKeyId: o, item: u }) => {
    let f = t.value.id;
    u && (f = u.id), n.value({
      filterId: f,
      dataKeyByKeyId: o
    });
  };
  return {
    emitForComponentsWithData: d(() => {
      const o = {};
      return r.indexOf(t.value.type) !== -1 && (o.onUpdateData = a), o;
    })
  };
}
const k4 = {
  name: "AFiltersHorizontalFilterUi",
  props: {
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filter: {
      type: Object,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    isLabelVisible: {
      type: Boolean,
      required: !0
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    unappliedModel: {
      type: Object,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = zt(e), {
      isContainer: n
    } = O4(e), {
      onUpdateModelFiltersLocal: r
    } = R4(e, {
      isContainer: n
    }), {
      emitForComponentsWithData: a
    } = B4(e), {
      idPrefix: s
    } = P4(e), {
      componentTypesMapping: o
    } = E4(), {
      filterSpecificAttributes: u
    } = D4(e);
    return {
      attributesToExcludeFromRender: t,
      componentTypesMapping: o,
      emitForComponentsWithData: a,
      filterSpecificAttributes: u,
      idPrefix: s,
      isContainer: n,
      onUpdateModelFiltersLocal: r
    };
  },
  render() {
    return c(this.componentTypesMapping[this.filter.type], {
      idPrefix: this.idPrefix,
      modelValue: this.isContainer ? this.unappliedModel : this.unappliedModel[this.filter.id],
      "onUpdate:modelValue": this.onUpdateModelFiltersLocal,
      excludeRenderAttributes: this.excludeRenderAttributes,
      ...this.filter,
      ...this.filterSpecificAttributes,
      label: this.isLabelVisible ? this.filter.label : void 0,
      ...this.emitForComponentsWithData,
      ...this.attributesToExcludeFromRender
    }, this.$slots);
  }
};
function M4(e) {
  const t = p(e, "id");
  return {
    idFilterRight: d(() => `${t.value}_filter_right`)
  };
}
const F4 = {
  name: "AFilersRight",
  props: {
    appliedModel: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filters: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch"
  ],
  setup(e) {
    const {
      idFilterRight: t
    } = M4(e);
    return {
      idFilterRight: t
    };
  },
  render() {
    return c("div", {
      id: this.idFilterRight,
      class: "a_filters_right"
    }, [
      c("form", {}, [
        this.filters.map((e) => c(k4, {
          id: this.id,
          class: "a_filters_right__filter_ui",
          excludeRenderAttributes: this.excludeRenderAttributes,
          filter: e,
          isLabelVisible: !0,
          onUpdateModelFilters: this.onUpdateModelFilters,
          unappliedModel: this.appliedModel,
          updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter
        }, this.$slots))
      ])
    ]);
  }
};
function q4(e) {
  const t = p(e, "closeFilterValue"), n = p(e, "disabled"), r = p(e, "filter");
  return {
    closeCurrentFilterValue: ({ modelValue: s }) => {
      n.value || t.value({
        filter: r.value,
        modelArray: s.modelArray,
        keyId: s.keyId
      });
    }
  };
}
function N4(e, { emit: t }, {
  modelValuesForCurrentFilter: n = d(() => [])
}) {
  const r = p(e, "filter"), a = d(() => n.value.length > 0);
  return {
    isLeastOneFilterVisible: a,
    updateVisibleChildFilters: ({ destroy: o } = {}) => {
      t("updateVisibleChildFilters", {
        id: r.value.id,
        isVisible: o ? !1 : a.value
      });
    }
  };
}
function V4(e) {
  const t = p(e, "filter"), n = p(e, "id"), r = d(() => `eventATableFilterTopOnOpen_${n.value}`);
  return {
    goToFilter: ({ modelValue: s } = {}) => {
      let o = ql({
        id: t.value.id,
        idPrefix: `${n.value}_filter_top`,
        htmlId: t.value.htmlId
      });
      s.idSuffix && (o += s.idSuffix), t.value.main || Ht.$emit(r.value, o);
    }
  };
}
function H4({ filter: e, currentModel: t }) {
  return !(!e || e.hideFilterCenter || ae(t) || t === "" || Ae(t) && !t.length);
}
function $4(e) {
  const t = p(e, "filter"), n = p(e, "model");
  return {
    hasCurrentFilter: d(() => H4({
      filter: t.value,
      currentModel: n.value
    }))
  };
}
function W4(e, { emit: t }, {
  hasCurrentFilter: n = d(() => !1)
}) {
  const r = p(e, "dataKeyByKeyIdPerFilter"), a = p(e, "filter"), s = d(() => n.value && k5.value[a.value.type] ? Mn(r.value[a.value.id]) : !1);
  return {
    isFilterLoading: s,
    updateLoadingChildFilters: (u, f) => {
      u !== f && t("updateLoadingChildFilters", {
        id: a.value.id,
        isLoading: s.value
      });
    }
  };
}
function U4(e, {
  hasCurrentFilter: t = d(() => !1)
}) {
  const n = p(e, "filter"), r = d(() => t.value ? n.value.label : ""), a = d(() => {
    if (t.value)
      return n.value.labelScreenReader;
  }), s = d(() => a.value || r.value);
  return {
    filterLabel: r,
    filterLabelForTitle: s
  };
}
function j4(e, {
  filterLabel: t = d(() => ""),
  filterLabelForTitle: n = d(() => ""),
  hasCurrentFilter: r = d(() => !1)
}) {
  const a = p(e, "dataKeyByKeyIdPerFilter"), s = p(e, "filter"), o = p(e, "model"), {
    filterBoolean: u,
    filterDate: f
  } = tr(), _ = d(() => {
    if (s.value)
      return a.value[s.value.id];
  }), m = d(() => {
    var g;
    return (g = o.value) != null && g.length ? Gt(o.value, (S) => _.value && _.value[S]) : [];
  }), b = ({ label: g, suffixTranslated: S }) => {
    const A = Kt({
      placeholder: g
    });
    return S ? `${A} ${S}` : A;
  };
  return {
    modelValuesForCurrentFilter: d(() => {
      var g, S, A, w, T, I, C, E, P;
      if (!r.value)
        return [];
      if (s.value.type === "switch" || s.value.type === "oneCheckbox")
        return [{
          filterLabelTranslated: b({ label: t.value }),
          filterLabelForTitleTranslated: b({ label: n.value }),
          label: u(o.value)
        }];
      if (s.value.type === "date")
        return [{
          filterLabelTranslated: b({ label: t.value }),
          filterLabelForTitleTranslated: b({ label: n.value }),
          label: f(o.value)
        }];
      if (s.value.type === "select" || s.value.type === "radio") {
        const M = de(_.value, `${o.value}.${vt}`);
        return M ? [{
          filterLabelTranslated: b({ label: t.value }),
          filterLabelForTitleTranslated: b({ label: n.value }),
          label: M
        }] : [];
      }
      if (pp.value[s.value.type] || s.value.type === "radio" && s.value.isModelArray) {
        if (m.value.length) {
          if (m.value.length === 1) {
            const M = (g = _.value) == null ? void 0 : g[m.value[0]];
            return [{
              filterLabelTranslated: b({ label: t.value }),
              filterLabelForTitleTranslated: b({ label: n.value }),
              label: M == null ? void 0 : M[vt],
              item: M,
              modelArray: m.value
            }];
          }
          return [{
            filterLabelTranslated: b({ label: t.value }),
            filterLabelForTitleTranslated: b({ label: n.value }),
            label: Kt({
              placeholder: "_A_FILTERS_SELECTED_{{count}}_",
              extra: {
                count: m.value.length,
                modelArray: m.value
              }
            }),
            modelArray: m.value,
            extra: {
              count: m.value.length,
              modelArray: m.value
            }
          }];
        }
        return [];
      }
      if (s.value.type === "dateRange") {
        const M = s.value.keyFrom || "from", k = s.value.keyUntil || "until", F = [];
        if (!ae((S = o.value) == null ? void 0 : S[M]) && ((A = o.value) == null ? void 0 : A[M]) !== "") {
          const D = Kt({
            placeholder: s.value.labelFrom || "_A_DATEPICKER_RANGE_FROM_"
          });
          F.push({
            filterLabelTranslated: b({
              label: t.value,
              suffixTranslated: D
            }),
            filterLabelForTitleTranslated: b({
              label: n.value,
              suffixTranslated: D
            }),
            label: f(o.value[M]),
            idSuffix: "_from",
            keyId: M
          });
        }
        if (!ae((w = o.value) == null ? void 0 : w[k]) && ((T = o.value) == null ? void 0 : T[k]) !== "") {
          const D = Kt({
            placeholder: s.value.labelUntil || "_A_DATEPICKER_RANGE_UNTIL_"
          });
          F.push({
            filterLabelTranslated: b({
              label: t.value,
              suffixTranslated: D
            }),
            filterLabelForTitleTranslated: b({
              label: n.value,
              suffixTranslated: D
            }),
            label: f(o.value[k]),
            idSuffix: "_until",
            keyId: k
          });
        }
        return F;
      }
      if (Rp.indexOf(s.value.type) !== -1) {
        const M = s.value.keyMax || "max", k = s.value.keyMin || "min", F = [];
        if (!ae((I = o.value) == null ? void 0 : I[k]) && ((C = o.value) == null ? void 0 : C[k]) !== "") {
          const D = Kt({
            placeholder: s.value.labelMin || "_A_INPUT_NUMBER_RANGE_LABEL_MIN_"
          });
          F.push({
            filterLabelTranslated: b({
              label: t.value,
              suffixTranslated: D
            }),
            filterLabelForTitleTranslated: b({
              label: n.value,
              suffixTranslated: D
            }),
            label: o.value[k],
            idSuffix: "_min",
            keyId: k
          });
        }
        if (!ae((E = o.value) == null ? void 0 : E[M]) && ((P = o.value) == null ? void 0 : P[M]) !== "") {
          const D = Kt({
            placeholder: s.value.labelMax || "_A_INPUT_NUMBER_RANGE_LABEL_MAX_"
          });
          F.push({
            filterLabelTranslated: b({
              label: t.value,
              suffixTranslated: D
            }),
            filterLabelForTitleTranslated: b({
              label: n.value,
              suffixTranslated: D
            }),
            label: o.value[M],
            idSuffix: "_max",
            keyId: M
          });
        }
        return F;
      }
      return [{
        label: o.value,
        filterLabelTranslated: b({ label: t.value }),
        filterLabelForTitleTranslated: b({ label: n.value })
      }];
    })
  };
}
const G4 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pin-fill" viewBox="0 0 16 16">
  <path d="M4.146.146A.5.5 0 0 1 4.5 0h7a.5.5 0 0 1 .5.5c0 .68-.342 1.174-.646 1.479-.126.125-.25.224-.354.298v4.431l.078.048c.203.127.476.314.751.555C12.36 7.775 13 8.527 13 9.5a.5.5 0 0 1-.5.5h-4v4.5c0 .276-.224 1.5-.5 1.5s-.5-1.224-.5-1.5V10h-4a.5.5 0 0 1-.5-.5c0-.973.64-1.725 1.17-2.189A6 6 0 0 1 5 6.708V2.277a3 3 0 0 1-.354-.298C4.342 1.674 4 1.179 4 .5a.5.5 0 0 1 .146-.354"/>
</svg>`, Y4 = {
  name: "AFilterCenterItem",
  props: {
    closeFilterValue: {
      type: Function,
      required: !0
    },
    dataKeyByKeyIdPerFilter: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    filter: {
      type: Object,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    model: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "updateVisibleChildFilters",
    "updateLoadingChildFilters"
  ],
  setup(e, t) {
    const {
      hasCurrentFilter: n
    } = $4(e), {
      isFilterLoading: r,
      updateLoadingChildFilters: a
    } = W4(e, t, {
      hasCurrentFilter: n
    }), {
      filterLabel: s,
      filterLabelForTitle: o
    } = U4(e, {
      hasCurrentFilter: n
    }), {
      modelValuesForCurrentFilter: u
    } = j4(e, {
      filterLabel: s,
      filterLabelForTitle: o,
      hasCurrentFilter: n
    }), {
      isLeastOneFilterVisible: f,
      updateVisibleChildFilters: _
    } = N4(e, t, {
      modelValuesForCurrentFilter: u
    }), {
      goToFilter: m
    } = V4(e), {
      closeCurrentFilterValue: b
    } = q4(e);
    return st(f, () => {
      _();
    }, {
      immediate: !0
    }), st(r, (v, g) => {
      a(v, g);
    }, {
      immediate: !0
    }), Bt(() => {
      _({
        destroy: !0
      });
    }), {
      closeCurrentFilterValue: b,
      filterLabel: s,
      goToFilter: m,
      hasCurrentFilter: n,
      isLeastOneFilterVisible: f,
      modelValuesForCurrentFilter: u
    };
  },
  render() {
    return this.hasCurrentFilter && [
      this.modelValuesForCurrentFilter.map((e) => c("div", {
        role: "group",
        class: "a_filters_center__item a_btn_group a_btn_group_small"
      }, [
        this.filter.hasNotClose && c(Oe, {
          class: "a_btn a_btn_secondary",
          ariaHidden: !0,
          tabindex: -1,
          iconLeft: G4,
          type: "text"
        }),
        c(Oe, {
          class: "a_btn a_btn_secondary",
          title: "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_",
          textScreenReader: "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_",
          extra: {
            filterLabel: e.filterLabelForTitleTranslated,
            filterValue: e.label
          },
          type: "button",
          onClick: () => this.goToFilter({ modelValue: e })
        }, () => [
          e.filterLabelTranslated ? c("strong", {
            class: "a_filters_center__item__label",
            ariaHidden: !0
          }, [
            c(be, {
              tag: "span",
              html: e.filterLabelTranslated,
              textAfter: ":"
            })
          ]) : "",
          this.filter.slotName && this.$slots[this.filter.slotName] ? this.$slots[this.filter.slotName]({
            item: e.item,
            label: e.label,
            extra: e.extra,
            inFilterCenter: !0
          }) : c("span", {
            class: "a_filters_center__item__value"
          }, e.label)
        ]),
        this.filter.hasNotClose ? "" : c(Oe, {
          class: "a_btn a_btn_secondary",
          disabled: this.disabled,
          iconLeft: ja,
          title: "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_",
          textScreenReader: "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_",
          extra: {
            filterLabel: e.filterLabelForTitleTranslated,
            filterValue: e.label
          },
          type: "button",
          onClick: () => this.closeCurrentFilterValue({ modelValue: e })
        })
      ]))
    ];
  }
};
function z4() {
  const e = R({}), t = ({ id: r, isLoading: a }) => {
    e.value[r] = a;
  };
  return {
    isLeastOneChildFilterLoading: d(() => {
      let r = !1;
      return Y(e.value, (a) => {
        if (a)
          return r = !0, !1;
      }), r;
    }),
    updateLoadingChildFilters: t
  };
}
function K4(e) {
  const t = p(e, "filtersGroup"), n = R({}), r = ({ id: u, isVisible: f }) => {
    n.value[u] = f;
  }, a = d(() => {
    let u = !1;
    return Y(n.value, (f) => {
      if (f)
        return u = !0, !1;
    }), u;
  }), s = d(() => !!(t.value.alwaysVisible.length || t.value.filters.length)), o = d(() => a.value ? void 0 : "display: none;");
  return {
    hasFilters: s,
    styleHide: o,
    updateVisibleChildFilters: r
  };
}
const X4 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-clockwise" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2z"/>
  <path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466"/>
</svg>`, Z4 = {
  name: "AFilterCenter",
  props: {
    appliedModel: {
      type: Object,
      required: !0
    },
    closeAllFilters: {
      type: Function,
      required: !0
    },
    closeFilterValue: {
      type: Function,
      required: !0
    },
    dataKeyByKeyIdPerFilter: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    filtersGroup: {
      type: Object,
      required: !0,
      default: () => ({
        alwaysVisible: [],
        filters: []
      })
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    filtersVisibleAll: {
      type: Array,
      required: !0
    },
    id: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      hasFilters: t,
      styleHide: n,
      updateVisibleChildFilters: r
    } = K4(e), {
      isLeastOneChildFilterLoading: a,
      updateLoadingChildFilters: s
    } = z4();
    return {
      hasFilters: t,
      isLeastOneChildFilterLoading: a,
      styleHide: n,
      updateLoadingChildFilters: s,
      updateVisibleChildFilters: r
    };
  },
  render() {
    return this.hasFilters ? c("div", {
      class: "a_filters_center"
    }, [
      c("div", {
        class: "a_filters_center__item"
      }, [
        this.$slots.filtersHorizontal ? this.$slots.filtersHorizontal() : ""
      ]),
      this.filtersVisibleAll.map((e) => c(Y4, {
        key: e.id,
        id: this.id,
        disabled: this.disabled,
        filter: e,
        closeFilterValue: this.closeFilterValue,
        dataKeyByKeyIdPerFilter: this.dataKeyByKeyIdPerFilter,
        model: this.appliedModel[e.id],
        onUpdateVisibleChildFilters: this.updateVisibleChildFilters,
        onUpdateLoadingChildFilters: this.updateLoadingChildFilters
      }, this.$slots)),
      this.isLeastOneChildFilterLoading ? c("div", {
        style: this.styleHide,
        class: "a_filters_center__item"
      }, [
        c(Ol, {
          class: "a_spinner_small"
        })
      ]) : "",
      c("div", {
        class: "a_filters_center__item",
        style: this.styleHide
      }, [
        c(ct, {
          class: "a_btn a_btn_link a_btn_small",
          iconLeft: X4,
          text: "_A_FILTERS_DESELECT_ALL_",
          onClick: this.closeAllFilters
        })
      ])
    ]) : null;
  }
}, J4 = {
  name: "ARequired",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    text: {
      type: String,
      required: !1,
      default: "_A_REQUIRED_TEXT_"
    }
  },
  render() {
    return c(be, {
      alwaysTranslate: this.alwaysTranslate,
      class: "a_required",
      html: this.text
    });
  }
};
function Q4(e) {
  const t = p(e, "isHide");
  return {
    styleFormHide: d(() => t.value ? "display: none;" : "")
  };
}
function eW(e, { emit: t }) {
  const n = p(e, "modelValue"), r = d(() => n.value || {});
  return {
    modelValueLocal: r,
    onUpdateModelLocal: ({ item: s, model: o }) => {
      if (fi.value[s.type])
        t("update:modelValue", o), t("change", { model: o });
      else {
        const u = Se(r.value), f = s.id;
        Ch(u, f, Se(o)), t("update:modelValue", u), t("change", { model: u });
      }
    }
  };
}
function tW(e) {
  const t = p(e, "data"), n = p(e, "isRequired");
  return {
    isRequiredLocal: d(() => {
      if (n.value)
        return !0;
      let a = !1;
      return Y(t.value, (s) => {
        if (s.required)
          return a = !0, !1;
      }), a;
    })
  };
}
const Rd = {
  name: "AForm",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12 a_columns_gab_2"
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_12"
    },
    data: {
      type: Array,
      required: !0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRequired: {
      type: Boolean,
      required: !1
    },
    modelValue: {
      type: Object,
      required: !1,
      default: void 0
    },
    showErrors: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tag: {
      type: String,
      required: !1,
      default: "form"
    },
    textRequired: {
      type: String,
      required: !1,
      default: void 0
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue",
    "change"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = zt(e), {
      modelValueLocal: r,
      onUpdateModelLocal: a
    } = eW(e, t), {
      styleFormHide: s
    } = Q4(e), {
      isRequiredLocal: o
    } = tW(e), u = {
      ...Pd,
      ...cA
    };
    return {
      attributesToExcludeFromRender: n,
      componentTypesMapping: u,
      isRequiredLocal: o,
      modelValueLocal: r,
      onUpdateModelLocal: a,
      styleFormHide: s
    };
  },
  render() {
    return this.isRender ? c(this.tag, {
      class: "a_form",
      style: this.styleFormHide
    }, [
      this.$slots.formPrepend ? this.$slots.formPrepend() : "",
      this.isRequiredLocal ? c(J4, {
        text: this.textRequired
      }) : "",
      this.$slots.formPrependAfterRequired ? this.$slots.formPrependAfterRequired() : "",
      this.showErrors ? c(L$, {
        alwaysTranslate: this.alwaysTranslate,
        errors: this.errors,
        closable: !1,
        optionsList: this.data,
        idPrefix: this.idPrefix,
        textErrorHeader: this.textErrorHeader
      }) : "",
      c("div", {
        class: this.classColumns
      }, [
        this.$slots.formDataPrepend ? this.$slots.formDataPrepend() : "",
        ...this.data.map((e, t) => {
          const n = fi.value[e.type];
          let r;
          return ae(e.classColumn) ? r = this.classColumnDefault : e.classColumn && (r = e.classColumn), c(this.componentTypesMapping[e.type], {
            key: t,
            alwaysTranslate: this.alwaysTranslate,
            modelValue: n ? this.modelValueLocal : de(this.modelValueLocal, e.id),
            modelDependencies: n ? this.modelValueLocal : void 0,
            class: r,
            errors: this.errors[e.id],
            errorsAll: n ? this.errors : void 0,
            idPrefix: this.idPrefix,
            excludeRenderAttributes: this.excludeRenderAttributes,
            "onUpdate:modelValue": (a) => this.onUpdateModelLocal({ item: e, model: a }),
            ...e,
            classColumn: void 0,
            ...this.attributesToExcludeFromRender
          }, this.$slots);
        }),
        this.$slots.formDataAppend ? this.$slots.formDataAppend() : ""
      ]),
      this.$slots.formAppend ? this.$slots.formAppend() : ""
    ]) : null;
  }
}, Di = R({
  propsDefault: {
    align: "center",
    size: 6,
    tag: "div",
    text: "_A_LOADING_LOADING_",
    textAlign: "right"
  }
}), OU = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Di.value.propsDefault = {
      ...Di.value.propsDefault,
      ...t
    };
  }
}, fA = {
  name: "ALoading",
  inheritAttrs: !1,
  props: {
    align: {
      type: String,
      required: !1,
      default: () => Di.value.propsDefault.align,
      validator: (e) => ["left", "center", "right"].indexOf(e) !== -1
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    isLoading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => Di.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    spinnerClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    spinnerSafeHtml: {
      type: String,
      required: !1,
      default: () => Fr.value.propsDefault.safeHtml
    },
    spinnerTag: {
      type: String,
      required: !1,
      default: () => Fr.value.propsDefault.tag
    },
    tag: {
      type: String,
      required: !1,
      default: () => Di.value.propsDefault.tag
    },
    text: {
      type: String,
      required: !1,
      default: () => Di.value.propsDefault.text
    },
    textAlign: {
      type: String,
      required: !1,
      default: () => Di.value.propsDefault.textAlign,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    }
  },
  setup(e) {
    const {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    } = yS(e);
    return {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    };
  },
  render() {
    const e = this.textAlign === "left", t = c(be, {
      alwaysTranslate: this.alwaysTranslate,
      tag: "span",
      class: [
        "a_cloak__text",
        e ? "a_cloak__text_left" : "a_cloak__text_right",
        this.classTextSize
      ],
      text: this.text,
      extra: this.extra
    });
    return [
      this.$slots.default && this.$slots.default(),
      this.isLoading && c(
        this.tag,
        {
          ...this.$attrs,
          role: "status",
          tabindex: -1,
          class: ["a_loading", this.classAlign]
        },
        [
          c("div", {
            class: ["a_cloak__box", this.classForBox]
          }, [
            e ? t : "",
            c(Ol, {
              alwaysTranslate: this.alwaysTranslate,
              class: [
                "a_cloak__spinner",
                this.spinnerClass
              ],
              "aria-hidden": "true",
              safeHtml: this.spinnerSafeHtml,
              size: this.size,
              tag: this.spinnerTag
            }),
            e ? "" : t
          ])
        ]
      )
    ];
  }
};
function nW(e) {
  const t = p(e, "hideHeader"), n = p(e, "id");
  return {
    headerId: d(() => {
      if (!t.value)
        return `${n.value}_header`;
    })
  };
}
function hA(e) {
  const t = p(e, "bodyHtml"), n = p(e, "id");
  return {
    bodyHtmlId: d(() => {
      if (t.value)
        return `${n.value}_body_html`;
    })
  };
}
function rW(e) {
  const t = p(e, "close"), n = p(e, "isConfirm"), r = () => {
    n.value || t.value();
  };
  return {
    destroyEventBusCloseFromOutside: () => {
      Ht.$off("closeModal", r);
    },
    initEventBusCloseFromOutside: () => {
      Ht.$on("closeModal", r);
    }
  };
}
function aW(e) {
  const t = p(e, "disabled"), n = p(e, "loading");
  return {
    disabledLocal: d(() => t.value || n.value)
  };
}
function iW(e) {
  const t = p(e, "close"), n = p(e, "useEscape");
  return {
    pressEscape: (a) => {
      n.value && (t.value(), a.preventDefault(), a.stopPropagation());
    }
  };
}
function sW(e) {
  const t = p(e, "focusStartId"), n = p(e, "focusStartId"), r = R(void 0), a = R(void 0), s = () => {
    const _ = document.getElementById(t.value);
    _ && _.focus();
  }, o = () => {
    var m;
    const _ = ((m = a.value) == null ? void 0 : m.querySelectorAll(Os)) || [];
    _.length !== 0 && _[0].focus();
  };
  return {
    modalRef: r,
    modalWrapperRef: a,
    setFocusByShowModal: () => {
      setTimeout(() => {
        n.value || (t.value ? s() : o());
      });
    },
    trapFocus: (_) => {
      const m = a.value.querySelectorAll(Os);
      if (m.length === 0) {
        _.preventDefault();
        return;
      }
      const b = m[0], v = m[m.length - 1];
      _.shiftKey ? document.activeElement === b && (v.focus(), _.preventDefault()) : document.activeElement === v && (b.focus(), _.preventDefault());
    }
  };
}
function lW(e) {
  const t = p(e, "selectorClose"), n = p(e, "selectorCloseIds"), r = d(() => {
    const o = [];
    return n.value && (yt(n.value) ? o.push(`#${n.value}`) : Ae(n.value) && Y(n.value, (u) => {
      o.push(`#${u}`);
    })), t.value && (yt(t.value) ? o.push(t.value) : Ae(t.value) && o.push(...t.value)), o;
  }), a = ({ selector: o }) => {
    const u = document.querySelector(o);
    return u ? (u.focus(), !0) : !1;
  };
  return {
    setFocusByDestroy: () => {
      if (!r.value.length)
        return;
      const o = Se(r.value);
      setTimeout(() => {
        Y(o, (u) => {
          if (a({ selector: u }))
            return !1;
        });
      }, 300);
    }
  };
}
function oW({
  removeListenerForKeydown: e = () => {
  },
  setFocusByDestroy: t = () => {
  }
}) {
  return {
    hideModal: () => {
      document.body.classList.remove("a_modal_open"), t(), e();
    }
  };
}
function uW({
  pressEscape: e = () => {
  },
  trapFocus: t = () => {
  }
}) {
  const n = (s) => {
    const o = s || window.$event;
    o.key === "Escape" || o.keyCode === X.escape ? e(s) : (o.key === "Tab" || o.keyCode === X.tab) && t(o);
  };
  return {
    setListenerForKeydown: () => {
      document.addEventListener("keydown", n);
    },
    removeListenerForKeydown: () => {
      document.removeEventListener("keydown", n);
    }
  };
}
function dW(e, {
  checkOpenedModals: t = () => {
  },
  setFocusByShowModal: n = () => {
  },
  setListenerForKeydown: r = () => {
  }
}) {
  const a = p(e, "isModalHidden");
  return {
    showModal: () => {
      a.value || (t(), document.body.classList.add("a_modal_open"), n(), r());
    }
  };
}
function cW(e) {
  const t = p(e, "size");
  return {
    sizeClass: d(() => {
      if (t.value)
        return `a_modal_${t.value}`;
    })
  };
}
function fW(e) {
  const t = p(e, "stop");
  return {
    clickWrapperStoppPropagationEventMap: d(() => t.value ? {
      onClick: (r) => r.stopPropagation()
    } : {})
  };
}
function hW(e) {
  const t = p(e, "backdropZIndex"), n = p(e, "zIndex"), r = R(0), a = d(() => {
    const u = {};
    return n.value ? u["--a_modal_zindex"] = n.value : r.value > 2 && (u["--a_modal_zindex"] = 1055 + r.value - 1), u;
  }), s = d(() => {
    const u = {};
    return t.value ? u["--a__backdrop_zindex"] = t.value : r.value > 2 && (u["--a__backdrop_zindex"] = 1050 + r.value - 1), u;
  });
  return {
    checkOpenedModals: () => {
      const u = document.querySelectorAll(".a_backdrop");
      r.value = (u == null ? void 0 : u.length) || 0;
    },
    countOpenedModals: r,
    stylesBackdrop: s,
    stylesZIndexModal: a
  };
}
const Le = R({
  propsDefault: {
    closeButtonClass: "a_btn a_btn_secondary",
    closeButtonText: "_A_MODAL_BTN_CANCEL_",
    closeButtonTextScreenReaderFooter: "_A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_",
    closeButtonTextScreenReaderHeader: "_A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_",
    headerTag: "h2",
    idPrefix: void 0,
    isCloseButtonHide: !1,
    isDataFormHide: !1,
    isDataFormRender: !0,
    isFooterSticky: !1,
    isRequired: !1,
    isSaveButtonHide: !1,
    modalClass: void 0,
    modalStyle: void 0,
    saveButtonClass: "a_btn a_btn_primary",
    saveButtonText: "_A_MODAL_BTN_SAVE_",
    saveButtonTextScreenReader: "_A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_",
    selectorClose: void 0,
    selectorCloseIds: void 0,
    size: void 0,
    textRequired: void 0,
    useEscape: !0
  }
}), DU = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Le.value.propsDefault = {
      ...Le.value.propsDefault,
      ...t
    };
  }
}, Bd = {
  name: "AModal",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    bodyHtml: {
      type: String,
      required: !1,
      default: ""
    },
    bodyHtmlClass: {
      type: [String, Array, Object],
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Le.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideFooter: {
      type: Boolean,
      required: !1
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: () => mt("a_modal_")
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Le.value.propsDefault.isCloseButtonHide
    },
    isConfirm: {
      type: Boolean,
      required: !1
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => Le.value.propsDefault.isFooterSticky
    },
    isModalHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Le.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => Le.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => Le.value.propsDefault.modalStyle
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Le.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => Le.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => Le.value.propsDefault.selectorCloseIds
    },
    showCloseButtonHeader: {
      type: Boolean,
      required: !1,
      default: !0
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => Le.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => Le.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = p(e, "isModalHidden"), {
      checkOpenedModals: n,
      stylesBackdrop: r,
      stylesZIndexModal: a
    } = hW(e), {
      bodyHtmlId: s
    } = hA(e), {
      destroyEventBusCloseFromOutside: o,
      initEventBusCloseFromOutside: u
    } = rW(e), {
      headerId: f
    } = nW(e), {
      sizeClass: _
    } = cW(e), {
      disabledLocal: m
    } = aW(e), {
      modalRef: b,
      modalWrapperRef: v,
      setFocusByShowModal: g,
      trapFocus: S
    } = sW(e), {
      setFocusByDestroy: A
    } = lW(e), {
      pressEscape: w
    } = iW(e), {
      setListenerForKeydown: T,
      removeListenerForKeydown: I
    } = uW({
      pressEscape: w,
      trapFocus: S
    }), {
      showModal: C
    } = dW(e, {
      checkOpenedModals: n,
      setFocusByShowModal: g,
      setListenerForKeydown: T
    }), {
      hideModal: E
    } = oW({
      removeListenerForKeydown: I,
      setFocusByDestroy: A
    }), {
      clickWrapperStoppPropagationEventMap: P
    } = fW(e);
    return st(t, () => {
      t.value ? E() : C();
    }), u(), ha(() => {
      C();
    }), Bt(() => {
      o();
    }), Gv(() => {
      E();
    }), {
      bodyHtmlId: s,
      clickWrapperStoppPropagationEventMap: P,
      disabledLocal: m,
      headerId: f,
      modalRef: b,
      modalWrapperRef: v,
      sizeClass: _,
      stylesBackdrop: r,
      stylesZIndexModal: a
    };
  },
  render() {
    const e = this.hideFooter ? "" : c("div", {
      ref: "modal_footer",
      class: [
        "a_modal_footer",
        {
          a_modal_footer_sticky: this.isFooterSticky
        }
      ]
    }, [
      c(fA, {
        alwaysTranslate: this.alwaysTranslate,
        isLoading: this.loading
      }, () => [
        c("div", {
          class: "a_modal_footer_actions"
        }, [
          this.$slots.modalFooterPrepend && this.$slots.modalFooterPrepend(),
          !this.isSaveButtonHide && this.save && c(Oe, {
            id: this.saveButtonId,
            alwaysTranslate: this.alwaysTranslate,
            class: this.saveButtonClass,
            disabled: this.disabledLocal || this.disabledSave,
            extra: this.extra,
            html: this.saveButtonText,
            textAriaHidden: !0,
            textScreenReader: this.saveButtonTextScreenReader,
            type: "button",
            ...this.saveButtonAttributes,
            onClick: this.save
          }),
          !this.isCloseButtonHide && c(Oe, {
            id: this.closeButtonId,
            alwaysTranslate: this.alwaysTranslate,
            class: this.closeButtonClass,
            disabled: this.disabledLocal,
            extra: this.extra,
            html: this.closeButtonText,
            textAriaHidden: !0,
            textScreenReader: this.closeButtonTextScreenReaderFooter,
            type: "button",
            ...this.closeButtonAttributes,
            onClick: () => this.close(!0)
          }),
          this.$slots.modalFooterAppend && this.$slots.modalFooterAppend()
        ])
      ])
    ]);
    return c(fa, {
      to: "body"
    }, [
      c("div", {
        ref: "modalWrapperRef",
        ...this.clickWrapperStoppPropagationEventMap
      }, [
        c("div", {
          ref: "modalRef",
          id: this.id,
          class: ["a_modal", this.modalClass, {
            a_modal_confirm: this.isConfirm,
            a_modal_show: !this.isModalHidden
          }],
          role: "dialog",
          ariaModal: !0,
          "aria-labelledby": this.headerId,
          "aria-describedby": this.bodyHtmlId,
          style: [
            this.modalStyle,
            this.stylesZIndexModal
          ],
          ...this.$attrs
        }, [
          c("div", {
            class: ["a_modal_dialog a_modal_dialog_scrollable", this.sizeClass]
          }, [
            c("div", {
              class: [
                "a_modal_content",
                {
                  a_modal_content_with_footer_sticky: this.isFooterSticky
                }
              ]
            }, [
              this.hideHeader ? "" : c("div", {
                ref: "modal_header",
                class: "a_modal_header"
              }, [
                c("div", {
                  id: this.headerId
                }, [
                  this.$slots.modalHeader ? this.$slots.modalHeader() : "",
                  this.headerText ? c(this.headerTag, {
                    class: "a_modal_title"
                  }, [
                    c(be, {
                      alwaysTranslate: this.alwaysTranslate,
                      tag: "span",
                      html: this.headerText,
                      extra: this.extra
                    })
                  ]) : ""
                ]),
                this.showCloseButtonHeader ? c(Oe, {
                  alwaysTranslate: this.alwaysTranslate,
                  class: "a_btn_close",
                  disabled: this.disabledLocal,
                  textScreenReader: this.closeButtonTextScreenReaderHeader,
                  title: this.closeButtonTextScreenReaderHeader,
                  type: "button",
                  onClick: () => this.close(!0)
                }) : ""
              ]),
              c("div", {
                ref: "modal_body",
                class: "a_modal_body"
              }, [
                c("div", {
                  ref: "modal_body",
                  class: "a_modal_body__content"
                }, [
                  this.bodyHtml && c(be, {
                    id: this.bodyHtmlId,
                    alwaysTranslate: this.alwaysTranslate,
                    class: this.bodyHtmlClass,
                    html: this.bodyHtml,
                    extra: this.extra
                  }),
                  this.$slots.modalBody && this.$slots.modalBody()
                ]),
                this.isFooterSticky ? e : ""
              ]),
              this.isFooterSticky ? "" : e
            ])
          ])
        ])
      ]),
      !this.isModalHidden && c("div", {
        class: [
          "a_backdrop a_backdrop_fade a_backdrop_show",
          {
            a_backdrop_confirm: this.isConfirm
          }
        ],
        style: this.stylesBackdrop
      })
    ]);
  }
};
function pW(e) {
  const t = p(e, "dataForm");
  return {
    hasDataForm: d(() => t.value.length > 0)
  };
}
function _W({ emit: e }) {
  return {
    updateModelLocal: (n) => {
      e("update:modelValue", n);
    }
  };
}
const mW = {
  name: "AModalForm",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    bodyHtml: {
      type: String,
      required: !1,
      default: ""
    },
    bodyHtmlClass: {
      type: [String, Array, Object],
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Le.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    dataForm: {
      type: Array,
      required: !1,
      default: () => []
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideFooter: {
      type: Boolean,
      required: !1
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: () => mt("a_modal_form_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.idPrefix
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Le.value.propsDefault.isCloseButtonHide
    },
    isConfirm: {
      type: Boolean,
      required: !1
    },
    isDataFormHide: {
      type: Boolean,
      required: !1,
      default: () => Le.value.propsDefault.isDataFormHide
    },
    isDataFormRender: {
      type: Boolean,
      required: !1,
      default: () => Le.value.propsDefault.isDataFormRender
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => Le.value.propsDefault.isFooterSticky
    },
    isModalHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isRequired: {
      type: Boolean,
      required: !1,
      default: Le.value.propsDefault.isRequired
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Le.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => Le.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => Le.value.propsDefault.modalStyle
    },
    modelValue: {
      type: Object,
      required: !1,
      default: void 0
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Le.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => Le.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => Le.value.propsDefault.selectorCloseIds
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => Le.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: void 0
    },
    textRequired: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.textRequired
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => Le.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      bodyHtmlId: n
    } = hA(e), {
      hasDataForm: r
    } = pW(e), {
      updateModelLocal: a
    } = _W(t);
    return {
      bodyHtmlId: n,
      hasDataForm: r,
      updateModelLocal: a
    };
  },
  render() {
    return c(Bd, {
      alwaysTranslate: this.alwaysTranslate,
      backdropZIndex: this.backdropZIndex,
      close: this.close,
      closeButtonClass: this.closeButtonClass,
      closeButtonId: this.closeButtonId,
      closeButtonText: this.closeButtonText,
      closeButtonTextScreenReaderFooter: this.closeButtonTextScreenReaderFooter,
      closeButtonTextScreenReaderHeader: this.closeButtonTextScreenReaderHeader,
      disabled: this.disabled,
      disabledSave: this.disabledSave,
      extra: this.extra,
      focusStartId: this.focusStartId,
      headerTag: this.headerTag,
      headerText: this.headerText,
      hideFooter: this.hideFooter,
      hideHeader: this.hideHeader,
      id: this.id,
      isCloseButtonHide: this.isCloseButtonHide,
      isConfirm: this.isConfirm,
      isFooterSticky: this.isFooterSticky,
      isModalHidden: this.isModalHidden,
      isSaveButtonHide: this.isSaveButtonHide,
      loading: this.loading,
      modalClass: this.modalClass,
      modalStyle: this.modalStyle,
      save: this.save,
      saveButtonClass: this.saveButtonClass,
      saveButtonId: this.saveButtonId,
      saveButtonText: this.saveButtonText,
      saveButtonTextScreenReader: this.saveButtonTextScreenReader,
      selectorClose: this.selectorClose,
      selectorCloseIds: this.selectorCloseIds,
      size: this.size,
      stop: this.stop,
      useEscape: this.useEscape,
      useFocusOnStart: this.useFocusOnStart,
      zIndex: this.zIndex,
      "aria-describedby": this.bodyHtmlId
    }, {
      ...this.$slots || {},
      modalBody: () => [
        this.$slots.modalBodyPrepend && this.$slots.modalBodyPrepend(),
        this.bodyHtml && c(be, {
          id: this.bodyHtmlId,
          alwaysTranslate: this.alwaysTranslate,
          class: this.bodyHtmlClass,
          html: this.bodyHtml,
          extra: this.extra
        }),
        this.hasDataForm && c(Rd, {
          alwaysTranslate: this.alwaysTranslate,
          modelValue: this.modelValue,
          data: this.dataForm,
          errors: this.errors,
          idPrefix: this.idPrefix,
          isRequired: this.isRequired,
          textRequired: this.textRequired,
          textErrorHeader: this.textErrorHeader,
          isHide: this.isDataFormHide,
          isRender: this.isDataFormRender,
          "onUpdate:modelValue": this.updateModelLocal
        }, this.$slots),
        this.$slots.modalBodyAppend && this.$slots.modalBodyAppend()
      ]
    });
  }
};
function bW(e, {
  model: t = R({})
}) {
  const n = p(e, "filtersSaved"), r = d(() => {
    const u = {};
    return Y(n.value, (f) => {
      u[f.label] = !0;
    }), u;
  }), a = d(() => r.value[t.value.name]), s = d(() => {
    if (a.value)
      return "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_";
  });
  return {
    dataForm: d(() => [
      {
        id: "name",
        label: "_A_FILTERS_SAVE_LABEL_NAME_",
        type: "text",
        required: !0,
        extra: {
          name: t.value.name || ""
        },
        helpText: s.value
      }
    ]),
    isUpdate: a
  };
}
function vW(e) {
  const t = p(e, "isModelFilterSavedNew"), n = p(e, "modelFiltersSaved"), r = R({});
  return {
    initModel: () => {
      n.value && !t.value && (r.value = {
        name: n.value
      });
    },
    model: r,
    updateModel: (o) => {
      r.value = o;
    }
  };
}
let pA = 5e3;
const ju = R({}), yW = d(() => wh(ju.value));
let Dv = 0;
function kd() {
  return {
    addNotification: SW,
    removeNotification: _A,
    notifications: yW,
    setNotificationTimeout: gW
  };
}
function gW(e) {
  pA = e;
}
function SW({ text: e, type: t = "success", timeout: n, extra: r, useValuesFromObject: a = !0 }) {
  const s = ae(n) ? pA : n, o = Dv, u = t === "error" ? "danger" : t;
  let f = e;
  dt(e) && a && (f = dk(e)), ju.value[o] = {
    text: f,
    type: u,
    index: o,
    extra: r
  }, Dv++, s && setTimeout(() => {
    _A(o);
  }, s);
}
function _A(e) {
  ju.value[e] && delete ju.value[e];
}
function AW(e, { emit: t }, {
  isUpdate: n = d(() => !1),
  model: r = R({})
}) {
  const a = p(e, "changeModelFiltersSaved"), s = p(e, "updateFiltersSaved"), o = R(void 0), {
    addNotification: u
  } = kd(), f = d(() => !r.value.name), _ = () => {
    t("close");
  };
  return {
    close: _,
    disabledBtnSave: f,
    loading: o,
    save: async () => {
      o.value = !0;
      const b = n.value;
      try {
        await s.value({
          action: b ? "update" : "create",
          label: r.value.name
        });
      } catch {
        u({
          text: "_A_FILTERS_SAVE_MSG_ERROR_",
          type: "danger"
        }), o.value = !1;
        return;
      }
      u({
        text: b ? "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_" : "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
        extra: {
          name: r.value.name
        }
      }), a.value({ model: r.value.name, isCreateOrEdit: !0 }), _(), o.value = !1;
    }
  };
}
const wW = {
  name: "AFiltersSaveModal",
  props: {
    changeModelFiltersSaved: {
      type: Function,
      required: !0
    },
    filtersSaved: {
      type: Array,
      required: !0
    },
    isModelFilterSavedNew: {
      type: Boolean,
      required: !0
    },
    modelFiltersSaved: {
      type: String,
      required: !1,
      default: void 0
    },
    selectorCloseIds: {
      type: String,
      required: !0
    },
    updateFiltersSaved: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      initModel: n,
      model: r,
      updateModel: a
    } = vW(e), {
      dataForm: s,
      isUpdate: o
    } = bW(e, {
      model: r
    }), {
      close: u,
      disabledBtnSave: f,
      loading: _,
      save: m
    } = AW(e, t, {
      isUpdate: o,
      model: r
    });
    return n(), {
      close: u,
      dataForm: s,
      disabledBtnSave: f,
      initModel: n,
      loading: _,
      model: r,
      save: m,
      updateModel: a
    };
  },
  render() {
    return c(mW, {
      close: this.close,
      dataForm: this.dataForm,
      disabledSave: this.disabledBtnSave,
      headerText: "_A_FILTERS_SAVE_MODAL_HEADER_",
      modelValue: this.model,
      idPrefix: "modal_filter_top_",
      loading: this.loading,
      selectorCloseIds: this.selectorCloseIds,
      size: "large",
      save: this.save,
      stop: !0,
      zIndex: 1901,
      backdropZIndex: 1900,
      "onUpdate:modelValue": this.updateModel
    }, {
      modalBodyPrepend: () => [
        c(Vh, {
          type: "info",
          isVisible: !0,
          safeHtml: "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_"
        })
      ]
    });
  }
};
function TW(e) {
  const t = p(e, "filtersGroup"), n = R(void 0), r = d(() => !!(t.value.alwaysVisible.length || t.value.filters.length));
  return {
    closeDropdown: () => {
      var o;
      (o = n.value) == null || o.onClose({ trigger: "click" });
    },
    dropdownRef: n,
    isDropdownVisible: r,
    openDropdown: (o) => {
      var u;
      (u = n.value) == null || u.onOpen({ trigger: "click", selectorToFocus: o });
    }
  };
}
function xW(e, {
  openDropdown: t = () => {
  }
}) {
  const r = `eventATableFilterTopOnOpen_${p(e, "id").value}`;
  return {
    destroyEventBus: () => {
      Ht.$off(r, t);
    },
    initEventBus: () => {
      Ht.$on(r, t);
    }
  };
}
function CW(e, { emit: t }) {
  const n = p(e, "filtersGroup"), r = p(e, "filtersVisible"), a = ({ isAdd: m, filterId: b, filter: v }) => {
    t("toggleFiltersVisible", { isAdd: m, filterId: b, filter: v });
  }, s = ({ model: m }) => {
    a({ isAdd: !0, filterId: m });
  }, o = ({ filter: m }) => {
    a({ isAdd: !1, filterId: m.id, filter: m });
  }, u = d(() => !!(n.value.filters && n.value.filters.length)), f = d(() => {
    const m = {};
    return Y(r.value, (b) => {
      m[b.id] = !0;
    }), m;
  }), _ = d(() => u.value ? Gt(n.value.filters, (m) => !f.value[m.id]) : []);
  return {
    addFiltersVisible: s,
    deleteFiltersVisible: o,
    filtersHidden: _,
    hasFiltersHiddenDefault: u
  };
}
function IW(e, {
  openDropdown: t = () => ({})
}) {
  const n = p(e, "filtersSaved"), r = p(e, "id"), a = p(e, "onUpdateModelFilters"), s = "_A_FILTERS_HOR_FILTER_NEW_", o = R(void 0), u = R(void 0), f = R(void 0), _ = d(() => `${r.value}btn_save_`), m = d(() => u.value === s), b = d(() => {
    const w = [{
      label: s
    }];
    return Y(Se(n.value), (T) => {
      T.group = "_A_FILTERS_FILTER_SAVED_GROUP_MY_", w.push(T);
    }), w;
  });
  return {
    buttonSaveComponentId: _,
    changeModelFiltersSaved: ({ model: w, item: T, isDelete: I, isCreateOrEdit: C }) => {
      if (C) {
        u.value = w;
        return;
      }
      if ((T == null ? void 0 : T.label) === s || I) {
        a.value({
          model: {},
          isUpdateFiltersVisible: !0
        }), u.value = s;
        return;
      }
      w ? (u.value = w, T && (a.value({
        model: T.data || {},
        isUpdateFiltersVisible: !0
      }), t())) : T && (a.value({
        model: T.data || {},
        isUpdateFiltersVisible: !0
      }), t());
    },
    closeModalSave: () => {
      o.value = !1;
    },
    filtersSavedLocal: b,
    initModelFiltersSaved: () => {
      u.value = s;
    },
    isModalSaveVisible: o,
    isModelFilterSavedNew: m,
    modelFiltersSaved: u,
    openModalSave: () => {
      f.value = _.value, o.value = !0;
    },
    selectorCloseIds: f
  };
}
const bf = R(!0), ml = R({});
function Bp() {
  const e = (r = {}) => {
    Y(r, (a, s) => {
      ml.value[s] = a;
    });
  };
  return {
    changeConfirmOptions: e,
    closeConfirm: (r) => {
      r && We(ml.value.close) && ml.value.close(), bf.value = !0, setTimeout(() => {
        ml.value = {};
      });
    },
    confirmOptions: ml,
    isModalHidden: bf,
    openConfirm: (r = {}) => {
      e(r), bf.value = !1;
    }
  };
}
function LW(e, {
  changeModelFiltersSaved: t = () => {
  },
  idFilterTop: n = d(() => ""),
  isModelFilterSavedNew: r = d(() => !1),
  modelFiltersSaved: a = R(void 0)
}) {
  const s = p(e, "id"), o = p(e, "updateFiltersSaved"), {
    changeConfirmOptions: u,
    closeConfirm: f,
    isModalHidden: _,
    openConfirm: m
  } = Bp(), {
    addNotification: b
  } = kd(), v = d(() => `${s.value}btn_save`), g = d(() => r.value ? "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_" : {
    mobile: "_A_FILTERS_DELETE_FILTER_SAVED_BTN_"
  }), S = d(() => r.value ? "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_" : "_A_FILTERS_DELETE_FILTER_SAVED_BTN_"), A = async () => {
    u({
      loading: !0
    });
    try {
      await o.value({
        action: "delete",
        label: a.value
      });
    } catch {
      b({
        text: "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
        type: "danger",
        extra: {
          name: a.value
        }
      }), u({
        loading: !1
      });
      return;
    }
    b({
      text: "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
      extra: {
        name: a.value
      }
    }), u({
      loading: !1
    }), f(), t({ model: void 0, isDelete: !0 });
  };
  return {
    buttonDeleteId: v,
    isConfirmHidden: _,
    openDeleteConfirm: () => {
      m({
        headerText: "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
        bodyHtml: "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
        extra: {
          name: a.value
        },
        save: A,
        selectorCloseIds: [v.value, n.value],
        saveButtonText: "_A_FILTERS_DELETE_FILTER_BTN_DELETE_",
        stop: !0,
        zIndex: 1901,
        backdropZIndex: 1900
      });
    },
    textScreenreaderButtonDeleteFiltersSaved: S,
    titleButtonDeleteFiltersSaved: g
  };
}
function EW(e) {
  const t = p(e, "filtersGroup"), n = p(e, "filtersVisible"), r = p(e, "updateDataKeyByIdFromFilter"), a = "a_column a_column_12_touch a_column_3_fullhd a_column_3_widescreen a_column_3_desktop", s = "a_columns a_columns_count_12 a_columns_gab_x_2 a_columns_gab_y_2 a_columns_gab_y_1_touch", o = "a_filters__form_element a_column a_column_12_touch a_column_9_fullhd a_column_9_widescreen a_column_9_desktop", u = ["select", "multiselect", "radio", "checkbox", "group", "fieldset"], f = ({ dataKeyByKeyId: m, item: b, filter: v }) => {
    let g = v.id;
    b && (g = b.id), r.value({
      filterId: g,
      dataKeyByKeyId: m
    });
  };
  return {
    dataForForm: d(() => {
      const m = [];
      return Y(t.value.alwaysVisible, (b) => {
        const v = Se(b);
        v.labelClass = a, v.classColumn = o, u.indexOf(b.type) !== -1 && (v.onUpdateData = ({ dataKeyByKeyId: g, item: S }) => f({ dataKeyByKeyId: g, item: S, filter: b })), m.push({
          type: "group",
          id: `group_${b.id}`,
          classColumns: s,
          children: [
            v
          ]
        });
      }), Y(n.value, (b) => {
        const v = Se(b);
        v.labelClass = a, v.classColumn = `${o}  a_d_flex a_align_items_center`, v.slotAppend = "groupAppend", v.class = "a_width_100", u.indexOf(b.type) !== -1 && (v.onUpdateData = ({ dataKeyByKeyId: g, item: S }) => f({ dataKeyByKeyId: g, item: S, filter: b })), m.push({
          type: "group",
          id: `group_${b.id}`,
          classColumns: s,
          children: [
            v
          ]
        });
      }), m;
    })
  };
}
function OW(e) {
  const t = p(e, "id");
  return {
    idFilterTop: d(() => `${t.value}_filter_top`)
  };
}
function DW(e, { emit: t }, {
  closeDropdown: n = () => {
  }
}) {
  const r = p(e, "disabled");
  return {
    onSearch: () => {
      r.value || (n(), t("startSearch"));
    }
  };
}
const PW = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-filter" viewBox="0 0 16 16">
  <path d="M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5"/>
</svg>`, RW = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-floppy2-fill" viewBox="0 0 16 16">
  <path d="M12 2h-2v3h2z"/>
  <path d="M1.5 0A1.5 1.5 0 0 0 0 1.5v13A1.5 1.5 0 0 0 1.5 16h13a1.5 1.5 0 0 0 1.5-1.5V2.914a1.5 1.5 0 0 0-.44-1.06L14.147.439A1.5 1.5 0 0 0 13.086 0zM4 6a1 1 0 0 1-1-1V1h10v4a1 1 0 0 1-1 1zM3 9h10a1 1 0 0 1 1 1v5H2v-5a1 1 0 0 1 1-1"/>
</svg>`, mA = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2"/>
</svg>`, bA = `<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 1024 1024">
    <path d="M761.37 637.327l256.642 256.642q5.988 6.844 5.988 15.399t-5.988 15.399l-93.246 93.246q-6.844 5.988-15.399 5.988t-15.399-5.988l-256.642-256.642q-101.802 66.727-223.278 66.727-171.095 0-292.572-121.477t-121.477-292.572 121.477-292.572 292.572-121.477 292.572 121.477 121.477 292.572q0 121.477-66.727 223.278zM130.887 414.049q0 116.344 82.981 199.325t200.181 82.981 199.753-82.553 82.553-199.753-82.553-199.753-199.753-82.553-200.181 82.981-82.981 199.325z"></path>
</svg>
`, BW = {
  name: "AFiltersHorizontal",
  props: {
    canSave: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersGroup: {
      type: Object,
      required: !0,
      default: () => ({
        alwaysVisible: [],
        filters: []
      })
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    filtersSaved: {
      type: Array,
      required: !0
    },
    filtersVisible: {
      type: Array,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    mainModel: {
      type: Object,
      required: !1
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    unappliedModel: {
      type: Object,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    },
    updateFiltersSaved: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch",
    "toggleFiltersVisible"
  ],
  setup(e, t) {
    const {
      dataForForm: n
    } = EW(e), {
      closeDropdown: r,
      dropdownRef: a,
      isDropdownVisible: s,
      openDropdown: o
    } = TW(e), {
      idFilterTop: u
    } = OW(e), {
      onSearch: f
    } = DW(e, t, {
      closeDropdown: r
    }), {
      destroyEventBus: _,
      initEventBus: m
    } = xW(e, {
      openDropdown: o
    }), {
      addFiltersVisible: b,
      deleteFiltersVisible: v,
      filtersHidden: g,
      hasFiltersHiddenDefault: S
    } = CW(e, t), {
      buttonSaveComponentId: A,
      changeModelFiltersSaved: w,
      closeModalSave: T,
      filtersSavedLocal: I,
      initModelFiltersSaved: C,
      isModalSaveVisible: E,
      isModelFilterSavedNew: P,
      modelFiltersSaved: M,
      openModalSave: k,
      selectorCloseIds: F
    } = IW(e, {
      openDropdown: o
    }), {
      buttonDeleteId: D,
      isConfirmHidden: W,
      openDeleteConfirm: $,
      textScreenreaderButtonDeleteFiltersSaved: z,
      titleButtonDeleteFiltersSaved: ne
    } = LW(e, {
      changeModelFiltersSaved: w,
      idFilterTop: u,
      isModelFilterSavedNew: P,
      modelFiltersSaved: M
    });
    return C(), m(), Bt(() => {
      _();
    }), {
      addFiltersVisible: b,
      buttonDeleteId: D,
      buttonSaveComponentId: A,
      changeModelFiltersSaved: w,
      closeDropdown: r,
      closeModalSave: T,
      dataForForm: n,
      deleteFiltersVisible: v,
      dropdownRef: a,
      filtersHidden: g,
      filtersSavedLocal: I,
      hasFiltersHiddenDefault: S,
      idFilterTop: u,
      initModelFiltersSaved: C,
      isConfirmHidden: W,
      isDropdownVisible: s,
      isModalSaveVisible: E,
      isModelFilterSavedNew: P,
      modelFiltersSaved: M,
      onSearch: f,
      openDeleteConfirm: $,
      openModalSave: k,
      selectorCloseIds: F,
      textScreenreaderButtonDeleteFiltersSaved: z,
      titleButtonDeleteFiltersSaved: ne
    };
  },
  render() {
    return this.isDropdownVisible ? [
      c(Ma, {
        ref: "dropdownRef",
        buttonIconLeft: PW,
        buttonText: "Filter",
        buttonClass: "a_btn a_btn_primary a_btn_small a_filter_horizontal__btn_dropdown",
        dropdownTag: "div",
        dropdownClass: "a_filter_horizontal__wrapper",
        dropdownRenderDefault: !0,
        isCloseByClickInside: !1,
        hasCaret: !1,
        inBody: !0,
        lockArrowsNavigation: !1,
        lockTabNavigation: !1,
        useEscape: !this.isModalSaveVisible && this.isConfirmHidden
      }, {
        ...this.$slots,
        dropdown: () => c("div", {
          class: "a_filter_horizontal"
        }, [
          c("div", {
            class: "a_filter_horizontal__header__wrapper"
          }, [
            c("div", {
              class: "a_filter_horizontal__header"
            }, [
              c("div", {
                class: "a_filter_horizontal__header__texts"
              }, [
                c(be, {
                  class: "a_filter_horizontal__header__texts__filter",
                  tag: "span",
                  text: "_A_FILTERS_HOR_FILTER_HEADER_"
                }),
                this.isModelFilterSavedNew ? c(be, {
                  class: "a_filter_horizontal__header__texts__new",
                  tag: "em",
                  text: this.modelFiltersSaved
                }) : c("span", {}, this.modelFiltersSaved)
              ]),
              this.canSave ? c(Vl, {
                modelValue: this.modelFiltersSaved,
                change: this.changeModelFiltersSaved,
                class: "a_filters_top__save_select",
                data: this.filtersSavedLocal,
                deselectable: !1,
                keyId: "label",
                keyLabel: "label",
                keyGroup: "group",
                label: "_A_FILTERS_SAVE_SELECT_",
                menuWidthType: "by_content",
                search: !0,
                translateData: !0,
                type: "select"
              }) : ""
            ])
          ]),
          c("div", {
            class: "a_filter_horizontal__body__wrapper"
          }, [
            c("div", {
              class: "a_filter_horizontal__body"
            }, [
              c(Rd, {
                idPrefix: this.idFilterTop,
                class: "a_filter_horizontal__body__form",
                classColumnDefault: "",
                classColumns: "",
                data: this.dataForForm,
                excludeRenderAttributes: this.excludeRenderAttributes,
                modelValue: this.unappliedModel,
                showErrors: !1,
                onChange: this.onUpdateModelFilters
              }, {
                ...this.$slots,
                groupAppend: ({ item: e }) => c(Oe, {
                  type: "button",
                  class: "a_btn a_btn_primary a_ml_2",
                  title: "_A_FILTERS_TOP_CLOSE_",
                  textScreenReader: "_A_FILTERS_TOP_CLOSE_",
                  iconLeft: ja,
                  stop: !0,
                  onClick: () => this.deleteFiltersVisible({ filter: e })
                }),
                formDataAppend: () => c("div", {
                  class: "a_filter_horizontal__add_filter__wrapper"
                }, [
                  c(Vl, {
                    buttonClassDefault: "a_btn a_btn_primary a_filter_horizontal__add_filter",
                    change: this.addFiltersVisible,
                    data: this.filtersHidden,
                    hasCaret: !1,
                    disabled: !this.filtersHidden.length,
                    isLabelFloat: !1,
                    keyGroup: "group",
                    keyId: "id",
                    keyLabel: "label",
                    label: "_A_FILTERS_ADD_FILTER_",
                    labelClass: "a_sr_only",
                    menuWidthType: "by_content",
                    sortOrderGroup: "asc",
                    placement: "bottom-start",
                    search: !0,
                    translateData: !0,
                    type: "select"
                  }, {
                    fixedPlaceholder: () => [
                      c(be, {
                        tag: "span",
                        ariaHidden: !0,
                        class: "a_position_absolute_all",
                        title: "_A_FILTERS_ADD_FILTER_"
                      }),
                      c(lt, {
                        icon: mA
                      })
                    ]
                  })
                ]),
                formAppend: () => this.canSave ? c("div", {
                  class: "a_filter_horizontal__save_actions"
                }, [
                  c(Oe, {
                    id: this.buttonSaveComponentId,
                    class: "a_btn a_btn_primary",
                    iconLeft: RW,
                    type: "button",
                    text: "_A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_",
                    onClick: this.openModalSave
                  }),
                  c(Oe, {
                    id: this.buttonDeleteId,
                    ariaDisabled: this.isModelFilterSavedNew,
                    class: "a_btn a_btn_secondary",
                    iconLeft: aA,
                    text: {
                      desktop: "_A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_"
                    },
                    textAriaHidden: !0,
                    textScreenReader: this.textScreenreaderButtonDeleteFiltersSaved,
                    title: this.titleButtonDeleteFiltersSaved,
                    type: "button",
                    onClick: this.openDeleteConfirm
                  })
                ]) : ""
              })
            ]),
            c("div", {
              class: "a_filter_horizontal__footer"
            }, [
              c("div", {
                class: "a_filter_horizontal__footer__actions"
              }, [
                c(Oe, {
                  type: "button",
                  class: "a_btn a_btn_primary a_text_nowrap a_filter_horizontal__footer__actions__btn_search",
                  iconLeft: bA,
                  text: "_A_FILTERS_START_SEARCH_",
                  disabled: this.disabled,
                  onClick: this.onSearch
                }),
                c(Oe, {
                  type: "button",
                  class: "a_btn a_btn_secondary a_text_nowrap a_filter_horizontal__footer__actions__btn_close",
                  text: "_A_FILTERS_HOR_CLOSE_DROPDOWN_",
                  onClick: this.closeDropdown
                })
              ])
            ])
          ])
        ])
      }),
      this.isModalSaveVisible ? c(wW, {
        changeModelFiltersSaved: this.changeModelFiltersSaved,
        filtersSaved: this.filtersSaved,
        isModelFilterSavedNew: this.isModelFilterSavedNew,
        modelFiltersSaved: this.modelFiltersSaved,
        selectorCloseIds: this.selectorCloseIds,
        updateFiltersSaved: this.updateFiltersSaved,
        onClose: this.closeModalSave
      }) : ""
    ] : null;
  }
};
function kW(e) {
  const t = p(e, "id");
  return {
    idFilterTop: d(() => `${t.value}_filter_main`)
  };
}
function MW(e) {
  const t = p(e, "filterMain"), n = d(() => !!t.value), r = d(() => n.value ? [
    t.value
  ] : []);
  return {
    hasFilterMain: n,
    dataMainFilter: r
  };
}
function FW(e, { emit: t }) {
  const n = p(e, "disabled");
  return {
    onSearch: () => {
      n.value || t("startSearch");
    }
  };
}
const qW = {
  name: "AFiltersMain",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filterMain: {
      type: Object,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    mainModel: {
      type: Object,
      required: !1
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    },
    updateMainModel: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch"
  ],
  setup(e, t) {
    const {
      hasFilterMain: n,
      dataMainFilter: r
    } = MW(e), {
      idFilterTop: a
    } = kW(e), {
      onSearch: s
    } = FW(e, t);
    return {
      hasFilterMain: n,
      dataMainFilter: r,
      idFilterTop: a,
      onSearch: s
    };
  },
  render() {
    return this.hasFilterMain ? c("div", {
      id: this.idFilterTop,
      class: "a_filters_top"
    }, [
      c(Rd, {
        idPrefix: this.idFilterTop,
        class: "a_filters_top__form",
        classColumns: "a_filters_top__main_wrapper",
        classColumnDefault: "a_filters_top__main",
        data: this.dataMainFilter,
        excludeRenderAttributes: this.excludeRenderAttributes,
        modelValue: this.mainModel,
        showErrors: !1,
        onChange: this.updateMainModel
      }, {
        formDataAppend: () => c(ct, {
          class: "a_btn a_btn_primary a_text_nowrap a_filters_top__search",
          iconLeft: lo,
          type: "submit",
          text: {
            desktop: "_A_FILTERS_START_SEARCH_"
          },
          textScreenReader: {
            mobile: "_A_FILTERS_START_SEARCH_"
          },
          prevent: !0,
          stop: !0,
          disabled: this.disabled,
          onClick: this.onSearch
        })
      })
    ]) : null;
  }
};
function NW(e, { emit: t }, {
  filtersHorizontalRef: n = R(void 0),
  filtersVisibleAll: r = d(() => []),
  onUpdateModelFilters: a = () => {
  }
}) {
  const s = p(e, "appliedModel"), o = p(e, "unappliedModel"), u = () => {
    var b;
    (b = n.value) == null || b.initModelFiltersSaved();
  }, f = ({ filter: b, keyId: v, modelArray: g, appliedModelLocal: S, unappliedModelLocal: A }) => {
    const w = b.id;
    return pp.value[b.type] ? (S[w] && S[w].length && (g ? S[w] = Gt(S[w], (T) => g.indexOf(T) === -1) : S[w] = []), A[w] && A[w].length && (g ? A[w] = Gt(A[w], (T) => g.indexOf(T) === -1) : A[w] = [])) : SS.value[b.type] && v ? (dt(A == null ? void 0 : A[w]) && (A[w][v] = void 0), dt(S == null ? void 0 : S[w]) && (S[w][v] = void 0)) : (A[w] = void 0, S[w] = void 0), {
      appliedModelLocal: S,
      unappliedModelLocal: A
    };
  };
  return {
    closeAllFilters: () => {
      let b = Se(s.value), v = Se(o.value);
      Y(r.value, (g) => {
        const S = f({
          filter: g,
          appliedModelLocal: b,
          unappliedModelLocal: v
        });
        b = S.appliedModelLocal, v = S.unappliedModelLocal;
      }), u(), t("update:unappliedModel", v), t("update:appliedModel", b), setTimeout(() => {
        a({ model: s.value });
      });
    },
    closeFilterValue: ({ filter: b, keyId: v, modelArray: g }) => {
      const S = Se(s.value), A = Se(o.value), {
        appliedModelLocal: w,
        unappliedModelLocal: T
      } = f({
        filter: b,
        keyId: v,
        modelArray: g,
        appliedModelLocal: S,
        unappliedModelLocal: A
      });
      t("update:unappliedModel", T), t("update:appliedModel", w), setTimeout(() => {
        a({ model: s.value });
      });
    }
  };
}
function VW() {
  const e = R({});
  return {
    dataKeyByKeyIdPerFilter: e,
    updateDataKeyByIdFromFilter: ({ dataKeyByKeyId: n, filterId: r }) => {
      e.value[r] = Se(n);
    }
  };
}
function HW(e) {
  const t = p(e, "excludeRenderAttributes"), n = [
    "alwaysVisible"
  ];
  return {
    excludeRenderAttributesComputed: d(() => ik(n, t.value))
  };
}
function $W({ filter: e = {}, modelObj: t = {} }) {
  var r;
  const n = e.id;
  return n in t ? pp.value[e.type] ? !!((r = t[n]) != null && r.length) : SS.value[e.type] ? !!(t[n] && !Mn(t[n])) : !0 : !1;
}
function WW(e, { emit: t }) {
  const n = p(e, "filters"), r = p(e, "filterMain"), a = p(e, "unappliedModel"), s = R({}), o = R(void 0), u = R([]), f = d(() => !!(n.value.length || r.value)), _ = d(() => {
    const T = {};
    return Y(Se(n.value), (I) => {
      T[I.id] = I, fi.value[I.type] && I.children && I.children.length && Y(I.children, (C) => {
        T[C.id] = C;
      });
    }), T;
  }), m = d(() => {
    const T = {
      alwaysVisible: [],
      filters: []
    };
    return Y(Se(n.value), (I) => {
      I.alwaysVisible ? T.alwaysVisible.push(I) : T.filters.push(I);
    }), T;
  }), b = d(() => {
    const T = [];
    return Y(u.value, (I) => {
      _.value[I] && T.push(_.value[I]);
    }), T;
  }), v = d(() => {
    const T = [];
    T.push(...n.value);
    const I = [];
    return Y(T, (C) => {
      I.push(C), fi.value[C.type] && C.children && C.children.length && Y(C.children, (E) => {
        I.push(E);
      });
    }), I;
  }), g = () => {
    const T = [];
    Y(m.value.filters, (I) => {
      $W({
        filter: I,
        modelObj: a.value
      }) && T.push(I.id);
    }), u.value = T;
  };
  return {
    filtersDataKeyById: s,
    filtersGroup: m,
    filtersHorizontalRef: o,
    filtersKeyById: _,
    filtersVisible: b,
    filtersVisibleAll: v,
    filtersVisibleIds: u,
    hasFilters: f,
    onUpdateModelFilters: ({ model: T, isUpdateFiltersVisible: I }) => {
      t("update:unappliedModel", T), I && setTimeout(() => {
        g();
      });
    },
    setFiltersVisibleIds: g,
    updateAppliedModel: ({ model: T }) => {
      t("update:appliedModel", T);
    },
    updateMainModel: ({ model: T }) => {
      t("update:mainModel", T);
    }
  };
}
function UW(e) {
  const t = p(e, "filtersSaved"), n = p(e, "unappliedModel"), r = p(e, "updateFiltersSaved"), a = R([]);
  return {
    filtersSavedLocal: a,
    initFiltersSaved: () => {
      a.value = t.value || [];
    },
    updateFiltersSavedLocal: ({ action: u = "", label: f = "" }) => {
      if (u === "create")
        a.value.push({
          label: f,
          data: Se(n.value)
        });
      else {
        const _ = Uy(a.value, ["label", f]);
        _ !== -1 && (u === "delete" ? a.value.splice(_, 1) : u === "update" && a.value.splice(_, 1, {
          label: f,
          data: Se(n.value)
        }));
      }
      We(r.value) && r.value({
        action: u,
        label: f,
        model: n.value,
        filtersSaved: a.value
      });
    }
  };
}
function jW(e, { emit: t }, {
  onUpdateModelFilters: n = () => {
  }
}) {
  const r = p(e, "appliedModel"), a = p(e, "unappliedModel");
  return {
    startSearch: () => {
      t("update:appliedModel", a.value), setTimeout(() => {
        n({ model: r.value });
      });
    }
  };
}
function GW(e, {
  dataKeyByKeyIdPerFilter: t = R({}),
  filtersVisibleIds: n = R([]),
  onUpdateModelFilters: r = () => {
  }
}) {
  const a = p(e, "unappliedModel");
  return {
    toggleFiltersVisible: ({ isAdd: o = !0, filterId: u, filter: f }) => {
      var _, m;
      if (o)
        n.value.push(u);
      else {
        const b = n.value.indexOf(u);
        b !== -1 && n.value.splice(b, 1);
        const v = Se(a.value);
        if (f && f.modelId) {
          const g = (_ = t.value) == null ? void 0 : _[u];
          (m = v == null ? void 0 : v[f.modelId]) != null && m.length && g ? v[f.modelId] = Gt(v[f.modelId], (S) => !g[S]) : v[u] = void 0;
        } else
          v[u] = void 0;
        r({ model: v });
      }
    }
  };
}
const PU = {
  name: "AFilters",
  props: {
    appliedModel: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canSave: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filterMain: {
      type: Object,
      required: !1
    },
    filters: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersSaved: {
      type: Array,
      required: !1,
      default: () => []
    },
    id: {
      type: String,
      required: !1,
      default: () => mt("a_filters_")
    },
    mainModel: {
      type: Object,
      required: !1
    },
    unappliedModel: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    updateFiltersSaved: {
      type: Function,
      required: !1,
      default: void 0
    },
    view: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => ["top", "right"].indexOf(e) !== -1
    },
    viewRightTeleportSelector: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "startSearch",
    "update:appliedModel",
    "update:mainModel",
    "update:unappliedModel"
  ],
  setup(e, t) {
    const n = p(e, "filtersSaved"), {
      filtersDataKeyById: r,
      filtersGroup: a,
      filtersHorizontalRef: s,
      filtersKeyById: o,
      filtersVisible: u,
      filtersVisibleAll: f,
      filtersVisibleIds: _,
      hasFilters: m,
      onUpdateModelFilters: b,
      setFiltersVisibleIds: v,
      updateAppliedModel: g,
      updateMainModel: S
    } = WW(e, t), {
      closeAllFilters: A,
      closeFilterValue: w
    } = NW(e, t, {
      filtersHorizontalRef: s,
      filtersVisibleAll: f,
      onUpdateModelFilters: b
    }), {
      dataKeyByKeyIdPerFilter: T,
      updateDataKeyByIdFromFilter: I
    } = VW(), {
      toggleFiltersVisible: C
    } = GW(e, {
      dataKeyByKeyIdPerFilter: T,
      filtersVisibleIds: _,
      onUpdateModelFilters: b
    }), {
      startSearch: E
    } = jW(e, t, {
      onUpdateModelFilters: b
    }), {
      filtersSavedLocal: P,
      initFiltersSaved: M,
      updateFiltersSavedLocal: k
    } = UW(e), {
      excludeRenderAttributesComputed: F
    } = HW(e);
    return st(n, () => {
      M();
    }, {
      deep: !0
    }), v(), M(), {
      closeAllFilters: A,
      closeFilterValue: w,
      dataKeyByKeyIdPerFilter: T,
      excludeRenderAttributesComputed: F,
      filtersDataKeyById: r,
      filtersGroup: a,
      filtersHorizontalRef: s,
      filtersKeyById: o,
      filtersSavedLocal: P,
      filtersVisible: u,
      filtersVisibleAll: f,
      filtersVisibleIds: _,
      hasFilters: m,
      onUpdateModelFilters: b,
      setFiltersVisibleIds: v,
      startSearch: E,
      toggleFiltersVisible: C,
      updateAppliedModel: g,
      updateDataKeyByIdFromFilter: I,
      updateFiltersSavedLocal: k,
      updateMainModel: S
    };
  },
  render() {
    if (this.hasFilters)
      return c(
        "div",
        [
          this.view === "top" && c(qW, {
            id: this.id,
            disabled: this.disabled,
            excludeRenderAttributes: this.excludeRenderAttributesComputed,
            filterMain: this.filterMain,
            mainModel: this.mainModel,
            updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
            updateMainModel: this.updateMainModel,
            onStartSearch: this.startSearch
          }, this.$slots),
          this.view === "right" && c(fa, {
            to: this.viewRightTeleportSelector,
            disabled: !this.viewRightTeleportSelector
          }, [
            c(F4, {
              id: this.id,
              disabled: this.disabled,
              excludeRenderAttributes: this.excludeRenderAttributesComputed,
              filters: this.filters,
              filtersKeyById: this.filtersKeyById,
              appliedModel: this.appliedModel,
              onUpdateModelFilters: this.updateAppliedModel,
              updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
              onStartSearch: this.startSearch
            }, this.$slots)
          ]),
          c(Z4, {
            id: this.id,
            appliedModel: this.appliedModel,
            closeAllFilters: this.closeAllFilters,
            closeFilterValue: this.closeFilterValue,
            dataKeyByKeyIdPerFilter: this.dataKeyByKeyIdPerFilter,
            disabled: this.disabled,
            filtersGroup: this.filtersGroup,
            filtersKeyById: this.filtersKeyById,
            filtersVisibleAll: this.filtersVisibleAll
          }, {
            filtersHorizontal: () => this.view === "top" ? c(BW, {
              ref: "filtersHorizontalRef",
              id: this.id,
              canSave: this.canSave,
              disabled: this.disabled,
              excludeRenderAttributes: this.excludeRenderAttributesComputed,
              filtersGroup: this.filtersGroup,
              filtersKeyById: this.filtersKeyById,
              filtersSaved: this.filtersSavedLocal,
              filtersVisible: this.filtersVisible,
              onUpdateModelFilters: this.onUpdateModelFilters,
              unappliedModel: this.unappliedModel,
              updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
              updateFiltersSaved: this.updateFiltersSavedLocal,
              onStartSearch: this.startSearch,
              onToggleFiltersVisible: this.toggleFiltersVisible
            }, this.$slots) : "",
            ...this.$slots
          })
        ]
      );
  }
}, Qf = {
  name: "AGet",
  props: {
    keyLabel: {
      type: [String, Array],
      required: !0,
      info: "Weg zu Informationen. Z.B.('a[0].b.c', 'vertrag.antrag_obj.pk', ['vertrag', aloha, 'pk'])"
    },
    data: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Haupt-Objekt oder -Array, wo man sucht"
    },
    tag: {
      type: String,
      required: !1,
      default: "span",
      info: "Semantisch-relevanter HTML-Tag.(span, div, ...)"
    },
    defaultValue: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Standardwert, wenn Lodash-Funktion 'get' undefined zurückschickt"
    },
    filter: {
      type: String,
      required: !1,
      default: void 0
    },
    filterParameters: {
      type: [Object, String, Number, Boolean],
      required: !1,
      default: () => {
      }
    },
    replacedWithDefault: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Wenn das Wert, das Lodash-Funktion 'get' zurückschickt, === this.replacedWithDefault, dann this.defaultValue"
    }
  },
  setup() {
    return tr();
  },
  computed: {
    valueLocal() {
      let e = de(this.data, this.keyLabelLocal);
      if (ae(e) && (e = this.defaultValue), this.isValueEqualsWithValueThenDefaultValue(e))
        return this.defaultValue;
      if (this.filter) {
        const t = `filter${Ay(this.filter)}`;
        if (We(this[t]))
          return this[t](e, this.filterParameters);
        console.warn(`filter "${t}" ist not defined`);
      }
      return e;
    },
    keyLabelLocal() {
      return Ae(this.keyLabel) ? this.keyLabel.join(".") : this.keyLabel;
    }
  },
  methods: {
    isValueEqualsWithValueThenDefaultValue(e) {
      if (qe(this.replacedWithDefault))
        return !1;
      let t = !1;
      return Ae(this.replacedWithDefault) ? Y(this.replacedWithDefault, (n) => {
        if (n === e)
          return t = !0, !1;
      }) : this.replacedWithDefault === e && (t = !0), t;
    }
  },
  render() {
    return Ft(c(this.tag), [
      [sn, this.valueLocal]
    ]);
  }
};
function YW(e) {
  const t = p(e, "isLast"), n = p(e, "hasDropdownActions"), r = p(e, "hasDividerBeforeDropdown"), a = d(() => t.value && n.value), s = d(() => a.value && !r.value);
  return {
    isDropdownActionsAfterGroup: d(() => a.value && r.value),
    isDropdownActionsInGroup: s
  };
}
const zW = {
  name: "AGroupButtonDropdownItem",
  props: {
    actionsClasses: {
      type: Array,
      required: !0
    },
    actionsIds: {
      type: Array,
      required: !0
    },
    actionsDropdown: {
      type: Array,
      required: !0
    },
    btnGroupClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn_group"
    },
    data: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !0
    },
    hasDividerBeforeDropdown: {
      type: Boolean,
      required: !0
    },
    hasDropdownActions: {
      type: Boolean,
      required: !0
    },
    isLast: {
      type: Boolean,
      required: !0
    }
  },
  setup(e) {
    const {
      isDropdownActionsAfterGroup: t,
      isDropdownActionsInGroup: n
    } = YW(e);
    return {
      isDropdownActionsAfterGroup: t,
      isDropdownActionsInGroup: n
    };
  },
  render() {
    return [
      !!this.data.children.length && c("div", {
        class: this.btnGroupClass
      }, [
        ...this.data.children.map((e) => {
          let t = e.classButton ? e.classButton : this.actionsClasses[e.actionNotDividerIndex];
          e.classExtra && (t = Su({
            class1: t,
            class2: e.classExtra
          }));
          const n = e.id ? e.id : this.actionsIds[e.actionNotDividerIndex], r = this.disabled || e.disabled;
          if (e.type === "button")
            return c(ct, {
              ...e,
              id: n,
              class: t,
              classButton: void 0,
              classExtra: void 0,
              disabled: r,
              onClick: e.callback,
              callback: void 0,
              actionNotDividerIndex: void 0,
              isHidden: void 0,
              isConfirm: void 0,
              callbackLocal: void 0
            });
          if (e.type === "link")
            return c(Od, {
              ...e,
              id: n,
              classButton: void 0,
              classExtra: void 0,
              disabled: r,
              class: t,
              actionNotDividerIndex: void 0,
              isHidden: void 0,
              type: void 0,
              isConfirm: void 0,
              callbackLocal: void 0
            });
          if (e.type === "template" && e.slotName && this.$slots[e.slotName])
            return this.$slots[e.slotName]({
              id: n,
              class: t,
              action: e
            });
        }),
        this.isDropdownActionsInGroup && c(Ma, {
          isHideWithoutActionAndSlot: !0,
          actions: this.actionsDropdown,
          disabled: this.disabled,
          ...this.dropdownAttributes
        }, this.$slots)
      ]),
      this.isDropdownActionsAfterGroup && c(Ma, {
        isHideWithoutActionAndSlot: !0,
        actions: this.actionsDropdown,
        disabled: this.disabled,
        ...this.dropdownAttributes
      }, this.$slots)
    ];
  }
};
function KW(e) {
  const t = p(e, "actions"), n = p(e, "indexFirstDropdownAction"), r = p(e, "indexFirstDropdownActionMobile"), a = p(e, "minDropdownActions"), {
    isMobileWidth: s
  } = En(), o = d(() => JS({
    actions: t.value
  })), u = d(() => {
    const g = Se(o.value);
    return Y(g, (S) => {
      S.classButton = Su({
        class1: S.classButton,
        class2: S.class
      }), S.class = Su({
        class1: S.classDropdown,
        class2: S.class
      }), delete S.classDropdown, S.classExtra && (S.class = Su({
        class1: S.classExtra,
        class2: S.class
      }));
    }), g;
  }), f = d(() => s.value ? r.value : n.value), _ = ({ actions: g = [], minCountActions: S = 0 }) => {
    let A = 0;
    return Y(g, (w) => {
      if (A >= S)
        return !1;
      w.type !== "divider" && A++;
    }), A >= S;
  }, m = d(() => {
    const g = Se(u.value), S = {
      buttons: [],
      dropdown: []
    };
    let A = 0, w = !0;
    return Y(g, (T, I) => {
      if (A === f.value) {
        const C = g.slice(I, g.length);
        if (_({
          actions: C,
          minCountActions: a.value
        }))
          return S.dropdown = g.splice(I, g.length), f.value === 0 && S.buttons.push({
            type: "group",
            children: []
          }), !1;
      }
      T.type !== "divider" ? (T.actionNotDividerIndex = A, A++, w ? S.buttons.push({
        type: "group",
        children: [T]
      }) : Is(S.buttons).children.push(T), w = !1) : w = !0;
    }), S;
  }), b = d(() => m.value.dropdown.length > 0), v = d(() => u.value.length > 0);
  return {
    actionsAllWithClassesFiltered: u,
    actionsGrouped: m,
    hasActionsAllFiltered: v,
    hasDropdownActions: b
  };
}
const ai = R({
  propsDefault: {
    actionsClasses: ["a_btn a_btn_primary", "a_btn a_btn_secondary"],
    dropdownAttributes: {},
    hasDividerBeforeDropdown: !0,
    indexFirstDropdownAction: 1,
    indexFirstDropdownActionMobile: 0,
    minDropdownActions: 2,
    useActionClass: !0,
    useDropdownActionClass: !1
  }
}), RU = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    ai.value.propsDefault = {
      ...ai.value.propsDefault,
      ...t
    };
  }
}, eh = {
  name: "AGroupButtonDropdown",
  props: {
    actions: {
      type: Array,
      required: !1,
      default: () => []
    },
    actionsClasses: {
      type: Array,
      required: !1,
      default: () => ai.value.propsDefault.actionsClasses
    },
    actionsIds: {
      type: Array,
      required: !1,
      default: () => []
    },
    btnGroupClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn_group"
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !1,
      default: () => ai.value.propsDefault.dropdownAttributes
    },
    hasDividerBeforeDropdown: {
      type: Boolean,
      required: !1,
      default: () => ai.value.propsDefault.hasDividerBeforeDropdown
    },
    indexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: () => ai.value.propsDefault.indexFirstDropdownAction,
      validator: (e) => e >= -1
    },
    indexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: () => ai.value.propsDefault.indexFirstDropdownActionMobile,
      validator: (e) => e >= -1
    },
    minDropdownActions: {
      type: Number,
      required: !1,
      default: () => ai.value.propsDefault.minDropdownActions
    },
    innerFlagHasActions: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "update:innerFlagHasActions"
  ],
  setup(e, { emit: t }) {
    const {
      actionsAllWithClassesFiltered: n,
      actionsGrouped: r,
      hasActionsAllFiltered: a,
      hasDropdownActions: s
    } = KW(e);
    return st(a, (o) => {
      t("update:innerFlagHasActions", o);
    }, {
      immediate: !0
    }), {
      actionsAllWithClassesFiltered: n,
      actionsGrouped: r,
      hasActionsAllFiltered: a,
      hasDropdownActions: s
    };
  },
  render() {
    if (this.hasActionsAllFiltered)
      return c("div", {
        class: "aloha_group_btn_dropdown"
      }, [
        ...this.actionsGrouped.buttons.map((e, t) => c(zW, {
          btnGroupClass: this.btnGroupClass,
          data: e,
          disabled: this.disabled,
          actionsDropdown: this.actionsGrouped.dropdown,
          hasDropdownActions: this.hasDropdownActions,
          dropdownAttributes: this.dropdownAttributes,
          actionsClasses: this.actionsClasses,
          actionsIds: this.actionsIds,
          isLast: t === this.actionsGrouped.buttons.length - 1,
          hasDividerBeforeDropdown: this.hasDividerBeforeDropdown
        }, this.$slots))
      ]);
  }
};
function XW(e) {
  const t = p(e, "callback"), n = p(e, "disabled"), r = p(e, "rootMargin"), a = p(e, "threshold");
  let s = {};
  const o = R(void 0);
  let u;
  const f = () => {
    s = {
      rootMargin: r.value,
      threshold: a.value
    };
  }, _ = () => {
    u = new IntersectionObserver((v) => {
      const [g] = v;
      g.isIntersecting && t.value();
    }, s);
  }, m = () => {
    n.value || u.observe(o.value);
  }, b = () => {
    u && u.disconnect();
  };
  return st(n, (v) => {
    v === !0 ? m() : b();
  }), {
    disconnectObserver: b,
    sentinelRef: o,
    setIntersectionObserver: _,
    setObserverOptions: f,
    startObserver: m
  };
}
const BU = {
  name: "AInfiniteScroll",
  props: {
    callback: {
      type: Function,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    rootMargin: {
      type: String,
      required: !1,
      default: "300px"
    },
    sentinelTag: {
      type: String,
      required: !1,
      default: "span"
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    threshold: {
      type: [Number, Array],
      required: !1,
      default: 0.5
    }
  },
  setup(e) {
    const {
      disconnectObserver: t,
      sentinelRef: n,
      setIntersectionObserver: r,
      setObserverOptions: a,
      startObserver: s
    } = XW(e);
    return ha(() => {
      a(), r(), s();
    }), Bt(() => {
      t();
    }), {
      sentinelRef: n
    };
  },
  render() {
    return c(this.tag, {}, [
      this.$slots.default ? this.$slots.default() : null,
      c(this.sentinelTag, {
        ref: "sentinelRef",
        style: "height: 1px; display: block;",
        ariaHidden: !0
      })
    ]);
  }
};
function ZW(e) {
  const t = p(e, "textCopy"), n = R(void 0), {
    addNotification: r
  } = kd();
  return {
    copyText: async () => {
      var o;
      let s = "";
      if (t.value ? s = t.value : (o = n.value) != null && o.$el && Y(n.value.$el.children, (u) => {
        u.classList.contains("a_sr_only") || (s += u.textContent);
      }), s)
        try {
          await navigator.clipboard.writeText(s), r({
            text: "_A_LINK_COPY_COPIED_TO_CLIPBOARD_"
          });
        } catch (u) {
          console.error(u);
        }
    },
    linkRef: n
  };
}
const JW = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-copy" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z"/>
</svg>`, kU = {
  name: "ALinkCopy",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    buttonOptions: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonPosition: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "a_btn_group"
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    linkOptions: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    textCopy: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup() {
    const {
      copyText: e,
      linkRef: t
    } = ZW();
    return {
      copyText: e,
      linkRef: t
    };
  },
  render() {
    var t, n;
    const e = c(ct, {
      alwaysTranslate: this.alwaysTranslate,
      class: "a_btn a_btn_secondary",
      disabled: this.disabled,
      iconLeft: JW,
      textScreenReader: "_A_LINK_COPY_BTN_TITLE_",
      title: "_A_LINK_COPY_BTN_TITLE_",
      onClick: this.copyText,
      ...this.buttonOptions
    }, (t = this.$slots) == null ? void 0 : t.button);
    return c("div", {
      class: [
        this.classDefault,
        this.class
      ],
      role: "group"
    }, [
      this.buttonPosition === "left" && e,
      c(Od, {
        ref: "linkRef",
        alwaysTranslate: this.alwaysTranslate,
        disabled: this.disabled,
        ...this.linkOptions
      }, (n = this.$slots) == null ? void 0 : n.link),
      this.buttonPosition === "right" && e
    ]);
  }
};
function QW(e) {
  const t = p(e, "isDataSimpleArray"), n = p(e, "item"), r = p(e, "keyChildren"), a = d(() => Qn(n.value)), s = d(() => {
    var u;
    return t.value ? (u = n.value) == null ? void 0 : u[1] : !r.value || !a.value ? [] : de(n.value, r.value) || [];
  }), o = d(() => Ae(s.value) && s.value.length > 0);
  return {
    children: s,
    hasChildren: o
  };
}
function e6(e) {
  const t = p(e, "isDataSimpleArray"), n = p(e, "item"), r = p(e, "itemIndex"), a = p(e, "keyLabel"), s = p(e, "keyLabelCallback");
  return {
    label: d(() => {
      var u;
      return t.value ? Ae(n.value) ? ((u = n.value) == null ? void 0 : u[0]) || "" : n.value : We(s.value) ? s.value({ item: n.value, itemIndex: r.value }) : a.value ? de(n.value, a.value) : n.value;
    })
  };
}
const t6 = {
  name: "AListItem",
  props: {
    classItem: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    classMain: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    item: {
      type: [Object, String, Number, Array],
      required: !0
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !0
    },
    listItemTag: {
      type: String,
      required: !1,
      default: "li"
    },
    separator: {
      type: String,
      required: !1,
      default: void 0
    },
    separatorHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      children: t,
      hasChildren: n
    } = QW(e), {
      label: r
    } = e6(e);
    return {
      children: t,
      hasChildren: n,
      label: r
    };
  },
  render() {
    return c(this.listItemTag, {
      class: this.classItem
    }, [
      this.$slots.listItem ? this.$slots.listItem({
        item: this.item,
        itemIndex: this.itemIndex
      }) : Ft(c(this.labelTag), [
        [sn, this.label]
      ]),
      this.separator ? c("span", {}, this.separator) : "",
      this.hasChildren ? c(a6, {
        classItem: this.classItem,
        classMain: this.classMain,
        data: this.children,
        isDataSimpleArray: this.isDataSimpleArray,
        keyChildren: this.keyChildren,
        keyId: this.keyId,
        keyLabel: this.keyLabel,
        keyLabelCallback: this.keyLabelCallback,
        labelTag: this.labelTag,
        listItemTag: this.listItemTag,
        separator: this.separator,
        separatorHtml: this.separatorHtml,
        tag: this.tag
      }, this.$slots) : "",
      this.separatorHtml ? Ft(c("div"), [
        [sn, this.separatorHtml]
      ]) : ""
    ]);
  }
};
function n6(e) {
  const t = p(e, "data"), n = p(e, "isDataSimpleArray"), r = p(e, "keyChildren"), a = p(e, "keyLabel"), s = p(e, "keyLabelCallback"), o = p(e, "separator");
  return {
    plainText: d(() => Nu(t.value, {
      isHtml: !1,
      keyLabel: a.value,
      keyLabelCallback: s.value,
      keyChildren: r.value,
      isSimpleArray: n.value,
      separator: o.value
    }))
  };
}
function r6(e) {
  const t = p(e, "tag"), n = p(e, "isHtml");
  return {
    tagLocal: d(() => !n.value && (t.value === "ul" || t.value === "ol") ? "span" : t.value)
  };
}
const a6 = {
  name: "AList",
  props: {
    classItem: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    classMain: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isHtml: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !1,
      default: "span"
    },
    listItemTag: {
      type: String,
      required: !1,
      default: "li"
    },
    separator: {
      type: String,
      required: !1,
      default: void 0
    },
    separatorHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "ul"
    }
  },
  setup(e) {
    const {
      tagLocal: t
    } = r6(e), {
      plainText: n
    } = n6(e);
    return {
      plainText: n,
      tagLocal: t
    };
  },
  render() {
    return this.isHtml ? c(this.tag, {
      class: this.classMain
    }, [
      this.data.map((e, t) => {
        const n = this.keyId ? de(e, this.keyId) : t;
        return c(t6, {
          key: n,
          classItem: this.classItem,
          classMain: this.classMain,
          isDataSimpleArray: this.isDataSimpleArray,
          item: e,
          itemIndex: t,
          keyChildren: this.keyChildren,
          keyId: this.keyId,
          keyLabel: this.keyLabel,
          keyLabelCallback: this.keyLabelCallback,
          labelTag: this.labelTag,
          listItemTag: this.listItemTag,
          separator: this.separator,
          separatorHtml: this.separatorHtml,
          tag: this.tag
        }, this.$slots);
      })
    ]) : c(this.tagLocal, null, this.plainText);
  }
}, vA = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
</svg>`, i6 = {
  name: "AMenuBreadcrumbsItem",
  props: {
    label: {
      type: [String, Number],
      required: !0
    },
    isBreadcrumbsLinkTruncated: {
      type: Boolean,
      required: !0
    },
    panelParentId: {
      type: [String, Number],
      required: !0
    }
  },
  setup(e) {
    const t = p(e, "panelParentId"), n = fe("togglePanel"), r = () => {
      n({ parentId: t.value });
    };
    return {
      onClick: r,
      onKeydown: (s) => {
        (s.keyCode === X.enter || s.keyCode === X.space) && (r(), s.stopPropagation(), s.preventDefault());
      }
    };
  },
  render() {
    return c("a", {
      class: "a_menu__breadcrumbs__item a_menu__link",
      role: "button",
      tabindex: 0,
      ariaLabel: "Untermenü schließen",
      onClick: this.onClick,
      onKeydown: this.onKeydown
    }, [
      c(lt, {
        icon: vA,
        class: "a_mr_2"
      }),
      c("span", {
        class: {
          a_menu__link__text_truncated: this.isBreadcrumbsLinkTruncated
        }
      }, [
        c("span", {
          ariaHidden: !0
        }, this.label),
        c("span", {
          class: "a_position_absolute_all",
          ariaHidden: !0,
          title: this.label
        })
      ])
    ]);
  }
}, s6 = {
  name: "AMenuBreadcrumbs",
  props: {
    isBreadcrumbsAll: {
      type: Boolean,
      required: !0
    },
    isBreadcrumbsLinkTruncated: {
      type: Boolean,
      required: !0
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    dataKeyById: {
      type: Object,
      required: !0
    },
    panelParentsOpen: {
      type: Array,
      required: !0
    }
  },
  setup(e) {
    const t = p(e, "dataKeyById"), n = p(e, "panelParentsOpen"), r = p(e, "isBreadcrumbsAll"), a = (o) => ({
      label: de(t.value, `${o}.${vt}`),
      panelParentId: o
    });
    return {
      breadcrumbsItems: d(() => {
        if (!n.value.length)
          return [];
        const o = [];
        return r.value ? Y(n.value, (u) => {
          o.push(a(u));
        }) : o.push(a(n.value[n.value.length - 1])), o;
      })
    };
  },
  render() {
    return this.isSearchActive ? null : c("div", {
      class: "a_menu__breadcrumbs"
    }, [
      this.breadcrumbsItems.map((e) => c(i6, {
        label: e.label,
        panelParentId: e.panelParentId,
        isBreadcrumbsLinkTruncated: this.isBreadcrumbsLinkTruncated
      }))
    ]);
  }
}, du = R(void 0);
function yA() {
  const e = () => {
    document.body.classList.add("a_menu__wrapper_open"), document.body.classList.remove("a_menu__wrapper_close"), du.value = !0;
  }, t = () => {
    document.body.classList.add("a_menu__wrapper_close"), document.body.classList.remove("a_menu__wrapper_open"), du.value = !1;
  };
  return {
    isMenuOpen: du,
    toggleMenu: ({ isOpen: r } = {}) => {
      qe(r) ? du.value ? t() : e() : r ? e() : t();
    }
  };
}
const l6 = {
  name: "AMenuButtonToggle",
  props: {
    class: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    buttonToggleVisible: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["always", "mobile", "desktop"].indexOf(e) !== -1
    }
  },
  setup() {
    const {
      isMenuOpen: e,
      toggleMenu: t
    } = yA();
    return {
      btnToggleTitle: d(() => e.value ? "_CLOSE_MENU_" : "_OPEN_MENU_"),
      isMenuOpen: e,
      toggleMenu: t
    };
  },
  render() {
    return c("button", {
      class: ["a_menu__btn_toggle", this.class, {
        a_menu__btn_toggle_open: this.isMenuOpen,
        a_menu__btn_toggle_mobile_only: this.buttonToggleVisible === "mobile",
        a_menu__btn_toggle_desktop_only: this.buttonToggleVisible === "desktop",
        a_menu__btn_toggle_always: this.buttonToggleVisible === "always"
      }],
      type: "button",
      onClick: this.toggleMenu
    }, [
      c("span", {
        class: "a_menu__btn_toggle__bar"
      }),
      c("span", {
        class: "a_menu__btn_toggle__bar"
      }),
      c("span", {
        class: "a_menu__btn_toggle__bar"
      }),
      c(be, {
        tag: "span",
        class: "a_position_absolute_all",
        title: this.btnToggleTitle,
        ariaHidden: !0
      }),
      c(be, {
        tag: "span",
        class: "a_sr_only",
        text: this.btnToggleTitle
      })
    ]);
  }
};
function o6(e) {
  const t = p(e, "isPanelOpen"), n = p(e, "isLinkInSearchPanel"), r = fe("isMenuOpen");
  return {
    tabindex: d(() => n.value || t.value && r.value ? 0 : -1)
  };
}
function u6(e, {
  labelWithoutFilter: t = d(() => "")
}) {
  const n = p(e, "item"), r = d(() => !!n.value.titleHtml), a = d(() => {
    if (!r.value)
      return n.value.title || t.value;
  });
  return {
    isTitleHtml: r,
    title: a
  };
}
const Zn = "_a_parent", kp = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708"/>
</svg>`;
function d6(e = "") {
  const n = `${`#a_menu_panel_${e}`} a`;
  setTimeout(() => {
    const r = document.querySelector(n);
    r && r.focus();
  });
}
const gA = {
  name: "AMenuPanelLink",
  props: {
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    isPanelOpen: {
      type: Boolean,
      required: !1
    },
    item: {
      type: Object,
      required: !0
    },
    keyIcon: {
      type: String,
      required: !1,
      default: void 0
    },
    isLinkInSearchPanel: {
      type: Boolean,
      required: !1
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    },
    idsSearchVisible: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = p(e, "keyIcon"), n = p(e, "isLinkInSearchPanel"), r = p(e, "modelSearch"), a = p(e, "item"), s = p(e, "idsSearchVisible"), o = p(e, "dataProParentChildren"), u = fe("togglePanel"), f = fe("isLinkTruncated"), _ = fe("keySlot"), m = d(() => {
      if (_.value)
        return de(a.value, _.value);
    }), b = d(() => !!a.value.disabled), v = d(() => n.value ? !!s.value.rest[a.value[ze]] : !0), {
      filterSearchHighlight: g
    } = tr(), {
      tabindex: S
    } = o6(e), A = d(() => a.value[vt]), w = d(() => {
      const $ = A.value;
      return n.value && v.value ? g($, { searchModel: r.value }) : $;
    }), T = d(() => a.value[ze]), I = d(() => {
      if (!n.value)
        return de(a.value, t.value);
    }), C = d(() => a.value.to ? 0 : o.value[T.value] && o.value[T.value].length), E = d(() => b.value ? "#" : a.value.to), P = () => {
      u({ parentId: T.value, isLinkInSearchPanel: n.value }), d6(T.value);
    }, M = ($) => {
      ($.keyCode === X.enter || $.keyCode === X.space) && (P(), $.stopPropagation(), $.preventDefault());
    }, k = fe("clickMenuLink"), F = () => {
      n.value && u({ parentId: a.value[Zn], isLinkInSearchPanel: n.value }), k();
    }, {
      isTitleHtml: D,
      title: W
    } = u6(e, {
      labelWithoutFilter: A
    });
    return {
      clickLink: F,
      countChildren: C,
      currentSlot: m,
      icon: I,
      isLinkDisabled: b,
      isLinkTruncated: f,
      isLinkVisible: v,
      isTitleHtml: D,
      label: w,
      labelWithoutFilter: A,
      onKeydown: M,
      openSubMenu: P,
      tabindex: S,
      title: W,
      toLocal: E
    };
  },
  render() {
    if (!this.isLinkVisible)
      return null;
    const e = [
      this.icon && c(lt, {
        class: ["a_menu__link__icon", this.item.iconClass],
        icon: this.icon
      }),
      c("span", {
        class: "a_menu__link__text"
      }, [
        this.title && c("span", {
          class: "a_position_absolute_all",
          title: this.title,
          ariaHidden: !0
        }),
        Ft(c("span"), [
          [sn, this.label]
        ])
      ])
    ];
    return c("dd", {
      class: "a_menu__listitem"
    }, [
      this.currentSlot && this.$slots[this.currentSlot] ? this.$slots[this.currentSlot]({
        item: this.item,
        isPanelOpen: this.isPanelOpen,
        clickLink: this.clickLink,
        openSubMenu: this.openSubMenu,
        onKeydown: this.onKeydown,
        countChildren: this.countChildren,
        label: this.label,
        labelWithoutFilter: this.labelWithoutFilter,
        tabindex: this.tabindex
      }) : this.item.to ? c(wg, {
        tag: "RouterLink",
        placement: "right",
        minWidth: this.item.titleHtmlMinWidth,
        width: this.item.titleHtmlWidth,
        maxWidth: this.item.titleHtmlMaxWidth,
        isHide: !this.isTitleHtml,
        class: ["a_menu__link a_menu__link__text_truncated", {
          a_menu__link_disabled: this.isLinkDisabled
        }],
        to: this.toLocal,
        tabindex: this.tabindex,
        onClick: this.clickLink
      }, {
        default: () => e,
        title: () => Ft(c("div"), [
          [sn, this.item.titleHtml]
        ])
      }) : c(be, {
        tag: "a",
        class: "a_menu__link a_menu__link_btn a_menu__link__text_truncated",
        ariaLabel: "_OPEN_SUBMENU_",
        role: "button",
        tabindex: this.tabindex,
        onClick: this.openSubMenu,
        onKeydown: this.onKeydown
      }, () => [
        c("span", {
          class: "a_menu__link__counter"
        }, [
          c("span", {
            ariaHidden: !0
            // TODO: ariaLabel
          }, this.countChildren),
          c(lt, {
            class: "a_menu__link__counter__icon",
            icon: kp
          })
        ]),
        ...e
      ])
    ]);
  }
}, Pv = {
  name: "AMenuPanelGroup",
  props: {
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    groupItems: {
      type: Array,
      required: !0
    },
    groupLabel: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    isPanelOpen: {
      type: Boolean,
      required: !1
    },
    keyIcon: {
      type: String,
      required: !0
    }
  },
  render() {
    return [
      c("dt", {}, [
        this.groupLabel && c("div", {
          class: "a_menu__list_header"
        }, this.groupLabel)
      ]),
      this.groupItems.map((e, t) => c(gA, {
        key: t,
        item: e,
        dataProParentChildren: this.dataProParentChildren,
        isPanelOpen: this.isPanelOpen,
        keyIcon: this.keyIcon
      }, this.$slots))
    ];
  }
}, Rv = {
  name: "AMenuPanel",
  props: {
    attributesBlockerClick: {
      type: Object,
      required: !0
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    isFirst: {
      type: Boolean,
      required: !1
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    keyGroup: {
      type: String,
      required: !0
    },
    keyIcon: {
      type: String,
      required: !0
    },
    panelItems: {
      type: Array,
      required: !0
    },
    panelParentsOpen: {
      type: Array,
      required: !0
    },
    parentId: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = p(e, "panelItems"), n = p(e, "keyGroup"), r = p(e, "isFirst"), a = p(e, "panelParentsOpen"), s = p(e, "parentId"), o = p(e, "isSearchActive"), u = d(() => `a_menu_panel_${s.value || ""}`), f = d(() => o.value ? !1 : r.value ? a.value.length === 0 : a.value.length ? a.value.indexOf(s.value) === a.value.length - 1 : !1), _ = d(() => {
      const v = [], g = {};
      return Y(t.value, (S) => {
        const A = de(S, n.value);
        ae(A) ? v.push(S) : (g[A] = g[A] || [], g[A].push(S));
      }), {
        withoutGroup: v,
        withGroup: g
      };
    }), m = d(() => _.value.withoutGroup.length > 0);
    return {
      isChildPanelOpen: d(() => {
        if (r.value)
          return a.value.length > 0;
        const v = a.value.indexOf(s.value);
        return v !== -1 && v !== a.value.length - 1;
      }),
      isItemsWithoutGroup: m,
      isPanelOpen: f,
      itemsGroup: _,
      panelId: u
    };
  },
  render() {
    return c("div", {
      id: this.panelId,
      class: ["a_menu__panel", {
        a_menu__panel_first: !this.isSearchActive && this.isFirst,
        a_menu__panel_opened: !this.isSearchActive && this.isPanelOpen,
        a_menu__panel_parent: !this.isSearchActive && this.isChildPanelOpen
      }]
    }, [
      c("div", {
        class: "a_menu__blocker",
        ariaHidden: !0,
        ...this.attributesBlockerClick
      }),
      c("dl", {
        class: "a_menu__listview"
      }, [
        this.isItemsWithoutGroup && c(Pv, {
          dataProParentChildren: this.dataProParentChildren,
          groupItems: this.itemsGroup.withoutGroup,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon
        }, this.$slots),
        Object.keys(this.itemsGroup.withGroup).map((e) => c(Pv, {
          key: e,
          dataProParentChildren: this.dataProParentChildren,
          groupItems: this.itemsGroup.withGroup[e],
          groupLabel: e,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon
        }, this.$slots))
      ])
    ]);
  }
}, c6 = {
  name: "AMenuSearchGroup",
  props: {
    dataKeyById: {
      type: Object,
      required: !0
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    groupIndex: {
      type: Number,
      required: !0
    },
    idsSearchVisible: {
      type: Object,
      required: !0
    },
    items: {
      type: Array,
      required: !0
    },
    isSearchBreadcrumbsAll: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = p(e, "groupIndex"), n = p(e, "idsSearchVisible"), r = p(e, "items"), a = p(e, "dataKeyById"), s = p(e, "isSearchBreadcrumbsAll"), o = d(() => !!n.value.main[t.value]), u = ({ labels: m = [], item: b }) => {
      if (b[Zn]) {
        const v = a.value[b[Zn]], g = de(v, vt);
        return ae(g) || m.push(g), u({ labels: m, item: v });
      }
      return m;
    }, f = d(() => {
      let m = [];
      const b = r.value[0] || {};
      if (s.value)
        m = u({ labels: m, item: b });
      else {
        const v = de(a.value, `${b[Zn]}.${vt}`);
        ae(v) || m.push(v);
      }
      return m;
    });
    return {
      hasLabelsGroup: d(() => f.value.length > 0),
      isGroupVisible: o,
      labelsGroup: f
    };
  },
  render() {
    return this.isGroupVisible ? [
      this.hasLabelsGroup ? this.labelsGroup.map((e) => c("dt", null, [
        Ft(c("div", {
          class: "a_menu__list_header a_menu__list_header_search"
        }), [
          [sn, e]
        ])
      ])) : c("dt"),
      this.items.map((e) => c(gA, {
        item: e,
        dataProParentChildren: this.dataProParentChildren,
        isLinkInSearchPanel: !0,
        modelSearch: this.modelSearch,
        idsSearchVisible: this.idsSearchVisible
      }, this.$slots))
    ] : null;
  }
}, f6 = {
  name: "AMenuSearchPanel",
  props: {
    dataKeyById: {
      type: Object,
      required: !0
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    dataProParentList: {
      type: Array,
      required: !0
    },
    idsSearchVisible: {
      type: Object,
      required: !0
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    isSearchBreadcrumbsAll: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = p(e, "idsSearchVisible"), n = p(e, "isSearchActive");
    return {
      isNoneFound: d(() => n.value ? Mn(t.value.rest) : !1)
    };
  },
  render() {
    return this.isSearchActive ? c("div", {
      class: "a_menu__panel a_menu__panel_opened a_menu__panel_search"
    }, [
      this.isNoneFound ? c("div", {
        class: "a_panel__none_found"
      }, "Keine Ergebnisse gefunden.") : c("dl", null, [
        this.dataProParentList.map((e, t) => c(c6, {
          items: e,
          key: t,
          groupIndex: t,
          dataKeyById: this.dataKeyById,
          dataProParentChildren: this.dataProParentChildren,
          idsSearchVisible: this.idsSearchVisible,
          isSearchBreadcrumbsAll: this.isSearchBreadcrumbsAll,
          modelSearch: this.modelSearch
        }, this.$slots))
      ])
    ]) : null;
  }
};
function h6(e, {
  closeAllPanels: t = () => {
  }
}) {
  const n = p(e, "isBlockerClickable"), r = () => {
    t();
  };
  return {
    attributesBlockerClick: d(() => {
      const s = {};
      return n.value && (s.onClick = r, s.class = "a_menu__blocker a_menu_clickable"), s;
    })
  };
}
const SA = "_a_children";
function p6(e) {
  const t = p(e, "data"), n = p(e, "keyId"), r = p(e, "keyChildren"), a = p(e, "keyParent"), s = p(e, "keyLabel"), o = p(e, "keyLabelCallback"), u = ({ dataClone: b, dataFlat: v = [], parentId: g }) => (Y(b, (S) => {
    if (S[ze] = de(S, n.value), S[Zn] = g || de(S, a.value), o.value ? S[vt] = o.value({ item: S }) : S[vt] = de(S, s.value), r.value) {
      const A = de(S, r.value);
      A && A.length && (u({
        dataClone: A,
        parentId: S[ze],
        dataFlat: v
      }), S[SA] = A);
    }
    v.push(S);
  }), v), f = d(() => {
    const b = Se(t.value);
    let v = [];
    return v = u({ dataClone: b, dataFlat: v }), v;
  }), _ = d(() => {
    const b = [], v = {};
    return Y(f.value, (g) => {
      const S = g[Zn];
      ae(S) ? b.push(g) : (v[S] = v[S] || [], v[S].push(g));
    }), {
      main: b,
      children: v
    };
  });
  return {
    dataKeyById: d(() => ui(f.value, ze)),
    dataProParent: _
  };
}
function _6(e, {
  dataProParent: t = d(() => ({
    main: [],
    children: {}
  })),
  dataKeyById: n = d(() => ({})),
  resetSearch: r = () => {
  },
  isMenuMobile: a = R(!1),
  toggleMenu: s = () => {
  }
}) {
  const o = p(e, "isBodyFocusAfterClick"), f = Yv().appContext.config.globalProperties.$router, _ = R([]), m = R(!1), b = d(() => _.value.length > 0), v = ({ parentId: P, panelParentsOpenLocal: M }) => {
    if (P) {
      M.unshift(P);
      const k = n.value[P][Zn];
      return v({ parentId: k, panelParentsOpenLocal: M });
    }
    return M;
  }, g = ({ parentIds: P, parentId: M, isLinkInSearchPanel: k }) => {
    if (P)
      _.value = P;
    else if (k) {
      const F = [];
      _.value = v({ parentId: M, panelParentsOpenLocal: F });
    } else {
      const F = _.value.indexOf(M);
      F === -1 ? _.value.push(M) : _.value.splice(F, _.value.length);
    }
    r();
  }, S = () => {
    _.value = [], r();
  }, A = ({ route: P = {}, panelParentsOpenLocal: M = [] }) => {
    const k = P[Zn];
    return k && (M.unshift(k), A({ route: n.value[k], panelParentsOpenLocal: M })), M;
  }, w = ({ routes: P = [], currentFullPath: M = "/" }) => {
    let k = !1;
    return Y(P, (F) => {
      if (F.to) {
        const { fullPath: D } = f.resolve(F.to);
        if (D === M) {
          const W = [];
          return _.value = A({ route: F, panelParentsOpenLocal: W }), k = !0, !1;
        }
      }
    }), k;
  }, T = () => {
    const P = f.currentRoute.value.fullPath;
    let M = !1;
    M = w({ routes: t.value.main, currentFullPath: P }), !M && Y(t.value.children, (k) => {
      if (M = w({ routes: k, currentFullPath: P }), M)
        return !1;
    });
  }, I = () => {
    o.value && (document.body.hasAttribute("tabindex") ? document.body.focus() : (document.body.setAttribute("tabindex", "-1"), document.body.focus(), document.body.removeAttribute("tabindex")));
  }, C = () => {
    m.value = !0, r(), I(), a.value && s({ isOpen: !1 });
  }, E = () => {
    r(), _.value = [];
  };
  return st(f.currentRoute, () => {
    m.value ? m.value = !1 : T();
  }, {
    immediate: !0
  }), {
    clickMenuLink: C,
    closeAllPanels: S,
    isSubMenuOpen: b,
    panelParentsOpen: _,
    setDefaultMenu: E,
    togglePanel: g
  };
}
function m6(e, {
  toggleMenu: t
}) {
  const n = p(e, "breakpointMobile"), r = p(e, "isOpenDefault");
  let a = window.innerWidth;
  const s = R(a <= n.value), o = () => {
    a > n.value ? window.innerWidth <= n.value && (t({ isOpen: !1 }), s.value = !0) : window.innerWidth > n.value && (t({ isOpen: !0 }), s.value = !1), a = window.innerWidth;
  }, u = () => {
    window.addEventListener("resize", o);
  }, f = () => {
    window.removeEventListener("resize", o);
  }, _ = () => {
    r.value ? a > n.value && t({ isOpen: !0 }) : t({ isOpen: !1 });
  };
  return u(), Bt(() => {
    f();
  }), {
    initMenuOpenOrClose: _,
    isMenuMobile: s
  };
}
function b6(e, {
  dataProParent: t = d(() => ({
    main: [],
    children: {}
  }))
}) {
  const n = R(""), r = (f) => {
    n.value = f;
  }, a = d(() => !!n.value), s = () => {
    a.value && (n.value = "");
  }, o = d(() => {
    const f = [];
    return t.value.main.length && f.push(t.value.main), Y(t.value.children, (_) => {
      f.push(_);
    }), f;
  });
  return {
    idsSearchVisible: d(() => {
      const f = {
        main: {},
        rest: {}
      };
      if (a.value) {
        const _ = new RegExp(Gl(n.value), "gi");
        Y(o.value, (m, b) => {
          let v = !1;
          Y(m, (g) => {
            if (`${g[vt]}`.search(_) !== -1) {
              const A = g[ze];
              f.rest[A] = !0, v = !0;
            }
          }), v && (f.main[b] = !0);
        });
      }
      return f;
    }),
    isSearchActive: a,
    dataProParentList: o,
    modelSearch: n,
    resetSearch: s,
    updateModelSearch: r
  };
}
function v6() {
  return {
    removeBodyClasses: () => {
      document.body.classList.remove("a_menu__wrapper_close"), document.body.classList.remove("a_menu__wrapper_open");
    }
  };
}
function y6(e, {
  isMenuOpen: t = R(!1),
  toggleMenu: n = () => {
  }
}) {
  const r = p(e, "isBlockerClickable");
  return {
    attributesMenuClick: d(() => {
      const s = {};
      return r.value && !t.value && (s.onClick = () => n({ isOpen: !0 }), s.class = "a_menu a_menu_clickable"), s;
    })
  };
}
const MU = {
  name: "AMenu",
  provide() {
    return {
      keySlot: d(() => this.keySlot)
    };
  },
  props: {
    breakpointMobile: {
      type: Number,
      required: !1,
      default: 991
    },
    buttonToggleClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    buttonToggleVisible: {
      type: String,
      required: !1,
      default: "always",
      validator: (e) => ["always", "mobile", "desktop"].indexOf(e) !== -1
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    isBackdrop: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBlockerClickable: {
      type: Boolean,
      required: !1
    },
    isBreadcrumbsAll: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBreadcrumbsLinkTruncated: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isLinkTruncated: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isOpenDefault: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSearch: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSearchBreadcrumbsAll: {
      type: Boolean,
      required: !1,
      default: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: String,
      required: !1,
      default: "group"
    },
    keyIcon: {
      type: String,
      required: !1,
      default: "icon"
    },
    keyId: {
      type: String,
      required: !1,
      default: "id"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyParent: {
      type: String,
      required: !1,
      default: "parent"
    },
    keySlot: {
      type: String,
      required: !1,
      default: void 0
    },
    isBodyFocusAfterClick: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  setup(e) {
    const t = p(e, "isLinkTruncated"), {
      removeBodyClasses: n
    } = v6(), {
      dataKeyById: r,
      dataProParent: a
    } = p6(e), s = p(e, "buttonToggleVisible"), o = d(() => !!s.value), {
      idsSearchVisible: u,
      isSearchActive: f,
      dataProParentList: _,
      modelSearch: m,
      resetSearch: b,
      updateModelSearch: v
    } = b6(e, {
      dataProParent: a
    }), {
      isMenuOpen: g,
      toggleMenu: S
    } = yA(), {
      attributesMenuClick: A
    } = y6(e, {
      isMenuOpen: g,
      toggleMenu: S
    }), {
      initMenuOpenOrClose: w,
      isMenuMobile: T
    } = m6(e, {
      toggleMenu: S
    }), {
      clickMenuLink: I,
      closeAllPanels: C,
      isSubMenuOpen: E,
      panelParentsOpen: P,
      setDefaultMenu: M,
      togglePanel: k
    } = _6(e, {
      dataProParent: a,
      dataKeyById: r,
      resetSearch: b,
      isMenuMobile: T,
      toggleMenu: S
    }), {
      attributesBlockerClick: F
    } = h6(e, {
      closeAllPanels: C
    });
    return st(g, (D, W) => {
      !D && W && b();
    }), Ze("isLinkTruncated", d(() => t.value)), Ze("isMenuOpen", d(() => g.value)), Ze("clickMenuLink", I), Ze("togglePanel", k), w(), Bt(() => {
      n();
    }), {
      attributesBlockerClick: F,
      attributesMenuClick: A,
      dataKeyById: r,
      dataProParent: a,
      dataProParentList: _,
      idsSearchVisible: u,
      isButtonToggleVisible: o,
      isMenuMobile: T,
      isMenuOpen: g,
      isSearchActive: f,
      isSubMenuOpen: E,
      modelSearch: m,
      panelParentsOpen: P,
      removeBodyClasses: n,
      setDefaultMenu: M,
      toggleMenu: S,
      togglePanel: k,
      updateModelSearch: v
    };
  },
  render() {
    return [
      c("nav", {
        class: [
          "a_menu",
          {
            a_menu_sub_open: this.isSubMenuOpen
          }
        ],
        ...this.attributesMenuClick
      }, [
        c("div", {
          class: "a_menu__blocker",
          ariaHidden: !0
        }),
        c("div", {
          class: "a_menu__navbar_top"
        }, [
          this.$slots.aMenuHeader && this.$slots.aMenuHeader(),
          this.isSearch && c(In, {
            id: "a_menu_search",
            class: "a_menu__navbar_top__search",
            modelValue: this.modelSearch,
            label: "_SEARCH_MENU_",
            "onUpdate:modelValue": this.updateModelSearch
          }),
          c(s6, {
            dataKeyById: this.dataKeyById,
            isBreadcrumbsAll: this.isBreadcrumbsAll,
            panelParentsOpen: this.panelParentsOpen,
            isSearchActive: this.isSearchActive,
            isBreadcrumbsLinkTruncated: this.isBreadcrumbsLinkTruncated
          })
        ]),
        c("div", {
          class: "a_menu__panels"
        }, [
          c(Rv, {
            attributesBlockerClick: this.attributesBlockerClick,
            dataProParentChildren: this.dataProParent.children,
            isFirst: !0,
            isSearchActive: this.isSearchActive,
            keyGroup: this.keyGroup,
            keyIcon: this.keyIcon,
            panelItems: this.dataProParent.main,
            panelParentsOpen: this.panelParentsOpen
          }, this.$slots),
          Object.keys(this.dataProParent.children).map((e) => c(Rv, {
            key: e,
            attributesBlockerClick: {},
            dataProParentChildren: this.dataProParent.children,
            isSearchActive: this.isSearchActive,
            keyGroup: this.keyGroup,
            keyIcon: this.keyIcon,
            panelItems: this.dataProParent.children[e],
            panelParentsOpen: this.panelParentsOpen,
            parentId: e
          }, this.$slots)),
          c(f6, {
            dataKeyById: this.dataKeyById,
            dataProParentChildren: this.dataProParent.children,
            dataProParentList: this.dataProParentList,
            idsSearchVisible: this.idsSearchVisible,
            isSearchActive: this.isSearchActive,
            isSearchBreadcrumbsAll: this.isSearchBreadcrumbsAll,
            modelSearch: this.modelSearch
          }, this.$slots)
        ]),
        this.isBackdrop && c(fa, {
          to: "body"
        }, [
          c("div", {
            class: "a_menu__backdrop a_backdrop a_backdrop_fade"
          })
        ])
      ]),
      this.isButtonToggleVisible && c(l6, {
        buttonToggleVisible: this.buttonToggleVisible,
        class: this.buttonToggleClass
      })
    ];
  }
};
function AA({
  menuId: e = "a_menu_2_",
  panelId: t = ""
}) {
  const r = `${`#${Hl({ menuId: e, id: t, suffix: "panel" })}`} .a_menu_2__listview a`;
  setTimeout(() => {
    const a = document.querySelector(r);
    a && a.focus();
  });
}
function Hl({
  menuId: e = "a_menu_2_",
  id: t = "",
  suffix: n = ""
}) {
  return `${e}_${t}_${n}`;
}
const bl = R({});
function wA(e) {
  const t = p(e, "menuId"), n = p(e, "canChangeBodyClass"), r = () => {
    n.value && (document.body.classList.add("a_menu_2__wrapper_open"), document.body.classList.remove("a_menu_2__wrapper_close")), bl.value[t.value] = !0;
  }, a = () => {
    n.value && (document.body.classList.add("a_menu_2__wrapper_close"), document.body.classList.remove("a_menu_2__wrapper_open")), bl.value[t.value] = !1;
  }, s = () => {
    n.value && (document.body.classList.remove("a_menu_2__wrapper_close"), document.body.classList.remove("a_menu_2__wrapper_open"));
  }, o = ({ isOpen: m } = {}) => {
    qe(m) ? bl.value[t.value] ? a() : r() : m ? r() : a();
  }, u = d(() => bl.value[t.value]), f = () => {
    o(), u.value && AA({
      menuId: t.value,
      panelId: ""
    });
  };
  return {
    btnToggleTitle: d(() => bl.value[t.value] ? "_A_MENU_2_BTN_CLOSE_" : "_A_MENU_2_BTN_OPEN_"),
    closeMenu: a,
    isMenuOpen: u,
    removeBodyClasses: s,
    toggleMenu: o,
    toggleMenuObButton: f
  };
}
const g6 = {
  name: "AMenuButtonToggle",
  props: {
    buttonToggleProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canChangeBodyClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    class: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    insideMenu: {
      type: Boolean,
      required: !1
    },
    menuId: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      btnToggleTitle: t,
      isMenuOpen: n,
      toggleMenuObButton: r
    } = wA(e);
    return {
      btnToggleTitle: t,
      isMenuOpen: n,
      toggleMenuObButton: r
    };
  },
  render() {
    return c(ct, {
      class: ["a_menu_2__btn_toggle", this.class, {
        a_menu_2__btn_toggle_open: this.isMenuOpen,
        a_menu_2__btn_toggle_close: !this.isMenuOpen,
        a_menu_2__btn_toggle_inside_menu: this.insideMenu,
        a_menu_2__btn_toggle_outside_menu: !this.insideMenu
      }],
      type: "button",
      title: this.btnToggleTitle,
      textScreenReader: this.btnToggleTitle,
      onClick: this.toggleMenuObButton,
      ...this.buttonToggleProps
    }, () => [
      c("span", {
        ariaHidden: !0,
        class: "a_menu_2__btn_toggle__bar a_menu_2__btn_toggle__bar_1 aloha_element__ml_0"
      }),
      c("span", {
        ariaHidden: !0,
        class: "a_menu_2__btn_toggle__bar a_menu_2__btn_toggle__bar_2 aloha_element__ml_0"
      }),
      c("span", {
        ariaHidden: !0,
        class: "a_menu_2__btn_toggle__bar a_menu_2__btn_toggle__bar_3 aloha_element__ml_0"
      })
    ]);
  }
};
function S6() {
  const e = fe("togglePanel"), t = ({ parentId: r }) => {
    e({ parentId: r });
  };
  return {
    goBack: t,
    goBackKeydown: ({ $event: r, parentId: a }) => {
      (r.keyCode === X.enter || r.keyCode === X.space) && (t({ parentId: a }), r.stopPropagation(), r.preventDefault());
    }
  };
}
function A6(e) {
  const t = p(e, "dataKeyById"), n = p(e, "panelParentsOpen");
  return {
    breadcrumbsItems: d(() => {
      if (!n.value.length)
        return [];
      const a = [];
      let s = "_A_MENU_2_MAIN_MENU_";
      return Y(n.value, (o, u) => {
        a.push({
          isFirst: u === 0,
          label: s,
          panelParentId: o
        }), s = de(t.value, `${o}.${vt}`);
      }), a.push({
        panelParentId: void 0,
        label: s
      }), a;
    })
  };
}
function w6({
  breadcrumbsItems: e = d(() => []),
  breadcrumbsTruncatedOffset: t = R(0)
}) {
  const n = R([]), r = R([]), a = R(0), s = R(void 0), o = R(!1), u = R(0), f = R([]), _ = () => {
    if (s.value < 0) {
      o.value = !0;
      return;
    }
    r.value.unshift(e.value[s.value]), s.value--;
  }, m = () => {
    n.value = e.value.slice(0, s.value + 1), o.value = !0;
  }, b = () => {
    if (r.value.length <= 1 || u.value + t.value <= a.value) {
      m();
      return;
    }
    r.value.splice(0, 1), s.value++, u.value -= Is(f.value), f.value.pop(), b();
  };
  return {
    breadcrumbsItemsDropdown: n,
    breadcrumbsItemsTruncated: r,
    isRenderedAll: o,
    renderItem: (S) => {
      const A = S.offsetWidth;
      u.value += A, f.value.push(A), u.value >= a.value ? b() : _();
    },
    renderParent: (S) => {
      s.value = e.value.length - 1, _(), a.value = S.offsetWidth;
    }
  };
}
const uo = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots" viewBox="0 0 16 16">
  <path d="M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3"/>
</svg>`, T6 = {
  name: "AMenuBreadcrumbs",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !0
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    isPanelMain: {
      type: Boolean,
      required: !1
    },
    dataKeyById: {
      type: Object,
      required: !0
    },
    panelParentsOpen: {
      type: Array,
      required: !0
    }
  },
  setup(e) {
    const t = fe("breadcrumbsTruncatedOffset"), {
      breadcrumbsItems: n
    } = A6(e), {
      goBack: r,
      goBackKeydown: a
    } = S6(), {
      breadcrumbsItemsDropdown: s,
      breadcrumbsItemsTruncated: o,
      isRenderedAll: u,
      renderItem: f,
      renderParent: _
    } = w6({
      breadcrumbsItems: n,
      breadcrumbsTruncatedOffset: t
    });
    return {
      breadcrumbsItems: n,
      breadcrumbsItemsDropdown: s,
      breadcrumbsItemsTruncated: o,
      goBack: r,
      goBackKeydown: a,
      isRenderedAll: u,
      renderItem: f,
      renderParent: _
    };
  },
  render() {
    if (this.isSearchActive || this.isPanelMain)
      return null;
    if (this.isBreadcrumbsTruncated)
      return c(be, {
        ariaLabel: "_A_MENU_2_BREADCRUMB_",
        class: "a_menu_2__breadcrumb a_menu_2__breadcrumb_secondary",
        tag: "nav"
      }, () => [
        Ft(c("ul", {
          class: [
            "a_menu_2__breadcrumb__ul a_menu_2__breadcrumb__ul_truncated"
          ]
        }, [
          this.breadcrumbsItemsDropdown.length > 0 ? c("li", {
            class: "a_menu_2__breadcrumbs__item"
          }, [
            c(Ma, {
              buttonClass: "a_btn a_btn_secondary a_btn_small a_menu_2__breadcrumb__ul_truncated__btn",
              buttonIconLeft: uo,
              buttonTextScreenReader: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
              buttonTitle: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
              dropdownClass: "a_menu_2__breadcrumb__ul_truncated__dropdown",
              hasCaret: !1,
              inBody: !0,
              ...this.breadcrumbsTruncatedDropdownProps
            }, {
              dropdown: () => [
                this.breadcrumbsItemsDropdown.map((e) => {
                  const t = e.panelParentId ? {
                    tag: "a",
                    class: [
                      "a_menu_2__breadcrumbs__link",
                      this.breadcrumbsLinkClass
                    ],
                    role: "button",
                    tabindex: 0,
                    onClick: () => this.goBack({ parentId: e.panelParentId }),
                    onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
                  } : {
                    class: "a_menu_2__breadcrumbs__link",
                    tag: "strong"
                  };
                  return c("li", {
                    key: e.panelParentId,
                    class: "a_menu_2__breadcrumbs__item"
                  }, [
                    c(ct, {
                      text: e.label,
                      title: e.label,
                      ...t
                    }),
                    c("span", {
                      class: "a_menu_2__breadcrumbs__item__divider"
                    }, "/")
                  ]);
                })
              ]
            })
          ]) : "",
          this.breadcrumbsItemsTruncated.map((e) => {
            const t = e.panelParentId ? {
              tag: "a",
              class: [
                "a_menu_2__breadcrumbs__link",
                this.breadcrumbsLinkClass
              ],
              role: "button",
              tabindex: 0,
              onClick: () => this.goBack({ parentId: e.panelParentId }),
              onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
            } : {
              class: "a_menu_2__breadcrumbs__link",
              tag: "strong"
            };
            return Ft(c("li", {
              key: e.panelParentId,
              class: "a_menu_2__breadcrumbs__item"
            }, [
              !e.isFirst && c("span", {
                class: "a_menu_2__breadcrumbs__item__divider"
              }, "/"),
              c(ct, {
                text: e.label,
                title: e.label,
                ...t
              })
            ]), [
              [Dl, { mounted: this.renderItem }]
            ]);
          })
        ]), [
          [Dl, { mounted: this.renderParent }]
        ])
      ]);
    if (!this.isBreadcrumbsTruncated)
      return c(be, {
        ariaLabel: "_A_MENU_2_BREADCRUMB_",
        class: "a_menu_2__breadcrumb a_menu_2__breadcrumb_secondary",
        tag: "nav"
      }, () => [
        c("ul", {
          class: [
            "a_menu_2__breadcrumb__ul"
          ]
        }, [
          this.breadcrumbsItems.map((e) => {
            const t = e.panelParentId ? {
              tag: "a",
              class: [
                "a_menu_2__breadcrumbs__link",
                this.breadcrumbsLinkClass
              ],
              role: "button",
              tabindex: 0,
              onClick: () => this.goBack({ parentId: e.panelParentId }),
              onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
            } : {
              class: "a_menu_2__breadcrumbs__link",
              tag: "strong"
            };
            return c("li", {
              key: e.panelParentId,
              class: "a_menu_2__breadcrumbs__item"
            }, [
              !e.isFirst && c("span", {
                class: "a_menu_2__breadcrumbs__item__divider"
              }, "/"),
              c(ct, {
                text: e.label,
                title: e.label,
                ...t
              })
            ]);
          })
        ])
      ]);
  }
};
function x6(e, {
  id: t = d(() => {
  })
}) {
  const n = p(e, "isLinkInSearchPanel"), r = fe("activeRoutesIds");
  return {
    isLinkActive: d(() => n.value ? !1 : r.value.indexOf(t.value) !== -1)
  };
}
function C6(e) {
  const t = p(e, "isLinkInSearchPanel"), n = p(e, "item"), r = p(e, "keyIcon"), a = d(() => n.value[ze]), s = d(() => {
    if (!t.value)
      return de(n.value, r.value);
  }), o = d(() => {
    const u = "a_menu_2__link__icon";
    return n.value.iconClass ? `{ CLASS } ${n.value.iconClass}` : u;
  });
  return {
    icon: s,
    iconClassLocal: o,
    id: a
  };
}
function I6(e, {
  id: t = d(() => {
  })
}) {
  const n = p(e, "dataProParentChildren"), r = p(e, "item");
  return {
    countChildren: d(() => r.value.to ? 0 : n.value[t.value] && n.value[t.value].length)
  };
}
function L6(e, {
  id: t = d(() => {
  })
}) {
  const n = p(e, "isLinkInSearchPanel"), r = p(e, "item"), a = fe("clickMenuLink"), s = fe("isPanelMain"), o = fe("togglePanel"), u = () => {
    o({
      parentId: t.value,
      isLinkInSearchPanel: n.value,
      isPanelMain: s.value
    });
  };
  return {
    clickLink: ({ $event: m }) => {
      n.value && o({ parentId: r.value[Zn], isLinkInSearchPanel: n.value }), a({ ctrlKey: m.ctrlKey, isPanelMain: s.value });
    },
    onKeydown: (m) => {
      (m.keyCode === X.enter || m.keyCode === X.space) && (u(), m.stopPropagation(), m.preventDefault());
    },
    openSubMenu: u
  };
}
function E6(e, {
  id: t = d(() => {
  })
}) {
  const n = p(e, "menuId");
  return {
    linkId: d(() => Hl({
      menuId: n.value,
      id: t.value,
      suffix: "link"
    }))
  };
}
function O6(e) {
  const t = p(e, "isLinkInSearchPanel"), n = p(e, "item"), r = p(e, "modelSearch"), {
    filterSearchHighlight: a
  } = tr(), s = d(() => n.value[vt]);
  return {
    label: d(() => {
      const u = s.value;
      return t.value ? a(u, { searchModel: r.value }) : u;
    }),
    labelWithoutFilter: s
  };
}
function D6(e) {
  const t = p(e, "item"), n = d(() => !!t.value.disabled), r = d(() => n.value ? "#" : t.value.to);
  return {
    isItemLink: d(() => !!t.value.to),
    isLinkDisabled: n,
    toLocal: r
  };
}
function P6(e, {
  id: t = d(() => "")
}) {
  const n = fe("isChildPanelOpen"), r = fe("isMenuOpen"), a = fe("isPanelMain"), s = fe("panelParentsOpen"), o = d(() => a.value && s.value[0] === t.value), u = d(() => !r.value && n.value && s.value.indexOf(t.value) !== -1);
  return {
    isLinkOpen: d(() => o.value || u.value),
    isLinkOpenPanelMain: o,
    isLinkOpenPanelSecondaryMenuClose: u
  };
}
function R6(e) {
  const t = p(e, "item"), n = fe("keySlot");
  return {
    currentSlot: d(() => {
      if (n.value)
        return de(t.value, n.value);
    })
  };
}
function B6(e, {
  isLinkOpen: t = d(() => !1)
}) {
  const n = p(e, "isLinkInSearchPanel"), r = p(e, "isPanelOpen"), a = fe("isMenuOpen"), s = fe("isPanelMain", !1), o = fe("isChildPanelOpen", !1);
  return {
    tabindex: d(() => n.value ? 0 : a.value ? r.value ? 0 : -1 : s.value && r.value ? 0 : s.value || o.value ? t.value ? 0 : -1 : r.value ? 0 : -1)
  };
}
function k6(e, {
  isItemLink: t = d(() => !1),
  isLinkOpenPanelMain: n = d(() => !1),
  isLinkOpenPanelSecondaryMenuClose: r = d(() => !1),
  labelWithoutFilter: a = d(() => "")
}) {
  const s = p(e, "item"), o = d(() => !!s.value.isTitleHtml), u = d(() => n.value ? "_A_MENU_2_TO_MAIN_MENU_" : r.value ? [
    "_A_MENU_2_CLOSE_SUBMENU_",
    s.value.title || a.value
  ] : t.value ? s.value.title || a.value : [
    "_A_MENU_2_OPEN_SUBMENU_",
    s.value.title || a.value
  ]), f = d(() => ({
    minWidth: s.value.titleHtmlMinWidth,
    width: s.value.titleHtmlWidth,
    maxWidth: s.value.titleHtmlMaxWidth
  }));
  return {
    isTitleHtml: o,
    titleLocal: u,
    titleAttributes: f
  };
}
const th = {
  name: "AMenuPanelLink",
  inject: [
    "isPanelMain",
    "showCountChildren"
  ],
  props: {
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    idsSearchVisible: {
      type: Object,
      required: !1,
      default: void 0
    },
    isLinkInSearchPanel: {
      type: Boolean,
      required: !1
    },
    isPanelOpen: {
      type: Boolean,
      required: !1
    },
    item: {
      type: Object,
      required: !0
    },
    keyIcon: {
      type: String,
      required: !1,
      default: void 0
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      currentSlot: t
    } = R6(e), {
      isItemLink: n,
      isLinkDisabled: r,
      toLocal: a
    } = D6(e), {
      label: s,
      labelWithoutFilter: o
    } = O6(e), {
      icon: u,
      iconClassLocal: f,
      id: _
    } = C6(e), {
      isLinkActive: m
    } = x6(e, {
      id: _
    }), {
      linkId: b
    } = E6(e, {
      id: _
    }), {
      isLinkOpen: v,
      isLinkOpenPanelMain: g,
      isLinkOpenPanelSecondaryMenuClose: S
    } = P6(e, {
      id: _
    }), {
      tabindex: A
    } = B6(e, {
      isLinkOpen: v
    }), {
      countChildren: w
    } = I6(e, {
      id: _
    }), {
      isTitleHtml: T,
      titleLocal: I,
      titleAttributes: C
    } = k6(e, {
      isItemLink: n,
      isLinkOpenPanelMain: g,
      isLinkOpenPanelSecondaryMenuClose: S,
      labelWithoutFilter: o
    }), {
      clickLink: E,
      onKeydown: P,
      openSubMenu: M
    } = L6(e, {
      id: _
    });
    return {
      clickLink: E,
      countChildren: w,
      currentSlot: t,
      icon: u,
      iconClassLocal: f,
      isItemLink: n,
      isLinkActive: m,
      isLinkDisabled: r,
      isLinkOpen: v,
      isTitleHtml: T,
      label: s,
      labelWithoutFilter: o,
      linkId: b,
      onKeydown: P,
      openSubMenu: M,
      tabindex: A,
      titleAttributes: C,
      titleLocal: I,
      toLocal: a
    };
  },
  render() {
    return c("li", {
      class: "a_menu_2__listitem"
    }, [
      this.isLinkInSearchPanel && c("span", {
        class: "a_menu_2__breadcrumbs__item__divider",
        ariaHidden: !0
      }, "/"),
      this.currentSlot && this.$slots[this.currentSlot] ? this.$slots[this.currentSlot]({
        id: this.linkId,
        item: this.item,
        clickLink: this.clickLink,
        countChildren: this.countChildren,
        isLinkActive: this.isLinkActive,
        isLinkOpen: this.isLinkOpen,
        isPanelOpen: this.isPanelOpen,
        isPanelMain: this.isPanelMain,
        label: this.label,
        labelWithoutFilter: this.labelWithoutFilter,
        onKeydown: this.onKeydown,
        openSubMenu: this.openSubMenu,
        tabindex: this.tabindex
      }) : this.isItemLink ? c(Od, {
        id: this.linkId,
        class: ["a_menu_2__link a_menu_2__link__text_truncated", {
          a_menu_2__link_disabled: this.isLinkDisabled,
          a_menu_2__link_active: this.isLinkActive,
          a_menu_2__link_panel_main: this.isPanelMain
        }],
        html: this.label,
        iconClass: this.iconClassLocal,
        iconLeft: this.icon,
        isTitleHtml: this.isTitleHtml,
        tabindex: this.tabindex,
        textAriaHidden: !0,
        textClass: "a_menu_2__link__text aloha_element__ml_0",
        textScreenReader: this.titleLocal,
        title: this.titleLocal,
        titleAttributes: this.titleAttributes,
        titlePlacement: "right",
        to: this.toLocal,
        onClick: this.clickLink
      }) : c(ct, {
        id: this.linkId,
        class: [
          "a_menu_2__link a_menu_2__link_btn a_menu_2__link__text_truncated",
          {
            a_menu_2__link_open: this.isLinkOpen,
            a_menu_2__link_active: this.isLinkActive,
            a_menu_2__link_panel_main: this.isPanelMain
          }
        ],
        html: this.label,
        iconClass: this.iconClassLocal,
        iconLeft: this.icon,
        isTitleHtml: this.isTitleHtml,
        role: "button",
        tabindex: this.tabindex,
        tag: "a",
        textAriaHidden: !0,
        textClass: "a_menu_2__link__text aloha_element__ml_0",
        textScreenReader: this.titleLocal,
        title: this.titleLocal,
        titleAttributes: this.titleAttributes,
        titlePlacement: "right",
        onClick: this.openSubMenu,
        onKeydown: this.onKeydown
      }, () => [
        c("span", {
          class: "a_menu_2__link__counter aloha_element__ml_0"
        }, [
          this.showCountChildren && c("span", {
            ariaHidden: !0
          }, this.countChildren),
          c(lt, {
            class: "a_menu_2__link__counter__icon",
            icon: kp
          })
        ])
      ])
    ]);
  }
};
function M6(e) {
  const t = p(e, "groupItems");
  return {
    hasItems: d(() => t.value.length > 0)
  };
}
function F6(e) {
  const t = p(e, "groupIndex"), n = p(e, "groupLabel"), r = p(e, "menuId"), a = p(e, "paneIndex"), s = d(() => `${r.value}_${a.value}_${t.value}_label`);
  return {
    ariaLabelledbyObj: d(() => n.value ? {
      "aria-labelledby": s.value
    } : {}),
    labelId: s
  };
}
const Bv = {
  name: "AMenuPanelGroup",
  props: {
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    groupIndex: {
      type: [Number, String],
      required: !0
    },
    groupItems: {
      type: Array,
      required: !0
    },
    groupLabel: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    isPanelOpen: {
      type: Boolean,
      required: !1
    },
    keyIcon: {
      type: String,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    paneIndex: {
      type: [Number, String],
      required: !0
    }
  },
  setup(e) {
    const {
      hasItems: t
    } = M6(e), {
      ariaLabelledbyObj: n,
      labelId: r
    } = F6(e);
    return {
      ariaLabelledbyObj: n,
      hasItems: t,
      labelId: r
    };
  },
  render() {
    return this.hasItems ? this.groupLabel ? c("li", {
      ...this.ariaLabelledbyObj
    }, [
      c("div", {
        id: this.labelId,
        class: "a_menu_2__list_header"
      }, this.groupLabel),
      c("ul", {
        class: "a_menu_2__listview"
      }, [
        this.groupItems.map((e, t) => c(th, {
          key: t,
          item: e,
          dataProParentChildren: this.dataProParentChildren,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId
        }, this.$slots))
      ])
    ]) : this.groupItems.map((e, t) => c(th, {
      key: t,
      item: e,
      dataProParentChildren: this.dataProParentChildren,
      isPanelOpen: this.isPanelOpen,
      keyIcon: this.keyIcon,
      menuId: this.menuId
    }, this.$slots)) : null;
  }
};
function q6(e) {
  const t = p(e, "panelItems"), n = p(e, "keyGroup"), r = d(() => {
    const s = [], o = {};
    return Y(t.value, (u) => {
      const f = de(u, n.value);
      ae(f) ? s.push(u) : (o[f] = o[f] || [], o[f].push(u));
    }), {
      withoutGroup: s,
      withGroup: o
    };
  });
  return {
    isItemsWithoutGroup: d(() => r.value.withoutGroup.length > 0),
    itemsGroup: r
  };
}
function N6(e, {
  openedLevelIndex: t = d(() => 0)
}) {
  const n = p(e, "dataKeyById"), r = p(e, "isPanelMain"), a = p(e, "parentId"), s = fe("isMenuOpen"), o = d(() => !r.value && !s.value && t.value === 0), u = d(() => de(n.value, `${a.value}.${vt}`));
  return {
    isHeaderPanelVisible: o,
    parentLabel: u
  };
}
function V6(e) {
  const t = p(e, "menuId"), n = p(e, "parentId");
  return {
    panelId: d(() => Hl({
      menuId: t.value,
      id: n.value,
      suffix: "panel"
    }))
  };
}
function H6(e) {
  const t = p(e, "panelParentsOpen"), n = p(e, "parentId"), r = d(() => t.value.indexOf(n.value)), a = d(() => {
    if (r.value !== -1)
      return `z-index: ${r.value + 2};`;
  });
  return {
    openedLevelIndex: r,
    styleZIndex: a
  };
}
function $6(e, {
  openedLevelIndex: t = d(() => -1)
}) {
  const n = p(e, "isPanelMain"), r = p(e, "isSearchActive"), a = p(e, "panelParentsOpen"), s = d(() => r.value ? !1 : n.value ? a.value.length === 0 : a.value.length ? t.value === a.value.length - 1 : !1);
  return {
    isChildPanelOpen: d(() => {
      if (n.value)
        return a.value.length > 0;
      const u = t.value;
      return u !== -1 && u !== a.value.length - 1;
    }),
    isPanelOpen: s
  };
}
const kv = {
  name: "AMenuPanel",
  props: {
    attributesBlockerClick: {
      type: Object,
      required: !0
    },
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataKeyById: {
      type: Object,
      required: !0
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !1
    },
    isPanelMain: {
      type: Boolean,
      required: !1
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    keyGroup: {
      type: String,
      required: !0
    },
    keyIcon: {
      type: String,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    paneIndex: {
      type: [Number, String],
      required: !0
    },
    panelItems: {
      type: Array,
      required: !0
    },
    panelParentsOpen: {
      type: Array,
      required: !0
    },
    parentId: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = p(e, "isPanelMain"), {
      panelId: n
    } = V6(e), {
      openedLevelIndex: r,
      styleZIndex: a
    } = H6(e), {
      isItemsWithoutGroup: s,
      itemsGroup: o
    } = q6(e), {
      isChildPanelOpen: u,
      isPanelOpen: f
    } = $6(e, {
      openedLevelIndex: r
    }), {
      isHeaderPanelVisible: _,
      parentLabel: m
    } = N6(e, {
      openedLevelIndex: r
    });
    return Ze("isChildPanelOpen", u), Ze("isPanelMain", t), {
      isChildPanelOpen: u,
      isHeaderPanelVisible: _,
      isItemsWithoutGroup: s,
      isPanelOpen: f,
      itemsGroup: o,
      panelId: n,
      parentLabel: m,
      styleZIndex: a
    };
  },
  render() {
    return c("div", {
      id: this.panelId,
      class: ["a_menu_2__panel", {
        a_menu_2__panel_main: !this.isSearchActive && this.isPanelMain,
        a_menu_2__panel_secondary: !this.isPanelMain,
        a_menu_2__panel_opened: !this.isSearchActive && this.isPanelOpen,
        a_menu_2__panel_parent: !this.isSearchActive && this.isChildPanelOpen
      }],
      style: this.styleZIndex
    }, [
      !this.isPanelMain && this.isPanelOpen && c(T6, {
        breadcrumbsLinkClass: this.breadcrumbsLinkClass,
        breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
        dataKeyById: this.dataKeyById,
        isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
        isPanelMain: this.isPanelMain,
        isSearchActive: this.isSearchActive,
        panelParentsOpen: this.panelParentsOpen
      }),
      this.isHeaderPanelVisible && c("div", {
        class: "a_menu_2__panel_header"
      }, [
        c(be, {
          class: "a_menu_2__panel_header__text",
          html: this.parentLabel,
          tag: "strong"
        })
      ]),
      c("ul", {
        class: "a_menu_2__listview"
      }, [
        this.isItemsWithoutGroup && c(Bv, {
          dataProParentChildren: this.dataProParentChildren,
          groupItems: this.itemsGroup.withoutGroup,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId,
          paneIndex: this.paneIndex,
          groupIndex: "00"
        }, this.$slots),
        Object.keys(this.itemsGroup.withGroup).map((e, t) => c(Bv, {
          key: e,
          dataProParentChildren: this.dataProParentChildren,
          groupIndex: t,
          groupItems: this.itemsGroup.withGroup[e],
          groupLabel: e,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId,
          paneIndex: this.paneIndex
        }, this.$slots))
      ])
    ]);
  }
}, nh = "_a_breadcrumbs";
function W6(e) {
  const t = p(e, "item");
  return {
    breadcrumbsItems: d(() => {
      const r = [
        {
          label: "_A_MENU_2_MAIN_MENU_",
          isFirst: !0,
          parentIds: []
        }
      ], a = [];
      return Y(t.value[nh], (s) => {
        a.push(s.parentId), r.push({
          label: s.label,
          parentId: s.parentId,
          parentIds: [
            ...a
          ]
        });
      }), r;
    })
  };
}
function U6() {
  const e = fe("togglePanel"), t = ({ parentIds: r }) => {
    e({ parentIds: r });
  };
  return {
    goTo: t,
    goToKeydown: ({ $event: r, parentIds: a }) => {
      (r.keyCode === X.enter || r.keyCode === X.space) && (t({ parentIds: a }), r.stopPropagation(), r.preventDefault());
    }
  };
}
const j6 = {
  name: "AMenuSearchPanelBreadcrumbs",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    item: {
      type: Object,
      required: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      breadcrumbsItems: t
    } = W6(e), {
      goTo: n,
      goToKeydown: r
    } = U6();
    return {
      breadcrumbsItems: t,
      goTo: n,
      goToKeydown: r
    };
  },
  render() {
    return c("li", {}, [
      c("ul", {
        class: "a_menu_2__breadcrumb__ul a_menu_2__breadcrumb__ul_search"
      }, [
        c("li", {}, [
          c(Ma, {
            buttonClass: "a_btn a_btn_secondary a_btn_small a_menu_2__breadcrumb__ul_truncated__btn",
            buttonIconLeft: uo,
            buttonTextScreenReader: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
            buttonTitle: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
            dropdownClass: "a_menu_2__breadcrumb__ul_truncated__dropdown",
            hasCaret: !1,
            inBody: !0,
            ...this.breadcrumbsTruncatedDropdownProps
          }, {
            dropdown: () => [
              this.breadcrumbsItems.map((e) => c("li", {
                key: e.parentId,
                class: "a_menu_2__breadcrumbs__item"
              }, [
                c(ct, {
                  text: e.label,
                  title: e.label,
                  tag: "a",
                  class: [
                    "a_menu_2__breadcrumbs__link",
                    this.breadcrumbsLinkClass
                  ],
                  role: "button",
                  tabindex: 0,
                  onClick: () => this.goTo({ parentIds: e.parentIds }),
                  onKeydown: (t) => this.goToKeydown({ $event: t, parentIds: e.parentIds })
                }),
                c("span", {
                  class: "a_menu_2__breadcrumbs__item__divider"
                }, "/")
              ]))
            ]
          })
        ]),
        c(th, {
          item: this.item,
          dataProParentChildren: this.dataProParentChildren,
          isLinkInSearchPanel: !0,
          modelSearch: this.modelSearch,
          menuId: this.menuId
        }, this.$slots)
      ])
    ]);
  }
};
function G6(e) {
  const t = p(e, "itemsWithSearch"), n = p(e, "isSearchActive");
  return {
    isNoneFound: d(() => n.value ? t.value.length === 0 : !1)
  };
}
function Y6(e, {
  isNoneFound: t = d(() => !1)
}) {
  return {
    textLocal: d(() => t.value ? "_A_MENU_2_SEARCH_NONE_FOUND_" : "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_")
  };
}
const z6 = {
  name: "AMenuSearchPanel",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    itemsWithSearch: {
      type: Array,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      isNoneFound: t
    } = G6(e), {
      textLocal: n
    } = Y6(e, {
      isNoneFound: t
    });
    return Ze("isPanelMain", !1), Ze("isChildPanelOpen", !1), {
      isNoneFound: t,
      textLocal: n
    };
  },
  render() {
    return this.isSearchActive ? c("div", {
      class: "a_menu_2__panels__main a_menu_2__panel_search"
    }, [
      c("div", {
        class: "a_menu_2__navbar_top_sub"
      }, [
        c(be, {
          class: "a_menu_2__navbar_top_sub__text",
          tag: "strong",
          text: this.textLocal,
          extra: {
            count: this.itemsWithSearch.length
          }
        })
      ]),
      !this.isNoneFound && c("div", {
        class: "a_vertical_scroll"
      }, [
        c("div", {
          class: "a_scroll_content"
        }, [
          c("ul", {
            class: "a_menu_2__listview"
          }, [
            this.itemsWithSearch.map((e) => c(j6, {
              key: e[ze],
              breadcrumbsLinkClass: this.breadcrumbsLinkClass,
              breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
              dataProParentChildren: this.dataProParentChildren,
              item: e,
              menuId: this.menuId,
              modelSearch: this.modelSearch
            }, this.$slots))
          ])
        ])
      ])
    ]) : null;
  }
};
function K6({
  onScroll: e = () => {
  },
  scrollContentRef: t = R(void 0)
}) {
  return {
    addScrollListener: () => {
      t.value.addEventListener("scroll", e);
    },
    destroyScrollListener: () => {
      t.value.removeEventListener("scroll", e);
    }
  };
}
function X6({
  checkScroll: e = () => {
  },
  containerRef: t = R(void 0),
  scrollContentChildRef: n = R(void 0)
}) {
  const r = R(void 0), a = R(!1), s = R(void 0), o = R(!1), u = R(0), f = R(0), _ = (k) => {
    const D = k[0].contentRect.height;
    (u.value === 0 || u.value !== D) && (u.value = D, e());
  }, m = (k) => {
    const D = k[0].contentRect.height;
    (f.value === 0 || f.value !== D) && (f.value = D, e());
  }, b = () => {
    r.value = new ResizeObserver(
      El((k) => _(k), 300)
    );
  }, v = () => {
    s.value = new ResizeObserver(
      El((k) => m(k), 300)
    );
  }, g = () => {
    a.value || (r.value.observe(t.value), a.value = !0);
  }, S = () => {
    a.value && (r.value.unobserve(t.value), a.value = !1);
  }, A = () => {
    r.value.disconnect();
  }, w = () => {
    o.value || (s.value.observe(n.value), o.value = !0);
  }, T = () => {
    o.value && (s.value.unobserve(n.value), o.value = !1);
  }, I = () => {
    s.value.disconnect();
  };
  return {
    connectObservers: () => {
      g(), w();
    },
    destroyObservers: () => {
      A(), I();
    },
    disconnectObservers: () => {
      S(), T();
    },
    initObservers: () => {
      b(), v();
    }
  };
}
function Z6(e) {
  const t = p(e, "scrollDistance"), n = R(!1), r = R(!1), a = R(void 0), s = R(!1), o = R(void 0), u = R(void 0), f = () => {
    const v = o.value;
    r.value = v.scrollTop > 0, n.value = v.scrollTop < v.scrollHeight - v.clientHeight;
  }, _ = () => {
    s.value = o.value.scrollHeight > o.value.clientHeight, s.value && f();
  };
  return {
    canScrollDown: n,
    canScrollUp: r,
    checkScroll: _,
    containerRef: a,
    hasScroll: s,
    onScroll: f,
    scrollContentChildRef: u,
    scrollContentRef: o,
    scrollDown: () => {
      o.value.scrollTop += t.value, _();
    },
    scrollUp: () => {
      o.value.scrollTop -= t.value, _();
    }
  };
}
const J6 = {
  name: "AVerticalScroll",
  props: {
    btnDownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnUpProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    scrollContentAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    scrollDistance: {
      type: Number,
      required: !1,
      default: 100
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    tagScrollContent: {
      type: String,
      required: !1,
      default: "div"
    }
  },
  setup(e) {
    const t = p(e, "disabled"), {
      canScrollDown: n,
      canScrollUp: r,
      checkScroll: a,
      containerRef: s,
      hasScroll: o,
      onScroll: u,
      scrollContentChildRef: f,
      scrollContentRef: _,
      scrollDown: m,
      scrollUp: b
    } = Z6(e), {
      connectObservers: v,
      destroyObservers: g,
      disconnectObservers: S,
      initObservers: A
    } = X6({
      checkScroll: a,
      containerRef: s,
      scrollContentChildRef: f
    }), {
      addScrollListener: w,
      destroyScrollListener: T
    } = K6({
      onScroll: u,
      scrollContentRef: _
    });
    return ha(() => {
      A(), t.value || (v(), w());
    }), Bt(() => {
      g(), T();
    }), st(t, (I) => {
      I ? (S(), T()) : (v(), w());
    }), {
      canScrollDown: n,
      canScrollUp: r,
      containerRef: s,
      hasScroll: o,
      scrollContentChildRef: f,
      scrollContentRef: _,
      scrollDown: m,
      scrollUp: b
    };
  },
  render() {
    return c(this.tag, {
      ref: "containerRef",
      class: [
        "a_vertical_scroll",
        {
          a_vertical_scroll_scrollable: this.hasScroll && !this.disabled
        }
      ]
    }, [
      c("div", {
        class: "a_vertical_scroll__btn__wrapper a_vertical_scroll__btn__wrapper_up"
      }, [
        c(ct, {
          class: "a_btn a_btn_transparent_secondary a_btn_small a_vertical_scroll__btn a_vertical_scroll__btn_up",
          iconLeft: vp,
          disabled: !this.canScrollUp,
          tabindex: -1,
          title: "_A_VERTICAL_SCROLL_BTN_UP_TITLE_",
          textScreenReader: "_A_VERTICAL_SCROLL_BTN_UP_TITLE_",
          onClick: this.scrollUp,
          ...this.btnUpProps
        })
      ]),
      c(this.tagScrollContent, {
        ref: "scrollContentRef",
        class: "a_scroll_content",
        ...this.scrollContentAttributes
      }, [
        c("div", {
          ref: "scrollContentChildRef"
        }, [
          this.$slots.default && this.$slots.default()
        ])
      ]),
      c("div", {
        class: "a_vertical_scroll__btn__wrapper a_vertical_scroll__btn__wrapper_down"
      }, [
        c(ct, {
          class: "a_btn a_btn_transparent_secondary a_btn_small a_vertical_scroll__btn a_vertical_scroll__btn_down",
          iconLeft: Fs,
          disabled: !this.canScrollDown,
          title: "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_",
          textScreenReader: "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_",
          tabindex: -1,
          onClick: this.scrollDown,
          ...this.btnDownProps
        })
      ])
    ]);
  }
};
function Q6(e, {
  closeAllPanels: t = () => {
  }
}) {
  const n = p(e, "isBlockerClickable"), r = () => {
    t();
  };
  return {
    attributesBlockerClick: d(() => {
      const s = {};
      return n.value && (s.onClick = r, s.class = "a_menu_2__blocker a_menu_2_clickable"), s;
    })
  };
}
function e3(e, {
  isMenuOpen: t = d(() => !1),
  isMobileWidth: n = R(void 0),
  toggleMenu: r = () => {
  }
}) {
  const a = p(e, "isBackdropMobileClickable"), s = p(e, "useBackdropMobile"), o = d(() => s.value && t.value && n.value), u = () => {
    r({
      isOpen: !1
    });
  };
  return {
    clickAttributesBackdrop: d(() => a.value ? {
      onClick: u
    } : {}),
    isBackdropVisible: o
  };
}
function t3(e, {
  dataKeyById: t = d(() => ({})),
  dataProParent: n = d(() => ({
    main: [],
    children: {}
  })),
  isMenuLinkClicked: r = R(!1),
  isMenuOpen: a = d(() => !1),
  panelParentsOpen: s = R([])
}) {
  const o = p(e, "compareUrlCallback"), f = Yv().appContext.config.globalProperties.$router, _ = R([]), m = d(() => f.currentRoute), b = ({ route: A = {}, ids: w = [] }) => {
    const T = A[Zn];
    return T && (w.unshift(T), b({ route: t.value[T], ids: w })), w;
  }, v = ({ routerFullPath: A, route: w }) => {
    const {
      fullPath: T
    } = f.resolve(w.to);
    return We(o.value) ? o.value({
      fullPath: T,
      routerFullPath: A,
      item: w,
      currentRoute: f.currentRoute.value
    }) : T === A;
  }, g = ({ routes: A = [], routerFullPath: w = "/" }) => {
    let T = !1;
    return Y(A, (I) => {
      if (I.to && v({ routerFullPath: w, route: I })) {
        const C = b({ route: I, ids: [] });
        return !r.value && a.value && (s.value = C), _.value = [...C, I[ze]], T = !0, !1;
      }
    }), T;
  };
  return {
    activeRoutesIds: _,
    checkAllRoutes: () => {
      const A = f.currentRoute.value.fullPath;
      let w = !1;
      w = g({ routes: n.value.main, routerFullPath: A }), !w && (Y(n.value.children, (T) => {
        if (w = g({ routes: T, routerFullPath: A }), w)
          return !1;
      }), r.value && (r.value = !1));
    },
    currentRoute: m
  };
}
function n3(e) {
  const t = p(e, "data"), n = p(e, "isTranslated"), r = p(e, "keyChildren"), a = p(e, "keyId"), s = p(e, "keyLabel"), o = p(e, "keyLabelCallback"), u = ({ breadcrumbs: v = [], parentId: g, parentLabel: S }) => {
    const A = Ry(v);
    return g && A.push({
      parentId: g,
      label: S
    }), A;
  }, f = ({ dataClone: v, dataFlat: g = [], parentId: S, parentLabel: A, breadcrumbs: w = [] }) => (Y(v, (T) => {
    T[ze] = de(T, a.value), T[Zn] = S, T[nh] = u({
      breadcrumbs: w,
      parentId: S,
      parentLabel: A
    });
    let I;
    if (o.value ? I = o.value({ item: T }) : I = de(T, s.value), n.value && ii(I) && (I = Kt({ placeholder: I })), T[vt] = I, r.value) {
      const C = de(T, r.value);
      C && C.length && (f({
        dataClone: C,
        parentId: T[ze],
        parentLabel: T[vt],
        dataFlat: g,
        breadcrumbs: T[nh]
      }), T[SA] = C);
    }
    g.push(T);
  }), g), _ = d(() => {
    const v = Se(t.value);
    let g = [];
    return g = f({ dataClone: v, dataFlat: g }), g;
  }), m = d(() => {
    const v = [], g = {};
    return Y(_.value, (S) => {
      const A = S[Zn];
      ae(A) ? v.push(S) : (g[A] = g[A] || [], g[A].push(S));
    }), {
      main: v,
      children: g
    };
  });
  return {
    dataKeyById: d(() => ui(_.value, ze)),
    dataProParent: m
  };
}
function r3(e, {
  closeMenu: t = () => {
  }
}) {
  const n = p(e, "useEscapeForMobile"), r = R(void 0), {
    isMobileWidth: a
  } = En(), s = (m) => {
    if (!r.value)
      return;
    const b = r.value.querySelectorAll(Os);
    if (b.length === 0) {
      m.preventDefault();
      return;
    }
    const v = b[0], g = b[b.length - 1];
    m.shiftKey ? document.activeElement === v && (g.focus(), m.preventDefault()) : document.activeElement === g && (v.focus(), m.preventDefault());
  }, o = (m) => {
    n.value && (t(), m.preventDefault(), m.stopPropagation());
  }, u = (m) => {
    const b = m || window.$event;
    b.key === "Escape" || b.keyCode === X.escape ? o(m) : (b.key === "Tab" || b.keyCode === X.tab) && s(b);
  };
  return {
    menuRef: r,
    removeListenerForKeydown: () => {
      document.removeEventListener("keydown", u);
    },
    setListenerForKeydown: () => {
      a.value && document.addEventListener("keydown", u);
    }
  };
}
function a3(e, {
  closeAllPanels: t = () => {
  },
  isMenuOpen: n = d(() => !1),
  isMobileWidth: r = R(!1),
  resetSearch: a = () => {
  },
  toggleMenu: s = () => {
  }
}) {
  const o = p(e, "isBodyFocusAfterClick"), u = R(!1), f = () => {
    o.value && (document.body.hasAttribute("tabindex") ? document.body.focus() : (document.body.setAttribute("tabindex", "-1"), document.body.focus(), document.body.removeAttribute("tabindex")));
  };
  return {
    clickMenuLink: ({ ctrlKey: m = !1, isPanelMain: b = !1 } = {}) => {
      u.value = !0, a(), f(), (!n.value || b) && t(), r.value && !m && s({ isOpen: !1 });
    },
    isMenuLinkClicked: u
  };
}
function i3(e, {
  isMenuOpen: t = R(!1),
  toggleMenu: n = () => {
  }
}) {
  const r = p(e, "isBlockerClickable"), a = p(e, "menuId"), {
    isMobileWidth: s
  } = En(), o = d(() => s.value ? {
    role: "dialog",
    ariaModal: !0
  } : {}), u = d(() => `${a.value}_header`);
  return {
    attributesMenuClick: d(() => {
      const _ = {};
      return r.value && !t.value && (_.onClick = () => n({ isOpen: !0 }), _.class = "a_menu_2 a_menu_2_clickable"), _;
    }),
    attributesMobile: o,
    headerId: u
  };
}
function s3({
  isMenuOpen: e = d(() => !1),
  panelParentsOpen: t = R([])
}) {
  return {
    isLeastOnePanelOpenAndMenuClosed: d(() => !e.value && t.value.length > 0)
  };
}
function l3(e, {
  dataKeyById: t = d(() => ({})),
  resetSearch: n = () => {
  }
}) {
  const r = p(e, "menuId"), a = R([]), s = d(() => a.value.length > 0), o = ({ parentId: m, panelParentsOpenLocal: b }) => {
    if (m) {
      b.unshift(m);
      const v = t.value[m][Zn];
      return o({ parentId: v, panelParentsOpenLocal: b });
    }
    return b;
  };
  return {
    closeAllPanels: () => {
      a.value = [], n();
    },
    isSubMenuOpen: s,
    panelParentsOpen: a,
    setDefaultMenu: () => {
      n(), a.value = [];
    },
    togglePanel: ({ parentIds: m, parentId: b, isLinkInSearchPanel: v }) => {
      if (m)
        a.value = m;
      else {
        const g = a.value.indexOf(b), S = o({ parentId: b, panelParentsOpenLocal: [] });
        !v && g !== -1 && S.splice(-1, 1), a.value = S;
      }
      AA({
        menuId: r.value,
        panelId: Is(a.value) || ""
      }), n();
    }
  };
}
function o3(e, {
  menuRef: t = R(void 0),
  isMenuOpen: n = d(() => !1),
  panelParentsOpen: r = R([])
}) {
  const a = p(e, "menuId"), s = R({}), o = R(!1), u = ({ id: A }) => {
    const w = Hl({
      menuId: a.value,
      id: A,
      suffix: "link"
    });
    return document.getElementById(w);
  }, f = ({ id: A }) => {
    const w = Hl({
      menuId: a.value,
      id: A,
      suffix: "panel"
    });
    return document.getElementById(w);
  }, _ = (A) => {
    t.value.contains(A.target) || (r.value = []);
  }, m = () => {
    o.value || (o.value = !0, document.addEventListener("click", _));
  }, b = () => {
    o.value = !1, document.removeEventListener("click", _);
  }, v = (A) => {
    if (s.value[A]) {
      s.value[A](), delete s.value[A];
      const w = f({ id: A });
      w.style.removeProperty("left"), w.style.removeProperty("top");
    }
  };
  return {
    destroyPopover: () => {
      Y(s.value, (A, w) => {
        v(w);
      }), b();
    },
    startPopper: () => {
      if (n.value)
        return;
      m();
      const A = Ry(s.value);
      Y(r.value, (w) => {
        if (s.value[w]) {
          delete A[w];
          return;
        }
        const T = u({ id: w }), I = f({ id: w });
        !T || !I || (s.value[w] = Xl(
          T,
          I,
          () => {
            !T || !I || Ql(
              T,
              I,
              {
                placement: "right",
                middleware: [
                  Jl(),
                  Zl({ limiter: od() })
                ]
              }
            ).then(({ x: C, y: E }) => {
              Object.assign(I.style, {
                left: `${C}px`,
                top: `${E}px`
              });
            });
          }
        ));
      }), Y(A, (w, T) => {
        v(T);
      });
    }
  };
}
function u3(e, {
  removeListenerForKeydown: t = () => {
  },
  toggleMenu: n = () => {
  }
}) {
  const r = p(e, "isMenuOpenInitial"), a = R(!1), {
    isMobileWidth: s
  } = En(), o = (m) => {
    m ? n({ isOpen: !1 }) : (n({ isOpen: r.value }), t());
  };
  return {
    destroyEventBusUpdateViewOnResize: () => {
      Ht.$on("updateViewOnResize", o);
    },
    initEventBusUpdateViewOnResize: () => {
      Ht.$on("updateViewOnResize", o);
    },
    initMenuOpenOrClose: () => {
      s.value ? n({ isOpen: !1 }) : n({ isOpen: r.value }), Yu().then(() => {
        a.value = !0;
      });
    },
    isMenuInitialized: a,
    isMobileWidth: s
  };
}
function d3(e, {
  dataKeyById: t = d(() => ({}))
}) {
  const n = p(e, "menuId"), r = R(""), a = d(() => `${n.value}_search`), s = (b) => {
    r.value = b;
  }, o = d(() => !!r.value), u = d(() => o.value ? "display: none;" : void 0), f = () => {
    o.value && (r.value = "");
  }, _ = d(() => Gl(r.value)), m = d(() => {
    const b = [];
    if (o.value) {
      const v = new RegExp(_.value, "gi");
      Y(t.value, (g) => {
        `${g[vt]}`.search(v) !== -1 && b.push(g);
      });
    }
    return b;
  });
  return {
    isSearchActive: o,
    itemsWithSearch: m,
    modelSearch: r,
    resetSearch: f,
    searchInputId: a,
    styleSearchPanelMain: u,
    updateModelSearch: s
  };
}
function c3({
  searchInputId: e = d(() => {
  }),
  toggleMenu: t = () => {
  }
}) {
  const n = () => {
    t({ isOpen: !0 }), window.isScrollDisabled || setTimeout(() => {
      ka({
        selector: `#${e.value}`
      });
    });
  };
  return {
    clickOnSearchBtn: n,
    keydownOnSearchBtn: (a) => {
      (a.keyCode === X.enter || a.keyCode === X.space) && (n(), a.stopPropagation(), a.preventDefault());
    }
  };
}
const f3 = 34, h3 = 20, FU = {
  name: "AMenu2",
  provide() {
    return {
      keySlot: d(() => this.keySlot)
    };
  },
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link"
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    breadcrumbsTruncatedOffset: {
      type: Number,
      required: !1,
      default: () => f3 + h3
    },
    buttonToggleClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_transparent_secondary a_btn_small"
    },
    buttonToggleProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canChangeBodyClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    compareUrlCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    hasSearch: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBackdropMobileClickable: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBlockerClickable: {
      type: Boolean,
      required: !1
    },
    isBodyFocusAfterClick: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLinkTruncated: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMenuOpenInitial: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTranslated: {
      type: Boolean,
      required: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: String,
      required: !1,
      default: "group"
    },
    keyIcon: {
      type: String,
      required: !1,
      default: "icon"
    },
    keyId: {
      type: String,
      required: !1,
      default: "id"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyParent: {
      type: String,
      required: !1,
      default: "parent"
    },
    keySlot: {
      type: String,
      required: !1,
      default: void 0
    },
    menuId: {
      type: String,
      required: !1,
      default: () => mt("a_menu_2_")
    },
    showCountChildren: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useBackdropMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useEscapeForMobile: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  setup(e) {
    const t = p(e, "isLinkTruncated"), n = p(e, "showCountChildren"), r = p(e, "breadcrumbsTruncatedOffset"), {
      dataKeyById: a,
      dataProParent: s
    } = n3(e), {
      isSearchActive: o,
      itemsWithSearch: u,
      modelSearch: f,
      resetSearch: _,
      searchInputId: m,
      styleSearchPanelMain: b,
      updateModelSearch: v
    } = d3(e, {
      dataKeyById: a
    }), {
      closeAllPanels: g,
      isSubMenuOpen: S,
      panelParentsOpen: A,
      setDefaultMenu: w,
      togglePanel: T
    } = l3(e, {
      dataKeyById: a,
      resetSearch: _
    }), {
      closeMenu: I,
      isMenuOpen: C,
      removeBodyClasses: E,
      toggleMenu: P
    } = wA(e), {
      menuRef: M,
      removeListenerForKeydown: k,
      setListenerForKeydown: F
    } = r3(e, {
      closeMenu: I
    }), {
      clickOnSearchBtn: D,
      keydownOnSearchBtn: W
    } = c3({
      searchInputId: m,
      toggleMenu: P
    }), {
      attributesMenuClick: $,
      attributesMobile: z,
      headerId: ne
    } = i3(e, {
      isMenuOpen: C,
      toggleMenu: P
    }), {
      destroyEventBusUpdateViewOnResize: Q,
      initEventBusUpdateViewOnResize: ce,
      initMenuOpenOrClose: he,
      isMenuInitialized: ve,
      isMobileWidth: me
    } = u3(e, {
      removeListenerForKeydown: k,
      toggleMenu: P
    }), {
      clickMenuLink: Ne,
      isMenuLinkClicked: we
    } = a3(e, {
      closeAllPanels: g,
      isMenuOpen: C,
      isMobileWidth: me,
      resetSearch: _,
      toggleMenu: P
    }), {
      attributesBlockerClick: oe
    } = Q6(e, {
      closeAllPanels: g
    }), {
      activeRoutesIds: xe,
      checkAllRoutes: re,
      currentRoute: Re
    } = t3(e, {
      dataKeyById: a,
      dataProParent: s,
      isMenuLinkClicked: we,
      isMenuOpen: C,
      panelParentsOpen: A
    }), {
      destroyPopover: Z,
      startPopper: U
    } = o3(e, {
      menuRef: M,
      isMenuOpen: C,
      panelParentsOpen: A
    }), {
      isLeastOnePanelOpenAndMenuClosed: se
    } = s3({
      isMenuOpen: C,
      panelParentsOpen: A
    }), {
      clickAttributesBackdrop: pe,
      isBackdropVisible: Ie
    } = e3(e, {
      isMenuOpen: C,
      isMobileWidth: me,
      toggleMenu: P
    });
    return st(Re, () => {
      re();
    }, {
      immediate: !0,
      deep: !0
    }), st(C, (He) => {
      ve.value && (_(), g(), He ? (Z(), F()) : k());
    }), st(A, () => {
      U();
    }, {
      deep: !0
    }), Ze("activeRoutesIds", d(() => xe.value)), Ze("clickMenuLink", Ne), Ze("isLinkTruncated", d(() => t.value)), Ze("isMenuOpen", d(() => C.value)), Ze("panelParentsOpen", A), Ze("showCountChildren", d(() => n.value)), Ze("togglePanel", T), Ze("breadcrumbsTruncatedOffset", d(() => r.value)), he(), ce(), Bt(() => {
      E(), Q(), Z(), k();
    }), {
      activeRoutesIds: xe,
      attributesBlockerClick: oe,
      attributesMenuClick: $,
      attributesMobile: z,
      checkAllRoutes: re,
      clickAttributesBackdrop: pe,
      clickOnSearchBtn: D,
      dataKeyById: a,
      dataProParent: s,
      headerId: ne,
      isBackdropVisible: Ie,
      isLeastOnePanelOpenAndMenuClosed: se,
      isMenuOpen: C,
      isMobileWidth: me,
      isSearchActive: o,
      isSubMenuOpen: S,
      itemsWithSearch: u,
      keydownOnSearchBtn: W,
      menuRef: M,
      modelSearch: f,
      panelParentsOpen: A,
      removeBodyClasses: E,
      searchInputId: m,
      setDefaultMenu: w,
      styleSearchPanelMain: b,
      toggleMenu: P,
      togglePanel: T,
      updateModelSearch: v
    };
  },
  render() {
    return c("nav", {
      ref: "menuRef",
      id: this.menuId,
      "aria-labelledby": this.headerId,
      class: [
        "a_menu_2",
        {
          a_menu_2_sub_open: this.isSubMenuOpen,
          a_menu_2_open: this.isMenuOpen,
          a_menu_2_close: !this.isMenuOpen,
          a_menu_2_mobile: this.isMobileWidth
        }
      ],
      ...this.attributesMobile,
      ...this.attributesMenuClick
    }, [
      c("div", {
        class: "a_menu_2__navbar_top"
      }, [
        c(g6, {
          buttonToggleProps: this.buttonToggleProps,
          canChangeBodyClass: this.canChangeBodyClass,
          class: this.buttonToggleClass,
          insideMenu: !0,
          menuId: this.menuId
        }),
        this.$slots.menuSearch && this.$slots.menuSearch(),
        this.hasSearch && c(In, {
          id: this.searchInputId,
          class: "a_menu_2__navbar_top__search",
          modelValue: this.modelSearch,
          label: "_A_MENU_2_SEARCH_",
          "onUpdate:modelValue": this.updateModelSearch
        })
      ]),
      c("div", {
        class: "a_menu_2__panels__main",
        style: this.styleSearchPanelMain
      }, [
        c("div", {
          class: "a_menu_2__navbar_top_sub"
        }, [
          c(be, {
            id: this.headerId,
            class: "a_menu_2__navbar_top_sub__text",
            tag: "strong",
            text: "_A_MENU_2_MAIN_MENU_"
          }),
          this.hasSearch && c(ct, {
            role: "button",
            tabindex: 0,
            tag: "a",
            class: "a_menu_2__navbar_top_sub__search a_menu_2__link a_menu_2__link_btn",
            iconLeft: lo,
            iconClass: "a_menu_2__link__icon",
            title: "_A_MENU_2_OPEN_SEARCH_",
            textScreenReader: "_A_MENU_2_OPEN_SEARCH_",
            onClick: this.clickOnSearchBtn,
            onKeydown: this.keydownOnSearchBtn
          })
        ]),
        c(J6, {
          class: {
            a_menu_2__vertical_scroll_hidden: this.isLeastOnePanelOpenAndMenuClosed
          },
          disabled: this.isMenuOpen || this.isLeastOnePanelOpenAndMenuClosed
        }, () => [
          c(kv, {
            attributesBlockerClick: this.attributesBlockerClick,
            dataKeyById: this.dataKeyById,
            dataProParentChildren: this.dataProParent.children,
            isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
            isPanelMain: !0,
            isSearchActive: this.isSearchActive,
            keyGroup: this.keyGroup,
            keyIcon: this.keyIcon,
            menuId: this.menuId,
            paneIndex: "00",
            panelItems: this.dataProParent.main,
            panelParentsOpen: this.panelParentsOpen
          }, this.$slots)
        ]),
        c("div", {
          class: "a_menu_2__panels"
        }, [
          Object.keys(this.dataProParent.children).map((e, t) => c(kv, {
            key: e,
            attributesBlockerClick: {},
            breadcrumbsLinkClass: this.breadcrumbsLinkClass,
            breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
            dataKeyById: this.dataKeyById,
            dataProParentChildren: this.dataProParent.children,
            isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
            isSearchActive: this.isSearchActive,
            keyGroup: this.keyGroup,
            keyIcon: this.keyIcon,
            menuId: this.menuId,
            paneIndex: t,
            panelItems: this.dataProParent.children[e],
            panelParentsOpen: this.panelParentsOpen,
            parentId: e
          }, this.$slots))
        ])
      ]),
      c(z6, {
        breadcrumbsLinkClass: this.breadcrumbsLinkClass,
        breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
        dataProParentChildren: this.dataProParent.children,
        isSearchActive: this.isSearchActive,
        isSearchBreadcrumbsTruncated: this.isSearchBreadcrumbsTruncated,
        itemsWithSearch: this.itemsWithSearch,
        menuId: this.menuId,
        modelSearch: this.modelSearch
      }, this.$slots),
      this.isBackdropVisible ? c(fa, {
        to: "body"
      }, [
        c("div", {
          class: "a_menu_2__backdrop a_backdrop a_backdrop_fade",
          "aria-hidden": !0,
          ...this.clickAttributesBackdrop
        })
      ]) : ""
    ]);
  }
};
function p3({
  isModalHidden: e = R(!1)
}) {
  const t = () => {
    e.value = !0;
  };
  return {
    destroyEventBusCloseFromOutside: () => {
      Ht.$off("closeModalConfirm", t);
    },
    initEventBusCloseFromOutside: () => {
      Ht.$on("closeModalConfirm", t);
    }
  };
}
const qU = {
  name: "AModalConfirm",
  setup() {
    const {
      closeConfirm: e,
      confirmOptions: t,
      isModalHidden: n
    } = Bp(), {
      destroyEventBusCloseFromOutside: r,
      initEventBusCloseFromOutside: a
    } = p3({
      isModalHidden: n
    }), s = d(() => ({
      isModalHidden: n.value,
      isConfirm: !0,
      ...t.value,
      showCloseButtonHeader: !1,
      close: e
    }));
    return a(), Bt(() => {
      r();
    }), {
      modalProps: s
    };
  },
  render() {
    return c(Bd, this.modalProps, this.$slots);
  }
};
function _3(e) {
  const t = p(e, "stepIndex"), n = p(e, "stepActiveComputed"), r = d(() => n.value === t.value), a = d(() => t.value < n.value);
  return {
    isStepActive: r,
    isStepBeforeActive: a
  };
}
function m3(e, {
  isStepDisabled: t = d(() => !1),
  isStepActive: n = d(() => !1)
}) {
  const r = p(e, "id"), a = p(e, "stepIndex"), s = d(() => t.value || n.value ? -1 : 0), o = d(() => n.value ? {
    "aria-current": "step"
  } : {}), u = d(() => `${r.value}_step_text_${a.value}`), f = d(() => `${r.value}_step_status_text_${a.value}`);
  return {
    ariaCurrentAttributes: o,
    tabindex: s,
    stepStatusTextId: f,
    stepTextId: u
  };
}
function TA(e) {
  const t = p(e, "id"), n = p(e, "stepIndex");
  return {
    contentId: d(() => `${t.value}_${n.value}_content`)
  };
}
function b3(e) {
  const t = p(e, "step"), n = p(e, "stepIndex"), r = p(e, "stepActiveComputed"), a = p(e, "isForwardStepButtonDisabled"), s = p(e, "isBackStepButtonDisabled"), o = p(e, "isForwardButtonDisabled"), u = p(e, "isBackButtonDisabled"), f = d(() => n.value < r.value), _ = d(() => n.value > r.value);
  return {
    isStepDisabled: d(() => t.value.disabled ? !0 : _.value ? o.value || a.value : f.value ? u.value || s.value : !1)
  };
}
function v3(e, { emit: t }, {
  isStepDisabled: n = d(() => !1)
}) {
  const r = p(e, "step"), a = p(e, "stepIndex"), s = ({ $event: u }) => {
    n.value || t("onStepClick", {
      $event: u,
      step: r.value,
      stepIndex: a.value
    });
  };
  return {
    onClick: s,
    onKeydown: (u) => {
      (u.keyCode === X.enter || u.keyCode === X.space) && (s({ $event: u }), u.preventDefault(), u.stopPropagation());
    }
  };
}
function y3(e) {
  const t = p(e, "step"), n = p(e, "stepIconError"), r = p(e, "stepIconErrorText"), a = p(e, "stepIconWarning"), s = p(e, "stepIconWarningText"), o = d(() => {
    if (t.value.error)
      return n.value;
    if (t.value.warning)
      return a.value;
  }), u = d(() => {
    if (t.value.error)
      return r.value;
    if (t.value.warning)
      return s.value;
  });
  return {
    iconErrorWarning: o,
    titleIconErrorWarning: u
  };
}
function g3(e, {
  isStepActive: t = d(() => !1),
  isStepBeforeActive: n = d(() => !1),
  isStepDisabled: r = d(() => !1)
}) {
  const a = p(e, "step");
  return {
    linkClass: d(() => ["a_wizard__step__link", {
      active: t.value,
      before_active: n.value,
      default: r.value,
      done: !t.value && !r.value,
      error: a.value.error,
      warning: a.value.warning
    }])
  };
}
function S3(e, {
  isStepActive: t = d(() => !1)
}) {
  const n = p(e, "isMobile"), r = p(e, "isStepNumberVisible"), a = p(e, "showOnlyActiveStepMobile"), s = p(e, "stepIndex"), o = d(() => s.value + 1), u = d(() => n.value && a.value && t.value), f = d(() => r.value ? u.value ? "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_" : o.value : "");
  return {
    stepNumber: o,
    stepNumberText: f
  };
}
function A3(e, {
  isStepActive: t = d(() => !1),
  isStepBeforeActive: n = d(() => !1)
}) {
  return {
    statusText: d(() => t.value ? "_A_WIZARD_STEP_ACTIVE_" : n.value ? "_A_WIZARD_STEP_VISITED_" : "_A_WIZARD_STEP_UPCOMING_")
  };
}
const w3 = {
  name: "AWizardStep",
  props: {
    extra: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isMobile: {
      type: Boolean,
      required: !0
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    step: {
      type: Object,
      required: !0
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: dd
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: ud
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    stepIndex: {
      type: Number,
      required: !0
    },
    stepsCount: {
      type: Number,
      required: !0
    }
  },
  emits: [
    "onStepClick"
  ],
  setup(e, t) {
    const {
      isStepActive: n,
      isStepBeforeActive: r
    } = _3(e), {
      stepNumber: a,
      stepNumberText: s
    } = S3(e, {
      isStepActive: n
    }), {
      isStepDisabled: o
    } = b3(e), {
      linkClass: u
    } = g3(e, {
      isStepActive: n,
      isStepBeforeActive: r,
      isStepDisabled: o
    }), {
      onClick: f,
      onKeydown: _
    } = v3(e, t, {
      isStepDisabled: o
    }), {
      ariaCurrentAttributes: m,
      stepTextId: b,
      stepStatusTextId: v,
      tabindex: g
    } = m3(e, {
      isStepDisabled: o,
      isStepActive: n
    }), {
      contentId: S
    } = TA(e), {
      statusText: A
    } = A3(e, {
      isStepActive: n,
      isStepBeforeActive: r
    }), {
      iconErrorWarning: w,
      titleIconErrorWarning: T
    } = y3(e);
    return {
      ariaCurrentAttributes: m,
      contentId: S,
      iconErrorWarning: w,
      isStepActive: n,
      isStepDisabled: o,
      linkClass: u,
      onClick: f,
      onKeydown: _,
      statusText: A,
      stepNumber: a,
      stepNumberText: s,
      stepStatusTextId: v,
      stepTextId: b,
      tabindex: g,
      titleIconErrorWarning: T
    };
  },
  render() {
    return c(
      "li",
      {
        class: [
          "a_wizard__step",
          {
            a_wizard__step_active: this.isStepActive
          }
        ]
      },
      [
        c(Oe, {
          "aria-controls": this.contentId,
          "aria-describedby": this.stepStatusTextId,
          ariaDisabled: this.isStepDisabled,
          class: this.linkClass,
          classDefault: "",
          classDisabled: "disabled",
          role: "button",
          tabindex: this.tabindex,
          title: this.step.title,
          type: "link",
          onClick: this.onClick,
          onKeydown: this.onKeydown,
          ...this.ariaCurrentAttributes
        }, () => this.step.slotLabel && this.$slots[this.step.slotLabel] ? this.$slots[this.step.slotLabel]({
          isStepActive: this.isStepActive,
          isStepDisabled: this.isStepDisabled,
          step: this.step,
          stepIndex: this.stepIndex,
          stepNumber: this.stepNumber,
          stepTextId: this.stepTextId
        }) : [
          this.isStepNumberVisible ? c("span", {
            class: "a_wizard__step__number"
          }, [
            this.step.icon ? c(lt, {
              class: "a_wizard__step__number__icon",
              icon: this.step.icon
            }) : c(be, {
              class: "a_wizard__step__number__text",
              tag: "span",
              text: this.stepNumberText,
              extra: {
                stepActive: this.stepNumber,
                stepsCount: this.stepsCount
              }
            })
          ]) : "",
          c("span", {
            class: "a_wizard__step__text"
          }, [
            c(be, {
              id: this.stepTextId,
              class: "a_wizard__step__text__child",
              extra: this.extra,
              html: this.step.label,
              tag: "span"
            }),
            this.iconErrorWarning ? c(Oe, {
              iconClass: "a_wizard__step__text__icon",
              iconLeft: this.iconErrorWarning,
              tag: "span",
              textScreenReader: this.titleIconErrorWarning,
              title: this.titleIconErrorWarning,
              type: "text"
            }) : ""
          ])
        ]),
        c(be, {
          id: this.stepStatusTextId,
          class: "a_sr_only",
          tag: "span",
          text: this.statusText
        }),
        c("span", {
          class: "a_wizard__step__divider",
          ariaHidden: !0
        })
      ]
    );
  }
};
function T3(e) {
  const t = p(e, "stepIndex"), n = p(e, "stepActiveComputed");
  return {
    isStepActive: d(() => t.value === n.value)
  };
}
function x3(e) {
  const t = p(e, "id"), n = p(e, "stepIndex");
  return {
    focusId: d(() => `${t.value}_${n.value}_focus`)
  };
}
function C3(e, {
  isStepActive: t = d(() => !1)
}) {
  const n = p(e, "stepsVisitedComputed"), r = p(e, "stepIndex"), a = d(() => t.value ? "" : "display: none;");
  return {
    isStepRender: d(() => t.value || n.value[r.value]),
    styleStep: a
  };
}
const I3 = {
  name: "AWizardTab",
  props: {
    extra: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    step: {
      type: Object,
      required: !0
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    stepIndex: {
      type: Number,
      required: !0
    },
    stepsVisitedComputed: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    wizardAriaDescribedby: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      isStepActive: t
    } = T3(e), {
      isStepRender: n,
      styleStep: r
    } = C3(e, {
      isStepActive: t
    }), {
      focusId: a
    } = x3(e), {
      contentId: s
    } = TA(e);
    return {
      contentId: s,
      focusId: a,
      isStepRender: n,
      styleStep: r
    };
  },
  render() {
    return c("div", {
      id: this.contentId
    }, [
      this.isStepRender && c("div", {
        class: "a_wizard__tab_pane",
        style: this.styleStep
      }, [
        c("div", {
          id: this.focusId,
          class: "a_sr_only",
          tabindex: "-1",
          "aria-describedby": this.wizardAriaDescribedby
        }),
        this.$slots[this.step.slot] && this.$slots[this.step.slot]({
          step: this.step,
          stepIndex: this.stepIndex
        })
      ])
    ]);
  }
};
function L3(e, {
  isStepActiveFirst: t = d(() => !1),
  isStepActiveLast: n = d(() => !1)
}) {
  const r = p(e, "isBackButtonDisabled"), a = p(e, "isForwardButtonDisabled"), s = d(() => t.value ? !0 : r.value), o = d(() => n.value ? !0 : a.value);
  return {
    isBackButtonDisabledLocal: s,
    isForwardButtonDisabledLocal: o
  };
}
function E3(e, { emit: t }) {
  return {
    goOneStepBack: () => {
      t("goOneStepBack");
    },
    goOneStepForward: () => {
      t("goOneStepForward");
    }
  };
}
function O3(e) {
  const t = p(e, "steps"), n = p(e, "stepActiveComputed"), r = d(() => n.value === 0), a = d(() => n.value === t.value.length - 1);
  return {
    isStepActiveFirst: r,
    isStepActiveLast: a
  };
}
function D3(e, {
  isStepActiveFirst: t = d(() => !1),
  isStepActiveLast: n = d(() => !1)
}) {
  const r = p(e, "isForwardButtonHide"), a = p(e, "isBackButtonHide"), s = p(e, "isForwardLastButtonHide"), o = p(e, "isBackFirstButtonHide"), u = d(() => a.value ? !0 : t.value && o.value), f = d(() => r.value ? !0 : n.value && s.value);
  return {
    isBackButtonHideLocal: u,
    isForwardButtonHideLocal: f
  };
}
const P3 = {
  name: "AWizardToolbar",
  props: {
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    steps: {
      type: Array,
      required: !0
    }
  },
  emits: [
    "goOneStepBack",
    "goOneStepForward"
  ],
  setup(e, t) {
    const {
      isStepActiveFirst: n,
      isStepActiveLast: r
    } = O3(e), {
      isBackButtonDisabledLocal: a,
      isForwardButtonDisabledLocal: s
    } = L3(e, {
      isStepActiveFirst: n,
      isStepActiveLast: r
    }), {
      isBackButtonHideLocal: o,
      isForwardButtonHideLocal: u
    } = D3(e, {
      isStepActiveFirst: n,
      isStepActiveLast: r
    }), {
      goOneStepBack: f,
      goOneStepForward: _
    } = E3(e, t);
    return {
      goOneStepBack: f,
      goOneStepForward: _,
      isBackButtonDisabledLocal: a,
      isBackButtonHideLocal: o,
      isForwardButtonDisabledLocal: s,
      isForwardButtonHideLocal: u
    };
  },
  render() {
    return c(
      "div",
      {
        class: "a_wizard__toolbar"
      },
      [
        !this.isBackButtonHideLocal && c(Oe, {
          class: this.backButtonClass,
          disabled: this.isBackButtonDisabledLocal,
          extra: this.extra,
          iconLeft: this.backButtonIconLeft,
          iconRight: this.backButtonIconRight,
          loading: this.isButtonsLoading,
          text: this.backButtonText,
          textAriaHidden: !0,
          textScreenReader: this.backButtonTitle,
          title: this.backButtonTitle,
          type: "button",
          onClick: this.goOneStepBack,
          ...this.backButtonAttributes
        }),
        !this.isForwardButtonHideLocal && c(Oe, {
          class: this.forwardButtonClass,
          disabled: this.isForwardButtonDisabledLocal,
          extra: this.extra,
          iconLeft: this.forwardButtonIconLeft,
          iconRight: this.forwardButtonIconRight,
          loading: this.isButtonsLoading,
          text: this.forwardButtonText,
          textAriaHidden: !0,
          textScreenReader: this.forwardButtonTitle,
          title: this.forwardButtonTitle,
          type: "button",
          onClick: this.goOneStepForward,
          ...this.forwardButtonAttributes
        }),
        this.$slots.toolbar && this.$slots.toolbar()
      ]
    );
  }
};
function R3(e, {
  stepActiveComputed: t = d(() => 0)
}) {
  const n = p(e, "ariaLabel"), r = p(e, "ariaLabelSteps"), a = p(e, "extra"), s = p(e, "id"), {
    getTranslationAttributes: o,
    getTranslatedText: u,
    isPlaceholderTranslate: f
  } = Ui(), _ = d(() => f(n.value)), m = d(() => f(r.value)), b = d(() => {
    if (_.value)
      return u({
        placeholder: n.value,
        extra: a.value
      });
  }), v = d(() => {
    if (m.value)
      return u({
        placeholder: r.value,
        extra: a.value
      });
  }), g = d(() => o({
    attr: "aria-label",
    value: n.value,
    translation: b.value,
    isTranslate: _.value
  })), S = d(() => o({
    attr: "aria-label",
    value: r.value,
    translation: v.value,
    isTranslate: m.value
  })), A = d(() => `${s.value}_progressbar`), w = d(() => `${s.value}_step_text_${t.value}`), T = d(() => `${A.value} ${w.value}`);
  return {
    ariaLabelAttributes: g,
    ariaLabelStepsAttributes: S,
    idProgressbar: A,
    wizardAriaDescribedby: T
  };
}
var vl = { exports: {} };
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
var B3 = vl.exports, Mv;
function k3() {
  return Mv || (Mv = 1, function(e, t) {
    (function() {
      var n, r = "4.17.21", a = 200, s = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", o = "Expected a function", u = "Invalid `variable` option passed into `_.template`", f = "__lodash_hash_undefined__", _ = 500, m = "__lodash_placeholder__", b = 1, v = 2, g = 4, S = 1, A = 2, w = 1, T = 2, I = 4, C = 8, E = 16, P = 32, M = 64, k = 128, F = 256, D = 512, W = 30, $ = "...", z = 800, ne = 16, Q = 1, ce = 2, he = 3, ve = 1 / 0, me = 9007199254740991, Ne = 17976931348623157e292, we = NaN, oe = 4294967295, xe = oe - 1, re = oe >>> 1, Re = [
        ["ary", k],
        ["bind", w],
        ["bindKey", T],
        ["curry", C],
        ["curryRight", E],
        ["flip", D],
        ["partial", P],
        ["partialRight", M],
        ["rearg", F]
      ], Z = "[object Arguments]", U = "[object Array]", se = "[object AsyncFunction]", pe = "[object Boolean]", Ie = "[object Date]", He = "[object DOMException]", Ke = "[object Error]", Je = "[object Function]", ut = "[object GeneratorFunction]", Ee = "[object Map]", Qe = "[object Number]", At = "[object Null]", Fe = "[object Object]", ft = "[object Promise]", Dt = "[object Proxy]", $t = "[object RegExp]", qt = "[object Set]", Cr = "[object String]", nr = "[object Symbol]", Ir = "[object Undefined]", cn = "[object WeakMap]", rr = "[object WeakSet]", ar = "[object ArrayBuffer]", Nn = "[object DataView]", Yr = "[object Float32Array]", Vn = "[object Float64Array]", zr = "[object Int8Array]", ir = "[object Int16Array]", sr = "[object Int32Array]", ln = "[object Uint8Array]", On = "[object Uint8ClampedArray]", Lr = "[object Uint16Array]", Er = "[object Uint32Array]", pi = /\b__p \+= '';/g, Kr = /\b(__p \+=) '' \+/g, Or = /(__e\(.*?\)|\b__t\)) \+\n'';/g, Ga = /&(?:amp|lt|gt|quot|#39);/g, Xr = /[&<>"']/g, Vs = RegExp(Ga.source), Hs = RegExp(Xr.source), kt = /<%-([\s\S]+?)%>/g, Zr = /<%([\s\S]+?)%>/g, Yi = /<%=([\s\S]+?)%>/g, zi = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, _i = /^\w*$/, Ki = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, Ya = /[\\^$.*+?()[\]{}|]/g, $s = RegExp(Ya.source), fn = /^\s+/, za = /\s/, Jr = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, mi = /\{\n\/\* \[wrapped with (.+)\] \*/, ba = /,? & /, Xi = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, Dr = /[()=,{}\[\]\/\s]/, co = /\\(\\)?/g, fo = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, Ws = /\w*$/, ho = /^[-+]0x[0-9a-f]+$/i, Md = /^0b[01]+$/i, De = /^\[object .+?Constructor\]$/, N = /^0o[0-7]+$/i, le = /^(?:0|[1-9]\d*)$/, Te = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, gt = /($^)/, nn = /['\n\r\u2028\u2029\\]/g, Nt = "\\ud800-\\udfff", hn = "\\u0300-\\u036f", lr = "\\ufe20-\\ufe2f", bi = "\\u20d0-\\u20ff", rn = hn + lr + bi, Us = "\\u2700-\\u27bf", js = "a-z\\xdf-\\xf6\\xf8-\\xff", jA = "\\xac\\xb1\\xd7\\xf7", GA = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", YA = "\\u2000-\\u206f", zA = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", Fp = "A-Z\\xc0-\\xd6\\xd8-\\xde", qp = "\\ufe0e\\ufe0f", Np = jA + GA + YA + zA, Fd = "['’]", KA = "[" + Nt + "]", Vp = "[" + Np + "]", po = "[" + rn + "]", Hp = "\\d+", XA = "[" + Us + "]", $p = "[" + js + "]", Wp = "[^" + Nt + Np + Hp + Us + js + Fp + "]", qd = "\\ud83c[\\udffb-\\udfff]", ZA = "(?:" + po + "|" + qd + ")", Up = "[^" + Nt + "]", Nd = "(?:\\ud83c[\\udde6-\\uddff]){2}", Vd = "[\\ud800-\\udbff][\\udc00-\\udfff]", Zi = "[" + Fp + "]", jp = "\\u200d", Gp = "(?:" + $p + "|" + Wp + ")", JA = "(?:" + Zi + "|" + Wp + ")", Yp = "(?:" + Fd + "(?:d|ll|m|re|s|t|ve))?", zp = "(?:" + Fd + "(?:D|LL|M|RE|S|T|VE))?", Kp = ZA + "?", Xp = "[" + qp + "]?", QA = "(?:" + jp + "(?:" + [Up, Nd, Vd].join("|") + ")" + Xp + Kp + ")*", ew = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", tw = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", Zp = Xp + Kp + QA, nw = "(?:" + [XA, Nd, Vd].join("|") + ")" + Zp, rw = "(?:" + [Up + po + "?", po, Nd, Vd, KA].join("|") + ")", aw = RegExp(Fd, "g"), iw = RegExp(po, "g"), Hd = RegExp(qd + "(?=" + qd + ")|" + rw + Zp, "g"), sw = RegExp([
        Zi + "?" + $p + "+" + Yp + "(?=" + [Vp, Zi, "$"].join("|") + ")",
        JA + "+" + zp + "(?=" + [Vp, Zi + Gp, "$"].join("|") + ")",
        Zi + "?" + Gp + "+" + Yp,
        Zi + "+" + zp,
        tw,
        ew,
        Hp,
        nw
      ].join("|"), "g"), lw = RegExp("[" + jp + Nt + rn + qp + "]"), ow = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, uw = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
      ], dw = -1, It = {};
      It[Yr] = It[Vn] = It[zr] = It[ir] = It[sr] = It[ln] = It[On] = It[Lr] = It[Er] = !0, It[Z] = It[U] = It[ar] = It[pe] = It[Nn] = It[Ie] = It[Ke] = It[Je] = It[Ee] = It[Qe] = It[Fe] = It[$t] = It[qt] = It[Cr] = It[cn] = !1;
      var xt = {};
      xt[Z] = xt[U] = xt[ar] = xt[Nn] = xt[pe] = xt[Ie] = xt[Yr] = xt[Vn] = xt[zr] = xt[ir] = xt[sr] = xt[Ee] = xt[Qe] = xt[Fe] = xt[$t] = xt[qt] = xt[Cr] = xt[nr] = xt[ln] = xt[On] = xt[Lr] = xt[Er] = !0, xt[Ke] = xt[Je] = xt[cn] = !1;
      var cw = {
        // Latin-1 Supplement block.
        À: "A",
        Á: "A",
        Â: "A",
        Ã: "A",
        Ä: "A",
        Å: "A",
        à: "a",
        á: "a",
        â: "a",
        ã: "a",
        ä: "a",
        å: "a",
        Ç: "C",
        ç: "c",
        Ð: "D",
        ð: "d",
        È: "E",
        É: "E",
        Ê: "E",
        Ë: "E",
        è: "e",
        é: "e",
        ê: "e",
        ë: "e",
        Ì: "I",
        Í: "I",
        Î: "I",
        Ï: "I",
        ì: "i",
        í: "i",
        î: "i",
        ï: "i",
        Ñ: "N",
        ñ: "n",
        Ò: "O",
        Ó: "O",
        Ô: "O",
        Õ: "O",
        Ö: "O",
        Ø: "O",
        ò: "o",
        ó: "o",
        ô: "o",
        õ: "o",
        ö: "o",
        ø: "o",
        Ù: "U",
        Ú: "U",
        Û: "U",
        Ü: "U",
        ù: "u",
        ú: "u",
        û: "u",
        ü: "u",
        Ý: "Y",
        ý: "y",
        ÿ: "y",
        Æ: "Ae",
        æ: "ae",
        Þ: "Th",
        þ: "th",
        ß: "ss",
        // Latin Extended-A block.
        Ā: "A",
        Ă: "A",
        Ą: "A",
        ā: "a",
        ă: "a",
        ą: "a",
        Ć: "C",
        Ĉ: "C",
        Ċ: "C",
        Č: "C",
        ć: "c",
        ĉ: "c",
        ċ: "c",
        č: "c",
        Ď: "D",
        Đ: "D",
        ď: "d",
        đ: "d",
        Ē: "E",
        Ĕ: "E",
        Ė: "E",
        Ę: "E",
        Ě: "E",
        ē: "e",
        ĕ: "e",
        ė: "e",
        ę: "e",
        ě: "e",
        Ĝ: "G",
        Ğ: "G",
        Ġ: "G",
        Ģ: "G",
        ĝ: "g",
        ğ: "g",
        ġ: "g",
        ģ: "g",
        Ĥ: "H",
        Ħ: "H",
        ĥ: "h",
        ħ: "h",
        Ĩ: "I",
        Ī: "I",
        Ĭ: "I",
        Į: "I",
        İ: "I",
        ĩ: "i",
        ī: "i",
        ĭ: "i",
        į: "i",
        ı: "i",
        Ĵ: "J",
        ĵ: "j",
        Ķ: "K",
        ķ: "k",
        ĸ: "k",
        Ĺ: "L",
        Ļ: "L",
        Ľ: "L",
        Ŀ: "L",
        Ł: "L",
        ĺ: "l",
        ļ: "l",
        ľ: "l",
        ŀ: "l",
        ł: "l",
        Ń: "N",
        Ņ: "N",
        Ň: "N",
        Ŋ: "N",
        ń: "n",
        ņ: "n",
        ň: "n",
        ŋ: "n",
        Ō: "O",
        Ŏ: "O",
        Ő: "O",
        ō: "o",
        ŏ: "o",
        ő: "o",
        Ŕ: "R",
        Ŗ: "R",
        Ř: "R",
        ŕ: "r",
        ŗ: "r",
        ř: "r",
        Ś: "S",
        Ŝ: "S",
        Ş: "S",
        Š: "S",
        ś: "s",
        ŝ: "s",
        ş: "s",
        š: "s",
        Ţ: "T",
        Ť: "T",
        Ŧ: "T",
        ţ: "t",
        ť: "t",
        ŧ: "t",
        Ũ: "U",
        Ū: "U",
        Ŭ: "U",
        Ů: "U",
        Ű: "U",
        Ų: "U",
        ũ: "u",
        ū: "u",
        ŭ: "u",
        ů: "u",
        ű: "u",
        ų: "u",
        Ŵ: "W",
        ŵ: "w",
        Ŷ: "Y",
        ŷ: "y",
        Ÿ: "Y",
        Ź: "Z",
        Ż: "Z",
        Ž: "Z",
        ź: "z",
        ż: "z",
        ž: "z",
        Ĳ: "IJ",
        ĳ: "ij",
        Œ: "Oe",
        œ: "oe",
        ŉ: "'n",
        ſ: "s"
      }, fw = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      }, hw = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      }, pw = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
      }, _w = parseFloat, mw = parseInt, Jp = typeof ru == "object" && ru && ru.Object === Object && ru, bw = typeof self == "object" && self && self.Object === Object && self, on = Jp || bw || Function("return this")(), $d = t && !t.nodeType && t, vi = $d && !0 && e && !e.nodeType && e, Qp = vi && vi.exports === $d, Wd = Qp && Jp.process, or = function() {
        try {
          var V = vi && vi.require && vi.require("util").types;
          return V || Wd && Wd.binding && Wd.binding("util");
        } catch {
        }
      }(), e_ = or && or.isArrayBuffer, t_ = or && or.isDate, n_ = or && or.isMap, r_ = or && or.isRegExp, a_ = or && or.isSet, i_ = or && or.isTypedArray;
      function Hn(V, K, j) {
        switch (j.length) {
          case 0:
            return V.call(K);
          case 1:
            return V.call(K, j[0]);
          case 2:
            return V.call(K, j[0], j[1]);
          case 3:
            return V.call(K, j[0], j[1], j[2]);
        }
        return V.apply(K, j);
      }
      function vw(V, K, j, ye) {
        for (var Ve = -1, _t = V == null ? 0 : V.length; ++Ve < _t; ) {
          var Xt = V[Ve];
          K(ye, Xt, j(Xt), V);
        }
        return ye;
      }
      function ur(V, K) {
        for (var j = -1, ye = V == null ? 0 : V.length; ++j < ye && K(V[j], j, V) !== !1; )
          ;
        return V;
      }
      function yw(V, K) {
        for (var j = V == null ? 0 : V.length; j-- && K(V[j], j, V) !== !1; )
          ;
        return V;
      }
      function s_(V, K) {
        for (var j = -1, ye = V == null ? 0 : V.length; ++j < ye; )
          if (!K(V[j], j, V))
            return !1;
        return !0;
      }
      function Ka(V, K) {
        for (var j = -1, ye = V == null ? 0 : V.length, Ve = 0, _t = []; ++j < ye; ) {
          var Xt = V[j];
          K(Xt, j, V) && (_t[Ve++] = Xt);
        }
        return _t;
      }
      function _o(V, K) {
        var j = V == null ? 0 : V.length;
        return !!j && Ji(V, K, 0) > -1;
      }
      function Ud(V, K, j) {
        for (var ye = -1, Ve = V == null ? 0 : V.length; ++ye < Ve; )
          if (j(K, V[ye]))
            return !0;
        return !1;
      }
      function Pt(V, K) {
        for (var j = -1, ye = V == null ? 0 : V.length, Ve = Array(ye); ++j < ye; )
          Ve[j] = K(V[j], j, V);
        return Ve;
      }
      function Xa(V, K) {
        for (var j = -1, ye = K.length, Ve = V.length; ++j < ye; )
          V[Ve + j] = K[j];
        return V;
      }
      function jd(V, K, j, ye) {
        var Ve = -1, _t = V == null ? 0 : V.length;
        for (ye && _t && (j = V[++Ve]); ++Ve < _t; )
          j = K(j, V[Ve], Ve, V);
        return j;
      }
      function gw(V, K, j, ye) {
        var Ve = V == null ? 0 : V.length;
        for (ye && Ve && (j = V[--Ve]); Ve--; )
          j = K(j, V[Ve], Ve, V);
        return j;
      }
      function Gd(V, K) {
        for (var j = -1, ye = V == null ? 0 : V.length; ++j < ye; )
          if (K(V[j], j, V))
            return !0;
        return !1;
      }
      var Sw = Yd("length");
      function Aw(V) {
        return V.split("");
      }
      function ww(V) {
        return V.match(Xi) || [];
      }
      function l_(V, K, j) {
        var ye;
        return j(V, function(Ve, _t, Xt) {
          if (K(Ve, _t, Xt))
            return ye = _t, !1;
        }), ye;
      }
      function mo(V, K, j, ye) {
        for (var Ve = V.length, _t = j + (ye ? 1 : -1); ye ? _t-- : ++_t < Ve; )
          if (K(V[_t], _t, V))
            return _t;
        return -1;
      }
      function Ji(V, K, j) {
        return K === K ? kw(V, K, j) : mo(V, o_, j);
      }
      function Tw(V, K, j, ye) {
        for (var Ve = j - 1, _t = V.length; ++Ve < _t; )
          if (ye(V[Ve], K))
            return Ve;
        return -1;
      }
      function o_(V) {
        return V !== V;
      }
      function u_(V, K) {
        var j = V == null ? 0 : V.length;
        return j ? Kd(V, K) / j : we;
      }
      function Yd(V) {
        return function(K) {
          return K == null ? n : K[V];
        };
      }
      function zd(V) {
        return function(K) {
          return V == null ? n : V[K];
        };
      }
      function d_(V, K, j, ye, Ve) {
        return Ve(V, function(_t, Xt, Tt) {
          j = ye ? (ye = !1, _t) : K(j, _t, Xt, Tt);
        }), j;
      }
      function xw(V, K) {
        var j = V.length;
        for (V.sort(K); j--; )
          V[j] = V[j].value;
        return V;
      }
      function Kd(V, K) {
        for (var j, ye = -1, Ve = V.length; ++ye < Ve; ) {
          var _t = K(V[ye]);
          _t !== n && (j = j === n ? _t : j + _t);
        }
        return j;
      }
      function Xd(V, K) {
        for (var j = -1, ye = Array(V); ++j < V; )
          ye[j] = K(j);
        return ye;
      }
      function Cw(V, K) {
        return Pt(K, function(j) {
          return [j, V[j]];
        });
      }
      function c_(V) {
        return V && V.slice(0, __(V) + 1).replace(fn, "");
      }
      function $n(V) {
        return function(K) {
          return V(K);
        };
      }
      function Zd(V, K) {
        return Pt(K, function(j) {
          return V[j];
        });
      }
      function Gs(V, K) {
        return V.has(K);
      }
      function f_(V, K) {
        for (var j = -1, ye = V.length; ++j < ye && Ji(K, V[j], 0) > -1; )
          ;
        return j;
      }
      function h_(V, K) {
        for (var j = V.length; j-- && Ji(K, V[j], 0) > -1; )
          ;
        return j;
      }
      function Iw(V, K) {
        for (var j = V.length, ye = 0; j--; )
          V[j] === K && ++ye;
        return ye;
      }
      var Lw = zd(cw), Ew = zd(fw);
      function Ow(V) {
        return "\\" + pw[V];
      }
      function Dw(V, K) {
        return V == null ? n : V[K];
      }
      function Qi(V) {
        return lw.test(V);
      }
      function Pw(V) {
        return ow.test(V);
      }
      function Rw(V) {
        for (var K, j = []; !(K = V.next()).done; )
          j.push(K.value);
        return j;
      }
      function Jd(V) {
        var K = -1, j = Array(V.size);
        return V.forEach(function(ye, Ve) {
          j[++K] = [Ve, ye];
        }), j;
      }
      function p_(V, K) {
        return function(j) {
          return V(K(j));
        };
      }
      function Za(V, K) {
        for (var j = -1, ye = V.length, Ve = 0, _t = []; ++j < ye; ) {
          var Xt = V[j];
          (Xt === K || Xt === m) && (V[j] = m, _t[Ve++] = j);
        }
        return _t;
      }
      function bo(V) {
        var K = -1, j = Array(V.size);
        return V.forEach(function(ye) {
          j[++K] = ye;
        }), j;
      }
      function Bw(V) {
        var K = -1, j = Array(V.size);
        return V.forEach(function(ye) {
          j[++K] = [ye, ye];
        }), j;
      }
      function kw(V, K, j) {
        for (var ye = j - 1, Ve = V.length; ++ye < Ve; )
          if (V[ye] === K)
            return ye;
        return -1;
      }
      function Mw(V, K, j) {
        for (var ye = j + 1; ye--; )
          if (V[ye] === K)
            return ye;
        return ye;
      }
      function es(V) {
        return Qi(V) ? qw(V) : Sw(V);
      }
      function Pr(V) {
        return Qi(V) ? Nw(V) : Aw(V);
      }
      function __(V) {
        for (var K = V.length; K-- && za.test(V.charAt(K)); )
          ;
        return K;
      }
      var Fw = zd(hw);
      function qw(V) {
        for (var K = Hd.lastIndex = 0; Hd.test(V); )
          ++K;
        return K;
      }
      function Nw(V) {
        return V.match(Hd) || [];
      }
      function Vw(V) {
        return V.match(sw) || [];
      }
      var Hw = function V(K) {
        K = K == null ? on : ts.defaults(on.Object(), K, ts.pick(on, uw));
        var j = K.Array, ye = K.Date, Ve = K.Error, _t = K.Function, Xt = K.Math, Tt = K.Object, Qd = K.RegExp, $w = K.String, dr = K.TypeError, vo = j.prototype, Ww = _t.prototype, ns = Tt.prototype, yo = K["__core-js_shared__"], go = Ww.toString, St = ns.hasOwnProperty, Uw = 0, m_ = function() {
          var i = /[^.]+$/.exec(yo && yo.keys && yo.keys.IE_PROTO || "");
          return i ? "Symbol(src)_1." + i : "";
        }(), So = ns.toString, jw = go.call(Tt), Gw = on._, Yw = Qd(
          "^" + go.call(St).replace(Ya, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
        ), Ao = Qp ? K.Buffer : n, Ja = K.Symbol, wo = K.Uint8Array, b_ = Ao ? Ao.allocUnsafe : n, To = p_(Tt.getPrototypeOf, Tt), v_ = Tt.create, y_ = ns.propertyIsEnumerable, xo = vo.splice, g_ = Ja ? Ja.isConcatSpreadable : n, Ys = Ja ? Ja.iterator : n, yi = Ja ? Ja.toStringTag : n, Co = function() {
          try {
            var i = Ti(Tt, "defineProperty");
            return i({}, "", {}), i;
          } catch {
          }
        }(), zw = K.clearTimeout !== on.clearTimeout && K.clearTimeout, Kw = ye && ye.now !== on.Date.now && ye.now, Xw = K.setTimeout !== on.setTimeout && K.setTimeout, Io = Xt.ceil, Lo = Xt.floor, ec = Tt.getOwnPropertySymbols, Zw = Ao ? Ao.isBuffer : n, S_ = K.isFinite, Jw = vo.join, Qw = p_(Tt.keys, Tt), Zt = Xt.max, pn = Xt.min, eT = ye.now, tT = K.parseInt, A_ = Xt.random, nT = vo.reverse, tc = Ti(K, "DataView"), zs = Ti(K, "Map"), nc = Ti(K, "Promise"), rs = Ti(K, "Set"), Ks = Ti(K, "WeakMap"), Xs = Ti(Tt, "create"), Eo = Ks && new Ks(), as = {}, rT = xi(tc), aT = xi(zs), iT = xi(nc), sT = xi(rs), lT = xi(Ks), Oo = Ja ? Ja.prototype : n, Zs = Oo ? Oo.valueOf : n, w_ = Oo ? Oo.toString : n;
        function L(i) {
          if (Vt(i) && !$e(i) && !(i instanceof nt)) {
            if (i instanceof cr)
              return i;
            if (St.call(i, "__wrapped__"))
              return Tm(i);
          }
          return new cr(i);
        }
        var is = /* @__PURE__ */ function() {
          function i() {
          }
          return function(l) {
            if (!Mt(l))
              return {};
            if (v_)
              return v_(l);
            i.prototype = l;
            var h = new i();
            return i.prototype = n, h;
          };
        }();
        function Do() {
        }
        function cr(i, l) {
          this.__wrapped__ = i, this.__actions__ = [], this.__chain__ = !!l, this.__index__ = 0, this.__values__ = n;
        }
        L.templateSettings = {
          /**
           * Used to detect `data` property values to be HTML-escaped.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          escape: kt,
          /**
           * Used to detect code to be evaluated.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          evaluate: Zr,
          /**
           * Used to detect `data` property values to inject.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          interpolate: Yi,
          /**
           * Used to reference the data object in the template text.
           *
           * @memberOf _.templateSettings
           * @type {string}
           */
          variable: "",
          /**
           * Used to import variables into the compiled template.
           *
           * @memberOf _.templateSettings
           * @type {Object}
           */
          imports: {
            /**
             * A reference to the `lodash` function.
             *
             * @memberOf _.templateSettings.imports
             * @type {Function}
             */
            _: L
          }
        }, L.prototype = Do.prototype, L.prototype.constructor = L, cr.prototype = is(Do.prototype), cr.prototype.constructor = cr;
        function nt(i) {
          this.__wrapped__ = i, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = oe, this.__views__ = [];
        }
        function oT() {
          var i = new nt(this.__wrapped__);
          return i.__actions__ = Dn(this.__actions__), i.__dir__ = this.__dir__, i.__filtered__ = this.__filtered__, i.__iteratees__ = Dn(this.__iteratees__), i.__takeCount__ = this.__takeCount__, i.__views__ = Dn(this.__views__), i;
        }
        function uT() {
          if (this.__filtered__) {
            var i = new nt(this);
            i.__dir__ = -1, i.__filtered__ = !0;
          } else
            i = this.clone(), i.__dir__ *= -1;
          return i;
        }
        function dT() {
          var i = this.__wrapped__.value(), l = this.__dir__, h = $e(i), y = l < 0, x = h ? i.length : 0, O = A0(0, x, this.__views__), B = O.start, q = O.end, H = q - B, J = y ? q : B - 1, ee = this.__iteratees__, te = ee.length, _e = 0, Ce = pn(H, this.__takeCount__);
          if (!h || !y && x == H && Ce == H)
            return Y_(i, this.__actions__);
          var ke = [];
          e:
            for (; H-- && _e < Ce; ) {
              J += l;
              for (var Ye = -1, Me = i[J]; ++Ye < te; ) {
                var et = ee[Ye], at = et.iteratee, jn = et.type, xn = at(Me);
                if (jn == ce)
                  Me = xn;
                else if (!xn) {
                  if (jn == Q)
                    continue e;
                  break e;
                }
              }
              ke[_e++] = Me;
            }
          return ke;
        }
        nt.prototype = is(Do.prototype), nt.prototype.constructor = nt;
        function gi(i) {
          var l = -1, h = i == null ? 0 : i.length;
          for (this.clear(); ++l < h; ) {
            var y = i[l];
            this.set(y[0], y[1]);
          }
        }
        function cT() {
          this.__data__ = Xs ? Xs(null) : {}, this.size = 0;
        }
        function fT(i) {
          var l = this.has(i) && delete this.__data__[i];
          return this.size -= l ? 1 : 0, l;
        }
        function hT(i) {
          var l = this.__data__;
          if (Xs) {
            var h = l[i];
            return h === f ? n : h;
          }
          return St.call(l, i) ? l[i] : n;
        }
        function pT(i) {
          var l = this.__data__;
          return Xs ? l[i] !== n : St.call(l, i);
        }
        function _T(i, l) {
          var h = this.__data__;
          return this.size += this.has(i) ? 0 : 1, h[i] = Xs && l === n ? f : l, this;
        }
        gi.prototype.clear = cT, gi.prototype.delete = fT, gi.prototype.get = hT, gi.prototype.has = pT, gi.prototype.set = _T;
        function va(i) {
          var l = -1, h = i == null ? 0 : i.length;
          for (this.clear(); ++l < h; ) {
            var y = i[l];
            this.set(y[0], y[1]);
          }
        }
        function mT() {
          this.__data__ = [], this.size = 0;
        }
        function bT(i) {
          var l = this.__data__, h = Po(l, i);
          if (h < 0)
            return !1;
          var y = l.length - 1;
          return h == y ? l.pop() : xo.call(l, h, 1), --this.size, !0;
        }
        function vT(i) {
          var l = this.__data__, h = Po(l, i);
          return h < 0 ? n : l[h][1];
        }
        function yT(i) {
          return Po(this.__data__, i) > -1;
        }
        function gT(i, l) {
          var h = this.__data__, y = Po(h, i);
          return y < 0 ? (++this.size, h.push([i, l])) : h[y][1] = l, this;
        }
        va.prototype.clear = mT, va.prototype.delete = bT, va.prototype.get = vT, va.prototype.has = yT, va.prototype.set = gT;
        function ya(i) {
          var l = -1, h = i == null ? 0 : i.length;
          for (this.clear(); ++l < h; ) {
            var y = i[l];
            this.set(y[0], y[1]);
          }
        }
        function ST() {
          this.size = 0, this.__data__ = {
            hash: new gi(),
            map: new (zs || va)(),
            string: new gi()
          };
        }
        function AT(i) {
          var l = Uo(this, i).delete(i);
          return this.size -= l ? 1 : 0, l;
        }
        function wT(i) {
          return Uo(this, i).get(i);
        }
        function TT(i) {
          return Uo(this, i).has(i);
        }
        function xT(i, l) {
          var h = Uo(this, i), y = h.size;
          return h.set(i, l), this.size += h.size == y ? 0 : 1, this;
        }
        ya.prototype.clear = ST, ya.prototype.delete = AT, ya.prototype.get = wT, ya.prototype.has = TT, ya.prototype.set = xT;
        function Si(i) {
          var l = -1, h = i == null ? 0 : i.length;
          for (this.__data__ = new ya(); ++l < h; )
            this.add(i[l]);
        }
        function CT(i) {
          return this.__data__.set(i, f), this;
        }
        function IT(i) {
          return this.__data__.has(i);
        }
        Si.prototype.add = Si.prototype.push = CT, Si.prototype.has = IT;
        function Rr(i) {
          var l = this.__data__ = new va(i);
          this.size = l.size;
        }
        function LT() {
          this.__data__ = new va(), this.size = 0;
        }
        function ET(i) {
          var l = this.__data__, h = l.delete(i);
          return this.size = l.size, h;
        }
        function OT(i) {
          return this.__data__.get(i);
        }
        function DT(i) {
          return this.__data__.has(i);
        }
        function PT(i, l) {
          var h = this.__data__;
          if (h instanceof va) {
            var y = h.__data__;
            if (!zs || y.length < a - 1)
              return y.push([i, l]), this.size = ++h.size, this;
            h = this.__data__ = new ya(y);
          }
          return h.set(i, l), this.size = h.size, this;
        }
        Rr.prototype.clear = LT, Rr.prototype.delete = ET, Rr.prototype.get = OT, Rr.prototype.has = DT, Rr.prototype.set = PT;
        function T_(i, l) {
          var h = $e(i), y = !h && Ci(i), x = !h && !y && ri(i), O = !h && !y && !x && us(i), B = h || y || x || O, q = B ? Xd(i.length, $w) : [], H = q.length;
          for (var J in i)
            (l || St.call(i, J)) && !(B && // Safari 9 has enumerable `arguments.length` in strict mode.
            (J == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
            x && (J == "offset" || J == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
            O && (J == "buffer" || J == "byteLength" || J == "byteOffset") || // Skip index properties.
            wa(J, H))) && q.push(J);
          return q;
        }
        function x_(i) {
          var l = i.length;
          return l ? i[hc(0, l - 1)] : n;
        }
        function RT(i, l) {
          return jo(Dn(i), Ai(l, 0, i.length));
        }
        function BT(i) {
          return jo(Dn(i));
        }
        function rc(i, l, h) {
          (h !== n && !Br(i[l], h) || h === n && !(l in i)) && ga(i, l, h);
        }
        function Js(i, l, h) {
          var y = i[l];
          (!(St.call(i, l) && Br(y, h)) || h === n && !(l in i)) && ga(i, l, h);
        }
        function Po(i, l) {
          for (var h = i.length; h--; )
            if (Br(i[h][0], l))
              return h;
          return -1;
        }
        function kT(i, l, h, y) {
          return Qa(i, function(x, O, B) {
            l(y, x, h(x), B);
          }), y;
        }
        function C_(i, l) {
          return i && ea(l, an(l), i);
        }
        function MT(i, l) {
          return i && ea(l, Rn(l), i);
        }
        function ga(i, l, h) {
          l == "__proto__" && Co ? Co(i, l, {
            configurable: !0,
            enumerable: !0,
            value: h,
            writable: !0
          }) : i[l] = h;
        }
        function ac(i, l) {
          for (var h = -1, y = l.length, x = j(y), O = i == null; ++h < y; )
            x[h] = O ? n : qc(i, l[h]);
          return x;
        }
        function Ai(i, l, h) {
          return i === i && (h !== n && (i = i <= h ? i : h), l !== n && (i = i >= l ? i : l)), i;
        }
        function fr(i, l, h, y, x, O) {
          var B, q = l & b, H = l & v, J = l & g;
          if (h && (B = x ? h(i, y, x, O) : h(i)), B !== n)
            return B;
          if (!Mt(i))
            return i;
          var ee = $e(i);
          if (ee) {
            if (B = T0(i), !q)
              return Dn(i, B);
          } else {
            var te = _n(i), _e = te == Je || te == ut;
            if (ri(i))
              return X_(i, q);
            if (te == Fe || te == Z || _e && !x) {
              if (B = H || _e ? {} : _m(i), !q)
                return H ? h0(i, MT(B, i)) : f0(i, C_(B, i));
            } else {
              if (!xt[te])
                return x ? i : {};
              B = x0(i, te, q);
            }
          }
          O || (O = new Rr());
          var Ce = O.get(i);
          if (Ce)
            return Ce;
          O.set(i, B), Um(i) ? i.forEach(function(Me) {
            B.add(fr(Me, l, h, Me, i, O));
          }) : $m(i) && i.forEach(function(Me, et) {
            B.set(et, fr(Me, l, h, et, i, O));
          });
          var ke = J ? H ? Tc : wc : H ? Rn : an, Ye = ee ? n : ke(i);
          return ur(Ye || i, function(Me, et) {
            Ye && (et = Me, Me = i[et]), Js(B, et, fr(Me, l, h, et, i, O));
          }), B;
        }
        function FT(i) {
          var l = an(i);
          return function(h) {
            return I_(h, i, l);
          };
        }
        function I_(i, l, h) {
          var y = h.length;
          if (i == null)
            return !y;
          for (i = Tt(i); y--; ) {
            var x = h[y], O = l[x], B = i[x];
            if (B === n && !(x in i) || !O(B))
              return !1;
          }
          return !0;
        }
        function L_(i, l, h) {
          if (typeof i != "function")
            throw new dr(o);
          return il(function() {
            i.apply(n, h);
          }, l);
        }
        function Qs(i, l, h, y) {
          var x = -1, O = _o, B = !0, q = i.length, H = [], J = l.length;
          if (!q)
            return H;
          h && (l = Pt(l, $n(h))), y ? (O = Ud, B = !1) : l.length >= a && (O = Gs, B = !1, l = new Si(l));
          e:
            for (; ++x < q; ) {
              var ee = i[x], te = h == null ? ee : h(ee);
              if (ee = y || ee !== 0 ? ee : 0, B && te === te) {
                for (var _e = J; _e--; )
                  if (l[_e] === te)
                    continue e;
                H.push(ee);
              } else O(l, te, y) || H.push(ee);
            }
          return H;
        }
        var Qa = tm(Qr), E_ = tm(sc, !0);
        function qT(i, l) {
          var h = !0;
          return Qa(i, function(y, x, O) {
            return h = !!l(y, x, O), h;
          }), h;
        }
        function Ro(i, l, h) {
          for (var y = -1, x = i.length; ++y < x; ) {
            var O = i[y], B = l(O);
            if (B != null && (q === n ? B === B && !Un(B) : h(B, q)))
              var q = B, H = O;
          }
          return H;
        }
        function NT(i, l, h, y) {
          var x = i.length;
          for (h = je(h), h < 0 && (h = -h > x ? 0 : x + h), y = y === n || y > x ? x : je(y), y < 0 && (y += x), y = h > y ? 0 : Gm(y); h < y; )
            i[h++] = l;
          return i;
        }
        function O_(i, l) {
          var h = [];
          return Qa(i, function(y, x, O) {
            l(y, x, O) && h.push(y);
          }), h;
        }
        function un(i, l, h, y, x) {
          var O = -1, B = i.length;
          for (h || (h = I0), x || (x = []); ++O < B; ) {
            var q = i[O];
            l > 0 && h(q) ? l > 1 ? un(q, l - 1, h, y, x) : Xa(x, q) : y || (x[x.length] = q);
          }
          return x;
        }
        var ic = nm(), D_ = nm(!0);
        function Qr(i, l) {
          return i && ic(i, l, an);
        }
        function sc(i, l) {
          return i && D_(i, l, an);
        }
        function Bo(i, l) {
          return Ka(l, function(h) {
            return Ta(i[h]);
          });
        }
        function wi(i, l) {
          l = ti(l, i);
          for (var h = 0, y = l.length; i != null && h < y; )
            i = i[ta(l[h++])];
          return h && h == y ? i : n;
        }
        function P_(i, l, h) {
          var y = l(i);
          return $e(i) ? y : Xa(y, h(i));
        }
        function wn(i) {
          return i == null ? i === n ? Ir : At : yi && yi in Tt(i) ? S0(i) : B0(i);
        }
        function lc(i, l) {
          return i > l;
        }
        function VT(i, l) {
          return i != null && St.call(i, l);
        }
        function HT(i, l) {
          return i != null && l in Tt(i);
        }
        function $T(i, l, h) {
          return i >= pn(l, h) && i < Zt(l, h);
        }
        function oc(i, l, h) {
          for (var y = h ? Ud : _o, x = i[0].length, O = i.length, B = O, q = j(O), H = 1 / 0, J = []; B--; ) {
            var ee = i[B];
            B && l && (ee = Pt(ee, $n(l))), H = pn(ee.length, H), q[B] = !h && (l || x >= 120 && ee.length >= 120) ? new Si(B && ee) : n;
          }
          ee = i[0];
          var te = -1, _e = q[0];
          e:
            for (; ++te < x && J.length < H; ) {
              var Ce = ee[te], ke = l ? l(Ce) : Ce;
              if (Ce = h || Ce !== 0 ? Ce : 0, !(_e ? Gs(_e, ke) : y(J, ke, h))) {
                for (B = O; --B; ) {
                  var Ye = q[B];
                  if (!(Ye ? Gs(Ye, ke) : y(i[B], ke, h)))
                    continue e;
                }
                _e && _e.push(ke), J.push(Ce);
              }
            }
          return J;
        }
        function WT(i, l, h, y) {
          return Qr(i, function(x, O, B) {
            l(y, h(x), O, B);
          }), y;
        }
        function el(i, l, h) {
          l = ti(l, i), i = ym(i, l);
          var y = i == null ? i : i[ta(pr(l))];
          return y == null ? n : Hn(y, i, h);
        }
        function R_(i) {
          return Vt(i) && wn(i) == Z;
        }
        function UT(i) {
          return Vt(i) && wn(i) == ar;
        }
        function jT(i) {
          return Vt(i) && wn(i) == Ie;
        }
        function tl(i, l, h, y, x) {
          return i === l ? !0 : i == null || l == null || !Vt(i) && !Vt(l) ? i !== i && l !== l : GT(i, l, h, y, tl, x);
        }
        function GT(i, l, h, y, x, O) {
          var B = $e(i), q = $e(l), H = B ? U : _n(i), J = q ? U : _n(l);
          H = H == Z ? Fe : H, J = J == Z ? Fe : J;
          var ee = H == Fe, te = J == Fe, _e = H == J;
          if (_e && ri(i)) {
            if (!ri(l))
              return !1;
            B = !0, ee = !1;
          }
          if (_e && !ee)
            return O || (O = new Rr()), B || us(i) ? fm(i, l, h, y, x, O) : y0(i, l, H, h, y, x, O);
          if (!(h & S)) {
            var Ce = ee && St.call(i, "__wrapped__"), ke = te && St.call(l, "__wrapped__");
            if (Ce || ke) {
              var Ye = Ce ? i.value() : i, Me = ke ? l.value() : l;
              return O || (O = new Rr()), x(Ye, Me, h, y, O);
            }
          }
          return _e ? (O || (O = new Rr()), g0(i, l, h, y, x, O)) : !1;
        }
        function YT(i) {
          return Vt(i) && _n(i) == Ee;
        }
        function uc(i, l, h, y) {
          var x = h.length, O = x, B = !y;
          if (i == null)
            return !O;
          for (i = Tt(i); x--; ) {
            var q = h[x];
            if (B && q[2] ? q[1] !== i[q[0]] : !(q[0] in i))
              return !1;
          }
          for (; ++x < O; ) {
            q = h[x];
            var H = q[0], J = i[H], ee = q[1];
            if (B && q[2]) {
              if (J === n && !(H in i))
                return !1;
            } else {
              var te = new Rr();
              if (y)
                var _e = y(J, ee, H, i, l, te);
              if (!(_e === n ? tl(ee, J, S | A, y, te) : _e))
                return !1;
            }
          }
          return !0;
        }
        function B_(i) {
          if (!Mt(i) || E0(i))
            return !1;
          var l = Ta(i) ? Yw : De;
          return l.test(xi(i));
        }
        function zT(i) {
          return Vt(i) && wn(i) == $t;
        }
        function KT(i) {
          return Vt(i) && _n(i) == qt;
        }
        function XT(i) {
          return Vt(i) && Zo(i.length) && !!It[wn(i)];
        }
        function k_(i) {
          return typeof i == "function" ? i : i == null ? Bn : typeof i == "object" ? $e(i) ? q_(i[0], i[1]) : F_(i) : rb(i);
        }
        function dc(i) {
          if (!al(i))
            return Qw(i);
          var l = [];
          for (var h in Tt(i))
            St.call(i, h) && h != "constructor" && l.push(h);
          return l;
        }
        function ZT(i) {
          if (!Mt(i))
            return R0(i);
          var l = al(i), h = [];
          for (var y in i)
            y == "constructor" && (l || !St.call(i, y)) || h.push(y);
          return h;
        }
        function cc(i, l) {
          return i < l;
        }
        function M_(i, l) {
          var h = -1, y = Pn(i) ? j(i.length) : [];
          return Qa(i, function(x, O, B) {
            y[++h] = l(x, O, B);
          }), y;
        }
        function F_(i) {
          var l = Cc(i);
          return l.length == 1 && l[0][2] ? bm(l[0][0], l[0][1]) : function(h) {
            return h === i || uc(h, i, l);
          };
        }
        function q_(i, l) {
          return Lc(i) && mm(l) ? bm(ta(i), l) : function(h) {
            var y = qc(h, i);
            return y === n && y === l ? Nc(h, i) : tl(l, y, S | A);
          };
        }
        function ko(i, l, h, y, x) {
          i !== l && ic(l, function(O, B) {
            if (x || (x = new Rr()), Mt(O))
              JT(i, l, B, h, ko, y, x);
            else {
              var q = y ? y(Oc(i, B), O, B + "", i, l, x) : n;
              q === n && (q = O), rc(i, B, q);
            }
          }, Rn);
        }
        function JT(i, l, h, y, x, O, B) {
          var q = Oc(i, h), H = Oc(l, h), J = B.get(H);
          if (J) {
            rc(i, h, J);
            return;
          }
          var ee = O ? O(q, H, h + "", i, l, B) : n, te = ee === n;
          if (te) {
            var _e = $e(H), Ce = !_e && ri(H), ke = !_e && !Ce && us(H);
            ee = H, _e || Ce || ke ? $e(q) ? ee = q : Wt(q) ? ee = Dn(q) : Ce ? (te = !1, ee = X_(H, !0)) : ke ? (te = !1, ee = Z_(H, !0)) : ee = [] : sl(H) || Ci(H) ? (ee = q, Ci(q) ? ee = Ym(q) : (!Mt(q) || Ta(q)) && (ee = _m(H))) : te = !1;
          }
          te && (B.set(H, ee), x(ee, H, y, O, B), B.delete(H)), rc(i, h, ee);
        }
        function N_(i, l) {
          var h = i.length;
          if (h)
            return l += l < 0 ? h : 0, wa(l, h) ? i[l] : n;
        }
        function V_(i, l, h) {
          l.length ? l = Pt(l, function(O) {
            return $e(O) ? function(B) {
              return wi(B, O.length === 1 ? O[0] : O);
            } : O;
          }) : l = [Bn];
          var y = -1;
          l = Pt(l, $n(Be()));
          var x = M_(i, function(O, B, q) {
            var H = Pt(l, function(J) {
              return J(O);
            });
            return { criteria: H, index: ++y, value: O };
          });
          return xw(x, function(O, B) {
            return c0(O, B, h);
          });
        }
        function QT(i, l) {
          return H_(i, l, function(h, y) {
            return Nc(i, y);
          });
        }
        function H_(i, l, h) {
          for (var y = -1, x = l.length, O = {}; ++y < x; ) {
            var B = l[y], q = wi(i, B);
            h(q, B) && nl(O, ti(B, i), q);
          }
          return O;
        }
        function e0(i) {
          return function(l) {
            return wi(l, i);
          };
        }
        function fc(i, l, h, y) {
          var x = y ? Tw : Ji, O = -1, B = l.length, q = i;
          for (i === l && (l = Dn(l)), h && (q = Pt(i, $n(h))); ++O < B; )
            for (var H = 0, J = l[O], ee = h ? h(J) : J; (H = x(q, ee, H, y)) > -1; )
              q !== i && xo.call(q, H, 1), xo.call(i, H, 1);
          return i;
        }
        function $_(i, l) {
          for (var h = i ? l.length : 0, y = h - 1; h--; ) {
            var x = l[h];
            if (h == y || x !== O) {
              var O = x;
              wa(x) ? xo.call(i, x, 1) : mc(i, x);
            }
          }
          return i;
        }
        function hc(i, l) {
          return i + Lo(A_() * (l - i + 1));
        }
        function t0(i, l, h, y) {
          for (var x = -1, O = Zt(Io((l - i) / (h || 1)), 0), B = j(O); O--; )
            B[y ? O : ++x] = i, i += h;
          return B;
        }
        function pc(i, l) {
          var h = "";
          if (!i || l < 1 || l > me)
            return h;
          do
            l % 2 && (h += i), l = Lo(l / 2), l && (i += i);
          while (l);
          return h;
        }
        function Xe(i, l) {
          return Dc(vm(i, l, Bn), i + "");
        }
        function n0(i) {
          return x_(ds(i));
        }
        function r0(i, l) {
          var h = ds(i);
          return jo(h, Ai(l, 0, h.length));
        }
        function nl(i, l, h, y) {
          if (!Mt(i))
            return i;
          l = ti(l, i);
          for (var x = -1, O = l.length, B = O - 1, q = i; q != null && ++x < O; ) {
            var H = ta(l[x]), J = h;
            if (H === "__proto__" || H === "constructor" || H === "prototype")
              return i;
            if (x != B) {
              var ee = q[H];
              J = y ? y(ee, H, q) : n, J === n && (J = Mt(ee) ? ee : wa(l[x + 1]) ? [] : {});
            }
            Js(q, H, J), q = q[H];
          }
          return i;
        }
        var W_ = Eo ? function(i, l) {
          return Eo.set(i, l), i;
        } : Bn, a0 = Co ? function(i, l) {
          return Co(i, "toString", {
            configurable: !0,
            enumerable: !1,
            value: Hc(l),
            writable: !0
          });
        } : Bn;
        function i0(i) {
          return jo(ds(i));
        }
        function hr(i, l, h) {
          var y = -1, x = i.length;
          l < 0 && (l = -l > x ? 0 : x + l), h = h > x ? x : h, h < 0 && (h += x), x = l > h ? 0 : h - l >>> 0, l >>>= 0;
          for (var O = j(x); ++y < x; )
            O[y] = i[y + l];
          return O;
        }
        function s0(i, l) {
          var h;
          return Qa(i, function(y, x, O) {
            return h = l(y, x, O), !h;
          }), !!h;
        }
        function Mo(i, l, h) {
          var y = 0, x = i == null ? y : i.length;
          if (typeof l == "number" && l === l && x <= re) {
            for (; y < x; ) {
              var O = y + x >>> 1, B = i[O];
              B !== null && !Un(B) && (h ? B <= l : B < l) ? y = O + 1 : x = O;
            }
            return x;
          }
          return _c(i, l, Bn, h);
        }
        function _c(i, l, h, y) {
          var x = 0, O = i == null ? 0 : i.length;
          if (O === 0)
            return 0;
          l = h(l);
          for (var B = l !== l, q = l === null, H = Un(l), J = l === n; x < O; ) {
            var ee = Lo((x + O) / 2), te = h(i[ee]), _e = te !== n, Ce = te === null, ke = te === te, Ye = Un(te);
            if (B)
              var Me = y || ke;
            else J ? Me = ke && (y || _e) : q ? Me = ke && _e && (y || !Ce) : H ? Me = ke && _e && !Ce && (y || !Ye) : Ce || Ye ? Me = !1 : Me = y ? te <= l : te < l;
            Me ? x = ee + 1 : O = ee;
          }
          return pn(O, xe);
        }
        function U_(i, l) {
          for (var h = -1, y = i.length, x = 0, O = []; ++h < y; ) {
            var B = i[h], q = l ? l(B) : B;
            if (!h || !Br(q, H)) {
              var H = q;
              O[x++] = B === 0 ? 0 : B;
            }
          }
          return O;
        }
        function j_(i) {
          return typeof i == "number" ? i : Un(i) ? we : +i;
        }
        function Wn(i) {
          if (typeof i == "string")
            return i;
          if ($e(i))
            return Pt(i, Wn) + "";
          if (Un(i))
            return w_ ? w_.call(i) : "";
          var l = i + "";
          return l == "0" && 1 / i == -ve ? "-0" : l;
        }
        function ei(i, l, h) {
          var y = -1, x = _o, O = i.length, B = !0, q = [], H = q;
          if (h)
            B = !1, x = Ud;
          else if (O >= a) {
            var J = l ? null : b0(i);
            if (J)
              return bo(J);
            B = !1, x = Gs, H = new Si();
          } else
            H = l ? [] : q;
          e:
            for (; ++y < O; ) {
              var ee = i[y], te = l ? l(ee) : ee;
              if (ee = h || ee !== 0 ? ee : 0, B && te === te) {
                for (var _e = H.length; _e--; )
                  if (H[_e] === te)
                    continue e;
                l && H.push(te), q.push(ee);
              } else x(H, te, h) || (H !== q && H.push(te), q.push(ee));
            }
          return q;
        }
        function mc(i, l) {
          return l = ti(l, i), i = ym(i, l), i == null || delete i[ta(pr(l))];
        }
        function G_(i, l, h, y) {
          return nl(i, l, h(wi(i, l)), y);
        }
        function Fo(i, l, h, y) {
          for (var x = i.length, O = y ? x : -1; (y ? O-- : ++O < x) && l(i[O], O, i); )
            ;
          return h ? hr(i, y ? 0 : O, y ? O + 1 : x) : hr(i, y ? O + 1 : 0, y ? x : O);
        }
        function Y_(i, l) {
          var h = i;
          return h instanceof nt && (h = h.value()), jd(l, function(y, x) {
            return x.func.apply(x.thisArg, Xa([y], x.args));
          }, h);
        }
        function bc(i, l, h) {
          var y = i.length;
          if (y < 2)
            return y ? ei(i[0]) : [];
          for (var x = -1, O = j(y); ++x < y; )
            for (var B = i[x], q = -1; ++q < y; )
              q != x && (O[x] = Qs(O[x] || B, i[q], l, h));
          return ei(un(O, 1), l, h);
        }
        function z_(i, l, h) {
          for (var y = -1, x = i.length, O = l.length, B = {}; ++y < x; ) {
            var q = y < O ? l[y] : n;
            h(B, i[y], q);
          }
          return B;
        }
        function vc(i) {
          return Wt(i) ? i : [];
        }
        function yc(i) {
          return typeof i == "function" ? i : Bn;
        }
        function ti(i, l) {
          return $e(i) ? i : Lc(i, l) ? [i] : wm(bt(i));
        }
        var l0 = Xe;
        function ni(i, l, h) {
          var y = i.length;
          return h = h === n ? y : h, !l && h >= y ? i : hr(i, l, h);
        }
        var K_ = zw || function(i) {
          return on.clearTimeout(i);
        };
        function X_(i, l) {
          if (l)
            return i.slice();
          var h = i.length, y = b_ ? b_(h) : new i.constructor(h);
          return i.copy(y), y;
        }
        function gc(i) {
          var l = new i.constructor(i.byteLength);
          return new wo(l).set(new wo(i)), l;
        }
        function o0(i, l) {
          var h = l ? gc(i.buffer) : i.buffer;
          return new i.constructor(h, i.byteOffset, i.byteLength);
        }
        function u0(i) {
          var l = new i.constructor(i.source, Ws.exec(i));
          return l.lastIndex = i.lastIndex, l;
        }
        function d0(i) {
          return Zs ? Tt(Zs.call(i)) : {};
        }
        function Z_(i, l) {
          var h = l ? gc(i.buffer) : i.buffer;
          return new i.constructor(h, i.byteOffset, i.length);
        }
        function J_(i, l) {
          if (i !== l) {
            var h = i !== n, y = i === null, x = i === i, O = Un(i), B = l !== n, q = l === null, H = l === l, J = Un(l);
            if (!q && !J && !O && i > l || O && B && H && !q && !J || y && B && H || !h && H || !x)
              return 1;
            if (!y && !O && !J && i < l || J && h && x && !y && !O || q && h && x || !B && x || !H)
              return -1;
          }
          return 0;
        }
        function c0(i, l, h) {
          for (var y = -1, x = i.criteria, O = l.criteria, B = x.length, q = h.length; ++y < B; ) {
            var H = J_(x[y], O[y]);
            if (H) {
              if (y >= q)
                return H;
              var J = h[y];
              return H * (J == "desc" ? -1 : 1);
            }
          }
          return i.index - l.index;
        }
        function Q_(i, l, h, y) {
          for (var x = -1, O = i.length, B = h.length, q = -1, H = l.length, J = Zt(O - B, 0), ee = j(H + J), te = !y; ++q < H; )
            ee[q] = l[q];
          for (; ++x < B; )
            (te || x < O) && (ee[h[x]] = i[x]);
          for (; J--; )
            ee[q++] = i[x++];
          return ee;
        }
        function em(i, l, h, y) {
          for (var x = -1, O = i.length, B = -1, q = h.length, H = -1, J = l.length, ee = Zt(O - q, 0), te = j(ee + J), _e = !y; ++x < ee; )
            te[x] = i[x];
          for (var Ce = x; ++H < J; )
            te[Ce + H] = l[H];
          for (; ++B < q; )
            (_e || x < O) && (te[Ce + h[B]] = i[x++]);
          return te;
        }
        function Dn(i, l) {
          var h = -1, y = i.length;
          for (l || (l = j(y)); ++h < y; )
            l[h] = i[h];
          return l;
        }
        function ea(i, l, h, y) {
          var x = !h;
          h || (h = {});
          for (var O = -1, B = l.length; ++O < B; ) {
            var q = l[O], H = y ? y(h[q], i[q], q, h, i) : n;
            H === n && (H = i[q]), x ? ga(h, q, H) : Js(h, q, H);
          }
          return h;
        }
        function f0(i, l) {
          return ea(i, Ic(i), l);
        }
        function h0(i, l) {
          return ea(i, hm(i), l);
        }
        function qo(i, l) {
          return function(h, y) {
            var x = $e(h) ? vw : kT, O = l ? l() : {};
            return x(h, i, Be(y, 2), O);
          };
        }
        function ss(i) {
          return Xe(function(l, h) {
            var y = -1, x = h.length, O = x > 1 ? h[x - 1] : n, B = x > 2 ? h[2] : n;
            for (O = i.length > 3 && typeof O == "function" ? (x--, O) : n, B && Tn(h[0], h[1], B) && (O = x < 3 ? n : O, x = 1), l = Tt(l); ++y < x; ) {
              var q = h[y];
              q && i(l, q, y, O);
            }
            return l;
          });
        }
        function tm(i, l) {
          return function(h, y) {
            if (h == null)
              return h;
            if (!Pn(h))
              return i(h, y);
            for (var x = h.length, O = l ? x : -1, B = Tt(h); (l ? O-- : ++O < x) && y(B[O], O, B) !== !1; )
              ;
            return h;
          };
        }
        function nm(i) {
          return function(l, h, y) {
            for (var x = -1, O = Tt(l), B = y(l), q = B.length; q--; ) {
              var H = B[i ? q : ++x];
              if (h(O[H], H, O) === !1)
                break;
            }
            return l;
          };
        }
        function p0(i, l, h) {
          var y = l & w, x = rl(i);
          function O() {
            var B = this && this !== on && this instanceof O ? x : i;
            return B.apply(y ? h : this, arguments);
          }
          return O;
        }
        function rm(i) {
          return function(l) {
            l = bt(l);
            var h = Qi(l) ? Pr(l) : n, y = h ? h[0] : l.charAt(0), x = h ? ni(h, 1).join("") : l.slice(1);
            return y[i]() + x;
          };
        }
        function ls(i) {
          return function(l) {
            return jd(tb(eb(l).replace(aw, "")), i, "");
          };
        }
        function rl(i) {
          return function() {
            var l = arguments;
            switch (l.length) {
              case 0:
                return new i();
              case 1:
                return new i(l[0]);
              case 2:
                return new i(l[0], l[1]);
              case 3:
                return new i(l[0], l[1], l[2]);
              case 4:
                return new i(l[0], l[1], l[2], l[3]);
              case 5:
                return new i(l[0], l[1], l[2], l[3], l[4]);
              case 6:
                return new i(l[0], l[1], l[2], l[3], l[4], l[5]);
              case 7:
                return new i(l[0], l[1], l[2], l[3], l[4], l[5], l[6]);
            }
            var h = is(i.prototype), y = i.apply(h, l);
            return Mt(y) ? y : h;
          };
        }
        function _0(i, l, h) {
          var y = rl(i);
          function x() {
            for (var O = arguments.length, B = j(O), q = O, H = os(x); q--; )
              B[q] = arguments[q];
            var J = O < 3 && B[0] !== H && B[O - 1] !== H ? [] : Za(B, H);
            if (O -= J.length, O < h)
              return om(
                i,
                l,
                No,
                x.placeholder,
                n,
                B,
                J,
                n,
                n,
                h - O
              );
            var ee = this && this !== on && this instanceof x ? y : i;
            return Hn(ee, this, B);
          }
          return x;
        }
        function am(i) {
          return function(l, h, y) {
            var x = Tt(l);
            if (!Pn(l)) {
              var O = Be(h, 3);
              l = an(l), h = function(q) {
                return O(x[q], q, x);
              };
            }
            var B = i(l, h, y);
            return B > -1 ? x[O ? l[B] : B] : n;
          };
        }
        function im(i) {
          return Aa(function(l) {
            var h = l.length, y = h, x = cr.prototype.thru;
            for (i && l.reverse(); y--; ) {
              var O = l[y];
              if (typeof O != "function")
                throw new dr(o);
              if (x && !B && Wo(O) == "wrapper")
                var B = new cr([], !0);
            }
            for (y = B ? y : h; ++y < h; ) {
              O = l[y];
              var q = Wo(O), H = q == "wrapper" ? xc(O) : n;
              H && Ec(H[0]) && H[1] == (k | C | P | F) && !H[4].length && H[9] == 1 ? B = B[Wo(H[0])].apply(B, H[3]) : B = O.length == 1 && Ec(O) ? B[q]() : B.thru(O);
            }
            return function() {
              var J = arguments, ee = J[0];
              if (B && J.length == 1 && $e(ee))
                return B.plant(ee).value();
              for (var te = 0, _e = h ? l[te].apply(this, J) : ee; ++te < h; )
                _e = l[te].call(this, _e);
              return _e;
            };
          });
        }
        function No(i, l, h, y, x, O, B, q, H, J) {
          var ee = l & k, te = l & w, _e = l & T, Ce = l & (C | E), ke = l & D, Ye = _e ? n : rl(i);
          function Me() {
            for (var et = arguments.length, at = j(et), jn = et; jn--; )
              at[jn] = arguments[jn];
            if (Ce)
              var xn = os(Me), Gn = Iw(at, xn);
            if (y && (at = Q_(at, y, x, Ce)), O && (at = em(at, O, B, Ce)), et -= Gn, Ce && et < J) {
              var Ut = Za(at, xn);
              return om(
                i,
                l,
                No,
                Me.placeholder,
                h,
                at,
                Ut,
                q,
                H,
                J - et
              );
            }
            var kr = te ? h : this, Ca = _e ? kr[i] : i;
            return et = at.length, q ? at = k0(at, q) : ke && et > 1 && at.reverse(), ee && H < et && (at.length = H), this && this !== on && this instanceof Me && (Ca = Ye || rl(Ca)), Ca.apply(kr, at);
          }
          return Me;
        }
        function sm(i, l) {
          return function(h, y) {
            return WT(h, i, l(y), {});
          };
        }
        function Vo(i, l) {
          return function(h, y) {
            var x;
            if (h === n && y === n)
              return l;
            if (h !== n && (x = h), y !== n) {
              if (x === n)
                return y;
              typeof h == "string" || typeof y == "string" ? (h = Wn(h), y = Wn(y)) : (h = j_(h), y = j_(y)), x = i(h, y);
            }
            return x;
          };
        }
        function Sc(i) {
          return Aa(function(l) {
            return l = Pt(l, $n(Be())), Xe(function(h) {
              var y = this;
              return i(l, function(x) {
                return Hn(x, y, h);
              });
            });
          });
        }
        function Ho(i, l) {
          l = l === n ? " " : Wn(l);
          var h = l.length;
          if (h < 2)
            return h ? pc(l, i) : l;
          var y = pc(l, Io(i / es(l)));
          return Qi(l) ? ni(Pr(y), 0, i).join("") : y.slice(0, i);
        }
        function m0(i, l, h, y) {
          var x = l & w, O = rl(i);
          function B() {
            for (var q = -1, H = arguments.length, J = -1, ee = y.length, te = j(ee + H), _e = this && this !== on && this instanceof B ? O : i; ++J < ee; )
              te[J] = y[J];
            for (; H--; )
              te[J++] = arguments[++q];
            return Hn(_e, x ? h : this, te);
          }
          return B;
        }
        function lm(i) {
          return function(l, h, y) {
            return y && typeof y != "number" && Tn(l, h, y) && (h = y = n), l = xa(l), h === n ? (h = l, l = 0) : h = xa(h), y = y === n ? l < h ? 1 : -1 : xa(y), t0(l, h, y, i);
          };
        }
        function $o(i) {
          return function(l, h) {
            return typeof l == "string" && typeof h == "string" || (l = _r(l), h = _r(h)), i(l, h);
          };
        }
        function om(i, l, h, y, x, O, B, q, H, J) {
          var ee = l & C, te = ee ? B : n, _e = ee ? n : B, Ce = ee ? O : n, ke = ee ? n : O;
          l |= ee ? P : M, l &= ~(ee ? M : P), l & I || (l &= ~(w | T));
          var Ye = [
            i,
            l,
            x,
            Ce,
            te,
            ke,
            _e,
            q,
            H,
            J
          ], Me = h.apply(n, Ye);
          return Ec(i) && gm(Me, Ye), Me.placeholder = y, Sm(Me, i, l);
        }
        function Ac(i) {
          var l = Xt[i];
          return function(h, y) {
            if (h = _r(h), y = y == null ? 0 : pn(je(y), 292), y && S_(h)) {
              var x = (bt(h) + "e").split("e"), O = l(x[0] + "e" + (+x[1] + y));
              return x = (bt(O) + "e").split("e"), +(x[0] + "e" + (+x[1] - y));
            }
            return l(h);
          };
        }
        var b0 = rs && 1 / bo(new rs([, -0]))[1] == ve ? function(i) {
          return new rs(i);
        } : Uc;
        function um(i) {
          return function(l) {
            var h = _n(l);
            return h == Ee ? Jd(l) : h == qt ? Bw(l) : Cw(l, i(l));
          };
        }
        function Sa(i, l, h, y, x, O, B, q) {
          var H = l & T;
          if (!H && typeof i != "function")
            throw new dr(o);
          var J = y ? y.length : 0;
          if (J || (l &= ~(P | M), y = x = n), B = B === n ? B : Zt(je(B), 0), q = q === n ? q : je(q), J -= x ? x.length : 0, l & M) {
            var ee = y, te = x;
            y = x = n;
          }
          var _e = H ? n : xc(i), Ce = [
            i,
            l,
            h,
            y,
            x,
            ee,
            te,
            O,
            B,
            q
          ];
          if (_e && P0(Ce, _e), i = Ce[0], l = Ce[1], h = Ce[2], y = Ce[3], x = Ce[4], q = Ce[9] = Ce[9] === n ? H ? 0 : i.length : Zt(Ce[9] - J, 0), !q && l & (C | E) && (l &= ~(C | E)), !l || l == w)
            var ke = p0(i, l, h);
          else l == C || l == E ? ke = _0(i, l, q) : (l == P || l == (w | P)) && !x.length ? ke = m0(i, l, h, y) : ke = No.apply(n, Ce);
          var Ye = _e ? W_ : gm;
          return Sm(Ye(ke, Ce), i, l);
        }
        function dm(i, l, h, y) {
          return i === n || Br(i, ns[h]) && !St.call(y, h) ? l : i;
        }
        function cm(i, l, h, y, x, O) {
          return Mt(i) && Mt(l) && (O.set(l, i), ko(i, l, n, cm, O), O.delete(l)), i;
        }
        function v0(i) {
          return sl(i) ? n : i;
        }
        function fm(i, l, h, y, x, O) {
          var B = h & S, q = i.length, H = l.length;
          if (q != H && !(B && H > q))
            return !1;
          var J = O.get(i), ee = O.get(l);
          if (J && ee)
            return J == l && ee == i;
          var te = -1, _e = !0, Ce = h & A ? new Si() : n;
          for (O.set(i, l), O.set(l, i); ++te < q; ) {
            var ke = i[te], Ye = l[te];
            if (y)
              var Me = B ? y(Ye, ke, te, l, i, O) : y(ke, Ye, te, i, l, O);
            if (Me !== n) {
              if (Me)
                continue;
              _e = !1;
              break;
            }
            if (Ce) {
              if (!Gd(l, function(et, at) {
                if (!Gs(Ce, at) && (ke === et || x(ke, et, h, y, O)))
                  return Ce.push(at);
              })) {
                _e = !1;
                break;
              }
            } else if (!(ke === Ye || x(ke, Ye, h, y, O))) {
              _e = !1;
              break;
            }
          }
          return O.delete(i), O.delete(l), _e;
        }
        function y0(i, l, h, y, x, O, B) {
          switch (h) {
            case Nn:
              if (i.byteLength != l.byteLength || i.byteOffset != l.byteOffset)
                return !1;
              i = i.buffer, l = l.buffer;
            case ar:
              return !(i.byteLength != l.byteLength || !O(new wo(i), new wo(l)));
            case pe:
            case Ie:
            case Qe:
              return Br(+i, +l);
            case Ke:
              return i.name == l.name && i.message == l.message;
            case $t:
            case Cr:
              return i == l + "";
            case Ee:
              var q = Jd;
            case qt:
              var H = y & S;
              if (q || (q = bo), i.size != l.size && !H)
                return !1;
              var J = B.get(i);
              if (J)
                return J == l;
              y |= A, B.set(i, l);
              var ee = fm(q(i), q(l), y, x, O, B);
              return B.delete(i), ee;
            case nr:
              if (Zs)
                return Zs.call(i) == Zs.call(l);
          }
          return !1;
        }
        function g0(i, l, h, y, x, O) {
          var B = h & S, q = wc(i), H = q.length, J = wc(l), ee = J.length;
          if (H != ee && !B)
            return !1;
          for (var te = H; te--; ) {
            var _e = q[te];
            if (!(B ? _e in l : St.call(l, _e)))
              return !1;
          }
          var Ce = O.get(i), ke = O.get(l);
          if (Ce && ke)
            return Ce == l && ke == i;
          var Ye = !0;
          O.set(i, l), O.set(l, i);
          for (var Me = B; ++te < H; ) {
            _e = q[te];
            var et = i[_e], at = l[_e];
            if (y)
              var jn = B ? y(at, et, _e, l, i, O) : y(et, at, _e, i, l, O);
            if (!(jn === n ? et === at || x(et, at, h, y, O) : jn)) {
              Ye = !1;
              break;
            }
            Me || (Me = _e == "constructor");
          }
          if (Ye && !Me) {
            var xn = i.constructor, Gn = l.constructor;
            xn != Gn && "constructor" in i && "constructor" in l && !(typeof xn == "function" && xn instanceof xn && typeof Gn == "function" && Gn instanceof Gn) && (Ye = !1);
          }
          return O.delete(i), O.delete(l), Ye;
        }
        function Aa(i) {
          return Dc(vm(i, n, Im), i + "");
        }
        function wc(i) {
          return P_(i, an, Ic);
        }
        function Tc(i) {
          return P_(i, Rn, hm);
        }
        var xc = Eo ? function(i) {
          return Eo.get(i);
        } : Uc;
        function Wo(i) {
          for (var l = i.name + "", h = as[l], y = St.call(as, l) ? h.length : 0; y--; ) {
            var x = h[y], O = x.func;
            if (O == null || O == i)
              return x.name;
          }
          return l;
        }
        function os(i) {
          var l = St.call(L, "placeholder") ? L : i;
          return l.placeholder;
        }
        function Be() {
          var i = L.iteratee || $c;
          return i = i === $c ? k_ : i, arguments.length ? i(arguments[0], arguments[1]) : i;
        }
        function Uo(i, l) {
          var h = i.__data__;
          return L0(l) ? h[typeof l == "string" ? "string" : "hash"] : h.map;
        }
        function Cc(i) {
          for (var l = an(i), h = l.length; h--; ) {
            var y = l[h], x = i[y];
            l[h] = [y, x, mm(x)];
          }
          return l;
        }
        function Ti(i, l) {
          var h = Dw(i, l);
          return B_(h) ? h : n;
        }
        function S0(i) {
          var l = St.call(i, yi), h = i[yi];
          try {
            i[yi] = n;
            var y = !0;
          } catch {
          }
          var x = So.call(i);
          return y && (l ? i[yi] = h : delete i[yi]), x;
        }
        var Ic = ec ? function(i) {
          return i == null ? [] : (i = Tt(i), Ka(ec(i), function(l) {
            return y_.call(i, l);
          }));
        } : jc, hm = ec ? function(i) {
          for (var l = []; i; )
            Xa(l, Ic(i)), i = To(i);
          return l;
        } : jc, _n = wn;
        (tc && _n(new tc(new ArrayBuffer(1))) != Nn || zs && _n(new zs()) != Ee || nc && _n(nc.resolve()) != ft || rs && _n(new rs()) != qt || Ks && _n(new Ks()) != cn) && (_n = function(i) {
          var l = wn(i), h = l == Fe ? i.constructor : n, y = h ? xi(h) : "";
          if (y)
            switch (y) {
              case rT:
                return Nn;
              case aT:
                return Ee;
              case iT:
                return ft;
              case sT:
                return qt;
              case lT:
                return cn;
            }
          return l;
        });
        function A0(i, l, h) {
          for (var y = -1, x = h.length; ++y < x; ) {
            var O = h[y], B = O.size;
            switch (O.type) {
              case "drop":
                i += B;
                break;
              case "dropRight":
                l -= B;
                break;
              case "take":
                l = pn(l, i + B);
                break;
              case "takeRight":
                i = Zt(i, l - B);
                break;
            }
          }
          return { start: i, end: l };
        }
        function w0(i) {
          var l = i.match(mi);
          return l ? l[1].split(ba) : [];
        }
        function pm(i, l, h) {
          l = ti(l, i);
          for (var y = -1, x = l.length, O = !1; ++y < x; ) {
            var B = ta(l[y]);
            if (!(O = i != null && h(i, B)))
              break;
            i = i[B];
          }
          return O || ++y != x ? O : (x = i == null ? 0 : i.length, !!x && Zo(x) && wa(B, x) && ($e(i) || Ci(i)));
        }
        function T0(i) {
          var l = i.length, h = new i.constructor(l);
          return l && typeof i[0] == "string" && St.call(i, "index") && (h.index = i.index, h.input = i.input), h;
        }
        function _m(i) {
          return typeof i.constructor == "function" && !al(i) ? is(To(i)) : {};
        }
        function x0(i, l, h) {
          var y = i.constructor;
          switch (l) {
            case ar:
              return gc(i);
            case pe:
            case Ie:
              return new y(+i);
            case Nn:
              return o0(i, h);
            case Yr:
            case Vn:
            case zr:
            case ir:
            case sr:
            case ln:
            case On:
            case Lr:
            case Er:
              return Z_(i, h);
            case Ee:
              return new y();
            case Qe:
            case Cr:
              return new y(i);
            case $t:
              return u0(i);
            case qt:
              return new y();
            case nr:
              return d0(i);
          }
        }
        function C0(i, l) {
          var h = l.length;
          if (!h)
            return i;
          var y = h - 1;
          return l[y] = (h > 1 ? "& " : "") + l[y], l = l.join(h > 2 ? ", " : " "), i.replace(Jr, `{
/* [wrapped with ` + l + `] */
`);
        }
        function I0(i) {
          return $e(i) || Ci(i) || !!(g_ && i && i[g_]);
        }
        function wa(i, l) {
          var h = typeof i;
          return l = l ?? me, !!l && (h == "number" || h != "symbol" && le.test(i)) && i > -1 && i % 1 == 0 && i < l;
        }
        function Tn(i, l, h) {
          if (!Mt(h))
            return !1;
          var y = typeof l;
          return (y == "number" ? Pn(h) && wa(l, h.length) : y == "string" && l in h) ? Br(h[l], i) : !1;
        }
        function Lc(i, l) {
          if ($e(i))
            return !1;
          var h = typeof i;
          return h == "number" || h == "symbol" || h == "boolean" || i == null || Un(i) ? !0 : _i.test(i) || !zi.test(i) || l != null && i in Tt(l);
        }
        function L0(i) {
          var l = typeof i;
          return l == "string" || l == "number" || l == "symbol" || l == "boolean" ? i !== "__proto__" : i === null;
        }
        function Ec(i) {
          var l = Wo(i), h = L[l];
          if (typeof h != "function" || !(l in nt.prototype))
            return !1;
          if (i === h)
            return !0;
          var y = xc(h);
          return !!y && i === y[0];
        }
        function E0(i) {
          return !!m_ && m_ in i;
        }
        var O0 = yo ? Ta : Gc;
        function al(i) {
          var l = i && i.constructor, h = typeof l == "function" && l.prototype || ns;
          return i === h;
        }
        function mm(i) {
          return i === i && !Mt(i);
        }
        function bm(i, l) {
          return function(h) {
            return h == null ? !1 : h[i] === l && (l !== n || i in Tt(h));
          };
        }
        function D0(i) {
          var l = Ko(i, function(y) {
            return h.size === _ && h.clear(), y;
          }), h = l.cache;
          return l;
        }
        function P0(i, l) {
          var h = i[1], y = l[1], x = h | y, O = x < (w | T | k), B = y == k && h == C || y == k && h == F && i[7].length <= l[8] || y == (k | F) && l[7].length <= l[8] && h == C;
          if (!(O || B))
            return i;
          y & w && (i[2] = l[2], x |= h & w ? 0 : I);
          var q = l[3];
          if (q) {
            var H = i[3];
            i[3] = H ? Q_(H, q, l[4]) : q, i[4] = H ? Za(i[3], m) : l[4];
          }
          return q = l[5], q && (H = i[5], i[5] = H ? em(H, q, l[6]) : q, i[6] = H ? Za(i[5], m) : l[6]), q = l[7], q && (i[7] = q), y & k && (i[8] = i[8] == null ? l[8] : pn(i[8], l[8])), i[9] == null && (i[9] = l[9]), i[0] = l[0], i[1] = x, i;
        }
        function R0(i) {
          var l = [];
          if (i != null)
            for (var h in Tt(i))
              l.push(h);
          return l;
        }
        function B0(i) {
          return So.call(i);
        }
        function vm(i, l, h) {
          return l = Zt(l === n ? i.length - 1 : l, 0), function() {
            for (var y = arguments, x = -1, O = Zt(y.length - l, 0), B = j(O); ++x < O; )
              B[x] = y[l + x];
            x = -1;
            for (var q = j(l + 1); ++x < l; )
              q[x] = y[x];
            return q[l] = h(B), Hn(i, this, q);
          };
        }
        function ym(i, l) {
          return l.length < 2 ? i : wi(i, hr(l, 0, -1));
        }
        function k0(i, l) {
          for (var h = i.length, y = pn(l.length, h), x = Dn(i); y--; ) {
            var O = l[y];
            i[y] = wa(O, h) ? x[O] : n;
          }
          return i;
        }
        function Oc(i, l) {
          if (!(l === "constructor" && typeof i[l] == "function") && l != "__proto__")
            return i[l];
        }
        var gm = Am(W_), il = Xw || function(i, l) {
          return on.setTimeout(i, l);
        }, Dc = Am(a0);
        function Sm(i, l, h) {
          var y = l + "";
          return Dc(i, C0(y, M0(w0(y), h)));
        }
        function Am(i) {
          var l = 0, h = 0;
          return function() {
            var y = eT(), x = ne - (y - h);
            if (h = y, x > 0) {
              if (++l >= z)
                return arguments[0];
            } else
              l = 0;
            return i.apply(n, arguments);
          };
        }
        function jo(i, l) {
          var h = -1, y = i.length, x = y - 1;
          for (l = l === n ? y : l; ++h < l; ) {
            var O = hc(h, x), B = i[O];
            i[O] = i[h], i[h] = B;
          }
          return i.length = l, i;
        }
        var wm = D0(function(i) {
          var l = [];
          return i.charCodeAt(0) === 46 && l.push(""), i.replace(Ki, function(h, y, x, O) {
            l.push(x ? O.replace(co, "$1") : y || h);
          }), l;
        });
        function ta(i) {
          if (typeof i == "string" || Un(i))
            return i;
          var l = i + "";
          return l == "0" && 1 / i == -ve ? "-0" : l;
        }
        function xi(i) {
          if (i != null) {
            try {
              return go.call(i);
            } catch {
            }
            try {
              return i + "";
            } catch {
            }
          }
          return "";
        }
        function M0(i, l) {
          return ur(Re, function(h) {
            var y = "_." + h[0];
            l & h[1] && !_o(i, y) && i.push(y);
          }), i.sort();
        }
        function Tm(i) {
          if (i instanceof nt)
            return i.clone();
          var l = new cr(i.__wrapped__, i.__chain__);
          return l.__actions__ = Dn(i.__actions__), l.__index__ = i.__index__, l.__values__ = i.__values__, l;
        }
        function F0(i, l, h) {
          (h ? Tn(i, l, h) : l === n) ? l = 1 : l = Zt(je(l), 0);
          var y = i == null ? 0 : i.length;
          if (!y || l < 1)
            return [];
          for (var x = 0, O = 0, B = j(Io(y / l)); x < y; )
            B[O++] = hr(i, x, x += l);
          return B;
        }
        function q0(i) {
          for (var l = -1, h = i == null ? 0 : i.length, y = 0, x = []; ++l < h; ) {
            var O = i[l];
            O && (x[y++] = O);
          }
          return x;
        }
        function N0() {
          var i = arguments.length;
          if (!i)
            return [];
          for (var l = j(i - 1), h = arguments[0], y = i; y--; )
            l[y - 1] = arguments[y];
          return Xa($e(h) ? Dn(h) : [h], un(l, 1));
        }
        var V0 = Xe(function(i, l) {
          return Wt(i) ? Qs(i, un(l, 1, Wt, !0)) : [];
        }), H0 = Xe(function(i, l) {
          var h = pr(l);
          return Wt(h) && (h = n), Wt(i) ? Qs(i, un(l, 1, Wt, !0), Be(h, 2)) : [];
        }), $0 = Xe(function(i, l) {
          var h = pr(l);
          return Wt(h) && (h = n), Wt(i) ? Qs(i, un(l, 1, Wt, !0), n, h) : [];
        });
        function W0(i, l, h) {
          var y = i == null ? 0 : i.length;
          return y ? (l = h || l === n ? 1 : je(l), hr(i, l < 0 ? 0 : l, y)) : [];
        }
        function U0(i, l, h) {
          var y = i == null ? 0 : i.length;
          return y ? (l = h || l === n ? 1 : je(l), l = y - l, hr(i, 0, l < 0 ? 0 : l)) : [];
        }
        function j0(i, l) {
          return i && i.length ? Fo(i, Be(l, 3), !0, !0) : [];
        }
        function G0(i, l) {
          return i && i.length ? Fo(i, Be(l, 3), !0) : [];
        }
        function Y0(i, l, h, y) {
          var x = i == null ? 0 : i.length;
          return x ? (h && typeof h != "number" && Tn(i, l, h) && (h = 0, y = x), NT(i, l, h, y)) : [];
        }
        function xm(i, l, h) {
          var y = i == null ? 0 : i.length;
          if (!y)
            return -1;
          var x = h == null ? 0 : je(h);
          return x < 0 && (x = Zt(y + x, 0)), mo(i, Be(l, 3), x);
        }
        function Cm(i, l, h) {
          var y = i == null ? 0 : i.length;
          if (!y)
            return -1;
          var x = y - 1;
          return h !== n && (x = je(h), x = h < 0 ? Zt(y + x, 0) : pn(x, y - 1)), mo(i, Be(l, 3), x, !0);
        }
        function Im(i) {
          var l = i == null ? 0 : i.length;
          return l ? un(i, 1) : [];
        }
        function z0(i) {
          var l = i == null ? 0 : i.length;
          return l ? un(i, ve) : [];
        }
        function K0(i, l) {
          var h = i == null ? 0 : i.length;
          return h ? (l = l === n ? 1 : je(l), un(i, l)) : [];
        }
        function X0(i) {
          for (var l = -1, h = i == null ? 0 : i.length, y = {}; ++l < h; ) {
            var x = i[l];
            y[x[0]] = x[1];
          }
          return y;
        }
        function Lm(i) {
          return i && i.length ? i[0] : n;
        }
        function Z0(i, l, h) {
          var y = i == null ? 0 : i.length;
          if (!y)
            return -1;
          var x = h == null ? 0 : je(h);
          return x < 0 && (x = Zt(y + x, 0)), Ji(i, l, x);
        }
        function J0(i) {
          var l = i == null ? 0 : i.length;
          return l ? hr(i, 0, -1) : [];
        }
        var Q0 = Xe(function(i) {
          var l = Pt(i, vc);
          return l.length && l[0] === i[0] ? oc(l) : [];
        }), ex = Xe(function(i) {
          var l = pr(i), h = Pt(i, vc);
          return l === pr(h) ? l = n : h.pop(), h.length && h[0] === i[0] ? oc(h, Be(l, 2)) : [];
        }), tx = Xe(function(i) {
          var l = pr(i), h = Pt(i, vc);
          return l = typeof l == "function" ? l : n, l && h.pop(), h.length && h[0] === i[0] ? oc(h, n, l) : [];
        });
        function nx(i, l) {
          return i == null ? "" : Jw.call(i, l);
        }
        function pr(i) {
          var l = i == null ? 0 : i.length;
          return l ? i[l - 1] : n;
        }
        function rx(i, l, h) {
          var y = i == null ? 0 : i.length;
          if (!y)
            return -1;
          var x = y;
          return h !== n && (x = je(h), x = x < 0 ? Zt(y + x, 0) : pn(x, y - 1)), l === l ? Mw(i, l, x) : mo(i, o_, x, !0);
        }
        function ax(i, l) {
          return i && i.length ? N_(i, je(l)) : n;
        }
        var ix = Xe(Em);
        function Em(i, l) {
          return i && i.length && l && l.length ? fc(i, l) : i;
        }
        function sx(i, l, h) {
          return i && i.length && l && l.length ? fc(i, l, Be(h, 2)) : i;
        }
        function lx(i, l, h) {
          return i && i.length && l && l.length ? fc(i, l, n, h) : i;
        }
        var ox = Aa(function(i, l) {
          var h = i == null ? 0 : i.length, y = ac(i, l);
          return $_(i, Pt(l, function(x) {
            return wa(x, h) ? +x : x;
          }).sort(J_)), y;
        });
        function ux(i, l) {
          var h = [];
          if (!(i && i.length))
            return h;
          var y = -1, x = [], O = i.length;
          for (l = Be(l, 3); ++y < O; ) {
            var B = i[y];
            l(B, y, i) && (h.push(B), x.push(y));
          }
          return $_(i, x), h;
        }
        function Pc(i) {
          return i == null ? i : nT.call(i);
        }
        function dx(i, l, h) {
          var y = i == null ? 0 : i.length;
          return y ? (h && typeof h != "number" && Tn(i, l, h) ? (l = 0, h = y) : (l = l == null ? 0 : je(l), h = h === n ? y : je(h)), hr(i, l, h)) : [];
        }
        function cx(i, l) {
          return Mo(i, l);
        }
        function fx(i, l, h) {
          return _c(i, l, Be(h, 2));
        }
        function hx(i, l) {
          var h = i == null ? 0 : i.length;
          if (h) {
            var y = Mo(i, l);
            if (y < h && Br(i[y], l))
              return y;
          }
          return -1;
        }
        function px(i, l) {
          return Mo(i, l, !0);
        }
        function _x(i, l, h) {
          return _c(i, l, Be(h, 2), !0);
        }
        function mx(i, l) {
          var h = i == null ? 0 : i.length;
          if (h) {
            var y = Mo(i, l, !0) - 1;
            if (Br(i[y], l))
              return y;
          }
          return -1;
        }
        function bx(i) {
          return i && i.length ? U_(i) : [];
        }
        function vx(i, l) {
          return i && i.length ? U_(i, Be(l, 2)) : [];
        }
        function yx(i) {
          var l = i == null ? 0 : i.length;
          return l ? hr(i, 1, l) : [];
        }
        function gx(i, l, h) {
          return i && i.length ? (l = h || l === n ? 1 : je(l), hr(i, 0, l < 0 ? 0 : l)) : [];
        }
        function Sx(i, l, h) {
          var y = i == null ? 0 : i.length;
          return y ? (l = h || l === n ? 1 : je(l), l = y - l, hr(i, l < 0 ? 0 : l, y)) : [];
        }
        function Ax(i, l) {
          return i && i.length ? Fo(i, Be(l, 3), !1, !0) : [];
        }
        function wx(i, l) {
          return i && i.length ? Fo(i, Be(l, 3)) : [];
        }
        var Tx = Xe(function(i) {
          return ei(un(i, 1, Wt, !0));
        }), xx = Xe(function(i) {
          var l = pr(i);
          return Wt(l) && (l = n), ei(un(i, 1, Wt, !0), Be(l, 2));
        }), Cx = Xe(function(i) {
          var l = pr(i);
          return l = typeof l == "function" ? l : n, ei(un(i, 1, Wt, !0), n, l);
        });
        function Ix(i) {
          return i && i.length ? ei(i) : [];
        }
        function Lx(i, l) {
          return i && i.length ? ei(i, Be(l, 2)) : [];
        }
        function Ex(i, l) {
          return l = typeof l == "function" ? l : n, i && i.length ? ei(i, n, l) : [];
        }
        function Rc(i) {
          if (!(i && i.length))
            return [];
          var l = 0;
          return i = Ka(i, function(h) {
            if (Wt(h))
              return l = Zt(h.length, l), !0;
          }), Xd(l, function(h) {
            return Pt(i, Yd(h));
          });
        }
        function Om(i, l) {
          if (!(i && i.length))
            return [];
          var h = Rc(i);
          return l == null ? h : Pt(h, function(y) {
            return Hn(l, n, y);
          });
        }
        var Ox = Xe(function(i, l) {
          return Wt(i) ? Qs(i, l) : [];
        }), Dx = Xe(function(i) {
          return bc(Ka(i, Wt));
        }), Px = Xe(function(i) {
          var l = pr(i);
          return Wt(l) && (l = n), bc(Ka(i, Wt), Be(l, 2));
        }), Rx = Xe(function(i) {
          var l = pr(i);
          return l = typeof l == "function" ? l : n, bc(Ka(i, Wt), n, l);
        }), Bx = Xe(Rc);
        function kx(i, l) {
          return z_(i || [], l || [], Js);
        }
        function Mx(i, l) {
          return z_(i || [], l || [], nl);
        }
        var Fx = Xe(function(i) {
          var l = i.length, h = l > 1 ? i[l - 1] : n;
          return h = typeof h == "function" ? (i.pop(), h) : n, Om(i, h);
        });
        function Dm(i) {
          var l = L(i);
          return l.__chain__ = !0, l;
        }
        function qx(i, l) {
          return l(i), i;
        }
        function Go(i, l) {
          return l(i);
        }
        var Nx = Aa(function(i) {
          var l = i.length, h = l ? i[0] : 0, y = this.__wrapped__, x = function(O) {
            return ac(O, i);
          };
          return l > 1 || this.__actions__.length || !(y instanceof nt) || !wa(h) ? this.thru(x) : (y = y.slice(h, +h + (l ? 1 : 0)), y.__actions__.push({
            func: Go,
            args: [x],
            thisArg: n
          }), new cr(y, this.__chain__).thru(function(O) {
            return l && !O.length && O.push(n), O;
          }));
        });
        function Vx() {
          return Dm(this);
        }
        function Hx() {
          return new cr(this.value(), this.__chain__);
        }
        function $x() {
          this.__values__ === n && (this.__values__ = jm(this.value()));
          var i = this.__index__ >= this.__values__.length, l = i ? n : this.__values__[this.__index__++];
          return { done: i, value: l };
        }
        function Wx() {
          return this;
        }
        function Ux(i) {
          for (var l, h = this; h instanceof Do; ) {
            var y = Tm(h);
            y.__index__ = 0, y.__values__ = n, l ? x.__wrapped__ = y : l = y;
            var x = y;
            h = h.__wrapped__;
          }
          return x.__wrapped__ = i, l;
        }
        function jx() {
          var i = this.__wrapped__;
          if (i instanceof nt) {
            var l = i;
            return this.__actions__.length && (l = new nt(this)), l = l.reverse(), l.__actions__.push({
              func: Go,
              args: [Pc],
              thisArg: n
            }), new cr(l, this.__chain__);
          }
          return this.thru(Pc);
        }
        function Gx() {
          return Y_(this.__wrapped__, this.__actions__);
        }
        var Yx = qo(function(i, l, h) {
          St.call(i, h) ? ++i[h] : ga(i, h, 1);
        });
        function zx(i, l, h) {
          var y = $e(i) ? s_ : qT;
          return h && Tn(i, l, h) && (l = n), y(i, Be(l, 3));
        }
        function Kx(i, l) {
          var h = $e(i) ? Ka : O_;
          return h(i, Be(l, 3));
        }
        var Xx = am(xm), Zx = am(Cm);
        function Jx(i, l) {
          return un(Yo(i, l), 1);
        }
        function Qx(i, l) {
          return un(Yo(i, l), ve);
        }
        function eC(i, l, h) {
          return h = h === n ? 1 : je(h), un(Yo(i, l), h);
        }
        function Pm(i, l) {
          var h = $e(i) ? ur : Qa;
          return h(i, Be(l, 3));
        }
        function Rm(i, l) {
          var h = $e(i) ? yw : E_;
          return h(i, Be(l, 3));
        }
        var tC = qo(function(i, l, h) {
          St.call(i, h) ? i[h].push(l) : ga(i, h, [l]);
        });
        function nC(i, l, h, y) {
          i = Pn(i) ? i : ds(i), h = h && !y ? je(h) : 0;
          var x = i.length;
          return h < 0 && (h = Zt(x + h, 0)), Jo(i) ? h <= x && i.indexOf(l, h) > -1 : !!x && Ji(i, l, h) > -1;
        }
        var rC = Xe(function(i, l, h) {
          var y = -1, x = typeof l == "function", O = Pn(i) ? j(i.length) : [];
          return Qa(i, function(B) {
            O[++y] = x ? Hn(l, B, h) : el(B, l, h);
          }), O;
        }), aC = qo(function(i, l, h) {
          ga(i, h, l);
        });
        function Yo(i, l) {
          var h = $e(i) ? Pt : M_;
          return h(i, Be(l, 3));
        }
        function iC(i, l, h, y) {
          return i == null ? [] : ($e(l) || (l = l == null ? [] : [l]), h = y ? n : h, $e(h) || (h = h == null ? [] : [h]), V_(i, l, h));
        }
        var sC = qo(function(i, l, h) {
          i[h ? 0 : 1].push(l);
        }, function() {
          return [[], []];
        });
        function lC(i, l, h) {
          var y = $e(i) ? jd : d_, x = arguments.length < 3;
          return y(i, Be(l, 4), h, x, Qa);
        }
        function oC(i, l, h) {
          var y = $e(i) ? gw : d_, x = arguments.length < 3;
          return y(i, Be(l, 4), h, x, E_);
        }
        function uC(i, l) {
          var h = $e(i) ? Ka : O_;
          return h(i, Xo(Be(l, 3)));
        }
        function dC(i) {
          var l = $e(i) ? x_ : n0;
          return l(i);
        }
        function cC(i, l, h) {
          (h ? Tn(i, l, h) : l === n) ? l = 1 : l = je(l);
          var y = $e(i) ? RT : r0;
          return y(i, l);
        }
        function fC(i) {
          var l = $e(i) ? BT : i0;
          return l(i);
        }
        function hC(i) {
          if (i == null)
            return 0;
          if (Pn(i))
            return Jo(i) ? es(i) : i.length;
          var l = _n(i);
          return l == Ee || l == qt ? i.size : dc(i).length;
        }
        function pC(i, l, h) {
          var y = $e(i) ? Gd : s0;
          return h && Tn(i, l, h) && (l = n), y(i, Be(l, 3));
        }
        var _C = Xe(function(i, l) {
          if (i == null)
            return [];
          var h = l.length;
          return h > 1 && Tn(i, l[0], l[1]) ? l = [] : h > 2 && Tn(l[0], l[1], l[2]) && (l = [l[0]]), V_(i, un(l, 1), []);
        }), zo = Kw || function() {
          return on.Date.now();
        };
        function mC(i, l) {
          if (typeof l != "function")
            throw new dr(o);
          return i = je(i), function() {
            if (--i < 1)
              return l.apply(this, arguments);
          };
        }
        function Bm(i, l, h) {
          return l = h ? n : l, l = i && l == null ? i.length : l, Sa(i, k, n, n, n, n, l);
        }
        function km(i, l) {
          var h;
          if (typeof l != "function")
            throw new dr(o);
          return i = je(i), function() {
            return --i > 0 && (h = l.apply(this, arguments)), i <= 1 && (l = n), h;
          };
        }
        var Bc = Xe(function(i, l, h) {
          var y = w;
          if (h.length) {
            var x = Za(h, os(Bc));
            y |= P;
          }
          return Sa(i, y, l, h, x);
        }), Mm = Xe(function(i, l, h) {
          var y = w | T;
          if (h.length) {
            var x = Za(h, os(Mm));
            y |= P;
          }
          return Sa(l, y, i, h, x);
        });
        function Fm(i, l, h) {
          l = h ? n : l;
          var y = Sa(i, C, n, n, n, n, n, l);
          return y.placeholder = Fm.placeholder, y;
        }
        function qm(i, l, h) {
          l = h ? n : l;
          var y = Sa(i, E, n, n, n, n, n, l);
          return y.placeholder = qm.placeholder, y;
        }
        function Nm(i, l, h) {
          var y, x, O, B, q, H, J = 0, ee = !1, te = !1, _e = !0;
          if (typeof i != "function")
            throw new dr(o);
          l = _r(l) || 0, Mt(h) && (ee = !!h.leading, te = "maxWait" in h, O = te ? Zt(_r(h.maxWait) || 0, l) : O, _e = "trailing" in h ? !!h.trailing : _e);
          function Ce(Ut) {
            var kr = y, Ca = x;
            return y = x = n, J = Ut, B = i.apply(Ca, kr), B;
          }
          function ke(Ut) {
            return J = Ut, q = il(et, l), ee ? Ce(Ut) : B;
          }
          function Ye(Ut) {
            var kr = Ut - H, Ca = Ut - J, ab = l - kr;
            return te ? pn(ab, O - Ca) : ab;
          }
          function Me(Ut) {
            var kr = Ut - H, Ca = Ut - J;
            return H === n || kr >= l || kr < 0 || te && Ca >= O;
          }
          function et() {
            var Ut = zo();
            if (Me(Ut))
              return at(Ut);
            q = il(et, Ye(Ut));
          }
          function at(Ut) {
            return q = n, _e && y ? Ce(Ut) : (y = x = n, B);
          }
          function jn() {
            q !== n && K_(q), J = 0, y = H = x = q = n;
          }
          function xn() {
            return q === n ? B : at(zo());
          }
          function Gn() {
            var Ut = zo(), kr = Me(Ut);
            if (y = arguments, x = this, H = Ut, kr) {
              if (q === n)
                return ke(H);
              if (te)
                return K_(q), q = il(et, l), Ce(H);
            }
            return q === n && (q = il(et, l)), B;
          }
          return Gn.cancel = jn, Gn.flush = xn, Gn;
        }
        var bC = Xe(function(i, l) {
          return L_(i, 1, l);
        }), vC = Xe(function(i, l, h) {
          return L_(i, _r(l) || 0, h);
        });
        function yC(i) {
          return Sa(i, D);
        }
        function Ko(i, l) {
          if (typeof i != "function" || l != null && typeof l != "function")
            throw new dr(o);
          var h = function() {
            var y = arguments, x = l ? l.apply(this, y) : y[0], O = h.cache;
            if (O.has(x))
              return O.get(x);
            var B = i.apply(this, y);
            return h.cache = O.set(x, B) || O, B;
          };
          return h.cache = new (Ko.Cache || ya)(), h;
        }
        Ko.Cache = ya;
        function Xo(i) {
          if (typeof i != "function")
            throw new dr(o);
          return function() {
            var l = arguments;
            switch (l.length) {
              case 0:
                return !i.call(this);
              case 1:
                return !i.call(this, l[0]);
              case 2:
                return !i.call(this, l[0], l[1]);
              case 3:
                return !i.call(this, l[0], l[1], l[2]);
            }
            return !i.apply(this, l);
          };
        }
        function gC(i) {
          return km(2, i);
        }
        var SC = l0(function(i, l) {
          l = l.length == 1 && $e(l[0]) ? Pt(l[0], $n(Be())) : Pt(un(l, 1), $n(Be()));
          var h = l.length;
          return Xe(function(y) {
            for (var x = -1, O = pn(y.length, h); ++x < O; )
              y[x] = l[x].call(this, y[x]);
            return Hn(i, this, y);
          });
        }), kc = Xe(function(i, l) {
          var h = Za(l, os(kc));
          return Sa(i, P, n, l, h);
        }), Vm = Xe(function(i, l) {
          var h = Za(l, os(Vm));
          return Sa(i, M, n, l, h);
        }), AC = Aa(function(i, l) {
          return Sa(i, F, n, n, n, l);
        });
        function wC(i, l) {
          if (typeof i != "function")
            throw new dr(o);
          return l = l === n ? l : je(l), Xe(i, l);
        }
        function TC(i, l) {
          if (typeof i != "function")
            throw new dr(o);
          return l = l == null ? 0 : Zt(je(l), 0), Xe(function(h) {
            var y = h[l], x = ni(h, 0, l);
            return y && Xa(x, y), Hn(i, this, x);
          });
        }
        function xC(i, l, h) {
          var y = !0, x = !0;
          if (typeof i != "function")
            throw new dr(o);
          return Mt(h) && (y = "leading" in h ? !!h.leading : y, x = "trailing" in h ? !!h.trailing : x), Nm(i, l, {
            leading: y,
            maxWait: l,
            trailing: x
          });
        }
        function CC(i) {
          return Bm(i, 1);
        }
        function IC(i, l) {
          return kc(yc(l), i);
        }
        function LC() {
          if (!arguments.length)
            return [];
          var i = arguments[0];
          return $e(i) ? i : [i];
        }
        function EC(i) {
          return fr(i, g);
        }
        function OC(i, l) {
          return l = typeof l == "function" ? l : n, fr(i, g, l);
        }
        function DC(i) {
          return fr(i, b | g);
        }
        function PC(i, l) {
          return l = typeof l == "function" ? l : n, fr(i, b | g, l);
        }
        function RC(i, l) {
          return l == null || I_(i, l, an(l));
        }
        function Br(i, l) {
          return i === l || i !== i && l !== l;
        }
        var BC = $o(lc), kC = $o(function(i, l) {
          return i >= l;
        }), Ci = R_(/* @__PURE__ */ function() {
          return arguments;
        }()) ? R_ : function(i) {
          return Vt(i) && St.call(i, "callee") && !y_.call(i, "callee");
        }, $e = j.isArray, MC = e_ ? $n(e_) : UT;
        function Pn(i) {
          return i != null && Zo(i.length) && !Ta(i);
        }
        function Wt(i) {
          return Vt(i) && Pn(i);
        }
        function FC(i) {
          return i === !0 || i === !1 || Vt(i) && wn(i) == pe;
        }
        var ri = Zw || Gc, qC = t_ ? $n(t_) : jT;
        function NC(i) {
          return Vt(i) && i.nodeType === 1 && !sl(i);
        }
        function VC(i) {
          if (i == null)
            return !0;
          if (Pn(i) && ($e(i) || typeof i == "string" || typeof i.splice == "function" || ri(i) || us(i) || Ci(i)))
            return !i.length;
          var l = _n(i);
          if (l == Ee || l == qt)
            return !i.size;
          if (al(i))
            return !dc(i).length;
          for (var h in i)
            if (St.call(i, h))
              return !1;
          return !0;
        }
        function HC(i, l) {
          return tl(i, l);
        }
        function $C(i, l, h) {
          h = typeof h == "function" ? h : n;
          var y = h ? h(i, l) : n;
          return y === n ? tl(i, l, n, h) : !!y;
        }
        function Mc(i) {
          if (!Vt(i))
            return !1;
          var l = wn(i);
          return l == Ke || l == He || typeof i.message == "string" && typeof i.name == "string" && !sl(i);
        }
        function WC(i) {
          return typeof i == "number" && S_(i);
        }
        function Ta(i) {
          if (!Mt(i))
            return !1;
          var l = wn(i);
          return l == Je || l == ut || l == se || l == Dt;
        }
        function Hm(i) {
          return typeof i == "number" && i == je(i);
        }
        function Zo(i) {
          return typeof i == "number" && i > -1 && i % 1 == 0 && i <= me;
        }
        function Mt(i) {
          var l = typeof i;
          return i != null && (l == "object" || l == "function");
        }
        function Vt(i) {
          return i != null && typeof i == "object";
        }
        var $m = n_ ? $n(n_) : YT;
        function UC(i, l) {
          return i === l || uc(i, l, Cc(l));
        }
        function jC(i, l, h) {
          return h = typeof h == "function" ? h : n, uc(i, l, Cc(l), h);
        }
        function GC(i) {
          return Wm(i) && i != +i;
        }
        function YC(i) {
          if (O0(i))
            throw new Ve(s);
          return B_(i);
        }
        function zC(i) {
          return i === null;
        }
        function KC(i) {
          return i == null;
        }
        function Wm(i) {
          return typeof i == "number" || Vt(i) && wn(i) == Qe;
        }
        function sl(i) {
          if (!Vt(i) || wn(i) != Fe)
            return !1;
          var l = To(i);
          if (l === null)
            return !0;
          var h = St.call(l, "constructor") && l.constructor;
          return typeof h == "function" && h instanceof h && go.call(h) == jw;
        }
        var Fc = r_ ? $n(r_) : zT;
        function XC(i) {
          return Hm(i) && i >= -me && i <= me;
        }
        var Um = a_ ? $n(a_) : KT;
        function Jo(i) {
          return typeof i == "string" || !$e(i) && Vt(i) && wn(i) == Cr;
        }
        function Un(i) {
          return typeof i == "symbol" || Vt(i) && wn(i) == nr;
        }
        var us = i_ ? $n(i_) : XT;
        function ZC(i) {
          return i === n;
        }
        function JC(i) {
          return Vt(i) && _n(i) == cn;
        }
        function QC(i) {
          return Vt(i) && wn(i) == rr;
        }
        var e1 = $o(cc), t1 = $o(function(i, l) {
          return i <= l;
        });
        function jm(i) {
          if (!i)
            return [];
          if (Pn(i))
            return Jo(i) ? Pr(i) : Dn(i);
          if (Ys && i[Ys])
            return Rw(i[Ys]());
          var l = _n(i), h = l == Ee ? Jd : l == qt ? bo : ds;
          return h(i);
        }
        function xa(i) {
          if (!i)
            return i === 0 ? i : 0;
          if (i = _r(i), i === ve || i === -ve) {
            var l = i < 0 ? -1 : 1;
            return l * Ne;
          }
          return i === i ? i : 0;
        }
        function je(i) {
          var l = xa(i), h = l % 1;
          return l === l ? h ? l - h : l : 0;
        }
        function Gm(i) {
          return i ? Ai(je(i), 0, oe) : 0;
        }
        function _r(i) {
          if (typeof i == "number")
            return i;
          if (Un(i))
            return we;
          if (Mt(i)) {
            var l = typeof i.valueOf == "function" ? i.valueOf() : i;
            i = Mt(l) ? l + "" : l;
          }
          if (typeof i != "string")
            return i === 0 ? i : +i;
          i = c_(i);
          var h = Md.test(i);
          return h || N.test(i) ? mw(i.slice(2), h ? 2 : 8) : ho.test(i) ? we : +i;
        }
        function Ym(i) {
          return ea(i, Rn(i));
        }
        function n1(i) {
          return i ? Ai(je(i), -me, me) : i === 0 ? i : 0;
        }
        function bt(i) {
          return i == null ? "" : Wn(i);
        }
        var r1 = ss(function(i, l) {
          if (al(l) || Pn(l)) {
            ea(l, an(l), i);
            return;
          }
          for (var h in l)
            St.call(l, h) && Js(i, h, l[h]);
        }), zm = ss(function(i, l) {
          ea(l, Rn(l), i);
        }), Qo = ss(function(i, l, h, y) {
          ea(l, Rn(l), i, y);
        }), a1 = ss(function(i, l, h, y) {
          ea(l, an(l), i, y);
        }), i1 = Aa(ac);
        function s1(i, l) {
          var h = is(i);
          return l == null ? h : C_(h, l);
        }
        var l1 = Xe(function(i, l) {
          i = Tt(i);
          var h = -1, y = l.length, x = y > 2 ? l[2] : n;
          for (x && Tn(l[0], l[1], x) && (y = 1); ++h < y; )
            for (var O = l[h], B = Rn(O), q = -1, H = B.length; ++q < H; ) {
              var J = B[q], ee = i[J];
              (ee === n || Br(ee, ns[J]) && !St.call(i, J)) && (i[J] = O[J]);
            }
          return i;
        }), o1 = Xe(function(i) {
          return i.push(n, cm), Hn(Km, n, i);
        });
        function u1(i, l) {
          return l_(i, Be(l, 3), Qr);
        }
        function d1(i, l) {
          return l_(i, Be(l, 3), sc);
        }
        function c1(i, l) {
          return i == null ? i : ic(i, Be(l, 3), Rn);
        }
        function f1(i, l) {
          return i == null ? i : D_(i, Be(l, 3), Rn);
        }
        function h1(i, l) {
          return i && Qr(i, Be(l, 3));
        }
        function p1(i, l) {
          return i && sc(i, Be(l, 3));
        }
        function _1(i) {
          return i == null ? [] : Bo(i, an(i));
        }
        function m1(i) {
          return i == null ? [] : Bo(i, Rn(i));
        }
        function qc(i, l, h) {
          var y = i == null ? n : wi(i, l);
          return y === n ? h : y;
        }
        function b1(i, l) {
          return i != null && pm(i, l, VT);
        }
        function Nc(i, l) {
          return i != null && pm(i, l, HT);
        }
        var v1 = sm(function(i, l, h) {
          l != null && typeof l.toString != "function" && (l = So.call(l)), i[l] = h;
        }, Hc(Bn)), y1 = sm(function(i, l, h) {
          l != null && typeof l.toString != "function" && (l = So.call(l)), St.call(i, l) ? i[l].push(h) : i[l] = [h];
        }, Be), g1 = Xe(el);
        function an(i) {
          return Pn(i) ? T_(i) : dc(i);
        }
        function Rn(i) {
          return Pn(i) ? T_(i, !0) : ZT(i);
        }
        function S1(i, l) {
          var h = {};
          return l = Be(l, 3), Qr(i, function(y, x, O) {
            ga(h, l(y, x, O), y);
          }), h;
        }
        function A1(i, l) {
          var h = {};
          return l = Be(l, 3), Qr(i, function(y, x, O) {
            ga(h, x, l(y, x, O));
          }), h;
        }
        var w1 = ss(function(i, l, h) {
          ko(i, l, h);
        }), Km = ss(function(i, l, h, y) {
          ko(i, l, h, y);
        }), T1 = Aa(function(i, l) {
          var h = {};
          if (i == null)
            return h;
          var y = !1;
          l = Pt(l, function(O) {
            return O = ti(O, i), y || (y = O.length > 1), O;
          }), ea(i, Tc(i), h), y && (h = fr(h, b | v | g, v0));
          for (var x = l.length; x--; )
            mc(h, l[x]);
          return h;
        });
        function x1(i, l) {
          return Xm(i, Xo(Be(l)));
        }
        var C1 = Aa(function(i, l) {
          return i == null ? {} : QT(i, l);
        });
        function Xm(i, l) {
          if (i == null)
            return {};
          var h = Pt(Tc(i), function(y) {
            return [y];
          });
          return l = Be(l), H_(i, h, function(y, x) {
            return l(y, x[0]);
          });
        }
        function I1(i, l, h) {
          l = ti(l, i);
          var y = -1, x = l.length;
          for (x || (x = 1, i = n); ++y < x; ) {
            var O = i == null ? n : i[ta(l[y])];
            O === n && (y = x, O = h), i = Ta(O) ? O.call(i) : O;
          }
          return i;
        }
        function L1(i, l, h) {
          return i == null ? i : nl(i, l, h);
        }
        function E1(i, l, h, y) {
          return y = typeof y == "function" ? y : n, i == null ? i : nl(i, l, h, y);
        }
        var Zm = um(an), Jm = um(Rn);
        function O1(i, l, h) {
          var y = $e(i), x = y || ri(i) || us(i);
          if (l = Be(l, 4), h == null) {
            var O = i && i.constructor;
            x ? h = y ? new O() : [] : Mt(i) ? h = Ta(O) ? is(To(i)) : {} : h = {};
          }
          return (x ? ur : Qr)(i, function(B, q, H) {
            return l(h, B, q, H);
          }), h;
        }
        function D1(i, l) {
          return i == null ? !0 : mc(i, l);
        }
        function P1(i, l, h) {
          return i == null ? i : G_(i, l, yc(h));
        }
        function R1(i, l, h, y) {
          return y = typeof y == "function" ? y : n, i == null ? i : G_(i, l, yc(h), y);
        }
        function ds(i) {
          return i == null ? [] : Zd(i, an(i));
        }
        function B1(i) {
          return i == null ? [] : Zd(i, Rn(i));
        }
        function k1(i, l, h) {
          return h === n && (h = l, l = n), h !== n && (h = _r(h), h = h === h ? h : 0), l !== n && (l = _r(l), l = l === l ? l : 0), Ai(_r(i), l, h);
        }
        function M1(i, l, h) {
          return l = xa(l), h === n ? (h = l, l = 0) : h = xa(h), i = _r(i), $T(i, l, h);
        }
        function F1(i, l, h) {
          if (h && typeof h != "boolean" && Tn(i, l, h) && (l = h = n), h === n && (typeof l == "boolean" ? (h = l, l = n) : typeof i == "boolean" && (h = i, i = n)), i === n && l === n ? (i = 0, l = 1) : (i = xa(i), l === n ? (l = i, i = 0) : l = xa(l)), i > l) {
            var y = i;
            i = l, l = y;
          }
          if (h || i % 1 || l % 1) {
            var x = A_();
            return pn(i + x * (l - i + _w("1e-" + ((x + "").length - 1))), l);
          }
          return hc(i, l);
        }
        var q1 = ls(function(i, l, h) {
          return l = l.toLowerCase(), i + (h ? Qm(l) : l);
        });
        function Qm(i) {
          return Vc(bt(i).toLowerCase());
        }
        function eb(i) {
          return i = bt(i), i && i.replace(Te, Lw).replace(iw, "");
        }
        function N1(i, l, h) {
          i = bt(i), l = Wn(l);
          var y = i.length;
          h = h === n ? y : Ai(je(h), 0, y);
          var x = h;
          return h -= l.length, h >= 0 && i.slice(h, x) == l;
        }
        function V1(i) {
          return i = bt(i), i && Hs.test(i) ? i.replace(Xr, Ew) : i;
        }
        function H1(i) {
          return i = bt(i), i && $s.test(i) ? i.replace(Ya, "\\$&") : i;
        }
        var $1 = ls(function(i, l, h) {
          return i + (h ? "-" : "") + l.toLowerCase();
        }), W1 = ls(function(i, l, h) {
          return i + (h ? " " : "") + l.toLowerCase();
        }), U1 = rm("toLowerCase");
        function j1(i, l, h) {
          i = bt(i), l = je(l);
          var y = l ? es(i) : 0;
          if (!l || y >= l)
            return i;
          var x = (l - y) / 2;
          return Ho(Lo(x), h) + i + Ho(Io(x), h);
        }
        function G1(i, l, h) {
          i = bt(i), l = je(l);
          var y = l ? es(i) : 0;
          return l && y < l ? i + Ho(l - y, h) : i;
        }
        function Y1(i, l, h) {
          i = bt(i), l = je(l);
          var y = l ? es(i) : 0;
          return l && y < l ? Ho(l - y, h) + i : i;
        }
        function z1(i, l, h) {
          return h || l == null ? l = 0 : l && (l = +l), tT(bt(i).replace(fn, ""), l || 0);
        }
        function K1(i, l, h) {
          return (h ? Tn(i, l, h) : l === n) ? l = 1 : l = je(l), pc(bt(i), l);
        }
        function X1() {
          var i = arguments, l = bt(i[0]);
          return i.length < 3 ? l : l.replace(i[1], i[2]);
        }
        var Z1 = ls(function(i, l, h) {
          return i + (h ? "_" : "") + l.toLowerCase();
        });
        function J1(i, l, h) {
          return h && typeof h != "number" && Tn(i, l, h) && (l = h = n), h = h === n ? oe : h >>> 0, h ? (i = bt(i), i && (typeof l == "string" || l != null && !Fc(l)) && (l = Wn(l), !l && Qi(i)) ? ni(Pr(i), 0, h) : i.split(l, h)) : [];
        }
        var Q1 = ls(function(i, l, h) {
          return i + (h ? " " : "") + Vc(l);
        });
        function eI(i, l, h) {
          return i = bt(i), h = h == null ? 0 : Ai(je(h), 0, i.length), l = Wn(l), i.slice(h, h + l.length) == l;
        }
        function tI(i, l, h) {
          var y = L.templateSettings;
          h && Tn(i, l, h) && (l = n), i = bt(i), l = Qo({}, l, y, dm);
          var x = Qo({}, l.imports, y.imports, dm), O = an(x), B = Zd(x, O), q, H, J = 0, ee = l.interpolate || gt, te = "__p += '", _e = Qd(
            (l.escape || gt).source + "|" + ee.source + "|" + (ee === Yi ? fo : gt).source + "|" + (l.evaluate || gt).source + "|$",
            "g"
          ), Ce = "//# sourceURL=" + (St.call(l, "sourceURL") ? (l.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++dw + "]") + `
`;
          i.replace(_e, function(Me, et, at, jn, xn, Gn) {
            return at || (at = jn), te += i.slice(J, Gn).replace(nn, Ow), et && (q = !0, te += `' +
__e(` + et + `) +
'`), xn && (H = !0, te += `';
` + xn + `;
__p += '`), at && (te += `' +
((__t = (` + at + `)) == null ? '' : __t) +
'`), J = Gn + Me.length, Me;
          }), te += `';
`;
          var ke = St.call(l, "variable") && l.variable;
          if (!ke)
            te = `with (obj) {
` + te + `
}
`;
          else if (Dr.test(ke))
            throw new Ve(u);
          te = (H ? te.replace(pi, "") : te).replace(Kr, "$1").replace(Or, "$1;"), te = "function(" + (ke || "obj") + `) {
` + (ke ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + (q ? ", __e = _.escape" : "") + (H ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + te + `return __p
}`;
          var Ye = nb(function() {
            return _t(O, Ce + "return " + te).apply(n, B);
          });
          if (Ye.source = te, Mc(Ye))
            throw Ye;
          return Ye;
        }
        function nI(i) {
          return bt(i).toLowerCase();
        }
        function rI(i) {
          return bt(i).toUpperCase();
        }
        function aI(i, l, h) {
          if (i = bt(i), i && (h || l === n))
            return c_(i);
          if (!i || !(l = Wn(l)))
            return i;
          var y = Pr(i), x = Pr(l), O = f_(y, x), B = h_(y, x) + 1;
          return ni(y, O, B).join("");
        }
        function iI(i, l, h) {
          if (i = bt(i), i && (h || l === n))
            return i.slice(0, __(i) + 1);
          if (!i || !(l = Wn(l)))
            return i;
          var y = Pr(i), x = h_(y, Pr(l)) + 1;
          return ni(y, 0, x).join("");
        }
        function sI(i, l, h) {
          if (i = bt(i), i && (h || l === n))
            return i.replace(fn, "");
          if (!i || !(l = Wn(l)))
            return i;
          var y = Pr(i), x = f_(y, Pr(l));
          return ni(y, x).join("");
        }
        function lI(i, l) {
          var h = W, y = $;
          if (Mt(l)) {
            var x = "separator" in l ? l.separator : x;
            h = "length" in l ? je(l.length) : h, y = "omission" in l ? Wn(l.omission) : y;
          }
          i = bt(i);
          var O = i.length;
          if (Qi(i)) {
            var B = Pr(i);
            O = B.length;
          }
          if (h >= O)
            return i;
          var q = h - es(y);
          if (q < 1)
            return y;
          var H = B ? ni(B, 0, q).join("") : i.slice(0, q);
          if (x === n)
            return H + y;
          if (B && (q += H.length - q), Fc(x)) {
            if (i.slice(q).search(x)) {
              var J, ee = H;
              for (x.global || (x = Qd(x.source, bt(Ws.exec(x)) + "g")), x.lastIndex = 0; J = x.exec(ee); )
                var te = J.index;
              H = H.slice(0, te === n ? q : te);
            }
          } else if (i.indexOf(Wn(x), q) != q) {
            var _e = H.lastIndexOf(x);
            _e > -1 && (H = H.slice(0, _e));
          }
          return H + y;
        }
        function oI(i) {
          return i = bt(i), i && Vs.test(i) ? i.replace(Ga, Fw) : i;
        }
        var uI = ls(function(i, l, h) {
          return i + (h ? " " : "") + l.toUpperCase();
        }), Vc = rm("toUpperCase");
        function tb(i, l, h) {
          return i = bt(i), l = h ? n : l, l === n ? Pw(i) ? Vw(i) : ww(i) : i.match(l) || [];
        }
        var nb = Xe(function(i, l) {
          try {
            return Hn(i, n, l);
          } catch (h) {
            return Mc(h) ? h : new Ve(h);
          }
        }), dI = Aa(function(i, l) {
          return ur(l, function(h) {
            h = ta(h), ga(i, h, Bc(i[h], i));
          }), i;
        });
        function cI(i) {
          var l = i == null ? 0 : i.length, h = Be();
          return i = l ? Pt(i, function(y) {
            if (typeof y[1] != "function")
              throw new dr(o);
            return [h(y[0]), y[1]];
          }) : [], Xe(function(y) {
            for (var x = -1; ++x < l; ) {
              var O = i[x];
              if (Hn(O[0], this, y))
                return Hn(O[1], this, y);
            }
          });
        }
        function fI(i) {
          return FT(fr(i, b));
        }
        function Hc(i) {
          return function() {
            return i;
          };
        }
        function hI(i, l) {
          return i == null || i !== i ? l : i;
        }
        var pI = im(), _I = im(!0);
        function Bn(i) {
          return i;
        }
        function $c(i) {
          return k_(typeof i == "function" ? i : fr(i, b));
        }
        function mI(i) {
          return F_(fr(i, b));
        }
        function bI(i, l) {
          return q_(i, fr(l, b));
        }
        var vI = Xe(function(i, l) {
          return function(h) {
            return el(h, i, l);
          };
        }), yI = Xe(function(i, l) {
          return function(h) {
            return el(i, h, l);
          };
        });
        function Wc(i, l, h) {
          var y = an(l), x = Bo(l, y);
          h == null && !(Mt(l) && (x.length || !y.length)) && (h = l, l = i, i = this, x = Bo(l, an(l)));
          var O = !(Mt(h) && "chain" in h) || !!h.chain, B = Ta(i);
          return ur(x, function(q) {
            var H = l[q];
            i[q] = H, B && (i.prototype[q] = function() {
              var J = this.__chain__;
              if (O || J) {
                var ee = i(this.__wrapped__), te = ee.__actions__ = Dn(this.__actions__);
                return te.push({ func: H, args: arguments, thisArg: i }), ee.__chain__ = J, ee;
              }
              return H.apply(i, Xa([this.value()], arguments));
            });
          }), i;
        }
        function gI() {
          return on._ === this && (on._ = Gw), this;
        }
        function Uc() {
        }
        function SI(i) {
          return i = je(i), Xe(function(l) {
            return N_(l, i);
          });
        }
        var AI = Sc(Pt), wI = Sc(s_), TI = Sc(Gd);
        function rb(i) {
          return Lc(i) ? Yd(ta(i)) : e0(i);
        }
        function xI(i) {
          return function(l) {
            return i == null ? n : wi(i, l);
          };
        }
        var CI = lm(), II = lm(!0);
        function jc() {
          return [];
        }
        function Gc() {
          return !1;
        }
        function LI() {
          return {};
        }
        function EI() {
          return "";
        }
        function OI() {
          return !0;
        }
        function DI(i, l) {
          if (i = je(i), i < 1 || i > me)
            return [];
          var h = oe, y = pn(i, oe);
          l = Be(l), i -= oe;
          for (var x = Xd(y, l); ++h < i; )
            l(h);
          return x;
        }
        function PI(i) {
          return $e(i) ? Pt(i, ta) : Un(i) ? [i] : Dn(wm(bt(i)));
        }
        function RI(i) {
          var l = ++Uw;
          return bt(i) + l;
        }
        var BI = Vo(function(i, l) {
          return i + l;
        }, 0), kI = Ac("ceil"), MI = Vo(function(i, l) {
          return i / l;
        }, 1), FI = Ac("floor");
        function qI(i) {
          return i && i.length ? Ro(i, Bn, lc) : n;
        }
        function NI(i, l) {
          return i && i.length ? Ro(i, Be(l, 2), lc) : n;
        }
        function VI(i) {
          return u_(i, Bn);
        }
        function HI(i, l) {
          return u_(i, Be(l, 2));
        }
        function $I(i) {
          return i && i.length ? Ro(i, Bn, cc) : n;
        }
        function WI(i, l) {
          return i && i.length ? Ro(i, Be(l, 2), cc) : n;
        }
        var UI = Vo(function(i, l) {
          return i * l;
        }, 1), jI = Ac("round"), GI = Vo(function(i, l) {
          return i - l;
        }, 0);
        function YI(i) {
          return i && i.length ? Kd(i, Bn) : 0;
        }
        function zI(i, l) {
          return i && i.length ? Kd(i, Be(l, 2)) : 0;
        }
        return L.after = mC, L.ary = Bm, L.assign = r1, L.assignIn = zm, L.assignInWith = Qo, L.assignWith = a1, L.at = i1, L.before = km, L.bind = Bc, L.bindAll = dI, L.bindKey = Mm, L.castArray = LC, L.chain = Dm, L.chunk = F0, L.compact = q0, L.concat = N0, L.cond = cI, L.conforms = fI, L.constant = Hc, L.countBy = Yx, L.create = s1, L.curry = Fm, L.curryRight = qm, L.debounce = Nm, L.defaults = l1, L.defaultsDeep = o1, L.defer = bC, L.delay = vC, L.difference = V0, L.differenceBy = H0, L.differenceWith = $0, L.drop = W0, L.dropRight = U0, L.dropRightWhile = j0, L.dropWhile = G0, L.fill = Y0, L.filter = Kx, L.flatMap = Jx, L.flatMapDeep = Qx, L.flatMapDepth = eC, L.flatten = Im, L.flattenDeep = z0, L.flattenDepth = K0, L.flip = yC, L.flow = pI, L.flowRight = _I, L.fromPairs = X0, L.functions = _1, L.functionsIn = m1, L.groupBy = tC, L.initial = J0, L.intersection = Q0, L.intersectionBy = ex, L.intersectionWith = tx, L.invert = v1, L.invertBy = y1, L.invokeMap = rC, L.iteratee = $c, L.keyBy = aC, L.keys = an, L.keysIn = Rn, L.map = Yo, L.mapKeys = S1, L.mapValues = A1, L.matches = mI, L.matchesProperty = bI, L.memoize = Ko, L.merge = w1, L.mergeWith = Km, L.method = vI, L.methodOf = yI, L.mixin = Wc, L.negate = Xo, L.nthArg = SI, L.omit = T1, L.omitBy = x1, L.once = gC, L.orderBy = iC, L.over = AI, L.overArgs = SC, L.overEvery = wI, L.overSome = TI, L.partial = kc, L.partialRight = Vm, L.partition = sC, L.pick = C1, L.pickBy = Xm, L.property = rb, L.propertyOf = xI, L.pull = ix, L.pullAll = Em, L.pullAllBy = sx, L.pullAllWith = lx, L.pullAt = ox, L.range = CI, L.rangeRight = II, L.rearg = AC, L.reject = uC, L.remove = ux, L.rest = wC, L.reverse = Pc, L.sampleSize = cC, L.set = L1, L.setWith = E1, L.shuffle = fC, L.slice = dx, L.sortBy = _C, L.sortedUniq = bx, L.sortedUniqBy = vx, L.split = J1, L.spread = TC, L.tail = yx, L.take = gx, L.takeRight = Sx, L.takeRightWhile = Ax, L.takeWhile = wx, L.tap = qx, L.throttle = xC, L.thru = Go, L.toArray = jm, L.toPairs = Zm, L.toPairsIn = Jm, L.toPath = PI, L.toPlainObject = Ym, L.transform = O1, L.unary = CC, L.union = Tx, L.unionBy = xx, L.unionWith = Cx, L.uniq = Ix, L.uniqBy = Lx, L.uniqWith = Ex, L.unset = D1, L.unzip = Rc, L.unzipWith = Om, L.update = P1, L.updateWith = R1, L.values = ds, L.valuesIn = B1, L.without = Ox, L.words = tb, L.wrap = IC, L.xor = Dx, L.xorBy = Px, L.xorWith = Rx, L.zip = Bx, L.zipObject = kx, L.zipObjectDeep = Mx, L.zipWith = Fx, L.entries = Zm, L.entriesIn = Jm, L.extend = zm, L.extendWith = Qo, Wc(L, L), L.add = BI, L.attempt = nb, L.camelCase = q1, L.capitalize = Qm, L.ceil = kI, L.clamp = k1, L.clone = EC, L.cloneDeep = DC, L.cloneDeepWith = PC, L.cloneWith = OC, L.conformsTo = RC, L.deburr = eb, L.defaultTo = hI, L.divide = MI, L.endsWith = N1, L.eq = Br, L.escape = V1, L.escapeRegExp = H1, L.every = zx, L.find = Xx, L.findIndex = xm, L.findKey = u1, L.findLast = Zx, L.findLastIndex = Cm, L.findLastKey = d1, L.floor = FI, L.forEach = Pm, L.forEachRight = Rm, L.forIn = c1, L.forInRight = f1, L.forOwn = h1, L.forOwnRight = p1, L.get = qc, L.gt = BC, L.gte = kC, L.has = b1, L.hasIn = Nc, L.head = Lm, L.identity = Bn, L.includes = nC, L.indexOf = Z0, L.inRange = M1, L.invoke = g1, L.isArguments = Ci, L.isArray = $e, L.isArrayBuffer = MC, L.isArrayLike = Pn, L.isArrayLikeObject = Wt, L.isBoolean = FC, L.isBuffer = ri, L.isDate = qC, L.isElement = NC, L.isEmpty = VC, L.isEqual = HC, L.isEqualWith = $C, L.isError = Mc, L.isFinite = WC, L.isFunction = Ta, L.isInteger = Hm, L.isLength = Zo, L.isMap = $m, L.isMatch = UC, L.isMatchWith = jC, L.isNaN = GC, L.isNative = YC, L.isNil = KC, L.isNull = zC, L.isNumber = Wm, L.isObject = Mt, L.isObjectLike = Vt, L.isPlainObject = sl, L.isRegExp = Fc, L.isSafeInteger = XC, L.isSet = Um, L.isString = Jo, L.isSymbol = Un, L.isTypedArray = us, L.isUndefined = ZC, L.isWeakMap = JC, L.isWeakSet = QC, L.join = nx, L.kebabCase = $1, L.last = pr, L.lastIndexOf = rx, L.lowerCase = W1, L.lowerFirst = U1, L.lt = e1, L.lte = t1, L.max = qI, L.maxBy = NI, L.mean = VI, L.meanBy = HI, L.min = $I, L.minBy = WI, L.stubArray = jc, L.stubFalse = Gc, L.stubObject = LI, L.stubString = EI, L.stubTrue = OI, L.multiply = UI, L.nth = ax, L.noConflict = gI, L.noop = Uc, L.now = zo, L.pad = j1, L.padEnd = G1, L.padStart = Y1, L.parseInt = z1, L.random = F1, L.reduce = lC, L.reduceRight = oC, L.repeat = K1, L.replace = X1, L.result = I1, L.round = jI, L.runInContext = V, L.sample = dC, L.size = hC, L.snakeCase = Z1, L.some = pC, L.sortedIndex = cx, L.sortedIndexBy = fx, L.sortedIndexOf = hx, L.sortedLastIndex = px, L.sortedLastIndexBy = _x, L.sortedLastIndexOf = mx, L.startCase = Q1, L.startsWith = eI, L.subtract = GI, L.sum = YI, L.sumBy = zI, L.template = tI, L.times = DI, L.toFinite = xa, L.toInteger = je, L.toLength = Gm, L.toLower = nI, L.toNumber = _r, L.toSafeInteger = n1, L.toString = bt, L.toUpper = rI, L.trim = aI, L.trimEnd = iI, L.trimStart = sI, L.truncate = lI, L.unescape = oI, L.uniqueId = RI, L.upperCase = uI, L.upperFirst = Vc, L.each = Pm, L.eachRight = Rm, L.first = Lm, Wc(L, function() {
          var i = {};
          return Qr(L, function(l, h) {
            St.call(L.prototype, h) || (i[h] = l);
          }), i;
        }(), { chain: !1 }), L.VERSION = r, ur(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(i) {
          L[i].placeholder = L;
        }), ur(["drop", "take"], function(i, l) {
          nt.prototype[i] = function(h) {
            h = h === n ? 1 : Zt(je(h), 0);
            var y = this.__filtered__ && !l ? new nt(this) : this.clone();
            return y.__filtered__ ? y.__takeCount__ = pn(h, y.__takeCount__) : y.__views__.push({
              size: pn(h, oe),
              type: i + (y.__dir__ < 0 ? "Right" : "")
            }), y;
          }, nt.prototype[i + "Right"] = function(h) {
            return this.reverse()[i](h).reverse();
          };
        }), ur(["filter", "map", "takeWhile"], function(i, l) {
          var h = l + 1, y = h == Q || h == he;
          nt.prototype[i] = function(x) {
            var O = this.clone();
            return O.__iteratees__.push({
              iteratee: Be(x, 3),
              type: h
            }), O.__filtered__ = O.__filtered__ || y, O;
          };
        }), ur(["head", "last"], function(i, l) {
          var h = "take" + (l ? "Right" : "");
          nt.prototype[i] = function() {
            return this[h](1).value()[0];
          };
        }), ur(["initial", "tail"], function(i, l) {
          var h = "drop" + (l ? "" : "Right");
          nt.prototype[i] = function() {
            return this.__filtered__ ? new nt(this) : this[h](1);
          };
        }), nt.prototype.compact = function() {
          return this.filter(Bn);
        }, nt.prototype.find = function(i) {
          return this.filter(i).head();
        }, nt.prototype.findLast = function(i) {
          return this.reverse().find(i);
        }, nt.prototype.invokeMap = Xe(function(i, l) {
          return typeof i == "function" ? new nt(this) : this.map(function(h) {
            return el(h, i, l);
          });
        }), nt.prototype.reject = function(i) {
          return this.filter(Xo(Be(i)));
        }, nt.prototype.slice = function(i, l) {
          i = je(i);
          var h = this;
          return h.__filtered__ && (i > 0 || l < 0) ? new nt(h) : (i < 0 ? h = h.takeRight(-i) : i && (h = h.drop(i)), l !== n && (l = je(l), h = l < 0 ? h.dropRight(-l) : h.take(l - i)), h);
        }, nt.prototype.takeRightWhile = function(i) {
          return this.reverse().takeWhile(i).reverse();
        }, nt.prototype.toArray = function() {
          return this.take(oe);
        }, Qr(nt.prototype, function(i, l) {
          var h = /^(?:filter|find|map|reject)|While$/.test(l), y = /^(?:head|last)$/.test(l), x = L[y ? "take" + (l == "last" ? "Right" : "") : l], O = y || /^find/.test(l);
          x && (L.prototype[l] = function() {
            var B = this.__wrapped__, q = y ? [1] : arguments, H = B instanceof nt, J = q[0], ee = H || $e(B), te = function(et) {
              var at = x.apply(L, Xa([et], q));
              return y && _e ? at[0] : at;
            };
            ee && h && typeof J == "function" && J.length != 1 && (H = ee = !1);
            var _e = this.__chain__, Ce = !!this.__actions__.length, ke = O && !_e, Ye = H && !Ce;
            if (!O && ee) {
              B = Ye ? B : new nt(this);
              var Me = i.apply(B, q);
              return Me.__actions__.push({ func: Go, args: [te], thisArg: n }), new cr(Me, _e);
            }
            return ke && Ye ? i.apply(this, q) : (Me = this.thru(te), ke ? y ? Me.value()[0] : Me.value() : Me);
          });
        }), ur(["pop", "push", "shift", "sort", "splice", "unshift"], function(i) {
          var l = vo[i], h = /^(?:push|sort|unshift)$/.test(i) ? "tap" : "thru", y = /^(?:pop|shift)$/.test(i);
          L.prototype[i] = function() {
            var x = arguments;
            if (y && !this.__chain__) {
              var O = this.value();
              return l.apply($e(O) ? O : [], x);
            }
            return this[h](function(B) {
              return l.apply($e(B) ? B : [], x);
            });
          };
        }), Qr(nt.prototype, function(i, l) {
          var h = L[l];
          if (h) {
            var y = h.name + "";
            St.call(as, y) || (as[y] = []), as[y].push({ name: l, func: h });
          }
        }), as[No(n, T).name] = [{
          name: "wrapper",
          func: n
        }], nt.prototype.clone = oT, nt.prototype.reverse = uT, nt.prototype.value = dT, L.prototype.at = Nx, L.prototype.chain = Vx, L.prototype.commit = Hx, L.prototype.next = $x, L.prototype.plant = Ux, L.prototype.reverse = jx, L.prototype.toJSON = L.prototype.valueOf = L.prototype.value = Gx, L.prototype.first = L.prototype.head, Ys && (L.prototype[Ys] = Wx), L;
      }, ts = Hw();
      vi ? ((vi.exports = ts)._ = ts, $d._ = ts) : on._ = ts;
    }).call(B3);
  }(vl, vl.exports)), vl.exports;
}
var M3 = k3();
function F3(e, {
  subTypeLocal: t = d(() => {
  })
}) {
  const n = p(e, "type"), r = p(e, "isStepsJustified");
  return {
    classWizard: d(() => {
      let s = `a_wizard a_wizard_${n.value}`;
      return r.value && (s += " a_wizard_justified"), t.value && (s += ` a_wizard_${n.value}_${M3.snakeCase(t.value)}`), s;
    })
  };
}
function q3(e, { emit: t }, {
  stepActiveComputed: n = d(() => 0),
  stepActiveLocal: r = R(0),
  stepsVisitedLocal: a = R({})
}) {
  const s = p(e, "isControlOutside"), o = p(e, "steps"), u = ({ stepIndex: v, step: g }) => {
    s.value ? t("goStepBack", {
      step: g,
      targetStepIndex: v,
      currentStepIndex: n.value
    }) : r.value = v;
  }, f = ({ stepIndex: v, step: g }) => {
    s.value ? t("goStepForward", {
      step: g,
      targetStepIndex: v,
      currentStepIndex: n.value
    }) : (r.value = v, a.value[v] = !0);
  };
  return {
    goOneStepBack: () => {
      n.value !== 0 && u({
        stepIndex: n.value - 1
      });
    },
    goOneStepForward: () => {
      n.value >= o.value.length - 1 || f({
        stepIndex: n.value + 1
      });
    },
    onStepClick: ({ stepIndex: v, step: g }) => {
      n.value !== v && (v < n.value ? u({ stepIndex: v, step: g }) : f({ stepIndex: v, step: g }));
    }
  };
}
function N3(e) {
  const t = p(e, "hasFocusJump"), n = p(e, "id"), r = R([]);
  return {
    setFocusToActiveStep: ({ stepActive: s }) => {
      t.value && !window.isScrollDisabled && setTimeout(() => {
        const o = `#${n.value}_${s}_focus`;
        ka({
          selector: o
        });
      });
    },
    wizardTabsRef: r
  };
}
function V3(e, {
  setFocusToActiveStep: t = () => {
  }
}) {
  const n = p(e, "stepActive"), r = p(e, "stepsVisited"), a = p(e, "isControlOutside"), s = R(!1), o = R(0), u = R({
    0: !0
  }), f = d(() => a.value ? n.value : o.value), _ = d(() => a.value ? r.value : u.value), m = () => {
    a.value || ae(n.value) || (o.value = n.value, u.value = {
      [n.value]: !0
    }), setTimeout(() => {
      s.value = !0;
    });
  };
  return st(f, (b) => {
    s.value && t({ stepActive: b });
  }), {
    initStepActive: m,
    stepActiveComputed: f,
    stepActiveLocal: o,
    stepsVisitedComputed: _,
    stepsVisitedLocal: u
  };
}
function H3(e) {
  const t = p(e, "isMobile"), {
    isMobileWidth: n
  } = En();
  return {
    isMobileLocal: d(() => t.value || n.value)
  };
}
function $3(e, {
  stepActiveComputed: t = d(() => 0)
}) {
  const n = p(e, "steps"), r = d(() => n.value.length);
  return {
    stepActiveNumber: d(() => t.value + 1),
    stepsCount: r
  };
}
function W3(e) {
  const t = p(e, "toolbarBottomTeleportId"), n = d(() => !!t.value);
  return {
    toolbarBottomTeleportSelector: d(() => {
      if (n.value)
        return `#${t.value}`;
    }),
    useTeleportToolbarBottom: n
  };
}
function U3(e) {
  const t = p(e, "subType"), n = p(e, "type");
  return {
    subTypeLocal: d(() => {
      if (t.value)
        return t.value;
      if (n.value === "line")
        return "square";
    })
  };
}
const j3 = {
  name: "AWizard",
  props: {
    ariaLabel: {
      type: String,
      required: !1,
      default: "_A_WIZARD_ARIA_LABEL_"
    },
    ariaLabelSteps: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_ARIA_LABEL_"
    },
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_"
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_TITLE_"
    },
    extra: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_"
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_TITLE_"
    },
    hasFocusJump: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => mt("a_wizard_")
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isControlOutside: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMobile: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isStepsJustified: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isToolbarBottom: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isToolbarTop: {
      type: Boolean,
      required: !1,
      default: !1
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    stepActive: {
      type: Number,
      required: !1,
      default: void 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: dd
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: ud
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    steps: {
      type: Array,
      required: !1,
      default: () => []
    },
    stepsProgressbarText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_"
    },
    stepsVisited: {
      type: Object,
      required: !1,
      default: void 0
    },
    subType: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e, t) => {
        const n = {
          arrows: [],
          basic: [],
          line: ["square", "circle", "square-bordered", "circle-bordered"],
          round: []
        };
        if (t) {
          if (t.type in n)
            return ae(e) || n[t.type].indexOf(e) !== -1;
        } else
          return ["square", "circle", "square-bordered", "circle-bordered"].indexOf(e) !== -1;
        return !1;
      }
    },
    toolbarBottomTeleportId: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "basic",
      validator: (e) => ["arrows", "line", "round", "basic"].indexOf(e) !== -1
    }
  },
  emits: [
    "goStepBack",
    "goStepForward"
  ],
  setup(e, t) {
    const {
      subTypeLocal: n
    } = U3(e), {
      classWizard: r
    } = F3(e, {
      subTypeLocal: n
    }), {
      setFocusToActiveStep: a,
      wizardTabsRef: s
    } = N3(e), {
      initStepActive: o,
      stepActiveComputed: u,
      stepActiveLocal: f,
      stepsVisitedComputed: _,
      stepsVisitedLocal: m
    } = V3(e, {
      setFocusToActiveStep: a
    }), {
      ariaLabelAttributes: b,
      ariaLabelStepsAttributes: v,
      idProgressbar: g,
      wizardAriaDescribedby: S
    } = R3(e, {
      stepActiveComputed: u
    }), {
      goOneStepBack: A,
      goOneStepForward: w,
      onStepClick: T
    } = q3(e, t, {
      stepActiveComputed: u,
      stepActiveLocal: f,
      stepsVisitedLocal: m
    }), {
      stepActiveNumber: I,
      stepsCount: C
    } = $3(e, {
      stepActiveComputed: u
    }), {
      toolbarBottomTeleportSelector: E,
      useTeleportToolbarBottom: P
    } = W3(e), {
      isMobileLocal: M
    } = H3(e);
    return o(), {
      ariaLabelAttributes: b,
      ariaLabelStepsAttributes: v,
      classWizard: r,
      goOneStepBack: A,
      goOneStepForward: w,
      idProgressbar: g,
      isMobileLocal: M,
      onStepClick: T,
      stepActiveComputed: u,
      stepActiveNumber: I,
      stepsCount: C,
      stepsVisitedComputed: _,
      toolbarBottomTeleportSelector: E,
      useTeleportToolbarBottom: P,
      wizardAriaDescribedby: S,
      wizardTabsRef: s
    };
  },
  render() {
    const e = c(P3, {
      backButtonAttributes: this.backButtonAttributes,
      backButtonClass: this.backButtonClass,
      backButtonIconLeft: this.backButtonIconLeft,
      backButtonIconRight: this.backButtonIconRight,
      backButtonText: this.backButtonText,
      backButtonTitle: this.backButtonTitle,
      extra: this.extra,
      forwardButtonAttributes: this.forwardButtonAttributes,
      forwardButtonClass: this.forwardButtonClass,
      forwardButtonIconLeft: this.forwardButtonIconLeft,
      forwardButtonIconRight: this.forwardButtonIconRight,
      forwardButtonText: this.forwardButtonText,
      forwardButtonTitle: this.forwardButtonTitle,
      isBackButtonDisabled: this.isBackButtonDisabled,
      isBackButtonHide: this.isBackButtonHide,
      isBackFirstButtonHide: this.isBackFirstButtonHide,
      isButtonsLoading: this.isButtonsLoading,
      isForwardButtonDisabled: this.isForwardButtonDisabled,
      isForwardButtonHide: this.isForwardButtonHide,
      isForwardLastButtonHide: this.isForwardLastButtonHide,
      stepActiveComputed: this.stepActiveComputed,
      steps: this.steps,
      onGoOneStepBack: this.goOneStepBack,
      onGoOneStepForward: this.goOneStepForward
    }, this.$slots);
    return c("div", {
      tabindex: 0,
      id: this.id,
      role: "application",
      "aria-describedby": this.wizardAriaDescribedby,
      class: [
        this.classWizard,
        {
          a_wizard_mobile: this.isMobileLocal,
          a_wizard_show_only_active_step_mobile: this.showOnlyActiveStepMobile
        }
      ],
      ...this.ariaLabelAttributes
    }, [
      c(be, {
        id: this.idProgressbar,
        class: "a_sr_only",
        extra: {
          stepActive: this.stepActiveNumber,
          stepsCount: this.stepsCount
        },
        tag: "span",
        text: this.stepsProgressbarText
      }),
      c("ul", {
        class: "a_wizard__steps",
        role: "navigation",
        ...this.ariaLabelStepsAttributes
      }, [
        this.steps.map((t, n) => c(w3, {
          key: this.keyId ? t[this.keyId] : n,
          id: this.id,
          extra: this.extra,
          isBackButtonDisabled: this.isBackButtonDisabled,
          isBackStepButtonDisabled: this.isBackStepButtonDisabled,
          isForwardButtonDisabled: this.isForwardButtonDisabled,
          isForwardStepButtonDisabled: this.isForwardStepButtonDisabled,
          isMobile: this.isMobileLocal,
          isStepNumberVisible: this.isStepNumberVisible,
          showOnlyActiveStepMobile: this.showOnlyActiveStepMobile,
          step: t,
          stepActiveComputed: this.stepActiveComputed,
          stepIconError: this.stepIconError,
          stepIconWarning: this.stepIconWarning,
          stepIndex: n,
          stepsCount: this.stepsCount,
          onOnStepClick: this.onStepClick
        }, this.$slots))
      ]),
      this.isToolbarTop && e,
      c("div", {
        class: "a_wizard__tab_content"
      }, [
        this.steps.map((t, n) => c(I3, {
          key: this.keyId ? t[this.keyId] : n,
          id: this.id,
          extra: this.extra,
          step: t,
          stepActiveComputed: this.stepActiveComputed,
          stepIndex: n,
          stepsVisitedComputed: this.stepsVisitedComputed,
          wizardAriaDescribedby: this.wizardAriaDescribedby
        }, this.$slots))
      ]),
      this.isToolbarBottom && c(fa, {
        to: this.toolbarBottomTeleportSelector,
        disabled: !this.useTeleportToolbarBottom
      }, [
        e
      ])
    ]);
  }
};
function G3({ emit: e }) {
  return {
    goStepBackLocal: (r) => {
      e("goStepBack", r);
    },
    goStepForwardLocal: (r) => {
      e("goStepForward", r);
    }
  };
}
function Y3(e) {
  const t = p(e, "id"), n = d(() => `${t.value}_footer`), r = d(() => `${t.value}_wizard`);
  return {
    footerId: n,
    wizardId: r
  };
}
function z3() {
  const e = R(void 0);
  return {
    initWizard: () => {
      Yu().then(
        () => {
          e.value = !0;
        }
      );
    },
    isWizardVisible: e
  };
}
const NU = {
  name: "AModalWizard",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Le.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Le.value.propsDefault.isCloseButtonHide
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => Le.value.propsDefault.isFooterSticky
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Le.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => Le.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => Le.value.propsDefault.modalStyle
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Le.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => Le.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => Le.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => Le.value.propsDefault.selectorCloseIds
    },
    showCloseButtonHeader: {
      type: Boolean,
      required: !1,
      default: !0
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => Le.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => Le.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    // WIZARD
    ariaLabel: {
      type: String,
      required: !1,
      default: "_A_WIZARD_ARIA_LABEL_"
    },
    ariaLabelSteps: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_ARIA_LABEL_"
    },
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_"
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_TITLE_"
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_"
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_TITLE_"
    },
    hasFocusJump: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => mt("a_modal_wizard_")
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isControlOutside: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMobile: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isStepsJustified: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    stepActive: {
      type: Number,
      default: void 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: dd
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: ud
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    steps: {
      type: Array,
      default: () => []
    },
    stepsProgressbarText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_"
    },
    subType: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e, t) => {
        const n = {
          arrows: [],
          basic: [],
          line: ["square", "circle", "square-bordered", "circle-bordered"],
          round: []
        };
        if (t) {
          if (t.type in n)
            return ae(e) || n[t.type].indexOf(e) !== -1;
        } else
          return ["square", "circle", "square-bordered", "circle-bordered"].indexOf(e) !== -1;
        return !1;
      }
    },
    stepsVisited: {
      type: Object,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "basic",
      validator: (e) => ["arrows", "line", "round", "basic"].indexOf(e) !== -1
    }
  },
  emits: [
    "goStepBack",
    "goStepForward"
  ],
  setup(e, t) {
    const {
      goStepBackLocal: n,
      goStepForwardLocal: r
    } = G3(t), {
      footerId: a,
      wizardId: s
    } = Y3(e), {
      initWizard: o,
      isWizardVisible: u
    } = z3();
    return o(), {
      footerId: a,
      goStepBackLocal: n,
      goStepForwardLocal: r,
      isWizardVisible: u,
      wizardId: s
    };
  },
  render() {
    return c(Bd, {
      alwaysTranslate: this.alwaysTranslate,
      backdropZIndex: this.backdropZIndex,
      close: this.close,
      closeButtonAttributes: this.closeButtonAttributes,
      closeButtonClass: this.closeButtonClass,
      closeButtonId: this.closeButtonId,
      closeButtonText: this.closeButtonText,
      closeButtonTextScreenReaderFooter: this.closeButtonTextScreenReaderFooter,
      closeButtonTextScreenReaderHeader: this.closeButtonTextScreenReaderHeader,
      disabled: this.disabled,
      disabledSave: this.disabledSave,
      extra: this.extra,
      focusStartId: this.focusStartId,
      headerTag: this.headerTag,
      headerText: this.headerText,
      hideHeader: this.hideHeader,
      id: this.id,
      isCloseButtonHide: this.isCloseButtonHide,
      isFooterSticky: this.isFooterSticky,
      isSaveButtonHide: this.isSaveButtonHide,
      loading: this.loading,
      modalClass: this.modalClass,
      modalStyle: this.modalStyle,
      save: this.save,
      saveButtonAttributes: this.saveButtonAttributes,
      saveButtonClass: this.saveButtonClass,
      saveButtonId: this.saveButtonId,
      saveButtonText: this.saveButtonText,
      saveButtonTextScreenReader: this.saveButtonTextScreenReader,
      selectorClose: this.selectorClose,
      selectorCloseIds: this.selectorCloseIds,
      showCloseButtonHeader: this.showCloseButtonHeader,
      size: this.size,
      stop: this.stop,
      useEscape: this.useEscape,
      useFocusOnStart: this.useFocusOnStart,
      zIndex: this.zIndex
    }, {
      ...this.$slots || {},
      modalBody: () => [
        this.isWizardVisible && c(j3, {
          id: this.wizardId,
          ariaLabel: this.ariaLabel,
          ariaLabelSteps: this.ariaLabelSteps,
          backButtonAttributes: this.backButtonAttributes,
          backButtonClass: this.backButtonClass,
          backButtonIconLeft: this.backButtonIconLeft,
          backButtonIconRight: this.backButtonIconRight,
          backButtonText: this.backButtonText,
          backButtonTitle: this.backButtonTitle,
          forwardButtonAttributes: this.forwardButtonAttributes,
          forwardButtonClass: this.forwardButtonClass,
          forwardButtonIconLeft: this.forwardButtonIconLeft,
          forwardButtonIconRight: this.forwardButtonIconRight,
          forwardButtonText: this.forwardButtonText,
          forwardButtonTitle: this.forwardButtonTitle,
          hasFocusJump: this.hasFocusJump,
          extra: this.extra,
          isBackButtonDisabled: this.isBackButtonDisabled,
          isBackButtonHide: this.isBackButtonHide,
          isBackFirstButtonHide: this.isBackFirstButtonHide,
          isBackStepButtonDisabled: this.isBackStepButtonDisabled,
          isButtonsLoading: this.isButtonsLoading,
          isControlOutside: this.isControlOutside,
          isForwardButtonDisabled: this.isForwardButtonDisabled,
          isForwardButtonHide: this.isForwardButtonHide,
          isForwardLastButtonHide: this.isForwardLastButtonHide,
          isForwardStepButtonDisabled: this.isForwardStepButtonDisabled,
          isMobile: this.isMobile,
          isStepNumberVisible: this.isStepNumberVisible,
          isStepsJustified: this.isStepsJustified,
          keyId: this.keyId,
          isToolbarBottom: !0,
          isToolbarTop: !1,
          showOnlyActiveStepMobile: this.showOnlyActiveStepMobile,
          stepActive: this.stepActive,
          stepIconError: this.stepIconError,
          stepIconErrorText: this.stepIconErrorText,
          stepIconWarning: this.stepIconWarning,
          stepIconWarningText: this.stepIconWarningText,
          steps: this.steps,
          stepsProgressbarText: this.stepsProgressbarText,
          stepsVisited: this.stepsVisited,
          subType: this.subType,
          toolbarBottomTeleportId: this.footerId,
          type: this.type,
          onGoStepBack: this.goStepBackLocal,
          onGoStepForward: this.goStepForwardLocal
        }, this.$slots)
      ],
      modalFooterPrepend: () => [
        this.$slots.modalWizardFooterPrepend && this.$slots.modalWizardFooterPrepend(),
        c("div", {
          id: this.footerId
        }),
        this.$slots.modalWizardFooterAppend && this.$slots.modalWizardFooterAppend()
      ]
    });
  }
}, VU = {
  name: "ANotification",
  setup() {
    const {
      notifications: e,
      removeNotification: t
    } = kd();
    return {
      notifications: e,
      removeNotification: t
    };
  },
  render() {
    return c(fa, {
      to: "body"
    }, [
      c("div", {
        class: "a_notification_parent"
      }, this.notifications.map((e) => c(Vh, {
        key: e.index,
        alwaysTranslate: e.alwaysTranslate,
        isVisible: !0,
        closable: !0,
        type: e.type,
        alertClass: "a_notification",
        onClose: () => this.removeNotification(e.index)
      }, () => [
        c(be, {
          alwaysTranslate: e.alwaysTranslate,
          html: e.text,
          extra: e.extra
        })
      ])))
    ]);
  }
}, wu = R("");
function K3(e) {
  const t = p(e, "title"), n = p(e, "extra"), {
    translationChanges: r
  } = Rs(), {
    isPlaceholderTranslate: a,
    getTranslatedText: s
  } = Ui(), o = d(() => {
    if (r.value)
      return a(wu.value) ? s({
        placeholder: wu.value
      }) : wu.value;
  }), u = d(() => {
    if (r.value)
      return a(t.value) ? s({
        placeholder: t.value,
        extra: n.value
      }) : t.value;
  }), f = () => {
    let _ = "";
    u.value ? (_ = u.value, o.value && (_ += ` - ${o.value}`)) : o.value && (_ = o.value), document.title = _;
  };
  f(), st(u, () => {
    f();
  });
}
function X3(e = "") {
  wu.value = e;
}
const HU = {
  name: "APageTabTitle",
  props: {
    title: {
      type: String,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    K3(e);
  },
  render() {
    return "";
  }
};
function Z3(e, {
  currentItem: t = d(() => 1),
  maxItems: n = d(() => 1)
}) {
  const r = p(e, "disabled"), a = d(() => r.value || t.value === 1), s = d(() => r.value || t.value === n.value);
  return {
    disabledButtonFirstPage: a,
    disabledButtonLastPage: s
  };
}
function J3(e) {
  const t = p(e, "paginationMaxItems"), n = p(e, "offset"), r = p(e, "limit"), a = p(e, "totalRowsCount"), s = d(() => R$(t.value)), o = d(() => (n.value / r.value >> 0) + 1), u = d(() => gD(a.value / r.value)), f = d(() => Math.floor(t.value / 2)), _ = d(() => t.value * 2 - 1), m = ({ currentItemIndex: v, paginationLength: g }) => {
    let S = -1, A = g + 1;
    const w = f.value, T = _.value;
    if (v <= w ? (S = 0, A = t.value) : v >= T - (w + 1) ? (S = T - t.value, A = T) : s.value ? (S = v - w + 1, A = v + w + 1) : (S = v - w, A = v + w + 1), A > g) {
      const I = A - g;
      A = g + 1, S = S - I, S < 0 && (S = 0);
    }
    return {
      indexStart: S,
      indexEnd: A
    };
  }, b = d(() => {
    const v = [];
    let g = -1;
    for (let w = t.value - 1; w > -t.value; w--) {
      const T = o.value - w;
      T > 0 && T <= u.value && v.push(T), w === 0 && (g = v.length - 1);
    }
    const {
      indexStart: S,
      indexEnd: A
    } = m({
      currentItemIndex: g,
      paginationLength: v.length
    });
    return v.slice(S, A);
  });
  return {
    currentItem: o,
    maxItems: u,
    paginationItems: b
  };
}
function Q3(e, { emit: t }, {
  currentItem: n = d(() => 1),
  disabledButtonFirstPage: r = d(() => !1),
  disabledButtonLastPage: a = d(() => !1),
  maxItems: s = d(() => 1)
}) {
  const o = p(e, "disabled"), u = p(e, "limit"), f = p(e, "offset"), _ = (C) => {
    if (o.value || C === n.value)
      return;
    const E = (C - 1) * u.value;
    t("update:offset", E);
  }, m = () => {
    r.value || t("update:offset", 0);
  }, b = () => {
    r.value || t("update:offset", f.value - u.value);
  }, v = () => {
    a.value || t("update:offset", (s.value - 1) * u.value);
  }, g = () => {
    a.value || t("update:offset", f.value + u.value);
  };
  return {
    keyDownUpdateOffset: (C, E) => {
      (C.keyCode === X.enter || C.keyCode === X.space) && (_(E), C.stopPropagation(), C.preventDefault());
    },
    keyDownUpdateOffsetFirst: (C) => {
      (C.keyCode === X.enter || C.keyCode === X.space) && (m(), C.stopPropagation(), C.preventDefault());
    },
    keyDownUpdateOffsetLast: (C) => {
      (C.keyCode === X.enter || C.keyCode === X.space) && (v(), C.stopPropagation(), C.preventDefault());
    },
    keyDownUpdateOffsetNext: (C) => {
      (C.keyCode === X.enter || C.keyCode === X.space) && (g(), C.stopPropagation(), C.preventDefault());
    },
    keyDownUpdateOffsetPrevious: (C) => {
      (C.keyCode === X.enter || C.keyCode === X.space) && (b(), C.stopPropagation(), C.preventDefault());
    },
    updateOffset: _,
    updateOffsetFirst: m,
    updateOffsetLast: v,
    updateOffsetNext: g,
    updateOffsetPrevious: b
  };
}
const e8 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
  <path fill-rule="evenodd" d="M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
</svg>`, t8 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M3.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L9.293 8 3.646 2.354a.5.5 0 0 1 0-.708"/>
  <path fill-rule="evenodd" d="M7.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L13.293 8 7.646 2.354a.5.5 0 0 1 0-.708"/>
</svg>`, n8 = {
  name: "APaginationPages",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    limit: {
      type: Number,
      required: !0
    },
    mode: {
      type: String,
      required: !1,
      default: "normal",
      validator: (e) => ["normal", "short", "loadMore"].indexOf(e) !== -1
    },
    offset: {
      type: Number,
      required: !0
    },
    paginationMaxItems: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => hi(e) && e > 0
    },
    totalRowsCount: {
      type: Number,
      required: !0
    }
  },
  emits: [
    "update:offset"
  ],
  setup(e, t) {
    const {
      currentItem: n,
      maxItems: r,
      paginationItems: a
    } = J3(e), {
      disabledButtonFirstPage: s,
      disabledButtonLastPage: o
    } = Z3(e, {
      currentItem: n,
      maxItems: r
    }), {
      keyDownUpdateOffset: u,
      keyDownUpdateOffsetFirst: f,
      keyDownUpdateOffsetLast: _,
      keyDownUpdateOffsetNext: m,
      keyDownUpdateOffsetPrevious: b,
      updateOffset: v,
      updateOffsetFirst: g,
      updateOffsetLast: S,
      updateOffsetNext: A,
      updateOffsetPrevious: w
    } = Q3(e, t, {
      currentItem: n,
      disabledButtonFirstPage: s,
      disabledButtonLastPage: o,
      maxItems: r
    });
    return {
      currentItem: n,
      disabledButtonFirstPage: s,
      disabledButtonLastPage: o,
      keyDownUpdateOffset: u,
      keyDownUpdateOffsetFirst: f,
      keyDownUpdateOffsetLast: _,
      keyDownUpdateOffsetNext: m,
      keyDownUpdateOffsetPrevious: b,
      maxItems: r,
      paginationItems: a,
      updateOffset: v,
      updateOffsetFirst: g,
      updateOffsetLast: S,
      updateOffsetNext: A,
      updateOffsetPrevious: w
    };
  },
  render() {
    return c(be, {
      tag: "nav",
      class: "a_pagination__nav",
      "aria-label": "_A_PAGINATION_NAVIGATION_"
    }, {
      default: () => this.mode === "loadMore" ? c(Oe, {
        class: "a_btn a_btn_primary",
        text: "Load more",
        type: "button"
      }) : [
        c("ul", {
          class: "a_pagination"
        }, [
          this.mode !== "short" ? c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonFirstPage }]
          }, [
            c(Oe, {
              class: "a_pagination__item__link",
              iconLeft: e8,
              role: "button",
              tabindex: this.disabledButtonFirstPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_FIRST_PAGE_",
              title: "_A_PAGINATION_FIRST_PAGE_",
              type: "button",
              onClick: this.updateOffsetFirst,
              onKeydown: this.keyDownUpdateOffsetFirst
            })
          ]) : "",
          c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonFirstPage }]
          }, [
            c(Oe, {
              class: "a_pagination__item__link",
              iconLeft: vA,
              role: "button",
              tabindex: this.disabledButtonFirstPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_PREVIOUS_PAGE_",
              title: "_A_PAGINATION_PREVIOUS_PAGE_",
              type: "button",
              onClick: this.updateOffsetPrevious,
              onKeydown: this.keyDownUpdateOffsetPrevious
            })
          ]),
          this.mode === "short" ? c("li", {
            class: "a_pagination__item"
          }, [
            c(be, {
              class: "a_pagination__item__link disabled",
              html: "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_",
              extra: {
                currentPage: this.currentItem,
                allPages: this.maxItems
              }
            })
          ]) : this.paginationItems.map((e) => {
            const t = e === this.currentItem;
            return c("li", {
              class: ["a_pagination__item", {
                active: t,
                disabled: this.disabled
              }]
            }, [
              c(Oe, {
                "aria-current": t ? !0 : void 0,
                class: "a_pagination__item__link",
                extra: {
                  page: e
                },
                role: "button",
                tabindex: t || this.disabled ? -1 : 0,
                tag: "a",
                text: e,
                textAriaHidden: !0,
                textScreenReader: "_A_PAGINATION_TO_PAGE_{{page}}_",
                title: "_A_PAGINATION_TO_PAGE_{{page}}_",
                type: "button",
                onClick: () => this.updateOffset(e),
                onKeydown: (n) => this.keyDownUpdateOffset(n, e)
              })
            ]);
          }),
          c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonLastPage }]
          }, [
            c(Oe, {
              class: "a_pagination__item__link",
              iconLeft: kp,
              role: "button",
              tabindex: this.disabledButtonLastPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_NEXT_PAGE_",
              title: "_A_PAGINATION_NEXT_PAGE_",
              type: "button",
              onClick: this.updateOffsetNext,
              onKeydown: this.keyDownUpdateOffsetNext
            })
          ]),
          this.mode !== "short" ? c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonLastPage }]
          }, [
            c(Oe, {
              class: "a_pagination__item__link",
              iconLeft: t8,
              role: "button",
              tabindex: this.disabledButtonLastPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_LAST_PAGE_",
              title: "_A_PAGINATION_LAST_PAGE_",
              type: "button",
              onClick: this.updateOffsetLast,
              onKeydown: this.keyDownUpdateOffsetLast
            })
          ]) : ""
        ])
      ]
    });
  }
};
function r8(e, { emit: t }) {
  const n = p(e, "isLoadingTable"), r = p(e, "limit"), a = d(() => `${r.value}`), s = (f) => {
    n.value || t("update:limit", +f);
  };
  return {
    changeLimit: s,
    changeLimitFromSelect: ({ model: f }) => {
      s(f);
    },
    keyDownChangeLimit: (f, _) => {
      (f.keyCode === X.enter || f.keyCode === X.space) && (s(_), f.stopPropagation(), f.preventDefault());
    },
    limitString: a
  };
}
function a8(e) {
  const t = p(e, "offset"), n = p(e, "rowsLength"), r = p(e, "countAllRows"), {
    filterCurrency: a
  } = tr(), s = d(() => a(+t.value + 1, { suffix: "", digits: 0 })), o = d(() => a(+t.value + n.value, { suffix: "", digits: 0 })), u = d(() => a(r.value, { suffix: "", digits: 0 }));
  return {
    extraForTranslate: d(() => ({
      start: s.value,
      current: o.value,
      count: u.value
    }))
  };
}
const i8 = {
  name: "APaginationCountPerPage",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    limit: {
      type: Number,
      required: !0
    },
    limitsPerPage: {
      type: Array,
      required: !1,
      default: () => ["10", "25", "50", "100"]
    },
    mode: {
      type: String,
      required: !1,
      default: "group",
      validator: (e) => ["inline", "group", "select"].indexOf(e) !== -1
    },
    offset: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    showTextCountFromTo: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: [
    "update:limit"
  ],
  setup(e, t) {
    const {
      changeLimit: n,
      changeLimitFromSelect: r,
      keyDownChangeLimit: a,
      limitString: s
    } = r8(e, t), {
      extraForTranslate: o
    } = a8(e);
    return {
      changeLimit: n,
      changeLimitFromSelect: r,
      extraForTranslate: o,
      keyDownChangeLimit: a,
      limitString: s
    };
  },
  render() {
    return c("div", {
      class: "a_pagination__counts"
    }, this.mode === "inline" || this.mode === "group" ? [
      this.showTextCountFromTo ? c(be, {
        class: "a_pagination__count_from_to",
        html: "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_",
        extra: this.extraForTranslate
      }) : "",
      c(be, {
        tag: "span",
        class: "a_pagination__count__text",
        html: "_A_COUNT_PER_PAGE_"
      }),
      this.mode === "inline" ? c("div", {
        class: "a_pagination__count"
      }, [
        this.limitsPerPage.map((e) => {
          const t = +e === this.limit;
          return c("div", {
            class: "a_pagination__count__item"
          }, [
            c(Oe, {
              "aria-current": t ? !0 : void 0,
              class: "a_btn a_btn_link a_pagination__count__button",
              disabled: t || this.disabled,
              extra: {
                count: e
              },
              text: e,
              textAriaHidden: !0,
              textScreenReader: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              title: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              type: "button",
              onClick: () => this.changeLimit(e)
            })
          ]);
        })
      ]) : c("ul", {
        class: "a_pagination a_pagination_group"
      }, [
        this.limitsPerPage.map((e) => {
          const t = +e === this.limit;
          return c("li", {
            class: [
              "a_pagination__item",
              {
                active: t
              }
            ]
          }, [
            c(Oe, {
              "aria-current": t ? !0 : void 0,
              class: "a_pagination__item__link",
              disabled: this.disabled,
              extra: {
                count: e
              },
              role: "button",
              tabindex: t || this.disabled ? -1 : 0,
              tag: "a",
              text: e,
              textAriaHidden: !0,
              textScreenReader: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              title: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              type: "button",
              onClick: () => this.changeLimit(e),
              onKeydown: (n) => this.keyDownChangeLimit(n, e)
            })
          ]);
        })
      ])
    ] : [
      this.showTextCountFromTo ? c(be, {
        class: "a_pagination__count_from_to",
        html: "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_",
        extra: this.extraForTranslate
      }) : "",
      c(Vl, {
        label: "_A_COUNT_PER_PAGE_",
        labelClass: "a_sr_only",
        data: this.limitsPerPage,
        isDataSimpleArray: !0,
        isLabelFloat: !1,
        deselectable: !1,
        menuWidthType: "by_content",
        modelValue: this.limitString,
        disabled: this.disabled,
        change: this.changeLimitFromSelect
      })
    ]);
  }
};
function s8(e, {
  isMobile: t = R(!1),
  updateLimit: n = () => {
  },
  updateOffset: r = () => {
  }
}) {
  const a = p(e, "modes"), s = p(e, "countAllRows"), o = p(e, "disabled"), u = p(e, "limitsPerPage"), f = p(e, "limit"), _ = p(e, "offset"), m = p(e, "rowsLength"), b = p(e, "totalRowsCount"), v = p(e, "maxPages"), g = d(() => t.value ? a.value.mobile || {
    perPage: {
      mode: "select",
      position: 0,
      showTextCountFromTo: !1
    },
    pagination: {
      mode: "short",
      position: 1
    }
  } : a.value.desktop || {
    perPage: {
      mode: "inline",
      position: 0,
      showTextCountFromTo: !0
    },
    pagination: {
      mode: "normal",
      position: 1
    }
  }), S = d(() => {
    const w = [];
    return Y(g.value, (T, I) => {
      w.push({
        ...T,
        component: I
      });
    }), Pf(w, "position");
  });
  return {
    components: d(() => {
      const w = [];
      return Y(S.value, (T) => {
        T.component === "perPage" ? w.push(c(i8, {
          countAllRows: s.value,
          disabled: o.value,
          limitsPerPage: u.value,
          limit: f.value,
          offset: _.value,
          rowsLength: m.value,
          mode: T.mode,
          showTextCountFromTo: T.showTextCountFromTo,
          "onUpdate:limit": n
        })) : T.component === "pagination" && w.push(c(n8, {
          limit: f.value,
          disabled: o.value,
          totalRowsCount: b.value,
          offset: _.value,
          paginationMaxItems: v.value,
          mode: T.mode,
          "onUpdate:offset": r
        }));
      }), w;
    })
  };
}
function l8(e, { emit: t }) {
  return {
    updateLimit: (a) => {
      t("update:limit", a);
    },
    updateOffset: (a) => {
      t("update:offset", a);
    }
  };
}
const o8 = {
  name: "APagination",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hasRows: {
      type: Boolean,
      required: !0
    },
    limit: {
      type: Number,
      required: !0
    },
    limitsPerPage: {
      type: Array,
      required: !1,
      default: () => ["10", "25", "50", "100"]
    },
    maxPages: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => hi(e) && e > 0
    },
    offset: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    totalRowsCount: {
      type: Number,
      required: !0
    },
    modes: {
      type: Object,
      required: !1,
      default: () => ({
        // perPage: inline / group / select
        // pagination: normal / short / loadMore
        desktop: {
          perPage: {
            mode: "group",
            position: 0,
            showTextCountFromTo: !0
          },
          pagination: {
            mode: "normal",
            position: 1
          }
        },
        mobile: {
          perPage: {
            mode: "select",
            position: 0,
            showTextCountFromTo: !1
          },
          pagination: {
            mode: "short",
            position: 1
          }
        }
      })
    }
  },
  emits: [
    "update:limit",
    "update:offset"
  ],
  setup(e, t) {
    const {
      isMobileWidth: n
    } = En(), {
      updateLimit: r,
      updateOffset: a
    } = l8(e, t), {
      components: s
    } = s8(e, {
      isMobile: n,
      updateLimit: r,
      updateOffset: a
    });
    return {
      components: s,
      updateLimit: r,
      updateOffset: a
    };
  },
  render() {
    return this.hasRows ? c("div", {
      class: "a_pagination__parent"
    }, this.components) : null;
  }
};
function u8(e, {
  widthPercent: t = d(() => 0)
}) {
  const n = p(e, "classProgressBar");
  return {
    classProgressBarLocal: d(() => We(n.value) ? n.value(t.value) : n.value)
  };
}
function d8(e) {
  const t = p(e, "duration");
  return {
    durationLocal: d(() => {
      if (!ae(t.value))
        return `${t.value}s`;
    })
  };
}
function xA(e, {
  widthPercent: t = d(() => 0)
}) {
  const n = p(e, "valueTextInteger"), {
    filterCurrency: r
  } = tr();
  return {
    valuePercent: d(() => n.value ? r(t.value, {
      suffix: "%",
      digits: 0
    }) : r(t.value, {
      suffix: "%",
      digits: 2
    }))
  };
}
function CA(e) {
  const t = p(e, "min"), n = p(e, "max"), r = p(e, "value");
  return {
    widthPercent: d(() => (r.value - t.value) / (n.value - t.value) * 100)
  };
}
const $U = {
  name: "AProgress",
  props: {
    classProgressBar: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    duration: {
      type: Number,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1,
      default: !1
    },
    max: {
      type: Number,
      required: !1,
      default: 100
    },
    min: {
      type: Number,
      required: !1,
      default: 0
    },
    reverse: {
      type: Boolean,
      required: !1,
      default: !1
    },
    showValue: {
      type: Boolean,
      required: !1,
      default: !0
    },
    striped: {
      type: Boolean,
      required: !1,
      default: !1
    },
    stripedFlow: {
      type: Boolean,
      required: !1,
      default: !1
    },
    value: {
      type: Number,
      required: !1,
      default: 0
    },
    valueTextInteger: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  setup(e) {
    const {
      widthPercent: t
    } = CA(e), {
      valuePercent: n
    } = xA(e, {
      widthPercent: t
    }), {
      classProgressBarLocal: r
    } = u8(e, {
      widthPercent: t
    }), {
      durationLocal: a
    } = d8(e);
    return {
      classProgressBarLocal: r,
      durationLocal: a,
      valuePercent: n,
      widthPercent: t
    };
  },
  render() {
    let e;
    return this.$slots.progressText ? e = c("span", {
      class: "a_progress__text"
    }, [
      this.$slots.progressText && this.$slots.progressText({
        valuePercent: this.valuePercent
      })
    ]) : this.showValue && (e = c("span", {
      class: "a_progress__text"
    }, this.valuePercent)), c("div", {
      class: ["a_progress", {
        a_progress_reverse: this.reverse
      }]
    }, [
      c("div", {
        class: [
          "a_progress__bar",
          {
            a_progress__bar_striped: this.striped,
            a_progress__bar_striped_flow: this.stripedFlow,
            a_progress__bar_indeterminate: this.indeterminate
          },
          this.classProgressBarLocal
        ],
        role: "progressbar",
        "aria-valuenow": this.value,
        "aria-valuemin": this.min,
        "aria-valuemax": this.max,
        style: {
          width: `${this.widthPercent}%`,
          "animation-duration": this.durationLocal
        }
      }, [
        e
      ])
    ]);
  }
};
function c8(e, {
  widthPercent: t = d(() => 0)
}) {
  const n = p(e, "strokeWidth"), r = 50, a = 2 * Math.PI * r, s = d(() => t.value * a / 100), o = d(() => `${s.value}px ${a - s.value}px`), u = d(() => `stroke-dasharray: ${o.value};`), f = d(() => r + n.value / 2);
  return {
    circleStyles: u,
    cxCy: f,
    radius: r
  };
}
function f8(e) {
  const t = p(e, "width");
  return {
    sizesLocal: d(() => qn(t.value) ? `height: ${t.value}px; width: ${t.value}px;` : `height: ${t.value}; width: ${t.value};`)
  };
}
function h8(e) {
  const t = p(e, "rotate"), n = p(e, "strokeWidth"), r = d(() => {
    const s = 100 + n.value;
    return `0 0 ${s} ${s}`;
  });
  return {
    svgTransform: d(() => `transform: rotate(${t.value - 90}deg);`),
    svgViewBox: r
  };
}
const WU = {
  name: "AProgressCircle",
  props: {
    duration: {
      type: Number,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1,
      default: !1
    },
    max: {
      type: Number,
      required: !1,
      default: 100
    },
    min: {
      type: Number,
      required: !1,
      default: 0
    },
    rotate: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0 && e <= 360
    },
    showValue: {
      type: Boolean,
      required: !1,
      default: !0
    },
    strokeWidth: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => e > 0
    },
    value: {
      type: Number,
      required: !1,
      default: 0
    },
    valueTextClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    valueTextInteger: {
      type: Boolean,
      required: !1,
      default: !1
    },
    width: {
      type: [Number, String],
      required: !1,
      default: 125
    }
  },
  setup(e) {
    const {
      widthPercent: t
    } = CA(e), {
      valuePercent: n
    } = xA(e, {
      widthPercent: t
    }), {
      circleStyles: r,
      cxCy: a,
      radius: s
    } = c8(e, {
      widthPercent: t
    }), {
      svgTransform: o,
      svgViewBox: u
    } = h8(e), {
      sizesLocal: f
    } = f8(e);
    return {
      circleStyles: r,
      cxCy: a,
      radius: s,
      sizesLocal: f,
      svgTransform: o,
      svgViewBox: u,
      valuePercent: n,
      widthPercent: t
    };
  },
  render() {
    let e;
    return this.$slots.progressText ? e = c("span", {
      class: ["a_progress_circle__text", this.valueTextClass]
    }, [
      this.$slots.progressText && this.$slots.progressText({
        valuePercent: this.valuePercent
      })
    ]) : this.showValue && (e = c("span", {
      class: ["a_progress_circle__text", this.valueTextClass]
    }, this.valuePercent)), c("div", {
      class: "a_progress_circle",
      style: this.sizesLocal,
      role: "progressbar",
      "aria-valuenow": this.value,
      "aria-valuemin": this.min,
      "aria-valuemax": this.max
    }, [
      c("svg", {
        viewBox: this.svgViewBox,
        style: this.svgTransform
      }, [
        c("circle", {
          class: "a_progress_circle__base",
          cx: this.cxCy,
          cy: this.cxCy,
          r: this.radius,
          "stroke-width": this.strokeWidth
        }),
        c("circle", {
          class: ["a_progress_circle__scale", {
            a_progress_circle__scale_indeterminate: this.indeterminate
          }],
          cx: this.cxCy,
          cy: this.cxCy,
          r: this.radius,
          "stroke-width": this.strokeWidth,
          style: this.circleStyles
        })
      ]),
      e
    ]);
  }
}, Mp = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16">
  <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
</svg>`, Fv = {
  name: "ADecimalIcon",
  components: {
    AIcon: lt
  },
  props: {
    value: {
      type: Number,
      default: 50
    },
    color: {
      type: String,
      default: "yellow"
    },
    icon: {
      type: String,
      default: Mp
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    }
  },
  render() {
    const e = {
      class: "a_decimal_rate_icon a_rate_icon_decimal",
      style: {
        position: "absolute",
        overflow: "hidden",
        width: `${this.value}%`,
        color: this.color
      }
    };
    return c("i", e, [
      c(lt, {
        icon: this.icon,
        class: `a_decimal_rate_icon a_rate_icon_${this.size}`
      })
    ]);
  }
}, IA = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star" viewBox="0 0 16 16">
  <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.56.56 0 0 0-.163-.505L1.71 6.745l4.052-.576a.53.53 0 0 0 .393-.288L8 2.223l1.847 3.658a.53.53 0 0 0 .393.288l4.052.575-2.906 2.77a.56.56 0 0 0-.163.506l.694 3.957-3.686-1.894a.5.5 0 0 0-.461 0z"/>
</svg>`, qv = {
  name: "ARateIcon",
  components: {
    AIcon: lt,
    ADecimalIcon: Fv
  },
  props: {
    value: {
      type: Number,
      default: 50
    },
    color: {
      type: String,
      default: "yellow"
    },
    icon: {
      type: String,
      default: IA
    },
    iconFill: {
      type: String,
      default: Mp
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    },
    isHovered: {
      type: Boolean,
      default: !1
    }
  },
  emits: [
    "mouseenter",
    "mouseleave",
    "click",
    "dblclick",
    "mousemove"
  ],
  setup(e, { emit: t }) {
    return {
      handleMouseEnter(n) {
        t("mouseenter", n);
      },
      handleMouseLeave(n) {
        t("mouseleave", n);
      },
      handleClick(n) {
        t("click", n);
      },
      handleDblClick(n) {
        t("dblclick", n);
      },
      handleMouseMove(n) {
        t("mousemove", n);
      }
    };
  },
  render() {
    return c(
      "span",
      {
        class: `el-rate__item a_rate_icon_${this.size}`,
        style: {
          position: "relative",
          display: "inline-flex",
          alignItems: "center",
          justifyContent: "center"
        },
        onClick: this.handleClick,
        onDblclick: this.handleDblClick,
        onMouseenter: this.handleMouseEnter,
        onMouseleave: this.handleMouseLeave,
        onMousemove: this.handleMouseMove
      },
      [
        c("div", { class: "a_rate_icon_align" }, [
          c(lt, {
            icon: this.icon,
            class: "a_decimal_rate_icon a_rate_decimal",
            color: this.color
          }),
          c(Fv, {
            icon: this.iconFill,
            value: this.value,
            color: this.color,
            size: this.size
          })
        ])
      ]
    );
  }
}, UU = {
  name: "ARate",
  components: {
    AIcon: lt,
    ATranslation: be,
    ARateIcon: qv
  },
  props: {
    text: {
      type: String,
      default: null
    },
    extra: {
      type: Object,
      required: !1
    },
    rating: {
      type: Number,
      default: 5
    },
    icon: {
      type: String,
      default: IA
    },
    iconFill: {
      type: String,
      default: Mp
    },
    readonly: {
      type: Boolean,
      default: !1
    },
    showScore: {
      type: Boolean,
      default: !1
    },
    modelValue: {
      type: Number,
      default: 0
    },
    color: {
      type: String,
      default: "yellow"
    },
    hoveredColor: {
      type: String,
      default: "orange"
    },
    halfIcon: {
      type: Boolean,
      default: !1
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const {
      text: n,
      rating: r,
      modelValue: a,
      showScore: s,
      readonly: o,
      icon: u,
      extra: f,
      color: _,
      hoveredColor: m,
      halfIcon: b,
      size: v
    } = XI(e), g = R(a.value), S = R(a.value), A = R(-1), w = d(() => e.iconFill ? e.iconFill : `${e.icon}Fill`), T = () => {
      o.value || (g.value = 0, t("update:modelValue", g.value));
    }, I = (F, D) => {
      if (o.value)
        return;
      A.value = D;
      let W = D + 1;
      if (b.value) {
        const $ = F.target.getBoundingClientRect();
        W = F.clientX - $.left < $.width / 2 ? D + 0.5 : D + 1;
      }
      S.value = W;
    }, C = () => {
      o.value || (A.value = -1);
    }, E = d(() => Array(r.value).fill(null).map((F, D) => D <= A.value ? m.value : D < g.value ? _.value : null)), P = (F, D) => {
      if (o.value)
        return;
      let W = D + 1;
      if (b.value) {
        const $ = F.target.getBoundingClientRect();
        W = F.clientX - $.left < $.width / 2 ? D + 0.5 : D + 1;
      }
      t("update:modelValue", W), g.value = W;
    }, M = d(() => {
      const F = A.value >= 0 ? S.value : g.value, D = Math.floor(F), W = F % 1, $ = Array(r.value).fill(0);
      for (let z = 0; z < D; z++)
        $[z] = 100;
      return W !== 0 && D < r.value && ($[D] = W * 100), $;
    });
    return {
      rating: r,
      showScore: s,
      readonly: o,
      icon: u,
      iconFill: w,
      text: n,
      extra: f,
      color: _,
      size: v,
      onMouseEnterIcon: I,
      onMouseLeaveIcon: C,
      onClickIcon: P,
      onDoubleClickIcon: T,
      onMouseMoveIcon: (F, D) => {
        if (o.value)
          return;
        let W = D + 1;
        if (b.value) {
          const $ = F.target.getBoundingClientRect();
          W = F.clientX - $.left < $.width / 2 ? D + 0.5 : D + 1;
        }
        S.value !== W && (S.value = W, A.value = D);
      },
      modelValue: d(() => g.value),
      iconValues: M,
      computedColor: E
    };
  },
  render() {
    return c("div", { class: "a_rate_container" }, [
      ...Array.from({ length: this.rating }, (e, t) => c(qv, {
        class: "a_rate_icon",
        icon: this.icon,
        iconFill: this.iconFill,
        value: this.iconValues[t],
        onClick: (n) => this.onClickIcon(n, t),
        onDblclick: this.onDoubleClickIcon,
        onMouseenter: (n) => this.onMouseEnterIcon(n, t),
        onMouseleave: this.onMouseLeaveIcon,
        onMousemove: (n) => this.onMouseMoveIcon(n, t),
        color: this.computedColor[t],
        size: this.size,
        key: t
      })),
      this.showScore && c("span", { class: "a_rate_score" }, this.modelValue.toString()),
      c(be, {
        class: "a_rate_label",
        text: this.text,
        extra: this.extra
      })
    ]);
  }
}, p8 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
  <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0"/>
</svg>`, _8 = {
  name: "AResizer",
  props: {
    direction: {
      type: String,
      required: !0,
      validator: (e) => ["x", "y"].indexOf(e) !== -1
    },
    disabled: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "mousedown",
    "mousemove",
    "mouseoutDocument",
    "mouseup"
  ],
  data() {
    return {
      clientHeight: 0,
      clientWidth: 0
    };
  },
  computed: {
    isDirectionX() {
      return this.direction === "x";
    },
    isDirectionY() {
      return this.direction === "y";
    },
    directionClass() {
      return `a_resizer_${this.direction}`;
    },
    directionIcon() {
      if (this.direction === "x")
        return p8;
      if (this.direction === "y")
        return uo;
    },
    cursor() {
      if (this.direction === "x")
        return "w-resize";
      if (this.direction === "y")
        return "s-resize";
    },
    bodyClass() {
      return `a_resizer_${this.direction}_active__body`;
    },
    attributesResizer() {
      const e = {
        class: ["a_resizer", this.directionClass, {
          a_resizer_disabled: this.disabled
        }],
        ariaHidden: !0
      };
      return this.disabled || (e.onMousedown = this.mousedown), e;
    }
  },
  unmounted() {
    this.removeMouseEventListeners(), this.removeClassFromBody();
  },
  methods: {
    mousedown(e) {
      this.addMouseEventListeners(), this.clientHeight = document.documentElement.clientHeight, this.clientWidth = document.documentElement.clientWidth, this.$emit("mousedown", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.addClassToBody();
    },
    mousemove(e) {
      this.$emit("mousemove", {
        $event: e,
        clientX: e.clientX,
        clientY: e.clientY,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      });
    },
    mouseup(e) {
      this.removeMouseEventListeners(), this.$emit("mouseup", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.removeClassFromBody();
    },
    mouseoutDocument(e) {
      this.removeMouseEventListeners(), this.$emit("mouseoutDocument", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.removeClassFromBody();
    },
    addMouseEventListeners() {
      document.addEventListener("mousemove", this.mousemove), document.addEventListener("mouseup", this.mouseup), document.addEventListener("mouseleave", this.mouseoutDocument);
    },
    removeMouseEventListeners() {
      document.removeEventListener("mousemove", this.mousemove), document.removeEventListener("mouseup", this.mouseup), document.removeEventListener("mouseleave", this.mouseoutDocument);
    },
    addClassToBody() {
      document.body.classList.add(this.bodyClass);
    },
    removeClassFromBody() {
      document.body.classList.remove(this.bodyClass);
    }
  },
  render() {
    return c("div", this.attributesResizer, [
      c("div", {
        class: "a_resizer__line"
      }),
      c(lt, {
        class: "a_resizer__icon",
        icon: this.directionIcon
      })
    ]);
  }
}, m8 = {
  name: "ACircle",
  props: {
    cx: {
      type: [Number, String],
      required: !0
    },
    cy: {
      type: [Number, String],
      required: !0
    },
    r: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("circle", {
      cx: this.cx,
      cy: this.cy,
      r: this.r,
      fill: this.fill,
      stroke: this.stroke,
      "stroke-width": this.strokeWidth
    });
  }
}, Tl = {
  name: "ARect",
  props: {
    width: {
      type: [Number, String],
      required: !0
    },
    height: {
      type: [Number, String],
      required: !0
    },
    x: {
      type: [Number, String],
      required: !0
    },
    y: {
      type: [Number, String],
      required: !0
    },
    rx: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    ry: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("rect", {
      width: this.width,
      height: this.height,
      x: this.x,
      y: this.y,
      rx: this.rx,
      ry: this.ry,
      fill: this.fill,
      stroke: this.stroke,
      strokeWidth: this.strokeWidth
    });
  }
};
function b8(e) {
  const t = p(e, "yStandTop"), n = p(e, "pipesWidth"), r = p(e, "centerX"), a = p(e, "balanceWidth"), s = p(e, "balanceCircleRadius"), o = p(e, "balanceTopHeight"), u = p(e, "degree"), f = d(() => t.value - s.value - n.value / 2), _ = d(() => a.value / 2), m = d(() => r.value - _.value - s.value), b = d(() => r.value + s.value), v = d(() => t.value - s.value), g = d(() => r.value - n.value / 2), S = d(() => v.value - s.value - o.value);
  return {
    transformRotate: d(() => `rotate(${u.value}, ${r.value}, ${v.value})`),
    widthBalancePipe: _,
    xBalanceLeft: m,
    xBalanceRight: b,
    xBalanceTopHeight: g,
    yBalance: f,
    yBalanceCenter: v,
    yBalanceTopHeight: S
  };
}
const v8 = {
  name: "AScaleBalance",
  props: {
    degree: {
      type: Number,
      required: !0
    },
    pipesWidth: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    balanceWidth: {
      type: Number,
      required: !0
    },
    balanceCircleRadius: {
      type: Number,
      required: !0
    },
    balanceTopHeight: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      transformRotate: t,
      widthBalancePipe: n,
      xBalanceLeft: r,
      xBalanceRight: a,
      xBalanceTopHeight: s,
      yBalance: o,
      yBalanceCenter: u,
      yBalanceTopHeight: f
    } = b8(e);
    return {
      transformRotate: t,
      widthBalancePipe: n,
      xBalanceLeft: r,
      xBalanceRight: a,
      xBalanceTopHeight: s,
      yBalance: o,
      yBalanceCenter: u,
      yBalanceTopHeight: f
    };
  },
  render() {
    return c("g", {
      transform: this.transformRotate
    }, [
      c(Tl, {
        width: this.pipesWidth,
        height: this.balanceTopHeight,
        x: this.xBalanceTopHeight,
        y: this.yBalanceTopHeight,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(Tl, {
        width: this.widthBalancePipe,
        height: this.pipesWidth,
        x: this.xBalanceLeft,
        y: this.yBalance,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(Tl, {
        width: this.widthBalancePipe,
        height: this.pipesWidth,
        x: this.xBalanceRight,
        y: this.yBalance,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(m8, {
        cx: this.centerX,
        cy: this.yBalanceCenter,
        r: this.balanceCircleRadius,
        fill: "none",
        stroke: "currentColor",
        strokeWidth: this.pipesWidth
      })
    ]);
  }
};
function y8(e) {
  const t = p(e, "direction"), n = p(e, "degree"), r = p(e, "balanceWidth"), a = p(e, "balanceCircleRadius"), s = p(e, "yStandTop"), o = p(e, "bowlThreadHeight"), u = p(e, "pipesWidth"), f = p(e, "centerX"), _ = p(e, "bowlWidth"), m = d(() => r.value / 2 + a.value), b = d(() => s.value + o.value - u.value / 2 - a.value + 2), v = d(() => t.value === "right" ? n.value : n.value + 180), g = d(() => r.value / 2 + _.value / 2 + a.value - 2), S = d(() => r.value / 2 - _.value / 2 + a.value - 1), A = d(() => t.value === "left" ? f.value - g.value + m.value : f.value + S.value - m.value), w = d(() => (t.value === "right", m.value * Math.cos(v.value * Math.PI / 180) + A.value)), T = d(() => m.value * Math.sin(v.value * Math.PI / 180) + b.value);
  return {
    x: w,
    y: T
  };
}
const Nv = {
  name: "AScaleBowl",
  props: {
    direction: {
      type: String,
      required: !0,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    },
    degree: {
      type: Number,
      required: !0
    },
    balanceWidth: {
      type: Number,
      required: !0
    },
    balanceCircleRadius: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    bowlThreadHeight: {
      type: Number,
      required: !0
    },
    pipesWidth: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    },
    bowlWidth: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      x: t,
      y: n
    } = y8(e);
    return {
      x: t,
      y: n
    };
  },
  render() {
    return c("use", {
      x: this.x,
      y: this.y,
      "xlink:href": "#scale_bowl"
    });
  }
}, g8 = {
  name: "APath",
  props: {
    d: {
      type: String,
      required: !0,
      default: ""
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    fillRule: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["evenodd", "inherit", "initial", "nonzero", "revert", "unset"].indexOf(e) !== -1
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("path", {
      d: this.d,
      fill: this.fill,
      fillRule: this.fillRule,
      stroke: this.stroke,
      strokeWidth: this.strokeWidth
    });
  }
};
function S8(e) {
  const t = p(e, "points"), n = (a) => Yn(a, (o) => {
    let u = "";
    return yt(o) ? u = o : Ae(o) && (u = o.join(",")), u;
  }).join(" ");
  return {
    pointsLocal: d(() => yt(t.value) ? t.value : Ae(t.value) ? n(t.value) : "")
  };
}
const A8 = {
  name: "APolyline",
  props: {
    points: {
      type: [Array, String],
      required: !0,
      default: []
    },
    fill: {
      type: String,
      required: !1,
      default: "none"
    },
    stroke: {
      type: String,
      required: !1,
      default: "currentColor"
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      pointsLocal: t
    } = S8(e);
    return {
      pointsLocal: t
    };
  },
  render() {
    return c("polyline", {
      points: this.pointsLocal,
      fill: this.fill,
      stroke: this.stroke,
      "stroke-width": this.strokeWidth
    });
  }
};
function w8(e) {
  const t = p(e, "bowlThreadHeight"), n = p(e, "bowlThreadWidth"), r = p(e, "bowlThreadPaddingX"), a = p(e, "bowlWidth"), s = p(e, "bowlRadius"), o = d(() => {
    const f = r.value, _ = r.value + n.value / 2, m = r.value + n.value, b = 1, v = b - t.value;
    return `${f},${b} ${_},${v} ${m},${b}`;
  });
  return {
    bowlD: d(() => `m0,0 a${s.value},${s.value} 0 1,0 ${a.value},0 z`),
    bowlThreadPoints: o
  };
}
const T8 = {
  name: "AScaleBowlDefs",
  props: {
    bowlThreadStrokeWidth: {
      type: Number,
      required: !0
    },
    bowlThreadWidth: {
      type: Number,
      required: !0
    },
    bowlThreadHeight: {
      type: Number,
      required: !0
    },
    bowlThreadPaddingX: {
      type: Number,
      required: !0
    },
    bowlWidth: {
      type: Number,
      required: !0
    },
    bowlRadius: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      bowlD: t,
      bowlThreadPoints: n
    } = w8(e);
    return {
      bowlD: t,
      bowlThreadPoints: n
    };
  },
  render() {
    return c("defs", {}, [
      c("g", {
        id: "scale_bowl"
      }, [
        c(A8, {
          points: this.bowlThreadPoints,
          strokeWidth: this.bowlThreadStrokeWidth
        }),
        c(g8, {
          d: this.bowlD,
          fill: "currentColor"
        })
      ])
    ]);
  }
};
function x8(e) {
  const t = p(e, "centerX"), n = p(e, "standWidth"), r = p(e, "pipesWidth"), a = d(() => t.value - r.value / 2), s = d(() => t.value - n.value / 2);
  return {
    xTop: a,
    xBottom: s
  };
}
const C8 = {
  name: "AScaleStand",
  props: {
    pipesWidth: {
      type: Number,
      required: !0
    },
    standWidth: {
      type: Number,
      required: !0
    },
    standHeight: {
      type: Number,
      required: !0
    },
    yStandBottom: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      xBottom: t,
      xTop: n
    } = x8(e);
    return {
      xBottom: t,
      xTop: n
    };
  },
  render() {
    return c("g", null, [
      c(Tl, {
        width: this.pipesWidth,
        height: this.standHeight,
        x: this.xTop,
        y: this.yStandTop,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(Tl, {
        width: this.standWidth,
        height: this.pipesWidth,
        x: this.xBottom,
        y: this.yStandBottom,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      })
    ]);
  }
};
function I8(e) {
  const t = p(e, "value"), n = p(e, "classNegative"), r = p(e, "classPositive"), a = p(e, "classNeutral");
  return {
    cssClass: d(() => {
      if (t.value === 0) {
        if (a.value)
          return a.value;
      } else if (t.value < 0) {
        if (n.value)
          return n.value;
      } else if (r.value)
        return r.value;
    })
  };
}
function L8(e) {
  const t = p(e, "value"), n = p(e, "maxDegree");
  return {
    degree: d(() => n.value * t.value / 100)
  };
}
function E8(e) {
  const t = p(e, "viewBoxWidth"), n = p(e, "viewBoxHeight"), r = p(e, "pipesWidth"), a = p(e, "standHeight"), s = d(() => `0 0 ${t.value} ${n.value}`), o = d(() => t.value / 2), u = d(() => n.value - r.value), f = d(() => u.value - a.value + 1);
  return {
    centerX: o,
    viewBoxLocal: s,
    yStandBottom: u,
    yStandTop: f
  };
}
const jU = {
  name: "AScale",
  props: {
    balanceCircleRadius: {
      type: Number,
      required: !1,
      default: 3.5
    },
    balanceTopHeight: {
      type: Number,
      required: !1,
      default: 6
    },
    balanceWidth: {
      type: Number,
      required: !1,
      default: 60
    },
    bowlRadius: {
      type: Number,
      required: !1,
      default: 12.6
    },
    bowlThreadHeight: {
      type: Number,
      required: !1,
      default: 20
    },
    bowlThreadPaddingX: {
      type: Number,
      required: !1,
      default: 4
    },
    bowlThreadStrokeWidth: {
      type: Number,
      required: !1,
      default: 2
    },
    bowlThreadWidth: {
      type: Number,
      required: !1,
      default: 16
    },
    bowlWidth: {
      type: Number,
      required: !1,
      default: 25
    },
    classNegative: {
      type: String,
      required: !1,
      default: void 0
    },
    classNeutral: {
      type: String,
      required: !1,
      default: void 0
    },
    classPositive: {
      type: String,
      required: !1,
      default: void 0
    },
    maxDegree: {
      type: Number,
      required: !1,
      default: 30
    },
    pipesWidth: {
      type: Number,
      required: !1,
      default: 3
    },
    standHeight: {
      type: Number,
      required: !1,
      default: 46
    },
    standWidth: {
      type: Number,
      required: !1,
      default: 70
    },
    value: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= -100 && e <= 100
    },
    viewBoxHeight: {
      type: Number,
      required: !1,
      default: 80
    },
    viewBoxWidth: {
      type: Number,
      required: !1,
      default: 100
    }
  },
  setup(e) {
    const {
      degree: t
    } = L8(e), {
      cssClass: n
    } = I8(e), {
      centerX: r,
      viewBoxLocal: a,
      yStandBottom: s,
      yStandTop: o
    } = E8(e);
    return {
      centerX: r,
      cssClass: n,
      degree: t,
      viewBoxLocal: a,
      yStandBottom: s,
      yStandTop: o
    };
  },
  render() {
    return c("div", {
      class: this.cssClass
    }, [
      c("svg", {
        viewBox: this.viewBoxLocal,
        version: "1.1",
        xmlns: "http://www.w3.org/2000/svg"
      }, [
        c(T8, {
          bowlThreadStrokeWidth: this.bowlThreadStrokeWidth,
          bowlThreadWidth: this.bowlThreadWidth,
          bowlThreadHeight: this.bowlThreadHeight,
          bowlThreadPaddingX: this.bowlThreadPaddingX,
          bowlWidth: this.bowlWidth,
          bowlRadius: this.bowlRadius
        }),
        c(v8, {
          degree: this.degree,
          pipesWidth: this.pipesWidth,
          yStandTop: this.yStandTop,
          centerX: this.centerX,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          balanceTopHeight: this.balanceTopHeight
        }),
        c(C8, {
          standWidth: this.standWidth,
          standHeight: this.standHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          yStandBottom: this.yStandBottom,
          yStandTop: this.yStandTop
        }),
        c(Nv, {
          direction: "left",
          degree: this.degree,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          yStandTop: this.yStandTop,
          bowlThreadHeight: this.bowlThreadHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          bowlWidth: this.bowlWidth
        }),
        c(Nv, {
          direction: "right",
          degree: this.degree,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          yStandTop: this.yStandTop,
          bowlThreadHeight: this.bowlThreadHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          bowlWidth: this.bowlWidth
        })
      ])
    ]);
  }
};
function O8(e, {
  hasTextAndLength: t = R(!1),
  isMoreButtonObservingVisible: n = R(!1),
  isOpen: r = R(!1),
  isTextShorterThanTextLength: a = R(!1)
}) {
  const s = p(e, "btnIconLeftLess"), o = p(e, "btnIconLeftMore"), u = p(e, "btnIconRightLess"), f = p(e, "btnIconRightMore"), _ = p(e, "btnTextLess"), m = p(e, "btnTextMore"), b = p(e, "btnTitleLess"), v = p(e, "btnTitleMore"), g = p(e, "showLess"), S = R(void 0), A = d(() => r.value ? _.value : m.value), w = d(() => r.value ? b.value : v.value), T = d(() => r.value ? s.value : o.value), I = d(() => r.value ? u.value : f.value), C = d(() => t.value ? a.value ? !1 : g.value ? !0 : !r.value : n.value ? g.value ? !0 : !r.value : !1);
  return {
    btnIconLeft: T,
    btnIconRight: I,
    btnText: A,
    btnTitle: w,
    buttonRef: S,
    isButtonVisible: C
  };
}
function D8({
  hasTextAndLength: e = d(() => !1),
  isOpen: t = R(!1)
}) {
  return {
    ariaExpanded: d(() => {
      if (e.value)
        return t.value;
    })
  };
}
function P8(e, {
  hasTextAndLength: t = d(() => !1),
  isOpen: n = R(!1)
}) {
  const r = p(e, "height");
  return {
    maxHeightStyle: d(() => {
      if (!(t.value || n.value))
        return r.value === 0 ? "max-height: none;" : `max-height: ${r.value}px`;
    })
  };
}
function R8(e) {
  const t = p(e, "isOpenDefault");
  return {
    isOpen: R(t.value)
  };
}
function B8(e, {
  isBtnHiddenDependentOnTextLength: t = d(() => !1)
}) {
  const n = p(e, "height"), r = R(void 0), a = R(void 0), s = R(void 0), o = () => {
    if (t.value)
      return;
    (de(r.value, "offsetHeight") || 0) > n.value ? s.value = !0 : s.value = !1;
  };
  return {
    checkHeight: o,
    containerRef: r,
    isMoreButtonObservingVisible: s,
    startObservingMutation: () => {
      t.value || (a.value = new ResizeObserver(
        El(() => {
          o();
        }, 300)
      ), a.value.observe(r.value));
    },
    stopObservingMutation: () => {
      t.value || a.value && a.value.unobserve(r.value);
    }
  };
}
function k8({
  hasTextAndLength: e = d(() => !1),
  isOpen: t = R(!1)
}) {
  return {
    textScreenReaderLocal: d(() => {
      if (!e.value)
        return t.value ? "_A_SHOW_MORE_LESS_SCREEN_READER_" : "_A_SHOW_MORE_MORE_SCREEN_READER_";
    })
  };
}
function M8(e, {
  isOpen: t = R(!1)
}) {
  const n = p(e, "text"), r = p(e, "textLength"), a = d(() => !!(n.value && r.value)), s = d(() => r.value > n.value.length), o = d(() => a.value && s.value), u = d(() => {
    const _ = n.value.slice(0, r.value).trimEnd();
    let m = "...", b = !0;
    for (let v = _.length - 1; v > _.length - 4 && _[v] === "."; v--) {
      if (b)
        m = m.slice(0, -1);
      else
        break;
      b = !0;
    }
    return `${_}${m}`;
  }), f = d(() => {
    if (a.value) {
      if (s.value)
        return n.value;
      if (!t.value)
        return u.value;
    }
    return n.value;
  });
  return {
    hasTextAndLength: a,
    isBtnHiddenDependentOnTextLength: o,
    isTextShorterThanTextLength: s,
    textLocal: f
  };
}
function F8(e, {
  textLocal: t = d(() => {
  })
}) {
  const n = p(e, "safeHtml"), r = p(e, "html");
  return {
    isTextOrHtmlVisible: d(() => !!(t.value || n.value || r.value))
  };
}
function q8(e, { emit: t }, {
  containerRef: n = R(void 0),
  hasTextAndLength: r = d(() => !1),
  isOpen: a = R(!1),
  stopObservingMutation: s = () => {
  }
}) {
  const o = p(e, "showLess");
  return {
    isOpen: a,
    toggleButton: () => {
      a.value = !a.value, a.value && !o.value && s(), t("toggle", { isOpen: a.value }), r.value && a.value && !window.isScrollDisabled && Yu().then(
        () => ka({
          element: n.value
        })
      );
    }
  };
}
const GU = {
  name: "AShowMore",
  inheritAttrs: !0,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    btnAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link a_p_0"
    },
    btnIconLeftLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconLeftMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnId: {
      type: String,
      required: !1,
      default: void 0
    },
    btnParentClass: {
      type: String,
      required: !1,
      default: "a_text_center"
    },
    btnTextLess: {
      type: String,
      required: !1,
      default: "_A_SHOW_MORE_LESS_"
    },
    btnTextMore: {
      type: String,
      required: !1,
      default: "_A_SHOW_MORE_MORE_"
    },
    btnTitleLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitleMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitlePlacement: {
      type: String,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    height: {
      type: Number,
      required: !1,
      default: 200,
      validator: (e) => e >= 0
    },
    html: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => mt("a_show_more_")
    },
    isBtnTitleHtml: {
      type: Boolean,
      required: !1
    },
    isOpenDefault: {
      type: Boolean,
      required: !1,
      default: !1
    },
    safeHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    showLess: {
      type: Boolean,
      required: !1,
      default: !0
    },
    text: {
      type: String,
      required: !1,
      default: void 0
    },
    textLength: {
      type: Number,
      required: !1,
      default: void 0,
      validator: (e) => e > 0
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      isOpen: r
    } = R8(e), {
      hasTextAndLength: a,
      isBtnHiddenDependentOnTextLength: s,
      isTextShorterThanTextLength: o,
      textLocal: u
    } = M8(e, {
      isOpen: r
    }), {
      isTextOrHtmlVisible: f
    } = F8(e, {
      textLocal: u
    }), {
      checkHeight: _,
      containerRef: m,
      isMoreButtonObservingVisible: b,
      startObservingMutation: v,
      stopObservingMutation: g
    } = B8(e, {
      isBtnHiddenDependentOnTextLength: s
    }), {
      toggleButton: S
    } = q8(e, t, {
      containerRef: m,
      hasTextAndLength: a,
      isOpen: r,
      stopObservingMutation: g
    }), {
      btnIconLeft: A,
      btnIconRight: w,
      btnText: T,
      btnTitle: I,
      buttonRef: C,
      isButtonVisible: E
    } = O8(e, {
      hasTextAndLength: a,
      isMoreButtonObservingVisible: b,
      isOpen: r,
      isTextShorterThanTextLength: o
    }), {
      maxHeightStyle: P
    } = P8(e, {
      hasTextAndLength: a,
      isOpen: r
    }), {
      textScreenReaderLocal: M
    } = k8({
      hasTextAndLength: a,
      isOpen: r
    }), {
      ariaExpanded: k
    } = D8({
      hasTextAndLength: a,
      isOpen: r
    });
    return n({
      buttonRef: C,
      containerRef: m,
      isOpen: r,
      toggleButton: S
    }), ha(() => {
      _(), v();
    }), Bt(() => {
      g();
    }), {
      ariaExpanded: k,
      btnIconLeft: A,
      btnIconRight: w,
      btnText: T,
      btnTitle: I,
      buttonRef: C,
      containerRef: m,
      hasTextAndLength: a,
      isButtonVisible: E,
      isOpen: r,
      isTextOrHtmlVisible: f,
      maxHeightStyle: P,
      textLocal: u,
      textScreenReaderLocal: M,
      toggleButton: S
    };
  },
  render() {
    return c("div", {
      class: [
        "a_show_more",
        {
          a_show_more_open: this.isOpen
        }
      ]
    }, [
      c("div", {
        class: "a_show_more__wrapper",
        style: this.maxHeightStyle
      }, [
        c("div", {
          ref: "containerRef",
          id: this.id,
          ariaExpanded: this.ariaExpanded,
          ...this.$attrs
        }, [
          this.isTextOrHtmlVisible && c(be, {
            alwaysTranslate: this.alwaysTranslate,
            tag: "div",
            text: this.textLocal,
            html: this.html,
            safeHtml: this.safeHtml
          }),
          this.$slots.default && this.$slots.default({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          })
        ])
      ]),
      this.isButtonVisible && c("div", {
        class: this.btnParentClass
      }, [
        c(ct, {
          ref: "buttonRef",
          id: this.btnId,
          alwaysTranslate: this.alwaysTranslate,
          "aria-controls": this.id,
          class: [
            "a_show_more__button",
            this.btnClass
          ],
          disabled: this.disabled,
          iconLeft: this.btnIconLeft,
          iconRight: this.btnIconRight,
          isTitleHtml: this.isBtnTitleHtml,
          text: this.btnText,
          textAriaHidden: !this.hasTextAndLength,
          textScreenReader: this.textScreenReaderLocal,
          title: this.btnTitle,
          titlePlacement: this.btnTitlePlacement,
          ...this.btnAttributes,
          onClick: this.toggleButton
        }, () => this.$slots.button && this.$slots.button({
          isButtonVisible: this.isButtonVisible,
          isOpen: this.isOpen
        }))
      ])
    ]);
  }
};
function N8(e, {
  ariaSort: t = d(() => ({})),
  attributesForRoot: n = d(() => ({})),
  columnsStyles: r = d(() => ""),
  isLocked: a = d(() => !1),
  isSorting: s = d(() => !1),
  titlesSort: o = d(() => [])
}) {
  const u = p(e, "column"), f = p(e, "columnIndex"), _ = p(e, "hasMultipleActions"), m = fe("isLoadingOptions"), b = fe("isLoadingOptions"), v = d(() => [
    "a_table__th a_table__cell",
    {
      a_table__th_draggable: !a.value && !b.value && m.value,
      a_table__th_sorting: s.value
    },
    u.value.classHeaderParent
  ]), g = d(() => {
    const A = [];
    return (u.value.title || u.value.title === 0) && A.push(u.value.title), A.push(...o.value), A;
  });
  return {
    attributesForTh: d(() => {
      let A = f.value + 1;
      return _.value && A++, {
        ...t.value,
        ...n.value,
        "aria-colindex": A,
        ref: "root",
        role: "columnheader",
        class: v.value,
        style: r.value
      };
    }),
    titlesLocal: g
  };
}
function V8(e) {
  const t = p(e, "column"), n = fe("columnsVisibleAdditionalSpaceForOneGrow", 0), r = d(() => ae(t.value.grow) ? 1 : t.value.grow);
  return {
    additionalWidthForCurrentColumn: d(() => n.value * r.value)
  };
}
function LA(e) {
  const t = p(e, "column"), n = fe("columnWidthDefault"), {
    additionalWidthForCurrentColumn: r
  } = V8(e), a = d(() => t.value.width || n.value), s = d(() => a.value + r.value), o = d(() => `width: ${s.value}px; min-width: ${s.value}px; max-width: ${s.value}px;`);
  return {
    columnsStyles: d(() => t.value.style ? `${o.value} ${t.value.style}` : o.value)
  };
}
const Vv = "a_table__drag_element";
function EA(e, { emit: t }, {
  classOverString: n = "",
  inDropdown: r = !1
}) {
  const a = p(e, "column"), s = p(e, "columnIndex"), o = p(e, "columnIndexDraggable"), u = fe("isLoadingOptions"), f = fe("isColumnsDnd"), _ = R(null), m = d(() => o.value > s.value ? n : `${n}_right`), b = (I) => {
    var C, E, P;
    if ((C = I.target) == null || C.classList.add(Vv), r) {
      const M = ((E = I.target) == null ? void 0 : E.offsetHeight) || 30;
      (P = I.target) == null || P.parentElement.style.setProperty("--a_table_draggable_li_height", `${M}px`);
    }
    I.dataTransfer.effectAllowed = "move", t("dragstartParent", {
      columnIndex: s.value
    });
  }, v = (I) => {
    var C, E;
    (C = I.target) == null || C.classList.remove(m.value), (E = I.target) == null || E.classList.remove(Vv), t("dragendParent");
  }, g = () => {
    _.value && _.value.classList && _.value.classList.add(m.value), t("dragenterParent", {
      columnIndex: s.value
    });
  }, S = (I) => (I.preventDefault && I.preventDefault(), !1), A = () => {
    _.value && _.value.classList && _.value.classList.remove(m.value), t("dragleaveParent", {
      columnIndex: s.value
    });
  }, w = d(() => !!a.value.locked);
  return {
    attributesForRoot: d(() => {
      const I = {
        ref: "root"
      };
      return !w.value && f.value && (I.draggable = !u.value, I.onDragstart = b, I.onDragend = v, I.onDragenter = g, I.onDragover = S, I.onDragleave = A), I;
    }),
    isLocked: w,
    root: _
  };
}
const H8 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-down-fill" viewBox="0 0 16 16">
  <path d="M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z"/>
</svg>`, $8 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-up-fill" viewBox="0 0 16 16">
  <path d="m7.247 4.86-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z"/>
</svg>`, _s = R({
  propsDefault: {
    borderType: "bordered"
  },
  config: {
    isHtmlTitleSort: !1
  }
}), YU = {
  install: (e, {
    propsDefault: t = {},
    config: n = {}
  } = {}) => {
    _s.value.propsDefault = {
      ..._s.value.propsDefault,
      ...t
    }, _s.value.config = {
      ..._s.value.config,
      ...n
    };
  }
};
function W8(e) {
  const t = p(e, "column"), n = p(e, "columnIndex"), r = p(e, "disabledSort"), a = p(e, "isSortingMultiColumn"), s = p(e, "modelSort"), o = p(e, "showFirstSortingSequenceNumber"), u = fe("changeModelSort"), f = fe("tableId"), _ = d(() => t.value.sortId), m = d(() => !!_.value), b = d(() => s.value.indexOf(_.value)), v = d(() => s.value.indexOf(`-${_.value}`)), g = d(() => b.value !== -1), S = d(() => v.value !== -1), A = d(() => m.value && (g.value || S.value)), w = d(() => {
    if (m.value) {
      let D = "none";
      return g.value ? D = "ascending" : S.value && (D = "descending"), {
        "aria-sort": D
      };
    }
    return {};
  }), T = d(() => c(lt, {
    icon: $8,
    class: "a_table__th__sort__icon a_table__th__sort__icon_up"
  })), I = d(() => c(lt, {
    icon: H8,
    class: "a_table__th__sort__icon a_table__th__sort__icon_down"
  })), C = d(() => {
    const D = [];
    return m.value && (S.value || D.push(T.value), g.value || D.push(I.value)), D;
  }), E = ({ $event: D }) => {
    r.value || u({
      $event: D,
      sortId: _.value
    });
  }, P = d(() => `${f.value}_th_${n.value}_screen_reader`), M = d(() => {
    var D;
    return m.value ? {
      type: "button",
      disabled: r.value,
      isTitleHtml: ((D = _s.value.config) == null ? void 0 : D.isHtmlTitleSort) || !1,
      "aria-describedby": P.value,
      onClick: E
    } : {
      tag: "span"
    };
  }), k = d(() => {
    if (!(!a.value && !A.value) && !(s.value.length <= 1 && !o.value)) {
      if (b.value !== -1)
        return b.value + 1;
      if (v.value !== -1)
        return v.value + 1;
    }
  }), F = d(() => {
    const D = [];
    return m.value && (D.push("_A_TABLE_SORT_TITLE_"), a.value && D.push("_A_TABLE_SORT_TITLE_MULTI_COLUMN_")), D;
  });
  return {
    ariaSort: w,
    attributesForButtonSort: M,
    columnTextScreenReaderId: P,
    iconsSortable: C,
    isSortable: m,
    isSorting: A,
    sequenceNumberSort: k,
    titlesSort: F
  };
}
const rh = {
  name: "ATableHeaderTh",
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnGroupNames: {
      type: Array,
      required: !1,
      default: void 0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    columnIndexDraggable: {
      type: Number,
      required: !1,
      default: -1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !1
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "dragendParent",
    "dragstartParent",
    "dragenterParent",
    "dragleaveParent"
  ],
  inject: [
    "changeModelSort",
    "isColumnsDnd",
    "isLoadingOptions",
    "isLoadingTable"
  ],
  setup(e, t) {
    const {
      columnsStyles: n
    } = LA(e), {
      attributesForRoot: r,
      isLocked: a,
      root: s
    } = EA(e, t, {
      classOverString: "a_table__th_over",
      inDropdown: !1
    }), {
      ariaSort: o,
      attributesForButtonSort: u,
      columnTextScreenReaderId: f,
      iconsSortable: _,
      isSortable: m,
      isSorting: b,
      sequenceNumberSort: v,
      titlesSort: g
    } = W8(e), {
      attributesForTh: S,
      titlesLocal: A
    } = N8(e, {
      ariaSort: o,
      attributesForRoot: r,
      columnsStyles: n,
      isLocked: a,
      isSorting: b,
      titlesSort: g
    });
    return {
      attributesForButtonSort: u,
      attributesForTh: S,
      columnTextScreenReaderId: f,
      columnsStyles: n,
      iconsSortable: _,
      isSortable: m,
      root: s,
      sequenceNumberSort: v,
      titlesLocal: A,
      titlesSort: g
    };
  },
  render() {
    return c("div", this.attributesForTh, [
      c("div", {
        class: [
          "a_table__cell__child"
        ]
      }, [
        this.columnGroupNames && c(be, {
          html: this.columnGroupNames,
          tag: "span",
          class: "a_sr_only"
        }),
        c(be, {
          id: this.columnTextScreenReaderId,
          text: this.titlesLocal,
          tag: "span",
          class: "a_sr_only",
          ariaHidden: !0
        }),
        c(ct, {
          class: [
            "a_table__th__btn",
            this.column.class,
            this.column.classHeader,
            {
              "a_btn a_btn_link a_table__th__btn_sort": this.isSortable,
              a_table__th__btn_sequence: this.sequenceNumberSort
            }
          ],
          iconLeft: this.column.icon,
          iconClass: "a_table__th__icon",
          extra: this.column.extra,
          title: this.titlesLocal,
          textScreenReader: this.column.textScreenReader || void 0,
          ...this.attributesForButtonSort
        }, () => [
          this.column.label && c(be, {
            html: this.column.label,
            tag: "span",
            extra: this.column.extra,
            class: "a_table__th__text aloha_element__ml_0",
            ariaHidden: !!this.column.textScreenReader
          }),
          this.isSortable && c("span", {
            class: "a_table__th__sort__box aloha_element__ml_0"
          }, [
            this.sequenceNumberSort && c("span", {
              class: [
                "a_table__th__sort__sequence_num",
                this.sortingSequenceNumberClass
              ]
            }, this.sequenceNumberSort),
            c("span", {
              class: "a_table__th__sort__icons"
            }, [
              ...this.iconsSortable
            ])
          ])
        ])
      ])
    ]);
  }
};
function U8(e, {
  attributesForRoot: t = d(() => ({})),
  isColumnVisible: n = d(() => !1),
  isLocked: r = d(() => !1),
  labelTranslated: a = d(() => "")
}) {
  const s = p(e, "searchColumnModel"), o = d(() => {
    if (!s.value)
      return !0;
    const f = new RegExp(Gl(s.value), "gi");
    return `${a.value}`.search(f) !== -1;
  });
  return {
    attributesComponent: d(() => {
      const f = {
        ...t.value,
        class: "a_table__th__dropdown__li"
      };
      return o.value || (f.style = "display: none;"), !r.value && !n.value && (f.class += " a_table__th__dropdown__li_invisible"), f;
    })
  };
}
const j8 = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01757813,0,0,0.01757813,-3.96314e-5,1.7578125e-5)"
  >
    <path
      d="m 493.034,717.353 v 0 c -22.097,-7.811 -37.924,-28.881 -37.924,-53.651 0,-31.421 25.469,-56.89 56.89,-56.89 31.421,0 56.89,25.469 56.89,56.89 0,24.769 -15.833,45.843 -37.924,53.651 v 98.392 c 0,9.98 -8.486,18.618 -18.966,18.618 -10.164,0 -18.966,-8.339 -18.966,-18.618 z m -265.48,-300.17 v 0 0 C 164.683,417.358 113.78,467.989 113.78,531.324 v 189.27 c 0,167.568 136.008,303.405 303.372,303.405 h 189.695 c 167.548,0 303.372,-136.179 303.372,-303.405 v -189.27 c 0,-62.93 -50.854,-113.956 -113.774,-114.141 V 284.414 C 796.445,127.332 668.777,-0.001 512,-0.001 c -157.093,0 -284.445,127.307 -284.445,284.415 v 132.769 z m 113.779,0 V 284.476 c 0,-94.496 76.411,-170.699 170.665,-170.699 94.063,0 170.665,76.426 170.665,170.699 V 417.183 H 341.33 Z"
    />
  </g>
</svg>`;
function G8(e, {
  isLocked: t = d(() => !1)
}) {
  const n = p(e, "column"), r = p(e, "disabledOptions"), a = fe("changeModelColumnsVisible"), s = fe("modelColumnsVisibleLocal"), o = d(() => n.value.id in s.value ? !!s.value[n.value.id] : !n.value.hide), u = d(() => t.value ? j8 : o.value ? wS : AS), f = d(() => t.value ? "_A_TABLE_OPTIONS_BTN_LOCK_TITLE_" : o.value ? "_A_TABLE_OPTIONS_BTN_EYE_TITLE_" : "_A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_"), _ = ({ $event: b }) => {
    b.stopPropagation(), b.preventDefault();
    const v = Se(s.value);
    v[n.value.id] = !o.value, a(v);
  };
  return {
    buttonVisibleProps: d(() => {
      const b = {
        class: "a_table__th__dropdown_item__icon",
        tag: "span",
        iconLeft: u.value,
        title: f.value,
        textScreenReader: f.value
      };
      return t.value || (b.tag = "button", b.class += " a_table__th__dropdown_item__icon_btn a_btn a_btn_link", b.onClick = _, r.value && (b.disabled = !0)), b;
    }),
    isColumnVisible: o
  };
}
function Y8(e) {
  const t = p(e, "column"), n = p(e, "searchColumnModel"), {
    filterSearchHighlight: r
  } = tr(), a = d(() => ii(t.value.label) ? Kt({
    placeholder: t.value.label
  }) : t.value.label);
  return {
    labelLocal: d(() => r(a.value, { searchModel: n.value })),
    labelTranslated: a
  };
}
function z8(e) {
  const t = p(e, "columnIndex"), n = fe("changeColumnsOrdering"), r = fe("columnsOrdered"), a = fe("tableId"), s = ({ columnIndex: v, iconKey: g }) => `${a.value}_${g}_${v}`, o = ({ $event: v }) => {
    v.stopPropagation();
    const g = t.value - 1;
    n({
      columnIndexDraggable: t.value,
      columnIndexOver: g
    }), window.isScrollDisabled || setTimeout(() => {
      ka({
        selector: `#${s({
          columnIndex: g,
          iconKey: "up"
        })}`
      });
    });
  }, u = ({ $event: v }) => {
    v.stopPropagation();
    const g = t.value + 1;
    n({
      columnIndexDraggable: t.value,
      columnIndexOver: g
    }), window.isScrollDisabled || setTimeout(() => {
      const S = `#${s({
        columnIndex: g,
        iconKey: "down"
      })}`;
      ka({
        selector: S
      });
    });
  }, f = d(() => s({
    columnIndex: t.value,
    iconKey: "up"
  })), _ = d(() => s({
    columnIndex: t.value,
    iconKey: "down"
  })), m = d(() => t.value !== 0 && !r.value[t.value - 1].locked), b = d(() => r.value.length - 1 !== t.value && !r.value[t.value + 1].locked);
  return {
    idButtonArrowDown: _,
    idButtonArrowUp: f,
    isButtonArrowDownVisible: b,
    isButtonArrowUpVisible: m,
    moveColumnDown: u,
    moveColumnUp: o
  };
}
const K8 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-grip-vertical" viewBox="0 0 16 16">
  <path d="M7 2a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M7 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/>
</svg>`, X8 = {
  name: "ATableHeaderThActionItem",
  components: {
    AIcon: lt,
    ATranslation: be
  },
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    columnIndexDraggable: {
      type: Number,
      required: !1,
      default: -1
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    searchColumnModel: {
      type: String,
      required: !0
    }
  },
  emits: [
    "dragendParent",
    "dragstartParent",
    "dragenterParent",
    "dragleaveParent"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsOrdered",
    "isColumnsDnd",
    "isLoadingOptions",
    "isLoadingTable",
    "modelColumnsVisibleLocal",
    "tableId"
  ],
  setup(e, t) {
    const {
      attributesForRoot: n,
      isLocked: r,
      root: a
    } = EA(e, t, {
      classOverString: "a_table__th__dropdown__li_over",
      inDropdown: !0
    }), {
      labelLocal: s,
      labelTranslated: o
    } = Y8(e), {
      buttonVisibleProps: u,
      isColumnVisible: f
    } = G8(e, {
      isLocked: r
    }), {
      idButtonArrowDown: _,
      idButtonArrowUp: m,
      isButtonArrowDownVisible: b,
      isButtonArrowUpVisible: v,
      moveColumnDown: g,
      moveColumnUp: S
    } = z8(e), {
      attributesComponent: A
    } = U8(e, {
      attributesForRoot: n,
      isColumnVisible: f,
      isLocked: r,
      labelTranslated: o
    });
    return {
      attributesComponent: A,
      attributesForRoot: n,
      buttonVisibleProps: u,
      idButtonArrowDown: _,
      idButtonArrowUp: m,
      isButtonArrowDownVisible: b,
      isButtonArrowUpVisible: v,
      isLocked: r,
      labelLocal: s,
      moveColumnDown: g,
      moveColumnUp: S,
      root: a
    };
  },
  render() {
    return this.column.isRender === !1 ? null : c("li", this.attributesComponent, [
      c("div", {
        class: "a_dropdown__item_text a_table__th__dropdown_item"
      }, [
        c("div", {
          class: "a_table__th__dropdown_item__child"
        }, [
          c(ct, this.buttonVisibleProps),
          c("span", {
            class: "a_position_relative"
          }, [
            this.column.icon && c(lt, {
              icon: this.column.icon,
              class: "a_table__th__icon"
            }),
            c(be, {
              tag: "span",
              class: "a_table__th__text",
              safeHtml: this.labelLocal
            }),
            this.column.title && c(be, {
              title: this.column.title,
              ariaHidden: !0,
              tag: "span",
              class: "a_position_absolute_all"
            }),
            this.column.title && c(be, {
              text: this.column.title,
              tag: "span",
              class: "a_sr_only"
            })
          ]),
          !this.isLocked && this.isColumnsDnd ? [
            this.isButtonArrowUpVisible && c(ct, {
              id: this.idButtonArrowUp,
              class: "a_sr_only_focusable a_btn a_btn_link a_p_0 a_table__th__dropdown_item__btn_arrow",
              disabled: this.disabledOptions,
              type: "button",
              iconLeft: vp,
              title: "_A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_",
              textScreenReader: "_A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_",
              onClick: this.moveColumnUp
            }),
            this.isButtonArrowDownVisible && c(ct, {
              id: this.idButtonArrowDown,
              class: "a_sr_only_focusable a_btn a_btn_link a_p_0 a_table__th__dropdown_item__btn_arrow",
              disabled: this.disabledOptions,
              type: "button",
              iconLeft: Fs,
              title: "_A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_",
              textScreenReader: "_A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_",
              onClick: this.moveColumnDown
            })
          ] : ""
        ]),
        !this.isLocked && this.isColumnsDnd && c(lt, {
          icon: K8,
          class: "a_table__th__dropdown_item__icon_dnd"
        })
      ])
    ]);
  }
};
function Z8() {
  const e = R("");
  return {
    searchColumnModel: e,
    updateSearchColumnModel: (n) => {
      e.value = n;
    }
  };
}
function OA({
  classOver: e = "",
  classOverRight: t = "",
  classOverParent: n = "",
  inHeader: r = !1
}) {
  const a = R(void 0), s = R(void 0), o = R(void 0), u = fe("changeColumnsOrdering"), f = d(() => !ae(s.value)), _ = ({ columnIndex: A }) => {
    s.value = A;
  }, m = ({ columnIndex: A }) => {
    o.value = A;
  }, b = ({ columnIndex: A }) => {
    o.value === A && (o.value = void 0);
  }, v = (A) => {
    if (!(ae(s.value) || ae(o.value)))
      return u({
        columnIndexDraggable: s.value,
        columnIndexOver: o.value,
        inHeader: r
      }), A.stopPropagation(), !1;
  }, g = () => {
    a.value.querySelectorAll(`.${n}`).forEach((w) => {
      w.classList.remove(e), w.classList.remove(t);
    });
  };
  return {
    columnIndexDraggable: s,
    dragstart: _,
    dragenter: m,
    dragleave: b,
    dragend: () => {
      g(), s.value = void 0;
    },
    drop: v,
    isDragstart: f,
    root: a
  };
}
function DA() {
  const e = fe("columnActionsWidthMinLocal"), t = fe("modelIsTableWithoutScroll");
  return {
    stylesThTd: d(() => t.value ? {} : {
      style: `width: ${e.value}px;`
    })
  };
}
const J8 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-counterclockwise" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2z"/>
  <path d="M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466"/>
</svg>`, Q8 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear-fill" viewBox="0 0 16 16">
  <path d="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z"/>
</svg>`;
function PA(e) {
  const t = {};
  return e.forEach((n) => {
    t[n.id] = !n.hide;
  }), t;
}
function RA({ element: e, tagsName: t, classStop: n }) {
  if (e && e.tagName) {
    if (t.indexOf(e.tagName) !== -1)
      return !0;
    if (e.classList.contains(n))
      return !1;
    if (e.parentElement)
      return RA({ element: e.parentElement, tagsName: t, classStop: n });
  }
  return !1;
}
function e7({ $event: e, classStop: t = "", tagsName: n = [] } = {}) {
  return e && e.target ? RA({ element: e.target, tagsName: n, classStop: t }) : !1;
}
function xl({ column: e, modelColumnsVisibleLocal: t }) {
  return e.isRender === !1 ? !1 : e.id in t ? !!t[e.id] : !e.hide;
}
function t7({ column: e }) {
  return e.isRender === !1 ? !1 : !e.hide;
}
function n7({ columnIndex: e, indexFirstScrollInvisibleColumn: t }) {
  return ae(t) ? !0 : e < t;
}
function r7({ column: e, columnIndex: t, modelIsTableWithoutScroll: n, modelColumnsVisibleLocal: r, indexFirstScrollInvisibleColumn: a }) {
  return n ? xl({
    column: e,
    modelColumnsVisibleLocal: r
  }) && n7({
    columnIndex: t,
    indexFirstScrollInvisibleColumn: a
  }) : xl({
    column: e,
    modelColumnsVisibleLocal: r
  });
}
function BA({ tableId: e }) {
  return `${e}_preview_right`;
}
function kA({ tableId: e }) {
  return `${e}_multiple_panel`;
}
function MA({ tableId: e }) {
  return `${e}_header_label`;
}
function Gu({ row: e, rowIndex: t, keyId: n }) {
  return n ? de(e, n) : t;
}
function FA({ rowAction: e, row: t, rowIndex: n }) {
  return e.isHidden ? !1 : We(e.isHiddenCallback) ? !e.isHiddenCallback({
    row: t,
    rowIndex: n
  }) : !0;
}
const ah = {
  name: "ATableHeaderThAction",
  inject: [
    "changeModelIsTableWithoutScroll",
    "columnActionsWidthLocal",
    "changeColumnsOrdering",
    "changeModelColumnsVisible",
    "columns",
    "columnsOrdered",
    "isActionIconVisible",
    "modelIsTableWithoutScroll"
  ],
  props: {
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    }
  },
  setup() {
    const {
      columnIndexDraggable: e,
      dragend: t,
      dragenter: n,
      dragleave: r,
      dragstart: a,
      drop: s,
      isDragstart: o,
      root: u
    } = OA({
      classOver: "a_table__th__dropdown__li_over",
      classOverRight: "a_table__th__dropdown__li_over_right",
      classOverParent: "a_table__th__dropdown__li",
      inHeader: !1
    }), {
      searchColumnModel: f,
      updateSearchColumnModel: _
    } = Z8(), {
      stylesThTd: m
    } = DA();
    return {
      columnIndexDraggable: e,
      dragend: t,
      dragenter: n,
      dragleave: r,
      dragstart: a,
      drop: s,
      isDragstart: o,
      root: u,
      searchColumnModel: f,
      stylesThTd: m,
      updateSearchColumnModel: _
    };
  },
  methods: {
    selectAllColumns() {
      const e = {};
      Y(this.columnsOrdered, (t) => {
        e[t.id] = !0;
      }), this.changeModelColumnsVisible(e);
    },
    deselectAllColumns() {
      const e = {};
      Y(this.columnsOrdered, (t) => {
        e[t.id] = !!t.locked;
      }), this.changeModelColumnsVisible(e);
    },
    resetColumns() {
      this.changeModelColumnsVisible(PA(this.columnsOrdered)), this.changeColumnsOrdering({ reset: !0 });
    }
  },
  render() {
    return c("div", {
      class: [
        "a_table__th a_table__cell a_table__cell_action",
        {
          a_table__cell_action_sticky: this.isRowActionsStickyLocal
        }
      ],
      role: "columnheader",
      ...this.stylesThTd
    }, [
      c("span", {
        class: "a_sr_only"
      }, "Aktionen"),
      this.isActionIconVisible && c(Ma, {
        buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
        buttonTitle: "_A_TABLE_DROPDOWN_OPTIONS_TITLE_",
        buttonTextScreenReader: "_A_TABLE_DROPDOWN_OPTIONS_TITLE_",
        dropdownTag: "div",
        dropdownClass: "a_p_0",
        hasCaret: !1,
        isCloseByClickInside: !1,
        disabled: this.disabledOptions,
        placement: "left",
        menuWidth: 320,
        inBody: !0
      }, {
        button: () => c(lt, {
          icon: Q8
        }),
        dropdown: () => [
          c("ul", {
            class: ["a_table__th__dropdown__ul", {
              a_table__th__dropdown__ul_dragstart: this.isDragstart
            }],
            ref: "root",
            onDrop: this.drop
          }, [
            c("li", null, [
              c("div", {
                class: "a_dropdown__item_text a_table__th__dropdown__search"
              }, [
                c(In, {
                  label: "Suchen",
                  modelValue: this.searchColumnModel,
                  isClearButton: !0,
                  modelUndefined: "",
                  "onUpdate:modelValue": this.updateSearchColumnModel
                })
              ])
            ]),
            c("li", {
              class: "a_dropdown__divider",
              "aria-hidden": !0
            }),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.selectAllColumns
              }, [
                c(lt, {
                  icon: fp,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Alle einblenden")
              ])
            ]),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.deselectAllColumns
              }, [
                c(lt, {
                  icon: ja,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Alle ausblenden")
              ])
            ]),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.resetColumns
              }, [
                c(lt, {
                  icon: J8,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Zurücksetzen")
              ])
            ]),
            c("li", null, [
              c(sA, {
                class: "a_dropdown__item_text a_text_nowrap",
                disabled: this.disabledOptions,
                modelValue: this.modelIsTableWithoutScroll,
                trueLabel: "Kompakte Ansicht",
                falseLabel: "Kompakte Ansicht",
                "onUpdate:modelValue": this.changeModelIsTableWithoutScroll
              })
            ]),
            c("li", {
              class: "a_dropdown__divider",
              "aria-hidden": !0
            }),
            this.columnsOrdered.map((e, t) => c(X8, {
              column: e,
              columnIndex: t,
              columnIndexDraggable: this.columnIndexDraggable,
              disabledOptions: this.disabledOptions,
              searchColumnModel: this.searchColumnModel,
              onDragstartParent: this.dragstart,
              onDragenterParent: this.dragenter,
              onDragleaveParent: this.dragleave,
              onDragendParent: this.dragend
            }))
          ])
        ]
      })
    ]);
  }
};
function qA(e, { emit: t }) {
  const n = p(e, "areAllRowsSelected"), r = p(e, "areAllVisibleRowsSelected"), a = p(e, "areSomeRowsSelected"), s = p(e, "rowsLocalLength"), o = d(() => !!(s.value === 0 || n.value)), u = d(() => a.value && !(r.value || n.value)), f = d(() => r.value || n.value), _ = d(() => u.value || f.value ? "_A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_" : "_A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_");
  return {
    isCheckboxDisabled: o,
    isCheckboxIndeterminate: u,
    labelCheckbox: _,
    modelValueCheckboxLocal: f,
    toggleCheckbox: () => {
      o.value || t("setSelectedRowsIndexes", { isAll: !0 });
    }
  };
}
const a7 = {
  name: "ATableHeader",
  components: {
    ATableHeaderTh: rh,
    ATableHeaderThAction: ah
  },
  props: {
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areAllVisibleRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !0
    },
    rowsLocalLength: {
      type: Number,
      required: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMobile",
    "isMultipleActionsActive"
  ],
  setup(e, t) {
    const {
      columnIndexDraggable: n,
      dragstart: r,
      dragenter: a,
      dragleave: s,
      dragend: o,
      drop: u,
      isDragstart: f,
      root: _
    } = OA({
      classOver: "a_table__th_over",
      classOverRight: "a_table__th_over_right",
      classOverParent: "a_table__th",
      inHeader: !0
    }), {
      isCheckboxDisabled: m,
      isCheckboxIndeterminate: b,
      labelCheckbox: v,
      modelValueCheckboxLocal: g,
      toggleCheckbox: S
    } = qA(e, t);
    return {
      columnIndexDraggable: n,
      dragend: o,
      dragenter: a,
      dragleave: s,
      dragstart: r,
      drop: u,
      isCheckboxDisabled: m,
      isCheckboxIndeterminate: b,
      isDragstart: f,
      labelCheckbox: v,
      modelValueCheckboxLocal: g,
      root: _,
      toggleCheckbox: S
    };
  },
  render() {
    return this.isMobile ? null : c("div", {
      ref: "root",
      role: "rowgroup",
      class: ["a_table__head", {
        a_table__head_dragstart: this.isDragstart
      }]
    }, [
      c("div", {
        class: "a_table__row a_table__head__row",
        role: "row",
        onDrop: this.drop
      }, [
        this.isMultipleActionsActive && c("div", {
          role: "columnheader",
          class: "a_table__th a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;",
          "aria-colindex": 1
        }, [
          c(Dd, {
            isWidthAuto: !0,
            modelValue: this.modelValueCheckboxLocal,
            indeterminate: this.isCheckboxIndeterminate,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        this.columnsFilteredForRender.map((e, t) => c(rh, {
          ref: "th",
          column: e,
          columnIndex: t,
          columnIndexDraggable: this.columnIndexDraggable,
          disabledSort: this.disabledSort,
          hasMultipleActions: this.hasMultipleActions,
          isSortingMultiColumn: this.isSortingMultiColumn,
          modelSort: this.modelSort,
          showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
          sortingSequenceNumberClass: this.sortingSequenceNumberClass,
          onDragstartParent: this.dragstart,
          onDragenterParent: this.dragenter,
          onDragleaveParent: this.dragleave,
          onDragendParent: this.dragend
        })),
        this.isActionColumnVisible && c(ah, {
          disabledOptions: this.disabledOptions,
          isRowActionsStickyLocal: this.isRowActionsStickyLocal
        })
      ])
    ]);
  }
}, i7 = {
  name: "ATableGroupedHeader",
  props: {
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areAllVisibleRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    columnsForRender: {
      type: Array,
      required: !0
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !0
    },
    rowsLocalLength: {
      type: Number,
      required: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMobile",
    "isMultipleActionsActive"
  ],
  setup(e, t) {
    const {
      isCheckboxDisabled: n,
      isCheckboxIndeterminate: r,
      labelCheckbox: a,
      modelValueCheckboxLocal: s,
      toggleCheckbox: o
    } = qA(e, t);
    return {
      isCheckboxDisabled: n,
      isCheckboxIndeterminate: r,
      labelCheckbox: a,
      modelValueCheckboxLocal: s,
      toggleCheckbox: o
    };
  },
  render() {
    return this.isMobile ? null : c("div", {
      ref: "root",
      role: "rowgroup",
      class: "a_table__head"
    }, [
      c("div", {
        class: "a_table__row a_table__head__row",
        role: "row"
      }, [
        this.isMultipleActionsActive && c("div", {
          role: "columnheader",
          class: "a_table__th a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;",
          "aria-colindex": 1
        }, [
          c(Dd, {
            isWidthAuto: !0,
            modelValue: this.modelValueCheckboxLocal,
            indeterminate: this.isCheckboxIndeterminate,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        this.columnsForRender,
        this.isActionColumnVisible && c(ah, {
          disabledOptions: this.disabledOptions,
          isRowActionsStickyLocal: this.isRowActionsStickyLocal
        })
      ])
    ]);
  }
};
function s7(e, { emit: t }, {
  nextAvailableRowIndex: n,
  previousAvailableRowIndex: r,
  rowNumber: a = d(() => 0)
}) {
  const s = p(e, "countAllRows"), o = p(e, "limitPagination"), u = p(e, "offsetPagination"), f = p(e, "rowIndex"), _ = p(e, "usePagination"), m = d(() => a.value <= 1 || ae(r.value)), b = d(() => a.value >= s.value || ae(n.value));
  return {
    disabledBtnArrowLeft: m,
    disabledBtnArrowRight: b,
    toNextRow: () => {
      b.value || (_.value ? (f.value + 1) % o.value === 0 ? (t("update:offset", { offset: u.value + o.value, reload: !1 }), t("togglePreview", { rowIndex: 0 })) : t("togglePreview", { rowIndex: n.value }) : t("togglePreview", { rowIndex: n.value }));
    },
    toPreviousRow: () => {
      m.value || (_.value ? (f.value + 1) % o.value === 1 ? (t("update:offset", { offset: u.value - o.value, reload: !1 }), t("togglePreview", { rowIndex: o.value - 1 })) : t("togglePreview", { rowIndex: r.value }) : t("togglePreview", { rowIndex: r.value }));
    }
  };
}
function l7() {
  const e = fe("tableId");
  return {
    idLocal: d(() => BA({ tableId: e.value }))
  };
}
function o7({ emit: e }, {
  previewRef: t = R(void 0)
}) {
  return {
    mousedown: ({ clientWidth: s }) => {
      e("mousedownResizePreviewRight", {
        clientWidth: s
      });
    },
    mousemove: ({ clientX: s }) => {
      e("mousemoveResizePreviewRight", {
        clientX: s,
        previewRef: t.value
      });
    },
    mouseup: () => {
      e("mouseupResizePreviewRight", {
        previewRightWidth: de(t, "value.offsetWidth")
      });
    }
  };
}
const Hv = R(void 0);
function NA() {
  return {
    previewRef: Hv,
    removePreviewRef: () => {
      Hv.value = void 0;
    }
  };
}
function u7(e) {
  const t = p(e, "countAllRows"), n = p(e, "disabledPreviewRowCallback"), r = p(e, "offsetPagination"), a = p(e, "rowIndex"), s = p(e, "rows"), o = p(e, "usePagination"), {
    filterCurrency: u
  } = tr(), f = d(() => o.value ? (r.value || 0) + a.value + 1 : a.value + 1), _ = d(() => s.value[a.value]), m = d(() => {
    let S = null;
    if (!We(n.value))
      S = a.value === s.value.length - 1 ? null : a.value++;
    else
      for (let A = a.value + 1; A < s.value.length; A++) {
        const w = s.value[A];
        if (!n.value({ row: w, rowIndex: A })) {
          S = A;
          break;
        }
      }
    return S;
  }), b = d(() => {
    let S = null;
    if (!We(n.value))
      S = a.value === 0 ? null : a.value--;
    else
      for (let A = a.value - 1; A >= 0; A--) {
        const w = s.value[A];
        if (!n.value({ row: w, rowIndex: A })) {
          S = A;
          break;
        }
      }
    return S;
  }), v = d(() => u(t.value, { suffix: "", digits: 0 })), g = d(() => u(f.value, { suffix: "", digits: 0 }));
  return {
    countAllRowsFormatted: v,
    currentRow: _,
    nextAvailableRowIndex: m,
    previousAvailableRowIndex: b,
    rowNumber: f,
    rowNumberFormatted: g
  };
}
const d7 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8"/>
</svg>`, c7 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8"/>
</svg>`, f7 = {
  name: "ATablePreviewRight",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    isLoadingTable: {
      type: Boolean,
      required: !1
    },
    isMobile: {
      type: Boolean,
      required: !1
    },
    limitPagination: {
      type: Number,
      required: !1,
      default: void 0
    },
    offsetPagination: {
      type: Number,
      required: !1,
      default: void 0
    },
    previewStyles: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    rows: {
      type: Array,
      required: !0
    },
    usePagination: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "closePreview",
    "mousedownResizePreviewRight",
    "mousemoveResizePreviewRight",
    "mouseupResizePreviewRight",
    "togglePreviewResize",
    "togglePreview",
    "update:offset"
  ],
  inject: [
    "isLoadingOptions"
  ],
  setup(e, t) {
    const n = p(e, "isMobile"), {
      previewRef: r
    } = NA(), {
      idLocal: a
    } = l7(), {
      mousedown: s,
      mousemove: o,
      mouseup: u
    } = o7(t, {
      previewRef: r
    }), {
      countAllRowsFormatted: f,
      currentRow: _,
      nextAvailableRowIndex: m,
      previousAvailableRowIndex: b,
      rowNumber: v,
      rowNumberFormatted: g
    } = u7(e), {
      disabledBtnArrowLeft: S,
      disabledBtnArrowRight: A,
      toNextRow: w,
      toPreviousRow: T
    } = s7(e, t, {
      nextAvailableRowIndex: m,
      previousAvailableRowIndex: b,
      rowNumber: v
    });
    return ha(() => {
      n.value || t.emit("togglePreviewResize", {
        isOpen: !0,
        previewRef: r.value
      });
    }), Bt(() => {
      n.value || t.emit("togglePreviewResize", {
        isOpen: !1,
        previewRef: r.value
      });
    }), {
      countAllRowsFormatted: f,
      currentRow: _,
      disabledBtnArrowLeft: S,
      disabledBtnArrowRight: A,
      idLocal: a,
      mousedown: s,
      mousemove: o,
      mouseup: u,
      previewRef: r,
      rowNumber: v,
      rowNumberFormatted: g,
      toNextRow: w,
      toPreviousRow: T
    };
  },
  render() {
    const e = [
      this.isLoadingTable ? c(Fl) : c("div", {}, [
        c(be, {
          class: "a_table__preview_right__header__text",
          tag: "span",
          text: "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_",
          extra: {
            rowNumber: this.rowNumber,
            rowNumberFormatted: this.rowNumberFormatted,
            countAllRows: this.countAllRows,
            countAllRowsFormatted: this.countAllRowsFormatted
          }
        }),
        c("div", {
          class: "a_table__preview_right__header__icons"
        }, [
          c(ct, {
            class: "a_btn a_btn_transparent_dark a_btn_small",
            disabled: this.disabledBtnArrowLeft,
            iconLeft: d7,
            title: "_A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_",
            textScreenReader: "_A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_",
            onClick: this.toPreviousRow
          }),
          c(ct, {
            class: "a_btn a_btn_transparent_dark a_btn_small",
            disabled: this.disabledBtnArrowRight,
            iconLeft: c7,
            title: "_A_TABLE_PREVIEW_RIGHT_NEXT_ROW_",
            textScreenReader: "_A_TABLE_PREVIEW_RIGHT_NEXT_ROW_",
            onClick: this.toNextRow
          })
        ])
      ]),
      this.isMobile ? "" : c(ct, {
        class: "a_btn a_btn_transparent_dark a_table__preview_right__btn_close",
        iconLeft: ja,
        iconClass: "a_table__preview_right__btn_close__icon",
        title: "_A_TABLE_PREVIEW_RIGHT_CLOSE_",
        textScreenReader: "_A_TABLE_PREVIEW_RIGHT_CLOSE_",
        onClick: () => this.$emit("closePreview")
      })
    ], t = [
      this.isLoadingTable ? c(Fl) : this.$slots.preview ? this.$slots.preview({
        row: this.currentRow,
        rowIndex: this.rowIndex
      }) : c(be, {
        text: "_A_TABLE_PREVIEW_RIGHT_HAS_NOT_SLOT_"
      })
    ];
    return this.isMobile ? c(Bd, {
      hideFooter: !0,
      close: () => this.$emit("closePreview"),
      size: "xxl"
    }, {
      modalHeader: () => e,
      modalBody: () => t
    }) : c("div", {
      ref: "previewRef",
      id: this.idLocal,
      class: "a_table__preview_right",
      style: this.previewStyles,
      tabindex: -1
    }, [
      c(_8, {
        class: "a_table__preview_right__resizer",
        direction: "x",
        disabled: this.isLoadingOptions,
        onMousedown: this.mousedown,
        onMousemove: this.mousemove,
        onMouseup: this.mouseup,
        onMouseoutDocument: this.mouseup
      }),
      c(be, {
        class: "a_sr_only",
        text: "_A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_"
      }),
      c("div", {
        class: "a_table__preview_right__header"
      }, e),
      c("div", {
        class: "a_table__preview_right__body"
      }, t)
    ]);
  }
};
function h7() {
  const e = fe("tableId"), t = [
    "additionalProps"
  ], n = d(() => `${e.value}_`);
  return {
    excludeRenderAttributes: t,
    idPrefix: n
  };
}
function p7(e) {
  const t = p(e, "additionalSortingColumns"), n = fe("columnsOrdered", []), r = d(() => [
    ...Gt(n.value, (o) => o.sortId),
    ...t.value
  ]), a = d(() => ui(r.value, "sortId")), s = d(() => r.value.length);
  return {
    columnsAll: r,
    columnsAllKeyBySortId: a,
    countColumnsAll: s
  };
}
function _7(e, {
  columnsAll: t = d(() => [])
}) {
  const n = R(void 0), r = R(!1), a = d(() => t.value.length > 0);
  return {
    closeDropdown: () => {
      var o;
      (o = n.value) == null || o.onClose({ trigger: "click" });
    },
    dropdownRef: n,
    isDropdownVisible: a,
    wasOpenDropdown: r
  };
}
function m7(e, {
  columnsAll: t = d(() => []),
  columnsAllKeyBySortId: n = d(() => ({})),
  unappliedModelSort: r = R([])
}) {
  const a = R([]), s = [
    {
      label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_",
      id: "asc"
    },
    {
      label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_",
      id: "desc"
    }
  ], o = d(() => Gt(t.value, (f) => !Ah(r.value, ["sortId", f.sortId])));
  return {
    dataForForm: a,
    initDataForForm: () => {
      const f = [];
      Y(r.value, ({ sortId: _ }, m) => {
        const b = m === 0, v = Se(o.value);
        _ && n.value[_] && v.unshift(n.value[_]), f.push({
          type: "fieldset",
          id: `group_${_}`,
          label: b ? "_A_TABLE_SORT_ADDITIONAL_SORT_BY_" : "_A_TABLE_SORT_ADDITIONAL_THEN_BY_",
          children: [
            {
              id: `[${m}].sortId`,
              type: "select",
              classColumn: "a_column a_column_12_touch a_column_7_fullhd a_column_7_widescreen a_column_7_desktop",
              deselectable: !1,
              data: v,
              keyId: "sortId",
              keyLabel: "label",
              translateData: !0,
              search: !0,
              label: "_A_TABLE_SORT_ADDITIONAL_COLUMN_"
            },
            {
              id: `[${m}].sortMode`,
              type: "select",
              classColumn: "a_column a_column_12_touch a_column_5_fullhd a_column_5_widescreen a_column_5_desktop a_d_flex a_align_items_center",
              class: "a_width_100",
              deselectable: !1,
              data: s,
              keyId: "id",
              keyLabel: "label",
              translateData: !0,
              search: !1,
              label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_",
              slotAppend: "slotAppend",
              additionalProps: {
                index: m
              }
            }
          ]
        });
      }), a.value = f;
    }
  };
}
function b7(e, {
  closeDropdown: t = () => {
  },
  countColumnsAll: n = d(() => 0),
  initDataForForm: r = () => {
  },
  unappliedModelSort: a = R([]),
  wasOpenDropdown: s = R(!1)
}) {
  const o = p(e, "isSortingMultiColumn"), u = p(e, "modelSort"), f = fe("changeModelSort"), _ = fe("tableId"), m = ({ model: E } = {}) => {
    if (s.value && !E)
      return;
    s.value = !0;
    const P = E || Se(u.value);
    P.length < n.value && P.push(void 0), o.value || P.length > 1 && (P.length = 1);
    const M = [];
    Y(P, (k) => {
      const F = k && k.replace(/^-/, ""), D = Ih(k, "-") ? "desc" : "asc";
      M.push({
        sortId: F,
        sortMode: D
      });
    }), a.value = M, r({ unappliedModelSort: M });
  }, b = ({ model: E }) => !o.value || E.length >= n.value ? !1 : !!Is(E).sortId, v = ({ model: E }) => {
    b({ model: E }) && E.push({
      sortId: void 0,
      sortMode: "asc"
    }), a.value = E, r({ unappliedModelSort: a.value });
  }, g = ({ item: E }) => {
    var F, D;
    const P = E.additionalProps.index;
    P === a.value.length - 1 ? a.value[P].sortId = void 0 : a.value.splice(P, 1);
    const k = a.value.length - 1;
    (D = (F = a.value) == null ? void 0 : F[k]) != null && D.sortId && a.value.push({
      sortId: void 0,
      sortMode: "asc"
    }), r({ unappliedModelSort: a.value });
  }, S = () => {
    const E = [];
    Y(a.value, (P) => {
      P.sortId && E.push(`${P.sortMode === "asc" ? "" : "-"}${P.sortId}`);
    }), f({
      modelAll: E
    }), t();
  }, A = ({ modelSort: E = [], tableId: P }) => {
    P === _.value && m({ model: E });
  }, w = () => {
    Ht.$on("changeTableSorting", A);
  }, T = () => {
    Ht.$off("changeTableSorting", A);
  }, I = d(() => {
    var E;
    return ((E = u.value) == null ? void 0 : E.length) || 0;
  }), C = d(() => {
    if (I.value)
      return I.value;
  });
  return {
    changeModelSortInTable: S,
    countModelSort: I,
    destroyEventBus: T,
    initEventBus: w,
    initUnappliedModelSort: m,
    removeUnappliedModelSort: g,
    textCountModelSort: C,
    updateUnappliedModelSort: v
  };
}
const $v = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down-up" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M11.5 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L11 2.707V14.5a.5.5 0 0 0 .5.5m-7-14a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L4 13.293V1.5a.5.5 0 0 1 .5-.5"/>
</svg>`, v7 = {
  name: "ATableSortingAdditional",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelSort: {
      type: Array,
      required: !1
    }
  },
  setup(e) {
    const t = R([]), {
      columnsAll: n,
      columnsAllKeyBySortId: r,
      countColumnsAll: a
    } = p7(e), {
      dataForForm: s,
      initDataForForm: o
    } = m7(e, {
      columnsAll: n,
      columnsAllKeyBySortId: r,
      unappliedModelSort: t
    }), {
      closeDropdown: u,
      dropdownRef: f,
      isDropdownVisible: _,
      wasOpenDropdown: m
    } = _7(e, {
      columnsAll: n
    }), {
      changeModelSortInTable: b,
      countModelSort: v,
      destroyEventBus: g,
      initEventBus: S,
      initUnappliedModelSort: A,
      removeUnappliedModelSort: w,
      textCountModelSort: T,
      updateUnappliedModelSort: I
    } = b7(e, {
      closeDropdown: u,
      countColumnsAll: a,
      initDataForForm: o,
      unappliedModelSort: t,
      wasOpenDropdown: m
    }), {
      excludeRenderAttributes: C,
      idPrefix: E
    } = h7();
    return S(), Bt(() => {
      g();
    }), {
      changeModelSortInTable: b,
      closeDropdown: u,
      countModelSort: v,
      dataForForm: s,
      dropdownRef: f,
      excludeRenderAttributes: C,
      idPrefix: E,
      initUnappliedModelSort: A,
      isDropdownVisible: _,
      removeUnappliedModelSort: w,
      textCountModelSort: T,
      unappliedModelSort: t,
      updateUnappliedModelSort: I,
      wasOpenDropdown: m
    };
  },
  render() {
    return this.isDropdownVisible ? c(Ma, {
      ref: "dropdownRef",
      buttonClass: "a_btn a_btn_secondary a_table__action",
      buttonIconLeft: $v,
      buttonText: this.textCountModelSort,
      buttonTextAriaHidden: !0,
      buttonTitle: "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_",
      buttonTextScreenReader: "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_",
      buttonTextClass: "a_badge a_bg_primary",
      disabled: this.disabledSort,
      dropdownClass: "a_filter_horizontal__wrapper",
      dropdownRenderDefault: !1,
      dropdownTag: "div",
      hasCaret: !1,
      inBody: !0,
      extra: {
        count: this.countModelSort
      },
      isCloseByClickInside: !1,
      lockArrowsNavigation: !1,
      lockTabNavigation: !1,
      onOpen: this.initUnappliedModelSort
    }, {
      dropdown: () => c("div", {
        class: "a_filter_horizontal"
      }, [
        c("div", {
          class: "a_filter_horizontal__header__wrapper"
        }, [
          c("div", {
            class: "a_filter_horizontal__header"
          }, [
            c("div", {
              class: "a_filter_horizontal__header__texts"
            }, [
              c(be, {
                class: "a_filter_horizontal__header__texts__filter",
                tag: "span",
                text: "_A_TABLE_SORT_ADDITIONAL_HEADER_"
              })
            ])
          ])
        ]),
        c("div", {
          class: "a_filter_horizontal__body__wrapper"
        }, [
          c("div", {
            class: "a_filter_horizontal__body"
          }, [
            c(Rd, {
              idPrefix: this.idPrefix,
              class: "a_filter_horizontal__body__form",
              classColumnDefault: "",
              classColumns: "",
              data: this.dataForForm,
              excludeRenderAttributes: this.excludeRenderAttributes,
              modelValue: this.unappliedModelSort,
              showErrors: !1,
              onChange: this.updateUnappliedModelSort
            }, {
              slotAppend: ({ item: e }) => {
                var t, n;
                return c(Oe, {
                  type: "button",
                  class: "a_btn a_btn_primary a_ml_2",
                  title: "_A_TABLE_SORT_ADDITIONAL_BTN_DELETE_",
                  textScreenReader: "_A_TABLE_SORT_ADDITIONAL_BTN_DELETE_",
                  disabled: !((n = (t = this.unappliedModelSort) == null ? void 0 : t[e.additionalProps.index]) != null && n.sortId),
                  iconLeft: ja,
                  onClick: () => this.removeUnappliedModelSort({ item: e })
                });
              }
            })
          ]),
          c("div", {
            class: "a_filter_horizontal__footer"
          }, [
            c("div", {
              class: "a_filter_horizontal__footer__actions"
            }, [
              c(Oe, {
                type: "button",
                class: "a_btn a_btn_primary a_text_nowrap a_filter_horizontal__footer__actions__btn_search",
                iconLeft: $v,
                text: "_A_TABLE_SORT_ADDITIONAL_START_",
                disabled: this.disabledSort,
                onClick: this.changeModelSortInTable
              }),
              c(Oe, {
                type: "button",
                class: "a_btn a_btn_secondary a_text_nowrap a_filter_horizontal__footer__actions__btn_close",
                text: "_A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_",
                onClick: this.closeDropdown
              })
            ])
          ])
        ])
      ])
    }) : null;
  }
};
function y7(e, { emit: t }) {
  const n = p(e, "areAllRowsSelected"), r = p(e, "closeMultipleActionsActive"), a = p(e, "multipleActions"), s = p(e, "selectedRows"), o = p(e, "tableActions"), u = fe("tableId"), f = fe("currentMultipleActions"), _ = fe("rowsLocalAll"), {
    closeConfirm: m,
    openConfirm: b
  } = Bp(), v = d(() => `${u.value}_btn_multiple`), g = d(() => {
    const C = [];
    return Y(Se(o.value), (E) => {
      if (!E.isHidden) {
        if (We(E.callback)) {
          const P = E.callback;
          E.callback = () => P({
            id: E.id,
            action: E
          });
        }
        C.push(E);
      }
    }), C;
  }), S = ({ action: C, callbackDefault: E }) => {
    const P = Se(C);
    P.callback = E, t("toggleMultipleActionsActive", { isActive: !0, action: P });
  }, A = () => {
    t("toggleMultipleActionsActive", { action: f.value });
  }, w = d(() => {
    const C = Se(a.value);
    return Y(C, (E) => {
      if (We(E.callback)) {
        const P = E.callback;
        E.callback = () => S({ action: E, callbackDefault: P });
      }
    }), C;
  }), T = async () => {
    await f.value.callback({
      close: r.value,
      rows: s.value,
      rowsVisible: _.value,
      id: v.value,
      areAllRowsSelected: n.value,
      action: f.value
    }), m(), A();
  };
  return {
    buttonMultipleId: v,
    currentMultipleActions: f,
    multipleActionsFiltered: w,
    onCancelMultipleActions: A,
    onOpenModalMultipleActions: () => {
      f.value.isConfirm ? b({
        headerText: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_",
        bodyHtml: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_",
        saveButtonText: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_",
        extra: {
          action: Kt({
            placeholder: f.value.text
          }),
          selectedRows: s.value.length
        },
        save: T
      }) : f.value.callback({
        close: r.value,
        rows: s.value,
        rowsVisible: _.value,
        id: v.value,
        areAllRowsSelected: n.value,
        action: f.value
      });
    },
    tableActionsFiltered: g
  };
}
function g7(e) {
  const t = p(e, "countAllRows"), {
    filterFloat: n
  } = tr();
  return {
    countAllRowsFormatted: d(() => `(${n(t.value, { digits: 0 })})`)
  };
}
function S7() {
  const e = fe("tableId");
  return {
    tableLabelId: d(() => MA({ tableId: e.value }))
  };
}
function A7(e, { emit: t }) {
  const n = p(e, "areAllRowsSelected"), r = p(e, "areSomeRowsSelected"), a = p(e, "countAllRows"), s = p(e, "isLoadingMultipleActions"), o = p(e, "selectedRows"), u = fe("tableId"), {
    filterFloat: f
  } = tr(), _ = d(() => kA({ tableId: u.value })), m = d(() => n.value ? a.value : o.value.length), b = d(() => ({
    countSelectedRows: m.value,
    countSelectedRowsFiltered: f(m.value, { digits: 0 }),
    countAllRows: a.value,
    countAllRowsFiltered: f(a.value, { digits: 0 })
  })), v = d(() => n.value ? "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_" : "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_"), g = d(() => !!(s.value || a.value === 0)), S = () => {
    g.value || t("toggleBtnAllRows");
  };
  return {
    isBtnMultipleActionDisabled: d(() => !r.value && !n.value),
    isBtnSelectAllRowsDisabled: g,
    multiplePanelId: _,
    textMultipleBtnAllRowsTranslate: v,
    textMultipleSelectedTranslateExtra: b,
    toggleBtnAllRows: S
  };
}
function w7(e, { emit: t }) {
  const n = p(e, "useViewSlot"), r = (s) => {
    t("updateViewCurrent", s);
  }, a = d(() => n.value ? "viewSlot" : void 0);
  return {
    updateViewCurrentLocal: r,
    viewSlotLocal: a
  };
}
const T7 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-ui-checks" viewBox="0 0 16 16">
  <path d="M7 2.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5zM2 1a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2zm0 8a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2zm.854-3.646a.5.5 0 0 1-.708 0l-1-1a.5.5 0 1 1 .708-.708l.646.647 1.646-1.647a.5.5 0 1 1 .708.708zm0 8a.5.5 0 0 1-.708 0l-1-1a.5.5 0 0 1 .708-.708l.646.647 1.646-1.647a.5.5 0 0 1 .708.708zM7 10.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5zm0-5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m0 8a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5"/>
</svg>`, x7 = {
  name: "ATableTopPanel",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    closeMultipleActionsActive: {
      type: Function,
      required: !0
    },
    countAllRows: {
      type: Number,
      required: !0
    },
    disabledActions: {
      type: Boolean,
      required: !0
    },
    disabledMultipleActions: {
      type: Boolean,
      required: !0
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    disabledViews: {
      type: Boolean,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasViews: {
      type: Boolean,
      required: !0
    },
    isLabelVisible: {
      type: Boolean,
      required: !1
    },
    isLoadingMultipleActions: {
      type: Boolean,
      required: !1
    },
    isQuickSearch: {
      type: Boolean,
      required: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !0
    },
    modelQuickSearch: {
      type: String,
      required: !0
    },
    modelSort: {
      type: Array,
      required: !1
    },
    modelView: {
      type: String,
      required: !1,
      default: void 0
    },
    multipleActions: {
      type: Array,
      required: !0
    },
    selectedRows: {
      type: Array,
      required: !0
    },
    showCount: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tableActions: {
      type: Array,
      required: !0
    },
    tableActionsIndexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: -1
    },
    tableActionsIndexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: 0
    },
    useAdditionalSorting: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useViewSlot: {
      type: Boolean,
      required: !1
    },
    viewCurrent: {
      type: Object,
      required: !1,
      default: void 0
    },
    views: {
      type: Array,
      required: !0
    }
  },
  emits: [
    "toggleBtnAllRows",
    "toggleMultipleActionsActive",
    "updateModelQuickSearch",
    "updateViewCurrent"
  ],
  inject: [
    "isMultipleActionsActive",
    "rowsLocalAll",
    "tableId"
  ],
  setup(e, t) {
    const {
      tableLabelId: n
    } = S7(), {
      filterCurrency: r
    } = tr(), {
      buttonMultipleId: a,
      currentMultipleActions: s,
      multipleActionsFiltered: o,
      onCancelMultipleActions: u,
      onOpenModalMultipleActions: f,
      tableActionsFiltered: _
    } = y7(e, t), {
      isBtnMultipleActionDisabled: m,
      isBtnSelectAllRowsDisabled: b,
      multiplePanelId: v,
      textMultipleBtnAllRowsTranslate: g,
      textMultipleSelectedTranslateExtra: S,
      toggleBtnAllRows: A
    } = A7(e, t), {
      updateViewCurrentLocal: w,
      viewSlotLocal: T
    } = w7(e, t), {
      countAllRowsFormatted: I
    } = g7(e);
    return {
      buttonMultipleId: a,
      countAllRowsFormatted: I,
      currentMultipleActions: s,
      filterCurrency: r,
      isBtnMultipleActionDisabled: m,
      isBtnSelectAllRowsDisabled: b,
      multipleActionsFiltered: o,
      multiplePanelId: v,
      onCancelMultipleActions: u,
      onOpenModalMultipleActions: f,
      tableActionsFiltered: _,
      tableLabelId: n,
      textMultipleBtnAllRowsTranslate: g,
      textMultipleSelectedTranslateExtra: S,
      toggleBtnAllRows: A,
      updateViewCurrentLocal: w,
      viewSlotLocal: T
    };
  },
  methods: {
    updateModelQuickSearch(e) {
      this.$emit("updateModelQuickSearch", e);
    }
  },
  render() {
    return [
      c("div", {
        class: "a_table__top_panel"
      }, [
        this.isLabelVisible ? this.$slots.tableLabel ? this.$slots.tableLabel({
          countAllRows: this.countAllRows,
          tableLabelId: this.tableLabelId
        }) : c(this.labelTag, {
          class: ["a_table__top_panel__label", this.labelClass]
        }, [
          c(be, {
            id: this.tableLabelId,
            tag: "span",
            class: "a_table__top_panel__label__text",
            text: this.label,
            extra: this.extra
          }),
          this.showCount ? c(Oe, {
            class: "a_table__top_panel__label__count",
            extra: {
              count: this.countAllRows
            },
            tag: "span",
            text: this.countAllRowsFormatted,
            textAriaHidden: !0,
            textScreenReader: "_A_TABLE_ALL_ROWS_{{count}}_",
            title: "_A_TABLE_ALL_ROWS_{{count}}_",
            type: "text"
          }) : ""
        ]) : "",
        c("div", {
          class: "a_table__top_panel__actions"
        }, [
          this.$slots.tableActionsPrepend ? this.$slots.tableActionsPrepend({
            isMultipleActionsActive: this.isMultipleActionsActive,
            modelView: this.modelView
          }) : "",
          c(eh, {
            actions: this.tableActionsFiltered,
            actionsClasses: [],
            disabled: this.isMultipleActionsActive || this.disabledActions,
            indexFirstDropdownAction: this.tableActionsIndexFirstDropdownAction,
            indexFirstDropdownActionMobile: this.tableActionsIndexFirstDropdownActionMobile,
            minDropdownActions: 0,
            dropdownAttributes: {
              buttonClass: "a_btn a_btn_secondary a_table__action",
              buttonIconLeft: uo,
              buttonText: {
                desktop: "_A_TABLE_ACTIONS_"
              },
              hasCaret: !1,
              inBody: !0,
              placement: "bottom-end"
            }
          }),
          c(eh, {
            actions: this.multipleActionsFiltered,
            actionsClasses: [],
            disabled: this.isMultipleActionsActive || this.disabledMultipleActions,
            indexFirstDropdownAction: 0,
            indexFirstDropdownActionMobile: 0,
            minDropdownActions: 0,
            dropdownAttributes: {
              id: this.buttonMultipleId,
              buttonClass: "a_btn a_btn_secondary a_table__action",
              buttonText: {
                desktop: "_A_TABLE_MULTIPLE_ACTIONS_"
              },
              buttonIconLeft: T7,
              inBody: !0,
              placement: "bottom-end"
            }
          }),
          this.isQuickSearch ? c(In, {
            label: "_A_TABLE_QUICK_SEARCH_",
            class: "a_table__top_panel__actions__quick_search",
            modelUndefined: "",
            modelValue: this.modelQuickSearch,
            iconPrepend: bA,
            "onUpdate:modelValue": this.updateModelQuickSearch
          }) : "",
          this.hasViews ? c(iA, {
            modelValue: this.modelView,
            class: "a_d_inline_block",
            isButtonGroup: !0,
            disabled: this.disabledViews,
            slotName: this.viewSlotLocal,
            data: this.views,
            keyId: "id",
            keyLabel: "label",
            hasBorder: !1,
            classFieldset: "a_p_0",
            "onUpdate:modelValue": this.updateViewCurrentLocal
          }, {
            viewSlot: (e) => this.$slots.viewSlot && this.$slots.viewSlot({
              ...e
            })
          }) : "",
          this.useAdditionalSorting ? c(v7, {
            additionalSortingColumns: this.additionalSortingColumns,
            disabledSort: this.disabledSort,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSort
          }) : "",
          this.$slots.tableActionsAppend ? this.$slots.tableActionsAppend({
            isMultipleActionsActive: this.isMultipleActionsActive,
            modelView: this.modelView
          }) : ""
        ])
      ]),
      this.isMultipleActionsActive && c("div", {
        id: this.multiplePanelId,
        class: "a_table__multiple_panel"
      }, [
        c("div", {
          class: "a_table__multiple_panel__header"
        }, [
          c(be, {
            class: "a_table__multiple_panel__header__text",
            tag: "strong",
            text: "_A_TABLE_MULTIPLE_ACTIONS_"
          }),
          c("div", {
            class: "a_table__multiple_panel__items"
          }, [
            c(be, {
              class: "a_table__multiple_panel__items__selected",
              tag: "span",
              text: "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_",
              extra: this.textMultipleSelectedTranslateExtra
            }),
            this.currentMultipleActions.isAllRowsSelected && c(ct, {
              class: "a_btn a_btn_secondary a_table__multiple_panel__btn_all_rows",
              type: "button",
              text: this.textMultipleBtnAllRowsTranslate,
              extra: this.textMultipleSelectedTranslateExtra,
              disabled: this.isBtnSelectAllRowsDisabled || this.disabledMultipleActions,
              loading: this.isLoadingMultipleActions,
              onClick: this.toggleBtnAllRows
            })
          ])
        ]),
        c("div", {
          class: "a_table__multiple_panel__actions"
        }, [
          this.currentMultipleActions.slot && this.$slots.multipleActionActiveSlot ? this.$slots.multipleActionActiveSlot({
            disabled: this.isBtnMultipleActionDisabled || this.isLoadingMultipleActions || this.disabledMultipleActions,
            loading: this.isLoadingMultipleActions,
            text: this.currentMultipleActions.text,
            action: this.currentMultipleActions,
            onClick: this.onOpenModalMultipleActions,
            close: this.closeMultipleActionsActive,
            rows: this.selectedRows,
            rowsVisible: this.rowsLocalAll,
            id: this.buttonMultipleId,
            areAllRowsSelected: this.areAllRowsSelected
          }) : c(ct, {
            class: "a_btn a_btn_primary a_table__action",
            type: "button",
            disabled: this.isBtnMultipleActionDisabled || this.isLoadingMultipleActions || this.disabledMultipleActions,
            text: this.currentMultipleActions.text,
            loading: this.isLoadingMultipleActions,
            loadingAlign: "left",
            onClick: this.onOpenModalMultipleActions
          }),
          c(ct, {
            class: "a_btn a_btn_secondary a_table__action",
            type: "button",
            text: "_A_TABLE_MULTIPLE_CANCEL_",
            onClick: this.onCancelMultipleActions
          })
        ])
      ])
    ];
  }
};
function C7() {
  const e = R(void 0);
  return {
    componentRef: e,
    setFocusToComponent: () => {
      var n;
      (n = e.value) == null || n.focus({ preventScroll: !0 });
    }
  };
}
const I7 = {
  name: "ATablePreviewDown",
  props: {
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    }
  },
  inject: [
    "onTogglePreview"
  ],
  setup() {
    const {
      componentRef: e,
      setFocusToComponent: t
    } = C7();
    return ha(() => {
      t();
    }), {
      componentRef: e
    };
  },
  render() {
    return c("div", {
      ref: "componentRef",
      class: "a_table__preview_down",
      tabindex: -1
    }, [
      c(be, {
        class: "a_sr_only",
        text: "_A_TABLE_PREVIEW_DOWN_ARIA_LABEL_"
      }),
      this.$slots.preview && this.$slots.preview({
        row: this.row,
        rowIndex: this.rowIndex
      }),
      c(ct, {
        class: "a_btn a_btn_transparent_dark a_table__preview_down__btn_close",
        iconLeft: ja,
        iconClass: "a_table__preview_down__btn_close__icon",
        title: "_A_TABLE_PREVIEW_DOWN_CLOSE_",
        textScreenReader: "_A_TABLE_PREVIEW_DOWN_CLOSE_",
        onClick: () => this.onTogglePreview({
          row: this.row,
          rowIndex: this.rowIndex
        })
      })
    ]);
  }
};
function L7(e) {
  const t = p(e, "column"), n = p(e, "disabledPreview"), r = p(e, "isFooter"), a = fe("hasPreview"), s = fe("isMobile"), {
    columnsStyles: o
  } = LA(e);
  return {
    attributesForTd: d(() => {
      const f = {
        class: [
          "a_table__td a_table__cell",
          {
            a_table__cell_click: a.value && !r.value && !n.value
          },
          t.value.classRowParent
        ],
        style: o.value
      };
      return s.value || (f.role = "cell"), f;
    })
  };
}
function VA(e) {
  const t = p(e, "column"), n = p(e, "row"), r = d(() => !!t.value.to), a = d(() => {
    if (yt(t.value.to))
      return t.value.to;
    if (dt(t.value.to)) {
      const o = Se(t.value.to), u = o.params || {}, f = o.query || {};
      if (t.value.to.nameDynamic && !t.value.to.name) {
        const _ = de(n.value, t.value.to.nameDynamic);
        _ && (o.name = _);
      }
      if (t.value.to.paramsDynamic) {
        let _ = !1;
        if (Y(t.value.to.paramsDynamic, (m, b) => {
          const v = de(n.value, m);
          if (qe(v))
            return _ = !0, !1;
          u[b] = v;
        }), _)
          return;
      }
      if (t.value.to.queryDynamic) {
        let _ = !1;
        if (Y(t.value.to.queryDynamic, (m, b) => {
          const v = de(n.value, m);
          if (qe(v))
            return _ = !0, !1;
          f[b] = v;
        }), _)
          return;
      }
      return o.params = u, o.query = f, o;
    }
  });
  return {
    classForLink: d(() => "a_btn a_btn_link a_p_0 a_text_left"),
    isLink: r,
    toLocal: a
  };
}
function HA(e) {
  const t = p(e, "column"), n = p(e, "isFooter"), r = d(() => n.value ? t.value.footerSlot : t.value.slot);
  return {
    hasSlot: d(() => !!r.value),
    slotName: r
  };
}
function $A(e) {
  const t = p(e, "column"), n = p(e, "isFooter"), r = p(e, "row"), a = fe("columnsDefaultValue"), s = fe("valuesForColumnDefault"), o = d(() => n.value && "footerDefaultValue" in t.value ? t.value.footerDefaultValue : "defaultValue" in t.value ? t.value.defaultValue : qe(a.value) ? "" : a.value), u = d(() => n.value ? t.value.footerKeyLabel : t.value.keyLabel), f = d(() => n.value ? t.value.footerKeyLabelSafeHtml : t.value.keyLabelSafeHtml), _ = d(() => n.value ? t.value.footerKeyLabelHtml : t.value.keyLabelHtml), m = d(() => {
    if (u.value)
      return de(r.value, u.value);
  }), b = d(() => {
    if (f.value)
      return de(r.value, f.value);
  }), v = d(() => {
    if (_.value)
      return de(r.value, _.value);
  }), g = (I) => {
    let C = !1;
    return Y(s.value, (E) => {
      if (I === E)
        return C = !0, !1;
    }), C ? o.value : I;
  }, S = d(() => g(m.value)), A = d(() => g(b.value)), w = d(() => g(v.value));
  return {
    textOrHtmlRender: d(() => {
      if (u.value)
        return c("span", null, S.value);
      if (f.value)
        return c("div", {
          innerHTML: A.value
        });
      if (_.value)
        return Ft(c("div"), [
          [sn, w.value]
        ]);
    })
  };
}
const WA = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-right-fill" viewBox="0 0 16 16">
  <path d="m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z"/>
</svg>`, Wv = {
  name: "ATableTd",
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    level: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    showIconChildren: {
      type: Boolean,
      required: !1
    }
  },
  inject: [
    "isMobile",
    "rowsLocalAll"
  ],
  setup(e) {
    const {
      attributesForTd: t
    } = L7(e), {
      classForLink: n,
      isLink: r,
      toLocal: a
    } = VA(e), {
      hasSlot: s,
      slotName: o
    } = HA(e), {
      textOrHtmlRender: u
    } = $A(e);
    return {
      attributesForTd: t,
      classForLink: n,
      hasSlot: s,
      isLink: r,
      slotName: o,
      textOrHtmlRender: u,
      toLocal: a
    };
  },
  render() {
    const e = c(
      "div",
      this.attributesForTd,
      [
        c("div", {
          class: [
            "a_table__cell__child",
            this.column.class,
            this.column.classRow
          ]
        }, [
          this.showIconChildren ? c(Oe, {
            "aria-hidden": !0,
            class: "a_table__row_level__icon",
            classDefault: "",
            iconLeft: WA,
            type: "text"
          }) : "",
          this.hasSlot && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            column: this.column,
            columnIndex: this.columnIndex,
            level: this.level,
            row: this.row,
            rowIndex: this.rowIndex,
            rows: this.rowsLocalAll
          }) : this.isLink && this.toLocal ? c(la("RouterLink"), {
            class: [
              this.column.class,
              this.classForLink,
              this.column.classRow
            ],
            to: this.toLocal
          }, () => [
            this.textOrHtmlRender
          ]) : this.textOrHtmlRender
        ])
      ]
    );
    return this.isMobile ? [
      c(be, {
        text: this.column.label,
        tag: "dt"
      }),
      c("dd", {}, [
        e
      ])
    ] : e;
  }
}, Uv = {
  name: "ATableListItem",
  inject: [
    "rowsLocalAll"
  ],
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    isFooter: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      classForLink: t,
      isLink: n,
      toLocal: r
    } = VA(e), {
      hasSlot: a,
      slotName: s
    } = HA(e), {
      textOrHtmlRender: o
    } = $A(e);
    return {
      classForLink: t,
      hasSlot: a,
      isLink: n,
      slotName: s,
      textOrHtmlRender: o,
      toLocal: r
    };
  },
  render() {
    return [
      c(be, {
        text: this.column.label,
        tag: "dt"
      }),
      c(
        "dd",
        null,
        this.hasSlot && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          column: this.column,
          columnIndex: this.columnIndex,
          row: this.row,
          rowIndex: this.rowIndex,
          rows: this.rowsLocalAll
        }) : this.isLink && this.toLocal ? [
          c(la("RouterLink"), {
            class: [
              this.column.class,
              this.classForLink,
              this.column.classRow
            ],
            to: this.toLocal
          }, () => [
            this.textOrHtmlRender
          ])
        ] : [
          this.textOrHtmlRender
        ]
      )
    ];
  }
};
function E7() {
  const e = fe("columnsScrollInvisible"), t = fe("modelIsTableWithoutScroll"), n = d(() => e.value.length), r = d(() => t.value ? n.value > 0 : !1);
  return {
    columnsScrollInvisibleText: d(() => n.value === 1 ? "_A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_" : "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_"),
    countColumnsScrollInvisible: n,
    isColumnsScrollInvisibleDropdownVisible: r
  };
}
function O7(e) {
  const t = p(e, "columnActionsView"), n = p(e, "isFooter"), r = p(e, "row"), a = p(e, "rowIndex"), s = fe("columnActionsOnePlusDropdownOptions"), o = fe("rowActions"), u = fe("tableId"), f = d(() => `${u.value}_action_${a.value}`), _ = d(() => qe(s.value.indexFirstDropdownAction) ? 1 : s.value.indexFirstDropdownAction), m = ({ rowAction: D }) => {
    if (D.text)
      return D.text;
    if (We(D.textCallback))
      return D.textCallback({
        row: r.value,
        rowIndex: a.value,
        rowAction: D
      });
  }, b = ({ rowAction: D }) => {
    if (D.html)
      return D.html;
    if (We(D.htmlCallback))
      return D.htmlCallback({
        row: r.value,
        rowIndex: a.value,
        rowAction: D
      });
  }, v = ({ rowAction: D }) => {
    if (D.title)
      return D.title;
    if (We(D.titleCallback))
      return D.titleCallback({
        row: r.value,
        rowIndex: a.value,
        rowAction: D
      });
  }, g = ({ rowAction: D }) => D.disabled ? D.disabled : We(D.disabledCallback) ? D.disabledCallback({
    row: r.value,
    rowIndex: a.value,
    rowAction: D
  }) : !1, S = ({ rowAction: D }) => D.class ? D.class : We(D.classCallback) ? D.classCallback({
    row: r.value,
    rowIndex: a.value,
    rowAction: D
  }) : "", A = ({ rowAction: D }) => {
    if (D.iconLeft)
      return D.iconLeft;
    if (We(D.iconLeftCallback))
      return D.iconLeftCallback({
        row: r.value,
        rowIndex: a.value,
        rowAction: D
      });
  }, w = ({ rowAction: D }) => {
    if (D.iconRight)
      return D.iconRight;
    if (We(D.iconRightCallback))
      return D.iconRightCallback({
        row: r.value,
        rowIndex: a.value,
        rowAction: D
      });
  }, T = ({ rowAction: D }) => {
    if (yt(D.to))
      return D.to;
    if (dt(D.to)) {
      const W = Se(D.to), $ = W.params || {}, z = W.query || {};
      if (D.to.nameDynamic && !D.to.name) {
        const ne = de(r.value, D.to.nameDynamic);
        ne && (W.name = ne);
      }
      if (D.to.paramsDynamic) {
        let ne = !1;
        if (Y(D.to.paramsDynamic, (Q, ce) => {
          const he = de(r.value, Q);
          if (qe(he))
            return ne = !0, !1;
          $[ce] = he;
        }), ne)
          return;
      }
      if (D.to.queryDynamic) {
        let ne = !1;
        if (Y(D.to.queryDynamic, (Q, ce) => {
          const he = de(r.value, Q);
          if (qe(he))
            return ne = !0, !1;
          z[ce] = he;
        }), ne)
          return;
      }
      return W.params = $, W.query = z, W;
    }
  }, I = ({ rowAction: D }) => D.href ? D.href : We(D.hrefCallback) ? D.hrefCallback({
    row: r.value,
    rowIndex: a.value,
    rowAction: D
  }) : !1, C = ({ rowAction: D }) => {
    if (D.extra)
      return D.extra;
    if (We(D.extraCallback))
      return D.extraCallback({
        row: r.value,
        rowIndex: a.value,
        rowAction: D
      });
  }, E = ({ rowAction: D }) => {
    if (D.textScreenReader)
      return D.textScreenReader;
    if (We(D.textScreenReaderCallback))
      return D.textScreenReaderCallback({
        row: r.value,
        rowIndex: a.value,
        rowAction: D
      });
  }, P = ({ rowActionIndexVisible: D }) => {
    if (t.value === "dropdown")
      return {
        id: f.value,
        ids: [f.value, u.value]
      };
    if (D < _.value) {
      const W = `${f.value}_${D}`;
      return {
        buttonId: W,
        id: W,
        ids: [W, u.value]
      };
    }
    return {
      id: f.value,
      ids: [f.value, u.value]
    };
  }, M = (D) => {
    Y(D, (W, $) => {
      eB($, "Callback") && (D[$] = void 0);
    });
  }, k = d(() => {
    const D = [];
    let W = 0;
    return Y(Se(o.value), ($) => {
      if (FA({
        rowAction: $,
        row: r.value,
        rowIndex: a.value
      })) {
        if ($.type !== "divider") {
          const z = m({ rowAction: $ });
          z && ($.text = z);
          const ne = b({ rowAction: $ });
          ne && ($.html = ne);
          const Q = v({ rowAction: $ });
          Q ? $.title = Q : z && ($.title = z);
          const ce = g({ rowAction: $ });
          ce && ($.disabled = ce);
          const he = S({ rowAction: $ });
          he && ($.class = he);
          const ve = A({ rowAction: $ });
          ve && ($.iconLeft = ve);
          const me = w({ rowAction: $ });
          me && ($.iconRight = me);
          const Ne = C({ rowAction: $ });
          Ne && ($.extra = Ne);
          const we = E({ rowAction: $ });
          if (Ne && ($.textScreenReader = we), $.type === "link") {
            const oe = T({ rowAction: $ });
            oe ? $.to = oe : $.href = I({ rowAction: $ });
          }
          if (We($.callback)) {
            const {
              buttonId: oe,
              id: xe,
              ids: re
            } = P({
              rowActionIndexVisible: W
            });
            $.id = oe;
            const Re = $.callback;
            $.callback = () => Re({
              row: r.value,
              rowIndex: a.value,
              id: xe,
              ids: re,
              rowAction: $
            });
          }
          M($);
        }
        W++, D.push($);
      }
    }), D;
  }), F = d(() => !n.value && k.value.length > 0);
  return {
    buttonActionsId: f,
    isRowActionsDropdownVisible: F,
    rowActionsFiltered: k
  };
}
function D7(e) {
  const t = p(e, "rowIndex");
  return {
    rowNumber: d(() => t.value + 1)
  };
}
const P7 = {
  name: "ATableTdAction",
  components: {
    AIcon: lt,
    ATableListItem: Uv
  },
  props: {
    columnActionsBtnGroupMaxWidthStyle: {
      type: String,
      required: !1,
      default: void 0
    },
    columnActionsView: {
      type: String,
      required: !0
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    }
  },
  inject: [
    "columnActionsOnePlusDropdownOptions",
    "columnsScrollInvisible",
    "tableId"
  ],
  setup(e) {
    const {
      isMobileWidth: t
    } = En(), {
      buttonActionsId: n,
      isRowActionsDropdownVisible: r,
      rowActionsFiltered: a
    } = O7(e), {
      columnsScrollInvisibleText: s,
      countColumnsScrollInvisible: o,
      isColumnsScrollInvisibleDropdownVisible: u
    } = E7(), {
      rowNumber: f
    } = D7(e), {
      stylesThTd: _
    } = DA();
    return {
      buttonActionsId: n,
      columnsScrollInvisibleText: s,
      countColumnsScrollInvisible: o,
      isColumnsScrollInvisibleDropdownVisible: u,
      isMobileWidth: t,
      isRowActionsDropdownVisible: r,
      rowActionsFiltered: a,
      rowNumber: f,
      stylesThTd: _
    };
  },
  render() {
    return c("div", {
      role: "cell",
      class: [
        "a_table__td a_table__cell a_table__cell_action",
        {
          a_table__cell_action_sticky: this.isRowActionsStickyLocal
        }
      ],
      ...this.stylesThTd
    }, [
      c("div", {
        class: [
          "a_table__cell__child",
          this.rowActionsClass
        ]
      }, [
        this.isColumnsScrollInvisibleDropdownVisible && c(Ma, {
          buttonClass: "a_btn a_btn_link a_text_nowrap",
          buttonIconLeft: mA,
          buttonIconClass: "a_table__cell_action__additional_icon",
          buttonTitle: "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_",
          buttonTextScreenReader: "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_",
          buttonText: this.columnsScrollInvisibleText,
          buttonTextClass: "a_table__cell_action__additional_text",
          buttonTextAriaHidden: !0,
          extra: {
            count: this.countColumnsScrollInvisible
          },
          dropdownClass: "a_p_0 a_overflow_x_hidden a_table__extra_dropdown",
          dropdownTag: "div",
          hasCaret: !1,
          floatingFlip: {
            use: !0,
            fallbackPlacements: ["top-end", "left"]
          },
          inBody: !0,
          placement: "bottom-end",
          menuWidth: 600,
          isCloseByClickInside: !1
        }, {
          dropdown: () => [
            c("dl", {
              class: "a_list_dl a_list_dl_dt_right"
            }, [
              this.columnsScrollInvisible.map((e, t) => c(Uv, {
                column: e,
                columnIndex: t,
                row: this.row,
                rowIndex: this.rowIndex,
                isFooter: this.isFooter
              }, this.$slots))
            ])
          ]
        }),
        this.isRowActionsDropdownVisible || this.$slots.rowActions ? c("div", {
          class: "a_table__cell_action__group"
        }, [
          this.$slots.rowActions ? this.$slots.rowActions({
            tableId: this.tableId,
            row: this.row,
            rowIndex: this.rowIndex,
            isFooter: this.isFooter
          }) : "",
          this.isRowActionsDropdownVisible ? this.columnActionsView === "dropdown" || this.isMobileWidth && this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile === 0 ? c(Ma, {
            id: this.buttonActionsId,
            actions: this.rowActionsFiltered,
            buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
            buttonIconLeft: uo,
            buttonTextScreenReader: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
            buttonTitle: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
            disabled: this.disabledRowActions,
            extra: {
              rowNumber: this.rowNumber
            },
            hasCaret: !1,
            inBody: !0,
            placement: "bottom-end"
          }, this.$slots) : c(eh, {
            class: "a_d_inline_block",
            style: this.columnActionsBtnGroupMaxWidthStyle,
            actions: this.rowActionsFiltered,
            dropdownAttributes: {
              id: this.buttonActionsId,
              buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
              buttonIconLeft: Fs,
              buttonTextScreenReader: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
              buttonTitle: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
              extra: {
                rowNumber: this.rowNumber
              },
              hasCaret: !1,
              inBody: !0,
              placement: "bottom-end"
            },
            disabled: this.disabledRowActions,
            btnGroupClass: qe(this.columnActionsOnePlusDropdownOptions.btnGroupClass) ? "a_btn_group a_btn_group_table" : this.columnActionsOnePlusDropdownOptions.btnGroupClass,
            hasDividerBeforeDropdown: this.columnActionsOnePlusDropdownOptions.hasDividerBeforeDropdown || !1,
            indexFirstDropdownAction: qe(this.columnActionsOnePlusDropdownOptions.indexFirstDropdownAction) ? 1 : this.columnActionsOnePlusDropdownOptions.indexFirstDropdownAction,
            indexFirstDropdownActionMobile: qe(this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile) ? 1 : this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile,
            minDropdownActions: qe(this.columnActionsOnePlusDropdownOptions.minDropdownActions) ? 1 : this.columnActionsOnePlusDropdownOptions.minDropdownActions,
            actionsClasses: this.columnActionsOnePlusDropdownOptions.actionsClasses || ["a_btn a_btn_primary a_text_truncate"]
          }, this.$slots) : ""
        ]) : ""
      ])
    ]);
  }
};
function R7(e, {
  hasChildren: t = d(() => !1),
  hasPreviewLocal: n = d(() => !1),
  rowClassChildren: r = d(() => {
  }),
  rowClassLevelChildren: a = d(() => {
  }),
  rowClassPreview: s = d(() => {
  }),
  toggleChildren: o = () => {
  }
}) {
  const u = p(e, "disabledPreview"), f = p(e, "disabledPreviewRowCallback"), _ = p(e, "isFooter"), m = p(e, "isTreeCollapsible"), b = p(e, "level"), v = p(e, "row"), g = p(e, "rowClass"), S = p(e, "rowIndex"), A = fe("isMobile"), w = fe("onTogglePreview"), T = fe("tableId"), I = d(() => {
    const W = _.value ? "_footer" : "";
    return `${T.value}${W}_${S.value}`;
  }), C = d(() => We(g.value) ? g.value({
    level: b.value,
    row: v.value,
    rowindex: S.value
  }) : g.value), E = d(() => [
    "a_table__row a_table__body__row a_table__row_hover",
    r.value,
    a.value,
    s.value,
    C.value
  ]), P = d(() => A.value ? "listitem" : "row"), M = d(() => We(f.value) ? f.value({ row: v.value, rowIndex: S.value }) : u.value), k = (W) => {
    e7({
      $event: W,
      tagsName: [
        "A",
        "BUTTON",
        "INPUT",
        "LABEL"
      ],
      classStop: "a_table__row"
    }) || (t.value ? o() : n.value && w({
      row: v.value,
      rowIndex: S.value
    }));
  }, F = (W) => {
    W.keyCode === X.enter && k(W);
  }, D = d(() => (m.value && t.value || n.value) && !M.value ? {
    tabindex: 0,
    onClick: k,
    onKeydown: F
  } : {});
  return {
    disabledPreviewRow: M,
    eventsLocal: D,
    roleLocal: P,
    rowClassComputed: E,
    rowHtmlId: I
  };
}
function B7(e, { emit: t }) {
  const n = p(e, "areAllRowsSelected"), r = p(e, "row"), a = p(e, "rowIndex"), s = p(e, "selectedRowsIndexes"), o = fe("currentMultipleActions"), u = fe("isMultipleActionsActive"), f = d(() => !!s.value[a.value] || n.value), _ = d(() => {
    if (u.value) {
      if (We(de(o.value, "isHiddenCallback")))
        return o.value.isHiddenCallback({
          row: r.value,
          rowIndex: a.value
        });
      if (n.value)
        return !0;
    }
    return !1;
  }), m = d(() => f.value ? "_A_TABLE_DESELECT_THIS_ROW_" : "_A_TABLE_SELECT_THIS_ROW_");
  return {
    isCheckboxDisabled: _,
    isRowSelected: f,
    labelCheckbox: m,
    toggleCheckbox: () => {
      _.value || t("setSelectedRowsIndexes", { rowIndex: a.value });
    }
  };
}
function k7(e) {
  const t = p(e, "isTree"), n = p(e, "keyChildren"), r = p(e, "level"), a = p(e, "row"), s = p(e, "rowIndex"), o = p(e, "rowsLength"), u = d(() => {
    if (!n.value)
      return [];
    const v = de(a.value, n.value);
    return Ae(v) ? v : [];
  }), f = d(() => u.value.length > 0), _ = d(() => r.value + 1), m = d(() => t.value ? {
    "aria-level": r.value,
    "aria-posinset": s.value + 1,
    "aria-setsize": o.value
  } : {}), b = d(() => {
    if (t.value)
      return `a_table__row_level a_table__row_level_${r.value}`;
  });
  return {
    ariaTreeAttributes: m,
    children: u,
    hasChildren: f,
    levelForChildren: _,
    rowClassLevelChildren: b
  };
}
function M7(e, {
  hasChildren: t = d(() => !1)
}) {
  const n = p(e, "isOneOfParentsClose"), r = p(e, "isTreeCollapsible"), a = p(e, "isTreeOpened"), s = R(!1), o = d(() => {
    if (t.value)
      return s.value;
  }), u = d(() => ({
    a_table__row_has_children: t.value,
    a_table__row_hide: n.value,
    a_table__row_level_open: t.value && s.value
  })), f = d(() => !!(n.value || !s.value));
  return {
    ariaExpanded: o,
    initIsChildrenOpen: () => {
      (!r.value || a.value) && (s.value = !0);
    },
    isOneOfParentsCloseForChildren: f,
    rowClassChildren: u,
    toggleChildren: () => {
      s.value = !s.value;
    }
  };
}
function F7(e) {
  const t = p(e, "allVisibleMobileColumns"), n = p(e, "countVisibleMobileColumns"), r = fe("isMobile"), a = R(!1), s = d(() => t.value.length - n.value), o = d(() => r.value && t.value.length > n.value), u = d(() => s.value === 1 ? "_A_TABLE_MOBILE_TR_PLUS_FIELD_" : "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_"), f = d(() => a.value ? "_A_TABLE_MOBILE_TR_CLOSE_" : u.value);
  return {
    countInvisibleMobileColumns: s,
    isAllColumnsVisibleMobile: a,
    isBtnToggleAllColumnsVisible: o,
    textBtnToggleAllColumns: f,
    toggleAllColumnsVisibleMobile: ({ $event: m }) => {
      a.value = !a.value, m.stopPropagation();
    }
  };
}
function q7(e, {
  hasChildren: t = d(() => !1)
}) {
  const n = p(e, "isFooter"), r = p(e, "rowIndex"), a = fe("hasPreview"), s = fe("previewRightRowIndex"), o = fe("previewRightRowIndexLast"), u = d(() => !!(!t.value && a.value && !n.value)), f = d(() => r.value === s.value), _ = d(() => !f.value && r.value === o.value), m = d(() => Kt({
    placeholder: f.value ? "_A_TABLE_ROW_PREVIEW_CLOSE_" : "_A_TABLE_ROW_PREVIEW_OPEN_"
  })), b = d(() => u.value ? {
    "aria-label": m.value
  } : {}), v = d(() => {
    if (u.value)
      return {
        a_table__row_preview_open: f.value,
        a_table__row_preview_was_open: _.value
      };
  });
  return {
    hasPreviewLocal: u,
    previewAttributes: b,
    rowClassPreview: v
  };
}
const jv = {
  name: "ATableTr",
  props: {
    allVisibleMobileColumns: {
      type: Array,
      required: !0
    },
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    columnActionsBtnGroupMaxWidthStyle: {
      type: String,
      required: !1,
      default: void 0
    },
    columnActionsView: {
      type: String,
      required: !0
    },
    countVisibleMobileColumns: {
      type: Number,
      required: !0
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    isOneOfParentsClose: {
      type: Boolean,
      required: !1
    },
    isPreviewDownOpen: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isTree: {
      type: Boolean,
      required: !1
    },
    isTreeCollapsible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTreeOpened: {
      type: Boolean,
      required: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "id"
    },
    level: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowClass: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    selectedRowsIndexes: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  setup(e, t) {
    const {
      ariaTreeAttributes: n,
      children: r,
      hasChildren: a,
      levelForChildren: s,
      rowClassLevelChildren: o
    } = k7(e), {
      ariaExpanded: u,
      initIsChildrenOpen: f,
      isOneOfParentsCloseForChildren: _,
      rowClassChildren: m,
      toggleChildren: b
    } = M7(e, {
      hasChildren: a
    }), {
      hasPreviewLocal: v,
      previewAttributes: g,
      rowClassPreview: S
    } = q7(e, {
      hasChildren: a
    }), {
      disabledPreviewRow: A,
      eventsLocal: w,
      roleLocal: T,
      rowClassComputed: I,
      rowHtmlId: C
    } = R7(e, {
      hasChildren: a,
      hasPreviewLocal: v,
      rowClassChildren: m,
      rowClassLevelChildren: o,
      rowClassPreview: S,
      toggleChildren: b
    }), {
      countInvisibleMobileColumns: E,
      isAllColumnsVisibleMobile: P,
      isBtnToggleAllColumnsVisible: M,
      textBtnToggleAllColumns: k,
      toggleAllColumnsVisibleMobile: F
    } = F7(e), {
      isCheckboxDisabled: D,
      isRowSelected: W,
      labelCheckbox: $,
      toggleCheckbox: z
    } = B7(e, t);
    return f(), {
      ariaExpanded: u,
      ariaTreeAttributes: n,
      children: r,
      countInvisibleMobileColumns: E,
      disabledPreviewRow: A,
      eventsLocal: w,
      hasChildren: a,
      isAllColumnsVisibleMobile: P,
      isBtnToggleAllColumnsVisible: M,
      isCheckboxDisabled: D,
      isOneOfParentsCloseForChildren: _,
      isRowSelected: W,
      labelCheckbox: $,
      levelForChildren: s,
      previewAttributes: g,
      roleLocal: T,
      rowClassComputed: I,
      rowHtmlId: C,
      textBtnToggleAllColumns: k,
      toggleAllColumnsVisibleMobile: F,
      toggleCheckbox: z,
      toggleChildren: b
    };
  },
  inject: [
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMultipleActionsActive",
    "isMobile"
  ],
  render() {
    let e = [];
    this.isMobile && !this.isAllColumnsVisibleMobile ? Y(this.allVisibleMobileColumns, (r, a) => {
      if (a + 1 > this.countVisibleMobileColumns)
        return !1;
      e.push(
        c(Wv, {
          key: r.id,
          column: r,
          columnIndex: a,
          disabledPreview: this.disabledPreviewRow,
          level: this.level,
          row: this.row,
          rowIndex: this.rowIndex,
          isFooter: this.isFooter
        }, this.$slots)
      );
    }) : e = this.columnsFilteredForRender.map((r, a) => c(Wv, {
      key: r.id,
      column: r,
      columnIndex: a,
      disabledPreview: this.disabledPreviewRow,
      level: this.level,
      row: this.row,
      rowIndex: this.rowIndex,
      isFooter: this.isFooter,
      showIconChildren: !!(this.isTreeCollapsible && this.hasChildren && a === 0)
    }, this.$slots));
    const t = this.isActionColumnVisible && c(P7, {
      columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
      columnActionsView: this.columnActionsView,
      disabledRowActions: this.disabledRowActions,
      row: this.row,
      rowIndex: this.rowIndex,
      isFooter: this.isFooter,
      rowActionsClass: this.rowActionsClass,
      isRowActionsStickyLocal: this.isRowActionsStickyLocal
    }, this.$slots), n = this.isMobile ? c("div", {
      class: "a_table_mobile__dl__wrapper"
    }, [
      this.$slots.rowMobilePrepend ? this.$slots.rowMobilePrepend({
        row: this.row,
        rowIndex: this.rowIndex,
        isFooter: this.isFooter
      }) : "",
      this.isTreeCollapsible && this.hasChildren ? c(Oe, {
        "aria-hidden": !0,
        class: "a_table__row_level__icon",
        classDefault: "",
        iconLeft: WA,
        type: "text"
      }) : "",
      c("dl", {
        class: "a_table_mobile__dl"
      }, e),
      this.$slots.rowMobileAppend ? this.$slots.rowMobileAppend({
        row: this.row,
        rowIndex: this.rowIndex,
        isFooter: this.isFooter
      }) : ""
    ]) : e;
    return [
      c("div", {
        id: this.rowHtmlId,
        role: this.roleLocal,
        class: this.rowClassComputed,
        "aria-expanded": this.ariaExpanded,
        ...this.previewAttributes,
        ...this.ariaTreeAttributes,
        ...this.eventsLocal
      }, [
        this.isMultipleActionsActive && c("div", {
          class: "a_table__td a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;"
        }, [
          !this.isFooter && c(Dd, {
            isWidthAuto: !0,
            modelValue: this.isRowSelected,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        n,
        this.isMobile ? c("div", {
          class: "a_table_mobile__actions_parent"
        }, [
          this.isBtnToggleAllColumnsVisible && c(Oe, {
            class: "a_btn a_btn_link a_table_mobile__columns_btn_toggle",
            extra: {
              count: this.countInvisibleMobileColumns
            },
            text: this.textBtnToggleAllColumns,
            type: "button",
            onClick: this.toggleAllColumnsVisibleMobile
          }),
          t
        ]) : t
      ]),
      this.isPreviewDownOpen && c(I7, {
        row: this.row,
        rowIndex: this.rowIndex
      }, {
        preview: (r) => this.$slots.preview ? this.$slots.preview(r) : void 0
      }),
      this.hasChildren ? this.children.map((r, a) => c(la("ATableTr"), {
        key: r[this.keyId] || a,
        allVisibleMobileColumns: this.allVisibleMobileColumns,
        areAllRowsSelected: this.areAllRowsSelected,
        columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
        columnActionsView: this.columnActionsView,
        countVisibleMobileColumns: this.countVisibleMobileColumns,
        disabledPreview: this.disabledPreviewRow,
        disabledRowActions: this.disabledRowActions,
        isFooter: this.isFooter,
        isOneOfParentsClose: this.isOneOfParentsCloseForChildren,
        isPreviewDownOpen: !1,
        isRowActionsStickyLocal: this.isRowActionsStickyLocal,
        isTree: this.isTree,
        isTreeCollapsible: this.isTreeCollapsible,
        isTreeOpened: this.isTreeOpened,
        keyChildren: this.keyChildren,
        keyId: this.keyId,
        level: this.levelForChildren,
        row: r,
        rowActionsClass: this.rowActionsClass,
        rowClass: this.rowClass,
        rowIndex: a,
        rowsLength: this.children.length,
        selectedRowsIndexes: this.selectedRowsIndexes
      }, {
        get: (s) => [
          c(Qf, {
            data: s.row,
            keyLabel: s.column.keyLabel,
            filter: s.column.filter,
            filterParameters: s.column.filterParameters,
            defaultValue: s.column.defaultValue,
            tag: s.column.filterTag || "div"
          })
        ],
        ...this.$slots
      })) : ""
    ];
  }
};
function N7(e, {
  isMobile: t = d(() => !1),
  rowsLocal: n = R([])
}) {
  const r = p(e, "columnActionsView"), a = p(e, "columnActionsWidth"), s = p(e, "columnActionsWidthDefaults"), o = p(e, "columnActionsWidthMin"), u = p(e, "rowActions"), f = d(() => r.value === "onePlusDropdown"), _ = d(() => {
    let S = !1;
    e: for (let A = 0; A < n.value.length; A++) {
      const w = n.value[A];
      for (let T = 0; T < u.value.length; T++) {
        const I = u.value[T];
        if (FA({
          rowAction: I,
          row: w,
          rowIndex: A
        }) && I.type !== "divider") {
          S = !0;
          break e;
        }
      }
    }
    return S;
  }), m = d(() => !u.value.length || !f.value ? !1 : _.value), b = d(() => qe(a.value) ? m.value && r.value === "onePlusDropdown" ? s.value.onePlusDropdown : s.value.default : a.value), v = d(() => qe(o.value) ? m.value && r.value === "onePlusDropdown" ? s.value.onePlusDropdownMin : s.value.min : o.value);
  return {
    columnActionsBtnGroupMaxWidthStyle: d(() => {
      const S = s.value.btnGroupMaxWidth;
      if (!t.value && r.value !== "dropdown" && !qe(S))
        return `max-width: ${S}px`;
    }),
    columnActionsWidthLocal: b,
    columnActionsWidthMinLocal: v,
    isColumnActionWide: m
  };
}
function V7(e, {
  columnsScrollInvisible: t = R([]),
  indexFirstScrollInvisibleColumn: n = R(void 0),
  modelColumnsVisibleLocal: r = R({}),
  modelIsTableWithoutScrollComputed: a = d(() => !1),
  columnsOrderedFromSimpleTable: s = d(() => [])
}) {
  const o = p(e, "columns"), u = p(e, "isActionColumnVisible"), f = p(e, "isSimpleTable"), _ = p(e, "modelColumnsOrdering"), m = p(e, "multipleActions"), b = d(() => ui(o.value, "id")), v = d(() => {
    const I = {
      true: [],
      false: [],
      trueObject: {},
      falseObject: {},
      trueColumns: [],
      falseColumns: []
    };
    return Y(Se(o.value), (C) => {
      const E = C.id;
      C.locked ? (I.true.push(E), I.trueColumns.push(C), I.trueObject[E] = !0) : (I.false.push(E), I.falseColumns.push(C), I.falseObject[E] = !0);
    }), I;
  }), g = d(() => {
    if (f.value && s.value && s.value.length)
      return s.value;
    if (!_.value.length)
      return [...v.value.trueColumns, ...v.value.falseColumns];
    const I = [], C = Se(b.value);
    return Y(_.value, (E) => {
      C[E] && I.push(C[E]);
    }), I;
  }), S = d(() => {
    const I = [], C = {};
    return Y(g.value, (E, P) => {
      r7({
        column: E,
        columnIndex: P,
        modelIsTableWithoutScroll: a.value,
        modelColumnsVisibleLocal: r.value,
        indexFirstScrollInvisibleColumn: n.value
      }) && (C[I.length] = P, I.push(E));
    }), {
      columns: I,
      columnsIndexesMapping: C
    };
  }), A = d(() => S.value.columnsIndexesMapping), w = d(() => S.value.columns), T = d(() => {
    let I = w.value.length;
    return a.value && (I += t.value.length), u.value && I++, m.value.length && I++, I;
  });
  return {
    columnIdsGroupByLocked: v,
    columnsFilteredForRender: w,
    columnsFilteredForRenderIndexesMapping: A,
    columnsOrdered: g,
    countNotHiddenColumns: T
  };
}
function H7(e, {
  modelSort: t = R([])
}) {
  const n = p(e, "columns"), r = p(e, "showFirstSortingSequenceNumber"), a = p(e, "sortingSequenceNumberClass"), s = d(() => Gt(n.value, (T) => t7({ column: T }))), o = d(() => Yn(s.value, (T, I) => ({
    ...T,
    _index: T.prio || I
  }))), u = d(() => Yn(o.value, (T) => (T.group && T.group.length && (T.group = Yn(T.group, (I, C) => [
    I,
    C
  ].join("%%%"))), T))), f = ({ groups: T, group: I, level: C, columnsOrderedFromGroups: E, firstLevelGroupObject: P }) => {
    const M = I ? Gt(T, (D) => Lf(D, I[C - 1])) : T, k = ag(M, (D) => D[C]), F = Yn(k, (D) => {
      const W = {
        id: D[C].split("%%%")[0]
      };
      let $;
      return C === 0 ? ($ = W, $.columnIndexes = []) : $ = P, D.length > C + 1 ? W.children = de(
        f({
          groups: T,
          group: D,
          level: C + 1,
          columnsOrderedFromGroups: E,
          firstLevelGroupObject: $
        }),
        "recursiveGroup"
      ) : D.length === C + 1 && (W.columns = Gt(u.value, (z) => Lf(z.group, D[C])), $.columnIndexes.push(...Yn(W.columns, "_index")), E.push(...W.columns)), W;
    });
    return {
      columnsOrderedFromGroups: E,
      recursiveGroup: F
    };
  }, _ = d(() => Yn(u.value, (T) => de(T, "group", T))), m = d(() => Gt(_.value, (T) => Ae(T))), b = d(() => Gt(_.value, (T) => !Ae(T))), v = d(() => {
    const T = [];
    return f({ groups: m.value, group: null, level: 0, columnsOrderedFromGroups: T });
  }), g = d(() => Pf([
    ...v.value.columnsOrderedFromGroups,
    ...b.value
  ], "_index")), S = (T) => c(rh, {
    ref: "th",
    class: "a_table__cell__child_group",
    column: T,
    columnGroupNames: Yn(T.group, (I) => I.split("%%%")[0]),
    columnIndex: T._index,
    hasMultipleActions: !1,
    modelSort: t.value,
    showFirstSortingSequenceNumber: r.value,
    sortingSequenceNumberClass: a.value
  }), A = (T) => c("div", {
    class: "a_table__th_group"
  }, [
    c("div", {
      class: "a_table__th_child_group"
    }, [
      c("div", {
        class: "a_table__cell_group a_text_center"
      }, [
        T.id && c(be, {
          html: T.id,
          tag: "span",
          "aria-hidden": !0
        })
      ]),
      c("div", {
        class: "a_table__th_group_container"
      }, T.children ? Yn(T.children, (I) => A(I)) : Yn(T.columns, (I) => S(I)))
    ])
  ]), w = d(() => {
    const T = Pf([
      ...v.value.recursiveGroup,
      ...b.value
    ], (I) => I.columnIndexes ? gB(I.columnIndexes) : I._index);
    return Yn(T, (I) => I.columnIndexes ? A(I) : S(I));
  });
  return {
    columnsOrderedFromSimpleTable: g,
    renderedGroupedColumns: w
  };
}
function $7(e, { emit: t }, {
  checkVisibleColumns: n = () => {
  },
  columnIdsGroupByLocked: r = d(() => ({
    true: [],
    false: [],
    trueObject: {},
    falseObject: {},
    trueColumns: [],
    falseColumns: []
  })),
  columnsFilteredForRenderIndexesMapping: a = d(() => ({}))
}) {
  const s = p(e, "columns"), o = p(e, "modelColumnsOrdering"), u = ({ columnIndexDraggable: m, columnIndexOver: b, reset: v, inHeader: g }) => {
    if (m === b && !v)
      return;
    g && (m = a.value[m], b = a.value[b]);
    let S = [];
    if (v)
      S = [...r.value.true, ...r.value.false];
    else {
      S = Se(o.value);
      const A = S[m];
      S.splice(m, 1), S.splice(b, 0, A);
    }
    t("changeColumnsOrdering", {
      columnIndexDraggable: m,
      columnIndexOver: b,
      modelColumnsOrdering: S
    }), setTimeout(() => {
      n();
    });
  }, f = () => {
    let m = [], b = !1;
    if (!o.value.length)
      m = [...r.value.true, ...r.value.false];
    else {
      m = [...r.value.true];
      const v = Se(r.value.falseObject);
      Y(o.value, (g) => {
        v[g] && (m.push(g), delete v[g]);
      }), Y(v, (g, S) => {
        m.push(S);
      }), JSON.stringify(o.value) !== JSON.stringify(m) && (b = !0);
    }
    return {
      shouldFixColumns: b,
      modelColumnsOrderingLocal: m
    };
  }, _ = () => {
    const {
      shouldFixColumns: m,
      modelColumnsOrderingLocal: b
    } = f();
    m && t("changeColumnsOrdering", {
      modelColumnsOrdering: b,
      shouldFixColumns: m
    });
  };
  return st(s, () => {
    _();
  }, {
    deep: !0
  }), {
    changeColumnsOrdering: u,
    checkColumnsOrdering: f
  };
}
function W7(e) {
  const t = p(e, "countAllRows"), n = p(e, "data"), r = p(e, "isTree"), a = p(e, "keyChildren"), s = p(e, "keyCountAllRowsInData"), o = d(() => dt(n.value)), u = d(() => Ae(n.value)), f = d(() => ae(t.value) ? o.value ? +de(n.value, s.value) : u.value ? r.value ? ck({
    array: n.value,
    keyChildren: a.value
  }) : n.value.length : 0 : t.value), _ = d(() => ae(t.value) ? n.value.length : t.value);
  return {
    countAllRowsLocal: f,
    totalRowsCount: _
  };
}
function U7({
  tableRef: e = R(void 0)
}) {
  return {
    scrollToTable: () => {
      if (e.value) {
        let a = e.value.getBoundingClientRect().top + window.scrollY - window.innerHeight / 2;
        a < 0 && (a = 0), document.documentElement.scrollTop = a;
      }
    },
    setFocusToTable: () => {
      e.value && (e.value.setAttribute("tabindex", "-1"), e.value.focus(), e.value.removeAttribute("tabindex"));
    }
  };
}
function j7(e, { emit: t }, {
  checkColumnsOrdering: n = () => {
  },
  checkVisibleColumns: r = () => {
  },
  modelColumnsVisibleLocal: a = R({})
}) {
  const s = p(e, "modelColumnsVisible"), o = p(e, "columns");
  return {
    initTable: () => {
      const {
        shouldFixColumns: f,
        modelColumnsOrderingLocal: _
      } = n();
      let m = !1;
      Ps(s.value) ? a.value = Se(s.value) : (m = !0, a.value = PA(o.value), r()), t("initTable", Se({
        columnsOrdering: {
          model: _,
          shouldFix: f
        },
        columnsVisible: {
          model: a.value,
          shouldFix: m
        }
      }));
    }
  };
}
function G7(e, { emit: t }, {
  closePreviewAll: n = () => {
  },
  scrollToTable: r = () => {
  },
  setFocusToTable: a = () => {
  },
  viewCurrent: s = d(() => ({}))
}) {
  const o = p(e, "isTree"), u = p(e, "offsetStart"), f = p(e, "pagination"), _ = R(f.value.limitStart || 10), m = R(u.value), b = d(() => {
    var S;
    return o.value ? !1 : (S = f.value) != null && S.use ? s.value ? s.value.usePagination || !1 : !0 : !1;
  });
  return {
    changeLimit: (S) => {
      a(), r(), _.value = S, m.value = u.value, t("changeLimit", {
        offset: m.value,
        limit: S
      }), n();
    },
    changeOffset: (S) => {
      let A, w;
      dt(S) ? (A = S.offset, w = S.reload) : (A = S, w = !0), w && (a(), r()), m.value = A, t("changeOffset", {
        offset: A,
        limit: _.value
      }), w && n();
    },
    limit: _,
    offset: m,
    usePaginationLocal: b
  };
}
function Y7({
  columnsOrdered: e = R([]),
  isMobile: t = R(!1),
  modelColumnsVisibleLocal: n = R({})
}) {
  return {
    allVisibleMobileColumns: d(() => t.value ? Gt(e.value, (a) => a.isRender !== !1 && n.value[a.id] !== !1) : [])
  };
}
function z7(e, { emit: t }, {
  checkVisibleColumns: n = () => {
  },
  isMultipleActionsActive: r = R(void 0),
  rowsLocalAll: a = d(() => []),
  rowsLocalLength: s = d(() => 0)
}) {
  const o = p(e, "id"), u = p(e, "multipleActions"), f = R(void 0), _ = R({}), m = R(!1), b = d(() => u.value.length > 0), v = d(() => We(de(f.value, "isHiddenCallback"))), g = d(() => Gt(a.value, (k, F) => _.value[F])), S = () => {
    _.value = {};
  }, A = () => {
    r.value = !1, f.value = void 0, m.value = !1, S();
  }, w = () => {
    if (window.isScrollDisabled)
      return;
    const k = kA({ tableId: o.value });
    ka({
      selector: `#${k}`
    });
  }, T = ({ isActive: k, action: F } = {}) => {
    if (k) {
      r.value = !0, f.value = F, setTimeout(() => {
        n(), w();
      }), t("toggleMultipleActions", { isActive: k, action: F });
      return;
    }
    r.value ? A() : r.value = !0, setTimeout(() => {
      n(), w();
    }), t("toggleMultipleActions", { isActive: k, action: F });
  }, I = d(() => Ps(_.value)), C = d(() => s.value > 0 && s.value === I.value), E = d(() => I.value > 0);
  return {
    areAllRowsSelected: m,
    areAllVisibleRowsSelected: C,
    areSomeRowsSelected: E,
    closeMultipleActionsActive: A,
    currentMultipleActions: f,
    hasMultipleActions: b,
    selectedRows: g,
    selectedRowsIndexes: _,
    setEmptySelectedRowsIndexes: S,
    setSelectedRowsIndexes: ({ rowIndex: k, isAll: F }) => {
      if (F) {
        if (E.value)
          S();
        else {
          const D = {};
          v.value ? br(s.value, (W) => {
            f.value.isHiddenCallback({
              row: a.value[W],
              rowIndex: W
            }) || (D[W] = !0);
          }) : br(s.value, (W) => {
            D[W] = !0;
          }), _.value = D;
        }
        return;
      }
      _.value[k] ? delete _.value[k] : _.value[k] = !0;
    },
    toggleBtnAllRows: () => {
      m.value = !m.value, m.value && S();
    },
    toggleMultipleActionsActive: T
  };
}
function K7(e, { emit: t }, {
  aTableRef: n = R({}),
  tableGrandparentRef: r = R({})
}) {
  const {
    previewRef: a,
    removePreviewRef: s
  } = NA(), o = p(e, "previewBoxWidth"), u = 200, f = 50;
  let _, m = 0, b = 0, v = 0;
  const g = () => {
    b = n.value.getBoundingClientRect().left;
  }, S = ({ clientWidth: D }) => {
    m = D, _ = D / 100 * f, g();
  }, A = ({ clientWidthLocal: D, clientXTableParent: W, previewBoxWidth: $ }) => {
    const z = D - W - $;
    n.value.style.width = `${z}px`;
  }, w = ({ clientX: D = 0, previewRef: W, previewBoxWidth: $ = 0 }) => {
    let z = $ || m - D;
    z < u ? z = u : z > _ && (z = _), A({ clientWidthLocal: m, clientXTableParent: b, previewBoxWidth: z }), W.style.width = `${z}px`;
  }, T = ({ previewRef: D }) => {
    de(D, "style.removeProperty") && D.style.removeProperty("width"), de(n, "value.style.removeProperty") && n.value.style.removeProperty("width");
  }, I = ({ previewRef: D }) => {
    m = document.documentElement.clientWidth, v = de(r, "value.offsetWidth", 0), g(), w({
      previewRef: D,
      previewBoxWidth: o.value
    });
  }, C = ({ previewRef: D, isOpen: W }) => {
    W ? I({ previewRef: D }) : T({ previewRef: D });
  }, E = ({ previewRightWidth: D }) => {
    t("mouseupResizePreviewRight", { previewRightWidth: D });
  }, P = () => {
    I({
      previewRef: a.value
    });
  }, M = new ResizeObserver(
    El((D) => {
      const W = D[0].contentRect;
      v !== W.width && (v = W.width, P());
    }, 300)
  ), k = () => {
    M.observe(r.value);
  }, F = () => {
    M.unobserve(r.value);
  };
  return Bt(() => {
    s(), F();
  }), {
    addEventListenerWindowResize: k,
    mousedownResizePreviewRight: S,
    mousemoveResizePreviewRight: w,
    mouseupResizePreviewRight: E,
    removeEventListenerWindowResize: F,
    togglePreviewResize: C
  };
}
function X7(e, t, {
  aTableRef: n = R({}),
  isMobile: r = R(void 0),
  rowsLocalAll: a = d(() => []),
  tableGrandparentRef: s = R({})
}) {
  const {
    isDropdownGlobalOpen: o
  } = QS(), {
    addEventListenerWindowResize: u,
    mousedownResizePreviewRight: f,
    mousemoveResizePreviewRight: _,
    mouseupResizePreviewRight: m,
    removeEventListenerWindowResize: b,
    togglePreviewResize: v
  } = K7(e, t, {
    aTableRef: n,
    tableGrandparentRef: s
  }), g = p(e, "keyId"), S = p(e, "preview"), A = p(e, "id"), w = t.emit, T = R({}), I = R(void 0), C = R(void 0), E = d(() => !!S.value), P = ({ rowIndex: we }) => {
    window.isScrollDisabled || setTimeout(() => {
      const oe = `#${A.value}_${we}`;
      ka({ selector: oe });
    });
  }, M = () => {
    window.isScrollDisabled || setTimeout(() => {
      const we = `#${BA({ tableId: A.value })}`;
      ka({ selector: we });
    });
  }, k = d(() => S.value === "right" || r.value), F = d(() => !ae(I.value)), D = () => {
    P({
      rowIndex: I.value
    }), w("togglePreview", {
      row: a.value[I.value],
      rowIndex: I.value,
      typeToggle: "close"
    }), C.value = I.value, I.value = void 0, b();
  }, W = () => {
    w("togglePreview", {
      row: a.value[I.value],
      rowIndex: I.value,
      typeToggle: "close"
    }), C.value = void 0, I.value = void 0, b();
  }, $ = d(() => S.value === "down"), z = ({ rowIndex: we, row: oe }) => {
    const xe = Gu({ row: oe, rowIndex: we, keyId: g.value });
    delete T.value[xe];
  }, ne = () => {
    T.value = {};
  }, Q = () => {
    W(), ne();
  }, ce = ({ rowIndex: we, row: oe } = {}) => {
    k.value ? D() : $.value && z({ rowIndex: we, row: oe });
  }, he = ({ rowIndex: we }) => {
    !r.value && qe(I.value) && u(), w("togglePreview", {
      row: a.value[we],
      rowIndex: we,
      typeToggle: "open"
    }), I.value = we, C.value = void 0, M();
  }, ve = ({ rowIndex: we }) => {
    I.value === we ? D() : he({ rowIndex: we });
  }, me = ({ rowIndex: we, row: oe }) => {
    const xe = Gu({ row: oe, rowIndex: we, keyId: g.value });
    T.value[xe] ? delete T.value[xe] : T.value[xe] = !0;
  };
  return {
    closePreview: ce,
    closePreviewAll: Q,
    hasPreview: E,
    isPreviewRightOpen: F,
    mousedownResizePreviewRight: f,
    mousemoveResizePreviewRight: _,
    mouseupResizePreviewRight: m,
    onTogglePreview: ({ row: we, rowIndex: oe }) => {
      if (!o.value) {
        if (k.value) {
          ve({ rowIndex: oe });
          return;
        }
        $.value && me({ row: we, rowIndex: oe });
      }
    },
    previewDownRowIds: T,
    previewRightRowIndex: I,
    previewRightRowIndexLast: C,
    togglePreviewResize: v
  };
}
function Z7(e, {
  dataSorted: t = d(() => []),
  limit: n = R(0),
  offset: r = R(0),
  setEmptySelectedRowsIndexes: a = () => {
  },
  usePaginationLocal: s = d(() => !1)
}) {
  const o = p(e, "clearSelectedRowsOnDataChange"), u = p(e, "pagination"), f = p(e, "rowsCountRenderPerTick"), _ = R([]), m = R([]);
  let b = !0, v = 0, g;
  const S = d(() => {
    if (n.value && !u.value.isOutside && s.value) {
      const F = r.value, D = F + n.value;
      return t.value.slice(F, D);
    }
    return t.value;
  }), A = d(() => S.value), w = d(() => A.value.length), T = d(() => !!w.value), I = () => {
    const F = v * f.value, D = F + f.value;
    Yn(S.value.slice(F, D), (W) => m.value.push(W)), v++;
  }, C = () => {
    g = setInterval(() => {
      v * f.value >= S.value.length ? clearInterval(g) : I();
    });
  }, E = () => {
    clearInterval(g);
  }, P = ({ row: F, rowIndex: D }) => {
    D > m.value.length - 1 || (m.value[D] = F);
  }, M = ({ row: F }) => {
    m.value.unshift(F);
  }, k = ({ index: F }) => {
    m.value.splice(F, 1);
  };
  return st(S, (F) => {
    Gy(F, _.value) || (_.value = [...F], !b && o.value && a(), b = !1, m.value = [], v = 0, E(), f.value > 0 ? (I(), C()) : m.value = S.value);
  }, {
    immediate: !0,
    deep: !0
  }), {
    addRow: M,
    deleteRow: k,
    hasRows: T,
    rowsLocal: m,
    rowsLocalAll: A,
    rowsLocalLength: w,
    stopRenderRows: E,
    updateRow: P
  };
}
function J7(e, { emit: t }, {
  columnActionsWidth: n = d(() => 0),
  columnActionsWidthMin: r = d(() => 0),
  columnsOrdered: a = d(() => []),
  columnsScrollInvisible: s = R([]),
  indexFirstScrollInvisibleColumn: o = R(void 0),
  isMobile: u = R(!1),
  isMultipleActionsActive: f = R(void 0),
  modelColumnsVisibleLocal: _ = R({}),
  modelIsTableWithoutScroll: m = R(!1),
  modelIsTableWithoutScrollComputed: b = d(() => !1)
}) {
  const v = p(e, "columnWidthDefault"), g = p(e, "isActionColumnVisible"), S = p(e, "isSimpleTable"), A = R(void 0), w = R(0), T = R(void 0);
  let I = !1;
  const C = 20, E = d(() => g.value ? r.value : 0), P = d(() => {
    const Q = f.value ? r.value : 0, ce = S.value ? 0 : C;
    return Q + ce;
  }), M = ({
    sumGrows: Q = 0,
    freeSpaceWidth: ce = 0
  }) => {
    Q > 0 ? w.value = ce / Q : w.value = 0;
  }, k = () => {
    if (ae(o.value) || a.value.length < o.value)
      s.value = [];
    else {
      const Q = [];
      for (let ce = o.value; ce < a.value.length; ce++) {
        const he = a.value[ce];
        xl({
          column: he,
          modelColumnsVisibleLocal: _.value
        }) && Q.push(Se(he));
      }
      s.value = Q;
    }
  }, F = () => {
    s.value = [], w.value = 0, o.value = 1e3, T.value = 0;
  }, D = () => {
    if (u.value || T.value === 0) {
      F();
      return;
    }
    if (qe(T.value))
      return;
    const Q = T.value - P.value - E.value, ce = T.value - P.value - n.value;
    let he = 0, ve = 0, me = 0, Ne = !1;
    if (Y(a.value, (xe) => {
      if (!xl({
        column: xe,
        modelColumnsVisibleLocal: _.value
      })) {
        ve++;
        return;
      }
      const re = +xe.width || v.value;
      if (he + re > Q)
        return Ne = !0, !1;
      he += re, ve++, me += ae(xe.grow) ? 1 : xe.grow;
    }), Ne && he > ce)
      for (let xe = ve - 1; xe >= 0; xe--) {
        ve--;
        const re = a.value[ve];
        if (!xl({
          column: re,
          modelColumnsVisibleLocal: _.value
        }))
          continue;
        const Re = +re.width || v.value;
        if (he -= Re, me -= ae(re.grow) ? 1 : re.grow, he <= ce)
          break;
      }
    let we = 0;
    const oe = Ne ? ce : Q;
    (b.value || ve === a.value.length) && (we = oe - he), o.value = ve, M({
      sumGrows: me,
      freeSpaceWidth: we
    }), k();
  }, W = ({ entries: Q, forceAdjust: ce }) => {
    const he = Q[0].contentRect;
    (ce || T.value > he.width + C || T.value < he.width - C) && (I || (I = !0, T.value = he.width, D(), I = !1));
  }, $ = new ResizeObserver(
    El((Q) => {
      qe(T.value) ? W({ entries: Q, forceAdjust: !0 }) : W({ entries: Q });
    }, 300)
  ), z = (Q) => {
    Q ? ($.unobserve(A.value), F()) : ($.observe(A.value), m.value && D());
  }, ne = (Q) => {
    m.value = Q, t("updateModelIsTableWithoutScroll", Q), m.value && D();
  };
  return ha(() => {
    u.value || $.observe(A.value);
  }), Bt(() => {
    $.unobserve(A.value);
  }), st(a, () => {
    D();
  }), {
    aTableRef: A,
    changeModelIsTableWithoutScroll: ne,
    checkVisibleColumns: D,
    columnsVisibleAdditionalSpaceForOneGrow: w,
    onWatchMobileScrollControl: z
  };
}
function Q7(e) {
  const t = p(e, "hasMobile"), n = p(e, "isActionColumnVisible"), r = p(e, "isActionColumnVisible"), a = p(e, "isColumnsDnd"), s = p(e, "isSimpleTable"), o = p(e, "modelIsTableWithoutScrollStart"), u = p(e, "rowActions"), f = R(o.value), {
    isMobileWidth: _
  } = En(), m = d(() => s.value ? u.value && !!u.value.length && n.value : r.value), b = d(() => !!(r.value && !s.value)), v = d(() => !!(a.value && !s.value)), g = d(() => t.value ? !!_.value : !1), S = d(() => s.value ? !1 : f.value);
  return {
    isActionColumnVisibleLocal: m,
    isActionIconVisibleLocal: b,
    isColumnsDndLocal: v,
    isMobile: g,
    modelIsTableWithoutScroll: f,
    modelIsTableWithoutScrollComputed: S
  };
}
function eU(e, {
  viewCurrent: t = d(() => ({}))
}) {
  const n = p(e, "data"), r = p(e, "isSortingOutside"), a = p(e, "modelSort"), s = p(e, "useAdditionalSorting"), o = R([]), u = d(() => s.value ? t.value ? t.value.useAdditionalSorting || !1 : !0 : !1), f = () => {
    yt(a.value) ? o.value = [a.value] : Ae(a.value) && (o.value = Se(a.value));
  }, _ = d(() => {
    const b = {
      models: [],
      directions: []
    };
    return o.value.length && Y(o.value, (v) => {
      let g = "asc", S = v;
      Ih(v, "-") && (g = "desc", S = v.slice(1)), b.models.push(S), b.directions.push(g);
    }), b;
  }), m = d(() => o.value.length && !r.value ? Th(n.value || [], _.value.models, _.value.directions) : n.value || []);
  return st(a, () => {
    f();
  }), {
    dataSorted: m,
    initModelSort: f,
    modelSortLocal: o,
    useAdditionalSortingLocal: u
  };
}
function tU(e, { emit: t }, {
  modelSortLocal: n = R([]),
  closePreviewAll: r = () => {
  }
}) {
  const a = p(e, "id"), s = p(e, "isSortingMultiColumn"), o = p(e, "sortingMultiColumnKey"), u = d(() => `${o.value}Key`), f = (v) => s.value && v[u.value], _ = ({ sortId: v }) => {
    const g = n.value.indexOf(v);
    if (g !== -1) {
      n.value.splice(g, 1, `-${v}`);
      return;
    }
    const S = n.value.indexOf(`-${v}`);
    if (S !== -1) {
      n.value.splice(S, 1);
      return;
    }
    n.value.push(v);
  }, m = ({ sortId: v }) => {
    if (n.value.indexOf(v) !== -1) {
      n.value = [`-${v}`];
      return;
    }
    if (n.value.indexOf(`-${v}`) !== -1) {
      n.value = [];
      return;
    }
    n.value = [v];
  };
  return {
    changeModelSort: ({ sortId: v, $event: g, modelAll: S }) => {
      S ? n.value = S : f(g) ? _({ sortId: v }) : m({ sortId: v }), t("changeSorting", {
        modelSort: Se(n.value)
      }), Ht.$emit("changeTableSorting", {
        modelSort: Se(n.value),
        tableId: a.value
      }), r();
    }
  };
}
function nU(e, {
  isMobile: t = R(void 0),
  modelIsTableWithoutScrollComputed: n = d(() => {
  })
}) {
  const r = p(e, "rowActionsSticky");
  return {
    isRowActionsStickyLocal: d(() => !!(!t.value && r.value && !n.value))
  };
}
function rU(e, {
  countNotHiddenColumns: t = d(() => -1),
  isMobile: n = R(!1)
}) {
  const r = p(e, "id"), a = p(e, "isLabelVisible"), s = d(() => {
    const f = {};
    return n.value || (f.role = "table", f["aria-colcount"] = t.value), f;
  }), o = d(() => n.value ? "list" : "rowgroup"), u = d(() => {
    if (a.value)
      return MA({ tableId: r.value });
  });
  return {
    tableChildRole: o,
    tableLabelId: u,
    tableRoleAttributes: s
  };
}
function aU(e, { emit: t }, {
  modelColumnsVisibleLocal: n = R({}),
  checkVisibleColumns: r = () => {
  }
}) {
  return {
    changeModelColumnsVisible: (s) => {
      n.value = s, t("update:modelColumnsVisible", Se(n.value)), r();
    }
  };
}
function iU(e) {
  const t = p(e, "texts");
  return {
    emptyText: d(() => qe(t.value.empty) ? "_A_TABLE_EMPTY_TEXT_" : t.value.empty)
  };
}
function sU() {
  const e = R([]), t = R(void 0), n = R(void 0), r = R({}), a = R(void 0), s = R(void 0);
  return {
    columnsScrollInvisible: e,
    indexFirstScrollInvisibleColumn: t,
    isMultipleActionsActive: n,
    modelColumnsVisibleLocal: r,
    tableGrandparentRef: a,
    tableRef: s
  };
}
function lU(e, { emit: t }, {
  closePreviewAll: n = () => {
  }
}) {
  const r = p(e, "views"), a = p(e, "modelFilters"), s = p(e, "modelView"), o = d(() => ui(r.value, "id")), u = d(() => o.value[s.value]), f = d(() => r.value.length > 1), _ = () => {
    if (f.value) {
      const v = Ah(r.value, ["active", !0]);
      let g = r.value[0].id;
      v && (g = v.id), t("updateView", {
        _modelView: g,
        view: o.value[g],
        modelFilters: a.value,
        init: !0
      });
    }
  }, m = (v) => {
    n(), t("updateView", {
      _modelView: v,
      view: o.value[v],
      modelFilters: a.value
    });
  }, b = d(() => !u.value || u.value.type === "table");
  return {
    hasViews: f,
    initViewCurrent: _,
    isViewTableVisible: b,
    updateViewCurrent: m,
    viewCurrent: u
  };
}
const zU = {
  name: "ATable",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    clearSelectedRowsOnDataChange: {
      type: Boolean,
      required: !1,
      default: !0
    },
    columnActionsOnePlusDropdownOptions: {
      type: Object,
      required: !1,
      default: () => ({
        actionsClasses: ["a_btn a_btn_primary a_text_truncate"],
        btnGroupClass: "a_btn_group a_btn_group_table",
        hasDividerBeforeDropdown: !1,
        indexFirstDropdownAction: 1,
        indexFirstDropdownActionMobile: 1,
        minDropdownActions: 1
      })
    },
    columnActionsView: {
      type: String,
      required: !1,
      default: "dropdown",
      validator: (e) => ["onePlusDropdown", "onePlusDropdownEmptyPlace", "dropdown"].indexOf(e) !== -1
    },
    columnActionsWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    columnActionsWidthDefaults: {
      type: Object,
      required: !1,
      default: () => ({
        default: 170,
        min: 50,
        onePlusDropdown: 320,
        onePlusDropdownMin: 200,
        btnGroupMaxWidth: 180
      })
    },
    columnActionsWidthMin: {
      type: Number,
      required: !1,
      default: void 0
    },
    columns: {
      type: Array,
      required: !0
    },
    columnsDefaultValue: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    columnWidthDefault: {
      type: Number,
      required: !1,
      default: 250
    },
    countAllRows: {
      type: Number,
      required: !1,
      default: void 0
    },
    countVisibleMobileColumns: {
      type: Number,
      required: !1,
      default: 4,
      validator: (e) => e > 0
    },
    borderType: {
      type: String,
      required: !1,
      default: () => _s.value.propsDefault.borderType,
      validator: (e) => ["bordered", "innerBordered"].indexOf(e) !== -1
    },
    data: {
      type: [Array, Object, Promise],
      required: !1
    },
    disabledActions: {
      type: Boolean,
      required: !1
    },
    disabledMultipleActions: {
      type: Boolean,
      required: !1
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    disabledViews: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    hasScrollClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => mt("a_table")
    },
    isActionColumnVisible: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isActionIconVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isColumnsDnd: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLabelVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isLoadingMultipleActions: {
      type: Boolean,
      required: !1
    },
    isLoadingOptions: {
      type: Boolean,
      required: !1
    },
    isLoadingTable: {
      type: Boolean,
      required: !1
    },
    isQuickSearch: {
      type: Boolean,
      required: !1
    },
    isSimpleTable: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSortingOutside: {
      type: Boolean,
      required: !1
    },
    isTree: {
      type: Boolean,
      required: !1
    },
    isTreeCollapsible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTreeOpened: {
      type: Boolean,
      required: !1
    },
    keyCountAllRowsInData: {
      type: String,
      required: !1,
      default: "count"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyChildren: {
      type: String,
      required: !1,
      default: "children"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !1,
      default: "h2"
    },
    modelColumnsOrdering: {
      type: Array,
      required: !1,
      default: () => []
    },
    modelColumnsVisible: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelIsTableWithoutScrollStart: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelQuickSearch: {
      type: String,
      required: !1,
      default: ""
    },
    modelSort: {
      type: [String, Array],
      required: !1,
      default: () => []
    },
    modelView: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    multipleActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    offsetStart: {
      type: Number,
      required: !1,
      default: 0
    },
    pagination: {
      type: Object,
      required: !1,
      default: () => ({
        use: !1,
        maxPages: 5,
        limitsPerPage: [],
        limitStart: 10,
        disabled: !1,
        isOutside: !1,
        outside: !1,
        modes: {
          // perPage: inline / select
          // pagination: normal / short / loadMore
          desktop: {
            pagination: {
              mode: "normal",
              position: 0
            },
            perPage: {
              mode: "inline",
              position: 1
            }
          },
          mobile: {
            pagination: {
              mode: "loadMore"
            }
          }
        }
      })
    },
    preview: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["right", "down"].indexOf(e) !== -1
    },
    previewBoxWidth: {
      type: Number,
      required: !1,
      default: 300
    },
    previewStyles: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowActionsSticky: {
      type: Boolean,
      required: !1,
      default: !0
    },
    rowClass: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    rowsCountRenderPerTick: {
      type: Number,
      required: !1,
      default: 25,
      validator: (e) => hi(e) && e >= 0
    },
    rowsFooter: {
      type: Array,
      required: !1,
      default: () => []
    },
    showCount: {
      type: Boolean,
      required: !1,
      default: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1,
      default: !1
    },
    sortingMultiColumnKey: {
      type: String,
      required: !1,
      default: "shift",
      validator: (e) => ["shift", "ctrl", "alt"].indexOf(e) !== -1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1,
      default: "a_badge"
    },
    tableActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    tableActionsIndexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: -1
    },
    tableActionsIndexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: 0
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        empty: "_A_TABLE_EMPTY_TEXT_"
      })
    },
    useAdditionalSorting: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useViewSlot: {
      type: Boolean,
      required: !1
    },
    valuesForColumnDefault: {
      type: Array,
      required: !1,
      default: () => [null, void 0, ""]
    },
    views: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  emits: [
    "changeColumnsOrdering",
    "changeColumnsVisible",
    "changeLimit",
    "changeOffset",
    "changeSorting",
    "mouseupResizePreviewRight",
    "initTable",
    "togglePreview",
    "toggleMultipleActions",
    "update:modelColumnsOrder",
    "update:modelColumnsVisible",
    "update:modelQuickSearch",
    "updateModelIsTableWithoutScroll",
    "updateView"
  ],
  provide() {
    return {
      changeModelColumnsVisible: this.changeModelColumnsVisible,
      columnActionsOnePlusDropdownOptions: d(() => this.columnActionsOnePlusDropdownOptions),
      columns: d(() => this.columns),
      columnsDefaultValue: d(() => this.columnsDefaultValue),
      columnWidthDefault: d(() => this.columnWidthDefault),
      isLoadingOptions: d(() => this.isLoadingOptions),
      isLoadingTable: d(() => this.isLoadingTable),
      keyId: d(() => this.keyId),
      rowActions: d(() => this.rowActions),
      tableId: d(() => this.id),
      valuesForColumnDefault: d(() => this.valuesForColumnDefault)
    };
  },
  setup(e, t) {
    const {
      isActionColumnVisibleLocal: n,
      isActionIconVisibleLocal: r,
      isColumnsDndLocal: a,
      isMobile: s,
      modelIsTableWithoutScroll: o,
      modelIsTableWithoutScrollComputed: u
    } = Q7(e), {
      countAllRowsLocal: f,
      totalRowsCount: _
    } = W7(e), {
      columnsScrollInvisible: m,
      indexFirstScrollInvisibleColumn: b,
      isMultipleActionsActive: v,
      modelColumnsVisibleLocal: g,
      tableGrandparentRef: S,
      tableRef: A
    } = sU(), {
      scrollToTable: w,
      setFocusToTable: T
    } = U7({
      tableRef: A
    }), {
      hasViews: I,
      initViewCurrent: C,
      isViewTableVisible: E,
      updateViewCurrent: P,
      viewCurrent: M
    } = lU(e, t, {
      closePreviewAll: Jr
    }), {
      dataSorted: k,
      initModelSort: F,
      modelSortLocal: D,
      useAdditionalSortingLocal: W
    } = eU(e, {
      viewCurrent: M
    }), {
      columnsOrderedFromSimpleTable: $,
      renderedGroupedColumns: z
    } = H7(e, {
      modelSort: D
    }), {
      columnIdsGroupByLocked: ne,
      columnsFilteredForRender: Q,
      columnsFilteredForRenderIndexesMapping: ce,
      columnsOrdered: he,
      countNotHiddenColumns: ve
    } = V7(e, {
      columnsScrollInvisible: m,
      indexFirstScrollInvisibleColumn: b,
      modelColumnsVisibleLocal: g,
      modelIsTableWithoutScrollComputed: u,
      columnsOrderedFromSimpleTable: $
    }), {
      changeLimit: me,
      changeOffset: Ne,
      limit: we,
      offset: oe,
      usePaginationLocal: xe
    } = G7(e, t, {
      closePreviewAll: Jr,
      scrollToTable: w,
      setFocusToTable: T,
      viewCurrent: M
    }), {
      addRow: re,
      deleteRow: Re,
      hasRows: Z,
      rowsLocal: U,
      rowsLocalAll: se,
      rowsLocalLength: pe,
      stopRenderRows: Ie,
      updateRow: He
    } = Z7(e, {
      dataSorted: k,
      limit: we,
      offset: oe,
      setEmptySelectedRowsIndexes: mi,
      usePaginationLocal: xe
    }), {
      columnActionsBtnGroupMaxWidthStyle: Ke,
      columnActionsWidthLocal: Je,
      columnActionsWidthMinLocal: ut,
      isColumnActionWide: Ee
    } = N7(e, {
      isMobile: s,
      rowsLocal: U
    }), {
      aTableRef: Qe,
      changeModelIsTableWithoutScroll: At,
      checkVisibleColumns: Fe,
      columnsVisibleAdditionalSpaceForOneGrow: ft,
      onWatchMobileScrollControl: Dt
    } = J7(e, t, {
      columnActionsWidth: Je,
      columnActionsWidthMin: ut,
      columnsOrdered: he,
      columnsScrollInvisible: m,
      indexFirstScrollInvisibleColumn: b,
      isMobile: s,
      isMultipleActionsActive: v,
      modelColumnsVisibleLocal: g,
      modelIsTableWithoutScroll: o,
      modelIsTableWithoutScrollComputed: u
    }), {
      changeColumnsOrdering: $t,
      checkColumnsOrdering: qt
    } = $7(e, t, {
      checkVisibleColumns: Fe,
      columnIdsGroupByLocked: ne,
      columnsFilteredForRenderIndexesMapping: ce
    }), {
      isRowActionsStickyLocal: Cr
    } = nU(e, {
      isMobile: s,
      modelIsTableWithoutScrollComputed: u
    }), {
      areAllRowsSelected: nr,
      areAllVisibleRowsSelected: Ir,
      areSomeRowsSelected: cn,
      closeMultipleActionsActive: rr,
      currentMultipleActions: ar,
      hasMultipleActions: Nn,
      selectedRows: Yr,
      selectedRowsIndexes: Vn,
      setEmptySelectedRowsIndexes: zr,
      setSelectedRowsIndexes: ir,
      toggleBtnAllRows: sr,
      toggleMultipleActionsActive: ln
    } = z7(e, t, {
      checkVisibleColumns: Fe,
      isMultipleActionsActive: v,
      rowsLocalAll: se,
      rowsLocalLength: pe
    }), {
      changeModelColumnsVisible: On
    } = aU(e, t, {
      modelColumnsVisibleLocal: g,
      checkVisibleColumns: Fe
    }), {
      closePreview: Lr,
      closePreviewAll: Er,
      hasPreview: pi,
      isPreviewRightOpen: Kr,
      onTogglePreview: Or,
      mousedownResizePreviewRight: Ga,
      mousemoveResizePreviewRight: Xr,
      mouseupResizePreviewRight: Vs,
      previewDownRowIds: Hs,
      previewRightRowIndex: kt,
      previewRightRowIndexLast: Zr,
      togglePreviewResize: Yi
    } = X7(e, t, {
      aTableRef: Qe,
      isMobile: s,
      rowsLocalAll: se,
      tableGrandparentRef: S
    }), {
      tableChildRole: zi,
      tableLabelId: _i,
      tableRoleAttributes: Ki
    } = rU(e, {
      countNotHiddenColumns: ve,
      isMobile: s
    }), {
      allVisibleMobileColumns: Ya
    } = Y7({
      columnsOrdered: he,
      isMobile: s,
      modelColumnsVisibleLocal: g
    }), {
      changeModelSort: $s
    } = tU(e, t, {
      modelSortLocal: D,
      closePreviewAll: Jr
    }), {
      initTable: fn
    } = j7(e, t, {
      checkColumnsOrdering: qt,
      checkVisibleColumns: Fe,
      modelColumnsVisibleLocal: g
    }), {
      emptyText: za
    } = iU(e);
    function Jr() {
      Er();
    }
    function mi() {
      zr();
    }
    return st(s, (ba) => {
      Dt(ba), Jr();
    }), st(Ee, (ba, Xi) => {
      ba !== Xi && Fe();
    }), Ze("changeModelIsTableWithoutScroll", At), Ze("changeModelSort", $s), Ze("columnsOrdered", he), Ze("columnsFilteredForRender", Q), Ze("columnsScrollInvisible", m), Ze("columnsVisibleAdditionalSpaceForOneGrow", ft), Ze("columnActionsWidthLocal", Je), Ze("columnActionsWidthMinLocal", ut), Ze("currentMultipleActions", ar), Ze("hasPreview", pi), Ze("indexFirstScrollInvisibleColumn", b), Ze("isActionColumnVisible", n), Ze("isActionIconVisible", r), Ze("isColumnsDnd", a), Ze("isMobile", s), Ze("isMultipleActionsActive", v), Ze("modelIsTableWithoutScroll", u), Ze("onTogglePreview", Or), Ze("previewRightRowIndex", kt), Ze("previewRightRowIndexLast", Zr), Ze("rowsLocalAll", se), Ze("modelColumnsVisibleLocal", g), Ze("changeColumnsOrdering", $t), C(), fn(), F(), {
      addRow: re,
      allVisibleMobileColumns: Ya,
      areAllRowsSelected: nr,
      areAllVisibleRowsSelected: Ir,
      areSomeRowsSelected: cn,
      aTableRef: Qe,
      changeLimit: me,
      changeModelColumnsVisible: On,
      changeOffset: Ne,
      checkVisibleColumns: Fe,
      closeMultipleActionsActive: rr,
      closePreview: Lr,
      closePreviewAll: Jr,
      columnActionsBtnGroupMaxWidthStyle: Ke,
      columnsFilteredForRender: Q,
      columnsOrdered: he,
      countAllRowsLocal: f,
      deleteRow: Re,
      emptyText: za,
      hasMultipleActions: Nn,
      hasRows: Z,
      hasViews: I,
      isMobile: s,
      isMultipleActionsActive: v,
      isPreviewRightOpen: Kr,
      isRowActionsStickyLocal: Cr,
      isViewTableVisible: E,
      limit: we,
      modelColumnsVisibleLocal: g,
      modelIsTableWithoutScrollComputed: u,
      modelSortLocal: D,
      mousedownResizePreviewRight: Ga,
      mousemoveResizePreviewRight: Xr,
      mouseupResizePreviewRight: Vs,
      offset: oe,
      onTogglePreview: Or,
      previewDownRowIds: Hs,
      previewRightRowIndex: kt,
      renderedGroupedColumns: z,
      rowsLocal: U,
      rowsLocalAll: se,
      rowsLocalLength: pe,
      selectedRows: Yr,
      selectedRowsIndexes: Vn,
      setEmptySelectedRowsIndexes: mi,
      setSelectedRowsIndexes: ir,
      stopRenderRows: Ie,
      tableChildRole: zi,
      tableGrandparentRef: S,
      tableLabelId: _i,
      tableRef: A,
      tableRoleAttributes: Ki,
      toggleBtnAllRows: sr,
      toggleMultipleActionsActive: ln,
      togglePreviewResize: Yi,
      totalRowsCount: _,
      updateRow: He,
      updateViewCurrent: P,
      useAdditionalSortingLocal: W,
      usePaginationLocal: xe,
      viewCurrent: M
    };
  },
  data() {
    return {
      resolved: void 0,
      error: void 0
    };
  },
  computed: {
    hasRowsFooter() {
      return this.rowsFooter.length > 0;
    }
  },
  methods: {
    updateModelQuickSearch(e) {
      this.$emit("update:modelQuickSearch", e);
    }
  },
  render() {
    return c("div", {
      ref: "tableGrandparentRef",
      class: ["a_table__grandparent", {
        a_table_mobile: this.isMobile,
        a_table__grandparent_without_scroll: !this.hasScrollClass
      }]
    }, [
      this.$slots.tablePrepend && this.$slots.tablePrepend({
        id: this.id
      }),
      c("div", {
        ref: "aTableRef",
        class: ["a_table__parent", {
          a_table__parent_scrollable: this.hasScrollClass && !this.modelIsTableWithoutScrollComputed
        }]
      }, [
        c(x7, {
          additionalSortingColumns: this.additionalSortingColumns,
          areAllRowsSelected: this.areAllRowsSelected,
          areSomeRowsSelected: this.areSomeRowsSelected,
          closeMultipleActionsActive: this.closeMultipleActionsActive,
          countAllRows: this.countAllRowsLocal,
          disabledActions: this.disabledActions,
          disabledMultipleActions: this.disabledMultipleActions,
          disabledSort: this.disabledSort,
          disabledViews: this.disabledViews,
          extra: this.extra,
          hasViews: this.hasViews,
          isLabelVisible: this.isLabelVisible,
          isLoadingMultipleActions: this.isLoadingMultipleActions,
          isQuickSearch: this.isQuickSearch,
          isSortingMultiColumn: this.isSortingMultiColumn,
          label: this.label,
          labelClass: this.labelClass,
          labelTag: this.labelTag,
          modelQuickSearch: this.modelQuickSearch,
          modelSort: this.modelSortLocal,
          modelView: this.modelView,
          multipleActions: this.multipleActions,
          selectedRows: this.selectedRows,
          showCount: this.showCount,
          tableActions: this.tableActions,
          tableActionsIndexFirstDropdownAction: this.tableActionsIndexFirstDropdownAction,
          tableActionsIndexFirstDropdownActionMobile: this.tableActionsIndexFirstDropdownActionMobile,
          useAdditionalSorting: this.useAdditionalSortingLocal,
          useViewSlot: this.useViewSlot,
          viewCurrent: this.viewCurrent,
          views: this.views,
          onUpdateViewCurrent: this.updateViewCurrent,
          onUpdateModelQuickSearch: this.updateModelQuickSearch,
          onToggleMultipleActionsActive: this.toggleMultipleActionsActive,
          onToggleBtnAllRows: this.toggleBtnAllRows
        }, this.$slots),
        this.$slots.topPanelAppend ? this.$slots.topPanelAppend() : "",
        this.isViewTableVisible && c("div", {
          ref: "tableRef",
          "aria-labelledby": this.isLabelVisible ? this.tableLabelId : void 0,
          class: [
            "a_table",
            {
              a_table_simple: this.isSimpleTable,
              a_table_bordered: this.borderType === "bordered",
              a_table_inner_bordered: this.borderType === "innerBordered"
            }
          ],
          ...this.tableRoleAttributes
        }, [
          this.isSimpleTable ? c(i7, {
            areAllRowsSelected: this.areAllRowsSelected,
            areAllVisibleRowsSelected: this.areAllVisibleRowsSelected,
            areSomeRowsSelected: this.areSomeRowsSelected,
            disabledOptions: this.disabledOptions,
            disabledSort: this.disabledSort,
            hasMultipleActions: this.hasMultipleActions,
            isRowActionsStickyLocal: this.isRowActionsStickyLocal,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSortLocal,
            rowsLocalLength: this.rowsLocalLength,
            showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
            sortingSequenceNumberClass: this.sortingSequenceNumberClass,
            onSetSelectedRowsIndexes: this.setSelectedRowsIndexes,
            columnsForRender: this.renderedGroupedColumns
          }) : c(a7, {
            areAllRowsSelected: this.areAllRowsSelected,
            areAllVisibleRowsSelected: this.areAllVisibleRowsSelected,
            areSomeRowsSelected: this.areSomeRowsSelected,
            disabledOptions: this.disabledOptions,
            disabledSort: this.disabledSort,
            hasMultipleActions: this.hasMultipleActions,
            isRowActionsStickyLocal: this.isRowActionsStickyLocal,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSortLocal,
            rowsLocalLength: this.rowsLocalLength,
            showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
            sortingSequenceNumberClass: this.sortingSequenceNumberClass,
            onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
          }),
          c("div", {
            class: "a_table__loading"
          }, [
            c(fA, {
              isLoading: this.isLoadingTable
            }, () => [
              c("div", {
                class: "a_table__body",
                role: this.tableChildRole
              }, {
                default: () => this.rowsLocal.map((e, t) => {
                  const n = Gu({ row: e, rowIndex: t, keyId: this.keyId });
                  return c(jv, {
                    key: n,
                    allVisibleMobileColumns: this.allVisibleMobileColumns,
                    areAllRowsSelected: this.areAllRowsSelected,
                    columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
                    columnActionsView: this.columnActionsView,
                    countVisibleMobileColumns: this.countVisibleMobileColumns,
                    disabledPreview: this.disabledPreview,
                    disabledPreviewRowCallback: this.disabledPreviewRowCallback,
                    disabledRowActions: this.disabledRowActions,
                    isFooter: !1,
                    isPreviewDownOpen: this.previewDownRowIds[n],
                    isRowActionsStickyLocal: this.isRowActionsStickyLocal,
                    isTree: this.isTree,
                    isTreeCollapsible: this.isTreeCollapsible,
                    isTreeOpened: this.isTreeOpened,
                    keyChildren: this.keyChildren,
                    keyId: this.keyId,
                    level: 1,
                    row: e,
                    rowActionsClass: this.rowActionsClass,
                    rowClass: this.rowClass,
                    rowIndex: t,
                    rowsLength: this.rowsLocal.length,
                    selectedRowsIndexes: this.selectedRowsIndexes,
                    onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
                  }, {
                    get: (r) => [
                      c(Qf, {
                        data: r.row,
                        keyLabel: r.column.keyLabel,
                        filter: r.column.filter,
                        filterParameters: r.column.filterParameters,
                        defaultValue: r.column.defaultValue,
                        tag: r.column.filterTag || "div"
                      })
                    ],
                    ...this.$slots
                  });
                })
              }),
              this.isViewTableVisible && !this.hasRows && c(be, {
                class: "a_table__empty_text",
                text: this.emptyText
              }),
              this.hasRowsFooter && c("div", {
                class: "a_table__footer",
                role: this.tableChildRole
              }, this.rowsFooter.map((e, t) => {
                const n = Gu({ row: e, rowIndex: t, keyId: this.keyId });
                return c(jv, {
                  key: n,
                  allVisibleMobileColumns: this.allVisibleMobileColumns,
                  areAllRowsSelected: this.areAllRowsSelected,
                  columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
                  columnActionsView: this.columnActionsView,
                  countVisibleMobileColumns: this.countVisibleMobileColumns,
                  disabledPreview: this.disabledPreview,
                  disabledPreviewRowCallback: this.disabledPreviewRowCallback,
                  disabledRowActions: this.disabledRowActions,
                  isFooter: !0,
                  isRowActionsStickyLocal: this.isRowActionsStickyLocal,
                  isTree: this.isTree,
                  isTreeCollapsible: this.isTreeCollapsible,
                  isTreeOpened: this.isTreeOpened,
                  keyChildren: this.keyChildren,
                  keyId: this.keyId,
                  level: 1,
                  row: e,
                  rowActionsClass: this.rowActionsClass,
                  rowClass: this.rowClass,
                  rowIndex: t,
                  rowsLength: this.rowsFooter.length,
                  selectedRowsIndexes: this.selectedRowsIndexes,
                  onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
                }, {
                  get: (r) => [
                    c(Qf, {
                      data: r.row,
                      keyLabel: r.column.footerPath,
                      filter: r.column.footerFilter,
                      filterParameters: r.column.footerFilterParameters,
                      defaultValue: r.column.footerDefaultValue
                    })
                  ],
                  ...this.$slots
                });
              }))
            ])
          ])
        ]),
        !this.isViewTableVisible && this.viewCurrent && this.$slots[this.viewCurrent.type] && this.$slots[this.viewCurrent.type]({
          isLoading: this.isLoadingTable,
          rows: this.rowsLocalAll
        }),
        this.usePaginationLocal && c(o8, {
          countAllRows: this.countAllRowsLocal,
          disabled: this.pagination.disabled,
          hasRows: this.hasRows,
          limit: this.limit,
          limitsPerPage: this.pagination.limitsPerPage,
          maxPages: this.pagination.maxPages,
          offset: this.offset,
          rowsLength: this.rowsLocalLength,
          totalRowsCount: this.totalRowsCount,
          "onUpdate:limit": this.changeLimit,
          "onUpdate:offset": this.changeOffset
        }),
        this.isPreviewRightOpen && c(f7, {
          countAllRows: this.countAllRowsLocal,
          isMobile: this.isMobile,
          isLoadingTable: this.isLoadingTable,
          limitPagination: this.limit,
          offsetPagination: this.offset,
          previewStyles: this.previewStyles,
          rowIndex: this.previewRightRowIndex,
          rows: this.rowsLocalAll,
          disabledPreviewRowCallback: this.disabledPreviewRowCallback,
          usePagination: !!this.usePaginationLocal,
          onClosePreview: this.closePreview,
          onMousedownResizePreviewRight: this.mousedownResizePreviewRight,
          onMousemoveResizePreviewRight: this.mousemoveResizePreviewRight,
          onMouseupResizePreviewRight: this.mouseupResizePreviewRight,
          onTogglePreview: this.onTogglePreview,
          onTogglePreviewResize: this.togglePreviewResize,
          "onUpdate:offset": this.changeOffset
        }, this.$slots)
      ])
    ]);
  }
};
function UA(e) {
  const t = p(e, "activeTabIdLocal"), n = p(e, "index"), r = p(e, "keyId"), a = p(e, "parentId"), s = p(e, "tab"), o = d(() => r.value ? de(s.value, r.value) : n.value), u = d(() => t.value === o.value), f = d(() => `${a.value}_${n.value}`);
  return {
    idForContent: d(() => `${f.value}_content`),
    idLocal: f,
    isActive: u,
    tabIdLocal: o
  };
}
function oU(e) {
  const t = p(e, "tab"), n = p(e, "keyContent");
  return {
    contentLocal: d(() => {
      if (n.value)
        return de(t.value, n.value);
    })
  };
}
const uU = {
  name: "ATabsContent",
  props: {
    activeTabIdLocal: {
      type: [String, Number],
      required: !0
    },
    index: {
      type: Number,
      required: !0
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    parentId: {
      type: String,
      required: !0
    },
    tab: {
      type: Object,
      required: !0
    }
  },
  setup(e) {
    const {
      idForContent: t,
      idLocal: n,
      isActive: r,
      tabIdLocal: a
    } = UA(e), {
      contentLocal: s
    } = oU(e);
    return {
      contentLocal: s,
      idForContent: t,
      idLocal: n,
      isActive: r,
      tabIdLocal: a
    };
  },
  render() {
    let e = "";
    return this.tab.slotContent && this.$slots[this.tab.slotContent] ? e = this.$slots[this.tab.slotContent]({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.$slots.content ? e = this.$slots.content({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.contentLocal && (e = c(be, {
      html: this.contentLocal
    })), c("div", {
      id: this.idForContent,
      "aria-labelledby": this.idLocal,
      class: [
        "a_tabs__content",
        {
          a_tabs__content_show: this.isActive
        }
      ],
      role: "tabpanel"
    }, [
      e
    ]);
  }
};
function dU({
  isDisabled: e = d(() => !1)
}) {
  return {
    tabindexLocal: d(() => e.value ? -1 : 0)
  };
}
function cU(e, { emit: t }, {
  isDisabled: n = d(() => !1),
  tabIdLocal: r = d(() => "")
}) {
  const a = p(e, "index"), s = p(e, "tab"), o = (f) => {
    n.value || t("changeTab", { $event: f, tab: s.value, tabId: r.value, index: a.value });
  };
  return {
    changeTabLocal: o,
    keydownTab: (f) => {
      (f.keyCode === X.enter || f.keyCode === X.space) && (o(f), f.stopPropagation(), f.preventDefault());
    }
  };
}
function fU(e) {
  const t = p(e, "disabled"), n = p(e, "keyDisabled"), r = p(e, "tab");
  return {
    isDisabled: d(() => {
      if (t.value || n.value && de(r.value, n.value) === !0)
        return !0;
    })
  };
}
function hU(e) {
  const t = p(e, "tab"), n = p(e, "keyLabel");
  return {
    labelLocal: d(() => {
      if (n.value)
        return de(t.value, n.value);
    })
  };
}
function pU(e) {
  const t = p(e, "tab"), n = p(e, "keyTitle");
  return {
    titleLocal: d(() => {
      if (n.value)
        return de(t.value, n.value);
    })
  };
}
const _U = {
  name: "ATabsTab",
  props: {
    activeTabIdLocal: {
      type: [String, Number],
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    index: {
      type: Number,
      required: !0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyTitle: {
      type: String,
      required: !1,
      default: "title"
    },
    parentId: {
      type: String,
      required: !0
    },
    tab: {
      type: Object,
      required: !0
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Ur.indexOf(e) !== -1
    }
  },
  emits: [
    "changeTab"
  ],
  setup(e, t) {
    const {
      idForContent: n,
      idLocal: r,
      isActive: a,
      tabIdLocal: s
    } = UA(e), {
      isDisabled: o
    } = fU(e), {
      tabindexLocal: u
    } = dU({
      isDisabled: o
    }), {
      changeTabLocal: f,
      keydownTab: _
    } = cU(e, t, {
      isDisabled: o,
      tabIdLocal: s
    }), {
      labelLocal: m
    } = hU(e), {
      titleLocal: b
    } = pU(e);
    return {
      changeTabLocal: f,
      idForContent: n,
      idLocal: r,
      isActive: a,
      isDisabled: o,
      keydownTab: _,
      labelLocal: m,
      tabindexLocal: u,
      tabIdLocal: s,
      titleLocal: b
    };
  },
  render() {
    let e = "";
    return this.tab.slotTab && this.$slots[this.tab.slotTab] ? e = this.$slots[this.tab.slotTab]({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.$slots.tab ? e = this.$slots.tab({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.labelLocal && (e = c(be, {
      html: this.labelLocal,
      tag: "span"
    })), c("li", {
      class: [
        "a_tabs__list__item",
        this.tab.classLi
      ]
    }, [
      c(Oe, {
        id: this.idLocal,
        "aria-controls": this.idForContent,
        ariaDisabled: this.isDisabled,
        ariaSelected: this.isActive,
        class: [
          "a_tabs__list__link",
          this.tab.class,
          {
            a_tabs__list__link_active: this.isActive,
            a_tabs__list__link_disabled: this.isDisabled
          }
        ],
        classDefault: "",
        isTitleHtml: this.isTitleHtml,
        role: "tab",
        tabindex: this.tabindexLocal,
        tag: "a",
        titlePlacement: this.titlePlacement,
        type: "button",
        title: this.titleLocal,
        onClick: this.changeTabLocal,
        onKeydown: this.keydownTab
      }, () => [
        e
      ])
    ]);
  }
};
function mU(e, { emit: t }) {
  const n = p(e, "activeTabId"), r = p(e, "data"), a = p(e, "isChangeOutside"), s = p(e, "keyActive"), o = p(e, "keyId"), u = R(void 0), f = () => {
    ae(n.value) || (u.value = n.value);
  };
  return {
    activeTabIdLocal: u,
    changeTab: ({ $event: b, tab: v, tabId: g, index: S }) => {
      u.value !== g && (a.value || (u.value = g), t("change", { $event: b, tab: v, tabId: g, index: S }));
    },
    initActiveTabIdLocal: () => {
      f(), ae(u.value) && (s.value && (Y(r.value, (b, v) => {
        if (de(b, s.value))
          return o.value ? u.value = de(b, o.value) || v : u.value = v, !1;
      }), !ae(u.value)) || (o.value ? u.value = de(r.value, `[0].${o.value}`) || 0 : u.value = 0));
    },
    setActiveTabIdLocal: f
  };
}
const KU = {
  name: "ATabs",
  props: {
    activeTabId: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => mt("a_tabs_")
    },
    isBoxed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isChangeOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isVertical: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyActive: {
      type: String,
      required: !1,
      default: "active"
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyTitle: {
      type: String,
      required: !1,
      default: "title"
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Ur.indexOf(e) !== -1
    }
  },
  emits: [
    "change"
  ],
  setup(e, t) {
    const n = p(e, "activeTabId"), {
      activeTabIdLocal: r,
      changeTab: a,
      initActiveTabIdLocal: s,
      setActiveTabIdLocal: o
    } = mU(e, t);
    return s(), st(n, () => {
      o();
    }), {
      activeTabIdLocal: r,
      changeTab: a
    };
  },
  render() {
    return c("div", {
      id: this.id,
      class: ["a_tabs", {
        a_tabs_boxed: this.isBoxed,
        a_tabs_vertical: this.isVertical
      }]
    }, [
      c("div", {
        class: "a_tabs__box"
      }, [
        c("ul", {
          class: "a_tabs__list",
          role: "tablist"
        }, [
          this.data.map((e, t) => c(_U, {
            key: t,
            activeTabIdLocal: this.activeTabIdLocal,
            disabled: this.disabled,
            index: t,
            isTitleHtml: this.isTitleHtml,
            keyDisabled: this.keyDisabled,
            keyId: this.keyId,
            keyLabel: this.keyLabel,
            keyTitle: this.keyTitle,
            parentId: this.id,
            tab: e,
            titlePlacement: this.titlePlacement,
            onChangeTab: this.changeTab
          }, this.$slots))
        ])
      ]),
      c("div", {
        class: "a_tabs__contents"
      }, [
        this.data.map((e, t) => c(uU, {
          key: t,
          activeTabIdLocal: this.activeTabIdLocal,
          index: t,
          keyContent: this.keyContent,
          keyId: this.keyId,
          parentId: this.id,
          tab: e
        }, this.$slots))
      ])
    ]);
  }
}, ms = R({
  propsDefault: {},
  config: {
    isHtmlTitleSort: !1,
    headerTopGroups: [
      {
        props: {},
        children: [
          {
            component: "filterMain",
            props: {}
          },
          {
            component: "buttonSearch",
            props: {}
          },
          {
            component: "buttonToggle",
            props: {}
          }
        ]
      },
      {
        props: {},
        children: [
          {
            component: "selectFiltersSaved",
            props: {}
          },
          {
            component: "buttonSaveTop",
            props: {}
          },
          {
            component: "buttonDeleteFiltersSaved",
            props: {}
          }
        ]
      }
    ],
    headerBottomGroups: [
      {
        props: {},
        children: [
          {
            component: "addFilterSelect",
            props: {}
          },
          {
            component: "buttonSearch",
            props: {}
          }
        ]
      }
    ]
  }
});
d(() => {
  const e = {};
  return Y(ms.value.config.headerTopGroups, (t) => {
    Y(t.children, (n) => {
      e[n.component] = n.props;
    });
  }), Y(ms.value.config.headerBottomGroups, (t) => {
    Y(t.children, (n) => {
      e[n.component] = n.props;
    });
  }), e;
});
const XU = {
  install: (e, {
    propsDefault: t = {},
    config: n = {}
  } = {}) => {
    ms.value.propsDefault = {
      ...ms.value.propsDefault,
      ...t
    }, ms.value.config = {
      ...ms.value.config,
      ...n
    };
  }
}, ZU = {
  install: (e, { axiosCreateOptions: t = {}, baseUrl: n = "/api/", errorCallbacks: r = {}, headerParams: a = {}, setUrlForArray: s = void 0 } = {}) => {
    SH({ axiosCreateOptions: t }), AH({ baseUrl: n }), wH({ errorCallbacks: r }), TH({ headerParams: a }), We(s) && (XS.value.setUrlForArray = s);
  }
}, JU = {
  install: (e, t) => {
    e.provide("$aloha", t);
  }
}, QU = {
  install: (e, {
    breakpoint: t
  } = {}) => {
    hu(window.innerWidth <= t);
    const n = () => {
      window.innerWidth > t ? Lu.value && hu(!1) : Lu.value || hu(!0);
    };
    window.addEventListener("resize", n);
  }
}, e9 = {
  install: (e, t = "") => {
    X3(t);
  }
};
export {
  yU as AAccordion,
  Vh as AAlert,
  wU as AAlertPlugin,
  ct as AButton,
  UH as ACheckbox,
  Fl as ACloak,
  TU as ACloakPlugin,
  Bp as AConfirmAPI,
  Uu as ADatepicker,
  i$ as ADatepickerRange,
  xU as ADisclosure,
  Ma as ADropdown,
  QS as ADropdownGlobalAPI,
  Oe as AElement,
  L$ as AErrors,
  d4 as AEventOutsideAPI,
  L4 as AFieldset,
  PU as AFilters,
  tr as AFiltersAPI,
  BW as AFiltersHorizontal,
  XU as AFiltersPlugin,
  F4 as AFiltersRight,
  Rd as AForm,
  Sn as AFormHelpText,
  Qf as AGet,
  dA as AGroup,
  eh as AGroupButtonDropdown,
  RU as AGroupButtonDropdownPlugin,
  LH as AHttpAPI,
  ZU as AHttpPlugin,
  SU as AI18nPlugin,
  lt as AIcon,
  gU as AIconPlugin,
  BU as AInfiniteScroll,
  In as AInput,
  M$ as AInputCurrency,
  IU as AInputCurrencyPlugin,
  F$ as AInputFile,
  ps as AInputNumber,
  LU as AInputNumberPlugin,
  uu as AInputNumberRange,
  t4 as AJson,
  tn as ALabel,
  Od as ALink,
  kU as ALinkCopy,
  a6 as AList,
  fA as ALoading,
  OU as ALoadingPlugin,
  MU as AMenu,
  FU as AMenu2,
  En as AMobileAPI,
  QU as AMobilePlugin,
  Bd as AModal,
  qU as AModalConfirm,
  mW as AModalForm,
  DU as AModalPlugin,
  NU as AModalWizard,
  VU as ANotification,
  kd as ANotificationAPI,
  Dl as AOnHooks,
  Dd as AOneCheckbox,
  HU as APageTabTitle,
  K3 as APageTabTitleAPI,
  e9 as APageTabTitlePlugin,
  o8 as APagination,
  $U as AProgress,
  WU as AProgressCircle,
  iA as ARadio,
  UU as ARate,
  J4 as ARequired,
  _8 as AResizer,
  sn as ASafeHtml,
  jU as AScale,
  Vl as ASelect,
  EU as ASelectPlugin,
  GU as AShowMore,
  Ol as ASpinner,
  AU as ASpinnerPlugin,
  sA as ASwitch,
  zU as ATable,
  YU as ATablePlugin,
  KU as ATabs,
  m4 as ATemplate,
  T4 as ATextarea,
  wg as ATooltip,
  be as ATranslation,
  J6 as AVerticalScroll,
  j3 as AWizard,
  JU as AlohaPlugin,
  tF as filterBoolean,
  nF as filterCapitalize,
  rF as filterCurrency,
  a5 as filterDate,
  i5 as filterDefaultForEmpty,
  s5 as filterEmail,
  l5 as filterEscapeHtml,
  o5 as filterFileSize,
  Sl as filterFloat,
  u5 as filterJson,
  d5 as filterKeyValue,
  c5 as filterLimitTo,
  f5 as filterLink,
  Nu as filterList,
  p5 as filterLowerCase,
  _5 as filterMask,
  m5 as filterPropertyByValue,
  b5 as filterSearchHighlight,
  v5 as filterUpperCase,
  ck as getTotalNestedCount,
  uk as isArrayOfArrays,
  vU as isArrayOfStrings,
  R$ as isEven,
  CU as isOdd
};
