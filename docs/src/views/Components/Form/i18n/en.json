{
  "_A_UI_ELEMENT_0_": "Element 0",
  "_A_UI_ELEMENT_1_": "Element 1",
  "_A_UI_ELEMENT_2_": "Element 2",
  "_A_UI_ELEMENT_3_": "Element 3",
  "_A_UI_ELEMENT_4_": "Element 4",
  "_A_UI_ELEMENT_5_": "Element 5",
  "_A_UI_ELEMENT_6_": "Element 6",
  "_A_UI_ELEMENT_7_": "Element 7",
  "_A_UI_ELEMENT_8_": "Element 8",
  "_A_UI_EVENTS_BLUR_DESCRIPTION_": "Event triggered when the component loses focus. Used to validate or save data when the user leaves the field.",
  "_A_UI_EVENTS_FOCUS_DESCRIPTION_": "Event triggered when the component gains focus. Useful for tracking user interaction with the element.",
  "_A_UI_EVENTS_ON_SEARCH_OUTSIDE_DESCRIPTION_": "An event triggered when the user performs a search outside the component, for example, via <strong lang=\"en\">API</strong> or another external data source. This event allows handling the search result and updating the component data.",
  "_A_UI_EVENTS_TOGGLE_COLLAPSE_DESCRIPTION_": "The event is triggered when the user collapses or expands the group of items.",
  "_A_UI_EVENTS_UPDATE_DATA_DESCRIPTION_": "An event triggered when the component data is updated. It can be used to perform actions after the data has been changed or updated, such as re-sorting or filtering items.",
  "_A_UI_EVENTS_UPDATE_MODEL_VALUE_DESCRIPTION_": "Event triggered when the component's model value is updated. Used to synchronize data between the component and the parent component.",
  "_A_UI_GROUP_CHANGE_DESCRIPTION_": "In this example, the <strong lang=\"en\">change</strong> function is responsible for updating the component's model. The function takes three arguments: the model <strong lang=\"en\">model</strong>, the component identifier <strong lang=\"en\">id</strong>, and all passed <strong lang=\"en\">props</strong>. This approach allows flexible handling of model changes and performing additional actions such as logging or validation.",
  "_A_UI_GROUP_CHANGE_HEADER_": "Model change function",
  "_A_UI_GROUP_CLASS_COLUMN_DESCRIPTION_": "This example shows how to use <strong lang=\"en\">class-column-default</strong>. It allows you to set <strong lang=\"en\">CSS</strong> classes for all child elements in <strong lang=\"en\">children</strong>, unless a specific element has its own class. In the example, the first element explicitly sets the class <strong lang=\"en\">a_column a_column_12</strong>, while the rest will use the class specified in the <strong lang=\"en\">class-column</strong> of the component.",
  "_A_UI_GROUP_CLASS_COLUMN_HEADER_": "Class for child elements",
  "_A_UI_GROUP_CLASS_COLUMNS_DESCRIPTION_": "This example shows how to use <strong lang=\"en\">class-columns</strong> to manage <strong lang=\"en\">CSS</strong> classes for the parent container where child elements are displayed. These classes allow you to configure the grid, spacing, and column behavior based on the device.",
  "_A_UI_GROUP_CLASS_COLUMNS_HEADER_": "Classes for parent container",
  "_A_UI_GROUP_COLLAPSE_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">collapsible</strong> and <strong lang=\"en\">is-collapsed</strong> in the component. The <strong lang=\"en\">collapsible</strong> property allows the group of items to be collapsible, while <strong lang=\"en\">is-collapsed</strong> sets the initial collapsed state. The example also demonstrates the use of the <strong lang=\"en\">toggle-collapse</strong> event, which is triggered when the group is collapsed or expanded.",
  "_A_UI_GROUP_COLLAPSE_HEADER_": "Collapse/expand",
  "_A_UI_GROUP_DATA_EXTRA_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">data-extra</strong> in the component. In the first example, the extra data is passed as an array of arrays, where each array contains the ID and name of the item. In the second example, the extra data is passed as an array of objects. Both approaches allow flexible management of the list of selectable items.",
  "_A_UI_GROUP_DATA_EXTRA_HEADER_": "Extra data",
  "_A_UI_GROUP_ERRORS_ALL_DESCRIPTION_": "This example shows how to use <strong lang=\"en\">errors-all</strong> to pass an object with errors for child elements defined in <strong lang=\"en\">children</strong>. Each child element can have its own error message displayed if validation fails.",
  "_A_UI_GROUP_ERRORS_ALL_HEADER_": "Errors for child elements",
  "_A_UI_GROUP_ERRORS_DESCRIPTION_": "This example shows how to use <strong lang=\"en\">errors</strong> to display error messages below the input field. Error messages help the user understand which data was entered incorrectly and how to correct it.",
  "_A_UI_GROUP_ERRORS_HEADER_": "Error display",
  "_A_UI_GROUP_GROUP_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">key-group</strong> and <strong lang=\"en\">key-group-label-callback</strong> to group items and set group names in the component. In the first case, simple grouping by <strong lang=\"en\">alohaBR</strong> and <strong lang=\"en\">aloha</strong> keys is used. In the second example, the <strong lang=\"en\">key-group-label-callback</strong> callback function is additionally applied to dynamically determine group names based on the data.",
  "_A_UI_GROUP_GROUP_HEADER_": "Item grouping",
  "_A_UI_GROUP_HAS_BORDER_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">has-border</strong> to control the display of borders. In the first example, the border is enabled, making the items more prominent. In the second example, the border is disabled, giving the items a more minimalist appearance.",
  "_A_UI_GROUP_HAS_BORDER_HEADER_": "Border display",
  "_A_UI_GROUP_HELP_TEXT_DESCRIPTION_": "This example shows how to use <strong lang=\"en\">help-text</strong> to add a help text below the input field. The help text provides additional information to the user about the expected data in this field.",
  "_A_UI_GROUP_HELP_TEXT_HEADER_": "Help text",
  "_A_UI_GROUP_INLINE_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">inline</strong> to display items inline.",
  "_A_UI_GROUP_INLINE_HEADER_": "Inline",
  "_A_UI_GROUP_IS_BUTTON_GROUP_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">is-button-group</strong> and <strong lang=\"en\">class-button-group-default</strong> in the component. The first property allows displaying the items as a group of buttons, creating a more interactive interface. The second property customizes the appearance of the button group by setting a styling class.",
  "_A_UI_GROUP_IS_BUTTON_GROUP_HEADER_": "Button group",
  "_A_UI_GROUP_IS_DATA_SIMPLE_ARRAY_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">is-data-simple-array</strong> to work with a simple array of strings. The data is presented as an array of strings, where each string is a separate list item. This simplifies the process of displaying and managing items without the need for objects.",
  "_A_UI_GROUP_IS_DATA_SIMPLE_ARRAY_HEADER_": "Simple data array",
  "_A_UI_GROUP_IS_LABEL_FLOAT_DESCRIPTION_": "This example shows how to use <strong lang=\"en\">is-label-float</strong> to control the behavior of the label in the input field. If the prop value is set to <strong lang=\"en\">false</strong>, the label remains static. If the value is set to <strong lang=\"en\">true</strong>, the label moves above the input field when the user starts typing or when the field receives focus.",
  "_A_UI_GROUP_IS_LABEL_FLOAT_HEADER_": "Floating label",
  "_A_UI_GROUP_IS_WIDTH_AUTO_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">is-width-auto</strong> to control the width of items. When set to <strong lang=\"en\">true</strong>, the width of items automatically adjusts to their content. When set to <strong lang=\"en\">false</strong>, the width is fixed and determined by styles or the parent container.",
  "_A_UI_GROUP_IS_WIDTH_AUTO_HEADER_": "Auto width",
  "_A_UI_GROUP_KEY_DISABLED_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">key-disabled</strong> to disable specific items in the component. This allows flexible control over the availability of items based on the data.",
  "_A_UI_GROUP_KEY_DISABLED_HEADER_": "Disabling individual items",
  "_A_UI_GROUP_KEY_LABEL_CALLBACK_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">key-label-callback</strong> to dynamically generate labels for items. The function passed as the value receives the item data and returns a string that will be used as the label.",
  "_A_UI_GROUP_KEY_LABEL_CALLBACK_HEADER_": "Label configuration function",
  "_A_UI_GROUP_KEY_TITLE_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">key-title</strong> and <strong lang=\"en\">key-title-callback</strong> to set the titles of items. In the first case, the title of each item is statically set using the <strong lang=\"en\">key-title</strong> property. In the second example, the title is dynamically generated using the <strong lang=\"en\">key-title-callback</strong> function, which takes the item data and returns a string to be displayed.",
  "_A_UI_GROUP_KEY_TITLE_HEADER_": "Title configuration",
  "_A_UI_GROUP_LABEL_SCREEN_READER_DESCRIPTION_": "This example shows how to use <strong lang=\"en\">label-screen-reader</strong>. It allows you to set a hidden label that will only be visible to screen readers.",
  "_A_UI_GROUP_LABEL_SCREEN_READER_HEADER_": "Label for screen reader",
  "_A_UI_GROUP_READONLY_DESCRIPTION_": "In this example, the component is used in <strong lang=\"en\">readonly</strong> mode, where the value is displayed as text and cannot be modified by the user.",
  "_A_UI_GROUP_READONLY_HEADER_": "<strong lang=\"en\">Readonly</strong> display mode",
  "_A_UI_GROUP_SEARCH_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">search</strong> to add search functionality to the items in the component. This feature allows users to easily find the required items in a large data set.",
  "_A_UI_GROUP_SEARCH_HEADER_": "Item search",
  "_A_UI_GROUP_SEARCH_TEXT_IN_HTML_DESCRIPTION_": "This example demonstrates how to use the <code>search-text-in-html</code> prop to perform a search only on the visible text from the <strong lang=\"en\">HTML</strong>, ignoring <strong lang=\"en\">HTML</strong> tags.",
  "_A_UI_GROUP_SEARCH_TEXT_IN_HTML_HEADER_": "Search in <strong lang=\"en\">HTML</strong> text",
  "_A_UI_GROUP_SORT_ORDER_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">sort-order</strong> to set the sort order of items. In the first case, no sort order is set, in the second, the items are sorted in ascending order (<strong lang=\"en\">asc</strong>), and in the third, in descending order (<strong lang=\"en\">desc</strong>). This allows you to customize the display order of items.",
  "_A_UI_GROUP_SORT_ORDER_GROUP_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">sort-order-group</strong> to specify the sort order of groups of items. In the first case, no sort order is set, in the second, the groups are sorted in ascending order (<strong lang=\"en\">asc</strong>), and in the third, in descending order (<strong lang=\"en\">desc</strong>). This allows you to customize the display order of item groups.",
  "_A_UI_GROUP_SORT_ORDER_GROUP_HEADER_": "Group sort order",
  "_A_UI_GROUP_SORT_ORDER_HEADER_": "Sort order",
  "_A_UI_GROUP_TRANSLATE_DATA_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">translate-data</strong> in the component. The data provided contains labels with keys that are automatically translated based on localization settings. This allows displaying translated values depending on the selected language.",
  "_A_UI_GROUP_TRANSLATE_DATA_HEADER_": "Translatable items",
  "_A_UI_GROUP_TWO_COLUMNS_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">class-data-parent</strong> to set <strong lang=\"en\">CSS</strong> classes that control the display of items. In the first example, the items are arranged in two columns using the <strong lang=\"en\">a_list_columns a_list_columns_2</strong> classes. In the second example, additional classes are used for responsive display at different screen resolutions, such as <strong lang=\"en\">desktop</strong>, <strong lang=\"en\">widescreen</strong>, and <strong lang=\"en\">fullhd</strong>.",
  "_A_UI_GROUP_TWO_COLUMNS_HEADER_": "Two columns",
  "_A_UI_PROPS_API_SAVE_ID_DESCRIPTION_": "A unique identifier for saving data retrieved from the <strong lang=\"en\">API</strong>. This can be useful for caching or reusing data within a session.",
  "_A_UI_PROPS_AUTOCOMPLETE_DESCRIPTION_": "Specifies whether the field should support autocomplete, similar to the <strong lang=\"en\">autocomplete</strong> attribute in <strong lang=\"en\">HTML</strong>.",
  "_A_UI_PROPS_CHANGE_DESCRIPTION_": "Function called when the model changes. It accepts the new model value and additional parameters for processing the change.",
  "_A_UI_PROPS_CHILDREN_DESCRIPTION_": "An array of child elements that will be rendered inside the component. Each element in the array is an object with parameters such as <strong lang=\"en\">type</strong>, <strong lang=\"en\">label</strong>, <strong lang=\"en\">id</strong>, and other properties for configuring and displaying the child element.",
  "_A_UI_PROPS_CLASS_BUTTON_GROUP_DEFAULT_DESCRIPTION_": "Default <strong lang=\"en\">CSS</strong> classes that will be applied to the buttons in the group. These classes can be used to style the buttons in the checkbox or radio button group.",
  "_A_UI_PROPS_CLASS_COLUMN_DEFAULT_DESCRIPTION_": "Sets a <strong lang=\"en\">CSS</strong> class for all child elements unless a separate <strong lang=\"en\">classColumn</strong> is specified for a specific element in the <strong lang=\"en\">children</strong> array. This makes it easy to manage the display of all child elements at once.",
  "_A_UI_PROPS_CLASS_COLUMNS_DESCRIPTION_": "<strong lang=\"en\">CSS</strong> classes that will be applied to the container where child elements from the <strong lang=\"en\">children</strong> prop are placed. These classes control the number of columns, spacing between them, and their responsive behavior.",
  "_A_UI_PROPS_CLASS_DATA_PARENT_DESCRIPTION_": "<strong lang=\"en\">CSS</strong> classes that are applied to the parent data container. This allows customizing the appearance of the container that holds the data items.",
  "_A_UI_PROPS_CLASS_FIELDSET_DESCRIPTION_": "<strong lang=\"en\">CSS</strong> classes that will be applied to the <strong lang=\"en\">fieldset</strong> tag containing the group of controls. This allows customizing the appearance of the group of form elements.",
  "_A_UI_PROPS_CLEAR_BUTTON_CLASS_DESCRIPTION_": "Specifies the <strong lang=\"en\">CSS</strong> class that will be applied to the clear button. This allows customization of the button's appearance according to design requirements.",
  "_A_UI_PROPS_DATA_DESCRIPTION_": "An array of data used to generate the items.",
  "_A_UI_PROPS_DATA_EXTRA_DESCRIPTION_": "An additional array of data that can be used to display extra items not included in the main data array.",
  "_A_UI_PROPS_DEPENDENCIES_DESCRIPTION_": "Specifies dependencies that may affect the visibility or behavior of the component based on the values of other elements.",
  "_A_UI_PROPS_DISABLED_DESCRIPTION_": "Determines whether the component is disabled. If set to <strong lang=\"en\">true</strong>, the component becomes inactive and the user cannot interact with it.",
  "_A_UI_PROPS_ERRORS_ALL_DESCRIPTION_": "An object containing errors for all child elements passed through <strong lang=\"en\">children</strong>. Each error should be specified for the corresponding element by its <strong lang=\"en\">id</strong>.",
  "_A_UI_PROPS_ERRORS_DESCRIPTION_": "Contains text or an array of errors that should be displayed to the user. If there are errors, they are displayed below the component.",
  "_A_UI_PROPS_EXCLUDE_RENDER_ATTRIBUTES_DESCRIPTION_": "Array of attributes that should not be rendered for this component. Useful for excluding unnecessary attributes from the final <strong lang=\"en\">DOM</strong>.",
  "_A_UI_PROPS_HAS_BORDER_DESCRIPTION_": "Specifies whether the item should have a border. If set to <strong lang=\"en\">true</strong>, a border will be displayed around the item.",
  "_A_UI_PROPS_HELP_TEXT_DESCRIPTION_": "Help text displayed below the component. Provides the user with additional information or instruction.",
  "_A_UI_PROPS_HTML_ID_DESCRIPTION_": "Sets the <strong lang=\"en\">HTML ID</strong> of the element. Can be used to uniquely identify the component on the page.",
  "_A_UI_PROPS_ID_DESCRIPTION_": "The identifier of the component, which can be used to track or refer to the component in the code.",
  "_A_UI_PROPS_ID_PREFIX_DESCRIPTION_": "Prefix for the component's <strong lang=\"en\">ID</strong>. Used to create a unique identifier based on the specified prefix.",
  "_A_UI_PROPS_INPUT_ATTRIBUTES_DESCRIPTION_": "An object of attributes applied directly to the input element. Allows adding or customizing additional input attributes.",
  "_A_UI_PROPS_INPUT_CLASS_DESCRIPTION_": "<strong lang=\"en\">CSS</strong> class(es) applied to the input element. Allows styling the component according to your requirements.",
  "_A_UI_PROPS_IS_CLEAR_BUTTON_DESCRIPTION_": "Determines whether the clear button should be displayed. If <strong lang=\"en\">true</strong>, a button will be shown next to the text field, allowing the user to clear its content.",
  "_A_UI_PROPS_IS_DATA_SIMPLE_ARRAY_DESCRIPTION_": "Determines whether the data array is a simple array of values. If set to <strong lang=\"en\">true</strong>, each element of the array will be treated as a simple value without keys.",
  "_A_UI_PROPS_IS_HIDE_DESCRIPTION_": "Determines whether the component should be hidden. If set to <strong lang=\"en\">true</strong>, the component is not displayed on the page.",
  "_A_UI_PROPS_IS_LABEL_FLOAT_DESCRIPTION_": "Determines whether the label of the component should be positioned above the field. If <strong lang=\"en\">true</strong>, the label will move above the text field when focused or when content is present.",
  "_A_UI_PROPS_IS_RENDER_DESCRIPTION_": "Indicates whether the component should be rendered. If set to <strong lang=\"en\">false</strong>, the component will not be created in the <strong lang=\"en\">DOM</strong>.",
  "_A_UI_PROPS_KEY_DISABLED_CALLBACK_DESCRIPTION_": "A function to determine whether an item should be disabled. Returns <code>true</code> to disable a specific item. Accepts an object with item data: <code>{ item }</code>.",
  "_A_UI_PROPS_KEY_DISABLED_DESCRIPTION_": "Specifies the key in the data object that determines whether the item will be disabled (unselectable).",
  "_A_UI_PROPS_KEY_GROUP_DESCRIPTION_": "A key or array of keys used to group data by specific categories. This property allows grouping items into groups.",
  "_A_UI_PROPS_KEY_GROUP_LABEL_CALLBACK_DESCRIPTION_": "A callback function that takes two arguments <strong lang=\"en\">({ group, item })</strong> and returns the group name. It is used to dynamically determine group names based on the provided data.",
  "_A_UI_PROPS_KEY_ID_DESCRIPTION_": "The key in the data object that will be used as the identifier for each item.",
  "_A_UI_PROPS_KEY_LABEL_CALLBACK_DESCRIPTION_": "A callback function used to generate the label text based on the item data. This allows dynamically creating labels based on complex logic.",
  "_A_UI_PROPS_KEY_LABEL_DESCRIPTION_": "The key in the data object that specifies the label text for each item.",
  "_A_UI_PROPS_KEY_TITLE_CALLBACK_DESCRIPTION_": "A callback function used to generate the title based on the item data. This allows dynamically creating titles based on complex logic.",
  "_A_UI_PROPS_KEY_TITLE_DESCRIPTION_": "The key in the data object that specifies the title for each item.",
  "_A_UI_PROPS_LABEL_CLASS_DESCRIPTION_": "<strong lang=\"en\">CSS</strong> class(es) applied to the label. Allows customizing the label's style.",
  "_A_UI_PROPS_LABEL_DESCRIPTION_": "Label text displayed next to the component. Typically used to describe the purpose of the input element.",
  "_A_UI_PROPS_LABEL_SCREEN_READER_DESCRIPTION_": "Label intended for screen readers. Useful for improving accessibility.",
  "_A_UI_PROPS_LOADING_DESCRIPTION_": "Indicates whether the item is in a loading state. If set to <strong lang=\"en\">true</strong>, the item displays a loading indicator.",
  "_A_UI_PROPS_MAXLENGTH_DESCRIPTION_": "Sets the maximum number of characters that can be entered into the field. If this limit is exceeded, further input will be prohibited.",
  "_A_UI_PROPS_MODEL_DEPENDENCIES_DESCRIPTION_": "Determines model dependencies that may affect the visibility or behavior of the component.",
  "_A_UI_PROPS_MODEL_UNDEFINED_DESCRIPTION_": "The value used to reset the model to an undefined state. Useful for clearing the model value.",
  "_A_UI_PROPS_MODEL_VALUE_DESCRIPTION_": "The current model value associated with the component. Used to manage the data displayed in the component.",
  "_A_UI_PROPS_PLACEHOLDER_DESCRIPTION_": "Specifies the placeholder text that will be displayed in the input field until the user enters data. The placeholder helps the user understand what data is expected in the field.",
  "_A_UI_PROPS_READONLY_DEFAULT_DESCRIPTION_": "The default text that is shown if the value is missing in read-only mode.",
  "_A_UI_PROPS_READONLY_DESCRIPTION_": "Enables read-only mode, where the value is displayed as text without the possibility of editing.",
  "_A_UI_PROPS_REQUIRED_DESCRIPTION_": "Indicates whether the component is required. If set to <strong lang=\"en\">true</strong>, the component requires user input.",
  "_A_UI_PROPS_SEARCH_API_DESCRIPTION_": "Specifies whether item searches will be performed using an <strong lang=\"en\">API</strong>. If set to <strong lang=\"en\">true</strong>, data will be loaded from the server as the query is entered.",
  "_A_UI_PROPS_SEARCH_API_KEY_DESCRIPTION_": "The key used to perform the search via <strong lang=\"en\">API</strong>. Typically, this is a parameter passed in the server request to filter the data.",
  "_A_UI_PROPS_SEARCH_DESCRIPTION_": "Determines whether the search feature is supported. If set to <strong lang=\"en\">true</strong>, users will be able to search within the group.",
  "_A_UI_PROPS_SEARCH_IN_GROUP_DESCRIPTION_": "Enables additional search by group names.",
  "_A_UI_PROPS_SEARCH_OUTSIDE_DESCRIPTION_": "Determines whether the search will be performed outside the component, for example, via <strong lang=\"en\">API</strong> or another external data source.",
  "_A_UI_PROPS_SEARCH_SEARCH_TEXT_IN_HTML_DESCRIPTION_": "If set to <code>true</code>, the search will be performed on the text extracted from the rendered <strong lang=\"en\">HTML</strong>. This allows searching only visible text shown to the user, ignoring tags and attributes.",
  "_A_UI_PROPS_SEARCH_TIMEOUT_DESCRIPTION_": "Specifies the delay time in milliseconds before performing the search. Useful for preventing excessive requests during fast text input by the user.",
  "_A_UI_PROPS_SLOT_APPEND_NAME_DESCRIPTION_": "The name of the slot that will be appended after the component's main content. This allows extending the functionality of the component by adding custom content.",
  "_A_UI_PROPS_SLOT_NAME_DESCRIPTION_": "The name of the main slot used to insert custom content into the component.",
  "_A_UI_PROPS_SORT_ORDER_DESCRIPTION_": "Specifies the sort order of items. Possible values: <strong lang=\"en\">asc</strong> (ascending) or <strong lang=\"en\">desc</strong> (descending).",
  "_A_UI_PROPS_SORT_ORDER_GROUP_DESCRIPTION_": "Specifies the sort order of groups if the items are grouped. Possible values: <strong lang=\"en\">asc</strong> (ascending) or <strong lang=\"en\">desc</strong> (descending).",
  "_A_UI_PROPS_TRANSLATE_DATA_DESCRIPTION_": "Indicates whether the data should be translated before display. If set to <strong lang=\"en\">true</strong>, text values will be translated according to the current language settings.",
  "_A_UI_PROPS_URL_DESCRIPTION_": "The <strong lang=\"en\">URL</strong> from which an external data source will be loaded to populate the checkbox or radio button group.",
  "_A_UI_PROPS_URL_PARAMS_DESCRIPTION_": "Parameters that will be added to the <strong lang=\"en\">URL</strong> request when loading data from the server. These parameters allow filtering or modifying the data retrieved from the <strong lang=\"en\">API</strong>.",
  "_A_UI_TYPES_FOR_USE_": "Types available for use."
}