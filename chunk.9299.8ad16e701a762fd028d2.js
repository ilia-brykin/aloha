"use strict";(self.webpackChunkaloha_vue_docs=self.webpackChunkaloha_vue_docs||[]).push([[9299],{1232:(r,e,n)=>{n.r(e),n.d(e,{default:()=>p});var t=n(6365),s=n(616),a=n(7791),l=n(2382),i=n(4461),o=n(7332),A=n(6269),u=n(7483);const g={name:"PageUtilsIsArrayOfStringsExample",components:{AlohaExample:A.A},setup(){const{codeJs:r}={codeJs:`isArrayOfStrings(["hello", "Aloha"]);\n// ${(0,u.dr)(["hello","Aloha"])}\n\nisArrayOfStrings("hello Aloha");\n// ${(0,u.dr)("hello Aloha")}\n\nisArrayOfStrings(["Aloha", 1]);\n// ${(0,u.dr)(["Aloha",1])}\nisArrayOfStrings(["Aloha", false]);\n// ${(0,u.dr)(["Aloha",!1])}\nisArrayOfStrings(["Aloha", undefined]);\n// ${(0,u.dr)(["Aloha",void 0])}\nisArrayOfStrings(["Aloha", null]);\n// ${(0,u.dr)(["Aloha",null])}\n\nisArrayOfStrings([]);\n// ${(0,u.dr)([])}\nisArrayOfStrings("Aloha");\n// ${(0,u.dr)("Aloha")}\nisArrayOfStrings(1);\n// ${(0,u.dr)(1)}\nisArrayOfStrings(undefined);\n// ${(0,u.dr)(void 0)}\nisArrayOfStrings(null);\n// ${(0,u.dr)(null)}\nisArrayOfStrings({});\n// ${(0,u.dr)({})}`};return{codeJs:r}}};var f=n(6262);const d=(0,f.A)(g,[["render",function(r,e){const n=(0,t.g2)("aloha-example");return(0,t.uX)(),(0,t.Wv)(n,{"code-js":r.codeJs,header:"_A_BASIC_USAGE_","is-code-visible-default":!0},null,8,["code-js"])}]]),h={name:"PageUtilsIsArrayOfStrings",components:{AlohaPage:s.A,ATranslation:a.A,PageFilterArguments:l.A,PageFilterImportFunction:i.A,PageFilterTest:o.A,PageUtilsIsArrayOfStringsExample:d},setup(){const{pageTitle:r}={pageTitle:"isArrayOfStrings"},{argumentsText:e}={argumentsText:[{value:"value",types:["Array"],text:"_PAGE_UTILS_IS_ARRAY_OF_STRINGS_ARGUMENTS_VALUE_"}]};return{argumentsText:e,pageTitle:r,test:'import {\n  isArrayOfStrings,\n} from "../utils";\n\ndescribe("isArrayOfStrings function", () => {\n  test("should return true when input is an array of strings", () => {\n    const array = ["hello", "world"];\n    const result = isArrayOfStrings(array);\n\n    expect(result).toBe(true);\n  });\n\n  test("should return false when input is not an array", () => {\n    const notArray = "hello world";\n    const result = isArrayOfStrings(notArray);\n\n    expect(result).toBe(false);\n  });\n\n  it("should return false if provided with a empty array", () => {\n    expect(isArrayOfStrings([])).toBe(false);\n  });\n\n  test("should return false when input is an array but not all elements are strings", () => {\n    expect(isArrayOfStrings(["hello", 1234])).toBe(false);\n    expect(isArrayOfStrings(["hello", false])).toBe(false);\n    expect(isArrayOfStrings(["hello", undefined])).toBe(false);\n    expect(isArrayOfStrings(["hello", null])).toBe(false);\n  });\n});\n'}}},p=(0,f.A)(h,[["render",function(r,e){const n=(0,t.g2)("a-translation"),s=(0,t.g2)("page-filter-import-function"),a=(0,t.g2)("page-filter-arguments"),l=(0,t.g2)("page-utils-is-array-of-strings-example"),i=(0,t.g2)("page-filter-test"),o=(0,t.g2)("aloha-page");return(0,t.uX)(),(0,t.Wv)(o,{"page-title":r.pageTitle},{body:(0,t.k6)((()=>[(0,t.bF)(n,{tag:"p",html:"_PAGE_UTILS_IS_ARRAY_OF_STRINGS_DESCRIPTION_"}),(0,t.bF)(s,{"function-name":"isArrayOfStrings","type-import":"utils"}),(0,t.bF)(a,{"arguments-text":r.argumentsText,"function-description":"isArrayOfStrings(value)"},null,8,["arguments-text"]),(0,t.bF)(l),(0,t.bF)(i,{test:r.test},null,8,["test"])])),_:1},8,["page-title"])}]])}}]);
//# sourceMappingURL=chunk.9299.8ad16e701a762fd028d2.js.map