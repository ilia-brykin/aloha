import { toRef as d, inject as de, computed as _, ref as B, watch as rt, onBeforeUnmount as Ot, withDirectives as Pt, h as c, resolveComponent as $r, unref as TR, Teleport as ia, onUnmounted as _p, nextTick as iu, onMounted as Vr, provide as tt, getCurrentInstance as mR, toRefs as SR } from "vue";
import xn from "moment";
var dp = typeof global == "object" && global && global.Object === Object && global, bR = typeof self == "object" && self && self.Object === Object && self, dr = dp || bR || Function("return this")(), lr = dr.Symbol, cp = Object.prototype, LR = cp.hasOwnProperty, IR = cp.toString, Ui = lr ? lr.toStringTag : void 0;
function vR(e) {
  var t = LR.call(e, Ui), n = e[Ui];
  try {
    e[Ui] = void 0;
    var r = !0;
  } catch {
  }
  var s = IR.call(e);
  return r && (t ? e[Ui] = n : delete e[Ui]), s;
}
var yR = Object.prototype, gR = yR.toString;
function RR(e) {
  return gR.call(e);
}
var OR = "[object Null]", CR = "[object Undefined]", BA = lr ? lr.toStringTag : void 0;
function la(e) {
  return e == null ? e === void 0 ? CR : OR : BA && BA in Object(e) ? vR(e) : RR(e);
}
function or(e) {
  return e != null && typeof e == "object";
}
var NR = "[object Symbol]";
function Ns(e) {
  return typeof e == "symbol" || or(e) && la(e) == NR;
}
function si(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, s = Array(r); ++n < r; )
    s[n] = t(e[n], n, e);
  return s;
}
var Te = Array.isArray, DR = 1 / 0, wA = lr ? lr.prototype : void 0, PA = wA ? wA.toString : void 0;
function Al(e) {
  if (typeof e == "string")
    return e;
  if (Te(e))
    return si(e, Al) + "";
  if (Ns(e))
    return PA ? PA.call(e) : "";
  var t = e + "";
  return t == "0" && 1 / e == -DR ? "-0" : t;
}
var BR = /\s/;
function wR(e) {
  for (var t = e.length; t-- && BR.test(e.charAt(t)); )
    ;
  return t;
}
var PR = /^\s+/;
function xR(e) {
  return e && e.slice(0, wR(e) + 1).replace(PR, "");
}
function kn(e) {
  var t = typeof e;
  return e != null && (t == "object" || t == "function");
}
var xA = NaN, FR = /^[-+]0x[0-9a-f]+$/i, MR = /^0b[01]+$/i, qR = /^0o[0-7]+$/i, $R = parseInt;
function ui(e) {
  if (typeof e == "number")
    return e;
  if (Ns(e))
    return xA;
  if (kn(e)) {
    var t = typeof e.valueOf == "function" ? e.valueOf() : e;
    e = kn(t) ? t + "" : t;
  }
  if (typeof e != "string")
    return e === 0 ? e : +e;
  e = xR(e);
  var n = MR.test(e);
  return n || qR.test(e) ? $R(e.slice(2), n ? 2 : 8) : FR.test(e) ? xA : +e;
}
var FA = 1 / 0, kR = 17976931348623157e292;
function No(e) {
  if (!e)
    return e === 0 ? e : 0;
  if (e = ui(e), e === FA || e === -FA) {
    var t = e < 0 ? -1 : 1;
    return t * kR;
  }
  return e === e ? e : 0;
}
function Wr(e) {
  var t = No(e), n = t % 1;
  return t === t ? n ? t - n : t : 0;
}
function Ps(e) {
  return e;
}
var UR = "[object AsyncFunction]", HR = "[object Function]", VR = "[object GeneratorFunction]", WR = "[object Proxy]";
function qe(e) {
  if (!kn(e))
    return !1;
  var t = la(e);
  return t == HR || t == VR || t == UR || t == WR;
}
var X_ = dr["__core-js_shared__"], MA = function() {
  var e = /[^.]+$/.exec(X_ && X_.keys && X_.keys.IE_PROTO || "");
  return e ? "Symbol(src)_1." + e : "";
}();
function GR(e) {
  return !!MA && MA in e;
}
var KR = Function.prototype, jR = KR.toString;
function xs(e) {
  if (e != null) {
    try {
      return jR.call(e);
    } catch {
    }
    try {
      return e + "";
    } catch {
    }
  }
  return "";
}
var zR = /[\\^$.*+?()[\]{}|]/g, YR = /^\[object .+?Constructor\]$/, XR = Function.prototype, ZR = Object.prototype, JR = XR.toString, QR = ZR.hasOwnProperty, eO = RegExp(
  "^" + JR.call(QR).replace(zR, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function tO(e) {
  if (!kn(e) || GR(e))
    return !1;
  var t = qe(e) ? eO : YR;
  return t.test(xs(e));
}
function nO(e, t) {
  return e == null ? void 0 : e[t];
}
function Fs(e, t) {
  var n = nO(e, t);
  return tO(n) ? n : void 0;
}
var Td = Fs(dr, "WeakMap"), qA = Object.create, rO = /* @__PURE__ */ function() {
  function e() {
  }
  return function(t) {
    if (!kn(t))
      return {};
    if (qA)
      return qA(t);
    e.prototype = t;
    var n = new e();
    return e.prototype = void 0, n;
  };
}();
function aO(e, t, n) {
  switch (n.length) {
    case 0:
      return e.call(t);
    case 1:
      return e.call(t, n[0]);
    case 2:
      return e.call(t, n[0], n[1]);
    case 3:
      return e.call(t, n[0], n[1], n[2]);
  }
  return e.apply(t, n);
}
function sO() {
}
function iO(e, t) {
  var n = -1, r = e.length;
  for (t || (t = Array(r)); ++n < r; )
    t[n] = e[n];
  return t;
}
var lO = 800, oO = 16, uO = Date.now;
function _O(e) {
  var t = 0, n = 0;
  return function() {
    var r = uO(), s = oO - (r - n);
    if (n = r, s > 0) {
      if (++t >= lO)
        return arguments[0];
    } else
      t = 0;
    return e.apply(void 0, arguments);
  };
}
function dO(e) {
  return function() {
    return e;
  };
}
var Vo = function() {
  try {
    var e = Fs(Object, "defineProperty");
    return e({}, "", {}), e;
  } catch {
  }
}(), cO = Vo ? function(e, t) {
  return Vo(e, "toString", {
    configurable: !0,
    enumerable: !1,
    value: dO(t),
    writable: !0
  });
} : Ps, fO = _O(cO);
function fp(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r && t(e[n], n, e) !== !1; )
    ;
  return e;
}
function hp(e, t, n, r) {
  for (var s = e.length, l = n + -1; ++l < s; )
    if (t(e[l], l, e))
      return l;
  return -1;
}
function hO(e) {
  return e !== e;
}
function AO(e, t, n) {
  for (var r = n - 1, s = e.length; ++r < s; )
    if (e[r] === t)
      return r;
  return -1;
}
function Ap(e, t, n) {
  return t === t ? AO(e, t, n) : hp(e, hO, n);
}
function Ep(e, t) {
  var n = e == null ? 0 : e.length;
  return !!n && Ap(e, t, 0) > -1;
}
var EO = 9007199254740991, pO = /^(?:0|[1-9]\d*)$/;
function lu(e, t) {
  var n = typeof e;
  return t = t ?? EO, !!t && (n == "number" || n != "symbol" && pO.test(e)) && e > -1 && e % 1 == 0 && e < t;
}
function Zd(e, t, n) {
  t == "__proto__" && Vo ? Vo(e, t, {
    configurable: !0,
    enumerable: !0,
    value: n,
    writable: !0
  }) : e[t] = n;
}
function ou(e, t) {
  return e === t || e !== e && t !== t;
}
var TO = Object.prototype, mO = TO.hasOwnProperty;
function uu(e, t, n) {
  var r = e[t];
  (!(mO.call(e, t) && ou(r, n)) || n === void 0 && !(t in e)) && Zd(e, t, n);
}
function El(e, t, n, r) {
  var s = !n;
  n || (n = {});
  for (var l = -1, o = t.length; ++l < o; ) {
    var u = t[l], h = void 0;
    h === void 0 && (h = e[u]), s ? Zd(n, u, h) : uu(n, u, h);
  }
  return n;
}
var $A = Math.max;
function SO(e, t, n) {
  return t = $A(t === void 0 ? e.length - 1 : t, 0), function() {
    for (var r = arguments, s = -1, l = $A(r.length - t, 0), o = Array(l); ++s < l; )
      o[s] = r[t + s];
    s = -1;
    for (var u = Array(t + 1); ++s < t; )
      u[s] = r[s];
    return u[t] = n(o), aO(e, this, u);
  };
}
function _u(e, t) {
  return fO(SO(e, t, Ps), e + "");
}
var bO = 9007199254740991;
function Jd(e) {
  return typeof e == "number" && e > -1 && e % 1 == 0 && e <= bO;
}
function yr(e) {
  return e != null && Jd(e.length) && !qe(e);
}
function Wo(e, t, n) {
  if (!kn(n))
    return !1;
  var r = typeof t;
  return (r == "number" ? yr(n) && lu(t, n.length) : r == "string" && t in n) ? ou(n[t], e) : !1;
}
function LO(e) {
  return _u(function(t, n) {
    var r = -1, s = n.length, l = s > 1 ? n[s - 1] : void 0, o = s > 2 ? n[2] : void 0;
    for (l = e.length > 3 && typeof l == "function" ? (s--, l) : void 0, o && Wo(n[0], n[1], o) && (l = s < 3 ? void 0 : l, s = 1), t = Object(t); ++r < s; ) {
      var u = n[r];
      u && e(t, u, r, l);
    }
    return t;
  });
}
var IO = Object.prototype;
function pl(e) {
  var t = e && e.constructor, n = typeof t == "function" && t.prototype || IO;
  return e === n;
}
function pp(e, t) {
  for (var n = -1, r = Array(e); ++n < e; )
    r[n] = t(n);
  return r;
}
var vO = "[object Arguments]";
function kA(e) {
  return or(e) && la(e) == vO;
}
var Tp = Object.prototype, yO = Tp.hasOwnProperty, gO = Tp.propertyIsEnumerable, du = kA(/* @__PURE__ */ function() {
  return arguments;
}()) ? kA : function(e) {
  return or(e) && yO.call(e, "callee") && !gO.call(e, "callee");
};
function RO() {
  return !1;
}
var mp = typeof exports == "object" && exports && !exports.nodeType && exports, UA = mp && typeof module == "object" && module && !module.nodeType && module, OO = UA && UA.exports === mp, HA = OO ? dr.Buffer : void 0, CO = HA ? HA.isBuffer : void 0, rl = CO || RO, NO = "[object Arguments]", DO = "[object Array]", BO = "[object Boolean]", wO = "[object Date]", PO = "[object Error]", xO = "[object Function]", FO = "[object Map]", MO = "[object Number]", qO = "[object Object]", $O = "[object RegExp]", kO = "[object Set]", UO = "[object String]", HO = "[object WeakMap]", VO = "[object ArrayBuffer]", WO = "[object DataView]", GO = "[object Float32Array]", KO = "[object Float64Array]", jO = "[object Int8Array]", zO = "[object Int16Array]", YO = "[object Int32Array]", XO = "[object Uint8Array]", ZO = "[object Uint8ClampedArray]", JO = "[object Uint16Array]", QO = "[object Uint32Array]", mt = {};
mt[GO] = mt[KO] = mt[jO] = mt[zO] = mt[YO] = mt[XO] = mt[ZO] = mt[JO] = mt[QO] = !0;
mt[NO] = mt[DO] = mt[VO] = mt[BO] = mt[WO] = mt[wO] = mt[PO] = mt[xO] = mt[FO] = mt[MO] = mt[qO] = mt[$O] = mt[kO] = mt[UO] = mt[HO] = !1;
function eC(e) {
  return or(e) && Jd(e.length) && !!mt[la(e)];
}
function cu(e) {
  return function(t) {
    return e(t);
  };
}
var Sp = typeof exports == "object" && exports && !exports.nodeType && exports, Zi = Sp && typeof module == "object" && module && !module.nodeType && module, tC = Zi && Zi.exports === Sp, Z_ = tC && dp.process, _i = function() {
  try {
    var e = Zi && Zi.require && Zi.require("util").types;
    return e || Z_ && Z_.binding && Z_.binding("util");
  } catch {
  }
}(), VA = _i && _i.isTypedArray, Qd = VA ? cu(VA) : eC, nC = Object.prototype, rC = nC.hasOwnProperty;
function bp(e, t) {
  var n = Te(e), r = !n && du(e), s = !n && !r && rl(e), l = !n && !r && !s && Qd(e), o = n || r || s || l, u = o ? pp(e.length, String) : [], h = u.length;
  for (var A in e)
    (t || rC.call(e, A)) && !(o && // Safari 9 has enumerable `arguments.length` in strict mode.
    (A == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    s && (A == "offset" || A == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    l && (A == "buffer" || A == "byteLength" || A == "byteOffset") || // Skip index properties.
    lu(A, h))) && u.push(A);
  return u;
}
function Lp(e, t) {
  return function(n) {
    return e(t(n));
  };
}
var aC = Lp(Object.keys, Object), sC = Object.prototype, iC = sC.hasOwnProperty;
function ec(e) {
  if (!pl(e))
    return aC(e);
  var t = [];
  for (var n in Object(e))
    iC.call(e, n) && n != "constructor" && t.push(n);
  return t;
}
function oa(e) {
  return yr(e) ? bp(e) : ec(e);
}
var lC = Object.prototype, oC = lC.hasOwnProperty, md = LO(function(e, t) {
  if (pl(t) || yr(t)) {
    El(t, oa(t), e);
    return;
  }
  for (var n in t)
    oC.call(t, n) && uu(e, n, t[n]);
});
function uC(e) {
  var t = [];
  if (e != null)
    for (var n in Object(e))
      t.push(n);
  return t;
}
var _C = Object.prototype, dC = _C.hasOwnProperty;
function cC(e) {
  if (!kn(e))
    return uC(e);
  var t = pl(e), n = [];
  for (var r in e)
    r == "constructor" && (t || !dC.call(e, r)) || n.push(r);
  return n;
}
function tc(e) {
  return yr(e) ? bp(e, !0) : cC(e);
}
var fC = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, hC = /^\w*$/;
function nc(e, t) {
  if (Te(e))
    return !1;
  var n = typeof e;
  return n == "number" || n == "symbol" || n == "boolean" || e == null || Ns(e) ? !0 : hC.test(e) || !fC.test(e) || t != null && e in Object(t);
}
var al = Fs(Object, "create");
function AC() {
  this.__data__ = al ? al(null) : {}, this.size = 0;
}
function EC(e) {
  var t = this.has(e) && delete this.__data__[e];
  return this.size -= t ? 1 : 0, t;
}
var pC = "__lodash_hash_undefined__", TC = Object.prototype, mC = TC.hasOwnProperty;
function SC(e) {
  var t = this.__data__;
  if (al) {
    var n = t[e];
    return n === pC ? void 0 : n;
  }
  return mC.call(t, e) ? t[e] : void 0;
}
var bC = Object.prototype, LC = bC.hasOwnProperty;
function IC(e) {
  var t = this.__data__;
  return al ? t[e] !== void 0 : LC.call(t, e);
}
var vC = "__lodash_hash_undefined__";
function yC(e, t) {
  var n = this.__data__;
  return this.size += this.has(e) ? 0 : 1, n[e] = al && t === void 0 ? vC : t, this;
}
function Ds(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
Ds.prototype.clear = AC;
Ds.prototype.delete = EC;
Ds.prototype.get = SC;
Ds.prototype.has = IC;
Ds.prototype.set = yC;
function gC() {
  this.__data__ = [], this.size = 0;
}
function fu(e, t) {
  for (var n = e.length; n--; )
    if (ou(e[n][0], t))
      return n;
  return -1;
}
var RC = Array.prototype, OC = RC.splice;
function CC(e) {
  var t = this.__data__, n = fu(t, e);
  if (n < 0)
    return !1;
  var r = t.length - 1;
  return n == r ? t.pop() : OC.call(t, n, 1), --this.size, !0;
}
function NC(e) {
  var t = this.__data__, n = fu(t, e);
  return n < 0 ? void 0 : t[n][1];
}
function DC(e) {
  return fu(this.__data__, e) > -1;
}
function BC(e, t) {
  var n = this.__data__, r = fu(n, e);
  return r < 0 ? (++this.size, n.push([e, t])) : n[r][1] = t, this;
}
function ua(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
ua.prototype.clear = gC;
ua.prototype.delete = CC;
ua.prototype.get = NC;
ua.prototype.has = DC;
ua.prototype.set = BC;
var sl = Fs(dr, "Map");
function wC() {
  this.size = 0, this.__data__ = {
    hash: new Ds(),
    map: new (sl || ua)(),
    string: new Ds()
  };
}
function PC(e) {
  var t = typeof e;
  return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null;
}
function hu(e, t) {
  var n = e.__data__;
  return PC(t) ? n[typeof t == "string" ? "string" : "hash"] : n.map;
}
function xC(e) {
  var t = hu(this, e).delete(e);
  return this.size -= t ? 1 : 0, t;
}
function FC(e) {
  return hu(this, e).get(e);
}
function MC(e) {
  return hu(this, e).has(e);
}
function qC(e, t) {
  var n = hu(this, e), r = n.size;
  return n.set(e, t), this.size += n.size == r ? 0 : 1, this;
}
function _a(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
_a.prototype.clear = wC;
_a.prototype.delete = xC;
_a.prototype.get = FC;
_a.prototype.has = MC;
_a.prototype.set = qC;
var $C = "Expected a function";
function rc(e, t) {
  if (typeof e != "function" || t != null && typeof t != "function")
    throw new TypeError($C);
  var n = function() {
    var r = arguments, s = t ? t.apply(this, r) : r[0], l = n.cache;
    if (l.has(s))
      return l.get(s);
    var o = e.apply(this, r);
    return n.cache = l.set(s, o) || l, o;
  };
  return n.cache = new (rc.Cache || _a)(), n;
}
rc.Cache = _a;
var kC = 500;
function UC(e) {
  var t = rc(e, function(r) {
    return n.size === kC && n.clear(), r;
  }), n = t.cache;
  return t;
}
var HC = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, VC = /\\(\\)?/g, WC = UC(function(e) {
  var t = [];
  return e.charCodeAt(0) === 46 && t.push(""), e.replace(HC, function(n, r, s, l) {
    t.push(s ? l.replace(VC, "$1") : r || n);
  }), t;
});
function kt(e) {
  return e == null ? "" : Al(e);
}
function ac(e, t) {
  return Te(e) ? e : nc(e, t) ? [e] : WC(kt(e));
}
var GC = 1 / 0;
function Tl(e) {
  if (typeof e == "string" || Ns(e))
    return e;
  var t = e + "";
  return t == "0" && 1 / e == -GC ? "-0" : t;
}
function sc(e, t) {
  t = ac(t, e);
  for (var n = 0, r = t.length; e != null && n < r; )
    e = e[Tl(t[n++])];
  return n && n == r ? e : void 0;
}
function fe(e, t, n) {
  var r = e == null ? void 0 : sc(e, t);
  return r === void 0 ? n : r;
}
function ic(e, t) {
  for (var n = -1, r = t.length, s = e.length; ++n < r; )
    e[s + n] = t[n];
  return e;
}
var WA = lr ? lr.isConcatSpreadable : void 0;
function KC(e) {
  return Te(e) || du(e) || !!(WA && e && e[WA]);
}
function lc(e, t, n, r, s) {
  var l = -1, o = e.length;
  for (n || (n = KC), s || (s = []); ++l < o; ) {
    var u = e[l];
    n(u) ? ic(s, u) : r || (s[s.length] = u);
  }
  return s;
}
var oc = Lp(Object.getPrototypeOf, Object), jC = "[object Object]", zC = Function.prototype, YC = Object.prototype, Ip = zC.toString, XC = YC.hasOwnProperty, ZC = Ip.call(Object);
function nt(e) {
  if (!or(e) || la(e) != jC)
    return !1;
  var t = oc(e);
  if (t === null)
    return !0;
  var n = XC.call(t, "constructor") && t.constructor;
  return typeof n == "function" && n instanceof n && Ip.call(n) == ZC;
}
function vp(e, t, n) {
  var r = -1, s = e.length;
  t < 0 && (t = -t > s ? 0 : s + t), n = n > s ? s : n, n < 0 && (n += s), s = t > n ? 0 : n - t >>> 0, t >>>= 0;
  for (var l = Array(s); ++r < s; )
    l[r] = e[r + t];
  return l;
}
function yp(e, t, n) {
  var r = e.length;
  return n = n === void 0 ? r : n, !t && n >= r ? e : vp(e, t, n);
}
var JC = "\\ud800-\\udfff", QC = "\\u0300-\\u036f", eN = "\\ufe20-\\ufe2f", tN = "\\u20d0-\\u20ff", nN = QC + eN + tN, rN = "\\ufe0e\\ufe0f", aN = "\\u200d", sN = RegExp("[" + aN + JC + nN + rN + "]");
function Au(e) {
  return sN.test(e);
}
function iN(e) {
  return e.split("");
}
var gp = "\\ud800-\\udfff", lN = "\\u0300-\\u036f", oN = "\\ufe20-\\ufe2f", uN = "\\u20d0-\\u20ff", _N = lN + oN + uN, dN = "\\ufe0e\\ufe0f", cN = "[" + gp + "]", Sd = "[" + _N + "]", bd = "\\ud83c[\\udffb-\\udfff]", fN = "(?:" + Sd + "|" + bd + ")", Rp = "[^" + gp + "]", Op = "(?:\\ud83c[\\udde6-\\uddff]){2}", Cp = "[\\ud800-\\udbff][\\udc00-\\udfff]", hN = "\\u200d", Np = fN + "?", Dp = "[" + dN + "]?", AN = "(?:" + hN + "(?:" + [Rp, Op, Cp].join("|") + ")" + Dp + Np + ")*", EN = Dp + Np + AN, pN = "(?:" + [Rp + Sd + "?", Sd, Op, Cp, cN].join("|") + ")", TN = RegExp(bd + "(?=" + bd + ")|" + pN + EN, "g");
function mN(e) {
  return e.match(TN) || [];
}
function Bp(e) {
  return Au(e) ? mN(e) : iN(e);
}
function SN(e) {
  return function(t) {
    t = kt(t);
    var n = Au(t) ? Bp(t) : void 0, r = n ? n[0] : t.charAt(0), s = n ? yp(n, 1).join("") : t.slice(1);
    return r[e]() + s;
  };
}
var wp = SN("toUpperCase");
function bN(e) {
  return wp(kt(e).toLowerCase());
}
function LN(e, t, n, r) {
  var s = -1, l = e == null ? 0 : e.length;
  for (r && l && (n = e[++s]); ++s < l; )
    n = t(n, e[s], s, e);
  return n;
}
var IN = dr.isFinite, vN = Math.min;
function Pp(e) {
  var t = Math[e];
  return function(n, r) {
    if (n = ui(n), r = r == null ? 0 : vN(Wr(r), 292), r && IN(n)) {
      var s = (kt(n) + "e").split("e"), l = t(s[0] + "e" + (+s[1] + r));
      return s = (kt(l) + "e").split("e"), +(s[0] + "e" + (+s[1] - r));
    }
    return t(n);
  };
}
var yN = Pp("ceil");
function xp(e, t, n) {
  return e === e && (n !== void 0 && (e = e <= n ? e : n), e = e >= t ? e : t), e;
}
function gN() {
  this.__data__ = new ua(), this.size = 0;
}
function RN(e) {
  var t = this.__data__, n = t.delete(e);
  return this.size = t.size, n;
}
function ON(e) {
  return this.__data__.get(e);
}
function CN(e) {
  return this.__data__.has(e);
}
var NN = 200;
function DN(e, t) {
  var n = this.__data__;
  if (n instanceof ua) {
    var r = n.__data__;
    if (!sl || r.length < NN - 1)
      return r.push([e, t]), this.size = ++n.size, this;
    n = this.__data__ = new _a(r);
  }
  return n.set(e, t), this.size = n.size, this;
}
function Mr(e) {
  var t = this.__data__ = new ua(e);
  this.size = t.size;
}
Mr.prototype.clear = gN;
Mr.prototype.delete = RN;
Mr.prototype.get = ON;
Mr.prototype.has = CN;
Mr.prototype.set = DN;
function BN(e, t) {
  return e && El(t, oa(t), e);
}
function wN(e, t) {
  return e && El(t, tc(t), e);
}
var Fp = typeof exports == "object" && exports && !exports.nodeType && exports, GA = Fp && typeof module == "object" && module && !module.nodeType && module, PN = GA && GA.exports === Fp, KA = PN ? dr.Buffer : void 0, jA = KA ? KA.allocUnsafe : void 0;
function xN(e, t) {
  if (t)
    return e.slice();
  var n = e.length, r = jA ? jA(n) : new e.constructor(n);
  return e.copy(r), r;
}
function Mp(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, s = 0, l = []; ++n < r; ) {
    var o = e[n];
    t(o, n, e) && (l[s++] = o);
  }
  return l;
}
function qp() {
  return [];
}
var FN = Object.prototype, MN = FN.propertyIsEnumerable, zA = Object.getOwnPropertySymbols, uc = zA ? function(e) {
  return e == null ? [] : (e = Object(e), Mp(zA(e), function(t) {
    return MN.call(e, t);
  }));
} : qp;
function qN(e, t) {
  return El(e, uc(e), t);
}
var $N = Object.getOwnPropertySymbols, $p = $N ? function(e) {
  for (var t = []; e; )
    ic(t, uc(e)), e = oc(e);
  return t;
} : qp;
function kN(e, t) {
  return El(e, $p(e), t);
}
function kp(e, t, n) {
  var r = t(e);
  return Te(e) ? r : ic(r, n(e));
}
function Ld(e) {
  return kp(e, oa, uc);
}
function UN(e) {
  return kp(e, tc, $p);
}
var Id = Fs(dr, "DataView"), vd = Fs(dr, "Promise"), ii = Fs(dr, "Set"), YA = "[object Map]", HN = "[object Object]", XA = "[object Promise]", ZA = "[object Set]", JA = "[object WeakMap]", QA = "[object DataView]", VN = xs(Id), WN = xs(sl), GN = xs(vd), KN = xs(ii), jN = xs(Td), Fn = la;
(Id && Fn(new Id(new ArrayBuffer(1))) != QA || sl && Fn(new sl()) != YA || vd && Fn(vd.resolve()) != XA || ii && Fn(new ii()) != ZA || Td && Fn(new Td()) != JA) && (Fn = function(e) {
  var t = la(e), n = t == HN ? e.constructor : void 0, r = n ? xs(n) : "";
  if (r)
    switch (r) {
      case VN:
        return QA;
      case WN:
        return YA;
      case GN:
        return XA;
      case KN:
        return ZA;
      case jN:
        return JA;
    }
  return t;
});
var zN = Object.prototype, YN = zN.hasOwnProperty;
function XN(e) {
  var t = e.length, n = new e.constructor(t);
  return t && typeof e[0] == "string" && YN.call(e, "index") && (n.index = e.index, n.input = e.input), n;
}
var Go = dr.Uint8Array;
function _c(e) {
  var t = new e.constructor(e.byteLength);
  return new Go(t).set(new Go(e)), t;
}
function ZN(e, t) {
  var n = t ? _c(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.byteLength);
}
var JN = /\w*$/;
function QN(e) {
  var t = new e.constructor(e.source, JN.exec(e));
  return t.lastIndex = e.lastIndex, t;
}
var eE = lr ? lr.prototype : void 0, tE = eE ? eE.valueOf : void 0;
function eD(e) {
  return tE ? Object(tE.call(e)) : {};
}
function tD(e, t) {
  var n = t ? _c(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.length);
}
var nD = "[object Boolean]", rD = "[object Date]", aD = "[object Map]", sD = "[object Number]", iD = "[object RegExp]", lD = "[object Set]", oD = "[object String]", uD = "[object Symbol]", _D = "[object ArrayBuffer]", dD = "[object DataView]", cD = "[object Float32Array]", fD = "[object Float64Array]", hD = "[object Int8Array]", AD = "[object Int16Array]", ED = "[object Int32Array]", pD = "[object Uint8Array]", TD = "[object Uint8ClampedArray]", mD = "[object Uint16Array]", SD = "[object Uint32Array]";
function bD(e, t, n) {
  var r = e.constructor;
  switch (t) {
    case _D:
      return _c(e);
    case nD:
    case rD:
      return new r(+e);
    case dD:
      return ZN(e, n);
    case cD:
    case fD:
    case hD:
    case AD:
    case ED:
    case pD:
    case TD:
    case mD:
    case SD:
      return tD(e, n);
    case aD:
      return new r();
    case sD:
    case oD:
      return new r(e);
    case iD:
      return QN(e);
    case lD:
      return new r();
    case uD:
      return eD(e);
  }
}
function LD(e) {
  return typeof e.constructor == "function" && !pl(e) ? rO(oc(e)) : {};
}
var ID = "[object Map]";
function vD(e) {
  return or(e) && Fn(e) == ID;
}
var nE = _i && _i.isMap, yD = nE ? cu(nE) : vD, gD = "[object Set]";
function RD(e) {
  return or(e) && Fn(e) == gD;
}
var rE = _i && _i.isSet, OD = rE ? cu(rE) : RD, CD = 1, ND = 2, DD = 4, Up = "[object Arguments]", BD = "[object Array]", wD = "[object Boolean]", PD = "[object Date]", xD = "[object Error]", Hp = "[object Function]", FD = "[object GeneratorFunction]", MD = "[object Map]", qD = "[object Number]", Vp = "[object Object]", $D = "[object RegExp]", kD = "[object Set]", UD = "[object String]", HD = "[object Symbol]", VD = "[object WeakMap]", WD = "[object ArrayBuffer]", GD = "[object DataView]", KD = "[object Float32Array]", jD = "[object Float64Array]", zD = "[object Int8Array]", YD = "[object Int16Array]", XD = "[object Int32Array]", ZD = "[object Uint8Array]", JD = "[object Uint8ClampedArray]", QD = "[object Uint16Array]", eB = "[object Uint32Array]", pt = {};
pt[Up] = pt[BD] = pt[WD] = pt[GD] = pt[wD] = pt[PD] = pt[KD] = pt[jD] = pt[zD] = pt[YD] = pt[XD] = pt[MD] = pt[qD] = pt[Vp] = pt[$D] = pt[kD] = pt[UD] = pt[HD] = pt[ZD] = pt[JD] = pt[QD] = pt[eB] = !0;
pt[xD] = pt[Hp] = pt[VD] = !1;
function Ji(e, t, n, r, s, l) {
  var o, u = t & CD, h = t & ND, A = t & DD;
  if (o !== void 0)
    return o;
  if (!kn(e))
    return e;
  var E = Te(e);
  if (E) {
    if (o = XN(e), !u)
      return iO(e, o);
  } else {
    var p = Fn(e), T = p == Hp || p == FD;
    if (rl(e))
      return xN(e, u);
    if (p == Vp || p == Up || T && !s) {
      if (o = h || T ? {} : LD(e), !u)
        return h ? kN(e, wN(o, e)) : qN(e, BN(o, e));
    } else {
      if (!pt[p])
        return s ? e : {};
      o = bD(e, p, u);
    }
  }
  l || (l = new Mr());
  var S = l.get(e);
  if (S)
    return S;
  l.set(e, o), OD(e) ? e.forEach(function(I) {
    o.add(Ji(I, t, n, I, e, l));
  }) : yD(e) && e.forEach(function(I, v) {
    o.set(v, Ji(I, t, n, v, e, l));
  });
  var b = A ? h ? UN : Ld : h ? tc : oa, L = E ? void 0 : b(e);
  return fp(L || e, function(I, v) {
    L && (v = I, I = e[v]), uu(o, v, Ji(I, t, n, v, e, l));
  }), o;
}
var tB = 4;
function Wp(e) {
  return Ji(e, tB);
}
var nB = 1, rB = 4;
function pe(e) {
  return Ji(e, nB | rB);
}
var aB = "__lodash_hash_undefined__";
function sB(e) {
  return this.__data__.set(e, aB), this;
}
function iB(e) {
  return this.__data__.has(e);
}
function di(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.__data__ = new _a(); ++t < n; )
    this.add(e[t]);
}
di.prototype.add = di.prototype.push = sB;
di.prototype.has = iB;
function lB(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r; )
    if (t(e[n], n, e))
      return !0;
  return !1;
}
function dc(e, t) {
  return e.has(t);
}
var oB = 1, uB = 2;
function Gp(e, t, n, r, s, l) {
  var o = n & oB, u = e.length, h = t.length;
  if (u != h && !(o && h > u))
    return !1;
  var A = l.get(e), E = l.get(t);
  if (A && E)
    return A == t && E == e;
  var p = -1, T = !0, S = n & uB ? new di() : void 0;
  for (l.set(e, t), l.set(t, e); ++p < u; ) {
    var b = e[p], L = t[p];
    if (r)
      var I = o ? r(L, b, p, t, e, l) : r(b, L, p, e, t, l);
    if (I !== void 0) {
      if (I)
        continue;
      T = !1;
      break;
    }
    if (S) {
      if (!lB(t, function(v, R) {
        if (!dc(S, R) && (b === v || s(b, v, n, r, l)))
          return S.push(R);
      })) {
        T = !1;
        break;
      }
    } else if (!(b === L || s(b, L, n, r, l))) {
      T = !1;
      break;
    }
  }
  return l.delete(e), l.delete(t), T;
}
function _B(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r, s) {
    n[++t] = [s, r];
  }), n;
}
function cc(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r) {
    n[++t] = r;
  }), n;
}
var dB = 1, cB = 2, fB = "[object Boolean]", hB = "[object Date]", AB = "[object Error]", EB = "[object Map]", pB = "[object Number]", TB = "[object RegExp]", mB = "[object Set]", SB = "[object String]", bB = "[object Symbol]", LB = "[object ArrayBuffer]", IB = "[object DataView]", aE = lr ? lr.prototype : void 0, J_ = aE ? aE.valueOf : void 0;
function vB(e, t, n, r, s, l, o) {
  switch (n) {
    case IB:
      if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset)
        return !1;
      e = e.buffer, t = t.buffer;
    case LB:
      return !(e.byteLength != t.byteLength || !l(new Go(e), new Go(t)));
    case fB:
    case hB:
    case pB:
      return ou(+e, +t);
    case AB:
      return e.name == t.name && e.message == t.message;
    case TB:
    case SB:
      return e == t + "";
    case EB:
      var u = _B;
    case mB:
      var h = r & dB;
      if (u || (u = cc), e.size != t.size && !h)
        return !1;
      var A = o.get(e);
      if (A)
        return A == t;
      r |= cB, o.set(e, t);
      var E = Gp(u(e), u(t), r, s, l, o);
      return o.delete(e), E;
    case bB:
      if (J_)
        return J_.call(e) == J_.call(t);
  }
  return !1;
}
var yB = 1, gB = Object.prototype, RB = gB.hasOwnProperty;
function OB(e, t, n, r, s, l) {
  var o = n & yB, u = Ld(e), h = u.length, A = Ld(t), E = A.length;
  if (h != E && !o)
    return !1;
  for (var p = h; p--; ) {
    var T = u[p];
    if (!(o ? T in t : RB.call(t, T)))
      return !1;
  }
  var S = l.get(e), b = l.get(t);
  if (S && b)
    return S == t && b == e;
  var L = !0;
  l.set(e, t), l.set(t, e);
  for (var I = o; ++p < h; ) {
    T = u[p];
    var v = e[T], R = t[T];
    if (r)
      var g = o ? r(R, v, T, t, e, l) : r(v, R, T, e, t, l);
    if (!(g === void 0 ? v === R || s(v, R, n, r, l) : g)) {
      L = !1;
      break;
    }
    I || (I = T == "constructor");
  }
  if (L && !I) {
    var D = e.constructor, w = t.constructor;
    D != w && "constructor" in e && "constructor" in t && !(typeof D == "function" && D instanceof D && typeof w == "function" && w instanceof w) && (L = !1);
  }
  return l.delete(e), l.delete(t), L;
}
var CB = 1, sE = "[object Arguments]", iE = "[object Array]", bo = "[object Object]", NB = Object.prototype, lE = NB.hasOwnProperty;
function DB(e, t, n, r, s, l) {
  var o = Te(e), u = Te(t), h = o ? iE : Fn(e), A = u ? iE : Fn(t);
  h = h == sE ? bo : h, A = A == sE ? bo : A;
  var E = h == bo, p = A == bo, T = h == A;
  if (T && rl(e)) {
    if (!rl(t))
      return !1;
    o = !0, E = !1;
  }
  if (T && !E)
    return l || (l = new Mr()), o || Qd(e) ? Gp(e, t, n, r, s, l) : vB(e, t, h, n, r, s, l);
  if (!(n & CB)) {
    var S = E && lE.call(e, "__wrapped__"), b = p && lE.call(t, "__wrapped__");
    if (S || b) {
      var L = S ? e.value() : e, I = b ? t.value() : t;
      return l || (l = new Mr()), s(L, I, n, r, l);
    }
  }
  return T ? (l || (l = new Mr()), OB(e, t, n, r, s, l)) : !1;
}
function Eu(e, t, n, r, s) {
  return e === t ? !0 : e == null || t == null || !or(e) && !or(t) ? e !== e && t !== t : DB(e, t, n, r, Eu, s);
}
var BB = 1, wB = 2;
function PB(e, t, n, r) {
  var s = n.length, l = s;
  if (e == null)
    return !l;
  for (e = Object(e); s--; ) {
    var o = n[s];
    if (o[2] ? o[1] !== e[o[0]] : !(o[0] in e))
      return !1;
  }
  for (; ++s < l; ) {
    o = n[s];
    var u = o[0], h = e[u], A = o[1];
    if (o[2]) {
      if (h === void 0 && !(u in e))
        return !1;
    } else {
      var E = new Mr(), p;
      if (!(p === void 0 ? Eu(A, h, BB | wB, r, E) : p))
        return !1;
    }
  }
  return !0;
}
function Kp(e) {
  return e === e && !kn(e);
}
function xB(e) {
  for (var t = oa(e), n = t.length; n--; ) {
    var r = t[n], s = e[r];
    t[n] = [r, s, Kp(s)];
  }
  return t;
}
function jp(e, t) {
  return function(n) {
    return n == null ? !1 : n[e] === t && (t !== void 0 || e in Object(n));
  };
}
function FB(e) {
  var t = xB(e);
  return t.length == 1 && t[0][2] ? jp(t[0][0], t[0][1]) : function(n) {
    return n === e || PB(n, e, t);
  };
}
function MB(e, t) {
  return e != null && t in Object(e);
}
function qB(e, t, n) {
  t = ac(t, e);
  for (var r = -1, s = t.length, l = !1; ++r < s; ) {
    var o = Tl(t[r]);
    if (!(l = e != null && n(e, o)))
      break;
    e = e[o];
  }
  return l || ++r != s ? l : (s = e == null ? 0 : e.length, !!s && Jd(s) && lu(o, s) && (Te(e) || du(e)));
}
function $B(e, t) {
  return e != null && qB(e, t, MB);
}
var kB = 1, UB = 2;
function HB(e, t) {
  return nc(e) && Kp(t) ? jp(Tl(e), t) : function(n) {
    var r = fe(n, e);
    return r === void 0 && r === t ? $B(n, e) : Eu(t, r, kB | UB);
  };
}
function zp(e) {
  return function(t) {
    return t == null ? void 0 : t[e];
  };
}
function VB(e) {
  return function(t) {
    return sc(t, e);
  };
}
function WB(e) {
  return nc(e) ? zp(Tl(e)) : VB(e);
}
function da(e) {
  return typeof e == "function" ? e : e == null ? Ps : typeof e == "object" ? Te(e) ? HB(e[0], e[1]) : FB(e) : WB(e);
}
function GB(e, t, n, r) {
  for (var s = -1, l = e == null ? 0 : e.length; ++s < l; ) {
    var o = e[s];
    t(r, o, n(o), e);
  }
  return r;
}
function Yp(e) {
  return function(t, n, r) {
    for (var s = -1, l = Object(t), o = r(t), u = o.length; u--; ) {
      var h = o[e ? u : ++s];
      if (n(l[h], h, l) === !1)
        break;
    }
    return t;
  };
}
var KB = Yp();
function jB(e, t) {
  return e && KB(e, t, oa);
}
function Xp(e, t) {
  return function(n, r) {
    if (n == null)
      return n;
    if (!yr(n))
      return e(n, r);
    for (var s = n.length, l = t ? s : -1, o = Object(n); (t ? l-- : ++l < s) && r(o[l], l, o) !== !1; )
      ;
    return n;
  };
}
var Ei = Xp(jB);
function zB(e, t, n, r) {
  return Ei(e, function(s, l, o) {
    t(r, s, n(s), o);
  }), r;
}
function YB(e, t) {
  return function(n, r) {
    var s = Te(n) ? GB : zB, l = {};
    return s(n, e, da(r), l);
  };
}
var Q_ = function() {
  return dr.Date.now();
}, XB = "Expected a function", ZB = Math.max, JB = Math.min;
function il(e, t, n) {
  var r, s, l, o, u, h, A = 0, E = !1, p = !1, T = !0;
  if (typeof e != "function")
    throw new TypeError(XB);
  t = ui(t) || 0, kn(n) && (E = !!n.leading, p = "maxWait" in n, l = p ? ZB(ui(n.maxWait) || 0, t) : l, T = "trailing" in n ? !!n.trailing : T);
  function S(M) {
    var P = r, F = s;
    return r = s = void 0, A = M, o = e.apply(F, P), o;
  }
  function b(M) {
    return A = M, u = setTimeout(v, t), E ? S(M) : o;
  }
  function L(M) {
    var P = M - h, F = M - A, C = t - P;
    return p ? JB(C, l - F) : C;
  }
  function I(M) {
    var P = M - h, F = M - A;
    return h === void 0 || P >= t || P < 0 || p && F >= l;
  }
  function v() {
    var M = Q_();
    if (I(M))
      return R(M);
    u = setTimeout(v, L(M));
  }
  function R(M) {
    return u = void 0, T && r ? S(M) : (r = s = void 0, o);
  }
  function g() {
    u !== void 0 && clearTimeout(u), A = 0, r = h = s = u = void 0;
  }
  function D() {
    return u === void 0 ? o : R(Q_());
  }
  function w() {
    var M = Q_(), P = I(M);
    if (r = arguments, s = this, h = M, P) {
      if (u === void 0)
        return b(h);
      if (p)
        return clearTimeout(u), u = setTimeout(v, t), S(h);
    }
    return u === void 0 && (u = setTimeout(v, t)), o;
  }
  return w.cancel = g, w.flush = D, w;
}
function yd(e) {
  return or(e) && yr(e);
}
var QB = 200;
function ew(e, t, n, r) {
  var s = -1, l = Ep, o = !0, u = e.length, h = [], A = t.length;
  if (!u)
    return h;
  t.length >= QB && (l = dc, o = !1, t = new di(t));
  e:
    for (; ++s < u; ) {
      var E = e[s], p = E;
      if (E = E !== 0 ? E : 0, o && p === p) {
        for (var T = A; T--; )
          if (t[T] === p)
            continue e;
        h.push(E);
      } else l(t, p, r) || h.push(E);
    }
  return h;
}
var tw = _u(function(e, t) {
  return yd(e) ? ew(e, lc(t, 1, yd, !0)) : [];
});
function ci(e) {
  var t = e == null ? 0 : e.length;
  return t ? e[t - 1] : void 0;
}
function fc(e) {
  return typeof e == "function" ? e : Ps;
}
function z(e, t) {
  var n = Te(e) ? fp : Ei;
  return n(e, fc(t));
}
function nw(e, t) {
  for (var n = e == null ? 0 : e.length; n-- && t(e[n], n, e) !== !1; )
    ;
  return e;
}
var rw = Yp(!0);
function aw(e, t) {
  return e && rw(e, t, oa);
}
var sw = Xp(aw, !0);
function iw(e, t) {
  var n = Te(e) ? nw : sw;
  return n(e, fc(t));
}
function lw(e, t, n) {
  e = kt(e), t = Al(t);
  var r = e.length;
  n = n === void 0 ? r : xp(Wr(n), 0, r);
  var s = n;
  return n -= t.length, n >= 0 && e.slice(n, s) == t;
}
var Zp = /[\\^$.*+?()[\]{}|]/g, ow = RegExp(Zp.source);
function pu(e) {
  return e = kt(e), e && ow.test(e) ? e.replace(Zp, "\\$&") : e;
}
function uw(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r; )
    if (!t(e[n], n, e))
      return !1;
  return !0;
}
function _w(e, t) {
  var n = !0;
  return Ei(e, function(r, s, l) {
    return n = !!t(r, s, l), n;
  }), n;
}
function Jp(e, t, n) {
  var r = Te(e) ? uw : _w;
  return r(e, da(t));
}
function dw(e, t) {
  var n = [];
  return Ei(e, function(r, s, l) {
    t(r, s, l) && n.push(r);
  }), n;
}
function wt(e, t) {
  var n = Te(e) ? Mp : dw;
  return n(e, da(t));
}
function cw(e) {
  return function(t, n, r) {
    var s = Object(t);
    if (!yr(t)) {
      var l = da(n);
      t = oa(t), n = function(u) {
        return l(s[u], u, s);
      };
    }
    var o = e(t, n, r);
    return o > -1 ? s[l ? t[o] : o] : void 0;
  };
}
var fw = Math.max;
function Qp(e, t, n) {
  var r = e == null ? 0 : e.length;
  if (!r)
    return -1;
  var s = n == null ? 0 : Wr(n);
  return s < 0 && (s = fw(r + s, 0)), hp(e, da(t), s);
}
var hc = cw(Qp);
function eT(e, t) {
  var n = -1, r = yr(e) ? Array(e.length) : [];
  return Ei(e, function(s, l, o) {
    r[++n] = t(s, l, o);
  }), r;
}
function Pn(e, t) {
  var n = Te(e) ? si : eT;
  return n(e, da(t));
}
function hw(e, t) {
  return e > t;
}
var Aw = "[object String]";
function it(e) {
  return typeof e == "string" || !Te(e) && or(e) && la(e) == Aw;
}
function Ew(e, t) {
  return si(t, function(n) {
    return e[n];
  });
}
function Ac(e) {
  return e == null ? [] : Ew(e, oa(e));
}
var pw = Math.max;
function gd(e, t, n, r) {
  e = yr(e) ? e : Ac(e), n = n && !r ? Wr(n) : 0;
  var s = e.length;
  return n < 0 && (n = pw(s + n, 0)), it(e) ? n <= s && e.indexOf(t, n) > -1 : !!s && Ap(e, t, n) > -1;
}
var Tw = "[object Map]", mw = "[object Set]", Sw = Object.prototype, bw = Sw.hasOwnProperty;
function hn(e) {
  if (e == null)
    return !0;
  if (yr(e) && (Te(e) || typeof e == "string" || typeof e.splice == "function" || rl(e) || Qd(e) || du(e)))
    return !e.length;
  var t = Fn(e);
  if (t == Tw || t == mw)
    return !e.size;
  if (pl(e))
    return !ec(e).length;
  for (var n in e)
    if (bw.call(e, n))
      return !1;
  return !0;
}
function Ec(e, t) {
  return Eu(e, t);
}
function ca(e) {
  return typeof e == "number" && e == Wr(e);
}
var Lw = "[object Number]";
function yn(e) {
  return typeof e == "number" || or(e) && la(e) == Lw;
}
function Iw(e) {
  return yn(e) && e != +e;
}
function ie(e) {
  return e == null;
}
function we(e) {
  return e === void 0;
}
var Pa = YB(function(e, t, n) {
  Zd(e, n, t);
});
function vw(e, t) {
  return e < t;
}
function tT(e, t, n) {
  for (var r = -1, s = e.length; ++r < s; ) {
    var l = e[r], o = t(l);
    if (o != null && (u === void 0 ? o === o && !Ns(o) : n(o, u)))
      var u = o, h = l;
  }
  return h;
}
function yw(e) {
  return e.length ? tT(e, Ps, hw) : void 0;
}
function gw(e) {
  return e && e.length ? tT(e, Ps, vw) : void 0;
}
function Rw(e, t, n, r) {
  if (!kn(e))
    return e;
  t = ac(t, e);
  for (var s = -1, l = t.length, o = l - 1, u = e; u != null && ++s < l; ) {
    var h = Tl(t[s]), A = n;
    if (h === "__proto__" || h === "constructor" || h === "prototype")
      return e;
    if (s != o) {
      var E = u[h];
      A = void 0, A === void 0 && (A = kn(E) ? E : lu(t[s + 1]) ? [] : {});
    }
    uu(u, h, A), u = u[h];
  }
  return e;
}
function Ow(e, t) {
  var n = e.length;
  for (e.sort(t); n--; )
    e[n] = e[n].value;
  return e;
}
function Cw(e, t) {
  if (e !== t) {
    var n = e !== void 0, r = e === null, s = e === e, l = Ns(e), o = t !== void 0, u = t === null, h = t === t, A = Ns(t);
    if (!u && !A && !l && e > t || l && o && h && !u && !A || r && o && h || !n && h || !s)
      return 1;
    if (!r && !l && !A && e < t || A && n && s && !r && !l || u && n && s || !o && s || !h)
      return -1;
  }
  return 0;
}
function Nw(e, t, n) {
  for (var r = -1, s = e.criteria, l = t.criteria, o = s.length, u = n.length; ++r < o; ) {
    var h = Cw(s[r], l[r]);
    if (h) {
      if (r >= u)
        return h;
      var A = n[r];
      return h * (A == "desc" ? -1 : 1);
    }
  }
  return e.index - t.index;
}
function nT(e, t, n) {
  t.length ? t = si(t, function(l) {
    return Te(l) ? function(o) {
      return sc(o, l.length === 1 ? l[0] : l);
    } : l;
  }) : t = [Ps];
  var r = -1;
  t = si(t, cu(da));
  var s = eT(e, function(l, o, u) {
    var h = si(t, function(A) {
      return A(l);
    });
    return { criteria: h, index: ++r, value: l };
  });
  return Ow(s, function(l, o) {
    return Nw(l, o, n);
  });
}
function pc(e, t, n, r) {
  return e == null ? [] : (Te(t) || (t = t == null ? [] : [t]), n = n, Te(n) || (n = n == null ? [] : [n]), nT(e, t, n));
}
var Dw = 9007199254740991, Bw = Math.floor;
function Rd(e, t) {
  var n = "";
  if (!e || t < 1 || t > Dw)
    return n;
  do
    t % 2 && (n += e), t = Bw(t / 2), t && (e += e);
  while (t);
  return n;
}
var ww = zp("length"), rT = "\\ud800-\\udfff", Pw = "\\u0300-\\u036f", xw = "\\ufe20-\\ufe2f", Fw = "\\u20d0-\\u20ff", Mw = Pw + xw + Fw, qw = "\\ufe0e\\ufe0f", $w = "[" + rT + "]", Od = "[" + Mw + "]", Cd = "\\ud83c[\\udffb-\\udfff]", kw = "(?:" + Od + "|" + Cd + ")", aT = "[^" + rT + "]", sT = "(?:\\ud83c[\\udde6-\\uddff]){2}", iT = "[\\ud800-\\udbff][\\udc00-\\udfff]", Uw = "\\u200d", lT = kw + "?", oT = "[" + qw + "]?", Hw = "(?:" + Uw + "(?:" + [aT, sT, iT].join("|") + ")" + oT + lT + ")*", Vw = oT + lT + Hw, Ww = "(?:" + [aT + Od + "?", Od, sT, iT, $w].join("|") + ")", oE = RegExp(Cd + "(?=" + Cd + ")|" + Ww + Vw, "g");
function Gw(e) {
  for (var t = oE.lastIndex = 0; oE.test(e); )
    ++t;
  return t;
}
function Tc(e) {
  return Au(e) ? Gw(e) : ww(e);
}
var Kw = Math.ceil;
function jw(e, t) {
  t = t === void 0 ? " " : Al(t);
  var n = t.length;
  if (n < 2)
    return n ? Rd(t, e) : t;
  var r = Rd(t, Kw(e / Tc(t)));
  return Au(t) ? yp(Bp(r), 0, e).join("") : r.slice(0, e);
}
function zw(e, t, n) {
  e = kt(e), t = Wr(t);
  var r = t ? Tc(e) : 0;
  return t && r < t ? jw(t - r, n) + e : e;
}
var Yw = Math.ceil, Xw = Math.max;
function Zw(e, t, n, r) {
  for (var s = -1, l = Xw(Yw((t - e) / (n || 1)), 0), o = Array(l); l--; )
    o[++s] = e, e += n;
  return o;
}
function Jw(e) {
  return function(t, n, r) {
    return r && typeof r != "number" && Wo(t, n, r) && (n = r = void 0), t = No(t), n === void 0 ? (n = t, t = 0) : n = No(n), r = r === void 0 ? t < n ? 1 : -1 : No(r), Zw(t, n, r);
  };
}
var Qw = Jw();
function eP(e, t, n, r, s) {
  return s(e, function(l, o, u) {
    n = r ? (r = !1, l) : t(n, l, o, u);
  }), n;
}
function tP(e, t, n) {
  var r = Te(e) ? LN : eP, s = arguments.length < 3;
  return r(e, da(t), n, s, Ei);
}
function nP(e, t, n) {
  return t === void 0 ? t = 1 : t = Wr(t), Rd(kt(e), t);
}
var rP = Pp("round");
function mc(e, t, n) {
  return e == null ? e : Rw(e, t, n);
}
var aP = "[object Map]", sP = "[object Set]";
function pi(e) {
  if (e == null)
    return 0;
  if (yr(e))
    return it(e) ? Tc(e) : e.length;
  var t = Fn(e);
  return t == aP || t == sP ? e.size : ec(e).length;
}
var Nd = _u(function(e, t) {
  if (e == null)
    return [];
  var n = t.length;
  return n > 1 && Wo(e, t[0], t[1]) ? t = [] : n > 2 && Wo(t[0], t[1], t[2]) && (t = [t[0]]), nT(e, lc(t), []);
});
function Sc(e, t, n) {
  return e = kt(e), n = n == null ? 0 : xp(Wr(n), 0, e.length), t = Al(t), e.slice(n, n + t.length) == t;
}
function uT(e, t, n) {
  return e && e.length ? (t = t === void 0 ? 1 : Wr(t), vp(e, 0, t < 0 ? 0 : t)) : [];
}
var iP = 9007199254740991, ed = 4294967295, lP = Math.min;
function ir(e, t) {
  if (e = Wr(e), e < 1 || e > iP)
    return [];
  var n = ed, r = lP(e, ed);
  t = fc(t), e -= ed;
  for (var s = pp(r, t); ++n < e; )
    t(n);
  return s;
}
function _T(e) {
  return kt(e).toLowerCase();
}
function dT(e) {
  return kt(e).toUpperCase();
}
var oP = 1 / 0, uP = ii && 1 / cc(new ii([, -0]))[1] == oP ? function(e) {
  return new ii(e);
} : sO, _P = 200;
function bc(e, t, n) {
  var r = -1, s = Ep, l = e.length, o = !0, u = [], h = u;
  if (l >= _P) {
    var A = t ? null : uP(e);
    if (A)
      return cc(A);
    o = !1, s = dc, h = new di();
  } else
    h = t ? [] : u;
  e:
    for (; ++r < l; ) {
      var E = e[r], p = t ? t(E) : E;
      if (E = E !== 0 ? E : 0, o && p === p) {
        for (var T = h.length; T--; )
          if (h[T] === p)
            continue e;
        t && h.push(p), u.push(E);
      } else s(h, p, n) || (h !== u && h.push(p), u.push(E));
    }
  return u;
}
var dP = _u(function(e) {
  return bc(lc(e, 1, yd, !0));
});
function cP(e) {
  return e && e.length ? bc(e) : [];
}
function cT(e, t) {
  return e && e.length ? bc(e, da(t)) : [];
}
var fP = 0;
function lt(e) {
  var t = ++fP;
  return kt(e) + t;
}
function hP(e, {
  classButtonLocal: t = _(() => {
  }),
  isOpen: n = _(() => !1),
  toggleLocal: r = () => {
  },
  currentId: s = _(() => "")
}) {
  const l = d(e, "item"), o = de("classButton"), u = de("disabled"), h = de("id"), A = de("isCaret"), E = de("keyContent"), p = de("keyLabel"), T = de("readonly"), S = de("withGap"), b = _(() => !!(u.value || l.value.disabled)), L = _(() => we(l.value.isCaret) ? A.value : l.value.isCaret), I = _(() => T.value || l.value.readonly), v = _(() => `${h.value}_${s.value}`), R = _(() => I.value ? "div" : "a"), g = _(() => {
    const M = {
      class: ["a_accordion__button", o.value, t.value, {
        a_accordion__button_collapsed: !n.value,
        a_accordion__button_has_not_caret: !L.value,
        a_accordion__button_with_gap: S.value,
        readonly: I.value
      }],
      id: l.value.id
    };
    return I.value || (M.ariaExpanded = n.value, M["aria-controls"] = v.value, M.rolw = "button", M.tabindex = 0, M.disabled = b.value, M.onClick = r), M;
  }), D = _(() => p.value ? fe(l.value, p.value) : ""), w = _(() => E.value ? fe(l.value, E.value) : "");
  return {
    buttonAttributes: g,
    buttonTag: R,
    contentLocal: w,
    idForCollapse: v,
    labelLocal: D
  };
}
function AP(e) {
  const t = d(e, "item"), n = de("keyChildren"), r = _(() => fe(t.value, n.value, []) || []), s = _(() => r.value.length !== 0);
  return {
    children: r,
    hasChildren: s
  };
}
function EP(e) {
  const t = d(e, "item"), n = de("keyClassBody"), r = de("keyClassHeader"), s = de("keyClassButton"), l = _(() => {
    if (n.value)
      return fe(t.value, n.value);
  }), o = _(() => {
    if (r.value)
      return fe(t.value, r.value);
  }), u = _(() => {
    if (s.value)
      return fe(t.value, s.value);
  });
  return {
    classBodyLocal: l,
    classButtonLocal: u,
    classHeaderLocal: o
  };
}
const Ke = "_a_id";
function pP(e) {
  const t = d(e, "isParentOpen"), n = d(e, "item"), r = d(e, "itemIndex"), s = d(e, "keyId"), l = d(e, "parentsIds"), o = d(e, "parentIndexes"), u = de("idsForOpen"), h = de("toggle"), A = _(() => n.value[Ke]), E = _(() => t.value ? u.value.indexOf(A.value) !== -1 : !1), p = _(() => {
    const v = pe(l.value);
    return v.push(`${A.value}`), v;
  }), T = _(() => o.value.join(".")), S = _(() => T.value ? `${T.value}.${r.value}` : `${r.value}`), b = _(() => {
    const v = pe(o.value);
    return v.push(`${S.value}`), v;
  }), L = (v) => {
    h({
      $event: v,
      parentsIds: l.value,
      isOpen: E.value,
      item: n.value,
      itemIndex: r.value
    });
  };
  return {
    closeItemIfOpen: () => {
      E.value && s.value && L();
    },
    currentId: A,
    isOpen: E,
    parentIndexesForChild: b,
    parentsIdsForChild: p,
    toggleLocal: L
  };
}
function TP(e) {
  const t = d(e, "item"), n = de("keyIsRender"), r = de("keyIsRenderBodyByFirstOpen"), s = B(!1), l = _(() => {
    if (r.value)
      return fe(t.value, r.value);
  }), o = _(() => l.value ? s.value : !0), u = _(() => n.value ? !!fe(t.value, n.value, !0) : !0);
  return {
    isBodyVisible: o,
    isOpenFirst: s,
    isRender: u
  };
}
/*! @license DOMPurify 3.2.3 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.3/LICENSE */
const {
  entries: fT,
  setPrototypeOf: uE,
  isFrozen: mP,
  getPrototypeOf: SP,
  getOwnPropertyDescriptor: bP
} = Object;
let {
  freeze: An,
  seal: ur,
  create: hT
} = Object, {
  apply: Dd,
  construct: Bd
} = typeof Reflect < "u" && Reflect;
An || (An = function(t) {
  return t;
});
ur || (ur = function(t) {
  return t;
});
Dd || (Dd = function(t, n, r) {
  return t.apply(n, r);
});
Bd || (Bd = function(t, n) {
  return new t(...n);
});
const Lo = Un(Array.prototype.forEach), _E = Un(Array.prototype.pop), Hi = Un(Array.prototype.push), Do = Un(String.prototype.toLowerCase), td = Un(String.prototype.toString), dE = Un(String.prototype.match), Vi = Un(String.prototype.replace), LP = Un(String.prototype.indexOf), IP = Un(String.prototype.trim), br = Un(Object.prototype.hasOwnProperty), cn = Un(RegExp.prototype.test), Wi = vP(TypeError);
function Un(e) {
  return function(t) {
    for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++)
      r[s - 1] = arguments[s];
    return Dd(e, t, r);
  };
}
function vP(e) {
  return function() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return Bd(e, n);
  };
}
function Ye(e, t) {
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Do;
  uE && uE(e, null);
  let r = t.length;
  for (; r--; ) {
    let s = t[r];
    if (typeof s == "string") {
      const l = n(s);
      l !== s && (mP(t) || (t[r] = l), s = l);
    }
    e[s] = !0;
  }
  return e;
}
function yP(e) {
  for (let t = 0; t < e.length; t++)
    br(e, t) || (e[t] = null);
  return e;
}
function ys(e) {
  const t = hT(null);
  for (const [n, r] of fT(e))
    br(e, n) && (Array.isArray(r) ? t[n] = yP(r) : r && typeof r == "object" && r.constructor === Object ? t[n] = ys(r) : t[n] = r);
  return t;
}
function Gi(e, t) {
  for (; e !== null; ) {
    const r = bP(e, t);
    if (r) {
      if (r.get)
        return Un(r.get);
      if (typeof r.value == "function")
        return Un(r.value);
    }
    e = SP(e);
  }
  function n() {
    return null;
  }
  return n;
}
const cE = An(["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"]), nd = An(["svg", "a", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "filter", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "style", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern"]), rd = An(["feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence"]), gP = An(["animate", "color-profile", "cursor", "discard", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignobject", "hatch", "hatchpath", "mesh", "meshgradient", "meshpatch", "meshrow", "missing-glyph", "script", "set", "solidcolor", "unknown", "use"]), ad = An(["math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover", "mprescripts"]), RP = An(["maction", "maligngroup", "malignmark", "mlongdiv", "mscarries", "mscarry", "msgroup", "mstack", "msline", "msrow", "semantics", "annotation", "annotation-xml", "mprescripts", "none"]), fE = An(["#text"]), hE = An(["accept", "action", "align", "alt", "autocapitalize", "autocomplete", "autopictureinpicture", "autoplay", "background", "bgcolor", "border", "capture", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "controls", "controlslist", "coords", "crossorigin", "datetime", "decoding", "default", "dir", "disabled", "disablepictureinpicture", "disableremoteplayback", "download", "draggable", "enctype", "enterkeyhint", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "inputmode", "integrity", "ismap", "kind", "label", "lang", "list", "loading", "loop", "low", "max", "maxlength", "media", "method", "min", "minlength", "multiple", "muted", "name", "nonce", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "playsinline", "popover", "popovertarget", "popovertargetaction", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "role", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "sizes", "span", "srclang", "start", "src", "srcset", "step", "style", "summary", "tabindex", "title", "translate", "type", "usemap", "valign", "value", "width", "wrap", "xmlns", "slot"]), sd = An(["accent-height", "accumulate", "additive", "alignment-baseline", "amplitude", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "class", "clip", "clippathunits", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "exponent", "fill", "fill-opacity", "fill-rule", "filter", "filterunits", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "height", "href", "id", "image-rendering", "in", "in2", "intercept", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lang", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "media", "method", "mode", "min", "name", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "preserveaspectratio", "primitiveunits", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "result", "rotate", "scale", "seed", "shape-rendering", "slope", "specularconstant", "specularexponent", "spreadmethod", "startoffset", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "style", "surfacescale", "systemlanguage", "tabindex", "tablevalues", "targetx", "targety", "transform", "transform-origin", "text-anchor", "text-decoration", "text-rendering", "textlength", "type", "u1", "u2", "unicode", "values", "viewbox", "visibility", "version", "vert-adv-y", "vert-origin-x", "vert-origin-y", "width", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "xmlns", "y", "y1", "y2", "z", "zoomandpan"]), AE = An(["accent", "accentunder", "align", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "dir", "display", "displaystyle", "encoding", "fence", "frame", "height", "href", "id", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "width", "xmlns"]), Io = An(["xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"]), OP = ur(/\{\{[\w\W]*|[\w\W]*\}\}/gm), CP = ur(/<%[\w\W]*|[\w\W]*%>/gm), NP = ur(/\$\{[\w\W]*}/gm), DP = ur(/^data-[\-\w.\u00B7-\uFFFF]+$/), BP = ur(/^aria-[\-\w]+$/), AT = ur(
  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i
  // eslint-disable-line no-useless-escape
), wP = ur(/^(?:\w+script|data):/i), PP = ur(
  /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g
  // eslint-disable-line no-control-regex
), ET = ur(/^html$/i), xP = ur(/^[a-z][.\w]*(-[.\w]+)+$/i);
var EE = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  ARIA_ATTR: BP,
  ATTR_WHITESPACE: PP,
  CUSTOM_ELEMENT: xP,
  DATA_ATTR: DP,
  DOCTYPE_NAME: ET,
  ERB_EXPR: CP,
  IS_ALLOWED_URI: AT,
  IS_SCRIPT_OR_DATA: wP,
  MUSTACHE_EXPR: OP,
  TMPLIT_EXPR: NP
});
const Ki = {
  element: 1,
  attribute: 2,
  text: 3,
  cdataSection: 4,
  entityReference: 5,
  // Deprecated
  entityNode: 6,
  // Deprecated
  progressingInstruction: 7,
  comment: 8,
  document: 9,
  documentType: 10,
  documentFragment: 11,
  notation: 12
  // Deprecated
}, FP = function() {
  return typeof window > "u" ? null : window;
}, MP = function(t, n) {
  if (typeof t != "object" || typeof t.createPolicy != "function")
    return null;
  let r = null;
  const s = "data-tt-policy-suffix";
  n && n.hasAttribute(s) && (r = n.getAttribute(s));
  const l = "dompurify" + (r ? "#" + r : "");
  try {
    return t.createPolicy(l, {
      createHTML(o) {
        return o;
      },
      createScriptURL(o) {
        return o;
      }
    });
  } catch {
    return console.warn("TrustedTypes policy " + l + " could not be created."), null;
  }
}, pE = function() {
  return {
    afterSanitizeAttributes: [],
    afterSanitizeElements: [],
    afterSanitizeShadowDOM: [],
    beforeSanitizeAttributes: [],
    beforeSanitizeElements: [],
    beforeSanitizeShadowDOM: [],
    uponSanitizeAttribute: [],
    uponSanitizeElement: [],
    uponSanitizeShadowNode: []
  };
};
function pT() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : FP();
  const t = (Re) => pT(Re);
  if (t.version = "3.2.3", t.removed = [], !e || !e.document || e.document.nodeType !== Ki.document)
    return t.isSupported = !1, t;
  let {
    document: n
  } = e;
  const r = n, s = r.currentScript, {
    DocumentFragment: l,
    HTMLTemplateElement: o,
    Node: u,
    Element: h,
    NodeFilter: A,
    NamedNodeMap: E = e.NamedNodeMap || e.MozNamedAttrMap,
    HTMLFormElement: p,
    DOMParser: T,
    trustedTypes: S
  } = e, b = h.prototype, L = Gi(b, "cloneNode"), I = Gi(b, "remove"), v = Gi(b, "nextSibling"), R = Gi(b, "childNodes"), g = Gi(b, "parentNode");
  if (typeof o == "function") {
    const Re = n.createElement("template");
    Re.content && Re.content.ownerDocument && (n = Re.content.ownerDocument);
  }
  let D, w = "";
  const {
    implementation: M,
    createNodeIterator: P,
    createDocumentFragment: F,
    getElementsByTagName: C
  } = n, {
    importNode: k
  } = r;
  let W = pE();
  t.isSupported = typeof fT == "function" && typeof g == "function" && M && M.createHTMLDocument !== void 0;
  const {
    MUSTACHE_EXPR: K,
    ERB_EXPR: le,
    TMPLIT_EXPR: te,
    DATA_ATTR: _e,
    ARIA_ATTR: ae,
    IS_SCRIPT_OR_DATA: oe,
    ATTR_WHITESPACE: Le,
    CUSTOM_ELEMENT: We
  } = EE;
  let {
    IS_ALLOWED_URI: Se
  } = EE, se = null;
  const Oe = Ye({}, [...cE, ...nd, ...rd, ...ad, ...fE]);
  let ye = null;
  const je = Ye({}, [...hE, ...sd, ...AE, ...Io]);
  let he = Object.seal(hT(null, {
    tagNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    attributeNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    allowCustomizedBuiltInElements: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: !1
    }
  })), ne = null, H = null, Q = !0, re = !0, Ie = !1, Ce = !0, xe = !1, Xe = !0, Fe = !1, Pe = !1, at = !1, He = !1, st = !1, Ze = !1, At = !0, bt = !1;
  const Wt = "user-content-";
  let pn = !0, cr = !1, Zt = {}, Wn = null;
  const Gn = Ye({}, ["annotation-xml", "audio", "colgroup", "desc", "foreignobject", "head", "iframe", "math", "mi", "mn", "mo", "ms", "mtext", "noembed", "noframes", "noscript", "plaintext", "script", "style", "svg", "template", "thead", "title", "video", "xmp"]);
  let gn = null;
  const Or = Ye({}, ["audio", "video", "img", "source", "image", "track"]);
  let fr = null;
  const Cr = Ye({}, ["alt", "class", "for", "id", "label", "name", "pattern", "placeholder", "role", "summary", "title", "value", "style", "xmlns"]), Kn = "http://www.w3.org/1998/Math/MathML", jn = "http://www.w3.org/2000/svg", Gt = "http://www.w3.org/1999/xhtml";
  let Tn = Gt, hr = !1, Ar = null;
  const ds = Ye({}, [Kn, jn, Gt], td);
  let Nr = Ye({}, ["mi", "mo", "mn", "ms", "mtext"]), zn = Ye({}, ["annotation-xml"]);
  const Aa = Ye({}, ["title", "style", "font", "a", "script"]);
  let Rn = null;
  const cs = ["application/xhtml+xml", "text/html"], fs = "text/html";
  let Lt = null, Yn = null;
  const Gr = n.createElement("form"), Ea = function($) {
    return $ instanceof RegExp || $ instanceof Function;
  }, Kr = function() {
    let $ = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (!(Yn && Yn === $)) {
      if ((!$ || typeof $ != "object") && ($ = {}), $ = ys($), Rn = // eslint-disable-next-line unicorn/prefer-includes
      cs.indexOf($.PARSER_MEDIA_TYPE) === -1 ? fs : $.PARSER_MEDIA_TYPE, Lt = Rn === "application/xhtml+xml" ? td : Do, se = br($, "ALLOWED_TAGS") ? Ye({}, $.ALLOWED_TAGS, Lt) : Oe, ye = br($, "ALLOWED_ATTR") ? Ye({}, $.ALLOWED_ATTR, Lt) : je, Ar = br($, "ALLOWED_NAMESPACES") ? Ye({}, $.ALLOWED_NAMESPACES, td) : ds, fr = br($, "ADD_URI_SAFE_ATTR") ? Ye(ys(Cr), $.ADD_URI_SAFE_ATTR, Lt) : Cr, gn = br($, "ADD_DATA_URI_TAGS") ? Ye(ys(Or), $.ADD_DATA_URI_TAGS, Lt) : Or, Wn = br($, "FORBID_CONTENTS") ? Ye({}, $.FORBID_CONTENTS, Lt) : Gn, ne = br($, "FORBID_TAGS") ? Ye({}, $.FORBID_TAGS, Lt) : {}, H = br($, "FORBID_ATTR") ? Ye({}, $.FORBID_ATTR, Lt) : {}, Zt = br($, "USE_PROFILES") ? $.USE_PROFILES : !1, Q = $.ALLOW_ARIA_ATTR !== !1, re = $.ALLOW_DATA_ATTR !== !1, Ie = $.ALLOW_UNKNOWN_PROTOCOLS || !1, Ce = $.ALLOW_SELF_CLOSE_IN_ATTR !== !1, xe = $.SAFE_FOR_TEMPLATES || !1, Xe = $.SAFE_FOR_XML !== !1, Fe = $.WHOLE_DOCUMENT || !1, He = $.RETURN_DOM || !1, st = $.RETURN_DOM_FRAGMENT || !1, Ze = $.RETURN_TRUSTED_TYPE || !1, at = $.FORCE_BODY || !1, At = $.SANITIZE_DOM !== !1, bt = $.SANITIZE_NAMED_PROPS || !1, pn = $.KEEP_CONTENT !== !1, cr = $.IN_PLACE || !1, Se = $.ALLOWED_URI_REGEXP || AT, Tn = $.NAMESPACE || Gt, Nr = $.MATHML_TEXT_INTEGRATION_POINTS || Nr, zn = $.HTML_INTEGRATION_POINTS || zn, he = $.CUSTOM_ELEMENT_HANDLING || {}, $.CUSTOM_ELEMENT_HANDLING && Ea($.CUSTOM_ELEMENT_HANDLING.tagNameCheck) && (he.tagNameCheck = $.CUSTOM_ELEMENT_HANDLING.tagNameCheck), $.CUSTOM_ELEMENT_HANDLING && Ea($.CUSTOM_ELEMENT_HANDLING.attributeNameCheck) && (he.attributeNameCheck = $.CUSTOM_ELEMENT_HANDLING.attributeNameCheck), $.CUSTOM_ELEMENT_HANDLING && typeof $.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements == "boolean" && (he.allowCustomizedBuiltInElements = $.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements), xe && (re = !1), st && (He = !0), Zt && (se = Ye({}, fE), ye = [], Zt.html === !0 && (Ye(se, cE), Ye(ye, hE)), Zt.svg === !0 && (Ye(se, nd), Ye(ye, sd), Ye(ye, Io)), Zt.svgFilters === !0 && (Ye(se, rd), Ye(ye, sd), Ye(ye, Io)), Zt.mathMl === !0 && (Ye(se, ad), Ye(ye, AE), Ye(ye, Io))), $.ADD_TAGS && (se === Oe && (se = ys(se)), Ye(se, $.ADD_TAGS, Lt)), $.ADD_ATTR && (ye === je && (ye = ys(ye)), Ye(ye, $.ADD_ATTR, Lt)), $.ADD_URI_SAFE_ATTR && Ye(fr, $.ADD_URI_SAFE_ATTR, Lt), $.FORBID_CONTENTS && (Wn === Gn && (Wn = ys(Wn)), Ye(Wn, $.FORBID_CONTENTS, Lt)), pn && (se["#text"] = !0), Fe && Ye(se, ["html", "head", "body"]), se.table && (Ye(se, ["tbody"]), delete ne.tbody), $.TRUSTED_TYPES_POLICY) {
        if (typeof $.TRUSTED_TYPES_POLICY.createHTML != "function")
          throw Wi('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');
        if (typeof $.TRUSTED_TYPES_POLICY.createScriptURL != "function")
          throw Wi('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');
        D = $.TRUSTED_TYPES_POLICY, w = D.createHTML("");
      } else
        D === void 0 && (D = MP(S, s)), D !== null && typeof w == "string" && (w = D.createHTML(""));
      An && An($), Yn = $;
    }
  }, pa = Ye({}, [...nd, ...rd, ...gP]), Dr = Ye({}, [...ad, ...RP]), Li = function($) {
    let ue = g($);
    (!ue || !ue.tagName) && (ue = {
      namespaceURI: Tn,
      tagName: "template"
    });
    const be = Do($.tagName), dt = Do(ue.tagName);
    return Ar[$.namespaceURI] ? $.namespaceURI === jn ? ue.namespaceURI === Gt ? be === "svg" : ue.namespaceURI === Kn ? be === "svg" && (dt === "annotation-xml" || Nr[dt]) : !!pa[be] : $.namespaceURI === Kn ? ue.namespaceURI === Gt ? be === "math" : ue.namespaceURI === jn ? be === "math" && zn[dt] : !!Dr[be] : $.namespaceURI === Gt ? ue.namespaceURI === jn && !zn[dt] || ue.namespaceURI === Kn && !Nr[dt] ? !1 : !Dr[be] && (Aa[be] || !pa[be]) : !!(Rn === "application/xhtml+xml" && Ar[$.namespaceURI]) : !1;
  }, Jt = function($) {
    Hi(t.removed, {
      element: $
    });
    try {
      g($).removeChild($);
    } catch {
      I($);
    }
  }, Ta = function($, ue) {
    try {
      Hi(t.removed, {
        attribute: ue.getAttributeNode($),
        from: ue
      });
    } catch {
      Hi(t.removed, {
        attribute: null,
        from: ue
      });
    }
    if (ue.removeAttribute($), $ === "is")
      if (He || st)
        try {
          Jt(ue);
        } catch {
        }
      else
        try {
          ue.setAttribute($, "");
        } catch {
        }
  }, $s = function($) {
    let ue = null, be = null;
    if (at)
      $ = "<remove></remove>" + $;
    else {
      const yt = dE($, /^[\r\n\t ]+/);
      be = yt && yt[0];
    }
    Rn === "application/xhtml+xml" && Tn === Gt && ($ = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + $ + "</body></html>");
    const dt = D ? D.createHTML($) : $;
    if (Tn === Gt)
      try {
        ue = new T().parseFromString(dt, Rn);
      } catch {
      }
    if (!ue || !ue.documentElement) {
      ue = M.createDocument(Tn, "template", null);
      try {
        ue.documentElement.innerHTML = hr ? w : dt;
      } catch {
      }
    }
    const Ut = ue.body || ue.documentElement;
    return $ && be && Ut.insertBefore(n.createTextNode(be), Ut.childNodes[0] || null), Tn === Gt ? C.call(ue, Fe ? "html" : "body")[0] : Fe ? ue.documentElement : Ut;
  }, ks = function($) {
    return P.call(
      $.ownerDocument || $,
      $,
      // eslint-disable-next-line no-bitwise
      A.SHOW_ELEMENT | A.SHOW_COMMENT | A.SHOW_TEXT | A.SHOW_PROCESSING_INSTRUCTION | A.SHOW_CDATA_SECTION,
      null
    );
  }, Er = function($) {
    return $ instanceof p && (typeof $.nodeName != "string" || typeof $.textContent != "string" || typeof $.removeChild != "function" || !($.attributes instanceof E) || typeof $.removeAttribute != "function" || typeof $.setAttribute != "function" || typeof $.namespaceURI != "string" || typeof $.insertBefore != "function" || typeof $.hasChildNodes != "function");
  }, hs = function($) {
    return typeof u == "function" && $ instanceof u;
  };
  function on(Re, $, ue) {
    Lo(Re, (be) => {
      be.call(t, $, ue, Yn);
    });
  }
  const Us = function($) {
    let ue = null;
    if (on(W.beforeSanitizeElements, $, null), Er($))
      return Jt($), !0;
    const be = Lt($.nodeName);
    if (on(W.uponSanitizeElement, $, {
      tagName: be,
      allowedTags: se
    }), $.hasChildNodes() && !hs($.firstElementChild) && cn(/<[/\w]/g, $.innerHTML) && cn(/<[/\w]/g, $.textContent) || $.nodeType === Ki.progressingInstruction || Xe && $.nodeType === Ki.comment && cn(/<[/\w]/g, $.data))
      return Jt($), !0;
    if (!se[be] || ne[be]) {
      if (!ne[be] && Ii(be) && (he.tagNameCheck instanceof RegExp && cn(he.tagNameCheck, be) || he.tagNameCheck instanceof Function && he.tagNameCheck(be)))
        return !1;
      if (pn && !Wn[be]) {
        const dt = g($) || $.parentNode, Ut = R($) || $.childNodes;
        if (Ut && dt) {
          const yt = Ut.length;
          for (let Qt = yt - 1; Qt >= 0; --Qt) {
            const Xn = L(Ut[Qt], !0);
            Xn.__removalCount = ($.__removalCount || 0) + 1, dt.insertBefore(Xn, v($));
          }
        }
      }
      return Jt($), !0;
    }
    return $ instanceof h && !Li($) || (be === "noscript" || be === "noembed" || be === "noframes") && cn(/<\/no(script|embed|frames)/i, $.innerHTML) ? (Jt($), !0) : (xe && $.nodeType === Ki.text && (ue = $.textContent, Lo([K, le, te], (dt) => {
      ue = Vi(ue, dt, " ");
    }), $.textContent !== ue && (Hi(t.removed, {
      element: $.cloneNode()
    }), $.textContent = ue)), on(W.afterSanitizeElements, $, null), !1);
  }, Bl = function($, ue, be) {
    if (At && (ue === "id" || ue === "name") && (be in n || be in Gr))
      return !1;
    if (!(re && !H[ue] && cn(_e, ue))) {
      if (!(Q && cn(ae, ue))) {
        if (!ye[ue] || H[ue]) {
          if (
            // First condition does a very basic check if a) it's basically a valid custom element tagname AND
            // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck
            !(Ii($) && (he.tagNameCheck instanceof RegExp && cn(he.tagNameCheck, $) || he.tagNameCheck instanceof Function && he.tagNameCheck($)) && (he.attributeNameCheck instanceof RegExp && cn(he.attributeNameCheck, ue) || he.attributeNameCheck instanceof Function && he.attributeNameCheck(ue)) || // Alternative, second condition checks if it's an `is`-attribute, AND
            // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            ue === "is" && he.allowCustomizedBuiltInElements && (he.tagNameCheck instanceof RegExp && cn(he.tagNameCheck, be) || he.tagNameCheck instanceof Function && he.tagNameCheck(be)))
          ) return !1;
        } else if (!fr[ue]) {
          if (!cn(Se, Vi(be, Le, ""))) {
            if (!((ue === "src" || ue === "xlink:href" || ue === "href") && $ !== "script" && LP(be, "data:") === 0 && gn[$])) {
              if (!(Ie && !cn(oe, Vi(be, Le, "")))) {
                if (be)
                  return !1;
              }
            }
          }
        }
      }
    }
    return !0;
  }, Ii = function($) {
    return $ !== "annotation-xml" && dE($, We);
  }, wl = function($) {
    on(W.beforeSanitizeAttributes, $, null);
    const {
      attributes: ue
    } = $;
    if (!ue || Er($))
      return;
    const be = {
      attrName: "",
      attrValue: "",
      keepAttr: !0,
      allowedAttributes: ye,
      forceKeepAttr: void 0
    };
    let dt = ue.length;
    for (; dt--; ) {
      const Ut = ue[dt], {
        name: yt,
        namespaceURI: Qt,
        value: Xn
      } = Ut, As = Lt(yt);
      let Ht = yt === "value" ? Xn : IP(Xn);
      if (be.attrName = As, be.attrValue = Ht, be.keepAttr = !0, be.forceKeepAttr = void 0, on(W.uponSanitizeAttribute, $, be), Ht = be.attrValue, bt && (As === "id" || As === "name") && (Ta(yt, $), Ht = Wt + Ht), Xe && cn(/((--!?|])>)|<\/(style|title)/i, Ht)) {
        Ta(yt, $);
        continue;
      }
      if (be.forceKeepAttr || (Ta(yt, $), !be.keepAttr))
        continue;
      if (!Ce && cn(/\/>/i, Ht)) {
        Ta(yt, $);
        continue;
      }
      xe && Lo([K, le, te], (yi) => {
        Ht = Vi(Ht, yi, " ");
      });
      const vi = Lt($.nodeName);
      if (Bl(vi, As, Ht)) {
        if (D && typeof S == "object" && typeof S.getAttributeType == "function" && !Qt)
          switch (S.getAttributeType(vi, As)) {
            case "TrustedHTML": {
              Ht = D.createHTML(Ht);
              break;
            }
            case "TrustedScriptURL": {
              Ht = D.createScriptURL(Ht);
              break;
            }
          }
        try {
          Qt ? $.setAttributeNS(Qt, yt, Ht) : $.setAttribute(yt, Ht), Er($) ? Jt($) : _E(t.removed);
        } catch {
        }
      }
    }
    on(W.afterSanitizeAttributes, $, null);
  }, $u = function Re($) {
    let ue = null;
    const be = ks($);
    for (on(W.beforeSanitizeShadowDOM, $, null); ue = be.nextNode(); )
      on(W.uponSanitizeShadowNode, ue, null), Us(ue), wl(ue), ue.content instanceof l && Re(ue.content);
    on(W.afterSanitizeShadowDOM, $, null);
  };
  return t.sanitize = function(Re) {
    let $ = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, ue = null, be = null, dt = null, Ut = null;
    if (hr = !Re, hr && (Re = "<!-->"), typeof Re != "string" && !hs(Re))
      if (typeof Re.toString == "function") {
        if (Re = Re.toString(), typeof Re != "string")
          throw Wi("dirty is not a string, aborting");
      } else
        throw Wi("toString is not a function");
    if (!t.isSupported)
      return Re;
    if (Pe || Kr($), t.removed = [], typeof Re == "string" && (cr = !1), cr) {
      if (Re.nodeName) {
        const Xn = Lt(Re.nodeName);
        if (!se[Xn] || ne[Xn])
          throw Wi("root node is forbidden and cannot be sanitized in-place");
      }
    } else if (Re instanceof u)
      ue = $s("<!---->"), be = ue.ownerDocument.importNode(Re, !0), be.nodeType === Ki.element && be.nodeName === "BODY" || be.nodeName === "HTML" ? ue = be : ue.appendChild(be);
    else {
      if (!He && !xe && !Fe && // eslint-disable-next-line unicorn/prefer-includes
      Re.indexOf("<") === -1)
        return D && Ze ? D.createHTML(Re) : Re;
      if (ue = $s(Re), !ue)
        return He ? null : Ze ? w : "";
    }
    ue && at && Jt(ue.firstChild);
    const yt = ks(cr ? Re : ue);
    for (; dt = yt.nextNode(); )
      Us(dt), wl(dt), dt.content instanceof l && $u(dt.content);
    if (cr)
      return Re;
    if (He) {
      if (st)
        for (Ut = F.call(ue.ownerDocument); ue.firstChild; )
          Ut.appendChild(ue.firstChild);
      else
        Ut = ue;
      return (ye.shadowroot || ye.shadowrootmode) && (Ut = k.call(r, Ut, !0)), Ut;
    }
    let Qt = Fe ? ue.outerHTML : ue.innerHTML;
    return Fe && se["!doctype"] && ue.ownerDocument && ue.ownerDocument.doctype && ue.ownerDocument.doctype.name && cn(ET, ue.ownerDocument.doctype.name) && (Qt = "<!DOCTYPE " + ue.ownerDocument.doctype.name + `>
` + Qt), xe && Lo([K, le, te], (Xn) => {
      Qt = Vi(Qt, Xn, " ");
    }), D && Ze ? D.createHTML(Qt) : Qt;
  }, t.setConfig = function() {
    let Re = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    Kr(Re), Pe = !0;
  }, t.clearConfig = function() {
    Yn = null, Pe = !1;
  }, t.isValidAttribute = function(Re, $, ue) {
    Yn || Kr({});
    const be = Lt(Re), dt = Lt($);
    return Bl(be, dt, ue);
  }, t.addHook = function(Re, $) {
    typeof $ == "function" && Hi(W[Re], $);
  }, t.removeHook = function(Re) {
    return _E(W[Re]);
  }, t.removeHooks = function(Re) {
    W[Re] = [];
  }, t.removeAllHooks = function() {
    W = pE();
  }, t;
}
var Lc = pT();
const tde = Lc, nde = Lc.sanitize;
function Ko(e) {
  return Lc.sanitize(qP(e), { ADD_ATTR: ["target"] });
}
function qP(e) {
  return yn(e) ? kt(e) : e;
}
function rde(e) {
  return !Te(e) || !e.length ? !1 : Jp(e, it);
}
function $P(e) {
  return !Te(e) || !e.length ? !1 : Jp(e, Te);
}
function kP(e) {
  const t = Object.keys(e);
  return t.length === 0 ? "" : `<ul class="a_list_without_styles">${t.map((r) => `<li>${e[r]}</li>`).join("")}</ul>`;
}
function UP({ array: e, keyChildren: t }) {
  return TT({ array: e, keyChildren: t, count: 0 });
}
function TT({ array: e, keyChildren: t, count: n = 0 }) {
  return Te(e) && z(e, (r) => {
    n++;
    const s = fe(r, t);
    n = TT({ array: s, keyChildren: t, count: n });
  }), n;
}
const an = {
  beforeMount(e, t) {
    e.innerHTML = ie(t.value) || t.value === "" ? "" : Ko(t.value);
  },
  updated(e, t) {
    e.innerHTML = ie(t.value) || t.value === "" ? "" : Ko(t.value);
  }
}, HP = {
  name: "AAccordionItem",
  props: {
    isParentOpen: {
      type: Boolean,
      required: !0
    },
    item: {
      type: Object,
      required: !0
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    parentsIds: {
      type: Array,
      required: !1,
      default: () => []
    },
    parentIndexes: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  inject: [
    "classBody",
    "classHeader",
    "id",
    "withGap"
  ],
  setup(e) {
    const {
      closeItemIfOpen: t,
      currentId: n,
      isOpen: r,
      parentIndexesForChild: s,
      parentsIdsForChild: l,
      toggleLocal: o
    } = pP(e), {
      children: u,
      hasChildren: h
    } = AP(e), {
      classBodyLocal: A,
      classButtonLocal: E,
      classHeaderLocal: p
    } = EP(e), {
      isBodyVisible: T,
      isOpenFirst: S,
      isRender: b
    } = TP(e), {
      buttonAttributes: L,
      buttonTag: I,
      contentLocal: v,
      idForCollapse: R,
      labelLocal: g
    } = hP(e, {
      classButtonLocal: E,
      isOpen: r,
      toggleLocal: o,
      currentId: n
    });
    return rt(r, (D) => {
      D && !S.value && (S.value = !0);
    }, {
      immediate: !0
    }), Ot(() => {
      t();
    }), {
      buttonAttributes: L,
      buttonTag: I,
      children: u,
      classBodyLocal: A,
      classButtonLocal: E,
      classHeaderLocal: p,
      contentLocal: v,
      currentId: n,
      hasChildren: h,
      idForCollapse: R,
      isBodyVisible: T,
      isOpen: r,
      isRender: b,
      labelLocal: g,
      parentIndexesForChild: s,
      parentsIdsForChild: l
    };
  },
  render() {
    let e = [];
    return this.isBodyVisible && (e = [
      this.item.slotContent && this.$slots[this.item.slotContent] ? this.$slots[this.item.slotContent]({
        item: this.item,
        itemIndex: this.itemIndex,
        parentsIds: this.parentsIds,
        parentIndexes: this.parentIndexes,
        id: this.id,
        currentId: this.currentId
      }) : this.$slots.accordionContent ? this.$slots.accordionContent({
        item: this.item,
        itemIndex: this.itemIndex,
        parentsIds: this.parentsIds,
        parentIndexes: this.parentIndexes,
        id: this.id,
        currentId: this.currentId
      }) : this.contentLocal && Pt(c("div"), [
        [an, this.contentLocal]
      ]),
      this.hasChildren && c("div", {
        class: ["a_accordion"]
      }, [
        this.children.map((t, n) => c($r("AAccordionItem"), {
          key: t[Ke],
          item: t,
          itemIndex: n,
          isParentOpen: this.isOpen,
          parentsIds: this.parentsIdsForChild,
          parentIndexes: this.parentIndexesForChild,
          keyId: this.keyId
        }, this.$slots))
      ])
    ]), this.isRender && c("div", {
      class: [
        "a_accordion__item",
        {
          a_accordion__item_with_gap: this.withGap
        }
      ]
    }, [
      c("div", {
        class: ["a_accordion__header", this.classHeader, this.classHeaderLocal]
      }, [
        c(this.buttonTag, this.buttonAttributes, [
          this.item.slotButton && this.$slots[this.item.slotButton] ? this.$slots[this.item.slotButton]({
            item: this.item,
            itemIndex: this.itemIndex,
            parentsIds: this.parentsIds,
            parentIndexes: this.parentIndexes,
            id: this.id,
            currentId: this.currentId
          }) : this.$slots.accordionButton && this.$slots.accordionButton({
            item: this.item,
            itemIndex: this.itemIndex,
            parentsIds: this.parentsIds,
            parentIndexes: this.parentIndexes,
            id: this.id,
            currentId: this.currentId
          }),
          this.labelLocal && Pt(c("span"), [
            [an, this.labelLocal]
          ])
        ])
      ]),
      c("div", {
        id: this.idForCollapse,
        class: ["a_accordion__collapse_box", {
          a_accordion__collapse_box_show: this.isOpen
        }]
      }, [
        c("div", {
          class: ["a_accordion__body", this.classBody, this.classBodyLocal]
        }, e)
      ])
    ]);
  }
};
function VP(e) {
  const t = d(e, "data"), n = d(e, "keyId"), r = d(e, "keyChildren"), s = ({ items: o, parentIds: u = "" }) => {
    z(o, (h, A) => {
      const E = fe(h, n.value);
      let p;
      ie(E) ? p = `${u}${A}` : p = `${u}${E}`, h[Ke] = p;
      const T = h[r.value];
      T && T.length && s({ items: T, parentIds: `${p}_` });
    });
  };
  return {
    dataWithIds: _(() => {
      const o = pe(t.value);
      return s({ items: o }), o;
    })
  };
}
function WP(e, {
  idsForOpen: t = _(() => []),
  dataWithIds: n = _(() => [])
}) {
  const r = d(e, "indexesForOpen"), s = d(e, "keyChildren"), l = ({ indexForOpen: h }) => {
    let A = `${h}`.replaceAll(".", `.${s.value}.`);
    return A += `.${Ke}`, A;
  }, o = ({ isInit: h } = {}) => {
    if (h && !r.value.length)
      return;
    const A = [];
    s.value ? z(r.value, (E) => {
      const p = fe(n.value, l({ indexForOpen: E }));
      ie(p) || A.push(p);
    }) : z(r.value, (E) => {
      const p = fe(n.value, `${E}.${Ke}`);
      ie(p) || A.push(p);
    }), t.value = A;
  }, u = () => {
    o({ isInit: !0 });
  };
  return rt(r, () => {
    o();
  }), {
    initIdsFromIndexesForOpen: u
  };
}
function GP(e, { emit: t }) {
  const n = d(e, "alwaysOpen"), r = d(e, "disabled"), s = d(e, "idsForOpenDefault"), l = d(e, "prevent"), o = d(e, "stop"), u = B(void 0), h = () => {
    u.value = s.value;
  }, A = ({ currentId: T, isOpen: S }) => {
    if (S) {
      const b = T.split("__")[0];
      u.value = wt(u.value, (L) => !Sc(L, b));
    } else
      u.value.push(T);
  }, E = ({ currentId: T, parentsIds: S, isOpen: b }) => {
    b ? u.value = S : u.value = [...S, T];
  }, p = ({ item: T, parentsIds: S, isOpen: b, $event: L }) => {
    if (r.value)
      return;
    const I = pe(S), v = T[Ke];
    n.value ? A({ item: T, currentId: v, isOpen: b }) : E({ parentsIds: I, currentId: v, isOpen: b }), t("toggle", { idsForOpen: u.value, currentId: v, parentsIds: I, isOpen: b, $event: L, item: T }), o.value && L && L.stopPropagation(), l.value && L && L.preventDefault();
  };
  return rt(s, (T) => {
    Ec(T, u.value) || (u.value = pe(T));
  }), {
    idsForOpen: u,
    initIdsForOpen: h,
    toggleLocal: p
  };
}
const ade = {
  name: "AAccordion",
  provide() {
    return {
      classBody: _(() => this.classBody),
      classButton: _(() => this.classButton),
      classHeader: _(() => this.classHeader),
      disabled: _(() => this.disabled),
      id: _(() => this.id),
      idsForOpen: _(() => this.idsForOpen),
      isCaret: _(() => this.isCaret),
      keyChildren: _(() => this.keyChildren),
      keyClassBody: _(() => this.keyClassBody),
      keyClassButton: _(() => this.keyClassButton),
      keyClassHeader: _(() => this.keyClassHeader),
      keyContent: _(() => this.keyContent),
      keyIsRender: _(() => this.keyIsRender),
      keyIsRenderBodyByFirstOpen: _(() => this.keyIsRenderBodyByFirstOpen),
      keyLabel: _(() => this.keyLabel),
      readonly: _(() => this.readonly),
      withGap: _(() => this.withGap),
      toggle: this.toggleLocal
    };
  },
  props: {
    alwaysOpen: {
      type: Boolean,
      required: !1
    },
    classBody: {
      type: [String, Object],
      required: !1,
      default: ""
    },
    classButton: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classHeader: {
      type: [String, Object],
      required: !1,
      default: ""
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: lt("accordion_")
    },
    idsForOpenDefault: {
      type: Array,
      required: !1,
      default: () => []
    },
    isCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    data: {
      type: Array,
      required: !0
    },
    keyClassBody: {
      type: String,
      required: !1,
      default: "classBody"
    },
    keyClassButton: {
      type: String,
      required: !1,
      default: "classButton"
    },
    keyClassHeader: {
      type: String,
      required: !1,
      default: "classHeader"
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyIsRender: {
      type: String,
      required: !1,
      default: "isRender"
    },
    keyIsRenderBodyByFirstOpen: {
      type: String,
      required: !1,
      default: "isRenderBodyByFirstOpen"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyChildren: {
      type: String,
      required: !1,
      default: "children"
    },
    prevent: {
      type: Boolean,
      required: !1
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    stop: {
      type: Boolean,
      required: !1
    },
    withGap: {
      type: Boolean,
      required: !1
    },
    indexesForOpen: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      idsForOpen: n,
      initIdsForOpen: r,
      toggleLocal: s
    } = GP(e, t), {
      dataWithIds: l
    } = VP(e), {
      initIdsFromIndexesForOpen: o
    } = WP(e, {
      idsForOpen: n,
      dataWithIds: l
    });
    return r(), o(), {
      dataWithIds: l,
      idsForOpen: n,
      toggleLocal: s
    };
  },
  render() {
    return c("div", {
      class: ["a_accordion"]
    }, [
      this.dataWithIds.map((e, t) => c(HP, {
        key: e[Ke],
        item: e,
        itemIndex: t,
        isParentOpen: !0,
        keyId: this.keyId
      }, this.$slots))
    ]);
  }
};
function KP(e) {
  const t = d(e, "ariaAtomic"), n = d(e, "role"), r = _(() => {
    if (t.value)
      return !0;
  }), s = _(() => {
    if (n.value)
      return n.value;
  });
  return {
    ariaAtomicLocal: r,
    roleLocal: s
  };
}
function jP(e) {
  const t = d(e, "type");
  return {
    alertClassLocal: _(() => `a_alert a_alert_${t.value}`)
  };
}
function zP(e, { emit: t }) {
  const n = d(e, "closable"), r = d(e, "removeAlertOnClose"), s = B(!1);
  return {
    close: () => {
      n.value && (r.value && (s.value = !0), t("close"));
    },
    isHidden: s
  };
}
const YP = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>
</svg>`, Tu = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4m.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2"/>
</svg>`, XP = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle-fill" viewBox="0 0 16 16">
  <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2"/>
</svg>`, mu = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293z"/>
</svg>`, Ft = B({
  propsDefault: {
    alertClass: void 0,
    alertContentClass: void 0,
    btnCloseAttributes: {},
    closable: !1,
    extra: void 0,
    html: void 0,
    icon: void 0,
    iconClass: void 0,
    isVisible: !1,
    removeAlertOnClose: !1,
    safeHtml: void 0,
    showIcon: !1,
    text: void 0,
    textClose: "_ALERT_CLOSE_",
    type: "danger"
  },
  icons: {
    success: YP,
    danger: mu,
    info: XP,
    warning: Tu
  }
}), sde = {
  install: (e, {
    propsDefault: t = {},
    icons: n = {}
  } = {}) => {
    Ft.value.propsDefault = {
      ...Ft.value.propsDefault,
      ...t
    }, Ft.value.icons = {
      ...Ft.value.icons,
      ...n
    };
  }
};
function ZP(e) {
  const t = d(e, "icon"), n = d(e, "showIcon"), r = d(e, "type");
  return {
    iconLocal: _(() => {
      if (n.value)
        return t.value ? t.value : Ft.value.icons[r.value];
    })
  };
}
const Ic = {
  name: "AAlert",
  props: {
    alertClass: {
      type: [String, Object],
      required: !1,
      default: () => Ft.value.propsDefault.alertClass
    },
    alertContentClass: {
      type: [String, Object],
      required: !1,
      default: () => Ft.value.propsDefault.alertContentClass
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaAtomic: {
      type: Boolean,
      required: !1,
      default: !0
    },
    btnCloseAttributes: {
      type: Object,
      required: !1,
      default: () => Ft.value.propsDefault.btnCloseAttributes
    },
    closable: {
      type: Boolean,
      required: !1,
      default: () => Ft.value.propsDefault.closable
    },
    extra: {
      type: Object,
      required: !1,
      default: () => Ft.value.propsDefault.extra
    },
    html: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.html
    },
    icon: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.icon
    },
    iconClass: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.iconClass
    },
    isVisible: {
      type: Boolean,
      required: !1,
      default: () => Ft.value.propsDefault.isVisible
    },
    removeAlertOnClose: {
      type: Boolean,
      required: !1,
      default: () => Ft.value.propsDefault.removeAlertOnClose
    },
    role: {
      type: String,
      required: !1,
      default: "alert"
    },
    safeHtml: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.safeHtml
    },
    showIcon: {
      type: Boolean,
      required: !1,
      default: () => Ft.value.propsDefault.showIcon
    },
    text: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.text
    },
    textClose: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.textClose
    },
    type: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.type
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      alertClassLocal: r
    } = jP(e), {
      close: s,
      isHidden: l
    } = zP(e, t), {
      iconLocal: o
    } = ZP(e), {
      ariaAtomicLocal: u,
      roleLocal: h
    } = KP(e);
    return n({
      close: s,
      isHidden: l
    }), {
      alertClassLocal: r,
      ariaAtomicLocal: u,
      close: s,
      iconLocal: o,
      isHidden: l,
      roleLocal: h
    };
  },
  render() {
    return this.isHidden ? null : c("div", {
      class: [
        "a_alert__parent",
        {
          a_alert__parent_closable: this.closable
        }
      ]
    }, [
      c("div", {
        role: this.roleLocal,
        ariaAtomic: this.ariaAtomicLocal
      }, [
        this.isVisible && c("div", {
          class: [this.alertClass, this.alertClassLocal]
        }, [
          this.iconLocal && c(ut, {
            icon: this.iconLocal,
            class: [
              "a_alert__icon",
              this.iconClass
            ]
          }),
          c("div", {
            class: [
              "a_alert__content",
              this.alertContentClass
            ]
          }, [
            (this.html || this.text || this.safeHtml) && c(Ae, {
              alwaysTranslate: this.alwaysTranslate,
              extra: this.extra,
              html: this.html,
              safeHtml: this.safeHtml,
              text: this.text
            }),
            this.$slots.default && this.$slots.default()
          ])
        ])
      ]),
      this.isVisible && this.closable && c(ft, {
        alwaysTranslate: this.alwaysTranslate,
        type: "button",
        class: "a_btn_close",
        textScreenReader: this.textClose,
        ...this.btnCloseAttributes,
        onClick: this.close
      })
    ]);
  }
};
function mT(e, { emit: t }) {
  return {
    clickEmit: (r) => {
      t("click", r);
    }
  };
}
const gr = [
  "auto",
  "auto-start",
  "auto-end",
  "top",
  "top-start",
  "top-end",
  "right",
  "right-start",
  "right-end",
  "bottom",
  "bottom-start",
  "bottom-end",
  "left",
  "left-start",
  "left-end"
], ft = {
  name: "AButton",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaDisabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_btn_")
    },
    isSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    modelSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tabindex: {
      type: [Number, String],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => gr.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => it(e) ? e === "auto" : ca(e)
    },
    type: {
      type: String,
      required: !1,
      default: "button",
      validator: (e) => ["button", "submit", "reset"].indexOf(e) !== -1
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      clickEmit: n
    } = mT(e, t);
    return {
      clickEmit: n
    };
  },
  render() {
    return c(me, {
      ...this.$attrs,
      ...this.$props,
      onClick: this.clickEmit
    }, this.$slots);
  }
};
var vo = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function JP(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var yo = { exports: {} }, TE;
function QP() {
  if (TE) return yo.exports;
  TE = 1;
  function e() {
  }
  return e.prototype = {
    on: function(t, n, r) {
      var s = this.e || (this.e = {});
      return (s[t] || (s[t] = [])).push({
        fn: n,
        ctx: r
      }), this;
    },
    once: function(t, n, r) {
      var s = this;
      function l() {
        s.off(t, l), n.apply(r, arguments);
      }
      return l._ = n, this.on(t, l, r);
    },
    emit: function(t) {
      var n = [].slice.call(arguments, 1), r = ((this.e || (this.e = {}))[t] || []).slice(), s = 0, l = r.length;
      for (s; s < l; s++)
        r[s].fn.apply(r[s].ctx, n);
      return this;
    },
    off: function(t, n) {
      var r = this.e || (this.e = {}), s = r[t], l = [];
      if (s && n)
        for (var o = 0, u = s.length; o < u; o++)
          s[o].fn !== n && s[o].fn._ !== n && l.push(s[o]);
      return l.length ? r[t] = l : delete r[t], this;
    }
  }, yo.exports = e, yo.exports.TinyEmitter = e, yo.exports;
}
var id, mE;
function ex() {
  if (mE) return id;
  mE = 1;
  var e = QP();
  return id = new e(), id;
}
var tx = ex();
const go = /* @__PURE__ */ JP(tx), Rt = {
  $on: (...e) => go.on(...e),
  $once: (...e) => go.once(...e),
  $off: (...e) => go.off(...e),
  $emit: (...e) => go.emit(...e)
}, jo = B(void 0);
function Bo(e) {
  jo.value = e, Rt.$emit("updateViewOnResize", e), e ? document.body.classList.add("a_mobile") : document.body.classList.remove("a_mobile");
}
function En() {
  return {
    isMobileWidth: jo,
    setIsMobileWidth: Bo
  };
}
const Su = B("de");
let ST = {};
const bT = B(/* @__PURE__ */ new Date()), vc = B(/* @__PURE__ */ new Date());
let LT = {};
const li = B(!0), nx = _(() => [
  Su.value,
  bT.value,
  li.value
]);
rt(nx, () => {
  ax();
}, {
  immediate: !0
});
function Ti() {
  return {
    isTranslate: li,
    language: Su,
    setI18n: IT,
    setLanguage: vT,
    toggleTranslate: rx,
    translationChanges: vc,
    updateTranslation: yT
  };
}
function IT(e = {}) {
  ST = e;
}
function vT(e = "") {
  Su.value = e;
}
function rx(e) {
  we(e) ? li.value = !li.value : li.value = !!e;
}
function ax() {
  LT = ST[Su.value], vc.value = /* @__PURE__ */ new Date();
}
function yT() {
  bT.value = /* @__PURE__ */ new Date();
}
const wd = B({
  replaceText: void 0
}), sx = (e = {}) => {
  qe(e == null ? void 0 : e.replaceText) && (wd.value.replaceText = e == null ? void 0 : e.replaceText);
}, ide = {
  install: (e, t, n, r = {}) => {
    IT(t), vT(n), yT(), sx(r);
  }
};
function Ms() {
  return {
    getTranslatedText: Bt,
    getTranslationAttributes: ix,
    isPlaceholderTranslate: Da,
    replaceText: gT,
    spliceString: RT
  };
}
function Da(e = "") {
  return !(!it(e) || e[0] !== "_" || e[e.length - 1] !== "_");
}
function Bt({ placeholder: e, translationObj: t = LT, extra: n, alwaysTranslate: r = !1 }) {
  if (!t || !vc.value)
    return e;
  let s;
  return !r && !li.value ? s = e : s = ie(t[e]) ? e : t[e], n ? gT({
    text: s,
    object: n
  }) : s;
}
function gT({ text: e = "", object: t }) {
  var s, l;
  if (qe((s = wd.value) == null ? void 0 : s.replaceText))
    return (l = wd.value) == null ? void 0 : l.replaceText({ text: e, object: t });
  if (!nt(t))
    return e;
  let n = e, r = 0;
  for (; ; ) {
    const o = n.indexOf("{{", r), u = n.indexOf("}}", r);
    if (o === -1 || u === -1)
      break;
    const h = n.slice(o + 2, u).trim(), A = fe(t, h);
    n = RT({
      text: n,
      replaceText: A,
      firstIndex: o,
      lastindex: u + 2
    }), r = o + `${A}`.length;
  }
  return n;
}
function RT({
  text: e = "",
  replaceText: t = "",
  firstIndex: n,
  lastindex: r
}) {
  return `${e.slice(0, n)}${t}${e.slice(r, e.length)}`;
}
function ix({ attr: e = "", value: t = "", translation: n = "", isTranslate: r = !0 }) {
  const s = {};
  return ie(n) || (s[e] = n), r && (s[`data-translate-${e}`] = t), s;
}
function yc(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "ariaLabel"), r = d(e, "extra"), {
    translationChanges: s
  } = Ti(), {
    isPlaceholderTranslate: l,
    getTranslatedText: o,
    getTranslationAttributes: u
  } = Ms(), {
    isMobileWidth: h
  } = En(), A = _(() => nt(n.value) ? h.value ? n.value.mobile : n.value.desktop : n.value), E = _(() => !we(A.value)), p = _(() => !(!E.value || !l(A.value))), T = _(() => {
    if (s.value)
      return p.value ? o({
        placeholder: A.value,
        extra: r.value,
        alwaysTranslate: t.value
      }) : A.value;
  });
  return {
    ariaLabelAttributes: _(() => E.value ? u({
      attr: "aria-label",
      translation: T.value,
      value: A.value,
      isTranslate: p.value
    }) : {}),
    hasAriaLabel: E
  };
}
const lx = {
  button: !0,
  submit: !0,
  reset: !0
};
function ox(e, {
  isRouterLink: t = _(() => !1),
  tagLocal: n = _(() => "")
}) {
  const r = d(e, "disabled"), s = d(e, "href"), l = d(e, "target"), o = d(e, "to"), u = d(e, "type"), h = _(() => {
    if (n.value === "button" && lx[u.value])
      return u.value;
  });
  return {
    toHrefAttributes: _(() => t.value ? {
      target: l.value,
      to: o.value
    } : r.value ? {} : {
      href: s.value,
      target: l.value
    }),
    typeAttribut: h
  };
}
function ux(e, { emit: t }) {
  const n = d(e, "prevent"), r = d(e, "stop"), s = d(e, "disabled"), l = d(e, "ariaDisabled");
  return {
    onClick: (u) => {
      n.value && u.preventDefault(), r.value && u.stopPropagation(), !(s.value || l.value) && t("click", {
        props: e,
        $event: u
      });
    }
  };
}
function _x(e, {
  isTitleVisible: t = B(!1)
}) {
  const n = d(e, "id"), r = d(e, "minWidth"), s = d(e, "width"), l = d(e, "maxWidth"), o = d(e, "withoutAriaDescribedby"), u = _(() => {
    if (!o.value && t.value)
      return `${n.value}_title`;
  }), h = _(() => {
    const A = {};
    return ie(r.value) || (A["min-width"] = `${r.value}px`), ie(s.value) || (A.width = `${s.value}px`), ie(l.value) || (A["max-width"] = `${l.value}px`), A;
  });
  return {
    ariaDescribedby: u,
    tooltipStyles: h
  };
}
const dx = ["top", "right", "bottom", "left"], SE = ["start", "end"], bE = /* @__PURE__ */ dx.reduce((e, t) => e.concat(t, t + "-" + SE[0], t + "-" + SE[1]), []), fi = Math.min, Os = Math.max, zo = Math.round, Ro = Math.floor, xa = (e) => ({
  x: e,
  y: e
}), cx = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, fx = {
  start: "end",
  end: "start"
};
function Pd(e, t, n) {
  return Os(e, fi(t, n));
}
function Fa(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function kr(e) {
  return e.split("-")[0];
}
function qr(e) {
  return e.split("-")[1];
}
function gc(e) {
  return e === "x" ? "y" : "x";
}
function Rc(e) {
  return e === "y" ? "height" : "width";
}
function ml(e) {
  return ["top", "bottom"].includes(kr(e)) ? "y" : "x";
}
function Oc(e) {
  return gc(ml(e));
}
function OT(e, t, n) {
  n === void 0 && (n = !1);
  const r = qr(e), s = Oc(e), l = Rc(s);
  let o = s === "x" ? r === (n ? "end" : "start") ? "right" : "left" : r === "start" ? "bottom" : "top";
  return t.reference[l] > t.floating[l] && (o = Xo(o)), [o, Xo(o)];
}
function hx(e) {
  const t = Xo(e);
  return [Yo(e), t, Yo(t)];
}
function Yo(e) {
  return e.replace(/start|end/g, (t) => fx[t]);
}
function Ax(e, t, n) {
  const r = ["left", "right"], s = ["right", "left"], l = ["top", "bottom"], o = ["bottom", "top"];
  switch (e) {
    case "top":
    case "bottom":
      return n ? t ? s : r : t ? r : s;
    case "left":
    case "right":
      return t ? l : o;
    default:
      return [];
  }
}
function Ex(e, t, n, r) {
  const s = qr(e);
  let l = Ax(kr(e), n === "start", r);
  return s && (l = l.map((o) => o + "-" + s), t && (l = l.concat(l.map(Yo)))), l;
}
function Xo(e) {
  return e.replace(/left|right|bottom|top/g, (t) => cx[t]);
}
function px(e) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...e
  };
}
function CT(e) {
  return typeof e != "number" ? px(e) : {
    top: e,
    right: e,
    bottom: e,
    left: e
  };
}
function Zo(e) {
  const {
    x: t,
    y: n,
    width: r,
    height: s
  } = e;
  return {
    width: r,
    height: s,
    top: n,
    left: t,
    right: t + r,
    bottom: n + s,
    x: t,
    y: n
  };
}
function LE(e, t, n) {
  let {
    reference: r,
    floating: s
  } = e;
  const l = ml(t), o = Oc(t), u = Rc(o), h = kr(t), A = l === "y", E = r.x + r.width / 2 - s.width / 2, p = r.y + r.height / 2 - s.height / 2, T = r[u] / 2 - s[u] / 2;
  let S;
  switch (h) {
    case "top":
      S = {
        x: E,
        y: r.y - s.height
      };
      break;
    case "bottom":
      S = {
        x: E,
        y: r.y + r.height
      };
      break;
    case "right":
      S = {
        x: r.x + r.width,
        y: p
      };
      break;
    case "left":
      S = {
        x: r.x - s.width,
        y: p
      };
      break;
    default:
      S = {
        x: r.x,
        y: r.y
      };
  }
  switch (qr(t)) {
    case "start":
      S[o] -= T * (n && A ? -1 : 1);
      break;
    case "end":
      S[o] += T * (n && A ? -1 : 1);
      break;
  }
  return S;
}
const Tx = async (e, t, n) => {
  const {
    placement: r = "bottom",
    strategy: s = "absolute",
    middleware: l = [],
    platform: o
  } = n, u = l.filter(Boolean), h = await (o.isRTL == null ? void 0 : o.isRTL(t));
  let A = await o.getElementRects({
    reference: e,
    floating: t,
    strategy: s
  }), {
    x: E,
    y: p
  } = LE(A, r, h), T = r, S = {}, b = 0;
  for (let L = 0; L < u.length; L++) {
    const {
      name: I,
      fn: v
    } = u[L], {
      x: R,
      y: g,
      data: D,
      reset: w
    } = await v({
      x: E,
      y: p,
      initialPlacement: r,
      placement: T,
      strategy: s,
      middlewareData: S,
      rects: A,
      platform: o,
      elements: {
        reference: e,
        floating: t
      }
    });
    E = R ?? E, p = g ?? p, S = {
      ...S,
      [I]: {
        ...S[I],
        ...D
      }
    }, w && b <= 50 && (b++, typeof w == "object" && (w.placement && (T = w.placement), w.rects && (A = w.rects === !0 ? await o.getElementRects({
      reference: e,
      floating: t,
      strategy: s
    }) : w.rects), {
      x: E,
      y: p
    } = LE(A, T, h)), L = -1);
  }
  return {
    x: E,
    y: p,
    placement: T,
    strategy: s,
    middlewareData: S
  };
};
async function Cc(e, t) {
  var n;
  t === void 0 && (t = {});
  const {
    x: r,
    y: s,
    platform: l,
    rects: o,
    elements: u,
    strategy: h
  } = e, {
    boundary: A = "clippingAncestors",
    rootBoundary: E = "viewport",
    elementContext: p = "floating",
    altBoundary: T = !1,
    padding: S = 0
  } = Fa(t, e), b = CT(S), I = u[T ? p === "floating" ? "reference" : "floating" : p], v = Zo(await l.getClippingRect({
    element: (n = await (l.isElement == null ? void 0 : l.isElement(I))) == null || n ? I : I.contextElement || await (l.getDocumentElement == null ? void 0 : l.getDocumentElement(u.floating)),
    boundary: A,
    rootBoundary: E,
    strategy: h
  })), R = p === "floating" ? {
    ...o.floating,
    x: r,
    y: s
  } : o.reference, g = await (l.getOffsetParent == null ? void 0 : l.getOffsetParent(u.floating)), D = await (l.isElement == null ? void 0 : l.isElement(g)) ? await (l.getScale == null ? void 0 : l.getScale(g)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, w = Zo(l.convertOffsetParentRelativeRectToViewportRelativeRect ? await l.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements: u,
    rect: R,
    offsetParent: g,
    strategy: h
  }) : R);
  return {
    top: (v.top - w.top + b.top) / D.y,
    bottom: (w.bottom - v.bottom + b.bottom) / D.y,
    left: (v.left - w.left + b.left) / D.x,
    right: (w.right - v.right + b.right) / D.x
  };
}
const mx = (e) => ({
  name: "arrow",
  options: e,
  async fn(t) {
    const {
      x: n,
      y: r,
      placement: s,
      rects: l,
      platform: o,
      elements: u,
      middlewareData: h
    } = t, {
      element: A,
      padding: E = 0
    } = Fa(e, t) || {};
    if (A == null)
      return {};
    const p = CT(E), T = {
      x: n,
      y: r
    }, S = Oc(s), b = Rc(S), L = await o.getDimensions(A), I = S === "y", v = I ? "top" : "left", R = I ? "bottom" : "right", g = I ? "clientHeight" : "clientWidth", D = l.reference[b] + l.reference[S] - T[S] - l.floating[b], w = T[S] - l.reference[S], M = await (o.getOffsetParent == null ? void 0 : o.getOffsetParent(A));
    let P = M ? M[g] : 0;
    (!P || !await (o.isElement == null ? void 0 : o.isElement(M))) && (P = u.floating[g] || l.floating[b]);
    const F = D / 2 - w / 2, C = P / 2 - L[b] / 2 - 1, k = fi(p[v], C), W = fi(p[R], C), K = k, le = P - L[b] - W, te = P / 2 - L[b] / 2 + F, _e = Pd(K, te, le), ae = !h.arrow && qr(s) != null && te !== _e && l.reference[b] / 2 - (te < K ? k : W) - L[b] / 2 < 0, oe = ae ? te < K ? te - K : te - le : 0;
    return {
      [S]: T[S] + oe,
      data: {
        [S]: _e,
        centerOffset: te - _e - oe,
        ...ae && {
          alignmentOffset: oe
        }
      },
      reset: ae
    };
  }
});
function Sx(e, t, n) {
  return (e ? [...n.filter((s) => qr(s) === e), ...n.filter((s) => qr(s) !== e)] : n.filter((s) => kr(s) === s)).filter((s) => e ? qr(s) === e || (t ? Yo(s) !== s : !1) : !0);
}
const bx = function(e) {
  return e === void 0 && (e = {}), {
    name: "autoPlacement",
    options: e,
    async fn(t) {
      var n, r, s;
      const {
        rects: l,
        middlewareData: o,
        placement: u,
        platform: h,
        elements: A
      } = t, {
        crossAxis: E = !1,
        alignment: p,
        allowedPlacements: T = bE,
        autoAlignment: S = !0,
        ...b
      } = Fa(e, t), L = p !== void 0 || T === bE ? Sx(p || null, S, T) : T, I = await Cc(t, b), v = ((n = o.autoPlacement) == null ? void 0 : n.index) || 0, R = L[v];
      if (R == null)
        return {};
      const g = OT(R, l, await (h.isRTL == null ? void 0 : h.isRTL(A.floating)));
      if (u !== R)
        return {
          reset: {
            placement: L[0]
          }
        };
      const D = [I[kr(R)], I[g[0]], I[g[1]]], w = [...((r = o.autoPlacement) == null ? void 0 : r.overflows) || [], {
        placement: R,
        overflows: D
      }], M = L[v + 1];
      if (M)
        return {
          data: {
            index: v + 1,
            overflows: w
          },
          reset: {
            placement: M
          }
        };
      const P = w.map((k) => {
        const W = qr(k.placement);
        return [k.placement, W && E ? (
          // Check along the mainAxis and main crossAxis side.
          k.overflows.slice(0, 2).reduce((K, le) => K + le, 0)
        ) : (
          // Check only the mainAxis.
          k.overflows[0]
        ), k.overflows];
      }).sort((k, W) => k[1] - W[1]), C = ((s = P.filter((k) => k[2].slice(
        0,
        // Aligned placements should not check their opposite crossAxis
        // side.
        qr(k[0]) ? 2 : 3
      ).every((W) => W <= 0))[0]) == null ? void 0 : s[0]) || P[0][0];
      return C !== u ? {
        data: {
          index: v + 1,
          overflows: w
        },
        reset: {
          placement: C
        }
      } : {};
    }
  };
}, Lx = function(e) {
  return e === void 0 && (e = {}), {
    name: "flip",
    options: e,
    async fn(t) {
      var n, r;
      const {
        placement: s,
        middlewareData: l,
        rects: o,
        initialPlacement: u,
        platform: h,
        elements: A
      } = t, {
        mainAxis: E = !0,
        crossAxis: p = !0,
        fallbackPlacements: T,
        fallbackStrategy: S = "bestFit",
        fallbackAxisSideDirection: b = "none",
        flipAlignment: L = !0,
        ...I
      } = Fa(e, t);
      if ((n = l.arrow) != null && n.alignmentOffset)
        return {};
      const v = kr(s), R = kr(u) === u, g = await (h.isRTL == null ? void 0 : h.isRTL(A.floating)), D = T || (R || !L ? [Xo(u)] : hx(u));
      !T && b !== "none" && D.push(...Ex(u, L, b, g));
      const w = [u, ...D], M = await Cc(t, I), P = [];
      let F = ((r = l.flip) == null ? void 0 : r.overflows) || [];
      if (E && P.push(M[v]), p) {
        const K = OT(s, o, g);
        P.push(M[K[0]], M[K[1]]);
      }
      if (F = [...F, {
        placement: s,
        overflows: P
      }], !P.every((K) => K <= 0)) {
        var C, k;
        const K = (((C = l.flip) == null ? void 0 : C.index) || 0) + 1, le = w[K];
        if (le)
          return {
            data: {
              index: K,
              overflows: F
            },
            reset: {
              placement: le
            }
          };
        let te = (k = F.filter((_e) => _e.overflows[0] <= 0).sort((_e, ae) => _e.overflows[1] - ae.overflows[1])[0]) == null ? void 0 : k.placement;
        if (!te)
          switch (S) {
            case "bestFit": {
              var W;
              const _e = (W = F.map((ae) => [ae.placement, ae.overflows.filter((oe) => oe > 0).reduce((oe, Le) => oe + Le, 0)]).sort((ae, oe) => ae[1] - oe[1])[0]) == null ? void 0 : W[0];
              _e && (te = _e);
              break;
            }
            case "initialPlacement":
              te = u;
              break;
          }
        if (s !== te)
          return {
            reset: {
              placement: te
            }
          };
      }
      return {};
    }
  };
};
async function Ix(e, t) {
  const {
    placement: n,
    platform: r,
    elements: s
  } = e, l = await (r.isRTL == null ? void 0 : r.isRTL(s.floating)), o = kr(n), u = qr(n), h = ml(n) === "y", A = ["left", "top"].includes(o) ? -1 : 1, E = l && h ? -1 : 1, p = Fa(t, e);
  let {
    mainAxis: T,
    crossAxis: S,
    alignmentAxis: b
  } = typeof p == "number" ? {
    mainAxis: p,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...p
  };
  return u && typeof b == "number" && (S = u === "end" ? b * -1 : b), h ? {
    x: S * E,
    y: T * A
  } : {
    x: T * A,
    y: S * E
  };
}
const vx = function(e) {
  return e === void 0 && (e = 0), {
    name: "offset",
    options: e,
    async fn(t) {
      var n, r;
      const {
        x: s,
        y: l,
        placement: o,
        middlewareData: u
      } = t, h = await Ix(t, e);
      return o === ((n = u.offset) == null ? void 0 : n.placement) && (r = u.arrow) != null && r.alignmentOffset ? {} : {
        x: s + h.x,
        y: l + h.y,
        data: {
          ...h,
          placement: o
        }
      };
    }
  };
}, yx = function(e) {
  return e === void 0 && (e = {}), {
    name: "shift",
    options: e,
    async fn(t) {
      const {
        x: n,
        y: r,
        placement: s
      } = t, {
        mainAxis: l = !0,
        crossAxis: o = !1,
        limiter: u = {
          fn: (I) => {
            let {
              x: v,
              y: R
            } = I;
            return {
              x: v,
              y: R
            };
          }
        },
        ...h
      } = Fa(e, t), A = {
        x: n,
        y: r
      }, E = await Cc(t, h), p = ml(kr(s)), T = gc(p);
      let S = A[T], b = A[p];
      if (l) {
        const I = T === "y" ? "top" : "left", v = T === "y" ? "bottom" : "right", R = S + E[I], g = S - E[v];
        S = Pd(R, S, g);
      }
      if (o) {
        const I = p === "y" ? "top" : "left", v = p === "y" ? "bottom" : "right", R = b + E[I], g = b - E[v];
        b = Pd(R, b, g);
      }
      const L = u.fn({
        ...t,
        [T]: S,
        [p]: b
      });
      return {
        ...L,
        data: {
          x: L.x - n,
          y: L.y - r
        }
      };
    }
  };
}, gx = function(e) {
  return e === void 0 && (e = {}), {
    options: e,
    fn(t) {
      const {
        x: n,
        y: r,
        placement: s,
        rects: l,
        middlewareData: o
      } = t, {
        offset: u = 0,
        mainAxis: h = !0,
        crossAxis: A = !0
      } = Fa(e, t), E = {
        x: n,
        y: r
      }, p = ml(s), T = gc(p);
      let S = E[T], b = E[p];
      const L = Fa(u, t), I = typeof L == "number" ? {
        mainAxis: L,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...L
      };
      if (h) {
        const g = T === "y" ? "height" : "width", D = l.reference[T] - l.floating[g] + I.mainAxis, w = l.reference[T] + l.reference[g] - I.mainAxis;
        S < D ? S = D : S > w && (S = w);
      }
      if (A) {
        var v, R;
        const g = T === "y" ? "width" : "height", D = ["top", "left"].includes(kr(s)), w = l.reference[p] - l.floating[g] + (D && ((v = o.offset) == null ? void 0 : v[p]) || 0) + (D ? 0 : I.crossAxis), M = l.reference[p] + l.reference[g] + (D ? 0 : ((R = o.offset) == null ? void 0 : R[p]) || 0) - (D ? I.crossAxis : 0);
        b < w ? b = w : b > M && (b = M);
      }
      return {
        [T]: S,
        [p]: b
      };
    }
  };
};
function bu() {
  return typeof window < "u";
}
function ra(e) {
  return Nc(e) ? (e.nodeName || "").toLowerCase() : "#document";
}
function qn(e) {
  var t;
  return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;
}
function fa(e) {
  var t;
  return (t = (Nc(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement;
}
function Nc(e) {
  return bu() ? e instanceof Node || e instanceof qn(e).Node : !1;
}
function Ur(e) {
  return bu() ? e instanceof Element || e instanceof qn(e).Element : !1;
}
function Hr(e) {
  return bu() ? e instanceof HTMLElement || e instanceof qn(e).HTMLElement : !1;
}
function IE(e) {
  return !bu() || typeof ShadowRoot > "u" ? !1 : e instanceof ShadowRoot || e instanceof qn(e).ShadowRoot;
}
function Sl(e) {
  const {
    overflow: t,
    overflowX: n,
    overflowY: r,
    display: s
  } = _r(e);
  return /auto|scroll|overlay|hidden|clip/.test(t + r + n) && !["inline", "contents"].includes(s);
}
function Rx(e) {
  return ["table", "td", "th"].includes(ra(e));
}
function Ox(e) {
  return [":popover-open", ":modal"].some((t) => {
    try {
      return e.matches(t);
    } catch {
      return !1;
    }
  });
}
function Dc(e) {
  const t = Bc(), n = Ur(e) ? _r(e) : e;
  return n.transform !== "none" || n.perspective !== "none" || (n.containerType ? n.containerType !== "normal" : !1) || !t && (n.backdropFilter ? n.backdropFilter !== "none" : !1) || !t && (n.filter ? n.filter !== "none" : !1) || ["transform", "perspective", "filter"].some((r) => (n.willChange || "").includes(r)) || ["paint", "layout", "strict", "content"].some((r) => (n.contain || "").includes(r));
}
function Cx(e) {
  let t = hi(e);
  for (; Hr(t) && !Lu(t); ) {
    if (Dc(t))
      return t;
    if (Ox(t))
      return null;
    t = hi(t);
  }
  return null;
}
function Bc() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
function Lu(e) {
  return ["html", "body", "#document"].includes(ra(e));
}
function _r(e) {
  return qn(e).getComputedStyle(e);
}
function Iu(e) {
  return Ur(e) ? {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  } : {
    scrollLeft: e.scrollX,
    scrollTop: e.scrollY
  };
}
function hi(e) {
  if (ra(e) === "html")
    return e;
  const t = (
    // Step into the shadow DOM of the parent of a slotted node.
    e.assignedSlot || // DOM Element detected.
    e.parentNode || // ShadowRoot detected.
    IE(e) && e.host || // Fallback.
    fa(e)
  );
  return IE(t) ? t.host : t;
}
function NT(e) {
  const t = hi(e);
  return Lu(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : Hr(t) && Sl(t) ? t : NT(t);
}
function ll(e, t, n) {
  var r;
  t === void 0 && (t = []), n === void 0 && (n = !0);
  const s = NT(e), l = s === ((r = e.ownerDocument) == null ? void 0 : r.body), o = qn(s);
  if (l) {
    const u = Nx(o);
    return t.concat(o, o.visualViewport || [], Sl(s) ? s : [], u && n ? ll(u) : []);
  }
  return t.concat(s, ll(s, [], n));
}
function Nx(e) {
  return e.parent && Object.getPrototypeOf(e.parent) ? e.frameElement : null;
}
function DT(e) {
  const t = _r(e);
  let n = parseFloat(t.width) || 0, r = parseFloat(t.height) || 0;
  const s = Hr(e), l = s ? e.offsetWidth : n, o = s ? e.offsetHeight : r, u = zo(n) !== l || zo(r) !== o;
  return u && (n = l, r = o), {
    width: n,
    height: r,
    $: u
  };
}
function wc(e) {
  return Ur(e) ? e : e.contextElement;
}
function oi(e) {
  const t = wc(e);
  if (!Hr(t))
    return xa(1);
  const n = t.getBoundingClientRect(), {
    width: r,
    height: s,
    $: l
  } = DT(t);
  let o = (l ? zo(n.width) : n.width) / r, u = (l ? zo(n.height) : n.height) / s;
  return (!o || !Number.isFinite(o)) && (o = 1), (!u || !Number.isFinite(u)) && (u = 1), {
    x: o,
    y: u
  };
}
const Dx = /* @__PURE__ */ xa(0);
function BT(e) {
  const t = qn(e);
  return !Bc() || !t.visualViewport ? Dx : {
    x: t.visualViewport.offsetLeft,
    y: t.visualViewport.offsetTop
  };
}
function Bx(e, t, n) {
  return t === void 0 && (t = !1), !n || t && n !== qn(e) ? !1 : t;
}
function Bs(e, t, n, r) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  const s = e.getBoundingClientRect(), l = wc(e);
  let o = xa(1);
  t && (r ? Ur(r) && (o = oi(r)) : o = oi(e));
  const u = Bx(l, n, r) ? BT(l) : xa(0);
  let h = (s.left + u.x) / o.x, A = (s.top + u.y) / o.y, E = s.width / o.x, p = s.height / o.y;
  if (l) {
    const T = qn(l), S = r && Ur(r) ? qn(r) : r;
    let b = T, L = b.frameElement;
    for (; L && r && S !== b; ) {
      const I = oi(L), v = L.getBoundingClientRect(), R = _r(L), g = v.left + (L.clientLeft + parseFloat(R.paddingLeft)) * I.x, D = v.top + (L.clientTop + parseFloat(R.paddingTop)) * I.y;
      h *= I.x, A *= I.y, E *= I.x, p *= I.y, h += g, A += D, b = qn(L), L = b.frameElement;
    }
  }
  return Zo({
    width: E,
    height: p,
    x: h,
    y: A
  });
}
const wx = [":popover-open", ":modal"];
function wT(e) {
  return wx.some((t) => {
    try {
      return e.matches(t);
    } catch {
      return !1;
    }
  });
}
function Px(e) {
  let {
    elements: t,
    rect: n,
    offsetParent: r,
    strategy: s
  } = e;
  const l = s === "fixed", o = fa(r), u = t ? wT(t.floating) : !1;
  if (r === o || u && l)
    return n;
  let h = {
    scrollLeft: 0,
    scrollTop: 0
  }, A = xa(1);
  const E = xa(0), p = Hr(r);
  if ((p || !p && !l) && ((ra(r) !== "body" || Sl(o)) && (h = Iu(r)), Hr(r))) {
    const T = Bs(r);
    A = oi(r), E.x = T.x + r.clientLeft, E.y = T.y + r.clientTop;
  }
  return {
    width: n.width * A.x,
    height: n.height * A.y,
    x: n.x * A.x - h.scrollLeft * A.x + E.x,
    y: n.y * A.y - h.scrollTop * A.y + E.y
  };
}
function xx(e) {
  return Array.from(e.getClientRects());
}
function PT(e) {
  return Bs(fa(e)).left + Iu(e).scrollLeft;
}
function Fx(e) {
  const t = fa(e), n = Iu(e), r = e.ownerDocument.body, s = Os(t.scrollWidth, t.clientWidth, r.scrollWidth, r.clientWidth), l = Os(t.scrollHeight, t.clientHeight, r.scrollHeight, r.clientHeight);
  let o = -n.scrollLeft + PT(e);
  const u = -n.scrollTop;
  return _r(r).direction === "rtl" && (o += Os(t.clientWidth, r.clientWidth) - s), {
    width: s,
    height: l,
    x: o,
    y: u
  };
}
function Mx(e, t) {
  const n = qn(e), r = fa(e), s = n.visualViewport;
  let l = r.clientWidth, o = r.clientHeight, u = 0, h = 0;
  if (s) {
    l = s.width, o = s.height;
    const A = Bc();
    (!A || A && t === "fixed") && (u = s.offsetLeft, h = s.offsetTop);
  }
  return {
    width: l,
    height: o,
    x: u,
    y: h
  };
}
function qx(e, t) {
  const n = Bs(e, !0, t === "fixed"), r = n.top + e.clientTop, s = n.left + e.clientLeft, l = Hr(e) ? oi(e) : xa(1), o = e.clientWidth * l.x, u = e.clientHeight * l.y, h = s * l.x, A = r * l.y;
  return {
    width: o,
    height: u,
    x: h,
    y: A
  };
}
function vE(e, t, n) {
  let r;
  if (t === "viewport")
    r = Mx(e, n);
  else if (t === "document")
    r = Fx(fa(e));
  else if (Ur(t))
    r = qx(t, n);
  else {
    const s = BT(e);
    r = {
      ...t,
      x: t.x - s.x,
      y: t.y - s.y
    };
  }
  return Zo(r);
}
function xT(e, t) {
  const n = hi(e);
  return n === t || !Ur(n) || Lu(n) ? !1 : _r(n).position === "fixed" || xT(n, t);
}
function $x(e, t) {
  const n = t.get(e);
  if (n)
    return n;
  let r = ll(e, [], !1).filter((u) => Ur(u) && ra(u) !== "body"), s = null;
  const l = _r(e).position === "fixed";
  let o = l ? hi(e) : e;
  for (; Ur(o) && !Lu(o); ) {
    const u = _r(o), h = Dc(o);
    !h && u.position === "fixed" && (s = null), (l ? !h && !s : !h && u.position === "static" && !!s && ["absolute", "fixed"].includes(s.position) || Sl(o) && !h && xT(e, o)) ? r = r.filter((E) => E !== o) : s = u, o = hi(o);
  }
  return t.set(e, r), r;
}
function kx(e) {
  let {
    element: t,
    boundary: n,
    rootBoundary: r,
    strategy: s
  } = e;
  const o = [...n === "clippingAncestors" ? $x(t, this._c) : [].concat(n), r], u = o[0], h = o.reduce((A, E) => {
    const p = vE(t, E, s);
    return A.top = Os(p.top, A.top), A.right = fi(p.right, A.right), A.bottom = fi(p.bottom, A.bottom), A.left = Os(p.left, A.left), A;
  }, vE(t, u, s));
  return {
    width: h.right - h.left,
    height: h.bottom - h.top,
    x: h.left,
    y: h.top
  };
}
function Ux(e) {
  const {
    width: t,
    height: n
  } = DT(e);
  return {
    width: t,
    height: n
  };
}
function Hx(e, t, n) {
  const r = Hr(t), s = fa(t), l = n === "fixed", o = Bs(e, !0, l, t);
  let u = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const h = xa(0);
  if (r || !r && !l)
    if ((ra(t) !== "body" || Sl(s)) && (u = Iu(t)), r) {
      const p = Bs(t, !0, l, t);
      h.x = p.x + t.clientLeft, h.y = p.y + t.clientTop;
    } else s && (h.x = PT(s));
  const A = o.left + u.scrollLeft - h.x, E = o.top + u.scrollTop - h.y;
  return {
    x: A,
    y: E,
    width: o.width,
    height: o.height
  };
}
function yE(e, t) {
  return !Hr(e) || _r(e).position === "fixed" ? null : t ? t(e) : e.offsetParent;
}
function FT(e, t) {
  const n = qn(e);
  if (!Hr(e) || wT(e))
    return n;
  let r = yE(e, t);
  for (; r && Rx(r) && _r(r).position === "static"; )
    r = yE(r, t);
  return r && (ra(r) === "html" || ra(r) === "body" && _r(r).position === "static" && !Dc(r)) ? n : r || Cx(e) || n;
}
const Vx = async function(e) {
  const t = this.getOffsetParent || FT, n = this.getDimensions;
  return {
    reference: Hx(e.reference, await t(e.floating), e.strategy),
    floating: {
      x: 0,
      y: 0,
      ...await n(e.floating)
    }
  };
};
function Wx(e) {
  return _r(e).direction === "rtl";
}
const Gx = {
  convertOffsetParentRelativeRectToViewportRelativeRect: Px,
  getDocumentElement: fa,
  getClippingRect: kx,
  getOffsetParent: FT,
  getElementRects: Vx,
  getClientRects: xx,
  getDimensions: Ux,
  getScale: oi,
  isElement: Ur,
  isRTL: Wx
};
function Kx(e, t) {
  let n = null, r;
  const s = fa(e);
  function l() {
    var u;
    clearTimeout(r), (u = n) == null || u.disconnect(), n = null;
  }
  function o(u, h) {
    u === void 0 && (u = !1), h === void 0 && (h = 1), l();
    const {
      left: A,
      top: E,
      width: p,
      height: T
    } = e.getBoundingClientRect();
    if (u || t(), !p || !T)
      return;
    const S = Ro(E), b = Ro(s.clientWidth - (A + p)), L = Ro(s.clientHeight - (E + T)), I = Ro(A), R = {
      rootMargin: -S + "px " + -b + "px " + -L + "px " + -I + "px",
      threshold: Os(0, fi(1, h)) || 1
    };
    let g = !0;
    function D(w) {
      const M = w[0].intersectionRatio;
      if (M !== h) {
        if (!g)
          return o();
        M ? o(!1, M) : r = setTimeout(() => {
          o(!1, 1e-7);
        }, 100);
      }
      g = !1;
    }
    try {
      n = new IntersectionObserver(D, {
        ...R,
        // Handle <iframe>s
        root: s.ownerDocument
      });
    } catch {
      n = new IntersectionObserver(D, R);
    }
    n.observe(e);
  }
  return o(!0), l;
}
function bl(e, t, n, r) {
  r === void 0 && (r = {});
  const {
    ancestorScroll: s = !0,
    ancestorResize: l = !0,
    elementResize: o = typeof ResizeObserver == "function",
    layoutShift: u = typeof IntersectionObserver == "function",
    animationFrame: h = !1
  } = r, A = wc(e), E = s || l ? [...A ? ll(A) : [], ...ll(t)] : [];
  E.forEach((v) => {
    s && v.addEventListener("scroll", n, {
      passive: !0
    }), l && v.addEventListener("resize", n);
  });
  const p = A && u ? Kx(A, n) : null;
  let T = -1, S = null;
  o && (S = new ResizeObserver((v) => {
    let [R] = v;
    R && R.target === A && S && (S.unobserve(t), cancelAnimationFrame(T), T = requestAnimationFrame(() => {
      var g;
      (g = S) == null || g.observe(t);
    })), n();
  }), A && !h && S.observe(A), S.observe(t));
  let b, L = h ? Bs(e) : null;
  h && I();
  function I() {
    const v = Bs(e);
    L && (v.x !== L.x || v.y !== L.y || v.width !== L.width || v.height !== L.height) && n(), L = v, b = requestAnimationFrame(I);
  }
  return n(), () => {
    var v;
    E.forEach((R) => {
      s && R.removeEventListener("scroll", n), l && R.removeEventListener("resize", n);
    }), p == null || p(), (v = S) == null || v.disconnect(), S = null, h && cancelAnimationFrame(b);
  };
}
const jx = bx, Ll = yx, Il = Lx, zx = mx, vu = gx, vl = (e, t, n) => {
  const r = /* @__PURE__ */ new Map(), s = {
    platform: Gx,
    ...n
  }, l = {
    ...s.platform,
    _c: r
  };
  return Tx(e, t, {
    ...s,
    platform: l
  });
};
function Yx(e) {
  return e != null && typeof e == "object" && "$el" in e;
}
function Xx(e) {
  if (Yx(e)) {
    const t = e.$el;
    return Nc(t) && ra(t) === "#comment" ? null : t;
  }
  return e;
}
function Zx(e) {
  return typeof e == "function" ? e() : TR(e);
}
function Jx(e) {
  return {
    name: "arrow",
    options: e,
    fn(t) {
      const n = Xx(Zx(e.element));
      return n == null ? {} : zx({
        element: n,
        padding: e.padding
      }).fn(t);
    }
  };
}
const X = {
  arrowDown: 40,
  arrowLeft: 37,
  arrowRight: 39,
  arrowUp: 38,
  e: 69,
  enter: 13,
  escape: 27,
  minus: 189,
  numMinus: 109,
  numPlus: 107,
  plus: 187,
  space: 32,
  tab: 9,
  backspace: 8,
  del: 46,
  home: 36,
  end: 35
};
function Qx(e) {
  const t = d(e, "id"), n = d(e, "offsetDistance"), r = d(e, "offsetSkidding"), s = d(e, "placement"), l = d(e, "timeClose"), o = B(void 0), u = B(void 0), h = B(!1), A = B(void 0), E = B(void 0), p = B(void 0), T = _(() => document.getElementById(t.value)), S = _(() => s.value && s.value.includes("auto")), b = _(() => [
    vx({
      mainAxis: n.value || 0,
      crossAxis: r.value || 0,
      alignmentAxis: null
    }),
    S.value ? jx() : Il(),
    Ll({ limiter: vu() }),
    E.value && Jx({
      element: E.value,
      padding: 5
    })
  ]), L = (W) => {
    W.keyCode === X.escape && k();
  }, I = () => {
    document.addEventListener("keydown", L);
  }, v = () => {
    document.removeEventListener("keydown", L);
  }, R = () => {
    Rt.$on("closeHtmlTitle", k);
  }, g = () => {
    Rt.$off("closeHtmlTitle", k);
  }, D = () => {
    o.value && (o.value(), o.value = void 0);
  }, w = () => {
    A.value = setTimeout(() => {
      k();
    }, l.value);
  }, M = () => {
    if (h.value) {
      clearTimeout(A.value);
      return;
    }
    h.value = !0;
  }, P = () => {
    o.value || !T.value || !p.value || (o.value = bl(T.value, p.value, () => {
      !T.value || !p.value || vl(
        T.value,
        p.value,
        {
          placement: s.value,
          middleware: b.value
        }
      ).then(({ x: W, y: K, middlewareData: le, placement: te }) => {
        Object.assign(p.value.style, {
          left: `${W}px`,
          top: `${K}px`
        });
        const _e = te.split("-")[0], ae = {
          top: "bottom",
          right: "left",
          bottom: "top",
          left: "right"
        }[_e];
        if (le.arrow) {
          const { x: oe, y: Le } = le.arrow;
          Object.assign(E.value.style, {
            left: ie(oe) ? "" : `${oe}px`,
            top: ie(Le) ? "" : `${Le}px`,
            [ae]: `${-E.value.offsetWidth / 2}px`
          });
        }
      });
    }), Rt.$emit("closeHtmlTitle"), R(), I());
  }, F = () => {
    clearTimeout(A.value);
  }, C = () => {
    w();
  };
  function k() {
    clearTimeout(A.value), D(), g(), v(), h.value = !1;
  }
  return {
    closeTitle: k,
    closeTitleWithTimer: w,
    componentRef: u,
    isTitleVisible: h,
    mouseEnterTooltip: F,
    mouseLeaveTooltip: C,
    showTitle: M,
    startPopper: P,
    titleArrowRef: E,
    titleRef: p
  };
}
function Pc(e) {
  const t = d(e, "popperContainerId"), n = _(() => `#${t.value}`);
  return {
    addPopperContainerInBody: ({ className: s = "a_popup_container" } = {}) => {
      if (!document.getElementById(t.value)) {
        const o = document.createElement("div");
        o.id = t.value, o.className = s, document.body.prepend(o);
      }
    },
    popperContainerIdSelector: n
  };
}
const eF = ["RouterLink", "router-link"];
function tF(e) {
  const t = d(e, "tag");
  return {
    tagLocal: _(() => eF.indexOf(t.value) !== -1 ? $r(t.value) : t.value)
  };
}
function nF(e, {
  showTitle: t = () => {
  },
  closeTitle: n = () => {
  },
  closeTitleWithTimer: r = () => {
  }
}) {
  const s = d(e, "isHide");
  return {
    onBlur: () => {
      n();
    },
    onFocus: () => {
      s.value || t();
    },
    onMouseenter: () => {
      s.value || t();
    },
    onMouseleave: () => {
      r();
    }
  };
}
const ol = {
  /*
   * called before bound element's attributes
   * or event listeners are applied
   */
  created(e, t) {
    var n;
    qe((n = t.value) == null ? void 0 : n.created) && t.value.created(e, t);
  },
  // called right before the element is inserted into the DOM.
  beforeMount(e, t) {
    var n;
    qe((n = t.value) == null ? void 0 : n.beforeMount) && t.value.beforeMount(e, t);
  },
  /*
   * called when the bound element's parent component
   * and all its children are mounted.
   */
  mounted(e, t) {
    var n;
    qe((n = t.value) == null ? void 0 : n.mounted) && t.value.mounted(e, t);
  },
  // called before the parent component is unmounted
  beforeUnmount(e, t) {
    var n;
    qe((n = t.value) == null ? void 0 : n.beforeUnmount) && t.value.beforeUnmount(e, t);
  },
  // called when the parent component is unmounted
  unmounted(e, t) {
    var n;
    qe((n = t.value) == null ? void 0 : n.unmounted) && t.value.unmounted(e, t);
  }
}, rF = {
  name: "ATooltip",
  props: {
    arrowPadding: {
      type: [Number, Function],
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_tooltip_")
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    maxWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    minWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    offsetDistance: {
      type: Number,
      required: !1,
      default: 6
    },
    offsetSkidding: {
      type: Number,
      required: !1,
      default: 0
    },
    placement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => gr.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: "a_tooltip_container"
    },
    showArrow: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tag: {
      type: String,
      required: !1,
      default: "span"
    },
    timeClose: {
      type: Number,
      required: !1,
      default: 100,
      validator: (e) => e >= 0
    },
    width: {
      type: Number,
      required: !1,
      default: void 0
    },
    withoutAriaDescribedby: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      closeTitle: t,
      closeTitleWithTimer: n,
      componentRef: r,
      isTitleVisible: s,
      mouseEnterTooltip: l,
      mouseLeaveTooltip: o,
      showTitle: u,
      startPopper: h,
      titleArrowRef: A,
      titleRef: E
    } = Qx(e), {
      onBlur: p,
      onFocus: T,
      onMouseenter: S,
      onMouseleave: b
    } = nF(e, {
      showTitle: u,
      closeTitle: t,
      closeTitleWithTimer: n
    }), {
      tagLocal: L
    } = tF(e), {
      ariaDescribedby: I,
      tooltipStyles: v
    } = _x(e, {
      isTitleVisible: s
    }), {
      addPopperContainerInBody: R,
      popperContainerIdSelector: g
    } = Pc(e);
    return R(), Ot(() => {
      t();
    }), {
      ariaDescribedby: I,
      closeTitle: t,
      componentRef: r,
      isTitleVisible: s,
      mouseEnterTooltip: l,
      mouseLeaveTooltip: o,
      onBlur: p,
      onFocus: T,
      onMouseenter: S,
      onMouseleave: b,
      showTitle: u,
      popperContainerIdSelector: g,
      startPopper: h,
      tagLocal: L,
      titleArrowRef: A,
      titleRef: E,
      tooltipStyles: v
    };
  },
  render() {
    return c(this.tagLocal, {
      ref: "componentRef",
      id: this.id,
      "aria-describedby": this.ariaDescribedby,
      onFocus: this.onFocus,
      onBlur: this.onBlur,
      onMouseenter: this.onMouseenter,
      onMouseleave: this.onMouseleave
    }, {
      default: () => [
        this.$slots.default && this.$slots.default(),
        !this.isHide && c(ia, {
          to: this.popperContainerIdSelector
        }, [
          /*
           * h("div", {
           *   id: this.ariaDescribedby,
           *   class: "a_sr_only",
           * }, [
           *   this.$slots.title && this.$slots.title(),
           * ]),
           */
          !!(this.$slots.title && this.isTitleVisible) && Pt(c("div", {
            ref: "titleRef",
            class: "a_tooltip__container",
            style: this.tooltipStyles,
            onMouseenter: this.mouseEnterTooltip,
            onMouseleave: this.mouseLeaveTooltip
          }, [
            this.showArrow && c("div", {
              ref: "titleArrowRef",
              "data-popper-arrow": !0,
              class: "a_tooltip__arrow"
            }),
            c("div", {
              id: this.ariaDescribedby,
              class: "a_tooltip__wrapper"
            }, this.$slots.title && this.$slots.title())
          ]), [
            [ol, {
              mounted: this.startPopper
            }]
          ])
        ])
      ]
    });
  }
};
function aF(e, {
  tagLocal: t = _(() => "")
}) {
  const n = d(e, "isTitleHtml");
  return {
    componentLocal: _(() => n.value ? rF : t.value)
  };
}
function sF(e) {
  const t = d(e, "type"), n = d(e, "disabled");
  return {
    disabledLocal: _(() => {
      if (["button", "submit", "reset"].indexOf(t.value) !== -1 && n.value)
        return !0;
    })
  };
}
function iF(e, {
  tagLocal: t = _(() => "")
}) {
  const n = d(e, "isTitleHtml"), r = d(e, "titleAttributes"), s = d(e, "titlePlacement"), l = B(void 0), o = _(() => n.value ? {
    tag: t.value,
    placement: s.value,
    withoutAriaDescribedby: !0,
    ...r.value
  } : {});
  return {
    elementRef: l,
    htmlTitleAttributes: o
  };
}
function lF(e) {
  const t = d(e, "loading"), n = d(e, "loadingAlign"), r = _(() => t.value && n.value === "left"), s = _(() => t.value && n.value === "right");
  return {
    isLoadingLeft: r,
    isLoadingRight: s
  };
}
function oF(e) {
  const t = d(e, "disabled"), n = d(e, "to"), r = d(e, "type");
  return {
    isRouterLink: _(() => r.value === "link" && !!n.value && !t.value)
  };
}
const gE = "a_btn a_btn_switch";
function uF(e) {
  const t = d(e, "isSwitch"), n = d(e, "modelSwitch"), r = _(() => {
    if (t.value)
      return !!n.value;
  }), s = _(() => {
    if (t.value)
      return n.value ? `${gE} a_btn_switch_active` : gE;
  });
  return {
    isSwitchActive: r,
    switchClass: s
  };
}
const _F = {
  button: "button",
  submit: "button",
  reset: "button",
  link: "a",
  text: "span"
};
function dF(e, {
  isRouterLink: t = _(() => !1)
}) {
  const n = d(e, "tag"), r = d(e, "type");
  return {
    tagLocal: _(() => n.value ? n.value : t.value ? $r("RouterLink") : _F[r.value] || "span")
  };
}
function cF(e) {
  const t = d(e, "html"), n = d(e, "htmlScreenReader"), r = d(e, "safeHtml"), s = d(e, "safeHtmlScreenReader"), l = d(e, "text"), o = d(e, "textScreenReader"), u = _(() => nt(l.value) ? !hn(l.value) : !ie(l.value) && l.value !== ""), h = _(() => nt(r.value) ? !hn(r.value) : !ie(r.value) && r.value !== ""), A = _(() => nt(t.value) ? !hn(t.value) : !ie(t.value) && t.value !== ""), E = _(() => u.value || h.value || A.value), p = _(() => nt(o.value) ? !hn(o.value) : !ie(o.value) && o.value !== ""), T = _(() => nt(s.value) ? !hn(s.value) : !ie(s.value) && s.value !== ""), S = _(() => nt(n.value) ? !hn(n.value) : !ie(n.value) && n.value !== ""), b = _(() => p.value || T.value || S.value);
  return {
    isTextOrHtmlVisible: E,
    isTextOrHtmlScreenReaderVisible: b
  };
}
function fF(e) {
  const t = d(e, "title");
  return {
    isTitleVisible: _(() => Te(t.value) && t.value.length > 0 ? !0 : nt(t.value) ? !hn(t.value) : !we(t.value))
  };
}
function Ct(e) {
  const t = d(e, "excludeRenderAttributes");
  return {
    attributesToExcludeFromRender: _(() => {
      const r = {};
      return z(t.value, (s) => {
        r[s] = void 0;
      }), r;
    })
  };
}
const me = {
  name: "AElement",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaDisabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    href: {
      type: String,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_element_")
    },
    isSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    modelSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tabindex: {
      type: [Number, String],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: void 0
    },
    target: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => gr.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => it(e) ? e === "auto" : ca(e)
    },
    to: {
      type: [Object, String],
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0,
      default: "text",
      validator: (e) => ["button", "submit", "reset", "link", "text"].indexOf(e) !== -1
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Ct(e), {
      isRouterLink: r
    } = oF(e), {
      disabledLocal: s
    } = sF(e), {
      tagLocal: l
    } = dF(e, {
      isRouterLink: r
    }), {
      toHrefAttributes: o,
      typeAttribut: u
    } = ox(e, {
      isRouterLink: r,
      tagLocal: l
    }), {
      isTitleVisible: h
    } = fF(e), {
      isLoadingLeft: A,
      isLoadingRight: E
    } = lF(e), {
      isTextOrHtmlVisible: p,
      isTextOrHtmlScreenReaderVisible: T
    } = cF(e), {
      onClick: S
    } = ux(e, t), {
      componentLocal: b
    } = aF(e, {
      tagLocal: l
    }), {
      elementRef: L,
      htmlTitleAttributes: I
    } = iF(e, {
      tagLocal: l
    }), {
      ariaLabelAttributes: v
    } = yc(e), {
      isSwitchActive: R,
      switchClass: g
    } = uF(e);
    return {
      ariaLabelAttributes: v,
      attributesToExcludeFromRender: n,
      componentLocal: b,
      disabledLocal: s,
      elementRef: L,
      htmlTitleAttributes: I,
      isLoadingLeft: A,
      isLoadingRight: E,
      isSwitchActive: R,
      isTextOrHtmlScreenReaderVisible: T,
      isTextOrHtmlVisible: p,
      isTitleVisible: h,
      onClick: S,
      switchClass: g,
      tagLocal: l,
      toHrefAttributes: o,
      typeAttribut: u
    };
  },
  render() {
    return c(this.componentLocal, {
      ...this.$attrs,
      ...this.htmlTitleAttributes,
      ...this.ariaLabelAttributes,
      ...this.toHrefAttributes,
      ref: "elementRef",
      id: this.id,
      class: [
        this.classDefault,
        this.switchClass,
        this.class,
        {
          [this.classDisabled]: this.ariaDisabled
        }
      ],
      type: this.typeAttribut,
      tabindex: this.tabindex,
      disabled: this.disabledLocal,
      ariaDisabled: this.ariaDisabled,
      "aria-pressed": this.isSwitchActive,
      isAllRowsSelected: void 0,
      // TODO: ATable
      onClick: this.onClick,
      ...this.attributes,
      ...this.attributesToExcludeFromRender
    }, {
      default: () => [
        !this.isTitleHtml && this.isTitleVisible ? c(Ae, {
          tag: "span",
          alwaysTranslate: this.alwaysTranslate,
          ariaHidden: !0,
          class: [
            "a_position_absolute_all",
            this.classDefaultHidden
          ],
          title: this.title,
          extra: this.extra,
          style: {
            zIndex: this.titleZIndex
          },
          ...this.titleAttributes
        }) : "",
        this.isTextOrHtmlScreenReaderVisible ? c(Ae, {
          alwaysTranslate: this.alwaysTranslate,
          class: [
            "a_sr_only",
            this.classDefaultHidden
          ],
          tag: "span",
          text: this.textScreenReader,
          html: this.htmlScreenReader,
          safeHtml: this.safeHtmlScreenReader,
          extra: this.extra
        }) : "",
        this.$slots.buttonPrepend ? this.$slots.buttonPrepend({ extraData: this.extraData }) : "",
        this.isLoadingLeft ? c(fl, {
          class: [
            "aloha_btn__spinner_left",
            this.loadingClass
          ]
        }) : "",
        c(ut, {
          icon: this.iconLeft,
          iconTag: this.iconTag,
          class: [
            "aloha_btn__icon_left",
            this.iconClass
          ],
          ...this.iconAttributes
        }),
        this.$slots.default ? this.$slots.default({ extraData: this.extraData }) : "",
        this.isTextOrHtmlVisible ? c(Ae, {
          alwaysTranslate: this.alwaysTranslate,
          ariaHidden: this.textAriaHidden,
          class: this.textClass,
          extra: this.extra,
          html: this.html,
          safeHtml: this.safeHtml,
          tag: this.textTag,
          text: this.text,
          textAfter: this.textAfter,
          textBefore: this.textBefore
        }) : "",
        c(ut, {
          icon: this.iconRight,
          iconTag: this.iconTag,
          class: [
            "aloha_btn__icon_right",
            this.iconClass
          ],
          ...this.iconAttributes
        }),
        this.isLoadingRight ? c(fl, {
          class: [
            "aloha_btn__spinner_right",
            this.loadingClass
          ]
        }) : "",
        this.$slots.buttonAppend ? this.$slots.buttonAppend({ extraData: this.extraData }) : ""
      ],
      title: !this.isTitleHtml || !this.title && !this.$slots.buttonTitle ? () => "" : () => [
        this.isTitleVisible ? c(Ae, {
          alwaysTranslate: this.alwaysTranslate,
          html: this.title,
          tag: "span",
          extra: this.extra
        }) : "",
        this.$slots.buttonTitle ? this.$slots.buttonTitle({ extraData: this.extraData }) : ""
      ]
    });
  }
};
function MT(e) {
  const t = d(e, "dataItem"), n = d(e, "isButtonGroup"), r = d(e, "classButtonGroupDefault");
  return {
    classButton: _(() => {
      if (n.value)
        return t.value.classButton || r.value;
    })
  };
}
function hF(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = d(e, "modelValue");
  return {
    isChecked: _(() => n.value && n.value.indexOf(t.value) !== -1)
  };
}
function AF(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: s = _(() => {
  })
}) {
  const l = d(e, "dataItem"), o = d(e, "modelValue"), u = (A) => {
    if (n.value) {
      A.preventDefault(), A.stopPropagation();
      return;
    }
    const E = pe(o.value) || [];
    if (r.value) {
      const p = E.indexOf(s.value);
      E.splice(p, 1);
    } else
      E.push(s.value);
    t("changeModelValue", {
      model: E,
      item: l.value,
      $event: A
    }), A.preventDefault(), A.stopPropagation();
  };
  return {
    onClick: u,
    onKeydown: (A) => {
      (A.key === "Enter" || A.keyCode === X.space) && (u(A), A.stopPropagation(), A.preventDefault());
    }
  };
}
const St = "_a_label";
function xc(e) {
  const t = d(e, "dataItem"), n = d(e, "id"), r = d(e, "idSuffix"), s = d(e, "itemIndex"), l = _(() => t.value[Ke]), o = _(() => t.value[St]), u = _(() => r.value ? `_${r.value}` : "");
  return {
    idLocal: _(() => `${n.value}_${s.value}${u.value}`),
    labelLocal: o,
    valueLocal: l
  };
}
function Fc(e) {
  const t = d(e, "dataItem"), n = d(e, "disabled"), r = d(e, "keyDisabled");
  return {
    disabledElement: _(() => {
      if (n.value || r.value && fe(t.value, r.value))
        return !0;
    })
  };
}
function qT(e) {
  const t = d(e, "dataItem"), n = d(e, "keyTitle"), r = d(e, "keyTitleCallback");
  return {
    titleLocal: _(() => {
      if (r.value)
        return r.value({ item: t.value });
      if (n.value)
        return fe(t.value, n.value);
    })
  };
}
function EF(e, {
  trueValue: t = "_YES_",
  falseValue: n = "_NO_",
  useNil: r = !0
} = {}) {
  return r && ie(e) ? "" : Bt(e ? { placeholder: t } : { placeholder: n });
}
function pF(e) {
  return bN(e);
}
function Qi(e, { suffix: t = "", digits: n = 2, digitGrouping: r = !0 } = {}) {
  if (ie(e))
    return "";
  let s = kt(e);
  if (s.split(",").length - 1 > 1)
    return e;
  s = s.replace(",", ".").replace(/[.](?=.*[.])/g, "");
  let o = ui(s);
  if (o === 0)
    return `0${n > 0 ? "," : ""}${nP("0", n)}${t ? ` ${t}` : ""}`;
  if (!o)
    return e;
  o = rP(o, n), s = kt(o);
  const u = s.split(".");
  let h = "";
  if (u[1])
    for (let S = 0; S < n; S++) {
      const b = we(u[1][S]) ? "0" : u[1][S];
      h = `${h}${b}`;
    }
  else
    h = zw("", n, "0");
  let A = kt(u[0] || "0"), E = !1;
  A.startsWith("-") && (A = A.substring(1), E = !0);
  let p = 0, T = "";
  return iw(A, (S) => {
    p > 0 && p % 3 === 0 && r && (T += "."), p++, T += S;
  }), `${E ? "-" : ""}${T.split("").reverse().join("")}${pi(h) > 0 ? "," : ""}${h}${t ? ` ${t}` : ""}`;
}
function TF(e, { suffix: t = "€", digits: n = 2, digitGrouping: r = !0 } = {}) {
  return Qi(e, { suffix: t, digits: n, digitGrouping: r });
}
xn.suppressDeprecationWarnings = !0;
const RE = {
  date: () => "DD.MM.YYYY",
  datetime: () => "DD.MM.YYYY HH:mm",
  fullDate: () => "dddd, DD. MMMM YYYY, HH:mm",
  time: () => "HH:mm",
  timeWithSeconds: () => "HH:mm:ss"
};
function mF(e, { format: t = "date" } = {}) {
  if (ie(e) || e === "")
    return "";
  const n = xn(String(e));
  return n.isValid() ? (qe(RE[t]) && (t = RE[t]()), n.format(t)) : e;
}
function SF(e, { emptyValue: t = "-" } = {}) {
  return ie(e) || e === "" ? t : e;
}
function bF(e, { linkClass: t } = {}) {
  if (ie(e) || e === "" || !it(e) || !/^\S+@\S+\.\S+$/.test(e))
    return "";
  let n = "";
  return t && (n = ` class="${t}"`), `<a href="mailto:${e}"${n}>${e}</a>`;
}
function LF(e) {
  const t = document.createElement("div");
  return t.textContent = e, t.innerHTML;
}
function IF(e, { units: t = "kb", sourceUnits: n = "b", digits: r = 2 } = {}) {
  const l = [
    "b",
    "kb",
    "mb",
    "gb",
    "tb",
    "pb",
    "eb",
    "zb",
    "yb"
  ], o = ui(e);
  if (Iw(o))
    return "";
  const u = l.indexOf(n);
  let h = l.indexOf(t);
  if (u === -1)
    return "";
  const A = o * Math.pow(1024, u);
  h === -1 && (h = Math.floor(Math.log(A) / Math.log(1024)), h < 0 && (h = 0), t = l[h]);
  const E = Bt({ placeholder: `_A_FILE_SIZE_${dT(t)}_` });
  if (o === 0)
    return Qi(0, { suffix: E, digits: r });
  if (u === h)
    return Qi(o, { suffix: E, digits: r });
  const p = A / Math.pow(1024, Math.abs(h));
  return Qi(p, { suffix: E, digits: r });
}
function vF(e, { replacer: t, space: n = 2, isHtml: r = !1, jsonClass: s = "a_code_content", tag: l = "pre" } = {}) {
  if (ie(e))
    return "";
  try {
    const o = JSON.stringify(e, t, n);
    if (r) {
      const u = s ? ` class="${s}"` : "";
      return `<${l}${u}>${o}</${l}>`;
    }
    return o;
  } catch {
    return "";
  }
}
function yF(e) {
  return e ? tP(e, (t, n, r) => `${t}${t ? ", " : ""}${r}: ${n}`, "") : "";
}
function gF(e, { limit: t = 30, maxThreeDots: n = !0 } = {}) {
  if (ie(e))
    return "";
  const r = kt(e);
  if (r.length <= t)
    return r;
  if (n) {
    const s = r.slice(0, t).trimEnd();
    let l = "...", o = !0;
    for (let u = s.length - 1; u > s.length - 4 && s[u] === "."; u--) {
      if (o)
        l = l.slice(0, -1);
      else
        break;
      o = !0;
    }
    return `${s}${l}`;
  }
  return `${r.substring(0, t)}...`;
}
function RF(e, { linkText: t = "", protocol: n = "https://", target: r = "", linkClass: s = "" } = {}) {
  if (ie(e) || !it(e))
    return "";
  let l = n;
  (e.startsWith("https://") || e.startsWith("http://")) && (l = "");
  const o = r ? ` target="${r}"` : "", u = s ? ` class="${s}"` : "";
  return `<a href="${l}${e}"${o}${u}>${t || e}</a>`;
}
function Jo(e, {
  defaultValue: t = "",
  isChild: n = !1,
  isHtml: r = !0,
  isSimpleArray: s = !1,
  keyChildren: l = "",
  keyLabel: o = "",
  keyLabelCallback: u,
  lastSeparator: h,
  listClass: A = "",
  separator: E,
  separatorHtml: p = "",
  tag: T = "ul"
} = {}) {
  if (!Te(e) || !e.length)
    return t;
  let S = "";
  return r === !1 || r === "false" ? (we(E) && (E = ", "), z(e, (b, L) => {
    let I = OE({
      keyLabel: o,
      keyLabelCallback: u,
      index: L,
      item: b,
      isSimpleArray: s
    }), v;
    if (s) {
      if (Te(I)) {
        let R = "";
        z(I, (g) => {
          Te(g) ? v = g : R = g;
        }), I = R;
      }
    } else l && (v = fe(b, l));
    !we(h) && L === e.length - 1 ? S += `${L !== 0 || n ? h : ""}${I}` : S += `${L !== 0 || n ? E : ""}${I}`, v != null && v.length && (S += Jo(v, {
      isChild: !0,
      isHtml: r,
      isSimpleArray: s,
      keyChildren: l,
      keyLabel: o,
      keyLabelCallback: u,
      separator: E
    }));
  }), S) : (z(e, (b, L) => {
    const I = e.length === L + 1, v = OE({
      keyLabel: o,
      keyLabelCallback: u,
      index: L,
      item: b,
      isSimpleArray: s
    });
    let R, g = v;
    s ? Te(v) && z(v, (D) => {
      Te(D) ? R = D : g = D;
    }) : l && (R = fe(b, l)), E && !I && (g += E), R != null && R.length && (g += Jo(R, {
      isChild: !0,
      isHtml: r,
      isSimpleArray: s,
      keyChildren: l,
      keyLabel: o,
      keyLabelCallback: u,
      listClass: A,
      tag: T
    })), p && !I && (g += p), S += `<li>${g}</li>`;
  }), `<${T}${OF({ listClass: A })}>${S}</${T}>`);
}
function OE({ keyLabel: e, keyLabelCallback: t, index: n, item: r, isSimpleArray: s }) {
  let l;
  return s ? l = r : qe(t) ? l = t({ item: r, itemIndex: n }) : l = e ? fe(r, e) : r, we(l) && (l = ""), l;
}
function OF({ listClass: e }) {
  return e ? ` class="${e}"` : "";
}
function CF(e) {
  return _T(e);
}
function NF(e, { chars: t = 4, mask: n = "*" } = {}) {
  if (ie(e))
    return "";
  const r = kt(e);
  if (r.length <= t)
    return r;
  const s = yw([t, 0]), l = n.repeat(r.length - s), o = s === 0 ? "" : r.slice(-s);
  return `${l}${o}`;
}
function DF(e, { mapping: t = {}, defaultValue: n = "" } = {}) {
  return `${e}` in t ? t[e] : n;
}
function BF(e, {
  searchModel: t = "",
  searchClass: n = "a_search_highlight",
  tag: r = "mark",
  attributes: s = [],
  caseSensitive: l = !1,
  isHtml: o = !1
} = {}) {
  if (!e)
    return "";
  if (t === "" || ie(t))
    return e;
  const u = l ? "g" : "gi", h = new RegExp(pu(t), u), A = s.length ? ` ${s.join(" ")}` : "";
  if (!o)
    return e.replace(h, (T) => $T({
      value: T,
      tag: r,
      searchClass: n,
      attributesString: A
    }));
  const p = new DOMParser().parseFromString(e, "text/html");
  return kT({
    node: p.body,
    tag: r,
    searchClass: n,
    re: h,
    attributesString: A
  }), p.body.innerHTML;
}
function $T({ value: e, tag: t, searchClass: n, attributesString: r }) {
  return `<${t} class="${n}"${r}>${e}</${t}>`;
}
function kT({ node: e, re: t, tag: n, searchClass: r, attributesString: s }) {
  if (e.nodeType === Node.TEXT_NODE) {
    if (e.nodeValue.match(t)) {
      const o = e.parentNode, u = e.nodeValue.replace(t, (A) => $T({
        value: A,
        tag: n,
        searchClass: r,
        attributesString: s
      })), h = document.createElement("span");
      for (h.innerHTML = u; h.firstChild; )
        o.insertBefore(h.firstChild, e);
      o.removeChild(e);
    }
  } else e.nodeType === Node.ELEMENT_NODE && Array.from(e.childNodes).forEach((l) => kT({
    node: l,
    re: t,
    tag: n,
    searchClass: r,
    attributesString: s
  }));
}
function wF(e) {
  return dT(e);
}
const PF = B({});
function Hn() {
  return {
    filterBoolean: (g, { trueValue: D = "_YES_", falseValue: w = "_NO_", useNil: M = !0 } = {}) => EF(g, {
      trueValue: D,
      falseValue: w,
      useNil: M
    }),
    filterCapitalize: (g) => pF(g),
    filterCurrency: (g, { suffix: D = "€", digits: w = 2, digitGrouping: M = !0 } = {}) => TF(g, { suffix: D, digits: w, digitGrouping: M }),
    filterDate: (g, { format: D = "date" } = {}) => mF(g, { format: D }),
    filterDefaultForEmpty: (g, { emptyValue: D = "-" } = {}) => SF(g, {
      emptyValue: D
    }),
    filterEmail: (g, { linkClass: D } = {}) => bF(g, { linkClass: D }),
    filterEscapeHtml: (g) => LF(g),
    filterFileSize: (g, { units: D = "kb", sourceUnits: w = "b", digits: M = 2 } = {}) => IF(g, { units: D, sourceUnits: w, digits: M }),
    filterFloat: (g, { suffix: D = "", digits: w = 2, digitGrouping: M = !0 } = {}) => Qi(g, { suffix: D, digits: w, digitGrouping: M }),
    filterJson: (g, {
      replacer: D,
      space: w = 2,
      isHtml: M = !1,
      jsonClass: P = "a_code_content",
      tag: F = "pre"
    } = {}) => vF(g, { replacer: D, space: w, isHtml: M, jsonClass: P, tag: F }),
    filterKeyValue: (g) => yF(g),
    filterLimitTo: (g, {
      limit: D = 30,
      maxThreeDots: w = !0
    } = {}) => gF(g, { limit: D, maxThreeDots: w }),
    filterLink: (g, { linkText: D = "", protocol: w = "https://", target: M = "", linkClass: P = "" } = {}) => RF(g, { linkText: D, protocol: w, target: M, linkClass: P }),
    filterList: (g, {
      isHtml: D = !0,
      isSimpleArray: w = !1,
      keyChildren: M = "",
      keyLabel: P = "",
      keyLabelCallback: F,
      listClass: C = "",
      separator: k = ", ",
      tag: W = "ul"
    } = {}) => Jo(g, { isHtml: D, listClass: C, keyLabel: P, keyLabelCallback: F, keyChildren: M, isSimpleArray: w, separator: k, tag: W }),
    filterLowerCase: (g) => CF(g),
    filterMask: (g, { chars: D = 4, mask: w = "*" } = {}) => NF(g, { chars: D, mask: w }),
    filterPropertyByValue: (g, { mapping: D = {}, defaultValue: w = "" } = {}) => DF(g, { mapping: D, defaultValue: w }),
    filterSearchHighlight: (g, {
      searchModel: D = "",
      searchClass: w = "a_search_highlight",
      tag: M = "mark",
      attributes: P = [],
      caseSensitive: F = !1,
      isHtml: C = !1
    } = {}) => BF(g, {
      searchModel: D,
      searchClass: w,
      tag: M,
      attributes: P,
      caseSensitive: F,
      isHtml: C
    }),
    filterUpperCase: (g) => wF(g),
    ...PF.value
  };
}
function Mc(e, {
  labelLocal: t = _(() => ""),
  valueLocal: n = _(() => "")
}) {
  const r = d(e, "isHiddenWithSearch"), s = d(e, "modelSearch"), l = d(e, "searching"), o = d(e, "searchingElements"), u = d(e, "showElementWennGroupFound"), {
    filterSearchHighlight: h
  } = Hn(), A = _(() => !!(r.value || l.value && !u.value && !o.value[n.value])), E = _(() => A.value ? t.value : h(t.value, { searchModel: s.value })), p = _(() => A.value ? "display: none;" : void 0), T = _(() => A.value ? !0 : void 0);
  return {
    currentLabelFiltered: E,
    dataHideWithSearch: T,
    styleWithSearch: p
  };
}
const xd = {
  name: "ACheckboxItem",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !0
    },
    modelValue: {
      type: Array,
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: s
    } = xc(e), {
      classButton: l
    } = MT(e), {
      isChecked: o
    } = hF(e, {
      valueLocal: s
    }), {
      disabledElement: u
    } = Fc(e), {
      onClick: h,
      onKeydown: A
    } = AF(e, t, {
      isChecked: o,
      valueLocal: s
    }), {
      currentLabelFiltered: E,
      styleWithSearch: p
    } = Mc(e, {
      labelLocal: r,
      valueLocal: s
    }), {
      titleLocal: T
    } = qT(e);
    return {
      classButton: l,
      currentLabelFiltered: E,
      disabledElement: u,
      idLocal: n,
      isChecked: o,
      labelLocal: r,
      onClick: h,
      onKeydown: A,
      styleWithSearch: p,
      titleLocal: T,
      valueLocal: s
    };
  },
  render() {
    return this.isButtonGroup ? [
      c("input", {
        id: this.idLocal,
        checked: this.isChecked,
        class: "a_btn_check",
        disabled: this.disabledElement,
        name: this.id,
        style: this.styleWithSearch,
        type: "checkbox",
        value: this.valueLocal,
        onClick: this.onClick,
        onKeydown: this.onKeydown
      }),
      c(me, {
        alwaysTranslate: this.alwaysTranslate,
        class: this.classButton,
        classDefault: "",
        extra: {
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        },
        for: this.idLocal,
        tag: "label",
        title: this.titleLocal,
        type: "button"
      }, () => [
        this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          id: this.id,
          item: this.dataItem,
          itemIndex: this.itemIndex,
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        }) : this.labelLocal && Pt(c("span", {}), [
          [an, this.currentLabelFiltered]
        ])
      ])
    ] : [
      c("div", {
        class: ["a_custom_control a_custom_checkbox", {
          a_custom_control_invalid: this.isErrors
        }],
        style: this.styleWithSearch
      }, [
        c("input", {
          id: this.idLocal,
          checked: this.isChecked,
          class: "a_custom_control_input",
          disabled: this.disabledElement,
          name: this.id,
          type: "checkbox",
          value: this.valueLocal,
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(me, {
          alwaysTranslate: this.alwaysTranslate,
          class: {
            a_custom_control_label: !0,
            a_custom_control_label_width_auto: this.isWidthAuto
          },
          classDefault: "",
          extra: {
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          },
          for: this.idLocal,
          tag: "label",
          title: this.titleLocal,
          type: "button"
        }, () => [
          this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            id: this.id,
            item: this.dataItem,
            itemIndex: this.itemIndex,
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          }) : this.labelLocal && Pt(c("span", {
            class: "a_custom_control_label__text"
          }), [
            [an, this.currentLabelFiltered]
          ])
        ])
      ]),
      this.slotAppendName && this.$slots[this.slotAppendName] ? this.$slots[this.slotAppendName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        isChecked: this.isChecked,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : ""
    ];
  }
};
function xF(e) {
  const t = d(e, "data"), n = d(e, "modelValueObj"), r = _(() => {
    const o = {
      indeterminate: void 0,
      checkedAll: !1,
      checkedSome: !1,
      uncheckedSome: !1
    };
    return hn(n.value) || (z(t.value, (u) => {
      const h = u[Ke];
      if (n.value[h] ? o.checkedSome = !0 : o.uncheckedSome = !0, o.checkedSome && o.uncheckedSome)
        return o.indeterminate = !0, !1;
    }), o.checkedSome && !o.uncheckedSome && (o.checkedAll = !0)), o;
  }), s = _(() => r.value.checkedAll), l = _(() => r.value.indeterminate);
  return {
    isCheckedAll: s,
    isIndeterminate: l
  };
}
function FF(e, { emit: t }, {
  isCheckedAll: n = _(() => !1),
  isIndeterminate: r = _(() => {
  })
}) {
  const s = d(e, "data"), l = d(e, "dataKeyByKeyId"), o = d(e, "modelValue"), u = () => wt(o.value || [], (T) => !l.value[T]), h = ({ model: T }) => (z(s.value, (S) => {
    const b = S[Ke];
    T.push(b);
  }), T), A = (T) => {
    let S = u();
    (r.value || !n.value) && (S = h({ model: S })), t("changeModelValue", {
      $event: T,
      model: S
    });
  }, E = (T) => {
    T.stopPropagation(), T.preventDefault(), A(T);
  };
  return {
    onClick: E,
    onKeydown: (T) => {
      (T.keyCode === X.enter || T.keyCode === X.space) && (E(T), T.stopPropagation(), T.preventDefault());
    }
  };
}
function MF(e) {
  const t = d(e, "id"), n = _(() => `${t.value}_legend`);
  return {
    idGroup: _(() => `${t.value}_group`),
    idLocal: n
  };
}
function qF(e) {
  const t = d(e, "label"), n = d(e, "modelSearch"), r = d(e, "showSearchHighlight"), {
    filterSearchHighlight: s
  } = Hn();
  return {
    labelSearchHighlight: _(() => r.value ? s(t.value, { searchModel: n.value }) : t.value)
  };
}
const UT = {
  name: "ACheckboxLegend",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    dataKeyByKeyId: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: !1
    },
    id: {
      type: String,
      required: !0
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    label: {
      type: String,
      required: !1,
      default: void 0
    },
    legendClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    main: {
      type: Boolean,
      required: !1
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: () => []
    },
    modelValueObj: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    showSearchHighlight: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textAfterLabel: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idGroup: n,
      idLocal: r
    } = MF(e), {
      isCheckedAll: s,
      isIndeterminate: l
    } = xF(e), {
      onClick: o,
      onKeydown: u
    } = FF(e, t, {
      isCheckedAll: s,
      isIndeterminate: l
    }), {
      labelSearchHighlight: h
    } = qF(e);
    return {
      idGroup: n,
      idLocal: r,
      isCheckedAll: s,
      isIndeterminate: l,
      labelSearchHighlight: h,
      onClick: o,
      onKeydown: u
    };
  },
  render() {
    return this.hasControlCheckbox ? c("legend", {
      class: [
        "a_legend",
        {
          a_legend_invalid: this.isErrors
        },
        this.legendClass
      ]
    }, [
      c("div", {
        class: ["a_custom_control a_custom_checkbox", {
          a_custom_control_invalid: this.isErrors
        }]
      }, [
        c("input", {
          id: this.idLocal,
          "aria-controls": this.idGroup,
          checked: this.isCheckedAll,
          class: "a_custom_control_input",
          disabled: this.disabled,
          indeterminate: this.isIndeterminate,
          type: "checkbox",
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(me, {
          alwaysTranslate: this.alwaysTranslate,
          class: "a_custom_control_label a_custom_control_label_width_auto",
          classDefault: "",
          for: this.idLocal,
          html: this.labelSearchHighlight,
          textScreenReader: this.labelScreenReader,
          tag: "label",
          textAfter: this.textAfterLabel,
          textClass: "a_custom_control_label__text",
          type: "text"
        })
      ])
    ]) : c(me, {
      id: this.idLocal,
      class: [
        "a_legend",
        {
          a_legend_invalid: this.isErrors
        },
        this.legendClass
      ],
      html: this.labelSearchHighlight,
      tag: "legend",
      textAfter: this.textAfterLabel,
      textScreenReader: this.labelScreenReader,
      type: "text"
    });
  }
};
function $F({ emit: e }) {
  return {
    onChangeModelValue: (n) => {
      e("changeModelValue", n);
    }
  };
}
function kF(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = d(e, "modelValue");
  return {
    isChecked: _(() => Te(n.value) ? n.value.indexOf(t.value) !== -1 : n.value === t.value)
  };
}
function UF(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: s = _(() => {
  })
}) {
  const l = d(e, "dataItem"), o = (h) => {
    if (n.value || r.value) {
      h.preventDefault(), h.stopPropagation();
      return;
    }
    t("changeModelValue", {
      model: s.value,
      item: l.value,
      $event: h
    }), h.preventDefault(), h.stopPropagation();
  };
  return {
    onClick: o,
    onKeydown: (h) => {
      (h.key === "Enter" || h.keyCode === X.space) && (o(h), h.stopPropagation(), h.preventDefault());
    }
  };
}
const wo = {
  name: "ARadioItem",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: s
    } = xc(e), {
      classButton: l
    } = MT(e), {
      isChecked: o
    } = kF(e, {
      valueLocal: s
    }), {
      disabledElement: u
    } = Fc(e), {
      onClick: h,
      onKeydown: A
    } = UF(e, t, {
      disabledElement: u,
      isChecked: o,
      valueLocal: s
    }), {
      currentLabelFiltered: E,
      styleWithSearch: p
    } = Mc(e, {
      labelLocal: r,
      valueLocal: s
    }), {
      titleLocal: T
    } = qT(e);
    return {
      classButton: l,
      currentLabelFiltered: E,
      disabledElement: u,
      idLocal: n,
      isChecked: o,
      labelLocal: r,
      onClick: h,
      onKeydown: A,
      styleWithSearch: p,
      titleLocal: T,
      valueLocal: s
    };
  },
  render() {
    return this.readonly ? c(me, {
      alwaysTranslate: this.alwaysTranslate,
      classDefault: "",
      extra: {
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      },
      for: this.idLocal,
      tag: "span",
      title: this.titleLocal,
      type: "text"
    }, () => [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : this.labelLocal && Pt(c("span", {
        class: "a_custom_control_label__text"
      }), [
        [an, this.currentLabelFiltered]
      ])
    ]) : this.isButtonGroup ? [
      c("input", {
        id: this.idLocal,
        checked: this.isChecked,
        class: "a_btn_check",
        disabled: this.disabledElement,
        name: this.id,
        style: this.styleWithSearch,
        type: "radio",
        value: this.valueLocal,
        onClick: this.onClick,
        onKeydown: this.onKeydown
      }),
      c(me, {
        alwaysTranslate: this.alwaysTranslate,
        class: this.classButton,
        classDefault: "",
        extra: {
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        },
        for: this.idLocal,
        tag: "label",
        title: this.titleLocal,
        type: "button"
      }, () => [
        this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          id: this.id,
          item: this.dataItem,
          itemIndex: this.itemIndex,
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        }) : this.labelLocal && Pt(c("span", {}), [
          [an, this.currentLabelFiltered]
        ])
      ])
    ] : [
      c("div", {
        class: ["a_custom_control a_custom_radio", {
          a_custom_control_invalid: this.isErrors
        }],
        style: this.styleWithSearch
      }, [
        c("input", {
          id: this.idLocal,
          checked: this.isChecked,
          class: "a_custom_control_input",
          disabled: this.disabledElement,
          name: this.id,
          type: "radio",
          value: this.valueLocal,
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(me, {
          alwaysTranslate: this.alwaysTranslate,
          class: {
            a_custom_control_label: !0,
            a_custom_control_label_width_auto: this.isWidthAuto
          },
          classDefault: "",
          extra: {
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          },
          for: this.idLocal,
          tag: "label",
          title: this.titleLocal,
          type: "button"
        }, () => [
          this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            id: this.id,
            item: this.dataItem,
            itemIndex: this.itemIndex,
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          }) : this.labelLocal && Pt(c("span", {
            class: "a_custom_control_label__text"
          }), [
            [an, this.currentLabelFiltered]
          ])
        ])
      ]),
      this.slotAppendName && this.$slots[this.slotAppendName] ? this.$slots[this.slotAppendName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        isChecked: this.isChecked,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : ""
    ];
  }
};
function HF(e) {
  const t = d(e, "ariLabel");
  return {
    attributesAriaLabelHidden: _(() => t.value ? {
      ariaLabel: t.value
    } : {
      ariaHidden: !0
    })
  };
}
function VF(e, {
  isIconSvg: t = _(() => !1)
}) {
  const n = d(e, "icon");
  return {
    iconClass: _(() => {
      if (!t.value)
        return `a_icon_${n.value || "_NoImage"}`;
    })
  };
}
const WF = `<svg
   xmlns="http://www.w3.org/2000/svg"
   viewBox="0 0 18 18"
   height="18"
   width="18"
>
  <g
   transform="matrix(0.26617655,0,0,0.26617655,-33.607656,-85.223817)"
  >
    <path
      style="fill:#35495e;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 139.13004,365.87267 -4.53409,7.81862 h 51.05837 l -4.53409,-7.81862 z"
    />
    <path
      style="fill:#41b883;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 134.59595,373.69129 -4.51704,7.7892 h 60.09245 l -4.51704,-7.7892 z"
    />
    <path
      style="fill:#41b883;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 160.07266,329.49377 -16.90595,29.1543 -16.90594,29.15378 h 7.67291 l 13.03745,-22.48287 13.03745,-22.48236 13.03745,22.48236 13.03744,22.48287 h 7.80159 l -16.90594,-29.15378 z"
    />
    <path
      style="fill:#35495e;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 160.00903,342.83634 -13.03745,22.48287 -13.03796,22.48286 h 8.03103 l 9.02632,-15.56546 9.02581,-15.56494 9.02632,15.56494 9.02581,15.56546 h 8.01501 l -13.03744,-22.48286 z"
    />
  </g>
</svg>`, GF = `<svg
  xmlns="http://www.w3.org/2000/svg"
  version="1.1"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <path
    d="M 14.204045,11.607942 C 15.968997,11.607942 17.4,13.038977 17.4,14.80397 17.4,16.568964 15.968997,18 14.204045,18 12.439093,18 11.00809,16.568964 11.00809,14.80397 c 0,-1.764993 1.431003,-3.196028 3.195955,-3.196028 z M 1.7468526,0 H 15.702424 c 0.317838,0 0.601987,0.13036037 0.809974,0.33688648 0.207986,0.20799097 0.336879,0.49654172 0.336879,0.80999272 V 11.401416 C 16.488962,11.121653 16.081779,10.89755 15.640907,10.745219 V 1.4251769 c 0,-0.062983 -0.02344,-0.1157132 -0.06738,-0.1537962 -0.03808,-0.038083 -0.09667,-0.067377 -0.153792,-0.067377 H 2.0192852 c -0.062982,0 -0.1157107,0.023436 -0.1537926,0.067377 -0.038082,0.038083 -0.067375,0.095207 -0.067375,0.1537962 V 11.681178 h 0.00439 L 6.4851264,7.1976561 c 0.1874805,-0.1728376 0.4818832,-0.153796 0.6503226,0.033689 0.00439,0.00439 0.00439,0.010252 0.010252,0.010252 l 3.937088,4.6578239 c -0.692799,0.758727 -1.116094,1.769387 -1.116094,2.878184 0,0.481894 0.08056,0.944747 0.227027,1.376841 H 1.7468526 c -0.3178379,0 -0.6019878,-0.130361 -0.8099738,-0.336887 C 0.7288927,15.611034 0.6,15.321018 0.6,15.007567 V 1.1468792 C 0.6,0.82903398 0.7303573,0.54487745 0.9368788,0.33688648 1.1434002,0.12889569 1.4334089,0 1.7468526,0 Z m 9.6523104,11.585971 0.543401,-3.3381075 c 0.04394,-0.2504678 0.279755,-0.42477 0.530217,-0.3808284 0.09667,0.014647 0.183086,0.062984 0.250463,0.1259664 l 2.50462,2.6321095 c -0.319302,-0.07616 -0.650322,-0.115713 -0.993061,-0.115713 -1.088264,-0.0015 -2.081324,0.405729 -2.83564,1.076573 z m 1.171752,-8.9582554 c 0.458448,0 0.87735,0.1874847 1.176147,0.4862886 0.303191,0.3031979 0.486278,0.717715 0.486278,1.1761738 0,0.4584587 -0.187481,0.8773698 -0.486278,1.1761737 -0.303191,0.3031979 -0.717699,0.4862888 -1.176147,0.4862888 -0.458447,0 -0.87735,-0.1874849 -1.176146,-0.4862888 -0.303191,-0.3031979 -0.486277,-0.717715 -0.486277,-1.1761737 0,-0.4584588 0.18748,-0.8773701 0.486277,-1.1761738 0.303191,-0.3031981 0.719163,-0.4862886 1.176146,-0.4862886 z m 0.562442,10.2325654 2.923522,3.163805 c 0.231421,-0.350069 0.366173,-0.76898 0.366173,-1.220116 0,-1.224509 -0.99306,-2.217592 -2.217542,-2.217592 -0.389608,-0.0015 -0.754315,0.09814 -1.072153,0.273903 z m 2.141377,3.885914 -2.923522,-3.163805 c -0.231421,0.350069 -0.366172,0.768981 -0.366172,1.220116 0,1.224509 0.99306,2.217593 2.217541,2.217593 0.389607,0.0015 0.754316,-0.09814 1.072153,-0.273904 z"
  />
</svg>`, Qo = B({
  icons: {
    _NoImage: GF,
    Aloha: WF
  }
}), lde = {
  install: (e, {
    icons: t = {}
  } = {}) => {
    Qo.value.icons = {
      ...Qo.value.icons,
      ...t
    };
  }
};
function KF(e) {
  const t = d(e, "icon"), {
    isMobileWidth: n
  } = En(), r = _(() => nt(t.value) ? n.value ? t.value.mobile : t.value.desktop : t.value), s = _(() => !ie(r.value) && r.value !== ""), l = _(() => {
    const u = r.value;
    return !!(it(u) && u.trim().startsWith("<svg"));
  }), o = _(() => {
    if (l.value)
      return r.value;
    const u = Qo.value.icons[r.value];
    return u || Qo.value.icons._NoImage;
  });
  return {
    hasIcon: s,
    iconSvg: o,
    isIconSvg: l
  };
}
const ut = {
  name: "AIcon",
  props: {
    ariLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    icon: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: "i"
    },
    isSaveHtml: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  setup(e) {
    const {
      attributesAriaLabelHidden: t
    } = HF(e), {
      hasIcon: n,
      iconSvg: r,
      isIconSvg: s
    } = KF(e), {
      iconClass: l
    } = VF(e, {
      isIconSvg: s
    });
    return {
      attributesAriaLabelHidden: t,
      hasIcon: n,
      iconClass: l,
      iconSvg: r
    };
  },
  render() {
    if (this.hasIcon)
      return this.isSaveHtml ? c(this.iconTag, {
        class: ["a_icon", this.iconClass],
        innerHTML: this.iconSvg,
        ...this.attributesAriaLabelHidden
      }) : Pt(c(this.iconTag, {
        class: ["a_icon", this.iconClass],
        ...this.attributesAriaLabelHidden
      }), [
        [an, this.iconSvg]
      ]);
  }
};
function jF(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = d(e, "type"), r = d(e, "modelValue");
  return {
    isChecked: _(() => n.value === "multiselect" ? !!(r.value && r.value.indexOf(t.value) !== -1) : r.value === t.value)
  };
}
function zF(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: s = _(() => {
  })
}) {
  const l = (u) => {
    n.value || (t("changeModelValue", {
      currentValue: s.value,
      $event: u,
      isSelected: r.value
    }), u.stopPropagation(), u.preventDefault());
  };
  return {
    onClick: l,
    onKeydown: (u) => {
      n.value || (u.keyCode === X.enter || u.keyCode === X.space) && l(u);
    }
  };
}
const qc = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-lg" viewBox="0 0 16 16">
  <path d="M12.736 3.97a.733.733 0 0 1 1.047 0c.286.289.29.756.01 1.05L7.88 12.01a.733.733 0 0 1-1.065.02L3.217 8.384a.757.757 0 0 1 0-1.06.733.733 0 0 1 1.047 0l3.052 3.093 5.4-6.425z"/>
</svg>`, Po = {
  name: "ASelectElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: s
    } = xc(e), {
      isChecked: l
    } = jF(e, {
      valueLocal: s
    }), {
      disabledElement: o
    } = Fc(e), {
      onClick: u,
      onKeydown: h
    } = zF(e, t, {
      disabledElement: o,
      isChecked: l,
      valueLocal: s
    }), {
      currentLabelFiltered: A,
      dataHideWithSearch: E,
      styleWithSearch: p
    } = Mc(e, {
      labelLocal: r,
      valueLocal: s
    });
    return {
      currentLabelFiltered: A,
      dataHideWithSearch: E,
      disabledElement: o,
      idLocal: n,
      isChecked: l,
      labelLocal: r,
      onClick: u,
      onKeydown: h,
      styleWithSearch: p
    };
  },
  render() {
    return c("div", {
      ariaSelected: this.isChecked,
      class: ["a_select__menu__link a_select__element_clickable", {
        a_select__menu__link_selected: this.isChecked,
        a_select__menu__link_disabled: this.disabledElement
      }],
      "data-hide": this.dataHideWithSearch,
      disabled: this.disabledElement,
      role: "option",
      style: this.styleWithSearch,
      tabindex: "-1",
      onClick: this.onClick,
      onKeydown: this.onKeydown
    }, [
      c("span", {
        class: "a_select__menu__link__icon_box"
      }, [
        this.isChecked && c(ut, {
          icon: qc
        })
      ]),
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered,
        inDropdown: !0
      }) : Pt(c("span"), [
        [an, this.currentLabelFiltered]
      ])
    ]);
  }
};
function YF(e) {
  const t = d(e, "type"), n = _(() => t.value === "select" || t.value === "multiselect");
  return {
    currentComponent: _(() => t.value === "radio" ? wo : t.value === "checkbox" ? xd : n.value ? Po : ""),
    isComponentSelect: n
  };
}
function XF(e) {
  const t = d(e, "levelIndex"), n = d(e, "groupsForLever"), r = d(e, "groupParentKey"), s = _(() => !!n.value[t.value]);
  return {
    currentGroups: _(() => {
      const o = n.value[t.value];
      return ie(r.value) ? o : wt(n.value[t.value], ["groupParentKey", r.value]);
    }),
    isComponentVisible: s
  };
}
const $c = {
  name: "ACheckboxRadioGroups",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    dataGrouped: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    groupParentKey: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    groupsForLever: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: !1
    },
    hideParentWithSearch: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    levelIndex: {
      type: Number,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    modelValueObj: {
      type: Object,
      required: !1,
      default: void 0
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    searchingGroups: {
      type: Object,
      required: !0
    },
    searchingGroupsWithSearchInGroup: {
      type: Object,
      required: !0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0,
      validator: (e) => ["radio", "checkbox", "select", "multiselect"].indexOf(e) !== -1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      onChangeModelValue: n
    } = $F(t), {
      currentComponent: r,
      isComponentSelect: s
    } = YF(e), {
      isComponentVisible: l,
      currentGroups: o
    } = XF(e);
    return {
      currentComponent: r,
      currentGroups: o,
      isComponentSelect: s,
      isComponentVisible: l,
      onChangeModelValue: n
    };
  },
  render() {
    return this.isComponentVisible ? [
      ...this.currentGroups.map((e, t) => {
        let n, r = !1, s = !1;
        if (this.searching) {
          const l = `${this.groupParentKey ? `${this.groupParentKey}_` : ""}${e.groupKey}`;
          s = this.searchingGroupsWithSearchInGroup[l], (this.isHiddenWithSearch || !this.searchingGroups[l] && !s) && (n = "display: none;", r = !0);
        }
        return e.groupKey === "_not_grouped" ? c("div", {
          class: [
            "a_checkbox_radio_group__data",
            {
              a_btn_group: this.isButtonGroup
            }
          ],
          style: n
        }, [
          ...this.dataGrouped[e.allGroupKeys].map((l, o) => c(this.currentComponent, {
            id: `${this.id}`,
            alwaysTranslate: this.alwaysTranslate,
            classButtonGroupDefault: this.isComponentSelect ? void 0 : this.classButtonGroupDefault,
            dataItem: l,
            disabled: this.disabled,
            isButtonGroup: this.isComponentSelect ? void 0 : this.isButtonGroup,
            isErrors: this.isComponentSelect ? void 0 : this.isErrors,
            isHiddenWithSearch: r,
            isWidthAuto: this.isComponentSelect ? void 0 : this.isWidthAuto,
            itemIndex: o,
            keyDisabled: this.keyDisabled,
            keyTitle: this.keyTitle,
            keyTitleCallback: this.keyTitleCallback,
            modelSearch: this.modelSearch,
            modelValue: this.modelValue,
            searching: this.searching,
            searchingElements: this.searchingElements,
            showElementWennGroupFound: s,
            slotAppendName: this.slotAppendName,
            slotName: this.slotName,
            type: this.type,
            onChangeModelValue: this.onChangeModelValue
          }, this.$slots))
        ]) : c("fieldset", {
          class: "a_fieldset",
          style: n
        }, [
          c(UT, {
            id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}`,
            alwaysTranslate: this.alwaysTranslate,
            data: e.data,
            dataKeyByKeyId: e.dataKeyByKeyId,
            disabled: this.disabled,
            hasControlCheckbox: this.hasControlCheckbox,
            isErrors: this.isErrors,
            label: e.groupLabel,
            modelSearch: this.modelSearch,
            modelValue: this.modelValue,
            modelValueObj: this.modelValueObj,
            showSearchHighlight: s,
            onChangeModelValue: this.onChangeModelValue
          }),
          c("div", {
            id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}_group`,
            "aria-labelledby": `${this.id}_lev_${this.levelIndex + 1}_gr_${t}_legend`,
            role: "group"
          }, [
            !!(this.dataGrouped[e.allGroupKeys] || []).length && c("div", {
              class: [
                "a_checkbox_radio_group__data",
                {
                  a_btn_group: this.isButtonGroup
                }
              ]
            }, [
              ...(this.dataGrouped[e.allGroupKeys] || []).map((l, o) => c(this.currentComponent, {
                id: `${this.id}_gr_${t}`,
                alwaysTranslate: this.alwaysTranslate,
                classButtonGroupDefault: this.isComponentSelect ? void 0 : this.classButtonGroupDefault,
                dataItem: l,
                disabled: this.disabled,
                isButtonGroup: this.isComponentSelect ? void 0 : this.isButtonGroup,
                isErrors: this.isComponentSelect ? void 0 : this.isErrors,
                isHiddenWithSearch: r,
                isWidthAuto: this.isComponentSelect ? void 0 : this.isWidthAuto,
                itemIndex: o,
                keyDisabled: this.keyDisabled,
                keyTitle: this.keyTitle,
                keyTitleCallback: this.keyTitleCallback,
                modelSearch: this.modelSearch,
                modelValue: this.modelValue,
                searching: this.searching,
                searchingElements: this.searchingElements,
                showElementWennGroupFound: s,
                slotAppendName: this.slotAppendName,
                slotName: this.slotName,
                type: this.type,
                onChangeModelValue: this.onChangeModelValue
              }, this.$slots))
            ]),
            c($r("ACheckboxRadioGroups"), {
              id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}`,
              alwaysTranslate: this.alwaysTranslate,
              classButtonGroupDefault: this.classButtonGroupDefault,
              dataGrouped: this.dataGrouped,
              disabled: this.disabled,
              groupParentKey: e.groupKey,
              groupsForLever: this.groupsForLever,
              hasControlCheckbox: this.hasControlCheckbox,
              isButtonGroup: this.isButtonGroup,
              isErrors: this.isErrors,
              isHiddenWithSearch: r,
              isWidthAuto: this.isWidthAuto,
              keyDisabled: this.keyDisabled,
              keyTitle: this.keyTitle,
              keyTitleCallback: this.keyTitleCallback,
              levelIndex: this.levelIndex + 1,
              modelSearch: this.modelSearch,
              modelValue: this.modelValue,
              modelValueObj: this.modelValueObj,
              searching: this.searching,
              searchingElements: this.searchingElements,
              searchingGroups: this.searchingGroups,
              searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
              slotName: this.slotName,
              slotAppendName: this.slotAppendName,
              type: this.type,
              onChangeModelValue: this.onChangeModelValue
            }, this.$slots)
          ])
        ]);
      })
    ] : null;
  }
};
function HT(e) {
  const t = d(e, "align"), n = d(e, "size"), r = d(e, "textAlign"), s = _(() => `a_text_${t.value}`), l = _(() => r.value === "left" ? "a_cloak__box_text_left" : "a_cloak__box_text_right"), o = _(() => `a_fs_${n.value}`);
  return {
    classAlign: s,
    classForBox: l,
    classTextSize: o
  };
}
const Oa = B({
  propsDefault: {
    align: "center",
    extra: void 0,
    size: 6,
    tag: "div",
    text: "_A_CLOAK_LOADING_",
    textAlign: "right"
  }
}), ode = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Oa.value.propsDefault = {
      ...Oa.value.propsDefault,
      ...t
    };
  }
}, Mn = B({
  propsDefault: {
    ariaLabel: "_A_SPINNER_LOADING_",
    class: "a_spinner",
    extra: void 0,
    safeHtml: "",
    size: void 0,
    tag: "span"
  }
}), ude = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Mn.value.propsDefault = {
      ...Mn.value.propsDefault,
      ...t
    };
  }
}, ul = {
  name: "ACloak",
  props: {
    align: {
      type: String,
      required: !1,
      default: () => Oa.value.propsDefault.align,
      validator: (e) => ["left", "center", "right"].indexOf(e) !== -1
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: Oa.value.propsDefault.extra
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => Oa.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    spinnerClass: {
      type: [String, Object],
      required: !1,
      default: () => Mn.value.propsDefault.class
    },
    spinnerSafeHtml: {
      type: String,
      required: !1,
      default: () => Mn.value.propsDefault.safeHtml
    },
    spinnerTag: {
      type: String,
      required: !1,
      default: () => Mn.value.propsDefault.tag
    },
    tag: {
      type: String,
      required: !1,
      default: () => Oa.value.propsDefault.tag
    },
    text: {
      type: String,
      required: !1,
      default: () => Oa.value.propsDefault.text
    },
    textAlign: {
      type: String,
      required: !1,
      default: () => Oa.value.propsDefault.textAlign,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    }
  },
  setup(e) {
    const {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    } = HT(e);
    return {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    };
  },
  render() {
    const e = this.textAlign === "left", t = c(Ae, {
      alwaysTranslate: this.alwaysTranslate,
      tag: "span",
      class: [
        "a_cloak__text",
        e ? "a_cloak__text_left" : "a_cloak__text_right",
        this.classTextSize
      ],
      text: this.text,
      extra: this.extra
    });
    return c(
      this.tag,
      {
        role: "status",
        class: this.classAlign
      },
      [
        c("div", {
          class: ["a_cloak__box", this.classForBox]
        }, [
          e ? t : "",
          c(fl, {
            alwaysTranslate: this.alwaysTranslate,
            class: [
              "a_cloak__spinner",
              this.spinnerClass
            ],
            "aria-hidden": "true",
            safeHtml: this.spinnerSafeHtml,
            size: this.size,
            tag: this.spinnerTag
          }),
          e ? "" : t
        ])
      ]
    );
  }
}, sn = {
  name: "AErrorsText",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const t = d(e, "errors");
    return {
      errorsLocal: _(() => it(t.value) ? [t.value] : t.value)
    };
  },
  render() {
    return c("ul", {
      id: this.id,
      class: "a_form_element__invalid_text"
    }, [
      this.errorsLocal.map((e) => c("li", null, e))
    ]);
  }
};
function ZF({
  htmlLocalOptions: e = _(() => {
  }),
  textLocalOptions: t = _(() => ({})),
  titleLocalOptions: n = _(() => ({}))
}) {
  const r = _(() => {
    var l, o, u, h;
    return ((l = t.value) == null ? void 0 : l.dataTranslateText) || ((o = e.value) == null ? void 0 : o.dataTranslateSafeHtml) || ((u = e.value) == null ? void 0 : u.dataTranslateHtml) || ((h = n.value) == null ? void 0 : h.title);
  });
  return {
    attributesLocal: _(() => {
      var o, u, h;
      const l = {};
      return (o = t.value) != null && o.dataTranslateText ? l["data-translate-text"] = t.value.dataTranslateText : (u = e.value) != null && u.dataTranslateSafeHtml ? l["data-translate-safe-html"] = e.value.dataTranslateSafeHtml : (h = e.value) != null && h.dataTranslateHtml && (l["data-translate-html"] = e.value.dataTranslateHtml), n.value.title && (l.title = n.value.title, n.value.dataTranslateTitle && (l["data-translate-title"] = n.value.dataTranslateTitle)), l;
    }),
    hasAttributesLocal: r
  };
}
function JF(e, {
  hasTextAfter: t = _(() => !1),
  hasTextBefore: n = _(() => !1),
  textAfterForCurrentDevice: r = _(() => ""),
  textBeforeForCurrentDevice: s = _(() => "")
}) {
  const l = d(e, "alwaysTranslate"), o = d(e, "extra"), u = d(e, "html"), h = d(e, "safeHtml"), {
    isPlaceholderTranslate: A,
    getTranslatedText: E
  } = Ms(), {
    isMobileWidth: p
  } = En(), {
    translationChanges: T
  } = Ti(), S = _(() => nt(h.value) ? p.value ? h.value.mobile : h.value.desktop : h.value), b = _(() => nt(u.value) ? p.value ? u.value.mobile : u.value.desktop : u.value), L = _(() => Te(h.value)), I = _(() => Te(u.value)), v = _(() => L.value ? h.value.length > 0 : !we(S.value)), R = _(() => I.value ? u.value.length > 0 : !we(b.value)), g = _(() => n.value ? `<span>${s.value}</span>` : ""), D = _(() => t.value ? `<span>${r.value}</span>` : ""), w = _(() => {
    const P = {
      safeHtml: void 0,
      html: void 0,
      dataTranslateHtml: void 0,
      dataTranslateSafeHtml: void 0
    };
    if (!T.value)
      return P;
    if (v.value) {
      const F = L.value ? h.value : [S.value];
      let C = "", k = "";
      z(F, (W) => {
        !W && W !== 0 || (C && (C += " ", k += " "), A(W) ? (C += E({
          placeholder: W,
          extra: o.value,
          alwaysTranslate: l.value
        }), k += W) : C += W);
      }), P.safeHtml = C || void 0, P.dataTranslateSafeHtml = k || void 0;
    } else if (R.value) {
      const F = I.value ? u.value : [b.value];
      let C = "", k = "";
      z(F, (W) => {
        !W && W !== 0 || (C && (C += " ", k += " "), A(W) ? (C += Ko(E({
          placeholder: W,
          extra: o.value,
          alwaysTranslate: l.value
        })), k += W) : C += Ko(W));
      }), P.html = ie(C) ? void 0 : C, P.dataTranslateHtml = ie(k) ? void 0 : k;
    }
    return P;
  }), M = _(() => `${g.value}${w.value.safeHtml || w.value.html}${D.value}`);
  return {
    hasHtml: R,
    hasSafeHtml: v,
    htmlLocalOptions: w,
    htmlLocalWithBeforeAndAfter: M
  };
}
function yl(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "extra"), r = d(e, "placeholder"), {
    translationChanges: s
  } = Ti(), {
    isPlaceholderTranslate: l,
    getTranslatedText: o,
    getTranslationAttributes: u
  } = Ms(), {
    isMobileWidth: h
  } = En(), A = _(() => nt(r.value) ? h.value ? r.value.mobile : r.value.desktop : r.value), E = _(() => !we(A.value)), p = _(() => !(!E.value || !l(A.value))), T = _(() => {
    if (s.value)
      return p.value ? o({
        placeholder: A.value,
        extra: n.value,
        alwaysTranslate: t.value
      }) : A.value;
  }), S = _(() => {
    const b = {};
    return E.value ? u({
      attr: "placeholder",
      translation: T.value,
      value: A.value,
      isTranslate: p.value
    }) : b;
  });
  return {
    hasPlaceholder: E,
    placeholderAttributes: S
  };
}
function QF({
  hasAriaLabel: e,
  hasAttributesLocal: t,
  hasPlaceholder: n,
  hasTextAfter: r,
  hasTextBefore: s
}) {
  return {
    hasRestAttributes: _(() => e.value || t.value || n.value || r.value || s.value)
  };
}
function e0(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "extra"), r = d(e, "text"), {
    isPlaceholderTranslate: s,
    getTranslatedText: l
  } = Ms(), {
    isMobileWidth: o
  } = En(), {
    translationChanges: u
  } = Ti(), h = _(() => nt(r.value) ? o.value ? r.value.mobile : r.value.desktop : r.value), A = _(() => Te(r.value)), E = _(() => A.value ? r.value.length > 0 : !we(h.value)), p = _(() => {
    const T = {
      text: void 0,
      dataTranslateText: void 0
    };
    if (!u.value)
      return T;
    if (E.value) {
      const S = A.value ? r.value : [h.value];
      let b = "", L = "";
      z(S, (I) => {
        !I && I !== 0 || (b && (b += " ", L += " "), s(I) ? (b += l({
          placeholder: I,
          extra: n.value,
          alwaysTranslate: t.value
        }), L += I) : b += I);
      }), T.text = b || void 0, T.dataTranslateText = L || void 0;
    }
    return T;
  });
  return {
    hasText: E,
    textLocalOptions: p
  };
}
function t0(e) {
  const t = d(e, "textAfter"), n = d(e, "textBefore"), {
    isMobileWidth: r
  } = En(), s = _(() => nt(t.value) ? r.value ? t.value.mobile : t.value.desktop : t.value), l = _(() => nt(n.value) ? r.value ? n.value.mobile : n.value.desktop : n.value), o = _(() => !ie(s.value) && s.value !== ""), u = _(() => !ie(l.value) && l.value !== "");
  return {
    hasTextAfter: o,
    hasTextBefore: u,
    textAfterForCurrentDevice: s,
    textBeforeForCurrentDevice: l
  };
}
function n0(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "extra"), r = d(e, "title"), {
    isPlaceholderTranslate: s,
    getTranslatedText: l
  } = Ms(), {
    isMobileWidth: o
  } = En(), {
    translationChanges: u
  } = Ti(), h = _(() => nt(r.value) ? o.value ? r.value.mobile : r.value.desktop : r.value), A = _(() => Te(r.value)), E = _(() => A.value ? r.value.length > 0 : !(ie(h.value) || h.value === ""));
  return {
    titleLocalOptions: _(() => {
      if (!u.value)
        return;
      const T = {
        title: void 0,
        dataTranslateTitle: void 0
      };
      if (!E.value)
        return T;
      const S = A.value ? r.value : [h.value];
      let b = "", L = "";
      return z(S, (I) => {
        !I && I !== 0 || (b && (b += " ", L += " "), s(I) ? (b += l({
          placeholder: I,
          extra: n.value,
          alwaysTranslate: t.value
        }), L += I) : b += I);
      }), T.title = b || void 0, T.dataTranslateTitle = L || void 0, T;
    })
  };
}
const Ae = {
  name: "ATranslation",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: ""
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: ""
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      hasTextAfter: t,
      hasTextBefore: n,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: s
    } = t0(e), {
      hasText: l,
      textLocalOptions: o
    } = e0(e), {
      hasHtml: u,
      hasSafeHtml: h,
      htmlLocalOptions: A,
      htmlLocalWithBeforeAndAfter: E
    } = JF(e, {
      hasTextAfter: t,
      hasTextBefore: n,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: s
    }), {
      titleLocalOptions: p
    } = n0(e), {
      hasPlaceholder: T,
      placeholderAttributes: S
    } = yl(e), {
      ariaLabelAttributes: b,
      hasAriaLabel: L
    } = yc(e), {
      attributesLocal: I,
      hasAttributesLocal: v
    } = ZF({
      htmlLocalOptions: A,
      textLocalOptions: o,
      titleLocalOptions: p
    }), {
      hasRestAttributes: R
    } = QF({
      hasAriaLabel: L,
      hasAttributesLocal: v,
      hasPlaceholder: T,
      hasTextAfter: t,
      hasTextBefore: n
    });
    return {
      ariaLabelAttributes: b,
      attributesLocal: I,
      hasText: l,
      hasTextAfter: t,
      hasTextBefore: n,
      hasHtml: u,
      hasRestAttributes: R,
      hasSafeHtml: h,
      htmlLocalWithBeforeAndAfter: E,
      placeholderAttributes: S,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: s,
      textLocalOptions: o
    };
  },
  render() {
    return this.hasText ? c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes
    }, [
      this.textBeforeForCurrentDevice,
      this.textLocalOptions.text,
      this.$slots.default && this.$slots.default(),
      this.textAfterForCurrentDevice
    ]) : this.hasSafeHtml || this.hasHtml ? c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes,
      innerHTML: this.htmlLocalWithBeforeAndAfter
    }) : (this.hasRestAttributes || this.$slots.default) && c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes
    }, [
      this.textBeforeForCurrentDevice,
      this.$slots.default && this.$slots.default(),
      this.textAfterForCurrentDevice
    ]);
  }
}, ln = {
  name: "AFormHelpText",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    html: {
      type: [String, Number],
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  render() {
    return this.html && c(Ae, {
      id: this.id,
      alwaysTranslate: this.alwaysTranslate,
      class: "a_form_element__help_text",
      html: this.html,
      extra: this.extra
    });
  }
};
function r0({
  isBtnShowPasswordVisible: e = _(() => !1),
  isClearButtonLocal: t = _(() => !1)
}) {
  return {
    inputClassBtns: _(() => {
      if (e.value)
        return t.value ? "a_form_element_with_two_btns" : "a_form_element_with_one_btn";
      if (t.value)
        return "a_form_element_with_one_btn";
    })
  };
}
function a0(e) {
  const t = d(e, "modelValue"), n = d(e, "type");
  return {
    modelValueLocal: _(() => n.value === "color" && !t.value ? "#000000" : t.value)
  };
}
function s0(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "disabled"), r = d(e, "type"), s = B(void 0);
  return {
    inputRef: s,
    onInput: (o) => {
      if (n.value)
        return;
      let u = o.target.value;
      r.value === "integer" && (u = u.replace(/\D/g, ""), u !== "" && (u = +u), s.value.value = u), r.value === "number" && u !== "" && (u = +u), t({
        model: u
      });
    }
  };
}
const VT = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01757813,0,0,0.0175781,-0.02634961,0.65854895)"
  >
    <path
      d="m 318.642,688.822 44.574,-80.57 q -49.718,-35.998 -77.712,-90.858 -27.994,-54.86 -27.999,-116.002 0,-69.147 34.857,-128.572 Q 161.506,339.676 74.649,474.533 170.076,621.96 318.651,688.819 Z M 540.925,255.106 q 0,-11.42 -8.004,-19.424 -8.004,-8.004 -19.424,-8.004 -71.429,0 -122.571,51.142 -51.142,51.142 -51.142,122.571 0,11.42 8.004,19.424 8.004,8.004 19.424,8.004 11.42,0 19.424,-8.004 8.004,-8.004 8.004,-19.424 0,-49.143 34.857,-83.997 34.857,-34.854 83.997,-34.857 11.42,0 19.424,-8.004 8.004,-8.004 8.004,-19.424 z M 748.354,145.968 q 0,4.001 -0.584,5.141 -60.003,107.428 -179.999,323.427 -119.996,215.999 -180.573,324 l -27.999,50.859 q -5.725,9.142 -16.006,9.142 -6.864,0 -76.57,-40 -9.142,-5.725 -9.142,-16.006 0,-6.864 25.149,-49.718 Q 200.917,715.671 132.062,653.954 63.207,592.237 12.919,513.955 1.499,496.244 1.499,474.522 q 0,-21.722 11.42,-39.433 87.429,-134.286 217.143,-211.999 129.714,-77.713 283.429,-77.712 50.859,0 102.861,9.725 l 30.855,-55.425 q 5.725,-9.142 16.006,-9.142 2.863,0 10.282,3.418 7.419,3.418 17.711,8.865 10.292,5.447 18.858,10.564 8.566,5.117 18.008,10.564 9.442,5.447 11.143,6.566 9.142,5.725 9.142,15.423 z m 21.143,255.427 q 0,79.43 -45.141,144.859 -45.141,65.429 -119.429,94 l 160,-286.857 q 4.57,25.711 4.57,48 z m 256.002,73.144 q 0,20.008 -11.42,39.433 -22.287,36.571 -62.285,82.856 -85.714,98.284 -198.568,152.568 -112.854,54.284 -239.713,54.285 l 42.284,-75.43 q 121.144,-10.282 224.285,-78.29 103.141,-68.008 172.286,-175.429 -65.711,-102.285 -161.146,-168 l 35.998,-64.004 q 54.285,36.571 104.285,87.429 50,50.858 82.572,105.143 11.42,19.424 11.42,39.433 z"
    />
  </g>
</svg>`, WT = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01752671,0,0,0.01752691,-1.7526709e-5,0.68479724)"
  >
    <path
      d="M 953.646,474.431 Q 866.534,339.176 735.292,272.123 q 34.959,59.601 34.959,128.952 0,106.025 -75.367,181.39 -75.367,75.365 -181.39,75.367 -106.023,0.002 -181.39,-75.367 -75.367,-75.369 -75.367,-181.39 0,-69.35 34.959,-128.952 -131.243,67.052 -218.354,202.308 76.223,117.492 191.132,187.121 114.909,69.629 249.018,69.633 134.109,0.004 249.018,-69.633 114.909,-69.637 191.132,-187.121 z M 541.004,254.353 q 0,-11.454 -8.027,-19.481 -8.027,-8.027 -19.481,-8.027 -71.639,0 -122.932,51.293 -51.293,51.293 -51.293,122.932 0,11.454 8.027,19.481 8.027,8.027 19.481,8.027 11.454,0 19.481,-8.027 8.027,-8.027 8.027,-19.481 0,-49.288 34.959,-84.246 34.959,-34.958 84.246,-34.959 11.454,0 19.481,-8.027 Q 541,265.811 541,254.357 Z m 486.001,220.078 q 0,19.481 -11.454,39.549 Q 935.316,645.795 799.773,725.169 664.23,804.543 513.503,804.546 362.776,804.549 227.233,724.882 91.69,645.215 11.455,513.974 0.001,493.906 0.001,474.425 q 0,-19.481 11.454,-39.549 80.235,-131.243 215.778,-210.908 135.543,-79.665 286.27,-79.664 150.727,0.001 286.27,79.664 135.543,79.663 215.778,210.908 11.454,20.068 11.454,39.549 z"
    />
  </g>
</svg>`;
function i0(e, {
  setTypeLocal: t = () => {
  },
  typeForInput: n = _(() => "")
}) {
  const r = d(e, "showPassword"), s = d(e, "type"), l = _(() => !!(s.value === "password" && r.value)), o = _(() => n.value === "password"), u = _(() => o.value ? VT : WT), h = () => {
    t({
      type: o.value ? "text" : "password"
    });
  }, A = _(() => o.value ? "_A_INPUT_SHOW_PASSWORD_" : "_A_INPUT_HIDE_PASSWORD_");
  return {
    iconBtnShowPassword: u,
    isBtnShowPasswordVisible: l,
    titleBtnShowPassword: A,
    toggleTypePassword: h
  };
}
function l0(e) {
  const t = d(e, "modelValue"), n = d(e, "readonlyPasswordLength"), r = d(e, "readonlyPasswordSymbol"), s = d(e, "showPassword"), l = d(e, "type");
  return {
    modelValueReadonly: _(() => l.value === "password" ? s.value ? t.value : r.value.repeat(n.value) : t.value)
  };
}
function o0(e) {
  const t = d(e, "type"), n = B(void 0), r = _(() => n.value === "integer" ? "text" : n.value);
  return {
    setTypeLocal: ({ type: l } = {}) => {
      l ? n.value = l : n.value = t.value;
    },
    typeForInput: r
  };
}
const In = {
  name: "AInput",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_input_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    maxlength: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    readonlyPasswordLength: {
      type: Number,
      required: !1,
      default: 8,
      validator: (e) => e > 0 && ca(e)
    },
    readonlyPasswordSymbol: {
      type: String,
      required: !1,
      default: "*"
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    showPassword: {
      type: Boolean,
      required: !1,
      default: !0
    },
    step: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "text"
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const n = d(e, "type"), {
      disabledAttribut: r
    } = Dl(e), {
      setTypeLocal: s,
      typeForInput: l
    } = o0(e), {
      attributesToExcludeFromRender: o
    } = Ct(e), {
      componentStyleHide: u
    } = Xt(e), {
      ariaDescribedbyLocal: h,
      changeModel: A,
      clearModel: E,
      errorsId: p,
      helpTextId: T,
      htmlIdLocal: S,
      isErrors: b,
      isModel: L,
      onBlur: I,
      onFocus: v
    } = Yt(e, t), {
      isClearButtonLocal: R
    } = qu(e, {
      isModel: L
    }), {
      inputRef: g,
      onInput: D
    } = s0(e, {
      changeModel: A
    }), {
      iconBtnShowPassword: w,
      isBtnShowPasswordVisible: M,
      titleBtnShowPassword: P,
      toggleTypePassword: F
    } = i0(e, {
      setTypeLocal: s,
      typeForInput: l
    }), {
      isAutofill: C
    } = of({ inputRef: g }), {
      inputClassBtns: k
    } = r0({
      isBtnShowPasswordVisible: M,
      isClearButtonLocal: R
    }), {
      placeholderAttributes: W
    } = yl(e), {
      modelValueLocal: K
    } = a0(e), {
      modelValueReadonly: le
    } = l0(e);
    return rt(n, () => {
      s();
    }), s(), {
      ariaDescribedbyLocal: h,
      attributesToExcludeFromRender: o,
      clearModel: E,
      componentStyleHide: u,
      disabledAttribut: r,
      errorsId: p,
      helpTextId: T,
      htmlIdLocal: S,
      iconBtnShowPassword: w,
      inputClassBtns: k,
      inputRef: g,
      isAutofill: C,
      isBtnShowPasswordVisible: M,
      isClearButtonLocal: R,
      isErrors: b,
      isModel: L,
      modelValueLocal: K,
      modelValueReadonly: le,
      onBlur: I,
      onFocus: v,
      onInput: D,
      placeholderAttributes: W,
      titleBtnShowPassword: P,
      toggleTypePassword: F,
      typeForInput: l
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Vn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.modelValueReadonly,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: this.type
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel || this.isAutofill,
          a_form_element__parent_float_has_icon_prepend: this.iconPrepend
        }]
      }, [
        this.label || this.labelScreenReader ? c(Mt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type
        }) : "",
        c("div", {
          class: "a_form_element"
        }, [
          this.iconPrepend && c(ut, {
            icon: this.iconPrepend,
            class: "a_input__icon_prepend"
          }),
          c("input", {
            ref: "inputRef",
            id: this.htmlIdLocal,
            autocomplete: this.autocomplete,
            value: this.modelValueLocal,
            type: this.typeForInput,
            class: [
              "a_form_control a_input",
              this.inputClass,
              this.inputClassBtns,
              {
                a_form_control_invalid: this.isErrors
              }
            ],
            disabled: this.disabledAttribut,
            ariaRequired: this.required,
            ariaInvalid: this.isErrors,
            "aria-describedby": this.ariaDescribedbyLocal,
            maxlength: this.maxlength,
            step: this.step,
            ...this.placeholderAttributes,
            ...this.inputAttributes,
            onInput: this.onInput,
            onFocus: this.onFocus,
            onBlur: this.onBlur
          }),
          this.isBtnShowPasswordVisible || this.isClearButtonLocal ? c("div", {
            class: "a_form_control__actions"
          }, [
            this.isBtnShowPasswordVisible ? c(ft, {
              alwaysTranslate: this.alwaysTranslate,
              class: "a_btn a_btn_transparent_dark a_btn_small a_form_control__actions__btn",
              iconLeft: this.iconBtnShowPassword,
              type: "button",
              title: this.titleBtnShowPassword,
              textScreenReader: this.titleBtnShowPassword,
              disabled: this.disabled,
              onClick: this.toggleTypePassword
            }) : "",
            this.isClearButtonLocal ? c(xu, {
              alwaysTranslate: this.alwaysTranslate,
              disabled: this.disabled,
              class: this.clearButtonClass,
              onClear: this.clearModel
            }) : ""
          ]) : ""
        ]),
        c(ln, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(sn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function kc(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = d(e, "label"), r = _(() => `${t.value}_group`);
  return {
    groupAriaLabelledby: _(() => {
      if (n.value)
        return `${t.value}_legend`;
    }),
    groupId: r
  };
}
function u0(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "disabled");
  return {
    onChangeModelValue: ({ model: s, $event: l }) => {
      n.value || setTimeout(() => {
        t({
          model: s,
          $event: l
        });
      });
    }
  };
}
function _0(e) {
  const t = d(e, "modelValue");
  return {
    modelValueObj: _(() => {
      const r = {};
      return z(t.value || [], (s) => {
        r[s] = !0;
      }), r;
    })
  };
}
function Uc(e) {
  const t = d(e, "required");
  return {
    textAfterLabel: _(() => t.value ? "*" : "")
  };
}
function Hc(e, {
  data: t = _(() => [])
}) {
  const n = d(e, "keyGroup"), r = d(e, "keyGroupLabelCallback"), s = d(e, "sortOrderGroup"), l = _(() => Te(n.value) ? n.value : it(n.value) ? [n.value] : []), o = _(() => l.value.length > 0), u = _(() => {
    if (!o.value)
      return;
    const A = {};
    return z(l.value, (E, p) => {
      A[p] = {};
    }), z(t.value, (E) => {
      let p;
      const T = [];
      let S = "";
      z(l.value, (b, L) => {
        let I = fe(E, b);
        (ie(I) || I === "") && (I = "_not_grouped"), S += `${S ? "_" : ""}${I}`, A[L][S] || (A[L][S] = {
          groupKey: I,
          groupLabel: qe(r.value) ? r.value({ group: I, item: E }) : I,
          groupParentKey: p,
          allGroupKeys: S,
          allParentKeys: pe(T),
          data: [],
          dataKeyByKeyId: {}
        }), A[L][S].data.push(E), A[L][S].dataKeyByKeyId[E[Ke]] = E, p = I, T.push(I);
      });
    }), z(A, (E, p) => {
      A[p] = Ac(E);
    }), s.value && z(A, (E, p) => {
      A[p] = pc(E, ["groupLabel"], [s.value]);
    }), A;
  });
  return {
    dataGrouped: _(() => {
      if (!o.value)
        return;
      const A = {};
      return z(t.value, (E) => {
        let p = "";
        z(l.value, (T) => {
          let S = fe(E, T);
          if (ie(S) || S === "")
            return S = "_not_grouped", p += `${p ? "_" : ""}${S}`, !1;
          p += `${p ? "_" : ""}${S}`;
        }), A[p] = A[p] || [], A[p].push(E);
      }), A;
    }),
    groupsForLever: u,
    hasKeyGroup: o,
    keyGroupArray: l
  };
}
function d0(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = d(e, "errors"), r = _(() => n.value ? it(n.value) ? !0 : Te(n.value) ? !!pi(n.value) : !1 : !1);
  return {
    errorsId: _(() => `${t.value}_errors_text`),
    isErrors: r
  };
}
function Yt(e, { emit: t }) {
  const n = d(e, "change"), r = d(e, "disabled"), s = d(e, "helpText"), l = d(e, "htmlId"), o = d(e, "id"), u = d(e, "idPrefix"), h = d(e, "modelUndefined"), A = d(e, "modelValue"), E = B(!1), p = _(() => _l({
    id: o.value,
    idPrefix: u.value,
    htmlId: l.value
  })), {
    errorsId: T,
    isErrors: S
  } = d0(e, {
    htmlIdLocal: p
  }), b = ({ model: w, currentModel: M, item: P }) => {
    t("update:modelValue", w), n.value({
      currentModel: M,
      id: o.value,
      item: P,
      model: w,
      props: e
    });
  }, L = _(() => !!(A.value || A.value === 0)), I = () => {
    r.value || b({
      model: h.value
    });
  }, v = _(() => `${p.value}_help_text`);
  return {
    ariaDescribedbyLocal: _(() => {
      let w = "";
      return s.value && (w += v.value), S.value && (w && (w += " "), w += T.value), w || void 0;
    }),
    changeModel: b,
    clearModel: I,
    errorsId: T,
    helpTextId: v,
    htmlIdLocal: p,
    isErrors: S,
    isFocus: E,
    isModel: L,
    onBlur: (w) => {
      E.value = !1, t("blur", {
        event: w,
        props: e
      });
    },
    onFocus: (w) => {
      E.value = !0, t("focus", {
        event: w,
        props: e
      });
    }
  };
}
function _l({ id: e, idPrefix: t, htmlId: n }) {
  return n || `${t || ""}${e}`;
}
const mi = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708"/>
</svg>`, Vc = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-up" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708z"/>
</svg>`;
function Wc(e, { emit: t }) {
  const n = d(e, "collapsible"), r = d(e, "id"), s = d(e, "isCollapsed"), l = d(e, "texts"), o = B(!1), u = _(() => o.value ? Vc : mi), h = _(() => {
    var S;
    return ((S = l.value) == null ? void 0 : S.collapseOpen) || "_A_FIELDSET_COLLAPSE_OPEN_";
  }), A = _(() => {
    var S;
    return ((S = l.value) == null ? void 0 : S.collapseClose) || "_A_FIELDSET_COLLAPSE_CLOSE_";
  }), E = _(() => o.value ? h.value : A.value), p = () => {
    o.value = !o.value, t("toggleCollapse", { isCollapsed: o.value, id: r.value, props: e });
  }, T = () => {
    n.value ? o.value = s.value || !1 : o.value = !1;
  };
  return rt(s, () => {
    o.value = s.value || !1;
  }), {
    iconCollapse: u,
    initIsCollapsedLocal: T,
    isCollapsedLocal: o,
    titleCollapse: E,
    toggleCollapse: p
  };
}
function GT(e, t) {
  return function() {
    return e.apply(t, arguments);
  };
}
const { toString: c0 } = Object.prototype, { getPrototypeOf: Gc } = Object, yu = /* @__PURE__ */ ((e) => (t) => {
  const n = c0.call(t);
  return e[n] || (e[n] = n.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null)), Rr = (e) => (e = e.toLowerCase(), (t) => yu(t) === e), gu = (e) => (t) => typeof t === e, { isArray: Si } = Array, dl = gu("undefined");
function f0(e) {
  return e !== null && !dl(e) && e.constructor !== null && !dl(e.constructor) && $n(e.constructor.isBuffer) && e.constructor.isBuffer(e);
}
const KT = Rr("ArrayBuffer");
function h0(e) {
  let t;
  return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? t = ArrayBuffer.isView(e) : t = e && e.buffer && KT(e.buffer), t;
}
const A0 = gu("string"), $n = gu("function"), jT = gu("number"), Ru = (e) => e !== null && typeof e == "object", E0 = (e) => e === !0 || e === !1, xo = (e) => {
  if (yu(e) !== "object")
    return !1;
  const t = Gc(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}, p0 = Rr("Date"), T0 = Rr("File"), m0 = Rr("Blob"), S0 = Rr("FileList"), b0 = (e) => Ru(e) && $n(e.pipe), L0 = (e) => {
  let t;
  return e && (typeof FormData == "function" && e instanceof FormData || $n(e.append) && ((t = yu(e)) === "formdata" || // detect form-data instance
  t === "object" && $n(e.toString) && e.toString() === "[object FormData]"));
}, I0 = Rr("URLSearchParams"), [v0, y0, g0, R0] = ["ReadableStream", "Request", "Response", "Headers"].map(Rr), O0 = (e) => e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function gl(e, t, { allOwnKeys: n = !1 } = {}) {
  if (e === null || typeof e > "u")
    return;
  let r, s;
  if (typeof e != "object" && (e = [e]), Si(e))
    for (r = 0, s = e.length; r < s; r++)
      t.call(null, e[r], r, e);
  else {
    const l = n ? Object.getOwnPropertyNames(e) : Object.keys(e), o = l.length;
    let u;
    for (r = 0; r < o; r++)
      u = l[r], t.call(null, e[u], u, e);
  }
}
function zT(e, t) {
  t = t.toLowerCase();
  const n = Object.keys(e);
  let r = n.length, s;
  for (; r-- > 0; )
    if (s = n[r], t === s.toLowerCase())
      return s;
  return null;
}
const Rs = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : global, YT = (e) => !dl(e) && e !== Rs;
function Fd() {
  const { caseless: e } = YT(this) && this || {}, t = {}, n = (r, s) => {
    const l = e && zT(t, s) || s;
    xo(t[l]) && xo(r) ? t[l] = Fd(t[l], r) : xo(r) ? t[l] = Fd({}, r) : Si(r) ? t[l] = r.slice() : t[l] = r;
  };
  for (let r = 0, s = arguments.length; r < s; r++)
    arguments[r] && gl(arguments[r], n);
  return t;
}
const C0 = (e, t, n, { allOwnKeys: r } = {}) => (gl(t, (s, l) => {
  n && $n(s) ? e[l] = GT(s, n) : e[l] = s;
}, { allOwnKeys: r }), e), N0 = (e) => (e.charCodeAt(0) === 65279 && (e = e.slice(1)), e), D0 = (e, t, n, r) => {
  e.prototype = Object.create(t.prototype, r), e.prototype.constructor = e, Object.defineProperty(e, "super", {
    value: t.prototype
  }), n && Object.assign(e.prototype, n);
}, B0 = (e, t, n, r) => {
  let s, l, o;
  const u = {};
  if (t = t || {}, e == null) return t;
  do {
    for (s = Object.getOwnPropertyNames(e), l = s.length; l-- > 0; )
      o = s[l], (!r || r(o, e, t)) && !u[o] && (t[o] = e[o], u[o] = !0);
    e = n !== !1 && Gc(e);
  } while (e && (!n || n(e, t)) && e !== Object.prototype);
  return t;
}, w0 = (e, t, n) => {
  e = String(e), (n === void 0 || n > e.length) && (n = e.length), n -= t.length;
  const r = e.indexOf(t, n);
  return r !== -1 && r === n;
}, P0 = (e) => {
  if (!e) return null;
  if (Si(e)) return e;
  let t = e.length;
  if (!jT(t)) return null;
  const n = new Array(t);
  for (; t-- > 0; )
    n[t] = e[t];
  return n;
}, x0 = /* @__PURE__ */ ((e) => (t) => e && t instanceof e)(typeof Uint8Array < "u" && Gc(Uint8Array)), F0 = (e, t) => {
  const r = (e && e[Symbol.iterator]).call(e);
  let s;
  for (; (s = r.next()) && !s.done; ) {
    const l = s.value;
    t.call(e, l[0], l[1]);
  }
}, M0 = (e, t) => {
  let n;
  const r = [];
  for (; (n = e.exec(t)) !== null; )
    r.push(n);
  return r;
}, q0 = Rr("HTMLFormElement"), $0 = (e) => e.toLowerCase().replace(
  /[-_\s]([a-z\d])(\w*)/g,
  function(n, r, s) {
    return r.toUpperCase() + s;
  }
), CE = (({ hasOwnProperty: e }) => (t, n) => e.call(t, n))(Object.prototype), k0 = Rr("RegExp"), XT = (e, t) => {
  const n = Object.getOwnPropertyDescriptors(e), r = {};
  gl(n, (s, l) => {
    let o;
    (o = t(s, l, e)) !== !1 && (r[l] = o || s);
  }), Object.defineProperties(e, r);
}, U0 = (e) => {
  XT(e, (t, n) => {
    if ($n(e) && ["arguments", "caller", "callee"].indexOf(n) !== -1)
      return !1;
    const r = e[n];
    if ($n(r)) {
      if (t.enumerable = !1, "writable" in t) {
        t.writable = !1;
        return;
      }
      t.set || (t.set = () => {
        throw Error("Can not rewrite read-only method '" + n + "'");
      });
    }
  });
}, H0 = (e, t) => {
  const n = {}, r = (s) => {
    s.forEach((l) => {
      n[l] = !0;
    });
  };
  return Si(e) ? r(e) : r(String(e).split(t)), n;
}, V0 = () => {
}, W0 = (e, t) => e != null && Number.isFinite(e = +e) ? e : t, ld = "abcdefghijklmnopqrstuvwxyz", NE = "0123456789", ZT = {
  DIGIT: NE,
  ALPHA: ld,
  ALPHA_DIGIT: ld + ld.toUpperCase() + NE
}, G0 = (e = 16, t = ZT.ALPHA_DIGIT) => {
  let n = "";
  const { length: r } = t;
  for (; e--; )
    n += t[Math.random() * r | 0];
  return n;
};
function K0(e) {
  return !!(e && $n(e.append) && e[Symbol.toStringTag] === "FormData" && e[Symbol.iterator]);
}
const j0 = (e) => {
  const t = new Array(10), n = (r, s) => {
    if (Ru(r)) {
      if (t.indexOf(r) >= 0)
        return;
      if (!("toJSON" in r)) {
        t[s] = r;
        const l = Si(r) ? [] : {};
        return gl(r, (o, u) => {
          const h = n(o, s + 1);
          !dl(h) && (l[u] = h);
        }), t[s] = void 0, l;
      }
    }
    return r;
  };
  return n(e, 0);
}, z0 = Rr("AsyncFunction"), Y0 = (e) => e && (Ru(e) || $n(e)) && $n(e.then) && $n(e.catch), JT = ((e, t) => e ? setImmediate : t ? ((n, r) => (Rs.addEventListener("message", ({ source: s, data: l }) => {
  s === Rs && l === n && r.length && r.shift()();
}, !1), (s) => {
  r.push(s), Rs.postMessage(n, "*");
}))(`axios@${Math.random()}`, []) : (n) => setTimeout(n))(
  typeof setImmediate == "function",
  $n(Rs.postMessage)
), X0 = typeof queueMicrotask < "u" ? queueMicrotask.bind(Rs) : typeof process < "u" && process.nextTick || JT, j = {
  isArray: Si,
  isArrayBuffer: KT,
  isBuffer: f0,
  isFormData: L0,
  isArrayBufferView: h0,
  isString: A0,
  isNumber: jT,
  isBoolean: E0,
  isObject: Ru,
  isPlainObject: xo,
  isReadableStream: v0,
  isRequest: y0,
  isResponse: g0,
  isHeaders: R0,
  isUndefined: dl,
  isDate: p0,
  isFile: T0,
  isBlob: m0,
  isRegExp: k0,
  isFunction: $n,
  isStream: b0,
  isURLSearchParams: I0,
  isTypedArray: x0,
  isFileList: S0,
  forEach: gl,
  merge: Fd,
  extend: C0,
  trim: O0,
  stripBOM: N0,
  inherits: D0,
  toFlatObject: B0,
  kindOf: yu,
  kindOfTest: Rr,
  endsWith: w0,
  toArray: P0,
  forEachEntry: F0,
  matchAll: M0,
  isHTMLForm: q0,
  hasOwnProperty: CE,
  hasOwnProp: CE,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors: XT,
  freezeMethods: U0,
  toObjectSet: H0,
  toCamelCase: $0,
  noop: V0,
  toFiniteNumber: W0,
  findKey: zT,
  global: Rs,
  isContextDefined: YT,
  ALPHABET: ZT,
  generateString: G0,
  isSpecCompliantForm: K0,
  toJSONObject: j0,
  isAsyncFn: z0,
  isThenable: Y0,
  setImmediate: JT,
  asap: X0
};
function ke(e, t, n, r, s) {
  Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = e, this.name = "AxiosError", t && (this.code = t), n && (this.config = n), r && (this.request = r), s && (this.response = s, this.status = s.status ? s.status : null);
}
j.inherits(ke, Error, {
  toJSON: function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: j.toJSONObject(this.config),
      code: this.code,
      status: this.status
    };
  }
});
const QT = ke.prototype, em = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
].forEach((e) => {
  em[e] = { value: e };
});
Object.defineProperties(ke, em);
Object.defineProperty(QT, "isAxiosError", { value: !0 });
ke.from = (e, t, n, r, s, l) => {
  const o = Object.create(QT);
  return j.toFlatObject(e, o, function(h) {
    return h !== Error.prototype;
  }, (u) => u !== "isAxiosError"), ke.call(o, e.message, t, n, r, s), o.cause = e, o.name = e.name, l && Object.assign(o, l), o;
};
const Z0 = null;
function Md(e) {
  return j.isPlainObject(e) || j.isArray(e);
}
function tm(e) {
  return j.endsWith(e, "[]") ? e.slice(0, -2) : e;
}
function DE(e, t, n) {
  return e ? e.concat(t).map(function(s, l) {
    return s = tm(s), !n && l ? "[" + s + "]" : s;
  }).join(n ? "." : "") : t;
}
function J0(e) {
  return j.isArray(e) && !e.some(Md);
}
const Q0 = j.toFlatObject(j, {}, null, function(t) {
  return /^is[A-Z]/.test(t);
});
function Ou(e, t, n) {
  if (!j.isObject(e))
    throw new TypeError("target must be an object");
  t = t || new FormData(), n = j.toFlatObject(n, {
    metaTokens: !0,
    dots: !1,
    indexes: !1
  }, !1, function(L, I) {
    return !j.isUndefined(I[L]);
  });
  const r = n.metaTokens, s = n.visitor || E, l = n.dots, o = n.indexes, h = (n.Blob || typeof Blob < "u" && Blob) && j.isSpecCompliantForm(t);
  if (!j.isFunction(s))
    throw new TypeError("visitor must be a function");
  function A(b) {
    if (b === null) return "";
    if (j.isDate(b))
      return b.toISOString();
    if (!h && j.isBlob(b))
      throw new ke("Blob is not supported. Use a Buffer instead.");
    return j.isArrayBuffer(b) || j.isTypedArray(b) ? h && typeof Blob == "function" ? new Blob([b]) : Buffer.from(b) : b;
  }
  function E(b, L, I) {
    let v = b;
    if (b && !I && typeof b == "object") {
      if (j.endsWith(L, "{}"))
        L = r ? L : L.slice(0, -2), b = JSON.stringify(b);
      else if (j.isArray(b) && J0(b) || (j.isFileList(b) || j.endsWith(L, "[]")) && (v = j.toArray(b)))
        return L = tm(L), v.forEach(function(g, D) {
          !(j.isUndefined(g) || g === null) && t.append(
            // eslint-disable-next-line no-nested-ternary
            o === !0 ? DE([L], D, l) : o === null ? L : L + "[]",
            A(g)
          );
        }), !1;
    }
    return Md(b) ? !0 : (t.append(DE(I, L, l), A(b)), !1);
  }
  const p = [], T = Object.assign(Q0, {
    defaultVisitor: E,
    convertValue: A,
    isVisitable: Md
  });
  function S(b, L) {
    if (!j.isUndefined(b)) {
      if (p.indexOf(b) !== -1)
        throw Error("Circular reference detected in " + L.join("."));
      p.push(b), j.forEach(b, function(v, R) {
        (!(j.isUndefined(v) || v === null) && s.call(
          t,
          v,
          j.isString(R) ? R.trim() : R,
          L,
          T
        )) === !0 && S(v, L ? L.concat(R) : [R]);
      }), p.pop();
    }
  }
  if (!j.isObject(e))
    throw new TypeError("data must be an object");
  return S(e), t;
}
function BE(e) {
  const t = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0"
  };
  return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function(r) {
    return t[r];
  });
}
function Kc(e, t) {
  this._pairs = [], e && Ou(e, this, t);
}
const nm = Kc.prototype;
nm.append = function(t, n) {
  this._pairs.push([t, n]);
};
nm.toString = function(t) {
  const n = t ? function(r) {
    return t.call(this, r, BE);
  } : BE;
  return this._pairs.map(function(s) {
    return n(s[0]) + "=" + n(s[1]);
  }, "").join("&");
};
function eM(e) {
  return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
function rm(e, t, n) {
  if (!t)
    return e;
  const r = n && n.encode || eM;
  j.isFunction(n) && (n = {
    serialize: n
  });
  const s = n && n.serialize;
  let l;
  if (s ? l = s(t, n) : l = j.isURLSearchParams(t) ? t.toString() : new Kc(t, n).toString(r), l) {
    const o = e.indexOf("#");
    o !== -1 && (e = e.slice(0, o)), e += (e.indexOf("?") === -1 ? "?" : "&") + l;
  }
  return e;
}
class wE {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(t, n, r) {
    return this.handlers.push({
      fulfilled: t,
      rejected: n,
      synchronous: r ? r.synchronous : !1,
      runWhen: r ? r.runWhen : null
    }), this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(t) {
    this.handlers[t] && (this.handlers[t] = null);
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    this.handlers && (this.handlers = []);
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(t) {
    j.forEach(this.handlers, function(r) {
      r !== null && t(r);
    });
  }
}
const am = {
  silentJSONParsing: !0,
  forcedJSONParsing: !0,
  clarifyTimeoutError: !1
}, tM = typeof URLSearchParams < "u" ? URLSearchParams : Kc, nM = typeof FormData < "u" ? FormData : null, rM = typeof Blob < "u" ? Blob : null, aM = {
  isBrowser: !0,
  classes: {
    URLSearchParams: tM,
    FormData: nM,
    Blob: rM
  },
  protocols: ["http", "https", "file", "blob", "url", "data"]
}, jc = typeof window < "u" && typeof document < "u", qd = typeof navigator == "object" && navigator || void 0, sM = jc && (!qd || ["ReactNative", "NativeScript", "NS"].indexOf(qd.product) < 0), iM = typeof WorkerGlobalScope < "u" && // eslint-disable-next-line no-undef
self instanceof WorkerGlobalScope && typeof self.importScripts == "function", lM = jc && window.location.href || "http://localhost", oM = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hasBrowserEnv: jc,
  hasStandardBrowserEnv: sM,
  hasStandardBrowserWebWorkerEnv: iM,
  navigator: qd,
  origin: lM
}, Symbol.toStringTag, { value: "Module" })), rn = {
  ...oM,
  ...aM
};
function uM(e, t) {
  return Ou(e, new rn.classes.URLSearchParams(), Object.assign({
    visitor: function(n, r, s, l) {
      return rn.isNode && j.isBuffer(n) ? (this.append(r, n.toString("base64")), !1) : l.defaultVisitor.apply(this, arguments);
    }
  }, t));
}
function _M(e) {
  return j.matchAll(/\w+|\[(\w*)]/g, e).map((t) => t[0] === "[]" ? "" : t[1] || t[0]);
}
function dM(e) {
  const t = {}, n = Object.keys(e);
  let r;
  const s = n.length;
  let l;
  for (r = 0; r < s; r++)
    l = n[r], t[l] = e[l];
  return t;
}
function sm(e) {
  function t(n, r, s, l) {
    let o = n[l++];
    if (o === "__proto__") return !0;
    const u = Number.isFinite(+o), h = l >= n.length;
    return o = !o && j.isArray(s) ? s.length : o, h ? (j.hasOwnProp(s, o) ? s[o] = [s[o], r] : s[o] = r, !u) : ((!s[o] || !j.isObject(s[o])) && (s[o] = []), t(n, r, s[o], l) && j.isArray(s[o]) && (s[o] = dM(s[o])), !u);
  }
  if (j.isFormData(e) && j.isFunction(e.entries)) {
    const n = {};
    return j.forEachEntry(e, (r, s) => {
      t(_M(r), s, n, 0);
    }), n;
  }
  return null;
}
function cM(e, t, n) {
  if (j.isString(e))
    try {
      return (t || JSON.parse)(e), j.trim(e);
    } catch (r) {
      if (r.name !== "SyntaxError")
        throw r;
    }
  return (0, JSON.stringify)(e);
}
const Rl = {
  transitional: am,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [function(t, n) {
    const r = n.getContentType() || "", s = r.indexOf("application/json") > -1, l = j.isObject(t);
    if (l && j.isHTMLForm(t) && (t = new FormData(t)), j.isFormData(t))
      return s ? JSON.stringify(sm(t)) : t;
    if (j.isArrayBuffer(t) || j.isBuffer(t) || j.isStream(t) || j.isFile(t) || j.isBlob(t) || j.isReadableStream(t))
      return t;
    if (j.isArrayBufferView(t))
      return t.buffer;
    if (j.isURLSearchParams(t))
      return n.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1), t.toString();
    let u;
    if (l) {
      if (r.indexOf("application/x-www-form-urlencoded") > -1)
        return uM(t, this.formSerializer).toString();
      if ((u = j.isFileList(t)) || r.indexOf("multipart/form-data") > -1) {
        const h = this.env && this.env.FormData;
        return Ou(
          u ? { "files[]": t } : t,
          h && new h(),
          this.formSerializer
        );
      }
    }
    return l || s ? (n.setContentType("application/json", !1), cM(t)) : t;
  }],
  transformResponse: [function(t) {
    const n = this.transitional || Rl.transitional, r = n && n.forcedJSONParsing, s = this.responseType === "json";
    if (j.isResponse(t) || j.isReadableStream(t))
      return t;
    if (t && j.isString(t) && (r && !this.responseType || s)) {
      const o = !(n && n.silentJSONParsing) && s;
      try {
        return JSON.parse(t);
      } catch (u) {
        if (o)
          throw u.name === "SyntaxError" ? ke.from(u, ke.ERR_BAD_RESPONSE, this, null, this.response) : u;
      }
    }
    return t;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: rn.classes.FormData,
    Blob: rn.classes.Blob
  },
  validateStatus: function(t) {
    return t >= 200 && t < 300;
  },
  headers: {
    common: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": void 0
    }
  }
};
j.forEach(["delete", "get", "head", "post", "put", "patch"], (e) => {
  Rl.headers[e] = {};
});
const fM = j.toObjectSet([
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
]), hM = (e) => {
  const t = {};
  let n, r, s;
  return e && e.split(`
`).forEach(function(o) {
    s = o.indexOf(":"), n = o.substring(0, s).trim().toLowerCase(), r = o.substring(s + 1).trim(), !(!n || t[n] && fM[n]) && (n === "set-cookie" ? t[n] ? t[n].push(r) : t[n] = [r] : t[n] = t[n] ? t[n] + ", " + r : r);
  }), t;
}, PE = Symbol("internals");
function ji(e) {
  return e && String(e).trim().toLowerCase();
}
function Fo(e) {
  return e === !1 || e == null ? e : j.isArray(e) ? e.map(Fo) : String(e);
}
function AM(e) {
  const t = /* @__PURE__ */ Object.create(null), n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let r;
  for (; r = n.exec(e); )
    t[r[1]] = r[2];
  return t;
}
const EM = (e) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());
function od(e, t, n, r, s) {
  if (j.isFunction(r))
    return r.call(this, t, n);
  if (s && (t = n), !!j.isString(t)) {
    if (j.isString(r))
      return t.indexOf(r) !== -1;
    if (j.isRegExp(r))
      return r.test(t);
  }
}
function pM(e) {
  return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (t, n, r) => n.toUpperCase() + r);
}
function TM(e, t) {
  const n = j.toCamelCase(" " + t);
  ["get", "set", "has"].forEach((r) => {
    Object.defineProperty(e, r + n, {
      value: function(s, l, o) {
        return this[r].call(this, t, s, l, o);
      },
      configurable: !0
    });
  });
}
class vn {
  constructor(t) {
    t && this.set(t);
  }
  set(t, n, r) {
    const s = this;
    function l(u, h, A) {
      const E = ji(h);
      if (!E)
        throw new Error("header name must be a non-empty string");
      const p = j.findKey(s, E);
      (!p || s[p] === void 0 || A === !0 || A === void 0 && s[p] !== !1) && (s[p || h] = Fo(u));
    }
    const o = (u, h) => j.forEach(u, (A, E) => l(A, E, h));
    if (j.isPlainObject(t) || t instanceof this.constructor)
      o(t, n);
    else if (j.isString(t) && (t = t.trim()) && !EM(t))
      o(hM(t), n);
    else if (j.isHeaders(t))
      for (const [u, h] of t.entries())
        l(h, u, r);
    else
      t != null && l(n, t, r);
    return this;
  }
  get(t, n) {
    if (t = ji(t), t) {
      const r = j.findKey(this, t);
      if (r) {
        const s = this[r];
        if (!n)
          return s;
        if (n === !0)
          return AM(s);
        if (j.isFunction(n))
          return n.call(this, s, r);
        if (j.isRegExp(n))
          return n.exec(s);
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(t, n) {
    if (t = ji(t), t) {
      const r = j.findKey(this, t);
      return !!(r && this[r] !== void 0 && (!n || od(this, this[r], r, n)));
    }
    return !1;
  }
  delete(t, n) {
    const r = this;
    let s = !1;
    function l(o) {
      if (o = ji(o), o) {
        const u = j.findKey(r, o);
        u && (!n || od(r, r[u], u, n)) && (delete r[u], s = !0);
      }
    }
    return j.isArray(t) ? t.forEach(l) : l(t), s;
  }
  clear(t) {
    const n = Object.keys(this);
    let r = n.length, s = !1;
    for (; r--; ) {
      const l = n[r];
      (!t || od(this, this[l], l, t, !0)) && (delete this[l], s = !0);
    }
    return s;
  }
  normalize(t) {
    const n = this, r = {};
    return j.forEach(this, (s, l) => {
      const o = j.findKey(r, l);
      if (o) {
        n[o] = Fo(s), delete n[l];
        return;
      }
      const u = t ? pM(l) : String(l).trim();
      u !== l && delete n[l], n[u] = Fo(s), r[u] = !0;
    }), this;
  }
  concat(...t) {
    return this.constructor.concat(this, ...t);
  }
  toJSON(t) {
    const n = /* @__PURE__ */ Object.create(null);
    return j.forEach(this, (r, s) => {
      r != null && r !== !1 && (n[s] = t && j.isArray(r) ? r.join(", ") : r);
    }), n;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([t, n]) => t + ": " + n).join(`
`);
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(t) {
    return t instanceof this ? t : new this(t);
  }
  static concat(t, ...n) {
    const r = new this(t);
    return n.forEach((s) => r.set(s)), r;
  }
  static accessor(t) {
    const r = (this[PE] = this[PE] = {
      accessors: {}
    }).accessors, s = this.prototype;
    function l(o) {
      const u = ji(o);
      r[u] || (TM(s, o), r[u] = !0);
    }
    return j.isArray(t) ? t.forEach(l) : l(t), this;
  }
}
vn.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
j.reduceDescriptors(vn.prototype, ({ value: e }, t) => {
  let n = t[0].toUpperCase() + t.slice(1);
  return {
    get: () => e,
    set(r) {
      this[n] = r;
    }
  };
});
j.freezeMethods(vn);
function ud(e, t) {
  const n = this || Rl, r = t || n, s = vn.from(r.headers);
  let l = r.data;
  return j.forEach(e, function(u) {
    l = u.call(n, l, s.normalize(), t ? t.status : void 0);
  }), s.normalize(), l;
}
function im(e) {
  return !!(e && e.__CANCEL__);
}
function bi(e, t, n) {
  ke.call(this, e ?? "canceled", ke.ERR_CANCELED, t, n), this.name = "CanceledError";
}
j.inherits(bi, ke, {
  __CANCEL__: !0
});
function lm(e, t, n) {
  const r = n.config.validateStatus;
  !n.status || !r || r(n.status) ? e(n) : t(new ke(
    "Request failed with status code " + n.status,
    [ke.ERR_BAD_REQUEST, ke.ERR_BAD_RESPONSE][Math.floor(n.status / 100) - 4],
    n.config,
    n.request,
    n
  ));
}
function mM(e) {
  const t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
  return t && t[1] || "";
}
function SM(e, t) {
  e = e || 10;
  const n = new Array(e), r = new Array(e);
  let s = 0, l = 0, o;
  return t = t !== void 0 ? t : 1e3, function(h) {
    const A = Date.now(), E = r[l];
    o || (o = A), n[s] = h, r[s] = A;
    let p = l, T = 0;
    for (; p !== s; )
      T += n[p++], p = p % e;
    if (s = (s + 1) % e, s === l && (l = (l + 1) % e), A - o < t)
      return;
    const S = E && A - E;
    return S ? Math.round(T * 1e3 / S) : void 0;
  };
}
function bM(e, t) {
  let n = 0, r = 1e3 / t, s, l;
  const o = (A, E = Date.now()) => {
    n = E, s = null, l && (clearTimeout(l), l = null), e.apply(null, A);
  };
  return [(...A) => {
    const E = Date.now(), p = E - n;
    p >= r ? o(A, E) : (s = A, l || (l = setTimeout(() => {
      l = null, o(s);
    }, r - p)));
  }, () => s && o(s)];
}
const eu = (e, t, n = 3) => {
  let r = 0;
  const s = SM(50, 250);
  return bM((l) => {
    const o = l.loaded, u = l.lengthComputable ? l.total : void 0, h = o - r, A = s(h), E = o <= u;
    r = o;
    const p = {
      loaded: o,
      total: u,
      progress: u ? o / u : void 0,
      bytes: h,
      rate: A || void 0,
      estimated: A && u && E ? (u - o) / A : void 0,
      event: l,
      lengthComputable: u != null,
      [t ? "download" : "upload"]: !0
    };
    e(p);
  }, n);
}, xE = (e, t) => {
  const n = e != null;
  return [(r) => t[0]({
    lengthComputable: n,
    total: e,
    loaded: r
  }), t[1]];
}, FE = (e) => (...t) => j.asap(() => e(...t)), LM = rn.hasStandardBrowserEnv ? /* @__PURE__ */ ((e, t) => (n) => (n = new URL(n, rn.origin), e.protocol === n.protocol && e.host === n.host && (t || e.port === n.port)))(
  new URL(rn.origin),
  rn.navigator && /(msie|trident)/i.test(rn.navigator.userAgent)
) : () => !0, IM = rn.hasStandardBrowserEnv ? (
  // Standard browser envs support document.cookie
  {
    write(e, t, n, r, s, l) {
      const o = [e + "=" + encodeURIComponent(t)];
      j.isNumber(n) && o.push("expires=" + new Date(n).toGMTString()), j.isString(r) && o.push("path=" + r), j.isString(s) && o.push("domain=" + s), l === !0 && o.push("secure"), document.cookie = o.join("; ");
    },
    read(e) {
      const t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
      return t ? decodeURIComponent(t[3]) : null;
    },
    remove(e) {
      this.write(e, "", Date.now() - 864e5);
    }
  }
) : (
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {
    },
    read() {
      return null;
    },
    remove() {
    }
  }
);
function vM(e) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e);
}
function yM(e, t) {
  return t ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "") : e;
}
function om(e, t) {
  return e && !vM(t) ? yM(e, t) : t;
}
const ME = (e) => e instanceof vn ? { ...e } : e;
function ws(e, t) {
  t = t || {};
  const n = {};
  function r(A, E, p, T) {
    return j.isPlainObject(A) && j.isPlainObject(E) ? j.merge.call({ caseless: T }, A, E) : j.isPlainObject(E) ? j.merge({}, E) : j.isArray(E) ? E.slice() : E;
  }
  function s(A, E, p, T) {
    if (j.isUndefined(E)) {
      if (!j.isUndefined(A))
        return r(void 0, A, p, T);
    } else return r(A, E, p, T);
  }
  function l(A, E) {
    if (!j.isUndefined(E))
      return r(void 0, E);
  }
  function o(A, E) {
    if (j.isUndefined(E)) {
      if (!j.isUndefined(A))
        return r(void 0, A);
    } else return r(void 0, E);
  }
  function u(A, E, p) {
    if (p in t)
      return r(A, E);
    if (p in e)
      return r(void 0, A);
  }
  const h = {
    url: l,
    method: l,
    data: l,
    baseURL: o,
    transformRequest: o,
    transformResponse: o,
    paramsSerializer: o,
    timeout: o,
    timeoutMessage: o,
    withCredentials: o,
    withXSRFToken: o,
    adapter: o,
    responseType: o,
    xsrfCookieName: o,
    xsrfHeaderName: o,
    onUploadProgress: o,
    onDownloadProgress: o,
    decompress: o,
    maxContentLength: o,
    maxBodyLength: o,
    beforeRedirect: o,
    transport: o,
    httpAgent: o,
    httpsAgent: o,
    cancelToken: o,
    socketPath: o,
    responseEncoding: o,
    validateStatus: u,
    headers: (A, E, p) => s(ME(A), ME(E), p, !0)
  };
  return j.forEach(Object.keys(Object.assign({}, e, t)), function(E) {
    const p = h[E] || s, T = p(e[E], t[E], E);
    j.isUndefined(T) && p !== u || (n[E] = T);
  }), n;
}
const um = (e) => {
  const t = ws({}, e);
  let { data: n, withXSRFToken: r, xsrfHeaderName: s, xsrfCookieName: l, headers: o, auth: u } = t;
  t.headers = o = vn.from(o), t.url = rm(om(t.baseURL, t.url), e.params, e.paramsSerializer), u && o.set(
    "Authorization",
    "Basic " + btoa((u.username || "") + ":" + (u.password ? unescape(encodeURIComponent(u.password)) : ""))
  );
  let h;
  if (j.isFormData(n)) {
    if (rn.hasStandardBrowserEnv || rn.hasStandardBrowserWebWorkerEnv)
      o.setContentType(void 0);
    else if ((h = o.getContentType()) !== !1) {
      const [A, ...E] = h ? h.split(";").map((p) => p.trim()).filter(Boolean) : [];
      o.setContentType([A || "multipart/form-data", ...E].join("; "));
    }
  }
  if (rn.hasStandardBrowserEnv && (r && j.isFunction(r) && (r = r(t)), r || r !== !1 && LM(t.url))) {
    const A = s && l && IM.read(l);
    A && o.set(s, A);
  }
  return t;
}, gM = typeof XMLHttpRequest < "u", RM = gM && function(e) {
  return new Promise(function(n, r) {
    const s = um(e);
    let l = s.data;
    const o = vn.from(s.headers).normalize();
    let { responseType: u, onUploadProgress: h, onDownloadProgress: A } = s, E, p, T, S, b;
    function L() {
      S && S(), b && b(), s.cancelToken && s.cancelToken.unsubscribe(E), s.signal && s.signal.removeEventListener("abort", E);
    }
    let I = new XMLHttpRequest();
    I.open(s.method.toUpperCase(), s.url, !0), I.timeout = s.timeout;
    function v() {
      if (!I)
        return;
      const g = vn.from(
        "getAllResponseHeaders" in I && I.getAllResponseHeaders()
      ), w = {
        data: !u || u === "text" || u === "json" ? I.responseText : I.response,
        status: I.status,
        statusText: I.statusText,
        headers: g,
        config: e,
        request: I
      };
      lm(function(P) {
        n(P), L();
      }, function(P) {
        r(P), L();
      }, w), I = null;
    }
    "onloadend" in I ? I.onloadend = v : I.onreadystatechange = function() {
      !I || I.readyState !== 4 || I.status === 0 && !(I.responseURL && I.responseURL.indexOf("file:") === 0) || setTimeout(v);
    }, I.onabort = function() {
      I && (r(new ke("Request aborted", ke.ECONNABORTED, e, I)), I = null);
    }, I.onerror = function() {
      r(new ke("Network Error", ke.ERR_NETWORK, e, I)), I = null;
    }, I.ontimeout = function() {
      let D = s.timeout ? "timeout of " + s.timeout + "ms exceeded" : "timeout exceeded";
      const w = s.transitional || am;
      s.timeoutErrorMessage && (D = s.timeoutErrorMessage), r(new ke(
        D,
        w.clarifyTimeoutError ? ke.ETIMEDOUT : ke.ECONNABORTED,
        e,
        I
      )), I = null;
    }, l === void 0 && o.setContentType(null), "setRequestHeader" in I && j.forEach(o.toJSON(), function(D, w) {
      I.setRequestHeader(w, D);
    }), j.isUndefined(s.withCredentials) || (I.withCredentials = !!s.withCredentials), u && u !== "json" && (I.responseType = s.responseType), A && ([T, b] = eu(A, !0), I.addEventListener("progress", T)), h && I.upload && ([p, S] = eu(h), I.upload.addEventListener("progress", p), I.upload.addEventListener("loadend", S)), (s.cancelToken || s.signal) && (E = (g) => {
      I && (r(!g || g.type ? new bi(null, e, I) : g), I.abort(), I = null);
    }, s.cancelToken && s.cancelToken.subscribe(E), s.signal && (s.signal.aborted ? E() : s.signal.addEventListener("abort", E)));
    const R = mM(s.url);
    if (R && rn.protocols.indexOf(R) === -1) {
      r(new ke("Unsupported protocol " + R + ":", ke.ERR_BAD_REQUEST, e));
      return;
    }
    I.send(l || null);
  });
}, OM = (e, t) => {
  const { length: n } = e = e ? e.filter(Boolean) : [];
  if (t || n) {
    let r = new AbortController(), s;
    const l = function(A) {
      if (!s) {
        s = !0, u();
        const E = A instanceof Error ? A : this.reason;
        r.abort(E instanceof ke ? E : new bi(E instanceof Error ? E.message : E));
      }
    };
    let o = t && setTimeout(() => {
      o = null, l(new ke(`timeout ${t} of ms exceeded`, ke.ETIMEDOUT));
    }, t);
    const u = () => {
      e && (o && clearTimeout(o), o = null, e.forEach((A) => {
        A.unsubscribe ? A.unsubscribe(l) : A.removeEventListener("abort", l);
      }), e = null);
    };
    e.forEach((A) => A.addEventListener("abort", l));
    const { signal: h } = r;
    return h.unsubscribe = () => j.asap(u), h;
  }
}, CM = function* (e, t) {
  let n = e.byteLength;
  if (n < t) {
    yield e;
    return;
  }
  let r = 0, s;
  for (; r < n; )
    s = r + t, yield e.slice(r, s), r = s;
}, NM = async function* (e, t) {
  for await (const n of DM(e))
    yield* CM(n, t);
}, DM = async function* (e) {
  if (e[Symbol.asyncIterator]) {
    yield* e;
    return;
  }
  const t = e.getReader();
  try {
    for (; ; ) {
      const { done: n, value: r } = await t.read();
      if (n)
        break;
      yield r;
    }
  } finally {
    await t.cancel();
  }
}, qE = (e, t, n, r) => {
  const s = NM(e, t);
  let l = 0, o, u = (h) => {
    o || (o = !0, r && r(h));
  };
  return new ReadableStream({
    async pull(h) {
      try {
        const { done: A, value: E } = await s.next();
        if (A) {
          u(), h.close();
          return;
        }
        let p = E.byteLength;
        if (n) {
          let T = l += p;
          n(T);
        }
        h.enqueue(new Uint8Array(E));
      } catch (A) {
        throw u(A), A;
      }
    },
    cancel(h) {
      return u(h), s.return();
    }
  }, {
    highWaterMark: 2
  });
}, Cu = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", _m = Cu && typeof ReadableStream == "function", BM = Cu && (typeof TextEncoder == "function" ? /* @__PURE__ */ ((e) => (t) => e.encode(t))(new TextEncoder()) : async (e) => new Uint8Array(await new Response(e).arrayBuffer())), dm = (e, ...t) => {
  try {
    return !!e(...t);
  } catch {
    return !1;
  }
}, wM = _m && dm(() => {
  let e = !1;
  const t = new Request(rn.origin, {
    body: new ReadableStream(),
    method: "POST",
    get duplex() {
      return e = !0, "half";
    }
  }).headers.has("Content-Type");
  return e && !t;
}), $E = 64 * 1024, $d = _m && dm(() => j.isReadableStream(new Response("").body)), tu = {
  stream: $d && ((e) => e.body)
};
Cu && ((e) => {
  ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((t) => {
    !tu[t] && (tu[t] = j.isFunction(e[t]) ? (n) => n[t]() : (n, r) => {
      throw new ke(`Response type '${t}' is not supported`, ke.ERR_NOT_SUPPORT, r);
    });
  });
})(new Response());
const PM = async (e) => {
  if (e == null)
    return 0;
  if (j.isBlob(e))
    return e.size;
  if (j.isSpecCompliantForm(e))
    return (await new Request(rn.origin, {
      method: "POST",
      body: e
    }).arrayBuffer()).byteLength;
  if (j.isArrayBufferView(e) || j.isArrayBuffer(e))
    return e.byteLength;
  if (j.isURLSearchParams(e) && (e = e + ""), j.isString(e))
    return (await BM(e)).byteLength;
}, xM = async (e, t) => {
  const n = j.toFiniteNumber(e.getContentLength());
  return n ?? PM(t);
}, FM = Cu && (async (e) => {
  let {
    url: t,
    method: n,
    data: r,
    signal: s,
    cancelToken: l,
    timeout: o,
    onDownloadProgress: u,
    onUploadProgress: h,
    responseType: A,
    headers: E,
    withCredentials: p = "same-origin",
    fetchOptions: T
  } = um(e);
  A = A ? (A + "").toLowerCase() : "text";
  let S = OM([s, l && l.toAbortSignal()], o), b;
  const L = S && S.unsubscribe && (() => {
    S.unsubscribe();
  });
  let I;
  try {
    if (h && wM && n !== "get" && n !== "head" && (I = await xM(E, r)) !== 0) {
      let w = new Request(t, {
        method: "POST",
        body: r,
        duplex: "half"
      }), M;
      if (j.isFormData(r) && (M = w.headers.get("content-type")) && E.setContentType(M), w.body) {
        const [P, F] = xE(
          I,
          eu(FE(h))
        );
        r = qE(w.body, $E, P, F);
      }
    }
    j.isString(p) || (p = p ? "include" : "omit");
    const v = "credentials" in Request.prototype;
    b = new Request(t, {
      ...T,
      signal: S,
      method: n.toUpperCase(),
      headers: E.normalize().toJSON(),
      body: r,
      duplex: "half",
      credentials: v ? p : void 0
    });
    let R = await fetch(b);
    const g = $d && (A === "stream" || A === "response");
    if ($d && (u || g && L)) {
      const w = {};
      ["status", "statusText", "headers"].forEach((C) => {
        w[C] = R[C];
      });
      const M = j.toFiniteNumber(R.headers.get("content-length")), [P, F] = u && xE(
        M,
        eu(FE(u), !0)
      ) || [];
      R = new Response(
        qE(R.body, $E, P, () => {
          F && F(), L && L();
        }),
        w
      );
    }
    A = A || "text";
    let D = await tu[j.findKey(tu, A) || "text"](R, e);
    return !g && L && L(), await new Promise((w, M) => {
      lm(w, M, {
        data: D,
        headers: vn.from(R.headers),
        status: R.status,
        statusText: R.statusText,
        config: e,
        request: b
      });
    });
  } catch (v) {
    throw L && L(), v && v.name === "TypeError" && /fetch/i.test(v.message) ? Object.assign(
      new ke("Network Error", ke.ERR_NETWORK, e, b),
      {
        cause: v.cause || v
      }
    ) : ke.from(v, v && v.code, e, b);
  }
}), kd = {
  http: Z0,
  xhr: RM,
  fetch: FM
};
j.forEach(kd, (e, t) => {
  if (e) {
    try {
      Object.defineProperty(e, "name", { value: t });
    } catch {
    }
    Object.defineProperty(e, "adapterName", { value: t });
  }
});
const kE = (e) => `- ${e}`, MM = (e) => j.isFunction(e) || e === null || e === !1, cm = {
  getAdapter: (e) => {
    e = j.isArray(e) ? e : [e];
    const { length: t } = e;
    let n, r;
    const s = {};
    for (let l = 0; l < t; l++) {
      n = e[l];
      let o;
      if (r = n, !MM(n) && (r = kd[(o = String(n)).toLowerCase()], r === void 0))
        throw new ke(`Unknown adapter '${o}'`);
      if (r)
        break;
      s[o || "#" + l] = r;
    }
    if (!r) {
      const l = Object.entries(s).map(
        ([u, h]) => `adapter ${u} ` + (h === !1 ? "is not supported by the environment" : "is not available in the build")
      );
      let o = t ? l.length > 1 ? `since :
` + l.map(kE).join(`
`) : " " + kE(l[0]) : "as no adapter specified";
      throw new ke(
        "There is no suitable adapter to dispatch the request " + o,
        "ERR_NOT_SUPPORT"
      );
    }
    return r;
  },
  adapters: kd
};
function _d(e) {
  if (e.cancelToken && e.cancelToken.throwIfRequested(), e.signal && e.signal.aborted)
    throw new bi(null, e);
}
function UE(e) {
  return _d(e), e.headers = vn.from(e.headers), e.data = ud.call(
    e,
    e.transformRequest
  ), ["post", "put", "patch"].indexOf(e.method) !== -1 && e.headers.setContentType("application/x-www-form-urlencoded", !1), cm.getAdapter(e.adapter || Rl.adapter)(e).then(function(r) {
    return _d(e), r.data = ud.call(
      e,
      e.transformResponse,
      r
    ), r.headers = vn.from(r.headers), r;
  }, function(r) {
    return im(r) || (_d(e), r && r.response && (r.response.data = ud.call(
      e,
      e.transformResponse,
      r.response
    ), r.response.headers = vn.from(r.response.headers))), Promise.reject(r);
  });
}
const fm = "1.7.9", Nu = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((e, t) => {
  Nu[e] = function(r) {
    return typeof r === e || "a" + (t < 1 ? "n " : " ") + e;
  };
});
const HE = {};
Nu.transitional = function(t, n, r) {
  function s(l, o) {
    return "[Axios v" + fm + "] Transitional option '" + l + "'" + o + (r ? ". " + r : "");
  }
  return (l, o, u) => {
    if (t === !1)
      throw new ke(
        s(o, " has been removed" + (n ? " in " + n : "")),
        ke.ERR_DEPRECATED
      );
    return n && !HE[o] && (HE[o] = !0, console.warn(
      s(
        o,
        " has been deprecated since v" + n + " and will be removed in the near future"
      )
    )), t ? t(l, o, u) : !0;
  };
};
Nu.spelling = function(t) {
  return (n, r) => (console.warn(`${r} is likely a misspelling of ${t}`), !0);
};
function qM(e, t, n) {
  if (typeof e != "object")
    throw new ke("options must be an object", ke.ERR_BAD_OPTION_VALUE);
  const r = Object.keys(e);
  let s = r.length;
  for (; s-- > 0; ) {
    const l = r[s], o = t[l];
    if (o) {
      const u = e[l], h = u === void 0 || o(u, l, e);
      if (h !== !0)
        throw new ke("option " + l + " must be " + h, ke.ERR_BAD_OPTION_VALUE);
      continue;
    }
    if (n !== !0)
      throw new ke("Unknown option " + l, ke.ERR_BAD_OPTION);
  }
}
const Mo = {
  assertOptions: qM,
  validators: Nu
}, xr = Mo.validators;
class Cs {
  constructor(t) {
    this.defaults = t, this.interceptors = {
      request: new wE(),
      response: new wE()
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(t, n) {
    try {
      return await this._request(t, n);
    } catch (r) {
      if (r instanceof Error) {
        let s = {};
        Error.captureStackTrace ? Error.captureStackTrace(s) : s = new Error();
        const l = s.stack ? s.stack.replace(/^.+\n/, "") : "";
        try {
          r.stack ? l && !String(r.stack).endsWith(l.replace(/^.+\n.+\n/, "")) && (r.stack += `
` + l) : r.stack = l;
        } catch {
        }
      }
      throw r;
    }
  }
  _request(t, n) {
    typeof t == "string" ? (n = n || {}, n.url = t) : n = t || {}, n = ws(this.defaults, n);
    const { transitional: r, paramsSerializer: s, headers: l } = n;
    r !== void 0 && Mo.assertOptions(r, {
      silentJSONParsing: xr.transitional(xr.boolean),
      forcedJSONParsing: xr.transitional(xr.boolean),
      clarifyTimeoutError: xr.transitional(xr.boolean)
    }, !1), s != null && (j.isFunction(s) ? n.paramsSerializer = {
      serialize: s
    } : Mo.assertOptions(s, {
      encode: xr.function,
      serialize: xr.function
    }, !0)), Mo.assertOptions(n, {
      baseUrl: xr.spelling("baseURL"),
      withXsrfToken: xr.spelling("withXSRFToken")
    }, !0), n.method = (n.method || this.defaults.method || "get").toLowerCase();
    let o = l && j.merge(
      l.common,
      l[n.method]
    );
    l && j.forEach(
      ["delete", "get", "head", "post", "put", "patch", "common"],
      (b) => {
        delete l[b];
      }
    ), n.headers = vn.concat(o, l);
    const u = [];
    let h = !0;
    this.interceptors.request.forEach(function(L) {
      typeof L.runWhen == "function" && L.runWhen(n) === !1 || (h = h && L.synchronous, u.unshift(L.fulfilled, L.rejected));
    });
    const A = [];
    this.interceptors.response.forEach(function(L) {
      A.push(L.fulfilled, L.rejected);
    });
    let E, p = 0, T;
    if (!h) {
      const b = [UE.bind(this), void 0];
      for (b.unshift.apply(b, u), b.push.apply(b, A), T = b.length, E = Promise.resolve(n); p < T; )
        E = E.then(b[p++], b[p++]);
      return E;
    }
    T = u.length;
    let S = n;
    for (p = 0; p < T; ) {
      const b = u[p++], L = u[p++];
      try {
        S = b(S);
      } catch (I) {
        L.call(this, I);
        break;
      }
    }
    try {
      E = UE.call(this, S);
    } catch (b) {
      return Promise.reject(b);
    }
    for (p = 0, T = A.length; p < T; )
      E = E.then(A[p++], A[p++]);
    return E;
  }
  getUri(t) {
    t = ws(this.defaults, t);
    const n = om(t.baseURL, t.url);
    return rm(n, t.params, t.paramsSerializer);
  }
}
j.forEach(["delete", "get", "head", "options"], function(t) {
  Cs.prototype[t] = function(n, r) {
    return this.request(ws(r || {}, {
      method: t,
      url: n,
      data: (r || {}).data
    }));
  };
});
j.forEach(["post", "put", "patch"], function(t) {
  function n(r) {
    return function(l, o, u) {
      return this.request(ws(u || {}, {
        method: t,
        headers: r ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url: l,
        data: o
      }));
    };
  }
  Cs.prototype[t] = n(), Cs.prototype[t + "Form"] = n(!0);
});
class zc {
  constructor(t) {
    if (typeof t != "function")
      throw new TypeError("executor must be a function.");
    let n;
    this.promise = new Promise(function(l) {
      n = l;
    });
    const r = this;
    this.promise.then((s) => {
      if (!r._listeners) return;
      let l = r._listeners.length;
      for (; l-- > 0; )
        r._listeners[l](s);
      r._listeners = null;
    }), this.promise.then = (s) => {
      let l;
      const o = new Promise((u) => {
        r.subscribe(u), l = u;
      }).then(s);
      return o.cancel = function() {
        r.unsubscribe(l);
      }, o;
    }, t(function(l, o, u) {
      r.reason || (r.reason = new bi(l, o, u), n(r.reason));
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason)
      throw this.reason;
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(t) {
    if (this.reason) {
      t(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(t) : this._listeners = [t];
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(t) {
    if (!this._listeners)
      return;
    const n = this._listeners.indexOf(t);
    n !== -1 && this._listeners.splice(n, 1);
  }
  toAbortSignal() {
    const t = new AbortController(), n = (r) => {
      t.abort(r);
    };
    return this.subscribe(n), t.signal.unsubscribe = () => this.unsubscribe(n), t.signal;
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let t;
    return {
      token: new zc(function(s) {
        t = s;
      }),
      cancel: t
    };
  }
}
function $M(e) {
  return function(n) {
    return e.apply(null, n);
  };
}
function kM(e) {
  return j.isObject(e) && e.isAxiosError === !0;
}
const Ud = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(Ud).forEach(([e, t]) => {
  Ud[t] = e;
});
function hm(e) {
  const t = new Cs(e), n = GT(Cs.prototype.request, t);
  return j.extend(n, Cs.prototype, t, { allOwnKeys: !0 }), j.extend(n, t, null, { allOwnKeys: !0 }), n.create = function(s) {
    return hm(ws(e, s));
  }, n;
}
const xt = hm(Rl);
xt.Axios = Cs;
xt.CanceledError = bi;
xt.CancelToken = zc;
xt.isCancel = im;
xt.VERSION = fm;
xt.toFormData = Ou;
xt.AxiosError = ke;
xt.Cancel = xt.CanceledError;
xt.all = function(t) {
  return Promise.all(t);
};
xt.spread = $M;
xt.isAxiosError = kM;
xt.mergeConfig = ws;
xt.AxiosHeaders = vn;
xt.formToJSON = (e) => sm(j.isHTMLForm(e) ? new FormData(e) : e);
xt.getAdapter = cm.getAdapter;
xt.HttpStatusCode = Ud;
xt.default = xt;
const Am = B("/api/"), qo = B(xt.create()), sr = B({}), $o = B({}), Em = B({}), Fr = {}, Ir = {}, pm = B({
  setUrlForArray: a1
});
function UM({ axiosCreateOptions: e = {} }) {
  qo.value = xt.create(e);
}
function HM({ baseUrl: e = "" }) {
  Am.value = e;
}
function VM({ errorCallbacks: e = {} }) {
  $o.value = e;
}
function WM({ headerParams: e = {} } = {}) {
  Em.value = e;
}
function GM({
  all: e = !1,
  abortGroup: t,
  excludeAbortGroup: n
}) {
  const r = l1({ excludeAbortGroup: n });
  if (e)
    z(Fr, (s, l) => {
      r[l] || (s.abort(), delete Fr[l], Ir[t] && delete Ir[t]);
    });
  else if (t) {
    let s = [];
    it(t) ? s.push(t) : Te(t) && (s = t), z(s, (l) => {
      r[l] || Fr[l] && (Fr[l].abort(), delete Fr[l], Ir[t] && delete Ir[t]);
    });
  }
}
function KM() {
  sr.value = {};
}
function jM({ apiSaveId: e }) {
  e in sr.value && delete sr.value[e];
}
function zM() {
  return {
    abortHttp: GM,
    clearAllApiSaved: KM,
    clearApiSaved: jM,
    deleteHttp: t1,
    getHttp: YM,
    getListHttp: XM,
    getOptionsHttp: ZM,
    patchHttp: e1,
    postHttp: JM,
    putHttp: QM
  };
}
function YM({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: l,
  apiSaveId: o,
  keyId: u,
  fullResponse: h,
  showError: A,
  ignoreErrorHandler: E = !1,
  abortable: p = !0,
  abortGroup: T = ""
}) {
  return qs({
    methodHttp: "get",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: l,
    apiSaveId: o,
    keyId: u,
    fullResponse: h,
    showError: A,
    ignoreErrorHandler: E,
    abortable: p,
    abortGroup: T
  });
}
function XM({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: l,
  apiSaveId: o,
  keyId: u,
  fullResponse: h,
  showError: A,
  ignoreErrorHandler: E = !1,
  abortable: p = !0,
  abortGroup: T = ""
}) {
  return qs({
    methodHttp: "get",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: l,
    apiSaveId: o,
    keyId: u,
    fullResponse: h,
    showError: A,
    ignoreErrorHandler: E,
    abortable: p,
    abortGroup: T,
    expectedList: !0
  });
}
function ZM({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: l,
  keyId: o,
  fullResponse: u,
  showError: h,
  ignoreErrorHandler: A = !1,
  abortable: E = !0,
  abortGroup: p = ""
}) {
  return qs({
    methodHttp: "options",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: l,
    keyId: o,
    fullResponse: u,
    showError: h,
    abortable: E,
    abortGroup: p,
    ignoreErrorHandler: A
  });
}
function JM({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: l,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: h = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return qs({
    methodHttp: "post",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: l,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: h
  });
}
function QM({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: l,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: h = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return qs({
    methodHttp: "put",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: l,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: h
  });
}
function e1({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: l,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: h = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return qs({
    methodHttp: "patch",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: l,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: h
  });
}
function t1({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: l,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: h = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return qs({
    methodHttp: "delete",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: l,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: h
  });
}
function qs({
  methodHttp: e,
  url: t,
  urlBase: n,
  urlParams: r,
  data: s,
  headerParams: l = {},
  responseType: o = "json",
  apiSaveId: u,
  keyId: h,
  fullResponse: A,
  showError: E = !1,
  ignoreErrorHandler: p = !1,
  abortable: T = !0,
  abortGroup: S = "",
  expectedList: b
}) {
  let L;
  if (u && (L = sr.value[u], L && L.loading))
    return L.promise;
  const I = new Promise((v, R) => {
    if (L && !L.loading) {
      if (h) {
        if (L.keyData)
          return v(L.keyData);
        const P = VE({ data: L.data, keyId: h });
        return sr.value[u].keyData = P, v(P);
      }
      return v(L.data);
    }
    const g = r1({ url: t, params: r });
    let D = `${ie(n) ? Am.value : n}${g}`;
    D = D.replace(/\/\//g, "/");
    const w = {
      ...Em.value,
      ...l
    }, M = i1({ abortGroup: S, abortable: T });
    o1({ abortGroup: S, abortable: T }), qo.value({
      method: e,
      url: D,
      data: s,
      headers: w,
      responseType: o,
      signal: M
    }).then(
      (P) => {
        if (A)
          return v(P);
        const F = s1({ expectedList: b, response: P }), C = VE({ data: F, keyId: h });
        return u && (sr.value[u].data = F, sr.value[u].keyData = C, sr.value[u].loading = !1), v(h ? C : F);
      },
      (P) => {
        if ((P == null ? void 0 : P.code) === "ERR_CANCELED")
          return R(P);
        if (qe(p)) {
          if (p({ error: P.response, showError: E, client: qo }))
            return R(P.response);
        } else if (p || n1({ error: P.response, showError: E, client: qo, reject: R, resolve: v }))
          return R(P.response);
      }
    ).finally(
      () => {
        u1({ abortGroup: S, abortable: T });
      }
    );
  });
  return L || (sr.value[u] = sr.value[u] || {}, sr.value[u].loading = !0, sr.value[u].promise = I), I;
}
function n1({ error: e, showError: t, client: n, resolve: r, reject: s }) {
  return e ? (() => {
    const o = $o.value[e.status];
    return qe(o) ? o({ error: e, showError: t, client: n, resolve: r, reject: s }) : qe($o.value.all) ? $o.value.all({ error: e, showError: t, client: n, resolve: r, reject: s }) : !0;
  })() : !0;
}
function r1({ url: e, params: t }) {
  const n = e || "";
  let r = "";
  z(t, (l, o) => {
    Te(l) ? r = pm.value.setUrlForArray({ id: o, array: l, url: r }) : nt(l) ? z(l, (u, h) => {
      u && (r && (r += "&"), r += `${h}=${u}`);
    }) : ie(l) || (r && (r += "&"), r += `${o}=${l}`);
  });
  const s = r && n ? n.indexOf("?") === -1 ? "?" : "&" : "";
  return `${n}${s}${r}`;
}
function a1({ array: e, url: t, id: n }) {
  if (!e.length)
    return t;
  let r = t || "";
  return n === "fields" || n === "ordering" ? (r && (r += "&"), r += `${n}=`, r += e.join(",")) : z(e, (s) => {
    r && (r += "&"), r += `${n}=${s}`;
  }), r;
}
function VE({ data: e, keyId: t }) {
  if (t)
    return Pa(e, t);
}
function s1({ expectedList: e, response: t }) {
  return e ? Te(t.data) ? t.data : t.data.results ? t.data.results : [] : t.data;
}
function i1({ abortGroup: e = "_global", abortable: t } = {}) {
  if (t)
    return Fr[e] = Fr[e] || new AbortController(), Fr[e].signal;
}
function l1({ excludeAbortGroup: e }) {
  const t = {};
  return e && (it(e) ? t[e] = !0 : Te(e) && z(e, (n) => {
    t[n] = !0;
  })), t;
}
function o1({ abortGroup: e, abortable: t }) {
  !t || !e || (Ir[e] ? Ir[e]++ : Ir[e] = 1);
}
function u1({ abortGroup: e, abortable: t }) {
  !t || !e || (Ir[e] && Ir[e]--, Ir[e] === 0 && Fr[e] && (delete Ir[e], delete Fr[e]));
}
function _de({ url: e, allCommasToArray: t = !1, keysCommaToArray: n = [] } = {}) {
  let r = e || window.location.search.substring(1);
  try {
    r = decodeURI(r);
  } catch (o) {
    console.error(o);
  }
  const s = r.split("&"), l = {};
  return z(s, (o) => {
    const u = o.split("=");
    if (u && u.length === 2)
      if (u[1].indexOf("[") !== -1 || u[1].indexOf("%5B") !== -1) {
        const h = u[1].replace("%5B", "[").replace("%5D", "]").replace(/%22/g, '"');
        l[u[0]] = JSON.parse(h);
      } else if (u[1].indexOf(",") !== -1 && (t || n.indexOf(u[0]) !== -1)) {
        const h = u[1].split(",");
        l[u[0]] = h;
      } else l[u[0]] ? it(l[u[0]]) ? (l[u[0]] = [l[u[0]]], l[u[0]].push(u[1])) : Te(l[u[0]]) && l[u[0]].push(u[1]) : l[u[0]] = u[1];
  }), l;
}
function Yc(e, {
  changeModel: t = () => {
  },
  dataExtraLocal: n = _(() => []),
  dataFromServer: r = B([])
} = {}) {
  const s = d(e, "apiSaveId"), l = d(e, "isDataSimpleArray"), o = d(e, "keyId"), u = d(e, "keyLabel"), h = d(e, "searchApi"), A = d(e, "modelValue"), E = d(e, "searchApiKey"), p = d(e, "type"), T = d(e, "url"), S = d(e, "urlParams"), b = B(!1), L = B(void 0), {
    getListHttp: I
  } = zM(), v = _(() => !!(h.value && E.value && T.value)), R = _(() => [
    s.value,
    T.value,
    S.value
  ]), g = () => {
    if (!T.value || v.value) {
      r.value = [];
      return;
    }
    L.value = !0, I({
      url: T.value,
      urlParams: S.value,
      apiSaveId: s.value
    }).then(
      (K) => {
        r.value = K;
      }
    ).finally(
      () => {
        L.value = !1;
      }
    );
  }, D = _(() => p.value === "checkbox" || p.value === "multiselect"), w = (K, le) => {
    Ec(le, K) || (g(), D.value ? t({
      model: [],
      currentModel: []
    }) : t({
      model: void 0,
      currentModel: void 0
    }));
  }, M = (K) => l.value ? cP(K) : cT(K, o.value), P = (K) => n.value.length ? !hc(n.value, [Ke, K]) : it(K) || yn(K), F = _(() => {
    let K = [];
    return Te(A.value) && A.value.length ? K = wt(A.value, (le) => P(le)) : P(A.value) && (K = [A.value]), K;
  }), C = ({ response: K }) => {
    const le = pe(r.value), te = [], _e = pe(F.value);
    z(le, (ae) => {
      if (_e.length === 0)
        return !1;
      const oe = l.value ? ae : fe(ae, o.value), Le = _e.indexOf(oe);
      Le !== -1 && (_e.splice(Le, 1), te.push(ae));
    }), te.push(...K), r.value = M(te);
  };
  return {
    loadDataFromServer: g,
    loadDataFromServerForSearchAPI: () => {
      if (!v.value || !F.value.length)
        return;
      let K;
      if (o.value === "pk" ? K = wt(F.value, (te) => !ie(te)) : K = pe(F.value), !K.length)
        return;
      L.value = !0;
      const le = {
        ...S.value,
        [o.value]: K,
        limit: K.length
      };
      return I({
        url: T.value,
        urlParams: le
      }).then(
        (te) => {
          r.value = te || [];
        }
      ).finally(() => {
        L.value = !1;
      });
    },
    loadingDataFromServer: L,
    loadingSearchApi: b,
    onSearchInApi: ({ search: K, data: le = [] }) => {
      v.value && (b.value = !0, I({
        url: T.value,
        urlParams: {
          ...S.value || {},
          [E.value]: K
        }
      }).then(
        (te) => {
          l.value && (te = Pn(te, (_e) => _e[u.value])), C({ response: te, data: le });
        }
      ).then(
        () => {
          b.value = !1;
        }
      ));
    },
    searchApiLocal: v,
    updateUrlPropsComputed: w,
    urlPropsComputed: R
  };
}
function Xc(e, {
  data: t = _(() => [])
}) {
  const n = d(e, "sortOrder");
  return {
    dataSort: _(() => n.value ? pc(t.value, [St], [n.value]) : t.value)
  };
}
function Zc({ emit: e }, {
  dataKeyByKeyIdLocal: t = _(() => ({})),
  dataLocal: n = _(() => ({}))
}) {
  rt(n, () => {
    e("updateData", {
      dataKeyByKeyId: t.value
    });
  }, {
    immediate: !0,
    deep: !0
  });
}
function Jc(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "data"), r = d(e, "dataExtra"), s = d(e, "isDataSimpleArray"), l = d(e, "keyId"), o = d(e, "keyLabel"), u = d(e, "keyLabelCallback"), h = d(e, "translateData"), A = B([]), E = _(() => $P(r.value)), p = ({ _data: D, _isArrayOfArrays: w = !1 }) => {
    const M = pe(D);
    if (w) {
      const P = [];
      return z(M, (F) => {
        const C = F[0];
        let k = F[1];
        h.value && Da(k) && (k = Bt({ placeholder: k, alwaysTranslate: t.value })), P.push({
          [Ke]: C,
          [St]: k
        });
      }), P;
    }
    if (u.value) {
      if (s.value) {
        const P = [];
        return z(M, (F) => {
          let C = u.value({ item: F });
          h.value && Da(C) && (C = Bt({ placeholder: C, alwaysTranslate: t.value })), P.push({
            [Ke]: F,
            [St]: C
          });
        }), P;
      }
      z(M, (P) => {
        let F = u.value({ item: P });
        h.value && Da(F) && (F = Bt({ placeholder: F, alwaysTranslate: t.value })), P[Ke] = fe(P, l.value), P[St] = F;
      });
    } else {
      if (s.value) {
        const P = [];
        return z(M, (F) => {
          let C = F;
          h.value && Da(C) && (C = Bt({ placeholder: C, alwaysTranslate: t.value })), P.push({
            [Ke]: F,
            [St]: C
          });
        }), P;
      }
      z(M, (P) => {
        let F = fe(P, o.value);
        h.value && Da(F) && (F = Bt({ placeholder: F, alwaysTranslate: t.value })), P[Ke] = fe(P, l.value), P[St] = F;
      });
    }
    return M;
  }, T = _(() => n.value || A.value), S = _(() => p({
    _data: T.value,
    _isArrayOfArrays: !1
  })), b = _(() => p({
    _data: r.value,
    _isArrayOfArrays: E.value
  })), L = _(() => Pa(b.value, Ke)), I = _(() => Pa(S.value, Ke)), v = _(() => ({
    ...L.value,
    ...I.value
  })), R = _(() => [
    ...b.value,
    ...S.value
  ]), g = _(() => b.value.length > 0);
  return {
    dataAll: R,
    dataExtraLocal: b,
    dataFromServer: A,
    dataKeyByKeyIdLocal: v,
    dataLocal: S,
    hasDataExtra: g
  };
}
function Qc(e, {
  loadingDataFromServer: t = B(!1)
}) {
  const n = d(e, "loading");
  return {
    loadingLocal: _(() => !!(n.value || t.value))
  };
}
function ef(e, { emit: t }, {
  data: n = _(() => []),
  dataExtra: r = _(() => []),
  exclusiveOption: s = _(() => {
  }),
  groupsForLever: l = _(() => {
  }),
  hasKeyGroup: o = _(() => !1),
  htmlIdLocal: u = _(() => ""),
  keyGroupArray: h = _(() => []),
  onSearchInApi: A = () => {
  },
  searchApiLocal: E = _(() => !1)
}) {
  const p = d(e, "searchTimeout"), T = d(e, "searchInGroup"), S = d(e, "searchOutside"), b = B(!1), L = B(""), I = B(""), v = B(!1), R = B({}), g = B({}), D = B({}), w = B({}), M = B({}), P = B(void 0), F = _(() => !!(S.value || E.value)), C = _(() => `${u.value}_search_global`), k = _(() => _T(L.value || "")), W = _(() => pu(k.value)), K = _(() => new RegExp(W.value, "gi")), le = () => {
    let se = !1;
    if (!T.value || !l.value) {
      M.value = {}, b.value = se;
      return;
    }
    const Oe = {}, ye = {};
    z(l.value, (je) => {
      z(je, (he) => {
        const ne = he.groupLabel;
        ne === "_not_grouped" && !he.groupParentKey || (Oe[he.groupParentKey] ? (Oe[he.allGroupKeys] = !0, he.data.length && (se = !0)) : `${ne}`.search(K.value) !== -1 && (Oe[he.allGroupKeys] = !0, he.data.length && (se = !0), he.allParentKeys.length && z(he.allParentKeys, (H) => {
          ye[H] = !0;
        })));
      });
    }), M.value = {
      ...Oe,
      ...ye
    }, b.value = se;
  }, te = () => {
    const se = {}, Oe = {}, ye = {}, je = {};
    if (L.value) {
      if (v.value = !0, o.value ? (le(), z(n.value, (he) => {
        const ne = he[St], H = he[Ke];
        if (`${ne}`.search(K.value) !== -1) {
          Oe[H] = !0;
          let Q = "";
          z(h.value, (re) => {
            let Ie = fe(he, re);
            (ie(Ie) || Ie === "") && (Ie = "_not_grouped"), Q += `${Q ? "_" : ""}${Ie}`, je[Q] = !0;
          });
        }
      })) : z(n.value, (he) => {
        const ne = he[St], H = he[Ke];
        `${ne}`.search(K.value) !== -1 && (Oe[H] = !0);
      }), z(r.value, (he) => {
        const ne = he[St], H = he[Ke];
        `${ne}`.search(K.value) !== -1 && (se[H] = !0);
      }), s.value) {
        const he = s.value[St], ne = s.value[Ke];
        `${he}`.search(K.value) !== -1 && (ye[ne] = !0);
      }
    } else
      v.value = !1;
    R.value = Oe, g.value = se, D.value = ye, w.value = je;
  }, _e = _(() => !!(v.value && hn(D.value))), ae = _(() => !!(v.value && hn(g.value))), oe = _(() => !!(v.value && hn(R.value) && ae.value && _e.value && !b.value));
  return {
    hasNotElementsExclusiveWithSearch: _e,
    hasNotElementsExtraWithSearch: ae,
    hasNotElementsWithSearch: oe,
    idForButtonSearchOutside: C,
    modelSearch: L,
    modelSearchLowerCase: k,
    modelSearchOutside: I,
    onSearchOutside: (se) => {
      se && se.preventDefault(), A({
        search: I.value
      }), t("onSearchOutside", {
        model: I.value
      });
    },
    searching: v,
    searchingElements: R,
    searchingElementsExclusive: D,
    searchingElementsExtra: g,
    searchingGroups: w,
    searchingGroupsWithSearchInGroup: M,
    searchOutsideOrApi: F,
    searchOutsideRef: P,
    updateModelSearch: (se) => {
      L.value = se, p.value ? setTimeout(() => {
        te();
      }, p.value) : te();
    },
    updateModelSearchOutside: (se) => {
      I.value = se;
    }
  };
}
function Xt(e) {
  const t = d(e, "dependencies"), n = d(e, "isHide"), r = d(e, "modelDependencies"), s = ({ id: u, value: h }) => {
    var A;
    return ((A = r.value) == null ? void 0 : A[u]) === h;
  }, l = _(() => {
    if (!t.value)
      return !1;
    if (nt(t.value))
      return !s(t.value);
    if (Te(t.value)) {
      let u = !1;
      return z(t.value, (h) => {
        if (!s(h))
          return u = !0, !1;
      }), u;
    }
    return !1;
  });
  return {
    componentStyleHide: _(() => n.value || l.value ? "display: none;" : "")
  };
}
const Ol = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
  <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0"/>
</svg>`, _1 = {
  name: "ACheckbox",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    classDataParent: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => []
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_checkbox_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inline: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: void 0
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "value"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: Array,
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    search: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: void 0
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrder: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_",
        notElementsWithSearch: "_A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_",
        search: "_A_CHECKBOX_SEARCH_"
      })
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "onSearchOutside",
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Ct(e), {
      componentStyleHide: r
    } = Xt(e), {
      ariaDescribedbyLocal: s,
      changeModel: l,
      errorsId: o,
      helpTextId: u,
      htmlIdLocal: h,
      isErrors: A,
      onBlur: E,
      onFocus: p
    } = Yt(e, t), {
      textAfterLabel: T
    } = Uc(e), {
      dataAll: S,
      dataFromServer: b,
      dataExtraLocal: L,
      dataKeyByKeyIdLocal: I,
      dataLocal: v,
      hasDataExtra: R
    } = Jc(e), {
      loadDataFromServer: g,
      loadDataFromServerForSearchAPI: D,
      loadingDataFromServer: w,
      loadingSearchApi: M,
      onSearchInApi: P,
      searchApiLocal: F,
      updateUrlPropsComputed: C,
      urlPropsComputed: k
    } = Yc(e, {
      changeModel: l,
      dataExtraLocal: L,
      dataFromServer: b
    }), {
      loadingLocal: W
    } = Qc(e, {
      loadingDataFromServer: w
    });
    Zc(t, {
      dataKeyByKeyIdLocal: I,
      dataLocal: v
    });
    const {
      dataSort: K
    } = Xc(e, {
      data: v
    }), {
      dataGrouped: le,
      groupsForLever: te,
      hasKeyGroup: _e,
      keyGroupArray: ae
    } = Hc(e, {
      data: K
    }), {
      hasNotElementsExtraWithSearch: oe,
      hasNotElementsWithSearch: Le,
      idForButtonSearchOutside: We,
      modelSearch: Se,
      modelSearchLowerCase: se,
      modelSearchOutside: Oe,
      onSearchOutside: ye,
      searching: je,
      searchingElements: he,
      searchingElementsExtra: ne,
      searchingGroups: H,
      searchingGroupsWithSearchInGroup: Q,
      searchOutsideOrApi: re,
      searchOutsideRef: Ie,
      updateModelSearch: Ce,
      updateModelSearchOutside: xe
    } = ef(e, t, {
      data: K,
      dataExtra: L,
      groupsForLever: te,
      htmlIdLocal: h,
      hasKeyGroup: _e,
      keyGroupArray: ae,
      searchApiLocal: F,
      onSearchInApi: P
    }), {
      onChangeModelValue: Xe
    } = u0(e, {
      changeModel: l
    }), {
      iconCollapse: Fe,
      initIsCollapsedLocal: Pe,
      isCollapsedLocal: at,
      titleCollapse: He,
      toggleCollapse: st
    } = Wc(e, t), {
      modelValueObj: Ze
    } = _0(e), {
      groupId: At
    } = kc(e, {
      htmlIdLocal: h
    });
    return rt(k, C, {
      deep: !0
    }), Pe(), g(), D(), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      componentStyleHide: r,
      dataAll: S,
      dataExtraLocal: L,
      dataGrouped: le,
      dataKeyByKeyIdLocal: I,
      dataSort: K,
      errorsId: o,
      groupId: At,
      groupsForLever: te,
      hasDataExtra: R,
      hasKeyGroup: _e,
      hasNotElementsExtraWithSearch: oe,
      hasNotElementsWithSearch: Le,
      helpTextId: u,
      htmlIdLocal: h,
      iconCollapse: Fe,
      idForButtonSearchOutside: We,
      isCollapsedLocal: at,
      isErrors: A,
      loadingLocal: W,
      loadingSearchApi: M,
      modelSearch: Se,
      modelSearchLowerCase: se,
      modelSearchOutside: Oe,
      modelValueObj: Ze,
      onBlur: E,
      onChangeModelValue: Xe,
      onFocus: p,
      onSearchOutside: ye,
      searching: je,
      searchingElements: he,
      searchingElementsExtra: ne,
      searchingGroups: H,
      searchingGroupsWithSearchInGroup: Q,
      searchOutsideOrApi: re,
      searchOutsideRef: Ie,
      textAfterLabel: T,
      titleCollapse: He,
      toggleCollapse: st,
      updateModelSearch: Ce,
      updateModelSearchOutside: xe
    };
  },
  render() {
    var e, t, n;
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: [
          "a_form_element__parent",
          {
            a_checkbox_inline: this.inline,
            a_checkbox_control: this.hasControlCheckbox
          }
        ]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("fieldset", {
            id: this.htmlIdLocal,
            tabindex: -1,
            class: [
              "a_fieldset",
              this.classFieldset,
              {
                a_fieldset_no_border: !this.hasBorder,
                a_fieldset_invalid: this.isErrors,
                a_fieldset_collapsed: this.isCollapsedLocal
              }
            ],
            "aria-describedby": this.ariaDescribedbyLocal
          }, [
            this.label || this.labelScreenReader ? c(UT, {
              id: this.htmlIdLocal,
              alwaysTranslate: this.alwaysTranslate,
              data: this.dataAll,
              dataKeyByKeyId: this.dataKeyByKeyIdLocal,
              disabled: this.disabled,
              hasControlCheckbox: this.hasControlCheckbox,
              isErrors: this.isErrors,
              label: this.label,
              legendClass: this.labelClass,
              labelScreenReader: this.labelScreenReader,
              main: !0,
              modelValue: this.modelValue,
              modelValueObj: this.modelValueObj,
              textAfter: this.textAfterLabel,
              onChangeModelValue: this.onChangeModelValue
            }) : "",
            this.collapsible ? c(me, {
              "aria-controls": this.groupId,
              "aria-expanded": !this.isCollapsedLocal,
              alwaysTranslate: this.alwaysTranslate,
              class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
              iconLeft: this.iconCollapse,
              title: this.titleCollapse,
              textScreenReader: this.titleCollapse,
              type: "button",
              onClick: this.toggleCollapse
            }) : "",
            c("div", {
              id: this.groupId,
              class: "a_fieldset__content"
            }, [
              this.searchOutsideOrApi ? c("div", {
                class: "a_fieldset__search"
              }, [
                c("form", {
                  onSubmit: this.onSearchOutside
                }, [
                  c("div", {
                    class: "input-group"
                  }, [
                    c(In, {
                      alwaysTranslate: this.alwaysTranslate,
                      label: ((e = this.texts) == null ? void 0 : e.search) || "_A_CHECKBOX_SEARCH_",
                      inputClass: "a_select__element_clickable",
                      modelValue: this.modelSearchOutside,
                      modelUndefined: "",
                      "onUpdate:modelValue": this.updateModelSearchOutside
                    }),
                    c(me, {
                      alwaysTranslate: this.alwaysTranslate,
                      ariaDisabled: this.loadingSearchApi,
                      disabled: this.disabled,
                      class: "a_btn a_btn_primary",
                      type: "submit",
                      iconLeft: Ol
                    })
                  ])
                ])
              ]) : "",
              this.search ? c(In, {
                alwaysTranslate: this.alwaysTranslate,
                label: ((t = this.texts) == null ? void 0 : t.search) || "_A_CHECKBOX_SEARCH_",
                class: "a_fieldset__search",
                modelValue: this.modelSearch,
                modelUndefined: "",
                "onUpdate:modelValue": this.updateModelSearch
              }) : "",
              this.loadingLocal ? c(ul) : "",
              this.hasDataExtra ? c("div", {
                class: "a_checkbox__data_extra"
              }, [
                ...this.dataExtraLocal.map((r, s) => c(xd, {
                  key: s,
                  id: this.htmlIdLocal,
                  alwaysTranslate: this.alwaysTranslate,
                  idSuffix: "extra",
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataItem: r,
                  disabled: this.disabled,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  itemIndex: s,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElementsExtra,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.hasNotElementsExtraWithSearch ? "" : c("div", {
                  class: "a_divider",
                  ariaHidden: !0
                })
              ]) : "",
              c("div", {}, this.hasKeyGroup ? [
                c($c, {
                  id: `${this.htmlIdLocal}_lev_0`,
                  alwaysTranslate: this.alwaysTranslate,
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataGrouped: this.dataGrouped,
                  disabled: this.disabled,
                  hasControlCheckbox: this.hasControlCheckbox,
                  groupsForLever: this.groupsForLever,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  levelIndex: 0,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  modelValueObj: this.modelValueObj,
                  searching: this.searching,
                  searchingElements: this.searchingElements,
                  searchingGroups: this.searchingGroups,
                  searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  type: "checkbox",
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)
              ] : [
                c("div", {
                  class: [
                    "a_checkbox_data",
                    {
                      a_btn_group: this.isButtonGroup
                    },
                    this.classDataParent
                  ]
                }, [
                  ...this.dataSort.map((r, s) => c(xd, {
                    key: s,
                    id: this.htmlIdLocal,
                    alwaysTranslate: this.alwaysTranslate,
                    classButtonGroupDefault: this.classButtonGroupDefault,
                    dataItem: r,
                    disabled: this.disabled,
                    isButtonGroup: this.isButtonGroup,
                    isErrors: this.isErrors,
                    isWidthAuto: this.isWidthAuto,
                    itemIndex: s,
                    keyDisabled: this.keyDisabled,
                    keyTitle: this.keyTitle,
                    keyTitleCallback: this.keyTitleCallback,
                    modelSearch: this.modelSearchLowerCase,
                    modelValue: this.modelValue,
                    searching: this.searching,
                    searchingElements: this.searchingElements,
                    slotAppendName: this.slotAppendName,
                    slotName: this.slotName,
                    onChangeModelValue: this.onChangeModelValue
                  }, this.$slots))
                ])
              ]),
              !this.dataSort.length || this.hasNotElementsWithSearch ? c(Ae, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_form__not_elements",
                text: ((n = this.texts) == null ? void 0 : n.notElementsWithSearch) || "_A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_"
              }) : ""
            ])
          ])
        ]),
        c(ln, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(sn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, Cl = {
  props: {
    id: {
      type: String,
      required: !0
    }
  },
  computed: {
    idForHeader() {
      return `${this.id}_header`;
    },
    nameForEventBusDestroyKeyDownEvent() {
      return `${this.id}DestroyKeyDown`;
    },
    attributesForMainElement() {
      return this.idForFocus ? {
        "aria-activedescendant": this.idForFocus
      } : {};
    }
  },
  created() {
    this.setEventBus();
  },
  beforeUnmount() {
    this.destroyEventBus(), this.destroyListenerForPressButtons();
  },
  methods: {
    setEventBus() {
      Rt.$on(this.nameForEventBusDestroyKeyDownEvent, this.destroyListenerForPressButtons);
    },
    emitEventBusDestroyAllListenerForPressButtonsForPanels() {
      Rt.$emit(this.nameForEventBusDestroyKeyDownEvent);
    },
    destroyEventBus() {
      Rt.$off(this.nameForEventBusDestroyKeyDownEvent, this.destroyListenerForPressButtons);
    },
    setListenerForPressButtons() {
      document.addEventListener("keydown", this.pressButton);
    },
    destroyListenerForPressButtons() {
      document.removeEventListener("keydown", this.pressButton), this.destroyListenerForPressButtonsCallback();
    },
    stopCurrentEvent(e) {
      e.preventDefault(), e.stopPropagation();
    },
    setFocusToElementWithTimeout(e) {
      setTimeout(() => {
        const t = document.getElementById(e);
        t && t.focus();
      });
    },
    destroyListenerForPressButtonsCallback() {
    }
  }
};
function nu(e) {
  return Object.prototype.toString.call(e) === "[object Object]";
}
function Hd(e) {
  return e instanceof Date;
}
function Lr(e) {
  return e == null ? !1 : !isNaN(new Date(e).getTime());
}
function d1(e) {
  return Array.isArray(e) && e.length === 2 && Lr(e[0]) && Lr(e[1]) && new Date(e[1]).getTime() >= new Date(e[0]).getTime();
}
function ru(e, t) {
  if (!e)
    return "";
  try {
    return xn(e).format(t);
  } catch {
    return "";
  }
}
function WE(e, t, n) {
  try {
    return xn(e, n).format(t) || null;
  } catch {
    return null;
  }
}
const GE = {
  name: "APanelDate",
  mixins: [
    Cl
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    startAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    endAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    dateFormat: {
      type: String,
      default: "YYYY-MM-DD"
    },
    calendarMonth: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getMonth()
    },
    calendarYear: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getFullYear()
    },
    firstDayOfWeek: {
      default: 7,
      type: Number,
      validator: (e) => e >= 1 && e <= 7
    },
    disabledDate: {
      type: Function,
      default: () => !1
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "handleIconMonth",
    "select"
  ],
  data() {
    return {
      dayForFocusButton: void 0
    };
  },
  computed: {
    ths() {
      return this.getDays(this.firstDayOfWeek);
    },
    dates() {
      return this.getDates(this.calendarYear, this.calendarMonth, this.firstDayOfWeek);
    },
    trsWithTds() {
      const e = [];
      for (let t = 0; t < 6; t++) {
        const n = [];
        this.dates.slice(7 * t, 7 * t + 7).forEach((r) => {
          const s = this.isCurrentDayToday(r), l = this.getCellTime(r), o = this.disabledDate(l);
          n.push({
            class: this.getCellClasses({
              cellTime: l,
              isToday: s,
              month: r.month
            }),
            id: this.getId({
              month: r.month,
              day: r.day
            }),
            year: r.year,
            month: r.month,
            fullDate: this.getCellTitle(r),
            date: r,
            label: r.day,
            isToday: s,
            isDisabled: o,
            isCurrentMonth: r.month === this.calendarMonth
          });
        }), e.push(n);
      }
      return e;
    },
    dayFromValueOrToday() {
      return this.dayFromValue || (/* @__PURE__ */ new Date()).getDate();
    },
    dayFromValue() {
      return this.value ? new Date(this.value).getDate() : "";
    },
    idForFocus() {
      return this.dayForFocusButton ? `${this.id}_${this.dayForFocusButton}` : "";
    },
    daysInMonth() {
      return xn(`${this.calendarYear}_${this.calendarMonth + 1}`, "YYYY-MM").daysInMonth();
    },
    todayTranslate() {
      return this.currentLanguage.today;
    }
  },
  methods: {
    selectDate(e, { year: t, month: n, day: r }) {
      e.stopPropagation();
      const s = new Date(t, n, r);
      this.disabledDate(s) || this.$emit("select", s);
    },
    getDays(e) {
      const t = this.currentLanguage.days, n = parseInt(e, 10);
      return t.concat(t).slice(n, n + 7);
    },
    getDates(e, t, n) {
      const r = [], s = new Date(e, t);
      s.setDate(0);
      const l = (s.getDay() + 7 - n) % 7 + 1, o = s.getDate() - (l - 1);
      for (let A = 0; A < l; A++)
        r.push({ year: e, month: t - 1, day: o + A });
      s.setMonth(s.getMonth() + 2, 0);
      const u = s.getDate();
      for (let A = 0; A < u; A++)
        r.push({ year: e, month: t, day: 1 + A });
      s.setMonth(s.getMonth() + 1, 1);
      const h = 42 - (l + u);
      for (let A = 0; A < h; A++)
        r.push({ year: e, month: t + 1, day: 1 + A });
      return r;
    },
    isCurrentDayToday({ year: e, month: t, day: n }) {
      const r = this.getCellTime({ year: e, month: t, day: n }), s = (/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0);
      return r === s;
    },
    getCellClasses({ cellTime: e, isToday: t, month: n }) {
      const r = [], s = this.value && new Date(this.value).setHours(0, 0, 0, 0), l = this.startAt && new Date(this.startAt).setHours(0, 0, 0, 0), o = this.endAt && new Date(this.endAt).setHours(0, 0, 0, 0);
      return n < this.calendarMonth ? r.push("last-month") : n > this.calendarMonth ? r.push("next-month") : r.push("cur-month"), t && r.push("today"), this.disabledDate(e) && r.push("disabled"), s && (e === s ? r.push("actived") : (l && e <= s || o && e >= s) && r.push("inrange")), r.join(" ");
    },
    getCellTime({ year: e, month: t, day: n }) {
      return new Date(e, t, n).getTime();
    },
    getCellTitle({ year: e, month: t, day: n }) {
      return ru(new Date(e, t, n), this.dateFormat);
    },
    getId({ month: e, day: t }) {
      let n = `${this.id}_${t}`;
      return e < this.calendarMonth ? n += "_last_month" : e > this.calendarMonth && (n += "_next_month"), n;
    },
    setFocusToActiveDay() {
      setTimeout(() => {
        this.setDefaultDayForFocusButton(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultDayForFocusButton() {
      this.dayForFocusButton = this.dayFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === X.arrowUp ? (this.setFocusToPast(7), this.stopCurrentEvent(e)) : t === X.arrowDown ? (this.setFocusToFuture(7), this.stopCurrentEvent(e)) : t === X.arrowLeft ? (this.setFocusToPast(1), this.stopCurrentEvent(e)) : t === X.arrowRight && (this.setFocusToFuture(1), this.stopCurrentEvent(e));
    },
    setFocusToPast(e) {
      const t = this.dayForFocusButton - e;
      t > 0 ? this.dayForFocusButton = t : (this.$emit("handleIconMonth", -1), setTimeout(() => {
        this.dayForFocusButton = this.daysInMonth - Math.abs(t);
      })), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToFuture(e) {
      const t = this.dayForFocusButton + e;
      if (t <= this.daysInMonth)
        this.dayForFocusButton = t;
      else {
        const n = this.daysInMonth;
        this.$emit("handleIconMonth", 1), this.dayForFocusButton = t - n;
      }
      this.setFocusToElementWithTimeout(this.idForFocus);
    },
    destroyListenerForPressButtonsCallback() {
      this.dayForFocusButton = void 0;
    }
  },
  render() {
    return c("table", {
      class: "pux_datepicker__panel pux_datepicker__panel_date",
      role: "grid",
      ariaReadonly: !0,
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      c("thead", null, [
        c("tr", null, [
          this.ths.map((e, t) => c("th", {
            key: t,
            ariaLabel: e.longName
          }, e.shortName))
        ])
      ]),
      c("tbody", null, [
        this.trsWithTds.map((e, t) => c("tr", {
          key: t
        }, [
          e.map((n, r) => c("td", {
            key: r,
            class: ["cell", n.class, {
              pux_datepicker__panel__cell_focus: n.id === this.idForFocus
            }]
          }, [
            c("button", {
              id: n.id,
              class: "pux_datepicker__panel__button",
              type: "button",
              tabindex: -1,
              ariaHidden: !0,
              ariaSelected: !!(n.isCurrentMonth && n.label === this.dayFromValue),
              onClick: (s) => this.selectDate(s, n.date)
            }, [
              c("span", {
                ariaHidden: !0
              }, n.label),
              c("span", {
                class: "a_sr_only"
              }, n.fullDate),
              n.isToday && c("span", {
                class: "a_sr_only"
              }, this.todayTranslate)
            ])
          ]))
        ]))
      ])
    ]);
  }
}, KE = {
  name: "APanelMonth",
  mixins: [
    Cl
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    calendarYear: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getFullYear(),
      required: !1
    },
    disabledMonth: {
      type: Function,
      required: !1,
      default: void 0
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "handleIconYear",
    "select"
  ],
  data() {
    return {
      monthIndexForFocus: void 0
    };
  },
  computed: {
    currentYear() {
      return this.value && new Date(this.value).getFullYear();
    },
    currentMonth() {
      return this.value && new Date(this.value).getMonth();
    },
    monthsTranslate() {
      return this.currentLanguage.months;
    },
    months() {
      const e = [];
      return this.monthsTranslate.forEach((t, n) => {
        e.push({
          isActive: this.currentYear === this.calendarYear && this.currentMonth === n,
          isDisabled: this.isDisabled(n),
          label: t,
          id: this.getIdForMonth(n)
        });
      }), e;
    },
    idForFocus() {
      return we(this.monthIndexForFocus) ? "" : this.getIdForMonth(this.monthIndexForFocus);
    },
    monthFromValueOrToday() {
      return this.monthFromValue || (/* @__PURE__ */ new Date()).getMonth();
    },
    monthFromValue() {
      return this.value ? new Date(this.value).getMonth() : "";
    }
  },
  methods: {
    isDisabled(e) {
      return !!(typeof this.disabledMonth == "function" && this.disabledMonth(e));
    },
    selectMonth(e, t, n) {
      e.stopPropagation(), e.preventDefault(), !this.isDisabled(t) && this.$emit("select", { month: t, isButtonClick: n });
    },
    getIdForMonth(e) {
      return `${this.id}_month_${e}`;
    },
    setFocusToActiveMonth() {
      setTimeout(() => {
        this.setDefaultMonthForFocus(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultMonthForFocus() {
      this.monthIndexForFocus = this.monthFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === X.arrowUp || t === X.arrowLeft ? (this.setFocusToLastMonth(), this.stopCurrentEvent(e)) : (t === X.arrowDown || t === X.arrowRight) && (this.setFocusToNextMonth(), this.stopCurrentEvent(e));
    },
    setFocusToLastMonth() {
      const e = this.monthIndexForFocus - 1;
      e >= 0 ? this.monthIndexForFocus = e : (this.$emit("handleIconYear", -1), this.monthIndexForFocus = 11), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToNextMonth() {
      const e = this.monthIndexForFocus + 1;
      e <= 11 ? this.monthIndexForFocus = e : (this.$emit("handleIconYear", 1), this.monthIndexForFocus = 0), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    keypress(e, t) {
      (e.keyCode === X.enter || e.keyCode === X.space) && this.selectMonth(e, t);
    }
  },
  render() {
    return c("ul", {
      class: "pux_datepicker__panel pux_datepicker__panel_month pux_datepicker__panel__list",
      role: "listbox",
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      this.months.map((e, t) => c("li", {
        id: e.id,
        key: e.id,
        class: ["cell", {
          actived: e.isActive,
          disabled: e.isDisabled,
          pux_datepicker__panel__cell_focus: t === this.monthIndexForFocus
        }],
        role: "option",
        ariaSelected: !!e.isActive,
        tabindex: -1,
        onClick: (n) => this.selectMonth(n, t),
        onKeypress: (n) => this.keypress(n, t)
      }, e.label))
    ]);
  }
}, jE = {
  name: "APanelTime",
  mixins: [
    Cl
  ],
  props: {
    minuteStep: {
      type: Number,
      default: 0,
      validator: (e) => e >= 0 && e <= 60
    },
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: void 0
    },
    timeType: {
      type: Array,
      default() {
        return ["24", "a"];
      }
    },
    disabledTime: {
      type: Function,
      required: !1,
      default: void 0
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "select"
  ],
  data() {
    return {
      timeIndexForFocus: void 0,
      columnIndexForFocus: void 0
    };
  },
  computed: {
    currentHours() {
      return this.value ? new Date(this.value).getHours() : 0;
    },
    currentMinutes() {
      return this.value ? new Date(this.value).getMinutes() : 0;
    },
    currentSeconds() {
      return this.value ? new Date(this.value).getSeconds() : 0;
    },
    date() {
      return this.value ? new Date(this.value) : (/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0);
    },
    isDisabledTimeFunction() {
      return typeof this.disabledTime == "function";
    },
    timesFiltered() {
      const e = [];
      let t = 0;
      const n = this.setColumn({
        times: this.hours,
        timeFunctionName: "setHours",
        currentTime: this.currentHours,
        ariaLabel: this.currentLanguage.hours,
        columnIndex: t
      });
      n.length && (e.push(n), t++);
      const r = this.setColumn({
        times: this.minutes,
        timeFunctionName: "setMinutes",
        currentTime: this.currentMinutes,
        ariaLabel: this.currentLanguage.minutes,
        columnIndex: t
      });
      r.length && (e.push(r), t++);
      const s = this.setColumn({
        times: this.seconds,
        timeFunctionName: "setSeconds",
        currentTime: this.currentSeconds,
        ariaLabel: this.currentLanguage.seconds,
        columnIndex: t
      });
      return s.length && e.push(s), e;
    },
    minuteStepLocal() {
      return this.minuteStep || 1;
    },
    minuteLength() {
      return parseInt(60 / this.minuteStepLocal);
    },
    hours() {
      return Array.apply(null, { length: 24 }).map((e, t) => t);
    },
    minutes() {
      return Array.apply(null, { length: this.minuteLength }).map(
        (e, t) => t * this.minuteStepLocal
      );
    },
    seconds() {
      return this.minuteStep === 0 ? Array.apply(null, { length: 60 }).map((e, t) => t) : [];
    },
    idForFocus() {
      return this.getCurrentId({
        columnIndex: this.columnIndexForFocus,
        rowIndex: this.timeIndexForFocus
      });
    },
    fullIndexForFocus() {
      return `${this.columnIndexForFocus}_${this.timeIndexForFocus}`;
    }
  },
  methods: {
    stringifyText(e) {
      return ("00" + e).slice(String(e).length);
    },
    selectTime(e, t) {
      typeof this.disabledTime == "function" && this.disabledTime(e) || this.$emit("select", new Date(e), t);
    },
    setColumn({ times: e, timeFunctionName: t, currentTime: n, ariaLabel: r, columnIndex: s }) {
      const l = [];
      return e.forEach((o, u) => {
        const h = new Date(this.date)[t](o), A = o === n, E = this.isDisabledTimeFunction && this.disabledTime(h), p = this.stringifyText(o);
        l.push({
          label: p,
          time: h,
          isActive: A,
          isDisabled: E,
          ariaLabel: `${r}: ${p}`,
          id: this.getCurrentId({
            columnIndex: s,
            rowIndex: u
          })
        });
      }), l;
    },
    getCurrentId({ columnIndex: e, rowIndex: t }) {
      return `${this.id}_time_${e}_${t}`;
    },
    setFocusToActiveTime() {
      setTimeout(() => {
        this.setDefaultTimeForFocus(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultTimeForFocus() {
      this.timeIndexForFocus = 0, this.columnIndexForFocus = 0;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === X.arrowUp ? (this.setFocusToLastTime(), this.stopCurrentEvent(e)) : t === X.arrowDown ? (this.setFocusToNextTime(), this.stopCurrentEvent(e)) : t === X.arrowLeft ? (this.setFocusToLastTimeColumn(), this.stopCurrentEvent(e)) : t === X.arrowRight && (this.setFocusToNextTimeColumn(), this.stopCurrentEvent(e));
    },
    setFocusToLastTime() {
      const e = this.timesFiltered[this.columnIndexForFocus];
      this.timeIndexForFocus > 0 ? this.timeIndexForFocus-- : this.timeIndexForFocus = e.length - 1, this.setFocusToElement(this.idForFocus);
    },
    setFocusToNextTime() {
      const e = this.timesFiltered[this.columnIndexForFocus];
      this.timeIndexForFocus < e.length - 1 ? this.timeIndexForFocus++ : this.timeIndexForFocus = 0, this.setFocusToElement(this.idForFocus);
    },
    setFocusToLastTimeColumn() {
      this.columnIndexForFocus > 0 ? this.columnIndexForFocus-- : this.columnIndexForFocus = this.timesFiltered.length - 1, this.timeIndexForFocus = 0, this.setFocusToElement(this.idForFocus);
    },
    setFocusToNextTimeColumn() {
      this.columnIndexForFocus < this.timesFiltered.length - 1 ? this.columnIndexForFocus++ : this.columnIndexForFocus = 0, this.timeIndexForFocus = 0, this.setFocusToElement(this.idForFocus);
    },
    setFocusToElement(e) {
      const t = document.getElementById(e);
      t && t.focus();
    },
    keypress(e, t, n) {
      (e.keyCode === X.enter || e.keyCode === X.space) && (this.selectTime(t, n), e.stopPropagation(), e.preventDefault());
    }
  },
  render() {
    return c("div", {
      class: "pux_datepicker__panel pux_datepicker__panel_time"
    }, [
      this.timesFiltered.map((e, t) => c("ul", {
        key: t,
        class: "pux_datepicker__time_list",
        role: "listbox",
        "aria-labelledby": this.idForHeader,
        style: { width: `${100 / this.timesFiltered.length}%` }
      }, [
        e.map((n, r) => c("li", {
          id: n.id,
          key: r,
          class: ["cell", {
            actived: n.isActive,
            disabled: n.isDisabled,
            pux_datepicker__panel__cell_focus: t + "_" + r === this.fullIndexForFocus
          }],
          tabindex: -1,
          role: "option",
          ariaSelected: !!n.isActive,
          ariaLabel: n.ariaLabel,
          onClick: () => this.selectTime(n.time),
          onKeypress: (s) => this.keypress(s, n.time, t === this.timesFiltered.length - 1)
        }, n.label))
      ]))
    ]);
  }
}, c1 = {
  name: "APanelYearItem",
  props: {
    prefixForId: {
      type: String,
      required: !0
    },
    year: {
      type: Number,
      required: !0
    },
    yearFromValue: {
      type: Number,
      required: !1,
      default: void 0
    },
    yearIndex: {
      type: Number,
      required: !0
    },
    isDisabled: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "selectYear"
  ],
  computed: {
    isDisabledLocal() {
      return this.isDisabled(this.year);
    },
    isYearActive() {
      return this.yearFromValue === this.year;
    },
    idForList() {
      return `${this.prefixForId}${this.yearIndex}`;
    },
    ariaSelected() {
      return `${this.isYearActive}`;
    }
  },
  methods: {
    selectYearLocal(e, t) {
      e.stopPropagation(), e.preventDefault(), !this.isDisabledLocal && this.$emit("selectYear", { year: this.year, isButtonClick: t });
    },
    keypress(e) {
      (e.keyCode === X.enter || e.keyCode === X.space) && this.selectYearLocal(e, !0);
    }
  },
  render() {
    return c("li", {
      id: this.idForList,
      class: ["cell", {
        actived: this.isYearActive,
        disabled: this.isDisabledLocal
      }],
      role: "option",
      tabindex: -1,
      "aria-selected": this.ariaSelected,
      onClick: this.selectYearLocal,
      onKeypress: this.keypress
    }, this.year);
  }
}, zE = {
  name: "APanelYear",
  mixins: [
    Cl
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    firstYear: {
      type: Number,
      required: !0
    },
    disabledYear: {
      type: Function,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "handleIconYear",
    "select"
  ],
  data() {
    return {
      yearIndexForFocus: void 0
    };
  },
  computed: {
    firstYearLocal() {
      return Math.floor(this.firstYear / 10) * 10;
    },
    yearFromValue() {
      return this.value && new Date(this.value).getFullYear();
    },
    idForFocus() {
      return we(this.yearIndexForFocus) ? "" : this.getIdForYear(this.yearIndexForFocus);
    },
    yearIndexFromValueOrToday() {
      const e = this.yearFromValueOrToday - this.firstYearLocal;
      return e <= 9 && e >= 0 ? e : 0;
    },
    yearFromValueOrToday() {
      return this.yearFromValue || (/* @__PURE__ */ new Date()).getFullYear();
    },
    prefixForId() {
      return `${this.id}_year_`;
    }
  },
  methods: {
    isDisabled(e) {
      return !!(typeof this.disabledYear == "function" && this.disabledYear(e));
    },
    selectYear({ year: e, isButtonClick: t }) {
      this.isDisabled(e) || this.$emit("select", { year: e, isButtonClick: t });
    },
    getIdForYear(e) {
      return `${this.prefixForId}${e}`;
    },
    setFocusToActiveYear() {
      setTimeout(() => {
        this.setDefaultYearForFocus(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultYearForFocus() {
      this.yearIndexForFocus = this.yearIndexFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === X.arrowUp || t === X.arrowLeft ? (this.setFocusToLastYear(), this.stopCurrentEvent(e)) : (t === X.arrowDown || t === X.arrowRight) && (this.setFocusToNextYear(), this.stopCurrentEvent(e));
    },
    setFocusToLastYear() {
      const e = this.yearIndexForFocus - 1;
      e >= 0 && e <= 9 ? this.yearIndexForFocus = e : (this.$emit("handleIconYear", -1), this.yearIndexForFocus = 9), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToNextYear() {
      const e = this.yearIndexForFocus + 1;
      e <= 9 && e >= 0 ? this.yearIndexForFocus = e : (this.$emit("handleIconYear", 1), this.yearIndexForFocus = 0), this.setFocusToElementWithTimeout(this.idForFocus);
    }
  },
  render() {
    return c("ul", {
      class: "pux_datepicker__panel pux_datepicker__panel_year pux_datepicker__panel__list",
      role: "listbox",
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      Qw(10).map((e) => c(c1, {
        key: e,
        class: {
          pux_datepicker__panel__cell_focus: e === this.yearIndexForFocus
        },
        year: this.firstYearLocal + e,
        yearFromValue: this.yearFromValue,
        yearIndex: e,
        prefixForId: this.prefixForId,
        isDisabled: this.isDisabled,
        onSelectYear: this.selectYear
      }))
    ]);
  }
};
function f1(e, t) {
  if (!t) {
    e.scrollTop = 0;
    return;
  }
  const n = [];
  let r = t.offsetParent;
  for (; r && e !== r && e.contains(r); )
    n.push(r), r = r.offsetParent;
  const s = t.offsetTop + n.reduce((h, A) => h + A.offsetTop, 0), l = s + t.offsetHeight, o = e.scrollTop, u = o + e.clientHeight;
  s < o ? e.scrollTop = s : l > u && (e.scrollTop = l - e.clientHeight);
}
const dd = {
  name: "ADatepickerCalendarPanel",
  components: {
    APanelDate: GE,
    APanelMonth: KE,
    APanelTime: jE,
    APanelYear: zE
  },
  mixins: [
    Cl
  ],
  props: {
    id: {
      type: String,
      required: !0
    },
    value: {
      default: null,
      validator: function(e) {
        return e === null || Lr(e);
      }
    },
    startAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    endAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    visible: {
      type: Boolean,
      default: !1
    },
    type: {
      type: String,
      default: "date"
      // ["date", "datetime"]
    },
    dateFormat: {
      type: String,
      default: "YYYY-MM-DD"
    },
    index: {
      type: Number,
      default: void 0
    },
    defaultValue: {
      validator: function(e) {
        return Lr(e);
      },
      default: void 0
    },
    firstDayOfWeek: {
      default: 1,
      type: Number,
      validator: (e) => e >= 1 && e <= 7
    },
    notBefore: {
      default: null,
      validator: function(e) {
        return !e || Lr(e);
      }
    },
    notAfter: {
      default: null,
      validator: function(e) {
        return !e || Lr(e);
      }
    },
    disabledDays: {
      type: [Array, Function],
      default: function() {
        return [];
      }
    },
    minuteStep: {
      type: Number,
      default: 0,
      validator: (e) => e >= 0 && e <= 60
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "closePopup",
    "selectDate",
    "selectTime"
  ],
  data() {
    const e = this.getNow(this.value), t = e.getFullYear(), n = e.getMonth(), r = Math.floor(t / 10) * 10;
    return {
      panel: "NONE",
      dates: [],
      calendarMonth: n,
      calendarYear: t,
      firstYear: r,
      isFocusPanelChild: !1,
      isWorkWithKeyboard: !1
    };
  },
  computed: {
    now: {
      get() {
        return new Date(this.calendarYear, this.calendarMonth).getTime();
      },
      set(e) {
        const t = new Date(e);
        this.calendarYear = t.getFullYear(), this.calendarMonth = t.getMonth();
      }
    },
    timeType() {
      const e = /h+/.test(this.$parent.format) ? "12" : "24", t = /A/.test(this.$parent.format) ? "A" : "a";
      return [e, t];
    },
    timeHeader() {
      return this.type === "time" ? this.$parent.format : this.value && ru(this.value, this.dateFormat);
    },
    yearHeader() {
      const e = this.firstYear + 9;
      return this.currentLanguage.headerYears(this.firstYear, e);
    },
    months() {
      return this.currentLanguage.months;
    },
    notBeforeTime() {
      return this.getCriticalTime(this.notBefore);
    },
    notAfterTime() {
      return this.getCriticalTime(this.notAfter);
    },
    suffixForHeader() {
      return this.panel === "TIME" ? this.currentLanguage.placeholder.regionTime : this.currentLanguage.placeholder.regionDate;
    },
    idForHeaderParent() {
      return `${this.idForHeader}_parent`;
    },
    ariaLabelForButtonLastYear() {
      return this.panel === "YEAR" ? this.currentLanguage.buttons.lastYears : this.currentLanguage.buttons.lastYear;
    },
    ariaLabelForButtonLastMonth() {
      return this.currentLanguage.buttons.lastMonth;
    },
    ariaLabelForButtonNextMonth() {
      return this.currentLanguage.buttons.nextMonth;
    },
    ariaLabelForButtonNextYear() {
      return this.panel === "YEAR" ? this.currentLanguage.buttons.nextYears : this.currentLanguage.buttons.nextYear;
    },
    ariaLabelForButtonCurrentMonth() {
      return this.currentLanguage.buttons.toMonthsView;
    },
    ariaLabelForButtonCurrentYear() {
      return this.currentLanguage.buttons.toYearsView;
    },
    ariaLabelForButtonToDays() {
      return this.currentLanguage.buttons.toDaysView;
    }
  },
  watch: {
    value: {
      immediate: !0,
      handler: "updateNow"
    },
    defaultValue: {
      handler: "updateNow"
    },
    visible: {
      immediate: !0,
      handler: "init"
    },
    panel: {
      handler: "handelPanelChange"
    }
  },
  beforeUnmount() {
    this.destroyListenerForPressTabButton(), this.destroyListenerForPressEscapeButton();
  },
  methods: {
    handelPanelChange(e) {
      e === "YEAR" ? this.firstYear = Math.floor(this.calendarYear / 10) * 10 : e === "TIME" && this.$nextTick().then(() => {
        const t = this.$el.querySelectorAll(".pux_datepicker__panel_time .pux_datepicker__time_list");
        for (let n = 0, r = t.length; n < r; n++) {
          const s = t[n];
          f1(s, s.querySelector(".actived"));
        }
      });
    },
    init(e) {
      if (e) {
        const t = this.type;
        t === "month" ? this.showPanelMonth() : t === "year" ? this.showPanelYear() : t === "time" ? this.showPanelTime() : this.showPanelDate(), this.setListenerForPressEscapeButton();
      } else
        this.showPanelNone(), this.updateNow(this.value), this.destroyListenerForPressEscapeButton();
      this.emitEventBusDestroyAllListenerForPressButtonsForPanels();
    },
    getNow(e) {
      return e ? new Date(e) : this.defaultValue && Lr(this.defaultValue) ? new Date(this.defaultValue) : /* @__PURE__ */ new Date();
    },
    updateNow(e) {
      this.now = this.getNow(e);
    },
    getCriticalTime(e) {
      if (!e)
        return null;
      const t = new Date(e);
      return this.type === "year" ? new Date(t.getFullYear(), 0).getTime() : this.type === "month" ? new Date(t.getFullYear(), t.getMonth()).getTime() : this.type === "date" ? t.setHours(0, 0, 0, 0) : t.getTime();
    },
    inBefore(e, t) {
      return t === void 0 && (t = this.startAt), this.notBeforeTime && e < this.notBeforeTime || t && e < this.getCriticalTime(t);
    },
    inAfter(e, t) {
      return t === void 0 && (t = this.endAt), this.notAfterTime && e > this.notAfterTime || t && e > this.getCriticalTime(t);
    },
    inDisabledDays(e) {
      return Array.isArray(this.disabledDays) ? this.disabledDays.some((t) => this.getCriticalTime(t) === e) : typeof this.disabledDays == "function" ? this.disabledDays(new Date(e)) : !1;
    },
    isDisabledYear(e) {
      const t = new Date(e, 0).getTime(), n = new Date(e + 1, 0).getTime() - 1;
      return this.inBefore(n) || this.inAfter(t) || this.type === "year" && this.inDisabledDays(t);
    },
    isDisabledMonth(e) {
      const t = new Date(this.calendarYear, e).getTime(), n = new Date(this.calendarYear, e + 1).getTime() - 1;
      return this.inBefore(n) || this.inAfter(t) || this.type === "month" && this.inDisabledDays(t);
    },
    isDisabledDate(e) {
      const t = new Date(e).getTime(), n = new Date(e).setHours(23, 59, 59, 999);
      return this.inBefore(n) || this.inAfter(t) || this.inDisabledDays(t);
    },
    isDisabledTime(e, t, n) {
      const r = new Date(e).getTime();
      return this.inBefore(r, t) || this.inAfter(r, n) || this.inDisabledDays(r);
    },
    selectDate(e) {
      if (this.type === "datetime") {
        let t = new Date(e);
        Hd(this.value) && t.setHours(
          this.value.getHours(),
          this.value.getMinutes(),
          this.value.getSeconds()
        ), this.isDisabledTime(t) && (t.setHours(0, 0, 0, 0), this.notBefore && t.getTime() < new Date(this.notBefore).getTime() && (t = new Date(this.notBefore)), this.startAt && t.getTime() < new Date(this.startAt).getTime() && (t = new Date(this.startAt))), this.selectTime(t), this.showPanelTime();
        return;
      }
      this.$emit("selectDate", e);
    },
    selectYear({ year: e, isButtonClick: t }) {
      if (this.changeCalendarYear(e), this.type.toLowerCase() === "year")
        return this.selectDate(new Date(this.now));
      this.showPanelMonth(), t && this.setFocusToActivePanel();
    },
    selectMonth({ month: e, isButtonClick: t }) {
      if (this.changeCalendarMonth(e), this.type.toLowerCase() === "month")
        return this.selectDate(new Date(this.now));
      this.showPanelDate(), t && this.setFocusToActivePanel();
    },
    selectTime(e, t = !1) {
      this.$emit("selectTime", e, t);
    },
    changeCalendarYear(e) {
      this.updateNow(new Date(e, this.calendarMonth));
    },
    changeCalendarMonth(e) {
      this.updateNow(new Date(this.calendarYear, e));
    },
    getSibling() {
      const e = [
        this.$parent.$refs.calendarPanelRef
      ];
      this.$parent.$refs.calendarPanel2Ref && e.push(this.$parent.$refs.calendarPanel2Ref);
      const t = e.filter(
        (r) => r.$options.name === this.$options.name
      ), n = t.indexOf(this);
      return t[n ^ 1];
    },
    handleIconMonth(e) {
      const t = this.calendarMonth;
      this.changeCalendarMonth(t + e), this.$parent.$emit("changeCalendarMonth", {
        month: t,
        flag: e,
        vm: this,
        sibling: this.getSibling()
      });
    },
    handleIconYear(e) {
      if (this.panel === "YEAR")
        this.changePanelYears(e);
      else {
        const t = this.calendarYear;
        this.changeCalendarYear(t + e), this.$parent.$emit("changeCalendarYear", {
          year: t,
          flag: e,
          vm: this,
          sibling: this.getSibling()
        });
      }
    },
    handleBtnYear(e) {
      e.stopPropagation(), this.showPanelYear(), this.isWorkWithKeyboard && this.setFocusToActivePanel();
    },
    handleBtnMonth(e) {
      e.stopPropagation(), this.showPanelMonth(), this.isWorkWithKeyboard && this.setFocusToActivePanel();
    },
    handleTimeHeader(e) {
      e.stopPropagation(), this.type !== "time" && (this.showPanelDate(), this.isWorkWithKeyboard && this.setFocusToActivePanel());
    },
    changePanelYears(e) {
      this.firstYear = this.firstYear + e * 10;
    },
    showPanelNone() {
      this.panel = "NONE", this.isFocusPanelChild = !1, this.destroyListenerForPressTabButton(), this.emitEventBusDestroyAllListenerForPressButtonsForPanels(), this.setWorkWithoutKeyboard();
    },
    showPanelTime() {
      this.panel = "TIME";
    },
    showPanelDate() {
      this.panel = "DATE";
    },
    showPanelYear() {
      this.panel = "YEAR";
    },
    showPanelMonth() {
      this.panel = "MONTH";
    },
    setFocusToActivePanelFromParent() {
      this.setWorkWithKeyboard(), this.setFocusToActivePanel(), this.setListenerForPressTabButton();
    },
    setFocusToActivePanel() {
      this.isFocusPanelChild = !0, this.setFocusToActiveElementInChild();
    },
    removeFocusFromActivePanel() {
      this.isFocusPanelChild && (this.isFocusPanelChild = !1, this.emitEventBusDestroyAllListenerForPressButtonsForPanels());
    },
    setFocusToActiveElementInChild() {
      this.panel === "DATE" ? this.$refs.panelDate.setFocusToActiveDay() : this.panel === "TIME" ? this.$refs.panelTime.setFocusToActiveTime() : this.panel === "YEAR" ? this.$refs.panelYear.setFocusToActiveYear() : this.panel === "MONTH" && this.$refs.panelMonth.setFocusToActiveMonth();
    },
    setListenerForPressTabButton() {
      document.addEventListener("keydown", this.pressTabButton);
    },
    destroyListenerForPressTabButton() {
      document.removeEventListener("keydown", this.pressTabButton);
    },
    pressTabButton(e) {
      e.keyCode === X.tab && (this.trapFocus(e), this.stopCurrentEvent(e));
    },
    trapFocus(e) {
      const t = this.$el.querySelectorAll(".pux_datepicker__calendar__tab");
      if (t.length <= 1)
        return;
      let n = !1, r = !1;
      z(t, (s, l) => {
        if (document.activeElement === s)
          return e.shiftKey ? l === 0 ? (t[t.length - 1].focus(), r = !0) : t[l - 1].focus() : (l === t.length - 1 ? t[0].focus() : t[l + 1].focus(), l === t.length - 2 && (r = !0)), n = !0, !1;
      }), n || (e.shiftKey ? t[t.length - 2].focus() : t[0].focus()), r ? this.setFocusToActivePanel() : this.removeFocusFromActivePanel();
    },
    setWorkWithKeyboard() {
      this.isWorkWithKeyboard = !0;
    },
    setWorkWithoutKeyboard() {
      this.isWorkWithKeyboard = !1;
    },
    setListenerForPressEscapeButton() {
      document.addEventListener("keydown", this.pressEscapeButton);
    },
    destroyListenerForPressEscapeButton() {
      document.removeEventListener("keydown", this.pressEscapeButton);
    },
    pressEscapeButton(e) {
      e.keyCode === X.escape && this.$emit("closePopup", !0);
    }
  },
  render() {
    return c("div", {
      class: ["pux_datepicker__calendar", `pux_datepicker__calendar_${this.panel.toLowerCase()}`],
      role: "region",
      "aria-labelledby": this.idForHeaderParent,
      onClick: (e) => e.stopPropagation()
    }, [
      c("div", {
        id: this.idForHeaderParent,
        class: "a_sr_only",
        role: "header"
      }, [
        c("div", {
          id: this.idForHeader,
          "aria-live": "polite"
        }, [
          this.panel === "DATE" && c("span", null, this.months[this.calendarMonth]),
          (this.panel === "DATE" || this.panel === "MONTH") && c("span", null, this.calendarYear),
          this.panel === "YEAR" && c("span", null, this.yearHeader),
          this.panel === "TIME" && c("span", null, this.timeHeader)
        ]),
        c("div", null, this.suffixForHeader)
      ]),
      c("div", {
        class: "pux_datepicker__calendar__header"
      }, [
        c("div", null, [
          this.panel !== "TIME" && c("button", {
            class: "pux_datepicker__icon_last_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonLastYear,
            innerHTML: "&laquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconYear(-1);
            }
          }),
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__icon_last_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonLastMonth,
            innerHTML: "&lsaquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconMonth(-1);
            }
          })
        ]),
        c("div", null, [
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__current_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonCurrentMonth,
            onClick: this.handleBtnMonth
          }, this.months[this.calendarMonth]),
          (this.panel === "DATE" || this.panel === "MONTH") && c("button", {
            class: "pux_datepicker__current_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonCurrentYear,
            onClick: this.handleBtnYear
          }, this.calendarYear),
          this.panel === "YEAR" && c("span", {
            class: "pux_datepicker__current_year"
          }, this.yearHeader),
          this.panel === "TIME" && c("span", null, [
            this.type === "time" ? c("span", {
              class: "pux_datepicker__time_header"
            }, this.timeHeader) : c("button", {
              class: "pux_datepicker__time_header pux_datepicker__calendar__tab",
              type: "button",
              ariaLabel: this.ariaLabelForButtonToDays,
              onClick: this.handleTimeHeader
            }, this.timeHeader)
          ])
        ]),
        c("div", null, [
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__icon_next_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonNextMonth,
            innerHTML: "&rsaquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconMonth(1);
            }
          }),
          this.panel !== "TIME" && c("button", {
            class: "pux_datepicker__icon_next_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonNextYear,
            innerHTML: "&raquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconYear(1);
            }
          })
        ])
      ]),
      c("div", {
        class: "pux_datepicker__calendar__content",
        role: "application"
      }, [
        c(GE, {
          ref: "panelDate",
          id: this.id,
          style: this.panel !== "DATE" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "DATE"
          },
          tabindex: 0,
          value: this.value,
          dateFormat: this.dateFormat,
          calendarMonth: this.calendarMonth,
          calendarYear: this.calendarYear,
          startAt: this.startAt,
          endAt: this.endAt,
          firstDayOfWeek: this.firstDayOfWeek,
          disabledDate: this.isDisabledDate,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectDate,
          onHandleIconMonth: this.handleIconMonth
        }),
        c(zE, {
          ref: "panelYear",
          id: this.id,
          style: this.panel !== "YEAR" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "YEAR"
          },
          value: this.value,
          disabledYear: this.isDisabledYear,
          firstYear: this.firstYear,
          onSelect: this.selectYear,
          onHandleIconYear: this.handleIconYear
        }),
        c(KE, {
          ref: "panelMonth",
          id: this.id,
          style: this.panel !== "MONTH" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "MONTH"
          },
          value: this.value,
          disabledMonth: this.isDisabledMonth,
          calendarYear: this.calendarYear,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectMonth,
          onHandleIconYear: this.handleIconYear
        }),
        c(jE, {
          ref: "panelTime",
          id: this.id,
          style: this.panel !== "TIME" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "TIME"
          },
          minuteStep: this.minuteStep,
          value: this.value,
          disabledTime: this.isDisabledTime,
          timeType: this.timeType,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectTime
        })
      ])
    ]);
  }
}, h1 = {
  name: "ADatepickerIcon",
  computed: {
    svgHtml() {
      return `<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 200 200" class="a_datepicker__calendar_icon">
        <rect x="13" y="29" rx="14" ry="14" width="174" height="158" fill="transparent"></rect> 
        <line x1="46" x2="46" y1="8" y2="50"></line> <line x1="154" x2="154" y1="8" y2="50"></line> 
        <line x1="13" x2="187" y1="70" y2="70"></line> 
        <text x="50%" y="135" font-size="90" stroke-width="1" text-anchor="middle" dominant-baseline="middle">${this.todayInDayFormat}</text>
      </svg>`;
    },
    todayInDayFormat() {
      return (/* @__PURE__ */ new Date()).getDate();
    }
  },
  render() {
    return c("span", {
      ariaHidden: !0,
      innerHTML: this.svgHtml
    });
  }
};
function A1(e, {
  currentLanguage: t = _(() => ({})),
  popupVisible: n = B(!1)
}) {
  const r = d(e, "extra"), s = d(e, "id"), l = d(e, "placeholder"), o = d(e, "range"), u = d(e, "type"), h = d(e, "width"), A = _(() => it(l.value) ? Bt({ placeholder: l.value, extra: r.value }) : o.value ? t.value.placeholder.dateRange : u.value === "time" ? t.value.placeholder.time : t.value.placeholder.date), E = _(() => `${s.value}_panel`), p = _(() => [
    `${E.value}_0`,
    `${E.value}_1`
  ]), T = _(() => `${!n.value}`), S = _(() => `${n.value}`), b = _(() => `${s.value}_calendar`), L = _(() => yn(h.value) || it(h.value) && /^\d+$/.test(h.value) ? h.value + "px" : h.value), I = _(() => String(u.value).toLowerCase());
  return {
    ariaExpandedForCalendar: S,
    ariaHiddenForCalendar: T,
    idForCalendar: b,
    idForPanel: E,
    idsForPanelRange: p,
    innerPlaceholder: A,
    innerType: I,
    widthLocal: L
  };
}
function E1(e, { emit: t }, {
  calendarPanelRef: n = B(void 0),
  changeModel: r = () => {
  },
  closePopover: s = () => {
  },
  setCloseFocus: l = () => {
  }
}) {
  const o = d(e, "range"), u = d(e, "confirm"), h = d(e, "disabled"), A = d(e, "modelValue"), E = d(e, "formatSave"), p = d(e, "editable"), T = d(e, "format"), S = d(e, "type"), b = B(null), L = B(null), I = () => {
    b.value = o.value ? [null, null] : null;
  }, v = (ne) => !!WE(ne, T.value, E.value), R = (ne) => {
    try {
      return xn(ne, E.value).isValid() && xn(ne, E.value).format(T.value) || "";
    } catch {
      return "";
    }
  }, g = (ne) => {
    try {
      return !!xn(ne, E.value).isValid();
    } catch {
      return !1;
    }
  }, D = (ne) => nu(T.value) && typeof this.format.stringify == "function" ? T.value.stringify(ne) : ru(ne, T.value), w = _(() => L.value !== null ? L.value : o.value ? "" : v(A.value) ? R(A.value) : ""), M = (ne, H) => Hd(ne) && Hd(H) && ne.getTime() === H.getTime(), P = (ne, H) => Array.isArray(ne) && Array.isArray(H) && ne.length === H.length && ne.every((Q, re) => M(Q, H[re])), F = (ne) => {
    const H = o.value ? "" : (
      // TODO: range this.currentValue.map(date2value)
      ru(b.value, E.value)
    );
    r({
      model: H
    }), t(ne, H);
  }, C = (ne = !1) => u.value && !ne || h.value || (o.value ? P(A.value, b.value) : M(A.value, b.value)) ? !1 : (F("change"), !0), k = (ne) => {
    ne && ne.stopPropagation();
    const H = o.value ? [null, null] : null;
    b.value = H, C(!0), t("clear");
  }, W = (ne) => {
    b.value = ne, C() && s(), l();
  }, K = (ne, H) => {
    b.value = ne, C() && H && s(), H && l();
  }, le = (ne) => {
    b.value[0] = ne, b.value[1] && C();
  }, te = (ne) => {
    b.value[1] = ne, b.value[0] && C();
  }, _e = (ne) => {
    le(ne);
  }, ae = (ne) => {
    te(ne);
  }, oe = (ne) => nu(T.value) && typeof T.value.parse == "function" ? T.value.parse(ne) : WE(ne, T.value, E.value), Le = (ne) => {
    try {
      return xn(ne, T.value).isValid() && xn(ne, T.value).format() || null;
    } catch {
      return null;
    }
  }, We = (ne) => {
    try {
      return xn(ne, E.value).isValid() && xn(ne, E.value).format() || null;
    } catch {
      return null;
    }
  }, Se = () => {
    if (p.value && L.value !== null) {
      let ne = w.value;
      const H = n.value.isDisabledTime;
      if (!ne) {
        k();
        return;
      }
      if (o.value)
        return;
      S.value === "time" && (ne = `${xn().format("DD.MM.YYYY")} ${ne}`);
      const Q = Le(ne);
      if (Q && !H(Q, null, null)) {
        b.value = Q, C(!0), s();
        return;
      }
      t("inputError", ne);
    }
  }, se = () => {
    n.value.setFocusToActivePanelFromParent();
  };
  return {
    clearDate: k,
    confirmDate: () => {
      (o.value ? d1(b.value) : Lr(b.value)) && C(!0), F("confirm"), s();
    },
    currentValue: b,
    emitDate: F,
    handleChange: Se,
    handleInput: (ne) => {
      L.value = ne.target.value;
    },
    handleKeydown: (ne) => {
      const H = ne.keyCode;
      H === X.tab || H === X.enter ? (Se(), L.value = null, s()) : (H === X.arrowUp || H === X.arrowDown) && (se(), ne.stopPropagation(), ne.preventDefault());
    },
    initCurrentValue: I,
    onModelValueChange: (ne) => {
      o.value ? b.value = [null, null] : b.value = g(ne) ? We(ne) : null;
    },
    parse: oe,
    selectDate: W,
    selectEndDate: te,
    selectEndTime: ae,
    selectStartDate: le,
    selectStartTime: _e,
    selectTime: K,
    stringify: D,
    text: w,
    updateDate: C,
    userInput: L
  };
}
const p1 = {
  en: {
    days: [
      {
        shortName: "Sun",
        longName: "Sunday"
      },
      {
        shortName: "Mon",
        longName: "Monday"
      },
      {
        shortName: "Tue",
        longName: "Tuesday"
      },
      {
        shortName: "Wed",
        longName: "Wednesday"
      },
      {
        shortName: "Thu",
        longName: "Thursday"
      },
      {
        shortName: "Fri",
        longName: "Friday"
      },
      {
        shortName: "Sat",
        longName: "Saturday"
      }
    ],
    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    pickers: ["next 7 days", "next 30 days", "previous 7 days", "previous 30 days"],
    placeholder: {
      date: "Enter date in format DD.MM.YYYY",
      time: "Enter time in format HH:MM",
      dateRange: "Select Date Range",
      regionDate: "Date picker",
      regionTime: "Time picker"
    },
    today: "today",
    buttons: {
      lastYear: "Last year",
      lastYears: "Last 10 years",
      nextYear: "Next year",
      nextYears: "Next 10 years",
      lastMonth: "Last month",
      nextMonth: "Next month",
      monthsView: "Show detailed month view",
      toDaysView: "Switch to the day selection",
      toMonthsView: "Switch to the month selection",
      toYearsView: "switch to the selection of the years"
    },
    hours: "Hours",
    minutes: "Minutes",
    seconds: "Seconds",
    headerYears: (e, t) => `${e} to ${t}`
  },
  ru: {
    days: [
      {
        shortName: "Вс",
        longName: "Воскресенье"
      },
      {
        shortName: "Пн",
        longName: "Понедельник"
      },
      {
        shortName: "Вт",
        longName: "Вторник"
      },
      {
        shortName: "Ср",
        longName: "Среда"
      },
      {
        shortName: "Чт",
        longName: "Четверг"
      },
      {
        shortName: "Пт",
        longName: "Пятница"
      },
      {
        shortName: "Сб",
        longName: "Суббота"
      }
    ],
    months: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
    pickers: ["след. 7 дней", "след. 30 дней", "прош. 7 дней", "прош. 30 дней"],
    placeholder: {
      date: "Введите дату в формате ДД.ММ.ГГГГ",
      time: "Enter время in format ЧЧ.ММ",
      dateRange: "Выберите период",
      regionDate: "Выбор даты",
      regionTime: "Выбор времени"
    },
    today: "Сегодня",
    buttons: {
      lastYear: "Предыдущий год",
      lastYears: "Предыдущие 10 лет",
      nextYear: "Следующий год",
      nextYears: "Следующие 10 лет",
      lastMonth: "Предыдущий месяц",
      nextMonth: "Следующий месяц",
      toDaysView: "Перейти к выбору дня",
      toMonthsView: "Перейти к выбору месяца",
      toYearsView: "Перейти к выбору года"
    },
    hours: "Часы",
    minutes: "Минуты",
    seconds: "Секунды",
    headerYears: (e, t) => `с ${e} по ${t}`
  },
  de: {
    days: [
      {
        shortName: "So",
        longName: "Sontag"
      },
      {
        shortName: "Mo",
        longName: "Montag"
      },
      {
        shortName: "Di",
        longName: "Dienstag"
      },
      {
        shortName: "Mi",
        longName: "Mittwoch"
      },
      {
        shortName: "Do",
        longName: "Donnerstag"
      },
      {
        shortName: "Fr",
        longName: "Freitag"
      },
      {
        shortName: "Sa",
        longName: "Samstag"
      }
    ],
    months: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
    pickers: ["nächste 7 Tage", "nächste 30 Tage", "vorige 7 Tage", "vorige 30 Tage"],
    placeholder: {
      date: "Datum im Format TT.MM.JJJJ eingeben",
      time: "Zeit im Format HH.MM eingeben",
      dateRange: "Zeitraum auswählen",
      regionDate: "Datumsauswahl",
      regionTime: "Zeitauswahl"
    },
    today: "Heute",
    buttons: {
      lastYear: "Voriges Jahr",
      lastYears: "Vorige 10 Jahre",
      nextYear: "Nächstes Jahr",
      nextYears: "Nächste 10 Jahre",
      lastMonth: "Voriger Monat",
      nextMonth: "Nächster Monat",
      toDaysView: "Zur Auswahl der Tage wechseln",
      toMonthsView: "Zur Auswahl der Monate wechseln",
      toYearsView: "Zur Auswahl der Jahre wechseln"
    },
    hours: "Stunden",
    minutes: "Minuten",
    seconds: "Sekunden",
    headerYears: (e, t) => `${e} bis ${t}`
  }
};
function T1(e) {
  const t = d(e, "languages"), n = d(e, "lang"), r = _(() => ({
    ...p1,
    ...t.value
  }));
  return {
    currentLanguage: _(() => r.value[n.value])
  };
}
function m1(e, {
  calendarRef: t = B(void 0),
  focusByCloseRef: n = B(void 0),
  inputRef: r = B(void 0)
}) {
  const s = d(e, "placement"), l = d(e, "disabled"), o = B(void 0), u = B(void 0), h = () => {
    document.addEventListener("click", L);
  }, A = () => {
    document.removeEventListener("click", L);
  }, E = () => {
    !o.value && !l.value && r.value && t.value && (o.value = bl(
      r.value,
      t.value,
      () => {
        t.value && r.value && vl(
          r.value,
          t.value,
          {
            placement: s.value,
            middleware: [
              Il(),
              Ll({ limiter: vu() })
            ]
          }
        ).then(({ x: I, y: v }) => {
          Object.assign(t.value.style, {
            left: `${I}px`,
            top: `${v}px`
          });
        });
      }
    ), setTimeout(() => {
      h();
    }, 300));
  }, p = () => {
    n.value && n.value.focus && n.value.focus();
  }, T = () => {
    o.value && (o.value(), o.value = void 0);
  }, S = (I) => {
    A(), T(), u.value = !1, I && p();
  }, b = () => {
    u.value = !0;
  };
  function L(I) {
    t.value.contains(I.target) || S();
  }
  return _p(() => {
    T(), A();
  }), {
    closePopover: S,
    destroyPopover: T,
    initCalendar: b,
    openPopoverWithFloatingUi: E,
    popupVisible: u,
    setCloseFocus: p
  };
}
function S1() {
  const e = B(void 0), t = B(void 0), n = B(void 0), r = B(void 0), s = B(void 0);
  return {
    calendarRef: e,
    calendarPanelRef: t,
    calendarPanel2Ref: n,
    focusByCloseRef: s,
    inputRef: r
  };
}
const tf = {
  props: {
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_ui_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      required: !1
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ]
}, cd = {
  date: {
    value2date: (e) => Lr(e) ? new Date(e) : null,
    date2value: (e) => e
  },
  timestamp: {
    value2date: (e) => Lr(e) ? new Date(e) : null,
    date2value: (e) => e && new Date(e).getTime()
  }
}, ni = {
  name: "ADatepicker",
  mixins: [
    tf
  ],
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    appendToBody: {
      type: Boolean,
      default: !1
    },
    clearable: {
      type: Boolean,
      default: !0
    },
    confirm: {
      type: Boolean,
      default: !1
    },
    confirmText: {
      type: String,
      default: "OK"
    },
    dateFormat: {
      type: String,
      // format the time header and date tooltip
      default: void 0
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    editable: {
      type: Boolean,
      default: !0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    firstDayOfWeek: {
      type: Number,
      required: !1,
      default: 1,
      validator: (e) => e >= 1 && e <= 7
    },
    format: {
      type: [String, Object],
      default: "DD.MM.YYYY"
    },
    formatSave: {
      type: String,
      required: !1,
      default: "YYYY-MM-DD"
    },
    iconDay: {
      type: [Number, String],
      default: void 0
    },
    inputAttr: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: "pux_datepicker__input"
    },
    inputName: {
      type: String,
      default: "date"
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !1
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    lang: {
      type: String,
      default: "de",
      required: !1
    },
    languages: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: void 0
    },
    placeholder: {
      type: String,
      default: null
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => gr.indexOf(e) !== -1
    },
    popupStyle: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    range: {
      type: Boolean,
      default: !1
    },
    rangeSeparator: {
      type: String,
      default: "~"
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    shortcuts: {
      type: [Boolean, Array],
      default: !0
    },
    type: {
      type: String,
      default: "date"
      // ["date", "datetime"] zendy added "month", "year", mxie added "time"
    },
    valueType: {
      default: "format",
      validator: function(e) {
        return ["timestamp", "format", "date"].indexOf(e) !== -1 || nu(e);
      }
    },
    width: {
      type: [String, Number],
      default: null
    }
  },
  emits: [
    "blur",
    "change",
    "clear",
    "confirm",
    "focus",
    "input",
    "inputError",
    "changeCalendarMonth",
    "changeCalendarYear"
  ],
  setup(e, t) {
    const n = d(e, "modelValue"), {
      attributesToExcludeFromRender: r
    } = Ct(e), {
      calendarRef: s,
      calendarPanelRef: l,
      calendarPanel2Ref: o,
      focusByCloseRef: u,
      inputRef: h
    } = S1(), {
      componentStyleHide: A
    } = Xt(e), {
      ariaDescribedbyLocal: E,
      changeModel: p,
      clearModel: T,
      errorsId: S,
      helpTextId: b,
      htmlIdLocal: L,
      isErrors: I,
      isModel: v,
      onBlur: R,
      onFocus: g
    } = Yt(e, t), {
      isAutofill: D
    } = of({ inputRef: h }), {
      currentLanguage: w
    } = T1(e), {
      closePopover: M,
      destroyPopover: P,
      initCalendar: F,
      openPopoverWithFloatingUi: C,
      popupVisible: k,
      setCloseFocus: W
    } = m1(e, {
      calendarRef: s,
      focusByCloseRef: u,
      inputRef: h
    }), {
      ariaExpandedForCalendar: K,
      ariaHiddenForCalendar: le,
      idForCalendar: te,
      idForPanel: _e,
      idsForPanelRange: ae,
      innerPlaceholder: oe,
      innerType: Le,
      widthLocal: We
    } = A1(e, {
      currentLanguage: w,
      popupVisible: k
    }), {
      clearDate: Se,
      confirmDate: se,
      currentValue: Oe,
      emitDate: ye,
      handleChange: je,
      handleInput: he,
      handleKeydown: ne,
      initCurrentValue: H,
      onModelValueChange: Q,
      parse: re,
      selectDate: Ie,
      selectEndDate: Ce,
      selectEndTime: xe,
      selectStartDate: Xe,
      selectStartTime: Fe,
      selectTime: Pe,
      stringify: at,
      text: He,
      updateDate: st,
      userInput: Ze
    } = E1(e, t, {
      calendarPanelRef: l,
      changeModel: p,
      closePopover: M,
      setCloseFocus: W
    }), At = () => {
      h.value && h.value.blur();
    };
    return H(), rt(n, Q, {
      immediate: !0
    }), {
      ariaDescribedbyLocal: E,
      ariaExpandedForCalendar: K,
      ariaHiddenForCalendar: le,
      attributesToExcludeFromRender: r,
      blur: At,
      calendarPanel2Ref: o,
      calendarPanelRef: l,
      calendarRef: s,
      changeModel: p,
      clearDate: Se,
      clearModel: T,
      parse: re,
      closePopover: M,
      componentStyleHide: A,
      confirmDate: se,
      stringify: at,
      currentLanguage: w,
      currentValue: Oe,
      destroyPopover: P,
      emitDate: ye,
      errorsId: S,
      text: He,
      focusByCloseRef: u,
      handleChange: je,
      handleInput: he,
      handleKeydown: ne,
      helpTextId: b,
      htmlIdLocal: L,
      idForCalendar: te,
      idForPanel: _e,
      idsForPanelRange: ae,
      initCalendar: F,
      innerPlaceholder: oe,
      innerType: Le,
      inputRef: h,
      isAutofill: D,
      isErrors: I,
      isModel: v,
      onBlur: R,
      onFocus: g,
      openPopoverWithFloatingUi: C,
      popupVisible: k,
      selectDate: Ie,
      selectEndDate: Ce,
      selectEndTime: xe,
      selectStartDate: Xe,
      selectStartTime: Fe,
      selectTime: Pe,
      setCloseFocus: W,
      updateDate: st,
      userInput: Ze,
      widthLocal: We
    };
  },
  computed: {
    transform() {
      const e = this.valueType;
      return nu(e) ? { ...cd.date, ...e } : e === "format" ? {
        value2date: this.parse.bind(this),
        date2value: this.stringify.bind(this)
      } : cd[e] || cd.date;
    },
    showClearIcon() {
      return !this.disabled && this.clearable && this.text;
    },
    innerShortcuts() {
      if (Array.isArray(this.shortcuts))
        return this.shortcuts;
      if (this.shortcuts === !1)
        return [];
      const e = this.currentLanguage.pickers;
      return [
        {
          text: e[0],
          onClick(n) {
            n.currentValue = [/* @__PURE__ */ new Date(), new Date(Date.now() + 3600 * 1e3 * 24 * 7)], n.updateDate(!0);
          }
        },
        {
          text: e[1],
          onClick(n) {
            n.currentValue = [/* @__PURE__ */ new Date(), new Date(Date.now() + 3600 * 1e3 * 24 * 30)], n.updateDate(!0);
          }
        },
        {
          text: e[2],
          onClick(n) {
            n.currentValue = [new Date(Date.now() - 3600 * 1e3 * 24 * 7), /* @__PURE__ */ new Date()], n.updateDate(!0);
          }
        },
        {
          text: e[3],
          onClick(n) {
            n.currentValue = [new Date(Date.now() - 3600 * 1e3 * 24 * 30), /* @__PURE__ */ new Date()], n.updateDate(!0);
          }
        }
      ];
    },
    innerDateFormat() {
      return this.dateFormat ? this.dateFormat : typeof this.format != "string" ? "YYYY-MM-DD" : this.innerType === "date" ? this.format : this.format.replace(/[Hh]+.*[msSaAZ]|\[.*?\]/g, "").trim() || "YYYY-MM-DD";
    }
  },
  watch: {
    popupVisible(e) {
      e ? this.initCalendar() : (this.userInput = null, this.blur());
    }
  },
  methods: {
    isValidValue(e) {
      const { value2date: t } = this.transform;
      return Lr(t(e));
    },
    isValidRangeValue(e) {
      const { value2date: t } = this.transform;
      return Array.isArray(e) && e.length === 2 && this.isValidValue(e[0]) && this.isValidValue(e[1]) && t(e[1]).getTime() >= t(e[0]).getTime();
    },
    selectRange(e) {
      typeof e.onClick == "function" ? e.onClick(this) !== !1 && this.closePopover() : (this.currentValue = [new Date(e.start), new Date(e.end)], this.updateDate(!0), this.closePopover());
    },
    handleBlur(e) {
      this.$emit("blur", e);
    },
    handleFocus(e) {
      this.initCalendar(), this.$emit("focus", e);
    }
  },
  render() {
    return this.isRender ? this.readonly ? c(Vn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.text,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: this.type
    }) : c("div", {
      ...this.$attrs,
      class: "a_form_element__container",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel || this.isAutofill
        }]
      }, [
        this.label && c(Mt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: this.isLabelFloat,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            class: ["pux_datepicker", {
              pux_datepicker_range: this.range,
              disabled: this.disabled
            }],
            style: { width: this.widthLocal },
            onMousedown: this.initCalendar,
            onTouchstart: this.initCalendar
          }, [
            c("div", {
              class: "pux_datepicker__input_wrapper",
              role: "application"
            }, [
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                class: [
                  "a_form_control pux_datepicker__input",
                  this.inputClass,
                  {
                    a_form_control_invalid: this.isErrors
                  }
                ],
                name: this.inputName,
                type: "text",
                autocomplete: "off",
                disabled: this.disabled,
                readonly: !this.editable,
                value: this.text,
                placeholder: this.innerPlaceholder,
                ariaHaspopup: !0,
                "aria-owns": this.idForCalendar,
                ...this.inputAttr,
                onKeydown: this.handleKeydown,
                onFocus: this.handleFocus,
                onBlur: this.handleBlur,
                onInput: this.handleInput,
                onChange: this.handleChange
              }),
              this.showClearIcon && c("span", {
                class: "pux_datepicker__input_wrapper__append pux_datepicker__input_wrapper__clear_wrapper",
                ariaHidden: !0,
                onMousedown: this.clearDate
              }, [
                c("i", {
                  class: "pux_datepicker__input__icon pux_datepicker__input__clear_icon"
                })
              ]),
              c("span", {
                class: "pux_datepicker__input_wrapper__append"
              }, [
                c(h1)
              ])
            ]),
            c(ia, {
              to: "body"
            }, [
              this.popupVisible && Pt(c("div", {
                ref: "calendarRef",
                id: this.idForCalendar,
                class: "pux_datepicker__popup",
                ariaHidden: this.ariaHiddenForCalendar,
                ariaExpanded: this.ariaExpandedForCalendar,
                style: this.popupStyle
              }, [
                !!(this.range && this.innerShortcuts.length) && c("div", {
                  class: "pux_datepicker__shortcuts_wrapper"
                }, [
                  this.innerShortcuts.map((e, t) => c("button", {
                    key: t,
                    class: "pux_datepicker__shortcuts_wrapper__shortcuts",
                    type: "button",
                    onClick: () => this.selectRange(e)
                  }, e.text))
                ]),
                this.range ? c("div", {
                  class: "pux_datepicker__range_wrapper"
                }, [
                  c(dd, {
                    ref: "calendarPanelRef",
                    id: this.idsForPanelRange[0],
                    style: "box-shadow: 1px 0 rgba(0, 0, 0, .1);",
                    index: 0,
                    type: this.innerType,
                    dateFormat: this.innerDateFormat,
                    value: this.currentValue[0],
                    endAt: this.currentValue[1],
                    startAt: null,
                    visible: this.popupVisible,
                    currentLanguage: this.currentLanguage,
                    firstDayOfWeek: this.firstDayOfWeek,
                    onSelectDate: this.selectStartDate,
                    onSelectTime: this.selectStartTime,
                    onClosePopup: this.closePopover
                  }),
                  c(dd, {
                    ref: "calendarPanel2Ref",
                    id: this.idsForPanelRange[1],
                    index: 1,
                    type: this.innerType,
                    dateFormat: this.innerDateFormat,
                    value: this.currentValue[1],
                    endAt: null,
                    startAt: this.currentValue[0],
                    visible: this.popupVisible,
                    currentLanguage: this.currentLanguage,
                    firstDayOfWeek: this.firstDayOfWeek,
                    onSelectDate: this.selectEndDate,
                    onSelectTime: this.selectEndTime,
                    onClosePopup: this.closePopover
                  })
                ]) : c(dd, {
                  ref: "calendarPanelRef",
                  id: this.idForPanel,
                  index: -1,
                  type: this.innerType,
                  dateFormat: this.innerDateFormat,
                  value: this.currentValue,
                  visible: this.popupVisible,
                  currentLanguage: this.currentLanguage,
                  firstDayOfWeek: this.firstDayOfWeek,
                  onSelectDate: this.selectDate,
                  onSelectTime: this.selectTime,
                  onClosePopup: this.closePopover
                }),
                this.confirm && c("div", {
                  class: "pux_datepicker__footer"
                }, [
                  c("button", {
                    class: "pux_datepicker__footer__btn pux_datepicker__footer__btn_confirm",
                    type: "button",
                    onClick: this.confirmDate
                  }, this.confirmText)
                ])
              ]), [
                [ol, {
                  mounted: this.openPopoverWithFloatingUi
                }]
              ])
            ]),
            c("div", {
              ref: "focusByCloseRef",
              ariaHidden: !0,
              tabindex: -1
            })
          ])
          /*
           * this.isClearButtonLocal && h(AFormElementBtnClear, {
           *   disabled: this.disabled,
           *   clearButtonClass: this.clearButtonClass,
           *   onClear: this.clearModel,
           * }),
           */
        ]),
        c(ln, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(sn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function b1({
  idFrom: e = _(() => "")
}) {
  return {
    setFocusToFromInput: () => {
      const n = document.getElementById(e.value);
      n && n.focus();
    }
  };
}
function L1({
  htmlIdLocal: e = _(() => "")
}) {
  const t = _(() => `${e.value}_from`), n = _(() => `${e.value}_until`);
  return {
    idFrom: t,
    idUntil: n
  };
}
function I1(e, {
  htmlIdLocal: t = _(() => ""),
  idFrom: n = _(() => ""),
  idUntil: r = _(() => "")
}) {
  const s = d(e, "inputAttributes"), l = d(e, "inputAttributesFrom"), o = d(e, "inputAttributesUntil"), u = _(() => `${t.value}_label`), h = _(() => ({
    "aria-labelledby": `${u.value} ${n.value}`,
    ...s.value,
    ...l.value
  })), A = _(() => ({
    "aria-labelledby": `${u.value} ${r.value}`,
    ...s.value,
    ...o.value
  }));
  return {
    inputAttributesFromLocal: h,
    inputAttributesUntilLocal: A
  };
}
function v1(e, {
  changeModel: t = () => ({})
}) {
  const n = d(e, "keyFrom"), r = d(e, "keyUntil"), s = d(e, "modelValue"), l = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[n.value];
  }), o = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[r.value];
  });
  return {
    changeModelFrom: (A) => {
      const E = pe(s.value) || {};
      E[n.value] = A, t({ model: E });
    },
    changeModelUntil: (A) => {
      const E = pe(s.value) || {};
      E[r.value] = A, t({ model: E });
    },
    modelValueFrom: l,
    modelValueUntil: o
  };
}
function y1(e) {
  const t = d(e, "readonlyDefault"), n = d(e, "readonlyDefaultFrom"), r = d(e, "readonlyDefaultUntil"), s = _(() => we(n.value) ? t.value : n.value), l = _(() => we(r.value) ? t.value : r.value);
  return {
    readonlyDefaultFromLocal: s,
    readonlyDefaultUntilLocal: l
  };
}
const g1 = {
  name: "ADatepickerRange",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    appendToBody: {
      type: Boolean,
      default: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearable: {
      type: Boolean,
      default: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    disabledFrom: {
      type: Boolean,
      required: !1
    },
    disabledUntil: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    firstDayOfWeek: {
      type: Number,
      required: !1,
      default: 1,
      validator: (e) => e >= 1 && e <= 7
    },
    format: {
      type: [String, Object],
      default: "DD.MM.YYYY"
    },
    formatSave: {
      type: String,
      required: !1,
      default: "YYYY-MM-DD"
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconDay: {
      type: [Number, String],
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_datepicker_range_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesFrom: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesUntil: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: "pux_datepicker__input"
    },
    inputName: {
      type: String,
      default: "date"
    },
    inputWidth: {
      type: [Number, String],
      required: !1,
      default: 270
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyFrom: {
      tpe: String,
      required: !1,
      default: "from"
    },
    keyUntil: {
      tpe: String,
      required: !1,
      default: "until"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelFrom: {
      type: String,
      required: !1,
      default: "_A_DATEPICKER_RANGE_FROM_"
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    labelUntil: {
      type: String,
      required: !1,
      default: "_A_DATEPICKER_RANGE_UNTIL_"
    },
    lang: {
      type: String,
      default: "de",
      required: !1
    },
    modelUndefined: {
      required: !1,
      default: void 0
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholderFrom: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholderUntil: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => gr.indexOf(e) !== -1
    },
    popupStyle: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    readonlyDefaultFrom: {
      type: String,
      required: !1,
      default: void 0
    },
    readonlyDefaultUntil: {
      type: String,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    shortcuts: {
      type: [Boolean, Array],
      default: !0
    },
    type: {
      type: String,
      required: !1,
      default: "dateRange"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Ct(e), {
      componentStyleHide: r
    } = Xt(e), {
      changeModel: s,
      errorsId: l,
      helpTextId: o,
      htmlIdLocal: u,
      isErrors: h
    } = Yt(e, t), {
      changeModelFrom: A,
      changeModelUntil: E,
      modelValueFrom: p,
      modelValueUntil: T
    } = v1(e, {
      changeModel: s
    }), {
      idFrom: S,
      idUntil: b
    } = L1({
      htmlIdLocal: u
    }), {
      inputAttributesFromLocal: L,
      inputAttributesUntilLocal: I
    } = I1(e, {
      htmlIdLocal: u,
      idFrom: S,
      idUntil: b
    }), {
      setFocusToFromInput: v
    } = b1({
      idFrom: S
    }), {
      destroyEventBusClickLabel: R,
      initEventBusClickLabel: g
    } = uf({
      htmlIdLocal: u,
      clickLabel: v
    }), {
      readonlyDefaultFromLocal: D,
      readonlyDefaultUntilLocal: w
    } = y1(e);
    return g(), Ot(() => {
      R();
    }), {
      attributesToExcludeFromRender: n,
      changeModelFrom: A,
      changeModelUntil: E,
      componentStyleHide: r,
      errorsId: l,
      helpTextId: o,
      idFrom: S,
      idUntil: b,
      inputAttributesFromLocal: L,
      inputAttributesUntilLocal: I,
      isErrors: h,
      modelValueFrom: p,
      modelValueUntil: T,
      readonlyDefaultFromLocal: D,
      readonlyDefaultUntilLocal: w
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Vn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "dateRange",
      valueParentClass: "a_form_element_readonly_value_range"
    }, () => [
      c(ni, {
        id: this.idFrom,
        alwaysTranslate: this.alwaysTranslate,
        format: this.format,
        formatSave: this.formatSave,
        iconDay: this.iconDay,
        label: this.labelFrom,
        lang: this.lang,
        modelValue: this.modelValueFrom,
        readonly: !0,
        readonlyDefault: this.readonlyDefaultFromLocal,
        shortcuts: this.shortcuts,
        type: "date"
      }),
      c(ni, {
        id: this.idUntil,
        alwaysTranslate: this.alwaysTranslate,
        format: this.format,
        formatSave: this.formatSave,
        iconDay: this.iconDay,
        lang: this.lang,
        label: this.labelUntil,
        modelValue: this.modelValueUntil,
        readonly: !0,
        readonlyDefault: this.readonlyDefaultUntilLocal,
        shortcuts: this.shortcuts,
        type: "date"
      })
    ]) : c("div", {
      ...this.$attrs,
      class: "a_datepicker_range",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_invalid: this.isErrors
        }]
      }, [
        this.label && c(Mt, {
          id: this.idFrom,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: !1,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_datepicker_range__content"
        }, [
          c("div", {
            class: "a_datepicker_range__group a_datepicker_range__group_min"
          }, [
            c(Mt, {
              id: this.idFrom,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_datepicker_range__label a_datepicker_range__label_min",
              isLabelFloat: !1,
              label: this.labelFrom,
              isError: this.isErrors
            }),
            c(ni, {
              id: this.idFrom,
              ref: "from",
              alwaysTranslate: this.alwaysTranslate,
              inputAttr: this.inputAttributesFromLocal,
              modelValue: this.modelValueFrom,
              formatSave: this.formatSave,
              firstDayOfWeek: this.firstDayOfWeek,
              appendToBody: this.appendToBody,
              popupStyle: this.popupStyle,
              iconDay: this.iconDay,
              inputName: this.inputName,
              placement: this.placement,
              clearable: this.clearable,
              shortcuts: this.shortcuts,
              lang: this.lang,
              inputClass: this.inputClass,
              placeholder: this.placeholderFrom,
              disabled: this.disabled || this.disabledFrom,
              width: this.inputWidth,
              format: this.format,
              type: "date",
              onChange: this.changeModelFrom
            })
          ]),
          c("div", {
            class: "a_datepicker_range__group"
          }, [
            c(Mt, {
              id: this.idUntil,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_datepicker_range__label a_datepicker_range__label_max",
              isLabelFloat: !1,
              label: this.labelUntil,
              isError: this.isErrors
            }),
            c(ni, {
              id: this.idUntil,
              ref: "until",
              alwaysTranslate: this.alwaysTranslate,
              modelValue: this.modelValueUntil,
              formatSave: this.formatSave,
              firstDayOfWeek: this.firstDayOfWeek,
              appendToBody: this.appendToBody,
              popupStyle: this.popupStyle,
              iconDay: this.iconDay,
              inputName: this.inputName,
              placement: this.placement,
              clearable: this.clearable,
              shortcuts: this.shortcuts,
              lang: this.lang,
              inputClass: this.inputClass,
              placeholder: this.placeholderUntil,
              disabled: this.disabled || this.disabledUntil,
              width: this.inputWidth,
              format: this.format,
              type: "date",
              inputAttr: this.inputAttributesUntilLocal,
              onChange: this.changeModelUntil
            })
          ]),
          c(ln, {
            alwaysTranslate: this.alwaysTranslate,
            class: "a_datepicker_range__help_text",
            id: this.helpTextId,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(sn, {
            id: this.errorsId,
            alwaysTranslate: this.alwaysTranslate,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
};
function R1(e, {
  isOpen: t = B(!1)
}) {
  const n = d(e, "btnIconLeftLess"), r = d(e, "btnIconLeftMore"), s = d(e, "btnIconRightLess"), l = d(e, "btnIconRightMore"), o = d(e, "btnTextLess"), u = d(e, "btnTextMore"), h = d(e, "btnTitleLess"), A = d(e, "btnTitleMore"), E = d(e, "showLess"), p = B(void 0), T = _(() => t.value ? o.value : u.value), S = _(() => t.value ? h.value : A.value), b = _(() => t.value ? n.value : r.value), L = _(() => t.value ? s.value : l.value), I = _(() => t.value ? E.value : !0);
  return {
    btnIconLeft: b,
    btnIconRight: L,
    btnText: T,
    btnTitle: S,
    buttonRef: p,
    isButtonVisible: I
  };
}
function O1(e) {
  const t = d(e, "isOpenDefault"), n = B(void 0);
  return {
    initIsOpen: () => {
      n.value = t.value;
    },
    isOpen: n
  };
}
function C1(e, {
  isOpen: t = B(!1)
}) {
  const n = d(e, "htmlLess"), r = d(e, "htmlMore"), s = d(e, "safeHtmlLess"), l = d(e, "safeHtmlMore"), o = d(e, "textLess"), u = d(e, "textMore"), h = _(() => t.value ? r.value : n.value), A = _(() => t.value ? l.value : s.value), E = _(() => t.value ? u.value : o.value), p = _(() => !!(E.value || A.value || h.value));
  return {
    htmlLocal: h,
    isTextOrHtmlVisible: p,
    safeHtmlLocal: A,
    textLocal: E
  };
}
const N1 = [
  "a[href]:not([tabindex='-1'])",
  "button:not([disabled]):not([tabindex='-1'])",
  "area[href]:not([tabindex='-1'])",
  "input:not([disabled]):not([tabindex='-1'])",
  "select:not([disabled]):not([tabindex='-1'])",
  "textarea:not([disabled]):not([tabindex='-1'])",
  "iframe:not([tabindex='-1'])",
  "[tabindex]:not([tabindex='-1'])",
  "[contentEditable=true]:not([tabindex='-1'])"
], Ai = N1.join(", ");
function dde({ element: e, isMiddleOfScreen: t = !0, behavior: n = "smooth" }) {
  t ? window.scroll({
    top: e.offsetTop - window.innerHeight / 2,
    behavior: n
  }) : e.scrollIntoView();
}
function aa({ element: e, selector: t }) {
  const n = e || document.querySelector(t);
  n && (n.hasAttribute("tabindex") ? n.focus() : (n.setAttribute("tabindex", "-1"), n.focus(), n.removeAttribute("tabindex")));
}
function Tm(e) {
  const t = e.getBoundingClientRect();
  return t.width > 0 && t.height > 0;
}
function D1({ element: e } = {}) {
  const t = document.querySelectorAll(Ai), n = e || document.activeElement, r = Array.from(t).indexOf(n);
  if (r !== -1) {
    let s = r + 1;
    s >= t.length && (s = 0);
    let l = t[s];
    for (; s < t.length && !Tm(l); )
      s++, s >= t.length && (s = 0), l = t[s];
    s < t.length && l.focus();
  }
}
function B1({ element: e } = {}) {
  const t = document.querySelectorAll(Ai), n = e || document.activeElement, r = Array.from(t).indexOf(n);
  if (r !== -1) {
    let s = r - 1;
    s < 0 && (s = t.length - 1);
    let l = t[s];
    for (; s >= 0 && !Tm(l); )
      s--, s < 0 && (s = t.length - 1), l = t[s];
    s >= 0 && l.focus();
  }
}
function cde({ element: e }) {
  if (e.id)
    return `#${e.id}`;
  const t = [];
  for (; e; ) {
    const n = e.tagName;
    n === "BODY" || n === "HTML" ? t.unshift(n) : t.unshift(
      e.className ? `${n}.${e.className.replace(/\s+/g, ".")}` : n
    );
    const r = parent.children;
    r != null && r.length && r.length > 1 && (t[0] += `:nth-child(${Array.prototype.indexOf.call(r, e) + 1})`), e = e.parentElement;
  }
  return t.join(" > ");
}
function w1(e, { emit: t }, {
  isOpen: n = B(!1)
}) {
  const r = B(void 0);
  return {
    containerRef: r,
    toggleButton: () => {
      n.value = !n.value, t("toggle", { isOpen: n.value }), n.value && !window.isScrollDisabled && iu().then(
        () => aa({
          element: r.value
        })
      );
    }
  };
}
const fde = {
  name: "ADisclosure",
  inheritAttrs: !0,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    btnAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link a_p_0"
    },
    btnIconLeftLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconLeftMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnId: {
      type: String,
      required: !1,
      default: void 0
    },
    btnParentClass: {
      type: String,
      required: !1,
      default: "a_text_center"
    },
    btnTextLess: {
      type: String,
      required: !1,
      default: "_A_DISCLOSURE_LESS_"
    },
    btnTextMore: {
      type: String,
      required: !1,
      default: "_A_DISCLOSURE_MORE_"
    },
    btnTitleLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitleMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitlePlacement: {
      type: String,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    htmlLess: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlMore: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_disclosure_")
    },
    isBtnTitleHtml: {
      type: Boolean,
      required: !1
    },
    isOpenDefault: {
      type: Boolean,
      required: !1,
      default: !1
    },
    safeHtmlLess: {
      type: String,
      required: !1,
      default: void 0
    },
    safeHtmlMore: {
      type: String,
      required: !1,
      default: void 0
    },
    showLess: {
      type: Boolean,
      required: !1,
      default: !0
    },
    textLess: {
      type: String,
      required: !1,
      default: void 0
    },
    textMore: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      initIsOpen: r,
      isOpen: s
    } = O1(e), {
      htmlLocal: l,
      isTextOrHtmlVisible: o,
      safeHtmlLocal: u,
      textLocal: h
    } = C1(e, {
      isOpen: s
    }), {
      containerRef: A,
      toggleButton: E
    } = w1(e, t, {
      isOpen: s
    }), {
      btnIconLeft: p,
      btnIconRight: T,
      btnText: S,
      btnTitle: b,
      buttonRef: L,
      isButtonVisible: I
    } = R1(e, {
      isOpen: s
    });
    return r(), n({
      buttonRef: L,
      containerRef: A,
      isOpen: s,
      toggleButton: E
    }), {
      btnIconLeft: p,
      btnIconRight: T,
      btnText: S,
      btnTitle: b,
      buttonRef: L,
      containerRef: A,
      htmlLocal: l,
      isButtonVisible: I,
      isOpen: s,
      isTextOrHtmlVisible: o,
      safeHtmlLocal: u,
      textLocal: h,
      toggleButton: E
    };
  },
  render() {
    return c("div", {
      class: [
        "a_show_more",
        {
          a_show_more_open: this.isOpen
        }
      ]
    }, [
      c("div", {
        class: "a_show_more__wrapper"
      }, [
        c("div", {
          ref: "containerRef",
          id: this.id,
          ariaExpanded: this.isOpen,
          ...this.$attrs
        }, [
          this.isTextOrHtmlVisible && c(Ae, {
            alwaysTranslate: this.alwaysTranslate,
            html: this.htmlLocal,
            safeHtml: this.safeHtmlLocal,
            tag: "div",
            text: this.textLocal
          }),
          this.isOpen ? this.$slots.more && this.$slots.more({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          }) : this.$slots.less && this.$slots.less({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          })
        ])
      ]),
      this.isButtonVisible && c("div", {
        class: this.btnParentClass
      }, [
        c(me, {
          ref: "buttonRef",
          id: this.btnId,
          alwaysTranslate: this.alwaysTranslate,
          "aria-controls": this.id,
          class: [
            "a_show_more__button",
            this.btnClass
          ],
          disabled: this.disabled,
          iconLeft: this.btnIconLeft,
          iconRight: this.btnIconRight,
          isTitleHtml: this.isBtnTitleHtml,
          text: this.btnText,
          title: this.btnTitle,
          titlePlacement: this.btnTitlePlacement,
          type: "button",
          ...this.btnAttributes,
          onClick: this.toggleButton
        }, () => this.$slots.button && this.$slots.button({
          isButtonVisible: this.isButtonVisible,
          isOpen: this.isOpen
        }))
      ])
    ]);
  }
};
function P1(e) {
  const t = d(e, "action");
  return {
    attributesAction: _(() => {
      const r = {
        ...t.value,
        isHiddenCallback: void 0,
        classReplace: void 0
      };
      return t.value.classReplace ? r.class = t.value.classReplace : it(r.class) ? r.class += " a_dropdown__item" : nt(r.class) ? r.class.a_dropdown__item = !0 : r.class = "a_dropdown__item", r.type === "link" && (r.type = void 0), r;
    })
  };
}
const x1 = {
  name: "ADropdownAction",
  props: {
    action: {
      type: Object,
      required: !0
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      attributesAction: t
    } = P1(e);
    return {
      attributesAction: t
    };
  },
  render() {
    return this.action.type === "button" ? c("li", {
      class: this.action.liClass
    }, [
      c(ft, {
        ...this.attributesAction,
        alwaysTranslate: this.alwaysTranslate,
        isHidden: void 0,
        callback: void 0,
        classButton: void 0,
        classExtra: void 0,
        isConfirm: void 0,
        callbackLocal: void 0,
        onClick: this.action.callback
      })
    ]) : this.action.type === "divider" ? c("li", {
      class: [
        "a_dropdown__divider",
        this.action.liClass
      ]
    }) : this.action.type === "link" ? c("li", {
      class: this.action.liClass
    }, [
      c(Fu, {
        ...this.attributesAction,
        alwaysTranslate: this.alwaysTranslate,
        classButton: void 0,
        classExtra: void 0,
        isHidden: void 0,
        isConfirm: void 0,
        callbackLocal: void 0
      })
    ]) : this.action.type === "template" && this.action.slotName && this.$slots[this.action.slotName] ? this.$slots[this.action.slotName]({
      action: this.action
    }) : null;
  }
}, wa = B({});
function nf({ id: e, idRef: t } = {}) {
  const n = _(() => fd(t ? { id: t.value } : { id: e })), r = _(() => {
    let s = !1;
    return hn(wa.value) || z(wa.value, (l) => {
      if (l)
        return s = !0, !1;
    }), s;
  });
  return {
    closePopup: Wd,
    isCurrentPopupOpen: fd,
    isOnePopupOpen: r,
    isPopupOpen: n,
    openPopup: Vd,
    popupOpenIds: wa,
    togglePopup: F1
  };
}
function fd({ id: e }) {
  return !!wa.value[e];
}
function Vd({ id: e }) {
  wa.value[e] = !0;
}
function Wd({ id: e }) {
  e in wa.value && delete wa.value[e];
}
function F1({ id: e, statusOpen: t }) {
  we(t) ? wa.value[e] ? Wd({ id: e }) : Vd({ id: e }) : t ? Vd({ id: e }) : Wd({ id: e });
}
function mm({ actions: e }) {
  const t = wt(e, (s) => !s.isHidden), n = [];
  z(t, (s) => {
    (s.type !== "divider" || n.length > 0 && ci(n).type !== "divider") && n.push(s);
  });
  const r = ci(n);
  return r && r.type === "divider" && n.pop(), n;
}
function ko({ class1: e, class2: t, defaultValue: n = void 0 }) {
  return e ? t ? `${e} ${t}` : e : t || n;
}
function M1(e) {
  const t = d(e, "actions"), n = _(() => mm({
    actions: t.value
  })), r = _(() => n.value.length > 0);
  return {
    actionsFiltered: n,
    hasActions: r
  };
}
function q1(e, {
  eventsMenu: t = _(() => ({})),
  statusExpanded: n = B(!1),
  wasOpened: r = B(!1)
}) {
  const s = d(e, "buttonAttributes"), l = d(e, "buttonTag"), o = d(e, "disabled"), u = d(e, "dropdownAttributes"), h = d(e, "dropdownClass"), A = d(e, "id"), E = d(e, "menuWidth"), p = d(e, "persist"), T = _(() => s.value.id || A.value), S = _(() => {
    const v = pe(s.value);
    return v["aria-haspopup"] = "true", v["aria-expanded"] = n.value, l.value === "button" && (v.type = v.type || "button"), v;
  }), b = _(() => {
    const v = {};
    return o.value && (l.value === "button" ? v.disabled = !0 : l.value === "a" && (v.ariaDisabled = !0)), v;
  }), L = _(() => {
    const v = pe(u.value);
    return v.class = ["a_dropdown__menu", h.value, {
      a_dropdown__menu_show: n.value
    }], E.value && (v.style = `width: ${E.value}px`), md({}, v, t.value);
  }), I = _(() => n.value || p.value && r.value);
  return {
    idLocal: T,
    buttonAttributesDisabled: b,
    buttonAttributesLocal: S,
    dropdownAttributesLocal: L,
    isMenuRendered: I
  };
}
function $1(e) {
  const t = d(e, "buttonClass"), n = d(e, "class");
  return {
    buttonClassLocal: _(() => {
      let s = {};
      return t.value && (it(t.value) ? s[t.value] = !0 : nt(t.value) && (s = md(s, t.value))), n.value && (it(n.value) ? s[n.value] = !0 : nt(n.value) && (s = md(s, n.value))), s;
    })
  };
}
function k1(e, {
  onToggle: t = () => {
  },
  onKeydown: n = () => {
  },
  onOpen: r = () => {
  },
  onClose: s = () => {
  },
  timerCloseHover: l = B(void 0),
  triggerOpen: o = B(void 0)
}) {
  const u = d(e, "triggers"), h = _(() => {
    const S = {};
    return z(u.value, (b) => {
      S[b] = !0;
    }), S;
  }), A = _(() => {
    const S = {};
    return h.value.click && (S.onClick = t, S.onKeydown = n), h.value.focus && (S.onFocus = () => r({ trigger: "focus" })), h.value.hover && (S.onMouseenter = () => r({ trigger: "hover" }), S.onMouseleave = () => s({ trigger: "hover" })), S;
  }), E = () => {
    o.value === "hover" && clearTimeout(l.value);
  }, p = () => {
    s({ trigger: "hover" });
  }, T = _(() => {
    const S = {};
    return h.value.hover && (S.onMouseenter = E, S.onMouseleave = p), S;
  });
  return {
    eventsLocal: A,
    eventsMenu: T
  };
}
function U1(e, {
  dropdownRef: t = B(void 0)
}) {
  const n = d(e, "elementsForArrows");
  return {
    setFocusToFirstElement: () => {
      if (!t.value)
        return;
      const s = t.value.querySelectorAll(n.value);
      s.length !== 0 && s[0].focus();
    }
  };
}
function H1(e, {
  dropdownButtonRef: t = B(void 0),
  dropdownRef: n = B(void 0)
}) {
  const r = d(e, "floatingFlip"), s = d(e, "floatingShift"), l = d(e, "placement"), o = B(void 0), u = _(() => {
    var p, T;
    const E = [];
    return (p = r.value) != null && p.use && E.push(
      Il(r.value)
    ), (T = s.value) != null && T.use && E.push(
      Ll(s.value)
    ), E;
  });
  return {
    destroyPopover: () => {
      o.value && (o.value(), o.value = void 0);
    },
    startPopper: () => {
      !o.value && t.value.$el && n.value && (o.value = bl(
        t.value.$el,
        n.value,
        () => {
          !t.value.$el || !n.value || vl(
            t.value.$el,
            n.value,
            {
              placement: l.value,
              middleware: u.value
            }
          ).then(({ x: E, y: p }) => {
            Object.assign(n.value.style, {
              left: `${E}px`,
              top: `${p}px`
            });
          });
        }
      ));
    }
  };
}
function V1() {
  const e = B(void 0), t = B(void 0);
  return {
    dropdownButtonRef: e,
    dropdownRef: t
  };
}
const hd = B(!1);
function Sm() {
  return {
    closeDropdownGlobal: () => {
      hd.value = !1;
    },
    isDropdownGlobalOpen: hd,
    openDropdownGlobal: () => {
      hd.value = !0;
    }
  };
}
function W1(e, { emit: t }, {
  closePopup: n = () => {
  },
  dropdownButtonRef: r = B(void 0),
  dropdownRef: s = B(void 0),
  destroyPopover: l = () => {
  },
  openPopup: o = () => {
  },
  setFocusToFirstElement: u = () => {
  },
  startPopper: h = () => {
  }
}) {
  const A = d(e, "disabled"), E = d(e, "dropdownRenderDefault"), p = d(e, "elementsForArrows"), T = d(e, "id"), S = d(e, "isCloseByClickInside"), b = d(e, "isCloseByClickOutside"), L = d(e, "isListWidthSameWithButton"), I = d(e, "lockArrowsNavigation"), v = d(e, "lockTabNavigation"), R = d(e, "persist"), g = d(e, "useEscape"), D = B(void 0), w = B(!1), M = B(!1), P = B(void 0), F = B(void 0), C = B(!1), {
    closeDropdownGlobal: k,
    openDropdownGlobal: W
  } = Sm(), K = () => {
    C.value = E.value || !1;
  }, le = ({ down: H }) => {
    var re;
    const Q = s.value.querySelectorAll(p.value);
    if (Q.length !== 0) {
      if (((re = r.value) == null ? void 0 : re.$el) === document.activeElement) {
        H ? Q[0].focus() : Q[Q.length - 1].focus();
        return;
      }
      z(Q, (Ie, Ce) => {
        if (Ie === document.activeElement)
          return H ? Ce < Q.length - 1 && Q[Ce + 1].focus() : Ce > 0 && Q[Ce - 1].focus(), !1;
      });
    }
  }, te = () => {
    var H, Q;
    (Q = (H = r.value) == null ? void 0 : H.$el) == null || Q.focus();
  }, _e = (H) => {
    const Q = H || window.$event;
    if (Q.keyCode === X.arrowDown || Q.keyCode === X.arrowUp) {
      if (!I.value)
        return;
      const re = Q.keyCode === X.arrowDown;
      le({ down: re }), H.preventDefault(), H.stopPropagation();
    } else if (Q.keyCode === X.escape)
      g.value && (he({ trigger: "click" }), H.preventDefault(), H.stopPropagation());
    else if (Q.keyCode === X.tab) {
      if (!v.value)
        return;
      Q.shiftKey ? (he(), setTimeout(() => {
        var re;
        B1({
          element: (re = r.value) == null ? void 0 : re.$el
        });
      })) : (he(), setTimeout(() => {
        var re;
        D1({
          element: (re = r.value) == null ? void 0 : re.$el
        });
      })), H.stopPropagation(), H.preventDefault();
    }
  }, ae = () => {
    b.value && document.addEventListener("click", ne);
  }, oe = () => {
    b.value && document.removeEventListener("click", ne);
  }, Le = () => {
    w.value || (w.value = !0, document.body.addEventListener("keydown", _e));
  }, We = () => {
    w.value && (w.value = !1, document.body.removeEventListener("keydown", _e));
  }, Se = () => {
    L.value && r.value && (D.value = r.value.clientWidth);
  }, se = ({ trigger: H = "click", selectorToFocus: Q } = {}) => {
    H === "hover" && F.value === "hover" && clearTimeout(P.value), !(A.value || M.value) && (F.value = H, Se(), Le(), M.value = !0, R.value && C.value && h(), C.value = !0, setTimeout(() => {
      ae(), Q ? setTimeout(() => {
        document.getElementById(Q).focus();
      }) : H === "click" && setTimeout(() => {
        u();
      }), W(), o({
        id: T.value
      }), t("open");
    }));
  }, Oe = ({ $event: H }) => {
    F.value === "hover" ? M.value && (F.value = "click", H.stopPropagation()) : M.value ? he({ trigger: "click" }) : se();
  }, ye = (H) => {
    (H.keyCode === X.enter || H.keyCode === X.space) && (Oe({ $event: H }), H.stopPropagation(), H.preventDefault()), (H.keyCode === X.arrowUp || H.keyCode === X.arrowDown) && (M.value || se());
  };
  function je({ trigger: H }) {
    oe(), We(), l(), M.value = !1, k(), H && H !== "hover" && // the event did not come from outside
    F.value !== "hover" && te(), F.value = void 0, n({
      id: T.value
    }), t("close");
  }
  function he({ trigger: H } = {}) {
    if (M.value)
      if (H === "hover") {
        if (F.value !== "hover")
          return;
        P.value = setTimeout(() => {
          je({ trigger: H });
        }, 120);
      } else
        je({ trigger: H });
  }
  function ne(H) {
    s.value.contains(H.target) ? S.value && (he(), te()) : he();
  }
  return {
    buttonWidth: D,
    destroyEventCloseClick: oe,
    destroyEventPressArrows: We,
    initWasOpened: K,
    onClose: he,
    onKeydown: ye,
    onOpen: se,
    onToggle: Oe,
    statusExpanded: M,
    timerCloseHover: P,
    triggerOpen: F,
    wasOpened: C
  };
}
const sa = {
  name: "ADropdown",
  inheritAttrs: !1,
  props: {
    actions: {
      type: Array,
      required: !1,
      default: () => []
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    buttonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    buttonIconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonIconClass: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonIconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    buttonIconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    buttonIconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonIsTitleHtml: {
      type: Boolean,
      required: !1
    },
    buttonLoading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    buttonLoadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    buttonLoadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    buttonPrevent: {
      type: Boolean,
      required: !1
    },
    buttonStop: {
      type: Boolean,
      required: !1
    },
    buttonTag: {
      type: String,
      required: !1,
      default: "button"
    },
    buttonText: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTextAriaHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    buttonTextClass: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonTextScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTitle: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTitlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => ["top", "left", "bottom", "right"].indexOf(e) !== -1
    },
    caretIcon: {
      type: String,
      required: !1,
      default: mi
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dropdownClass: {
      type: String,
      required: !1,
      default: void 0
    },
    dropdownRenderDefault: {
      type: Boolean,
      required: !1
    },
    dropdownTag: {
      type: String,
      required: !1,
      default: "ul"
    },
    elementsForArrows: {
      type: String,
      required: !1,
      default: Ai
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    floatingFlip: {
      type: Object,
      required: !1,
      /*
       * mainAxis?: boolean;
       * crossAxis?: boolean;
       * fallbackAxisSideDirection?: 'none' | 'start' | 'end';
       * flipAlignment?: boolean;
       * fallbackPlacements?: Array<Placement>;
       * fallbackStrategy?: 'bestFit' | 'initialPlacement';
       */
      default: () => ({})
    },
    floatingShift: {
      type: Object,
      required: !1,
      default: () => ({
        use: !0,
        crossAxis: !0,
        padding: 20
      })
    },
    hasCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_dropdown_btn_")
    },
    inBody: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isCloseByClickInside: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isCloseByClickOutside: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHideWithoutActionAndSlot: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isListWidthSameWithButton: {
      type: Boolean,
      required: !1
    },
    lockArrowsNavigation: {
      type: Boolean,
      required: !1,
      default: !0
    },
    lockTabNavigation: {
      type: Boolean,
      required: !1,
      default: !0
    },
    menuWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    persist: {
      type: Boolean,
      required: !1,
      default: !0
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => gr.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: "a_tooltip_container"
    },
    triggers: {
      type: Array,
      required: !1,
      default: () => ["click"],
      validator: (e) => tw(e, ["click", "hover", "focus"]).length === 0
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: [
    "open",
    "close"
  ],
  setup(e, t) {
    const n = d(e, "id"), {
      closePopup: r,
      openPopup: s
    } = nf(), {
      dropdownButtonRef: l,
      dropdownRef: o
    } = V1(), {
      setFocusToFirstElement: u
    } = U1(e, {
      dropdownRef: o
    }), {
      destroyPopover: h,
      startPopper: A
    } = H1(e, {
      dropdownButtonRef: l,
      dropdownRef: o
    }), {
      buttonWidth: E,
      destroyEventCloseClick: p,
      destroyEventPressArrows: T,
      initWasOpened: S,
      onClose: b,
      onKeydown: L,
      onOpen: I,
      onToggle: v,
      statusExpanded: R,
      timerCloseHover: g,
      triggerOpen: D,
      wasOpened: w
    } = W1(e, t, {
      closePopup: r,
      destroyPopover: h,
      dropdownButtonRef: l,
      dropdownRef: o,
      openPopup: s,
      setFocusToFirstElement: u,
      startPopper: A
    }), {
      eventsLocal: M,
      eventsMenu: P
    } = k1(e, {
      onToggle: v,
      onKeydown: L,
      onOpen: I,
      onClose: b,
      timerCloseHover: g,
      triggerOpen: D
    }), {
      idLocal: F,
      buttonAttributesDisabled: C,
      buttonAttributesLocal: k,
      dropdownAttributesLocal: W,
      isMenuRendered: K
    } = q1(e, {
      eventsMenu: P,
      statusExpanded: R,
      wasOpened: w
    }), {
      actionsFiltered: le,
      hasActions: te
    } = M1(e), {
      addPopperContainerInBody: _e,
      popperContainerIdSelector: ae
    } = Pc(e), {
      buttonClassLocal: oe
    } = $1(e);
    return S(), _e(), Ot(() => {
      p(), T(), h(), r({
        id: n.value
      });
    }), {
      actionsFiltered: le,
      buttonAttributesDisabled: C,
      buttonAttributesLocal: k,
      buttonClassLocal: oe,
      buttonWidth: E,
      dropdownAttributesLocal: W,
      dropdownButtonRef: l,
      dropdownRef: o,
      eventsLocal: M,
      hasActions: te,
      idLocal: F,
      isMenuRendered: K,
      onClose: b,
      onOpen: I,
      popperContainerIdSelector: ae,
      startPopper: A,
      statusExpanded: R
    };
  },
  render() {
    return this.isHideWithoutActionAndSlot && !this.hasActions && !this.$slots.dropdown ? null : [
      c(me, {
        ref: "dropdownButtonRef",
        ...this.$attrs,
        id: this.idLocal,
        alwaysTranslate: this.alwaysTranslate,
        tag: this.buttonTag,
        class: this.buttonClassLocal,
        text: this.buttonText,
        textScreenReader: this.buttonTextScreenReader,
        textAriaHidden: this.buttonTextAriaHidden,
        textClass: this.buttonTextClass,
        title: this.buttonTitle,
        isTitleHtml: this.buttonIsTitleHtml,
        titlePlacement: this.buttonTitlePlacement,
        loading: this.buttonLoading,
        loadingClass: this.buttonLoadingClass,
        loadingAlign: this.buttonLoadingAlign,
        iconLeft: this.buttonIconLeft,
        iconRight: this.buttonIconRight,
        iconClass: this.buttonIconClass,
        iconAttributes: this.buttonIconAttributes,
        iconTag: this.buttonIconTag,
        prevent: this.buttonPrevent,
        stop: this.buttonStop,
        extra: this.extra,
        type: "button",
        attributes: this.buttonAttributesLocal,
        ...this.buttonAttributesDisabled,
        ...this.eventsLocal
      }, {
        default: () => this.$slots.button && this.$slots.button(),
        buttonAppend: () => this.hasCaret && c(ut, {
          class: "a_dropdown__caret",
          icon: this.caretIcon
        })
      }),
      c(ia, {
        to: this.popperContainerIdSelector,
        disabled: !this.inBody
      }, [
        this.isMenuRendered && Pt(c(
          "div",
          {
            ref: "dropdownRef",
            role: "application",
            "aria-labelledby": this.idLocal,
            ariaHidden: !this.statusExpanded,
            ...this.dropdownAttributesLocal
          },
          [
            c(this.dropdownTag, {}, [
              this.$slots.dropdown && this.$slots.dropdown(),
              this.hasActions && this.actionsFiltered.map((e, t) => c(x1, {
                key: t,
                action: e,
                alwaysTranslate: this.alwaysTranslate
              }, this.$slots))
            ])
          ]
        ), [
          [ol, {
            mounted: this.startPopper
          }]
        ])
      ])
    ];
  }
}, G1 = {
  name: "AErrorsElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    error: {
      type: [Object, Array, String],
      required: !1,
      default: void 0
    },
    errorKey: {
      type: String,
      required: !1,
      default: void 0
    },
    errorLabels: {
      type: [String, Object],
      required: !0
    },
    goToError: {
      type: Function,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_errors_")
    },
    isErrorLink: {
      type: Boolean,
      required: !0
    }
  },
  setup(e) {
    const t = d(e, "errorLabels"), n = _(() => it(t.value) ? t.value : nt(t.value) ? t.value.label : ""), r = d(e, "isErrorLink"), s = _(() => nt(t.value) && t.value.link && r.value), l = d(e, "error"), o = _(() => it(l.value)), u = _(() => Te(l.value)), h = _(() => nt(l.value)), A = _(() => Te(t.value)), E = d(e, "id"), p = _(() => fe(t.value, "id") || E.value), T = d(e, "goToError"), S = d(e, "errorKey"), b = () => {
      if (qe(T.value))
        return T.value({
          id: p.value,
          key: S.value
        });
      let I = p.value;
      if (ie(S.value) || (I = `${I}_${S.value}`), pi(I) > 0) {
        const v = document.getElementById(I);
        v && v.focus();
      }
    };
    return {
      currentLabel: n,
      goToErrorLocal: b,
      isErrorArray: u,
      isErrorLabelsArray: A,
      isErrorLinkLocal: s,
      isErrorObject: h,
      isErrorString: o,
      onKeydown: (I) => {
        (I.keyCode === X.enter || I.keyCode === X.space) && (b(), I.stopPropagation(), I.preventDefault());
      }
    };
  },
  render() {
    return c("div", {
      class: "a_error__list__li"
    }, [
      this.isErrorString ? this.isErrorLinkLocal ? c(me, {
        type: "link",
        class: "a_errors__label a_btn a_btn_link a_p_0",
        tabindex: 0,
        "aria-describedby": this.id,
        safeHtml: this.currentLabel,
        textTag: "strong",
        textAfter: ":",
        onClick: this.goToErrorLocal,
        onKeydown: this.onKeydown
      }) : c("div", {
        class: "a_errors__label",
        "aria-describedby": this.id
      }, [
        c(Ae, {
          tag: "strong",
          safeHtml: this.currentLabel
        })
      ]) : "",
      c(
        "div",
        {
          id: this.id,
          class: "a_errors__errors"
        },
        this.isErrorString ? [
          c(Ae, {
            alwaysTranslate: this.alwaysTranslate,
            tag: "span",
            html: this.error
          })
        ] : this.isErrorArray ? [...this.error.map((e, t) => c($r("AErrorsElement"), {
          key: t,
          error: e,
          alwaysTranslate: this.alwaysTranslate,
          errorLabels: this.isErrorLabelsArray ? this.errorLabels[t] || this.errorLabels : this.errorLabels,
          goToError: this.goToError,
          isErrorLink: this.isErrorLink
        }))] : this.isErrorObject ? [
          c("div", {
            class: "a_pl_2"
          }, [
            ...Object.keys(this.error).map((e) => c($r("AErrorsElement"), {
              key: e,
              alwaysTranslate: this.alwaysTranslate,
              error: this.error[e],
              errorLabels: this.errorLabels[e] || this.errorLabels,
              goToError: this.goToError,
              isErrorLink: this.isErrorLink
            }))
          ])
        ] : []
      )
    ]);
  }
};
function K1({ emit: e }) {
  return {
    close: () => {
      e("close");
    }
  };
}
function j1(e) {
  const t = d(e, "errors");
  return {
    hasErrors: _(() => !hn(t.value))
  };
}
function z1(e, {
  hasErrors: t = _(() => !1)
}) {
  const n = d(e, "autoFocus"), r = B(void 0);
  return {
    elRef: r,
    setFocusToElement: () => {
      n.value && t.value && setTimeout(() => {
        r.value.$el.focus();
      });
    }
  };
}
function Y1(e) {
  const t = d(e, "optionsList"), n = d(e, "idPrefix"), r = (l) => {
    let o = {};
    return z(l, (u) => {
      o[u.id] = {
        label: u.labelError || u.label,
        link: we(u.isErrorLink) ? !0 : u.isErrorLink,
        id: _l({
          id: u.id,
          idPrefix: u.idPrefix || n.value,
          htmlId: u.htmlId
        })
      }, u.children && u.children.length && (o = {
        ...o,
        ...r(u.children)
      });
    }), o;
  };
  return {
    labelsLocal: _(() => {
      let l = {};
      return t.value.forEach((o) => {
        l[o.id] = {
          label: o.labelError || o.label,
          link: we(o.isErrorLink) ? !0 : o.isErrorLink,
          id: _l({
            id: o.id,
            idPrefix: o.idPrefix || n.value,
            htmlId: o.htmlId
          })
        }, o.children && o.children.length && (l = {
          ...l,
          ...r(o.children)
        });
      }), l;
    })
  };
}
const X1 = {
  name: "AErrors",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closable: {
      type: Boolean,
      required: !1,
      default: !0
    },
    goToError: {
      type: Function,
      required: !1,
      default: void 0
    },
    optionsList: {
      type: Array,
      required: !1,
      default: () => []
    },
    autoFocus: {
      type: Boolean,
      required: !1,
      default: !0
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: "Bitte überprüfen Sie Ihre Eingaben."
    },
    isErrorLink: {
      type: Boolean,
      required: !1,
      default: !0
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      hasErrors: n
    } = j1(e), {
      elRef: r,
      setFocusToElement: s
    } = z1(e, {
      hasErrors: n
    }), {
      labelsLocal: l
    } = Y1(e), {
      close: o
    } = K1(t);
    return rt(n, () => {
      s();
    }), Vr(() => {
      s();
    }), {
      close: o,
      elRef: r,
      hasErrors: n,
      labelsLocal: l
    };
  },
  render() {
    return c(Ic, {
      ref: "elRef",
      alwaysTranslate: this.alwaysTranslate,
      tabindex: -1,
      role: "alert",
      "aria-atomic": !0,
      isVisible: this.hasErrors,
      closable: this.closable,
      onClose: this.close
    }, () => [
      this.hasErrors && c("div", {
        class: "a_errors"
      }, [
        c("div", {
          class: "a_errors__header"
        }, [
          c("strong", null, this.textErrorHeader)
        ]),
        c("div", {
          class: "a_errors__list"
        }, [
          ...Object.keys(this.errors).map((e) => c(G1, {
            key: e,
            alwaysTranslate: this.alwaysTranslate,
            error: this.errors[e],
            errorLabels: this.labelsLocal[e] || this.labelsLocal,
            goToError: this.goToError,
            isErrorLink: this.isErrorLink
          }))
        ])
      ])
    ]);
  }
}, Ma = B({
  fieldset: !0,
  group: !0
}), rf = B({
  multiselect: !0,
  checkbox: !0
}), bm = B({
  dateRange: !0,
  integerNonNegativeRange: !0,
  integerPositiveRange: !0,
  integerRange: !0,
  numberRange: !0
}), Z1 = B({
  checkbox: !0,
  multiselect: !0,
  radio: !0,
  select: !0
}), J1 = B({
  select: {
    hideFor: !0,
    prevent: !0
  },
  multiselect: {
    hideFor: !0,
    prevent: !0
  },
  file: {
    hideId: !0
  },
  // numberRange
  numberRange: {
    hideFor: !0,
    prevent: !0
  },
  integerNonNegativeRange: {
    hideFor: !0,
    prevent: !0
  },
  integerPositiveRange: {
    hideFor: !0,
    prevent: !0
  },
  integerRange: {
    hideFor: !0,
    prevent: !0
  },
  // numberRange /
  dateRange: {
    hideFor: !0,
    prevent: !0
  }
});
function Q1(e, t, {
  changeModel: n = () => {
  }
}) {
  const r = d(e, "modelValue");
  return {
    onUpdateModelLocal: ({ model: l, currentModel: o, item: u }) => {
      if (Ma.value[u.type])
        n({ model: l, currentModel: o, item: u });
      else {
        const h = u.id, A = pe(r.value);
        mc(A, h, pe(l)), n({ model: A, currentModel: o, item: u });
      }
    }
  };
}
function eq(e) {
  const t = d(e, "classColumns"), n = "a_form_element_readonly_value_fieldset";
  return {
    classColumnsReadonly: _(() => nt(t.value) ? {
      ...t.value,
      [n]: !0
    } : it(t.value) && t.value.length ? `${t.value} ${n}` : n)
  };
}
function tq(e, {
  adjustFloatPartAndDivider: t = () => {
  },
  ensurePrecision: n = () => {
  },
  setCurrentValue: r = () => {
  },
  modelNumber: s = _(() => {
  })
}) {
  const l = d(e, "decimalDivider"), o = d(e, "disabled"), u = d(e, "modelValue"), h = d(e, "max"), A = d(e, "min"), E = d(e, "step"), p = _(() => s.value <= A.value), T = _(() => s.value >= h.value), S = () => {
    const v = t(h.value);
    r(v);
  }, b = () => {
    const v = t(A.value);
    r(v);
  };
  return {
    increase: () => {
      if (o.value || T.value)
        return;
      const v = s.value, R = n({
        value: v,
        currentValue: u.value
      }).replace(".", l.value);
      if (v + E.value > h.value) {
        S();
        return;
      }
      r(t(R));
    },
    decrease: () => {
      if (o.value || p.value)
        return;
      const v = s.value, R = n({
        value: v,
        currentValue: u.value,
        coefficient: -1
      }).replace(".", l.value);
      if (v - E.value < A.value) {
        b();
        return;
      }
      r(t(R));
    }
  };
}
function nq(e, {
  adjustFloatPartAndDivider: t = () => {
  },
  decrease: n = () => {
  },
  getCleanIntValue: r = () => {
  },
  increase: s = () => {
  },
  modelNumber: l = _(() => {
  }),
  modelUndefinedLocal: o = _(() => {
  }),
  onBlur: u = () => {
  },
  setCurrentValue: h = () => {
  }
}) {
  const A = d(e, "decimalDivider"), E = B(void 0), p = d(e, "max"), T = d(e, "min"), S = d(e, "modelValue"), b = d(e, "readonly"), L = d(e, "required"), I = d(e, "decimalPartLength"), v = d(e, "thousandDivider"), R = d(e, "validationOnChange"), g = B(0), D = navigator.userAgent.indexOf("Firefox") !== -1 ? 1 : 0, w = [
    X.tab,
    X.del,
    X.escape,
    X.backspace,
    X.arrowLeft,
    X.arrowRight,
    X.home,
    X.end
  ], M = _(() => !I.value), P = (H) => Number(`${H}`.replaceAll(v.value, "").replace(A.value, ".")), F = (H, Q) => {
    h(H, Q);
  }, C = (H) => {
    setTimeout(() => {
      E.value.setSelectionRange(H, H);
    });
  }, k = () => {
    const H = t(p.value);
    F(H);
  }, W = () => {
    const H = t(T.value);
    F(H);
  }, K = (H) => {
    const Q = P(H);
    if (Q > p.value)
      return k(), !0;
    if (Q < T.value)
      return W(), !0;
  }, le = (H, Q, re = !1) => {
    var At, bt;
    if (!L.value && ie(Q) && !((At = H == null ? void 0 : H.target) != null && At.value)) {
      F(Q, re);
      return;
    }
    let Ie;
    re ? Ie = typeof Q == "number" ? `${Q}`.replace(".", A.value) : Q : Ie = ie(Q) ? H.target.value : `${Q}`;
    const xe = Ie.indexOf(A.value) !== -1, Xe = (bt = E.value) == null ? void 0 : bt.selectionStart, Fe = Ie.split(A.value), Pe = Fe[0].length && Fe[0][0] === "-" ? "-" : "", at = Number(Fe[0].replace(/[^0-9]/g, "")).toString(), He = Fe[1] ? Fe[1].substring(0, I.value) : "";
    if (ie(at) || at === "")
      return;
    const st = v.value ? r({ value: at, thousandDivider: v.value }) : at;
    let Ze;
    if (M.value)
      Ze = `${Pe}${st}`;
    else if (re) {
      const Wt = He || "", pn = ir(I.value - Wt.length, () => "0").join("");
      Ze = `${Pe}${st}${A.value}${Wt}${pn}`;
    } else He ? Ze = `${Pe}${st}${A.value}${He}` : xe ? Ze = `${Pe}${st}${A.value}` : Ze = `${Pe}${st}`;
    R.value && K(Ze) || (F(Ze, re), C(Xe));
  }, te = ({ value: H }) => {
    T.value >= 0 || H[0] !== "-" && (g.value++, setTimeout(() => {
      const Q = `-${H}`;
      R.value && K(Q) || (F(Q), g.value--);
    }, D));
  }, _e = ({ value: H }) => {
    H[0] === "-" && (g.value++, setTimeout(() => {
      const Q = H.replace("-", "");
      R.value && K(Q) || (F(Q), g.value--);
    }, D));
  }, ae = ({ value: H }) => {
    g.value++, setTimeout(() => {
      const Q = E.value.selectionStart;
      if (v.value && H[Q - 1] === v.value) {
        const re = Q - 1;
        C(re);
      }
      g.value--;
    }, D);
  }, oe = ({ value: H }) => {
    setTimeout(() => {
      g.value++;
      const Q = E.value.selectionStart;
      if (v.value && H[Q - 1] === v.value) {
        const re = Q + 1;
        C(re);
      }
      g.value--;
    }, D);
  }, Le = ({ value: H, cursorPosition: Q }, re) => {
    setTimeout(() => {
      g.value++;
      let Ie = E.value.value;
      if (re) {
        const Ce = H.length + 1;
        Ie[Ie.length - 1] === A.value && (Ie += ir(I.value, () => "0").join(""), F(Ie), C(Ce));
      } else {
        const Ce = H.substring(0, Q).split("").reverse().join("").replaceAll(v.value, "").match(/.{1,3}/g).join(v.value).split("").reverse().join("");
        let xe = H.substring(Q, H.length).replace(/[^0-9]/g, "").substring(0, I.value);
        xe = `${xe}${ir(I.value - xe.length, () => "0").join("")}`;
        const Xe = [
          Ce,
          xe
        ].join(A.value);
        F(Xe), C(Ce.length + 1);
      }
      g.value--;
    });
  }, We = ({ cursorPosition: H, numberOfSymbols: Q }) => {
    let re = H && H - 1;
    E.value.value.length < Q - 1 && re > 0 && re--, C(re);
  }, Se = ({ hasDecimalDivider: H, value: Q, cursorPosition: re }) => {
    const Ie = Q.length;
    if (!M.value) {
      const Ce = Q.indexOf(A.value);
      if (H && Ce === re - 1) {
        const Xe = Q.split(A.value)[0];
        g.value++, setTimeout(() => {
          We({ cursorPosition: re, numberOfSymbols: Ie }), F(Xe), g.value--;
        }, D);
        return;
      }
      g.value++, setTimeout(() => {
        We({ cursorPosition: re, numberOfSymbols: Ie }), g.value--;
      }, D);
    }
  }, se = ({ value: H, $event: Q, hasDecimalDivider: re, cursorPosition: Ie }) => {
    if (!M.value && re && H[Ie] === A.value) {
      const xe = H.split(A.value)[0];
      F(xe), C(Ie);
      return;
    }
    if (v.value)
      if (H[Ie] === v.value) {
        Q.preventDefault();
        const Ce = Ie, xe = H.split(A.value), Xe = xe[0], Fe = xe[1];
        let Pe = Xe.split("");
        Pe.splice(Ie + 1, 1), Pe = Pe.reverse().join("").replaceAll(v.value, "").match(/.{1,3}/g).join(v.value).split("").reverse().join("");
        let at;
        M.value ? at = Pe : Fe ? at = `${Pe}${A.value}${Fe}` : re ? at = `${Pe}${A.value}` : at = Pe, F(at), C(Ce + 1);
      } else
        setTimeout(() => {
          g.value++, E.value.value.length < H.length - 1 && C(Ie > 0 ? Ie - 1 : 0), g.value--;
        }, D);
  };
  return {
    handleInput: le,
    handleKeydown: (H) => {
      if (g.value) {
        H.preventDefault();
        return;
      }
      const Q = H.target.value, re = H.keyCode, Ie = H.key, Ce = re >= 48 && re <= 57 || re >= 96 && re <= 105, xe = Ie === A.value && !!I.value, Xe = H.target.value.indexOf(A.value), Fe = Xe !== -1, Pe = E.value.selectionStart, at = Pe === Q.length, He = {
        value: Q,
        keyCode: re,
        keyValue: Ie,
        keyIsNumber: Ce,
        keyIsDecimalDivider: xe,
        hasDecimalDivider: Fe,
        cursorPosition: Pe,
        $event: H
      };
      if (re === X.arrowUp) {
        s(), H.preventDefault();
        return;
      }
      if (re === X.arrowDown) {
        n(), H.preventDefault();
        return;
      }
      if (re === X.minus || re === X.numMinus) {
        te(He), H.preventDefault();
        return;
      }
      if (re === X.plus && H.shiftKey || re === X.numPlus) {
        _e(He), H.preventDefault();
        return;
      }
      if (re === X.arrowLeft) {
        ae(He);
        return;
      }
      if (re === X.arrowRight) {
        oe(He);
        return;
      }
      if (xe) {
        if (Fe) {
          C(Xe + 1), H.preventDefault();
          return;
        }
        at || H.preventDefault(), Le(He, at);
        return;
      }
      if (H.keyCode === X.backspace) {
        if (E.value.selectionStart !== E.value.selectionEnd)
          return;
        Se(He);
        return;
      }
      if (H.keyCode === X.del) {
        se(He);
        return;
      }
      if (Ce && !H.ctrlKey && Fe) {
        const st = Q.indexOf(A.value);
        if (Pe > st && Q.split(A.value)[1].length === I.value) {
          if (at) {
            H.preventDefault();
            return;
          }
          H.preventDefault();
          const bt = Q.split("");
          bt[Pe] = Ie;
          const Wt = bt.join("");
          F(Wt), g.value++, setTimeout(() => {
            C(Pe + 1), g.value--;
          }, D);
          return;
        }
      }
      if (!Ce && !H.ctrlKey && !gd(w, H.keyCode) && H.preventDefault(), H.keyCode !== X.home && H.keyCode !== X.end && !H.ctrlKey && H.keyCode)
        if (Pe === 0 && Q.length && Q[0] === "0") {
          H.preventDefault();
          const st = `${Ie}${Q.slice(1)}`;
          F(st), C(1);
        } else {
          const st = Q.length;
          g.value++, setTimeout(() => {
            let Ze = Pe + 1;
            const At = E.value.value.length;
            At - 1 > st ? Ze++ : At === st && Ze--, C(Ze), g.value--;
          }, D);
        }
    },
    handlePaste: (H) => {
      var At;
      H.preventDefault();
      const re = (H.clipboardData || window.clipboardData).getData("text").split(A.value), Ie = re[0].replace(/[^0-9]/g, ""), Ce = ((At = re[1]) == null ? void 0 : At.replace(/[^0-9]/g, "")) || "";
      let xe;
      const Xe = E.value.selectionStart, Fe = E.value.selectionEnd, Pe = E.value.value, at = Pe.indexOf(A.value) !== -1, st = Pe.substring(Xe, Fe).indexOf(A.value) !== -1;
      at && !st ? xe = Ce ? [Ie, Ce].join("") : Ie : xe = Ce ? [Ie, Ce].join(A.value) : Ie;
      const Ze = Pe.slice(0, Xe) + xe + Pe.slice(Fe);
      le(null, Ze);
    },
    initFirstCheck: () => {
      b.value || setTimeout(() => {
        let H;
        if (S.value || S.value === 0) {
          if (H = S.value.toString().replace(".", A.value), A.value) {
            const Q = H.toString().split(A.value), re = Q[0], Ie = re[0] === "-" ? "-" : "", Ce = Q.length > 1 ? Q[1] : "", xe = Ce.length, Xe = ir(I.value - xe, () => "0").join("");
            H = `${Ie}${re}${A.value}${Ce}${Xe}`;
          }
        } else
          H = L.value ? [
            "0",
            A.value,
            ir(I.value, () => "0").join("")
          ].join("") : o.value;
        le(null, H, !0);
      });
    },
    inputRef: E,
    onBlurNumber: (H) => {
      let Q = H.target.value;
      if (M.value || (Q = Q.split(A.value)[0]), ie(Q) || Q === "") {
        if (L.value) {
          if (T.value > 0) {
            const Ie = A.value ? `0${A.value}${ir(I.value, () => "0").join("")}` : "0";
            F(Ie);
          } else
            W();
          u(H);
          return;
        }
        const re = o.value;
        F(re), u(H);
        return;
      } else if (l.value < T.value) {
        W();
        return;
      } else if (l.value > p.value) {
        k();
        return;
      }
      if (I.value) {
        let re = `${H.target.value}`;
        const Ce = re.split(A.value)[1];
        re.indexOf(A.value) === -1 ? re += `${A.value}${ir(I.value, () => "0").join("")}` : Ce.length < I.value && (re += `${ir(I.value - Ce.length, () => "0").join("")}`), F(re);
      }
      u(H);
    },
    onClickNumber: (H) => {
      g.value++, setTimeout(() => {
        const Q = H.target.selectionStart, re = H.target.value;
        v.value && v.value === re[Q - 1] && C(Q - 1), g.value--;
      });
    }
  };
}
function rq(e, {
  adjustFloatPartAndDivider: t = () => {
  },
  changeModel: n = () => {
  }
}) {
  const r = d(e, "required"), s = d(e, "modelValue"), l = d(e, "modelType"), o = d(e, "modelUndefined"), u = d(e, "decimalDivider"), h = d(e, "disabled"), A = d(e, "decimalPartLength"), E = d(e, "thousandDivider"), p = B(void 0), T = B(!1), S = B(void 0), b = () => {
    p.value = t(s.value), S.value = s.value;
  }, L = _(() => Number(`${p.value}`.replaceAll(E.value, "").replace(u.value, "."))), I = _(() => r.value ? [
    "0",
    u.value,
    ir(A.value, () => "0").join("")
  ].join("") : o.value), v = (g, D = !1) => {
    p.value = ie(g) ? "" : g;
    let w;
    !r.value && ie(g) ? w = I.value : w = l.value === "number" ? Number(`${g}`.replaceAll(E.value, "").replace(u.value, ".")) : g, D || (T.value = !0, S.value = w, n({ model: w }));
  };
  return {
    clearModel: () => {
      h.value || v(I.value);
    },
    displayValue: p,
    initLocalVars: b,
    isInternalChange: T,
    localModel: S,
    modelNumber: L,
    modelUndefinedLocal: I,
    setCurrentValue: v
  };
}
function aq(e) {
  const t = d(e, "decimalDivider"), n = d(e, "decimalPartLength"), r = d(e, "thousandDivider"), s = ({ value: o, thousandDivider: u }) => o.replaceAll(u, "").replaceAll("-", "").split("").reverse().join("").match(/.{1,3}/g).join(u).split("").reverse().join("");
  return {
    adjustFloatPartAndDivider: (o) => {
      if (ie(o))
        return "";
      if (t.value) {
        const u = typeof o == "number" ? o.toString().split(".") : o.toString().split(t.value), h = u[0], A = h[0] === "-" ? "-" : "", E = r.value ? s({ value: h, thousandDivider: r.value }) : h, p = u.length > 1 ? u[1] : "", T = p.length, S = ir(n.value - T, () => "0").join("");
        return `${A}${E}${t.value}${p}${S}`;
      }
      return o;
    },
    getCleanIntValue: s
  };
}
function hde(e) {
  return ca(e) ? Math.abs(e % 2) === 1 : !1;
}
function sq(e) {
  return ca(e) ? e % 2 === 0 : !1;
}
function Uo(e, t) {
  if (t === 0)
    return Math.round(e);
  let n = String(e);
  const r = n.indexOf(".");
  if (r === -1 || !n.replace(".", "").split("")[r + t])
    return e;
  const o = n.length;
  return n.charAt(o - 1) === "5" && (n = `${n.slice(0, Math.max(0, o - 1))}6`), Number.parseFloat(Number(n).toFixed(t));
}
function iq(e) {
  const t = d(e, "step"), n = d(e, "decimalPartLength");
  return {
    ensurePrecision: ({ value: s, currentValue: l, coefficient: o = 1 }) => yn(s) ? Uo(s + t.value * o, n.value).toString() : l
  };
}
function lq(e) {
  const t = d(e, "inputWidth");
  return {
    inputWidthStyleValue: _(() => {
      let r = t.value;
      return yn(t.value) && (r = `${t.value}px`), we(r) ? {} : {
        "--a_input_number_width": r
      };
    })
  };
}
const Lm = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-dash" viewBox="0 0 16 16">
  <path d="M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8"/>
</svg>`, Im = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4"/>
</svg>`, oq = {
  name: "AInputCurrency",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    controlsType: {
      type: String,
      required: !1,
      default: () => nn.propsDefault.controlsType,
      validator: (e) => ["plus-minus", "arrows", "none"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    currencySymbol: {
      type: String,
      required: !1,
      default: () => nn.propsDefault.currencySymbol
    },
    currencySymbolPosition: {
      type: String,
      required: !1,
      default: () => nn.propsDefault.currencySymbolPosition,
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    decimalDivider: {
      type: String,
      required: !1,
      default: () => nn.propsDefault.decimalDivider,
      validator: (e, t) => {
        const n = t == null ? void 0 : t.thousandDivider;
        return n ? [".", ","].indexOf(e) !== -1 && e !== n : [".", ","].indexOf(e) !== -1;
      }
    },
    decimalPartLength: {
      type: Number,
      required: !1,
      default: () => nn.propsDefault.decimalPartLength,
      validator: (e) => e >= 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: () => nn.propsDefault.iconPrepend
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_input_currency_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    inputWidth: {
      type: [String, Number],
      required: !1,
      default: () => nn.propsDefault.inputWidth
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: () => nn.propsDefault.isLabelFloat
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: () => nn.propsDefault.max
    },
    min: {
      type: Number,
      required: !1,
      default: () => nn.propsDefault.min
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelType: {
      type: String,
      required: !1,
      default: "number",
      validator: (e) => ["number", "string"].indexOf(e) !== -1
    },
    modelUndefined: {
      required: !1,
      default: () => nn.propsDefault.modelUndefined
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: () => nn.propsDefault.placeholder
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    step: {
      type: Number,
      required: !1,
      default: () => nn.propsDefault.step,
      validator: (e) => e > 0
    },
    thousandDivider: {
      type: String,
      required: !1,
      default: () => nn.propsDefault.thousandDivider,
      validator: (e, t) => {
        const n = t == null ? void 0 : t.decimalDivider;
        return n ? [".", ",", " "].indexOf(e) !== -1 && e !== n : [".", ",", " "].indexOf(e) !== -1;
      }
    },
    validationOnChange: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const n = d(e, "modelValue"), {
      attributesToExcludeFromRender: r
    } = Ct(e), {
      componentStyleHide: s
    } = Xt(e), {
      adjustFloatPartAndDivider: l,
      getCleanIntValue: o
    } = aq(e), {
      ariaDescribedbyLocal: u,
      changeModel: h,
      errorsId: A,
      helpTextId: E,
      htmlIdLocal: p,
      isErrors: T,
      isModel: S,
      onBlur: b,
      onFocus: L
    } = Yt(e, t), {
      isClearButtonLocal: I
    } = qu(e, {
      isModel: S
    }), {
      placeholderAttributes: v
    } = yl(e), {
      inputWidthStyleValue: R
    } = lq(e), {
      ensurePrecision: g
    } = iq(e), {
      clearModel: D,
      displayValue: w,
      initLocalVars: M,
      isInternalChange: P,
      localModel: F,
      modelNumber: C,
      modelUndefinedLocal: k,
      setCurrentValue: W
    } = rq(e, {
      adjustFloatPartAndDivider: l,
      changeModel: h
    }), {
      increase: K,
      decrease: le
    } = tq(e, {
      adjustFloatPartAndDivider: l,
      ensurePrecision: g,
      setCurrentValue: W,
      modelNumber: C
    }), {
      handleInput: te,
      handleKeydown: _e,
      handlePaste: ae,
      initFirstCheck: oe,
      inputRef: Le,
      onBlurNumber: We,
      onClickNumber: Se
    } = nq(e, {
      adjustFloatPartAndDivider: l,
      decrease: le,
      displayValue: w,
      getCleanIntValue: o,
      increase: K,
      modelNumber: C,
      modelUndefinedLocal: k,
      onBlur: b,
      setCurrentValue: W
    });
    return M(), oe(), rt(n, (se) => {
      P.value || (F.value = se, te(null, se, !0)), P.value = !1;
    }), {
      ariaDescribedbyLocal: u,
      attributesToExcludeFromRender: r,
      clearModel: D,
      componentStyleHide: s,
      decrease: le,
      displayValue: w,
      errorsId: A,
      handleInput: te,
      handleKeydown: _e,
      handlePaste: ae,
      helpTextId: E,
      htmlIdLocal: p,
      increase: K,
      inputRef: Le,
      inputWidthStyleValue: R,
      isClearButtonLocal: I,
      isErrors: T,
      isModel: S,
      onBlurNumber: We,
      onClickNumber: Se,
      onFocus: L,
      placeholderAttributes: v
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Vn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.displayValue,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "currency"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__container"
      }, [
        c("div", {
          class: ["a_form_element__parent", {
            a_form_element__parent_float: this.isLabelFloat,
            a_form_element__parent_not_empty: this.isModel,
            a_form_element__parent_float_has_icon_prepend: this.iconPrepend,
            a_form_element__parent_invalid: this.isErrors
          }]
        }, [
          (this.label || this.labelScreenReader) && !this.isLabelFloat ? c(Mt, {
            id: this.htmlIdLocal,
            extra: this.extra,
            isLabelFloat: this.isLabelFloat,
            isError: this.isErrors,
            label: this.label,
            labelClass: this.labelClass,
            labelScreenReader: this.labelScreenReader,
            required: this.required,
            type: "text"
          }) : "",
          c("div", {
            class: [
              "a_form_element_number",
              {
                a_form_element_number_controls: this.controlsType && this.controlsType !== "none"
              }
            ]
          }, [
            this.currencySymbol && this.currencySymbolPosition === "left" && c("span", {
              class: "a_form_element_number__currency_symbol"
            }, this.currencySymbol),
            c("div", {
              class: "a_form_element",
              style: {
                ...this.inputWidthStyleValue
              }
            }, [
              (this.label || this.labelScreenReader) && this.isLabelFloat ? c(Mt, {
                id: this.htmlIdLocal,
                isLabelFloat: this.isLabelFloat,
                isError: this.isErrors,
                label: this.label,
                labelClass: this.labelClass,
                labelScreenReader: this.labelScreenReader,
                required: this.required,
                type: "text"
              }) : "",
              this.iconPrepend && c(ut, {
                icon: this.iconPrepend,
                class: "a_input__icon_prepend"
              }),
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                autocomplete: this.autocomplete,
                value: this.displayValue,
                type: "text",
                class: [
                  "a_form_control a_input a_input_number",
                  this.inputClass,
                  {
                    a_form_element_with_one_btn: this.isClearButtonLocal,
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabled,
                ariaRequired: this.required,
                ariaInvalid: this.isErrors,
                "aria-describedby": this.ariaDescribedbyLocal,
                ...this.placeholderAttributes,
                ...this.inputAttributes,
                onInput: this.handleInput,
                onKeydown: this.handleKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlurNumber,
                onClick: this.onClickNumber,
                onPaste: this.handlePaste
              }),
              this.isClearButtonLocal ? c("div", {
                class: "a_form_control__actions"
              }, [
                c(xu, {
                  alwaysTranslate: this.alwaysTranslate,
                  disabled: !1,
                  class: this.clearButtonClass,
                  onClear: this.clearModel
                })
              ]) : ""
            ]),
            this.controlsType === "plus-minus" && c("div", {
              class: "a_btn_group"
            }, [
              c(me, {
                class: "a_btn a_btn_outline_secondary",
                iconLeft: Lm,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_CURRENCY_BTN_DECREASE_",
                textScreenReader: "_A_INPUT_CURRENCY_BTN_DECREASE_",
                type: "button",
                onClick: this.decrease
              }),
              c(me, {
                class: "a_btn a_btn_outline_secondary",
                iconLeft: Im,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_CURRENCY_BTN_INCREASE_",
                textScreenReader: "_A_INPUT_CURRENCY_BTN_INCREASE_",
                type: "button",
                onClick: this.increase
              })
            ]),
            this.currencySymbol && this.currencySymbolPosition === "right" && c("div", {
              class: "a_form_element_number__currency_symbol"
            }, this.currencySymbol)
          ]),
          c(ln, {
            id: this.helpTextId,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(sn, {
            id: this.errorsId,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
};
function vm(e) {
  return `clickALabel_${e}`;
}
function uq(e, {
  idLabelLocal: t = _(() => ""),
  preventLocal: n = _(() => !1),
  stopLocal: r = _(() => !1)
}) {
  const s = d(e, "clickLabel"), l = d(e, "id");
  return {
    onClick: ({ $event: u }) => {
      qe(s.value) && s.value({
        id: l.value,
        idLabel: t.value,
        $event: u
      }), n.value && (u == null || u.preventDefault()), r.value && (u == null || u.stopPropagation()), setTimeout(() => {
        Rt.$emit(vm(l.value), {
          id: l.value,
          idLabel: t.value,
          $event: u
        });
      });
    }
  };
}
function _q(e, {
  hideForLocal: t = _(() => !1),
  hideIdLocal: n = _(() => !1)
}) {
  const r = d(e, "id"), s = d(e, "idSuffix"), l = d(e, "readonly"), o = _(() => {
    if (!n.value)
      return `${r.value}${s.value}`;
  });
  return {
    forLabelLocal: _(() => {
      if (!(t.value || l.value))
        return r.value;
    }),
    idLabelLocal: o
  };
}
function dq(e) {
  const t = d(e, "isLabelFloat"), n = d(e, "label"), r = d(e, "readonly"), s = d(e, "required"), l = _(() => !ie(n.value)), o = _(() => l.value ? n.value : void 0), u = _(() => s.value && l.value && !r.value ? "*" : ""), h = _(() => {
    if (t.value && !r.value)
      return o.value;
  });
  return {
    isLabel: l,
    labelLocal: o,
    textAfterLabel: u,
    titleLocal: h
  };
}
function cq(e) {
  const t = d(e, "hideFor"), n = d(e, "hideId"), r = d(e, "prevent"), s = d(e, "stop"), l = d(e, "type"), o = _(() => J1.value[l.value] || {}), u = ({ prop: T, propForType: S }) => we(T) ? S : T, h = _(() => u({
    prop: s.value,
    propForType: o.value.stop
  })), A = _(() => u({
    prop: r.value,
    propForType: o.value.prevent
  })), E = _(() => u({
    prop: n.value,
    propForType: o.value.hideId
  }));
  return {
    hideForLocal: _(() => u({
      prop: t.value,
      propForType: o.value.hideFor
    })),
    hideIdLocal: E,
    preventLocal: A,
    stopLocal: h
  };
}
const Mt = {
  name: "ALabel",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    clickLabel: {
      type: Function,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hideFor: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    hideId: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: "_label"
    },
    isError: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "label"
    },
    type: {
      type: String,
      required: !1
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = Ct(e), {
      hideForLocal: n,
      hideIdLocal: r,
      preventLocal: s,
      stopLocal: l
    } = cq(e), {
      forLabelLocal: o,
      idLabelLocal: u
    } = _q(e, {
      hideForLocal: n,
      hideIdLocal: r
    }), {
      isLabel: h,
      labelLocal: A,
      textAfterLabel: E,
      titleLocal: p
    } = dq(e), {
      onClick: T
    } = uq(e, {
      idLabelLocal: u,
      preventLocal: s,
      stopLocal: l
    });
    return {
      attributesToExcludeFromRender: t,
      forLabelLocal: o,
      idLabelLocal: u,
      isLabel: h,
      labelLocal: A,
      onClick: T,
      textAfterLabel: E,
      titleLocal: p
    };
  },
  render() {
    return c(me, {
      id: this.idLabelLocal,
      alwaysTranslate: this.alwaysTranslate,
      class: [
        "a_form_element_label",
        this.labelClass,
        this.isLabelFloat && !this.readonly ? "a_form_element_label_float" : "a_form_element_label_static",
        {
          a_form_element_label_error: this.isError,
          a_form_element_readonly_label: this.readonly
        }
      ],
      extra: this.extra,
      for: this.forLabelLocal,
      html: this.labelLocal,
      htmlScreenReader: this.labelScreenReader,
      loading: this.loading,
      loadingAlign: "right",
      loadingClass: "a_spinner_small a_form_element_label__spinner",
      tag: this.tag,
      textAfter: this.textAfterLabel,
      textAriaHidden: !!this.labelScreenReader,
      title: this.titleLocal,
      type: "text",
      onClick: this.readonly ? this.onClick : void 0,
      ...this.attributesToExcludeFromRender
    });
  }
}, fq = {
  name: "AInputFile",
  inheritAttrs: !1,
  mixins: [
    tf
  ],
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    isMultiple: {
      type: Boolean,
      required: !1
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    modelUndefined: {
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number, Object, Array],
      required: !1
    },
    text: {
      type: String,
      required: !1,
      default: "Dateien auswählen"
    },
    type: {
      type: String,
      required: !1,
      default: "input"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Ct(e), {
      componentStyleHide: r
    } = Xt(e), {
      ariaDescribedbyLocal: s,
      changeModel: l,
      clearModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = Yt(e, t), S = d(e, "isMultiple"), b = d(e, "modelValue"), L = _(() => S.value ? !!(Te(b.value) && b.value.length > 0) : !!(nt(b.value) && pi(b.value) > 0)), I = _(() => L.value ? S.value ? b.value : [b.value] : []), v = B(void 0), R = d(e, "disabled"), g = (M) => {
      if (R.value)
        return;
      const P = M.target.files;
      if (P && P.length) {
        const F = [];
        z(P, (C) => {
          F.push({
            id: "",
            size: C.size,
            name: C.webkitRelativePath || C.relativePath || C.name,
            type: C.type,
            file: C
          });
        }), l({
          model: S.value ? F : F[0]
        });
      }
    }, D = d(e, "required"), w = _(() => D.value ? "*" : "");
    return {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      clearModel: o,
      componentStyleHide: r,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      inputRef: v,
      isErrors: E,
      isModel: L,
      modelValueListLocal: I,
      onBlur: p,
      onFocus: T,
      onInput: g,
      textAfterLabel: w
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__parent"
      }, [
        this.label && c(Mt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          hideId: !0,
          type: this.type,
          isError: this.isErrors
        }),
        c("div", {}, [
          c("label", {
            for: this.htmlIdLocal,
            class: ["a_file__label a_form_control", this.labelClass, {
              disabled: this.disabled
            }],
            required: this.required,
            type: this.type
          }, [
            c("input", {
              ref: "inputRef",
              id: this.htmlIdLocal,
              type: "file",
              multiple: this.isMultiple,
              class: [
                "a_file__input",
                this.inputClass,
                {
                  a_form_control_invalid: this.isErrors
                }
              ],
              disabled: this.disabled,
              ariaRequired: this.required,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              ...this.inputAttributes,
              onInput: this.onInput,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }),
            c("span", {
              class: "a_file__label"
            }, this.text)
          ])
        ]),
        this.isModel && c("ul", {}, [
          this.modelValueListLocal.map((e) => c("li", {}, e.name))
        ]),
        c(ln, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(sn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function hq(e, {
  currentValue: t = B(0),
  displayValue: n = _(() => ""),
  ensurePrecision: r = () => {
  },
  setCurrentValue: s = () => {
  },
  minLocal: l = _(() => {
  })
}) {
  const o = d(e, "disabled"), u = d(e, "modelValue"), h = d(e, "max"), A = d(e, "readonly"), E = _(() => yn(u.value) && u.value <= l.value), p = _(() => yn(u.value) && u.value >= h.value);
  return {
    increase: () => {
      if (A.value || o.value || p.value)
        return;
      const b = Number(n.value) || 0, L = r({ value: b, currentValue: t.value });
      s(L);
    },
    decrease: () => {
      if (A.value || o.value || E.value)
        return;
      const b = Number(n.value) || 0, L = r({ value: b, currentValue: t.value, coefficient: -1 });
      s(L);
    }
  };
}
function Aq(e, {
  decrease: t = () => {
  },
  increase: n = () => {
  },
  inputRef: r = B({}),
  onBlur: s = () => {
  },
  setCurrentValue: l = () => {
  },
  userInput: o = B(null),
  currentValue: u = B(void 0),
  displayValue: h = _(() => ""),
  isTypeNumber: A = _(() => !0)
}) {
  const E = d(e, "type"), p = d(e, "eAllowed"), T = d(e, "min"), S = d(e, "modelValue");
  return {
    handleInput: (R) => {
      if (A.value) {
        const D = R.target.value;
        o.value = D;
        const w = D === "" ? null : Number(D);
        l(w, !1);
        return;
      }
      let g = R.target.value.trim();
      if (E.value === "integerNonNegative") {
        const D = g.match(/\d+/g);
        if (D !== null) {
          let w = parseInt(D.join(""), 10);
          w = Math.max(w, 0), g = w;
        } else
          g = null;
        l(g), r.value.value = g;
      } else if (E.value === "integerPositive") {
        if (g === "0")
          g = null;
        else {
          const D = g.match(/\d+/g);
          if (D !== null) {
            let w = parseInt(D.join(""), 10);
            w = Math.max(w, 1), g = w;
          } else
            g = null;
        }
        l(g), r.value.value = g;
      } else if (E.value === "integer") {
        const D = g.match(/\d+/g);
        if (D !== null) {
          let w = parseInt(D.join(""), 10);
          g.indexOf("-") !== -1 && (w = -w), g = w, l(g), r.value.value = g;
        } else g === "-" ? (g = "-", r.value.value = g) : (g = null, l(g), r.value.value = g);
      }
    },
    handleInputChange: (R) => {
      if (!A.value)
        return;
      const g = R.target.value, D = g !== "" ? Number(g) : "";
      (yn(D) && !Number.isNaN(D) || g === "") && l(D), o.value = null;
    },
    handleKeydown: (R) => {
      R.keyCode === X.arrowUp ? (n(), R.preventDefault()) : R.keyCode === X.arrowDown ? (t(), R.preventDefault()) : (!p.value && R.keyCode === X.e || T.value >= 0 && R.keyCode === X.minus || R.keyCode === X.plus) && (R.preventDefault(), R.stopPropagation());
    },
    onBlurNumber: (R) => {
      (o.value !== null || !S.value && S.value !== 0) && (o.value = null, u.value = S.value, r.value.value = h.value), s(R);
    }
  };
}
function Eq(e) {
  const t = d(e, "type"), n = d(e, "min");
  return {
    minLocal: _(() => {
      let s;
      return t.value === "integerNonNegative" ? s = 0 : t.value === "integerPositive" && (s = 1), (we(s) || !ie(n.value) && n.value > s) && (s = n.value), s;
    })
  };
}
function pq(e, {
  verifyValue: t = () => {
  },
  changeModel: n = () => {
  }
}) {
  const r = d(e, "precision"), s = d(e, "modelValue"), l = B(null), o = B(null), u = () => {
    o.value = s.value;
  }, h = _(() => {
    if (l.value !== null)
      return l.value;
    let E = o.value;
    if (ie(E))
      return "";
    if (yn(E)) {
      if (Number.isNaN(E))
        return "";
      we(r.value) || (E = E.toFixed(r.value));
    }
    return E;
  });
  return {
    currentValue: o,
    displayValue: h,
    initCurrentValue: u,
    setCurrentValue: (E, p = !0) => {
      const T = o.value, S = t(E);
      if (T !== S) {
        if (!p) {
          n({ model: S });
          return;
        }
        l.value = null, n({ model: S }), o.value = S;
      }
    },
    userInput: l
  };
}
function Tq(e) {
  const t = d(e, "max"), n = d(e, "min"), r = d(e, "step"), s = d(e, "type"), l = _(() => s.value === "number"), o = _(() => l.value ? "number" : "text"), u = _(() => l.value ? {
    max: t.value,
    min: n.value,
    step: r.value
  } : {});
  return {
    inputType: o,
    isTypeNumber: l,
    numberAttributes: u
  };
}
function mq(e, {
  changeModel: t = () => {
  },
  minLocal: n = _(() => {
  })
}) {
  const r = d(e, "modelUndefined"), s = d(e, "stepStrictly"), l = d(e, "step"), o = d(e, "precision"), u = d(e, "max"), h = d(e, "modelValue"), A = (S) => {
    if (ie(S))
      return 0;
    const b = S.toString(), L = b.indexOf(".");
    let I = 0;
    return L !== -1 && (I = b.length - L - 1), I;
  }, E = _(() => {
    const S = A(l.value);
    return we(o.value) ? Math.max(A(h.value), S) : (S > o.value && console.warn(
      "AInputNumber",
      "precision should not be less than the decimal places of step"
    ), o.value);
  });
  return {
    ensurePrecision: ({ value: S, currentValue: b, coefficient: L = 1 }) => yn(S) ? Uo(S + l.value * L, E.value) : b,
    verifyValue: (S, b) => {
      let L = Number(S);
      return ie(S) || Number.isNaN(L) ? null : (S === "" && (L = r.value), s.value && (L = Uo(Math.round(L / l.value) * l.value, o.value)), we(o.value) || (L = Uo(L, o.value)), L > u.value ? (L = u.value, b && t({ model: L })) : L < n.value && (L = n.value, b && t({ model: L })), L);
    }
  };
}
function Sq(e) {
  const t = d(e, "inputWidth");
  return {
    inputWidthStyleValue: _(() => {
      let r = t.value;
      return yn(t.value) && (r = `${t.value}px`), we(r) ? {} : {
        "--a_input_number_width": r
      };
    })
  };
}
const Ba = {
  name: "AInputNumber",
  inheritAttrs: !1,
  mixins: [
    tf
  ],
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    controlsType: {
      type: String,
      required: !1,
      default: () => fn.propsDefault.controlsType,
      validator: (e) => ["plus-minus", "arrows", "none"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    eAllowed: {
      type: Boolean,
      required: !1,
      default: () => fn.propsDefault.eAllowed
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: () => fn.propsDefault.iconPrepend
    },
    inputWidth: {
      type: [String, Number],
      required: !1,
      default: () => fn.propsDefault.inputWidth
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: () => fn.propsDefault.isLabelFloat
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: () => fn.propsDefault.max
    },
    min: {
      type: Number,
      required: !1,
      default: () => fn.propsDefault.min
    },
    modelUndefined: {
      required: !1,
      default: () => fn.propsDefault.modelUndefined
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: () => fn.propsDefault.placeholder
    },
    precision: {
      type: Number,
      validator: (e) => e >= 0 && e === Number.parseInt(`${e}`, 10),
      default: () => fn.propsDefault.precision
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    step: {
      type: Number,
      required: !1,
      default: () => fn.propsDefault.step
    },
    stepStrictly: {
      type: Boolean,
      required: !1,
      default: () => fn.propsDefault.stepStrictly
    },
    type: {
      type: String,
      required: !1,
      default: () => fn.propsDefault.type,
      validator: (e) => ["number", "integerNonNegative", "integerPositive", "integer"].indexOf(e) !== -1
      // TODO: "float", "floatPositiv", "floatNonNegative"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Ct(e), {
      componentStyleHide: r
    } = Xt(e), {
      ariaDescribedbyLocal: s,
      changeModel: l,
      clearModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: S
    } = Yt(e, t), {
      isClearButtonLocal: b
    } = qu(e, {
      isModel: p
    }), {
      minLocal: L
    } = Eq(e), {
      inputType: I,
      isTypeNumber: v,
      numberAttributes: R
    } = Tq(e), {
      placeholderAttributes: g
    } = yl(e), {
      inputWidthStyleValue: D
    } = Sq(e), w = B(void 0), M = d(e, "disabled"), P = (Oe) => {
      if (M.value)
        return;
      const ye = Oe.target.value;
      l({
        model: +ye
      });
    }, {
      isAutofill: F
    } = of({ inputRef: w }), {
      ensurePrecision: C,
      verifyValue: k
    } = mq(e, {
      changeModel: l,
      minLocal: L
    }), {
      currentValue: W,
      displayValue: K,
      initCurrentValue: le,
      setCurrentValue: te,
      userInput: _e
    } = pq(e, {
      verifyValue: k,
      changeModel: l
    }), {
      increase: ae,
      decrease: oe
    } = hq(e, {
      currentValue: W,
      displayValue: K,
      ensurePrecision: C,
      setCurrentValue: te,
      minLocal: L
    }), {
      handleInput: Le,
      handleInputChange: We,
      handleKeydown: Se,
      onBlurNumber: se
    } = Aq(e, {
      currentValue: W,
      decrease: oe,
      displayValue: K,
      increase: ae,
      inputRef: w,
      onBlur: T,
      setCurrentValue: te,
      userInput: _e,
      isTypeNumber: v
    });
    return le(), rt(
      () => e.modelValue,
      (Oe) => {
        const ye = k(_e.value), je = k(Oe, !0);
        !yn(ye) && (!ye || ye !== je) && (W.value = je, _e.value = null);
      },
      { immediate: !0 }
    ), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      clearModel: o,
      componentStyleHide: r,
      currentValue: W,
      decrease: oe,
      displayValue: K,
      errorsId: u,
      handleInput: Le,
      handleInputChange: We,
      handleKeydown: Se,
      helpTextId: h,
      htmlIdLocal: A,
      increase: ae,
      inputRef: w,
      inputType: I,
      inputWidthStyleValue: D,
      isAutofill: F,
      isClearButtonLocal: b,
      isErrors: E,
      isModel: p,
      numberAttributes: R,
      onBlurNumber: se,
      onFocus: S,
      onInput: P,
      placeholderAttributes: g,
      userInput: _e
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Vn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.displayValue,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: this.type
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__container"
      }, [
        c("div", {
          class: ["a_form_element__parent", {
            a_form_element__parent_float: this.isLabelFloat,
            a_form_element__parent_not_empty: this.isModel || this.isAutofill,
            a_form_element__parent_float_has_icon_prepend: this.iconPrepend,
            a_form_element__parent_invalid: this.isErrors
          }]
        }, [
          this.label && !this.isLabelFloat && c(Mt, {
            id: this.htmlIdLocal,
            alwaysTranslate: this.alwaysTranslate,
            label: this.label,
            labelClass: this.labelClass,
            labelScreenReader: this.labelScreenReader,
            required: this.required,
            type: this.type,
            isLabelFloat: this.isLabelFloat,
            isError: this.isErrors
          }),
          c("div", {
            class: [
              "a_form_element_number",
              {
                a_form_element_number_controls: this.controlsType !== "none"
              }
            ]
          }, [
            c("div", {
              class: "a_form_element",
              style: {
                ...this.inputWidthStyleValue
              }
            }, [
              this.label && this.isLabelFloat && c(Mt, {
                id: this.htmlIdLocal,
                alwaysTranslate: this.alwaysTranslate,
                label: this.label,
                labelClass: this.labelClass,
                labelScreenReader: this.labelScreenReader,
                required: this.required,
                type: this.type,
                isLabelFloat: this.isLabelFloat,
                isError: this.isErrors
              }),
              this.iconPrepend && c(ut, {
                icon: this.iconPrepend,
                class: "a_input__icon_prepend"
              }),
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                autocomplete: this.autocomplete,
                value: this.displayValue,
                type: this.inputType,
                class: [
                  "a_form_control a_input a_input_number",
                  this.inputClass,
                  {
                    a_form_element_with_one_btn: this.isClearButtonLocal,
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabled,
                ariaRequired: this.required,
                ariaInvalid: this.isErrors,
                "aria-describedby": this.ariaDescribedbyLocal,
                ...this.numberAttributes,
                ...this.placeholderAttributes,
                ...this.inputAttributes,
                onInput: this.handleInput,
                onChange: this.handleInputChange,
                onKeydown: this.handleKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlurNumber
              }),
              this.isClearButtonLocal ? c("div", {
                class: "a_form_control__actions"
              }, [
                c(xu, {
                  alwaysTranslate: this.alwaysTranslate,
                  disabled: this.disabled,
                  class: this.clearButtonClass,
                  onClear: this.clearModel
                })
              ]) : ""
            ]),
            this.controlsType === "plus-minus" && c("div", {
              class: "a_btn_group"
            }, [
              c(me, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_btn a_btn_outline_secondary",
                iconLeft: Lm,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_NUMBER_BTN_DECREASE_",
                textScreenReader: "_A_INPUT_NUMBER_BTN_DECREASE_",
                type: "button",
                onClick: this.decrease
              }),
              c(me, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_btn a_btn_outline_secondary",
                iconLeft: Im,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_NUMBER_BTN_INCREASE_",
                textScreenReader: "_A_INPUT_NUMBER_BTN_INCREASE_",
                type: "button",
                onClick: this.increase
              })
            ])
          ]),
          c(ln, {
            id: this.helpTextId,
            alwaysTranslate: this.alwaysTranslate,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(sn, {
            id: this.errorsId,
            alwaysTranslate: this.alwaysTranslate,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
};
function bq({
  idMin: e = _(() => "")
}) {
  return {
    setFocusToMinInput: () => {
      const n = document.getElementById(e.value);
      n && n.focus();
    }
  };
}
function Lq({
  htmlIdLocal: e = _(() => "")
}) {
  const t = _(() => `${e.value}_min`);
  return {
    idMax: _(() => `${e.value}_max`),
    idMin: t
  };
}
function Iq(e, {
  htmlIdLocal: t = _(() => ""),
  idMax: n = _(() => ""),
  idMin: r = _(() => "")
}) {
  const s = d(e, "inputAttributes"), l = d(e, "inputAttributesMax"), o = d(e, "inputAttributesMin"), u = _(() => `${t.value}_label`), h = _(() => ({
    "aria-labelledby": `${u.value} ${r.value}`,
    ...s.value,
    ...o.value
  }));
  return {
    inputAttributesMaxLocal: _(() => ({
      "aria-labelledby": `${u.value} ${n.value}`,
      ...s.value,
      ...l.value
    })),
    inputAttributesMinLocal: h
  };
}
function vq(e, {
  changeModel: t = () => ({})
}) {
  const n = d(e, "keyMax"), r = d(e, "keyMin"), s = d(e, "modelValue"), l = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[r.value];
  }), o = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[n.value];
  });
  return {
    changeModelMax: ({ model: A }) => {
      const E = pe(s.value);
      E[n.value] = A, t({ model: E });
    },
    changeModelMin: ({ model: A }) => {
      const E = pe(s.value);
      E[r.value] = A, t({ model: E });
    },
    modelValueMax: o,
    modelValueMin: l
  };
}
function yq(e) {
  const t = d(e, "readonlyDefault"), n = d(e, "readonlyDefaultMax"), r = d(e, "readonlyDefaultMin"), s = _(() => we(n.value) ? t.value : n.value), l = _(() => we(r.value) ? t.value : r.value);
  return {
    readonlyDefaultMaxLocal: s,
    readonlyDefaultMinLocal: l
  };
}
function gq(e) {
  const t = d(e, "type");
  return {
    typeLocal: _(() => t.value.replace("Range", ""))
  };
}
const af = ["numberRange", "integerNonNegativeRange", "integerPositiveRange", "integerRange"], ym = {};
z(af, (e) => {
  ym[e] = !0;
});
const gm = ym, Oo = {
  name: "AInputNumberRange",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    controlsType: {
      type: String,
      required: !1,
      default: "plus-minus",
      validator: (e) => ["plus-minus", "arrows"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_input_number_range_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesMax: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesMin: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputWidth: {
      type: [Number, String],
      required: !1,
      default: 200
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyMax: {
      tpe: String,
      required: !1,
      default: "max"
    },
    keyMin: {
      tpe: String,
      required: !1,
      default: "min"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelMax: {
      type: String,
      required: !1,
      default: "_A_INPUT_NUMBER_RANGE_LABEL_MAX_"
    },
    labelMin: {
      type: String,
      required: !1,
      default: "_A_INPUT_NUMBER_RANGE_LABEL_MIN_"
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: void 0
    },
    min: {
      type: Number,
      required: !1,
      default: void 0
    },
    modelUndefined: {
      required: !1,
      default: void 0
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholderMax: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholderMin: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    precision: {
      type: Number,
      validator: (e) => e >= 0 && e === Number.parseInt(`${e}`, 10)
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    readonlyDefaultMax: {
      type: String,
      required: !1,
      default: void 0
    },
    readonlyDefaultMin: {
      type: String,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    step: {
      type: Number,
      required: !1,
      default: 1
    },
    stepStrictly: {
      type: Boolean,
      required: !1
    },
    type: {
      type: String,
      required: !1,
      default: "numberRange",
      validator: (e) => af.indexOf(e) !== -1
      // TODO: "float", "floatPositiv", "floatNonNegative"
    }
  },
  emits: [
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Ct(e), {
      componentStyleHide: r
    } = Xt(e), {
      changeModel: s,
      errorsId: l,
      helpTextId: o,
      htmlIdLocal: u,
      isErrors: h
    } = Yt(e, t), {
      changeModelMax: A,
      changeModelMin: E,
      modelValueMax: p,
      modelValueMin: T
    } = vq(e, {
      changeModel: s
    }), {
      idMax: S,
      idMin: b
    } = Lq({
      htmlIdLocal: u
    }), {
      typeLocal: L
    } = gq(e), {
      inputAttributesMaxLocal: I,
      inputAttributesMinLocal: v
    } = Iq(e, {
      htmlIdLocal: u,
      idMax: S,
      idMin: b
    }), {
      setFocusToMinInput: R
    } = bq({
      idMin: b
    }), {
      destroyEventBusClickLabel: g,
      initEventBusClickLabel: D
    } = uf({
      htmlIdLocal: u,
      clickLabel: R
    }), {
      readonlyDefaultMaxLocal: w,
      readonlyDefaultMinLocal: M
    } = yq(e);
    return D(), Ot(() => {
      g();
    }), {
      attributesToExcludeFromRender: n,
      changeModelMax: A,
      changeModelMin: E,
      componentStyleHide: r,
      errorsId: l,
      helpTextId: o,
      htmlIdLocal: u,
      idMax: S,
      idMin: b,
      inputAttributesMaxLocal: I,
      inputAttributesMinLocal: v,
      isErrors: h,
      modelValueMax: p,
      modelValueMin: T,
      readonlyDefaultMaxLocal: w,
      readonlyDefaultMinLocal: M,
      typeLocal: L
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Vn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "numberRange",
      valueParentClass: "a_form_element_readonly_value_range"
    }, () => [
      c(Ba, {
        id: this.idMin,
        alwaysTranslate: this.alwaysTranslate,
        inputWidth: this.inputWidth,
        label: this.labelMin,
        max: this.max,
        min: this.min,
        precision: this.precision,
        readonly: !0,
        readonlyDefault: this.readonlyDefaultMinLocal,
        type: this.typeLocal,
        required: this.required,
        modelValue: this.modelValueMin
      }),
      c(Ba, {
        id: this.idMax,
        alwaysTranslate: this.alwaysTranslate,
        inputWidth: this.inputWidth,
        label: this.labelMax,
        max: this.max,
        min: this.min,
        precision: this.precision,
        readonly: !0,
        readonlyDefault: this.readonlyDefaultMaxLocal,
        type: this.typeLocal,
        required: this.required,
        modelValue: this.modelValueMax
      })
    ]) : c("div", {
      ...this.$attrs,
      class: "a_input_number_range",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_invalid: this.isErrors
        }]
      }, [
        this.label ? c(Mt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: !1,
          isError: this.isErrors
        }) : "",
        c("div", {
          class: "a_input_number_range__content"
        }, [
          c("div", {
            class: "a_input_number_range__group a_input_number_range__group_min"
          }, [
            c(Mt, {
              id: this.idMin,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_input_number_range__label a_input_number_range__label_min",
              isLabelFloat: !1,
              label: this.labelMin,
              isError: this.isErrors
            }),
            c(Ba, {
              id: this.idMin,
              alwaysTranslate: this.alwaysTranslate,
              controlsType: this.controlsType,
              iconPrepend: this.iconPrepend,
              inputWidth: this.inputWidth,
              isLabelFloat: !0,
              max: this.max,
              min: this.min,
              modelUndefined: this.modelUndefined,
              precision: this.precision,
              step: this.step,
              stepStrictly: this.stepStrictly,
              type: this.typeLocal,
              disabled: this.disabled,
              inputAttributes: this.inputAttributesMinLocal,
              required: this.required,
              modelValue: this.modelValueMin,
              placeholder: this.placeholderMin,
              change: this.changeModelMin
            })
          ]),
          c("div", {
            class: "a_input_number_range__group a_input_number_range__group_max"
          }, [
            c(Mt, {
              id: this.idMax,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_input_number_range__label a_input_number_range__label_max",
              isLabelFloat: !1,
              label: this.labelMax,
              isError: this.isErrors
            }),
            c(Ba, {
              id: this.idMax,
              alwaysTranslate: this.alwaysTranslate,
              controlsType: this.controlsType,
              iconPrepend: this.iconPrepend,
              inputWidth: this.inputWidth,
              isLabelFloat: !0,
              max: this.max,
              min: this.min,
              modelUndefined: this.modelUndefined,
              precision: this.precision,
              step: this.step,
              stepStrictly: this.stepStrictly,
              type: this.typeLocal,
              disabled: this.disabled,
              inputAttributes: this.inputAttributesMaxLocal,
              required: this.required,
              modelValue: this.modelValueMax,
              placeholder: this.placeholderMax,
              change: this.changeModelMax
            })
          ])
        ]),
        c(ln, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors ? c(sn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        }) : ""
      ])
    ]) : null;
  }
};
function Rq(e) {
  const t = d(e, "heightCss"), n = _(() => {
    if (t.value)
      return `height: ${t.value}`;
  }), r = _(() => {
    if (t.value)
      return `max-height: ${t.value}`;
  });
  return {
    styleHeight: n,
    styleMaxHeight: r
  };
}
function Oq(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "disabled"), r = d(e, "modelUndefined"), s = d(e, "modelValue"), l = B(void 0), o = B(""), u = B(""), h = B(void 0), A = () => {
    l.value = pe(s.value) || "";
  }, E = () => {
    n.value || t({
      model: r.value
    });
  }, p = () => {
    try {
      s.value ? o.value = JSON.stringify(s.value, void 0, 2) : o.value = "", u.value = o.value, h.value = void 0;
    } catch {
    }
  }, T = (I) => {
    if (!n.value)
      if (!u.value || u.value.length === 0)
        t({
          $event: I,
          model: r.value
        });
      else
        try {
          const v = JSON.parse(u.value);
          t({
            $event: I,
            model: v
          }), o.value = JSON.stringify(v, void 0, 2), h.value = null;
        } catch (v) {
          h.value = v.toString();
        }
  };
  return {
    clearModel: E,
    formatJson: () => {
      try {
        u.value = JSON.stringify(JSON.parse(u.value), void 0, 2);
      } catch (I) {
        h.value = I.toString();
      }
    },
    initialValue: l,
    initInitialValue: A,
    jsonString: o,
    jsonStringInput: u,
    JSONtoString: p,
    onInput: (I) => {
      n.value || (u.value = I.target.value, T());
    },
    parseError: h,
    resetModel: () => {
      n.value || (t({
        model: l.value
      }), setTimeout(() => {
        p();
      }));
    },
    stringToJSON: T
  };
}
function Cq(e) {
  const t = d(e, "modelValue"), n = d(e, "readonlyDefault"), {
    filterJson: r
  } = Hn();
  return {
    modelValueReadonly: _(() => ie(t.value) || t.value === "" ? n.value : r(t.value))
  };
}
const Nq = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-repeat" viewBox="0 0 16 16">
  <path d="M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41m-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9"/>
  <path fill-rule="evenodd" d="M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5 5 0 0 0 8 3M3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9z"/>
</svg>`, Dq = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-braces" viewBox="0 0 16 16">
  <path d="M2.114 8.063V7.9c1.005-.102 1.497-.615 1.497-1.6V4.503c0-1.094.39-1.538 1.354-1.538h.273V2h-.376C3.25 2 2.49 2.759 2.49 4.352v1.524c0 1.094-.376 1.456-1.49 1.456v1.299c1.114 0 1.49.362 1.49 1.456v1.524c0 1.593.759 2.352 2.372 2.352h.376v-.964h-.273c-.964 0-1.354-.444-1.354-1.538V9.663c0-.984-.492-1.497-1.497-1.6M13.886 7.9v.163c-1.005.103-1.497.616-1.497 1.6v1.798c0 1.094-.39 1.538-1.354 1.538h-.273v.964h.376c1.613 0 2.372-.759 2.372-2.352v-1.524c0-1.094.376-1.456 1.49-1.456V7.332c-1.114 0-1.49-.362-1.49-1.456V4.352C13.51 2.759 12.75 2 11.138 2h-.376v.964h.273c.964 0 1.354.444 1.354 1.538V6.3c0 .984.492 1.497 1.497 1.6"/>
</svg>`, Rm = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
  <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"/>
  <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"/>
</svg>`, Bq = {
  name: "AJson",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    heightCss: {
      type: String,
      required: !1,
      default: "400px;"
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_json_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = Dl(e), {
      attributesToExcludeFromRender: r
    } = Ct(e), {
      componentStyleHide: s
    } = Xt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: S
    } = Yt(e, t), {
      styleHeight: b,
      styleMaxHeight: L
    } = Rq(e), {
      clearModel: I,
      formatJson: v,
      initialValue: R,
      initInitialValue: g,
      jsonString: D,
      jsonStringInput: w,
      JSONtoString: M,
      onInput: P,
      parseError: F,
      resetModel: C
    } = Oq(e, {
      changeModel: o
    }), {
      modelValueReadonly: k
    } = Cq(e);
    return g(), M(), {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: r,
      changeModel: o,
      clearModel: I,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: u,
      formatJson: v,
      helpTextId: h,
      htmlIdLocal: A,
      onInput: P,
      initialValue: R,
      initInitialValue: g,
      isErrors: E,
      isModel: p,
      jsonString: D,
      jsonStringInput: w,
      JSONtoString: M,
      modelValueReadonly: k,
      onBlur: T,
      onFocus: S,
      parseError: F,
      resetModel: C,
      styleHeight: b,
      styleMaxHeight: L
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Vn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.modelValueReadonly,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "json",
      valueClass: "a_code_content",
      valueTag: "pre"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(Mt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: !1,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required
        }) : "",
        c("div", {
          class: "a_columns a_columns_count_12"
        }, [
          c("div", {
            class: "a_column a_column_6 a_column_12_touch"
          }, [
            c("div", {
              class: "a_d_flex a_justify_content_between"
            }, [
              c(Mt, {
                id: this.htmlIdLocal,
                alwaysTranslate: this.alwaysTranslate,
                extra: this.extra,
                idSuffix: "_input",
                isError: this.isErrors,
                isLabelFloat: !1,
                label: "_A_JSON_INPUT_"
              }),
              c("div", {
                class: "a_btn_group",
                role: "group"
              }, [
                c(me, {
                  class: [
                    "a_btn",
                    {
                      a_btn_transparent_info: !this.parseError,
                      a_btn_transparent_dark: this.parseError
                    }
                  ],
                  disabled: !!this.parseError,
                  iconLeft: Dq,
                  textScreenReader: "_A_JSON_FORMAT_INPUT_",
                  title: "_A_JSON_FORMAT_INPUT_",
                  type: "button",
                  onClick: this.formatJson
                }),
                c(me, {
                  class: "a_btn a_btn_transparent_warning",
                  iconLeft: Nq,
                  textScreenReader: "_A_JSON_RESET_INPUT_",
                  title: "_A_JSON_RESET_INPUT_",
                  type: "button",
                  onClick: this.JSONtoString
                }),
                c(me, {
                  class: "a_btn a_btn_transparent_danger",
                  iconLeft: Rm,
                  textScreenReader: "_A_JSON_DISCARD_ALL_CHANGES_",
                  title: "_A_JSON_DISCARD_ALL_CHANGES_",
                  type: "button",
                  onClick: this.resetModel
                })
              ])
            ]),
            c("div", {
              class: "a_form_element a_form_element_textarea"
            }, [
              c("textarea", {
                ref: "textareaRef",
                id: this.htmlIdLocal,
                style: this.styleHeight,
                value: this.jsonStringInput,
                "aria-describedby": this.ariaDescribedbyLocal,
                ariaInvalid: this.isErrors,
                ariaRequired: this.required,
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: [
                  "a_form_control a_json__textarea",
                  this.inputClass,
                  {
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabledAttribut,
                spellcheck: "false",
                ...this.inputAttributes,
                onInput: this.onInput,
                onFocus: this.onFocus,
                onBlur: this.onBlur
              })
            ]),
            this.parseError ? c(Ae, {
              alwaysTranslate: this.alwaysTranslate,
              class: "a_form_element__invalid_text",
              html: "_A_JSON_ERROR_HTML_{{error}}_",
              extra: {
                error: this.parseError
              }
            }) : ""
          ]),
          c("div", {
            class: "a_column a_column_6 a_column_12_touch"
          }, [
            c(Ae, {
              tag: "div",
              text: "_A_JSON_CURRENT_VALUE_"
            }),
            Pt(c("div", {
              class: "a_json__code",
              style: this.styleMaxHeight
            }), [
              [an, this.jsonString]
            ])
          ])
        ]),
        c(ln, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(sn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function wq(e) {
  const t = d(e, "label");
  return {
    hasLabel: _(() => !ie(t.value))
  };
}
function Pq(e) {
  const t = d(e, "modelValue"), n = d(e, "trueValue"), r = d(e, "falseValue");
  return {
    modelValueReadonly: _(() => t.value === n.value ? "_YES_" : t.value === r.value ? "_NO_" : t.value)
  };
}
function xq(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "modelValue"), r = d(e, "trueValue"), s = d(e, "falseValue"), l = d(e, "disabled"), o = _(() => n.value === r.value), u = (A) => {
    l.value || (setTimeout(() => {
      const E = o.value ? s.value : r.value;
      t({
        model: E,
        $event: A
      });
    }), A.stopPropagation(), A.preventDefault());
  };
  return {
    isChecked: o,
    onClick: u,
    onKeydown: (A) => {
      (A.keyCode === X.enter || A.keyCode === X.space) && u(A);
    }
  };
}
const Du = {
  name: "AOneCheckbox",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    falseValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_one_checkbox_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelTitle: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    trueValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !0
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = Dl(e), {
      attributesToExcludeFromRender: r
    } = Ct(e), {
      componentStyleHide: s
    } = Xt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = Yt(e, t), {
      isChecked: S,
      onClick: b,
      onKeydown: L
    } = xq(e, {
      changeModel: o
    }), {
      hasLabel: I
    } = wq(e), {
      modelValueReadonly: v
    } = Pq(e);
    return {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: r,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: u,
      hasLabel: I,
      helpTextId: h,
      htmlIdLocal: A,
      isChecked: S,
      isErrors: E,
      modelValueReadonly: v,
      onBlur: p,
      onClick: b,
      onFocus: T,
      onKeydown: L
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Vn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.modelValueReadonly,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "oneCheckbox"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent"]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            class: ["a_custom_control a_custom_checkbox", {
              a_custom_control_invalid: this.isErrors
            }]
          }, [
            c("input", {
              id: this.htmlIdLocal,
              value: this.modelValue,
              type: "checkbox",
              checked: this.isChecked,
              class: "a_custom_control_input",
              disabled: this.disabledAttribut,
              ariaRequired: this.required,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              indeterminate: this.indeterminate,
              ...this.inputAttributes,
              onClick: this.onClick,
              onKeydown: this.onKeydown,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }),
            c(me, {
              alwaysTranslate: this.alwaysTranslate,
              class: [
                "a_custom_control_label",
                {
                  a_custom_control_label_width_auto: this.isWidthAuto
                }
              ],
              extra: this.extra,
              for: this.htmlIdLocal,
              tag: "label",
              title: this.isLabelTitle ? this.label : void 0,
              type: "text",
              ...this.labelAttributes
            }, () => {
              var e;
              return [
                (e = this.$slots) != null && e[this.slotName] ? this.$slots[this.slotName]({
                  id: this.htmlIdLocal,
                  labelClass: [
                    "a_custom_control_label__text",
                    this.labelClass
                  ],
                  label: this.label,
                  labelScreenReader: this.labelScreenReader,
                  props: this.$props,
                  required: this.required
                }) : this.hasLabel && c("span", {
                  class: [
                    "a_custom_control_label__text",
                    this.labelClass
                  ]
                }, [
                  c(me, {
                    alwaysTranslate: this.alwaysTranslate,
                    extra: this.extra,
                    html: this.label,
                    textScreenReader: this.labelScreenReader,
                    tag: "span",
                    title: this.isLabelTitle ? this.label : void 0,
                    type: "text"
                  }),
                  this.required ? c("span", null, "*") : ""
                ])
              ];
            })
          ])
        ]),
        c(ln, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(sn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function Fq(e, {
  changeModel: t = () => {
  },
  dataKeyByKeyIdLocal: n = _(() => ({}))
}) {
  const r = d(e, "disabled"), s = d(e, "isModelArray"), l = d(e, "modelValue");
  return {
    onChangeModelValue: ({ model: u, $event: h }) => {
      r.value || (s.value ? !l.value || l.value.length === 0 ? setTimeout(() => {
        t({
          model: [u],
          $event: h
        });
      }) : setTimeout(() => {
        const A = [];
        z(l.value, (E) => {
          n.value[E] || A.push(E);
        }), A.push(u), t({
          model: A,
          $event: h
        });
      }) : setTimeout(() => {
        t({
          model: u,
          $event: h
        });
      }));
    }
  };
}
var Xi = { exports: {} };
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
var Mq = Xi.exports, YE;
function qq() {
  return YE || (YE = 1, function(e, t) {
    (function() {
      var n, r = "4.17.21", s = 200, l = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", o = "Expected a function", u = "Invalid `variable` option passed into `_.template`", h = "__lodash_hash_undefined__", A = 500, E = "__lodash_placeholder__", p = 1, T = 2, S = 4, b = 1, L = 2, I = 1, v = 2, R = 4, g = 8, D = 16, w = 32, M = 64, P = 128, F = 256, C = 512, k = 30, W = "...", K = 800, le = 16, te = 1, _e = 2, ae = 3, oe = 1 / 0, Le = 9007199254740991, We = 17976931348623157e292, Se = NaN, se = 4294967295, Oe = se - 1, ye = se >>> 1, je = [
        ["ary", P],
        ["bind", I],
        ["bindKey", v],
        ["curry", g],
        ["curryRight", D],
        ["flip", C],
        ["partial", w],
        ["partialRight", M],
        ["rearg", F]
      ], he = "[object Arguments]", ne = "[object Array]", H = "[object AsyncFunction]", Q = "[object Boolean]", re = "[object Date]", Ie = "[object DOMException]", Ce = "[object Error]", xe = "[object Function]", Xe = "[object GeneratorFunction]", Fe = "[object Map]", Pe = "[object Number]", at = "[object Null]", He = "[object Object]", st = "[object Promise]", Ze = "[object Proxy]", At = "[object RegExp]", bt = "[object Set]", Wt = "[object String]", pn = "[object Symbol]", cr = "[object Undefined]", Zt = "[object WeakMap]", Wn = "[object WeakSet]", Gn = "[object ArrayBuffer]", gn = "[object DataView]", Or = "[object Float32Array]", fr = "[object Float64Array]", Cr = "[object Int8Array]", Kn = "[object Int16Array]", jn = "[object Int32Array]", Gt = "[object Uint8Array]", Tn = "[object Uint8ClampedArray]", hr = "[object Uint16Array]", Ar = "[object Uint32Array]", ds = /\b__p \+= '';/g, Nr = /\b(__p \+=) '' \+/g, zn = /(__e\(.*?\)|\b__t\)) \+\n'';/g, Aa = /&(?:amp|lt|gt|quot|#39);/g, Rn = /[&<>"']/g, cs = RegExp(Aa.source), fs = RegExp(Rn.source), Lt = /<%-([\s\S]+?)%>/g, Yn = /<%([\s\S]+?)%>/g, Gr = /<%=([\s\S]+?)%>/g, Ea = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, Kr = /^\w*$/, pa = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, Dr = /[\\^$.*+?()[\]{}|]/g, Li = RegExp(Dr.source), Jt = /^\s+/, Ta = /\s/, $s = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, ks = /\{\n\/\* \[wrapped with (.+)\] \*/, Er = /,? & /, hs = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, on = /[()=,{}\[\]\/\s]/, Us = /\\(\\)?/g, Bl = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, Ii = /\w*$/, wl = /^[-+]0x[0-9a-f]+$/i, $u = /^0b[01]+$/i, Re = /^\[object .+?Constructor\]$/, $ = /^0o[0-7]+$/i, ue = /^(?:0|[1-9]\d*)$/, be = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, dt = /($^)/, Ut = /['\n\r\u2028\u2029\\]/g, yt = "\\ud800-\\udfff", Qt = "\\u0300-\\u036f", Xn = "\\ufe20-\\ufe2f", As = "\\u20d0-\\u20ff", Ht = Qt + Xn + As, vi = "\\u2700-\\u27bf", yi = "a-z\\xdf-\\xf6\\xf8-\\xff", hS = "\\xac\\xb1\\xd7\\xf7", AS = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", ES = "\\u2000-\\u206f", pS = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", _f = "A-Z\\xc0-\\xd6\\xd8-\\xde", df = "\\ufe0e\\ufe0f", cf = hS + AS + ES + pS, ku = "['’]", TS = "[" + yt + "]", ff = "[" + cf + "]", Pl = "[" + Ht + "]", hf = "\\d+", mS = "[" + vi + "]", Af = "[" + yi + "]", Ef = "[^" + yt + cf + hf + vi + yi + _f + "]", Uu = "\\ud83c[\\udffb-\\udfff]", SS = "(?:" + Pl + "|" + Uu + ")", pf = "[^" + yt + "]", Hu = "(?:\\ud83c[\\udde6-\\uddff]){2}", Vu = "[\\ud800-\\udbff][\\udc00-\\udfff]", Hs = "[" + _f + "]", Tf = "\\u200d", mf = "(?:" + Af + "|" + Ef + ")", bS = "(?:" + Hs + "|" + Ef + ")", Sf = "(?:" + ku + "(?:d|ll|m|re|s|t|ve))?", bf = "(?:" + ku + "(?:D|LL|M|RE|S|T|VE))?", Lf = SS + "?", If = "[" + df + "]?", LS = "(?:" + Tf + "(?:" + [pf, Hu, Vu].join("|") + ")" + If + Lf + ")*", IS = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", vS = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", vf = If + Lf + LS, yS = "(?:" + [mS, Hu, Vu].join("|") + ")" + vf, gS = "(?:" + [pf + Pl + "?", Pl, Hu, Vu, TS].join("|") + ")", RS = RegExp(ku, "g"), OS = RegExp(Pl, "g"), Wu = RegExp(Uu + "(?=" + Uu + ")|" + gS + vf, "g"), CS = RegExp([
        Hs + "?" + Af + "+" + Sf + "(?=" + [ff, Hs, "$"].join("|") + ")",
        bS + "+" + bf + "(?=" + [ff, Hs + mf, "$"].join("|") + ")",
        Hs + "?" + mf + "+" + Sf,
        Hs + "+" + bf,
        vS,
        IS,
        hf,
        yS
      ].join("|"), "g"), NS = RegExp("[" + Tf + yt + Ht + df + "]"), DS = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, BS = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
      ], wS = -1, Tt = {};
      Tt[Or] = Tt[fr] = Tt[Cr] = Tt[Kn] = Tt[jn] = Tt[Gt] = Tt[Tn] = Tt[hr] = Tt[Ar] = !0, Tt[he] = Tt[ne] = Tt[Gn] = Tt[Q] = Tt[gn] = Tt[re] = Tt[Ce] = Tt[xe] = Tt[Fe] = Tt[Pe] = Tt[He] = Tt[At] = Tt[bt] = Tt[Wt] = Tt[Zt] = !1;
      var Et = {};
      Et[he] = Et[ne] = Et[Gn] = Et[gn] = Et[Q] = Et[re] = Et[Or] = Et[fr] = Et[Cr] = Et[Kn] = Et[jn] = Et[Fe] = Et[Pe] = Et[He] = Et[At] = Et[bt] = Et[Wt] = Et[pn] = Et[Gt] = Et[Tn] = Et[hr] = Et[Ar] = !0, Et[Ce] = Et[xe] = Et[Zt] = !1;
      var PS = {
        // Latin-1 Supplement block.
        À: "A",
        Á: "A",
        Â: "A",
        Ã: "A",
        Ä: "A",
        Å: "A",
        à: "a",
        á: "a",
        â: "a",
        ã: "a",
        ä: "a",
        å: "a",
        Ç: "C",
        ç: "c",
        Ð: "D",
        ð: "d",
        È: "E",
        É: "E",
        Ê: "E",
        Ë: "E",
        è: "e",
        é: "e",
        ê: "e",
        ë: "e",
        Ì: "I",
        Í: "I",
        Î: "I",
        Ï: "I",
        ì: "i",
        í: "i",
        î: "i",
        ï: "i",
        Ñ: "N",
        ñ: "n",
        Ò: "O",
        Ó: "O",
        Ô: "O",
        Õ: "O",
        Ö: "O",
        Ø: "O",
        ò: "o",
        ó: "o",
        ô: "o",
        õ: "o",
        ö: "o",
        ø: "o",
        Ù: "U",
        Ú: "U",
        Û: "U",
        Ü: "U",
        ù: "u",
        ú: "u",
        û: "u",
        ü: "u",
        Ý: "Y",
        ý: "y",
        ÿ: "y",
        Æ: "Ae",
        æ: "ae",
        Þ: "Th",
        þ: "th",
        ß: "ss",
        // Latin Extended-A block.
        Ā: "A",
        Ă: "A",
        Ą: "A",
        ā: "a",
        ă: "a",
        ą: "a",
        Ć: "C",
        Ĉ: "C",
        Ċ: "C",
        Č: "C",
        ć: "c",
        ĉ: "c",
        ċ: "c",
        č: "c",
        Ď: "D",
        Đ: "D",
        ď: "d",
        đ: "d",
        Ē: "E",
        Ĕ: "E",
        Ė: "E",
        Ę: "E",
        Ě: "E",
        ē: "e",
        ĕ: "e",
        ė: "e",
        ę: "e",
        ě: "e",
        Ĝ: "G",
        Ğ: "G",
        Ġ: "G",
        Ģ: "G",
        ĝ: "g",
        ğ: "g",
        ġ: "g",
        ģ: "g",
        Ĥ: "H",
        Ħ: "H",
        ĥ: "h",
        ħ: "h",
        Ĩ: "I",
        Ī: "I",
        Ĭ: "I",
        Į: "I",
        İ: "I",
        ĩ: "i",
        ī: "i",
        ĭ: "i",
        į: "i",
        ı: "i",
        Ĵ: "J",
        ĵ: "j",
        Ķ: "K",
        ķ: "k",
        ĸ: "k",
        Ĺ: "L",
        Ļ: "L",
        Ľ: "L",
        Ŀ: "L",
        Ł: "L",
        ĺ: "l",
        ļ: "l",
        ľ: "l",
        ŀ: "l",
        ł: "l",
        Ń: "N",
        Ņ: "N",
        Ň: "N",
        Ŋ: "N",
        ń: "n",
        ņ: "n",
        ň: "n",
        ŋ: "n",
        Ō: "O",
        Ŏ: "O",
        Ő: "O",
        ō: "o",
        ŏ: "o",
        ő: "o",
        Ŕ: "R",
        Ŗ: "R",
        Ř: "R",
        ŕ: "r",
        ŗ: "r",
        ř: "r",
        Ś: "S",
        Ŝ: "S",
        Ş: "S",
        Š: "S",
        ś: "s",
        ŝ: "s",
        ş: "s",
        š: "s",
        Ţ: "T",
        Ť: "T",
        Ŧ: "T",
        ţ: "t",
        ť: "t",
        ŧ: "t",
        Ũ: "U",
        Ū: "U",
        Ŭ: "U",
        Ů: "U",
        Ű: "U",
        Ų: "U",
        ũ: "u",
        ū: "u",
        ŭ: "u",
        ů: "u",
        ű: "u",
        ų: "u",
        Ŵ: "W",
        ŵ: "w",
        Ŷ: "Y",
        ŷ: "y",
        Ÿ: "Y",
        Ź: "Z",
        Ż: "Z",
        Ž: "Z",
        ź: "z",
        ż: "z",
        ž: "z",
        Ĳ: "IJ",
        ĳ: "ij",
        Œ: "Oe",
        œ: "oe",
        ŉ: "'n",
        ſ: "s"
      }, xS = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      }, FS = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      }, MS = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
      }, qS = parseFloat, $S = parseInt, yf = typeof vo == "object" && vo && vo.Object === Object && vo, kS = typeof self == "object" && self && self.Object === Object && self, Kt = yf || kS || Function("return this")(), Gu = t && !t.nodeType && t, Es = Gu && !0 && e && !e.nodeType && e, gf = Es && Es.exports === Gu, Ku = gf && yf.process, Zn = function() {
        try {
          var U = Es && Es.require && Es.require("util").types;
          return U || Ku && Ku.binding && Ku.binding("util");
        } catch {
        }
      }(), Rf = Zn && Zn.isArrayBuffer, Of = Zn && Zn.isDate, Cf = Zn && Zn.isMap, Nf = Zn && Zn.isRegExp, Df = Zn && Zn.isSet, Bf = Zn && Zn.isTypedArray;
      function On(U, Y, G) {
        switch (G.length) {
          case 0:
            return U.call(Y);
          case 1:
            return U.call(Y, G[0]);
          case 2:
            return U.call(Y, G[0], G[1]);
          case 3:
            return U.call(Y, G[0], G[1], G[2]);
        }
        return U.apply(Y, G);
      }
      function US(U, Y, G, Ee) {
        for (var Me = -1, ot = U == null ? 0 : U.length; ++Me < ot; ) {
          var qt = U[Me];
          Y(Ee, qt, G(qt), U);
        }
        return Ee;
      }
      function Jn(U, Y) {
        for (var G = -1, Ee = U == null ? 0 : U.length; ++G < Ee && Y(U[G], G, U) !== !1; )
          ;
        return U;
      }
      function HS(U, Y) {
        for (var G = U == null ? 0 : U.length; G-- && Y(U[G], G, U) !== !1; )
          ;
        return U;
      }
      function wf(U, Y) {
        for (var G = -1, Ee = U == null ? 0 : U.length; ++G < Ee; )
          if (!Y(U[G], G, U))
            return !1;
        return !0;
      }
      function ma(U, Y) {
        for (var G = -1, Ee = U == null ? 0 : U.length, Me = 0, ot = []; ++G < Ee; ) {
          var qt = U[G];
          Y(qt, G, U) && (ot[Me++] = qt);
        }
        return ot;
      }
      function xl(U, Y) {
        var G = U == null ? 0 : U.length;
        return !!G && Vs(U, Y, 0) > -1;
      }
      function ju(U, Y, G) {
        for (var Ee = -1, Me = U == null ? 0 : U.length; ++Ee < Me; )
          if (G(Y, U[Ee]))
            return !0;
        return !1;
      }
      function It(U, Y) {
        for (var G = -1, Ee = U == null ? 0 : U.length, Me = Array(Ee); ++G < Ee; )
          Me[G] = Y(U[G], G, U);
        return Me;
      }
      function Sa(U, Y) {
        for (var G = -1, Ee = Y.length, Me = U.length; ++G < Ee; )
          U[Me + G] = Y[G];
        return U;
      }
      function zu(U, Y, G, Ee) {
        var Me = -1, ot = U == null ? 0 : U.length;
        for (Ee && ot && (G = U[++Me]); ++Me < ot; )
          G = Y(G, U[Me], Me, U);
        return G;
      }
      function VS(U, Y, G, Ee) {
        var Me = U == null ? 0 : U.length;
        for (Ee && Me && (G = U[--Me]); Me--; )
          G = Y(G, U[Me], Me, U);
        return G;
      }
      function Yu(U, Y) {
        for (var G = -1, Ee = U == null ? 0 : U.length; ++G < Ee; )
          if (Y(U[G], G, U))
            return !0;
        return !1;
      }
      var WS = Xu("length");
      function GS(U) {
        return U.split("");
      }
      function KS(U) {
        return U.match(hs) || [];
      }
      function Pf(U, Y, G) {
        var Ee;
        return G(U, function(Me, ot, qt) {
          if (Y(Me, ot, qt))
            return Ee = ot, !1;
        }), Ee;
      }
      function Fl(U, Y, G, Ee) {
        for (var Me = U.length, ot = G + (Ee ? 1 : -1); Ee ? ot-- : ++ot < Me; )
          if (Y(U[ot], ot, U))
            return ot;
        return -1;
      }
      function Vs(U, Y, G) {
        return Y === Y ? ab(U, Y, G) : Fl(U, xf, G);
      }
      function jS(U, Y, G, Ee) {
        for (var Me = G - 1, ot = U.length; ++Me < ot; )
          if (Ee(U[Me], Y))
            return Me;
        return -1;
      }
      function xf(U) {
        return U !== U;
      }
      function Ff(U, Y) {
        var G = U == null ? 0 : U.length;
        return G ? Ju(U, Y) / G : Se;
      }
      function Xu(U) {
        return function(Y) {
          return Y == null ? n : Y[U];
        };
      }
      function Zu(U) {
        return function(Y) {
          return U == null ? n : U[Y];
        };
      }
      function Mf(U, Y, G, Ee, Me) {
        return Me(U, function(ot, qt, ht) {
          G = Ee ? (Ee = !1, ot) : Y(G, ot, qt, ht);
        }), G;
      }
      function zS(U, Y) {
        var G = U.length;
        for (U.sort(Y); G--; )
          U[G] = U[G].value;
        return U;
      }
      function Ju(U, Y) {
        for (var G, Ee = -1, Me = U.length; ++Ee < Me; ) {
          var ot = Y(U[Ee]);
          ot !== n && (G = G === n ? ot : G + ot);
        }
        return G;
      }
      function Qu(U, Y) {
        for (var G = -1, Ee = Array(U); ++G < U; )
          Ee[G] = Y(G);
        return Ee;
      }
      function YS(U, Y) {
        return It(Y, function(G) {
          return [G, U[G]];
        });
      }
      function qf(U) {
        return U && U.slice(0, Hf(U) + 1).replace(Jt, "");
      }
      function Cn(U) {
        return function(Y) {
          return U(Y);
        };
      }
      function e_(U, Y) {
        return It(Y, function(G) {
          return U[G];
        });
      }
      function gi(U, Y) {
        return U.has(Y);
      }
      function $f(U, Y) {
        for (var G = -1, Ee = U.length; ++G < Ee && Vs(Y, U[G], 0) > -1; )
          ;
        return G;
      }
      function kf(U, Y) {
        for (var G = U.length; G-- && Vs(Y, U[G], 0) > -1; )
          ;
        return G;
      }
      function XS(U, Y) {
        for (var G = U.length, Ee = 0; G--; )
          U[G] === Y && ++Ee;
        return Ee;
      }
      var ZS = Zu(PS), JS = Zu(xS);
      function QS(U) {
        return "\\" + MS[U];
      }
      function eb(U, Y) {
        return U == null ? n : U[Y];
      }
      function Ws(U) {
        return NS.test(U);
      }
      function tb(U) {
        return DS.test(U);
      }
      function nb(U) {
        for (var Y, G = []; !(Y = U.next()).done; )
          G.push(Y.value);
        return G;
      }
      function t_(U) {
        var Y = -1, G = Array(U.size);
        return U.forEach(function(Ee, Me) {
          G[++Y] = [Me, Ee];
        }), G;
      }
      function Uf(U, Y) {
        return function(G) {
          return U(Y(G));
        };
      }
      function ba(U, Y) {
        for (var G = -1, Ee = U.length, Me = 0, ot = []; ++G < Ee; ) {
          var qt = U[G];
          (qt === Y || qt === E) && (U[G] = E, ot[Me++] = G);
        }
        return ot;
      }
      function Ml(U) {
        var Y = -1, G = Array(U.size);
        return U.forEach(function(Ee) {
          G[++Y] = Ee;
        }), G;
      }
      function rb(U) {
        var Y = -1, G = Array(U.size);
        return U.forEach(function(Ee) {
          G[++Y] = [Ee, Ee];
        }), G;
      }
      function ab(U, Y, G) {
        for (var Ee = G - 1, Me = U.length; ++Ee < Me; )
          if (U[Ee] === Y)
            return Ee;
        return -1;
      }
      function sb(U, Y, G) {
        for (var Ee = G + 1; Ee--; )
          if (U[Ee] === Y)
            return Ee;
        return Ee;
      }
      function Gs(U) {
        return Ws(U) ? lb(U) : WS(U);
      }
      function pr(U) {
        return Ws(U) ? ob(U) : GS(U);
      }
      function Hf(U) {
        for (var Y = U.length; Y-- && Ta.test(U.charAt(Y)); )
          ;
        return Y;
      }
      var ib = Zu(FS);
      function lb(U) {
        for (var Y = Wu.lastIndex = 0; Wu.test(U); )
          ++Y;
        return Y;
      }
      function ob(U) {
        return U.match(Wu) || [];
      }
      function ub(U) {
        return U.match(CS) || [];
      }
      var _b = function U(Y) {
        Y = Y == null ? Kt : Ks.defaults(Kt.Object(), Y, Ks.pick(Kt, BS));
        var G = Y.Array, Ee = Y.Date, Me = Y.Error, ot = Y.Function, qt = Y.Math, ht = Y.Object, n_ = Y.RegExp, db = Y.String, Qn = Y.TypeError, ql = G.prototype, cb = ot.prototype, js = ht.prototype, $l = Y["__core-js_shared__"], kl = cb.toString, ct = js.hasOwnProperty, fb = 0, Vf = function() {
          var a = /[^.]+$/.exec($l && $l.keys && $l.keys.IE_PROTO || "");
          return a ? "Symbol(src)_1." + a : "";
        }(), Ul = js.toString, hb = kl.call(ht), Ab = Kt._, Eb = n_(
          "^" + kl.call(ct).replace(Dr, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
        ), Hl = gf ? Y.Buffer : n, La = Y.Symbol, Vl = Y.Uint8Array, Wf = Hl ? Hl.allocUnsafe : n, Wl = Uf(ht.getPrototypeOf, ht), Gf = ht.create, Kf = js.propertyIsEnumerable, Gl = ql.splice, jf = La ? La.isConcatSpreadable : n, Ri = La ? La.iterator : n, ps = La ? La.toStringTag : n, Kl = function() {
          try {
            var a = Ls(ht, "defineProperty");
            return a({}, "", {}), a;
          } catch {
          }
        }(), pb = Y.clearTimeout !== Kt.clearTimeout && Y.clearTimeout, Tb = Ee && Ee.now !== Kt.Date.now && Ee.now, mb = Y.setTimeout !== Kt.setTimeout && Y.setTimeout, jl = qt.ceil, zl = qt.floor, r_ = ht.getOwnPropertySymbols, Sb = Hl ? Hl.isBuffer : n, zf = Y.isFinite, bb = ql.join, Lb = Uf(ht.keys, ht), $t = qt.max, en = qt.min, Ib = Ee.now, vb = Y.parseInt, Yf = qt.random, yb = ql.reverse, a_ = Ls(Y, "DataView"), Oi = Ls(Y, "Map"), s_ = Ls(Y, "Promise"), zs = Ls(Y, "Set"), Ci = Ls(Y, "WeakMap"), Ni = Ls(ht, "create"), Yl = Ci && new Ci(), Ys = {}, gb = Is(a_), Rb = Is(Oi), Ob = Is(s_), Cb = Is(zs), Nb = Is(Ci), Xl = La ? La.prototype : n, Di = Xl ? Xl.valueOf : n, Xf = Xl ? Xl.toString : n;
        function O(a) {
          if (gt(a) && !$e(a) && !(a instanceof Je)) {
            if (a instanceof er)
              return a;
            if (ct.call(a, "__wrapped__"))
              return Zh(a);
          }
          return new er(a);
        }
        var Xs = /* @__PURE__ */ function() {
          function a() {
          }
          return function(i) {
            if (!vt(i))
              return {};
            if (Gf)
              return Gf(i);
            a.prototype = i;
            var f = new a();
            return a.prototype = n, f;
          };
        }();
        function Zl() {
        }
        function er(a, i) {
          this.__wrapped__ = a, this.__actions__ = [], this.__chain__ = !!i, this.__index__ = 0, this.__values__ = n;
        }
        O.templateSettings = {
          /**
           * Used to detect `data` property values to be HTML-escaped.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          escape: Lt,
          /**
           * Used to detect code to be evaluated.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          evaluate: Yn,
          /**
           * Used to detect `data` property values to inject.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          interpolate: Gr,
          /**
           * Used to reference the data object in the template text.
           *
           * @memberOf _.templateSettings
           * @type {string}
           */
          variable: "",
          /**
           * Used to import variables into the compiled template.
           *
           * @memberOf _.templateSettings
           * @type {Object}
           */
          imports: {
            /**
             * A reference to the `lodash` function.
             *
             * @memberOf _.templateSettings.imports
             * @type {Function}
             */
            _: O
          }
        }, O.prototype = Zl.prototype, O.prototype.constructor = O, er.prototype = Xs(Zl.prototype), er.prototype.constructor = er;
        function Je(a) {
          this.__wrapped__ = a, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = se, this.__views__ = [];
        }
        function Db() {
          var a = new Je(this.__wrapped__);
          return a.__actions__ = mn(this.__actions__), a.__dir__ = this.__dir__, a.__filtered__ = this.__filtered__, a.__iteratees__ = mn(this.__iteratees__), a.__takeCount__ = this.__takeCount__, a.__views__ = mn(this.__views__), a;
        }
        function Bb() {
          if (this.__filtered__) {
            var a = new Je(this);
            a.__dir__ = -1, a.__filtered__ = !0;
          } else
            a = this.clone(), a.__dir__ *= -1;
          return a;
        }
        function wb() {
          var a = this.__wrapped__.value(), i = this.__dir__, f = $e(a), m = i < 0, y = f ? a.length : 0, N = GL(0, y, this.__views__), x = N.start, q = N.end, V = q - x, Z = m ? q : x - 1, J = this.__iteratees__, ee = J.length, ce = 0, ve = en(V, this.__takeCount__);
          if (!f || !m && y == V && ve == V)
            return Sh(a, this.__actions__);
          var De = [];
          e:
            for (; V-- && ce < ve; ) {
              Z += i;
              for (var Ve = -1, Be = a[Z]; ++Ve < ee; ) {
                var ze = J[Ve], et = ze.iteratee, Bn = ze.type, dn = et(Be);
                if (Bn == _e)
                  Be = dn;
                else if (!dn) {
                  if (Bn == te)
                    continue e;
                  break e;
                }
              }
              De[ce++] = Be;
            }
          return De;
        }
        Je.prototype = Xs(Zl.prototype), Je.prototype.constructor = Je;
        function Ts(a) {
          var i = -1, f = a == null ? 0 : a.length;
          for (this.clear(); ++i < f; ) {
            var m = a[i];
            this.set(m[0], m[1]);
          }
        }
        function Pb() {
          this.__data__ = Ni ? Ni(null) : {}, this.size = 0;
        }
        function xb(a) {
          var i = this.has(a) && delete this.__data__[a];
          return this.size -= i ? 1 : 0, i;
        }
        function Fb(a) {
          var i = this.__data__;
          if (Ni) {
            var f = i[a];
            return f === h ? n : f;
          }
          return ct.call(i, a) ? i[a] : n;
        }
        function Mb(a) {
          var i = this.__data__;
          return Ni ? i[a] !== n : ct.call(i, a);
        }
        function qb(a, i) {
          var f = this.__data__;
          return this.size += this.has(a) ? 0 : 1, f[a] = Ni && i === n ? h : i, this;
        }
        Ts.prototype.clear = Pb, Ts.prototype.delete = xb, Ts.prototype.get = Fb, Ts.prototype.has = Mb, Ts.prototype.set = qb;
        function jr(a) {
          var i = -1, f = a == null ? 0 : a.length;
          for (this.clear(); ++i < f; ) {
            var m = a[i];
            this.set(m[0], m[1]);
          }
        }
        function $b() {
          this.__data__ = [], this.size = 0;
        }
        function kb(a) {
          var i = this.__data__, f = Jl(i, a);
          if (f < 0)
            return !1;
          var m = i.length - 1;
          return f == m ? i.pop() : Gl.call(i, f, 1), --this.size, !0;
        }
        function Ub(a) {
          var i = this.__data__, f = Jl(i, a);
          return f < 0 ? n : i[f][1];
        }
        function Hb(a) {
          return Jl(this.__data__, a) > -1;
        }
        function Vb(a, i) {
          var f = this.__data__, m = Jl(f, a);
          return m < 0 ? (++this.size, f.push([a, i])) : f[m][1] = i, this;
        }
        jr.prototype.clear = $b, jr.prototype.delete = kb, jr.prototype.get = Ub, jr.prototype.has = Hb, jr.prototype.set = Vb;
        function zr(a) {
          var i = -1, f = a == null ? 0 : a.length;
          for (this.clear(); ++i < f; ) {
            var m = a[i];
            this.set(m[0], m[1]);
          }
        }
        function Wb() {
          this.size = 0, this.__data__ = {
            hash: new Ts(),
            map: new (Oi || jr)(),
            string: new Ts()
          };
        }
        function Gb(a) {
          var i = _o(this, a).delete(a);
          return this.size -= i ? 1 : 0, i;
        }
        function Kb(a) {
          return _o(this, a).get(a);
        }
        function jb(a) {
          return _o(this, a).has(a);
        }
        function zb(a, i) {
          var f = _o(this, a), m = f.size;
          return f.set(a, i), this.size += f.size == m ? 0 : 1, this;
        }
        zr.prototype.clear = Wb, zr.prototype.delete = Gb, zr.prototype.get = Kb, zr.prototype.has = jb, zr.prototype.set = zb;
        function ms(a) {
          var i = -1, f = a == null ? 0 : a.length;
          for (this.__data__ = new zr(); ++i < f; )
            this.add(a[i]);
        }
        function Yb(a) {
          return this.__data__.set(a, h), this;
        }
        function Xb(a) {
          return this.__data__.has(a);
        }
        ms.prototype.add = ms.prototype.push = Yb, ms.prototype.has = Xb;
        function Tr(a) {
          var i = this.__data__ = new jr(a);
          this.size = i.size;
        }
        function Zb() {
          this.__data__ = new jr(), this.size = 0;
        }
        function Jb(a) {
          var i = this.__data__, f = i.delete(a);
          return this.size = i.size, f;
        }
        function Qb(a) {
          return this.__data__.get(a);
        }
        function eL(a) {
          return this.__data__.has(a);
        }
        function tL(a, i) {
          var f = this.__data__;
          if (f instanceof jr) {
            var m = f.__data__;
            if (!Oi || m.length < s - 1)
              return m.push([a, i]), this.size = ++f.size, this;
            f = this.__data__ = new zr(m);
          }
          return f.set(a, i), this.size = f.size, this;
        }
        Tr.prototype.clear = Zb, Tr.prototype.delete = Jb, Tr.prototype.get = Qb, Tr.prototype.has = eL, Tr.prototype.set = tL;
        function Zf(a, i) {
          var f = $e(a), m = !f && vs(a), y = !f && !m && Ra(a), N = !f && !m && !y && ei(a), x = f || m || y || N, q = x ? Qu(a.length, db) : [], V = q.length;
          for (var Z in a)
            (i || ct.call(a, Z)) && !(x && // Safari 9 has enumerable `arguments.length` in strict mode.
            (Z == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
            y && (Z == "offset" || Z == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
            N && (Z == "buffer" || Z == "byteLength" || Z == "byteOffset") || // Skip index properties.
            Jr(Z, V))) && q.push(Z);
          return q;
        }
        function Jf(a) {
          var i = a.length;
          return i ? a[E_(0, i - 1)] : n;
        }
        function nL(a, i) {
          return co(mn(a), Ss(i, 0, a.length));
        }
        function rL(a) {
          return co(mn(a));
        }
        function i_(a, i, f) {
          (f !== n && !mr(a[i], f) || f === n && !(i in a)) && Yr(a, i, f);
        }
        function Bi(a, i, f) {
          var m = a[i];
          (!(ct.call(a, i) && mr(m, f)) || f === n && !(i in a)) && Yr(a, i, f);
        }
        function Jl(a, i) {
          for (var f = a.length; f--; )
            if (mr(a[f][0], i))
              return f;
          return -1;
        }
        function aL(a, i, f, m) {
          return Ia(a, function(y, N, x) {
            i(m, y, f(y), x);
          }), m;
        }
        function Qf(a, i) {
          return a && wr(i, Vt(i), a);
        }
        function sL(a, i) {
          return a && wr(i, bn(i), a);
        }
        function Yr(a, i, f) {
          i == "__proto__" && Kl ? Kl(a, i, {
            configurable: !0,
            enumerable: !0,
            value: f,
            writable: !0
          }) : a[i] = f;
        }
        function l_(a, i) {
          for (var f = -1, m = i.length, y = G(m), N = a == null; ++f < m; )
            y[f] = N ? n : U_(a, i[f]);
          return y;
        }
        function Ss(a, i, f) {
          return a === a && (f !== n && (a = a <= f ? a : f), i !== n && (a = a >= i ? a : i)), a;
        }
        function tr(a, i, f, m, y, N) {
          var x, q = i & p, V = i & T, Z = i & S;
          if (f && (x = y ? f(a, m, y, N) : f(a)), x !== n)
            return x;
          if (!vt(a))
            return a;
          var J = $e(a);
          if (J) {
            if (x = jL(a), !q)
              return mn(a, x);
          } else {
            var ee = tn(a), ce = ee == xe || ee == Xe;
            if (Ra(a))
              return Ih(a, q);
            if (ee == He || ee == he || ce && !y) {
              if (x = V || ce ? {} : Hh(a), !q)
                return V ? FL(a, sL(x, a)) : xL(a, Qf(x, a));
            } else {
              if (!Et[ee])
                return y ? a : {};
              x = zL(a, ee, q);
            }
          }
          N || (N = new Tr());
          var ve = N.get(a);
          if (ve)
            return ve;
          N.set(a, x), pA(a) ? a.forEach(function(Be) {
            x.add(tr(Be, i, f, Be, a, N));
          }) : AA(a) && a.forEach(function(Be, ze) {
            x.set(ze, tr(Be, i, f, ze, a, N));
          });
          var De = Z ? V ? R_ : g_ : V ? bn : Vt, Ve = J ? n : De(a);
          return Jn(Ve || a, function(Be, ze) {
            Ve && (ze = Be, Be = a[ze]), Bi(x, ze, tr(Be, i, f, ze, a, N));
          }), x;
        }
        function iL(a) {
          var i = Vt(a);
          return function(f) {
            return eh(f, a, i);
          };
        }
        function eh(a, i, f) {
          var m = f.length;
          if (a == null)
            return !m;
          for (a = ht(a); m--; ) {
            var y = f[m], N = i[y], x = a[y];
            if (x === n && !(y in a) || !N(x))
              return !1;
          }
          return !0;
        }
        function th(a, i, f) {
          if (typeof a != "function")
            throw new Qn(o);
          return $i(function() {
            a.apply(n, f);
          }, i);
        }
        function wi(a, i, f, m) {
          var y = -1, N = xl, x = !0, q = a.length, V = [], Z = i.length;
          if (!q)
            return V;
          f && (i = It(i, Cn(f))), m ? (N = ju, x = !1) : i.length >= s && (N = gi, x = !1, i = new ms(i));
          e:
            for (; ++y < q; ) {
              var J = a[y], ee = f == null ? J : f(J);
              if (J = m || J !== 0 ? J : 0, x && ee === ee) {
                for (var ce = Z; ce--; )
                  if (i[ce] === ee)
                    continue e;
                V.push(J);
              } else N(i, ee, m) || V.push(J);
            }
          return V;
        }
        var Ia = Oh(Br), nh = Oh(u_, !0);
        function lL(a, i) {
          var f = !0;
          return Ia(a, function(m, y, N) {
            return f = !!i(m, y, N), f;
          }), f;
        }
        function Ql(a, i, f) {
          for (var m = -1, y = a.length; ++m < y; ) {
            var N = a[m], x = i(N);
            if (x != null && (q === n ? x === x && !Dn(x) : f(x, q)))
              var q = x, V = N;
          }
          return V;
        }
        function oL(a, i, f, m) {
          var y = a.length;
          for (f = Ue(f), f < 0 && (f = -f > y ? 0 : y + f), m = m === n || m > y ? y : Ue(m), m < 0 && (m += y), m = f > m ? 0 : mA(m); f < m; )
            a[f++] = i;
          return a;
        }
        function rh(a, i) {
          var f = [];
          return Ia(a, function(m, y, N) {
            i(m, y, N) && f.push(m);
          }), f;
        }
        function jt(a, i, f, m, y) {
          var N = -1, x = a.length;
          for (f || (f = XL), y || (y = []); ++N < x; ) {
            var q = a[N];
            i > 0 && f(q) ? i > 1 ? jt(q, i - 1, f, m, y) : Sa(y, q) : m || (y[y.length] = q);
          }
          return y;
        }
        var o_ = Ch(), ah = Ch(!0);
        function Br(a, i) {
          return a && o_(a, i, Vt);
        }
        function u_(a, i) {
          return a && ah(a, i, Vt);
        }
        function eo(a, i) {
          return ma(i, function(f) {
            return Qr(a[f]);
          });
        }
        function bs(a, i) {
          i = ya(i, a);
          for (var f = 0, m = i.length; a != null && f < m; )
            a = a[Pr(i[f++])];
          return f && f == m ? a : n;
        }
        function sh(a, i, f) {
          var m = i(a);
          return $e(a) ? m : Sa(m, f(a));
        }
        function un(a) {
          return a == null ? a === n ? cr : at : ps && ps in ht(a) ? WL(a) : rI(a);
        }
        function __(a, i) {
          return a > i;
        }
        function uL(a, i) {
          return a != null && ct.call(a, i);
        }
        function _L(a, i) {
          return a != null && i in ht(a);
        }
        function dL(a, i, f) {
          return a >= en(i, f) && a < $t(i, f);
        }
        function d_(a, i, f) {
          for (var m = f ? ju : xl, y = a[0].length, N = a.length, x = N, q = G(N), V = 1 / 0, Z = []; x--; ) {
            var J = a[x];
            x && i && (J = It(J, Cn(i))), V = en(J.length, V), q[x] = !f && (i || y >= 120 && J.length >= 120) ? new ms(x && J) : n;
          }
          J = a[0];
          var ee = -1, ce = q[0];
          e:
            for (; ++ee < y && Z.length < V; ) {
              var ve = J[ee], De = i ? i(ve) : ve;
              if (ve = f || ve !== 0 ? ve : 0, !(ce ? gi(ce, De) : m(Z, De, f))) {
                for (x = N; --x; ) {
                  var Ve = q[x];
                  if (!(Ve ? gi(Ve, De) : m(a[x], De, f)))
                    continue e;
                }
                ce && ce.push(De), Z.push(ve);
              }
            }
          return Z;
        }
        function cL(a, i, f, m) {
          return Br(a, function(y, N, x) {
            i(m, f(y), N, x);
          }), m;
        }
        function Pi(a, i, f) {
          i = ya(i, a), a = Kh(a, i);
          var m = a == null ? a : a[Pr(rr(i))];
          return m == null ? n : On(m, a, f);
        }
        function ih(a) {
          return gt(a) && un(a) == he;
        }
        function fL(a) {
          return gt(a) && un(a) == Gn;
        }
        function hL(a) {
          return gt(a) && un(a) == re;
        }
        function xi(a, i, f, m, y) {
          return a === i ? !0 : a == null || i == null || !gt(a) && !gt(i) ? a !== a && i !== i : AL(a, i, f, m, xi, y);
        }
        function AL(a, i, f, m, y, N) {
          var x = $e(a), q = $e(i), V = x ? ne : tn(a), Z = q ? ne : tn(i);
          V = V == he ? He : V, Z = Z == he ? He : Z;
          var J = V == He, ee = Z == He, ce = V == Z;
          if (ce && Ra(a)) {
            if (!Ra(i))
              return !1;
            x = !0, J = !1;
          }
          if (ce && !J)
            return N || (N = new Tr()), x || ei(a) ? $h(a, i, f, m, y, N) : HL(a, i, V, f, m, y, N);
          if (!(f & b)) {
            var ve = J && ct.call(a, "__wrapped__"), De = ee && ct.call(i, "__wrapped__");
            if (ve || De) {
              var Ve = ve ? a.value() : a, Be = De ? i.value() : i;
              return N || (N = new Tr()), y(Ve, Be, f, m, N);
            }
          }
          return ce ? (N || (N = new Tr()), VL(a, i, f, m, y, N)) : !1;
        }
        function EL(a) {
          return gt(a) && tn(a) == Fe;
        }
        function c_(a, i, f, m) {
          var y = f.length, N = y, x = !m;
          if (a == null)
            return !N;
          for (a = ht(a); y--; ) {
            var q = f[y];
            if (x && q[2] ? q[1] !== a[q[0]] : !(q[0] in a))
              return !1;
          }
          for (; ++y < N; ) {
            q = f[y];
            var V = q[0], Z = a[V], J = q[1];
            if (x && q[2]) {
              if (Z === n && !(V in a))
                return !1;
            } else {
              var ee = new Tr();
              if (m)
                var ce = m(Z, J, V, a, i, ee);
              if (!(ce === n ? xi(J, Z, b | L, m, ee) : ce))
                return !1;
            }
          }
          return !0;
        }
        function lh(a) {
          if (!vt(a) || JL(a))
            return !1;
          var i = Qr(a) ? Eb : Re;
          return i.test(Is(a));
        }
        function pL(a) {
          return gt(a) && un(a) == At;
        }
        function TL(a) {
          return gt(a) && tn(a) == bt;
        }
        function mL(a) {
          return gt(a) && To(a.length) && !!Tt[un(a)];
        }
        function oh(a) {
          return typeof a == "function" ? a : a == null ? Ln : typeof a == "object" ? $e(a) ? dh(a[0], a[1]) : _h(a) : NA(a);
        }
        function f_(a) {
          if (!qi(a))
            return Lb(a);
          var i = [];
          for (var f in ht(a))
            ct.call(a, f) && f != "constructor" && i.push(f);
          return i;
        }
        function SL(a) {
          if (!vt(a))
            return nI(a);
          var i = qi(a), f = [];
          for (var m in a)
            m == "constructor" && (i || !ct.call(a, m)) || f.push(m);
          return f;
        }
        function h_(a, i) {
          return a < i;
        }
        function uh(a, i) {
          var f = -1, m = Sn(a) ? G(a.length) : [];
          return Ia(a, function(y, N, x) {
            m[++f] = i(y, N, x);
          }), m;
        }
        function _h(a) {
          var i = C_(a);
          return i.length == 1 && i[0][2] ? Wh(i[0][0], i[0][1]) : function(f) {
            return f === a || c_(f, a, i);
          };
        }
        function dh(a, i) {
          return D_(a) && Vh(i) ? Wh(Pr(a), i) : function(f) {
            var m = U_(f, a);
            return m === n && m === i ? H_(f, a) : xi(i, m, b | L);
          };
        }
        function to(a, i, f, m, y) {
          a !== i && o_(i, function(N, x) {
            if (y || (y = new Tr()), vt(N))
              bL(a, i, x, f, to, m, y);
            else {
              var q = m ? m(w_(a, x), N, x + "", a, i, y) : n;
              q === n && (q = N), i_(a, x, q);
            }
          }, bn);
        }
        function bL(a, i, f, m, y, N, x) {
          var q = w_(a, f), V = w_(i, f), Z = x.get(V);
          if (Z) {
            i_(a, f, Z);
            return;
          }
          var J = N ? N(q, V, f + "", a, i, x) : n, ee = J === n;
          if (ee) {
            var ce = $e(V), ve = !ce && Ra(V), De = !ce && !ve && ei(V);
            J = V, ce || ve || De ? $e(q) ? J = q : Nt(q) ? J = mn(q) : ve ? (ee = !1, J = Ih(V, !0)) : De ? (ee = !1, J = vh(V, !0)) : J = [] : ki(V) || vs(V) ? (J = q, vs(q) ? J = SA(q) : (!vt(q) || Qr(q)) && (J = Hh(V))) : ee = !1;
          }
          ee && (x.set(V, J), y(J, V, m, N, x), x.delete(V)), i_(a, f, J);
        }
        function ch(a, i) {
          var f = a.length;
          if (f)
            return i += i < 0 ? f : 0, Jr(i, f) ? a[i] : n;
        }
        function fh(a, i, f) {
          i.length ? i = It(i, function(N) {
            return $e(N) ? function(x) {
              return bs(x, N.length === 1 ? N[0] : N);
            } : N;
          }) : i = [Ln];
          var m = -1;
          i = It(i, Cn(Ne()));
          var y = uh(a, function(N, x, q) {
            var V = It(i, function(Z) {
              return Z(N);
            });
            return { criteria: V, index: ++m, value: N };
          });
          return zS(y, function(N, x) {
            return PL(N, x, f);
          });
        }
        function LL(a, i) {
          return hh(a, i, function(f, m) {
            return H_(a, m);
          });
        }
        function hh(a, i, f) {
          for (var m = -1, y = i.length, N = {}; ++m < y; ) {
            var x = i[m], q = bs(a, x);
            f(q, x) && Fi(N, ya(x, a), q);
          }
          return N;
        }
        function IL(a) {
          return function(i) {
            return bs(i, a);
          };
        }
        function A_(a, i, f, m) {
          var y = m ? jS : Vs, N = -1, x = i.length, q = a;
          for (a === i && (i = mn(i)), f && (q = It(a, Cn(f))); ++N < x; )
            for (var V = 0, Z = i[N], J = f ? f(Z) : Z; (V = y(q, J, V, m)) > -1; )
              q !== a && Gl.call(q, V, 1), Gl.call(a, V, 1);
          return a;
        }
        function Ah(a, i) {
          for (var f = a ? i.length : 0, m = f - 1; f--; ) {
            var y = i[f];
            if (f == m || y !== N) {
              var N = y;
              Jr(y) ? Gl.call(a, y, 1) : m_(a, y);
            }
          }
          return a;
        }
        function E_(a, i) {
          return a + zl(Yf() * (i - a + 1));
        }
        function vL(a, i, f, m) {
          for (var y = -1, N = $t(jl((i - a) / (f || 1)), 0), x = G(N); N--; )
            x[m ? N : ++y] = a, a += f;
          return x;
        }
        function p_(a, i) {
          var f = "";
          if (!a || i < 1 || i > Le)
            return f;
          do
            i % 2 && (f += a), i = zl(i / 2), i && (a += a);
          while (i);
          return f;
        }
        function Ge(a, i) {
          return P_(Gh(a, i, Ln), a + "");
        }
        function yL(a) {
          return Jf(ti(a));
        }
        function gL(a, i) {
          var f = ti(a);
          return co(f, Ss(i, 0, f.length));
        }
        function Fi(a, i, f, m) {
          if (!vt(a))
            return a;
          i = ya(i, a);
          for (var y = -1, N = i.length, x = N - 1, q = a; q != null && ++y < N; ) {
            var V = Pr(i[y]), Z = f;
            if (V === "__proto__" || V === "constructor" || V === "prototype")
              return a;
            if (y != x) {
              var J = q[V];
              Z = m ? m(J, V, q) : n, Z === n && (Z = vt(J) ? J : Jr(i[y + 1]) ? [] : {});
            }
            Bi(q, V, Z), q = q[V];
          }
          return a;
        }
        var Eh = Yl ? function(a, i) {
          return Yl.set(a, i), a;
        } : Ln, RL = Kl ? function(a, i) {
          return Kl(a, "toString", {
            configurable: !0,
            enumerable: !1,
            value: W_(i),
            writable: !0
          });
        } : Ln;
        function OL(a) {
          return co(ti(a));
        }
        function nr(a, i, f) {
          var m = -1, y = a.length;
          i < 0 && (i = -i > y ? 0 : y + i), f = f > y ? y : f, f < 0 && (f += y), y = i > f ? 0 : f - i >>> 0, i >>>= 0;
          for (var N = G(y); ++m < y; )
            N[m] = a[m + i];
          return N;
        }
        function CL(a, i) {
          var f;
          return Ia(a, function(m, y, N) {
            return f = i(m, y, N), !f;
          }), !!f;
        }
        function no(a, i, f) {
          var m = 0, y = a == null ? m : a.length;
          if (typeof i == "number" && i === i && y <= ye) {
            for (; m < y; ) {
              var N = m + y >>> 1, x = a[N];
              x !== null && !Dn(x) && (f ? x <= i : x < i) ? m = N + 1 : y = N;
            }
            return y;
          }
          return T_(a, i, Ln, f);
        }
        function T_(a, i, f, m) {
          var y = 0, N = a == null ? 0 : a.length;
          if (N === 0)
            return 0;
          i = f(i);
          for (var x = i !== i, q = i === null, V = Dn(i), Z = i === n; y < N; ) {
            var J = zl((y + N) / 2), ee = f(a[J]), ce = ee !== n, ve = ee === null, De = ee === ee, Ve = Dn(ee);
            if (x)
              var Be = m || De;
            else Z ? Be = De && (m || ce) : q ? Be = De && ce && (m || !ve) : V ? Be = De && ce && !ve && (m || !Ve) : ve || Ve ? Be = !1 : Be = m ? ee <= i : ee < i;
            Be ? y = J + 1 : N = J;
          }
          return en(N, Oe);
        }
        function ph(a, i) {
          for (var f = -1, m = a.length, y = 0, N = []; ++f < m; ) {
            var x = a[f], q = i ? i(x) : x;
            if (!f || !mr(q, V)) {
              var V = q;
              N[y++] = x === 0 ? 0 : x;
            }
          }
          return N;
        }
        function Th(a) {
          return typeof a == "number" ? a : Dn(a) ? Se : +a;
        }
        function Nn(a) {
          if (typeof a == "string")
            return a;
          if ($e(a))
            return It(a, Nn) + "";
          if (Dn(a))
            return Xf ? Xf.call(a) : "";
          var i = a + "";
          return i == "0" && 1 / a == -oe ? "-0" : i;
        }
        function va(a, i, f) {
          var m = -1, y = xl, N = a.length, x = !0, q = [], V = q;
          if (f)
            x = !1, y = ju;
          else if (N >= s) {
            var Z = i ? null : kL(a);
            if (Z)
              return Ml(Z);
            x = !1, y = gi, V = new ms();
          } else
            V = i ? [] : q;
          e:
            for (; ++m < N; ) {
              var J = a[m], ee = i ? i(J) : J;
              if (J = f || J !== 0 ? J : 0, x && ee === ee) {
                for (var ce = V.length; ce--; )
                  if (V[ce] === ee)
                    continue e;
                i && V.push(ee), q.push(J);
              } else y(V, ee, f) || (V !== q && V.push(ee), q.push(J));
            }
          return q;
        }
        function m_(a, i) {
          return i = ya(i, a), a = Kh(a, i), a == null || delete a[Pr(rr(i))];
        }
        function mh(a, i, f, m) {
          return Fi(a, i, f(bs(a, i)), m);
        }
        function ro(a, i, f, m) {
          for (var y = a.length, N = m ? y : -1; (m ? N-- : ++N < y) && i(a[N], N, a); )
            ;
          return f ? nr(a, m ? 0 : N, m ? N + 1 : y) : nr(a, m ? N + 1 : 0, m ? y : N);
        }
        function Sh(a, i) {
          var f = a;
          return f instanceof Je && (f = f.value()), zu(i, function(m, y) {
            return y.func.apply(y.thisArg, Sa([m], y.args));
          }, f);
        }
        function S_(a, i, f) {
          var m = a.length;
          if (m < 2)
            return m ? va(a[0]) : [];
          for (var y = -1, N = G(m); ++y < m; )
            for (var x = a[y], q = -1; ++q < m; )
              q != y && (N[y] = wi(N[y] || x, a[q], i, f));
          return va(jt(N, 1), i, f);
        }
        function bh(a, i, f) {
          for (var m = -1, y = a.length, N = i.length, x = {}; ++m < y; ) {
            var q = m < N ? i[m] : n;
            f(x, a[m], q);
          }
          return x;
        }
        function b_(a) {
          return Nt(a) ? a : [];
        }
        function L_(a) {
          return typeof a == "function" ? a : Ln;
        }
        function ya(a, i) {
          return $e(a) ? a : D_(a, i) ? [a] : Xh(_t(a));
        }
        var NL = Ge;
        function ga(a, i, f) {
          var m = a.length;
          return f = f === n ? m : f, !i && f >= m ? a : nr(a, i, f);
        }
        var Lh = pb || function(a) {
          return Kt.clearTimeout(a);
        };
        function Ih(a, i) {
          if (i)
            return a.slice();
          var f = a.length, m = Wf ? Wf(f) : new a.constructor(f);
          return a.copy(m), m;
        }
        function I_(a) {
          var i = new a.constructor(a.byteLength);
          return new Vl(i).set(new Vl(a)), i;
        }
        function DL(a, i) {
          var f = i ? I_(a.buffer) : a.buffer;
          return new a.constructor(f, a.byteOffset, a.byteLength);
        }
        function BL(a) {
          var i = new a.constructor(a.source, Ii.exec(a));
          return i.lastIndex = a.lastIndex, i;
        }
        function wL(a) {
          return Di ? ht(Di.call(a)) : {};
        }
        function vh(a, i) {
          var f = i ? I_(a.buffer) : a.buffer;
          return new a.constructor(f, a.byteOffset, a.length);
        }
        function yh(a, i) {
          if (a !== i) {
            var f = a !== n, m = a === null, y = a === a, N = Dn(a), x = i !== n, q = i === null, V = i === i, Z = Dn(i);
            if (!q && !Z && !N && a > i || N && x && V && !q && !Z || m && x && V || !f && V || !y)
              return 1;
            if (!m && !N && !Z && a < i || Z && f && y && !m && !N || q && f && y || !x && y || !V)
              return -1;
          }
          return 0;
        }
        function PL(a, i, f) {
          for (var m = -1, y = a.criteria, N = i.criteria, x = y.length, q = f.length; ++m < x; ) {
            var V = yh(y[m], N[m]);
            if (V) {
              if (m >= q)
                return V;
              var Z = f[m];
              return V * (Z == "desc" ? -1 : 1);
            }
          }
          return a.index - i.index;
        }
        function gh(a, i, f, m) {
          for (var y = -1, N = a.length, x = f.length, q = -1, V = i.length, Z = $t(N - x, 0), J = G(V + Z), ee = !m; ++q < V; )
            J[q] = i[q];
          for (; ++y < x; )
            (ee || y < N) && (J[f[y]] = a[y]);
          for (; Z--; )
            J[q++] = a[y++];
          return J;
        }
        function Rh(a, i, f, m) {
          for (var y = -1, N = a.length, x = -1, q = f.length, V = -1, Z = i.length, J = $t(N - q, 0), ee = G(J + Z), ce = !m; ++y < J; )
            ee[y] = a[y];
          for (var ve = y; ++V < Z; )
            ee[ve + V] = i[V];
          for (; ++x < q; )
            (ce || y < N) && (ee[ve + f[x]] = a[y++]);
          return ee;
        }
        function mn(a, i) {
          var f = -1, m = a.length;
          for (i || (i = G(m)); ++f < m; )
            i[f] = a[f];
          return i;
        }
        function wr(a, i, f, m) {
          var y = !f;
          f || (f = {});
          for (var N = -1, x = i.length; ++N < x; ) {
            var q = i[N], V = m ? m(f[q], a[q], q, f, a) : n;
            V === n && (V = a[q]), y ? Yr(f, q, V) : Bi(f, q, V);
          }
          return f;
        }
        function xL(a, i) {
          return wr(a, N_(a), i);
        }
        function FL(a, i) {
          return wr(a, kh(a), i);
        }
        function ao(a, i) {
          return function(f, m) {
            var y = $e(f) ? US : aL, N = i ? i() : {};
            return y(f, a, Ne(m, 2), N);
          };
        }
        function Zs(a) {
          return Ge(function(i, f) {
            var m = -1, y = f.length, N = y > 1 ? f[y - 1] : n, x = y > 2 ? f[2] : n;
            for (N = a.length > 3 && typeof N == "function" ? (y--, N) : n, x && _n(f[0], f[1], x) && (N = y < 3 ? n : N, y = 1), i = ht(i); ++m < y; ) {
              var q = f[m];
              q && a(i, q, m, N);
            }
            return i;
          });
        }
        function Oh(a, i) {
          return function(f, m) {
            if (f == null)
              return f;
            if (!Sn(f))
              return a(f, m);
            for (var y = f.length, N = i ? y : -1, x = ht(f); (i ? N-- : ++N < y) && m(x[N], N, x) !== !1; )
              ;
            return f;
          };
        }
        function Ch(a) {
          return function(i, f, m) {
            for (var y = -1, N = ht(i), x = m(i), q = x.length; q--; ) {
              var V = x[a ? q : ++y];
              if (f(N[V], V, N) === !1)
                break;
            }
            return i;
          };
        }
        function ML(a, i, f) {
          var m = i & I, y = Mi(a);
          function N() {
            var x = this && this !== Kt && this instanceof N ? y : a;
            return x.apply(m ? f : this, arguments);
          }
          return N;
        }
        function Nh(a) {
          return function(i) {
            i = _t(i);
            var f = Ws(i) ? pr(i) : n, m = f ? f[0] : i.charAt(0), y = f ? ga(f, 1).join("") : i.slice(1);
            return m[a]() + y;
          };
        }
        function Js(a) {
          return function(i) {
            return zu(OA(RA(i).replace(RS, "")), a, "");
          };
        }
        function Mi(a) {
          return function() {
            var i = arguments;
            switch (i.length) {
              case 0:
                return new a();
              case 1:
                return new a(i[0]);
              case 2:
                return new a(i[0], i[1]);
              case 3:
                return new a(i[0], i[1], i[2]);
              case 4:
                return new a(i[0], i[1], i[2], i[3]);
              case 5:
                return new a(i[0], i[1], i[2], i[3], i[4]);
              case 6:
                return new a(i[0], i[1], i[2], i[3], i[4], i[5]);
              case 7:
                return new a(i[0], i[1], i[2], i[3], i[4], i[5], i[6]);
            }
            var f = Xs(a.prototype), m = a.apply(f, i);
            return vt(m) ? m : f;
          };
        }
        function qL(a, i, f) {
          var m = Mi(a);
          function y() {
            for (var N = arguments.length, x = G(N), q = N, V = Qs(y); q--; )
              x[q] = arguments[q];
            var Z = N < 3 && x[0] !== V && x[N - 1] !== V ? [] : ba(x, V);
            if (N -= Z.length, N < f)
              return xh(
                a,
                i,
                so,
                y.placeholder,
                n,
                x,
                Z,
                n,
                n,
                f - N
              );
            var J = this && this !== Kt && this instanceof y ? m : a;
            return On(J, this, x);
          }
          return y;
        }
        function Dh(a) {
          return function(i, f, m) {
            var y = ht(i);
            if (!Sn(i)) {
              var N = Ne(f, 3);
              i = Vt(i), f = function(q) {
                return N(y[q], q, y);
              };
            }
            var x = a(i, f, m);
            return x > -1 ? y[N ? i[x] : x] : n;
          };
        }
        function Bh(a) {
          return Zr(function(i) {
            var f = i.length, m = f, y = er.prototype.thru;
            for (a && i.reverse(); m--; ) {
              var N = i[m];
              if (typeof N != "function")
                throw new Qn(o);
              if (y && !x && uo(N) == "wrapper")
                var x = new er([], !0);
            }
            for (m = x ? m : f; ++m < f; ) {
              N = i[m];
              var q = uo(N), V = q == "wrapper" ? O_(N) : n;
              V && B_(V[0]) && V[1] == (P | g | w | F) && !V[4].length && V[9] == 1 ? x = x[uo(V[0])].apply(x, V[3]) : x = N.length == 1 && B_(N) ? x[q]() : x.thru(N);
            }
            return function() {
              var Z = arguments, J = Z[0];
              if (x && Z.length == 1 && $e(J))
                return x.plant(J).value();
              for (var ee = 0, ce = f ? i[ee].apply(this, Z) : J; ++ee < f; )
                ce = i[ee].call(this, ce);
              return ce;
            };
          });
        }
        function so(a, i, f, m, y, N, x, q, V, Z) {
          var J = i & P, ee = i & I, ce = i & v, ve = i & (g | D), De = i & C, Ve = ce ? n : Mi(a);
          function Be() {
            for (var ze = arguments.length, et = G(ze), Bn = ze; Bn--; )
              et[Bn] = arguments[Bn];
            if (ve)
              var dn = Qs(Be), wn = XS(et, dn);
            if (m && (et = gh(et, m, y, ve)), N && (et = Rh(et, N, x, ve)), ze -= wn, ve && ze < Z) {
              var Dt = ba(et, dn);
              return xh(
                a,
                i,
                so,
                Be.placeholder,
                f,
                et,
                Dt,
                q,
                V,
                Z - ze
              );
            }
            var Sr = ee ? f : this, ta = ce ? Sr[a] : a;
            return ze = et.length, q ? et = aI(et, q) : De && ze > 1 && et.reverse(), J && V < ze && (et.length = V), this && this !== Kt && this instanceof Be && (ta = Ve || Mi(ta)), ta.apply(Sr, et);
          }
          return Be;
        }
        function wh(a, i) {
          return function(f, m) {
            return cL(f, a, i(m), {});
          };
        }
        function io(a, i) {
          return function(f, m) {
            var y;
            if (f === n && m === n)
              return i;
            if (f !== n && (y = f), m !== n) {
              if (y === n)
                return m;
              typeof f == "string" || typeof m == "string" ? (f = Nn(f), m = Nn(m)) : (f = Th(f), m = Th(m)), y = a(f, m);
            }
            return y;
          };
        }
        function v_(a) {
          return Zr(function(i) {
            return i = It(i, Cn(Ne())), Ge(function(f) {
              var m = this;
              return a(i, function(y) {
                return On(y, m, f);
              });
            });
          });
        }
        function lo(a, i) {
          i = i === n ? " " : Nn(i);
          var f = i.length;
          if (f < 2)
            return f ? p_(i, a) : i;
          var m = p_(i, jl(a / Gs(i)));
          return Ws(i) ? ga(pr(m), 0, a).join("") : m.slice(0, a);
        }
        function $L(a, i, f, m) {
          var y = i & I, N = Mi(a);
          function x() {
            for (var q = -1, V = arguments.length, Z = -1, J = m.length, ee = G(J + V), ce = this && this !== Kt && this instanceof x ? N : a; ++Z < J; )
              ee[Z] = m[Z];
            for (; V--; )
              ee[Z++] = arguments[++q];
            return On(ce, y ? f : this, ee);
          }
          return x;
        }
        function Ph(a) {
          return function(i, f, m) {
            return m && typeof m != "number" && _n(i, f, m) && (f = m = n), i = ea(i), f === n ? (f = i, i = 0) : f = ea(f), m = m === n ? i < f ? 1 : -1 : ea(m), vL(i, f, m, a);
          };
        }
        function oo(a) {
          return function(i, f) {
            return typeof i == "string" && typeof f == "string" || (i = ar(i), f = ar(f)), a(i, f);
          };
        }
        function xh(a, i, f, m, y, N, x, q, V, Z) {
          var J = i & g, ee = J ? x : n, ce = J ? n : x, ve = J ? N : n, De = J ? n : N;
          i |= J ? w : M, i &= ~(J ? M : w), i & R || (i &= ~(I | v));
          var Ve = [
            a,
            i,
            y,
            ve,
            ee,
            De,
            ce,
            q,
            V,
            Z
          ], Be = f.apply(n, Ve);
          return B_(a) && jh(Be, Ve), Be.placeholder = m, zh(Be, a, i);
        }
        function y_(a) {
          var i = qt[a];
          return function(f, m) {
            if (f = ar(f), m = m == null ? 0 : en(Ue(m), 292), m && zf(f)) {
              var y = (_t(f) + "e").split("e"), N = i(y[0] + "e" + (+y[1] + m));
              return y = (_t(N) + "e").split("e"), +(y[0] + "e" + (+y[1] - m));
            }
            return i(f);
          };
        }
        var kL = zs && 1 / Ml(new zs([, -0]))[1] == oe ? function(a) {
          return new zs(a);
        } : j_;
        function Fh(a) {
          return function(i) {
            var f = tn(i);
            return f == Fe ? t_(i) : f == bt ? rb(i) : YS(i, a(i));
          };
        }
        function Xr(a, i, f, m, y, N, x, q) {
          var V = i & v;
          if (!V && typeof a != "function")
            throw new Qn(o);
          var Z = m ? m.length : 0;
          if (Z || (i &= ~(w | M), m = y = n), x = x === n ? x : $t(Ue(x), 0), q = q === n ? q : Ue(q), Z -= y ? y.length : 0, i & M) {
            var J = m, ee = y;
            m = y = n;
          }
          var ce = V ? n : O_(a), ve = [
            a,
            i,
            f,
            m,
            y,
            J,
            ee,
            N,
            x,
            q
          ];
          if (ce && tI(ve, ce), a = ve[0], i = ve[1], f = ve[2], m = ve[3], y = ve[4], q = ve[9] = ve[9] === n ? V ? 0 : a.length : $t(ve[9] - Z, 0), !q && i & (g | D) && (i &= ~(g | D)), !i || i == I)
            var De = ML(a, i, f);
          else i == g || i == D ? De = qL(a, i, q) : (i == w || i == (I | w)) && !y.length ? De = $L(a, i, f, m) : De = so.apply(n, ve);
          var Ve = ce ? Eh : jh;
          return zh(Ve(De, ve), a, i);
        }
        function Mh(a, i, f, m) {
          return a === n || mr(a, js[f]) && !ct.call(m, f) ? i : a;
        }
        function qh(a, i, f, m, y, N) {
          return vt(a) && vt(i) && (N.set(i, a), to(a, i, n, qh, N), N.delete(i)), a;
        }
        function UL(a) {
          return ki(a) ? n : a;
        }
        function $h(a, i, f, m, y, N) {
          var x = f & b, q = a.length, V = i.length;
          if (q != V && !(x && V > q))
            return !1;
          var Z = N.get(a), J = N.get(i);
          if (Z && J)
            return Z == i && J == a;
          var ee = -1, ce = !0, ve = f & L ? new ms() : n;
          for (N.set(a, i), N.set(i, a); ++ee < q; ) {
            var De = a[ee], Ve = i[ee];
            if (m)
              var Be = x ? m(Ve, De, ee, i, a, N) : m(De, Ve, ee, a, i, N);
            if (Be !== n) {
              if (Be)
                continue;
              ce = !1;
              break;
            }
            if (ve) {
              if (!Yu(i, function(ze, et) {
                if (!gi(ve, et) && (De === ze || y(De, ze, f, m, N)))
                  return ve.push(et);
              })) {
                ce = !1;
                break;
              }
            } else if (!(De === Ve || y(De, Ve, f, m, N))) {
              ce = !1;
              break;
            }
          }
          return N.delete(a), N.delete(i), ce;
        }
        function HL(a, i, f, m, y, N, x) {
          switch (f) {
            case gn:
              if (a.byteLength != i.byteLength || a.byteOffset != i.byteOffset)
                return !1;
              a = a.buffer, i = i.buffer;
            case Gn:
              return !(a.byteLength != i.byteLength || !N(new Vl(a), new Vl(i)));
            case Q:
            case re:
            case Pe:
              return mr(+a, +i);
            case Ce:
              return a.name == i.name && a.message == i.message;
            case At:
            case Wt:
              return a == i + "";
            case Fe:
              var q = t_;
            case bt:
              var V = m & b;
              if (q || (q = Ml), a.size != i.size && !V)
                return !1;
              var Z = x.get(a);
              if (Z)
                return Z == i;
              m |= L, x.set(a, i);
              var J = $h(q(a), q(i), m, y, N, x);
              return x.delete(a), J;
            case pn:
              if (Di)
                return Di.call(a) == Di.call(i);
          }
          return !1;
        }
        function VL(a, i, f, m, y, N) {
          var x = f & b, q = g_(a), V = q.length, Z = g_(i), J = Z.length;
          if (V != J && !x)
            return !1;
          for (var ee = V; ee--; ) {
            var ce = q[ee];
            if (!(x ? ce in i : ct.call(i, ce)))
              return !1;
          }
          var ve = N.get(a), De = N.get(i);
          if (ve && De)
            return ve == i && De == a;
          var Ve = !0;
          N.set(a, i), N.set(i, a);
          for (var Be = x; ++ee < V; ) {
            ce = q[ee];
            var ze = a[ce], et = i[ce];
            if (m)
              var Bn = x ? m(et, ze, ce, i, a, N) : m(ze, et, ce, a, i, N);
            if (!(Bn === n ? ze === et || y(ze, et, f, m, N) : Bn)) {
              Ve = !1;
              break;
            }
            Be || (Be = ce == "constructor");
          }
          if (Ve && !Be) {
            var dn = a.constructor, wn = i.constructor;
            dn != wn && "constructor" in a && "constructor" in i && !(typeof dn == "function" && dn instanceof dn && typeof wn == "function" && wn instanceof wn) && (Ve = !1);
          }
          return N.delete(a), N.delete(i), Ve;
        }
        function Zr(a) {
          return P_(Gh(a, n, eA), a + "");
        }
        function g_(a) {
          return sh(a, Vt, N_);
        }
        function R_(a) {
          return sh(a, bn, kh);
        }
        var O_ = Yl ? function(a) {
          return Yl.get(a);
        } : j_;
        function uo(a) {
          for (var i = a.name + "", f = Ys[i], m = ct.call(Ys, i) ? f.length : 0; m--; ) {
            var y = f[m], N = y.func;
            if (N == null || N == a)
              return y.name;
          }
          return i;
        }
        function Qs(a) {
          var i = ct.call(O, "placeholder") ? O : a;
          return i.placeholder;
        }
        function Ne() {
          var a = O.iteratee || G_;
          return a = a === G_ ? oh : a, arguments.length ? a(arguments[0], arguments[1]) : a;
        }
        function _o(a, i) {
          var f = a.__data__;
          return ZL(i) ? f[typeof i == "string" ? "string" : "hash"] : f.map;
        }
        function C_(a) {
          for (var i = Vt(a), f = i.length; f--; ) {
            var m = i[f], y = a[m];
            i[f] = [m, y, Vh(y)];
          }
          return i;
        }
        function Ls(a, i) {
          var f = eb(a, i);
          return lh(f) ? f : n;
        }
        function WL(a) {
          var i = ct.call(a, ps), f = a[ps];
          try {
            a[ps] = n;
            var m = !0;
          } catch {
          }
          var y = Ul.call(a);
          return m && (i ? a[ps] = f : delete a[ps]), y;
        }
        var N_ = r_ ? function(a) {
          return a == null ? [] : (a = ht(a), ma(r_(a), function(i) {
            return Kf.call(a, i);
          }));
        } : z_, kh = r_ ? function(a) {
          for (var i = []; a; )
            Sa(i, N_(a)), a = Wl(a);
          return i;
        } : z_, tn = un;
        (a_ && tn(new a_(new ArrayBuffer(1))) != gn || Oi && tn(new Oi()) != Fe || s_ && tn(s_.resolve()) != st || zs && tn(new zs()) != bt || Ci && tn(new Ci()) != Zt) && (tn = function(a) {
          var i = un(a), f = i == He ? a.constructor : n, m = f ? Is(f) : "";
          if (m)
            switch (m) {
              case gb:
                return gn;
              case Rb:
                return Fe;
              case Ob:
                return st;
              case Cb:
                return bt;
              case Nb:
                return Zt;
            }
          return i;
        });
        function GL(a, i, f) {
          for (var m = -1, y = f.length; ++m < y; ) {
            var N = f[m], x = N.size;
            switch (N.type) {
              case "drop":
                a += x;
                break;
              case "dropRight":
                i -= x;
                break;
              case "take":
                i = en(i, a + x);
                break;
              case "takeRight":
                a = $t(a, i - x);
                break;
            }
          }
          return { start: a, end: i };
        }
        function KL(a) {
          var i = a.match(ks);
          return i ? i[1].split(Er) : [];
        }
        function Uh(a, i, f) {
          i = ya(i, a);
          for (var m = -1, y = i.length, N = !1; ++m < y; ) {
            var x = Pr(i[m]);
            if (!(N = a != null && f(a, x)))
              break;
            a = a[x];
          }
          return N || ++m != y ? N : (y = a == null ? 0 : a.length, !!y && To(y) && Jr(x, y) && ($e(a) || vs(a)));
        }
        function jL(a) {
          var i = a.length, f = new a.constructor(i);
          return i && typeof a[0] == "string" && ct.call(a, "index") && (f.index = a.index, f.input = a.input), f;
        }
        function Hh(a) {
          return typeof a.constructor == "function" && !qi(a) ? Xs(Wl(a)) : {};
        }
        function zL(a, i, f) {
          var m = a.constructor;
          switch (i) {
            case Gn:
              return I_(a);
            case Q:
            case re:
              return new m(+a);
            case gn:
              return DL(a, f);
            case Or:
            case fr:
            case Cr:
            case Kn:
            case jn:
            case Gt:
            case Tn:
            case hr:
            case Ar:
              return vh(a, f);
            case Fe:
              return new m();
            case Pe:
            case Wt:
              return new m(a);
            case At:
              return BL(a);
            case bt:
              return new m();
            case pn:
              return wL(a);
          }
        }
        function YL(a, i) {
          var f = i.length;
          if (!f)
            return a;
          var m = f - 1;
          return i[m] = (f > 1 ? "& " : "") + i[m], i = i.join(f > 2 ? ", " : " "), a.replace($s, `{
/* [wrapped with ` + i + `] */
`);
        }
        function XL(a) {
          return $e(a) || vs(a) || !!(jf && a && a[jf]);
        }
        function Jr(a, i) {
          var f = typeof a;
          return i = i ?? Le, !!i && (f == "number" || f != "symbol" && ue.test(a)) && a > -1 && a % 1 == 0 && a < i;
        }
        function _n(a, i, f) {
          if (!vt(f))
            return !1;
          var m = typeof i;
          return (m == "number" ? Sn(f) && Jr(i, f.length) : m == "string" && i in f) ? mr(f[i], a) : !1;
        }
        function D_(a, i) {
          if ($e(a))
            return !1;
          var f = typeof a;
          return f == "number" || f == "symbol" || f == "boolean" || a == null || Dn(a) ? !0 : Kr.test(a) || !Ea.test(a) || i != null && a in ht(i);
        }
        function ZL(a) {
          var i = typeof a;
          return i == "string" || i == "number" || i == "symbol" || i == "boolean" ? a !== "__proto__" : a === null;
        }
        function B_(a) {
          var i = uo(a), f = O[i];
          if (typeof f != "function" || !(i in Je.prototype))
            return !1;
          if (a === f)
            return !0;
          var m = O_(f);
          return !!m && a === m[0];
        }
        function JL(a) {
          return !!Vf && Vf in a;
        }
        var QL = $l ? Qr : Y_;
        function qi(a) {
          var i = a && a.constructor, f = typeof i == "function" && i.prototype || js;
          return a === f;
        }
        function Vh(a) {
          return a === a && !vt(a);
        }
        function Wh(a, i) {
          return function(f) {
            return f == null ? !1 : f[a] === i && (i !== n || a in ht(f));
          };
        }
        function eI(a) {
          var i = Eo(a, function(m) {
            return f.size === A && f.clear(), m;
          }), f = i.cache;
          return i;
        }
        function tI(a, i) {
          var f = a[1], m = i[1], y = f | m, N = y < (I | v | P), x = m == P && f == g || m == P && f == F && a[7].length <= i[8] || m == (P | F) && i[7].length <= i[8] && f == g;
          if (!(N || x))
            return a;
          m & I && (a[2] = i[2], y |= f & I ? 0 : R);
          var q = i[3];
          if (q) {
            var V = a[3];
            a[3] = V ? gh(V, q, i[4]) : q, a[4] = V ? ba(a[3], E) : i[4];
          }
          return q = i[5], q && (V = a[5], a[5] = V ? Rh(V, q, i[6]) : q, a[6] = V ? ba(a[5], E) : i[6]), q = i[7], q && (a[7] = q), m & P && (a[8] = a[8] == null ? i[8] : en(a[8], i[8])), a[9] == null && (a[9] = i[9]), a[0] = i[0], a[1] = y, a;
        }
        function nI(a) {
          var i = [];
          if (a != null)
            for (var f in ht(a))
              i.push(f);
          return i;
        }
        function rI(a) {
          return Ul.call(a);
        }
        function Gh(a, i, f) {
          return i = $t(i === n ? a.length - 1 : i, 0), function() {
            for (var m = arguments, y = -1, N = $t(m.length - i, 0), x = G(N); ++y < N; )
              x[y] = m[i + y];
            y = -1;
            for (var q = G(i + 1); ++y < i; )
              q[y] = m[y];
            return q[i] = f(x), On(a, this, q);
          };
        }
        function Kh(a, i) {
          return i.length < 2 ? a : bs(a, nr(i, 0, -1));
        }
        function aI(a, i) {
          for (var f = a.length, m = en(i.length, f), y = mn(a); m--; ) {
            var N = i[m];
            a[m] = Jr(N, f) ? y[N] : n;
          }
          return a;
        }
        function w_(a, i) {
          if (!(i === "constructor" && typeof a[i] == "function") && i != "__proto__")
            return a[i];
        }
        var jh = Yh(Eh), $i = mb || function(a, i) {
          return Kt.setTimeout(a, i);
        }, P_ = Yh(RL);
        function zh(a, i, f) {
          var m = i + "";
          return P_(a, YL(m, sI(KL(m), f)));
        }
        function Yh(a) {
          var i = 0, f = 0;
          return function() {
            var m = Ib(), y = le - (m - f);
            if (f = m, y > 0) {
              if (++i >= K)
                return arguments[0];
            } else
              i = 0;
            return a.apply(n, arguments);
          };
        }
        function co(a, i) {
          var f = -1, m = a.length, y = m - 1;
          for (i = i === n ? m : i; ++f < i; ) {
            var N = E_(f, y), x = a[N];
            a[N] = a[f], a[f] = x;
          }
          return a.length = i, a;
        }
        var Xh = eI(function(a) {
          var i = [];
          return a.charCodeAt(0) === 46 && i.push(""), a.replace(pa, function(f, m, y, N) {
            i.push(y ? N.replace(Us, "$1") : m || f);
          }), i;
        });
        function Pr(a) {
          if (typeof a == "string" || Dn(a))
            return a;
          var i = a + "";
          return i == "0" && 1 / a == -oe ? "-0" : i;
        }
        function Is(a) {
          if (a != null) {
            try {
              return kl.call(a);
            } catch {
            }
            try {
              return a + "";
            } catch {
            }
          }
          return "";
        }
        function sI(a, i) {
          return Jn(je, function(f) {
            var m = "_." + f[0];
            i & f[1] && !xl(a, m) && a.push(m);
          }), a.sort();
        }
        function Zh(a) {
          if (a instanceof Je)
            return a.clone();
          var i = new er(a.__wrapped__, a.__chain__);
          return i.__actions__ = mn(a.__actions__), i.__index__ = a.__index__, i.__values__ = a.__values__, i;
        }
        function iI(a, i, f) {
          (f ? _n(a, i, f) : i === n) ? i = 1 : i = $t(Ue(i), 0);
          var m = a == null ? 0 : a.length;
          if (!m || i < 1)
            return [];
          for (var y = 0, N = 0, x = G(jl(m / i)); y < m; )
            x[N++] = nr(a, y, y += i);
          return x;
        }
        function lI(a) {
          for (var i = -1, f = a == null ? 0 : a.length, m = 0, y = []; ++i < f; ) {
            var N = a[i];
            N && (y[m++] = N);
          }
          return y;
        }
        function oI() {
          var a = arguments.length;
          if (!a)
            return [];
          for (var i = G(a - 1), f = arguments[0], m = a; m--; )
            i[m - 1] = arguments[m];
          return Sa($e(f) ? mn(f) : [f], jt(i, 1));
        }
        var uI = Ge(function(a, i) {
          return Nt(a) ? wi(a, jt(i, 1, Nt, !0)) : [];
        }), _I = Ge(function(a, i) {
          var f = rr(i);
          return Nt(f) && (f = n), Nt(a) ? wi(a, jt(i, 1, Nt, !0), Ne(f, 2)) : [];
        }), dI = Ge(function(a, i) {
          var f = rr(i);
          return Nt(f) && (f = n), Nt(a) ? wi(a, jt(i, 1, Nt, !0), n, f) : [];
        });
        function cI(a, i, f) {
          var m = a == null ? 0 : a.length;
          return m ? (i = f || i === n ? 1 : Ue(i), nr(a, i < 0 ? 0 : i, m)) : [];
        }
        function fI(a, i, f) {
          var m = a == null ? 0 : a.length;
          return m ? (i = f || i === n ? 1 : Ue(i), i = m - i, nr(a, 0, i < 0 ? 0 : i)) : [];
        }
        function hI(a, i) {
          return a && a.length ? ro(a, Ne(i, 3), !0, !0) : [];
        }
        function AI(a, i) {
          return a && a.length ? ro(a, Ne(i, 3), !0) : [];
        }
        function EI(a, i, f, m) {
          var y = a == null ? 0 : a.length;
          return y ? (f && typeof f != "number" && _n(a, i, f) && (f = 0, m = y), oL(a, i, f, m)) : [];
        }
        function Jh(a, i, f) {
          var m = a == null ? 0 : a.length;
          if (!m)
            return -1;
          var y = f == null ? 0 : Ue(f);
          return y < 0 && (y = $t(m + y, 0)), Fl(a, Ne(i, 3), y);
        }
        function Qh(a, i, f) {
          var m = a == null ? 0 : a.length;
          if (!m)
            return -1;
          var y = m - 1;
          return f !== n && (y = Ue(f), y = f < 0 ? $t(m + y, 0) : en(y, m - 1)), Fl(a, Ne(i, 3), y, !0);
        }
        function eA(a) {
          var i = a == null ? 0 : a.length;
          return i ? jt(a, 1) : [];
        }
        function pI(a) {
          var i = a == null ? 0 : a.length;
          return i ? jt(a, oe) : [];
        }
        function TI(a, i) {
          var f = a == null ? 0 : a.length;
          return f ? (i = i === n ? 1 : Ue(i), jt(a, i)) : [];
        }
        function mI(a) {
          for (var i = -1, f = a == null ? 0 : a.length, m = {}; ++i < f; ) {
            var y = a[i];
            m[y[0]] = y[1];
          }
          return m;
        }
        function tA(a) {
          return a && a.length ? a[0] : n;
        }
        function SI(a, i, f) {
          var m = a == null ? 0 : a.length;
          if (!m)
            return -1;
          var y = f == null ? 0 : Ue(f);
          return y < 0 && (y = $t(m + y, 0)), Vs(a, i, y);
        }
        function bI(a) {
          var i = a == null ? 0 : a.length;
          return i ? nr(a, 0, -1) : [];
        }
        var LI = Ge(function(a) {
          var i = It(a, b_);
          return i.length && i[0] === a[0] ? d_(i) : [];
        }), II = Ge(function(a) {
          var i = rr(a), f = It(a, b_);
          return i === rr(f) ? i = n : f.pop(), f.length && f[0] === a[0] ? d_(f, Ne(i, 2)) : [];
        }), vI = Ge(function(a) {
          var i = rr(a), f = It(a, b_);
          return i = typeof i == "function" ? i : n, i && f.pop(), f.length && f[0] === a[0] ? d_(f, n, i) : [];
        });
        function yI(a, i) {
          return a == null ? "" : bb.call(a, i);
        }
        function rr(a) {
          var i = a == null ? 0 : a.length;
          return i ? a[i - 1] : n;
        }
        function gI(a, i, f) {
          var m = a == null ? 0 : a.length;
          if (!m)
            return -1;
          var y = m;
          return f !== n && (y = Ue(f), y = y < 0 ? $t(m + y, 0) : en(y, m - 1)), i === i ? sb(a, i, y) : Fl(a, xf, y, !0);
        }
        function RI(a, i) {
          return a && a.length ? ch(a, Ue(i)) : n;
        }
        var OI = Ge(nA);
        function nA(a, i) {
          return a && a.length && i && i.length ? A_(a, i) : a;
        }
        function CI(a, i, f) {
          return a && a.length && i && i.length ? A_(a, i, Ne(f, 2)) : a;
        }
        function NI(a, i, f) {
          return a && a.length && i && i.length ? A_(a, i, n, f) : a;
        }
        var DI = Zr(function(a, i) {
          var f = a == null ? 0 : a.length, m = l_(a, i);
          return Ah(a, It(i, function(y) {
            return Jr(y, f) ? +y : y;
          }).sort(yh)), m;
        });
        function BI(a, i) {
          var f = [];
          if (!(a && a.length))
            return f;
          var m = -1, y = [], N = a.length;
          for (i = Ne(i, 3); ++m < N; ) {
            var x = a[m];
            i(x, m, a) && (f.push(x), y.push(m));
          }
          return Ah(a, y), f;
        }
        function x_(a) {
          return a == null ? a : yb.call(a);
        }
        function wI(a, i, f) {
          var m = a == null ? 0 : a.length;
          return m ? (f && typeof f != "number" && _n(a, i, f) ? (i = 0, f = m) : (i = i == null ? 0 : Ue(i), f = f === n ? m : Ue(f)), nr(a, i, f)) : [];
        }
        function PI(a, i) {
          return no(a, i);
        }
        function xI(a, i, f) {
          return T_(a, i, Ne(f, 2));
        }
        function FI(a, i) {
          var f = a == null ? 0 : a.length;
          if (f) {
            var m = no(a, i);
            if (m < f && mr(a[m], i))
              return m;
          }
          return -1;
        }
        function MI(a, i) {
          return no(a, i, !0);
        }
        function qI(a, i, f) {
          return T_(a, i, Ne(f, 2), !0);
        }
        function $I(a, i) {
          var f = a == null ? 0 : a.length;
          if (f) {
            var m = no(a, i, !0) - 1;
            if (mr(a[m], i))
              return m;
          }
          return -1;
        }
        function kI(a) {
          return a && a.length ? ph(a) : [];
        }
        function UI(a, i) {
          return a && a.length ? ph(a, Ne(i, 2)) : [];
        }
        function HI(a) {
          var i = a == null ? 0 : a.length;
          return i ? nr(a, 1, i) : [];
        }
        function VI(a, i, f) {
          return a && a.length ? (i = f || i === n ? 1 : Ue(i), nr(a, 0, i < 0 ? 0 : i)) : [];
        }
        function WI(a, i, f) {
          var m = a == null ? 0 : a.length;
          return m ? (i = f || i === n ? 1 : Ue(i), i = m - i, nr(a, i < 0 ? 0 : i, m)) : [];
        }
        function GI(a, i) {
          return a && a.length ? ro(a, Ne(i, 3), !1, !0) : [];
        }
        function KI(a, i) {
          return a && a.length ? ro(a, Ne(i, 3)) : [];
        }
        var jI = Ge(function(a) {
          return va(jt(a, 1, Nt, !0));
        }), zI = Ge(function(a) {
          var i = rr(a);
          return Nt(i) && (i = n), va(jt(a, 1, Nt, !0), Ne(i, 2));
        }), YI = Ge(function(a) {
          var i = rr(a);
          return i = typeof i == "function" ? i : n, va(jt(a, 1, Nt, !0), n, i);
        });
        function XI(a) {
          return a && a.length ? va(a) : [];
        }
        function ZI(a, i) {
          return a && a.length ? va(a, Ne(i, 2)) : [];
        }
        function JI(a, i) {
          return i = typeof i == "function" ? i : n, a && a.length ? va(a, n, i) : [];
        }
        function F_(a) {
          if (!(a && a.length))
            return [];
          var i = 0;
          return a = ma(a, function(f) {
            if (Nt(f))
              return i = $t(f.length, i), !0;
          }), Qu(i, function(f) {
            return It(a, Xu(f));
          });
        }
        function rA(a, i) {
          if (!(a && a.length))
            return [];
          var f = F_(a);
          return i == null ? f : It(f, function(m) {
            return On(i, n, m);
          });
        }
        var QI = Ge(function(a, i) {
          return Nt(a) ? wi(a, i) : [];
        }), ev = Ge(function(a) {
          return S_(ma(a, Nt));
        }), tv = Ge(function(a) {
          var i = rr(a);
          return Nt(i) && (i = n), S_(ma(a, Nt), Ne(i, 2));
        }), nv = Ge(function(a) {
          var i = rr(a);
          return i = typeof i == "function" ? i : n, S_(ma(a, Nt), n, i);
        }), rv = Ge(F_);
        function av(a, i) {
          return bh(a || [], i || [], Bi);
        }
        function sv(a, i) {
          return bh(a || [], i || [], Fi);
        }
        var iv = Ge(function(a) {
          var i = a.length, f = i > 1 ? a[i - 1] : n;
          return f = typeof f == "function" ? (a.pop(), f) : n, rA(a, f);
        });
        function aA(a) {
          var i = O(a);
          return i.__chain__ = !0, i;
        }
        function lv(a, i) {
          return i(a), a;
        }
        function fo(a, i) {
          return i(a);
        }
        var ov = Zr(function(a) {
          var i = a.length, f = i ? a[0] : 0, m = this.__wrapped__, y = function(N) {
            return l_(N, a);
          };
          return i > 1 || this.__actions__.length || !(m instanceof Je) || !Jr(f) ? this.thru(y) : (m = m.slice(f, +f + (i ? 1 : 0)), m.__actions__.push({
            func: fo,
            args: [y],
            thisArg: n
          }), new er(m, this.__chain__).thru(function(N) {
            return i && !N.length && N.push(n), N;
          }));
        });
        function uv() {
          return aA(this);
        }
        function _v() {
          return new er(this.value(), this.__chain__);
        }
        function dv() {
          this.__values__ === n && (this.__values__ = TA(this.value()));
          var a = this.__index__ >= this.__values__.length, i = a ? n : this.__values__[this.__index__++];
          return { done: a, value: i };
        }
        function cv() {
          return this;
        }
        function fv(a) {
          for (var i, f = this; f instanceof Zl; ) {
            var m = Zh(f);
            m.__index__ = 0, m.__values__ = n, i ? y.__wrapped__ = m : i = m;
            var y = m;
            f = f.__wrapped__;
          }
          return y.__wrapped__ = a, i;
        }
        function hv() {
          var a = this.__wrapped__;
          if (a instanceof Je) {
            var i = a;
            return this.__actions__.length && (i = new Je(this)), i = i.reverse(), i.__actions__.push({
              func: fo,
              args: [x_],
              thisArg: n
            }), new er(i, this.__chain__);
          }
          return this.thru(x_);
        }
        function Av() {
          return Sh(this.__wrapped__, this.__actions__);
        }
        var Ev = ao(function(a, i, f) {
          ct.call(a, f) ? ++a[f] : Yr(a, f, 1);
        });
        function pv(a, i, f) {
          var m = $e(a) ? wf : lL;
          return f && _n(a, i, f) && (i = n), m(a, Ne(i, 3));
        }
        function Tv(a, i) {
          var f = $e(a) ? ma : rh;
          return f(a, Ne(i, 3));
        }
        var mv = Dh(Jh), Sv = Dh(Qh);
        function bv(a, i) {
          return jt(ho(a, i), 1);
        }
        function Lv(a, i) {
          return jt(ho(a, i), oe);
        }
        function Iv(a, i, f) {
          return f = f === n ? 1 : Ue(f), jt(ho(a, i), f);
        }
        function sA(a, i) {
          var f = $e(a) ? Jn : Ia;
          return f(a, Ne(i, 3));
        }
        function iA(a, i) {
          var f = $e(a) ? HS : nh;
          return f(a, Ne(i, 3));
        }
        var vv = ao(function(a, i, f) {
          ct.call(a, f) ? a[f].push(i) : Yr(a, f, [i]);
        });
        function yv(a, i, f, m) {
          a = Sn(a) ? a : ti(a), f = f && !m ? Ue(f) : 0;
          var y = a.length;
          return f < 0 && (f = $t(y + f, 0)), mo(a) ? f <= y && a.indexOf(i, f) > -1 : !!y && Vs(a, i, f) > -1;
        }
        var gv = Ge(function(a, i, f) {
          var m = -1, y = typeof i == "function", N = Sn(a) ? G(a.length) : [];
          return Ia(a, function(x) {
            N[++m] = y ? On(i, x, f) : Pi(x, i, f);
          }), N;
        }), Rv = ao(function(a, i, f) {
          Yr(a, f, i);
        });
        function ho(a, i) {
          var f = $e(a) ? It : uh;
          return f(a, Ne(i, 3));
        }
        function Ov(a, i, f, m) {
          return a == null ? [] : ($e(i) || (i = i == null ? [] : [i]), f = m ? n : f, $e(f) || (f = f == null ? [] : [f]), fh(a, i, f));
        }
        var Cv = ao(function(a, i, f) {
          a[f ? 0 : 1].push(i);
        }, function() {
          return [[], []];
        });
        function Nv(a, i, f) {
          var m = $e(a) ? zu : Mf, y = arguments.length < 3;
          return m(a, Ne(i, 4), f, y, Ia);
        }
        function Dv(a, i, f) {
          var m = $e(a) ? VS : Mf, y = arguments.length < 3;
          return m(a, Ne(i, 4), f, y, nh);
        }
        function Bv(a, i) {
          var f = $e(a) ? ma : rh;
          return f(a, po(Ne(i, 3)));
        }
        function wv(a) {
          var i = $e(a) ? Jf : yL;
          return i(a);
        }
        function Pv(a, i, f) {
          (f ? _n(a, i, f) : i === n) ? i = 1 : i = Ue(i);
          var m = $e(a) ? nL : gL;
          return m(a, i);
        }
        function xv(a) {
          var i = $e(a) ? rL : OL;
          return i(a);
        }
        function Fv(a) {
          if (a == null)
            return 0;
          if (Sn(a))
            return mo(a) ? Gs(a) : a.length;
          var i = tn(a);
          return i == Fe || i == bt ? a.size : f_(a).length;
        }
        function Mv(a, i, f) {
          var m = $e(a) ? Yu : CL;
          return f && _n(a, i, f) && (i = n), m(a, Ne(i, 3));
        }
        var qv = Ge(function(a, i) {
          if (a == null)
            return [];
          var f = i.length;
          return f > 1 && _n(a, i[0], i[1]) ? i = [] : f > 2 && _n(i[0], i[1], i[2]) && (i = [i[0]]), fh(a, jt(i, 1), []);
        }), Ao = Tb || function() {
          return Kt.Date.now();
        };
        function $v(a, i) {
          if (typeof i != "function")
            throw new Qn(o);
          return a = Ue(a), function() {
            if (--a < 1)
              return i.apply(this, arguments);
          };
        }
        function lA(a, i, f) {
          return i = f ? n : i, i = a && i == null ? a.length : i, Xr(a, P, n, n, n, n, i);
        }
        function oA(a, i) {
          var f;
          if (typeof i != "function")
            throw new Qn(o);
          return a = Ue(a), function() {
            return --a > 0 && (f = i.apply(this, arguments)), a <= 1 && (i = n), f;
          };
        }
        var M_ = Ge(function(a, i, f) {
          var m = I;
          if (f.length) {
            var y = ba(f, Qs(M_));
            m |= w;
          }
          return Xr(a, m, i, f, y);
        }), uA = Ge(function(a, i, f) {
          var m = I | v;
          if (f.length) {
            var y = ba(f, Qs(uA));
            m |= w;
          }
          return Xr(i, m, a, f, y);
        });
        function _A(a, i, f) {
          i = f ? n : i;
          var m = Xr(a, g, n, n, n, n, n, i);
          return m.placeholder = _A.placeholder, m;
        }
        function dA(a, i, f) {
          i = f ? n : i;
          var m = Xr(a, D, n, n, n, n, n, i);
          return m.placeholder = dA.placeholder, m;
        }
        function cA(a, i, f) {
          var m, y, N, x, q, V, Z = 0, J = !1, ee = !1, ce = !0;
          if (typeof a != "function")
            throw new Qn(o);
          i = ar(i) || 0, vt(f) && (J = !!f.leading, ee = "maxWait" in f, N = ee ? $t(ar(f.maxWait) || 0, i) : N, ce = "trailing" in f ? !!f.trailing : ce);
          function ve(Dt) {
            var Sr = m, ta = y;
            return m = y = n, Z = Dt, x = a.apply(ta, Sr), x;
          }
          function De(Dt) {
            return Z = Dt, q = $i(ze, i), J ? ve(Dt) : x;
          }
          function Ve(Dt) {
            var Sr = Dt - V, ta = Dt - Z, DA = i - Sr;
            return ee ? en(DA, N - ta) : DA;
          }
          function Be(Dt) {
            var Sr = Dt - V, ta = Dt - Z;
            return V === n || Sr >= i || Sr < 0 || ee && ta >= N;
          }
          function ze() {
            var Dt = Ao();
            if (Be(Dt))
              return et(Dt);
            q = $i(ze, Ve(Dt));
          }
          function et(Dt) {
            return q = n, ce && m ? ve(Dt) : (m = y = n, x);
          }
          function Bn() {
            q !== n && Lh(q), Z = 0, m = V = y = q = n;
          }
          function dn() {
            return q === n ? x : et(Ao());
          }
          function wn() {
            var Dt = Ao(), Sr = Be(Dt);
            if (m = arguments, y = this, V = Dt, Sr) {
              if (q === n)
                return De(V);
              if (ee)
                return Lh(q), q = $i(ze, i), ve(V);
            }
            return q === n && (q = $i(ze, i)), x;
          }
          return wn.cancel = Bn, wn.flush = dn, wn;
        }
        var kv = Ge(function(a, i) {
          return th(a, 1, i);
        }), Uv = Ge(function(a, i, f) {
          return th(a, ar(i) || 0, f);
        });
        function Hv(a) {
          return Xr(a, C);
        }
        function Eo(a, i) {
          if (typeof a != "function" || i != null && typeof i != "function")
            throw new Qn(o);
          var f = function() {
            var m = arguments, y = i ? i.apply(this, m) : m[0], N = f.cache;
            if (N.has(y))
              return N.get(y);
            var x = a.apply(this, m);
            return f.cache = N.set(y, x) || N, x;
          };
          return f.cache = new (Eo.Cache || zr)(), f;
        }
        Eo.Cache = zr;
        function po(a) {
          if (typeof a != "function")
            throw new Qn(o);
          return function() {
            var i = arguments;
            switch (i.length) {
              case 0:
                return !a.call(this);
              case 1:
                return !a.call(this, i[0]);
              case 2:
                return !a.call(this, i[0], i[1]);
              case 3:
                return !a.call(this, i[0], i[1], i[2]);
            }
            return !a.apply(this, i);
          };
        }
        function Vv(a) {
          return oA(2, a);
        }
        var Wv = NL(function(a, i) {
          i = i.length == 1 && $e(i[0]) ? It(i[0], Cn(Ne())) : It(jt(i, 1), Cn(Ne()));
          var f = i.length;
          return Ge(function(m) {
            for (var y = -1, N = en(m.length, f); ++y < N; )
              m[y] = i[y].call(this, m[y]);
            return On(a, this, m);
          });
        }), q_ = Ge(function(a, i) {
          var f = ba(i, Qs(q_));
          return Xr(a, w, n, i, f);
        }), fA = Ge(function(a, i) {
          var f = ba(i, Qs(fA));
          return Xr(a, M, n, i, f);
        }), Gv = Zr(function(a, i) {
          return Xr(a, F, n, n, n, i);
        });
        function Kv(a, i) {
          if (typeof a != "function")
            throw new Qn(o);
          return i = i === n ? i : Ue(i), Ge(a, i);
        }
        function jv(a, i) {
          if (typeof a != "function")
            throw new Qn(o);
          return i = i == null ? 0 : $t(Ue(i), 0), Ge(function(f) {
            var m = f[i], y = ga(f, 0, i);
            return m && Sa(y, m), On(a, this, y);
          });
        }
        function zv(a, i, f) {
          var m = !0, y = !0;
          if (typeof a != "function")
            throw new Qn(o);
          return vt(f) && (m = "leading" in f ? !!f.leading : m, y = "trailing" in f ? !!f.trailing : y), cA(a, i, {
            leading: m,
            maxWait: i,
            trailing: y
          });
        }
        function Yv(a) {
          return lA(a, 1);
        }
        function Xv(a, i) {
          return q_(L_(i), a);
        }
        function Zv() {
          if (!arguments.length)
            return [];
          var a = arguments[0];
          return $e(a) ? a : [a];
        }
        function Jv(a) {
          return tr(a, S);
        }
        function Qv(a, i) {
          return i = typeof i == "function" ? i : n, tr(a, S, i);
        }
        function ey(a) {
          return tr(a, p | S);
        }
        function ty(a, i) {
          return i = typeof i == "function" ? i : n, tr(a, p | S, i);
        }
        function ny(a, i) {
          return i == null || eh(a, i, Vt(i));
        }
        function mr(a, i) {
          return a === i || a !== a && i !== i;
        }
        var ry = oo(__), ay = oo(function(a, i) {
          return a >= i;
        }), vs = ih(/* @__PURE__ */ function() {
          return arguments;
        }()) ? ih : function(a) {
          return gt(a) && ct.call(a, "callee") && !Kf.call(a, "callee");
        }, $e = G.isArray, sy = Rf ? Cn(Rf) : fL;
        function Sn(a) {
          return a != null && To(a.length) && !Qr(a);
        }
        function Nt(a) {
          return gt(a) && Sn(a);
        }
        function iy(a) {
          return a === !0 || a === !1 || gt(a) && un(a) == Q;
        }
        var Ra = Sb || Y_, ly = Of ? Cn(Of) : hL;
        function oy(a) {
          return gt(a) && a.nodeType === 1 && !ki(a);
        }
        function uy(a) {
          if (a == null)
            return !0;
          if (Sn(a) && ($e(a) || typeof a == "string" || typeof a.splice == "function" || Ra(a) || ei(a) || vs(a)))
            return !a.length;
          var i = tn(a);
          if (i == Fe || i == bt)
            return !a.size;
          if (qi(a))
            return !f_(a).length;
          for (var f in a)
            if (ct.call(a, f))
              return !1;
          return !0;
        }
        function _y(a, i) {
          return xi(a, i);
        }
        function dy(a, i, f) {
          f = typeof f == "function" ? f : n;
          var m = f ? f(a, i) : n;
          return m === n ? xi(a, i, n, f) : !!m;
        }
        function $_(a) {
          if (!gt(a))
            return !1;
          var i = un(a);
          return i == Ce || i == Ie || typeof a.message == "string" && typeof a.name == "string" && !ki(a);
        }
        function cy(a) {
          return typeof a == "number" && zf(a);
        }
        function Qr(a) {
          if (!vt(a))
            return !1;
          var i = un(a);
          return i == xe || i == Xe || i == H || i == Ze;
        }
        function hA(a) {
          return typeof a == "number" && a == Ue(a);
        }
        function To(a) {
          return typeof a == "number" && a > -1 && a % 1 == 0 && a <= Le;
        }
        function vt(a) {
          var i = typeof a;
          return a != null && (i == "object" || i == "function");
        }
        function gt(a) {
          return a != null && typeof a == "object";
        }
        var AA = Cf ? Cn(Cf) : EL;
        function fy(a, i) {
          return a === i || c_(a, i, C_(i));
        }
        function hy(a, i, f) {
          return f = typeof f == "function" ? f : n, c_(a, i, C_(i), f);
        }
        function Ay(a) {
          return EA(a) && a != +a;
        }
        function Ey(a) {
          if (QL(a))
            throw new Me(l);
          return lh(a);
        }
        function py(a) {
          return a === null;
        }
        function Ty(a) {
          return a == null;
        }
        function EA(a) {
          return typeof a == "number" || gt(a) && un(a) == Pe;
        }
        function ki(a) {
          if (!gt(a) || un(a) != He)
            return !1;
          var i = Wl(a);
          if (i === null)
            return !0;
          var f = ct.call(i, "constructor") && i.constructor;
          return typeof f == "function" && f instanceof f && kl.call(f) == hb;
        }
        var k_ = Nf ? Cn(Nf) : pL;
        function my(a) {
          return hA(a) && a >= -Le && a <= Le;
        }
        var pA = Df ? Cn(Df) : TL;
        function mo(a) {
          return typeof a == "string" || !$e(a) && gt(a) && un(a) == Wt;
        }
        function Dn(a) {
          return typeof a == "symbol" || gt(a) && un(a) == pn;
        }
        var ei = Bf ? Cn(Bf) : mL;
        function Sy(a) {
          return a === n;
        }
        function by(a) {
          return gt(a) && tn(a) == Zt;
        }
        function Ly(a) {
          return gt(a) && un(a) == Wn;
        }
        var Iy = oo(h_), vy = oo(function(a, i) {
          return a <= i;
        });
        function TA(a) {
          if (!a)
            return [];
          if (Sn(a))
            return mo(a) ? pr(a) : mn(a);
          if (Ri && a[Ri])
            return nb(a[Ri]());
          var i = tn(a), f = i == Fe ? t_ : i == bt ? Ml : ti;
          return f(a);
        }
        function ea(a) {
          if (!a)
            return a === 0 ? a : 0;
          if (a = ar(a), a === oe || a === -oe) {
            var i = a < 0 ? -1 : 1;
            return i * We;
          }
          return a === a ? a : 0;
        }
        function Ue(a) {
          var i = ea(a), f = i % 1;
          return i === i ? f ? i - f : i : 0;
        }
        function mA(a) {
          return a ? Ss(Ue(a), 0, se) : 0;
        }
        function ar(a) {
          if (typeof a == "number")
            return a;
          if (Dn(a))
            return Se;
          if (vt(a)) {
            var i = typeof a.valueOf == "function" ? a.valueOf() : a;
            a = vt(i) ? i + "" : i;
          }
          if (typeof a != "string")
            return a === 0 ? a : +a;
          a = qf(a);
          var f = $u.test(a);
          return f || $.test(a) ? $S(a.slice(2), f ? 2 : 8) : wl.test(a) ? Se : +a;
        }
        function SA(a) {
          return wr(a, bn(a));
        }
        function yy(a) {
          return a ? Ss(Ue(a), -Le, Le) : a === 0 ? a : 0;
        }
        function _t(a) {
          return a == null ? "" : Nn(a);
        }
        var gy = Zs(function(a, i) {
          if (qi(i) || Sn(i)) {
            wr(i, Vt(i), a);
            return;
          }
          for (var f in i)
            ct.call(i, f) && Bi(a, f, i[f]);
        }), bA = Zs(function(a, i) {
          wr(i, bn(i), a);
        }), So = Zs(function(a, i, f, m) {
          wr(i, bn(i), a, m);
        }), Ry = Zs(function(a, i, f, m) {
          wr(i, Vt(i), a, m);
        }), Oy = Zr(l_);
        function Cy(a, i) {
          var f = Xs(a);
          return i == null ? f : Qf(f, i);
        }
        var Ny = Ge(function(a, i) {
          a = ht(a);
          var f = -1, m = i.length, y = m > 2 ? i[2] : n;
          for (y && _n(i[0], i[1], y) && (m = 1); ++f < m; )
            for (var N = i[f], x = bn(N), q = -1, V = x.length; ++q < V; ) {
              var Z = x[q], J = a[Z];
              (J === n || mr(J, js[Z]) && !ct.call(a, Z)) && (a[Z] = N[Z]);
            }
          return a;
        }), Dy = Ge(function(a) {
          return a.push(n, qh), On(LA, n, a);
        });
        function By(a, i) {
          return Pf(a, Ne(i, 3), Br);
        }
        function wy(a, i) {
          return Pf(a, Ne(i, 3), u_);
        }
        function Py(a, i) {
          return a == null ? a : o_(a, Ne(i, 3), bn);
        }
        function xy(a, i) {
          return a == null ? a : ah(a, Ne(i, 3), bn);
        }
        function Fy(a, i) {
          return a && Br(a, Ne(i, 3));
        }
        function My(a, i) {
          return a && u_(a, Ne(i, 3));
        }
        function qy(a) {
          return a == null ? [] : eo(a, Vt(a));
        }
        function $y(a) {
          return a == null ? [] : eo(a, bn(a));
        }
        function U_(a, i, f) {
          var m = a == null ? n : bs(a, i);
          return m === n ? f : m;
        }
        function ky(a, i) {
          return a != null && Uh(a, i, uL);
        }
        function H_(a, i) {
          return a != null && Uh(a, i, _L);
        }
        var Uy = wh(function(a, i, f) {
          i != null && typeof i.toString != "function" && (i = Ul.call(i)), a[i] = f;
        }, W_(Ln)), Hy = wh(function(a, i, f) {
          i != null && typeof i.toString != "function" && (i = Ul.call(i)), ct.call(a, i) ? a[i].push(f) : a[i] = [f];
        }, Ne), Vy = Ge(Pi);
        function Vt(a) {
          return Sn(a) ? Zf(a) : f_(a);
        }
        function bn(a) {
          return Sn(a) ? Zf(a, !0) : SL(a);
        }
        function Wy(a, i) {
          var f = {};
          return i = Ne(i, 3), Br(a, function(m, y, N) {
            Yr(f, i(m, y, N), m);
          }), f;
        }
        function Gy(a, i) {
          var f = {};
          return i = Ne(i, 3), Br(a, function(m, y, N) {
            Yr(f, y, i(m, y, N));
          }), f;
        }
        var Ky = Zs(function(a, i, f) {
          to(a, i, f);
        }), LA = Zs(function(a, i, f, m) {
          to(a, i, f, m);
        }), jy = Zr(function(a, i) {
          var f = {};
          if (a == null)
            return f;
          var m = !1;
          i = It(i, function(N) {
            return N = ya(N, a), m || (m = N.length > 1), N;
          }), wr(a, R_(a), f), m && (f = tr(f, p | T | S, UL));
          for (var y = i.length; y--; )
            m_(f, i[y]);
          return f;
        });
        function zy(a, i) {
          return IA(a, po(Ne(i)));
        }
        var Yy = Zr(function(a, i) {
          return a == null ? {} : LL(a, i);
        });
        function IA(a, i) {
          if (a == null)
            return {};
          var f = It(R_(a), function(m) {
            return [m];
          });
          return i = Ne(i), hh(a, f, function(m, y) {
            return i(m, y[0]);
          });
        }
        function Xy(a, i, f) {
          i = ya(i, a);
          var m = -1, y = i.length;
          for (y || (y = 1, a = n); ++m < y; ) {
            var N = a == null ? n : a[Pr(i[m])];
            N === n && (m = y, N = f), a = Qr(N) ? N.call(a) : N;
          }
          return a;
        }
        function Zy(a, i, f) {
          return a == null ? a : Fi(a, i, f);
        }
        function Jy(a, i, f, m) {
          return m = typeof m == "function" ? m : n, a == null ? a : Fi(a, i, f, m);
        }
        var vA = Fh(Vt), yA = Fh(bn);
        function Qy(a, i, f) {
          var m = $e(a), y = m || Ra(a) || ei(a);
          if (i = Ne(i, 4), f == null) {
            var N = a && a.constructor;
            y ? f = m ? new N() : [] : vt(a) ? f = Qr(N) ? Xs(Wl(a)) : {} : f = {};
          }
          return (y ? Jn : Br)(a, function(x, q, V) {
            return i(f, x, q, V);
          }), f;
        }
        function eg(a, i) {
          return a == null ? !0 : m_(a, i);
        }
        function tg(a, i, f) {
          return a == null ? a : mh(a, i, L_(f));
        }
        function ng(a, i, f, m) {
          return m = typeof m == "function" ? m : n, a == null ? a : mh(a, i, L_(f), m);
        }
        function ti(a) {
          return a == null ? [] : e_(a, Vt(a));
        }
        function rg(a) {
          return a == null ? [] : e_(a, bn(a));
        }
        function ag(a, i, f) {
          return f === n && (f = i, i = n), f !== n && (f = ar(f), f = f === f ? f : 0), i !== n && (i = ar(i), i = i === i ? i : 0), Ss(ar(a), i, f);
        }
        function sg(a, i, f) {
          return i = ea(i), f === n ? (f = i, i = 0) : f = ea(f), a = ar(a), dL(a, i, f);
        }
        function ig(a, i, f) {
          if (f && typeof f != "boolean" && _n(a, i, f) && (i = f = n), f === n && (typeof i == "boolean" ? (f = i, i = n) : typeof a == "boolean" && (f = a, a = n)), a === n && i === n ? (a = 0, i = 1) : (a = ea(a), i === n ? (i = a, a = 0) : i = ea(i)), a > i) {
            var m = a;
            a = i, i = m;
          }
          if (f || a % 1 || i % 1) {
            var y = Yf();
            return en(a + y * (i - a + qS("1e-" + ((y + "").length - 1))), i);
          }
          return E_(a, i);
        }
        var lg = Js(function(a, i, f) {
          return i = i.toLowerCase(), a + (f ? gA(i) : i);
        });
        function gA(a) {
          return V_(_t(a).toLowerCase());
        }
        function RA(a) {
          return a = _t(a), a && a.replace(be, ZS).replace(OS, "");
        }
        function og(a, i, f) {
          a = _t(a), i = Nn(i);
          var m = a.length;
          f = f === n ? m : Ss(Ue(f), 0, m);
          var y = f;
          return f -= i.length, f >= 0 && a.slice(f, y) == i;
        }
        function ug(a) {
          return a = _t(a), a && fs.test(a) ? a.replace(Rn, JS) : a;
        }
        function _g(a) {
          return a = _t(a), a && Li.test(a) ? a.replace(Dr, "\\$&") : a;
        }
        var dg = Js(function(a, i, f) {
          return a + (f ? "-" : "") + i.toLowerCase();
        }), cg = Js(function(a, i, f) {
          return a + (f ? " " : "") + i.toLowerCase();
        }), fg = Nh("toLowerCase");
        function hg(a, i, f) {
          a = _t(a), i = Ue(i);
          var m = i ? Gs(a) : 0;
          if (!i || m >= i)
            return a;
          var y = (i - m) / 2;
          return lo(zl(y), f) + a + lo(jl(y), f);
        }
        function Ag(a, i, f) {
          a = _t(a), i = Ue(i);
          var m = i ? Gs(a) : 0;
          return i && m < i ? a + lo(i - m, f) : a;
        }
        function Eg(a, i, f) {
          a = _t(a), i = Ue(i);
          var m = i ? Gs(a) : 0;
          return i && m < i ? lo(i - m, f) + a : a;
        }
        function pg(a, i, f) {
          return f || i == null ? i = 0 : i && (i = +i), vb(_t(a).replace(Jt, ""), i || 0);
        }
        function Tg(a, i, f) {
          return (f ? _n(a, i, f) : i === n) ? i = 1 : i = Ue(i), p_(_t(a), i);
        }
        function mg() {
          var a = arguments, i = _t(a[0]);
          return a.length < 3 ? i : i.replace(a[1], a[2]);
        }
        var Sg = Js(function(a, i, f) {
          return a + (f ? "_" : "") + i.toLowerCase();
        });
        function bg(a, i, f) {
          return f && typeof f != "number" && _n(a, i, f) && (i = f = n), f = f === n ? se : f >>> 0, f ? (a = _t(a), a && (typeof i == "string" || i != null && !k_(i)) && (i = Nn(i), !i && Ws(a)) ? ga(pr(a), 0, f) : a.split(i, f)) : [];
        }
        var Lg = Js(function(a, i, f) {
          return a + (f ? " " : "") + V_(i);
        });
        function Ig(a, i, f) {
          return a = _t(a), f = f == null ? 0 : Ss(Ue(f), 0, a.length), i = Nn(i), a.slice(f, f + i.length) == i;
        }
        function vg(a, i, f) {
          var m = O.templateSettings;
          f && _n(a, i, f) && (i = n), a = _t(a), i = So({}, i, m, Mh);
          var y = So({}, i.imports, m.imports, Mh), N = Vt(y), x = e_(y, N), q, V, Z = 0, J = i.interpolate || dt, ee = "__p += '", ce = n_(
            (i.escape || dt).source + "|" + J.source + "|" + (J === Gr ? Bl : dt).source + "|" + (i.evaluate || dt).source + "|$",
            "g"
          ), ve = "//# sourceURL=" + (ct.call(i, "sourceURL") ? (i.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++wS + "]") + `
`;
          a.replace(ce, function(Be, ze, et, Bn, dn, wn) {
            return et || (et = Bn), ee += a.slice(Z, wn).replace(Ut, QS), ze && (q = !0, ee += `' +
__e(` + ze + `) +
'`), dn && (V = !0, ee += `';
` + dn + `;
__p += '`), et && (ee += `' +
((__t = (` + et + `)) == null ? '' : __t) +
'`), Z = wn + Be.length, Be;
          }), ee += `';
`;
          var De = ct.call(i, "variable") && i.variable;
          if (!De)
            ee = `with (obj) {
` + ee + `
}
`;
          else if (on.test(De))
            throw new Me(u);
          ee = (V ? ee.replace(ds, "") : ee).replace(Nr, "$1").replace(zn, "$1;"), ee = "function(" + (De || "obj") + `) {
` + (De ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + (q ? ", __e = _.escape" : "") + (V ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + ee + `return __p
}`;
          var Ve = CA(function() {
            return ot(N, ve + "return " + ee).apply(n, x);
          });
          if (Ve.source = ee, $_(Ve))
            throw Ve;
          return Ve;
        }
        function yg(a) {
          return _t(a).toLowerCase();
        }
        function gg(a) {
          return _t(a).toUpperCase();
        }
        function Rg(a, i, f) {
          if (a = _t(a), a && (f || i === n))
            return qf(a);
          if (!a || !(i = Nn(i)))
            return a;
          var m = pr(a), y = pr(i), N = $f(m, y), x = kf(m, y) + 1;
          return ga(m, N, x).join("");
        }
        function Og(a, i, f) {
          if (a = _t(a), a && (f || i === n))
            return a.slice(0, Hf(a) + 1);
          if (!a || !(i = Nn(i)))
            return a;
          var m = pr(a), y = kf(m, pr(i)) + 1;
          return ga(m, 0, y).join("");
        }
        function Cg(a, i, f) {
          if (a = _t(a), a && (f || i === n))
            return a.replace(Jt, "");
          if (!a || !(i = Nn(i)))
            return a;
          var m = pr(a), y = $f(m, pr(i));
          return ga(m, y).join("");
        }
        function Ng(a, i) {
          var f = k, m = W;
          if (vt(i)) {
            var y = "separator" in i ? i.separator : y;
            f = "length" in i ? Ue(i.length) : f, m = "omission" in i ? Nn(i.omission) : m;
          }
          a = _t(a);
          var N = a.length;
          if (Ws(a)) {
            var x = pr(a);
            N = x.length;
          }
          if (f >= N)
            return a;
          var q = f - Gs(m);
          if (q < 1)
            return m;
          var V = x ? ga(x, 0, q).join("") : a.slice(0, q);
          if (y === n)
            return V + m;
          if (x && (q += V.length - q), k_(y)) {
            if (a.slice(q).search(y)) {
              var Z, J = V;
              for (y.global || (y = n_(y.source, _t(Ii.exec(y)) + "g")), y.lastIndex = 0; Z = y.exec(J); )
                var ee = Z.index;
              V = V.slice(0, ee === n ? q : ee);
            }
          } else if (a.indexOf(Nn(y), q) != q) {
            var ce = V.lastIndexOf(y);
            ce > -1 && (V = V.slice(0, ce));
          }
          return V + m;
        }
        function Dg(a) {
          return a = _t(a), a && cs.test(a) ? a.replace(Aa, ib) : a;
        }
        var Bg = Js(function(a, i, f) {
          return a + (f ? " " : "") + i.toUpperCase();
        }), V_ = Nh("toUpperCase");
        function OA(a, i, f) {
          return a = _t(a), i = f ? n : i, i === n ? tb(a) ? ub(a) : KS(a) : a.match(i) || [];
        }
        var CA = Ge(function(a, i) {
          try {
            return On(a, n, i);
          } catch (f) {
            return $_(f) ? f : new Me(f);
          }
        }), wg = Zr(function(a, i) {
          return Jn(i, function(f) {
            f = Pr(f), Yr(a, f, M_(a[f], a));
          }), a;
        });
        function Pg(a) {
          var i = a == null ? 0 : a.length, f = Ne();
          return a = i ? It(a, function(m) {
            if (typeof m[1] != "function")
              throw new Qn(o);
            return [f(m[0]), m[1]];
          }) : [], Ge(function(m) {
            for (var y = -1; ++y < i; ) {
              var N = a[y];
              if (On(N[0], this, m))
                return On(N[1], this, m);
            }
          });
        }
        function xg(a) {
          return iL(tr(a, p));
        }
        function W_(a) {
          return function() {
            return a;
          };
        }
        function Fg(a, i) {
          return a == null || a !== a ? i : a;
        }
        var Mg = Bh(), qg = Bh(!0);
        function Ln(a) {
          return a;
        }
        function G_(a) {
          return oh(typeof a == "function" ? a : tr(a, p));
        }
        function $g(a) {
          return _h(tr(a, p));
        }
        function kg(a, i) {
          return dh(a, tr(i, p));
        }
        var Ug = Ge(function(a, i) {
          return function(f) {
            return Pi(f, a, i);
          };
        }), Hg = Ge(function(a, i) {
          return function(f) {
            return Pi(a, f, i);
          };
        });
        function K_(a, i, f) {
          var m = Vt(i), y = eo(i, m);
          f == null && !(vt(i) && (y.length || !m.length)) && (f = i, i = a, a = this, y = eo(i, Vt(i)));
          var N = !(vt(f) && "chain" in f) || !!f.chain, x = Qr(a);
          return Jn(y, function(q) {
            var V = i[q];
            a[q] = V, x && (a.prototype[q] = function() {
              var Z = this.__chain__;
              if (N || Z) {
                var J = a(this.__wrapped__), ee = J.__actions__ = mn(this.__actions__);
                return ee.push({ func: V, args: arguments, thisArg: a }), J.__chain__ = Z, J;
              }
              return V.apply(a, Sa([this.value()], arguments));
            });
          }), a;
        }
        function Vg() {
          return Kt._ === this && (Kt._ = Ab), this;
        }
        function j_() {
        }
        function Wg(a) {
          return a = Ue(a), Ge(function(i) {
            return ch(i, a);
          });
        }
        var Gg = v_(It), Kg = v_(wf), jg = v_(Yu);
        function NA(a) {
          return D_(a) ? Xu(Pr(a)) : IL(a);
        }
        function zg(a) {
          return function(i) {
            return a == null ? n : bs(a, i);
          };
        }
        var Yg = Ph(), Xg = Ph(!0);
        function z_() {
          return [];
        }
        function Y_() {
          return !1;
        }
        function Zg() {
          return {};
        }
        function Jg() {
          return "";
        }
        function Qg() {
          return !0;
        }
        function eR(a, i) {
          if (a = Ue(a), a < 1 || a > Le)
            return [];
          var f = se, m = en(a, se);
          i = Ne(i), a -= se;
          for (var y = Qu(m, i); ++f < a; )
            i(f);
          return y;
        }
        function tR(a) {
          return $e(a) ? It(a, Pr) : Dn(a) ? [a] : mn(Xh(_t(a)));
        }
        function nR(a) {
          var i = ++fb;
          return _t(a) + i;
        }
        var rR = io(function(a, i) {
          return a + i;
        }, 0), aR = y_("ceil"), sR = io(function(a, i) {
          return a / i;
        }, 1), iR = y_("floor");
        function lR(a) {
          return a && a.length ? Ql(a, Ln, __) : n;
        }
        function oR(a, i) {
          return a && a.length ? Ql(a, Ne(i, 2), __) : n;
        }
        function uR(a) {
          return Ff(a, Ln);
        }
        function _R(a, i) {
          return Ff(a, Ne(i, 2));
        }
        function dR(a) {
          return a && a.length ? Ql(a, Ln, h_) : n;
        }
        function cR(a, i) {
          return a && a.length ? Ql(a, Ne(i, 2), h_) : n;
        }
        var fR = io(function(a, i) {
          return a * i;
        }, 1), hR = y_("round"), AR = io(function(a, i) {
          return a - i;
        }, 0);
        function ER(a) {
          return a && a.length ? Ju(a, Ln) : 0;
        }
        function pR(a, i) {
          return a && a.length ? Ju(a, Ne(i, 2)) : 0;
        }
        return O.after = $v, O.ary = lA, O.assign = gy, O.assignIn = bA, O.assignInWith = So, O.assignWith = Ry, O.at = Oy, O.before = oA, O.bind = M_, O.bindAll = wg, O.bindKey = uA, O.castArray = Zv, O.chain = aA, O.chunk = iI, O.compact = lI, O.concat = oI, O.cond = Pg, O.conforms = xg, O.constant = W_, O.countBy = Ev, O.create = Cy, O.curry = _A, O.curryRight = dA, O.debounce = cA, O.defaults = Ny, O.defaultsDeep = Dy, O.defer = kv, O.delay = Uv, O.difference = uI, O.differenceBy = _I, O.differenceWith = dI, O.drop = cI, O.dropRight = fI, O.dropRightWhile = hI, O.dropWhile = AI, O.fill = EI, O.filter = Tv, O.flatMap = bv, O.flatMapDeep = Lv, O.flatMapDepth = Iv, O.flatten = eA, O.flattenDeep = pI, O.flattenDepth = TI, O.flip = Hv, O.flow = Mg, O.flowRight = qg, O.fromPairs = mI, O.functions = qy, O.functionsIn = $y, O.groupBy = vv, O.initial = bI, O.intersection = LI, O.intersectionBy = II, O.intersectionWith = vI, O.invert = Uy, O.invertBy = Hy, O.invokeMap = gv, O.iteratee = G_, O.keyBy = Rv, O.keys = Vt, O.keysIn = bn, O.map = ho, O.mapKeys = Wy, O.mapValues = Gy, O.matches = $g, O.matchesProperty = kg, O.memoize = Eo, O.merge = Ky, O.mergeWith = LA, O.method = Ug, O.methodOf = Hg, O.mixin = K_, O.negate = po, O.nthArg = Wg, O.omit = jy, O.omitBy = zy, O.once = Vv, O.orderBy = Ov, O.over = Gg, O.overArgs = Wv, O.overEvery = Kg, O.overSome = jg, O.partial = q_, O.partialRight = fA, O.partition = Cv, O.pick = Yy, O.pickBy = IA, O.property = NA, O.propertyOf = zg, O.pull = OI, O.pullAll = nA, O.pullAllBy = CI, O.pullAllWith = NI, O.pullAt = DI, O.range = Yg, O.rangeRight = Xg, O.rearg = Gv, O.reject = Bv, O.remove = BI, O.rest = Kv, O.reverse = x_, O.sampleSize = Pv, O.set = Zy, O.setWith = Jy, O.shuffle = xv, O.slice = wI, O.sortBy = qv, O.sortedUniq = kI, O.sortedUniqBy = UI, O.split = bg, O.spread = jv, O.tail = HI, O.take = VI, O.takeRight = WI, O.takeRightWhile = GI, O.takeWhile = KI, O.tap = lv, O.throttle = zv, O.thru = fo, O.toArray = TA, O.toPairs = vA, O.toPairsIn = yA, O.toPath = tR, O.toPlainObject = SA, O.transform = Qy, O.unary = Yv, O.union = jI, O.unionBy = zI, O.unionWith = YI, O.uniq = XI, O.uniqBy = ZI, O.uniqWith = JI, O.unset = eg, O.unzip = F_, O.unzipWith = rA, O.update = tg, O.updateWith = ng, O.values = ti, O.valuesIn = rg, O.without = QI, O.words = OA, O.wrap = Xv, O.xor = ev, O.xorBy = tv, O.xorWith = nv, O.zip = rv, O.zipObject = av, O.zipObjectDeep = sv, O.zipWith = iv, O.entries = vA, O.entriesIn = yA, O.extend = bA, O.extendWith = So, K_(O, O), O.add = rR, O.attempt = CA, O.camelCase = lg, O.capitalize = gA, O.ceil = aR, O.clamp = ag, O.clone = Jv, O.cloneDeep = ey, O.cloneDeepWith = ty, O.cloneWith = Qv, O.conformsTo = ny, O.deburr = RA, O.defaultTo = Fg, O.divide = sR, O.endsWith = og, O.eq = mr, O.escape = ug, O.escapeRegExp = _g, O.every = pv, O.find = mv, O.findIndex = Jh, O.findKey = By, O.findLast = Sv, O.findLastIndex = Qh, O.findLastKey = wy, O.floor = iR, O.forEach = sA, O.forEachRight = iA, O.forIn = Py, O.forInRight = xy, O.forOwn = Fy, O.forOwnRight = My, O.get = U_, O.gt = ry, O.gte = ay, O.has = ky, O.hasIn = H_, O.head = tA, O.identity = Ln, O.includes = yv, O.indexOf = SI, O.inRange = sg, O.invoke = Vy, O.isArguments = vs, O.isArray = $e, O.isArrayBuffer = sy, O.isArrayLike = Sn, O.isArrayLikeObject = Nt, O.isBoolean = iy, O.isBuffer = Ra, O.isDate = ly, O.isElement = oy, O.isEmpty = uy, O.isEqual = _y, O.isEqualWith = dy, O.isError = $_, O.isFinite = cy, O.isFunction = Qr, O.isInteger = hA, O.isLength = To, O.isMap = AA, O.isMatch = fy, O.isMatchWith = hy, O.isNaN = Ay, O.isNative = Ey, O.isNil = Ty, O.isNull = py, O.isNumber = EA, O.isObject = vt, O.isObjectLike = gt, O.isPlainObject = ki, O.isRegExp = k_, O.isSafeInteger = my, O.isSet = pA, O.isString = mo, O.isSymbol = Dn, O.isTypedArray = ei, O.isUndefined = Sy, O.isWeakMap = by, O.isWeakSet = Ly, O.join = yI, O.kebabCase = dg, O.last = rr, O.lastIndexOf = gI, O.lowerCase = cg, O.lowerFirst = fg, O.lt = Iy, O.lte = vy, O.max = lR, O.maxBy = oR, O.mean = uR, O.meanBy = _R, O.min = dR, O.minBy = cR, O.stubArray = z_, O.stubFalse = Y_, O.stubObject = Zg, O.stubString = Jg, O.stubTrue = Qg, O.multiply = fR, O.nth = RI, O.noConflict = Vg, O.noop = j_, O.now = Ao, O.pad = hg, O.padEnd = Ag, O.padStart = Eg, O.parseInt = pg, O.random = ig, O.reduce = Nv, O.reduceRight = Dv, O.repeat = Tg, O.replace = mg, O.result = Xy, O.round = hR, O.runInContext = U, O.sample = wv, O.size = Fv, O.snakeCase = Sg, O.some = Mv, O.sortedIndex = PI, O.sortedIndexBy = xI, O.sortedIndexOf = FI, O.sortedLastIndex = MI, O.sortedLastIndexBy = qI, O.sortedLastIndexOf = $I, O.startCase = Lg, O.startsWith = Ig, O.subtract = AR, O.sum = ER, O.sumBy = pR, O.template = vg, O.times = eR, O.toFinite = ea, O.toInteger = Ue, O.toLength = mA, O.toLower = yg, O.toNumber = ar, O.toSafeInteger = yy, O.toString = _t, O.toUpper = gg, O.trim = Rg, O.trimEnd = Og, O.trimStart = Cg, O.truncate = Ng, O.unescape = Dg, O.uniqueId = nR, O.upperCase = Bg, O.upperFirst = V_, O.each = sA, O.eachRight = iA, O.first = tA, K_(O, function() {
          var a = {};
          return Br(O, function(i, f) {
            ct.call(O.prototype, f) || (a[f] = i);
          }), a;
        }(), { chain: !1 }), O.VERSION = r, Jn(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(a) {
          O[a].placeholder = O;
        }), Jn(["drop", "take"], function(a, i) {
          Je.prototype[a] = function(f) {
            f = f === n ? 1 : $t(Ue(f), 0);
            var m = this.__filtered__ && !i ? new Je(this) : this.clone();
            return m.__filtered__ ? m.__takeCount__ = en(f, m.__takeCount__) : m.__views__.push({
              size: en(f, se),
              type: a + (m.__dir__ < 0 ? "Right" : "")
            }), m;
          }, Je.prototype[a + "Right"] = function(f) {
            return this.reverse()[a](f).reverse();
          };
        }), Jn(["filter", "map", "takeWhile"], function(a, i) {
          var f = i + 1, m = f == te || f == ae;
          Je.prototype[a] = function(y) {
            var N = this.clone();
            return N.__iteratees__.push({
              iteratee: Ne(y, 3),
              type: f
            }), N.__filtered__ = N.__filtered__ || m, N;
          };
        }), Jn(["head", "last"], function(a, i) {
          var f = "take" + (i ? "Right" : "");
          Je.prototype[a] = function() {
            return this[f](1).value()[0];
          };
        }), Jn(["initial", "tail"], function(a, i) {
          var f = "drop" + (i ? "" : "Right");
          Je.prototype[a] = function() {
            return this.__filtered__ ? new Je(this) : this[f](1);
          };
        }), Je.prototype.compact = function() {
          return this.filter(Ln);
        }, Je.prototype.find = function(a) {
          return this.filter(a).head();
        }, Je.prototype.findLast = function(a) {
          return this.reverse().find(a);
        }, Je.prototype.invokeMap = Ge(function(a, i) {
          return typeof a == "function" ? new Je(this) : this.map(function(f) {
            return Pi(f, a, i);
          });
        }), Je.prototype.reject = function(a) {
          return this.filter(po(Ne(a)));
        }, Je.prototype.slice = function(a, i) {
          a = Ue(a);
          var f = this;
          return f.__filtered__ && (a > 0 || i < 0) ? new Je(f) : (a < 0 ? f = f.takeRight(-a) : a && (f = f.drop(a)), i !== n && (i = Ue(i), f = i < 0 ? f.dropRight(-i) : f.take(i - a)), f);
        }, Je.prototype.takeRightWhile = function(a) {
          return this.reverse().takeWhile(a).reverse();
        }, Je.prototype.toArray = function() {
          return this.take(se);
        }, Br(Je.prototype, function(a, i) {
          var f = /^(?:filter|find|map|reject)|While$/.test(i), m = /^(?:head|last)$/.test(i), y = O[m ? "take" + (i == "last" ? "Right" : "") : i], N = m || /^find/.test(i);
          y && (O.prototype[i] = function() {
            var x = this.__wrapped__, q = m ? [1] : arguments, V = x instanceof Je, Z = q[0], J = V || $e(x), ee = function(ze) {
              var et = y.apply(O, Sa([ze], q));
              return m && ce ? et[0] : et;
            };
            J && f && typeof Z == "function" && Z.length != 1 && (V = J = !1);
            var ce = this.__chain__, ve = !!this.__actions__.length, De = N && !ce, Ve = V && !ve;
            if (!N && J) {
              x = Ve ? x : new Je(this);
              var Be = a.apply(x, q);
              return Be.__actions__.push({ func: fo, args: [ee], thisArg: n }), new er(Be, ce);
            }
            return De && Ve ? a.apply(this, q) : (Be = this.thru(ee), De ? m ? Be.value()[0] : Be.value() : Be);
          });
        }), Jn(["pop", "push", "shift", "sort", "splice", "unshift"], function(a) {
          var i = ql[a], f = /^(?:push|sort|unshift)$/.test(a) ? "tap" : "thru", m = /^(?:pop|shift)$/.test(a);
          O.prototype[a] = function() {
            var y = arguments;
            if (m && !this.__chain__) {
              var N = this.value();
              return i.apply($e(N) ? N : [], y);
            }
            return this[f](function(x) {
              return i.apply($e(x) ? x : [], y);
            });
          };
        }), Br(Je.prototype, function(a, i) {
          var f = O[i];
          if (f) {
            var m = f.name + "";
            ct.call(Ys, m) || (Ys[m] = []), Ys[m].push({ name: i, func: f });
          }
        }), Ys[so(n, v).name] = [{
          name: "wrapper",
          func: n
        }], Je.prototype.clone = Db, Je.prototype.reverse = Bb, Je.prototype.value = wb, O.prototype.at = ov, O.prototype.chain = uv, O.prototype.commit = _v, O.prototype.next = dv, O.prototype.plant = fv, O.prototype.reverse = hv, O.prototype.toJSON = O.prototype.valueOf = O.prototype.value = Av, O.prototype.first = O.prototype.head, Ri && (O.prototype[Ri] = cv), O;
      }, Ks = _b();
      Es ? ((Es.exports = Ks)._ = Ks, Gu._ = Ks) : Kt._ = Ks;
    }).call(Mq);
  }(Xi, Xi.exports)), Xi.exports;
}
var Om = qq();
function $q(e, {
  dataKeyByKeyIdLocal: t = _(() => ({}))
}) {
  const n = d(e, "isModelArray"), r = d(e, "modelValue");
  return {
    modelValueItemReadonly: _(() => {
      var l;
      if (n.value) {
        let o;
        return (l = r.value) != null && l.length && Om.forEach(r.value, (u) => {
          if (u in t.value)
            return o = t.value[u], !1;
        }), o;
      }
      return t.value[r.value];
    })
  };
}
const Cm = {
  name: "ARadio",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    classDataParent: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => []
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_radio_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inline: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isModelArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: void 0
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "value"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    search: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: void 0
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrder: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_",
        notElementsWithSearch: "_A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_",
        search: "_A_RADIO_SEARCH_"
      })
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "onSearchOutside",
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Ct(e), {
      componentStyleHide: r
    } = Xt(e), {
      ariaDescribedbyLocal: s,
      changeModel: l,
      errorsId: o,
      helpTextId: u,
      htmlIdLocal: h,
      isErrors: A,
      onBlur: E,
      onFocus: p
    } = Yt(e, t), {
      textAfterLabel: T
    } = Uc(e), {
      dataFromServer: S,
      dataExtraLocal: b,
      dataKeyByKeyIdLocal: L,
      dataLocal: I,
      hasDataExtra: v
    } = Jc(e), {
      loadDataFromServer: R,
      loadDataFromServerForSearchAPI: g,
      loadingDataFromServer: D,
      loadingSearchApi: w,
      onSearchInApi: M,
      searchApiLocal: P,
      updateUrlPropsComputed: F,
      urlPropsComputed: C
    } = Yc(e, {
      changeModel: l,
      dataExtraLocal: b,
      dataFromServer: S
    }), {
      loadingLocal: k
    } = Qc(e, {
      loadingDataFromServer: D
    });
    Zc(t, {
      dataKeyByKeyIdLocal: L,
      dataLocal: I
    });
    const {
      dataSort: W
    } = Xc(e, {
      data: I
    }), {
      dataGrouped: K,
      groupsForLever: le,
      hasKeyGroup: te,
      keyGroupArray: _e
    } = Hc(e, {
      data: W
    }), {
      hasNotElementsExtraWithSearch: ae,
      hasNotElementsWithSearch: oe,
      idForButtonSearchOutside: Le,
      modelSearch: We,
      modelSearchLowerCase: Se,
      modelSearchOutside: se,
      onSearchOutside: Oe,
      searching: ye,
      searchingElements: je,
      searchingElementsExtra: he,
      searchingGroups: ne,
      searchingGroupsWithSearchInGroup: H,
      searchOutsideOrApi: Q,
      searchOutsideRef: re,
      updateModelSearch: Ie,
      updateModelSearchOutside: Ce
    } = ef(e, t, {
      data: W,
      dataExtra: b,
      groupsForLever: le,
      htmlIdLocal: h,
      hasKeyGroup: te,
      keyGroupArray: _e,
      searchApiLocal: P,
      onSearchInApi: M
    }), {
      onChangeModelValue: xe
    } = Fq(e, {
      changeModel: l,
      dataKeyByKeyIdLocal: L
    }), {
      iconCollapse: Xe,
      initIsCollapsedLocal: Fe,
      isCollapsedLocal: Pe,
      titleCollapse: at,
      toggleCollapse: He
    } = Wc(e, t), {
      groupId: st
    } = kc(e, {
      htmlIdLocal: h
    }), {
      modelValueItemReadonly: Ze
    } = $q(e, {
      dataKeyByKeyIdLocal: L
    });
    return rt(C, F), Fe(), R(), g(), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      componentStyleHide: r,
      dataExtraLocal: b,
      dataGrouped: K,
      dataSort: W,
      errorsId: o,
      groupId: st,
      groupsForLever: le,
      hasDataExtra: v,
      hasKeyGroup: te,
      hasNotElementsExtraWithSearch: ae,
      hasNotElementsWithSearch: oe,
      helpTextId: u,
      htmlIdLocal: h,
      iconCollapse: Xe,
      idForButtonSearchOutside: Le,
      isCollapsedLocal: Pe,
      isErrors: A,
      loadingLocal: k,
      loadingSearchApi: w,
      modelSearch: We,
      modelSearchLowerCase: Se,
      modelSearchOutside: se,
      modelValueItemReadonly: Ze,
      onBlur: E,
      onChangeModelValue: xe,
      onFocus: p,
      onSearchOutside: Oe,
      searching: ye,
      searchingElements: je,
      searchingElementsExtra: he,
      searchingGroups: ne,
      searchingGroupsWithSearchInGroup: H,
      searchOutsideOrApi: Q,
      searchOutsideRef: re,
      textAfterLabel: T,
      titleCollapse: at,
      toggleCollapse: He,
      updateModelSearch: Ie,
      updateModelSearchOutside: Ce
    };
  },
  render() {
    var e, t, n;
    return this.isRender ? this.readonly ? c(Vn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: void 0,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "radio"
    }, this.modelValueItemReadonly ? () => [
      c(wo, {
        id: this.htmlIdLocal,
        alwaysTranslate: this.alwaysTranslate,
        dataItem: this.modelValueItemReadonly,
        itemIndex: -1,
        modelValue: this.modelValue,
        readonly: !0,
        slotAppendName: this.slotAppendName,
        slotName: this.slotName
      }, this.$slots)
    ] : void 0) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: [
          "a_form_element__parent",
          {
            a_radio_inline: this.inline
          }
        ]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("fieldset", {
            id: this.htmlIdLocal,
            tabindex: -1,
            class: [
              "a_fieldset",
              this.classFieldset,
              {
                a_fieldset_no_border: !this.hasBorder,
                a_fieldset_invalid: this.isErrors,
                a_fieldset_collapsed: this.isCollapsedLocal
              }
            ],
            "aria-describedby": this.ariaDescribedbyLocal
          }, [
            this.label || this.labelScreenReader ? c(me, {
              type: "text",
              alwaysTranslate: this.alwaysTranslate,
              tag: "legend",
              class: [
                "a_legend",
                {
                  a_legend_invalid: this.isErrors
                },
                this.labelClass
              ],
              extra: this.extra,
              html: this.label,
              textScreenReader: this.labelScreenReader,
              textAfter: this.textAfterLabel
            }) : "",
            this.collapsible ? c(me, {
              "aria-controls": this.groupId,
              "aria-expanded": !this.isCollapsedLocal,
              alwaysTranslate: this.alwaysTranslate,
              class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
              iconLeft: this.iconCollapse,
              title: this.titleCollapse,
              textScreenReader: this.titleCollapse,
              type: "button",
              onClick: this.toggleCollapse
            }) : "",
            c("div", {
              id: this.groupId,
              class: "a_fieldset__content"
            }, [
              this.searchOutsideOrApi ? c("div", {
                class: "a_fieldset__search"
              }, [
                c("form", {
                  onSubmit: this.onSearchOutside
                }, [
                  c("div", {
                    class: "input-group"
                  }, [
                    c(In, {
                      alwaysTranslate: this.alwaysTranslate,
                      label: ((e = this.texts) == null ? void 0 : e.search) || "_A_RADIO_SEARCH_",
                      inputClass: "a_select__element_clickable",
                      modelValue: this.modelSearchOutside,
                      modelUndefined: "",
                      "onUpdate:modelValue": this.updateModelSearchOutside
                    }),
                    c(me, {
                      alwaysTranslate: this.alwaysTranslate,
                      ariaDisabled: this.loadingSearchApi,
                      class: "a_btn a_btn_primary",
                      disabled: this.disabled,
                      iconLeft: Ol,
                      type: "submit"
                    })
                  ])
                ])
              ]) : "",
              this.search ? c(In, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_fieldset__search",
                label: ((t = this.texts) == null ? void 0 : t.search) || "_A_RADIO_SEARCH_",
                modelValue: this.modelSearch,
                modelUndefined: "",
                "onUpdate:modelValue": this.updateModelSearch
              }) : "",
              this.loadingLocal ? c(ul) : "",
              this.hasDataExtra ? c("div", {
                class: "a_radio__data_extra"
              }, [
                ...this.dataExtraLocal.map((r, s) => c(wo, {
                  key: r[Ke],
                  id: this.htmlIdLocal,
                  alwaysTranslate: this.alwaysTranslate,
                  idSuffix: "extra",
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataItem: r,
                  disabled: this.disabled,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  itemIndex: s,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElementsExtra,
                  slotName: this.slotName,
                  slotAppendName: this.slotAppendName,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.hasNotElementsExtraWithSearch ? "" : c("div", {
                  class: "a_divider",
                  ariaHidden: !0
                })
              ]) : "",
              c("div", {}, this.hasKeyGroup ? [
                c($c, {
                  id: `${this.htmlIdLocal}_lev_0`,
                  alwaysTranslate: this.alwaysTranslate,
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataGrouped: this.dataGrouped,
                  disabled: this.disabled,
                  groupsForLever: this.groupsForLever,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  levelIndex: 0,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElements,
                  searchingGroups: this.searchingGroups,
                  searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  type: "radio",
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)
              ] : [
                c("div", {
                  class: [
                    "a_radio_data",
                    {
                      a_btn_group: this.isButtonGroup
                    },
                    this.classDataParent
                  ]
                }, [
                  ...this.dataSort.map((r, s) => c(wo, {
                    key: r[Ke],
                    id: this.htmlIdLocal,
                    alwaysTranslate: this.alwaysTranslate,
                    classButtonGroupDefault: this.classButtonGroupDefault,
                    dataItem: r,
                    disabled: this.disabled,
                    isButtonGroup: this.isButtonGroup,
                    isErrors: this.isErrors,
                    isWidthAuto: this.isWidthAuto,
                    itemIndex: s,
                    keyDisabled: this.keyDisabled,
                    keyTitle: this.keyTitle,
                    keyTitleCallback: this.keyTitleCallback,
                    modelSearch: this.modelSearchLowerCase,
                    modelValue: this.modelValue,
                    searching: this.searching,
                    searchingElements: this.searchingElements,
                    slotName: this.slotName,
                    slotAppendName: this.slotAppendName,
                    onChangeModelValue: this.onChangeModelValue
                  }, this.$slots))
                ])
              ]),
              !this.dataSort.length || this.hasNotElementsWithSearch ? c(Ae, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_form__not_elements",
                text: ((n = this.texts) == null ? void 0 : n.notElementsWithSearch) || "_A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_"
              }) : ""
            ])
          ])
        ]),
        c(ln, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(sn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function kq(e, {
  changeQueryModel: t = () => {
  },
  changeRouteModel: n = () => {
  },
  changeTargetModel: r = () => {
  },
  childrenForParam: s = _(() => []),
  hasParam: l = _(() => !1),
  htmlIdLocal: o = _(() => ""),
  routesLocal: u = _(() => [])
}) {
  const h = d(e, "helpTextParam"), A = d(e, "helpTextQuery"), E = d(e, "helpTextRoute"), p = d(e, "helpTextTarget"), T = d(e, "keyIdRoute"), S = d(e, "keyLabelCallbackRoute"), b = d(e, "keyLabelRoute"), L = d(e, "labelParam"), I = d(e, "labelQuery"), v = d(e, "labelRoute"), R = d(e, "labelTarget"), g = d(e, "modelValue"), D = d(e, "readonlyDefaultParam"), w = d(e, "readonlyDefaultQuery"), M = d(e, "readonlyDefaultRoute"), P = d(e, "readonlyDefaultTarget"), F = d(e, "required"), C = d(e, "sortOrderRoute"), k = d(e, "targets");
  return {
    dataFormChildren: _(() => {
      var K, le;
      return [
        {
          id: "route",
          change: n,
          data: u.value,
          deselectable: !0,
          helpText: E.value,
          idPrefix: o.value,
          isLabelFloat: !1,
          keyId: T.value,
          keyLabel: b.value,
          keyLabelCallback: S.value,
          label: v.value,
          readonlyDefault: M.value,
          required: F.value,
          search: !0,
          sortOrder: C.value,
          type: "select"
        },
        {
          id: "param",
          children: s.value,
          helpText: h.value,
          idPrefix: o.value,
          isRender: l.value,
          label: L.value,
          readonlyDefault: D.value,
          required: F.value,
          type: "fieldset"
        },
        {
          isHide: !((K = g.value) != null && K.route),
          id: "query",
          change: t,
          heightCss: "100px",
          helpText: A.value,
          idPrefix: o.value,
          label: I.value,
          readonlyDefault: w.value,
          type: "json"
        },
        {
          isHide: !((le = g.value) != null && le.route),
          id: "target",
          change: r,
          data: k.value,
          deselectable: !0,
          helpText: p.value,
          idPrefix: o.value,
          isLabelFloat: !1,
          keyId: "id",
          keyLabel: "label",
          label: R.value,
          readonlyDefault: P.value,
          translateData: !0,
          type: "select"
        }
      ];
    })
  };
}
function Uq(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "modelValue");
  return {
    changeParamModel: ({ model: u, id: h }) => {
      const A = pe(n.value) || {};
      A.param = A.param || {}, A.param[h] = u, t({ model: A });
    },
    changeQueryModel: ({ model: u }) => {
      const h = pe(n.value) || {};
      h.query = u, t({ model: h });
    },
    changeRouteModel: ({ model: u }) => {
      var h;
      t(u ? {
        model: {
          route: u,
          query: (h = n.value) == null ? void 0 : h.query
        }
      } : {
        model: {}
      });
    },
    changeTargetModel: ({ model: u }) => {
      const h = pe(n.value) || {};
      h.target = u, t({ model: h });
    }
  };
}
function Hq(e, {
  changeParamModel: t = () => {
  },
  htmlIdLocal: n = _(() => ""),
  routePathKeyByKeyId: r = _(() => ({}))
}) {
  const s = d(e, "modelValue"), l = d(e, "required"), o = (E) => {
    const p = /:([a-zA-Z0-9_]+)/g, T = [];
    let S;
    for (; (S = p.exec(E)) !== null; )
      T.push(S[1]);
    return T;
  }, u = _(() => {
    var E;
    return (E = s.value) != null && E.route ? o(r.value[s.value.route]) : [];
  }), h = _(() => u.value.length > 0);
  return {
    childrenForParam: _(() => {
      const E = [];
      return z(u.value, (p) => {
        const T = {
          id: `param.${p}`,
          change: ({ model: S }) => t({ model: S, id: p }),
          label: p,
          type: "text",
          idPrefix: n.value,
          required: l.value
        };
        E.push(T);
      }), E;
    }),
    hasParam: h
  };
}
function Vq(e) {
  const t = d(e, "keyIdRoute"), n = d(e, "routes"), r = _(() => n.value);
  return {
    routePathKeyByKeyId: _(() => {
      const l = {};
      return z(r.value, (o) => {
        const u = fe(o, t.value);
        l[u] = o.path;
      }), l;
    }),
    routesLocal: r
  };
}
const Wq = {
  name: "ARouterLinkConfig",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classColumn: {
      type: [String, Object],
      required: !1,
      default: () => zt.propsDefault.classColumn
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: () => zt.propsDefault.classColumns
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    helpTextParam: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.helpTextParam
    },
    helpTextQuery: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.helpTextQuery
    },
    helpTextRoute: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.helpTextRoute
    },
    helpTextTarget: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.helpTextTarget
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_router_link_config_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyIdRoute: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.keyIdRoute
    },
    keyLabelCallbackRoute: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyLabelRoute: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.keyLabelRoute
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelParam: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.labelParam
    },
    labelQuery: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.labelQuery
    },
    labelRoute: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.labelRoute
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelTarget: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.labelTarget
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    readonlyDefaultParam: {
      type: String,
      required: !1,
      default: void 0
    },
    readonlyDefaultQuery: {
      type: String,
      required: !1,
      default: void 0
    },
    readonlyDefaultRoute: {
      type: String,
      required: !1,
      default: void 0
    },
    readonlyDefaultTarget: {
      type: String,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    routes: {
      type: Array,
      required: !1,
      default: () => zt.propsDefault.routes
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrderRoute: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.sortOrderRoute,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    targets: {
      type: Array,
      required: !1,
      default: () => zt.propsDefault.targets
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      changeModel: n,
      htmlIdLocal: r
    } = Yt(e, t), {
      changeParamModel: s,
      changeQueryModel: l,
      changeRouteModel: o,
      changeTargetModel: u
    } = Uq(e, {
      changeModel: n
    }), {
      routePathKeyByKeyId: h,
      routesLocal: A
    } = Vq(e), {
      childrenForParam: E,
      hasParam: p
    } = Hq(e, {
      changeParamModel: s,
      htmlIdLocal: r,
      routePathKeyByKeyId: h
    }), {
      dataFormChildren: T
    } = kq(e, {
      changeQueryModel: l,
      changeRouteModel: o,
      changeTargetModel: u,
      childrenForParam: E,
      hasParam: p,
      htmlIdLocal: r,
      routesLocal: A
    });
    return {
      dataFormChildren: T,
      hasParam: p,
      htmlIdLocal: r
    };
  },
  render() {
    return c(Bm, {
      ...this.$attrs,
      alwaysTranslate: this.alwaysTranslate,
      classColumn: this.classColumn,
      classColumns: this.classColumns,
      classFieldset: this.classFieldset,
      disabled: this.disabled,
      errors: this.errors,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      hasBorder: this.hasBorder,
      helpText: this.helpText,
      htmlId: this.htmlId,
      id: this.id,
      idPrefix: this.idPrefix,
      inputAttributes: this.inputAttributes,
      isHide: this.isHide,
      isRender: this.isRender,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelUndefined: this.modelUndefined,
      modelValue: this.modelValue,
      readonly: this.readonly,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      slotName: this.slotName,
      children: this.dataFormChildren,
      "onUpdate:modelValue": this.$emit["update:modelValue"]
    });
  }
};
function Gq(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = d(e, "disabled"), r = _(() => `${t.value}_container`), s = _(() => `${t.value}_list`), l = _(() => `${t.value}_label`), o = _(() => n.value ? void 0 : 0);
  return {
    ariaLabelledby: l,
    containerId: r,
    idForList: s,
    tabindex: o
  };
}
function Kq(e) {
  const t = d(e, "disabled"), n = d(e, "exclusiveOptionValue"), r = d(e, "isExclusiveOptionEnabled"), s = d(e, "modelValue"), l = _(() => r.value ? s.value && s.value.indexOf(n.value) !== -1 : !1), o = _(() => l.value || t.value), u = _(() => o.value || void 0);
  return {
    disabledAttribut: _(() => t.value || void 0),
    disabledLocal: o,
    disabledLocalAttribut: u,
    isExclusiveOptionSelected: l
  };
}
function jq(e, {
  isMultiselect: t = _(() => !1)
}) {
  const n = d(e, "isSelectAll"), r = d(e, "isDeselectAll");
  return {
    isDividerSelectDeselectVisible: _(() => t.value && (n.value || r.value))
  };
}
function zq(e) {
  const t = d(e, "exclusiveOptionLabel"), n = d(e, "exclusiveOptionValue"), r = d(e, "extra"), s = d(e, "isExclusiveOptionEnabled"), l = _(() => {
    if (s.value)
      return {
        [Ke]: n.value,
        [St]: Bt({
          placeholder: t.value,
          extra: r.value
        })
      };
  }), o = _(() => Pa([l.value], Ke));
  return {
    exclusiveOption: l,
    exclusiveDataKeyByKeyIdLocal: o
  };
}
function Yq(e, {
  dataKeyByKeyIdLocal: t = _(() => ({}))
}) {
  const n = d(e, "countMultiselect"), r = d(e, "exclusiveOptionValue"), s = d(e, "modelValue"), l = d(e, "type"), o = _(() => l.value === "multiselect"), u = _(() => !o.value || !s.value || !Te(s.value) ? [] : wt(s.value, (T) => t.value[T] || T === r.value)), h = _(() => o.value ? u.value.length > 0 : !ie(s.value)), A = _(() => {
    var T;
    return ((T = u.value) == null ? void 0 : T.length) || 0;
  }), E = _(() => A.value > n.value), p = _(() => ({
    [St]: "_A_SELECT_MORE_SELECTED_{{count}}_",
    extra: {
      count: A.value - n.value
    }
  }));
  return {
    isModelLengthLimitExceeded: E,
    isModelValue: h,
    isMultiselect: o,
    limitExceededModelData: p,
    modelValueLength: A,
    modelValueMultiselectFiltered: u
  };
}
function Xq(e, {
  changeModel: t = () => {
  },
  dataAll: n = _(() => []),
  dataKeyByKeyIdLocal: r = _(() => ({})),
  disabledLocal: s = _(() => !1),
  isMultiselect: l = _(() => !1),
  togglePopover: o = () => {
  }
}) {
  const u = d(e, "countMultiselect"), h = d(e, "disabled"), A = d(e, "exclusiveOptionValue"), E = d(e, "isCloseByClick"), p = d(e, "isExclusiveOptionEnabled"), T = d(e, "deselectable"), S = d(e, "maxCountMultiselect"), b = d(e, "modelValue"), L = _(() => !l.value || !S.value ? !1 : fe(b.value, "length") >= S.value), I = _(() => we(E.value) ? !l.value : E.value), v = ({ currentValue: P, $event: F, isSelected: C }) => {
    let k;
    if (l.value)
      if (k = pe(b.value) || [], C) {
        const W = k.indexOf(P);
        k.splice(W, 1), p.value && P === A.value && (k = []);
      } else if (p.value && P === A.value)
        k = [P];
      else {
        if (L.value)
          return;
        k.push(P);
      }
    else if (C)
      if (T.value)
        k = void 0;
      else
        return;
    else
      k = P;
    t({
      model: k,
      $event: F,
      currentModel: P,
      item: r.value[P]
    }), I.value && o();
  }, R = (P) => {
    const F = uT(b.value, u.value);
    t({
      model: F,
      $event: P
    });
  }, g = () => {
    if (s.value)
      return;
    const P = n.value.map((F) => F[Ke]);
    t({
      model: P
    });
  }, D = (P) => {
    const F = P.keyCode;
    (F === X.enter || F === X.space) && (g(), P.preventDefault());
  }, w = () => {
    h.value || t({
      model: []
    });
  };
  return {
    deleteExceededItems: R,
    onChangeModelValue: v,
    onDeselectAll: w,
    onKeydownDeselectAll: (P) => {
      const F = P.keyCode;
      (F === X.enter || F === X.space) && (w(), P.preventDefault());
    },
    onKeydownSelectAll: D,
    onSelectAll: g
  };
}
function Zq(e, {
  dataKeyByKeyIdLocal: t = _(() => ({})),
  isModelLengthLimitExceeded: n,
  isModelValue: r = _(() => !1),
  isMultiselect: s,
  modelValueLength: l,
  modelValueMultiselectFiltered: o = _(() => [])
}) {
  const u = d(e, "modelValue"), h = d(e, "isSelectionCloseable"), A = _(() => {
    if (!r.value)
      return;
    let p = "";
    return s.value ? h.value || !n.value ? z(o.value, (T, S) => {
      const b = t.value[T] || {};
      p += `${S > 0 ? ", " : ""}${b[St]}`;
    }) : p = `${l.value} ausgewählt` : p = (t.value[u.value] || {})[St], p;
  });
  return {
    hasSelectedTitle: _(() => !!A.value),
    selectedTitle: A
  };
}
function Jq({
  $elements: e = _(() => []),
  clickOutsideCallback: t = () => {
  }
}) {
  const n = B("ontouchend" in document ? "touchstart" : "click"), r = (o) => {
    let u = !1;
    z(e.value, (h) => {
      if (h === o.target || h.contains(o.target))
        return u = !0, !1;
    }), u || t();
  }, s = () => {
    document.addEventListener(n.value, r);
  }, l = () => {
    document.removeEventListener(n.value, r);
  };
  return Ot(() => l()), {
    setEventClickOutside: s,
    destroyEventClickOutside: l
  };
}
const XE = ".a_select__element_clickable:not([disabled]):not([data-hide])";
function Qq(e, {
  emit: t
}, {
  closePopup: n = () => {
  },
  htmlIdLocal: r = _(() => ""),
  openPopup: s = () => {
  }
}) {
  const l = d(e, "disabled"), o = d(e, "menuWidthType"), u = B(void 0), h = B(void 0), A = B(!1), E = B(void 0), p = B(void 0), T = d(e, "placement"), S = B(void 0), b = _(() => [
    u.value,
    E.value
  ]), L = _(() => {
    if (o.value === "as_button")
      return u.value.clientWidth;
  }), {
    setEventClickOutside: I,
    destroyEventClickOutside: v
  } = Jq({
    $elements: b,
    clickOutsideCallback: _e
  }), R = ({ isArrowDown: ae }) => {
    const oe = p.value.querySelectorAll(XE);
    if (oe.length === 0)
      return;
    let Le = !1;
    z(oe, (We, Se) => {
      if (We === document.activeElement)
        return Le = !0, ae ? Se < oe.length - 1 && oe[Se + 1].focus() : Se > 0 && oe[Se - 1].focus(), !1;
    }), Le || oe[0].focus();
  }, g = () => {
    u.value.focus();
  }, D = (ae) => {
    const oe = ae.keyCode, Le = oe === X.arrowDown;
    Le || oe === X.arrowUp ? (R({ isArrowDown: Le }), ae.preventDefault()) : oe === X.escape ? (_e(), g(), ae.preventDefault(), ae.stopPropagation()) : oe === X.tab && (_e(), g());
  }, w = () => {
    h.value && (h.value(), h.value = void 0);
  }, M = () => {
    s({
      id: r.value
    }), t("open");
  }, P = () => {
    const ae = p.value.querySelector(XE);
    ae && ae.focus();
  }, F = () => {
    S.value || (S.value = !0, document.addEventListener("keydown", D));
  }, C = () => {
    M(), setTimeout(() => {
      P(), F();
    });
  }, k = () => {
    !h.value && u.value && p.value && (h.value = bl(
      u.value,
      p.value,
      () => {
        !u.value || !p.value || vl(
          u.value,
          p.value,
          {
            placement: T.value,
            middleware: [
              Il(),
              Ll({ limiter: vu() })
            ]
          }
        ).then(({ x: ae, y: oe }) => {
          if (!u.value.clientWidth) {
            _e();
            return;
          }
          const Le = {
            left: `${ae}px`,
            top: `${oe}px`
          };
          L.value && (Le.maxWidth = `${L.value}px`, Le.minWidth = `${L.value}px`), Object.assign(p.value.style, Le);
        });
      }
    ), C());
  }, W = () => {
    l.value || (A.value = !0, I(), k());
  }, K = () => {
    A.value ? (_e(), g()) : W();
  }, le = (ae) => {
    const oe = ae.keyCode;
    oe === X.enter || oe === X.space ? (K(), ae.preventDefault()) : !A.value && (oe === X.arrowUp || oe === X.arrowDown) && (W(), ae.preventDefault());
  }, te = () => {
    S.value && (S.value = !1, document.removeEventListener("keydown", D));
  };
  function _e() {
    A.value = !1, w(), v(), te(), n({
      id: r.value
    });
  }
  return Ot(() => te()), {
    buttonRef: u,
    handleKeydown: le,
    isOpen: A,
    menuParentRef: E,
    menuRef: p,
    togglePopover: K
  };
}
const Co = {
  name: "ASelectLabelElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Object,
      required: !0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = d(e, "data");
    return {
      currentLabel: _(() => t.value[St])
    };
  },
  render() {
    return c(this.tag, {}, [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        item: this.data,
        label: this.currentLabel,
        inDropdown: !1
      }) : Pt(c("span"), [
        [an, this.currentLabel]
      ])
    ]);
  }
}, ha = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
  <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z"/>
</svg>`, ZE = {
  name: "ASelectValueCloseable",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hideDeleteButton: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, { emit: t }) {
    const n = d(e, "data"), r = _(() => n.value[St]), s = _(() => n.value[Ke]);
    return {
      closeModel: (o) => {
        t("changeModelValue", {
          currentValue: s.value,
          $event: o,
          isSelected: !0
        }), o.stopPropagation(), o.preventDefault();
      },
      currentLabel: r
    };
  },
  render() {
    return c("li", {
      class: "a_select__ul_closeable__item"
    }, [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        item: this.data,
        label: this.currentLabel,
        inDropdown: !1
      }) : c(Ae, {
        alwaysTranslate: this.alwaysTranslate,
        tag: "span",
        text: this.currentLabel,
        extra: this.data.extra
      }),
      !this.hideDeleteButton && c("button", {
        class: "a_btn a_btn_link a_select__ul_closeable__item__btn",
        type: "button",
        tabindex: -1,
        disabled: this.disabled,
        onClick: this.closeModel
      }, [
        c(ut, {
          icon: ha
        })
      ])
    ]);
  }
}, Qe = {
  propsDefault: {
    buttonClass: void 0,
    caretIcon: mi,
    countMultiselect: 4,
    dataExtra: [],
    exceededItemsDeletable: !0,
    inBody: !0,
    isCloseByClick: void 0,
    isDataSimpleArray: !1,
    deselectable: !0,
    isDeselectAll: !1,
    isSelectAll: !1,
    isSelectionCloseable: !0,
    keyDisabled: void 0,
    keyGroup: void 0,
    keyId: "value",
    keyLabel: "label",
    maxCountMultiselect: void 0,
    menuWidthType: "as_button",
    modelValue: void 0,
    placement: "bottom-end",
    popperContainerId: "a_select_container",
    readonlyDefault: "",
    search: !1,
    searchApi: !1,
    searchApiKey: void 0,
    searchOutside: !1,
    searchTimeout: 0,
    slotName: void 0,
    sortOrder: void 0,
    sortOrderGroup: void 0,
    textDeselectAll: "Alle abwählen",
    textSelectAll: "Alle auswählen",
    translateData: !1,
    type: "select"
  }
}, Ade = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Qe.propsDefault = {
      ...Qe.propsDefault,
      ...t
    };
  }
}, cl = {
  name: "ASelect",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonClass: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.buttonClass
    },
    buttonClassDefault: {
      type: [String, Object],
      required: !1,
      default: "a_form_control a_select_toggle"
    },
    caretIcon: {
      type: [String, Object],
      required: !1,
      default: () => Qe.propsDefault.caretIcon
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    class: {
      type: [String, Object],
      required: !1
    },
    countMultiselect: {
      type: Number,
      required: !1,
      default: () => Qe.propsDefault.countMultiselect
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => Qe.propsDefault.dataExtra
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    deselectable: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.deselectable
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    exceededItemsDeletable: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.exceededItemsDeletable
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    exclusiveOptionLabel: {
      type: String,
      required: !1,
      default: "_A_SELECT_EXCLUSIVE_"
    },
    exclusiveOptionValue: {
      type: [String, Number, Boolean],
      required: !1,
      default: "_exclusive_"
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_ui_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inBody: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.inBody
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      required: !1
    },
    isCloseByClick: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.isCloseByClick
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.isDataSimpleArray
    },
    isDeselectAll: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.isDeselectAll
    },
    isExclusiveOptionEnabled: {
      type: Boolean,
      required: !1,
      default: !1,
      validator: (e, t) => (t == null ? void 0 : t.type) !== "multiselect" ? e === !1 : !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSelectAll: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.isSelectAll
    },
    isSelectionCloseable: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.isSelectionCloseable
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.keyDisabled
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: () => Qe.propsDefault.keyGroup
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.keyId
    },
    keyLabel: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.keyLabel
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    maxCountMultiselect: {
      type: Number,
      required: !1,
      default: () => Qe.propsDefault.maxCountMultiselect,
      validator: (e) => e > 0
    },
    menuWidthType: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.menuWidthType,
      validator: (e) => ["as_button", "by_content"].indexOf(e) !== -1
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: () => Qe.propsDefault.modelValue
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholder: {
      type: String,
      required: !1,
      default: void 0
    },
    placement: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.placement,
      validator: (e) => gr.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.popperContainerId
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.readonlyDefault
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    search: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.search
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.searchApi
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.searchApiKey
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.searchOutside
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: () => Qe.propsDefault.searchTimeout
    },
    selectMenuClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.slotName
    },
    sortOrder: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.sortOrder,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.sortOrderGroup,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    textDeselectAll: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.textDeselectAll
    },
    textSelectAll: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.textSelectAll
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.translateData
    },
    type: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.type,
      validator: (e) => ["select", "multiselect"].indexOf(e) !== -1
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "blur",
    "focus",
    "onSearchOutside",
    "open",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Ct(e), {
      componentStyleHide: r
    } = Xt(e), {
      ariaDescribedbyLocal: s,
      changeModel: l,
      clearModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = Yt(e, t), {
      closePopup: S,
      openPopup: b
    } = nf(), {
      dataAll: L,
      dataFromServer: I,
      dataExtraLocal: v,
      dataKeyByKeyIdLocal: R,
      dataLocal: g,
      hasDataExtra: D
    } = Jc(e), {
      loadDataFromServer: w,
      loadDataFromServerForSearchAPI: M,
      loadingDataFromServer: P,
      loadingSearchApi: F,
      onSearchInApi: C,
      searchApiLocal: k,
      updateUrlPropsComputed: W,
      urlPropsComputed: K
    } = Yc(e, {
      changeModel: l,
      dataExtraLocal: v,
      dataFromServer: I
    }), {
      loadingLocal: le
    } = Qc(e, {
      loadingDataFromServer: P
    }), {
      addPopperContainerInBody: te,
      popperContainerIdSelector: _e
    } = Pc(e);
    Zc(t, {
      dataKeyByKeyIdLocal: R,
      dataLocal: g
    });
    const {
      disabledAttribut: ae,
      disabledLocal: oe,
      disabledLocalAttribut: Le,
      isExclusiveOptionSelected: We
    } = Kq(e), {
      exclusiveOption: Se,
      exclusiveDataKeyByKeyIdLocal: se
    } = zq(e), {
      isModelLengthLimitExceeded: Oe,
      isModelValue: ye,
      isMultiselect: je,
      limitExceededModelData: he,
      modelValueLength: ne,
      modelValueMultiselectFiltered: H
    } = Yq(e, {
      dataKeyByKeyIdLocal: R
    }), {
      ariaLabelledby: Q,
      containerId: re,
      idForList: Ie,
      tabindex: Ce
    } = Gq(e, {
      htmlIdLocal: A
    }), {
      dataSort: xe
    } = Xc(e, {
      data: g
    }), {
      dataGrouped: Xe,
      groupsForLever: Fe,
      hasKeyGroup: Pe,
      keyGroupArray: at
    } = Hc(e, {
      data: xe
    }), {
      hasNotElementsExclusiveWithSearch: He,
      hasNotElementsExtraWithSearch: st,
      hasNotElementsWithSearch: Ze,
      idForButtonSearchOutside: At,
      modelSearch: bt,
      modelSearchLowerCase: Wt,
      modelSearchOutside: pn,
      onSearchOutside: cr,
      searching: Zt,
      searchingElements: Wn,
      searchingElementsExclusive: Gn,
      searchingElementsExtra: gn,
      searchingGroups: Or,
      searchingGroupsWithSearchInGroup: fr,
      searchOutsideOrApi: Cr,
      searchOutsideRef: Kn,
      updateModelSearch: jn,
      updateModelSearchOutside: Gt
    } = ef(e, t, {
      data: xe,
      dataExtra: v,
      exclusiveOption: Se,
      groupsForLever: Fe,
      hasKeyGroup: Pe,
      htmlIdLocal: A,
      keyGroupArray: at,
      onSearchInApi: C,
      searchApiLocal: k
    }), {
      buttonRef: Tn,
      handleKeydown: hr,
      isOpen: Ar,
      menuParentRef: ds,
      menuRef: Nr,
      togglePopover: zn
    } = Qq(e, t, {
      closePopup: S,
      htmlIdLocal: A,
      openPopup: b
    }), {
      deleteExceededItems: Aa,
      onChangeModelValue: Rn,
      onDeselectAll: cs,
      onKeydownDeselectAll: fs,
      onKeydownSelectAll: Lt,
      onSelectAll: Yn
    } = Xq(e, {
      changeModel: l,
      dataAll: L,
      dataKeyByKeyIdLocal: R,
      disabledLocal: oe,
      isMultiselect: je,
      togglePopover: zn
    }), {
      hasSelectedTitle: Gr,
      selectedTitle: Ea
    } = Zq(e, {
      dataKeyByKeyIdLocal: R,
      isModelLengthLimitExceeded: Oe,
      isModelValue: ye,
      isMultiselect: je,
      modelValueLength: ne,
      modelValueMultiselectFiltered: H
    }), {
      isDividerSelectDeselectVisible: Kr
    } = jq(e, {
      isMultiselect: je
    }), {
      destroyEventBusClickLabel: pa,
      initEventBusClickLabel: Dr
    } = uf({
      htmlIdLocal: A,
      clickLabel: zn
    });
    return rt(K, W), te({ className: "a_select_container" }), Dr(), w(), M(), Ot(() => {
      pa(), S({
        id: A.value
      });
    }), {
      ariaDescribedbyLocal: s,
      ariaLabelledby: Q,
      attributesToExcludeFromRender: n,
      buttonRef: Tn,
      clearModel: o,
      componentStyleHide: r,
      containerId: re,
      dataExtraLocal: v,
      dataGrouped: Xe,
      dataKeyByKeyIdLocal: R,
      dataLocal: g,
      dataSort: xe,
      deleteExceededItems: Aa,
      disabledAttribut: ae,
      disabledLocal: oe,
      disabledLocalAttribut: Le,
      errorsId: u,
      exclusiveDataKeyByKeyIdLocal: se,
      exclusiveOption: Se,
      groupsForLever: Fe,
      handleKeydown: hr,
      hasDataExtra: D,
      hasKeyGroup: Pe,
      hasNotElementsExclusiveWithSearch: He,
      hasNotElementsExtraWithSearch: st,
      hasNotElementsWithSearch: Ze,
      hasSelectedTitle: Gr,
      helpTextId: h,
      htmlIdLocal: A,
      idForButtonSearchOutside: At,
      idForList: Ie,
      isDividerSelectDeselectVisible: Kr,
      isErrors: E,
      isExclusiveOptionSelected: We,
      isModelLengthLimitExceeded: Oe,
      isModelValue: ye,
      isMultiselect: je,
      isOpen: Ar,
      limitExceededModelData: he,
      loadingLocal: le,
      loadingSearchApi: F,
      menuParentRef: ds,
      menuRef: Nr,
      modelSearch: bt,
      modelSearchLowerCase: Wt,
      modelSearchOutside: pn,
      modelValueLength: ne,
      modelValueMultiselectFiltered: H,
      onBlur: p,
      onChangeModelValue: Rn,
      onDeselectAll: cs,
      onFocus: T,
      onKeydownDeselectAll: fs,
      onKeydownSelectAll: Lt,
      onSearchOutside: cr,
      onSelectAll: Yn,
      popperContainerIdSelector: _e,
      searching: Zt,
      searchingElements: Wn,
      searchingElementsExclusive: Gn,
      searchingElementsExtra: gn,
      searchingGroups: Or,
      searchingGroupsWithSearchInGroup: fr,
      searchOutsideOrApi: Cr,
      searchOutsideRef: Kn,
      selectedTitle: Ea,
      tabindex: Ce,
      togglePopover: zn,
      updateModelSearch: jn,
      updateModelSearchOutside: Gt
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Vn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: void 0,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: this.type
    }, this.isModelValue ? () => [
      this.isMultiselect ? this.modelValueMultiselectFiltered.length ? c("ul", {}, [
        this.modelValueMultiselectFiltered.map((e) => c(Co, {
          key: e[Ke],
          alwaysTranslate: this.alwaysTranslate,
          data: this.dataKeyByKeyIdLocal[e] || {},
          slotName: this.slotName,
          tag: "li"
        }, this.$slots))
      ]) : "" : c(Co, {
        alwaysTranslate: this.alwaysTranslate,
        data: this.dataKeyByKeyIdLocal[this.modelValue] || {},
        slotName: this.slotName
      }, this.$slots)
    ] : "") : c("div", {
      ...this.$attrs,
      class: this.class,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModelValue || this.isOpen
        }]
      }, [
        this.label && c(Mt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          loading: this.loadingLocal,
          required: this.required,
          type: this.type,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            id: this.containerId,
            ref: "ui_select",
            class: "a_select",
            role: "application"
          }, [
            c("div", {
              ref: "buttonRef",
              id: this.htmlIdLocal,
              autocomplete: this.autocomplete,
              class: [this.buttonClassDefault, this.buttonClass, {
                disabled: this.disabled,
                a_select_toggle_closeable: this.isMultiselect && this.isSelectionCloseable && this.isModelValue,
                a_form_control_invalid: this.isErrors
              }],
              "aria-labelledby": this.ariaLabelledby,
              role: "combobox",
              tabindex: this.tabindex,
              "aria-haspopup": "listbox",
              ariaExpanded: this.isOpen,
              ariaRequired: this.required,
              ariaDisabled: this.disabledLocal,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              title: this.hasSelectedTitle ? this.selectedTitle : void 0,
              // TODO: title
              onClick: this.togglePopover,
              onKeydown: this.handleKeydown,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }, [
              this.$slots.fixedPlaceholder ? this.$slots.fixedPlaceholder({
                dataKeyByKeyId: this.dataKeyByKeyIdLocal,
                modelValue: this.modelValue
              }) : this.isModelValue ? this.isMultiselect ? this.isSelectionCloseable ? c("ul", {
                class: "a_select__ul_closeable"
              }, [
                uT(this.modelValueMultiselectFiltered, this.countMultiselect).map((e, t) => c(ZE, {
                  key: t,
                  alwaysTranslate: this.alwaysTranslate,
                  data: this.dataKeyByKeyIdLocal[e] || this.exclusiveDataKeyByKeyIdLocal[e] || {},
                  slotName: this.slotName,
                  disabled: this.disabled,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.isModelLengthLimitExceeded && c(ZE, {
                  key: this.countMultiselect,
                  alwaysTranslate: this.alwaysTranslate,
                  data: this.limitExceededModelData,
                  disabled: this.disabledLocal,
                  hideDeleteButton: !this.exceededItemsDeletable,
                  onChangeModelValue: this.deleteExceededItems
                })
              ]) : c("span", {
                class: "a_select__value__label"
              }, [
                this.isModelLengthLimitExceeded ? c(Ae, {
                  alwaysTranslate: this.alwaysTranslate,
                  text: "_A_SELECT_SELECTED_{{count}}_",
                  extra: {
                    count: this.modelValueLength
                  }
                }) : this.modelValueMultiselectFiltered.map((e, t) => c("span", {
                  key: t
                }, [
                  c("span", null, t !== 0 ? ", " : ""),
                  c(Co, {
                    alwaysTranslate: this.alwaysTranslate,
                    data: this.dataKeyByKeyIdLocal[e] || {},
                    slotName: this.slotName
                  }, this.$slots)
                ]))
              ]) : c(Co, {
                alwaysTranslate: this.alwaysTranslate,
                data: this.dataKeyByKeyIdLocal[this.modelValue] || {},
                class: "a_select__value__label",
                slotName: this.slotName
              }, this.$slots) : c(Ae, {
                tag: "span",
                text: this.placeholder
              }),
              c(ia, {
                to: this.popperContainerIdSelector,
                disabled: !this.inBody
              }, [
                c("div", {
                  ref: "menuParentRef",
                  id: this.idForList,
                  style: this.isOpen ? "" : "display: none;",
                  "aria-hidden": !this.isOpen,
                  role: "application"
                }, [
                  c("div", {
                    ref: "menuRef",
                    class: [
                      "a_select_menu",
                      {
                        a_select_menu_by_content: this.menuWidthType === "by_content"
                      },
                      this.selectMenuClass
                    ],
                    role: "listbox",
                    "aria-labelledby": this.htmlIdLocal,
                    onClick: (e) => e.stopPropagation()
                  }, [
                    this.searchOutsideOrApi && c("div", {
                      class: "a_select__search"
                    }, [
                      c("form", {
                        onSubmit: this.onSearchOutside
                      }, [
                        c("div", {
                          class: "a_select__search__group"
                        }, [
                          c(In, {
                            alwaysTranslate: this.alwaysTranslate,
                            label: "_A_SELECT_SEARCH_",
                            inputClass: "a_select__element_clickable",
                            modelValue: this.modelSearchOutside,
                            modelUndefined: "",
                            "onUpdate:modelValue": this.updateModelSearchOutside
                          }),
                          c(me, {
                            alwaysTranslate: this.alwaysTranslate,
                            ariaDisabled: this.loadingSearchApi,
                            disabled: this.disabledLocal,
                            class: "a_btn a_btn_primary a_select__element_clickable",
                            type: "submit",
                            iconLeft: Ol,
                            loadingAlign: "left"
                          })
                        ])
                      ])
                    ]),
                    this.search && c("div", {
                      class: "a_select__search"
                    }, [
                      c(In, {
                        alwaysTranslate: this.alwaysTranslate,
                        label: "_A_SELECT_SEARCH_",
                        inputClass: "a_select__element_clickable",
                        modelValue: this.modelSearch,
                        modelUndefined: "",
                        "onUpdate:modelValue": this.updateModelSearch
                      })
                    ]),
                    (this.searchOutside || this.search) && c("div", {
                      class: "a_select__divider",
                      ariaHidden: !0
                    }),
                    c("div", {
                      class: "a_select_menu__child"
                    }, [
                      this.isMultiselect && this.isSelectAll && c("div", {
                        class: [
                          "a_select__menu__link a_select__menu__link_selected a_select__element_clickable",
                          {
                            a_select__menu__link_disabled: this.disabledLocal
                          }
                        ],
                        disabled: this.disabledLocalAttribut,
                        role: "option",
                        tabindex: "-1",
                        onClick: this.onSelectAll,
                        onKeydown: this.onKeydownSelectAll
                      }, [
                        c("span", {
                          class: "a_select__menu__link__icon_box"
                        }, [
                          c(ut, {
                            icon: qc
                          })
                        ]),
                        c("span", null, this.textSelectAll)
                      ]),
                      this.isMultiselect && this.isDeselectAll && c("div", {
                        class: [
                          "a_select__menu__link a_select__menu__link_selected a_select__element_clickable",
                          {
                            a_select__menu__link_disabled: this.disabled
                          }
                        ],
                        disabled: this.disabledAttribut,
                        role: "option",
                        tabindex: "-1",
                        onClick: this.onDeselectAll,
                        onKeydown: this.onKeydownDeselectAll
                      }, [
                        c("span", {
                          class: "a_select__menu__link__icon_box"
                        }, [
                          c(ut, {
                            icon: ha
                          })
                        ]),
                        c("span", null, this.textDeselectAll)
                      ]),
                      this.isDividerSelectDeselectVisible && c("div", {
                        class: "a_select__divider",
                        ariaHidden: !0
                      }),
                      this.loadingLocal || this.loadingSearchApi ? c(ul) : "",
                      this.isMultiselect && this.isExclusiveOptionEnabled && c("div", {}, [
                        c(Po, {
                          key: this.exclusiveOptionValue,
                          id: this.htmlIdLocal,
                          alwaysTranslate: !0,
                          dataItem: this.exclusiveOption,
                          disabled: !1,
                          searching: this.searching,
                          itemIndex: 0,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          searchingElements: this.searchingElementsExclusive,
                          searchingGroups: this.searchingGroups,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)
                      ]),
                      this.hasDataExtra && c("div", {}, [
                        ...this.dataExtraLocal.map((e, t) => c(Po, {
                          key: e[Ke],
                          id: this.htmlIdLocal,
                          alwaysTranslate: this.alwaysTranslate,
                          dataItem: e,
                          disabled: this.disabledLocal,
                          searching: this.searching,
                          searchingElements: this.searchingElementsExtra,
                          itemIndex: this.isExclusiveOptionEnabled ? t + 1 : t,
                          keyDisabled: this.keyDisabled,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          slotName: this.slotName,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)),
                        !this.hasNotElementsExtraWithSearch && !this.hasNotElementsExclusiveWithSearch && c("div", {
                          class: "a_select__divider",
                          ariaHidden: !0
                        })
                      ]),
                      c("div", {}, this.hasKeyGroup ? [
                        c($c, {
                          id: `${this.htmlIdLocal}_lev_0`,
                          alwaysTranslate: this.alwaysTranslate,
                          dataGrouped: this.dataGrouped,
                          disabled: this.disabledLocal,
                          groupsForLever: this.groupsForLever,
                          isErrors: this.isErrors,
                          keyDisabled: this.keyDisabled,
                          levelIndex: 0,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          searching: this.searching,
                          searchingElements: this.searchingElements,
                          searchingGroups: this.searchingGroups,
                          searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                          slotName: this.slotName,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)
                      ] : [
                        c("div", {}, [
                          ...this.dataSort.map((e, t) => c(Po, {
                            key: e[Ke],
                            id: this.htmlIdLocal,
                            alwaysTranslate: this.alwaysTranslate,
                            dataItem: e,
                            disabled: this.disabledLocal,
                            searching: this.searching,
                            searchingElements: this.searchingElements,
                            itemIndex: t,
                            keyDisabled: this.keyDisabled,
                            modelSearch: this.modelSearchLowerCase,
                            modelValue: this.modelValue,
                            slotName: this.slotName,
                            type: this.type,
                            onChangeModelValue: this.onChangeModelValue
                          }, this.$slots))
                        ])
                      ]),
                      !this.dataSort.length && !this.hasDataExtra || this.hasNotElementsWithSearch ? c(Ae, {
                        alwaysTranslate: this.alwaysTranslate,
                        class: "a_form__not_elements",
                        text: "_A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_"
                      }) : ""
                    ])
                  ])
                ])
              ]),
              this.hasCaret ? c("span", {
                class: "a_caret"
              }, [
                c(ut, {
                  icon: this.caretIcon
                })
              ]) : ""
            ])
          ])
        ]),
        c(ln, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(sn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function e$({
  isModelFalse: e = _(() => !1),
  isModelTrue: t = _(() => !1)
}) {
  return {
    isChecked: _(() => {
      if (t.value)
        return !0;
      if (e.value)
        return !1;
    })
  };
}
function t$(e, {
  isModelFalse: t = _(() => !1),
  isModelTrue: n = _(() => !1)
}) {
  const r = d(e, "trueLabel"), s = d(e, "falseLabel"), l = d(e, "defaultLabel");
  return {
    labelValueLocal: _(() => n.value ? r.value : t.value ? s.value : l.value)
  };
}
function n$(e) {
  const t = d(e, "modelValue"), n = d(e, "trueValue"), r = d(e, "falseValue"), s = _(() => t.value === n.value || t.value === "true"), l = _(() => t.value === r.value || t.value === "false");
  return {
    isModelDefault: _(() => !s.value && !l.value),
    isModelFalse: l,
    isModelTrue: s
  };
}
function r$(e, {
  changeModel: t = () => {
  },
  isModelFalse: n = _(() => !1),
  isModelTrue: r = _(() => !1)
}) {
  const s = d(e, "defaultValue"), l = d(e, "disabled"), o = d(e, "falseValue"), u = d(e, "isThreeState"), h = d(e, "trueValue"), A = (p) => {
    if (l.value)
      return;
    let T;
    r.value ? T = o.value : u.value && n.value ? T = s.value : T = h.value, t({
      model: T,
      $event: p
    });
  };
  return {
    onInput: A,
    onKeydown: (p) => {
      (p.keyCode === X.enter || p.keyCode === X.space) && (A(p), p.stopPropagation(), p.preventDefault());
    }
  };
}
const Nm = {
  name: "ASwitch",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    defaultLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_DEFAULT_LABEL_"
    },
    defaultValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    falseLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_FALSE_LABEL_"
    },
    falseValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !1
    },
    fullWidth: {
      type: Boolean,
      required: !1
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_switch_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isThreeState: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => gr.indexOf(e) !== -1
    },
    trueLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_TRUE_LABEL_"
    },
    trueValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !0
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = Dl(e), {
      attributesToExcludeFromRender: r
    } = Ct(e), {
      componentStyleHide: s
    } = Xt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      clearModel: u,
      errorsId: h,
      helpTextId: A,
      htmlIdLocal: E,
      isErrors: p,
      isModel: T,
      onBlur: S,
      onFocus: b
    } = Yt(e, t), {
      isModelDefault: L,
      isModelFalse: I,
      isModelTrue: v
    } = n$(e), {
      labelValueLocal: R
    } = t$(e, {
      isModelFalse: I,
      isModelTrue: v
    }), {
      isChecked: g
    } = e$({
      isModelFalse: I,
      isModelTrue: v
    }), {
      onInput: D,
      onKeydown: w
    } = r$(e, {
      changeModel: o,
      isModelFalse: I,
      isModelTrue: v
    });
    return {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: r,
      clearModel: u,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: h,
      helpTextId: A,
      htmlIdLocal: E,
      isChecked: g,
      isErrors: p,
      isModel: T,
      isModelDefault: L,
      labelValueLocal: R,
      onBlur: S,
      onFocus: b,
      onInput: D,
      onKeydown: w
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Vn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.labelValueLocal,
      required: this.required,
      style: this.componentStyleHide,
      type: "switch"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(Mt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          isError: this.isErrors
        }) : "",
        c("div", {
          class: "switch_button__wrapper"
        }, [
          c(me, {
            class: [
              "switch_button",
              {
                switch_button_undefined: this.isModelDefault,
                switch_button_invalid: this.isErrors,
                switch_button_auto: !this.fullWidth
              }
            ],
            classDefault: "",
            isTitleHtml: this.isTitleHtml,
            tag: "div",
            title: this.title,
            titlePlacement: this.titlePlacement,
            type: "text"
          }, {
            default: () => [
              c("input", {
                id: this.htmlIdLocal,
                "aria-describedby": this.ariaDescribedbyLocal,
                ariaInvalid: this.isErrors,
                ariaRequired: this.required,
                checked: this.isChecked,
                class: [
                  "switch_button__input",
                  this.inputClass
                ],
                disabled: this.disabledAttribut,
                type: "checkbox",
                ...this.inputAttributes,
                onClick: this.onInput,
                onKeydown: this.onKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlur
              }),
              c(Ae, {
                alwaysTranslate: this.alwaysTranslate,
                tag: "label",
                class: [
                  "switch_button__label",
                  {
                    switch_button__label_full: this.fullWidth
                  }
                ],
                for: this.htmlIdLocal,
                extra: this.extra,
                html: this.labelValueLocal
              })
            ]
          })
        ]),
        c(ln, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(sn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, a$ = {
  name: "ATemplate",
  inheritAttrs: !1,
  props: {
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    html: {
      type: String,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    options: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = Ct(e), {
      componentStyleHide: n
    } = Xt(e);
    return {
      attributesToExcludeFromRender: t,
      componentStyleHide: n
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      alwaysTranslate: void 0,
      type: void 0,
      modelValue: void 0,
      readonly: void 0,
      readonlyDefault: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      this.$slots[this.slotName] ? c("div", {
        class: "a_template"
      }, this.$slots[this.slotName]({
        options: this.options,
        props: this.$props
      })) : "",
      this.html ? Pt(c("div", {
        class: "a_template"
      }), [
        [an, this.html]
      ]) : ""
    ]) : null;
  }
}, el = typeof Map == "function" ? /* @__PURE__ */ new Map() : /* @__PURE__ */ function() {
  const e = [], t = [];
  return {
    has: function(r) {
      return e.indexOf(r) > -1;
    },
    get: function(r) {
      return t[e.indexOf(r)];
    },
    set: function(r, s) {
      e.indexOf(r) === -1 && (e.push(r), t.push(s));
    },
    delete: function(r) {
      const s = e.indexOf(r);
      s > -1 && (e.splice(s, 1), t.splice(s, 1));
    }
  };
}();
let Dm = function(t) {
  return new Event(t, { bubbles: !0 });
};
try {
  new Event("test");
} catch {
  Dm = function(n) {
    const r = document.createEvent("Event");
    return r.initEvent(n, !0, !1), r;
  };
}
function s$(e) {
  if (!e || !e.nodeName || e.nodeName !== "TEXTAREA" || el.has(e))
    return;
  let t = null, n = null, r = null;
  function s() {
    const p = window.getComputedStyle(e, null);
    p.resize === "vertical" ? e.style.resize = "none" : p.resize === "both" && (e.style.resize = "horizontal"), p.boxSizing === "content-box" ? t = -(parseFloat(p.paddingTop) + parseFloat(p.paddingBottom)) : t = parseFloat(p.borderTopWidth) + parseFloat(p.borderBottomWidth), isNaN(t) && (t = 0), h();
  }
  function l(p) {
    {
      const T = e.style.width;
      e.style.width = "0px", e.offsetWidth, e.style.width = T;
    }
    e.style.overflowY = p;
  }
  function o(p) {
    const T = [];
    for (; p && p.parentNode && p.parentNode instanceof Element; )
      p.parentNode.scrollTop && T.push({
        node: p.parentNode,
        scrollTop: p.parentNode.scrollTop
      }), p = p.parentNode;
    return T;
  }
  function u() {
    if (e.scrollHeight === 0)
      return;
    const p = o(e), T = document.documentElement && document.documentElement.scrollTop;
    e.style.height = "", e.style.height = e.scrollHeight + t + "px", n = e.clientWidth, p.forEach(function(S) {
      S.node.scrollTop = S.scrollTop;
    }), T && (document.documentElement.scrollTop = T);
  }
  function h() {
    u();
    const p = Math.round(parseFloat(e.style.height)), T = window.getComputedStyle(e, null);
    let S = T.boxSizing === "content-box" ? Math.round(parseFloat(T.height)) : e.offsetHeight;
    if (S < p ? T.overflowY === "hidden" && (l("scroll"), u(), S = T.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(e, null).height)) : e.offsetHeight) : T.overflowY !== "hidden" && (l("hidden"), u(), S = T.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(e, null).height)) : e.offsetHeight), r !== S) {
      r = S;
      const b = Dm("autosize:resized");
      try {
        e.dispatchEvent(b);
      } catch {
      }
    }
  }
  const A = function() {
    e.clientWidth !== n && h();
  }, E = (function(p) {
    window.removeEventListener("resize", A, !1), e.removeEventListener("input", h, !1), e.removeEventListener("keyup", h, !1), e.removeEventListener("autosize:destroy", E, !1), e.removeEventListener("autosize:update", h, !1), Object.keys(p).forEach(function(T) {
      e.style[T] = p[T];
    }), el.delete(e);
  }).bind(e, {
    height: e.style.height,
    resize: e.style.resize,
    overflowY: e.style.overflowY,
    overflowX: e.style.overflowX,
    wordWrap: e.style.wordWrap
  });
  e.addEventListener("autosize:destroy", E, !1), "onpropertychange" in e && "oninput" in e && e.addEventListener("keyup", h, !1), window.addEventListener("resize", A, !1), e.addEventListener("input", h, !1), e.addEventListener("autosize:update", h, !1), e.style.overflowX = "hidden", e.style.wordWrap = "break-word", el.set(e, {
    destroy: E,
    update: h
  }), s();
}
function i$(e) {
  const t = el.get(e);
  t && t.destroy();
}
function l$(e) {
  const t = el.get(e);
  t && t.update();
}
let gs;
typeof window > "u" || typeof window.getComputedStyle != "function" ? (gs = function(t) {
  return t;
}, gs.destroy = function(e) {
  return e;
}, gs.update = function(e) {
  return e;
}) : (gs = function(t, n) {
  return t && Array.prototype.forEach.call(t.length ? t : [t], function(r) {
    return s$(r);
  }), t;
}, gs.destroy = function(e) {
  return e && Array.prototype.forEach.call(e.length ? e : [e], i$), e;
}, gs.update = function(e) {
  return e && Array.prototype.forEach.call(e.length ? e : [e], l$), e;
});
const Ad = gs;
function o$(e) {
  const t = d(e, "isScalable"), n = B(!1), r = B(void 0);
  return {
    destroyAutosize: () => {
      n.value && (Ad.destroy(r.value), n.value = !1);
    },
    initAutosize: () => {
      t.value && (Ad(r.value), n.value = !0);
    },
    textareaRef: r,
    updateAutosize: () => {
      t.value && n.value && setTimeout(() => {
        Ad.update(r.value);
      });
    }
  };
}
function u$(e, {
  changeModel: t = () => {
  },
  updateAutosize: n = () => {
  }
}) {
  const r = d(e, "disabled"), s = d(e, "modelUndefined");
  return {
    clearModel: () => {
      r.value || (t({
        model: s.value
      }), n());
    },
    onInput: (u) => {
      if (r.value)
        return;
      const h = u.target.value;
      t({
        model: h
      });
    }
  };
}
function _$(e) {
  const t = d(e, "resize"), n = {
    v: "a_textarea_resize_v",
    h: "a_textarea_resize_h",
    none: "a_textarea_resize_none",
    auto: ""
  };
  return {
    resizeClass: _(() => n[t.value])
  };
}
function d$(e) {
  const t = d(e, "isScalable"), n = d(e, "rows");
  return {
    rowsLocal: _(() => {
      if (n.value)
        return n.value;
      if (t.value)
        return 1;
    })
  };
}
const c$ = {
  name: "ATextarea",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_textarea_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isScalable: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    maxlength: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    resize: {
      type: String,
      required: !1,
      default: "v",
      validator: (e) => ["v", "h", "none", "auto"].indexOf(e) !== -1
    },
    rows: {
      type: [String, Number],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = Dl(e), {
      attributesToExcludeFromRender: r
    } = Ct(e), {
      componentStyleHide: s
    } = Xt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: S
    } = Yt(e, t), {
      isClearButtonLocal: b
    } = qu(e, {
      isModel: p
    }), {
      resizeClass: L
    } = _$(e), {
      destroyAutosize: I,
      initAutosize: v,
      textareaRef: R,
      updateAutosize: g
    } = o$(e), {
      clearModel: D,
      onInput: w
    } = u$(e, {
      changeModel: o,
      updateAutosize: g
    }), {
      rowsLocal: M
    } = d$(e), {
      placeholderAttributes: P
    } = yl(e);
    return Vr(() => {
      v();
    }), Ot(() => {
      I();
    }), {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: r,
      changeModel: o,
      clearModel: D,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isClearButtonLocal: b,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: S,
      onInput: w,
      placeholderAttributes: P,
      resizeClass: L,
      rowsLocal: M,
      textareaRef: R
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Vn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.modelValue,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "textarea",
      valueClass: "a_code_content",
      valueTag: "div"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(Mt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required
        }) : "",
        c("div", {
          class: [
            "a_form_element a_form_element_textarea",
            {
              a_form_element_textarea_scalable: this.isScalable
            }
          ]
        }, [
          c("textarea", {
            ref: "textareaRef",
            id: this.htmlIdLocal,
            autocomplete: this.autocomplete,
            value: this.modelValue,
            rows: this.rowsLocal,
            class: [
              "a_form_control a_textarea",
              this.inputClass,
              {
                a_textarea_scalable: this.isScalable,
                a_form_element_with_one_btn: this.isClearButton,
                a_form_control_invalid: this.isErrors
              },
              this.resizeClass
            ],
            disabled: this.disabledAttribut,
            ariaRequired: this.required,
            ariaInvalid: this.isErrors,
            "aria-describedby": this.ariaDescribedbyLocal,
            maxlength: this.maxlength,
            ...this.placeholderAttributes,
            ...this.inputAttributes,
            onInput: this.onInput,
            onFocus: this.onFocus,
            onBlur: this.onBlur
          }),
          this.isClearButtonLocal ? c("div", {
            class: "a_form_control__actions"
          }, [
            c(xu, {
              alwaysTranslate: this.alwaysTranslate,
              disabled: this.disabled,
              class: this.clearButtonClass,
              onClear: this.clearModel
            })
          ]) : ""
        ]),
        c(ln, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(sn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, Bu = {
  checkbox: _1,
  color: In,
  currency: oq,
  date: ni,
  dateRange: g1,
  datetime: ni,
  email: In,
  file: fq,
  integer: Ba,
  integerNonNegative: Ba,
  integerNonNegativeRange: Oo,
  integerPositive: Ba,
  integerPositiveRange: Oo,
  integerRange: Oo,
  json: Bq,
  multiselect: cl,
  natural: In,
  number: Ba,
  numberRange: Oo,
  oneCheckbox: Du,
  password: In,
  radio: Cm,
  routerLinkConfig: Wq,
  select: cl,
  switch: Nm,
  template: a$,
  text: In,
  textarea: c$
}, Bm = {
  name: "AFieldset",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    children: {
      type: Array,
      required: !1,
      default: () => []
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_12"
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12"
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_fieldset_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_"
      })
    }
  },
  emits: [
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Ct(e), r = () => ({
      ...Bu,
      group: xm,
      fieldset: $r("AFieldset"),
      ...vr.components,
      ...vr.containerComponents
    }), {
      componentStyleHide: s
    } = Xt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E
    } = Yt(e, t), {
      textAfterLabel: p
    } = Uc(e), {
      onUpdateModelLocal: T
    } = Q1(e, t, {
      changeModel: o
    }), S = ({ item: w, dataKeyByKeyId: M }) => {
      t.emit("updateData", { item: w, dataKeyByKeyId: M });
    }, {
      groupId: b
    } = kc(e, {
      htmlIdLocal: A
    }), {
      iconCollapse: L,
      initIsCollapsedLocal: I,
      isCollapsedLocal: v,
      titleCollapse: R,
      toggleCollapse: g
    } = Wc(e, t), {
      classColumnsReadonly: D
    } = eq(e);
    return I(), {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: n,
      classColumnsReadonly: D,
      componentStyleHide: s,
      componentTypesMapping: r,
      errorsId: u,
      groupId: b,
      helpTextId: h,
      htmlIdLocal: A,
      iconCollapse: L,
      isCollapsedLocal: v,
      isErrors: E,
      onUpdateDataLocal: S,
      onUpdateModelLocal: T,
      textAfterLabel: p,
      titleCollapse: R,
      toggleCollapse: g
    };
  },
  render() {
    if (!this.isRender)
      return null;
    const e = [
      this.children.map((t, n) => {
        if (t.isRender !== !1) {
          const r = Ma.value[t.type];
          let s;
          ie(t.classColumn) ? s = this.classColumnDefault : t.classColumn && (s = t.classColumn);
          let l;
          t.isHide && (l = "display: none;");
          const o = this.componentTypesMapping()[t.type];
          return c("div", {
            class: s,
            style: l
          }, [
            c(o, {
              key: n,
              alwaysTranslate: this.alwaysTranslate,
              modelValue: r ? this.modelValue : fe(this.modelValue, t.id),
              modelDependencies: r ? this.modelValue : void 0,
              errors: fe(this.errorsAll, t.id),
              errorsAll: r ? this.errorsAll : void 0,
              idPrefix: this.idPrefix,
              "onUpdate:modelValue": (u) => this.onUpdateModelLocal({ item: t, model: u }),
              onUpdateData: ({ dataKeyByKeyId: u }) => this.onUpdateDataLocal({ item: t, dataKeyByKeyId: u }),
              ...t,
              readonly: this.readonly || t.readonly,
              readonlyDefault: "readonlyDefault" in t ? t.readonlyDefault : this.readonlyDefault,
              disabled: this.disabled || t.disabled,
              classColumn: void 0,
              slotAppend: void 0,
              ...this.attributesToExcludeFromRender
            }, this.$slots),
            t.slotAppend && this.$slots[t.slotAppend] ? this.$slots[t.slotAppend]({ item: t, itemIndex: n }) : ""
          ]);
        }
      }),
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.htmlIdLocal,
        props: this.$props
      }) : ""
    ];
    return this.readonly ? c(Vn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      collapsible: this.collapsible,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      isCollapsed: this.isCollapsed,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      required: this.required,
      style: this.componentStyleHide,
      type: "fieldset",
      valueParentClass: this.classColumnsReadonly
    }, () => e) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__parent"
      }, [
        c("fieldset", {
          id: this.htmlIdLocal,
          tabindex: -1,
          class: ["a_fieldset", this.classFieldset, {
            a_fieldset_invalid: this.isErrors,
            a_fieldset_no_border: !this.hasBorder,
            a_fieldset_collapsed: this.isCollapsedLocal
          }],
          "aria-describedby": this.ariaDescribedbyLocal
        }, [
          this.label || this.labelScreenReader ? c(me, {
            type: "text",
            alwaysTranslate: this.alwaysTranslate,
            tag: "legend",
            class: [
              "a_legend",
              {
                a_legend_invalid: this.isErrors
              },
              this.labelClass
            ],
            extra: this.extra,
            html: this.label,
            textScreenReader: this.labelScreenReader,
            textAfter: this.textAfterLabel
          }) : "",
          this.collapsible ? c(me, {
            "aria-controls": this.groupId,
            "aria-expanded": !this.isCollapsedLocal,
            alwaysTranslate: this.alwaysTranslate,
            class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
            iconLeft: this.iconCollapse,
            title: this.titleCollapse,
            textScreenReader: this.titleCollapse,
            type: "button",
            onClick: this.toggleCollapse
          }) : "",
          c("div", {
            id: this.groupId,
            class: [
              this.classColumns,
              "a_fieldset__content"
            ]
          }, e)
        ]),
        c(ln, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(sn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]);
  }
}, f$ = ["datepickerRange", "dateRange"], wm = {};
z(f$, (e) => {
  wm[e] = !0;
});
const Pm = wm;
function h$(e) {
  const t = d(e, "children");
  return {
    specificAttributes: _(() => {
      const r = {};
      return z(t.value, (s) => {
        const l = gm[s.type], o = Pm[s.type];
        l && we(s.inputWidth) && (r[s.id] = {
          inputWidth: "auto"
        }), o && (r[s.id] = {
          inputWidth: "inherit",
          inputAttributes: {
            style: "min-width: 181px"
          }
        });
      }), r;
    })
  };
}
const vr = {
  components: {},
  containerComponents: {}
}, Ede = {
  install: (e, {
    components: t = {},
    containerComponents: n = {}
  } = {}) => {
    vr.components = t, vr.containerComponents = n;
  }
}, xm = {
  name: "AGroup",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    children: {
      type: Array,
      required: !1,
      default: () => []
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_6 a_column_12_touch"
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12 a_columns_gap_2"
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_group_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: [String, Number, Array, Object, Boolean],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Ct(e), r = () => ({
      ...Bu,
      ...vr.components,
      ...vr.containerComponents
    }), {
      componentStyleHide: s
    } = Xt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      clearModel: u,
      errorsId: h,
      helpTextId: A,
      htmlIdLocal: E,
      isErrors: p
    } = Yt(e, t), T = d(e, "modelValue"), S = ({ item: D, model: w }) => {
      const M = D.id, P = pe(T.value);
      mc(P, M, pe(w)), t.emit("update:modelValue", P);
    }, b = ({ item: D, dataKeyByKeyId: w }) => {
      t.emit("updateData", { item: D, dataKeyByKeyId: w });
    }, L = d(e, "children"), I = d(e, "idPrefix"), v = _(() => L.value[0] || {}), R = _(() => _l({
      id: v.value.id,
      idPrefix: v.value.idPrefix || I.value,
      htmlId: v.value.htmlId
    })), {
      specificAttributes: g
    } = h$(e);
    return {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: n,
      changeModel: o,
      clearModel: u,
      componentStyleHide: s,
      componentTypesMapping: r,
      errorsId: h,
      firstChild: v,
      helpTextId: A,
      htmlIdFirstChild: R,
      htmlIdLocal: E,
      isErrors: p,
      onUpdateDataLocal: b,
      onUpdateModelLocal: S,
      specificAttributes: g
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        id: this.htmlIdLocal,
        role: "group",
        tabindex: -1,
        class: [this.inputClass, {
          a_group_invalid: this.isErrors
        }],
        "aria-describedby": this.ariaDescribedbyLocal
      }, [
        c("div", {
          class: this.classColumns
        }, [
          this.firstChild.label && c(Mt, {
            id: this.htmlIdFirstChild,
            alwaysTranslate: this.alwaysTranslate,
            extra: this.extra,
            isError: !!this.errorsAll[this.firstChild.id],
            isLabelFloat: !1,
            label: this.label || this.firstChild.label,
            labelClass: this.labelClass || this.firstChild.labelClass || this.classColumnDefault,
            labelScreenReader: this.labelScreenReader || this.firstChild.labelScreenReader,
            required: this.required || this.firstChild.required,
            type: this.firstChild.type
          }),
          this.children.map((e, t) => {
            const n = Ma.value[e.type];
            let r;
            ie(e.classColumn) ? r = this.classColumnDefault : e.classColumn && (r = e.classColumn);
            let s;
            e.isHide && (s = "display: none;");
            const l = this.componentTypesMapping()[e.type];
            return c("div", {
              class: r,
              style: s
            }, [
              c(l, {
                key: t,
                alwaysTranslate: this.alwaysTranslate,
                modelValue: n ? this.modelValue : fe(this.modelValue, e.id),
                modelDependencies: n ? this.modelValue : void 0,
                errors: this.errorsAll[e.id],
                errorsAll: n ? this.errorsAll : void 0,
                idPrefix: this.idPrefix,
                "onUpdate:modelValue": (o) => this.onUpdateModelLocal({ item: e, model: o }),
                onUpdateData: ({ dataKeyByKeyId: o }) => this.onUpdateDataLocal({ item: e, dataKeyByKeyId: o }),
                ...e,
                disabled: this.disabled || e.disabled,
                ...this.specificAttributes[e.id],
                label: t === 0 ? void 0 : e.label,
                slotAppend: void 0,
                classColumn: void 0,
                ...this.attributesToExcludeFromRender
              }, this.$slots),
              e.slotAppend && this.$slots[e.slotAppend] ? this.$slots[e.slotAppend]({ item: e, itemIndex: t }) : ""
            ]);
          })
        ])
      ]),
      c(ln, {
        id: this.helpTextId,
        alwaysTranslate: this.alwaysTranslate,
        html: this.helpText,
        extra: this.extra
      }),
      this.isErrors && c(sn, {
        class: "a_px_3",
        id: this.errorsId,
        alwaysTranslate: this.alwaysTranslate,
        errors: this.errors
      })
    ]) : null;
  }
}, Fm = {
  fieldset: Bm,
  group: xm,
  ...vr.containerComponents
};
function A$() {
  return {
    componentTypesMapping: () => ({
      ...Bu,
      ...Fm,
      ...vr.components,
      ...vr.containerComponents
    })
  };
}
function E$(e) {
  const t = d(e, "filter");
  return {
    isContainer: _(() => !!Ma.value[t.value.type])
  };
}
function p$(e) {
  const t = d(e, "filter");
  return {
    filterSpecificAttributes: _(() => {
      const r = {}, s = gm[t.value.type], l = Pm[t.value.type];
      return s && we(t.value.inputWidth) && (r.inputWidth = "auto"), l && (r.inputWidth = "inherit", r.inputAttributes = {
        style: "min-width: 181px"
      }), r;
    })
  };
}
function T$(e) {
  const t = d(e, "id");
  return {
    idPrefix: _(() => `${t.value}_`)
  };
}
function m$(e, {
  isContainer: t = _(() => !1)
}) {
  const n = d(e, "filter"), r = d(e, "onUpdateModelFilters"), s = d(e, "unappliedModel");
  return {
    onUpdateModelFiltersLocal: (o) => {
      if (t.value)
        r.value({ model: o });
      else {
        const u = pe(s.value);
        u[n.value.id] = pe(o), r.value({ model: u });
      }
    }
  };
}
function S$(e) {
  const t = d(e, "filter"), n = d(e, "updateDataKeyByIdFromFilter"), r = ["select", "multiselect", "radio", "checkbox", "group", "fieldset"], s = ({ dataKeyByKeyId: o, item: u }) => {
    let h = t.value.id;
    u && (h = u.id), n.value({
      filterId: h,
      dataKeyByKeyId: o
    });
  };
  return {
    emitForComponentsWithData: _(() => {
      const o = {};
      return r.indexOf(t.value.type) !== -1 && (o.onUpdateData = s), o;
    })
  };
}
const b$ = {
  name: "AFiltersHorizontalFilterUi",
  props: {
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filter: {
      type: Object,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    isLabelVisible: {
      type: Boolean,
      required: !0
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    unappliedModel: {
      type: Object,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = Ct(e), {
      isContainer: n
    } = E$(e), {
      onUpdateModelFiltersLocal: r
    } = m$(e, {
      isContainer: n
    }), {
      emitForComponentsWithData: s
    } = S$(e), {
      idPrefix: l
    } = T$(e), {
      componentTypesMapping: o
    } = A$(), {
      filterSpecificAttributes: u
    } = p$(e);
    return {
      attributesToExcludeFromRender: t,
      componentTypesMapping: o,
      emitForComponentsWithData: s,
      filterSpecificAttributes: u,
      idPrefix: l,
      isContainer: n,
      onUpdateModelFiltersLocal: r
    };
  },
  render() {
    const e = this.componentTypesMapping()[this.filter.type];
    return c(e, {
      idPrefix: this.idPrefix,
      modelValue: this.isContainer ? this.unappliedModel : this.unappliedModel[this.filter.id],
      "onUpdate:modelValue": this.onUpdateModelFiltersLocal,
      excludeRenderAttributes: this.excludeRenderAttributes,
      ...this.filter,
      ...this.filterSpecificAttributes,
      label: this.isLabelVisible ? this.filter.label : void 0,
      ...this.emitForComponentsWithData,
      ...this.attributesToExcludeFromRender
    }, this.$slots);
  }
};
function L$(e) {
  const t = d(e, "id");
  return {
    idFilterRight: _(() => `${t.value}_filter_right`)
  };
}
const I$ = {
  name: "AFilersRight",
  props: {
    appliedModel: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filters: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch"
  ],
  setup(e) {
    const {
      idFilterRight: t
    } = L$(e);
    return {
      idFilterRight: t
    };
  },
  render() {
    return c("div", {
      id: this.idFilterRight,
      class: "a_filters_right"
    }, [
      c("form", {}, [
        this.filters.map((e) => c(b$, {
          id: this.id,
          class: "a_filters_right__filter_ui",
          excludeRenderAttributes: this.excludeRenderAttributes,
          filter: e,
          isLabelVisible: !0,
          onUpdateModelFilters: this.onUpdateModelFilters,
          unappliedModel: this.appliedModel,
          updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter
        }, this.$slots))
      ])
    ]);
  }
};
function v$(e) {
  const t = d(e, "closeFilterValue"), n = d(e, "disabled"), r = d(e, "filter");
  return {
    closeCurrentFilterValue: ({ modelValue: l }) => {
      n.value || t.value({
        filter: r.value,
        modelArray: l.modelArray,
        keyId: l.keyId
      });
    }
  };
}
function y$(e, { emit: t }, {
  modelValuesForCurrentFilter: n = _(() => [])
}) {
  const r = d(e, "filter"), s = _(() => n.value.length > 0);
  return {
    isLeastOneFilterVisible: s,
    updateVisibleChildFilters: ({ destroy: o } = {}) => {
      t("updateVisibleChildFilters", {
        id: r.value.id,
        isVisible: o ? !1 : s.value
      });
    }
  };
}
function g$(e) {
  const t = d(e, "filter"), n = d(e, "id"), r = _(() => `eventATableFilterTopOnOpen_${n.value}`);
  return {
    goToFilter: ({ modelValue: l } = {}) => {
      let o = _l({
        id: t.value.id,
        idPrefix: `${n.value}_filter_top`,
        htmlId: t.value.htmlId
      });
      l.idSuffix && (o += l.idSuffix), t.value.main || Rt.$emit(r.value, o);
    }
  };
}
function R$({ filter: e, currentModel: t }) {
  return !(!e || e.hideFilterCenter || ie(t) || t === "" || Te(t) && !t.length);
}
function O$(e) {
  const t = d(e, "filter"), n = d(e, "model");
  return {
    hasCurrentFilter: _(() => R$({
      filter: t.value,
      currentModel: n.value
    }))
  };
}
function C$(e, { emit: t }, {
  hasCurrentFilter: n = _(() => !1)
}) {
  const r = d(e, "dataKeyByKeyIdPerFilter"), s = d(e, "filter"), l = _(() => n.value && Z1.value[s.value.type] ? hn(r.value[s.value.id]) : !1);
  return {
    isFilterLoading: l,
    updateLoadingChildFilters: (u, h) => {
      u !== h && t("updateLoadingChildFilters", {
        id: s.value.id,
        isLoading: l.value
      });
    }
  };
}
function N$(e, {
  hasCurrentFilter: t = _(() => !1)
}) {
  const n = d(e, "filter"), r = _(() => t.value ? n.value.label : ""), s = _(() => {
    if (t.value)
      return n.value.labelScreenReader;
  }), l = _(() => s.value || r.value);
  return {
    filterLabel: r,
    filterLabelForTitle: l
  };
}
function D$(e, {
  filterLabel: t = _(() => ""),
  filterLabelForTitle: n = _(() => ""),
  hasCurrentFilter: r = _(() => !1)
}) {
  const s = d(e, "dataKeyByKeyIdPerFilter"), l = d(e, "filter"), o = d(e, "model"), {
    filterBoolean: u,
    filterDate: h
  } = Hn(), A = _(() => {
    if (l.value)
      return s.value[l.value.id];
  }), E = _(() => {
    var S;
    return (S = o.value) != null && S.length ? wt(o.value, (b) => A.value && A.value[b]) : [];
  }), p = ({ label: S, suffixTranslated: b }) => {
    const L = Bt({
      placeholder: S
    });
    return b ? `${L} ${b}` : L;
  };
  return {
    modelValuesForCurrentFilter: _(() => {
      var S, b, L, I, v, R, g, D, w;
      if (!r.value)
        return [];
      if (l.value.type === "switch" || l.value.type === "oneCheckbox")
        return [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: u(o.value)
        }];
      if (l.value.type === "date")
        return [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: h(o.value)
        }];
      if (l.value.type === "select" || l.value.type === "radio") {
        const M = fe(A.value, `${o.value}.${St}`);
        return M ? [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: M
        }] : [];
      }
      if (rf.value[l.value.type] || l.value.type === "radio" && l.value.isModelArray) {
        if (E.value.length) {
          if (E.value.length === 1) {
            const M = (S = A.value) == null ? void 0 : S[E.value[0]];
            return [{
              filterLabelTranslated: p({ label: t.value }),
              filterLabelForTitleTranslated: p({ label: n.value }),
              label: M == null ? void 0 : M[St],
              item: M,
              modelArray: E.value
            }];
          }
          return [{
            filterLabelTranslated: p({ label: t.value }),
            filterLabelForTitleTranslated: p({ label: n.value }),
            label: Bt({
              placeholder: "_A_FILTERS_SELECTED_{{count}}_",
              extra: {
                count: E.value.length,
                modelArray: E.value
              }
            }),
            modelArray: E.value,
            extra: {
              count: E.value.length,
              modelArray: E.value
            }
          }];
        }
        return [];
      }
      if (l.value.type === "dateRange") {
        const M = l.value.keyFrom || "from", P = l.value.keyUntil || "until", F = [];
        if (!ie((b = o.value) == null ? void 0 : b[M]) && ((L = o.value) == null ? void 0 : L[M]) !== "") {
          const C = Bt({
            placeholder: l.value.labelFrom || "_A_DATEPICKER_RANGE_FROM_"
          });
          F.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: C
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: C
            }),
            label: h(o.value[M]),
            idSuffix: "_from",
            keyId: M
          });
        }
        if (!ie((I = o.value) == null ? void 0 : I[P]) && ((v = o.value) == null ? void 0 : v[P]) !== "") {
          const C = Bt({
            placeholder: l.value.labelUntil || "_A_DATEPICKER_RANGE_UNTIL_"
          });
          F.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: C
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: C
            }),
            label: h(o.value[P]),
            idSuffix: "_until",
            keyId: P
          });
        }
        return F;
      }
      if (af.indexOf(l.value.type) !== -1) {
        const M = l.value.keyMax || "max", P = l.value.keyMin || "min", F = [];
        if (!ie((R = o.value) == null ? void 0 : R[P]) && ((g = o.value) == null ? void 0 : g[P]) !== "") {
          const C = Bt({
            placeholder: l.value.labelMin || "_A_INPUT_NUMBER_RANGE_LABEL_MIN_"
          });
          F.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: C
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: C
            }),
            label: o.value[P],
            idSuffix: "_min",
            keyId: P
          });
        }
        if (!ie((D = o.value) == null ? void 0 : D[M]) && ((w = o.value) == null ? void 0 : w[M]) !== "") {
          const C = Bt({
            placeholder: l.value.labelMax || "_A_INPUT_NUMBER_RANGE_LABEL_MAX_"
          });
          F.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: C
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: C
            }),
            label: o.value[M],
            idSuffix: "_max",
            keyId: M
          });
        }
        return F;
      }
      return [{
        label: o.value,
        filterLabelTranslated: p({ label: t.value }),
        filterLabelForTitleTranslated: p({ label: n.value })
      }];
    })
  };
}
const B$ = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pin-fill" viewBox="0 0 16 16">
  <path d="M4.146.146A.5.5 0 0 1 4.5 0h7a.5.5 0 0 1 .5.5c0 .68-.342 1.174-.646 1.479-.126.125-.25.224-.354.298v4.431l.078.048c.203.127.476.314.751.555C12.36 7.775 13 8.527 13 9.5a.5.5 0 0 1-.5.5h-4v4.5c0 .276-.224 1.5-.5 1.5s-.5-1.224-.5-1.5V10h-4a.5.5 0 0 1-.5-.5c0-.973.64-1.725 1.17-2.189A6 6 0 0 1 5 6.708V2.277a3 3 0 0 1-.354-.298C4.342 1.674 4 1.179 4 .5a.5.5 0 0 1 .146-.354"/>
</svg>`, w$ = {
  name: "AFilterCenterItem",
  props: {
    closeFilterValue: {
      type: Function,
      required: !0
    },
    dataKeyByKeyIdPerFilter: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    filter: {
      type: Object,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    model: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "updateVisibleChildFilters",
    "updateLoadingChildFilters"
  ],
  setup(e, t) {
    const {
      hasCurrentFilter: n
    } = O$(e), {
      isFilterLoading: r,
      updateLoadingChildFilters: s
    } = C$(e, t, {
      hasCurrentFilter: n
    }), {
      filterLabel: l,
      filterLabelForTitle: o
    } = N$(e, {
      hasCurrentFilter: n
    }), {
      modelValuesForCurrentFilter: u
    } = D$(e, {
      filterLabel: l,
      filterLabelForTitle: o,
      hasCurrentFilter: n
    }), {
      isLeastOneFilterVisible: h,
      updateVisibleChildFilters: A
    } = y$(e, t, {
      modelValuesForCurrentFilter: u
    }), {
      goToFilter: E
    } = g$(e), {
      closeCurrentFilterValue: p
    } = v$(e);
    return rt(h, () => {
      A();
    }, {
      immediate: !0
    }), rt(r, (T, S) => {
      s(T, S);
    }, {
      immediate: !0
    }), Ot(() => {
      A({
        destroy: !0
      });
    }), {
      closeCurrentFilterValue: p,
      filterLabel: l,
      goToFilter: E,
      hasCurrentFilter: n,
      isLeastOneFilterVisible: h,
      modelValuesForCurrentFilter: u
    };
  },
  render() {
    return this.hasCurrentFilter && [
      this.modelValuesForCurrentFilter.map((e) => c("div", {
        role: "group",
        class: "a_filters_center__item a_btn_group a_btn_group_small"
      }, [
        this.filter.hasNotClose && c(me, {
          class: "a_btn a_btn_secondary",
          ariaHidden: !0,
          tabindex: -1,
          iconLeft: B$,
          type: "text"
        }),
        c(me, {
          class: "a_btn a_btn_secondary",
          title: "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_",
          textScreenReader: "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_",
          extra: {
            filterLabel: e.filterLabelForTitleTranslated,
            filterValue: e.label
          },
          type: "button",
          onClick: () => this.goToFilter({ modelValue: e })
        }, () => [
          e.filterLabelTranslated ? c("strong", {
            class: "a_filters_center__item__label",
            ariaHidden: !0
          }, [
            c(Ae, {
              tag: "span",
              html: e.filterLabelTranslated,
              textAfter: ":"
            })
          ]) : "",
          this.filter.slotName && this.$slots[this.filter.slotName] ? this.$slots[this.filter.slotName]({
            item: e.item,
            label: e.label,
            extra: e.extra,
            inFilterCenter: !0
          }) : c("span", {
            class: "a_filters_center__item__value"
          }, e.label)
        ]),
        this.filter.hasNotClose ? "" : c(me, {
          class: "a_btn a_btn_secondary",
          disabled: this.disabled,
          iconLeft: ha,
          title: "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_",
          textScreenReader: "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_",
          extra: {
            filterLabel: e.filterLabelForTitleTranslated,
            filterValue: e.label
          },
          type: "button",
          onClick: () => this.closeCurrentFilterValue({ modelValue: e })
        })
      ]))
    ];
  }
};
function P$() {
  const e = B({}), t = ({ id: r, isLoading: s }) => {
    e.value[r] = s;
  };
  return {
    isLeastOneChildFilterLoading: _(() => {
      let r = !1;
      return z(e.value, (s) => {
        if (s)
          return r = !0, !1;
      }), r;
    }),
    updateLoadingChildFilters: t
  };
}
function x$(e) {
  const t = d(e, "filtersGroup"), n = B({}), r = ({ id: u, isVisible: h }) => {
    n.value[u] = h;
  }, s = _(() => {
    let u = !1;
    return z(n.value, (h) => {
      if (h)
        return u = !0, !1;
    }), u;
  }), l = _(() => !!(t.value.alwaysVisible.length || t.value.filters.length)), o = _(() => s.value ? void 0 : "display: none;");
  return {
    hasFilters: l,
    styleHide: o,
    updateVisibleChildFilters: r
  };
}
const F$ = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-clockwise" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2z"/>
  <path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466"/>
</svg>`, M$ = {
  name: "AFilterCenter",
  props: {
    appliedModel: {
      type: Object,
      required: !0
    },
    closeAllFilters: {
      type: Function,
      required: !0
    },
    closeFilterValue: {
      type: Function,
      required: !0
    },
    dataKeyByKeyIdPerFilter: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    filtersGroup: {
      type: Object,
      required: !0,
      default: () => ({
        alwaysVisible: [],
        filters: []
      })
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    filtersVisibleAll: {
      type: Array,
      required: !0
    },
    id: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      hasFilters: t,
      styleHide: n,
      updateVisibleChildFilters: r
    } = x$(e), {
      isLeastOneChildFilterLoading: s,
      updateLoadingChildFilters: l
    } = P$();
    return {
      hasFilters: t,
      isLeastOneChildFilterLoading: s,
      styleHide: n,
      updateLoadingChildFilters: l,
      updateVisibleChildFilters: r
    };
  },
  render() {
    return this.hasFilters ? c("div", {
      class: "a_filters_center"
    }, [
      c("div", {
        class: "a_filters_center__item"
      }, [
        this.$slots.filtersHorizontal ? this.$slots.filtersHorizontal() : ""
      ]),
      this.filtersVisibleAll.map((e) => c(w$, {
        key: e.id,
        id: this.id,
        disabled: this.disabled,
        filter: e,
        closeFilterValue: this.closeFilterValue,
        dataKeyByKeyIdPerFilter: this.dataKeyByKeyIdPerFilter,
        model: this.appliedModel[e.id],
        onUpdateVisibleChildFilters: this.updateVisibleChildFilters,
        onUpdateLoadingChildFilters: this.updateLoadingChildFilters
      }, this.$slots)),
      this.isLeastOneChildFilterLoading ? c("div", {
        style: this.styleHide,
        class: "a_filters_center__item"
      }, [
        c(fl, {
          class: "a_spinner_small"
        })
      ]) : "",
      c("div", {
        class: "a_filters_center__item",
        style: this.styleHide
      }, [
        c(ft, {
          class: "a_btn a_btn_link a_btn_small",
          iconLeft: F$,
          text: "_A_FILTERS_DESELECT_ALL_",
          onClick: this.closeAllFilters
        })
      ])
    ]) : null;
  }
};
function q$(e, {
  model: t = B({})
}) {
  const n = d(e, "filtersSaved"), r = _(() => {
    const u = {};
    return z(n.value, (h) => {
      u[h.label] = !0;
    }), u;
  }), s = _(() => r.value[t.value.name]), l = _(() => {
    if (s.value)
      return "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_";
  });
  return {
    dataForm: _(() => [
      {
        id: "name",
        label: "_A_FILTERS_SAVE_LABEL_NAME_",
        type: "text",
        required: !0,
        extra: {
          name: t.value.name || ""
        },
        helpText: l.value
      }
    ]),
    isUpdate: s
  };
}
function $$(e) {
  const t = d(e, "isModelFilterSavedNew"), n = d(e, "modelFiltersSaved"), r = B({});
  return {
    initModel: () => {
      n.value && !t.value && (r.value = {
        name: n.value
      });
    },
    model: r,
    updateModel: (o) => {
      r.value = o;
    }
  };
}
let Mm = 5e3;
const au = B({}), k$ = _(() => Ac(au.value));
let JE = 0;
function wu() {
  return {
    addNotification: H$,
    removeNotification: qm,
    notifications: k$,
    setNotificationTimeout: U$
  };
}
function U$(e) {
  Mm = e;
}
function H$({ text: e, type: t = "success", timeout: n, extra: r, useValuesFromObject: s = !0 }) {
  const l = ie(n) ? Mm : n, o = JE, u = t === "error" ? "danger" : t;
  let h = e;
  nt(e) && s && (h = kP(e)), au.value[o] = {
    text: h,
    type: u,
    index: o,
    extra: r
  }, JE++, l && setTimeout(() => {
    qm(o);
  }, l);
}
function qm(e) {
  au.value[e] && delete au.value[e];
}
function V$(e, { emit: t }, {
  isUpdate: n = _(() => !1),
  model: r = B({})
}) {
  const s = d(e, "changeModelFiltersSaved"), l = d(e, "updateFiltersSaved"), o = B(void 0), {
    addNotification: u
  } = wu(), h = _(() => !r.value.name), A = () => {
    t("close");
  };
  return {
    close: A,
    disabledBtnSave: h,
    loading: o,
    save: async () => {
      o.value = !0;
      const p = n.value;
      try {
        await l.value({
          action: p ? "update" : "create",
          label: r.value.name
        });
      } catch {
        u({
          text: "_A_FILTERS_SAVE_MSG_ERROR_",
          type: "danger"
        }), o.value = !1;
        return;
      }
      u({
        text: p ? "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_" : "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
        extra: {
          name: r.value.name
        }
      }), s.value({ model: r.value.name, isCreateOrEdit: !0 }), A(), o.value = !1;
    }
  };
}
const W$ = {
  name: "AFiltersSaveModal",
  props: {
    changeModelFiltersSaved: {
      type: Function,
      required: !0
    },
    filtersSaved: {
      type: Array,
      required: !0
    },
    isModelFilterSavedNew: {
      type: Boolean,
      required: !0
    },
    modelFiltersSaved: {
      type: String,
      required: !1,
      default: void 0
    },
    selectorCloseIds: {
      type: String,
      required: !0
    },
    updateFiltersSaved: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      initModel: n,
      model: r,
      updateModel: s
    } = $$(e), {
      dataForm: l,
      isUpdate: o
    } = q$(e, {
      model: r
    }), {
      close: u,
      disabledBtnSave: h,
      loading: A,
      save: E
    } = V$(e, t, {
      isUpdate: o,
      model: r
    });
    return n(), {
      close: u,
      dataForm: l,
      disabledBtnSave: h,
      initModel: n,
      loading: A,
      model: r,
      save: E,
      updateModel: s
    };
  },
  render() {
    return c(WU, {
      close: this.close,
      dataForm: this.dataForm,
      disabledSave: this.disabledBtnSave,
      headerText: "_A_FILTERS_SAVE_MODAL_HEADER_",
      modelValue: this.model,
      idPrefix: "modal_filter_top_",
      loading: this.loading,
      selectorCloseIds: this.selectorCloseIds,
      size: "large",
      save: this.save,
      stop: !0,
      zIndex: 1901,
      backdropZIndex: 1900,
      "onUpdate:modelValue": this.updateModel
    }, {
      modalBodyPrepend: () => [
        c(Ic, {
          type: "info",
          isVisible: !0,
          safeHtml: "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_"
        })
      ]
    });
  }
};
function G$(e) {
  const t = d(e, "filtersGroup"), n = B(void 0), r = _(() => !!(t.value.alwaysVisible.length || t.value.filters.length));
  return {
    closeDropdown: () => {
      var o;
      (o = n.value) == null || o.onClose({ trigger: "click" });
    },
    dropdownRef: n,
    isDropdownVisible: r,
    openDropdown: (o) => {
      var u;
      (u = n.value) == null || u.onOpen({ trigger: "click", selectorToFocus: o });
    }
  };
}
function K$(e, {
  openDropdown: t = () => {
  }
}) {
  const n = d(e, "id");
  let r;
  return {
    destroyEventBus: () => {
      Rt.$off(r, t);
    },
    initEventBus: () => {
      Rt.$on(r, t);
    },
    initEventName: () => {
      r = `eventATableFilterTopOnOpen_${n.value}`;
    }
  };
}
function j$(e, { emit: t }) {
  const n = d(e, "filtersGroup"), r = d(e, "filtersVisible"), s = ({ isAdd: E, filterId: p, filter: T }) => {
    t("toggleFiltersVisible", { isAdd: E, filterId: p, filter: T });
  }, l = ({ model: E }) => {
    s({ isAdd: !0, filterId: E });
  }, o = ({ filter: E }) => {
    s({ isAdd: !1, filterId: E.id, filter: E });
  }, u = _(() => !!(n.value.filters && n.value.filters.length)), h = _(() => {
    const E = {};
    return z(r.value, (p) => {
      E[p.id] = !0;
    }), E;
  }), A = _(() => u.value ? wt(n.value.filters, (E) => !h.value[E.id]) : []);
  return {
    addFiltersVisible: l,
    deleteFiltersVisible: o,
    filtersHidden: A,
    hasFiltersHiddenDefault: u
  };
}
function z$(e, {
  openDropdown: t = () => ({})
}) {
  const n = d(e, "filtersSaved"), r = d(e, "id"), s = d(e, "onUpdateModelFilters"), l = "_A_FILTERS_HOR_FILTER_NEW_", o = B(void 0), u = B(void 0), h = B(void 0), A = _(() => `${r.value}btn_save_`), E = _(() => u.value === l), p = _(() => {
    const I = [{
      label: l
    }];
    return z(pe(n.value), (v) => {
      v.group = "_A_FILTERS_FILTER_SAVED_GROUP_MY_", I.push(v);
    }), I;
  });
  return {
    buttonSaveComponentId: A,
    changeModelFiltersSaved: ({ model: I, item: v, isDelete: R, isCreateOrEdit: g }) => {
      if (g) {
        u.value = I;
        return;
      }
      if ((v == null ? void 0 : v.label) === l || R) {
        s.value({
          model: {},
          isUpdateFiltersVisible: !0
        }), u.value = l;
        return;
      }
      I ? (u.value = I, v && (s.value({
        model: v.data || {},
        isUpdateFiltersVisible: !0
      }), t())) : v && (s.value({
        model: v.data || {},
        isUpdateFiltersVisible: !0
      }), t());
    },
    closeModalSave: () => {
      o.value = !1;
    },
    filtersSavedLocal: p,
    initModelFiltersSaved: () => {
      u.value = l;
    },
    isModalSaveVisible: o,
    isModelFilterSavedNew: E,
    modelFiltersSaved: u,
    openModalSave: () => {
      h.value = A.value, o.value = !0;
    },
    selectorCloseIds: h
  };
}
const Ed = B(!0), zi = B({});
function sf() {
  const e = (r = {}) => {
    z(r, (s, l) => {
      zi.value[l] = s;
    });
  };
  return {
    changeConfirmOptions: e,
    closeConfirm: (r) => {
      r && qe(zi.value.close) && zi.value.close(), Ed.value = !0, setTimeout(() => {
        zi.value = {};
      });
    },
    confirmOptions: zi,
    isModalHidden: Ed,
    openConfirm: (r = {}) => {
      e(r), Ed.value = !1;
    }
  };
}
function Y$(e, {
  changeModelFiltersSaved: t = () => {
  },
  idFilterTop: n = _(() => ""),
  isModelFilterSavedNew: r = _(() => !1),
  modelFiltersSaved: s = B(void 0)
}) {
  const l = d(e, "id"), o = d(e, "updateFiltersSaved"), {
    changeConfirmOptions: u,
    closeConfirm: h,
    isModalHidden: A,
    openConfirm: E
  } = sf(), {
    addNotification: p
  } = wu(), T = _(() => `${l.value}btn_save`), S = _(() => r.value ? "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_" : {
    mobile: "_A_FILTERS_DELETE_FILTER_SAVED_BTN_"
  }), b = _(() => r.value ? "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_" : "_A_FILTERS_DELETE_FILTER_SAVED_BTN_"), L = async () => {
    u({
      loading: !0
    });
    try {
      await o.value({
        action: "delete",
        label: s.value
      });
    } catch {
      p({
        text: "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
        type: "danger",
        extra: {
          name: s.value
        }
      }), u({
        loading: !1
      });
      return;
    }
    p({
      text: "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
      extra: {
        name: s.value
      }
    }), u({
      loading: !1
    }), h(), t({ model: void 0, isDelete: !0 });
  };
  return {
    buttonDeleteId: T,
    isConfirmHidden: A,
    openDeleteConfirm: () => {
      E({
        headerText: "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
        bodyHtml: "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
        extra: {
          name: s.value
        },
        save: L,
        selectorCloseIds: [T.value, n.value],
        saveButtonText: "_A_FILTERS_DELETE_FILTER_BTN_DELETE_",
        stop: !0,
        zIndex: 1901,
        backdropZIndex: 1900
      });
    },
    textScreenreaderButtonDeleteFiltersSaved: b,
    titleButtonDeleteFiltersSaved: S
  };
}
function X$(e) {
  const t = d(e, "filtersGroup"), n = d(e, "filtersVisible"), r = d(e, "updateDataKeyByIdFromFilter"), s = "a_column a_column_12_touch a_column_3_fullhd a_column_3_widescreen a_column_3_desktop", l = "a_columns a_columns_count_12 a_columns_gap_x_2 a_columns_gap_y_2 a_columns_gap_y_1_touch", o = "a_filters__form_element a_column a_column_12_touch a_column_9_fullhd a_column_9_widescreen a_column_9_desktop", u = ["select", "multiselect", "radio", "checkbox", "group", "fieldset"], h = ({ dataKeyByKeyId: E, item: p, filter: T }) => {
    let S = T.id;
    p && (S = p.id), r.value({
      filterId: S,
      dataKeyByKeyId: E
    });
  };
  return {
    dataForForm: _(() => {
      const E = [];
      return z(t.value.alwaysVisible, (p) => {
        const T = pe(p);
        T.labelClass = s, T.classColumn = o, u.indexOf(p.type) !== -1 && (T.onUpdateData = ({ dataKeyByKeyId: S, item: b }) => h({ dataKeyByKeyId: S, item: b, filter: p })), E.push({
          type: "group",
          id: `group_${p.id}`,
          classColumns: l,
          children: [
            T
          ]
        });
      }), z(n.value, (p) => {
        const T = pe(p);
        T.labelClass = s, T.classColumn = `${o}  a_d_flex a_align_items_center`, T.slotAppend = "groupAppend", T.class = "a_width_100", u.indexOf(p.type) !== -1 && (T.onUpdateData = ({ dataKeyByKeyId: S, item: b }) => h({ dataKeyByKeyId: S, item: b, filter: p })), E.push({
          type: "group",
          id: `group_${p.id}`,
          classColumns: l,
          children: [
            T
          ]
        });
      }), E;
    })
  };
}
function Z$(e) {
  const t = d(e, "id");
  return {
    idFilterTop: _(() => `${t.value}_filter_top`)
  };
}
function J$(e, { emit: t }, {
  closeDropdown: n = () => {
  }
}) {
  const r = d(e, "disabled");
  return {
    onSearch: () => {
      r.value || (n(), t("startSearch"));
    }
  };
}
const Q$ = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-filter" viewBox="0 0 16 16">
  <path d="M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5"/>
</svg>`, ek = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-floppy2-fill" viewBox="0 0 16 16">
  <path d="M12 2h-2v3h2z"/>
  <path d="M1.5 0A1.5 1.5 0 0 0 0 1.5v13A1.5 1.5 0 0 0 1.5 16h13a1.5 1.5 0 0 0 1.5-1.5V2.914a1.5 1.5 0 0 0-.44-1.06L14.147.439A1.5 1.5 0 0 0 13.086 0zM4 6a1 1 0 0 1-1-1V1h10v4a1 1 0 0 1-1 1zM3 9h10a1 1 0 0 1 1 1v5H2v-5a1 1 0 0 1 1-1"/>
</svg>`, $m = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2"/>
</svg>`, km = `<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 1024 1024">
    <path d="M761.37 637.327l256.642 256.642q5.988 6.844 5.988 15.399t-5.988 15.399l-93.246 93.246q-6.844 5.988-15.399 5.988t-15.399-5.988l-256.642-256.642q-101.802 66.727-223.278 66.727-171.095 0-292.572-121.477t-121.477-292.572 121.477-292.572 292.572-121.477 292.572 121.477 121.477 292.572q0 121.477-66.727 223.278zM130.887 414.049q0 116.344 82.981 199.325t200.181 82.981 199.753-82.553 82.553-199.753-82.553-199.753-199.753-82.553-200.181 82.981-82.981 199.325z"></path>
</svg>
`, tk = {
  name: "AFiltersHorizontal",
  props: {
    canSave: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersGroup: {
      type: Object,
      required: !0,
      default: () => ({
        alwaysVisible: [],
        filters: []
      })
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    filtersSaved: {
      type: Array,
      required: !0
    },
    filtersVisible: {
      type: Array,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    mainModel: {
      type: Object,
      required: !1
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    unappliedModel: {
      type: Object,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    },
    updateFiltersSaved: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch",
    "toggleFiltersVisible"
  ],
  setup(e, t) {
    const {
      dataForForm: n
    } = X$(e), {
      closeDropdown: r,
      dropdownRef: s,
      isDropdownVisible: l,
      openDropdown: o
    } = G$(e), {
      idFilterTop: u
    } = Z$(e), {
      onSearch: h
    } = J$(e, t, {
      closeDropdown: r
    }), {
      destroyEventBus: A,
      initEventBus: E,
      initEventName: p
    } = K$(e, {
      openDropdown: o
    }), {
      addFiltersVisible: T,
      deleteFiltersVisible: S,
      filtersHidden: b,
      hasFiltersHiddenDefault: L
    } = j$(e, t), {
      buttonSaveComponentId: I,
      changeModelFiltersSaved: v,
      closeModalSave: R,
      filtersSavedLocal: g,
      initModelFiltersSaved: D,
      isModalSaveVisible: w,
      isModelFilterSavedNew: M,
      modelFiltersSaved: P,
      openModalSave: F,
      selectorCloseIds: C
    } = z$(e, {
      openDropdown: o
    }), {
      buttonDeleteId: k,
      isConfirmHidden: W,
      openDeleteConfirm: K,
      textScreenreaderButtonDeleteFiltersSaved: le,
      titleButtonDeleteFiltersSaved: te
    } = Y$(e, {
      changeModelFiltersSaved: v,
      idFilterTop: u,
      isModelFilterSavedNew: M,
      modelFiltersSaved: P
    });
    return p(), D(), E(), Ot(() => {
      A();
    }), {
      addFiltersVisible: T,
      buttonDeleteId: k,
      buttonSaveComponentId: I,
      changeModelFiltersSaved: v,
      closeDropdown: r,
      closeModalSave: R,
      dataForForm: n,
      deleteFiltersVisible: S,
      dropdownRef: s,
      filtersHidden: b,
      filtersSavedLocal: g,
      hasFiltersHiddenDefault: L,
      idFilterTop: u,
      initModelFiltersSaved: D,
      isConfirmHidden: W,
      isDropdownVisible: l,
      isModalSaveVisible: w,
      isModelFilterSavedNew: M,
      modelFiltersSaved: P,
      onSearch: h,
      openDeleteConfirm: K,
      openModalSave: F,
      selectorCloseIds: C,
      textScreenreaderButtonDeleteFiltersSaved: le,
      titleButtonDeleteFiltersSaved: te
    };
  },
  render() {
    return this.isDropdownVisible ? [
      c(sa, {
        ref: "dropdownRef",
        buttonIconLeft: Q$,
        buttonText: "Filter",
        buttonClass: "a_btn a_btn_primary a_btn_small a_filter_horizontal__btn_dropdown",
        dropdownTag: "div",
        dropdownClass: "a_filter_horizontal__wrapper",
        dropdownRenderDefault: !0,
        isCloseByClickInside: !1,
        hasCaret: !1,
        inBody: !0,
        lockArrowsNavigation: !1,
        lockTabNavigation: !1,
        useEscape: !this.isModalSaveVisible && this.isConfirmHidden
      }, {
        ...this.$slots,
        dropdown: () => c("div", {
          class: "a_filter_horizontal"
        }, [
          c("div", {
            class: "a_filter_horizontal__header__wrapper"
          }, [
            c("div", {
              class: "a_filter_horizontal__header"
            }, [
              c("div", {
                class: "a_filter_horizontal__header__texts"
              }, [
                c(Ae, {
                  class: "a_filter_horizontal__header__texts__filter",
                  tag: "span",
                  text: "_A_FILTERS_HOR_FILTER_HEADER_"
                }),
                this.isModelFilterSavedNew ? c(Ae, {
                  class: "a_filter_horizontal__header__texts__new",
                  tag: "em",
                  text: this.modelFiltersSaved
                }) : c("span", {}, this.modelFiltersSaved)
              ]),
              this.canSave ? c(cl, {
                modelValue: this.modelFiltersSaved,
                change: this.changeModelFiltersSaved,
                class: "a_filters_top__save_select",
                data: this.filtersSavedLocal,
                deselectable: !1,
                keyId: "label",
                keyLabel: "label",
                keyGroup: "group",
                label: "_A_FILTERS_SAVE_SELECT_",
                menuWidthType: "by_content",
                search: !0,
                translateData: !0,
                type: "select"
              }) : ""
            ])
          ]),
          c("div", {
            class: "a_filter_horizontal__body__wrapper"
          }, [
            c("div", {
              class: "a_filter_horizontal__body"
            }, [
              c(Pu, {
                idPrefix: this.idFilterTop,
                class: "a_filter_horizontal__body__form",
                classColumnDefault: "",
                classColumns: "",
                data: this.dataForForm,
                excludeRenderAttributes: this.excludeRenderAttributes,
                modelValue: this.unappliedModel,
                showErrors: !1,
                onChange: this.onUpdateModelFilters
              }, {
                ...this.$slots,
                groupAppend: ({ item: e }) => c(me, {
                  type: "button",
                  class: "a_btn a_btn_primary a_ml_2",
                  title: "_A_FILTERS_TOP_CLOSE_",
                  textScreenReader: "_A_FILTERS_TOP_CLOSE_",
                  iconLeft: ha,
                  stop: !0,
                  onClick: () => this.deleteFiltersVisible({ filter: e })
                }),
                formDataAppend: () => c("div", {
                  class: "a_filter_horizontal__add_filter__wrapper"
                }, [
                  c(cl, {
                    buttonClassDefault: "a_btn a_btn_primary a_filter_horizontal__add_filter",
                    change: this.addFiltersVisible,
                    data: this.filtersHidden,
                    hasCaret: !1,
                    disabled: !this.filtersHidden.length,
                    isLabelFloat: !1,
                    keyGroup: "group",
                    keyId: "id",
                    keyLabel: "label",
                    label: "_A_FILTERS_ADD_FILTER_",
                    labelClass: "a_sr_only",
                    menuWidthType: "by_content",
                    sortOrderGroup: "asc",
                    placement: "bottom-start",
                    search: !0,
                    translateData: !0,
                    type: "select"
                  }, {
                    fixedPlaceholder: () => [
                      c(Ae, {
                        tag: "span",
                        ariaHidden: !0,
                        class: "a_position_absolute_all",
                        title: "_A_FILTERS_ADD_FILTER_"
                      }),
                      c(ut, {
                        icon: $m
                      })
                    ]
                  })
                ]),
                formAppend: () => this.canSave ? c("div", {
                  class: "a_filter_horizontal__save_actions"
                }, [
                  c(me, {
                    id: this.buttonSaveComponentId,
                    class: "a_btn a_btn_primary",
                    iconLeft: ek,
                    type: "button",
                    text: "_A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_",
                    onClick: this.openModalSave
                  }),
                  c(me, {
                    id: this.buttonDeleteId,
                    ariaDisabled: this.isModelFilterSavedNew,
                    class: "a_btn a_btn_secondary",
                    iconLeft: Rm,
                    text: {
                      desktop: "_A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_"
                    },
                    textAriaHidden: !0,
                    textScreenReader: this.textScreenreaderButtonDeleteFiltersSaved,
                    title: this.titleButtonDeleteFiltersSaved,
                    type: "button",
                    onClick: this.openDeleteConfirm
                  })
                ]) : ""
              })
            ]),
            c("div", {
              class: "a_filter_horizontal__footer"
            }, [
              c("div", {
                class: "a_filter_horizontal__footer__actions"
              }, [
                c(me, {
                  type: "button",
                  class: "a_btn a_btn_primary a_text_nowrap a_filter_horizontal__footer__actions__btn_search",
                  iconLeft: km,
                  text: "_A_FILTERS_START_SEARCH_",
                  disabled: this.disabled,
                  onClick: this.onSearch
                }),
                c(me, {
                  type: "button",
                  class: "a_btn a_btn_secondary a_text_nowrap a_filter_horizontal__footer__actions__btn_close",
                  text: "_A_FILTERS_HOR_CLOSE_DROPDOWN_",
                  onClick: this.closeDropdown
                })
              ])
            ])
          ])
        ])
      }),
      this.isModalSaveVisible ? c(W$, {
        changeModelFiltersSaved: this.changeModelFiltersSaved,
        filtersSaved: this.filtersSaved,
        isModelFilterSavedNew: this.isModelFilterSavedNew,
        modelFiltersSaved: this.modelFiltersSaved,
        selectorCloseIds: this.selectorCloseIds,
        updateFiltersSaved: this.updateFiltersSaved,
        onClose: this.closeModalSave
      }) : ""
    ] : null;
  }
};
function nk(e) {
  const t = d(e, "id");
  return {
    idFilterTop: _(() => `${t.value}_filter_main`)
  };
}
function rk(e) {
  const t = d(e, "filterMain"), n = _(() => !!t.value), r = _(() => n.value ? [
    t.value
  ] : []);
  return {
    hasFilterMain: n,
    dataMainFilter: r
  };
}
function ak(e, { emit: t }) {
  const n = d(e, "disabled");
  return {
    onSearch: () => {
      n.value || t("startSearch");
    }
  };
}
const sk = {
  name: "AFiltersMain",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filterMain: {
      type: Object,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    mainModel: {
      type: Object,
      required: !1
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    },
    updateMainModel: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch"
  ],
  setup(e, t) {
    const {
      hasFilterMain: n,
      dataMainFilter: r
    } = rk(e), {
      idFilterTop: s
    } = nk(e), {
      onSearch: l
    } = ak(e, t);
    return {
      hasFilterMain: n,
      dataMainFilter: r,
      idFilterTop: s,
      onSearch: l
    };
  },
  render() {
    return this.hasFilterMain ? c("div", {
      id: this.idFilterTop,
      class: "a_filters_top"
    }, [
      c(Pu, {
        idPrefix: this.idFilterTop,
        class: "a_filters_top__form",
        classColumns: "a_filters_top__main_wrapper",
        classColumnDefault: "a_filters_top__main",
        data: this.dataMainFilter,
        excludeRenderAttributes: this.excludeRenderAttributes,
        modelValue: this.mainModel,
        showErrors: !1,
        onChange: this.updateMainModel
      }, {
        formDataAppend: () => c(ft, {
          class: "a_btn a_btn_primary a_text_nowrap a_filters_top__search",
          iconLeft: Ol,
          type: "submit",
          text: {
            desktop: "_A_FILTERS_START_SEARCH_"
          },
          textScreenReader: {
            mobile: "_A_FILTERS_START_SEARCH_"
          },
          prevent: !0,
          stop: !0,
          disabled: this.disabled,
          onClick: this.onSearch
        })
      })
    ]) : null;
  }
};
function ik(e, { emit: t }, {
  filtersHorizontalRef: n = B(void 0),
  filtersVisibleAll: r = _(() => []),
  onUpdateModelFilters: s = () => {
  }
}) {
  const l = d(e, "appliedModel"), o = d(e, "unappliedModel"), u = () => {
    var p;
    (p = n.value) == null || p.initModelFiltersSaved();
  }, h = ({ filter: p, keyId: T, modelArray: S, appliedModelLocal: b, unappliedModelLocal: L }) => {
    const I = p.id;
    return rf.value[p.type] ? (b[I] && b[I].length && (S ? b[I] = wt(b[I], (v) => S.indexOf(v) === -1) : b[I] = []), L[I] && L[I].length && (S ? L[I] = wt(L[I], (v) => S.indexOf(v) === -1) : L[I] = [])) : bm.value[p.type] && T ? (nt(L == null ? void 0 : L[I]) && (L[I][T] = void 0), nt(b == null ? void 0 : b[I]) && (b[I][T] = void 0)) : (L[I] = void 0, b[I] = void 0), {
      appliedModelLocal: b,
      unappliedModelLocal: L
    };
  };
  return {
    closeAllFilters: () => {
      let p = pe(l.value), T = pe(o.value);
      z(r.value, (S) => {
        const b = h({
          filter: S,
          appliedModelLocal: p,
          unappliedModelLocal: T
        });
        p = b.appliedModelLocal, T = b.unappliedModelLocal;
      }), u(), t("update:unappliedModel", T), t("update:appliedModel", p), setTimeout(() => {
        s({ model: l.value });
      });
    },
    closeFilterValue: ({ filter: p, keyId: T, modelArray: S }) => {
      const b = pe(l.value), L = pe(o.value), {
        appliedModelLocal: I,
        unappliedModelLocal: v
      } = h({
        filter: p,
        keyId: T,
        modelArray: S,
        appliedModelLocal: b,
        unappliedModelLocal: L
      });
      t("update:unappliedModel", v), t("update:appliedModel", I), setTimeout(() => {
        s({ model: l.value });
      });
    }
  };
}
function lk() {
  const e = B({});
  return {
    dataKeyByKeyIdPerFilter: e,
    updateDataKeyByIdFromFilter: ({ dataKeyByKeyId: n, filterId: r }) => {
      e.value[r] = pe(n);
    }
  };
}
function ok(e) {
  const t = d(e, "excludeRenderAttributes"), n = [
    "alwaysVisible"
  ];
  return {
    excludeRenderAttributesComputed: _(() => dP(n, t.value))
  };
}
function uk({ filter: e = {}, modelObj: t = {} }) {
  var r;
  const n = e.id;
  return n in t ? rf.value[e.type] ? !!((r = t[n]) != null && r.length) : bm.value[e.type] ? !!(t[n] && !hn(t[n])) : !0 : !1;
}
function _k(e, { emit: t }) {
  const n = d(e, "filters"), r = d(e, "filterMain"), s = d(e, "unappliedModel"), l = B({}), o = B(void 0), u = B([]), h = _(() => !!(n.value.length || r.value)), A = _(() => {
    const v = {};
    return z(pe(n.value), (R) => {
      v[R.id] = R, Ma.value[R.type] && R.children && R.children.length && z(R.children, (g) => {
        v[g.id] = g;
      });
    }), v;
  }), E = _(() => {
    const v = {
      alwaysVisible: [],
      filters: []
    };
    return z(pe(n.value), (R) => {
      R.alwaysVisible ? v.alwaysVisible.push(R) : v.filters.push(R);
    }), v;
  }), p = _(() => {
    const v = [];
    return z(u.value, (R) => {
      A.value[R] && v.push(A.value[R]);
    }), v;
  }), T = _(() => {
    const v = [];
    v.push(...n.value);
    const R = [];
    return z(v, (g) => {
      R.push(g), Ma.value[g.type] && g.children && g.children.length && z(g.children, (D) => {
        R.push(D);
      });
    }), R;
  }), S = () => {
    const v = [];
    z(E.value.filters, (R) => {
      uk({
        filter: R,
        modelObj: s.value
      }) && v.push(R.id);
    }), u.value = v;
  };
  return {
    filtersDataKeyById: l,
    filtersGroup: E,
    filtersHorizontalRef: o,
    filtersKeyById: A,
    filtersVisible: p,
    filtersVisibleAll: T,
    filtersVisibleIds: u,
    hasFilters: h,
    onUpdateModelFilters: ({ model: v, isUpdateFiltersVisible: R }) => {
      t("update:unappliedModel", v), R && setTimeout(() => {
        S();
      });
    },
    setFiltersVisibleIds: S,
    updateAppliedModel: ({ model: v }) => {
      t("update:appliedModel", v);
    },
    updateMainModel: ({ model: v }) => {
      t("update:mainModel", v);
    }
  };
}
function dk(e) {
  const t = d(e, "filtersSaved"), n = d(e, "unappliedModel"), r = d(e, "updateFiltersSaved"), s = B([]);
  return {
    filtersSavedLocal: s,
    initFiltersSaved: () => {
      s.value = t.value || [];
    },
    updateFiltersSavedLocal: ({ action: u = "", label: h = "" }) => {
      if (u === "create")
        s.value.push({
          label: h,
          data: pe(n.value)
        });
      else {
        const A = Qp(s.value, ["label", h]);
        A !== -1 && (u === "delete" ? s.value.splice(A, 1) : u === "update" && s.value.splice(A, 1, {
          label: h,
          data: pe(n.value)
        }));
      }
      qe(r.value) && r.value({
        action: u,
        label: h,
        model: n.value,
        filtersSaved: s.value
      });
    }
  };
}
function ck(e, { emit: t }, {
  onUpdateModelFilters: n = () => {
  }
}) {
  const r = d(e, "appliedModel"), s = d(e, "unappliedModel");
  return {
    startSearch: () => {
      t("update:appliedModel", s.value), setTimeout(() => {
        n({ model: r.value });
      });
    }
  };
}
function fk(e, {
  dataKeyByKeyIdPerFilter: t = B({}),
  filtersVisibleIds: n = B([]),
  onUpdateModelFilters: r = () => {
  }
}) {
  const s = d(e, "unappliedModel");
  return {
    toggleFiltersVisible: ({ isAdd: o = !0, filterId: u, filter: h }) => {
      var A, E;
      if (o)
        n.value.push(u);
      else {
        const p = n.value.indexOf(u);
        p !== -1 && n.value.splice(p, 1);
        const T = pe(s.value);
        if (h && h.modelId) {
          const S = (A = t.value) == null ? void 0 : A[u];
          (E = T == null ? void 0 : T[h.modelId]) != null && E.length && S ? T[h.modelId] = wt(T[h.modelId], (b) => !S[b]) : T[u] = void 0;
        } else
          T[u] = void 0;
        r({ model: T });
      }
    }
  };
}
const pde = {
  name: "AFilters",
  props: {
    appliedModel: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canSave: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filterMain: {
      type: Object,
      required: !1
    },
    filters: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersSaved: {
      type: Array,
      required: !1,
      default: () => []
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_filters_")
    },
    mainModel: {
      type: Object,
      required: !1
    },
    unappliedModel: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    updateFiltersSaved: {
      type: Function,
      required: !1,
      default: void 0
    },
    view: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => ["top", "right"].indexOf(e) !== -1
    },
    viewRightTeleportSelector: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "startSearch",
    "update:appliedModel",
    "update:mainModel",
    "update:unappliedModel"
  ],
  setup(e, t) {
    const n = d(e, "filtersSaved"), {
      filtersDataKeyById: r,
      filtersGroup: s,
      filtersHorizontalRef: l,
      filtersKeyById: o,
      filtersVisible: u,
      filtersVisibleAll: h,
      filtersVisibleIds: A,
      hasFilters: E,
      onUpdateModelFilters: p,
      setFiltersVisibleIds: T,
      updateAppliedModel: S,
      updateMainModel: b
    } = _k(e, t), {
      closeAllFilters: L,
      closeFilterValue: I
    } = ik(e, t, {
      filtersHorizontalRef: l,
      filtersVisibleAll: h,
      onUpdateModelFilters: p
    }), {
      dataKeyByKeyIdPerFilter: v,
      updateDataKeyByIdFromFilter: R
    } = lk(), {
      toggleFiltersVisible: g
    } = fk(e, {
      dataKeyByKeyIdPerFilter: v,
      filtersVisibleIds: A,
      onUpdateModelFilters: p
    }), {
      startSearch: D
    } = ck(e, t, {
      onUpdateModelFilters: p
    }), {
      filtersSavedLocal: w,
      initFiltersSaved: M,
      updateFiltersSavedLocal: P
    } = dk(e), {
      excludeRenderAttributesComputed: F
    } = ok(e);
    return rt(n, () => {
      M();
    }, {
      deep: !0
    }), T(), M(), {
      closeAllFilters: L,
      closeFilterValue: I,
      dataKeyByKeyIdPerFilter: v,
      excludeRenderAttributesComputed: F,
      filtersDataKeyById: r,
      filtersGroup: s,
      filtersHorizontalRef: l,
      filtersKeyById: o,
      filtersSavedLocal: w,
      filtersVisible: u,
      filtersVisibleAll: h,
      filtersVisibleIds: A,
      hasFilters: E,
      onUpdateModelFilters: p,
      setFiltersVisibleIds: T,
      startSearch: D,
      toggleFiltersVisible: g,
      updateAppliedModel: S,
      updateDataKeyByIdFromFilter: R,
      updateFiltersSavedLocal: P,
      updateMainModel: b
    };
  },
  render() {
    if (this.hasFilters)
      return c(
        "div",
        [
          this.view === "top" && c(sk, {
            id: this.id,
            disabled: this.disabled,
            excludeRenderAttributes: this.excludeRenderAttributesComputed,
            filterMain: this.filterMain,
            mainModel: this.mainModel,
            updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
            updateMainModel: this.updateMainModel,
            onStartSearch: this.startSearch
          }, this.$slots),
          this.view === "right" && c(ia, {
            to: this.viewRightTeleportSelector,
            disabled: !this.viewRightTeleportSelector
          }, [
            c(I$, {
              id: this.id,
              disabled: this.disabled,
              excludeRenderAttributes: this.excludeRenderAttributesComputed,
              filters: this.filters,
              filtersKeyById: this.filtersKeyById,
              appliedModel: this.appliedModel,
              onUpdateModelFilters: this.updateAppliedModel,
              updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
              onStartSearch: this.startSearch
            }, this.$slots)
          ]),
          c(M$, {
            id: this.id,
            appliedModel: this.appliedModel,
            closeAllFilters: this.closeAllFilters,
            closeFilterValue: this.closeFilterValue,
            dataKeyByKeyIdPerFilter: this.dataKeyByKeyIdPerFilter,
            disabled: this.disabled,
            filtersGroup: this.filtersGroup,
            filtersKeyById: this.filtersKeyById,
            filtersVisibleAll: this.filtersVisibleAll
          }, {
            filtersHorizontal: () => this.view === "top" ? c(tk, {
              ref: "filtersHorizontalRef",
              id: this.id,
              canSave: this.canSave,
              disabled: this.disabled,
              excludeRenderAttributes: this.excludeRenderAttributesComputed,
              filtersGroup: this.filtersGroup,
              filtersKeyById: this.filtersKeyById,
              filtersSaved: this.filtersSavedLocal,
              filtersVisible: this.filtersVisible,
              onUpdateModelFilters: this.onUpdateModelFilters,
              unappliedModel: this.unappliedModel,
              updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
              updateFiltersSaved: this.updateFiltersSavedLocal,
              onStartSearch: this.startSearch,
              onToggleFiltersVisible: this.toggleFiltersVisible
            }, this.$slots) : "",
            ...this.$slots
          })
        ]
      );
  }
}, hk = {
  name: "ARequired",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    text: {
      type: String,
      required: !1,
      default: "_A_REQUIRED_TEXT_"
    }
  },
  render() {
    return c(Ae, {
      alwaysTranslate: this.alwaysTranslate,
      class: "a_required",
      html: this.text
    });
  }
};
function Ak(e) {
  const t = d(e, "isHide");
  return {
    styleFormHide: _(() => t.value ? "display: none;" : "")
  };
}
function Ek(e, { emit: t }) {
  const n = d(e, "modelValue"), r = _(() => n.value || {});
  return {
    modelValueLocal: r,
    onUpdateModelLocal: ({ item: l, model: o }) => {
      if (Ma.value[l.type])
        t("update:modelValue", o), t("change", { model: o });
      else {
        const u = pe(r.value), h = l.id;
        mc(u, h, pe(o)), t("update:modelValue", u), t("change", { model: u });
      }
    }
  };
}
function pk(e) {
  const t = d(e, "data"), n = d(e, "isRequired");
  return {
    isRequiredLocal: _(() => {
      if (n.value)
        return !0;
      let s = !1;
      return z(t.value, (l) => {
        if (l.required)
          return s = !0, !1;
      }), s;
    })
  };
}
const Pu = {
  name: "AForm",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12 a_columns_gap_2"
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_12"
    },
    data: {
      type: Array,
      required: !0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRequired: {
      type: Boolean,
      required: !1
    },
    modelValue: {
      type: Object,
      required: !1,
      default: void 0
    },
    showErrors: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tag: {
      type: String,
      required: !1,
      default: "form"
    },
    textRequired: {
      type: String,
      required: !1,
      default: void 0
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue",
    "change"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Ct(e), {
      modelValueLocal: r,
      onUpdateModelLocal: s
    } = Ek(e, t), {
      styleFormHide: l
    } = Ak(e), {
      isRequiredLocal: o
    } = pk(e);
    return {
      attributesToExcludeFromRender: n,
      componentTypesMapping: () => ({
        ...Bu,
        ...Fm,
        ...vr.components,
        ...vr.containerComponents
      }),
      isRequiredLocal: o,
      modelValueLocal: r,
      onUpdateModelLocal: s,
      styleFormHide: l
    };
  },
  render() {
    return this.isRender ? c(this.tag, {
      class: "a_form",
      style: this.styleFormHide
    }, [
      this.$slots.formPrepend ? this.$slots.formPrepend() : "",
      this.isRequiredLocal ? c(hk, {
        text: this.textRequired
      }) : "",
      this.$slots.formPrependAfterRequired ? this.$slots.formPrependAfterRequired() : "",
      this.showErrors ? c(X1, {
        alwaysTranslate: this.alwaysTranslate,
        errors: this.errors,
        closable: !1,
        optionsList: this.data,
        idPrefix: this.idPrefix,
        textErrorHeader: this.textErrorHeader
      }) : "",
      c("div", {
        class: this.classColumns
      }, [
        this.$slots.formDataPrepend ? this.$slots.formDataPrepend() : "",
        ...this.data.map((e, t) => {
          const n = Ma.value[e.type];
          let r;
          ie(e.classColumn) ? r = this.classColumnDefault : e.classColumn && (r = e.classColumn);
          const s = this.componentTypesMapping()[e.type];
          return c(s, {
            key: t,
            alwaysTranslate: this.alwaysTranslate,
            modelValue: n ? this.modelValueLocal : fe(this.modelValueLocal, e.id),
            modelDependencies: n ? this.modelValueLocal : void 0,
            class: r,
            errors: this.errors[e.id],
            errorsAll: n ? this.errors : void 0,
            idPrefix: this.idPrefix,
            excludeRenderAttributes: this.excludeRenderAttributes,
            "onUpdate:modelValue": (l) => this.onUpdateModelLocal({ item: e, model: l }),
            ...e,
            classColumn: void 0,
            ...this.attributesToExcludeFromRender
          }, this.$slots);
        }),
        this.$slots.formDataAppend ? this.$slots.formDataAppend() : ""
      ]),
      this.$slots.formAppend ? this.$slots.formAppend() : ""
    ]) : null;
  }
};
function Tk({ emit: e }) {
  return {
    clearLocal: ({ $event: n }) => {
      n.stopPropagation(), n.preventDefault(), e("clear", n);
    }
  };
}
const xu = {
  name: "AFormElementBtnClear",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    class: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_transparent_dark a_btn_small"
    },
    icon: {
      type: String,
      required: !1,
      default: ha
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    title: {
      type: String,
      required: !1,
      default: "_REMOVE_FIELD_CONTENT_"
    },
    textScreenReader: {
      type: String,
      required: !1,
      default: "_REMOVE_FIELD_CONTENT_"
    },
    tabindex: {
      type: Number,
      required: !1,
      default: -1
    },
    iconClass: {
      type: String,
      required: !1,
      default: "a_form_element__btn_close__icon"
    }
  },
  emits: [
    "clear"
  ],
  setup(e, t) {
    const {
      clearLocal: n
    } = Tk(t);
    return {
      clearLocal: n
    };
  },
  render() {
    if (!this.disabled)
      return c(me, {
        class: [
          "a_form_control__actions__btn",
          this.class
        ],
        disabled: this.disabled,
        iconClass: this.iconClass,
        iconLeft: this.icon,
        onClick: this.clearLocal,
        tabindex: this.tabindex,
        textScreenReader: this.textScreenReader,
        title: this.title,
        type: "button"
      });
  }
};
function mk(e) {
  const t = d(e, "id");
  return {
    labelId: _(() => `${t.value}_label`)
  };
}
function Sk(e) {
  const t = d(e, "modelValue"), n = d(e, "readonlyDefault");
  return {
    modelValueReadonly: _(() => ie(t.value) || t.value === "" ? n.value : t.value)
  };
}
const Vn = {
  name: "AFormReadonly",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    type: {
      type: String,
      required: !1,
      default: void 0
    },
    valueClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    valueParentClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    valueTag: {
      type: String,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = Ct(e), {
      labelId: n
    } = mk(e), {
      modelValueReadonly: r
    } = Sk(e);
    return {
      attributesToExcludeFromRender: t,
      labelId: n,
      modelValueReadonly: r
    };
  },
  render() {
    return c("div", {
      "aria-labelledby": this.labelId,
      class: "a_form_element_readonly",
      role: "group",
      ...this.attributesToExcludeFromRender
    }, [
      this.label || this.labelScreenReader ? c(Mt, {
        id: this.id,
        alwaysTranslate: this.alwaysTranslate,
        extra: this.extra,
        isLabelFloat: !1,
        label: this.label,
        labelClass: this.labelClass,
        labelScreenReader: this.labelScreenReader,
        readonly: !0,
        required: !1,
        tag: "div",
        type: this.type
      }) : "",
      c("div", {
        class: [
          "a_form_element_readonly_value",
          this.valueParentClass
        ]
      }, [
        this.$slots.default ? this.$slots.default() : c(Ae, {
          class: this.valueClass,
          extra: this.extra,
          html: this.modelValueReadonly,
          tag: this.valueTag
        })
      ])
    ]);
  }
}, Gd = {
  name: "AGet",
  props: {
    keyLabel: {
      type: [String, Array],
      required: !0,
      info: "Weg zu Informationen. Z.B.('a[0].b.c', 'vertrag.antrag_obj.pk', ['vertrag', aloha, 'pk'])"
    },
    data: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Haupt-Objekt oder -Array, wo man sucht"
    },
    tag: {
      type: String,
      required: !1,
      default: "span",
      info: "Semantisch-relevanter HTML-Tag.(span, div, ...)"
    },
    defaultValue: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Standardwert, wenn Lodash-Funktion 'get' undefined zurückschickt"
    },
    filter: {
      type: String,
      required: !1,
      default: void 0
    },
    filterParameters: {
      type: [Object, String, Number, Boolean],
      required: !1,
      default: () => {
      }
    },
    replacedWithDefault: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Wenn das Wert, das Lodash-Funktion 'get' zurückschickt, === this.replacedWithDefault, dann this.defaultValue"
    }
  },
  setup() {
    return Hn();
  },
  computed: {
    valueLocal() {
      let e = fe(this.data, this.keyLabelLocal);
      if (ie(e) && (e = this.defaultValue), this.isValueEqualsWithValueThenDefaultValue(e))
        return this.defaultValue;
      if (this.filter) {
        const t = `filter${wp(this.filter)}`;
        if (qe(this[t]))
          return this[t](e, this.filterParameters);
        console.warn(`filter "${t}" ist not defined`);
      }
      return e;
    },
    keyLabelLocal() {
      return Te(this.keyLabel) ? this.keyLabel.join(".") : this.keyLabel;
    }
  },
  methods: {
    isValueEqualsWithValueThenDefaultValue(e) {
      if (we(this.replacedWithDefault))
        return !1;
      let t = !1;
      return Te(this.replacedWithDefault) ? z(this.replacedWithDefault, (n) => {
        if (n === e)
          return t = !0, !1;
      }) : this.replacedWithDefault === e && (t = !0), t;
    }
  },
  render() {
    return Pt(c(this.tag), [
      [an, this.valueLocal]
    ]);
  }
}, Fu = {
  name: "ALink",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    href: {
      type: String,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_link_")
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    target: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => gr.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => it(e) ? e === "auto" : ca(e)
    },
    to: {
      type: [Object, String],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      clickEmit: n
    } = mT(e, t);
    return {
      clickEmit: n
    };
  },
  render() {
    return c(me, {
      ...this.$attrs,
      ...this.$props,
      type: "link",
      onClick: this.clickEmit
    }, this.$slots);
  }
};
function bk(e) {
  const t = d(e, "isLast"), n = d(e, "hasDropdownActions"), r = d(e, "hasDividerBeforeDropdown"), s = _(() => t.value && n.value), l = _(() => s.value && !r.value);
  return {
    isDropdownActionsAfterGroup: _(() => s.value && r.value),
    isDropdownActionsInGroup: l
  };
}
const Lk = {
  name: "AGroupButtonDropdownItem",
  props: {
    actionsClasses: {
      type: Array,
      required: !0
    },
    actionsIds: {
      type: Array,
      required: !0
    },
    actionsDropdown: {
      type: Array,
      required: !0
    },
    btnGroupClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn_group"
    },
    data: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !0
    },
    hasDividerBeforeDropdown: {
      type: Boolean,
      required: !0
    },
    hasDropdownActions: {
      type: Boolean,
      required: !0
    },
    isLast: {
      type: Boolean,
      required: !0
    }
  },
  setup(e) {
    const {
      isDropdownActionsAfterGroup: t,
      isDropdownActionsInGroup: n
    } = bk(e);
    return {
      isDropdownActionsAfterGroup: t,
      isDropdownActionsInGroup: n
    };
  },
  render() {
    return [
      !!this.data.children.length && c("div", {
        class: this.btnGroupClass
      }, [
        ...this.data.children.map((e) => {
          let t = e.classButton ? e.classButton : this.actionsClasses[e.actionNotDividerIndex];
          e.classExtra && (t = ko({
            class1: t,
            class2: e.classExtra
          }));
          const n = e.id ? e.id : this.actionsIds[e.actionNotDividerIndex], r = this.disabled || e.disabled;
          if (e.type === "button")
            return c(ft, {
              ...e,
              id: n,
              class: t,
              classButton: void 0,
              classExtra: void 0,
              disabled: r,
              onClick: e.callback,
              callback: void 0,
              actionNotDividerIndex: void 0,
              isHidden: void 0,
              isConfirm: void 0,
              callbackLocal: void 0
            });
          if (e.type === "link")
            return c(Fu, {
              ...e,
              id: n,
              classButton: void 0,
              classExtra: void 0,
              disabled: r,
              class: t,
              actionNotDividerIndex: void 0,
              isHidden: void 0,
              type: void 0,
              isConfirm: void 0,
              callbackLocal: void 0
            });
          if (e.type === "template" && e.slotName && this.$slots[e.slotName])
            return this.$slots[e.slotName]({
              id: n,
              class: t,
              action: e
            });
        }),
        this.isDropdownActionsInGroup && c(sa, {
          isHideWithoutActionAndSlot: !0,
          actions: this.actionsDropdown,
          disabled: this.disabled,
          ...this.dropdownAttributes
        }, this.$slots)
      ]),
      this.isDropdownActionsAfterGroup && c(sa, {
        isHideWithoutActionAndSlot: !0,
        actions: this.actionsDropdown,
        disabled: this.disabled,
        ...this.dropdownAttributes
      }, this.$slots)
    ];
  }
};
function Ik(e) {
  const t = d(e, "actions"), n = d(e, "indexFirstDropdownAction"), r = d(e, "indexFirstDropdownActionMobile"), s = d(e, "minDropdownActions"), {
    isMobileWidth: l
  } = En(), o = _(() => mm({
    actions: t.value
  })), u = _(() => {
    const S = pe(o.value);
    return z(S, (b) => {
      b.classButton = ko({
        class1: b.classButton,
        class2: b.class
      }), b.class = ko({
        class1: b.classDropdown,
        class2: b.class
      }), delete b.classDropdown, b.classExtra && (b.class = ko({
        class1: b.classExtra,
        class2: b.class
      }));
    }), S;
  }), h = _(() => l.value ? r.value : n.value), A = ({ actions: S = [], minCountActions: b = 0 }) => {
    let L = 0;
    return z(S, (I) => {
      if (L >= b)
        return !1;
      I.type !== "divider" && L++;
    }), L >= b;
  }, E = _(() => {
    const S = pe(u.value), b = {
      buttons: [],
      dropdown: []
    };
    let L = 0, I = !0;
    return z(S, (v, R) => {
      if (L === h.value) {
        const g = S.slice(R, S.length);
        if (A({
          actions: g,
          minCountActions: s.value
        }))
          return b.dropdown = S.splice(R, S.length), h.value === 0 && b.buttons.push({
            type: "group",
            children: []
          }), !1;
      }
      v.type !== "divider" ? (v.actionNotDividerIndex = L, L++, I ? b.buttons.push({
        type: "group",
        children: [v]
      }) : ci(b.buttons).children.push(v), I = !1) : I = !0;
    }), b;
  }), p = _(() => E.value.dropdown.length > 0), T = _(() => u.value.length > 0);
  return {
    actionsAllWithClassesFiltered: u,
    actionsGrouped: E,
    hasActionsAllFiltered: T,
    hasDropdownActions: p
  };
}
const Ca = B({
  propsDefault: {
    actionsClasses: ["a_btn a_btn_primary", "a_btn a_btn_secondary"],
    dropdownAttributes: {},
    hasDividerBeforeDropdown: !0,
    indexFirstDropdownAction: 1,
    indexFirstDropdownActionMobile: 0,
    minDropdownActions: 2,
    useActionClass: !0,
    useDropdownActionClass: !1
  }
}), Tde = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Ca.value.propsDefault = {
      ...Ca.value.propsDefault,
      ...t
    };
  }
}, Kd = {
  name: "AGroupButtonDropdown",
  props: {
    actions: {
      type: Array,
      required: !1,
      default: () => []
    },
    actionsClasses: {
      type: Array,
      required: !1,
      default: () => Ca.value.propsDefault.actionsClasses
    },
    actionsIds: {
      type: Array,
      required: !1,
      default: () => []
    },
    btnGroupClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn_group"
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !1,
      default: () => Ca.value.propsDefault.dropdownAttributes
    },
    hasDividerBeforeDropdown: {
      type: Boolean,
      required: !1,
      default: () => Ca.value.propsDefault.hasDividerBeforeDropdown
    },
    indexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: () => Ca.value.propsDefault.indexFirstDropdownAction,
      validator: (e) => e >= -1
    },
    indexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: () => Ca.value.propsDefault.indexFirstDropdownActionMobile,
      validator: (e) => e >= -1
    },
    minDropdownActions: {
      type: Number,
      required: !1,
      default: () => Ca.value.propsDefault.minDropdownActions
    },
    innerFlagHasActions: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "update:innerFlagHasActions"
  ],
  setup(e, { emit: t }) {
    const {
      actionsAllWithClassesFiltered: n,
      actionsGrouped: r,
      hasActionsAllFiltered: s,
      hasDropdownActions: l
    } = Ik(e);
    return rt(s, (o) => {
      t("update:innerFlagHasActions", o);
    }, {
      immediate: !0
    }), {
      actionsAllWithClassesFiltered: n,
      actionsGrouped: r,
      hasActionsAllFiltered: s,
      hasDropdownActions: l
    };
  },
  render() {
    if (this.hasActionsAllFiltered)
      return c("div", {
        class: "aloha_group_btn_dropdown"
      }, [
        ...this.actionsGrouped.buttons.map((e, t) => c(Lk, {
          btnGroupClass: this.btnGroupClass,
          data: e,
          disabled: this.disabled,
          actionsDropdown: this.actionsGrouped.dropdown,
          hasDropdownActions: this.hasDropdownActions,
          dropdownAttributes: this.dropdownAttributes,
          actionsClasses: this.actionsClasses,
          actionsIds: this.actionsIds,
          isLast: t === this.actionsGrouped.buttons.length - 1,
          hasDividerBeforeDropdown: this.hasDividerBeforeDropdown
        }, this.$slots))
      ]);
  }
};
function vk(e) {
  const t = d(e, "callback"), n = d(e, "disabled"), r = d(e, "rootMargin"), s = d(e, "threshold");
  let l = {};
  const o = B(void 0);
  let u;
  const h = () => {
    l = {
      rootMargin: r.value,
      threshold: s.value
    };
  }, A = () => {
    u = new IntersectionObserver((T) => {
      const [S] = T;
      S.isIntersecting && t.value();
    }, l);
  }, E = () => {
    n.value || u.observe(o.value);
  }, p = () => {
    u && u.disconnect();
  };
  return rt(n, (T) => {
    T === !0 ? E() : p();
  }), {
    disconnectObserver: p,
    sentinelRef: o,
    setIntersectionObserver: A,
    setObserverOptions: h,
    startObserver: E
  };
}
const mde = {
  name: "AInfiniteScroll",
  props: {
    callback: {
      type: Function,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    rootMargin: {
      type: String,
      required: !1,
      default: "300px"
    },
    sentinelTag: {
      type: String,
      required: !1,
      default: "span"
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    threshold: {
      type: [Number, Array],
      required: !1,
      default: 0.5
    }
  },
  setup(e) {
    const {
      disconnectObserver: t,
      sentinelRef: n,
      setIntersectionObserver: r,
      setObserverOptions: s,
      startObserver: l
    } = vk(e);
    return Vr(() => {
      s(), r(), l();
    }), Ot(() => {
      t();
    }), {
      sentinelRef: n
    };
  },
  render() {
    return c(this.tag, {}, [
      this.$slots.default ? this.$slots.default() : null,
      c(this.sentinelTag, {
        ref: "sentinelRef",
        style: "height: 1px; display: block;",
        ariaHidden: !0
      })
    ]);
  }
};
function yk(e) {
  const t = d(e, "textCopy"), n = B(void 0), {
    addNotification: r
  } = wu();
  return {
    copyText: async () => {
      var o;
      let l = "";
      if (t.value ? l = t.value : (o = n.value) != null && o.$el && z(n.value.$el.children, (u) => {
        u.classList.contains("a_sr_only") || (l += u.textContent);
      }), l)
        try {
          await navigator.clipboard.writeText(l), r({
            text: "_A_LINK_COPY_COPIED_TO_CLIPBOARD_"
          });
        } catch (u) {
          console.error(u);
        }
    },
    linkRef: n
  };
}
const gk = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-copy" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z"/>
</svg>`, Sde = {
  name: "ALinkCopy",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    buttonOptions: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonPosition: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "a_btn_group"
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    linkOptions: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    textCopy: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup() {
    const {
      copyText: e,
      linkRef: t
    } = yk();
    return {
      copyText: e,
      linkRef: t
    };
  },
  render() {
    var t, n;
    const e = c(ft, {
      alwaysTranslate: this.alwaysTranslate,
      class: "a_btn a_btn_secondary",
      disabled: this.disabled,
      iconLeft: gk,
      textScreenReader: "_A_LINK_COPY_BTN_TITLE_",
      title: "_A_LINK_COPY_BTN_TITLE_",
      onClick: this.copyText,
      ...this.buttonOptions
    }, (t = this.$slots) == null ? void 0 : t.button);
    return c("div", {
      class: [
        this.classDefault,
        this.class
      ],
      role: "group"
    }, [
      this.buttonPosition === "left" && e,
      c(Fu, {
        ref: "linkRef",
        alwaysTranslate: this.alwaysTranslate,
        disabled: this.disabled,
        ...this.linkOptions
      }, (n = this.$slots) == null ? void 0 : n.link),
      this.buttonPosition === "right" && e
    ]);
  }
};
function Rk(e) {
  const t = d(e, "isDataSimpleArray"), n = d(e, "item"), r = d(e, "keyChildren"), s = _(() => kn(n.value)), l = _(() => {
    var u;
    return t.value ? (u = n.value) == null ? void 0 : u[1] : !r.value || !s.value ? [] : fe(n.value, r.value) || [];
  }), o = _(() => Te(l.value) && l.value.length > 0);
  return {
    children: l,
    hasChildren: o
  };
}
function Ok(e) {
  const t = d(e, "isDataSimpleArray"), n = d(e, "item"), r = d(e, "itemIndex"), s = d(e, "keyLabel"), l = d(e, "keyLabelCallback");
  return {
    label: _(() => {
      var u;
      return t.value ? Te(n.value) ? ((u = n.value) == null ? void 0 : u[0]) || "" : n.value : qe(l.value) ? l.value({ item: n.value, itemIndex: r.value }) : s.value ? fe(n.value, s.value) : n.value;
    })
  };
}
const Ck = {
  name: "AListItem",
  props: {
    classItem: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    classMain: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    item: {
      type: [Object, String, Number, Array],
      required: !0
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !0
    },
    listItemTag: {
      type: String,
      required: !1,
      default: "li"
    },
    separator: {
      type: String,
      required: !1,
      default: void 0
    },
    separatorHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      children: t,
      hasChildren: n
    } = Rk(e), {
      label: r
    } = Ok(e);
    return {
      children: t,
      hasChildren: n,
      label: r
    };
  },
  render() {
    return c(this.listItemTag, {
      class: this.classItem
    }, [
      this.$slots.listItem ? this.$slots.listItem({
        item: this.item,
        itemIndex: this.itemIndex
      }) : Pt(c(this.labelTag), [
        [an, this.label]
      ]),
      this.separator ? c("span", {}, this.separator) : "",
      this.hasChildren ? c(Bk, {
        classItem: this.classItem,
        classMain: this.classMain,
        data: this.children,
        isDataSimpleArray: this.isDataSimpleArray,
        keyChildren: this.keyChildren,
        keyId: this.keyId,
        keyLabel: this.keyLabel,
        keyLabelCallback: this.keyLabelCallback,
        labelTag: this.labelTag,
        listItemTag: this.listItemTag,
        separator: this.separator,
        separatorHtml: this.separatorHtml,
        tag: this.tag
      }, this.$slots) : "",
      this.separatorHtml ? Pt(c("div"), [
        [an, this.separatorHtml]
      ]) : ""
    ]);
  }
};
function Nk(e) {
  const t = d(e, "data"), n = d(e, "isDataSimpleArray"), r = d(e, "keyChildren"), s = d(e, "keyLabel"), l = d(e, "keyLabelCallback"), o = d(e, "separator");
  return {
    plainText: _(() => Jo(t.value, {
      isHtml: !1,
      keyLabel: s.value,
      keyLabelCallback: l.value,
      keyChildren: r.value,
      isSimpleArray: n.value,
      separator: o.value
    }))
  };
}
function Dk(e) {
  const t = d(e, "tag"), n = d(e, "isHtml");
  return {
    tagLocal: _(() => !n.value && (t.value === "ul" || t.value === "ol") ? "span" : t.value)
  };
}
const Bk = {
  name: "AList",
  props: {
    classItem: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    classMain: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isHtml: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !1,
      default: "span"
    },
    listItemTag: {
      type: String,
      required: !1,
      default: "li"
    },
    separator: {
      type: String,
      required: !1,
      default: void 0
    },
    separatorHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "ul"
    }
  },
  setup(e) {
    const {
      tagLocal: t
    } = Dk(e), {
      plainText: n
    } = Nk(e);
    return {
      plainText: n,
      tagLocal: t
    };
  },
  render() {
    return this.isHtml ? c(this.tag, {
      class: this.classMain
    }, [
      this.data.map((e, t) => {
        const n = this.keyId ? fe(e, this.keyId) : t;
        return c(Ck, {
          key: n,
          classItem: this.classItem,
          classMain: this.classMain,
          isDataSimpleArray: this.isDataSimpleArray,
          item: e,
          itemIndex: t,
          keyChildren: this.keyChildren,
          keyId: this.keyId,
          keyLabel: this.keyLabel,
          keyLabelCallback: this.keyLabelCallback,
          labelTag: this.labelTag,
          listItemTag: this.listItemTag,
          separator: this.separator,
          separatorHtml: this.separatorHtml,
          tag: this.tag
        }, this.$slots);
      })
    ]) : c(this.tagLocal, null, this.plainText);
  }
};
function wk(e) {
  const t = d(e, "size");
  return {
    classSize: _(() => {
      if (t.value)
        return `a_spinner_size_${t.value}`;
    })
  };
}
const fl = {
  name: "ASpinner",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: () => Mn.value.propsDefault.ariaLabel
    },
    extra: {
      type: Object,
      required: !1,
      default: () => Mn.value.propsDefault.extra
    },
    safeHtml: {
      type: String,
      required: !1,
      default: () => Mn.value.propsDefault.safeHtml
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => Mn.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    tag: {
      type: String,
      required: !1,
      default: () => Mn.value.propsDefault.tag
    }
  },
  setup(e) {
    const {
      ariaLabelAttributes: t
    } = yc(e), {
      classSize: n
    } = wk(e);
    return {
      ariaLabelAttributes: t,
      classSize: n
    };
  },
  render() {
    return c(this.tag, {
      class: [
        Mn.value.propsDefault.class,
        this.classSize
      ],
      role: "status",
      innerHTML: this.safeHtml,
      ...this.ariaLabelAttributes
    });
  }
}, Na = B({
  propsDefault: {
    align: "center",
    extra: void 0,
    size: 6,
    tag: "div",
    text: "_A_LOADING_LOADING_",
    textAlign: "right"
  }
}), bde = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Na.value.propsDefault = {
      ...Na.value.propsDefault,
      ...t
    };
  }
}, Um = {
  name: "ALoading",
  inheritAttrs: !1,
  props: {
    align: {
      type: String,
      required: !1,
      default: () => Na.value.propsDefault.align,
      validator: (e) => ["left", "center", "right"].indexOf(e) !== -1
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: () => Na.value.propsDefault.extra
    },
    isLoading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => Na.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    spinnerClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    spinnerSafeHtml: {
      type: String,
      required: !1,
      default: () => Mn.value.propsDefault.safeHtml
    },
    spinnerTag: {
      type: String,
      required: !1,
      default: () => Mn.value.propsDefault.tag
    },
    tag: {
      type: String,
      required: !1,
      default: () => Na.value.propsDefault.tag
    },
    text: {
      type: String,
      required: !1,
      default: () => Na.value.propsDefault.text
    },
    textAlign: {
      type: String,
      required: !1,
      default: () => Na.value.propsDefault.textAlign,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    }
  },
  setup(e) {
    const {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    } = HT(e);
    return {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    };
  },
  render() {
    const e = this.textAlign === "left", t = c(Ae, {
      alwaysTranslate: this.alwaysTranslate,
      tag: "span",
      class: [
        "a_cloak__text",
        e ? "a_cloak__text_left" : "a_cloak__text_right",
        this.classTextSize
      ],
      text: this.text,
      extra: this.extra
    });
    return [
      this.$slots.default && this.$slots.default(),
      this.isLoading && c(
        this.tag,
        {
          ...this.$attrs,
          role: "status",
          tabindex: -1,
          class: ["a_loading", this.classAlign]
        },
        [
          c("div", {
            class: ["a_cloak__box", this.classForBox]
          }, [
            e ? t : "",
            c(fl, {
              alwaysTranslate: this.alwaysTranslate,
              class: [
                "a_cloak__spinner",
                this.spinnerClass
              ],
              "aria-hidden": "true",
              safeHtml: this.spinnerSafeHtml,
              size: this.size,
              tag: this.spinnerTag
            }),
            e ? "" : t
          ])
        ]
      )
    ];
  }
};
function Hm({
  menuId: e = "a_menu_",
  panelId: t = ""
}) {
  const r = `${`#${na({ menuId: e, id: t, suffix: "panel" })}`} .a_menu__listview a`;
  setTimeout(() => {
    const s = document.querySelector(r);
    s && s.focus();
  });
}
function na({
  menuId: e = "a_menu_",
  id: t = "",
  suffix: n = ""
}) {
  return `${e}_${t}_${n}`;
}
const Yi = B({});
function Vm(e) {
  const t = d(e, "menuId"), n = d(e, "canChangeBodyClass"), r = () => {
    n.value && (document.body.classList.add("a_menu__wrapper_open"), document.body.classList.remove("a_menu__wrapper_close")), Yi.value[t.value] = !0;
  }, s = () => {
    n.value && (document.body.classList.add("a_menu__wrapper_close"), document.body.classList.remove("a_menu__wrapper_open")), Yi.value[t.value] = !1;
  }, l = () => {
    n.value && (document.body.classList.remove("a_menu__wrapper_close"), document.body.classList.remove("a_menu__wrapper_open"));
  }, o = ({ isOpen: E } = {}) => {
    we(E) ? Yi.value[t.value] ? s() : r() : E ? r() : s();
  }, u = _(() => Yi.value[t.value]), h = () => {
    o(), u.value && Hm({
      menuId: t.value,
      panelId: ""
    });
  };
  return {
    btnToggleTitle: _(() => Yi.value[t.value] ? "_A_MENU_2_BTN_CLOSE_" : "_A_MENU_2_BTN_OPEN_"),
    closeMenu: s,
    isMenuOpen: u,
    removeBodyClasses: l,
    toggleMenu: o,
    toggleMenuObButton: h
  };
}
const Pk = {
  name: "AMenuButtonToggle",
  props: {
    buttonToggleProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canChangeBodyClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    class: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    insideMenu: {
      type: Boolean,
      required: !1
    },
    menuId: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      btnToggleTitle: t,
      isMenuOpen: n,
      toggleMenuObButton: r
    } = Vm(e);
    return {
      btnToggleTitle: t,
      isMenuOpen: n,
      toggleMenuObButton: r
    };
  },
  render() {
    return c(ft, {
      class: ["a_menu__btn_toggle", this.class, {
        a_menu__btn_toggle_open: this.isMenuOpen,
        a_menu__btn_toggle_close: !this.isMenuOpen,
        a_menu__btn_toggle_inside_menu: this.insideMenu,
        a_menu__btn_toggle_outside_menu: !this.insideMenu
      }],
      type: "button",
      title: this.btnToggleTitle,
      textScreenReader: this.btnToggleTitle,
      onClick: this.toggleMenuObButton,
      ...this.buttonToggleProps
    }, () => [
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_1 aloha_element__ml_0"
      }),
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_2 aloha_element__ml_0"
      }),
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_3 aloha_element__ml_0"
      })
    ]);
  }
};
function xk() {
  const e = de("togglePanel"), t = ({ parentId: r }) => {
    e({ parentId: r });
  };
  return {
    goBack: t,
    goBackKeydown: ({ $event: r, parentId: s }) => {
      (r.keyCode === X.enter || r.keyCode === X.space) && (t({ parentId: s }), r.stopPropagation(), r.preventDefault());
    }
  };
}
function Fk(e) {
  const t = d(e, "dataKeyById"), n = d(e, "panelParentsOpen");
  return {
    breadcrumbsItems: _(() => {
      if (!n.value.length)
        return [];
      const s = [];
      let l = "_A_MENU_2_MAIN_MENU_";
      return z(n.value, (o, u) => {
        s.push({
          isFirst: u === 0,
          label: l,
          panelParentId: o
        }), l = fe(t.value, `${o}.${St}`);
      }), s.push({
        panelParentId: void 0,
        label: l
      }), s;
    })
  };
}
function Mk({
  breadcrumbsItems: e = _(() => []),
  breadcrumbsTruncatedOffset: t = B(0)
}) {
  const n = B([]), r = B([]), s = B(0), l = B(void 0), o = B(!1), u = B(0), h = B([]), A = () => {
    if (l.value < 0) {
      o.value = !0;
      return;
    }
    r.value.unshift(e.value[l.value]), l.value--;
  }, E = () => {
    n.value = e.value.slice(0, l.value + 1), o.value = !0;
  }, p = () => {
    if (r.value.length <= 1 || u.value + t.value <= s.value) {
      E();
      return;
    }
    r.value.splice(0, 1), l.value++, u.value -= ci(h.value), h.value.pop(), p();
  };
  return {
    breadcrumbsItemsDropdown: n,
    breadcrumbsItemsTruncated: r,
    isRenderedAll: o,
    renderItem: (b) => {
      const L = b.offsetWidth;
      u.value += L, h.value.push(L), u.value >= s.value ? p() : A();
    },
    renderParent: (b) => {
      l.value = e.value.length - 1, A(), s.value = b.offsetWidth;
    }
  };
}
const Nl = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots" viewBox="0 0 16 16">
  <path d="M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3"/>
</svg>`, qk = {
  name: "AMenuBreadcrumbs",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !0
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    isPanelMain: {
      type: Boolean,
      required: !1
    },
    dataKeyById: {
      type: Object,
      required: !0
    },
    panelParentsOpen: {
      type: Array,
      required: !0
    }
  },
  setup(e) {
    const t = de("breadcrumbsTruncatedOffset"), {
      breadcrumbsItems: n
    } = Fk(e), {
      goBack: r,
      goBackKeydown: s
    } = xk(), {
      breadcrumbsItemsDropdown: l,
      breadcrumbsItemsTruncated: o,
      isRenderedAll: u,
      renderItem: h,
      renderParent: A
    } = Mk({
      breadcrumbsItems: n,
      breadcrumbsTruncatedOffset: t
    });
    return {
      breadcrumbsItems: n,
      breadcrumbsItemsDropdown: l,
      breadcrumbsItemsTruncated: o,
      goBack: r,
      goBackKeydown: s,
      isRenderedAll: u,
      renderItem: h,
      renderParent: A
    };
  },
  render() {
    if (this.isSearchActive || this.isPanelMain)
      return null;
    if (this.isBreadcrumbsTruncated)
      return c(Ae, {
        ariaLabel: "_A_MENU_2_BREADCRUMB_",
        class: "a_menu__breadcrumb a_menu__breadcrumb_secondary",
        tag: "nav"
      }, () => [
        Pt(c("ul", {
          class: [
            "a_menu__breadcrumb__ul a_menu__breadcrumb__ul_truncated"
          ]
        }, [
          this.breadcrumbsItemsDropdown.length > 0 ? c("li", {
            class: "a_menu__breadcrumbs__item"
          }, [
            c(sa, {
              buttonClass: "a_btn a_btn_secondary a_btn_small a_menu__breadcrumb__ul_truncated__btn",
              buttonIconLeft: Nl,
              buttonTextScreenReader: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
              buttonTitle: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
              dropdownClass: "a_menu__breadcrumb__ul_truncated__dropdown",
              hasCaret: !1,
              inBody: !0,
              ...this.breadcrumbsTruncatedDropdownProps
            }, {
              dropdown: () => [
                this.breadcrumbsItemsDropdown.map((e) => {
                  const t = e.panelParentId ? {
                    tag: "a",
                    class: [
                      "a_menu__breadcrumbs__link",
                      this.breadcrumbsLinkClass
                    ],
                    role: "button",
                    tabindex: 0,
                    onClick: () => this.goBack({ parentId: e.panelParentId }),
                    onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
                  } : {
                    class: "a_menu__breadcrumbs__link",
                    tag: "strong"
                  };
                  return c("li", {
                    key: e.panelParentId,
                    class: "a_menu__breadcrumbs__item"
                  }, [
                    c(ft, {
                      text: e.label,
                      title: e.label,
                      ...t
                    }),
                    c("span", {
                      class: "a_menu__breadcrumbs__item__divider"
                    }, "/")
                  ]);
                })
              ]
            })
          ]) : "",
          this.breadcrumbsItemsTruncated.map((e) => {
            const t = e.panelParentId ? {
              tag: "a",
              class: [
                "a_menu__breadcrumbs__link",
                this.breadcrumbsLinkClass
              ],
              role: "button",
              tabindex: 0,
              onClick: () => this.goBack({ parentId: e.panelParentId }),
              onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
            } : {
              class: "a_menu__breadcrumbs__link",
              tag: "strong"
            };
            return Pt(c("li", {
              key: e.panelParentId,
              class: "a_menu__breadcrumbs__item"
            }, [
              !e.isFirst && c("span", {
                class: "a_menu__breadcrumbs__item__divider"
              }, "/"),
              c(ft, {
                text: e.label,
                title: e.label,
                ...t
              })
            ]), [
              [ol, { mounted: this.renderItem }]
            ]);
          })
        ]), [
          [ol, { mounted: this.renderParent }]
        ])
      ]);
    if (!this.isBreadcrumbsTruncated)
      return c(Ae, {
        ariaLabel: "_A_MENU_2_BREADCRUMB_",
        class: "a_menu__breadcrumb a_menu__breadcrumb_secondary",
        tag: "nav"
      }, () => [
        c("ul", {
          class: [
            "a_menu__breadcrumb__ul"
          ]
        }, [
          this.breadcrumbsItems.map((e) => {
            const t = e.panelParentId ? {
              tag: "a",
              class: [
                "a_menu__breadcrumbs__link",
                this.breadcrumbsLinkClass
              ],
              role: "button",
              tabindex: 0,
              onClick: () => this.goBack({ parentId: e.panelParentId }),
              onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
            } : {
              class: "a_menu__breadcrumbs__link",
              tag: "strong"
            };
            return c("li", {
              key: e.panelParentId,
              class: "a_menu__breadcrumbs__item"
            }, [
              !e.isFirst && c("span", {
                class: "a_menu__breadcrumbs__item__divider"
              }, "/"),
              c(ft, {
                text: e.label,
                title: e.label,
                ...t
              })
            ]);
          })
        ])
      ]);
  }
};
function $k(e, {
  id: t = _(() => {
  })
}) {
  const n = d(e, "isLinkInSearchPanel"), r = de("activeRoutesIds");
  return {
    isLinkActive: _(() => n.value ? !1 : r.value.indexOf(t.value) !== -1)
  };
}
function kk(e) {
  const t = d(e, "isLinkInSearchPanel"), n = d(e, "item"), r = d(e, "keyIcon"), s = _(() => n.value[Ke]), l = _(() => {
    if (!t.value)
      return fe(n.value, r.value);
  }), o = _(() => {
    const u = "a_menu__link__icon";
    return n.value.iconClass ? `{ CLASS } ${n.value.iconClass}` : u;
  });
  return {
    icon: l,
    iconClassLocal: o,
    id: s
  };
}
function Uk(e, {
  id: t = _(() => {
  })
}) {
  const n = d(e, "dataProParentChildren"), r = d(e, "item");
  return {
    countChildren: _(() => r.value.to ? 0 : n.value[t.value] && n.value[t.value].length)
  };
}
const hl = "_a_parent";
function Hk(e, {
  id: t = _(() => {
  })
}) {
  const n = d(e, "isLinkInSearchPanel"), r = d(e, "item"), s = de("clickMenuLink"), l = de("isPanelMain"), o = de("togglePanel"), u = () => {
    o({
      parentId: t.value,
      isLinkInSearchPanel: n.value,
      isPanelMain: l.value
    });
  };
  return {
    clickLink: ({ $event: E }) => {
      n.value && o({ parentId: r.value[hl], isLinkInSearchPanel: n.value }), s({ ctrlKey: E.ctrlKey, isPanelMain: l.value });
    },
    onKeydown: (E) => {
      (E.keyCode === X.enter || E.keyCode === X.space) && (u(), E.stopPropagation(), E.preventDefault());
    },
    openSubMenu: u
  };
}
function Vk(e, {
  id: t = _(() => {
  })
}) {
  const n = d(e, "menuId");
  return {
    linkId: _(() => na({
      menuId: n.value,
      id: t.value,
      suffix: "link"
    }))
  };
}
function Wk(e) {
  const t = d(e, "isLinkInSearchPanel"), n = d(e, "item"), r = d(e, "modelSearch"), {
    filterSearchHighlight: s
  } = Hn(), l = _(() => n.value[St]);
  return {
    label: _(() => {
      const u = l.value;
      return t.value ? s(u, { searchModel: r.value }) : u;
    }),
    labelWithoutFilter: l
  };
}
function Gk(e) {
  const t = d(e, "item"), n = _(() => !!t.value.disabled), r = _(() => n.value ? "#" : t.value.to);
  return {
    isItemLink: _(() => !!t.value.to),
    isLinkDisabled: n,
    toLocal: r
  };
}
function Kk(e, {
  id: t = _(() => "")
}) {
  const n = de("isChildPanelOpen"), r = de("isMenuOpen"), s = de("isPanelMain"), l = de("panelParentsOpen"), o = _(() => s.value && l.value[0] === t.value), u = _(() => !r.value && n.value && l.value.indexOf(t.value) !== -1);
  return {
    isLinkOpen: _(() => o.value || u.value),
    isLinkOpenPanelMain: o,
    isLinkOpenPanelSecondaryMenuClose: u
  };
}
function jk(e) {
  const t = d(e, "item"), n = de("keySlot");
  return {
    currentSlot: _(() => {
      if (n.value)
        return fe(t.value, n.value);
    })
  };
}
function zk(e) {
  const t = d(e, "isLinkInSearchPanel"), n = d(e, "isPanelOpen"), r = de("isMenuOpen"), s = de("isPanelMain", !1), l = de("isChildPanelOpen", !1);
  return {
    tabindex: _(() => t.value || s.value || n.value || !r.value && l.value ? 0 : -1)
  };
}
function Yk(e, {
  isItemLink: t = _(() => !1),
  isLinkOpenPanelMain: n = _(() => !1),
  isLinkOpenPanelSecondaryMenuClose: r = _(() => !1),
  labelWithoutFilter: s = _(() => "")
}) {
  const l = d(e, "item"), o = _(() => !!l.value.isTitleHtml), u = _(() => n.value ? "_A_MENU_2_TO_MAIN_MENU_" : r.value ? [
    "_A_MENU_2_CLOSE_SUBMENU_",
    l.value.title || s.value
  ] : t.value ? l.value.title || s.value : [
    "_A_MENU_2_OPEN_SUBMENU_",
    l.value.title || s.value
  ]), h = _(() => ({
    minWidth: l.value.titleHtmlMinWidth,
    width: l.value.titleHtmlWidth,
    maxWidth: l.value.titleHtmlMaxWidth
  }));
  return {
    isTitleHtml: o,
    titleLocal: u,
    titleAttributes: h
  };
}
const Wm = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708"/>
</svg>`, jd = {
  name: "AMenuPanelLink",
  inject: [
    "isPanelMain",
    "showCountChildren"
  ],
  props: {
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    idsSearchVisible: {
      type: Object,
      required: !1,
      default: void 0
    },
    isLinkInSearchPanel: {
      type: Boolean,
      required: !1
    },
    isPanelOpen: {
      type: Boolean,
      required: !1
    },
    item: {
      type: Object,
      required: !0
    },
    keyIcon: {
      type: String,
      required: !1,
      default: void 0
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      currentSlot: t
    } = jk(e), {
      isItemLink: n,
      isLinkDisabled: r,
      toLocal: s
    } = Gk(e), {
      label: l,
      labelWithoutFilter: o
    } = Wk(e), {
      icon: u,
      iconClassLocal: h,
      id: A
    } = kk(e), {
      isLinkActive: E
    } = $k(e, {
      id: A
    }), {
      linkId: p
    } = Vk(e, {
      id: A
    }), {
      isLinkOpen: T,
      isLinkOpenPanelMain: S,
      isLinkOpenPanelSecondaryMenuClose: b
    } = Kk(e, {
      id: A
    }), {
      tabindex: L
    } = zk(e), {
      countChildren: I
    } = Uk(e, {
      id: A
    }), {
      isTitleHtml: v,
      titleLocal: R,
      titleAttributes: g
    } = Yk(e, {
      isItemLink: n,
      isLinkOpenPanelMain: S,
      isLinkOpenPanelSecondaryMenuClose: b,
      labelWithoutFilter: o
    }), {
      clickLink: D,
      onKeydown: w,
      openSubMenu: M
    } = Hk(e, {
      id: A
    });
    return {
      clickLink: D,
      countChildren: I,
      currentSlot: t,
      icon: u,
      iconClassLocal: h,
      isItemLink: n,
      isLinkActive: E,
      isLinkDisabled: r,
      isLinkOpen: T,
      isTitleHtml: v,
      label: l,
      labelWithoutFilter: o,
      linkId: p,
      onKeydown: w,
      openSubMenu: M,
      tabindex: L,
      titleAttributes: g,
      titleLocal: R,
      toLocal: s
    };
  },
  render() {
    return c("li", {
      class: "a_menu__listitem"
    }, [
      this.isLinkInSearchPanel && c("span", {
        class: "a_menu__breadcrumbs__item__divider",
        ariaHidden: !0
      }, "/"),
      this.currentSlot && this.$slots[this.currentSlot] ? this.$slots[this.currentSlot]({
        id: this.linkId,
        item: this.item,
        clickLink: this.clickLink,
        countChildren: this.countChildren,
        isLinkActive: this.isLinkActive,
        isLinkOpen: this.isLinkOpen,
        isPanelOpen: this.isPanelOpen,
        isPanelMain: this.isPanelMain,
        label: this.label,
        labelWithoutFilter: this.labelWithoutFilter,
        onKeydown: this.onKeydown,
        openSubMenu: this.openSubMenu,
        tabindex: this.tabindex
      }) : this.isItemLink ? c(Fu, {
        id: this.linkId,
        class: ["a_menu__link a_menu__link__text_truncated", {
          a_menu__link_disabled: this.isLinkDisabled,
          a_menu__link_active: this.isLinkActive,
          a_menu__link_panel_main: this.isPanelMain
        }],
        html: this.label,
        iconClass: this.iconClassLocal,
        iconLeft: this.icon,
        isTitleHtml: this.isTitleHtml,
        tabindex: this.tabindex,
        textAriaHidden: !0,
        textClass: "a_menu__link__text aloha_element__ml_0",
        textScreenReader: this.titleLocal,
        title: this.titleLocal,
        titleAttributes: this.titleAttributes,
        titlePlacement: "right",
        to: this.toLocal,
        onClick: this.clickLink
      }) : c(ft, {
        id: this.linkId,
        class: [
          "a_menu__link a_menu__link_btn a_menu__link__text_truncated",
          {
            a_menu__link_open: this.isLinkOpen,
            a_menu__link_active: this.isLinkActive,
            a_menu__link_panel_main: this.isPanelMain
          }
        ],
        html: this.label,
        iconClass: this.iconClassLocal,
        iconLeft: this.icon,
        isTitleHtml: this.isTitleHtml,
        role: "button",
        tabindex: this.tabindex,
        tag: "a",
        textAriaHidden: !0,
        textClass: "a_menu__link__text aloha_element__ml_0",
        textScreenReader: this.titleLocal,
        title: this.titleLocal,
        titleAttributes: this.titleAttributes,
        titlePlacement: "right",
        onClick: this.openSubMenu,
        onKeydown: this.onKeydown
      }, () => [
        c("span", {
          class: "a_menu__link__counter aloha_element__ml_0"
        }, [
          this.showCountChildren && c("span", {
            ariaHidden: !0
          }, this.countChildren),
          c(ut, {
            class: "a_menu__link__counter__icon",
            icon: Wm
          })
        ])
      ])
    ]);
  }
};
function Xk(e) {
  const t = d(e, "groupItems");
  return {
    hasItems: _(() => t.value.length > 0)
  };
}
function Zk(e) {
  const t = d(e, "groupIndex"), n = d(e, "groupLabel"), r = d(e, "menuId"), s = d(e, "paneIndex"), l = _(() => `${r.value}_${s.value}_${t.value}_label`);
  return {
    ariaLabelledbyObj: _(() => n.value ? {
      "aria-labelledby": l.value
    } : {}),
    labelId: l
  };
}
const QE = {
  name: "AMenuPanelGroup",
  props: {
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    groupIndex: {
      type: [Number, String],
      required: !0
    },
    groupItems: {
      type: Array,
      required: !0
    },
    groupLabel: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    isPanelOpen: {
      type: Boolean,
      required: !1
    },
    keyIcon: {
      type: String,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    paneIndex: {
      type: [Number, String],
      required: !0
    }
  },
  setup(e) {
    const {
      hasItems: t
    } = Xk(e), {
      ariaLabelledbyObj: n,
      labelId: r
    } = Zk(e);
    return {
      ariaLabelledbyObj: n,
      hasItems: t,
      labelId: r
    };
  },
  render() {
    return this.hasItems ? this.groupLabel ? c("li", {
      ...this.ariaLabelledbyObj
    }, [
      c("div", {
        id: this.labelId,
        class: "a_menu__list_header"
      }, this.groupLabel),
      c("ul", {
        class: "a_menu__listview"
      }, [
        this.groupItems.map((e, t) => c(jd, {
          key: t,
          item: e,
          dataProParentChildren: this.dataProParentChildren,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId
        }, this.$slots))
      ])
    ]) : this.groupItems.map((e, t) => c(jd, {
      key: t,
      item: e,
      dataProParentChildren: this.dataProParentChildren,
      isPanelOpen: this.isPanelOpen,
      keyIcon: this.keyIcon,
      menuId: this.menuId
    }, this.$slots)) : null;
  }
};
function Jk(e) {
  const t = d(e, "panelItems"), n = d(e, "keyGroup"), r = _(() => {
    const l = [], o = {};
    return z(t.value, (u) => {
      const h = fe(u, n.value);
      ie(h) ? l.push(u) : (o[h] = o[h] || [], o[h].push(u));
    }), {
      withoutGroup: l,
      withGroup: o
    };
  });
  return {
    isItemsWithoutGroup: _(() => r.value.withoutGroup.length > 0),
    itemsGroup: r
  };
}
function Qk(e, {
  openedLevelIndex: t = _(() => 0)
}) {
  const n = d(e, "dataKeyById"), r = d(e, "isPanelMain"), s = d(e, "parentId"), l = de("isMenuOpen"), o = _(() => !r.value && !l.value && t.value === 0), u = _(() => fe(n.value, `${s.value}.${St}`));
  return {
    isHeaderPanelVisible: o,
    parentLabel: u
  };
}
function eU(e) {
  const t = d(e, "menuId"), n = d(e, "parentId");
  return {
    panelId: _(() => na({
      menuId: t.value,
      id: n.value,
      suffix: "panel"
    }))
  };
}
function tU(e) {
  const t = d(e, "panelParentsOpen"), n = d(e, "parentId"), r = _(() => t.value.indexOf(n.value)), s = _(() => {
    if (r.value !== -1)
      return `z-index: ${r.value + 2};`;
  });
  return {
    openedLevelIndex: r,
    styleZIndex: s
  };
}
function nU(e, {
  openedLevelIndex: t = _(() => -1)
}) {
  const n = d(e, "isPanelMain"), r = d(e, "isSearchActive"), s = d(e, "panelParentsOpen"), l = _(() => r.value ? !1 : n.value ? s.value.length === 0 : s.value.length ? t.value === s.value.length - 1 : !1);
  return {
    isChildPanelOpen: _(() => {
      if (n.value)
        return s.value.length > 0;
      const u = t.value;
      return u !== -1 && u !== s.value.length - 1;
    }),
    isPanelOpen: l
  };
}
const ep = {
  name: "AMenuPanel",
  props: {
    attributesBlockerClick: {
      type: Object,
      required: !0
    },
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataKeyById: {
      type: Object,
      required: !0
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !1
    },
    isPanelMain: {
      type: Boolean,
      required: !1
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    keyGroup: {
      type: String,
      required: !0
    },
    keyIcon: {
      type: String,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    paneIndex: {
      type: [Number, String],
      required: !0
    },
    panelItems: {
      type: Array,
      required: !0
    },
    panelParentsOpen: {
      type: Array,
      required: !0
    },
    parentId: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = d(e, "isPanelMain"), {
      panelId: n
    } = eU(e), {
      openedLevelIndex: r,
      styleZIndex: s
    } = tU(e), {
      isItemsWithoutGroup: l,
      itemsGroup: o
    } = Jk(e), {
      isChildPanelOpen: u,
      isPanelOpen: h
    } = nU(e, {
      openedLevelIndex: r
    }), {
      isHeaderPanelVisible: A,
      parentLabel: E
    } = Qk(e, {
      openedLevelIndex: r
    });
    return tt("isChildPanelOpen", u), tt("isPanelMain", t), {
      isChildPanelOpen: u,
      isHeaderPanelVisible: A,
      isItemsWithoutGroup: l,
      isPanelOpen: h,
      itemsGroup: o,
      panelId: n,
      parentLabel: E,
      styleZIndex: s
    };
  },
  render() {
    return c("div", {
      id: this.panelId,
      class: ["a_menu__panel", {
        a_menu__panel_main: !this.isSearchActive && this.isPanelMain,
        a_menu__panel_secondary: !this.isPanelMain,
        a_menu__panel_opened: !this.isSearchActive && this.isPanelOpen,
        a_menu__panel_parent: !this.isSearchActive && this.isChildPanelOpen
      }],
      style: this.styleZIndex
    }, [
      !this.isPanelMain && this.isPanelOpen && c(qk, {
        breadcrumbsLinkClass: this.breadcrumbsLinkClass,
        breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
        dataKeyById: this.dataKeyById,
        isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
        isPanelMain: this.isPanelMain,
        isSearchActive: this.isSearchActive,
        panelParentsOpen: this.panelParentsOpen
      }),
      this.isHeaderPanelVisible && c("div", {
        class: "a_menu__panel_header"
      }, [
        c(Ae, {
          class: "a_menu__panel_header__text",
          html: this.parentLabel,
          tag: "strong"
        })
      ]),
      c("ul", {
        class: "a_menu__listview"
      }, [
        this.isItemsWithoutGroup && c(QE, {
          dataProParentChildren: this.dataProParentChildren,
          groupItems: this.itemsGroup.withoutGroup,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId,
          paneIndex: this.paneIndex,
          groupIndex: "00"
        }, this.$slots),
        Object.keys(this.itemsGroup.withGroup).map((e, t) => c(QE, {
          key: e,
          dataProParentChildren: this.dataProParentChildren,
          groupIndex: t,
          groupItems: this.itemsGroup.withGroup[e],
          groupLabel: e,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId,
          paneIndex: this.paneIndex
        }, this.$slots))
      ])
    ]);
  }
}, zd = "_a_breadcrumbs";
function rU(e) {
  const t = d(e, "item");
  return {
    breadcrumbsItems: _(() => {
      const r = [
        {
          label: "_A_MENU_2_MAIN_MENU_",
          isFirst: !0,
          parentIds: []
        }
      ], s = [];
      return z(t.value[zd], (l) => {
        s.push(l.parentId), r.push({
          label: l.label,
          parentId: l.parentId,
          parentIds: [
            ...s
          ]
        });
      }), r;
    })
  };
}
function aU() {
  const e = de("togglePanel"), t = ({ parentIds: r }) => {
    e({ parentIds: r });
  };
  return {
    goTo: t,
    goToKeydown: ({ $event: r, parentIds: s }) => {
      (r.keyCode === X.enter || r.keyCode === X.space) && (t({ parentIds: s }), r.stopPropagation(), r.preventDefault());
    }
  };
}
const sU = {
  name: "AMenuSearchPanelBreadcrumbs",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    item: {
      type: Object,
      required: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      breadcrumbsItems: t
    } = rU(e), {
      goTo: n,
      goToKeydown: r
    } = aU();
    return {
      breadcrumbsItems: t,
      goTo: n,
      goToKeydown: r
    };
  },
  render() {
    return c("li", {}, [
      c("ul", {
        class: "a_menu__breadcrumb__ul a_menu__breadcrumb__ul_search"
      }, [
        c("li", {}, [
          c(sa, {
            buttonClass: "a_btn a_btn_secondary a_btn_small a_menu__breadcrumb__ul_truncated__btn",
            buttonIconLeft: Nl,
            buttonTextScreenReader: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
            buttonTitle: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
            dropdownClass: "a_menu__breadcrumb__ul_truncated__dropdown",
            hasCaret: !1,
            inBody: !0,
            ...this.breadcrumbsTruncatedDropdownProps
          }, {
            dropdown: () => [
              this.breadcrumbsItems.map((e) => c("li", {
                key: e.parentId,
                class: "a_menu__breadcrumbs__item"
              }, [
                c(ft, {
                  text: e.label,
                  title: e.label,
                  tag: "a",
                  class: [
                    "a_menu__breadcrumbs__link",
                    this.breadcrumbsLinkClass
                  ],
                  role: "button",
                  tabindex: 0,
                  onClick: () => this.goTo({ parentIds: e.parentIds }),
                  onKeydown: (t) => this.goToKeydown({ $event: t, parentIds: e.parentIds })
                }),
                c("span", {
                  class: "a_menu__breadcrumbs__item__divider"
                }, "/")
              ]))
            ]
          })
        ]),
        c(jd, {
          item: this.item,
          dataProParentChildren: this.dataProParentChildren,
          isLinkInSearchPanel: !0,
          modelSearch: this.modelSearch,
          menuId: this.menuId
        }, this.$slots)
      ])
    ]);
  }
};
function iU(e) {
  const t = d(e, "itemsWithSearch"), n = d(e, "isSearchActive");
  return {
    isNoneFound: _(() => n.value ? t.value.length === 0 : !1)
  };
}
function lU(e, {
  isNoneFound: t = _(() => !1)
}) {
  return {
    textLocal: _(() => t.value ? "_A_MENU_2_SEARCH_NONE_FOUND_" : "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_")
  };
}
const oU = {
  name: "AMenuSearchPanel",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    itemsWithSearch: {
      type: Array,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      isNoneFound: t
    } = iU(e), {
      textLocal: n
    } = lU(e, {
      isNoneFound: t
    });
    return tt("isPanelMain", !1), tt("isChildPanelOpen", !1), {
      isNoneFound: t,
      textLocal: n
    };
  },
  render() {
    return this.isSearchActive ? c("div", {
      class: "a_menu__panels__main a_menu__panel_search"
    }, [
      c("div", {
        class: "a_menu__navbar_top_sub"
      }, [
        c(Ae, {
          class: "a_menu__navbar_top_sub__text",
          tag: "strong",
          text: this.textLocal,
          extra: {
            count: this.itemsWithSearch.length
          }
        })
      ]),
      !this.isNoneFound && c("div", {
        class: "a_vertical_scroll"
      }, [
        c("div", {
          class: "a_scroll_content"
        }, [
          c("ul", {
            class: "a_menu__listview"
          }, [
            this.itemsWithSearch.map((e) => c(sU, {
              key: e[Ke],
              breadcrumbsLinkClass: this.breadcrumbsLinkClass,
              breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
              dataProParentChildren: this.dataProParentChildren,
              item: e,
              menuId: this.menuId,
              modelSearch: this.modelSearch
            }, this.$slots))
          ])
        ])
      ])
    ]) : null;
  }
};
function uU({
  onScroll: e = () => {
  },
  scrollContentRef: t = B(void 0)
}) {
  return {
    addScrollListener: () => {
      t.value.addEventListener("scroll", e);
    },
    destroyScrollListener: () => {
      t.value.removeEventListener("scroll", e);
    }
  };
}
function _U({
  checkScroll: e = () => {
  },
  containerRef: t = B(void 0),
  scrollContentChildRef: n = B(void 0)
}) {
  const r = B(void 0), s = B(!1), l = B(void 0), o = B(!1), u = B(0), h = B(0), A = (P) => {
    const C = P[0].contentRect.height;
    (u.value === 0 || u.value !== C) && (u.value = C, e());
  }, E = (P) => {
    const C = P[0].contentRect.height;
    (h.value === 0 || h.value !== C) && (h.value = C, e());
  }, p = () => {
    r.value = new ResizeObserver(
      il((P) => A(P), 300)
    );
  }, T = () => {
    l.value = new ResizeObserver(
      il((P) => E(P), 300)
    );
  }, S = () => {
    s.value || (r.value.observe(t.value), s.value = !0);
  }, b = () => {
    s.value && (r.value.unobserve(t.value), s.value = !1);
  }, L = () => {
    r.value.disconnect();
  }, I = () => {
    o.value || (l.value.observe(n.value), o.value = !0);
  }, v = () => {
    o.value && (l.value.unobserve(n.value), o.value = !1);
  }, R = () => {
    l.value.disconnect();
  };
  return {
    connectObservers: () => {
      S(), I();
    },
    destroyObservers: () => {
      L(), R();
    },
    disconnectObservers: () => {
      b(), v();
    },
    initObservers: () => {
      p(), T();
    }
  };
}
function dU(e) {
  const t = d(e, "scrollDistance"), n = B(!1), r = B(!1), s = B(void 0), l = B(!1), o = B(void 0), u = B(void 0), h = () => {
    const T = o.value;
    r.value = T.scrollTop > 0, n.value = T.scrollTop < T.scrollHeight - T.clientHeight;
  }, A = () => {
    l.value = o.value.scrollHeight > o.value.clientHeight, l.value && h();
  };
  return {
    canScrollDown: n,
    canScrollUp: r,
    checkScroll: A,
    containerRef: s,
    hasScroll: l,
    onScroll: h,
    scrollContentChildRef: u,
    scrollContentRef: o,
    scrollDown: () => {
      o.value.scrollTop += t.value, A();
    },
    scrollUp: () => {
      o.value.scrollTop -= t.value, A();
    }
  };
}
const cU = {
  name: "AVerticalScroll",
  props: {
    btnDownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnUpProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    scrollContentAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    scrollDistance: {
      type: Number,
      required: !1,
      default: 100
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    tagScrollContent: {
      type: String,
      required: !1,
      default: "div"
    }
  },
  setup(e) {
    const t = d(e, "disabled"), {
      canScrollDown: n,
      canScrollUp: r,
      checkScroll: s,
      containerRef: l,
      hasScroll: o,
      onScroll: u,
      scrollContentChildRef: h,
      scrollContentRef: A,
      scrollDown: E,
      scrollUp: p
    } = dU(e), {
      connectObservers: T,
      destroyObservers: S,
      disconnectObservers: b,
      initObservers: L
    } = _U({
      checkScroll: s,
      containerRef: l,
      scrollContentChildRef: h
    }), {
      addScrollListener: I,
      destroyScrollListener: v
    } = uU({
      onScroll: u,
      scrollContentRef: A
    });
    return Vr(() => {
      L(), t.value || (T(), I());
    }), Ot(() => {
      S(), v();
    }), rt(t, (R) => {
      R ? (b(), v()) : (T(), I());
    }), {
      canScrollDown: n,
      canScrollUp: r,
      containerRef: l,
      hasScroll: o,
      scrollContentChildRef: h,
      scrollContentRef: A,
      scrollDown: E,
      scrollUp: p
    };
  },
  render() {
    return c(this.tag, {
      ref: "containerRef",
      class: [
        "a_vertical_scroll",
        {
          a_vertical_scroll_scrollable: this.hasScroll && !this.disabled
        }
      ]
    }, [
      c("div", {
        class: "a_vertical_scroll__btn__wrapper a_vertical_scroll__btn__wrapper_up"
      }, [
        c(ft, {
          class: "a_btn a_btn_transparent_secondary a_btn_small a_vertical_scroll__btn a_vertical_scroll__btn_up",
          iconLeft: Vc,
          disabled: !this.canScrollUp,
          tabindex: -1,
          title: "_A_VERTICAL_SCROLL_BTN_UP_TITLE_",
          textScreenReader: "_A_VERTICAL_SCROLL_BTN_UP_TITLE_",
          onClick: this.scrollUp,
          ...this.btnUpProps
        })
      ]),
      c(this.tagScrollContent, {
        ref: "scrollContentRef",
        class: "a_scroll_content",
        ...this.scrollContentAttributes
      }, [
        c("div", {
          ref: "scrollContentChildRef"
        }, [
          this.$slots.default && this.$slots.default()
        ])
      ]),
      c("div", {
        class: "a_vertical_scroll__btn__wrapper a_vertical_scroll__btn__wrapper_down"
      }, [
        c(ft, {
          class: "a_btn a_btn_transparent_secondary a_btn_small a_vertical_scroll__btn a_vertical_scroll__btn_down",
          iconLeft: mi,
          disabled: !this.canScrollDown,
          title: "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_",
          textScreenReader: "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_",
          tabindex: -1,
          onClick: this.scrollDown,
          ...this.btnDownProps
        })
      ])
    ]);
  }
};
function fU(e, {
  closeAllPanels: t = () => {
  }
}) {
  const n = d(e, "isBlockerClickable"), r = () => {
    t();
  };
  return {
    attributesBlockerClick: _(() => {
      const l = {};
      return n.value && (l.onClick = r, l.class = "a_menu__blocker a_menu_clickable"), l;
    })
  };
}
function hU(e, {
  isMenuOpen: t = _(() => !1),
  isMobileWidth: n = B(void 0),
  toggleMenu: r = () => {
  }
}) {
  const s = d(e, "isBackdropMobileClickable"), l = d(e, "useBackdropMobile"), o = _(() => l.value && t.value && n.value), u = () => {
    r({
      isOpen: !1
    });
  };
  return {
    clickAttributesBackdrop: _(() => s.value ? {
      onClick: u
    } : {}),
    isBackdropVisible: o
  };
}
function AU(e, {
  dataKeyById: t = _(() => ({})),
  dataProParent: n = _(() => ({
    main: [],
    children: {}
  })),
  isMenuLinkClicked: r = B(!1),
  isMenuOpen: s = _(() => !1),
  panelParentsOpen: l = B([])
}) {
  const o = d(e, "compareUrlCallback"), h = mR().appContext.config.globalProperties.$router, A = B([]), E = _(() => h.currentRoute), p = ({ route: L = {}, ids: I = [] }) => {
    const v = L[hl];
    return v && (I.unshift(v), p({ route: t.value[v], ids: I })), I;
  }, T = ({ routerFullPath: L, route: I }) => {
    const {
      fullPath: v
    } = h.resolve(I.to);
    return qe(o.value) ? o.value({
      fullPath: v,
      routerFullPath: L,
      item: I,
      currentRoute: h.currentRoute.value
    }) : v === L;
  }, S = ({ routes: L = [], routerFullPath: I = "/" }) => {
    let v = !1;
    return z(L, (R) => {
      if (R.to && T({ routerFullPath: I, route: R })) {
        const g = p({ route: R, ids: [] });
        return !r.value && s.value && (l.value = g), A.value = [...g, R[Ke]], v = !0, !1;
      }
    }), v;
  };
  return {
    activeRoutesIds: A,
    checkAllRoutes: () => {
      const L = h.currentRoute.value.fullPath;
      let I = !1;
      I = S({ routes: n.value.main, routerFullPath: L }), !I && (z(n.value.children, (v) => {
        if (I = S({ routes: v, routerFullPath: L }), I)
          return !1;
      }), r.value && (r.value = !1));
    },
    currentRoute: E
  };
}
const EU = "_a_children";
function pU(e) {
  const t = d(e, "data"), n = d(e, "isTranslated"), r = d(e, "keyChildren"), s = d(e, "keyId"), l = d(e, "keyLabel"), o = d(e, "keyLabelCallback"), u = ({ breadcrumbs: T = [], parentId: S, parentLabel: b }) => {
    const L = Wp(T);
    return S && L.push({
      parentId: S,
      label: b
    }), L;
  }, h = ({ dataClone: T, dataFlat: S = [], parentId: b, parentLabel: L, breadcrumbs: I = [] }) => (z(T, (v) => {
    v[Ke] = fe(v, s.value), v[hl] = b, v[zd] = u({
      breadcrumbs: I,
      parentId: b,
      parentLabel: L
    });
    let R;
    if (o.value ? R = o.value({ item: v }) : R = fe(v, l.value), n.value && Da(R) && (R = Bt({ placeholder: R })), v[St] = R, r.value) {
      const g = fe(v, r.value);
      g && g.length && (h({
        dataClone: g,
        parentId: v[Ke],
        parentLabel: v[St],
        dataFlat: S,
        breadcrumbs: v[zd]
      }), v[EU] = g);
    }
    S.push(v);
  }), S), A = _(() => {
    const T = pe(t.value);
    let S = [];
    return S = h({ dataClone: T, dataFlat: S }), S;
  }), E = _(() => {
    const T = [], S = {};
    return z(A.value, (b) => {
      const L = b[hl];
      ie(L) ? T.push(b) : (S[L] = S[L] || [], S[L].push(b));
    }), {
      main: T,
      children: S
    };
  });
  return {
    dataKeyById: _(() => Pa(A.value, Ke)),
    dataProParent: E
  };
}
function TU(e, {
  closeMenu: t = () => {
  },
  isMenuOpen: n = _(() => !1),
  isSubMenuOpen: r = _(() => !1),
  panelParentsOpen: s = B([]),
  togglePanel: l = () => {
  }
}) {
  const o = d(e, "menuId"), u = d(e, "useEscapeForMobile"), h = B(void 0), {
    isMobileWidth: A
  } = En(), E = _(() => !A.value && !n.value && r.value), p = (P) => {
    if (!h.value)
      return;
    const F = h.value.querySelectorAll(Ai);
    if (F.length === 0) {
      P.preventDefault();
      return;
    }
    const C = F[0], k = F[F.length - 1];
    P.shiftKey ? document.activeElement === C && (k.focus(), P.preventDefault()) : document.activeElement === k && (C.focus(), P.preventDefault());
  }, T = (P) => {
    u.value && (t(), P.preventDefault(), P.stopPropagation());
  }, S = (P) => {
    const F = P || window.$event;
    F.key === "Escape" || F.keyCode === X.escape ? T(P) : (F.key === "Tab" || F.keyCode === X.tab) && p(F);
  }, b = ({ panelIndex: P, panelId: F }) => {
    const C = na({
      menuId: o.value,
      id: F,
      suffix: "link"
    }), k = document.getElementById(C);
    if (k) {
      if (P > 0) {
        const W = s.value.slice(0, P);
        l({ parentIds: W, withoutFocus: !0 });
      }
      k.focus();
    }
  }, L = ({ panelIndex: P }) => {
    const F = s.value[P + 1], C = na({
      menuId: o.value,
      id: F,
      suffix: "panel"
    }), k = document.querySelectorAll(`#${C} a.a_menu__link`);
    k.length && k[0].focus();
  }, I = ({ panelId: P }) => {
    const F = na({
      menuId: o.value,
      id: P,
      suffix: "link"
    }), C = document.getElementById(F);
    C && (l({ parentIds: [], withoutFocus: !0 }), C.focus());
  }, v = ({ EVENT: P, PANEL_ELEMENT: F, panelIndex: C, panelId: k }) => {
    const W = F.querySelectorAll("a.a_menu__link");
    P.shiftKey ? document.activeElement === W[0] && (C > 0 ? b({ panelIndex: C, panelId: k }) : I({ panelId: k }), P.preventDefault()) : document.activeElement === W[W.length - 1] && (C < s.value.length - 1 ? L({ panelIndex: C }) : C > 0 ? b({ panelIndex: C, panelId: k }) : I({ panelId: k }), P.preventDefault());
  }, R = (P) => {
    const F = P || window.$event;
    (F.key === "Tab" || F.keyCode === X.tab) && z(s.value, (C, k) => {
      const W = na({
        menuId: o.value,
        id: C,
        suffix: "panel"
      }), K = document.getElementById(W);
      if (K && K.contains(document.activeElement))
        return v({ EVENT: F, PANEL_ELEMENT: K, panelIndex: k, panelId: C }), !1;
    });
  };
  return {
    isDesktopSubMenuVisibleWhenMenuClosed: E,
    menuRef: h,
    removeListenerForKeydownDesktop: () => {
      document.removeEventListener("keydown", R);
    },
    removeListenerForKeydownMobile: () => {
      document.removeEventListener("keydown", S);
    },
    setListenerForKeydownDesktop: () => {
      document.addEventListener("keydown", R);
    },
    setListenerForKeydownMobile: () => {
      A.value && document.addEventListener("keydown", S);
    }
  };
}
function mU(e, {
  closeAllPanels: t = () => {
  },
  isMenuOpen: n = _(() => !1),
  isMobileWidth: r = B(!1),
  resetSearch: s = () => {
  },
  toggleMenu: l = () => {
  }
}) {
  const o = d(e, "isBodyFocusAfterClick"), u = B(!1), h = () => {
    o.value && (document.body.hasAttribute("tabindex") ? document.body.focus() : (document.body.setAttribute("tabindex", "-1"), document.body.focus(), document.body.removeAttribute("tabindex")));
  };
  return {
    clickMenuLink: ({ ctrlKey: E = !1, isPanelMain: p = !1 } = {}) => {
      u.value = !0, s(), h(), (!n.value || p) && t(), r.value && !E && l({ isOpen: !1 });
    },
    isMenuLinkClicked: u
  };
}
function SU(e, {
  isMenuOpen: t = B(!1),
  toggleMenu: n = () => {
  }
}) {
  const r = d(e, "isBlockerClickable"), s = d(e, "menuId"), {
    isMobileWidth: l
  } = En(), o = _(() => l.value ? {
    role: "dialog",
    ariaModal: !0
  } : {}), u = _(() => `${s.value}_header`);
  return {
    attributesMenuClick: _(() => {
      const A = {};
      return r.value && !t.value && (A.onClick = () => n({ isOpen: !0 }), A.class = "a_menu a_menu_clickable"), A;
    }),
    attributesMobile: o,
    headerId: u
  };
}
function bU({
  isMenuOpen: e = _(() => !1),
  panelParentsOpen: t = B([])
}) {
  return {
    isLeastOnePanelOpenAndMenuClosed: _(() => !e.value && t.value.length > 0)
  };
}
function LU(e, {
  dataKeyById: t = _(() => ({})),
  resetSearch: n = () => {
  }
}) {
  const r = d(e, "menuId"), s = B([]), l = _(() => s.value.length > 0), o = ({ parentId: E, panelParentsOpenLocal: p }) => {
    if (E) {
      p.unshift(E);
      const T = t.value[E][hl];
      return o({ parentId: T, panelParentsOpenLocal: p });
    }
    return p;
  };
  return {
    closeAllPanels: () => {
      s.value = [], n();
    },
    isSubMenuOpen: l,
    panelParentsOpen: s,
    setDefaultMenu: () => {
      n(), s.value = [];
    },
    togglePanel: ({ parentIds: E, parentId: p, isLinkInSearchPanel: T, withoutFocus: S }) => {
      if (E)
        s.value = E;
      else {
        const b = s.value.indexOf(p), L = o({ parentId: p, panelParentsOpenLocal: [] });
        !T && b !== -1 && L.splice(-1, 1), s.value = L;
      }
      S || Hm({
        menuId: r.value,
        panelId: ci(s.value) || ""
      }), n();
    }
  };
}
function IU(e, {
  menuRef: t = B(void 0),
  isMenuOpen: n = _(() => !1),
  panelParentsOpen: r = B([])
}) {
  const s = d(e, "menuId"), l = B({}), o = B(!1), u = ({ id: L }) => {
    const I = na({
      menuId: s.value,
      id: L,
      suffix: "link"
    });
    return document.getElementById(I);
  }, h = ({ id: L }) => {
    const I = na({
      menuId: s.value,
      id: L,
      suffix: "panel"
    });
    return document.getElementById(I);
  }, A = (L) => {
    t.value.contains(L.target) || (r.value = []);
  }, E = () => {
    o.value || (o.value = !0, document.addEventListener("click", A));
  }, p = () => {
    o.value = !1, document.removeEventListener("click", A);
  }, T = (L) => {
    if (l.value[L]) {
      l.value[L](), delete l.value[L];
      const I = h({ id: L });
      I.style.removeProperty("left"), I.style.removeProperty("top");
    }
  };
  return {
    destroyPopover: () => {
      z(l.value, (L, I) => {
        T(I);
      }), p();
    },
    startPopper: () => {
      if (n.value)
        return;
      E();
      const L = Wp(l.value);
      z(r.value, (I) => {
        if (l.value[I]) {
          delete L[I];
          return;
        }
        const v = u({ id: I }), R = h({ id: I });
        !v || !R || (l.value[I] = bl(
          v,
          R,
          () => {
            !v || !R || vl(
              v,
              R,
              {
                placement: "right",
                middleware: [
                  Il(),
                  Ll({ limiter: vu() })
                ]
              }
            ).then(({ x: g, y: D }) => {
              Object.assign(R.style, {
                left: `${g}px`,
                top: `${D}px`
              });
            });
          }
        ));
      }), z(L, (I, v) => {
        T(v);
      });
    }
  };
}
function vU(e, {
  removeListenerForKeydownMobile: t = () => {
  },
  toggleMenu: n = () => {
  }
}) {
  const r = d(e, "isMenuOpenInitial"), s = B(!1), {
    isMobileWidth: l
  } = En(), o = (E) => {
    E ? n({ isOpen: !1 }) : (n({ isOpen: r.value }), t());
  };
  return {
    destroyEventBusUpdateViewOnResize: () => {
      Rt.$on("updateViewOnResize", o);
    },
    initEventBusUpdateViewOnResize: () => {
      Rt.$on("updateViewOnResize", o);
    },
    initMenuOpenOrClose: () => {
      l.value ? n({ isOpen: !1 }) : n({ isOpen: r.value }), iu().then(() => {
        s.value = !0;
      });
    },
    isMenuInitialized: s,
    isMobileWidth: l
  };
}
function yU(e, {
  dataKeyById: t = _(() => ({}))
}) {
  const n = d(e, "menuId"), r = B(""), s = _(() => `${n.value}_search`), l = (p) => {
    r.value = p;
  }, o = _(() => !!r.value), u = _(() => o.value ? "display: none;" : void 0), h = () => {
    o.value && (r.value = "");
  }, A = _(() => pu(r.value)), E = _(() => {
    const p = [];
    if (o.value) {
      const T = new RegExp(A.value, "gi");
      z(t.value, (S) => {
        `${S[St]}`.search(T) !== -1 && p.push(S);
      });
    }
    return p;
  });
  return {
    isSearchActive: o,
    itemsWithSearch: E,
    modelSearch: r,
    resetSearch: h,
    searchInputId: s,
    styleSearchPanelMain: u,
    updateModelSearch: l
  };
}
function gU({
  searchInputId: e = _(() => {
  }),
  toggleMenu: t = () => {
  }
}) {
  const n = () => {
    t({ isOpen: !0 }), window.isScrollDisabled || setTimeout(() => {
      aa({
        selector: `#${e.value}`
      });
    });
  };
  return {
    clickOnSearchBtn: n,
    keydownOnSearchBtn: (s) => {
      (s.keyCode === X.enter || s.keyCode === X.space) && (n(), s.stopPropagation(), s.preventDefault());
    }
  };
}
const RU = 34, OU = 20, Lde = {
  name: "AMenu",
  provide() {
    return {
      keySlot: _(() => this.keySlot)
    };
  },
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link"
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    breadcrumbsTruncatedOffset: {
      type: Number,
      required: !1,
      default: () => RU + OU
    },
    buttonToggleClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_transparent_secondary a_btn_small"
    },
    buttonToggleProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canChangeBodyClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    compareUrlCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    hasSearch: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBackdropMobileClickable: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBlockerClickable: {
      type: Boolean,
      required: !1
    },
    isBodyFocusAfterClick: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLinkTruncated: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMenuOpenInitial: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTranslated: {
      type: Boolean,
      required: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: String,
      required: !1,
      default: "group"
    },
    keyIcon: {
      type: String,
      required: !1,
      default: "icon"
    },
    keyId: {
      type: String,
      required: !1,
      default: "id"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyParent: {
      type: String,
      required: !1,
      default: "parent"
    },
    keySlot: {
      type: String,
      required: !1,
      default: void 0
    },
    menuId: {
      type: String,
      required: !1,
      default: () => lt("a_menu_")
    },
    showCountChildren: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useBackdropMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useEscapeForMobile: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  setup(e) {
    const t = d(e, "isLinkTruncated"), n = d(e, "showCountChildren"), r = d(e, "breadcrumbsTruncatedOffset"), {
      dataKeyById: s,
      dataProParent: l
    } = pU(e), {
      isSearchActive: o,
      itemsWithSearch: u,
      modelSearch: h,
      resetSearch: A,
      searchInputId: E,
      styleSearchPanelMain: p,
      updateModelSearch: T
    } = yU(e, {
      dataKeyById: s
    }), {
      closeAllPanels: S,
      isSubMenuOpen: b,
      panelParentsOpen: L,
      setDefaultMenu: I,
      togglePanel: v
    } = LU(e, {
      dataKeyById: s,
      resetSearch: A
    }), {
      closeMenu: R,
      isMenuOpen: g,
      removeBodyClasses: D,
      toggleMenu: w
    } = Vm(e), {
      isDesktopSubMenuVisibleWhenMenuClosed: M,
      menuRef: P,
      removeListenerForKeydownDesktop: F,
      removeListenerForKeydownMobile: C,
      setListenerForKeydownDesktop: k,
      setListenerForKeydownMobile: W
    } = TU(e, {
      closeMenu: R,
      isMenuOpen: g,
      isSubMenuOpen: b,
      panelParentsOpen: L,
      togglePanel: v
    }), {
      clickOnSearchBtn: K,
      keydownOnSearchBtn: le
    } = gU({
      searchInputId: E,
      toggleMenu: w
    }), {
      attributesMenuClick: te,
      attributesMobile: _e,
      headerId: ae
    } = SU(e, {
      isMenuOpen: g,
      toggleMenu: w
    }), {
      destroyEventBusUpdateViewOnResize: oe,
      initEventBusUpdateViewOnResize: Le,
      initMenuOpenOrClose: We,
      isMenuInitialized: Se,
      isMobileWidth: se
    } = vU(e, {
      removeListenerForKeydownMobile: C,
      toggleMenu: w
    }), {
      clickMenuLink: Oe,
      isMenuLinkClicked: ye
    } = mU(e, {
      closeAllPanels: S,
      isMenuOpen: g,
      isMobileWidth: se,
      resetSearch: A,
      toggleMenu: w
    }), {
      attributesBlockerClick: je
    } = fU(e, {
      closeAllPanels: S
    }), {
      activeRoutesIds: he,
      checkAllRoutes: ne,
      currentRoute: H
    } = AU(e, {
      dataKeyById: s,
      dataProParent: l,
      isMenuLinkClicked: ye,
      isMenuOpen: g,
      panelParentsOpen: L
    }), {
      destroyPopover: Q,
      startPopper: re
    } = IU(e, {
      menuRef: P,
      isMenuOpen: g,
      panelParentsOpen: L
    }), {
      isLeastOnePanelOpenAndMenuClosed: Ie
    } = bU({
      isMenuOpen: g,
      panelParentsOpen: L
    }), {
      clickAttributesBackdrop: Ce,
      isBackdropVisible: xe
    } = hU(e, {
      isMenuOpen: g,
      isMobileWidth: se,
      toggleMenu: w
    });
    return rt(H, () => {
      ne();
    }, {
      immediate: !0,
      deep: !0
    }), rt(g, (Xe) => {
      Se.value && (A(), S(), Xe ? (Q(), W()) : C());
    }), rt(L, () => {
      re();
    }, {
      deep: !0
    }), rt(M, (Xe) => {
      Xe ? k() : F();
    }), tt("activeRoutesIds", _(() => he.value)), tt("clickMenuLink", Oe), tt("isLinkTruncated", _(() => t.value)), tt("isMenuOpen", _(() => g.value)), tt("panelParentsOpen", L), tt("showCountChildren", _(() => n.value)), tt("togglePanel", v), tt("breadcrumbsTruncatedOffset", _(() => r.value)), We(), Le(), Ot(() => {
      D(), oe(), Q(), F(), C();
    }), {
      activeRoutesIds: he,
      attributesBlockerClick: je,
      attributesMenuClick: te,
      attributesMobile: _e,
      checkAllRoutes: ne,
      clickAttributesBackdrop: Ce,
      clickOnSearchBtn: K,
      dataKeyById: s,
      dataProParent: l,
      headerId: ae,
      isBackdropVisible: xe,
      isLeastOnePanelOpenAndMenuClosed: Ie,
      isMenuOpen: g,
      isMobileWidth: se,
      isSearchActive: o,
      isSubMenuOpen: b,
      itemsWithSearch: u,
      keydownOnSearchBtn: le,
      menuRef: P,
      modelSearch: h,
      panelParentsOpen: L,
      removeBodyClasses: D,
      searchInputId: E,
      setDefaultMenu: I,
      styleSearchPanelMain: p,
      toggleMenu: w,
      togglePanel: v,
      updateModelSearch: T
    };
  },
  render() {
    return c("nav", {
      ref: "menuRef",
      id: this.menuId,
      "aria-labelledby": this.headerId,
      class: [
        "a_menu",
        {
          a_menu_sub_open: this.isSubMenuOpen,
          a_menu_open: this.isMenuOpen,
          a_menu_close: !this.isMenuOpen,
          a_menu_mobile: this.isMobileWidth
        }
      ],
      ...this.attributesMobile,
      ...this.attributesMenuClick
    }, [
      c("div", {
        class: "a_menu__navbar_top"
      }, [
        c(Pk, {
          buttonToggleProps: this.buttonToggleProps,
          canChangeBodyClass: this.canChangeBodyClass,
          class: this.buttonToggleClass,
          insideMenu: !0,
          menuId: this.menuId
        }),
        this.$slots.menuSearch && this.$slots.menuSearch(),
        this.hasSearch && c(In, {
          id: this.searchInputId,
          class: "a_menu__navbar_top__search",
          modelValue: this.modelSearch,
          label: "_A_MENU_2_SEARCH_",
          "onUpdate:modelValue": this.updateModelSearch
        })
      ]),
      c("div", {
        class: "a_menu__panels__main",
        style: this.styleSearchPanelMain
      }, [
        c("div", {
          class: "a_menu__navbar_top_sub"
        }, [
          c(Ae, {
            id: this.headerId,
            class: "a_menu__navbar_top_sub__text",
            tag: "strong",
            text: "_A_MENU_2_MAIN_MENU_"
          }),
          this.hasSearch && c(ft, {
            role: "button",
            tabindex: 0,
            tag: "a",
            class: "a_menu__navbar_top_sub__search a_menu__link a_menu__link_btn",
            iconLeft: Ol,
            iconClass: "a_menu__link__icon",
            title: "_A_MENU_2_OPEN_SEARCH_",
            textScreenReader: "_A_MENU_2_OPEN_SEARCH_",
            onClick: this.clickOnSearchBtn,
            onKeydown: this.keydownOnSearchBtn
          })
        ]),
        c(cU, {
          class: {
            a_menu__vertical_scroll_hidden: this.isLeastOnePanelOpenAndMenuClosed
          },
          disabled: this.isMenuOpen || this.isLeastOnePanelOpenAndMenuClosed
        }, () => [
          c(ep, {
            attributesBlockerClick: this.attributesBlockerClick,
            dataKeyById: this.dataKeyById,
            dataProParentChildren: this.dataProParent.children,
            isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
            isPanelMain: !0,
            isSearchActive: this.isSearchActive,
            keyGroup: this.keyGroup,
            keyIcon: this.keyIcon,
            menuId: this.menuId,
            paneIndex: "00",
            panelItems: this.dataProParent.main,
            panelParentsOpen: this.panelParentsOpen
          }, this.$slots)
        ]),
        c("div", {
          class: "a_menu__panels"
        }, [
          Object.keys(this.dataProParent.children).map((e, t) => c(ep, {
            key: e,
            attributesBlockerClick: {},
            breadcrumbsLinkClass: this.breadcrumbsLinkClass,
            breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
            dataKeyById: this.dataKeyById,
            dataProParentChildren: this.dataProParent.children,
            isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
            isSearchActive: this.isSearchActive,
            keyGroup: this.keyGroup,
            keyIcon: this.keyIcon,
            menuId: this.menuId,
            paneIndex: t,
            panelItems: this.dataProParent.children[e],
            panelParentsOpen: this.panelParentsOpen,
            parentId: e
          }, this.$slots))
        ])
      ]),
      c(oU, {
        breadcrumbsLinkClass: this.breadcrumbsLinkClass,
        breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
        dataProParentChildren: this.dataProParent.children,
        isSearchActive: this.isSearchActive,
        isSearchBreadcrumbsTruncated: this.isSearchBreadcrumbsTruncated,
        itemsWithSearch: this.itemsWithSearch,
        menuId: this.menuId,
        modelSearch: this.modelSearch
      }, this.$slots),
      this.isBackdropVisible ? c(ia, {
        to: "body"
      }, [
        c("div", {
          class: "a_menu__backdrop a_backdrop a_backdrop_fade",
          "aria-hidden": !0,
          ...this.clickAttributesBackdrop
        })
      ]) : ""
    ]);
  }
};
function CU(e) {
  const t = d(e, "hideHeader"), n = d(e, "id");
  return {
    headerId: _(() => {
      if (!t.value)
        return `${n.value}_header`;
    })
  };
}
function Gm(e) {
  const t = d(e, "bodyHtml"), n = d(e, "id");
  return {
    bodyHtmlId: _(() => {
      if (t.value)
        return `${n.value}_body_html`;
    })
  };
}
function NU(e) {
  const t = d(e, "close"), n = d(e, "isConfirm"), r = () => {
    n.value || t.value();
  };
  return {
    destroyEventBusCloseFromOutside: () => {
      Rt.$off("closeModal", r);
    },
    initEventBusCloseFromOutside: () => {
      Rt.$on("closeModal", r);
    }
  };
}
function DU(e) {
  const t = d(e, "disabled"), n = d(e, "loading");
  return {
    disabledLocal: _(() => t.value || n.value)
  };
}
function BU(e) {
  const t = d(e, "close"), n = d(e, "useEscape"), {
    isOnePopupOpen: r
  } = nf();
  return {
    pressEscape: (l) => {
      !n.value || r.value || (t.value(), l.preventDefault(), l.stopPropagation());
    }
  };
}
function wU(e) {
  const t = d(e, "focusStartId"), n = d(e, "focusStartId"), r = B(void 0), s = B(void 0), l = () => {
    const A = document.getElementById(t.value);
    A && A.focus();
  }, o = () => {
    var E;
    const A = ((E = s.value) == null ? void 0 : E.querySelectorAll(Ai)) || [];
    A.length !== 0 && A[0].focus();
  };
  return {
    modalRef: r,
    modalWrapperRef: s,
    setFocusByShowModal: () => {
      setTimeout(() => {
        n.value || (t.value ? l() : o());
      });
    },
    trapFocus: (A) => {
      const E = s.value.querySelectorAll(Ai);
      if (E.length === 0) {
        A.preventDefault();
        return;
      }
      const p = E[0], T = E[E.length - 1];
      A.shiftKey ? document.activeElement === p && (T.focus(), A.preventDefault()) : document.activeElement === T && (p.focus(), A.preventDefault());
    }
  };
}
function PU(e) {
  const t = d(e, "selectorClose"), n = d(e, "selectorCloseIds"), r = _(() => {
    const o = [];
    return n.value && (it(n.value) ? o.push(`#${n.value}`) : Te(n.value) && z(n.value, (u) => {
      o.push(`#${u}`);
    })), t.value && (it(t.value) ? o.push(t.value) : Te(t.value) && o.push(...t.value)), o;
  }), s = ({ selector: o }) => {
    const u = document.querySelector(o);
    return u ? (u.focus(), !0) : !1;
  };
  return {
    setFocusByDestroy: () => {
      if (!r.value.length)
        return;
      const o = pe(r.value);
      setTimeout(() => {
        z(o, (u) => {
          if (s({ selector: u }))
            return !1;
        });
      }, 300);
    }
  };
}
function xU({
  removeListenerForKeydown: e = () => {
  },
  setFocusByDestroy: t = () => {
  }
}) {
  return {
    hideModal: () => {
      document.body.classList.remove("a_modal_open"), t(), e();
    }
  };
}
function FU({
  pressEscape: e = () => {
  },
  trapFocus: t = () => {
  }
}) {
  const n = (l) => {
    const o = l || window.$event;
    o.key === "Escape" || o.keyCode === X.escape ? e(l) : (o.key === "Tab" || o.keyCode === X.tab) && t(o);
  };
  return {
    setListenerForKeydown: () => {
      document.addEventListener("keydown", n);
    },
    removeListenerForKeydown: () => {
      document.removeEventListener("keydown", n);
    }
  };
}
function MU(e, {
  checkOpenedModals: t = () => {
  },
  setFocusByShowModal: n = () => {
  },
  setListenerForKeydown: r = () => {
  }
}) {
  const s = d(e, "isModalHidden");
  return {
    showModal: () => {
      s.value || (t(), document.body.classList.add("a_modal_open"), n(), r());
    }
  };
}
function qU(e) {
  const t = d(e, "size");
  return {
    sizeClass: _(() => {
      if (t.value)
        return `a_modal_${t.value}`;
    })
  };
}
function $U(e) {
  const t = d(e, "stop");
  return {
    clickWrapperStoppPropagationEventMap: _(() => t.value ? {
      onClick: (r) => r.stopPropagation()
    } : {})
  };
}
function kU(e) {
  const t = d(e, "backdropZIndex"), n = d(e, "zIndex"), r = B(0), s = _(() => {
    const u = {};
    return n.value ? u["--a_modal_zindex"] = n.value : r.value > 2 && (u["--a_modal_zindex"] = 1055 + r.value - 1), u;
  }), l = _(() => {
    const u = {};
    return t.value ? u["--a__backdrop_zindex"] = t.value : r.value > 2 && (u["--a__backdrop_zindex"] = 1050 + r.value - 1), u;
  });
  return {
    checkOpenedModals: () => {
      const u = document.querySelectorAll(".a_backdrop");
      r.value = (u == null ? void 0 : u.length) || 0;
    },
    countOpenedModals: r,
    stylesBackdrop: l,
    stylesZIndexModal: s
  };
}
const ge = B({
  propsDefault: {
    closeButtonClass: "a_btn a_btn_secondary",
    closeButtonText: "_A_MODAL_BTN_CANCEL_",
    closeButtonTextScreenReaderFooter: "_A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_",
    closeButtonTextScreenReaderHeader: "_A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_",
    headerTag: "h2",
    idPrefix: void 0,
    isCloseButtonHide: !1,
    isDataFormHide: !1,
    isDataFormRender: !0,
    isFooterSticky: !1,
    isRequired: !1,
    isSaveButtonHide: !1,
    modalClass: void 0,
    modalStyle: void 0,
    saveButtonClass: "a_btn a_btn_primary",
    saveButtonText: "_A_MODAL_BTN_SAVE_",
    saveButtonTextScreenReader: "_A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_",
    selectorClose: void 0,
    selectorCloseIds: void 0,
    size: void 0,
    textRequired: void 0,
    useEscape: !0
  }
}), Ide = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    ge.value.propsDefault = {
      ...ge.value.propsDefault,
      ...t
    };
  }
}, Mu = {
  name: "AModal",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    bodyHtml: {
      type: String,
      required: !1,
      default: ""
    },
    bodyHtmlClass: {
      type: [String, Array, Object],
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideFooter: {
      type: Boolean,
      required: !1
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_modal_")
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isCloseButtonHide
    },
    isConfirm: {
      type: Boolean,
      required: !1
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isFooterSticky
    },
    isModalHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalStyle
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorCloseIds
    },
    showCloseButtonHeader: {
      type: Boolean,
      required: !1,
      default: !0
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => ge.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = d(e, "isModalHidden"), {
      checkOpenedModals: n,
      stylesBackdrop: r,
      stylesZIndexModal: s
    } = kU(e), {
      bodyHtmlId: l
    } = Gm(e), {
      destroyEventBusCloseFromOutside: o,
      initEventBusCloseFromOutside: u
    } = NU(e), {
      headerId: h
    } = CU(e), {
      sizeClass: A
    } = qU(e), {
      disabledLocal: E
    } = DU(e), {
      modalRef: p,
      modalWrapperRef: T,
      setFocusByShowModal: S,
      trapFocus: b
    } = wU(e), {
      setFocusByDestroy: L
    } = PU(e), {
      pressEscape: I
    } = BU(e), {
      setListenerForKeydown: v,
      removeListenerForKeydown: R
    } = FU({
      pressEscape: I,
      trapFocus: b
    }), {
      showModal: g
    } = MU(e, {
      checkOpenedModals: n,
      setFocusByShowModal: S,
      setListenerForKeydown: v
    }), {
      hideModal: D
    } = xU({
      removeListenerForKeydown: R,
      setFocusByDestroy: L
    }), {
      clickWrapperStoppPropagationEventMap: w
    } = $U(e);
    return rt(t, () => {
      t.value ? D() : g();
    }), u(), Vr(() => {
      g();
    }), Ot(() => {
      o();
    }), _p(() => {
      D();
    }), {
      bodyHtmlId: l,
      clickWrapperStoppPropagationEventMap: w,
      disabledLocal: E,
      headerId: h,
      modalRef: p,
      modalWrapperRef: T,
      sizeClass: A,
      stylesBackdrop: r,
      stylesZIndexModal: s
    };
  },
  render() {
    const e = this.hideFooter ? "" : c("div", {
      ref: "modal_footer",
      class: [
        "a_modal_footer",
        {
          a_modal_footer_sticky: this.isFooterSticky
        }
      ]
    }, [
      c(Um, {
        alwaysTranslate: this.alwaysTranslate,
        isLoading: this.loading
      }, () => [
        c("div", {
          class: "a_modal_footer_actions"
        }, [
          this.$slots.modalFooterPrepend && this.$slots.modalFooterPrepend(),
          !this.isSaveButtonHide && this.save && c(me, {
            id: this.saveButtonId,
            alwaysTranslate: this.alwaysTranslate,
            class: this.saveButtonClass,
            disabled: this.disabledLocal || this.disabledSave,
            extra: this.extra,
            html: this.saveButtonText,
            textAriaHidden: !0,
            textScreenReader: this.saveButtonTextScreenReader,
            type: "button",
            ...this.saveButtonAttributes,
            onClick: this.save
          }),
          !this.isCloseButtonHide && c(me, {
            id: this.closeButtonId,
            alwaysTranslate: this.alwaysTranslate,
            class: this.closeButtonClass,
            disabled: this.disabledLocal,
            extra: this.extra,
            html: this.closeButtonText,
            textAriaHidden: !0,
            textScreenReader: this.closeButtonTextScreenReaderFooter,
            type: "button",
            ...this.closeButtonAttributes,
            onClick: () => this.close(!0)
          }),
          this.$slots.modalFooterAppend && this.$slots.modalFooterAppend()
        ])
      ])
    ]);
    return c(ia, {
      to: "body"
    }, [
      c("div", {
        ref: "modalWrapperRef",
        ...this.clickWrapperStoppPropagationEventMap
      }, [
        c("div", {
          ref: "modalRef",
          id: this.id,
          class: ["a_modal", this.modalClass, {
            a_modal_confirm: this.isConfirm,
            a_modal_show: !this.isModalHidden
          }],
          role: "dialog",
          ariaModal: !0,
          "aria-labelledby": this.headerId,
          "aria-describedby": this.bodyHtmlId,
          style: [
            this.modalStyle,
            this.stylesZIndexModal
          ],
          ...this.$attrs
        }, [
          c("div", {
            class: ["a_modal_dialog a_modal_dialog_scrollable", this.sizeClass]
          }, [
            c("div", {
              class: [
                "a_modal_content",
                {
                  a_modal_content_with_footer_sticky: this.isFooterSticky
                }
              ]
            }, [
              this.hideHeader ? "" : c("div", {
                ref: "modal_header",
                class: "a_modal_header"
              }, [
                c("div", {
                  id: this.headerId
                }, [
                  this.$slots.modalHeader ? this.$slots.modalHeader() : "",
                  this.headerText ? c(this.headerTag, {
                    class: "a_modal_title"
                  }, [
                    c(Ae, {
                      alwaysTranslate: this.alwaysTranslate,
                      tag: "span",
                      html: this.headerText,
                      extra: this.extra
                    })
                  ]) : ""
                ]),
                this.showCloseButtonHeader ? c(me, {
                  alwaysTranslate: this.alwaysTranslate,
                  class: "a_btn_close",
                  disabled: this.disabledLocal,
                  textScreenReader: this.closeButtonTextScreenReaderHeader,
                  title: this.closeButtonTextScreenReaderHeader,
                  type: "button",
                  onClick: () => this.close(!0)
                }) : ""
              ]),
              c("div", {
                ref: "modal_body",
                class: "a_modal_body"
              }, [
                c("div", {
                  ref: "modal_body",
                  class: "a_modal_body__content"
                }, [
                  this.bodyHtml && c(Ae, {
                    id: this.bodyHtmlId,
                    alwaysTranslate: this.alwaysTranslate,
                    class: this.bodyHtmlClass,
                    html: this.bodyHtml,
                    extra: this.extra
                  }),
                  this.$slots.modalBody && this.$slots.modalBody()
                ]),
                this.isFooterSticky ? e : ""
              ]),
              this.isFooterSticky ? "" : e
            ])
          ])
        ])
      ]),
      !this.isModalHidden && c("div", {
        class: [
          "a_backdrop a_backdrop_fade a_backdrop_show",
          {
            a_backdrop_confirm: this.isConfirm
          }
        ],
        style: this.stylesBackdrop
      })
    ]);
  }
};
function UU({
  isModalHidden: e = B(!1)
}) {
  const t = () => {
    e.value = !0;
  };
  return {
    destroyEventBusCloseFromOutside: () => {
      Rt.$off("closeModalConfirm", t);
    },
    initEventBusCloseFromOutside: () => {
      Rt.$on("closeModalConfirm", t);
    }
  };
}
const vde = {
  name: "AModalConfirm",
  setup() {
    const {
      closeConfirm: e,
      confirmOptions: t,
      isModalHidden: n
    } = sf(), {
      destroyEventBusCloseFromOutside: r,
      initEventBusCloseFromOutside: s
    } = UU({
      isModalHidden: n
    }), l = _(() => ({
      isModalHidden: n.value,
      isConfirm: !0,
      ...t.value,
      showCloseButtonHeader: !1,
      close: e
    }));
    return s(), Ot(() => {
      r();
    }), {
      modalProps: l
    };
  },
  render() {
    return c(Mu, this.modalProps, this.$slots);
  }
};
function HU(e) {
  const t = d(e, "dataForm");
  return {
    hasDataForm: _(() => t.value.length > 0)
  };
}
function VU({ emit: e }) {
  return {
    updateModelLocal: (n) => {
      e("update:modelValue", n);
    }
  };
}
const WU = {
  name: "AModalForm",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    bodyHtml: {
      type: String,
      required: !1,
      default: ""
    },
    bodyHtmlClass: {
      type: [String, Array, Object],
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    dataForm: {
      type: Array,
      required: !1,
      default: () => []
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideFooter: {
      type: Boolean,
      required: !1
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_modal_form_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.idPrefix
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isCloseButtonHide
    },
    isConfirm: {
      type: Boolean,
      required: !1
    },
    isDataFormHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isDataFormHide
    },
    isDataFormRender: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isDataFormRender
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isFooterSticky
    },
    isModalHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isRequired: {
      type: Boolean,
      required: !1,
      default: ge.value.propsDefault.isRequired
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalStyle
    },
    modelValue: {
      type: Object,
      required: !1,
      default: void 0
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorCloseIds
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => ge.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: void 0
    },
    textRequired: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.textRequired
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      bodyHtmlId: n
    } = Gm(e), {
      hasDataForm: r
    } = HU(e), {
      updateModelLocal: s
    } = VU(t);
    return {
      bodyHtmlId: n,
      hasDataForm: r,
      updateModelLocal: s
    };
  },
  render() {
    return c(Mu, {
      alwaysTranslate: this.alwaysTranslate,
      backdropZIndex: this.backdropZIndex,
      close: this.close,
      closeButtonClass: this.closeButtonClass,
      closeButtonId: this.closeButtonId,
      closeButtonText: this.closeButtonText,
      closeButtonTextScreenReaderFooter: this.closeButtonTextScreenReaderFooter,
      closeButtonTextScreenReaderHeader: this.closeButtonTextScreenReaderHeader,
      disabled: this.disabled,
      disabledSave: this.disabledSave,
      extra: this.extra,
      focusStartId: this.focusStartId,
      headerTag: this.headerTag,
      headerText: this.headerText,
      hideFooter: this.hideFooter,
      hideHeader: this.hideHeader,
      id: this.id,
      isCloseButtonHide: this.isCloseButtonHide,
      isConfirm: this.isConfirm,
      isFooterSticky: this.isFooterSticky,
      isModalHidden: this.isModalHidden,
      isSaveButtonHide: this.isSaveButtonHide,
      loading: this.loading,
      modalClass: this.modalClass,
      modalStyle: this.modalStyle,
      save: this.save,
      saveButtonClass: this.saveButtonClass,
      saveButtonId: this.saveButtonId,
      saveButtonText: this.saveButtonText,
      saveButtonTextScreenReader: this.saveButtonTextScreenReader,
      selectorClose: this.selectorClose,
      selectorCloseIds: this.selectorCloseIds,
      size: this.size,
      stop: this.stop,
      useEscape: this.useEscape,
      useFocusOnStart: this.useFocusOnStart,
      zIndex: this.zIndex,
      "aria-describedby": this.bodyHtmlId
    }, {
      ...this.$slots || {},
      modalBody: () => [
        this.$slots.modalBodyPrepend && this.$slots.modalBodyPrepend(),
        this.bodyHtml && c(Ae, {
          id: this.bodyHtmlId,
          alwaysTranslate: this.alwaysTranslate,
          class: this.bodyHtmlClass,
          html: this.bodyHtml,
          extra: this.extra
        }),
        this.hasDataForm && c(Pu, {
          alwaysTranslate: this.alwaysTranslate,
          modelValue: this.modelValue,
          data: this.dataForm,
          errors: this.errors,
          idPrefix: this.idPrefix,
          isRequired: this.isRequired,
          textRequired: this.textRequired,
          textErrorHeader: this.textErrorHeader,
          isHide: this.isDataFormHide,
          isRender: this.isDataFormRender,
          "onUpdate:modelValue": this.updateModelLocal
        }, this.$slots),
        this.$slots.modalBodyAppend && this.$slots.modalBodyAppend()
      ]
    });
  }
};
function GU(e) {
  const t = d(e, "stepIndex"), n = d(e, "stepActiveComputed"), r = _(() => n.value === t.value), s = _(() => t.value < n.value);
  return {
    isStepActive: r,
    isStepBeforeActive: s
  };
}
function KU(e, {
  isStepDisabled: t = _(() => !1),
  isStepActive: n = _(() => !1)
}) {
  const r = d(e, "id"), s = d(e, "stepIndex"), l = _(() => t.value || n.value ? -1 : 0), o = _(() => n.value ? {
    "aria-current": "step"
  } : {}), u = _(() => `${r.value}_step_text_${s.value}`), h = _(() => `${r.value}_step_status_text_${s.value}`);
  return {
    ariaCurrentAttributes: o,
    tabindex: l,
    stepStatusTextId: h,
    stepTextId: u
  };
}
function Km(e) {
  const t = d(e, "id"), n = d(e, "stepIndex");
  return {
    contentId: _(() => `${t.value}_${n.value}_content`)
  };
}
function jU(e) {
  const t = d(e, "step"), n = d(e, "stepIndex"), r = d(e, "stepActiveComputed"), s = d(e, "isForwardStepButtonDisabled"), l = d(e, "isBackStepButtonDisabled"), o = d(e, "isForwardButtonDisabled"), u = d(e, "isBackButtonDisabled"), h = _(() => n.value < r.value), A = _(() => n.value > r.value);
  return {
    isStepDisabled: _(() => t.value.disabled ? !0 : A.value ? o.value || s.value : h.value ? u.value || l.value : !1)
  };
}
function zU(e) {
  const t = d(e, "step"), n = d(e, "stepIconError"), r = d(e, "stepIconErrorText"), s = d(e, "stepIconWarning"), l = d(e, "stepIconWarningText"), o = _(() => {
    if (t.value.error)
      return n.value;
    if (t.value.warning)
      return s.value;
  }), u = _(() => {
    if (t.value.error)
      return r.value;
    if (t.value.warning)
      return l.value;
  });
  return {
    iconErrorWarning: o,
    titleIconErrorWarning: u
  };
}
function YU(e, { emit: t }, {
  isStepDisabled: n = _(() => !1)
}) {
  const r = d(e, "step"), s = d(e, "stepIndex"), l = ({ $event: u }) => {
    n.value || t("onStepClick", {
      $event: u,
      step: r.value,
      stepIndex: s.value
    });
  };
  return {
    onClick: l,
    onKeydown: (u) => {
      (u.keyCode === X.enter || u.keyCode === X.space) && (l({ $event: u }), u.preventDefault(), u.stopPropagation());
    }
  };
}
function XU(e, {
  isStepActive: t = _(() => !1),
  isStepBeforeActive: n = _(() => !1),
  isStepDisabled: r = _(() => !1)
}) {
  const s = d(e, "step");
  return {
    linkClass: _(() => ["a_wizard__step__link", {
      active: t.value,
      before_active: n.value,
      default: r.value,
      done: !t.value && !r.value,
      error: s.value.error,
      warning: s.value.warning
    }])
  };
}
function ZU(e, {
  isStepActive: t = _(() => !1)
}) {
  const n = d(e, "isMobile"), r = d(e, "isStepNumberVisible"), s = d(e, "showOnlyActiveStepMobile"), l = d(e, "stepIndex"), o = _(() => l.value + 1), u = _(() => n.value && s.value && t.value), h = _(() => r.value ? u.value ? "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_" : o.value : "");
  return {
    stepNumber: o,
    stepNumberText: h
  };
}
function JU(e, {
  isStepActive: t = _(() => !1),
  isStepBeforeActive: n = _(() => !1)
}) {
  return {
    statusText: _(() => t.value ? "_A_WIZARD_STEP_ACTIVE_" : n.value ? "_A_WIZARD_STEP_VISITED_" : "_A_WIZARD_STEP_UPCOMING_")
  };
}
const QU = {
  name: "AWizardStep",
  props: {
    extra: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isMobile: {
      type: Boolean,
      required: !0
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    step: {
      type: Object,
      required: !0
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: mu
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: Tu
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    stepIndex: {
      type: Number,
      required: !0
    },
    stepsCount: {
      type: Number,
      required: !0
    }
  },
  emits: [
    "onStepClick"
  ],
  setup(e, t) {
    const {
      isStepActive: n,
      isStepBeforeActive: r
    } = GU(e), {
      stepNumber: s,
      stepNumberText: l
    } = ZU(e, {
      isStepActive: n
    }), {
      isStepDisabled: o
    } = jU(e), {
      linkClass: u
    } = XU(e, {
      isStepActive: n,
      isStepBeforeActive: r,
      isStepDisabled: o
    }), {
      onClick: h,
      onKeydown: A
    } = YU(e, t, {
      isStepDisabled: o
    }), {
      ariaCurrentAttributes: E,
      stepTextId: p,
      stepStatusTextId: T,
      tabindex: S
    } = KU(e, {
      isStepDisabled: o,
      isStepActive: n
    }), {
      contentId: b
    } = Km(e), {
      statusText: L
    } = JU(e, {
      isStepActive: n,
      isStepBeforeActive: r
    }), {
      iconErrorWarning: I,
      titleIconErrorWarning: v
    } = zU(e);
    return {
      ariaCurrentAttributes: E,
      contentId: b,
      iconErrorWarning: I,
      isStepActive: n,
      isStepDisabled: o,
      linkClass: u,
      onClick: h,
      onKeydown: A,
      statusText: L,
      stepNumber: s,
      stepNumberText: l,
      stepStatusTextId: T,
      stepTextId: p,
      tabindex: S,
      titleIconErrorWarning: v
    };
  },
  render() {
    return c(
      "li",
      {
        class: [
          "a_wizard__step",
          {
            a_wizard__step_active: this.isStepActive
          }
        ]
      },
      [
        c(me, {
          "aria-controls": this.contentId,
          "aria-describedby": this.stepStatusTextId,
          ariaDisabled: this.isStepDisabled,
          class: this.linkClass,
          classDefault: "",
          classDisabled: "disabled",
          role: "button",
          tabindex: this.tabindex,
          title: this.step.title,
          type: "link",
          onClick: this.onClick,
          onKeydown: this.onKeydown,
          ...this.ariaCurrentAttributes
        }, () => this.step.slotLabel && this.$slots[this.step.slotLabel] ? this.$slots[this.step.slotLabel]({
          isStepActive: this.isStepActive,
          isStepDisabled: this.isStepDisabled,
          step: this.step,
          stepIndex: this.stepIndex,
          stepNumber: this.stepNumber,
          stepTextId: this.stepTextId
        }) : [
          this.isStepNumberVisible ? c("span", {
            class: "a_wizard__step__number"
          }, [
            this.step.icon ? c(ut, {
              class: "a_wizard__step__number__icon",
              icon: this.step.icon
            }) : c(Ae, {
              class: "a_wizard__step__number__text",
              tag: "span",
              text: this.stepNumberText,
              extra: {
                stepActive: this.stepNumber,
                stepsCount: this.stepsCount
              }
            })
          ]) : "",
          c("span", {
            class: "a_wizard__step__text"
          }, [
            c(Ae, {
              id: this.stepTextId,
              class: "a_wizard__step__text__child",
              extra: this.extra,
              html: this.step.label,
              tag: "span"
            }),
            this.iconErrorWarning ? c(me, {
              iconClass: "a_wizard__step__text__icon",
              iconLeft: this.iconErrorWarning,
              tag: "span",
              textScreenReader: this.titleIconErrorWarning,
              title: this.titleIconErrorWarning,
              type: "text"
            }) : ""
          ])
        ]),
        c(Ae, {
          id: this.stepStatusTextId,
          class: "a_sr_only",
          tag: "span",
          text: this.statusText
        }),
        c("span", {
          class: "a_wizard__step__divider",
          ariaHidden: !0
        })
      ]
    );
  }
};
function eH(e) {
  const t = d(e, "stepIndex"), n = d(e, "stepActiveComputed");
  return {
    isStepActive: _(() => t.value === n.value)
  };
}
function tH(e) {
  const t = d(e, "id"), n = d(e, "stepIndex");
  return {
    focusId: _(() => `${t.value}_${n.value}_focus`)
  };
}
function nH(e, {
  isStepActive: t = _(() => !1)
}) {
  const n = d(e, "stepsVisitedComputed"), r = d(e, "stepIndex"), s = _(() => t.value ? "" : "display: none;");
  return {
    isStepRender: _(() => t.value || n.value[r.value]),
    styleStep: s
  };
}
const rH = {
  name: "AWizardTab",
  props: {
    extra: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    step: {
      type: Object,
      required: !0
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    stepIndex: {
      type: Number,
      required: !0
    },
    stepsVisitedComputed: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    wizardAriaDescribedby: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      isStepActive: t
    } = eH(e), {
      isStepRender: n,
      styleStep: r
    } = nH(e, {
      isStepActive: t
    }), {
      focusId: s
    } = tH(e), {
      contentId: l
    } = Km(e);
    return {
      contentId: l,
      focusId: s,
      isStepRender: n,
      styleStep: r
    };
  },
  render() {
    return c("div", {
      id: this.contentId
    }, [
      this.isStepRender && c("div", {
        class: "a_wizard__tab_pane",
        style: this.styleStep
      }, [
        c("div", {
          id: this.focusId,
          class: "a_sr_only",
          tabindex: "-1",
          "aria-describedby": this.wizardAriaDescribedby
        }),
        this.$slots[this.step.slot] && this.$slots[this.step.slot]({
          step: this.step,
          stepIndex: this.stepIndex
        })
      ])
    ]);
  }
};
function aH(e, {
  isStepActiveFirst: t = _(() => !1),
  isStepActiveLast: n = _(() => !1)
}) {
  const r = d(e, "isBackButtonDisabled"), s = d(e, "isForwardButtonDisabled"), l = _(() => t.value ? !0 : r.value), o = _(() => n.value ? !0 : s.value);
  return {
    isBackButtonDisabledLocal: l,
    isForwardButtonDisabledLocal: o
  };
}
function sH(e, { emit: t }) {
  return {
    goOneStepBack: () => {
      t("goOneStepBack");
    },
    goOneStepForward: () => {
      t("goOneStepForward");
    }
  };
}
function iH(e) {
  const t = d(e, "steps"), n = d(e, "stepActiveComputed"), r = _(() => n.value === 0), s = _(() => n.value === t.value.length - 1);
  return {
    isStepActiveFirst: r,
    isStepActiveLast: s
  };
}
function lH(e, {
  isStepActiveFirst: t = _(() => !1),
  isStepActiveLast: n = _(() => !1)
}) {
  const r = d(e, "isForwardButtonHide"), s = d(e, "isBackButtonHide"), l = d(e, "isForwardLastButtonHide"), o = d(e, "isBackFirstButtonHide"), u = _(() => s.value ? !0 : t.value && o.value), h = _(() => r.value ? !0 : n.value && l.value);
  return {
    isBackButtonHideLocal: u,
    isForwardButtonHideLocal: h
  };
}
const oH = {
  name: "AWizardToolbar",
  props: {
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    steps: {
      type: Array,
      required: !0
    }
  },
  emits: [
    "goOneStepBack",
    "goOneStepForward"
  ],
  setup(e, t) {
    const {
      isStepActiveFirst: n,
      isStepActiveLast: r
    } = iH(e), {
      isBackButtonDisabledLocal: s,
      isForwardButtonDisabledLocal: l
    } = aH(e, {
      isStepActiveFirst: n,
      isStepActiveLast: r
    }), {
      isBackButtonHideLocal: o,
      isForwardButtonHideLocal: u
    } = lH(e, {
      isStepActiveFirst: n,
      isStepActiveLast: r
    }), {
      goOneStepBack: h,
      goOneStepForward: A
    } = sH(e, t);
    return {
      goOneStepBack: h,
      goOneStepForward: A,
      isBackButtonDisabledLocal: s,
      isBackButtonHideLocal: o,
      isForwardButtonDisabledLocal: l,
      isForwardButtonHideLocal: u
    };
  },
  render() {
    return c(
      "div",
      {
        class: "a_wizard__toolbar"
      },
      [
        !this.isBackButtonHideLocal && c(me, {
          class: this.backButtonClass,
          disabled: this.isBackButtonDisabledLocal,
          extra: this.extra,
          iconLeft: this.backButtonIconLeft,
          iconRight: this.backButtonIconRight,
          loading: this.isButtonsLoading,
          text: this.backButtonText,
          textAriaHidden: !0,
          textScreenReader: this.backButtonTitle,
          title: this.backButtonTitle,
          type: "button",
          onClick: this.goOneStepBack,
          ...this.backButtonAttributes
        }),
        !this.isForwardButtonHideLocal && c(me, {
          class: this.forwardButtonClass,
          disabled: this.isForwardButtonDisabledLocal,
          extra: this.extra,
          iconLeft: this.forwardButtonIconLeft,
          iconRight: this.forwardButtonIconRight,
          loading: this.isButtonsLoading,
          text: this.forwardButtonText,
          textAriaHidden: !0,
          textScreenReader: this.forwardButtonTitle,
          title: this.forwardButtonTitle,
          type: "button",
          onClick: this.goOneStepForward,
          ...this.forwardButtonAttributes
        }),
        this.$slots.toolbar && this.$slots.toolbar()
      ]
    );
  }
};
function uH(e, {
  stepActiveComputed: t = _(() => 0)
}) {
  const n = d(e, "ariaLabel"), r = d(e, "ariaLabelSteps"), s = d(e, "extra"), l = d(e, "id"), {
    getTranslationAttributes: o,
    getTranslatedText: u,
    isPlaceholderTranslate: h
  } = Ms(), A = _(() => h(n.value)), E = _(() => h(r.value)), p = _(() => {
    if (A.value)
      return u({
        placeholder: n.value,
        extra: s.value
      });
  }), T = _(() => {
    if (E.value)
      return u({
        placeholder: r.value,
        extra: s.value
      });
  }), S = _(() => o({
    attr: "aria-label",
    value: n.value,
    translation: p.value,
    isTranslate: A.value
  })), b = _(() => o({
    attr: "aria-label",
    value: r.value,
    translation: T.value,
    isTranslate: E.value
  })), L = _(() => `${l.value}_progressbar`), I = _(() => `${l.value}_step_text_${t.value}`), v = _(() => `${L.value} ${I.value}`);
  return {
    ariaLabelAttributes: S,
    ariaLabelStepsAttributes: b,
    idProgressbar: L,
    wizardAriaDescribedby: v
  };
}
function _H(e, {
  subTypeLocal: t = _(() => {
  })
}) {
  const n = d(e, "type"), r = d(e, "isStepsJustified");
  return {
    classWizard: _(() => {
      let l = `a_wizard a_wizard_${n.value}`;
      return r.value && (l += " a_wizard_justified"), t.value && (l += ` a_wizard_${n.value}_${Om.snakeCase(t.value)}`), l;
    })
  };
}
function dH(e, { emit: t }, {
  stepActiveComputed: n = _(() => 0),
  stepActiveLocal: r = B(0),
  stepsVisitedLocal: s = B({})
}) {
  const l = d(e, "isControlOutside"), o = d(e, "steps"), u = ({ stepIndex: T, step: S }) => {
    l.value ? t("goStepBack", {
      step: S,
      targetStepIndex: T,
      currentStepIndex: n.value
    }) : r.value = T;
  }, h = ({ stepIndex: T, step: S }) => {
    l.value ? t("goStepForward", {
      step: S,
      targetStepIndex: T,
      currentStepIndex: n.value
    }) : (r.value = T, s.value[T] = !0);
  };
  return {
    goOneStepBack: () => {
      n.value !== 0 && u({
        stepIndex: n.value - 1
      });
    },
    goOneStepForward: () => {
      n.value >= o.value.length - 1 || h({
        stepIndex: n.value + 1
      });
    },
    onStepClick: ({ stepIndex: T, step: S }) => {
      n.value !== T && (T < n.value ? u({ stepIndex: T, step: S }) : h({ stepIndex: T, step: S }));
    }
  };
}
function cH(e) {
  const t = d(e, "hasFocusJump"), n = d(e, "id"), r = B([]);
  return {
    setFocusToActiveStep: ({ stepActive: l }) => {
      t.value && !window.isScrollDisabled && setTimeout(() => {
        const o = `#${n.value}_${l}_focus`;
        aa({
          selector: o
        });
      });
    },
    wizardTabsRef: r
  };
}
function fH(e, {
  setFocusToActiveStep: t = () => {
  }
}) {
  const n = d(e, "stepActive"), r = d(e, "stepsVisited"), s = d(e, "isControlOutside"), l = B(!1), o = B(0), u = B({
    0: !0
  }), h = _(() => s.value ? n.value : o.value), A = _(() => s.value ? r.value : u.value), E = () => {
    s.value || ie(n.value) || (o.value = n.value, u.value = {
      [n.value]: !0
    }), setTimeout(() => {
      l.value = !0;
    });
  };
  return rt(h, (p) => {
    l.value && t({ stepActive: p });
  }), {
    initStepActive: E,
    stepActiveComputed: h,
    stepActiveLocal: o,
    stepsVisitedComputed: A,
    stepsVisitedLocal: u
  };
}
function hH(e) {
  const t = d(e, "isMobile"), {
    isMobileWidth: n
  } = En();
  return {
    isMobileLocal: _(() => t.value || n.value)
  };
}
function AH(e, {
  stepActiveComputed: t = _(() => 0)
}) {
  const n = d(e, "steps"), r = _(() => n.value.length);
  return {
    stepActiveNumber: _(() => t.value + 1),
    stepsCount: r
  };
}
function EH(e) {
  const t = d(e, "toolbarBottomTeleportId"), n = _(() => !!t.value);
  return {
    toolbarBottomTeleportSelector: _(() => {
      if (n.value)
        return `#${t.value}`;
    }),
    useTeleportToolbarBottom: n
  };
}
function pH(e) {
  const t = d(e, "subType"), n = d(e, "type");
  return {
    subTypeLocal: _(() => {
      if (t.value)
        return t.value;
      if (n.value === "line")
        return "square";
    })
  };
}
const TH = {
  name: "AWizard",
  props: {
    ariaLabel: {
      type: String,
      required: !1,
      default: "_A_WIZARD_ARIA_LABEL_"
    },
    ariaLabelSteps: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_ARIA_LABEL_"
    },
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_"
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_TITLE_"
    },
    extra: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_"
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_TITLE_"
    },
    hasFocusJump: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_wizard_")
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isControlOutside: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMobile: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isStepsJustified: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isToolbarBottom: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isToolbarTop: {
      type: Boolean,
      required: !1,
      default: !1
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    stepActive: {
      type: Number,
      required: !1,
      default: void 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: mu
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: Tu
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    steps: {
      type: Array,
      required: !1,
      default: () => []
    },
    stepsProgressbarText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_"
    },
    stepsVisited: {
      type: Object,
      required: !1,
      default: void 0
    },
    subType: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e, t) => {
        const n = {
          arrows: [],
          basic: [],
          line: ["square", "circle", "square-bordered", "circle-bordered"],
          round: []
        };
        if (t) {
          if (t.type in n)
            return ie(e) || n[t.type].indexOf(e) !== -1;
        } else
          return ["square", "circle", "square-bordered", "circle-bordered"].indexOf(e) !== -1;
        return !1;
      }
    },
    toolbarBottomTeleportId: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "basic",
      validator: (e) => ["arrows", "line", "round", "basic"].indexOf(e) !== -1
    }
  },
  emits: [
    "goStepBack",
    "goStepForward"
  ],
  setup(e, t) {
    const {
      subTypeLocal: n
    } = pH(e), {
      classWizard: r
    } = _H(e, {
      subTypeLocal: n
    }), {
      setFocusToActiveStep: s,
      wizardTabsRef: l
    } = cH(e), {
      initStepActive: o,
      stepActiveComputed: u,
      stepActiveLocal: h,
      stepsVisitedComputed: A,
      stepsVisitedLocal: E
    } = fH(e, {
      setFocusToActiveStep: s
    }), {
      ariaLabelAttributes: p,
      ariaLabelStepsAttributes: T,
      idProgressbar: S,
      wizardAriaDescribedby: b
    } = uH(e, {
      stepActiveComputed: u
    }), {
      goOneStepBack: L,
      goOneStepForward: I,
      onStepClick: v
    } = dH(e, t, {
      stepActiveComputed: u,
      stepActiveLocal: h,
      stepsVisitedLocal: E
    }), {
      stepActiveNumber: R,
      stepsCount: g
    } = AH(e, {
      stepActiveComputed: u
    }), {
      toolbarBottomTeleportSelector: D,
      useTeleportToolbarBottom: w
    } = EH(e), {
      isMobileLocal: M
    } = hH(e);
    return o(), {
      ariaLabelAttributes: p,
      ariaLabelStepsAttributes: T,
      classWizard: r,
      goOneStepBack: L,
      goOneStepForward: I,
      idProgressbar: S,
      isMobileLocal: M,
      onStepClick: v,
      stepActiveComputed: u,
      stepActiveNumber: R,
      stepsCount: g,
      stepsVisitedComputed: A,
      toolbarBottomTeleportSelector: D,
      useTeleportToolbarBottom: w,
      wizardAriaDescribedby: b,
      wizardTabsRef: l
    };
  },
  render() {
    const e = c(oH, {
      backButtonAttributes: this.backButtonAttributes,
      backButtonClass: this.backButtonClass,
      backButtonIconLeft: this.backButtonIconLeft,
      backButtonIconRight: this.backButtonIconRight,
      backButtonText: this.backButtonText,
      backButtonTitle: this.backButtonTitle,
      extra: this.extra,
      forwardButtonAttributes: this.forwardButtonAttributes,
      forwardButtonClass: this.forwardButtonClass,
      forwardButtonIconLeft: this.forwardButtonIconLeft,
      forwardButtonIconRight: this.forwardButtonIconRight,
      forwardButtonText: this.forwardButtonText,
      forwardButtonTitle: this.forwardButtonTitle,
      isBackButtonDisabled: this.isBackButtonDisabled,
      isBackButtonHide: this.isBackButtonHide,
      isBackFirstButtonHide: this.isBackFirstButtonHide,
      isButtonsLoading: this.isButtonsLoading,
      isForwardButtonDisabled: this.isForwardButtonDisabled,
      isForwardButtonHide: this.isForwardButtonHide,
      isForwardLastButtonHide: this.isForwardLastButtonHide,
      stepActiveComputed: this.stepActiveComputed,
      steps: this.steps,
      onGoOneStepBack: this.goOneStepBack,
      onGoOneStepForward: this.goOneStepForward
    }, this.$slots);
    return c("div", {
      tabindex: 0,
      id: this.id,
      role: "application",
      "aria-describedby": this.wizardAriaDescribedby,
      class: [
        this.classWizard,
        {
          a_wizard_mobile: this.isMobileLocal,
          a_wizard_show_only_active_step_mobile: this.showOnlyActiveStepMobile
        }
      ],
      ...this.ariaLabelAttributes
    }, [
      c(Ae, {
        id: this.idProgressbar,
        class: "a_sr_only",
        extra: {
          stepActive: this.stepActiveNumber,
          stepsCount: this.stepsCount
        },
        tag: "span",
        text: this.stepsProgressbarText
      }),
      c("ul", {
        class: "a_wizard__steps",
        role: "navigation",
        ...this.ariaLabelStepsAttributes
      }, [
        this.steps.map((t, n) => c(QU, {
          key: this.keyId ? t[this.keyId] : n,
          id: this.id,
          extra: this.extra,
          isBackButtonDisabled: this.isBackButtonDisabled,
          isBackStepButtonDisabled: this.isBackStepButtonDisabled,
          isForwardButtonDisabled: this.isForwardButtonDisabled,
          isForwardStepButtonDisabled: this.isForwardStepButtonDisabled,
          isMobile: this.isMobileLocal,
          isStepNumberVisible: this.isStepNumberVisible,
          showOnlyActiveStepMobile: this.showOnlyActiveStepMobile,
          step: t,
          stepActiveComputed: this.stepActiveComputed,
          stepIconError: this.stepIconError,
          stepIconWarning: this.stepIconWarning,
          stepIndex: n,
          stepsCount: this.stepsCount,
          onOnStepClick: this.onStepClick
        }, this.$slots))
      ]),
      this.isToolbarTop && e,
      c("div", {
        class: "a_wizard__tab_content"
      }, [
        this.steps.map((t, n) => c(rH, {
          key: this.keyId ? t[this.keyId] : n,
          id: this.id,
          extra: this.extra,
          step: t,
          stepActiveComputed: this.stepActiveComputed,
          stepIndex: n,
          stepsVisitedComputed: this.stepsVisitedComputed,
          wizardAriaDescribedby: this.wizardAriaDescribedby
        }, this.$slots))
      ]),
      this.isToolbarBottom && c(ia, {
        to: this.toolbarBottomTeleportSelector,
        disabled: !this.useTeleportToolbarBottom
      }, [
        e
      ])
    ]);
  }
};
function mH({ emit: e }) {
  return {
    goStepBackLocal: (r) => {
      e("goStepBack", r);
    },
    goStepForwardLocal: (r) => {
      e("goStepForward", r);
    }
  };
}
function SH(e) {
  const t = d(e, "id"), n = _(() => `${t.value}_footer`), r = _(() => `${t.value}_wizard`);
  return {
    footerId: n,
    wizardId: r
  };
}
function bH() {
  const e = B(void 0);
  return {
    initWizard: () => {
      iu().then(
        () => {
          e.value = !0;
        }
      );
    },
    isWizardVisible: e
  };
}
const yde = {
  name: "AModalWizard",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isCloseButtonHide
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isFooterSticky
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalStyle
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorCloseIds
    },
    showCloseButtonHeader: {
      type: Boolean,
      required: !1,
      default: !0
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => ge.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    // WIZARD
    ariaLabel: {
      type: String,
      required: !1,
      default: "_A_WIZARD_ARIA_LABEL_"
    },
    ariaLabelSteps: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_ARIA_LABEL_"
    },
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_"
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_TITLE_"
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_"
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_TITLE_"
    },
    hasFocusJump: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_modal_wizard_")
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isControlOutside: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMobile: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isStepsJustified: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    stepActive: {
      type: Number,
      default: void 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: mu
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: Tu
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    steps: {
      type: Array,
      default: () => []
    },
    stepsProgressbarText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_"
    },
    subType: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e, t) => {
        const n = {
          arrows: [],
          basic: [],
          line: ["square", "circle", "square-bordered", "circle-bordered"],
          round: []
        };
        if (t) {
          if (t.type in n)
            return ie(e) || n[t.type].indexOf(e) !== -1;
        } else
          return ["square", "circle", "square-bordered", "circle-bordered"].indexOf(e) !== -1;
        return !1;
      }
    },
    stepsVisited: {
      type: Object,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "basic",
      validator: (e) => ["arrows", "line", "round", "basic"].indexOf(e) !== -1
    }
  },
  emits: [
    "goStepBack",
    "goStepForward"
  ],
  setup(e, t) {
    const {
      goStepBackLocal: n,
      goStepForwardLocal: r
    } = mH(t), {
      footerId: s,
      wizardId: l
    } = SH(e), {
      initWizard: o,
      isWizardVisible: u
    } = bH();
    return o(), {
      footerId: s,
      goStepBackLocal: n,
      goStepForwardLocal: r,
      isWizardVisible: u,
      wizardId: l
    };
  },
  render() {
    return c(Mu, {
      alwaysTranslate: this.alwaysTranslate,
      backdropZIndex: this.backdropZIndex,
      close: this.close,
      closeButtonAttributes: this.closeButtonAttributes,
      closeButtonClass: this.closeButtonClass,
      closeButtonId: this.closeButtonId,
      closeButtonText: this.closeButtonText,
      closeButtonTextScreenReaderFooter: this.closeButtonTextScreenReaderFooter,
      closeButtonTextScreenReaderHeader: this.closeButtonTextScreenReaderHeader,
      disabled: this.disabled,
      disabledSave: this.disabledSave,
      extra: this.extra,
      focusStartId: this.focusStartId,
      headerTag: this.headerTag,
      headerText: this.headerText,
      hideHeader: this.hideHeader,
      id: this.id,
      isCloseButtonHide: this.isCloseButtonHide,
      isFooterSticky: this.isFooterSticky,
      isSaveButtonHide: this.isSaveButtonHide,
      loading: this.loading,
      modalClass: this.modalClass,
      modalStyle: this.modalStyle,
      save: this.save,
      saveButtonAttributes: this.saveButtonAttributes,
      saveButtonClass: this.saveButtonClass,
      saveButtonId: this.saveButtonId,
      saveButtonText: this.saveButtonText,
      saveButtonTextScreenReader: this.saveButtonTextScreenReader,
      selectorClose: this.selectorClose,
      selectorCloseIds: this.selectorCloseIds,
      showCloseButtonHeader: this.showCloseButtonHeader,
      size: this.size,
      stop: this.stop,
      useEscape: this.useEscape,
      useFocusOnStart: this.useFocusOnStart,
      zIndex: this.zIndex
    }, {
      ...this.$slots || {},
      modalBody: () => [
        this.isWizardVisible && c(TH, {
          id: this.wizardId,
          ariaLabel: this.ariaLabel,
          ariaLabelSteps: this.ariaLabelSteps,
          backButtonAttributes: this.backButtonAttributes,
          backButtonClass: this.backButtonClass,
          backButtonIconLeft: this.backButtonIconLeft,
          backButtonIconRight: this.backButtonIconRight,
          backButtonText: this.backButtonText,
          backButtonTitle: this.backButtonTitle,
          forwardButtonAttributes: this.forwardButtonAttributes,
          forwardButtonClass: this.forwardButtonClass,
          forwardButtonIconLeft: this.forwardButtonIconLeft,
          forwardButtonIconRight: this.forwardButtonIconRight,
          forwardButtonText: this.forwardButtonText,
          forwardButtonTitle: this.forwardButtonTitle,
          hasFocusJump: this.hasFocusJump,
          extra: this.extra,
          isBackButtonDisabled: this.isBackButtonDisabled,
          isBackButtonHide: this.isBackButtonHide,
          isBackFirstButtonHide: this.isBackFirstButtonHide,
          isBackStepButtonDisabled: this.isBackStepButtonDisabled,
          isButtonsLoading: this.isButtonsLoading,
          isControlOutside: this.isControlOutside,
          isForwardButtonDisabled: this.isForwardButtonDisabled,
          isForwardButtonHide: this.isForwardButtonHide,
          isForwardLastButtonHide: this.isForwardLastButtonHide,
          isForwardStepButtonDisabled: this.isForwardStepButtonDisabled,
          isMobile: this.isMobile,
          isStepNumberVisible: this.isStepNumberVisible,
          isStepsJustified: this.isStepsJustified,
          keyId: this.keyId,
          isToolbarBottom: !0,
          isToolbarTop: !1,
          showOnlyActiveStepMobile: this.showOnlyActiveStepMobile,
          stepActive: this.stepActive,
          stepIconError: this.stepIconError,
          stepIconErrorText: this.stepIconErrorText,
          stepIconWarning: this.stepIconWarning,
          stepIconWarningText: this.stepIconWarningText,
          steps: this.steps,
          stepsProgressbarText: this.stepsProgressbarText,
          stepsVisited: this.stepsVisited,
          subType: this.subType,
          toolbarBottomTeleportId: this.footerId,
          type: this.type,
          onGoStepBack: this.goStepBackLocal,
          onGoStepForward: this.goStepForwardLocal
        }, this.$slots)
      ],
      modalFooterPrepend: () => [
        this.$slots.modalWizardFooterPrepend && this.$slots.modalWizardFooterPrepend(),
        c("div", {
          id: this.footerId
        }),
        this.$slots.modalWizardFooterAppend && this.$slots.modalWizardFooterAppend()
      ]
    });
  }
}, gde = {
  name: "ANotification",
  setup() {
    const {
      notifications: e,
      removeNotification: t
    } = wu();
    return {
      notifications: e,
      removeNotification: t
    };
  },
  render() {
    return c(ia, {
      to: "body"
    }, [
      c("div", {
        class: "a_notification_parent"
      }, this.notifications.map((e) => c(Ic, {
        key: e.index,
        alwaysTranslate: e.alwaysTranslate,
        isVisible: !0,
        closable: !0,
        type: e.type,
        alertClass: "a_notification",
        onClose: () => this.removeNotification(e.index)
      }, () => [
        c(Ae, {
          alwaysTranslate: e.alwaysTranslate,
          html: e.text,
          extra: e.extra
        })
      ])))
    ]);
  }
}, Ho = B("");
function LH(e) {
  const t = d(e, "title"), n = d(e, "extra"), {
    translationChanges: r
  } = Ti(), {
    isPlaceholderTranslate: s,
    getTranslatedText: l
  } = Ms(), o = _(() => {
    if (r.value)
      return s(Ho.value) ? l({
        placeholder: Ho.value
      }) : Ho.value;
  }), u = _(() => {
    if (r.value)
      return s(t.value) ? l({
        placeholder: t.value,
        extra: n.value
      }) : t.value;
  }), h = () => {
    let A = "";
    u.value ? (A = u.value, o.value && (A += ` - ${o.value}`)) : o.value && (A = o.value), document.title = A;
  };
  h(), rt(u, () => {
    h();
  });
}
function IH(e = "") {
  Ho.value = e;
}
const Rde = {
  name: "APageTabTitle",
  props: {
    title: {
      type: String,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    LH(e);
  },
  render() {
    return "";
  }
};
function vH(e, { emit: t }) {
  const n = d(e, "isLoadingTable"), r = d(e, "limit"), s = _(() => `${r.value}`), l = (h) => {
    n.value || t("update:limit", +h);
  };
  return {
    changeLimit: l,
    changeLimitFromSelect: ({ model: h }) => {
      l(h);
    },
    keyDownChangeLimit: (h, A) => {
      (h.keyCode === X.enter || h.keyCode === X.space) && (l(A), h.stopPropagation(), h.preventDefault());
    },
    limitString: s
  };
}
function yH(e) {
  const t = d(e, "offset"), n = d(e, "rowsLength"), r = d(e, "countAllRows"), {
    filterCurrency: s
  } = Hn(), l = _(() => s(+t.value + 1, { suffix: "", digits: 0 })), o = _(() => s(+t.value + n.value, { suffix: "", digits: 0 })), u = _(() => s(r.value, { suffix: "", digits: 0 }));
  return {
    extraForTranslate: _(() => ({
      start: l.value,
      current: o.value,
      count: u.value
    }))
  };
}
const gH = {
  name: "APaginationCountPerPage",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    limit: {
      type: Number,
      required: !0
    },
    limitsPerPage: {
      type: Array,
      required: !1,
      default: () => ["10", "25", "50", "100"]
    },
    mode: {
      type: String,
      required: !1,
      default: "group",
      validator: (e) => ["inline", "group", "select"].indexOf(e) !== -1
    },
    offset: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    showTextCountFromTo: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: [
    "update:limit"
  ],
  setup(e, t) {
    const {
      changeLimit: n,
      changeLimitFromSelect: r,
      keyDownChangeLimit: s,
      limitString: l
    } = vH(e, t), {
      extraForTranslate: o
    } = yH(e);
    return {
      changeLimit: n,
      changeLimitFromSelect: r,
      extraForTranslate: o,
      keyDownChangeLimit: s,
      limitString: l
    };
  },
  render() {
    return c("div", {
      class: "a_pagination__counts"
    }, this.mode === "inline" || this.mode === "group" ? [
      this.showTextCountFromTo ? c(Ae, {
        class: "a_pagination__count_from_to",
        html: "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_",
        extra: this.extraForTranslate
      }) : "",
      c(Ae, {
        tag: "span",
        class: "a_pagination__count__text",
        html: "_A_COUNT_PER_PAGE_"
      }),
      this.mode === "inline" ? c("div", {
        class: "a_pagination__count"
      }, [
        this.limitsPerPage.map((e) => {
          const t = +e === this.limit;
          return c("div", {
            class: "a_pagination__count__item"
          }, [
            c(me, {
              "aria-current": t ? !0 : void 0,
              class: "a_btn a_btn_link a_pagination__count__button",
              disabled: t || this.disabled,
              extra: {
                count: e
              },
              text: e,
              textAriaHidden: !0,
              textScreenReader: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              title: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              type: "button",
              onClick: () => this.changeLimit(e)
            })
          ]);
        })
      ]) : c("ul", {
        class: "a_pagination a_pagination_group"
      }, [
        this.limitsPerPage.map((e) => {
          const t = +e === this.limit;
          return c("li", {
            class: [
              "a_pagination__item",
              {
                active: t
              }
            ]
          }, [
            c(me, {
              "aria-current": t ? !0 : void 0,
              class: "a_pagination__item__link",
              disabled: this.disabled,
              extra: {
                count: e
              },
              role: "button",
              tabindex: t || this.disabled ? -1 : 0,
              tag: "a",
              text: e,
              textAriaHidden: !0,
              textScreenReader: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              title: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              type: "button",
              onClick: () => this.changeLimit(e),
              onKeydown: (n) => this.keyDownChangeLimit(n, e)
            })
          ]);
        })
      ])
    ] : [
      this.showTextCountFromTo ? c(Ae, {
        class: "a_pagination__count_from_to",
        html: "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_",
        extra: this.extraForTranslate
      }) : "",
      c(cl, {
        label: "_A_COUNT_PER_PAGE_",
        labelClass: "a_sr_only",
        data: this.limitsPerPage,
        isDataSimpleArray: !0,
        isLabelFloat: !1,
        deselectable: !1,
        menuWidthType: "by_content",
        modelValue: this.limitString,
        disabled: this.disabled,
        change: this.changeLimitFromSelect
      })
    ]);
  }
};
function RH(e, {
  currentItem: t = _(() => 1),
  maxItems: n = _(() => 1)
}) {
  const r = d(e, "disabled"), s = _(() => r.value || t.value === 1), l = _(() => r.value || t.value === n.value);
  return {
    disabledButtonFirstPage: s,
    disabledButtonLastPage: l
  };
}
function OH(e) {
  const t = d(e, "paginationMaxItems"), n = d(e, "offset"), r = d(e, "limit"), s = d(e, "totalRowsCount"), l = _(() => sq(t.value)), o = _(() => (n.value / r.value >> 0) + 1), u = _(() => yN(s.value / r.value)), h = _(() => Math.floor(t.value / 2)), A = _(() => t.value * 2 - 1), E = ({ currentItemIndex: T, paginationLength: S }) => {
    let b, L;
    const I = h.value, v = A.value;
    if (T <= I ? (b = 0, L = t.value) : T >= v - (I + 1) ? (b = v - t.value, L = v) : l.value ? (b = T - I + 1, L = T + I + 1) : (b = T - I, L = T + I + 1), L > S) {
      const R = L - S;
      L = S + 1, b = b - R, b < 0 && (b = 0);
    }
    return {
      indexStart: b,
      indexEnd: L
    };
  }, p = _(() => {
    const T = [];
    let S = -1;
    for (let I = t.value - 1; I > -t.value; I--) {
      const v = o.value - I;
      v > 0 && v <= u.value && T.push(v), I === 0 && (S = T.length - 1);
    }
    const {
      indexStart: b,
      indexEnd: L
    } = E({
      currentItemIndex: S,
      paginationLength: T.length
    });
    return T.slice(b, L);
  });
  return {
    currentItem: o,
    maxItems: u,
    paginationItems: p
  };
}
function CH(e, { emit: t }, {
  currentItem: n = _(() => 1),
  disabledButtonFirstPage: r = _(() => !1),
  disabledButtonLastPage: s = _(() => !1),
  maxItems: l = _(() => 1)
}) {
  const o = d(e, "disabled"), u = d(e, "limit"), h = d(e, "offset"), A = (g) => {
    if (o.value || g === n.value)
      return;
    const D = (g - 1) * u.value;
    t("update:offset", D);
  }, E = () => {
    r.value || t("update:offset", 0);
  }, p = () => {
    r.value || t("update:offset", h.value - u.value);
  }, T = () => {
    s.value || t("update:offset", (l.value - 1) * u.value);
  }, S = () => {
    s.value || t("update:offset", h.value + u.value);
  };
  return {
    keyDownUpdateOffset: (g, D) => {
      (g.keyCode === X.enter || g.keyCode === X.space) && (A(D), g.stopPropagation(), g.preventDefault());
    },
    keyDownUpdateOffsetFirst: (g) => {
      (g.keyCode === X.enter || g.keyCode === X.space) && (E(), g.stopPropagation(), g.preventDefault());
    },
    keyDownUpdateOffsetLast: (g) => {
      (g.keyCode === X.enter || g.keyCode === X.space) && (T(), g.stopPropagation(), g.preventDefault());
    },
    keyDownUpdateOffsetNext: (g) => {
      (g.keyCode === X.enter || g.keyCode === X.space) && (S(), g.stopPropagation(), g.preventDefault());
    },
    keyDownUpdateOffsetPrevious: (g) => {
      (g.keyCode === X.enter || g.keyCode === X.space) && (p(), g.stopPropagation(), g.preventDefault());
    },
    updateOffset: A,
    updateOffsetFirst: E,
    updateOffsetLast: T,
    updateOffsetNext: S,
    updateOffsetPrevious: p
  };
}
const NH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
  <path fill-rule="evenodd" d="M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
</svg>`, DH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M3.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L9.293 8 3.646 2.354a.5.5 0 0 1 0-.708"/>
  <path fill-rule="evenodd" d="M7.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L13.293 8 7.646 2.354a.5.5 0 0 1 0-.708"/>
</svg>`, BH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
</svg>`, wH = {
  name: "APaginationPages",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    limit: {
      type: Number,
      required: !0
    },
    mode: {
      type: String,
      required: !1,
      default: "normal",
      validator: (e) => ["normal", "short", "loadMore"].indexOf(e) !== -1
    },
    offset: {
      type: Number,
      required: !0
    },
    paginationMaxItems: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => ca(e) && e > 0
    },
    totalRowsCount: {
      type: Number,
      required: !0
    }
  },
  emits: [
    "update:offset"
  ],
  setup(e, t) {
    const {
      currentItem: n,
      maxItems: r,
      paginationItems: s
    } = OH(e), {
      disabledButtonFirstPage: l,
      disabledButtonLastPage: o
    } = RH(e, {
      currentItem: n,
      maxItems: r
    }), {
      keyDownUpdateOffset: u,
      keyDownUpdateOffsetFirst: h,
      keyDownUpdateOffsetLast: A,
      keyDownUpdateOffsetNext: E,
      keyDownUpdateOffsetPrevious: p,
      updateOffset: T,
      updateOffsetFirst: S,
      updateOffsetLast: b,
      updateOffsetNext: L,
      updateOffsetPrevious: I
    } = CH(e, t, {
      currentItem: n,
      disabledButtonFirstPage: l,
      disabledButtonLastPage: o,
      maxItems: r
    });
    return {
      currentItem: n,
      disabledButtonFirstPage: l,
      disabledButtonLastPage: o,
      keyDownUpdateOffset: u,
      keyDownUpdateOffsetFirst: h,
      keyDownUpdateOffsetLast: A,
      keyDownUpdateOffsetNext: E,
      keyDownUpdateOffsetPrevious: p,
      maxItems: r,
      paginationItems: s,
      updateOffset: T,
      updateOffsetFirst: S,
      updateOffsetLast: b,
      updateOffsetNext: L,
      updateOffsetPrevious: I
    };
  },
  render() {
    return c(Ae, {
      tag: "nav",
      class: "a_pagination__nav",
      "aria-label": "_A_PAGINATION_NAVIGATION_"
    }, {
      default: () => this.mode === "loadMore" ? c(me, {
        class: "a_btn a_btn_primary",
        text: "Load more",
        type: "button"
      }) : [
        c("ul", {
          class: "a_pagination"
        }, [
          this.mode !== "short" ? c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonFirstPage }]
          }, [
            c(me, {
              class: "a_pagination__item__link",
              iconLeft: NH,
              role: "button",
              tabindex: this.disabledButtonFirstPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_FIRST_PAGE_",
              title: "_A_PAGINATION_FIRST_PAGE_",
              type: "button",
              onClick: this.updateOffsetFirst,
              onKeydown: this.keyDownUpdateOffsetFirst
            })
          ]) : "",
          c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonFirstPage }]
          }, [
            c(me, {
              class: "a_pagination__item__link",
              iconLeft: BH,
              role: "button",
              tabindex: this.disabledButtonFirstPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_PREVIOUS_PAGE_",
              title: "_A_PAGINATION_PREVIOUS_PAGE_",
              type: "button",
              onClick: this.updateOffsetPrevious,
              onKeydown: this.keyDownUpdateOffsetPrevious
            })
          ]),
          this.mode === "short" ? c("li", {
            class: "a_pagination__item"
          }, [
            c(Ae, {
              class: "a_pagination__item__link disabled",
              html: "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_",
              extra: {
                currentPage: this.currentItem,
                allPages: this.maxItems
              }
            })
          ]) : this.paginationItems.map((e) => {
            const t = e === this.currentItem;
            return c("li", {
              class: ["a_pagination__item", {
                active: t,
                disabled: this.disabled
              }]
            }, [
              c(me, {
                "aria-current": t ? !0 : void 0,
                class: "a_pagination__item__link",
                extra: {
                  page: e
                },
                role: "button",
                tabindex: t || this.disabled ? -1 : 0,
                tag: "a",
                text: e,
                textAriaHidden: !0,
                textScreenReader: "_A_PAGINATION_TO_PAGE_{{page}}_",
                title: "_A_PAGINATION_TO_PAGE_{{page}}_",
                type: "button",
                onClick: () => this.updateOffset(e),
                onKeydown: (n) => this.keyDownUpdateOffset(n, e)
              })
            ]);
          }),
          c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonLastPage }]
          }, [
            c(me, {
              class: "a_pagination__item__link",
              iconLeft: Wm,
              role: "button",
              tabindex: this.disabledButtonLastPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_NEXT_PAGE_",
              title: "_A_PAGINATION_NEXT_PAGE_",
              type: "button",
              onClick: this.updateOffsetNext,
              onKeydown: this.keyDownUpdateOffsetNext
            })
          ]),
          this.mode !== "short" ? c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonLastPage }]
          }, [
            c(me, {
              class: "a_pagination__item__link",
              iconLeft: DH,
              role: "button",
              tabindex: this.disabledButtonLastPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_LAST_PAGE_",
              title: "_A_PAGINATION_LAST_PAGE_",
              type: "button",
              onClick: this.updateOffsetLast,
              onKeydown: this.keyDownUpdateOffsetLast
            })
          ]) : ""
        ])
      ]
    });
  }
};
function PH(e, {
  isMobile: t = B(!1),
  updateLimit: n = () => {
  },
  updateOffset: r = () => {
  }
}) {
  const s = d(e, "modes"), l = d(e, "countAllRows"), o = d(e, "disabled"), u = d(e, "limitsPerPage"), h = d(e, "limit"), A = d(e, "offset"), E = d(e, "rowsLength"), p = d(e, "totalRowsCount"), T = d(e, "maxPages"), S = _(() => t.value ? s.value.mobile || {
    perPage: {
      mode: "select",
      position: 0,
      showTextCountFromTo: !1
    },
    pagination: {
      mode: "short",
      position: 1
    }
  } : s.value.desktop || {
    perPage: {
      mode: "inline",
      position: 0,
      showTextCountFromTo: !0
    },
    pagination: {
      mode: "normal",
      position: 1
    }
  }), b = _(() => {
    const I = [];
    return z(S.value, (v, R) => {
      I.push({
        ...v,
        component: R
      });
    }), Nd(I, "position");
  });
  return {
    components: _(() => {
      const I = [];
      return z(b.value, (v) => {
        v.component === "perPage" ? I.push(c(gH, {
          countAllRows: l.value,
          disabled: o.value,
          limitsPerPage: u.value,
          limit: h.value,
          offset: A.value,
          rowsLength: E.value,
          mode: v.mode,
          showTextCountFromTo: v.showTextCountFromTo,
          "onUpdate:limit": n
        })) : v.component === "pagination" && I.push(c(wH, {
          limit: h.value,
          disabled: o.value,
          totalRowsCount: p.value,
          offset: A.value,
          paginationMaxItems: T.value,
          mode: v.mode,
          "onUpdate:offset": r
        }));
      }), I;
    })
  };
}
function xH(e, { emit: t }) {
  return {
    updateLimit: (s) => {
      t("update:limit", s);
    },
    updateOffset: (s) => {
      t("update:offset", s);
    }
  };
}
const FH = {
  name: "APagination",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hasRows: {
      type: Boolean,
      required: !0
    },
    limit: {
      type: Number,
      required: !0
    },
    limitsPerPage: {
      type: Array,
      required: !1,
      default: () => ["10", "25", "50", "100"]
    },
    maxPages: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => ca(e) && e > 0
    },
    offset: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    totalRowsCount: {
      type: Number,
      required: !0
    },
    modes: {
      type: Object,
      required: !1,
      default: () => ({
        /*
         * perPage: inline / group / select
         * pagination: normal / short / loadMore
         */
        desktop: {
          perPage: {
            mode: "group",
            position: 0,
            showTextCountFromTo: !0
          },
          pagination: {
            mode: "normal",
            position: 1
          }
        },
        mobile: {
          perPage: {
            mode: "select",
            position: 0,
            showTextCountFromTo: !1
          },
          pagination: {
            mode: "short",
            position: 1
          }
        }
      })
    }
  },
  emits: [
    "update:limit",
    "update:offset"
  ],
  setup(e, t) {
    const {
      isMobileWidth: n
    } = En(), {
      updateLimit: r,
      updateOffset: s
    } = xH(e, t), {
      components: l
    } = PH(e, {
      isMobile: n,
      updateLimit: r,
      updateOffset: s
    });
    return {
      components: l,
      updateLimit: r,
      updateOffset: s
    };
  },
  render() {
    return this.hasRows ? c("div", {
      class: "a_pagination__parent"
    }, this.components) : null;
  }
};
function MH(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = d(e, "classProgressBar");
  return {
    classProgressBarLocal: _(() => qe(n.value) ? n.value(t.value) : n.value)
  };
}
function qH(e) {
  const t = d(e, "duration");
  return {
    durationLocal: _(() => {
      if (!ie(t.value))
        return `${t.value}s`;
    })
  };
}
function jm(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = d(e, "valueTextInteger"), {
    filterCurrency: r
  } = Hn();
  return {
    valuePercent: _(() => n.value ? r(t.value, {
      suffix: "%",
      digits: 0
    }) : r(t.value, {
      suffix: "%",
      digits: 2
    }))
  };
}
function zm(e) {
  const t = d(e, "min"), n = d(e, "max"), r = d(e, "value");
  return {
    widthPercent: _(() => (r.value - t.value) / (n.value - t.value) * 100)
  };
}
const Ode = {
  name: "AProgress",
  props: {
    classProgressBar: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    duration: {
      type: Number,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1,
      default: !1
    },
    max: {
      type: Number,
      required: !1,
      default: 100
    },
    min: {
      type: Number,
      required: !1,
      default: 0
    },
    reverse: {
      type: Boolean,
      required: !1,
      default: !1
    },
    showValue: {
      type: Boolean,
      required: !1,
      default: !0
    },
    striped: {
      type: Boolean,
      required: !1,
      default: !1
    },
    stripedFlow: {
      type: Boolean,
      required: !1,
      default: !1
    },
    value: {
      type: Number,
      required: !1,
      default: 0
    },
    valueTextInteger: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  setup(e) {
    const {
      widthPercent: t
    } = zm(e), {
      valuePercent: n
    } = jm(e, {
      widthPercent: t
    }), {
      classProgressBarLocal: r
    } = MH(e, {
      widthPercent: t
    }), {
      durationLocal: s
    } = qH(e);
    return {
      classProgressBarLocal: r,
      durationLocal: s,
      valuePercent: n,
      widthPercent: t
    };
  },
  render() {
    let e;
    return this.$slots.progressText ? e = c("span", {
      class: "a_progress__text"
    }, [
      this.$slots.progressText && this.$slots.progressText({
        valuePercent: this.valuePercent
      })
    ]) : this.showValue && (e = c("span", {
      class: "a_progress__text"
    }, this.valuePercent)), c("div", {
      class: ["a_progress", {
        a_progress_reverse: this.reverse
      }]
    }, [
      c("div", {
        class: [
          "a_progress__bar",
          {
            a_progress__bar_striped: this.striped,
            a_progress__bar_striped_flow: this.stripedFlow,
            a_progress__bar_indeterminate: this.indeterminate
          },
          this.classProgressBarLocal
        ],
        role: "progressbar",
        "aria-valuenow": this.value,
        "aria-valuemin": this.min,
        "aria-valuemax": this.max,
        style: {
          width: `${this.widthPercent}%`,
          "animation-duration": this.durationLocal
        }
      }, [
        e
      ])
    ]);
  }
};
function $H(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = d(e, "strokeWidth"), r = 50, s = 2 * Math.PI * r, l = _(() => t.value * s / 100), o = _(() => `${l.value}px ${s - l.value}px`), u = _(() => `stroke-dasharray: ${o.value};`), h = _(() => r + n.value / 2);
  return {
    circleStyles: u,
    cxCy: h,
    radius: r
  };
}
function kH(e) {
  const t = d(e, "width");
  return {
    sizesLocal: _(() => yn(t.value) ? `height: ${t.value}px; width: ${t.value}px;` : `height: ${t.value}; width: ${t.value};`)
  };
}
function UH(e) {
  const t = d(e, "rotate"), n = d(e, "strokeWidth"), r = _(() => {
    const l = 100 + n.value;
    return `0 0 ${l} ${l}`;
  });
  return {
    svgTransform: _(() => `transform: rotate(${t.value - 90}deg);`),
    svgViewBox: r
  };
}
const Cde = {
  name: "AProgressCircle",
  props: {
    duration: {
      type: Number,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1,
      default: !1
    },
    max: {
      type: Number,
      required: !1,
      default: 100
    },
    min: {
      type: Number,
      required: !1,
      default: 0
    },
    rotate: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0 && e <= 360
    },
    showValue: {
      type: Boolean,
      required: !1,
      default: !0
    },
    strokeWidth: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => e > 0
    },
    value: {
      type: Number,
      required: !1,
      default: 0
    },
    valueTextClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    valueTextInteger: {
      type: Boolean,
      required: !1,
      default: !1
    },
    width: {
      type: [Number, String],
      required: !1,
      default: 125
    }
  },
  setup(e) {
    const {
      widthPercent: t
    } = zm(e), {
      valuePercent: n
    } = jm(e, {
      widthPercent: t
    }), {
      circleStyles: r,
      cxCy: s,
      radius: l
    } = $H(e, {
      widthPercent: t
    }), {
      svgTransform: o,
      svgViewBox: u
    } = UH(e), {
      sizesLocal: h
    } = kH(e);
    return {
      circleStyles: r,
      cxCy: s,
      radius: l,
      sizesLocal: h,
      svgTransform: o,
      svgViewBox: u,
      valuePercent: n,
      widthPercent: t
    };
  },
  render() {
    let e;
    return this.$slots.progressText ? e = c("span", {
      class: ["a_progress_circle__text", this.valueTextClass]
    }, [
      this.$slots.progressText && this.$slots.progressText({
        valuePercent: this.valuePercent
      })
    ]) : this.showValue && (e = c("span", {
      class: ["a_progress_circle__text", this.valueTextClass]
    }, this.valuePercent)), c("div", {
      class: "a_progress_circle",
      style: this.sizesLocal,
      role: "progressbar",
      "aria-valuenow": this.value,
      "aria-valuemin": this.min,
      "aria-valuemax": this.max
    }, [
      c("svg", {
        viewBox: this.svgViewBox,
        style: this.svgTransform
      }, [
        c("circle", {
          class: "a_progress_circle__base",
          cx: this.cxCy,
          cy: this.cxCy,
          r: this.radius,
          "stroke-width": this.strokeWidth
        }),
        c("circle", {
          class: ["a_progress_circle__scale", {
            a_progress_circle__scale_indeterminate: this.indeterminate
          }],
          cx: this.cxCy,
          cy: this.cxCy,
          r: this.radius,
          "stroke-width": this.strokeWidth,
          style: this.circleStyles
        })
      ]),
      e
    ]);
  }
}, lf = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16">
  <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
</svg>`, tp = {
  name: "ADecimalIcon",
  components: {
    AIcon: ut
  },
  props: {
    value: {
      type: Number,
      default: 50
    },
    color: {
      type: String,
      default: "yellow"
    },
    icon: {
      type: String,
      default: lf
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    }
  },
  render() {
    const e = {
      class: "a_decimal_rate_icon a_rate_icon_decimal",
      style: {
        position: "absolute",
        overflow: "hidden",
        width: `${this.value}%`,
        color: this.color
      }
    };
    return c("i", e, [
      c(ut, {
        icon: this.icon,
        class: `a_decimal_rate_icon a_rate_icon_${this.size}`
      })
    ]);
  }
}, Ym = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star" viewBox="0 0 16 16">
  <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.56.56 0 0 0-.163-.505L1.71 6.745l4.052-.576a.53.53 0 0 0 .393-.288L8 2.223l1.847 3.658a.53.53 0 0 0 .393.288l4.052.575-2.906 2.77a.56.56 0 0 0-.163.506l.694 3.957-3.686-1.894a.5.5 0 0 0-.461 0z"/>
</svg>`, np = {
  name: "ARateIcon",
  components: {
    AIcon: ut,
    ADecimalIcon: tp
  },
  props: {
    value: {
      type: Number,
      default: 50
    },
    color: {
      type: String,
      default: "yellow"
    },
    icon: {
      type: String,
      default: Ym
    },
    iconFill: {
      type: String,
      default: lf
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    },
    isHovered: {
      type: Boolean,
      default: !1
    }
  },
  emits: [
    "mouseenter",
    "mouseleave",
    "click",
    "dblclick",
    "mousemove"
  ],
  setup(e, { emit: t }) {
    return {
      handleMouseEnter(n) {
        t("mouseenter", n);
      },
      handleMouseLeave(n) {
        t("mouseleave", n);
      },
      handleClick(n) {
        t("click", n);
      },
      handleDblClick(n) {
        t("dblclick", n);
      },
      handleMouseMove(n) {
        t("mousemove", n);
      }
    };
  },
  render() {
    return c(
      "span",
      {
        class: `el-rate__item a_rate_icon_${this.size}`,
        style: {
          position: "relative",
          display: "inline-flex",
          alignItems: "center",
          justifyContent: "center"
        },
        onClick: this.handleClick,
        onDblclick: this.handleDblClick,
        onMouseenter: this.handleMouseEnter,
        onMouseleave: this.handleMouseLeave,
        onMousemove: this.handleMouseMove
      },
      [
        c("div", { class: "a_rate_icon_align" }, [
          c(ut, {
            icon: this.icon,
            class: "a_decimal_rate_icon a_rate_decimal",
            color: this.color
          }),
          c(tp, {
            icon: this.iconFill,
            value: this.value,
            color: this.color,
            size: this.size
          })
        ])
      ]
    );
  }
}, Nde = {
  name: "ARate",
  components: {
    AIcon: ut,
    ATranslation: Ae,
    ARateIcon: np
  },
  props: {
    text: {
      type: String,
      default: null
    },
    extra: {
      type: Object,
      required: !1
    },
    rating: {
      type: Number,
      default: 5
    },
    icon: {
      type: String,
      default: Ym
    },
    iconFill: {
      type: String,
      default: lf
    },
    readonly: {
      type: Boolean,
      default: !1
    },
    showScore: {
      type: Boolean,
      default: !1
    },
    modelValue: {
      type: Number,
      default: 0
    },
    color: {
      type: String,
      default: "yellow"
    },
    hoveredColor: {
      type: String,
      default: "orange"
    },
    halfIcon: {
      type: Boolean,
      default: !1
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const {
      text: n,
      rating: r,
      modelValue: s,
      showScore: l,
      readonly: o,
      icon: u,
      extra: h,
      color: A,
      hoveredColor: E,
      halfIcon: p,
      size: T
    } = SR(e), S = B(void 0), b = B(void 0), L = B(-1), I = () => {
      S.value = s.value, b.value = s.value;
    }, v = _(() => e.iconFill ? e.iconFill : `${e.icon}Fill`), R = () => {
      o.value || (S.value = 0, t("update:modelValue", S.value));
    }, g = (C, k) => {
      if (o.value)
        return;
      L.value = k;
      let W = k + 1;
      if (p.value) {
        const K = C.target.getBoundingClientRect();
        W = C.clientX - K.left < K.width / 2 ? k + 0.5 : k + 1;
      }
      b.value = W;
    }, D = () => {
      o.value || (L.value = -1);
    }, w = _(() => Array(r.value).fill(null).map((C, k) => k <= L.value ? E.value : k < S.value ? A.value : null)), M = (C, k) => {
      if (o.value)
        return;
      let W = k + 1;
      if (p.value) {
        const K = C.target.getBoundingClientRect();
        W = C.clientX - K.left < K.width / 2 ? k + 0.5 : k + 1;
      }
      t("update:modelValue", W), S.value = W;
    }, P = _(() => {
      const C = L.value >= 0 ? b.value : S.value, k = Math.floor(C), W = C % 1, K = Array(r.value).fill(0);
      for (let le = 0; le < k; le++)
        K[le] = 100;
      return W !== 0 && k < r.value && (K[k] = W * 100), K;
    }), F = (C, k) => {
      if (o.value)
        return;
      let W = k + 1;
      if (p.value) {
        const K = C.target.getBoundingClientRect();
        W = C.clientX - K.left < K.width / 2 ? k + 0.5 : k + 1;
      }
      b.value !== W && (b.value = W, L.value = k);
    };
    return I(), {
      rating: r,
      showScore: l,
      readonly: o,
      icon: u,
      iconFill: v,
      text: n,
      extra: h,
      color: A,
      size: T,
      onMouseEnterIcon: g,
      onMouseLeaveIcon: D,
      onClickIcon: M,
      onDoubleClickIcon: R,
      onMouseMoveIcon: F,
      modelValue: _(() => S.value),
      iconValues: P,
      computedColor: w
    };
  },
  render() {
    return c("div", { class: "a_rate_container" }, [
      ...Array.from({ length: this.rating }, (e, t) => c(np, {
        class: "a_rate_icon",
        icon: this.icon,
        iconFill: this.iconFill,
        value: this.iconValues[t],
        onClick: (n) => this.onClickIcon(n, t),
        onDblclick: this.onDoubleClickIcon,
        onMouseenter: (n) => this.onMouseEnterIcon(n, t),
        onMouseleave: this.onMouseLeaveIcon,
        onMousemove: (n) => this.onMouseMoveIcon(n, t),
        color: this.computedColor[t],
        size: this.size,
        key: t
      })),
      this.showScore && c("span", { class: "a_rate_score" }, this.modelValue.toString()),
      c(Ae, {
        class: "a_rate_label",
        text: this.text,
        extra: this.extra
      })
    ]);
  }
}, HH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
  <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0"/>
</svg>`, VH = {
  name: "AResizer",
  props: {
    direction: {
      type: String,
      required: !0,
      validator: (e) => ["x", "y"].indexOf(e) !== -1
    },
    disabled: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "mousedown",
    "mousemove",
    "mouseoutDocument",
    "mouseup"
  ],
  data() {
    return {
      clientHeight: 0,
      clientWidth: 0
    };
  },
  computed: {
    isDirectionX() {
      return this.direction === "x";
    },
    isDirectionY() {
      return this.direction === "y";
    },
    directionClass() {
      return `a_resizer_${this.direction}`;
    },
    directionIcon() {
      if (this.direction === "x")
        return HH;
      if (this.direction === "y")
        return Nl;
    },
    cursor() {
      if (this.direction === "x")
        return "w-resize";
      if (this.direction === "y")
        return "s-resize";
    },
    bodyClass() {
      return `a_resizer_${this.direction}_active__body`;
    },
    attributesResizer() {
      const e = {
        class: ["a_resizer", this.directionClass, {
          a_resizer_disabled: this.disabled
        }],
        ariaHidden: !0
      };
      return this.disabled || (e.onMousedown = this.mousedown), e;
    }
  },
  unmounted() {
    this.removeMouseEventListeners(), this.removeClassFromBody();
  },
  methods: {
    mousedown(e) {
      this.addMouseEventListeners(), this.clientHeight = document.documentElement.clientHeight, this.clientWidth = document.documentElement.clientWidth, this.$emit("mousedown", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.addClassToBody();
    },
    mousemove(e) {
      this.$emit("mousemove", {
        $event: e,
        clientX: e.clientX,
        clientY: e.clientY,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      });
    },
    mouseup(e) {
      this.removeMouseEventListeners(), this.$emit("mouseup", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.removeClassFromBody();
    },
    mouseoutDocument(e) {
      this.removeMouseEventListeners(), this.$emit("mouseoutDocument", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.removeClassFromBody();
    },
    addMouseEventListeners() {
      document.addEventListener("mousemove", this.mousemove), document.addEventListener("mouseup", this.mouseup), document.addEventListener("mouseleave", this.mouseoutDocument);
    },
    removeMouseEventListeners() {
      document.removeEventListener("mousemove", this.mousemove), document.removeEventListener("mouseup", this.mouseup), document.removeEventListener("mouseleave", this.mouseoutDocument);
    },
    addClassToBody() {
      document.body.classList.add(this.bodyClass);
    },
    removeClassFromBody() {
      document.body.classList.remove(this.bodyClass);
    }
  },
  render() {
    return c("div", this.attributesResizer, [
      c("div", {
        class: "a_resizer__line"
      }),
      c(ut, {
        class: "a_resizer__icon",
        icon: this.directionIcon
      })
    ]);
  }
}, WH = {
  name: "ACircle",
  props: {
    cx: {
      type: [Number, String],
      required: !0
    },
    cy: {
      type: [Number, String],
      required: !0
    },
    r: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("circle", {
      cx: this.cx,
      cy: this.cy,
      r: this.r,
      fill: this.fill,
      stroke: this.stroke,
      "stroke-width": this.strokeWidth
    });
  }
}, tl = {
  name: "ARect",
  props: {
    width: {
      type: [Number, String],
      required: !0
    },
    height: {
      type: [Number, String],
      required: !0
    },
    x: {
      type: [Number, String],
      required: !0
    },
    y: {
      type: [Number, String],
      required: !0
    },
    rx: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    ry: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("rect", {
      width: this.width,
      height: this.height,
      x: this.x,
      y: this.y,
      rx: this.rx,
      ry: this.ry,
      fill: this.fill,
      stroke: this.stroke,
      strokeWidth: this.strokeWidth
    });
  }
};
function GH(e) {
  const t = d(e, "yStandTop"), n = d(e, "pipesWidth"), r = d(e, "centerX"), s = d(e, "balanceWidth"), l = d(e, "balanceCircleRadius"), o = d(e, "balanceTopHeight"), u = d(e, "degree"), h = _(() => t.value - l.value - n.value / 2), A = _(() => s.value / 2), E = _(() => r.value - A.value - l.value), p = _(() => r.value + l.value), T = _(() => t.value - l.value), S = _(() => r.value - n.value / 2), b = _(() => T.value - l.value - o.value);
  return {
    transformRotate: _(() => `rotate(${u.value}, ${r.value}, ${T.value})`),
    widthBalancePipe: A,
    xBalanceLeft: E,
    xBalanceRight: p,
    xBalanceTopHeight: S,
    yBalance: h,
    yBalanceCenter: T,
    yBalanceTopHeight: b
  };
}
const KH = {
  name: "AScaleBalance",
  props: {
    degree: {
      type: Number,
      required: !0
    },
    pipesWidth: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    balanceWidth: {
      type: Number,
      required: !0
    },
    balanceCircleRadius: {
      type: Number,
      required: !0
    },
    balanceTopHeight: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      transformRotate: t,
      widthBalancePipe: n,
      xBalanceLeft: r,
      xBalanceRight: s,
      xBalanceTopHeight: l,
      yBalance: o,
      yBalanceCenter: u,
      yBalanceTopHeight: h
    } = GH(e);
    return {
      transformRotate: t,
      widthBalancePipe: n,
      xBalanceLeft: r,
      xBalanceRight: s,
      xBalanceTopHeight: l,
      yBalance: o,
      yBalanceCenter: u,
      yBalanceTopHeight: h
    };
  },
  render() {
    return c("g", {
      transform: this.transformRotate
    }, [
      c(tl, {
        width: this.pipesWidth,
        height: this.balanceTopHeight,
        x: this.xBalanceTopHeight,
        y: this.yBalanceTopHeight,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(tl, {
        width: this.widthBalancePipe,
        height: this.pipesWidth,
        x: this.xBalanceLeft,
        y: this.yBalance,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(tl, {
        width: this.widthBalancePipe,
        height: this.pipesWidth,
        x: this.xBalanceRight,
        y: this.yBalance,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(WH, {
        cx: this.centerX,
        cy: this.yBalanceCenter,
        r: this.balanceCircleRadius,
        fill: "none",
        stroke: "currentColor",
        strokeWidth: this.pipesWidth
      })
    ]);
  }
};
function jH(e) {
  const t = d(e, "direction"), n = d(e, "degree"), r = d(e, "balanceWidth"), s = d(e, "balanceCircleRadius"), l = d(e, "yStandTop"), o = d(e, "bowlThreadHeight"), u = d(e, "pipesWidth"), h = d(e, "centerX"), A = d(e, "bowlWidth"), E = _(() => r.value / 2 + s.value), p = _(() => l.value + o.value - u.value / 2 - s.value + 2), T = _(() => t.value === "right" ? n.value : n.value + 180), S = _(() => r.value / 2 + A.value / 2 + s.value - 2), b = _(() => r.value / 2 - A.value / 2 + s.value - 1), L = _(() => t.value === "left" ? h.value - S.value + E.value : h.value + b.value - E.value), I = _(() => (t.value === "right", E.value * Math.cos(T.value * Math.PI / 180) + L.value)), v = _(() => E.value * Math.sin(T.value * Math.PI / 180) + p.value);
  return {
    x: I,
    y: v
  };
}
const rp = {
  name: "AScaleBowl",
  props: {
    direction: {
      type: String,
      required: !0,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    },
    degree: {
      type: Number,
      required: !0
    },
    balanceWidth: {
      type: Number,
      required: !0
    },
    balanceCircleRadius: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    bowlThreadHeight: {
      type: Number,
      required: !0
    },
    pipesWidth: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    },
    bowlWidth: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      x: t,
      y: n
    } = jH(e);
    return {
      x: t,
      y: n
    };
  },
  render() {
    return c("use", {
      x: this.x,
      y: this.y,
      "xlink:href": "#scale_bowl"
    });
  }
}, zH = {
  name: "APath",
  props: {
    d: {
      type: String,
      required: !0,
      default: ""
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    fillRule: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["evenodd", "inherit", "initial", "nonzero", "revert", "unset"].indexOf(e) !== -1
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("path", {
      d: this.d,
      fill: this.fill,
      fillRule: this.fillRule,
      stroke: this.stroke,
      strokeWidth: this.strokeWidth
    });
  }
};
function YH(e) {
  const t = d(e, "points"), n = (s) => Pn(s, (o) => {
    let u = "";
    return it(o) ? u = o : Te(o) && (u = o.join(",")), u;
  }).join(" ");
  return {
    pointsLocal: _(() => it(t.value) ? t.value : Te(t.value) ? n(t.value) : "")
  };
}
const XH = {
  name: "APolyline",
  props: {
    points: {
      type: [Array, String],
      required: !0,
      default: []
    },
    fill: {
      type: String,
      required: !1,
      default: "none"
    },
    stroke: {
      type: String,
      required: !1,
      default: "currentColor"
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      pointsLocal: t
    } = YH(e);
    return {
      pointsLocal: t
    };
  },
  render() {
    return c("polyline", {
      points: this.pointsLocal,
      fill: this.fill,
      stroke: this.stroke,
      "stroke-width": this.strokeWidth
    });
  }
};
function ZH(e) {
  const t = d(e, "bowlThreadHeight"), n = d(e, "bowlThreadWidth"), r = d(e, "bowlThreadPaddingX"), s = d(e, "bowlWidth"), l = d(e, "bowlRadius"), o = _(() => {
    const h = r.value, A = r.value + n.value / 2, E = r.value + n.value, p = 1, T = p - t.value;
    return `${h},${p} ${A},${T} ${E},${p}`;
  });
  return {
    bowlD: _(() => `m0,0 a${l.value},${l.value} 0 1,0 ${s.value},0 z`),
    bowlThreadPoints: o
  };
}
const JH = {
  name: "AScaleBowlDefs",
  props: {
    bowlThreadStrokeWidth: {
      type: Number,
      required: !0
    },
    bowlThreadWidth: {
      type: Number,
      required: !0
    },
    bowlThreadHeight: {
      type: Number,
      required: !0
    },
    bowlThreadPaddingX: {
      type: Number,
      required: !0
    },
    bowlWidth: {
      type: Number,
      required: !0
    },
    bowlRadius: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      bowlD: t,
      bowlThreadPoints: n
    } = ZH(e);
    return {
      bowlD: t,
      bowlThreadPoints: n
    };
  },
  render() {
    return c("defs", {}, [
      c("g", {
        id: "scale_bowl"
      }, [
        c(XH, {
          points: this.bowlThreadPoints,
          strokeWidth: this.bowlThreadStrokeWidth
        }),
        c(zH, {
          d: this.bowlD,
          fill: "currentColor"
        })
      ])
    ]);
  }
};
function QH(e) {
  const t = d(e, "centerX"), n = d(e, "standWidth"), r = d(e, "pipesWidth"), s = _(() => t.value - r.value / 2), l = _(() => t.value - n.value / 2);
  return {
    xTop: s,
    xBottom: l
  };
}
const eV = {
  name: "AScaleStand",
  props: {
    pipesWidth: {
      type: Number,
      required: !0
    },
    standWidth: {
      type: Number,
      required: !0
    },
    standHeight: {
      type: Number,
      required: !0
    },
    yStandBottom: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      xBottom: t,
      xTop: n
    } = QH(e);
    return {
      xBottom: t,
      xTop: n
    };
  },
  render() {
    return c("g", null, [
      c(tl, {
        width: this.pipesWidth,
        height: this.standHeight,
        x: this.xTop,
        y: this.yStandTop,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(tl, {
        width: this.standWidth,
        height: this.pipesWidth,
        x: this.xBottom,
        y: this.yStandBottom,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      })
    ]);
  }
};
function tV(e) {
  const t = d(e, "value"), n = d(e, "classNegative"), r = d(e, "classPositive"), s = d(e, "classNeutral");
  return {
    cssClass: _(() => {
      if (t.value === 0) {
        if (s.value)
          return s.value;
      } else if (t.value < 0) {
        if (n.value)
          return n.value;
      } else if (r.value)
        return r.value;
    })
  };
}
function nV(e) {
  const t = d(e, "value"), n = d(e, "maxDegree");
  return {
    degree: _(() => n.value * t.value / 100)
  };
}
function rV(e) {
  const t = d(e, "viewBoxWidth"), n = d(e, "viewBoxHeight"), r = d(e, "pipesWidth"), s = d(e, "standHeight"), l = _(() => `0 0 ${t.value} ${n.value}`), o = _(() => t.value / 2), u = _(() => n.value - r.value), h = _(() => u.value - s.value + 1);
  return {
    centerX: o,
    viewBoxLocal: l,
    yStandBottom: u,
    yStandTop: h
  };
}
const Dde = {
  name: "AScale",
  props: {
    balanceCircleRadius: {
      type: Number,
      required: !1,
      default: 3.5
    },
    balanceTopHeight: {
      type: Number,
      required: !1,
      default: 6
    },
    balanceWidth: {
      type: Number,
      required: !1,
      default: 60
    },
    bowlRadius: {
      type: Number,
      required: !1,
      default: 12.6
    },
    bowlThreadHeight: {
      type: Number,
      required: !1,
      default: 20
    },
    bowlThreadPaddingX: {
      type: Number,
      required: !1,
      default: 4
    },
    bowlThreadStrokeWidth: {
      type: Number,
      required: !1,
      default: 2
    },
    bowlThreadWidth: {
      type: Number,
      required: !1,
      default: 16
    },
    bowlWidth: {
      type: Number,
      required: !1,
      default: 25
    },
    classNegative: {
      type: String,
      required: !1,
      default: void 0
    },
    classNeutral: {
      type: String,
      required: !1,
      default: void 0
    },
    classPositive: {
      type: String,
      required: !1,
      default: void 0
    },
    maxDegree: {
      type: Number,
      required: !1,
      default: 30
    },
    pipesWidth: {
      type: Number,
      required: !1,
      default: 3
    },
    standHeight: {
      type: Number,
      required: !1,
      default: 46
    },
    standWidth: {
      type: Number,
      required: !1,
      default: 70
    },
    value: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= -100 && e <= 100
    },
    viewBoxHeight: {
      type: Number,
      required: !1,
      default: 80
    },
    viewBoxWidth: {
      type: Number,
      required: !1,
      default: 100
    }
  },
  setup(e) {
    const {
      degree: t
    } = nV(e), {
      cssClass: n
    } = tV(e), {
      centerX: r,
      viewBoxLocal: s,
      yStandBottom: l,
      yStandTop: o
    } = rV(e);
    return {
      centerX: r,
      cssClass: n,
      degree: t,
      viewBoxLocal: s,
      yStandBottom: l,
      yStandTop: o
    };
  },
  render() {
    return c("div", {
      class: this.cssClass
    }, [
      c("svg", {
        viewBox: this.viewBoxLocal,
        version: "1.1",
        xmlns: "http://www.w3.org/2000/svg"
      }, [
        c(JH, {
          bowlThreadStrokeWidth: this.bowlThreadStrokeWidth,
          bowlThreadWidth: this.bowlThreadWidth,
          bowlThreadHeight: this.bowlThreadHeight,
          bowlThreadPaddingX: this.bowlThreadPaddingX,
          bowlWidth: this.bowlWidth,
          bowlRadius: this.bowlRadius
        }),
        c(KH, {
          degree: this.degree,
          pipesWidth: this.pipesWidth,
          yStandTop: this.yStandTop,
          centerX: this.centerX,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          balanceTopHeight: this.balanceTopHeight
        }),
        c(eV, {
          standWidth: this.standWidth,
          standHeight: this.standHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          yStandBottom: this.yStandBottom,
          yStandTop: this.yStandTop
        }),
        c(rp, {
          direction: "left",
          degree: this.degree,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          yStandTop: this.yStandTop,
          bowlThreadHeight: this.bowlThreadHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          bowlWidth: this.bowlWidth
        }),
        c(rp, {
          direction: "right",
          degree: this.degree,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          yStandTop: this.yStandTop,
          bowlThreadHeight: this.bowlThreadHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          bowlWidth: this.bowlWidth
        })
      ])
    ]);
  }
};
function aV(e, {
  hasTextAndLength: t = B(!1),
  isMoreButtonObservingVisible: n = B(!1),
  isOpen: r = B(!1),
  isTextShorterThanTextLength: s = B(!1)
}) {
  const l = d(e, "btnIconLeftLess"), o = d(e, "btnIconLeftMore"), u = d(e, "btnIconRightLess"), h = d(e, "btnIconRightMore"), A = d(e, "btnTextLess"), E = d(e, "btnTextMore"), p = d(e, "btnTitleLess"), T = d(e, "btnTitleMore"), S = d(e, "showLess"), b = B(void 0), L = _(() => r.value ? A.value : E.value), I = _(() => r.value ? p.value : T.value), v = _(() => r.value ? l.value : o.value), R = _(() => r.value ? u.value : h.value), g = _(() => t.value ? s.value ? !1 : S.value ? !0 : !r.value : n.value ? S.value ? !0 : !r.value : !1);
  return {
    btnIconLeft: v,
    btnIconRight: R,
    btnText: L,
    btnTitle: I,
    buttonRef: b,
    isButtonVisible: g
  };
}
function sV({
  hasTextAndLength: e = _(() => !1),
  isOpen: t = B(!1)
}) {
  return {
    ariaExpanded: _(() => {
      if (e.value)
        return t.value;
    })
  };
}
function iV(e, {
  hasTextAndLength: t = _(() => !1),
  isOpen: n = B(!1)
}) {
  const r = d(e, "height");
  return {
    maxHeightStyle: _(() => {
      if (!(t.value || n.value))
        return r.value === 0 ? "max-height: none;" : `max-height: ${r.value}px`;
    })
  };
}
function lV(e) {
  const t = d(e, "isOpenDefault"), n = B(void 0);
  return {
    initIsOpen: () => {
      n.value = t.value;
    },
    isOpen: n
  };
}
function oV(e, {
  isBtnHiddenDependentOnTextLength: t = _(() => !1)
}) {
  const n = d(e, "height"), r = B(void 0), s = B(void 0), l = B(void 0), o = () => {
    if (t.value)
      return;
    (fe(r.value, "offsetHeight") || 0) > n.value ? l.value = !0 : l.value = !1;
  };
  return {
    checkHeight: o,
    containerRef: r,
    isMoreButtonObservingVisible: l,
    startObservingMutation: () => {
      t.value || (s.value = new ResizeObserver(
        il(() => {
          o();
        }, 300)
      ), s.value.observe(r.value));
    },
    stopObservingMutation: () => {
      t.value || s.value && s.value.unobserve(r.value);
    }
  };
}
function uV({
  hasTextAndLength: e = _(() => !1),
  isOpen: t = B(!1)
}) {
  return {
    textScreenReaderLocal: _(() => {
      if (!e.value)
        return t.value ? "_A_SHOW_MORE_LESS_SCREEN_READER_" : "_A_SHOW_MORE_MORE_SCREEN_READER_";
    })
  };
}
function _V(e, {
  isOpen: t = B(!1)
}) {
  const n = d(e, "text"), r = d(e, "textLength"), s = _(() => !!(n.value && r.value)), l = _(() => r.value > n.value.length), o = _(() => s.value && l.value), u = _(() => {
    const A = n.value.slice(0, r.value).trimEnd();
    let E = "...", p = !0;
    for (let T = A.length - 1; T > A.length - 4 && A[T] === "."; T--) {
      if (p)
        E = E.slice(0, -1);
      else
        break;
      p = !0;
    }
    return `${A}${E}`;
  }), h = _(() => {
    if (s.value) {
      if (l.value)
        return n.value;
      if (!t.value)
        return u.value;
    }
    return n.value;
  });
  return {
    hasTextAndLength: s,
    isBtnHiddenDependentOnTextLength: o,
    isTextShorterThanTextLength: l,
    textLocal: h
  };
}
function dV(e, {
  textLocal: t = _(() => {
  })
}) {
  const n = d(e, "safeHtml"), r = d(e, "html");
  return {
    isTextOrHtmlVisible: _(() => !!(t.value || n.value || r.value))
  };
}
function cV(e, { emit: t }, {
  containerRef: n = B(void 0),
  hasTextAndLength: r = _(() => !1),
  isOpen: s = B(!1),
  stopObservingMutation: l = () => {
  }
}) {
  const o = d(e, "showLess");
  return {
    isOpen: s,
    toggleButton: () => {
      s.value = !s.value, s.value && !o.value && l(), t("toggle", { isOpen: s.value }), r.value && s.value && !window.isScrollDisabled && iu().then(
        () => aa({
          element: n.value
        })
      );
    }
  };
}
const Bde = {
  name: "AShowMore",
  inheritAttrs: !0,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    btnAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link a_p_0"
    },
    btnIconLeftLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconLeftMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnId: {
      type: String,
      required: !1,
      default: void 0
    },
    btnParentClass: {
      type: String,
      required: !1,
      default: "a_text_center"
    },
    btnTextLess: {
      type: String,
      required: !1,
      default: "_A_SHOW_MORE_LESS_"
    },
    btnTextMore: {
      type: String,
      required: !1,
      default: "_A_SHOW_MORE_MORE_"
    },
    btnTitleLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitleMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitlePlacement: {
      type: String,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    height: {
      type: Number,
      required: !1,
      default: 200,
      validator: (e) => e >= 0
    },
    html: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_show_more_")
    },
    isBtnTitleHtml: {
      type: Boolean,
      required: !1
    },
    isOpenDefault: {
      type: Boolean,
      required: !1,
      default: !1
    },
    safeHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    showLess: {
      type: Boolean,
      required: !1,
      default: !0
    },
    text: {
      type: String,
      required: !1,
      default: void 0
    },
    textLength: {
      type: Number,
      required: !1,
      default: void 0,
      validator: (e) => e > 0
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      isOpen: r
    } = lV(e), {
      hasTextAndLength: s,
      isBtnHiddenDependentOnTextLength: l,
      isTextShorterThanTextLength: o,
      textLocal: u
    } = _V(e, {
      isOpen: r
    }), {
      isTextOrHtmlVisible: h
    } = dV(e, {
      textLocal: u
    }), {
      checkHeight: A,
      containerRef: E,
      isMoreButtonObservingVisible: p,
      startObservingMutation: T,
      stopObservingMutation: S
    } = oV(e, {
      isBtnHiddenDependentOnTextLength: l
    }), {
      toggleButton: b
    } = cV(e, t, {
      containerRef: E,
      hasTextAndLength: s,
      isOpen: r,
      stopObservingMutation: S
    }), {
      btnIconLeft: L,
      btnIconRight: I,
      btnText: v,
      btnTitle: R,
      buttonRef: g,
      isButtonVisible: D
    } = aV(e, {
      hasTextAndLength: s,
      isMoreButtonObservingVisible: p,
      isOpen: r,
      isTextShorterThanTextLength: o
    }), {
      maxHeightStyle: w
    } = iV(e, {
      hasTextAndLength: s,
      isOpen: r
    }), {
      textScreenReaderLocal: M
    } = uV({
      hasTextAndLength: s,
      isOpen: r
    }), {
      ariaExpanded: P
    } = sV({
      hasTextAndLength: s,
      isOpen: r
    });
    return n({
      buttonRef: g,
      containerRef: E,
      isOpen: r,
      toggleButton: b
    }), Vr(() => {
      A(), T();
    }), Ot(() => {
      S();
    }), {
      ariaExpanded: P,
      btnIconLeft: L,
      btnIconRight: I,
      btnText: v,
      btnTitle: R,
      buttonRef: g,
      containerRef: E,
      hasTextAndLength: s,
      isButtonVisible: D,
      isOpen: r,
      isTextOrHtmlVisible: h,
      maxHeightStyle: w,
      textLocal: u,
      textScreenReaderLocal: M,
      toggleButton: b
    };
  },
  render() {
    return c("div", {
      class: [
        "a_show_more",
        {
          a_show_more_open: this.isOpen
        }
      ]
    }, [
      c("div", {
        class: "a_show_more__wrapper",
        style: this.maxHeightStyle
      }, [
        c("div", {
          ref: "containerRef",
          id: this.id,
          ariaExpanded: this.ariaExpanded,
          ...this.$attrs
        }, [
          this.isTextOrHtmlVisible && c(Ae, {
            alwaysTranslate: this.alwaysTranslate,
            tag: "div",
            text: this.textLocal,
            html: this.html,
            safeHtml: this.safeHtml
          }),
          this.$slots.default && this.$slots.default({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          })
        ])
      ]),
      this.isButtonVisible && c("div", {
        class: this.btnParentClass
      }, [
        c(ft, {
          ref: "buttonRef",
          id: this.btnId,
          alwaysTranslate: this.alwaysTranslate,
          "aria-controls": this.id,
          class: [
            "a_show_more__button",
            this.btnClass
          ],
          disabled: this.disabled,
          iconLeft: this.btnIconLeft,
          iconRight: this.btnIconRight,
          isTitleHtml: this.isBtnTitleHtml,
          text: this.btnText,
          textAriaHidden: !this.hasTextAndLength,
          textScreenReader: this.textScreenReaderLocal,
          title: this.btnTitle,
          titlePlacement: this.btnTitlePlacement,
          ...this.btnAttributes,
          onClick: this.toggleButton
        }, () => this.$slots.button && this.$slots.button({
          isButtonVisible: this.isButtonVisible,
          isOpen: this.isOpen
        }))
      ])
    ]);
  }
};
function fV(e, {
  attributesForRoot: t = _(() => ({})),
  isColumnVisible: n = _(() => !1),
  isLocked: r = _(() => !1),
  labelTranslated: s = _(() => "")
}) {
  const l = d(e, "searchColumnModel"), o = _(() => {
    if (!l.value)
      return !0;
    const h = new RegExp(pu(l.value), "gi");
    return `${s.value}`.search(h) !== -1;
  });
  return {
    attributesComponent: _(() => {
      const h = {
        ...t.value,
        class: "a_table__th__dropdown__li"
      };
      return o.value || (h.style = "display: none;"), !r.value && !n.value && (h.class += " a_table__th__dropdown__li_invisible"), h;
    })
  };
}
const hV = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01757813,0,0,0.01757813,-3.96314e-5,1.7578125e-5)"
  >
    <path
      d="m 493.034,717.353 v 0 c -22.097,-7.811 -37.924,-28.881 -37.924,-53.651 0,-31.421 25.469,-56.89 56.89,-56.89 31.421,0 56.89,25.469 56.89,56.89 0,24.769 -15.833,45.843 -37.924,53.651 v 98.392 c 0,9.98 -8.486,18.618 -18.966,18.618 -10.164,0 -18.966,-8.339 -18.966,-18.618 z m -265.48,-300.17 v 0 0 C 164.683,417.358 113.78,467.989 113.78,531.324 v 189.27 c 0,167.568 136.008,303.405 303.372,303.405 h 189.695 c 167.548,0 303.372,-136.179 303.372,-303.405 v -189.27 c 0,-62.93 -50.854,-113.956 -113.774,-114.141 V 284.414 C 796.445,127.332 668.777,-0.001 512,-0.001 c -157.093,0 -284.445,127.307 -284.445,284.415 v 132.769 z m 113.779,0 V 284.476 c 0,-94.496 76.411,-170.699 170.665,-170.699 94.063,0 170.665,76.426 170.665,170.699 V 417.183 H 341.33 Z"
    />
  </g>
</svg>`;
function AV(e, {
  isLocked: t = _(() => !1)
}) {
  const n = d(e, "column"), r = d(e, "disabledOptions"), s = de("changeModelColumnsVisible"), l = de("modelColumnsVisibleLocal"), o = _(() => n.value.id in l.value ? !!l.value[n.value.id] : !n.value.hide), u = _(() => t.value ? hV : o.value ? WT : VT), h = _(() => t.value ? "_A_TABLE_OPTIONS_BTN_LOCK_TITLE_" : o.value ? "_A_TABLE_OPTIONS_BTN_EYE_TITLE_" : "_A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_"), A = ({ $event: p }) => {
    p.stopPropagation(), p.preventDefault();
    const T = pe(l.value);
    T[n.value.id] = !o.value, s(T);
  };
  return {
    buttonVisibleProps: _(() => {
      const p = {
        class: "a_table__th__dropdown_item__icon",
        tag: "span",
        iconLeft: u.value,
        title: h.value,
        textScreenReader: h.value
      };
      return t.value || (p.tag = "button", p.class += " a_table__th__dropdown_item__icon_btn a_btn a_btn_link", p.onClick = A, r.value && (p.disabled = !0)), p;
    }),
    isColumnVisible: o
  };
}
const ap = "a_table__drag_element";
function Xm(e, { emit: t }, {
  classOverString: n = "",
  inDropdown: r = !1
}) {
  const s = d(e, "column"), l = d(e, "columnIndex"), o = d(e, "columnIndexDraggable"), u = de("isLoadingOptions"), h = de("isColumnsDnd"), A = B(null), E = _(() => o.value > l.value ? n : `${n}_right`), p = (R) => {
    var g, D, w;
    if ((g = R.target) == null || g.classList.add(ap), r) {
      const M = ((D = R.target) == null ? void 0 : D.offsetHeight) || 30;
      (w = R.target) == null || w.parentElement.style.setProperty("--a_table_draggable_li_height", `${M}px`);
    }
    R.dataTransfer.effectAllowed = "move", t("dragstartParent", {
      columnIndex: l.value
    });
  }, T = (R) => {
    var g, D;
    (g = R.target) == null || g.classList.remove(E.value), (D = R.target) == null || D.classList.remove(ap), t("dragendParent");
  }, S = () => {
    A.value && A.value.classList && A.value.classList.add(E.value), t("dragenterParent", {
      columnIndex: l.value
    });
  }, b = (R) => (R.preventDefault && R.preventDefault(), !1), L = () => {
    A.value && A.value.classList && A.value.classList.remove(E.value), t("dragleaveParent", {
      columnIndex: l.value
    });
  }, I = _(() => !!s.value.locked);
  return {
    attributesForRoot: _(() => {
      const R = {
        ref: "root"
      };
      return !I.value && h.value && (R.draggable = !u.value, R.onDragstart = p, R.onDragend = T, R.onDragenter = S, R.onDragover = b, R.onDragleave = L), R;
    }),
    isLocked: I,
    root: A
  };
}
function EV(e) {
  const t = d(e, "column"), n = d(e, "searchColumnModel"), {
    filterSearchHighlight: r
  } = Hn(), s = _(() => Da(t.value.label) ? Bt({
    placeholder: t.value.label
  }) : t.value.label);
  return {
    labelLocal: _(() => r(s.value, { searchModel: n.value })),
    labelTranslated: s
  };
}
function pV(e) {
  const t = d(e, "columnIndex"), n = de("changeColumnsOrdering"), r = de("columnsOrdered"), s = de("tableId"), l = ({ columnIndex: T, iconKey: S }) => `${s.value}_${S}_${T}`, o = ({ $event: T }) => {
    T.stopPropagation();
    const S = t.value - 1;
    n({
      columnIndexDraggable: t.value,
      columnIndexOver: S
    }), window.isScrollDisabled || setTimeout(() => {
      aa({
        selector: `#${l({
          columnIndex: S,
          iconKey: "up"
        })}`
      });
    });
  }, u = ({ $event: T }) => {
    T.stopPropagation();
    const S = t.value + 1;
    n({
      columnIndexDraggable: t.value,
      columnIndexOver: S
    }), window.isScrollDisabled || setTimeout(() => {
      const b = `#${l({
        columnIndex: S,
        iconKey: "down"
      })}`;
      aa({
        selector: b
      });
    });
  }, h = _(() => l({
    columnIndex: t.value,
    iconKey: "up"
  })), A = _(() => l({
    columnIndex: t.value,
    iconKey: "down"
  })), E = _(() => t.value !== 0 && !r.value[t.value - 1].locked), p = _(() => r.value.length - 1 !== t.value && !r.value[t.value + 1].locked);
  return {
    idButtonArrowDown: A,
    idButtonArrowUp: h,
    isButtonArrowDownVisible: p,
    isButtonArrowUpVisible: E,
    moveColumnDown: u,
    moveColumnUp: o
  };
}
const TV = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-grip-vertical" viewBox="0 0 16 16">
  <path d="M7 2a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M7 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/>
</svg>`, mV = {
  name: "ATableHeaderThActionItem",
  components: {
    AIcon: ut,
    ATranslation: Ae
  },
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    columnIndexDraggable: {
      type: Number,
      required: !1,
      default: -1
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    searchColumnModel: {
      type: String,
      required: !0
    }
  },
  emits: [
    "dragendParent",
    "dragstartParent",
    "dragenterParent",
    "dragleaveParent"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsOrdered",
    "isColumnsDnd",
    "isLoadingOptions",
    "isLoadingTable",
    "modelColumnsVisibleLocal",
    "tableId"
  ],
  setup(e, t) {
    const {
      attributesForRoot: n,
      isLocked: r,
      root: s
    } = Xm(e, t, {
      classOverString: "a_table__th__dropdown__li_over",
      inDropdown: !0
    }), {
      labelLocal: l,
      labelTranslated: o
    } = EV(e), {
      buttonVisibleProps: u,
      isColumnVisible: h
    } = AV(e, {
      isLocked: r
    }), {
      idButtonArrowDown: A,
      idButtonArrowUp: E,
      isButtonArrowDownVisible: p,
      isButtonArrowUpVisible: T,
      moveColumnDown: S,
      moveColumnUp: b
    } = pV(e), {
      attributesComponent: L
    } = fV(e, {
      attributesForRoot: n,
      isColumnVisible: h,
      isLocked: r,
      labelTranslated: o
    });
    return {
      attributesComponent: L,
      attributesForRoot: n,
      buttonVisibleProps: u,
      idButtonArrowDown: A,
      idButtonArrowUp: E,
      isButtonArrowDownVisible: p,
      isButtonArrowUpVisible: T,
      isLocked: r,
      labelLocal: l,
      moveColumnDown: S,
      moveColumnUp: b,
      root: s
    };
  },
  render() {
    return this.column.isRender === !1 ? null : c("li", this.attributesComponent, [
      c("div", {
        class: "a_dropdown__item_text a_table__th__dropdown_item"
      }, [
        c("div", {
          class: "a_table__th__dropdown_item__child"
        }, [
          c(ft, this.buttonVisibleProps),
          c("span", {
            class: "a_position_relative"
          }, [
            this.column.icon && c(ut, {
              icon: this.column.icon,
              class: "a_table__th__icon"
            }),
            c(Ae, {
              tag: "span",
              class: "a_table__th__text",
              safeHtml: this.labelLocal
            }),
            this.column.title && c(Ae, {
              title: this.column.title,
              ariaHidden: !0,
              tag: "span",
              class: "a_position_absolute_all"
            }),
            this.column.title && c(Ae, {
              text: this.column.title,
              tag: "span",
              class: "a_sr_only"
            })
          ]),
          !this.isLocked && this.isColumnsDnd ? [
            this.isButtonArrowUpVisible && c(ft, {
              id: this.idButtonArrowUp,
              class: "a_sr_only_focusable a_btn a_btn_link a_p_0 a_table__th__dropdown_item__btn_arrow",
              disabled: this.disabledOptions,
              type: "button",
              iconLeft: Vc,
              title: "_A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_",
              textScreenReader: "_A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_",
              onClick: this.moveColumnUp
            }),
            this.isButtonArrowDownVisible && c(ft, {
              id: this.idButtonArrowDown,
              class: "a_sr_only_focusable a_btn a_btn_link a_p_0 a_table__th__dropdown_item__btn_arrow",
              disabled: this.disabledOptions,
              type: "button",
              iconLeft: mi,
              title: "_A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_",
              textScreenReader: "_A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_",
              onClick: this.moveColumnDown
            })
          ] : ""
        ]),
        !this.isLocked && this.isColumnsDnd && c(ut, {
          icon: TV,
          class: "a_table__th__dropdown_item__icon_dnd"
        })
      ])
    ]);
  }
};
function Zm(e) {
  const t = {};
  return e.forEach((n) => {
    t[n.id] = !n.hide;
  }), t;
}
function Jm({ element: e, tagsName: t, classStop: n }) {
  if (e && e.tagName) {
    if (t.indexOf(e.tagName) !== -1)
      return !0;
    if (e.classList.contains(n))
      return !1;
    if (e.parentElement)
      return Jm({ element: e.parentElement, tagsName: t, classStop: n });
  }
  return !1;
}
function SV({ $event: e, classStop: t = "", tagsName: n = [] } = {}) {
  return e && e.target ? Jm({ element: e.target, tagsName: n, classStop: t }) : !1;
}
function nl({ column: e, modelColumnsVisibleLocal: t }) {
  return e.isRender === !1 ? !1 : e.id in t ? !!t[e.id] : !e.hide;
}
function bV({ column: e }) {
  return e.isRender === !1 ? !1 : !e.hide;
}
function LV({ columnIndex: e, indexFirstScrollInvisibleColumn: t }) {
  return ie(t) ? !0 : e < t;
}
function IV({ column: e, columnIndex: t, modelIsTableWithoutScroll: n, modelColumnsVisibleLocal: r, indexFirstScrollInvisibleColumn: s }) {
  return n ? nl({
    column: e,
    modelColumnsVisibleLocal: r
  }) && LV({
    columnIndex: t,
    indexFirstScrollInvisibleColumn: s
  }) : nl({
    column: e,
    modelColumnsVisibleLocal: r
  });
}
function Qm({ tableId: e }) {
  return `${e}_preview_right`;
}
function eS({ tableId: e }) {
  return `${e}_multiple_panel`;
}
function tS({ tableId: e }) {
  return `${e}_header_label`;
}
function su({ row: e, rowIndex: t, keyId: n }) {
  return n ? fe(e, n) : t;
}
function nS({ rowAction: e, row: t, rowIndex: n }) {
  return e.isHidden ? !1 : qe(e.isHiddenCallback) ? !e.isHiddenCallback({
    row: t,
    rowIndex: n
  }) : !0;
}
function vV() {
  const e = B("");
  return {
    searchColumnModel: e,
    updateSearchColumnModel: (n) => {
      e.value = n;
    }
  };
}
function rS({
  classOver: e = "",
  classOverRight: t = "",
  classOverParent: n = "",
  inHeader: r = !1
}) {
  const s = B(void 0), l = B(void 0), o = B(void 0), u = de("changeColumnsOrdering"), h = _(() => !ie(l.value)), A = ({ columnIndex: L }) => {
    l.value = L;
  }, E = ({ columnIndex: L }) => {
    o.value = L;
  }, p = ({ columnIndex: L }) => {
    o.value === L && (o.value = void 0);
  }, T = (L) => {
    if (!(ie(l.value) || ie(o.value)))
      return u({
        columnIndexDraggable: l.value,
        columnIndexOver: o.value,
        inHeader: r
      }), L.stopPropagation(), !1;
  }, S = () => {
    s.value.querySelectorAll(`.${n}`).forEach((I) => {
      I.classList.remove(e), I.classList.remove(t);
    });
  };
  return {
    columnIndexDraggable: l,
    dragstart: A,
    dragenter: E,
    dragleave: p,
    dragend: () => {
      S(), l.value = void 0;
    },
    drop: T,
    isDragstart: h,
    root: s
  };
}
function aS() {
  const e = de("columnActionsWidthMinLocal"), t = de("modelIsTableWithoutScroll");
  return {
    stylesThTd: _(() => t.value ? {} : {
      style: `width: ${e.value}px;`
    })
  };
}
const yV = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-counterclockwise" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2z"/>
  <path d="M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466"/>
</svg>`, gV = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear-fill" viewBox="0 0 16 16">
  <path d="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z"/>
</svg>`, Yd = {
  name: "ATableHeaderThAction",
  inject: [
    "changeModelIsTableWithoutScroll",
    "columnActionsWidthLocal",
    "changeColumnsOrdering",
    "changeModelColumnsVisible",
    "columns",
    "columnsOrdered",
    "isActionIconVisible",
    "modelIsTableWithoutScroll"
  ],
  props: {
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    }
  },
  setup() {
    const {
      columnIndexDraggable: e,
      dragend: t,
      dragenter: n,
      dragleave: r,
      dragstart: s,
      drop: l,
      isDragstart: o,
      root: u
    } = rS({
      classOver: "a_table__th__dropdown__li_over",
      classOverRight: "a_table__th__dropdown__li_over_right",
      classOverParent: "a_table__th__dropdown__li",
      inHeader: !1
    }), {
      searchColumnModel: h,
      updateSearchColumnModel: A
    } = vV(), {
      stylesThTd: E
    } = aS();
    return {
      columnIndexDraggable: e,
      dragend: t,
      dragenter: n,
      dragleave: r,
      dragstart: s,
      drop: l,
      isDragstart: o,
      root: u,
      searchColumnModel: h,
      stylesThTd: E,
      updateSearchColumnModel: A
    };
  },
  methods: {
    selectAllColumns() {
      const e = {};
      z(this.columnsOrdered, (t) => {
        e[t.id] = !0;
      }), this.changeModelColumnsVisible(e);
    },
    deselectAllColumns() {
      const e = {};
      z(this.columnsOrdered, (t) => {
        e[t.id] = !!t.locked;
      }), this.changeModelColumnsVisible(e);
    },
    resetColumns() {
      this.changeModelColumnsVisible(Zm(this.columnsOrdered)), this.changeColumnsOrdering({ reset: !0 });
    }
  },
  render() {
    return c("div", {
      class: [
        "a_table__th a_table__cell a_table__cell_action",
        {
          a_table__cell_action_sticky: this.isRowActionsStickyLocal
        }
      ],
      role: "columnheader",
      ...this.stylesThTd
    }, [
      c("span", {
        class: "a_sr_only"
      }, "Aktionen"),
      this.isActionIconVisible && c(sa, {
        buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
        buttonTitle: "_A_TABLE_DROPDOWN_OPTIONS_TITLE_",
        buttonTextScreenReader: "_A_TABLE_DROPDOWN_OPTIONS_TITLE_",
        dropdownTag: "div",
        dropdownClass: "a_p_0",
        hasCaret: !1,
        isCloseByClickInside: !1,
        disabled: this.disabledOptions,
        placement: "left",
        menuWidth: 320,
        inBody: !0
      }, {
        button: () => c(ut, {
          icon: gV
        }),
        dropdown: () => [
          c("ul", {
            class: ["a_table__th__dropdown__ul", {
              a_table__th__dropdown__ul_dragstart: this.isDragstart
            }],
            ref: "root",
            onDrop: this.drop
          }, [
            c("li", null, [
              c("div", {
                class: "a_dropdown__item_text a_table__th__dropdown__search"
              }, [
                c(In, {
                  label: "Suchen",
                  modelValue: this.searchColumnModel,
                  isClearButton: !0,
                  modelUndefined: "",
                  "onUpdate:modelValue": this.updateSearchColumnModel
                })
              ])
            ]),
            c("li", {
              class: "a_dropdown__divider",
              "aria-hidden": !0
            }),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.selectAllColumns
              }, [
                c(ut, {
                  icon: qc,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Alle einblenden")
              ])
            ]),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.deselectAllColumns
              }, [
                c(ut, {
                  icon: ha,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Alle ausblenden")
              ])
            ]),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.resetColumns
              }, [
                c(ut, {
                  icon: yV,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Zurücksetzen")
              ])
            ]),
            c("li", null, [
              c(Nm, {
                class: "a_dropdown__item_text a_text_nowrap",
                disabled: this.disabledOptions,
                modelValue: this.modelIsTableWithoutScroll,
                trueLabel: "Kompakte Ansicht",
                falseLabel: "Kompakte Ansicht",
                "onUpdate:modelValue": this.changeModelIsTableWithoutScroll
              })
            ]),
            c("li", {
              class: "a_dropdown__divider",
              "aria-hidden": !0
            }),
            this.columnsOrdered.map((e, t) => c(mV, {
              column: e,
              columnIndex: t,
              columnIndexDraggable: this.columnIndexDraggable,
              disabledOptions: this.disabledOptions,
              searchColumnModel: this.searchColumnModel,
              onDragstartParent: this.dragstart,
              onDragenterParent: this.dragenter,
              onDragleaveParent: this.dragleave,
              onDragendParent: this.dragend
            }))
          ])
        ]
      })
    ]);
  }
};
function sS(e, { emit: t }) {
  const n = d(e, "areAllRowsSelected"), r = d(e, "areAllVisibleRowsSelected"), s = d(e, "areSomeRowsSelected"), l = d(e, "rowsLocalLength"), o = _(() => !!(l.value === 0 || n.value)), u = _(() => s.value && !(r.value || n.value)), h = _(() => r.value || n.value), A = _(() => u.value || h.value ? "_A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_" : "_A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_");
  return {
    isCheckboxDisabled: o,
    isCheckboxIndeterminate: u,
    labelCheckbox: A,
    modelValueCheckboxLocal: h,
    toggleCheckbox: () => {
      o.value || t("setSelectedRowsIndexes", { isAll: !0 });
    }
  };
}
const RV = {
  name: "ATableGroupedHeader",
  props: {
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areAllVisibleRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    columnsForRender: {
      type: Array,
      required: !0
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !0
    },
    rowsLocalLength: {
      type: Number,
      required: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMobile",
    "isMultipleActionsActive"
  ],
  setup(e, t) {
    const {
      isCheckboxDisabled: n,
      isCheckboxIndeterminate: r,
      labelCheckbox: s,
      modelValueCheckboxLocal: l,
      toggleCheckbox: o
    } = sS(e, t);
    return {
      isCheckboxDisabled: n,
      isCheckboxIndeterminate: r,
      labelCheckbox: s,
      modelValueCheckboxLocal: l,
      toggleCheckbox: o
    };
  },
  render() {
    return this.isMobile ? null : c("div", {
      ref: "root",
      role: "rowgroup",
      class: "a_table__head"
    }, [
      c("div", {
        class: "a_table__row a_table__head__row",
        role: "row"
      }, [
        this.isMultipleActionsActive && c("div", {
          role: "columnheader",
          class: "a_table__th a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;",
          "aria-colindex": 1
        }, [
          c(Du, {
            isWidthAuto: !0,
            modelValue: this.modelValueCheckboxLocal,
            indeterminate: this.isCheckboxIndeterminate,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        this.columnsForRender,
        this.isActionColumnVisible && c(Yd, {
          disabledOptions: this.disabledOptions,
          isRowActionsStickyLocal: this.isRowActionsStickyLocal
        })
      ])
    ]);
  }
};
function OV(e, {
  ariaSort: t = _(() => ({})),
  attributesForRoot: n = _(() => ({})),
  columnsStyles: r = _(() => ""),
  isLocked: s = _(() => !1),
  isSorting: l = _(() => !1),
  titlesSort: o = _(() => [])
}) {
  const u = d(e, "column"), h = d(e, "columnIndex"), A = d(e, "hasMultipleActions"), E = de("isLoadingOptions"), p = de("isLoadingOptions"), T = _(() => [
    "a_table__th a_table__cell",
    {
      a_table__th_draggable: !s.value && !p.value && E.value,
      a_table__th_sorting: l.value
    },
    u.value.classHeaderParent
  ]), S = _(() => {
    const L = [];
    return (u.value.title || u.value.title === 0) && L.push(u.value.title), L.push(...o.value), L;
  });
  return {
    attributesForTh: _(() => {
      let L = h.value + 1;
      return A.value && L++, {
        ...t.value,
        ...n.value,
        "aria-colindex": L,
        ref: "root",
        role: "columnheader",
        class: T.value,
        style: r.value
      };
    }),
    titlesLocal: S
  };
}
function CV(e) {
  const t = d(e, "column"), n = de("columnsVisibleAdditionalSpaceForOneGrow", 0), r = _(() => ie(t.value.grow) ? 1 : t.value.grow);
  return {
    additionalWidthForCurrentColumn: _(() => n.value * r.value)
  };
}
function iS(e) {
  const t = d(e, "column"), n = de("columnWidthDefault"), {
    additionalWidthForCurrentColumn: r
  } = CV(e), s = _(() => t.value.width || n.value), l = _(() => s.value + r.value), o = _(() => `width: ${l.value}px; min-width: ${l.value}px; max-width: ${l.value}px;`);
  return {
    columnsStyles: _(() => t.value.style ? `${o.value} ${t.value.style}` : o.value)
  };
}
const NV = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-down-fill" viewBox="0 0 16 16">
  <path d="M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z"/>
</svg>`, DV = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-up-fill" viewBox="0 0 16 16">
  <path d="m7.247 4.86-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z"/>
</svg>`, ri = B({
  propsDefault: {
    borderType: "bordered"
  },
  config: {
    isHtmlTitleSort: !1
  }
}), wde = {
  install: (e, {
    propsDefault: t = {},
    config: n = {}
  } = {}) => {
    ri.value.propsDefault = {
      ...ri.value.propsDefault,
      ...t
    }, ri.value.config = {
      ...ri.value.config,
      ...n
    };
  }
};
function BV(e) {
  const t = d(e, "column"), n = d(e, "columnIndex"), r = d(e, "disabledSort"), s = d(e, "isSortingMultiColumn"), l = d(e, "modelSort"), o = d(e, "showFirstSortingSequenceNumber"), u = de("changeModelSort"), h = de("tableId"), A = _(() => t.value.sortId), E = _(() => !!A.value), p = _(() => l.value.indexOf(A.value)), T = _(() => l.value.indexOf(`-${A.value}`)), S = _(() => p.value !== -1), b = _(() => T.value !== -1), L = _(() => E.value && (S.value || b.value)), I = _(() => {
    if (E.value) {
      let C = "none";
      return S.value ? C = "ascending" : b.value && (C = "descending"), {
        "aria-sort": C
      };
    }
    return {};
  }), v = _(() => c(ut, {
    icon: DV,
    class: "a_table__th__sort__icon a_table__th__sort__icon_up"
  })), R = _(() => c(ut, {
    icon: NV,
    class: "a_table__th__sort__icon a_table__th__sort__icon_down"
  })), g = _(() => {
    const C = [];
    return E.value && (b.value || C.push(v.value), S.value || C.push(R.value)), C;
  }), D = ({ $event: C }) => {
    r.value || u({
      $event: C,
      sortId: A.value
    });
  }, w = _(() => `${h.value}_th_${n.value}_screen_reader`), M = _(() => {
    var C;
    return E.value ? {
      type: "button",
      disabled: r.value,
      isTitleHtml: ((C = ri.value.config) == null ? void 0 : C.isHtmlTitleSort) || !1,
      "aria-describedby": w.value,
      onClick: D
    } : {
      tag: "span"
    };
  }), P = _(() => {
    if (!(!s.value && !L.value) && !(l.value.length <= 1 && !o.value)) {
      if (p.value !== -1)
        return p.value + 1;
      if (T.value !== -1)
        return T.value + 1;
    }
  }), F = _(() => {
    const C = [];
    return E.value && (C.push("_A_TABLE_SORT_TITLE_"), s.value && C.push("_A_TABLE_SORT_TITLE_MULTI_COLUMN_")), C;
  });
  return {
    ariaSort: I,
    attributesForButtonSort: M,
    columnTextScreenReaderId: w,
    iconsSortable: g,
    isSortable: E,
    isSorting: L,
    sequenceNumberSort: P,
    titlesSort: F
  };
}
const Xd = {
  name: "ATableHeaderTh",
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnGroupNames: {
      type: Array,
      required: !1,
      default: void 0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    columnIndexDraggable: {
      type: Number,
      required: !1,
      default: -1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !1
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "dragendParent",
    "dragstartParent",
    "dragenterParent",
    "dragleaveParent"
  ],
  inject: [
    "changeModelSort",
    "isColumnsDnd",
    "isLoadingOptions",
    "isLoadingTable"
  ],
  setup(e, t) {
    const {
      columnsStyles: n
    } = iS(e), {
      attributesForRoot: r,
      isLocked: s,
      root: l
    } = Xm(e, t, {
      classOverString: "a_table__th_over",
      inDropdown: !1
    }), {
      ariaSort: o,
      attributesForButtonSort: u,
      columnTextScreenReaderId: h,
      iconsSortable: A,
      isSortable: E,
      isSorting: p,
      sequenceNumberSort: T,
      titlesSort: S
    } = BV(e), {
      attributesForTh: b,
      titlesLocal: L
    } = OV(e, {
      ariaSort: o,
      attributesForRoot: r,
      columnsStyles: n,
      isLocked: s,
      isSorting: p,
      titlesSort: S
    });
    return {
      attributesForButtonSort: u,
      attributesForTh: b,
      columnTextScreenReaderId: h,
      columnsStyles: n,
      iconsSortable: A,
      isSortable: E,
      root: l,
      sequenceNumberSort: T,
      titlesLocal: L,
      titlesSort: S
    };
  },
  render() {
    return c("div", this.attributesForTh, [
      c("div", {
        class: [
          "a_table__cell__child"
        ]
      }, [
        this.columnGroupNames && c(Ae, {
          html: this.columnGroupNames,
          tag: "span",
          class: "a_sr_only"
        }),
        c(Ae, {
          id: this.columnTextScreenReaderId,
          text: this.titlesLocal,
          tag: "span",
          class: "a_sr_only",
          ariaHidden: !0
        }),
        c(ft, {
          class: [
            "a_table__th__btn",
            this.column.class,
            this.column.classHeader,
            {
              "a_btn a_btn_link a_table__th__btn_sort": this.isSortable,
              a_table__th__btn_sequence: this.sequenceNumberSort
            }
          ],
          iconLeft: this.column.icon,
          iconClass: "a_table__th__icon",
          extra: this.column.extra,
          title: this.titlesLocal,
          textScreenReader: this.column.textScreenReader || void 0,
          ...this.attributesForButtonSort
        }, () => [
          this.column.label && c(Ae, {
            html: this.column.label,
            tag: "span",
            extra: this.column.extra,
            class: "a_table__th__text aloha_element__ml_0",
            ariaHidden: !!this.column.textScreenReader
          }),
          this.isSortable && c("span", {
            class: "a_table__th__sort__box aloha_element__ml_0"
          }, [
            this.sequenceNumberSort && c("span", {
              class: [
                "a_table__th__sort__sequence_num",
                this.sortingSequenceNumberClass
              ]
            }, this.sequenceNumberSort),
            c("span", {
              class: "a_table__th__sort__icons"
            }, [
              ...this.iconsSortable
            ])
          ])
        ])
      ])
    ]);
  }
}, wV = {
  name: "ATableHeader",
  components: {
    ATableHeaderTh: Xd,
    ATableHeaderThAction: Yd
  },
  props: {
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areAllVisibleRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !0
    },
    rowsLocalLength: {
      type: Number,
      required: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMobile",
    "isMultipleActionsActive"
  ],
  setup(e, t) {
    const {
      columnIndexDraggable: n,
      dragstart: r,
      dragenter: s,
      dragleave: l,
      dragend: o,
      drop: u,
      isDragstart: h,
      root: A
    } = rS({
      classOver: "a_table__th_over",
      classOverRight: "a_table__th_over_right",
      classOverParent: "a_table__th",
      inHeader: !0
    }), {
      isCheckboxDisabled: E,
      isCheckboxIndeterminate: p,
      labelCheckbox: T,
      modelValueCheckboxLocal: S,
      toggleCheckbox: b
    } = sS(e, t);
    return {
      columnIndexDraggable: n,
      dragend: o,
      dragenter: s,
      dragleave: l,
      dragstart: r,
      drop: u,
      isCheckboxDisabled: E,
      isCheckboxIndeterminate: p,
      isDragstart: h,
      labelCheckbox: T,
      modelValueCheckboxLocal: S,
      root: A,
      toggleCheckbox: b
    };
  },
  render() {
    return this.isMobile ? null : c("div", {
      ref: "root",
      role: "rowgroup",
      class: ["a_table__head", {
        a_table__head_dragstart: this.isDragstart
      }]
    }, [
      c("div", {
        class: "a_table__row a_table__head__row",
        role: "row",
        onDrop: this.drop
      }, [
        this.isMultipleActionsActive && c("div", {
          role: "columnheader",
          class: "a_table__th a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;",
          "aria-colindex": 1
        }, [
          c(Du, {
            isWidthAuto: !0,
            modelValue: this.modelValueCheckboxLocal,
            indeterminate: this.isCheckboxIndeterminate,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        this.columnsFilteredForRender.map((e, t) => c(Xd, {
          ref: "th",
          column: e,
          columnIndex: t,
          columnIndexDraggable: this.columnIndexDraggable,
          disabledSort: this.disabledSort,
          hasMultipleActions: this.hasMultipleActions,
          isSortingMultiColumn: this.isSortingMultiColumn,
          modelSort: this.modelSort,
          showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
          sortingSequenceNumberClass: this.sortingSequenceNumberClass,
          onDragstartParent: this.dragstart,
          onDragenterParent: this.dragenter,
          onDragleaveParent: this.dragleave,
          onDragendParent: this.dragend
        })),
        this.isActionColumnVisible && c(Yd, {
          disabledOptions: this.disabledOptions,
          isRowActionsStickyLocal: this.isRowActionsStickyLocal
        })
      ])
    ]);
  }
};
function PV(e, { emit: t }, {
  nextAvailableRowIndex: n,
  previousAvailableRowIndex: r,
  rowNumber: s = _(() => 0)
}) {
  const l = d(e, "countAllRows"), o = d(e, "limitPagination"), u = d(e, "offsetPagination"), h = d(e, "rowIndex"), A = d(e, "usePagination"), E = _(() => s.value <= 1 || ie(r.value)), p = _(() => s.value >= l.value || ie(n.value));
  return {
    disabledBtnArrowLeft: E,
    disabledBtnArrowRight: p,
    toNextRow: () => {
      p.value || (A.value ? (h.value + 1) % o.value === 0 ? (t("update:offset", { offset: u.value + o.value, reload: !1 }), t("togglePreview", { rowIndex: 0 })) : t("togglePreview", { rowIndex: n.value }) : t("togglePreview", { rowIndex: n.value }));
    },
    toPreviousRow: () => {
      E.value || (A.value ? (h.value + 1) % o.value === 1 ? (t("update:offset", { offset: u.value - o.value, reload: !1 }), t("togglePreview", { rowIndex: o.value - 1 })) : t("togglePreview", { rowIndex: r.value }) : t("togglePreview", { rowIndex: r.value }));
    }
  };
}
function xV() {
  const e = de("tableId");
  return {
    idLocal: _(() => Qm({ tableId: e.value }))
  };
}
function FV({ emit: e }, {
  previewRef: t = B(void 0)
}) {
  return {
    mousedown: ({ clientWidth: l }) => {
      e("mousedownResizePreviewRight", {
        clientWidth: l
      });
    },
    mousemove: ({ clientX: l }) => {
      e("mousemoveResizePreviewRight", {
        clientX: l,
        previewRef: t.value
      });
    },
    mouseup: () => {
      e("mouseupResizePreviewRight", {
        previewRightWidth: fe(t, "value.offsetWidth")
      });
    }
  };
}
const sp = B(void 0);
function lS() {
  return {
    previewRef: sp,
    removePreviewRef: () => {
      sp.value = void 0;
    }
  };
}
function MV(e) {
  const t = d(e, "countAllRows"), n = d(e, "disabledPreviewRowCallback"), r = d(e, "offsetPagination"), s = d(e, "rowIndex"), l = d(e, "rows"), o = d(e, "usePagination"), {
    filterCurrency: u
  } = Hn(), h = _(() => o.value ? (r.value || 0) + s.value + 1 : s.value + 1), A = _(() => l.value[s.value]), E = _(() => {
    let b = null;
    if (!qe(n.value))
      b = s.value === l.value.length - 1 ? null : s.value++;
    else
      for (let L = s.value + 1; L < l.value.length; L++) {
        const I = l.value[L];
        if (!n.value({ row: I, rowIndex: L })) {
          b = L;
          break;
        }
      }
    return b;
  }), p = _(() => {
    let b = null;
    if (!qe(n.value))
      b = s.value === 0 ? null : s.value--;
    else
      for (let L = s.value - 1; L >= 0; L--) {
        const I = l.value[L];
        if (!n.value({ row: I, rowIndex: L })) {
          b = L;
          break;
        }
      }
    return b;
  }), T = _(() => u(t.value, { suffix: "", digits: 0 })), S = _(() => u(h.value, { suffix: "", digits: 0 }));
  return {
    countAllRowsFormatted: T,
    currentRow: A,
    nextAvailableRowIndex: E,
    previousAvailableRowIndex: p,
    rowNumber: h,
    rowNumberFormatted: S
  };
}
const qV = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8"/>
</svg>`, $V = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8"/>
</svg>`, kV = {
  name: "ATablePreviewRight",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    isLoadingTable: {
      type: Boolean,
      required: !1
    },
    isMobile: {
      type: Boolean,
      required: !1
    },
    limitPagination: {
      type: Number,
      required: !1,
      default: void 0
    },
    offsetPagination: {
      type: Number,
      required: !1,
      default: void 0
    },
    previewStyles: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    rows: {
      type: Array,
      required: !0
    },
    usePagination: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "closePreview",
    "mousedownResizePreviewRight",
    "mousemoveResizePreviewRight",
    "mouseupResizePreviewRight",
    "togglePreviewResize",
    "togglePreview",
    "update:offset"
  ],
  inject: [
    "isLoadingOptions"
  ],
  setup(e, t) {
    const n = d(e, "isMobile"), {
      previewRef: r
    } = lS(), {
      idLocal: s
    } = xV(), {
      mousedown: l,
      mousemove: o,
      mouseup: u
    } = FV(t, {
      previewRef: r
    }), {
      countAllRowsFormatted: h,
      currentRow: A,
      nextAvailableRowIndex: E,
      previousAvailableRowIndex: p,
      rowNumber: T,
      rowNumberFormatted: S
    } = MV(e), {
      disabledBtnArrowLeft: b,
      disabledBtnArrowRight: L,
      toNextRow: I,
      toPreviousRow: v
    } = PV(e, t, {
      nextAvailableRowIndex: E,
      previousAvailableRowIndex: p,
      rowNumber: T
    });
    return Vr(() => {
      n.value || t.emit("togglePreviewResize", {
        isOpen: !0,
        previewRef: r.value
      });
    }), Ot(() => {
      n.value || t.emit("togglePreviewResize", {
        isOpen: !1,
        previewRef: r.value
      });
    }), {
      countAllRowsFormatted: h,
      currentRow: A,
      disabledBtnArrowLeft: b,
      disabledBtnArrowRight: L,
      idLocal: s,
      mousedown: l,
      mousemove: o,
      mouseup: u,
      previewRef: r,
      rowNumber: T,
      rowNumberFormatted: S,
      toNextRow: I,
      toPreviousRow: v
    };
  },
  render() {
    const e = [
      this.isLoadingTable ? c(ul) : c("div", {}, [
        c(Ae, {
          class: "a_table__preview_right__header__text",
          tag: "span",
          text: "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_",
          extra: {
            rowNumber: this.rowNumber,
            rowNumberFormatted: this.rowNumberFormatted,
            countAllRows: this.countAllRows,
            countAllRowsFormatted: this.countAllRowsFormatted
          }
        }),
        c("div", {
          class: "a_table__preview_right__header__icons"
        }, [
          c(ft, {
            class: "a_btn a_btn_transparent_dark a_btn_small",
            disabled: this.disabledBtnArrowLeft,
            iconLeft: qV,
            title: "_A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_",
            textScreenReader: "_A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_",
            onClick: this.toPreviousRow
          }),
          c(ft, {
            class: "a_btn a_btn_transparent_dark a_btn_small",
            disabled: this.disabledBtnArrowRight,
            iconLeft: $V,
            title: "_A_TABLE_PREVIEW_RIGHT_NEXT_ROW_",
            textScreenReader: "_A_TABLE_PREVIEW_RIGHT_NEXT_ROW_",
            onClick: this.toNextRow
          })
        ])
      ]),
      this.isMobile ? "" : c(ft, {
        class: "a_btn a_btn_transparent_dark a_table__preview_right__btn_close",
        iconLeft: ha,
        iconClass: "a_table__preview_right__btn_close__icon",
        title: "_A_TABLE_PREVIEW_RIGHT_CLOSE_",
        textScreenReader: "_A_TABLE_PREVIEW_RIGHT_CLOSE_",
        onClick: () => this.$emit("closePreview")
      })
    ], t = [
      this.isLoadingTable ? c(ul) : this.$slots.preview ? this.$slots.preview({
        row: this.currentRow,
        rowIndex: this.rowIndex
      }) : c(Ae, {
        text: "_A_TABLE_PREVIEW_RIGHT_HAS_NOT_SLOT_"
      })
    ];
    return this.isMobile ? c(Mu, {
      hideFooter: !0,
      close: () => this.$emit("closePreview"),
      size: "xxl"
    }, {
      modalHeader: () => e,
      modalBody: () => t
    }) : c("div", {
      ref: "previewRef",
      id: this.idLocal,
      class: "a_table__preview_right",
      style: this.previewStyles,
      tabindex: -1
    }, [
      c(VH, {
        class: "a_table__preview_right__resizer",
        direction: "x",
        disabled: this.isLoadingOptions,
        onMousedown: this.mousedown,
        onMousemove: this.mousemove,
        onMouseup: this.mouseup,
        onMouseoutDocument: this.mouseup
      }),
      c(Ae, {
        class: "a_sr_only",
        text: "_A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_"
      }),
      c("div", {
        class: "a_table__preview_right__header"
      }, e),
      c("div", {
        class: "a_table__preview_right__body"
      }, t)
    ]);
  }
};
function UV() {
  const e = de("tableId"), t = [
    "additionalProps"
  ], n = _(() => `${e.value}_`);
  return {
    excludeRenderAttributes: t,
    idPrefix: n
  };
}
function HV(e) {
  const t = d(e, "additionalSortingColumns"), n = de("columnsOrdered", []), r = _(() => [
    ...wt(n.value, (o) => o.sortId),
    ...t.value
  ]), s = _(() => Pa(r.value, "sortId")), l = _(() => r.value.length);
  return {
    columnsAll: r,
    columnsAllKeyBySortId: s,
    countColumnsAll: l
  };
}
function VV(e, {
  columnsAll: t = _(() => [])
}) {
  const n = B(void 0), r = B(!1), s = _(() => t.value.length > 0);
  return {
    closeDropdown: () => {
      var o;
      (o = n.value) == null || o.onClose({ trigger: "click" });
    },
    dropdownRef: n,
    isDropdownVisible: s,
    wasOpenDropdown: r
  };
}
function WV(e, {
  columnsAll: t = _(() => []),
  columnsAllKeyBySortId: n = _(() => ({})),
  unappliedModelSort: r = B([])
}) {
  const s = B([]), l = [
    {
      label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_",
      id: "asc"
    },
    {
      label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_",
      id: "desc"
    }
  ], o = _(() => wt(t.value, (h) => !hc(r.value, ["sortId", h.sortId])));
  return {
    dataForForm: s,
    initDataForForm: () => {
      const h = [];
      z(r.value, ({ sortId: A }, E) => {
        const p = E === 0, T = pe(o.value);
        A && n.value[A] && T.unshift(n.value[A]), h.push({
          type: "fieldset",
          id: `group_${A}`,
          label: p ? "_A_TABLE_SORT_ADDITIONAL_SORT_BY_" : "_A_TABLE_SORT_ADDITIONAL_THEN_BY_",
          children: [
            {
              id: `[${E}].sortId`,
              type: "select",
              classColumn: "a_column a_column_12_touch a_column_7_fullhd a_column_7_widescreen a_column_7_desktop",
              deselectable: !1,
              data: T,
              keyId: "sortId",
              keyLabel: "label",
              translateData: !0,
              search: !0,
              label: "_A_TABLE_SORT_ADDITIONAL_COLUMN_"
            },
            {
              id: `[${E}].sortMode`,
              type: "select",
              classColumn: "a_column a_column_12_touch a_column_5_fullhd a_column_5_widescreen a_column_5_desktop a_d_flex a_align_items_center",
              class: "a_width_100",
              deselectable: !1,
              data: l,
              keyId: "id",
              keyLabel: "label",
              translateData: !0,
              search: !1,
              label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_",
              slotAppend: "slotAppend",
              additionalProps: {
                index: E
              }
            }
          ]
        });
      }), s.value = h;
    }
  };
}
function GV(e, {
  closeDropdown: t = () => {
  },
  countColumnsAll: n = _(() => 0),
  initDataForForm: r = () => {
  },
  unappliedModelSort: s = B([]),
  wasOpenDropdown: l = B(!1)
}) {
  const o = d(e, "isSortingMultiColumn"), u = d(e, "modelSort"), h = de("changeModelSort"), A = de("tableId"), E = ({ model: D } = {}) => {
    if (l.value && !D)
      return;
    l.value = !0;
    const w = D || pe(u.value);
    w.length < n.value && w.push(void 0), o.value || w.length > 1 && (w.length = 1);
    const M = [];
    z(w, (P) => {
      const F = P && P.replace(/^-/, ""), C = Sc(P, "-") ? "desc" : "asc";
      M.push({
        sortId: F,
        sortMode: C
      });
    }), s.value = M, r({ unappliedModelSort: M });
  }, p = ({ model: D }) => !o.value || D.length >= n.value ? !1 : !!ci(D).sortId, T = ({ model: D }) => {
    p({ model: D }) && D.push({
      sortId: void 0,
      sortMode: "asc"
    }), s.value = D, r({ unappliedModelSort: s.value });
  }, S = ({ item: D }) => {
    var F, C;
    const w = D.additionalProps.index;
    w === s.value.length - 1 ? s.value[w].sortId = void 0 : s.value.splice(w, 1);
    const P = s.value.length - 1;
    (C = (F = s.value) == null ? void 0 : F[P]) != null && C.sortId && s.value.push({
      sortId: void 0,
      sortMode: "asc"
    }), r({ unappliedModelSort: s.value });
  }, b = () => {
    const D = [];
    z(s.value, (w) => {
      w.sortId && D.push(`${w.sortMode === "asc" ? "" : "-"}${w.sortId}`);
    }), h({
      modelAll: D
    }), t();
  }, L = ({ modelSort: D = [], tableId: w }) => {
    w === A.value && E({ model: D });
  }, I = () => {
    Rt.$on("changeTableSorting", L);
  }, v = () => {
    Rt.$off("changeTableSorting", L);
  }, R = _(() => {
    var D;
    return ((D = u.value) == null ? void 0 : D.length) || 0;
  }), g = _(() => {
    if (R.value)
      return R.value;
  });
  return {
    changeModelSortInTable: b,
    countModelSort: R,
    destroyEventBus: v,
    initEventBus: I,
    initUnappliedModelSort: E,
    removeUnappliedModelSort: S,
    textCountModelSort: g,
    updateUnappliedModelSort: T
  };
}
const ip = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down-up" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M11.5 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L11 2.707V14.5a.5.5 0 0 0 .5.5m-7-14a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L4 13.293V1.5a.5.5 0 0 1 .5-.5"/>
</svg>`, KV = {
  name: "ATableSortingAdditional",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelSort: {
      type: Array,
      required: !1
    }
  },
  setup(e) {
    const t = B([]), {
      columnsAll: n,
      columnsAllKeyBySortId: r,
      countColumnsAll: s
    } = HV(e), {
      dataForForm: l,
      initDataForForm: o
    } = WV(e, {
      columnsAll: n,
      columnsAllKeyBySortId: r,
      unappliedModelSort: t
    }), {
      closeDropdown: u,
      dropdownRef: h,
      isDropdownVisible: A,
      wasOpenDropdown: E
    } = VV(e, {
      columnsAll: n
    }), {
      changeModelSortInTable: p,
      countModelSort: T,
      destroyEventBus: S,
      initEventBus: b,
      initUnappliedModelSort: L,
      removeUnappliedModelSort: I,
      textCountModelSort: v,
      updateUnappliedModelSort: R
    } = GV(e, {
      closeDropdown: u,
      countColumnsAll: s,
      initDataForForm: o,
      unappliedModelSort: t,
      wasOpenDropdown: E
    }), {
      excludeRenderAttributes: g,
      idPrefix: D
    } = UV();
    return b(), Ot(() => {
      S();
    }), {
      changeModelSortInTable: p,
      closeDropdown: u,
      countModelSort: T,
      dataForForm: l,
      dropdownRef: h,
      excludeRenderAttributes: g,
      idPrefix: D,
      initUnappliedModelSort: L,
      isDropdownVisible: A,
      removeUnappliedModelSort: I,
      textCountModelSort: v,
      unappliedModelSort: t,
      updateUnappliedModelSort: R,
      wasOpenDropdown: E
    };
  },
  render() {
    return this.isDropdownVisible ? c(sa, {
      ref: "dropdownRef",
      buttonClass: "a_btn a_btn_secondary a_table__action",
      buttonIconLeft: ip,
      buttonText: this.textCountModelSort,
      buttonTextAriaHidden: !0,
      buttonTitle: "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_",
      buttonTextScreenReader: "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_",
      buttonTextClass: "a_badge a_bg_primary",
      disabled: this.disabledSort,
      dropdownClass: "a_filter_horizontal__wrapper",
      dropdownRenderDefault: !1,
      dropdownTag: "div",
      hasCaret: !1,
      inBody: !0,
      extra: {
        count: this.countModelSort
      },
      isCloseByClickInside: !1,
      lockArrowsNavigation: !1,
      lockTabNavigation: !1,
      onOpen: this.initUnappliedModelSort
    }, {
      dropdown: () => c("div", {
        class: "a_filter_horizontal"
      }, [
        c("div", {
          class: "a_filter_horizontal__header__wrapper"
        }, [
          c("div", {
            class: "a_filter_horizontal__header"
          }, [
            c("div", {
              class: "a_filter_horizontal__header__texts"
            }, [
              c(Ae, {
                class: "a_filter_horizontal__header__texts__filter",
                tag: "span",
                text: "_A_TABLE_SORT_ADDITIONAL_HEADER_"
              })
            ])
          ])
        ]),
        c("div", {
          class: "a_filter_horizontal__body__wrapper"
        }, [
          c("div", {
            class: "a_filter_horizontal__body"
          }, [
            c(Pu, {
              idPrefix: this.idPrefix,
              class: "a_filter_horizontal__body__form",
              classColumnDefault: "",
              classColumns: "",
              data: this.dataForForm,
              excludeRenderAttributes: this.excludeRenderAttributes,
              modelValue: this.unappliedModelSort,
              showErrors: !1,
              onChange: this.updateUnappliedModelSort
            }, {
              slotAppend: ({ item: e }) => {
                var t, n;
                return c(me, {
                  type: "button",
                  class: "a_btn a_btn_primary a_ml_2",
                  title: "_A_TABLE_SORT_ADDITIONAL_BTN_DELETE_",
                  textScreenReader: "_A_TABLE_SORT_ADDITIONAL_BTN_DELETE_",
                  disabled: !((n = (t = this.unappliedModelSort) == null ? void 0 : t[e.additionalProps.index]) != null && n.sortId),
                  iconLeft: ha,
                  onClick: () => this.removeUnappliedModelSort({ item: e })
                });
              }
            })
          ]),
          c("div", {
            class: "a_filter_horizontal__footer"
          }, [
            c("div", {
              class: "a_filter_horizontal__footer__actions"
            }, [
              c(me, {
                type: "button",
                class: "a_btn a_btn_primary a_text_nowrap a_filter_horizontal__footer__actions__btn_search",
                iconLeft: ip,
                text: "_A_TABLE_SORT_ADDITIONAL_START_",
                disabled: this.disabledSort,
                onClick: this.changeModelSortInTable
              }),
              c(me, {
                type: "button",
                class: "a_btn a_btn_secondary a_text_nowrap a_filter_horizontal__footer__actions__btn_close",
                text: "_A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_",
                onClick: this.closeDropdown
              })
            ])
          ])
        ])
      ])
    }) : null;
  }
};
function jV(e, { emit: t }) {
  const n = d(e, "areAllRowsSelected"), r = d(e, "closeMultipleActionsActive"), s = d(e, "multipleActions"), l = d(e, "selectedRows"), o = d(e, "tableActions"), u = de("tableId"), h = de("currentMultipleActions"), A = de("rowsLocalAll"), {
    closeConfirm: E,
    openConfirm: p
  } = sf(), T = _(() => `${u.value}_btn_multiple`), S = _(() => {
    const g = [];
    return z(pe(o.value), (D) => {
      if (!D.isHidden) {
        if (qe(D.callback)) {
          const w = D.callback;
          D.callback = () => w({
            id: D.id,
            action: D
          });
        }
        g.push(D);
      }
    }), g;
  }), b = ({ action: g, callbackDefault: D }) => {
    const w = pe(g);
    w.callback = D, t("toggleMultipleActionsActive", { isActive: !0, action: w });
  }, L = () => {
    t("toggleMultipleActionsActive", { action: h.value });
  }, I = _(() => {
    const g = pe(s.value);
    return z(g, (D) => {
      if (qe(D.callback)) {
        const w = D.callback;
        D.callback = () => b({ action: D, callbackDefault: w });
      }
    }), g;
  }), v = async () => {
    await h.value.callback({
      close: r.value,
      rows: l.value,
      rowsVisible: A.value,
      id: T.value,
      areAllRowsSelected: n.value,
      action: h.value
    }), E(), L();
  };
  return {
    buttonMultipleId: T,
    currentMultipleActions: h,
    multipleActionsFiltered: I,
    onCancelMultipleActions: L,
    onOpenModalMultipleActions: () => {
      h.value.isConfirm ? p({
        headerText: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_",
        bodyHtml: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_",
        saveButtonText: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_",
        extra: {
          action: Bt({
            placeholder: h.value.text
          }),
          selectedRows: l.value.length
        },
        save: v
      }) : h.value.callback({
        close: r.value,
        rows: l.value,
        rowsVisible: A.value,
        id: T.value,
        areAllRowsSelected: n.value,
        action: h.value
      });
    },
    tableActionsFiltered: S
  };
}
function zV(e) {
  const t = d(e, "countAllRows"), {
    filterFloat: n
  } = Hn();
  return {
    countAllRowsFormatted: _(() => `(${n(t.value, { digits: 0 })})`)
  };
}
function YV() {
  const e = de("tableId");
  return {
    tableLabelId: _(() => tS({ tableId: e.value }))
  };
}
function XV(e, { emit: t }) {
  const n = d(e, "areAllRowsSelected"), r = d(e, "areSomeRowsSelected"), s = d(e, "countAllRows"), l = d(e, "isLoadingMultipleActions"), o = d(e, "selectedRows"), u = de("tableId"), {
    filterFloat: h
  } = Hn(), A = _(() => eS({ tableId: u.value })), E = _(() => n.value ? s.value : o.value.length), p = _(() => ({
    countSelectedRows: E.value,
    countSelectedRowsFiltered: h(E.value, { digits: 0 }),
    countAllRows: s.value,
    countAllRowsFiltered: h(s.value, { digits: 0 })
  })), T = _(() => n.value ? "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_" : "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_"), S = _(() => !!(l.value || s.value === 0)), b = () => {
    S.value || t("toggleBtnAllRows");
  };
  return {
    isBtnMultipleActionDisabled: _(() => !r.value && !n.value),
    isBtnSelectAllRowsDisabled: S,
    multiplePanelId: A,
    textMultipleBtnAllRowsTranslate: T,
    textMultipleSelectedTranslateExtra: p,
    toggleBtnAllRows: b
  };
}
function ZV(e, { emit: t }) {
  const n = d(e, "useViewSlot"), r = (l) => {
    t("updateViewCurrent", l);
  }, s = _(() => n.value ? "viewSlot" : void 0);
  return {
    updateViewCurrentLocal: r,
    viewSlotLocal: s
  };
}
const JV = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-ui-checks" viewBox="0 0 16 16">
  <path d="M7 2.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5zM2 1a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2zm0 8a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2zm.854-3.646a.5.5 0 0 1-.708 0l-1-1a.5.5 0 1 1 .708-.708l.646.647 1.646-1.647a.5.5 0 1 1 .708.708zm0 8a.5.5 0 0 1-.708 0l-1-1a.5.5 0 0 1 .708-.708l.646.647 1.646-1.647a.5.5 0 0 1 .708.708zM7 10.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5zm0-5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m0 8a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5"/>
</svg>`, QV = {
  name: "ATableTopPanel",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    closeMultipleActionsActive: {
      type: Function,
      required: !0
    },
    countAllRows: {
      type: Number,
      required: !0
    },
    disabledActions: {
      type: Boolean,
      required: !0
    },
    disabledMultipleActions: {
      type: Boolean,
      required: !0
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    disabledViews: {
      type: Boolean,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasViews: {
      type: Boolean,
      required: !0
    },
    isLabelVisible: {
      type: Boolean,
      required: !1
    },
    isLoadingMultipleActions: {
      type: Boolean,
      required: !1
    },
    isQuickSearch: {
      type: Boolean,
      required: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !0
    },
    modelQuickSearch: {
      type: String,
      required: !0
    },
    modelSort: {
      type: Array,
      required: !1
    },
    modelView: {
      type: String,
      required: !1,
      default: void 0
    },
    multipleActions: {
      type: Array,
      required: !0
    },
    selectedRows: {
      type: Array,
      required: !0
    },
    showCount: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tableActions: {
      type: Array,
      required: !0
    },
    tableActionsIndexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: -1
    },
    tableActionsIndexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: 0
    },
    useAdditionalSorting: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useViewSlot: {
      type: Boolean,
      required: !1
    },
    viewCurrent: {
      type: Object,
      required: !1,
      default: void 0
    },
    views: {
      type: Array,
      required: !0
    }
  },
  emits: [
    "toggleBtnAllRows",
    "toggleMultipleActionsActive",
    "updateModelQuickSearch",
    "updateViewCurrent"
  ],
  inject: [
    "isMultipleActionsActive",
    "rowsLocalAll",
    "tableId"
  ],
  setup(e, t) {
    const {
      tableLabelId: n
    } = YV(), {
      filterCurrency: r
    } = Hn(), {
      buttonMultipleId: s,
      currentMultipleActions: l,
      multipleActionsFiltered: o,
      onCancelMultipleActions: u,
      onOpenModalMultipleActions: h,
      tableActionsFiltered: A
    } = jV(e, t), {
      isBtnMultipleActionDisabled: E,
      isBtnSelectAllRowsDisabled: p,
      multiplePanelId: T,
      textMultipleBtnAllRowsTranslate: S,
      textMultipleSelectedTranslateExtra: b,
      toggleBtnAllRows: L
    } = XV(e, t), {
      updateViewCurrentLocal: I,
      viewSlotLocal: v
    } = ZV(e, t), {
      countAllRowsFormatted: R
    } = zV(e);
    return {
      buttonMultipleId: s,
      countAllRowsFormatted: R,
      currentMultipleActions: l,
      filterCurrency: r,
      isBtnMultipleActionDisabled: E,
      isBtnSelectAllRowsDisabled: p,
      multipleActionsFiltered: o,
      multiplePanelId: T,
      onCancelMultipleActions: u,
      onOpenModalMultipleActions: h,
      tableActionsFiltered: A,
      tableLabelId: n,
      textMultipleBtnAllRowsTranslate: S,
      textMultipleSelectedTranslateExtra: b,
      toggleBtnAllRows: L,
      updateViewCurrentLocal: I,
      viewSlotLocal: v
    };
  },
  methods: {
    updateModelQuickSearch(e) {
      this.$emit("updateModelQuickSearch", e);
    }
  },
  render() {
    return [
      c("div", {
        class: "a_table__top_panel"
      }, [
        this.isLabelVisible ? this.$slots.tableLabel ? this.$slots.tableLabel({
          countAllRows: this.countAllRows,
          tableLabelId: this.tableLabelId
        }) : c(this.labelTag, {
          class: ["a_table__top_panel__label", this.labelClass]
        }, [
          c(Ae, {
            id: this.tableLabelId,
            tag: "span",
            class: "a_table__top_panel__label__text",
            text: this.label,
            extra: this.extra
          }),
          this.showCount ? c(me, {
            class: "a_table__top_panel__label__count",
            extra: {
              count: this.countAllRows
            },
            tag: "span",
            text: this.countAllRowsFormatted,
            textAriaHidden: !0,
            textScreenReader: "_A_TABLE_ALL_ROWS_{{count}}_",
            title: "_A_TABLE_ALL_ROWS_{{count}}_",
            type: "text"
          }) : ""
        ]) : "",
        c("div", {
          class: "a_table__top_panel__actions"
        }, [
          this.$slots.tableActionsPrepend ? this.$slots.tableActionsPrepend({
            isMultipleActionsActive: this.isMultipleActionsActive,
            modelView: this.modelView
          }) : "",
          c(Kd, {
            actions: this.tableActionsFiltered,
            actionsClasses: [],
            disabled: this.isMultipleActionsActive || this.disabledActions,
            indexFirstDropdownAction: this.tableActionsIndexFirstDropdownAction,
            indexFirstDropdownActionMobile: this.tableActionsIndexFirstDropdownActionMobile,
            minDropdownActions: 0,
            dropdownAttributes: {
              buttonClass: "a_btn a_btn_secondary a_table__action",
              buttonIconLeft: Nl,
              buttonText: {
                desktop: "_A_TABLE_ACTIONS_"
              },
              hasCaret: !1,
              inBody: !0,
              placement: "bottom-end"
            }
          }),
          c(Kd, {
            actions: this.multipleActionsFiltered,
            actionsClasses: [],
            disabled: this.isMultipleActionsActive || this.disabledMultipleActions,
            indexFirstDropdownAction: 0,
            indexFirstDropdownActionMobile: 0,
            minDropdownActions: 0,
            dropdownAttributes: {
              id: this.buttonMultipleId,
              buttonClass: "a_btn a_btn_secondary a_table__action",
              buttonText: {
                desktop: "_A_TABLE_MULTIPLE_ACTIONS_"
              },
              buttonIconLeft: JV,
              inBody: !0,
              placement: "bottom-end"
            }
          }),
          this.isQuickSearch ? c(In, {
            label: "_A_TABLE_QUICK_SEARCH_",
            class: "a_table__top_panel__actions__quick_search",
            modelUndefined: "",
            modelValue: this.modelQuickSearch,
            iconPrepend: km,
            "onUpdate:modelValue": this.updateModelQuickSearch
          }) : "",
          this.hasViews ? c(Cm, {
            modelValue: this.modelView,
            class: "a_d_inline_block",
            isButtonGroup: !0,
            disabled: this.disabledViews,
            slotName: this.viewSlotLocal,
            data: this.views,
            keyId: "id",
            keyLabel: "label",
            hasBorder: !1,
            classFieldset: "a_p_0",
            "onUpdate:modelValue": this.updateViewCurrentLocal
          }, {
            viewSlot: (e) => this.$slots.viewSlot && this.$slots.viewSlot({
              ...e
            })
          }) : "",
          this.useAdditionalSorting ? c(KV, {
            additionalSortingColumns: this.additionalSortingColumns,
            disabledSort: this.disabledSort,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSort
          }) : "",
          this.$slots.tableActionsAppend ? this.$slots.tableActionsAppend({
            isMultipleActionsActive: this.isMultipleActionsActive,
            modelView: this.modelView
          }) : ""
        ])
      ]),
      this.isMultipleActionsActive && c("div", {
        id: this.multiplePanelId,
        class: "a_table__multiple_panel"
      }, [
        c("div", {
          class: "a_table__multiple_panel__header"
        }, [
          c(Ae, {
            class: "a_table__multiple_panel__header__text",
            tag: "strong",
            text: "_A_TABLE_MULTIPLE_ACTIONS_"
          }),
          c("div", {
            class: "a_table__multiple_panel__items"
          }, [
            c(Ae, {
              class: "a_table__multiple_panel__items__selected",
              tag: "span",
              text: "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_",
              extra: this.textMultipleSelectedTranslateExtra
            }),
            this.currentMultipleActions.isAllRowsSelected && c(ft, {
              class: "a_btn a_btn_secondary a_table__multiple_panel__btn_all_rows",
              type: "button",
              text: this.textMultipleBtnAllRowsTranslate,
              extra: this.textMultipleSelectedTranslateExtra,
              disabled: this.isBtnSelectAllRowsDisabled || this.disabledMultipleActions,
              loading: this.isLoadingMultipleActions,
              onClick: this.toggleBtnAllRows
            })
          ])
        ]),
        c("div", {
          class: "a_table__multiple_panel__actions"
        }, [
          this.currentMultipleActions.slot && this.$slots.multipleActionActiveSlot ? this.$slots.multipleActionActiveSlot({
            disabled: this.isBtnMultipleActionDisabled || this.isLoadingMultipleActions || this.disabledMultipleActions,
            loading: this.isLoadingMultipleActions,
            text: this.currentMultipleActions.text,
            action: this.currentMultipleActions,
            onClick: this.onOpenModalMultipleActions,
            close: this.closeMultipleActionsActive,
            rows: this.selectedRows,
            rowsVisible: this.rowsLocalAll,
            id: this.buttonMultipleId,
            areAllRowsSelected: this.areAllRowsSelected
          }) : c(ft, {
            class: "a_btn a_btn_primary a_table__action",
            type: "button",
            disabled: this.isBtnMultipleActionDisabled || this.isLoadingMultipleActions || this.disabledMultipleActions,
            text: this.currentMultipleActions.text,
            loading: this.isLoadingMultipleActions,
            loadingAlign: "left",
            onClick: this.onOpenModalMultipleActions
          }),
          c(ft, {
            class: "a_btn a_btn_secondary a_table__action",
            type: "button",
            text: "_A_TABLE_MULTIPLE_CANCEL_",
            onClick: this.onCancelMultipleActions
          })
        ])
      ])
    ];
  }
};
function eW() {
  const e = B(void 0);
  return {
    componentRef: e,
    setFocusToComponent: () => {
      var n;
      (n = e.value) == null || n.focus({ preventScroll: !0 });
    }
  };
}
const tW = {
  name: "ATablePreviewDown",
  props: {
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    }
  },
  inject: [
    "onTogglePreview"
  ],
  setup() {
    const {
      componentRef: e,
      setFocusToComponent: t
    } = eW();
    return Vr(() => {
      t();
    }), {
      componentRef: e
    };
  },
  render() {
    return c("div", {
      ref: "componentRef",
      class: "a_table__preview_down",
      tabindex: -1
    }, [
      c(Ae, {
        class: "a_sr_only",
        text: "_A_TABLE_PREVIEW_DOWN_ARIA_LABEL_"
      }),
      this.$slots.preview && this.$slots.preview({
        row: this.row,
        rowIndex: this.rowIndex
      }),
      c(ft, {
        class: "a_btn a_btn_transparent_dark a_table__preview_down__btn_close",
        iconLeft: ha,
        iconClass: "a_table__preview_down__btn_close__icon",
        title: "_A_TABLE_PREVIEW_DOWN_CLOSE_",
        textScreenReader: "_A_TABLE_PREVIEW_DOWN_CLOSE_",
        onClick: () => this.onTogglePreview({
          row: this.row,
          rowIndex: this.rowIndex
        })
      })
    ]);
  }
};
function nW(e) {
  const t = d(e, "column"), n = d(e, "disabledPreview"), r = d(e, "isFooter"), s = de("hasPreview"), l = de("isMobile"), {
    columnsStyles: o
  } = iS(e);
  return {
    attributesForTd: _(() => {
      const h = {
        class: [
          "a_table__td a_table__cell",
          {
            a_table__cell_click: s.value && !r.value && !n.value
          },
          t.value.classRowParent
        ],
        style: o.value
      };
      return l.value || (h.role = "cell"), h;
    })
  };
}
function oS(e) {
  const t = d(e, "column"), n = d(e, "row"), r = _(() => !!t.value.to), s = _(() => {
    if (it(t.value.to))
      return t.value.to;
    if (nt(t.value.to)) {
      const o = pe(t.value.to), u = o.params || {}, h = o.query || {};
      if (t.value.to.nameDynamic && !t.value.to.name) {
        const A = fe(n.value, t.value.to.nameDynamic);
        A && (o.name = A);
      }
      if (t.value.to.paramsDynamic) {
        let A = !1;
        if (z(t.value.to.paramsDynamic, (E, p) => {
          const T = fe(n.value, E);
          if (we(T))
            return A = !0, !1;
          u[p] = T;
        }), A)
          return;
      }
      if (t.value.to.queryDynamic) {
        let A = !1;
        if (z(t.value.to.queryDynamic, (E, p) => {
          const T = fe(n.value, E);
          if (we(T))
            return A = !0, !1;
          h[p] = T;
        }), A)
          return;
      }
      return o.params = u, o.query = h, o;
    }
  });
  return {
    classForLink: _(() => "a_btn a_btn_link a_p_0 a_text_left"),
    isLink: r,
    toLocal: s
  };
}
function uS(e) {
  const t = d(e, "column"), n = d(e, "isFooter"), r = _(() => n.value ? t.value.footerSlot : t.value.slot);
  return {
    hasSlot: _(() => !!r.value),
    slotName: r
  };
}
function _S(e) {
  const t = d(e, "column"), n = d(e, "isFooter"), r = d(e, "row"), s = de("columnsDefaultValue"), l = de("valuesForColumnDefault"), o = _(() => n.value && "footerDefaultValue" in t.value ? t.value.footerDefaultValue : "defaultValue" in t.value ? t.value.defaultValue : we(s.value) ? "" : s.value), u = _(() => n.value ? t.value.footerKeyLabel : t.value.keyLabel), h = _(() => n.value ? t.value.footerKeyLabelSafeHtml : t.value.keyLabelSafeHtml), A = _(() => n.value ? t.value.footerKeyLabelHtml : t.value.keyLabelHtml), E = _(() => {
    if (u.value)
      return fe(r.value, u.value);
  }), p = _(() => {
    if (h.value)
      return fe(r.value, h.value);
  }), T = _(() => {
    if (A.value)
      return fe(r.value, A.value);
  }), S = (R) => {
    let g = !1;
    return z(l.value, (D) => {
      if (R === D)
        return g = !0, !1;
    }), g ? o.value : R;
  }, b = _(() => S(E.value)), L = _(() => S(p.value)), I = _(() => S(T.value));
  return {
    textOrHtmlRender: _(() => {
      if (u.value)
        return c("span", null, b.value);
      if (h.value)
        return c("div", {
          innerHTML: L.value
        });
      if (A.value)
        return Pt(c("div"), [
          [an, I.value]
        ]);
    })
  };
}
const dS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-right-fill" viewBox="0 0 16 16">
  <path d="m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z"/>
</svg>`, lp = {
  name: "ATableTd",
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    level: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    showIconChildren: {
      type: Boolean,
      required: !1
    }
  },
  inject: [
    "isMobile",
    "rowsLocalAll"
  ],
  setup(e) {
    const {
      attributesForTd: t
    } = nW(e), {
      classForLink: n,
      isLink: r,
      toLocal: s
    } = oS(e), {
      hasSlot: l,
      slotName: o
    } = uS(e), {
      textOrHtmlRender: u
    } = _S(e);
    return {
      attributesForTd: t,
      classForLink: n,
      hasSlot: l,
      isLink: r,
      slotName: o,
      textOrHtmlRender: u,
      toLocal: s
    };
  },
  render() {
    const e = c(
      "div",
      this.attributesForTd,
      [
        c("div", {
          class: [
            "a_table__cell__child",
            this.column.class,
            this.column.classRow
          ]
        }, [
          this.showIconChildren ? c(me, {
            "aria-hidden": !0,
            class: "a_table__row_level__icon",
            classDefault: "",
            iconLeft: dS,
            type: "text"
          }) : "",
          this.hasSlot && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            column: this.column,
            columnIndex: this.columnIndex,
            level: this.level,
            row: this.row,
            rowIndex: this.rowIndex,
            rows: this.rowsLocalAll
          }) : this.isLink && this.toLocal ? c($r("RouterLink"), {
            class: [
              this.column.class,
              this.classForLink,
              this.column.classRow
            ],
            to: this.toLocal
          }, () => [
            this.textOrHtmlRender
          ]) : this.textOrHtmlRender
        ])
      ]
    );
    return this.isMobile ? [
      c(Ae, {
        text: this.column.label,
        tag: "dt"
      }),
      c("dd", {}, [
        e
      ])
    ] : e;
  }
}, op = {
  name: "ATableListItem",
  inject: [
    "rowsLocalAll"
  ],
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    isFooter: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      classForLink: t,
      isLink: n,
      toLocal: r
    } = oS(e), {
      hasSlot: s,
      slotName: l
    } = uS(e), {
      textOrHtmlRender: o
    } = _S(e);
    return {
      classForLink: t,
      hasSlot: s,
      isLink: n,
      slotName: l,
      textOrHtmlRender: o,
      toLocal: r
    };
  },
  render() {
    return [
      c(Ae, {
        text: this.column.label,
        tag: "dt"
      }),
      c(
        "dd",
        null,
        this.hasSlot && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          column: this.column,
          columnIndex: this.columnIndex,
          row: this.row,
          rowIndex: this.rowIndex,
          rows: this.rowsLocalAll
        }) : this.isLink && this.toLocal ? [
          c($r("RouterLink"), {
            class: [
              this.column.class,
              this.classForLink,
              this.column.classRow
            ],
            to: this.toLocal
          }, () => [
            this.textOrHtmlRender
          ])
        ] : [
          this.textOrHtmlRender
        ]
      )
    ];
  }
};
function rW() {
  const e = de("columnsScrollInvisible"), t = de("modelIsTableWithoutScroll"), n = _(() => e.value.length), r = _(() => t.value ? n.value > 0 : !1);
  return {
    columnsScrollInvisibleText: _(() => n.value === 1 ? "_A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_" : "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_"),
    countColumnsScrollInvisible: n,
    isColumnsScrollInvisibleDropdownVisible: r
  };
}
function aW(e) {
  const t = d(e, "columnActionsView"), n = d(e, "isFooter"), r = d(e, "row"), s = d(e, "rowIndex"), l = de("columnActionsOnePlusDropdownOptions"), o = de("rowActions"), u = de("tableId"), h = _(() => `${u.value}_action_${s.value}`), A = _(() => we(l.value.indexFirstDropdownAction) ? 1 : l.value.indexFirstDropdownAction), E = ({ rowAction: C }) => {
    if (C.text)
      return C.text;
    if (qe(C.textCallback))
      return C.textCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, p = ({ rowAction: C }) => {
    if (C.html)
      return C.html;
    if (qe(C.htmlCallback))
      return C.htmlCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, T = ({ rowAction: C }) => {
    if (C.title)
      return C.title;
    if (qe(C.titleCallback))
      return C.titleCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, S = ({ rowAction: C }) => C.disabled ? C.disabled : qe(C.disabledCallback) ? C.disabledCallback({
    row: r.value,
    rowIndex: s.value,
    rowAction: C
  }) : !1, b = ({ rowAction: C }) => C.class ? C.class : qe(C.classCallback) ? C.classCallback({
    row: r.value,
    rowIndex: s.value,
    rowAction: C
  }) : "", L = ({ rowAction: C }) => {
    if (C.iconLeft)
      return C.iconLeft;
    if (qe(C.iconLeftCallback))
      return C.iconLeftCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, I = ({ rowAction: C }) => {
    if (C.iconRight)
      return C.iconRight;
    if (qe(C.iconRightCallback))
      return C.iconRightCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, v = ({ rowAction: C }) => {
    if (it(C.to))
      return C.to;
    if (nt(C.to)) {
      const k = pe(C.to), W = k.params || {}, K = k.query || {};
      if (C.to.nameDynamic && !C.to.name) {
        const le = fe(r.value, C.to.nameDynamic);
        le && (k.name = le);
      }
      if (C.to.paramsDynamic) {
        let le = !1;
        if (z(C.to.paramsDynamic, (te, _e) => {
          const ae = fe(r.value, te);
          if (we(ae))
            return le = !0, !1;
          W[_e] = ae;
        }), le)
          return;
      }
      if (C.to.queryDynamic) {
        let le = !1;
        if (z(C.to.queryDynamic, (te, _e) => {
          const ae = fe(r.value, te);
          if (we(ae))
            return le = !0, !1;
          K[_e] = ae;
        }), le)
          return;
      }
      return k.params = W, k.query = K, k;
    }
  }, R = ({ rowAction: C }) => C.href ? C.href : qe(C.hrefCallback) ? C.hrefCallback({
    row: r.value,
    rowIndex: s.value,
    rowAction: C
  }) : !1, g = ({ rowAction: C }) => {
    if (C.extra)
      return C.extra;
    if (qe(C.extraCallback))
      return C.extraCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, D = ({ rowAction: C }) => {
    if (C.textScreenReader)
      return C.textScreenReader;
    if (qe(C.textScreenReaderCallback))
      return C.textScreenReaderCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, w = ({ rowActionIndexVisible: C }) => {
    if (t.value === "dropdown")
      return {
        id: h.value,
        ids: [h.value, u.value]
      };
    if (C < A.value) {
      const k = `${h.value}_${C}`;
      return {
        buttonId: k,
        id: k,
        ids: [k, u.value]
      };
    }
    return {
      id: h.value,
      ids: [h.value, u.value]
    };
  }, M = (C) => {
    z(C, (k, W) => {
      lw(W, "Callback") && (C[W] = void 0);
    });
  }, P = _(() => {
    const C = [];
    let k = 0;
    return z(pe(o.value), (W) => {
      if (nS({
        rowAction: W,
        row: r.value,
        rowIndex: s.value
      })) {
        if (W.type !== "divider") {
          const K = E({ rowAction: W });
          K && (W.text = K);
          const le = p({ rowAction: W });
          le && (W.html = le);
          const te = T({ rowAction: W });
          te ? W.title = te : K && (W.title = K);
          const _e = S({ rowAction: W });
          _e && (W.disabled = _e);
          const ae = b({ rowAction: W });
          ae && (W.class = ae);
          const oe = L({ rowAction: W });
          oe && (W.iconLeft = oe);
          const Le = I({ rowAction: W });
          Le && (W.iconRight = Le);
          const We = g({ rowAction: W });
          We && (W.extra = We);
          const Se = D({ rowAction: W });
          if (We && (W.textScreenReader = Se), W.type === "link") {
            const se = v({ rowAction: W });
            se ? W.to = se : W.href = R({ rowAction: W });
          }
          if (qe(W.callback)) {
            const {
              buttonId: se,
              id: Oe,
              ids: ye
            } = w({
              rowActionIndexVisible: k
            });
            W.id = se;
            const je = W.callback;
            W.callback = () => je({
              row: r.value,
              rowIndex: s.value,
              id: Oe,
              ids: ye,
              rowAction: W
            });
          }
          M(W);
        }
        k++, C.push(W);
      }
    }), C;
  }), F = _(() => !n.value && P.value.length > 0);
  return {
    buttonActionsId: h,
    isRowActionsDropdownVisible: F,
    rowActionsFiltered: P
  };
}
function sW(e) {
  const t = d(e, "rowIndex");
  return {
    rowNumber: _(() => t.value + 1)
  };
}
const iW = {
  name: "ATableTdAction",
  components: {
    AIcon: ut,
    ATableListItem: op
  },
  props: {
    columnActionsBtnGroupMaxWidthStyle: {
      type: String,
      required: !1,
      default: void 0
    },
    columnActionsView: {
      type: String,
      required: !0
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    }
  },
  inject: [
    "columnActionsOnePlusDropdownOptions",
    "columnsScrollInvisible",
    "tableId"
  ],
  setup(e) {
    const {
      isMobileWidth: t
    } = En(), {
      buttonActionsId: n,
      isRowActionsDropdownVisible: r,
      rowActionsFiltered: s
    } = aW(e), {
      columnsScrollInvisibleText: l,
      countColumnsScrollInvisible: o,
      isColumnsScrollInvisibleDropdownVisible: u
    } = rW(), {
      rowNumber: h
    } = sW(e), {
      stylesThTd: A
    } = aS();
    return {
      buttonActionsId: n,
      columnsScrollInvisibleText: l,
      countColumnsScrollInvisible: o,
      isColumnsScrollInvisibleDropdownVisible: u,
      isMobileWidth: t,
      isRowActionsDropdownVisible: r,
      rowActionsFiltered: s,
      rowNumber: h,
      stylesThTd: A
    };
  },
  render() {
    return c("div", {
      role: "cell",
      class: [
        "a_table__td a_table__cell a_table__cell_action",
        {
          a_table__cell_action_sticky: this.isRowActionsStickyLocal
        }
      ],
      ...this.stylesThTd
    }, [
      c("div", {
        class: [
          "a_table__cell__child",
          this.rowActionsClass
        ]
      }, [
        this.isColumnsScrollInvisibleDropdownVisible && c(sa, {
          buttonClass: "a_btn a_btn_link a_text_nowrap",
          buttonIconLeft: $m,
          buttonIconClass: "a_table__cell_action__additional_icon",
          buttonTitle: "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_",
          buttonTextScreenReader: "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_",
          buttonText: this.columnsScrollInvisibleText,
          buttonTextClass: "a_table__cell_action__additional_text",
          buttonTextAriaHidden: !0,
          extra: {
            count: this.countColumnsScrollInvisible
          },
          dropdownClass: "a_p_0 a_overflow_x_hidden a_table__extra_dropdown",
          dropdownTag: "div",
          hasCaret: !1,
          floatingFlip: {
            use: !0,
            fallbackPlacements: ["top-end", "left"]
          },
          inBody: !0,
          placement: "bottom-end",
          menuWidth: 600,
          isCloseByClickInside: !1
        }, {
          dropdown: () => [
            c("dl", {
              class: "a_list_dl a_list_dl_dt_right"
            }, [
              this.columnsScrollInvisible.map((e, t) => c(op, {
                column: e,
                columnIndex: t,
                row: this.row,
                rowIndex: this.rowIndex,
                isFooter: this.isFooter
              }, this.$slots))
            ])
          ]
        }),
        this.isRowActionsDropdownVisible || this.$slots.rowActions ? c("div", {
          class: "a_table__cell_action__group"
        }, [
          this.$slots.rowActions ? this.$slots.rowActions({
            tableId: this.tableId,
            row: this.row,
            rowIndex: this.rowIndex,
            isFooter: this.isFooter
          }) : "",
          this.isRowActionsDropdownVisible ? this.columnActionsView === "dropdown" || this.isMobileWidth && this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile === 0 ? c(sa, {
            id: this.buttonActionsId,
            actions: this.rowActionsFiltered,
            buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
            buttonIconLeft: Nl,
            buttonTextScreenReader: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
            buttonTitle: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
            disabled: this.disabledRowActions,
            extra: {
              rowNumber: this.rowNumber
            },
            hasCaret: !1,
            inBody: !0,
            placement: "bottom-end"
          }, this.$slots) : c(Kd, {
            class: "a_d_inline_block",
            style: this.columnActionsBtnGroupMaxWidthStyle,
            actions: this.rowActionsFiltered,
            dropdownAttributes: {
              id: this.buttonActionsId,
              buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
              buttonIconLeft: mi,
              buttonTextScreenReader: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
              buttonTitle: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
              extra: {
                rowNumber: this.rowNumber
              },
              hasCaret: !1,
              inBody: !0,
              placement: "bottom-end"
            },
            disabled: this.disabledRowActions,
            btnGroupClass: we(this.columnActionsOnePlusDropdownOptions.btnGroupClass) ? "a_btn_group a_btn_group_table" : this.columnActionsOnePlusDropdownOptions.btnGroupClass,
            hasDividerBeforeDropdown: this.columnActionsOnePlusDropdownOptions.hasDividerBeforeDropdown || !1,
            indexFirstDropdownAction: we(this.columnActionsOnePlusDropdownOptions.indexFirstDropdownAction) ? 1 : this.columnActionsOnePlusDropdownOptions.indexFirstDropdownAction,
            indexFirstDropdownActionMobile: we(this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile) ? 1 : this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile,
            minDropdownActions: we(this.columnActionsOnePlusDropdownOptions.minDropdownActions) ? 1 : this.columnActionsOnePlusDropdownOptions.minDropdownActions,
            actionsClasses: this.columnActionsOnePlusDropdownOptions.actionsClasses || ["a_btn a_btn_primary a_text_truncate"]
          }, this.$slots) : ""
        ]) : ""
      ])
    ]);
  }
};
function lW(e, {
  hasChildren: t = _(() => !1),
  hasPreviewLocal: n = _(() => !1),
  rowClassChildren: r = _(() => {
  }),
  rowClassLevelChildren: s = _(() => {
  }),
  rowClassPreview: l = _(() => {
  }),
  toggleChildren: o = () => {
  }
}) {
  const u = d(e, "disabledPreview"), h = d(e, "disabledPreviewRowCallback"), A = d(e, "isFooter"), E = d(e, "isTreeCollapsible"), p = d(e, "level"), T = d(e, "row"), S = d(e, "rowClass"), b = d(e, "rowIndex"), L = de("isMobile"), I = de("onTogglePreview"), v = de("tableId"), R = _(() => {
    const k = A.value ? "_footer" : "";
    return `${v.value}${k}_${b.value}`;
  }), g = _(() => qe(S.value) ? S.value({
    level: p.value,
    row: T.value,
    rowindex: b.value
  }) : S.value), D = _(() => [
    "a_table__row a_table__body__row a_table__row_hover",
    r.value,
    s.value,
    l.value,
    g.value
  ]), w = _(() => L.value ? "listitem" : "row"), M = _(() => qe(h.value) ? h.value({ row: T.value, rowIndex: b.value }) : u.value), P = (k) => {
    SV({
      $event: k,
      tagsName: [
        "A",
        "BUTTON",
        "INPUT",
        "LABEL"
      ],
      classStop: "a_table__row"
    }) || (t.value ? o() : n.value && I({
      row: T.value,
      rowIndex: b.value
    }));
  }, F = (k) => {
    k.keyCode === X.enter && P(k);
  }, C = _(() => (E.value && t.value || n.value) && !M.value ? {
    tabindex: 0,
    onClick: P,
    onKeydown: F
  } : {});
  return {
    disabledPreviewRow: M,
    eventsLocal: C,
    roleLocal: w,
    rowClassComputed: D,
    rowHtmlId: R
  };
}
function oW(e, { emit: t }) {
  const n = d(e, "areAllRowsSelected"), r = d(e, "row"), s = d(e, "rowIndex"), l = d(e, "selectedRowsIndexes"), o = de("currentMultipleActions"), u = de("isMultipleActionsActive"), h = _(() => !!l.value[s.value] || n.value), A = _(() => {
    if (u.value) {
      if (qe(fe(o.value, "isHiddenCallback")))
        return o.value.isHiddenCallback({
          row: r.value,
          rowIndex: s.value
        });
      if (n.value)
        return !0;
    }
    return !1;
  }), E = _(() => h.value ? "_A_TABLE_DESELECT_THIS_ROW_" : "_A_TABLE_SELECT_THIS_ROW_");
  return {
    isCheckboxDisabled: A,
    isRowSelected: h,
    labelCheckbox: E,
    toggleCheckbox: () => {
      A.value || t("setSelectedRowsIndexes", { rowIndex: s.value });
    }
  };
}
function uW(e) {
  const t = d(e, "isTree"), n = d(e, "keyChildren"), r = d(e, "level"), s = d(e, "row"), l = d(e, "rowIndex"), o = d(e, "rowsLength"), u = _(() => {
    if (!n.value)
      return [];
    const T = fe(s.value, n.value);
    return Te(T) ? T : [];
  }), h = _(() => u.value.length > 0), A = _(() => r.value + 1), E = _(() => t.value ? {
    "aria-level": r.value,
    "aria-posinset": l.value + 1,
    "aria-setsize": o.value
  } : {}), p = _(() => {
    if (t.value)
      return `a_table__row_level a_table__row_level_${r.value}`;
  });
  return {
    ariaTreeAttributes: E,
    children: u,
    hasChildren: h,
    levelForChildren: A,
    rowClassLevelChildren: p
  };
}
function _W(e, {
  hasChildren: t = _(() => !1)
}) {
  const n = d(e, "isOneOfParentsClose"), r = d(e, "isTreeCollapsible"), s = d(e, "isTreeOpened"), l = B(!1), o = _(() => {
    if (t.value)
      return l.value;
  }), u = _(() => ({
    a_table__row_has_children: t.value,
    a_table__row_hide: n.value,
    a_table__row_level_open: t.value && l.value
  })), h = _(() => !!(n.value || !l.value));
  return {
    ariaExpanded: o,
    initIsChildrenOpen: () => {
      (!r.value || s.value) && (l.value = !0);
    },
    isOneOfParentsCloseForChildren: h,
    rowClassChildren: u,
    toggleChildren: () => {
      l.value = !l.value;
    }
  };
}
function dW(e) {
  const t = d(e, "allVisibleMobileColumns"), n = d(e, "countVisibleMobileColumns"), r = de("isMobile"), s = B(!1), l = _(() => t.value.length - n.value), o = _(() => r.value && t.value.length > n.value), u = _(() => l.value === 1 ? "_A_TABLE_MOBILE_TR_PLUS_FIELD_" : "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_"), h = _(() => s.value ? "_A_TABLE_MOBILE_TR_CLOSE_" : u.value);
  return {
    countInvisibleMobileColumns: l,
    isAllColumnsVisibleMobile: s,
    isBtnToggleAllColumnsVisible: o,
    textBtnToggleAllColumns: h,
    toggleAllColumnsVisibleMobile: ({ $event: E }) => {
      s.value = !s.value, E.stopPropagation();
    }
  };
}
function cW(e, {
  hasChildren: t = _(() => !1)
}) {
  const n = d(e, "isFooter"), r = d(e, "rowIndex"), s = de("hasPreview"), l = de("previewRightRowIndex"), o = de("previewRightRowIndexLast"), u = _(() => !!(!t.value && s.value && !n.value)), h = _(() => r.value === l.value), A = _(() => !h.value && r.value === o.value), E = _(() => Bt({
    placeholder: h.value ? "_A_TABLE_ROW_PREVIEW_CLOSE_" : "_A_TABLE_ROW_PREVIEW_OPEN_"
  })), p = _(() => u.value ? {
    "aria-label": E.value
  } : {}), T = _(() => {
    if (u.value)
      return {
        a_table__row_preview_open: h.value,
        a_table__row_preview_was_open: A.value
      };
  });
  return {
    hasPreviewLocal: u,
    previewAttributes: p,
    rowClassPreview: T
  };
}
const up = {
  name: "ATableTr",
  props: {
    allVisibleMobileColumns: {
      type: Array,
      required: !0
    },
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    columnActionsBtnGroupMaxWidthStyle: {
      type: String,
      required: !1,
      default: void 0
    },
    columnActionsView: {
      type: String,
      required: !0
    },
    countVisibleMobileColumns: {
      type: Number,
      required: !0
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    isOneOfParentsClose: {
      type: Boolean,
      required: !1
    },
    isPreviewDownOpen: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isTree: {
      type: Boolean,
      required: !1
    },
    isTreeCollapsible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTreeOpened: {
      type: Boolean,
      required: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "id"
    },
    level: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowClass: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    selectedRowsIndexes: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  setup(e, t) {
    const {
      ariaTreeAttributes: n,
      children: r,
      hasChildren: s,
      levelForChildren: l,
      rowClassLevelChildren: o
    } = uW(e), {
      ariaExpanded: u,
      initIsChildrenOpen: h,
      isOneOfParentsCloseForChildren: A,
      rowClassChildren: E,
      toggleChildren: p
    } = _W(e, {
      hasChildren: s
    }), {
      hasPreviewLocal: T,
      previewAttributes: S,
      rowClassPreview: b
    } = cW(e, {
      hasChildren: s
    }), {
      disabledPreviewRow: L,
      eventsLocal: I,
      roleLocal: v,
      rowClassComputed: R,
      rowHtmlId: g
    } = lW(e, {
      hasChildren: s,
      hasPreviewLocal: T,
      rowClassChildren: E,
      rowClassLevelChildren: o,
      rowClassPreview: b,
      toggleChildren: p
    }), {
      countInvisibleMobileColumns: D,
      isAllColumnsVisibleMobile: w,
      isBtnToggleAllColumnsVisible: M,
      textBtnToggleAllColumns: P,
      toggleAllColumnsVisibleMobile: F
    } = dW(e), {
      isCheckboxDisabled: C,
      isRowSelected: k,
      labelCheckbox: W,
      toggleCheckbox: K
    } = oW(e, t);
    return h(), {
      ariaExpanded: u,
      ariaTreeAttributes: n,
      children: r,
      countInvisibleMobileColumns: D,
      disabledPreviewRow: L,
      eventsLocal: I,
      hasChildren: s,
      isAllColumnsVisibleMobile: w,
      isBtnToggleAllColumnsVisible: M,
      isCheckboxDisabled: C,
      isOneOfParentsCloseForChildren: A,
      isRowSelected: k,
      labelCheckbox: W,
      levelForChildren: l,
      previewAttributes: S,
      roleLocal: v,
      rowClassComputed: R,
      rowHtmlId: g,
      textBtnToggleAllColumns: P,
      toggleAllColumnsVisibleMobile: F,
      toggleCheckbox: K,
      toggleChildren: p
    };
  },
  inject: [
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMultipleActionsActive",
    "isMobile"
  ],
  render() {
    let e = [];
    this.isMobile && !this.isAllColumnsVisibleMobile ? z(this.allVisibleMobileColumns, (r, s) => {
      if (s + 1 > this.countVisibleMobileColumns)
        return !1;
      e.push(
        c(lp, {
          key: r.id,
          column: r,
          columnIndex: s,
          disabledPreview: this.disabledPreviewRow,
          level: this.level,
          row: this.row,
          rowIndex: this.rowIndex,
          isFooter: this.isFooter
        }, this.$slots)
      );
    }) : e = this.columnsFilteredForRender.map((r, s) => c(lp, {
      key: r.id,
      column: r,
      columnIndex: s,
      disabledPreview: this.disabledPreviewRow,
      level: this.level,
      row: this.row,
      rowIndex: this.rowIndex,
      isFooter: this.isFooter,
      showIconChildren: !!(this.isTreeCollapsible && this.hasChildren && s === 0)
    }, this.$slots));
    const t = this.isActionColumnVisible && c(iW, {
      columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
      columnActionsView: this.columnActionsView,
      disabledRowActions: this.disabledRowActions,
      row: this.row,
      rowIndex: this.rowIndex,
      isFooter: this.isFooter,
      rowActionsClass: this.rowActionsClass,
      isRowActionsStickyLocal: this.isRowActionsStickyLocal
    }, this.$slots), n = this.isMobile ? c("div", {
      class: "a_table_mobile__dl__wrapper"
    }, [
      this.$slots.rowMobilePrepend ? this.$slots.rowMobilePrepend({
        row: this.row,
        rowIndex: this.rowIndex,
        isFooter: this.isFooter
      }) : "",
      this.isTreeCollapsible && this.hasChildren ? c(me, {
        "aria-hidden": !0,
        class: "a_table__row_level__icon",
        classDefault: "",
        iconLeft: dS,
        type: "text"
      }) : "",
      c("dl", {
        class: "a_table_mobile__dl"
      }, e),
      this.$slots.rowMobileAppend ? this.$slots.rowMobileAppend({
        row: this.row,
        rowIndex: this.rowIndex,
        isFooter: this.isFooter
      }) : ""
    ]) : e;
    return [
      c("div", {
        id: this.rowHtmlId,
        role: this.roleLocal,
        class: this.rowClassComputed,
        "aria-expanded": this.ariaExpanded,
        ...this.previewAttributes,
        ...this.ariaTreeAttributes,
        ...this.eventsLocal
      }, [
        this.isMultipleActionsActive && c("div", {
          class: "a_table__td a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;"
        }, [
          !this.isFooter && c(Du, {
            isWidthAuto: !0,
            modelValue: this.isRowSelected,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        n,
        this.isMobile ? c("div", {
          class: "a_table_mobile__actions_parent"
        }, [
          this.isBtnToggleAllColumnsVisible && c(me, {
            class: "a_btn a_btn_link a_table_mobile__columns_btn_toggle",
            extra: {
              count: this.countInvisibleMobileColumns
            },
            text: this.textBtnToggleAllColumns,
            type: "button",
            onClick: this.toggleAllColumnsVisibleMobile
          }),
          t
        ]) : t
      ]),
      this.isPreviewDownOpen && c(tW, {
        row: this.row,
        rowIndex: this.rowIndex
      }, {
        preview: (r) => this.$slots.preview ? this.$slots.preview(r) : void 0
      }),
      this.hasChildren ? this.children.map((r, s) => c($r("ATableTr"), {
        key: r[this.keyId] || s,
        allVisibleMobileColumns: this.allVisibleMobileColumns,
        areAllRowsSelected: this.areAllRowsSelected,
        columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
        columnActionsView: this.columnActionsView,
        countVisibleMobileColumns: this.countVisibleMobileColumns,
        disabledPreview: this.disabledPreviewRow,
        disabledRowActions: this.disabledRowActions,
        isFooter: this.isFooter,
        isOneOfParentsClose: this.isOneOfParentsCloseForChildren,
        isPreviewDownOpen: !1,
        isRowActionsStickyLocal: this.isRowActionsStickyLocal,
        isTree: this.isTree,
        isTreeCollapsible: this.isTreeCollapsible,
        isTreeOpened: this.isTreeOpened,
        keyChildren: this.keyChildren,
        keyId: this.keyId,
        level: this.levelForChildren,
        row: r,
        rowActionsClass: this.rowActionsClass,
        rowClass: this.rowClass,
        rowIndex: s,
        rowsLength: this.children.length,
        selectedRowsIndexes: this.selectedRowsIndexes
      }, {
        get: (l) => [
          c(Gd, {
            data: l.row,
            keyLabel: l.column.keyLabel,
            filter: l.column.filter,
            filterParameters: l.column.filterParameters,
            defaultValue: l.column.defaultValue,
            tag: l.column.filterTag || "div"
          })
        ],
        ...this.$slots
      })) : ""
    ];
  }
};
function fW(e, {
  isMobile: t = _(() => !1),
  rowsLocal: n = B([])
}) {
  const r = d(e, "columnActionsView"), s = d(e, "columnActionsWidth"), l = d(e, "columnActionsWidthDefaults"), o = d(e, "columnActionsWidthMin"), u = d(e, "rowActions"), h = _(() => r.value === "onePlusDropdown"), A = _(() => {
    let b = !1;
    e: for (let L = 0; L < n.value.length; L++) {
      const I = n.value[L];
      for (let v = 0; v < u.value.length; v++) {
        const R = u.value[v];
        if (nS({
          rowAction: R,
          row: I,
          rowIndex: L
        }) && R.type !== "divider") {
          b = !0;
          break e;
        }
      }
    }
    return b;
  }), E = _(() => !u.value.length || !h.value ? !1 : A.value), p = _(() => we(s.value) ? E.value && r.value === "onePlusDropdown" ? l.value.onePlusDropdown : l.value.default : s.value), T = _(() => we(o.value) ? E.value && r.value === "onePlusDropdown" ? l.value.onePlusDropdownMin : l.value.min : o.value);
  return {
    columnActionsBtnGroupMaxWidthStyle: _(() => {
      const b = l.value.btnGroupMaxWidth;
      if (!t.value && r.value !== "dropdown" && !we(b))
        return `max-width: ${b}px`;
    }),
    columnActionsWidthLocal: p,
    columnActionsWidthMinLocal: T,
    isColumnActionWide: E
  };
}
function hW(e, {
  columnsScrollInvisible: t = B([]),
  indexFirstScrollInvisibleColumn: n = B(void 0),
  modelColumnsVisibleLocal: r = B({}),
  modelIsTableWithoutScrollComputed: s = _(() => !1),
  columnsOrderedFromSimpleTable: l = _(() => [])
}) {
  const o = d(e, "columns"), u = d(e, "isActionColumnVisible"), h = d(e, "isSimpleTable"), A = d(e, "modelColumnsOrdering"), E = d(e, "multipleActions"), p = _(() => Pa(o.value, "id")), T = _(() => {
    const R = {
      true: [],
      false: [],
      trueObject: {},
      falseObject: {},
      trueColumns: [],
      falseColumns: []
    };
    return z(pe(o.value), (g) => {
      const D = g.id;
      g.locked ? (R.true.push(D), R.trueColumns.push(g), R.trueObject[D] = !0) : (R.false.push(D), R.falseColumns.push(g), R.falseObject[D] = !0);
    }), R;
  }), S = _(() => {
    if (h.value && l.value && l.value.length)
      return l.value;
    if (!A.value.length)
      return [...T.value.trueColumns, ...T.value.falseColumns];
    const R = [], g = pe(p.value);
    return z(A.value, (D) => {
      g[D] && R.push(g[D]);
    }), R;
  }), b = _(() => {
    const R = [], g = {};
    return z(S.value, (D, w) => {
      IV({
        column: D,
        columnIndex: w,
        modelIsTableWithoutScroll: s.value,
        modelColumnsVisibleLocal: r.value,
        indexFirstScrollInvisibleColumn: n.value
      }) && (g[R.length] = w, R.push(D));
    }), {
      columns: R,
      columnsIndexesMapping: g
    };
  }), L = _(() => b.value.columnsIndexesMapping), I = _(() => b.value.columns), v = _(() => {
    let R = I.value.length;
    return s.value && (R += t.value.length), u.value && R++, E.value.length && R++, R;
  });
  return {
    columnIdsGroupByLocked: T,
    columnsFilteredForRender: I,
    columnsFilteredForRenderIndexesMapping: L,
    columnsOrdered: S,
    countNotHiddenColumns: v
  };
}
function AW(e, {
  modelSort: t = B([])
}) {
  const n = d(e, "columns"), r = d(e, "showFirstSortingSequenceNumber"), s = d(e, "sortingSequenceNumberClass"), l = _(() => wt(n.value, (v) => bV({ column: v }))), o = _(() => Pn(l.value, (v, R) => ({
    ...v,
    _index: v.prio || R
  }))), u = _(() => Pn(o.value, (v) => (v.group && v.group.length && (v.group = Pn(v.group, (R, g) => [
    R,
    g
  ].join("%%%"))), v))), h = ({ groups: v, group: R, level: g, columnsOrderedFromGroups: D, firstLevelGroupObject: w }) => {
    const M = R ? wt(v, (C) => gd(C, R[g - 1])) : v, P = cT(M, (C) => C[g]), F = Pn(P, (C) => {
      const k = {
        id: C[g].split("%%%")[0]
      };
      let W;
      return g === 0 ? (W = k, W.columnIndexes = []) : W = w, C.length > g + 1 ? k.children = fe(
        h({
          groups: v,
          group: C,
          level: g + 1,
          columnsOrderedFromGroups: D,
          firstLevelGroupObject: W
        }),
        "recursiveGroup"
      ) : C.length === g + 1 && (k.columns = wt(u.value, (K) => gd(K.group, C[g])), W.columnIndexes.push(...Pn(k.columns, "_index")), D.push(...k.columns)), k;
    });
    return {
      columnsOrderedFromGroups: D,
      recursiveGroup: F
    };
  }, A = _(() => Pn(u.value, (v) => fe(v, "group", v))), E = _(() => wt(A.value, (v) => Te(v))), p = _(() => wt(A.value, (v) => !Te(v))), T = _(() => {
    const v = [];
    return h({ groups: E.value, group: null, level: 0, columnsOrderedFromGroups: v });
  }), S = _(() => Nd([
    ...T.value.columnsOrderedFromGroups,
    ...p.value
  ], "_index")), b = (v) => c(Xd, {
    ref: "th",
    class: "a_table__cell__child_group",
    column: v,
    columnGroupNames: Pn(v.group, (R) => R.split("%%%")[0]),
    columnIndex: v._index,
    hasMultipleActions: !1,
    modelSort: t.value,
    showFirstSortingSequenceNumber: r.value,
    sortingSequenceNumberClass: s.value
  }), L = (v) => c("div", {
    class: "a_table__th_group"
  }, [
    c("div", {
      class: "a_table__th_child_group"
    }, [
      c("div", {
        class: "a_table__cell_group a_text_center"
      }, [
        v.id && c(Ae, {
          html: v.id,
          tag: "span",
          "aria-hidden": !0
        })
      ]),
      c("div", {
        class: "a_table__th_group_container"
      }, v.children ? Pn(v.children, (R) => L(R)) : Pn(v.columns, (R) => b(R)))
    ])
  ]), I = _(() => {
    const v = Nd([
      ...T.value.recursiveGroup,
      ...p.value
    ], (R) => R.columnIndexes ? gw(R.columnIndexes) : R._index);
    return Pn(v, (R) => R.columnIndexes ? L(R) : b(R));
  });
  return {
    columnsOrderedFromSimpleTable: S,
    renderedGroupedColumns: I
  };
}
function EW(e, { emit: t }, {
  checkVisibleColumns: n = () => {
  },
  columnIdsGroupByLocked: r = _(() => ({
    true: [],
    false: [],
    trueObject: {},
    falseObject: {},
    trueColumns: [],
    falseColumns: []
  })),
  columnsFilteredForRenderIndexesMapping: s = _(() => ({}))
}) {
  const l = d(e, "columns"), o = d(e, "modelColumnsOrdering"), u = ({ columnIndexDraggable: E, columnIndexOver: p, reset: T, inHeader: S }) => {
    if (E === p && !T)
      return;
    S && (E = s.value[E], p = s.value[p]);
    let b;
    if (T)
      b = [...r.value.true, ...r.value.false];
    else {
      b = pe(o.value);
      const L = b[E];
      b.splice(E, 1), b.splice(p, 0, L);
    }
    t("changeColumnsOrdering", {
      columnIndexDraggable: E,
      columnIndexOver: p,
      modelColumnsOrdering: b
    }), setTimeout(() => {
      n();
    });
  }, h = () => {
    let E = [], p = !1;
    if (!o.value.length)
      E = [...r.value.true, ...r.value.false];
    else {
      E = [...r.value.true];
      const T = pe(r.value.falseObject);
      z(o.value, (S) => {
        T[S] && (E.push(S), delete T[S]);
      }), z(T, (S, b) => {
        E.push(b);
      }), JSON.stringify(o.value) !== JSON.stringify(E) && (p = !0);
    }
    return {
      shouldFixColumns: p,
      modelColumnsOrderingLocal: E
    };
  }, A = () => {
    const {
      shouldFixColumns: E,
      modelColumnsOrderingLocal: p
    } = h();
    E && t("changeColumnsOrdering", {
      modelColumnsOrdering: p,
      shouldFixColumns: E
    });
  };
  return rt(l, () => {
    A();
  }, {
    deep: !0
  }), {
    changeColumnsOrdering: u,
    checkColumnsOrdering: h
  };
}
function pW(e) {
  const t = d(e, "countAllRows"), n = d(e, "data"), r = d(e, "isTree"), s = d(e, "keyChildren"), l = d(e, "keyCountAllRowsInData"), o = _(() => nt(n.value)), u = _(() => Te(n.value)), h = _(() => ie(t.value) ? o.value ? +fe(n.value, l.value) : u.value ? r.value ? UP({
    array: n.value,
    keyChildren: s.value
  }) : n.value.length : 0 : t.value), A = _(() => ie(t.value) ? n.value.length : t.value);
  return {
    countAllRowsLocal: h,
    totalRowsCount: A
  };
}
function TW({
  tableRef: e = B(void 0)
}) {
  return {
    scrollToTable: () => {
      if (e.value) {
        let s = e.value.getBoundingClientRect().top + window.scrollY - window.innerHeight / 2;
        s < 0 && (s = 0), document.documentElement.scrollTop = s;
      }
    },
    setFocusToTable: () => {
      e.value && (e.value.setAttribute("tabindex", "-1"), e.value.focus(), e.value.removeAttribute("tabindex"));
    }
  };
}
function mW(e, { emit: t }, {
  checkColumnsOrdering: n = () => {
  },
  checkVisibleColumns: r = () => {
  },
  modelColumnsVisibleLocal: s = B({})
}) {
  const l = d(e, "modelColumnsVisible"), o = d(e, "columns");
  return {
    initTable: () => {
      const {
        shouldFixColumns: h,
        modelColumnsOrderingLocal: A
      } = n();
      let E = !1;
      pi(l.value) ? s.value = pe(l.value) : (E = !0, s.value = Zm(o.value), r()), t("initTable", pe({
        columnsOrdering: {
          model: A,
          shouldFix: h
        },
        columnsVisible: {
          model: s.value,
          shouldFix: E
        }
      }));
    }
  };
}
function SW(e, { emit: t }, {
  closePreviewAll: n = () => {
  },
  scrollToTable: r = () => {
  },
  setFocusToTable: s = () => {
  },
  viewCurrent: l = _(() => ({}))
}) {
  const o = d(e, "isTree"), u = d(e, "offsetStart"), h = d(e, "pagination"), A = B(void 0), E = B(void 0), p = () => {
    A.value = h.value.limitStart || 10, E.value = u.value;
  }, T = _(() => {
    var L;
    return o.value ? !1 : (L = h.value) != null && L.use ? l.value ? l.value.usePagination || !1 : !0 : !1;
  });
  return {
    changeLimit: (L) => {
      s(), r(), A.value = L, E.value = u.value, t("changeLimit", {
        offset: E.value,
        limit: L
      }), n();
    },
    changeOffset: (L) => {
      let I, v;
      nt(L) ? (I = L.offset, v = L.reload) : (I = L, v = !0), v && (s(), r()), E.value = I, t("changeOffset", {
        offset: I,
        limit: A.value
      }), v && n();
    },
    initLocalVars: p,
    limit: A,
    offset: E,
    usePaginationLocal: T
  };
}
function bW({
  columnsOrdered: e = B([]),
  isMobile: t = B(!1),
  modelColumnsVisibleLocal: n = B({})
}) {
  return {
    allVisibleMobileColumns: _(() => t.value ? wt(e.value, (s) => s.isRender !== !1 && n.value[s.id] !== !1) : [])
  };
}
function LW(e, { emit: t }, {
  checkVisibleColumns: n = () => {
  },
  isMultipleActionsActive: r = B(void 0),
  rowsLocalAll: s = _(() => []),
  rowsLocalLength: l = _(() => 0)
}) {
  const o = d(e, "id"), u = d(e, "multipleActions"), h = B(void 0), A = B({}), E = B(!1), p = _(() => u.value.length > 0), T = _(() => qe(fe(h.value, "isHiddenCallback"))), S = _(() => wt(s.value, (P, F) => A.value[F])), b = () => {
    A.value = {};
  }, L = () => {
    r.value = !1, h.value = void 0, E.value = !1, b();
  }, I = () => {
    if (window.isScrollDisabled)
      return;
    const P = eS({ tableId: o.value });
    aa({
      selector: `#${P}`
    });
  }, v = ({ isActive: P, action: F } = {}) => {
    if (P) {
      r.value = !0, h.value = F, setTimeout(() => {
        n(), I();
      }), t("toggleMultipleActions", { isActive: P, action: F });
      return;
    }
    r.value ? L() : r.value = !0, setTimeout(() => {
      n(), I();
    }), t("toggleMultipleActions", { isActive: P, action: F });
  }, R = _(() => pi(A.value)), g = _(() => l.value > 0 && l.value === R.value), D = _(() => R.value > 0);
  return {
    areAllRowsSelected: E,
    areAllVisibleRowsSelected: g,
    areSomeRowsSelected: D,
    closeMultipleActionsActive: L,
    currentMultipleActions: h,
    hasMultipleActions: p,
    selectedRows: S,
    selectedRowsIndexes: A,
    setEmptySelectedRowsIndexes: b,
    setSelectedRowsIndexes: ({ rowIndex: P, isAll: F }) => {
      if (F) {
        if (D.value)
          b();
        else {
          const C = {};
          T.value ? ir(l.value, (k) => {
            h.value.isHiddenCallback({
              row: s.value[k],
              rowIndex: k
            }) || (C[k] = !0);
          }) : ir(l.value, (k) => {
            C[k] = !0;
          }), A.value = C;
        }
        return;
      }
      A.value[P] ? delete A.value[P] : A.value[P] = !0;
    },
    toggleBtnAllRows: () => {
      E.value = !E.value, E.value && b();
    },
    toggleMultipleActionsActive: v
  };
}
function IW(e, { emit: t }, {
  aTableRef: n = B({}),
  tableGrandparentRef: r = B({})
}) {
  const {
    previewRef: s,
    removePreviewRef: l
  } = lS(), o = d(e, "previewBoxWidth"), u = 200, h = 50;
  let A, E = 0, p = 0, T = 0;
  const S = () => {
    p = n.value.getBoundingClientRect().left;
  }, b = ({ clientWidth: C }) => {
    E = C, A = C / 100 * h, S();
  }, L = ({ clientWidthLocal: C, clientXTableParent: k, previewBoxWidth: W }) => {
    const K = C - k - W;
    n.value.style.width = `${K}px`;
  }, I = ({ clientX: C = 0, previewRef: k, previewBoxWidth: W = 0 }) => {
    let K = W || E - C;
    K < u ? K = u : K > A && (K = A), L({ clientWidthLocal: E, clientXTableParent: p, previewBoxWidth: K }), k.style.width = `${K}px`;
  }, v = ({ previewRef: C }) => {
    fe(C, "style.removeProperty") && C.style.removeProperty("width"), fe(n, "value.style.removeProperty") && n.value.style.removeProperty("width");
  }, R = ({ previewRef: C }) => {
    E = document.documentElement.clientWidth, T = fe(r, "value.offsetWidth", 0), S(), I({
      previewRef: C,
      previewBoxWidth: o.value
    });
  }, g = ({ previewRef: C, isOpen: k }) => {
    k ? R({ previewRef: C }) : v({ previewRef: C });
  }, D = ({ previewRightWidth: C }) => {
    t("mouseupResizePreviewRight", { previewRightWidth: C });
  }, w = () => {
    R({
      previewRef: s.value
    });
  }, M = new ResizeObserver(
    il((C) => {
      const k = C[0].contentRect;
      T !== k.width && (T = k.width, w());
    }, 300)
  ), P = () => {
    M.observe(r.value);
  }, F = () => {
    M.unobserve(r.value);
  };
  return Ot(() => {
    l(), F();
  }), {
    addEventListenerWindowResize: P,
    mousedownResizePreviewRight: b,
    mousemoveResizePreviewRight: I,
    mouseupResizePreviewRight: D,
    removeEventListenerWindowResize: F,
    togglePreviewResize: g
  };
}
function vW(e, t, {
  aTableRef: n = B({}),
  isMobile: r = B(void 0),
  rowsLocalAll: s = _(() => []),
  tableGrandparentRef: l = B({})
}) {
  const {
    isDropdownGlobalOpen: o
  } = Sm(), {
    addEventListenerWindowResize: u,
    mousedownResizePreviewRight: h,
    mousemoveResizePreviewRight: A,
    mouseupResizePreviewRight: E,
    removeEventListenerWindowResize: p,
    togglePreviewResize: T
  } = IW(e, t, {
    aTableRef: n,
    tableGrandparentRef: l
  }), S = d(e, "keyId"), b = d(e, "preview"), L = d(e, "id"), I = t.emit, v = B({}), R = B(void 0), g = B(void 0), D = _(() => !!b.value), w = ({ rowIndex: Se }) => {
    window.isScrollDisabled || setTimeout(() => {
      const se = `#${L.value}_${Se}`;
      aa({ selector: se });
    });
  }, M = () => {
    window.isScrollDisabled || setTimeout(() => {
      const Se = `#${Qm({ tableId: L.value })}`;
      aa({ selector: Se });
    });
  }, P = _(() => b.value === "right" || r.value), F = _(() => !ie(R.value)), C = () => {
    w({
      rowIndex: R.value
    }), I("togglePreview", {
      row: s.value[R.value],
      rowIndex: R.value,
      typeToggle: "close"
    }), g.value = R.value, R.value = void 0, p();
  }, k = () => {
    I("togglePreview", {
      row: s.value[R.value],
      rowIndex: R.value,
      typeToggle: "close"
    }), g.value = void 0, R.value = void 0, p();
  }, W = _(() => b.value === "down"), K = ({ rowIndex: Se, row: se }) => {
    const Oe = su({ row: se, rowIndex: Se, keyId: S.value });
    delete v.value[Oe];
  }, le = () => {
    v.value = {};
  }, te = () => {
    k(), le();
  }, _e = ({ rowIndex: Se, row: se } = {}) => {
    P.value ? C() : W.value && K({ rowIndex: Se, row: se });
  }, ae = ({ rowIndex: Se }) => {
    !r.value && we(R.value) && u(), I("togglePreview", {
      row: s.value[Se],
      rowIndex: Se,
      typeToggle: "open"
    }), R.value = Se, g.value = void 0, M();
  }, oe = ({ rowIndex: Se }) => {
    R.value === Se ? C() : ae({ rowIndex: Se });
  }, Le = ({ rowIndex: Se, row: se }) => {
    const Oe = su({ row: se, rowIndex: Se, keyId: S.value });
    v.value[Oe] ? delete v.value[Oe] : v.value[Oe] = !0;
  };
  return {
    closePreview: _e,
    closePreviewAll: te,
    hasPreview: D,
    isPreviewRightOpen: F,
    mousedownResizePreviewRight: h,
    mousemoveResizePreviewRight: A,
    mouseupResizePreviewRight: E,
    onTogglePreview: ({ row: Se, rowIndex: se }) => {
      if (!o.value) {
        if (P.value) {
          oe({ rowIndex: se });
          return;
        }
        W.value && Le({ row: Se, rowIndex: se });
      }
    },
    previewDownRowIds: v,
    previewRightRowIndex: R,
    previewRightRowIndexLast: g,
    togglePreviewResize: T
  };
}
function yW(e, {
  dataSorted: t = _(() => []),
  limit: n = B(0),
  offset: r = B(0),
  setEmptySelectedRowsIndexes: s = () => {
  },
  usePaginationLocal: l = _(() => !1)
}) {
  const o = d(e, "clearSelectedRowsOnDataChange"), u = d(e, "pagination"), h = d(e, "rowsCountRenderPerTick"), A = B([]), E = B([]);
  let p = !0, T = 0, S;
  const b = _(() => {
    if (n.value && !u.value.isOutside && l.value) {
      const F = r.value, C = F + n.value;
      return t.value.slice(F, C);
    }
    return t.value;
  }), L = _(() => b.value), I = _(() => L.value.length), v = _(() => !!I.value), R = () => {
    const F = T * h.value, C = F + h.value;
    Pn(b.value.slice(F, C), (k) => E.value.push(k)), T++;
  }, g = () => {
    S = setInterval(() => {
      T * h.value >= b.value.length ? clearInterval(S) : R();
    });
  }, D = () => {
    clearInterval(S);
  }, w = ({ row: F, rowIndex: C }) => {
    C > E.value.length - 1 || (E.value[C] = F);
  }, M = ({ row: F }) => {
    E.value.unshift(F);
  }, P = ({ index: F }) => {
    E.value.splice(F, 1);
  };
  return rt(b, (F) => {
    Ec(F, A.value) || (A.value = [...F], !p && o.value && s(), p = !1, E.value = [], T = 0, D(), h.value > 0 ? (R(), g()) : E.value = b.value);
  }, {
    immediate: !0,
    deep: !0
  }), {
    addRow: M,
    deleteRow: P,
    hasRows: v,
    rowsLocal: E,
    rowsLocalAll: L,
    rowsLocalLength: I,
    stopRenderRows: D,
    updateRow: w
  };
}
function gW(e, { emit: t }, {
  columnActionsWidth: n = _(() => 0),
  columnActionsWidthMin: r = _(() => 0),
  columnsOrdered: s = _(() => []),
  columnsScrollInvisible: l = B([]),
  indexFirstScrollInvisibleColumn: o = B(void 0),
  isMobile: u = B(!1),
  isMultipleActionsActive: h = B(void 0),
  modelColumnsVisibleLocal: A = B({}),
  modelIsTableWithoutScroll: E = B(!1),
  modelIsTableWithoutScrollComputed: p = _(() => !1)
}) {
  const T = d(e, "columnWidthDefault"), S = d(e, "isActionColumnVisible"), b = d(e, "isSimpleTable"), L = B(void 0), I = B(0), v = B(void 0);
  let R = !1;
  const g = 20, D = _(() => S.value ? r.value : 0), w = _(() => {
    const te = h.value ? r.value : 0, _e = b.value ? 0 : g;
    return te + _e;
  }), M = ({
    sumGrows: te = 0,
    freeSpaceWidth: _e = 0
  }) => {
    te > 0 ? I.value = _e / te : I.value = 0;
  }, P = () => {
    if (ie(o.value) || s.value.length < o.value)
      l.value = [];
    else {
      const te = [];
      for (let _e = o.value; _e < s.value.length; _e++) {
        const ae = s.value[_e];
        nl({
          column: ae,
          modelColumnsVisibleLocal: A.value
        }) && te.push(pe(ae));
      }
      l.value = te;
    }
  }, F = () => {
    l.value = [], I.value = 0, o.value = 1e3, v.value = 0;
  }, C = () => {
    if (u.value || v.value === 0) {
      F();
      return;
    }
    if (we(v.value))
      return;
    const te = v.value - w.value - D.value, _e = v.value - w.value - n.value;
    let ae = 0, oe = 0, Le = 0, We = !1;
    if (z(s.value, (Oe) => {
      if (!nl({
        column: Oe,
        modelColumnsVisibleLocal: A.value
      })) {
        oe++;
        return;
      }
      const ye = +Oe.width || T.value;
      if (ae + ye > te)
        return We = !0, !1;
      ae += ye, oe++, Le += ie(Oe.grow) ? 1 : Oe.grow;
    }), We && ae > _e)
      for (let Oe = oe - 1; Oe >= 0; Oe--) {
        oe--;
        const ye = s.value[oe];
        if (!nl({
          column: ye,
          modelColumnsVisibleLocal: A.value
        }))
          continue;
        const je = +ye.width || T.value;
        if (ae -= je, Le -= ie(ye.grow) ? 1 : ye.grow, ae <= _e)
          break;
      }
    let Se = 0;
    const se = We ? _e : te;
    (p.value || oe === s.value.length) && (Se = se - ae), o.value = oe, M({
      sumGrows: Le,
      freeSpaceWidth: Se
    }), P();
  }, k = ({ entries: te, forceAdjust: _e }) => {
    const ae = te[0].contentRect;
    (_e || v.value > ae.width + g || v.value < ae.width - g) && (R || (R = !0, v.value = ae.width, C(), R = !1));
  }, W = new ResizeObserver(
    il((te) => {
      we(v.value) ? k({ entries: te, forceAdjust: !0 }) : k({ entries: te });
    }, 300)
  ), K = (te) => {
    te ? (W.unobserve(L.value), F()) : (W.observe(L.value), E.value && C());
  }, le = (te) => {
    E.value = te, t("updateModelIsTableWithoutScroll", te), E.value && C();
  };
  return Vr(() => {
    u.value || W.observe(L.value);
  }), Ot(() => {
    W.unobserve(L.value);
  }), rt(s, () => {
    C();
  }), {
    aTableRef: L,
    changeModelIsTableWithoutScroll: le,
    checkVisibleColumns: C,
    columnsVisibleAdditionalSpaceForOneGrow: I,
    onWatchMobileScrollControl: K
  };
}
function RW(e) {
  const t = d(e, "hasMobile"), n = d(e, "isActionColumnVisible"), r = d(e, "isActionColumnVisible"), s = d(e, "isColumnsDnd"), l = d(e, "isSimpleTable"), o = d(e, "modelIsTableWithoutScrollStart"), u = d(e, "rowActions"), h = B(void 0), A = () => {
    h.value = o.value;
  }, {
    isMobileWidth: E
  } = En(), p = _(() => l.value ? u.value && !!u.value.length && n.value : r.value), T = _(() => !!(r.value && !l.value)), S = _(() => !!(s.value && !l.value)), b = _(() => t.value ? !!E.value : !1), L = _(() => l.value ? !1 : h.value);
  return {
    initModelIsTableWithoutScroll: A,
    isActionColumnVisibleLocal: p,
    isActionIconVisibleLocal: T,
    isColumnsDndLocal: S,
    isMobile: b,
    modelIsTableWithoutScroll: h,
    modelIsTableWithoutScrollComputed: L
  };
}
function OW(e, {
  viewCurrent: t = _(() => ({}))
}) {
  const n = d(e, "data"), r = d(e, "isSortingOutside"), s = d(e, "modelSort"), l = d(e, "useAdditionalSorting"), o = B([]), u = _(() => l.value ? t.value ? t.value.useAdditionalSorting || !1 : !0 : !1), h = () => {
    it(s.value) ? o.value = [s.value] : Te(s.value) && (o.value = pe(s.value));
  }, A = _(() => {
    const p = {
      models: [],
      directions: []
    };
    return o.value.length && z(o.value, (T) => {
      let S = "asc", b = T;
      Sc(T, "-") && (S = "desc", b = T.slice(1)), p.models.push(b), p.directions.push(S);
    }), p;
  }), E = _(() => o.value.length && !r.value ? pc(n.value || [], A.value.models, A.value.directions) : n.value || []);
  return rt(s, () => {
    h();
  }), {
    dataSorted: E,
    initModelSort: h,
    modelSortLocal: o,
    useAdditionalSortingLocal: u
  };
}
function CW(e, { emit: t }, {
  modelSortLocal: n = B([]),
  closePreviewAll: r = () => {
  }
}) {
  const s = d(e, "id"), l = d(e, "isSortingMultiColumn"), o = d(e, "sortingMultiColumnKey"), u = _(() => `${o.value}Key`), h = (T) => l.value && T[u.value], A = ({ sortId: T }) => {
    const S = n.value.indexOf(T);
    if (S !== -1) {
      n.value.splice(S, 1, `-${T}`);
      return;
    }
    const b = n.value.indexOf(`-${T}`);
    if (b !== -1) {
      n.value.splice(b, 1);
      return;
    }
    n.value.push(T);
  }, E = ({ sortId: T }) => {
    if (n.value.indexOf(T) !== -1) {
      n.value = [`-${T}`];
      return;
    }
    if (n.value.indexOf(`-${T}`) !== -1) {
      n.value = [];
      return;
    }
    n.value = [T];
  };
  return {
    changeModelSort: ({ sortId: T, $event: S, modelAll: b }) => {
      b ? n.value = b : h(S) ? A({ sortId: T }) : E({ sortId: T }), t("changeSorting", {
        modelSort: pe(n.value)
      }), Rt.$emit("changeTableSorting", {
        modelSort: pe(n.value),
        tableId: s.value
      }), r();
    }
  };
}
function NW(e, {
  isMobile: t = B(void 0),
  modelIsTableWithoutScrollComputed: n = _(() => {
  })
}) {
  const r = d(e, "rowActionsSticky");
  return {
    isRowActionsStickyLocal: _(() => !!(!t.value && r.value && !n.value))
  };
}
function DW(e, {
  countNotHiddenColumns: t = _(() => -1),
  isMobile: n = B(!1)
}) {
  const r = d(e, "id"), s = d(e, "isLabelVisible"), l = _(() => {
    const h = {};
    return n.value || (h.role = "table", h["aria-colcount"] = t.value), h;
  }), o = _(() => n.value ? "list" : "rowgroup"), u = _(() => {
    if (s.value)
      return tS({ tableId: r.value });
  });
  return {
    tableChildRole: o,
    tableLabelId: u,
    tableRoleAttributes: l
  };
}
function BW(e, { emit: t }, {
  modelColumnsVisibleLocal: n = B({}),
  checkVisibleColumns: r = () => {
  }
}) {
  return {
    changeModelColumnsVisible: (l) => {
      n.value = l, t("update:modelColumnsVisible", pe(n.value)), r();
    }
  };
}
function wW(e) {
  const t = d(e, "texts");
  return {
    emptyText: _(() => we(t.value.empty) ? "_A_TABLE_EMPTY_TEXT_" : t.value.empty)
  };
}
function PW() {
  const e = B([]), t = B(void 0), n = B(void 0), r = B({}), s = B(void 0), l = B(void 0);
  return {
    columnsScrollInvisible: e,
    indexFirstScrollInvisibleColumn: t,
    isMultipleActionsActive: n,
    modelColumnsVisibleLocal: r,
    tableGrandparentRef: s,
    tableRef: l
  };
}
function xW(e, { emit: t }, {
  closePreviewAll: n = () => {
  }
}) {
  const r = d(e, "views"), s = d(e, "modelFilters"), l = d(e, "modelView"), o = _(() => Pa(r.value, "id")), u = _(() => o.value[l.value]), h = _(() => r.value.length > 1), A = () => {
    if (h.value) {
      const T = hc(r.value, ["active", !0]);
      let S = r.value[0].id;
      T && (S = T.id), t("updateView", {
        _modelView: S,
        view: o.value[S],
        modelFilters: s.value,
        init: !0
      });
    }
  }, E = (T) => {
    n(), t("updateView", {
      _modelView: T,
      view: o.value[T],
      modelFilters: s.value
    });
  }, p = _(() => !u.value || u.value.type === "table");
  return {
    hasViews: h,
    initViewCurrent: A,
    isViewTableVisible: p,
    updateViewCurrent: E,
    viewCurrent: u
  };
}
const Pde = {
  name: "ATable",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    clearSelectedRowsOnDataChange: {
      type: Boolean,
      required: !1,
      default: !0
    },
    columnActionsOnePlusDropdownOptions: {
      type: Object,
      required: !1,
      default: () => ({
        actionsClasses: ["a_btn a_btn_primary a_text_truncate"],
        btnGroupClass: "a_btn_group a_btn_group_table",
        hasDividerBeforeDropdown: !1,
        indexFirstDropdownAction: 1,
        indexFirstDropdownActionMobile: 1,
        minDropdownActions: 1
      })
    },
    columnActionsView: {
      type: String,
      required: !1,
      default: "dropdown",
      validator: (e) => ["onePlusDropdown", "onePlusDropdownEmptyPlace", "dropdown"].indexOf(e) !== -1
    },
    columnActionsWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    columnActionsWidthDefaults: {
      type: Object,
      required: !1,
      default: () => ({
        default: 170,
        min: 50,
        onePlusDropdown: 320,
        onePlusDropdownMin: 200,
        btnGroupMaxWidth: 180
      })
    },
    columnActionsWidthMin: {
      type: Number,
      required: !1,
      default: void 0
    },
    columns: {
      type: Array,
      required: !0
    },
    columnsDefaultValue: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    columnWidthDefault: {
      type: Number,
      required: !1,
      default: 250
    },
    countAllRows: {
      type: Number,
      required: !1,
      default: void 0
    },
    countVisibleMobileColumns: {
      type: Number,
      required: !1,
      default: 4,
      validator: (e) => e > 0
    },
    borderType: {
      type: String,
      required: !1,
      default: () => ri.value.propsDefault.borderType,
      validator: (e) => ["bordered", "innerBordered"].indexOf(e) !== -1
    },
    data: {
      type: [Array, Object, Promise],
      required: !1
    },
    disabledActions: {
      type: Boolean,
      required: !1
    },
    disabledMultipleActions: {
      type: Boolean,
      required: !1
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    disabledViews: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    hasScrollClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_table")
    },
    isActionColumnVisible: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isActionIconVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isColumnsDnd: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLabelVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isLoadingMultipleActions: {
      type: Boolean,
      required: !1
    },
    isLoadingOptions: {
      type: Boolean,
      required: !1
    },
    isLoadingTable: {
      type: Boolean,
      required: !1
    },
    isQuickSearch: {
      type: Boolean,
      required: !1
    },
    isSimpleTable: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSortingOutside: {
      type: Boolean,
      required: !1
    },
    isTree: {
      type: Boolean,
      required: !1
    },
    isTreeCollapsible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTreeOpened: {
      type: Boolean,
      required: !1
    },
    keyCountAllRowsInData: {
      type: String,
      required: !1,
      default: "count"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyChildren: {
      type: String,
      required: !1,
      default: "children"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !1,
      default: "h2"
    },
    modelColumnsOrdering: {
      type: Array,
      required: !1,
      default: () => []
    },
    modelColumnsVisible: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelIsTableWithoutScrollStart: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelQuickSearch: {
      type: String,
      required: !1,
      default: ""
    },
    modelSort: {
      type: [String, Array],
      required: !1,
      default: () => []
    },
    modelView: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    multipleActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    offsetStart: {
      type: Number,
      required: !1,
      default: 0
    },
    pagination: {
      type: Object,
      required: !1,
      default: () => ({
        use: !1,
        maxPages: 5,
        limitsPerPage: [],
        limitStart: 10,
        disabled: !1,
        isOutside: !1,
        outside: !1,
        modes: {
          /*
           * perPage: inline / select
           * pagination: normal / short / loadMore
           */
          desktop: {
            pagination: {
              mode: "normal",
              position: 0
            },
            perPage: {
              mode: "inline",
              position: 1
            }
          },
          mobile: {
            pagination: {
              mode: "loadMore"
            }
          }
        }
      })
    },
    preview: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["right", "down"].indexOf(e) !== -1
    },
    previewBoxWidth: {
      type: Number,
      required: !1,
      default: 300
    },
    previewStyles: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowActionsSticky: {
      type: Boolean,
      required: !1,
      default: !0
    },
    rowClass: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    rowsCountRenderPerTick: {
      type: Number,
      required: !1,
      default: 25,
      validator: (e) => ca(e) && e >= 0
    },
    rowsFooter: {
      type: Array,
      required: !1,
      default: () => []
    },
    showCount: {
      type: Boolean,
      required: !1,
      default: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1,
      default: !1
    },
    sortingMultiColumnKey: {
      type: String,
      required: !1,
      default: "shift",
      validator: (e) => ["shift", "ctrl", "alt"].indexOf(e) !== -1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1,
      default: "a_badge"
    },
    tableActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    tableActionsIndexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: -1
    },
    tableActionsIndexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: 0
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        empty: "_A_TABLE_EMPTY_TEXT_"
      })
    },
    useAdditionalSorting: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useViewSlot: {
      type: Boolean,
      required: !1
    },
    valuesForColumnDefault: {
      type: Array,
      required: !1,
      default: () => [null, void 0, ""]
    },
    views: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  emits: [
    "changeColumnsOrdering",
    "changeColumnsVisible",
    "changeLimit",
    "changeOffset",
    "changeSorting",
    "mouseupResizePreviewRight",
    "initTable",
    "togglePreview",
    "toggleMultipleActions",
    "update:modelColumnsOrder",
    "update:modelColumnsVisible",
    "update:modelQuickSearch",
    "updateModelIsTableWithoutScroll",
    "updateView"
  ],
  provide() {
    return {
      changeModelColumnsVisible: this.changeModelColumnsVisible,
      columnActionsOnePlusDropdownOptions: _(() => this.columnActionsOnePlusDropdownOptions),
      columns: _(() => this.columns),
      columnsDefaultValue: _(() => this.columnsDefaultValue),
      columnWidthDefault: _(() => this.columnWidthDefault),
      isLoadingOptions: _(() => this.isLoadingOptions),
      isLoadingTable: _(() => this.isLoadingTable),
      keyId: _(() => this.keyId),
      rowActions: _(() => this.rowActions),
      tableId: _(() => this.id),
      valuesForColumnDefault: _(() => this.valuesForColumnDefault)
    };
  },
  setup(e, t) {
    const {
      initModelIsTableWithoutScroll: n,
      isActionColumnVisibleLocal: r,
      isActionIconVisibleLocal: s,
      isColumnsDndLocal: l,
      isMobile: o,
      modelIsTableWithoutScroll: u,
      modelIsTableWithoutScrollComputed: h
    } = RW(e), {
      countAllRowsLocal: A,
      totalRowsCount: E
    } = pW(e), {
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      isMultipleActionsActive: S,
      modelColumnsVisibleLocal: b,
      tableGrandparentRef: L,
      tableRef: I
    } = PW(), {
      scrollToTable: v,
      setFocusToTable: R
    } = TW({
      tableRef: I
    }), {
      hasViews: g,
      initViewCurrent: D,
      isViewTableVisible: w,
      updateViewCurrent: M,
      viewCurrent: P
    } = xW(e, t, {
      closePreviewAll: Er
    }), {
      dataSorted: F,
      initModelSort: C,
      modelSortLocal: k,
      useAdditionalSortingLocal: W
    } = OW(e, {
      viewCurrent: P
    }), {
      columnsOrderedFromSimpleTable: K,
      renderedGroupedColumns: le
    } = AW(e, {
      modelSort: k
    }), {
      columnIdsGroupByLocked: te,
      columnsFilteredForRender: _e,
      columnsFilteredForRenderIndexesMapping: ae,
      columnsOrdered: oe,
      countNotHiddenColumns: Le
    } = hW(e, {
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      modelColumnsVisibleLocal: b,
      modelIsTableWithoutScrollComputed: h,
      columnsOrderedFromSimpleTable: K
    }), {
      changeLimit: We,
      changeOffset: Se,
      initLocalVars: se,
      limit: Oe,
      offset: ye,
      usePaginationLocal: je
    } = SW(e, t, {
      closePreviewAll: Er,
      scrollToTable: v,
      setFocusToTable: R,
      viewCurrent: P
    }), {
      addRow: he,
      deleteRow: ne,
      hasRows: H,
      rowsLocal: Q,
      rowsLocalAll: re,
      rowsLocalLength: Ie,
      stopRenderRows: Ce,
      updateRow: xe
    } = yW(e, {
      dataSorted: F,
      limit: Oe,
      offset: ye,
      setEmptySelectedRowsIndexes: hs,
      usePaginationLocal: je
    }), {
      columnActionsBtnGroupMaxWidthStyle: Xe,
      columnActionsWidthLocal: Fe,
      columnActionsWidthMinLocal: Pe,
      isColumnActionWide: at
    } = fW(e, {
      isMobile: o,
      rowsLocal: Q
    }), {
      aTableRef: He,
      changeModelIsTableWithoutScroll: st,
      checkVisibleColumns: Ze,
      columnsVisibleAdditionalSpaceForOneGrow: At,
      onWatchMobileScrollControl: bt
    } = gW(e, t, {
      columnActionsWidth: Fe,
      columnActionsWidthMin: Pe,
      columnsOrdered: oe,
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      isMobile: o,
      isMultipleActionsActive: S,
      modelColumnsVisibleLocal: b,
      modelIsTableWithoutScroll: u,
      modelIsTableWithoutScrollComputed: h
    }), {
      changeColumnsOrdering: Wt,
      checkColumnsOrdering: pn
    } = EW(e, t, {
      checkVisibleColumns: Ze,
      columnIdsGroupByLocked: te,
      columnsFilteredForRenderIndexesMapping: ae
    }), {
      isRowActionsStickyLocal: cr
    } = NW(e, {
      isMobile: o,
      modelIsTableWithoutScrollComputed: h
    }), {
      areAllRowsSelected: Zt,
      areAllVisibleRowsSelected: Wn,
      areSomeRowsSelected: Gn,
      closeMultipleActionsActive: gn,
      currentMultipleActions: Or,
      hasMultipleActions: fr,
      selectedRows: Cr,
      selectedRowsIndexes: Kn,
      setEmptySelectedRowsIndexes: jn,
      setSelectedRowsIndexes: Gt,
      toggleBtnAllRows: Tn,
      toggleMultipleActionsActive: hr
    } = LW(e, t, {
      checkVisibleColumns: Ze,
      isMultipleActionsActive: S,
      rowsLocalAll: re,
      rowsLocalLength: Ie
    }), {
      changeModelColumnsVisible: Ar
    } = BW(e, t, {
      modelColumnsVisibleLocal: b,
      checkVisibleColumns: Ze
    }), {
      closePreview: ds,
      closePreviewAll: Nr,
      hasPreview: zn,
      isPreviewRightOpen: Aa,
      onTogglePreview: Rn,
      mousedownResizePreviewRight: cs,
      mousemoveResizePreviewRight: fs,
      mouseupResizePreviewRight: Lt,
      previewDownRowIds: Yn,
      previewRightRowIndex: Gr,
      previewRightRowIndexLast: Ea,
      togglePreviewResize: Kr
    } = vW(e, t, {
      aTableRef: He,
      isMobile: o,
      rowsLocalAll: re,
      tableGrandparentRef: L
    }), {
      tableChildRole: pa,
      tableLabelId: Dr,
      tableRoleAttributes: Li
    } = DW(e, {
      countNotHiddenColumns: Le,
      isMobile: o
    }), {
      allVisibleMobileColumns: Jt
    } = bW({
      columnsOrdered: oe,
      isMobile: o,
      modelColumnsVisibleLocal: b
    }), {
      changeModelSort: Ta
    } = CW(e, t, {
      modelSortLocal: k,
      closePreviewAll: Er
    }), {
      initTable: $s
    } = mW(e, t, {
      checkColumnsOrdering: pn,
      checkVisibleColumns: Ze,
      modelColumnsVisibleLocal: b
    }), {
      emptyText: ks
    } = wW(e);
    function Er() {
      Nr();
    }
    function hs() {
      jn();
    }
    return rt(o, (on) => {
      bt(on), Er();
    }), rt(at, (on, Us) => {
      on !== Us && Ze();
    }), tt("changeModelIsTableWithoutScroll", st), tt("changeModelSort", Ta), tt("columnsOrdered", oe), tt("columnsFilteredForRender", _e), tt("columnsScrollInvisible", p), tt("columnsVisibleAdditionalSpaceForOneGrow", At), tt("columnActionsWidthLocal", Fe), tt("columnActionsWidthMinLocal", Pe), tt("currentMultipleActions", Or), tt("hasPreview", zn), tt("indexFirstScrollInvisibleColumn", T), tt("isActionColumnVisible", r), tt("isActionIconVisible", s), tt("isColumnsDnd", l), tt("isMobile", o), tt("isMultipleActionsActive", S), tt("modelIsTableWithoutScroll", h), tt("onTogglePreview", Rn), tt("previewRightRowIndex", Gr), tt("previewRightRowIndexLast", Ea), tt("rowsLocalAll", re), tt("modelColumnsVisibleLocal", b), tt("changeColumnsOrdering", Wt), se(), n(), D(), $s(), C(), {
      addRow: he,
      allVisibleMobileColumns: Jt,
      areAllRowsSelected: Zt,
      areAllVisibleRowsSelected: Wn,
      areSomeRowsSelected: Gn,
      aTableRef: He,
      changeLimit: We,
      changeModelColumnsVisible: Ar,
      changeOffset: Se,
      checkVisibleColumns: Ze,
      closeMultipleActionsActive: gn,
      closePreview: ds,
      closePreviewAll: Er,
      columnActionsBtnGroupMaxWidthStyle: Xe,
      columnsFilteredForRender: _e,
      columnsOrdered: oe,
      countAllRowsLocal: A,
      deleteRow: ne,
      emptyText: ks,
      hasMultipleActions: fr,
      hasRows: H,
      hasViews: g,
      isMobile: o,
      isMultipleActionsActive: S,
      isPreviewRightOpen: Aa,
      isRowActionsStickyLocal: cr,
      isViewTableVisible: w,
      limit: Oe,
      modelColumnsVisibleLocal: b,
      modelIsTableWithoutScrollComputed: h,
      modelSortLocal: k,
      mousedownResizePreviewRight: cs,
      mousemoveResizePreviewRight: fs,
      mouseupResizePreviewRight: Lt,
      offset: ye,
      onTogglePreview: Rn,
      previewDownRowIds: Yn,
      previewRightRowIndex: Gr,
      renderedGroupedColumns: le,
      rowsLocal: Q,
      rowsLocalAll: re,
      rowsLocalLength: Ie,
      selectedRows: Cr,
      selectedRowsIndexes: Kn,
      setEmptySelectedRowsIndexes: hs,
      setSelectedRowsIndexes: Gt,
      stopRenderRows: Ce,
      tableChildRole: pa,
      tableGrandparentRef: L,
      tableLabelId: Dr,
      tableRef: I,
      tableRoleAttributes: Li,
      toggleBtnAllRows: Tn,
      toggleMultipleActionsActive: hr,
      togglePreviewResize: Kr,
      totalRowsCount: E,
      updateRow: xe,
      updateViewCurrent: M,
      useAdditionalSortingLocal: W,
      usePaginationLocal: je,
      viewCurrent: P
    };
  },
  data() {
    return {
      resolved: void 0,
      error: void 0
    };
  },
  computed: {
    hasRowsFooter() {
      return this.rowsFooter.length > 0;
    }
  },
  methods: {
    updateModelQuickSearch(e) {
      this.$emit("update:modelQuickSearch", e);
    }
  },
  render() {
    return c("div", {
      ref: "tableGrandparentRef",
      class: ["a_table__grandparent", {
        a_table_mobile: this.isMobile,
        a_table__grandparent_without_scroll: !this.hasScrollClass
      }]
    }, [
      this.$slots.tablePrepend && this.$slots.tablePrepend({
        id: this.id
      }),
      c("div", {
        ref: "aTableRef",
        class: ["a_table__parent", {
          a_table__parent_scrollable: this.hasScrollClass && !this.modelIsTableWithoutScrollComputed
        }]
      }, [
        c(QV, {
          additionalSortingColumns: this.additionalSortingColumns,
          areAllRowsSelected: this.areAllRowsSelected,
          areSomeRowsSelected: this.areSomeRowsSelected,
          closeMultipleActionsActive: this.closeMultipleActionsActive,
          countAllRows: this.countAllRowsLocal,
          disabledActions: this.disabledActions,
          disabledMultipleActions: this.disabledMultipleActions,
          disabledSort: this.disabledSort,
          disabledViews: this.disabledViews,
          extra: this.extra,
          hasViews: this.hasViews,
          isLabelVisible: this.isLabelVisible,
          isLoadingMultipleActions: this.isLoadingMultipleActions,
          isQuickSearch: this.isQuickSearch,
          isSortingMultiColumn: this.isSortingMultiColumn,
          label: this.label,
          labelClass: this.labelClass,
          labelTag: this.labelTag,
          modelQuickSearch: this.modelQuickSearch,
          modelSort: this.modelSortLocal,
          modelView: this.modelView,
          multipleActions: this.multipleActions,
          selectedRows: this.selectedRows,
          showCount: this.showCount,
          tableActions: this.tableActions,
          tableActionsIndexFirstDropdownAction: this.tableActionsIndexFirstDropdownAction,
          tableActionsIndexFirstDropdownActionMobile: this.tableActionsIndexFirstDropdownActionMobile,
          useAdditionalSorting: this.useAdditionalSortingLocal,
          useViewSlot: this.useViewSlot,
          viewCurrent: this.viewCurrent,
          views: this.views,
          onUpdateViewCurrent: this.updateViewCurrent,
          onUpdateModelQuickSearch: this.updateModelQuickSearch,
          onToggleMultipleActionsActive: this.toggleMultipleActionsActive,
          onToggleBtnAllRows: this.toggleBtnAllRows
        }, this.$slots),
        this.$slots.topPanelAppend ? this.$slots.topPanelAppend() : "",
        this.isViewTableVisible && c("div", {
          ref: "tableRef",
          "aria-labelledby": this.isLabelVisible ? this.tableLabelId : void 0,
          class: [
            "a_table",
            {
              a_table_simple: this.isSimpleTable,
              a_table_bordered: this.borderType === "bordered",
              a_table_inner_bordered: this.borderType === "innerBordered"
            }
          ],
          ...this.tableRoleAttributes
        }, [
          this.isSimpleTable ? c(RV, {
            areAllRowsSelected: this.areAllRowsSelected,
            areAllVisibleRowsSelected: this.areAllVisibleRowsSelected,
            areSomeRowsSelected: this.areSomeRowsSelected,
            disabledOptions: this.disabledOptions,
            disabledSort: this.disabledSort,
            hasMultipleActions: this.hasMultipleActions,
            isRowActionsStickyLocal: this.isRowActionsStickyLocal,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSortLocal,
            rowsLocalLength: this.rowsLocalLength,
            showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
            sortingSequenceNumberClass: this.sortingSequenceNumberClass,
            onSetSelectedRowsIndexes: this.setSelectedRowsIndexes,
            columnsForRender: this.renderedGroupedColumns
          }) : c(wV, {
            areAllRowsSelected: this.areAllRowsSelected,
            areAllVisibleRowsSelected: this.areAllVisibleRowsSelected,
            areSomeRowsSelected: this.areSomeRowsSelected,
            disabledOptions: this.disabledOptions,
            disabledSort: this.disabledSort,
            hasMultipleActions: this.hasMultipleActions,
            isRowActionsStickyLocal: this.isRowActionsStickyLocal,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSortLocal,
            rowsLocalLength: this.rowsLocalLength,
            showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
            sortingSequenceNumberClass: this.sortingSequenceNumberClass,
            onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
          }),
          c("div", {
            class: "a_table__loading"
          }, [
            c(Um, {
              isLoading: this.isLoadingTable
            }, () => [
              c("div", {
                class: "a_table__body",
                role: this.tableChildRole
              }, {
                default: () => this.rowsLocal.map((e, t) => {
                  const n = su({ row: e, rowIndex: t, keyId: this.keyId });
                  return c(up, {
                    key: n,
                    allVisibleMobileColumns: this.allVisibleMobileColumns,
                    areAllRowsSelected: this.areAllRowsSelected,
                    columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
                    columnActionsView: this.columnActionsView,
                    countVisibleMobileColumns: this.countVisibleMobileColumns,
                    disabledPreview: this.disabledPreview,
                    disabledPreviewRowCallback: this.disabledPreviewRowCallback,
                    disabledRowActions: this.disabledRowActions,
                    isFooter: !1,
                    isPreviewDownOpen: this.previewDownRowIds[n],
                    isRowActionsStickyLocal: this.isRowActionsStickyLocal,
                    isTree: this.isTree,
                    isTreeCollapsible: this.isTreeCollapsible,
                    isTreeOpened: this.isTreeOpened,
                    keyChildren: this.keyChildren,
                    keyId: this.keyId,
                    level: 1,
                    row: e,
                    rowActionsClass: this.rowActionsClass,
                    rowClass: this.rowClass,
                    rowIndex: t,
                    rowsLength: this.rowsLocal.length,
                    selectedRowsIndexes: this.selectedRowsIndexes,
                    onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
                  }, {
                    get: (r) => [
                      c(Gd, {
                        data: r.row,
                        keyLabel: r.column.keyLabel,
                        filter: r.column.filter,
                        filterParameters: r.column.filterParameters,
                        defaultValue: r.column.defaultValue,
                        tag: r.column.filterTag || "div"
                      })
                    ],
                    ...this.$slots
                  });
                })
              }),
              this.isViewTableVisible && !this.hasRows && c(Ae, {
                class: "a_table__empty_text",
                text: this.emptyText
              }),
              this.hasRowsFooter && c("div", {
                class: "a_table__footer",
                role: this.tableChildRole
              }, this.rowsFooter.map((e, t) => {
                const n = su({ row: e, rowIndex: t, keyId: this.keyId });
                return c(up, {
                  key: n,
                  allVisibleMobileColumns: this.allVisibleMobileColumns,
                  areAllRowsSelected: this.areAllRowsSelected,
                  columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
                  columnActionsView: this.columnActionsView,
                  countVisibleMobileColumns: this.countVisibleMobileColumns,
                  disabledPreview: this.disabledPreview,
                  disabledPreviewRowCallback: this.disabledPreviewRowCallback,
                  disabledRowActions: this.disabledRowActions,
                  isFooter: !0,
                  isRowActionsStickyLocal: this.isRowActionsStickyLocal,
                  isTree: this.isTree,
                  isTreeCollapsible: this.isTreeCollapsible,
                  isTreeOpened: this.isTreeOpened,
                  keyChildren: this.keyChildren,
                  keyId: this.keyId,
                  level: 1,
                  row: e,
                  rowActionsClass: this.rowActionsClass,
                  rowClass: this.rowClass,
                  rowIndex: t,
                  rowsLength: this.rowsFooter.length,
                  selectedRowsIndexes: this.selectedRowsIndexes,
                  onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
                }, {
                  get: (r) => [
                    c(Gd, {
                      data: r.row,
                      keyLabel: r.column.footerPath,
                      filter: r.column.footerFilter,
                      filterParameters: r.column.footerFilterParameters,
                      defaultValue: r.column.footerDefaultValue
                    })
                  ],
                  ...this.$slots
                });
              }))
            ])
          ])
        ]),
        !this.isViewTableVisible && this.viewCurrent && this.$slots[this.viewCurrent.type] && this.$slots[this.viewCurrent.type]({
          isLoading: this.isLoadingTable,
          rows: this.rowsLocalAll
        }),
        this.usePaginationLocal && c(FH, {
          countAllRows: this.countAllRowsLocal,
          disabled: this.pagination.disabled,
          hasRows: this.hasRows,
          limit: this.limit,
          limitsPerPage: this.pagination.limitsPerPage,
          maxPages: this.pagination.maxPages,
          offset: this.offset,
          rowsLength: this.rowsLocalLength,
          totalRowsCount: this.totalRowsCount,
          "onUpdate:limit": this.changeLimit,
          "onUpdate:offset": this.changeOffset
        }),
        this.isPreviewRightOpen && c(kV, {
          countAllRows: this.countAllRowsLocal,
          isMobile: this.isMobile,
          isLoadingTable: this.isLoadingTable,
          limitPagination: this.limit,
          offsetPagination: this.offset,
          previewStyles: this.previewStyles,
          rowIndex: this.previewRightRowIndex,
          rows: this.rowsLocalAll,
          disabledPreviewRowCallback: this.disabledPreviewRowCallback,
          usePagination: !!this.usePaginationLocal,
          onClosePreview: this.closePreview,
          onMousedownResizePreviewRight: this.mousedownResizePreviewRight,
          onMousemoveResizePreviewRight: this.mousemoveResizePreviewRight,
          onMouseupResizePreviewRight: this.mouseupResizePreviewRight,
          onTogglePreview: this.onTogglePreview,
          onTogglePreviewResize: this.togglePreviewResize,
          "onUpdate:offset": this.changeOffset
        }, this.$slots)
      ])
    ]);
  }
};
function cS(e) {
  const t = d(e, "activeTabIdLocal"), n = d(e, "index"), r = d(e, "keyId"), s = d(e, "parentId"), l = d(e, "tab"), o = _(() => r.value ? fe(l.value, r.value) : n.value), u = _(() => t.value === o.value), h = _(() => `${s.value}_${n.value}`);
  return {
    idForContent: _(() => `${h.value}_content`),
    idLocal: h,
    isActive: u,
    tabIdLocal: o
  };
}
function FW(e) {
  const t = d(e, "tab"), n = d(e, "keyContent");
  return {
    contentLocal: _(() => {
      if (n.value)
        return fe(t.value, n.value);
    })
  };
}
const MW = {
  name: "ATabsContent",
  props: {
    activeTabIdLocal: {
      type: [String, Number],
      required: !0
    },
    index: {
      type: Number,
      required: !0
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    parentId: {
      type: String,
      required: !0
    },
    tab: {
      type: Object,
      required: !0
    }
  },
  setup(e) {
    const {
      idForContent: t,
      idLocal: n,
      isActive: r,
      tabIdLocal: s
    } = cS(e), {
      contentLocal: l
    } = FW(e);
    return {
      contentLocal: l,
      idForContent: t,
      idLocal: n,
      isActive: r,
      tabIdLocal: s
    };
  },
  render() {
    let e = "";
    return this.tab.slotContent && this.$slots[this.tab.slotContent] ? e = this.$slots[this.tab.slotContent]({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.$slots.content ? e = this.$slots.content({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.contentLocal && (e = c(Ae, {
      html: this.contentLocal
    })), c("div", {
      id: this.idForContent,
      "aria-labelledby": this.idLocal,
      class: [
        "a_tabs__content",
        {
          a_tabs__content_show: this.isActive
        }
      ],
      role: "tabpanel"
    }, [
      e
    ]);
  }
};
function qW({
  isDisabled: e = _(() => !1)
}) {
  return {
    tabindexLocal: _(() => e.value ? -1 : 0)
  };
}
function $W(e, { emit: t }, {
  isDisabled: n = _(() => !1),
  tabIdLocal: r = _(() => "")
}) {
  const s = d(e, "index"), l = d(e, "tab"), o = (h) => {
    n.value || t("changeTab", { $event: h, tab: l.value, tabId: r.value, index: s.value });
  };
  return {
    changeTabLocal: o,
    keydownTab: (h) => {
      (h.keyCode === X.enter || h.keyCode === X.space) && (o(h), h.stopPropagation(), h.preventDefault());
    }
  };
}
function kW(e) {
  const t = d(e, "disabled"), n = d(e, "keyDisabled"), r = d(e, "tab");
  return {
    isDisabled: _(() => {
      if (t.value || n.value && fe(r.value, n.value) === !0)
        return !0;
    })
  };
}
function UW(e) {
  const t = d(e, "tab"), n = d(e, "keyLabel");
  return {
    labelLocal: _(() => {
      if (n.value)
        return fe(t.value, n.value);
    })
  };
}
function HW(e) {
  const t = d(e, "tab"), n = d(e, "keyTitle");
  return {
    titleLocal: _(() => {
      if (n.value)
        return fe(t.value, n.value);
    })
  };
}
const VW = {
  name: "ATabsTab",
  props: {
    activeTabIdLocal: {
      type: [String, Number],
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    index: {
      type: Number,
      required: !0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyTitle: {
      type: String,
      required: !1,
      default: "title"
    },
    parentId: {
      type: String,
      required: !0
    },
    tab: {
      type: Object,
      required: !0
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => gr.indexOf(e) !== -1
    }
  },
  emits: [
    "changeTab"
  ],
  setup(e, t) {
    const {
      idForContent: n,
      idLocal: r,
      isActive: s,
      tabIdLocal: l
    } = cS(e), {
      isDisabled: o
    } = kW(e), {
      tabindexLocal: u
    } = qW({
      isDisabled: o
    }), {
      changeTabLocal: h,
      keydownTab: A
    } = $W(e, t, {
      isDisabled: o,
      tabIdLocal: l
    }), {
      labelLocal: E
    } = UW(e), {
      titleLocal: p
    } = HW(e);
    return {
      changeTabLocal: h,
      idForContent: n,
      idLocal: r,
      isActive: s,
      isDisabled: o,
      keydownTab: A,
      labelLocal: E,
      tabindexLocal: u,
      tabIdLocal: l,
      titleLocal: p
    };
  },
  render() {
    let e = "";
    return this.tab.slotTab && this.$slots[this.tab.slotTab] ? e = this.$slots[this.tab.slotTab]({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.$slots.tab ? e = this.$slots.tab({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.labelLocal && (e = c(Ae, {
      html: this.labelLocal,
      tag: "span"
    })), c("li", {
      class: [
        "a_tabs__list__item",
        this.tab.classLi
      ]
    }, [
      c(me, {
        id: this.idLocal,
        "aria-controls": this.idForContent,
        ariaDisabled: this.isDisabled,
        ariaSelected: this.isActive,
        class: [
          "a_tabs__list__link",
          this.tab.class,
          {
            a_tabs__list__link_active: this.isActive,
            a_tabs__list__link_disabled: this.isDisabled
          }
        ],
        classDefault: "",
        isTitleHtml: this.isTitleHtml,
        role: "tab",
        tabindex: this.tabindexLocal,
        tag: "a",
        titlePlacement: this.titlePlacement,
        type: "button",
        title: this.titleLocal,
        onClick: this.changeTabLocal,
        onKeydown: this.keydownTab
      }, () => [
        e
      ])
    ]);
  }
};
function WW(e, { emit: t }) {
  const n = d(e, "activeTabId"), r = d(e, "data"), s = d(e, "isChangeOutside"), l = d(e, "keyActive"), o = d(e, "keyId"), u = B(void 0), h = () => {
    ie(n.value) || (u.value = n.value);
  };
  return {
    activeTabIdLocal: u,
    changeTab: ({ $event: p, tab: T, tabId: S, index: b }) => {
      u.value !== S && (s.value || (u.value = S), t("change", { $event: p, tab: T, tabId: S, index: b }));
    },
    initActiveTabIdLocal: () => {
      h(), ie(u.value) && (l.value && (z(r.value, (p, T) => {
        if (fe(p, l.value))
          return o.value ? u.value = fe(p, o.value) || T : u.value = T, !1;
      }), !ie(u.value)) || (o.value ? u.value = fe(r.value, `[0].${o.value}`) || 0 : u.value = 0));
    },
    setActiveTabIdLocal: h
  };
}
const xde = {
  name: "ATabs",
  props: {
    activeTabId: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_tabs_")
    },
    isBoxed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isChangeOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isVertical: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyActive: {
      type: String,
      required: !1,
      default: "active"
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyTitle: {
      type: String,
      required: !1,
      default: "title"
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => gr.indexOf(e) !== -1
    }
  },
  emits: [
    "change"
  ],
  setup(e, t) {
    const n = d(e, "activeTabId"), {
      activeTabIdLocal: r,
      changeTab: s,
      initActiveTabIdLocal: l,
      setActiveTabIdLocal: o
    } = WW(e, t);
    return l(), rt(n, () => {
      o();
    }), {
      activeTabIdLocal: r,
      changeTab: s
    };
  },
  render() {
    return c("div", {
      id: this.id,
      class: ["a_tabs", {
        a_tabs_boxed: this.isBoxed,
        a_tabs_vertical: this.isVertical
      }]
    }, [
      c("div", {
        class: "a_tabs__box"
      }, [
        c("ul", {
          class: "a_tabs__list",
          role: "tablist"
        }, [
          this.data.map((e, t) => c(VW, {
            key: t,
            activeTabIdLocal: this.activeTabIdLocal,
            disabled: this.disabled,
            index: t,
            isTitleHtml: this.isTitleHtml,
            keyDisabled: this.keyDisabled,
            keyId: this.keyId,
            keyLabel: this.keyLabel,
            keyTitle: this.keyTitle,
            parentId: this.id,
            tab: e,
            titlePlacement: this.titlePlacement,
            onChangeTab: this.changeTab
          }, this.$slots))
        ])
      ]),
      c("div", {
        class: "a_tabs__contents"
      }, [
        this.data.map((e, t) => c(MW, {
          key: t,
          activeTabIdLocal: this.activeTabIdLocal,
          index: t,
          keyContent: this.keyContent,
          keyId: this.keyId,
          parentId: this.id,
          tab: e
        }, this.$slots))
      ])
    ]);
  }
};
function Dl(e) {
  const t = d(e, "disabled");
  return {
    disabledAttribut: _(() => {
      if (t.value === !0)
        return !0;
    })
  };
}
function qu(e, {
  isModel: t = _(() => !0)
} = {}) {
  const n = d(e, "isClearButton");
  return {
    isClearButtonLocal: _(() => !!(n.value && t.value))
  };
}
function of({
  inputRef: e = B(void 0)
}) {
  const t = B(void 0), n = () => {
    t.value = !0;
  }, r = () => {
    t.value = !1;
  }, s = (l) => {
    switch (l.animationName) {
      case "onAutoFillStart":
        return n();
      case "onAutoFillCancel":
        return r();
    }
  };
  return Vr(() => {
    e.value && e.value.addEventListener("animationstart", s);
  }), Ot(() => {
    e.value && e.value.removeEventListener && e.value.removeEventListener("animationstart", s);
  }), {
    isAutofill: t
  };
}
function uf({
  htmlIdLocal: e = _(() => ""),
  clickLabel: t = () => {
  }
}) {
  const n = _(() => vm(e.value)), r = () => {
    t();
  };
  return {
    destroyEventBusClickLabel: () => {
      Rt.$off(n.value, r);
    },
    initEventBusClickLabel: () => {
      Rt.$on(n.value, r);
    }
  };
}
const ai = B({
  propsDefault: {},
  config: {
    isHtmlTitleSort: !1,
    headerTopGroups: [
      {
        props: {},
        children: [
          {
            component: "filterMain",
            props: {}
          },
          {
            component: "buttonSearch",
            props: {}
          },
          {
            component: "buttonToggle",
            props: {}
          }
        ]
      },
      {
        props: {},
        children: [
          {
            component: "selectFiltersSaved",
            props: {}
          },
          {
            component: "buttonSaveTop",
            props: {}
          },
          {
            component: "buttonDeleteFiltersSaved",
            props: {}
          }
        ]
      }
    ],
    headerBottomGroups: [
      {
        props: {},
        children: [
          {
            component: "addFilterSelect",
            props: {}
          },
          {
            component: "buttonSearch",
            props: {}
          }
        ]
      }
    ]
  }
});
_(() => {
  const e = {};
  return z(ai.value.config.headerTopGroups, (t) => {
    z(t.children, (n) => {
      e[n.component] = n.props;
    });
  }), z(ai.value.config.headerBottomGroups, (t) => {
    z(t.children, (n) => {
      e[n.component] = n.props;
    });
  }), e;
});
const Fde = {
  install: (e, {
    propsDefault: t = {},
    config: n = {}
  } = {}) => {
    ai.value.propsDefault = {
      ...ai.value.propsDefault,
      ...t
    }, ai.value.config = {
      ...ai.value.config,
      ...n
    };
  }
}, Mde = {
  install: (e, { axiosCreateOptions: t = {}, baseUrl: n = "/api/", errorCallbacks: r = {}, headerParams: s = {}, setUrlForArray: l = void 0 } = {}) => {
    UM({ axiosCreateOptions: t }), HM({ baseUrl: n }), VM({ errorCallbacks: r }), WM({ headerParams: s }), qe(l) && (pm.value.setUrlForArray = l);
  }
}, nn = {
  propsDefault: {
    controlsType: "none",
    currencySymbol: "€",
    currencySymbolPosition: "right",
    decimalDivider: ",",
    decimalPartLength: 2,
    iconPrepend: void 0,
    inputWidth: 200,
    isLabelFloat: !1,
    max: void 0,
    min: void 0,
    modelUndefined: void 0,
    placeholder: void 0,
    step: 1,
    thousandDivider: "."
  }
}, qde = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    nn.propsDefault = {
      ...nn.propsDefault,
      ...t
    };
  }
}, fn = {
  propsDefault: {
    controlsType: "plus-minus",
    eAllowed: !1,
    iconPrepend: void 0,
    inputWidth: 200,
    isLabelFloat: !1,
    max: void 0,
    min: void 0,
    modelUndefined: void 0,
    placeholder: void 0,
    precision: void 0,
    step: 1,
    stepStrictly: void 0,
    type: "number"
  }
}, $de = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    fn.propsDefault = {
      ...fn.propsDefault,
      ...t
    };
  }
}, kde = {
  install: (e, t) => {
    e.provide("$aloha", t);
  }
}, Ude = {
  install: (e, {
    breakpoint: t
  } = {}) => {
    Bo(window.innerWidth <= t);
    const n = () => {
      window.innerWidth > t ? jo.value && Bo(!1) : jo.value || Bo(!0);
    };
    window.addEventListener("resize", n);
  }
}, Hde = {
  install: (e, t = "") => {
    IH(t);
  }
}, zt = {
  propsDefault: {
    classColumn: "a_column a_column_12",
    classColumns: "a_columns a_columns_count_12 a_columns_gap_y_1",
    helpTextParam: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_",
    helpTextRoute: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_",
    helpTextQuery: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_",
    helpTextTarget: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_",
    keyIdRoute: "name",
    keyLabelRoute: "path",
    labelParam: "_A_ROUTER_LINK_CONFIG_LABEL_PARAM_",
    labelQuery: "_A_ROUTER_LINK_CONFIG_LABEL_QUERY_",
    labelRoute: "_A_ROUTER_LINK_CONFIG_LABEL_ROUTE_",
    labelTarget: "_A_ROUTER_LINK_CONFIG_LABEL_TARGET_",
    routes: [],
    sortOrderRoute: "asc",
    targets: [
      {
        id: "_blank",
        label: "_A_TARGET_BLANK_"
      },
      {
        id: "_self",
        label: "_A_TARGET_SELF_"
      },
      {
        id: "_parent",
        label: "_A_TARGET_PARENT_"
      },
      {
        id: "_top",
        label: "_A_TARGET_TOP_"
      }
    ]
  }
};
function GW({ routes: e = [], excludedPathRoutes: t = [] }) {
  const n = [], r = {};
  return t.length && z(t, (s) => {
    r[s] = !0;
  }), z(e, (s) => {
    const l = s.path;
    s.name && !r[l] && n.push({
      path: s.path,
      name: s.name,
      meta: s.meta
    });
  }), n;
}
const Vde = {
  install: (e, {
    propsDefault: t = {},
    excludedPathRoutes: n = []
  } = {}) => {
    zt.propsDefault = {
      ...zt.propsDefault,
      ...t,
      routes: GW({ routes: t.routes, excludedPathRoutes: n })
    };
  }
};
function fS(e, t, n) {
  function r(o) {
    return o.toString(16);
  }
  function s(o) {
    return parseInt(o, 16);
  }
  e = e.replace(/#/g, ""), t = t.replace(/#/g, ""), n = typeof n < "u" ? n : 50;
  let l = "#";
  for (let o = 0; o <= 5; o += 2) {
    const u = s(e.substr(o, 2)), h = s(t.substr(o, 2));
    let A = r(Math.round(h + (u - h) * (n / 100)));
    for (; A.length < 2; )
      A = "0" + A;
    l += A;
  }
  return l;
}
function Wde(e, t) {
  return fS("#ffffff", e, t);
}
function Gde(e, t) {
  return fS("#000000", e, t);
}
function pd(e) {
  const t = e.toString(16);
  return t.length === 1 ? `0${t}` : t;
}
function Kde(e, t, n) {
  return `#${pd(e)}${pd(t)}${pd(n)}`;
}
function jde(e, t = !1) {
  const n = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
  if (!n)
    return null;
  const r = parseInt(n[1], 16), s = parseInt(n[2], 16), l = parseInt(n[3], 16);
  return t ? `${r}, ${s}, ${l}` : {
    r,
    g: s,
    b: l
  };
}
const KW = "[لا توجد عناصر متاحة للاختيار]", jW = "بحث", zW = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: KW,
  _A_CHECKBOX_SEARCH_: jW
}, YW = "[Keine Elemente zur Auswahl verfügbar]", XW = "Suche", ZW = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: YW,
  _A_CHECKBOX_SEARCH_: XW
}, JW = "[No items available for selection]", QW = "Search", e2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: JW,
  _A_CHECKBOX_SEARCH_: QW
}, t2 = "[No hay elementos disponibles para seleccionar]", n2 = "Buscar", r2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: t2,
  _A_CHECKBOX_SEARCH_: n2
}, a2 = "[Aucun élément disponible pour la sélection]", s2 = "Recherche", i2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: a2,
  _A_CHECKBOX_SEARCH_: s2
}, l2 = "[Nema dostupnih elemenata za odabir]", o2 = "Pretraživanje", u2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: l2,
  _A_CHECKBOX_SEARCH_: o2
}, _2 = "[Nessun elemento disponibile per la selezione]", d2 = "Cerca", c2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: _2,
  _A_CHECKBOX_SEARCH_: d2
}, f2 = "[Нет элементов для выбора]", h2 = "Поиск", A2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: f2,
  _A_CHECKBOX_SEARCH_: h2
}, qa = {
  ar: zW,
  de: ZW,
  en: e2,
  es: r2,
  fr: i2,
  hr: u2,
  it: c2,
  ru: A2
}, E2 = "تحميل", p2 = {
  _A_CLOAK_LOADING_: E2
}, T2 = "Wird geladen", m2 = {
  _A_CLOAK_LOADING_: T2
}, S2 = "Loading", b2 = {
  _A_CLOAK_LOADING_: S2
}, L2 = "Cargando", I2 = {
  _A_CLOAK_LOADING_: L2
}, v2 = "Chargement", y2 = {
  _A_CLOAK_LOADING_: v2
}, g2 = "Učitavam", R2 = {
  _A_CLOAK_LOADING_: g2
}, O2 = "Caricamento", C2 = {
  _A_CLOAK_LOADING_: O2
}, N2 = "Загрузка", D2 = {
  _A_CLOAK_LOADING_: N2
}, $a = {
  ar: p2,
  de: m2,
  en: b2,
  es: I2,
  fr: y2,
  hr: R2,
  it: C2,
  ru: D2
}, B2 = "من", w2 = "إلى", P2 = {
  _A_DATEPICKER_RANGE_FROM_: B2,
  _A_DATEPICKER_RANGE_UNTIL_: w2
}, x2 = "von", F2 = "bis", M2 = {
  _A_DATEPICKER_RANGE_FROM_: x2,
  _A_DATEPICKER_RANGE_UNTIL_: F2
}, q2 = "from", $2 = "until", k2 = {
  _A_DATEPICKER_RANGE_FROM_: q2,
  _A_DATEPICKER_RANGE_UNTIL_: $2
}, U2 = "desde", H2 = "hasta", V2 = {
  _A_DATEPICKER_RANGE_FROM_: U2,
  _A_DATEPICKER_RANGE_UNTIL_: H2
}, W2 = "de", G2 = "à", K2 = {
  _A_DATEPICKER_RANGE_FROM_: W2,
  _A_DATEPICKER_RANGE_UNTIL_: G2
}, j2 = "od", z2 = "do", Y2 = {
  _A_DATEPICKER_RANGE_FROM_: j2,
  _A_DATEPICKER_RANGE_UNTIL_: z2
}, X2 = "da", Z2 = "a", J2 = {
  _A_DATEPICKER_RANGE_FROM_: X2,
  _A_DATEPICKER_RANGE_UNTIL_: Z2
}, Q2 = "с", e5 = "по", t5 = {
  _A_DATEPICKER_RANGE_FROM_: Q2,
  _A_DATEPICKER_RANGE_UNTIL_: e5
}, ka = {
  ar: P2,
  de: M2,
  en: k2,
  es: V2,
  fr: K2,
  hr: Y2,
  it: J2,
  ru: t5
}, n5 = "إظهار أقل", r5 = "أظهر المزيد", a5 = {
  _A_DISCLOSURE_LESS_: n5,
  _A_DISCLOSURE_MORE_: r5
}, s5 = "Mehr anzeigen", i5 = "Weniger anzeigen", l5 = {
  _A_DISCLOSURE_MORE_: s5,
  _A_DISCLOSURE_LESS_: i5
}, o5 = "Show less", u5 = "Show more", _5 = {
  _A_DISCLOSURE_LESS_: o5,
  _A_DISCLOSURE_MORE_: u5
}, d5 = "Mostrar menos", c5 = "Mostrar más", f5 = {
  _A_DISCLOSURE_LESS_: d5,
  _A_DISCLOSURE_MORE_: c5
}, h5 = "Afficher moins", A5 = "Afficher plus", E5 = {
  _A_DISCLOSURE_LESS_: h5,
  _A_DISCLOSURE_MORE_: A5
}, p5 = "Prikaži manje", T5 = "Prikaži više", m5 = {
  _A_DISCLOSURE_LESS_: p5,
  _A_DISCLOSURE_MORE_: T5
}, S5 = "Mostra meno", b5 = "Mostra di più", L5 = {
  _A_DISCLOSURE_LESS_: S5,
  _A_DISCLOSURE_MORE_: b5
}, I5 = "Показать меньше", v5 = "Показать больше", y5 = {
  _A_DISCLOSURE_LESS_: I5,
  _A_DISCLOSURE_MORE_: v5
}, Ua = {
  ar: a5,
  de: l5,
  en: _5,
  es: f5,
  fr: E5,
  hr: m5,
  it: L5,
  ru: y5
}, g5 = "افتح", R5 = "اغلق", O5 = {
  _A_FIELDSET_COLLAPSE_OPEN_: g5,
  _A_FIELDSET_COLLAPSE_CLOSE_: R5
}, C5 = "Ausklappen", N5 = "Einklappen", D5 = {
  _A_FIELDSET_COLLAPSE_OPEN_: C5,
  _A_FIELDSET_COLLAPSE_CLOSE_: N5
}, B5 = "Open", w5 = "Close", P5 = {
  _A_FIELDSET_COLLAPSE_OPEN_: B5,
  _A_FIELDSET_COLLAPSE_CLOSE_: w5
}, x5 = "Abrir", F5 = "Cerrar", M5 = {
  _A_FIELDSET_COLLAPSE_OPEN_: x5,
  _A_FIELDSET_COLLAPSE_CLOSE_: F5
}, q5 = "Ouvrir", $5 = "Fermer", k5 = {
  _A_FIELDSET_COLLAPSE_OPEN_: q5,
  _A_FIELDSET_COLLAPSE_CLOSE_: $5
}, U5 = "Otvori", H5 = "Zatvori", V5 = {
  _A_FIELDSET_COLLAPSE_OPEN_: U5,
  _A_FIELDSET_COLLAPSE_CLOSE_: H5
}, W5 = "Apri", G5 = "Chiudi", K5 = {
  _A_FIELDSET_COLLAPSE_OPEN_: W5,
  _A_FIELDSET_COLLAPSE_CLOSE_: G5
}, j5 = "Открыть", z5 = "Закрыть", Y5 = {
  _A_FIELDSET_COLLAPSE_OPEN_: j5,
  _A_FIELDSET_COLLAPSE_CLOSE_: z5
}, Ha = {
  ar: O5,
  de: D5,
  en: P5,
  es: M5,
  fr: k5,
  hr: V5,
  it: K5,
  ru: Y5
}, X5 = "_A_FILTERS_ADD_FILTER_", Z5 = "إغلاق البحث المتقدم", J5 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", Q5 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", eG = "افتح البحث المتقدم", tG = "_A_FILTERS_SAVE_BTN_", nG = "_A_FILTERS_SAVE_LABEL_NAME_", rG = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", aG = "_A_FILTERS_SAVE_MODAL_HEADER_", sG = "_A_FILTERS_SAVE_MSG_ERROR_", iG = "_A_FILTERS_SAVE_SELECT_", lG = "ابدأ البحث", oG = "_A_FILTERS_TOP_CLOSE_", uG = {
  _A_FILTERS_ADD_FILTER_: X5,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: Z5,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: J5,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: Q5,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: eG,
  _A_FILTERS_SAVE_BTN_: tG,
  _A_FILTERS_SAVE_LABEL_NAME_: nG,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: rG,
  _A_FILTERS_SAVE_MODAL_HEADER_: aG,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: sG,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: iG,
  _A_FILTERS_START_SEARCH_: lG,
  _A_FILTERS_TOP_CLOSE_: oG
}, _G = "Neues Filterkriterium", dG = "Löschen", cG = "Ausgewählten Filter löschen", fG = "Ausgewählten Filter kann nicht gelöscht werden. (Gespeicherter Filter nicht ausgewählt)", hG = "Filter löschen", AG = "Zurücksetzen", EG = "Meine Filter", pG = "Schließen", TG = "Filter:", mG = "Neu", SG = "Filter speichern", bG = "Name", LG = "Bitte geben Sie einen Namen für den zu speichernden Filter ein. Bei Eingabe eines bestehenden Namens wird der bereits gespeicherte Filter aktualisiert. Bei Eingabe eines neuen Namens wird ein neuer Filter gespeichert.", IG = "Filter speichern", vG = "Filter konnte nicht gespeichert werden.", yG = "Gespeicherte Filter", gG = "Suchen", RG = "Filterkriterium entfernen", OG = {
  _A_FILTERS_ADD_FILTER_: _G,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "Sind Sie sicher, dass Sie diese gespeicherten Filter <strong>{{ name }}</strong> löschen wollen?",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: dG,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "Gespeicherten Filter löschen",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "Ausgewählter Filter <strong>{{ name }}</strong> konnte nicht entfernt werden.",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "Ausgewählter Filter <strong>{{ name }}</strong> wurde entfernt.",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_: cG,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: fG,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_: hG,
  _A_FILTERS_DESELECT_ALL_: AG,
  _A_FILTERS_FILTER_SAVED_GROUP_MY_: EG,
  _A_FILTERS_HOR_CLOSE_DROPDOWN_: pG,
  "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_": "Filterwert {{ filterValue }} für Filter löschen: {{ filterLabel }}",
  _A_FILTERS_HOR_FILTER_HEADER_: TG,
  _A_FILTERS_HOR_FILTER_NEW_: mG,
  "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_": "Filter öffnen: {{ filterLabel }} mit Wert {{ filterValue }}",
  _A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_: SG,
  _A_FILTERS_SAVE_LABEL_NAME_: bG,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: LG,
  _A_FILTERS_SAVE_MODAL_HEADER_: IG,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": 'Der Filter mit dem Namen <strong>"{{ name }}"</strong> wird beim Speichern aktualisiert.',
  _A_FILTERS_SAVE_MSG_ERROR_: vG,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": 'Neuer Filter <strong>"{{ name }}"</strong> ist gespeichert.',
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": 'Filter <strong>"{{ name }}"</strong> ist aktualisiert.',
  _A_FILTERS_SAVE_SELECT_: yG,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} ausgewählt",
  _A_FILTERS_START_SEARCH_: gG,
  _A_FILTERS_TOP_CLOSE_: RG
}, CG = "_A_FILTERS_ADD_FILTER_", NG = "Close advanced search", DG = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", BG = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", wG = "Reset selection", PG = "Open advanced search", xG = "_A_FILTERS_SAVE_BTN_", FG = "_A_FILTERS_SAVE_LABEL_NAME_", MG = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", qG = "_A_FILTERS_SAVE_MODAL_HEADER_", $G = "_A_FILTERS_SAVE_MSG_ERROR_", kG = "My saved searches", UG = "start search", HG = "_A_FILTERS_TOP_CLOSE_", VG = "Your selection", WG = {
  _A_FILTERS_ADD_FILTER_: CG,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: NG,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: DG,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: BG,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_DESELECT_ALL_: wG,
  "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_": "Clear filter value {{ filterValue }} for filter: {{ filterLabel }}",
  "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_": "Open filter: {{ filterLabel }} with value {{ filterValue }}",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: PG,
  _A_FILTERS_SAVE_BTN_: xG,
  _A_FILTERS_SAVE_LABEL_NAME_: FG,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: MG,
  _A_FILTERS_SAVE_MODAL_HEADER_: qG,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: $G,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: kG,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} selected",
  _A_FILTERS_START_SEARCH_: UG,
  _A_FILTERS_TOP_CLOSE_: HG,
  _A_FILTERS_YOUR_SELECTION_: VG
}, GG = "_A_FILTERS_ADD_FILTER_", KG = "Cerrar búsqueda avanzada", jG = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", zG = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", YG = "Abrir búsqueda avanzada", XG = "_A_FILTERS_SAVE_BTN_", ZG = "_A_FILTERS_SAVE_LABEL_NAME_", JG = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", QG = "_A_FILTERS_SAVE_MODAL_HEADER_", e3 = "_A_FILTERS_SAVE_MSG_ERROR_", t3 = "_A_FILTERS_SAVE_SELECT_", n3 = "iniciar busqueda", r3 = "_A_FILTERS_TOP_CLOSE_", a3 = {
  _A_FILTERS_ADD_FILTER_: GG,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: KG,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: jG,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: zG,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: YG,
  _A_FILTERS_SAVE_BTN_: XG,
  _A_FILTERS_SAVE_LABEL_NAME_: ZG,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: JG,
  _A_FILTERS_SAVE_MODAL_HEADER_: QG,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: e3,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: t3,
  _A_FILTERS_START_SEARCH_: n3,
  _A_FILTERS_TOP_CLOSE_: r3
}, s3 = "_A_FILTERS_ADD_FILTER_", i3 = "Fermer la recherche avancée", l3 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", o3 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", u3 = "Ouvrir la recherche avancée", _3 = "_A_FILTERS_SAVE_BTN_", d3 = "_A_FILTERS_SAVE_LABEL_NAME_", c3 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", f3 = "_A_FILTERS_SAVE_MODAL_HEADER_", h3 = "_A_FILTERS_SAVE_MSG_ERROR_", A3 = "_A_FILTERS_SAVE_SELECT_", E3 = "lancer la recherche", p3 = "_A_FILTERS_TOP_CLOSE_", T3 = {
  _A_FILTERS_ADD_FILTER_: s3,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: i3,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: l3,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: o3,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: u3,
  _A_FILTERS_SAVE_BTN_: _3,
  _A_FILTERS_SAVE_LABEL_NAME_: d3,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: c3,
  _A_FILTERS_SAVE_MODAL_HEADER_: f3,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: h3,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: A3,
  _A_FILTERS_START_SEARCH_: E3,
  _A_FILTERS_TOP_CLOSE_: p3
}, m3 = "_A_FILTERS_ADD_FILTER_", S3 = "Zatvorite napredno pretraživanje", b3 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", L3 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", I3 = "Otvorite napredno pretraživanje", v3 = "_A_FILTERS_SAVE_BTN_", y3 = "_A_FILTERS_SAVE_LABEL_NAME_", g3 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", R3 = "_A_FILTERS_SAVE_MODAL_HEADER_", O3 = "_A_FILTERS_SAVE_MSG_ERROR_", C3 = "_A_FILTERS_SAVE_SELECT_", N3 = "Započnite pretragu", D3 = "_A_FILTERS_TOP_CLOSE_", B3 = {
  _A_FILTERS_ADD_FILTER_: m3,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: S3,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: b3,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: L3,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: I3,
  _A_FILTERS_SAVE_BTN_: v3,
  _A_FILTERS_SAVE_LABEL_NAME_: y3,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: g3,
  _A_FILTERS_SAVE_MODAL_HEADER_: R3,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: O3,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: C3,
  _A_FILTERS_START_SEARCH_: N3,
  _A_FILTERS_TOP_CLOSE_: D3
}, w3 = "_A_FILTERS_ADD_FILTER_", P3 = "Chiudi la ricerca avanzata", x3 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", F3 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", M3 = "Apri la ricerca avanzata", q3 = "_A_FILTERS_SAVE_BTN_", $3 = "_A_FILTERS_SAVE_LABEL_NAME_", k3 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", U3 = "_A_FILTERS_SAVE_MODAL_HEADER_", H3 = "_A_FILTERS_SAVE_MSG_ERROR_", V3 = "_A_FILTERS_SAVE_SELECT_", W3 = "Inizia la ricerca", G3 = "_A_FILTERS_TOP_CLOSE_", K3 = {
  _A_FILTERS_ADD_FILTER_: w3,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: P3,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: x3,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: F3,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: M3,
  _A_FILTERS_SAVE_BTN_: q3,
  _A_FILTERS_SAVE_LABEL_NAME_: $3,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: k3,
  _A_FILTERS_SAVE_MODAL_HEADER_: U3,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: H3,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: V3,
  _A_FILTERS_START_SEARCH_: W3,
  _A_FILTERS_TOP_CLOSE_: G3
}, j3 = "Новое условие фильтра", z3 = "Удалить", Y3 = "Удалить выбранный фильтр", X3 = "Не удается удалить выбранный фильтр. (Сохраненный фильтр не выбран)", Z3 = "Удалить фильтр", J3 = "Сбросить", Q3 = "Мои фильтры", e4 = "Закрыть", t4 = "Фильтр:", n4 = "Новый", r4 = "Сохранить фильтр", a4 = "Имя", s4 = "Пожалуйста, введите имя для сохраняемого фильтра. При вводе существующего имени, уже сохраненный фильтр будет обновлен. При вводе нового имени, будет сохранен новый фильтр.", i4 = "Сохранить фильтр", l4 = "Не удалось сохранить фильтр.", o4 = "Сохраненные фильтры", u4 = "Поиск", _4 = "Удалить условие фильтра", d4 = {
  _A_FILTERS_ADD_FILTER_: j3,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "Вы уверены, что хотите удалить этот сохраненный фильтр <strong>{{ name }}</strong>?",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: z3,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "Удалить сохраненный фильтр",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "Не удалось удалить выбранный фильтр <strong>{{ name }}</strong>.",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "Выбранный фильтр <strong>{{ name }}</strong> был удален.",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_: Y3,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: X3,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_: Z3,
  _A_FILTERS_DESELECT_ALL_: J3,
  _A_FILTERS_FILTER_SAVED_GROUP_MY_: Q3,
  _A_FILTERS_HOR_CLOSE_DROPDOWN_: e4,
  _A_FILTERS_HOR_FILTER_HEADER_: t4,
  _A_FILTERS_HOR_FILTER_NEW_: n4,
  _A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_: r4,
  _A_FILTERS_SAVE_LABEL_NAME_: a4,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: s4,
  _A_FILTERS_SAVE_MODAL_HEADER_: i4,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": 'Фильтр с именем <strong>"{{ name }}"</strong> будет обновлен при сохранении.',
  _A_FILTERS_SAVE_MSG_ERROR_: l4,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": 'Новый фильтр <strong>"{{ name }}"</strong> был сохранен.',
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": 'Фильтр <strong>"{{ name }}"</strong> был обновлен.',
  _A_FILTERS_SAVE_SELECT_: o4,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} выбрано",
  _A_FILTERS_START_SEARCH_: u4,
  _A_FILTERS_TOP_CLOSE_: _4
}, Va = {
  ar: uG,
  de: OG,
  en: WG,
  es: a3,
  fr: T3,
  hr: B3,
  it: K3,
  ru: d4
}, c4 = "تقليل القيمة", f4 = "زيادة القيمة", h4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: c4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: f4
}, A4 = "Wert verringern", E4 = "Wert erhöhen", p4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: A4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: E4
}, T4 = "Decrease value", m4 = "Increase value", S4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: T4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: m4
}, b4 = "Disminuir valor", L4 = "Aumentar valor", I4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: b4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: L4
}, v4 = "Diminuer la valeur", y4 = "Augmenter la valeur", g4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: v4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: y4
}, R4 = "Smanji vrijednost", O4 = "Povećaj vrijednost", C4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: R4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: O4
}, N4 = "Diminuisci valore", D4 = "Aumenta valore", B4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: N4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: D4
}, w4 = "Уменьшить значение", P4 = "Увеличить значение", x4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: w4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: P4
}, Wa = {
  ar: h4,
  de: p4,
  en: S4,
  es: I4,
  fr: g4,
  hr: C4,
  it: B4,
  ru: x4
}, F4 = "عرض كلمة المرور", M4 = "إخفاء كلمة المرور", q4 = {
  _A_INPUT_SHOW_PASSWORD_: F4,
  _A_INPUT_HIDE_PASSWORD_: M4
}, $4 = "Passwort anzeigen", k4 = "Passwort verbergen", U4 = {
  _A_INPUT_SHOW_PASSWORD_: $4,
  _A_INPUT_HIDE_PASSWORD_: k4
}, H4 = "Show password", V4 = "Hide password", W4 = {
  _A_INPUT_SHOW_PASSWORD_: H4,
  _A_INPUT_HIDE_PASSWORD_: V4
}, G4 = "Mostrar contraseña", K4 = "Ocultar contraseña", j4 = {
  _A_INPUT_SHOW_PASSWORD_: G4,
  _A_INPUT_HIDE_PASSWORD_: K4
}, z4 = "Afficher le mot de passe", Y4 = "Masquer le mot de passe", X4 = {
  _A_INPUT_SHOW_PASSWORD_: z4,
  _A_INPUT_HIDE_PASSWORD_: Y4
}, Z4 = "Prikaži lozinku", J4 = "Sakrij lozinku", Q4 = {
  _A_INPUT_SHOW_PASSWORD_: Z4,
  _A_INPUT_HIDE_PASSWORD_: J4
}, e6 = "Mostra password", t6 = "Nascondi password", n6 = {
  _A_INPUT_SHOW_PASSWORD_: e6,
  _A_INPUT_HIDE_PASSWORD_: t6
}, r6 = "Показать пароль", a6 = "Скрыть пароль", s6 = {
  _A_INPUT_SHOW_PASSWORD_: r6,
  _A_INPUT_HIDE_PASSWORD_: a6
}, Ga = {
  ar: q4,
  de: U4,
  en: W4,
  es: j4,
  fr: X4,
  hr: Q4,
  it: n6,
  ru: s6
}, i6 = "تقليل القيمة", l6 = "زيادة القيمة", o6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: i6,
  _A_INPUT_NUMBER_BTN_INCREASE_: l6
}, u6 = "Wert verringern", _6 = "Wert erhöhen", d6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: u6,
  _A_INPUT_NUMBER_BTN_INCREASE_: _6
}, c6 = "Decrease value", f6 = "Increase value", h6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: c6,
  _A_INPUT_NUMBER_BTN_INCREASE_: f6
}, A6 = "Disminuir valor", E6 = "Aumentar valor", p6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: A6,
  _A_INPUT_NUMBER_BTN_INCREASE_: E6
}, T6 = "Diminuer la valeur", m6 = "Augmenter la valeur", S6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: T6,
  _A_INPUT_NUMBER_BTN_INCREASE_: m6
}, b6 = "Smanji vrijednost", L6 = "Povećaj vrijednost", I6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: b6,
  _A_INPUT_NUMBER_BTN_INCREASE_: L6
}, v6 = "Diminuisci valore", y6 = "Aumenta valore", g6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: v6,
  _A_INPUT_NUMBER_BTN_INCREASE_: y6
}, R6 = "Уменьшить значение", O6 = "Увеличить значение", C6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: R6,
  _A_INPUT_NUMBER_BTN_INCREASE_: O6
}, Ka = {
  ar: o6,
  de: d6,
  en: h6,
  es: p6,
  fr: S6,
  hr: I6,
  it: g6,
  ru: C6
}, N6 = "من", D6 = "إلى", B6 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: N6,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: D6
}, w6 = "von", P6 = "bis", x6 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: w6,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: P6
}, F6 = "from", M6 = "to", q6 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: F6,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: M6
}, $6 = "desde", k6 = "hasta", U6 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: $6,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: k6
}, H6 = "de", V6 = "à", W6 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: H6,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: V6
}, G6 = "od", K6 = "do", j6 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: G6,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: K6
}, z6 = "da", Y6 = "a", X6 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: z6,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: Y6
}, Z6 = "от", J6 = "до", Q6 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: Z6,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: J6
}, ja = {
  ar: B6,
  de: x6,
  en: q6,
  es: U6,
  fr: W6,
  hr: j6,
  it: X6,
  ru: Q6
}, e7 = "القيمة الحالية", t7 = "تجاهل جميع التغييرات", n7 = "تنسيق الإدخال", r7 = "إدخال", a7 = "إعادة تعيين الإدخال إلى القيمة الحالية", s7 = {
  _A_JSON_CURRENT_VALUE_: e7,
  _A_JSON_DISCARD_ALL_CHANGES_: t7,
  "_A_JSON_ERROR_HTML_{{error}}_": "لا يمكن تحويل الإدخال إلى كائن JSON. يرجى التحقق من الإدخال الخاص بك:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: n7,
  _A_JSON_INPUT_: r7,
  _A_JSON_RESET_INPUT_: a7
}, i7 = "Aktueller Wert", l7 = "Alle Änderungen verwerfen", o7 = "Eingabe formatieren", u7 = "Eingabe", _7 = "Eingabe aktuellen Wert zurücksetzen", d7 = {
  _A_JSON_CURRENT_VALUE_: i7,
  _A_JSON_DISCARD_ALL_CHANGES_: l7,
  "_A_JSON_ERROR_HTML_{{error}}_": "Die Eingabe kann nicht in ein JSON-Objekt konvertiert werden. Bitte prüfen Sie Ihre Eingabe:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: o7,
  _A_JSON_INPUT_: u7,
  _A_JSON_RESET_INPUT_: _7
}, c7 = "Current Value", f7 = "Discard All Changes", h7 = "Format Input", A7 = "Input", E7 = "Reset Input to Current Value", p7 = {
  _A_JSON_CURRENT_VALUE_: c7,
  _A_JSON_DISCARD_ALL_CHANGES_: f7,
  "_A_JSON_ERROR_HTML_{{error}}_": "Input cannot be converted into a JSON object. Please check your input:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: h7,
  _A_JSON_INPUT_: A7,
  _A_JSON_RESET_INPUT_: E7
}, T7 = "Valor actual", m7 = "Descartar todos los cambios", S7 = "Formatear entrada", b7 = "Entrada", L7 = "Restablecer entrada al valor actual", I7 = {
  _A_JSON_CURRENT_VALUE_: T7,
  _A_JSON_DISCARD_ALL_CHANGES_: m7,
  "_A_JSON_ERROR_HTML_{{error}}_": "No se puede convertir la entrada en un objeto JSON. Por favor, revise su entrada:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: S7,
  _A_JSON_INPUT_: b7,
  _A_JSON_RESET_INPUT_: L7
}, v7 = "Valeur actuelle", y7 = "Annuler toutes les modifications", g7 = "Formater l'entrée", R7 = "Entrée", O7 = "Réinitialiser l'entrée à la valeur actuelle", C7 = {
  _A_JSON_CURRENT_VALUE_: v7,
  _A_JSON_DISCARD_ALL_CHANGES_: y7,
  "_A_JSON_ERROR_HTML_{{error}}_": "L'entrée ne peut pas être convertie en objet JSON. Veuillez vérifier votre entrée:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: g7,
  _A_JSON_INPUT_: R7,
  _A_JSON_RESET_INPUT_: O7
}, N7 = "Trenutna vrijednost", D7 = "Odbaci sve promjene", B7 = "Formatiraj unos", w7 = "Unos", P7 = "Poništi unos na trenutnu vrijednost", x7 = {
  _A_JSON_CURRENT_VALUE_: N7,
  _A_JSON_DISCARD_ALL_CHANGES_: D7,
  "_A_JSON_ERROR_HTML_{{error}}_": "Unos se ne može pretvoriti u JSON objekt. Molimo provjerite svoj unos:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: B7,
  _A_JSON_INPUT_: w7,
  _A_JSON_RESET_INPUT_: P7
}, F7 = "Valore attuale", M7 = "Annulla tutte le modifiche", q7 = "Formatta input", $7 = "Input", k7 = "Reimposta input al valore corrente", U7 = {
  _A_JSON_CURRENT_VALUE_: F7,
  _A_JSON_DISCARD_ALL_CHANGES_: M7,
  "_A_JSON_ERROR_HTML_{{error}}_": "L'input non può essere convertito in un oggetto JSON. Si prega di controllare l'input:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: q7,
  _A_JSON_INPUT_: $7,
  _A_JSON_RESET_INPUT_: k7
}, H7 = "Текущее значение", V7 = "Отменить все изменения", W7 = "Форматировать ввод", G7 = "Ввод", K7 = "Сбросить ввод до текущего значения", j7 = {
  _A_JSON_CURRENT_VALUE_: H7,
  _A_JSON_DISCARD_ALL_CHANGES_: V7,
  "_A_JSON_ERROR_HTML_{{error}}_": "Ввод не может быть преобразован в объект JSON. Пожалуйста, проверьте ваш ввод:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: W7,
  _A_JSON_INPUT_: G7,
  _A_JSON_RESET_INPUT_: K7
}, za = {
  ar: s7,
  de: d7,
  en: p7,
  es: I7,
  fr: C7,
  hr: x7,
  it: U7,
  ru: j7
}, z7 = "نسخ إلى الحافظة", Y7 = "تم النسخ إلى الحافظة", X7 = {
  _A_LINK_COPY_BTN_TITLE_: z7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: Y7
}, Z7 = "In die Zwischenablage kopieren", J7 = "In die Zwischenablage kopiert", Q7 = {
  _A_LINK_COPY_BTN_TITLE_: Z7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: J7
}, e8 = "Copy to clipboard", t8 = "Copied to clipboard", n8 = {
  _A_LINK_COPY_BTN_TITLE_: e8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: t8
}, r8 = "Copiar al portapapeles", a8 = "Copiado al portapapeles", s8 = {
  _A_LINK_COPY_BTN_TITLE_: r8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: a8
}, i8 = "Copier dans le presse-papiers", l8 = "Copié dans le presse-papiers", o8 = {
  _A_LINK_COPY_BTN_TITLE_: i8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: l8
}, u8 = "Kopiraj u međuspremnik", _8 = "Kopirano u međuspremnik", d8 = {
  _A_LINK_COPY_BTN_TITLE_: u8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: _8
}, c8 = "Copia negli appunti", f8 = "Copiato negli appunti", h8 = {
  _A_LINK_COPY_BTN_TITLE_: c8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: f8
}, A8 = "Скопировать в буфер обмена", E8 = "Скопировано в буфер обмена", p8 = {
  _A_LINK_COPY_BTN_TITLE_: A8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: E8
}, Ya = {
  ar: X7,
  de: Q7,
  en: n8,
  es: s8,
  fr: o8,
  hr: d8,
  it: h8,
  ru: p8
}, T8 = "تحميل", m8 = {
  _A_LOADING_LOADING_: T8
}, S8 = "Wird geladen", b8 = {
  _A_LOADING_LOADING_: S8
}, L8 = "Loading", I8 = {
  _A_LOADING_LOADING_: L8
}, v8 = "Cargando", y8 = {
  _A_LOADING_LOADING_: v8
}, g8 = "Chargement", R8 = {
  _A_LOADING_LOADING_: g8
}, O8 = "Učitavam", C8 = {
  _A_LOADING_LOADING_: O8
}, N8 = "Caricamento", D8 = {
  _A_LOADING_LOADING_: N8
}, B8 = "Загрузка", w8 = {
  _A_LOADING_LOADING_: B8
}, Xa = {
  ar: m8,
  de: b8,
  en: I8,
  es: y8,
  fr: R8,
  hr: C8,
  it: D8,
  ru: w8
}, P8 = "Breadcrumb", x8 = "إظهار الروابط المخفية", F8 = "إغلاق القائمة", M8 = "فتح القائمة", q8 = "إغلاق القائمة الفرعية:", $8 = "القائمة الرئيسية", k8 = "فتح بحث القائمة", U8 = "فتح القائمة الفرعية:", H8 = "بحث القائمة", V8 = "لم يتم العثور على عناصر القائمة", W8 = "إلى القائمة الرئيسية", G8 = {
  _A_MENU_2_BREADCRUMB_: P8,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: x8,
  _A_MENU_2_BTN_CLOSE_: F8,
  _A_MENU_2_BTN_OPEN_: M8,
  _A_MENU_2_CLOSE_SUBMENU_: q8,
  _A_MENU_2_MAIN_MENU_: $8,
  _A_MENU_2_OPEN_SEARCH_: k8,
  _A_MENU_2_OPEN_SUBMENU_: U8,
  _A_MENU_2_SEARCH_: H8,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "تم العثور على {{ count }} من عناصر القائمة",
  _A_MENU_2_SEARCH_NONE_FOUND_: V8,
  _A_MENU_2_TO_MAIN_MENU_: W8
}, K8 = "Breadcrumb", j8 = "Versteckte Links", z8 = "Menü schließen", Y8 = "Menü öffnen", X8 = "Untermenü schließen:", Z8 = "Hauptmenü", J8 = "Öffnen Menüsuche", Q8 = "Untermenü öffnen:", eK = "Menüsuche", tK = "Keine Menüeinträge gefunden", nK = "Zum Hauptmenü", rK = {
  _A_MENU_2_BREADCRUMB_: K8,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: j8,
  _A_MENU_2_BTN_CLOSE_: z8,
  _A_MENU_2_BTN_OPEN_: Y8,
  _A_MENU_2_CLOSE_SUBMENU_: X8,
  _A_MENU_2_MAIN_MENU_: Z8,
  _A_MENU_2_OPEN_SEARCH_: J8,
  _A_MENU_2_OPEN_SUBMENU_: Q8,
  _A_MENU_2_SEARCH_: eK,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} Menüeinträge gefunden",
  _A_MENU_2_SEARCH_NONE_FOUND_: tK,
  _A_MENU_2_TO_MAIN_MENU_: nK
}, aK = "Breadcrumb", sK = "Show Hidden Links", iK = "Close Menu", lK = "Open Menu", oK = "Close Submenu:", uK = "Main Menu", _K = "Open Menu Search", dK = "Open Submenu:", cK = "Menu Search", fK = "No Menu Entries Found", hK = "To Main Menu", AK = {
  _A_MENU_2_BREADCRUMB_: aK,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: sK,
  _A_MENU_2_BTN_CLOSE_: iK,
  _A_MENU_2_BTN_OPEN_: lK,
  _A_MENU_2_CLOSE_SUBMENU_: oK,
  _A_MENU_2_MAIN_MENU_: uK,
  _A_MENU_2_OPEN_SEARCH_: _K,
  _A_MENU_2_OPEN_SUBMENU_: dK,
  _A_MENU_2_SEARCH_: cK,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} Menu Entries Found",
  _A_MENU_2_SEARCH_NONE_FOUND_: fK,
  _A_MENU_2_TO_MAIN_MENU_: hK
}, EK = "Breadcrumb", pK = "Mostrar enlaces ocultos", TK = "Cerrar menú", mK = "Abrir menú", SK = "Cerrar submenú:", bK = "Menú principal", LK = "Abrir búsqueda en menú", IK = "Abrir submenú:", vK = "Búsqueda en menú", yK = "No se encontraron entradas de menú", gK = "Al menú principal", RK = {
  _A_MENU_2_BREADCRUMB_: EK,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: pK,
  _A_MENU_2_BTN_CLOSE_: TK,
  _A_MENU_2_BTN_OPEN_: mK,
  _A_MENU_2_CLOSE_SUBMENU_: SK,
  _A_MENU_2_MAIN_MENU_: bK,
  _A_MENU_2_OPEN_SEARCH_: LK,
  _A_MENU_2_OPEN_SUBMENU_: IK,
  _A_MENU_2_SEARCH_: vK,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} entradas de menú encontradas",
  _A_MENU_2_SEARCH_NONE_FOUND_: yK,
  _A_MENU_2_TO_MAIN_MENU_: gK
}, OK = "Breadcrumb", CK = "Afficher les liens cachés", NK = "Fermer le menu", DK = "Ouvrir le menu", BK = "Fermer le sous-menu :", wK = "Menu principal", PK = "Ouvrir la recherche dans le menu", xK = "Ouvrir le sous-menu :", FK = "Recherche dans le menu", MK = "Aucune entrée de menu trouvée", qK = "Au menu principal", $K = {
  _A_MENU_2_BREADCRUMB_: OK,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: CK,
  _A_MENU_2_BTN_CLOSE_: NK,
  _A_MENU_2_BTN_OPEN_: DK,
  _A_MENU_2_CLOSE_SUBMENU_: BK,
  _A_MENU_2_MAIN_MENU_: wK,
  _A_MENU_2_OPEN_SEARCH_: PK,
  _A_MENU_2_OPEN_SUBMENU_: xK,
  _A_MENU_2_SEARCH_: FK,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} entrées de menu trouvées",
  _A_MENU_2_SEARCH_NONE_FOUND_: MK,
  _A_MENU_2_TO_MAIN_MENU_: qK
}, kK = "_A_MENU_2_BREADCRUMB_", UK = "_A_MENU_2_BREADCRUMB_SHOW_BTN_", HK = "Zatvaranje izbornika", VK = "Otvaranje izbornika", WK = "Glavni izbornik", GK = "Zatvaranje podizbornika", KK = "Otvaranje pretraživanja", jK = "Otvaranje podizbornika:", zK = "Pretraživanje izbornika", YK = "Nisu pronađeni rezultati pretraživanja", XK = "Natrag na glavni izbornik", ZK = {
  _A_MENU_2_BREADCRUMB_: kK,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: UK,
  _A_MENU_2_BTN_CLOSE_: HK,
  _A_MENU_2_BTN_OPEN_: VK,
  _A_MENU_2_MAIN_MENU_: WK,
  _A_MENU_2_CLOSE_SUBMENU_: GK,
  _A_MENU_2_OPEN_SEARCH_: KK,
  _A_MENU_2_OPEN_SUBMENU_: jK,
  _A_MENU_2_SEARCH_: zK,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "Broj pronađenih rezultata: {{ count }}",
  _A_MENU_2_SEARCH_NONE_FOUND_: YK,
  _A_MENU_2_TO_MAIN_MENU_: XK
}, JK = "Breadcrumb", QK = "Mostra link nascosti", ej = "Chiudi menu", tj = "Apri menu", nj = "Chiudi sottomenu:", rj = "Menu principale", aj = "Apri ricerca nel menu", sj = "Apri sottomenu:", ij = "Ricerca nel menu", lj = "Nessuna voce di menu trovata", oj = "Al menu principale", uj = {
  _A_MENU_2_BREADCRUMB_: JK,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: QK,
  _A_MENU_2_BTN_CLOSE_: ej,
  _A_MENU_2_BTN_OPEN_: tj,
  _A_MENU_2_CLOSE_SUBMENU_: nj,
  _A_MENU_2_MAIN_MENU_: rj,
  _A_MENU_2_OPEN_SEARCH_: aj,
  _A_MENU_2_OPEN_SUBMENU_: sj,
  _A_MENU_2_SEARCH_: ij,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} voci di menu trovate",
  _A_MENU_2_SEARCH_NONE_FOUND_: lj,
  _A_MENU_2_TO_MAIN_MENU_: oj
}, _j = "Breadcrumb", dj = "Скрытые ссылки", cj = "Закрыть меню", fj = "Открыть меню", hj = "Главное меню", Aj = "Закрыть подменю:", Ej = "Открыть поиск в меню", pj = "Открыть подменю:", Tj = "Поиск в меню", mj = "Пункты меню не найдены", Sj = "В главное меню", bj = {
  _A_MENU_2_BREADCRUMB_: _j,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: dj,
  _A_MENU_2_BTN_CLOSE_: cj,
  _A_MENU_2_BTN_OPEN_: fj,
  _A_MENU_2_MAIN_MENU_: hj,
  _A_MENU_2_CLOSE_SUBMENU_: Aj,
  _A_MENU_2_OPEN_SEARCH_: Ej,
  _A_MENU_2_OPEN_SUBMENU_: pj,
  _A_MENU_2_SEARCH_: Tj,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "Найдены пункты меню: {{ count }}",
  _A_MENU_2_SEARCH_NONE_FOUND_: mj,
  _A_MENU_2_TO_MAIN_MENU_: Sj
}, Za = {
  ar: G8,
  de: rK,
  en: AK,
  es: RK,
  fr: $K,
  hr: ZK,
  it: uj,
  ru: bj
}, Lj = "قطع", Ij = "حفظ", vj = "إغلاق النافذة المنبثقة (موجودة في الرأس)", yj = "إغلاق النافذة المنبثقة (موجودة في التذييل)", gj = "حفظ البيانات في النافذة المنبثقة", Rj = {
  _A_MODAL_BTN_CANCEL_: Lj,
  _A_MODAL_BTN_SAVE_: Ij,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: vj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: yj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: gj
}, Oj = "Abbrechen", Cj = "Speichern", Nj = "Modales Fenster schließen (im Header angeordnet)", Dj = "Modales Fenster schließen (im Footer angeordnet)", Bj = "Daten im modalen Fenster speichern", wj = {
  _A_MODAL_BTN_CANCEL_: Oj,
  _A_MODAL_BTN_SAVE_: Cj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: Nj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: Dj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: Bj
}, Pj = "cancel", xj = "save", Fj = "Close modal window (located in the header)", Mj = "Close modal window (located in the footer)", qj = "Save data in the modal window", $j = {
  _A_MODAL_BTN_CANCEL_: Pj,
  _A_MODAL_BTN_SAVE_: xj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: Fj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: Mj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: qj
}, kj = "Interrumpir", Uj = "Guardar", Hj = "Cerrar ventana modal (ubicada en el encabezado)", Vj = "Cerrar ventana modal (ubicada en el pie de página)", Wj = "Guardar los datos en la ventana modal", Gj = {
  _A_MODAL_BTN_CANCEL_: kj,
  _A_MODAL_BTN_SAVE_: Uj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: Hj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: Vj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: Wj
}, Kj = "Interrompre", jj = "Enregistrer", zj = "Fermer la fenêtre modale (située dans l'en-tête)", Yj = "Fermer la fenêtre modale (située dans le pied de page)", Xj = "Enregistrer les données dans la fenêtre modale", Zj = {
  _A_MODAL_BTN_CANCEL_: Kj,
  _A_MODAL_BTN_SAVE_: jj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: zj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: Yj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: Xj
}, Jj = "Odustani", Qj = "Spremi", e9 = "Zatvori modalni prozor (smještena u zaglavlju)", t9 = "Zatvori modalni prozor (smještena u podnožju)", n9 = "Spremi podatke u modalnom prozoru", r9 = {
  _A_MODAL_BTN_CANCEL_: Jj,
  _A_MODAL_BTN_SAVE_: Qj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: e9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: t9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: n9
}, a9 = "Interrompere", s9 = "Salva", i9 = "Chiudi finestra modale (situata nell'intestazione)", l9 = "Chiudi finestra modale (situata nel piè di pagina)", o9 = "Salva i dati nella finestra modale", u9 = {
  _A_MODAL_BTN_CANCEL_: a9,
  _A_MODAL_BTN_SAVE_: s9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: i9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: l9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: o9
}, _9 = "Прервать", d9 = "Сохранить", c9 = "Закрыть модальное окно (расположена в хедере)", f9 = "Закрыть модальное окно (расположена в футере)", h9 = "Сохранить данные в модальном окне", A9 = {
  _A_MODAL_BTN_CANCEL_: _9,
  _A_MODAL_BTN_SAVE_: d9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: c9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: f9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: h9
}, Ja = {
  ar: Rj,
  de: wj,
  en: $j,
  es: Gj,
  fr: Zj,
  hr: r9,
  it: u9,
  ru: A9
}, E9 = "[ALOHA]", p9 = "[ALOHA]", T9 = "[ALOHA]", m9 = "التنقل بين الصفحات", S9 = "[ALOHA]", b9 = "[ALOHA]", L9 = {
  _A_COUNT_PER_PAGE_: E9,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: p9,
  _A_PAGINATION_LAST_PAGE_: T9,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ allPages }}ل {{ currentPage }}",
  _A_PAGINATION_NAVIGATION_: m9,
  _A_PAGINATION_NEXT_PAGE_: S9,
  _A_PAGINATION_PREVIOUS_PAGE_: b9,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, I9 = "Pro Seite:", v9 = "Zur ersten Seite", y9 = "Zur letzten Seite", g9 = "Paginierungsnavigation", R9 = "Zur nächsten Seite", O9 = "Zur vorherigen Seite", C9 = {
  _A_COUNT_PER_PAGE_: I9,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Zeilen pro Seite: {{ count }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} von {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: v9,
  _A_PAGINATION_LAST_PAGE_: y9,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} von {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: g9,
  _A_PAGINATION_NEXT_PAGE_: R9,
  _A_PAGINATION_PREVIOUS_PAGE_: O9,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "Zur Seite Nummer {{ page }}"
}, N9 = "Per page:", D9 = "To first page", B9 = "To last page", w9 = "Pagination navigation", P9 = "To next page", x9 = "To previous page", F9 = {
  _A_COUNT_PER_PAGE_: N9,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Items per page:",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} to {{ current }} of {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: D9,
  _A_PAGINATION_LAST_PAGE_: B9,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} of {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: w9,
  _A_PAGINATION_NEXT_PAGE_: P9,
  _A_PAGINATION_PREVIOUS_PAGE_: x9,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "To page {{ page }}"
}, M9 = "[ALOHA]", q9 = "[ALOHA]", $9 = "[ALOHA]", k9 = "Navegación de paginación", U9 = "[ALOHA]", H9 = "[ALOHA]", V9 = {
  _A_COUNT_PER_PAGE_: M9,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: q9,
  _A_PAGINATION_LAST_PAGE_: $9,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} de {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: k9,
  _A_PAGINATION_NEXT_PAGE_: U9,
  _A_PAGINATION_PREVIOUS_PAGE_: H9,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, W9 = "[ALOHA]", G9 = "[ALOHA]", K9 = "[ALOHA]", j9 = "Navigation dans la pagination", z9 = "[ALOHA]", Y9 = "[ALOHA]", X9 = {
  _A_COUNT_PER_PAGE_: W9,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: G9,
  _A_PAGINATION_LAST_PAGE_: K9,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} de {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: j9,
  _A_PAGINATION_NEXT_PAGE_: z9,
  _A_PAGINATION_PREVIOUS_PAGE_: Y9,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, Z9 = "Po stranici:", J9 = "[ALOHA]", Q9 = "[ALOHA]", ez = "Navigacija po stranicama", tz = "[ALOHA]", nz = "[ALOHA]", rz = {
  _A_COUNT_PER_PAGE_: Z9,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Broj redaka po stranici: {{ count }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} od {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: J9,
  _A_PAGINATION_LAST_PAGE_: Q9,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} iz {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: ez,
  _A_PAGINATION_NEXT_PAGE_: tz,
  _A_PAGINATION_PREVIOUS_PAGE_: nz,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, az = "[ALOHA]", sz = "[ALOHA]", iz = "[ALOHA]", lz = "Navigazione dell'impaginazione", oz = "[ALOHA]", uz = "[ALOHA]", _z = {
  _A_COUNT_PER_PAGE_: az,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: sz,
  _A_PAGINATION_LAST_PAGE_: iz,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} Di {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: lz,
  _A_PAGINATION_NEXT_PAGE_: oz,
  _A_PAGINATION_PREVIOUS_PAGE_: uz,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, dz = "На странице:", cz = "К первой странице", fz = "К последней странице", hz = "Навигация по страницам", Az = "К следующей странице", Ez = "К предыдущей странице", pz = {
  _A_COUNT_PER_PAGE_: dz,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Строк на странице: {{ cont }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} из {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: cz,
  _A_PAGINATION_LAST_PAGE_: fz,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} из {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: hz,
  _A_PAGINATION_NEXT_PAGE_: Az,
  _A_PAGINATION_PREVIOUS_PAGE_: Ez,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "К странице номер {{ page }}"
}, Qa = {
  ar: L9,
  de: C9,
  en: F9,
  es: V9,
  fr: X9,
  hr: rz,
  it: _z,
  ru: pz
}, Tz = "[لا توجد عناصر متاحة للاختيار]", mz = "بحث", Sz = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: Tz,
  _A_RADIO_SEARCH_: mz
}, bz = "[Keine Elemente zur Auswahl verfügbar]", Lz = "Suche", Iz = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: bz,
  _A_RADIO_SEARCH_: Lz
}, vz = "[No items available for selection]", yz = "Search", gz = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: vz,
  _A_RADIO_SEARCH_: yz
}, Rz = "[No hay elementos disponibles para seleccionar]", Oz = "Buscar", Cz = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: Rz,
  _A_RADIO_SEARCH_: Oz
}, Nz = "[Aucun élément disponible pour la sélection]", Dz = "Recherche", Bz = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: Nz,
  _A_RADIO_SEARCH_: Dz
}, wz = "[Nema dostupnih elemenata za odabir]", Pz = "Pretraživanje", xz = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: wz,
  _A_RADIO_SEARCH_: Pz
}, Fz = "[Nessun elemento disponibile per la selezione]", Mz = "Cerca", qz = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: Fz,
  _A_RADIO_SEARCH_: Mz
}, $z = "[Нет элементов для выбора]", kz = "Поиск", Uz = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: $z,
  _A_RADIO_SEARCH_: kz
}, es = {
  ar: Sz,
  de: Iz,
  en: gz,
  es: Cz,
  fr: Bz,
  hr: xz,
  it: qz,
  ru: Uz
}, Hz = "الحقول المميزة بعلامة النجمة * مطلوبة.", Vz = {
  _A_REQUIRED_TEXT_: Hz
}, Wz = "Die mit *Sternchen versehenen Felder sind Pflichtfelder.", Gz = {
  _A_REQUIRED_TEXT_: Wz
}, Kz = "Fields marked with an asterisk * are required.", jz = {
  _A_REQUIRED_TEXT_: Kz
}, zz = "Los campos marcados con un asterisco * son obligatorios.", Yz = {
  _A_REQUIRED_TEXT_: zz
}, Xz = "Les champs marqués d'un astérisque * sont obligatoires.", Zz = {
  _A_REQUIRED_TEXT_: Xz
}, Jz = "Polja označena zvjezdicom * su obavezna.", Qz = {
  _A_REQUIRED_TEXT_: Jz
}, eY = "I campi contrassegnati con un asterisco * sono obbligatori.", tY = {
  _A_REQUIRED_TEXT_: eY
}, nY = "Поля, отмеченные звездочкой *, являются обязательными.", rY = {
  _A_REQUIRED_TEXT_: nY
}, ts = {
  ar: Vz,
  de: Gz,
  en: jz,
  es: Yz,
  fr: Zz,
  hr: Qz,
  it: tY,
  ru: rY
}, aY = "عرض كلمة المرور", sY = "إخفاء كلمة المرور", iY = {
  _A_INPUT_SHOW_PASSWORD_: aY,
  _A_INPUT_HIDE_PASSWORD_: sY
}, lY = "Dynamische Parameter werden in Routen verwendet, um Daten innerhalb des Pfads zu übergeben. Sie werden durch einen Doppelpunkt <code>:</code> vor dem Parameternamen gekennzeichnet, zum Beispiel: <code>/user/:id</code>. Beim Navigieren wird dieser Parameter durch einen bestimmten Wert ersetzt, z. B.: <code>/user/123</code>.", oY = '<span lang="en">URL</span>-Parameter ermöglichen das Übertragen zusätzlicher Informationen in der Anfrage. Sie werden nach dem <code>?</code>-Zeichen in der Adressleiste hinzugefügt und im Format "Schlüssel=Wert" geschrieben. Zum Beispiel: <code>?limit=10&sort=asc</code>.', uY = "Die Adresse bestimmt, wohin der Link führt. Sie kann statisch sein (z. B. <code>/home</code>) oder dynamische Parameter enthalten (z. B. <code>/user/:id</code>). Wählen Sie die Adresse für die Navigation.", _Y = "Legt fest, wo der Link geöffnet wird. Verfügbare Optionen: im selben Fenster (<code>_self</code>), in einem neuen Fenster oder Tab (<code>_blank</code>), im übergeordneten Frame (<code>_parent</code>) oder im äußersten Frame (<code>_top</code>).", dY = "Dynamische Parameter", cY = '<span lang="en">URL</span>-Parameter', fY = "Adresse auswählen", hY = '<span lang="en">target</span>-Attribut', AY = 'In einem neuen Tab öffnen <strong lang="en">_blank</strong>', EY = 'Im übergeordneten Frame öffnen <strong lang="en">_parent</strong>', pY = 'Im selben Fenster öffnen <strong lang="en">_self</strong>', TY = 'Im äußersten Frame öffnen <strong lang="en">_top</strong>', mY = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: lY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: oY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: uY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: _Y,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: dY,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: cY,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: fY,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: hY,
  _A_TARGET_BLANK_: AY,
  _A_TARGET_PARENT_: EY,
  _A_TARGET_SELF_: pY,
  _A_TARGET_TOP_: TY
}, SY = "Dynamic parameters are used in routes to pass data within the path. They are denoted by a colon <code>:</code> before the parameter name, for example: <code>/user/:id</code>. When navigating, this parameter is replaced with a specific value, such as: <code>/user/123</code>.", bY = '<span lang="en">URL</span> parameters allow passing additional information in the request. They are added after the <code>?</code> symbol in the address bar and follow the format "key=value". For example: <code>?limit=10&sort=asc</code>.', LY = "The address determines where the link will navigate. It can be static (e.g., <code>/home</code>) or contain dynamic parameters (e.g., <code>/user/:id</code>). Select the address for navigation.", IY = "Defines where the link will open. Available options: in the same window (<code>_self</code>), in a new window or tab (<code>_blank</code>), in the parent frame (<code>_parent</code>), or in the outermost frame (<code>_top</code>).", vY = "Dynamic parameters", yY = '<span lang="en">URL</span> parameters', gY = "Select address", RY = '<span lang="en">target</span> attribute', OY = 'Open in a new tab <strong lang="en">_blank</strong>', CY = 'Open in the parent frame <strong lang="en">_parent</strong>', NY = 'Open in the same window <strong lang="en">_self</strong>', DY = 'Open in the outermost frame <strong lang="en">_top</strong>', BY = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: SY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: bY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: LY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: IY,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: vY,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: yY,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: gY,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: RY,
  _A_TARGET_BLANK_: OY,
  _A_TARGET_PARENT_: CY,
  _A_TARGET_SELF_: NY,
  _A_TARGET_TOP_: DY
}, wY = "Los parámetros dinámicos se utilizan en las rutas para transmitir datos dentro de la ruta. Se denotan con dos puntos <code>:</code> antes del nombre del parámetro, por ejemplo: <code>/user/:id</code>. Al navegar, este parámetro se reemplaza con un valor específico, como: <code>/user/123</code>.", PY = 'Los parámetros de <span lang="en">URL</span> permiten enviar información adicional en la solicitud. Se agregan después del símbolo <code>?</code> en la barra de direcciones y tienen el formato "clave=valor". Por ejemplo: <code>?limit=10&sort=asc</code>.', xY = "La dirección determina a dónde llevará el enlace. Puede ser estática (por ejemplo, <code>/home</code>) o contener parámetros dinámicos (por ejemplo, <code>/user/:id</code>). Seleccione la dirección de navegación.", FY = "Define dónde se abrirá el enlace. Opciones disponibles: en la misma ventana (<code>_self</code>), en una nueva ventana o pestaña (<code>_blank</code>), en el marco padre (<code>_parent</code>) o en el marco superior (<code>_top</code>).", MY = "Parámetros dinámicos", qY = 'Parámetros de <span lang="en">URL</span>', $Y = "Seleccionar dirección", kY = 'Atributo <span lang="en">target</span>', UY = 'Abrir en una nueva pestaña <strong lang="en">_blank</strong>', HY = 'Abrir en el marco padre <strong lang="en">_parent</strong>', VY = 'Abrir en la misma ventana <strong lang="en">_self</strong>', WY = 'Abrir en el marco superior <strong lang="en">_top</strong>', GY = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: wY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: PY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: xY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: FY,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: MY,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: qY,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: $Y,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: kY,
  _A_TARGET_BLANK_: UY,
  _A_TARGET_PARENT_: HY,
  _A_TARGET_SELF_: VY,
  _A_TARGET_TOP_: WY
}, KY = "Les paramètres dynamiques sont utilisés dans les routes pour transmettre des données dans le chemin. Ils sont indiqués par un deux-points <code>:</code> avant le nom du paramètre, par exemple : <code>/user/:id</code>. Lors de la navigation, ce paramètre est remplacé par une valeur spécifique, comme : <code>/user/123</code>.", jY = `Les paramètres <span lang="en">URL</span> permettent de transmettre des informations supplémentaires dans la requête. Ils sont ajoutés après le symbole <code>?</code> dans la barre d'adresse et sont formatés en "clé=valeur". Par exemple : <code>?limit=10&sort=asc</code>.`, zY = "L'adresse détermine où le lien dirigera. Elle peut être statique (ex. <code>/home</code>) ou contenir des paramètres dynamiques (ex. <code>/user/:id</code>). Sélectionnez l'adresse de navigation.", YY = "Définit où le lien s'ouvrira. Options disponibles : dans la même fenêtre (<code>_self</code>), dans une nouvelle fenêtre ou un nouvel onglet (<code>_blank</code>), dans le cadre parent (<code>_parent</code>) ou dans le cadre principal (<code>_top</code>).", XY = "Paramètres dynamiques", ZY = 'Paramètres <span lang="en">URL</span>', JY = "Choisir une adresse", QY = 'Attribut <span lang="en">target</span>', eX = 'Ouvrir dans un nouvel onglet <strong lang="en">_blank</strong>', tX = 'Ouvrir dans le cadre parent <strong lang="en">_parent</strong>', nX = 'Ouvrir dans la même fenêtre <strong lang="en">_self</strong>', rX = 'Ouvrir dans le cadre principal <strong lang="en">_top</strong>', aX = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: KY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: jY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: zY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: YY,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: XY,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: ZY,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: JY,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: QY,
  _A_TARGET_BLANK_: eX,
  _A_TARGET_PARENT_: tX,
  _A_TARGET_SELF_: nX,
  _A_TARGET_TOP_: rX
}, sX = "Dinamički parametri koriste se u rutama za prijenos podataka unutar putanje. Označeni su dvotočkom <code>:</code> ispred naziva parametra, primjer: <code>/user/:id</code>. Prilikom navigacije, ovaj parametar zamjenjuje se specifičnom vrijednošću, primjer: <code>/user/123</code>.", iX = 'Parametri <span lang="en">URL</span> omogućuju prijenos dodatnih informacija u zahtjevu. Dodaju se nakon simbola <code>?</code> u adresnoj traci i zapisani su u formatu "ključ=vrijednost". Na primjer: <code>?limit=10&sort=asc</code>.', lX = "Adresa određuje kamo će veza voditi. Može biti statična (npr. <code>/home</code>) ili sadržavati dinamičke parametre (npr. <code>/user/:id</code>). Odaberite adresu za navigaciju.", oX = "Određuje gdje će se veza otvoriti. Dostupne opcije: u istom prozoru (<code>_self</code>), u novom prozoru ili kartici (<code>_blank</code>), u roditeljskom okviru (<code>_parent</code>) ili u najvišem okviru (<code>_top</code>).", uX = "Dinamički parametri", _X = 'Parametri <span lang="en">URL</span>', dX = "Odaberi adresu", cX = 'Atribut <span lang="en">target</span>', fX = 'Otvori u novoj kartici <strong lang="en">_blank</strong>', hX = 'Otvori u roditeljskom okviru <strong lang="en">_parent</strong>', AX = 'Otvori u istom prozoru <strong lang="en">_self</strong>', EX = 'Otvori u najvišem okviru <strong lang="en">_top</strong>', pX = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: sX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: iX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: lX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: oX,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: uX,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: _X,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: dX,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: cX,
  _A_TARGET_BLANK_: fX,
  _A_TARGET_PARENT_: hX,
  _A_TARGET_SELF_: AX,
  _A_TARGET_TOP_: EX
}, TX = "I parametri dinamici vengono utilizzati nelle rotte per trasmettere dati all'interno del percorso. Sono indicati con due punti <code>:</code> prima del nome del parametro, ad esempio: <code>/user/:id</code>. Durante la navigazione, questo parametro viene sostituito con un valore specifico, ad esempio: <code>/user/123</code>.", mX = 'I parametri <span lang="en">URL</span> consentono di trasmettere informazioni aggiuntive nella richiesta. Vengono aggiunti dopo il simbolo <code>?</code> nella barra degli indirizzi e sono scritti nel formato "chiave=valore". Ad esempio: <code>?limit=10&sort=asc</code>.', SX = "L'indirizzo determina dove porterà il link. Può essere statico (ad esempio, <code>/home</code>) o contenere parametri dinamici (ad esempio, <code>/user/:id</code>). Selezionare l'indirizzo per la navigazione.", bX = "Definisce dove si aprirà il link. Opzioni disponibili: nella stessa finestra (<code>_self</code>), in una nuova finestra o scheda (<code>_blank</code>), nel frame padre (<code>_parent</code>) o nel frame superiore (<code>_top</code>).", LX = "Parametri dinamici", IX = 'Parametri <span lang="en">URL</span>', vX = "Seleziona indirizzo", yX = 'Attributo <span lang="en">target</span>', gX = 'Apri in una nuova scheda <strong lang="en">_blank</strong>', RX = 'Apri nel frame padre <strong lang="en">_parent</strong>', OX = 'Apri nella stessa finestra <strong lang="en">_self</strong>', CX = 'Apri nel frame superiore <strong lang="en">_top</strong>', NX = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: TX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: mX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: SX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: bX,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: LX,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: IX,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: vX,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: yX,
  _A_TARGET_BLANK_: gX,
  _A_TARGET_PARENT_: RX,
  _A_TARGET_SELF_: OX,
  _A_TARGET_TOP_: CX
}, DX = "Динамические параметры используются в маршрутах для передачи данных внутри пути. Они обозначаются двоеточием <code>:</code> перед именем параметра, например: <code>/user/:id</code>. При переходе этот параметр заменяется конкретным значением, например: <code>/user/123</code>.", BX = 'Параметры <span lang="en">URL</span> позволяют передавать дополнительную информацию в запросе. Они добавляются после знака <code>?</code> в адресной строке и записываются в формате «ключ=значение». Например: <code>?limit=10&sort=asc</code>.', wX = "Адрес определяет, куда будет вести ссылка. Он может быть статическим (например, <code>/home</code>) или содержать динамические параметры (например, <code>/user/:id</code>). Выберите адрес, по которому будет происходить навигация.", PX = "Определяет, где будет открываться ссылка. Доступные варианты: в том же окне (<code>_self</code>), в новом окне или вкладке (<code>_blank</code>), в родительском фрейме (<code>_parent</code>) или во внешнем фрейме (<code>_top</code>).", xX = "Динамические параметры", FX = 'Параметры <span lang="en">URL</span>', MX = "Выберите адрес", qX = 'Атрибут <span lang="en">target</span>', $X = 'Открыть в новой вкладке <strong lang="en">_blank</strong>', kX = 'Открыть в родительском фрейме <strong lang="en">_parent</strong>', UX = 'Открыть в этом же окне <strong lang="en">_self</strong>', HX = 'Открыть во внешнем фрейме <strong lang="en">_top</strong>', VX = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: DX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: BX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: wX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: PX,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: xX,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: FX,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: MX,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: qX,
  _A_TARGET_BLANK_: $X,
  _A_TARGET_PARENT_: kX,
  _A_TARGET_SELF_: UX,
  _A_TARGET_TOP_: HX
}, ns = {
  ar: iY,
  de: mY,
  en: BY,
  es: GY,
  fr: aX,
  hr: pX,
  it: NX,
  ru: VX
}, WX = "اختر هذا الخيار فقط", GX = "[No choices]", KX = "Search", jX = {
  _A_SELECT_EXCLUSIVE_: WX,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: GX,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: KX,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, zX = "Nur diese Option auswählen", YX = "[Keine Auswahl]", XX = "Suche", ZX = {
  _A_SELECT_EXCLUSIVE_: zX,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: YX,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} ausgewählt",
  _A_SELECT_SEARCH_: XX,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} ausgewählt"
}, JX = "Select only this option", QX = "[No choices]", eZ = "Search", tZ = {
  _A_SELECT_EXCLUSIVE_: JX,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: QX,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: eZ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, nZ = "Seleccionar solo esta opción", rZ = "[No choices]", aZ = "Search", sZ = {
  _A_SELECT_EXCLUSIVE_: nZ,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: rZ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: aZ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, iZ = "Sélectionner uniquement cette option", lZ = "[No choices]", oZ = "Search", uZ = {
  _A_SELECT_EXCLUSIVE_: iZ,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: lZ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: oZ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, _Z = "Odaberi samo ovu opciju", dZ = "[No choices]", cZ = "Search", fZ = {
  _A_SELECT_EXCLUSIVE_: _Z,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: dZ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: cZ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, hZ = "Seleziona solo questa opzione", AZ = "[No choices]", EZ = "Search", pZ = {
  _A_SELECT_EXCLUSIVE_: hZ,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: AZ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: EZ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, TZ = "Выбрать только этот вариант", mZ = "[Нет элементов для выбора]", SZ = "Поиск", bZ = {
  _A_SELECT_EXCLUSIVE_: TZ,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: mZ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} выбрано",
  _A_SELECT_SEARCH_: SZ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} выбрано"
}, rs = {
  ar: jX,
  de: ZX,
  en: tZ,
  es: sZ,
  fr: uZ,
  hr: fZ,
  it: pZ,
  ru: bZ
}, LZ = "إظهار أقل", IZ = "أظهر المزيد", vZ = "إظهار أقل - يمكن تجاهل زر لأن جميع المحتويات قابلة للقراءة بواسطة قارئات الشاشة بالفعل", yZ = "إظهار المزيد - يمكن تجاهل زر لأن جميع المحتويات قابلة للقراءة بواسطة قارئات الشاشة بالفعل", gZ = {
  _A_SHOW_MORE_LESS_: LZ,
  _A_SHOW_MORE_MORE_: IZ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: vZ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: yZ
}, RZ = "Mehr anzeigen", OZ = "Weniger anzeigen", CZ = "Weniger anzeigen - Button kann ignoriert werden, da der gesamte Inhalt für ScreenReader bereits lesbar ist", NZ = "Mehr anzeigen - Button kann ignoriert werden, da der gesamte Inhalt für ScreenReader bereits lesbar ist", DZ = {
  _A_SHOW_MORE_MORE_: RZ,
  _A_SHOW_MORE_LESS_: OZ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: CZ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: NZ
}, BZ = "Show less", wZ = "Show more", PZ = "Show less - Button can be ignored since all content is already readable by screen readers", xZ = "Show more - Button can be ignored since all content is already readable by screen readers", FZ = {
  _A_SHOW_MORE_LESS_: BZ,
  _A_SHOW_MORE_MORE_: wZ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: PZ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: xZ
}, MZ = "Mostrar menos", qZ = "Mostrar más", $Z = "Mostrar menos - El botón se puede ignorar ya que todo el contenido ya es legible para los lectores de pantalla", kZ = "Mostrar más - El botón se puede ignorar ya que todo el contenido ya es legible para los lectores de pantalla", UZ = {
  _A_SHOW_MORE_LESS_: MZ,
  _A_SHOW_MORE_MORE_: qZ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: $Z,
  _A_SHOW_MORE_MORE_SCREEN_READER_: kZ
}, HZ = "Afficher moins", VZ = "Afficher plus", WZ = "Afficher moins - Le bouton peut être ignoré car tout le contenu est déjà lisible par les lecteurs d'écran", GZ = "Afficher plus - Le bouton peut être ignoré car tout le contenu est déjà lisible par les lecteurs d'écran", KZ = {
  _A_SHOW_MORE_LESS_: HZ,
  _A_SHOW_MORE_MORE_: VZ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: WZ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: GZ
}, jZ = "Prikaži manje", zZ = "Prikaži više", YZ = "Prikaži manje - Ovo dugme se može zanemariti jer je cjelokupan sadržaj već vidljiv čitaču zaslona.", XZ = "Prikaži više - Ovo dugme se može zanemariti jer je cjelokupan sadržaj već vidljiv čitaču zaslona.", ZZ = {
  _A_SHOW_MORE_LESS_: jZ,
  _A_SHOW_MORE_MORE_: zZ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: YZ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: XZ
}, JZ = "Mostra meno", QZ = "Mostra di più", eJ = "Mostra meno - Il pulsante può essere ignorato poiché tutto il contenuto è già leggibile dagli screen reader", tJ = "Mostra di più - Il pulsante può essere ignorato poiché tutto il contenuto è già leggibile dagli screen reader", nJ = {
  _A_SHOW_MORE_LESS_: JZ,
  _A_SHOW_MORE_MORE_: QZ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: eJ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: tJ
}, rJ = "Показать меньше", aJ = "Показать больше", sJ = "Показать меньше - Кнопку можно проигнорировать, так как весь контент уже доступен для чтения с помощью скринридера", iJ = "Показать больше - Кнопку можно проигнорировать, так как весь контент уже доступен для чтения с помощью скринридера", lJ = {
  _A_SHOW_MORE_LESS_: rJ,
  _A_SHOW_MORE_MORE_: aJ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: sJ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: iJ
}, as = {
  ar: gZ,
  de: DZ,
  en: FZ,
  es: UZ,
  fr: KZ,
  hr: ZZ,
  it: nJ,
  ru: lJ
}, oJ = "تحميل", uJ = {
  _A_SPINNER_LOADING_: oJ
}, _J = "Wird geladen", dJ = {
  _A_SPINNER_LOADING_: _J
}, cJ = "Loading", fJ = {
  _A_SPINNER_LOADING_: cJ
}, hJ = "Cargando", AJ = {
  _A_SPINNER_LOADING_: hJ
}, EJ = "Chargement", pJ = {
  _A_SPINNER_LOADING_: EJ
}, TJ = "Učitavam", mJ = {
  _A_SPINNER_LOADING_: TJ
}, SJ = "Caricamento", bJ = {
  _A_SPINNER_LOADING_: SJ
}, LJ = "Загрузка", IJ = {
  _A_SPINNER_LOADING_: LJ
}, ss = {
  ar: uJ,
  de: dJ,
  en: fJ,
  es: AJ,
  fr: pJ,
  hr: mJ,
  it: bJ,
  ru: IJ
}, vJ = "غير محدد", yJ = "لا", gJ = "نعم", RJ = {
  _A_SWITCH_DEFAULT_LABEL_: vJ,
  _A_SWITCH_FALSE_LABEL_: yJ,
  _A_SWITCH_TRUE_LABEL_: gJ
}, OJ = "Nicht ausgewählt", CJ = "Nein", NJ = "Ja", DJ = {
  _A_SWITCH_DEFAULT_LABEL_: OJ,
  _A_SWITCH_FALSE_LABEL_: CJ,
  _A_SWITCH_TRUE_LABEL_: NJ
}, BJ = "Not selected", wJ = "No", PJ = "Yes", xJ = {
  _A_SWITCH_DEFAULT_LABEL_: BJ,
  _A_SWITCH_FALSE_LABEL_: wJ,
  _A_SWITCH_TRUE_LABEL_: PJ
}, FJ = "No seleccionado", MJ = "No", qJ = "Sí", $J = {
  _A_SWITCH_DEFAULT_LABEL_: FJ,
  _A_SWITCH_FALSE_LABEL_: MJ,
  _A_SWITCH_TRUE_LABEL_: qJ
}, kJ = "Non sélectionné", UJ = "Non", HJ = "Oui", VJ = {
  _A_SWITCH_DEFAULT_LABEL_: kJ,
  _A_SWITCH_FALSE_LABEL_: UJ,
  _A_SWITCH_TRUE_LABEL_: HJ
}, WJ = "Nije odabrano", GJ = "Ne", KJ = "Da", jJ = {
  _A_SWITCH_DEFAULT_LABEL_: WJ,
  _A_SWITCH_FALSE_LABEL_: GJ,
  _A_SWITCH_TRUE_LABEL_: KJ
}, zJ = "Non selezionato", YJ = "No", XJ = "Sì", ZJ = {
  _A_SWITCH_DEFAULT_LABEL_: zJ,
  _A_SWITCH_FALSE_LABEL_: YJ,
  _A_SWITCH_TRUE_LABEL_: XJ
}, JJ = "Не выбрано", QJ = "Нет", eQ = "Да", tQ = {
  _A_SWITCH_DEFAULT_LABEL_: JJ,
  _A_SWITCH_FALSE_LABEL_: QJ,
  _A_SWITCH_TRUE_LABEL_: eQ
}, is = {
  ar: RJ,
  de: DJ,
  en: xJ,
  es: $J,
  fr: VJ,
  hr: jJ,
  it: ZJ,
  ru: tQ
}, nQ = "إجراءات", rQ = "إلغاء تحديد جميع الصفوف المحددة", aQ = "إلغاء تحديد هذا الصف", sQ = "1 حقل", iQ = "تخصيص الجدول", lQ = "لا توجد إدخالات.", oQ = "تنفيذ إجراء متعدد؟", uQ = "متابعة", _Q = "إغلاق", dQ = "+ 1 حقل", cQ = "إجراءات متعددة", fQ = "إلغاء الإجراء المتعدد", hQ = "نقل العمود إلى اليمين", AQ = "نقل العمود إلى اليسار", EQ = "إظهار العمود", pQ = "إخفاء العمود", TQ = "العمود مقفل", mQ = "معاينة الصف", SQ = "إغلاق المعاينة", bQ = "الرجاء استخدام الفتحة: 'معاينة'", LQ = "معاينة الصف", IQ = "إغلاق المعاينة", vQ = "إلى الصف التالي", yQ = "إلى الصف السابق", gQ = "بحث سريع", RQ = "إغلاق معاينة الصف", OQ = "فتح معاينة الصف", CQ = "تحديد جميع الصفوف المرئية ذات الصلة", NQ = "تحديد هذا الصف", DQ = "إلغاء الترتيب", BQ = "إغلاق", wQ = "عمود", PQ = "اتجاه", xQ = "تصاعدي", FQ = "تنازلي", MQ = "ترتيب", qQ = "ترتيب حسب", $Q = "ترتيب", kQ = "ثم حسب", UQ = "انقر هنا للتبديل بين الترتيب التصاعدي، الترتيب التنازلي، وعدم الترتيب.", HQ = "اضغط مع الاستمرار على مفتاح Shift أثناء النقر للجمع بين ترتيب أعمدة متعددة.", VQ = {
  _A_TABLE_ACTIONS_: nQ,
  "_A_TABLE_ALL_ROWS_{{count}}_": "إجمالي عدد الإدخالات: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "إلغاء تحديد جميع الصفوف ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: rQ,
  _A_TABLE_DESELECT_THIS_ROW_: aQ,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "إجراءات للصف: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: sQ,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} حقول",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "عرض المزيد من الحقول ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: iQ,
  _A_TABLE_EMPTY_TEXT_: lQ,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: oQ,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>هل تريد تنفيذ الإجراء <strong>{{ action }}</strong> على <strong>{{ selectedRows }}</strong> من العناصر؟</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: uQ,
  _A_TABLE_MOBILE_TR_CLOSE_: _Q,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: dQ,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} حقول",
  _A_TABLE_MULTIPLE_ACTIONS_: cQ,
  _A_TABLE_MULTIPLE_CANCEL_: fQ,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} من {{ countAllRowsFiltered }} محددة",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: hQ,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: AQ,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: EQ,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: pQ,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: TQ,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: mQ,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: SQ,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: bQ,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: LQ,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: IQ,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} من {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: vQ,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: yQ,
  _A_TABLE_QUICK_SEARCH_: gQ,
  _A_TABLE_ROW_PREVIEW_CLOSE_: RQ,
  _A_TABLE_ROW_PREVIEW_OPEN_: OQ,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "تحديد جميع الصفوف ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: CQ,
  _A_TABLE_SELECT_THIS_ROW_: NQ,
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: DQ,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: BQ,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: wQ,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: PQ,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: xQ,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: FQ,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "تغيير الترتيب (الأعمدة المحددة: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_HEADER_: MQ,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: qQ,
  _A_TABLE_SORT_ADDITIONAL_START_: $Q,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: kQ,
  _A_TABLE_SORT_TITLE_: UQ,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: HQ
}, WQ = "Aktionen", GQ = "Alle ausgewählten Zeilen abwählen", KQ = "Die Zeile abwählen", jQ = "1 Feld", zQ = "Tabelle anpassen", YQ = "Keine Einträge vorhanden.", XQ = "Mehrfachaktion durchführen?", ZQ = "Fortfahren", JQ = "Schließen", QQ = "+ 1 Feld", eee = "Mehrfachaktionen", tee = "Mehrfachaktion abbrechen", nee = "Spalte nach rechts verschieben", ree = "Spalte nach links verschieben", aee = "Spalte einblenden", see = "Spalte ausblenden", iee = "Spalte ist gesperrt", lee = "Vorschau der Zeile", oee = "Vorschau schließen", uee = "Benutzen sie bitte slot: 'preview'", _ee = "Vorschau der Zeile", dee = "Vorschau schließen", cee = "Zur nächsten Zeile", fee = "Zur vorherigen Zeile", hee = "Schnellsuche", Aee = "Vorschau der Zeile schließen", Eee = "Vorschau der Zeile öffnen", pee = "Alle sichtbaren, relevanten Zeilen auswählen", Tee = "Die Zeile auswählen", mee = "Sortierung aufheben", See = "Schließen", bee = "Spalte", Lee = "Reihenfolge", Iee = "Aufsteigend", vee = "Absteigend", yee = "Sortierung", gee = "Sortieren nach", Ree = "Sortieren", Oee = "Dann nach", Cee = "Klicken Sie hier, um zwischen aufsteigender, absteigender und keiner Sortierung zu wechseln.", Nee = "Halten Sie die Umschalttaste beim Klicken gedrückt, um die Sortierung mehrerer Spalten zu kombinieren.", Dee = {
  _A_TABLE_ACTIONS_: WQ,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Gesamtanzahl der Einträge: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Alle Zeilen abwählen ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: GQ,
  _A_TABLE_DESELECT_THIS_ROW_: KQ,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Aktionen zur Zeile: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: jQ,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} Felder",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Weitere Felder anzeigen ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: zQ,
  _A_TABLE_EMPTY_TEXT_: YQ,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: XQ,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Möchten Sie die Aktion <strong>{{ action }}</strong> auf <strong>{{ selectedRows }}</strong> Objekten durchführen?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: ZQ,
  _A_TABLE_MOBILE_TR_CLOSE_: JQ,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: QQ,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} Felder",
  _A_TABLE_MULTIPLE_ACTIONS_: eee,
  _A_TABLE_MULTIPLE_CANCEL_: tee,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} von {{ countAllRowsFiltered }} ausgewählt",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: nee,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: ree,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: aee,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: see,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: iee,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: lee,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: oee,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: uee,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: _ee,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: dee,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} von {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: cee,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: fee,
  _A_TABLE_QUICK_SEARCH_: hee,
  _A_TABLE_ROW_PREVIEW_CLOSE_: Aee,
  _A_TABLE_ROW_PREVIEW_OPEN_: Eee,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Alle Zeilen auswählen ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: pee,
  _A_TABLE_SELECT_THIS_ROW_: Tee,
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: mee,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: See,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: bee,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Lee,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Iee,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: vee,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Sortierung ändern (ausgewählte Spalten: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_HEADER_: yee,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: gee,
  _A_TABLE_SORT_ADDITIONAL_START_: Ree,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Oee,
  _A_TABLE_SORT_TITLE_: Cee,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: Nee
}, Bee = "Actions", wee = "Deselect all selected rows", Pee = "Deselect this row", xee = "1 field", Fee = "Customize table", Mee = "No entries available.", qee = "Execute multiple actions?", $ee = "Proceed", kee = "Close", Uee = "+ 1 field", Hee = "Multiple actions", Vee = "Cancel multiple actions", Wee = "Move column to the right", Gee = "Move column to the left", Kee = "Show column", jee = "Hide column", zee = "Column is locked", Yee = "Row preview", Xee = "Close preview", Zee = "Row preview", Jee = "Close preview", Qee = "Please use slot: 'preview'", ete = "To the next row", tte = "To the previous row", nte = "Quick search", rte = "Close row preview", ate = "Open row preview", ste = "Select all visible, relevant rows", ite = "Select this row", lte = "Click here to toggle between ascending, descending, and no sorting.", ote = "Hold Shift while clicking to combine sorting of multiple columns.", ute = "Sorting", _te = "Sort by", dte = "Then by", cte = "Column", fte = "Direction", hte = "Ascending", Ate = "Descending", Ete = "Close", pte = "Sort", Tte = "Remove sorting", mte = {
  _A_TABLE_ACTIONS_: Bee,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Total number of entries: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deselect all rows ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: wee,
  _A_TABLE_DESELECT_THIS_ROW_: Pee,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Actions for row: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: xee,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} fields",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Show more fields ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: Fee,
  _A_TABLE_EMPTY_TEXT_: Mee,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: qee,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Do you want to execute the action <strong>{{ action }}</strong> on <strong>{{ selectedRows }}</strong> items?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: $ee,
  _A_TABLE_MOBILE_TR_CLOSE_: kee,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: Uee,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} fields",
  _A_TABLE_MULTIPLE_ACTIONS_: Hee,
  _A_TABLE_MULTIPLE_CANCEL_: Vee,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} of {{ countAllRowsFiltered }} selected",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: Wee,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: Gee,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: Kee,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: jee,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: zee,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: Yee,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: Xee,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Zee,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: Jee,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: Qee,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} of {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: ete,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: tte,
  _A_TABLE_QUICK_SEARCH_: nte,
  _A_TABLE_ROW_PREVIEW_CLOSE_: rte,
  _A_TABLE_ROW_PREVIEW_OPEN_: ate,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Select all rows ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: ste,
  _A_TABLE_SELECT_THIS_ROW_: ite,
  _A_TABLE_SORT_TITLE_: lte,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: ote,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: ute,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: _te,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: dte,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: cte,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: fte,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: hte,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: Ate,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: Ete,
  _A_TABLE_SORT_ADDITIONAL_START_: pte,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Change sorting (selected columns: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: Tte
}, Ste = "Acciones", bte = "Deseleccionar todas las filas seleccionadas", Lte = "Deseleccionar esta fila", Ite = "1 campo", vte = "Personalizar tabla", yte = "No hay entradas disponibles.", gte = "¿Ejecutar múltiples acciones?", Rte = "Continuar", Ote = "Cerrar", Cte = "+ 1 campo", Nte = "Acciones múltiples", Dte = "Cancelar acciones múltiples", Bte = "Mover columna a la derecha", wte = "Mover columna a la izquierda", Pte = "Mostrar columna", xte = "Ocultar columna", Fte = "La columna está bloqueada", Mte = "Vista previa de la fila", qte = "Cerrar vista previa", $te = "Vista previa de la fila", kte = "Cerrar vista previa", Ute = "Por favor, use el slot: 'preview'", Hte = "A la siguiente fila", Vte = "A la fila anterior", Wte = "Búsqueda rápida", Gte = "Cerrar vista previa de la fila", Kte = "Abrir vista previa de la fila", jte = "Seleccionar todas las filas visibles y relevantes", zte = "Seleccionar esta fila", Yte = "Haga clic aquí para alternar entre orden ascendente, descendente o sin ordenar.", Xte = "Mantenga presionada la tecla Shift al hacer clic para combinar la ordenación de varias columnas.", Zte = "Ordenar", Jte = "Ordenar por", Qte = "Luego por", ene = "Columna", tne = "Dirección", nne = "Ascendente", rne = "Descendente", ane = "Cerrar", sne = "Ordenar", ine = "Eliminar orden", lne = {
  _A_TABLE_ACTIONS_: Ste,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Número total de entradas: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deseleccionar todas las filas ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: bte,
  _A_TABLE_DESELECT_THIS_ROW_: Lte,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Acciones para la fila: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Ite,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} campos",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Mostrar más campos ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: vte,
  _A_TABLE_EMPTY_TEXT_: yte,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: gte,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>¿Desea ejecutar la acción <strong>{{ action }}</strong> en <strong>{{ selectedRows }}</strong> objetos?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: Rte,
  _A_TABLE_MOBILE_TR_CLOSE_: Ote,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: Cte,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} campos",
  _A_TABLE_MULTIPLE_ACTIONS_: Nte,
  _A_TABLE_MULTIPLE_CANCEL_: Dte,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} de {{ countAllRowsFiltered }} seleccionadas",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: Bte,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: wte,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: Pte,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: xte,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: Fte,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: Mte,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: qte,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: $te,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: kte,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: Ute,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} de {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Hte,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Vte,
  _A_TABLE_QUICK_SEARCH_: Wte,
  _A_TABLE_ROW_PREVIEW_CLOSE_: Gte,
  _A_TABLE_ROW_PREVIEW_OPEN_: Kte,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Seleccionar todas las filas ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: jte,
  _A_TABLE_SELECT_THIS_ROW_: zte,
  _A_TABLE_SORT_TITLE_: Yte,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: Xte,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: Zte,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Jte,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Qte,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: ene,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: tne,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: nne,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: rne,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: ane,
  _A_TABLE_SORT_ADDITIONAL_START_: sne,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Cambiar orden (columnas seleccionadas: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: ine
}, one = "Actions", une = "Désélectionner toutes les lignes sélectionnées", _ne = "Désélectionner cette ligne", dne = "1 champ", cne = "Personnaliser le tableau", fne = "Aucune entrée disponible.", hne = "Exécuter plusieurs actions ?", Ane = "Continuer", Ene = "Fermer", pne = "+ 1 champ", Tne = "Actions multiples", mne = "Annuler l'action multiple", Sne = "Déplacer la colonne vers la droite", bne = "Déplacer la colonne vers la gauche", Lne = "Afficher la colonne", Ine = "Masquer la colonne", vne = "La colonne est verrouillée", yne = "Aperçu de la ligne", gne = "Fermer l'aperçu", Rne = "Aperçu de la ligne", One = "Fermer l'aperçu", Cne = "Veuillez utiliser le slot : 'preview'", Nne = "À la ligne suivante", Dne = "À la ligne précédente", Bne = "Recherche rapide", wne = "Fermer l'aperçu de la ligne", Pne = "Ouvrir l'aperçu de la ligne", xne = "Sélectionner toutes les lignes visibles et pertinentes", Fne = "Sélectionner cette ligne", Mne = "Cliquez ici pour alterner entre tri ascendant, descendant et sans tri.", qne = "Maintenez la touche Maj enfoncée en cliquant pour combiner le tri de plusieurs colonnes.", $ne = "Tri", kne = "Trier par", Une = "Puis par", Hne = "Colonne", Vne = "Direction", Wne = "Ascendant", Gne = "Descendant", Kne = "Fermer", jne = "Trier", zne = "Supprimer le tri", Yne = {
  _A_TABLE_ACTIONS_: one,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Nombre total d'entrées : {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Désélectionner toutes les lignes ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: une,
  _A_TABLE_DESELECT_THIS_ROW_: _ne,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Actions pour la ligne : {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: dne,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} champs",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Afficher plus de champs ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: cne,
  _A_TABLE_EMPTY_TEXT_: fne,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: hne,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Voulez-vous exécuter l'action <strong>{{ action }}</strong> sur <strong>{{ selectedRows }}</strong> objets ?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: Ane,
  _A_TABLE_MOBILE_TR_CLOSE_: Ene,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: pne,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} champs",
  _A_TABLE_MULTIPLE_ACTIONS_: Tne,
  _A_TABLE_MULTIPLE_CANCEL_: mne,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} sur {{ countAllRowsFiltered }} sélectionnés",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: Sne,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: bne,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: Lne,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: Ine,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: vne,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: yne,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: gne,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Rne,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: One,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: Cne,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} sur {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Nne,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Dne,
  _A_TABLE_QUICK_SEARCH_: Bne,
  _A_TABLE_ROW_PREVIEW_CLOSE_: wne,
  _A_TABLE_ROW_PREVIEW_OPEN_: Pne,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Sélectionner toutes les lignes ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: xne,
  _A_TABLE_SELECT_THIS_ROW_: Fne,
  _A_TABLE_SORT_TITLE_: Mne,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: qne,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: $ne,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: kne,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Une,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Hne,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Vne,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Wne,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: Gne,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: Kne,
  _A_TABLE_SORT_ADDITIONAL_START_: jne,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Modifier le tri (colonnes sélectionnées : {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: zne
}, Xne = "Akcije", Zne = "Poništi odabir svih odabranih redaka", Jne = "Poništi odabir ovog retka", Qne = "1 polje", ere = "Prilagodi tablicu", tre = "Nema dostupnih unosa.", nre = "Izvršiti više akcija?", rre = "Nastavi", are = "Zatvori", sre = "+ 1 polje", ire = "Višestruke akcije", lre = "Poništi višestruku akciju", ore = "Premjesti stupac desno", ure = "Premjesti stupac lijevo", _re = "Prikaži stupac", dre = "Sakrij stupac", cre = "Stupac je zaključan", fre = "Pregled retka", hre = "Zatvori pregled", Are = "Pregled retka", Ere = "Zatvori pregled", pre = "Molimo koristite slot: 'pregled'", Tre = "Na sljedeći redak", mre = "Na prethodni redak", Sre = "Brza pretraga", bre = "Zatvori pregled retka", Lre = "Otvori pregled retka", Ire = "Odaberi sve vidljive, relevantne retke", vre = "Odaberi ovaj redak", yre = "Kliknite ovdje da biste se prebacivali između uzlaznog, silaznog i bez sortiranja.", gre = "Držite tipku Shift dok klikate da biste kombinirali sortiranje više stupaca.", Rre = "Sortiranje", Ore = "Sortiraj po", Cre = "Zatim po", Nre = "Stupac", Dre = "Smjer", Bre = "Uzlazno", wre = "Silazno", Pre = "Zatvori", xre = "Sortiraj", Fre = "Ukloni sortiranje", Mre = {
  _A_TABLE_ACTIONS_: Xne,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Ukupan broj unosa: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Poništi odabir svih redaka ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Zne,
  _A_TABLE_DESELECT_THIS_ROW_: Jne,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Akcije za redak: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Qne,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} polja",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Prikaži više polja ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: ere,
  _A_TABLE_EMPTY_TEXT_: tre,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: nre,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Želite li izvršiti akciju <strong>{{ action }}</strong> na <strong>{{ selectedRows }}</strong> objekata?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: rre,
  _A_TABLE_MOBILE_TR_CLOSE_: are,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: sre,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} polja",
  _A_TABLE_MULTIPLE_ACTIONS_: ire,
  _A_TABLE_MULTIPLE_CANCEL_: lre,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} od {{ countAllRowsFiltered }} odabrano",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: ore,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: ure,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: _re,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: dre,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: cre,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: fre,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: hre,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Are,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: Ere,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: pre,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} od {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Tre,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: mre,
  _A_TABLE_QUICK_SEARCH_: Sre,
  _A_TABLE_ROW_PREVIEW_CLOSE_: bre,
  _A_TABLE_ROW_PREVIEW_OPEN_: Lre,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Odaberi sve retke ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Ire,
  _A_TABLE_SELECT_THIS_ROW_: vre,
  _A_TABLE_SORT_TITLE_: yre,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: gre,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: Rre,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Ore,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Cre,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Nre,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Dre,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Bre,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: wre,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: Pre,
  _A_TABLE_SORT_ADDITIONAL_START_: xre,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Promijeni sortiranje (odabrani stupci: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: Fre
}, qre = "Azioni", $re = "Deseleziona tutte le righe selezionate", kre = "Deseleziona questa riga", Ure = "1 campo", Hre = "Personalizza tabella", Vre = "Nessuna voce disponibile.", Wre = "Eseguire più azioni?", Gre = "Continua", Kre = "Chiudi", jre = "+ 1 campo", zre = "Azioni multiple", Yre = "Annulla azione multipla", Xre = "Sposta colonna a destra", Zre = "Sposta colonna a sinistra", Jre = "Mostra colonna", Qre = "Nascondi colonna", eae = "Colonna bloccata", tae = "Anteprima riga", nae = "Chiudi anteprima", rae = "Anteprima riga", aae = "Chiudi anteprima", sae = "Si prega di utilizzare lo slot: 'preview'", iae = "Alla riga successiva", lae = "Alla riga precedente", oae = "Ricerca rapida", uae = "Chiudi anteprima riga", _ae = "Apri anteprima riga", dae = "Seleziona tutte le righe visibili e pertinenti", cae = "Seleziona questa riga", fae = "Clicca qui per alternare tra ordinamento crescente, decrescente e nessun ordinamento.", hae = "Tieni premuto il tasto Maiusc mentre fai clic per combinare l'ordinamento di più colonne.", Aae = "Ordinamento", Eae = "Ordina per", pae = "Poi per", Tae = "Colonna", mae = "Direzione", Sae = "Crescente", bae = "Decrescente", Lae = "Chiudi", Iae = "Ordina", vae = "Rimuovi ordinamento", yae = {
  _A_TABLE_ACTIONS_: qre,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Numero totale di voci: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deseleziona tutte le righe ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: $re,
  _A_TABLE_DESELECT_THIS_ROW_: kre,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Azioni per la riga: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Ure,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} campi",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Mostra più campi ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: Hre,
  _A_TABLE_EMPTY_TEXT_: Vre,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: Wre,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Vuoi eseguire l'azione <strong>{{ action }}</strong> su <strong>{{ selectedRows }}</strong> oggetti?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: Gre,
  _A_TABLE_MOBILE_TR_CLOSE_: Kre,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: jre,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} campi",
  _A_TABLE_MULTIPLE_ACTIONS_: zre,
  _A_TABLE_MULTIPLE_CANCEL_: Yre,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} di {{ countAllRowsFiltered }} selezionate",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: Xre,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: Zre,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: Jre,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: Qre,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: eae,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: tae,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: nae,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: rae,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: aae,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: sae,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} di {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: iae,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: lae,
  _A_TABLE_QUICK_SEARCH_: oae,
  _A_TABLE_ROW_PREVIEW_CLOSE_: uae,
  _A_TABLE_ROW_PREVIEW_OPEN_: _ae,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Seleziona tutte le righe ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: dae,
  _A_TABLE_SELECT_THIS_ROW_: cae,
  _A_TABLE_SORT_TITLE_: fae,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: hae,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: Aae,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Eae,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: pae,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Tae,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: mae,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Sae,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: bae,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: Lae,
  _A_TABLE_SORT_ADDITIONAL_START_: Iae,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Modifica ordinamento (colonne selezionate: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: vae
}, gae = "Действия", Rae = "Отменить выбор всех выбранных строк", Oae = "Отменить выбор строки", Cae = "1 поле", Nae = "Настроить таблицу", Dae = "Нет доступных записей.", Bae = "Выполнить несколько действий?", wae = "Продолжить", Pae = "Закрыть", xae = "+ 1 поле", Fae = "Множественные действия", Mae = "Отменить", qae = "Переместить столбец вправо", $ae = "Переместить столбец влево", kae = "Показать столбец", Uae = "Скрыть столбец", Hae = "Столбец заблокирован", Vae = "Предпросмотр строки", Wae = "Закрыть предварительный просмотр", Gae = "Предпросмотр строки", Kae = "Закрыть предварительный просмотр", jae = "Пожалуйста, используйте слот: 'preview'", zae = "К следующей строке", Yae = "К предыдущей строке", Xae = "Быстрый поиск", Zae = "Закрыть предпросмотр строки", Jae = "Открыть предпросмотр строки", Qae = "Выбрать все видимые, возможные строки", ese = "Выбрать эту строку", tse = "Нажмите здесь, чтобы переключиться между сортировкой по возрастанию, по убыванию и без сортировки.", nse = "Удерживайте Shift при нажатии, чтобы объединить сортировку нескольких столбцов.", rse = "Сортировка", ase = "Сортировать по", sse = "Затем по", ise = "Столбец", lse = "Направление", ose = "По возрастанию", use = "По убыванию", _se = "Закрыть", dse = "Сортировать", cse = "Отменить сортировку", fse = {
  _A_TABLE_ACTIONS_: gae,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Общее количество записей: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Отменить выбор всех строк ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Rae,
  _A_TABLE_DESELECT_THIS_ROW_: Oae,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Действия для строки: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Cae,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} полей",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Показать дополнительные поля ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: Nae,
  _A_TABLE_EMPTY_TEXT_: Dae,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: Bae,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Вы хотите выполнить действие <strong>{{ action }}</strong> для <strong>{{ selectedRows }}</strong> объектов?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: wae,
  _A_TABLE_MOBILE_TR_CLOSE_: Pae,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: xae,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} полей",
  _A_TABLE_MULTIPLE_ACTIONS_: Fae,
  _A_TABLE_MULTIPLE_CANCEL_: Mae,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} из {{ countAllRowsFiltered }} выбрано",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: qae,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: $ae,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: kae,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: Uae,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: Hae,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: Vae,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: Wae,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Gae,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: Kae,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: jae,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} из {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: zae,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Yae,
  _A_TABLE_QUICK_SEARCH_: Xae,
  _A_TABLE_ROW_PREVIEW_CLOSE_: Zae,
  _A_TABLE_ROW_PREVIEW_OPEN_: Jae,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Выбрать все строки ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Qae,
  _A_TABLE_SELECT_THIS_ROW_: ese,
  _A_TABLE_SORT_TITLE_: tse,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: nse,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: rse,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: ase,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: sse,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: ise,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: lse,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: ose,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: use,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: _se,
  _A_TABLE_SORT_ADDITIONAL_START_: dse,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Изменить сортировку (выбрано столбцов: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: cse
}, ls = {
  ar: VQ,
  de: Dee,
  en: mte,
  es: lne,
  fr: Yne,
  hr: Mre,
  it: yae,
  ru: fse
}, hse = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Ase = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Ese = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: hse,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Ase
}, pse = "Nach oben scrollen", Tse = "Nach unten scrollen", mse = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: pse,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Tse
}, Sse = "Scroll top", bse = "Scroll down", Lse = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Sse,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: bse
}, Ise = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", vse = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", yse = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Ise,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: vse
}, gse = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Rse = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Ose = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: gse,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Rse
}, Cse = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Nse = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Dse = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Cse,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Nse
}, Bse = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", wse = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Pse = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Bse,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: wse
}, xse = "Прокрутить наверх", Fse = "Прокрутить вниз", Mse = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: xse,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Fse
}, os = {
  ar: Ese,
  de: mse,
  en: Lse,
  es: yse,
  fr: Ose,
  hr: Dse,
  it: Pse,
  ru: Mse
}, qse = "معالج", $se = "التالي", kse = "الخطوة التالية", Use = "سابق", Hse = "الخطوة السابقة", Vse = "الخطوة الحالية", Wse = "خطأ في الخطوة", Gse = "الخطوة القادمة", Kse = "الخطوة المزار", jse = "تحذير خطوة", zse = "خطوات المعالج", Yse = {
  _A_WIZARD_ARIA_LABEL_: qse,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "الخطوة {{ stepNumber }}:",
  _A_WIZARD_NEXT_: $se,
  _A_WIZARD_NEXT_TITLE_: kse,
  _A_WIZARD_PREVIOUS_: Use,
  _A_WIZARD_PREVIOUS_TITLE_: Hse,
  _A_WIZARD_STEP_ACTIVE_: Vse,
  _A_WIZARD_STEP_ERROR_: Wse,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} من {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: Gse,
  _A_WIZARD_STEP_VISITED_: Kse,
  _A_WIZARD_STEP_WARNING_: jse,
  _A_WIZARD_STEPS_ARIA_LABEL_: zse,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "{{ stepsCount }} من {{ stepActive }} خطوة"
}, Xse = "Wizard", Zse = "Nächste", Jse = "Nächster Schritt", Qse = "Vorherige", eie = "Vorheriger Schritt", tie = "Schritt aktuell", nie = "Schrittfehler", rie = "Schritt bevorstehend", aie = "Schritt besucht", sie = "Schrittwarnung", iie = "Wizard Schritte", lie = {
  _A_WIZARD_ARIA_LABEL_: Xse,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Schritt {{ stepNumber }}:",
  _A_WIZARD_NEXT_: Zse,
  _A_WIZARD_NEXT_TITLE_: Jse,
  _A_WIZARD_PREVIOUS_: Qse,
  _A_WIZARD_PREVIOUS_TITLE_: eie,
  _A_WIZARD_STEP_ACTIVE_: tie,
  _A_WIZARD_STEP_ERROR_: nie,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} von {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: rie,
  _A_WIZARD_STEP_VISITED_: aie,
  _A_WIZARD_STEP_WARNING_: sie,
  _A_WIZARD_STEPS_ARIA_LABEL_: iie,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Schritt {{ stepActive }} von {{ stepsCount }}"
}, oie = "Wizard", uie = "Next", _ie = "Next step", die = "Previous", cie = "Previous step", fie = "Step current", hie = "Step error", Aie = "Step upcoming", Eie = "Step visited", pie = "Step warning", Tie = "Wizard steps", mie = {
  _A_WIZARD_ARIA_LABEL_: oie,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Step {{ stepNumber }}:",
  _A_WIZARD_NEXT_: uie,
  _A_WIZARD_NEXT_TITLE_: _ie,
  _A_WIZARD_PREVIOUS_: die,
  _A_WIZARD_PREVIOUS_TITLE_: cie,
  _A_WIZARD_STEP_ACTIVE_: fie,
  _A_WIZARD_STEP_ERROR_: hie,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} of {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: Aie,
  _A_WIZARD_STEP_VISITED_: Eie,
  _A_WIZARD_STEP_WARNING_: pie,
  _A_WIZARD_STEPS_ARIA_LABEL_: Tie,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Step {{ stepActive }} of {{ stepsCount }}"
}, Sie = "Asistente", bie = "Próximo", Lie = "Siguiente paso", Iie = "Previo", vie = "Paso anterior", yie = "Paso actual", gie = "Error de paso", Rie = "Paso próximo", Oie = "Paso visitado", Cie = "Advertencia de paso", Nie = "Pasos del asistente", Die = {
  _A_WIZARD_ARIA_LABEL_: Sie,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Paso {{ stepNumber }}:",
  _A_WIZARD_NEXT_: bie,
  _A_WIZARD_NEXT_TITLE_: Lie,
  _A_WIZARD_PREVIOUS_: Iie,
  _A_WIZARD_PREVIOUS_TITLE_: vie,
  _A_WIZARD_STEP_ACTIVE_: yie,
  _A_WIZARD_STEP_ERROR_: gie,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} de {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: Rie,
  _A_WIZARD_STEP_VISITED_: Oie,
  _A_WIZARD_STEP_WARNING_: Cie,
  _A_WIZARD_STEPS_ARIA_LABEL_: Nie,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "escenario {{ stepActive }} de {{ stepsCount }}"
}, Bie = "Assistant", wie = "Suivant", Pie = "Étape suivante", xie = "Précédent", Fie = "Étape précédente", Mie = "Étape actuelle", qie = "Erreur de l'étape", $ie = "Étape à venir", kie = "Étape visitée", Uie = "Avertissement de l'étape", Hie = "Étapes de l'assistant", Vie = {
  _A_WIZARD_ARIA_LABEL_: Bie,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Étape {{ stepNumber }} :",
  _A_WIZARD_NEXT_: wie,
  _A_WIZARD_NEXT_TITLE_: Pie,
  _A_WIZARD_PREVIOUS_: xie,
  _A_WIZARD_PREVIOUS_TITLE_: Fie,
  _A_WIZARD_STEP_ACTIVE_: Mie,
  _A_WIZARD_STEP_ERROR_: qie,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} sur {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: $ie,
  _A_WIZARD_STEP_VISITED_: kie,
  _A_WIZARD_STEP_WARNING_: Uie,
  _A_WIZARD_STEPS_ARIA_LABEL_: Hie,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Etape {{ stepActive }} de {{ stepsCount }}"
}, Wie = "Čarobnjak", Gie = "Dalje", Kie = "Sljedeći korak", jie = "Natrag", zie = "Prethodni korak", Yie = "Trenutni korak", Xie = "Pogreška koraka", Zie = "Preostali koraci", Jie = "Posjećeni korak", Qie = "Upozorenje koraka", ele = "Koraci čarobnjaka", tle = {
  _A_WIZARD_ARIA_LABEL_: Wie,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Korak {{ stepNumber }}:",
  _A_WIZARD_NEXT_: Gie,
  _A_WIZARD_NEXT_TITLE_: Kie,
  _A_WIZARD_PREVIOUS_: jie,
  _A_WIZARD_PREVIOUS_TITLE_: zie,
  _A_WIZARD_STEP_ACTIVE_: Yie,
  _A_WIZARD_STEP_ERROR_: Xie,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} od {{stepsCount}}",
  _A_WIZARD_STEP_UPCOMING_: Zie,
  _A_WIZARD_STEP_VISITED_: Jie,
  _A_WIZARD_STEP_WARNING_: Qie,
  _A_WIZARD_STEPS_ARIA_LABEL_: ele,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Korak {{ stepActive }} od {{ stepsCount }}"
}, nle = "Wizard", rle = "Prossimo", ale = "Passo successivo", sle = "Precedente", ile = "Passo precedente", lle = "Passo attuale", ole = "Errore del passo", ule = "Passo successivo", _le = "Passo visitato", dle = "Avvertimento del passo", cle = "Passi dell'assistente", fle = {
  _A_WIZARD_ARIA_LABEL_: nle,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Passo {{ stepNumber }}:",
  _A_WIZARD_NEXT_: rle,
  _A_WIZARD_NEXT_TITLE_: ale,
  _A_WIZARD_PREVIOUS_: sle,
  _A_WIZARD_PREVIOUS_TITLE_: ile,
  _A_WIZARD_STEP_ACTIVE_: lle,
  _A_WIZARD_STEP_ERROR_: ole,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} di {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: ule,
  _A_WIZARD_STEP_VISITED_: _le,
  _A_WIZARD_STEP_WARNING_: dle,
  _A_WIZARD_STEPS_ARIA_LABEL_: cle,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "palcoscenico {{ stepActive }} Di {{ stepsCount }}"
}, hle = "Мастер", Ale = "Следующий", Ele = "Следующий шаг", ple = "Предыдущий", Tle = "Предыдущий шаг", mle = "Шаг актуальный", Sle = "Ошибка шага", ble = "Шаг предстоящий", Lle = "Шаг посещённый", Ile = "Предупреждение шага", vle = "Шаги мастера", yle = {
  _A_WIZARD_ARIA_LABEL_: hle,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Шаг {{ stepNumber }}:",
  _A_WIZARD_NEXT_: Ale,
  _A_WIZARD_NEXT_TITLE_: Ele,
  _A_WIZARD_PREVIOUS_: ple,
  _A_WIZARD_PREVIOUS_TITLE_: Tle,
  _A_WIZARD_STEP_ACTIVE_: mle,
  _A_WIZARD_STEP_ERROR_: Sle,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} из {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: ble,
  _A_WIZARD_STEP_VISITED_: Lle,
  _A_WIZARD_STEP_WARNING_: Ile,
  _A_WIZARD_STEPS_ARIA_LABEL_: vle,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Шаг {{ stepActive }} из {{ stepsCount }}"
}, us = {
  ar: Yse,
  de: lie,
  en: mie,
  es: Die,
  fr: Vie,
  hr: tle,
  it: fle,
  ru: yle
}, gle = "Bytes", Rle = "KB", Ole = "MB", Cle = "GB", Nle = "TB", Dle = "PB", Ble = "EB", wle = "ZB", Ple = "YB", xle = {
  _A_FILE_SIZE_B_: gle,
  _A_FILE_SIZE_KB_: Rle,
  _A_FILE_SIZE_MB_: Ole,
  _A_FILE_SIZE_GB_: Cle,
  _A_FILE_SIZE_TB_: Nle,
  _A_FILE_SIZE_PB_: Dle,
  _A_FILE_SIZE_EB_: Ble,
  _A_FILE_SIZE_ZB_: wle,
  _A_FILE_SIZE_YB_: Ple
}, Fle = "Bytes", Mle = "KB", qle = "MB", $le = "GB", kle = "TB", Ule = "PB", Hle = "EB", Vle = "ZB", Wle = "YB", Gle = {
  _A_FILE_SIZE_B_: Fle,
  _A_FILE_SIZE_KB_: Mle,
  _A_FILE_SIZE_MB_: qle,
  _A_FILE_SIZE_GB_: $le,
  _A_FILE_SIZE_TB_: kle,
  _A_FILE_SIZE_PB_: Ule,
  _A_FILE_SIZE_EB_: Hle,
  _A_FILE_SIZE_ZB_: Vle,
  _A_FILE_SIZE_YB_: Wle
}, Kle = "Bytes", jle = "KB", zle = "MB", Yle = "GB", Xle = "TB", Zle = "PB", Jle = "EB", Qle = "ZB", eoe = "YB", toe = {
  _A_FILE_SIZE_B_: Kle,
  _A_FILE_SIZE_KB_: jle,
  _A_FILE_SIZE_MB_: zle,
  _A_FILE_SIZE_GB_: Yle,
  _A_FILE_SIZE_TB_: Xle,
  _A_FILE_SIZE_PB_: Zle,
  _A_FILE_SIZE_EB_: Jle,
  _A_FILE_SIZE_ZB_: Qle,
  _A_FILE_SIZE_YB_: eoe
}, noe = "Bytes", roe = "KB", aoe = "MB", soe = "GB", ioe = "TB", loe = "PB", ooe = "EB", uoe = "ZB", _oe = "YB", doe = {
  _A_FILE_SIZE_B_: noe,
  _A_FILE_SIZE_KB_: roe,
  _A_FILE_SIZE_MB_: aoe,
  _A_FILE_SIZE_GB_: soe,
  _A_FILE_SIZE_TB_: ioe,
  _A_FILE_SIZE_PB_: loe,
  _A_FILE_SIZE_EB_: ooe,
  _A_FILE_SIZE_ZB_: uoe,
  _A_FILE_SIZE_YB_: _oe
}, coe = "Bytes", foe = "KB", hoe = "MB", Aoe = "GB", Eoe = "TB", poe = "PB", Toe = "EB", moe = "ZB", Soe = "YB", boe = {
  _A_FILE_SIZE_B_: coe,
  _A_FILE_SIZE_KB_: foe,
  _A_FILE_SIZE_MB_: hoe,
  _A_FILE_SIZE_GB_: Aoe,
  _A_FILE_SIZE_TB_: Eoe,
  _A_FILE_SIZE_PB_: poe,
  _A_FILE_SIZE_EB_: Toe,
  _A_FILE_SIZE_ZB_: moe,
  _A_FILE_SIZE_YB_: Soe
}, Loe = "B", Ioe = "KB", voe = "MB", yoe = "GB", goe = "TB", Roe = "PB", Ooe = "EB", Coe = "ZB", Noe = "YB", Doe = {
  _A_FILE_SIZE_B_: Loe,
  _A_FILE_SIZE_KB_: Ioe,
  _A_FILE_SIZE_MB_: voe,
  _A_FILE_SIZE_GB_: yoe,
  _A_FILE_SIZE_TB_: goe,
  _A_FILE_SIZE_PB_: Roe,
  _A_FILE_SIZE_EB_: Ooe,
  _A_FILE_SIZE_ZB_: Coe,
  _A_FILE_SIZE_YB_: Noe
}, Boe = "Bytes", woe = "KB", Poe = "MB", xoe = "GB", Foe = "TB", Moe = "PB", qoe = "EB", $oe = "ZB", koe = "YB", Uoe = {
  _A_FILE_SIZE_B_: Boe,
  _A_FILE_SIZE_KB_: woe,
  _A_FILE_SIZE_MB_: Poe,
  _A_FILE_SIZE_GB_: xoe,
  _A_FILE_SIZE_TB_: Foe,
  _A_FILE_SIZE_PB_: Moe,
  _A_FILE_SIZE_EB_: qoe,
  _A_FILE_SIZE_ZB_: $oe,
  _A_FILE_SIZE_YB_: koe
}, Hoe = "Б", Voe = "КБ", Woe = "МБ", Goe = "ГБ", Koe = "ТБ", joe = "ПБ", zoe = "ЭБ", Yoe = "ЗБ", Xoe = "ИБ", Zoe = {
  _A_FILE_SIZE_B_: Hoe,
  _A_FILE_SIZE_KB_: Voe,
  _A_FILE_SIZE_MB_: Woe,
  _A_FILE_SIZE_GB_: Goe,
  _A_FILE_SIZE_TB_: Koe,
  _A_FILE_SIZE_PB_: joe,
  _A_FILE_SIZE_EB_: zoe,
  _A_FILE_SIZE_ZB_: Yoe,
  _A_FILE_SIZE_YB_: Xoe
}, _s = {
  ar: xle,
  de: Gle,
  en: toe,
  es: doe,
  fr: boe,
  hr: Doe,
  it: Uoe,
  ru: Zoe
}, Joe = "غلق", Qoe = "يكمل", eue = "مواد لكل صفحة", tue = "مزيد من الإجراءات", nue = "التالي", rue = "لا", aue = "سابق", sue = "إزالة المحتوى", iue = "إزالة التحديد", lue = "قائمة البحث", oue = "نعم", uue = {
  "_ADD_NOTIFICATION_{{type}}_": "إضافة إشعار {{ type }}",
  _ALERT_CLOSE_: Joe,
  _CONTINUE_: Qoe,
  _ITEMS_PER_PAGE_: eue,
  _MORE_ACTIONS_: tue,
  _NEXT_: nue,
  _NO_: rue,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ count}} من {{ current }} - {{ start }}",
  _PREVIOUS_: aue,
  _REMOVE_FIELD_CONTENT_: sue,
  _REMOVE_SELECTION_: iue,
  _SEARCH_MENU_: lue,
  _YES_: oue
}, _ue = "Schließen", due = "Fortfahren", cue = "Objekte pro Seite", fue = "Weitere Aktionen", hue = "Nächste", Aue = "Nein", Eue = "Vorherige", pue = "Feldinhalt entfernen", Tue = "Auswahl entfernen", mue = "Menüsuche", Sue = "[Keine Auswahl]", bue = "Ja", Lue = {
  "_ADD_NOTIFICATION_{{type}}_": "Benachrichtigung hinzufügen {{ type }}",
  _ALERT_CLOSE_: _ue,
  _CONTINUE_: due,
  _ITEMS_PER_PAGE_: cue,
  _MORE_ACTIONS_: fue,
  _NEXT_: hue,
  _NO_: Aue,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} von {{ count}}",
  _PREVIOUS_: Eue,
  _REMOVE_FIELD_CONTENT_: pue,
  _REMOVE_SELECTION_: Tue,
  _SEARCH_MENU_: mue,
  _SELECT_TEXT_EMPTY_: Sue,
  _YES_: bue
}, Iue = "Close", vue = "Continue", yue = "Items per page", gue = "more actions", Rue = "Next", Oue = "No", Cue = "Previous", Nue = "Remove field content", Due = "remove selection", Bue = "Search menu", wue = "[No selection]", Pue = "Yes", xue = {
  "_ADD_NOTIFICATION_{{type}}_": "Add Notification {{ type }}",
  _ALERT_CLOSE_: Iue,
  _CONTINUE_: vue,
  _ITEMS_PER_PAGE_: yue,
  _MORE_ACTIONS_: gue,
  _NEXT_: Rue,
  _NO_: Oue,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} from {{ count}}",
  _PREVIOUS_: Cue,
  _REMOVE_FIELD_CONTENT_: Nue,
  _REMOVE_SELECTION_: Due,
  _SEARCH_MENU_: Bue,
  _SELECT_TEXT_EMPTY_: wue,
  _YES_: Pue
}, Fue = "Cerrar", Mue = "Continuar", que = "Artículos por página", $ue = "Otras acciones", kue = "Próximo", Uue = "No", Hue = "Previo", Vue = "Quitar el contenido del campo", Wue = "eliminar selección", Gue = "Menú de búsqueda", Kue = "Sí", jue = {
  "_ADD_NOTIFICATION_{{type}}_": "Agregar Notificación {{ type }}",
  _ALERT_CLOSE_: Fue,
  _CONTINUE_: Mue,
  _ITEMS_PER_PAGE_: que,
  _MORE_ACTIONS_: $ue,
  _NEXT_: kue,
  _NO_: Uue,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} de {{ count}}",
  _PREVIOUS_: Hue,
  _REMOVE_FIELD_CONTENT_: Vue,
  _REMOVE_SELECTION_: Wue,
  _SEARCH_MENU_: Gue,
  _YES_: Kue
}, zue = "Fermer", Yue = "Continuer", Xue = "objets par page", Zue = "autres actions", Jue = "Suivant", Que = "Non", e_e = "Précédent", t_e = "Supprimer le contenu du champ", n_e = "supprimer la sélection", r_e = "Menu de recherche", a_e = "Oui", s_e = {
  "_ADD_NOTIFICATION_{{type}}_": "Ajouter notification {{ type }}",
  _ALERT_CLOSE_: zue,
  _CONTINUE_: Yue,
  _ITEMS_PER_PAGE_: Xue,
  _MORE_ACTIONS_: Zue,
  _NEXT_: Jue,
  _NO_: Que,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} depuis {{ count}}",
  _PREVIOUS_: e_e,
  _REMOVE_FIELD_CONTENT_: t_e,
  _REMOVE_SELECTION_: n_e,
  _SEARCH_MENU_: r_e,
  _YES_: a_e
}, i_e = "Zatvori", l_e = "Nastaviti", o_e = "Stavke po stranici", u_e = "Daljnje akcije", __e = "Sljedeći", d_e = "Ne", c_e = "Prethodni", f_e = "Izbrišite sadržaj polja", h_e = "Ukloniti odabir", A_e = "Pretraživanje izbornika", E_e = "[Bez odabira]", p_e = "Da", T_e = {
  "_ADD_NOTIFICATION_{{type}}_": "Dodaj obavijest {{ type }}",
  _ALERT_CLOSE_: i_e,
  _CONTINUE_: l_e,
  _ITEMS_PER_PAGE_: o_e,
  _MORE_ACTIONS_: u_e,
  _NEXT_: __e,
  _NO_: d_e,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} iz {{ count}}",
  _PREVIOUS_: c_e,
  _REMOVE_FIELD_CONTENT_: f_e,
  _REMOVE_SELECTION_: h_e,
  _SEARCH_MENU_: A_e,
  _SELECT_TEXT_EMPTY_: E_e,
  _YES_: p_e
}, m_e = "Vicino", S_e = "Continua", b_e = "oggetti per pagina", L_e = "Ulteriori azioni", I_e = "Prossimo", v_e = "No", y_e = "Precedente", g_e = "Rimuovi il contenuto del campo", R_e = "rimuovere la selezione", O_e = "Menù di ricerca", C_e = "Sì", N_e = {
  "_ADD_NOTIFICATION_{{type}}_": "Aggiungi notifica {{ type }}",
  _ALERT_CLOSE_: m_e,
  _CONTINUE_: S_e,
  _ITEMS_PER_PAGE_: b_e,
  _MORE_ACTIONS_: L_e,
  _NEXT_: I_e,
  _NO_: v_e,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} da {{ count}}",
  _PREVIOUS_: y_e,
  _REMOVE_FIELD_CONTENT_: g_e,
  _REMOVE_SELECTION_: R_e,
  _SEARCH_MENU_: O_e,
  _YES_: C_e
}, D_e = "Закрыть", B_e = "Продолжать", w_e = "Элементов на странице", P_e = "Дальнейшие действия", x_e = "Следующий", F_e = "Нет", M_e = "Предыдущий", q_e = "Удалить содержимое поля", $_e = "удалить выделение", k_e = "Быстрый поиск", U_e = "поиск в меню", H_e = "[Нет элементов]", V_e = "Да", W_e = {
  "_ADD_NOTIFICATION_{{type}}_": "Добавить Уведомление {{ type }}",
  _ALERT_CLOSE_: D_e,
  _CONTINUE_: B_e,
  _ITEMS_PER_PAGE_: w_e,
  _MORE_ACTIONS_: P_e,
  _NEXT_: x_e,
  _NO_: F_e,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} из {{ count}}",
  _PREVIOUS_: M_e,
  _REMOVE_FIELD_CONTENT_: q_e,
  _REMOVE_SELECTION_: $_e,
  _SCHNELLSUCHE_: k_e,
  _SEARCH_MENU_: U_e,
  _SELECT_TEXT_EMPTY_: H_e,
  _YES_: V_e
}, G_e = {
  ...uue,
  ...as.ar,
  ...Ua.ar,
  ...es.ar,
  ...qa.ar,
  ...rs.ar,
  ...ls.ar,
  ...Ha.ar,
  ...Ya.ar,
  ...Ga.ar,
  ...ja.ar,
  ...Va.ar,
  ...us.ar,
  ...Ja.ar,
  ...ka.ar,
  ...Za.ar,
  ...os.ar,
  ..._s.ar,
  ...Qa.ar,
  ...za.ar,
  ...is.ar,
  ...ss.ar,
  ...Xa.ar,
  ...$a.ar,
  ...ts.ar,
  ...Ka.ar,
  ...Wa.ar,
  ...ns.ar
}, K_e = {
  ...Lue,
  ...as.de,
  ...Ua.de,
  ...es.de,
  ...qa.de,
  ...rs.de,
  ...ls.de,
  ...Ha.de,
  ...Ya.de,
  ...Ga.de,
  ...ja.de,
  ...Va.de,
  ...us.de,
  ...Ja.de,
  ...ka.de,
  ...Za.de,
  ...os.de,
  ..._s.de,
  ...Qa.de,
  ...za.de,
  ...is.de,
  ...ss.de,
  ...Xa.de,
  ...$a.de,
  ...ts.de,
  ...Ka.de,
  ...Wa.de,
  ...ns.de
}, j_e = {
  ...xue,
  ...as.en,
  ...Ua.en,
  ...es.en,
  ...qa.en,
  ...rs.en,
  ...ls.en,
  ...Ha.en,
  ...Ya.en,
  ...Ga.en,
  ...ja.en,
  ...Va.en,
  ...us.en,
  ...Ja.en,
  ...ka.en,
  ...Za.en,
  ...os.en,
  ..._s.en,
  ...Qa.en,
  ...za.en,
  ...is.en,
  ...ss.en,
  ...Xa.en,
  ...$a.en,
  ...ts.en,
  ...Ka.en,
  ...Wa.en,
  ...ns.en
}, z_e = {
  ...jue,
  ...as.es,
  ...Ua.es,
  ...es.es,
  ...qa.es,
  ...rs.es,
  ...ls.es,
  ...Ha.es,
  ...Ya.es,
  ...Ga.es,
  ...ja.es,
  ...Va.es,
  ...us.es,
  ...Ja.es,
  ...ka.es,
  ...Za.es,
  ...os.es,
  ..._s.es,
  ...Qa.es,
  ...za.es,
  ...is.es,
  ...ss.es,
  ...Xa.es,
  ...$a.es,
  ...ts.es,
  ...Ka.es,
  ...Wa.es,
  ...ns.es
}, Y_e = {
  ...s_e,
  ...as.fr,
  ...Ua.fr,
  ...es.fr,
  ...qa.fr,
  ...rs.fr,
  ...ls.fr,
  ...Ha.fr,
  ...Ya.fr,
  ...Ga.fr,
  ...ja.fr,
  ...Va.fr,
  ...us.fr,
  ...Ja.fr,
  ...ka.fr,
  ...Za.fr,
  ...os.fr,
  ..._s.fr,
  ...Qa.fr,
  ...za.fr,
  ...is.fr,
  ...ss.fr,
  ...Xa.fr,
  ...$a.fr,
  ...ts.fr,
  ...Ka.fr,
  ...Wa.fr,
  ...ns.fr
}, X_e = {
  ...T_e,
  ...as.hr,
  ...Ua.hr,
  ...es.hr,
  ...qa.hr,
  ...rs.hr,
  ...ls.hr,
  ...Ha.hr,
  ...Ya.hr,
  ...Ga.hr,
  ...ja.hr,
  ...Va.hr,
  ...us.hr,
  ...Ja.hr,
  ...ka.hr,
  ...Za.hr,
  ...os.hr,
  ..._s.hr,
  ...Qa.hr,
  ...za.hr,
  ...is.hr,
  ...ss.hr,
  ...Xa.hr,
  ...$a.hr,
  ...ts.hr,
  ...Ka.hr,
  ...Wa.hr,
  ...ns.hr
}, Z_e = {
  ...N_e,
  ...as.it,
  ...Ua.it,
  ...es.it,
  ...qa.it,
  ...rs.it,
  ...ls.it,
  ...Ha.it,
  ...Ya.it,
  ...Ga.it,
  ...ja.it,
  ...Va.it,
  ...us.it,
  ...Ja.it,
  ...ka.it,
  ...Za.it,
  ...os.it,
  ..._s.it,
  ...Qa.it,
  ...za.it,
  ...is.it,
  ...ss.it,
  ...Xa.it,
  ...$a.it,
  ...ts.it,
  ...Ka.it,
  ...Wa.it,
  ...ns.it
}, J_e = {
  ...W_e,
  ...as.ru,
  ...Ua.ru,
  ...es.ru,
  ...qa.ru,
  ...rs.ru,
  ...ls.ru,
  ...Ha.ru,
  ...Ya.ru,
  ...Ga.ru,
  ...ja.ru,
  ...Va.ru,
  ...us.ru,
  ...Ja.ru,
  ...ka.ru,
  ...Za.ru,
  ...os.ru,
  ..._s.ru,
  ...Qa.ru,
  ...za.ru,
  ...is.ru,
  ...ss.ru,
  ...Xa.ru,
  ...$a.ru,
  ...ts.ru,
  ...Ka.ru,
  ...Wa.ru,
  ...ns.ru
}, zde = {
  ar: G_e,
  de: K_e,
  en: j_e,
  es: z_e,
  fr: Y_e,
  hr: X_e,
  it: Z_e,
  ru: J_e
};
export {
  ade as AAccordion,
  Ic as AAlert,
  sde as AAlertPlugin,
  ft as AButton,
  _1 as ACheckbox,
  qa as ACheckboxI18n,
  $c as ACheckboxRadioGroups,
  ul as ACloak,
  $a as ACloakI18n,
  ode as ACloakPlugin,
  sf as AConfirmAPI,
  ni as ADatepicker,
  g1 as ADatepickerRange,
  ka as ADatepickerRangeI18n,
  fde as ADisclosure,
  Ua as ADisclosureI18n,
  sa as ADropdown,
  Sm as ADropdownGlobalAPI,
  me as AElement,
  X1 as AErrors,
  sn as AErrorsText,
  Jq as AEventOutsideAPI,
  Bm as AFieldset,
  Ha as AFieldsetI18n,
  pde as AFilters,
  Hn as AFiltersAPI,
  PF as AFiltersAPI_additionFilters,
  tk as AFiltersHorizontal,
  Va as AFiltersI18n,
  Fde as AFiltersPlugin,
  I$ as AFiltersRight,
  Pu as AForm,
  xu as AFormElementBtnClear,
  ln as AFormHelpText,
  Ede as AFormPlugin,
  vr as AFormPluginOptions,
  Vn as AFormReadonly,
  Gd as AGet,
  xm as AGroup,
  Kd as AGroupButtonDropdown,
  Tde as AGroupButtonDropdownPlugin,
  zM as AHttpAPI,
  pm as AHttpAPI_API_CONFIG,
  GM as AHttpAPI_abortHttp,
  qs as AHttpAPI_callHttpRequestAndCheckSavedApi,
  KM as AHttpAPI_clearAllApiSaved,
  jM as AHttpAPI_clearApiSaved,
  t1 as AHttpAPI_deleteHttp,
  YM as AHttpAPI_getHttp,
  XM as AHttpAPI_getListHttp,
  ZM as AHttpAPI_getOptionsHttp,
  _de as AHttpAPI_getUrlParams,
  e1 as AHttpAPI_patchHttp,
  JM as AHttpAPI_postHttp,
  QM as AHttpAPI_putHttp,
  HM as AHttpAPI_setBaseUrl,
  VM as AHttpAPI_setErrorCallbacks,
  WM as AHttpAPI_setHeaderParams,
  a1 as AHttpAPI_setUrlForArray,
  r1 as AHttpAPI_setUrlWithParams,
  Mde as AHttpPlugin,
  ide as AI18nPlugin,
  ut as AIcon,
  lde as AIconPlugin,
  mde as AInfiniteScroll,
  In as AInput,
  oq as AInputCurrency,
  Wa as AInputCurrencyI18n,
  qde as AInputCurrencyPlugin,
  nn as AInputCurrencyPluginOptions,
  fq as AInputFile,
  Ga as AInputI18n,
  Ba as AInputNumber,
  Ka as AInputNumberI18n,
  $de as AInputNumberPlugin,
  fn as AInputNumberPluginOptions,
  Oo as AInputNumberRange,
  ja as AInputNumberRangeI18n,
  Bq as AJson,
  za as AJsonI18n,
  EU as AKeyChildren,
  Ke as AKeyId,
  St as AKeyLabel,
  hl as AKeyParent,
  X as AKeysCode,
  Mt as ALabel,
  Fu as ALink,
  Sde as ALinkCopy,
  Ya as ALinkCopyI18n,
  Bk as AList,
  Um as ALoading,
  Xa as ALoadingI18n,
  bde as ALoadingPlugin,
  Lde as AMenu,
  Za as AMenu2I18n,
  Pk as AMenuButtonToggle,
  Vm as AMenuButtonToggle_ToggleAPI,
  En as AMobileAPI,
  jo as AMobileAPI_isMobileWidth,
  Bo as AMobileAPI_setIsMobileWidth,
  Ude as AMobilePlugin,
  Mu as AModal,
  vde as AModalConfirm,
  WU as AModalForm,
  Ja as AModalI18n,
  Ide as AModalPlugin,
  yde as AModalWizard,
  gde as ANotification,
  wu as ANotificationAPI,
  H$ as ANotificationAPI_addNotification,
  U$ as ANotificationAPI_setNotificationTimeout,
  ol as AOnHooks,
  Du as AOneCheckbox,
  Rde as APageTabTitle,
  LH as APageTabTitleAPI,
  IH as APageTabTitleAPI_setBaseTitle,
  Hde as APageTabTitlePlugin,
  FH as APagination,
  Qa as APaginationI18n,
  gr as APlacements,
  nf as APopupAPI,
  Wd as APopupAPI_closePopup,
  fd as APopupAPI_isCurrentPopupOpen,
  Vd as APopupAPI_openPopup,
  F1 as APopupAPI_togglePopup,
  Ode as AProgress,
  Cde as AProgressCircle,
  Cm as ARadio,
  es as ARadioI18n,
  Nde as ARate,
  hk as ARequired,
  ts as ARequiredI18n,
  VH as AResizer,
  Wq as ARouterLinkConfig,
  ns as ARouterLinkConfigI18n,
  Vde as ARouterLinkConfigPlugin,
  zt as ARouterLinkConfigPluginOptions,
  an as ASafeHtml,
  Dde as AScale,
  cl as ASelect,
  rs as ASelectI18n,
  Ade as ASelectPlugin,
  Bde as AShowMore,
  as as AShowMoreI18n,
  fl as ASpinner,
  ss as ASpinnerI18n,
  ude as ASpinnerPlugin,
  Nm as ASwitch,
  is as ASwitchI18n,
  Pde as ATable,
  ls as ATableI18n,
  wde as ATablePlugin,
  xde as ATabs,
  a$ as ATemplate,
  c$ as ATextarea,
  rF as ATooltip,
  Ae as ATranslation,
  Ma as AUiTypes_typesContainer,
  J1 as AUiTypes_typesLabelProps,
  rf as AUiTypes_typesModelArray,
  bm as AUiTypes_typesModelObject,
  Z1 as AUiTypes_typesWithData,
  cU as AVerticalScroll,
  os as AVerticalScrollI18n,
  TH as AWizard,
  us as AWizardI18n,
  kde as AlohaPlugin,
  Rt as EventBus,
  _s as Filters18n,
  Hc as UIDataGroupAPI,
  Ct as UIExcludeRenderAttributesAPI,
  Yt as UiAPI,
  qu as UiClearButtonAPI,
  Wc as UiCollapseAPI,
  Yc as UiDataFromServerAPI,
  Xc as UiDataSortAPI,
  Zc as UiDataWatchEmitAPI,
  Jc as UiDataWithKeyIdAndLabelAPI,
  Dl as UiDisabledAPI,
  of as UiInputAutofillAPI,
  uf as UiLabelClickEventBusAPI,
  Qc as UiLoadingAPI,
  ef as UiSearchAPI,
  Xt as UiStyleHideAPI,
  pd as colorToHex,
  ko as concatTwoStringsWithSpace,
  tde as dompurify,
  EF as filterBoolean,
  pF as filterCapitalize,
  TF as filterCurrency,
  mF as filterDate,
  SF as filterDefaultForEmpty,
  bF as filterEmail,
  LF as filterEscapeHtml,
  IF as filterFileSize,
  Qi as filterFloat,
  vF as filterJson,
  yF as filterKeyValue,
  gF as filterLimitTo,
  RF as filterLink,
  Jo as filterList,
  CF as filterLowerCase,
  NF as filterMask,
  DF as filterPropertyByValue,
  BF as filterSearchHighlight,
  wF as filterUpperCase,
  N1 as focusableList,
  Ai as focusableSelector,
  UP as getTotalNestedCount,
  Bt as getTranslatedText,
  cde as getUniqueSelector,
  jde as hexToRgb,
  ST as i18n,
  G_e as i18nAR,
  zde as i18nAll,
  K_e as i18nDE,
  j_e as i18nEN,
  z_e as i18nES,
  Y_e as i18nFR,
  X_e as i18nHR,
  Z_e as i18nIT,
  J_e as i18nRU,
  $P as isArrayOfArrays,
  rde as isArrayOfStrings,
  sq as isEven,
  hde as isOdd,
  Da as isPlaceholderTranslate,
  li as isTranslate,
  Gde as mixBlack,
  fS as mixColor,
  Wde as mixWhite,
  Kde as rgbToHex,
  nde as sanitize,
  Ko as sanitizeLocal,
  dde as scrollToElement,
  aa as setFocusToElement,
  D1 as setFocusToNextFocusableElement,
  B1 as setFocusToPreviousFocusableElement,
  IT as setI18n,
  vT as setLanguage,
  vc as timeTranslationLastChanged,
  Uo as toPrecision,
  rx as toggleTranslate,
  LT as translation,
  yT as updateTranslation
};
