{
  "_A_INPUT_CURRENCY_COMPONENT_DESCRIPTION_": "The <strong lang=\"en\">AInputCurrency</strong> component provides the ability to input and format currency values. The component supports various options, such as currency symbol management, selection of separators, and automatic rounding of numbers.",
  "_A_INPUT_CURRENCY_COMPONENT_NAME_": "Currency input field",
  "_A_INPUT_CURRENCY_GROUP_CONTROLS_TYPE_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">controls-type</strong> to configure the display of control elements in the input field. In the first field, control elements are disabled, while in the second, '+' and '-' buttons are used to increase or decrease the value. This allows selecting the most appropriate way to control the value depending on the requirements.",
  "_A_INPUT_CURRENCY_GROUP_CONTROLS_TYPE_HEADER_": "Types of control elements",
  "_A_INPUT_CURRENCY_GROUP_DECIMAL_DIVIDER_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">decimal-divider</strong> to configure the decimal separator in the input field. In the first field, a comma <strong>','</strong> is used as the separator, while in the second, a period <strong>'.'</strong> is used. This allows selecting the appropriate format for displaying decimal values depending on regional settings or user preferences. Important: The decimal separator and the thousands separator must be different.",
  "_A_INPUT_CURRENCY_GROUP_DECIMAL_DIVIDER_HEADER_": "Decimal separator",
  "_A_INPUT_CURRENCY_GROUP_DECIMAL_PART_LENGTH_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">decimal-part-length</strong> to set the number of digits after the decimal separator in the <strong lang=\"en\">AInputCurrency</strong> component. In the first case, the length of the decimal part is set to <strong>0</strong>, meaning no decimal part is displayed. In the second example, the length is set to <strong>1</strong>, allowing one digit after the decimal point. In the following examples, the length of the decimal part is set to <strong>2</strong> and <strong>4</strong>, allowing more precise display of decimal values.",
  "_A_INPUT_CURRENCY_GROUP_DECIMAL_PART_LENGTH_HEADER_": "Decimal part length",
  "_A_INPUT_CURRENCY_GROUP_MAX_MIN_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">max</strong> and <strong lang=\"en\">min</strong> to limit the values that can be entered in the field. In the first field, input is limited to a range from <strong>1</strong> to <strong>20</strong>, while in the second, it is limited to a range from <strong>-10.05</strong> to <strong>19.05</strong>. These properties help control the allowable range of input numbers.",
  "_A_INPUT_CURRENCY_GROUP_MAX_MIN_HEADER_": "Max and min limits",
  "_A_INPUT_CURRENCY_GROUP_MODEL_TYPE_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">model-type</strong> to define the type of data that will be stored in the model. In the first case, the value is stored as a <strong lang=\"en\">number</strong>, while in the second, it is stored as a <strong lang=\"en\">string</strong>. This property allows flexible management of the data type in the model depending on the application's requirements.",
  "_A_INPUT_CURRENCY_GROUP_MODEL_TYPE_HEADER_": "Model type",
  "_A_INPUT_CURRENCY_GROUP_STEP_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">step</strong> to set the step value in the <strong lang=\"en\">AInputCurrency</strong> component. In the first case, the step is set to <strong>2</strong>, allowing the value to be increased or decreased by <strong>2</strong> units at a time. In the second case, the step is set to <strong>0.01</strong>, allowing more precise control of the value using control buttons. This property is useful for setting the precision of numerical data entry.",
  "_A_INPUT_CURRENCY_GROUP_STEP_HEADER_": "Value change step",
  "_A_INPUT_CURRENCY_GROUP_SYMBOL_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">currency-symbol</strong> and <strong lang=\"en\">currency-symbol-position</strong> to display the currency symbol in the input field. In the first field, the <strong>'%'</strong> symbol is displayed to the right of the entered value. In the second and third fields, the <strong>'$'</strong> symbol is displayed to the left of the value. This allows flexible customization of currency symbol display depending on the requirements.",
  "_A_INPUT_CURRENCY_GROUP_SYMBOL_HEADER_": "Currency symbols and their positions",
  "_A_INPUT_CURRENCY_GROUP_THOUSAND_DIVIDER_DESCRIPTION_": "This example demonstrates how to use the <strong lang=\"en\">thousand-divider</strong> property to set the thousands separator in the <strong lang=\"en\">AInputCurrency</strong> component. In the first case, a comma <strong>','</strong> is used as the thousands separator. In the second example, a period <strong>'.'</strong> is used as the separator. In the third example, a space <strong>' '</strong> is used as the separator, while in the last example, there is no separator, allowing numbers to be displayed without thousands separation. Important: The decimal separator and the thousands separator must be different.",
  "_A_INPUT_CURRENCY_GROUP_THOUSAND_DIVIDER_HEADER_": "Thousands separator",
  "_A_INPUT_CURRENCY_GROUP_VALIDATION_ON_CHANGE_DESCRIPTION_": "This example demonstrates how to use <strong lang=\"en\">validation-on-change</strong> in the <strong lang=\"en\">AInputCurrency</strong> component. In the first example, value validation is not performed with each change, as <strong lang=\"en\">validation-on-change</strong> is set to <strong>false</strong>. In the second example, when <strong lang=\"en\">validation-on-change</strong> is set to <strong>true</strong>, the entered values are validated immediately upon change.",
  "_A_INPUT_CURRENCY_GROUP_VALIDATION_ON_CHANGE_HEADER_": "Validation on change",
  "_A_INPUT_CURRENCY_PROPS_CONTROLS_TYPE_DESCRIPTION_": "Defines the type of control elements that will be displayed next to the input field. Possible values are: <strong lang=\"en\">plus-minus</strong> (increment and decrement buttons), <strong lang=\"en\">arrows</strong> (arrows for changing values), or <strong lang=\"en\">none</strong> (no control elements).",
  "_A_INPUT_CURRENCY_PROPS_CURRENCY_SYMBOL_DESCRIPTION_": "Specifies the currency symbol that will be displayed in the input field, such as <strong>$</strong>, <strong>€</strong>, or <strong>₽</strong>.",
  "_A_INPUT_CURRENCY_PROPS_CURRENCY_SYMBOL_POSITION_DESCRIPTION_": "Determines the position of the currency symbol relative to the entered value. Possible values are: <strong lang=\"en\">left</strong> (to the left of the value) or <strong lang=\"en\">right</strong> (to the right of the value).",
  "_A_INPUT_CURRENCY_PROPS_DECIMAL_DIVIDER_DESCRIPTION_": "Specifies the symbol that will be used as the decimal separator. Possible values are <strong>.</strong> (period) or <strong>,</strong> (comma).",
  "_A_INPUT_CURRENCY_PROPS_DECIMAL_PART_LENGTH_DESCRIPTION_": "Defines the number of digits after the decimal separator that will be displayed in the value.",
  "_A_INPUT_CURRENCY_PROPS_INPUT_WIDTH_DESCRIPTION_": "Sets the width of the input field. The value can be specified in pixels or percentages.",
  "_A_INPUT_CURRENCY_PROPS_MAX_DESCRIPTION_": "Specifies the maximum value that can be entered in the field.",
  "_A_INPUT_CURRENCY_PROPS_MIN_DESCRIPTION_": "Specifies the minimum value that can be entered in the field.",
  "_A_INPUT_CURRENCY_PROPS_MODEL_TYPE_DESCRIPTION_": "Determines the type of data that will be stored in the model. Possible values are <strong lang=\"en\">number</strong> (numeric value) or <strong lang=\"en\">string</strong> (string value).",
  "_A_INPUT_CURRENCY_PROPS_THOUSAND_DIVIDER_DESCRIPTION_": "Specifies the symbol used for separating thousands in the value. Possible values are <strong>.</strong> (period), <strong>,</strong> (comma), or an empty string (no separator).",
  "_A_INPUT_CURRENCY_PROPS_VALIDATION_ON_CHANGE_DESCRIPTION_": "If set to <strong lang=\"en\">true</strong>, validation of the entered value will be performed with each change in the field."
}