"use strict";(self.webpackChunkaloha_vue_docs=self.webpackChunkaloha_vue_docs||[]).push([[187],{1566:(l,e,i)=>{i.d(e,{Z:()=>n});var t=i(798);const a={name:"PageFilterTest",components:{AlohaExample:i(5360).Z},props:{test:{type:String,required:!0}}},n=(0,i(3744).Z)(a,[["render",function(l,e){const i=(0,t.up)("aloha-example");return(0,t.wg)(),(0,t.j4)(i,{"code-js":l.test,header:"_PAGE_FUNCTIONS_TESTS_HEADER_","is-code-visible-default":!1},null,8,["code-js"])}]])},4135:(l,e,i)=>{i.r(e),i.d(e,{default:()=>F});var t=i(798),a=i(9752),n=i(9731),s=i(4685),r=i(1361),o=i(7129),L=i(5360),b=i(2981);const u={name:"PageFilterListIsHtml",components:{AlohaExample:L.Z},setup(){const{codeJs:l}={codeJs:`const ITEMS = ["label 1", "label 2", "label 3"];\n\nfilterList(ITEMS, {\n  isHtml: false,\n  isSimpleArray: true,\n});\n// ${(0,b.Z)(["label 1","label 2","label 3"],{isHtml:!1,isSimpleArray:!0})}`};return{codeJs:l}}};var c=i(3744);const p=(0,c.Z)(u,[["render",function(l,e){const i=(0,t.up)("aloha-example");return(0,t.wg)(),(0,t.j4)(i,{"code-js":l.codeJs,header:"isHtml=false","is-code-visible-default":!0},null,8,["code-js"])}]]),d={name:"PageFilterListIsSimpleArray",components:{AlohaExample:L.Z},setup(){const{codeJs:l}={codeJs:`const ITEMS = ["label 1", "label 2", "label 3"];\n\nfilterList(ITEMS, {\n  isSimpleArray: true,\n});\n// ${(0,b.Z)(["label 1","label 2","label 3"],{isSimpleArray:!0})}`};return{codeJs:l}}},m=(0,c.Z)(d,[["render",function(l,e){const i=(0,t.up)("aloha-example");return(0,t.wg)(),(0,t.j4)(i,{"code-js":l.codeJs,header:"isSimpleArray=true","is-code-visible-default":!0},null,8,["code-js"])}]]),_={name:"PageFilterListIsSimpleArrayTree",components:{AlohaExample:L.Z},setup(){const{codeJs:l}={codeJs:`const ITEMS = [\n  "Level 1",\n    [\n      "Level 2",\n      [\n        "Level 2.1",\n        "Level 2.2",\n      ],\n    ],\n    [\n      "Level 3",\n      [\n        "Level 3.1",\n        [\n          "Level 3.2",\n          [\n            "Level 3.2.1",\n            "Level 3.2.2",\n          ],\n        ],\n      ],\n    ],\n  ];\n\nfilterList(ITEMS, {\n  isSimpleArray: true,\n});\n// ${(0,b.Z)(["Level 1",["Level 2",["Level 2.1","Level 2.2"]],["Level 3",["Level 3.1",["Level 3.2",["Level 3.2.1","Level 3.2.2"]]]]],{isSimpleArray:!0})}\n\nfilterList([["x1", ["x1.1", "x1.2"]], { isSimpleArray: true })\n// ${(0,b.Z)([["x1",["x1.1","x1.2"]]],{isSimpleArray:!0})}\n\nfilterList(["x0", ["x1", ["x1.1", "x1.2"]], "x3"], { isSimpleArray: true })\n// ${(0,b.Z)(["x0",["x1",["x1.1","x1.2"]],"x3"],{isSimpleArray:!0})}`};return{codeJs:l}}},v=(0,c.Z)(_,[["render",function(l,e){const i=(0,t.up)("aloha-example");return(0,t.wg)(),(0,t.j4)(i,{"code-js":l.codeJs,header:"_PAGE_FILTER_LIST_IS_SIMPLE_ARRAY_TREE_HEADER_","is-code-visible-default":!0},null,8,["code-js"])}]]),y={name:"PageFilterListKeyChildren",components:{AlohaExample:L.Z},setup(){const{codeJs:l}={codeJs:`const ITEMS = [\n  {\n    label: "Level 1",\n    children: [\n      {\n        label: "Level 1.1",\n        children: [\n          {\n            label: "Level 1.1.1",\n          },\n          {\n            label: "Level 1.1.2",\n          },\n        ],\n      },\n      {\n        label: "Level 1.2",\n      },\n    ],\n  },\n  {\n    label: "Level 2",\n    children: [\n      {\n        label: "Level 2.1",\n      },\n      {\n        label: "Level 2.2",\n      },\n    ],\n  },\n];\n\nfilterList(ITEMS, {\n  keyLabel: "label",\n  keyChildren: "children",\n});\n// ${(0,b.Z)([{label:"Level 1",children:[{label:"Level 1.1",children:[{label:"Level 1.1.1"},{label:"Level 1.1.2"}]},{label:"Level 1.2"}]},{label:"Level 2",children:[{label:"Level 2.1"},{label:"Level 2.2"}]}],{keyLabel:"label",keyChildren:"children"})}`};return{codeJs:l}}},S=(0,c.Z)(y,[["render",function(l,e){const i=(0,t.up)("aloha-example");return(0,t.wg)(),(0,t.j4)(i,{"code-js":l.codeJs,header:"keyChildren","is-code-visible-default":!0},null,8,["code-js"])}]]),f={name:"PageFilterListKeyLabel",components:{AlohaExample:L.Z},setup(){const{codeJs:l}={codeJs:`const ITEMS = [\n  {\n    label: "label 1",\n  },\n  {\n    label: "label 2",\n  },\n  {\n    label: "label 3",\n  },\n  {\n    label: "label 4",\n  },\n];\n\nfilterList(ITEMS, {\n  keyLabel: "label",\n});\n// ${(0,b.Z)([{label:"label 1"},{label:"label 2"},{label:"label 3"},{label:"label 4"}],{keyLabel:"label"})}`};return{codeJs:l}}},x=(0,c.Z)(f,[["render",function(l,e){const i=(0,t.up)("aloha-example");return(0,t.wg)(),(0,t.j4)(i,{"code-js":l.codeJs,header:"keyLabel","is-code-visible-default":!0},null,8,["code-js"])}]]),A={name:"PageFilterListKeyLabelCallback",components:{AlohaExample:L.Z},setup(){const{codeJs:l}={codeJs:`const ITEMS = [\n  {\n    label: "label 1",\n  },\n  {\n    label: "label 2",\n  },\n  {\n    label: "label 3",\n  },\n  {\n    label: "label 4",\n  },\n];\n\nconst keyLabelCallback = ({ item }) => {\n  return \`+ \${ item.label }\`;\n};\n\nfilterList(ITEMS, {\n  keyLabelCallback,\n});\n// ${(0,b.Z)([{label:"label 1"},{label:"label 2"},{label:"label 3"},{label:"label 4"}],{keyLabelCallback:({item:l})=>`+ ${l.label}`})}`};return{codeJs:l}}},h=(0,c.Z)(A,[["render",function(l,e){const i=(0,t.up)("aloha-example");return(0,t.wg)(),(0,t.j4)(i,{"code-js":l.codeJs,header:"keyLabelCallback","is-code-visible-default":!0},null,8,["code-js"])}]]),T={name:"PageFilterListListClass",components:{AlohaExample:L.Z},setup(){const{codeJs:l}={codeJs:`const ITEMS = ["label 1", "label 2", "label 3"];\n\nfilterList(ITEMS, {\n  listClass: "a_list_without_styles",\n  isSimpleArray: true,\n});\n// ${(0,b.Z)(["label 1","label 2","label 3"],{listClass:"a_list_without_styles",isSimpleArray:!0})}`};return{codeJs:l}}},g=(0,c.Z)(T,[["render",function(l,e){const i=(0,t.up)("aloha-example");return(0,t.wg)(),(0,t.j4)(i,{"code-js":l.codeJs,header:"listClass","is-code-visible-default":!0},null,8,["code-js"])}]]),E={name:"PageFilterListSeparator",components:{AlohaExample:L.Z},setup(){const{codeJs:l}={codeJs:`const ITEMS = ["label 1", "label 2", "label 3"];\n\nfilterList(ITEMS, {\n  isHtml: false,\n  isSimpleArray: true,\n  separator: "; ",\n});\n// ${(0,b.Z)(["label 1","label 2","label 3"],{isHtml:!1,isSimpleArray:!0,separator:"; "})}`};return{codeJs:l}}},I=(0,c.Z)(E,[["render",function(l,e){const i=(0,t.up)("aloha-example");return(0,t.wg)(),(0,t.j4)(i,{"code-js":l.codeJs,header:"separator","is-code-visible-default":!0},null,8,["code-js"])}]]),k={name:"PageFilterListTag",components:{AlohaExample:L.Z},setup(){const{codeJs:l}={codeJs:`const ITEMS = ["label 1", "label 2", "label 3"];\n\nfilterList(ITEMS, {\n  tag: "ol",\n  isSimpleArray: true,\n});\n// ${(0,b.Z)(["label 1","label 2","label 3"],{tag:"ol",isSimpleArray:!0})}`};return{codeJs:l}}},C=(0,c.Z)(k,[["render",function(l,e){const i=(0,t.up)("aloha-example");return(0,t.wg)(),(0,t.j4)(i,{"code-js":l.codeJs,header:"tag","is-code-visible-default":!0},null,8,["code-js"])}]]);var P=i(1566);const Z={name:"PageFilterList",components:{AlohaPage:a.Z,ATranslation:n.Z,PageFilterArguments:s.Z,PageFilterImportCompositionApi:r.Z,PageFilterImportFunction:o.Z,PageFilterListIsHtml:p,PageFilterListIsSimpleArray:m,PageFilterListIsSimpleArrayTree:v,PageFilterListKeyChildren:S,PageFilterListKeyLabel:x,PageFilterListKeyLabelCallback:h,PageFilterListListClass:g,PageFilterListSeparator:I,PageFilterListTag:C,PageFilterTest:P.Z},setup(){const{pageTitle:l}={pageTitle:"filterList"},{argumentsText:e}={argumentsText:[{value:"array",types:["Array"],text:"_PAGE_FILTER_LIST_ARGUMENTS_ARRAY_"},{value:"[isHtml=true]",types:["Boolean"],text:"_PAGE_FILTER_LIST_ARGUMENTS_IS_HTML_"},{value:"[isSimpleArray=false]",types:["Boolean"],text:"_PAGE_FILTER_LIST_ARGUMENTS_IS_SIMPLE_ARRAY_"},{value:'[keyChildren=""]',types:["String"],text:"_PAGE_FILTER_LIST_ARGUMENTS_KEY_CHILDREN_"},{value:'[keyLabel=""]',types:["String"],text:"_PAGE_FILTER_LIST_ARGUMENTS_KEY_LABEL_"},{value:"[keyLabelCallback]",types:["Function"],text:"_PAGE_FILTER_LIST_ARGUMENTS_KEY_LABEL_CALLBACK_"},{value:'[listClass=""]',types:["String"],text:"_PAGE_FILTER_LIST_ARGUMENTS_LIST_CLASS_"},{value:'[separator=", "]',types:["String"],text:"_PAGE_FILTER_LIST_ARGUMENTS_SEPARATOR_"},{value:'[tag="ul"]',types:["String"],text:"_PAGE_FILTER_LIST_ARGUMENTS_TAG_"}]};return{argumentsText:e,pageTitle:l,test:'import filterList from "../filterList";\n\ndescribe("filterList", () => {\n  test("isSimpleArray=true", () => {\n    expect(filterList(["label 1", "label 2", "label 3"])).toBe("<ul><li>label 1</li><li>label 2</li><li>label 3</li></ul>");\n    expect(filterList(["label 1", "label 2", "label 3"], { isSimpleArray: true })).toBe("<ul><li>label 1</li><li>label 2</li><li>label 3</li></ul>");\n    expect(filterList(["label 1"])).toBe("<ul><li>label 1</li></ul>");\n    expect(filterList([])).toBe("");\n  });\n\n  test("keyLabel", () => {\n    const LIST = [\n      { label: "label 1" },\n      { label: "label 2" },\n      { label: "label 3" },\n      { label: "label 4" },\n    ];\n\n    expect(filterList(LIST, { keyLabel: "label" })).toBe("<ul><li>label 1</li><li>label 2</li><li>label 3</li><li>label 4</li></ul>");\n    expect(filterList(LIST, { keyLabel: "aloha" })).toBe("<ul><li></li><li></li><li></li><li></li></ul>");\n  });\n\n  test("keyLabelCallback", () => {\n    const LIST = [\n      { label: "label 1" },\n      { label: "label 2" },\n      { label: "label 3" },\n      { label: "label 4" },\n    ];\n\n    const keyLabelCallback = ({ item }) => {\n      return `+ ${ item.label }`;\n    };\n\n    expect(filterList(LIST, { keyLabelCallback })).toBe("<ul><li>+ label 1</li><li>+ label 2</li><li>+ label 3</li><li>+ label 4</li></ul>");\n    expect(filterList(LIST, { keyLabelCallback: () => "Aloha" })).toBe("<ul><li>Aloha</li><li>Aloha</li><li>Aloha</li><li>Aloha</li></ul>");\n  });\n\n  test("isHtml=false", () => {\n    expect(filterList(["label 1", "label 2", "label 3"], { isHtml: false })).toBe("label 1, label 2, label 3");\n    expect(filterList(["aloha"], { isHtml: false })).toBe("aloha");\n    expect(filterList(["x", "y", "z"], { isHtml: false })).toBe("x, y, z");\n    expect(filterList(123, { isHtml: false })).toBe(123);\n  });\n\n  test("separator", () => {\n    expect(filterList(["label 1", "label 2", "label 3"], { isHtml: false, separator: "," })).toBe("label 1,label 2,label 3");\n    expect(filterList(["label 1", "label 2", "label 3"], { isHtml: false, separator: "; " })).toBe("label 1; label 2; label 3");\n    expect(filterList(["x", "y", "z"], { isHtml: false, separator: " - " })).toBe("x - y - z");\n  });\n\n  test("tag", () => {\n    expect(filterList(["label 1", "label 2", "label 3"], { tag: "ul" })).toBe("<ul><li>label 1</li><li>label 2</li><li>label 3</li></ul>");\n    expect(filterList(["label 1", "label 2", "label 3"], { tag: "ol" })).toBe("<ol><li>label 1</li><li>label 2</li><li>label 3</li></ol>");\n  });\n\n  test("listClass", () => {\n    expect(filterList(["label 1", "label 2", "label 3"], { listClass: "test" })).toBe("<ul class=\\"test\\"><li>label 1</li><li>label 2</li><li>label 3</li></ul>");\n    expect(filterList(["label 1", "label 2", "label 3"], { listClass: "a_list_without_styles" })).toBe("<ul class=\\"a_list_without_styles\\"><li>label 1</li><li>label 2</li><li>label 3</li></ul>");\n  });\n\n  test("keyChildren", () => {\n    const LIST = [\n      {\n        label: "Level 1",\n        children: [\n          {\n            label: "Level 1.1",\n            children: [\n              {\n                label: "Level 1.1.1",\n              },\n              {\n                label: "Level 1.1.2",\n              },\n            ],\n          },\n          {\n            label: "Level 1.2",\n          },\n        ],\n      },\n      {\n        label: "Level 2",\n        children: [\n          {\n            label: "Level 2.1",\n          },\n          {\n            label: "Level 2.2",\n          },\n        ],\n      },\n    ];\n\n    expect(filterList(LIST, {\n      keyLabel: "label",\n      keyChildren: "children",\n    })).toBe("<ul><li>Level 1<ul><li>Level 1.1<ul><li>Level 1.1.1</li><li>Level 1.1.2</li></ul></li><li>Level 1.2</li></ul></li><li>Level 2<ul><li>Level 2.1</li><li>Level 2.2</li></ul></li></ul>");\n    expect(filterList(LIST, {\n      keyLabel: "label",\n      keyChildren: "children",\n      listClass: "a_list_without_styles"\n    })).toBe("<ul class=\\"a_list_without_styles\\"><li>Level 1<ul class=\\"a_list_without_styles\\"><li>Level 1.1<ul class=\\"a_list_without_styles\\"><li>Level 1.1.1</li><li>Level 1.1.2</li></ul></li><li>Level 1.2</li></ul></li><li>Level 2<ul class=\\"a_list_without_styles\\"><li>Level 2.1</li><li>Level 2.2</li></ul></li></ul>");\n    expect(filterList(LIST, {\n      keyLabel: "label",\n      keyChildren: "children",\n      tag: "ol",\n    })).toBe("<ol><li>Level 1<ol><li>Level 1.1<ol><li>Level 1.1.1</li><li>Level 1.1.2</li></ol></li><li>Level 1.2</li></ol></li><li>Level 2<ol><li>Level 2.1</li><li>Level 2.2</li></ol></li></ol>");\n  });\n\n  test("tree isSimpleArray=true", () => {\n    const LIST = ["Level 1", ["Level 2", ["Level 2.1", "Level 2.2"]], ["Level 3", ["Level 3.1", ["Level 3.2", ["Level 3.2.1", "Level 3.2.2"]]]]];\n\n    expect(filterList(LIST, { isSimpleArray: true, })).toBe("<ul><li>Level 1</li><li>Level 2<ul><li>Level 2.1</li><li>Level 2.2</li></ul></li><li>Level 3<ul><li>Level 3.1</li><li>Level 3.2<ul><li>Level 3.2.1</li><li>Level 3.2.2</li></ul></li></ul></li></ul>");\n\n    expect(filterList(LIST, {\n      isSimpleArray: true,\n      listClass: "a_list_without_styles",\n    })).toBe("<ul class=\\"a_list_without_styles\\"><li>Level 1</li><li>Level 2<ul class=\\"a_list_without_styles\\"><li>Level 2.1</li><li>Level 2.2</li></ul></li><li>Level 3<ul class=\\"a_list_without_styles\\"><li>Level 3.1</li><li>Level 3.2<ul class=\\"a_list_without_styles\\"><li>Level 3.2.1</li><li>Level 3.2.2</li></ul></li></ul></li></ul>");\n\n    expect(filterList(LIST, {\n      isSimpleArray: true,\n      tag: "ol",\n    })).toBe("<ol><li>Level 1</li><li>Level 2<ol><li>Level 2.1</li><li>Level 2.2</li></ol></li><li>Level 3<ol><li>Level 3.1</li><li>Level 3.2<ol><li>Level 3.2.1</li><li>Level 3.2.2</li></ol></li></ol></li></ol>");\n\n    expect(filterList([["x1", ["x1.1", "x1.2"]]], { isSimpleArray: true })).toBe("<ul><li>x1<ul><li>x1.1</li><li>x1.2</li></ul></li></ul>");\n\n    expect(filterList(["x0", ["x1", ["x1.1", "x1.2"]], "x3"], { isSimpleArray: true })).toBe("<ul><li>x0</li><li>x1<ul><li>x1.1</li><li>x1.2</li></ul></li><li>x3</li></ul>");\n  });\n});\n\n\n'}}},F=(0,c.Z)(Z,[["render",function(l,e){const i=(0,t.up)("a-translation"),a=(0,t.up)("page-filter-import-function"),n=(0,t.up)("page-filter-import-composition-api"),s=(0,t.up)("page-filter-arguments"),r=(0,t.up)("page-filter-list-is-simple-array"),o=(0,t.up)("page-filter-list-key-label"),L=(0,t.up)("page-filter-list-key-label-callback"),b=(0,t.up)("page-filter-list-is-html"),u=(0,t.up)("page-filter-list-separator"),c=(0,t.up)("page-filter-list-tag"),p=(0,t.up)("page-filter-list-list-class"),d=(0,t.up)("page-filter-list-key-children"),m=(0,t.up)("page-filter-list-is-simple-array-tree"),_=(0,t.up)("page-filter-test"),v=(0,t.up)("aloha-page");return(0,t.wg)(),(0,t.j4)(v,{"page-title":l.pageTitle},{body:(0,t.w5)((()=>[(0,t.Wm)(i,{tag:"p",html:"_PAGE_FILTER_LIST_DESCRIPTION_"}),(0,t.Wm)(a,{"function-name":"filterList"}),(0,t.Wm)(n,{"function-name":"filterList"}),(0,t.Wm)(s,{"arguments-text":l.argumentsText,"function-description":'filterList(array, { [isHtml=true], [isSimpleArray=false], [keyChildren=""], [keyLabel=""], [keyLabelCallback], [listClass=""], [separator=", "], [tag="ul"] })'},null,8,["arguments-text"]),(0,t.Wm)(r),(0,t.Wm)(o),(0,t.Wm)(L),(0,t.Wm)(b),(0,t.Wm)(u),(0,t.Wm)(c),(0,t.Wm)(p),(0,t.Wm)(d),(0,t.Wm)(m),(0,t.Wm)(_,{test:l.test},null,8,["test"])])),_:1},8,["page-title"])}]])}}]);
//# sourceMappingURL=chunk.187.05376f18894ad52329e3.js.map