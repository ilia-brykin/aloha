import { toRef as d, inject as de, computed as _, ref as B, withDirectives as Ot, h as c, resolveComponent as Ur, watch as rt, onBeforeUnmount as Dt, unref as LR, Teleport as la, onUnmounted as fp, nextTick as uu, toRefs as hp, onMounted as Wr, provide as et, getCurrentInstance as vR } from "vue";
import Fn from "moment";
var Ap = typeof global == "object" && global && global.Object === Object && global, IR = typeof self == "object" && self && self.Object === Object && self, dr = Ap || IR || Function("return this")(), or = dr.Symbol, Ep = Object.prototype, yR = Ep.hasOwnProperty, gR = Ep.toString, Vi = or ? or.toStringTag : void 0;
function RR(e) {
  var t = yR.call(e, Vi), n = e[Vi];
  try {
    e[Vi] = void 0;
    var r = !0;
  } catch {
  }
  var s = gR.call(e);
  return r && (t ? e[Vi] = n : delete e[Vi]), s;
}
var OR = Object.prototype, CR = OR.toString;
function NR(e) {
  return CR.call(e);
}
var DR = "[object Null]", BR = "[object Undefined]", FA = or ? or.toStringTag : void 0;
function oa(e) {
  return e == null ? e === void 0 ? BR : DR : FA && FA in Object(e) ? RR(e) : NR(e);
}
function ur(e) {
  return e != null && typeof e == "object";
}
var wR = "[object Symbol]";
function Cs(e) {
  return typeof e == "symbol" || ur(e) && oa(e) == wR;
}
function ii(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, s = Array(r); ++n < r; )
    s[n] = t(e[n], n, e);
  return s;
}
var me = Array.isArray, MA = or ? or.prototype : void 0, qA = MA ? MA.toString : void 0;
function pl(e) {
  if (typeof e == "string")
    return e;
  if (me(e))
    return ii(e, pl) + "";
  if (Cs(e))
    return qA ? qA.call(e) : "";
  var t = e + "";
  return t == "0" && 1 / e == -1 / 0 ? "-0" : t;
}
var PR = /\s/;
function xR(e) {
  for (var t = e.length; t-- && PR.test(e.charAt(t)); )
    ;
  return t;
}
var FR = /^\s+/;
function MR(e) {
  return e && e.slice(0, xR(e) + 1).replace(FR, "");
}
function Un(e) {
  var t = typeof e;
  return e != null && (t == "object" || t == "function");
}
var $A = NaN, qR = /^[-+]0x[0-9a-f]+$/i, $R = /^0b[01]+$/i, kR = /^0o[0-7]+$/i, UR = parseInt;
function _i(e) {
  if (typeof e == "number")
    return e;
  if (Cs(e))
    return $A;
  if (Un(e)) {
    var t = typeof e.valueOf == "function" ? e.valueOf() : e;
    e = Un(t) ? t + "" : t;
  }
  if (typeof e != "string")
    return e === 0 ? e : +e;
  e = MR(e);
  var n = $R.test(e);
  return n || kR.test(e) ? UR(e.slice(2), n ? 2 : 8) : qR.test(e) ? $A : +e;
}
var HR = 1 / 0, VR = 17976931348623157e292;
function Bo(e) {
  if (!e)
    return e === 0 ? e : 0;
  if (e = _i(e), e === HR || e === -1 / 0) {
    var t = e < 0 ? -1 : 1;
    return t * VR;
  }
  return e === e ? e : 0;
}
function Gr(e) {
  var t = Bo(e), n = t % 1;
  return t === t ? n ? t - n : t : 0;
}
function Ps(e) {
  return e;
}
var WR = "[object AsyncFunction]", GR = "[object Function]", KR = "[object GeneratorFunction]", jR = "[object Proxy]";
function Fe(e) {
  if (!Un(e))
    return !1;
  var t = oa(e);
  return t == GR || t == KR || t == WR || t == jR;
}
var J_ = dr["__core-js_shared__"], kA = function() {
  var e = /[^.]+$/.exec(J_ && J_.keys && J_.keys.IE_PROTO || "");
  return e ? "Symbol(src)_1." + e : "";
}();
function zR(e) {
  return !!kA && kA in e;
}
var YR = Function.prototype, XR = YR.toString;
function xs(e) {
  if (e != null) {
    try {
      return XR.call(e);
    } catch {
    }
    try {
      return e + "";
    } catch {
    }
  }
  return "";
}
var ZR = /[\\^$.*+?()[\]{}|]/g, JR = /^\[object .+?Constructor\]$/, QR = Function.prototype, eO = Object.prototype, tO = QR.toString, nO = eO.hasOwnProperty, rO = RegExp(
  "^" + tO.call(nO).replace(ZR, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function aO(e) {
  if (!Un(e) || zR(e))
    return !1;
  var t = Fe(e) ? rO : JR;
  return t.test(xs(e));
}
function sO(e, t) {
  return e == null ? void 0 : e[t];
}
function Fs(e, t) {
  var n = sO(e, t);
  return aO(n) ? n : void 0;
}
var bd = Fs(dr, "WeakMap"), UA = Object.create, iO = /* @__PURE__ */ function() {
  function e() {
  }
  return function(t) {
    if (!Un(t))
      return {};
    if (UA)
      return UA(t);
    e.prototype = t;
    var n = new e();
    return e.prototype = void 0, n;
  };
}();
function lO(e, t, n) {
  switch (n.length) {
    case 0:
      return e.call(t);
    case 1:
      return e.call(t, n[0]);
    case 2:
      return e.call(t, n[0], n[1]);
    case 3:
      return e.call(t, n[0], n[1], n[2]);
  }
  return e.apply(t, n);
}
function oO() {
}
function uO(e, t) {
  var n = -1, r = e.length;
  for (t || (t = Array(r)); ++n < r; )
    t[n] = e[n];
  return t;
}
var _O = 800, dO = 16, cO = Date.now;
function fO(e) {
  var t = 0, n = 0;
  return function() {
    var r = cO(), s = dO - (r - n);
    if (n = r, s > 0) {
      if (++t >= _O)
        return arguments[0];
    } else
      t = 0;
    return e.apply(void 0, arguments);
  };
}
function hO(e) {
  return function() {
    return e;
  };
}
var Ko = function() {
  try {
    var e = Fs(Object, "defineProperty");
    return e({}, "", {}), e;
  } catch {
  }
}(), AO = Ko ? function(e, t) {
  return Ko(e, "toString", {
    configurable: !0,
    enumerable: !1,
    value: hO(t),
    writable: !0
  });
} : Ps, EO = fO(AO);
function pp(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r && t(e[n], n, e) !== !1; )
    ;
  return e;
}
function Tp(e, t, n, r) {
  for (var s = e.length, i = n + -1; ++i < s; )
    if (t(e[i], i, e))
      return i;
  return -1;
}
function pO(e) {
  return e !== e;
}
function TO(e, t, n) {
  for (var r = n - 1, s = e.length; ++r < s; )
    if (e[r] === t)
      return r;
  return -1;
}
function mp(e, t, n) {
  return t === t ? TO(e, t, n) : Tp(e, pO, n);
}
function Sp(e, t) {
  var n = e == null ? 0 : e.length;
  return !!n && mp(e, t, 0) > -1;
}
var mO = 9007199254740991, SO = /^(?:0|[1-9]\d*)$/;
function _u(e, t) {
  var n = typeof e;
  return t = t ?? mO, !!t && (n == "number" || n != "symbol" && SO.test(e)) && e > -1 && e % 1 == 0 && e < t;
}
function ec(e, t, n) {
  t == "__proto__" && Ko ? Ko(e, t, {
    configurable: !0,
    enumerable: !0,
    value: n,
    writable: !0
  }) : e[t] = n;
}
function du(e, t) {
  return e === t || e !== e && t !== t;
}
var bO = Object.prototype, LO = bO.hasOwnProperty;
function cu(e, t, n) {
  var r = e[t];
  (!(LO.call(e, t) && du(r, n)) || n === void 0 && !(t in e)) && ec(e, t, n);
}
function Tl(e, t, n, r) {
  var s = !n;
  n || (n = {});
  for (var i = -1, o = t.length; ++i < o; ) {
    var u = t[i], h = void 0;
    h === void 0 && (h = e[u]), s ? ec(n, u, h) : cu(n, u, h);
  }
  return n;
}
var HA = Math.max;
function vO(e, t, n) {
  return t = HA(t === void 0 ? e.length - 1 : t, 0), function() {
    for (var r = arguments, s = -1, i = HA(r.length - t, 0), o = Array(i); ++s < i; )
      o[s] = r[t + s];
    s = -1;
    for (var u = Array(t + 1); ++s < t; )
      u[s] = r[s];
    return u[t] = n(o), lO(e, this, u);
  };
}
function fu(e, t) {
  return EO(vO(e, t, Ps), e + "");
}
var IO = 9007199254740991;
function tc(e) {
  return typeof e == "number" && e > -1 && e % 1 == 0 && e <= IO;
}
function gr(e) {
  return e != null && tc(e.length) && !Fe(e);
}
function jo(e, t, n) {
  if (!Un(n))
    return !1;
  var r = typeof t;
  return (r == "number" ? gr(n) && _u(t, n.length) : r == "string" && t in n) ? du(n[t], e) : !1;
}
function yO(e) {
  return fu(function(t, n) {
    var r = -1, s = n.length, i = s > 1 ? n[s - 1] : void 0, o = s > 2 ? n[2] : void 0;
    for (i = e.length > 3 && typeof i == "function" ? (s--, i) : void 0, o && jo(n[0], n[1], o) && (i = s < 3 ? void 0 : i, s = 1), t = Object(t); ++r < s; ) {
      var u = n[r];
      u && e(t, u, r, i);
    }
    return t;
  });
}
var gO = Object.prototype;
function ml(e) {
  var t = e && e.constructor, n = typeof t == "function" && t.prototype || gO;
  return e === n;
}
function bp(e, t) {
  for (var n = -1, r = Array(e); ++n < e; )
    r[n] = t(n);
  return r;
}
var RO = "[object Arguments]";
function VA(e) {
  return ur(e) && oa(e) == RO;
}
var Lp = Object.prototype, OO = Lp.hasOwnProperty, CO = Lp.propertyIsEnumerable, hu = VA(/* @__PURE__ */ function() {
  return arguments;
}()) ? VA : function(e) {
  return ur(e) && OO.call(e, "callee") && !CO.call(e, "callee");
};
function NO() {
  return !1;
}
var vp = typeof exports == "object" && exports && !exports.nodeType && exports, WA = vp && typeof module == "object" && module && !module.nodeType && module, DO = WA && WA.exports === vp, GA = DO ? dr.Buffer : void 0, BO = GA ? GA.isBuffer : void 0, sl = BO || NO, wO = "[object Arguments]", PO = "[object Array]", xO = "[object Boolean]", FO = "[object Date]", MO = "[object Error]", qO = "[object Function]", $O = "[object Map]", kO = "[object Number]", UO = "[object Object]", HO = "[object RegExp]", VO = "[object Set]", WO = "[object String]", GO = "[object WeakMap]", KO = "[object ArrayBuffer]", jO = "[object DataView]", zO = "[object Float32Array]", YO = "[object Float64Array]", XO = "[object Int8Array]", ZO = "[object Int16Array]", JO = "[object Int32Array]", QO = "[object Uint8Array]", eC = "[object Uint8ClampedArray]", tC = "[object Uint16Array]", nC = "[object Uint32Array]", St = {};
St[zO] = St[YO] = St[XO] = St[ZO] = St[JO] = St[QO] = St[eC] = St[tC] = St[nC] = !0;
St[wO] = St[PO] = St[KO] = St[xO] = St[jO] = St[FO] = St[MO] = St[qO] = St[$O] = St[kO] = St[UO] = St[HO] = St[VO] = St[WO] = St[GO] = !1;
function rC(e) {
  return ur(e) && tc(e.length) && !!St[oa(e)];
}
function Au(e) {
  return function(t) {
    return e(t);
  };
}
var Ip = typeof exports == "object" && exports && !exports.nodeType && exports, Qi = Ip && typeof module == "object" && module && !module.nodeType && module, aC = Qi && Qi.exports === Ip, Q_ = aC && Ap.process, di = function() {
  try {
    var e = Qi && Qi.require && Qi.require("util").types;
    return e || Q_ && Q_.binding && Q_.binding("util");
  } catch {
  }
}(), KA = di && di.isTypedArray, nc = KA ? Au(KA) : rC, sC = Object.prototype, iC = sC.hasOwnProperty;
function yp(e, t) {
  var n = me(e), r = !n && hu(e), s = !n && !r && sl(e), i = !n && !r && !s && nc(e), o = n || r || s || i, u = o ? bp(e.length, String) : [], h = u.length;
  for (var A in e)
    (t || iC.call(e, A)) && !(o && // Safari 9 has enumerable `arguments.length` in strict mode.
    (A == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    s && (A == "offset" || A == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    i && (A == "buffer" || A == "byteLength" || A == "byteOffset") || // Skip index properties.
    _u(A, h))) && u.push(A);
  return u;
}
function gp(e, t) {
  return function(n) {
    return e(t(n));
  };
}
var lC = gp(Object.keys, Object), oC = Object.prototype, uC = oC.hasOwnProperty;
function rc(e) {
  if (!ml(e))
    return lC(e);
  var t = [];
  for (var n in Object(e))
    uC.call(e, n) && n != "constructor" && t.push(n);
  return t;
}
function ua(e) {
  return gr(e) ? yp(e) : rc(e);
}
var _C = Object.prototype, dC = _C.hasOwnProperty, Ld = yO(function(e, t) {
  if (ml(t) || gr(t)) {
    Tl(t, ua(t), e);
    return;
  }
  for (var n in t)
    dC.call(t, n) && cu(e, n, t[n]);
});
function cC(e) {
  var t = [];
  if (e != null)
    for (var n in Object(e))
      t.push(n);
  return t;
}
var fC = Object.prototype, hC = fC.hasOwnProperty;
function AC(e) {
  if (!Un(e))
    return cC(e);
  var t = ml(e), n = [];
  for (var r in e)
    r == "constructor" && (t || !hC.call(e, r)) || n.push(r);
  return n;
}
function ac(e) {
  return gr(e) ? yp(e, !0) : AC(e);
}
var EC = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, pC = /^\w*$/;
function sc(e, t) {
  if (me(e))
    return !1;
  var n = typeof e;
  return n == "number" || n == "symbol" || n == "boolean" || e == null || Cs(e) ? !0 : pC.test(e) || !EC.test(e) || t != null && e in Object(t);
}
var il = Fs(Object, "create");
function TC() {
  this.__data__ = il ? il(null) : {}, this.size = 0;
}
function mC(e) {
  var t = this.has(e) && delete this.__data__[e];
  return this.size -= t ? 1 : 0, t;
}
var SC = "__lodash_hash_undefined__", bC = Object.prototype, LC = bC.hasOwnProperty;
function vC(e) {
  var t = this.__data__;
  if (il) {
    var n = t[e];
    return n === SC ? void 0 : n;
  }
  return LC.call(t, e) ? t[e] : void 0;
}
var IC = Object.prototype, yC = IC.hasOwnProperty;
function gC(e) {
  var t = this.__data__;
  return il ? t[e] !== void 0 : yC.call(t, e);
}
var RC = "__lodash_hash_undefined__";
function OC(e, t) {
  var n = this.__data__;
  return this.size += this.has(e) ? 0 : 1, n[e] = il && t === void 0 ? RC : t, this;
}
function Ns(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
Ns.prototype.clear = TC;
Ns.prototype.delete = mC;
Ns.prototype.get = vC;
Ns.prototype.has = gC;
Ns.prototype.set = OC;
function CC() {
  this.__data__ = [], this.size = 0;
}
function Eu(e, t) {
  for (var n = e.length; n--; )
    if (du(e[n][0], t))
      return n;
  return -1;
}
var NC = Array.prototype, DC = NC.splice;
function BC(e) {
  var t = this.__data__, n = Eu(t, e);
  if (n < 0)
    return !1;
  var r = t.length - 1;
  return n == r ? t.pop() : DC.call(t, n, 1), --this.size, !0;
}
function wC(e) {
  var t = this.__data__, n = Eu(t, e);
  return n < 0 ? void 0 : t[n][1];
}
function PC(e) {
  return Eu(this.__data__, e) > -1;
}
function xC(e, t) {
  var n = this.__data__, r = Eu(n, e);
  return r < 0 ? (++this.size, n.push([e, t])) : n[r][1] = t, this;
}
function _a(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
_a.prototype.clear = CC;
_a.prototype.delete = BC;
_a.prototype.get = wC;
_a.prototype.has = PC;
_a.prototype.set = xC;
var ll = Fs(dr, "Map");
function FC() {
  this.size = 0, this.__data__ = {
    hash: new Ns(),
    map: new (ll || _a)(),
    string: new Ns()
  };
}
function MC(e) {
  var t = typeof e;
  return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null;
}
function pu(e, t) {
  var n = e.__data__;
  return MC(t) ? n[typeof t == "string" ? "string" : "hash"] : n.map;
}
function qC(e) {
  var t = pu(this, e).delete(e);
  return this.size -= t ? 1 : 0, t;
}
function $C(e) {
  return pu(this, e).get(e);
}
function kC(e) {
  return pu(this, e).has(e);
}
function UC(e, t) {
  var n = pu(this, e), r = n.size;
  return n.set(e, t), this.size += n.size == r ? 0 : 1, this;
}
function da(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
da.prototype.clear = FC;
da.prototype.delete = qC;
da.prototype.get = $C;
da.prototype.has = kC;
da.prototype.set = UC;
var HC = "Expected a function";
function ic(e, t) {
  if (typeof e != "function" || t != null && typeof t != "function")
    throw new TypeError(HC);
  var n = function() {
    var r = arguments, s = t ? t.apply(this, r) : r[0], i = n.cache;
    if (i.has(s))
      return i.get(s);
    var o = e.apply(this, r);
    return n.cache = i.set(s, o) || i, o;
  };
  return n.cache = new (ic.Cache || da)(), n;
}
ic.Cache = da;
var VC = 500;
function WC(e) {
  var t = ic(e, function(r) {
    return n.size === VC && n.clear(), r;
  }), n = t.cache;
  return t;
}
var GC = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, KC = /\\(\\)?/g, jC = WC(function(e) {
  var t = [];
  return e.charCodeAt(0) === 46 && t.push(""), e.replace(GC, function(n, r, s, i) {
    t.push(s ? i.replace(KC, "$1") : r || n);
  }), t;
});
function Ut(e) {
  return e == null ? "" : pl(e);
}
function lc(e, t) {
  return me(e) ? e : sc(e, t) ? [e] : jC(Ut(e));
}
function Sl(e) {
  if (typeof e == "string" || Cs(e))
    return e;
  var t = e + "";
  return t == "0" && 1 / e == -1 / 0 ? "-0" : t;
}
function oc(e, t) {
  t = lc(t, e);
  for (var n = 0, r = t.length; e != null && n < r; )
    e = e[Sl(t[n++])];
  return n && n == r ? e : void 0;
}
function fe(e, t, n) {
  var r = e == null ? void 0 : oc(e, t);
  return r === void 0 ? n : r;
}
function uc(e, t) {
  for (var n = -1, r = t.length, s = e.length; ++n < r; )
    e[s + n] = t[n];
  return e;
}
var jA = or ? or.isConcatSpreadable : void 0;
function zC(e) {
  return me(e) || hu(e) || !!(jA && e && e[jA]);
}
function _c(e, t, n, r, s) {
  var i = -1, o = e.length;
  for (n || (n = zC), s || (s = []); ++i < o; ) {
    var u = e[i];
    n(u) ? uc(s, u) : r || (s[s.length] = u);
  }
  return s;
}
var dc = gp(Object.getPrototypeOf, Object), YC = "[object Object]", XC = Function.prototype, ZC = Object.prototype, Rp = XC.toString, JC = ZC.hasOwnProperty, QC = Rp.call(Object);
function nt(e) {
  if (!ur(e) || oa(e) != YC)
    return !1;
  var t = dc(e);
  if (t === null)
    return !0;
  var n = JC.call(t, "constructor") && t.constructor;
  return typeof n == "function" && n instanceof n && Rp.call(n) == QC;
}
function Op(e, t, n) {
  var r = -1, s = e.length;
  t < 0 && (t = -t > s ? 0 : s + t), n = n > s ? s : n, n < 0 && (n += s), s = t > n ? 0 : n - t >>> 0, t >>>= 0;
  for (var i = Array(s); ++r < s; )
    i[r] = e[r + t];
  return i;
}
function Cp(e, t, n) {
  var r = e.length;
  return n = n === void 0 ? r : n, !t && n >= r ? e : Op(e, t, n);
}
var eN = "\\ud800-\\udfff", tN = "\\u0300-\\u036f", nN = "\\ufe20-\\ufe2f", rN = "\\u20d0-\\u20ff", aN = tN + nN + rN, sN = "\\ufe0e\\ufe0f", iN = "\\u200d", lN = RegExp("[" + iN + eN + aN + sN + "]");
function Tu(e) {
  return lN.test(e);
}
function oN(e) {
  return e.split("");
}
var Np = "\\ud800-\\udfff", uN = "\\u0300-\\u036f", _N = "\\ufe20-\\ufe2f", dN = "\\u20d0-\\u20ff", cN = uN + _N + dN, fN = "\\ufe0e\\ufe0f", hN = "[" + Np + "]", vd = "[" + cN + "]", Id = "\\ud83c[\\udffb-\\udfff]", AN = "(?:" + vd + "|" + Id + ")", Dp = "[^" + Np + "]", Bp = "(?:\\ud83c[\\udde6-\\uddff]){2}", wp = "[\\ud800-\\udbff][\\udc00-\\udfff]", EN = "\\u200d", Pp = AN + "?", xp = "[" + fN + "]?", pN = "(?:" + EN + "(?:" + [Dp, Bp, wp].join("|") + ")" + xp + Pp + ")*", TN = xp + Pp + pN, mN = "(?:" + [Dp + vd + "?", vd, Bp, wp, hN].join("|") + ")", SN = RegExp(Id + "(?=" + Id + ")|" + mN + TN, "g");
function bN(e) {
  return e.match(SN) || [];
}
function Fp(e) {
  return Tu(e) ? bN(e) : oN(e);
}
function LN(e) {
  return function(t) {
    t = Ut(t);
    var n = Tu(t) ? Fp(t) : void 0, r = n ? n[0] : t.charAt(0), s = n ? Cp(n, 1).join("") : t.slice(1);
    return r[e]() + s;
  };
}
var Mp = LN("toUpperCase");
function vN(e) {
  return Mp(Ut(e).toLowerCase());
}
function IN(e, t, n, r) {
  var s = -1, i = e == null ? 0 : e.length;
  for (r && i && (n = e[++s]); ++s < i; )
    n = t(n, e[s], s, e);
  return n;
}
var yN = dr.isFinite, gN = Math.min;
function qp(e) {
  var t = Math[e];
  return function(n, r) {
    if (n = _i(n), r = r == null ? 0 : gN(Gr(r), 292), r && yN(n)) {
      var s = (Ut(n) + "e").split("e"), i = t(s[0] + "e" + (+s[1] + r));
      return s = (Ut(i) + "e").split("e"), +(s[0] + "e" + (+s[1] - r));
    }
    return t(n);
  };
}
var RN = qp("ceil");
function $p(e, t, n) {
  return e === e && (n !== void 0 && (e = e <= n ? e : n), e = e >= t ? e : t), e;
}
function ON() {
  this.__data__ = new _a(), this.size = 0;
}
function CN(e) {
  var t = this.__data__, n = t.delete(e);
  return this.size = t.size, n;
}
function NN(e) {
  return this.__data__.get(e);
}
function DN(e) {
  return this.__data__.has(e);
}
var BN = 200;
function wN(e, t) {
  var n = this.__data__;
  if (n instanceof _a) {
    var r = n.__data__;
    if (!ll || r.length < BN - 1)
      return r.push([e, t]), this.size = ++n.size, this;
    n = this.__data__ = new da(r);
  }
  return n.set(e, t), this.size = n.size, this;
}
function qr(e) {
  var t = this.__data__ = new _a(e);
  this.size = t.size;
}
qr.prototype.clear = ON;
qr.prototype.delete = CN;
qr.prototype.get = NN;
qr.prototype.has = DN;
qr.prototype.set = wN;
function PN(e, t) {
  return e && Tl(t, ua(t), e);
}
function xN(e, t) {
  return e && Tl(t, ac(t), e);
}
var kp = typeof exports == "object" && exports && !exports.nodeType && exports, zA = kp && typeof module == "object" && module && !module.nodeType && module, FN = zA && zA.exports === kp, YA = FN ? dr.Buffer : void 0, XA = YA ? YA.allocUnsafe : void 0;
function MN(e, t) {
  if (t)
    return e.slice();
  var n = e.length, r = XA ? XA(n) : new e.constructor(n);
  return e.copy(r), r;
}
function Up(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, s = 0, i = []; ++n < r; ) {
    var o = e[n];
    t(o, n, e) && (i[s++] = o);
  }
  return i;
}
function Hp() {
  return [];
}
var qN = Object.prototype, $N = qN.propertyIsEnumerable, ZA = Object.getOwnPropertySymbols, cc = ZA ? function(e) {
  return e == null ? [] : (e = Object(e), Up(ZA(e), function(t) {
    return $N.call(e, t);
  }));
} : Hp;
function kN(e, t) {
  return Tl(e, cc(e), t);
}
var UN = Object.getOwnPropertySymbols, Vp = UN ? function(e) {
  for (var t = []; e; )
    uc(t, cc(e)), e = dc(e);
  return t;
} : Hp;
function HN(e, t) {
  return Tl(e, Vp(e), t);
}
function Wp(e, t, n) {
  var r = t(e);
  return me(e) ? r : uc(r, n(e));
}
function yd(e) {
  return Wp(e, ua, cc);
}
function VN(e) {
  return Wp(e, ac, Vp);
}
var gd = Fs(dr, "DataView"), Rd = Fs(dr, "Promise"), li = Fs(dr, "Set"), JA = "[object Map]", WN = "[object Object]", QA = "[object Promise]", eE = "[object Set]", tE = "[object WeakMap]", nE = "[object DataView]", GN = xs(gd), KN = xs(ll), jN = xs(Rd), zN = xs(li), YN = xs(bd), Mn = oa;
(gd && Mn(new gd(new ArrayBuffer(1))) != nE || ll && Mn(new ll()) != JA || Rd && Mn(Rd.resolve()) != QA || li && Mn(new li()) != eE || bd && Mn(new bd()) != tE) && (Mn = function(e) {
  var t = oa(e), n = t == WN ? e.constructor : void 0, r = n ? xs(n) : "";
  if (r)
    switch (r) {
      case GN:
        return nE;
      case KN:
        return JA;
      case jN:
        return QA;
      case zN:
        return eE;
      case YN:
        return tE;
    }
  return t;
});
var XN = Object.prototype, ZN = XN.hasOwnProperty;
function JN(e) {
  var t = e.length, n = new e.constructor(t);
  return t && typeof e[0] == "string" && ZN.call(e, "index") && (n.index = e.index, n.input = e.input), n;
}
var zo = dr.Uint8Array;
function fc(e) {
  var t = new e.constructor(e.byteLength);
  return new zo(t).set(new zo(e)), t;
}
function QN(e, t) {
  var n = t ? fc(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.byteLength);
}
var eD = /\w*$/;
function tD(e) {
  var t = new e.constructor(e.source, eD.exec(e));
  return t.lastIndex = e.lastIndex, t;
}
var rE = or ? or.prototype : void 0, aE = rE ? rE.valueOf : void 0;
function nD(e) {
  return aE ? Object(aE.call(e)) : {};
}
function rD(e, t) {
  var n = t ? fc(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.length);
}
var aD = "[object Boolean]", sD = "[object Date]", iD = "[object Map]", lD = "[object Number]", oD = "[object RegExp]", uD = "[object Set]", _D = "[object String]", dD = "[object Symbol]", cD = "[object ArrayBuffer]", fD = "[object DataView]", hD = "[object Float32Array]", AD = "[object Float64Array]", ED = "[object Int8Array]", pD = "[object Int16Array]", TD = "[object Int32Array]", mD = "[object Uint8Array]", SD = "[object Uint8ClampedArray]", bD = "[object Uint16Array]", LD = "[object Uint32Array]";
function vD(e, t, n) {
  var r = e.constructor;
  switch (t) {
    case cD:
      return fc(e);
    case aD:
    case sD:
      return new r(+e);
    case fD:
      return QN(e, n);
    case hD:
    case AD:
    case ED:
    case pD:
    case TD:
    case mD:
    case SD:
    case bD:
    case LD:
      return rD(e, n);
    case iD:
      return new r();
    case lD:
    case _D:
      return new r(e);
    case oD:
      return tD(e);
    case uD:
      return new r();
    case dD:
      return nD(e);
  }
}
function ID(e) {
  return typeof e.constructor == "function" && !ml(e) ? iO(dc(e)) : {};
}
var yD = "[object Map]";
function gD(e) {
  return ur(e) && Mn(e) == yD;
}
var sE = di && di.isMap, RD = sE ? Au(sE) : gD, OD = "[object Set]";
function CD(e) {
  return ur(e) && Mn(e) == OD;
}
var iE = di && di.isSet, ND = iE ? Au(iE) : CD, DD = 1, BD = 2, wD = 4, Gp = "[object Arguments]", PD = "[object Array]", xD = "[object Boolean]", FD = "[object Date]", MD = "[object Error]", Kp = "[object Function]", qD = "[object GeneratorFunction]", $D = "[object Map]", kD = "[object Number]", jp = "[object Object]", UD = "[object RegExp]", HD = "[object Set]", VD = "[object String]", WD = "[object Symbol]", GD = "[object WeakMap]", KD = "[object ArrayBuffer]", jD = "[object DataView]", zD = "[object Float32Array]", YD = "[object Float64Array]", XD = "[object Int8Array]", ZD = "[object Int16Array]", JD = "[object Int32Array]", QD = "[object Uint8Array]", eB = "[object Uint8ClampedArray]", tB = "[object Uint16Array]", nB = "[object Uint32Array]", Tt = {};
Tt[Gp] = Tt[PD] = Tt[KD] = Tt[jD] = Tt[xD] = Tt[FD] = Tt[zD] = Tt[YD] = Tt[XD] = Tt[ZD] = Tt[JD] = Tt[$D] = Tt[kD] = Tt[jp] = Tt[UD] = Tt[HD] = Tt[VD] = Tt[WD] = Tt[QD] = Tt[eB] = Tt[tB] = Tt[nB] = !0;
Tt[MD] = Tt[Kp] = Tt[GD] = !1;
function el(e, t, n, r, s, i) {
  var o, u = t & DD, h = t & BD, A = t & wD;
  if (o !== void 0)
    return o;
  if (!Un(e))
    return e;
  var E = me(e);
  if (E) {
    if (o = JN(e), !u)
      return uO(e, o);
  } else {
    var p = Mn(e), T = p == Kp || p == qD;
    if (sl(e))
      return MN(e, u);
    if (p == jp || p == Gp || T && !s) {
      if (o = h || T ? {} : ID(e), !u)
        return h ? HN(e, xN(o, e)) : kN(e, PN(o, e));
    } else {
      if (!Tt[p])
        return s ? e : {};
      o = vD(e, p, u);
    }
  }
  i || (i = new qr());
  var S = i.get(e);
  if (S)
    return S;
  i.set(e, o), ND(e) ? e.forEach(function(v) {
    o.add(el(v, t, n, v, e, i));
  }) : RD(e) && e.forEach(function(v, I) {
    o.set(I, el(v, t, n, I, e, i));
  });
  var b = A ? h ? VN : yd : h ? ac : ua, L = E ? void 0 : b(e);
  return pp(L || e, function(v, I) {
    L && (I = v, v = e[I]), cu(o, I, el(v, t, n, I, e, i));
  }), o;
}
var rB = 4;
function zp(e) {
  return el(e, rB);
}
var aB = 1, sB = 4;
function pe(e) {
  return el(e, aB | sB);
}
var iB = "__lodash_hash_undefined__";
function lB(e) {
  return this.__data__.set(e, iB), this;
}
function oB(e) {
  return this.__data__.has(e);
}
function ci(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.__data__ = new da(); ++t < n; )
    this.add(e[t]);
}
ci.prototype.add = ci.prototype.push = lB;
ci.prototype.has = oB;
function uB(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r; )
    if (t(e[n], n, e))
      return !0;
  return !1;
}
function hc(e, t) {
  return e.has(t);
}
var _B = 1, dB = 2;
function Yp(e, t, n, r, s, i) {
  var o = n & _B, u = e.length, h = t.length;
  if (u != h && !(o && h > u))
    return !1;
  var A = i.get(e), E = i.get(t);
  if (A && E)
    return A == t && E == e;
  var p = -1, T = !0, S = n & dB ? new ci() : void 0;
  for (i.set(e, t), i.set(t, e); ++p < u; ) {
    var b = e[p], L = t[p];
    if (r)
      var v = o ? r(L, b, p, t, e, i) : r(b, L, p, e, t, i);
    if (v !== void 0) {
      if (v)
        continue;
      T = !1;
      break;
    }
    if (S) {
      if (!uB(t, function(I, R) {
        if (!hc(S, R) && (b === I || s(b, I, n, r, i)))
          return S.push(R);
      })) {
        T = !1;
        break;
      }
    } else if (!(b === L || s(b, L, n, r, i))) {
      T = !1;
      break;
    }
  }
  return i.delete(e), i.delete(t), T;
}
function cB(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r, s) {
    n[++t] = [s, r];
  }), n;
}
function Ac(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r) {
    n[++t] = r;
  }), n;
}
var fB = 1, hB = 2, AB = "[object Boolean]", EB = "[object Date]", pB = "[object Error]", TB = "[object Map]", mB = "[object Number]", SB = "[object RegExp]", bB = "[object Set]", LB = "[object String]", vB = "[object Symbol]", IB = "[object ArrayBuffer]", yB = "[object DataView]", lE = or ? or.prototype : void 0, ed = lE ? lE.valueOf : void 0;
function gB(e, t, n, r, s, i, o) {
  switch (n) {
    case yB:
      if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset)
        return !1;
      e = e.buffer, t = t.buffer;
    case IB:
      return !(e.byteLength != t.byteLength || !i(new zo(e), new zo(t)));
    case AB:
    case EB:
    case mB:
      return du(+e, +t);
    case pB:
      return e.name == t.name && e.message == t.message;
    case SB:
    case LB:
      return e == t + "";
    case TB:
      var u = cB;
    case bB:
      var h = r & fB;
      if (u || (u = Ac), e.size != t.size && !h)
        return !1;
      var A = o.get(e);
      if (A)
        return A == t;
      r |= hB, o.set(e, t);
      var E = Yp(u(e), u(t), r, s, i, o);
      return o.delete(e), E;
    case vB:
      if (ed)
        return ed.call(e) == ed.call(t);
  }
  return !1;
}
var RB = 1, OB = Object.prototype, CB = OB.hasOwnProperty;
function NB(e, t, n, r, s, i) {
  var o = n & RB, u = yd(e), h = u.length, A = yd(t), E = A.length;
  if (h != E && !o)
    return !1;
  for (var p = h; p--; ) {
    var T = u[p];
    if (!(o ? T in t : CB.call(t, T)))
      return !1;
  }
  var S = i.get(e), b = i.get(t);
  if (S && b)
    return S == t && b == e;
  var L = !0;
  i.set(e, t), i.set(t, e);
  for (var v = o; ++p < h; ) {
    T = u[p];
    var I = e[T], R = t[T];
    if (r)
      var g = o ? r(R, I, T, t, e, i) : r(I, R, T, e, t, i);
    if (!(g === void 0 ? I === R || s(I, R, n, r, i) : g)) {
      L = !1;
      break;
    }
    v || (v = T == "constructor");
  }
  if (L && !v) {
    var D = e.constructor, w = t.constructor;
    D != w && "constructor" in e && "constructor" in t && !(typeof D == "function" && D instanceof D && typeof w == "function" && w instanceof w) && (L = !1);
  }
  return i.delete(e), i.delete(t), L;
}
var DB = 1, oE = "[object Arguments]", uE = "[object Array]", vo = "[object Object]", BB = Object.prototype, _E = BB.hasOwnProperty;
function wB(e, t, n, r, s, i) {
  var o = me(e), u = me(t), h = o ? uE : Mn(e), A = u ? uE : Mn(t);
  h = h == oE ? vo : h, A = A == oE ? vo : A;
  var E = h == vo, p = A == vo, T = h == A;
  if (T && sl(e)) {
    if (!sl(t))
      return !1;
    o = !0, E = !1;
  }
  if (T && !E)
    return i || (i = new qr()), o || nc(e) ? Yp(e, t, n, r, s, i) : gB(e, t, h, n, r, s, i);
  if (!(n & DB)) {
    var S = E && _E.call(e, "__wrapped__"), b = p && _E.call(t, "__wrapped__");
    if (S || b) {
      var L = S ? e.value() : e, v = b ? t.value() : t;
      return i || (i = new qr()), s(L, v, n, r, i);
    }
  }
  return T ? (i || (i = new qr()), NB(e, t, n, r, s, i)) : !1;
}
function mu(e, t, n, r, s) {
  return e === t ? !0 : e == null || t == null || !ur(e) && !ur(t) ? e !== e && t !== t : wB(e, t, n, r, mu, s);
}
var PB = 1, xB = 2;
function FB(e, t, n, r) {
  var s = n.length, i = s;
  if (e == null)
    return !i;
  for (e = Object(e); s--; ) {
    var o = n[s];
    if (o[2] ? o[1] !== e[o[0]] : !(o[0] in e))
      return !1;
  }
  for (; ++s < i; ) {
    o = n[s];
    var u = o[0], h = e[u], A = o[1];
    if (o[2]) {
      if (h === void 0 && !(u in e))
        return !1;
    } else {
      var E = new qr(), p;
      if (!(p === void 0 ? mu(A, h, PB | xB, r, E) : p))
        return !1;
    }
  }
  return !0;
}
function Xp(e) {
  return e === e && !Un(e);
}
function MB(e) {
  for (var t = ua(e), n = t.length; n--; ) {
    var r = t[n], s = e[r];
    t[n] = [r, s, Xp(s)];
  }
  return t;
}
function Zp(e, t) {
  return function(n) {
    return n == null ? !1 : n[e] === t && (t !== void 0 || e in Object(n));
  };
}
function qB(e) {
  var t = MB(e);
  return t.length == 1 && t[0][2] ? Zp(t[0][0], t[0][1]) : function(n) {
    return n === e || FB(n, e, t);
  };
}
function $B(e, t) {
  return e != null && t in Object(e);
}
function kB(e, t, n) {
  t = lc(t, e);
  for (var r = -1, s = t.length, i = !1; ++r < s; ) {
    var o = Sl(t[r]);
    if (!(i = e != null && n(e, o)))
      break;
    e = e[o];
  }
  return i || ++r != s ? i : (s = e == null ? 0 : e.length, !!s && tc(s) && _u(o, s) && (me(e) || hu(e)));
}
function UB(e, t) {
  return e != null && kB(e, t, $B);
}
var HB = 1, VB = 2;
function WB(e, t) {
  return sc(e) && Xp(t) ? Zp(Sl(e), t) : function(n) {
    var r = fe(n, e);
    return r === void 0 && r === t ? UB(n, e) : mu(t, r, HB | VB);
  };
}
function Jp(e) {
  return function(t) {
    return t == null ? void 0 : t[e];
  };
}
function GB(e) {
  return function(t) {
    return oc(t, e);
  };
}
function KB(e) {
  return sc(e) ? Jp(Sl(e)) : GB(e);
}
function ca(e) {
  return typeof e == "function" ? e : e == null ? Ps : typeof e == "object" ? me(e) ? WB(e[0], e[1]) : qB(e) : KB(e);
}
function jB(e, t, n, r) {
  for (var s = -1, i = e == null ? 0 : e.length; ++s < i; ) {
    var o = e[s];
    t(r, o, n(o), e);
  }
  return r;
}
function Qp(e) {
  return function(t, n, r) {
    for (var s = -1, i = Object(t), o = r(t), u = o.length; u--; ) {
      var h = o[e ? u : ++s];
      if (n(i[h], h, i) === !1)
        break;
    }
    return t;
  };
}
var zB = Qp();
function YB(e, t) {
  return e && zB(e, t, ua);
}
function eT(e, t) {
  return function(n, r) {
    if (n == null)
      return n;
    if (!gr(n))
      return e(n, r);
    for (var s = n.length, i = t ? s : -1, o = Object(n); (t ? i-- : ++i < s) && r(o[i], i, o) !== !1; )
      ;
    return n;
  };
}
var Ti = eT(YB);
function XB(e, t, n, r) {
  return Ti(e, function(s, i, o) {
    t(r, s, n(s), o);
  }), r;
}
function ZB(e, t) {
  return function(n, r) {
    var s = me(n) ? jB : XB, i = {};
    return s(n, e, ca(r), i);
  };
}
var td = function() {
  return dr.Date.now();
}, JB = "Expected a function", QB = Math.max, ew = Math.min;
function ol(e, t, n) {
  var r, s, i, o, u, h, A = 0, E = !1, p = !1, T = !0;
  if (typeof e != "function")
    throw new TypeError(JB);
  t = _i(t) || 0, Un(n) && (E = !!n.leading, p = "maxWait" in n, i = p ? QB(_i(n.maxWait) || 0, t) : i, T = "trailing" in n ? !!n.trailing : T);
  function S(M) {
    var P = r, F = s;
    return r = s = void 0, A = M, o = e.apply(F, P), o;
  }
  function b(M) {
    return A = M, u = setTimeout(I, t), E ? S(M) : o;
  }
  function L(M) {
    var P = M - h, F = M - A, C = t - P;
    return p ? ew(C, i - F) : C;
  }
  function v(M) {
    var P = M - h, F = M - A;
    return h === void 0 || P >= t || P < 0 || p && F >= i;
  }
  function I() {
    var M = td();
    if (v(M))
      return R(M);
    u = setTimeout(I, L(M));
  }
  function R(M) {
    return u = void 0, T && r ? S(M) : (r = s = void 0, o);
  }
  function g() {
    u !== void 0 && clearTimeout(u), A = 0, r = h = s = u = void 0;
  }
  function D() {
    return u === void 0 ? o : R(td());
  }
  function w() {
    var M = td(), P = v(M);
    if (r = arguments, s = this, h = M, P) {
      if (u === void 0)
        return b(h);
      if (p)
        return clearTimeout(u), u = setTimeout(I, t), S(h);
    }
    return u === void 0 && (u = setTimeout(I, t)), o;
  }
  return w.cancel = g, w.flush = D, w;
}
function Od(e) {
  return ur(e) && gr(e);
}
var tw = 200;
function nw(e, t, n, r) {
  var s = -1, i = Sp, o = !0, u = e.length, h = [], A = t.length;
  if (!u)
    return h;
  t.length >= tw && (i = hc, o = !1, t = new ci(t));
  e:
    for (; ++s < u; ) {
      var E = e[s], p = E;
      if (E = E !== 0 ? E : 0, o && p === p) {
        for (var T = A; T--; )
          if (t[T] === p)
            continue e;
        h.push(E);
      } else i(t, p, r) || h.push(E);
    }
  return h;
}
var rw = fu(function(e, t) {
  return Od(e) ? nw(e, _c(t, 1, Od, !0)) : [];
});
function fi(e) {
  var t = e == null ? 0 : e.length;
  return t ? e[t - 1] : void 0;
}
function Ec(e) {
  return typeof e == "function" ? e : Ps;
}
function z(e, t) {
  var n = me(e) ? pp : Ti;
  return n(e, Ec(t));
}
function aw(e, t) {
  for (var n = e == null ? 0 : e.length; n-- && t(e[n], n, e) !== !1; )
    ;
  return e;
}
var sw = Qp(!0);
function iw(e, t) {
  return e && sw(e, t, ua);
}
var lw = eT(iw, !0);
function ow(e, t) {
  var n = me(e) ? aw : lw;
  return n(e, Ec(t));
}
function uw(e, t, n) {
  e = Ut(e), t = pl(t);
  var r = e.length;
  n = n === void 0 ? r : $p(Gr(n), 0, r);
  var s = n;
  return n -= t.length, n >= 0 && e.slice(n, s) == t;
}
var tT = /[\\^$.*+?()[\]{}|]/g, _w = RegExp(tT.source);
function Su(e) {
  return e = Ut(e), e && _w.test(e) ? e.replace(tT, "\\$&") : e;
}
function dw(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r; )
    if (!t(e[n], n, e))
      return !1;
  return !0;
}
function cw(e, t) {
  var n = !0;
  return Ti(e, function(r, s, i) {
    return n = !!t(r, s, i), n;
  }), n;
}
function nT(e, t, n) {
  var r = me(e) ? dw : cw;
  return r(e, ca(t));
}
function fw(e, t) {
  var n = [];
  return Ti(e, function(r, s, i) {
    t(r, s, i) && n.push(r);
  }), n;
}
function Rt(e, t) {
  var n = me(e) ? Up : fw;
  return n(e, ca(t));
}
function hw(e) {
  return function(t, n, r) {
    var s = Object(t);
    if (!gr(t)) {
      var i = ca(n);
      t = ua(t), n = function(u) {
        return i(s[u], u, s);
      };
    }
    var o = e(t, n, r);
    return o > -1 ? s[i ? t[o] : o] : void 0;
  };
}
var Aw = Math.max;
function rT(e, t, n) {
  var r = e == null ? 0 : e.length;
  if (!r)
    return -1;
  var s = n == null ? 0 : Gr(n);
  return s < 0 && (s = Aw(r + s, 0)), Tp(e, ca(t), s);
}
var pc = hw(rT);
function aT(e, t) {
  var n = -1, r = gr(e) ? Array(e.length) : [];
  return Ti(e, function(s, i, o) {
    r[++n] = t(s, i, o);
  }), r;
}
function xn(e, t) {
  var n = me(e) ? ii : aT;
  return n(e, ca(t));
}
function Ew(e, t) {
  return e > t;
}
var pw = "[object String]";
function it(e) {
  return typeof e == "string" || !me(e) && ur(e) && oa(e) == pw;
}
function Tw(e, t) {
  return ii(t, function(n) {
    return e[n];
  });
}
function Tc(e) {
  return e == null ? [] : Tw(e, ua(e));
}
var mw = Math.max;
function Cd(e, t, n, r) {
  e = gr(e) ? e : Tc(e), n = n ? Gr(n) : 0;
  var s = e.length;
  return n < 0 && (n = mw(s + n, 0)), it(e) ? n <= s && e.indexOf(t, n) > -1 : !!s && mp(e, t, n) > -1;
}
var Sw = "[object Map]", bw = "[object Set]", Lw = Object.prototype, vw = Lw.hasOwnProperty;
function hn(e) {
  if (e == null)
    return !0;
  if (gr(e) && (me(e) || typeof e == "string" || typeof e.splice == "function" || sl(e) || nc(e) || hu(e)))
    return !e.length;
  var t = Mn(e);
  if (t == Sw || t == bw)
    return !e.size;
  if (ml(e))
    return !rc(e).length;
  for (var n in e)
    if (vw.call(e, n))
      return !1;
  return !0;
}
function mc(e, t) {
  return mu(e, t);
}
function fa(e) {
  return typeof e == "number" && e == Gr(e);
}
var Iw = "[object Number]";
function yn(e) {
  return typeof e == "number" || ur(e) && oa(e) == Iw;
}
function yw(e) {
  return yn(e) && e != +e;
}
function ae(e) {
  return e == null;
}
function Ce(e) {
  return e === void 0;
}
var Pa = ZB(function(e, t, n) {
  ec(e, n, t);
});
function gw(e, t) {
  return e < t;
}
function sT(e, t, n) {
  for (var r = -1, s = e.length; ++r < s; ) {
    var i = e[r], o = t(i);
    if (o != null && (u === void 0 ? o === o && !Cs(o) : n(o, u)))
      var u = o, h = i;
  }
  return h;
}
function Rw(e) {
  return e && e.length ? sT(e, Ps, Ew) : void 0;
}
function Ow(e) {
  return e && e.length ? sT(e, Ps, gw) : void 0;
}
function Cw(e, t, n, r) {
  if (!Un(e))
    return e;
  t = lc(t, e);
  for (var s = -1, i = t.length, o = i - 1, u = e; u != null && ++s < i; ) {
    var h = Sl(t[s]), A = n;
    if (h === "__proto__" || h === "constructor" || h === "prototype")
      return e;
    if (s != o) {
      var E = u[h];
      A = void 0, A === void 0 && (A = Un(E) ? E : _u(t[s + 1]) ? [] : {});
    }
    cu(u, h, A), u = u[h];
  }
  return e;
}
function Nw(e, t) {
  var n = e.length;
  for (e.sort(t); n--; )
    e[n] = e[n].value;
  return e;
}
function Dw(e, t) {
  if (e !== t) {
    var n = e !== void 0, r = e === null, s = e === e, i = Cs(e), o = t !== void 0, u = t === null, h = t === t, A = Cs(t);
    if (!u && !A && !i && e > t || i && o && h && !u && !A || r && o && h || !n && h || !s)
      return 1;
    if (!r && !i && !A && e < t || A && n && s && !r && !i || u && n && s || !o && s || !h)
      return -1;
  }
  return 0;
}
function Bw(e, t, n) {
  for (var r = -1, s = e.criteria, i = t.criteria, o = s.length, u = n.length; ++r < o; ) {
    var h = Dw(s[r], i[r]);
    if (h) {
      if (r >= u)
        return h;
      var A = n[r];
      return h * (A == "desc" ? -1 : 1);
    }
  }
  return e.index - t.index;
}
function iT(e, t, n) {
  t.length ? t = ii(t, function(i) {
    return me(i) ? function(o) {
      return oc(o, i.length === 1 ? i[0] : i);
    } : i;
  }) : t = [Ps];
  var r = -1;
  t = ii(t, Au(ca));
  var s = aT(e, function(i, o, u) {
    var h = ii(t, function(A) {
      return A(i);
    });
    return { criteria: h, index: ++r, value: i };
  });
  return Nw(s, function(i, o) {
    return Bw(i, o, n);
  });
}
function Sc(e, t, n, r) {
  return e == null ? [] : (me(t) || (t = t == null ? [] : [t]), n = n, me(n) || (n = n == null ? [] : [n]), iT(e, t, n));
}
var ww = 9007199254740991, Pw = Math.floor;
function Nd(e, t) {
  var n = "";
  if (!e || t < 1 || t > ww)
    return n;
  do
    t % 2 && (n += e), t = Pw(t / 2), t && (e += e);
  while (t);
  return n;
}
var xw = Jp("length"), lT = "\\ud800-\\udfff", Fw = "\\u0300-\\u036f", Mw = "\\ufe20-\\ufe2f", qw = "\\u20d0-\\u20ff", $w = Fw + Mw + qw, kw = "\\ufe0e\\ufe0f", Uw = "[" + lT + "]", Dd = "[" + $w + "]", Bd = "\\ud83c[\\udffb-\\udfff]", Hw = "(?:" + Dd + "|" + Bd + ")", oT = "[^" + lT + "]", uT = "(?:\\ud83c[\\udde6-\\uddff]){2}", _T = "[\\ud800-\\udbff][\\udc00-\\udfff]", Vw = "\\u200d", dT = Hw + "?", cT = "[" + kw + "]?", Ww = "(?:" + Vw + "(?:" + [oT, uT, _T].join("|") + ")" + cT + dT + ")*", Gw = cT + dT + Ww, Kw = "(?:" + [oT + Dd + "?", Dd, uT, _T, Uw].join("|") + ")", dE = RegExp(Bd + "(?=" + Bd + ")|" + Kw + Gw, "g");
function jw(e) {
  for (var t = dE.lastIndex = 0; dE.test(e); )
    ++t;
  return t;
}
function bc(e) {
  return Tu(e) ? jw(e) : xw(e);
}
var zw = Math.ceil;
function Yw(e, t) {
  t = t === void 0 ? " " : pl(t);
  var n = t.length;
  if (n < 2)
    return n ? Nd(t, e) : t;
  var r = Nd(t, zw(e / bc(t)));
  return Tu(t) ? Cp(Fp(r), 0, e).join("") : r.slice(0, e);
}
function Xw(e, t, n) {
  e = Ut(e), t = Gr(t);
  var r = t ? bc(e) : 0;
  return t && r < t ? Yw(t - r, n) + e : e;
}
var Zw = Math.ceil, Jw = Math.max;
function Qw(e, t, n, r) {
  for (var s = -1, i = Jw(Zw((t - e) / (n || 1)), 0), o = Array(i); i--; )
    o[++s] = e, e += n;
  return o;
}
function eP(e) {
  return function(t, n, r) {
    return r && typeof r != "number" && jo(t, n, r) && (n = r = void 0), t = Bo(t), n === void 0 ? (n = t, t = 0) : n = Bo(n), r = r === void 0 ? t < n ? 1 : -1 : Bo(r), Qw(t, n, r);
  };
}
var tP = eP();
function nP(e, t, n, r, s) {
  return s(e, function(i, o, u) {
    n = r ? (r = !1, i) : t(n, i, o, u);
  }), n;
}
function rP(e, t, n) {
  var r = me(e) ? IN : nP, s = arguments.length < 3;
  return r(e, ca(t), n, s, Ti);
}
function aP(e, t, n) {
  return t === void 0 ? t = 1 : t = Gr(t), Nd(Ut(e), t);
}
var sP = qp("round");
function Lc(e, t, n) {
  return e == null ? e : Cw(e, t, n);
}
var iP = "[object Map]", lP = "[object Set]";
function mi(e) {
  if (e == null)
    return 0;
  if (gr(e))
    return it(e) ? bc(e) : e.length;
  var t = Mn(e);
  return t == iP || t == lP ? e.size : rc(e).length;
}
var wd = fu(function(e, t) {
  if (e == null)
    return [];
  var n = t.length;
  return n > 1 && jo(e, t[0], t[1]) ? t = [] : n > 2 && jo(t[0], t[1], t[2]) && (t = [t[0]]), iT(e, _c(t), []);
});
function vc(e, t, n) {
  return e = Ut(e), n = n == null ? 0 : $p(Gr(n), 0, e.length), t = pl(t), e.slice(n, n + t.length) == t;
}
function fT(e, t, n) {
  return e && e.length ? (t = t === void 0 ? 1 : Gr(t), Op(e, 0, t < 0 ? 0 : t)) : [];
}
var oP = 9007199254740991, nd = 4294967295, uP = Math.min;
function lr(e, t) {
  if (e = Gr(e), e < 1 || e > oP)
    return [];
  var n = nd, r = uP(e, nd);
  t = Ec(t), e -= nd;
  for (var s = bp(r, t); ++n < e; )
    t(n);
  return s;
}
function hT(e) {
  return Ut(e).toLowerCase();
}
function AT(e) {
  return Ut(e).toUpperCase();
}
var _P = 1 / 0, dP = li && 1 / Ac(new li([, -0]))[1] == _P ? function(e) {
  return new li(e);
} : oO, cP = 200;
function Ic(e, t, n) {
  var r = -1, s = Sp, i = e.length, o = !0, u = [], h = u;
  if (i >= cP) {
    var A = t ? null : dP(e);
    if (A)
      return Ac(A);
    o = !1, s = hc, h = new ci();
  } else
    h = t ? [] : u;
  e:
    for (; ++r < i; ) {
      var E = e[r], p = t ? t(E) : E;
      if (E = E !== 0 ? E : 0, o && p === p) {
        for (var T = h.length; T--; )
          if (h[T] === p)
            continue e;
        t && h.push(p), u.push(E);
      } else s(h, p, n) || (h !== u && h.push(p), u.push(E));
    }
  return u;
}
var fP = fu(function(e) {
  return Ic(_c(e, 1, Od, !0));
});
function hP(e) {
  return e && e.length ? Ic(e) : [];
}
function ET(e, t) {
  return e && e.length ? Ic(e, ca(t)) : [];
}
var AP = 0;
function lt(e) {
  var t = ++AP;
  return Ut(e) + t;
}
function EP(e, {
  classButtonLocal: t = _(() => {
  }),
  isOpen: n = _(() => !1),
  toggleLocal: r = () => {
  },
  currentId: s = _(() => "")
}) {
  const i = d(e, "item"), o = de("classButton"), u = de("disabled"), h = de("id"), A = de("isCaret"), E = de("keyContent"), p = de("keyLabel"), T = de("readonly"), S = de("withGap"), b = _(() => !!(u.value || i.value.disabled)), L = _(() => Ce(i.value.isCaret) ? A.value : i.value.isCaret), v = _(() => T.value || i.value.readonly), I = _(() => `${h.value}_${s.value}`), R = _(() => v.value ? "div" : "a"), g = _(() => {
    const M = {
      class: ["a_accordion__button", o.value, t.value, {
        a_accordion__button_collapsed: !n.value,
        a_accordion__button_has_not_caret: !L.value,
        a_accordion__button_with_gap: S.value,
        readonly: v.value
      }],
      id: i.value.id
    };
    return v.value || (M.ariaExpanded = n.value, M["aria-controls"] = I.value, M.rolw = "button", M.tabindex = 0, M.disabled = b.value, M.onClick = r), M;
  }), D = _(() => p.value ? fe(i.value, p.value) : ""), w = _(() => E.value ? fe(i.value, E.value) : "");
  return {
    buttonAttributes: g,
    buttonTag: R,
    contentLocal: w,
    idForCollapse: I,
    labelLocal: D
  };
}
function pP(e) {
  const t = d(e, "item"), n = de("keyChildren"), r = _(() => fe(t.value, n.value, []) || []), s = _(() => r.value.length !== 0);
  return {
    children: r,
    hasChildren: s
  };
}
function TP(e) {
  const t = d(e, "item"), n = de("keyClassBody"), r = de("keyClassHeader"), s = de("keyClassButton"), i = _(() => {
    if (n.value)
      return fe(t.value, n.value);
  }), o = _(() => {
    if (r.value)
      return fe(t.value, r.value);
  }), u = _(() => {
    if (s.value)
      return fe(t.value, s.value);
  });
  return {
    classBodyLocal: i,
    classButtonLocal: u,
    classHeaderLocal: o
  };
}
const Ke = "_a_id";
function mP(e) {
  const t = d(e, "isParentOpen"), n = d(e, "item"), r = d(e, "itemIndex"), s = d(e, "keyId"), i = d(e, "parentsIds"), o = d(e, "parentIndexes"), u = de("idsForOpen"), h = de("toggle"), A = _(() => n.value[Ke]), E = _(() => t.value ? u.value.indexOf(A.value) !== -1 : !1), p = _(() => {
    const I = pe(i.value);
    return I.push(`${A.value}`), I;
  }), T = _(() => o.value.join(".")), S = _(() => T.value ? `${T.value}.${r.value}` : `${r.value}`), b = _(() => {
    const I = pe(o.value);
    return I.push(`${S.value}`), I;
  }), L = (I) => {
    h({
      $event: I,
      parentsIds: i.value,
      isOpen: E.value,
      item: n.value,
      itemIndex: r.value
    });
  };
  return {
    closeItemIfOpen: () => {
      E.value && s.value && L();
    },
    currentId: A,
    isOpen: E,
    parentIndexesForChild: b,
    parentsIdsForChild: p,
    toggleLocal: L
  };
}
function SP(e) {
  const t = d(e, "item"), n = de("keyIsRender"), r = de("keyIsRenderBodyByFirstOpen"), s = B(!1), i = _(() => {
    if (r.value)
      return fe(t.value, r.value);
  }), o = _(() => i.value ? s.value : !0), u = _(() => n.value ? !!fe(t.value, n.value, !0) : !0);
  return {
    isBodyVisible: o,
    isOpenFirst: s,
    isRender: u
  };
}
/*! @license DOMPurify 3.2.3 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.3/LICENSE */
const {
  entries: pT,
  setPrototypeOf: cE,
  isFrozen: bP,
  getPrototypeOf: LP,
  getOwnPropertyDescriptor: vP
} = Object;
let {
  freeze: An,
  seal: _r,
  create: TT
} = Object, {
  apply: Pd,
  construct: xd
} = typeof Reflect < "u" && Reflect;
An || (An = function(t) {
  return t;
});
_r || (_r = function(t) {
  return t;
});
Pd || (Pd = function(t, n, r) {
  return t.apply(n, r);
});
xd || (xd = function(t, n) {
  return new t(...n);
});
const Io = Hn(Array.prototype.forEach), fE = Hn(Array.prototype.pop), Wi = Hn(Array.prototype.push), wo = Hn(String.prototype.toLowerCase), rd = Hn(String.prototype.toString), hE = Hn(String.prototype.match), Gi = Hn(String.prototype.replace), IP = Hn(String.prototype.indexOf), yP = Hn(String.prototype.trim), br = Hn(Object.prototype.hasOwnProperty), cn = Hn(RegExp.prototype.test), Ki = gP(TypeError);
function Hn(e) {
  return function(t) {
    for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++)
      r[s - 1] = arguments[s];
    return Pd(e, t, r);
  };
}
function gP(e) {
  return function() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return xd(e, n);
  };
}
function Ye(e, t) {
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : wo;
  cE && cE(e, null);
  let r = t.length;
  for (; r--; ) {
    let s = t[r];
    if (typeof s == "string") {
      const i = n(s);
      i !== s && (bP(t) || (t[r] = i), s = i);
    }
    e[s] = !0;
  }
  return e;
}
function RP(e) {
  for (let t = 0; t < e.length; t++)
    br(e, t) || (e[t] = null);
  return e;
}
function Is(e) {
  const t = TT(null);
  for (const [n, r] of pT(e))
    br(e, n) && (Array.isArray(r) ? t[n] = RP(r) : r && typeof r == "object" && r.constructor === Object ? t[n] = Is(r) : t[n] = r);
  return t;
}
function ji(e, t) {
  for (; e !== null; ) {
    const r = vP(e, t);
    if (r) {
      if (r.get)
        return Hn(r.get);
      if (typeof r.value == "function")
        return Hn(r.value);
    }
    e = LP(e);
  }
  function n() {
    return null;
  }
  return n;
}
const AE = An(["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"]), ad = An(["svg", "a", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "filter", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "style", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern"]), sd = An(["feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence"]), OP = An(["animate", "color-profile", "cursor", "discard", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignobject", "hatch", "hatchpath", "mesh", "meshgradient", "meshpatch", "meshrow", "missing-glyph", "script", "set", "solidcolor", "unknown", "use"]), id = An(["math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover", "mprescripts"]), CP = An(["maction", "maligngroup", "malignmark", "mlongdiv", "mscarries", "mscarry", "msgroup", "mstack", "msline", "msrow", "semantics", "annotation", "annotation-xml", "mprescripts", "none"]), EE = An(["#text"]), pE = An(["accept", "action", "align", "alt", "autocapitalize", "autocomplete", "autopictureinpicture", "autoplay", "background", "bgcolor", "border", "capture", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "controls", "controlslist", "coords", "crossorigin", "datetime", "decoding", "default", "dir", "disabled", "disablepictureinpicture", "disableremoteplayback", "download", "draggable", "enctype", "enterkeyhint", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "inputmode", "integrity", "ismap", "kind", "label", "lang", "list", "loading", "loop", "low", "max", "maxlength", "media", "method", "min", "minlength", "multiple", "muted", "name", "nonce", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "playsinline", "popover", "popovertarget", "popovertargetaction", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "role", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "sizes", "span", "srclang", "start", "src", "srcset", "step", "style", "summary", "tabindex", "title", "translate", "type", "usemap", "valign", "value", "width", "wrap", "xmlns", "slot"]), ld = An(["accent-height", "accumulate", "additive", "alignment-baseline", "amplitude", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "class", "clip", "clippathunits", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "exponent", "fill", "fill-opacity", "fill-rule", "filter", "filterunits", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "height", "href", "id", "image-rendering", "in", "in2", "intercept", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lang", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "media", "method", "mode", "min", "name", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "preserveaspectratio", "primitiveunits", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "result", "rotate", "scale", "seed", "shape-rendering", "slope", "specularconstant", "specularexponent", "spreadmethod", "startoffset", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "style", "surfacescale", "systemlanguage", "tabindex", "tablevalues", "targetx", "targety", "transform", "transform-origin", "text-anchor", "text-decoration", "text-rendering", "textlength", "type", "u1", "u2", "unicode", "values", "viewbox", "visibility", "version", "vert-adv-y", "vert-origin-x", "vert-origin-y", "width", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "xmlns", "y", "y1", "y2", "z", "zoomandpan"]), TE = An(["accent", "accentunder", "align", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "dir", "display", "displaystyle", "encoding", "fence", "frame", "height", "href", "id", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "width", "xmlns"]), yo = An(["xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"]), NP = _r(/\{\{[\w\W]*|[\w\W]*\}\}/gm), DP = _r(/<%[\w\W]*|[\w\W]*%>/gm), BP = _r(/\$\{[\w\W]*}/gm), wP = _r(/^data-[\-\w.\u00B7-\uFFFF]+$/), PP = _r(/^aria-[\-\w]+$/), mT = _r(
  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i
  // eslint-disable-line no-useless-escape
), xP = _r(/^(?:\w+script|data):/i), FP = _r(
  /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g
  // eslint-disable-line no-control-regex
), ST = _r(/^html$/i), MP = _r(/^[a-z][.\w]*(-[.\w]+)+$/i);
var mE = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  ARIA_ATTR: PP,
  ATTR_WHITESPACE: FP,
  CUSTOM_ELEMENT: MP,
  DATA_ATTR: wP,
  DOCTYPE_NAME: ST,
  ERB_EXPR: DP,
  IS_ALLOWED_URI: mT,
  IS_SCRIPT_OR_DATA: xP,
  MUSTACHE_EXPR: NP,
  TMPLIT_EXPR: BP
});
const zi = {
  element: 1,
  text: 3,
  // Deprecated
  progressingInstruction: 7,
  comment: 8,
  document: 9
}, qP = function() {
  return typeof window > "u" ? null : window;
}, $P = function(t, n) {
  if (typeof t != "object" || typeof t.createPolicy != "function")
    return null;
  let r = null;
  const s = "data-tt-policy-suffix";
  n && n.hasAttribute(s) && (r = n.getAttribute(s));
  const i = "dompurify" + (r ? "#" + r : "");
  try {
    return t.createPolicy(i, {
      createHTML(o) {
        return o;
      },
      createScriptURL(o) {
        return o;
      }
    });
  } catch {
    return console.warn("TrustedTypes policy " + i + " could not be created."), null;
  }
}, SE = function() {
  return {
    afterSanitizeAttributes: [],
    afterSanitizeElements: [],
    afterSanitizeShadowDOM: [],
    beforeSanitizeAttributes: [],
    beforeSanitizeElements: [],
    beforeSanitizeShadowDOM: [],
    uponSanitizeAttribute: [],
    uponSanitizeElement: [],
    uponSanitizeShadowNode: []
  };
};
function bT() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : qP();
  const t = (Re) => bT(Re);
  if (t.version = "3.2.3", t.removed = [], !e || !e.document || e.document.nodeType !== zi.document)
    return t.isSupported = !1, t;
  let {
    document: n
  } = e;
  const r = n, s = r.currentScript, {
    DocumentFragment: i,
    HTMLTemplateElement: o,
    Node: u,
    Element: h,
    NodeFilter: A,
    NamedNodeMap: E = e.NamedNodeMap || e.MozNamedAttrMap,
    HTMLFormElement: p,
    DOMParser: T,
    trustedTypes: S
  } = e, b = h.prototype, L = ji(b, "cloneNode"), v = ji(b, "remove"), I = ji(b, "nextSibling"), R = ji(b, "childNodes"), g = ji(b, "parentNode");
  if (typeof o == "function") {
    const Re = n.createElement("template");
    Re.content && Re.content.ownerDocument && (n = Re.content.ownerDocument);
  }
  let D, w = "";
  const {
    implementation: M,
    createNodeIterator: P,
    createDocumentFragment: F,
    getElementsByTagName: C
  } = n, {
    importNode: $
  } = r;
  let H = SE();
  t.isSupported = typeof pT == "function" && typeof g == "function" && M && M.createHTMLDocument !== void 0;
  const {
    MUSTACHE_EXPR: j,
    ERB_EXPR: le,
    TMPLIT_EXPR: ee,
    DATA_ATTR: _e,
    ARIA_ATTR: ie,
    IS_SCRIPT_OR_DATA: ue,
    ATTR_WHITESPACE: Te,
    CUSTOM_ELEMENT: Pe
  } = mE;
  let {
    IS_ALLOWED_URI: Se
  } = mE, se = null;
  const Oe = Ye({}, [...AE, ...ad, ...sd, ...id, ...EE]);
  let ye = null;
  const je = Ye({}, [...pE, ...ld, ...TE, ...yo]);
  let he = Object.seal(TT(null, {
    tagNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    attributeNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    allowCustomizedBuiltInElements: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: !1
    }
  })), ne = null, V = null, Q = !0, re = !0, ve = !1, De = !0, qe = !1, Xe = !0, Me = !1, xe = !1, at = !1, Ve = !1, st = !1, Ze = !1, At = !0, Et = !1;
  const qt = "user-content-";
  let pn = !0, cr = !1, Qt = {}, Gn = null;
  const Kn = Ye({}, ["annotation-xml", "audio", "colgroup", "desc", "foreignobject", "head", "iframe", "math", "mi", "mn", "mo", "ms", "mtext", "noembed", "noframes", "noscript", "plaintext", "script", "style", "svg", "template", "thead", "title", "video", "xmp"]);
  let Rn = null;
  const Cr = Ye({}, ["audio", "video", "img", "source", "image", "track"]);
  let fr = null;
  const Nr = Ye({}, ["alt", "class", "for", "id", "label", "name", "pattern", "placeholder", "role", "summary", "title", "value", "style", "xmlns"]), jn = "http://www.w3.org/1998/Math/MathML", zn = "http://www.w3.org/2000/svg", Gt = "http://www.w3.org/1999/xhtml";
  let Tn = Gt, hr = !1, Ar = null;
  const _s = Ye({}, [jn, zn, Gt], rd);
  let Dr = Ye({}, ["mi", "mo", "mn", "ms", "mtext"]), Yn = Ye({}, ["annotation-xml"]);
  const Aa = Ye({}, ["title", "style", "font", "a", "script"]);
  let On = null;
  const ds = ["application/xhtml+xml", "text/html"], cs = "text/html";
  let Lt = null, Xn = null;
  const jr = n.createElement("form"), Ea = function(k) {
    return k instanceof RegExp || k instanceof Function;
  }, zr = function() {
    let k = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (!(Xn && Xn === k)) {
      if ((!k || typeof k != "object") && (k = {}), k = Is(k), On = // eslint-disable-next-line unicorn/prefer-includes
      ds.indexOf(k.PARSER_MEDIA_TYPE) === -1 ? cs : k.PARSER_MEDIA_TYPE, Lt = On === "application/xhtml+xml" ? rd : wo, se = br(k, "ALLOWED_TAGS") ? Ye({}, k.ALLOWED_TAGS, Lt) : Oe, ye = br(k, "ALLOWED_ATTR") ? Ye({}, k.ALLOWED_ATTR, Lt) : je, Ar = br(k, "ALLOWED_NAMESPACES") ? Ye({}, k.ALLOWED_NAMESPACES, rd) : _s, fr = br(k, "ADD_URI_SAFE_ATTR") ? Ye(Is(Nr), k.ADD_URI_SAFE_ATTR, Lt) : Nr, Rn = br(k, "ADD_DATA_URI_TAGS") ? Ye(Is(Cr), k.ADD_DATA_URI_TAGS, Lt) : Cr, Gn = br(k, "FORBID_CONTENTS") ? Ye({}, k.FORBID_CONTENTS, Lt) : Kn, ne = br(k, "FORBID_TAGS") ? Ye({}, k.FORBID_TAGS, Lt) : {}, V = br(k, "FORBID_ATTR") ? Ye({}, k.FORBID_ATTR, Lt) : {}, Qt = br(k, "USE_PROFILES") ? k.USE_PROFILES : !1, Q = k.ALLOW_ARIA_ATTR !== !1, re = k.ALLOW_DATA_ATTR !== !1, ve = k.ALLOW_UNKNOWN_PROTOCOLS || !1, De = k.ALLOW_SELF_CLOSE_IN_ATTR !== !1, qe = k.SAFE_FOR_TEMPLATES || !1, Xe = k.SAFE_FOR_XML !== !1, Me = k.WHOLE_DOCUMENT || !1, Ve = k.RETURN_DOM || !1, st = k.RETURN_DOM_FRAGMENT || !1, Ze = k.RETURN_TRUSTED_TYPE || !1, at = k.FORCE_BODY || !1, At = k.SANITIZE_DOM !== !1, Et = k.SANITIZE_NAMED_PROPS || !1, pn = k.KEEP_CONTENT !== !1, cr = k.IN_PLACE || !1, Se = k.ALLOWED_URI_REGEXP || mT, Tn = k.NAMESPACE || Gt, Dr = k.MATHML_TEXT_INTEGRATION_POINTS || Dr, Yn = k.HTML_INTEGRATION_POINTS || Yn, he = k.CUSTOM_ELEMENT_HANDLING || {}, k.CUSTOM_ELEMENT_HANDLING && Ea(k.CUSTOM_ELEMENT_HANDLING.tagNameCheck) && (he.tagNameCheck = k.CUSTOM_ELEMENT_HANDLING.tagNameCheck), k.CUSTOM_ELEMENT_HANDLING && Ea(k.CUSTOM_ELEMENT_HANDLING.attributeNameCheck) && (he.attributeNameCheck = k.CUSTOM_ELEMENT_HANDLING.attributeNameCheck), k.CUSTOM_ELEMENT_HANDLING && typeof k.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements == "boolean" && (he.allowCustomizedBuiltInElements = k.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements), qe && (re = !1), st && (Ve = !0), Qt && (se = Ye({}, EE), ye = [], Qt.html === !0 && (Ye(se, AE), Ye(ye, pE)), Qt.svg === !0 && (Ye(se, ad), Ye(ye, ld), Ye(ye, yo)), Qt.svgFilters === !0 && (Ye(se, sd), Ye(ye, ld), Ye(ye, yo)), Qt.mathMl === !0 && (Ye(se, id), Ye(ye, TE), Ye(ye, yo))), k.ADD_TAGS && (se === Oe && (se = Is(se)), Ye(se, k.ADD_TAGS, Lt)), k.ADD_ATTR && (ye === je && (ye = Is(ye)), Ye(ye, k.ADD_ATTR, Lt)), k.ADD_URI_SAFE_ATTR && Ye(fr, k.ADD_URI_SAFE_ATTR, Lt), k.FORBID_CONTENTS && (Gn === Kn && (Gn = Is(Gn)), Ye(Gn, k.FORBID_CONTENTS, Lt)), pn && (se["#text"] = !0), Me && Ye(se, ["html", "head", "body"]), se.table && (Ye(se, ["tbody"]), delete ne.tbody), k.TRUSTED_TYPES_POLICY) {
        if (typeof k.TRUSTED_TYPES_POLICY.createHTML != "function")
          throw Ki('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');
        if (typeof k.TRUSTED_TYPES_POLICY.createScriptURL != "function")
          throw Ki('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');
        D = k.TRUSTED_TYPES_POLICY, w = D.createHTML("");
      } else
        D === void 0 && (D = $P(S, s)), D !== null && typeof w == "string" && (w = D.createHTML(""));
      An && An(k), Xn = k;
    }
  }, pa = Ye({}, [...ad, ...sd, ...OP]), Br = Ye({}, [...id, ...CP]), Ii = function(k) {
    let oe = g(k);
    (!oe || !oe.tagName) && (oe = {
      namespaceURI: Tn,
      tagName: "template"
    });
    const Le = wo(k.tagName), dt = wo(oe.tagName);
    return Ar[k.namespaceURI] ? k.namespaceURI === zn ? oe.namespaceURI === Gt ? Le === "svg" : oe.namespaceURI === jn ? Le === "svg" && (dt === "annotation-xml" || Dr[dt]) : !!pa[Le] : k.namespaceURI === jn ? oe.namespaceURI === Gt ? Le === "math" : oe.namespaceURI === zn ? Le === "math" && Yn[dt] : !!Br[Le] : k.namespaceURI === Gt ? oe.namespaceURI === zn && !Yn[dt] || oe.namespaceURI === jn && !Dr[dt] ? !1 : !Br[Le] && (Aa[Le] || !pa[Le]) : !!(On === "application/xhtml+xml" && Ar[k.namespaceURI]) : !1;
  }, en = function(k) {
    Wi(t.removed, {
      element: k
    });
    try {
      g(k).removeChild(k);
    } catch {
      v(k);
    }
  }, Ta = function(k, oe) {
    try {
      Wi(t.removed, {
        attribute: oe.getAttributeNode(k),
        from: oe
      });
    } catch {
      Wi(t.removed, {
        attribute: null,
        from: oe
      });
    }
    if (oe.removeAttribute(k), k === "is")
      if (Ve || st)
        try {
          en(oe);
        } catch {
        }
      else
        try {
          oe.setAttribute(k, "");
        } catch {
        }
  }, ks = function(k) {
    let oe = null, Le = null;
    if (at)
      k = "<remove></remove>" + k;
    else {
      const yt = hE(k, /^[\r\n\t ]+/);
      Le = yt && yt[0];
    }
    On === "application/xhtml+xml" && Tn === Gt && (k = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + k + "</body></html>");
    const dt = D ? D.createHTML(k) : k;
    if (Tn === Gt)
      try {
        oe = new T().parseFromString(dt, On);
      } catch {
      }
    if (!oe || !oe.documentElement) {
      oe = M.createDocument(Tn, "template", null);
      try {
        oe.documentElement.innerHTML = hr ? w : dt;
      } catch {
      }
    }
    const Ht = oe.body || oe.documentElement;
    return k && Le && Ht.insertBefore(n.createTextNode(Le), Ht.childNodes[0] || null), Tn === Gt ? C.call(oe, Me ? "html" : "body")[0] : Me ? oe.documentElement : Ht;
  }, Us = function(k) {
    return P.call(
      k.ownerDocument || k,
      k,
      // eslint-disable-next-line no-bitwise
      A.SHOW_ELEMENT | A.SHOW_COMMENT | A.SHOW_TEXT | A.SHOW_PROCESSING_INSTRUCTION | A.SHOW_CDATA_SECTION,
      null
    );
  }, Er = function(k) {
    return k instanceof p && (typeof k.nodeName != "string" || typeof k.textContent != "string" || typeof k.removeChild != "function" || !(k.attributes instanceof E) || typeof k.removeAttribute != "function" || typeof k.setAttribute != "function" || typeof k.namespaceURI != "string" || typeof k.insertBefore != "function" || typeof k.hasChildNodes != "function");
  }, fs = function(k) {
    return typeof u == "function" && k instanceof u;
  };
  function on(Re, k, oe) {
    Io(Re, (Le) => {
      Le.call(t, k, oe, Xn);
    });
  }
  const Hs = function(k) {
    let oe = null;
    if (on(H.beforeSanitizeElements, k, null), Er(k))
      return en(k), !0;
    const Le = Lt(k.nodeName);
    if (on(H.uponSanitizeElement, k, {
      tagName: Le,
      allowedTags: se
    }), k.hasChildNodes() && !fs(k.firstElementChild) && cn(/<[/\w]/g, k.innerHTML) && cn(/<[/\w]/g, k.textContent) || k.nodeType === zi.progressingInstruction || Xe && k.nodeType === zi.comment && cn(/<[/\w]/g, k.data))
      return en(k), !0;
    if (!se[Le] || ne[Le]) {
      if (!ne[Le] && yi(Le) && (he.tagNameCheck instanceof RegExp && cn(he.tagNameCheck, Le) || he.tagNameCheck instanceof Function && he.tagNameCheck(Le)))
        return !1;
      if (pn && !Gn[Le]) {
        const dt = g(k) || k.parentNode, Ht = R(k) || k.childNodes;
        if (Ht && dt) {
          const yt = Ht.length;
          for (let tn = yt - 1; tn >= 0; --tn) {
            const Zn = L(Ht[tn], !0);
            Zn.__removalCount = (k.__removalCount || 0) + 1, dt.insertBefore(Zn, I(k));
          }
        }
      }
      return en(k), !0;
    }
    return k instanceof h && !Ii(k) || (Le === "noscript" || Le === "noembed" || Le === "noframes") && cn(/<\/no(script|embed|frames)/i, k.innerHTML) ? (en(k), !0) : (qe && k.nodeType === zi.text && (oe = k.textContent, Io([j, le, ee], (dt) => {
      oe = Gi(oe, dt, " ");
    }), k.textContent !== oe && (Wi(t.removed, {
      element: k.cloneNode()
    }), k.textContent = oe)), on(H.afterSanitizeElements, k, null), !1);
  }, Pl = function(k, oe, Le) {
    if (At && (oe === "id" || oe === "name") && (Le in n || Le in jr))
      return !1;
    if (!(re && !V[oe] && cn(_e, oe))) {
      if (!(Q && cn(ie, oe))) {
        if (!ye[oe] || V[oe]) {
          if (
            // First condition does a very basic check if a) it's basically a valid custom element tagname AND
            // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck
            !(yi(k) && (he.tagNameCheck instanceof RegExp && cn(he.tagNameCheck, k) || he.tagNameCheck instanceof Function && he.tagNameCheck(k)) && (he.attributeNameCheck instanceof RegExp && cn(he.attributeNameCheck, oe) || he.attributeNameCheck instanceof Function && he.attributeNameCheck(oe)) || // Alternative, second condition checks if it's an `is`-attribute, AND
            // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            oe === "is" && he.allowCustomizedBuiltInElements && (he.tagNameCheck instanceof RegExp && cn(he.tagNameCheck, Le) || he.tagNameCheck instanceof Function && he.tagNameCheck(Le)))
          ) return !1;
        } else if (!fr[oe]) {
          if (!cn(Se, Gi(Le, Te, ""))) {
            if (!((oe === "src" || oe === "xlink:href" || oe === "href") && k !== "script" && IP(Le, "data:") === 0 && Rn[k])) {
              if (!(ve && !cn(ue, Gi(Le, Te, "")))) {
                if (Le)
                  return !1;
              }
            }
          }
        }
      }
    }
    return !0;
  }, yi = function(k) {
    return k !== "annotation-xml" && hE(k, Pe);
  }, xl = function(k) {
    on(H.beforeSanitizeAttributes, k, null);
    const {
      attributes: oe
    } = k;
    if (!oe || Er(k))
      return;
    const Le = {
      attrName: "",
      attrValue: "",
      keepAttr: !0,
      allowedAttributes: ye,
      forceKeepAttr: void 0
    };
    let dt = oe.length;
    for (; dt--; ) {
      const Ht = oe[dt], {
        name: yt,
        namespaceURI: tn,
        value: Zn
      } = Ht, hs = Lt(yt);
      let Vt = yt === "value" ? Zn : yP(Zn);
      if (Le.attrName = hs, Le.attrValue = Vt, Le.keepAttr = !0, Le.forceKeepAttr = void 0, on(H.uponSanitizeAttribute, k, Le), Vt = Le.attrValue, Et && (hs === "id" || hs === "name") && (Ta(yt, k), Vt = qt + Vt), Xe && cn(/((--!?|])>)|<\/(style|title)/i, Vt)) {
        Ta(yt, k);
        continue;
      }
      if (Le.forceKeepAttr || (Ta(yt, k), !Le.keepAttr))
        continue;
      if (!De && cn(/\/>/i, Vt)) {
        Ta(yt, k);
        continue;
      }
      qe && Io([j, le, ee], (Ri) => {
        Vt = Gi(Vt, Ri, " ");
      });
      const gi = Lt(k.nodeName);
      if (Pl(gi, hs, Vt)) {
        if (D && typeof S == "object" && typeof S.getAttributeType == "function" && !tn)
          switch (S.getAttributeType(gi, hs)) {
            case "TrustedHTML": {
              Vt = D.createHTML(Vt);
              break;
            }
            case "TrustedScriptURL": {
              Vt = D.createScriptURL(Vt);
              break;
            }
          }
        try {
          tn ? k.setAttributeNS(tn, yt, Vt) : k.setAttribute(yt, Vt), Er(k) ? en(k) : fE(t.removed);
        } catch {
        }
      }
    }
    on(H.afterSanitizeAttributes, k, null);
  }, Uu = function Re(k) {
    let oe = null;
    const Le = Us(k);
    for (on(H.beforeSanitizeShadowDOM, k, null); oe = Le.nextNode(); )
      on(H.uponSanitizeShadowNode, oe, null), Hs(oe), xl(oe), oe.content instanceof i && Re(oe.content);
    on(H.afterSanitizeShadowDOM, k, null);
  };
  return t.sanitize = function(Re) {
    let k = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, oe = null, Le = null, dt = null, Ht = null;
    if (hr = !Re, hr && (Re = "<!-->"), typeof Re != "string" && !fs(Re))
      if (typeof Re.toString == "function") {
        if (Re = Re.toString(), typeof Re != "string")
          throw Ki("dirty is not a string, aborting");
      } else
        throw Ki("toString is not a function");
    if (!t.isSupported)
      return Re;
    if (xe || zr(k), t.removed = [], typeof Re == "string" && (cr = !1), cr) {
      if (Re.nodeName) {
        const Zn = Lt(Re.nodeName);
        if (!se[Zn] || ne[Zn])
          throw Ki("root node is forbidden and cannot be sanitized in-place");
      }
    } else if (Re instanceof u)
      oe = ks("<!---->"), Le = oe.ownerDocument.importNode(Re, !0), Le.nodeType === zi.element && Le.nodeName === "BODY" || Le.nodeName === "HTML" ? oe = Le : oe.appendChild(Le);
    else {
      if (!Ve && !qe && !Me && // eslint-disable-next-line unicorn/prefer-includes
      Re.indexOf("<") === -1)
        return D && Ze ? D.createHTML(Re) : Re;
      if (oe = ks(Re), !oe)
        return Ve ? null : Ze ? w : "";
    }
    oe && at && en(oe.firstChild);
    const yt = Us(cr ? Re : oe);
    for (; dt = yt.nextNode(); )
      Hs(dt), xl(dt), dt.content instanceof i && Uu(dt.content);
    if (cr)
      return Re;
    if (Ve) {
      if (st)
        for (Ht = F.call(oe.ownerDocument); oe.firstChild; )
          Ht.appendChild(oe.firstChild);
      else
        Ht = oe;
      return (ye.shadowroot || ye.shadowrootmode) && (Ht = $.call(r, Ht, !0)), Ht;
    }
    let tn = Me ? oe.outerHTML : oe.innerHTML;
    return Me && se["!doctype"] && oe.ownerDocument && oe.ownerDocument.doctype && oe.ownerDocument.doctype.name && cn(ST, oe.ownerDocument.doctype.name) && (tn = "<!DOCTYPE " + oe.ownerDocument.doctype.name + `>
` + tn), qe && Io([j, le, ee], (Zn) => {
      tn = Gi(tn, Zn, " ");
    }), D && Ze ? D.createHTML(tn) : tn;
  }, t.setConfig = function() {
    let Re = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    zr(Re), xe = !0;
  }, t.clearConfig = function() {
    Xn = null, xe = !1;
  }, t.isValidAttribute = function(Re, k, oe) {
    Xn || zr({});
    const Le = Lt(Re), dt = Lt(k);
    return Pl(Le, dt, oe);
  }, t.addHook = function(Re, k) {
    typeof k == "function" && Wi(H[Re], k);
  }, t.removeHook = function(Re) {
    return fE(H[Re]);
  }, t.removeHooks = function(Re) {
    H[Re] = [];
  }, t.removeAllHooks = function() {
    H = SE();
  }, t;
}
var yc = bT();
const nde = yc, rde = yc.sanitize;
function Yo(e) {
  return yc.sanitize(kP(e), { ADD_ATTR: ["target"] });
}
function kP(e) {
  return yn(e) ? Ut(e) : e;
}
function ade(e) {
  return !me(e) || !e.length ? !1 : nT(e, it);
}
function UP(e) {
  return !me(e) || !e.length ? !1 : nT(e, me);
}
function HP(e) {
  const t = Object.keys(e);
  return t.length === 0 ? "" : `<ul class="a_list_without_styles">${t.map((r) => `<li>${e[r]}</li>`).join("")}</ul>`;
}
function VP({ array: e, keyChildren: t }) {
  return LT({ array: e, keyChildren: t, count: 0 });
}
function LT({ array: e, keyChildren: t, count: n = 0 }) {
  return me(e) && z(e, (r) => {
    n++;
    const s = fe(r, t);
    n = LT({ array: s, keyChildren: t, count: n });
  }), n;
}
const Yt = {
  beforeMount(e, t) {
    e.innerHTML = ae(t.value) || t.value === "" ? "" : Yo(t.value);
  },
  updated(e, t) {
    e.innerHTML = ae(t.value) || t.value === "" ? "" : Yo(t.value);
  }
}, WP = {
  name: "AAccordionItem",
  props: {
    isParentOpen: {
      type: Boolean,
      required: !0
    },
    item: {
      type: Object,
      required: !0
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    parentsIds: {
      type: Array,
      required: !1,
      default: () => []
    },
    parentIndexes: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  inject: [
    "classBody",
    "classHeader",
    "id",
    "withGap"
  ],
  setup(e) {
    const {
      closeItemIfOpen: t,
      currentId: n,
      isOpen: r,
      parentIndexesForChild: s,
      parentsIdsForChild: i,
      toggleLocal: o
    } = mP(e), {
      children: u,
      hasChildren: h
    } = pP(e), {
      classBodyLocal: A,
      classButtonLocal: E,
      classHeaderLocal: p
    } = TP(e), {
      isBodyVisible: T,
      isOpenFirst: S,
      isRender: b
    } = SP(e), {
      buttonAttributes: L,
      buttonTag: v,
      contentLocal: I,
      idForCollapse: R,
      labelLocal: g
    } = EP(e, {
      classButtonLocal: E,
      isOpen: r,
      toggleLocal: o,
      currentId: n
    });
    return rt(r, (D) => {
      D && !S.value && (S.value = !0);
    }, {
      immediate: !0
    }), Dt(() => {
      t();
    }), {
      buttonAttributes: L,
      buttonTag: v,
      children: u,
      classBodyLocal: A,
      classButtonLocal: E,
      classHeaderLocal: p,
      contentLocal: I,
      currentId: n,
      hasChildren: h,
      idForCollapse: R,
      isBodyVisible: T,
      isOpen: r,
      isRender: b,
      labelLocal: g,
      parentIndexesForChild: s,
      parentsIdsForChild: i
    };
  },
  render() {
    let e = [];
    return this.isBodyVisible && (e = [
      this.item.slotContent && this.$slots[this.item.slotContent] ? this.$slots[this.item.slotContent]({
        item: this.item,
        itemIndex: this.itemIndex,
        parentsIds: this.parentsIds,
        parentIndexes: this.parentIndexes,
        id: this.id,
        currentId: this.currentId
      }) : this.$slots.accordionContent ? this.$slots.accordionContent({
        item: this.item,
        itemIndex: this.itemIndex,
        parentsIds: this.parentsIds,
        parentIndexes: this.parentIndexes,
        id: this.id,
        currentId: this.currentId
      }) : this.contentLocal && Ot(c("div"), [
        [Yt, this.contentLocal]
      ]),
      this.hasChildren && c("div", {
        class: ["a_accordion"]
      }, [
        this.children.map((t, n) => c(Ur("AAccordionItem"), {
          key: t[Ke],
          item: t,
          itemIndex: n,
          isParentOpen: this.isOpen,
          parentsIds: this.parentsIdsForChild,
          parentIndexes: this.parentIndexesForChild,
          keyId: this.keyId
        }, this.$slots))
      ])
    ]), this.isRender && c("div", {
      class: [
        "a_accordion__item",
        {
          a_accordion__item_with_gap: this.withGap
        }
      ]
    }, [
      c("div", {
        class: ["a_accordion__header", this.classHeader, this.classHeaderLocal]
      }, [
        c(this.buttonTag, this.buttonAttributes, [
          this.item.slotButton && this.$slots[this.item.slotButton] ? this.$slots[this.item.slotButton]({
            item: this.item,
            itemIndex: this.itemIndex,
            parentsIds: this.parentsIds,
            parentIndexes: this.parentIndexes,
            id: this.id,
            currentId: this.currentId
          }) : this.$slots.accordionButton && this.$slots.accordionButton({
            item: this.item,
            itemIndex: this.itemIndex,
            parentsIds: this.parentsIds,
            parentIndexes: this.parentIndexes,
            id: this.id,
            currentId: this.currentId
          }),
          this.labelLocal && Ot(c("span"), [
            [Yt, this.labelLocal]
          ])
        ])
      ]),
      c("div", {
        id: this.idForCollapse,
        class: ["a_accordion__collapse_box", {
          a_accordion__collapse_box_show: this.isOpen
        }]
      }, [
        c("div", {
          class: ["a_accordion__body", this.classBody, this.classBodyLocal]
        }, e)
      ])
    ]);
  }
};
function GP(e) {
  const t = d(e, "data"), n = d(e, "keyId"), r = d(e, "keyChildren"), s = ({ items: o, parentIds: u = "" }) => {
    z(o, (h, A) => {
      const E = fe(h, n.value);
      let p;
      ae(E) ? p = `${u}${A}` : p = `${u}${E}`, h[Ke] = p;
      const T = h[r.value];
      T && T.length && s({ items: T, parentIds: `${p}_` });
    });
  };
  return {
    dataWithIds: _(() => {
      const o = pe(t.value);
      return s({ items: o }), o;
    })
  };
}
function KP(e, {
  idsForOpen: t = _(() => []),
  dataWithIds: n = _(() => [])
}) {
  const r = d(e, "indexesForOpen"), s = d(e, "keyChildren"), i = ({ indexForOpen: h }) => {
    let A = `${h}`.replaceAll(".", `.${s.value}.`);
    return A += `.${Ke}`, A;
  }, o = ({ isInit: h } = {}) => {
    if (h && !r.value.length)
      return;
    const A = [];
    s.value ? z(r.value, (E) => {
      const p = fe(n.value, i({ indexForOpen: E }));
      ae(p) || A.push(p);
    }) : z(r.value, (E) => {
      const p = fe(n.value, `${E}.${Ke}`);
      ae(p) || A.push(p);
    }), t.value = A;
  }, u = () => {
    o({ isInit: !0 });
  };
  return rt(r, () => {
    o();
  }), {
    initIdsFromIndexesForOpen: u
  };
}
function jP(e, { emit: t }) {
  const n = d(e, "alwaysOpen"), r = d(e, "disabled"), s = d(e, "idsForOpenDefault"), i = d(e, "prevent"), o = d(e, "stop"), u = B(void 0), h = () => {
    u.value = s.value;
  }, A = ({ currentId: T, isOpen: S }) => {
    if (S) {
      const b = T.split("__")[0];
      u.value = Rt(u.value, (L) => !vc(L, b));
    } else
      u.value.push(T);
  }, E = ({ currentId: T, parentsIds: S, isOpen: b }) => {
    b ? u.value = S : u.value = [...S, T];
  }, p = ({ item: T, parentsIds: S, isOpen: b, $event: L }) => {
    if (r.value)
      return;
    const v = pe(S), I = T[Ke];
    n.value ? A({ currentId: I, isOpen: b }) : E({ parentsIds: v, currentId: I, isOpen: b }), t("toggle", { idsForOpen: u.value, currentId: I, parentsIds: v, isOpen: b, $event: L, item: T }), o.value && L && L.stopPropagation(), i.value && L && L.preventDefault();
  };
  return rt(s, (T) => {
    mc(T, u.value) || (u.value = pe(T));
  }), {
    idsForOpen: u,
    initIdsForOpen: h,
    toggleLocal: p
  };
}
const sde = {
  name: "AAccordion",
  provide() {
    return {
      classBody: _(() => this.classBody),
      classButton: _(() => this.classButton),
      classHeader: _(() => this.classHeader),
      disabled: _(() => this.disabled),
      id: _(() => this.id),
      idsForOpen: _(() => this.idsForOpen),
      isCaret: _(() => this.isCaret),
      keyChildren: _(() => this.keyChildren),
      keyClassBody: _(() => this.keyClassBody),
      keyClassButton: _(() => this.keyClassButton),
      keyClassHeader: _(() => this.keyClassHeader),
      keyContent: _(() => this.keyContent),
      keyIsRender: _(() => this.keyIsRender),
      keyIsRenderBodyByFirstOpen: _(() => this.keyIsRenderBodyByFirstOpen),
      keyLabel: _(() => this.keyLabel),
      readonly: _(() => this.readonly),
      withGap: _(() => this.withGap),
      toggle: this.toggleLocal
    };
  },
  props: {
    alwaysOpen: {
      type: Boolean,
      required: !1
    },
    classBody: {
      type: [String, Object],
      required: !1,
      default: ""
    },
    classButton: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classHeader: {
      type: [String, Object],
      required: !1,
      default: ""
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: lt("accordion_")
    },
    idsForOpenDefault: {
      type: Array,
      required: !1,
      default: () => []
    },
    isCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    data: {
      type: Array,
      required: !0
    },
    keyClassBody: {
      type: String,
      required: !1,
      default: "classBody"
    },
    keyClassButton: {
      type: String,
      required: !1,
      default: "classButton"
    },
    keyClassHeader: {
      type: String,
      required: !1,
      default: "classHeader"
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyIsRender: {
      type: String,
      required: !1,
      default: "isRender"
    },
    keyIsRenderBodyByFirstOpen: {
      type: String,
      required: !1,
      default: "isRenderBodyByFirstOpen"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyChildren: {
      type: String,
      required: !1,
      default: "children"
    },
    prevent: {
      type: Boolean,
      required: !1
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    stop: {
      type: Boolean,
      required: !1
    },
    withGap: {
      type: Boolean,
      required: !1
    },
    indexesForOpen: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      idsForOpen: n,
      initIdsForOpen: r,
      toggleLocal: s
    } = jP(e, t), {
      dataWithIds: i
    } = GP(e), {
      initIdsFromIndexesForOpen: o
    } = KP(e, {
      idsForOpen: n,
      dataWithIds: i
    });
    return r(), o(), {
      dataWithIds: i,
      idsForOpen: n,
      toggleLocal: s
    };
  },
  render() {
    return c("div", {
      class: ["a_accordion"]
    }, [
      this.dataWithIds.map((e, t) => c(WP, {
        key: e[Ke],
        item: e,
        itemIndex: t,
        isParentOpen: !0,
        keyId: this.keyId
      }, this.$slots))
    ]);
  }
};
function zP(e) {
  const t = d(e, "ariaAtomic"), n = d(e, "role"), r = _(() => {
    if (t.value)
      return !0;
  }), s = _(() => {
    if (n.value)
      return n.value;
  });
  return {
    ariaAtomicLocal: r,
    roleLocal: s
  };
}
function YP(e) {
  const t = d(e, "type");
  return {
    alertClassLocal: _(() => `a_alert a_alert_${t.value}`)
  };
}
function XP(e, { emit: t }) {
  const n = d(e, "closable"), r = d(e, "removeAlertOnClose"), s = B(!1);
  return {
    close: () => {
      n.value && (r.value && (s.value = !0), t("close"));
    },
    isHidden: s
  };
}
const ZP = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>
</svg>`, bu = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4m.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2"/>
</svg>`, JP = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle-fill" viewBox="0 0 16 16">
  <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2"/>
</svg>`, Lu = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293z"/>
</svg>`, Ft = B({
  propsDefault: {
    alertClass: void 0,
    alertContentClass: void 0,
    btnCloseAttributes: {},
    closable: !1,
    extra: void 0,
    html: void 0,
    icon: void 0,
    iconClass: void 0,
    isVisible: !1,
    removeAlertOnClose: !1,
    safeHtml: void 0,
    showIcon: !1,
    text: void 0,
    textClose: "_ALERT_CLOSE_",
    type: "danger"
  },
  icons: {
    success: ZP,
    danger: Lu,
    info: JP,
    warning: bu
  }
}), ide = {
  install: (e, {
    propsDefault: t = {},
    icons: n = {}
  } = {}) => {
    Ft.value.propsDefault = {
      ...Ft.value.propsDefault,
      ...t
    }, Ft.value.icons = {
      ...Ft.value.icons,
      ...n
    };
  }
};
function QP(e) {
  const t = d(e, "icon"), n = d(e, "showIcon"), r = d(e, "type");
  return {
    iconLocal: _(() => {
      if (n.value)
        return t.value ? t.value : Ft.value.icons[r.value];
    })
  };
}
const gc = {
  name: "AAlert",
  props: {
    alertClass: {
      type: [String, Object],
      required: !1,
      default: () => Ft.value.propsDefault.alertClass
    },
    alertContentClass: {
      type: [String, Object],
      required: !1,
      default: () => Ft.value.propsDefault.alertContentClass
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaAtomic: {
      type: Boolean,
      required: !1,
      default: !0
    },
    btnCloseAttributes: {
      type: Object,
      required: !1,
      default: () => Ft.value.propsDefault.btnCloseAttributes
    },
    closable: {
      type: Boolean,
      required: !1,
      default: () => Ft.value.propsDefault.closable
    },
    extra: {
      type: Object,
      required: !1,
      default: () => Ft.value.propsDefault.extra
    },
    html: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.html
    },
    icon: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.icon
    },
    iconClass: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.iconClass
    },
    isVisible: {
      type: Boolean,
      required: !1,
      default: () => Ft.value.propsDefault.isVisible
    },
    removeAlertOnClose: {
      type: Boolean,
      required: !1,
      default: () => Ft.value.propsDefault.removeAlertOnClose
    },
    role: {
      type: String,
      required: !1,
      default: "alert"
    },
    safeHtml: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.safeHtml
    },
    showIcon: {
      type: Boolean,
      required: !1,
      default: () => Ft.value.propsDefault.showIcon
    },
    text: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.text
    },
    textClose: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.textClose
    },
    type: {
      type: String,
      required: !1,
      default: () => Ft.value.propsDefault.type
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      alertClassLocal: r
    } = YP(e), {
      close: s,
      isHidden: i
    } = XP(e, t), {
      iconLocal: o
    } = QP(e), {
      ariaAtomicLocal: u,
      roleLocal: h
    } = zP(e);
    return n({
      close: s,
      isHidden: i
    }), {
      alertClassLocal: r,
      ariaAtomicLocal: u,
      close: s,
      iconLocal: o,
      isHidden: i,
      roleLocal: h
    };
  },
  render() {
    return this.isHidden ? null : c("div", {
      class: [
        "a_alert__parent",
        {
          a_alert__parent_closable: this.closable
        }
      ]
    }, [
      c("div", {
        role: this.roleLocal,
        ariaAtomic: this.ariaAtomicLocal
      }, [
        this.isVisible && c("div", {
          class: [this.alertClass, this.alertClassLocal]
        }, [
          this.iconLocal && c(ut, {
            icon: this.iconLocal,
            class: [
              "a_alert__icon",
              this.iconClass
            ]
          }),
          c("div", {
            class: [
              "a_alert__content",
              this.alertContentClass
            ]
          }, [
            (this.html || this.text || this.safeHtml) && c(Ae, {
              alwaysTranslate: this.alwaysTranslate,
              extra: this.extra,
              html: this.html,
              safeHtml: this.safeHtml,
              text: this.text
            }),
            this.$slots.default && this.$slots.default()
          ])
        ])
      ]),
      this.isVisible && this.closable && c(ft, {
        alwaysTranslate: this.alwaysTranslate,
        type: "button",
        class: "a_btn_close",
        textScreenReader: this.textClose,
        ...this.btnCloseAttributes,
        onClick: this.close
      })
    ]);
  }
};
function vT(e, { emit: t }) {
  return {
    clickEmit: (r) => {
      t("click", r);
    }
  };
}
const Rr = [
  "auto",
  "auto-start",
  "auto-end",
  "top",
  "top-start",
  "top-end",
  "right",
  "right-start",
  "right-end",
  "bottom",
  "bottom-start",
  "bottom-end",
  "left",
  "left-start",
  "left-end"
], ft = {
  name: "AButton",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaDisabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_btn_")
    },
    isSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    modelSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tabindex: {
      type: [Number, String],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Rr.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => it(e) ? e === "auto" : fa(e)
    },
    type: {
      type: String,
      required: !1,
      default: "button",
      validator: (e) => ["button", "submit", "reset"].indexOf(e) !== -1
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      clickEmit: n
    } = vT(e, t);
    return {
      clickEmit: n
    };
  },
  render() {
    return c(be, {
      ...this.$attrs,
      ...this.$props,
      onClick: this.clickEmit
    }, this.$slots);
  }
};
var go = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function ex(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Ro = { exports: {} }, bE;
function tx() {
  if (bE) return Ro.exports;
  bE = 1;
  function e() {
  }
  return e.prototype = {
    on: function(t, n, r) {
      var s = this.e || (this.e = {});
      return (s[t] || (s[t] = [])).push({
        fn: n,
        ctx: r
      }), this;
    },
    once: function(t, n, r) {
      var s = this;
      function i() {
        s.off(t, i), n.apply(r, arguments);
      }
      return i._ = n, this.on(t, i, r);
    },
    emit: function(t) {
      var n = [].slice.call(arguments, 1), r = ((this.e || (this.e = {}))[t] || []).slice(), s = 0, i = r.length;
      for (s; s < i; s++)
        r[s].fn.apply(r[s].ctx, n);
      return this;
    },
    off: function(t, n) {
      var r = this.e || (this.e = {}), s = r[t], i = [];
      if (s && n)
        for (var o = 0, u = s.length; o < u; o++)
          s[o].fn !== n && s[o].fn._ !== n && i.push(s[o]);
      return i.length ? r[t] = i : delete r[t], this;
    }
  }, Ro.exports = e, Ro.exports.TinyEmitter = e, Ro.exports;
}
var od, LE;
function nx() {
  if (LE) return od;
  LE = 1;
  var e = tx();
  return od = new e(), od;
}
var rx = nx();
const Oo = /* @__PURE__ */ ex(rx), Ct = {
  $on: (...e) => Oo.on(...e),
  $once: (...e) => Oo.once(...e),
  $off: (...e) => Oo.off(...e),
  $emit: (...e) => Oo.emit(...e)
}, Xo = B(void 0);
function Po(e) {
  Xo.value = e, Ct.$emit("updateViewOnResize", e), e ? document.body.classList.add("a_mobile") : document.body.classList.remove("a_mobile");
}
function En() {
  return {
    isMobileWidth: Xo,
    setIsMobileWidth: Po
  };
}
const vu = B("de");
let IT = {};
const yT = B(/* @__PURE__ */ new Date()), Rc = B(/* @__PURE__ */ new Date());
let gT = {};
const oi = B(!0), ax = _(() => [
  vu.value,
  yT.value,
  oi.value
]);
rt(ax, () => {
  ix();
}, {
  immediate: !0
});
function Si() {
  return {
    isTranslate: oi,
    language: vu,
    setI18n: RT,
    setLanguage: OT,
    toggleTranslate: sx,
    translationChanges: Rc,
    updateTranslation: CT
  };
}
function RT(e = {}) {
  IT = e;
}
function OT(e = "") {
  vu.value = e;
}
function sx(e) {
  Ce(e) ? oi.value = !oi.value : oi.value = !!e;
}
function ix() {
  gT = IT[vu.value], Rc.value = /* @__PURE__ */ new Date();
}
function CT() {
  yT.value = /* @__PURE__ */ new Date();
}
const Fd = B({
  replaceText: void 0
}), lx = (e = {}) => {
  Fe(e == null ? void 0 : e.replaceText) && (Fd.value.replaceText = e == null ? void 0 : e.replaceText);
}, lde = {
  install: (e, t, n, r = {}) => {
    RT(t), OT(n), CT(), lx(r);
  }
};
function Ms() {
  return {
    getTranslatedText: xt,
    getTranslationAttributes: ox,
    isPlaceholderTranslate: Da,
    replaceText: NT,
    spliceString: DT
  };
}
function Da(e = "") {
  return !(!it(e) || e[0] !== "_" || e[e.length - 1] !== "_");
}
function xt({ placeholder: e, translationObj: t = gT, extra: n, alwaysTranslate: r = !1 }) {
  if (!t || !Rc.value)
    return e;
  let s;
  return !r && !oi.value ? s = e : s = ae(t[e]) ? e : t[e], n ? NT({
    text: s,
    object: n
  }) : s;
}
function NT({ text: e = "", object: t }) {
  var s, i;
  if (Fe((s = Fd.value) == null ? void 0 : s.replaceText))
    return (i = Fd.value) == null ? void 0 : i.replaceText({ text: e, object: t });
  if (!nt(t))
    return e;
  let n = e, r = 0;
  for (; ; ) {
    const o = n.indexOf("{{", r), u = n.indexOf("}}", r);
    if (o === -1 || u === -1)
      break;
    const h = n.slice(o + 2, u).trim(), A = fe(t, h);
    n = DT({
      text: n,
      replaceText: A,
      firstIndex: o,
      lastindex: u + 2
    }), r = o + `${A}`.length;
  }
  return n;
}
function DT({
  text: e = "",
  replaceText: t = "",
  firstIndex: n,
  lastindex: r
}) {
  return `${e.slice(0, n)}${t}${e.slice(r, e.length)}`;
}
function ox({ attr: e = "", value: t = "", translation: n = "", isTranslate: r = !0 }) {
  const s = {};
  return ae(n) || (s[e] = n), r && (s[`data-translate-${e}`] = t), s;
}
function Oc(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "ariaLabel"), r = d(e, "extra"), {
    translationChanges: s
  } = Si(), {
    isPlaceholderTranslate: i,
    getTranslatedText: o,
    getTranslationAttributes: u
  } = Ms(), {
    isMobileWidth: h
  } = En(), A = _(() => nt(n.value) ? h.value ? n.value.mobile : n.value.desktop : n.value), E = _(() => !Ce(A.value)), p = _(() => !(!E.value || !i(A.value))), T = _(() => {
    if (s.value)
      return p.value ? o({
        placeholder: A.value,
        extra: r.value,
        alwaysTranslate: t.value
      }) : A.value;
  });
  return {
    ariaLabelAttributes: _(() => E.value ? u({
      attr: "aria-label",
      translation: T.value,
      value: A.value,
      isTranslate: p.value
    }) : {}),
    hasAriaLabel: E
  };
}
const ux = {
  button: !0,
  submit: !0,
  reset: !0
};
function _x(e, {
  isRouterLink: t = _(() => !1),
  tagLocal: n = _(() => "")
}) {
  const r = d(e, "disabled"), s = d(e, "href"), i = d(e, "target"), o = d(e, "to"), u = d(e, "type"), h = _(() => {
    if (n.value === "button" && ux[u.value])
      return u.value;
  });
  return {
    toHrefAttributes: _(() => t.value ? {
      target: i.value,
      to: o.value
    } : r.value ? {} : {
      href: s.value,
      target: i.value
    }),
    typeAttribut: h
  };
}
function dx(e, { emit: t }) {
  const n = d(e, "prevent"), r = d(e, "stop"), s = d(e, "disabled"), i = d(e, "ariaDisabled");
  return {
    onClick: (u) => {
      n.value && u.preventDefault(), r.value && u.stopPropagation(), !(s.value || i.value) && t("click", {
        props: e,
        $event: u
      });
    }
  };
}
function cx(e, {
  isTitleVisible: t = B(!1)
}) {
  const n = d(e, "id"), r = d(e, "minWidth"), s = d(e, "width"), i = d(e, "maxWidth"), o = d(e, "withoutAriaDescribedby"), u = _(() => {
    if (!o.value && t.value)
      return `${n.value}_title`;
  }), h = _(() => {
    const A = {};
    return ae(r.value) || (A["min-width"] = `${r.value}px`), ae(s.value) || (A.width = `${s.value}px`), ae(i.value) || (A["max-width"] = `${i.value}px`), A;
  });
  return {
    ariaDescribedby: u,
    tooltipStyles: h
  };
}
const fx = ["top", "right", "bottom", "left"], vE = ["start", "end"], IE = /* @__PURE__ */ fx.reduce((e, t) => e.concat(t, t + "-" + vE[0], t + "-" + vE[1]), []), hi = Math.min, Rs = Math.max, Zo = Math.round, Co = Math.floor, $r = (e) => ({
  x: e,
  y: e
}), hx = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, Ax = {
  start: "end",
  end: "start"
};
function Md(e, t, n) {
  return Rs(e, hi(t, n));
}
function xa(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function Hr(e) {
  return e.split("-")[0];
}
function kr(e) {
  return e.split("-")[1];
}
function Cc(e) {
  return e === "x" ? "y" : "x";
}
function Nc(e) {
  return e === "y" ? "height" : "width";
}
function Ds(e) {
  return ["top", "bottom"].includes(Hr(e)) ? "y" : "x";
}
function Dc(e) {
  return Cc(Ds(e));
}
function BT(e, t, n) {
  n === void 0 && (n = !1);
  const r = kr(e), s = Dc(e), i = Nc(s);
  let o = s === "x" ? r === (n ? "end" : "start") ? "right" : "left" : r === "start" ? "bottom" : "top";
  return t.reference[i] > t.floating[i] && (o = Qo(o)), [o, Qo(o)];
}
function Ex(e) {
  const t = Qo(e);
  return [Jo(e), t, Jo(t)];
}
function Jo(e) {
  return e.replace(/start|end/g, (t) => Ax[t]);
}
function px(e, t, n) {
  const r = ["left", "right"], s = ["right", "left"], i = ["top", "bottom"], o = ["bottom", "top"];
  switch (e) {
    case "top":
    case "bottom":
      return n ? t ? s : r : t ? r : s;
    case "left":
    case "right":
      return t ? i : o;
    default:
      return [];
  }
}
function Tx(e, t, n, r) {
  const s = kr(e);
  let i = px(Hr(e), n === "start", r);
  return s && (i = i.map((o) => o + "-" + s), t && (i = i.concat(i.map(Jo)))), i;
}
function Qo(e) {
  return e.replace(/left|right|bottom|top/g, (t) => hx[t]);
}
function mx(e) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...e
  };
}
function wT(e) {
  return typeof e != "number" ? mx(e) : {
    top: e,
    right: e,
    bottom: e,
    left: e
  };
}
function eu(e) {
  const {
    x: t,
    y: n,
    width: r,
    height: s
  } = e;
  return {
    width: r,
    height: s,
    top: n,
    left: t,
    right: t + r,
    bottom: n + s,
    x: t,
    y: n
  };
}
function yE(e, t, n) {
  let {
    reference: r,
    floating: s
  } = e;
  const i = Ds(t), o = Dc(t), u = Nc(o), h = Hr(t), A = i === "y", E = r.x + r.width / 2 - s.width / 2, p = r.y + r.height / 2 - s.height / 2, T = r[u] / 2 - s[u] / 2;
  let S;
  switch (h) {
    case "top":
      S = {
        x: E,
        y: r.y - s.height
      };
      break;
    case "bottom":
      S = {
        x: E,
        y: r.y + r.height
      };
      break;
    case "right":
      S = {
        x: r.x + r.width,
        y: p
      };
      break;
    case "left":
      S = {
        x: r.x - s.width,
        y: p
      };
      break;
    default:
      S = {
        x: r.x,
        y: r.y
      };
  }
  switch (kr(t)) {
    case "start":
      S[o] -= T * (n && A ? -1 : 1);
      break;
    case "end":
      S[o] += T * (n && A ? -1 : 1);
      break;
  }
  return S;
}
const Sx = async (e, t, n) => {
  const {
    placement: r = "bottom",
    strategy: s = "absolute",
    middleware: i = [],
    platform: o
  } = n, u = i.filter(Boolean), h = await (o.isRTL == null ? void 0 : o.isRTL(t));
  let A = await o.getElementRects({
    reference: e,
    floating: t,
    strategy: s
  }), {
    x: E,
    y: p
  } = yE(A, r, h), T = r, S = {}, b = 0;
  for (let L = 0; L < u.length; L++) {
    const {
      name: v,
      fn: I
    } = u[L], {
      x: R,
      y: g,
      data: D,
      reset: w
    } = await I({
      x: E,
      y: p,
      initialPlacement: r,
      placement: T,
      strategy: s,
      middlewareData: S,
      rects: A,
      platform: o,
      elements: {
        reference: e,
        floating: t
      }
    });
    E = R ?? E, p = g ?? p, S = {
      ...S,
      [v]: {
        ...S[v],
        ...D
      }
    }, w && b <= 50 && (b++, typeof w == "object" && (w.placement && (T = w.placement), w.rects && (A = w.rects === !0 ? await o.getElementRects({
      reference: e,
      floating: t,
      strategy: s
    }) : w.rects), {
      x: E,
      y: p
    } = yE(A, T, h)), L = -1);
  }
  return {
    x: E,
    y: p,
    placement: T,
    strategy: s,
    middlewareData: S
  };
};
async function Bc(e, t) {
  var n;
  t === void 0 && (t = {});
  const {
    x: r,
    y: s,
    platform: i,
    rects: o,
    elements: u,
    strategy: h
  } = e, {
    boundary: A = "clippingAncestors",
    rootBoundary: E = "viewport",
    elementContext: p = "floating",
    altBoundary: T = !1,
    padding: S = 0
  } = xa(t, e), b = wT(S), v = u[T ? p === "floating" ? "reference" : "floating" : p], I = eu(await i.getClippingRect({
    element: (n = await (i.isElement == null ? void 0 : i.isElement(v))) == null || n ? v : v.contextElement || await (i.getDocumentElement == null ? void 0 : i.getDocumentElement(u.floating)),
    boundary: A,
    rootBoundary: E,
    strategy: h
  })), R = p === "floating" ? {
    x: r,
    y: s,
    width: o.floating.width,
    height: o.floating.height
  } : o.reference, g = await (i.getOffsetParent == null ? void 0 : i.getOffsetParent(u.floating)), D = await (i.isElement == null ? void 0 : i.isElement(g)) ? await (i.getScale == null ? void 0 : i.getScale(g)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, w = eu(i.convertOffsetParentRelativeRectToViewportRelativeRect ? await i.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements: u,
    rect: R,
    offsetParent: g,
    strategy: h
  }) : R);
  return {
    top: (I.top - w.top + b.top) / D.y,
    bottom: (w.bottom - I.bottom + b.bottom) / D.y,
    left: (I.left - w.left + b.left) / D.x,
    right: (w.right - I.right + b.right) / D.x
  };
}
const bx = (e) => ({
  name: "arrow",
  options: e,
  async fn(t) {
    const {
      x: n,
      y: r,
      placement: s,
      rects: i,
      platform: o,
      elements: u,
      middlewareData: h
    } = t, {
      element: A,
      padding: E = 0
    } = xa(e, t) || {};
    if (A == null)
      return {};
    const p = wT(E), T = {
      x: n,
      y: r
    }, S = Dc(s), b = Nc(S), L = await o.getDimensions(A), v = S === "y", I = v ? "top" : "left", R = v ? "bottom" : "right", g = v ? "clientHeight" : "clientWidth", D = i.reference[b] + i.reference[S] - T[S] - i.floating[b], w = T[S] - i.reference[S], M = await (o.getOffsetParent == null ? void 0 : o.getOffsetParent(A));
    let P = M ? M[g] : 0;
    (!P || !await (o.isElement == null ? void 0 : o.isElement(M))) && (P = u.floating[g] || i.floating[b]);
    const F = D / 2 - w / 2, C = P / 2 - L[b] / 2 - 1, $ = hi(p[I], C), H = hi(p[R], C), j = $, le = P - L[b] - H, ee = P / 2 - L[b] / 2 + F, _e = Md(j, ee, le), ie = !h.arrow && kr(s) != null && ee !== _e && i.reference[b] / 2 - (ee < j ? $ : H) - L[b] / 2 < 0, ue = ie ? ee < j ? ee - j : ee - le : 0;
    return {
      [S]: T[S] + ue,
      data: {
        [S]: _e,
        centerOffset: ee - _e - ue,
        ...ie && {
          alignmentOffset: ue
        }
      },
      reset: ie
    };
  }
});
function Lx(e, t, n) {
  return (e ? [...n.filter((s) => kr(s) === e), ...n.filter((s) => kr(s) !== e)] : n.filter((s) => Hr(s) === s)).filter((s) => e ? kr(s) === e || (t ? Jo(s) !== s : !1) : !0);
}
const vx = function(e) {
  return e === void 0 && (e = {}), {
    name: "autoPlacement",
    options: e,
    async fn(t) {
      var n, r, s;
      const {
        rects: i,
        middlewareData: o,
        placement: u,
        platform: h,
        elements: A
      } = t, {
        crossAxis: E = !1,
        alignment: p,
        allowedPlacements: T = IE,
        autoAlignment: S = !0,
        ...b
      } = xa(e, t), L = p !== void 0 || T === IE ? Lx(p || null, S, T) : T, v = await Bc(t, b), I = ((n = o.autoPlacement) == null ? void 0 : n.index) || 0, R = L[I];
      if (R == null)
        return {};
      const g = BT(R, i, await (h.isRTL == null ? void 0 : h.isRTL(A.floating)));
      if (u !== R)
        return {
          reset: {
            placement: L[0]
          }
        };
      const D = [v[Hr(R)], v[g[0]], v[g[1]]], w = [...((r = o.autoPlacement) == null ? void 0 : r.overflows) || [], {
        placement: R,
        overflows: D
      }], M = L[I + 1];
      if (M)
        return {
          data: {
            index: I + 1,
            overflows: w
          },
          reset: {
            placement: M
          }
        };
      const P = w.map(($) => {
        const H = kr($.placement);
        return [$.placement, H && E ? (
          // Check along the mainAxis and main crossAxis side.
          $.overflows.slice(0, 2).reduce((j, le) => j + le, 0)
        ) : (
          // Check only the mainAxis.
          $.overflows[0]
        ), $.overflows];
      }).sort(($, H) => $[1] - H[1]), C = ((s = P.filter(($) => $[2].slice(
        0,
        // Aligned placements should not check their opposite crossAxis
        // side.
        kr($[0]) ? 2 : 3
      ).every((H) => H <= 0))[0]) == null ? void 0 : s[0]) || P[0][0];
      return C !== u ? {
        data: {
          index: I + 1,
          overflows: w
        },
        reset: {
          placement: C
        }
      } : {};
    }
  };
}, Ix = function(e) {
  return e === void 0 && (e = {}), {
    name: "flip",
    options: e,
    async fn(t) {
      var n, r;
      const {
        placement: s,
        middlewareData: i,
        rects: o,
        initialPlacement: u,
        platform: h,
        elements: A
      } = t, {
        mainAxis: E = !0,
        crossAxis: p = !0,
        fallbackPlacements: T,
        fallbackStrategy: S = "bestFit",
        fallbackAxisSideDirection: b = "none",
        flipAlignment: L = !0,
        ...v
      } = xa(e, t);
      if ((n = i.arrow) != null && n.alignmentOffset)
        return {};
      const I = Hr(s), R = Ds(u), g = Hr(u) === u, D = await (h.isRTL == null ? void 0 : h.isRTL(A.floating)), w = T || (g || !L ? [Qo(u)] : Ex(u)), M = b !== "none";
      !T && M && w.push(...Tx(u, L, b, D));
      const P = [u, ...w], F = await Bc(t, v), C = [];
      let $ = ((r = i.flip) == null ? void 0 : r.overflows) || [];
      if (E && C.push(F[I]), p) {
        const ee = BT(s, o, D);
        C.push(F[ee[0]], F[ee[1]]);
      }
      if ($ = [...$, {
        placement: s,
        overflows: C
      }], !C.every((ee) => ee <= 0)) {
        var H, j;
        const ee = (((H = i.flip) == null ? void 0 : H.index) || 0) + 1, _e = P[ee];
        if (_e)
          return {
            data: {
              index: ee,
              overflows: $
            },
            reset: {
              placement: _e
            }
          };
        let ie = (j = $.filter((ue) => ue.overflows[0] <= 0).sort((ue, Te) => ue.overflows[1] - Te.overflows[1])[0]) == null ? void 0 : j.placement;
        if (!ie)
          switch (S) {
            case "bestFit": {
              var le;
              const ue = (le = $.filter((Te) => {
                if (M) {
                  const Pe = Ds(Te.placement);
                  return Pe === R || // Create a bias to the `y` side axis due to horizontal
                  // reading directions favoring greater width.
                  Pe === "y";
                }
                return !0;
              }).map((Te) => [Te.placement, Te.overflows.filter((Pe) => Pe > 0).reduce((Pe, Se) => Pe + Se, 0)]).sort((Te, Pe) => Te[1] - Pe[1])[0]) == null ? void 0 : le[0];
              ue && (ie = ue);
              break;
            }
            case "initialPlacement":
              ie = u;
              break;
          }
        if (s !== ie)
          return {
            reset: {
              placement: ie
            }
          };
      }
      return {};
    }
  };
};
async function yx(e, t) {
  const {
    placement: n,
    platform: r,
    elements: s
  } = e, i = await (r.isRTL == null ? void 0 : r.isRTL(s.floating)), o = Hr(n), u = kr(n), h = Ds(n) === "y", A = ["left", "top"].includes(o) ? -1 : 1, E = i && h ? -1 : 1, p = xa(t, e);
  let {
    mainAxis: T,
    crossAxis: S,
    alignmentAxis: b
  } = typeof p == "number" ? {
    mainAxis: p,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: p.mainAxis || 0,
    crossAxis: p.crossAxis || 0,
    alignmentAxis: p.alignmentAxis
  };
  return u && typeof b == "number" && (S = u === "end" ? b * -1 : b), h ? {
    x: S * E,
    y: T * A
  } : {
    x: T * A,
    y: S * E
  };
}
const gx = function(e) {
  return e === void 0 && (e = 0), {
    name: "offset",
    options: e,
    async fn(t) {
      var n, r;
      const {
        x: s,
        y: i,
        placement: o,
        middlewareData: u
      } = t, h = await yx(t, e);
      return o === ((n = u.offset) == null ? void 0 : n.placement) && (r = u.arrow) != null && r.alignmentOffset ? {} : {
        x: s + h.x,
        y: i + h.y,
        data: {
          ...h,
          placement: o
        }
      };
    }
  };
}, Rx = function(e) {
  return e === void 0 && (e = {}), {
    name: "shift",
    options: e,
    async fn(t) {
      const {
        x: n,
        y: r,
        placement: s
      } = t, {
        mainAxis: i = !0,
        crossAxis: o = !1,
        limiter: u = {
          fn: (v) => {
            let {
              x: I,
              y: R
            } = v;
            return {
              x: I,
              y: R
            };
          }
        },
        ...h
      } = xa(e, t), A = {
        x: n,
        y: r
      }, E = await Bc(t, h), p = Ds(Hr(s)), T = Cc(p);
      let S = A[T], b = A[p];
      if (i) {
        const v = T === "y" ? "top" : "left", I = T === "y" ? "bottom" : "right", R = S + E[v], g = S - E[I];
        S = Md(R, S, g);
      }
      if (o) {
        const v = p === "y" ? "top" : "left", I = p === "y" ? "bottom" : "right", R = b + E[v], g = b - E[I];
        b = Md(R, b, g);
      }
      const L = u.fn({
        ...t,
        [T]: S,
        [p]: b
      });
      return {
        ...L,
        data: {
          x: L.x - n,
          y: L.y - r,
          enabled: {
            [T]: i,
            [p]: o
          }
        }
      };
    }
  };
}, Ox = function(e) {
  return e === void 0 && (e = {}), {
    options: e,
    fn(t) {
      const {
        x: n,
        y: r,
        placement: s,
        rects: i,
        middlewareData: o
      } = t, {
        offset: u = 0,
        mainAxis: h = !0,
        crossAxis: A = !0
      } = xa(e, t), E = {
        x: n,
        y: r
      }, p = Ds(s), T = Cc(p);
      let S = E[T], b = E[p];
      const L = xa(u, t), v = typeof L == "number" ? {
        mainAxis: L,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...L
      };
      if (h) {
        const g = T === "y" ? "height" : "width", D = i.reference[T] - i.floating[g] + v.mainAxis, w = i.reference[T] + i.reference[g] - v.mainAxis;
        S < D ? S = D : S > w && (S = w);
      }
      if (A) {
        var I, R;
        const g = T === "y" ? "width" : "height", D = ["top", "left"].includes(Hr(s)), w = i.reference[p] - i.floating[g] + (D && ((I = o.offset) == null ? void 0 : I[p]) || 0) + (D ? 0 : v.crossAxis), M = i.reference[p] + i.reference[g] + (D ? 0 : ((R = o.offset) == null ? void 0 : R[p]) || 0) - (D ? v.crossAxis : 0);
        b < w ? b = w : b > M && (b = M);
      }
      return {
        [T]: S,
        [p]: b
      };
    }
  };
};
function Iu() {
  return typeof window < "u";
}
function qs(e) {
  return wc(e) ? (e.nodeName || "").toLowerCase() : "#document";
}
function $n(e) {
  var t;
  return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;
}
function Kr(e) {
  var t;
  return (t = (wc(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement;
}
function wc(e) {
  return Iu() ? e instanceof Node || e instanceof $n(e).Node : !1;
}
function Ir(e) {
  return Iu() ? e instanceof Element || e instanceof $n(e).Element : !1;
}
function Vr(e) {
  return Iu() ? e instanceof HTMLElement || e instanceof $n(e).HTMLElement : !1;
}
function gE(e) {
  return !Iu() || typeof ShadowRoot > "u" ? !1 : e instanceof ShadowRoot || e instanceof $n(e).ShadowRoot;
}
function bl(e) {
  const {
    overflow: t,
    overflowX: n,
    overflowY: r,
    display: s
  } = yr(e);
  return /auto|scroll|overlay|hidden|clip/.test(t + r + n) && !["inline", "contents"].includes(s);
}
function Cx(e) {
  return ["table", "td", "th"].includes(qs(e));
}
function yu(e) {
  return [":popover-open", ":modal"].some((t) => {
    try {
      return e.matches(t);
    } catch {
      return !1;
    }
  });
}
function Pc(e) {
  const t = xc(), n = Ir(e) ? yr(e) : e;
  return ["transform", "translate", "scale", "rotate", "perspective"].some((r) => n[r] ? n[r] !== "none" : !1) || (n.containerType ? n.containerType !== "normal" : !1) || !t && (n.backdropFilter ? n.backdropFilter !== "none" : !1) || !t && (n.filter ? n.filter !== "none" : !1) || ["transform", "translate", "scale", "rotate", "perspective", "filter"].some((r) => (n.willChange || "").includes(r)) || ["paint", "layout", "strict", "content"].some((r) => (n.contain || "").includes(r));
}
function Nx(e) {
  let t = Fa(e);
  for (; Vr(t) && !Ai(t); ) {
    if (Pc(t))
      return t;
    if (yu(t))
      return null;
    t = Fa(t);
  }
  return null;
}
function xc() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
function Ai(e) {
  return ["html", "body", "#document"].includes(qs(e));
}
function yr(e) {
  return $n(e).getComputedStyle(e);
}
function gu(e) {
  return Ir(e) ? {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  } : {
    scrollLeft: e.scrollX,
    scrollTop: e.scrollY
  };
}
function Fa(e) {
  if (qs(e) === "html")
    return e;
  const t = (
    // Step into the shadow DOM of the parent of a slotted node.
    e.assignedSlot || // DOM Element detected.
    e.parentNode || // ShadowRoot detected.
    gE(e) && e.host || // Fallback.
    Kr(e)
  );
  return gE(t) ? t.host : t;
}
function PT(e) {
  const t = Fa(e);
  return Ai(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : Vr(t) && bl(t) ? t : PT(t);
}
function ul(e, t, n) {
  var r;
  t === void 0 && (t = []), n === void 0 && (n = !0);
  const s = PT(e), i = s === ((r = e.ownerDocument) == null ? void 0 : r.body), o = $n(s);
  if (i) {
    const u = qd(o);
    return t.concat(o, o.visualViewport || [], bl(s) ? s : [], u && n ? ul(u) : []);
  }
  return t.concat(s, ul(s, [], n));
}
function qd(e) {
  return e.parent && Object.getPrototypeOf(e.parent) ? e.frameElement : null;
}
function xT(e) {
  const t = yr(e);
  let n = parseFloat(t.width) || 0, r = parseFloat(t.height) || 0;
  const s = Vr(e), i = s ? e.offsetWidth : n, o = s ? e.offsetHeight : r, u = Zo(n) !== i || Zo(r) !== o;
  return u && (n = i, r = o), {
    width: n,
    height: r,
    $: u
  };
}
function Fc(e) {
  return Ir(e) ? e : e.contextElement;
}
function ui(e) {
  const t = Fc(e);
  if (!Vr(t))
    return $r(1);
  const n = t.getBoundingClientRect(), {
    width: r,
    height: s,
    $: i
  } = xT(t);
  let o = (i ? Zo(n.width) : n.width) / r, u = (i ? Zo(n.height) : n.height) / s;
  return (!o || !Number.isFinite(o)) && (o = 1), (!u || !Number.isFinite(u)) && (u = 1), {
    x: o,
    y: u
  };
}
const Dx = /* @__PURE__ */ $r(0);
function FT(e) {
  const t = $n(e);
  return !xc() || !t.visualViewport ? Dx : {
    x: t.visualViewport.offsetLeft,
    y: t.visualViewport.offsetTop
  };
}
function Bx(e, t, n) {
  return t === void 0 && (t = !1), !n || t && n !== $n(e) ? !1 : t;
}
function Bs(e, t, n, r) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  const s = e.getBoundingClientRect(), i = Fc(e);
  let o = $r(1);
  t && (r ? Ir(r) && (o = ui(r)) : o = ui(e));
  const u = Bx(i, n, r) ? FT(i) : $r(0);
  let h = (s.left + u.x) / o.x, A = (s.top + u.y) / o.y, E = s.width / o.x, p = s.height / o.y;
  if (i) {
    const T = $n(i), S = r && Ir(r) ? $n(r) : r;
    let b = T, L = qd(b);
    for (; L && r && S !== b; ) {
      const v = ui(L), I = L.getBoundingClientRect(), R = yr(L), g = I.left + (L.clientLeft + parseFloat(R.paddingLeft)) * v.x, D = I.top + (L.clientTop + parseFloat(R.paddingTop)) * v.y;
      h *= v.x, A *= v.y, E *= v.x, p *= v.y, h += g, A += D, b = $n(L), L = qd(b);
    }
  }
  return eu({
    width: E,
    height: p,
    x: h,
    y: A
  });
}
function Mc(e, t) {
  const n = gu(e).scrollLeft;
  return t ? t.left + n : Bs(Kr(e)).left + n;
}
function MT(e, t, n) {
  n === void 0 && (n = !1);
  const r = e.getBoundingClientRect(), s = r.left + t.scrollLeft - (n ? 0 : (
    // RTL <body> scrollbar.
    Mc(e, r)
  )), i = r.top + t.scrollTop;
  return {
    x: s,
    y: i
  };
}
function wx(e) {
  let {
    elements: t,
    rect: n,
    offsetParent: r,
    strategy: s
  } = e;
  const i = s === "fixed", o = Kr(r), u = t ? yu(t.floating) : !1;
  if (r === o || u && i)
    return n;
  let h = {
    scrollLeft: 0,
    scrollTop: 0
  }, A = $r(1);
  const E = $r(0), p = Vr(r);
  if ((p || !p && !i) && ((qs(r) !== "body" || bl(o)) && (h = gu(r)), Vr(r))) {
    const S = Bs(r);
    A = ui(r), E.x = S.x + r.clientLeft, E.y = S.y + r.clientTop;
  }
  const T = o && !p && !i ? MT(o, h, !0) : $r(0);
  return {
    width: n.width * A.x,
    height: n.height * A.y,
    x: n.x * A.x - h.scrollLeft * A.x + E.x + T.x,
    y: n.y * A.y - h.scrollTop * A.y + E.y + T.y
  };
}
function Px(e) {
  return Array.from(e.getClientRects());
}
function xx(e) {
  const t = Kr(e), n = gu(e), r = e.ownerDocument.body, s = Rs(t.scrollWidth, t.clientWidth, r.scrollWidth, r.clientWidth), i = Rs(t.scrollHeight, t.clientHeight, r.scrollHeight, r.clientHeight);
  let o = -n.scrollLeft + Mc(e);
  const u = -n.scrollTop;
  return yr(r).direction === "rtl" && (o += Rs(t.clientWidth, r.clientWidth) - s), {
    width: s,
    height: i,
    x: o,
    y: u
  };
}
function Fx(e, t) {
  const n = $n(e), r = Kr(e), s = n.visualViewport;
  let i = r.clientWidth, o = r.clientHeight, u = 0, h = 0;
  if (s) {
    i = s.width, o = s.height;
    const A = xc();
    (!A || A && t === "fixed") && (u = s.offsetLeft, h = s.offsetTop);
  }
  return {
    width: i,
    height: o,
    x: u,
    y: h
  };
}
function Mx(e, t) {
  const n = Bs(e, !0, t === "fixed"), r = n.top + e.clientTop, s = n.left + e.clientLeft, i = Vr(e) ? ui(e) : $r(1), o = e.clientWidth * i.x, u = e.clientHeight * i.y, h = s * i.x, A = r * i.y;
  return {
    width: o,
    height: u,
    x: h,
    y: A
  };
}
function RE(e, t, n) {
  let r;
  if (t === "viewport")
    r = Fx(e, n);
  else if (t === "document")
    r = xx(Kr(e));
  else if (Ir(t))
    r = Mx(t, n);
  else {
    const s = FT(e);
    r = {
      x: t.x - s.x,
      y: t.y - s.y,
      width: t.width,
      height: t.height
    };
  }
  return eu(r);
}
function qT(e, t) {
  const n = Fa(e);
  return n === t || !Ir(n) || Ai(n) ? !1 : yr(n).position === "fixed" || qT(n, t);
}
function qx(e, t) {
  const n = t.get(e);
  if (n)
    return n;
  let r = ul(e, [], !1).filter((u) => Ir(u) && qs(u) !== "body"), s = null;
  const i = yr(e).position === "fixed";
  let o = i ? Fa(e) : e;
  for (; Ir(o) && !Ai(o); ) {
    const u = yr(o), h = Pc(o);
    !h && u.position === "fixed" && (s = null), (i ? !h && !s : !h && u.position === "static" && !!s && ["absolute", "fixed"].includes(s.position) || bl(o) && !h && qT(e, o)) ? r = r.filter((E) => E !== o) : s = u, o = Fa(o);
  }
  return t.set(e, r), r;
}
function $x(e) {
  let {
    element: t,
    boundary: n,
    rootBoundary: r,
    strategy: s
  } = e;
  const o = [...n === "clippingAncestors" ? yu(t) ? [] : qx(t, this._c) : [].concat(n), r], u = o[0], h = o.reduce((A, E) => {
    const p = RE(t, E, s);
    return A.top = Rs(p.top, A.top), A.right = hi(p.right, A.right), A.bottom = hi(p.bottom, A.bottom), A.left = Rs(p.left, A.left), A;
  }, RE(t, u, s));
  return {
    width: h.right - h.left,
    height: h.bottom - h.top,
    x: h.left,
    y: h.top
  };
}
function kx(e) {
  const {
    width: t,
    height: n
  } = xT(e);
  return {
    width: t,
    height: n
  };
}
function Ux(e, t, n) {
  const r = Vr(t), s = Kr(t), i = n === "fixed", o = Bs(e, !0, i, t);
  let u = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const h = $r(0);
  if (r || !r && !i)
    if ((qs(t) !== "body" || bl(s)) && (u = gu(t)), r) {
      const T = Bs(t, !0, i, t);
      h.x = T.x + t.clientLeft, h.y = T.y + t.clientTop;
    } else s && (h.x = Mc(s));
  const A = s && !r && !i ? MT(s, u) : $r(0), E = o.left + u.scrollLeft - h.x - A.x, p = o.top + u.scrollTop - h.y - A.y;
  return {
    x: E,
    y: p,
    width: o.width,
    height: o.height
  };
}
function ud(e) {
  return yr(e).position === "static";
}
function OE(e, t) {
  if (!Vr(e) || yr(e).position === "fixed")
    return null;
  if (t)
    return t(e);
  let n = e.offsetParent;
  return Kr(e) === n && (n = n.ownerDocument.body), n;
}
function $T(e, t) {
  const n = $n(e);
  if (yu(e))
    return n;
  if (!Vr(e)) {
    let s = Fa(e);
    for (; s && !Ai(s); ) {
      if (Ir(s) && !ud(s))
        return s;
      s = Fa(s);
    }
    return n;
  }
  let r = OE(e, t);
  for (; r && Cx(r) && ud(r); )
    r = OE(r, t);
  return r && Ai(r) && ud(r) && !Pc(r) ? n : r || Nx(e) || n;
}
const Hx = async function(e) {
  const t = this.getOffsetParent || $T, n = this.getDimensions, r = await n(e.floating);
  return {
    reference: Ux(e.reference, await t(e.floating), e.strategy),
    floating: {
      x: 0,
      y: 0,
      width: r.width,
      height: r.height
    }
  };
};
function Vx(e) {
  return yr(e).direction === "rtl";
}
const Wx = {
  convertOffsetParentRelativeRectToViewportRelativeRect: wx,
  getDocumentElement: Kr,
  getClippingRect: $x,
  getOffsetParent: $T,
  getElementRects: Hx,
  getClientRects: Px,
  getDimensions: kx,
  getScale: ui,
  isElement: Ir,
  isRTL: Vx
};
function kT(e, t) {
  return e.x === t.x && e.y === t.y && e.width === t.width && e.height === t.height;
}
function Gx(e, t) {
  let n = null, r;
  const s = Kr(e);
  function i() {
    var u;
    clearTimeout(r), (u = n) == null || u.disconnect(), n = null;
  }
  function o(u, h) {
    u === void 0 && (u = !1), h === void 0 && (h = 1), i();
    const A = e.getBoundingClientRect(), {
      left: E,
      top: p,
      width: T,
      height: S
    } = A;
    if (u || t(), !T || !S)
      return;
    const b = Co(p), L = Co(s.clientWidth - (E + T)), v = Co(s.clientHeight - (p + S)), I = Co(E), g = {
      rootMargin: -b + "px " + -L + "px " + -v + "px " + -I + "px",
      threshold: Rs(0, hi(1, h)) || 1
    };
    let D = !0;
    function w(M) {
      const P = M[0].intersectionRatio;
      if (P !== h) {
        if (!D)
          return o();
        P ? o(!1, P) : r = setTimeout(() => {
          o(!1, 1e-7);
        }, 1e3);
      }
      P === 1 && !kT(A, e.getBoundingClientRect()) && o(), D = !1;
    }
    try {
      n = new IntersectionObserver(w, {
        ...g,
        // Handle <iframe>s
        root: s.ownerDocument
      });
    } catch {
      n = new IntersectionObserver(w, g);
    }
    n.observe(e);
  }
  return o(!0), i;
}
function Ll(e, t, n, r) {
  r === void 0 && (r = {});
  const {
    ancestorScroll: s = !0,
    ancestorResize: i = !0,
    elementResize: o = typeof ResizeObserver == "function",
    layoutShift: u = typeof IntersectionObserver == "function",
    animationFrame: h = !1
  } = r, A = Fc(e), E = s || i ? [...A ? ul(A) : [], ...ul(t)] : [];
  E.forEach((I) => {
    s && I.addEventListener("scroll", n, {
      passive: !0
    }), i && I.addEventListener("resize", n);
  });
  const p = A && u ? Gx(A, n) : null;
  let T = -1, S = null;
  o && (S = new ResizeObserver((I) => {
    let [R] = I;
    R && R.target === A && S && (S.unobserve(t), cancelAnimationFrame(T), T = requestAnimationFrame(() => {
      var g;
      (g = S) == null || g.observe(t);
    })), n();
  }), A && !h && S.observe(A), S.observe(t));
  let b, L = h ? Bs(e) : null;
  h && v();
  function v() {
    const I = Bs(e);
    L && !kT(L, I) && n(), L = I, b = requestAnimationFrame(v);
  }
  return n(), () => {
    var I;
    E.forEach((R) => {
      s && R.removeEventListener("scroll", n), i && R.removeEventListener("resize", n);
    }), p == null || p(), (I = S) == null || I.disconnect(), S = null, h && cancelAnimationFrame(b);
  };
}
const Kx = gx, jx = vx, vl = Rx, Il = Ix, zx = bx, Ru = Ox, yl = (e, t, n) => {
  const r = /* @__PURE__ */ new Map(), s = {
    platform: Wx,
    ...n
  }, i = {
    ...s.platform,
    _c: r
  };
  return Sx(e, t, {
    ...s,
    platform: i
  });
};
function Yx(e) {
  return e != null && typeof e == "object" && "$el" in e;
}
function Xx(e) {
  if (Yx(e)) {
    const t = e.$el;
    return wc(t) && qs(t) === "#comment" ? null : t;
  }
  return e;
}
function Zx(e) {
  return typeof e == "function" ? e() : LR(e);
}
function Jx(e) {
  return {
    name: "arrow",
    options: e,
    fn(t) {
      const n = Xx(Zx(e.element));
      return n == null ? {} : zx({
        element: n,
        padding: e.padding
      }).fn(t);
    }
  };
}
const X = {
  arrowDown: 40,
  arrowLeft: 37,
  arrowRight: 39,
  arrowUp: 38,
  e: 69,
  enter: 13,
  escape: 27,
  minus: 189,
  numMinus: 109,
  numPlus: 107,
  plus: 187,
  space: 32,
  tab: 9,
  backspace: 8,
  del: 46,
  home: 36,
  end: 35
};
function Qx(e) {
  const t = d(e, "id"), n = d(e, "offsetDistance"), r = d(e, "offsetSkidding"), s = d(e, "placement"), i = d(e, "timeClose"), o = B(void 0), u = B(void 0), h = B(!1), A = B(void 0), E = B(void 0), p = B(void 0), T = _(() => document.getElementById(t.value)), S = _(() => s.value && s.value.includes("auto")), b = _(() => [
    Kx({
      mainAxis: n.value || 0,
      crossAxis: r.value || 0,
      alignmentAxis: null
    }),
    S.value ? jx() : Il(),
    vl({ limiter: Ru() }),
    E.value && Jx({
      element: E.value,
      padding: 5
    })
  ]), L = (H) => {
    H.keyCode === X.escape && $();
  }, v = () => {
    document.addEventListener("keydown", L);
  }, I = () => {
    document.removeEventListener("keydown", L);
  }, R = () => {
    Ct.$on("closeHtmlTitle", $);
  }, g = () => {
    Ct.$off("closeHtmlTitle", $);
  }, D = () => {
    o.value && (o.value(), o.value = void 0);
  }, w = () => {
    A.value = setTimeout(() => {
      $();
    }, i.value);
  }, M = () => {
    if (h.value) {
      clearTimeout(A.value);
      return;
    }
    h.value = !0;
  }, P = () => {
    o.value || !T.value || !p.value || (o.value = Ll(T.value, p.value, () => {
      !T.value || !p.value || yl(
        T.value,
        p.value,
        {
          placement: s.value,
          middleware: b.value
        }
      ).then(({ x: H, y: j, middlewareData: le, placement: ee }) => {
        Object.assign(p.value.style, {
          left: `${H}px`,
          top: `${j}px`
        });
        const _e = ee.split("-")[0], ie = {
          top: "bottom",
          right: "left",
          bottom: "top",
          left: "right"
        }[_e];
        if (le.arrow) {
          const { x: ue, y: Te } = le.arrow;
          Object.assign(E.value.style, {
            left: ae(ue) ? "" : `${ue}px`,
            top: ae(Te) ? "" : `${Te}px`,
            [ie]: `${-E.value.offsetWidth / 2}px`
          });
        }
      });
    }), Ct.$emit("closeHtmlTitle"), R(), v());
  }, F = () => {
    clearTimeout(A.value);
  }, C = () => {
    w();
  };
  function $() {
    clearTimeout(A.value), D(), g(), I(), h.value = !1;
  }
  return {
    closeTitle: $,
    closeTitleWithTimer: w,
    componentRef: u,
    isTitleVisible: h,
    mouseEnterTooltip: F,
    mouseLeaveTooltip: C,
    showTitle: M,
    startPopper: P,
    titleArrowRef: E,
    titleRef: p
  };
}
function qc(e) {
  const t = d(e, "popperContainerId"), n = _(() => `#${t.value}`);
  return {
    addPopperContainerInBody: ({ className: s = "a_popup_container" } = {}) => {
      if (!document.getElementById(t.value)) {
        const o = document.createElement("div");
        o.id = t.value, o.className = s, document.body.prepend(o);
      }
    },
    popperContainerIdSelector: n
  };
}
const eF = ["RouterLink", "router-link"];
function tF(e) {
  const t = d(e, "tag");
  return {
    tagLocal: _(() => eF.indexOf(t.value) !== -1 ? Ur(t.value) : t.value)
  };
}
function nF(e, {
  showTitle: t = () => {
  },
  closeTitle: n = () => {
  },
  closeTitleWithTimer: r = () => {
  }
}) {
  const s = d(e, "isHide");
  return {
    onBlur: () => {
      n();
    },
    onFocus: () => {
      s.value || t();
    },
    onMouseenter: () => {
      s.value || t();
    },
    onMouseleave: () => {
      r();
    }
  };
}
const _l = {
  /*
   * called before bound element's attributes
   * or event listeners are applied
   */
  created(e, t) {
    var n;
    Fe((n = t.value) == null ? void 0 : n.created) && t.value.created(e, t);
  },
  // called right before the element is inserted into the DOM.
  beforeMount(e, t) {
    var n;
    Fe((n = t.value) == null ? void 0 : n.beforeMount) && t.value.beforeMount(e, t);
  },
  /*
   * called when the bound element's parent component
   * and all its children are mounted.
   */
  mounted(e, t) {
    var n;
    Fe((n = t.value) == null ? void 0 : n.mounted) && t.value.mounted(e, t);
  },
  // called before the parent component is unmounted
  beforeUnmount(e, t) {
    var n;
    Fe((n = t.value) == null ? void 0 : n.beforeUnmount) && t.value.beforeUnmount(e, t);
  },
  // called when the parent component is unmounted
  unmounted(e, t) {
    var n;
    Fe((n = t.value) == null ? void 0 : n.unmounted) && t.value.unmounted(e, t);
  }
}, rF = {
  name: "ATooltip",
  props: {
    arrowPadding: {
      type: [Number, Function],
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_tooltip_")
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    maxWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    minWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    offsetDistance: {
      type: Number,
      required: !1,
      default: 6
    },
    offsetSkidding: {
      type: Number,
      required: !1,
      default: 0
    },
    placement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Rr.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: "a_tooltip_container"
    },
    showArrow: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tag: {
      type: String,
      required: !1,
      default: "span"
    },
    timeClose: {
      type: Number,
      required: !1,
      default: 100,
      validator: (e) => e >= 0
    },
    width: {
      type: Number,
      required: !1,
      default: void 0
    },
    withoutAriaDescribedby: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      closeTitle: t,
      closeTitleWithTimer: n,
      componentRef: r,
      isTitleVisible: s,
      mouseEnterTooltip: i,
      mouseLeaveTooltip: o,
      showTitle: u,
      startPopper: h,
      titleArrowRef: A,
      titleRef: E
    } = Qx(e), {
      onBlur: p,
      onFocus: T,
      onMouseenter: S,
      onMouseleave: b
    } = nF(e, {
      showTitle: u,
      closeTitle: t,
      closeTitleWithTimer: n
    }), {
      tagLocal: L
    } = tF(e), {
      ariaDescribedby: v,
      tooltipStyles: I
    } = cx(e, {
      isTitleVisible: s
    }), {
      addPopperContainerInBody: R,
      popperContainerIdSelector: g
    } = qc(e);
    return R(), Dt(() => {
      t();
    }), {
      ariaDescribedby: v,
      closeTitle: t,
      componentRef: r,
      isTitleVisible: s,
      mouseEnterTooltip: i,
      mouseLeaveTooltip: o,
      onBlur: p,
      onFocus: T,
      onMouseenter: S,
      onMouseleave: b,
      showTitle: u,
      popperContainerIdSelector: g,
      startPopper: h,
      tagLocal: L,
      titleArrowRef: A,
      titleRef: E,
      tooltipStyles: I
    };
  },
  render() {
    return c(this.tagLocal, {
      ref: "componentRef",
      id: this.id,
      "aria-describedby": this.ariaDescribedby,
      onFocus: this.onFocus,
      onBlur: this.onBlur,
      onMouseenter: this.onMouseenter,
      onMouseleave: this.onMouseleave
    }, {
      default: () => [
        this.$slots.default && this.$slots.default(),
        !this.isHide && c(la, {
          to: this.popperContainerIdSelector
        }, [
          /*
           * h("div", {
           *   id: this.ariaDescribedby,
           *   class: "a_sr_only",
           * }, [
           *   this.$slots.title && this.$slots.title(),
           * ]),
           */
          !!(this.$slots.title && this.isTitleVisible) && Ot(c("div", {
            ref: "titleRef",
            class: "a_tooltip__container",
            style: this.tooltipStyles,
            onMouseenter: this.mouseEnterTooltip,
            onMouseleave: this.mouseLeaveTooltip
          }, [
            this.showArrow && c("div", {
              ref: "titleArrowRef",
              "data-popper-arrow": !0,
              class: "a_tooltip__arrow"
            }),
            c("div", {
              id: this.ariaDescribedby,
              class: "a_tooltip__wrapper"
            }, this.$slots.title && this.$slots.title())
          ]), [
            [_l, {
              mounted: this.startPopper
            }]
          ])
        ])
      ]
    });
  }
};
function aF(e, {
  tagLocal: t = _(() => "")
}) {
  const n = d(e, "isTitleHtml");
  return {
    componentLocal: _(() => n.value ? rF : t.value)
  };
}
function sF(e) {
  const t = d(e, "type"), n = d(e, "disabled");
  return {
    disabledLocal: _(() => {
      if (["button", "submit", "reset"].indexOf(t.value) !== -1 && n.value)
        return !0;
    })
  };
}
function iF(e, {
  tagLocal: t = _(() => "")
}) {
  const n = d(e, "isTitleHtml"), r = d(e, "titleAttributes"), s = d(e, "titlePlacement"), i = B(void 0), o = _(() => n.value ? {
    tag: t.value,
    placement: s.value,
    withoutAriaDescribedby: !0,
    ...r.value
  } : {});
  return {
    elementRef: i,
    htmlTitleAttributes: o
  };
}
function lF(e) {
  const t = d(e, "loading"), n = d(e, "loadingAlign"), r = _(() => t.value && n.value === "left"), s = _(() => t.value && n.value === "right");
  return {
    isLoadingLeft: r,
    isLoadingRight: s
  };
}
function oF(e) {
  const t = d(e, "disabled"), n = d(e, "to"), r = d(e, "type");
  return {
    isRouterLink: _(() => r.value === "link" && !!n.value && !t.value)
  };
}
const CE = "a_btn a_btn_switch";
function uF(e) {
  const t = d(e, "isSwitch"), n = d(e, "modelSwitch"), r = _(() => {
    if (t.value)
      return !!n.value;
  }), s = _(() => {
    if (t.value)
      return n.value ? `${CE} a_btn_switch_active` : CE;
  });
  return {
    isSwitchActive: r,
    switchClass: s
  };
}
const _F = {
  button: "button",
  submit: "button",
  reset: "button",
  link: "a",
  text: "span"
};
function dF(e, {
  isRouterLink: t = _(() => !1)
}) {
  const n = d(e, "tag"), r = d(e, "type");
  return {
    tagLocal: _(() => n.value ? n.value : t.value ? Ur("RouterLink") : _F[r.value] || "span")
  };
}
function cF(e) {
  const t = d(e, "html"), n = d(e, "htmlScreenReader"), r = d(e, "safeHtml"), s = d(e, "safeHtmlScreenReader"), i = d(e, "text"), o = d(e, "textScreenReader"), u = _(() => nt(i.value) ? !hn(i.value) : !ae(i.value) && i.value !== ""), h = _(() => nt(r.value) ? !hn(r.value) : !ae(r.value) && r.value !== ""), A = _(() => nt(t.value) ? !hn(t.value) : !ae(t.value) && t.value !== ""), E = _(() => u.value || h.value || A.value), p = _(() => nt(o.value) ? !hn(o.value) : !ae(o.value) && o.value !== ""), T = _(() => nt(s.value) ? !hn(s.value) : !ae(s.value) && s.value !== ""), S = _(() => nt(n.value) ? !hn(n.value) : !ae(n.value) && n.value !== ""), b = _(() => p.value || T.value || S.value);
  return {
    isTextOrHtmlVisible: E,
    isTextOrHtmlScreenReaderVisible: b
  };
}
function fF(e) {
  const t = d(e, "title");
  return {
    isTitleVisible: _(() => me(t.value) && t.value.length > 0 ? !0 : nt(t.value) ? !hn(t.value) : !Ce(t.value))
  };
}
function Bt(e) {
  const t = d(e, "excludeRenderAttributes");
  return {
    attributesToExcludeFromRender: _(() => {
      const r = {};
      return z(t.value, (s) => {
        r[s] = void 0;
      }), r;
    })
  };
}
const be = {
  name: "AElement",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaDisabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    href: {
      type: String,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_element_")
    },
    isSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    modelSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tabindex: {
      type: [Number, String],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: void 0
    },
    target: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Rr.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => it(e) ? e === "auto" : fa(e)
    },
    to: {
      type: [Object, String],
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0,
      default: "text",
      validator: (e) => ["button", "submit", "reset", "link", "text"].indexOf(e) !== -1
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      isRouterLink: r
    } = oF(e), {
      disabledLocal: s
    } = sF(e), {
      tagLocal: i
    } = dF(e, {
      isRouterLink: r
    }), {
      toHrefAttributes: o,
      typeAttribut: u
    } = _x(e, {
      isRouterLink: r,
      tagLocal: i
    }), {
      isTitleVisible: h
    } = fF(e), {
      isLoadingLeft: A,
      isLoadingRight: E
    } = lF(e), {
      isTextOrHtmlVisible: p,
      isTextOrHtmlScreenReaderVisible: T
    } = cF(e), {
      onClick: S
    } = dx(e, t), {
      componentLocal: b
    } = aF(e, {
      tagLocal: i
    }), {
      elementRef: L,
      htmlTitleAttributes: v
    } = iF(e, {
      tagLocal: i
    }), {
      ariaLabelAttributes: I
    } = Oc(e), {
      isSwitchActive: R,
      switchClass: g
    } = uF(e);
    return {
      ariaLabelAttributes: I,
      attributesToExcludeFromRender: n,
      componentLocal: b,
      disabledLocal: s,
      elementRef: L,
      htmlTitleAttributes: v,
      isLoadingLeft: A,
      isLoadingRight: E,
      isSwitchActive: R,
      isTextOrHtmlScreenReaderVisible: T,
      isTextOrHtmlVisible: p,
      isTitleVisible: h,
      onClick: S,
      switchClass: g,
      tagLocal: i,
      toHrefAttributes: o,
      typeAttribut: u
    };
  },
  render() {
    return c(this.componentLocal, {
      ...this.$attrs,
      ...this.htmlTitleAttributes,
      ...this.ariaLabelAttributes,
      ...this.toHrefAttributes,
      ref: "elementRef",
      id: this.id,
      class: [
        this.classDefault,
        this.switchClass,
        this.class,
        {
          [this.classDisabled]: this.ariaDisabled
        }
      ],
      type: this.typeAttribut,
      tabindex: this.tabindex,
      disabled: this.disabledLocal,
      ariaDisabled: this.ariaDisabled,
      "aria-pressed": this.isSwitchActive,
      isAllRowsSelected: void 0,
      // TODO: ATable
      onClick: this.onClick,
      ...this.attributes,
      ...this.attributesToExcludeFromRender
    }, {
      default: () => [
        !this.isTitleHtml && this.isTitleVisible ? c(Ae, {
          tag: "span",
          alwaysTranslate: this.alwaysTranslate,
          ariaHidden: !0,
          class: [
            "a_position_absolute_all",
            this.classDefaultHidden
          ],
          title: this.title,
          extra: this.extra,
          style: {
            zIndex: this.titleZIndex
          },
          ...this.titleAttributes
        }) : "",
        this.isTextOrHtmlScreenReaderVisible ? c(Ae, {
          alwaysTranslate: this.alwaysTranslate,
          class: [
            "a_sr_only",
            this.classDefaultHidden
          ],
          tag: "span",
          text: this.textScreenReader,
          html: this.htmlScreenReader,
          safeHtml: this.safeHtmlScreenReader,
          extra: this.extra
        }) : "",
        this.$slots.buttonPrepend ? this.$slots.buttonPrepend({ extraData: this.extraData }) : "",
        this.isLoadingLeft ? c(hl, {
          class: [
            "aloha_btn__spinner_left",
            this.loadingClass
          ]
        }) : "",
        c(ut, {
          icon: this.iconLeft,
          iconTag: this.iconTag,
          class: [
            "aloha_btn__icon_left",
            this.iconClass
          ],
          ...this.iconAttributes
        }),
        this.$slots.default ? this.$slots.default({ extraData: this.extraData }) : "",
        this.isTextOrHtmlVisible ? c(Ae, {
          alwaysTranslate: this.alwaysTranslate,
          ariaHidden: this.textAriaHidden,
          class: this.textClass,
          extra: this.extra,
          html: this.html,
          safeHtml: this.safeHtml,
          tag: this.textTag,
          text: this.text,
          textAfter: this.textAfter,
          textBefore: this.textBefore
        }) : "",
        c(ut, {
          icon: this.iconRight,
          iconTag: this.iconTag,
          class: [
            "aloha_btn__icon_right",
            this.iconClass
          ],
          ...this.iconAttributes
        }),
        this.isLoadingRight ? c(hl, {
          class: [
            "aloha_btn__spinner_right",
            this.loadingClass
          ]
        }) : "",
        this.$slots.buttonAppend ? this.$slots.buttonAppend({ extraData: this.extraData }) : ""
      ],
      title: !this.isTitleHtml || !this.title && !this.$slots.buttonTitle ? () => "" : () => [
        this.isTitleVisible ? c(Ae, {
          alwaysTranslate: this.alwaysTranslate,
          html: this.title,
          tag: "span",
          extra: this.extra
        }) : "",
        this.$slots.buttonTitle ? this.$slots.buttonTitle({ extraData: this.extraData }) : ""
      ]
    });
  }
};
function UT(e) {
  const t = d(e, "dataItem"), n = d(e, "isButtonGroup"), r = d(e, "classButtonGroupDefault");
  return {
    classButton: _(() => {
      if (n.value)
        return t.value.classButton || r.value;
    })
  };
}
function hF(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = d(e, "modelValue");
  return {
    isChecked: _(() => n.value && n.value.indexOf(t.value) !== -1)
  };
}
function AF(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: s = _(() => {
  })
}) {
  const i = d(e, "dataItem"), o = d(e, "modelValue"), u = (A) => {
    if (n.value) {
      A.preventDefault(), A.stopPropagation();
      return;
    }
    const E = pe(o.value) || [];
    if (r.value) {
      const p = E.indexOf(s.value);
      E.splice(p, 1);
    } else
      E.push(s.value);
    t("changeModelValue", {
      model: E,
      item: i.value,
      $event: A
    }), A.preventDefault(), A.stopPropagation();
  };
  return {
    onClick: u,
    onKeydown: (A) => {
      (A.key === "Enter" || A.keyCode === X.space) && (u(A), A.stopPropagation(), A.preventDefault());
    }
  };
}
const bt = "_a_label";
function $c(e) {
  const t = d(e, "dataItem"), n = d(e, "id"), r = d(e, "idSuffix"), s = d(e, "itemIndex"), i = _(() => t.value[Ke]), o = _(() => t.value[bt]), u = _(() => r.value ? `_${r.value}` : "");
  return {
    idLocal: _(() => `${n.value}_${s.value}${u.value}`),
    labelLocal: o,
    valueLocal: i
  };
}
function kc(e) {
  const t = d(e, "dataItem"), n = d(e, "disabled"), r = d(e, "keyDisabled"), s = d(e, "keyDisabledCallback");
  return {
    disabledElement: _(() => {
      if (n.value || Fe(s.value) && s.value({ item: t.value }) || r.value && fe(t.value, r.value))
        return !0;
    })
  };
}
function HT(e) {
  const t = d(e, "dataItem"), n = d(e, "keyTitle"), r = d(e, "keyTitleCallback");
  return {
    titleLocal: _(() => {
      if (r.value)
        return r.value({ item: t.value });
      if (n.value)
        return fe(t.value, n.value);
    })
  };
}
function EF(e, {
  trueValue: t = "_YES_",
  falseValue: n = "_NO_",
  useNil: r = !0
} = {}) {
  return r && ae(e) ? "" : xt(e ? { placeholder: t } : { placeholder: n });
}
function pF(e) {
  return vN(e);
}
function tl(e, { suffix: t = "", digits: n = 2, digitGrouping: r = !0 } = {}) {
  if (ae(e))
    return "";
  let s = Ut(e);
  if (s.split(",").length - 1 > 1)
    return e;
  s = s.replace(",", ".").replace(/[.](?=.*[.])/g, "");
  let o = _i(s);
  if (o === 0)
    return `0${n > 0 ? "," : ""}${aP("0", n)}${t ? ` ${t}` : ""}`;
  if (!o)
    return e;
  o = sP(o, n), s = Ut(o);
  const u = s.split(".");
  let h = "";
  if (u[1])
    for (let S = 0; S < n; S++) {
      const b = Ce(u[1][S]) ? "0" : u[1][S];
      h = `${h}${b}`;
    }
  else
    h = Xw("", n, "0");
  let A = Ut(u[0] || "0"), E = !1;
  A.startsWith("-") && (A = A.substring(1), E = !0);
  let p = 0, T = "";
  return ow(A, (S) => {
    p > 0 && p % 3 === 0 && r && (T += "."), p++, T += S;
  }), `${E ? "-" : ""}${T.split("").reverse().join("")}${mi(h) > 0 ? "," : ""}${h}${t ? ` ${t}` : ""}`;
}
function TF(e, { suffix: t = "€", digits: n = 2, digitGrouping: r = !0 } = {}) {
  return tl(e, { suffix: t, digits: n, digitGrouping: r });
}
Fn.suppressDeprecationWarnings = !0;
const NE = {
  date: () => "DD.MM.YYYY",
  datetime: () => "DD.MM.YYYY HH:mm",
  fullDate: () => "dddd, DD. MMMM YYYY, HH:mm",
  time: () => "HH:mm",
  timeWithSeconds: () => "HH:mm:ss"
};
function mF(e, { format: t = "date" } = {}) {
  if (ae(e) || e === "")
    return "";
  const n = Fn(String(e));
  return n.isValid() ? (Fe(NE[t]) && (t = NE[t]()), n.format(t)) : e;
}
function SF(e, { emptyValue: t = "-" } = {}) {
  return ae(e) || e === "" ? t : e;
}
function bF(e, { linkClass: t } = {}) {
  if (ae(e) || e === "" || !it(e) || !/^\S+@\S+\.\S+$/.test(e))
    return "";
  let n = "";
  return t && (n = ` class="${t}"`), `<a href="mailto:${e}"${n}>${e}</a>`;
}
function LF(e) {
  const t = document.createElement("div");
  return t.textContent = e, t.innerHTML;
}
function vF(e, { units: t = "kb", sourceUnits: n = "b", digits: r = 2 } = {}) {
  const i = [
    "b",
    "kb",
    "mb",
    "gb",
    "tb",
    "pb",
    "eb",
    "zb",
    "yb"
  ], o = _i(e);
  if (yw(o))
    return "";
  const u = i.indexOf(n);
  let h = i.indexOf(t);
  if (u === -1)
    return "";
  const A = o * Math.pow(1024, u);
  h === -1 && (h = Math.floor(Math.log(A) / Math.log(1024)), h < 0 && (h = 0), t = i[h]);
  const E = xt({ placeholder: `_A_FILE_SIZE_${AT(t)}_` });
  if (o === 0)
    return tl(0, { suffix: E, digits: r });
  if (u === h)
    return tl(o, { suffix: E, digits: r });
  const p = A / Math.pow(1024, Math.abs(h));
  return tl(p, { suffix: E, digits: r });
}
function IF(e, { replacer: t, space: n = 2, isHtml: r = !1, jsonClass: s = "a_code_content", tag: i = "pre" } = {}) {
  if (ae(e))
    return "";
  try {
    const o = JSON.stringify(e, t, n);
    if (r) {
      const u = s ? ` class="${s}"` : "";
      return `<${i}${u}>${o}</${i}>`;
    }
    return o;
  } catch {
    return "";
  }
}
function yF(e) {
  return e ? rP(e, (t, n, r) => `${t}${t ? ", " : ""}${r}: ${n}`, "") : "";
}
function gF(e, { limit: t = 30, maxThreeDots: n = !0 } = {}) {
  if (ae(e))
    return "";
  const r = Ut(e);
  if (r.length <= t)
    return r;
  if (n) {
    const s = r.slice(0, t).trimEnd();
    let i = "...", o = !0;
    for (let u = s.length - 1; u > s.length - 4 && s[u] === "."; u--) {
      if (o)
        i = i.slice(0, -1);
      else
        break;
      o = !0;
    }
    return `${s}${i}`;
  }
  return `${r.substring(0, t)}...`;
}
function RF(e, { linkText: t = "", protocol: n = "https://", target: r = "", linkClass: s = "" } = {}) {
  if (ae(e) || !it(e))
    return "";
  let i = n;
  (e.startsWith("https://") || e.startsWith("http://")) && (i = "");
  const o = r ? ` target="${r}"` : "", u = s ? ` class="${s}"` : "";
  return `<a href="${i}${e}"${o}${u}>${t || e}</a>`;
}
function tu(e, {
  defaultValue: t = "",
  isChild: n = !1,
  isHtml: r = !0,
  isSimpleArray: s = !1,
  keyChildren: i = "",
  keyLabel: o = "",
  keyLabelCallback: u,
  lastSeparator: h,
  listClass: A = "",
  separator: E,
  separatorHtml: p = "",
  tag: T = "ul"
} = {}) {
  if (!me(e) || !e.length)
    return t;
  let S = "";
  return r === !1 || r === "false" ? (Ce(E) && (E = ", "), z(e, (b, L) => {
    let v = DE({
      keyLabel: o,
      keyLabelCallback: u,
      index: L,
      item: b,
      isSimpleArray: s
    }), I;
    if (s) {
      if (me(v)) {
        let R = "";
        z(v, (g) => {
          me(g) ? I = g : R = g;
        }), v = R;
      }
    } else i && (I = fe(b, i));
    !Ce(h) && L === e.length - 1 ? S += `${L !== 0 || n ? h : ""}${v}` : S += `${L !== 0 || n ? E : ""}${v}`, I != null && I.length && (S += tu(I, {
      isChild: !0,
      isHtml: r,
      isSimpleArray: s,
      keyChildren: i,
      keyLabel: o,
      keyLabelCallback: u,
      separator: E
    }));
  }), S) : (z(e, (b, L) => {
    const v = e.length === L + 1, I = DE({
      keyLabel: o,
      keyLabelCallback: u,
      index: L,
      item: b,
      isSimpleArray: s
    });
    let R, g = I;
    s ? me(I) && z(I, (D) => {
      me(D) ? R = D : g = D;
    }) : i && (R = fe(b, i)), E && !v && (g += E), R != null && R.length && (g += tu(R, {
      isChild: !0,
      isHtml: r,
      isSimpleArray: s,
      keyChildren: i,
      keyLabel: o,
      keyLabelCallback: u,
      listClass: A,
      tag: T
    })), p && !v && (g += p), S += `<li>${g}</li>`;
  }), `<${T}${OF({ listClass: A })}>${S}</${T}>`);
}
function DE({ keyLabel: e, keyLabelCallback: t, index: n, item: r, isSimpleArray: s }) {
  let i;
  return s ? i = r : Fe(t) ? i = t({ item: r, itemIndex: n }) : i = e ? fe(r, e) : r, Ce(i) && (i = ""), i;
}
function OF({ listClass: e }) {
  return e ? ` class="${e}"` : "";
}
function CF(e) {
  return hT(e);
}
function NF(e, { chars: t = 4, mask: n = "*" } = {}) {
  if (ae(e))
    return "";
  const r = Ut(e);
  if (r.length <= t)
    return r;
  const s = Rw([t, 0]), i = n.repeat(r.length - s), o = s === 0 ? "" : r.slice(-s);
  return `${i}${o}`;
}
function DF(e, { mapping: t = {}, defaultValue: n = "" } = {}) {
  return `${e}` in t ? t[e] : n;
}
function BF(e, {
  searchModel: t = "",
  searchClass: n = "a_search_highlight",
  tag: r = "mark",
  attributes: s = [],
  caseSensitive: i = !1,
  isHtml: o = !1
} = {}) {
  if (!e)
    return "";
  if (t === "" || ae(t))
    return e;
  const u = i ? "g" : "gi", h = new RegExp(Su(t), u), A = s.length ? ` ${s.join(" ")}` : "";
  if (!o)
    return e.replace(h, (T) => VT({
      value: T,
      tag: r,
      searchClass: n,
      attributesString: A
    }));
  const p = new DOMParser().parseFromString(e, "text/html");
  return WT({
    node: p.body,
    tag: r,
    searchClass: n,
    re: h,
    attributesString: A
  }), p.body.innerHTML;
}
function VT({ value: e, tag: t, searchClass: n, attributesString: r }) {
  return `<${t} class="${n}"${r}>${e}</${t}>`;
}
function WT({ node: e, re: t, tag: n, searchClass: r, attributesString: s }) {
  if (e.nodeType === Node.TEXT_NODE) {
    if (e.nodeValue.match(t)) {
      const o = e.parentNode, u = e.nodeValue.replace(t, (A) => VT({
        value: A,
        tag: n,
        searchClass: r,
        attributesString: s
      })), h = document.createElement("span");
      for (h.innerHTML = u; h.firstChild; )
        o.insertBefore(h.firstChild, e);
      o.removeChild(e);
    }
  } else e.nodeType === Node.ELEMENT_NODE && Array.from(e.childNodes).forEach((i) => WT({
    node: i,
    re: t,
    tag: n,
    searchClass: r,
    attributesString: s
  }));
}
function wF(e) {
  return AT(e);
}
const PF = B({});
function Wn() {
  return {
    filterBoolean: (g, { trueValue: D = "_YES_", falseValue: w = "_NO_", useNil: M = !0 } = {}) => EF(g, {
      trueValue: D,
      falseValue: w,
      useNil: M
    }),
    filterCapitalize: (g) => pF(g),
    filterCurrency: (g, { suffix: D = "€", digits: w = 2, digitGrouping: M = !0 } = {}) => TF(g, { suffix: D, digits: w, digitGrouping: M }),
    filterDate: (g, { format: D = "date" } = {}) => mF(g, { format: D }),
    filterDefaultForEmpty: (g, { emptyValue: D = "-" } = {}) => SF(g, {
      emptyValue: D
    }),
    filterEmail: (g, { linkClass: D } = {}) => bF(g, { linkClass: D }),
    filterEscapeHtml: (g) => LF(g),
    filterFileSize: (g, { units: D = "kb", sourceUnits: w = "b", digits: M = 2 } = {}) => vF(g, { units: D, sourceUnits: w, digits: M }),
    filterFloat: (g, { suffix: D = "", digits: w = 2, digitGrouping: M = !0 } = {}) => tl(g, { suffix: D, digits: w, digitGrouping: M }),
    filterJson: (g, {
      replacer: D,
      space: w = 2,
      isHtml: M = !1,
      jsonClass: P = "a_code_content",
      tag: F = "pre"
    } = {}) => IF(g, { replacer: D, space: w, isHtml: M, jsonClass: P, tag: F }),
    filterKeyValue: (g) => yF(g),
    filterLimitTo: (g, {
      limit: D = 30,
      maxThreeDots: w = !0
    } = {}) => gF(g, { limit: D, maxThreeDots: w }),
    filterLink: (g, { linkText: D = "", protocol: w = "https://", target: M = "", linkClass: P = "" } = {}) => RF(g, { linkText: D, protocol: w, target: M, linkClass: P }),
    filterList: (g, {
      isHtml: D = !0,
      isSimpleArray: w = !1,
      keyChildren: M = "",
      keyLabel: P = "",
      keyLabelCallback: F,
      listClass: C = "",
      separator: $ = ", ",
      tag: H = "ul"
    } = {}) => tu(g, { isHtml: D, listClass: C, keyLabel: P, keyLabelCallback: F, keyChildren: M, isSimpleArray: w, separator: $, tag: H }),
    filterLowerCase: (g) => CF(g),
    filterMask: (g, { chars: D = 4, mask: w = "*" } = {}) => NF(g, { chars: D, mask: w }),
    filterPropertyByValue: (g, { mapping: D = {}, defaultValue: w = "" } = {}) => DF(g, { mapping: D, defaultValue: w }),
    filterSearchHighlight: (g, {
      searchModel: D = "",
      searchClass: w = "a_search_highlight",
      tag: M = "mark",
      attributes: P = [],
      caseSensitive: F = !1,
      isHtml: C = !1
    } = {}) => BF(g, {
      searchModel: D,
      searchClass: w,
      tag: M,
      attributes: P,
      caseSensitive: F,
      isHtml: C
    }),
    filterUpperCase: (g) => wF(g),
    ...PF.value
  };
}
function Uc(e, {
  labelLocal: t = _(() => ""),
  valueLocal: n = _(() => "")
}) {
  const r = d(e, "isHiddenWithSearch"), s = d(e, "modelSearch"), i = d(e, "searching"), o = d(e, "searchingElements"), u = d(e, "showElementWennGroupFound"), {
    filterSearchHighlight: h
  } = Wn(), A = _(() => !!(r.value || i.value && !u.value && !o.value[n.value])), E = _(() => A.value ? t.value : h(t.value, { searchModel: s.value })), p = _(() => A.value ? "display: none;" : void 0), T = _(() => A.value ? !0 : void 0);
  return {
    currentLabelFiltered: E,
    dataHideWithSearch: T,
    styleWithSearch: p
  };
}
const xo = {
  name: "ACheckboxItem",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: ""
    },
    modelValue: {
      type: Array,
      required: !1
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: s
    } = $c(e), {
      classButton: i
    } = UT(e), {
      isChecked: o
    } = hF(e, {
      valueLocal: s
    }), {
      disabledElement: u
    } = kc(e), {
      onClick: h,
      onKeydown: A
    } = AF(e, t, {
      isChecked: o,
      valueLocal: s
    }), {
      currentLabelFiltered: E,
      styleWithSearch: p
    } = Uc(e, {
      labelLocal: r,
      valueLocal: s
    }), {
      titleLocal: T
    } = HT(e);
    return {
      classButton: i,
      currentLabelFiltered: E,
      disabledElement: u,
      idLocal: n,
      isChecked: o,
      labelLocal: r,
      onClick: h,
      onKeydown: A,
      styleWithSearch: p,
      titleLocal: T,
      valueLocal: s
    };
  },
  render() {
    return this.readonly ? c(be, {
      alwaysTranslate: this.alwaysTranslate,
      classDefault: "",
      extra: {
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      },
      tag: "li",
      title: this.titleLocal,
      type: "text"
    }, () => [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : this.labelLocal && Ot(c("span", {
        class: "a_custom_control_label__text"
      }), [
        [Yt, this.currentLabelFiltered]
      ])
    ]) : this.isButtonGroup ? [
      c("input", {
        id: this.idLocal,
        checked: this.isChecked,
        class: "a_btn_check",
        disabled: this.disabledElement,
        name: this.id,
        style: this.styleWithSearch,
        type: "checkbox",
        value: this.valueLocal,
        onClick: this.onClick,
        onKeydown: this.onKeydown
      }),
      c(be, {
        alwaysTranslate: this.alwaysTranslate,
        class: this.classButton,
        classDefault: "",
        extra: {
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        },
        for: this.idLocal,
        tag: "label",
        title: this.titleLocal,
        type: "button"
      }, () => [
        this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          id: this.id,
          item: this.dataItem,
          itemIndex: this.itemIndex,
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        }) : this.labelLocal && Ot(c("span", {}), [
          [Yt, this.currentLabelFiltered]
        ])
      ])
    ] : [
      c("div", {
        class: ["a_custom_control a_custom_checkbox", {
          a_custom_control_invalid: this.isErrors
        }],
        style: this.styleWithSearch
      }, [
        c("input", {
          id: this.idLocal,
          checked: this.isChecked,
          class: "a_custom_control_input",
          disabled: this.disabledElement,
          name: this.id,
          type: "checkbox",
          value: this.valueLocal,
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(be, {
          alwaysTranslate: this.alwaysTranslate,
          class: {
            a_custom_control_label: !0,
            a_custom_control_label_width_auto: this.isWidthAuto
          },
          classDefault: "",
          extra: {
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          },
          for: this.idLocal,
          tag: "label",
          title: this.titleLocal,
          type: "button"
        }, () => [
          this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            id: this.id,
            item: this.dataItem,
            itemIndex: this.itemIndex,
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          }) : this.labelLocal && Ot(c("span", {
            class: "a_custom_control_label__text"
          }), [
            [Yt, this.currentLabelFiltered]
          ])
        ])
      ]),
      this.slotAppendName && this.$slots[this.slotAppendName] ? this.$slots[this.slotAppendName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        isChecked: this.isChecked,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : ""
    ];
  }
};
function xF(e) {
  const t = d(e, "data"), n = d(e, "modelValueObj"), r = _(() => {
    const o = {
      indeterminate: void 0,
      checkedAll: !1,
      checkedSome: !1,
      uncheckedSome: !1
    };
    return hn(n.value) || (z(t.value, (u) => {
      const h = u[Ke];
      if (n.value[h] ? o.checkedSome = !0 : o.uncheckedSome = !0, o.checkedSome && o.uncheckedSome)
        return o.indeterminate = !0, !1;
    }), o.checkedSome && !o.uncheckedSome && (o.checkedAll = !0)), o;
  }), s = _(() => r.value.checkedAll), i = _(() => r.value.indeterminate);
  return {
    isCheckedAll: s,
    isIndeterminate: i
  };
}
function FF(e, { emit: t }, {
  isCheckedAll: n = _(() => !1),
  isIndeterminate: r = _(() => {
  })
}) {
  const s = d(e, "data"), i = d(e, "dataKeyByKeyId"), o = d(e, "modelValue"), u = () => Rt(o.value || [], (T) => !i.value[T]), h = ({ model: T }) => (z(s.value, (S) => {
    const b = S[Ke];
    T.push(b);
  }), T), A = (T) => {
    let S = u();
    (r.value || !n.value) && (S = h({ model: S })), t("changeModelValue", {
      $event: T,
      model: S
    });
  }, E = (T) => {
    T.stopPropagation(), T.preventDefault(), A(T);
  };
  return {
    onClick: E,
    onKeydown: (T) => {
      (T.keyCode === X.enter || T.keyCode === X.space) && (E(T), T.stopPropagation(), T.preventDefault());
    }
  };
}
function MF(e) {
  const t = d(e, "id"), n = _(() => `${t.value}_legend`);
  return {
    idGroup: _(() => `${t.value}_group`),
    idLocal: n
  };
}
function qF(e) {
  const t = d(e, "label"), n = d(e, "modelSearch"), r = d(e, "showSearchHighlight"), {
    filterSearchHighlight: s
  } = Wn();
  return {
    labelSearchHighlight: _(() => r.value ? s(t.value, { searchModel: n.value }) : t.value)
  };
}
const GT = {
  name: "ACheckboxLegend",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    dataKeyByKeyId: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: !1
    },
    id: {
      type: String,
      required: !0
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    label: {
      type: String,
      required: !1,
      default: void 0
    },
    legendClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    main: {
      type: Boolean,
      required: !1
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: () => []
    },
    modelValueObj: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    showSearchHighlight: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textAfterLabel: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idGroup: n,
      idLocal: r
    } = MF(e), {
      isCheckedAll: s,
      isIndeterminate: i
    } = xF(e), {
      onClick: o,
      onKeydown: u
    } = FF(e, t, {
      isCheckedAll: s,
      isIndeterminate: i
    }), {
      labelSearchHighlight: h
    } = qF(e);
    return {
      idGroup: n,
      idLocal: r,
      isCheckedAll: s,
      isIndeterminate: i,
      labelSearchHighlight: h,
      onClick: o,
      onKeydown: u
    };
  },
  render() {
    return this.hasControlCheckbox ? c("legend", {
      class: [
        "a_legend",
        {
          a_legend_invalid: this.isErrors
        },
        this.legendClass
      ]
    }, [
      c("div", {
        class: ["a_custom_control a_custom_checkbox", {
          a_custom_control_invalid: this.isErrors
        }]
      }, [
        c("input", {
          id: this.idLocal,
          "aria-controls": this.idGroup,
          checked: this.isCheckedAll,
          class: "a_custom_control_input",
          disabled: this.disabled,
          indeterminate: this.isIndeterminate,
          type: "checkbox",
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(be, {
          alwaysTranslate: this.alwaysTranslate,
          class: "a_custom_control_label a_custom_control_label_width_auto",
          classDefault: "",
          for: this.idLocal,
          html: this.labelSearchHighlight,
          textScreenReader: this.labelScreenReader,
          tag: "label",
          textAfter: this.textAfterLabel,
          textClass: "a_custom_control_label__text",
          type: "text"
        })
      ])
    ]) : c(be, {
      id: this.idLocal,
      class: [
        "a_legend",
        {
          a_legend_invalid: this.isErrors
        },
        this.legendClass
      ],
      html: this.labelSearchHighlight,
      tag: "legend",
      textAfter: this.textAfterLabel,
      textScreenReader: this.labelScreenReader,
      type: "text"
    });
  }
};
function Hc(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = d(e, "label"), r = _(() => `${t.value}_group`);
  return {
    groupAriaLabelledby: _(() => {
      if (n.value)
        return `${t.value}_legend`;
    }),
    groupId: r
  };
}
function $F(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "disabled");
  return {
    onChangeModelValue: ({ model: s, $event: i }) => {
      n.value || setTimeout(() => {
        t({
          model: s,
          $event: i
        });
      });
    }
  };
}
function kF(e, {
  dataKeyByKeyIdLocal: t = _(() => ({}))
}) {
  const n = d(e, "modelValue"), r = _(() => {
    const o = {};
    return z(n.value || [], (u) => {
      o[u] = !0;
    }), o;
  }), s = _(() => n.value ? Rt(n.value, (o) => t.value[o]) : []);
  return {
    isModelValue: _(() => s.value.length > 0),
    modelValueFiltered: s,
    modelValueObj: r
  };
}
function Vc(e) {
  const t = d(e, "required");
  return {
    textAfterLabel: _(() => t.value ? "*" : "")
  };
}
const gl = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
  <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0"/>
</svg>`, UF = {
  name: "ACheckbox",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    classDataParent: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => []
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_checkbox_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inline: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: void 0
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "value"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: Array,
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    search: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: void 0
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrder: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_",
        notElementsWithSearch: "_A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_",
        search: "_A_CHECKBOX_SEARCH_"
      })
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "onSearchOutside",
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      componentStyleHide: r
    } = Jt(e), {
      ariaDescribedbyLocal: s,
      changeModel: i,
      errorsId: o,
      helpTextId: u,
      htmlIdLocal: h,
      isErrors: A,
      onBlur: E,
      onFocus: p
    } = Xt(e, t), {
      textAfterLabel: T
    } = Vc(e), {
      dataAll: S,
      dataFromServer: b,
      dataExtraLocal: L,
      dataKeyByKeyIdLocal: v,
      dataLocal: I,
      hasDataExtra: R
    } = df(e), {
      loadDataFromServer: g,
      loadDataFromServerForSearchAPI: D,
      loadingDataFromServer: w,
      loadingSearchApi: M,
      onSearchInApi: P,
      searchApiLocal: F,
      updateUrlPropsComputed: C,
      urlPropsComputed: $
    } = of(e, {
      changeModel: i,
      dataExtraLocal: L,
      dataFromServer: b
    }), {
      loadingLocal: H
    } = cf(e, {
      loadingDataFromServer: w
    });
    _f(t, {
      dataKeyByKeyIdLocal: v,
      dataLocal: I
    });
    const {
      dataSort: j
    } = uf(e, {
      data: I
    }), {
      dataGrouped: le,
      groupsForLever: ee,
      hasKeyGroup: _e,
      keyGroupArray: ie
    } = sf(e, {
      data: j
    }), {
      hasNotElementsExtraWithSearch: ue,
      hasNotElementsWithSearch: Te,
      idForButtonSearchOutside: Pe,
      modelSearch: Se,
      modelSearchLowerCase: se,
      modelSearchOutside: Oe,
      onSearchOutside: ye,
      searching: je,
      searchingElements: he,
      searchingElementsExtra: ne,
      searchingGroups: V,
      searchingGroupsWithSearchInGroup: Q,
      searchOutsideOrApi: re,
      searchOutsideRef: ve,
      updateModelSearch: De,
      updateModelSearchOutside: qe
    } = ff(e, t, {
      data: j,
      dataExtra: L,
      groupsForLever: ee,
      htmlIdLocal: h,
      hasKeyGroup: _e,
      keyGroupArray: ie,
      searchApiLocal: F,
      onSearchInApi: P
    }), {
      onChangeModelValue: Xe
    } = $F(e, {
      changeModel: i
    }), {
      iconCollapse: Me,
      initIsCollapsedLocal: xe,
      isCollapsedLocal: at,
      titleCollapse: Ve,
      toggleCollapse: st
    } = lf(e, t), {
      isModelValue: Ze,
      modelValueFiltered: At,
      modelValueObj: Et
    } = kF(e, {
      dataKeyByKeyIdLocal: v
    }), {
      groupId: qt
    } = Hc(e, {
      htmlIdLocal: h
    });
    return rt($, C, {
      deep: !0
    }), xe(), g(), D(), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      componentStyleHide: r,
      dataAll: S,
      dataExtraLocal: L,
      dataGrouped: le,
      dataKeyByKeyIdLocal: v,
      dataSort: j,
      errorsId: o,
      groupId: qt,
      groupsForLever: ee,
      hasDataExtra: R,
      hasKeyGroup: _e,
      hasNotElementsExtraWithSearch: ue,
      hasNotElementsWithSearch: Te,
      helpTextId: u,
      htmlIdLocal: h,
      iconCollapse: Me,
      idForButtonSearchOutside: Pe,
      isCollapsedLocal: at,
      isErrors: A,
      isModelValue: Ze,
      loadingLocal: H,
      loadingSearchApi: M,
      modelSearch: Se,
      modelSearchLowerCase: se,
      modelSearchOutside: Oe,
      modelValueFiltered: At,
      modelValueObj: Et,
      onBlur: E,
      onChangeModelValue: Xe,
      onFocus: p,
      onSearchOutside: ye,
      searching: je,
      searchingElements: he,
      searchingElementsExtra: ne,
      searchingGroups: V,
      searchingGroupsWithSearchInGroup: Q,
      searchOutsideOrApi: re,
      searchOutsideRef: ve,
      textAfterLabel: T,
      titleCollapse: Ve,
      toggleCollapse: st,
      updateModelSearch: De,
      updateModelSearchOutside: qe
    };
  },
  render() {
    var e, t, n;
    return this.isRender ? this.readonly ? c(gn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: void 0,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "checkbox"
    }, this.isModelValue ? () => [
      c("ul", {}, [
        this.modelValueFiltered.map((r, s) => c(xo, {
          key: s,
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          dataItem: this.dataKeyByKeyIdLocal[r] || {},
          isButtonGroup: this.isButtonGroup,
          itemIndex: s,
          readonly: !0,
          slotName: this.slotName
        }, this.$slots))
      ])
    ] : "") : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: [
          "a_form_element__parent",
          {
            a_checkbox_inline: this.inline,
            a_checkbox_control: this.hasControlCheckbox
          }
        ]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("fieldset", {
            id: this.htmlIdLocal,
            tabindex: -1,
            class: [
              "a_fieldset",
              this.classFieldset,
              {
                a_fieldset_no_border: !this.hasBorder,
                a_fieldset_invalid: this.isErrors,
                a_fieldset_collapsed: this.isCollapsedLocal
              }
            ],
            "aria-describedby": this.ariaDescribedbyLocal
          }, [
            this.label || this.labelScreenReader ? c(GT, {
              id: this.htmlIdLocal,
              alwaysTranslate: this.alwaysTranslate,
              data: this.dataAll,
              dataKeyByKeyId: this.dataKeyByKeyIdLocal,
              disabled: this.disabled,
              hasControlCheckbox: this.hasControlCheckbox,
              isErrors: this.isErrors,
              label: this.label,
              legendClass: this.labelClass,
              labelScreenReader: this.labelScreenReader,
              main: !0,
              modelValue: this.modelValue,
              modelValueObj: this.modelValueObj,
              textAfter: this.textAfterLabel,
              onChangeModelValue: this.onChangeModelValue
            }) : "",
            this.collapsible ? c(be, {
              "aria-controls": this.groupId,
              "aria-expanded": !this.isCollapsedLocal,
              alwaysTranslate: this.alwaysTranslate,
              class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
              iconLeft: this.iconCollapse,
              title: this.titleCollapse,
              textScreenReader: this.titleCollapse,
              type: "button",
              onClick: this.toggleCollapse
            }) : "",
            c("div", {
              id: this.groupId,
              class: "a_fieldset__content"
            }, [
              this.searchOutsideOrApi ? c("div", {
                class: "a_fieldset__search"
              }, [
                c("form", {
                  onSubmit: this.onSearchOutside
                }, [
                  c("div", {
                    class: "input-group"
                  }, [
                    c(vn, {
                      alwaysTranslate: this.alwaysTranslate,
                      label: ((e = this.texts) == null ? void 0 : e.search) || "_A_CHECKBOX_SEARCH_",
                      inputClass: "a_select__element_clickable",
                      modelValue: this.modelSearchOutside,
                      modelUndefined: "",
                      "onUpdate:modelValue": this.updateModelSearchOutside
                    }),
                    c(be, {
                      alwaysTranslate: this.alwaysTranslate,
                      ariaDisabled: this.loadingSearchApi,
                      disabled: this.disabled,
                      class: "a_btn a_btn_primary",
                      type: "submit",
                      iconLeft: gl
                    })
                  ])
                ])
              ]) : "",
              this.search ? c(vn, {
                alwaysTranslate: this.alwaysTranslate,
                label: ((t = this.texts) == null ? void 0 : t.search) || "_A_CHECKBOX_SEARCH_",
                class: "a_fieldset__search",
                modelValue: this.modelSearch,
                modelUndefined: "",
                "onUpdate:modelValue": this.updateModelSearch
              }) : "",
              this.loadingLocal ? c(dl) : "",
              this.hasDataExtra ? c("div", {
                class: "a_checkbox__data_extra"
              }, [
                ...this.dataExtraLocal.map((r, s) => c(xo, {
                  key: s,
                  id: this.htmlIdLocal,
                  alwaysTranslate: this.alwaysTranslate,
                  idSuffix: "extra",
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataItem: r,
                  disabled: this.disabled,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  itemIndex: s,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElementsExtra,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.hasNotElementsExtraWithSearch ? "" : c("div", {
                  class: "a_divider",
                  ariaHidden: !0
                })
              ]) : "",
              c("div", {}, this.hasKeyGroup ? [
                c(Gc, {
                  id: `${this.htmlIdLocal}_lev_0`,
                  alwaysTranslate: this.alwaysTranslate,
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataGrouped: this.dataGrouped,
                  disabled: this.disabled,
                  hasControlCheckbox: this.hasControlCheckbox,
                  groupsForLever: this.groupsForLever,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  levelIndex: 0,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  modelValueObj: this.modelValueObj,
                  searching: this.searching,
                  searchingElements: this.searchingElements,
                  searchingGroups: this.searchingGroups,
                  searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  type: "checkbox",
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)
              ] : [
                c("div", {
                  class: [
                    "a_checkbox_data",
                    {
                      a_btn_group: this.isButtonGroup
                    },
                    this.classDataParent
                  ]
                }, [
                  ...this.dataSort.map((r, s) => c(xo, {
                    key: s,
                    id: this.htmlIdLocal,
                    alwaysTranslate: this.alwaysTranslate,
                    classButtonGroupDefault: this.classButtonGroupDefault,
                    dataItem: r,
                    disabled: this.disabled,
                    isButtonGroup: this.isButtonGroup,
                    isErrors: this.isErrors,
                    isWidthAuto: this.isWidthAuto,
                    itemIndex: s,
                    keyDisabled: this.keyDisabled,
                    keyTitle: this.keyTitle,
                    keyTitleCallback: this.keyTitleCallback,
                    modelSearch: this.modelSearchLowerCase,
                    modelValue: this.modelValue,
                    searching: this.searching,
                    searchingElements: this.searchingElements,
                    slotAppendName: this.slotAppendName,
                    slotName: this.slotName,
                    onChangeModelValue: this.onChangeModelValue
                  }, this.$slots))
                ])
              ]),
              !this.dataSort.length || this.hasNotElementsWithSearch ? c(Ae, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_form__not_elements",
                text: ((n = this.texts) == null ? void 0 : n.notElementsWithSearch) || "_A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_"
              }) : ""
            ])
          ])
        ]),
        c(Zt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(ln, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function HF({ emit: e }) {
  return {
    onChangeModelValue: (n) => {
      e("changeModelValue", n);
    }
  };
}
function VF(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = d(e, "modelValue");
  return {
    isChecked: _(() => me(n.value) ? n.value.indexOf(t.value) !== -1 : n.value === t.value)
  };
}
function WF(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: s = _(() => {
  })
}) {
  const i = d(e, "dataItem"), o = (h) => {
    if (n.value || r.value) {
      h.preventDefault(), h.stopPropagation();
      return;
    }
    t("changeModelValue", {
      model: s.value,
      item: i.value,
      $event: h
    }), h.preventDefault(), h.stopPropagation();
  };
  return {
    onClick: o,
    onKeydown: (h) => {
      (h.key === "Enter" || h.keyCode === X.space) && (o(h), h.stopPropagation(), h.preventDefault());
    }
  };
}
const Fo = {
  name: "ARadioItem",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: s
    } = $c(e), {
      classButton: i
    } = UT(e), {
      isChecked: o
    } = VF(e, {
      valueLocal: s
    }), {
      disabledElement: u
    } = kc(e), {
      onClick: h,
      onKeydown: A
    } = WF(e, t, {
      disabledElement: u,
      isChecked: o,
      valueLocal: s
    }), {
      currentLabelFiltered: E,
      styleWithSearch: p
    } = Uc(e, {
      labelLocal: r,
      valueLocal: s
    }), {
      titleLocal: T
    } = HT(e);
    return {
      classButton: i,
      currentLabelFiltered: E,
      disabledElement: u,
      idLocal: n,
      isChecked: o,
      labelLocal: r,
      onClick: h,
      onKeydown: A,
      styleWithSearch: p,
      titleLocal: T,
      valueLocal: s
    };
  },
  render() {
    return this.readonly ? c(be, {
      alwaysTranslate: this.alwaysTranslate,
      classDefault: "",
      extra: {
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      },
      tag: "span",
      title: this.titleLocal,
      type: "text"
    }, () => [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : this.labelLocal && Ot(c("span", {
        class: "a_custom_control_label__text"
      }), [
        [Yt, this.currentLabelFiltered]
      ])
    ]) : this.isButtonGroup ? [
      c("input", {
        id: this.idLocal,
        checked: this.isChecked,
        class: "a_btn_check",
        disabled: this.disabledElement,
        name: this.id,
        style: this.styleWithSearch,
        type: "radio",
        value: this.valueLocal,
        onClick: this.onClick,
        onKeydown: this.onKeydown
      }),
      c(be, {
        alwaysTranslate: this.alwaysTranslate,
        class: this.classButton,
        classDefault: "",
        extra: {
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        },
        for: this.idLocal,
        tag: "label",
        title: this.titleLocal,
        type: "button"
      }, () => [
        this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          id: this.id,
          item: this.dataItem,
          itemIndex: this.itemIndex,
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        }) : this.labelLocal && Ot(c("span", {}), [
          [Yt, this.currentLabelFiltered]
        ])
      ])
    ] : [
      c("div", {
        class: ["a_custom_control a_custom_radio", {
          a_custom_control_invalid: this.isErrors
        }],
        style: this.styleWithSearch
      }, [
        c("input", {
          id: this.idLocal,
          checked: this.isChecked,
          class: "a_custom_control_input",
          disabled: this.disabledElement,
          name: this.id,
          type: "radio",
          value: this.valueLocal,
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(be, {
          alwaysTranslate: this.alwaysTranslate,
          class: {
            a_custom_control_label: !0,
            a_custom_control_label_width_auto: this.isWidthAuto
          },
          classDefault: "",
          extra: {
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          },
          for: this.idLocal,
          tag: "label",
          title: this.titleLocal,
          type: "button"
        }, () => [
          this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            id: this.id,
            item: this.dataItem,
            itemIndex: this.itemIndex,
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          }) : this.labelLocal && Ot(c("span", {
            class: "a_custom_control_label__text"
          }), [
            [Yt, this.currentLabelFiltered]
          ])
        ])
      ]),
      this.slotAppendName && this.$slots[this.slotAppendName] ? this.$slots[this.slotAppendName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        isChecked: this.isChecked,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : ""
    ];
  }
};
function GF(e) {
  const t = d(e, "ariLabel");
  return {
    attributesAriaLabelHidden: _(() => t.value ? {
      ariaLabel: t.value
    } : {
      ariaHidden: !0
    })
  };
}
function KF(e, {
  isIconSvg: t = _(() => !1)
}) {
  const n = d(e, "icon");
  return {
    iconClass: _(() => {
      if (!t.value)
        return `a_icon_${n.value || "_NoImage"}`;
    })
  };
}
const jF = `<svg
   xmlns="http://www.w3.org/2000/svg"
   viewBox="0 0 18 18"
   height="18"
   width="18"
>
  <g
   transform="matrix(0.26617655,0,0,0.26617655,-33.607656,-85.223817)"
  >
    <path
      style="fill:#35495e;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 139.13004,365.87267 -4.53409,7.81862 h 51.05837 l -4.53409,-7.81862 z"
    />
    <path
      style="fill:#41b883;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 134.59595,373.69129 -4.51704,7.7892 h 60.09245 l -4.51704,-7.7892 z"
    />
    <path
      style="fill:#41b883;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 160.07266,329.49377 -16.90595,29.1543 -16.90594,29.15378 h 7.67291 l 13.03745,-22.48287 13.03745,-22.48236 13.03745,22.48236 13.03744,22.48287 h 7.80159 l -16.90594,-29.15378 z"
    />
    <path
      style="fill:#35495e;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 160.00903,342.83634 -13.03745,22.48287 -13.03796,22.48286 h 8.03103 l 9.02632,-15.56546 9.02581,-15.56494 9.02632,15.56494 9.02581,15.56546 h 8.01501 l -13.03744,-22.48286 z"
    />
  </g>
</svg>`, zF = `<svg
  xmlns="http://www.w3.org/2000/svg"
  version="1.1"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <path
    d="M 14.204045,11.607942 C 15.968997,11.607942 17.4,13.038977 17.4,14.80397 17.4,16.568964 15.968997,18 14.204045,18 12.439093,18 11.00809,16.568964 11.00809,14.80397 c 0,-1.764993 1.431003,-3.196028 3.195955,-3.196028 z M 1.7468526,0 H 15.702424 c 0.317838,0 0.601987,0.13036037 0.809974,0.33688648 0.207986,0.20799097 0.336879,0.49654172 0.336879,0.80999272 V 11.401416 C 16.488962,11.121653 16.081779,10.89755 15.640907,10.745219 V 1.4251769 c 0,-0.062983 -0.02344,-0.1157132 -0.06738,-0.1537962 -0.03808,-0.038083 -0.09667,-0.067377 -0.153792,-0.067377 H 2.0192852 c -0.062982,0 -0.1157107,0.023436 -0.1537926,0.067377 -0.038082,0.038083 -0.067375,0.095207 -0.067375,0.1537962 V 11.681178 h 0.00439 L 6.4851264,7.1976561 c 0.1874805,-0.1728376 0.4818832,-0.153796 0.6503226,0.033689 0.00439,0.00439 0.00439,0.010252 0.010252,0.010252 l 3.937088,4.6578239 c -0.692799,0.758727 -1.116094,1.769387 -1.116094,2.878184 0,0.481894 0.08056,0.944747 0.227027,1.376841 H 1.7468526 c -0.3178379,0 -0.6019878,-0.130361 -0.8099738,-0.336887 C 0.7288927,15.611034 0.6,15.321018 0.6,15.007567 V 1.1468792 C 0.6,0.82903398 0.7303573,0.54487745 0.9368788,0.33688648 1.1434002,0.12889569 1.4334089,0 1.7468526,0 Z m 9.6523104,11.585971 0.543401,-3.3381075 c 0.04394,-0.2504678 0.279755,-0.42477 0.530217,-0.3808284 0.09667,0.014647 0.183086,0.062984 0.250463,0.1259664 l 2.50462,2.6321095 c -0.319302,-0.07616 -0.650322,-0.115713 -0.993061,-0.115713 -1.088264,-0.0015 -2.081324,0.405729 -2.83564,1.076573 z m 1.171752,-8.9582554 c 0.458448,0 0.87735,0.1874847 1.176147,0.4862886 0.303191,0.3031979 0.486278,0.717715 0.486278,1.1761738 0,0.4584587 -0.187481,0.8773698 -0.486278,1.1761737 -0.303191,0.3031979 -0.717699,0.4862888 -1.176147,0.4862888 -0.458447,0 -0.87735,-0.1874849 -1.176146,-0.4862888 -0.303191,-0.3031979 -0.486277,-0.717715 -0.486277,-1.1761737 0,-0.4584588 0.18748,-0.8773701 0.486277,-1.1761738 0.303191,-0.3031981 0.719163,-0.4862886 1.176146,-0.4862886 z m 0.562442,10.2325654 2.923522,3.163805 c 0.231421,-0.350069 0.366173,-0.76898 0.366173,-1.220116 0,-1.224509 -0.99306,-2.217592 -2.217542,-2.217592 -0.389608,-0.0015 -0.754315,0.09814 -1.072153,0.273903 z m 2.141377,3.885914 -2.923522,-3.163805 c -0.231421,0.350069 -0.366172,0.768981 -0.366172,1.220116 0,1.224509 0.99306,2.217593 2.217541,2.217593 0.389607,0.0015 0.754316,-0.09814 1.072153,-0.273904 z"
  />
</svg>`, nu = B({
  icons: {
    _NoImage: zF,
    Aloha: jF
  }
}), ode = {
  install: (e, {
    icons: t = {}
  } = {}) => {
    nu.value.icons = {
      ...nu.value.icons,
      ...t
    };
  }
};
function YF(e) {
  const t = d(e, "icon"), {
    isMobileWidth: n
  } = En(), r = _(() => nt(t.value) ? n.value ? t.value.mobile : t.value.desktop : t.value), s = _(() => !ae(r.value) && r.value !== ""), i = _(() => {
    const u = r.value;
    return !!(it(u) && u.trim().startsWith("<svg"));
  }), o = _(() => {
    if (i.value)
      return r.value;
    const u = nu.value.icons[r.value];
    return u || nu.value.icons._NoImage;
  });
  return {
    hasIcon: s,
    iconSvg: o,
    isIconSvg: i
  };
}
const ut = {
  name: "AIcon",
  props: {
    ariLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    icon: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: "i"
    },
    isSaveHtml: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  setup(e) {
    const {
      attributesAriaLabelHidden: t
    } = GF(e), {
      hasIcon: n,
      iconSvg: r,
      isIconSvg: s
    } = YF(e), {
      iconClass: i
    } = KF(e, {
      isIconSvg: s
    });
    return {
      attributesAriaLabelHidden: t,
      hasIcon: n,
      iconClass: i,
      iconSvg: r
    };
  },
  render() {
    if (this.hasIcon)
      return this.isSaveHtml ? c(this.iconTag, {
        class: ["a_icon", this.iconClass],
        innerHTML: this.iconSvg,
        ...this.attributesAriaLabelHidden
      }) : Ot(c(this.iconTag, {
        class: ["a_icon", this.iconClass],
        ...this.attributesAriaLabelHidden
      }), [
        [Yt, this.iconSvg]
      ]);
  }
};
function XF(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = d(e, "type"), r = d(e, "modelValue");
  return {
    isChecked: _(() => n.value === "multiselect" ? !!(r.value && r.value.indexOf(t.value) !== -1) : r.value === t.value)
  };
}
function ZF(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: s = _(() => {
  })
}) {
  const i = (u) => {
    n.value || (t("changeModelValue", {
      currentValue: s.value,
      $event: u,
      isSelected: r.value
    }), u.stopPropagation(), u.preventDefault());
  };
  return {
    onClick: i,
    onKeydown: (u) => {
      n.value || (u.keyCode === X.enter || u.keyCode === X.space) && i(u);
    }
  };
}
const Wc = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-lg" viewBox="0 0 16 16">
  <path d="M12.736 3.97a.733.733 0 0 1 1.047 0c.286.289.29.756.01 1.05L7.88 12.01a.733.733 0 0 1-1.065.02L3.217 8.384a.757.757 0 0 1 0-1.06.733.733 0 0 1 1.047 0l3.052 3.093 5.4-6.425z"/>
</svg>`, Mo = {
  name: "ASelectElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: s
    } = $c(e), {
      isChecked: i
    } = XF(e, {
      valueLocal: s
    }), {
      disabledElement: o
    } = kc(e), {
      onClick: u,
      onKeydown: h
    } = ZF(e, t, {
      disabledElement: o,
      isChecked: i,
      valueLocal: s
    }), {
      currentLabelFiltered: A,
      dataHideWithSearch: E,
      styleWithSearch: p
    } = Uc(e, {
      labelLocal: r,
      valueLocal: s
    });
    return {
      currentLabelFiltered: A,
      dataHideWithSearch: E,
      disabledElement: o,
      idLocal: n,
      isChecked: i,
      labelLocal: r,
      onClick: u,
      onKeydown: h,
      styleWithSearch: p
    };
  },
  render() {
    return c("div", {
      ariaSelected: this.isChecked,
      class: ["a_select__menu__link a_select__element_clickable", {
        a_select__menu__link_selected: this.isChecked,
        a_select__menu__link_disabled: this.disabledElement
      }],
      "data-hide": this.dataHideWithSearch,
      disabled: this.disabledElement,
      role: "option",
      style: this.styleWithSearch,
      tabindex: "-1",
      onClick: this.onClick,
      onKeydown: this.onKeydown
    }, [
      c("span", {
        class: "a_select__menu__link__icon_box"
      }, [
        this.isChecked && c(ut, {
          icon: Wc
        })
      ]),
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered,
        inDropdown: !0
      }) : Ot(c("span"), [
        [Yt, this.currentLabelFiltered]
      ])
    ]);
  }
};
function JF(e) {
  const t = d(e, "type"), n = _(() => t.value === "select" || t.value === "multiselect");
  return {
    currentComponent: _(() => t.value === "radio" ? Fo : t.value === "checkbox" ? xo : n.value ? Mo : ""),
    isComponentSelect: n
  };
}
function QF(e) {
  const t = d(e, "levelIndex"), n = d(e, "groupsForLever"), r = d(e, "groupParentKey"), s = _(() => !!n.value[t.value]);
  return {
    currentGroups: _(() => {
      const o = n.value[t.value];
      return ae(r.value) ? o : Rt(n.value[t.value], ["groupParentKey", r.value]);
    }),
    isComponentVisible: s
  };
}
const Gc = {
  name: "ACheckboxRadioGroups",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    dataGrouped: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    groupParentKey: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    groupsForLever: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: !1
    },
    hideParentWithSearch: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    levelIndex: {
      type: Number,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    modelValueObj: {
      type: Object,
      required: !1,
      default: void 0
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    searchingGroups: {
      type: Object,
      required: !0
    },
    searchingGroupsWithSearchInGroup: {
      type: Object,
      required: !0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0,
      validator: (e) => ["radio", "checkbox", "select", "multiselect"].indexOf(e) !== -1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      onChangeModelValue: n
    } = HF(t), {
      currentComponent: r,
      isComponentSelect: s
    } = JF(e), {
      isComponentVisible: i,
      currentGroups: o
    } = QF(e);
    return {
      currentComponent: r,
      currentGroups: o,
      isComponentSelect: s,
      isComponentVisible: i,
      onChangeModelValue: n
    };
  },
  render() {
    return this.isComponentVisible ? [
      ...this.currentGroups.map((e, t) => {
        let n, r = !1, s = !1;
        if (this.searching) {
          const i = `${this.groupParentKey ? `${this.groupParentKey}_` : ""}${e.groupKey}`;
          s = this.searchingGroupsWithSearchInGroup[i], (this.isHiddenWithSearch || !this.searchingGroups[i] && !s) && (n = "display: none;", r = !0);
        }
        return e.groupKey === "_not_grouped" ? c("div", {
          class: [
            "a_checkbox_radio_group__data",
            {
              a_btn_group: this.isButtonGroup
            }
          ],
          style: n
        }, [
          ...this.dataGrouped[e.allGroupKeys].map((i, o) => c(this.currentComponent, {
            id: `${this.id}`,
            alwaysTranslate: this.alwaysTranslate,
            classButtonGroupDefault: this.isComponentSelect ? void 0 : this.classButtonGroupDefault,
            dataItem: i,
            disabled: this.disabled,
            isButtonGroup: this.isComponentSelect ? void 0 : this.isButtonGroup,
            isErrors: this.isComponentSelect ? void 0 : this.isErrors,
            isHiddenWithSearch: r,
            isWidthAuto: this.isComponentSelect ? void 0 : this.isWidthAuto,
            itemIndex: o,
            keyDisabled: this.keyDisabled,
            keyDisabledCallback: this.keyDisabledCallback,
            keyTitle: this.keyTitle,
            keyTitleCallback: this.keyTitleCallback,
            modelSearch: this.modelSearch,
            modelValue: this.modelValue,
            searching: this.searching,
            searchingElements: this.searchingElements,
            showElementWennGroupFound: s,
            slotAppendName: this.slotAppendName,
            slotName: this.slotName,
            type: this.type,
            onChangeModelValue: this.onChangeModelValue
          }, this.$slots))
        ]) : c("fieldset", {
          class: "a_fieldset",
          style: n
        }, [
          c(GT, {
            id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}`,
            alwaysTranslate: this.alwaysTranslate,
            data: e.data,
            dataKeyByKeyId: e.dataKeyByKeyId,
            disabled: this.disabled,
            hasControlCheckbox: this.hasControlCheckbox,
            isErrors: this.isErrors,
            label: e.groupLabel,
            modelSearch: this.modelSearch,
            modelValue: this.modelValue,
            modelValueObj: this.modelValueObj,
            showSearchHighlight: s,
            onChangeModelValue: this.onChangeModelValue
          }),
          c("div", {
            id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}_group`,
            "aria-labelledby": `${this.id}_lev_${this.levelIndex + 1}_gr_${t}_legend`,
            role: "group"
          }, [
            !!(this.dataGrouped[e.allGroupKeys] || []).length && c("div", {
              class: [
                "a_checkbox_radio_group__data",
                {
                  a_btn_group: this.isButtonGroup
                }
              ]
            }, [
              ...(this.dataGrouped[e.allGroupKeys] || []).map((i, o) => c(this.currentComponent, {
                id: `${this.id}_gr_${t}`,
                alwaysTranslate: this.alwaysTranslate,
                classButtonGroupDefault: this.isComponentSelect ? void 0 : this.classButtonGroupDefault,
                dataItem: i,
                disabled: this.disabled,
                isButtonGroup: this.isComponentSelect ? void 0 : this.isButtonGroup,
                isErrors: this.isComponentSelect ? void 0 : this.isErrors,
                isHiddenWithSearch: r,
                isWidthAuto: this.isComponentSelect ? void 0 : this.isWidthAuto,
                itemIndex: o,
                keyDisabled: this.keyDisabled,
                keyDisabledCallback: this.keyDisabledCallback,
                keyTitle: this.keyTitle,
                keyTitleCallback: this.keyTitleCallback,
                modelSearch: this.modelSearch,
                modelValue: this.modelValue,
                searching: this.searching,
                searchingElements: this.searchingElements,
                showElementWennGroupFound: s,
                slotAppendName: this.slotAppendName,
                slotName: this.slotName,
                type: this.type,
                onChangeModelValue: this.onChangeModelValue
              }, this.$slots))
            ]),
            c(Ur("ACheckboxRadioGroups"), {
              id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}`,
              alwaysTranslate: this.alwaysTranslate,
              classButtonGroupDefault: this.classButtonGroupDefault,
              dataGrouped: this.dataGrouped,
              disabled: this.disabled,
              groupParentKey: e.groupKey,
              groupsForLever: this.groupsForLever,
              hasControlCheckbox: this.hasControlCheckbox,
              isButtonGroup: this.isButtonGroup,
              isErrors: this.isErrors,
              isHiddenWithSearch: r,
              isWidthAuto: this.isWidthAuto,
              keyDisabled: this.keyDisabled,
              keyDisabledCallback: this.keyDisabledCallback,
              keyTitle: this.keyTitle,
              keyTitleCallback: this.keyTitleCallback,
              levelIndex: this.levelIndex + 1,
              modelSearch: this.modelSearch,
              modelValue: this.modelValue,
              modelValueObj: this.modelValueObj,
              searching: this.searching,
              searchingElements: this.searchingElements,
              searchingGroups: this.searchingGroups,
              searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
              slotName: this.slotName,
              slotAppendName: this.slotAppendName,
              type: this.type,
              onChangeModelValue: this.onChangeModelValue
            }, this.$slots)
          ])
        ]);
      })
    ] : null;
  }
};
function KT(e) {
  const t = d(e, "align"), n = d(e, "size"), r = d(e, "textAlign"), s = _(() => `a_text_${t.value}`), i = _(() => r.value === "left" ? "a_cloak__box_text_left" : "a_cloak__box_text_right"), o = _(() => `a_fs_${n.value}`);
  return {
    classAlign: s,
    classForBox: i,
    classTextSize: o
  };
}
const Oa = B({
  propsDefault: {
    align: "center",
    extra: void 0,
    size: 6,
    tag: "div",
    text: "_A_CLOAK_LOADING_",
    textAlign: "right"
  }
}), ude = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Oa.value.propsDefault = {
      ...Oa.value.propsDefault,
      ...t
    };
  }
}, qn = B({
  propsDefault: {
    ariaLabel: "_A_SPINNER_LOADING_",
    class: "a_spinner",
    extra: void 0,
    safeHtml: "",
    size: void 0,
    tag: "span"
  }
}), _de = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    qn.value.propsDefault = {
      ...qn.value.propsDefault,
      ...t
    };
  }
}, dl = {
  name: "ACloak",
  props: {
    align: {
      type: String,
      required: !1,
      default: () => Oa.value.propsDefault.align,
      validator: (e) => ["left", "center", "right"].indexOf(e) !== -1
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: Oa.value.propsDefault.extra
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => Oa.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    spinnerClass: {
      type: [String, Object],
      required: !1,
      default: () => qn.value.propsDefault.class
    },
    spinnerSafeHtml: {
      type: String,
      required: !1,
      default: () => qn.value.propsDefault.safeHtml
    },
    spinnerTag: {
      type: String,
      required: !1,
      default: () => qn.value.propsDefault.tag
    },
    tag: {
      type: String,
      required: !1,
      default: () => Oa.value.propsDefault.tag
    },
    text: {
      type: String,
      required: !1,
      default: () => Oa.value.propsDefault.text
    },
    textAlign: {
      type: String,
      required: !1,
      default: () => Oa.value.propsDefault.textAlign,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    }
  },
  setup(e) {
    const {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    } = KT(e);
    return {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    };
  },
  render() {
    const e = this.textAlign === "left", t = c(Ae, {
      alwaysTranslate: this.alwaysTranslate,
      tag: "span",
      class: [
        "a_cloak__text",
        e ? "a_cloak__text_left" : "a_cloak__text_right",
        this.classTextSize
      ],
      text: this.text,
      extra: this.extra
    });
    return c(
      this.tag,
      {
        role: "status",
        class: this.classAlign
      },
      [
        c("div", {
          class: ["a_cloak__box", this.classForBox]
        }, [
          e ? t : "",
          c(hl, {
            alwaysTranslate: this.alwaysTranslate,
            class: [
              "a_cloak__spinner",
              this.spinnerClass
            ],
            "aria-hidden": "true",
            safeHtml: this.spinnerSafeHtml,
            size: this.size,
            tag: this.spinnerTag
          }),
          e ? "" : t
        ])
      ]
    );
  }
}, Rl = {
  props: {
    id: {
      type: String,
      required: !0
    }
  },
  computed: {
    idForHeader() {
      return `${this.id}_header`;
    },
    nameForEventBusDestroyKeyDownEvent() {
      return `${this.id}DestroyKeyDown`;
    },
    attributesForMainElement() {
      return this.idForFocus ? {
        "aria-activedescendant": this.idForFocus
      } : {};
    }
  },
  created() {
    this.setEventBus();
  },
  beforeUnmount() {
    this.destroyEventBus(), this.destroyListenerForPressButtons();
  },
  methods: {
    setEventBus() {
      Ct.$on(this.nameForEventBusDestroyKeyDownEvent, this.destroyListenerForPressButtons);
    },
    emitEventBusDestroyAllListenerForPressButtonsForPanels() {
      Ct.$emit(this.nameForEventBusDestroyKeyDownEvent);
    },
    destroyEventBus() {
      Ct.$off(this.nameForEventBusDestroyKeyDownEvent, this.destroyListenerForPressButtons);
    },
    setListenerForPressButtons() {
      document.addEventListener("keydown", this.pressButton);
    },
    destroyListenerForPressButtons() {
      document.removeEventListener("keydown", this.pressButton), this.destroyListenerForPressButtonsCallback();
    },
    stopCurrentEvent(e) {
      e.preventDefault(), e.stopPropagation();
    },
    setFocusToElementWithTimeout(e) {
      setTimeout(() => {
        const t = document.getElementById(e);
        t && t.focus();
      });
    },
    destroyListenerForPressButtonsCallback() {
    }
  }
};
function ru(e) {
  return Object.prototype.toString.call(e) === "[object Object]";
}
function $d(e) {
  return e instanceof Date;
}
function Lr(e) {
  return e == null ? !1 : !isNaN(new Date(e).getTime());
}
function e0(e) {
  return Array.isArray(e) && e.length === 2 && Lr(e[0]) && Lr(e[1]) && new Date(e[1]).getTime() >= new Date(e[0]).getTime();
}
function au(e, t) {
  if (!e)
    return "";
  try {
    return Fn(e).format(t);
  } catch {
    return "";
  }
}
function BE(e, t, n) {
  try {
    return Fn(e, n).format(t) || null;
  } catch {
    return null;
  }
}
const wE = {
  name: "APanelDate",
  mixins: [
    Rl
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    startAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    endAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    dateFormat: {
      type: String,
      default: "YYYY-MM-DD"
    },
    calendarMonth: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getMonth()
    },
    calendarYear: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getFullYear()
    },
    firstDayOfWeek: {
      default: 7,
      type: Number,
      validator: (e) => e >= 1 && e <= 7
    },
    disabledDate: {
      type: Function,
      default: () => !1
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "handleIconMonth",
    "select"
  ],
  data() {
    return {
      dayForFocusButton: void 0
    };
  },
  computed: {
    ths() {
      return this.getDays(this.firstDayOfWeek);
    },
    dates() {
      return this.getDates(this.calendarYear, this.calendarMonth, this.firstDayOfWeek);
    },
    trsWithTds() {
      const e = [];
      for (let t = 0; t < 6; t++) {
        const n = [];
        this.dates.slice(7 * t, 7 * t + 7).forEach((r) => {
          const s = this.isCurrentDayToday(r), i = this.getCellTime(r), o = this.disabledDate(i);
          n.push({
            class: this.getCellClasses({
              cellTime: i,
              isToday: s,
              month: r.month
            }),
            id: this.getId({
              month: r.month,
              day: r.day
            }),
            year: r.year,
            month: r.month,
            fullDate: this.getCellTitle(r),
            date: r,
            label: r.day,
            isToday: s,
            isDisabled: o,
            isCurrentMonth: r.month === this.calendarMonth
          });
        }), e.push(n);
      }
      return e;
    },
    dayFromValueOrToday() {
      return this.dayFromValue || (/* @__PURE__ */ new Date()).getDate();
    },
    dayFromValue() {
      return this.value ? new Date(this.value).getDate() : "";
    },
    idForFocus() {
      return this.dayForFocusButton ? `${this.id}_${this.dayForFocusButton}` : "";
    },
    daysInMonth() {
      return Fn(`${this.calendarYear}_${this.calendarMonth + 1}`, "YYYY-MM").daysInMonth();
    },
    todayTranslate() {
      return this.currentLanguage.today;
    }
  },
  methods: {
    selectDate(e, { year: t, month: n, day: r }) {
      e.stopPropagation();
      const s = new Date(t, n, r);
      this.disabledDate(s) || this.$emit("select", s);
    },
    getDays(e) {
      const t = this.currentLanguage.days, n = parseInt(e, 10);
      return t.concat(t).slice(n, n + 7);
    },
    getDates(e, t, n) {
      const r = [], s = new Date(e, t);
      s.setDate(0);
      const i = (s.getDay() + 7 - n) % 7 + 1, o = s.getDate() - (i - 1);
      for (let A = 0; A < i; A++)
        r.push({ year: e, month: t - 1, day: o + A });
      s.setMonth(s.getMonth() + 2, 0);
      const u = s.getDate();
      for (let A = 0; A < u; A++)
        r.push({ year: e, month: t, day: 1 + A });
      s.setMonth(s.getMonth() + 1, 1);
      const h = 42 - (i + u);
      for (let A = 0; A < h; A++)
        r.push({ year: e, month: t + 1, day: 1 + A });
      return r;
    },
    isCurrentDayToday({ year: e, month: t, day: n }) {
      const r = this.getCellTime({ year: e, month: t, day: n }), s = (/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0);
      return r === s;
    },
    getCellClasses({ cellTime: e, isToday: t, month: n }) {
      const r = [], s = this.value && new Date(this.value).setHours(0, 0, 0, 0), i = this.startAt && new Date(this.startAt).setHours(0, 0, 0, 0), o = this.endAt && new Date(this.endAt).setHours(0, 0, 0, 0);
      return n < this.calendarMonth ? r.push("last-month") : n > this.calendarMonth ? r.push("next-month") : r.push("cur-month"), t && r.push("today"), this.disabledDate(e) && r.push("disabled"), s && (e === s ? r.push("actived") : (i && e <= s || o && e >= s) && r.push("inrange")), r.join(" ");
    },
    getCellTime({ year: e, month: t, day: n }) {
      return new Date(e, t, n).getTime();
    },
    getCellTitle({ year: e, month: t, day: n }) {
      return au(new Date(e, t, n), this.dateFormat);
    },
    getId({ month: e, day: t }) {
      let n = `${this.id}_${t}`;
      return e < this.calendarMonth ? n += "_last_month" : e > this.calendarMonth && (n += "_next_month"), n;
    },
    setFocusToActiveDay() {
      setTimeout(() => {
        this.setDefaultDayForFocusButton(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultDayForFocusButton() {
      this.dayForFocusButton = this.dayFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === X.arrowUp ? (this.setFocusToPast(7), this.stopCurrentEvent(e)) : t === X.arrowDown ? (this.setFocusToFuture(7), this.stopCurrentEvent(e)) : t === X.arrowLeft ? (this.setFocusToPast(1), this.stopCurrentEvent(e)) : t === X.arrowRight && (this.setFocusToFuture(1), this.stopCurrentEvent(e));
    },
    setFocusToPast(e) {
      const t = this.dayForFocusButton - e;
      t > 0 ? this.dayForFocusButton = t : (this.$emit("handleIconMonth", -1), setTimeout(() => {
        this.dayForFocusButton = this.daysInMonth - Math.abs(t);
      })), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToFuture(e) {
      const t = this.dayForFocusButton + e;
      if (t <= this.daysInMonth)
        this.dayForFocusButton = t;
      else {
        const n = this.daysInMonth;
        this.$emit("handleIconMonth", 1), this.dayForFocusButton = t - n;
      }
      this.setFocusToElementWithTimeout(this.idForFocus);
    },
    destroyListenerForPressButtonsCallback() {
      this.dayForFocusButton = void 0;
    }
  },
  render() {
    return c("table", {
      class: "pux_datepicker__panel pux_datepicker__panel_date",
      role: "grid",
      ariaReadonly: !0,
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      c("thead", null, [
        c("tr", null, [
          this.ths.map((e, t) => c("th", {
            key: t,
            ariaLabel: e.longName
          }, e.shortName))
        ])
      ]),
      c("tbody", null, [
        this.trsWithTds.map((e, t) => c("tr", {
          key: t
        }, [
          e.map((n, r) => c("td", {
            key: r,
            class: ["cell", n.class, {
              pux_datepicker__panel__cell_focus: n.id === this.idForFocus
            }]
          }, [
            c("button", {
              id: n.id,
              class: "pux_datepicker__panel__button",
              type: "button",
              tabindex: -1,
              ariaHidden: !0,
              ariaSelected: !!(n.isCurrentMonth && n.label === this.dayFromValue),
              onClick: (s) => this.selectDate(s, n.date)
            }, [
              c("span", {
                ariaHidden: !0
              }, n.label),
              c("span", {
                class: "a_sr_only"
              }, n.fullDate),
              n.isToday && c("span", {
                class: "a_sr_only"
              }, this.todayTranslate)
            ])
          ]))
        ]))
      ])
    ]);
  }
}, PE = {
  name: "APanelMonth",
  mixins: [
    Rl
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    calendarYear: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getFullYear(),
      required: !1
    },
    disabledMonth: {
      type: Function,
      required: !1,
      default: void 0
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "handleIconYear",
    "select"
  ],
  data() {
    return {
      monthIndexForFocus: void 0
    };
  },
  computed: {
    currentYear() {
      return this.value && new Date(this.value).getFullYear();
    },
    currentMonth() {
      return this.value && new Date(this.value).getMonth();
    },
    monthsTranslate() {
      return this.currentLanguage.months;
    },
    months() {
      const e = [];
      return this.monthsTranslate.forEach((t, n) => {
        e.push({
          isActive: this.currentYear === this.calendarYear && this.currentMonth === n,
          isDisabled: this.isDisabled(n),
          label: t,
          id: this.getIdForMonth(n)
        });
      }), e;
    },
    idForFocus() {
      return Ce(this.monthIndexForFocus) ? "" : this.getIdForMonth(this.monthIndexForFocus);
    },
    monthFromValueOrToday() {
      return this.monthFromValue || (/* @__PURE__ */ new Date()).getMonth();
    },
    monthFromValue() {
      return this.value ? new Date(this.value).getMonth() : "";
    }
  },
  methods: {
    isDisabled(e) {
      return !!(typeof this.disabledMonth == "function" && this.disabledMonth(e));
    },
    selectMonth(e, t, n) {
      e.stopPropagation(), e.preventDefault(), !this.isDisabled(t) && this.$emit("select", { month: t, isButtonClick: n });
    },
    getIdForMonth(e) {
      return `${this.id}_month_${e}`;
    },
    setFocusToActiveMonth() {
      setTimeout(() => {
        this.setDefaultMonthForFocus(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultMonthForFocus() {
      this.monthIndexForFocus = this.monthFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === X.arrowUp || t === X.arrowLeft ? (this.setFocusToLastMonth(), this.stopCurrentEvent(e)) : (t === X.arrowDown || t === X.arrowRight) && (this.setFocusToNextMonth(), this.stopCurrentEvent(e));
    },
    setFocusToLastMonth() {
      const e = this.monthIndexForFocus - 1;
      e >= 0 ? this.monthIndexForFocus = e : (this.$emit("handleIconYear", -1), this.monthIndexForFocus = 11), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToNextMonth() {
      const e = this.monthIndexForFocus + 1;
      e <= 11 ? this.monthIndexForFocus = e : (this.$emit("handleIconYear", 1), this.monthIndexForFocus = 0), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    keypress(e, t) {
      (e.keyCode === X.enter || e.keyCode === X.space) && this.selectMonth(e, t);
    }
  },
  render() {
    return c("ul", {
      class: "pux_datepicker__panel pux_datepicker__panel_month pux_datepicker__panel__list",
      role: "listbox",
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      this.months.map((e, t) => c("li", {
        id: e.id,
        key: e.id,
        class: ["cell", {
          actived: e.isActive,
          disabled: e.isDisabled,
          pux_datepicker__panel__cell_focus: t === this.monthIndexForFocus
        }],
        role: "option",
        ariaSelected: !!e.isActive,
        tabindex: -1,
        onClick: (n) => this.selectMonth(n, t),
        onKeypress: (n) => this.keypress(n, t)
      }, e.label))
    ]);
  }
}, xE = {
  name: "APanelTime",
  mixins: [
    Rl
  ],
  props: {
    minuteStep: {
      type: Number,
      default: 0,
      validator: (e) => e >= 0 && e <= 60
    },
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: void 0
    },
    timeType: {
      type: Array,
      default() {
        return ["24", "a"];
      }
    },
    disabledTime: {
      type: Function,
      required: !1,
      default: void 0
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "select"
  ],
  data() {
    return {
      timeIndexForFocus: void 0,
      columnIndexForFocus: void 0
    };
  },
  computed: {
    currentHours() {
      return this.value ? new Date(this.value).getHours() : 0;
    },
    currentMinutes() {
      return this.value ? new Date(this.value).getMinutes() : 0;
    },
    currentSeconds() {
      return this.value ? new Date(this.value).getSeconds() : 0;
    },
    date() {
      return this.value ? new Date(this.value) : (/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0);
    },
    isDisabledTimeFunction() {
      return typeof this.disabledTime == "function";
    },
    timesFiltered() {
      const e = [];
      let t = 0;
      const n = this.setColumn({
        times: this.hours,
        timeFunctionName: "setHours",
        currentTime: this.currentHours,
        ariaLabel: this.currentLanguage.hours,
        columnIndex: t
      });
      n.length && (e.push(n), t++);
      const r = this.setColumn({
        times: this.minutes,
        timeFunctionName: "setMinutes",
        currentTime: this.currentMinutes,
        ariaLabel: this.currentLanguage.minutes,
        columnIndex: t
      });
      r.length && (e.push(r), t++);
      const s = this.setColumn({
        times: this.seconds,
        timeFunctionName: "setSeconds",
        currentTime: this.currentSeconds,
        ariaLabel: this.currentLanguage.seconds,
        columnIndex: t
      });
      return s.length && e.push(s), e;
    },
    minuteStepLocal() {
      return this.minuteStep || 1;
    },
    minuteLength() {
      return parseInt(60 / this.minuteStepLocal);
    },
    hours() {
      return Array.apply(null, { length: 24 }).map((e, t) => t);
    },
    minutes() {
      return Array.apply(null, { length: this.minuteLength }).map(
        (e, t) => t * this.minuteStepLocal
      );
    },
    seconds() {
      return this.minuteStep === 0 ? Array.apply(null, { length: 60 }).map((e, t) => t) : [];
    },
    idForFocus() {
      return this.getCurrentId({
        columnIndex: this.columnIndexForFocus,
        rowIndex: this.timeIndexForFocus
      });
    },
    fullIndexForFocus() {
      return `${this.columnIndexForFocus}_${this.timeIndexForFocus}`;
    }
  },
  methods: {
    stringifyText(e) {
      return ("00" + e).slice(String(e).length);
    },
    selectTime(e, t) {
      typeof this.disabledTime == "function" && this.disabledTime(e) || this.$emit("select", new Date(e), t);
    },
    setColumn({ times: e, timeFunctionName: t, currentTime: n, ariaLabel: r, columnIndex: s }) {
      const i = [];
      return e.forEach((o, u) => {
        const h = new Date(this.date)[t](o), A = o === n, E = this.isDisabledTimeFunction && this.disabledTime(h), p = this.stringifyText(o);
        i.push({
          label: p,
          time: h,
          isActive: A,
          isDisabled: E,
          ariaLabel: `${r}: ${p}`,
          id: this.getCurrentId({
            columnIndex: s,
            rowIndex: u
          })
        });
      }), i;
    },
    getCurrentId({ columnIndex: e, rowIndex: t }) {
      return `${this.id}_time_${e}_${t}`;
    },
    setFocusToActiveTime() {
      setTimeout(() => {
        this.setDefaultTimeForFocus(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultTimeForFocus() {
      this.timeIndexForFocus = 0, this.columnIndexForFocus = 0;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === X.arrowUp ? (this.setFocusToLastTime(), this.stopCurrentEvent(e)) : t === X.arrowDown ? (this.setFocusToNextTime(), this.stopCurrentEvent(e)) : t === X.arrowLeft ? (this.setFocusToLastTimeColumn(), this.stopCurrentEvent(e)) : t === X.arrowRight && (this.setFocusToNextTimeColumn(), this.stopCurrentEvent(e));
    },
    setFocusToLastTime() {
      const e = this.timesFiltered[this.columnIndexForFocus];
      this.timeIndexForFocus > 0 ? this.timeIndexForFocus-- : this.timeIndexForFocus = e.length - 1, this.setFocusToElement(this.idForFocus);
    },
    setFocusToNextTime() {
      const e = this.timesFiltered[this.columnIndexForFocus];
      this.timeIndexForFocus < e.length - 1 ? this.timeIndexForFocus++ : this.timeIndexForFocus = 0, this.setFocusToElement(this.idForFocus);
    },
    setFocusToLastTimeColumn() {
      this.columnIndexForFocus > 0 ? this.columnIndexForFocus-- : this.columnIndexForFocus = this.timesFiltered.length - 1, this.timeIndexForFocus = 0, this.setFocusToElement(this.idForFocus);
    },
    setFocusToNextTimeColumn() {
      this.columnIndexForFocus < this.timesFiltered.length - 1 ? this.columnIndexForFocus++ : this.columnIndexForFocus = 0, this.timeIndexForFocus = 0, this.setFocusToElement(this.idForFocus);
    },
    setFocusToElement(e) {
      const t = document.getElementById(e);
      t && t.focus();
    },
    keypress(e, t, n) {
      (e.keyCode === X.enter || e.keyCode === X.space) && (this.selectTime(t, n), e.stopPropagation(), e.preventDefault());
    }
  },
  render() {
    return c("div", {
      class: "pux_datepicker__panel pux_datepicker__panel_time"
    }, [
      this.timesFiltered.map((e, t) => c("ul", {
        key: t,
        class: "pux_datepicker__time_list",
        role: "listbox",
        "aria-labelledby": this.idForHeader,
        style: { width: `${100 / this.timesFiltered.length}%` }
      }, [
        e.map((n, r) => c("li", {
          id: n.id,
          key: r,
          class: ["cell", {
            actived: n.isActive,
            disabled: n.isDisabled,
            pux_datepicker__panel__cell_focus: t + "_" + r === this.fullIndexForFocus
          }],
          tabindex: -1,
          role: "option",
          ariaSelected: !!n.isActive,
          ariaLabel: n.ariaLabel,
          onClick: () => this.selectTime(n.time),
          onKeypress: (s) => this.keypress(s, n.time, t === this.timesFiltered.length - 1)
        }, n.label))
      ]))
    ]);
  }
}, t0 = {
  name: "APanelYearItem",
  props: {
    prefixForId: {
      type: String,
      required: !0
    },
    year: {
      type: Number,
      required: !0
    },
    yearFromValue: {
      type: Number,
      required: !1,
      default: void 0
    },
    yearIndex: {
      type: Number,
      required: !0
    },
    isDisabled: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "selectYear"
  ],
  computed: {
    isDisabledLocal() {
      return this.isDisabled(this.year);
    },
    isYearActive() {
      return this.yearFromValue === this.year;
    },
    idForList() {
      return `${this.prefixForId}${this.yearIndex}`;
    },
    ariaSelected() {
      return `${this.isYearActive}`;
    }
  },
  methods: {
    selectYearLocal(e, t) {
      e.stopPropagation(), e.preventDefault(), !this.isDisabledLocal && this.$emit("selectYear", { year: this.year, isButtonClick: t });
    },
    keypress(e) {
      (e.keyCode === X.enter || e.keyCode === X.space) && this.selectYearLocal(e, !0);
    }
  },
  render() {
    return c("li", {
      id: this.idForList,
      class: ["cell", {
        actived: this.isYearActive,
        disabled: this.isDisabledLocal
      }],
      role: "option",
      tabindex: -1,
      "aria-selected": this.ariaSelected,
      onClick: this.selectYearLocal,
      onKeypress: this.keypress
    }, this.year);
  }
}, FE = {
  name: "APanelYear",
  mixins: [
    Rl
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    firstYear: {
      type: Number,
      required: !0
    },
    disabledYear: {
      type: Function,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "handleIconYear",
    "select"
  ],
  data() {
    return {
      yearIndexForFocus: void 0
    };
  },
  computed: {
    firstYearLocal() {
      return Math.floor(this.firstYear / 10) * 10;
    },
    yearFromValue() {
      return this.value && new Date(this.value).getFullYear();
    },
    idForFocus() {
      return Ce(this.yearIndexForFocus) ? "" : this.getIdForYear(this.yearIndexForFocus);
    },
    yearIndexFromValueOrToday() {
      const e = this.yearFromValueOrToday - this.firstYearLocal;
      return e <= 9 && e >= 0 ? e : 0;
    },
    yearFromValueOrToday() {
      return this.yearFromValue || (/* @__PURE__ */ new Date()).getFullYear();
    },
    prefixForId() {
      return `${this.id}_year_`;
    }
  },
  methods: {
    isDisabled(e) {
      return !!(typeof this.disabledYear == "function" && this.disabledYear(e));
    },
    selectYear({ year: e, isButtonClick: t }) {
      this.isDisabled(e) || this.$emit("select", { year: e, isButtonClick: t });
    },
    getIdForYear(e) {
      return `${this.prefixForId}${e}`;
    },
    setFocusToActiveYear() {
      setTimeout(() => {
        this.setDefaultYearForFocus(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultYearForFocus() {
      this.yearIndexForFocus = this.yearIndexFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === X.arrowUp || t === X.arrowLeft ? (this.setFocusToLastYear(), this.stopCurrentEvent(e)) : (t === X.arrowDown || t === X.arrowRight) && (this.setFocusToNextYear(), this.stopCurrentEvent(e));
    },
    setFocusToLastYear() {
      const e = this.yearIndexForFocus - 1;
      e >= 0 && e <= 9 ? this.yearIndexForFocus = e : (this.$emit("handleIconYear", -1), this.yearIndexForFocus = 9), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToNextYear() {
      const e = this.yearIndexForFocus + 1;
      e <= 9 && e >= 0 ? this.yearIndexForFocus = e : (this.$emit("handleIconYear", 1), this.yearIndexForFocus = 0), this.setFocusToElementWithTimeout(this.idForFocus);
    }
  },
  render() {
    return c("ul", {
      class: "pux_datepicker__panel pux_datepicker__panel_year pux_datepicker__panel__list",
      role: "listbox",
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      tP(10).map((e) => c(t0, {
        key: e,
        class: {
          pux_datepicker__panel__cell_focus: e === this.yearIndexForFocus
        },
        year: this.firstYearLocal + e,
        yearFromValue: this.yearFromValue,
        yearIndex: e,
        prefixForId: this.prefixForId,
        isDisabled: this.isDisabled,
        onSelectYear: this.selectYear
      }))
    ]);
  }
};
function n0(e, t) {
  if (!t) {
    e.scrollTop = 0;
    return;
  }
  const n = [];
  let r = t.offsetParent;
  for (; r && e !== r && e.contains(r); )
    n.push(r), r = r.offsetParent;
  const s = t.offsetTop + n.reduce((h, A) => h + A.offsetTop, 0), i = s + t.offsetHeight, o = e.scrollTop, u = o + e.clientHeight;
  s < o ? e.scrollTop = s : i > u && (e.scrollTop = i - e.clientHeight);
}
const _d = {
  name: "ADatepickerCalendarPanel",
  components: {
    APanelDate: wE,
    APanelMonth: PE,
    APanelTime: xE,
    APanelYear: FE
  },
  mixins: [
    Rl
  ],
  props: {
    id: {
      type: String,
      required: !0
    },
    value: {
      default: null,
      validator: function(e) {
        return e === null || Lr(e);
      }
    },
    startAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    endAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    visible: {
      type: Boolean,
      default: !1
    },
    type: {
      type: String,
      default: "date"
      // ["date", "datetime"]
    },
    dateFormat: {
      type: String,
      default: "YYYY-MM-DD"
    },
    index: {
      type: Number,
      default: void 0
    },
    defaultValue: {
      validator: function(e) {
        return Lr(e);
      },
      default: void 0
    },
    firstDayOfWeek: {
      default: 1,
      type: Number,
      validator: (e) => e >= 1 && e <= 7
    },
    notBefore: {
      default: null,
      validator: function(e) {
        return !e || Lr(e);
      }
    },
    notAfter: {
      default: null,
      validator: function(e) {
        return !e || Lr(e);
      }
    },
    disabledDays: {
      type: [Array, Function],
      default: function() {
        return [];
      }
    },
    minuteStep: {
      type: Number,
      default: 0,
      validator: (e) => e >= 0 && e <= 60
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "closePopup",
    "selectDate",
    "selectTime"
  ],
  data() {
    const e = this.getNow(this.value), t = e.getFullYear(), n = e.getMonth(), r = Math.floor(t / 10) * 10;
    return {
      panel: "NONE",
      dates: [],
      calendarMonth: n,
      calendarYear: t,
      firstYear: r,
      isFocusPanelChild: !1,
      isWorkWithKeyboard: !1
    };
  },
  computed: {
    now: {
      get() {
        return new Date(this.calendarYear, this.calendarMonth).getTime();
      },
      set(e) {
        const t = new Date(e);
        this.calendarYear = t.getFullYear(), this.calendarMonth = t.getMonth();
      }
    },
    timeType() {
      const e = /h+/.test(this.$parent.format) ? "12" : "24", t = /A/.test(this.$parent.format) ? "A" : "a";
      return [e, t];
    },
    timeHeader() {
      return this.type === "time" ? this.$parent.format : this.value && au(this.value, this.dateFormat);
    },
    yearHeader() {
      const e = this.firstYear + 9;
      return this.currentLanguage.headerYears(this.firstYear, e);
    },
    months() {
      return this.currentLanguage.months;
    },
    notBeforeTime() {
      return this.getCriticalTime(this.notBefore);
    },
    notAfterTime() {
      return this.getCriticalTime(this.notAfter);
    },
    suffixForHeader() {
      return this.panel === "TIME" ? this.currentLanguage.placeholder.regionTime : this.currentLanguage.placeholder.regionDate;
    },
    idForHeaderParent() {
      return `${this.idForHeader}_parent`;
    },
    ariaLabelForButtonLastYear() {
      return this.panel === "YEAR" ? this.currentLanguage.buttons.lastYears : this.currentLanguage.buttons.lastYear;
    },
    ariaLabelForButtonLastMonth() {
      return this.currentLanguage.buttons.lastMonth;
    },
    ariaLabelForButtonNextMonth() {
      return this.currentLanguage.buttons.nextMonth;
    },
    ariaLabelForButtonNextYear() {
      return this.panel === "YEAR" ? this.currentLanguage.buttons.nextYears : this.currentLanguage.buttons.nextYear;
    },
    ariaLabelForButtonCurrentMonth() {
      return this.currentLanguage.buttons.toMonthsView;
    },
    ariaLabelForButtonCurrentYear() {
      return this.currentLanguage.buttons.toYearsView;
    },
    ariaLabelForButtonToDays() {
      return this.currentLanguage.buttons.toDaysView;
    }
  },
  watch: {
    value: {
      immediate: !0,
      handler: "updateNow"
    },
    defaultValue: {
      handler: "updateNow"
    },
    visible: {
      immediate: !0,
      handler: "init"
    },
    panel: {
      handler: "handelPanelChange"
    }
  },
  beforeUnmount() {
    this.destroyListenerForPressTabButton(), this.destroyListenerForPressEscapeButton();
  },
  methods: {
    handelPanelChange(e) {
      e === "YEAR" ? this.firstYear = Math.floor(this.calendarYear / 10) * 10 : e === "TIME" && this.$nextTick().then(() => {
        const t = this.$el.querySelectorAll(".pux_datepicker__panel_time .pux_datepicker__time_list");
        for (let n = 0, r = t.length; n < r; n++) {
          const s = t[n];
          n0(s, s.querySelector(".actived"));
        }
      });
    },
    init(e) {
      if (e) {
        const t = this.type;
        t === "month" ? this.showPanelMonth() : t === "year" ? this.showPanelYear() : t === "time" ? this.showPanelTime() : this.showPanelDate(), this.setListenerForPressEscapeButton();
      } else
        this.showPanelNone(), this.updateNow(this.value), this.destroyListenerForPressEscapeButton();
      this.emitEventBusDestroyAllListenerForPressButtonsForPanels();
    },
    getNow(e) {
      return e ? new Date(e) : this.defaultValue && Lr(this.defaultValue) ? new Date(this.defaultValue) : /* @__PURE__ */ new Date();
    },
    updateNow(e) {
      this.now = this.getNow(e);
    },
    getCriticalTime(e) {
      if (!e)
        return null;
      const t = new Date(e);
      return this.type === "year" ? new Date(t.getFullYear(), 0).getTime() : this.type === "month" ? new Date(t.getFullYear(), t.getMonth()).getTime() : this.type === "date" ? t.setHours(0, 0, 0, 0) : t.getTime();
    },
    inBefore(e, t) {
      return t === void 0 && (t = this.startAt), this.notBeforeTime && e < this.notBeforeTime || t && e < this.getCriticalTime(t);
    },
    inAfter(e, t) {
      return t === void 0 && (t = this.endAt), this.notAfterTime && e > this.notAfterTime || t && e > this.getCriticalTime(t);
    },
    inDisabledDays(e) {
      return Array.isArray(this.disabledDays) ? this.disabledDays.some((t) => this.getCriticalTime(t) === e) : typeof this.disabledDays == "function" ? this.disabledDays(new Date(e)) : !1;
    },
    isDisabledYear(e) {
      const t = new Date(e, 0).getTime(), n = new Date(e + 1, 0).getTime() - 1;
      return this.inBefore(n) || this.inAfter(t) || this.type === "year" && this.inDisabledDays(t);
    },
    isDisabledMonth(e) {
      const t = new Date(this.calendarYear, e).getTime(), n = new Date(this.calendarYear, e + 1).getTime() - 1;
      return this.inBefore(n) || this.inAfter(t) || this.type === "month" && this.inDisabledDays(t);
    },
    isDisabledDate(e) {
      const t = new Date(e).getTime(), n = new Date(e).setHours(23, 59, 59, 999);
      return this.inBefore(n) || this.inAfter(t) || this.inDisabledDays(t);
    },
    isDisabledTime(e, t, n) {
      const r = new Date(e).getTime();
      return this.inBefore(r, t) || this.inAfter(r, n) || this.inDisabledDays(r);
    },
    selectDate(e) {
      if (this.type === "datetime") {
        let t = new Date(e);
        $d(this.value) && t.setHours(
          this.value.getHours(),
          this.value.getMinutes(),
          this.value.getSeconds()
        ), this.isDisabledTime(t) && (t.setHours(0, 0, 0, 0), this.notBefore && t.getTime() < new Date(this.notBefore).getTime() && (t = new Date(this.notBefore)), this.startAt && t.getTime() < new Date(this.startAt).getTime() && (t = new Date(this.startAt))), this.selectTime(t), this.showPanelTime();
        return;
      }
      this.$emit("selectDate", e);
    },
    selectYear({ year: e, isButtonClick: t }) {
      if (this.changeCalendarYear(e), this.type.toLowerCase() === "year")
        return this.selectDate(new Date(this.now));
      this.showPanelMonth(), t && this.setFocusToActivePanel();
    },
    selectMonth({ month: e, isButtonClick: t }) {
      if (this.changeCalendarMonth(e), this.type.toLowerCase() === "month")
        return this.selectDate(new Date(this.now));
      this.showPanelDate(), t && this.setFocusToActivePanel();
    },
    selectTime(e, t = !1) {
      this.$emit("selectTime", e, t);
    },
    changeCalendarYear(e) {
      this.updateNow(new Date(e, this.calendarMonth));
    },
    changeCalendarMonth(e) {
      this.updateNow(new Date(this.calendarYear, e));
    },
    getSibling() {
      const e = [
        this.$parent.$refs.calendarPanelRef
      ];
      this.$parent.$refs.calendarPanel2Ref && e.push(this.$parent.$refs.calendarPanel2Ref);
      const t = e.filter(
        (r) => r.$options.name === this.$options.name
      ), n = t.indexOf(this);
      return t[n ^ 1];
    },
    handleIconMonth(e) {
      const t = this.calendarMonth;
      this.changeCalendarMonth(t + e), this.$parent.$emit("changeCalendarMonth", {
        month: t,
        flag: e,
        vm: this,
        sibling: this.getSibling()
      });
    },
    handleIconYear(e) {
      if (this.panel === "YEAR")
        this.changePanelYears(e);
      else {
        const t = this.calendarYear;
        this.changeCalendarYear(t + e), this.$parent.$emit("changeCalendarYear", {
          year: t,
          flag: e,
          vm: this,
          sibling: this.getSibling()
        });
      }
    },
    handleBtnYear(e) {
      e.stopPropagation(), this.showPanelYear(), this.isWorkWithKeyboard && this.setFocusToActivePanel();
    },
    handleBtnMonth(e) {
      e.stopPropagation(), this.showPanelMonth(), this.isWorkWithKeyboard && this.setFocusToActivePanel();
    },
    handleTimeHeader(e) {
      e.stopPropagation(), this.type !== "time" && (this.showPanelDate(), this.isWorkWithKeyboard && this.setFocusToActivePanel());
    },
    changePanelYears(e) {
      this.firstYear = this.firstYear + e * 10;
    },
    showPanelNone() {
      this.panel = "NONE", this.isFocusPanelChild = !1, this.destroyListenerForPressTabButton(), this.emitEventBusDestroyAllListenerForPressButtonsForPanels(), this.setWorkWithoutKeyboard();
    },
    showPanelTime() {
      this.panel = "TIME";
    },
    showPanelDate() {
      this.panel = "DATE";
    },
    showPanelYear() {
      this.panel = "YEAR";
    },
    showPanelMonth() {
      this.panel = "MONTH";
    },
    setFocusToActivePanelFromParent() {
      this.setWorkWithKeyboard(), this.setFocusToActivePanel(), this.setListenerForPressTabButton();
    },
    setFocusToActivePanel() {
      this.isFocusPanelChild = !0, this.setFocusToActiveElementInChild();
    },
    removeFocusFromActivePanel() {
      this.isFocusPanelChild && (this.isFocusPanelChild = !1, this.emitEventBusDestroyAllListenerForPressButtonsForPanels());
    },
    setFocusToActiveElementInChild() {
      this.panel === "DATE" ? this.$refs.panelDate.setFocusToActiveDay() : this.panel === "TIME" ? this.$refs.panelTime.setFocusToActiveTime() : this.panel === "YEAR" ? this.$refs.panelYear.setFocusToActiveYear() : this.panel === "MONTH" && this.$refs.panelMonth.setFocusToActiveMonth();
    },
    setListenerForPressTabButton() {
      document.addEventListener("keydown", this.pressTabButton);
    },
    destroyListenerForPressTabButton() {
      document.removeEventListener("keydown", this.pressTabButton);
    },
    pressTabButton(e) {
      e.keyCode === X.tab && (this.trapFocus(e), this.stopCurrentEvent(e));
    },
    trapFocus(e) {
      const t = this.$el.querySelectorAll(".pux_datepicker__calendar__tab");
      if (t.length <= 1)
        return;
      let n = !1, r = !1;
      z(t, (s, i) => {
        if (document.activeElement === s)
          return e.shiftKey ? i === 0 ? (t[t.length - 1].focus(), r = !0) : t[i - 1].focus() : (i === t.length - 1 ? t[0].focus() : t[i + 1].focus(), i === t.length - 2 && (r = !0)), n = !0, !1;
      }), n || (e.shiftKey ? t[t.length - 2].focus() : t[0].focus()), r ? this.setFocusToActivePanel() : this.removeFocusFromActivePanel();
    },
    setWorkWithKeyboard() {
      this.isWorkWithKeyboard = !0;
    },
    setWorkWithoutKeyboard() {
      this.isWorkWithKeyboard = !1;
    },
    setListenerForPressEscapeButton() {
      document.addEventListener("keydown", this.pressEscapeButton);
    },
    destroyListenerForPressEscapeButton() {
      document.removeEventListener("keydown", this.pressEscapeButton);
    },
    pressEscapeButton(e) {
      e.keyCode === X.escape && this.$emit("closePopup", !0);
    }
  },
  render() {
    return c("div", {
      class: ["pux_datepicker__calendar", `pux_datepicker__calendar_${this.panel.toLowerCase()}`],
      role: "region",
      "aria-labelledby": this.idForHeaderParent,
      onClick: (e) => e.stopPropagation()
    }, [
      c("div", {
        id: this.idForHeaderParent,
        class: "a_sr_only",
        role: "header"
      }, [
        c("div", {
          id: this.idForHeader,
          "aria-live": "polite"
        }, [
          this.panel === "DATE" && c("span", null, this.months[this.calendarMonth]),
          (this.panel === "DATE" || this.panel === "MONTH") && c("span", null, this.calendarYear),
          this.panel === "YEAR" && c("span", null, this.yearHeader),
          this.panel === "TIME" && c("span", null, this.timeHeader)
        ]),
        c("div", null, this.suffixForHeader)
      ]),
      c("div", {
        class: "pux_datepicker__calendar__header"
      }, [
        c("div", null, [
          this.panel !== "TIME" && c("button", {
            class: "pux_datepicker__icon_last_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonLastYear,
            innerHTML: "&laquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconYear(-1);
            }
          }),
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__icon_last_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonLastMonth,
            innerHTML: "&lsaquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconMonth(-1);
            }
          })
        ]),
        c("div", null, [
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__current_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonCurrentMonth,
            onClick: this.handleBtnMonth
          }, this.months[this.calendarMonth]),
          (this.panel === "DATE" || this.panel === "MONTH") && c("button", {
            class: "pux_datepicker__current_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonCurrentYear,
            onClick: this.handleBtnYear
          }, this.calendarYear),
          this.panel === "YEAR" && c("span", {
            class: "pux_datepicker__current_year"
          }, this.yearHeader),
          this.panel === "TIME" && c("span", null, [
            this.type === "time" ? c("span", {
              class: "pux_datepicker__time_header"
            }, this.timeHeader) : c("button", {
              class: "pux_datepicker__time_header pux_datepicker__calendar__tab",
              type: "button",
              ariaLabel: this.ariaLabelForButtonToDays,
              onClick: this.handleTimeHeader
            }, this.timeHeader)
          ])
        ]),
        c("div", null, [
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__icon_next_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonNextMonth,
            innerHTML: "&rsaquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconMonth(1);
            }
          }),
          this.panel !== "TIME" && c("button", {
            class: "pux_datepicker__icon_next_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonNextYear,
            innerHTML: "&raquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconYear(1);
            }
          })
        ])
      ]),
      c("div", {
        class: "pux_datepicker__calendar__content",
        role: "application"
      }, [
        c(wE, {
          ref: "panelDate",
          id: this.id,
          style: this.panel !== "DATE" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "DATE"
          },
          tabindex: 0,
          value: this.value,
          dateFormat: this.dateFormat,
          calendarMonth: this.calendarMonth,
          calendarYear: this.calendarYear,
          startAt: this.startAt,
          endAt: this.endAt,
          firstDayOfWeek: this.firstDayOfWeek,
          disabledDate: this.isDisabledDate,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectDate,
          onHandleIconMonth: this.handleIconMonth
        }),
        c(FE, {
          ref: "panelYear",
          id: this.id,
          style: this.panel !== "YEAR" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "YEAR"
          },
          value: this.value,
          disabledYear: this.isDisabledYear,
          firstYear: this.firstYear,
          onSelect: this.selectYear,
          onHandleIconYear: this.handleIconYear
        }),
        c(PE, {
          ref: "panelMonth",
          id: this.id,
          style: this.panel !== "MONTH" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "MONTH"
          },
          value: this.value,
          disabledMonth: this.isDisabledMonth,
          calendarYear: this.calendarYear,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectMonth,
          onHandleIconYear: this.handleIconYear
        }),
        c(xE, {
          ref: "panelTime",
          id: this.id,
          style: this.panel !== "TIME" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "TIME"
          },
          minuteStep: this.minuteStep,
          value: this.value,
          disabledTime: this.isDisabledTime,
          timeType: this.timeType,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectTime
        })
      ])
    ]);
  }
}, r0 = {
  name: "ADatepickerIcon",
  computed: {
    svgHtml() {
      return `<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 200 200" class="a_datepicker__calendar_icon">
        <rect x="13" y="29" rx="14" ry="14" width="174" height="158" fill="transparent"></rect> 
        <line x1="46" x2="46" y1="8" y2="50"></line> <line x1="154" x2="154" y1="8" y2="50"></line> 
        <line x1="13" x2="187" y1="70" y2="70"></line> 
        <text x="50%" y="135" font-size="90" stroke-width="1" text-anchor="middle" dominant-baseline="middle">${this.todayInDayFormat}</text>
      </svg>`;
    },
    todayInDayFormat() {
      return (/* @__PURE__ */ new Date()).getDate();
    }
  },
  render() {
    return c("span", {
      ariaHidden: !0,
      innerHTML: this.svgHtml
    });
  }
};
function a0(e, {
  currentLanguage: t = _(() => ({})),
  popupVisible: n = B(!1)
}) {
  const r = d(e, "extra"), s = d(e, "id"), i = d(e, "placeholder"), o = d(e, "range"), u = d(e, "type"), h = d(e, "width"), A = _(() => it(i.value) ? xt({ placeholder: i.value, extra: r.value }) : o.value ? t.value.placeholder.dateRange : u.value === "time" ? t.value.placeholder.time : t.value.placeholder.date), E = _(() => `${s.value}_panel`), p = _(() => [
    `${E.value}_0`,
    `${E.value}_1`
  ]), T = _(() => `${!n.value}`), S = _(() => `${n.value}`), b = _(() => `${s.value}_calendar`), L = _(() => yn(h.value) || it(h.value) && /^\d+$/.test(h.value) ? h.value + "px" : h.value), v = _(() => String(u.value).toLowerCase());
  return {
    ariaExpandedForCalendar: S,
    ariaHiddenForCalendar: T,
    idForCalendar: b,
    idForPanel: E,
    idsForPanelRange: p,
    innerPlaceholder: A,
    innerType: v,
    widthLocal: L
  };
}
function s0(e, { emit: t }, {
  calendarPanelRef: n = B(void 0),
  changeModel: r = () => {
  },
  closePopover: s = () => {
  },
  setCloseFocus: i = () => {
  }
}) {
  const o = d(e, "range"), u = d(e, "confirm"), h = d(e, "disabled"), A = d(e, "modelValue"), E = d(e, "formatSave"), p = d(e, "editable"), T = d(e, "format"), S = d(e, "type"), b = B(null), L = B(null), v = () => {
    b.value = o.value ? [null, null] : null;
  }, I = (ne) => !!BE(ne, T.value, E.value), R = (ne) => {
    try {
      return Fn(ne, E.value).isValid() && Fn(ne, E.value).format(T.value) || "";
    } catch {
      return "";
    }
  }, g = (ne) => {
    try {
      return !!Fn(ne, E.value).isValid();
    } catch {
      return !1;
    }
  }, D = (ne) => ru(T.value) && typeof this.format.stringify == "function" ? T.value.stringify(ne) : au(ne, T.value), w = _(() => L.value !== null ? L.value : o.value ? "" : I(A.value) ? R(A.value) : ""), M = (ne, V) => $d(ne) && $d(V) && ne.getTime() === V.getTime(), P = (ne, V) => Array.isArray(ne) && Array.isArray(V) && ne.length === V.length && ne.every((Q, re) => M(Q, V[re])), F = (ne) => {
    const V = o.value ? "" : (
      // TODO: range this.currentValue.map(date2value)
      au(b.value, E.value)
    );
    r({
      model: V
    }), t(ne, V);
  }, C = (ne = !1) => u.value && !ne || h.value || (o.value ? P(A.value, b.value) : M(A.value, b.value)) ? !1 : (F("change"), !0), $ = (ne) => {
    ne && ne.stopPropagation();
    const V = o.value ? [null, null] : null;
    b.value = V, C(!0), t("clear");
  }, H = (ne) => {
    b.value = ne, C() && s(), i();
  }, j = (ne, V) => {
    b.value = ne, C() && V && s(), V && i();
  }, le = (ne) => {
    b.value[0] = ne, b.value[1] && C();
  }, ee = (ne) => {
    b.value[1] = ne, b.value[0] && C();
  }, _e = (ne) => {
    le(ne);
  }, ie = (ne) => {
    ee(ne);
  }, ue = (ne) => ru(T.value) && typeof T.value.parse == "function" ? T.value.parse(ne) : BE(ne, T.value, E.value), Te = (ne) => {
    try {
      return Fn(ne, T.value).isValid() && Fn(ne, T.value).format() || null;
    } catch {
      return null;
    }
  }, Pe = (ne) => {
    try {
      return Fn(ne, E.value).isValid() && Fn(ne, E.value).format() || null;
    } catch {
      return null;
    }
  }, Se = () => {
    if (p.value && L.value !== null) {
      let ne = w.value;
      const V = n.value.isDisabledTime;
      if (!ne) {
        $();
        return;
      }
      if (o.value)
        return;
      S.value === "time" && (ne = `${Fn().format("DD.MM.YYYY")} ${ne}`);
      const Q = Te(ne);
      if (Q && !V(Q, null, null)) {
        b.value = Q, C(!0), s();
        return;
      }
      t("inputError", ne);
    }
  }, se = () => {
    n.value.setFocusToActivePanelFromParent();
  };
  return {
    clearDate: $,
    confirmDate: () => {
      (o.value ? e0(b.value) : Lr(b.value)) && C(!0), F("confirm"), s();
    },
    currentValue: b,
    emitDate: F,
    handleChange: Se,
    handleInput: (ne) => {
      L.value = ne.target.value;
    },
    handleKeydown: (ne) => {
      const V = ne.keyCode;
      V === X.tab || V === X.enter ? (Se(), L.value = null, s()) : (V === X.arrowUp || V === X.arrowDown) && (se(), ne.stopPropagation(), ne.preventDefault());
    },
    initCurrentValue: v,
    onModelValueChange: (ne) => {
      o.value ? b.value = [null, null] : b.value = g(ne) ? Pe(ne) : null;
    },
    parse: ue,
    selectDate: H,
    selectEndDate: ee,
    selectEndTime: ie,
    selectStartDate: le,
    selectStartTime: _e,
    selectTime: j,
    stringify: D,
    text: w,
    updateDate: C,
    userInput: L
  };
}
const i0 = {
  en: {
    days: [
      {
        shortName: "Sun",
        longName: "Sunday"
      },
      {
        shortName: "Mon",
        longName: "Monday"
      },
      {
        shortName: "Tue",
        longName: "Tuesday"
      },
      {
        shortName: "Wed",
        longName: "Wednesday"
      },
      {
        shortName: "Thu",
        longName: "Thursday"
      },
      {
        shortName: "Fri",
        longName: "Friday"
      },
      {
        shortName: "Sat",
        longName: "Saturday"
      }
    ],
    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    pickers: ["next 7 days", "next 30 days", "previous 7 days", "previous 30 days"],
    placeholder: {
      date: "Enter date in format DD.MM.YYYY",
      time: "Enter time in format HH:MM",
      dateRange: "Select Date Range",
      regionDate: "Date picker",
      regionTime: "Time picker"
    },
    today: "today",
    buttons: {
      lastYear: "Last year",
      lastYears: "Last 10 years",
      nextYear: "Next year",
      nextYears: "Next 10 years",
      lastMonth: "Last month",
      nextMonth: "Next month",
      monthsView: "Show detailed month view",
      toDaysView: "Switch to the day selection",
      toMonthsView: "Switch to the month selection",
      toYearsView: "switch to the selection of the years"
    },
    hours: "Hours",
    minutes: "Minutes",
    seconds: "Seconds",
    headerYears: (e, t) => `${e} to ${t}`
  },
  ru: {
    days: [
      {
        shortName: "Вс",
        longName: "Воскресенье"
      },
      {
        shortName: "Пн",
        longName: "Понедельник"
      },
      {
        shortName: "Вт",
        longName: "Вторник"
      },
      {
        shortName: "Ср",
        longName: "Среда"
      },
      {
        shortName: "Чт",
        longName: "Четверг"
      },
      {
        shortName: "Пт",
        longName: "Пятница"
      },
      {
        shortName: "Сб",
        longName: "Суббота"
      }
    ],
    months: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
    pickers: ["след. 7 дней", "след. 30 дней", "прош. 7 дней", "прош. 30 дней"],
    placeholder: {
      date: "Введите дату в формате ДД.ММ.ГГГГ",
      time: "Enter время in format ЧЧ.ММ",
      dateRange: "Выберите период",
      regionDate: "Выбор даты",
      regionTime: "Выбор времени"
    },
    today: "Сегодня",
    buttons: {
      lastYear: "Предыдущий год",
      lastYears: "Предыдущие 10 лет",
      nextYear: "Следующий год",
      nextYears: "Следующие 10 лет",
      lastMonth: "Предыдущий месяц",
      nextMonth: "Следующий месяц",
      toDaysView: "Перейти к выбору дня",
      toMonthsView: "Перейти к выбору месяца",
      toYearsView: "Перейти к выбору года"
    },
    hours: "Часы",
    minutes: "Минуты",
    seconds: "Секунды",
    headerYears: (e, t) => `с ${e} по ${t}`
  },
  de: {
    days: [
      {
        shortName: "So",
        longName: "Sontag"
      },
      {
        shortName: "Mo",
        longName: "Montag"
      },
      {
        shortName: "Di",
        longName: "Dienstag"
      },
      {
        shortName: "Mi",
        longName: "Mittwoch"
      },
      {
        shortName: "Do",
        longName: "Donnerstag"
      },
      {
        shortName: "Fr",
        longName: "Freitag"
      },
      {
        shortName: "Sa",
        longName: "Samstag"
      }
    ],
    months: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
    pickers: ["nächste 7 Tage", "nächste 30 Tage", "vorige 7 Tage", "vorige 30 Tage"],
    placeholder: {
      date: "Datum im Format TT.MM.JJJJ eingeben",
      time: "Zeit im Format HH.MM eingeben",
      dateRange: "Zeitraum auswählen",
      regionDate: "Datumsauswahl",
      regionTime: "Zeitauswahl"
    },
    today: "Heute",
    buttons: {
      lastYear: "Voriges Jahr",
      lastYears: "Vorige 10 Jahre",
      nextYear: "Nächstes Jahr",
      nextYears: "Nächste 10 Jahre",
      lastMonth: "Voriger Monat",
      nextMonth: "Nächster Monat",
      toDaysView: "Zur Auswahl der Tage wechseln",
      toMonthsView: "Zur Auswahl der Monate wechseln",
      toYearsView: "Zur Auswahl der Jahre wechseln"
    },
    hours: "Stunden",
    minutes: "Minuten",
    seconds: "Sekunden",
    headerYears: (e, t) => `${e} bis ${t}`
  }
};
function l0(e) {
  const t = d(e, "languages"), n = d(e, "lang"), r = _(() => ({
    ...i0,
    ...t.value
  }));
  return {
    currentLanguage: _(() => r.value[n.value])
  };
}
function o0(e, {
  calendarRef: t = B(void 0),
  focusByCloseRef: n = B(void 0),
  inputRef: r = B(void 0)
}) {
  const s = d(e, "placement"), i = d(e, "disabled"), o = B(void 0), u = B(void 0), h = () => {
    document.addEventListener("click", L);
  }, A = () => {
    document.removeEventListener("click", L);
  }, E = () => {
    !o.value && !i.value && r.value && t.value && (o.value = Ll(
      r.value,
      t.value,
      () => {
        t.value && r.value && yl(
          r.value,
          t.value,
          {
            placement: s.value,
            middleware: [
              Il(),
              vl({ limiter: Ru() })
            ]
          }
        ).then(({ x: v, y: I }) => {
          Object.assign(t.value.style, {
            left: `${v}px`,
            top: `${I}px`
          });
        });
      }
    ), setTimeout(() => {
      h();
    }, 300));
  }, p = () => {
    n.value && n.value.focus && n.value.focus();
  }, T = () => {
    o.value && (o.value(), o.value = void 0);
  }, S = (v) => {
    A(), T(), u.value = !1, v && p();
  }, b = () => {
    u.value = !0;
  };
  function L(v) {
    t.value.contains(v.target) || S();
  }
  return fp(() => {
    T(), A();
  }), {
    closePopover: S,
    destroyPopover: T,
    initCalendar: b,
    openPopoverWithFloatingUi: E,
    popupVisible: u,
    setCloseFocus: p
  };
}
function u0() {
  const e = B(void 0), t = B(void 0), n = B(void 0), r = B(void 0), s = B(void 0);
  return {
    calendarRef: e,
    calendarPanelRef: t,
    calendarPanel2Ref: n,
    focusByCloseRef: s,
    inputRef: r
  };
}
const Kc = {
  props: {
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_ui_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      required: !1
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ]
}, dd = {
  date: {
    value2date: (e) => Lr(e) ? new Date(e) : null,
    date2value: (e) => e
  },
  timestamp: {
    value2date: (e) => Lr(e) ? new Date(e) : null,
    date2value: (e) => e && new Date(e).getTime()
  }
}, ri = {
  name: "ADatepicker",
  mixins: [
    Kc
  ],
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    appendToBody: {
      type: Boolean,
      default: !1
    },
    clearable: {
      type: Boolean,
      default: !0
    },
    confirm: {
      type: Boolean,
      default: !1
    },
    confirmText: {
      type: String,
      default: "OK"
    },
    dateFormat: {
      type: String,
      // format the time header and date tooltip
      default: void 0
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    editable: {
      type: Boolean,
      default: !0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    firstDayOfWeek: {
      type: Number,
      required: !1,
      default: 1,
      validator: (e) => e >= 1 && e <= 7
    },
    format: {
      type: [String, Object],
      default: "DD.MM.YYYY"
    },
    formatSave: {
      type: String,
      required: !1,
      default: "YYYY-MM-DD"
    },
    iconDay: {
      type: [Number, String],
      default: void 0
    },
    inputAttr: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: "pux_datepicker__input"
    },
    inputName: {
      type: String,
      default: "date"
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !1
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    lang: {
      type: String,
      default: "de",
      required: !1
    },
    languages: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: void 0
    },
    placeholder: {
      type: String,
      default: null
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => Rr.indexOf(e) !== -1
    },
    popupStyle: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    range: {
      type: Boolean,
      default: !1
    },
    rangeSeparator: {
      type: String,
      default: "~"
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    shortcuts: {
      type: [Boolean, Array],
      default: !0
    },
    type: {
      type: String,
      default: "date"
      // ["date", "datetime"] zendy added "month", "year", mxie added "time"
    },
    valueType: {
      default: "format",
      validator: function(e) {
        return ["timestamp", "format", "date"].indexOf(e) !== -1 || ru(e);
      }
    },
    width: {
      type: [String, Number],
      default: null
    }
  },
  emits: [
    "blur",
    "change",
    "clear",
    "confirm",
    "focus",
    "input",
    "inputError",
    "changeCalendarMonth",
    "changeCalendarYear"
  ],
  setup(e, t) {
    const n = d(e, "modelValue"), {
      attributesToExcludeFromRender: r
    } = Bt(e), {
      calendarRef: s,
      calendarPanelRef: i,
      calendarPanel2Ref: o,
      focusByCloseRef: u,
      inputRef: h
    } = u0(), {
      componentStyleHide: A
    } = Jt(e), {
      ariaDescribedbyLocal: E,
      changeModel: p,
      clearModel: T,
      errorsId: S,
      helpTextId: b,
      htmlIdLocal: L,
      isErrors: v,
      isModel: I,
      onBlur: R,
      onFocus: g
    } = Xt(e, t), {
      isAutofill: D
    } = rf({ inputRef: h }), {
      currentLanguage: w
    } = l0(e), {
      closePopover: M,
      destroyPopover: P,
      initCalendar: F,
      openPopoverWithFloatingUi: C,
      popupVisible: $,
      setCloseFocus: H
    } = o0(e, {
      calendarRef: s,
      focusByCloseRef: u,
      inputRef: h
    }), {
      ariaExpandedForCalendar: j,
      ariaHiddenForCalendar: le,
      idForCalendar: ee,
      idForPanel: _e,
      idsForPanelRange: ie,
      innerPlaceholder: ue,
      innerType: Te,
      widthLocal: Pe
    } = a0(e, {
      currentLanguage: w,
      popupVisible: $
    }), {
      clearDate: Se,
      confirmDate: se,
      currentValue: Oe,
      emitDate: ye,
      handleChange: je,
      handleInput: he,
      handleKeydown: ne,
      initCurrentValue: V,
      onModelValueChange: Q,
      parse: re,
      selectDate: ve,
      selectEndDate: De,
      selectEndTime: qe,
      selectStartDate: Xe,
      selectStartTime: Me,
      selectTime: xe,
      stringify: at,
      text: Ve,
      updateDate: st,
      userInput: Ze
    } = s0(e, t, {
      calendarPanelRef: i,
      changeModel: p,
      closePopover: M,
      setCloseFocus: H
    }), At = () => {
      h.value && h.value.blur();
    };
    return V(), rt(n, Q, {
      immediate: !0
    }), {
      ariaDescribedbyLocal: E,
      ariaExpandedForCalendar: j,
      ariaHiddenForCalendar: le,
      attributesToExcludeFromRender: r,
      blur: At,
      calendarPanel2Ref: o,
      calendarPanelRef: i,
      calendarRef: s,
      changeModel: p,
      clearDate: Se,
      clearModel: T,
      parse: re,
      closePopover: M,
      componentStyleHide: A,
      confirmDate: se,
      stringify: at,
      currentLanguage: w,
      currentValue: Oe,
      destroyPopover: P,
      emitDate: ye,
      errorsId: S,
      text: Ve,
      focusByCloseRef: u,
      handleChange: je,
      handleInput: he,
      handleKeydown: ne,
      helpTextId: b,
      htmlIdLocal: L,
      idForCalendar: ee,
      idForPanel: _e,
      idsForPanelRange: ie,
      initCalendar: F,
      innerPlaceholder: ue,
      innerType: Te,
      inputRef: h,
      isAutofill: D,
      isErrors: v,
      isModel: I,
      onBlur: R,
      onFocus: g,
      openPopoverWithFloatingUi: C,
      popupVisible: $,
      selectDate: ve,
      selectEndDate: De,
      selectEndTime: qe,
      selectStartDate: Xe,
      selectStartTime: Me,
      selectTime: xe,
      setCloseFocus: H,
      updateDate: st,
      userInput: Ze,
      widthLocal: Pe
    };
  },
  computed: {
    transform() {
      const e = this.valueType;
      return ru(e) ? { ...dd.date, ...e } : e === "format" ? {
        value2date: this.parse.bind(this),
        date2value: this.stringify.bind(this)
      } : dd[e] || dd.date;
    },
    showClearIcon() {
      return !this.disabled && this.clearable && this.text;
    },
    innerShortcuts() {
      if (Array.isArray(this.shortcuts))
        return this.shortcuts;
      if (this.shortcuts === !1)
        return [];
      const e = this.currentLanguage.pickers;
      return [
        {
          text: e[0],
          onClick(n) {
            n.currentValue = [/* @__PURE__ */ new Date(), new Date(Date.now() + 3600 * 1e3 * 24 * 7)], n.updateDate(!0);
          }
        },
        {
          text: e[1],
          onClick(n) {
            n.currentValue = [/* @__PURE__ */ new Date(), new Date(Date.now() + 3600 * 1e3 * 24 * 30)], n.updateDate(!0);
          }
        },
        {
          text: e[2],
          onClick(n) {
            n.currentValue = [new Date(Date.now() - 3600 * 1e3 * 24 * 7), /* @__PURE__ */ new Date()], n.updateDate(!0);
          }
        },
        {
          text: e[3],
          onClick(n) {
            n.currentValue = [new Date(Date.now() - 3600 * 1e3 * 24 * 30), /* @__PURE__ */ new Date()], n.updateDate(!0);
          }
        }
      ];
    },
    innerDateFormat() {
      return this.dateFormat ? this.dateFormat : typeof this.format != "string" ? "YYYY-MM-DD" : this.innerType === "date" ? this.format : this.format.replace(/[Hh]+.*[msSaAZ]|\[.*?\]/g, "").trim() || "YYYY-MM-DD";
    }
  },
  watch: {
    popupVisible(e) {
      e ? this.initCalendar() : (this.userInput = null, this.blur());
    }
  },
  methods: {
    isValidValue(e) {
      const { value2date: t } = this.transform;
      return Lr(t(e));
    },
    isValidRangeValue(e) {
      const { value2date: t } = this.transform;
      return Array.isArray(e) && e.length === 2 && this.isValidValue(e[0]) && this.isValidValue(e[1]) && t(e[1]).getTime() >= t(e[0]).getTime();
    },
    selectRange(e) {
      typeof e.onClick == "function" ? e.onClick(this) !== !1 && this.closePopover() : (this.currentValue = [new Date(e.start), new Date(e.end)], this.updateDate(!0), this.closePopover());
    },
    handleBlur(e) {
      this.$emit("blur", e);
    },
    handleFocus(e) {
      this.initCalendar(), this.$emit("focus", e);
    }
  },
  render() {
    return this.isRender ? this.readonly ? c(gn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.text,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: this.type
    }) : c("div", {
      ...this.$attrs,
      class: "a_form_element__container",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel || this.isAutofill
        }]
      }, [
        this.label && c(Mt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: this.isLabelFloat,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            class: ["pux_datepicker", {
              pux_datepicker_range: this.range,
              disabled: this.disabled
            }],
            style: { width: this.widthLocal },
            onMousedown: this.initCalendar,
            onTouchstart: this.initCalendar
          }, [
            c("div", {
              class: "pux_datepicker__input_wrapper",
              role: "application"
            }, [
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                class: [
                  "a_form_control pux_datepicker__input",
                  this.inputClass,
                  {
                    a_form_control_invalid: this.isErrors
                  }
                ],
                name: this.inputName,
                type: "text",
                autocomplete: "off",
                disabled: this.disabled,
                readonly: !this.editable,
                value: this.text,
                placeholder: this.innerPlaceholder,
                ariaHaspopup: !0,
                "aria-owns": this.idForCalendar,
                ...this.inputAttr,
                onKeydown: this.handleKeydown,
                onFocus: this.handleFocus,
                onBlur: this.handleBlur,
                onInput: this.handleInput,
                onChange: this.handleChange
              }),
              this.showClearIcon && c("span", {
                class: "pux_datepicker__input_wrapper__append pux_datepicker__input_wrapper__clear_wrapper",
                ariaHidden: !0,
                onMousedown: this.clearDate
              }, [
                c("i", {
                  class: "pux_datepicker__input__icon pux_datepicker__input__clear_icon"
                })
              ]),
              c("span", {
                class: "pux_datepicker__input_wrapper__append"
              }, [
                c(r0)
              ])
            ]),
            c(la, {
              to: "body"
            }, [
              this.popupVisible && Ot(c("div", {
                ref: "calendarRef",
                id: this.idForCalendar,
                class: "pux_datepicker__popup",
                ariaHidden: this.ariaHiddenForCalendar,
                ariaExpanded: this.ariaExpandedForCalendar,
                style: this.popupStyle
              }, [
                !!(this.range && this.innerShortcuts.length) && c("div", {
                  class: "pux_datepicker__shortcuts_wrapper"
                }, [
                  this.innerShortcuts.map((e, t) => c("button", {
                    key: t,
                    class: "pux_datepicker__shortcuts_wrapper__shortcuts",
                    type: "button",
                    onClick: () => this.selectRange(e)
                  }, e.text))
                ]),
                this.range ? c("div", {
                  class: "pux_datepicker__range_wrapper"
                }, [
                  c(_d, {
                    ref: "calendarPanelRef",
                    id: this.idsForPanelRange[0],
                    style: "box-shadow: 1px 0 rgba(0, 0, 0, .1);",
                    index: 0,
                    type: this.innerType,
                    dateFormat: this.innerDateFormat,
                    value: this.currentValue[0],
                    endAt: this.currentValue[1],
                    startAt: null,
                    visible: this.popupVisible,
                    currentLanguage: this.currentLanguage,
                    firstDayOfWeek: this.firstDayOfWeek,
                    onSelectDate: this.selectStartDate,
                    onSelectTime: this.selectStartTime,
                    onClosePopup: this.closePopover
                  }),
                  c(_d, {
                    ref: "calendarPanel2Ref",
                    id: this.idsForPanelRange[1],
                    index: 1,
                    type: this.innerType,
                    dateFormat: this.innerDateFormat,
                    value: this.currentValue[1],
                    endAt: null,
                    startAt: this.currentValue[0],
                    visible: this.popupVisible,
                    currentLanguage: this.currentLanguage,
                    firstDayOfWeek: this.firstDayOfWeek,
                    onSelectDate: this.selectEndDate,
                    onSelectTime: this.selectEndTime,
                    onClosePopup: this.closePopover
                  })
                ]) : c(_d, {
                  ref: "calendarPanelRef",
                  id: this.idForPanel,
                  index: -1,
                  type: this.innerType,
                  dateFormat: this.innerDateFormat,
                  value: this.currentValue,
                  visible: this.popupVisible,
                  currentLanguage: this.currentLanguage,
                  firstDayOfWeek: this.firstDayOfWeek,
                  onSelectDate: this.selectDate,
                  onSelectTime: this.selectTime,
                  onClosePopup: this.closePopover
                }),
                this.confirm && c("div", {
                  class: "pux_datepicker__footer"
                }, [
                  c("button", {
                    class: "pux_datepicker__footer__btn pux_datepicker__footer__btn_confirm",
                    type: "button",
                    onClick: this.confirmDate
                  }, this.confirmText)
                ])
              ]), [
                [_l, {
                  mounted: this.openPopoverWithFloatingUi
                }]
              ])
            ]),
            c("div", {
              ref: "focusByCloseRef",
              ariaHidden: !0,
              tabindex: -1
            })
          ])
          /*
           * this.isClearButtonLocal && h(AFormElementBtnClear, {
           *   disabled: this.disabled,
           *   clearButtonClass: this.clearButtonClass,
           *   onClear: this.clearModel,
           * }),
           */
        ]),
        c(Zt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(ln, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function _0({
  idFrom: e = _(() => "")
}) {
  return {
    setFocusToFromInput: () => {
      const n = document.getElementById(e.value);
      n && n.focus();
    }
  };
}
function d0({
  htmlIdLocal: e = _(() => "")
}) {
  const t = _(() => `${e.value}_from`), n = _(() => `${e.value}_until`);
  return {
    idFrom: t,
    idUntil: n
  };
}
function c0(e, {
  htmlIdLocal: t = _(() => ""),
  idFrom: n = _(() => ""),
  idUntil: r = _(() => "")
}) {
  const s = d(e, "inputAttributes"), i = d(e, "inputAttributesFrom"), o = d(e, "inputAttributesUntil"), u = _(() => `${t.value}_label`), h = _(() => ({
    "aria-labelledby": `${u.value} ${n.value}`,
    ...s.value,
    ...i.value
  })), A = _(() => ({
    "aria-labelledby": `${u.value} ${r.value}`,
    ...s.value,
    ...o.value
  }));
  return {
    inputAttributesFromLocal: h,
    inputAttributesUntilLocal: A
  };
}
function f0(e, {
  changeModel: t = () => ({})
}) {
  const n = d(e, "keyFrom"), r = d(e, "keyUntil"), s = d(e, "modelValue"), i = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[n.value];
  }), o = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[r.value];
  });
  return {
    changeModelFrom: (A) => {
      const E = pe(s.value) || {};
      E[n.value] = A, t({ model: E });
    },
    changeModelUntil: (A) => {
      const E = pe(s.value) || {};
      E[r.value] = A, t({ model: E });
    },
    modelValueFrom: i,
    modelValueUntil: o
  };
}
function h0(e) {
  const t = d(e, "readonlyDefault"), n = d(e, "readonlyDefaultFrom"), r = d(e, "readonlyDefaultUntil"), s = _(() => Ce(n.value) ? t.value : n.value), i = _(() => Ce(r.value) ? t.value : r.value);
  return {
    readonlyDefaultFromLocal: s,
    readonlyDefaultUntilLocal: i
  };
}
const A0 = {
  name: "ADatepickerRange",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    appendToBody: {
      type: Boolean,
      default: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearable: {
      type: Boolean,
      default: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    disabledFrom: {
      type: Boolean,
      required: !1
    },
    disabledUntil: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    firstDayOfWeek: {
      type: Number,
      required: !1,
      default: 1,
      validator: (e) => e >= 1 && e <= 7
    },
    format: {
      type: [String, Object],
      default: "DD.MM.YYYY"
    },
    formatSave: {
      type: String,
      required: !1,
      default: "YYYY-MM-DD"
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconDay: {
      type: [Number, String],
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_datepicker_range_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesFrom: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesUntil: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: "pux_datepicker__input"
    },
    inputName: {
      type: String,
      default: "date"
    },
    inputWidth: {
      type: [Number, String],
      required: !1,
      default: 270
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyFrom: {
      tpe: String,
      required: !1,
      default: "from"
    },
    keyUntil: {
      tpe: String,
      required: !1,
      default: "until"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelFrom: {
      type: String,
      required: !1,
      default: "_A_DATEPICKER_RANGE_FROM_"
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    labelUntil: {
      type: String,
      required: !1,
      default: "_A_DATEPICKER_RANGE_UNTIL_"
    },
    lang: {
      type: String,
      default: "de",
      required: !1
    },
    modelUndefined: {
      required: !1,
      default: void 0
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholderFrom: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholderUntil: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => Rr.indexOf(e) !== -1
    },
    popupStyle: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    readonlyDefaultFrom: {
      type: String,
      required: !1,
      default: void 0
    },
    readonlyDefaultUntil: {
      type: String,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    shortcuts: {
      type: [Boolean, Array],
      default: !0
    },
    type: {
      type: String,
      required: !1,
      default: "dateRange"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      componentStyleHide: r
    } = Jt(e), {
      changeModel: s,
      errorsId: i,
      helpTextId: o,
      htmlIdLocal: u,
      isErrors: h
    } = Xt(e, t), {
      changeModelFrom: A,
      changeModelUntil: E,
      modelValueFrom: p,
      modelValueUntil: T
    } = f0(e, {
      changeModel: s
    }), {
      idFrom: S,
      idUntil: b
    } = d0({
      htmlIdLocal: u
    }), {
      inputAttributesFromLocal: L,
      inputAttributesUntilLocal: v
    } = c0(e, {
      htmlIdLocal: u,
      idFrom: S,
      idUntil: b
    }), {
      setFocusToFromInput: I
    } = _0({
      idFrom: S
    }), {
      destroyEventBusClickLabel: R,
      initEventBusClickLabel: g
    } = af({
      htmlIdLocal: u,
      clickLabel: I
    }), {
      readonlyDefaultFromLocal: D,
      readonlyDefaultUntilLocal: w
    } = h0(e);
    return g(), Dt(() => {
      R();
    }), {
      attributesToExcludeFromRender: n,
      changeModelFrom: A,
      changeModelUntil: E,
      componentStyleHide: r,
      errorsId: i,
      helpTextId: o,
      htmlIdLocal: u,
      idFrom: S,
      idUntil: b,
      inputAttributesFromLocal: L,
      inputAttributesUntilLocal: v,
      isErrors: h,
      modelValueFrom: p,
      modelValueUntil: T,
      readonlyDefaultFromLocal: D,
      readonlyDefaultUntilLocal: w
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(gn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      isRange: !0,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "dateRange",
      valueParentClass: "a_form_element_readonly_value_range"
    }, () => [
      c(ri, {
        id: this.idFrom,
        alwaysTranslate: this.alwaysTranslate,
        format: this.format,
        formatSave: this.formatSave,
        iconDay: this.iconDay,
        label: this.labelFrom,
        lang: this.lang,
        modelValue: this.modelValueFrom,
        readonly: !0,
        readonlyDefault: this.readonlyDefaultFromLocal,
        shortcuts: this.shortcuts,
        type: "date"
      }),
      c(ri, {
        id: this.idUntil,
        alwaysTranslate: this.alwaysTranslate,
        format: this.format,
        formatSave: this.formatSave,
        iconDay: this.iconDay,
        lang: this.lang,
        label: this.labelUntil,
        modelValue: this.modelValueUntil,
        readonly: !0,
        readonlyDefault: this.readonlyDefaultUntilLocal,
        shortcuts: this.shortcuts,
        type: "date"
      })
    ]) : c("div", {
      ...this.$attrs,
      class: "a_datepicker_range",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_invalid: this.isErrors
        }]
      }, [
        this.label && c(Mt, {
          id: this.idFrom,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: !1,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_datepicker_range__content"
        }, [
          c("div", {
            class: "a_datepicker_range__group a_datepicker_range__group_min"
          }, [
            c(Mt, {
              id: this.idFrom,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_datepicker_range__label a_datepicker_range__label_min",
              isLabelFloat: !1,
              label: this.labelFrom,
              isError: this.isErrors
            }),
            c(ri, {
              id: this.idFrom,
              ref: "from",
              alwaysTranslate: this.alwaysTranslate,
              inputAttr: this.inputAttributesFromLocal,
              modelValue: this.modelValueFrom,
              formatSave: this.formatSave,
              firstDayOfWeek: this.firstDayOfWeek,
              appendToBody: this.appendToBody,
              popupStyle: this.popupStyle,
              iconDay: this.iconDay,
              inputName: this.inputName,
              placement: this.placement,
              clearable: this.clearable,
              shortcuts: this.shortcuts,
              lang: this.lang,
              inputClass: this.inputClass,
              placeholder: this.placeholderFrom,
              disabled: this.disabled || this.disabledFrom,
              width: this.inputWidth,
              format: this.format,
              type: "date",
              onChange: this.changeModelFrom
            })
          ]),
          c("div", {
            class: "a_datepicker_range__group"
          }, [
            c(Mt, {
              id: this.idUntil,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_datepicker_range__label a_datepicker_range__label_max",
              isLabelFloat: !1,
              label: this.labelUntil,
              isError: this.isErrors
            }),
            c(ri, {
              id: this.idUntil,
              ref: "until",
              alwaysTranslate: this.alwaysTranslate,
              modelValue: this.modelValueUntil,
              formatSave: this.formatSave,
              firstDayOfWeek: this.firstDayOfWeek,
              appendToBody: this.appendToBody,
              popupStyle: this.popupStyle,
              iconDay: this.iconDay,
              inputName: this.inputName,
              placement: this.placement,
              clearable: this.clearable,
              shortcuts: this.shortcuts,
              lang: this.lang,
              inputClass: this.inputClass,
              placeholder: this.placeholderUntil,
              disabled: this.disabled || this.disabledUntil,
              width: this.inputWidth,
              format: this.format,
              type: "date",
              inputAttr: this.inputAttributesUntilLocal,
              onChange: this.changeModelUntil
            })
          ]),
          c(Zt, {
            alwaysTranslate: this.alwaysTranslate,
            class: "a_datepicker_range__help_text",
            id: this.helpTextId,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(ln, {
            id: this.errorsId,
            alwaysTranslate: this.alwaysTranslate,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
};
function E0(e, {
  isOpen: t = B(!1)
}) {
  const n = d(e, "btnIconLeftLess"), r = d(e, "btnIconLeftMore"), s = d(e, "btnIconRightLess"), i = d(e, "btnIconRightMore"), o = d(e, "btnTextLess"), u = d(e, "btnTextMore"), h = d(e, "btnTitleLess"), A = d(e, "btnTitleMore"), E = d(e, "showLess"), p = B(void 0), T = _(() => t.value ? o.value : u.value), S = _(() => t.value ? h.value : A.value), b = _(() => t.value ? n.value : r.value), L = _(() => t.value ? s.value : i.value), v = _(() => t.value ? E.value : !0);
  return {
    btnIconLeft: b,
    btnIconRight: L,
    btnText: T,
    btnTitle: S,
    buttonRef: p,
    isButtonVisible: v
  };
}
function p0(e) {
  const t = d(e, "isOpenDefault"), n = B(void 0);
  return {
    initIsOpen: () => {
      n.value = t.value;
    },
    isOpen: n
  };
}
function T0(e, {
  isOpen: t = B(!1)
}) {
  const n = d(e, "htmlLess"), r = d(e, "htmlMore"), s = d(e, "safeHtmlLess"), i = d(e, "safeHtmlMore"), o = d(e, "textLess"), u = d(e, "textMore"), h = _(() => t.value ? r.value : n.value), A = _(() => t.value ? i.value : s.value), E = _(() => t.value ? u.value : o.value), p = _(() => !!(E.value || A.value || h.value));
  return {
    htmlLocal: h,
    isTextOrHtmlVisible: p,
    safeHtmlLocal: A,
    textLocal: E
  };
}
const m0 = [
  "a[href]:not([tabindex='-1'])",
  "button:not([disabled]):not([tabindex='-1'])",
  "area[href]:not([tabindex='-1'])",
  "input:not([disabled]):not([tabindex='-1'])",
  "select:not([disabled]):not([tabindex='-1'])",
  "textarea:not([disabled]):not([tabindex='-1'])",
  "iframe:not([tabindex='-1'])",
  "[tabindex]:not([tabindex='-1'])",
  "[contentEditable=true]:not([tabindex='-1'])"
], Ei = m0.join(", ");
function dde({ element: e, isMiddleOfScreen: t = !0, behavior: n = "smooth" }) {
  t ? window.scroll({
    top: e.offsetTop - window.innerHeight / 2,
    behavior: n
  }) : e.scrollIntoView();
}
function sa({ element: e, selector: t }) {
  const n = e || document.querySelector(t);
  n && (n.hasAttribute("tabindex") ? n.focus() : (n.setAttribute("tabindex", "-1"), n.focus(), n.removeAttribute("tabindex")));
}
function jT(e) {
  const t = e.getBoundingClientRect();
  return t.width > 0 && t.height > 0;
}
function S0({ element: e } = {}) {
  const t = document.querySelectorAll(Ei), n = e || document.activeElement, r = Array.from(t).indexOf(n);
  if (r !== -1) {
    let s = r + 1;
    s >= t.length && (s = 0);
    let i = t[s];
    for (; s < t.length && !jT(i); )
      s++, s >= t.length && (s = 0), i = t[s];
    s < t.length && i.focus();
  }
}
function b0({ element: e } = {}) {
  const t = document.querySelectorAll(Ei), n = e || document.activeElement, r = Array.from(t).indexOf(n);
  if (r !== -1) {
    let s = r - 1;
    s < 0 && (s = t.length - 1);
    let i = t[s];
    for (; s >= 0 && !jT(i); )
      s--, s < 0 && (s = t.length - 1), i = t[s];
    s >= 0 && i.focus();
  }
}
function cde({ element: e }) {
  if (e.id)
    return `#${e.id}`;
  const t = [];
  for (; e; ) {
    const n = e.tagName;
    n === "BODY" || n === "HTML" ? t.unshift(n) : t.unshift(
      e.className ? `${n}.${e.className.replace(/\s+/g, ".")}` : n
    );
    const r = parent.children;
    r != null && r.length && r.length > 1 && (t[0] += `:nth-child(${Array.prototype.indexOf.call(r, e) + 1})`), e = e.parentElement;
  }
  return t.join(" > ");
}
function L0(e, { emit: t }, {
  isOpen: n = B(!1)
}) {
  const r = B(void 0);
  return {
    containerRef: r,
    toggleButton: () => {
      n.value = !n.value, t("toggle", { isOpen: n.value }), n.value && !window.isScrollDisabled && uu().then(
        () => sa({
          element: r.value
        })
      );
    }
  };
}
const fde = {
  name: "ADisclosure",
  inheritAttrs: !0,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    btnAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link a_p_0"
    },
    btnIconLeftLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconLeftMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnId: {
      type: String,
      required: !1,
      default: void 0
    },
    btnParentClass: {
      type: String,
      required: !1,
      default: "a_text_center"
    },
    btnTextLess: {
      type: String,
      required: !1,
      default: "_A_DISCLOSURE_LESS_"
    },
    btnTextMore: {
      type: String,
      required: !1,
      default: "_A_DISCLOSURE_MORE_"
    },
    btnTitleLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitleMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitlePlacement: {
      type: String,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    htmlLess: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlMore: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_disclosure_")
    },
    isBtnTitleHtml: {
      type: Boolean,
      required: !1
    },
    isOpenDefault: {
      type: Boolean,
      required: !1,
      default: !1
    },
    safeHtmlLess: {
      type: String,
      required: !1,
      default: void 0
    },
    safeHtmlMore: {
      type: String,
      required: !1,
      default: void 0
    },
    showLess: {
      type: Boolean,
      required: !1,
      default: !0
    },
    textLess: {
      type: String,
      required: !1,
      default: void 0
    },
    textMore: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      initIsOpen: r,
      isOpen: s
    } = p0(e), {
      htmlLocal: i,
      isTextOrHtmlVisible: o,
      safeHtmlLocal: u,
      textLocal: h
    } = T0(e, {
      isOpen: s
    }), {
      containerRef: A,
      toggleButton: E
    } = L0(e, t, {
      isOpen: s
    }), {
      btnIconLeft: p,
      btnIconRight: T,
      btnText: S,
      btnTitle: b,
      buttonRef: L,
      isButtonVisible: v
    } = E0(e, {
      isOpen: s
    });
    return r(), n({
      buttonRef: L,
      containerRef: A,
      isOpen: s,
      toggleButton: E
    }), {
      btnIconLeft: p,
      btnIconRight: T,
      btnText: S,
      btnTitle: b,
      buttonRef: L,
      containerRef: A,
      htmlLocal: i,
      isButtonVisible: v,
      isOpen: s,
      isTextOrHtmlVisible: o,
      safeHtmlLocal: u,
      textLocal: h,
      toggleButton: E
    };
  },
  render() {
    return c("div", {
      class: [
        "a_show_more",
        {
          a_show_more_open: this.isOpen
        }
      ]
    }, [
      c("div", {
        class: "a_show_more__wrapper"
      }, [
        c("div", {
          ref: "containerRef",
          id: this.id,
          ariaExpanded: this.isOpen,
          ...this.$attrs
        }, [
          this.isTextOrHtmlVisible && c(Ae, {
            alwaysTranslate: this.alwaysTranslate,
            html: this.htmlLocal,
            safeHtml: this.safeHtmlLocal,
            tag: "div",
            text: this.textLocal
          }),
          this.isOpen ? this.$slots.more && this.$slots.more({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          }) : this.$slots.less && this.$slots.less({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          })
        ])
      ]),
      this.isButtonVisible && c("div", {
        class: this.btnParentClass
      }, [
        c(be, {
          ref: "buttonRef",
          id: this.btnId,
          alwaysTranslate: this.alwaysTranslate,
          "aria-controls": this.id,
          class: [
            "a_show_more__button",
            this.btnClass
          ],
          disabled: this.disabled,
          iconLeft: this.btnIconLeft,
          iconRight: this.btnIconRight,
          isTitleHtml: this.isBtnTitleHtml,
          text: this.btnText,
          title: this.btnTitle,
          titlePlacement: this.btnTitlePlacement,
          type: "button",
          ...this.btnAttributes,
          onClick: this.toggleButton
        }, () => this.$slots.button && this.$slots.button({
          isButtonVisible: this.isButtonVisible,
          isOpen: this.isOpen
        }))
      ])
    ]);
  }
};
function v0(e) {
  const t = d(e, "action");
  return {
    attributesAction: _(() => {
      const r = {
        ...t.value,
        isHiddenCallback: void 0,
        classReplace: void 0
      };
      return t.value.classReplace ? r.class = t.value.classReplace : it(r.class) ? r.class += " a_dropdown__item" : nt(r.class) ? r.class.a_dropdown__item = !0 : r.class = "a_dropdown__item", r.type === "link" && (r.type = void 0), r;
    })
  };
}
const I0 = {
  name: "ADropdownAction",
  props: {
    action: {
      type: Object,
      required: !0
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      attributesAction: t
    } = v0(e);
    return {
      attributesAction: t
    };
  },
  render() {
    return this.action.type === "button" ? c("li", {
      class: this.action.liClass
    }, [
      c(ft, {
        ...this.attributesAction,
        alwaysTranslate: this.alwaysTranslate,
        isHidden: void 0,
        callback: void 0,
        classButton: void 0,
        classExtra: void 0,
        isConfirm: void 0,
        callbackLocal: void 0,
        onClick: this.action.callback
      })
    ]) : this.action.type === "divider" ? c("li", {
      class: [
        "a_dropdown__divider",
        this.action.liClass
      ]
    }) : this.action.type === "link" ? c("li", {
      class: this.action.liClass
    }, [
      c(Bu, {
        ...this.attributesAction,
        alwaysTranslate: this.alwaysTranslate,
        classButton: void 0,
        classExtra: void 0,
        isHidden: void 0,
        isConfirm: void 0,
        callbackLocal: void 0
      })
    ]) : this.action.type === "template" && this.action.slotName && this.$slots[this.action.slotName] ? this.$slots[this.action.slotName]({
      action: this.action
    }) : null;
  }
}, wa = B({});
function jc({ id: e, idRef: t } = {}) {
  const n = _(() => cd(t ? { id: t.value } : { id: e })), r = _(() => {
    let s = !1;
    return hn(wa.value) || z(wa.value, (i) => {
      if (i)
        return s = !0, !1;
    }), s;
  });
  return {
    closePopup: Ud,
    isCurrentPopupOpen: cd,
    isOnePopupOpen: r,
    isPopupOpen: n,
    openPopup: kd,
    popupOpenIds: wa,
    togglePopup: y0
  };
}
function cd({ id: e }) {
  return !!wa.value[e];
}
function kd({ id: e }) {
  wa.value[e] = !0;
}
function Ud({ id: e }) {
  e in wa.value && delete wa.value[e];
}
function y0({ id: e, statusOpen: t }) {
  Ce(t) ? wa.value[e] ? Ud({ id: e }) : kd({ id: e }) : t ? kd({ id: e }) : Ud({ id: e });
}
function zT({ actions: e }) {
  const t = Rt(e, (s) => !s.isHidden), n = [];
  z(t, (s) => {
    (s.type !== "divider" || n.length > 0 && fi(n).type !== "divider") && n.push(s);
  });
  const r = fi(n);
  return r && r.type === "divider" && n.pop(), n;
}
function qo({ class1: e, class2: t, defaultValue: n = void 0 }) {
  return e ? t ? `${e} ${t}` : e : t || n;
}
function g0(e) {
  const t = d(e, "actions"), n = _(() => zT({
    actions: t.value
  })), r = _(() => n.value.length > 0);
  return {
    actionsFiltered: n,
    hasActions: r
  };
}
function R0(e, {
  eventsMenu: t = _(() => ({})),
  statusExpanded: n = B(!1),
  wasOpened: r = B(!1)
}) {
  const s = d(e, "buttonAttributes"), i = d(e, "buttonTag"), o = d(e, "disabled"), u = d(e, "dropdownAttributes"), h = d(e, "dropdownClass"), A = d(e, "id"), E = d(e, "menuWidth"), p = d(e, "persist"), T = _(() => s.value.id || A.value), S = _(() => {
    const I = pe(s.value);
    return I["aria-haspopup"] = "true", I["aria-expanded"] = n.value, i.value === "button" && (I.type = I.type || "button"), I;
  }), b = _(() => {
    const I = {};
    return o.value && (i.value === "button" ? I.disabled = !0 : i.value === "a" && (I.ariaDisabled = !0)), I;
  }), L = _(() => {
    const I = pe(u.value);
    return I.class = ["a_dropdown__menu", h.value, {
      a_dropdown__menu_show: n.value
    }], E.value && (I.style = `width: ${E.value}px`), Ld({}, I, t.value);
  }), v = _(() => n.value || p.value && r.value);
  return {
    idLocal: T,
    buttonAttributesDisabled: b,
    buttonAttributesLocal: S,
    dropdownAttributesLocal: L,
    isMenuRendered: v
  };
}
function O0(e) {
  const t = d(e, "buttonClass"), n = d(e, "class");
  return {
    buttonClassLocal: _(() => {
      let s = {};
      return t.value && (it(t.value) ? s[t.value] = !0 : nt(t.value) && (s = Ld(s, t.value))), n.value && (it(n.value) ? s[n.value] = !0 : nt(n.value) && (s = Ld(s, n.value))), s;
    })
  };
}
function C0(e, {
  onToggle: t = () => {
  },
  onKeydown: n = () => {
  },
  onOpen: r = () => {
  },
  onClose: s = () => {
  },
  timerCloseHover: i = B(void 0),
  triggerOpen: o = B(void 0)
}) {
  const u = d(e, "triggers"), h = _(() => {
    const S = {};
    return z(u.value, (b) => {
      S[b] = !0;
    }), S;
  }), A = _(() => {
    const S = {};
    return h.value.click && (S.onClick = t, S.onKeydown = n), h.value.focus && (S.onFocus = () => r({ trigger: "focus" })), h.value.hover && (S.onMouseenter = () => r({ trigger: "hover" }), S.onMouseleave = () => s({ trigger: "hover" })), S;
  }), E = () => {
    o.value === "hover" && clearTimeout(i.value);
  }, p = () => {
    s({ trigger: "hover" });
  }, T = _(() => {
    const S = {};
    return h.value.hover && (S.onMouseenter = E, S.onMouseleave = p), S;
  });
  return {
    eventsLocal: A,
    eventsMenu: T
  };
}
function N0(e, {
  dropdownRef: t = B(void 0)
}) {
  const n = d(e, "elementsForArrows");
  return {
    setFocusToFirstElement: () => {
      if (!t.value)
        return;
      const s = t.value.querySelectorAll(n.value);
      s.length !== 0 && s[0].focus();
    }
  };
}
function D0(e, {
  dropdownButtonRef: t = B(void 0),
  dropdownRef: n = B(void 0)
}) {
  const r = d(e, "floatingFlip"), s = d(e, "floatingShift"), i = d(e, "placement"), o = B(void 0), u = _(() => {
    var p, T;
    const E = [];
    return (p = r.value) != null && p.use && E.push(
      Il(r.value)
    ), (T = s.value) != null && T.use && E.push(
      vl(s.value)
    ), E;
  });
  return {
    destroyPopover: () => {
      o.value && (o.value(), o.value = void 0);
    },
    startPopper: () => {
      !o.value && t.value.$el && n.value && (o.value = Ll(
        t.value.$el,
        n.value,
        () => {
          !t.value.$el || !n.value || yl(
            t.value.$el,
            n.value,
            {
              placement: i.value,
              middleware: u.value
            }
          ).then(({ x: E, y: p }) => {
            Object.assign(n.value.style, {
              left: `${E}px`,
              top: `${p}px`
            });
          });
        }
      ));
    }
  };
}
function B0() {
  const e = B(void 0), t = B(void 0);
  return {
    dropdownButtonRef: e,
    dropdownRef: t
  };
}
const fd = B(!1);
function YT() {
  return {
    closeDropdownGlobal: () => {
      fd.value = !1;
    },
    isDropdownGlobalOpen: fd,
    openDropdownGlobal: () => {
      fd.value = !0;
    }
  };
}
function w0(e, { emit: t }, {
  closePopup: n = () => {
  },
  dropdownButtonRef: r = B(void 0),
  dropdownRef: s = B(void 0),
  destroyPopover: i = () => {
  },
  openPopup: o = () => {
  },
  setFocusToFirstElement: u = () => {
  },
  startPopper: h = () => {
  }
}) {
  const A = d(e, "disabled"), E = d(e, "dropdownRenderDefault"), p = d(e, "elementsForArrows"), T = d(e, "id"), S = d(e, "isCloseByClickInside"), b = d(e, "isCloseByClickOutside"), L = d(e, "isListWidthSameWithButton"), v = d(e, "lockArrowsNavigation"), I = d(e, "lockTabNavigation"), R = d(e, "persist"), g = d(e, "useEscape"), D = B(void 0), w = B(!1), M = B(!1), P = B(void 0), F = B(void 0), C = B(!1), {
    closeDropdownGlobal: $,
    openDropdownGlobal: H
  } = YT(), j = () => {
    C.value = E.value || !1;
  }, le = ({ down: V }) => {
    var re;
    const Q = s.value.querySelectorAll(p.value);
    if (Q.length !== 0) {
      if (((re = r.value) == null ? void 0 : re.$el) === document.activeElement) {
        V ? Q[0].focus() : Q[Q.length - 1].focus();
        return;
      }
      z(Q, (ve, De) => {
        if (ve === document.activeElement)
          return V ? De < Q.length - 1 && Q[De + 1].focus() : De > 0 && Q[De - 1].focus(), !1;
      });
    }
  }, ee = () => {
    var V, Q;
    (Q = (V = r.value) == null ? void 0 : V.$el) == null || Q.focus();
  }, _e = (V) => {
    const Q = V || window.$event;
    if (Q.keyCode === X.arrowDown || Q.keyCode === X.arrowUp) {
      if (!v.value)
        return;
      const re = Q.keyCode === X.arrowDown;
      le({ down: re }), V.preventDefault(), V.stopPropagation();
    } else if (Q.keyCode === X.escape)
      g.value && (he({ trigger: "click" }), V.preventDefault(), V.stopPropagation());
    else if (Q.keyCode === X.tab) {
      if (!I.value)
        return;
      Q.shiftKey ? (he(), setTimeout(() => {
        var re;
        b0({
          element: (re = r.value) == null ? void 0 : re.$el
        });
      })) : (he(), setTimeout(() => {
        var re;
        S0({
          element: (re = r.value) == null ? void 0 : re.$el
        });
      })), V.stopPropagation(), V.preventDefault();
    }
  }, ie = () => {
    b.value && document.addEventListener("click", ne);
  }, ue = () => {
    b.value && document.removeEventListener("click", ne);
  }, Te = () => {
    w.value || (w.value = !0, document.body.addEventListener("keydown", _e));
  }, Pe = () => {
    w.value && (w.value = !1, document.body.removeEventListener("keydown", _e));
  }, Se = () => {
    L.value && r.value && (D.value = r.value.clientWidth);
  }, se = ({ trigger: V = "click", selectorToFocus: Q } = {}) => {
    V === "hover" && F.value === "hover" && clearTimeout(P.value), !(A.value || M.value) && (F.value = V, Se(), Te(), M.value = !0, R.value && C.value && h(), C.value = !0, setTimeout(() => {
      ie(), Q ? setTimeout(() => {
        document.getElementById(Q).focus();
      }) : V === "click" && setTimeout(() => {
        u();
      }), H(), o({
        id: T.value
      }), t("open");
    }));
  }, Oe = ({ $event: V }) => {
    F.value === "hover" ? M.value && (F.value = "click", V.stopPropagation()) : M.value ? he({ trigger: "click" }) : se();
  }, ye = (V) => {
    (V.keyCode === X.enter || V.keyCode === X.space) && (Oe({ $event: V }), V.stopPropagation(), V.preventDefault()), (V.keyCode === X.arrowUp || V.keyCode === X.arrowDown) && (M.value || se());
  };
  function je({ trigger: V }) {
    ue(), Pe(), i(), M.value = !1, $(), V && V !== "hover" && // the event did not come from outside
    F.value !== "hover" && ee(), F.value = void 0, n({
      id: T.value
    }), t("close");
  }
  function he({ trigger: V } = {}) {
    if (M.value)
      if (V === "hover") {
        if (F.value !== "hover")
          return;
        P.value = setTimeout(() => {
          je({ trigger: V });
        }, 120);
      } else
        je({ trigger: V });
  }
  function ne(V) {
    s.value.contains(V.target) ? S.value && (he(), ee()) : he();
  }
  return {
    buttonWidth: D,
    destroyEventCloseClick: ue,
    destroyEventPressArrows: Pe,
    initWasOpened: j,
    onClose: he,
    onKeydown: ye,
    onOpen: se,
    onToggle: Oe,
    statusExpanded: M,
    timerCloseHover: P,
    triggerOpen: F,
    wasOpened: C
  };
}
const bi = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708"/>
</svg>`, ia = {
  name: "ADropdown",
  inheritAttrs: !1,
  props: {
    actions: {
      type: Array,
      required: !1,
      default: () => []
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    buttonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    buttonIconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonIconClass: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonIconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    buttonIconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    buttonIconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonIsTitleHtml: {
      type: Boolean,
      required: !1
    },
    buttonLoading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    buttonLoadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    buttonLoadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    buttonPrevent: {
      type: Boolean,
      required: !1
    },
    buttonStop: {
      type: Boolean,
      required: !1
    },
    buttonTag: {
      type: String,
      required: !1,
      default: "button"
    },
    buttonText: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTextAriaHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    buttonTextClass: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonTextScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTitle: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTitlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => ["top", "left", "bottom", "right"].indexOf(e) !== -1
    },
    caretIcon: {
      type: String,
      required: !1,
      default: bi
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dropdownClass: {
      type: String,
      required: !1,
      default: void 0
    },
    dropdownRenderDefault: {
      type: Boolean,
      required: !1
    },
    dropdownTag: {
      type: String,
      required: !1,
      default: "ul"
    },
    elementsForArrows: {
      type: String,
      required: !1,
      default: Ei
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    floatingFlip: {
      type: Object,
      required: !1,
      /*
       * mainAxis?: boolean;
       * crossAxis?: boolean;
       * fallbackAxisSideDirection?: 'none' | 'start' | 'end';
       * flipAlignment?: boolean;
       * fallbackPlacements?: Array<Placement>;
       * fallbackStrategy?: 'bestFit' | 'initialPlacement';
       */
      default: () => ({})
    },
    floatingShift: {
      type: Object,
      required: !1,
      default: () => ({
        use: !0,
        crossAxis: !0,
        padding: 20
      })
    },
    hasCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_dropdown_btn_")
    },
    inBody: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isCloseByClickInside: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isCloseByClickOutside: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHideWithoutActionAndSlot: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isListWidthSameWithButton: {
      type: Boolean,
      required: !1
    },
    lockArrowsNavigation: {
      type: Boolean,
      required: !1,
      default: !0
    },
    lockTabNavigation: {
      type: Boolean,
      required: !1,
      default: !0
    },
    menuWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    persist: {
      type: Boolean,
      required: !1,
      default: !0
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => Rr.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: "a_tooltip_container"
    },
    triggers: {
      type: Array,
      required: !1,
      default: () => ["click"],
      validator: (e) => rw(e, ["click", "hover", "focus"]).length === 0
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: [
    "open",
    "close"
  ],
  setup(e, t) {
    const n = d(e, "id"), {
      closePopup: r,
      openPopup: s
    } = jc(), {
      dropdownButtonRef: i,
      dropdownRef: o
    } = B0(), {
      setFocusToFirstElement: u
    } = N0(e, {
      dropdownRef: o
    }), {
      destroyPopover: h,
      startPopper: A
    } = D0(e, {
      dropdownButtonRef: i,
      dropdownRef: o
    }), {
      buttonWidth: E,
      destroyEventCloseClick: p,
      destroyEventPressArrows: T,
      initWasOpened: S,
      onClose: b,
      onKeydown: L,
      onOpen: v,
      onToggle: I,
      statusExpanded: R,
      timerCloseHover: g,
      triggerOpen: D,
      wasOpened: w
    } = w0(e, t, {
      closePopup: r,
      destroyPopover: h,
      dropdownButtonRef: i,
      dropdownRef: o,
      openPopup: s,
      setFocusToFirstElement: u,
      startPopper: A
    }), {
      eventsLocal: M,
      eventsMenu: P
    } = C0(e, {
      onToggle: I,
      onKeydown: L,
      onOpen: v,
      onClose: b,
      timerCloseHover: g,
      triggerOpen: D
    }), {
      idLocal: F,
      buttonAttributesDisabled: C,
      buttonAttributesLocal: $,
      dropdownAttributesLocal: H,
      isMenuRendered: j
    } = R0(e, {
      eventsMenu: P,
      statusExpanded: R,
      wasOpened: w
    }), {
      actionsFiltered: le,
      hasActions: ee
    } = g0(e), {
      addPopperContainerInBody: _e,
      popperContainerIdSelector: ie
    } = qc(e), {
      buttonClassLocal: ue
    } = O0(e);
    return S(), _e(), Dt(() => {
      p(), T(), h(), r({
        id: n.value
      });
    }), {
      actionsFiltered: le,
      buttonAttributesDisabled: C,
      buttonAttributesLocal: $,
      buttonClassLocal: ue,
      buttonWidth: E,
      dropdownAttributesLocal: H,
      dropdownButtonRef: i,
      dropdownRef: o,
      eventsLocal: M,
      hasActions: ee,
      idLocal: F,
      isMenuRendered: j,
      onClose: b,
      onOpen: v,
      popperContainerIdSelector: ie,
      startPopper: A,
      statusExpanded: R
    };
  },
  render() {
    return this.isHideWithoutActionAndSlot && !this.hasActions && !this.$slots.dropdown ? null : [
      c(be, {
        ref: "dropdownButtonRef",
        ...this.$attrs,
        id: this.idLocal,
        alwaysTranslate: this.alwaysTranslate,
        tag: this.buttonTag,
        class: this.buttonClassLocal,
        text: this.buttonText,
        textScreenReader: this.buttonTextScreenReader,
        textAriaHidden: this.buttonTextAriaHidden,
        textClass: this.buttonTextClass,
        title: this.buttonTitle,
        isTitleHtml: this.buttonIsTitleHtml,
        titlePlacement: this.buttonTitlePlacement,
        loading: this.buttonLoading,
        loadingClass: this.buttonLoadingClass,
        loadingAlign: this.buttonLoadingAlign,
        iconLeft: this.buttonIconLeft,
        iconRight: this.buttonIconRight,
        iconClass: this.buttonIconClass,
        iconAttributes: this.buttonIconAttributes,
        iconTag: this.buttonIconTag,
        prevent: this.buttonPrevent,
        stop: this.buttonStop,
        extra: this.extra,
        type: "button",
        attributes: this.buttonAttributesLocal,
        ...this.buttonAttributesDisabled,
        ...this.eventsLocal
      }, {
        default: () => this.$slots.button && this.$slots.button(),
        buttonAppend: () => this.hasCaret && c(ut, {
          class: "a_dropdown__caret",
          icon: this.caretIcon
        })
      }),
      c(la, {
        to: this.popperContainerIdSelector,
        disabled: !this.inBody
      }, [
        this.isMenuRendered && Ot(c(
          "div",
          {
            ref: "dropdownRef",
            role: "application",
            "aria-labelledby": this.idLocal,
            ariaHidden: !this.statusExpanded,
            ...this.dropdownAttributesLocal
          },
          [
            c(this.dropdownTag, {}, [
              this.$slots.dropdown && this.$slots.dropdown(),
              this.hasActions && this.actionsFiltered.map((e, t) => c(I0, {
                key: t,
                action: e,
                alwaysTranslate: this.alwaysTranslate
              }, this.$slots))
            ])
          ]
        ), [
          [_l, {
            mounted: this.startPopper
          }]
        ])
      ])
    ];
  }
};
function P0({
  htmlLocalOptions: e = _(() => {
  }),
  textLocalOptions: t = _(() => ({})),
  titleLocalOptions: n = _(() => ({}))
}) {
  const r = _(() => {
    var i, o, u, h;
    return ((i = t.value) == null ? void 0 : i.dataTranslateText) || ((o = e.value) == null ? void 0 : o.dataTranslateSafeHtml) || ((u = e.value) == null ? void 0 : u.dataTranslateHtml) || ((h = n.value) == null ? void 0 : h.title);
  });
  return {
    attributesLocal: _(() => {
      var o, u, h;
      const i = {};
      return (o = t.value) != null && o.dataTranslateText ? i["data-translate-text"] = t.value.dataTranslateText : (u = e.value) != null && u.dataTranslateSafeHtml ? i["data-translate-safe-html"] = e.value.dataTranslateSafeHtml : (h = e.value) != null && h.dataTranslateHtml && (i["data-translate-html"] = e.value.dataTranslateHtml), n.value.title && (i.title = n.value.title, n.value.dataTranslateTitle && (i["data-translate-title"] = n.value.dataTranslateTitle)), i;
    }),
    hasAttributesLocal: r
  };
}
function x0(e, {
  hasTextAfter: t = _(() => !1),
  hasTextBefore: n = _(() => !1),
  textAfterForCurrentDevice: r = _(() => ""),
  textBeforeForCurrentDevice: s = _(() => "")
}) {
  const i = d(e, "alwaysTranslate"), o = d(e, "extra"), u = d(e, "html"), h = d(e, "safeHtml"), {
    isPlaceholderTranslate: A,
    getTranslatedText: E
  } = Ms(), {
    isMobileWidth: p
  } = En(), {
    translationChanges: T
  } = Si(), S = _(() => nt(h.value) ? p.value ? h.value.mobile : h.value.desktop : h.value), b = _(() => nt(u.value) ? p.value ? u.value.mobile : u.value.desktop : u.value), L = _(() => me(h.value)), v = _(() => me(u.value)), I = _(() => L.value ? h.value.length > 0 : !Ce(S.value)), R = _(() => v.value ? u.value.length > 0 : !Ce(b.value)), g = _(() => n.value ? `<span>${s.value}</span>` : ""), D = _(() => t.value ? `<span>${r.value}</span>` : ""), w = _(() => {
    const P = {
      safeHtml: void 0,
      html: void 0,
      dataTranslateHtml: void 0,
      dataTranslateSafeHtml: void 0
    };
    if (!T.value)
      return P;
    if (I.value) {
      const F = L.value ? h.value : [S.value];
      let C = "", $ = "";
      z(F, (H) => {
        !H && H !== 0 || (C && (C += " ", $ += " "), A(H) ? (C += E({
          placeholder: H,
          extra: o.value,
          alwaysTranslate: i.value
        }), $ += H) : C += H);
      }), P.safeHtml = C || void 0, P.dataTranslateSafeHtml = $ || void 0;
    } else if (R.value) {
      const F = v.value ? u.value : [b.value];
      let C = "", $ = "";
      z(F, (H) => {
        !H && H !== 0 || (C && (C += " ", $ += " "), A(H) ? (C += Yo(E({
          placeholder: H,
          extra: o.value,
          alwaysTranslate: i.value
        })), $ += H) : C += Yo(H));
      }), P.html = ae(C) ? void 0 : C, P.dataTranslateHtml = ae($) ? void 0 : $;
    }
    return P;
  }), M = _(() => `${g.value}${w.value.safeHtml || w.value.html}${D.value}`);
  return {
    hasHtml: R,
    hasSafeHtml: I,
    htmlLocalOptions: w,
    htmlLocalWithBeforeAndAfter: M
  };
}
function Ol(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "extra"), r = d(e, "placeholder"), {
    translationChanges: s
  } = Si(), {
    isPlaceholderTranslate: i,
    getTranslatedText: o,
    getTranslationAttributes: u
  } = Ms(), {
    isMobileWidth: h
  } = En(), A = _(() => nt(r.value) ? h.value ? r.value.mobile : r.value.desktop : r.value), E = _(() => !Ce(A.value)), p = _(() => !(!E.value || !i(A.value))), T = _(() => {
    if (s.value)
      return p.value ? o({
        placeholder: A.value,
        extra: n.value,
        alwaysTranslate: t.value
      }) : A.value;
  }), S = _(() => {
    const b = {};
    return E.value ? u({
      attr: "placeholder",
      translation: T.value,
      value: A.value,
      isTranslate: p.value
    }) : b;
  });
  return {
    hasPlaceholder: E,
    placeholderAttributes: S
  };
}
function F0({
  hasAriaLabel: e,
  hasAttributesLocal: t,
  hasPlaceholder: n,
  hasTextAfter: r,
  hasTextBefore: s
}) {
  return {
    hasRestAttributes: _(() => e.value || t.value || n.value || r.value || s.value)
  };
}
function M0(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "extra"), r = d(e, "text"), {
    isPlaceholderTranslate: s,
    getTranslatedText: i
  } = Ms(), {
    isMobileWidth: o
  } = En(), {
    translationChanges: u
  } = Si(), h = _(() => nt(r.value) ? o.value ? r.value.mobile : r.value.desktop : r.value), A = _(() => me(r.value)), E = _(() => A.value ? r.value.length > 0 : !Ce(h.value)), p = _(() => {
    const T = {
      text: void 0,
      dataTranslateText: void 0
    };
    if (!u.value)
      return T;
    if (E.value) {
      const S = A.value ? r.value : [h.value];
      let b = "", L = "";
      z(S, (v) => {
        !v && v !== 0 || (b && (b += " ", L += " "), s(v) ? (b += i({
          placeholder: v,
          extra: n.value,
          alwaysTranslate: t.value
        }), L += v) : b += v);
      }), T.text = b || void 0, T.dataTranslateText = L || void 0;
    }
    return T;
  });
  return {
    hasText: E,
    textLocalOptions: p
  };
}
function q0(e) {
  const t = d(e, "textAfter"), n = d(e, "textBefore"), {
    isMobileWidth: r
  } = En(), s = _(() => nt(t.value) ? r.value ? t.value.mobile : t.value.desktop : t.value), i = _(() => nt(n.value) ? r.value ? n.value.mobile : n.value.desktop : n.value), o = _(() => !ae(s.value) && s.value !== ""), u = _(() => !ae(i.value) && i.value !== "");
  return {
    hasTextAfter: o,
    hasTextBefore: u,
    textAfterForCurrentDevice: s,
    textBeforeForCurrentDevice: i
  };
}
function $0(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "extra"), r = d(e, "title"), {
    isPlaceholderTranslate: s,
    getTranslatedText: i
  } = Ms(), {
    isMobileWidth: o
  } = En(), {
    translationChanges: u
  } = Si(), h = _(() => nt(r.value) ? o.value ? r.value.mobile : r.value.desktop : r.value), A = _(() => me(r.value)), E = _(() => A.value ? r.value.length > 0 : !(ae(h.value) || h.value === ""));
  return {
    titleLocalOptions: _(() => {
      if (!u.value)
        return;
      const T = {
        title: void 0,
        dataTranslateTitle: void 0
      };
      if (!E.value)
        return T;
      const S = A.value ? r.value : [h.value];
      let b = "", L = "";
      return z(S, (v) => {
        !v && v !== 0 || (b && (b += " ", L += " "), s(v) ? (b += i({
          placeholder: v,
          extra: n.value,
          alwaysTranslate: t.value
        }), L += v) : b += v);
      }), T.title = b || void 0, T.dataTranslateTitle = L || void 0, T;
    })
  };
}
const Ae = {
  name: "ATranslation",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: ""
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: ""
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      hasTextAfter: t,
      hasTextBefore: n,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: s
    } = q0(e), {
      hasText: i,
      textLocalOptions: o
    } = M0(e), {
      hasHtml: u,
      hasSafeHtml: h,
      htmlLocalOptions: A,
      htmlLocalWithBeforeAndAfter: E
    } = x0(e, {
      hasTextAfter: t,
      hasTextBefore: n,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: s
    }), {
      titleLocalOptions: p
    } = $0(e), {
      hasPlaceholder: T,
      placeholderAttributes: S
    } = Ol(e), {
      ariaLabelAttributes: b,
      hasAriaLabel: L
    } = Oc(e), {
      attributesLocal: v,
      hasAttributesLocal: I
    } = P0({
      htmlLocalOptions: A,
      textLocalOptions: o,
      titleLocalOptions: p
    }), {
      hasRestAttributes: R
    } = F0({
      hasAriaLabel: L,
      hasAttributesLocal: I,
      hasPlaceholder: T,
      hasTextAfter: t,
      hasTextBefore: n
    });
    return {
      ariaLabelAttributes: b,
      attributesLocal: v,
      hasText: i,
      hasTextAfter: t,
      hasTextBefore: n,
      hasHtml: u,
      hasRestAttributes: R,
      hasSafeHtml: h,
      htmlLocalWithBeforeAndAfter: E,
      placeholderAttributes: S,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: s,
      textLocalOptions: o
    };
  },
  render() {
    return this.hasText ? c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes
    }, [
      this.textBeforeForCurrentDevice,
      this.textLocalOptions.text,
      this.$slots.default && this.$slots.default(),
      this.textAfterForCurrentDevice
    ]) : this.hasSafeHtml || this.hasHtml ? c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes,
      innerHTML: this.htmlLocalWithBeforeAndAfter
    }) : (this.hasRestAttributes || this.$slots.default) && c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes
    }, [
      this.textBeforeForCurrentDevice,
      this.$slots.default && this.$slots.default(),
      this.textAfterForCurrentDevice
    ]);
  }
}, k0 = {
  name: "AErrorsElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    error: {
      type: [Object, Array, String],
      required: !1,
      default: void 0
    },
    errorKey: {
      type: String,
      required: !1,
      default: void 0
    },
    errorLabels: {
      type: [String, Object],
      required: !0
    },
    goToError: {
      type: Function,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_errors_")
    },
    isErrorLink: {
      type: Boolean,
      required: !0
    }
  },
  setup(e) {
    const t = d(e, "errorLabels"), n = _(() => it(t.value) ? t.value : nt(t.value) ? t.value.label : ""), r = d(e, "isErrorLink"), s = _(() => nt(t.value) && t.value.link && r.value), i = d(e, "error"), o = _(() => it(i.value)), u = _(() => me(i.value)), h = _(() => nt(i.value)), A = _(() => me(t.value)), E = d(e, "id"), p = _(() => fe(t.value, "id") || E.value), T = d(e, "goToError"), S = d(e, "errorKey"), b = () => {
      if (Fe(T.value))
        return T.value({
          id: p.value,
          key: S.value
        });
      let v = p.value;
      if (ae(S.value) || (v = `${v}_${S.value}`), mi(v) > 0) {
        const I = document.getElementById(v);
        I && I.focus();
      }
    };
    return {
      currentLabel: n,
      goToErrorLocal: b,
      isErrorArray: u,
      isErrorLabelsArray: A,
      isErrorLinkLocal: s,
      isErrorObject: h,
      isErrorString: o,
      onKeydown: (v) => {
        (v.keyCode === X.enter || v.keyCode === X.space) && (b(), v.stopPropagation(), v.preventDefault());
      }
    };
  },
  render() {
    return c("div", {
      class: "a_error__list__li"
    }, [
      this.isErrorString ? this.isErrorLinkLocal ? c(be, {
        type: "link",
        class: "a_errors__label a_btn a_btn_link a_p_0",
        tabindex: 0,
        "aria-describedby": this.id,
        safeHtml: this.currentLabel,
        textTag: "strong",
        textAfter: ":",
        onClick: this.goToErrorLocal,
        onKeydown: this.onKeydown
      }) : c("div", {
        class: "a_errors__label",
        "aria-describedby": this.id
      }, [
        c(Ae, {
          tag: "strong",
          safeHtml: this.currentLabel
        })
      ]) : "",
      c(
        "div",
        {
          id: this.id,
          class: "a_errors__errors"
        },
        this.isErrorString ? [
          c(Ae, {
            alwaysTranslate: this.alwaysTranslate,
            tag: "span",
            html: this.error
          })
        ] : this.isErrorArray ? [...this.error.map((e, t) => c(Ur("AErrorsElement"), {
          key: t,
          error: e,
          alwaysTranslate: this.alwaysTranslate,
          errorLabels: this.isErrorLabelsArray ? this.errorLabels[t] || this.errorLabels : this.errorLabels,
          goToError: this.goToError,
          isErrorLink: this.isErrorLink
        }))] : this.isErrorObject ? [
          c("div", {
            class: "a_pl_2"
          }, [
            ...Object.keys(this.error).map((e) => c(Ur("AErrorsElement"), {
              key: e,
              alwaysTranslate: this.alwaysTranslate,
              error: this.error[e],
              errorLabels: this.errorLabels[e] || this.errorLabels,
              goToError: this.goToError,
              isErrorLink: this.isErrorLink
            }))
          ])
        ] : []
      )
    ]);
  }
};
function U0({ emit: e }) {
  return {
    close: () => {
      e("close");
    }
  };
}
function H0(e) {
  const t = d(e, "errors");
  return {
    hasErrors: _(() => !hn(t.value))
  };
}
function V0(e, {
  hasErrors: t = _(() => !1)
}) {
  const n = d(e, "autoFocus"), r = B(void 0);
  return {
    elRef: r,
    setFocusToElement: () => {
      n.value && t.value && setTimeout(() => {
        r.value.$el.focus();
      });
    }
  };
}
function W0(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = d(e, "errors"), r = _(() => n.value ? it(n.value) ? !0 : me(n.value) ? !!mi(n.value) : !1 : !1);
  return {
    errorsId: _(() => `${t.value}_errors_text`),
    isErrors: r
  };
}
function Xt(e, { emit: t }) {
  const n = d(e, "change"), r = d(e, "disabled"), s = d(e, "helpText"), i = d(e, "htmlId"), o = d(e, "id"), u = d(e, "idPrefix"), h = d(e, "modelUndefined"), A = d(e, "modelValue"), E = B(!1), p = _(() => cl({
    id: o.value,
    idPrefix: u.value,
    htmlId: i.value
  })), {
    errorsId: T,
    isErrors: S
  } = W0(e, {
    htmlIdLocal: p
  }), b = ({ model: w, currentModel: M, item: P }) => {
    t("update:modelValue", w), n.value({
      currentModel: M,
      id: o.value,
      item: P,
      model: w,
      props: hp(e)
    });
  }, L = _(() => !!(A.value || A.value === 0)), v = () => {
    r.value || b({
      model: h.value
    });
  }, I = _(() => `${p.value}_help_text`);
  return {
    ariaDescribedbyLocal: _(() => {
      let w = "";
      return s.value && (w += I.value), S.value && (w && (w += " "), w += T.value), w || void 0;
    }),
    changeModel: b,
    clearModel: v,
    errorsId: T,
    helpTextId: I,
    htmlIdLocal: p,
    isErrors: S,
    isFocus: E,
    isModel: L,
    onBlur: (w) => {
      E.value = !1, t("blur", {
        event: w,
        props: e
      });
    },
    onFocus: (w) => {
      E.value = !0, t("focus", {
        event: w,
        props: e
      });
    }
  };
}
function cl({ id: e, idPrefix: t, htmlId: n }) {
  return n || `${t || ""}${e}`;
}
function G0(e) {
  const t = d(e, "optionsList"), n = d(e, "idPrefix"), r = (i) => {
    let o = {};
    return z(i, (u) => {
      o[u.id] = {
        label: u.labelError || u.label,
        link: Ce(u.isErrorLink) ? !0 : u.isErrorLink,
        id: cl({
          id: u.id,
          idPrefix: u.idPrefix || n.value,
          htmlId: u.htmlId
        })
      }, u.children && u.children.length && (o = {
        ...o,
        ...r(u.children)
      });
    }), o;
  };
  return {
    labelsLocal: _(() => {
      let i = {};
      return t.value.forEach((o) => {
        i[o.id] = {
          label: o.labelError || o.label,
          link: Ce(o.isErrorLink) ? !0 : o.isErrorLink,
          id: cl({
            id: o.id,
            idPrefix: o.idPrefix || n.value,
            htmlId: o.htmlId
          })
        }, o.children && o.children.length && (i = {
          ...i,
          ...r(o.children)
        });
      }), i;
    })
  };
}
const K0 = {
  name: "AErrors",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closable: {
      type: Boolean,
      required: !1,
      default: !0
    },
    goToError: {
      type: Function,
      required: !1,
      default: void 0
    },
    optionsList: {
      type: Array,
      required: !1,
      default: () => []
    },
    autoFocus: {
      type: Boolean,
      required: !1,
      default: !0
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: "Bitte überprüfen Sie Ihre Eingaben."
    },
    isErrorLink: {
      type: Boolean,
      required: !1,
      default: !0
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      hasErrors: n
    } = H0(e), {
      elRef: r,
      setFocusToElement: s
    } = V0(e, {
      hasErrors: n
    }), {
      labelsLocal: i
    } = G0(e), {
      close: o
    } = U0(t);
    return rt(n, () => {
      s();
    }), Wr(() => {
      s();
    }), {
      close: o,
      elRef: r,
      hasErrors: n,
      labelsLocal: i
    };
  },
  render() {
    return c(gc, {
      ref: "elRef",
      alwaysTranslate: this.alwaysTranslate,
      tabindex: -1,
      role: "alert",
      "aria-atomic": !0,
      isVisible: this.hasErrors,
      closable: this.closable,
      onClose: this.close
    }, () => [
      this.hasErrors && c("div", {
        class: "a_errors"
      }, [
        c("div", {
          class: "a_errors__header"
        }, [
          c("strong", null, this.textErrorHeader)
        ]),
        c("div", {
          class: "a_errors__list"
        }, [
          ...Object.keys(this.errors).map((e) => c(k0, {
            key: e,
            alwaysTranslate: this.alwaysTranslate,
            error: this.errors[e],
            errorLabels: this.labelsLocal[e] || this.labelsLocal,
            goToError: this.goToError,
            isErrorLink: this.isErrorLink
          }))
        ])
      ])
    ]);
  }
}, ln = {
  name: "AErrorsText",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const t = d(e, "errors");
    return {
      errorsLocal: _(() => it(t.value) ? [t.value] : t.value)
    };
  },
  render() {
    return c("ul", {
      id: this.id,
      class: "a_form_element__invalid_text"
    }, [
      this.errorsLocal.map((e) => c("li", null, e))
    ]);
  }
};
function j0(e, { emit: t }) {
  const n = d(e, "change"), r = d(e, "modelValue");
  return {
    onUpdateModelLocal: ({ currentModel: i, id: o, item: u, model: h, props: A, component: E }) => {
      const p = pe(r.value || {});
      Lc(p, o, pe(h)), t("update:modelValue", p), n.value({ currentModel: i, id: o, item: u, fullModel: p, model: h, props: A }), Fe(E.change) && E.change({ currentModel: i, id: o, item: u, fullModel: p, model: h, props: A });
    }
  };
}
function z0(e) {
  const t = d(e, "classColumns"), n = "a_form_element_readonly_value_fieldset";
  return {
    classColumnsReadonly: _(() => nt(t.value) ? {
      ...t.value,
      [n]: !0
    } : it(t.value) && t.value.length ? `${t.value} ${n}` : n)
  };
}
function Y0({
  isBtnShowPasswordVisible: e = _(() => !1),
  isClearButtonLocal: t = _(() => !1)
}) {
  return {
    inputClassBtns: _(() => {
      if (e.value)
        return t.value ? "a_form_element_with_two_btns" : "a_form_element_with_one_btn";
      if (t.value)
        return "a_form_element_with_one_btn";
    })
  };
}
function X0(e) {
  const t = d(e, "modelValue"), n = d(e, "type");
  return {
    modelValueLocal: _(() => n.value === "color" && !t.value ? "#000000" : t.value)
  };
}
function Z0(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "disabled"), r = d(e, "type"), s = B(void 0);
  return {
    inputRef: s,
    onInput: (o) => {
      if (n.value)
        return;
      let u = o.target.value;
      r.value === "integer" && (u = u.replace(/\D/g, ""), u !== "" && (u = +u), s.value.value = u), r.value === "number" && u !== "" && (u = +u), t({
        model: u
      });
    }
  };
}
const XT = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01757813,0,0,0.0175781,-0.02634961,0.65854895)"
  >
    <path
      d="m 318.642,688.822 44.574,-80.57 q -49.718,-35.998 -77.712,-90.858 -27.994,-54.86 -27.999,-116.002 0,-69.147 34.857,-128.572 Q 161.506,339.676 74.649,474.533 170.076,621.96 318.651,688.819 Z M 540.925,255.106 q 0,-11.42 -8.004,-19.424 -8.004,-8.004 -19.424,-8.004 -71.429,0 -122.571,51.142 -51.142,51.142 -51.142,122.571 0,11.42 8.004,19.424 8.004,8.004 19.424,8.004 11.42,0 19.424,-8.004 8.004,-8.004 8.004,-19.424 0,-49.143 34.857,-83.997 34.857,-34.854 83.997,-34.857 11.42,0 19.424,-8.004 8.004,-8.004 8.004,-19.424 z M 748.354,145.968 q 0,4.001 -0.584,5.141 -60.003,107.428 -179.999,323.427 -119.996,215.999 -180.573,324 l -27.999,50.859 q -5.725,9.142 -16.006,9.142 -6.864,0 -76.57,-40 -9.142,-5.725 -9.142,-16.006 0,-6.864 25.149,-49.718 Q 200.917,715.671 132.062,653.954 63.207,592.237 12.919,513.955 1.499,496.244 1.499,474.522 q 0,-21.722 11.42,-39.433 87.429,-134.286 217.143,-211.999 129.714,-77.713 283.429,-77.712 50.859,0 102.861,9.725 l 30.855,-55.425 q 5.725,-9.142 16.006,-9.142 2.863,0 10.282,3.418 7.419,3.418 17.711,8.865 10.292,5.447 18.858,10.564 8.566,5.117 18.008,10.564 9.442,5.447 11.143,6.566 9.142,5.725 9.142,15.423 z m 21.143,255.427 q 0,79.43 -45.141,144.859 -45.141,65.429 -119.429,94 l 160,-286.857 q 4.57,25.711 4.57,48 z m 256.002,73.144 q 0,20.008 -11.42,39.433 -22.287,36.571 -62.285,82.856 -85.714,98.284 -198.568,152.568 -112.854,54.284 -239.713,54.285 l 42.284,-75.43 q 121.144,-10.282 224.285,-78.29 103.141,-68.008 172.286,-175.429 -65.711,-102.285 -161.146,-168 l 35.998,-64.004 q 54.285,36.571 104.285,87.429 50,50.858 82.572,105.143 11.42,19.424 11.42,39.433 z"
    />
  </g>
</svg>`, ZT = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01752671,0,0,0.01752691,-1.7526709e-5,0.68479724)"
  >
    <path
      d="M 953.646,474.431 Q 866.534,339.176 735.292,272.123 q 34.959,59.601 34.959,128.952 0,106.025 -75.367,181.39 -75.367,75.365 -181.39,75.367 -106.023,0.002 -181.39,-75.367 -75.367,-75.369 -75.367,-181.39 0,-69.35 34.959,-128.952 -131.243,67.052 -218.354,202.308 76.223,117.492 191.132,187.121 114.909,69.629 249.018,69.633 134.109,0.004 249.018,-69.633 114.909,-69.637 191.132,-187.121 z M 541.004,254.353 q 0,-11.454 -8.027,-19.481 -8.027,-8.027 -19.481,-8.027 -71.639,0 -122.932,51.293 -51.293,51.293 -51.293,122.932 0,11.454 8.027,19.481 8.027,8.027 19.481,8.027 11.454,0 19.481,-8.027 8.027,-8.027 8.027,-19.481 0,-49.288 34.959,-84.246 34.959,-34.958 84.246,-34.959 11.454,0 19.481,-8.027 Q 541,265.811 541,254.357 Z m 486.001,220.078 q 0,19.481 -11.454,39.549 Q 935.316,645.795 799.773,725.169 664.23,804.543 513.503,804.546 362.776,804.549 227.233,724.882 91.69,645.215 11.455,513.974 0.001,493.906 0.001,474.425 q 0,-19.481 11.454,-39.549 80.235,-131.243 215.778,-210.908 135.543,-79.665 286.27,-79.664 150.727,0.001 286.27,79.664 135.543,79.663 215.778,210.908 11.454,20.068 11.454,39.549 z"
    />
  </g>
</svg>`;
function J0(e, {
  setTypeLocal: t = () => {
  },
  typeForInput: n = _(() => "")
}) {
  const r = d(e, "showPassword"), s = d(e, "type"), i = _(() => !!(s.value === "password" && r.value)), o = _(() => n.value === "password"), u = _(() => o.value ? XT : ZT), h = () => {
    t({
      type: o.value ? "text" : "password"
    });
  }, A = _(() => o.value ? "_A_INPUT_SHOW_PASSWORD_" : "_A_INPUT_HIDE_PASSWORD_");
  return {
    iconBtnShowPassword: u,
    isBtnShowPasswordVisible: i,
    titleBtnShowPassword: A,
    toggleTypePassword: h
  };
}
function Q0(e) {
  const t = d(e, "modelValue"), n = d(e, "readonlyPasswordLength"), r = d(e, "readonlyPasswordSymbol"), s = d(e, "showPassword"), i = d(e, "type");
  return {
    modelValueReadonly: _(() => i.value === "password" ? s.value ? t.value : r.value.repeat(n.value) : t.value)
  };
}
function eM(e) {
  const t = d(e, "type"), n = B(void 0), r = _(() => n.value === "integer" ? "text" : n.value);
  return {
    setTypeLocal: ({ type: i } = {}) => {
      i ? n.value = i : n.value = t.value;
    },
    typeForInput: r
  };
}
const vn = {
  name: "AInput",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_input_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    maxlength: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    readonlyPasswordLength: {
      type: Number,
      required: !1,
      default: 8,
      validator: (e) => e > 0 && fa(e)
    },
    readonlyPasswordSymbol: {
      type: String,
      required: !1,
      default: "*"
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    showPassword: {
      type: Boolean,
      required: !1,
      default: !0
    },
    step: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "text"
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const n = d(e, "type"), {
      disabledAttribut: r
    } = wl(e), {
      setTypeLocal: s,
      typeForInput: i
    } = eM(e), {
      attributesToExcludeFromRender: o
    } = Bt(e), {
      componentStyleHide: u
    } = Jt(e), {
      ariaDescribedbyLocal: h,
      changeModel: A,
      clearModel: E,
      errorsId: p,
      helpTextId: T,
      htmlIdLocal: S,
      isErrors: b,
      isModel: L,
      onBlur: v,
      onFocus: I
    } = Xt(e, t), {
      isClearButtonLocal: R
    } = ku(e, {
      isModel: L
    }), {
      inputRef: g,
      onInput: D
    } = Z0(e, {
      changeModel: A
    }), {
      iconBtnShowPassword: w,
      isBtnShowPasswordVisible: M,
      titleBtnShowPassword: P,
      toggleTypePassword: F
    } = J0(e, {
      setTypeLocal: s,
      typeForInput: i
    }), {
      isAutofill: C
    } = rf({ inputRef: g }), {
      inputClassBtns: $
    } = Y0({
      isBtnShowPasswordVisible: M,
      isClearButtonLocal: R
    }), {
      placeholderAttributes: H
    } = Ol(e), {
      modelValueLocal: j
    } = X0(e), {
      modelValueReadonly: le
    } = Q0(e);
    return rt(n, () => {
      s();
    }), s(), {
      ariaDescribedbyLocal: h,
      attributesToExcludeFromRender: o,
      clearModel: E,
      componentStyleHide: u,
      disabledAttribut: r,
      errorsId: p,
      helpTextId: T,
      htmlIdLocal: S,
      iconBtnShowPassword: w,
      inputClassBtns: $,
      inputRef: g,
      isAutofill: C,
      isBtnShowPasswordVisible: M,
      isClearButtonLocal: R,
      isErrors: b,
      isModel: L,
      modelValueLocal: j,
      modelValueReadonly: le,
      onBlur: v,
      onFocus: I,
      onInput: D,
      placeholderAttributes: H,
      titleBtnShowPassword: P,
      toggleTypePassword: F,
      typeForInput: i
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(gn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.modelValueReadonly,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: this.type
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel || this.isAutofill,
          a_form_element__parent_float_has_icon_prepend: this.iconPrepend
        }]
      }, [
        this.label || this.labelScreenReader ? c(Mt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type
        }) : "",
        c("div", {
          class: "a_form_element"
        }, [
          this.iconPrepend && c(ut, {
            icon: this.iconPrepend,
            class: "a_input__icon_prepend"
          }),
          c("input", {
            ref: "inputRef",
            id: this.htmlIdLocal,
            autocomplete: this.autocomplete,
            value: this.modelValueLocal,
            type: this.typeForInput,
            class: [
              "a_form_control a_input",
              this.inputClass,
              this.inputClassBtns,
              {
                a_form_control_invalid: this.isErrors
              }
            ],
            disabled: this.disabledAttribut,
            ariaRequired: this.required,
            ariaInvalid: this.isErrors,
            "aria-describedby": this.ariaDescribedbyLocal,
            maxlength: this.maxlength,
            step: this.step,
            ...this.placeholderAttributes,
            ...this.inputAttributes,
            onInput: this.onInput,
            onFocus: this.onFocus,
            onBlur: this.onBlur
          }),
          this.isBtnShowPasswordVisible || this.isClearButtonLocal ? c("div", {
            class: "a_form_control__actions"
          }, [
            this.isBtnShowPasswordVisible ? c(ft, {
              alwaysTranslate: this.alwaysTranslate,
              class: "a_btn a_btn_transparent_dark a_btn_small a_form_control__actions__btn",
              iconLeft: this.iconBtnShowPassword,
              type: "button",
              title: this.titleBtnShowPassword,
              textScreenReader: this.titleBtnShowPassword,
              disabled: this.disabled,
              onClick: this.toggleTypePassword
            }) : "",
            this.isClearButtonLocal ? c(Du, {
              alwaysTranslate: this.alwaysTranslate,
              disabled: this.disabled,
              class: this.clearButtonClass,
              onClear: this.clearModel
            }) : ""
          ]) : ""
        ]),
        c(Zt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(ln, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function tM(e, {
  adjustFloatPartAndDivider: t = () => {
  },
  ensurePrecision: n = () => {
  },
  setCurrentValue: r = () => {
  },
  modelNumber: s = _(() => {
  })
}) {
  const i = d(e, "decimalDivider"), o = d(e, "disabled"), u = d(e, "modelValue"), h = d(e, "max"), A = d(e, "min"), E = d(e, "step"), p = _(() => s.value <= A.value), T = _(() => s.value >= h.value), S = () => {
    const I = t(h.value);
    r(I);
  }, b = () => {
    const I = t(A.value);
    r(I);
  };
  return {
    increase: () => {
      if (o.value || T.value)
        return;
      const I = s.value, R = n({
        value: I,
        currentValue: u.value
      }).replace(".", i.value);
      if (I + E.value > h.value) {
        S();
        return;
      }
      r(t(R));
    },
    decrease: () => {
      if (o.value || p.value)
        return;
      const I = s.value, R = n({
        value: I,
        currentValue: u.value,
        coefficient: -1
      }).replace(".", i.value);
      if (I - E.value < A.value) {
        b();
        return;
      }
      r(t(R));
    }
  };
}
function nM(e, {
  adjustFloatPartAndDivider: t = () => {
  },
  decrease: n = () => {
  },
  getCleanIntValue: r = () => {
  },
  increase: s = () => {
  },
  modelNumber: i = _(() => {
  }),
  modelUndefinedLocal: o = _(() => {
  }),
  onBlur: u = () => {
  },
  setCurrentValue: h = () => {
  }
}) {
  const A = d(e, "decimalDivider"), E = B(void 0), p = d(e, "max"), T = d(e, "min"), S = d(e, "modelValue"), b = d(e, "readonly"), L = d(e, "required"), v = d(e, "decimalPartLength"), I = d(e, "thousandDivider"), R = d(e, "validationOnChange"), g = B(0), D = navigator.userAgent.indexOf("Firefox") !== -1 ? 1 : 0, w = [
    X.tab,
    X.del,
    X.escape,
    X.backspace,
    X.arrowLeft,
    X.arrowRight,
    X.home,
    X.end
  ], M = _(() => !v.value), P = (V) => Number(`${V}`.replaceAll(I.value, "").replace(A.value, ".")), F = (V, Q) => {
    h(V, Q);
  }, C = (V) => {
    setTimeout(() => {
      E.value.setSelectionRange(V, V);
    });
  }, $ = () => {
    const V = t(p.value);
    F(V);
  }, H = () => {
    const V = t(T.value);
    F(V);
  }, j = (V) => {
    const Q = P(V);
    if (Q > p.value)
      return $(), !0;
    if (Q < T.value)
      return H(), !0;
  }, le = (V, Q, re = !1) => {
    var At, Et;
    if (!L.value && ae(Q) && !((At = V == null ? void 0 : V.target) != null && At.value)) {
      F(Q, re);
      return;
    }
    let ve;
    re ? ve = typeof Q == "number" ? `${Q}`.replace(".", A.value) : Q : ve = ae(Q) ? V.target.value : `${Q}`;
    const qe = ve.indexOf(A.value) !== -1, Xe = (Et = E.value) == null ? void 0 : Et.selectionStart, Me = ve.split(A.value), xe = Me[0].length && Me[0][0] === "-" ? "-" : "", at = Number(Me[0].replace(/[^0-9]/g, "")).toString(), Ve = Me[1] ? Me[1].substring(0, v.value) : "";
    if (ae(at) || at === "")
      return;
    const st = I.value ? r({ value: at, thousandDivider: I.value }) : at;
    let Ze;
    if (M.value)
      Ze = `${xe}${st}`;
    else if (re) {
      const qt = Ve || "", pn = lr(v.value - qt.length, () => "0").join("");
      Ze = `${xe}${st}${A.value}${qt}${pn}`;
    } else Ve ? Ze = `${xe}${st}${A.value}${Ve}` : qe ? Ze = `${xe}${st}${A.value}` : Ze = `${xe}${st}`;
    R.value && j(Ze) || (F(Ze, re), C(Xe));
  }, ee = ({ value: V }) => {
    T.value >= 0 || V[0] !== "-" && (g.value++, setTimeout(() => {
      const Q = `-${V}`;
      R.value && j(Q) || (F(Q), g.value--);
    }, D));
  }, _e = ({ value: V }) => {
    V[0] === "-" && (g.value++, setTimeout(() => {
      const Q = V.replace("-", "");
      R.value && j(Q) || (F(Q), g.value--);
    }, D));
  }, ie = ({ value: V }) => {
    g.value++, setTimeout(() => {
      const Q = E.value.selectionStart;
      if (I.value && V[Q - 1] === I.value) {
        const re = Q - 1;
        C(re);
      }
      g.value--;
    }, D);
  }, ue = ({ value: V }) => {
    setTimeout(() => {
      g.value++;
      const Q = E.value.selectionStart;
      if (I.value && V[Q - 1] === I.value) {
        const re = Q + 1;
        C(re);
      }
      g.value--;
    }, D);
  }, Te = ({ value: V, cursorPosition: Q }, re) => {
    setTimeout(() => {
      g.value++;
      let ve = E.value.value;
      if (re) {
        const De = V.length + 1;
        ve[ve.length - 1] === A.value && (ve += lr(v.value, () => "0").join(""), F(ve), C(De));
      } else {
        const De = V.substring(0, Q).split("").reverse().join("").replaceAll(I.value, "").match(/.{1,3}/g).join(I.value).split("").reverse().join("");
        let qe = V.substring(Q, V.length).replace(/[^0-9]/g, "").substring(0, v.value);
        qe = `${qe}${lr(v.value - qe.length, () => "0").join("")}`;
        const Xe = [
          De,
          qe
        ].join(A.value);
        F(Xe), C(De.length + 1);
      }
      g.value--;
    });
  }, Pe = ({ cursorPosition: V, numberOfSymbols: Q }) => {
    let re = V && V - 1;
    E.value.value.length < Q - 1 && re > 0 && re--, C(re);
  }, Se = ({ hasDecimalDivider: V, value: Q, cursorPosition: re }) => {
    const ve = Q.length;
    if (!M.value) {
      const De = Q.indexOf(A.value);
      if (V && De === re - 1) {
        const Xe = Q.split(A.value)[0];
        g.value++, setTimeout(() => {
          Pe({ cursorPosition: re, numberOfSymbols: ve }), F(Xe), g.value--;
        }, D);
        return;
      }
      g.value++, setTimeout(() => {
        Pe({ cursorPosition: re, numberOfSymbols: ve }), g.value--;
      }, D);
    }
  }, se = ({ value: V, $event: Q, hasDecimalDivider: re, cursorPosition: ve }) => {
    if (!M.value && re && V[ve] === A.value) {
      const qe = V.split(A.value)[0];
      F(qe), C(ve);
      return;
    }
    if (I.value)
      if (V[ve] === I.value) {
        Q.preventDefault();
        const De = ve, qe = V.split(A.value), Xe = qe[0], Me = qe[1];
        let xe = Xe.split("");
        xe.splice(ve + 1, 1), xe = xe.reverse().join("").replaceAll(I.value, "").match(/.{1,3}/g).join(I.value).split("").reverse().join("");
        let at;
        M.value ? at = xe : Me ? at = `${xe}${A.value}${Me}` : re ? at = `${xe}${A.value}` : at = xe, F(at), C(De + 1);
      } else
        setTimeout(() => {
          g.value++, E.value.value.length < V.length - 1 && C(ve > 0 ? ve - 1 : 0), g.value--;
        }, D);
  };
  return {
    handleInput: le,
    handleKeydown: (V) => {
      if (g.value) {
        V.preventDefault();
        return;
      }
      const Q = V.target.value, re = V.keyCode, ve = V.key, De = re >= 48 && re <= 57 || re >= 96 && re <= 105, qe = ve === A.value && !!v.value, Xe = V.target.value.indexOf(A.value), Me = Xe !== -1, xe = E.value.selectionStart, at = xe === Q.length, Ve = {
        value: Q,
        hasDecimalDivider: Me,
        cursorPosition: xe,
        $event: V
      };
      if (re === X.arrowUp) {
        s(), V.preventDefault();
        return;
      }
      if (re === X.arrowDown) {
        n(), V.preventDefault();
        return;
      }
      if (re === X.minus || re === X.numMinus) {
        ee(Ve), V.preventDefault();
        return;
      }
      if (re === X.plus && V.shiftKey || re === X.numPlus) {
        _e(Ve), V.preventDefault();
        return;
      }
      if (re === X.arrowLeft) {
        ie(Ve);
        return;
      }
      if (re === X.arrowRight) {
        ue(Ve);
        return;
      }
      if (qe) {
        if (Me) {
          C(Xe + 1), V.preventDefault();
          return;
        }
        at || V.preventDefault(), Te(Ve, at);
        return;
      }
      if (V.keyCode === X.backspace) {
        if (E.value.selectionStart !== E.value.selectionEnd)
          return;
        Se(Ve);
        return;
      }
      if (V.keyCode === X.del) {
        se(Ve);
        return;
      }
      if (De && !V.ctrlKey && Me) {
        const st = Q.indexOf(A.value);
        if (xe > st && Q.split(A.value)[1].length === v.value) {
          if (at) {
            V.preventDefault();
            return;
          }
          V.preventDefault();
          const Et = Q.split("");
          Et[xe] = ve;
          const qt = Et.join("");
          F(qt), g.value++, setTimeout(() => {
            C(xe + 1), g.value--;
          }, D);
          return;
        }
      }
      if (!De && !V.ctrlKey && !Cd(w, V.keyCode) && V.preventDefault(), V.keyCode !== X.home && V.keyCode !== X.end && !V.ctrlKey && V.keyCode)
        if (xe === 0 && Q.length && Q[0] === "0") {
          V.preventDefault();
          const st = `${ve}${Q.slice(1)}`;
          F(st), C(1);
        } else {
          const st = Q.length;
          g.value++, setTimeout(() => {
            let Ze = xe + 1;
            const At = E.value.value.length;
            At - 1 > st ? Ze++ : At === st && Ze--, C(Ze), g.value--;
          }, D);
        }
    },
    handlePaste: (V) => {
      var At;
      V.preventDefault();
      const re = (V.clipboardData || window.clipboardData).getData("text").split(A.value), ve = re[0].replace(/[^0-9]/g, ""), De = ((At = re[1]) == null ? void 0 : At.replace(/[^0-9]/g, "")) || "";
      let qe;
      const Xe = E.value.selectionStart, Me = E.value.selectionEnd, xe = E.value.value, at = xe.indexOf(A.value) !== -1, st = xe.substring(Xe, Me).indexOf(A.value) !== -1;
      at && !st ? qe = De ? [ve, De].join("") : ve : qe = De ? [ve, De].join(A.value) : ve;
      const Ze = xe.slice(0, Xe) + qe + xe.slice(Me);
      le(null, Ze);
    },
    initFirstCheck: () => {
      b.value || setTimeout(() => {
        let V;
        if (S.value || S.value === 0) {
          if (V = S.value.toString().replace(".", A.value), A.value) {
            const Q = V.toString().split(A.value), re = Q[0], ve = re[0] === "-" ? "-" : "", De = Q.length > 1 ? Q[1] : "", qe = De.length, Xe = lr(v.value - qe, () => "0").join("");
            V = `${ve}${re}${A.value}${De}${Xe}`;
          }
        } else
          V = L.value ? [
            "0",
            A.value,
            lr(v.value, () => "0").join("")
          ].join("") : o.value;
        le(null, V, !0);
      });
    },
    inputRef: E,
    onBlurNumber: (V) => {
      let Q = V.target.value;
      if (M.value || (Q = Q.split(A.value)[0]), ae(Q) || Q === "") {
        if (L.value) {
          if (T.value > 0) {
            const ve = A.value ? `0${A.value}${lr(v.value, () => "0").join("")}` : "0";
            F(ve);
          } else
            H();
          u(V);
          return;
        }
        const re = o.value;
        F(re), u(V);
        return;
      } else if (i.value < T.value) {
        H();
        return;
      } else if (i.value > p.value) {
        $();
        return;
      }
      if (v.value) {
        let re = `${V.target.value}`;
        const De = re.split(A.value)[1];
        re.indexOf(A.value) === -1 ? re += `${A.value}${lr(v.value, () => "0").join("")}` : De.length < v.value && (re += `${lr(v.value - De.length, () => "0").join("")}`), F(re);
      }
      u(V);
    },
    onClickNumber: (V) => {
      g.value++, setTimeout(() => {
        const Q = V.target.selectionStart, re = V.target.value;
        I.value && I.value === re[Q - 1] && C(Q - 1), g.value--;
      });
    }
  };
}
function rM(e, {
  adjustFloatPartAndDivider: t = () => {
  },
  changeModel: n = () => {
  }
}) {
  const r = d(e, "required"), s = d(e, "modelValue"), i = d(e, "modelType"), o = d(e, "modelUndefined"), u = d(e, "decimalDivider"), h = d(e, "disabled"), A = d(e, "decimalPartLength"), E = d(e, "thousandDivider"), p = B(void 0), T = B(!1), S = B(void 0), b = () => {
    p.value = t(s.value), S.value = s.value;
  }, L = _(() => Number(`${p.value}`.replaceAll(E.value, "").replace(u.value, "."))), v = _(() => r.value ? [
    "0",
    u.value,
    lr(A.value, () => "0").join("")
  ].join("") : o.value), I = (g, D = !1) => {
    p.value = ae(g) ? "" : g;
    let w;
    !r.value && ae(g) ? w = v.value : w = i.value === "number" ? Number(`${g}`.replaceAll(E.value, "").replace(u.value, ".")) : g, D || (T.value = !0, S.value = w, n({ model: w }));
  };
  return {
    clearModel: () => {
      h.value || I(v.value);
    },
    displayValue: p,
    initLocalVars: b,
    isInternalChange: T,
    localModel: S,
    modelNumber: L,
    modelUndefinedLocal: v,
    setCurrentValue: I
  };
}
function aM(e) {
  const t = d(e, "decimalDivider"), n = d(e, "decimalPartLength"), r = d(e, "thousandDivider"), s = ({ value: o, thousandDivider: u }) => o.replaceAll(u, "").replaceAll("-", "").split("").reverse().join("").match(/.{1,3}/g).join(u).split("").reverse().join("");
  return {
    adjustFloatPartAndDivider: (o) => {
      if (ae(o))
        return "";
      if (t.value) {
        const u = typeof o == "number" ? o.toString().split(".") : o.toString().split(t.value), h = u[0], A = h[0] === "-" ? "-" : "", E = r.value ? s({ value: h, thousandDivider: r.value }) : h, p = u.length > 1 ? u[1] : "", T = p.length, S = lr(n.value - T, () => "0").join("");
        return `${A}${E}${t.value}${p}${S}`;
      }
      return o;
    },
    getCleanIntValue: s
  };
}
function hde(e) {
  return fa(e) ? Math.abs(e % 2) === 1 : !1;
}
function sM(e) {
  return fa(e) ? e % 2 === 0 : !1;
}
function $o(e, t) {
  if (t === 0)
    return Math.round(e);
  let n = String(e);
  const r = n.indexOf(".");
  if (r === -1 || !n.replace(".", "").split("")[r + t])
    return e;
  const o = n.length;
  return n.charAt(o - 1) === "5" && (n = `${n.slice(0, Math.max(0, o - 1))}6`), Number.parseFloat(Number(n).toFixed(t));
}
function iM(e) {
  const t = d(e, "step"), n = d(e, "decimalPartLength");
  return {
    ensurePrecision: ({ value: s, currentValue: i, coefficient: o = 1 }) => yn(s) ? $o(s + t.value * o, n.value).toString() : i
  };
}
function lM(e) {
  const t = d(e, "inputWidth");
  return {
    inputWidthStyleValue: _(() => {
      let r = t.value;
      return yn(t.value) && (r = `${t.value}px`), Ce(r) ? {} : {
        "--a_input_number_width": r
      };
    })
  };
}
const JT = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-dash" viewBox="0 0 16 16">
  <path d="M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8"/>
</svg>`, QT = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4"/>
</svg>`, oM = {
  name: "AInputCurrency",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    controlsType: {
      type: String,
      required: !1,
      default: () => an.propsDefault.controlsType,
      validator: (e) => ["plus-minus", "arrows", "none"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    currencySymbol: {
      type: String,
      required: !1,
      default: () => an.propsDefault.currencySymbol
    },
    currencySymbolPosition: {
      type: String,
      required: !1,
      default: () => an.propsDefault.currencySymbolPosition,
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    decimalDivider: {
      type: String,
      required: !1,
      default: () => an.propsDefault.decimalDivider,
      validator: (e, t) => {
        const n = t == null ? void 0 : t.thousandDivider;
        return n ? [".", ","].indexOf(e) !== -1 && e !== n : [".", ","].indexOf(e) !== -1;
      }
    },
    decimalPartLength: {
      type: Number,
      required: !1,
      default: () => an.propsDefault.decimalPartLength,
      validator: (e) => e >= 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: () => an.propsDefault.iconPrepend
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_input_currency_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    inputWidth: {
      type: [String, Number],
      required: !1,
      default: () => an.propsDefault.inputWidth
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: () => an.propsDefault.isLabelFloat
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: () => an.propsDefault.max
    },
    min: {
      type: Number,
      required: !1,
      default: () => an.propsDefault.min
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelType: {
      type: String,
      required: !1,
      default: "number",
      validator: (e) => ["number", "string"].indexOf(e) !== -1
    },
    modelUndefined: {
      required: !1,
      default: () => an.propsDefault.modelUndefined
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: () => an.propsDefault.placeholder
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    step: {
      type: Number,
      required: !1,
      default: () => an.propsDefault.step,
      validator: (e) => e > 0
    },
    thousandDivider: {
      type: String,
      required: !1,
      default: () => an.propsDefault.thousandDivider,
      validator: (e, t) => {
        const n = t == null ? void 0 : t.decimalDivider;
        return n ? [".", ",", " "].indexOf(e) !== -1 && e !== n : [".", ",", " "].indexOf(e) !== -1;
      }
    },
    validationOnChange: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const n = d(e, "modelValue"), {
      attributesToExcludeFromRender: r
    } = Bt(e), {
      componentStyleHide: s
    } = Jt(e), {
      adjustFloatPartAndDivider: i,
      getCleanIntValue: o
    } = aM(e), {
      ariaDescribedbyLocal: u,
      changeModel: h,
      errorsId: A,
      helpTextId: E,
      htmlIdLocal: p,
      isErrors: T,
      isModel: S,
      onBlur: b,
      onFocus: L
    } = Xt(e, t), {
      isClearButtonLocal: v
    } = ku(e, {
      isModel: S
    }), {
      placeholderAttributes: I
    } = Ol(e), {
      inputWidthStyleValue: R
    } = lM(e), {
      ensurePrecision: g
    } = iM(e), {
      clearModel: D,
      displayValue: w,
      initLocalVars: M,
      isInternalChange: P,
      localModel: F,
      modelNumber: C,
      modelUndefinedLocal: $,
      setCurrentValue: H
    } = rM(e, {
      adjustFloatPartAndDivider: i,
      changeModel: h
    }), {
      increase: j,
      decrease: le
    } = tM(e, {
      adjustFloatPartAndDivider: i,
      ensurePrecision: g,
      setCurrentValue: H,
      modelNumber: C
    }), {
      handleInput: ee,
      handleKeydown: _e,
      handlePaste: ie,
      initFirstCheck: ue,
      inputRef: Te,
      onBlurNumber: Pe,
      onClickNumber: Se
    } = nM(e, {
      adjustFloatPartAndDivider: i,
      decrease: le,
      getCleanIntValue: o,
      increase: j,
      modelNumber: C,
      modelUndefinedLocal: $,
      onBlur: b,
      setCurrentValue: H
    });
    return M(), ue(), rt(n, (se) => {
      P.value || (F.value = se, ee(null, se, !0)), P.value = !1;
    }), {
      ariaDescribedbyLocal: u,
      attributesToExcludeFromRender: r,
      clearModel: D,
      componentStyleHide: s,
      decrease: le,
      displayValue: w,
      errorsId: A,
      handleInput: ee,
      handleKeydown: _e,
      handlePaste: ie,
      helpTextId: E,
      htmlIdLocal: p,
      increase: j,
      inputRef: Te,
      inputWidthStyleValue: R,
      isClearButtonLocal: v,
      isErrors: T,
      isModel: S,
      onBlurNumber: Pe,
      onClickNumber: Se,
      onFocus: L,
      placeholderAttributes: I
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(gn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.displayValue,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "currency"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__container"
      }, [
        c("div", {
          class: ["a_form_element__parent", {
            a_form_element__parent_float: this.isLabelFloat,
            a_form_element__parent_not_empty: this.isModel,
            a_form_element__parent_float_has_icon_prepend: this.iconPrepend,
            a_form_element__parent_invalid: this.isErrors
          }]
        }, [
          (this.label || this.labelScreenReader) && !this.isLabelFloat ? c(Mt, {
            id: this.htmlIdLocal,
            extra: this.extra,
            isLabelFloat: this.isLabelFloat,
            isError: this.isErrors,
            label: this.label,
            labelClass: this.labelClass,
            labelScreenReader: this.labelScreenReader,
            required: this.required,
            type: "text"
          }) : "",
          c("div", {
            class: [
              "a_form_element_number",
              {
                a_form_element_number_controls: this.controlsType && this.controlsType !== "none"
              }
            ]
          }, [
            this.currencySymbol && this.currencySymbolPosition === "left" && c("span", {
              class: "a_form_element_number__currency_symbol"
            }, this.currencySymbol),
            c("div", {
              class: "a_form_element",
              style: {
                ...this.inputWidthStyleValue
              }
            }, [
              (this.label || this.labelScreenReader) && this.isLabelFloat ? c(Mt, {
                id: this.htmlIdLocal,
                isLabelFloat: this.isLabelFloat,
                isError: this.isErrors,
                label: this.label,
                labelClass: this.labelClass,
                labelScreenReader: this.labelScreenReader,
                required: this.required,
                type: "text"
              }) : "",
              this.iconPrepend && c(ut, {
                icon: this.iconPrepend,
                class: "a_input__icon_prepend"
              }),
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                autocomplete: this.autocomplete,
                value: this.displayValue,
                type: "text",
                class: [
                  "a_form_control a_input a_input_number",
                  this.inputClass,
                  {
                    a_form_element_with_one_btn: this.isClearButtonLocal,
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabled,
                ariaRequired: this.required,
                ariaInvalid: this.isErrors,
                "aria-describedby": this.ariaDescribedbyLocal,
                ...this.placeholderAttributes,
                ...this.inputAttributes,
                onInput: this.handleInput,
                onKeydown: this.handleKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlurNumber,
                onClick: this.onClickNumber,
                onPaste: this.handlePaste
              }),
              this.isClearButtonLocal ? c("div", {
                class: "a_form_control__actions"
              }, [
                c(Du, {
                  alwaysTranslate: this.alwaysTranslate,
                  disabled: !1,
                  class: this.clearButtonClass,
                  onClear: this.clearModel
                })
              ]) : ""
            ]),
            this.controlsType === "plus-minus" && c("div", {
              class: "a_btn_group"
            }, [
              c(be, {
                class: "a_btn a_btn_outline_secondary",
                iconLeft: JT,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_CURRENCY_BTN_DECREASE_",
                textScreenReader: "_A_INPUT_CURRENCY_BTN_DECREASE_",
                type: "button",
                onClick: this.decrease
              }),
              c(be, {
                class: "a_btn a_btn_outline_secondary",
                iconLeft: QT,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_CURRENCY_BTN_INCREASE_",
                textScreenReader: "_A_INPUT_CURRENCY_BTN_INCREASE_",
                type: "button",
                onClick: this.increase
              })
            ]),
            this.currencySymbol && this.currencySymbolPosition === "right" && c("div", {
              class: "a_form_element_number__currency_symbol"
            }, this.currencySymbol)
          ]),
          c(Zt, {
            id: this.helpTextId,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(ln, {
            id: this.errorsId,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
}, Zt = {
  name: "AFormHelpText",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    html: {
      type: [String, Number],
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  render() {
    return this.html && c(Ae, {
      id: this.id,
      alwaysTranslate: this.alwaysTranslate,
      class: "a_form_element__help_text",
      html: this.html,
      extra: this.extra
    });
  }
};
function em(e) {
  return `clickALabel_${e}`;
}
function uM(e, {
  idLabelLocal: t = _(() => ""),
  preventLocal: n = _(() => !1),
  stopLocal: r = _(() => !1)
}) {
  const s = d(e, "clickLabel"), i = d(e, "id");
  return {
    onClick: ({ $event: u }) => {
      Fe(s.value) && s.value({
        id: i.value,
        idLabel: t.value,
        $event: u
      }), n.value && (u == null || u.preventDefault()), r.value && (u == null || u.stopPropagation()), setTimeout(() => {
        Ct.$emit(em(i.value), {
          id: i.value,
          idLabel: t.value,
          $event: u
        });
      });
    }
  };
}
function _M(e, {
  hideForLocal: t = _(() => !1),
  hideIdLocal: n = _(() => !1)
}) {
  const r = d(e, "id"), s = d(e, "idSuffix"), i = d(e, "readonly"), o = _(() => {
    if (!n.value)
      return `${r.value}${s.value}`;
  });
  return {
    forLabelLocal: _(() => {
      if (!(t.value || i.value))
        return r.value;
    }),
    idLabelLocal: o
  };
}
function dM(e) {
  const t = d(e, "isLabelFloat"), n = d(e, "label"), r = d(e, "readonly"), s = d(e, "required"), i = _(() => !ae(n.value)), o = _(() => i.value ? n.value : void 0), u = _(() => s.value && i.value && !r.value ? "*" : ""), h = _(() => {
    if (t.value && !r.value)
      return o.value;
  });
  return {
    isLabel: i,
    labelLocal: o,
    textAfterLabel: u,
    titleLocal: h
  };
}
const pi = B({
  fieldset: !0,
  group: !0
}), zc = B({
  multiselect: !0,
  checkbox: !0
}), tm = B({
  dateRange: !0,
  integerNonNegativeRange: !0,
  integerPositiveRange: !0,
  integerRange: !0,
  numberRange: !0
}), cM = B({
  checkbox: !0,
  multiselect: !0,
  radio: !0,
  select: !0
}), fM = B({
  select: {
    hideFor: !0,
    prevent: !0
  },
  multiselect: {
    hideFor: !0,
    prevent: !0
  },
  file: {
    hideId: !0
  },
  // numberRange
  numberRange: {
    hideFor: !0,
    prevent: !0
  },
  integerNonNegativeRange: {
    hideFor: !0,
    prevent: !0
  },
  integerPositiveRange: {
    hideFor: !0,
    prevent: !0
  },
  integerRange: {
    hideFor: !0,
    prevent: !0
  },
  // numberRange /
  dateRange: {
    hideFor: !0,
    prevent: !0
  }
});
function hM(e) {
  const t = d(e, "hideFor"), n = d(e, "hideId"), r = d(e, "prevent"), s = d(e, "stop"), i = d(e, "type"), o = _(() => fM.value[i.value] || {}), u = ({ prop: T, propForType: S }) => Ce(T) ? S : T, h = _(() => u({
    prop: s.value,
    propForType: o.value.stop
  })), A = _(() => u({
    prop: r.value,
    propForType: o.value.prevent
  })), E = _(() => u({
    prop: n.value,
    propForType: o.value.hideId
  }));
  return {
    hideForLocal: _(() => u({
      prop: t.value,
      propForType: o.value.hideFor
    })),
    hideIdLocal: E,
    preventLocal: A,
    stopLocal: h
  };
}
const Mt = {
  name: "ALabel",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    clickLabel: {
      type: Function,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hideFor: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    hideId: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: "_label"
    },
    isError: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "label"
    },
    type: {
      type: String,
      required: !1
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = Bt(e), {
      hideForLocal: n,
      hideIdLocal: r,
      preventLocal: s,
      stopLocal: i
    } = hM(e), {
      forLabelLocal: o,
      idLabelLocal: u
    } = _M(e, {
      hideForLocal: n,
      hideIdLocal: r
    }), {
      isLabel: h,
      labelLocal: A,
      textAfterLabel: E,
      titleLocal: p
    } = dM(e), {
      onClick: T
    } = uM(e, {
      idLabelLocal: u,
      preventLocal: s,
      stopLocal: i
    });
    return {
      attributesToExcludeFromRender: t,
      forLabelLocal: o,
      idLabelLocal: u,
      isLabel: h,
      labelLocal: A,
      onClick: T,
      textAfterLabel: E,
      titleLocal: p
    };
  },
  render() {
    return c(be, {
      id: this.idLabelLocal,
      alwaysTranslate: this.alwaysTranslate,
      class: [
        "a_form_element_label",
        this.labelClass,
        this.isLabelFloat && !this.readonly ? "a_form_element_label_float" : "a_form_element_label_static",
        {
          a_form_element_label_error: this.isError,
          a_form_element_readonly_label: this.readonly
        }
      ],
      extra: this.extra,
      for: this.forLabelLocal,
      html: this.labelLocal,
      htmlScreenReader: this.labelScreenReader,
      loading: this.loading,
      loadingAlign: "right",
      loadingClass: "a_spinner_small a_form_element_label__spinner",
      tag: this.tag,
      textAfter: this.textAfterLabel,
      textAriaHidden: !!this.labelScreenReader,
      title: this.titleLocal,
      type: "text",
      onClick: this.readonly ? this.onClick : void 0,
      ...this.attributesToExcludeFromRender
    });
  }
};
function Jt(e) {
  const t = d(e, "dependencies"), n = d(e, "isHide"), r = d(e, "modelDependencies"), s = ({ id: u, value: h }) => {
    var A;
    return ((A = r.value) == null ? void 0 : A[u]) === h;
  }, i = _(() => {
    if (!t.value)
      return !1;
    if (nt(t.value))
      return !s(t.value);
    if (me(t.value)) {
      let u = !1;
      return z(t.value, (h) => {
        if (!s(h))
          return u = !0, !1;
      }), u;
    }
    return !1;
  });
  return {
    componentStyleHide: _(() => n.value || i.value ? "display: none;" : "")
  };
}
const AM = {
  name: "AInputFile",
  inheritAttrs: !1,
  mixins: [
    Kc
  ],
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    isMultiple: {
      type: Boolean,
      required: !1
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    modelUndefined: {
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number, Object, Array],
      required: !1
    },
    text: {
      type: String,
      required: !1,
      default: "Dateien auswählen"
    },
    type: {
      type: String,
      required: !1,
      default: "input"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      componentStyleHide: r
    } = Jt(e), {
      ariaDescribedbyLocal: s,
      changeModel: i,
      clearModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = Xt(e, t), S = d(e, "isMultiple"), b = d(e, "modelValue"), L = _(() => S.value ? !!(me(b.value) && b.value.length > 0) : !!(nt(b.value) && mi(b.value) > 0)), v = _(() => L.value ? S.value ? b.value : [b.value] : []), I = B(void 0), R = d(e, "disabled"), g = (M) => {
      if (R.value)
        return;
      const P = M.target.files;
      if (P && P.length) {
        const F = [];
        z(P, (C) => {
          F.push({
            id: "",
            size: C.size,
            name: C.webkitRelativePath || C.relativePath || C.name,
            type: C.type,
            file: C
          });
        }), i({
          model: S.value ? F : F[0]
        });
      }
    }, D = d(e, "required"), w = _(() => D.value ? "*" : "");
    return {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      clearModel: o,
      componentStyleHide: r,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      inputRef: I,
      isErrors: E,
      isModel: L,
      modelValueListLocal: v,
      onBlur: p,
      onFocus: T,
      onInput: g,
      textAfterLabel: w
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__parent"
      }, [
        this.label && c(Mt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          hideId: !0,
          type: this.type,
          isError: this.isErrors
        }),
        c("div", {}, [
          c("label", {
            for: this.htmlIdLocal,
            class: ["a_file__label a_form_control", this.labelClass, {
              disabled: this.disabled
            }],
            required: this.required,
            type: this.type
          }, [
            c("input", {
              ref: "inputRef",
              id: this.htmlIdLocal,
              type: "file",
              multiple: this.isMultiple,
              class: [
                "a_file__input",
                this.inputClass,
                {
                  a_form_control_invalid: this.isErrors
                }
              ],
              disabled: this.disabled,
              ariaRequired: this.required,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              ...this.inputAttributes,
              onInput: this.onInput,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }),
            c("span", {
              class: "a_file__label"
            }, this.text)
          ])
        ]),
        this.isModel && c("ul", {}, [
          this.modelValueListLocal.map((e) => c("li", {}, e.name))
        ]),
        c(Zt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(ln, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function EM(e, {
  currentValue: t = B(0),
  displayValue: n = _(() => ""),
  ensurePrecision: r = () => {
  },
  setCurrentValue: s = () => {
  },
  minLocal: i = _(() => {
  })
}) {
  const o = d(e, "disabled"), u = d(e, "modelValue"), h = d(e, "max"), A = d(e, "readonly"), E = _(() => yn(u.value) && u.value <= i.value), p = _(() => yn(u.value) && u.value >= h.value);
  return {
    increase: () => {
      if (A.value || o.value || p.value)
        return;
      const b = Number(n.value) || 0, L = r({ value: b, currentValue: t.value });
      s(L);
    },
    decrease: () => {
      if (A.value || o.value || E.value)
        return;
      const b = Number(n.value) || 0, L = r({ value: b, currentValue: t.value, coefficient: -1 });
      s(L);
    }
  };
}
function pM(e, {
  decrease: t = () => {
  },
  increase: n = () => {
  },
  inputRef: r = B({}),
  onBlur: s = () => {
  },
  setCurrentValue: i = () => {
  },
  userInput: o = B(null),
  currentValue: u = B(void 0),
  displayValue: h = _(() => ""),
  isTypeNumber: A = _(() => !0)
}) {
  const E = d(e, "type"), p = d(e, "eAllowed"), T = d(e, "min"), S = d(e, "modelValue");
  return {
    handleInput: (R) => {
      if (A.value) {
        const D = R.target.value;
        o.value = D;
        const w = D === "" ? null : Number(D);
        i(w, !1);
        return;
      }
      let g = R.target.value.trim();
      if (E.value === "integerNonNegative") {
        const D = g.match(/\d+/g);
        if (D !== null) {
          let w = parseInt(D.join(""), 10);
          w = Math.max(w, 0), g = w;
        } else
          g = null;
        i(g), r.value.value = g;
      } else if (E.value === "integerPositive") {
        if (g === "0")
          g = null;
        else {
          const D = g.match(/\d+/g);
          if (D !== null) {
            let w = parseInt(D.join(""), 10);
            w = Math.max(w, 1), g = w;
          } else
            g = null;
        }
        i(g), r.value.value = g;
      } else if (E.value === "integer") {
        const D = g.match(/\d+/g);
        if (D !== null) {
          let w = parseInt(D.join(""), 10);
          g.indexOf("-") !== -1 && (w = -w), g = w, i(g), r.value.value = g;
        } else g === "-" ? (g = "-", r.value.value = g) : (g = null, i(g), r.value.value = g);
      }
    },
    handleInputChange: (R) => {
      if (!A.value)
        return;
      const g = R.target.value, D = g !== "" ? Number(g) : "";
      (yn(D) && !Number.isNaN(D) || g === "") && i(D), o.value = null;
    },
    handleKeydown: (R) => {
      R.keyCode === X.arrowUp ? (n(), R.preventDefault()) : R.keyCode === X.arrowDown ? (t(), R.preventDefault()) : (!p.value && R.keyCode === X.e || T.value >= 0 && R.keyCode === X.minus || R.keyCode === X.plus) && (R.preventDefault(), R.stopPropagation());
    },
    onBlurNumber: (R) => {
      (o.value !== null || !S.value && S.value !== 0) && (o.value = null, u.value = S.value, r.value.value = h.value), s(R);
    }
  };
}
function TM(e) {
  const t = d(e, "type"), n = d(e, "min");
  return {
    minLocal: _(() => {
      let s;
      return t.value === "integerNonNegative" ? s = 0 : t.value === "integerPositive" && (s = 1), (Ce(s) || !ae(n.value) && n.value > s) && (s = n.value), s;
    })
  };
}
function mM(e, {
  verifyValue: t = () => {
  },
  changeModel: n = () => {
  }
}) {
  const r = d(e, "precision"), s = d(e, "modelValue"), i = B(null), o = B(null), u = () => {
    o.value = s.value;
  }, h = _(() => {
    if (i.value !== null)
      return i.value;
    let E = o.value;
    if (ae(E))
      return "";
    if (yn(E)) {
      if (Number.isNaN(E))
        return "";
      Ce(r.value) || (E = E.toFixed(r.value));
    }
    return E;
  });
  return {
    currentValue: o,
    displayValue: h,
    initCurrentValue: u,
    setCurrentValue: (E, p = !0) => {
      const T = o.value, S = t(E);
      if (T !== S) {
        if (!p) {
          n({ model: S });
          return;
        }
        i.value = null, n({ model: S }), o.value = S;
      }
    },
    userInput: i
  };
}
function SM(e) {
  const t = d(e, "max"), n = d(e, "min"), r = d(e, "step"), s = d(e, "type"), i = _(() => s.value === "number"), o = _(() => i.value ? "number" : "text"), u = _(() => i.value ? {
    max: t.value,
    min: n.value,
    step: r.value
  } : {});
  return {
    inputType: o,
    isTypeNumber: i,
    numberAttributes: u
  };
}
function bM(e, {
  changeModel: t = () => {
  },
  minLocal: n = _(() => {
  })
}) {
  const r = d(e, "modelUndefined"), s = d(e, "stepStrictly"), i = d(e, "step"), o = d(e, "precision"), u = d(e, "max"), h = d(e, "modelValue"), A = (S) => {
    if (ae(S))
      return 0;
    const b = S.toString(), L = b.indexOf(".");
    let v = 0;
    return L !== -1 && (v = b.length - L - 1), v;
  }, E = _(() => {
    const S = A(i.value);
    return Ce(o.value) ? Math.max(A(h.value), S) : (S > o.value && console.warn(
      "AInputNumber",
      "precision should not be less than the decimal places of step"
    ), o.value);
  });
  return {
    ensurePrecision: ({ value: S, currentValue: b, coefficient: L = 1 }) => yn(S) ? $o(S + i.value * L, E.value) : b,
    verifyValue: (S, b) => {
      let L = Number(S);
      return ae(S) || Number.isNaN(L) ? null : (S === "" && (L = r.value), s.value && (L = $o(Math.round(L / i.value) * i.value, o.value)), Ce(o.value) || (L = $o(L, o.value)), L > u.value ? (L = u.value, b && t({ model: L })) : L < n.value && (L = n.value, b && t({ model: L })), L);
    }
  };
}
function LM(e) {
  const t = d(e, "inputWidth");
  return {
    inputWidthStyleValue: _(() => {
      let r = t.value;
      return yn(t.value) && (r = `${t.value}px`), Ce(r) ? {} : {
        "--a_input_number_width": r
      };
    })
  };
}
const Ba = {
  name: "AInputNumber",
  inheritAttrs: !1,
  mixins: [
    Kc
  ],
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    controlsType: {
      type: String,
      required: !1,
      default: () => fn.propsDefault.controlsType,
      validator: (e) => ["plus-minus", "arrows", "none"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    eAllowed: {
      type: Boolean,
      required: !1,
      default: () => fn.propsDefault.eAllowed
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: () => fn.propsDefault.iconPrepend
    },
    inputWidth: {
      type: [String, Number],
      required: !1,
      default: () => fn.propsDefault.inputWidth
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: () => fn.propsDefault.isLabelFloat
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: () => fn.propsDefault.max
    },
    min: {
      type: Number,
      required: !1,
      default: () => fn.propsDefault.min
    },
    modelUndefined: {
      required: !1,
      default: () => fn.propsDefault.modelUndefined
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: () => fn.propsDefault.placeholder
    },
    precision: {
      type: Number,
      validator: (e) => e >= 0 && e === Number.parseInt(`${e}`, 10),
      default: () => fn.propsDefault.precision
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    step: {
      type: Number,
      required: !1,
      default: () => fn.propsDefault.step
    },
    stepStrictly: {
      type: Boolean,
      required: !1,
      default: () => fn.propsDefault.stepStrictly
    },
    type: {
      type: String,
      required: !1,
      default: () => fn.propsDefault.type,
      validator: (e) => ["number", "integerNonNegative", "integerPositive", "integer"].indexOf(e) !== -1
      // TODO: "float", "floatPositiv", "floatNonNegative"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      componentStyleHide: r
    } = Jt(e), {
      ariaDescribedbyLocal: s,
      changeModel: i,
      clearModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: S
    } = Xt(e, t), {
      isClearButtonLocal: b
    } = ku(e, {
      isModel: p
    }), {
      minLocal: L
    } = TM(e), {
      inputType: v,
      isTypeNumber: I,
      numberAttributes: R
    } = SM(e), {
      placeholderAttributes: g
    } = Ol(e), {
      inputWidthStyleValue: D
    } = LM(e), w = B(void 0), M = d(e, "disabled"), P = (Oe) => {
      if (M.value)
        return;
      const ye = Oe.target.value;
      i({
        model: +ye
      });
    }, {
      isAutofill: F
    } = rf({ inputRef: w }), {
      ensurePrecision: C,
      verifyValue: $
    } = bM(e, {
      changeModel: i,
      minLocal: L
    }), {
      currentValue: H,
      displayValue: j,
      initCurrentValue: le,
      setCurrentValue: ee,
      userInput: _e
    } = mM(e, {
      verifyValue: $,
      changeModel: i
    }), {
      increase: ie,
      decrease: ue
    } = EM(e, {
      currentValue: H,
      displayValue: j,
      ensurePrecision: C,
      setCurrentValue: ee,
      minLocal: L
    }), {
      handleInput: Te,
      handleInputChange: Pe,
      handleKeydown: Se,
      onBlurNumber: se
    } = pM(e, {
      currentValue: H,
      decrease: ue,
      displayValue: j,
      increase: ie,
      inputRef: w,
      onBlur: T,
      setCurrentValue: ee,
      userInput: _e,
      isTypeNumber: I
    });
    return le(), rt(
      () => e.modelValue,
      (Oe) => {
        const ye = $(_e.value), je = $(Oe, !0);
        !yn(ye) && (!ye || ye !== je) && (H.value = je, _e.value = null);
      },
      { immediate: !0 }
    ), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      clearModel: o,
      componentStyleHide: r,
      currentValue: H,
      decrease: ue,
      displayValue: j,
      errorsId: u,
      handleInput: Te,
      handleInputChange: Pe,
      handleKeydown: Se,
      helpTextId: h,
      htmlIdLocal: A,
      increase: ie,
      inputRef: w,
      inputType: v,
      inputWidthStyleValue: D,
      isAutofill: F,
      isClearButtonLocal: b,
      isErrors: E,
      isModel: p,
      numberAttributes: R,
      onBlurNumber: se,
      onFocus: S,
      onInput: P,
      placeholderAttributes: g,
      userInput: _e
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(gn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.displayValue,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: this.type
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__container"
      }, [
        c("div", {
          class: ["a_form_element__parent", {
            a_form_element__parent_float: this.isLabelFloat,
            a_form_element__parent_not_empty: this.isModel || this.isAutofill,
            a_form_element__parent_float_has_icon_prepend: this.iconPrepend,
            a_form_element__parent_invalid: this.isErrors
          }]
        }, [
          this.label && !this.isLabelFloat && c(Mt, {
            id: this.htmlIdLocal,
            alwaysTranslate: this.alwaysTranslate,
            label: this.label,
            labelClass: this.labelClass,
            labelScreenReader: this.labelScreenReader,
            required: this.required,
            type: this.type,
            isLabelFloat: this.isLabelFloat,
            isError: this.isErrors
          }),
          c("div", {
            class: [
              "a_form_element_number",
              {
                a_form_element_number_controls: this.controlsType !== "none"
              }
            ]
          }, [
            c("div", {
              class: "a_form_element",
              style: {
                ...this.inputWidthStyleValue
              }
            }, [
              this.label && this.isLabelFloat && c(Mt, {
                id: this.htmlIdLocal,
                alwaysTranslate: this.alwaysTranslate,
                label: this.label,
                labelClass: this.labelClass,
                labelScreenReader: this.labelScreenReader,
                required: this.required,
                type: this.type,
                isLabelFloat: this.isLabelFloat,
                isError: this.isErrors
              }),
              this.iconPrepend && c(ut, {
                icon: this.iconPrepend,
                class: "a_input__icon_prepend"
              }),
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                autocomplete: this.autocomplete,
                value: this.displayValue,
                type: this.inputType,
                class: [
                  "a_form_control a_input a_input_number",
                  this.inputClass,
                  {
                    a_form_element_with_one_btn: this.isClearButtonLocal,
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabled,
                ariaRequired: this.required,
                ariaInvalid: this.isErrors,
                "aria-describedby": this.ariaDescribedbyLocal,
                ...this.numberAttributes,
                ...this.placeholderAttributes,
                ...this.inputAttributes,
                onInput: this.handleInput,
                onChange: this.handleInputChange,
                onKeydown: this.handleKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlurNumber
              }),
              this.isClearButtonLocal ? c("div", {
                class: "a_form_control__actions"
              }, [
                c(Du, {
                  alwaysTranslate: this.alwaysTranslate,
                  disabled: this.disabled,
                  class: this.clearButtonClass,
                  onClear: this.clearModel
                })
              ]) : ""
            ]),
            this.controlsType === "plus-minus" && c("div", {
              class: "a_btn_group"
            }, [
              c(be, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_btn a_btn_outline_secondary",
                iconLeft: JT,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_NUMBER_BTN_DECREASE_",
                textScreenReader: "_A_INPUT_NUMBER_BTN_DECREASE_",
                type: "button",
                onClick: this.decrease
              }),
              c(be, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_btn a_btn_outline_secondary",
                iconLeft: QT,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_NUMBER_BTN_INCREASE_",
                textScreenReader: "_A_INPUT_NUMBER_BTN_INCREASE_",
                type: "button",
                onClick: this.increase
              })
            ])
          ]),
          c(Zt, {
            id: this.helpTextId,
            alwaysTranslate: this.alwaysTranslate,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(ln, {
            id: this.errorsId,
            alwaysTranslate: this.alwaysTranslate,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
};
function vM({
  idMin: e = _(() => "")
}) {
  return {
    setFocusToMinInput: () => {
      const n = document.getElementById(e.value);
      n && n.focus();
    }
  };
}
function IM({
  htmlIdLocal: e = _(() => "")
}) {
  const t = _(() => `${e.value}_min`);
  return {
    idMax: _(() => `${e.value}_max`),
    idMin: t
  };
}
function yM(e, {
  htmlIdLocal: t = _(() => ""),
  idMax: n = _(() => ""),
  idMin: r = _(() => "")
}) {
  const s = d(e, "inputAttributes"), i = d(e, "inputAttributesMax"), o = d(e, "inputAttributesMin"), u = _(() => `${t.value}_label`), h = _(() => ({
    "aria-labelledby": `${u.value} ${r.value}`,
    ...s.value,
    ...o.value
  }));
  return {
    inputAttributesMaxLocal: _(() => ({
      "aria-labelledby": `${u.value} ${n.value}`,
      ...s.value,
      ...i.value
    })),
    inputAttributesMinLocal: h
  };
}
function gM(e, {
  changeModel: t = () => ({})
}) {
  const n = d(e, "keyMax"), r = d(e, "keyMin"), s = d(e, "modelValue"), i = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[r.value];
  }), o = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[n.value];
  });
  return {
    changeModelMax: ({ model: A }) => {
      const E = pe(s.value);
      E[n.value] = A, t({ model: E });
    },
    changeModelMin: ({ model: A }) => {
      const E = pe(s.value);
      E[r.value] = A, t({ model: E });
    },
    modelValueMax: o,
    modelValueMin: i
  };
}
function RM(e) {
  const t = d(e, "readonlyDefault"), n = d(e, "readonlyDefaultMax"), r = d(e, "readonlyDefaultMin"), s = _(() => Ce(n.value) ? t.value : n.value), i = _(() => Ce(r.value) ? t.value : r.value);
  return {
    readonlyDefaultMaxLocal: s,
    readonlyDefaultMinLocal: i
  };
}
function OM(e) {
  const t = d(e, "type");
  return {
    typeLocal: _(() => t.value.replace("Range", ""))
  };
}
const Yc = ["numberRange", "integerNonNegativeRange", "integerPositiveRange", "integerRange"], nm = {};
z(Yc, (e) => {
  nm[e] = !0;
});
const rm = nm, No = {
  name: "AInputNumberRange",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    controlsType: {
      type: String,
      required: !1,
      default: "plus-minus",
      validator: (e) => ["plus-minus", "arrows"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_input_number_range_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesMax: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesMin: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputWidth: {
      type: [Number, String],
      required: !1,
      default: 200
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyMax: {
      tpe: String,
      required: !1,
      default: "max"
    },
    keyMin: {
      tpe: String,
      required: !1,
      default: "min"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelMax: {
      type: String,
      required: !1,
      default: "_A_INPUT_NUMBER_RANGE_LABEL_MAX_"
    },
    labelMin: {
      type: String,
      required: !1,
      default: "_A_INPUT_NUMBER_RANGE_LABEL_MIN_"
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: void 0
    },
    min: {
      type: Number,
      required: !1,
      default: void 0
    },
    modelUndefined: {
      required: !1,
      default: void 0
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholderMax: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholderMin: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    precision: {
      type: Number,
      validator: (e) => e >= 0 && e === Number.parseInt(`${e}`, 10)
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    readonlyDefaultMax: {
      type: String,
      required: !1,
      default: void 0
    },
    readonlyDefaultMin: {
      type: String,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    step: {
      type: Number,
      required: !1,
      default: 1
    },
    stepStrictly: {
      type: Boolean,
      required: !1
    },
    type: {
      type: String,
      required: !1,
      default: "numberRange",
      validator: (e) => Yc.indexOf(e) !== -1
      // TODO: "float", "floatPositiv", "floatNonNegative"
    }
  },
  emits: [
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      componentStyleHide: r
    } = Jt(e), {
      changeModel: s,
      errorsId: i,
      helpTextId: o,
      htmlIdLocal: u,
      isErrors: h
    } = Xt(e, t), {
      changeModelMax: A,
      changeModelMin: E,
      modelValueMax: p,
      modelValueMin: T
    } = gM(e, {
      changeModel: s
    }), {
      idMax: S,
      idMin: b
    } = IM({
      htmlIdLocal: u
    }), {
      typeLocal: L
    } = OM(e), {
      inputAttributesMaxLocal: v,
      inputAttributesMinLocal: I
    } = yM(e, {
      htmlIdLocal: u,
      idMax: S,
      idMin: b
    }), {
      setFocusToMinInput: R
    } = vM({
      idMin: b
    }), {
      destroyEventBusClickLabel: g,
      initEventBusClickLabel: D
    } = af({
      htmlIdLocal: u,
      clickLabel: R
    }), {
      readonlyDefaultMaxLocal: w,
      readonlyDefaultMinLocal: M
    } = RM(e);
    return D(), Dt(() => {
      g();
    }), {
      attributesToExcludeFromRender: n,
      changeModelMax: A,
      changeModelMin: E,
      componentStyleHide: r,
      errorsId: i,
      helpTextId: o,
      htmlIdLocal: u,
      idMax: S,
      idMin: b,
      inputAttributesMaxLocal: v,
      inputAttributesMinLocal: I,
      isErrors: h,
      modelValueMax: p,
      modelValueMin: T,
      readonlyDefaultMaxLocal: w,
      readonlyDefaultMinLocal: M,
      typeLocal: L
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(gn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      isRange: !0,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "numberRange",
      valueParentClass: "a_form_element_readonly_value_range"
    }, () => [
      c(Ba, {
        id: this.idMin,
        alwaysTranslate: this.alwaysTranslate,
        inputWidth: this.inputWidth,
        label: this.labelMin,
        max: this.max,
        min: this.min,
        precision: this.precision,
        readonly: !0,
        readonlyDefault: this.readonlyDefaultMinLocal,
        type: this.typeLocal,
        required: this.required,
        modelValue: this.modelValueMin
      }),
      c(Ba, {
        id: this.idMax,
        alwaysTranslate: this.alwaysTranslate,
        inputWidth: this.inputWidth,
        label: this.labelMax,
        max: this.max,
        min: this.min,
        precision: this.precision,
        readonly: !0,
        readonlyDefault: this.readonlyDefaultMaxLocal,
        type: this.typeLocal,
        required: this.required,
        modelValue: this.modelValueMax
      })
    ]) : c("div", {
      ...this.$attrs,
      class: "a_input_number_range",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_invalid: this.isErrors
        }]
      }, [
        this.label ? c(Mt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: !1,
          isError: this.isErrors
        }) : "",
        c("div", {
          class: "a_input_number_range__content"
        }, [
          c("div", {
            class: "a_input_number_range__group a_input_number_range__group_min"
          }, [
            c(Mt, {
              id: this.idMin,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_input_number_range__label a_input_number_range__label_min",
              isLabelFloat: !1,
              label: this.labelMin,
              isError: this.isErrors
            }),
            c(Ba, {
              id: this.idMin,
              alwaysTranslate: this.alwaysTranslate,
              controlsType: this.controlsType,
              iconPrepend: this.iconPrepend,
              inputWidth: this.inputWidth,
              isLabelFloat: !0,
              max: this.max,
              min: this.min,
              modelUndefined: this.modelUndefined,
              precision: this.precision,
              step: this.step,
              stepStrictly: this.stepStrictly,
              type: this.typeLocal,
              disabled: this.disabled,
              inputAttributes: this.inputAttributesMinLocal,
              required: this.required,
              modelValue: this.modelValueMin,
              placeholder: this.placeholderMin,
              change: this.changeModelMin
            })
          ]),
          c("div", {
            class: "a_input_number_range__group a_input_number_range__group_max"
          }, [
            c(Mt, {
              id: this.idMax,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_input_number_range__label a_input_number_range__label_max",
              isLabelFloat: !1,
              label: this.labelMax,
              isError: this.isErrors
            }),
            c(Ba, {
              id: this.idMax,
              alwaysTranslate: this.alwaysTranslate,
              controlsType: this.controlsType,
              iconPrepend: this.iconPrepend,
              inputWidth: this.inputWidth,
              isLabelFloat: !0,
              max: this.max,
              min: this.min,
              modelUndefined: this.modelUndefined,
              precision: this.precision,
              step: this.step,
              stepStrictly: this.stepStrictly,
              type: this.typeLocal,
              disabled: this.disabled,
              inputAttributes: this.inputAttributesMaxLocal,
              required: this.required,
              modelValue: this.modelValueMax,
              placeholder: this.placeholderMax,
              change: this.changeModelMax
            })
          ])
        ]),
        c(Zt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors ? c(ln, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        }) : ""
      ])
    ]) : null;
  }
};
function CM(e) {
  const t = d(e, "heightCss"), n = _(() => {
    if (t.value)
      return `height: ${t.value}`;
  }), r = _(() => {
    if (t.value)
      return `max-height: ${t.value}`;
  });
  return {
    styleHeight: n,
    styleMaxHeight: r
  };
}
function NM(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "disabled"), r = d(e, "modelUndefined"), s = d(e, "modelValue"), i = B(void 0), o = B(""), u = B(""), h = B(void 0), A = () => {
    i.value = pe(s.value) || "";
  }, E = () => {
    n.value || t({
      model: r.value
    });
  }, p = () => {
    try {
      s.value ? o.value = JSON.stringify(s.value, void 0, 2) : o.value = "", u.value = o.value, h.value = void 0;
    } catch {
    }
  }, T = (v) => {
    if (!n.value)
      if (!u.value || u.value.length === 0)
        t({
          $event: v,
          model: r.value
        });
      else
        try {
          const I = JSON.parse(u.value);
          t({
            $event: v,
            model: I
          }), o.value = JSON.stringify(I, void 0, 2), h.value = null;
        } catch (I) {
          h.value = I.toString();
        }
  };
  return {
    clearModel: E,
    formatJson: () => {
      try {
        u.value = JSON.stringify(JSON.parse(u.value), void 0, 2);
      } catch (v) {
        h.value = v.toString();
      }
    },
    initialValue: i,
    initInitialValue: A,
    jsonString: o,
    jsonStringInput: u,
    JSONtoString: p,
    onInput: (v) => {
      n.value || (u.value = v.target.value, T());
    },
    parseError: h,
    resetModel: () => {
      n.value || (t({
        model: i.value
      }), setTimeout(() => {
        p();
      }));
    },
    stringToJSON: T
  };
}
function DM(e) {
  const t = d(e, "modelValue"), n = d(e, "readonlyDefault"), {
    filterJson: r
  } = Wn();
  return {
    modelValueReadonly: _(() => ae(t.value) || t.value === "" ? n.value : r(t.value))
  };
}
const BM = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-repeat" viewBox="0 0 16 16">
  <path d="M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41m-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9"/>
  <path fill-rule="evenodd" d="M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5 5 0 0 0 8 3M3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9z"/>
</svg>`, wM = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-braces" viewBox="0 0 16 16">
  <path d="M2.114 8.063V7.9c1.005-.102 1.497-.615 1.497-1.6V4.503c0-1.094.39-1.538 1.354-1.538h.273V2h-.376C3.25 2 2.49 2.759 2.49 4.352v1.524c0 1.094-.376 1.456-1.49 1.456v1.299c1.114 0 1.49.362 1.49 1.456v1.524c0 1.593.759 2.352 2.372 2.352h.376v-.964h-.273c-.964 0-1.354-.444-1.354-1.538V9.663c0-.984-.492-1.497-1.497-1.6M13.886 7.9v.163c-1.005.103-1.497.616-1.497 1.6v1.798c0 1.094-.39 1.538-1.354 1.538h-.273v.964h.376c1.613 0 2.372-.759 2.372-2.352v-1.524c0-1.094.376-1.456 1.49-1.456V7.332c-1.114 0-1.49-.362-1.49-1.456V4.352C13.51 2.759 12.75 2 11.138 2h-.376v.964h.273c.964 0 1.354.444 1.354 1.538V6.3c0 .984.492 1.497 1.497 1.6"/>
</svg>`, am = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
  <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"/>
  <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"/>
</svg>`, PM = {
  name: "AJson",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    heightCss: {
      type: String,
      required: !1,
      default: "400px;"
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_json_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = wl(e), {
      attributesToExcludeFromRender: r
    } = Bt(e), {
      componentStyleHide: s
    } = Jt(e), {
      ariaDescribedbyLocal: i,
      changeModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: S
    } = Xt(e, t), {
      styleHeight: b,
      styleMaxHeight: L
    } = CM(e), {
      clearModel: v,
      formatJson: I,
      initialValue: R,
      initInitialValue: g,
      jsonString: D,
      jsonStringInput: w,
      JSONtoString: M,
      onInput: P,
      parseError: F,
      resetModel: C
    } = NM(e, {
      changeModel: o
    }), {
      modelValueReadonly: $
    } = DM(e);
    return g(), M(), {
      ariaDescribedbyLocal: i,
      attributesToExcludeFromRender: r,
      changeModel: o,
      clearModel: v,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: u,
      formatJson: I,
      helpTextId: h,
      htmlIdLocal: A,
      onInput: P,
      initialValue: R,
      initInitialValue: g,
      isErrors: E,
      isModel: p,
      jsonString: D,
      jsonStringInput: w,
      JSONtoString: M,
      modelValueReadonly: $,
      onBlur: T,
      onFocus: S,
      parseError: F,
      resetModel: C,
      styleHeight: b,
      styleMaxHeight: L
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(gn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.modelValueReadonly,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "json",
      valueClass: "a_code_content",
      valueTag: "pre"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(Mt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: !1,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required
        }) : "",
        c("div", {
          class: "a_columns a_columns_count_12"
        }, [
          c("div", {
            class: "a_column a_column_6 a_column_12_touch"
          }, [
            c("div", {
              class: "a_d_flex a_justify_content_between"
            }, [
              c(Mt, {
                id: this.htmlIdLocal,
                alwaysTranslate: this.alwaysTranslate,
                extra: this.extra,
                idSuffix: "_input",
                isError: this.isErrors,
                isLabelFloat: !1,
                label: "_A_JSON_INPUT_"
              }),
              c("div", {
                class: "a_btn_group",
                role: "group"
              }, [
                c(be, {
                  class: [
                    "a_btn",
                    {
                      a_btn_transparent_info: !this.parseError,
                      a_btn_transparent_dark: this.parseError
                    }
                  ],
                  disabled: !!this.parseError,
                  iconLeft: wM,
                  textScreenReader: "_A_JSON_FORMAT_INPUT_",
                  title: "_A_JSON_FORMAT_INPUT_",
                  type: "button",
                  onClick: this.formatJson
                }),
                c(be, {
                  class: "a_btn a_btn_transparent_warning",
                  iconLeft: BM,
                  textScreenReader: "_A_JSON_RESET_INPUT_",
                  title: "_A_JSON_RESET_INPUT_",
                  type: "button",
                  onClick: this.JSONtoString
                }),
                c(be, {
                  class: "a_btn a_btn_transparent_danger",
                  iconLeft: am,
                  textScreenReader: "_A_JSON_DISCARD_ALL_CHANGES_",
                  title: "_A_JSON_DISCARD_ALL_CHANGES_",
                  type: "button",
                  onClick: this.resetModel
                })
              ])
            ]),
            c("div", {
              class: "a_form_element a_form_element_textarea"
            }, [
              c("textarea", {
                ref: "textareaRef",
                id: this.htmlIdLocal,
                style: this.styleHeight,
                value: this.jsonStringInput,
                "aria-describedby": this.ariaDescribedbyLocal,
                ariaInvalid: this.isErrors,
                ariaRequired: this.required,
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: [
                  "a_form_control a_json__textarea",
                  this.inputClass,
                  {
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabledAttribut,
                spellcheck: "false",
                ...this.inputAttributes,
                onInput: this.onInput,
                onFocus: this.onFocus,
                onBlur: this.onBlur
              })
            ]),
            this.parseError ? c(Ae, {
              alwaysTranslate: this.alwaysTranslate,
              class: "a_form_element__invalid_text",
              html: "_A_JSON_ERROR_HTML_{{error}}_",
              extra: {
                error: this.parseError
              }
            }) : ""
          ]),
          c("div", {
            class: "a_column a_column_6 a_column_12_touch"
          }, [
            c(Ae, {
              tag: "div",
              text: "_A_JSON_CURRENT_VALUE_"
            }),
            Ot(c("div", {
              class: "a_json__code",
              style: this.styleMaxHeight
            }), [
              [Yt, this.jsonString]
            ])
          ])
        ]),
        c(Zt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(ln, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function xM(e) {
  const t = d(e, "label");
  return {
    hasLabel: _(() => !ae(t.value))
  };
}
function FM(e) {
  const t = d(e, "modelValue"), n = d(e, "trueValue"), r = d(e, "falseValue");
  return {
    modelValueReadonly: _(() => t.value === n.value ? "_YES_" : t.value === r.value ? "_NO_" : t.value)
  };
}
function MM(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "modelValue"), r = d(e, "trueValue"), s = d(e, "falseValue"), i = d(e, "disabled"), o = _(() => n.value === r.value), u = (A) => {
    i.value || (setTimeout(() => {
      const E = o.value ? s.value : r.value;
      t({
        model: E,
        $event: A
      });
    }), A.stopPropagation(), A.preventDefault());
  };
  return {
    isChecked: o,
    onClick: u,
    onKeydown: (A) => {
      (A.keyCode === X.enter || A.keyCode === X.space) && u(A);
    }
  };
}
const Ou = {
  name: "AOneCheckbox",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    falseValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_one_checkbox_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelTitle: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    trueValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !0
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = wl(e), {
      attributesToExcludeFromRender: r
    } = Bt(e), {
      componentStyleHide: s
    } = Jt(e), {
      ariaDescribedbyLocal: i,
      changeModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = Xt(e, t), {
      isChecked: S,
      onClick: b,
      onKeydown: L
    } = MM(e, {
      changeModel: o
    }), {
      hasLabel: v
    } = xM(e), {
      modelValueReadonly: I
    } = FM(e);
    return {
      ariaDescribedbyLocal: i,
      attributesToExcludeFromRender: r,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: u,
      hasLabel: v,
      helpTextId: h,
      htmlIdLocal: A,
      isChecked: S,
      isErrors: E,
      modelValueReadonly: I,
      onBlur: p,
      onClick: b,
      onFocus: T,
      onKeydown: L
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(gn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.modelValueReadonly,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "oneCheckbox"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent"]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            class: ["a_custom_control a_custom_checkbox", {
              a_custom_control_invalid: this.isErrors
            }]
          }, [
            c("input", {
              id: this.htmlIdLocal,
              value: this.modelValue,
              type: "checkbox",
              checked: this.isChecked,
              class: "a_custom_control_input",
              disabled: this.disabledAttribut,
              ariaRequired: this.required,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              indeterminate: this.indeterminate,
              ...this.inputAttributes,
              onClick: this.onClick,
              onKeydown: this.onKeydown,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }),
            c(be, {
              alwaysTranslate: this.alwaysTranslate,
              class: [
                "a_custom_control_label",
                {
                  a_custom_control_label_width_auto: this.isWidthAuto
                }
              ],
              extra: this.extra,
              for: this.htmlIdLocal,
              tag: "label",
              title: this.isLabelTitle ? this.label : void 0,
              type: "text",
              ...this.labelAttributes
            }, () => {
              var e;
              return [
                (e = this.$slots) != null && e[this.slotName] ? this.$slots[this.slotName]({
                  id: this.htmlIdLocal,
                  labelClass: [
                    "a_custom_control_label__text",
                    this.labelClass
                  ],
                  label: this.label,
                  labelScreenReader: this.labelScreenReader,
                  props: this.$props,
                  required: this.required
                }) : this.hasLabel && c("span", {
                  class: [
                    "a_custom_control_label__text",
                    this.labelClass
                  ]
                }, [
                  c(be, {
                    alwaysTranslate: this.alwaysTranslate,
                    extra: this.extra,
                    html: this.label,
                    textScreenReader: this.labelScreenReader,
                    tag: "span",
                    title: this.isLabelTitle ? this.label : void 0,
                    type: "text"
                  }),
                  this.required ? c("span", null, "*") : ""
                ])
              ];
            })
          ])
        ]),
        c(Zt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(ln, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function qM(e, {
  changeModel: t = () => {
  },
  dataKeyByKeyIdLocal: n = _(() => ({}))
}) {
  const r = d(e, "disabled"), s = d(e, "isModelArray"), i = d(e, "modelValue");
  return {
    onChangeModelValue: ({ model: u, $event: h }) => {
      r.value || (s.value ? !i.value || i.value.length === 0 ? setTimeout(() => {
        t({
          model: [u],
          $event: h
        });
      }) : setTimeout(() => {
        const A = [];
        z(i.value, (E) => {
          n.value[E] || A.push(E);
        }), A.push(u), t({
          model: A,
          $event: h
        });
      }) : setTimeout(() => {
        t({
          model: u,
          $event: h
        });
      }));
    }
  };
}
var Ji = { exports: {} };
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
var $M = Ji.exports, ME;
function kM() {
  return ME || (ME = 1, function(e, t) {
    (function() {
      var n, r = "4.17.21", s = 200, i = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", o = "Expected a function", u = "Invalid `variable` option passed into `_.template`", h = "__lodash_hash_undefined__", A = 500, E = "__lodash_placeholder__", p = 1, T = 2, S = 4, b = 1, L = 2, v = 1, I = 2, R = 4, g = 8, D = 16, w = 32, M = 64, P = 128, F = 256, C = 512, $ = 30, H = "...", j = 800, le = 16, ee = 1, _e = 2, ie = 3, ue = 1 / 0, Te = 9007199254740991, Pe = 17976931348623157e292, Se = NaN, se = 4294967295, Oe = se - 1, ye = se >>> 1, je = [
        ["ary", P],
        ["bind", v],
        ["bindKey", I],
        ["curry", g],
        ["curryRight", D],
        ["flip", C],
        ["partial", w],
        ["partialRight", M],
        ["rearg", F]
      ], he = "[object Arguments]", ne = "[object Array]", V = "[object AsyncFunction]", Q = "[object Boolean]", re = "[object Date]", ve = "[object DOMException]", De = "[object Error]", qe = "[object Function]", Xe = "[object GeneratorFunction]", Me = "[object Map]", xe = "[object Number]", at = "[object Null]", Ve = "[object Object]", st = "[object Promise]", Ze = "[object Proxy]", At = "[object RegExp]", Et = "[object Set]", qt = "[object String]", pn = "[object Symbol]", cr = "[object Undefined]", Qt = "[object WeakMap]", Gn = "[object WeakSet]", Kn = "[object ArrayBuffer]", Rn = "[object DataView]", Cr = "[object Float32Array]", fr = "[object Float64Array]", Nr = "[object Int8Array]", jn = "[object Int16Array]", zn = "[object Int32Array]", Gt = "[object Uint8Array]", Tn = "[object Uint8ClampedArray]", hr = "[object Uint16Array]", Ar = "[object Uint32Array]", _s = /\b__p \+= '';/g, Dr = /\b(__p \+=) '' \+/g, Yn = /(__e\(.*?\)|\b__t\)) \+\n'';/g, Aa = /&(?:amp|lt|gt|quot|#39);/g, On = /[&<>"']/g, ds = RegExp(Aa.source), cs = RegExp(On.source), Lt = /<%-([\s\S]+?)%>/g, Xn = /<%([\s\S]+?)%>/g, jr = /<%=([\s\S]+?)%>/g, Ea = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, zr = /^\w*$/, pa = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, Br = /[\\^$.*+?()[\]{}|]/g, Ii = RegExp(Br.source), en = /^\s+/, Ta = /\s/, ks = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, Us = /\{\n\/\* \[wrapped with (.+)\] \*/, Er = /,? & /, fs = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, on = /[()=,{}\[\]\/\s]/, Hs = /\\(\\)?/g, Pl = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, yi = /\w*$/, xl = /^[-+]0x[0-9a-f]+$/i, Uu = /^0b[01]+$/i, Re = /^\[object .+?Constructor\]$/, k = /^0o[0-7]+$/i, oe = /^(?:0|[1-9]\d*)$/, Le = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, dt = /($^)/, Ht = /['\n\r\u2028\u2029\\]/g, yt = "\\ud800-\\udfff", tn = "\\u0300-\\u036f", Zn = "\\ufe20-\\ufe2f", hs = "\\u20d0-\\u20ff", Vt = tn + Zn + hs, gi = "\\u2700-\\u27bf", Ri = "a-z\\xdf-\\xf6\\xf8-\\xff", TS = "\\xac\\xb1\\xd7\\xf7", mS = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", SS = "\\u2000-\\u206f", bS = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", hf = "A-Z\\xc0-\\xd6\\xd8-\\xde", Af = "\\ufe0e\\ufe0f", Ef = TS + mS + SS + bS, Hu = "['’]", LS = "[" + yt + "]", pf = "[" + Ef + "]", Fl = "[" + Vt + "]", Tf = "\\d+", vS = "[" + gi + "]", mf = "[" + Ri + "]", Sf = "[^" + yt + Ef + Tf + gi + Ri + hf + "]", Vu = "\\ud83c[\\udffb-\\udfff]", IS = "(?:" + Fl + "|" + Vu + ")", bf = "[^" + yt + "]", Wu = "(?:\\ud83c[\\udde6-\\uddff]){2}", Gu = "[\\ud800-\\udbff][\\udc00-\\udfff]", Vs = "[" + hf + "]", Lf = "\\u200d", vf = "(?:" + mf + "|" + Sf + ")", yS = "(?:" + Vs + "|" + Sf + ")", If = "(?:" + Hu + "(?:d|ll|m|re|s|t|ve))?", yf = "(?:" + Hu + "(?:D|LL|M|RE|S|T|VE))?", gf = IS + "?", Rf = "[" + Af + "]?", gS = "(?:" + Lf + "(?:" + [bf, Wu, Gu].join("|") + ")" + Rf + gf + ")*", RS = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", OS = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", Of = Rf + gf + gS, CS = "(?:" + [vS, Wu, Gu].join("|") + ")" + Of, NS = "(?:" + [bf + Fl + "?", Fl, Wu, Gu, LS].join("|") + ")", DS = RegExp(Hu, "g"), BS = RegExp(Fl, "g"), Ku = RegExp(Vu + "(?=" + Vu + ")|" + NS + Of, "g"), wS = RegExp([
        Vs + "?" + mf + "+" + If + "(?=" + [pf, Vs, "$"].join("|") + ")",
        yS + "+" + yf + "(?=" + [pf, Vs + vf, "$"].join("|") + ")",
        Vs + "?" + vf + "+" + If,
        Vs + "+" + yf,
        OS,
        RS,
        Tf,
        CS
      ].join("|"), "g"), PS = RegExp("[" + Lf + yt + Vt + Af + "]"), xS = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, FS = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
      ], MS = -1, mt = {};
      mt[Cr] = mt[fr] = mt[Nr] = mt[jn] = mt[zn] = mt[Gt] = mt[Tn] = mt[hr] = mt[Ar] = !0, mt[he] = mt[ne] = mt[Kn] = mt[Q] = mt[Rn] = mt[re] = mt[De] = mt[qe] = mt[Me] = mt[xe] = mt[Ve] = mt[At] = mt[Et] = mt[qt] = mt[Qt] = !1;
      var pt = {};
      pt[he] = pt[ne] = pt[Kn] = pt[Rn] = pt[Q] = pt[re] = pt[Cr] = pt[fr] = pt[Nr] = pt[jn] = pt[zn] = pt[Me] = pt[xe] = pt[Ve] = pt[At] = pt[Et] = pt[qt] = pt[pn] = pt[Gt] = pt[Tn] = pt[hr] = pt[Ar] = !0, pt[De] = pt[qe] = pt[Qt] = !1;
      var qS = {
        // Latin-1 Supplement block.
        À: "A",
        Á: "A",
        Â: "A",
        Ã: "A",
        Ä: "A",
        Å: "A",
        à: "a",
        á: "a",
        â: "a",
        ã: "a",
        ä: "a",
        å: "a",
        Ç: "C",
        ç: "c",
        Ð: "D",
        ð: "d",
        È: "E",
        É: "E",
        Ê: "E",
        Ë: "E",
        è: "e",
        é: "e",
        ê: "e",
        ë: "e",
        Ì: "I",
        Í: "I",
        Î: "I",
        Ï: "I",
        ì: "i",
        í: "i",
        î: "i",
        ï: "i",
        Ñ: "N",
        ñ: "n",
        Ò: "O",
        Ó: "O",
        Ô: "O",
        Õ: "O",
        Ö: "O",
        Ø: "O",
        ò: "o",
        ó: "o",
        ô: "o",
        õ: "o",
        ö: "o",
        ø: "o",
        Ù: "U",
        Ú: "U",
        Û: "U",
        Ü: "U",
        ù: "u",
        ú: "u",
        û: "u",
        ü: "u",
        Ý: "Y",
        ý: "y",
        ÿ: "y",
        Æ: "Ae",
        æ: "ae",
        Þ: "Th",
        þ: "th",
        ß: "ss",
        // Latin Extended-A block.
        Ā: "A",
        Ă: "A",
        Ą: "A",
        ā: "a",
        ă: "a",
        ą: "a",
        Ć: "C",
        Ĉ: "C",
        Ċ: "C",
        Č: "C",
        ć: "c",
        ĉ: "c",
        ċ: "c",
        č: "c",
        Ď: "D",
        Đ: "D",
        ď: "d",
        đ: "d",
        Ē: "E",
        Ĕ: "E",
        Ė: "E",
        Ę: "E",
        Ě: "E",
        ē: "e",
        ĕ: "e",
        ė: "e",
        ę: "e",
        ě: "e",
        Ĝ: "G",
        Ğ: "G",
        Ġ: "G",
        Ģ: "G",
        ĝ: "g",
        ğ: "g",
        ġ: "g",
        ģ: "g",
        Ĥ: "H",
        Ħ: "H",
        ĥ: "h",
        ħ: "h",
        Ĩ: "I",
        Ī: "I",
        Ĭ: "I",
        Į: "I",
        İ: "I",
        ĩ: "i",
        ī: "i",
        ĭ: "i",
        į: "i",
        ı: "i",
        Ĵ: "J",
        ĵ: "j",
        Ķ: "K",
        ķ: "k",
        ĸ: "k",
        Ĺ: "L",
        Ļ: "L",
        Ľ: "L",
        Ŀ: "L",
        Ł: "L",
        ĺ: "l",
        ļ: "l",
        ľ: "l",
        ŀ: "l",
        ł: "l",
        Ń: "N",
        Ņ: "N",
        Ň: "N",
        Ŋ: "N",
        ń: "n",
        ņ: "n",
        ň: "n",
        ŋ: "n",
        Ō: "O",
        Ŏ: "O",
        Ő: "O",
        ō: "o",
        ŏ: "o",
        ő: "o",
        Ŕ: "R",
        Ŗ: "R",
        Ř: "R",
        ŕ: "r",
        ŗ: "r",
        ř: "r",
        Ś: "S",
        Ŝ: "S",
        Ş: "S",
        Š: "S",
        ś: "s",
        ŝ: "s",
        ş: "s",
        š: "s",
        Ţ: "T",
        Ť: "T",
        Ŧ: "T",
        ţ: "t",
        ť: "t",
        ŧ: "t",
        Ũ: "U",
        Ū: "U",
        Ŭ: "U",
        Ů: "U",
        Ű: "U",
        Ų: "U",
        ũ: "u",
        ū: "u",
        ŭ: "u",
        ů: "u",
        ű: "u",
        ų: "u",
        Ŵ: "W",
        ŵ: "w",
        Ŷ: "Y",
        ŷ: "y",
        Ÿ: "Y",
        Ź: "Z",
        Ż: "Z",
        Ž: "Z",
        ź: "z",
        ż: "z",
        ž: "z",
        Ĳ: "IJ",
        ĳ: "ij",
        Œ: "Oe",
        œ: "oe",
        ŉ: "'n",
        ſ: "s"
      }, $S = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      }, kS = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      }, US = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
      }, HS = parseFloat, VS = parseInt, Cf = typeof go == "object" && go && go.Object === Object && go, WS = typeof self == "object" && self && self.Object === Object && self, Kt = Cf || WS || Function("return this")(), ju = t && !t.nodeType && t, As = ju && !0 && e && !e.nodeType && e, Nf = As && As.exports === ju, zu = Nf && Cf.process, Jn = function() {
        try {
          var U = As && As.require && As.require("util").types;
          return U || zu && zu.binding && zu.binding("util");
        } catch {
        }
      }(), Df = Jn && Jn.isArrayBuffer, Bf = Jn && Jn.isDate, wf = Jn && Jn.isMap, Pf = Jn && Jn.isRegExp, xf = Jn && Jn.isSet, Ff = Jn && Jn.isTypedArray;
      function Cn(U, Y, G) {
        switch (G.length) {
          case 0:
            return U.call(Y);
          case 1:
            return U.call(Y, G[0]);
          case 2:
            return U.call(Y, G[0], G[1]);
          case 3:
            return U.call(Y, G[0], G[1], G[2]);
        }
        return U.apply(Y, G);
      }
      function GS(U, Y, G, Ee) {
        for (var $e = -1, ot = U == null ? 0 : U.length; ++$e < ot; ) {
          var $t = U[$e];
          Y(Ee, $t, G($t), U);
        }
        return Ee;
      }
      function Qn(U, Y) {
        for (var G = -1, Ee = U == null ? 0 : U.length; ++G < Ee && Y(U[G], G, U) !== !1; )
          ;
        return U;
      }
      function KS(U, Y) {
        for (var G = U == null ? 0 : U.length; G-- && Y(U[G], G, U) !== !1; )
          ;
        return U;
      }
      function Mf(U, Y) {
        for (var G = -1, Ee = U == null ? 0 : U.length; ++G < Ee; )
          if (!Y(U[G], G, U))
            return !1;
        return !0;
      }
      function ma(U, Y) {
        for (var G = -1, Ee = U == null ? 0 : U.length, $e = 0, ot = []; ++G < Ee; ) {
          var $t = U[G];
          Y($t, G, U) && (ot[$e++] = $t);
        }
        return ot;
      }
      function Ml(U, Y) {
        var G = U == null ? 0 : U.length;
        return !!G && Ws(U, Y, 0) > -1;
      }
      function Yu(U, Y, G) {
        for (var Ee = -1, $e = U == null ? 0 : U.length; ++Ee < $e; )
          if (G(Y, U[Ee]))
            return !0;
        return !1;
      }
      function vt(U, Y) {
        for (var G = -1, Ee = U == null ? 0 : U.length, $e = Array(Ee); ++G < Ee; )
          $e[G] = Y(U[G], G, U);
        return $e;
      }
      function Sa(U, Y) {
        for (var G = -1, Ee = Y.length, $e = U.length; ++G < Ee; )
          U[$e + G] = Y[G];
        return U;
      }
      function Xu(U, Y, G, Ee) {
        var $e = -1, ot = U == null ? 0 : U.length;
        for (Ee && ot && (G = U[++$e]); ++$e < ot; )
          G = Y(G, U[$e], $e, U);
        return G;
      }
      function jS(U, Y, G, Ee) {
        var $e = U == null ? 0 : U.length;
        for (Ee && $e && (G = U[--$e]); $e--; )
          G = Y(G, U[$e], $e, U);
        return G;
      }
      function Zu(U, Y) {
        for (var G = -1, Ee = U == null ? 0 : U.length; ++G < Ee; )
          if (Y(U[G], G, U))
            return !0;
        return !1;
      }
      var zS = Ju("length");
      function YS(U) {
        return U.split("");
      }
      function XS(U) {
        return U.match(fs) || [];
      }
      function qf(U, Y, G) {
        var Ee;
        return G(U, function($e, ot, $t) {
          if (Y($e, ot, $t))
            return Ee = ot, !1;
        }), Ee;
      }
      function ql(U, Y, G, Ee) {
        for (var $e = U.length, ot = G + (Ee ? 1 : -1); Ee ? ot-- : ++ot < $e; )
          if (Y(U[ot], ot, U))
            return ot;
        return -1;
      }
      function Ws(U, Y, G) {
        return Y === Y ? ob(U, Y, G) : ql(U, $f, G);
      }
      function ZS(U, Y, G, Ee) {
        for (var $e = G - 1, ot = U.length; ++$e < ot; )
          if (Ee(U[$e], Y))
            return $e;
        return -1;
      }
      function $f(U) {
        return U !== U;
      }
      function kf(U, Y) {
        var G = U == null ? 0 : U.length;
        return G ? e_(U, Y) / G : Se;
      }
      function Ju(U) {
        return function(Y) {
          return Y == null ? n : Y[U];
        };
      }
      function Qu(U) {
        return function(Y) {
          return U == null ? n : U[Y];
        };
      }
      function Uf(U, Y, G, Ee, $e) {
        return $e(U, function(ot, $t, ht) {
          G = Ee ? (Ee = !1, ot) : Y(G, ot, $t, ht);
        }), G;
      }
      function JS(U, Y) {
        var G = U.length;
        for (U.sort(Y); G--; )
          U[G] = U[G].value;
        return U;
      }
      function e_(U, Y) {
        for (var G, Ee = -1, $e = U.length; ++Ee < $e; ) {
          var ot = Y(U[Ee]);
          ot !== n && (G = G === n ? ot : G + ot);
        }
        return G;
      }
      function t_(U, Y) {
        for (var G = -1, Ee = Array(U); ++G < U; )
          Ee[G] = Y(G);
        return Ee;
      }
      function QS(U, Y) {
        return vt(Y, function(G) {
          return [G, U[G]];
        });
      }
      function Hf(U) {
        return U && U.slice(0, Kf(U) + 1).replace(en, "");
      }
      function Nn(U) {
        return function(Y) {
          return U(Y);
        };
      }
      function n_(U, Y) {
        return vt(Y, function(G) {
          return U[G];
        });
      }
      function Oi(U, Y) {
        return U.has(Y);
      }
      function Vf(U, Y) {
        for (var G = -1, Ee = U.length; ++G < Ee && Ws(Y, U[G], 0) > -1; )
          ;
        return G;
      }
      function Wf(U, Y) {
        for (var G = U.length; G-- && Ws(Y, U[G], 0) > -1; )
          ;
        return G;
      }
      function eb(U, Y) {
        for (var G = U.length, Ee = 0; G--; )
          U[G] === Y && ++Ee;
        return Ee;
      }
      var tb = Qu(qS), nb = Qu($S);
      function rb(U) {
        return "\\" + US[U];
      }
      function ab(U, Y) {
        return U == null ? n : U[Y];
      }
      function Gs(U) {
        return PS.test(U);
      }
      function sb(U) {
        return xS.test(U);
      }
      function ib(U) {
        for (var Y, G = []; !(Y = U.next()).done; )
          G.push(Y.value);
        return G;
      }
      function r_(U) {
        var Y = -1, G = Array(U.size);
        return U.forEach(function(Ee, $e) {
          G[++Y] = [$e, Ee];
        }), G;
      }
      function Gf(U, Y) {
        return function(G) {
          return U(Y(G));
        };
      }
      function ba(U, Y) {
        for (var G = -1, Ee = U.length, $e = 0, ot = []; ++G < Ee; ) {
          var $t = U[G];
          ($t === Y || $t === E) && (U[G] = E, ot[$e++] = G);
        }
        return ot;
      }
      function $l(U) {
        var Y = -1, G = Array(U.size);
        return U.forEach(function(Ee) {
          G[++Y] = Ee;
        }), G;
      }
      function lb(U) {
        var Y = -1, G = Array(U.size);
        return U.forEach(function(Ee) {
          G[++Y] = [Ee, Ee];
        }), G;
      }
      function ob(U, Y, G) {
        for (var Ee = G - 1, $e = U.length; ++Ee < $e; )
          if (U[Ee] === Y)
            return Ee;
        return -1;
      }
      function ub(U, Y, G) {
        for (var Ee = G + 1; Ee--; )
          if (U[Ee] === Y)
            return Ee;
        return Ee;
      }
      function Ks(U) {
        return Gs(U) ? db(U) : zS(U);
      }
      function pr(U) {
        return Gs(U) ? cb(U) : YS(U);
      }
      function Kf(U) {
        for (var Y = U.length; Y-- && Ta.test(U.charAt(Y)); )
          ;
        return Y;
      }
      var _b = Qu(kS);
      function db(U) {
        for (var Y = Ku.lastIndex = 0; Ku.test(U); )
          ++Y;
        return Y;
      }
      function cb(U) {
        return U.match(Ku) || [];
      }
      function fb(U) {
        return U.match(wS) || [];
      }
      var hb = function U(Y) {
        Y = Y == null ? Kt : js.defaults(Kt.Object(), Y, js.pick(Kt, FS));
        var G = Y.Array, Ee = Y.Date, $e = Y.Error, ot = Y.Function, $t = Y.Math, ht = Y.Object, a_ = Y.RegExp, Ab = Y.String, er = Y.TypeError, kl = G.prototype, Eb = ot.prototype, zs = ht.prototype, Ul = Y["__core-js_shared__"], Hl = Eb.toString, ct = zs.hasOwnProperty, pb = 0, jf = function() {
          var a = /[^.]+$/.exec(Ul && Ul.keys && Ul.keys.IE_PROTO || "");
          return a ? "Symbol(src)_1." + a : "";
        }(), Vl = zs.toString, Tb = Hl.call(ht), mb = Kt._, Sb = a_(
          "^" + Hl.call(ct).replace(Br, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
        ), Wl = Nf ? Y.Buffer : n, La = Y.Symbol, Gl = Y.Uint8Array, zf = Wl ? Wl.allocUnsafe : n, Kl = Gf(ht.getPrototypeOf, ht), Yf = ht.create, Xf = zs.propertyIsEnumerable, jl = kl.splice, Zf = La ? La.isConcatSpreadable : n, Ci = La ? La.iterator : n, Es = La ? La.toStringTag : n, zl = function() {
          try {
            var a = bs(ht, "defineProperty");
            return a({}, "", {}), a;
          } catch {
          }
        }(), bb = Y.clearTimeout !== Kt.clearTimeout && Y.clearTimeout, Lb = Ee && Ee.now !== Kt.Date.now && Ee.now, vb = Y.setTimeout !== Kt.setTimeout && Y.setTimeout, Yl = $t.ceil, Xl = $t.floor, s_ = ht.getOwnPropertySymbols, Ib = Wl ? Wl.isBuffer : n, Jf = Y.isFinite, yb = kl.join, gb = Gf(ht.keys, ht), kt = $t.max, nn = $t.min, Rb = Ee.now, Ob = Y.parseInt, Qf = $t.random, Cb = kl.reverse, i_ = bs(Y, "DataView"), Ni = bs(Y, "Map"), l_ = bs(Y, "Promise"), Ys = bs(Y, "Set"), Di = bs(Y, "WeakMap"), Bi = bs(ht, "create"), Zl = Di && new Di(), Xs = {}, Nb = Ls(i_), Db = Ls(Ni), Bb = Ls(l_), wb = Ls(Ys), Pb = Ls(Di), Jl = La ? La.prototype : n, wi = Jl ? Jl.valueOf : n, eh = Jl ? Jl.toString : n;
        function O(a) {
          if (gt(a) && !ke(a) && !(a instanceof Je)) {
            if (a instanceof tr)
              return a;
            if (ct.call(a, "__wrapped__"))
              return tA(a);
          }
          return new tr(a);
        }
        var Zs = /* @__PURE__ */ function() {
          function a() {
          }
          return function(l) {
            if (!It(l))
              return {};
            if (Yf)
              return Yf(l);
            a.prototype = l;
            var f = new a();
            return a.prototype = n, f;
          };
        }();
        function Ql() {
        }
        function tr(a, l) {
          this.__wrapped__ = a, this.__actions__ = [], this.__chain__ = !!l, this.__index__ = 0, this.__values__ = n;
        }
        O.templateSettings = {
          /**
           * Used to detect `data` property values to be HTML-escaped.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          escape: Lt,
          /**
           * Used to detect code to be evaluated.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          evaluate: Xn,
          /**
           * Used to detect `data` property values to inject.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          interpolate: jr,
          /**
           * Used to reference the data object in the template text.
           *
           * @memberOf _.templateSettings
           * @type {string}
           */
          variable: "",
          /**
           * Used to import variables into the compiled template.
           *
           * @memberOf _.templateSettings
           * @type {Object}
           */
          imports: {
            /**
             * A reference to the `lodash` function.
             *
             * @memberOf _.templateSettings.imports
             * @type {Function}
             */
            _: O
          }
        }, O.prototype = Ql.prototype, O.prototype.constructor = O, tr.prototype = Zs(Ql.prototype), tr.prototype.constructor = tr;
        function Je(a) {
          this.__wrapped__ = a, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = se, this.__views__ = [];
        }
        function xb() {
          var a = new Je(this.__wrapped__);
          return a.__actions__ = mn(this.__actions__), a.__dir__ = this.__dir__, a.__filtered__ = this.__filtered__, a.__iteratees__ = mn(this.__iteratees__), a.__takeCount__ = this.__takeCount__, a.__views__ = mn(this.__views__), a;
        }
        function Fb() {
          if (this.__filtered__) {
            var a = new Je(this);
            a.__dir__ = -1, a.__filtered__ = !0;
          } else
            a = this.clone(), a.__dir__ *= -1;
          return a;
        }
        function Mb() {
          var a = this.__wrapped__.value(), l = this.__dir__, f = ke(a), m = l < 0, y = f ? a.length : 0, N = YL(0, y, this.__views__), x = N.start, q = N.end, W = q - x, Z = m ? q : x - 1, J = this.__iteratees__, te = J.length, ce = 0, Ie = nn(W, this.__takeCount__);
          if (!f || !m && y == W && Ie == W)
            return Ih(a, this.__actions__);
          var Be = [];
          e:
            for (; W-- && ce < Ie; ) {
              Z += l;
              for (var We = -1, we = a[Z]; ++We < te; ) {
                var ze = J[We], tt = ze.iteratee, wn = ze.type, dn = tt(we);
                if (wn == _e)
                  we = dn;
                else if (!dn) {
                  if (wn == ee)
                    continue e;
                  break e;
                }
              }
              Be[ce++] = we;
            }
          return Be;
        }
        Je.prototype = Zs(Ql.prototype), Je.prototype.constructor = Je;
        function ps(a) {
          var l = -1, f = a == null ? 0 : a.length;
          for (this.clear(); ++l < f; ) {
            var m = a[l];
            this.set(m[0], m[1]);
          }
        }
        function qb() {
          this.__data__ = Bi ? Bi(null) : {}, this.size = 0;
        }
        function $b(a) {
          var l = this.has(a) && delete this.__data__[a];
          return this.size -= l ? 1 : 0, l;
        }
        function kb(a) {
          var l = this.__data__;
          if (Bi) {
            var f = l[a];
            return f === h ? n : f;
          }
          return ct.call(l, a) ? l[a] : n;
        }
        function Ub(a) {
          var l = this.__data__;
          return Bi ? l[a] !== n : ct.call(l, a);
        }
        function Hb(a, l) {
          var f = this.__data__;
          return this.size += this.has(a) ? 0 : 1, f[a] = Bi && l === n ? h : l, this;
        }
        ps.prototype.clear = qb, ps.prototype.delete = $b, ps.prototype.get = kb, ps.prototype.has = Ub, ps.prototype.set = Hb;
        function Yr(a) {
          var l = -1, f = a == null ? 0 : a.length;
          for (this.clear(); ++l < f; ) {
            var m = a[l];
            this.set(m[0], m[1]);
          }
        }
        function Vb() {
          this.__data__ = [], this.size = 0;
        }
        function Wb(a) {
          var l = this.__data__, f = eo(l, a);
          if (f < 0)
            return !1;
          var m = l.length - 1;
          return f == m ? l.pop() : jl.call(l, f, 1), --this.size, !0;
        }
        function Gb(a) {
          var l = this.__data__, f = eo(l, a);
          return f < 0 ? n : l[f][1];
        }
        function Kb(a) {
          return eo(this.__data__, a) > -1;
        }
        function jb(a, l) {
          var f = this.__data__, m = eo(f, a);
          return m < 0 ? (++this.size, f.push([a, l])) : f[m][1] = l, this;
        }
        Yr.prototype.clear = Vb, Yr.prototype.delete = Wb, Yr.prototype.get = Gb, Yr.prototype.has = Kb, Yr.prototype.set = jb;
        function Xr(a) {
          var l = -1, f = a == null ? 0 : a.length;
          for (this.clear(); ++l < f; ) {
            var m = a[l];
            this.set(m[0], m[1]);
          }
        }
        function zb() {
          this.size = 0, this.__data__ = {
            hash: new ps(),
            map: new (Ni || Yr)(),
            string: new ps()
          };
        }
        function Yb(a) {
          var l = fo(this, a).delete(a);
          return this.size -= l ? 1 : 0, l;
        }
        function Xb(a) {
          return fo(this, a).get(a);
        }
        function Zb(a) {
          return fo(this, a).has(a);
        }
        function Jb(a, l) {
          var f = fo(this, a), m = f.size;
          return f.set(a, l), this.size += f.size == m ? 0 : 1, this;
        }
        Xr.prototype.clear = zb, Xr.prototype.delete = Yb, Xr.prototype.get = Xb, Xr.prototype.has = Zb, Xr.prototype.set = Jb;
        function Ts(a) {
          var l = -1, f = a == null ? 0 : a.length;
          for (this.__data__ = new Xr(); ++l < f; )
            this.add(a[l]);
        }
        function Qb(a) {
          return this.__data__.set(a, h), this;
        }
        function eL(a) {
          return this.__data__.has(a);
        }
        Ts.prototype.add = Ts.prototype.push = Qb, Ts.prototype.has = eL;
        function Tr(a) {
          var l = this.__data__ = new Yr(a);
          this.size = l.size;
        }
        function tL() {
          this.__data__ = new Yr(), this.size = 0;
        }
        function nL(a) {
          var l = this.__data__, f = l.delete(a);
          return this.size = l.size, f;
        }
        function rL(a) {
          return this.__data__.get(a);
        }
        function aL(a) {
          return this.__data__.has(a);
        }
        function sL(a, l) {
          var f = this.__data__;
          if (f instanceof Yr) {
            var m = f.__data__;
            if (!Ni || m.length < s - 1)
              return m.push([a, l]), this.size = ++f.size, this;
            f = this.__data__ = new Xr(m);
          }
          return f.set(a, l), this.size = f.size, this;
        }
        Tr.prototype.clear = tL, Tr.prototype.delete = nL, Tr.prototype.get = rL, Tr.prototype.has = aL, Tr.prototype.set = sL;
        function th(a, l) {
          var f = ke(a), m = !f && vs(a), y = !f && !m && Ra(a), N = !f && !m && !y && ti(a), x = f || m || y || N, q = x ? t_(a.length, Ab) : [], W = q.length;
          for (var Z in a)
            (l || ct.call(a, Z)) && !(x && // Safari 9 has enumerable `arguments.length` in strict mode.
            (Z == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
            y && (Z == "offset" || Z == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
            N && (Z == "buffer" || Z == "byteLength" || Z == "byteOffset") || // Skip index properties.
            ea(Z, W))) && q.push(Z);
          return q;
        }
        function nh(a) {
          var l = a.length;
          return l ? a[T_(0, l - 1)] : n;
        }
        function iL(a, l) {
          return ho(mn(a), ms(l, 0, a.length));
        }
        function lL(a) {
          return ho(mn(a));
        }
        function o_(a, l, f) {
          (f !== n && !mr(a[l], f) || f === n && !(l in a)) && Zr(a, l, f);
        }
        function Pi(a, l, f) {
          var m = a[l];
          (!(ct.call(a, l) && mr(m, f)) || f === n && !(l in a)) && Zr(a, l, f);
        }
        function eo(a, l) {
          for (var f = a.length; f--; )
            if (mr(a[f][0], l))
              return f;
          return -1;
        }
        function oL(a, l, f, m) {
          return va(a, function(y, N, x) {
            l(m, y, f(y), x);
          }), m;
        }
        function rh(a, l) {
          return a && Pr(l, Wt(l), a);
        }
        function uL(a, l) {
          return a && Pr(l, bn(l), a);
        }
        function Zr(a, l, f) {
          l == "__proto__" && zl ? zl(a, l, {
            configurable: !0,
            enumerable: !0,
            value: f,
            writable: !0
          }) : a[l] = f;
        }
        function u_(a, l) {
          for (var f = -1, m = l.length, y = G(m), N = a == null; ++f < m; )
            y[f] = N ? n : V_(a, l[f]);
          return y;
        }
        function ms(a, l, f) {
          return a === a && (f !== n && (a = a <= f ? a : f), l !== n && (a = a >= l ? a : l)), a;
        }
        function nr(a, l, f, m, y, N) {
          var x, q = l & p, W = l & T, Z = l & S;
          if (f && (x = y ? f(a, m, y, N) : f(a)), x !== n)
            return x;
          if (!It(a))
            return a;
          var J = ke(a);
          if (J) {
            if (x = ZL(a), !q)
              return mn(a, x);
          } else {
            var te = rn(a), ce = te == qe || te == Xe;
            if (Ra(a))
              return Rh(a, q);
            if (te == Ve || te == he || ce && !y) {
              if (x = W || ce ? {} : Kh(a), !q)
                return W ? kL(a, uL(x, a)) : $L(a, rh(x, a));
            } else {
              if (!pt[te])
                return y ? a : {};
              x = JL(a, te, q);
            }
          }
          N || (N = new Tr());
          var Ie = N.get(a);
          if (Ie)
            return Ie;
          N.set(a, x), bA(a) ? a.forEach(function(we) {
            x.add(nr(we, l, f, we, a, N));
          }) : mA(a) && a.forEach(function(we, ze) {
            x.set(ze, nr(we, l, f, ze, a, N));
          });
          var Be = Z ? W ? C_ : O_ : W ? bn : Wt, We = J ? n : Be(a);
          return Qn(We || a, function(we, ze) {
            We && (ze = we, we = a[ze]), Pi(x, ze, nr(we, l, f, ze, a, N));
          }), x;
        }
        function _L(a) {
          var l = Wt(a);
          return function(f) {
            return ah(f, a, l);
          };
        }
        function ah(a, l, f) {
          var m = f.length;
          if (a == null)
            return !m;
          for (a = ht(a); m--; ) {
            var y = f[m], N = l[y], x = a[y];
            if (x === n && !(y in a) || !N(x))
              return !1;
          }
          return !0;
        }
        function sh(a, l, f) {
          if (typeof a != "function")
            throw new er(o);
          return Ui(function() {
            a.apply(n, f);
          }, l);
        }
        function xi(a, l, f, m) {
          var y = -1, N = Ml, x = !0, q = a.length, W = [], Z = l.length;
          if (!q)
            return W;
          f && (l = vt(l, Nn(f))), m ? (N = Yu, x = !1) : l.length >= s && (N = Oi, x = !1, l = new Ts(l));
          e:
            for (; ++y < q; ) {
              var J = a[y], te = f == null ? J : f(J);
              if (J = m || J !== 0 ? J : 0, x && te === te) {
                for (var ce = Z; ce--; )
                  if (l[ce] === te)
                    continue e;
                W.push(J);
              } else N(l, te, m) || W.push(J);
            }
          return W;
        }
        var va = Bh(wr), ih = Bh(d_, !0);
        function dL(a, l) {
          var f = !0;
          return va(a, function(m, y, N) {
            return f = !!l(m, y, N), f;
          }), f;
        }
        function to(a, l, f) {
          for (var m = -1, y = a.length; ++m < y; ) {
            var N = a[m], x = l(N);
            if (x != null && (q === n ? x === x && !Bn(x) : f(x, q)))
              var q = x, W = N;
          }
          return W;
        }
        function cL(a, l, f, m) {
          var y = a.length;
          for (f = He(f), f < 0 && (f = -f > y ? 0 : y + f), m = m === n || m > y ? y : He(m), m < 0 && (m += y), m = f > m ? 0 : vA(m); f < m; )
            a[f++] = l;
          return a;
        }
        function lh(a, l) {
          var f = [];
          return va(a, function(m, y, N) {
            l(m, y, N) && f.push(m);
          }), f;
        }
        function jt(a, l, f, m, y) {
          var N = -1, x = a.length;
          for (f || (f = ev), y || (y = []); ++N < x; ) {
            var q = a[N];
            l > 0 && f(q) ? l > 1 ? jt(q, l - 1, f, m, y) : Sa(y, q) : m || (y[y.length] = q);
          }
          return y;
        }
        var __ = wh(), oh = wh(!0);
        function wr(a, l) {
          return a && __(a, l, Wt);
        }
        function d_(a, l) {
          return a && oh(a, l, Wt);
        }
        function no(a, l) {
          return ma(l, function(f) {
            return ta(a[f]);
          });
        }
        function Ss(a, l) {
          l = ya(l, a);
          for (var f = 0, m = l.length; a != null && f < m; )
            a = a[xr(l[f++])];
          return f && f == m ? a : n;
        }
        function uh(a, l, f) {
          var m = l(a);
          return ke(a) ? m : Sa(m, f(a));
        }
        function un(a) {
          return a == null ? a === n ? cr : at : Es && Es in ht(a) ? zL(a) : lv(a);
        }
        function c_(a, l) {
          return a > l;
        }
        function fL(a, l) {
          return a != null && ct.call(a, l);
        }
        function hL(a, l) {
          return a != null && l in ht(a);
        }
        function AL(a, l, f) {
          return a >= nn(l, f) && a < kt(l, f);
        }
        function f_(a, l, f) {
          for (var m = f ? Yu : Ml, y = a[0].length, N = a.length, x = N, q = G(N), W = 1 / 0, Z = []; x--; ) {
            var J = a[x];
            x && l && (J = vt(J, Nn(l))), W = nn(J.length, W), q[x] = !f && (l || y >= 120 && J.length >= 120) ? new Ts(x && J) : n;
          }
          J = a[0];
          var te = -1, ce = q[0];
          e:
            for (; ++te < y && Z.length < W; ) {
              var Ie = J[te], Be = l ? l(Ie) : Ie;
              if (Ie = f || Ie !== 0 ? Ie : 0, !(ce ? Oi(ce, Be) : m(Z, Be, f))) {
                for (x = N; --x; ) {
                  var We = q[x];
                  if (!(We ? Oi(We, Be) : m(a[x], Be, f)))
                    continue e;
                }
                ce && ce.push(Be), Z.push(Ie);
              }
            }
          return Z;
        }
        function EL(a, l, f, m) {
          return wr(a, function(y, N, x) {
            l(m, f(y), N, x);
          }), m;
        }
        function Fi(a, l, f) {
          l = ya(l, a), a = Xh(a, l);
          var m = a == null ? a : a[xr(ar(l))];
          return m == null ? n : Cn(m, a, f);
        }
        function _h(a) {
          return gt(a) && un(a) == he;
        }
        function pL(a) {
          return gt(a) && un(a) == Kn;
        }
        function TL(a) {
          return gt(a) && un(a) == re;
        }
        function Mi(a, l, f, m, y) {
          return a === l ? !0 : a == null || l == null || !gt(a) && !gt(l) ? a !== a && l !== l : mL(a, l, f, m, Mi, y);
        }
        function mL(a, l, f, m, y, N) {
          var x = ke(a), q = ke(l), W = x ? ne : rn(a), Z = q ? ne : rn(l);
          W = W == he ? Ve : W, Z = Z == he ? Ve : Z;
          var J = W == Ve, te = Z == Ve, ce = W == Z;
          if (ce && Ra(a)) {
            if (!Ra(l))
              return !1;
            x = !0, J = !1;
          }
          if (ce && !J)
            return N || (N = new Tr()), x || ti(a) ? Vh(a, l, f, m, y, N) : KL(a, l, W, f, m, y, N);
          if (!(f & b)) {
            var Ie = J && ct.call(a, "__wrapped__"), Be = te && ct.call(l, "__wrapped__");
            if (Ie || Be) {
              var We = Ie ? a.value() : a, we = Be ? l.value() : l;
              return N || (N = new Tr()), y(We, we, f, m, N);
            }
          }
          return ce ? (N || (N = new Tr()), jL(a, l, f, m, y, N)) : !1;
        }
        function SL(a) {
          return gt(a) && rn(a) == Me;
        }
        function h_(a, l, f, m) {
          var y = f.length, N = y, x = !m;
          if (a == null)
            return !N;
          for (a = ht(a); y--; ) {
            var q = f[y];
            if (x && q[2] ? q[1] !== a[q[0]] : !(q[0] in a))
              return !1;
          }
          for (; ++y < N; ) {
            q = f[y];
            var W = q[0], Z = a[W], J = q[1];
            if (x && q[2]) {
              if (Z === n && !(W in a))
                return !1;
            } else {
              var te = new Tr();
              if (m)
                var ce = m(Z, J, W, a, l, te);
              if (!(ce === n ? Mi(J, Z, b | L, m, te) : ce))
                return !1;
            }
          }
          return !0;
        }
        function dh(a) {
          if (!It(a) || nv(a))
            return !1;
          var l = ta(a) ? Sb : Re;
          return l.test(Ls(a));
        }
        function bL(a) {
          return gt(a) && un(a) == At;
        }
        function LL(a) {
          return gt(a) && rn(a) == Et;
        }
        function vL(a) {
          return gt(a) && So(a.length) && !!mt[un(a)];
        }
        function ch(a) {
          return typeof a == "function" ? a : a == null ? Ln : typeof a == "object" ? ke(a) ? Ah(a[0], a[1]) : hh(a) : PA(a);
        }
        function A_(a) {
          if (!ki(a))
            return gb(a);
          var l = [];
          for (var f in ht(a))
            ct.call(a, f) && f != "constructor" && l.push(f);
          return l;
        }
        function IL(a) {
          if (!It(a))
            return iv(a);
          var l = ki(a), f = [];
          for (var m in a)
            m == "constructor" && (l || !ct.call(a, m)) || f.push(m);
          return f;
        }
        function E_(a, l) {
          return a < l;
        }
        function fh(a, l) {
          var f = -1, m = Sn(a) ? G(a.length) : [];
          return va(a, function(y, N, x) {
            m[++f] = l(y, N, x);
          }), m;
        }
        function hh(a) {
          var l = D_(a);
          return l.length == 1 && l[0][2] ? zh(l[0][0], l[0][1]) : function(f) {
            return f === a || h_(f, a, l);
          };
        }
        function Ah(a, l) {
          return w_(a) && jh(l) ? zh(xr(a), l) : function(f) {
            var m = V_(f, a);
            return m === n && m === l ? W_(f, a) : Mi(l, m, b | L);
          };
        }
        function ro(a, l, f, m, y) {
          a !== l && __(l, function(N, x) {
            if (y || (y = new Tr()), It(N))
              yL(a, l, x, f, ro, m, y);
            else {
              var q = m ? m(x_(a, x), N, x + "", a, l, y) : n;
              q === n && (q = N), o_(a, x, q);
            }
          }, bn);
        }
        function yL(a, l, f, m, y, N, x) {
          var q = x_(a, f), W = x_(l, f), Z = x.get(W);
          if (Z) {
            o_(a, f, Z);
            return;
          }
          var J = N ? N(q, W, f + "", a, l, x) : n, te = J === n;
          if (te) {
            var ce = ke(W), Ie = !ce && Ra(W), Be = !ce && !Ie && ti(W);
            J = W, ce || Ie || Be ? ke(q) ? J = q : wt(q) ? J = mn(q) : Ie ? (te = !1, J = Rh(W, !0)) : Be ? (te = !1, J = Oh(W, !0)) : J = [] : Hi(W) || vs(W) ? (J = q, vs(q) ? J = IA(q) : (!It(q) || ta(q)) && (J = Kh(W))) : te = !1;
          }
          te && (x.set(W, J), y(J, W, m, N, x), x.delete(W)), o_(a, f, J);
        }
        function Eh(a, l) {
          var f = a.length;
          if (f)
            return l += l < 0 ? f : 0, ea(l, f) ? a[l] : n;
        }
        function ph(a, l, f) {
          l.length ? l = vt(l, function(N) {
            return ke(N) ? function(x) {
              return Ss(x, N.length === 1 ? N[0] : N);
            } : N;
          }) : l = [Ln];
          var m = -1;
          l = vt(l, Nn(Ne()));
          var y = fh(a, function(N, x, q) {
            var W = vt(l, function(Z) {
              return Z(N);
            });
            return { criteria: W, index: ++m, value: N };
          });
          return JS(y, function(N, x) {
            return qL(N, x, f);
          });
        }
        function gL(a, l) {
          return Th(a, l, function(f, m) {
            return W_(a, m);
          });
        }
        function Th(a, l, f) {
          for (var m = -1, y = l.length, N = {}; ++m < y; ) {
            var x = l[m], q = Ss(a, x);
            f(q, x) && qi(N, ya(x, a), q);
          }
          return N;
        }
        function RL(a) {
          return function(l) {
            return Ss(l, a);
          };
        }
        function p_(a, l, f, m) {
          var y = m ? ZS : Ws, N = -1, x = l.length, q = a;
          for (a === l && (l = mn(l)), f && (q = vt(a, Nn(f))); ++N < x; )
            for (var W = 0, Z = l[N], J = f ? f(Z) : Z; (W = y(q, J, W, m)) > -1; )
              q !== a && jl.call(q, W, 1), jl.call(a, W, 1);
          return a;
        }
        function mh(a, l) {
          for (var f = a ? l.length : 0, m = f - 1; f--; ) {
            var y = l[f];
            if (f == m || y !== N) {
              var N = y;
              ea(y) ? jl.call(a, y, 1) : b_(a, y);
            }
          }
          return a;
        }
        function T_(a, l) {
          return a + Xl(Qf() * (l - a + 1));
        }
        function OL(a, l, f, m) {
          for (var y = -1, N = kt(Yl((l - a) / (f || 1)), 0), x = G(N); N--; )
            x[m ? N : ++y] = a, a += f;
          return x;
        }
        function m_(a, l) {
          var f = "";
          if (!a || l < 1 || l > Te)
            return f;
          do
            l % 2 && (f += a), l = Xl(l / 2), l && (a += a);
          while (l);
          return f;
        }
        function Ge(a, l) {
          return F_(Yh(a, l, Ln), a + "");
        }
        function CL(a) {
          return nh(ni(a));
        }
        function NL(a, l) {
          var f = ni(a);
          return ho(f, ms(l, 0, f.length));
        }
        function qi(a, l, f, m) {
          if (!It(a))
            return a;
          l = ya(l, a);
          for (var y = -1, N = l.length, x = N - 1, q = a; q != null && ++y < N; ) {
            var W = xr(l[y]), Z = f;
            if (W === "__proto__" || W === "constructor" || W === "prototype")
              return a;
            if (y != x) {
              var J = q[W];
              Z = m ? m(J, W, q) : n, Z === n && (Z = It(J) ? J : ea(l[y + 1]) ? [] : {});
            }
            Pi(q, W, Z), q = q[W];
          }
          return a;
        }
        var Sh = Zl ? function(a, l) {
          return Zl.set(a, l), a;
        } : Ln, DL = zl ? function(a, l) {
          return zl(a, "toString", {
            configurable: !0,
            enumerable: !1,
            value: K_(l),
            writable: !0
          });
        } : Ln;
        function BL(a) {
          return ho(ni(a));
        }
        function rr(a, l, f) {
          var m = -1, y = a.length;
          l < 0 && (l = -l > y ? 0 : y + l), f = f > y ? y : f, f < 0 && (f += y), y = l > f ? 0 : f - l >>> 0, l >>>= 0;
          for (var N = G(y); ++m < y; )
            N[m] = a[m + l];
          return N;
        }
        function wL(a, l) {
          var f;
          return va(a, function(m, y, N) {
            return f = l(m, y, N), !f;
          }), !!f;
        }
        function ao(a, l, f) {
          var m = 0, y = a == null ? m : a.length;
          if (typeof l == "number" && l === l && y <= ye) {
            for (; m < y; ) {
              var N = m + y >>> 1, x = a[N];
              x !== null && !Bn(x) && (f ? x <= l : x < l) ? m = N + 1 : y = N;
            }
            return y;
          }
          return S_(a, l, Ln, f);
        }
        function S_(a, l, f, m) {
          var y = 0, N = a == null ? 0 : a.length;
          if (N === 0)
            return 0;
          l = f(l);
          for (var x = l !== l, q = l === null, W = Bn(l), Z = l === n; y < N; ) {
            var J = Xl((y + N) / 2), te = f(a[J]), ce = te !== n, Ie = te === null, Be = te === te, We = Bn(te);
            if (x)
              var we = m || Be;
            else Z ? we = Be && (m || ce) : q ? we = Be && ce && (m || !Ie) : W ? we = Be && ce && !Ie && (m || !We) : Ie || We ? we = !1 : we = m ? te <= l : te < l;
            we ? y = J + 1 : N = J;
          }
          return nn(N, Oe);
        }
        function bh(a, l) {
          for (var f = -1, m = a.length, y = 0, N = []; ++f < m; ) {
            var x = a[f], q = l ? l(x) : x;
            if (!f || !mr(q, W)) {
              var W = q;
              N[y++] = x === 0 ? 0 : x;
            }
          }
          return N;
        }
        function Lh(a) {
          return typeof a == "number" ? a : Bn(a) ? Se : +a;
        }
        function Dn(a) {
          if (typeof a == "string")
            return a;
          if (ke(a))
            return vt(a, Dn) + "";
          if (Bn(a))
            return eh ? eh.call(a) : "";
          var l = a + "";
          return l == "0" && 1 / a == -1 / 0 ? "-0" : l;
        }
        function Ia(a, l, f) {
          var m = -1, y = Ml, N = a.length, x = !0, q = [], W = q;
          if (f)
            x = !1, y = Yu;
          else if (N >= s) {
            var Z = l ? null : WL(a);
            if (Z)
              return $l(Z);
            x = !1, y = Oi, W = new Ts();
          } else
            W = l ? [] : q;
          e:
            for (; ++m < N; ) {
              var J = a[m], te = l ? l(J) : J;
              if (J = f || J !== 0 ? J : 0, x && te === te) {
                for (var ce = W.length; ce--; )
                  if (W[ce] === te)
                    continue e;
                l && W.push(te), q.push(J);
              } else y(W, te, f) || (W !== q && W.push(te), q.push(J));
            }
          return q;
        }
        function b_(a, l) {
          return l = ya(l, a), a = Xh(a, l), a == null || delete a[xr(ar(l))];
        }
        function vh(a, l, f, m) {
          return qi(a, l, f(Ss(a, l)), m);
        }
        function so(a, l, f, m) {
          for (var y = a.length, N = m ? y : -1; (m ? N-- : ++N < y) && l(a[N], N, a); )
            ;
          return f ? rr(a, m ? 0 : N, m ? N + 1 : y) : rr(a, m ? N + 1 : 0, m ? y : N);
        }
        function Ih(a, l) {
          var f = a;
          return f instanceof Je && (f = f.value()), Xu(l, function(m, y) {
            return y.func.apply(y.thisArg, Sa([m], y.args));
          }, f);
        }
        function L_(a, l, f) {
          var m = a.length;
          if (m < 2)
            return m ? Ia(a[0]) : [];
          for (var y = -1, N = G(m); ++y < m; )
            for (var x = a[y], q = -1; ++q < m; )
              q != y && (N[y] = xi(N[y] || x, a[q], l, f));
          return Ia(jt(N, 1), l, f);
        }
        function yh(a, l, f) {
          for (var m = -1, y = a.length, N = l.length, x = {}; ++m < y; ) {
            var q = m < N ? l[m] : n;
            f(x, a[m], q);
          }
          return x;
        }
        function v_(a) {
          return wt(a) ? a : [];
        }
        function I_(a) {
          return typeof a == "function" ? a : Ln;
        }
        function ya(a, l) {
          return ke(a) ? a : w_(a, l) ? [a] : eA(_t(a));
        }
        var PL = Ge;
        function ga(a, l, f) {
          var m = a.length;
          return f = f === n ? m : f, !l && f >= m ? a : rr(a, l, f);
        }
        var gh = bb || function(a) {
          return Kt.clearTimeout(a);
        };
        function Rh(a, l) {
          if (l)
            return a.slice();
          var f = a.length, m = zf ? zf(f) : new a.constructor(f);
          return a.copy(m), m;
        }
        function y_(a) {
          var l = new a.constructor(a.byteLength);
          return new Gl(l).set(new Gl(a)), l;
        }
        function xL(a, l) {
          var f = l ? y_(a.buffer) : a.buffer;
          return new a.constructor(f, a.byteOffset, a.byteLength);
        }
        function FL(a) {
          var l = new a.constructor(a.source, yi.exec(a));
          return l.lastIndex = a.lastIndex, l;
        }
        function ML(a) {
          return wi ? ht(wi.call(a)) : {};
        }
        function Oh(a, l) {
          var f = l ? y_(a.buffer) : a.buffer;
          return new a.constructor(f, a.byteOffset, a.length);
        }
        function Ch(a, l) {
          if (a !== l) {
            var f = a !== n, m = a === null, y = a === a, N = Bn(a), x = l !== n, q = l === null, W = l === l, Z = Bn(l);
            if (!q && !Z && !N && a > l || N && x && W && !q && !Z || m && x && W || !f && W || !y)
              return 1;
            if (!m && !N && !Z && a < l || Z && f && y && !m && !N || q && f && y || !x && y || !W)
              return -1;
          }
          return 0;
        }
        function qL(a, l, f) {
          for (var m = -1, y = a.criteria, N = l.criteria, x = y.length, q = f.length; ++m < x; ) {
            var W = Ch(y[m], N[m]);
            if (W) {
              if (m >= q)
                return W;
              var Z = f[m];
              return W * (Z == "desc" ? -1 : 1);
            }
          }
          return a.index - l.index;
        }
        function Nh(a, l, f, m) {
          for (var y = -1, N = a.length, x = f.length, q = -1, W = l.length, Z = kt(N - x, 0), J = G(W + Z), te = !m; ++q < W; )
            J[q] = l[q];
          for (; ++y < x; )
            (te || y < N) && (J[f[y]] = a[y]);
          for (; Z--; )
            J[q++] = a[y++];
          return J;
        }
        function Dh(a, l, f, m) {
          for (var y = -1, N = a.length, x = -1, q = f.length, W = -1, Z = l.length, J = kt(N - q, 0), te = G(J + Z), ce = !m; ++y < J; )
            te[y] = a[y];
          for (var Ie = y; ++W < Z; )
            te[Ie + W] = l[W];
          for (; ++x < q; )
            (ce || y < N) && (te[Ie + f[x]] = a[y++]);
          return te;
        }
        function mn(a, l) {
          var f = -1, m = a.length;
          for (l || (l = G(m)); ++f < m; )
            l[f] = a[f];
          return l;
        }
        function Pr(a, l, f, m) {
          var y = !f;
          f || (f = {});
          for (var N = -1, x = l.length; ++N < x; ) {
            var q = l[N], W = m ? m(f[q], a[q], q, f, a) : n;
            W === n && (W = a[q]), y ? Zr(f, q, W) : Pi(f, q, W);
          }
          return f;
        }
        function $L(a, l) {
          return Pr(a, B_(a), l);
        }
        function kL(a, l) {
          return Pr(a, Wh(a), l);
        }
        function io(a, l) {
          return function(f, m) {
            var y = ke(f) ? GS : oL, N = l ? l() : {};
            return y(f, a, Ne(m, 2), N);
          };
        }
        function Js(a) {
          return Ge(function(l, f) {
            var m = -1, y = f.length, N = y > 1 ? f[y - 1] : n, x = y > 2 ? f[2] : n;
            for (N = a.length > 3 && typeof N == "function" ? (y--, N) : n, x && _n(f[0], f[1], x) && (N = y < 3 ? n : N, y = 1), l = ht(l); ++m < y; ) {
              var q = f[m];
              q && a(l, q, m, N);
            }
            return l;
          });
        }
        function Bh(a, l) {
          return function(f, m) {
            if (f == null)
              return f;
            if (!Sn(f))
              return a(f, m);
            for (var y = f.length, N = l ? y : -1, x = ht(f); (l ? N-- : ++N < y) && m(x[N], N, x) !== !1; )
              ;
            return f;
          };
        }
        function wh(a) {
          return function(l, f, m) {
            for (var y = -1, N = ht(l), x = m(l), q = x.length; q--; ) {
              var W = x[a ? q : ++y];
              if (f(N[W], W, N) === !1)
                break;
            }
            return l;
          };
        }
        function UL(a, l, f) {
          var m = l & v, y = $i(a);
          function N() {
            var x = this && this !== Kt && this instanceof N ? y : a;
            return x.apply(m ? f : this, arguments);
          }
          return N;
        }
        function Ph(a) {
          return function(l) {
            l = _t(l);
            var f = Gs(l) ? pr(l) : n, m = f ? f[0] : l.charAt(0), y = f ? ga(f, 1).join("") : l.slice(1);
            return m[a]() + y;
          };
        }
        function Qs(a) {
          return function(l) {
            return Xu(BA(DA(l).replace(DS, "")), a, "");
          };
        }
        function $i(a) {
          return function() {
            var l = arguments;
            switch (l.length) {
              case 0:
                return new a();
              case 1:
                return new a(l[0]);
              case 2:
                return new a(l[0], l[1]);
              case 3:
                return new a(l[0], l[1], l[2]);
              case 4:
                return new a(l[0], l[1], l[2], l[3]);
              case 5:
                return new a(l[0], l[1], l[2], l[3], l[4]);
              case 6:
                return new a(l[0], l[1], l[2], l[3], l[4], l[5]);
              case 7:
                return new a(l[0], l[1], l[2], l[3], l[4], l[5], l[6]);
            }
            var f = Zs(a.prototype), m = a.apply(f, l);
            return It(m) ? m : f;
          };
        }
        function HL(a, l, f) {
          var m = $i(a);
          function y() {
            for (var N = arguments.length, x = G(N), q = N, W = ei(y); q--; )
              x[q] = arguments[q];
            var Z = N < 3 && x[0] !== W && x[N - 1] !== W ? [] : ba(x, W);
            if (N -= Z.length, N < f)
              return $h(
                a,
                l,
                lo,
                y.placeholder,
                n,
                x,
                Z,
                n,
                n,
                f - N
              );
            var J = this && this !== Kt && this instanceof y ? m : a;
            return Cn(J, this, x);
          }
          return y;
        }
        function xh(a) {
          return function(l, f, m) {
            var y = ht(l);
            if (!Sn(l)) {
              var N = Ne(f, 3);
              l = Wt(l), f = function(q) {
                return N(y[q], q, y);
              };
            }
            var x = a(l, f, m);
            return x > -1 ? y[N ? l[x] : x] : n;
          };
        }
        function Fh(a) {
          return Qr(function(l) {
            var f = l.length, m = f, y = tr.prototype.thru;
            for (a && l.reverse(); m--; ) {
              var N = l[m];
              if (typeof N != "function")
                throw new er(o);
              if (y && !x && co(N) == "wrapper")
                var x = new tr([], !0);
            }
            for (m = x ? m : f; ++m < f; ) {
              N = l[m];
              var q = co(N), W = q == "wrapper" ? N_(N) : n;
              W && P_(W[0]) && W[1] == (P | g | w | F) && !W[4].length && W[9] == 1 ? x = x[co(W[0])].apply(x, W[3]) : x = N.length == 1 && P_(N) ? x[q]() : x.thru(N);
            }
            return function() {
              var Z = arguments, J = Z[0];
              if (x && Z.length == 1 && ke(J))
                return x.plant(J).value();
              for (var te = 0, ce = f ? l[te].apply(this, Z) : J; ++te < f; )
                ce = l[te].call(this, ce);
              return ce;
            };
          });
        }
        function lo(a, l, f, m, y, N, x, q, W, Z) {
          var J = l & P, te = l & v, ce = l & I, Ie = l & (g | D), Be = l & C, We = ce ? n : $i(a);
          function we() {
            for (var ze = arguments.length, tt = G(ze), wn = ze; wn--; )
              tt[wn] = arguments[wn];
            if (Ie)
              var dn = ei(we), Pn = eb(tt, dn);
            if (m && (tt = Nh(tt, m, y, Ie)), N && (tt = Dh(tt, N, x, Ie)), ze -= Pn, Ie && ze < Z) {
              var Pt = ba(tt, dn);
              return $h(
                a,
                l,
                lo,
                we.placeholder,
                f,
                tt,
                Pt,
                q,
                W,
                Z - ze
              );
            }
            var Sr = te ? f : this, ra = ce ? Sr[a] : a;
            return ze = tt.length, q ? tt = ov(tt, q) : Be && ze > 1 && tt.reverse(), J && W < ze && (tt.length = W), this && this !== Kt && this instanceof we && (ra = We || $i(ra)), ra.apply(Sr, tt);
          }
          return we;
        }
        function Mh(a, l) {
          return function(f, m) {
            return EL(f, a, l(m), {});
          };
        }
        function oo(a, l) {
          return function(f, m) {
            var y;
            if (f === n && m === n)
              return l;
            if (f !== n && (y = f), m !== n) {
              if (y === n)
                return m;
              typeof f == "string" || typeof m == "string" ? (f = Dn(f), m = Dn(m)) : (f = Lh(f), m = Lh(m)), y = a(f, m);
            }
            return y;
          };
        }
        function g_(a) {
          return Qr(function(l) {
            return l = vt(l, Nn(Ne())), Ge(function(f) {
              var m = this;
              return a(l, function(y) {
                return Cn(y, m, f);
              });
            });
          });
        }
        function uo(a, l) {
          l = l === n ? " " : Dn(l);
          var f = l.length;
          if (f < 2)
            return f ? m_(l, a) : l;
          var m = m_(l, Yl(a / Ks(l)));
          return Gs(l) ? ga(pr(m), 0, a).join("") : m.slice(0, a);
        }
        function VL(a, l, f, m) {
          var y = l & v, N = $i(a);
          function x() {
            for (var q = -1, W = arguments.length, Z = -1, J = m.length, te = G(J + W), ce = this && this !== Kt && this instanceof x ? N : a; ++Z < J; )
              te[Z] = m[Z];
            for (; W--; )
              te[Z++] = arguments[++q];
            return Cn(ce, y ? f : this, te);
          }
          return x;
        }
        function qh(a) {
          return function(l, f, m) {
            return m && typeof m != "number" && _n(l, f, m) && (f = m = n), l = na(l), f === n ? (f = l, l = 0) : f = na(f), m = m === n ? l < f ? 1 : -1 : na(m), OL(l, f, m, a);
          };
        }
        function _o(a) {
          return function(l, f) {
            return typeof l == "string" && typeof f == "string" || (l = sr(l), f = sr(f)), a(l, f);
          };
        }
        function $h(a, l, f, m, y, N, x, q, W, Z) {
          var J = l & g, te = J ? x : n, ce = J ? n : x, Ie = J ? N : n, Be = J ? n : N;
          l |= J ? w : M, l &= ~(J ? M : w), l & R || (l &= -4);
          var We = [
            a,
            l,
            y,
            Ie,
            te,
            Be,
            ce,
            q,
            W,
            Z
          ], we = f.apply(n, We);
          return P_(a) && Zh(we, We), we.placeholder = m, Jh(we, a, l);
        }
        function R_(a) {
          var l = $t[a];
          return function(f, m) {
            if (f = sr(f), m = m == null ? 0 : nn(He(m), 292), m && Jf(f)) {
              var y = (_t(f) + "e").split("e"), N = l(y[0] + "e" + (+y[1] + m));
              return y = (_t(N) + "e").split("e"), +(y[0] + "e" + (+y[1] - m));
            }
            return l(f);
          };
        }
        var WL = Ys && 1 / $l(new Ys([, -0]))[1] == ue ? function(a) {
          return new Ys(a);
        } : Y_;
        function kh(a) {
          return function(l) {
            var f = rn(l);
            return f == Me ? r_(l) : f == Et ? lb(l) : QS(l, a(l));
          };
        }
        function Jr(a, l, f, m, y, N, x, q) {
          var W = l & I;
          if (!W && typeof a != "function")
            throw new er(o);
          var Z = m ? m.length : 0;
          if (Z || (l &= -97, m = y = n), x = x === n ? x : kt(He(x), 0), q = q === n ? q : He(q), Z -= y ? y.length : 0, l & M) {
            var J = m, te = y;
            m = y = n;
          }
          var ce = W ? n : N_(a), Ie = [
            a,
            l,
            f,
            m,
            y,
            J,
            te,
            N,
            x,
            q
          ];
          if (ce && sv(Ie, ce), a = Ie[0], l = Ie[1], f = Ie[2], m = Ie[3], y = Ie[4], q = Ie[9] = Ie[9] === n ? W ? 0 : a.length : kt(Ie[9] - Z, 0), !q && l & (g | D) && (l &= -25), !l || l == v)
            var Be = UL(a, l, f);
          else l == g || l == D ? Be = HL(a, l, q) : (l == w || l == (v | w)) && !y.length ? Be = VL(a, l, f, m) : Be = lo.apply(n, Ie);
          var We = ce ? Sh : Zh;
          return Jh(We(Be, Ie), a, l);
        }
        function Uh(a, l, f, m) {
          return a === n || mr(a, zs[f]) && !ct.call(m, f) ? l : a;
        }
        function Hh(a, l, f, m, y, N) {
          return It(a) && It(l) && (N.set(l, a), ro(a, l, n, Hh, N), N.delete(l)), a;
        }
        function GL(a) {
          return Hi(a) ? n : a;
        }
        function Vh(a, l, f, m, y, N) {
          var x = f & b, q = a.length, W = l.length;
          if (q != W && !(x && W > q))
            return !1;
          var Z = N.get(a), J = N.get(l);
          if (Z && J)
            return Z == l && J == a;
          var te = -1, ce = !0, Ie = f & L ? new Ts() : n;
          for (N.set(a, l), N.set(l, a); ++te < q; ) {
            var Be = a[te], We = l[te];
            if (m)
              var we = x ? m(We, Be, te, l, a, N) : m(Be, We, te, a, l, N);
            if (we !== n) {
              if (we)
                continue;
              ce = !1;
              break;
            }
            if (Ie) {
              if (!Zu(l, function(ze, tt) {
                if (!Oi(Ie, tt) && (Be === ze || y(Be, ze, f, m, N)))
                  return Ie.push(tt);
              })) {
                ce = !1;
                break;
              }
            } else if (!(Be === We || y(Be, We, f, m, N))) {
              ce = !1;
              break;
            }
          }
          return N.delete(a), N.delete(l), ce;
        }
        function KL(a, l, f, m, y, N, x) {
          switch (f) {
            case Rn:
              if (a.byteLength != l.byteLength || a.byteOffset != l.byteOffset)
                return !1;
              a = a.buffer, l = l.buffer;
            case Kn:
              return !(a.byteLength != l.byteLength || !N(new Gl(a), new Gl(l)));
            case Q:
            case re:
            case xe:
              return mr(+a, +l);
            case De:
              return a.name == l.name && a.message == l.message;
            case At:
            case qt:
              return a == l + "";
            case Me:
              var q = r_;
            case Et:
              var W = m & b;
              if (q || (q = $l), a.size != l.size && !W)
                return !1;
              var Z = x.get(a);
              if (Z)
                return Z == l;
              m |= L, x.set(a, l);
              var J = Vh(q(a), q(l), m, y, N, x);
              return x.delete(a), J;
            case pn:
              if (wi)
                return wi.call(a) == wi.call(l);
          }
          return !1;
        }
        function jL(a, l, f, m, y, N) {
          var x = f & b, q = O_(a), W = q.length, Z = O_(l), J = Z.length;
          if (W != J && !x)
            return !1;
          for (var te = W; te--; ) {
            var ce = q[te];
            if (!(x ? ce in l : ct.call(l, ce)))
              return !1;
          }
          var Ie = N.get(a), Be = N.get(l);
          if (Ie && Be)
            return Ie == l && Be == a;
          var We = !0;
          N.set(a, l), N.set(l, a);
          for (var we = x; ++te < W; ) {
            ce = q[te];
            var ze = a[ce], tt = l[ce];
            if (m)
              var wn = x ? m(tt, ze, ce, l, a, N) : m(ze, tt, ce, a, l, N);
            if (!(wn === n ? ze === tt || y(ze, tt, f, m, N) : wn)) {
              We = !1;
              break;
            }
            we || (we = ce == "constructor");
          }
          if (We && !we) {
            var dn = a.constructor, Pn = l.constructor;
            dn != Pn && "constructor" in a && "constructor" in l && !(typeof dn == "function" && dn instanceof dn && typeof Pn == "function" && Pn instanceof Pn) && (We = !1);
          }
          return N.delete(a), N.delete(l), We;
        }
        function Qr(a) {
          return F_(Yh(a, n, aA), a + "");
        }
        function O_(a) {
          return uh(a, Wt, B_);
        }
        function C_(a) {
          return uh(a, bn, Wh);
        }
        var N_ = Zl ? function(a) {
          return Zl.get(a);
        } : Y_;
        function co(a) {
          for (var l = a.name + "", f = Xs[l], m = ct.call(Xs, l) ? f.length : 0; m--; ) {
            var y = f[m], N = y.func;
            if (N == null || N == a)
              return y.name;
          }
          return l;
        }
        function ei(a) {
          var l = ct.call(O, "placeholder") ? O : a;
          return l.placeholder;
        }
        function Ne() {
          var a = O.iteratee || j_;
          return a = a === j_ ? ch : a, arguments.length ? a(arguments[0], arguments[1]) : a;
        }
        function fo(a, l) {
          var f = a.__data__;
          return tv(l) ? f[typeof l == "string" ? "string" : "hash"] : f.map;
        }
        function D_(a) {
          for (var l = Wt(a), f = l.length; f--; ) {
            var m = l[f], y = a[m];
            l[f] = [m, y, jh(y)];
          }
          return l;
        }
        function bs(a, l) {
          var f = ab(a, l);
          return dh(f) ? f : n;
        }
        function zL(a) {
          var l = ct.call(a, Es), f = a[Es];
          try {
            a[Es] = n;
            var m = !0;
          } catch {
          }
          var y = Vl.call(a);
          return m && (l ? a[Es] = f : delete a[Es]), y;
        }
        var B_ = s_ ? function(a) {
          return a == null ? [] : (a = ht(a), ma(s_(a), function(l) {
            return Xf.call(a, l);
          }));
        } : X_, Wh = s_ ? function(a) {
          for (var l = []; a; )
            Sa(l, B_(a)), a = Kl(a);
          return l;
        } : X_, rn = un;
        (i_ && rn(new i_(new ArrayBuffer(1))) != Rn || Ni && rn(new Ni()) != Me || l_ && rn(l_.resolve()) != st || Ys && rn(new Ys()) != Et || Di && rn(new Di()) != Qt) && (rn = function(a) {
          var l = un(a), f = l == Ve ? a.constructor : n, m = f ? Ls(f) : "";
          if (m)
            switch (m) {
              case Nb:
                return Rn;
              case Db:
                return Me;
              case Bb:
                return st;
              case wb:
                return Et;
              case Pb:
                return Qt;
            }
          return l;
        });
        function YL(a, l, f) {
          for (var m = -1, y = f.length; ++m < y; ) {
            var N = f[m], x = N.size;
            switch (N.type) {
              case "drop":
                a += x;
                break;
              case "dropRight":
                l -= x;
                break;
              case "take":
                l = nn(l, a + x);
                break;
              case "takeRight":
                a = kt(a, l - x);
                break;
            }
          }
          return { start: a, end: l };
        }
        function XL(a) {
          var l = a.match(Us);
          return l ? l[1].split(Er) : [];
        }
        function Gh(a, l, f) {
          l = ya(l, a);
          for (var m = -1, y = l.length, N = !1; ++m < y; ) {
            var x = xr(l[m]);
            if (!(N = a != null && f(a, x)))
              break;
            a = a[x];
          }
          return N || ++m != y ? N : (y = a == null ? 0 : a.length, !!y && So(y) && ea(x, y) && (ke(a) || vs(a)));
        }
        function ZL(a) {
          var l = a.length, f = new a.constructor(l);
          return l && typeof a[0] == "string" && ct.call(a, "index") && (f.index = a.index, f.input = a.input), f;
        }
        function Kh(a) {
          return typeof a.constructor == "function" && !ki(a) ? Zs(Kl(a)) : {};
        }
        function JL(a, l, f) {
          var m = a.constructor;
          switch (l) {
            case Kn:
              return y_(a);
            case Q:
            case re:
              return new m(+a);
            case Rn:
              return xL(a, f);
            case Cr:
            case fr:
            case Nr:
            case jn:
            case zn:
            case Gt:
            case Tn:
            case hr:
            case Ar:
              return Oh(a, f);
            case Me:
              return new m();
            case xe:
            case qt:
              return new m(a);
            case At:
              return FL(a);
            case Et:
              return new m();
            case pn:
              return ML(a);
          }
        }
        function QL(a, l) {
          var f = l.length;
          if (!f)
            return a;
          var m = f - 1;
          return l[m] = (f > 1 ? "& " : "") + l[m], l = l.join(f > 2 ? ", " : " "), a.replace(ks, `{
/* [wrapped with ` + l + `] */
`);
        }
        function ev(a) {
          return ke(a) || vs(a) || !!(Zf && a && a[Zf]);
        }
        function ea(a, l) {
          var f = typeof a;
          return l = l ?? Te, !!l && (f == "number" || f != "symbol" && oe.test(a)) && a > -1 && a % 1 == 0 && a < l;
        }
        function _n(a, l, f) {
          if (!It(f))
            return !1;
          var m = typeof l;
          return (m == "number" ? Sn(f) && ea(l, f.length) : m == "string" && l in f) ? mr(f[l], a) : !1;
        }
        function w_(a, l) {
          if (ke(a))
            return !1;
          var f = typeof a;
          return f == "number" || f == "symbol" || f == "boolean" || a == null || Bn(a) ? !0 : zr.test(a) || !Ea.test(a) || l != null && a in ht(l);
        }
        function tv(a) {
          var l = typeof a;
          return l == "string" || l == "number" || l == "symbol" || l == "boolean" ? a !== "__proto__" : a === null;
        }
        function P_(a) {
          var l = co(a), f = O[l];
          if (typeof f != "function" || !(l in Je.prototype))
            return !1;
          if (a === f)
            return !0;
          var m = N_(f);
          return !!m && a === m[0];
        }
        function nv(a) {
          return !!jf && jf in a;
        }
        var rv = Ul ? ta : Z_;
        function ki(a) {
          var l = a && a.constructor, f = typeof l == "function" && l.prototype || zs;
          return a === f;
        }
        function jh(a) {
          return a === a && !It(a);
        }
        function zh(a, l) {
          return function(f) {
            return f == null ? !1 : f[a] === l && (l !== n || a in ht(f));
          };
        }
        function av(a) {
          var l = To(a, function(m) {
            return f.size === A && f.clear(), m;
          }), f = l.cache;
          return l;
        }
        function sv(a, l) {
          var f = a[1], m = l[1], y = f | m, N = y < (v | I | P), x = m == P && f == g || m == P && f == F && a[7].length <= l[8] || m == (P | F) && l[7].length <= l[8] && f == g;
          if (!(N || x))
            return a;
          m & v && (a[2] = l[2], y |= f & v ? 0 : R);
          var q = l[3];
          if (q) {
            var W = a[3];
            a[3] = W ? Nh(W, q, l[4]) : q, a[4] = W ? ba(a[3], E) : l[4];
          }
          return q = l[5], q && (W = a[5], a[5] = W ? Dh(W, q, l[6]) : q, a[6] = W ? ba(a[5], E) : l[6]), q = l[7], q && (a[7] = q), m & P && (a[8] = a[8] == null ? l[8] : nn(a[8], l[8])), a[9] == null && (a[9] = l[9]), a[0] = l[0], a[1] = y, a;
        }
        function iv(a) {
          var l = [];
          if (a != null)
            for (var f in ht(a))
              l.push(f);
          return l;
        }
        function lv(a) {
          return Vl.call(a);
        }
        function Yh(a, l, f) {
          return l = kt(l === n ? a.length - 1 : l, 0), function() {
            for (var m = arguments, y = -1, N = kt(m.length - l, 0), x = G(N); ++y < N; )
              x[y] = m[l + y];
            y = -1;
            for (var q = G(l + 1); ++y < l; )
              q[y] = m[y];
            return q[l] = f(x), Cn(a, this, q);
          };
        }
        function Xh(a, l) {
          return l.length < 2 ? a : Ss(a, rr(l, 0, -1));
        }
        function ov(a, l) {
          for (var f = a.length, m = nn(l.length, f), y = mn(a); m--; ) {
            var N = l[m];
            a[m] = ea(N, f) ? y[N] : n;
          }
          return a;
        }
        function x_(a, l) {
          if (!(l === "constructor" && typeof a[l] == "function") && l != "__proto__")
            return a[l];
        }
        var Zh = Qh(Sh), Ui = vb || function(a, l) {
          return Kt.setTimeout(a, l);
        }, F_ = Qh(DL);
        function Jh(a, l, f) {
          var m = l + "";
          return F_(a, QL(m, uv(XL(m), f)));
        }
        function Qh(a) {
          var l = 0, f = 0;
          return function() {
            var m = Rb(), y = le - (m - f);
            if (f = m, y > 0) {
              if (++l >= j)
                return arguments[0];
            } else
              l = 0;
            return a.apply(n, arguments);
          };
        }
        function ho(a, l) {
          var f = -1, m = a.length, y = m - 1;
          for (l = l === n ? m : l; ++f < l; ) {
            var N = T_(f, y), x = a[N];
            a[N] = a[f], a[f] = x;
          }
          return a.length = l, a;
        }
        var eA = av(function(a) {
          var l = [];
          return a.charCodeAt(0) === 46 && l.push(""), a.replace(pa, function(f, m, y, N) {
            l.push(y ? N.replace(Hs, "$1") : m || f);
          }), l;
        });
        function xr(a) {
          if (typeof a == "string" || Bn(a))
            return a;
          var l = a + "";
          return l == "0" && 1 / a == -1 / 0 ? "-0" : l;
        }
        function Ls(a) {
          if (a != null) {
            try {
              return Hl.call(a);
            } catch {
            }
            try {
              return a + "";
            } catch {
            }
          }
          return "";
        }
        function uv(a, l) {
          return Qn(je, function(f) {
            var m = "_." + f[0];
            l & f[1] && !Ml(a, m) && a.push(m);
          }), a.sort();
        }
        function tA(a) {
          if (a instanceof Je)
            return a.clone();
          var l = new tr(a.__wrapped__, a.__chain__);
          return l.__actions__ = mn(a.__actions__), l.__index__ = a.__index__, l.__values__ = a.__values__, l;
        }
        function _v(a, l, f) {
          (f ? _n(a, l, f) : l === n) ? l = 1 : l = kt(He(l), 0);
          var m = a == null ? 0 : a.length;
          if (!m || l < 1)
            return [];
          for (var y = 0, N = 0, x = G(Yl(m / l)); y < m; )
            x[N++] = rr(a, y, y += l);
          return x;
        }
        function dv(a) {
          for (var l = -1, f = a == null ? 0 : a.length, m = 0, y = []; ++l < f; ) {
            var N = a[l];
            N && (y[m++] = N);
          }
          return y;
        }
        function cv() {
          var a = arguments.length;
          if (!a)
            return [];
          for (var l = G(a - 1), f = arguments[0], m = a; m--; )
            l[m - 1] = arguments[m];
          return Sa(ke(f) ? mn(f) : [f], jt(l, 1));
        }
        var fv = Ge(function(a, l) {
          return wt(a) ? xi(a, jt(l, 1, wt, !0)) : [];
        }), hv = Ge(function(a, l) {
          var f = ar(l);
          return wt(f) && (f = n), wt(a) ? xi(a, jt(l, 1, wt, !0), Ne(f, 2)) : [];
        }), Av = Ge(function(a, l) {
          var f = ar(l);
          return wt(f) && (f = n), wt(a) ? xi(a, jt(l, 1, wt, !0), n, f) : [];
        });
        function Ev(a, l, f) {
          var m = a == null ? 0 : a.length;
          return m ? (l = f || l === n ? 1 : He(l), rr(a, l < 0 ? 0 : l, m)) : [];
        }
        function pv(a, l, f) {
          var m = a == null ? 0 : a.length;
          return m ? (l = f || l === n ? 1 : He(l), l = m - l, rr(a, 0, l < 0 ? 0 : l)) : [];
        }
        function Tv(a, l) {
          return a && a.length ? so(a, Ne(l, 3), !0, !0) : [];
        }
        function mv(a, l) {
          return a && a.length ? so(a, Ne(l, 3), !0) : [];
        }
        function Sv(a, l, f, m) {
          var y = a == null ? 0 : a.length;
          return y ? (f && typeof f != "number" && _n(a, l, f) && (f = 0, m = y), cL(a, l, f, m)) : [];
        }
        function nA(a, l, f) {
          var m = a == null ? 0 : a.length;
          if (!m)
            return -1;
          var y = f == null ? 0 : He(f);
          return y < 0 && (y = kt(m + y, 0)), ql(a, Ne(l, 3), y);
        }
        function rA(a, l, f) {
          var m = a == null ? 0 : a.length;
          if (!m)
            return -1;
          var y = m - 1;
          return f !== n && (y = He(f), y = f < 0 ? kt(m + y, 0) : nn(y, m - 1)), ql(a, Ne(l, 3), y, !0);
        }
        function aA(a) {
          var l = a == null ? 0 : a.length;
          return l ? jt(a, 1) : [];
        }
        function bv(a) {
          var l = a == null ? 0 : a.length;
          return l ? jt(a, ue) : [];
        }
        function Lv(a, l) {
          var f = a == null ? 0 : a.length;
          return f ? (l = l === n ? 1 : He(l), jt(a, l)) : [];
        }
        function vv(a) {
          for (var l = -1, f = a == null ? 0 : a.length, m = {}; ++l < f; ) {
            var y = a[l];
            m[y[0]] = y[1];
          }
          return m;
        }
        function sA(a) {
          return a && a.length ? a[0] : n;
        }
        function Iv(a, l, f) {
          var m = a == null ? 0 : a.length;
          if (!m)
            return -1;
          var y = f == null ? 0 : He(f);
          return y < 0 && (y = kt(m + y, 0)), Ws(a, l, y);
        }
        function yv(a) {
          var l = a == null ? 0 : a.length;
          return l ? rr(a, 0, -1) : [];
        }
        var gv = Ge(function(a) {
          var l = vt(a, v_);
          return l.length && l[0] === a[0] ? f_(l) : [];
        }), Rv = Ge(function(a) {
          var l = ar(a), f = vt(a, v_);
          return l === ar(f) ? l = n : f.pop(), f.length && f[0] === a[0] ? f_(f, Ne(l, 2)) : [];
        }), Ov = Ge(function(a) {
          var l = ar(a), f = vt(a, v_);
          return l = typeof l == "function" ? l : n, l && f.pop(), f.length && f[0] === a[0] ? f_(f, n, l) : [];
        });
        function Cv(a, l) {
          return a == null ? "" : yb.call(a, l);
        }
        function ar(a) {
          var l = a == null ? 0 : a.length;
          return l ? a[l - 1] : n;
        }
        function Nv(a, l, f) {
          var m = a == null ? 0 : a.length;
          if (!m)
            return -1;
          var y = m;
          return f !== n && (y = He(f), y = y < 0 ? kt(m + y, 0) : nn(y, m - 1)), l === l ? ub(a, l, y) : ql(a, $f, y, !0);
        }
        function Dv(a, l) {
          return a && a.length ? Eh(a, He(l)) : n;
        }
        var Bv = Ge(iA);
        function iA(a, l) {
          return a && a.length && l && l.length ? p_(a, l) : a;
        }
        function wv(a, l, f) {
          return a && a.length && l && l.length ? p_(a, l, Ne(f, 2)) : a;
        }
        function Pv(a, l, f) {
          return a && a.length && l && l.length ? p_(a, l, n, f) : a;
        }
        var xv = Qr(function(a, l) {
          var f = a == null ? 0 : a.length, m = u_(a, l);
          return mh(a, vt(l, function(y) {
            return ea(y, f) ? +y : y;
          }).sort(Ch)), m;
        });
        function Fv(a, l) {
          var f = [];
          if (!(a && a.length))
            return f;
          var m = -1, y = [], N = a.length;
          for (l = Ne(l, 3); ++m < N; ) {
            var x = a[m];
            l(x, m, a) && (f.push(x), y.push(m));
          }
          return mh(a, y), f;
        }
        function M_(a) {
          return a == null ? a : Cb.call(a);
        }
        function Mv(a, l, f) {
          var m = a == null ? 0 : a.length;
          return m ? (f && typeof f != "number" && _n(a, l, f) ? (l = 0, f = m) : (l = l == null ? 0 : He(l), f = f === n ? m : He(f)), rr(a, l, f)) : [];
        }
        function qv(a, l) {
          return ao(a, l);
        }
        function $v(a, l, f) {
          return S_(a, l, Ne(f, 2));
        }
        function kv(a, l) {
          var f = a == null ? 0 : a.length;
          if (f) {
            var m = ao(a, l);
            if (m < f && mr(a[m], l))
              return m;
          }
          return -1;
        }
        function Uv(a, l) {
          return ao(a, l, !0);
        }
        function Hv(a, l, f) {
          return S_(a, l, Ne(f, 2), !0);
        }
        function Vv(a, l) {
          var f = a == null ? 0 : a.length;
          if (f) {
            var m = ao(a, l, !0) - 1;
            if (mr(a[m], l))
              return m;
          }
          return -1;
        }
        function Wv(a) {
          return a && a.length ? bh(a) : [];
        }
        function Gv(a, l) {
          return a && a.length ? bh(a, Ne(l, 2)) : [];
        }
        function Kv(a) {
          var l = a == null ? 0 : a.length;
          return l ? rr(a, 1, l) : [];
        }
        function jv(a, l, f) {
          return a && a.length ? (l = f || l === n ? 1 : He(l), rr(a, 0, l < 0 ? 0 : l)) : [];
        }
        function zv(a, l, f) {
          var m = a == null ? 0 : a.length;
          return m ? (l = f || l === n ? 1 : He(l), l = m - l, rr(a, l < 0 ? 0 : l, m)) : [];
        }
        function Yv(a, l) {
          return a && a.length ? so(a, Ne(l, 3), !1, !0) : [];
        }
        function Xv(a, l) {
          return a && a.length ? so(a, Ne(l, 3)) : [];
        }
        var Zv = Ge(function(a) {
          return Ia(jt(a, 1, wt, !0));
        }), Jv = Ge(function(a) {
          var l = ar(a);
          return wt(l) && (l = n), Ia(jt(a, 1, wt, !0), Ne(l, 2));
        }), Qv = Ge(function(a) {
          var l = ar(a);
          return l = typeof l == "function" ? l : n, Ia(jt(a, 1, wt, !0), n, l);
        });
        function eI(a) {
          return a && a.length ? Ia(a) : [];
        }
        function tI(a, l) {
          return a && a.length ? Ia(a, Ne(l, 2)) : [];
        }
        function nI(a, l) {
          return l = typeof l == "function" ? l : n, a && a.length ? Ia(a, n, l) : [];
        }
        function q_(a) {
          if (!(a && a.length))
            return [];
          var l = 0;
          return a = ma(a, function(f) {
            if (wt(f))
              return l = kt(f.length, l), !0;
          }), t_(l, function(f) {
            return vt(a, Ju(f));
          });
        }
        function lA(a, l) {
          if (!(a && a.length))
            return [];
          var f = q_(a);
          return l == null ? f : vt(f, function(m) {
            return Cn(l, n, m);
          });
        }
        var rI = Ge(function(a, l) {
          return wt(a) ? xi(a, l) : [];
        }), aI = Ge(function(a) {
          return L_(ma(a, wt));
        }), sI = Ge(function(a) {
          var l = ar(a);
          return wt(l) && (l = n), L_(ma(a, wt), Ne(l, 2));
        }), iI = Ge(function(a) {
          var l = ar(a);
          return l = typeof l == "function" ? l : n, L_(ma(a, wt), n, l);
        }), lI = Ge(q_);
        function oI(a, l) {
          return yh(a || [], l || [], Pi);
        }
        function uI(a, l) {
          return yh(a || [], l || [], qi);
        }
        var _I = Ge(function(a) {
          var l = a.length, f = l > 1 ? a[l - 1] : n;
          return f = typeof f == "function" ? (a.pop(), f) : n, lA(a, f);
        });
        function oA(a) {
          var l = O(a);
          return l.__chain__ = !0, l;
        }
        function dI(a, l) {
          return l(a), a;
        }
        function Ao(a, l) {
          return l(a);
        }
        var cI = Qr(function(a) {
          var l = a.length, f = l ? a[0] : 0, m = this.__wrapped__, y = function(N) {
            return u_(N, a);
          };
          return l > 1 || this.__actions__.length || !(m instanceof Je) || !ea(f) ? this.thru(y) : (m = m.slice(f, +f + (l ? 1 : 0)), m.__actions__.push({
            func: Ao,
            args: [y],
            thisArg: n
          }), new tr(m, this.__chain__).thru(function(N) {
            return l && !N.length && N.push(n), N;
          }));
        });
        function fI() {
          return oA(this);
        }
        function hI() {
          return new tr(this.value(), this.__chain__);
        }
        function AI() {
          this.__values__ === n && (this.__values__ = LA(this.value()));
          var a = this.__index__ >= this.__values__.length, l = a ? n : this.__values__[this.__index__++];
          return { done: a, value: l };
        }
        function EI() {
          return this;
        }
        function pI(a) {
          for (var l, f = this; f instanceof Ql; ) {
            var m = tA(f);
            m.__index__ = 0, m.__values__ = n, l ? y.__wrapped__ = m : l = m;
            var y = m;
            f = f.__wrapped__;
          }
          return y.__wrapped__ = a, l;
        }
        function TI() {
          var a = this.__wrapped__;
          if (a instanceof Je) {
            var l = a;
            return this.__actions__.length && (l = new Je(this)), l = l.reverse(), l.__actions__.push({
              func: Ao,
              args: [M_],
              thisArg: n
            }), new tr(l, this.__chain__);
          }
          return this.thru(M_);
        }
        function mI() {
          return Ih(this.__wrapped__, this.__actions__);
        }
        var SI = io(function(a, l, f) {
          ct.call(a, f) ? ++a[f] : Zr(a, f, 1);
        });
        function bI(a, l, f) {
          var m = ke(a) ? Mf : dL;
          return f && _n(a, l, f) && (l = n), m(a, Ne(l, 3));
        }
        function LI(a, l) {
          var f = ke(a) ? ma : lh;
          return f(a, Ne(l, 3));
        }
        var vI = xh(nA), II = xh(rA);
        function yI(a, l) {
          return jt(Eo(a, l), 1);
        }
        function gI(a, l) {
          return jt(Eo(a, l), ue);
        }
        function RI(a, l, f) {
          return f = f === n ? 1 : He(f), jt(Eo(a, l), f);
        }
        function uA(a, l) {
          var f = ke(a) ? Qn : va;
          return f(a, Ne(l, 3));
        }
        function _A(a, l) {
          var f = ke(a) ? KS : ih;
          return f(a, Ne(l, 3));
        }
        var OI = io(function(a, l, f) {
          ct.call(a, f) ? a[f].push(l) : Zr(a, f, [l]);
        });
        function CI(a, l, f, m) {
          a = Sn(a) ? a : ni(a), f = f && !m ? He(f) : 0;
          var y = a.length;
          return f < 0 && (f = kt(y + f, 0)), bo(a) ? f <= y && a.indexOf(l, f) > -1 : !!y && Ws(a, l, f) > -1;
        }
        var NI = Ge(function(a, l, f) {
          var m = -1, y = typeof l == "function", N = Sn(a) ? G(a.length) : [];
          return va(a, function(x) {
            N[++m] = y ? Cn(l, x, f) : Fi(x, l, f);
          }), N;
        }), DI = io(function(a, l, f) {
          Zr(a, f, l);
        });
        function Eo(a, l) {
          var f = ke(a) ? vt : fh;
          return f(a, Ne(l, 3));
        }
        function BI(a, l, f, m) {
          return a == null ? [] : (ke(l) || (l = l == null ? [] : [l]), f = m ? n : f, ke(f) || (f = f == null ? [] : [f]), ph(a, l, f));
        }
        var wI = io(function(a, l, f) {
          a[f ? 0 : 1].push(l);
        }, function() {
          return [[], []];
        });
        function PI(a, l, f) {
          var m = ke(a) ? Xu : Uf, y = arguments.length < 3;
          return m(a, Ne(l, 4), f, y, va);
        }
        function xI(a, l, f) {
          var m = ke(a) ? jS : Uf, y = arguments.length < 3;
          return m(a, Ne(l, 4), f, y, ih);
        }
        function FI(a, l) {
          var f = ke(a) ? ma : lh;
          return f(a, mo(Ne(l, 3)));
        }
        function MI(a) {
          var l = ke(a) ? nh : CL;
          return l(a);
        }
        function qI(a, l, f) {
          (f ? _n(a, l, f) : l === n) ? l = 1 : l = He(l);
          var m = ke(a) ? iL : NL;
          return m(a, l);
        }
        function $I(a) {
          var l = ke(a) ? lL : BL;
          return l(a);
        }
        function kI(a) {
          if (a == null)
            return 0;
          if (Sn(a))
            return bo(a) ? Ks(a) : a.length;
          var l = rn(a);
          return l == Me || l == Et ? a.size : A_(a).length;
        }
        function UI(a, l, f) {
          var m = ke(a) ? Zu : wL;
          return f && _n(a, l, f) && (l = n), m(a, Ne(l, 3));
        }
        var HI = Ge(function(a, l) {
          if (a == null)
            return [];
          var f = l.length;
          return f > 1 && _n(a, l[0], l[1]) ? l = [] : f > 2 && _n(l[0], l[1], l[2]) && (l = [l[0]]), ph(a, jt(l, 1), []);
        }), po = Lb || function() {
          return Kt.Date.now();
        };
        function VI(a, l) {
          if (typeof l != "function")
            throw new er(o);
          return a = He(a), function() {
            if (--a < 1)
              return l.apply(this, arguments);
          };
        }
        function dA(a, l, f) {
          return l = f ? n : l, l = a && l == null ? a.length : l, Jr(a, P, n, n, n, n, l);
        }
        function cA(a, l) {
          var f;
          if (typeof l != "function")
            throw new er(o);
          return a = He(a), function() {
            return --a > 0 && (f = l.apply(this, arguments)), a <= 1 && (l = n), f;
          };
        }
        var $_ = Ge(function(a, l, f) {
          var m = v;
          if (f.length) {
            var y = ba(f, ei($_));
            m |= w;
          }
          return Jr(a, m, l, f, y);
        }), fA = Ge(function(a, l, f) {
          var m = v | I;
          if (f.length) {
            var y = ba(f, ei(fA));
            m |= w;
          }
          return Jr(l, m, a, f, y);
        });
        function hA(a, l, f) {
          l = f ? n : l;
          var m = Jr(a, g, n, n, n, n, n, l);
          return m.placeholder = hA.placeholder, m;
        }
        function AA(a, l, f) {
          l = f ? n : l;
          var m = Jr(a, D, n, n, n, n, n, l);
          return m.placeholder = AA.placeholder, m;
        }
        function EA(a, l, f) {
          var m, y, N, x, q, W, Z = 0, J = !1, te = !1, ce = !0;
          if (typeof a != "function")
            throw new er(o);
          l = sr(l) || 0, It(f) && (J = !!f.leading, te = "maxWait" in f, N = te ? kt(sr(f.maxWait) || 0, l) : N, ce = "trailing" in f ? !!f.trailing : ce);
          function Ie(Pt) {
            var Sr = m, ra = y;
            return m = y = n, Z = Pt, x = a.apply(ra, Sr), x;
          }
          function Be(Pt) {
            return Z = Pt, q = Ui(ze, l), J ? Ie(Pt) : x;
          }
          function We(Pt) {
            var Sr = Pt - W, ra = Pt - Z, xA = l - Sr;
            return te ? nn(xA, N - ra) : xA;
          }
          function we(Pt) {
            var Sr = Pt - W, ra = Pt - Z;
            return W === n || Sr >= l || Sr < 0 || te && ra >= N;
          }
          function ze() {
            var Pt = po();
            if (we(Pt))
              return tt(Pt);
            q = Ui(ze, We(Pt));
          }
          function tt(Pt) {
            return q = n, ce && m ? Ie(Pt) : (m = y = n, x);
          }
          function wn() {
            q !== n && gh(q), Z = 0, m = W = y = q = n;
          }
          function dn() {
            return q === n ? x : tt(po());
          }
          function Pn() {
            var Pt = po(), Sr = we(Pt);
            if (m = arguments, y = this, W = Pt, Sr) {
              if (q === n)
                return Be(W);
              if (te)
                return gh(q), q = Ui(ze, l), Ie(W);
            }
            return q === n && (q = Ui(ze, l)), x;
          }
          return Pn.cancel = wn, Pn.flush = dn, Pn;
        }
        var WI = Ge(function(a, l) {
          return sh(a, 1, l);
        }), GI = Ge(function(a, l, f) {
          return sh(a, sr(l) || 0, f);
        });
        function KI(a) {
          return Jr(a, C);
        }
        function To(a, l) {
          if (typeof a != "function" || l != null && typeof l != "function")
            throw new er(o);
          var f = function() {
            var m = arguments, y = l ? l.apply(this, m) : m[0], N = f.cache;
            if (N.has(y))
              return N.get(y);
            var x = a.apply(this, m);
            return f.cache = N.set(y, x) || N, x;
          };
          return f.cache = new (To.Cache || Xr)(), f;
        }
        To.Cache = Xr;
        function mo(a) {
          if (typeof a != "function")
            throw new er(o);
          return function() {
            var l = arguments;
            switch (l.length) {
              case 0:
                return !a.call(this);
              case 1:
                return !a.call(this, l[0]);
              case 2:
                return !a.call(this, l[0], l[1]);
              case 3:
                return !a.call(this, l[0], l[1], l[2]);
            }
            return !a.apply(this, l);
          };
        }
        function jI(a) {
          return cA(2, a);
        }
        var zI = PL(function(a, l) {
          l = l.length == 1 && ke(l[0]) ? vt(l[0], Nn(Ne())) : vt(jt(l, 1), Nn(Ne()));
          var f = l.length;
          return Ge(function(m) {
            for (var y = -1, N = nn(m.length, f); ++y < N; )
              m[y] = l[y].call(this, m[y]);
            return Cn(a, this, m);
          });
        }), k_ = Ge(function(a, l) {
          var f = ba(l, ei(k_));
          return Jr(a, w, n, l, f);
        }), pA = Ge(function(a, l) {
          var f = ba(l, ei(pA));
          return Jr(a, M, n, l, f);
        }), YI = Qr(function(a, l) {
          return Jr(a, F, n, n, n, l);
        });
        function XI(a, l) {
          if (typeof a != "function")
            throw new er(o);
          return l = l === n ? l : He(l), Ge(a, l);
        }
        function ZI(a, l) {
          if (typeof a != "function")
            throw new er(o);
          return l = l == null ? 0 : kt(He(l), 0), Ge(function(f) {
            var m = f[l], y = ga(f, 0, l);
            return m && Sa(y, m), Cn(a, this, y);
          });
        }
        function JI(a, l, f) {
          var m = !0, y = !0;
          if (typeof a != "function")
            throw new er(o);
          return It(f) && (m = "leading" in f ? !!f.leading : m, y = "trailing" in f ? !!f.trailing : y), EA(a, l, {
            leading: m,
            maxWait: l,
            trailing: y
          });
        }
        function QI(a) {
          return dA(a, 1);
        }
        function ey(a, l) {
          return k_(I_(l), a);
        }
        function ty() {
          if (!arguments.length)
            return [];
          var a = arguments[0];
          return ke(a) ? a : [a];
        }
        function ny(a) {
          return nr(a, S);
        }
        function ry(a, l) {
          return l = typeof l == "function" ? l : n, nr(a, S, l);
        }
        function ay(a) {
          return nr(a, p | S);
        }
        function sy(a, l) {
          return l = typeof l == "function" ? l : n, nr(a, p | S, l);
        }
        function iy(a, l) {
          return l == null || ah(a, l, Wt(l));
        }
        function mr(a, l) {
          return a === l || a !== a && l !== l;
        }
        var ly = _o(c_), oy = _o(function(a, l) {
          return a >= l;
        }), vs = _h(/* @__PURE__ */ function() {
          return arguments;
        }()) ? _h : function(a) {
          return gt(a) && ct.call(a, "callee") && !Xf.call(a, "callee");
        }, ke = G.isArray, uy = Df ? Nn(Df) : pL;
        function Sn(a) {
          return a != null && So(a.length) && !ta(a);
        }
        function wt(a) {
          return gt(a) && Sn(a);
        }
        function _y(a) {
          return a === !0 || a === !1 || gt(a) && un(a) == Q;
        }
        var Ra = Ib || Z_, dy = Bf ? Nn(Bf) : TL;
        function cy(a) {
          return gt(a) && a.nodeType === 1 && !Hi(a);
        }
        function fy(a) {
          if (a == null)
            return !0;
          if (Sn(a) && (ke(a) || typeof a == "string" || typeof a.splice == "function" || Ra(a) || ti(a) || vs(a)))
            return !a.length;
          var l = rn(a);
          if (l == Me || l == Et)
            return !a.size;
          if (ki(a))
            return !A_(a).length;
          for (var f in a)
            if (ct.call(a, f))
              return !1;
          return !0;
        }
        function hy(a, l) {
          return Mi(a, l);
        }
        function Ay(a, l, f) {
          f = typeof f == "function" ? f : n;
          var m = f ? f(a, l) : n;
          return m === n ? Mi(a, l, n, f) : !!m;
        }
        function U_(a) {
          if (!gt(a))
            return !1;
          var l = un(a);
          return l == De || l == ve || typeof a.message == "string" && typeof a.name == "string" && !Hi(a);
        }
        function Ey(a) {
          return typeof a == "number" && Jf(a);
        }
        function ta(a) {
          if (!It(a))
            return !1;
          var l = un(a);
          return l == qe || l == Xe || l == V || l == Ze;
        }
        function TA(a) {
          return typeof a == "number" && a == He(a);
        }
        function So(a) {
          return typeof a == "number" && a > -1 && a % 1 == 0 && a <= Te;
        }
        function It(a) {
          var l = typeof a;
          return a != null && (l == "object" || l == "function");
        }
        function gt(a) {
          return a != null && typeof a == "object";
        }
        var mA = wf ? Nn(wf) : SL;
        function py(a, l) {
          return a === l || h_(a, l, D_(l));
        }
        function Ty(a, l, f) {
          return f = typeof f == "function" ? f : n, h_(a, l, D_(l), f);
        }
        function my(a) {
          return SA(a) && a != +a;
        }
        function Sy(a) {
          if (rv(a))
            throw new $e(i);
          return dh(a);
        }
        function by(a) {
          return a === null;
        }
        function Ly(a) {
          return a == null;
        }
        function SA(a) {
          return typeof a == "number" || gt(a) && un(a) == xe;
        }
        function Hi(a) {
          if (!gt(a) || un(a) != Ve)
            return !1;
          var l = Kl(a);
          if (l === null)
            return !0;
          var f = ct.call(l, "constructor") && l.constructor;
          return typeof f == "function" && f instanceof f && Hl.call(f) == Tb;
        }
        var H_ = Pf ? Nn(Pf) : bL;
        function vy(a) {
          return TA(a) && a >= -9007199254740991 && a <= Te;
        }
        var bA = xf ? Nn(xf) : LL;
        function bo(a) {
          return typeof a == "string" || !ke(a) && gt(a) && un(a) == qt;
        }
        function Bn(a) {
          return typeof a == "symbol" || gt(a) && un(a) == pn;
        }
        var ti = Ff ? Nn(Ff) : vL;
        function Iy(a) {
          return a === n;
        }
        function yy(a) {
          return gt(a) && rn(a) == Qt;
        }
        function gy(a) {
          return gt(a) && un(a) == Gn;
        }
        var Ry = _o(E_), Oy = _o(function(a, l) {
          return a <= l;
        });
        function LA(a) {
          if (!a)
            return [];
          if (Sn(a))
            return bo(a) ? pr(a) : mn(a);
          if (Ci && a[Ci])
            return ib(a[Ci]());
          var l = rn(a), f = l == Me ? r_ : l == Et ? $l : ni;
          return f(a);
        }
        function na(a) {
          if (!a)
            return a === 0 ? a : 0;
          if (a = sr(a), a === ue || a === -1 / 0) {
            var l = a < 0 ? -1 : 1;
            return l * Pe;
          }
          return a === a ? a : 0;
        }
        function He(a) {
          var l = na(a), f = l % 1;
          return l === l ? f ? l - f : l : 0;
        }
        function vA(a) {
          return a ? ms(He(a), 0, se) : 0;
        }
        function sr(a) {
          if (typeof a == "number")
            return a;
          if (Bn(a))
            return Se;
          if (It(a)) {
            var l = typeof a.valueOf == "function" ? a.valueOf() : a;
            a = It(l) ? l + "" : l;
          }
          if (typeof a != "string")
            return a === 0 ? a : +a;
          a = Hf(a);
          var f = Uu.test(a);
          return f || k.test(a) ? VS(a.slice(2), f ? 2 : 8) : xl.test(a) ? Se : +a;
        }
        function IA(a) {
          return Pr(a, bn(a));
        }
        function Cy(a) {
          return a ? ms(He(a), -9007199254740991, Te) : a === 0 ? a : 0;
        }
        function _t(a) {
          return a == null ? "" : Dn(a);
        }
        var Ny = Js(function(a, l) {
          if (ki(l) || Sn(l)) {
            Pr(l, Wt(l), a);
            return;
          }
          for (var f in l)
            ct.call(l, f) && Pi(a, f, l[f]);
        }), yA = Js(function(a, l) {
          Pr(l, bn(l), a);
        }), Lo = Js(function(a, l, f, m) {
          Pr(l, bn(l), a, m);
        }), Dy = Js(function(a, l, f, m) {
          Pr(l, Wt(l), a, m);
        }), By = Qr(u_);
        function wy(a, l) {
          var f = Zs(a);
          return l == null ? f : rh(f, l);
        }
        var Py = Ge(function(a, l) {
          a = ht(a);
          var f = -1, m = l.length, y = m > 2 ? l[2] : n;
          for (y && _n(l[0], l[1], y) && (m = 1); ++f < m; )
            for (var N = l[f], x = bn(N), q = -1, W = x.length; ++q < W; ) {
              var Z = x[q], J = a[Z];
              (J === n || mr(J, zs[Z]) && !ct.call(a, Z)) && (a[Z] = N[Z]);
            }
          return a;
        }), xy = Ge(function(a) {
          return a.push(n, Hh), Cn(gA, n, a);
        });
        function Fy(a, l) {
          return qf(a, Ne(l, 3), wr);
        }
        function My(a, l) {
          return qf(a, Ne(l, 3), d_);
        }
        function qy(a, l) {
          return a == null ? a : __(a, Ne(l, 3), bn);
        }
        function $y(a, l) {
          return a == null ? a : oh(a, Ne(l, 3), bn);
        }
        function ky(a, l) {
          return a && wr(a, Ne(l, 3));
        }
        function Uy(a, l) {
          return a && d_(a, Ne(l, 3));
        }
        function Hy(a) {
          return a == null ? [] : no(a, Wt(a));
        }
        function Vy(a) {
          return a == null ? [] : no(a, bn(a));
        }
        function V_(a, l, f) {
          var m = a == null ? n : Ss(a, l);
          return m === n ? f : m;
        }
        function Wy(a, l) {
          return a != null && Gh(a, l, fL);
        }
        function W_(a, l) {
          return a != null && Gh(a, l, hL);
        }
        var Gy = Mh(function(a, l, f) {
          l != null && typeof l.toString != "function" && (l = Vl.call(l)), a[l] = f;
        }, K_(Ln)), Ky = Mh(function(a, l, f) {
          l != null && typeof l.toString != "function" && (l = Vl.call(l)), ct.call(a, l) ? a[l].push(f) : a[l] = [f];
        }, Ne), jy = Ge(Fi);
        function Wt(a) {
          return Sn(a) ? th(a) : A_(a);
        }
        function bn(a) {
          return Sn(a) ? th(a, !0) : IL(a);
        }
        function zy(a, l) {
          var f = {};
          return l = Ne(l, 3), wr(a, function(m, y, N) {
            Zr(f, l(m, y, N), m);
          }), f;
        }
        function Yy(a, l) {
          var f = {};
          return l = Ne(l, 3), wr(a, function(m, y, N) {
            Zr(f, y, l(m, y, N));
          }), f;
        }
        var Xy = Js(function(a, l, f) {
          ro(a, l, f);
        }), gA = Js(function(a, l, f, m) {
          ro(a, l, f, m);
        }), Zy = Qr(function(a, l) {
          var f = {};
          if (a == null)
            return f;
          var m = !1;
          l = vt(l, function(N) {
            return N = ya(N, a), m || (m = N.length > 1), N;
          }), Pr(a, C_(a), f), m && (f = nr(f, p | T | S, GL));
          for (var y = l.length; y--; )
            b_(f, l[y]);
          return f;
        });
        function Jy(a, l) {
          return RA(a, mo(Ne(l)));
        }
        var Qy = Qr(function(a, l) {
          return a == null ? {} : gL(a, l);
        });
        function RA(a, l) {
          if (a == null)
            return {};
          var f = vt(C_(a), function(m) {
            return [m];
          });
          return l = Ne(l), Th(a, f, function(m, y) {
            return l(m, y[0]);
          });
        }
        function eg(a, l, f) {
          l = ya(l, a);
          var m = -1, y = l.length;
          for (y || (y = 1, a = n); ++m < y; ) {
            var N = a == null ? n : a[xr(l[m])];
            N === n && (m = y, N = f), a = ta(N) ? N.call(a) : N;
          }
          return a;
        }
        function tg(a, l, f) {
          return a == null ? a : qi(a, l, f);
        }
        function ng(a, l, f, m) {
          return m = typeof m == "function" ? m : n, a == null ? a : qi(a, l, f, m);
        }
        var OA = kh(Wt), CA = kh(bn);
        function rg(a, l, f) {
          var m = ke(a), y = m || Ra(a) || ti(a);
          if (l = Ne(l, 4), f == null) {
            var N = a && a.constructor;
            y ? f = m ? new N() : [] : It(a) ? f = ta(N) ? Zs(Kl(a)) : {} : f = {};
          }
          return (y ? Qn : wr)(a, function(x, q, W) {
            return l(f, x, q, W);
          }), f;
        }
        function ag(a, l) {
          return a == null ? !0 : b_(a, l);
        }
        function sg(a, l, f) {
          return a == null ? a : vh(a, l, I_(f));
        }
        function ig(a, l, f, m) {
          return m = typeof m == "function" ? m : n, a == null ? a : vh(a, l, I_(f), m);
        }
        function ni(a) {
          return a == null ? [] : n_(a, Wt(a));
        }
        function lg(a) {
          return a == null ? [] : n_(a, bn(a));
        }
        function og(a, l, f) {
          return f === n && (f = l, l = n), f !== n && (f = sr(f), f = f === f ? f : 0), l !== n && (l = sr(l), l = l === l ? l : 0), ms(sr(a), l, f);
        }
        function ug(a, l, f) {
          return l = na(l), f === n ? (f = l, l = 0) : f = na(f), a = sr(a), AL(a, l, f);
        }
        function _g(a, l, f) {
          if (f && typeof f != "boolean" && _n(a, l, f) && (l = f = n), f === n && (typeof l == "boolean" ? (f = l, l = n) : typeof a == "boolean" && (f = a, a = n)), a === n && l === n ? (a = 0, l = 1) : (a = na(a), l === n ? (l = a, a = 0) : l = na(l)), a > l) {
            var m = a;
            a = l, l = m;
          }
          if (f || a % 1 || l % 1) {
            var y = Qf();
            return nn(a + y * (l - a + HS("1e-" + ((y + "").length - 1))), l);
          }
          return T_(a, l);
        }
        var dg = Qs(function(a, l, f) {
          return l = l.toLowerCase(), a + (f ? NA(l) : l);
        });
        function NA(a) {
          return G_(_t(a).toLowerCase());
        }
        function DA(a) {
          return a = _t(a), a && a.replace(Le, tb).replace(BS, "");
        }
        function cg(a, l, f) {
          a = _t(a), l = Dn(l);
          var m = a.length;
          f = f === n ? m : ms(He(f), 0, m);
          var y = f;
          return f -= l.length, f >= 0 && a.slice(f, y) == l;
        }
        function fg(a) {
          return a = _t(a), a && cs.test(a) ? a.replace(On, nb) : a;
        }
        function hg(a) {
          return a = _t(a), a && Ii.test(a) ? a.replace(Br, "\\$&") : a;
        }
        var Ag = Qs(function(a, l, f) {
          return a + (f ? "-" : "") + l.toLowerCase();
        }), Eg = Qs(function(a, l, f) {
          return a + (f ? " " : "") + l.toLowerCase();
        }), pg = Ph("toLowerCase");
        function Tg(a, l, f) {
          a = _t(a), l = He(l);
          var m = l ? Ks(a) : 0;
          if (!l || m >= l)
            return a;
          var y = (l - m) / 2;
          return uo(Xl(y), f) + a + uo(Yl(y), f);
        }
        function mg(a, l, f) {
          a = _t(a), l = He(l);
          var m = l ? Ks(a) : 0;
          return l && m < l ? a + uo(l - m, f) : a;
        }
        function Sg(a, l, f) {
          a = _t(a), l = He(l);
          var m = l ? Ks(a) : 0;
          return l && m < l ? uo(l - m, f) + a : a;
        }
        function bg(a, l, f) {
          return f || l == null ? l = 0 : l && (l = +l), Ob(_t(a).replace(en, ""), l || 0);
        }
        function Lg(a, l, f) {
          return (f ? _n(a, l, f) : l === n) ? l = 1 : l = He(l), m_(_t(a), l);
        }
        function vg() {
          var a = arguments, l = _t(a[0]);
          return a.length < 3 ? l : l.replace(a[1], a[2]);
        }
        var Ig = Qs(function(a, l, f) {
          return a + (f ? "_" : "") + l.toLowerCase();
        });
        function yg(a, l, f) {
          return f && typeof f != "number" && _n(a, l, f) && (l = f = n), f = f === n ? se : f >>> 0, f ? (a = _t(a), a && (typeof l == "string" || l != null && !H_(l)) && (l = Dn(l), !l && Gs(a)) ? ga(pr(a), 0, f) : a.split(l, f)) : [];
        }
        var gg = Qs(function(a, l, f) {
          return a + (f ? " " : "") + G_(l);
        });
        function Rg(a, l, f) {
          return a = _t(a), f = f == null ? 0 : ms(He(f), 0, a.length), l = Dn(l), a.slice(f, f + l.length) == l;
        }
        function Og(a, l, f) {
          var m = O.templateSettings;
          f && _n(a, l, f) && (l = n), a = _t(a), l = Lo({}, l, m, Uh);
          var y = Lo({}, l.imports, m.imports, Uh), N = Wt(y), x = n_(y, N), q, W, Z = 0, J = l.interpolate || dt, te = "__p += '", ce = a_(
            (l.escape || dt).source + "|" + J.source + "|" + (J === jr ? Pl : dt).source + "|" + (l.evaluate || dt).source + "|$",
            "g"
          ), Ie = "//# sourceURL=" + (ct.call(l, "sourceURL") ? (l.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++MS + "]") + `
`;
          a.replace(ce, function(we, ze, tt, wn, dn, Pn) {
            return tt || (tt = wn), te += a.slice(Z, Pn).replace(Ht, rb), ze && (q = !0, te += `' +
__e(` + ze + `) +
'`), dn && (W = !0, te += `';
` + dn + `;
__p += '`), tt && (te += `' +
((__t = (` + tt + `)) == null ? '' : __t) +
'`), Z = Pn + we.length, we;
          }), te += `';
`;
          var Be = ct.call(l, "variable") && l.variable;
          if (!Be)
            te = `with (obj) {
` + te + `
}
`;
          else if (on.test(Be))
            throw new $e(u);
          te = (W ? te.replace(_s, "") : te).replace(Dr, "$1").replace(Yn, "$1;"), te = "function(" + (Be || "obj") + `) {
` + (Be ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + (q ? ", __e = _.escape" : "") + (W ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + te + `return __p
}`;
          var We = wA(function() {
            return ot(N, Ie + "return " + te).apply(n, x);
          });
          if (We.source = te, U_(We))
            throw We;
          return We;
        }
        function Cg(a) {
          return _t(a).toLowerCase();
        }
        function Ng(a) {
          return _t(a).toUpperCase();
        }
        function Dg(a, l, f) {
          if (a = _t(a), a && (f || l === n))
            return Hf(a);
          if (!a || !(l = Dn(l)))
            return a;
          var m = pr(a), y = pr(l), N = Vf(m, y), x = Wf(m, y) + 1;
          return ga(m, N, x).join("");
        }
        function Bg(a, l, f) {
          if (a = _t(a), a && (f || l === n))
            return a.slice(0, Kf(a) + 1);
          if (!a || !(l = Dn(l)))
            return a;
          var m = pr(a), y = Wf(m, pr(l)) + 1;
          return ga(m, 0, y).join("");
        }
        function wg(a, l, f) {
          if (a = _t(a), a && (f || l === n))
            return a.replace(en, "");
          if (!a || !(l = Dn(l)))
            return a;
          var m = pr(a), y = Vf(m, pr(l));
          return ga(m, y).join("");
        }
        function Pg(a, l) {
          var f = $, m = H;
          if (It(l)) {
            var y = "separator" in l ? l.separator : y;
            f = "length" in l ? He(l.length) : f, m = "omission" in l ? Dn(l.omission) : m;
          }
          a = _t(a);
          var N = a.length;
          if (Gs(a)) {
            var x = pr(a);
            N = x.length;
          }
          if (f >= N)
            return a;
          var q = f - Ks(m);
          if (q < 1)
            return m;
          var W = x ? ga(x, 0, q).join("") : a.slice(0, q);
          if (y === n)
            return W + m;
          if (x && (q += W.length - q), H_(y)) {
            if (a.slice(q).search(y)) {
              var Z, J = W;
              for (y.global || (y = a_(y.source, _t(yi.exec(y)) + "g")), y.lastIndex = 0; Z = y.exec(J); )
                var te = Z.index;
              W = W.slice(0, te === n ? q : te);
            }
          } else if (a.indexOf(Dn(y), q) != q) {
            var ce = W.lastIndexOf(y);
            ce > -1 && (W = W.slice(0, ce));
          }
          return W + m;
        }
        function xg(a) {
          return a = _t(a), a && ds.test(a) ? a.replace(Aa, _b) : a;
        }
        var Fg = Qs(function(a, l, f) {
          return a + (f ? " " : "") + l.toUpperCase();
        }), G_ = Ph("toUpperCase");
        function BA(a, l, f) {
          return a = _t(a), l = f ? n : l, l === n ? sb(a) ? fb(a) : XS(a) : a.match(l) || [];
        }
        var wA = Ge(function(a, l) {
          try {
            return Cn(a, n, l);
          } catch (f) {
            return U_(f) ? f : new $e(f);
          }
        }), Mg = Qr(function(a, l) {
          return Qn(l, function(f) {
            f = xr(f), Zr(a, f, $_(a[f], a));
          }), a;
        });
        function qg(a) {
          var l = a == null ? 0 : a.length, f = Ne();
          return a = l ? vt(a, function(m) {
            if (typeof m[1] != "function")
              throw new er(o);
            return [f(m[0]), m[1]];
          }) : [], Ge(function(m) {
            for (var y = -1; ++y < l; ) {
              var N = a[y];
              if (Cn(N[0], this, m))
                return Cn(N[1], this, m);
            }
          });
        }
        function $g(a) {
          return _L(nr(a, p));
        }
        function K_(a) {
          return function() {
            return a;
          };
        }
        function kg(a, l) {
          return a == null || a !== a ? l : a;
        }
        var Ug = Fh(), Hg = Fh(!0);
        function Ln(a) {
          return a;
        }
        function j_(a) {
          return ch(typeof a == "function" ? a : nr(a, p));
        }
        function Vg(a) {
          return hh(nr(a, p));
        }
        function Wg(a, l) {
          return Ah(a, nr(l, p));
        }
        var Gg = Ge(function(a, l) {
          return function(f) {
            return Fi(f, a, l);
          };
        }), Kg = Ge(function(a, l) {
          return function(f) {
            return Fi(a, f, l);
          };
        });
        function z_(a, l, f) {
          var m = Wt(l), y = no(l, m);
          f == null && !(It(l) && (y.length || !m.length)) && (f = l, l = a, a = this, y = no(l, Wt(l)));
          var N = !(It(f) && "chain" in f) || !!f.chain, x = ta(a);
          return Qn(y, function(q) {
            var W = l[q];
            a[q] = W, x && (a.prototype[q] = function() {
              var Z = this.__chain__;
              if (N || Z) {
                var J = a(this.__wrapped__), te = J.__actions__ = mn(this.__actions__);
                return te.push({ func: W, args: arguments, thisArg: a }), J.__chain__ = Z, J;
              }
              return W.apply(a, Sa([this.value()], arguments));
            });
          }), a;
        }
        function jg() {
          return Kt._ === this && (Kt._ = mb), this;
        }
        function Y_() {
        }
        function zg(a) {
          return a = He(a), Ge(function(l) {
            return Eh(l, a);
          });
        }
        var Yg = g_(vt), Xg = g_(Mf), Zg = g_(Zu);
        function PA(a) {
          return w_(a) ? Ju(xr(a)) : RL(a);
        }
        function Jg(a) {
          return function(l) {
            return a == null ? n : Ss(a, l);
          };
        }
        var Qg = qh(), eR = qh(!0);
        function X_() {
          return [];
        }
        function Z_() {
          return !1;
        }
        function tR() {
          return {};
        }
        function nR() {
          return "";
        }
        function rR() {
          return !0;
        }
        function aR(a, l) {
          if (a = He(a), a < 1 || a > Te)
            return [];
          var f = se, m = nn(a, se);
          l = Ne(l), a -= se;
          for (var y = t_(m, l); ++f < a; )
            l(f);
          return y;
        }
        function sR(a) {
          return ke(a) ? vt(a, xr) : Bn(a) ? [a] : mn(eA(_t(a)));
        }
        function iR(a) {
          var l = ++pb;
          return _t(a) + l;
        }
        var lR = oo(function(a, l) {
          return a + l;
        }, 0), oR = R_("ceil"), uR = oo(function(a, l) {
          return a / l;
        }, 1), _R = R_("floor");
        function dR(a) {
          return a && a.length ? to(a, Ln, c_) : n;
        }
        function cR(a, l) {
          return a && a.length ? to(a, Ne(l, 2), c_) : n;
        }
        function fR(a) {
          return kf(a, Ln);
        }
        function hR(a, l) {
          return kf(a, Ne(l, 2));
        }
        function AR(a) {
          return a && a.length ? to(a, Ln, E_) : n;
        }
        function ER(a, l) {
          return a && a.length ? to(a, Ne(l, 2), E_) : n;
        }
        var pR = oo(function(a, l) {
          return a * l;
        }, 1), TR = R_("round"), mR = oo(function(a, l) {
          return a - l;
        }, 0);
        function SR(a) {
          return a && a.length ? e_(a, Ln) : 0;
        }
        function bR(a, l) {
          return a && a.length ? e_(a, Ne(l, 2)) : 0;
        }
        return O.after = VI, O.ary = dA, O.assign = Ny, O.assignIn = yA, O.assignInWith = Lo, O.assignWith = Dy, O.at = By, O.before = cA, O.bind = $_, O.bindAll = Mg, O.bindKey = fA, O.castArray = ty, O.chain = oA, O.chunk = _v, O.compact = dv, O.concat = cv, O.cond = qg, O.conforms = $g, O.constant = K_, O.countBy = SI, O.create = wy, O.curry = hA, O.curryRight = AA, O.debounce = EA, O.defaults = Py, O.defaultsDeep = xy, O.defer = WI, O.delay = GI, O.difference = fv, O.differenceBy = hv, O.differenceWith = Av, O.drop = Ev, O.dropRight = pv, O.dropRightWhile = Tv, O.dropWhile = mv, O.fill = Sv, O.filter = LI, O.flatMap = yI, O.flatMapDeep = gI, O.flatMapDepth = RI, O.flatten = aA, O.flattenDeep = bv, O.flattenDepth = Lv, O.flip = KI, O.flow = Ug, O.flowRight = Hg, O.fromPairs = vv, O.functions = Hy, O.functionsIn = Vy, O.groupBy = OI, O.initial = yv, O.intersection = gv, O.intersectionBy = Rv, O.intersectionWith = Ov, O.invert = Gy, O.invertBy = Ky, O.invokeMap = NI, O.iteratee = j_, O.keyBy = DI, O.keys = Wt, O.keysIn = bn, O.map = Eo, O.mapKeys = zy, O.mapValues = Yy, O.matches = Vg, O.matchesProperty = Wg, O.memoize = To, O.merge = Xy, O.mergeWith = gA, O.method = Gg, O.methodOf = Kg, O.mixin = z_, O.negate = mo, O.nthArg = zg, O.omit = Zy, O.omitBy = Jy, O.once = jI, O.orderBy = BI, O.over = Yg, O.overArgs = zI, O.overEvery = Xg, O.overSome = Zg, O.partial = k_, O.partialRight = pA, O.partition = wI, O.pick = Qy, O.pickBy = RA, O.property = PA, O.propertyOf = Jg, O.pull = Bv, O.pullAll = iA, O.pullAllBy = wv, O.pullAllWith = Pv, O.pullAt = xv, O.range = Qg, O.rangeRight = eR, O.rearg = YI, O.reject = FI, O.remove = Fv, O.rest = XI, O.reverse = M_, O.sampleSize = qI, O.set = tg, O.setWith = ng, O.shuffle = $I, O.slice = Mv, O.sortBy = HI, O.sortedUniq = Wv, O.sortedUniqBy = Gv, O.split = yg, O.spread = ZI, O.tail = Kv, O.take = jv, O.takeRight = zv, O.takeRightWhile = Yv, O.takeWhile = Xv, O.tap = dI, O.throttle = JI, O.thru = Ao, O.toArray = LA, O.toPairs = OA, O.toPairsIn = CA, O.toPath = sR, O.toPlainObject = IA, O.transform = rg, O.unary = QI, O.union = Zv, O.unionBy = Jv, O.unionWith = Qv, O.uniq = eI, O.uniqBy = tI, O.uniqWith = nI, O.unset = ag, O.unzip = q_, O.unzipWith = lA, O.update = sg, O.updateWith = ig, O.values = ni, O.valuesIn = lg, O.without = rI, O.words = BA, O.wrap = ey, O.xor = aI, O.xorBy = sI, O.xorWith = iI, O.zip = lI, O.zipObject = oI, O.zipObjectDeep = uI, O.zipWith = _I, O.entries = OA, O.entriesIn = CA, O.extend = yA, O.extendWith = Lo, z_(O, O), O.add = lR, O.attempt = wA, O.camelCase = dg, O.capitalize = NA, O.ceil = oR, O.clamp = og, O.clone = ny, O.cloneDeep = ay, O.cloneDeepWith = sy, O.cloneWith = ry, O.conformsTo = iy, O.deburr = DA, O.defaultTo = kg, O.divide = uR, O.endsWith = cg, O.eq = mr, O.escape = fg, O.escapeRegExp = hg, O.every = bI, O.find = vI, O.findIndex = nA, O.findKey = Fy, O.findLast = II, O.findLastIndex = rA, O.findLastKey = My, O.floor = _R, O.forEach = uA, O.forEachRight = _A, O.forIn = qy, O.forInRight = $y, O.forOwn = ky, O.forOwnRight = Uy, O.get = V_, O.gt = ly, O.gte = oy, O.has = Wy, O.hasIn = W_, O.head = sA, O.identity = Ln, O.includes = CI, O.indexOf = Iv, O.inRange = ug, O.invoke = jy, O.isArguments = vs, O.isArray = ke, O.isArrayBuffer = uy, O.isArrayLike = Sn, O.isArrayLikeObject = wt, O.isBoolean = _y, O.isBuffer = Ra, O.isDate = dy, O.isElement = cy, O.isEmpty = fy, O.isEqual = hy, O.isEqualWith = Ay, O.isError = U_, O.isFinite = Ey, O.isFunction = ta, O.isInteger = TA, O.isLength = So, O.isMap = mA, O.isMatch = py, O.isMatchWith = Ty, O.isNaN = my, O.isNative = Sy, O.isNil = Ly, O.isNull = by, O.isNumber = SA, O.isObject = It, O.isObjectLike = gt, O.isPlainObject = Hi, O.isRegExp = H_, O.isSafeInteger = vy, O.isSet = bA, O.isString = bo, O.isSymbol = Bn, O.isTypedArray = ti, O.isUndefined = Iy, O.isWeakMap = yy, O.isWeakSet = gy, O.join = Cv, O.kebabCase = Ag, O.last = ar, O.lastIndexOf = Nv, O.lowerCase = Eg, O.lowerFirst = pg, O.lt = Ry, O.lte = Oy, O.max = dR, O.maxBy = cR, O.mean = fR, O.meanBy = hR, O.min = AR, O.minBy = ER, O.stubArray = X_, O.stubFalse = Z_, O.stubObject = tR, O.stubString = nR, O.stubTrue = rR, O.multiply = pR, O.nth = Dv, O.noConflict = jg, O.noop = Y_, O.now = po, O.pad = Tg, O.padEnd = mg, O.padStart = Sg, O.parseInt = bg, O.random = _g, O.reduce = PI, O.reduceRight = xI, O.repeat = Lg, O.replace = vg, O.result = eg, O.round = TR, O.runInContext = U, O.sample = MI, O.size = kI, O.snakeCase = Ig, O.some = UI, O.sortedIndex = qv, O.sortedIndexBy = $v, O.sortedIndexOf = kv, O.sortedLastIndex = Uv, O.sortedLastIndexBy = Hv, O.sortedLastIndexOf = Vv, O.startCase = gg, O.startsWith = Rg, O.subtract = mR, O.sum = SR, O.sumBy = bR, O.template = Og, O.times = aR, O.toFinite = na, O.toInteger = He, O.toLength = vA, O.toLower = Cg, O.toNumber = sr, O.toSafeInteger = Cy, O.toString = _t, O.toUpper = Ng, O.trim = Dg, O.trimEnd = Bg, O.trimStart = wg, O.truncate = Pg, O.unescape = xg, O.uniqueId = iR, O.upperCase = Fg, O.upperFirst = G_, O.each = uA, O.eachRight = _A, O.first = sA, z_(O, function() {
          var a = {};
          return wr(O, function(l, f) {
            ct.call(O.prototype, f) || (a[f] = l);
          }), a;
        }(), { chain: !1 }), O.VERSION = r, Qn(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(a) {
          O[a].placeholder = O;
        }), Qn(["drop", "take"], function(a, l) {
          Je.prototype[a] = function(f) {
            f = f === n ? 1 : kt(He(f), 0);
            var m = this.__filtered__ && !l ? new Je(this) : this.clone();
            return m.__filtered__ ? m.__takeCount__ = nn(f, m.__takeCount__) : m.__views__.push({
              size: nn(f, se),
              type: a + (m.__dir__ < 0 ? "Right" : "")
            }), m;
          }, Je.prototype[a + "Right"] = function(f) {
            return this.reverse()[a](f).reverse();
          };
        }), Qn(["filter", "map", "takeWhile"], function(a, l) {
          var f = l + 1, m = f == ee || f == ie;
          Je.prototype[a] = function(y) {
            var N = this.clone();
            return N.__iteratees__.push({
              iteratee: Ne(y, 3),
              type: f
            }), N.__filtered__ = N.__filtered__ || m, N;
          };
        }), Qn(["head", "last"], function(a, l) {
          var f = "take" + (l ? "Right" : "");
          Je.prototype[a] = function() {
            return this[f](1).value()[0];
          };
        }), Qn(["initial", "tail"], function(a, l) {
          var f = "drop" + (l ? "" : "Right");
          Je.prototype[a] = function() {
            return this.__filtered__ ? new Je(this) : this[f](1);
          };
        }), Je.prototype.compact = function() {
          return this.filter(Ln);
        }, Je.prototype.find = function(a) {
          return this.filter(a).head();
        }, Je.prototype.findLast = function(a) {
          return this.reverse().find(a);
        }, Je.prototype.invokeMap = Ge(function(a, l) {
          return typeof a == "function" ? new Je(this) : this.map(function(f) {
            return Fi(f, a, l);
          });
        }), Je.prototype.reject = function(a) {
          return this.filter(mo(Ne(a)));
        }, Je.prototype.slice = function(a, l) {
          a = He(a);
          var f = this;
          return f.__filtered__ && (a > 0 || l < 0) ? new Je(f) : (a < 0 ? f = f.takeRight(-a) : a && (f = f.drop(a)), l !== n && (l = He(l), f = l < 0 ? f.dropRight(-l) : f.take(l - a)), f);
        }, Je.prototype.takeRightWhile = function(a) {
          return this.reverse().takeWhile(a).reverse();
        }, Je.prototype.toArray = function() {
          return this.take(se);
        }, wr(Je.prototype, function(a, l) {
          var f = /^(?:filter|find|map|reject)|While$/.test(l), m = /^(?:head|last)$/.test(l), y = O[m ? "take" + (l == "last" ? "Right" : "") : l], N = m || /^find/.test(l);
          y && (O.prototype[l] = function() {
            var x = this.__wrapped__, q = m ? [1] : arguments, W = x instanceof Je, Z = q[0], J = W || ke(x), te = function(ze) {
              var tt = y.apply(O, Sa([ze], q));
              return m && ce ? tt[0] : tt;
            };
            J && f && typeof Z == "function" && Z.length != 1 && (W = J = !1);
            var ce = this.__chain__, Ie = !!this.__actions__.length, Be = N && !ce, We = W && !Ie;
            if (!N && J) {
              x = We ? x : new Je(this);
              var we = a.apply(x, q);
              return we.__actions__.push({ func: Ao, args: [te], thisArg: n }), new tr(we, ce);
            }
            return Be && We ? a.apply(this, q) : (we = this.thru(te), Be ? m ? we.value()[0] : we.value() : we);
          });
        }), Qn(["pop", "push", "shift", "sort", "splice", "unshift"], function(a) {
          var l = kl[a], f = /^(?:push|sort|unshift)$/.test(a) ? "tap" : "thru", m = /^(?:pop|shift)$/.test(a);
          O.prototype[a] = function() {
            var y = arguments;
            if (m && !this.__chain__) {
              var N = this.value();
              return l.apply(ke(N) ? N : [], y);
            }
            return this[f](function(x) {
              return l.apply(ke(x) ? x : [], y);
            });
          };
        }), wr(Je.prototype, function(a, l) {
          var f = O[l];
          if (f) {
            var m = f.name + "";
            ct.call(Xs, m) || (Xs[m] = []), Xs[m].push({ name: l, func: f });
          }
        }), Xs[lo(n, I).name] = [{
          name: "wrapper",
          func: n
        }], Je.prototype.clone = xb, Je.prototype.reverse = Fb, Je.prototype.value = Mb, O.prototype.at = cI, O.prototype.chain = fI, O.prototype.commit = hI, O.prototype.next = AI, O.prototype.plant = pI, O.prototype.reverse = TI, O.prototype.toJSON = O.prototype.valueOf = O.prototype.value = mI, O.prototype.first = O.prototype.head, Ci && (O.prototype[Ci] = EI), O;
      }, js = hb();
      As ? ((As.exports = js)._ = js, ju._ = js) : Kt._ = js;
    }).call($M);
  }(Ji, Ji.exports)), Ji.exports;
}
var sm = kM();
function UM(e, {
  dataKeyByKeyIdLocal: t = _(() => ({}))
}) {
  const n = d(e, "isModelArray"), r = d(e, "modelValue");
  return {
    modelValueItemReadonly: _(() => {
      var i;
      if (n.value) {
        let o;
        return (i = r.value) != null && i.length && sm.forEach(r.value, (u) => {
          if (u in t.value)
            return o = t.value[u], !1;
        }), o;
      }
      return t.value[r.value];
    })
  };
}
const im = {
  name: "ARadio",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    classDataParent: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => []
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_radio_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inline: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isModelArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: void 0
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "value"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    search: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: void 0
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrder: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_",
        notElementsWithSearch: "_A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_",
        search: "_A_RADIO_SEARCH_"
      })
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "onSearchOutside",
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      componentStyleHide: r
    } = Jt(e), {
      ariaDescribedbyLocal: s,
      changeModel: i,
      errorsId: o,
      helpTextId: u,
      htmlIdLocal: h,
      isErrors: A,
      onBlur: E,
      onFocus: p
    } = Xt(e, t), {
      textAfterLabel: T
    } = Vc(e), {
      dataFromServer: S,
      dataExtraLocal: b,
      dataKeyByKeyIdLocal: L,
      dataLocal: v,
      hasDataExtra: I
    } = df(e), {
      loadDataFromServer: R,
      loadDataFromServerForSearchAPI: g,
      loadingDataFromServer: D,
      loadingSearchApi: w,
      onSearchInApi: M,
      searchApiLocal: P,
      updateUrlPropsComputed: F,
      urlPropsComputed: C
    } = of(e, {
      changeModel: i,
      dataExtraLocal: b,
      dataFromServer: S
    }), {
      loadingLocal: $
    } = cf(e, {
      loadingDataFromServer: D
    });
    _f(t, {
      dataKeyByKeyIdLocal: L,
      dataLocal: v
    });
    const {
      dataSort: H
    } = uf(e, {
      data: v
    }), {
      dataGrouped: j,
      groupsForLever: le,
      hasKeyGroup: ee,
      keyGroupArray: _e
    } = sf(e, {
      data: H
    }), {
      hasNotElementsExtraWithSearch: ie,
      hasNotElementsWithSearch: ue,
      idForButtonSearchOutside: Te,
      modelSearch: Pe,
      modelSearchLowerCase: Se,
      modelSearchOutside: se,
      onSearchOutside: Oe,
      searching: ye,
      searchingElements: je,
      searchingElementsExtra: he,
      searchingGroups: ne,
      searchingGroupsWithSearchInGroup: V,
      searchOutsideOrApi: Q,
      searchOutsideRef: re,
      updateModelSearch: ve,
      updateModelSearchOutside: De
    } = ff(e, t, {
      data: H,
      dataExtra: b,
      groupsForLever: le,
      htmlIdLocal: h,
      hasKeyGroup: ee,
      keyGroupArray: _e,
      searchApiLocal: P,
      onSearchInApi: M
    }), {
      onChangeModelValue: qe
    } = qM(e, {
      changeModel: i,
      dataKeyByKeyIdLocal: L
    }), {
      iconCollapse: Xe,
      initIsCollapsedLocal: Me,
      isCollapsedLocal: xe,
      titleCollapse: at,
      toggleCollapse: Ve
    } = lf(e, t), {
      groupId: st
    } = Hc(e, {
      htmlIdLocal: h
    }), {
      modelValueItemReadonly: Ze
    } = UM(e, {
      dataKeyByKeyIdLocal: L
    });
    return rt(C, F), Me(), R(), g(), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      componentStyleHide: r,
      dataExtraLocal: b,
      dataGrouped: j,
      dataSort: H,
      errorsId: o,
      groupId: st,
      groupsForLever: le,
      hasDataExtra: I,
      hasKeyGroup: ee,
      hasNotElementsExtraWithSearch: ie,
      hasNotElementsWithSearch: ue,
      helpTextId: u,
      htmlIdLocal: h,
      iconCollapse: Xe,
      idForButtonSearchOutside: Te,
      isCollapsedLocal: xe,
      isErrors: A,
      loadingLocal: $,
      loadingSearchApi: w,
      modelSearch: Pe,
      modelSearchLowerCase: Se,
      modelSearchOutside: se,
      modelValueItemReadonly: Ze,
      onBlur: E,
      onChangeModelValue: qe,
      onFocus: p,
      onSearchOutside: Oe,
      searching: ye,
      searchingElements: je,
      searchingElementsExtra: he,
      searchingGroups: ne,
      searchingGroupsWithSearchInGroup: V,
      searchOutsideOrApi: Q,
      searchOutsideRef: re,
      textAfterLabel: T,
      titleCollapse: at,
      toggleCollapse: Ve,
      updateModelSearch: ve,
      updateModelSearchOutside: De
    };
  },
  render() {
    var e, t, n;
    return this.isRender ? this.readonly ? c(gn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: void 0,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "radio"
    }, this.modelValueItemReadonly ? () => [
      c(Fo, {
        id: this.htmlIdLocal,
        alwaysTranslate: this.alwaysTranslate,
        dataItem: this.modelValueItemReadonly,
        itemIndex: -1,
        modelValue: this.modelValue,
        readonly: !0,
        slotAppendName: this.slotAppendName,
        slotName: this.slotName
      }, this.$slots)
    ] : void 0) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: [
          "a_form_element__parent",
          {
            a_radio_inline: this.inline
          }
        ]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("fieldset", {
            id: this.htmlIdLocal,
            tabindex: -1,
            class: [
              "a_fieldset",
              this.classFieldset,
              {
                a_fieldset_no_border: !this.hasBorder,
                a_fieldset_invalid: this.isErrors,
                a_fieldset_collapsed: this.isCollapsedLocal
              }
            ],
            "aria-describedby": this.ariaDescribedbyLocal
          }, [
            this.label || this.labelScreenReader ? c(be, {
              type: "text",
              alwaysTranslate: this.alwaysTranslate,
              tag: "legend",
              class: [
                "a_legend",
                {
                  a_legend_invalid: this.isErrors
                },
                this.labelClass
              ],
              extra: this.extra,
              html: this.label,
              textScreenReader: this.labelScreenReader,
              textAfter: this.textAfterLabel
            }) : "",
            this.collapsible ? c(be, {
              "aria-controls": this.groupId,
              "aria-expanded": !this.isCollapsedLocal,
              alwaysTranslate: this.alwaysTranslate,
              class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
              iconLeft: this.iconCollapse,
              title: this.titleCollapse,
              textScreenReader: this.titleCollapse,
              type: "button",
              onClick: this.toggleCollapse
            }) : "",
            c("div", {
              id: this.groupId,
              class: "a_fieldset__content"
            }, [
              this.searchOutsideOrApi ? c("div", {
                class: "a_fieldset__search"
              }, [
                c("form", {
                  onSubmit: this.onSearchOutside
                }, [
                  c("div", {
                    class: "input-group"
                  }, [
                    c(vn, {
                      alwaysTranslate: this.alwaysTranslate,
                      label: ((e = this.texts) == null ? void 0 : e.search) || "_A_RADIO_SEARCH_",
                      inputClass: "a_select__element_clickable",
                      modelValue: this.modelSearchOutside,
                      modelUndefined: "",
                      "onUpdate:modelValue": this.updateModelSearchOutside
                    }),
                    c(be, {
                      alwaysTranslate: this.alwaysTranslate,
                      ariaDisabled: this.loadingSearchApi,
                      class: "a_btn a_btn_primary",
                      disabled: this.disabled,
                      iconLeft: gl,
                      type: "submit"
                    })
                  ])
                ])
              ]) : "",
              this.search ? c(vn, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_fieldset__search",
                label: ((t = this.texts) == null ? void 0 : t.search) || "_A_RADIO_SEARCH_",
                modelValue: this.modelSearch,
                modelUndefined: "",
                "onUpdate:modelValue": this.updateModelSearch
              }) : "",
              this.loadingLocal ? c(dl) : "",
              this.hasDataExtra ? c("div", {
                class: "a_radio__data_extra"
              }, [
                ...this.dataExtraLocal.map((r, s) => c(Fo, {
                  key: r[Ke],
                  id: this.htmlIdLocal,
                  alwaysTranslate: this.alwaysTranslate,
                  idSuffix: "extra",
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataItem: r,
                  disabled: this.disabled,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  itemIndex: s,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElementsExtra,
                  slotName: this.slotName,
                  slotAppendName: this.slotAppendName,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.hasNotElementsExtraWithSearch ? "" : c("div", {
                  class: "a_divider",
                  ariaHidden: !0
                })
              ]) : "",
              c("div", {}, this.hasKeyGroup ? [
                c(Gc, {
                  id: `${this.htmlIdLocal}_lev_0`,
                  alwaysTranslate: this.alwaysTranslate,
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataGrouped: this.dataGrouped,
                  disabled: this.disabled,
                  groupsForLever: this.groupsForLever,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  levelIndex: 0,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElements,
                  searchingGroups: this.searchingGroups,
                  searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  type: "radio",
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)
              ] : [
                c("div", {
                  class: [
                    "a_radio_data",
                    {
                      a_btn_group: this.isButtonGroup
                    },
                    this.classDataParent
                  ]
                }, [
                  ...this.dataSort.map((r, s) => c(Fo, {
                    key: r[Ke],
                    id: this.htmlIdLocal,
                    alwaysTranslate: this.alwaysTranslate,
                    classButtonGroupDefault: this.classButtonGroupDefault,
                    dataItem: r,
                    disabled: this.disabled,
                    isButtonGroup: this.isButtonGroup,
                    isErrors: this.isErrors,
                    isWidthAuto: this.isWidthAuto,
                    itemIndex: s,
                    keyDisabled: this.keyDisabled,
                    keyTitle: this.keyTitle,
                    keyTitleCallback: this.keyTitleCallback,
                    modelSearch: this.modelSearchLowerCase,
                    modelValue: this.modelValue,
                    searching: this.searching,
                    searchingElements: this.searchingElements,
                    slotName: this.slotName,
                    slotAppendName: this.slotAppendName,
                    onChangeModelValue: this.onChangeModelValue
                  }, this.$slots))
                ])
              ]),
              !this.dataSort.length || this.hasNotElementsWithSearch ? c(Ae, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_form__not_elements",
                text: ((n = this.texts) == null ? void 0 : n.notElementsWithSearch) || "_A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_"
              }) : ""
            ])
          ])
        ]),
        c(Zt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(ln, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function HM(e, {
  changeQueryModel: t = () => {
  },
  changeRouteModel: n = () => {
  },
  changeTargetModel: r = () => {
  },
  childrenForParam: s = _(() => []),
  hasParam: i = _(() => !1),
  htmlIdLocal: o = _(() => ""),
  routesLocal: u = _(() => [])
}) {
  const h = d(e, "helpTextParam"), A = d(e, "helpTextQuery"), E = d(e, "helpTextRoute"), p = d(e, "helpTextTarget"), T = d(e, "keyIdRoute"), S = d(e, "keyLabelCallbackRoute"), b = d(e, "keyLabelRoute"), L = d(e, "labelParam"), v = d(e, "labelQuery"), I = d(e, "labelRoute"), R = d(e, "labelTarget"), g = d(e, "modelValue"), D = d(e, "readonlyDefaultParam"), w = d(e, "readonlyDefaultQuery"), M = d(e, "readonlyDefaultRoute"), P = d(e, "readonlyDefaultTarget"), F = d(e, "required"), C = d(e, "sortOrderRoute"), $ = d(e, "targets");
  return {
    dataFormChildren: _(() => {
      var j, le;
      return [
        {
          id: "route",
          change: n,
          data: u.value,
          deselectable: !0,
          helpText: E.value,
          idPrefix: o.value,
          isLabelFloat: !1,
          keyId: T.value,
          keyLabel: b.value,
          keyLabelCallback: S.value,
          label: I.value,
          readonlyDefault: M.value,
          required: F.value,
          search: !0,
          sortOrder: C.value,
          type: "select"
        },
        {
          id: "param",
          children: s.value,
          helpText: h.value,
          idPrefix: o.value,
          isRender: i.value,
          label: L.value,
          readonlyDefault: D.value,
          required: F.value,
          type: "fieldset"
        },
        {
          isHide: !((j = g.value) != null && j.route),
          id: "query",
          change: t,
          heightCss: "100px",
          helpText: A.value,
          idPrefix: o.value,
          label: v.value,
          readonlyDefault: w.value,
          type: "json"
        },
        {
          isHide: !((le = g.value) != null && le.route),
          id: "target",
          change: r,
          data: $.value,
          deselectable: !0,
          helpText: p.value,
          idPrefix: o.value,
          isLabelFloat: !1,
          keyId: "id",
          keyLabel: "label",
          label: R.value,
          readonlyDefault: P.value,
          translateData: !0,
          type: "select"
        }
      ];
    })
  };
}
function VM(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "modelValue");
  return {
    changeParamModel: ({ model: u, id: h }) => {
      const A = pe(n.value) || {};
      A.param = A.param || {}, A.param[h] = u, t({ model: A });
    },
    changeQueryModel: ({ model: u }) => {
      const h = pe(n.value) || {};
      h.query = u, t({ model: h });
    },
    changeRouteModel: ({ model: u }) => {
      var h;
      t(u ? {
        model: {
          route: u,
          query: (h = n.value) == null ? void 0 : h.query
        }
      } : {
        model: {}
      });
    },
    changeTargetModel: ({ model: u }) => {
      const h = pe(n.value) || {};
      h.target = u, t({ model: h });
    }
  };
}
function WM(e, {
  changeParamModel: t = () => {
  },
  htmlIdLocal: n = _(() => ""),
  routePathKeyByKeyId: r = _(() => ({}))
}) {
  const s = d(e, "modelValue"), i = d(e, "required"), o = (E) => {
    const p = /:([a-zA-Z0-9_]+)/g, T = [];
    let S;
    for (; (S = p.exec(E)) !== null; )
      T.push(S[1]);
    return T;
  }, u = _(() => {
    var E;
    return (E = s.value) != null && E.route ? o(r.value[s.value.route]) : [];
  }), h = _(() => u.value.length > 0);
  return {
    childrenForParam: _(() => {
      const E = [];
      return z(u.value, (p) => {
        const T = {
          id: `param.${p}`,
          change: ({ model: S }) => t({ model: S, id: p }),
          label: p,
          type: "text",
          idPrefix: n.value,
          required: i.value
        };
        E.push(T);
      }), E;
    }),
    hasParam: h
  };
}
function GM(e) {
  const t = d(e, "keyIdRoute"), n = d(e, "routes"), r = _(() => n.value);
  return {
    routePathKeyByKeyId: _(() => {
      const i = {};
      return z(r.value, (o) => {
        const u = fe(o, t.value);
        i[u] = o.path;
      }), i;
    }),
    routesLocal: r
  };
}
const KM = {
  name: "ARouterLinkConfig",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classColumn: {
      type: [String, Object],
      required: !1,
      default: () => zt.propsDefault.classColumn
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: () => zt.propsDefault.classColumns
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    helpTextParam: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.helpTextParam
    },
    helpTextQuery: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.helpTextQuery
    },
    helpTextRoute: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.helpTextRoute
    },
    helpTextTarget: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.helpTextTarget
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_router_link_config_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyIdRoute: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.keyIdRoute
    },
    keyLabelCallbackRoute: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyLabelRoute: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.keyLabelRoute
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelParam: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.labelParam
    },
    labelQuery: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.labelQuery
    },
    labelRoute: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.labelRoute
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelTarget: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.labelTarget
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    readonlyDefaultParam: {
      type: String,
      required: !1,
      default: void 0
    },
    readonlyDefaultQuery: {
      type: String,
      required: !1,
      default: void 0
    },
    readonlyDefaultRoute: {
      type: String,
      required: !1,
      default: void 0
    },
    readonlyDefaultTarget: {
      type: String,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    routes: {
      type: Array,
      required: !1,
      default: () => zt.propsDefault.routes
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrderRoute: {
      type: String,
      required: !1,
      default: () => zt.propsDefault.sortOrderRoute,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    targets: {
      type: Array,
      required: !1,
      default: () => zt.propsDefault.targets
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      changeModel: n,
      htmlIdLocal: r
    } = Xt(e, t), {
      changeParamModel: s,
      changeQueryModel: i,
      changeRouteModel: o,
      changeTargetModel: u
    } = VM(e, {
      changeModel: n
    }), {
      routePathKeyByKeyId: h,
      routesLocal: A
    } = GM(e), {
      childrenForParam: E,
      hasParam: p
    } = WM(e, {
      changeParamModel: s,
      htmlIdLocal: r,
      routePathKeyByKeyId: h
    }), {
      dataFormChildren: T
    } = HM(e, {
      changeQueryModel: i,
      changeRouteModel: o,
      changeTargetModel: u,
      childrenForParam: E,
      hasParam: p,
      htmlIdLocal: r,
      routesLocal: A
    });
    return {
      dataFormChildren: T,
      hasParam: p,
      htmlIdLocal: r
    };
  },
  render() {
    return c(um, {
      ...this.$attrs,
      alwaysTranslate: this.alwaysTranslate,
      classColumn: this.classColumn,
      classColumns: this.classColumns,
      classFieldset: this.classFieldset,
      disabled: this.disabled,
      errors: this.errors,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      hasBorder: this.hasBorder,
      helpText: this.helpText,
      htmlId: this.htmlId,
      id: this.id,
      idPrefix: this.idPrefix,
      inputAttributes: this.inputAttributes,
      isHide: this.isHide,
      isRender: this.isRender,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelUndefined: this.modelUndefined,
      modelValue: this.modelValue,
      readonly: this.readonly,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      slotName: this.slotName,
      children: this.dataFormChildren,
      "onUpdate:modelValue": this.$emit["update:modelValue"]
    });
  }
};
function jM(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = d(e, "disabled"), r = _(() => `${t.value}_container`), s = _(() => `${t.value}_list`), i = _(() => `${t.value}_label`), o = _(() => n.value ? void 0 : 0);
  return {
    ariaLabelledby: i,
    containerId: r,
    idForList: s,
    tabindex: o
  };
}
function zM(e) {
  const t = d(e, "disabled"), n = d(e, "exclusiveOptionValue"), r = d(e, "isExclusiveOptionEnabled"), s = d(e, "modelValue"), i = _(() => r.value ? s.value && s.value.indexOf(n.value) !== -1 : !1), o = _(() => i.value || t.value), u = _(() => o.value || void 0);
  return {
    disabledAttribut: _(() => t.value || void 0),
    disabledLocal: o,
    disabledLocalAttribut: u,
    isExclusiveOptionSelected: i
  };
}
function YM(e, {
  isMultiselect: t = _(() => !1)
}) {
  const n = d(e, "isSelectAll"), r = d(e, "isDeselectAll");
  return {
    isDividerSelectDeselectVisible: _(() => t.value && (n.value || r.value))
  };
}
function XM(e) {
  const t = d(e, "exclusiveOptionLabel"), n = d(e, "exclusiveOptionValue"), r = d(e, "extra"), s = d(e, "isExclusiveOptionEnabled"), i = _(() => {
    if (s.value)
      return {
        [Ke]: n.value,
        [bt]: xt({
          placeholder: t.value,
          extra: r.value
        })
      };
  }), o = _(() => Pa([i.value], Ke));
  return {
    exclusiveOption: i,
    exclusiveDataKeyByKeyIdLocal: o
  };
}
function ZM(e, {
  dataKeyByKeyIdLocal: t = _(() => ({}))
}) {
  const n = d(e, "countMultiselect"), r = d(e, "exclusiveOptionValue"), s = d(e, "modelValue"), i = d(e, "type"), o = _(() => i.value === "multiselect"), u = _(() => !o.value || !s.value || !me(s.value) ? [] : Rt(s.value, (T) => t.value[T] || T === r.value)), h = _(() => o.value ? u.value.length > 0 : !ae(s.value)), A = _(() => {
    var T;
    return ((T = u.value) == null ? void 0 : T.length) || 0;
  }), E = _(() => A.value > n.value), p = _(() => ({
    [bt]: "_A_SELECT_MORE_SELECTED_{{count}}_",
    extra: {
      count: A.value - n.value
    }
  }));
  return {
    isModelLengthLimitExceeded: E,
    isModelValue: h,
    isMultiselect: o,
    limitExceededModelData: p,
    modelValueLength: A,
    modelValueMultiselectFiltered: u
  };
}
function JM(e, {
  changeModel: t = () => {
  },
  dataAll: n = _(() => []),
  dataKeyByKeyIdLocal: r = _(() => ({})),
  disabledLocal: s = _(() => !1),
  isMultiselect: i = _(() => !1),
  togglePopover: o = () => {
  }
}) {
  const u = d(e, "countMultiselect"), h = d(e, "disabled"), A = d(e, "exclusiveOptionValue"), E = d(e, "isCloseByClick"), p = d(e, "isExclusiveOptionEnabled"), T = d(e, "deselectable"), S = d(e, "maxCountMultiselect"), b = d(e, "modelValue"), L = _(() => !i.value || !S.value ? !1 : fe(b.value, "length") >= S.value), v = _(() => Ce(E.value) ? !i.value : E.value), I = ({ currentValue: P, $event: F, isSelected: C }) => {
    let $;
    if (i.value)
      if ($ = pe(b.value) || [], C) {
        const H = $.indexOf(P);
        $.splice(H, 1), p.value && P === A.value && ($ = []);
      } else if (p.value && P === A.value)
        $ = [P];
      else {
        if (L.value)
          return;
        $.push(P);
      }
    else if (C)
      if (T.value)
        $ = void 0;
      else
        return;
    else
      $ = P;
    t({
      model: $,
      $event: F,
      currentModel: P,
      item: r.value[P]
    }), v.value && o();
  }, R = (P) => {
    const F = fT(b.value, u.value);
    t({
      model: F,
      $event: P
    });
  }, g = () => {
    if (s.value)
      return;
    const P = n.value.map((F) => F[Ke]);
    t({
      model: P
    });
  }, D = (P) => {
    const F = P.keyCode;
    (F === X.enter || F === X.space) && (g(), P.preventDefault());
  }, w = () => {
    h.value || t({
      model: []
    });
  };
  return {
    deleteExceededItems: R,
    onChangeModelValue: I,
    onDeselectAll: w,
    onKeydownDeselectAll: (P) => {
      const F = P.keyCode;
      (F === X.enter || F === X.space) && (w(), P.preventDefault());
    },
    onKeydownSelectAll: D,
    onSelectAll: g
  };
}
function QM(e, {
  dataKeyByKeyIdLocal: t = _(() => ({})),
  isModelLengthLimitExceeded: n,
  isModelValue: r = _(() => !1),
  isMultiselect: s,
  modelValueLength: i,
  modelValueMultiselectFiltered: o = _(() => [])
}) {
  const u = d(e, "modelValue"), h = d(e, "isSelectionCloseable"), A = _(() => {
    if (!r.value)
      return;
    let p = "";
    return s.value ? h.value || !n.value ? z(o.value, (T, S) => {
      const b = t.value[T] || {};
      p += `${S > 0 ? ", " : ""}${b[bt]}`;
    }) : p = `${i.value} ausgewählt` : p = (t.value[u.value] || {})[bt], p;
  });
  return {
    hasSelectedTitle: _(() => !!A.value),
    selectedTitle: A
  };
}
function e1({
  $elements: e = _(() => []),
  clickOutsideCallback: t = () => {
  }
}) {
  const n = B("ontouchend" in document ? "touchstart" : "click"), r = (o) => {
    let u = !1;
    z(e.value, (h) => {
      if (h === o.target || h.contains(o.target))
        return u = !0, !1;
    }), u || t();
  }, s = () => {
    document.addEventListener(n.value, r);
  }, i = () => {
    document.removeEventListener(n.value, r);
  };
  return Dt(() => i()), {
    setEventClickOutside: s,
    destroyEventClickOutside: i
  };
}
const qE = ".a_select__element_clickable:not([disabled]):not([data-hide])";
function t1(e, {
  emit: t
}, {
  closePopup: n = () => {
  },
  htmlIdLocal: r = _(() => ""),
  openPopup: s = () => {
  }
}) {
  const i = d(e, "disabled"), o = d(e, "menuWidthType"), u = B(void 0), h = B(void 0), A = B(!1), E = B(void 0), p = B(void 0), T = d(e, "placement"), S = B(void 0), b = _(() => [
    u.value,
    E.value
  ]), L = _(() => {
    if (o.value === "as_button")
      return u.value.clientWidth;
  }), {
    setEventClickOutside: v,
    destroyEventClickOutside: I
  } = e1({
    $elements: b,
    clickOutsideCallback: _e
  }), R = ({ isArrowDown: ie }) => {
    const ue = p.value.querySelectorAll(qE);
    if (ue.length === 0)
      return;
    let Te = !1;
    z(ue, (Pe, Se) => {
      if (Pe === document.activeElement)
        return Te = !0, ie ? Se < ue.length - 1 && ue[Se + 1].focus() : Se > 0 && ue[Se - 1].focus(), !1;
    }), Te || ue[0].focus();
  }, g = () => {
    u.value.focus();
  }, D = (ie) => {
    const ue = ie.keyCode, Te = ue === X.arrowDown;
    Te || ue === X.arrowUp ? (R({ isArrowDown: Te }), ie.preventDefault()) : ue === X.escape ? (_e(), g(), ie.preventDefault(), ie.stopPropagation()) : ue === X.tab && (_e(), g());
  }, w = () => {
    h.value && (h.value(), h.value = void 0);
  }, M = () => {
    s({
      id: r.value
    }), t("open");
  }, P = () => {
    const ie = p.value.querySelector(qE);
    ie && ie.focus();
  }, F = () => {
    S.value || (S.value = !0, document.addEventListener("keydown", D));
  }, C = () => {
    M(), setTimeout(() => {
      P(), F();
    });
  }, $ = () => {
    !h.value && u.value && p.value && (h.value = Ll(
      u.value,
      p.value,
      () => {
        !u.value || !p.value || yl(
          u.value,
          p.value,
          {
            placement: T.value,
            middleware: [
              Il(),
              vl({ limiter: Ru() })
            ]
          }
        ).then(({ x: ie, y: ue }) => {
          if (!u.value.clientWidth) {
            _e();
            return;
          }
          const Te = {
            left: `${ie}px`,
            top: `${ue}px`
          };
          L.value && (Te.maxWidth = `${L.value}px`, Te.minWidth = `${L.value}px`), Object.assign(p.value.style, Te);
        });
      }
    ), C());
  }, H = () => {
    i.value || (A.value = !0, v(), $());
  }, j = () => {
    A.value ? (_e(), g()) : H();
  }, le = (ie) => {
    const ue = ie.keyCode;
    ue === X.enter || ue === X.space ? (j(), ie.preventDefault()) : !A.value && (ue === X.arrowUp || ue === X.arrowDown) && (H(), ie.preventDefault());
  }, ee = () => {
    S.value && (S.value = !1, document.removeEventListener("keydown", D));
  };
  function _e() {
    A.value = !1, w(), I(), ee(), n({
      id: r.value
    });
  }
  return Dt(() => ee()), {
    buttonRef: u,
    handleKeydown: le,
    isOpen: A,
    menuParentRef: E,
    menuRef: p,
    togglePopover: j
  };
}
const Do = {
  name: "ASelectLabelElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Object,
      required: !0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = d(e, "data");
    return {
      currentLabel: _(() => t.value[bt])
    };
  },
  render() {
    return c(this.tag, {}, [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        item: this.data,
        label: this.currentLabel,
        inDropdown: !1
      }) : Ot(c("span"), [
        [Yt, this.currentLabel]
      ])
    ]);
  }
}, ha = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
  <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z"/>
</svg>`, $E = {
  name: "ASelectValueCloseable",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hideDeleteButton: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, { emit: t }) {
    const n = d(e, "data"), r = _(() => n.value[bt]), s = _(() => n.value[Ke]);
    return {
      closeModel: (o) => {
        t("changeModelValue", {
          currentValue: s.value,
          $event: o,
          isSelected: !0
        }), o.stopPropagation(), o.preventDefault();
      },
      currentLabel: r
    };
  },
  render() {
    return c("li", {
      class: "a_select__ul_closeable__item"
    }, [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        item: this.data,
        label: this.currentLabel,
        inDropdown: !1
      }) : c(Ae, {
        alwaysTranslate: this.alwaysTranslate,
        tag: "span",
        text: this.currentLabel,
        extra: this.data.extra
      }),
      !this.hideDeleteButton && c("button", {
        class: "a_btn a_btn_link a_select__ul_closeable__item__btn",
        type: "button",
        tabindex: -1,
        disabled: this.disabled,
        onClick: this.closeModel
      }, [
        c(ut, {
          icon: ha
        })
      ])
    ]);
  }
}, Qe = {
  propsDefault: {
    buttonClass: void 0,
    caretIcon: bi,
    countMultiselect: 4,
    dataExtra: [],
    exceededItemsDeletable: !0,
    inBody: !0,
    isCloseByClick: void 0,
    isDataSimpleArray: !1,
    deselectable: !0,
    isDeselectAll: !1,
    isSelectAll: !1,
    isSelectionCloseable: !0,
    keyDisabled: void 0,
    keyGroup: void 0,
    keyId: "value",
    keyLabel: "label",
    maxCountMultiselect: void 0,
    menuWidthType: "as_button",
    modelValue: void 0,
    placement: "bottom-end",
    popperContainerId: "a_select_container",
    readonlyDefault: "",
    search: !1,
    searchApi: !1,
    searchApiKey: void 0,
    searchOutside: !1,
    searchTimeout: 0,
    slotName: void 0,
    sortOrder: void 0,
    sortOrderGroup: void 0,
    textDeselectAll: "Alle abwählen",
    textSelectAll: "Alle auswählen",
    translateData: !1,
    type: "select"
  }
}, Ade = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Qe.propsDefault = {
      ...Qe.propsDefault,
      ...t
    };
  }
}, fl = {
  name: "ASelect",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonClass: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.buttonClass
    },
    buttonClassDefault: {
      type: [String, Object],
      required: !1,
      default: "a_form_control a_select_toggle"
    },
    caretIcon: {
      type: [String, Object],
      required: !1,
      default: () => Qe.propsDefault.caretIcon
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    class: {
      type: [String, Object],
      required: !1
    },
    countMultiselect: {
      type: Number,
      required: !1,
      default: () => Qe.propsDefault.countMultiselect
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => Qe.propsDefault.dataExtra
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    deselectable: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.deselectable
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    exceededItemsDeletable: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.exceededItemsDeletable
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    exclusiveOptionLabel: {
      type: String,
      required: !1,
      default: "_A_SELECT_EXCLUSIVE_"
    },
    exclusiveOptionValue: {
      type: [String, Number, Boolean],
      required: !1,
      default: "_exclusive_"
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_ui_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inBody: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.inBody
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      required: !1
    },
    isCloseByClick: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.isCloseByClick
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.isDataSimpleArray
    },
    isDeselectAll: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.isDeselectAll
    },
    isExclusiveOptionEnabled: {
      type: Boolean,
      required: !1,
      default: !1,
      validator: (e, t) => (t == null ? void 0 : t.type) !== "multiselect" ? e === !1 : !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSelectAll: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.isSelectAll
    },
    isSelectionCloseable: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.isSelectionCloseable
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.keyDisabled
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: () => Qe.propsDefault.keyGroup
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.keyId
    },
    keyLabel: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.keyLabel
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    maxCountMultiselect: {
      type: Number,
      required: !1,
      default: () => Qe.propsDefault.maxCountMultiselect,
      validator: (e) => e > 0
    },
    menuWidthType: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.menuWidthType,
      validator: (e) => ["as_button", "by_content"].indexOf(e) !== -1
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: () => Qe.propsDefault.modelValue
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholder: {
      type: String,
      required: !1,
      default: void 0
    },
    placement: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.placement,
      validator: (e) => Rr.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.popperContainerId
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.readonlyDefault
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    search: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.search
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.searchApi
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.searchApiKey
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.searchOutside
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: () => Qe.propsDefault.searchTimeout
    },
    selectMenuClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.slotName
    },
    sortOrder: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.sortOrder,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.sortOrderGroup,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    textDeselectAll: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.textDeselectAll
    },
    textSelectAll: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.textSelectAll
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: () => Qe.propsDefault.translateData
    },
    type: {
      type: String,
      required: !1,
      default: () => Qe.propsDefault.type,
      validator: (e) => ["select", "multiselect"].indexOf(e) !== -1
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "blur",
    "focus",
    "onSearchOutside",
    "open",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      componentStyleHide: r
    } = Jt(e), {
      ariaDescribedbyLocal: s,
      changeModel: i,
      clearModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = Xt(e, t), {
      closePopup: S,
      openPopup: b
    } = jc(), {
      dataAll: L,
      dataFromServer: v,
      dataExtraLocal: I,
      dataKeyByKeyIdLocal: R,
      dataLocal: g,
      hasDataExtra: D
    } = df(e), {
      loadDataFromServer: w,
      loadDataFromServerForSearchAPI: M,
      loadingDataFromServer: P,
      loadingSearchApi: F,
      onSearchInApi: C,
      searchApiLocal: $,
      updateUrlPropsComputed: H,
      urlPropsComputed: j
    } = of(e, {
      changeModel: i,
      dataExtraLocal: I,
      dataFromServer: v
    }), {
      loadingLocal: le
    } = cf(e, {
      loadingDataFromServer: P
    }), {
      addPopperContainerInBody: ee,
      popperContainerIdSelector: _e
    } = qc(e);
    _f(t, {
      dataKeyByKeyIdLocal: R,
      dataLocal: g
    });
    const {
      disabledAttribut: ie,
      disabledLocal: ue,
      disabledLocalAttribut: Te,
      isExclusiveOptionSelected: Pe
    } = zM(e), {
      exclusiveOption: Se,
      exclusiveDataKeyByKeyIdLocal: se
    } = XM(e), {
      isModelLengthLimitExceeded: Oe,
      isModelValue: ye,
      isMultiselect: je,
      limitExceededModelData: he,
      modelValueLength: ne,
      modelValueMultiselectFiltered: V
    } = ZM(e, {
      dataKeyByKeyIdLocal: R
    }), {
      ariaLabelledby: Q,
      containerId: re,
      idForList: ve,
      tabindex: De
    } = jM(e, {
      htmlIdLocal: A
    }), {
      dataSort: qe
    } = uf(e, {
      data: g
    }), {
      dataGrouped: Xe,
      groupsForLever: Me,
      hasKeyGroup: xe,
      keyGroupArray: at
    } = sf(e, {
      data: qe
    }), {
      hasNotElementsExclusiveWithSearch: Ve,
      hasNotElementsExtraWithSearch: st,
      hasNotElementsWithSearch: Ze,
      idForButtonSearchOutside: At,
      modelSearch: Et,
      modelSearchLowerCase: qt,
      modelSearchOutside: pn,
      onSearchOutside: cr,
      searching: Qt,
      searchingElements: Gn,
      searchingElementsExclusive: Kn,
      searchingElementsExtra: Rn,
      searchingGroups: Cr,
      searchingGroupsWithSearchInGroup: fr,
      searchOutsideOrApi: Nr,
      searchOutsideRef: jn,
      updateModelSearch: zn,
      updateModelSearchOutside: Gt
    } = ff(e, t, {
      data: qe,
      dataExtra: I,
      exclusiveOption: Se,
      groupsForLever: Me,
      hasKeyGroup: xe,
      htmlIdLocal: A,
      keyGroupArray: at,
      onSearchInApi: C,
      searchApiLocal: $
    }), {
      buttonRef: Tn,
      handleKeydown: hr,
      isOpen: Ar,
      menuParentRef: _s,
      menuRef: Dr,
      togglePopover: Yn
    } = t1(e, t, {
      closePopup: S,
      htmlIdLocal: A,
      openPopup: b
    }), {
      deleteExceededItems: Aa,
      onChangeModelValue: On,
      onDeselectAll: ds,
      onKeydownDeselectAll: cs,
      onKeydownSelectAll: Lt,
      onSelectAll: Xn
    } = JM(e, {
      changeModel: i,
      dataAll: L,
      dataKeyByKeyIdLocal: R,
      disabledLocal: ue,
      isMultiselect: je,
      togglePopover: Yn
    }), {
      hasSelectedTitle: jr,
      selectedTitle: Ea
    } = QM(e, {
      dataKeyByKeyIdLocal: R,
      isModelLengthLimitExceeded: Oe,
      isModelValue: ye,
      isMultiselect: je,
      modelValueLength: ne,
      modelValueMultiselectFiltered: V
    }), {
      isDividerSelectDeselectVisible: zr
    } = YM(e, {
      isMultiselect: je
    }), {
      destroyEventBusClickLabel: pa,
      initEventBusClickLabel: Br
    } = af({
      htmlIdLocal: A,
      clickLabel: Yn
    });
    return rt(j, H), ee({ className: "a_select_container" }), Br(), w(), M(), Dt(() => {
      pa(), S({
        id: A.value
      });
    }), {
      ariaDescribedbyLocal: s,
      ariaLabelledby: Q,
      attributesToExcludeFromRender: n,
      buttonRef: Tn,
      clearModel: o,
      componentStyleHide: r,
      containerId: re,
      dataExtraLocal: I,
      dataGrouped: Xe,
      dataKeyByKeyIdLocal: R,
      dataLocal: g,
      dataSort: qe,
      deleteExceededItems: Aa,
      disabledAttribut: ie,
      disabledLocal: ue,
      disabledLocalAttribut: Te,
      errorsId: u,
      exclusiveDataKeyByKeyIdLocal: se,
      exclusiveOption: Se,
      groupsForLever: Me,
      handleKeydown: hr,
      hasDataExtra: D,
      hasKeyGroup: xe,
      hasNotElementsExclusiveWithSearch: Ve,
      hasNotElementsExtraWithSearch: st,
      hasNotElementsWithSearch: Ze,
      hasSelectedTitle: jr,
      helpTextId: h,
      htmlIdLocal: A,
      idForButtonSearchOutside: At,
      idForList: ve,
      isDividerSelectDeselectVisible: zr,
      isErrors: E,
      isExclusiveOptionSelected: Pe,
      isModelLengthLimitExceeded: Oe,
      isModelValue: ye,
      isMultiselect: je,
      isOpen: Ar,
      limitExceededModelData: he,
      loadingLocal: le,
      loadingSearchApi: F,
      menuParentRef: _s,
      menuRef: Dr,
      modelSearch: Et,
      modelSearchLowerCase: qt,
      modelSearchOutside: pn,
      modelValueLength: ne,
      modelValueMultiselectFiltered: V,
      onBlur: p,
      onChangeModelValue: On,
      onDeselectAll: ds,
      onFocus: T,
      onKeydownDeselectAll: cs,
      onKeydownSelectAll: Lt,
      onSearchOutside: cr,
      onSelectAll: Xn,
      popperContainerIdSelector: _e,
      searching: Qt,
      searchingElements: Gn,
      searchingElementsExclusive: Kn,
      searchingElementsExtra: Rn,
      searchingGroups: Cr,
      searchingGroupsWithSearchInGroup: fr,
      searchOutsideOrApi: Nr,
      searchOutsideRef: jn,
      selectedTitle: Ea,
      tabindex: De,
      togglePopover: Yn,
      updateModelSearch: zn,
      updateModelSearchOutside: Gt
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(gn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: void 0,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: this.type
    }, this.isModelValue ? () => [
      this.isMultiselect ? this.modelValueMultiselectFiltered.length ? c("ul", {}, [
        this.modelValueMultiselectFiltered.map((e) => c(Do, {
          key: e[Ke],
          alwaysTranslate: this.alwaysTranslate,
          data: this.dataKeyByKeyIdLocal[e] || {},
          slotName: this.slotName,
          tag: "li"
        }, this.$slots))
      ]) : "" : c(Do, {
        alwaysTranslate: this.alwaysTranslate,
        data: this.dataKeyByKeyIdLocal[this.modelValue] || {},
        slotName: this.slotName
      }, this.$slots)
    ] : "") : c("div", {
      ...this.$attrs,
      class: this.class,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModelValue || this.isOpen
        }]
      }, [
        this.label && c(Mt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          loading: this.loadingLocal,
          required: this.required,
          type: this.type,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            id: this.containerId,
            ref: "ui_select",
            class: "a_select",
            role: "application"
          }, [
            c("div", {
              ref: "buttonRef",
              id: this.htmlIdLocal,
              autocomplete: this.autocomplete,
              class: [this.buttonClassDefault, this.buttonClass, {
                disabled: this.disabled,
                a_select_toggle_closeable: this.isMultiselect && this.isSelectionCloseable && this.isModelValue,
                a_form_control_invalid: this.isErrors
              }],
              "aria-labelledby": this.ariaLabelledby,
              role: "combobox",
              tabindex: this.tabindex,
              "aria-haspopup": "listbox",
              ariaExpanded: this.isOpen,
              ariaRequired: this.required,
              ariaDisabled: this.disabledLocal,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              title: this.hasSelectedTitle ? this.selectedTitle : void 0,
              // TODO: title
              onClick: this.togglePopover,
              onKeydown: this.handleKeydown,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }, [
              this.$slots.fixedPlaceholder ? this.$slots.fixedPlaceholder({
                dataKeyByKeyId: this.dataKeyByKeyIdLocal,
                modelValue: this.modelValue
              }) : this.isModelValue ? this.isMultiselect ? this.isSelectionCloseable ? c("ul", {
                class: "a_select__ul_closeable"
              }, [
                fT(this.modelValueMultiselectFiltered, this.countMultiselect).map((e, t) => c($E, {
                  key: t,
                  alwaysTranslate: this.alwaysTranslate,
                  data: this.dataKeyByKeyIdLocal[e] || this.exclusiveDataKeyByKeyIdLocal[e] || {},
                  slotName: this.slotName,
                  disabled: this.disabled,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.isModelLengthLimitExceeded && c($E, {
                  key: this.countMultiselect,
                  alwaysTranslate: this.alwaysTranslate,
                  data: this.limitExceededModelData,
                  disabled: this.disabledLocal,
                  hideDeleteButton: !this.exceededItemsDeletable,
                  onChangeModelValue: this.deleteExceededItems
                })
              ]) : c("span", {
                class: "a_select__value__label"
              }, [
                this.isModelLengthLimitExceeded ? c(Ae, {
                  alwaysTranslate: this.alwaysTranslate,
                  text: "_A_SELECT_SELECTED_{{count}}_",
                  extra: {
                    count: this.modelValueLength
                  }
                }) : this.modelValueMultiselectFiltered.map((e, t) => c("span", {
                  key: t
                }, [
                  c("span", null, t !== 0 ? ", " : ""),
                  c(Do, {
                    alwaysTranslate: this.alwaysTranslate,
                    data: this.dataKeyByKeyIdLocal[e] || {},
                    slotName: this.slotName
                  }, this.$slots)
                ]))
              ]) : c(Do, {
                alwaysTranslate: this.alwaysTranslate,
                data: this.dataKeyByKeyIdLocal[this.modelValue] || {},
                class: "a_select__value__label",
                slotName: this.slotName
              }, this.$slots) : c(Ae, {
                tag: "span",
                text: this.placeholder
              }),
              c(la, {
                to: this.popperContainerIdSelector,
                disabled: !this.inBody
              }, [
                c("div", {
                  ref: "menuParentRef",
                  id: this.idForList,
                  style: this.isOpen ? "" : "display: none;",
                  "aria-hidden": !this.isOpen,
                  role: "application"
                }, [
                  c("div", {
                    ref: "menuRef",
                    class: [
                      "a_select_menu",
                      {
                        a_select_menu_by_content: this.menuWidthType === "by_content"
                      },
                      this.selectMenuClass
                    ],
                    role: "listbox",
                    "aria-labelledby": this.htmlIdLocal,
                    onClick: (e) => e.stopPropagation()
                  }, [
                    this.searchOutsideOrApi && c("div", {
                      class: "a_select__search"
                    }, [
                      c("form", {
                        onSubmit: this.onSearchOutside
                      }, [
                        c("div", {
                          class: "a_select__search__group"
                        }, [
                          c(vn, {
                            alwaysTranslate: this.alwaysTranslate,
                            label: "_A_SELECT_SEARCH_",
                            inputClass: "a_select__element_clickable",
                            modelValue: this.modelSearchOutside,
                            modelUndefined: "",
                            "onUpdate:modelValue": this.updateModelSearchOutside
                          }),
                          c(be, {
                            alwaysTranslate: this.alwaysTranslate,
                            ariaDisabled: this.loadingSearchApi,
                            disabled: this.disabledLocal,
                            class: "a_btn a_btn_primary a_select__element_clickable",
                            type: "submit",
                            iconLeft: gl,
                            loadingAlign: "left"
                          })
                        ])
                      ])
                    ]),
                    this.search && c("div", {
                      class: "a_select__search"
                    }, [
                      c(vn, {
                        alwaysTranslate: this.alwaysTranslate,
                        label: "_A_SELECT_SEARCH_",
                        inputClass: "a_select__element_clickable",
                        modelValue: this.modelSearch,
                        modelUndefined: "",
                        "onUpdate:modelValue": this.updateModelSearch
                      })
                    ]),
                    (this.searchOutside || this.search) && c("div", {
                      class: "a_select__divider",
                      ariaHidden: !0
                    }),
                    c("div", {
                      class: "a_select_menu__child"
                    }, [
                      this.isMultiselect && this.isSelectAll && c("div", {
                        class: [
                          "a_select__menu__link a_select__menu__link_selected a_select__element_clickable",
                          {
                            a_select__menu__link_disabled: this.disabledLocal
                          }
                        ],
                        disabled: this.disabledLocalAttribut,
                        role: "option",
                        tabindex: "-1",
                        onClick: this.onSelectAll,
                        onKeydown: this.onKeydownSelectAll
                      }, [
                        c("span", {
                          class: "a_select__menu__link__icon_box"
                        }, [
                          c(ut, {
                            icon: Wc
                          })
                        ]),
                        c("span", null, this.textSelectAll)
                      ]),
                      this.isMultiselect && this.isDeselectAll && c("div", {
                        class: [
                          "a_select__menu__link a_select__menu__link_selected a_select__element_clickable",
                          {
                            a_select__menu__link_disabled: this.disabled
                          }
                        ],
                        disabled: this.disabledAttribut,
                        role: "option",
                        tabindex: "-1",
                        onClick: this.onDeselectAll,
                        onKeydown: this.onKeydownDeselectAll
                      }, [
                        c("span", {
                          class: "a_select__menu__link__icon_box"
                        }, [
                          c(ut, {
                            icon: ha
                          })
                        ]),
                        c("span", null, this.textDeselectAll)
                      ]),
                      this.isDividerSelectDeselectVisible && c("div", {
                        class: "a_select__divider",
                        ariaHidden: !0
                      }),
                      this.loadingLocal || this.loadingSearchApi ? c(dl) : "",
                      this.isMultiselect && this.isExclusiveOptionEnabled && c("div", {}, [
                        c(Mo, {
                          key: this.exclusiveOptionValue,
                          id: this.htmlIdLocal,
                          alwaysTranslate: !0,
                          dataItem: this.exclusiveOption,
                          disabled: !1,
                          searching: this.searching,
                          itemIndex: 0,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          searchingElements: this.searchingElementsExclusive,
                          searchingGroups: this.searchingGroups,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)
                      ]),
                      this.hasDataExtra && c("div", {}, [
                        ...this.dataExtraLocal.map((e, t) => c(Mo, {
                          key: e[Ke],
                          id: this.htmlIdLocal,
                          alwaysTranslate: this.alwaysTranslate,
                          dataItem: e,
                          disabled: this.disabledLocal,
                          searching: this.searching,
                          searchingElements: this.searchingElementsExtra,
                          itemIndex: this.isExclusiveOptionEnabled ? t + 1 : t,
                          keyDisabled: this.keyDisabled,
                          keyDisabledCallback: this.keyDisabledCallback,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          slotName: this.slotName,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)),
                        !this.hasNotElementsExtraWithSearch && !this.hasNotElementsExclusiveWithSearch && c("div", {
                          class: "a_select__divider",
                          ariaHidden: !0
                        })
                      ]),
                      c("div", {}, this.hasKeyGroup ? [
                        c(Gc, {
                          id: `${this.htmlIdLocal}_lev_0`,
                          alwaysTranslate: this.alwaysTranslate,
                          dataGrouped: this.dataGrouped,
                          disabled: this.disabledLocal,
                          groupsForLever: this.groupsForLever,
                          isErrors: this.isErrors,
                          keyDisabled: this.keyDisabled,
                          keyDisabledCallback: this.keyDisabledCallback,
                          levelIndex: 0,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          searching: this.searching,
                          searchingElements: this.searchingElements,
                          searchingGroups: this.searchingGroups,
                          searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                          slotName: this.slotName,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)
                      ] : [
                        c("div", {}, [
                          ...this.dataSort.map((e, t) => c(Mo, {
                            key: e[Ke],
                            id: this.htmlIdLocal,
                            alwaysTranslate: this.alwaysTranslate,
                            dataItem: e,
                            disabled: this.disabledLocal,
                            searching: this.searching,
                            searchingElements: this.searchingElements,
                            itemIndex: t,
                            keyDisabled: this.keyDisabled,
                            keyDisabledCallback: this.keyDisabledCallback,
                            modelSearch: this.modelSearchLowerCase,
                            modelValue: this.modelValue,
                            slotName: this.slotName,
                            type: this.type,
                            onChangeModelValue: this.onChangeModelValue
                          }, this.$slots))
                        ])
                      ]),
                      !this.dataSort.length && !this.hasDataExtra || this.hasNotElementsWithSearch ? c(Ae, {
                        alwaysTranslate: this.alwaysTranslate,
                        class: "a_form__not_elements",
                        text: "_A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_"
                      }) : ""
                    ])
                  ])
                ])
              ]),
              this.hasCaret ? c("span", {
                class: "a_caret"
              }, [
                c(ut, {
                  icon: this.caretIcon
                })
              ]) : ""
            ])
          ])
        ]),
        c(Zt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(ln, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function n1({
  isModelFalse: e = _(() => !1),
  isModelTrue: t = _(() => !1)
}) {
  return {
    isChecked: _(() => {
      if (t.value)
        return !0;
      if (e.value)
        return !1;
    })
  };
}
function r1(e, {
  isModelFalse: t = _(() => !1),
  isModelTrue: n = _(() => !1)
}) {
  const r = d(e, "trueLabel"), s = d(e, "falseLabel"), i = d(e, "defaultLabel"), o = d(e, "readonly"), u = d(e, "readonlyDefault");
  return {
    labelValueLocal: _(() => n.value ? r.value : t.value ? s.value : o.value ? u.value : i.value)
  };
}
function a1(e) {
  const t = d(e, "modelValue"), n = d(e, "trueValue"), r = d(e, "falseValue"), s = _(() => t.value === n.value || t.value === "true"), i = _(() => t.value === r.value || t.value === "false");
  return {
    isModelDefault: _(() => !s.value && !i.value),
    isModelFalse: i,
    isModelTrue: s
  };
}
function s1(e, {
  changeModel: t = () => {
  },
  isModelFalse: n = _(() => !1),
  isModelTrue: r = _(() => !1)
}) {
  const s = d(e, "defaultValue"), i = d(e, "disabled"), o = d(e, "falseValue"), u = d(e, "isThreeState"), h = d(e, "trueValue"), A = (p) => {
    if (i.value)
      return;
    let T;
    r.value ? T = o.value : u.value && n.value ? T = s.value : T = h.value, t({
      model: T,
      $event: p
    });
  };
  return {
    onInput: A,
    onKeydown: (p) => {
      (p.keyCode === X.enter || p.keyCode === X.space) && (A(p), p.stopPropagation(), p.preventDefault());
    }
  };
}
const lm = {
  name: "ASwitch",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    defaultLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_DEFAULT_LABEL_"
    },
    defaultValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    falseLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_FALSE_LABEL_"
    },
    falseValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !1
    },
    fullWidth: {
      type: Boolean,
      required: !1
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_switch_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isThreeState: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Rr.indexOf(e) !== -1
    },
    trueLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_TRUE_LABEL_"
    },
    trueValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !0
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = wl(e), {
      attributesToExcludeFromRender: r
    } = Bt(e), {
      componentStyleHide: s
    } = Jt(e), {
      ariaDescribedbyLocal: i,
      changeModel: o,
      clearModel: u,
      errorsId: h,
      helpTextId: A,
      htmlIdLocal: E,
      isErrors: p,
      isModel: T,
      onBlur: S,
      onFocus: b
    } = Xt(e, t), {
      isModelDefault: L,
      isModelFalse: v,
      isModelTrue: I
    } = a1(e), {
      labelValueLocal: R
    } = r1(e, {
      isModelFalse: v,
      isModelTrue: I
    }), {
      isChecked: g
    } = n1({
      isModelFalse: v,
      isModelTrue: I
    }), {
      onInput: D,
      onKeydown: w
    } = s1(e, {
      changeModel: o,
      isModelFalse: v,
      isModelTrue: I
    });
    return {
      ariaDescribedbyLocal: i,
      attributesToExcludeFromRender: r,
      clearModel: u,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: h,
      helpTextId: A,
      htmlIdLocal: E,
      isChecked: g,
      isErrors: p,
      isModel: T,
      isModelDefault: L,
      labelValueLocal: R,
      onBlur: S,
      onFocus: b,
      onInput: D,
      onKeydown: w
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(gn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.labelValueLocal,
      required: this.required,
      style: this.componentStyleHide,
      type: "switch"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(Mt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          isError: this.isErrors
        }) : "",
        c("div", {
          class: "switch_button__wrapper"
        }, [
          c(be, {
            class: [
              "switch_button",
              {
                switch_button_undefined: this.isModelDefault,
                switch_button_invalid: this.isErrors,
                switch_button_auto: !this.fullWidth
              }
            ],
            classDefault: "",
            isTitleHtml: this.isTitleHtml,
            tag: "div",
            title: this.title,
            titlePlacement: this.titlePlacement,
            type: "text"
          }, {
            default: () => [
              c("input", {
                id: this.htmlIdLocal,
                "aria-describedby": this.ariaDescribedbyLocal,
                ariaInvalid: this.isErrors,
                ariaRequired: this.required,
                checked: this.isChecked,
                class: [
                  "switch_button__input",
                  this.inputClass
                ],
                disabled: this.disabledAttribut,
                type: "checkbox",
                ...this.inputAttributes,
                onClick: this.onInput,
                onKeydown: this.onKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlur
              }),
              c(Ae, {
                alwaysTranslate: this.alwaysTranslate,
                tag: "label",
                class: [
                  "switch_button__label",
                  {
                    switch_button__label_full: this.fullWidth
                  }
                ],
                for: this.htmlIdLocal,
                extra: this.extra,
                html: this.labelValueLocal
              })
            ]
          })
        ]),
        c(Zt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(ln, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, i1 = {
  name: "ATemplate",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    html: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelValue: {
      required: !1
    },
    options: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = Bt(e), {
      componentStyleHide: n
    } = Jt(e);
    return {
      attributesToExcludeFromRender: t,
      componentStyleHide: n
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      this.$slots[this.slotName] ? c("div", {
        class: "a_template"
      }, this.$slots[this.slotName]({
        options: this.options,
        props: this.$props
      })) : "",
      this.html ? Ot(c("div", {
        class: "a_template"
      }), [
        [Yt, this.html]
      ]) : ""
    ]) : null;
  }
}, nl = typeof Map == "function" ? /* @__PURE__ */ new Map() : /* @__PURE__ */ function() {
  const e = [], t = [];
  return {
    has: function(r) {
      return e.indexOf(r) > -1;
    },
    get: function(r) {
      return t[e.indexOf(r)];
    },
    set: function(r, s) {
      e.indexOf(r) === -1 && (e.push(r), t.push(s));
    },
    delete: function(r) {
      const s = e.indexOf(r);
      s > -1 && (e.splice(s, 1), t.splice(s, 1));
    }
  };
}();
let om = function(t) {
  return new Event(t, { bubbles: !0 });
};
try {
  new Event("test");
} catch {
  om = function(n) {
    const r = document.createEvent("Event");
    return r.initEvent(n, !0, !1), r;
  };
}
function l1(e) {
  if (!e || !e.nodeName || e.nodeName !== "TEXTAREA" || nl.has(e))
    return;
  let t = null, n = null, r = null;
  function s() {
    const p = window.getComputedStyle(e, null);
    p.resize === "vertical" ? e.style.resize = "none" : p.resize === "both" && (e.style.resize = "horizontal"), p.boxSizing === "content-box" ? t = -(parseFloat(p.paddingTop) + parseFloat(p.paddingBottom)) : t = parseFloat(p.borderTopWidth) + parseFloat(p.borderBottomWidth), isNaN(t) && (t = 0), h();
  }
  function i(p) {
    {
      const T = e.style.width;
      e.style.width = "0px", e.offsetWidth, e.style.width = T;
    }
    e.style.overflowY = p;
  }
  function o(p) {
    const T = [];
    for (; p && p.parentNode && p.parentNode instanceof Element; )
      p.parentNode.scrollTop && T.push({
        node: p.parentNode,
        scrollTop: p.parentNode.scrollTop
      }), p = p.parentNode;
    return T;
  }
  function u() {
    if (e.scrollHeight === 0)
      return;
    const p = o(e), T = document.documentElement && document.documentElement.scrollTop;
    e.style.height = "", e.style.height = e.scrollHeight + t + "px", n = e.clientWidth, p.forEach(function(S) {
      S.node.scrollTop = S.scrollTop;
    }), T && (document.documentElement.scrollTop = T);
  }
  function h() {
    u();
    const p = Math.round(parseFloat(e.style.height)), T = window.getComputedStyle(e, null);
    let S = T.boxSizing === "content-box" ? Math.round(parseFloat(T.height)) : e.offsetHeight;
    if (S < p ? T.overflowY === "hidden" && (i("scroll"), u(), S = T.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(e, null).height)) : e.offsetHeight) : T.overflowY !== "hidden" && (i("hidden"), u(), S = T.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(e, null).height)) : e.offsetHeight), r !== S) {
      r = S;
      const b = om("autosize:resized");
      try {
        e.dispatchEvent(b);
      } catch {
      }
    }
  }
  const A = function() {
    e.clientWidth !== n && h();
  }, E = (function(p) {
    window.removeEventListener("resize", A, !1), e.removeEventListener("input", h, !1), e.removeEventListener("keyup", h, !1), e.removeEventListener("autosize:destroy", E, !1), e.removeEventListener("autosize:update", h, !1), Object.keys(p).forEach(function(T) {
      e.style[T] = p[T];
    }), nl.delete(e);
  }).bind(e, {
    height: e.style.height,
    resize: e.style.resize,
    overflowY: e.style.overflowY,
    overflowX: e.style.overflowX,
    wordWrap: e.style.wordWrap
  });
  e.addEventListener("autosize:destroy", E, !1), "onpropertychange" in e && "oninput" in e && e.addEventListener("keyup", h, !1), window.addEventListener("resize", A, !1), e.addEventListener("input", h, !1), e.addEventListener("autosize:update", h, !1), e.style.overflowX = "hidden", e.style.wordWrap = "break-word", nl.set(e, {
    destroy: E,
    update: h
  }), s();
}
function o1(e) {
  const t = nl.get(e);
  t && t.destroy();
}
function u1(e) {
  const t = nl.get(e);
  t && t.update();
}
let ys;
typeof window > "u" || typeof window.getComputedStyle != "function" ? (ys = function(t) {
  return t;
}, ys.destroy = function(e) {
  return e;
}, ys.update = function(e) {
  return e;
}) : (ys = function(t, n) {
  return t && Array.prototype.forEach.call(t.length ? t : [t], function(r) {
    return l1(r);
  }), t;
}, ys.destroy = function(e) {
  return e && Array.prototype.forEach.call(e.length ? e : [e], o1), e;
}, ys.update = function(e) {
  return e && Array.prototype.forEach.call(e.length ? e : [e], u1), e;
});
const hd = ys;
function _1(e) {
  const t = d(e, "isScalable"), n = B(!1), r = B(void 0);
  return {
    destroyAutosize: () => {
      n.value && (hd.destroy(r.value), n.value = !1);
    },
    initAutosize: () => {
      t.value && (hd(r.value), n.value = !0);
    },
    textareaRef: r,
    updateAutosize: () => {
      t.value && n.value && setTimeout(() => {
        hd.update(r.value);
      });
    }
  };
}
function d1(e, {
  changeModel: t = () => {
  },
  updateAutosize: n = () => {
  }
}) {
  const r = d(e, "disabled"), s = d(e, "modelUndefined");
  return {
    clearModel: () => {
      r.value || (t({
        model: s.value
      }), n());
    },
    onInput: (u) => {
      if (r.value)
        return;
      const h = u.target.value;
      t({
        model: h
      });
    }
  };
}
function c1(e) {
  const t = d(e, "resize"), n = {
    v: "a_textarea_resize_v",
    h: "a_textarea_resize_h",
    none: "a_textarea_resize_none",
    auto: ""
  };
  return {
    resizeClass: _(() => n[t.value])
  };
}
function f1(e) {
  const t = d(e, "isScalable"), n = d(e, "rows");
  return {
    rowsLocal: _(() => {
      if (n.value)
        return n.value;
      if (t.value)
        return 1;
    })
  };
}
const h1 = {
  name: "ATextarea",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_textarea_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isScalable: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    maxlength: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    resize: {
      type: String,
      required: !1,
      default: "v",
      validator: (e) => ["v", "h", "none", "auto"].indexOf(e) !== -1
    },
    rows: {
      type: [String, Number],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = wl(e), {
      attributesToExcludeFromRender: r
    } = Bt(e), {
      componentStyleHide: s
    } = Jt(e), {
      ariaDescribedbyLocal: i,
      changeModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: S
    } = Xt(e, t), {
      isClearButtonLocal: b
    } = ku(e, {
      isModel: p
    }), {
      resizeClass: L
    } = c1(e), {
      destroyAutosize: v,
      initAutosize: I,
      textareaRef: R,
      updateAutosize: g
    } = _1(e), {
      clearModel: D,
      onInput: w
    } = d1(e, {
      changeModel: o,
      updateAutosize: g
    }), {
      rowsLocal: M
    } = f1(e), {
      placeholderAttributes: P
    } = Ol(e);
    return Wr(() => {
      I();
    }), Dt(() => {
      v();
    }), {
      ariaDescribedbyLocal: i,
      attributesToExcludeFromRender: r,
      changeModel: o,
      clearModel: D,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isClearButtonLocal: b,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: S,
      onInput: w,
      placeholderAttributes: P,
      resizeClass: L,
      rowsLocal: M,
      textareaRef: R
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(gn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.modelValue,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "textarea",
      valueClass: "a_code_content",
      valueTag: "div"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(Mt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required
        }) : "",
        c("div", {
          class: [
            "a_form_element a_form_element_textarea",
            {
              a_form_element_textarea_scalable: this.isScalable
            }
          ]
        }, [
          c("textarea", {
            ref: "textareaRef",
            id: this.htmlIdLocal,
            autocomplete: this.autocomplete,
            value: this.modelValue,
            rows: this.rowsLocal,
            class: [
              "a_form_control a_textarea",
              this.inputClass,
              {
                a_textarea_scalable: this.isScalable,
                a_form_element_with_one_btn: this.isClearButton,
                a_form_control_invalid: this.isErrors
              },
              this.resizeClass
            ],
            disabled: this.disabledAttribut,
            ariaRequired: this.required,
            ariaInvalid: this.isErrors,
            "aria-describedby": this.ariaDescribedbyLocal,
            maxlength: this.maxlength,
            ...this.placeholderAttributes,
            ...this.inputAttributes,
            onInput: this.onInput,
            onFocus: this.onFocus,
            onBlur: this.onBlur
          }),
          this.isClearButtonLocal ? c("div", {
            class: "a_form_control__actions"
          }, [
            c(Du, {
              alwaysTranslate: this.alwaysTranslate,
              disabled: this.disabled,
              class: this.clearButtonClass,
              onClear: this.clearModel
            })
          ]) : ""
        ]),
        c(Zt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(ln, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, Cl = {
  checkbox: UF,
  color: vn,
  currency: oM,
  date: ri,
  dateRange: A0,
  datetime: ri,
  email: vn,
  file: AM,
  integer: Ba,
  integerNonNegative: Ba,
  integerNonNegativeRange: No,
  integerPositive: Ba,
  integerPositiveRange: No,
  integerRange: No,
  json: PM,
  multiselect: fl,
  natural: vn,
  number: Ba,
  numberRange: No,
  oneCheckbox: Ou,
  password: vn,
  radio: im,
  routerLinkConfig: KM,
  select: fl,
  switch: lm,
  template: i1,
  text: vn,
  textarea: h1
}, um = {
  name: "AFieldset",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    children: {
      type: Array,
      required: !1,
      default: () => []
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_12"
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12"
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_fieldset_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_"
      })
    }
  },
  emits: [
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), r = () => ({
      ...Cl,
      group: cm,
      fieldset: Ur("AFieldset"),
      ...Vn.components,
      ...Vn.containerComponents
    }), {
      componentStyleHide: s
    } = Jt(e), {
      ariaDescribedbyLocal: i,
      errorsId: o,
      helpTextId: u,
      htmlIdLocal: h,
      isErrors: A
    } = Xt(e, t), {
      textAfterLabel: E
    } = Vc(e), {
      onUpdateModelLocal: p
    } = j0(e, t), T = ({ item: D, dataKeyByKeyId: w }) => {
      t.emit("updateData", { item: D, dataKeyByKeyId: w });
    }, {
      groupId: S
    } = Hc(e, {
      htmlIdLocal: h
    }), {
      iconCollapse: b,
      initIsCollapsedLocal: L,
      isCollapsedLocal: v,
      titleCollapse: I,
      toggleCollapse: R
    } = lf(e, t), {
      classColumnsReadonly: g
    } = z0(e);
    return L(), {
      ariaDescribedbyLocal: i,
      attributesToExcludeFromRender: n,
      classColumnsReadonly: g,
      componentStyleHide: s,
      componentTypesMapping: r,
      errorsId: o,
      groupId: S,
      helpTextId: u,
      htmlIdLocal: h,
      iconCollapse: b,
      isCollapsedLocal: v,
      isErrors: A,
      onUpdateDataLocal: T,
      onUpdateModelLocal: p,
      textAfterLabel: E,
      titleCollapse: I,
      toggleCollapse: R
    };
  },
  render() {
    if (!this.isRender)
      return null;
    const e = [
      this.children.map((t, n) => {
        if (t.isRender !== !1) {
          const r = pi.value[t.type];
          let s;
          ae(t.classColumn) ? s = this.classColumnDefault : t.classColumn && (s = t.classColumn);
          let i;
          t.isHide && (i = "display: none;");
          const o = this.componentTypesMapping()[t.type];
          return c("div", {
            class: s,
            style: i
          }, [
            c(o, {
              key: n,
              alwaysTranslate: this.alwaysTranslate,
              modelValue: r ? this.modelValue : fe(this.modelValue, t.id),
              modelDependencies: r ? this.modelValue : void 0,
              errors: fe(this.errorsAll, t.id),
              errorsAll: r ? this.errorsAll : void 0,
              idPrefix: this.idPrefix,
              onUpdateData: ({ dataKeyByKeyId: u }) => this.onUpdateDataLocal({ item: t, dataKeyByKeyId: u }),
              ...t,
              change: ({ currentModel: u, id: h, item: A, model: E, props: p }) => this.onUpdateModelLocal({
                currentModel: u,
                id: h,
                item: A,
                model: E,
                props: p,
                component: t
              }),
              readonly: this.readonly || t.readonly,
              readonlyDefault: "readonlyDefault" in t && !Ce(t.readonlyDefault) ? t.readonlyDefault : this.readonlyDefault,
              disabled: this.disabled || t.disabled,
              classColumn: void 0,
              slotAppend: void 0,
              ...this.attributesToExcludeFromRender
            }, this.$slots),
            t.slotAppend && this.$slots[t.slotAppend] ? this.$slots[t.slotAppend]({ item: t, itemIndex: n }) : ""
          ]);
        }
      }),
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.htmlIdLocal,
        props: this.$props
      }) : ""
    ];
    return this.readonly ? c(gn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      collapsible: this.collapsible,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      isCollapsed: this.isCollapsed,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      required: this.required,
      style: this.componentStyleHide,
      type: "fieldset",
      valueParentClass: this.classColumnsReadonly
    }, () => e) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__parent"
      }, [
        c("fieldset", {
          id: this.htmlIdLocal,
          tabindex: -1,
          class: ["a_fieldset", this.classFieldset, {
            a_fieldset_invalid: this.isErrors,
            a_fieldset_no_border: !this.hasBorder,
            a_fieldset_collapsed: this.isCollapsedLocal
          }],
          "aria-describedby": this.ariaDescribedbyLocal
        }, [
          this.label || this.labelScreenReader ? c(be, {
            type: "text",
            alwaysTranslate: this.alwaysTranslate,
            tag: "legend",
            class: [
              "a_legend",
              {
                a_legend_invalid: this.isErrors
              },
              this.labelClass
            ],
            extra: this.extra,
            html: this.label,
            textScreenReader: this.labelScreenReader,
            textAfter: this.textAfterLabel
          }) : "",
          this.collapsible ? c(be, {
            "aria-controls": this.groupId,
            "aria-expanded": !this.isCollapsedLocal,
            alwaysTranslate: this.alwaysTranslate,
            class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
            iconLeft: this.iconCollapse,
            title: this.titleCollapse,
            textScreenReader: this.titleCollapse,
            type: "button",
            onClick: this.toggleCollapse
          }) : "",
          c("div", {
            id: this.groupId,
            class: [
              this.classColumns,
              "a_fieldset__content"
            ]
          }, e)
        ]),
        c(Zt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(ln, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]);
  }
}, A1 = ["datepickerRange", "dateRange"], _m = {};
z(A1, (e) => {
  _m[e] = !0;
});
const dm = _m;
function E1(e) {
  const t = d(e, "children");
  return {
    specificAttributes: _(() => {
      const r = {};
      return z(t.value, (s) => {
        const i = rm[s.type], o = dm[s.type];
        i && Ce(s.inputWidth) && (r[s.id] = {
          inputWidth: "auto"
        }), o && (r[s.id] = {
          inputWidth: "inherit",
          inputAttributes: {
            style: "min-width: 181px"
          }
        });
      }), r;
    })
  };
}
const Vn = {
  components: {},
  containerComponents: {}
}, Ede = {
  install: (e, {
    components: t = {},
    containerComponents: n = {}
  } = {}) => {
    Vn.components = t, Vn.containerComponents = n;
  }
}, cm = {
  name: "AGroup",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    children: {
      type: Array,
      required: !1,
      default: () => []
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_6 a_column_12_touch"
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12 a_columns_gap_2"
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => lt("a_group_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: [String, Number, Array, Object, Boolean],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), r = () => ({
      ...Cl,
      ...Vn.components,
      ...Vn.containerComponents
    }), {
      componentStyleHide: s
    } = Jt(e), {
      ariaDescribedbyLocal: i,
      changeModel: o,
      clearModel: u,
      errorsId: h,
      helpTextId: A,
      htmlIdLocal: E,
      isErrors: p
    } = Xt(e, t), T = d(e, "change"), S = d(e, "modelValue"), b = ({ currentModel: w, id: M, item: P, model: F, props: C, component: $ }) => {
      const H = pe(S.value || {});
      Lc(H, M, pe(F)), t.emit("update:modelValue", H), T.value({ currentModel: w, id: M, item: P, fullModel: H, model: F, props: C }), Fe($.change) && $.change({ currentModel: w, id: M, item: P, fullModel: H, model: F, props: C });
    }, L = ({ item: w, dataKeyByKeyId: M }) => {
      t.emit("updateData", { item: w, dataKeyByKeyId: M });
    }, v = d(e, "children"), I = d(e, "idPrefix"), R = _(() => v.value[0] || {}), g = _(() => cl({
      id: R.value.id,
      idPrefix: R.value.idPrefix || I.value,
      htmlId: R.value.htmlId
    })), {
      specificAttributes: D
    } = E1(e);
    return {
      ariaDescribedbyLocal: i,
      attributesToExcludeFromRender: n,
      changeModel: o,
      clearModel: u,
      componentStyleHide: s,
      componentTypesMapping: r,
      errorsId: h,
      firstChild: R,
      helpTextId: A,
      htmlIdFirstChild: g,
      htmlIdLocal: E,
      isErrors: p,
      onUpdateDataLocal: L,
      onUpdateModelLocal: b,
      specificAttributes: D
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        id: this.htmlIdLocal,
        role: "group",
        tabindex: -1,
        class: [this.inputClass, {
          a_group_invalid: this.isErrors
        }],
        "aria-describedby": this.ariaDescribedbyLocal
      }, [
        c("div", {
          class: this.classColumns
        }, [
          this.firstChild.label && c(Mt, {
            id: this.htmlIdFirstChild,
            alwaysTranslate: this.alwaysTranslate,
            extra: this.extra,
            isError: !!this.errorsAll[this.firstChild.id],
            isLabelFloat: !1,
            label: this.label || this.firstChild.label,
            labelClass: this.labelClass || this.firstChild.labelClass || this.classColumnDefault,
            labelScreenReader: this.labelScreenReader || this.firstChild.labelScreenReader,
            required: this.required || this.firstChild.required,
            type: this.firstChild.type
          }),
          this.children.map((e, t) => {
            const n = pi.value[e.type];
            let r;
            ae(e.classColumn) ? r = this.classColumnDefault : e.classColumn && (r = e.classColumn);
            let s;
            e.isHide && (s = "display: none;");
            const i = this.componentTypesMapping()[e.type];
            return c("div", {
              class: r,
              style: s
            }, [
              c(i, {
                key: t,
                alwaysTranslate: this.alwaysTranslate,
                modelValue: n ? this.modelValue : fe(this.modelValue, e.id),
                modelDependencies: n ? this.modelValue : void 0,
                errors: this.errorsAll[e.id],
                errorsAll: n ? this.errorsAll : void 0,
                idPrefix: this.idPrefix,
                onUpdateData: ({ dataKeyByKeyId: o }) => this.onUpdateDataLocal({ item: e, dataKeyByKeyId: o }),
                ...e,
                change: ({ currentModel: o, id: u, item: h, model: A, props: E }) => this.onUpdateModelLocal({
                  currentModel: o,
                  id: u,
                  item: h,
                  model: A,
                  props: E,
                  component: e
                }),
                disabled: this.disabled || e.disabled,
                ...this.specificAttributes[e.id],
                label: t === 0 ? void 0 : e.label,
                slotAppend: void 0,
                classColumn: void 0,
                ...this.attributesToExcludeFromRender
              }, this.$slots),
              e.slotAppend && this.$slots[e.slotAppend] ? this.$slots[e.slotAppend]({ item: e, itemIndex: t }) : ""
            ]);
          })
        ])
      ]),
      c(Zt, {
        id: this.helpTextId,
        alwaysTranslate: this.alwaysTranslate,
        html: this.helpText,
        extra: this.extra
      }),
      this.isErrors && c(ln, {
        class: "a_px_3",
        id: this.errorsId,
        alwaysTranslate: this.alwaysTranslate,
        errors: this.errors
      })
    ]) : null;
  }
}, Xc = {
  fieldset: um,
  group: cm,
  ...Vn.containerComponents
};
function p1() {
  return {
    componentTypesMapping: () => ({
      ...Cl,
      ...Xc,
      ...Vn.components,
      ...Vn.containerComponents
    })
  };
}
function T1(e) {
  const t = d(e, "filter");
  return {
    isContainer: _(() => !!pi.value[t.value.type])
  };
}
function m1(e) {
  const t = d(e, "filter");
  return {
    filterSpecificAttributes: _(() => {
      const r = {}, s = rm[t.value.type], i = dm[t.value.type];
      return s && Ce(t.value.inputWidth) && (r.inputWidth = "auto"), i && (r.inputWidth = "inherit", r.inputAttributes = {
        style: "min-width: 181px"
      }), r;
    })
  };
}
function S1(e) {
  const t = d(e, "id");
  return {
    idPrefix: _(() => `${t.value}_`)
  };
}
function b1(e, {
  isContainer: t = _(() => !1)
}) {
  const n = d(e, "filter"), r = d(e, "onUpdateModelFilters"), s = d(e, "unappliedModel");
  return {
    onUpdateModelFiltersLocal: (o) => {
      if (t.value)
        r.value({ model: o });
      else {
        const u = pe(s.value);
        u[n.value.id] = pe(o), r.value({ model: u });
      }
    }
  };
}
function L1(e) {
  const t = d(e, "filter"), n = d(e, "updateDataKeyByIdFromFilter"), r = ["select", "multiselect", "radio", "checkbox", "group", "fieldset"], s = ({ dataKeyByKeyId: o, item: u }) => {
    let h = t.value.id;
    u && (h = u.id), n.value({
      filterId: h,
      dataKeyByKeyId: o
    });
  };
  return {
    emitForComponentsWithData: _(() => {
      const o = {};
      return r.indexOf(t.value.type) !== -1 && (o.onUpdateData = s), o;
    })
  };
}
const v1 = {
  name: "AFiltersHorizontalFilterUi",
  props: {
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filter: {
      type: Object,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    isLabelVisible: {
      type: Boolean,
      required: !0
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    unappliedModel: {
      type: Object,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = Bt(e), {
      isContainer: n
    } = T1(e), {
      onUpdateModelFiltersLocal: r
    } = b1(e, {
      isContainer: n
    }), {
      emitForComponentsWithData: s
    } = L1(e), {
      idPrefix: i
    } = S1(e), {
      componentTypesMapping: o
    } = p1(), {
      filterSpecificAttributes: u
    } = m1(e);
    return {
      attributesToExcludeFromRender: t,
      componentTypesMapping: o,
      emitForComponentsWithData: s,
      filterSpecificAttributes: u,
      idPrefix: i,
      isContainer: n,
      onUpdateModelFiltersLocal: r
    };
  },
  render() {
    const e = this.componentTypesMapping()[this.filter.type];
    return c(e, {
      idPrefix: this.idPrefix,
      modelValue: this.isContainer ? this.unappliedModel : this.unappliedModel[this.filter.id],
      "onUpdate:modelValue": this.onUpdateModelFiltersLocal,
      excludeRenderAttributes: this.excludeRenderAttributes,
      ...this.filter,
      ...this.filterSpecificAttributes,
      label: this.isLabelVisible ? this.filter.label : void 0,
      ...this.emitForComponentsWithData,
      ...this.attributesToExcludeFromRender
    }, this.$slots);
  }
};
function I1(e) {
  const t = d(e, "id");
  return {
    idFilterRight: _(() => `${t.value}_filter_right`)
  };
}
const y1 = {
  name: "AFilersRight",
  props: {
    appliedModel: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filters: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch"
  ],
  setup(e) {
    const {
      idFilterRight: t
    } = I1(e);
    return {
      idFilterRight: t
    };
  },
  render() {
    return c("div", {
      id: this.idFilterRight,
      class: "a_filters_right"
    }, [
      c("form", {}, [
        this.filters.map((e) => c(v1, {
          id: this.id,
          class: "a_filters_right__filter_ui",
          excludeRenderAttributes: this.excludeRenderAttributes,
          filter: e,
          isLabelVisible: !0,
          onUpdateModelFilters: this.onUpdateModelFilters,
          unappliedModel: this.appliedModel,
          updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter
        }, this.$slots))
      ])
    ]);
  }
};
function g1(e) {
  const t = d(e, "closeFilterValue"), n = d(e, "disabled"), r = d(e, "filter");
  return {
    closeCurrentFilterValue: ({ modelValue: i }) => {
      n.value || t.value({
        filter: r.value,
        modelArray: i.modelArray,
        keyId: i.keyId
      });
    }
  };
}
function R1(e, { emit: t }, {
  modelValuesForCurrentFilter: n = _(() => [])
}) {
  const r = d(e, "filter"), s = _(() => n.value.length > 0);
  return {
    isLeastOneFilterVisible: s,
    updateVisibleChildFilters: ({ destroy: o } = {}) => {
      t("updateVisibleChildFilters", {
        id: r.value.id,
        isVisible: o ? !1 : s.value
      });
    }
  };
}
function O1(e) {
  const t = d(e, "filter"), n = d(e, "id"), r = _(() => `eventATableFilterTopOnOpen_${n.value}`);
  return {
    goToFilter: ({ modelValue: i } = {}) => {
      let o = cl({
        id: t.value.id,
        idPrefix: `${n.value}_filter_top`,
        htmlId: t.value.htmlId
      });
      i.idSuffix && (o += i.idSuffix), t.value.main || Ct.$emit(r.value, o);
    }
  };
}
function C1({ filter: e, currentModel: t }) {
  return !(!e || e.hideFilterCenter || ae(t) || t === "" || me(t) && !t.length);
}
function N1(e) {
  const t = d(e, "filter"), n = d(e, "model");
  return {
    hasCurrentFilter: _(() => C1({
      filter: t.value,
      currentModel: n.value
    }))
  };
}
function D1(e, { emit: t }, {
  hasCurrentFilter: n = _(() => !1)
}) {
  const r = d(e, "dataKeyByKeyIdPerFilter"), s = d(e, "filter"), i = _(() => n.value && cM.value[s.value.type] ? hn(r.value[s.value.id]) : !1);
  return {
    isFilterLoading: i,
    updateLoadingChildFilters: (u, h) => {
      u !== h && t("updateLoadingChildFilters", {
        id: s.value.id,
        isLoading: i.value
      });
    }
  };
}
function B1(e, {
  hasCurrentFilter: t = _(() => !1)
}) {
  const n = d(e, "filter"), r = _(() => t.value ? n.value.label : ""), s = _(() => {
    if (t.value)
      return n.value.labelScreenReader;
  }), i = _(() => s.value || r.value);
  return {
    filterLabel: r,
    filterLabelForTitle: i
  };
}
function w1(e, {
  filterLabel: t = _(() => ""),
  filterLabelForTitle: n = _(() => ""),
  hasCurrentFilter: r = _(() => !1)
}) {
  const s = d(e, "dataKeyByKeyIdPerFilter"), i = d(e, "filter"), o = d(e, "model"), {
    filterBoolean: u,
    filterDate: h
  } = Wn(), A = _(() => {
    if (i.value)
      return s.value[i.value.id];
  }), E = _(() => {
    var S;
    return (S = o.value) != null && S.length ? Rt(o.value, (b) => A.value && A.value[b]) : [];
  }), p = ({ label: S, suffixTranslated: b }) => {
    const L = xt({
      placeholder: S
    });
    return b ? `${L} ${b}` : L;
  };
  return {
    modelValuesForCurrentFilter: _(() => {
      var S, b, L, v, I, R, g, D, w;
      if (!r.value)
        return [];
      if (i.value.type === "switch" || i.value.type === "oneCheckbox")
        return [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: u(o.value)
        }];
      if (i.value.type === "date")
        return [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: h(o.value)
        }];
      if (i.value.type === "select" || i.value.type === "radio") {
        const M = fe(A.value, `${o.value}.${bt}`);
        return M ? [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: M
        }] : [];
      }
      if (zc.value[i.value.type] || i.value.type === "radio" && i.value.isModelArray) {
        if (E.value.length) {
          if (E.value.length === 1) {
            const M = (S = A.value) == null ? void 0 : S[E.value[0]];
            return [{
              filterLabelTranslated: p({ label: t.value }),
              filterLabelForTitleTranslated: p({ label: n.value }),
              label: M == null ? void 0 : M[bt],
              item: M,
              modelArray: E.value
            }];
          }
          return [{
            filterLabelTranslated: p({ label: t.value }),
            filterLabelForTitleTranslated: p({ label: n.value }),
            label: xt({
              placeholder: "_A_FILTERS_SELECTED_{{count}}_",
              extra: {
                count: E.value.length,
                modelArray: E.value
              }
            }),
            modelArray: E.value,
            extra: {
              count: E.value.length,
              modelArray: E.value
            }
          }];
        }
        return [];
      }
      if (i.value.type === "dateRange") {
        const M = i.value.keyFrom || "from", P = i.value.keyUntil || "until", F = [];
        if (!ae((b = o.value) == null ? void 0 : b[M]) && ((L = o.value) == null ? void 0 : L[M]) !== "") {
          const C = xt({
            placeholder: i.value.labelFrom || "_A_DATEPICKER_RANGE_FROM_"
          });
          F.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: C
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: C
            }),
            label: h(o.value[M]),
            idSuffix: "_from",
            keyId: M
          });
        }
        if (!ae((v = o.value) == null ? void 0 : v[P]) && ((I = o.value) == null ? void 0 : I[P]) !== "") {
          const C = xt({
            placeholder: i.value.labelUntil || "_A_DATEPICKER_RANGE_UNTIL_"
          });
          F.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: C
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: C
            }),
            label: h(o.value[P]),
            idSuffix: "_until",
            keyId: P
          });
        }
        return F;
      }
      if (Yc.indexOf(i.value.type) !== -1) {
        const M = i.value.keyMax || "max", P = i.value.keyMin || "min", F = [];
        if (!ae((R = o.value) == null ? void 0 : R[P]) && ((g = o.value) == null ? void 0 : g[P]) !== "") {
          const C = xt({
            placeholder: i.value.labelMin || "_A_INPUT_NUMBER_RANGE_LABEL_MIN_"
          });
          F.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: C
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: C
            }),
            label: o.value[P],
            idSuffix: "_min",
            keyId: P
          });
        }
        if (!ae((D = o.value) == null ? void 0 : D[M]) && ((w = o.value) == null ? void 0 : w[M]) !== "") {
          const C = xt({
            placeholder: i.value.labelMax || "_A_INPUT_NUMBER_RANGE_LABEL_MAX_"
          });
          F.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: C
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: C
            }),
            label: o.value[M],
            idSuffix: "_max",
            keyId: M
          });
        }
        return F;
      }
      return [{
        label: o.value,
        filterLabelTranslated: p({ label: t.value }),
        filterLabelForTitleTranslated: p({ label: n.value })
      }];
    })
  };
}
const P1 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pin-fill" viewBox="0 0 16 16">
  <path d="M4.146.146A.5.5 0 0 1 4.5 0h7a.5.5 0 0 1 .5.5c0 .68-.342 1.174-.646 1.479-.126.125-.25.224-.354.298v4.431l.078.048c.203.127.476.314.751.555C12.36 7.775 13 8.527 13 9.5a.5.5 0 0 1-.5.5h-4v4.5c0 .276-.224 1.5-.5 1.5s-.5-1.224-.5-1.5V10h-4a.5.5 0 0 1-.5-.5c0-.973.64-1.725 1.17-2.189A6 6 0 0 1 5 6.708V2.277a3 3 0 0 1-.354-.298C4.342 1.674 4 1.179 4 .5a.5.5 0 0 1 .146-.354"/>
</svg>`, x1 = {
  name: "AFilterCenterItem",
  props: {
    closeFilterValue: {
      type: Function,
      required: !0
    },
    dataKeyByKeyIdPerFilter: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    filter: {
      type: Object,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    model: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "updateVisibleChildFilters",
    "updateLoadingChildFilters"
  ],
  setup(e, t) {
    const {
      hasCurrentFilter: n
    } = N1(e), {
      isFilterLoading: r,
      updateLoadingChildFilters: s
    } = D1(e, t, {
      hasCurrentFilter: n
    }), {
      filterLabel: i,
      filterLabelForTitle: o
    } = B1(e, {
      hasCurrentFilter: n
    }), {
      modelValuesForCurrentFilter: u
    } = w1(e, {
      filterLabel: i,
      filterLabelForTitle: o,
      hasCurrentFilter: n
    }), {
      isLeastOneFilterVisible: h,
      updateVisibleChildFilters: A
    } = R1(e, t, {
      modelValuesForCurrentFilter: u
    }), {
      goToFilter: E
    } = O1(e), {
      closeCurrentFilterValue: p
    } = g1(e);
    return rt(h, () => {
      A();
    }, {
      immediate: !0
    }), rt(r, (T, S) => {
      s(T, S);
    }, {
      immediate: !0
    }), Dt(() => {
      A({
        destroy: !0
      });
    }), {
      closeCurrentFilterValue: p,
      filterLabel: i,
      goToFilter: E,
      hasCurrentFilter: n,
      isLeastOneFilterVisible: h,
      modelValuesForCurrentFilter: u
    };
  },
  render() {
    return this.hasCurrentFilter && [
      this.modelValuesForCurrentFilter.map((e) => c("div", {
        role: "group",
        class: "a_filters_center__item a_btn_group a_btn_group_small"
      }, [
        this.filter.hasNotClose && c(be, {
          class: "a_btn a_btn_secondary",
          ariaHidden: !0,
          tabindex: -1,
          iconLeft: P1,
          type: "text"
        }),
        c(be, {
          class: "a_btn a_btn_secondary",
          title: "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_",
          textScreenReader: "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_",
          extra: {
            filterLabel: e.filterLabelForTitleTranslated,
            filterValue: e.label
          },
          type: "button",
          onClick: () => this.goToFilter({ modelValue: e })
        }, () => [
          e.filterLabelTranslated ? c("strong", {
            class: "a_filters_center__item__label",
            ariaHidden: !0
          }, [
            c(Ae, {
              tag: "span",
              html: e.filterLabelTranslated,
              textAfter: ":"
            })
          ]) : "",
          this.filter.slotName && this.$slots[this.filter.slotName] ? this.$slots[this.filter.slotName]({
            item: e.item,
            label: e.label,
            extra: e.extra,
            inFilterCenter: !0
          }) : c("span", {
            class: "a_filters_center__item__value"
          }, e.label)
        ]),
        this.filter.hasNotClose ? "" : c(be, {
          class: "a_btn a_btn_secondary",
          disabled: this.disabled,
          iconLeft: ha,
          title: "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_",
          textScreenReader: "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_",
          extra: {
            filterLabel: e.filterLabelForTitleTranslated,
            filterValue: e.label
          },
          type: "button",
          onClick: () => this.closeCurrentFilterValue({ modelValue: e })
        })
      ]))
    ];
  }
};
function F1() {
  const e = B({}), t = ({ id: r, isLoading: s }) => {
    e.value[r] = s;
  };
  return {
    isLeastOneChildFilterLoading: _(() => {
      let r = !1;
      return z(e.value, (s) => {
        if (s)
          return r = !0, !1;
      }), r;
    }),
    updateLoadingChildFilters: t
  };
}
function M1(e) {
  const t = d(e, "filtersGroup"), n = B({}), r = ({ id: u, isVisible: h }) => {
    n.value[u] = h;
  }, s = _(() => {
    let u = !1;
    return z(n.value, (h) => {
      if (h)
        return u = !0, !1;
    }), u;
  }), i = _(() => !!(t.value.alwaysVisible.length || t.value.filters.length)), o = _(() => s.value ? void 0 : "display: none;");
  return {
    hasFilters: i,
    styleHide: o,
    updateVisibleChildFilters: r
  };
}
const q1 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-clockwise" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2z"/>
  <path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466"/>
</svg>`, $1 = {
  name: "AFilterCenter",
  props: {
    appliedModel: {
      type: Object,
      required: !0
    },
    closeAllFilters: {
      type: Function,
      required: !0
    },
    closeFilterValue: {
      type: Function,
      required: !0
    },
    dataKeyByKeyIdPerFilter: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    filtersGroup: {
      type: Object,
      required: !0,
      default: () => ({
        alwaysVisible: [],
        filters: []
      })
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    filtersVisibleAll: {
      type: Array,
      required: !0
    },
    id: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      hasFilters: t,
      styleHide: n,
      updateVisibleChildFilters: r
    } = M1(e), {
      isLeastOneChildFilterLoading: s,
      updateLoadingChildFilters: i
    } = F1();
    return {
      hasFilters: t,
      isLeastOneChildFilterLoading: s,
      styleHide: n,
      updateLoadingChildFilters: i,
      updateVisibleChildFilters: r
    };
  },
  render() {
    return this.hasFilters ? c("div", {
      class: "a_filters_center"
    }, [
      c("div", {
        class: "a_filters_center__item"
      }, [
        this.$slots.filtersHorizontal ? this.$slots.filtersHorizontal() : ""
      ]),
      this.filtersVisibleAll.map((e) => c(x1, {
        key: e.id,
        id: this.id,
        disabled: this.disabled,
        filter: e,
        closeFilterValue: this.closeFilterValue,
        dataKeyByKeyIdPerFilter: this.dataKeyByKeyIdPerFilter,
        model: this.appliedModel[e.id],
        onUpdateVisibleChildFilters: this.updateVisibleChildFilters,
        onUpdateLoadingChildFilters: this.updateLoadingChildFilters
      }, this.$slots)),
      this.isLeastOneChildFilterLoading ? c("div", {
        style: this.styleHide,
        class: "a_filters_center__item"
      }, [
        c(hl, {
          class: "a_spinner_small"
        })
      ]) : "",
      c("div", {
        class: "a_filters_center__item",
        style: this.styleHide
      }, [
        c(ft, {
          class: "a_btn a_btn_link a_btn_small",
          iconLeft: q1,
          text: "_A_FILTERS_DESELECT_ALL_",
          onClick: this.closeAllFilters
        })
      ])
    ]) : null;
  }
};
function k1(e, {
  model: t = B({})
}) {
  const n = d(e, "filtersSaved"), r = _(() => {
    const u = {};
    return z(n.value, (h) => {
      u[h.label] = !0;
    }), u;
  }), s = _(() => r.value[t.value.name]), i = _(() => {
    if (s.value)
      return "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_";
  });
  return {
    dataForm: _(() => [
      {
        id: "name",
        label: "_A_FILTERS_SAVE_LABEL_NAME_",
        type: "text",
        required: !0,
        extra: {
          name: t.value.name || ""
        },
        helpText: i.value
      }
    ]),
    isUpdate: s
  };
}
function U1(e) {
  const t = d(e, "isModelFilterSavedNew"), n = d(e, "modelFiltersSaved"), r = B({});
  return {
    initModel: () => {
      n.value && !t.value && (r.value = {
        name: n.value
      });
    },
    model: r,
    updateModel: (o) => {
      r.value = o;
    }
  };
}
let fm = 5e3;
const su = B({}), H1 = _(() => Tc(su.value));
let kE = 0;
function Cu() {
  return {
    addNotification: W1,
    removeNotification: hm,
    notifications: H1,
    setNotificationTimeout: V1
  };
}
function V1(e) {
  fm = e;
}
function W1({ text: e, type: t = "success", timeout: n, extra: r, useValuesFromObject: s = !0 }) {
  const i = ae(n) ? fm : n, o = kE, u = t === "error" ? "danger" : t;
  let h = e;
  nt(e) && s && (h = HP(e)), su.value[o] = {
    text: h,
    type: u,
    index: o,
    extra: r
  }, kE++, i && setTimeout(() => {
    hm(o);
  }, i);
}
function hm(e) {
  su.value[e] && delete su.value[e];
}
function G1(e, { emit: t }, {
  isUpdate: n = _(() => !1),
  model: r = B({})
}) {
  const s = d(e, "changeModelFiltersSaved"), i = d(e, "updateFiltersSaved"), o = B(void 0), {
    addNotification: u
  } = Cu(), h = _(() => !r.value.name), A = () => {
    t("close");
  };
  return {
    close: A,
    disabledBtnSave: h,
    loading: o,
    save: async () => {
      o.value = !0;
      const p = n.value;
      try {
        await i.value({
          action: p ? "update" : "create",
          label: r.value.name
        });
      } catch {
        u({
          text: "_A_FILTERS_SAVE_MSG_ERROR_",
          type: "danger"
        }), o.value = !1;
        return;
      }
      u({
        text: p ? "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_" : "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
        extra: {
          name: r.value.name
        }
      }), s.value({ model: r.value.name, isCreateOrEdit: !0 }), A(), o.value = !1;
    }
  };
}
const K1 = {
  name: "AFiltersSaveModal",
  props: {
    changeModelFiltersSaved: {
      type: Function,
      required: !0
    },
    filtersSaved: {
      type: Array,
      required: !0
    },
    isModelFilterSavedNew: {
      type: Boolean,
      required: !0
    },
    modelFiltersSaved: {
      type: String,
      required: !1,
      default: void 0
    },
    selectorCloseIds: {
      type: String,
      required: !0
    },
    updateFiltersSaved: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      initModel: n,
      model: r,
      updateModel: s
    } = U1(e), {
      dataForm: i,
      isUpdate: o
    } = k1(e, {
      model: r
    }), {
      close: u,
      disabledBtnSave: h,
      loading: A,
      save: E
    } = G1(e, t, {
      isUpdate: o,
      model: r
    });
    return n(), {
      close: u,
      dataForm: i,
      disabledBtnSave: h,
      initModel: n,
      loading: A,
      model: r,
      save: E,
      updateModel: s
    };
  },
  render() {
    return c(K$, {
      close: this.close,
      dataForm: this.dataForm,
      disabledSave: this.disabledBtnSave,
      headerText: "_A_FILTERS_SAVE_MODAL_HEADER_",
      modelValue: this.model,
      idPrefix: "modal_filter_top_",
      loading: this.loading,
      selectorCloseIds: this.selectorCloseIds,
      size: "large",
      save: this.save,
      stop: !0,
      zIndex: 1901,
      backdropZIndex: 1900,
      "onUpdate:modelValue": this.updateModel
    }, {
      modalBodyPrepend: () => [
        c(gc, {
          type: "info",
          isVisible: !0,
          safeHtml: "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_"
        })
      ]
    });
  }
};
function j1(e) {
  const t = d(e, "filtersGroup"), n = B(void 0), r = _(() => !!(t.value.alwaysVisible.length || t.value.filters.length));
  return {
    closeDropdown: () => {
      var o;
      (o = n.value) == null || o.onClose({ trigger: "click" });
    },
    dropdownRef: n,
    isDropdownVisible: r,
    openDropdown: (o) => {
      var u;
      (u = n.value) == null || u.onOpen({ trigger: "click", selectorToFocus: o });
    }
  };
}
function z1(e, {
  openDropdown: t = () => {
  }
}) {
  const n = d(e, "id");
  let r;
  return {
    destroyEventBus: () => {
      Ct.$off(r, t);
    },
    initEventBus: () => {
      Ct.$on(r, t);
    },
    initEventName: () => {
      r = `eventATableFilterTopOnOpen_${n.value}`;
    }
  };
}
function Y1(e, { emit: t }) {
  const n = d(e, "filtersGroup"), r = d(e, "filtersVisible"), s = ({ isAdd: E, filterId: p, filter: T }) => {
    t("toggleFiltersVisible", { isAdd: E, filterId: p, filter: T });
  }, i = ({ model: E }) => {
    s({ isAdd: !0, filterId: E });
  }, o = ({ filter: E }) => {
    s({ isAdd: !1, filterId: E.id, filter: E });
  }, u = _(() => !!(n.value.filters && n.value.filters.length)), h = _(() => {
    const E = {};
    return z(r.value, (p) => {
      E[p.id] = !0;
    }), E;
  }), A = _(() => u.value ? Rt(n.value.filters, (E) => !h.value[E.id]) : []);
  return {
    addFiltersVisible: i,
    deleteFiltersVisible: o,
    filtersHidden: A,
    hasFiltersHiddenDefault: u
  };
}
function X1(e, {
  openDropdown: t = () => ({})
}) {
  const n = d(e, "filtersSaved"), r = d(e, "id"), s = d(e, "onUpdateModelFilters"), i = "_A_FILTERS_HOR_FILTER_NEW_", o = B(void 0), u = B(void 0), h = B(void 0), A = _(() => `${r.value}btn_save_`), E = _(() => u.value === i), p = _(() => {
    const v = [{
      label: i
    }];
    return z(pe(n.value), (I) => {
      I.group = "_A_FILTERS_FILTER_SAVED_GROUP_MY_", v.push(I);
    }), v;
  });
  return {
    buttonSaveComponentId: A,
    changeModelFiltersSaved: ({ model: v, item: I, isDelete: R, isCreateOrEdit: g }) => {
      if (g) {
        u.value = v;
        return;
      }
      if ((I == null ? void 0 : I.label) === i || R) {
        s.value({
          model: {},
          isUpdateFiltersVisible: !0
        }), u.value = i;
        return;
      }
      v ? (u.value = v, I && (s.value({
        model: I.data || {},
        isUpdateFiltersVisible: !0
      }), t())) : I && (s.value({
        model: I.data || {},
        isUpdateFiltersVisible: !0
      }), t());
    },
    closeModalSave: () => {
      o.value = !1;
    },
    filtersSavedLocal: p,
    initModelFiltersSaved: () => {
      u.value = i;
    },
    isModalSaveVisible: o,
    isModelFilterSavedNew: E,
    modelFiltersSaved: u,
    openModalSave: () => {
      h.value = A.value, o.value = !0;
    },
    selectorCloseIds: h
  };
}
const Ad = B(!0), Yi = B({});
function Zc() {
  const e = (r = {}) => {
    z(r, (s, i) => {
      Yi.value[i] = s;
    });
  };
  return {
    changeConfirmOptions: e,
    closeConfirm: (r) => {
      r && Fe(Yi.value.close) && Yi.value.close(), Ad.value = !0, setTimeout(() => {
        Yi.value = {};
      });
    },
    confirmOptions: Yi,
    isModalHidden: Ad,
    openConfirm: (r = {}) => {
      e(r), Ad.value = !1;
    }
  };
}
function Z1(e, {
  changeModelFiltersSaved: t = () => {
  },
  idFilterTop: n = _(() => ""),
  isModelFilterSavedNew: r = _(() => !1),
  modelFiltersSaved: s = B(void 0)
}) {
  const i = d(e, "id"), o = d(e, "updateFiltersSaved"), {
    changeConfirmOptions: u,
    closeConfirm: h,
    isModalHidden: A,
    openConfirm: E
  } = Zc(), {
    addNotification: p
  } = Cu(), T = _(() => `${i.value}btn_save`), S = _(() => r.value ? "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_" : {
    mobile: "_A_FILTERS_DELETE_FILTER_SAVED_BTN_"
  }), b = _(() => r.value ? "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_" : "_A_FILTERS_DELETE_FILTER_SAVED_BTN_"), L = async () => {
    u({
      loading: !0
    });
    try {
      await o.value({
        action: "delete",
        label: s.value
      });
    } catch {
      p({
        text: "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
        type: "danger",
        extra: {
          name: s.value
        }
      }), u({
        loading: !1
      });
      return;
    }
    p({
      text: "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
      extra: {
        name: s.value
      }
    }), u({
      loading: !1
    }), h(), t({ model: void 0, isDelete: !0 });
  };
  return {
    buttonDeleteId: T,
    isConfirmHidden: A,
    openDeleteConfirm: () => {
      E({
        headerText: "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
        bodyHtml: "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
        extra: {
          name: s.value
        },
        save: L,
        selectorCloseIds: [T.value, n.value],
        saveButtonText: "_A_FILTERS_DELETE_FILTER_BTN_DELETE_",
        stop: !0,
        zIndex: 1901,
        backdropZIndex: 1900
      });
    },
    textScreenreaderButtonDeleteFiltersSaved: b,
    titleButtonDeleteFiltersSaved: S
  };
}
function J1(e) {
  const t = d(e, "filtersGroup"), n = d(e, "filtersVisible"), r = d(e, "updateDataKeyByIdFromFilter"), s = "a_column a_column_12_touch a_column_3_fullhd a_column_3_widescreen a_column_3_desktop", i = "a_columns a_columns_count_12 a_columns_gap_x_2 a_columns_gap_y_2 a_columns_gap_y_1_touch", o = "a_filters__form_element a_column a_column_12_touch a_column_9_fullhd a_column_9_widescreen a_column_9_desktop", u = ["select", "multiselect", "radio", "checkbox", "group", "fieldset"], h = ({ dataKeyByKeyId: E, item: p, filter: T }) => {
    let S = T.id;
    p && (S = p.id), r.value({
      filterId: S,
      dataKeyByKeyId: E
    });
  };
  return {
    dataForForm: _(() => {
      const E = [];
      return z(t.value.alwaysVisible, (p) => {
        const T = pe(p);
        T.labelClass = s, T.classColumn = o, u.indexOf(p.type) !== -1 && (T.onUpdateData = ({ dataKeyByKeyId: S, item: b }) => h({ dataKeyByKeyId: S, item: b, filter: p })), E.push({
          type: "group",
          id: `group_${p.id}`,
          classColumns: i,
          children: [
            T
          ]
        });
      }), z(n.value, (p) => {
        const T = pe(p);
        T.labelClass = s, T.classColumn = `${o}  a_d_flex a_align_items_center`, T.slotAppend = "groupAppend", T.class = "a_width_100", u.indexOf(p.type) !== -1 && (T.onUpdateData = ({ dataKeyByKeyId: S, item: b }) => h({ dataKeyByKeyId: S, item: b, filter: p })), E.push({
          type: "group",
          id: `group_${p.id}`,
          classColumns: i,
          children: [
            T
          ]
        });
      }), E;
    })
  };
}
function Q1(e) {
  const t = d(e, "id");
  return {
    idFilterTop: _(() => `${t.value}_filter_top`)
  };
}
function eq(e, { emit: t }, {
  closeDropdown: n = () => {
  }
}) {
  const r = d(e, "disabled");
  return {
    onSearch: () => {
      r.value || (n(), t("startSearch"));
    }
  };
}
const tq = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-filter" viewBox="0 0 16 16">
  <path d="M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5"/>
</svg>`, nq = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-floppy2-fill" viewBox="0 0 16 16">
  <path d="M12 2h-2v3h2z"/>
  <path d="M1.5 0A1.5 1.5 0 0 0 0 1.5v13A1.5 1.5 0 0 0 1.5 16h13a1.5 1.5 0 0 0 1.5-1.5V2.914a1.5 1.5 0 0 0-.44-1.06L14.147.439A1.5 1.5 0 0 0 13.086 0zM4 6a1 1 0 0 1-1-1V1h10v4a1 1 0 0 1-1 1zM3 9h10a1 1 0 0 1 1 1v5H2v-5a1 1 0 0 1 1-1"/>
</svg>`, Am = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2"/>
</svg>`, Em = `<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 1024 1024">
    <path d="M761.37 637.327l256.642 256.642q5.988 6.844 5.988 15.399t-5.988 15.399l-93.246 93.246q-6.844 5.988-15.399 5.988t-15.399-5.988l-256.642-256.642q-101.802 66.727-223.278 66.727-171.095 0-292.572-121.477t-121.477-292.572 121.477-292.572 292.572-121.477 292.572 121.477 121.477 292.572q0 121.477-66.727 223.278zM130.887 414.049q0 116.344 82.981 199.325t200.181 82.981 199.753-82.553 82.553-199.753-82.553-199.753-199.753-82.553-200.181 82.981-82.981 199.325z"></path>
</svg>
`, rq = {
  name: "AFiltersHorizontal",
  props: {
    canSave: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersGroup: {
      type: Object,
      required: !0,
      default: () => ({
        alwaysVisible: [],
        filters: []
      })
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    filtersSaved: {
      type: Array,
      required: !0
    },
    filtersVisible: {
      type: Array,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    mainModel: {
      type: Object,
      required: !1
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    unappliedModel: {
      type: Object,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    },
    updateFiltersSaved: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch",
    "toggleFiltersVisible"
  ],
  setup(e, t) {
    const {
      dataForForm: n
    } = J1(e), {
      closeDropdown: r,
      dropdownRef: s,
      isDropdownVisible: i,
      openDropdown: o
    } = j1(e), {
      idFilterTop: u
    } = Q1(e), {
      onSearch: h
    } = eq(e, t, {
      closeDropdown: r
    }), {
      destroyEventBus: A,
      initEventBus: E,
      initEventName: p
    } = z1(e, {
      openDropdown: o
    }), {
      addFiltersVisible: T,
      deleteFiltersVisible: S,
      filtersHidden: b,
      hasFiltersHiddenDefault: L
    } = Y1(e, t), {
      buttonSaveComponentId: v,
      changeModelFiltersSaved: I,
      closeModalSave: R,
      filtersSavedLocal: g,
      initModelFiltersSaved: D,
      isModalSaveVisible: w,
      isModelFilterSavedNew: M,
      modelFiltersSaved: P,
      openModalSave: F,
      selectorCloseIds: C
    } = X1(e, {
      openDropdown: o
    }), {
      buttonDeleteId: $,
      isConfirmHidden: H,
      openDeleteConfirm: j,
      textScreenreaderButtonDeleteFiltersSaved: le,
      titleButtonDeleteFiltersSaved: ee
    } = Z1(e, {
      changeModelFiltersSaved: I,
      idFilterTop: u,
      isModelFilterSavedNew: M,
      modelFiltersSaved: P
    });
    return p(), D(), E(), Dt(() => {
      A();
    }), {
      addFiltersVisible: T,
      buttonDeleteId: $,
      buttonSaveComponentId: v,
      changeModelFiltersSaved: I,
      closeDropdown: r,
      closeModalSave: R,
      dataForForm: n,
      deleteFiltersVisible: S,
      dropdownRef: s,
      filtersHidden: b,
      filtersSavedLocal: g,
      hasFiltersHiddenDefault: L,
      idFilterTop: u,
      initModelFiltersSaved: D,
      isConfirmHidden: H,
      isDropdownVisible: i,
      isModalSaveVisible: w,
      isModelFilterSavedNew: M,
      modelFiltersSaved: P,
      onSearch: h,
      openDeleteConfirm: j,
      openModalSave: F,
      selectorCloseIds: C,
      textScreenreaderButtonDeleteFiltersSaved: le,
      titleButtonDeleteFiltersSaved: ee
    };
  },
  render() {
    return this.isDropdownVisible ? [
      c(ia, {
        ref: "dropdownRef",
        buttonIconLeft: tq,
        buttonText: "Filter",
        buttonClass: "a_btn a_btn_primary a_btn_small a_filter_horizontal__btn_dropdown",
        dropdownTag: "div",
        dropdownClass: "a_filter_horizontal__wrapper",
        dropdownRenderDefault: !0,
        isCloseByClickInside: !1,
        hasCaret: !1,
        inBody: !0,
        lockArrowsNavigation: !1,
        lockTabNavigation: !1,
        useEscape: !this.isModalSaveVisible && this.isConfirmHidden
      }, {
        ...this.$slots,
        dropdown: () => c("div", {
          class: "a_filter_horizontal"
        }, [
          c("div", {
            class: "a_filter_horizontal__header__wrapper"
          }, [
            c("div", {
              class: "a_filter_horizontal__header"
            }, [
              c("div", {
                class: "a_filter_horizontal__header__texts"
              }, [
                c(Ae, {
                  class: "a_filter_horizontal__header__texts__filter",
                  tag: "span",
                  text: "_A_FILTERS_HOR_FILTER_HEADER_"
                }),
                this.isModelFilterSavedNew ? c(Ae, {
                  class: "a_filter_horizontal__header__texts__new",
                  tag: "em",
                  text: this.modelFiltersSaved
                }) : c("span", {}, this.modelFiltersSaved)
              ]),
              this.canSave ? c(fl, {
                modelValue: this.modelFiltersSaved,
                change: this.changeModelFiltersSaved,
                class: "a_filters_top__save_select",
                data: this.filtersSavedLocal,
                deselectable: !1,
                keyId: "label",
                keyLabel: "label",
                keyGroup: "group",
                label: "_A_FILTERS_SAVE_SELECT_",
                menuWidthType: "by_content",
                search: !0,
                translateData: !0,
                type: "select"
              }) : ""
            ])
          ]),
          c("div", {
            class: "a_filter_horizontal__body__wrapper"
          }, [
            c("div", {
              class: "a_filter_horizontal__body"
            }, [
              c(Nu, {
                idPrefix: this.idFilterTop,
                class: "a_filter_horizontal__body__form",
                classColumnDefault: "",
                classColumns: "",
                data: this.dataForForm,
                excludeRenderAttributes: this.excludeRenderAttributes,
                modelValue: this.unappliedModel,
                showErrors: !1,
                onChange: this.onUpdateModelFilters
              }, {
                ...this.$slots,
                groupAppend: ({ item: e }) => c(be, {
                  type: "button",
                  class: "a_btn a_btn_primary a_ml_2",
                  title: "_A_FILTERS_TOP_CLOSE_",
                  textScreenReader: "_A_FILTERS_TOP_CLOSE_",
                  iconLeft: ha,
                  stop: !0,
                  onClick: () => this.deleteFiltersVisible({ filter: e })
                }),
                formDataAppend: () => c("div", {
                  class: "a_filter_horizontal__add_filter__wrapper"
                }, [
                  c(fl, {
                    buttonClassDefault: "a_btn a_btn_primary a_filter_horizontal__add_filter",
                    change: this.addFiltersVisible,
                    data: this.filtersHidden,
                    hasCaret: !1,
                    disabled: !this.filtersHidden.length,
                    isLabelFloat: !1,
                    keyGroup: "group",
                    keyId: "id",
                    keyLabel: "label",
                    label: "_A_FILTERS_ADD_FILTER_",
                    labelClass: "a_sr_only",
                    menuWidthType: "by_content",
                    sortOrderGroup: "asc",
                    placement: "bottom-start",
                    search: !0,
                    translateData: !0,
                    type: "select"
                  }, {
                    fixedPlaceholder: () => [
                      c(Ae, {
                        tag: "span",
                        ariaHidden: !0,
                        class: "a_position_absolute_all",
                        title: "_A_FILTERS_ADD_FILTER_"
                      }),
                      c(ut, {
                        icon: Am
                      })
                    ]
                  })
                ]),
                formAppend: () => this.canSave ? c("div", {
                  class: "a_filter_horizontal__save_actions"
                }, [
                  c(be, {
                    id: this.buttonSaveComponentId,
                    class: "a_btn a_btn_primary",
                    iconLeft: nq,
                    type: "button",
                    text: "_A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_",
                    onClick: this.openModalSave
                  }),
                  c(be, {
                    id: this.buttonDeleteId,
                    ariaDisabled: this.isModelFilterSavedNew,
                    class: "a_btn a_btn_secondary",
                    iconLeft: am,
                    text: {
                      desktop: "_A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_"
                    },
                    textAriaHidden: !0,
                    textScreenReader: this.textScreenreaderButtonDeleteFiltersSaved,
                    title: this.titleButtonDeleteFiltersSaved,
                    type: "button",
                    onClick: this.openDeleteConfirm
                  })
                ]) : ""
              })
            ]),
            c("div", {
              class: "a_filter_horizontal__footer"
            }, [
              c("div", {
                class: "a_filter_horizontal__footer__actions"
              }, [
                c(be, {
                  type: "button",
                  class: "a_btn a_btn_primary a_text_nowrap a_filter_horizontal__footer__actions__btn_search",
                  iconLeft: Em,
                  text: "_A_FILTERS_START_SEARCH_",
                  disabled: this.disabled,
                  onClick: this.onSearch
                }),
                c(be, {
                  type: "button",
                  class: "a_btn a_btn_secondary a_text_nowrap a_filter_horizontal__footer__actions__btn_close",
                  text: "_A_FILTERS_HOR_CLOSE_DROPDOWN_",
                  onClick: this.closeDropdown
                })
              ])
            ])
          ])
        ])
      }),
      this.isModalSaveVisible ? c(K1, {
        changeModelFiltersSaved: this.changeModelFiltersSaved,
        filtersSaved: this.filtersSaved,
        isModelFilterSavedNew: this.isModelFilterSavedNew,
        modelFiltersSaved: this.modelFiltersSaved,
        selectorCloseIds: this.selectorCloseIds,
        updateFiltersSaved: this.updateFiltersSaved,
        onClose: this.closeModalSave
      }) : ""
    ] : null;
  }
};
function aq(e) {
  const t = d(e, "id");
  return {
    idFilterTop: _(() => `${t.value}_filter_main`)
  };
}
function sq(e) {
  const t = d(e, "filterMain"), n = _(() => !!t.value), r = _(() => n.value ? [
    t.value
  ] : []);
  return {
    hasFilterMain: n,
    dataMainFilter: r
  };
}
function iq(e, { emit: t }) {
  const n = d(e, "disabled");
  return {
    onSearch: () => {
      n.value || t("startSearch");
    }
  };
}
const lq = {
  name: "AFiltersMain",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filterMain: {
      type: Object,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    mainModel: {
      type: Object,
      required: !1
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    },
    updateMainModel: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch"
  ],
  setup(e, t) {
    const {
      hasFilterMain: n,
      dataMainFilter: r
    } = sq(e), {
      idFilterTop: s
    } = aq(e), {
      onSearch: i
    } = iq(e, t);
    return {
      hasFilterMain: n,
      dataMainFilter: r,
      idFilterTop: s,
      onSearch: i
    };
  },
  render() {
    return this.hasFilterMain ? c("div", {
      id: this.idFilterTop,
      class: "a_filters_top"
    }, [
      c(Nu, {
        idPrefix: this.idFilterTop,
        class: "a_filters_top__form",
        classColumns: "a_filters_top__main_wrapper",
        classColumnDefault: "a_filters_top__main",
        data: this.dataMainFilter,
        excludeRenderAttributes: this.excludeRenderAttributes,
        modelValue: this.mainModel,
        showErrors: !1,
        onChange: this.updateMainModel
      }, {
        formDataAppend: () => c(ft, {
          class: "a_btn a_btn_primary a_text_nowrap a_filters_top__search",
          iconLeft: gl,
          type: "submit",
          text: {
            desktop: "_A_FILTERS_START_SEARCH_"
          },
          textScreenReader: {
            mobile: "_A_FILTERS_START_SEARCH_"
          },
          prevent: !0,
          stop: !0,
          disabled: this.disabled,
          onClick: this.onSearch
        })
      })
    ]) : null;
  }
};
function oq(e, { emit: t }, {
  filtersHorizontalRef: n = B(void 0),
  filtersVisibleAll: r = _(() => []),
  onUpdateModelFilters: s = () => {
  }
}) {
  const i = d(e, "appliedModel"), o = d(e, "unappliedModel"), u = () => {
    var p;
    (p = n.value) == null || p.initModelFiltersSaved();
  }, h = ({ filter: p, keyId: T, modelArray: S, appliedModelLocal: b, unappliedModelLocal: L }) => {
    const v = p.id;
    return zc.value[p.type] ? (b[v] && b[v].length && (S ? b[v] = Rt(b[v], (I) => S.indexOf(I) === -1) : b[v] = []), L[v] && L[v].length && (S ? L[v] = Rt(L[v], (I) => S.indexOf(I) === -1) : L[v] = [])) : tm.value[p.type] && T ? (nt(L == null ? void 0 : L[v]) && (L[v][T] = void 0), nt(b == null ? void 0 : b[v]) && (b[v][T] = void 0)) : (L[v] = void 0, b[v] = void 0), {
      appliedModelLocal: b,
      unappliedModelLocal: L
    };
  };
  return {
    closeAllFilters: () => {
      let p = pe(i.value), T = pe(o.value);
      z(r.value, (S) => {
        const b = h({
          filter: S,
          appliedModelLocal: p,
          unappliedModelLocal: T
        });
        p = b.appliedModelLocal, T = b.unappliedModelLocal;
      }), u(), t("update:unappliedModel", T), t("update:appliedModel", p), setTimeout(() => {
        s({ model: i.value });
      });
    },
    closeFilterValue: ({ filter: p, keyId: T, modelArray: S }) => {
      const b = pe(i.value), L = pe(o.value), {
        appliedModelLocal: v,
        unappliedModelLocal: I
      } = h({
        filter: p,
        keyId: T,
        modelArray: S,
        appliedModelLocal: b,
        unappliedModelLocal: L
      });
      t("update:unappliedModel", I), t("update:appliedModel", v), setTimeout(() => {
        s({ model: i.value });
      });
    }
  };
}
function uq() {
  const e = B({});
  return {
    dataKeyByKeyIdPerFilter: e,
    updateDataKeyByIdFromFilter: ({ dataKeyByKeyId: n, filterId: r }) => {
      e.value[r] = pe(n);
    }
  };
}
function _q(e) {
  const t = d(e, "excludeRenderAttributes"), n = [
    "alwaysVisible"
  ];
  return {
    excludeRenderAttributesComputed: _(() => fP(n, t.value))
  };
}
function dq({ filter: e = {}, modelObj: t = {} }) {
  var r;
  const n = e.id;
  return n in t ? zc.value[e.type] ? !!((r = t[n]) != null && r.length) : tm.value[e.type] ? !!(t[n] && !hn(t[n])) : !0 : !1;
}
function cq(e, { emit: t }) {
  const n = d(e, "filters"), r = d(e, "filterMain"), s = d(e, "unappliedModel"), i = B({}), o = B(void 0), u = B([]), h = _(() => !!(n.value.length || r.value)), A = _(() => {
    const I = {};
    return z(pe(n.value), (R) => {
      I[R.id] = R, pi.value[R.type] && R.children && R.children.length && z(R.children, (g) => {
        I[g.id] = g;
      });
    }), I;
  }), E = _(() => {
    const I = {
      alwaysVisible: [],
      filters: []
    };
    return z(pe(n.value), (R) => {
      R.alwaysVisible ? I.alwaysVisible.push(R) : I.filters.push(R);
    }), I;
  }), p = _(() => {
    const I = [];
    return z(u.value, (R) => {
      A.value[R] && I.push(A.value[R]);
    }), I;
  }), T = _(() => {
    const I = [];
    I.push(...n.value);
    const R = [];
    return z(I, (g) => {
      R.push(g), pi.value[g.type] && g.children && g.children.length && z(g.children, (D) => {
        R.push(D);
      });
    }), R;
  }), S = () => {
    const I = [];
    z(E.value.filters, (R) => {
      dq({
        filter: R,
        modelObj: s.value
      }) && I.push(R.id);
    }), u.value = I;
  };
  return {
    filtersDataKeyById: i,
    filtersGroup: E,
    filtersHorizontalRef: o,
    filtersKeyById: A,
    filtersVisible: p,
    filtersVisibleAll: T,
    filtersVisibleIds: u,
    hasFilters: h,
    onUpdateModelFilters: ({ model: I, isUpdateFiltersVisible: R }) => {
      t("update:unappliedModel", I), R && setTimeout(() => {
        S();
      });
    },
    setFiltersVisibleIds: S,
    updateAppliedModel: ({ model: I }) => {
      t("update:appliedModel", I);
    },
    updateMainModel: ({ model: I }) => {
      t("update:mainModel", I);
    }
  };
}
function fq(e) {
  const t = d(e, "filtersSaved"), n = d(e, "unappliedModel"), r = d(e, "updateFiltersSaved"), s = B([]);
  return {
    filtersSavedLocal: s,
    initFiltersSaved: () => {
      s.value = t.value || [];
    },
    updateFiltersSavedLocal: ({ action: u = "", label: h = "" }) => {
      if (u === "create")
        s.value.push({
          label: h,
          data: pe(n.value)
        });
      else {
        const A = rT(s.value, ["label", h]);
        A !== -1 && (u === "delete" ? s.value.splice(A, 1) : u === "update" && s.value.splice(A, 1, {
          label: h,
          data: pe(n.value)
        }));
      }
      Fe(r.value) && r.value({
        action: u,
        label: h,
        model: n.value,
        filtersSaved: s.value
      });
    }
  };
}
function hq(e, { emit: t }, {
  onUpdateModelFilters: n = () => {
  }
}) {
  const r = d(e, "appliedModel"), s = d(e, "unappliedModel");
  return {
    startSearch: () => {
      t("update:appliedModel", s.value), setTimeout(() => {
        n({ model: r.value });
      });
    }
  };
}
function Aq(e, {
  dataKeyByKeyIdPerFilter: t = B({}),
  filtersVisibleIds: n = B([]),
  onUpdateModelFilters: r = () => {
  }
}) {
  const s = d(e, "unappliedModel");
  return {
    toggleFiltersVisible: ({ isAdd: o = !0, filterId: u, filter: h }) => {
      var A, E;
      if (o)
        n.value.push(u);
      else {
        const p = n.value.indexOf(u);
        p !== -1 && n.value.splice(p, 1);
        const T = pe(s.value);
        if (h && h.modelId) {
          const S = (A = t.value) == null ? void 0 : A[u];
          (E = T == null ? void 0 : T[h.modelId]) != null && E.length && S ? T[h.modelId] = Rt(T[h.modelId], (b) => !S[b]) : T[u] = void 0;
        } else
          T[u] = void 0;
        r({ model: T });
      }
    }
  };
}
const pde = {
  name: "AFilters",
  props: {
    appliedModel: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canSave: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filterMain: {
      type: Object,
      required: !1
    },
    filters: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersSaved: {
      type: Array,
      required: !1,
      default: () => []
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_filters_")
    },
    mainModel: {
      type: Object,
      required: !1
    },
    unappliedModel: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    updateFiltersSaved: {
      type: Function,
      required: !1,
      default: void 0
    },
    view: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => ["top", "right"].indexOf(e) !== -1
    },
    viewRightTeleportSelector: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "startSearch",
    "update:appliedModel",
    "update:mainModel",
    "update:unappliedModel"
  ],
  setup(e, t) {
    const n = d(e, "filtersSaved"), {
      filtersDataKeyById: r,
      filtersGroup: s,
      filtersHorizontalRef: i,
      filtersKeyById: o,
      filtersVisible: u,
      filtersVisibleAll: h,
      filtersVisibleIds: A,
      hasFilters: E,
      onUpdateModelFilters: p,
      setFiltersVisibleIds: T,
      updateAppliedModel: S,
      updateMainModel: b
    } = cq(e, t), {
      closeAllFilters: L,
      closeFilterValue: v
    } = oq(e, t, {
      filtersHorizontalRef: i,
      filtersVisibleAll: h,
      onUpdateModelFilters: p
    }), {
      dataKeyByKeyIdPerFilter: I,
      updateDataKeyByIdFromFilter: R
    } = uq(), {
      toggleFiltersVisible: g
    } = Aq(e, {
      dataKeyByKeyIdPerFilter: I,
      filtersVisibleIds: A,
      onUpdateModelFilters: p
    }), {
      startSearch: D
    } = hq(e, t, {
      onUpdateModelFilters: p
    }), {
      filtersSavedLocal: w,
      initFiltersSaved: M,
      updateFiltersSavedLocal: P
    } = fq(e), {
      excludeRenderAttributesComputed: F
    } = _q(e);
    return rt(n, () => {
      M();
    }, {
      deep: !0
    }), T(), M(), {
      closeAllFilters: L,
      closeFilterValue: v,
      dataKeyByKeyIdPerFilter: I,
      excludeRenderAttributesComputed: F,
      filtersDataKeyById: r,
      filtersGroup: s,
      filtersHorizontalRef: i,
      filtersKeyById: o,
      filtersSavedLocal: w,
      filtersVisible: u,
      filtersVisibleAll: h,
      filtersVisibleIds: A,
      hasFilters: E,
      onUpdateModelFilters: p,
      setFiltersVisibleIds: T,
      startSearch: D,
      toggleFiltersVisible: g,
      updateAppliedModel: S,
      updateDataKeyByIdFromFilter: R,
      updateFiltersSavedLocal: P,
      updateMainModel: b
    };
  },
  render() {
    if (this.hasFilters)
      return c(
        "div",
        [
          this.view === "top" && c(lq, {
            id: this.id,
            disabled: this.disabled,
            excludeRenderAttributes: this.excludeRenderAttributesComputed,
            filterMain: this.filterMain,
            mainModel: this.mainModel,
            updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
            updateMainModel: this.updateMainModel,
            onStartSearch: this.startSearch
          }, this.$slots),
          this.view === "right" && c(la, {
            to: this.viewRightTeleportSelector,
            disabled: !this.viewRightTeleportSelector
          }, [
            c(y1, {
              id: this.id,
              disabled: this.disabled,
              excludeRenderAttributes: this.excludeRenderAttributesComputed,
              filters: this.filters,
              filtersKeyById: this.filtersKeyById,
              appliedModel: this.appliedModel,
              onUpdateModelFilters: this.updateAppliedModel,
              updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
              onStartSearch: this.startSearch
            }, this.$slots)
          ]),
          c($1, {
            id: this.id,
            appliedModel: this.appliedModel,
            closeAllFilters: this.closeAllFilters,
            closeFilterValue: this.closeFilterValue,
            dataKeyByKeyIdPerFilter: this.dataKeyByKeyIdPerFilter,
            disabled: this.disabled,
            filtersGroup: this.filtersGroup,
            filtersKeyById: this.filtersKeyById,
            filtersVisibleAll: this.filtersVisibleAll
          }, {
            filtersHorizontal: () => this.view === "top" ? c(rq, {
              ref: "filtersHorizontalRef",
              id: this.id,
              canSave: this.canSave,
              disabled: this.disabled,
              excludeRenderAttributes: this.excludeRenderAttributesComputed,
              filtersGroup: this.filtersGroup,
              filtersKeyById: this.filtersKeyById,
              filtersSaved: this.filtersSavedLocal,
              filtersVisible: this.filtersVisible,
              onUpdateModelFilters: this.onUpdateModelFilters,
              unappliedModel: this.unappliedModel,
              updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
              updateFiltersSaved: this.updateFiltersSavedLocal,
              onStartSearch: this.startSearch,
              onToggleFiltersVisible: this.toggleFiltersVisible
            }, this.$slots) : "",
            ...this.$slots
          })
        ]
      );
  }
}, Eq = {
  name: "ARequired",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    text: {
      type: String,
      required: !1,
      default: "_A_REQUIRED_TEXT_"
    }
  },
  render() {
    return c(Ae, {
      alwaysTranslate: this.alwaysTranslate,
      class: "a_required",
      html: this.text
    });
  }
};
function pq(e) {
  const t = d(e, "isHide");
  return {
    styleFormHide: _(() => t.value ? "display: none;" : "")
  };
}
function Tq(e, { emit: t }) {
  const n = d(e, "modelValue"), r = _(() => n.value || {});
  return {
    modelValueLocal: r,
    onUpdateModelLocal: ({ currentModel: i, id: o, item: u, model: h, props: A, component: E }) => {
      const p = pe(r.value);
      Lc(p, o, pe(h)), t("update:modelValue", p), t("change", { currentModel: i, id: o, item: u, fullModel: p, model: h, props: A }), Fe(E.change) && E.change({ currentModel: i, id: o, item: u, fullModel: p, model: h, props: A });
    }
  };
}
function mq(e) {
  const t = d(e, "data"), n = d(e, "isRequired"), r = d(e, "readonly");
  return {
    isRequiredLocal: _(() => {
      if (r.value)
        return !1;
      if (n.value)
        return !0;
      let i = !1;
      return z(t.value, (o) => {
        if (o.required)
          return i = !0, !1;
      }), i;
    })
  };
}
const Nu = {
  name: "AForm",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12 a_columns_gap_2"
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_12"
    },
    data: {
      type: Array,
      required: !0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRequired: {
      type: Boolean,
      required: !1
    },
    modelValue: {
      type: Object,
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    showErrors: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tag: {
      type: String,
      required: !1,
      default: "form"
    },
    textRequired: {
      type: String,
      required: !1,
      default: void 0
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue",
    "change"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      modelValueLocal: r,
      onUpdateModelLocal: s
    } = Tq(e, t), {
      styleFormHide: i
    } = pq(e), {
      isRequiredLocal: o
    } = mq(e);
    return {
      attributesToExcludeFromRender: n,
      componentTypesMapping: () => ({
        ...Cl,
        ...Xc,
        ...Vn.components,
        ...Vn.containerComponents
      }),
      isRequiredLocal: o,
      modelValueLocal: r,
      onUpdateModelLocal: s,
      styleFormHide: i
    };
  },
  render() {
    return this.isRender ? c(this.tag, {
      class: "a_form",
      style: this.styleFormHide
    }, [
      this.$slots.formPrepend ? this.$slots.formPrepend() : "",
      this.isRequiredLocal ? c(Eq, {
        text: this.textRequired
      }) : "",
      this.$slots.formPrependAfterRequired ? this.$slots.formPrependAfterRequired() : "",
      this.showErrors ? c(K0, {
        alwaysTranslate: this.alwaysTranslate,
        errors: this.errors,
        closable: !1,
        optionsList: this.data,
        idPrefix: this.idPrefix,
        textErrorHeader: this.textErrorHeader
      }) : "",
      c("div", {
        class: this.classColumns
      }, [
        this.$slots.formDataPrepend ? this.$slots.formDataPrepend() : "",
        ...this.data.map((e, t) => {
          const n = pi.value[e.type];
          let r;
          ae(e.classColumn) ? r = this.classColumnDefault : e.classColumn && (r = e.classColumn);
          const s = this.componentTypesMapping()[e.type];
          return c(s, {
            key: t,
            alwaysTranslate: this.alwaysTranslate,
            modelValue: n ? this.modelValueLocal : fe(this.modelValueLocal, e.id),
            modelDependencies: n ? this.modelValueLocal : void 0,
            class: r,
            errors: this.errors[e.id],
            errorsAll: n ? this.errors : void 0,
            idPrefix: this.idPrefix,
            excludeRenderAttributes: this.excludeRenderAttributes,
            ...e,
            change: ({ currentModel: i, id: o, item: u, model: h, props: A }) => this.onUpdateModelLocal({
              currentModel: i,
              id: o,
              item: u,
              model: h,
              props: A,
              component: e
            }),
            readonly: this.readonly || e.readonly,
            readonlyDefault: "readonlyDefault" in e && !Ce(e.readonlyDefault) ? e.readonlyDefault : this.readonlyDefault,
            classColumn: void 0,
            ...this.attributesToExcludeFromRender
          }, this.$slots);
        }),
        this.$slots.formDataAppend ? this.$slots.formDataAppend() : ""
      ]),
      this.$slots.formAppend ? this.$slots.formAppend() : ""
    ]) : null;
  }
}, Tde = {
  name: "AFormElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      required: !1,
      default: void 0
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    type: {
      type: String,
      required: !0
    }
  },
  emits: [
    "update:modelValue"
  ],
  setup(e, { emit: t, slots: n }) {
    const r = d(e, "options"), s = d(e, "type"), i = () => ({
      ...Cl,
      ...Xc,
      ...Vn.components,
      ...Vn.containerComponents
    });
    return () => {
      const o = i()[s.value];
      return c(o, {
        ...e,
        ...r.value,
        "onUpdate:modelValue": (u) => t("update:modelValue", u)
      }, n);
    };
  }
};
function Sq({ emit: e }) {
  return {
    clearLocal: ({ $event: n }) => {
      n.stopPropagation(), n.preventDefault(), e("clear", n);
    }
  };
}
const Du = {
  name: "AFormElementBtnClear",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    class: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_transparent_dark a_btn_small"
    },
    icon: {
      type: String,
      required: !1,
      default: ha
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    title: {
      type: String,
      required: !1,
      default: "_REMOVE_FIELD_CONTENT_"
    },
    textScreenReader: {
      type: String,
      required: !1,
      default: "_REMOVE_FIELD_CONTENT_"
    },
    tabindex: {
      type: Number,
      required: !1,
      default: -1
    },
    iconClass: {
      type: String,
      required: !1,
      default: "a_form_element__btn_close__icon"
    }
  },
  emits: [
    "clear"
  ],
  setup(e, t) {
    const {
      clearLocal: n
    } = Sq(t);
    return {
      clearLocal: n
    };
  },
  render() {
    if (!this.disabled)
      return c(be, {
        class: [
          "a_form_control__actions__btn",
          this.class
        ],
        disabled: this.disabled,
        iconClass: this.iconClass,
        iconLeft: this.icon,
        onClick: this.clearLocal,
        tabindex: this.tabindex,
        textScreenReader: this.textScreenReader,
        title: this.title,
        type: "button"
      });
  }
};
function bq(e) {
  const t = d(e, "id"), n = d(e, "helpText"), r = d(e, "label"), s = d(e, "labelScreenReader"), i = de("isRangeProvide", !1), o = _(() => `${t.value}_label`), u = _(() => `${t.value}_help_text`), h = _(() => `${t.value}_value`), A = _(() => {
    if (!i.value && (r.value || s.value))
      return o.value;
  }), E = _(() => {
    if (!i.value)
      return !ae(n.value) && n.value !== "" ? `${h.value} ${u.value}` : `${h.value}`;
  }), p = _(() => {
    if (!i.value)
      return "group";
  });
  return {
    ariaDescribedby: E,
    ariaLabelledby: A,
    helpTextId: u,
    isRangeProvide: i,
    labelId: o,
    role: p,
    valueId: h
  };
}
function Lq(e) {
  const t = d(e, "modelValue"), n = d(e, "readonlyDefault");
  return {
    modelValueReadonly: _(() => ae(t.value) || t.value === "" ? n.value : t.value)
  };
}
const gn = {
  name: "AFormReadonly",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRange: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    type: {
      type: String,
      required: !1,
      default: void 0
    },
    valueClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    valueParentClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    valueTag: {
      type: String,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = d(e, "isRange"), {
      attributesToExcludeFromRender: n
    } = Bt(e), {
      ariaDescribedby: r,
      ariaLabelledby: s,
      helpTextId: i,
      labelId: o,
      role: u,
      valueId: h
    } = bq(e), {
      modelValueReadonly: A
    } = Lq(e);
    return et("isRangeProvide", t), {
      ariaDescribedby: r,
      ariaLabelledby: s,
      attributesToExcludeFromRender: n,
      helpTextId: i,
      labelId: o,
      modelValueReadonly: A,
      role: u,
      valueId: h
    };
  },
  render() {
    return c("div", {
      "aria-labelledby": this.ariaLabelledby,
      "aria-describedby": this.ariaDescribedby,
      class: "a_form_element_readonly",
      role: this.role,
      ...this.attributesToExcludeFromRender
    }, [
      this.label || this.labelScreenReader ? c(Mt, {
        id: this.id,
        alwaysTranslate: this.alwaysTranslate,
        extra: this.extra,
        isLabelFloat: !1,
        label: this.label,
        labelClass: this.labelClass,
        labelScreenReader: this.labelScreenReader,
        readonly: !0,
        required: !1,
        tag: "div",
        type: this.type
      }) : "",
      c("div", {
        id: this.valueId,
        class: [
          "a_form_element_readonly_value",
          this.valueParentClass
        ]
      }, [
        this.$slots.default ? this.$slots.default() : c(Ae, {
          class: this.valueClass,
          extra: this.extra,
          html: this.modelValueReadonly,
          tag: this.valueTag
        })
      ]),
      c(Zt, {
        id: this.helpTextId,
        alwaysTranslate: this.alwaysTranslate,
        html: this.helpText,
        extra: this.extra
      })
    ]);
  }
}, Hd = {
  name: "AGet",
  props: {
    keyLabel: {
      type: [String, Array],
      required: !0,
      info: "Weg zu Informationen. Z.B.('a[0].b.c', 'vertrag.antrag_obj.pk', ['vertrag', aloha, 'pk'])"
    },
    data: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Haupt-Objekt oder -Array, wo man sucht"
    },
    tag: {
      type: String,
      required: !1,
      default: "span",
      info: "Semantisch-relevanter HTML-Tag.(span, div, ...)"
    },
    defaultValue: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Standardwert, wenn Lodash-Funktion 'get' undefined zurückschickt"
    },
    filter: {
      type: String,
      required: !1,
      default: void 0
    },
    filterParameters: {
      type: [Object, String, Number, Boolean],
      required: !1,
      default: () => {
      }
    },
    replacedWithDefault: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Wenn das Wert, das Lodash-Funktion 'get' zurückschickt, === this.replacedWithDefault, dann this.defaultValue"
    }
  },
  setup() {
    return Wn();
  },
  computed: {
    valueLocal() {
      let e = fe(this.data, this.keyLabelLocal);
      if (ae(e) && (e = this.defaultValue), this.isValueEqualsWithValueThenDefaultValue(e))
        return this.defaultValue;
      if (this.filter) {
        const t = `filter${Mp(this.filter)}`;
        if (Fe(this[t]))
          return this[t](e, this.filterParameters);
        console.warn(`filter "${t}" ist not defined`);
      }
      return e;
    },
    keyLabelLocal() {
      return me(this.keyLabel) ? this.keyLabel.join(".") : this.keyLabel;
    }
  },
  methods: {
    isValueEqualsWithValueThenDefaultValue(e) {
      if (Ce(this.replacedWithDefault))
        return !1;
      let t = !1;
      return me(this.replacedWithDefault) ? z(this.replacedWithDefault, (n) => {
        if (n === e)
          return t = !0, !1;
      }) : this.replacedWithDefault === e && (t = !0), t;
    }
  },
  render() {
    return Ot(c(this.tag), [
      [Yt, this.valueLocal]
    ]);
  }
}, Bu = {
  name: "ALink",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    href: {
      type: String,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_link_")
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    target: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Rr.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => it(e) ? e === "auto" : fa(e)
    },
    to: {
      type: [Object, String],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      clickEmit: n
    } = vT(e, t);
    return {
      clickEmit: n
    };
  },
  render() {
    return c(be, {
      ...this.$attrs,
      ...this.$props,
      type: "link",
      onClick: this.clickEmit
    }, this.$slots);
  }
};
function vq(e) {
  const t = d(e, "isLast"), n = d(e, "hasDropdownActions"), r = d(e, "hasDividerBeforeDropdown"), s = _(() => t.value && n.value), i = _(() => s.value && !r.value);
  return {
    isDropdownActionsAfterGroup: _(() => s.value && r.value),
    isDropdownActionsInGroup: i
  };
}
const Iq = {
  name: "AGroupButtonDropdownItem",
  props: {
    actionsClasses: {
      type: Array,
      required: !0
    },
    actionsIds: {
      type: Array,
      required: !0
    },
    actionsDropdown: {
      type: Array,
      required: !0
    },
    btnGroupClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn_group"
    },
    data: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !0
    },
    hasDividerBeforeDropdown: {
      type: Boolean,
      required: !0
    },
    hasDropdownActions: {
      type: Boolean,
      required: !0
    },
    isLast: {
      type: Boolean,
      required: !0
    }
  },
  setup(e) {
    const {
      isDropdownActionsAfterGroup: t,
      isDropdownActionsInGroup: n
    } = vq(e);
    return {
      isDropdownActionsAfterGroup: t,
      isDropdownActionsInGroup: n
    };
  },
  render() {
    return [
      !!this.data.children.length && c("div", {
        class: this.btnGroupClass
      }, [
        ...this.data.children.map((e) => {
          let t = e.classButton ? e.classButton : this.actionsClasses[e.actionNotDividerIndex];
          e.classExtra && (t = qo({
            class1: t,
            class2: e.classExtra
          }));
          const n = e.id ? e.id : this.actionsIds[e.actionNotDividerIndex], r = this.disabled || e.disabled;
          if (e.type === "button")
            return c(ft, {
              ...e,
              id: n,
              class: t,
              classButton: void 0,
              classExtra: void 0,
              disabled: r,
              onClick: e.callback,
              callback: void 0,
              actionNotDividerIndex: void 0,
              isHidden: void 0,
              isConfirm: void 0,
              callbackLocal: void 0
            });
          if (e.type === "link")
            return c(Bu, {
              ...e,
              id: n,
              classButton: void 0,
              classExtra: void 0,
              disabled: r,
              class: t,
              actionNotDividerIndex: void 0,
              isHidden: void 0,
              type: void 0,
              isConfirm: void 0,
              callbackLocal: void 0
            });
          if (e.type === "template" && e.slotName && this.$slots[e.slotName])
            return this.$slots[e.slotName]({
              id: n,
              class: t,
              action: e
            });
        }),
        this.isDropdownActionsInGroup && c(ia, {
          isHideWithoutActionAndSlot: !0,
          actions: this.actionsDropdown,
          disabled: this.disabled,
          ...this.dropdownAttributes
        }, this.$slots)
      ]),
      this.isDropdownActionsAfterGroup && c(ia, {
        isHideWithoutActionAndSlot: !0,
        actions: this.actionsDropdown,
        disabled: this.disabled,
        ...this.dropdownAttributes
      }, this.$slots)
    ];
  }
};
function yq(e) {
  const t = d(e, "actions"), n = d(e, "indexFirstDropdownAction"), r = d(e, "indexFirstDropdownActionMobile"), s = d(e, "minDropdownActions"), {
    isMobileWidth: i
  } = En(), o = _(() => zT({
    actions: t.value
  })), u = _(() => {
    const S = pe(o.value);
    return z(S, (b) => {
      b.classButton = qo({
        class1: b.classButton,
        class2: b.class
      }), b.class = qo({
        class1: b.classDropdown,
        class2: b.class
      }), delete b.classDropdown, b.classExtra && (b.class = qo({
        class1: b.classExtra,
        class2: b.class
      }));
    }), S;
  }), h = _(() => i.value ? r.value : n.value), A = ({ actions: S = [], minCountActions: b = 0 }) => {
    let L = 0;
    return z(S, (v) => {
      if (L >= b)
        return !1;
      v.type !== "divider" && L++;
    }), L >= b;
  }, E = _(() => {
    const S = pe(u.value), b = {
      buttons: [],
      dropdown: []
    };
    let L = 0, v = !0;
    return z(S, (I, R) => {
      if (L === h.value) {
        const g = S.slice(R, S.length);
        if (A({
          actions: g,
          minCountActions: s.value
        }))
          return b.dropdown = S.splice(R, S.length), h.value === 0 && b.buttons.push({
            type: "group",
            children: []
          }), !1;
      }
      I.type !== "divider" ? (I.actionNotDividerIndex = L, L++, v ? b.buttons.push({
        type: "group",
        children: [I]
      }) : fi(b.buttons).children.push(I), v = !1) : v = !0;
    }), b;
  }), p = _(() => E.value.dropdown.length > 0), T = _(() => u.value.length > 0);
  return {
    actionsAllWithClassesFiltered: u,
    actionsGrouped: E,
    hasActionsAllFiltered: T,
    hasDropdownActions: p
  };
}
const Ca = B({
  propsDefault: {
    actionsClasses: ["a_btn a_btn_primary", "a_btn a_btn_secondary"],
    dropdownAttributes: {},
    hasDividerBeforeDropdown: !0,
    indexFirstDropdownAction: 1,
    indexFirstDropdownActionMobile: 0,
    minDropdownActions: 2,
    useActionClass: !0,
    useDropdownActionClass: !1
  }
}), mde = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Ca.value.propsDefault = {
      ...Ca.value.propsDefault,
      ...t
    };
  }
}, Vd = {
  name: "AGroupButtonDropdown",
  props: {
    actions: {
      type: Array,
      required: !1,
      default: () => []
    },
    actionsClasses: {
      type: Array,
      required: !1,
      default: () => Ca.value.propsDefault.actionsClasses
    },
    actionsIds: {
      type: Array,
      required: !1,
      default: () => []
    },
    btnGroupClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn_group"
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !1,
      default: () => Ca.value.propsDefault.dropdownAttributes
    },
    hasDividerBeforeDropdown: {
      type: Boolean,
      required: !1,
      default: () => Ca.value.propsDefault.hasDividerBeforeDropdown
    },
    indexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: () => Ca.value.propsDefault.indexFirstDropdownAction,
      validator: (e) => e >= -1
    },
    indexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: () => Ca.value.propsDefault.indexFirstDropdownActionMobile,
      validator: (e) => e >= -1
    },
    minDropdownActions: {
      type: Number,
      required: !1,
      default: () => Ca.value.propsDefault.minDropdownActions
    },
    innerFlagHasActions: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "update:innerFlagHasActions"
  ],
  setup(e, { emit: t }) {
    const {
      actionsAllWithClassesFiltered: n,
      actionsGrouped: r,
      hasActionsAllFiltered: s,
      hasDropdownActions: i
    } = yq(e);
    return rt(s, (o) => {
      t("update:innerFlagHasActions", o);
    }, {
      immediate: !0
    }), {
      actionsAllWithClassesFiltered: n,
      actionsGrouped: r,
      hasActionsAllFiltered: s,
      hasDropdownActions: i
    };
  },
  render() {
    if (this.hasActionsAllFiltered)
      return c("div", {
        class: "aloha_group_btn_dropdown"
      }, [
        ...this.actionsGrouped.buttons.map((e, t) => c(Iq, {
          btnGroupClass: this.btnGroupClass,
          data: e,
          disabled: this.disabled,
          actionsDropdown: this.actionsGrouped.dropdown,
          hasDropdownActions: this.hasDropdownActions,
          dropdownAttributes: this.dropdownAttributes,
          actionsClasses: this.actionsClasses,
          actionsIds: this.actionsIds,
          isLast: t === this.actionsGrouped.buttons.length - 1,
          hasDividerBeforeDropdown: this.hasDividerBeforeDropdown
        }, this.$slots))
      ]);
  }
};
function gq(e) {
  const t = d(e, "callback"), n = d(e, "disabled"), r = d(e, "rootMargin"), s = d(e, "threshold");
  let i = {};
  const o = B(void 0);
  let u;
  const h = () => {
    i = {
      rootMargin: r.value,
      threshold: s.value
    };
  }, A = () => {
    u = new IntersectionObserver((T) => {
      const [S] = T;
      S.isIntersecting && t.value();
    }, i);
  }, E = () => {
    n.value || u.observe(o.value);
  }, p = () => {
    u && u.disconnect();
  };
  return rt(n, (T) => {
    T === !0 ? E() : p();
  }), {
    disconnectObserver: p,
    sentinelRef: o,
    setIntersectionObserver: A,
    setObserverOptions: h,
    startObserver: E
  };
}
const Sde = {
  name: "AInfiniteScroll",
  props: {
    callback: {
      type: Function,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    rootMargin: {
      type: String,
      required: !1,
      default: "300px"
    },
    sentinelTag: {
      type: String,
      required: !1,
      default: "span"
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    threshold: {
      type: [Number, Array],
      required: !1,
      default: 0.5
    }
  },
  setup(e) {
    const {
      disconnectObserver: t,
      sentinelRef: n,
      setIntersectionObserver: r,
      setObserverOptions: s,
      startObserver: i
    } = gq(e);
    return Wr(() => {
      s(), r(), i();
    }), Dt(() => {
      t();
    }), {
      sentinelRef: n
    };
  },
  render() {
    return c(this.tag, {}, [
      this.$slots.default ? this.$slots.default() : null,
      c(this.sentinelTag, {
        ref: "sentinelRef",
        style: "height: 1px; display: block;",
        ariaHidden: !0
      })
    ]);
  }
};
function Rq(e) {
  const t = d(e, "textCopy"), n = B(void 0), {
    addNotification: r
  } = Cu();
  return {
    copyText: async () => {
      var o;
      let i = "";
      if (t.value ? i = t.value : (o = n.value) != null && o.$el && z(n.value.$el.children, (u) => {
        u.classList.contains("a_sr_only") || (i += u.textContent);
      }), i)
        try {
          await navigator.clipboard.writeText(i), r({
            text: "_A_LINK_COPY_COPIED_TO_CLIPBOARD_"
          });
        } catch (u) {
          console.error(u);
        }
    },
    linkRef: n
  };
}
const Oq = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-copy" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z"/>
</svg>`, bde = {
  name: "ALinkCopy",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    buttonOptions: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonPosition: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "a_btn_group"
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    linkOptions: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    textCopy: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup() {
    const {
      copyText: e,
      linkRef: t
    } = Rq();
    return {
      copyText: e,
      linkRef: t
    };
  },
  render() {
    var t, n;
    const e = c(ft, {
      alwaysTranslate: this.alwaysTranslate,
      class: "a_btn a_btn_secondary",
      disabled: this.disabled,
      iconLeft: Oq,
      textScreenReader: "_A_LINK_COPY_BTN_TITLE_",
      title: "_A_LINK_COPY_BTN_TITLE_",
      onClick: this.copyText,
      ...this.buttonOptions
    }, (t = this.$slots) == null ? void 0 : t.button);
    return c("div", {
      class: [
        this.classDefault,
        this.class
      ],
      role: "group"
    }, [
      this.buttonPosition === "left" && e,
      c(Bu, {
        ref: "linkRef",
        alwaysTranslate: this.alwaysTranslate,
        disabled: this.disabled,
        ...this.linkOptions
      }, (n = this.$slots) == null ? void 0 : n.link),
      this.buttonPosition === "right" && e
    ]);
  }
};
function Cq(e) {
  const t = d(e, "isDataSimpleArray"), n = d(e, "item"), r = d(e, "keyChildren"), s = _(() => Un(n.value)), i = _(() => {
    var u;
    return t.value ? (u = n.value) == null ? void 0 : u[1] : !r.value || !s.value ? [] : fe(n.value, r.value) || [];
  }), o = _(() => me(i.value) && i.value.length > 0);
  return {
    children: i,
    hasChildren: o
  };
}
function Nq(e) {
  const t = d(e, "isDataSimpleArray"), n = d(e, "item"), r = d(e, "itemIndex"), s = d(e, "keyLabel"), i = d(e, "keyLabelCallback");
  return {
    label: _(() => {
      var u;
      return t.value ? me(n.value) ? ((u = n.value) == null ? void 0 : u[0]) || "" : n.value : Fe(i.value) ? i.value({ item: n.value, itemIndex: r.value }) : s.value ? fe(n.value, s.value) : n.value;
    })
  };
}
const Dq = {
  name: "AListItem",
  props: {
    classItem: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    classMain: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    item: {
      type: [Object, String, Number, Array],
      required: !0
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !0
    },
    listItemTag: {
      type: String,
      required: !1,
      default: "li"
    },
    separator: {
      type: String,
      required: !1,
      default: void 0
    },
    separatorHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      children: t,
      hasChildren: n
    } = Cq(e), {
      label: r
    } = Nq(e);
    return {
      children: t,
      hasChildren: n,
      label: r
    };
  },
  render() {
    return c(this.listItemTag, {
      class: this.classItem
    }, [
      this.$slots.listItem ? this.$slots.listItem({
        item: this.item,
        itemIndex: this.itemIndex
      }) : Ot(c(this.labelTag), [
        [Yt, this.label]
      ]),
      this.separator ? c("span", {}, this.separator) : "",
      this.hasChildren ? c(Pq, {
        classItem: this.classItem,
        classMain: this.classMain,
        data: this.children,
        isDataSimpleArray: this.isDataSimpleArray,
        keyChildren: this.keyChildren,
        keyId: this.keyId,
        keyLabel: this.keyLabel,
        keyLabelCallback: this.keyLabelCallback,
        labelTag: this.labelTag,
        listItemTag: this.listItemTag,
        separator: this.separator,
        separatorHtml: this.separatorHtml,
        tag: this.tag
      }, this.$slots) : "",
      this.separatorHtml ? Ot(c("div"), [
        [Yt, this.separatorHtml]
      ]) : ""
    ]);
  }
};
function Bq(e) {
  const t = d(e, "data"), n = d(e, "isDataSimpleArray"), r = d(e, "keyChildren"), s = d(e, "keyLabel"), i = d(e, "keyLabelCallback"), o = d(e, "separator");
  return {
    plainText: _(() => tu(t.value, {
      isHtml: !1,
      keyLabel: s.value,
      keyLabelCallback: i.value,
      keyChildren: r.value,
      isSimpleArray: n.value,
      separator: o.value
    }))
  };
}
function wq(e) {
  const t = d(e, "tag"), n = d(e, "isHtml");
  return {
    tagLocal: _(() => !n.value && (t.value === "ul" || t.value === "ol") ? "span" : t.value)
  };
}
const Pq = {
  name: "AList",
  props: {
    classItem: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    classMain: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isHtml: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !1,
      default: "span"
    },
    listItemTag: {
      type: String,
      required: !1,
      default: "li"
    },
    separator: {
      type: String,
      required: !1,
      default: void 0
    },
    separatorHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "ul"
    }
  },
  setup(e) {
    const {
      tagLocal: t
    } = wq(e), {
      plainText: n
    } = Bq(e);
    return {
      plainText: n,
      tagLocal: t
    };
  },
  render() {
    return this.isHtml ? c(this.tag, {
      class: this.classMain
    }, [
      this.data.map((e, t) => {
        const n = this.keyId ? fe(e, this.keyId) : t;
        return c(Dq, {
          key: n,
          classItem: this.classItem,
          classMain: this.classMain,
          isDataSimpleArray: this.isDataSimpleArray,
          item: e,
          itemIndex: t,
          keyChildren: this.keyChildren,
          keyId: this.keyId,
          keyLabel: this.keyLabel,
          keyLabelCallback: this.keyLabelCallback,
          labelTag: this.labelTag,
          listItemTag: this.listItemTag,
          separator: this.separator,
          separatorHtml: this.separatorHtml,
          tag: this.tag
        }, this.$slots);
      })
    ]) : c(this.tagLocal, null, this.plainText);
  }
};
function xq(e) {
  const t = d(e, "size");
  return {
    classSize: _(() => {
      if (t.value)
        return `a_spinner_size_${t.value}`;
    })
  };
}
const hl = {
  name: "ASpinner",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: () => qn.value.propsDefault.ariaLabel
    },
    extra: {
      type: Object,
      required: !1,
      default: () => qn.value.propsDefault.extra
    },
    safeHtml: {
      type: String,
      required: !1,
      default: () => qn.value.propsDefault.safeHtml
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => qn.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    tag: {
      type: String,
      required: !1,
      default: () => qn.value.propsDefault.tag
    }
  },
  setup(e) {
    const {
      ariaLabelAttributes: t
    } = Oc(e), {
      classSize: n
    } = xq(e);
    return {
      ariaLabelAttributes: t,
      classSize: n
    };
  },
  render() {
    return c(this.tag, {
      class: [
        qn.value.propsDefault.class,
        this.classSize
      ],
      role: "status",
      innerHTML: this.safeHtml,
      ...this.ariaLabelAttributes
    });
  }
}, Na = B({
  propsDefault: {
    align: "center",
    extra: void 0,
    size: 6,
    tag: "div",
    text: "_A_LOADING_LOADING_",
    textAlign: "right"
  }
}), Lde = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Na.value.propsDefault = {
      ...Na.value.propsDefault,
      ...t
    };
  }
}, pm = {
  name: "ALoading",
  inheritAttrs: !1,
  props: {
    align: {
      type: String,
      required: !1,
      default: () => Na.value.propsDefault.align,
      validator: (e) => ["left", "center", "right"].indexOf(e) !== -1
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: () => Na.value.propsDefault.extra
    },
    isLoading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => Na.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    spinnerClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    spinnerSafeHtml: {
      type: String,
      required: !1,
      default: () => qn.value.propsDefault.safeHtml
    },
    spinnerTag: {
      type: String,
      required: !1,
      default: () => qn.value.propsDefault.tag
    },
    tag: {
      type: String,
      required: !1,
      default: () => Na.value.propsDefault.tag
    },
    text: {
      type: String,
      required: !1,
      default: () => Na.value.propsDefault.text
    },
    textAlign: {
      type: String,
      required: !1,
      default: () => Na.value.propsDefault.textAlign,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    }
  },
  setup(e) {
    const {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    } = KT(e);
    return {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    };
  },
  render() {
    const e = this.textAlign === "left", t = c(Ae, {
      alwaysTranslate: this.alwaysTranslate,
      tag: "span",
      class: [
        "a_cloak__text",
        e ? "a_cloak__text_left" : "a_cloak__text_right",
        this.classTextSize
      ],
      text: this.text,
      extra: this.extra
    });
    return [
      this.$slots.default && this.$slots.default(),
      this.isLoading && c(
        this.tag,
        {
          ...this.$attrs,
          role: "status",
          tabindex: -1,
          class: ["a_loading", this.classAlign]
        },
        [
          c("div", {
            class: ["a_cloak__box", this.classForBox]
          }, [
            e ? t : "",
            c(hl, {
              alwaysTranslate: this.alwaysTranslate,
              class: [
                "a_cloak__spinner",
                this.spinnerClass
              ],
              "aria-hidden": "true",
              safeHtml: this.spinnerSafeHtml,
              size: this.size,
              tag: this.spinnerTag
            }),
            e ? "" : t
          ])
        ]
      )
    ];
  }
};
function Tm({
  menuId: e = "a_menu_",
  panelId: t = ""
}) {
  const r = `${`#${aa({ menuId: e, id: t, suffix: "panel" })}`} .a_menu__listview a`;
  setTimeout(() => {
    const s = document.querySelector(r);
    s && s.focus();
  });
}
function aa({
  menuId: e = "a_menu_",
  id: t = "",
  suffix: n = ""
}) {
  return `${e}_${t}_${n}`;
}
const Xi = B({});
function mm(e) {
  const t = d(e, "menuId"), n = d(e, "canChangeBodyClass"), r = () => {
    n.value && (document.body.classList.add("a_menu__wrapper_open"), document.body.classList.remove("a_menu__wrapper_close")), Xi.value[t.value] = !0;
  }, s = () => {
    n.value && (document.body.classList.add("a_menu__wrapper_close"), document.body.classList.remove("a_menu__wrapper_open")), Xi.value[t.value] = !1;
  }, i = () => {
    n.value && (document.body.classList.remove("a_menu__wrapper_close"), document.body.classList.remove("a_menu__wrapper_open"));
  }, o = ({ isOpen: E } = {}) => {
    Ce(E) ? Xi.value[t.value] ? s() : r() : E ? r() : s();
  }, u = _(() => Xi.value[t.value]), h = () => {
    o(), u.value && Tm({
      menuId: t.value,
      panelId: ""
    });
  };
  return {
    btnToggleTitle: _(() => Xi.value[t.value] ? "_A_MENU_2_BTN_CLOSE_" : "_A_MENU_2_BTN_OPEN_"),
    closeMenu: s,
    isMenuOpen: u,
    removeBodyClasses: i,
    toggleMenu: o,
    toggleMenuObButton: h
  };
}
const Fq = {
  name: "AMenuButtonToggle",
  props: {
    buttonToggleProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canChangeBodyClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    class: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    insideMenu: {
      type: Boolean,
      required: !1
    },
    menuId: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      btnToggleTitle: t,
      isMenuOpen: n,
      toggleMenuObButton: r
    } = mm(e);
    return {
      btnToggleTitle: t,
      isMenuOpen: n,
      toggleMenuObButton: r
    };
  },
  render() {
    return c(ft, {
      class: ["a_menu__btn_toggle", this.class, {
        a_menu__btn_toggle_open: this.isMenuOpen,
        a_menu__btn_toggle_close: !this.isMenuOpen,
        a_menu__btn_toggle_inside_menu: this.insideMenu,
        a_menu__btn_toggle_outside_menu: !this.insideMenu
      }],
      type: "button",
      title: this.btnToggleTitle,
      textScreenReader: this.btnToggleTitle,
      onClick: this.toggleMenuObButton,
      ...this.buttonToggleProps
    }, () => [
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_1 aloha_element__ml_0"
      }),
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_2 aloha_element__ml_0"
      }),
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_3 aloha_element__ml_0"
      })
    ]);
  }
};
function Mq() {
  const e = de("togglePanel"), t = ({ parentId: r }) => {
    e({ parentId: r });
  };
  return {
    goBack: t,
    goBackKeydown: ({ $event: r, parentId: s }) => {
      (r.keyCode === X.enter || r.keyCode === X.space) && (t({ parentId: s }), r.stopPropagation(), r.preventDefault());
    }
  };
}
function qq(e) {
  const t = d(e, "dataKeyById"), n = d(e, "panelParentsOpen");
  return {
    breadcrumbsItems: _(() => {
      if (!n.value.length)
        return [];
      const s = [];
      let i = "_A_MENU_2_MAIN_MENU_";
      return z(n.value, (o, u) => {
        s.push({
          isFirst: u === 0,
          label: i,
          panelParentId: o
        }), i = fe(t.value, `${o}.${bt}`);
      }), s.push({
        panelParentId: void 0,
        label: i
      }), s;
    })
  };
}
function $q({
  breadcrumbsItems: e = _(() => []),
  breadcrumbsTruncatedOffset: t = B(0)
}) {
  const n = B([]), r = B([]), s = B(0), i = B(void 0), o = B(!1), u = B(0), h = B([]), A = () => {
    if (i.value < 0) {
      o.value = !0;
      return;
    }
    r.value.unshift(e.value[i.value]), i.value--;
  }, E = () => {
    n.value = e.value.slice(0, i.value + 1), o.value = !0;
  }, p = () => {
    if (r.value.length <= 1 || u.value + t.value <= s.value) {
      E();
      return;
    }
    r.value.splice(0, 1), i.value++, u.value -= fi(h.value), h.value.pop(), p();
  };
  return {
    breadcrumbsItemsDropdown: n,
    breadcrumbsItemsTruncated: r,
    isRenderedAll: o,
    renderItem: (b) => {
      const L = b.offsetWidth;
      u.value += L, h.value.push(L), u.value >= s.value ? p() : A();
    },
    renderParent: (b) => {
      i.value = e.value.length - 1, A(), s.value = b.offsetWidth;
    }
  };
}
const Nl = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots" viewBox="0 0 16 16">
  <path d="M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3"/>
</svg>`, kq = {
  name: "AMenuBreadcrumbs",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !0
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    isPanelMain: {
      type: Boolean,
      required: !1
    },
    dataKeyById: {
      type: Object,
      required: !0
    },
    panelParentsOpen: {
      type: Array,
      required: !0
    }
  },
  setup(e) {
    const t = de("breadcrumbsTruncatedOffset"), {
      breadcrumbsItems: n
    } = qq(e), {
      goBack: r,
      goBackKeydown: s
    } = Mq(), {
      breadcrumbsItemsDropdown: i,
      breadcrumbsItemsTruncated: o,
      isRenderedAll: u,
      renderItem: h,
      renderParent: A
    } = $q({
      breadcrumbsItems: n,
      breadcrumbsTruncatedOffset: t
    });
    return {
      breadcrumbsItems: n,
      breadcrumbsItemsDropdown: i,
      breadcrumbsItemsTruncated: o,
      goBack: r,
      goBackKeydown: s,
      isRenderedAll: u,
      renderItem: h,
      renderParent: A
    };
  },
  render() {
    if (this.isSearchActive || this.isPanelMain)
      return null;
    if (this.isBreadcrumbsTruncated)
      return c(Ae, {
        ariaLabel: "_A_MENU_2_BREADCRUMB_",
        class: "a_menu__breadcrumb a_menu__breadcrumb_secondary",
        tag: "nav"
      }, () => [
        Ot(c("ul", {
          class: [
            "a_menu__breadcrumb__ul a_menu__breadcrumb__ul_truncated"
          ]
        }, [
          this.breadcrumbsItemsDropdown.length > 0 ? c("li", {
            class: "a_menu__breadcrumbs__item"
          }, [
            c(ia, {
              buttonClass: "a_btn a_btn_secondary a_btn_small a_menu__breadcrumb__ul_truncated__btn",
              buttonIconLeft: Nl,
              buttonTextScreenReader: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
              buttonTitle: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
              dropdownClass: "a_menu__breadcrumb__ul_truncated__dropdown",
              hasCaret: !1,
              inBody: !0,
              ...this.breadcrumbsTruncatedDropdownProps
            }, {
              dropdown: () => [
                this.breadcrumbsItemsDropdown.map((e) => {
                  const t = e.panelParentId ? {
                    tag: "a",
                    class: [
                      "a_menu__breadcrumbs__link",
                      this.breadcrumbsLinkClass
                    ],
                    role: "button",
                    tabindex: 0,
                    onClick: () => this.goBack({ parentId: e.panelParentId }),
                    onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
                  } : {
                    class: "a_menu__breadcrumbs__link",
                    tag: "strong"
                  };
                  return c("li", {
                    key: e.panelParentId,
                    class: "a_menu__breadcrumbs__item"
                  }, [
                    c(ft, {
                      text: e.label,
                      title: e.label,
                      ...t
                    }),
                    c("span", {
                      class: "a_menu__breadcrumbs__item__divider"
                    }, "/")
                  ]);
                })
              ]
            })
          ]) : "",
          this.breadcrumbsItemsTruncated.map((e) => {
            const t = e.panelParentId ? {
              tag: "a",
              class: [
                "a_menu__breadcrumbs__link",
                this.breadcrumbsLinkClass
              ],
              role: "button",
              tabindex: 0,
              onClick: () => this.goBack({ parentId: e.panelParentId }),
              onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
            } : {
              class: "a_menu__breadcrumbs__link",
              tag: "strong"
            };
            return Ot(c("li", {
              key: e.panelParentId,
              class: "a_menu__breadcrumbs__item"
            }, [
              !e.isFirst && c("span", {
                class: "a_menu__breadcrumbs__item__divider"
              }, "/"),
              c(ft, {
                text: e.label,
                title: e.label,
                ...t
              })
            ]), [
              [_l, { mounted: this.renderItem }]
            ]);
          })
        ]), [
          [_l, { mounted: this.renderParent }]
        ])
      ]);
    if (!this.isBreadcrumbsTruncated)
      return c(Ae, {
        ariaLabel: "_A_MENU_2_BREADCRUMB_",
        class: "a_menu__breadcrumb a_menu__breadcrumb_secondary",
        tag: "nav"
      }, () => [
        c("ul", {
          class: [
            "a_menu__breadcrumb__ul"
          ]
        }, [
          this.breadcrumbsItems.map((e) => {
            const t = e.panelParentId ? {
              tag: "a",
              class: [
                "a_menu__breadcrumbs__link",
                this.breadcrumbsLinkClass
              ],
              role: "button",
              tabindex: 0,
              onClick: () => this.goBack({ parentId: e.panelParentId }),
              onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
            } : {
              class: "a_menu__breadcrumbs__link",
              tag: "strong"
            };
            return c("li", {
              key: e.panelParentId,
              class: "a_menu__breadcrumbs__item"
            }, [
              !e.isFirst && c("span", {
                class: "a_menu__breadcrumbs__item__divider"
              }, "/"),
              c(ft, {
                text: e.label,
                title: e.label,
                ...t
              })
            ]);
          })
        ])
      ]);
  }
};
function Uq(e, {
  id: t = _(() => {
  })
}) {
  const n = d(e, "isLinkInSearchPanel"), r = de("activeRoutesIds");
  return {
    isLinkActive: _(() => n.value ? !1 : r.value.indexOf(t.value) !== -1)
  };
}
function Hq(e) {
  const t = d(e, "isLinkInSearchPanel"), n = d(e, "item"), r = d(e, "keyIcon"), s = _(() => n.value[Ke]), i = _(() => {
    if (!t.value)
      return fe(n.value, r.value);
  }), o = _(() => {
    const u = "a_menu__link__icon";
    return n.value.iconClass ? `{ CLASS } ${n.value.iconClass}` : u;
  });
  return {
    icon: i,
    iconClassLocal: o,
    id: s
  };
}
function Vq(e, {
  id: t = _(() => {
  })
}) {
  const n = d(e, "dataProParentChildren"), r = d(e, "item");
  return {
    countChildren: _(() => r.value.to ? 0 : n.value[t.value] && n.value[t.value].length)
  };
}
const Al = "_a_parent";
function Wq(e, {
  id: t = _(() => {
  })
}) {
  const n = d(e, "isLinkInSearchPanel"), r = d(e, "item"), s = de("clickMenuLink"), i = de("isPanelMain"), o = de("togglePanel"), u = () => {
    o({
      parentId: t.value,
      isLinkInSearchPanel: n.value,
      isPanelMain: i.value
    });
  };
  return {
    clickLink: ({ $event: E }) => {
      n.value && o({ parentId: r.value[Al], isLinkInSearchPanel: n.value }), s({ ctrlKey: E.ctrlKey, isPanelMain: i.value });
    },
    onKeydown: (E) => {
      (E.keyCode === X.enter || E.keyCode === X.space) && (u(), E.stopPropagation(), E.preventDefault());
    },
    openSubMenu: u
  };
}
function Gq(e, {
  id: t = _(() => {
  })
}) {
  const n = d(e, "menuId");
  return {
    linkId: _(() => aa({
      menuId: n.value,
      id: t.value,
      suffix: "link"
    }))
  };
}
function Kq(e) {
  const t = d(e, "isLinkInSearchPanel"), n = d(e, "item"), r = d(e, "modelSearch"), {
    filterSearchHighlight: s
  } = Wn(), i = _(() => n.value[bt]);
  return {
    label: _(() => {
      const u = i.value;
      return t.value ? s(u, { searchModel: r.value }) : u;
    }),
    labelWithoutFilter: i
  };
}
function jq(e) {
  const t = d(e, "item"), n = _(() => !!t.value.disabled), r = _(() => n.value ? "#" : t.value.to);
  return {
    isItemLink: _(() => !!t.value.to),
    isLinkDisabled: n,
    toLocal: r
  };
}
function zq(e, {
  id: t = _(() => "")
}) {
  const n = de("isChildPanelOpen"), r = de("isMenuOpen"), s = de("isPanelMain"), i = de("panelParentsOpen"), o = _(() => s.value && i.value[0] === t.value), u = _(() => !r.value && n.value && i.value.indexOf(t.value) !== -1);
  return {
    isLinkOpen: _(() => o.value || u.value),
    isLinkOpenPanelMain: o,
    isLinkOpenPanelSecondaryMenuClose: u
  };
}
function Yq(e) {
  const t = d(e, "item"), n = de("keySlot");
  return {
    currentSlot: _(() => {
      if (n.value)
        return fe(t.value, n.value);
    })
  };
}
function Xq(e) {
  const t = d(e, "isLinkInSearchPanel"), n = d(e, "isPanelOpen"), r = de("isMenuOpen"), s = de("isPanelMain", !1), i = de("isChildPanelOpen", !1);
  return {
    tabindex: _(() => t.value || s.value || n.value || !r.value && i.value ? 0 : -1)
  };
}
function Zq(e, {
  isItemLink: t = _(() => !1),
  isLinkOpenPanelMain: n = _(() => !1),
  isLinkOpenPanelSecondaryMenuClose: r = _(() => !1),
  labelWithoutFilter: s = _(() => "")
}) {
  const i = d(e, "item"), o = _(() => !!i.value.isTitleHtml), u = _(() => n.value ? "_A_MENU_2_TO_MAIN_MENU_" : r.value ? [
    "_A_MENU_2_CLOSE_SUBMENU_",
    i.value.title || s.value
  ] : t.value ? i.value.title || s.value : [
    "_A_MENU_2_OPEN_SUBMENU_",
    i.value.title || s.value
  ]), h = _(() => ({
    minWidth: i.value.titleHtmlMinWidth,
    width: i.value.titleHtmlWidth,
    maxWidth: i.value.titleHtmlMaxWidth
  }));
  return {
    isTitleHtml: o,
    titleLocal: u,
    titleAttributes: h
  };
}
const Sm = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708"/>
</svg>`, Wd = {
  name: "AMenuPanelLink",
  inject: [
    "isPanelMain",
    "showCountChildren"
  ],
  props: {
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    idsSearchVisible: {
      type: Object,
      required: !1,
      default: void 0
    },
    isLinkInSearchPanel: {
      type: Boolean,
      required: !1
    },
    isPanelOpen: {
      type: Boolean,
      required: !1
    },
    item: {
      type: Object,
      required: !0
    },
    keyIcon: {
      type: String,
      required: !1,
      default: void 0
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      currentSlot: t
    } = Yq(e), {
      isItemLink: n,
      isLinkDisabled: r,
      toLocal: s
    } = jq(e), {
      label: i,
      labelWithoutFilter: o
    } = Kq(e), {
      icon: u,
      iconClassLocal: h,
      id: A
    } = Hq(e), {
      isLinkActive: E
    } = Uq(e, {
      id: A
    }), {
      linkId: p
    } = Gq(e, {
      id: A
    }), {
      isLinkOpen: T,
      isLinkOpenPanelMain: S,
      isLinkOpenPanelSecondaryMenuClose: b
    } = zq(e, {
      id: A
    }), {
      tabindex: L
    } = Xq(e), {
      countChildren: v
    } = Vq(e, {
      id: A
    }), {
      isTitleHtml: I,
      titleLocal: R,
      titleAttributes: g
    } = Zq(e, {
      isItemLink: n,
      isLinkOpenPanelMain: S,
      isLinkOpenPanelSecondaryMenuClose: b,
      labelWithoutFilter: o
    }), {
      clickLink: D,
      onKeydown: w,
      openSubMenu: M
    } = Wq(e, {
      id: A
    });
    return {
      clickLink: D,
      countChildren: v,
      currentSlot: t,
      icon: u,
      iconClassLocal: h,
      isItemLink: n,
      isLinkActive: E,
      isLinkDisabled: r,
      isLinkOpen: T,
      isTitleHtml: I,
      label: i,
      labelWithoutFilter: o,
      linkId: p,
      onKeydown: w,
      openSubMenu: M,
      tabindex: L,
      titleAttributes: g,
      titleLocal: R,
      toLocal: s
    };
  },
  render() {
    return c("li", {
      class: "a_menu__listitem"
    }, [
      this.isLinkInSearchPanel && c("span", {
        class: "a_menu__breadcrumbs__item__divider",
        ariaHidden: !0
      }, "/"),
      this.currentSlot && this.$slots[this.currentSlot] ? this.$slots[this.currentSlot]({
        id: this.linkId,
        item: this.item,
        clickLink: this.clickLink,
        countChildren: this.countChildren,
        isLinkActive: this.isLinkActive,
        isLinkOpen: this.isLinkOpen,
        isPanelOpen: this.isPanelOpen,
        isPanelMain: this.isPanelMain,
        label: this.label,
        labelWithoutFilter: this.labelWithoutFilter,
        onKeydown: this.onKeydown,
        openSubMenu: this.openSubMenu,
        tabindex: this.tabindex
      }) : this.isItemLink ? c(Bu, {
        id: this.linkId,
        class: ["a_menu__link a_menu__link__text_truncated", {
          a_menu__link_disabled: this.isLinkDisabled,
          a_menu__link_active: this.isLinkActive,
          a_menu__link_panel_main: this.isPanelMain
        }],
        html: this.label,
        iconClass: this.iconClassLocal,
        iconLeft: this.icon,
        isTitleHtml: this.isTitleHtml,
        tabindex: this.tabindex,
        textAriaHidden: !0,
        textClass: "a_menu__link__text aloha_element__ml_0",
        textScreenReader: this.titleLocal,
        title: this.titleLocal,
        titleAttributes: this.titleAttributes,
        titlePlacement: "right",
        to: this.toLocal,
        onClick: this.clickLink
      }) : c(ft, {
        id: this.linkId,
        class: [
          "a_menu__link a_menu__link_btn a_menu__link__text_truncated",
          {
            a_menu__link_open: this.isLinkOpen,
            a_menu__link_active: this.isLinkActive,
            a_menu__link_panel_main: this.isPanelMain
          }
        ],
        html: this.label,
        iconClass: this.iconClassLocal,
        iconLeft: this.icon,
        isTitleHtml: this.isTitleHtml,
        role: "button",
        tabindex: this.tabindex,
        tag: "a",
        textAriaHidden: !0,
        textClass: "a_menu__link__text aloha_element__ml_0",
        textScreenReader: this.titleLocal,
        title: this.titleLocal,
        titleAttributes: this.titleAttributes,
        titlePlacement: "right",
        onClick: this.openSubMenu,
        onKeydown: this.onKeydown
      }, () => [
        c("span", {
          class: "a_menu__link__counter aloha_element__ml_0"
        }, [
          this.showCountChildren && c("span", {
            ariaHidden: !0
          }, this.countChildren),
          c(ut, {
            class: "a_menu__link__counter__icon",
            icon: Sm
          })
        ])
      ])
    ]);
  }
};
function Jq(e) {
  const t = d(e, "groupItems");
  return {
    hasItems: _(() => t.value.length > 0)
  };
}
function Qq(e) {
  const t = d(e, "groupIndex"), n = d(e, "groupLabel"), r = d(e, "menuId"), s = d(e, "paneIndex"), i = _(() => `${r.value}_${s.value}_${t.value}_label`);
  return {
    ariaLabelledbyObj: _(() => n.value ? {
      "aria-labelledby": i.value
    } : {}),
    labelId: i
  };
}
const UE = {
  name: "AMenuPanelGroup",
  props: {
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    groupIndex: {
      type: [Number, String],
      required: !0
    },
    groupItems: {
      type: Array,
      required: !0
    },
    groupLabel: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    isPanelOpen: {
      type: Boolean,
      required: !1
    },
    keyIcon: {
      type: String,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    paneIndex: {
      type: [Number, String],
      required: !0
    }
  },
  setup(e) {
    const {
      hasItems: t
    } = Jq(e), {
      ariaLabelledbyObj: n,
      labelId: r
    } = Qq(e);
    return {
      ariaLabelledbyObj: n,
      hasItems: t,
      labelId: r
    };
  },
  render() {
    return this.hasItems ? this.groupLabel ? c("li", {
      ...this.ariaLabelledbyObj
    }, [
      c("div", {
        id: this.labelId,
        class: "a_menu__list_header"
      }, this.groupLabel),
      c("ul", {
        class: "a_menu__listview"
      }, [
        this.groupItems.map((e, t) => c(Wd, {
          key: t,
          item: e,
          dataProParentChildren: this.dataProParentChildren,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId
        }, this.$slots))
      ])
    ]) : this.groupItems.map((e, t) => c(Wd, {
      key: t,
      item: e,
      dataProParentChildren: this.dataProParentChildren,
      isPanelOpen: this.isPanelOpen,
      keyIcon: this.keyIcon,
      menuId: this.menuId
    }, this.$slots)) : null;
  }
};
function e$(e) {
  const t = d(e, "panelItems"), n = d(e, "keyGroup"), r = _(() => {
    const i = [], o = {};
    return z(t.value, (u) => {
      const h = fe(u, n.value);
      ae(h) ? i.push(u) : (o[h] = o[h] || [], o[h].push(u));
    }), {
      withoutGroup: i,
      withGroup: o
    };
  });
  return {
    isItemsWithoutGroup: _(() => r.value.withoutGroup.length > 0),
    itemsGroup: r
  };
}
function t$(e, {
  openedLevelIndex: t = _(() => 0)
}) {
  const n = d(e, "dataKeyById"), r = d(e, "isPanelMain"), s = d(e, "parentId"), i = de("isMenuOpen"), o = _(() => !r.value && !i.value && t.value === 0), u = _(() => fe(n.value, `${s.value}.${bt}`));
  return {
    isHeaderPanelVisible: o,
    parentLabel: u
  };
}
function n$(e) {
  const t = d(e, "menuId"), n = d(e, "parentId");
  return {
    panelId: _(() => aa({
      menuId: t.value,
      id: n.value,
      suffix: "panel"
    }))
  };
}
function r$(e) {
  const t = d(e, "panelParentsOpen"), n = d(e, "parentId"), r = _(() => t.value.indexOf(n.value)), s = _(() => {
    if (r.value !== -1)
      return `z-index: ${r.value + 2};`;
  });
  return {
    openedLevelIndex: r,
    styleZIndex: s
  };
}
function a$(e, {
  openedLevelIndex: t = _(() => -1)
}) {
  const n = d(e, "isPanelMain"), r = d(e, "isSearchActive"), s = d(e, "panelParentsOpen"), i = _(() => r.value ? !1 : n.value ? s.value.length === 0 : s.value.length ? t.value === s.value.length - 1 : !1);
  return {
    isChildPanelOpen: _(() => {
      if (n.value)
        return s.value.length > 0;
      const u = t.value;
      return u !== -1 && u !== s.value.length - 1;
    }),
    isPanelOpen: i
  };
}
const HE = {
  name: "AMenuPanel",
  props: {
    attributesBlockerClick: {
      type: Object,
      required: !0
    },
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataKeyById: {
      type: Object,
      required: !0
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !1
    },
    isPanelMain: {
      type: Boolean,
      required: !1
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    keyGroup: {
      type: String,
      required: !0
    },
    keyIcon: {
      type: String,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    paneIndex: {
      type: [Number, String],
      required: !0
    },
    panelItems: {
      type: Array,
      required: !0
    },
    panelParentsOpen: {
      type: Array,
      required: !0
    },
    parentId: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = d(e, "isPanelMain"), {
      panelId: n
    } = n$(e), {
      openedLevelIndex: r,
      styleZIndex: s
    } = r$(e), {
      isItemsWithoutGroup: i,
      itemsGroup: o
    } = e$(e), {
      isChildPanelOpen: u,
      isPanelOpen: h
    } = a$(e, {
      openedLevelIndex: r
    }), {
      isHeaderPanelVisible: A,
      parentLabel: E
    } = t$(e, {
      openedLevelIndex: r
    });
    return et("isChildPanelOpen", u), et("isPanelMain", t), {
      isChildPanelOpen: u,
      isHeaderPanelVisible: A,
      isItemsWithoutGroup: i,
      isPanelOpen: h,
      itemsGroup: o,
      panelId: n,
      parentLabel: E,
      styleZIndex: s
    };
  },
  render() {
    return c("div", {
      id: this.panelId,
      class: ["a_menu__panel", {
        a_menu__panel_main: !this.isSearchActive && this.isPanelMain,
        a_menu__panel_secondary: !this.isPanelMain,
        a_menu__panel_opened: !this.isSearchActive && this.isPanelOpen,
        a_menu__panel_parent: !this.isSearchActive && this.isChildPanelOpen
      }],
      style: this.styleZIndex
    }, [
      !this.isPanelMain && this.isPanelOpen && c(kq, {
        breadcrumbsLinkClass: this.breadcrumbsLinkClass,
        breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
        dataKeyById: this.dataKeyById,
        isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
        isPanelMain: this.isPanelMain,
        isSearchActive: this.isSearchActive,
        panelParentsOpen: this.panelParentsOpen
      }),
      this.isHeaderPanelVisible && c("div", {
        class: "a_menu__panel_header"
      }, [
        c(Ae, {
          class: "a_menu__panel_header__text",
          html: this.parentLabel,
          tag: "strong"
        })
      ]),
      c("ul", {
        class: "a_menu__listview"
      }, [
        this.isItemsWithoutGroup && c(UE, {
          dataProParentChildren: this.dataProParentChildren,
          groupItems: this.itemsGroup.withoutGroup,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId,
          paneIndex: this.paneIndex,
          groupIndex: "00"
        }, this.$slots),
        Object.keys(this.itemsGroup.withGroup).map((e, t) => c(UE, {
          key: e,
          dataProParentChildren: this.dataProParentChildren,
          groupIndex: t,
          groupItems: this.itemsGroup.withGroup[e],
          groupLabel: e,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId,
          paneIndex: this.paneIndex
        }, this.$slots))
      ])
    ]);
  }
}, Gd = "_a_breadcrumbs";
function s$(e) {
  const t = d(e, "item");
  return {
    breadcrumbsItems: _(() => {
      const r = [
        {
          label: "_A_MENU_2_MAIN_MENU_",
          isFirst: !0,
          parentIds: []
        }
      ], s = [];
      return z(t.value[Gd], (i) => {
        s.push(i.parentId), r.push({
          label: i.label,
          parentId: i.parentId,
          parentIds: [
            ...s
          ]
        });
      }), r;
    })
  };
}
function i$() {
  const e = de("togglePanel"), t = ({ parentIds: r }) => {
    e({ parentIds: r });
  };
  return {
    goTo: t,
    goToKeydown: ({ $event: r, parentIds: s }) => {
      (r.keyCode === X.enter || r.keyCode === X.space) && (t({ parentIds: s }), r.stopPropagation(), r.preventDefault());
    }
  };
}
const l$ = {
  name: "AMenuSearchPanelBreadcrumbs",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    item: {
      type: Object,
      required: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      breadcrumbsItems: t
    } = s$(e), {
      goTo: n,
      goToKeydown: r
    } = i$();
    return {
      breadcrumbsItems: t,
      goTo: n,
      goToKeydown: r
    };
  },
  render() {
    return c("li", {}, [
      c("ul", {
        class: "a_menu__breadcrumb__ul a_menu__breadcrumb__ul_search"
      }, [
        c("li", {}, [
          c(ia, {
            buttonClass: "a_btn a_btn_secondary a_btn_small a_menu__breadcrumb__ul_truncated__btn",
            buttonIconLeft: Nl,
            buttonTextScreenReader: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
            buttonTitle: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
            dropdownClass: "a_menu__breadcrumb__ul_truncated__dropdown",
            hasCaret: !1,
            inBody: !0,
            ...this.breadcrumbsTruncatedDropdownProps
          }, {
            dropdown: () => [
              this.breadcrumbsItems.map((e) => c("li", {
                key: e.parentId,
                class: "a_menu__breadcrumbs__item"
              }, [
                c(ft, {
                  text: e.label,
                  title: e.label,
                  tag: "a",
                  class: [
                    "a_menu__breadcrumbs__link",
                    this.breadcrumbsLinkClass
                  ],
                  role: "button",
                  tabindex: 0,
                  onClick: () => this.goTo({ parentIds: e.parentIds }),
                  onKeydown: (t) => this.goToKeydown({ $event: t, parentIds: e.parentIds })
                }),
                c("span", {
                  class: "a_menu__breadcrumbs__item__divider"
                }, "/")
              ]))
            ]
          })
        ]),
        c(Wd, {
          item: this.item,
          dataProParentChildren: this.dataProParentChildren,
          isLinkInSearchPanel: !0,
          modelSearch: this.modelSearch,
          menuId: this.menuId
        }, this.$slots)
      ])
    ]);
  }
};
function o$(e) {
  const t = d(e, "itemsWithSearch"), n = d(e, "isSearchActive");
  return {
    isNoneFound: _(() => n.value ? t.value.length === 0 : !1)
  };
}
function u$(e, {
  isNoneFound: t = _(() => !1)
}) {
  return {
    textLocal: _(() => t.value ? "_A_MENU_2_SEARCH_NONE_FOUND_" : "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_")
  };
}
const _$ = {
  name: "AMenuSearchPanel",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    itemsWithSearch: {
      type: Array,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      isNoneFound: t
    } = o$(e), {
      textLocal: n
    } = u$(e, {
      isNoneFound: t
    });
    return et("isPanelMain", !1), et("isChildPanelOpen", !1), {
      isNoneFound: t,
      textLocal: n
    };
  },
  render() {
    return this.isSearchActive ? c("div", {
      class: "a_menu__panels__main a_menu__panel_search"
    }, [
      c("div", {
        class: "a_menu__navbar_top_sub"
      }, [
        c(Ae, {
          class: "a_menu__navbar_top_sub__text",
          tag: "strong",
          text: this.textLocal,
          extra: {
            count: this.itemsWithSearch.length
          }
        })
      ]),
      !this.isNoneFound && c("div", {
        class: "a_vertical_scroll"
      }, [
        c("div", {
          class: "a_scroll_content"
        }, [
          c("ul", {
            class: "a_menu__listview"
          }, [
            this.itemsWithSearch.map((e) => c(l$, {
              key: e[Ke],
              breadcrumbsLinkClass: this.breadcrumbsLinkClass,
              breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
              dataProParentChildren: this.dataProParentChildren,
              item: e,
              menuId: this.menuId,
              modelSearch: this.modelSearch
            }, this.$slots))
          ])
        ])
      ])
    ]) : null;
  }
};
function d$({
  onScroll: e = () => {
  },
  scrollContentRef: t = B(void 0)
}) {
  return {
    addScrollListener: () => {
      t.value.addEventListener("scroll", e);
    },
    destroyScrollListener: () => {
      t.value.removeEventListener("scroll", e);
    }
  };
}
function c$({
  checkScroll: e = () => {
  },
  containerRef: t = B(void 0),
  scrollContentChildRef: n = B(void 0)
}) {
  const r = B(void 0), s = B(!1), i = B(void 0), o = B(!1), u = B(0), h = B(0), A = (P) => {
    const C = P[0].contentRect.height;
    (u.value === 0 || u.value !== C) && (u.value = C, e());
  }, E = (P) => {
    const C = P[0].contentRect.height;
    (h.value === 0 || h.value !== C) && (h.value = C, e());
  }, p = () => {
    r.value = new ResizeObserver(
      ol((P) => A(P), 300)
    );
  }, T = () => {
    i.value = new ResizeObserver(
      ol((P) => E(P), 300)
    );
  }, S = () => {
    s.value || (r.value.observe(t.value), s.value = !0);
  }, b = () => {
    s.value && (r.value.unobserve(t.value), s.value = !1);
  }, L = () => {
    r.value.disconnect();
  }, v = () => {
    o.value || (i.value.observe(n.value), o.value = !0);
  }, I = () => {
    o.value && (i.value.unobserve(n.value), o.value = !1);
  }, R = () => {
    i.value.disconnect();
  };
  return {
    connectObservers: () => {
      S(), v();
    },
    destroyObservers: () => {
      L(), R();
    },
    disconnectObservers: () => {
      b(), I();
    },
    initObservers: () => {
      p(), T();
    }
  };
}
function f$(e) {
  const t = d(e, "scrollDistance"), n = B(!1), r = B(!1), s = B(void 0), i = B(!1), o = B(void 0), u = B(void 0), h = () => {
    const T = o.value;
    r.value = T.scrollTop > 0, n.value = T.scrollTop < T.scrollHeight - T.clientHeight;
  }, A = () => {
    i.value = o.value.scrollHeight > o.value.clientHeight, i.value && h();
  };
  return {
    canScrollDown: n,
    canScrollUp: r,
    checkScroll: A,
    containerRef: s,
    hasScroll: i,
    onScroll: h,
    scrollContentChildRef: u,
    scrollContentRef: o,
    scrollDown: () => {
      o.value.scrollTop += t.value, A();
    },
    scrollUp: () => {
      o.value.scrollTop -= t.value, A();
    }
  };
}
const Jc = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-up" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708z"/>
</svg>`, h$ = {
  name: "AVerticalScroll",
  props: {
    btnDownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnUpProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    scrollContentAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    scrollDistance: {
      type: Number,
      required: !1,
      default: 100
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    tagScrollContent: {
      type: String,
      required: !1,
      default: "div"
    }
  },
  setup(e) {
    const t = d(e, "disabled"), {
      canScrollDown: n,
      canScrollUp: r,
      checkScroll: s,
      containerRef: i,
      hasScroll: o,
      onScroll: u,
      scrollContentChildRef: h,
      scrollContentRef: A,
      scrollDown: E,
      scrollUp: p
    } = f$(e), {
      connectObservers: T,
      destroyObservers: S,
      disconnectObservers: b,
      initObservers: L
    } = c$({
      checkScroll: s,
      containerRef: i,
      scrollContentChildRef: h
    }), {
      addScrollListener: v,
      destroyScrollListener: I
    } = d$({
      onScroll: u,
      scrollContentRef: A
    });
    return Wr(() => {
      L(), t.value || (T(), v());
    }), Dt(() => {
      S(), I();
    }), rt(t, (R) => {
      R ? (b(), I()) : (T(), v());
    }), {
      canScrollDown: n,
      canScrollUp: r,
      containerRef: i,
      hasScroll: o,
      scrollContentChildRef: h,
      scrollContentRef: A,
      scrollDown: E,
      scrollUp: p
    };
  },
  render() {
    return c(this.tag, {
      ref: "containerRef",
      class: [
        "a_vertical_scroll",
        {
          a_vertical_scroll_scrollable: this.hasScroll && !this.disabled
        }
      ]
    }, [
      c("div", {
        class: "a_vertical_scroll__btn__wrapper a_vertical_scroll__btn__wrapper_up"
      }, [
        c(ft, {
          class: "a_btn a_btn_transparent_secondary a_btn_small a_vertical_scroll__btn a_vertical_scroll__btn_up",
          iconLeft: Jc,
          disabled: !this.canScrollUp,
          tabindex: -1,
          title: "_A_VERTICAL_SCROLL_BTN_UP_TITLE_",
          textScreenReader: "_A_VERTICAL_SCROLL_BTN_UP_TITLE_",
          onClick: this.scrollUp,
          ...this.btnUpProps
        })
      ]),
      c(this.tagScrollContent, {
        ref: "scrollContentRef",
        class: "a_scroll_content",
        ...this.scrollContentAttributes
      }, [
        c("div", {
          ref: "scrollContentChildRef"
        }, [
          this.$slots.default && this.$slots.default()
        ])
      ]),
      c("div", {
        class: "a_vertical_scroll__btn__wrapper a_vertical_scroll__btn__wrapper_down"
      }, [
        c(ft, {
          class: "a_btn a_btn_transparent_secondary a_btn_small a_vertical_scroll__btn a_vertical_scroll__btn_down",
          iconLeft: bi,
          disabled: !this.canScrollDown,
          title: "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_",
          textScreenReader: "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_",
          tabindex: -1,
          onClick: this.scrollDown,
          ...this.btnDownProps
        })
      ])
    ]);
  }
};
function A$(e, {
  closeAllPanels: t = () => {
  }
}) {
  const n = d(e, "isBlockerClickable"), r = () => {
    t();
  };
  return {
    attributesBlockerClick: _(() => {
      const i = {};
      return n.value && (i.onClick = r, i.class = "a_menu__blocker a_menu_clickable"), i;
    })
  };
}
function E$(e, {
  isMenuOpen: t = _(() => !1),
  isMobileWidth: n = B(void 0),
  toggleMenu: r = () => {
  }
}) {
  const s = d(e, "isBackdropMobileClickable"), i = d(e, "useBackdropMobile"), o = _(() => i.value && t.value && n.value), u = () => {
    r({
      isOpen: !1
    });
  };
  return {
    clickAttributesBackdrop: _(() => s.value ? {
      onClick: u
    } : {}),
    isBackdropVisible: o
  };
}
function p$(e, {
  dataKeyById: t = _(() => ({})),
  dataProParent: n = _(() => ({
    main: [],
    children: {}
  })),
  isMenuLinkClicked: r = B(!1),
  isMenuOpen: s = _(() => !1),
  panelParentsOpen: i = B([])
}) {
  const o = d(e, "compareUrlCallback"), h = vR().appContext.config.globalProperties.$router, A = B([]), E = _(() => h.currentRoute), p = ({ route: L = {}, ids: v = [] }) => {
    const I = L[Al];
    return I && (v.unshift(I), p({ route: t.value[I], ids: v })), v;
  }, T = ({ routerFullPath: L, route: v }) => {
    const {
      fullPath: I
    } = h.resolve(v.to);
    return Fe(o.value) ? o.value({
      fullPath: I,
      routerFullPath: L,
      item: v,
      currentRoute: h.currentRoute.value
    }) : I === L;
  }, S = ({ routes: L = [], routerFullPath: v = "/" }) => {
    let I = !1;
    return z(L, (R) => {
      if (R.to && T({ routerFullPath: v, route: R })) {
        const g = p({ route: R, ids: [] });
        return !r.value && s.value && (i.value = g), A.value = [...g, R[Ke]], I = !0, !1;
      }
    }), I;
  };
  return {
    activeRoutesIds: A,
    checkAllRoutes: () => {
      const L = h.currentRoute.value.fullPath;
      let v = !1;
      v = S({ routes: n.value.main, routerFullPath: L }), !v && (z(n.value.children, (I) => {
        if (v = S({ routes: I, routerFullPath: L }), v)
          return !1;
      }), r.value && (r.value = !1));
    },
    currentRoute: E
  };
}
const T$ = "_a_children";
function m$(e) {
  const t = d(e, "data"), n = d(e, "isTranslated"), r = d(e, "keyChildren"), s = d(e, "keyId"), i = d(e, "keyLabel"), o = d(e, "keyLabelCallback"), u = ({ breadcrumbs: T = [], parentId: S, parentLabel: b }) => {
    const L = zp(T);
    return S && L.push({
      parentId: S,
      label: b
    }), L;
  }, h = ({ dataClone: T, dataFlat: S = [], parentId: b, parentLabel: L, breadcrumbs: v = [] }) => (z(T, (I) => {
    I[Ke] = fe(I, s.value), I[Al] = b, I[Gd] = u({
      breadcrumbs: v,
      parentId: b,
      parentLabel: L
    });
    let R;
    if (o.value ? R = o.value({ item: I }) : R = fe(I, i.value), n.value && Da(R) && (R = xt({ placeholder: R })), I[bt] = R, r.value) {
      const g = fe(I, r.value);
      g && g.length && (h({
        dataClone: g,
        parentId: I[Ke],
        parentLabel: I[bt],
        dataFlat: S,
        breadcrumbs: I[Gd]
      }), I[T$] = g);
    }
    S.push(I);
  }), S), A = _(() => {
    const T = pe(t.value);
    let S = [];
    return S = h({ dataClone: T, dataFlat: S }), S;
  }), E = _(() => {
    const T = [], S = {};
    return z(A.value, (b) => {
      const L = b[Al];
      ae(L) ? T.push(b) : (S[L] = S[L] || [], S[L].push(b));
    }), {
      main: T,
      children: S
    };
  });
  return {
    dataKeyById: _(() => Pa(A.value, Ke)),
    dataProParent: E
  };
}
function S$(e, {
  closeMenu: t = () => {
  },
  isMenuOpen: n = _(() => !1),
  isSubMenuOpen: r = _(() => !1),
  panelParentsOpen: s = B([]),
  togglePanel: i = () => {
  }
}) {
  const o = d(e, "menuId"), u = d(e, "useEscapeForMobile"), h = B(void 0), {
    isMobileWidth: A
  } = En(), E = _(() => !A.value && !n.value && r.value), p = (P) => {
    if (!h.value)
      return;
    const F = h.value.querySelectorAll(Ei);
    if (F.length === 0) {
      P.preventDefault();
      return;
    }
    const C = F[0], $ = F[F.length - 1];
    P.shiftKey ? document.activeElement === C && ($.focus(), P.preventDefault()) : document.activeElement === $ && (C.focus(), P.preventDefault());
  }, T = (P) => {
    u.value && (t(), P.preventDefault(), P.stopPropagation());
  }, S = (P) => {
    const F = P || window.$event;
    F.key === "Escape" || F.keyCode === X.escape ? T(P) : (F.key === "Tab" || F.keyCode === X.tab) && p(F);
  }, b = ({ panelIndex: P, panelId: F }) => {
    const C = aa({
      menuId: o.value,
      id: F,
      suffix: "link"
    }), $ = document.getElementById(C);
    if ($) {
      if (P > 0) {
        const H = s.value.slice(0, P);
        i({ parentIds: H, withoutFocus: !0 });
      }
      $.focus();
    }
  }, L = ({ panelIndex: P }) => {
    const F = s.value[P + 1], C = aa({
      menuId: o.value,
      id: F,
      suffix: "panel"
    }), $ = document.querySelectorAll(`#${C} a.a_menu__link`);
    $.length && $[0].focus();
  }, v = ({ panelId: P }) => {
    const F = aa({
      menuId: o.value,
      id: P,
      suffix: "link"
    }), C = document.getElementById(F);
    C && (i({ parentIds: [], withoutFocus: !0 }), C.focus());
  }, I = ({ EVENT: P, PANEL_ELEMENT: F, panelIndex: C, panelId: $ }) => {
    const H = F.querySelectorAll("a.a_menu__link");
    P.shiftKey ? document.activeElement === H[0] && (C > 0 ? b({ panelIndex: C, panelId: $ }) : v({ panelId: $ }), P.preventDefault()) : document.activeElement === H[H.length - 1] && (C < s.value.length - 1 ? L({ panelIndex: C }) : C > 0 ? b({ panelIndex: C, panelId: $ }) : v({ panelId: $ }), P.preventDefault());
  }, R = (P) => {
    const F = P || window.$event;
    (F.key === "Tab" || F.keyCode === X.tab) && z(s.value, (C, $) => {
      const H = aa({
        menuId: o.value,
        id: C,
        suffix: "panel"
      }), j = document.getElementById(H);
      if (j && j.contains(document.activeElement))
        return I({ EVENT: F, PANEL_ELEMENT: j, panelIndex: $, panelId: C }), !1;
    });
  };
  return {
    isDesktopSubMenuVisibleWhenMenuClosed: E,
    menuRef: h,
    removeListenerForKeydownDesktop: () => {
      document.removeEventListener("keydown", R);
    },
    removeListenerForKeydownMobile: () => {
      document.removeEventListener("keydown", S);
    },
    setListenerForKeydownDesktop: () => {
      document.addEventListener("keydown", R);
    },
    setListenerForKeydownMobile: () => {
      A.value && document.addEventListener("keydown", S);
    }
  };
}
function b$(e, {
  closeAllPanels: t = () => {
  },
  isMenuOpen: n = _(() => !1),
  isMobileWidth: r = B(!1),
  resetSearch: s = () => {
  },
  toggleMenu: i = () => {
  }
}) {
  const o = d(e, "isBodyFocusAfterClick"), u = B(!1), h = () => {
    o.value && (document.body.hasAttribute("tabindex") ? document.body.focus() : (document.body.setAttribute("tabindex", "-1"), document.body.focus(), document.body.removeAttribute("tabindex")));
  };
  return {
    clickMenuLink: ({ ctrlKey: E = !1, isPanelMain: p = !1 } = {}) => {
      u.value = !0, s(), h(), (!n.value || p) && t(), r.value && !E && i({ isOpen: !1 });
    },
    isMenuLinkClicked: u
  };
}
function L$(e, {
  isMenuOpen: t = B(!1),
  toggleMenu: n = () => {
  }
}) {
  const r = d(e, "isBlockerClickable"), s = d(e, "menuId"), {
    isMobileWidth: i
  } = En(), o = _(() => i.value ? {
    role: "dialog",
    ariaModal: !0
  } : {}), u = _(() => `${s.value}_header`);
  return {
    attributesMenuClick: _(() => {
      const A = {};
      return r.value && !t.value && (A.onClick = () => n({ isOpen: !0 }), A.class = "a_menu a_menu_clickable"), A;
    }),
    attributesMobile: o,
    headerId: u
  };
}
function v$({
  isMenuOpen: e = _(() => !1),
  panelParentsOpen: t = B([])
}) {
  return {
    isLeastOnePanelOpenAndMenuClosed: _(() => !e.value && t.value.length > 0)
  };
}
function I$(e, {
  dataKeyById: t = _(() => ({})),
  resetSearch: n = () => {
  }
}) {
  const r = d(e, "menuId"), s = B([]), i = _(() => s.value.length > 0), o = ({ parentId: E, panelParentsOpenLocal: p }) => {
    if (E) {
      p.unshift(E);
      const T = t.value[E][Al];
      return o({ parentId: T, panelParentsOpenLocal: p });
    }
    return p;
  };
  return {
    closeAllPanels: () => {
      s.value = [], n();
    },
    isSubMenuOpen: i,
    panelParentsOpen: s,
    setDefaultMenu: () => {
      n(), s.value = [];
    },
    togglePanel: ({ parentIds: E, parentId: p, isLinkInSearchPanel: T, withoutFocus: S }) => {
      if (E)
        s.value = E;
      else {
        const b = s.value.indexOf(p), L = o({ parentId: p, panelParentsOpenLocal: [] });
        !T && b !== -1 && L.splice(-1, 1), s.value = L;
      }
      S || Tm({
        menuId: r.value,
        panelId: fi(s.value) || ""
      }), n();
    }
  };
}
function y$(e, {
  menuRef: t = B(void 0),
  isMenuOpen: n = _(() => !1),
  panelParentsOpen: r = B([])
}) {
  const s = d(e, "menuId"), i = B({}), o = B(!1), u = ({ id: L }) => {
    const v = aa({
      menuId: s.value,
      id: L,
      suffix: "link"
    });
    return document.getElementById(v);
  }, h = ({ id: L }) => {
    const v = aa({
      menuId: s.value,
      id: L,
      suffix: "panel"
    });
    return document.getElementById(v);
  }, A = (L) => {
    t.value.contains(L.target) || (r.value = []);
  }, E = () => {
    o.value || (o.value = !0, document.addEventListener("click", A));
  }, p = () => {
    o.value = !1, document.removeEventListener("click", A);
  }, T = (L) => {
    if (i.value[L]) {
      i.value[L](), delete i.value[L];
      const v = h({ id: L });
      v.style.removeProperty("left"), v.style.removeProperty("top");
    }
  };
  return {
    destroyPopover: () => {
      z(i.value, (L, v) => {
        T(v);
      }), p();
    },
    startPopper: () => {
      if (n.value)
        return;
      E();
      const L = zp(i.value);
      z(r.value, (v) => {
        if (i.value[v]) {
          delete L[v];
          return;
        }
        const I = u({ id: v }), R = h({ id: v });
        !I || !R || (i.value[v] = Ll(
          I,
          R,
          () => {
            !I || !R || yl(
              I,
              R,
              {
                placement: "right",
                middleware: [
                  Il(),
                  vl({ limiter: Ru() })
                ]
              }
            ).then(({ x: g, y: D }) => {
              Object.assign(R.style, {
                left: `${g}px`,
                top: `${D}px`
              });
            });
          }
        ));
      }), z(L, (v, I) => {
        T(I);
      });
    }
  };
}
function g$(e, {
  removeListenerForKeydownMobile: t = () => {
  },
  toggleMenu: n = () => {
  }
}) {
  const r = d(e, "isMenuOpenInitial"), s = B(!1), {
    isMobileWidth: i
  } = En(), o = (E) => {
    E ? n({ isOpen: !1 }) : (n({ isOpen: r.value }), t());
  };
  return {
    destroyEventBusUpdateViewOnResize: () => {
      Ct.$on("updateViewOnResize", o);
    },
    initEventBusUpdateViewOnResize: () => {
      Ct.$on("updateViewOnResize", o);
    },
    initMenuOpenOrClose: () => {
      i.value ? n({ isOpen: !1 }) : n({ isOpen: r.value }), uu().then(() => {
        s.value = !0;
      });
    },
    isMenuInitialized: s,
    isMobileWidth: i
  };
}
function R$(e, {
  dataKeyById: t = _(() => ({}))
}) {
  const n = d(e, "menuId"), r = B(""), s = _(() => `${n.value}_search`), i = (p) => {
    r.value = p;
  }, o = _(() => !!r.value), u = _(() => o.value ? "display: none;" : void 0), h = () => {
    o.value && (r.value = "");
  }, A = _(() => Su(r.value)), E = _(() => {
    const p = [];
    if (o.value) {
      const T = new RegExp(A.value, "gi");
      z(t.value, (S) => {
        `${S[bt]}`.search(T) !== -1 && p.push(S);
      });
    }
    return p;
  });
  return {
    isSearchActive: o,
    itemsWithSearch: E,
    modelSearch: r,
    resetSearch: h,
    searchInputId: s,
    styleSearchPanelMain: u,
    updateModelSearch: i
  };
}
function O$({
  searchInputId: e = _(() => {
  }),
  toggleMenu: t = () => {
  }
}) {
  const n = () => {
    t({ isOpen: !0 }), window.isScrollDisabled || setTimeout(() => {
      sa({
        selector: `#${e.value}`
      });
    });
  };
  return {
    clickOnSearchBtn: n,
    keydownOnSearchBtn: (s) => {
      (s.keyCode === X.enter || s.keyCode === X.space) && (n(), s.stopPropagation(), s.preventDefault());
    }
  };
}
const C$ = 34, N$ = 20, vde = {
  name: "AMenu",
  provide() {
    return {
      keySlot: _(() => this.keySlot)
    };
  },
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link"
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    breadcrumbsTruncatedOffset: {
      type: Number,
      required: !1,
      default: () => C$ + N$
    },
    buttonToggleClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_transparent_secondary a_btn_small"
    },
    buttonToggleProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canChangeBodyClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    compareUrlCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    hasSearch: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBackdropMobileClickable: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBlockerClickable: {
      type: Boolean,
      required: !1
    },
    isBodyFocusAfterClick: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLinkTruncated: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMenuOpenInitial: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTranslated: {
      type: Boolean,
      required: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: String,
      required: !1,
      default: "group"
    },
    keyIcon: {
      type: String,
      required: !1,
      default: "icon"
    },
    keyId: {
      type: String,
      required: !1,
      default: "id"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyParent: {
      type: String,
      required: !1,
      default: "parent"
    },
    keySlot: {
      type: String,
      required: !1,
      default: void 0
    },
    menuId: {
      type: String,
      required: !1,
      default: () => lt("a_menu_")
    },
    showCountChildren: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useBackdropMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useEscapeForMobile: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  setup(e) {
    const t = d(e, "isLinkTruncated"), n = d(e, "showCountChildren"), r = d(e, "breadcrumbsTruncatedOffset"), {
      dataKeyById: s,
      dataProParent: i
    } = m$(e), {
      isSearchActive: o,
      itemsWithSearch: u,
      modelSearch: h,
      resetSearch: A,
      searchInputId: E,
      styleSearchPanelMain: p,
      updateModelSearch: T
    } = R$(e, {
      dataKeyById: s
    }), {
      closeAllPanels: S,
      isSubMenuOpen: b,
      panelParentsOpen: L,
      setDefaultMenu: v,
      togglePanel: I
    } = I$(e, {
      dataKeyById: s,
      resetSearch: A
    }), {
      closeMenu: R,
      isMenuOpen: g,
      removeBodyClasses: D,
      toggleMenu: w
    } = mm(e), {
      isDesktopSubMenuVisibleWhenMenuClosed: M,
      menuRef: P,
      removeListenerForKeydownDesktop: F,
      removeListenerForKeydownMobile: C,
      setListenerForKeydownDesktop: $,
      setListenerForKeydownMobile: H
    } = S$(e, {
      closeMenu: R,
      isMenuOpen: g,
      isSubMenuOpen: b,
      panelParentsOpen: L,
      togglePanel: I
    }), {
      clickOnSearchBtn: j,
      keydownOnSearchBtn: le
    } = O$({
      searchInputId: E,
      toggleMenu: w
    }), {
      attributesMenuClick: ee,
      attributesMobile: _e,
      headerId: ie
    } = L$(e, {
      isMenuOpen: g,
      toggleMenu: w
    }), {
      destroyEventBusUpdateViewOnResize: ue,
      initEventBusUpdateViewOnResize: Te,
      initMenuOpenOrClose: Pe,
      isMenuInitialized: Se,
      isMobileWidth: se
    } = g$(e, {
      removeListenerForKeydownMobile: C,
      toggleMenu: w
    }), {
      clickMenuLink: Oe,
      isMenuLinkClicked: ye
    } = b$(e, {
      closeAllPanels: S,
      isMenuOpen: g,
      isMobileWidth: se,
      resetSearch: A,
      toggleMenu: w
    }), {
      attributesBlockerClick: je
    } = A$(e, {
      closeAllPanels: S
    }), {
      activeRoutesIds: he,
      checkAllRoutes: ne,
      currentRoute: V
    } = p$(e, {
      dataKeyById: s,
      dataProParent: i,
      isMenuLinkClicked: ye,
      isMenuOpen: g,
      panelParentsOpen: L
    }), {
      destroyPopover: Q,
      startPopper: re
    } = y$(e, {
      menuRef: P,
      isMenuOpen: g,
      panelParentsOpen: L
    }), {
      isLeastOnePanelOpenAndMenuClosed: ve
    } = v$({
      isMenuOpen: g,
      panelParentsOpen: L
    }), {
      clickAttributesBackdrop: De,
      isBackdropVisible: qe
    } = E$(e, {
      isMenuOpen: g,
      isMobileWidth: se,
      toggleMenu: w
    });
    return rt(V, () => {
      ne();
    }, {
      immediate: !0,
      deep: !0
    }), rt(g, (Xe) => {
      Se.value && (A(), S(), Xe ? (Q(), H()) : C());
    }), rt(L, () => {
      re();
    }, {
      deep: !0
    }), rt(M, (Xe) => {
      Xe ? $() : F();
    }), et("activeRoutesIds", _(() => he.value)), et("clickMenuLink", Oe), et("isLinkTruncated", _(() => t.value)), et("isMenuOpen", _(() => g.value)), et("panelParentsOpen", L), et("showCountChildren", _(() => n.value)), et("togglePanel", I), et("breadcrumbsTruncatedOffset", _(() => r.value)), Pe(), Te(), Dt(() => {
      D(), ue(), Q(), F(), C();
    }), {
      activeRoutesIds: he,
      attributesBlockerClick: je,
      attributesMenuClick: ee,
      attributesMobile: _e,
      checkAllRoutes: ne,
      clickAttributesBackdrop: De,
      clickOnSearchBtn: j,
      dataKeyById: s,
      dataProParent: i,
      headerId: ie,
      isBackdropVisible: qe,
      isLeastOnePanelOpenAndMenuClosed: ve,
      isMenuOpen: g,
      isMobileWidth: se,
      isSearchActive: o,
      isSubMenuOpen: b,
      itemsWithSearch: u,
      keydownOnSearchBtn: le,
      menuRef: P,
      modelSearch: h,
      panelParentsOpen: L,
      removeBodyClasses: D,
      searchInputId: E,
      setDefaultMenu: v,
      styleSearchPanelMain: p,
      toggleMenu: w,
      togglePanel: I,
      updateModelSearch: T
    };
  },
  render() {
    return c("nav", {
      ref: "menuRef",
      id: this.menuId,
      "aria-labelledby": this.headerId,
      class: [
        "a_menu",
        {
          a_menu_sub_open: this.isSubMenuOpen,
          a_menu_open: this.isMenuOpen,
          a_menu_close: !this.isMenuOpen,
          a_menu_mobile: this.isMobileWidth
        }
      ],
      ...this.attributesMobile,
      ...this.attributesMenuClick
    }, [
      c("div", {
        class: "a_menu__navbar_top"
      }, [
        c(Fq, {
          buttonToggleProps: this.buttonToggleProps,
          canChangeBodyClass: this.canChangeBodyClass,
          class: this.buttonToggleClass,
          insideMenu: !0,
          menuId: this.menuId
        }),
        this.$slots.menuSearch && this.$slots.menuSearch(),
        this.hasSearch && c(vn, {
          id: this.searchInputId,
          class: "a_menu__navbar_top__search",
          modelValue: this.modelSearch,
          label: "_A_MENU_2_SEARCH_",
          "onUpdate:modelValue": this.updateModelSearch
        })
      ]),
      c("div", {
        class: "a_menu__panels__main",
        style: this.styleSearchPanelMain
      }, [
        c("div", {
          class: "a_menu__navbar_top_sub"
        }, [
          c(Ae, {
            id: this.headerId,
            class: "a_menu__navbar_top_sub__text",
            tag: "strong",
            text: "_A_MENU_2_MAIN_MENU_"
          }),
          this.hasSearch && c(ft, {
            role: "button",
            tabindex: 0,
            tag: "a",
            class: "a_menu__navbar_top_sub__search a_menu__link a_menu__link_btn",
            iconLeft: gl,
            iconClass: "a_menu__link__icon",
            title: "_A_MENU_2_OPEN_SEARCH_",
            textScreenReader: "_A_MENU_2_OPEN_SEARCH_",
            onClick: this.clickOnSearchBtn,
            onKeydown: this.keydownOnSearchBtn
          })
        ]),
        c(h$, {
          class: {
            a_menu__vertical_scroll_hidden: this.isLeastOnePanelOpenAndMenuClosed
          },
          disabled: this.isMenuOpen || this.isLeastOnePanelOpenAndMenuClosed
        }, () => [
          c(HE, {
            attributesBlockerClick: this.attributesBlockerClick,
            dataKeyById: this.dataKeyById,
            dataProParentChildren: this.dataProParent.children,
            isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
            isPanelMain: !0,
            isSearchActive: this.isSearchActive,
            keyGroup: this.keyGroup,
            keyIcon: this.keyIcon,
            menuId: this.menuId,
            paneIndex: "00",
            panelItems: this.dataProParent.main,
            panelParentsOpen: this.panelParentsOpen
          }, this.$slots)
        ]),
        c("div", {
          class: "a_menu__panels"
        }, [
          Object.keys(this.dataProParent.children).map((e, t) => c(HE, {
            key: e,
            attributesBlockerClick: {},
            breadcrumbsLinkClass: this.breadcrumbsLinkClass,
            breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
            dataKeyById: this.dataKeyById,
            dataProParentChildren: this.dataProParent.children,
            isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
            isSearchActive: this.isSearchActive,
            keyGroup: this.keyGroup,
            keyIcon: this.keyIcon,
            menuId: this.menuId,
            paneIndex: t,
            panelItems: this.dataProParent.children[e],
            panelParentsOpen: this.panelParentsOpen,
            parentId: e
          }, this.$slots))
        ])
      ]),
      c(_$, {
        breadcrumbsLinkClass: this.breadcrumbsLinkClass,
        breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
        dataProParentChildren: this.dataProParent.children,
        isSearchActive: this.isSearchActive,
        isSearchBreadcrumbsTruncated: this.isSearchBreadcrumbsTruncated,
        itemsWithSearch: this.itemsWithSearch,
        menuId: this.menuId,
        modelSearch: this.modelSearch
      }, this.$slots),
      this.isBackdropVisible ? c(la, {
        to: "body"
      }, [
        c("div", {
          class: "a_menu__backdrop a_backdrop a_backdrop_fade",
          "aria-hidden": !0,
          ...this.clickAttributesBackdrop
        })
      ]) : ""
    ]);
  }
};
function D$(e) {
  const t = d(e, "hideHeader"), n = d(e, "id");
  return {
    headerId: _(() => {
      if (!t.value)
        return `${n.value}_header`;
    })
  };
}
function bm(e) {
  const t = d(e, "bodyHtml"), n = d(e, "id");
  return {
    bodyHtmlId: _(() => {
      if (t.value)
        return `${n.value}_body_html`;
    })
  };
}
function B$(e) {
  const t = d(e, "close"), n = d(e, "isConfirm"), r = () => {
    n.value || t.value();
  };
  return {
    destroyEventBusCloseFromOutside: () => {
      Ct.$off("closeModal", r);
    },
    initEventBusCloseFromOutside: () => {
      Ct.$on("closeModal", r);
    }
  };
}
function w$(e) {
  const t = d(e, "disabled"), n = d(e, "loading");
  return {
    disabledLocal: _(() => t.value || n.value)
  };
}
function P$(e) {
  const t = d(e, "close"), n = d(e, "useEscape"), {
    isOnePopupOpen: r
  } = jc();
  return {
    pressEscape: (i) => {
      !n.value || r.value || (t.value(), i.preventDefault(), i.stopPropagation());
    }
  };
}
function x$(e) {
  const t = d(e, "focusStartId"), n = d(e, "focusStartId"), r = B(void 0), s = B(void 0), i = () => {
    const A = document.getElementById(t.value);
    A && A.focus();
  }, o = () => {
    var E;
    const A = ((E = s.value) == null ? void 0 : E.querySelectorAll(Ei)) || [];
    A.length !== 0 && A[0].focus();
  };
  return {
    modalRef: r,
    modalWrapperRef: s,
    setFocusByShowModal: () => {
      setTimeout(() => {
        n.value || (t.value ? i() : o());
      });
    },
    trapFocus: (A) => {
      const E = s.value.querySelectorAll(Ei);
      if (E.length === 0) {
        A.preventDefault();
        return;
      }
      const p = E[0], T = E[E.length - 1];
      A.shiftKey ? document.activeElement === p && (T.focus(), A.preventDefault()) : document.activeElement === T && (p.focus(), A.preventDefault());
    }
  };
}
function F$(e) {
  const t = d(e, "selectorClose"), n = d(e, "selectorCloseIds"), r = _(() => {
    const o = [];
    return n.value && (it(n.value) ? o.push(`#${n.value}`) : me(n.value) && z(n.value, (u) => {
      o.push(`#${u}`);
    })), t.value && (it(t.value) ? o.push(t.value) : me(t.value) && o.push(...t.value)), o;
  }), s = ({ selector: o }) => {
    const u = document.querySelector(o);
    return u ? (u.focus(), !0) : !1;
  };
  return {
    setFocusByDestroy: () => {
      if (!r.value.length)
        return;
      const o = pe(r.value);
      setTimeout(() => {
        z(o, (u) => {
          if (s({ selector: u }))
            return !1;
        });
      }, 300);
    }
  };
}
function M$({
  removeListenerForKeydown: e = () => {
  },
  setFocusByDestroy: t = () => {
  }
}) {
  return {
    hideModal: () => {
      document.body.classList.remove("a_modal_open"), t(), e();
    }
  };
}
function q$({
  pressEscape: e = () => {
  },
  trapFocus: t = () => {
  }
}) {
  const n = (i) => {
    const o = i || window.$event;
    o.key === "Escape" || o.keyCode === X.escape ? e(i) : (o.key === "Tab" || o.keyCode === X.tab) && t(o);
  };
  return {
    setListenerForKeydown: () => {
      document.addEventListener("keydown", n);
    },
    removeListenerForKeydown: () => {
      document.removeEventListener("keydown", n);
    }
  };
}
function $$(e, {
  checkOpenedModals: t = () => {
  },
  setFocusByShowModal: n = () => {
  },
  setListenerForKeydown: r = () => {
  }
}) {
  const s = d(e, "isModalHidden");
  return {
    showModal: () => {
      s.value || (t(), document.body.classList.add("a_modal_open"), n(), r());
    }
  };
}
function k$(e) {
  const t = d(e, "size");
  return {
    sizeClass: _(() => {
      if (t.value)
        return `a_modal_${t.value}`;
    })
  };
}
function U$(e) {
  const t = d(e, "stop");
  return {
    clickWrapperStoppPropagationEventMap: _(() => t.value ? {
      onClick: (r) => r.stopPropagation()
    } : {})
  };
}
function H$(e) {
  const t = d(e, "backdropZIndex"), n = d(e, "zIndex"), r = B(0), s = _(() => {
    const u = {};
    return n.value ? u["--a_modal_zindex"] = n.value : r.value > 2 && (u["--a_modal_zindex"] = 1055 + r.value - 1), u;
  }), i = _(() => {
    const u = {};
    return t.value ? u["--a__backdrop_zindex"] = t.value : r.value > 2 && (u["--a__backdrop_zindex"] = 1050 + r.value - 1), u;
  });
  return {
    checkOpenedModals: () => {
      const u = document.querySelectorAll(".a_backdrop");
      r.value = (u == null ? void 0 : u.length) || 0;
    },
    countOpenedModals: r,
    stylesBackdrop: i,
    stylesZIndexModal: s
  };
}
const ge = B({
  propsDefault: {
    closeButtonClass: "a_btn a_btn_secondary",
    closeButtonText: "_A_MODAL_BTN_CANCEL_",
    closeButtonTextScreenReaderFooter: "_A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_",
    closeButtonTextScreenReaderHeader: "_A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_",
    headerTag: "h2",
    idPrefix: void 0,
    isCloseButtonHide: !1,
    isDataFormHide: !1,
    isDataFormRender: !0,
    isFooterSticky: !1,
    isRequired: !1,
    isSaveButtonHide: !1,
    modalClass: void 0,
    modalStyle: void 0,
    saveButtonClass: "a_btn a_btn_primary",
    saveButtonText: "_A_MODAL_BTN_SAVE_",
    saveButtonTextScreenReader: "_A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_",
    selectorClose: void 0,
    selectorCloseIds: void 0,
    size: void 0,
    textRequired: void 0,
    useEscape: !0
  }
}), Ide = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    ge.value.propsDefault = {
      ...ge.value.propsDefault,
      ...t
    };
  }
}, wu = {
  name: "AModal",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    bodyHtml: {
      type: String,
      required: !1,
      default: ""
    },
    bodyHtmlClass: {
      type: [String, Array, Object],
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideFooter: {
      type: Boolean,
      required: !1
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_modal_")
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isCloseButtonHide
    },
    isConfirm: {
      type: Boolean,
      required: !1
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isFooterSticky
    },
    isModalHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalStyle
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorCloseIds
    },
    showCloseButtonHeader: {
      type: Boolean,
      required: !1,
      default: !0
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => ge.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = d(e, "isModalHidden"), {
      checkOpenedModals: n,
      stylesBackdrop: r,
      stylesZIndexModal: s
    } = H$(e), {
      bodyHtmlId: i
    } = bm(e), {
      destroyEventBusCloseFromOutside: o,
      initEventBusCloseFromOutside: u
    } = B$(e), {
      headerId: h
    } = D$(e), {
      sizeClass: A
    } = k$(e), {
      disabledLocal: E
    } = w$(e), {
      modalRef: p,
      modalWrapperRef: T,
      setFocusByShowModal: S,
      trapFocus: b
    } = x$(e), {
      setFocusByDestroy: L
    } = F$(e), {
      pressEscape: v
    } = P$(e), {
      setListenerForKeydown: I,
      removeListenerForKeydown: R
    } = q$({
      pressEscape: v,
      trapFocus: b
    }), {
      showModal: g
    } = $$(e, {
      checkOpenedModals: n,
      setFocusByShowModal: S,
      setListenerForKeydown: I
    }), {
      hideModal: D
    } = M$({
      removeListenerForKeydown: R,
      setFocusByDestroy: L
    }), {
      clickWrapperStoppPropagationEventMap: w
    } = U$(e);
    return rt(t, () => {
      t.value ? D() : g();
    }), u(), Wr(() => {
      g();
    }), Dt(() => {
      o();
    }), fp(() => {
      D();
    }), {
      bodyHtmlId: i,
      clickWrapperStoppPropagationEventMap: w,
      disabledLocal: E,
      headerId: h,
      modalRef: p,
      modalWrapperRef: T,
      sizeClass: A,
      stylesBackdrop: r,
      stylesZIndexModal: s
    };
  },
  render() {
    const e = this.hideFooter ? "" : c("div", {
      ref: "modal_footer",
      class: [
        "a_modal_footer",
        {
          a_modal_footer_sticky: this.isFooterSticky
        }
      ]
    }, [
      c(pm, {
        alwaysTranslate: this.alwaysTranslate,
        isLoading: this.loading
      }, () => [
        c("div", {
          class: "a_modal_footer_actions"
        }, [
          this.$slots.modalFooterPrepend && this.$slots.modalFooterPrepend(),
          !this.isSaveButtonHide && this.save && c(be, {
            id: this.saveButtonId,
            alwaysTranslate: this.alwaysTranslate,
            class: this.saveButtonClass,
            disabled: this.disabledLocal || this.disabledSave,
            extra: this.extra,
            html: this.saveButtonText,
            textAriaHidden: !0,
            textScreenReader: this.saveButtonTextScreenReader,
            type: "button",
            ...this.saveButtonAttributes,
            onClick: this.save
          }),
          !this.isCloseButtonHide && c(be, {
            id: this.closeButtonId,
            alwaysTranslate: this.alwaysTranslate,
            class: this.closeButtonClass,
            disabled: this.disabledLocal,
            extra: this.extra,
            html: this.closeButtonText,
            textAriaHidden: !0,
            textScreenReader: this.closeButtonTextScreenReaderFooter,
            type: "button",
            ...this.closeButtonAttributes,
            onClick: () => this.close(!0)
          }),
          this.$slots.modalFooterAppend && this.$slots.modalFooterAppend()
        ])
      ])
    ]);
    return c(la, {
      to: "body"
    }, [
      c("div", {
        ref: "modalWrapperRef",
        ...this.clickWrapperStoppPropagationEventMap
      }, [
        c("div", {
          ref: "modalRef",
          id: this.id,
          class: ["a_modal", this.modalClass, {
            a_modal_confirm: this.isConfirm,
            a_modal_show: !this.isModalHidden
          }],
          role: "dialog",
          ariaModal: !0,
          "aria-labelledby": this.headerId,
          "aria-describedby": this.bodyHtmlId,
          style: [
            this.modalStyle,
            this.stylesZIndexModal
          ],
          ...this.$attrs
        }, [
          c("div", {
            class: ["a_modal_dialog a_modal_dialog_scrollable", this.sizeClass]
          }, [
            c("div", {
              class: [
                "a_modal_content",
                {
                  a_modal_content_with_footer_sticky: this.isFooterSticky
                }
              ]
            }, [
              this.hideHeader ? "" : c("div", {
                ref: "modal_header",
                class: "a_modal_header"
              }, [
                c("div", {
                  id: this.headerId
                }, [
                  this.$slots.modalHeader ? this.$slots.modalHeader() : "",
                  this.headerText ? c(this.headerTag, {
                    class: "a_modal_title"
                  }, [
                    c(Ae, {
                      alwaysTranslate: this.alwaysTranslate,
                      tag: "span",
                      html: this.headerText,
                      extra: this.extra
                    })
                  ]) : ""
                ]),
                this.showCloseButtonHeader ? c(be, {
                  alwaysTranslate: this.alwaysTranslate,
                  class: "a_btn_close",
                  disabled: this.disabledLocal,
                  textScreenReader: this.closeButtonTextScreenReaderHeader,
                  title: this.closeButtonTextScreenReaderHeader,
                  type: "button",
                  onClick: () => this.close(!0)
                }) : ""
              ]),
              c("div", {
                ref: "modal_body",
                class: "a_modal_body"
              }, [
                c("div", {
                  ref: "modal_body",
                  class: "a_modal_body__content"
                }, [
                  this.bodyHtml && c(Ae, {
                    id: this.bodyHtmlId,
                    alwaysTranslate: this.alwaysTranslate,
                    class: this.bodyHtmlClass,
                    html: this.bodyHtml,
                    extra: this.extra
                  }),
                  this.$slots.modalBody && this.$slots.modalBody()
                ]),
                this.isFooterSticky ? e : ""
              ]),
              this.isFooterSticky ? "" : e
            ])
          ])
        ])
      ]),
      !this.isModalHidden && c("div", {
        class: [
          "a_backdrop a_backdrop_fade a_backdrop_show",
          {
            a_backdrop_confirm: this.isConfirm
          }
        ],
        style: this.stylesBackdrop
      })
    ]);
  }
};
function V$({
  isModalHidden: e = B(!1)
}) {
  const t = () => {
    e.value = !0;
  };
  return {
    destroyEventBusCloseFromOutside: () => {
      Ct.$off("closeModalConfirm", t);
    },
    initEventBusCloseFromOutside: () => {
      Ct.$on("closeModalConfirm", t);
    }
  };
}
const yde = {
  name: "AModalConfirm",
  setup() {
    const {
      closeConfirm: e,
      confirmOptions: t,
      isModalHidden: n
    } = Zc(), {
      destroyEventBusCloseFromOutside: r,
      initEventBusCloseFromOutside: s
    } = V$({
      isModalHidden: n
    }), i = _(() => ({
      isModalHidden: n.value,
      isConfirm: !0,
      ...t.value,
      showCloseButtonHeader: !1,
      close: e
    }));
    return s(), Dt(() => {
      r();
    }), {
      modalProps: i
    };
  },
  render() {
    return c(wu, this.modalProps, this.$slots);
  }
};
function W$(e) {
  const t = d(e, "dataForm");
  return {
    hasDataForm: _(() => t.value.length > 0)
  };
}
function G$({ emit: e }) {
  return {
    changeLocal: (r) => {
      e("change", r);
    },
    updateModelLocal: (r) => {
      e("update:modelValue", r);
    }
  };
}
const K$ = {
  name: "AModalForm",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    bodyHtml: {
      type: String,
      required: !1,
      default: ""
    },
    bodyHtmlClass: {
      type: [String, Array, Object],
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    dataForm: {
      type: Array,
      required: !1,
      default: () => []
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideFooter: {
      type: Boolean,
      required: !1
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_modal_form_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.idPrefix
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isCloseButtonHide
    },
    isConfirm: {
      type: Boolean,
      required: !1
    },
    isDataFormHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isDataFormHide
    },
    isDataFormRender: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isDataFormRender
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isFooterSticky
    },
    isModalHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isRequired: {
      type: Boolean,
      required: !1,
      default: ge.value.propsDefault.isRequired
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalStyle
    },
    modelValue: {
      type: Object,
      required: !1,
      default: void 0
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorCloseIds
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => ge.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: void 0
    },
    textRequired: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.textRequired
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "change",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      bodyHtmlId: n
    } = bm(e), {
      hasDataForm: r
    } = W$(e), {
      changeLocal: s,
      updateModelLocal: i
    } = G$(t);
    return {
      bodyHtmlId: n,
      changeLocal: s,
      hasDataForm: r,
      updateModelLocal: i
    };
  },
  render() {
    return c(wu, {
      alwaysTranslate: this.alwaysTranslate,
      backdropZIndex: this.backdropZIndex,
      close: this.close,
      closeButtonClass: this.closeButtonClass,
      closeButtonId: this.closeButtonId,
      closeButtonText: this.closeButtonText,
      closeButtonTextScreenReaderFooter: this.closeButtonTextScreenReaderFooter,
      closeButtonTextScreenReaderHeader: this.closeButtonTextScreenReaderHeader,
      disabled: this.disabled,
      disabledSave: this.disabledSave,
      extra: this.extra,
      focusStartId: this.focusStartId,
      headerTag: this.headerTag,
      headerText: this.headerText,
      hideFooter: this.hideFooter,
      hideHeader: this.hideHeader,
      id: this.id,
      isCloseButtonHide: this.isCloseButtonHide,
      isConfirm: this.isConfirm,
      isFooterSticky: this.isFooterSticky,
      isModalHidden: this.isModalHidden,
      isSaveButtonHide: this.isSaveButtonHide,
      loading: this.loading,
      modalClass: this.modalClass,
      modalStyle: this.modalStyle,
      save: this.save,
      saveButtonClass: this.saveButtonClass,
      saveButtonId: this.saveButtonId,
      saveButtonText: this.saveButtonText,
      saveButtonTextScreenReader: this.saveButtonTextScreenReader,
      selectorClose: this.selectorClose,
      selectorCloseIds: this.selectorCloseIds,
      size: this.size,
      stop: this.stop,
      useEscape: this.useEscape,
      useFocusOnStart: this.useFocusOnStart,
      zIndex: this.zIndex,
      "aria-describedby": this.bodyHtmlId
    }, {
      ...this.$slots || {},
      modalBody: () => [
        this.$slots.modalBodyPrepend && this.$slots.modalBodyPrepend(),
        this.bodyHtml && c(Ae, {
          id: this.bodyHtmlId,
          alwaysTranslate: this.alwaysTranslate,
          class: this.bodyHtmlClass,
          html: this.bodyHtml,
          extra: this.extra
        }),
        this.hasDataForm && c(Nu, {
          alwaysTranslate: this.alwaysTranslate,
          modelValue: this.modelValue,
          data: this.dataForm,
          errors: this.errors,
          idPrefix: this.idPrefix,
          isRequired: this.isRequired,
          textRequired: this.textRequired,
          textErrorHeader: this.textErrorHeader,
          isHide: this.isDataFormHide,
          isRender: this.isDataFormRender,
          "onUpdate:modelValue": this.updateModelLocal,
          onChange: this.changeLocal
        }, this.$slots),
        this.$slots.modalBodyAppend && this.$slots.modalBodyAppend()
      ]
    });
  }
};
function j$(e) {
  const t = d(e, "stepIndex"), n = d(e, "stepActiveComputed"), r = _(() => n.value === t.value), s = _(() => t.value < n.value);
  return {
    isStepActive: r,
    isStepBeforeActive: s
  };
}
function z$(e, {
  isStepDisabled: t = _(() => !1),
  isStepActive: n = _(() => !1)
}) {
  const r = d(e, "id"), s = d(e, "stepIndex"), i = _(() => t.value || n.value ? -1 : 0), o = _(() => n.value ? {
    "aria-current": "step"
  } : {}), u = _(() => `${r.value}_step_text_${s.value}`), h = _(() => `${r.value}_step_status_text_${s.value}`);
  return {
    ariaCurrentAttributes: o,
    tabindex: i,
    stepStatusTextId: h,
    stepTextId: u
  };
}
function Lm(e) {
  const t = d(e, "id"), n = d(e, "stepIndex");
  return {
    contentId: _(() => `${t.value}_${n.value}_content`)
  };
}
function Y$(e) {
  const t = d(e, "step"), n = d(e, "stepIndex"), r = d(e, "stepActiveComputed"), s = d(e, "isForwardStepButtonDisabled"), i = d(e, "isBackStepButtonDisabled"), o = d(e, "isForwardButtonDisabled"), u = d(e, "isBackButtonDisabled"), h = _(() => n.value < r.value), A = _(() => n.value > r.value);
  return {
    isStepDisabled: _(() => t.value.disabled ? !0 : A.value ? o.value || s.value : h.value ? u.value || i.value : !1)
  };
}
function X$(e) {
  const t = d(e, "step"), n = d(e, "stepIconError"), r = d(e, "stepIconErrorText"), s = d(e, "stepIconWarning"), i = d(e, "stepIconWarningText"), o = _(() => {
    if (t.value.error)
      return n.value;
    if (t.value.warning)
      return s.value;
  }), u = _(() => {
    if (t.value.error)
      return r.value;
    if (t.value.warning)
      return i.value;
  });
  return {
    iconErrorWarning: o,
    titleIconErrorWarning: u
  };
}
function Z$(e, { emit: t }, {
  isStepDisabled: n = _(() => !1)
}) {
  const r = d(e, "step"), s = d(e, "stepIndex"), i = ({ $event: u }) => {
    n.value || t("onStepClick", {
      $event: u,
      step: r.value,
      stepIndex: s.value
    });
  };
  return {
    onClick: i,
    onKeydown: (u) => {
      (u.keyCode === X.enter || u.keyCode === X.space) && (i({ $event: u }), u.preventDefault(), u.stopPropagation());
    }
  };
}
function J$(e, {
  isStepActive: t = _(() => !1),
  isStepBeforeActive: n = _(() => !1),
  isStepDisabled: r = _(() => !1)
}) {
  const s = d(e, "step");
  return {
    linkClass: _(() => ["a_wizard__step__link", {
      active: t.value,
      before_active: n.value,
      default: r.value,
      done: !t.value && !r.value,
      error: s.value.error,
      warning: s.value.warning
    }])
  };
}
function Q$(e, {
  isStepActive: t = _(() => !1)
}) {
  const n = d(e, "isMobile"), r = d(e, "isStepNumberVisible"), s = d(e, "showOnlyActiveStepMobile"), i = d(e, "stepIndex"), o = _(() => i.value + 1), u = _(() => n.value && s.value && t.value), h = _(() => r.value ? u.value ? "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_" : o.value : "");
  return {
    stepNumber: o,
    stepNumberText: h
  };
}
function ek(e, {
  isStepActive: t = _(() => !1),
  isStepBeforeActive: n = _(() => !1)
}) {
  return {
    statusText: _(() => t.value ? "_A_WIZARD_STEP_ACTIVE_" : n.value ? "_A_WIZARD_STEP_VISITED_" : "_A_WIZARD_STEP_UPCOMING_")
  };
}
const tk = {
  name: "AWizardStep",
  props: {
    extra: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isMobile: {
      type: Boolean,
      required: !0
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    step: {
      type: Object,
      required: !0
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: Lu
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: bu
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    stepIndex: {
      type: Number,
      required: !0
    },
    stepsCount: {
      type: Number,
      required: !0
    }
  },
  emits: [
    "onStepClick"
  ],
  setup(e, t) {
    const {
      isStepActive: n,
      isStepBeforeActive: r
    } = j$(e), {
      stepNumber: s,
      stepNumberText: i
    } = Q$(e, {
      isStepActive: n
    }), {
      isStepDisabled: o
    } = Y$(e), {
      linkClass: u
    } = J$(e, {
      isStepActive: n,
      isStepBeforeActive: r,
      isStepDisabled: o
    }), {
      onClick: h,
      onKeydown: A
    } = Z$(e, t, {
      isStepDisabled: o
    }), {
      ariaCurrentAttributes: E,
      stepTextId: p,
      stepStatusTextId: T,
      tabindex: S
    } = z$(e, {
      isStepDisabled: o,
      isStepActive: n
    }), {
      contentId: b
    } = Lm(e), {
      statusText: L
    } = ek(e, {
      isStepActive: n,
      isStepBeforeActive: r
    }), {
      iconErrorWarning: v,
      titleIconErrorWarning: I
    } = X$(e);
    return {
      ariaCurrentAttributes: E,
      contentId: b,
      iconErrorWarning: v,
      isStepActive: n,
      isStepDisabled: o,
      linkClass: u,
      onClick: h,
      onKeydown: A,
      statusText: L,
      stepNumber: s,
      stepNumberText: i,
      stepStatusTextId: T,
      stepTextId: p,
      tabindex: S,
      titleIconErrorWarning: I
    };
  },
  render() {
    return c(
      "li",
      {
        class: [
          "a_wizard__step",
          {
            a_wizard__step_active: this.isStepActive
          }
        ]
      },
      [
        c(be, {
          "aria-controls": this.contentId,
          "aria-describedby": this.stepStatusTextId,
          ariaDisabled: this.isStepDisabled,
          class: this.linkClass,
          classDefault: "",
          classDisabled: "disabled",
          role: "button",
          tabindex: this.tabindex,
          title: this.step.title,
          type: "link",
          onClick: this.onClick,
          onKeydown: this.onKeydown,
          ...this.ariaCurrentAttributes
        }, () => this.step.slotLabel && this.$slots[this.step.slotLabel] ? this.$slots[this.step.slotLabel]({
          isStepActive: this.isStepActive,
          isStepDisabled: this.isStepDisabled,
          step: this.step,
          stepIndex: this.stepIndex,
          stepNumber: this.stepNumber,
          stepTextId: this.stepTextId
        }) : [
          this.isStepNumberVisible ? c("span", {
            class: "a_wizard__step__number"
          }, [
            this.step.icon ? c(ut, {
              class: "a_wizard__step__number__icon",
              icon: this.step.icon
            }) : c(Ae, {
              class: "a_wizard__step__number__text",
              tag: "span",
              text: this.stepNumberText,
              extra: {
                stepActive: this.stepNumber,
                stepsCount: this.stepsCount
              }
            })
          ]) : "",
          c("span", {
            class: "a_wizard__step__text"
          }, [
            c(Ae, {
              id: this.stepTextId,
              class: "a_wizard__step__text__child",
              extra: this.extra,
              html: this.step.label,
              tag: "span"
            }),
            this.iconErrorWarning ? c(be, {
              iconClass: "a_wizard__step__text__icon",
              iconLeft: this.iconErrorWarning,
              tag: "span",
              textScreenReader: this.titleIconErrorWarning,
              title: this.titleIconErrorWarning,
              type: "text"
            }) : ""
          ])
        ]),
        c(Ae, {
          id: this.stepStatusTextId,
          class: "a_sr_only",
          tag: "span",
          text: this.statusText
        }),
        c("span", {
          class: "a_wizard__step__divider",
          ariaHidden: !0
        })
      ]
    );
  }
};
function nk(e) {
  const t = d(e, "stepIndex"), n = d(e, "stepActiveComputed");
  return {
    isStepActive: _(() => t.value === n.value)
  };
}
function rk(e) {
  const t = d(e, "id"), n = d(e, "stepIndex");
  return {
    focusId: _(() => `${t.value}_${n.value}_focus`)
  };
}
function ak(e, {
  isStepActive: t = _(() => !1)
}) {
  const n = d(e, "stepsVisitedComputed"), r = d(e, "stepIndex"), s = _(() => t.value ? "" : "display: none;");
  return {
    isStepRender: _(() => t.value || n.value[r.value]),
    styleStep: s
  };
}
const sk = {
  name: "AWizardTab",
  props: {
    extra: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    step: {
      type: Object,
      required: !0
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    stepIndex: {
      type: Number,
      required: !0
    },
    stepsVisitedComputed: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    wizardAriaDescribedby: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      isStepActive: t
    } = nk(e), {
      isStepRender: n,
      styleStep: r
    } = ak(e, {
      isStepActive: t
    }), {
      focusId: s
    } = rk(e), {
      contentId: i
    } = Lm(e);
    return {
      contentId: i,
      focusId: s,
      isStepRender: n,
      styleStep: r
    };
  },
  render() {
    return c("div", {
      id: this.contentId
    }, [
      this.isStepRender && c("div", {
        class: "a_wizard__tab_pane",
        style: this.styleStep
      }, [
        c("div", {
          id: this.focusId,
          class: "a_sr_only",
          tabindex: "-1",
          "aria-describedby": this.wizardAriaDescribedby
        }),
        this.$slots[this.step.slot] && this.$slots[this.step.slot]({
          step: this.step,
          stepIndex: this.stepIndex
        })
      ])
    ]);
  }
};
function ik(e, {
  isStepActiveFirst: t = _(() => !1),
  isStepActiveLast: n = _(() => !1)
}) {
  const r = d(e, "isBackButtonDisabled"), s = d(e, "isForwardButtonDisabled"), i = _(() => t.value ? !0 : r.value), o = _(() => n.value ? !0 : s.value);
  return {
    isBackButtonDisabledLocal: i,
    isForwardButtonDisabledLocal: o
  };
}
function lk(e, { emit: t }) {
  return {
    goOneStepBack: () => {
      t("goOneStepBack");
    },
    goOneStepForward: () => {
      t("goOneStepForward");
    }
  };
}
function ok(e) {
  const t = d(e, "steps"), n = d(e, "stepActiveComputed"), r = _(() => n.value === 0), s = _(() => n.value === t.value.length - 1);
  return {
    isStepActiveFirst: r,
    isStepActiveLast: s
  };
}
function uk(e, {
  isStepActiveFirst: t = _(() => !1),
  isStepActiveLast: n = _(() => !1)
}) {
  const r = d(e, "isForwardButtonHide"), s = d(e, "isBackButtonHide"), i = d(e, "isForwardLastButtonHide"), o = d(e, "isBackFirstButtonHide"), u = _(() => s.value ? !0 : t.value && o.value), h = _(() => r.value ? !0 : n.value && i.value);
  return {
    isBackButtonHideLocal: u,
    isForwardButtonHideLocal: h
  };
}
const _k = {
  name: "AWizardToolbar",
  props: {
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    steps: {
      type: Array,
      required: !0
    }
  },
  emits: [
    "goOneStepBack",
    "goOneStepForward"
  ],
  setup(e, t) {
    const {
      isStepActiveFirst: n,
      isStepActiveLast: r
    } = ok(e), {
      isBackButtonDisabledLocal: s,
      isForwardButtonDisabledLocal: i
    } = ik(e, {
      isStepActiveFirst: n,
      isStepActiveLast: r
    }), {
      isBackButtonHideLocal: o,
      isForwardButtonHideLocal: u
    } = uk(e, {
      isStepActiveFirst: n,
      isStepActiveLast: r
    }), {
      goOneStepBack: h,
      goOneStepForward: A
    } = lk(e, t);
    return {
      goOneStepBack: h,
      goOneStepForward: A,
      isBackButtonDisabledLocal: s,
      isBackButtonHideLocal: o,
      isForwardButtonDisabledLocal: i,
      isForwardButtonHideLocal: u
    };
  },
  render() {
    return c(
      "div",
      {
        class: "a_wizard__toolbar"
      },
      [
        !this.isBackButtonHideLocal && c(be, {
          class: this.backButtonClass,
          disabled: this.isBackButtonDisabledLocal,
          extra: this.extra,
          iconLeft: this.backButtonIconLeft,
          iconRight: this.backButtonIconRight,
          loading: this.isButtonsLoading,
          text: this.backButtonText,
          textAriaHidden: !0,
          textScreenReader: this.backButtonTitle,
          title: this.backButtonTitle,
          type: "button",
          onClick: this.goOneStepBack,
          ...this.backButtonAttributes
        }),
        !this.isForwardButtonHideLocal && c(be, {
          class: this.forwardButtonClass,
          disabled: this.isForwardButtonDisabledLocal,
          extra: this.extra,
          iconLeft: this.forwardButtonIconLeft,
          iconRight: this.forwardButtonIconRight,
          loading: this.isButtonsLoading,
          text: this.forwardButtonText,
          textAriaHidden: !0,
          textScreenReader: this.forwardButtonTitle,
          title: this.forwardButtonTitle,
          type: "button",
          onClick: this.goOneStepForward,
          ...this.forwardButtonAttributes
        }),
        this.$slots.toolbar && this.$slots.toolbar()
      ]
    );
  }
};
function dk(e, {
  stepActiveComputed: t = _(() => 0)
}) {
  const n = d(e, "ariaLabel"), r = d(e, "ariaLabelSteps"), s = d(e, "extra"), i = d(e, "id"), {
    getTranslationAttributes: o,
    getTranslatedText: u,
    isPlaceholderTranslate: h
  } = Ms(), A = _(() => h(n.value)), E = _(() => h(r.value)), p = _(() => {
    if (A.value)
      return u({
        placeholder: n.value,
        extra: s.value
      });
  }), T = _(() => {
    if (E.value)
      return u({
        placeholder: r.value,
        extra: s.value
      });
  }), S = _(() => o({
    attr: "aria-label",
    value: n.value,
    translation: p.value,
    isTranslate: A.value
  })), b = _(() => o({
    attr: "aria-label",
    value: r.value,
    translation: T.value,
    isTranslate: E.value
  })), L = _(() => `${i.value}_progressbar`), v = _(() => `${i.value}_step_text_${t.value}`), I = _(() => `${L.value} ${v.value}`);
  return {
    ariaLabelAttributes: S,
    ariaLabelStepsAttributes: b,
    idProgressbar: L,
    wizardAriaDescribedby: I
  };
}
function ck(e, {
  subTypeLocal: t = _(() => {
  })
}) {
  const n = d(e, "type"), r = d(e, "isStepsJustified");
  return {
    classWizard: _(() => {
      let i = `a_wizard a_wizard_${n.value}`;
      return r.value && (i += " a_wizard_justified"), t.value && (i += ` a_wizard_${n.value}_${sm.snakeCase(t.value)}`), i;
    })
  };
}
function fk(e, { emit: t }, {
  stepActiveComputed: n = _(() => 0),
  stepActiveLocal: r = B(0),
  stepsVisitedLocal: s = B({})
}) {
  const i = d(e, "isControlOutside"), o = d(e, "steps"), u = ({ stepIndex: T, step: S }) => {
    i.value ? t("goStepBack", {
      step: S,
      targetStepIndex: T,
      currentStepIndex: n.value
    }) : r.value = T;
  }, h = ({ stepIndex: T, step: S }) => {
    i.value ? t("goStepForward", {
      step: S,
      targetStepIndex: T,
      currentStepIndex: n.value
    }) : (r.value = T, s.value[T] = !0);
  };
  return {
    goOneStepBack: () => {
      n.value !== 0 && u({
        stepIndex: n.value - 1
      });
    },
    goOneStepForward: () => {
      n.value >= o.value.length - 1 || h({
        stepIndex: n.value + 1
      });
    },
    onStepClick: ({ stepIndex: T, step: S }) => {
      n.value !== T && (T < n.value ? u({ stepIndex: T, step: S }) : h({ stepIndex: T, step: S }));
    }
  };
}
function hk(e) {
  const t = d(e, "hasFocusJump"), n = d(e, "id"), r = B([]);
  return {
    setFocusToActiveStep: ({ stepActive: i }) => {
      t.value && !window.isScrollDisabled && setTimeout(() => {
        const o = `#${n.value}_${i}_focus`;
        sa({
          selector: o
        });
      });
    },
    wizardTabsRef: r
  };
}
function Ak(e, {
  setFocusToActiveStep: t = () => {
  }
}) {
  const n = d(e, "stepActive"), r = d(e, "stepsVisited"), s = d(e, "isControlOutside"), i = B(!1), o = B(0), u = B({
    0: !0
  }), h = _(() => s.value ? n.value : o.value), A = _(() => s.value ? r.value : u.value), E = () => {
    s.value || ae(n.value) || (o.value = n.value, u.value = {
      [n.value]: !0
    }), setTimeout(() => {
      i.value = !0;
    });
  };
  return rt(h, (p) => {
    i.value && t({ stepActive: p });
  }), {
    initStepActive: E,
    stepActiveComputed: h,
    stepActiveLocal: o,
    stepsVisitedComputed: A,
    stepsVisitedLocal: u
  };
}
function Ek(e) {
  const t = d(e, "isMobile"), {
    isMobileWidth: n
  } = En();
  return {
    isMobileLocal: _(() => t.value || n.value)
  };
}
function pk(e, {
  stepActiveComputed: t = _(() => 0)
}) {
  const n = d(e, "steps"), r = _(() => n.value.length);
  return {
    stepActiveNumber: _(() => t.value + 1),
    stepsCount: r
  };
}
function Tk(e) {
  const t = d(e, "toolbarBottomTeleportId"), n = _(() => !!t.value);
  return {
    toolbarBottomTeleportSelector: _(() => {
      if (n.value)
        return `#${t.value}`;
    }),
    useTeleportToolbarBottom: n
  };
}
function mk(e) {
  const t = d(e, "subType"), n = d(e, "type");
  return {
    subTypeLocal: _(() => {
      if (t.value)
        return t.value;
      if (n.value === "line")
        return "square";
    })
  };
}
const Sk = {
  name: "AWizard",
  props: {
    ariaLabel: {
      type: String,
      required: !1,
      default: "_A_WIZARD_ARIA_LABEL_"
    },
    ariaLabelSteps: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_ARIA_LABEL_"
    },
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_"
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_TITLE_"
    },
    extra: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_"
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_TITLE_"
    },
    hasFocusJump: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_wizard_")
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isControlOutside: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMobile: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isStepsJustified: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isToolbarBottom: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isToolbarTop: {
      type: Boolean,
      required: !1,
      default: !1
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    stepActive: {
      type: Number,
      required: !1,
      default: void 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: Lu
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: bu
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    steps: {
      type: Array,
      required: !1,
      default: () => []
    },
    stepsProgressbarText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_"
    },
    stepsVisited: {
      type: Object,
      required: !1,
      default: void 0
    },
    subType: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e, t) => {
        const n = {
          arrows: [],
          basic: [],
          line: ["square", "circle", "square-bordered", "circle-bordered"],
          round: []
        };
        if (t) {
          if (t.type in n)
            return ae(e) || n[t.type].indexOf(e) !== -1;
        } else
          return ["square", "circle", "square-bordered", "circle-bordered"].indexOf(e) !== -1;
        return !1;
      }
    },
    toolbarBottomTeleportId: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "basic",
      validator: (e) => ["arrows", "line", "round", "basic"].indexOf(e) !== -1
    }
  },
  emits: [
    "goStepBack",
    "goStepForward"
  ],
  setup(e, t) {
    const {
      subTypeLocal: n
    } = mk(e), {
      classWizard: r
    } = ck(e, {
      subTypeLocal: n
    }), {
      setFocusToActiveStep: s,
      wizardTabsRef: i
    } = hk(e), {
      initStepActive: o,
      stepActiveComputed: u,
      stepActiveLocal: h,
      stepsVisitedComputed: A,
      stepsVisitedLocal: E
    } = Ak(e, {
      setFocusToActiveStep: s
    }), {
      ariaLabelAttributes: p,
      ariaLabelStepsAttributes: T,
      idProgressbar: S,
      wizardAriaDescribedby: b
    } = dk(e, {
      stepActiveComputed: u
    }), {
      goOneStepBack: L,
      goOneStepForward: v,
      onStepClick: I
    } = fk(e, t, {
      stepActiveComputed: u,
      stepActiveLocal: h,
      stepsVisitedLocal: E
    }), {
      stepActiveNumber: R,
      stepsCount: g
    } = pk(e, {
      stepActiveComputed: u
    }), {
      toolbarBottomTeleportSelector: D,
      useTeleportToolbarBottom: w
    } = Tk(e), {
      isMobileLocal: M
    } = Ek(e);
    return o(), {
      ariaLabelAttributes: p,
      ariaLabelStepsAttributes: T,
      classWizard: r,
      goOneStepBack: L,
      goOneStepForward: v,
      idProgressbar: S,
      isMobileLocal: M,
      onStepClick: I,
      stepActiveComputed: u,
      stepActiveNumber: R,
      stepsCount: g,
      stepsVisitedComputed: A,
      toolbarBottomTeleportSelector: D,
      useTeleportToolbarBottom: w,
      wizardAriaDescribedby: b,
      wizardTabsRef: i
    };
  },
  render() {
    const e = c(_k, {
      backButtonAttributes: this.backButtonAttributes,
      backButtonClass: this.backButtonClass,
      backButtonIconLeft: this.backButtonIconLeft,
      backButtonIconRight: this.backButtonIconRight,
      backButtonText: this.backButtonText,
      backButtonTitle: this.backButtonTitle,
      extra: this.extra,
      forwardButtonAttributes: this.forwardButtonAttributes,
      forwardButtonClass: this.forwardButtonClass,
      forwardButtonIconLeft: this.forwardButtonIconLeft,
      forwardButtonIconRight: this.forwardButtonIconRight,
      forwardButtonText: this.forwardButtonText,
      forwardButtonTitle: this.forwardButtonTitle,
      isBackButtonDisabled: this.isBackButtonDisabled,
      isBackButtonHide: this.isBackButtonHide,
      isBackFirstButtonHide: this.isBackFirstButtonHide,
      isButtonsLoading: this.isButtonsLoading,
      isForwardButtonDisabled: this.isForwardButtonDisabled,
      isForwardButtonHide: this.isForwardButtonHide,
      isForwardLastButtonHide: this.isForwardLastButtonHide,
      stepActiveComputed: this.stepActiveComputed,
      steps: this.steps,
      onGoOneStepBack: this.goOneStepBack,
      onGoOneStepForward: this.goOneStepForward
    }, this.$slots);
    return c("div", {
      tabindex: 0,
      id: this.id,
      role: "application",
      "aria-describedby": this.wizardAriaDescribedby,
      class: [
        this.classWizard,
        {
          a_wizard_mobile: this.isMobileLocal,
          a_wizard_show_only_active_step_mobile: this.showOnlyActiveStepMobile
        }
      ],
      ...this.ariaLabelAttributes
    }, [
      c(Ae, {
        id: this.idProgressbar,
        class: "a_sr_only",
        extra: {
          stepActive: this.stepActiveNumber,
          stepsCount: this.stepsCount
        },
        tag: "span",
        text: this.stepsProgressbarText
      }),
      c("ul", {
        class: "a_wizard__steps",
        role: "navigation",
        ...this.ariaLabelStepsAttributes
      }, [
        this.steps.map((t, n) => c(tk, {
          key: this.keyId ? t[this.keyId] : n,
          id: this.id,
          extra: this.extra,
          isBackButtonDisabled: this.isBackButtonDisabled,
          isBackStepButtonDisabled: this.isBackStepButtonDisabled,
          isForwardButtonDisabled: this.isForwardButtonDisabled,
          isForwardStepButtonDisabled: this.isForwardStepButtonDisabled,
          isMobile: this.isMobileLocal,
          isStepNumberVisible: this.isStepNumberVisible,
          showOnlyActiveStepMobile: this.showOnlyActiveStepMobile,
          step: t,
          stepActiveComputed: this.stepActiveComputed,
          stepIconError: this.stepIconError,
          stepIconWarning: this.stepIconWarning,
          stepIndex: n,
          stepsCount: this.stepsCount,
          onOnStepClick: this.onStepClick
        }, this.$slots))
      ]),
      this.isToolbarTop && e,
      c("div", {
        class: "a_wizard__tab_content"
      }, [
        this.steps.map((t, n) => c(sk, {
          key: this.keyId ? t[this.keyId] : n,
          id: this.id,
          extra: this.extra,
          step: t,
          stepActiveComputed: this.stepActiveComputed,
          stepIndex: n,
          stepsVisitedComputed: this.stepsVisitedComputed,
          wizardAriaDescribedby: this.wizardAriaDescribedby
        }, this.$slots))
      ]),
      this.isToolbarBottom && c(la, {
        to: this.toolbarBottomTeleportSelector,
        disabled: !this.useTeleportToolbarBottom
      }, [
        e
      ])
    ]);
  }
};
function bk({ emit: e }) {
  return {
    goStepBackLocal: (r) => {
      e("goStepBack", r);
    },
    goStepForwardLocal: (r) => {
      e("goStepForward", r);
    }
  };
}
function Lk(e) {
  const t = d(e, "id"), n = _(() => `${t.value}_footer`), r = _(() => `${t.value}_wizard`);
  return {
    footerId: n,
    wizardId: r
  };
}
function vk() {
  const e = B(void 0);
  return {
    initWizard: () => {
      uu().then(
        () => {
          e.value = !0;
        }
      );
    },
    isWizardVisible: e
  };
}
const gde = {
  name: "AModalWizard",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isCloseButtonHide
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isFooterSticky
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => ge.value.propsDefault.modalStyle
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ge.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => ge.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => ge.value.propsDefault.selectorCloseIds
    },
    showCloseButtonHeader: {
      type: Boolean,
      required: !1,
      default: !0
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => ge.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => ge.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    // WIZARD
    ariaLabel: {
      type: String,
      required: !1,
      default: "_A_WIZARD_ARIA_LABEL_"
    },
    ariaLabelSteps: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_ARIA_LABEL_"
    },
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_"
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_TITLE_"
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_"
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_TITLE_"
    },
    hasFocusJump: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_modal_wizard_")
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isControlOutside: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMobile: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isStepsJustified: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    stepActive: {
      type: Number,
      default: void 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: Lu
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: bu
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    steps: {
      type: Array,
      default: () => []
    },
    stepsProgressbarText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_"
    },
    subType: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e, t) => {
        const n = {
          arrows: [],
          basic: [],
          line: ["square", "circle", "square-bordered", "circle-bordered"],
          round: []
        };
        if (t) {
          if (t.type in n)
            return ae(e) || n[t.type].indexOf(e) !== -1;
        } else
          return ["square", "circle", "square-bordered", "circle-bordered"].indexOf(e) !== -1;
        return !1;
      }
    },
    stepsVisited: {
      type: Object,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "basic",
      validator: (e) => ["arrows", "line", "round", "basic"].indexOf(e) !== -1
    }
  },
  emits: [
    "goStepBack",
    "goStepForward"
  ],
  setup(e, t) {
    const {
      goStepBackLocal: n,
      goStepForwardLocal: r
    } = bk(t), {
      footerId: s,
      wizardId: i
    } = Lk(e), {
      initWizard: o,
      isWizardVisible: u
    } = vk();
    return o(), {
      footerId: s,
      goStepBackLocal: n,
      goStepForwardLocal: r,
      isWizardVisible: u,
      wizardId: i
    };
  },
  render() {
    return c(wu, {
      alwaysTranslate: this.alwaysTranslate,
      backdropZIndex: this.backdropZIndex,
      close: this.close,
      closeButtonAttributes: this.closeButtonAttributes,
      closeButtonClass: this.closeButtonClass,
      closeButtonId: this.closeButtonId,
      closeButtonText: this.closeButtonText,
      closeButtonTextScreenReaderFooter: this.closeButtonTextScreenReaderFooter,
      closeButtonTextScreenReaderHeader: this.closeButtonTextScreenReaderHeader,
      disabled: this.disabled,
      disabledSave: this.disabledSave,
      extra: this.extra,
      focusStartId: this.focusStartId,
      headerTag: this.headerTag,
      headerText: this.headerText,
      hideHeader: this.hideHeader,
      id: this.id,
      isCloseButtonHide: this.isCloseButtonHide,
      isFooterSticky: this.isFooterSticky,
      isSaveButtonHide: this.isSaveButtonHide,
      loading: this.loading,
      modalClass: this.modalClass,
      modalStyle: this.modalStyle,
      save: this.save,
      saveButtonAttributes: this.saveButtonAttributes,
      saveButtonClass: this.saveButtonClass,
      saveButtonId: this.saveButtonId,
      saveButtonText: this.saveButtonText,
      saveButtonTextScreenReader: this.saveButtonTextScreenReader,
      selectorClose: this.selectorClose,
      selectorCloseIds: this.selectorCloseIds,
      showCloseButtonHeader: this.showCloseButtonHeader,
      size: this.size,
      stop: this.stop,
      useEscape: this.useEscape,
      useFocusOnStart: this.useFocusOnStart,
      zIndex: this.zIndex
    }, {
      ...this.$slots || {},
      modalBody: () => [
        this.isWizardVisible && c(Sk, {
          id: this.wizardId,
          ariaLabel: this.ariaLabel,
          ariaLabelSteps: this.ariaLabelSteps,
          backButtonAttributes: this.backButtonAttributes,
          backButtonClass: this.backButtonClass,
          backButtonIconLeft: this.backButtonIconLeft,
          backButtonIconRight: this.backButtonIconRight,
          backButtonText: this.backButtonText,
          backButtonTitle: this.backButtonTitle,
          forwardButtonAttributes: this.forwardButtonAttributes,
          forwardButtonClass: this.forwardButtonClass,
          forwardButtonIconLeft: this.forwardButtonIconLeft,
          forwardButtonIconRight: this.forwardButtonIconRight,
          forwardButtonText: this.forwardButtonText,
          forwardButtonTitle: this.forwardButtonTitle,
          hasFocusJump: this.hasFocusJump,
          extra: this.extra,
          isBackButtonDisabled: this.isBackButtonDisabled,
          isBackButtonHide: this.isBackButtonHide,
          isBackFirstButtonHide: this.isBackFirstButtonHide,
          isBackStepButtonDisabled: this.isBackStepButtonDisabled,
          isButtonsLoading: this.isButtonsLoading,
          isControlOutside: this.isControlOutside,
          isForwardButtonDisabled: this.isForwardButtonDisabled,
          isForwardButtonHide: this.isForwardButtonHide,
          isForwardLastButtonHide: this.isForwardLastButtonHide,
          isForwardStepButtonDisabled: this.isForwardStepButtonDisabled,
          isMobile: this.isMobile,
          isStepNumberVisible: this.isStepNumberVisible,
          isStepsJustified: this.isStepsJustified,
          keyId: this.keyId,
          isToolbarBottom: !0,
          isToolbarTop: !1,
          showOnlyActiveStepMobile: this.showOnlyActiveStepMobile,
          stepActive: this.stepActive,
          stepIconError: this.stepIconError,
          stepIconErrorText: this.stepIconErrorText,
          stepIconWarning: this.stepIconWarning,
          stepIconWarningText: this.stepIconWarningText,
          steps: this.steps,
          stepsProgressbarText: this.stepsProgressbarText,
          stepsVisited: this.stepsVisited,
          subType: this.subType,
          toolbarBottomTeleportId: this.footerId,
          type: this.type,
          onGoStepBack: this.goStepBackLocal,
          onGoStepForward: this.goStepForwardLocal
        }, this.$slots)
      ],
      modalFooterPrepend: () => [
        this.$slots.modalWizardFooterPrepend && this.$slots.modalWizardFooterPrepend(),
        c("div", {
          id: this.footerId
        }),
        this.$slots.modalWizardFooterAppend && this.$slots.modalWizardFooterAppend()
      ]
    });
  }
}, Rde = {
  name: "ANotification",
  setup() {
    const {
      notifications: e,
      removeNotification: t
    } = Cu();
    return {
      notifications: e,
      removeNotification: t
    };
  },
  render() {
    return c(la, {
      to: "body"
    }, [
      c("div", {
        class: "a_notification_parent"
      }, this.notifications.map((e) => c(gc, {
        key: e.index,
        alwaysTranslate: e.alwaysTranslate,
        isVisible: !0,
        closable: !0,
        type: e.type,
        alertClass: "a_notification",
        onClose: () => this.removeNotification(e.index)
      }, () => [
        c(Ae, {
          alwaysTranslate: e.alwaysTranslate,
          html: e.text,
          extra: e.extra
        })
      ])))
    ]);
  }
}, ko = B("");
function Ik(e) {
  const t = d(e, "title"), n = d(e, "extra"), {
    translationChanges: r
  } = Si(), {
    isPlaceholderTranslate: s,
    getTranslatedText: i
  } = Ms(), o = _(() => {
    if (r.value)
      return s(ko.value) ? i({
        placeholder: ko.value
      }) : ko.value;
  }), u = _(() => {
    if (r.value)
      return s(t.value) ? i({
        placeholder: t.value,
        extra: n.value
      }) : t.value;
  }), h = () => {
    let A = "";
    u.value ? (A = u.value, o.value && (A += ` - ${o.value}`)) : o.value && (A = o.value), document.title = A;
  };
  h(), rt(u, () => {
    h();
  });
}
function yk(e = "") {
  ko.value = e;
}
const Ode = {
  name: "APageTabTitle",
  props: {
    title: {
      type: String,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    Ik(e);
  },
  render() {
    return "";
  }
};
function gk(e, { emit: t }) {
  const n = d(e, "isLoadingTable"), r = d(e, "limit"), s = _(() => `${r.value}`), i = (h) => {
    n.value || t("update:limit", +h);
  };
  return {
    changeLimit: i,
    changeLimitFromSelect: ({ model: h }) => {
      i(h);
    },
    keyDownChangeLimit: (h, A) => {
      (h.keyCode === X.enter || h.keyCode === X.space) && (i(A), h.stopPropagation(), h.preventDefault());
    },
    limitString: s
  };
}
function Rk(e) {
  const t = d(e, "offset"), n = d(e, "rowsLength"), r = d(e, "countAllRows"), {
    filterCurrency: s
  } = Wn(), i = _(() => s(+t.value + 1, { suffix: "", digits: 0 })), o = _(() => s(+t.value + n.value, { suffix: "", digits: 0 })), u = _(() => s(r.value, { suffix: "", digits: 0 }));
  return {
    extraForTranslate: _(() => ({
      start: i.value,
      current: o.value,
      count: u.value
    }))
  };
}
const Ok = {
  name: "APaginationCountPerPage",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    limit: {
      type: Number,
      required: !0
    },
    limitsPerPage: {
      type: Array,
      required: !1,
      default: () => ["10", "25", "50", "100"]
    },
    mode: {
      type: String,
      required: !1,
      default: "group",
      validator: (e) => ["inline", "group", "select"].indexOf(e) !== -1
    },
    offset: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    showTextCountFromTo: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: [
    "update:limit"
  ],
  setup(e, t) {
    const {
      changeLimit: n,
      changeLimitFromSelect: r,
      keyDownChangeLimit: s,
      limitString: i
    } = gk(e, t), {
      extraForTranslate: o
    } = Rk(e);
    return {
      changeLimit: n,
      changeLimitFromSelect: r,
      extraForTranslate: o,
      keyDownChangeLimit: s,
      limitString: i
    };
  },
  render() {
    return c("div", {
      class: "a_pagination__counts"
    }, this.mode === "inline" || this.mode === "group" ? [
      this.showTextCountFromTo ? c(Ae, {
        class: "a_pagination__count_from_to",
        html: "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_",
        extra: this.extraForTranslate
      }) : "",
      c(Ae, {
        tag: "span",
        class: "a_pagination__count__text",
        html: "_A_COUNT_PER_PAGE_"
      }),
      this.mode === "inline" ? c("div", {
        class: "a_pagination__count"
      }, [
        this.limitsPerPage.map((e) => {
          const t = +e === this.limit;
          return c("div", {
            class: "a_pagination__count__item"
          }, [
            c(be, {
              "aria-current": t ? !0 : void 0,
              class: "a_btn a_btn_link a_pagination__count__button",
              disabled: t || this.disabled,
              extra: {
                count: e
              },
              text: e,
              textAriaHidden: !0,
              textScreenReader: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              title: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              type: "button",
              onClick: () => this.changeLimit(e)
            })
          ]);
        })
      ]) : c("ul", {
        class: "a_pagination a_pagination_group"
      }, [
        this.limitsPerPage.map((e) => {
          const t = +e === this.limit;
          return c("li", {
            class: [
              "a_pagination__item",
              {
                active: t
              }
            ]
          }, [
            c(be, {
              "aria-current": t ? !0 : void 0,
              class: "a_pagination__item__link",
              disabled: this.disabled,
              extra: {
                count: e
              },
              role: "button",
              tabindex: t || this.disabled ? -1 : 0,
              tag: "a",
              text: e,
              textAriaHidden: !0,
              textScreenReader: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              title: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              type: "button",
              onClick: () => this.changeLimit(e),
              onKeydown: (n) => this.keyDownChangeLimit(n, e)
            })
          ]);
        })
      ])
    ] : [
      this.showTextCountFromTo ? c(Ae, {
        class: "a_pagination__count_from_to",
        html: "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_",
        extra: this.extraForTranslate
      }) : "",
      c(fl, {
        label: "_A_COUNT_PER_PAGE_",
        labelClass: "a_sr_only",
        data: this.limitsPerPage,
        isDataSimpleArray: !0,
        isLabelFloat: !1,
        deselectable: !1,
        menuWidthType: "by_content",
        modelValue: this.limitString,
        disabled: this.disabled,
        change: this.changeLimitFromSelect
      })
    ]);
  }
};
function Ck(e, {
  currentItem: t = _(() => 1),
  maxItems: n = _(() => 1)
}) {
  const r = d(e, "disabled"), s = _(() => r.value || t.value === 1), i = _(() => r.value || t.value === n.value);
  return {
    disabledButtonFirstPage: s,
    disabledButtonLastPage: i
  };
}
function Nk(e) {
  const t = d(e, "paginationMaxItems"), n = d(e, "offset"), r = d(e, "limit"), s = d(e, "totalRowsCount"), i = _(() => sM(t.value)), o = _(() => (n.value / r.value >> 0) + 1), u = _(() => RN(s.value / r.value)), h = _(() => Math.floor(t.value / 2)), A = _(() => t.value * 2 - 1), E = ({ currentItemIndex: T, paginationLength: S }) => {
    let b, L;
    const v = h.value, I = A.value;
    if (T <= v ? (b = 0, L = t.value) : T >= I - (v + 1) ? (b = I - t.value, L = I) : i.value ? (b = T - v + 1, L = T + v + 1) : (b = T - v, L = T + v + 1), L > S) {
      const R = L - S;
      L = S + 1, b = b - R, b < 0 && (b = 0);
    }
    return {
      indexStart: b,
      indexEnd: L
    };
  }, p = _(() => {
    const T = [];
    let S = -1;
    for (let v = t.value - 1; v > -t.value; v--) {
      const I = o.value - v;
      I > 0 && I <= u.value && T.push(I), v === 0 && (S = T.length - 1);
    }
    const {
      indexStart: b,
      indexEnd: L
    } = E({
      currentItemIndex: S,
      paginationLength: T.length
    });
    return T.slice(b, L);
  });
  return {
    currentItem: o,
    maxItems: u,
    paginationItems: p
  };
}
function Dk(e, { emit: t }, {
  currentItem: n = _(() => 1),
  disabledButtonFirstPage: r = _(() => !1),
  disabledButtonLastPage: s = _(() => !1),
  maxItems: i = _(() => 1)
}) {
  const o = d(e, "disabled"), u = d(e, "limit"), h = d(e, "offset"), A = (g) => {
    if (o.value || g === n.value)
      return;
    const D = (g - 1) * u.value;
    t("update:offset", D);
  }, E = () => {
    r.value || t("update:offset", 0);
  }, p = () => {
    r.value || t("update:offset", h.value - u.value);
  }, T = () => {
    s.value || t("update:offset", (i.value - 1) * u.value);
  }, S = () => {
    s.value || t("update:offset", h.value + u.value);
  };
  return {
    keyDownUpdateOffset: (g, D) => {
      (g.keyCode === X.enter || g.keyCode === X.space) && (A(D), g.stopPropagation(), g.preventDefault());
    },
    keyDownUpdateOffsetFirst: (g) => {
      (g.keyCode === X.enter || g.keyCode === X.space) && (E(), g.stopPropagation(), g.preventDefault());
    },
    keyDownUpdateOffsetLast: (g) => {
      (g.keyCode === X.enter || g.keyCode === X.space) && (T(), g.stopPropagation(), g.preventDefault());
    },
    keyDownUpdateOffsetNext: (g) => {
      (g.keyCode === X.enter || g.keyCode === X.space) && (S(), g.stopPropagation(), g.preventDefault());
    },
    keyDownUpdateOffsetPrevious: (g) => {
      (g.keyCode === X.enter || g.keyCode === X.space) && (p(), g.stopPropagation(), g.preventDefault());
    },
    updateOffset: A,
    updateOffsetFirst: E,
    updateOffsetLast: T,
    updateOffsetNext: S,
    updateOffsetPrevious: p
  };
}
const Bk = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
  <path fill-rule="evenodd" d="M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
</svg>`, wk = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M3.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L9.293 8 3.646 2.354a.5.5 0 0 1 0-.708"/>
  <path fill-rule="evenodd" d="M7.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L13.293 8 7.646 2.354a.5.5 0 0 1 0-.708"/>
</svg>`, Pk = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
</svg>`, xk = {
  name: "APaginationPages",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    limit: {
      type: Number,
      required: !0
    },
    mode: {
      type: String,
      required: !1,
      default: "normal",
      validator: (e) => ["normal", "short", "loadMore"].indexOf(e) !== -1
    },
    offset: {
      type: Number,
      required: !0
    },
    paginationMaxItems: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => fa(e) && e > 0
    },
    totalRowsCount: {
      type: Number,
      required: !0
    }
  },
  emits: [
    "update:offset"
  ],
  setup(e, t) {
    const {
      currentItem: n,
      maxItems: r,
      paginationItems: s
    } = Nk(e), {
      disabledButtonFirstPage: i,
      disabledButtonLastPage: o
    } = Ck(e, {
      currentItem: n,
      maxItems: r
    }), {
      keyDownUpdateOffset: u,
      keyDownUpdateOffsetFirst: h,
      keyDownUpdateOffsetLast: A,
      keyDownUpdateOffsetNext: E,
      keyDownUpdateOffsetPrevious: p,
      updateOffset: T,
      updateOffsetFirst: S,
      updateOffsetLast: b,
      updateOffsetNext: L,
      updateOffsetPrevious: v
    } = Dk(e, t, {
      currentItem: n,
      disabledButtonFirstPage: i,
      disabledButtonLastPage: o,
      maxItems: r
    });
    return {
      currentItem: n,
      disabledButtonFirstPage: i,
      disabledButtonLastPage: o,
      keyDownUpdateOffset: u,
      keyDownUpdateOffsetFirst: h,
      keyDownUpdateOffsetLast: A,
      keyDownUpdateOffsetNext: E,
      keyDownUpdateOffsetPrevious: p,
      maxItems: r,
      paginationItems: s,
      updateOffset: T,
      updateOffsetFirst: S,
      updateOffsetLast: b,
      updateOffsetNext: L,
      updateOffsetPrevious: v
    };
  },
  render() {
    return c(Ae, {
      tag: "nav",
      class: "a_pagination__nav",
      "aria-label": "_A_PAGINATION_NAVIGATION_"
    }, {
      default: () => this.mode === "loadMore" ? c(be, {
        class: "a_btn a_btn_primary",
        text: "Load more",
        type: "button"
      }) : [
        c("ul", {
          class: "a_pagination"
        }, [
          this.mode !== "short" ? c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonFirstPage }]
          }, [
            c(be, {
              class: "a_pagination__item__link",
              iconLeft: Bk,
              role: "button",
              tabindex: this.disabledButtonFirstPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_FIRST_PAGE_",
              title: "_A_PAGINATION_FIRST_PAGE_",
              type: "button",
              onClick: this.updateOffsetFirst,
              onKeydown: this.keyDownUpdateOffsetFirst
            })
          ]) : "",
          c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonFirstPage }]
          }, [
            c(be, {
              class: "a_pagination__item__link",
              iconLeft: Pk,
              role: "button",
              tabindex: this.disabledButtonFirstPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_PREVIOUS_PAGE_",
              title: "_A_PAGINATION_PREVIOUS_PAGE_",
              type: "button",
              onClick: this.updateOffsetPrevious,
              onKeydown: this.keyDownUpdateOffsetPrevious
            })
          ]),
          this.mode === "short" ? c("li", {
            class: "a_pagination__item"
          }, [
            c(Ae, {
              class: "a_pagination__item__link disabled",
              html: "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_",
              extra: {
                currentPage: this.currentItem,
                allPages: this.maxItems
              }
            })
          ]) : this.paginationItems.map((e) => {
            const t = e === this.currentItem;
            return c("li", {
              class: ["a_pagination__item", {
                active: t,
                disabled: this.disabled
              }]
            }, [
              c(be, {
                "aria-current": t ? !0 : void 0,
                class: "a_pagination__item__link",
                extra: {
                  page: e
                },
                role: "button",
                tabindex: t || this.disabled ? -1 : 0,
                tag: "a",
                text: e,
                textAriaHidden: !0,
                textScreenReader: "_A_PAGINATION_TO_PAGE_{{page}}_",
                title: "_A_PAGINATION_TO_PAGE_{{page}}_",
                type: "button",
                onClick: () => this.updateOffset(e),
                onKeydown: (n) => this.keyDownUpdateOffset(n, e)
              })
            ]);
          }),
          c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonLastPage }]
          }, [
            c(be, {
              class: "a_pagination__item__link",
              iconLeft: Sm,
              role: "button",
              tabindex: this.disabledButtonLastPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_NEXT_PAGE_",
              title: "_A_PAGINATION_NEXT_PAGE_",
              type: "button",
              onClick: this.updateOffsetNext,
              onKeydown: this.keyDownUpdateOffsetNext
            })
          ]),
          this.mode !== "short" ? c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonLastPage }]
          }, [
            c(be, {
              class: "a_pagination__item__link",
              iconLeft: wk,
              role: "button",
              tabindex: this.disabledButtonLastPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_LAST_PAGE_",
              title: "_A_PAGINATION_LAST_PAGE_",
              type: "button",
              onClick: this.updateOffsetLast,
              onKeydown: this.keyDownUpdateOffsetLast
            })
          ]) : ""
        ])
      ]
    });
  }
};
function Fk(e, {
  isMobile: t = B(!1),
  updateLimit: n = () => {
  },
  updateOffset: r = () => {
  }
}) {
  const s = d(e, "modes"), i = d(e, "countAllRows"), o = d(e, "disabled"), u = d(e, "limitsPerPage"), h = d(e, "limit"), A = d(e, "offset"), E = d(e, "rowsLength"), p = d(e, "totalRowsCount"), T = d(e, "maxPages"), S = _(() => t.value ? s.value.mobile || {
    perPage: {
      mode: "select",
      position: 0,
      showTextCountFromTo: !1
    },
    pagination: {
      mode: "short",
      position: 1
    }
  } : s.value.desktop || {
    perPage: {
      mode: "inline",
      position: 0,
      showTextCountFromTo: !0
    },
    pagination: {
      mode: "normal",
      position: 1
    }
  }), b = _(() => {
    const v = [];
    return z(S.value, (I, R) => {
      v.push({
        ...I,
        component: R
      });
    }), wd(v, "position");
  });
  return {
    components: _(() => {
      const v = [];
      return z(b.value, (I) => {
        I.component === "perPage" ? v.push(c(Ok, {
          countAllRows: i.value,
          disabled: o.value,
          limitsPerPage: u.value,
          limit: h.value,
          offset: A.value,
          rowsLength: E.value,
          mode: I.mode,
          showTextCountFromTo: I.showTextCountFromTo,
          "onUpdate:limit": n
        })) : I.component === "pagination" && v.push(c(xk, {
          limit: h.value,
          disabled: o.value,
          totalRowsCount: p.value,
          offset: A.value,
          paginationMaxItems: T.value,
          mode: I.mode,
          "onUpdate:offset": r
        }));
      }), v;
    })
  };
}
function Mk(e, { emit: t }) {
  return {
    updateLimit: (s) => {
      t("update:limit", s);
    },
    updateOffset: (s) => {
      t("update:offset", s);
    }
  };
}
const qk = {
  name: "APagination",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hasRows: {
      type: Boolean,
      required: !0
    },
    limit: {
      type: Number,
      required: !0
    },
    limitsPerPage: {
      type: Array,
      required: !1,
      default: () => ["10", "25", "50", "100"]
    },
    maxPages: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => fa(e) && e > 0
    },
    offset: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    totalRowsCount: {
      type: Number,
      required: !0
    },
    modes: {
      type: Object,
      required: !1,
      default: () => ({
        /*
         * perPage: inline / group / select
         * pagination: normal / short / loadMore
         */
        desktop: {
          perPage: {
            mode: "group",
            position: 0,
            showTextCountFromTo: !0
          },
          pagination: {
            mode: "normal",
            position: 1
          }
        },
        mobile: {
          perPage: {
            mode: "select",
            position: 0,
            showTextCountFromTo: !1
          },
          pagination: {
            mode: "short",
            position: 1
          }
        }
      })
    }
  },
  emits: [
    "update:limit",
    "update:offset"
  ],
  setup(e, t) {
    const {
      isMobileWidth: n
    } = En(), {
      updateLimit: r,
      updateOffset: s
    } = Mk(e, t), {
      components: i
    } = Fk(e, {
      isMobile: n,
      updateLimit: r,
      updateOffset: s
    });
    return {
      components: i,
      updateLimit: r,
      updateOffset: s
    };
  },
  render() {
    return this.hasRows ? c("div", {
      class: "a_pagination__parent"
    }, this.components) : null;
  }
};
function $k(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = d(e, "classProgressBar");
  return {
    classProgressBarLocal: _(() => Fe(n.value) ? n.value(t.value) : n.value)
  };
}
function kk(e) {
  const t = d(e, "duration");
  return {
    durationLocal: _(() => {
      if (!ae(t.value))
        return `${t.value}s`;
    })
  };
}
function vm(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = d(e, "valueTextInteger"), {
    filterCurrency: r
  } = Wn();
  return {
    valuePercent: _(() => n.value ? r(t.value, {
      suffix: "%",
      digits: 0
    }) : r(t.value, {
      suffix: "%",
      digits: 2
    }))
  };
}
function Im(e) {
  const t = d(e, "min"), n = d(e, "max"), r = d(e, "value");
  return {
    widthPercent: _(() => (r.value - t.value) / (n.value - t.value) * 100)
  };
}
const Cde = {
  name: "AProgress",
  props: {
    classProgressBar: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    duration: {
      type: Number,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1,
      default: !1
    },
    max: {
      type: Number,
      required: !1,
      default: 100
    },
    min: {
      type: Number,
      required: !1,
      default: 0
    },
    reverse: {
      type: Boolean,
      required: !1,
      default: !1
    },
    showValue: {
      type: Boolean,
      required: !1,
      default: !0
    },
    striped: {
      type: Boolean,
      required: !1,
      default: !1
    },
    stripedFlow: {
      type: Boolean,
      required: !1,
      default: !1
    },
    value: {
      type: Number,
      required: !1,
      default: 0
    },
    valueTextInteger: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  setup(e) {
    const {
      widthPercent: t
    } = Im(e), {
      valuePercent: n
    } = vm(e, {
      widthPercent: t
    }), {
      classProgressBarLocal: r
    } = $k(e, {
      widthPercent: t
    }), {
      durationLocal: s
    } = kk(e);
    return {
      classProgressBarLocal: r,
      durationLocal: s,
      valuePercent: n,
      widthPercent: t
    };
  },
  render() {
    let e;
    return this.$slots.progressText ? e = c("span", {
      class: "a_progress__text"
    }, [
      this.$slots.progressText && this.$slots.progressText({
        valuePercent: this.valuePercent
      })
    ]) : this.showValue && (e = c("span", {
      class: "a_progress__text"
    }, this.valuePercent)), c("div", {
      class: ["a_progress", {
        a_progress_reverse: this.reverse
      }]
    }, [
      c("div", {
        class: [
          "a_progress__bar",
          {
            a_progress__bar_striped: this.striped,
            a_progress__bar_striped_flow: this.stripedFlow,
            a_progress__bar_indeterminate: this.indeterminate
          },
          this.classProgressBarLocal
        ],
        role: "progressbar",
        "aria-valuenow": this.value,
        "aria-valuemin": this.min,
        "aria-valuemax": this.max,
        style: {
          width: `${this.widthPercent}%`,
          "animation-duration": this.durationLocal
        }
      }, [
        e
      ])
    ]);
  }
};
function Uk(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = d(e, "strokeWidth"), r = 50, s = 2 * Math.PI * r, i = _(() => t.value * s / 100), o = _(() => `${i.value}px ${s - i.value}px`), u = _(() => `stroke-dasharray: ${o.value};`), h = _(() => r + n.value / 2);
  return {
    circleStyles: u,
    cxCy: h,
    radius: r
  };
}
function Hk(e) {
  const t = d(e, "width");
  return {
    sizesLocal: _(() => yn(t.value) ? `height: ${t.value}px; width: ${t.value}px;` : `height: ${t.value}; width: ${t.value};`)
  };
}
function Vk(e) {
  const t = d(e, "rotate"), n = d(e, "strokeWidth"), r = _(() => {
    const i = 100 + n.value;
    return `0 0 ${i} ${i}`;
  });
  return {
    svgTransform: _(() => `transform: rotate(${t.value - 90}deg);`),
    svgViewBox: r
  };
}
const Nde = {
  name: "AProgressCircle",
  props: {
    duration: {
      type: Number,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1,
      default: !1
    },
    max: {
      type: Number,
      required: !1,
      default: 100
    },
    min: {
      type: Number,
      required: !1,
      default: 0
    },
    rotate: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0 && e <= 360
    },
    showValue: {
      type: Boolean,
      required: !1,
      default: !0
    },
    strokeWidth: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => e > 0
    },
    value: {
      type: Number,
      required: !1,
      default: 0
    },
    valueTextClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    valueTextInteger: {
      type: Boolean,
      required: !1,
      default: !1
    },
    width: {
      type: [Number, String],
      required: !1,
      default: 125
    }
  },
  setup(e) {
    const {
      widthPercent: t
    } = Im(e), {
      valuePercent: n
    } = vm(e, {
      widthPercent: t
    }), {
      circleStyles: r,
      cxCy: s,
      radius: i
    } = Uk(e, {
      widthPercent: t
    }), {
      svgTransform: o,
      svgViewBox: u
    } = Vk(e), {
      sizesLocal: h
    } = Hk(e);
    return {
      circleStyles: r,
      cxCy: s,
      radius: i,
      sizesLocal: h,
      svgTransform: o,
      svgViewBox: u,
      valuePercent: n,
      widthPercent: t
    };
  },
  render() {
    let e;
    return this.$slots.progressText ? e = c("span", {
      class: ["a_progress_circle__text", this.valueTextClass]
    }, [
      this.$slots.progressText && this.$slots.progressText({
        valuePercent: this.valuePercent
      })
    ]) : this.showValue && (e = c("span", {
      class: ["a_progress_circle__text", this.valueTextClass]
    }, this.valuePercent)), c("div", {
      class: "a_progress_circle",
      style: this.sizesLocal,
      role: "progressbar",
      "aria-valuenow": this.value,
      "aria-valuemin": this.min,
      "aria-valuemax": this.max
    }, [
      c("svg", {
        viewBox: this.svgViewBox,
        style: this.svgTransform
      }, [
        c("circle", {
          class: "a_progress_circle__base",
          cx: this.cxCy,
          cy: this.cxCy,
          r: this.radius,
          "stroke-width": this.strokeWidth
        }),
        c("circle", {
          class: ["a_progress_circle__scale", {
            a_progress_circle__scale_indeterminate: this.indeterminate
          }],
          cx: this.cxCy,
          cy: this.cxCy,
          r: this.radius,
          "stroke-width": this.strokeWidth,
          style: this.circleStyles
        })
      ]),
      e
    ]);
  }
}, Qc = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16">
  <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
</svg>`, VE = {
  name: "ADecimalIcon",
  components: {
    AIcon: ut
  },
  props: {
    value: {
      type: Number,
      default: 50
    },
    color: {
      type: String,
      default: "yellow"
    },
    icon: {
      type: String,
      default: Qc
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    }
  },
  render() {
    const e = {
      class: "a_decimal_rate_icon a_rate_icon_decimal",
      style: {
        position: "absolute",
        overflow: "hidden",
        width: `${this.value}%`,
        color: this.color
      }
    };
    return c("i", e, [
      c(ut, {
        icon: this.icon,
        class: `a_decimal_rate_icon a_rate_icon_${this.size}`
      })
    ]);
  }
}, ym = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star" viewBox="0 0 16 16">
  <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.56.56 0 0 0-.163-.505L1.71 6.745l4.052-.576a.53.53 0 0 0 .393-.288L8 2.223l1.847 3.658a.53.53 0 0 0 .393.288l4.052.575-2.906 2.77a.56.56 0 0 0-.163.506l.694 3.957-3.686-1.894a.5.5 0 0 0-.461 0z"/>
</svg>`, WE = {
  name: "ARateIcon",
  components: {
    AIcon: ut,
    ADecimalIcon: VE
  },
  props: {
    value: {
      type: Number,
      default: 50
    },
    color: {
      type: String,
      default: "yellow"
    },
    icon: {
      type: String,
      default: ym
    },
    iconFill: {
      type: String,
      default: Qc
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    },
    isHovered: {
      type: Boolean,
      default: !1
    }
  },
  emits: [
    "mouseenter",
    "mouseleave",
    "click",
    "dblclick",
    "mousemove"
  ],
  setup(e, { emit: t }) {
    return {
      handleMouseEnter(n) {
        t("mouseenter", n);
      },
      handleMouseLeave(n) {
        t("mouseleave", n);
      },
      handleClick(n) {
        t("click", n);
      },
      handleDblClick(n) {
        t("dblclick", n);
      },
      handleMouseMove(n) {
        t("mousemove", n);
      }
    };
  },
  render() {
    return c(
      "span",
      {
        class: `el-rate__item a_rate_icon_${this.size}`,
        style: {
          position: "relative",
          display: "inline-flex",
          alignItems: "center",
          justifyContent: "center"
        },
        onClick: this.handleClick,
        onDblclick: this.handleDblClick,
        onMouseenter: this.handleMouseEnter,
        onMouseleave: this.handleMouseLeave,
        onMousemove: this.handleMouseMove
      },
      [
        c("div", { class: "a_rate_icon_align" }, [
          c(ut, {
            icon: this.icon,
            class: "a_decimal_rate_icon a_rate_decimal",
            color: this.color
          }),
          c(VE, {
            icon: this.iconFill,
            value: this.value,
            color: this.color,
            size: this.size
          })
        ])
      ]
    );
  }
}, Dde = {
  name: "ARate",
  components: {
    AIcon: ut,
    ATranslation: Ae,
    ARateIcon: WE
  },
  props: {
    text: {
      type: String,
      default: null
    },
    extra: {
      type: Object,
      required: !1
    },
    rating: {
      type: Number,
      default: 5
    },
    icon: {
      type: String,
      default: ym
    },
    iconFill: {
      type: String,
      default: Qc
    },
    readonly: {
      type: Boolean,
      default: !1
    },
    showScore: {
      type: Boolean,
      default: !1
    },
    modelValue: {
      type: Number,
      default: 0
    },
    color: {
      type: String,
      default: "yellow"
    },
    hoveredColor: {
      type: String,
      default: "orange"
    },
    halfIcon: {
      type: Boolean,
      default: !1
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const {
      text: n,
      rating: r,
      modelValue: s,
      showScore: i,
      readonly: o,
      icon: u,
      extra: h,
      color: A,
      hoveredColor: E,
      halfIcon: p,
      size: T
    } = hp(e), S = B(void 0), b = B(void 0), L = B(-1), v = () => {
      S.value = s.value, b.value = s.value;
    }, I = _(() => e.iconFill ? e.iconFill : `${e.icon}Fill`), R = () => {
      o.value || (S.value = 0, t("update:modelValue", S.value));
    }, g = (C, $) => {
      if (o.value)
        return;
      L.value = $;
      let H = $ + 1;
      if (p.value) {
        const j = C.target.getBoundingClientRect();
        H = C.clientX - j.left < j.width / 2 ? $ + 0.5 : $ + 1;
      }
      b.value = H;
    }, D = () => {
      o.value || (L.value = -1);
    }, w = _(() => Array(r.value).fill(null).map((C, $) => $ <= L.value ? E.value : $ < S.value ? A.value : null)), M = (C, $) => {
      if (o.value)
        return;
      let H = $ + 1;
      if (p.value) {
        const j = C.target.getBoundingClientRect();
        H = C.clientX - j.left < j.width / 2 ? $ + 0.5 : $ + 1;
      }
      t("update:modelValue", H), S.value = H;
    }, P = _(() => {
      const C = L.value >= 0 ? b.value : S.value, $ = Math.floor(C), H = C % 1, j = Array(r.value).fill(0);
      for (let le = 0; le < $; le++)
        j[le] = 100;
      return H !== 0 && $ < r.value && (j[$] = H * 100), j;
    }), F = (C, $) => {
      if (o.value)
        return;
      let H = $ + 1;
      if (p.value) {
        const j = C.target.getBoundingClientRect();
        H = C.clientX - j.left < j.width / 2 ? $ + 0.5 : $ + 1;
      }
      b.value !== H && (b.value = H, L.value = $);
    };
    return v(), {
      rating: r,
      showScore: i,
      readonly: o,
      icon: u,
      iconFill: I,
      text: n,
      extra: h,
      color: A,
      size: T,
      onMouseEnterIcon: g,
      onMouseLeaveIcon: D,
      onClickIcon: M,
      onDoubleClickIcon: R,
      onMouseMoveIcon: F,
      modelValue: _(() => S.value),
      iconValues: P,
      computedColor: w
    };
  },
  render() {
    return c("div", { class: "a_rate_container" }, [
      ...Array.from({ length: this.rating }, (e, t) => c(WE, {
        class: "a_rate_icon",
        icon: this.icon,
        iconFill: this.iconFill,
        value: this.iconValues[t],
        onClick: (n) => this.onClickIcon(n, t),
        onDblclick: this.onDoubleClickIcon,
        onMouseenter: (n) => this.onMouseEnterIcon(n, t),
        onMouseleave: this.onMouseLeaveIcon,
        onMousemove: (n) => this.onMouseMoveIcon(n, t),
        color: this.computedColor[t],
        size: this.size,
        key: t
      })),
      this.showScore && c("span", { class: "a_rate_score" }, this.modelValue.toString()),
      c(Ae, {
        class: "a_rate_label",
        text: this.text,
        extra: this.extra
      })
    ]);
  }
}, Wk = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
  <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0"/>
</svg>`, Gk = {
  name: "AResizer",
  props: {
    direction: {
      type: String,
      required: !0,
      validator: (e) => ["x", "y"].indexOf(e) !== -1
    },
    disabled: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "mousedown",
    "mousemove",
    "mouseoutDocument",
    "mouseup"
  ],
  data() {
    return {
      clientHeight: 0,
      clientWidth: 0
    };
  },
  computed: {
    isDirectionX() {
      return this.direction === "x";
    },
    isDirectionY() {
      return this.direction === "y";
    },
    directionClass() {
      return `a_resizer_${this.direction}`;
    },
    directionIcon() {
      if (this.direction === "x")
        return Wk;
      if (this.direction === "y")
        return Nl;
    },
    cursor() {
      if (this.direction === "x")
        return "w-resize";
      if (this.direction === "y")
        return "s-resize";
    },
    bodyClass() {
      return `a_resizer_${this.direction}_active__body`;
    },
    attributesResizer() {
      const e = {
        class: ["a_resizer", this.directionClass, {
          a_resizer_disabled: this.disabled
        }],
        ariaHidden: !0
      };
      return this.disabled || (e.onMousedown = this.mousedown), e;
    }
  },
  unmounted() {
    this.removeMouseEventListeners(), this.removeClassFromBody();
  },
  methods: {
    mousedown(e) {
      this.addMouseEventListeners(), this.clientHeight = document.documentElement.clientHeight, this.clientWidth = document.documentElement.clientWidth, this.$emit("mousedown", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.addClassToBody();
    },
    mousemove(e) {
      this.$emit("mousemove", {
        $event: e,
        clientX: e.clientX,
        clientY: e.clientY,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      });
    },
    mouseup(e) {
      this.removeMouseEventListeners(), this.$emit("mouseup", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.removeClassFromBody();
    },
    mouseoutDocument(e) {
      this.removeMouseEventListeners(), this.$emit("mouseoutDocument", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.removeClassFromBody();
    },
    addMouseEventListeners() {
      document.addEventListener("mousemove", this.mousemove), document.addEventListener("mouseup", this.mouseup), document.addEventListener("mouseleave", this.mouseoutDocument);
    },
    removeMouseEventListeners() {
      document.removeEventListener("mousemove", this.mousemove), document.removeEventListener("mouseup", this.mouseup), document.removeEventListener("mouseleave", this.mouseoutDocument);
    },
    addClassToBody() {
      document.body.classList.add(this.bodyClass);
    },
    removeClassFromBody() {
      document.body.classList.remove(this.bodyClass);
    }
  },
  render() {
    return c("div", this.attributesResizer, [
      c("div", {
        class: "a_resizer__line"
      }),
      c(ut, {
        class: "a_resizer__icon",
        icon: this.directionIcon
      })
    ]);
  }
}, Kk = {
  name: "ACircle",
  props: {
    cx: {
      type: [Number, String],
      required: !0
    },
    cy: {
      type: [Number, String],
      required: !0
    },
    r: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("circle", {
      cx: this.cx,
      cy: this.cy,
      r: this.r,
      fill: this.fill,
      stroke: this.stroke,
      "stroke-width": this.strokeWidth
    });
  }
}, rl = {
  name: "ARect",
  props: {
    width: {
      type: [Number, String],
      required: !0
    },
    height: {
      type: [Number, String],
      required: !0
    },
    x: {
      type: [Number, String],
      required: !0
    },
    y: {
      type: [Number, String],
      required: !0
    },
    rx: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    ry: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("rect", {
      width: this.width,
      height: this.height,
      x: this.x,
      y: this.y,
      rx: this.rx,
      ry: this.ry,
      fill: this.fill,
      stroke: this.stroke,
      strokeWidth: this.strokeWidth
    });
  }
};
function jk(e) {
  const t = d(e, "yStandTop"), n = d(e, "pipesWidth"), r = d(e, "centerX"), s = d(e, "balanceWidth"), i = d(e, "balanceCircleRadius"), o = d(e, "balanceTopHeight"), u = d(e, "degree"), h = _(() => t.value - i.value - n.value / 2), A = _(() => s.value / 2), E = _(() => r.value - A.value - i.value), p = _(() => r.value + i.value), T = _(() => t.value - i.value), S = _(() => r.value - n.value / 2), b = _(() => T.value - i.value - o.value);
  return {
    transformRotate: _(() => `rotate(${u.value}, ${r.value}, ${T.value})`),
    widthBalancePipe: A,
    xBalanceLeft: E,
    xBalanceRight: p,
    xBalanceTopHeight: S,
    yBalance: h,
    yBalanceCenter: T,
    yBalanceTopHeight: b
  };
}
const zk = {
  name: "AScaleBalance",
  props: {
    degree: {
      type: Number,
      required: !0
    },
    pipesWidth: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    balanceWidth: {
      type: Number,
      required: !0
    },
    balanceCircleRadius: {
      type: Number,
      required: !0
    },
    balanceTopHeight: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      transformRotate: t,
      widthBalancePipe: n,
      xBalanceLeft: r,
      xBalanceRight: s,
      xBalanceTopHeight: i,
      yBalance: o,
      yBalanceCenter: u,
      yBalanceTopHeight: h
    } = jk(e);
    return {
      transformRotate: t,
      widthBalancePipe: n,
      xBalanceLeft: r,
      xBalanceRight: s,
      xBalanceTopHeight: i,
      yBalance: o,
      yBalanceCenter: u,
      yBalanceTopHeight: h
    };
  },
  render() {
    return c("g", {
      transform: this.transformRotate
    }, [
      c(rl, {
        width: this.pipesWidth,
        height: this.balanceTopHeight,
        x: this.xBalanceTopHeight,
        y: this.yBalanceTopHeight,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(rl, {
        width: this.widthBalancePipe,
        height: this.pipesWidth,
        x: this.xBalanceLeft,
        y: this.yBalance,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(rl, {
        width: this.widthBalancePipe,
        height: this.pipesWidth,
        x: this.xBalanceRight,
        y: this.yBalance,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(Kk, {
        cx: this.centerX,
        cy: this.yBalanceCenter,
        r: this.balanceCircleRadius,
        fill: "none",
        stroke: "currentColor",
        strokeWidth: this.pipesWidth
      })
    ]);
  }
};
function Yk(e) {
  const t = d(e, "direction"), n = d(e, "degree"), r = d(e, "balanceWidth"), s = d(e, "balanceCircleRadius"), i = d(e, "yStandTop"), o = d(e, "bowlThreadHeight"), u = d(e, "pipesWidth"), h = d(e, "centerX"), A = d(e, "bowlWidth"), E = _(() => r.value / 2 + s.value), p = _(() => i.value + o.value - u.value / 2 - s.value + 2), T = _(() => t.value === "right" ? n.value : n.value + 180), S = _(() => r.value / 2 + A.value / 2 + s.value - 2), b = _(() => r.value / 2 - A.value / 2 + s.value - 1), L = _(() => t.value === "left" ? h.value - S.value + E.value : h.value + b.value - E.value), v = _(() => (t.value === "right", E.value * Math.cos(T.value * Math.PI / 180) + L.value)), I = _(() => E.value * Math.sin(T.value * Math.PI / 180) + p.value);
  return {
    x: v,
    y: I
  };
}
const GE = {
  name: "AScaleBowl",
  props: {
    direction: {
      type: String,
      required: !0,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    },
    degree: {
      type: Number,
      required: !0
    },
    balanceWidth: {
      type: Number,
      required: !0
    },
    balanceCircleRadius: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    bowlThreadHeight: {
      type: Number,
      required: !0
    },
    pipesWidth: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    },
    bowlWidth: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      x: t,
      y: n
    } = Yk(e);
    return {
      x: t,
      y: n
    };
  },
  render() {
    return c("use", {
      x: this.x,
      y: this.y,
      "xlink:href": "#scale_bowl"
    });
  }
}, Xk = {
  name: "APath",
  props: {
    d: {
      type: String,
      required: !0,
      default: ""
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    fillRule: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["evenodd", "inherit", "initial", "nonzero", "revert", "unset"].indexOf(e) !== -1
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("path", {
      d: this.d,
      fill: this.fill,
      fillRule: this.fillRule,
      stroke: this.stroke,
      strokeWidth: this.strokeWidth
    });
  }
};
function Zk(e) {
  const t = d(e, "points"), n = (s) => xn(s, (o) => {
    let u = "";
    return it(o) ? u = o : me(o) && (u = o.join(",")), u;
  }).join(" ");
  return {
    pointsLocal: _(() => it(t.value) ? t.value : me(t.value) ? n(t.value) : "")
  };
}
const Jk = {
  name: "APolyline",
  props: {
    points: {
      type: [Array, String],
      required: !0,
      default: []
    },
    fill: {
      type: String,
      required: !1,
      default: "none"
    },
    stroke: {
      type: String,
      required: !1,
      default: "currentColor"
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      pointsLocal: t
    } = Zk(e);
    return {
      pointsLocal: t
    };
  },
  render() {
    return c("polyline", {
      points: this.pointsLocal,
      fill: this.fill,
      stroke: this.stroke,
      "stroke-width": this.strokeWidth
    });
  }
};
function Qk(e) {
  const t = d(e, "bowlThreadHeight"), n = d(e, "bowlThreadWidth"), r = d(e, "bowlThreadPaddingX"), s = d(e, "bowlWidth"), i = d(e, "bowlRadius"), o = _(() => {
    const h = r.value, A = r.value + n.value / 2, E = r.value + n.value, p = 1, T = p - t.value;
    return `${h},${p} ${A},${T} ${E},${p}`;
  });
  return {
    bowlD: _(() => `m0,0 a${i.value},${i.value} 0 1,0 ${s.value},0 z`),
    bowlThreadPoints: o
  };
}
const eU = {
  name: "AScaleBowlDefs",
  props: {
    bowlThreadStrokeWidth: {
      type: Number,
      required: !0
    },
    bowlThreadWidth: {
      type: Number,
      required: !0
    },
    bowlThreadHeight: {
      type: Number,
      required: !0
    },
    bowlThreadPaddingX: {
      type: Number,
      required: !0
    },
    bowlWidth: {
      type: Number,
      required: !0
    },
    bowlRadius: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      bowlD: t,
      bowlThreadPoints: n
    } = Qk(e);
    return {
      bowlD: t,
      bowlThreadPoints: n
    };
  },
  render() {
    return c("defs", {}, [
      c("g", {
        id: "scale_bowl"
      }, [
        c(Jk, {
          points: this.bowlThreadPoints,
          strokeWidth: this.bowlThreadStrokeWidth
        }),
        c(Xk, {
          d: this.bowlD,
          fill: "currentColor"
        })
      ])
    ]);
  }
};
function tU(e) {
  const t = d(e, "centerX"), n = d(e, "standWidth"), r = d(e, "pipesWidth"), s = _(() => t.value - r.value / 2), i = _(() => t.value - n.value / 2);
  return {
    xTop: s,
    xBottom: i
  };
}
const nU = {
  name: "AScaleStand",
  props: {
    pipesWidth: {
      type: Number,
      required: !0
    },
    standWidth: {
      type: Number,
      required: !0
    },
    standHeight: {
      type: Number,
      required: !0
    },
    yStandBottom: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      xBottom: t,
      xTop: n
    } = tU(e);
    return {
      xBottom: t,
      xTop: n
    };
  },
  render() {
    return c("g", null, [
      c(rl, {
        width: this.pipesWidth,
        height: this.standHeight,
        x: this.xTop,
        y: this.yStandTop,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(rl, {
        width: this.standWidth,
        height: this.pipesWidth,
        x: this.xBottom,
        y: this.yStandBottom,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      })
    ]);
  }
};
function rU(e) {
  const t = d(e, "value"), n = d(e, "classNegative"), r = d(e, "classPositive"), s = d(e, "classNeutral");
  return {
    cssClass: _(() => {
      if (t.value === 0) {
        if (s.value)
          return s.value;
      } else if (t.value < 0) {
        if (n.value)
          return n.value;
      } else if (r.value)
        return r.value;
    })
  };
}
function aU(e) {
  const t = d(e, "value"), n = d(e, "maxDegree");
  return {
    degree: _(() => n.value * t.value / 100)
  };
}
function sU(e) {
  const t = d(e, "viewBoxWidth"), n = d(e, "viewBoxHeight"), r = d(e, "pipesWidth"), s = d(e, "standHeight"), i = _(() => `0 0 ${t.value} ${n.value}`), o = _(() => t.value / 2), u = _(() => n.value - r.value), h = _(() => u.value - s.value + 1);
  return {
    centerX: o,
    viewBoxLocal: i,
    yStandBottom: u,
    yStandTop: h
  };
}
const Bde = {
  name: "AScale",
  props: {
    balanceCircleRadius: {
      type: Number,
      required: !1,
      default: 3.5
    },
    balanceTopHeight: {
      type: Number,
      required: !1,
      default: 6
    },
    balanceWidth: {
      type: Number,
      required: !1,
      default: 60
    },
    bowlRadius: {
      type: Number,
      required: !1,
      default: 12.6
    },
    bowlThreadHeight: {
      type: Number,
      required: !1,
      default: 20
    },
    bowlThreadPaddingX: {
      type: Number,
      required: !1,
      default: 4
    },
    bowlThreadStrokeWidth: {
      type: Number,
      required: !1,
      default: 2
    },
    bowlThreadWidth: {
      type: Number,
      required: !1,
      default: 16
    },
    bowlWidth: {
      type: Number,
      required: !1,
      default: 25
    },
    classNegative: {
      type: String,
      required: !1,
      default: void 0
    },
    classNeutral: {
      type: String,
      required: !1,
      default: void 0
    },
    classPositive: {
      type: String,
      required: !1,
      default: void 0
    },
    maxDegree: {
      type: Number,
      required: !1,
      default: 30
    },
    pipesWidth: {
      type: Number,
      required: !1,
      default: 3
    },
    standHeight: {
      type: Number,
      required: !1,
      default: 46
    },
    standWidth: {
      type: Number,
      required: !1,
      default: 70
    },
    value: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= -100 && e <= 100
    },
    viewBoxHeight: {
      type: Number,
      required: !1,
      default: 80
    },
    viewBoxWidth: {
      type: Number,
      required: !1,
      default: 100
    }
  },
  setup(e) {
    const {
      degree: t
    } = aU(e), {
      cssClass: n
    } = rU(e), {
      centerX: r,
      viewBoxLocal: s,
      yStandBottom: i,
      yStandTop: o
    } = sU(e);
    return {
      centerX: r,
      cssClass: n,
      degree: t,
      viewBoxLocal: s,
      yStandBottom: i,
      yStandTop: o
    };
  },
  render() {
    return c("div", {
      class: this.cssClass
    }, [
      c("svg", {
        viewBox: this.viewBoxLocal,
        version: "1.1",
        xmlns: "http://www.w3.org/2000/svg"
      }, [
        c(eU, {
          bowlThreadStrokeWidth: this.bowlThreadStrokeWidth,
          bowlThreadWidth: this.bowlThreadWidth,
          bowlThreadHeight: this.bowlThreadHeight,
          bowlThreadPaddingX: this.bowlThreadPaddingX,
          bowlWidth: this.bowlWidth,
          bowlRadius: this.bowlRadius
        }),
        c(zk, {
          degree: this.degree,
          pipesWidth: this.pipesWidth,
          yStandTop: this.yStandTop,
          centerX: this.centerX,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          balanceTopHeight: this.balanceTopHeight
        }),
        c(nU, {
          standWidth: this.standWidth,
          standHeight: this.standHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          yStandBottom: this.yStandBottom,
          yStandTop: this.yStandTop
        }),
        c(GE, {
          direction: "left",
          degree: this.degree,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          yStandTop: this.yStandTop,
          bowlThreadHeight: this.bowlThreadHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          bowlWidth: this.bowlWidth
        }),
        c(GE, {
          direction: "right",
          degree: this.degree,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          yStandTop: this.yStandTop,
          bowlThreadHeight: this.bowlThreadHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          bowlWidth: this.bowlWidth
        })
      ])
    ]);
  }
};
function iU(e, {
  hasTextAndLength: t = B(!1),
  isMoreButtonObservingVisible: n = B(!1),
  isOpen: r = B(!1),
  isTextShorterThanTextLength: s = B(!1)
}) {
  const i = d(e, "btnIconLeftLess"), o = d(e, "btnIconLeftMore"), u = d(e, "btnIconRightLess"), h = d(e, "btnIconRightMore"), A = d(e, "btnTextLess"), E = d(e, "btnTextMore"), p = d(e, "btnTitleLess"), T = d(e, "btnTitleMore"), S = d(e, "showLess"), b = B(void 0), L = _(() => r.value ? A.value : E.value), v = _(() => r.value ? p.value : T.value), I = _(() => r.value ? i.value : o.value), R = _(() => r.value ? u.value : h.value), g = _(() => t.value ? s.value ? !1 : S.value ? !0 : !r.value : n.value ? S.value ? !0 : !r.value : !1);
  return {
    btnIconLeft: I,
    btnIconRight: R,
    btnText: L,
    btnTitle: v,
    buttonRef: b,
    isButtonVisible: g
  };
}
function lU({
  hasTextAndLength: e = _(() => !1),
  isOpen: t = B(!1)
}) {
  return {
    ariaExpanded: _(() => {
      if (e.value)
        return t.value;
    })
  };
}
function oU(e, {
  hasTextAndLength: t = _(() => !1),
  isOpen: n = B(!1)
}) {
  const r = d(e, "height");
  return {
    maxHeightStyle: _(() => {
      if (!(t.value || n.value))
        return r.value === 0 ? "max-height: none;" : `max-height: ${r.value}px`;
    })
  };
}
function uU(e) {
  const t = d(e, "isOpenDefault"), n = B(void 0);
  return {
    initIsOpen: () => {
      n.value = t.value;
    },
    isOpen: n
  };
}
function _U(e, {
  isBtnHiddenDependentOnTextLength: t = _(() => !1)
}) {
  const n = d(e, "height"), r = B(void 0), s = B(void 0), i = B(void 0), o = () => {
    if (t.value)
      return;
    (fe(r.value, "offsetHeight") || 0) > n.value ? i.value = !0 : i.value = !1;
  };
  return {
    checkHeight: o,
    containerRef: r,
    isMoreButtonObservingVisible: i,
    startObservingMutation: () => {
      t.value || (s.value = new ResizeObserver(
        ol(() => {
          o();
        }, 300)
      ), s.value.observe(r.value));
    },
    stopObservingMutation: () => {
      t.value || s.value && s.value.unobserve(r.value);
    }
  };
}
function dU({
  hasTextAndLength: e = _(() => !1),
  isOpen: t = B(!1)
}) {
  return {
    textScreenReaderLocal: _(() => {
      if (!e.value)
        return t.value ? "_A_SHOW_MORE_LESS_SCREEN_READER_" : "_A_SHOW_MORE_MORE_SCREEN_READER_";
    })
  };
}
function cU(e, {
  isOpen: t = B(!1)
}) {
  const n = d(e, "text"), r = d(e, "textLength"), s = _(() => !!(n.value && r.value)), i = _(() => r.value > n.value.length), o = _(() => s.value && i.value), u = _(() => {
    const A = n.value.slice(0, r.value).trimEnd();
    let E = "...", p = !0;
    for (let T = A.length - 1; T > A.length - 4 && A[T] === "."; T--) {
      if (p)
        E = E.slice(0, -1);
      else
        break;
      p = !0;
    }
    return `${A}${E}`;
  }), h = _(() => {
    if (s.value) {
      if (i.value)
        return n.value;
      if (!t.value)
        return u.value;
    }
    return n.value;
  });
  return {
    hasTextAndLength: s,
    isBtnHiddenDependentOnTextLength: o,
    isTextShorterThanTextLength: i,
    textLocal: h
  };
}
function fU(e, {
  textLocal: t = _(() => {
  })
}) {
  const n = d(e, "safeHtml"), r = d(e, "html");
  return {
    isTextOrHtmlVisible: _(() => !!(t.value || n.value || r.value))
  };
}
function hU(e, { emit: t }, {
  containerRef: n = B(void 0),
  hasTextAndLength: r = _(() => !1),
  isOpen: s = B(!1),
  stopObservingMutation: i = () => {
  }
}) {
  const o = d(e, "showLess");
  return {
    isOpen: s,
    toggleButton: () => {
      s.value = !s.value, s.value && !o.value && i(), t("toggle", { isOpen: s.value }), r.value && s.value && !window.isScrollDisabled && uu().then(
        () => sa({
          element: n.value
        })
      );
    }
  };
}
const wde = {
  name: "AShowMore",
  inheritAttrs: !0,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    btnAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link a_p_0"
    },
    btnIconLeftLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconLeftMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnId: {
      type: String,
      required: !1,
      default: void 0
    },
    btnParentClass: {
      type: String,
      required: !1,
      default: "a_text_center"
    },
    btnTextLess: {
      type: String,
      required: !1,
      default: "_A_SHOW_MORE_LESS_"
    },
    btnTextMore: {
      type: String,
      required: !1,
      default: "_A_SHOW_MORE_MORE_"
    },
    btnTitleLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitleMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitlePlacement: {
      type: String,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    height: {
      type: Number,
      required: !1,
      default: 200,
      validator: (e) => e >= 0
    },
    html: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_show_more_")
    },
    isBtnTitleHtml: {
      type: Boolean,
      required: !1
    },
    isOpenDefault: {
      type: Boolean,
      required: !1,
      default: !1
    },
    safeHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    showLess: {
      type: Boolean,
      required: !1,
      default: !0
    },
    text: {
      type: String,
      required: !1,
      default: void 0
    },
    textLength: {
      type: Number,
      required: !1,
      default: void 0,
      validator: (e) => e > 0
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      isOpen: r
    } = uU(e), {
      hasTextAndLength: s,
      isBtnHiddenDependentOnTextLength: i,
      isTextShorterThanTextLength: o,
      textLocal: u
    } = cU(e, {
      isOpen: r
    }), {
      isTextOrHtmlVisible: h
    } = fU(e, {
      textLocal: u
    }), {
      checkHeight: A,
      containerRef: E,
      isMoreButtonObservingVisible: p,
      startObservingMutation: T,
      stopObservingMutation: S
    } = _U(e, {
      isBtnHiddenDependentOnTextLength: i
    }), {
      toggleButton: b
    } = hU(e, t, {
      containerRef: E,
      hasTextAndLength: s,
      isOpen: r,
      stopObservingMutation: S
    }), {
      btnIconLeft: L,
      btnIconRight: v,
      btnText: I,
      btnTitle: R,
      buttonRef: g,
      isButtonVisible: D
    } = iU(e, {
      hasTextAndLength: s,
      isMoreButtonObservingVisible: p,
      isOpen: r,
      isTextShorterThanTextLength: o
    }), {
      maxHeightStyle: w
    } = oU(e, {
      hasTextAndLength: s,
      isOpen: r
    }), {
      textScreenReaderLocal: M
    } = dU({
      hasTextAndLength: s,
      isOpen: r
    }), {
      ariaExpanded: P
    } = lU({
      hasTextAndLength: s,
      isOpen: r
    });
    return n({
      buttonRef: g,
      containerRef: E,
      isOpen: r,
      toggleButton: b
    }), Wr(() => {
      A(), T();
    }), Dt(() => {
      S();
    }), {
      ariaExpanded: P,
      btnIconLeft: L,
      btnIconRight: v,
      btnText: I,
      btnTitle: R,
      buttonRef: g,
      containerRef: E,
      hasTextAndLength: s,
      isButtonVisible: D,
      isOpen: r,
      isTextOrHtmlVisible: h,
      maxHeightStyle: w,
      textLocal: u,
      textScreenReaderLocal: M,
      toggleButton: b
    };
  },
  render() {
    return c("div", {
      class: [
        "a_show_more",
        {
          a_show_more_open: this.isOpen
        }
      ]
    }, [
      c("div", {
        class: "a_show_more__wrapper",
        style: this.maxHeightStyle
      }, [
        c("div", {
          ref: "containerRef",
          id: this.id,
          ariaExpanded: this.ariaExpanded,
          ...this.$attrs
        }, [
          this.isTextOrHtmlVisible && c(Ae, {
            alwaysTranslate: this.alwaysTranslate,
            tag: "div",
            text: this.textLocal,
            html: this.html,
            safeHtml: this.safeHtml
          }),
          this.$slots.default && this.$slots.default({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          })
        ])
      ]),
      this.isButtonVisible && c("div", {
        class: this.btnParentClass
      }, [
        c(ft, {
          ref: "buttonRef",
          id: this.btnId,
          alwaysTranslate: this.alwaysTranslate,
          "aria-controls": this.id,
          class: [
            "a_show_more__button",
            this.btnClass
          ],
          disabled: this.disabled,
          iconLeft: this.btnIconLeft,
          iconRight: this.btnIconRight,
          isTitleHtml: this.isBtnTitleHtml,
          text: this.btnText,
          textAriaHidden: !this.hasTextAndLength,
          textScreenReader: this.textScreenReaderLocal,
          title: this.btnTitle,
          titlePlacement: this.btnTitlePlacement,
          ...this.btnAttributes,
          onClick: this.toggleButton
        }, () => this.$slots.button && this.$slots.button({
          isButtonVisible: this.isButtonVisible,
          isOpen: this.isOpen
        }))
      ])
    ]);
  }
};
function AU(e, {
  attributesForRoot: t = _(() => ({})),
  isColumnVisible: n = _(() => !1),
  isLocked: r = _(() => !1),
  labelTranslated: s = _(() => "")
}) {
  const i = d(e, "searchColumnModel"), o = _(() => {
    if (!i.value)
      return !0;
    const h = new RegExp(Su(i.value), "gi");
    return `${s.value}`.search(h) !== -1;
  });
  return {
    attributesComponent: _(() => {
      const h = {
        ...t.value,
        class: "a_table__th__dropdown__li"
      };
      return o.value || (h.style = "display: none;"), !r.value && !n.value && (h.class += " a_table__th__dropdown__li_invisible"), h;
    })
  };
}
const EU = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01757813,0,0,0.01757813,-3.96314e-5,1.7578125e-5)"
  >
    <path
      d="m 493.034,717.353 v 0 c -22.097,-7.811 -37.924,-28.881 -37.924,-53.651 0,-31.421 25.469,-56.89 56.89,-56.89 31.421,0 56.89,25.469 56.89,56.89 0,24.769 -15.833,45.843 -37.924,53.651 v 98.392 c 0,9.98 -8.486,18.618 -18.966,18.618 -10.164,0 -18.966,-8.339 -18.966,-18.618 z m -265.48,-300.17 v 0 0 C 164.683,417.358 113.78,467.989 113.78,531.324 v 189.27 c 0,167.568 136.008,303.405 303.372,303.405 h 189.695 c 167.548,0 303.372,-136.179 303.372,-303.405 v -189.27 c 0,-62.93 -50.854,-113.956 -113.774,-114.141 V 284.414 C 796.445,127.332 668.777,-0.001 512,-0.001 c -157.093,0 -284.445,127.307 -284.445,284.415 v 132.769 z m 113.779,0 V 284.476 c 0,-94.496 76.411,-170.699 170.665,-170.699 94.063,0 170.665,76.426 170.665,170.699 V 417.183 H 341.33 Z"
    />
  </g>
</svg>`;
function pU(e, {
  isLocked: t = _(() => !1)
}) {
  const n = d(e, "column"), r = d(e, "disabledOptions"), s = de("changeModelColumnsVisible"), i = de("modelColumnsVisibleLocal"), o = _(() => n.value.id in i.value ? !!i.value[n.value.id] : !n.value.hide), u = _(() => t.value ? EU : o.value ? ZT : XT), h = _(() => t.value ? "_A_TABLE_OPTIONS_BTN_LOCK_TITLE_" : o.value ? "_A_TABLE_OPTIONS_BTN_EYE_TITLE_" : "_A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_"), A = ({ $event: p }) => {
    p.stopPropagation(), p.preventDefault();
    const T = pe(i.value);
    T[n.value.id] = !o.value, s(T);
  };
  return {
    buttonVisibleProps: _(() => {
      const p = {
        class: "a_table__th__dropdown_item__icon",
        tag: "span",
        iconLeft: u.value,
        title: h.value,
        textScreenReader: h.value
      };
      return t.value || (p.tag = "button", p.class += " a_table__th__dropdown_item__icon_btn a_btn a_btn_link", p.onClick = A, r.value && (p.disabled = !0)), p;
    }),
    isColumnVisible: o
  };
}
const KE = "a_table__drag_element";
function gm(e, { emit: t }, {
  classOverString: n = "",
  inDropdown: r = !1
}) {
  const s = d(e, "column"), i = d(e, "columnIndex"), o = d(e, "columnIndexDraggable"), u = de("isLoadingOptions"), h = de("isColumnsDnd"), A = B(null), E = _(() => o.value > i.value ? n : `${n}_right`), p = (R) => {
    var g, D, w;
    if ((g = R.target) == null || g.classList.add(KE), r) {
      const M = ((D = R.target) == null ? void 0 : D.offsetHeight) || 30;
      (w = R.target) == null || w.parentElement.style.setProperty("--a_table_draggable_li_height", `${M}px`);
    }
    R.dataTransfer.effectAllowed = "move", t("dragstartParent", {
      columnIndex: i.value
    });
  }, T = (R) => {
    var g, D;
    (g = R.target) == null || g.classList.remove(E.value), (D = R.target) == null || D.classList.remove(KE), t("dragendParent");
  }, S = () => {
    A.value && A.value.classList && A.value.classList.add(E.value), t("dragenterParent", {
      columnIndex: i.value
    });
  }, b = (R) => (R.preventDefault && R.preventDefault(), !1), L = () => {
    A.value && A.value.classList && A.value.classList.remove(E.value), t("dragleaveParent", {
      columnIndex: i.value
    });
  }, v = _(() => !!s.value.locked);
  return {
    attributesForRoot: _(() => {
      const R = {
        ref: "root"
      };
      return !v.value && h.value && (R.draggable = !u.value, R.onDragstart = p, R.onDragend = T, R.onDragenter = S, R.onDragover = b, R.onDragleave = L), R;
    }),
    isLocked: v,
    root: A
  };
}
function TU(e) {
  const t = d(e, "column"), n = d(e, "searchColumnModel"), {
    filterSearchHighlight: r
  } = Wn(), s = _(() => Da(t.value.label) ? xt({
    placeholder: t.value.label
  }) : t.value.label);
  return {
    labelLocal: _(() => r(s.value, { searchModel: n.value })),
    labelTranslated: s
  };
}
function mU(e) {
  const t = d(e, "columnIndex"), n = de("changeColumnsOrdering"), r = de("columnsOrdered"), s = de("tableId"), i = ({ columnIndex: T, iconKey: S }) => `${s.value}_${S}_${T}`, o = ({ $event: T }) => {
    T.stopPropagation();
    const S = t.value - 1;
    n({
      columnIndexDraggable: t.value,
      columnIndexOver: S
    }), window.isScrollDisabled || setTimeout(() => {
      sa({
        selector: `#${i({
          columnIndex: S,
          iconKey: "up"
        })}`
      });
    });
  }, u = ({ $event: T }) => {
    T.stopPropagation();
    const S = t.value + 1;
    n({
      columnIndexDraggable: t.value,
      columnIndexOver: S
    }), window.isScrollDisabled || setTimeout(() => {
      const b = `#${i({
        columnIndex: S,
        iconKey: "down"
      })}`;
      sa({
        selector: b
      });
    });
  }, h = _(() => i({
    columnIndex: t.value,
    iconKey: "up"
  })), A = _(() => i({
    columnIndex: t.value,
    iconKey: "down"
  })), E = _(() => t.value !== 0 && !r.value[t.value - 1].locked), p = _(() => r.value.length - 1 !== t.value && !r.value[t.value + 1].locked);
  return {
    idButtonArrowDown: A,
    idButtonArrowUp: h,
    isButtonArrowDownVisible: p,
    isButtonArrowUpVisible: E,
    moveColumnDown: u,
    moveColumnUp: o
  };
}
const SU = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-grip-vertical" viewBox="0 0 16 16">
  <path d="M7 2a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M7 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/>
</svg>`, bU = {
  name: "ATableHeaderThActionItem",
  components: {
    AIcon: ut,
    ATranslation: Ae
  },
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    columnIndexDraggable: {
      type: Number,
      required: !1,
      default: -1
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    searchColumnModel: {
      type: String,
      required: !0
    }
  },
  emits: [
    "dragendParent",
    "dragstartParent",
    "dragenterParent",
    "dragleaveParent"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsOrdered",
    "isColumnsDnd",
    "isLoadingOptions",
    "isLoadingTable",
    "modelColumnsVisibleLocal",
    "tableId"
  ],
  setup(e, t) {
    const {
      attributesForRoot: n,
      isLocked: r,
      root: s
    } = gm(e, t, {
      classOverString: "a_table__th__dropdown__li_over",
      inDropdown: !0
    }), {
      labelLocal: i,
      labelTranslated: o
    } = TU(e), {
      buttonVisibleProps: u,
      isColumnVisible: h
    } = pU(e, {
      isLocked: r
    }), {
      idButtonArrowDown: A,
      idButtonArrowUp: E,
      isButtonArrowDownVisible: p,
      isButtonArrowUpVisible: T,
      moveColumnDown: S,
      moveColumnUp: b
    } = mU(e), {
      attributesComponent: L
    } = AU(e, {
      attributesForRoot: n,
      isColumnVisible: h,
      isLocked: r,
      labelTranslated: o
    });
    return {
      attributesComponent: L,
      attributesForRoot: n,
      buttonVisibleProps: u,
      idButtonArrowDown: A,
      idButtonArrowUp: E,
      isButtonArrowDownVisible: p,
      isButtonArrowUpVisible: T,
      isLocked: r,
      labelLocal: i,
      moveColumnDown: S,
      moveColumnUp: b,
      root: s
    };
  },
  render() {
    return this.column.isRender === !1 ? null : c("li", this.attributesComponent, [
      c("div", {
        class: "a_dropdown__item_text a_table__th__dropdown_item"
      }, [
        c("div", {
          class: "a_table__th__dropdown_item__child"
        }, [
          c(ft, this.buttonVisibleProps),
          c("span", {
            class: "a_position_relative"
          }, [
            this.column.icon && c(ut, {
              icon: this.column.icon,
              class: "a_table__th__icon"
            }),
            c(Ae, {
              tag: "span",
              class: "a_table__th__text",
              safeHtml: this.labelLocal
            }),
            this.column.title && c(Ae, {
              title: this.column.title,
              ariaHidden: !0,
              tag: "span",
              class: "a_position_absolute_all"
            }),
            this.column.title && c(Ae, {
              text: this.column.title,
              tag: "span",
              class: "a_sr_only"
            })
          ]),
          !this.isLocked && this.isColumnsDnd ? [
            this.isButtonArrowUpVisible && c(ft, {
              id: this.idButtonArrowUp,
              class: "a_sr_only_focusable a_btn a_btn_link a_p_0 a_table__th__dropdown_item__btn_arrow",
              disabled: this.disabledOptions,
              type: "button",
              iconLeft: Jc,
              title: "_A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_",
              textScreenReader: "_A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_",
              onClick: this.moveColumnUp
            }),
            this.isButtonArrowDownVisible && c(ft, {
              id: this.idButtonArrowDown,
              class: "a_sr_only_focusable a_btn a_btn_link a_p_0 a_table__th__dropdown_item__btn_arrow",
              disabled: this.disabledOptions,
              type: "button",
              iconLeft: bi,
              title: "_A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_",
              textScreenReader: "_A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_",
              onClick: this.moveColumnDown
            })
          ] : ""
        ]),
        !this.isLocked && this.isColumnsDnd && c(ut, {
          icon: SU,
          class: "a_table__th__dropdown_item__icon_dnd"
        })
      ])
    ]);
  }
};
function Rm(e) {
  const t = {};
  return e.forEach((n) => {
    t[n.id] = !n.hide;
  }), t;
}
function Om({ element: e, tagsName: t, classStop: n }) {
  if (e && e.tagName) {
    if (t.indexOf(e.tagName) !== -1)
      return !0;
    if (e.classList.contains(n))
      return !1;
    if (e.parentElement)
      return Om({ element: e.parentElement, tagsName: t, classStop: n });
  }
  return !1;
}
function LU({ $event: e, classStop: t = "", tagsName: n = [] } = {}) {
  return e && e.target ? Om({ element: e.target, tagsName: n, classStop: t }) : !1;
}
function al({ column: e, modelColumnsVisibleLocal: t }) {
  return e.isRender === !1 ? !1 : e.id in t ? !!t[e.id] : !e.hide;
}
function vU({ column: e }) {
  return e.isRender === !1 ? !1 : !e.hide;
}
function IU({ columnIndex: e, indexFirstScrollInvisibleColumn: t }) {
  return ae(t) ? !0 : e < t;
}
function yU({ column: e, columnIndex: t, modelIsTableWithoutScroll: n, modelColumnsVisibleLocal: r, indexFirstScrollInvisibleColumn: s }) {
  return n ? al({
    column: e,
    modelColumnsVisibleLocal: r
  }) && IU({
    columnIndex: t,
    indexFirstScrollInvisibleColumn: s
  }) : al({
    column: e,
    modelColumnsVisibleLocal: r
  });
}
function Cm({ tableId: e }) {
  return `${e}_preview_right`;
}
function Nm({ tableId: e }) {
  return `${e}_multiple_panel`;
}
function Dm({ tableId: e }) {
  return `${e}_header_label`;
}
function iu({ row: e, rowIndex: t, keyId: n }) {
  return n ? fe(e, n) : t;
}
function Bm({ rowAction: e, row: t, rowIndex: n }) {
  return e.isHidden ? !1 : Fe(e.isHiddenCallback) ? !e.isHiddenCallback({
    row: t,
    rowIndex: n
  }) : !0;
}
function gU() {
  const e = B("");
  return {
    searchColumnModel: e,
    updateSearchColumnModel: (n) => {
      e.value = n;
    }
  };
}
function wm({
  classOver: e = "",
  classOverRight: t = "",
  classOverParent: n = "",
  inHeader: r = !1
}) {
  const s = B(void 0), i = B(void 0), o = B(void 0), u = de("changeColumnsOrdering"), h = _(() => !ae(i.value)), A = ({ columnIndex: L }) => {
    i.value = L;
  }, E = ({ columnIndex: L }) => {
    o.value = L;
  }, p = ({ columnIndex: L }) => {
    o.value === L && (o.value = void 0);
  }, T = (L) => {
    if (!(ae(i.value) || ae(o.value)))
      return u({
        columnIndexDraggable: i.value,
        columnIndexOver: o.value,
        inHeader: r
      }), L.stopPropagation(), !1;
  }, S = () => {
    s.value.querySelectorAll(`.${n}`).forEach((v) => {
      v.classList.remove(e), v.classList.remove(t);
    });
  };
  return {
    columnIndexDraggable: i,
    dragstart: A,
    dragenter: E,
    dragleave: p,
    dragend: () => {
      S(), i.value = void 0;
    },
    drop: T,
    isDragstart: h,
    root: s
  };
}
function Pm() {
  const e = de("columnActionsWidthMinLocal"), t = de("modelIsTableWithoutScroll");
  return {
    stylesThTd: _(() => t.value ? {} : {
      style: `width: ${e.value}px;`
    })
  };
}
const RU = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-counterclockwise" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2z"/>
  <path d="M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466"/>
</svg>`, OU = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear-fill" viewBox="0 0 16 16">
  <path d="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z"/>
</svg>`, Kd = {
  name: "ATableHeaderThAction",
  inject: [
    "changeModelIsTableWithoutScroll",
    "columnActionsWidthLocal",
    "changeColumnsOrdering",
    "changeModelColumnsVisible",
    "columns",
    "columnsOrdered",
    "isActionIconVisible",
    "modelIsTableWithoutScroll"
  ],
  props: {
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    }
  },
  setup() {
    const {
      columnIndexDraggable: e,
      dragend: t,
      dragenter: n,
      dragleave: r,
      dragstart: s,
      drop: i,
      isDragstart: o,
      root: u
    } = wm({
      classOver: "a_table__th__dropdown__li_over",
      classOverRight: "a_table__th__dropdown__li_over_right",
      classOverParent: "a_table__th__dropdown__li",
      inHeader: !1
    }), {
      searchColumnModel: h,
      updateSearchColumnModel: A
    } = gU(), {
      stylesThTd: E
    } = Pm();
    return {
      columnIndexDraggable: e,
      dragend: t,
      dragenter: n,
      dragleave: r,
      dragstart: s,
      drop: i,
      isDragstart: o,
      root: u,
      searchColumnModel: h,
      stylesThTd: E,
      updateSearchColumnModel: A
    };
  },
  methods: {
    selectAllColumns() {
      const e = {};
      z(this.columnsOrdered, (t) => {
        e[t.id] = !0;
      }), this.changeModelColumnsVisible(e);
    },
    deselectAllColumns() {
      const e = {};
      z(this.columnsOrdered, (t) => {
        e[t.id] = !!t.locked;
      }), this.changeModelColumnsVisible(e);
    },
    resetColumns() {
      this.changeModelColumnsVisible(Rm(this.columnsOrdered)), this.changeColumnsOrdering({ reset: !0 });
    }
  },
  render() {
    return c("div", {
      class: [
        "a_table__th a_table__cell a_table__cell_action",
        {
          a_table__cell_action_sticky: this.isRowActionsStickyLocal
        }
      ],
      role: "columnheader",
      ...this.stylesThTd
    }, [
      c("span", {
        class: "a_sr_only"
      }, "Aktionen"),
      this.isActionIconVisible && c(ia, {
        buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
        buttonTitle: "_A_TABLE_DROPDOWN_OPTIONS_TITLE_",
        buttonTextScreenReader: "_A_TABLE_DROPDOWN_OPTIONS_TITLE_",
        dropdownTag: "div",
        dropdownClass: "a_p_0",
        hasCaret: !1,
        isCloseByClickInside: !1,
        disabled: this.disabledOptions,
        placement: "left",
        menuWidth: 320,
        inBody: !0
      }, {
        button: () => c(ut, {
          icon: OU
        }),
        dropdown: () => [
          c("ul", {
            class: ["a_table__th__dropdown__ul", {
              a_table__th__dropdown__ul_dragstart: this.isDragstart
            }],
            ref: "root",
            onDrop: this.drop
          }, [
            c("li", null, [
              c("div", {
                class: "a_dropdown__item_text a_table__th__dropdown__search"
              }, [
                c(vn, {
                  label: "Suchen",
                  modelValue: this.searchColumnModel,
                  isClearButton: !0,
                  modelUndefined: "",
                  "onUpdate:modelValue": this.updateSearchColumnModel
                })
              ])
            ]),
            c("li", {
              class: "a_dropdown__divider",
              "aria-hidden": !0
            }),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.selectAllColumns
              }, [
                c(ut, {
                  icon: Wc,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Alle einblenden")
              ])
            ]),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.deselectAllColumns
              }, [
                c(ut, {
                  icon: ha,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Alle ausblenden")
              ])
            ]),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.resetColumns
              }, [
                c(ut, {
                  icon: RU,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Zurücksetzen")
              ])
            ]),
            c("li", null, [
              c(lm, {
                class: "a_dropdown__item_text a_text_nowrap",
                disabled: this.disabledOptions,
                modelValue: this.modelIsTableWithoutScroll,
                trueLabel: "Kompakte Ansicht",
                falseLabel: "Kompakte Ansicht",
                "onUpdate:modelValue": this.changeModelIsTableWithoutScroll
              })
            ]),
            c("li", {
              class: "a_dropdown__divider",
              "aria-hidden": !0
            }),
            this.columnsOrdered.map((e, t) => c(bU, {
              column: e,
              columnIndex: t,
              columnIndexDraggable: this.columnIndexDraggable,
              disabledOptions: this.disabledOptions,
              searchColumnModel: this.searchColumnModel,
              onDragstartParent: this.dragstart,
              onDragenterParent: this.dragenter,
              onDragleaveParent: this.dragleave,
              onDragendParent: this.dragend
            }))
          ])
        ]
      })
    ]);
  }
};
function xm(e, { emit: t }) {
  const n = d(e, "areAllRowsSelected"), r = d(e, "areAllVisibleRowsSelected"), s = d(e, "areSomeRowsSelected"), i = d(e, "rowsLocalLength"), o = _(() => !!(i.value === 0 || n.value)), u = _(() => s.value && !(r.value || n.value)), h = _(() => r.value || n.value), A = _(() => u.value || h.value ? "_A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_" : "_A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_");
  return {
    isCheckboxDisabled: o,
    isCheckboxIndeterminate: u,
    labelCheckbox: A,
    modelValueCheckboxLocal: h,
    toggleCheckbox: () => {
      o.value || t("setSelectedRowsIndexes", { isAll: !0 });
    }
  };
}
const CU = {
  name: "ATableGroupedHeader",
  props: {
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areAllVisibleRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    columnsForRender: {
      type: Array,
      required: !0
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !0
    },
    rowsLocalLength: {
      type: Number,
      required: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMobile",
    "isMultipleActionsActive"
  ],
  setup(e, t) {
    const {
      isCheckboxDisabled: n,
      isCheckboxIndeterminate: r,
      labelCheckbox: s,
      modelValueCheckboxLocal: i,
      toggleCheckbox: o
    } = xm(e, t);
    return {
      isCheckboxDisabled: n,
      isCheckboxIndeterminate: r,
      labelCheckbox: s,
      modelValueCheckboxLocal: i,
      toggleCheckbox: o
    };
  },
  render() {
    return this.isMobile ? null : c("div", {
      ref: "root",
      role: "rowgroup",
      class: "a_table__head"
    }, [
      c("div", {
        class: "a_table__row a_table__head__row",
        role: "row"
      }, [
        this.isMultipleActionsActive && c("div", {
          role: "columnheader",
          class: "a_table__th a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;",
          "aria-colindex": 1
        }, [
          c(Ou, {
            isWidthAuto: !0,
            modelValue: this.modelValueCheckboxLocal,
            indeterminate: this.isCheckboxIndeterminate,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        this.columnsForRender,
        this.isActionColumnVisible && c(Kd, {
          disabledOptions: this.disabledOptions,
          isRowActionsStickyLocal: this.isRowActionsStickyLocal
        })
      ])
    ]);
  }
};
function NU(e, {
  ariaSort: t = _(() => ({})),
  attributesForRoot: n = _(() => ({})),
  columnsStyles: r = _(() => ""),
  isLocked: s = _(() => !1),
  isSorting: i = _(() => !1),
  titlesSort: o = _(() => [])
}) {
  const u = d(e, "column"), h = d(e, "columnIndex"), A = d(e, "hasMultipleActions"), E = de("isLoadingOptions"), p = de("isLoadingOptions"), T = _(() => [
    "a_table__th a_table__cell",
    {
      a_table__th_draggable: !s.value && !p.value && E.value,
      a_table__th_sorting: i.value
    },
    u.value.classHeaderParent
  ]), S = _(() => {
    const L = [];
    return (u.value.title || u.value.title === 0) && L.push(u.value.title), L.push(...o.value), L;
  });
  return {
    attributesForTh: _(() => {
      let L = h.value + 1;
      return A.value && L++, {
        ...t.value,
        ...n.value,
        "aria-colindex": L,
        ref: "root",
        role: "columnheader",
        class: T.value,
        style: r.value
      };
    }),
    titlesLocal: S
  };
}
function DU(e) {
  const t = d(e, "column"), n = de("columnsVisibleAdditionalSpaceForOneGrow", 0), r = _(() => ae(t.value.grow) ? 1 : t.value.grow);
  return {
    additionalWidthForCurrentColumn: _(() => n.value * r.value)
  };
}
function Fm(e) {
  const t = d(e, "column"), n = de("columnWidthDefault"), {
    additionalWidthForCurrentColumn: r
  } = DU(e), s = _(() => t.value.width || n.value), i = _(() => s.value + r.value), o = _(() => `width: ${i.value}px; min-width: ${i.value}px; max-width: ${i.value}px;`);
  return {
    columnsStyles: _(() => t.value.style ? `${o.value} ${t.value.style}` : o.value)
  };
}
const BU = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-down-fill" viewBox="0 0 16 16">
  <path d="M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z"/>
</svg>`, wU = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-up-fill" viewBox="0 0 16 16">
  <path d="m7.247 4.86-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z"/>
</svg>`, ai = B({
  propsDefault: {
    borderType: "bordered"
  },
  config: {
    isHtmlTitleSort: !1
  }
}), Pde = {
  install: (e, {
    propsDefault: t = {},
    config: n = {}
  } = {}) => {
    ai.value.propsDefault = {
      ...ai.value.propsDefault,
      ...t
    }, ai.value.config = {
      ...ai.value.config,
      ...n
    };
  }
};
function PU(e) {
  const t = d(e, "column"), n = d(e, "columnIndex"), r = d(e, "disabledSort"), s = d(e, "isSortingMultiColumn"), i = d(e, "modelSort"), o = d(e, "showFirstSortingSequenceNumber"), u = de("changeModelSort"), h = de("tableId"), A = _(() => t.value.sortId), E = _(() => !!A.value), p = _(() => i.value.indexOf(A.value)), T = _(() => i.value.indexOf(`-${A.value}`)), S = _(() => p.value !== -1), b = _(() => T.value !== -1), L = _(() => E.value && (S.value || b.value)), v = _(() => {
    if (E.value) {
      let C = "none";
      return S.value ? C = "ascending" : b.value && (C = "descending"), {
        "aria-sort": C
      };
    }
    return {};
  }), I = _(() => c(ut, {
    icon: wU,
    class: "a_table__th__sort__icon a_table__th__sort__icon_up"
  })), R = _(() => c(ut, {
    icon: BU,
    class: "a_table__th__sort__icon a_table__th__sort__icon_down"
  })), g = _(() => {
    const C = [];
    return E.value && (b.value || C.push(I.value), S.value || C.push(R.value)), C;
  }), D = ({ $event: C }) => {
    r.value || u({
      $event: C,
      sortId: A.value
    });
  }, w = _(() => `${h.value}_th_${n.value}_screen_reader`), M = _(() => {
    var C;
    return E.value ? {
      type: "button",
      disabled: r.value,
      isTitleHtml: ((C = ai.value.config) == null ? void 0 : C.isHtmlTitleSort) || !1,
      "aria-describedby": w.value,
      onClick: D
    } : {
      tag: "span"
    };
  }), P = _(() => {
    if (!(!s.value && !L.value) && !(i.value.length <= 1 && !o.value)) {
      if (p.value !== -1)
        return p.value + 1;
      if (T.value !== -1)
        return T.value + 1;
    }
  }), F = _(() => {
    const C = [];
    return E.value && (C.push("_A_TABLE_SORT_TITLE_"), s.value && C.push("_A_TABLE_SORT_TITLE_MULTI_COLUMN_")), C;
  });
  return {
    ariaSort: v,
    attributesForButtonSort: M,
    columnTextScreenReaderId: w,
    iconsSortable: g,
    isSortable: E,
    isSorting: L,
    sequenceNumberSort: P,
    titlesSort: F
  };
}
const jd = {
  name: "ATableHeaderTh",
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnGroupNames: {
      type: Array,
      required: !1,
      default: void 0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    columnIndexDraggable: {
      type: Number,
      required: !1,
      default: -1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !1
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "dragendParent",
    "dragstartParent",
    "dragenterParent",
    "dragleaveParent"
  ],
  inject: [
    "changeModelSort",
    "isColumnsDnd",
    "isLoadingOptions",
    "isLoadingTable"
  ],
  setup(e, t) {
    const {
      columnsStyles: n
    } = Fm(e), {
      attributesForRoot: r,
      isLocked: s,
      root: i
    } = gm(e, t, {
      classOverString: "a_table__th_over",
      inDropdown: !1
    }), {
      ariaSort: o,
      attributesForButtonSort: u,
      columnTextScreenReaderId: h,
      iconsSortable: A,
      isSortable: E,
      isSorting: p,
      sequenceNumberSort: T,
      titlesSort: S
    } = PU(e), {
      attributesForTh: b,
      titlesLocal: L
    } = NU(e, {
      ariaSort: o,
      attributesForRoot: r,
      columnsStyles: n,
      isLocked: s,
      isSorting: p,
      titlesSort: S
    });
    return {
      attributesForButtonSort: u,
      attributesForTh: b,
      columnTextScreenReaderId: h,
      columnsStyles: n,
      iconsSortable: A,
      isSortable: E,
      root: i,
      sequenceNumberSort: T,
      titlesLocal: L,
      titlesSort: S
    };
  },
  render() {
    return c("div", this.attributesForTh, [
      c("div", {
        class: [
          "a_table__cell__child"
        ]
      }, [
        this.columnGroupNames && c(Ae, {
          html: this.columnGroupNames,
          tag: "span",
          class: "a_sr_only"
        }),
        c(Ae, {
          id: this.columnTextScreenReaderId,
          text: this.titlesLocal,
          tag: "span",
          class: "a_sr_only",
          ariaHidden: !0
        }),
        c(ft, {
          class: [
            "a_table__th__btn",
            this.column.class,
            this.column.classHeader,
            {
              "a_btn a_btn_link a_table__th__btn_sort": this.isSortable,
              a_table__th__btn_sequence: this.sequenceNumberSort
            }
          ],
          iconLeft: this.column.icon,
          iconClass: "a_table__th__icon",
          extra: this.column.extra,
          title: this.titlesLocal,
          textScreenReader: this.column.textScreenReader || void 0,
          ...this.attributesForButtonSort
        }, () => [
          this.column.label && c(Ae, {
            html: this.column.label,
            tag: "span",
            extra: this.column.extra,
            class: "a_table__th__text aloha_element__ml_0",
            ariaHidden: !!this.column.textScreenReader
          }),
          this.isSortable && c("span", {
            class: "a_table__th__sort__box aloha_element__ml_0"
          }, [
            this.sequenceNumberSort && c("span", {
              class: [
                "a_table__th__sort__sequence_num",
                this.sortingSequenceNumberClass
              ]
            }, this.sequenceNumberSort),
            c("span", {
              class: "a_table__th__sort__icons"
            }, [
              ...this.iconsSortable
            ])
          ])
        ])
      ])
    ]);
  }
}, xU = {
  name: "ATableHeader",
  components: {
    ATableHeaderTh: jd,
    ATableHeaderThAction: Kd
  },
  props: {
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areAllVisibleRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !0
    },
    rowsLocalLength: {
      type: Number,
      required: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMobile",
    "isMultipleActionsActive"
  ],
  setup(e, t) {
    const {
      columnIndexDraggable: n,
      dragstart: r,
      dragenter: s,
      dragleave: i,
      dragend: o,
      drop: u,
      isDragstart: h,
      root: A
    } = wm({
      classOver: "a_table__th_over",
      classOverRight: "a_table__th_over_right",
      classOverParent: "a_table__th",
      inHeader: !0
    }), {
      isCheckboxDisabled: E,
      isCheckboxIndeterminate: p,
      labelCheckbox: T,
      modelValueCheckboxLocal: S,
      toggleCheckbox: b
    } = xm(e, t);
    return {
      columnIndexDraggable: n,
      dragend: o,
      dragenter: s,
      dragleave: i,
      dragstart: r,
      drop: u,
      isCheckboxDisabled: E,
      isCheckboxIndeterminate: p,
      isDragstart: h,
      labelCheckbox: T,
      modelValueCheckboxLocal: S,
      root: A,
      toggleCheckbox: b
    };
  },
  render() {
    return this.isMobile ? null : c("div", {
      ref: "root",
      role: "rowgroup",
      class: ["a_table__head", {
        a_table__head_dragstart: this.isDragstart
      }]
    }, [
      c("div", {
        class: "a_table__row a_table__head__row",
        role: "row",
        onDrop: this.drop
      }, [
        this.isMultipleActionsActive && c("div", {
          role: "columnheader",
          class: "a_table__th a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;",
          "aria-colindex": 1
        }, [
          c(Ou, {
            isWidthAuto: !0,
            modelValue: this.modelValueCheckboxLocal,
            indeterminate: this.isCheckboxIndeterminate,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        this.columnsFilteredForRender.map((e, t) => c(jd, {
          ref: "th",
          column: e,
          columnIndex: t,
          columnIndexDraggable: this.columnIndexDraggable,
          disabledSort: this.disabledSort,
          hasMultipleActions: this.hasMultipleActions,
          isSortingMultiColumn: this.isSortingMultiColumn,
          modelSort: this.modelSort,
          showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
          sortingSequenceNumberClass: this.sortingSequenceNumberClass,
          onDragstartParent: this.dragstart,
          onDragenterParent: this.dragenter,
          onDragleaveParent: this.dragleave,
          onDragendParent: this.dragend
        })),
        this.isActionColumnVisible && c(Kd, {
          disabledOptions: this.disabledOptions,
          isRowActionsStickyLocal: this.isRowActionsStickyLocal
        })
      ])
    ]);
  }
};
function FU(e, { emit: t }, {
  nextAvailableRowIndex: n,
  previousAvailableRowIndex: r,
  rowNumber: s = _(() => 0)
}) {
  const i = d(e, "countAllRows"), o = d(e, "limitPagination"), u = d(e, "offsetPagination"), h = d(e, "rowIndex"), A = d(e, "usePagination"), E = _(() => s.value <= 1 || ae(r.value)), p = _(() => s.value >= i.value || ae(n.value));
  return {
    disabledBtnArrowLeft: E,
    disabledBtnArrowRight: p,
    toNextRow: () => {
      p.value || (A.value ? (h.value + 1) % o.value === 0 ? (t("update:offset", { offset: u.value + o.value, reload: !1 }), t("togglePreview", { rowIndex: 0 })) : t("togglePreview", { rowIndex: n.value }) : t("togglePreview", { rowIndex: n.value }));
    },
    toPreviousRow: () => {
      E.value || (A.value ? (h.value + 1) % o.value === 1 ? (t("update:offset", { offset: u.value - o.value, reload: !1 }), t("togglePreview", { rowIndex: o.value - 1 })) : t("togglePreview", { rowIndex: r.value }) : t("togglePreview", { rowIndex: r.value }));
    }
  };
}
function MU() {
  const e = de("tableId");
  return {
    idLocal: _(() => Cm({ tableId: e.value }))
  };
}
function qU({ emit: e }, {
  previewRef: t = B(void 0)
}) {
  return {
    mousedown: ({ clientWidth: i }) => {
      e("mousedownResizePreviewRight", {
        clientWidth: i
      });
    },
    mousemove: ({ clientX: i }) => {
      e("mousemoveResizePreviewRight", {
        clientX: i,
        previewRef: t.value
      });
    },
    mouseup: () => {
      e("mouseupResizePreviewRight", {
        previewRightWidth: fe(t, "value.offsetWidth")
      });
    }
  };
}
const jE = B(void 0);
function Mm() {
  return {
    previewRef: jE,
    removePreviewRef: () => {
      jE.value = void 0;
    }
  };
}
function $U(e) {
  const t = d(e, "countAllRows"), n = d(e, "disabledPreviewRowCallback"), r = d(e, "offsetPagination"), s = d(e, "rowIndex"), i = d(e, "rows"), o = d(e, "usePagination"), {
    filterCurrency: u
  } = Wn(), h = _(() => o.value ? (r.value || 0) + s.value + 1 : s.value + 1), A = _(() => i.value[s.value]), E = _(() => {
    let b = null;
    if (!Fe(n.value))
      b = s.value === i.value.length - 1 ? null : s.value++;
    else
      for (let L = s.value + 1; L < i.value.length; L++) {
        const v = i.value[L];
        if (!n.value({ row: v, rowIndex: L })) {
          b = L;
          break;
        }
      }
    return b;
  }), p = _(() => {
    let b = null;
    if (!Fe(n.value))
      b = s.value === 0 ? null : s.value--;
    else
      for (let L = s.value - 1; L >= 0; L--) {
        const v = i.value[L];
        if (!n.value({ row: v, rowIndex: L })) {
          b = L;
          break;
        }
      }
    return b;
  }), T = _(() => u(t.value, { suffix: "", digits: 0 })), S = _(() => u(h.value, { suffix: "", digits: 0 }));
  return {
    countAllRowsFormatted: T,
    currentRow: A,
    nextAvailableRowIndex: E,
    previousAvailableRowIndex: p,
    rowNumber: h,
    rowNumberFormatted: S
  };
}
const kU = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8"/>
</svg>`, UU = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8"/>
</svg>`, HU = {
  name: "ATablePreviewRight",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    isLoadingTable: {
      type: Boolean,
      required: !1
    },
    isMobile: {
      type: Boolean,
      required: !1
    },
    limitPagination: {
      type: Number,
      required: !1,
      default: void 0
    },
    offsetPagination: {
      type: Number,
      required: !1,
      default: void 0
    },
    previewStyles: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    rows: {
      type: Array,
      required: !0
    },
    usePagination: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "closePreview",
    "mousedownResizePreviewRight",
    "mousemoveResizePreviewRight",
    "mouseupResizePreviewRight",
    "togglePreviewResize",
    "togglePreview",
    "update:offset"
  ],
  inject: [
    "isLoadingOptions"
  ],
  setup(e, t) {
    const n = d(e, "isMobile"), {
      previewRef: r
    } = Mm(), {
      idLocal: s
    } = MU(), {
      mousedown: i,
      mousemove: o,
      mouseup: u
    } = qU(t, {
      previewRef: r
    }), {
      countAllRowsFormatted: h,
      currentRow: A,
      nextAvailableRowIndex: E,
      previousAvailableRowIndex: p,
      rowNumber: T,
      rowNumberFormatted: S
    } = $U(e), {
      disabledBtnArrowLeft: b,
      disabledBtnArrowRight: L,
      toNextRow: v,
      toPreviousRow: I
    } = FU(e, t, {
      nextAvailableRowIndex: E,
      previousAvailableRowIndex: p,
      rowNumber: T
    });
    return Wr(() => {
      n.value || t.emit("togglePreviewResize", {
        isOpen: !0,
        previewRef: r.value
      });
    }), Dt(() => {
      n.value || t.emit("togglePreviewResize", {
        isOpen: !1,
        previewRef: r.value
      });
    }), {
      countAllRowsFormatted: h,
      currentRow: A,
      disabledBtnArrowLeft: b,
      disabledBtnArrowRight: L,
      idLocal: s,
      mousedown: i,
      mousemove: o,
      mouseup: u,
      previewRef: r,
      rowNumber: T,
      rowNumberFormatted: S,
      toNextRow: v,
      toPreviousRow: I
    };
  },
  render() {
    const e = [
      this.isLoadingTable ? c(dl) : c("div", {}, [
        c(Ae, {
          class: "a_table__preview_right__header__text",
          tag: "span",
          text: "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_",
          extra: {
            rowNumber: this.rowNumber,
            rowNumberFormatted: this.rowNumberFormatted,
            countAllRows: this.countAllRows,
            countAllRowsFormatted: this.countAllRowsFormatted
          }
        }),
        c("div", {
          class: "a_table__preview_right__header__icons"
        }, [
          c(ft, {
            class: "a_btn a_btn_transparent_dark a_btn_small",
            disabled: this.disabledBtnArrowLeft,
            iconLeft: kU,
            title: "_A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_",
            textScreenReader: "_A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_",
            onClick: this.toPreviousRow
          }),
          c(ft, {
            class: "a_btn a_btn_transparent_dark a_btn_small",
            disabled: this.disabledBtnArrowRight,
            iconLeft: UU,
            title: "_A_TABLE_PREVIEW_RIGHT_NEXT_ROW_",
            textScreenReader: "_A_TABLE_PREVIEW_RIGHT_NEXT_ROW_",
            onClick: this.toNextRow
          })
        ])
      ]),
      this.isMobile ? "" : c(ft, {
        class: "a_btn a_btn_transparent_dark a_table__preview_right__btn_close",
        iconLeft: ha,
        iconClass: "a_table__preview_right__btn_close__icon",
        title: "_A_TABLE_PREVIEW_RIGHT_CLOSE_",
        textScreenReader: "_A_TABLE_PREVIEW_RIGHT_CLOSE_",
        onClick: () => this.$emit("closePreview")
      })
    ], t = [
      this.isLoadingTable ? c(dl) : this.$slots.preview ? this.$slots.preview({
        row: this.currentRow,
        rowIndex: this.rowIndex
      }) : c(Ae, {
        text: "_A_TABLE_PREVIEW_RIGHT_HAS_NOT_SLOT_"
      })
    ];
    return this.isMobile ? c(wu, {
      hideFooter: !0,
      close: () => this.$emit("closePreview"),
      size: "xxl"
    }, {
      modalHeader: () => e,
      modalBody: () => t
    }) : c("div", {
      ref: "previewRef",
      id: this.idLocal,
      class: "a_table__preview_right",
      style: this.previewStyles,
      tabindex: -1
    }, [
      c(Gk, {
        class: "a_table__preview_right__resizer",
        direction: "x",
        disabled: this.isLoadingOptions,
        onMousedown: this.mousedown,
        onMousemove: this.mousemove,
        onMouseup: this.mouseup,
        onMouseoutDocument: this.mouseup
      }),
      c(Ae, {
        class: "a_sr_only",
        text: "_A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_"
      }),
      c("div", {
        class: "a_table__preview_right__header"
      }, e),
      c("div", {
        class: "a_table__preview_right__body"
      }, t)
    ]);
  }
};
function VU() {
  const e = de("tableId"), t = [
    "additionalProps"
  ], n = _(() => `${e.value}_`);
  return {
    excludeRenderAttributes: t,
    idPrefix: n
  };
}
function WU(e) {
  const t = d(e, "additionalSortingColumns"), n = de("columnsOrdered", []), r = _(() => [
    ...Rt(n.value, (o) => o.sortId),
    ...t.value
  ]), s = _(() => Pa(r.value, "sortId")), i = _(() => r.value.length);
  return {
    columnsAll: r,
    columnsAllKeyBySortId: s,
    countColumnsAll: i
  };
}
function GU(e, {
  columnsAll: t = _(() => [])
}) {
  const n = B(void 0), r = B(!1), s = _(() => t.value.length > 0);
  return {
    closeDropdown: () => {
      var o;
      (o = n.value) == null || o.onClose({ trigger: "click" });
    },
    dropdownRef: n,
    isDropdownVisible: s,
    wasOpenDropdown: r
  };
}
function KU(e, {
  columnsAll: t = _(() => []),
  columnsAllKeyBySortId: n = _(() => ({})),
  unappliedModelSort: r = B([])
}) {
  const s = B([]), i = [
    {
      label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_",
      id: "asc"
    },
    {
      label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_",
      id: "desc"
    }
  ], o = _(() => Rt(t.value, (h) => !pc(r.value, ["sortId", h.sortId])));
  return {
    dataForForm: s,
    initDataForForm: () => {
      const h = [];
      z(r.value, ({ sortId: A }, E) => {
        const p = E === 0, T = pe(o.value);
        A && n.value[A] && T.unshift(n.value[A]), h.push({
          type: "fieldset",
          id: `group_${A}`,
          label: p ? "_A_TABLE_SORT_ADDITIONAL_SORT_BY_" : "_A_TABLE_SORT_ADDITIONAL_THEN_BY_",
          children: [
            {
              id: `[${E}].sortId`,
              type: "select",
              classColumn: "a_column a_column_12_touch a_column_7_fullhd a_column_7_widescreen a_column_7_desktop",
              deselectable: !1,
              data: T,
              keyId: "sortId",
              keyLabel: "label",
              translateData: !0,
              search: !0,
              label: "_A_TABLE_SORT_ADDITIONAL_COLUMN_"
            },
            {
              id: `[${E}].sortMode`,
              type: "select",
              classColumn: "a_column a_column_12_touch a_column_5_fullhd a_column_5_widescreen a_column_5_desktop a_d_flex a_align_items_center",
              class: "a_width_100",
              deselectable: !1,
              data: i,
              keyId: "id",
              keyLabel: "label",
              translateData: !0,
              search: !1,
              label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_",
              slotAppend: "slotAppend",
              additionalProps: {
                index: E
              }
            }
          ]
        });
      }), s.value = h;
    }
  };
}
function jU(e, {
  closeDropdown: t = () => {
  },
  countColumnsAll: n = _(() => 0),
  initDataForForm: r = () => {
  },
  unappliedModelSort: s = B([]),
  wasOpenDropdown: i = B(!1)
}) {
  const o = d(e, "isSortingMultiColumn"), u = d(e, "modelSort"), h = de("changeModelSort"), A = de("tableId"), E = ({ model: D } = {}) => {
    if (i.value && !D)
      return;
    i.value = !0;
    const w = D || pe(u.value);
    w.length < n.value && w.push(void 0), o.value || w.length > 1 && (w.length = 1);
    const M = [];
    z(w, (P) => {
      const F = P && P.replace(/^-/, ""), C = vc(P, "-") ? "desc" : "asc";
      M.push({
        sortId: F,
        sortMode: C
      });
    }), s.value = M, r({ unappliedModelSort: M });
  }, p = ({ model: D }) => !o.value || D.length >= n.value ? !1 : !!fi(D).sortId, T = ({ model: D }) => {
    p({ model: D }) && D.push({
      sortId: void 0,
      sortMode: "asc"
    }), s.value = D, r({ unappliedModelSort: s.value });
  }, S = ({ item: D }) => {
    var F, C;
    const w = D.additionalProps.index;
    w === s.value.length - 1 ? s.value[w].sortId = void 0 : s.value.splice(w, 1);
    const P = s.value.length - 1;
    (C = (F = s.value) == null ? void 0 : F[P]) != null && C.sortId && s.value.push({
      sortId: void 0,
      sortMode: "asc"
    }), r({ unappliedModelSort: s.value });
  }, b = () => {
    const D = [];
    z(s.value, (w) => {
      w.sortId && D.push(`${w.sortMode === "asc" ? "" : "-"}${w.sortId}`);
    }), h({
      modelAll: D
    }), t();
  }, L = ({ modelSort: D = [], tableId: w }) => {
    w === A.value && E({ model: D });
  }, v = () => {
    Ct.$on("changeTableSorting", L);
  }, I = () => {
    Ct.$off("changeTableSorting", L);
  }, R = _(() => {
    var D;
    return ((D = u.value) == null ? void 0 : D.length) || 0;
  }), g = _(() => {
    if (R.value)
      return R.value;
  });
  return {
    changeModelSortInTable: b,
    countModelSort: R,
    destroyEventBus: I,
    initEventBus: v,
    initUnappliedModelSort: E,
    removeUnappliedModelSort: S,
    textCountModelSort: g,
    updateUnappliedModelSort: T
  };
}
const zE = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down-up" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M11.5 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L11 2.707V14.5a.5.5 0 0 0 .5.5m-7-14a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L4 13.293V1.5a.5.5 0 0 1 .5-.5"/>
</svg>`, zU = {
  name: "ATableSortingAdditional",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelSort: {
      type: Array,
      required: !1
    }
  },
  setup(e) {
    const t = B([]), {
      columnsAll: n,
      columnsAllKeyBySortId: r,
      countColumnsAll: s
    } = WU(e), {
      dataForForm: i,
      initDataForForm: o
    } = KU(e, {
      columnsAll: n,
      columnsAllKeyBySortId: r,
      unappliedModelSort: t
    }), {
      closeDropdown: u,
      dropdownRef: h,
      isDropdownVisible: A,
      wasOpenDropdown: E
    } = GU(e, {
      columnsAll: n
    }), {
      changeModelSortInTable: p,
      countModelSort: T,
      destroyEventBus: S,
      initEventBus: b,
      initUnappliedModelSort: L,
      removeUnappliedModelSort: v,
      textCountModelSort: I,
      updateUnappliedModelSort: R
    } = jU(e, {
      closeDropdown: u,
      countColumnsAll: s,
      initDataForForm: o,
      unappliedModelSort: t,
      wasOpenDropdown: E
    }), {
      excludeRenderAttributes: g,
      idPrefix: D
    } = VU();
    return b(), Dt(() => {
      S();
    }), {
      changeModelSortInTable: p,
      closeDropdown: u,
      countModelSort: T,
      dataForForm: i,
      dropdownRef: h,
      excludeRenderAttributes: g,
      idPrefix: D,
      initUnappliedModelSort: L,
      isDropdownVisible: A,
      removeUnappliedModelSort: v,
      textCountModelSort: I,
      unappliedModelSort: t,
      updateUnappliedModelSort: R,
      wasOpenDropdown: E
    };
  },
  render() {
    return this.isDropdownVisible ? c(ia, {
      ref: "dropdownRef",
      buttonClass: "a_btn a_btn_secondary a_table__action",
      buttonIconLeft: zE,
      buttonText: this.textCountModelSort,
      buttonTextAriaHidden: !0,
      buttonTitle: "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_",
      buttonTextScreenReader: "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_",
      buttonTextClass: "a_badge a_bg_primary",
      disabled: this.disabledSort,
      dropdownClass: "a_filter_horizontal__wrapper",
      dropdownRenderDefault: !1,
      dropdownTag: "div",
      hasCaret: !1,
      inBody: !0,
      extra: {
        count: this.countModelSort
      },
      isCloseByClickInside: !1,
      lockArrowsNavigation: !1,
      lockTabNavigation: !1,
      onOpen: this.initUnappliedModelSort
    }, {
      dropdown: () => c("div", {
        class: "a_filter_horizontal"
      }, [
        c("div", {
          class: "a_filter_horizontal__header__wrapper"
        }, [
          c("div", {
            class: "a_filter_horizontal__header"
          }, [
            c("div", {
              class: "a_filter_horizontal__header__texts"
            }, [
              c(Ae, {
                class: "a_filter_horizontal__header__texts__filter",
                tag: "span",
                text: "_A_TABLE_SORT_ADDITIONAL_HEADER_"
              })
            ])
          ])
        ]),
        c("div", {
          class: "a_filter_horizontal__body__wrapper"
        }, [
          c("div", {
            class: "a_filter_horizontal__body"
          }, [
            c(Nu, {
              idPrefix: this.idPrefix,
              class: "a_filter_horizontal__body__form",
              classColumnDefault: "",
              classColumns: "",
              data: this.dataForForm,
              excludeRenderAttributes: this.excludeRenderAttributes,
              modelValue: this.unappliedModelSort,
              showErrors: !1,
              onChange: this.updateUnappliedModelSort
            }, {
              slotAppend: ({ item: e }) => {
                var t, n;
                return c(be, {
                  type: "button",
                  class: "a_btn a_btn_primary a_ml_2",
                  title: "_A_TABLE_SORT_ADDITIONAL_BTN_DELETE_",
                  textScreenReader: "_A_TABLE_SORT_ADDITIONAL_BTN_DELETE_",
                  disabled: !((n = (t = this.unappliedModelSort) == null ? void 0 : t[e.additionalProps.index]) != null && n.sortId),
                  iconLeft: ha,
                  onClick: () => this.removeUnappliedModelSort({ item: e })
                });
              }
            })
          ]),
          c("div", {
            class: "a_filter_horizontal__footer"
          }, [
            c("div", {
              class: "a_filter_horizontal__footer__actions"
            }, [
              c(be, {
                type: "button",
                class: "a_btn a_btn_primary a_text_nowrap a_filter_horizontal__footer__actions__btn_search",
                iconLeft: zE,
                text: "_A_TABLE_SORT_ADDITIONAL_START_",
                disabled: this.disabledSort,
                onClick: this.changeModelSortInTable
              }),
              c(be, {
                type: "button",
                class: "a_btn a_btn_secondary a_text_nowrap a_filter_horizontal__footer__actions__btn_close",
                text: "_A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_",
                onClick: this.closeDropdown
              })
            ])
          ])
        ])
      ])
    }) : null;
  }
};
function YU(e, { emit: t }) {
  const n = d(e, "areAllRowsSelected"), r = d(e, "closeMultipleActionsActive"), s = d(e, "multipleActions"), i = d(e, "selectedRows"), o = d(e, "tableActions"), u = de("tableId"), h = de("currentMultipleActions"), A = de("rowsLocalAll"), {
    closeConfirm: E,
    openConfirm: p
  } = Zc(), T = _(() => `${u.value}_btn_multiple`), S = _(() => {
    const g = [];
    return z(pe(o.value), (D) => {
      if (!D.isHidden) {
        if (Fe(D.callback)) {
          const w = D.callback;
          D.callback = () => w({
            id: D.id,
            action: D
          });
        }
        g.push(D);
      }
    }), g;
  }), b = ({ action: g, callbackDefault: D }) => {
    const w = pe(g);
    w.callback = D, t("toggleMultipleActionsActive", { isActive: !0, action: w });
  }, L = () => {
    t("toggleMultipleActionsActive", { action: h.value });
  }, v = _(() => {
    const g = pe(s.value);
    return z(g, (D) => {
      if (Fe(D.callback)) {
        const w = D.callback;
        D.callback = () => b({ action: D, callbackDefault: w });
      }
    }), g;
  }), I = async () => {
    await h.value.callback({
      close: r.value,
      rows: i.value,
      rowsVisible: A.value,
      id: T.value,
      areAllRowsSelected: n.value,
      action: h.value
    }), E(), L();
  };
  return {
    buttonMultipleId: T,
    currentMultipleActions: h,
    multipleActionsFiltered: v,
    onCancelMultipleActions: L,
    onOpenModalMultipleActions: () => {
      h.value.isConfirm ? p({
        headerText: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_",
        bodyHtml: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_",
        saveButtonText: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_",
        extra: {
          action: xt({
            placeholder: h.value.text
          }),
          selectedRows: i.value.length
        },
        save: I
      }) : h.value.callback({
        close: r.value,
        rows: i.value,
        rowsVisible: A.value,
        id: T.value,
        areAllRowsSelected: n.value,
        action: h.value
      });
    },
    tableActionsFiltered: S
  };
}
function XU(e) {
  const t = d(e, "countAllRows"), {
    filterFloat: n
  } = Wn();
  return {
    countAllRowsFormatted: _(() => `(${n(t.value, { digits: 0 })})`)
  };
}
function ZU() {
  const e = de("tableId");
  return {
    tableLabelId: _(() => Dm({ tableId: e.value }))
  };
}
function JU(e, { emit: t }) {
  const n = d(e, "areAllRowsSelected"), r = d(e, "areSomeRowsSelected"), s = d(e, "countAllRows"), i = d(e, "isLoadingMultipleActions"), o = d(e, "selectedRows"), u = de("tableId"), {
    filterFloat: h
  } = Wn(), A = _(() => Nm({ tableId: u.value })), E = _(() => n.value ? s.value : o.value.length), p = _(() => ({
    countSelectedRows: E.value,
    countSelectedRowsFiltered: h(E.value, { digits: 0 }),
    countAllRows: s.value,
    countAllRowsFiltered: h(s.value, { digits: 0 })
  })), T = _(() => n.value ? "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_" : "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_"), S = _(() => !!(i.value || s.value === 0)), b = () => {
    S.value || t("toggleBtnAllRows");
  };
  return {
    isBtnMultipleActionDisabled: _(() => !r.value && !n.value),
    isBtnSelectAllRowsDisabled: S,
    multiplePanelId: A,
    textMultipleBtnAllRowsTranslate: T,
    textMultipleSelectedTranslateExtra: p,
    toggleBtnAllRows: b
  };
}
function QU(e, { emit: t }) {
  const n = d(e, "useViewSlot"), r = (i) => {
    t("updateViewCurrent", i);
  }, s = _(() => n.value ? "viewSlot" : void 0);
  return {
    updateViewCurrentLocal: r,
    viewSlotLocal: s
  };
}
const eH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-ui-checks" viewBox="0 0 16 16">
  <path d="M7 2.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5zM2 1a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2zm0 8a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2zm.854-3.646a.5.5 0 0 1-.708 0l-1-1a.5.5 0 1 1 .708-.708l.646.647 1.646-1.647a.5.5 0 1 1 .708.708zm0 8a.5.5 0 0 1-.708 0l-1-1a.5.5 0 0 1 .708-.708l.646.647 1.646-1.647a.5.5 0 0 1 .708.708zM7 10.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5zm0-5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m0 8a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5"/>
</svg>`, tH = {
  name: "ATableTopPanel",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    closeMultipleActionsActive: {
      type: Function,
      required: !0
    },
    countAllRows: {
      type: Number,
      required: !0
    },
    disabledActions: {
      type: Boolean,
      required: !0
    },
    disabledMultipleActions: {
      type: Boolean,
      required: !0
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    disabledViews: {
      type: Boolean,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasViews: {
      type: Boolean,
      required: !0
    },
    isLabelVisible: {
      type: Boolean,
      required: !1
    },
    isLoadingMultipleActions: {
      type: Boolean,
      required: !1
    },
    isQuickSearch: {
      type: Boolean,
      required: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !0
    },
    modelQuickSearch: {
      type: String,
      required: !0
    },
    modelSort: {
      type: Array,
      required: !1
    },
    modelView: {
      type: String,
      required: !1,
      default: void 0
    },
    multipleActions: {
      type: Array,
      required: !0
    },
    selectedRows: {
      type: Array,
      required: !0
    },
    showCount: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tableActions: {
      type: Array,
      required: !0
    },
    tableActionsIndexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: -1
    },
    tableActionsIndexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: 0
    },
    useAdditionalSorting: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useViewSlot: {
      type: Boolean,
      required: !1
    },
    viewCurrent: {
      type: Object,
      required: !1,
      default: void 0
    },
    views: {
      type: Array,
      required: !0
    }
  },
  emits: [
    "toggleBtnAllRows",
    "toggleMultipleActionsActive",
    "updateModelQuickSearch",
    "updateViewCurrent"
  ],
  inject: [
    "isMultipleActionsActive",
    "rowsLocalAll",
    "tableId"
  ],
  setup(e, t) {
    const {
      tableLabelId: n
    } = ZU(), {
      filterCurrency: r
    } = Wn(), {
      buttonMultipleId: s,
      currentMultipleActions: i,
      multipleActionsFiltered: o,
      onCancelMultipleActions: u,
      onOpenModalMultipleActions: h,
      tableActionsFiltered: A
    } = YU(e, t), {
      isBtnMultipleActionDisabled: E,
      isBtnSelectAllRowsDisabled: p,
      multiplePanelId: T,
      textMultipleBtnAllRowsTranslate: S,
      textMultipleSelectedTranslateExtra: b,
      toggleBtnAllRows: L
    } = JU(e, t), {
      updateViewCurrentLocal: v,
      viewSlotLocal: I
    } = QU(e, t), {
      countAllRowsFormatted: R
    } = XU(e);
    return {
      buttonMultipleId: s,
      countAllRowsFormatted: R,
      currentMultipleActions: i,
      filterCurrency: r,
      isBtnMultipleActionDisabled: E,
      isBtnSelectAllRowsDisabled: p,
      multipleActionsFiltered: o,
      multiplePanelId: T,
      onCancelMultipleActions: u,
      onOpenModalMultipleActions: h,
      tableActionsFiltered: A,
      tableLabelId: n,
      textMultipleBtnAllRowsTranslate: S,
      textMultipleSelectedTranslateExtra: b,
      toggleBtnAllRows: L,
      updateViewCurrentLocal: v,
      viewSlotLocal: I
    };
  },
  methods: {
    updateModelQuickSearch(e) {
      this.$emit("updateModelQuickSearch", e);
    }
  },
  render() {
    return [
      c("div", {
        class: "a_table__top_panel"
      }, [
        this.isLabelVisible ? this.$slots.tableLabel ? this.$slots.tableLabel({
          countAllRows: this.countAllRows,
          tableLabelId: this.tableLabelId
        }) : c(this.labelTag, {
          class: ["a_table__top_panel__label", this.labelClass]
        }, [
          c(Ae, {
            id: this.tableLabelId,
            tag: "span",
            class: "a_table__top_panel__label__text",
            text: this.label,
            extra: this.extra
          }),
          this.showCount ? c(be, {
            class: "a_table__top_panel__label__count",
            extra: {
              count: this.countAllRows
            },
            tag: "span",
            text: this.countAllRowsFormatted,
            textAriaHidden: !0,
            textScreenReader: "_A_TABLE_ALL_ROWS_{{count}}_",
            title: "_A_TABLE_ALL_ROWS_{{count}}_",
            type: "text"
          }) : ""
        ]) : "",
        c("div", {
          class: "a_table__top_panel__actions"
        }, [
          this.$slots.tableActionsPrepend ? this.$slots.tableActionsPrepend({
            isMultipleActionsActive: this.isMultipleActionsActive,
            modelView: this.modelView
          }) : "",
          c(Vd, {
            actions: this.tableActionsFiltered,
            actionsClasses: [],
            disabled: this.isMultipleActionsActive || this.disabledActions,
            indexFirstDropdownAction: this.tableActionsIndexFirstDropdownAction,
            indexFirstDropdownActionMobile: this.tableActionsIndexFirstDropdownActionMobile,
            minDropdownActions: 0,
            dropdownAttributes: {
              buttonClass: "a_btn a_btn_secondary a_table__action",
              buttonIconLeft: Nl,
              buttonText: {
                desktop: "_A_TABLE_ACTIONS_"
              },
              hasCaret: !1,
              inBody: !0,
              placement: "bottom-end"
            }
          }),
          c(Vd, {
            actions: this.multipleActionsFiltered,
            actionsClasses: [],
            disabled: this.isMultipleActionsActive || this.disabledMultipleActions,
            indexFirstDropdownAction: 0,
            indexFirstDropdownActionMobile: 0,
            minDropdownActions: 0,
            dropdownAttributes: {
              id: this.buttonMultipleId,
              buttonClass: "a_btn a_btn_secondary a_table__action",
              buttonText: {
                desktop: "_A_TABLE_MULTIPLE_ACTIONS_"
              },
              buttonIconLeft: eH,
              inBody: !0,
              placement: "bottom-end"
            }
          }),
          this.isQuickSearch ? c(vn, {
            label: "_A_TABLE_QUICK_SEARCH_",
            class: "a_table__top_panel__actions__quick_search",
            modelUndefined: "",
            modelValue: this.modelQuickSearch,
            iconPrepend: Em,
            "onUpdate:modelValue": this.updateModelQuickSearch
          }) : "",
          this.hasViews ? c(im, {
            modelValue: this.modelView,
            class: "a_d_inline_block",
            isButtonGroup: !0,
            disabled: this.disabledViews,
            slotName: this.viewSlotLocal,
            data: this.views,
            keyId: "id",
            keyLabel: "label",
            hasBorder: !1,
            classFieldset: "a_p_0",
            "onUpdate:modelValue": this.updateViewCurrentLocal
          }, {
            viewSlot: (e) => this.$slots.viewSlot && this.$slots.viewSlot({
              ...e
            })
          }) : "",
          this.useAdditionalSorting ? c(zU, {
            additionalSortingColumns: this.additionalSortingColumns,
            disabledSort: this.disabledSort,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSort
          }) : "",
          this.$slots.tableActionsAppend ? this.$slots.tableActionsAppend({
            isMultipleActionsActive: this.isMultipleActionsActive,
            modelView: this.modelView
          }) : ""
        ])
      ]),
      this.isMultipleActionsActive && c("div", {
        id: this.multiplePanelId,
        class: "a_table__multiple_panel"
      }, [
        c("div", {
          class: "a_table__multiple_panel__header"
        }, [
          c(Ae, {
            class: "a_table__multiple_panel__header__text",
            tag: "strong",
            text: "_A_TABLE_MULTIPLE_ACTIONS_"
          }),
          c("div", {
            class: "a_table__multiple_panel__items"
          }, [
            c(Ae, {
              class: "a_table__multiple_panel__items__selected",
              tag: "span",
              text: "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_",
              extra: this.textMultipleSelectedTranslateExtra
            }),
            this.currentMultipleActions.isAllRowsSelected && c(ft, {
              class: "a_btn a_btn_secondary a_table__multiple_panel__btn_all_rows",
              type: "button",
              text: this.textMultipleBtnAllRowsTranslate,
              extra: this.textMultipleSelectedTranslateExtra,
              disabled: this.isBtnSelectAllRowsDisabled || this.disabledMultipleActions,
              loading: this.isLoadingMultipleActions,
              onClick: this.toggleBtnAllRows
            })
          ])
        ]),
        c("div", {
          class: "a_table__multiple_panel__actions"
        }, [
          this.currentMultipleActions.slot && this.$slots.multipleActionActiveSlot ? this.$slots.multipleActionActiveSlot({
            disabled: this.isBtnMultipleActionDisabled || this.isLoadingMultipleActions || this.disabledMultipleActions,
            loading: this.isLoadingMultipleActions,
            text: this.currentMultipleActions.text,
            action: this.currentMultipleActions,
            onClick: this.onOpenModalMultipleActions,
            close: this.closeMultipleActionsActive,
            rows: this.selectedRows,
            rowsVisible: this.rowsLocalAll,
            id: this.buttonMultipleId,
            areAllRowsSelected: this.areAllRowsSelected
          }) : c(ft, {
            class: "a_btn a_btn_primary a_table__action",
            type: "button",
            disabled: this.isBtnMultipleActionDisabled || this.isLoadingMultipleActions || this.disabledMultipleActions,
            text: this.currentMultipleActions.text,
            loading: this.isLoadingMultipleActions,
            loadingAlign: "left",
            onClick: this.onOpenModalMultipleActions
          }),
          c(ft, {
            class: "a_btn a_btn_secondary a_table__action",
            type: "button",
            text: "_A_TABLE_MULTIPLE_CANCEL_",
            onClick: this.onCancelMultipleActions
          })
        ])
      ])
    ];
  }
};
function nH() {
  const e = B(void 0);
  return {
    componentRef: e,
    setFocusToComponent: () => {
      var n;
      (n = e.value) == null || n.focus({ preventScroll: !0 });
    }
  };
}
const rH = {
  name: "ATablePreviewDown",
  props: {
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    }
  },
  inject: [
    "onTogglePreview"
  ],
  setup() {
    const {
      componentRef: e,
      setFocusToComponent: t
    } = nH();
    return Wr(() => {
      t();
    }), {
      componentRef: e
    };
  },
  render() {
    return c("div", {
      ref: "componentRef",
      class: "a_table__preview_down",
      tabindex: -1
    }, [
      c(Ae, {
        class: "a_sr_only",
        text: "_A_TABLE_PREVIEW_DOWN_ARIA_LABEL_"
      }),
      this.$slots.preview && this.$slots.preview({
        row: this.row,
        rowIndex: this.rowIndex
      }),
      c(ft, {
        class: "a_btn a_btn_transparent_dark a_table__preview_down__btn_close",
        iconLeft: ha,
        iconClass: "a_table__preview_down__btn_close__icon",
        title: "_A_TABLE_PREVIEW_DOWN_CLOSE_",
        textScreenReader: "_A_TABLE_PREVIEW_DOWN_CLOSE_",
        onClick: () => this.onTogglePreview({
          row: this.row,
          rowIndex: this.rowIndex
        })
      })
    ]);
  }
};
function aH(e) {
  const t = d(e, "column"), n = d(e, "disabledPreview"), r = d(e, "isFooter"), s = de("hasPreview"), i = de("isMobile"), {
    columnsStyles: o
  } = Fm(e);
  return {
    attributesForTd: _(() => {
      const h = {
        class: [
          "a_table__td a_table__cell",
          {
            a_table__cell_click: s.value && !r.value && !n.value
          },
          t.value.classRowParent
        ],
        style: o.value
      };
      return i.value || (h.role = "cell"), h;
    })
  };
}
function qm(e) {
  const t = d(e, "column"), n = d(e, "row"), r = _(() => !!t.value.to), s = _(() => {
    if (it(t.value.to))
      return t.value.to;
    if (nt(t.value.to)) {
      const o = pe(t.value.to), u = o.params || {}, h = o.query || {};
      if (t.value.to.nameDynamic && !t.value.to.name) {
        const A = fe(n.value, t.value.to.nameDynamic);
        A && (o.name = A);
      }
      if (t.value.to.paramsDynamic) {
        let A = !1;
        if (z(t.value.to.paramsDynamic, (E, p) => {
          const T = fe(n.value, E);
          if (Ce(T))
            return A = !0, !1;
          u[p] = T;
        }), A)
          return;
      }
      if (t.value.to.queryDynamic) {
        let A = !1;
        if (z(t.value.to.queryDynamic, (E, p) => {
          const T = fe(n.value, E);
          if (Ce(T))
            return A = !0, !1;
          h[p] = T;
        }), A)
          return;
      }
      return o.params = u, o.query = h, o;
    }
  });
  return {
    classForLink: _(() => "a_btn a_btn_link a_p_0 a_text_left"),
    isLink: r,
    toLocal: s
  };
}
function $m(e) {
  const t = d(e, "column"), n = d(e, "isFooter"), r = _(() => n.value ? t.value.footerSlot : t.value.slot);
  return {
    hasSlot: _(() => !!r.value),
    slotName: r
  };
}
function km(e) {
  const t = d(e, "column"), n = d(e, "isFooter"), r = d(e, "row"), s = de("columnsDefaultValue"), i = de("valuesForColumnDefault"), o = _(() => n.value && "footerDefaultValue" in t.value ? t.value.footerDefaultValue : "defaultValue" in t.value ? t.value.defaultValue : Ce(s.value) ? "" : s.value), u = _(() => n.value ? t.value.footerKeyLabel : t.value.keyLabel), h = _(() => n.value ? t.value.footerKeyLabelSafeHtml : t.value.keyLabelSafeHtml), A = _(() => n.value ? t.value.footerKeyLabelHtml : t.value.keyLabelHtml), E = _(() => {
    if (u.value)
      return fe(r.value, u.value);
  }), p = _(() => {
    if (h.value)
      return fe(r.value, h.value);
  }), T = _(() => {
    if (A.value)
      return fe(r.value, A.value);
  }), S = (R) => {
    let g = !1;
    return z(i.value, (D) => {
      if (R === D)
        return g = !0, !1;
    }), g ? o.value : R;
  }, b = _(() => S(E.value)), L = _(() => S(p.value)), v = _(() => S(T.value));
  return {
    textOrHtmlRender: _(() => {
      if (u.value)
        return c("span", null, b.value);
      if (h.value)
        return c("div", {
          innerHTML: L.value
        });
      if (A.value)
        return Ot(c("div"), [
          [Yt, v.value]
        ]);
    })
  };
}
const Um = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-right-fill" viewBox="0 0 16 16">
  <path d="m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z"/>
</svg>`, YE = {
  name: "ATableTd",
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    level: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    showIconChildren: {
      type: Boolean,
      required: !1
    }
  },
  inject: [
    "isMobile",
    "rowsLocalAll"
  ],
  setup(e) {
    const {
      attributesForTd: t
    } = aH(e), {
      classForLink: n,
      isLink: r,
      toLocal: s
    } = qm(e), {
      hasSlot: i,
      slotName: o
    } = $m(e), {
      textOrHtmlRender: u
    } = km(e);
    return {
      attributesForTd: t,
      classForLink: n,
      hasSlot: i,
      isLink: r,
      slotName: o,
      textOrHtmlRender: u,
      toLocal: s
    };
  },
  render() {
    const e = c(
      "div",
      this.attributesForTd,
      [
        c("div", {
          class: [
            "a_table__cell__child",
            this.column.class,
            this.column.classRow
          ]
        }, [
          this.showIconChildren ? c(be, {
            "aria-hidden": !0,
            class: "a_table__row_level__icon",
            classDefault: "",
            iconLeft: Um,
            type: "text"
          }) : "",
          this.hasSlot && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            column: this.column,
            columnIndex: this.columnIndex,
            level: this.level,
            row: this.row,
            rowIndex: this.rowIndex,
            rows: this.rowsLocalAll
          }) : this.isLink && this.toLocal ? c(Ur("RouterLink"), {
            class: [
              this.column.class,
              this.classForLink,
              this.column.classRow
            ],
            to: this.toLocal
          }, () => [
            this.textOrHtmlRender
          ]) : this.textOrHtmlRender
        ])
      ]
    );
    return this.isMobile ? [
      c(Ae, {
        text: this.column.label,
        tag: "dt"
      }),
      c("dd", {}, [
        e
      ])
    ] : e;
  }
}, XE = {
  name: "ATableListItem",
  inject: [
    "rowsLocalAll"
  ],
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    isFooter: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      classForLink: t,
      isLink: n,
      toLocal: r
    } = qm(e), {
      hasSlot: s,
      slotName: i
    } = $m(e), {
      textOrHtmlRender: o
    } = km(e);
    return {
      classForLink: t,
      hasSlot: s,
      isLink: n,
      slotName: i,
      textOrHtmlRender: o,
      toLocal: r
    };
  },
  render() {
    return [
      c(Ae, {
        text: this.column.label,
        tag: "dt"
      }),
      c(
        "dd",
        null,
        this.hasSlot && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          column: this.column,
          columnIndex: this.columnIndex,
          row: this.row,
          rowIndex: this.rowIndex,
          rows: this.rowsLocalAll
        }) : this.isLink && this.toLocal ? [
          c(Ur("RouterLink"), {
            class: [
              this.column.class,
              this.classForLink,
              this.column.classRow
            ],
            to: this.toLocal
          }, () => [
            this.textOrHtmlRender
          ])
        ] : [
          this.textOrHtmlRender
        ]
      )
    ];
  }
};
function sH() {
  const e = de("columnsScrollInvisible"), t = de("modelIsTableWithoutScroll"), n = _(() => e.value.length), r = _(() => t.value ? n.value > 0 : !1);
  return {
    columnsScrollInvisibleText: _(() => n.value === 1 ? "_A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_" : "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_"),
    countColumnsScrollInvisible: n,
    isColumnsScrollInvisibleDropdownVisible: r
  };
}
function iH(e) {
  const t = d(e, "columnActionsView"), n = d(e, "isFooter"), r = d(e, "row"), s = d(e, "rowIndex"), i = de("columnActionsOnePlusDropdownOptions"), o = de("rowActions"), u = de("tableId"), h = _(() => `${u.value}_action_${s.value}`), A = _(() => Ce(i.value.indexFirstDropdownAction) ? 1 : i.value.indexFirstDropdownAction), E = ({ rowAction: C }) => {
    if (C.text)
      return C.text;
    if (Fe(C.textCallback))
      return C.textCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, p = ({ rowAction: C }) => {
    if (C.html)
      return C.html;
    if (Fe(C.htmlCallback))
      return C.htmlCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, T = ({ rowAction: C }) => {
    if (C.title)
      return C.title;
    if (Fe(C.titleCallback))
      return C.titleCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, S = ({ rowAction: C }) => C.disabled ? C.disabled : Fe(C.disabledCallback) ? C.disabledCallback({
    row: r.value,
    rowIndex: s.value,
    rowAction: C
  }) : !1, b = ({ rowAction: C }) => C.class ? C.class : Fe(C.classCallback) ? C.classCallback({
    row: r.value,
    rowIndex: s.value,
    rowAction: C
  }) : "", L = ({ rowAction: C }) => {
    if (C.iconLeft)
      return C.iconLeft;
    if (Fe(C.iconLeftCallback))
      return C.iconLeftCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, v = ({ rowAction: C }) => {
    if (C.iconRight)
      return C.iconRight;
    if (Fe(C.iconRightCallback))
      return C.iconRightCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, I = ({ rowAction: C }) => {
    if (it(C.to))
      return C.to;
    if (nt(C.to)) {
      const $ = pe(C.to), H = $.params || {}, j = $.query || {};
      if (C.to.nameDynamic && !C.to.name) {
        const le = fe(r.value, C.to.nameDynamic);
        le && ($.name = le);
      }
      if (C.to.paramsDynamic) {
        let le = !1;
        if (z(C.to.paramsDynamic, (ee, _e) => {
          const ie = fe(r.value, ee);
          if (Ce(ie))
            return le = !0, !1;
          H[_e] = ie;
        }), le)
          return;
      }
      if (C.to.queryDynamic) {
        let le = !1;
        if (z(C.to.queryDynamic, (ee, _e) => {
          const ie = fe(r.value, ee);
          if (Ce(ie))
            return le = !0, !1;
          j[_e] = ie;
        }), le)
          return;
      }
      return $.params = H, $.query = j, $;
    }
  }, R = ({ rowAction: C }) => C.href ? C.href : Fe(C.hrefCallback) ? C.hrefCallback({
    row: r.value,
    rowIndex: s.value,
    rowAction: C
  }) : !1, g = ({ rowAction: C }) => {
    if (C.extra)
      return C.extra;
    if (Fe(C.extraCallback))
      return C.extraCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, D = ({ rowAction: C }) => {
    if (C.textScreenReader)
      return C.textScreenReader;
    if (Fe(C.textScreenReaderCallback))
      return C.textScreenReaderCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: C
      });
  }, w = ({ rowActionIndexVisible: C }) => {
    if (t.value === "dropdown")
      return {
        id: h.value,
        ids: [h.value, u.value]
      };
    if (C < A.value) {
      const $ = `${h.value}_${C}`;
      return {
        buttonId: $,
        id: $,
        ids: [$, u.value]
      };
    }
    return {
      id: h.value,
      ids: [h.value, u.value]
    };
  }, M = (C) => {
    z(C, ($, H) => {
      uw(H, "Callback") && (C[H] = void 0);
    });
  }, P = _(() => {
    const C = [];
    let $ = 0;
    return z(pe(o.value), (H) => {
      if (Bm({
        rowAction: H,
        row: r.value,
        rowIndex: s.value
      })) {
        if (H.type !== "divider") {
          const j = E({ rowAction: H });
          j && (H.text = j);
          const le = p({ rowAction: H });
          le && (H.html = le);
          const ee = T({ rowAction: H });
          ee ? H.title = ee : j && (H.title = j);
          const _e = S({ rowAction: H });
          _e && (H.disabled = _e);
          const ie = b({ rowAction: H });
          ie && (H.class = ie);
          const ue = L({ rowAction: H });
          ue && (H.iconLeft = ue);
          const Te = v({ rowAction: H });
          Te && (H.iconRight = Te);
          const Pe = g({ rowAction: H });
          Pe && (H.extra = Pe);
          const Se = D({ rowAction: H });
          if (Pe && (H.textScreenReader = Se), H.type === "link") {
            const se = I({ rowAction: H });
            se ? H.to = se : H.href = R({ rowAction: H });
          }
          if (Fe(H.callback)) {
            const {
              buttonId: se,
              id: Oe,
              ids: ye
            } = w({
              rowActionIndexVisible: $
            });
            H.id = se;
            const je = H.callback;
            H.callback = () => je({
              row: r.value,
              rowIndex: s.value,
              id: Oe,
              ids: ye,
              rowAction: H
            });
          }
          M(H);
        }
        $++, C.push(H);
      }
    }), C;
  }), F = _(() => !n.value && P.value.length > 0);
  return {
    buttonActionsId: h,
    isRowActionsDropdownVisible: F,
    rowActionsFiltered: P
  };
}
function lH(e) {
  const t = d(e, "rowIndex");
  return {
    rowNumber: _(() => t.value + 1)
  };
}
const oH = {
  name: "ATableTdAction",
  components: {
    AIcon: ut,
    ATableListItem: XE
  },
  props: {
    columnActionsBtnGroupMaxWidthStyle: {
      type: String,
      required: !1,
      default: void 0
    },
    columnActionsView: {
      type: String,
      required: !0
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    }
  },
  inject: [
    "columnActionsOnePlusDropdownOptions",
    "columnsScrollInvisible",
    "tableId"
  ],
  setup(e) {
    const {
      isMobileWidth: t
    } = En(), {
      buttonActionsId: n,
      isRowActionsDropdownVisible: r,
      rowActionsFiltered: s
    } = iH(e), {
      columnsScrollInvisibleText: i,
      countColumnsScrollInvisible: o,
      isColumnsScrollInvisibleDropdownVisible: u
    } = sH(), {
      rowNumber: h
    } = lH(e), {
      stylesThTd: A
    } = Pm();
    return {
      buttonActionsId: n,
      columnsScrollInvisibleText: i,
      countColumnsScrollInvisible: o,
      isColumnsScrollInvisibleDropdownVisible: u,
      isMobileWidth: t,
      isRowActionsDropdownVisible: r,
      rowActionsFiltered: s,
      rowNumber: h,
      stylesThTd: A
    };
  },
  render() {
    return c("div", {
      role: "cell",
      class: [
        "a_table__td a_table__cell a_table__cell_action",
        {
          a_table__cell_action_sticky: this.isRowActionsStickyLocal
        }
      ],
      ...this.stylesThTd
    }, [
      c("div", {
        class: [
          "a_table__cell__child",
          this.rowActionsClass
        ]
      }, [
        this.isColumnsScrollInvisibleDropdownVisible && c(ia, {
          buttonClass: "a_btn a_btn_link a_text_nowrap",
          buttonIconLeft: Am,
          buttonIconClass: "a_table__cell_action__additional_icon",
          buttonTitle: "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_",
          buttonTextScreenReader: "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_",
          buttonText: this.columnsScrollInvisibleText,
          buttonTextClass: "a_table__cell_action__additional_text",
          buttonTextAriaHidden: !0,
          extra: {
            count: this.countColumnsScrollInvisible
          },
          dropdownClass: "a_p_0 a_overflow_x_hidden a_table__extra_dropdown",
          dropdownTag: "div",
          hasCaret: !1,
          floatingFlip: {
            use: !0,
            fallbackPlacements: ["top-end", "left"]
          },
          inBody: !0,
          placement: "bottom-end",
          menuWidth: 600,
          isCloseByClickInside: !1
        }, {
          dropdown: () => [
            c("dl", {
              class: "a_list_dl a_list_dl_dt_right"
            }, [
              this.columnsScrollInvisible.map((e, t) => c(XE, {
                column: e,
                columnIndex: t,
                row: this.row,
                rowIndex: this.rowIndex,
                isFooter: this.isFooter
              }, this.$slots))
            ])
          ]
        }),
        this.isRowActionsDropdownVisible || this.$slots.rowActions ? c("div", {
          class: "a_table__cell_action__group"
        }, [
          this.$slots.rowActions ? this.$slots.rowActions({
            tableId: this.tableId,
            row: this.row,
            rowIndex: this.rowIndex,
            isFooter: this.isFooter
          }) : "",
          this.isRowActionsDropdownVisible ? this.columnActionsView === "dropdown" || this.isMobileWidth && this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile === 0 ? c(ia, {
            id: this.buttonActionsId,
            actions: this.rowActionsFiltered,
            buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
            buttonIconLeft: Nl,
            buttonTextScreenReader: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
            buttonTitle: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
            disabled: this.disabledRowActions,
            extra: {
              rowNumber: this.rowNumber
            },
            hasCaret: !1,
            inBody: !0,
            placement: "bottom-end"
          }, this.$slots) : c(Vd, {
            class: "a_d_inline_block",
            style: this.columnActionsBtnGroupMaxWidthStyle,
            actions: this.rowActionsFiltered,
            dropdownAttributes: {
              id: this.buttonActionsId,
              buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
              buttonIconLeft: bi,
              buttonTextScreenReader: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
              buttonTitle: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
              extra: {
                rowNumber: this.rowNumber
              },
              hasCaret: !1,
              inBody: !0,
              placement: "bottom-end"
            },
            disabled: this.disabledRowActions,
            btnGroupClass: Ce(this.columnActionsOnePlusDropdownOptions.btnGroupClass) ? "a_btn_group a_btn_group_table" : this.columnActionsOnePlusDropdownOptions.btnGroupClass,
            hasDividerBeforeDropdown: this.columnActionsOnePlusDropdownOptions.hasDividerBeforeDropdown || !1,
            indexFirstDropdownAction: Ce(this.columnActionsOnePlusDropdownOptions.indexFirstDropdownAction) ? 1 : this.columnActionsOnePlusDropdownOptions.indexFirstDropdownAction,
            indexFirstDropdownActionMobile: Ce(this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile) ? 1 : this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile,
            minDropdownActions: Ce(this.columnActionsOnePlusDropdownOptions.minDropdownActions) ? 1 : this.columnActionsOnePlusDropdownOptions.minDropdownActions,
            actionsClasses: this.columnActionsOnePlusDropdownOptions.actionsClasses || ["a_btn a_btn_primary a_text_truncate"]
          }, this.$slots) : ""
        ]) : ""
      ])
    ]);
  }
};
function uH(e, {
  hasChildren: t = _(() => !1),
  hasPreviewLocal: n = _(() => !1),
  rowClassChildren: r = _(() => {
  }),
  rowClassLevelChildren: s = _(() => {
  }),
  rowClassPreview: i = _(() => {
  }),
  toggleChildren: o = () => {
  }
}) {
  const u = d(e, "disabledPreview"), h = d(e, "disabledPreviewRowCallback"), A = d(e, "isFooter"), E = d(e, "isTreeCollapsible"), p = d(e, "level"), T = d(e, "row"), S = d(e, "rowClass"), b = d(e, "rowIndex"), L = de("isMobile"), v = de("onTogglePreview"), I = de("tableId"), R = _(() => {
    const $ = A.value ? "_footer" : "";
    return `${I.value}${$}_${b.value}`;
  }), g = _(() => Fe(S.value) ? S.value({
    level: p.value,
    row: T.value,
    rowindex: b.value
  }) : S.value), D = _(() => [
    "a_table__row a_table__body__row a_table__row_hover",
    r.value,
    s.value,
    i.value,
    g.value
  ]), w = _(() => L.value ? "listitem" : "row"), M = _(() => Fe(h.value) ? h.value({ row: T.value, rowIndex: b.value }) : u.value), P = ($) => {
    LU({
      $event: $,
      tagsName: [
        "A",
        "BUTTON",
        "INPUT",
        "LABEL"
      ],
      classStop: "a_table__row"
    }) || (t.value ? o() : n.value && v({
      row: T.value,
      rowIndex: b.value
    }));
  }, F = ($) => {
    $.keyCode === X.enter && P($);
  }, C = _(() => (E.value && t.value || n.value) && !M.value ? {
    tabindex: 0,
    onClick: P,
    onKeydown: F
  } : {});
  return {
    disabledPreviewRow: M,
    eventsLocal: C,
    roleLocal: w,
    rowClassComputed: D,
    rowHtmlId: R
  };
}
function _H(e, { emit: t }) {
  const n = d(e, "areAllRowsSelected"), r = d(e, "row"), s = d(e, "rowIndex"), i = d(e, "selectedRowsIndexes"), o = de("currentMultipleActions"), u = de("isMultipleActionsActive"), h = _(() => !!i.value[s.value] || n.value), A = _(() => {
    if (u.value) {
      if (Fe(fe(o.value, "isHiddenCallback")))
        return o.value.isHiddenCallback({
          row: r.value,
          rowIndex: s.value
        });
      if (n.value)
        return !0;
    }
    return !1;
  }), E = _(() => h.value ? "_A_TABLE_DESELECT_THIS_ROW_" : "_A_TABLE_SELECT_THIS_ROW_");
  return {
    isCheckboxDisabled: A,
    isRowSelected: h,
    labelCheckbox: E,
    toggleCheckbox: () => {
      A.value || t("setSelectedRowsIndexes", { rowIndex: s.value });
    }
  };
}
function dH(e) {
  const t = d(e, "isTree"), n = d(e, "keyChildren"), r = d(e, "level"), s = d(e, "row"), i = d(e, "rowIndex"), o = d(e, "rowsLength"), u = _(() => {
    if (!n.value)
      return [];
    const T = fe(s.value, n.value);
    return me(T) ? T : [];
  }), h = _(() => u.value.length > 0), A = _(() => r.value + 1), E = _(() => t.value ? {
    "aria-level": r.value,
    "aria-posinset": i.value + 1,
    "aria-setsize": o.value
  } : {}), p = _(() => {
    if (t.value)
      return `a_table__row_level a_table__row_level_${r.value}`;
  });
  return {
    ariaTreeAttributes: E,
    children: u,
    hasChildren: h,
    levelForChildren: A,
    rowClassLevelChildren: p
  };
}
function cH(e, {
  hasChildren: t = _(() => !1)
}) {
  const n = d(e, "isOneOfParentsClose"), r = d(e, "isTreeCollapsible"), s = d(e, "isTreeOpened"), i = B(!1), o = _(() => {
    if (t.value)
      return i.value;
  }), u = _(() => ({
    a_table__row_has_children: t.value,
    a_table__row_hide: n.value,
    a_table__row_level_open: t.value && i.value
  })), h = _(() => !!(n.value || !i.value));
  return {
    ariaExpanded: o,
    initIsChildrenOpen: () => {
      (!r.value || s.value) && (i.value = !0);
    },
    isOneOfParentsCloseForChildren: h,
    rowClassChildren: u,
    toggleChildren: () => {
      i.value = !i.value;
    }
  };
}
function fH(e) {
  const t = d(e, "allVisibleMobileColumns"), n = d(e, "countVisibleMobileColumns"), r = de("isMobile"), s = B(!1), i = _(() => t.value.length - n.value), o = _(() => r.value && t.value.length > n.value), u = _(() => i.value === 1 ? "_A_TABLE_MOBILE_TR_PLUS_FIELD_" : "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_"), h = _(() => s.value ? "_A_TABLE_MOBILE_TR_CLOSE_" : u.value);
  return {
    countInvisibleMobileColumns: i,
    isAllColumnsVisibleMobile: s,
    isBtnToggleAllColumnsVisible: o,
    textBtnToggleAllColumns: h,
    toggleAllColumnsVisibleMobile: ({ $event: E }) => {
      s.value = !s.value, E.stopPropagation();
    }
  };
}
function hH(e, {
  hasChildren: t = _(() => !1)
}) {
  const n = d(e, "isFooter"), r = d(e, "rowIndex"), s = de("hasPreview"), i = de("previewRightRowIndex"), o = de("previewRightRowIndexLast"), u = _(() => !!(!t.value && s.value && !n.value)), h = _(() => r.value === i.value), A = _(() => !h.value && r.value === o.value), E = _(() => xt({
    placeholder: h.value ? "_A_TABLE_ROW_PREVIEW_CLOSE_" : "_A_TABLE_ROW_PREVIEW_OPEN_"
  })), p = _(() => u.value ? {
    "aria-label": E.value
  } : {}), T = _(() => {
    if (u.value)
      return {
        a_table__row_preview_open: h.value,
        a_table__row_preview_was_open: A.value
      };
  });
  return {
    hasPreviewLocal: u,
    previewAttributes: p,
    rowClassPreview: T
  };
}
const ZE = {
  name: "ATableTr",
  props: {
    allVisibleMobileColumns: {
      type: Array,
      required: !0
    },
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    columnActionsBtnGroupMaxWidthStyle: {
      type: String,
      required: !1,
      default: void 0
    },
    columnActionsView: {
      type: String,
      required: !0
    },
    countVisibleMobileColumns: {
      type: Number,
      required: !0
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    isOneOfParentsClose: {
      type: Boolean,
      required: !1
    },
    isPreviewDownOpen: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isTree: {
      type: Boolean,
      required: !1
    },
    isTreeCollapsible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTreeOpened: {
      type: Boolean,
      required: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "id"
    },
    level: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowClass: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    selectedRowsIndexes: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  setup(e, t) {
    const {
      ariaTreeAttributes: n,
      children: r,
      hasChildren: s,
      levelForChildren: i,
      rowClassLevelChildren: o
    } = dH(e), {
      ariaExpanded: u,
      initIsChildrenOpen: h,
      isOneOfParentsCloseForChildren: A,
      rowClassChildren: E,
      toggleChildren: p
    } = cH(e, {
      hasChildren: s
    }), {
      hasPreviewLocal: T,
      previewAttributes: S,
      rowClassPreview: b
    } = hH(e, {
      hasChildren: s
    }), {
      disabledPreviewRow: L,
      eventsLocal: v,
      roleLocal: I,
      rowClassComputed: R,
      rowHtmlId: g
    } = uH(e, {
      hasChildren: s,
      hasPreviewLocal: T,
      rowClassChildren: E,
      rowClassLevelChildren: o,
      rowClassPreview: b,
      toggleChildren: p
    }), {
      countInvisibleMobileColumns: D,
      isAllColumnsVisibleMobile: w,
      isBtnToggleAllColumnsVisible: M,
      textBtnToggleAllColumns: P,
      toggleAllColumnsVisibleMobile: F
    } = fH(e), {
      isCheckboxDisabled: C,
      isRowSelected: $,
      labelCheckbox: H,
      toggleCheckbox: j
    } = _H(e, t);
    return h(), {
      ariaExpanded: u,
      ariaTreeAttributes: n,
      children: r,
      countInvisibleMobileColumns: D,
      disabledPreviewRow: L,
      eventsLocal: v,
      hasChildren: s,
      isAllColumnsVisibleMobile: w,
      isBtnToggleAllColumnsVisible: M,
      isCheckboxDisabled: C,
      isOneOfParentsCloseForChildren: A,
      isRowSelected: $,
      labelCheckbox: H,
      levelForChildren: i,
      previewAttributes: S,
      roleLocal: I,
      rowClassComputed: R,
      rowHtmlId: g,
      textBtnToggleAllColumns: P,
      toggleAllColumnsVisibleMobile: F,
      toggleCheckbox: j,
      toggleChildren: p
    };
  },
  inject: [
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMultipleActionsActive",
    "isMobile"
  ],
  render() {
    let e = [];
    this.isMobile && !this.isAllColumnsVisibleMobile ? z(this.allVisibleMobileColumns, (r, s) => {
      if (s + 1 > this.countVisibleMobileColumns)
        return !1;
      e.push(
        c(YE, {
          key: r.id,
          column: r,
          columnIndex: s,
          disabledPreview: this.disabledPreviewRow,
          level: this.level,
          row: this.row,
          rowIndex: this.rowIndex,
          isFooter: this.isFooter
        }, this.$slots)
      );
    }) : e = this.columnsFilteredForRender.map((r, s) => c(YE, {
      key: r.id,
      column: r,
      columnIndex: s,
      disabledPreview: this.disabledPreviewRow,
      level: this.level,
      row: this.row,
      rowIndex: this.rowIndex,
      isFooter: this.isFooter,
      showIconChildren: !!(this.isTreeCollapsible && this.hasChildren && s === 0)
    }, this.$slots));
    const t = this.isActionColumnVisible && c(oH, {
      columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
      columnActionsView: this.columnActionsView,
      disabledRowActions: this.disabledRowActions,
      row: this.row,
      rowIndex: this.rowIndex,
      isFooter: this.isFooter,
      rowActionsClass: this.rowActionsClass,
      isRowActionsStickyLocal: this.isRowActionsStickyLocal
    }, this.$slots), n = this.isMobile ? c("div", {
      class: "a_table_mobile__dl__wrapper"
    }, [
      this.$slots.rowMobilePrepend ? this.$slots.rowMobilePrepend({
        row: this.row,
        rowIndex: this.rowIndex,
        isFooter: this.isFooter
      }) : "",
      this.isTreeCollapsible && this.hasChildren ? c(be, {
        "aria-hidden": !0,
        class: "a_table__row_level__icon",
        classDefault: "",
        iconLeft: Um,
        type: "text"
      }) : "",
      c("dl", {
        class: "a_table_mobile__dl"
      }, e),
      this.$slots.rowMobileAppend ? this.$slots.rowMobileAppend({
        row: this.row,
        rowIndex: this.rowIndex,
        isFooter: this.isFooter
      }) : ""
    ]) : e;
    return [
      c("div", {
        id: this.rowHtmlId,
        role: this.roleLocal,
        class: this.rowClassComputed,
        "aria-expanded": this.ariaExpanded,
        ...this.previewAttributes,
        ...this.ariaTreeAttributes,
        ...this.eventsLocal
      }, [
        this.isMultipleActionsActive && c("div", {
          class: "a_table__td a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;"
        }, [
          !this.isFooter && c(Ou, {
            isWidthAuto: !0,
            modelValue: this.isRowSelected,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        n,
        this.isMobile ? c("div", {
          class: "a_table_mobile__actions_parent"
        }, [
          this.isBtnToggleAllColumnsVisible && c(be, {
            class: "a_btn a_btn_link a_table_mobile__columns_btn_toggle",
            extra: {
              count: this.countInvisibleMobileColumns
            },
            text: this.textBtnToggleAllColumns,
            type: "button",
            onClick: this.toggleAllColumnsVisibleMobile
          }),
          t
        ]) : t
      ]),
      this.isPreviewDownOpen && c(rH, {
        row: this.row,
        rowIndex: this.rowIndex
      }, {
        preview: (r) => this.$slots.preview ? this.$slots.preview(r) : void 0
      }),
      this.hasChildren ? this.children.map((r, s) => c(Ur("ATableTr"), {
        key: r[this.keyId] || s,
        allVisibleMobileColumns: this.allVisibleMobileColumns,
        areAllRowsSelected: this.areAllRowsSelected,
        columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
        columnActionsView: this.columnActionsView,
        countVisibleMobileColumns: this.countVisibleMobileColumns,
        disabledPreview: this.disabledPreviewRow,
        disabledRowActions: this.disabledRowActions,
        isFooter: this.isFooter,
        isOneOfParentsClose: this.isOneOfParentsCloseForChildren,
        isPreviewDownOpen: !1,
        isRowActionsStickyLocal: this.isRowActionsStickyLocal,
        isTree: this.isTree,
        isTreeCollapsible: this.isTreeCollapsible,
        isTreeOpened: this.isTreeOpened,
        keyChildren: this.keyChildren,
        keyId: this.keyId,
        level: this.levelForChildren,
        row: r,
        rowActionsClass: this.rowActionsClass,
        rowClass: this.rowClass,
        rowIndex: s,
        rowsLength: this.children.length,
        selectedRowsIndexes: this.selectedRowsIndexes
      }, {
        get: (i) => [
          c(Hd, {
            data: i.row,
            keyLabel: i.column.keyLabel,
            filter: i.column.filter,
            filterParameters: i.column.filterParameters,
            defaultValue: i.column.defaultValue,
            tag: i.column.filterTag || "div"
          })
        ],
        ...this.$slots
      })) : ""
    ];
  }
};
function AH(e, {
  isMobile: t = _(() => !1),
  rowsLocal: n = B([])
}) {
  const r = d(e, "columnActionsView"), s = d(e, "columnActionsWidth"), i = d(e, "columnActionsWidthDefaults"), o = d(e, "columnActionsWidthMin"), u = d(e, "rowActions"), h = _(() => r.value === "onePlusDropdown"), A = _(() => {
    let b = !1;
    e: for (let L = 0; L < n.value.length; L++) {
      const v = n.value[L];
      for (let I = 0; I < u.value.length; I++) {
        const R = u.value[I];
        if (Bm({
          rowAction: R,
          row: v,
          rowIndex: L
        }) && R.type !== "divider") {
          b = !0;
          break e;
        }
      }
    }
    return b;
  }), E = _(() => !u.value.length || !h.value ? !1 : A.value), p = _(() => Ce(s.value) ? E.value && r.value === "onePlusDropdown" ? i.value.onePlusDropdown : i.value.default : s.value), T = _(() => Ce(o.value) ? E.value && r.value === "onePlusDropdown" ? i.value.onePlusDropdownMin : i.value.min : o.value);
  return {
    columnActionsBtnGroupMaxWidthStyle: _(() => {
      const b = i.value.btnGroupMaxWidth;
      if (!t.value && r.value !== "dropdown" && !Ce(b))
        return `max-width: ${b}px`;
    }),
    columnActionsWidthLocal: p,
    columnActionsWidthMinLocal: T,
    isColumnActionWide: E
  };
}
function EH(e, {
  columnsScrollInvisible: t = B([]),
  indexFirstScrollInvisibleColumn: n = B(void 0),
  modelColumnsVisibleLocal: r = B({}),
  modelIsTableWithoutScrollComputed: s = _(() => !1),
  columnsOrderedFromSimpleTable: i = _(() => [])
}) {
  const o = d(e, "columns"), u = d(e, "isActionColumnVisible"), h = d(e, "isSimpleTable"), A = d(e, "modelColumnsOrdering"), E = d(e, "multipleActions"), p = _(() => Pa(o.value, "id")), T = _(() => {
    const R = {
      true: [],
      false: [],
      trueObject: {},
      falseObject: {},
      trueColumns: [],
      falseColumns: []
    };
    return z(pe(o.value), (g) => {
      const D = g.id;
      g.locked ? (R.true.push(D), R.trueColumns.push(g), R.trueObject[D] = !0) : (R.false.push(D), R.falseColumns.push(g), R.falseObject[D] = !0);
    }), R;
  }), S = _(() => {
    if (h.value && i.value && i.value.length)
      return i.value;
    if (!A.value.length)
      return [...T.value.trueColumns, ...T.value.falseColumns];
    const R = [], g = pe(p.value);
    return z(A.value, (D) => {
      g[D] && R.push(g[D]);
    }), R;
  }), b = _(() => {
    const R = [], g = {};
    return z(S.value, (D, w) => {
      yU({
        column: D,
        columnIndex: w,
        modelIsTableWithoutScroll: s.value,
        modelColumnsVisibleLocal: r.value,
        indexFirstScrollInvisibleColumn: n.value
      }) && (g[R.length] = w, R.push(D));
    }), {
      columns: R,
      columnsIndexesMapping: g
    };
  }), L = _(() => b.value.columnsIndexesMapping), v = _(() => b.value.columns), I = _(() => {
    let R = v.value.length;
    return s.value && (R += t.value.length), u.value && R++, E.value.length && R++, R;
  });
  return {
    columnIdsGroupByLocked: T,
    columnsFilteredForRender: v,
    columnsFilteredForRenderIndexesMapping: L,
    columnsOrdered: S,
    countNotHiddenColumns: I
  };
}
function pH(e, {
  modelSort: t = B([])
}) {
  const n = d(e, "columns"), r = d(e, "showFirstSortingSequenceNumber"), s = d(e, "sortingSequenceNumberClass"), i = _(() => Rt(n.value, (I) => vU({ column: I }))), o = _(() => xn(i.value, (I, R) => ({
    ...I,
    _index: I.prio || R
  }))), u = _(() => xn(o.value, (I) => (I.group && I.group.length && (I.group = xn(I.group, (R, g) => [
    R,
    g
  ].join("%%%"))), I))), h = ({ groups: I, group: R, level: g, columnsOrderedFromGroups: D, firstLevelGroupObject: w }) => {
    const M = R ? Rt(I, (C) => Cd(C, R[g - 1])) : I, P = ET(M, (C) => C[g]), F = xn(P, (C) => {
      const $ = {
        id: C[g].split("%%%")[0]
      };
      let H;
      return g === 0 ? (H = $, H.columnIndexes = []) : H = w, C.length > g + 1 ? $.children = fe(
        h({
          groups: I,
          group: C,
          level: g + 1,
          columnsOrderedFromGroups: D,
          firstLevelGroupObject: H
        }),
        "recursiveGroup"
      ) : C.length === g + 1 && ($.columns = Rt(u.value, (j) => Cd(j.group, C[g])), H.columnIndexes.push(...xn($.columns, "_index")), D.push(...$.columns)), $;
    });
    return {
      columnsOrderedFromGroups: D,
      recursiveGroup: F
    };
  }, A = _(() => xn(u.value, (I) => fe(I, "group", I))), E = _(() => Rt(A.value, (I) => me(I))), p = _(() => Rt(A.value, (I) => !me(I))), T = _(() => {
    const I = [];
    return h({ groups: E.value, group: null, level: 0, columnsOrderedFromGroups: I });
  }), S = _(() => wd([
    ...T.value.columnsOrderedFromGroups,
    ...p.value
  ], "_index")), b = (I) => c(jd, {
    ref: "th",
    class: "a_table__cell__child_group",
    column: I,
    columnGroupNames: xn(I.group, (R) => R.split("%%%")[0]),
    columnIndex: I._index,
    hasMultipleActions: !1,
    modelSort: t.value,
    showFirstSortingSequenceNumber: r.value,
    sortingSequenceNumberClass: s.value
  }), L = (I) => c("div", {
    class: "a_table__th_group"
  }, [
    c("div", {
      class: "a_table__th_child_group"
    }, [
      c("div", {
        class: "a_table__cell_group a_text_center"
      }, [
        I.id && c(Ae, {
          html: I.id,
          tag: "span",
          "aria-hidden": !0
        })
      ]),
      c("div", {
        class: "a_table__th_group_container"
      }, I.children ? xn(I.children, (R) => L(R)) : xn(I.columns, (R) => b(R)))
    ])
  ]), v = _(() => {
    const I = wd([
      ...T.value.recursiveGroup,
      ...p.value
    ], (R) => R.columnIndexes ? Ow(R.columnIndexes) : R._index);
    return xn(I, (R) => R.columnIndexes ? L(R) : b(R));
  });
  return {
    columnsOrderedFromSimpleTable: S,
    renderedGroupedColumns: v
  };
}
function TH(e, { emit: t }, {
  checkVisibleColumns: n = () => {
  },
  columnIdsGroupByLocked: r = _(() => ({
    true: [],
    false: [],
    trueObject: {},
    falseObject: {},
    trueColumns: [],
    falseColumns: []
  })),
  columnsFilteredForRenderIndexesMapping: s = _(() => ({}))
}) {
  const i = d(e, "columns"), o = d(e, "modelColumnsOrdering"), u = ({ columnIndexDraggable: E, columnIndexOver: p, reset: T, inHeader: S }) => {
    if (E === p && !T)
      return;
    S && (E = s.value[E], p = s.value[p]);
    let b;
    if (T)
      b = [...r.value.true, ...r.value.false];
    else {
      b = pe(o.value);
      const L = b[E];
      b.splice(E, 1), b.splice(p, 0, L);
    }
    t("changeColumnsOrdering", {
      columnIndexDraggable: E,
      columnIndexOver: p,
      modelColumnsOrdering: b
    }), setTimeout(() => {
      n();
    });
  }, h = () => {
    let E = [], p = !1;
    if (!o.value.length)
      E = [...r.value.true, ...r.value.false];
    else {
      E = [...r.value.true];
      const T = pe(r.value.falseObject);
      z(o.value, (S) => {
        T[S] && (E.push(S), delete T[S]);
      }), z(T, (S, b) => {
        E.push(b);
      }), JSON.stringify(o.value) !== JSON.stringify(E) && (p = !0);
    }
    return {
      shouldFixColumns: p,
      modelColumnsOrderingLocal: E
    };
  }, A = () => {
    const {
      shouldFixColumns: E,
      modelColumnsOrderingLocal: p
    } = h();
    E && t("changeColumnsOrdering", {
      modelColumnsOrdering: p,
      shouldFixColumns: E
    });
  };
  return rt(i, () => {
    A();
  }, {
    deep: !0
  }), {
    changeColumnsOrdering: u,
    checkColumnsOrdering: h
  };
}
function mH(e) {
  const t = d(e, "countAllRows"), n = d(e, "data"), r = d(e, "isTree"), s = d(e, "keyChildren"), i = d(e, "keyCountAllRowsInData"), o = _(() => nt(n.value)), u = _(() => me(n.value)), h = _(() => ae(t.value) ? o.value ? +fe(n.value, i.value) : u.value ? r.value ? VP({
    array: n.value,
    keyChildren: s.value
  }) : n.value.length : 0 : t.value), A = _(() => ae(t.value) ? n.value.length : t.value);
  return {
    countAllRowsLocal: h,
    totalRowsCount: A
  };
}
function SH({
  tableRef: e = B(void 0)
}) {
  return {
    scrollToTable: () => {
      if (e.value) {
        let s = e.value.getBoundingClientRect().top + window.scrollY - window.innerHeight / 2;
        s < 0 && (s = 0), document.documentElement.scrollTop = s;
      }
    },
    setFocusToTable: () => {
      e.value && (e.value.setAttribute("tabindex", "-1"), e.value.focus(), e.value.removeAttribute("tabindex"));
    }
  };
}
function bH(e, { emit: t }, {
  checkColumnsOrdering: n = () => {
  },
  checkVisibleColumns: r = () => {
  },
  modelColumnsVisibleLocal: s = B({})
}) {
  const i = d(e, "modelColumnsVisible"), o = d(e, "columns");
  return {
    initTable: () => {
      const {
        shouldFixColumns: h,
        modelColumnsOrderingLocal: A
      } = n();
      let E = !1;
      mi(i.value) ? s.value = pe(i.value) : (E = !0, s.value = Rm(o.value), r()), t("initTable", pe({
        columnsOrdering: {
          model: A,
          shouldFix: h
        },
        columnsVisible: {
          model: s.value,
          shouldFix: E
        }
      }));
    }
  };
}
function LH(e, { emit: t }, {
  closePreviewAll: n = () => {
  },
  scrollToTable: r = () => {
  },
  setFocusToTable: s = () => {
  },
  viewCurrent: i = _(() => ({}))
}) {
  const o = d(e, "isTree"), u = d(e, "offsetStart"), h = d(e, "pagination"), A = B(void 0), E = B(void 0), p = () => {
    A.value = h.value.limitStart || 10, E.value = u.value;
  }, T = _(() => {
    var L;
    return o.value ? !1 : (L = h.value) != null && L.use ? i.value ? i.value.usePagination || !1 : !0 : !1;
  });
  return {
    changeLimit: (L) => {
      s(), r(), A.value = L, E.value = u.value, t("changeLimit", {
        offset: E.value,
        limit: L
      }), n();
    },
    changeOffset: (L) => {
      let v, I;
      nt(L) ? (v = L.offset, I = L.reload) : (v = L, I = !0), I && (s(), r()), E.value = v, t("changeOffset", {
        offset: v,
        limit: A.value
      }), I && n();
    },
    initLocalVars: p,
    limit: A,
    offset: E,
    usePaginationLocal: T
  };
}
function vH({
  columnsOrdered: e = B([]),
  isMobile: t = B(!1),
  modelColumnsVisibleLocal: n = B({})
}) {
  return {
    allVisibleMobileColumns: _(() => t.value ? Rt(e.value, (s) => s.isRender !== !1 && n.value[s.id] !== !1) : [])
  };
}
function IH(e, { emit: t }, {
  checkVisibleColumns: n = () => {
  },
  isMultipleActionsActive: r = B(void 0),
  rowsLocalAll: s = _(() => []),
  rowsLocalLength: i = _(() => 0)
}) {
  const o = d(e, "id"), u = d(e, "multipleActions"), h = B(void 0), A = B({}), E = B(!1), p = _(() => u.value.length > 0), T = _(() => Fe(fe(h.value, "isHiddenCallback"))), S = _(() => Rt(s.value, (P, F) => A.value[F])), b = () => {
    A.value = {};
  }, L = () => {
    r.value = !1, h.value = void 0, E.value = !1, b();
  }, v = () => {
    if (window.isScrollDisabled)
      return;
    const P = Nm({ tableId: o.value });
    sa({
      selector: `#${P}`
    });
  }, I = ({ isActive: P, action: F } = {}) => {
    if (P) {
      r.value = !0, h.value = F, setTimeout(() => {
        n(), v();
      }), t("toggleMultipleActions", { isActive: P, action: F });
      return;
    }
    r.value ? L() : r.value = !0, setTimeout(() => {
      n(), v();
    }), t("toggleMultipleActions", { isActive: P, action: F });
  }, R = _(() => mi(A.value)), g = _(() => i.value > 0 && i.value === R.value), D = _(() => R.value > 0);
  return {
    areAllRowsSelected: E,
    areAllVisibleRowsSelected: g,
    areSomeRowsSelected: D,
    closeMultipleActionsActive: L,
    currentMultipleActions: h,
    hasMultipleActions: p,
    selectedRows: S,
    selectedRowsIndexes: A,
    setEmptySelectedRowsIndexes: b,
    setSelectedRowsIndexes: ({ rowIndex: P, isAll: F }) => {
      if (F) {
        if (D.value)
          b();
        else {
          const C = {};
          T.value ? lr(i.value, ($) => {
            h.value.isHiddenCallback({
              row: s.value[$],
              rowIndex: $
            }) || (C[$] = !0);
          }) : lr(i.value, ($) => {
            C[$] = !0;
          }), A.value = C;
        }
        return;
      }
      A.value[P] ? delete A.value[P] : A.value[P] = !0;
    },
    toggleBtnAllRows: () => {
      E.value = !E.value, E.value && b();
    },
    toggleMultipleActionsActive: I
  };
}
function yH(e, { emit: t }, {
  aTableRef: n = B({}),
  tableGrandparentRef: r = B({})
}) {
  const {
    previewRef: s,
    removePreviewRef: i
  } = Mm(), o = d(e, "previewBoxWidth"), u = 200, h = 50;
  let A, E = 0, p = 0, T = 0;
  const S = () => {
    p = n.value.getBoundingClientRect().left;
  }, b = ({ clientWidth: C }) => {
    E = C, A = C / 100 * h, S();
  }, L = ({ clientWidthLocal: C, clientXTableParent: $, previewBoxWidth: H }) => {
    const j = C - $ - H;
    n.value.style.width = `${j}px`;
  }, v = ({ clientX: C = 0, previewRef: $, previewBoxWidth: H = 0 }) => {
    let j = H || E - C;
    j < u ? j = u : j > A && (j = A), L({ clientWidthLocal: E, clientXTableParent: p, previewBoxWidth: j }), $.style.width = `${j}px`;
  }, I = ({ previewRef: C }) => {
    fe(C, "style.removeProperty") && C.style.removeProperty("width"), fe(n, "value.style.removeProperty") && n.value.style.removeProperty("width");
  }, R = ({ previewRef: C }) => {
    E = document.documentElement.clientWidth, T = fe(r, "value.offsetWidth", 0), S(), v({
      previewRef: C,
      previewBoxWidth: o.value
    });
  }, g = ({ previewRef: C, isOpen: $ }) => {
    $ ? R({ previewRef: C }) : I({ previewRef: C });
  }, D = ({ previewRightWidth: C }) => {
    t("mouseupResizePreviewRight", { previewRightWidth: C });
  }, w = () => {
    R({
      previewRef: s.value
    });
  }, M = new ResizeObserver(
    ol((C) => {
      const $ = C[0].contentRect;
      T !== $.width && (T = $.width, w());
    }, 300)
  ), P = () => {
    M.observe(r.value);
  }, F = () => {
    M.unobserve(r.value);
  };
  return Dt(() => {
    i(), F();
  }), {
    addEventListenerWindowResize: P,
    mousedownResizePreviewRight: b,
    mousemoveResizePreviewRight: v,
    mouseupResizePreviewRight: D,
    removeEventListenerWindowResize: F,
    togglePreviewResize: g
  };
}
function gH(e, t, {
  aTableRef: n = B({}),
  isMobile: r = B(void 0),
  rowsLocalAll: s = _(() => []),
  tableGrandparentRef: i = B({})
}) {
  const {
    isDropdownGlobalOpen: o
  } = YT(), {
    addEventListenerWindowResize: u,
    mousedownResizePreviewRight: h,
    mousemoveResizePreviewRight: A,
    mouseupResizePreviewRight: E,
    removeEventListenerWindowResize: p,
    togglePreviewResize: T
  } = yH(e, t, {
    aTableRef: n,
    tableGrandparentRef: i
  }), S = d(e, "keyId"), b = d(e, "preview"), L = d(e, "id"), v = t.emit, I = B({}), R = B(void 0), g = B(void 0), D = _(() => !!b.value), w = ({ rowIndex: Se }) => {
    window.isScrollDisabled || setTimeout(() => {
      const se = `#${L.value}_${Se}`;
      sa({ selector: se });
    });
  }, M = () => {
    window.isScrollDisabled || setTimeout(() => {
      const Se = `#${Cm({ tableId: L.value })}`;
      sa({ selector: Se });
    });
  }, P = _(() => b.value === "right" || r.value), F = _(() => !ae(R.value)), C = () => {
    w({
      rowIndex: R.value
    }), v("togglePreview", {
      row: s.value[R.value],
      rowIndex: R.value,
      typeToggle: "close"
    }), g.value = R.value, R.value = void 0, p();
  }, $ = () => {
    v("togglePreview", {
      row: s.value[R.value],
      rowIndex: R.value,
      typeToggle: "close"
    }), g.value = void 0, R.value = void 0, p();
  }, H = _(() => b.value === "down"), j = ({ rowIndex: Se, row: se }) => {
    const Oe = iu({ row: se, rowIndex: Se, keyId: S.value });
    delete I.value[Oe];
  }, le = () => {
    I.value = {};
  }, ee = () => {
    $(), le();
  }, _e = ({ rowIndex: Se, row: se } = {}) => {
    P.value ? C() : H.value && j({ rowIndex: Se, row: se });
  }, ie = ({ rowIndex: Se }) => {
    !r.value && Ce(R.value) && u(), v("togglePreview", {
      row: s.value[Se],
      rowIndex: Se,
      typeToggle: "open"
    }), R.value = Se, g.value = void 0, M();
  }, ue = ({ rowIndex: Se }) => {
    R.value === Se ? C() : ie({ rowIndex: Se });
  }, Te = ({ rowIndex: Se, row: se }) => {
    const Oe = iu({ row: se, rowIndex: Se, keyId: S.value });
    I.value[Oe] ? delete I.value[Oe] : I.value[Oe] = !0;
  };
  return {
    closePreview: _e,
    closePreviewAll: ee,
    hasPreview: D,
    isPreviewRightOpen: F,
    mousedownResizePreviewRight: h,
    mousemoveResizePreviewRight: A,
    mouseupResizePreviewRight: E,
    onTogglePreview: ({ row: Se, rowIndex: se }) => {
      if (!o.value) {
        if (P.value) {
          ue({ rowIndex: se });
          return;
        }
        H.value && Te({ row: Se, rowIndex: se });
      }
    },
    previewDownRowIds: I,
    previewRightRowIndex: R,
    previewRightRowIndexLast: g,
    togglePreviewResize: T
  };
}
function RH(e, {
  dataSorted: t = _(() => []),
  limit: n = B(0),
  offset: r = B(0),
  setEmptySelectedRowsIndexes: s = () => {
  },
  usePaginationLocal: i = _(() => !1)
}) {
  const o = d(e, "clearSelectedRowsOnDataChange"), u = d(e, "pagination"), h = d(e, "rowsCountRenderPerTick"), A = B([]), E = B([]);
  let p = !0, T = 0, S;
  const b = _(() => {
    if (n.value && !u.value.isOutside && i.value) {
      const F = r.value, C = F + n.value;
      return t.value.slice(F, C);
    }
    return t.value;
  }), L = _(() => b.value), v = _(() => L.value.length), I = _(() => !!v.value), R = () => {
    const F = T * h.value, C = F + h.value;
    xn(b.value.slice(F, C), ($) => E.value.push($)), T++;
  }, g = () => {
    S = setInterval(() => {
      T * h.value >= b.value.length ? clearInterval(S) : R();
    });
  }, D = () => {
    clearInterval(S);
  }, w = ({ row: F, rowIndex: C }) => {
    C > E.value.length - 1 || (E.value[C] = F);
  }, M = ({ row: F }) => {
    E.value.unshift(F);
  }, P = ({ index: F }) => {
    E.value.splice(F, 1);
  };
  return rt(b, (F) => {
    mc(F, A.value) || (A.value = [...F], !p && o.value && s(), p = !1, E.value = [], T = 0, D(), h.value > 0 ? (R(), g()) : E.value = b.value);
  }, {
    immediate: !0,
    deep: !0
  }), {
    addRow: M,
    deleteRow: P,
    hasRows: I,
    rowsLocal: E,
    rowsLocalAll: L,
    rowsLocalLength: v,
    stopRenderRows: D,
    updateRow: w
  };
}
function OH(e, { emit: t }, {
  columnActionsWidth: n = _(() => 0),
  columnActionsWidthMin: r = _(() => 0),
  columnsOrdered: s = _(() => []),
  columnsScrollInvisible: i = B([]),
  indexFirstScrollInvisibleColumn: o = B(void 0),
  isMobile: u = B(!1),
  isMultipleActionsActive: h = B(void 0),
  modelColumnsVisibleLocal: A = B({}),
  modelIsTableWithoutScroll: E = B(!1),
  modelIsTableWithoutScrollComputed: p = _(() => !1)
}) {
  const T = d(e, "columnWidthDefault"), S = d(e, "isActionColumnVisible"), b = d(e, "isSimpleTable"), L = B(void 0), v = B(0), I = B(void 0);
  let R = !1;
  const g = 20, D = _(() => S.value ? r.value : 0), w = _(() => {
    const ee = h.value ? r.value : 0, _e = b.value ? 0 : g;
    return ee + _e;
  }), M = ({
    sumGrows: ee = 0,
    freeSpaceWidth: _e = 0
  }) => {
    ee > 0 ? v.value = _e / ee : v.value = 0;
  }, P = () => {
    if (ae(o.value) || s.value.length < o.value)
      i.value = [];
    else {
      const ee = [];
      for (let _e = o.value; _e < s.value.length; _e++) {
        const ie = s.value[_e];
        al({
          column: ie,
          modelColumnsVisibleLocal: A.value
        }) && ee.push(pe(ie));
      }
      i.value = ee;
    }
  }, F = () => {
    i.value = [], v.value = 0, o.value = 1e3, I.value = 0;
  }, C = () => {
    if (u.value || I.value === 0) {
      F();
      return;
    }
    if (Ce(I.value))
      return;
    const ee = I.value - w.value - D.value, _e = I.value - w.value - n.value;
    let ie = 0, ue = 0, Te = 0, Pe = !1;
    if (z(s.value, (Oe) => {
      if (!al({
        column: Oe,
        modelColumnsVisibleLocal: A.value
      })) {
        ue++;
        return;
      }
      const ye = +Oe.width || T.value;
      if (ie + ye > ee)
        return Pe = !0, !1;
      ie += ye, ue++, Te += ae(Oe.grow) ? 1 : Oe.grow;
    }), Pe && ie > _e)
      for (let Oe = ue - 1; Oe >= 0; Oe--) {
        ue--;
        const ye = s.value[ue];
        if (!al({
          column: ye,
          modelColumnsVisibleLocal: A.value
        }))
          continue;
        const je = +ye.width || T.value;
        if (ie -= je, Te -= ae(ye.grow) ? 1 : ye.grow, ie <= _e)
          break;
      }
    let Se = 0;
    const se = Pe ? _e : ee;
    (p.value || ue === s.value.length) && (Se = se - ie), o.value = ue, M({
      sumGrows: Te,
      freeSpaceWidth: Se
    }), P();
  }, $ = ({ entries: ee, forceAdjust: _e }) => {
    const ie = ee[0].contentRect;
    (_e || I.value > ie.width + g || I.value < ie.width - g) && (R || (R = !0, I.value = ie.width, C(), R = !1));
  }, H = new ResizeObserver(
    ol((ee) => {
      Ce(I.value) ? $({ entries: ee, forceAdjust: !0 }) : $({ entries: ee });
    }, 300)
  ), j = (ee) => {
    ee ? (H.unobserve(L.value), F()) : (H.observe(L.value), E.value && C());
  }, le = (ee) => {
    E.value = ee, t("updateModelIsTableWithoutScroll", ee), E.value && C();
  };
  return Wr(() => {
    u.value || H.observe(L.value);
  }), Dt(() => {
    H.unobserve(L.value);
  }), rt(s, () => {
    C();
  }), {
    aTableRef: L,
    changeModelIsTableWithoutScroll: le,
    checkVisibleColumns: C,
    columnsVisibleAdditionalSpaceForOneGrow: v,
    onWatchMobileScrollControl: j
  };
}
function CH(e) {
  const t = d(e, "hasMobile"), n = d(e, "isActionColumnVisible"), r = d(e, "isActionColumnVisible"), s = d(e, "isColumnsDnd"), i = d(e, "isSimpleTable"), o = d(e, "modelIsTableWithoutScrollStart"), u = d(e, "rowActions"), h = B(void 0), A = () => {
    h.value = o.value;
  }, {
    isMobileWidth: E
  } = En(), p = _(() => i.value ? u.value && !!u.value.length && n.value : r.value), T = _(() => !!(r.value && !i.value)), S = _(() => !!(s.value && !i.value)), b = _(() => t.value ? !!E.value : !1), L = _(() => i.value ? !1 : h.value);
  return {
    initModelIsTableWithoutScroll: A,
    isActionColumnVisibleLocal: p,
    isActionIconVisibleLocal: T,
    isColumnsDndLocal: S,
    isMobile: b,
    modelIsTableWithoutScroll: h,
    modelIsTableWithoutScrollComputed: L
  };
}
function NH(e, {
  viewCurrent: t = _(() => ({}))
}) {
  const n = d(e, "data"), r = d(e, "isSortingOutside"), s = d(e, "modelSort"), i = d(e, "useAdditionalSorting"), o = B([]), u = _(() => i.value ? t.value ? t.value.useAdditionalSorting || !1 : !0 : !1), h = () => {
    it(s.value) ? o.value = [s.value] : me(s.value) && (o.value = pe(s.value));
  }, A = _(() => {
    const p = {
      models: [],
      directions: []
    };
    return o.value.length && z(o.value, (T) => {
      let S = "asc", b = T;
      vc(T, "-") && (S = "desc", b = T.slice(1)), p.models.push(b), p.directions.push(S);
    }), p;
  }), E = _(() => o.value.length && !r.value ? Sc(n.value || [], A.value.models, A.value.directions) : n.value || []);
  return rt(s, () => {
    h();
  }), {
    dataSorted: E,
    initModelSort: h,
    modelSortLocal: o,
    useAdditionalSortingLocal: u
  };
}
function DH(e, { emit: t }, {
  modelSortLocal: n = B([]),
  closePreviewAll: r = () => {
  }
}) {
  const s = d(e, "id"), i = d(e, "isSortingMultiColumn"), o = d(e, "sortingMultiColumnKey"), u = _(() => `${o.value}Key`), h = (T) => i.value && T[u.value], A = ({ sortId: T }) => {
    const S = n.value.indexOf(T);
    if (S !== -1) {
      n.value.splice(S, 1, `-${T}`);
      return;
    }
    const b = n.value.indexOf(`-${T}`);
    if (b !== -1) {
      n.value.splice(b, 1);
      return;
    }
    n.value.push(T);
  }, E = ({ sortId: T }) => {
    if (n.value.indexOf(T) !== -1) {
      n.value = [`-${T}`];
      return;
    }
    if (n.value.indexOf(`-${T}`) !== -1) {
      n.value = [];
      return;
    }
    n.value = [T];
  };
  return {
    changeModelSort: ({ sortId: T, $event: S, modelAll: b }) => {
      b ? n.value = b : h(S) ? A({ sortId: T }) : E({ sortId: T }), t("changeSorting", {
        modelSort: pe(n.value)
      }), Ct.$emit("changeTableSorting", {
        modelSort: pe(n.value),
        tableId: s.value
      }), r();
    }
  };
}
function BH(e, {
  isMobile: t = B(void 0),
  modelIsTableWithoutScrollComputed: n = _(() => {
  })
}) {
  const r = d(e, "rowActionsSticky");
  return {
    isRowActionsStickyLocal: _(() => !!(!t.value && r.value && !n.value))
  };
}
function wH(e, {
  countNotHiddenColumns: t = _(() => -1),
  isMobile: n = B(!1)
}) {
  const r = d(e, "id"), s = d(e, "isLabelVisible"), i = _(() => {
    const h = {};
    return n.value || (h.role = "table", h["aria-colcount"] = t.value), h;
  }), o = _(() => n.value ? "list" : "rowgroup"), u = _(() => {
    if (s.value)
      return Dm({ tableId: r.value });
  });
  return {
    tableChildRole: o,
    tableLabelId: u,
    tableRoleAttributes: i
  };
}
function PH(e, { emit: t }, {
  modelColumnsVisibleLocal: n = B({}),
  checkVisibleColumns: r = () => {
  }
}) {
  return {
    changeModelColumnsVisible: (i) => {
      n.value = i, t("update:modelColumnsVisible", pe(n.value)), r();
    }
  };
}
function xH(e) {
  const t = d(e, "texts");
  return {
    emptyText: _(() => Ce(t.value.empty) ? "_A_TABLE_EMPTY_TEXT_" : t.value.empty)
  };
}
function FH() {
  const e = B([]), t = B(void 0), n = B(void 0), r = B({}), s = B(void 0), i = B(void 0);
  return {
    columnsScrollInvisible: e,
    indexFirstScrollInvisibleColumn: t,
    isMultipleActionsActive: n,
    modelColumnsVisibleLocal: r,
    tableGrandparentRef: s,
    tableRef: i
  };
}
function MH(e, { emit: t }, {
  closePreviewAll: n = () => {
  }
}) {
  const r = d(e, "views"), s = d(e, "modelFilters"), i = d(e, "modelView"), o = _(() => Pa(r.value, "id")), u = _(() => o.value[i.value]), h = _(() => r.value.length > 1), A = () => {
    if (h.value) {
      const T = pc(r.value, ["active", !0]);
      let S = r.value[0].id;
      T && (S = T.id), t("updateView", {
        _modelView: S,
        view: o.value[S],
        modelFilters: s.value,
        init: !0
      });
    }
  }, E = (T) => {
    n(), t("updateView", {
      _modelView: T,
      view: o.value[T],
      modelFilters: s.value
    });
  }, p = _(() => !u.value || u.value.type === "table");
  return {
    hasViews: h,
    initViewCurrent: A,
    isViewTableVisible: p,
    updateViewCurrent: E,
    viewCurrent: u
  };
}
const xde = {
  name: "ATable",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    clearSelectedRowsOnDataChange: {
      type: Boolean,
      required: !1,
      default: !0
    },
    columnActionsOnePlusDropdownOptions: {
      type: Object,
      required: !1,
      default: () => ({
        actionsClasses: ["a_btn a_btn_primary a_text_truncate"],
        btnGroupClass: "a_btn_group a_btn_group_table",
        hasDividerBeforeDropdown: !1,
        indexFirstDropdownAction: 1,
        indexFirstDropdownActionMobile: 1,
        minDropdownActions: 1
      })
    },
    columnActionsView: {
      type: String,
      required: !1,
      default: "dropdown",
      validator: (e) => ["onePlusDropdown", "onePlusDropdownEmptyPlace", "dropdown"].indexOf(e) !== -1
    },
    columnActionsWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    columnActionsWidthDefaults: {
      type: Object,
      required: !1,
      default: () => ({
        default: 170,
        min: 50,
        onePlusDropdown: 320,
        onePlusDropdownMin: 200,
        btnGroupMaxWidth: 180
      })
    },
    columnActionsWidthMin: {
      type: Number,
      required: !1,
      default: void 0
    },
    columns: {
      type: Array,
      required: !0
    },
    columnsDefaultValue: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    columnWidthDefault: {
      type: Number,
      required: !1,
      default: 250
    },
    countAllRows: {
      type: Number,
      required: !1,
      default: void 0
    },
    countVisibleMobileColumns: {
      type: Number,
      required: !1,
      default: 4,
      validator: (e) => e > 0
    },
    borderType: {
      type: String,
      required: !1,
      default: () => ai.value.propsDefault.borderType,
      validator: (e) => ["bordered", "innerBordered"].indexOf(e) !== -1
    },
    data: {
      type: [Array, Object, Promise],
      required: !1
    },
    disabledActions: {
      type: Boolean,
      required: !1
    },
    disabledMultipleActions: {
      type: Boolean,
      required: !1
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    disabledViews: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    hasScrollClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_table")
    },
    isActionColumnVisible: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isActionIconVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isColumnsDnd: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLabelVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isLoadingMultipleActions: {
      type: Boolean,
      required: !1
    },
    isLoadingOptions: {
      type: Boolean,
      required: !1
    },
    isLoadingTable: {
      type: Boolean,
      required: !1
    },
    isQuickSearch: {
      type: Boolean,
      required: !1
    },
    isSimpleTable: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSortingOutside: {
      type: Boolean,
      required: !1
    },
    isTree: {
      type: Boolean,
      required: !1
    },
    isTreeCollapsible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTreeOpened: {
      type: Boolean,
      required: !1
    },
    keyCountAllRowsInData: {
      type: String,
      required: !1,
      default: "count"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyChildren: {
      type: String,
      required: !1,
      default: "children"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !1,
      default: "h2"
    },
    modelColumnsOrdering: {
      type: Array,
      required: !1,
      default: () => []
    },
    modelColumnsVisible: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelIsTableWithoutScrollStart: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelQuickSearch: {
      type: String,
      required: !1,
      default: ""
    },
    modelSort: {
      type: [String, Array],
      required: !1,
      default: () => []
    },
    modelView: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    multipleActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    offsetStart: {
      type: Number,
      required: !1,
      default: 0
    },
    pagination: {
      type: Object,
      required: !1,
      default: () => ({
        use: !1,
        maxPages: 5,
        limitsPerPage: [],
        limitStart: 10,
        disabled: !1,
        isOutside: !1,
        outside: !1,
        modes: {
          /*
           * perPage: inline / select
           * pagination: normal / short / loadMore
           */
          desktop: {
            pagination: {
              mode: "normal",
              position: 0
            },
            perPage: {
              mode: "inline",
              position: 1
            }
          },
          mobile: {
            pagination: {
              mode: "loadMore"
            }
          }
        }
      })
    },
    preview: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["right", "down"].indexOf(e) !== -1
    },
    previewBoxWidth: {
      type: Number,
      required: !1,
      default: 300
    },
    previewStyles: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowActionsSticky: {
      type: Boolean,
      required: !1,
      default: !0
    },
    rowClass: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    rowsCountRenderPerTick: {
      type: Number,
      required: !1,
      default: 25,
      validator: (e) => fa(e) && e >= 0
    },
    rowsFooter: {
      type: Array,
      required: !1,
      default: () => []
    },
    showCount: {
      type: Boolean,
      required: !1,
      default: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1,
      default: !1
    },
    sortingMultiColumnKey: {
      type: String,
      required: !1,
      default: "shift",
      validator: (e) => ["shift", "ctrl", "alt"].indexOf(e) !== -1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1,
      default: "a_badge"
    },
    tableActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    tableActionsIndexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: -1
    },
    tableActionsIndexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: 0
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        empty: "_A_TABLE_EMPTY_TEXT_"
      })
    },
    useAdditionalSorting: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useViewSlot: {
      type: Boolean,
      required: !1
    },
    valuesForColumnDefault: {
      type: Array,
      required: !1,
      default: () => [null, void 0, ""]
    },
    views: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  emits: [
    "changeColumnsOrdering",
    "changeColumnsVisible",
    "changeLimit",
    "changeOffset",
    "changeSorting",
    "mouseupResizePreviewRight",
    "initTable",
    "togglePreview",
    "toggleMultipleActions",
    "update:modelColumnsOrder",
    "update:modelColumnsVisible",
    "update:modelQuickSearch",
    "updateModelIsTableWithoutScroll",
    "updateView"
  ],
  provide() {
    return {
      changeModelColumnsVisible: this.changeModelColumnsVisible,
      columnActionsOnePlusDropdownOptions: _(() => this.columnActionsOnePlusDropdownOptions),
      columns: _(() => this.columns),
      columnsDefaultValue: _(() => this.columnsDefaultValue),
      columnWidthDefault: _(() => this.columnWidthDefault),
      isLoadingOptions: _(() => this.isLoadingOptions),
      isLoadingTable: _(() => this.isLoadingTable),
      keyId: _(() => this.keyId),
      rowActions: _(() => this.rowActions),
      tableId: _(() => this.id),
      valuesForColumnDefault: _(() => this.valuesForColumnDefault)
    };
  },
  setup(e, t) {
    const {
      initModelIsTableWithoutScroll: n,
      isActionColumnVisibleLocal: r,
      isActionIconVisibleLocal: s,
      isColumnsDndLocal: i,
      isMobile: o,
      modelIsTableWithoutScroll: u,
      modelIsTableWithoutScrollComputed: h
    } = CH(e), {
      countAllRowsLocal: A,
      totalRowsCount: E
    } = mH(e), {
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      isMultipleActionsActive: S,
      modelColumnsVisibleLocal: b,
      tableGrandparentRef: L,
      tableRef: v
    } = FH(), {
      scrollToTable: I,
      setFocusToTable: R
    } = SH({
      tableRef: v
    }), {
      hasViews: g,
      initViewCurrent: D,
      isViewTableVisible: w,
      updateViewCurrent: M,
      viewCurrent: P
    } = MH(e, t, {
      closePreviewAll: Er
    }), {
      dataSorted: F,
      initModelSort: C,
      modelSortLocal: $,
      useAdditionalSortingLocal: H
    } = NH(e, {
      viewCurrent: P
    }), {
      columnsOrderedFromSimpleTable: j,
      renderedGroupedColumns: le
    } = pH(e, {
      modelSort: $
    }), {
      columnIdsGroupByLocked: ee,
      columnsFilteredForRender: _e,
      columnsFilteredForRenderIndexesMapping: ie,
      columnsOrdered: ue,
      countNotHiddenColumns: Te
    } = EH(e, {
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      modelColumnsVisibleLocal: b,
      modelIsTableWithoutScrollComputed: h,
      columnsOrderedFromSimpleTable: j
    }), {
      changeLimit: Pe,
      changeOffset: Se,
      initLocalVars: se,
      limit: Oe,
      offset: ye,
      usePaginationLocal: je
    } = LH(e, t, {
      closePreviewAll: Er,
      scrollToTable: I,
      setFocusToTable: R,
      viewCurrent: P
    }), {
      addRow: he,
      deleteRow: ne,
      hasRows: V,
      rowsLocal: Q,
      rowsLocalAll: re,
      rowsLocalLength: ve,
      stopRenderRows: De,
      updateRow: qe
    } = RH(e, {
      dataSorted: F,
      limit: Oe,
      offset: ye,
      setEmptySelectedRowsIndexes: fs,
      usePaginationLocal: je
    }), {
      columnActionsBtnGroupMaxWidthStyle: Xe,
      columnActionsWidthLocal: Me,
      columnActionsWidthMinLocal: xe,
      isColumnActionWide: at
    } = AH(e, {
      isMobile: o,
      rowsLocal: Q
    }), {
      aTableRef: Ve,
      changeModelIsTableWithoutScroll: st,
      checkVisibleColumns: Ze,
      columnsVisibleAdditionalSpaceForOneGrow: At,
      onWatchMobileScrollControl: Et
    } = OH(e, t, {
      columnActionsWidth: Me,
      columnActionsWidthMin: xe,
      columnsOrdered: ue,
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      isMobile: o,
      isMultipleActionsActive: S,
      modelColumnsVisibleLocal: b,
      modelIsTableWithoutScroll: u,
      modelIsTableWithoutScrollComputed: h
    }), {
      changeColumnsOrdering: qt,
      checkColumnsOrdering: pn
    } = TH(e, t, {
      checkVisibleColumns: Ze,
      columnIdsGroupByLocked: ee,
      columnsFilteredForRenderIndexesMapping: ie
    }), {
      isRowActionsStickyLocal: cr
    } = BH(e, {
      isMobile: o,
      modelIsTableWithoutScrollComputed: h
    }), {
      areAllRowsSelected: Qt,
      areAllVisibleRowsSelected: Gn,
      areSomeRowsSelected: Kn,
      closeMultipleActionsActive: Rn,
      currentMultipleActions: Cr,
      hasMultipleActions: fr,
      selectedRows: Nr,
      selectedRowsIndexes: jn,
      setEmptySelectedRowsIndexes: zn,
      setSelectedRowsIndexes: Gt,
      toggleBtnAllRows: Tn,
      toggleMultipleActionsActive: hr
    } = IH(e, t, {
      checkVisibleColumns: Ze,
      isMultipleActionsActive: S,
      rowsLocalAll: re,
      rowsLocalLength: ve
    }), {
      changeModelColumnsVisible: Ar
    } = PH(e, t, {
      modelColumnsVisibleLocal: b,
      checkVisibleColumns: Ze
    }), {
      closePreview: _s,
      closePreviewAll: Dr,
      hasPreview: Yn,
      isPreviewRightOpen: Aa,
      onTogglePreview: On,
      mousedownResizePreviewRight: ds,
      mousemoveResizePreviewRight: cs,
      mouseupResizePreviewRight: Lt,
      previewDownRowIds: Xn,
      previewRightRowIndex: jr,
      previewRightRowIndexLast: Ea,
      togglePreviewResize: zr
    } = gH(e, t, {
      aTableRef: Ve,
      isMobile: o,
      rowsLocalAll: re,
      tableGrandparentRef: L
    }), {
      tableChildRole: pa,
      tableLabelId: Br,
      tableRoleAttributes: Ii
    } = wH(e, {
      countNotHiddenColumns: Te,
      isMobile: o
    }), {
      allVisibleMobileColumns: en
    } = vH({
      columnsOrdered: ue,
      isMobile: o,
      modelColumnsVisibleLocal: b
    }), {
      changeModelSort: Ta
    } = DH(e, t, {
      modelSortLocal: $,
      closePreviewAll: Er
    }), {
      initTable: ks
    } = bH(e, t, {
      checkColumnsOrdering: pn,
      checkVisibleColumns: Ze,
      modelColumnsVisibleLocal: b
    }), {
      emptyText: Us
    } = xH(e);
    function Er() {
      Dr();
    }
    function fs() {
      zn();
    }
    return rt(o, (on) => {
      Et(on), Er();
    }), rt(at, (on, Hs) => {
      on !== Hs && Ze();
    }), et("changeModelIsTableWithoutScroll", st), et("changeModelSort", Ta), et("columnsOrdered", ue), et("columnsFilteredForRender", _e), et("columnsScrollInvisible", p), et("columnsVisibleAdditionalSpaceForOneGrow", At), et("columnActionsWidthLocal", Me), et("columnActionsWidthMinLocal", xe), et("currentMultipleActions", Cr), et("hasPreview", Yn), et("indexFirstScrollInvisibleColumn", T), et("isActionColumnVisible", r), et("isActionIconVisible", s), et("isColumnsDnd", i), et("isMobile", o), et("isMultipleActionsActive", S), et("modelIsTableWithoutScroll", h), et("onTogglePreview", On), et("previewRightRowIndex", jr), et("previewRightRowIndexLast", Ea), et("rowsLocalAll", re), et("modelColumnsVisibleLocal", b), et("changeColumnsOrdering", qt), se(), n(), D(), ks(), C(), {
      addRow: he,
      allVisibleMobileColumns: en,
      areAllRowsSelected: Qt,
      areAllVisibleRowsSelected: Gn,
      areSomeRowsSelected: Kn,
      aTableRef: Ve,
      changeLimit: Pe,
      changeModelColumnsVisible: Ar,
      changeOffset: Se,
      checkVisibleColumns: Ze,
      closeMultipleActionsActive: Rn,
      closePreview: _s,
      closePreviewAll: Er,
      columnActionsBtnGroupMaxWidthStyle: Xe,
      columnsFilteredForRender: _e,
      columnsOrdered: ue,
      countAllRowsLocal: A,
      deleteRow: ne,
      emptyText: Us,
      hasMultipleActions: fr,
      hasRows: V,
      hasViews: g,
      isMobile: o,
      isMultipleActionsActive: S,
      isPreviewRightOpen: Aa,
      isRowActionsStickyLocal: cr,
      isViewTableVisible: w,
      limit: Oe,
      modelColumnsVisibleLocal: b,
      modelIsTableWithoutScrollComputed: h,
      modelSortLocal: $,
      mousedownResizePreviewRight: ds,
      mousemoveResizePreviewRight: cs,
      mouseupResizePreviewRight: Lt,
      offset: ye,
      onTogglePreview: On,
      previewDownRowIds: Xn,
      previewRightRowIndex: jr,
      renderedGroupedColumns: le,
      rowsLocal: Q,
      rowsLocalAll: re,
      rowsLocalLength: ve,
      selectedRows: Nr,
      selectedRowsIndexes: jn,
      setEmptySelectedRowsIndexes: fs,
      setSelectedRowsIndexes: Gt,
      stopRenderRows: De,
      tableChildRole: pa,
      tableGrandparentRef: L,
      tableLabelId: Br,
      tableRef: v,
      tableRoleAttributes: Ii,
      toggleBtnAllRows: Tn,
      toggleMultipleActionsActive: hr,
      togglePreviewResize: zr,
      totalRowsCount: E,
      updateRow: qe,
      updateViewCurrent: M,
      useAdditionalSortingLocal: H,
      usePaginationLocal: je,
      viewCurrent: P
    };
  },
  data() {
    return {
      resolved: void 0,
      error: void 0
    };
  },
  computed: {
    hasRowsFooter() {
      return this.rowsFooter.length > 0;
    }
  },
  methods: {
    updateModelQuickSearch(e) {
      this.$emit("update:modelQuickSearch", e);
    }
  },
  render() {
    return c("div", {
      ref: "tableGrandparentRef",
      class: ["a_table__grandparent", {
        a_table_mobile: this.isMobile,
        a_table__grandparent_without_scroll: !this.hasScrollClass
      }]
    }, [
      this.$slots.tablePrepend && this.$slots.tablePrepend({
        id: this.id
      }),
      c("div", {
        ref: "aTableRef",
        class: ["a_table__parent", {
          a_table__parent_scrollable: this.hasScrollClass && !this.modelIsTableWithoutScrollComputed
        }]
      }, [
        c(tH, {
          additionalSortingColumns: this.additionalSortingColumns,
          areAllRowsSelected: this.areAllRowsSelected,
          areSomeRowsSelected: this.areSomeRowsSelected,
          closeMultipleActionsActive: this.closeMultipleActionsActive,
          countAllRows: this.countAllRowsLocal,
          disabledActions: this.disabledActions,
          disabledMultipleActions: this.disabledMultipleActions,
          disabledSort: this.disabledSort,
          disabledViews: this.disabledViews,
          extra: this.extra,
          hasViews: this.hasViews,
          isLabelVisible: this.isLabelVisible,
          isLoadingMultipleActions: this.isLoadingMultipleActions,
          isQuickSearch: this.isQuickSearch,
          isSortingMultiColumn: this.isSortingMultiColumn,
          label: this.label,
          labelClass: this.labelClass,
          labelTag: this.labelTag,
          modelQuickSearch: this.modelQuickSearch,
          modelSort: this.modelSortLocal,
          modelView: this.modelView,
          multipleActions: this.multipleActions,
          selectedRows: this.selectedRows,
          showCount: this.showCount,
          tableActions: this.tableActions,
          tableActionsIndexFirstDropdownAction: this.tableActionsIndexFirstDropdownAction,
          tableActionsIndexFirstDropdownActionMobile: this.tableActionsIndexFirstDropdownActionMobile,
          useAdditionalSorting: this.useAdditionalSortingLocal,
          useViewSlot: this.useViewSlot,
          viewCurrent: this.viewCurrent,
          views: this.views,
          onUpdateViewCurrent: this.updateViewCurrent,
          onUpdateModelQuickSearch: this.updateModelQuickSearch,
          onToggleMultipleActionsActive: this.toggleMultipleActionsActive,
          onToggleBtnAllRows: this.toggleBtnAllRows
        }, this.$slots),
        this.$slots.topPanelAppend ? this.$slots.topPanelAppend() : "",
        this.isViewTableVisible && c("div", {
          ref: "tableRef",
          "aria-labelledby": this.isLabelVisible ? this.tableLabelId : void 0,
          class: [
            "a_table",
            {
              a_table_simple: this.isSimpleTable,
              a_table_bordered: this.borderType === "bordered",
              a_table_inner_bordered: this.borderType === "innerBordered"
            }
          ],
          ...this.tableRoleAttributes
        }, [
          this.isSimpleTable ? c(CU, {
            areAllRowsSelected: this.areAllRowsSelected,
            areAllVisibleRowsSelected: this.areAllVisibleRowsSelected,
            areSomeRowsSelected: this.areSomeRowsSelected,
            disabledOptions: this.disabledOptions,
            disabledSort: this.disabledSort,
            hasMultipleActions: this.hasMultipleActions,
            isRowActionsStickyLocal: this.isRowActionsStickyLocal,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSortLocal,
            rowsLocalLength: this.rowsLocalLength,
            showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
            sortingSequenceNumberClass: this.sortingSequenceNumberClass,
            onSetSelectedRowsIndexes: this.setSelectedRowsIndexes,
            columnsForRender: this.renderedGroupedColumns
          }) : c(xU, {
            areAllRowsSelected: this.areAllRowsSelected,
            areAllVisibleRowsSelected: this.areAllVisibleRowsSelected,
            areSomeRowsSelected: this.areSomeRowsSelected,
            disabledOptions: this.disabledOptions,
            disabledSort: this.disabledSort,
            hasMultipleActions: this.hasMultipleActions,
            isRowActionsStickyLocal: this.isRowActionsStickyLocal,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSortLocal,
            rowsLocalLength: this.rowsLocalLength,
            showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
            sortingSequenceNumberClass: this.sortingSequenceNumberClass,
            onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
          }),
          c("div", {
            class: "a_table__loading"
          }, [
            c(pm, {
              isLoading: this.isLoadingTable
            }, () => [
              c("div", {
                class: "a_table__body",
                role: this.tableChildRole
              }, {
                default: () => this.rowsLocal.map((e, t) => {
                  const n = iu({ row: e, rowIndex: t, keyId: this.keyId });
                  return c(ZE, {
                    key: n,
                    allVisibleMobileColumns: this.allVisibleMobileColumns,
                    areAllRowsSelected: this.areAllRowsSelected,
                    columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
                    columnActionsView: this.columnActionsView,
                    countVisibleMobileColumns: this.countVisibleMobileColumns,
                    disabledPreview: this.disabledPreview,
                    disabledPreviewRowCallback: this.disabledPreviewRowCallback,
                    disabledRowActions: this.disabledRowActions,
                    isFooter: !1,
                    isPreviewDownOpen: this.previewDownRowIds[n],
                    isRowActionsStickyLocal: this.isRowActionsStickyLocal,
                    isTree: this.isTree,
                    isTreeCollapsible: this.isTreeCollapsible,
                    isTreeOpened: this.isTreeOpened,
                    keyChildren: this.keyChildren,
                    keyId: this.keyId,
                    level: 1,
                    row: e,
                    rowActionsClass: this.rowActionsClass,
                    rowClass: this.rowClass,
                    rowIndex: t,
                    rowsLength: this.rowsLocal.length,
                    selectedRowsIndexes: this.selectedRowsIndexes,
                    onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
                  }, {
                    get: (r) => [
                      c(Hd, {
                        data: r.row,
                        keyLabel: r.column.keyLabel,
                        filter: r.column.filter,
                        filterParameters: r.column.filterParameters,
                        defaultValue: r.column.defaultValue,
                        tag: r.column.filterTag || "div"
                      })
                    ],
                    ...this.$slots
                  });
                })
              }),
              this.isViewTableVisible && !this.hasRows && c(Ae, {
                class: "a_table__empty_text",
                text: this.emptyText
              }),
              this.hasRowsFooter && c("div", {
                class: "a_table__footer",
                role: this.tableChildRole
              }, this.rowsFooter.map((e, t) => {
                const n = iu({ row: e, rowIndex: t, keyId: this.keyId });
                return c(ZE, {
                  key: n,
                  allVisibleMobileColumns: this.allVisibleMobileColumns,
                  areAllRowsSelected: this.areAllRowsSelected,
                  columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
                  columnActionsView: this.columnActionsView,
                  countVisibleMobileColumns: this.countVisibleMobileColumns,
                  disabledPreview: this.disabledPreview,
                  disabledPreviewRowCallback: this.disabledPreviewRowCallback,
                  disabledRowActions: this.disabledRowActions,
                  isFooter: !0,
                  isRowActionsStickyLocal: this.isRowActionsStickyLocal,
                  isTree: this.isTree,
                  isTreeCollapsible: this.isTreeCollapsible,
                  isTreeOpened: this.isTreeOpened,
                  keyChildren: this.keyChildren,
                  keyId: this.keyId,
                  level: 1,
                  row: e,
                  rowActionsClass: this.rowActionsClass,
                  rowClass: this.rowClass,
                  rowIndex: t,
                  rowsLength: this.rowsFooter.length,
                  selectedRowsIndexes: this.selectedRowsIndexes,
                  onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
                }, {
                  get: (r) => [
                    c(Hd, {
                      data: r.row,
                      keyLabel: r.column.footerPath,
                      filter: r.column.footerFilter,
                      filterParameters: r.column.footerFilterParameters,
                      defaultValue: r.column.footerDefaultValue
                    })
                  ],
                  ...this.$slots
                });
              }))
            ])
          ])
        ]),
        !this.isViewTableVisible && this.viewCurrent && this.$slots[this.viewCurrent.type] && this.$slots[this.viewCurrent.type]({
          isLoading: this.isLoadingTable,
          rows: this.rowsLocalAll
        }),
        this.usePaginationLocal && c(qk, {
          countAllRows: this.countAllRowsLocal,
          disabled: this.pagination.disabled,
          hasRows: this.hasRows,
          limit: this.limit,
          limitsPerPage: this.pagination.limitsPerPage,
          maxPages: this.pagination.maxPages,
          offset: this.offset,
          rowsLength: this.rowsLocalLength,
          totalRowsCount: this.totalRowsCount,
          "onUpdate:limit": this.changeLimit,
          "onUpdate:offset": this.changeOffset
        }),
        this.isPreviewRightOpen && c(HU, {
          countAllRows: this.countAllRowsLocal,
          isMobile: this.isMobile,
          isLoadingTable: this.isLoadingTable,
          limitPagination: this.limit,
          offsetPagination: this.offset,
          previewStyles: this.previewStyles,
          rowIndex: this.previewRightRowIndex,
          rows: this.rowsLocalAll,
          disabledPreviewRowCallback: this.disabledPreviewRowCallback,
          usePagination: !!this.usePaginationLocal,
          onClosePreview: this.closePreview,
          onMousedownResizePreviewRight: this.mousedownResizePreviewRight,
          onMousemoveResizePreviewRight: this.mousemoveResizePreviewRight,
          onMouseupResizePreviewRight: this.mouseupResizePreviewRight,
          onTogglePreview: this.onTogglePreview,
          onTogglePreviewResize: this.togglePreviewResize,
          "onUpdate:offset": this.changeOffset
        }, this.$slots)
      ])
    ]);
  }
};
function Hm(e) {
  const t = d(e, "activeTabIdLocal"), n = d(e, "index"), r = d(e, "keyId"), s = d(e, "parentId"), i = d(e, "tab"), o = _(() => r.value ? fe(i.value, r.value) : n.value), u = _(() => t.value === o.value), h = _(() => `${s.value}_${n.value}`);
  return {
    idForContent: _(() => `${h.value}_content`),
    idLocal: h,
    isActive: u,
    tabIdLocal: o
  };
}
function qH(e) {
  const t = d(e, "tab"), n = d(e, "keyContent");
  return {
    contentLocal: _(() => {
      if (n.value)
        return fe(t.value, n.value);
    })
  };
}
const $H = {
  name: "ATabsContent",
  props: {
    activeTabIdLocal: {
      type: [String, Number],
      required: !0
    },
    index: {
      type: Number,
      required: !0
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    parentId: {
      type: String,
      required: !0
    },
    tab: {
      type: Object,
      required: !0
    }
  },
  setup(e) {
    const {
      idForContent: t,
      idLocal: n,
      isActive: r,
      tabIdLocal: s
    } = Hm(e), {
      contentLocal: i
    } = qH(e);
    return {
      contentLocal: i,
      idForContent: t,
      idLocal: n,
      isActive: r,
      tabIdLocal: s
    };
  },
  render() {
    let e = "";
    return this.tab.slotContent && this.$slots[this.tab.slotContent] ? e = this.$slots[this.tab.slotContent]({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.$slots.content ? e = this.$slots.content({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.contentLocal && (e = c(Ae, {
      html: this.contentLocal
    })), c("div", {
      id: this.idForContent,
      "aria-labelledby": this.idLocal,
      class: [
        "a_tabs__content",
        {
          a_tabs__content_show: this.isActive
        }
      ],
      role: "tabpanel"
    }, [
      e
    ]);
  }
};
function kH({
  isDisabled: e = _(() => !1)
}) {
  return {
    tabindexLocal: _(() => e.value ? -1 : 0)
  };
}
function UH(e, { emit: t }, {
  isDisabled: n = _(() => !1),
  tabIdLocal: r = _(() => "")
}) {
  const s = d(e, "index"), i = d(e, "tab"), o = (h) => {
    n.value || t("changeTab", { $event: h, tab: i.value, tabId: r.value, index: s.value });
  };
  return {
    changeTabLocal: o,
    keydownTab: (h) => {
      (h.keyCode === X.enter || h.keyCode === X.space) && (o(h), h.stopPropagation(), h.preventDefault());
    }
  };
}
function HH(e) {
  const t = d(e, "disabled"), n = d(e, "keyDisabled"), r = d(e, "tab");
  return {
    isDisabled: _(() => {
      if (t.value || n.value && fe(r.value, n.value) === !0)
        return !0;
    })
  };
}
function VH(e) {
  const t = d(e, "tab"), n = d(e, "keyLabel");
  return {
    labelLocal: _(() => {
      if (n.value)
        return fe(t.value, n.value);
    })
  };
}
function WH(e) {
  const t = d(e, "tab"), n = d(e, "keyTitle");
  return {
    titleLocal: _(() => {
      if (n.value)
        return fe(t.value, n.value);
    })
  };
}
const GH = {
  name: "ATabsTab",
  props: {
    activeTabIdLocal: {
      type: [String, Number],
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    index: {
      type: Number,
      required: !0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyTitle: {
      type: String,
      required: !1,
      default: "title"
    },
    parentId: {
      type: String,
      required: !0
    },
    tab: {
      type: Object,
      required: !0
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Rr.indexOf(e) !== -1
    }
  },
  emits: [
    "changeTab"
  ],
  setup(e, t) {
    const {
      idForContent: n,
      idLocal: r,
      isActive: s,
      tabIdLocal: i
    } = Hm(e), {
      isDisabled: o
    } = HH(e), {
      tabindexLocal: u
    } = kH({
      isDisabled: o
    }), {
      changeTabLocal: h,
      keydownTab: A
    } = UH(e, t, {
      isDisabled: o,
      tabIdLocal: i
    }), {
      labelLocal: E
    } = VH(e), {
      titleLocal: p
    } = WH(e);
    return {
      changeTabLocal: h,
      idForContent: n,
      idLocal: r,
      isActive: s,
      isDisabled: o,
      keydownTab: A,
      labelLocal: E,
      tabindexLocal: u,
      tabIdLocal: i,
      titleLocal: p
    };
  },
  render() {
    let e = "";
    return this.tab.slotTab && this.$slots[this.tab.slotTab] ? e = this.$slots[this.tab.slotTab]({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.$slots.tab ? e = this.$slots.tab({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.labelLocal && (e = c(Ae, {
      html: this.labelLocal,
      tag: "span"
    })), c("li", {
      class: [
        "a_tabs__list__item",
        this.tab.classLi
      ]
    }, [
      c(be, {
        id: this.idLocal,
        "aria-controls": this.idForContent,
        ariaDisabled: this.isDisabled,
        ariaSelected: this.isActive,
        class: [
          "a_tabs__list__link",
          this.tab.class,
          {
            a_tabs__list__link_active: this.isActive,
            a_tabs__list__link_disabled: this.isDisabled
          }
        ],
        classDefault: "",
        isTitleHtml: this.isTitleHtml,
        role: "tab",
        tabindex: this.tabindexLocal,
        tag: "a",
        titlePlacement: this.titlePlacement,
        type: "button",
        title: this.titleLocal,
        onClick: this.changeTabLocal,
        onKeydown: this.keydownTab
      }, () => [
        e
      ])
    ]);
  }
};
function KH(e, { emit: t }) {
  const n = d(e, "activeTabId"), r = d(e, "data"), s = d(e, "isChangeOutside"), i = d(e, "keyActive"), o = d(e, "keyId"), u = B(void 0), h = () => {
    ae(n.value) || (u.value = n.value);
  };
  return {
    activeTabIdLocal: u,
    changeTab: ({ $event: p, tab: T, tabId: S, index: b }) => {
      u.value !== S && (s.value || (u.value = S), t("change", { $event: p, tab: T, tabId: S, index: b }));
    },
    initActiveTabIdLocal: () => {
      h(), ae(u.value) && (i.value && (z(r.value, (p, T) => {
        if (fe(p, i.value))
          return o.value ? u.value = fe(p, o.value) || T : u.value = T, !1;
      }), !ae(u.value)) || (o.value ? u.value = fe(r.value, `[0].${o.value}`) || 0 : u.value = 0));
    },
    setActiveTabIdLocal: h
  };
}
const Fde = {
  name: "ATabs",
  props: {
    activeTabId: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => lt("a_tabs_")
    },
    isBoxed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isChangeOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isVertical: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyActive: {
      type: String,
      required: !1,
      default: "active"
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyTitle: {
      type: String,
      required: !1,
      default: "title"
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Rr.indexOf(e) !== -1
    }
  },
  emits: [
    "change"
  ],
  setup(e, t) {
    const n = d(e, "activeTabId"), {
      activeTabIdLocal: r,
      changeTab: s,
      initActiveTabIdLocal: i,
      setActiveTabIdLocal: o
    } = KH(e, t);
    return i(), rt(n, () => {
      o();
    }), {
      activeTabIdLocal: r,
      changeTab: s
    };
  },
  render() {
    return c("div", {
      id: this.id,
      class: ["a_tabs", {
        a_tabs_boxed: this.isBoxed,
        a_tabs_vertical: this.isVertical
      }]
    }, [
      c("div", {
        class: "a_tabs__box"
      }, [
        c("ul", {
          class: "a_tabs__list",
          role: "tablist"
        }, [
          this.data.map((e, t) => c(GH, {
            key: t,
            activeTabIdLocal: this.activeTabIdLocal,
            disabled: this.disabled,
            index: t,
            isTitleHtml: this.isTitleHtml,
            keyDisabled: this.keyDisabled,
            keyId: this.keyId,
            keyLabel: this.keyLabel,
            keyTitle: this.keyTitle,
            parentId: this.id,
            tab: e,
            titlePlacement: this.titlePlacement,
            onChangeTab: this.changeTab
          }, this.$slots))
        ])
      ]),
      c("div", {
        class: "a_tabs__contents"
      }, [
        this.data.map((e, t) => c($H, {
          key: t,
          activeTabIdLocal: this.activeTabIdLocal,
          index: t,
          keyContent: this.keyContent,
          keyId: this.keyId,
          parentId: this.id,
          tab: e
        }, this.$slots))
      ])
    ]);
  }
};
function Vm(e, t) {
  return function() {
    return e.apply(t, arguments);
  };
}
const { toString: jH } = Object.prototype, { getPrototypeOf: ef } = Object, Pu = /* @__PURE__ */ ((e) => (t) => {
  const n = jH.call(t);
  return e[n] || (e[n] = n.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null)), Or = (e) => (e = e.toLowerCase(), (t) => Pu(t) === e), xu = (e) => (t) => typeof t === e, { isArray: Li } = Array, El = xu("undefined");
function zH(e) {
  return e !== null && !El(e) && e.constructor !== null && !El(e.constructor) && kn(e.constructor.isBuffer) && e.constructor.isBuffer(e);
}
const Wm = Or("ArrayBuffer");
function YH(e) {
  let t;
  return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? t = ArrayBuffer.isView(e) : t = e && e.buffer && Wm(e.buffer), t;
}
const XH = xu("string"), kn = xu("function"), Gm = xu("number"), Fu = (e) => e !== null && typeof e == "object", ZH = (e) => e === !0 || e === !1, Uo = (e) => {
  if (Pu(e) !== "object")
    return !1;
  const t = ef(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}, JH = Or("Date"), QH = Or("File"), eV = Or("Blob"), tV = Or("FileList"), nV = (e) => Fu(e) && kn(e.pipe), rV = (e) => {
  let t;
  return e && (typeof FormData == "function" && e instanceof FormData || kn(e.append) && ((t = Pu(e)) === "formdata" || // detect form-data instance
  t === "object" && kn(e.toString) && e.toString() === "[object FormData]"));
}, aV = Or("URLSearchParams"), [sV, iV, lV, oV] = ["ReadableStream", "Request", "Response", "Headers"].map(Or), uV = (e) => e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function Dl(e, t, { allOwnKeys: n = !1 } = {}) {
  if (e === null || typeof e > "u")
    return;
  let r, s;
  if (typeof e != "object" && (e = [e]), Li(e))
    for (r = 0, s = e.length; r < s; r++)
      t.call(null, e[r], r, e);
  else {
    const i = n ? Object.getOwnPropertyNames(e) : Object.keys(e), o = i.length;
    let u;
    for (r = 0; r < o; r++)
      u = i[r], t.call(null, e[u], u, e);
  }
}
function Km(e, t) {
  t = t.toLowerCase();
  const n = Object.keys(e);
  let r = n.length, s;
  for (; r-- > 0; )
    if (s = n[r], t === s.toLowerCase())
      return s;
  return null;
}
const gs = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : global, jm = (e) => !El(e) && e !== gs;
function zd() {
  const { caseless: e } = jm(this) && this || {}, t = {}, n = (r, s) => {
    const i = e && Km(t, s) || s;
    Uo(t[i]) && Uo(r) ? t[i] = zd(t[i], r) : Uo(r) ? t[i] = zd({}, r) : Li(r) ? t[i] = r.slice() : t[i] = r;
  };
  for (let r = 0, s = arguments.length; r < s; r++)
    arguments[r] && Dl(arguments[r], n);
  return t;
}
const _V = (e, t, n, { allOwnKeys: r } = {}) => (Dl(t, (s, i) => {
  n && kn(s) ? e[i] = Vm(s, n) : e[i] = s;
}, { allOwnKeys: r }), e), dV = (e) => (e.charCodeAt(0) === 65279 && (e = e.slice(1)), e), cV = (e, t, n, r) => {
  e.prototype = Object.create(t.prototype, r), e.prototype.constructor = e, Object.defineProperty(e, "super", {
    value: t.prototype
  }), n && Object.assign(e.prototype, n);
}, fV = (e, t, n, r) => {
  let s, i, o;
  const u = {};
  if (t = t || {}, e == null) return t;
  do {
    for (s = Object.getOwnPropertyNames(e), i = s.length; i-- > 0; )
      o = s[i], (!r || r(o, e, t)) && !u[o] && (t[o] = e[o], u[o] = !0);
    e = n !== !1 && ef(e);
  } while (e && (!n || n(e, t)) && e !== Object.prototype);
  return t;
}, hV = (e, t, n) => {
  e = String(e), (n === void 0 || n > e.length) && (n = e.length), n -= t.length;
  const r = e.indexOf(t, n);
  return r !== -1 && r === n;
}, AV = (e) => {
  if (!e) return null;
  if (Li(e)) return e;
  let t = e.length;
  if (!Gm(t)) return null;
  const n = new Array(t);
  for (; t-- > 0; )
    n[t] = e[t];
  return n;
}, EV = /* @__PURE__ */ ((e) => (t) => e && t instanceof e)(typeof Uint8Array < "u" && ef(Uint8Array)), pV = (e, t) => {
  const r = (e && e[Symbol.iterator]).call(e);
  let s;
  for (; (s = r.next()) && !s.done; ) {
    const i = s.value;
    t.call(e, i[0], i[1]);
  }
}, TV = (e, t) => {
  let n;
  const r = [];
  for (; (n = e.exec(t)) !== null; )
    r.push(n);
  return r;
}, mV = Or("HTMLFormElement"), SV = (e) => e.toLowerCase().replace(
  /[-_\s]([a-z\d])(\w*)/g,
  function(n, r, s) {
    return r.toUpperCase() + s;
  }
), JE = (({ hasOwnProperty: e }) => (t, n) => e.call(t, n))(Object.prototype), bV = Or("RegExp"), zm = (e, t) => {
  const n = Object.getOwnPropertyDescriptors(e), r = {};
  Dl(n, (s, i) => {
    let o;
    (o = t(s, i, e)) !== !1 && (r[i] = o || s);
  }), Object.defineProperties(e, r);
}, LV = (e) => {
  zm(e, (t, n) => {
    if (kn(e) && ["arguments", "caller", "callee"].indexOf(n) !== -1)
      return !1;
    const r = e[n];
    if (kn(r)) {
      if (t.enumerable = !1, "writable" in t) {
        t.writable = !1;
        return;
      }
      t.set || (t.set = () => {
        throw Error("Can not rewrite read-only method '" + n + "'");
      });
    }
  });
}, vV = (e, t) => {
  const n = {}, r = (s) => {
    s.forEach((i) => {
      n[i] = !0;
    });
  };
  return Li(e) ? r(e) : r(String(e).split(t)), n;
}, IV = () => {
}, yV = (e, t) => e != null && Number.isFinite(e = +e) ? e : t, Ed = "abcdefghijklmnopqrstuvwxyz", QE = "0123456789", Ym = {
  DIGIT: QE,
  ALPHA: Ed,
  ALPHA_DIGIT: Ed + Ed.toUpperCase() + QE
}, gV = (e = 16, t = Ym.ALPHA_DIGIT) => {
  let n = "";
  const { length: r } = t;
  for (; e--; )
    n += t[Math.random() * r | 0];
  return n;
};
function RV(e) {
  return !!(e && kn(e.append) && e[Symbol.toStringTag] === "FormData" && e[Symbol.iterator]);
}
const OV = (e) => {
  const t = new Array(10), n = (r, s) => {
    if (Fu(r)) {
      if (t.indexOf(r) >= 0)
        return;
      if (!("toJSON" in r)) {
        t[s] = r;
        const i = Li(r) ? [] : {};
        return Dl(r, (o, u) => {
          const h = n(o, s + 1);
          !El(h) && (i[u] = h);
        }), t[s] = void 0, i;
      }
    }
    return r;
  };
  return n(e, 0);
}, CV = Or("AsyncFunction"), NV = (e) => e && (Fu(e) || kn(e)) && kn(e.then) && kn(e.catch), Xm = ((e, t) => e ? setImmediate : t ? ((n, r) => (gs.addEventListener("message", ({ source: s, data: i }) => {
  s === gs && i === n && r.length && r.shift()();
}, !1), (s) => {
  r.push(s), gs.postMessage(n, "*");
}))(`axios@${Math.random()}`, []) : (n) => setTimeout(n))(
  typeof setImmediate == "function",
  kn(gs.postMessage)
), DV = typeof queueMicrotask < "u" ? queueMicrotask.bind(gs) : typeof process < "u" && process.nextTick || Xm, K = {
  isArray: Li,
  isArrayBuffer: Wm,
  isBuffer: zH,
  isFormData: rV,
  isArrayBufferView: YH,
  isString: XH,
  isNumber: Gm,
  isBoolean: ZH,
  isObject: Fu,
  isPlainObject: Uo,
  isReadableStream: sV,
  isRequest: iV,
  isResponse: lV,
  isHeaders: oV,
  isUndefined: El,
  isDate: JH,
  isFile: QH,
  isBlob: eV,
  isRegExp: bV,
  isFunction: kn,
  isStream: nV,
  isURLSearchParams: aV,
  isTypedArray: EV,
  isFileList: tV,
  forEach: Dl,
  merge: zd,
  extend: _V,
  trim: uV,
  stripBOM: dV,
  inherits: cV,
  toFlatObject: fV,
  kindOf: Pu,
  kindOfTest: Or,
  endsWith: hV,
  toArray: AV,
  forEachEntry: pV,
  matchAll: TV,
  isHTMLForm: mV,
  hasOwnProperty: JE,
  hasOwnProp: JE,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors: zm,
  freezeMethods: LV,
  toObjectSet: vV,
  toCamelCase: SV,
  noop: IV,
  toFiniteNumber: yV,
  findKey: Km,
  global: gs,
  isContextDefined: jm,
  ALPHABET: Ym,
  generateString: gV,
  isSpecCompliantForm: RV,
  toJSONObject: OV,
  isAsyncFn: CV,
  isThenable: NV,
  setImmediate: Xm,
  asap: DV
};
function Ue(e, t, n, r, s) {
  Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = e, this.name = "AxiosError", t && (this.code = t), n && (this.config = n), r && (this.request = r), s && (this.response = s, this.status = s.status ? s.status : null);
}
K.inherits(Ue, Error, {
  toJSON: function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: K.toJSONObject(this.config),
      code: this.code,
      status: this.status
    };
  }
});
const Zm = Ue.prototype, Jm = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
].forEach((e) => {
  Jm[e] = { value: e };
});
Object.defineProperties(Ue, Jm);
Object.defineProperty(Zm, "isAxiosError", { value: !0 });
Ue.from = (e, t, n, r, s, i) => {
  const o = Object.create(Zm);
  return K.toFlatObject(e, o, function(h) {
    return h !== Error.prototype;
  }, (u) => u !== "isAxiosError"), Ue.call(o, e.message, t, n, r, s), o.cause = e, o.name = e.name, i && Object.assign(o, i), o;
};
const BV = null;
function Yd(e) {
  return K.isPlainObject(e) || K.isArray(e);
}
function Qm(e) {
  return K.endsWith(e, "[]") ? e.slice(0, -2) : e;
}
function ep(e, t, n) {
  return e ? e.concat(t).map(function(s, i) {
    return s = Qm(s), !n && i ? "[" + s + "]" : s;
  }).join(n ? "." : "") : t;
}
function wV(e) {
  return K.isArray(e) && !e.some(Yd);
}
const PV = K.toFlatObject(K, {}, null, function(t) {
  return /^is[A-Z]/.test(t);
});
function Mu(e, t, n) {
  if (!K.isObject(e))
    throw new TypeError("target must be an object");
  t = t || new FormData(), n = K.toFlatObject(n, {
    metaTokens: !0,
    dots: !1,
    indexes: !1
  }, !1, function(L, v) {
    return !K.isUndefined(v[L]);
  });
  const r = n.metaTokens, s = n.visitor || E, i = n.dots, o = n.indexes, h = (n.Blob || typeof Blob < "u" && Blob) && K.isSpecCompliantForm(t);
  if (!K.isFunction(s))
    throw new TypeError("visitor must be a function");
  function A(b) {
    if (b === null) return "";
    if (K.isDate(b))
      return b.toISOString();
    if (!h && K.isBlob(b))
      throw new Ue("Blob is not supported. Use a Buffer instead.");
    return K.isArrayBuffer(b) || K.isTypedArray(b) ? h && typeof Blob == "function" ? new Blob([b]) : Buffer.from(b) : b;
  }
  function E(b, L, v) {
    let I = b;
    if (b && !v && typeof b == "object") {
      if (K.endsWith(L, "{}"))
        L = r ? L : L.slice(0, -2), b = JSON.stringify(b);
      else if (K.isArray(b) && wV(b) || (K.isFileList(b) || K.endsWith(L, "[]")) && (I = K.toArray(b)))
        return L = Qm(L), I.forEach(function(g, D) {
          !(K.isUndefined(g) || g === null) && t.append(
            // eslint-disable-next-line no-nested-ternary
            o === !0 ? ep([L], D, i) : o === null ? L : L + "[]",
            A(g)
          );
        }), !1;
    }
    return Yd(b) ? !0 : (t.append(ep(v, L, i), A(b)), !1);
  }
  const p = [], T = Object.assign(PV, {
    defaultVisitor: E,
    convertValue: A,
    isVisitable: Yd
  });
  function S(b, L) {
    if (!K.isUndefined(b)) {
      if (p.indexOf(b) !== -1)
        throw Error("Circular reference detected in " + L.join("."));
      p.push(b), K.forEach(b, function(I, R) {
        (!(K.isUndefined(I) || I === null) && s.call(
          t,
          I,
          K.isString(R) ? R.trim() : R,
          L,
          T
        )) === !0 && S(I, L ? L.concat(R) : [R]);
      }), p.pop();
    }
  }
  if (!K.isObject(e))
    throw new TypeError("data must be an object");
  return S(e), t;
}
function tp(e) {
  const t = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0"
  };
  return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function(r) {
    return t[r];
  });
}
function tf(e, t) {
  this._pairs = [], e && Mu(e, this, t);
}
const eS = tf.prototype;
eS.append = function(t, n) {
  this._pairs.push([t, n]);
};
eS.toString = function(t) {
  const n = t ? function(r) {
    return t.call(this, r, tp);
  } : tp;
  return this._pairs.map(function(s) {
    return n(s[0]) + "=" + n(s[1]);
  }, "").join("&");
};
function xV(e) {
  return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
function tS(e, t, n) {
  if (!t)
    return e;
  const r = n && n.encode || xV;
  K.isFunction(n) && (n = {
    serialize: n
  });
  const s = n && n.serialize;
  let i;
  if (s ? i = s(t, n) : i = K.isURLSearchParams(t) ? t.toString() : new tf(t, n).toString(r), i) {
    const o = e.indexOf("#");
    o !== -1 && (e = e.slice(0, o)), e += (e.indexOf("?") === -1 ? "?" : "&") + i;
  }
  return e;
}
class np {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(t, n, r) {
    return this.handlers.push({
      fulfilled: t,
      rejected: n,
      synchronous: r ? r.synchronous : !1,
      runWhen: r ? r.runWhen : null
    }), this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(t) {
    this.handlers[t] && (this.handlers[t] = null);
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    this.handlers && (this.handlers = []);
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(t) {
    K.forEach(this.handlers, function(r) {
      r !== null && t(r);
    });
  }
}
const nS = {
  silentJSONParsing: !0,
  forcedJSONParsing: !0,
  clarifyTimeoutError: !1
}, FV = typeof URLSearchParams < "u" ? URLSearchParams : tf, MV = typeof FormData < "u" ? FormData : null, qV = typeof Blob < "u" ? Blob : null, $V = {
  isBrowser: !0,
  classes: {
    URLSearchParams: FV,
    FormData: MV,
    Blob: qV
  },
  protocols: ["http", "https", "file", "blob", "url", "data"]
}, nf = typeof window < "u" && typeof document < "u", Xd = typeof navigator == "object" && navigator || void 0, kV = nf && (!Xd || ["ReactNative", "NativeScript", "NS"].indexOf(Xd.product) < 0), UV = typeof WorkerGlobalScope < "u" && // eslint-disable-next-line no-undef
self instanceof WorkerGlobalScope && typeof self.importScripts == "function", HV = nf && window.location.href || "http://localhost", VV = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hasBrowserEnv: nf,
  hasStandardBrowserEnv: kV,
  hasStandardBrowserWebWorkerEnv: UV,
  navigator: Xd,
  origin: HV
}, Symbol.toStringTag, { value: "Module" })), sn = {
  ...VV,
  ...$V
};
function WV(e, t) {
  return Mu(e, new sn.classes.URLSearchParams(), Object.assign({
    visitor: function(n, r, s, i) {
      return sn.isNode && K.isBuffer(n) ? (this.append(r, n.toString("base64")), !1) : i.defaultVisitor.apply(this, arguments);
    }
  }, t));
}
function GV(e) {
  return K.matchAll(/\w+|\[(\w*)]/g, e).map((t) => t[0] === "[]" ? "" : t[1] || t[0]);
}
function KV(e) {
  const t = {}, n = Object.keys(e);
  let r;
  const s = n.length;
  let i;
  for (r = 0; r < s; r++)
    i = n[r], t[i] = e[i];
  return t;
}
function rS(e) {
  function t(n, r, s, i) {
    let o = n[i++];
    if (o === "__proto__") return !0;
    const u = Number.isFinite(+o), h = i >= n.length;
    return o = !o && K.isArray(s) ? s.length : o, h ? (K.hasOwnProp(s, o) ? s[o] = [s[o], r] : s[o] = r, !u) : ((!s[o] || !K.isObject(s[o])) && (s[o] = []), t(n, r, s[o], i) && K.isArray(s[o]) && (s[o] = KV(s[o])), !u);
  }
  if (K.isFormData(e) && K.isFunction(e.entries)) {
    const n = {};
    return K.forEachEntry(e, (r, s) => {
      t(GV(r), s, n, 0);
    }), n;
  }
  return null;
}
function jV(e, t, n) {
  if (K.isString(e))
    try {
      return (t || JSON.parse)(e), K.trim(e);
    } catch (r) {
      if (r.name !== "SyntaxError")
        throw r;
    }
  return (n || JSON.stringify)(e);
}
const Bl = {
  transitional: nS,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [function(t, n) {
    const r = n.getContentType() || "", s = r.indexOf("application/json") > -1, i = K.isObject(t);
    if (i && K.isHTMLForm(t) && (t = new FormData(t)), K.isFormData(t))
      return s ? JSON.stringify(rS(t)) : t;
    if (K.isArrayBuffer(t) || K.isBuffer(t) || K.isStream(t) || K.isFile(t) || K.isBlob(t) || K.isReadableStream(t))
      return t;
    if (K.isArrayBufferView(t))
      return t.buffer;
    if (K.isURLSearchParams(t))
      return n.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1), t.toString();
    let u;
    if (i) {
      if (r.indexOf("application/x-www-form-urlencoded") > -1)
        return WV(t, this.formSerializer).toString();
      if ((u = K.isFileList(t)) || r.indexOf("multipart/form-data") > -1) {
        const h = this.env && this.env.FormData;
        return Mu(
          u ? { "files[]": t } : t,
          h && new h(),
          this.formSerializer
        );
      }
    }
    return i || s ? (n.setContentType("application/json", !1), jV(t)) : t;
  }],
  transformResponse: [function(t) {
    const n = this.transitional || Bl.transitional, r = n && n.forcedJSONParsing, s = this.responseType === "json";
    if (K.isResponse(t) || K.isReadableStream(t))
      return t;
    if (t && K.isString(t) && (r && !this.responseType || s)) {
      const o = !(n && n.silentJSONParsing) && s;
      try {
        return JSON.parse(t);
      } catch (u) {
        if (o)
          throw u.name === "SyntaxError" ? Ue.from(u, Ue.ERR_BAD_RESPONSE, this, null, this.response) : u;
      }
    }
    return t;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: sn.classes.FormData,
    Blob: sn.classes.Blob
  },
  validateStatus: function(t) {
    return t >= 200 && t < 300;
  },
  headers: {
    common: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": void 0
    }
  }
};
K.forEach(["delete", "get", "head", "post", "put", "patch"], (e) => {
  Bl.headers[e] = {};
});
const zV = K.toObjectSet([
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
]), YV = (e) => {
  const t = {};
  let n, r, s;
  return e && e.split(`
`).forEach(function(o) {
    s = o.indexOf(":"), n = o.substring(0, s).trim().toLowerCase(), r = o.substring(s + 1).trim(), !(!n || t[n] && zV[n]) && (n === "set-cookie" ? t[n] ? t[n].push(r) : t[n] = [r] : t[n] = t[n] ? t[n] + ", " + r : r);
  }), t;
}, rp = Symbol("internals");
function Zi(e) {
  return e && String(e).trim().toLowerCase();
}
function Ho(e) {
  return e === !1 || e == null ? e : K.isArray(e) ? e.map(Ho) : String(e);
}
function XV(e) {
  const t = /* @__PURE__ */ Object.create(null), n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let r;
  for (; r = n.exec(e); )
    t[r[1]] = r[2];
  return t;
}
const ZV = (e) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());
function pd(e, t, n, r, s) {
  if (K.isFunction(r))
    return r.call(this, t, n);
  if (s && (t = n), !!K.isString(t)) {
    if (K.isString(r))
      return t.indexOf(r) !== -1;
    if (K.isRegExp(r))
      return r.test(t);
  }
}
function JV(e) {
  return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (t, n, r) => n.toUpperCase() + r);
}
function QV(e, t) {
  const n = K.toCamelCase(" " + t);
  ["get", "set", "has"].forEach((r) => {
    Object.defineProperty(e, r + n, {
      value: function(s, i, o) {
        return this[r].call(this, t, s, i, o);
      },
      configurable: !0
    });
  });
}
let In = class {
  constructor(t) {
    t && this.set(t);
  }
  set(t, n, r) {
    const s = this;
    function i(u, h, A) {
      const E = Zi(h);
      if (!E)
        throw new Error("header name must be a non-empty string");
      const p = K.findKey(s, E);
      (!p || s[p] === void 0 || A === !0 || A === void 0 && s[p] !== !1) && (s[p || h] = Ho(u));
    }
    const o = (u, h) => K.forEach(u, (A, E) => i(A, E, h));
    if (K.isPlainObject(t) || t instanceof this.constructor)
      o(t, n);
    else if (K.isString(t) && (t = t.trim()) && !ZV(t))
      o(YV(t), n);
    else if (K.isHeaders(t))
      for (const [u, h] of t.entries())
        i(h, u, r);
    else
      t != null && i(n, t, r);
    return this;
  }
  get(t, n) {
    if (t = Zi(t), t) {
      const r = K.findKey(this, t);
      if (r) {
        const s = this[r];
        if (!n)
          return s;
        if (n === !0)
          return XV(s);
        if (K.isFunction(n))
          return n.call(this, s, r);
        if (K.isRegExp(n))
          return n.exec(s);
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(t, n) {
    if (t = Zi(t), t) {
      const r = K.findKey(this, t);
      return !!(r && this[r] !== void 0 && (!n || pd(this, this[r], r, n)));
    }
    return !1;
  }
  delete(t, n) {
    const r = this;
    let s = !1;
    function i(o) {
      if (o = Zi(o), o) {
        const u = K.findKey(r, o);
        u && (!n || pd(r, r[u], u, n)) && (delete r[u], s = !0);
      }
    }
    return K.isArray(t) ? t.forEach(i) : i(t), s;
  }
  clear(t) {
    const n = Object.keys(this);
    let r = n.length, s = !1;
    for (; r--; ) {
      const i = n[r];
      (!t || pd(this, this[i], i, t, !0)) && (delete this[i], s = !0);
    }
    return s;
  }
  normalize(t) {
    const n = this, r = {};
    return K.forEach(this, (s, i) => {
      const o = K.findKey(r, i);
      if (o) {
        n[o] = Ho(s), delete n[i];
        return;
      }
      const u = t ? JV(i) : String(i).trim();
      u !== i && delete n[i], n[u] = Ho(s), r[u] = !0;
    }), this;
  }
  concat(...t) {
    return this.constructor.concat(this, ...t);
  }
  toJSON(t) {
    const n = /* @__PURE__ */ Object.create(null);
    return K.forEach(this, (r, s) => {
      r != null && r !== !1 && (n[s] = t && K.isArray(r) ? r.join(", ") : r);
    }), n;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([t, n]) => t + ": " + n).join(`
`);
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(t) {
    return t instanceof this ? t : new this(t);
  }
  static concat(t, ...n) {
    const r = new this(t);
    return n.forEach((s) => r.set(s)), r;
  }
  static accessor(t) {
    const r = (this[rp] = this[rp] = {
      accessors: {}
    }).accessors, s = this.prototype;
    function i(o) {
      const u = Zi(o);
      r[u] || (QV(s, o), r[u] = !0);
    }
    return K.isArray(t) ? t.forEach(i) : i(t), this;
  }
};
In.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
K.reduceDescriptors(In.prototype, ({ value: e }, t) => {
  let n = t[0].toUpperCase() + t.slice(1);
  return {
    get: () => e,
    set(r) {
      this[n] = r;
    }
  };
});
K.freezeMethods(In);
function Td(e, t) {
  const n = this || Bl, r = t || n, s = In.from(r.headers);
  let i = r.data;
  return K.forEach(e, function(u) {
    i = u.call(n, i, s.normalize(), t ? t.status : void 0);
  }), s.normalize(), i;
}
function aS(e) {
  return !!(e && e.__CANCEL__);
}
function vi(e, t, n) {
  Ue.call(this, e ?? "canceled", Ue.ERR_CANCELED, t, n), this.name = "CanceledError";
}
K.inherits(vi, Ue, {
  __CANCEL__: !0
});
function sS(e, t, n) {
  const r = n.config.validateStatus;
  !n.status || !r || r(n.status) ? e(n) : t(new Ue(
    "Request failed with status code " + n.status,
    [Ue.ERR_BAD_REQUEST, Ue.ERR_BAD_RESPONSE][Math.floor(n.status / 100) - 4],
    n.config,
    n.request,
    n
  ));
}
function eW(e) {
  const t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
  return t && t[1] || "";
}
function tW(e, t) {
  e = e || 10;
  const n = new Array(e), r = new Array(e);
  let s = 0, i = 0, o;
  return t = t !== void 0 ? t : 1e3, function(h) {
    const A = Date.now(), E = r[i];
    o || (o = A), n[s] = h, r[s] = A;
    let p = i, T = 0;
    for (; p !== s; )
      T += n[p++], p = p % e;
    if (s = (s + 1) % e, s === i && (i = (i + 1) % e), A - o < t)
      return;
    const S = E && A - E;
    return S ? Math.round(T * 1e3 / S) : void 0;
  };
}
function nW(e, t) {
  let n = 0, r = 1e3 / t, s, i;
  const o = (A, E = Date.now()) => {
    n = E, s = null, i && (clearTimeout(i), i = null), e.apply(null, A);
  };
  return [(...A) => {
    const E = Date.now(), p = E - n;
    p >= r ? o(A, E) : (s = A, i || (i = setTimeout(() => {
      i = null, o(s);
    }, r - p)));
  }, () => s && o(s)];
}
const lu = (e, t, n = 3) => {
  let r = 0;
  const s = tW(50, 250);
  return nW((i) => {
    const o = i.loaded, u = i.lengthComputable ? i.total : void 0, h = o - r, A = s(h), E = o <= u;
    r = o;
    const p = {
      loaded: o,
      total: u,
      progress: u ? o / u : void 0,
      bytes: h,
      rate: A || void 0,
      estimated: A && u && E ? (u - o) / A : void 0,
      event: i,
      lengthComputable: u != null,
      [t ? "download" : "upload"]: !0
    };
    e(p);
  }, n);
}, ap = (e, t) => {
  const n = e != null;
  return [(r) => t[0]({
    lengthComputable: n,
    total: e,
    loaded: r
  }), t[1]];
}, sp = (e) => (...t) => K.asap(() => e(...t)), rW = sn.hasStandardBrowserEnv ? /* @__PURE__ */ ((e, t) => (n) => (n = new URL(n, sn.origin), e.protocol === n.protocol && e.host === n.host && (t || e.port === n.port)))(
  new URL(sn.origin),
  sn.navigator && /(msie|trident)/i.test(sn.navigator.userAgent)
) : () => !0, aW = sn.hasStandardBrowserEnv ? (
  // Standard browser envs support document.cookie
  {
    write(e, t, n, r, s, i) {
      const o = [e + "=" + encodeURIComponent(t)];
      K.isNumber(n) && o.push("expires=" + new Date(n).toGMTString()), K.isString(r) && o.push("path=" + r), K.isString(s) && o.push("domain=" + s), i === !0 && o.push("secure"), document.cookie = o.join("; ");
    },
    read(e) {
      const t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
      return t ? decodeURIComponent(t[3]) : null;
    },
    remove(e) {
      this.write(e, "", Date.now() - 864e5);
    }
  }
) : (
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {
    },
    read() {
      return null;
    },
    remove() {
    }
  }
);
function sW(e) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e);
}
function iW(e, t) {
  return t ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "") : e;
}
function iS(e, t) {
  return e && !sW(t) ? iW(e, t) : t;
}
const ip = (e) => e instanceof In ? { ...e } : e;
function ws(e, t) {
  t = t || {};
  const n = {};
  function r(A, E, p, T) {
    return K.isPlainObject(A) && K.isPlainObject(E) ? K.merge.call({ caseless: T }, A, E) : K.isPlainObject(E) ? K.merge({}, E) : K.isArray(E) ? E.slice() : E;
  }
  function s(A, E, p, T) {
    if (K.isUndefined(E)) {
      if (!K.isUndefined(A))
        return r(void 0, A, p, T);
    } else return r(A, E, p, T);
  }
  function i(A, E) {
    if (!K.isUndefined(E))
      return r(void 0, E);
  }
  function o(A, E) {
    if (K.isUndefined(E)) {
      if (!K.isUndefined(A))
        return r(void 0, A);
    } else return r(void 0, E);
  }
  function u(A, E, p) {
    if (p in t)
      return r(A, E);
    if (p in e)
      return r(void 0, A);
  }
  const h = {
    url: i,
    method: i,
    data: i,
    baseURL: o,
    transformRequest: o,
    transformResponse: o,
    paramsSerializer: o,
    timeout: o,
    timeoutMessage: o,
    withCredentials: o,
    withXSRFToken: o,
    adapter: o,
    responseType: o,
    xsrfCookieName: o,
    xsrfHeaderName: o,
    onUploadProgress: o,
    onDownloadProgress: o,
    decompress: o,
    maxContentLength: o,
    maxBodyLength: o,
    beforeRedirect: o,
    transport: o,
    httpAgent: o,
    httpsAgent: o,
    cancelToken: o,
    socketPath: o,
    responseEncoding: o,
    validateStatus: u,
    headers: (A, E, p) => s(ip(A), ip(E), p, !0)
  };
  return K.forEach(Object.keys(Object.assign({}, e, t)), function(E) {
    const p = h[E] || s, T = p(e[E], t[E], E);
    K.isUndefined(T) && p !== u || (n[E] = T);
  }), n;
}
const lS = (e) => {
  const t = ws({}, e);
  let { data: n, withXSRFToken: r, xsrfHeaderName: s, xsrfCookieName: i, headers: o, auth: u } = t;
  t.headers = o = In.from(o), t.url = tS(iS(t.baseURL, t.url), e.params, e.paramsSerializer), u && o.set(
    "Authorization",
    "Basic " + btoa((u.username || "") + ":" + (u.password ? unescape(encodeURIComponent(u.password)) : ""))
  );
  let h;
  if (K.isFormData(n)) {
    if (sn.hasStandardBrowserEnv || sn.hasStandardBrowserWebWorkerEnv)
      o.setContentType(void 0);
    else if ((h = o.getContentType()) !== !1) {
      const [A, ...E] = h ? h.split(";").map((p) => p.trim()).filter(Boolean) : [];
      o.setContentType([A || "multipart/form-data", ...E].join("; "));
    }
  }
  if (sn.hasStandardBrowserEnv && (r && K.isFunction(r) && (r = r(t)), r || r !== !1 && rW(t.url))) {
    const A = s && i && aW.read(i);
    A && o.set(s, A);
  }
  return t;
}, lW = typeof XMLHttpRequest < "u", oW = lW && function(e) {
  return new Promise(function(n, r) {
    const s = lS(e);
    let i = s.data;
    const o = In.from(s.headers).normalize();
    let { responseType: u, onUploadProgress: h, onDownloadProgress: A } = s, E, p, T, S, b;
    function L() {
      S && S(), b && b(), s.cancelToken && s.cancelToken.unsubscribe(E), s.signal && s.signal.removeEventListener("abort", E);
    }
    let v = new XMLHttpRequest();
    v.open(s.method.toUpperCase(), s.url, !0), v.timeout = s.timeout;
    function I() {
      if (!v)
        return;
      const g = In.from(
        "getAllResponseHeaders" in v && v.getAllResponseHeaders()
      ), w = {
        data: !u || u === "text" || u === "json" ? v.responseText : v.response,
        status: v.status,
        statusText: v.statusText,
        headers: g,
        config: e,
        request: v
      };
      sS(function(P) {
        n(P), L();
      }, function(P) {
        r(P), L();
      }, w), v = null;
    }
    "onloadend" in v ? v.onloadend = I : v.onreadystatechange = function() {
      !v || v.readyState !== 4 || v.status === 0 && !(v.responseURL && v.responseURL.indexOf("file:") === 0) || setTimeout(I);
    }, v.onabort = function() {
      v && (r(new Ue("Request aborted", Ue.ECONNABORTED, e, v)), v = null);
    }, v.onerror = function() {
      r(new Ue("Network Error", Ue.ERR_NETWORK, e, v)), v = null;
    }, v.ontimeout = function() {
      let D = s.timeout ? "timeout of " + s.timeout + "ms exceeded" : "timeout exceeded";
      const w = s.transitional || nS;
      s.timeoutErrorMessage && (D = s.timeoutErrorMessage), r(new Ue(
        D,
        w.clarifyTimeoutError ? Ue.ETIMEDOUT : Ue.ECONNABORTED,
        e,
        v
      )), v = null;
    }, i === void 0 && o.setContentType(null), "setRequestHeader" in v && K.forEach(o.toJSON(), function(D, w) {
      v.setRequestHeader(w, D);
    }), K.isUndefined(s.withCredentials) || (v.withCredentials = !!s.withCredentials), u && u !== "json" && (v.responseType = s.responseType), A && ([T, b] = lu(A, !0), v.addEventListener("progress", T)), h && v.upload && ([p, S] = lu(h), v.upload.addEventListener("progress", p), v.upload.addEventListener("loadend", S)), (s.cancelToken || s.signal) && (E = (g) => {
      v && (r(!g || g.type ? new vi(null, e, v) : g), v.abort(), v = null);
    }, s.cancelToken && s.cancelToken.subscribe(E), s.signal && (s.signal.aborted ? E() : s.signal.addEventListener("abort", E)));
    const R = eW(s.url);
    if (R && sn.protocols.indexOf(R) === -1) {
      r(new Ue("Unsupported protocol " + R + ":", Ue.ERR_BAD_REQUEST, e));
      return;
    }
    v.send(i || null);
  });
}, uW = (e, t) => {
  const { length: n } = e = e ? e.filter(Boolean) : [];
  if (t || n) {
    let r = new AbortController(), s;
    const i = function(A) {
      if (!s) {
        s = !0, u();
        const E = A instanceof Error ? A : this.reason;
        r.abort(E instanceof Ue ? E : new vi(E instanceof Error ? E.message : E));
      }
    };
    let o = t && setTimeout(() => {
      o = null, i(new Ue(`timeout ${t} of ms exceeded`, Ue.ETIMEDOUT));
    }, t);
    const u = () => {
      e && (o && clearTimeout(o), o = null, e.forEach((A) => {
        A.unsubscribe ? A.unsubscribe(i) : A.removeEventListener("abort", i);
      }), e = null);
    };
    e.forEach((A) => A.addEventListener("abort", i));
    const { signal: h } = r;
    return h.unsubscribe = () => K.asap(u), h;
  }
}, _W = function* (e, t) {
  let n = e.byteLength;
  if (n < t) {
    yield e;
    return;
  }
  let r = 0, s;
  for (; r < n; )
    s = r + t, yield e.slice(r, s), r = s;
}, dW = async function* (e, t) {
  for await (const n of cW(e))
    yield* _W(n, t);
}, cW = async function* (e) {
  if (e[Symbol.asyncIterator]) {
    yield* e;
    return;
  }
  const t = e.getReader();
  try {
    for (; ; ) {
      const { done: n, value: r } = await t.read();
      if (n)
        break;
      yield r;
    }
  } finally {
    await t.cancel();
  }
}, lp = (e, t, n, r) => {
  const s = dW(e, t);
  let i = 0, o, u = (h) => {
    o || (o = !0, r && r(h));
  };
  return new ReadableStream({
    async pull(h) {
      try {
        const { done: A, value: E } = await s.next();
        if (A) {
          u(), h.close();
          return;
        }
        let p = E.byteLength;
        if (n) {
          let T = i += p;
          n(T);
        }
        h.enqueue(new Uint8Array(E));
      } catch (A) {
        throw u(A), A;
      }
    },
    cancel(h) {
      return u(h), s.return();
    }
  }, {
    highWaterMark: 2
  });
}, qu = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", oS = qu && typeof ReadableStream == "function", fW = qu && (typeof TextEncoder == "function" ? /* @__PURE__ */ ((e) => (t) => e.encode(t))(new TextEncoder()) : async (e) => new Uint8Array(await new Response(e).arrayBuffer())), uS = (e, ...t) => {
  try {
    return !!e(...t);
  } catch {
    return !1;
  }
}, hW = oS && uS(() => {
  let e = !1;
  const t = new Request(sn.origin, {
    body: new ReadableStream(),
    method: "POST",
    get duplex() {
      return e = !0, "half";
    }
  }).headers.has("Content-Type");
  return e && !t;
}), op = 64 * 1024, Zd = oS && uS(() => K.isReadableStream(new Response("").body)), ou = {
  stream: Zd && ((e) => e.body)
};
qu && ((e) => {
  ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((t) => {
    !ou[t] && (ou[t] = K.isFunction(e[t]) ? (n) => n[t]() : (n, r) => {
      throw new Ue(`Response type '${t}' is not supported`, Ue.ERR_NOT_SUPPORT, r);
    });
  });
})(new Response());
const AW = async (e) => {
  if (e == null)
    return 0;
  if (K.isBlob(e))
    return e.size;
  if (K.isSpecCompliantForm(e))
    return (await new Request(sn.origin, {
      method: "POST",
      body: e
    }).arrayBuffer()).byteLength;
  if (K.isArrayBufferView(e) || K.isArrayBuffer(e))
    return e.byteLength;
  if (K.isURLSearchParams(e) && (e = e + ""), K.isString(e))
    return (await fW(e)).byteLength;
}, EW = async (e, t) => {
  const n = K.toFiniteNumber(e.getContentLength());
  return n ?? AW(t);
}, pW = qu && (async (e) => {
  let {
    url: t,
    method: n,
    data: r,
    signal: s,
    cancelToken: i,
    timeout: o,
    onDownloadProgress: u,
    onUploadProgress: h,
    responseType: A,
    headers: E,
    withCredentials: p = "same-origin",
    fetchOptions: T
  } = lS(e);
  A = A ? (A + "").toLowerCase() : "text";
  let S = uW([s, i && i.toAbortSignal()], o), b;
  const L = S && S.unsubscribe && (() => {
    S.unsubscribe();
  });
  let v;
  try {
    if (h && hW && n !== "get" && n !== "head" && (v = await EW(E, r)) !== 0) {
      let w = new Request(t, {
        method: "POST",
        body: r,
        duplex: "half"
      }), M;
      if (K.isFormData(r) && (M = w.headers.get("content-type")) && E.setContentType(M), w.body) {
        const [P, F] = ap(
          v,
          lu(sp(h))
        );
        r = lp(w.body, op, P, F);
      }
    }
    K.isString(p) || (p = p ? "include" : "omit");
    const I = "credentials" in Request.prototype;
    b = new Request(t, {
      ...T,
      signal: S,
      method: n.toUpperCase(),
      headers: E.normalize().toJSON(),
      body: r,
      duplex: "half",
      credentials: I ? p : void 0
    });
    let R = await fetch(b);
    const g = Zd && (A === "stream" || A === "response");
    if (Zd && (u || g && L)) {
      const w = {};
      ["status", "statusText", "headers"].forEach((C) => {
        w[C] = R[C];
      });
      const M = K.toFiniteNumber(R.headers.get("content-length")), [P, F] = u && ap(
        M,
        lu(sp(u), !0)
      ) || [];
      R = new Response(
        lp(R.body, op, P, () => {
          F && F(), L && L();
        }),
        w
      );
    }
    A = A || "text";
    let D = await ou[K.findKey(ou, A) || "text"](R, e);
    return !g && L && L(), await new Promise((w, M) => {
      sS(w, M, {
        data: D,
        headers: In.from(R.headers),
        status: R.status,
        statusText: R.statusText,
        config: e,
        request: b
      });
    });
  } catch (I) {
    throw L && L(), I && I.name === "TypeError" && /fetch/i.test(I.message) ? Object.assign(
      new Ue("Network Error", Ue.ERR_NETWORK, e, b),
      {
        cause: I.cause || I
      }
    ) : Ue.from(I, I && I.code, e, b);
  }
}), Jd = {
  http: BV,
  xhr: oW,
  fetch: pW
};
K.forEach(Jd, (e, t) => {
  if (e) {
    try {
      Object.defineProperty(e, "name", { value: t });
    } catch {
    }
    Object.defineProperty(e, "adapterName", { value: t });
  }
});
const up = (e) => `- ${e}`, TW = (e) => K.isFunction(e) || e === null || e === !1, _S = {
  getAdapter: (e) => {
    e = K.isArray(e) ? e : [e];
    const { length: t } = e;
    let n, r;
    const s = {};
    for (let i = 0; i < t; i++) {
      n = e[i];
      let o;
      if (r = n, !TW(n) && (r = Jd[(o = String(n)).toLowerCase()], r === void 0))
        throw new Ue(`Unknown adapter '${o}'`);
      if (r)
        break;
      s[o || "#" + i] = r;
    }
    if (!r) {
      const i = Object.entries(s).map(
        ([u, h]) => `adapter ${u} ` + (h === !1 ? "is not supported by the environment" : "is not available in the build")
      );
      let o = t ? i.length > 1 ? `since :
` + i.map(up).join(`
`) : " " + up(i[0]) : "as no adapter specified";
      throw new Ue(
        "There is no suitable adapter to dispatch the request " + o,
        "ERR_NOT_SUPPORT"
      );
    }
    return r;
  },
  adapters: Jd
};
function md(e) {
  if (e.cancelToken && e.cancelToken.throwIfRequested(), e.signal && e.signal.aborted)
    throw new vi(null, e);
}
function _p(e) {
  return md(e), e.headers = In.from(e.headers), e.data = Td.call(
    e,
    e.transformRequest
  ), ["post", "put", "patch"].indexOf(e.method) !== -1 && e.headers.setContentType("application/x-www-form-urlencoded", !1), _S.getAdapter(e.adapter || Bl.adapter)(e).then(function(r) {
    return md(e), r.data = Td.call(
      e,
      e.transformResponse,
      r
    ), r.headers = In.from(r.headers), r;
  }, function(r) {
    return aS(r) || (md(e), r && r.response && (r.response.data = Td.call(
      e,
      e.transformResponse,
      r.response
    ), r.response.headers = In.from(r.response.headers))), Promise.reject(r);
  });
}
const dS = "1.7.9", $u = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((e, t) => {
  $u[e] = function(r) {
    return typeof r === e || "a" + (t < 1 ? "n " : " ") + e;
  };
});
const dp = {};
$u.transitional = function(t, n, r) {
  function s(i, o) {
    return "[Axios v" + dS + "] Transitional option '" + i + "'" + o + (r ? ". " + r : "");
  }
  return (i, o, u) => {
    if (t === !1)
      throw new Ue(
        s(o, " has been removed" + (n ? " in " + n : "")),
        Ue.ERR_DEPRECATED
      );
    return n && !dp[o] && (dp[o] = !0, console.warn(
      s(
        o,
        " has been deprecated since v" + n + " and will be removed in the near future"
      )
    )), t ? t(i, o, u) : !0;
  };
};
$u.spelling = function(t) {
  return (n, r) => (console.warn(`${r} is likely a misspelling of ${t}`), !0);
};
function mW(e, t, n) {
  if (typeof e != "object")
    throw new Ue("options must be an object", Ue.ERR_BAD_OPTION_VALUE);
  const r = Object.keys(e);
  let s = r.length;
  for (; s-- > 0; ) {
    const i = r[s], o = t[i];
    if (o) {
      const u = e[i], h = u === void 0 || o(u, i, e);
      if (h !== !0)
        throw new Ue("option " + i + " must be " + h, Ue.ERR_BAD_OPTION_VALUE);
      continue;
    }
    if (n !== !0)
      throw new Ue("Unknown option " + i, Ue.ERR_BAD_OPTION);
  }
}
const Vo = {
  assertOptions: mW,
  validators: $u
}, Fr = Vo.validators;
let Os = class {
  constructor(t) {
    this.defaults = t, this.interceptors = {
      request: new np(),
      response: new np()
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(t, n) {
    try {
      return await this._request(t, n);
    } catch (r) {
      if (r instanceof Error) {
        let s = {};
        Error.captureStackTrace ? Error.captureStackTrace(s) : s = new Error();
        const i = s.stack ? s.stack.replace(/^.+\n/, "") : "";
        try {
          r.stack ? i && !String(r.stack).endsWith(i.replace(/^.+\n.+\n/, "")) && (r.stack += `
` + i) : r.stack = i;
        } catch {
        }
      }
      throw r;
    }
  }
  _request(t, n) {
    typeof t == "string" ? (n = n || {}, n.url = t) : n = t || {}, n = ws(this.defaults, n);
    const { transitional: r, paramsSerializer: s, headers: i } = n;
    r !== void 0 && Vo.assertOptions(r, {
      silentJSONParsing: Fr.transitional(Fr.boolean),
      forcedJSONParsing: Fr.transitional(Fr.boolean),
      clarifyTimeoutError: Fr.transitional(Fr.boolean)
    }, !1), s != null && (K.isFunction(s) ? n.paramsSerializer = {
      serialize: s
    } : Vo.assertOptions(s, {
      encode: Fr.function,
      serialize: Fr.function
    }, !0)), Vo.assertOptions(n, {
      baseUrl: Fr.spelling("baseURL"),
      withXsrfToken: Fr.spelling("withXSRFToken")
    }, !0), n.method = (n.method || this.defaults.method || "get").toLowerCase();
    let o = i && K.merge(
      i.common,
      i[n.method]
    );
    i && K.forEach(
      ["delete", "get", "head", "post", "put", "patch", "common"],
      (b) => {
        delete i[b];
      }
    ), n.headers = In.concat(o, i);
    const u = [];
    let h = !0;
    this.interceptors.request.forEach(function(L) {
      typeof L.runWhen == "function" && L.runWhen(n) === !1 || (h = h && L.synchronous, u.unshift(L.fulfilled, L.rejected));
    });
    const A = [];
    this.interceptors.response.forEach(function(L) {
      A.push(L.fulfilled, L.rejected);
    });
    let E, p = 0, T;
    if (!h) {
      const b = [_p.bind(this), void 0];
      for (b.unshift.apply(b, u), b.push.apply(b, A), T = b.length, E = Promise.resolve(n); p < T; )
        E = E.then(b[p++], b[p++]);
      return E;
    }
    T = u.length;
    let S = n;
    for (p = 0; p < T; ) {
      const b = u[p++], L = u[p++];
      try {
        S = b(S);
      } catch (v) {
        L.call(this, v);
        break;
      }
    }
    try {
      E = _p.call(this, S);
    } catch (b) {
      return Promise.reject(b);
    }
    for (p = 0, T = A.length; p < T; )
      E = E.then(A[p++], A[p++]);
    return E;
  }
  getUri(t) {
    t = ws(this.defaults, t);
    const n = iS(t.baseURL, t.url);
    return tS(n, t.params, t.paramsSerializer);
  }
};
K.forEach(["delete", "get", "head", "options"], function(t) {
  Os.prototype[t] = function(n, r) {
    return this.request(ws(r || {}, {
      method: t,
      url: n,
      data: (r || {}).data
    }));
  };
});
K.forEach(["post", "put", "patch"], function(t) {
  function n(r) {
    return function(i, o, u) {
      return this.request(ws(u || {}, {
        method: t,
        headers: r ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url: i,
        data: o
      }));
    };
  }
  Os.prototype[t] = n(), Os.prototype[t + "Form"] = n(!0);
});
let SW = class cS {
  constructor(t) {
    if (typeof t != "function")
      throw new TypeError("executor must be a function.");
    let n;
    this.promise = new Promise(function(i) {
      n = i;
    });
    const r = this;
    this.promise.then((s) => {
      if (!r._listeners) return;
      let i = r._listeners.length;
      for (; i-- > 0; )
        r._listeners[i](s);
      r._listeners = null;
    }), this.promise.then = (s) => {
      let i;
      const o = new Promise((u) => {
        r.subscribe(u), i = u;
      }).then(s);
      return o.cancel = function() {
        r.unsubscribe(i);
      }, o;
    }, t(function(i, o, u) {
      r.reason || (r.reason = new vi(i, o, u), n(r.reason));
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason)
      throw this.reason;
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(t) {
    if (this.reason) {
      t(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(t) : this._listeners = [t];
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(t) {
    if (!this._listeners)
      return;
    const n = this._listeners.indexOf(t);
    n !== -1 && this._listeners.splice(n, 1);
  }
  toAbortSignal() {
    const t = new AbortController(), n = (r) => {
      t.abort(r);
    };
    return this.subscribe(n), t.signal.unsubscribe = () => this.unsubscribe(n), t.signal;
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let t;
    return {
      token: new cS(function(s) {
        t = s;
      }),
      cancel: t
    };
  }
};
function bW(e) {
  return function(n) {
    return e.apply(null, n);
  };
}
function LW(e) {
  return K.isObject(e) && e.isAxiosError === !0;
}
const Qd = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(Qd).forEach(([e, t]) => {
  Qd[t] = e;
});
function fS(e) {
  const t = new Os(e), n = Vm(Os.prototype.request, t);
  return K.extend(n, Os.prototype, t, { allOwnKeys: !0 }), K.extend(n, t, null, { allOwnKeys: !0 }), n.create = function(s) {
    return fS(ws(e, s));
  }, n;
}
const Nt = fS(Bl);
Nt.Axios = Os;
Nt.CanceledError = vi;
Nt.CancelToken = SW;
Nt.isCancel = aS;
Nt.VERSION = dS;
Nt.toFormData = Mu;
Nt.AxiosError = Ue;
Nt.Cancel = Nt.CanceledError;
Nt.all = function(t) {
  return Promise.all(t);
};
Nt.spread = bW;
Nt.isAxiosError = LW;
Nt.mergeConfig = ws;
Nt.AxiosHeaders = In;
Nt.formToJSON = (e) => rS(K.isHTMLForm(e) ? new FormData(e) : e);
Nt.getAdapter = _S.getAdapter;
Nt.HttpStatusCode = Qd;
Nt.default = Nt;
const {
  Axios: $de,
  AxiosError: kde,
  CanceledError: Ude,
  isCancel: Hde,
  CancelToken: Vde,
  VERSION: Wde,
  all: Gde,
  Cancel: Kde,
  isAxiosError: jde,
  spread: zde,
  toFormData: Yde,
  AxiosHeaders: Xde,
  HttpStatusCode: Zde,
  formToJSON: Jde,
  getAdapter: Qde,
  mergeConfig: ece
} = Nt, hS = B("/api/"), Wo = B(Nt.create()), ir = B({}), Go = B({}), AS = B({}), Mr = {}, vr = {}, ES = B({
  setUrlForArray: kW
});
function vW({ axiosCreateOptions: e = {} }) {
  Wo.value = Nt.create(e);
}
function IW({ baseUrl: e = "" }) {
  hS.value = e;
}
function yW({ errorCallbacks: e = {} }) {
  Go.value = e;
}
function gW({ headerParams: e = {} } = {}) {
  AS.value = e;
}
function RW({
  all: e = !1,
  abortGroup: t,
  excludeAbortGroup: n
}) {
  const r = VW({ excludeAbortGroup: n });
  if (e)
    z(Mr, (s, i) => {
      r[i] || (s.abort(), delete Mr[i], vr[t] && delete vr[t]);
    });
  else if (t) {
    let s = [];
    it(t) ? s.push(t) : me(t) && (s = t), z(s, (i) => {
      r[i] || Mr[i] && (Mr[i].abort(), delete Mr[i], vr[t] && delete vr[t]);
    });
  }
}
function OW() {
  ir.value = {};
}
function CW({ apiSaveId: e }) {
  e in ir.value && delete ir.value[e];
}
function NW() {
  return {
    abortHttp: RW,
    clearAllApiSaved: OW,
    clearApiSaved: CW,
    deleteHttp: MW,
    getHttp: DW,
    getListHttp: BW,
    getOptionsHttp: wW,
    patchHttp: FW,
    postHttp: PW,
    putHttp: xW
  };
}
function DW({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  apiSaveId: o,
  keyId: u,
  fullResponse: h,
  showError: A,
  ignoreErrorHandler: E = !1,
  abortable: p = !0,
  abortGroup: T = ""
}) {
  return $s({
    methodHttp: "get",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    apiSaveId: o,
    keyId: u,
    fullResponse: h,
    showError: A,
    ignoreErrorHandler: E,
    abortable: p,
    abortGroup: T
  });
}
function BW({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  apiSaveId: o,
  keyId: u,
  fullResponse: h,
  showError: A,
  ignoreErrorHandler: E = !1,
  abortable: p = !0,
  abortGroup: T = ""
}) {
  return $s({
    methodHttp: "get",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    apiSaveId: o,
    keyId: u,
    fullResponse: h,
    showError: A,
    ignoreErrorHandler: E,
    abortable: p,
    abortGroup: T,
    expectedList: !0
  });
}
function wW({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  keyId: o,
  fullResponse: u,
  showError: h,
  ignoreErrorHandler: A = !1,
  abortable: E = !0,
  abortGroup: p = ""
}) {
  return $s({
    methodHttp: "options",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    keyId: o,
    fullResponse: u,
    showError: h,
    abortable: E,
    abortGroup: p,
    ignoreErrorHandler: A
  });
}
function PW({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: h = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return $s({
    methodHttp: "post",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: h
  });
}
function xW({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: h = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return $s({
    methodHttp: "put",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: h
  });
}
function FW({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: h = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return $s({
    methodHttp: "patch",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: h
  });
}
function MW({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: h = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return $s({
    methodHttp: "delete",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: h
  });
}
function $s({
  methodHttp: e,
  url: t,
  urlBase: n,
  urlParams: r,
  data: s,
  headerParams: i = {},
  responseType: o = "json",
  apiSaveId: u,
  keyId: h,
  fullResponse: A,
  showError: E = !1,
  ignoreErrorHandler: p = !1,
  abortable: T = !0,
  abortGroup: S = "",
  expectedList: b
}) {
  let L;
  if (u && (L = ir.value[u], L && L.loading))
    return L.promise;
  const v = new Promise((I, R) => {
    if (L && !L.loading) {
      if (h) {
        if (L.keyData)
          return I(L.keyData);
        const P = cp({ data: L.data, keyId: h });
        return ir.value[u].keyData = P, I(P);
      }
      return I(L.data);
    }
    const g = $W({ url: t, params: r });
    let D = `${ae(n) ? hS.value : n}${g}`;
    D = D.replace(/\/\//g, "/");
    const w = {
      ...AS.value,
      ...i
    }, M = HW({ abortGroup: S, abortable: T });
    WW({ abortGroup: S, abortable: T }), Wo.value({
      method: e,
      url: D,
      data: s,
      headers: w,
      responseType: o,
      signal: M
    }).then(
      (P) => {
        if (A)
          return I(P);
        const F = UW({ expectedList: b, response: P }), C = cp({ data: F, keyId: h });
        return u && (ir.value[u].data = F, ir.value[u].keyData = C, ir.value[u].loading = !1), I(h ? C : F);
      },
      (P) => {
        if ((P == null ? void 0 : P.code) === "ERR_CANCELED")
          return R(P);
        if (Fe(p)) {
          if (p({ error: P.response, showError: E, client: Wo }))
            return R(P.response);
        } else if (p || qW({ error: P.response, showError: E, client: Wo, reject: R, resolve: I }))
          return R(P.response);
      }
    ).finally(
      () => {
        GW({ abortGroup: S, abortable: T });
      }
    );
  });
  return L || (ir.value[u] = ir.value[u] || {}, ir.value[u].loading = !0, ir.value[u].promise = v), v;
}
function qW({ error: e, showError: t, client: n, resolve: r, reject: s }) {
  return e ? (() => {
    const o = Go.value[e.status];
    return Fe(o) ? o({ error: e, showError: t, client: n, resolve: r, reject: s }) : Fe(Go.value.all) ? Go.value.all({ error: e, showError: t, client: n, resolve: r, reject: s }) : !0;
  })() : !0;
}
function $W({ url: e, params: t }) {
  const n = e || "";
  let r = "";
  z(t, (i, o) => {
    me(i) ? r = ES.value.setUrlForArray({ id: o, array: i, url: r }) : nt(i) ? z(i, (u, h) => {
      u && (r && (r += "&"), r += `${h}=${u}`);
    }) : ae(i) || (r && (r += "&"), r += `${o}=${i}`);
  });
  const s = r && n ? n.indexOf("?") === -1 ? "?" : "&" : "";
  return `${n}${s}${r}`;
}
function kW({ array: e, url: t, id: n }) {
  if (!e.length)
    return t;
  let r = t || "";
  return n === "fields" || n === "ordering" ? (r && (r += "&"), r += `${n}=`, r += e.join(",")) : z(e, (s) => {
    r && (r += "&"), r += `${n}=${s}`;
  }), r;
}
function cp({ data: e, keyId: t }) {
  if (t)
    return Pa(e, t);
}
function UW({ expectedList: e, response: t }) {
  return e ? me(t.data) ? t.data : t.data.results ? t.data.results : [] : t.data;
}
function HW({ abortGroup: e = "_global", abortable: t } = {}) {
  if (t)
    return Mr[e] = Mr[e] || new AbortController(), Mr[e].signal;
}
function VW({ excludeAbortGroup: e }) {
  const t = {};
  return e && (it(e) ? t[e] = !0 : me(e) && z(e, (n) => {
    t[n] = !0;
  })), t;
}
function WW({ abortGroup: e, abortable: t }) {
  !t || !e || (vr[e] ? vr[e]++ : vr[e] = 1);
}
function GW({ abortGroup: e, abortable: t }) {
  !t || !e || (vr[e] && vr[e]--, vr[e] === 0 && Mr[e] && (delete vr[e], delete Mr[e]));
}
function tce({ url: e, allCommasToArray: t = !1, keysCommaToArray: n = [] } = {}) {
  let r = e || window.location.search.substring(1);
  try {
    r = decodeURI(r);
  } catch (o) {
    console.error(o);
  }
  const s = r.split("&"), i = {};
  return z(s, (o) => {
    const u = o.split("=");
    if (u && u.length === 2)
      if (u[1].indexOf("[") !== -1 || u[1].indexOf("%5B") !== -1) {
        const h = u[1].replace("%5B", "[").replace("%5D", "]").replace(/%22/g, '"');
        i[u[0]] = JSON.parse(h);
      } else if (u[1].indexOf(",") !== -1 && (t || n.indexOf(u[0]) !== -1)) {
        const h = u[1].split(",");
        i[u[0]] = h;
      } else i[u[0]] ? it(i[u[0]]) ? (i[u[0]] = [i[u[0]]], i[u[0]].push(u[1])) : me(i[u[0]]) && i[u[0]].push(u[1]) : i[u[0]] = u[1];
  }), i;
}
function wl(e) {
  const t = d(e, "disabled");
  return {
    disabledAttribut: _(() => {
      if (t.value === !0)
        return !0;
    })
  };
}
function ku(e, {
  isModel: t = _(() => !0)
} = {}) {
  const n = d(e, "isClearButton");
  return {
    isClearButtonLocal: _(() => !!(n.value && t.value))
  };
}
function rf({
  inputRef: e = B(void 0)
}) {
  const t = B(void 0), n = () => {
    t.value = !0;
  }, r = () => {
    t.value = !1;
  }, s = (i) => {
    switch (i.animationName) {
      case "onAutoFillStart":
        return n();
      case "onAutoFillCancel":
        return r();
    }
  };
  return Wr(() => {
    e.value && e.value.addEventListener("animationstart", s);
  }), Dt(() => {
    e.value && e.value.removeEventListener && e.value.removeEventListener("animationstart", s);
  }), {
    isAutofill: t
  };
}
function af({
  htmlIdLocal: e = _(() => ""),
  clickLabel: t = () => {
  }
}) {
  const n = _(() => em(e.value)), r = () => {
    t();
  };
  return {
    destroyEventBusClickLabel: () => {
      Ct.$off(n.value, r);
    },
    initEventBusClickLabel: () => {
      Ct.$on(n.value, r);
    }
  };
}
function sf(e, {
  data: t = _(() => [])
}) {
  const n = d(e, "keyGroup"), r = d(e, "keyGroupLabelCallback"), s = d(e, "sortOrderGroup"), i = _(() => me(n.value) ? n.value : it(n.value) ? [n.value] : []), o = _(() => i.value.length > 0), u = _(() => {
    if (!o.value)
      return;
    const A = {};
    return z(i.value, (E, p) => {
      A[p] = {};
    }), z(t.value, (E) => {
      let p;
      const T = [];
      let S = "";
      z(i.value, (b, L) => {
        let v = fe(E, b);
        (ae(v) || v === "") && (v = "_not_grouped"), S += `${S ? "_" : ""}${v}`, A[L][S] || (A[L][S] = {
          groupKey: v,
          groupLabel: Fe(r.value) ? r.value({ group: v, item: E }) : v,
          groupParentKey: p,
          allGroupKeys: S,
          allParentKeys: pe(T),
          data: [],
          dataKeyByKeyId: {}
        }), A[L][S].data.push(E), A[L][S].dataKeyByKeyId[E[Ke]] = E, p = v, T.push(v);
      });
    }), z(A, (E, p) => {
      A[p] = Tc(E);
    }), s.value && z(A, (E, p) => {
      A[p] = Sc(E, ["groupLabel"], [s.value]);
    }), A;
  });
  return {
    dataGrouped: _(() => {
      if (!o.value)
        return;
      const A = {};
      return z(t.value, (E) => {
        let p = "";
        z(i.value, (T) => {
          let S = fe(E, T);
          if (ae(S) || S === "")
            return S = "_not_grouped", p += `${p ? "_" : ""}${S}`, !1;
          p += `${p ? "_" : ""}${S}`;
        }), A[p] = A[p] || [], A[p].push(E);
      }), A;
    }),
    groupsForLever: u,
    hasKeyGroup: o,
    keyGroupArray: i
  };
}
function lf(e, { emit: t }) {
  const n = d(e, "collapsible"), r = d(e, "id"), s = d(e, "isCollapsed"), i = d(e, "texts"), o = B(!1), u = _(() => o.value ? Jc : bi), h = _(() => {
    var S;
    return ((S = i.value) == null ? void 0 : S.collapseOpen) || "_A_FIELDSET_COLLAPSE_OPEN_";
  }), A = _(() => {
    var S;
    return ((S = i.value) == null ? void 0 : S.collapseClose) || "_A_FIELDSET_COLLAPSE_CLOSE_";
  }), E = _(() => o.value ? h.value : A.value), p = () => {
    o.value = !o.value, t("toggleCollapse", { isCollapsed: o.value, id: r.value, props: e });
  }, T = () => {
    n.value ? o.value = s.value || !1 : o.value = !1;
  };
  return rt(s, () => {
    o.value = s.value || !1;
  }), {
    iconCollapse: u,
    initIsCollapsedLocal: T,
    isCollapsedLocal: o,
    titleCollapse: E,
    toggleCollapse: p
  };
}
function of(e, {
  changeModel: t = () => {
  },
  dataExtraLocal: n = _(() => []),
  dataFromServer: r = B([])
} = {}) {
  const s = d(e, "apiSaveId"), i = d(e, "isDataSimpleArray"), o = d(e, "keyId"), u = d(e, "keyLabel"), h = d(e, "searchApi"), A = d(e, "modelValue"), E = d(e, "searchApiKey"), p = d(e, "type"), T = d(e, "url"), S = d(e, "urlParams"), b = B(!1), L = B(void 0), {
    getListHttp: v
  } = NW(), I = _(() => !!(h.value && E.value && T.value)), R = _(() => [
    s.value,
    T.value,
    S.value
  ]), g = () => {
    if (!T.value || I.value) {
      r.value = [];
      return;
    }
    L.value = !0, v({
      url: T.value,
      urlParams: S.value,
      apiSaveId: s.value
    }).then(
      (j) => {
        r.value = j;
      }
    ).finally(
      () => {
        L.value = !1;
      }
    );
  }, D = _(() => p.value === "checkbox" || p.value === "multiselect"), w = (j, le) => {
    mc(le, j) || (g(), D.value ? t({
      model: [],
      currentModel: []
    }) : t({
      model: void 0,
      currentModel: void 0
    }));
  }, M = (j) => i.value ? hP(j) : ET(j, o.value), P = (j) => n.value.length ? !pc(n.value, [Ke, j]) : it(j) || yn(j), F = _(() => {
    let j = [];
    return me(A.value) && A.value.length ? j = Rt(A.value, (le) => P(le)) : P(A.value) && (j = [A.value]), j;
  }), C = ({ response: j }) => {
    const le = pe(r.value), ee = [], _e = pe(F.value);
    z(le, (ie) => {
      if (_e.length === 0)
        return !1;
      const ue = i.value ? ie : fe(ie, o.value), Te = _e.indexOf(ue);
      Te !== -1 && (_e.splice(Te, 1), ee.push(ie));
    }), ee.push(...j), r.value = M(ee);
  };
  return {
    loadDataFromServer: g,
    loadDataFromServerForSearchAPI: () => {
      if (!I.value || !F.value.length)
        return;
      let j;
      if (o.value === "pk" ? j = Rt(F.value, (ee) => !ae(ee)) : j = pe(F.value), !j.length)
        return;
      L.value = !0;
      const le = {
        ...S.value,
        [o.value]: j,
        limit: j.length
      };
      return v({
        url: T.value,
        urlParams: le
      }).then(
        (ee) => {
          r.value = ee || [];
        }
      ).finally(() => {
        L.value = !1;
      });
    },
    loadingDataFromServer: L,
    loadingSearchApi: b,
    onSearchInApi: ({ search: j, data: le = [] }) => {
      I.value && (b.value = !0, v({
        url: T.value,
        urlParams: {
          ...S.value || {},
          [E.value]: j
        }
      }).then(
        (ee) => {
          i.value && (ee = xn(ee, (_e) => _e[u.value])), C({ response: ee });
        }
      ).then(
        () => {
          b.value = !1;
        }
      ));
    },
    searchApiLocal: I,
    updateUrlPropsComputed: w,
    urlPropsComputed: R
  };
}
function uf(e, {
  data: t = _(() => [])
}) {
  const n = d(e, "sortOrder");
  return {
    dataSort: _(() => n.value ? Sc(t.value, [bt], [n.value]) : t.value)
  };
}
function _f({ emit: e }, {
  dataKeyByKeyIdLocal: t = _(() => ({})),
  dataLocal: n = _(() => ({}))
}) {
  rt(n, () => {
    e("updateData", {
      dataKeyByKeyId: t.value
    });
  }, {
    immediate: !0,
    deep: !0
  });
}
function df(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "data"), r = d(e, "dataExtra"), s = d(e, "isDataSimpleArray"), i = d(e, "keyId"), o = d(e, "keyLabel"), u = d(e, "keyLabelCallback"), h = d(e, "translateData"), A = B([]), E = _(() => UP(r.value)), p = ({ _data: D, _isArrayOfArrays: w = !1 }) => {
    const M = pe(D);
    if (w) {
      const P = [];
      return z(M, (F) => {
        const C = F[0];
        let $ = F[1];
        h.value && Da($) && ($ = xt({ placeholder: $, alwaysTranslate: t.value })), P.push({
          [Ke]: C,
          [bt]: $
        });
      }), P;
    }
    if (u.value) {
      if (s.value) {
        const P = [];
        return z(M, (F) => {
          let C = u.value({ item: F });
          h.value && Da(C) && (C = xt({ placeholder: C, alwaysTranslate: t.value })), P.push({
            [Ke]: F,
            [bt]: C
          });
        }), P;
      }
      z(M, (P) => {
        let F = u.value({ item: P });
        h.value && Da(F) && (F = xt({ placeholder: F, alwaysTranslate: t.value })), P[Ke] = fe(P, i.value), P[bt] = F;
      });
    } else {
      if (s.value) {
        const P = [];
        return z(M, (F) => {
          let C = F;
          h.value && Da(C) && (C = xt({ placeholder: C, alwaysTranslate: t.value })), P.push({
            [Ke]: F,
            [bt]: C
          });
        }), P;
      }
      z(M, (P) => {
        let F = fe(P, o.value);
        h.value && Da(F) && (F = xt({ placeholder: F, alwaysTranslate: t.value })), P[Ke] = fe(P, i.value), P[bt] = F;
      });
    }
    return M;
  }, T = _(() => n.value || A.value), S = _(() => p({
    _data: T.value,
    _isArrayOfArrays: !1
  })), b = _(() => p({
    _data: r.value,
    _isArrayOfArrays: E.value
  })), L = _(() => Pa(b.value, Ke)), v = _(() => Pa(S.value, Ke)), I = _(() => ({
    ...L.value,
    ...v.value
  })), R = _(() => [
    ...b.value,
    ...S.value
  ]), g = _(() => b.value.length > 0);
  return {
    dataAll: R,
    dataExtraLocal: b,
    dataFromServer: A,
    dataKeyByKeyIdLocal: I,
    dataLocal: S,
    hasDataExtra: g
  };
}
function cf(e, {
  loadingDataFromServer: t = B(!1)
}) {
  const n = d(e, "loading");
  return {
    loadingLocal: _(() => !!(n.value || t.value))
  };
}
function ff(e, { emit: t }, {
  data: n = _(() => []),
  dataExtra: r = _(() => []),
  exclusiveOption: s = _(() => {
  }),
  groupsForLever: i = _(() => {
  }),
  hasKeyGroup: o = _(() => !1),
  htmlIdLocal: u = _(() => ""),
  keyGroupArray: h = _(() => []),
  onSearchInApi: A = () => {
  },
  searchApiLocal: E = _(() => !1)
}) {
  const p = d(e, "searchTimeout"), T = d(e, "searchInGroup"), S = d(e, "searchOutside"), b = B(!1), L = B(""), v = B(""), I = B(!1), R = B({}), g = B({}), D = B({}), w = B({}), M = B({}), P = B(void 0), F = _(() => !!(S.value || E.value)), C = _(() => `${u.value}_search_global`), $ = _(() => hT(L.value || "")), H = _(() => Su($.value)), j = _(() => new RegExp(H.value, "gi")), le = () => {
    let se = !1;
    if (!T.value || !i.value) {
      M.value = {}, b.value = se;
      return;
    }
    const Oe = {}, ye = {};
    z(i.value, (je) => {
      z(je, (he) => {
        const ne = he.groupLabel;
        ne === "_not_grouped" && !he.groupParentKey || (Oe[he.groupParentKey] ? (Oe[he.allGroupKeys] = !0, he.data.length && (se = !0)) : `${ne}`.search(j.value) !== -1 && (Oe[he.allGroupKeys] = !0, he.data.length && (se = !0), he.allParentKeys.length && z(he.allParentKeys, (V) => {
          ye[V] = !0;
        })));
      });
    }), M.value = {
      ...Oe,
      ...ye
    }, b.value = se;
  }, ee = () => {
    const se = {}, Oe = {}, ye = {}, je = {};
    if (L.value) {
      if (I.value = !0, o.value ? (le(), z(n.value, (he) => {
        const ne = he[bt], V = he[Ke];
        if (`${ne}`.search(j.value) !== -1) {
          Oe[V] = !0;
          let Q = "";
          z(h.value, (re) => {
            let ve = fe(he, re);
            (ae(ve) || ve === "") && (ve = "_not_grouped"), Q += `${Q ? "_" : ""}${ve}`, je[Q] = !0;
          });
        }
      })) : z(n.value, (he) => {
        const ne = he[bt], V = he[Ke];
        `${ne}`.search(j.value) !== -1 && (Oe[V] = !0);
      }), z(r.value, (he) => {
        const ne = he[bt], V = he[Ke];
        `${ne}`.search(j.value) !== -1 && (se[V] = !0);
      }), s.value) {
        const he = s.value[bt], ne = s.value[Ke];
        `${he}`.search(j.value) !== -1 && (ye[ne] = !0);
      }
    } else
      I.value = !1;
    R.value = Oe, g.value = se, D.value = ye, w.value = je;
  }, _e = _(() => !!(I.value && hn(D.value))), ie = _(() => !!(I.value && hn(g.value))), ue = _(() => !!(I.value && hn(R.value) && ie.value && _e.value && !b.value));
  return {
    hasNotElementsExclusiveWithSearch: _e,
    hasNotElementsExtraWithSearch: ie,
    hasNotElementsWithSearch: ue,
    idForButtonSearchOutside: C,
    modelSearch: L,
    modelSearchLowerCase: $,
    modelSearchOutside: v,
    onSearchOutside: (se) => {
      se && se.preventDefault(), A({
        search: v.value
      }), t("onSearchOutside", {
        model: v.value
      });
    },
    searching: I,
    searchingElements: R,
    searchingElementsExclusive: D,
    searchingElementsExtra: g,
    searchingGroups: w,
    searchingGroupsWithSearchInGroup: M,
    searchOutsideOrApi: F,
    searchOutsideRef: P,
    updateModelSearch: (se) => {
      L.value = se, p.value ? setTimeout(() => {
        ee();
      }, p.value) : ee();
    },
    updateModelSearchOutside: (se) => {
      v.value = se;
    }
  };
}
const si = B({
  propsDefault: {},
  config: {
    isHtmlTitleSort: !1,
    headerTopGroups: [
      {
        props: {},
        children: [
          {
            component: "filterMain",
            props: {}
          },
          {
            component: "buttonSearch",
            props: {}
          },
          {
            component: "buttonToggle",
            props: {}
          }
        ]
      },
      {
        props: {},
        children: [
          {
            component: "selectFiltersSaved",
            props: {}
          },
          {
            component: "buttonSaveTop",
            props: {}
          },
          {
            component: "buttonDeleteFiltersSaved",
            props: {}
          }
        ]
      }
    ],
    headerBottomGroups: [
      {
        props: {},
        children: [
          {
            component: "addFilterSelect",
            props: {}
          },
          {
            component: "buttonSearch",
            props: {}
          }
        ]
      }
    ]
  }
});
_(() => {
  const e = {};
  return z(si.value.config.headerTopGroups, (t) => {
    z(t.children, (n) => {
      e[n.component] = n.props;
    });
  }), z(si.value.config.headerBottomGroups, (t) => {
    z(t.children, (n) => {
      e[n.component] = n.props;
    });
  }), e;
});
const nce = {
  install: (e, {
    propsDefault: t = {},
    config: n = {}
  } = {}) => {
    si.value.propsDefault = {
      ...si.value.propsDefault,
      ...t
    }, si.value.config = {
      ...si.value.config,
      ...n
    };
  }
}, rce = {
  install: (e, { axiosCreateOptions: t = {}, baseUrl: n = "/api/", errorCallbacks: r = {}, headerParams: s = {}, setUrlForArray: i = void 0 } = {}) => {
    vW({ axiosCreateOptions: t }), IW({ baseUrl: n }), yW({ errorCallbacks: r }), gW({ headerParams: s }), Fe(i) && (ES.value.setUrlForArray = i);
  }
}, an = {
  propsDefault: {
    controlsType: "none",
    currencySymbol: "€",
    currencySymbolPosition: "right",
    decimalDivider: ",",
    decimalPartLength: 2,
    iconPrepend: void 0,
    inputWidth: 200,
    isLabelFloat: !1,
    max: void 0,
    min: void 0,
    modelUndefined: void 0,
    placeholder: void 0,
    step: 1,
    thousandDivider: "."
  }
}, ace = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    an.propsDefault = {
      ...an.propsDefault,
      ...t
    };
  }
}, fn = {
  propsDefault: {
    controlsType: "plus-minus",
    eAllowed: !1,
    iconPrepend: void 0,
    inputWidth: 200,
    isLabelFloat: !1,
    max: void 0,
    min: void 0,
    modelUndefined: void 0,
    placeholder: void 0,
    precision: void 0,
    step: 1,
    stepStrictly: void 0,
    type: "number"
  }
}, sce = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    fn.propsDefault = {
      ...fn.propsDefault,
      ...t
    };
  }
}, ice = {
  install: (e, t) => {
    e.provide("$aloha", t);
  }
}, lce = {
  install: (e, {
    breakpoint: t
  } = {}) => {
    Po(window.innerWidth <= t);
    const n = () => {
      window.innerWidth > t ? Xo.value && Po(!1) : Xo.value || Po(!0);
    };
    window.addEventListener("resize", n);
  }
}, oce = {
  install: (e, t = "") => {
    yk(t);
  }
}, zt = {
  propsDefault: {
    classColumn: "a_column a_column_12",
    classColumns: "a_columns a_columns_count_12 a_columns_gap_y_1",
    helpTextParam: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_",
    helpTextRoute: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_",
    helpTextQuery: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_",
    helpTextTarget: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_",
    keyIdRoute: "name",
    keyLabelRoute: "path",
    labelParam: "_A_ROUTER_LINK_CONFIG_LABEL_PARAM_",
    labelQuery: "_A_ROUTER_LINK_CONFIG_LABEL_QUERY_",
    labelRoute: "_A_ROUTER_LINK_CONFIG_LABEL_ROUTE_",
    labelTarget: "_A_ROUTER_LINK_CONFIG_LABEL_TARGET_",
    routes: [],
    sortOrderRoute: "asc",
    targets: [
      {
        id: "_blank",
        label: "_A_TARGET_BLANK_"
      },
      {
        id: "_self",
        label: "_A_TARGET_SELF_"
      },
      {
        id: "_parent",
        label: "_A_TARGET_PARENT_"
      },
      {
        id: "_top",
        label: "_A_TARGET_TOP_"
      }
    ]
  }
};
function KW({ routes: e = [], excludedPathRoutes: t = [] }) {
  const n = [], r = {};
  return t.length && z(t, (s) => {
    r[s] = !0;
  }), z(e, (s) => {
    const i = s.path;
    s.name && !r[i] && n.push({
      path: s.path,
      name: s.name,
      meta: s.meta
    });
  }), n;
}
const uce = {
  install: (e, {
    propsDefault: t = {},
    excludedPathRoutes: n = []
  } = {}) => {
    zt.propsDefault = {
      ...zt.propsDefault,
      ...t,
      routes: KW({ routes: t.routes, excludedPathRoutes: n })
    };
  }
};
function pS(e, t, n) {
  function r(o) {
    return o.toString(16);
  }
  function s(o) {
    return parseInt(o, 16);
  }
  e = e.replace(/#/g, ""), t = t.replace(/#/g, ""), n = typeof n < "u" ? n : 50;
  let i = "#";
  for (let o = 0; o <= 5; o += 2) {
    const u = s(e.substr(o, 2)), h = s(t.substr(o, 2));
    let A = r(Math.round(h + (u - h) * (n / 100)));
    for (; A.length < 2; )
      A = "0" + A;
    i += A;
  }
  return i;
}
function _ce(e, t) {
  return pS("#ffffff", e, t);
}
function dce(e, t) {
  return pS("#000000", e, t);
}
function Sd(e) {
  const t = e.toString(16);
  return t.length === 1 ? `0${t}` : t;
}
function cce(e, t, n) {
  return `#${Sd(e)}${Sd(t)}${Sd(n)}`;
}
function fce(e, t = !1) {
  const n = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
  if (!n)
    return null;
  const r = parseInt(n[1], 16), s = parseInt(n[2], 16), i = parseInt(n[3], 16);
  return t ? `${r}, ${s}, ${i}` : {
    r,
    g: s,
    b: i
  };
}
const jW = "[لا توجد عناصر متاحة للاختيار]", zW = "بحث", YW = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: jW,
  _A_CHECKBOX_SEARCH_: zW
}, XW = "[Keine Elemente zur Auswahl verfügbar]", ZW = "Suche", JW = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: XW,
  _A_CHECKBOX_SEARCH_: ZW
}, QW = "[No items available for selection]", e2 = "Search", t2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: QW,
  _A_CHECKBOX_SEARCH_: e2
}, n2 = "[No hay elementos disponibles para seleccionar]", r2 = "Buscar", a2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: n2,
  _A_CHECKBOX_SEARCH_: r2
}, s2 = "[Aucun élément disponible pour la sélection]", i2 = "Recherche", l2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: s2,
  _A_CHECKBOX_SEARCH_: i2
}, o2 = "[Nema dostupnih elemenata za odabir]", u2 = "Pretraživanje", _2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: o2,
  _A_CHECKBOX_SEARCH_: u2
}, d2 = "[Nessun elemento disponibile per la selezione]", c2 = "Cerca", f2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: d2,
  _A_CHECKBOX_SEARCH_: c2
}, h2 = "[Нет элементов для выбора]", A2 = "Поиск", E2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: h2,
  _A_CHECKBOX_SEARCH_: A2
}, Ma = {
  ar: YW,
  de: JW,
  en: t2,
  es: a2,
  fr: l2,
  hr: _2,
  it: f2,
  ru: E2
}, p2 = "تحميل", T2 = {
  _A_CLOAK_LOADING_: p2
}, m2 = "Wird geladen", S2 = {
  _A_CLOAK_LOADING_: m2
}, b2 = "Loading", L2 = {
  _A_CLOAK_LOADING_: b2
}, v2 = "Cargando", I2 = {
  _A_CLOAK_LOADING_: v2
}, y2 = "Chargement", g2 = {
  _A_CLOAK_LOADING_: y2
}, R2 = "Učitavam", O2 = {
  _A_CLOAK_LOADING_: R2
}, C2 = "Caricamento", N2 = {
  _A_CLOAK_LOADING_: C2
}, D2 = "Загрузка", B2 = {
  _A_CLOAK_LOADING_: D2
}, qa = {
  ar: T2,
  de: S2,
  en: L2,
  es: I2,
  fr: g2,
  hr: O2,
  it: N2,
  ru: B2
}, w2 = "من", P2 = "إلى", x2 = {
  _A_DATEPICKER_RANGE_FROM_: w2,
  _A_DATEPICKER_RANGE_UNTIL_: P2
}, F2 = "von", M2 = "bis", q2 = {
  _A_DATEPICKER_RANGE_FROM_: F2,
  _A_DATEPICKER_RANGE_UNTIL_: M2
}, $2 = "from", k2 = "until", U2 = {
  _A_DATEPICKER_RANGE_FROM_: $2,
  _A_DATEPICKER_RANGE_UNTIL_: k2
}, H2 = "desde", V2 = "hasta", W2 = {
  _A_DATEPICKER_RANGE_FROM_: H2,
  _A_DATEPICKER_RANGE_UNTIL_: V2
}, G2 = "de", K2 = "à", j2 = {
  _A_DATEPICKER_RANGE_FROM_: G2,
  _A_DATEPICKER_RANGE_UNTIL_: K2
}, z2 = "od", Y2 = "do", X2 = {
  _A_DATEPICKER_RANGE_FROM_: z2,
  _A_DATEPICKER_RANGE_UNTIL_: Y2
}, Z2 = "da", J2 = "a", Q2 = {
  _A_DATEPICKER_RANGE_FROM_: Z2,
  _A_DATEPICKER_RANGE_UNTIL_: J2
}, e5 = "с", t5 = "по", n5 = {
  _A_DATEPICKER_RANGE_FROM_: e5,
  _A_DATEPICKER_RANGE_UNTIL_: t5
}, $a = {
  ar: x2,
  de: q2,
  en: U2,
  es: W2,
  fr: j2,
  hr: X2,
  it: Q2,
  ru: n5
}, r5 = "إظهار أقل", a5 = "أظهر المزيد", s5 = {
  _A_DISCLOSURE_LESS_: r5,
  _A_DISCLOSURE_MORE_: a5
}, i5 = "Mehr anzeigen", l5 = "Weniger anzeigen", o5 = {
  _A_DISCLOSURE_MORE_: i5,
  _A_DISCLOSURE_LESS_: l5
}, u5 = "Show less", _5 = "Show more", d5 = {
  _A_DISCLOSURE_LESS_: u5,
  _A_DISCLOSURE_MORE_: _5
}, c5 = "Mostrar menos", f5 = "Mostrar más", h5 = {
  _A_DISCLOSURE_LESS_: c5,
  _A_DISCLOSURE_MORE_: f5
}, A5 = "Afficher moins", E5 = "Afficher plus", p5 = {
  _A_DISCLOSURE_LESS_: A5,
  _A_DISCLOSURE_MORE_: E5
}, T5 = "Prikaži manje", m5 = "Prikaži više", S5 = {
  _A_DISCLOSURE_LESS_: T5,
  _A_DISCLOSURE_MORE_: m5
}, b5 = "Mostra meno", L5 = "Mostra di più", v5 = {
  _A_DISCLOSURE_LESS_: b5,
  _A_DISCLOSURE_MORE_: L5
}, I5 = "Показать меньше", y5 = "Показать больше", g5 = {
  _A_DISCLOSURE_LESS_: I5,
  _A_DISCLOSURE_MORE_: y5
}, ka = {
  ar: s5,
  de: o5,
  en: d5,
  es: h5,
  fr: p5,
  hr: S5,
  it: v5,
  ru: g5
}, R5 = "افتح", O5 = "اغلق", C5 = {
  _A_FIELDSET_COLLAPSE_OPEN_: R5,
  _A_FIELDSET_COLLAPSE_CLOSE_: O5
}, N5 = "Ausklappen", D5 = "Einklappen", B5 = {
  _A_FIELDSET_COLLAPSE_OPEN_: N5,
  _A_FIELDSET_COLLAPSE_CLOSE_: D5
}, w5 = "Open", P5 = "Close", x5 = {
  _A_FIELDSET_COLLAPSE_OPEN_: w5,
  _A_FIELDSET_COLLAPSE_CLOSE_: P5
}, F5 = "Abrir", M5 = "Cerrar", q5 = {
  _A_FIELDSET_COLLAPSE_OPEN_: F5,
  _A_FIELDSET_COLLAPSE_CLOSE_: M5
}, $5 = "Ouvrir", k5 = "Fermer", U5 = {
  _A_FIELDSET_COLLAPSE_OPEN_: $5,
  _A_FIELDSET_COLLAPSE_CLOSE_: k5
}, H5 = "Otvori", V5 = "Zatvori", W5 = {
  _A_FIELDSET_COLLAPSE_OPEN_: H5,
  _A_FIELDSET_COLLAPSE_CLOSE_: V5
}, G5 = "Apri", K5 = "Chiudi", j5 = {
  _A_FIELDSET_COLLAPSE_OPEN_: G5,
  _A_FIELDSET_COLLAPSE_CLOSE_: K5
}, z5 = "Открыть", Y5 = "Закрыть", X5 = {
  _A_FIELDSET_COLLAPSE_OPEN_: z5,
  _A_FIELDSET_COLLAPSE_CLOSE_: Y5
}, Ua = {
  ar: C5,
  de: B5,
  en: x5,
  es: q5,
  fr: U5,
  hr: W5,
  it: j5,
  ru: X5
}, Z5 = "_A_FILTERS_ADD_FILTER_", J5 = "إغلاق البحث المتقدم", Q5 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", eG = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", tG = "افتح البحث المتقدم", nG = "_A_FILTERS_SAVE_BTN_", rG = "_A_FILTERS_SAVE_LABEL_NAME_", aG = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", sG = "_A_FILTERS_SAVE_MODAL_HEADER_", iG = "_A_FILTERS_SAVE_MSG_ERROR_", lG = "_A_FILTERS_SAVE_SELECT_", oG = "ابدأ البحث", uG = "_A_FILTERS_TOP_CLOSE_", _G = {
  _A_FILTERS_ADD_FILTER_: Z5,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: J5,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: Q5,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: eG,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: tG,
  _A_FILTERS_SAVE_BTN_: nG,
  _A_FILTERS_SAVE_LABEL_NAME_: rG,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: aG,
  _A_FILTERS_SAVE_MODAL_HEADER_: sG,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: iG,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: lG,
  _A_FILTERS_START_SEARCH_: oG,
  _A_FILTERS_TOP_CLOSE_: uG
}, dG = "Neues Filterkriterium", cG = "Löschen", fG = "Ausgewählten Filter löschen", hG = "Ausgewählten Filter kann nicht gelöscht werden. (Gespeicherter Filter nicht ausgewählt)", AG = "Filter löschen", EG = "Zurücksetzen", pG = "Meine Filter", TG = "Schließen", mG = "Filter:", SG = "Neu", bG = "Filter speichern", LG = "Name", vG = "Bitte geben Sie einen Namen für den zu speichernden Filter ein. Bei Eingabe eines bestehenden Namens wird der bereits gespeicherte Filter aktualisiert. Bei Eingabe eines neuen Namens wird ein neuer Filter gespeichert.", IG = "Filter speichern", yG = "Filter konnte nicht gespeichert werden.", gG = "Gespeicherte Filter", RG = "Suchen", OG = "Filterkriterium entfernen", CG = {
  _A_FILTERS_ADD_FILTER_: dG,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "Sind Sie sicher, dass Sie diese gespeicherten Filter <strong>{{ name }}</strong> löschen wollen?",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: cG,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "Gespeicherten Filter löschen",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "Ausgewählter Filter <strong>{{ name }}</strong> konnte nicht entfernt werden.",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "Ausgewählter Filter <strong>{{ name }}</strong> wurde entfernt.",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_: fG,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: hG,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_: AG,
  _A_FILTERS_DESELECT_ALL_: EG,
  _A_FILTERS_FILTER_SAVED_GROUP_MY_: pG,
  _A_FILTERS_HOR_CLOSE_DROPDOWN_: TG,
  "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_": "Filterwert {{ filterValue }} für Filter löschen: {{ filterLabel }}",
  _A_FILTERS_HOR_FILTER_HEADER_: mG,
  _A_FILTERS_HOR_FILTER_NEW_: SG,
  "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_": "Filter öffnen: {{ filterLabel }} mit Wert {{ filterValue }}",
  _A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_: bG,
  _A_FILTERS_SAVE_LABEL_NAME_: LG,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: vG,
  _A_FILTERS_SAVE_MODAL_HEADER_: IG,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": 'Der Filter mit dem Namen <strong>"{{ name }}"</strong> wird beim Speichern aktualisiert.',
  _A_FILTERS_SAVE_MSG_ERROR_: yG,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": 'Neuer Filter <strong>"{{ name }}"</strong> ist gespeichert.',
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": 'Filter <strong>"{{ name }}"</strong> ist aktualisiert.',
  _A_FILTERS_SAVE_SELECT_: gG,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} ausgewählt",
  _A_FILTERS_START_SEARCH_: RG,
  _A_FILTERS_TOP_CLOSE_: OG
}, NG = "_A_FILTERS_ADD_FILTER_", DG = "Close advanced search", BG = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", wG = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", PG = "Reset selection", xG = "Open advanced search", FG = "_A_FILTERS_SAVE_BTN_", MG = "_A_FILTERS_SAVE_LABEL_NAME_", qG = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", $G = "_A_FILTERS_SAVE_MODAL_HEADER_", kG = "_A_FILTERS_SAVE_MSG_ERROR_", UG = "My saved searches", HG = "start search", VG = "_A_FILTERS_TOP_CLOSE_", WG = "Your selection", GG = {
  _A_FILTERS_ADD_FILTER_: NG,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: DG,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: BG,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: wG,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_DESELECT_ALL_: PG,
  "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_": "Clear filter value {{ filterValue }} for filter: {{ filterLabel }}",
  "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_": "Open filter: {{ filterLabel }} with value {{ filterValue }}",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: xG,
  _A_FILTERS_SAVE_BTN_: FG,
  _A_FILTERS_SAVE_LABEL_NAME_: MG,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: qG,
  _A_FILTERS_SAVE_MODAL_HEADER_: $G,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: kG,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: UG,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} selected",
  _A_FILTERS_START_SEARCH_: HG,
  _A_FILTERS_TOP_CLOSE_: VG,
  _A_FILTERS_YOUR_SELECTION_: WG
}, KG = "_A_FILTERS_ADD_FILTER_", jG = "Cerrar búsqueda avanzada", zG = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", YG = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", XG = "Abrir búsqueda avanzada", ZG = "_A_FILTERS_SAVE_BTN_", JG = "_A_FILTERS_SAVE_LABEL_NAME_", QG = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", e3 = "_A_FILTERS_SAVE_MODAL_HEADER_", t3 = "_A_FILTERS_SAVE_MSG_ERROR_", n3 = "_A_FILTERS_SAVE_SELECT_", r3 = "iniciar busqueda", a3 = "_A_FILTERS_TOP_CLOSE_", s3 = {
  _A_FILTERS_ADD_FILTER_: KG,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: jG,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: zG,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: YG,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: XG,
  _A_FILTERS_SAVE_BTN_: ZG,
  _A_FILTERS_SAVE_LABEL_NAME_: JG,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: QG,
  _A_FILTERS_SAVE_MODAL_HEADER_: e3,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: t3,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: n3,
  _A_FILTERS_START_SEARCH_: r3,
  _A_FILTERS_TOP_CLOSE_: a3
}, i3 = "_A_FILTERS_ADD_FILTER_", l3 = "Fermer la recherche avancée", o3 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", u3 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", _3 = "Ouvrir la recherche avancée", d3 = "_A_FILTERS_SAVE_BTN_", c3 = "_A_FILTERS_SAVE_LABEL_NAME_", f3 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", h3 = "_A_FILTERS_SAVE_MODAL_HEADER_", A3 = "_A_FILTERS_SAVE_MSG_ERROR_", E3 = "_A_FILTERS_SAVE_SELECT_", p3 = "lancer la recherche", T3 = "_A_FILTERS_TOP_CLOSE_", m3 = {
  _A_FILTERS_ADD_FILTER_: i3,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: l3,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: o3,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: u3,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: _3,
  _A_FILTERS_SAVE_BTN_: d3,
  _A_FILTERS_SAVE_LABEL_NAME_: c3,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: f3,
  _A_FILTERS_SAVE_MODAL_HEADER_: h3,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: A3,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: E3,
  _A_FILTERS_START_SEARCH_: p3,
  _A_FILTERS_TOP_CLOSE_: T3
}, S3 = "_A_FILTERS_ADD_FILTER_", b3 = "Zatvorite napredno pretraživanje", L3 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", v3 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", I3 = "Otvorite napredno pretraživanje", y3 = "_A_FILTERS_SAVE_BTN_", g3 = "_A_FILTERS_SAVE_LABEL_NAME_", R3 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", O3 = "_A_FILTERS_SAVE_MODAL_HEADER_", C3 = "_A_FILTERS_SAVE_MSG_ERROR_", N3 = "_A_FILTERS_SAVE_SELECT_", D3 = "Započnite pretragu", B3 = "_A_FILTERS_TOP_CLOSE_", w3 = {
  _A_FILTERS_ADD_FILTER_: S3,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: b3,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: L3,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: v3,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: I3,
  _A_FILTERS_SAVE_BTN_: y3,
  _A_FILTERS_SAVE_LABEL_NAME_: g3,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: R3,
  _A_FILTERS_SAVE_MODAL_HEADER_: O3,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: C3,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: N3,
  _A_FILTERS_START_SEARCH_: D3,
  _A_FILTERS_TOP_CLOSE_: B3
}, P3 = "_A_FILTERS_ADD_FILTER_", x3 = "Chiudi la ricerca avanzata", F3 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", M3 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", q3 = "Apri la ricerca avanzata", $3 = "_A_FILTERS_SAVE_BTN_", k3 = "_A_FILTERS_SAVE_LABEL_NAME_", U3 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", H3 = "_A_FILTERS_SAVE_MODAL_HEADER_", V3 = "_A_FILTERS_SAVE_MSG_ERROR_", W3 = "_A_FILTERS_SAVE_SELECT_", G3 = "Inizia la ricerca", K3 = "_A_FILTERS_TOP_CLOSE_", j3 = {
  _A_FILTERS_ADD_FILTER_: P3,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: x3,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: F3,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: M3,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: q3,
  _A_FILTERS_SAVE_BTN_: $3,
  _A_FILTERS_SAVE_LABEL_NAME_: k3,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: U3,
  _A_FILTERS_SAVE_MODAL_HEADER_: H3,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: V3,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: W3,
  _A_FILTERS_START_SEARCH_: G3,
  _A_FILTERS_TOP_CLOSE_: K3
}, z3 = "Новое условие фильтра", Y3 = "Удалить", X3 = "Удалить выбранный фильтр", Z3 = "Не удается удалить выбранный фильтр. (Сохраненный фильтр не выбран)", J3 = "Удалить фильтр", Q3 = "Сбросить", e4 = "Мои фильтры", t4 = "Закрыть", n4 = "Фильтр:", r4 = "Новый", a4 = "Сохранить фильтр", s4 = "Имя", i4 = "Пожалуйста, введите имя для сохраняемого фильтра. При вводе существующего имени, уже сохраненный фильтр будет обновлен. При вводе нового имени, будет сохранен новый фильтр.", l4 = "Сохранить фильтр", o4 = "Не удалось сохранить фильтр.", u4 = "Сохраненные фильтры", _4 = "Поиск", d4 = "Удалить условие фильтра", c4 = {
  _A_FILTERS_ADD_FILTER_: z3,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "Вы уверены, что хотите удалить этот сохраненный фильтр <strong>{{ name }}</strong>?",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: Y3,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "Удалить сохраненный фильтр",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "Не удалось удалить выбранный фильтр <strong>{{ name }}</strong>.",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "Выбранный фильтр <strong>{{ name }}</strong> был удален.",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_: X3,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: Z3,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_: J3,
  _A_FILTERS_DESELECT_ALL_: Q3,
  _A_FILTERS_FILTER_SAVED_GROUP_MY_: e4,
  _A_FILTERS_HOR_CLOSE_DROPDOWN_: t4,
  _A_FILTERS_HOR_FILTER_HEADER_: n4,
  _A_FILTERS_HOR_FILTER_NEW_: r4,
  _A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_: a4,
  _A_FILTERS_SAVE_LABEL_NAME_: s4,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: i4,
  _A_FILTERS_SAVE_MODAL_HEADER_: l4,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": 'Фильтр с именем <strong>"{{ name }}"</strong> будет обновлен при сохранении.',
  _A_FILTERS_SAVE_MSG_ERROR_: o4,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": 'Новый фильтр <strong>"{{ name }}"</strong> был сохранен.',
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": 'Фильтр <strong>"{{ name }}"</strong> был обновлен.',
  _A_FILTERS_SAVE_SELECT_: u4,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} выбрано",
  _A_FILTERS_START_SEARCH_: _4,
  _A_FILTERS_TOP_CLOSE_: d4
}, Ha = {
  ar: _G,
  de: CG,
  en: GG,
  es: s3,
  fr: m3,
  hr: w3,
  it: j3,
  ru: c4
}, f4 = "تقليل القيمة", h4 = "زيادة القيمة", A4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: f4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: h4
}, E4 = "Wert verringern", p4 = "Wert erhöhen", T4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: E4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: p4
}, m4 = "Decrease value", S4 = "Increase value", b4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: m4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: S4
}, L4 = "Disminuir valor", v4 = "Aumentar valor", I4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: L4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: v4
}, y4 = "Diminuer la valeur", g4 = "Augmenter la valeur", R4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: y4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: g4
}, O4 = "Smanji vrijednost", C4 = "Povećaj vrijednost", N4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: O4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: C4
}, D4 = "Diminuisci valore", B4 = "Aumenta valore", w4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: D4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: B4
}, P4 = "Уменьшить значение", x4 = "Увеличить значение", F4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: P4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: x4
}, Va = {
  ar: A4,
  de: T4,
  en: b4,
  es: I4,
  fr: R4,
  hr: N4,
  it: w4,
  ru: F4
}, M4 = "عرض كلمة المرور", q4 = "إخفاء كلمة المرور", $4 = {
  _A_INPUT_SHOW_PASSWORD_: M4,
  _A_INPUT_HIDE_PASSWORD_: q4
}, k4 = "Passwort anzeigen", U4 = "Passwort verbergen", H4 = {
  _A_INPUT_SHOW_PASSWORD_: k4,
  _A_INPUT_HIDE_PASSWORD_: U4
}, V4 = "Show password", W4 = "Hide password", G4 = {
  _A_INPUT_SHOW_PASSWORD_: V4,
  _A_INPUT_HIDE_PASSWORD_: W4
}, K4 = "Mostrar contraseña", j4 = "Ocultar contraseña", z4 = {
  _A_INPUT_SHOW_PASSWORD_: K4,
  _A_INPUT_HIDE_PASSWORD_: j4
}, Y4 = "Afficher le mot de passe", X4 = "Masquer le mot de passe", Z4 = {
  _A_INPUT_SHOW_PASSWORD_: Y4,
  _A_INPUT_HIDE_PASSWORD_: X4
}, J4 = "Prikaži lozinku", Q4 = "Sakrij lozinku", e6 = {
  _A_INPUT_SHOW_PASSWORD_: J4,
  _A_INPUT_HIDE_PASSWORD_: Q4
}, t6 = "Mostra password", n6 = "Nascondi password", r6 = {
  _A_INPUT_SHOW_PASSWORD_: t6,
  _A_INPUT_HIDE_PASSWORD_: n6
}, a6 = "Показать пароль", s6 = "Скрыть пароль", i6 = {
  _A_INPUT_SHOW_PASSWORD_: a6,
  _A_INPUT_HIDE_PASSWORD_: s6
}, Wa = {
  ar: $4,
  de: H4,
  en: G4,
  es: z4,
  fr: Z4,
  hr: e6,
  it: r6,
  ru: i6
}, l6 = "تقليل القيمة", o6 = "زيادة القيمة", u6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: l6,
  _A_INPUT_NUMBER_BTN_INCREASE_: o6
}, _6 = "Wert verringern", d6 = "Wert erhöhen", c6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: _6,
  _A_INPUT_NUMBER_BTN_INCREASE_: d6
}, f6 = "Decrease value", h6 = "Increase value", A6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: f6,
  _A_INPUT_NUMBER_BTN_INCREASE_: h6
}, E6 = "Disminuir valor", p6 = "Aumentar valor", T6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: E6,
  _A_INPUT_NUMBER_BTN_INCREASE_: p6
}, m6 = "Diminuer la valeur", S6 = "Augmenter la valeur", b6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: m6,
  _A_INPUT_NUMBER_BTN_INCREASE_: S6
}, L6 = "Smanji vrijednost", v6 = "Povećaj vrijednost", I6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: L6,
  _A_INPUT_NUMBER_BTN_INCREASE_: v6
}, y6 = "Diminuisci valore", g6 = "Aumenta valore", R6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: y6,
  _A_INPUT_NUMBER_BTN_INCREASE_: g6
}, O6 = "Уменьшить значение", C6 = "Увеличить значение", N6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: O6,
  _A_INPUT_NUMBER_BTN_INCREASE_: C6
}, Ga = {
  ar: u6,
  de: c6,
  en: A6,
  es: T6,
  fr: b6,
  hr: I6,
  it: R6,
  ru: N6
}, D6 = "من", B6 = "إلى", w6 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: D6,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: B6
}, P6 = "von", x6 = "bis", F6 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: P6,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: x6
}, M6 = "from", q6 = "to", $6 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: M6,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: q6
}, k6 = "desde", U6 = "hasta", H6 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: k6,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: U6
}, V6 = "de", W6 = "à", G6 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: V6,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: W6
}, K6 = "od", j6 = "do", z6 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: K6,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: j6
}, Y6 = "da", X6 = "a", Z6 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: Y6,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: X6
}, J6 = "от", Q6 = "до", e7 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: J6,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: Q6
}, Ka = {
  ar: w6,
  de: F6,
  en: $6,
  es: H6,
  fr: G6,
  hr: z6,
  it: Z6,
  ru: e7
}, t7 = "القيمة الحالية", n7 = "تجاهل جميع التغييرات", r7 = "تنسيق الإدخال", a7 = "إدخال", s7 = "إعادة تعيين الإدخال إلى القيمة الحالية", i7 = {
  _A_JSON_CURRENT_VALUE_: t7,
  _A_JSON_DISCARD_ALL_CHANGES_: n7,
  "_A_JSON_ERROR_HTML_{{error}}_": "لا يمكن تحويل الإدخال إلى كائن JSON. يرجى التحقق من الإدخال الخاص بك:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: r7,
  _A_JSON_INPUT_: a7,
  _A_JSON_RESET_INPUT_: s7
}, l7 = "Aktueller Wert", o7 = "Alle Änderungen verwerfen", u7 = "Eingabe formatieren", _7 = "Eingabe", d7 = "Eingabe aktuellen Wert zurücksetzen", c7 = {
  _A_JSON_CURRENT_VALUE_: l7,
  _A_JSON_DISCARD_ALL_CHANGES_: o7,
  "_A_JSON_ERROR_HTML_{{error}}_": "Die Eingabe kann nicht in ein JSON-Objekt konvertiert werden. Bitte prüfen Sie Ihre Eingabe:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: u7,
  _A_JSON_INPUT_: _7,
  _A_JSON_RESET_INPUT_: d7
}, f7 = "Current Value", h7 = "Discard All Changes", A7 = "Format Input", E7 = "Input", p7 = "Reset Input to Current Value", T7 = {
  _A_JSON_CURRENT_VALUE_: f7,
  _A_JSON_DISCARD_ALL_CHANGES_: h7,
  "_A_JSON_ERROR_HTML_{{error}}_": "Input cannot be converted into a JSON object. Please check your input:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: A7,
  _A_JSON_INPUT_: E7,
  _A_JSON_RESET_INPUT_: p7
}, m7 = "Valor actual", S7 = "Descartar todos los cambios", b7 = "Formatear entrada", L7 = "Entrada", v7 = "Restablecer entrada al valor actual", I7 = {
  _A_JSON_CURRENT_VALUE_: m7,
  _A_JSON_DISCARD_ALL_CHANGES_: S7,
  "_A_JSON_ERROR_HTML_{{error}}_": "No se puede convertir la entrada en un objeto JSON. Por favor, revise su entrada:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: b7,
  _A_JSON_INPUT_: L7,
  _A_JSON_RESET_INPUT_: v7
}, y7 = "Valeur actuelle", g7 = "Annuler toutes les modifications", R7 = "Formater l'entrée", O7 = "Entrée", C7 = "Réinitialiser l'entrée à la valeur actuelle", N7 = {
  _A_JSON_CURRENT_VALUE_: y7,
  _A_JSON_DISCARD_ALL_CHANGES_: g7,
  "_A_JSON_ERROR_HTML_{{error}}_": "L'entrée ne peut pas être convertie en objet JSON. Veuillez vérifier votre entrée:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: R7,
  _A_JSON_INPUT_: O7,
  _A_JSON_RESET_INPUT_: C7
}, D7 = "Trenutna vrijednost", B7 = "Odbaci sve promjene", w7 = "Formatiraj unos", P7 = "Unos", x7 = "Poništi unos na trenutnu vrijednost", F7 = {
  _A_JSON_CURRENT_VALUE_: D7,
  _A_JSON_DISCARD_ALL_CHANGES_: B7,
  "_A_JSON_ERROR_HTML_{{error}}_": "Unos se ne može pretvoriti u JSON objekt. Molimo provjerite svoj unos:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: w7,
  _A_JSON_INPUT_: P7,
  _A_JSON_RESET_INPUT_: x7
}, M7 = "Valore attuale", q7 = "Annulla tutte le modifiche", $7 = "Formatta input", k7 = "Input", U7 = "Reimposta input al valore corrente", H7 = {
  _A_JSON_CURRENT_VALUE_: M7,
  _A_JSON_DISCARD_ALL_CHANGES_: q7,
  "_A_JSON_ERROR_HTML_{{error}}_": "L'input non può essere convertito in un oggetto JSON. Si prega di controllare l'input:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: $7,
  _A_JSON_INPUT_: k7,
  _A_JSON_RESET_INPUT_: U7
}, V7 = "Текущее значение", W7 = "Отменить все изменения", G7 = "Форматировать ввод", K7 = "Ввод", j7 = "Сбросить ввод до текущего значения", z7 = {
  _A_JSON_CURRENT_VALUE_: V7,
  _A_JSON_DISCARD_ALL_CHANGES_: W7,
  "_A_JSON_ERROR_HTML_{{error}}_": "Ввод не может быть преобразован в объект JSON. Пожалуйста, проверьте ваш ввод:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: G7,
  _A_JSON_INPUT_: K7,
  _A_JSON_RESET_INPUT_: j7
}, ja = {
  ar: i7,
  de: c7,
  en: T7,
  es: I7,
  fr: N7,
  hr: F7,
  it: H7,
  ru: z7
}, Y7 = "نسخ إلى الحافظة", X7 = "تم النسخ إلى الحافظة", Z7 = {
  _A_LINK_COPY_BTN_TITLE_: Y7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: X7
}, J7 = "In die Zwischenablage kopieren", Q7 = "In die Zwischenablage kopiert", e8 = {
  _A_LINK_COPY_BTN_TITLE_: J7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: Q7
}, t8 = "Copy to clipboard", n8 = "Copied to clipboard", r8 = {
  _A_LINK_COPY_BTN_TITLE_: t8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: n8
}, a8 = "Copiar al portapapeles", s8 = "Copiado al portapapeles", i8 = {
  _A_LINK_COPY_BTN_TITLE_: a8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: s8
}, l8 = "Copier dans le presse-papiers", o8 = "Copié dans le presse-papiers", u8 = {
  _A_LINK_COPY_BTN_TITLE_: l8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: o8
}, _8 = "Kopiraj u međuspremnik", d8 = "Kopirano u međuspremnik", c8 = {
  _A_LINK_COPY_BTN_TITLE_: _8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: d8
}, f8 = "Copia negli appunti", h8 = "Copiato negli appunti", A8 = {
  _A_LINK_COPY_BTN_TITLE_: f8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: h8
}, E8 = "Скопировать в буфер обмена", p8 = "Скопировано в буфер обмена", T8 = {
  _A_LINK_COPY_BTN_TITLE_: E8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: p8
}, za = {
  ar: Z7,
  de: e8,
  en: r8,
  es: i8,
  fr: u8,
  hr: c8,
  it: A8,
  ru: T8
}, m8 = "تحميل", S8 = {
  _A_LOADING_LOADING_: m8
}, b8 = "Wird geladen", L8 = {
  _A_LOADING_LOADING_: b8
}, v8 = "Loading", I8 = {
  _A_LOADING_LOADING_: v8
}, y8 = "Cargando", g8 = {
  _A_LOADING_LOADING_: y8
}, R8 = "Chargement", O8 = {
  _A_LOADING_LOADING_: R8
}, C8 = "Učitavam", N8 = {
  _A_LOADING_LOADING_: C8
}, D8 = "Caricamento", B8 = {
  _A_LOADING_LOADING_: D8
}, w8 = "Загрузка", P8 = {
  _A_LOADING_LOADING_: w8
}, Ya = {
  ar: S8,
  de: L8,
  en: I8,
  es: g8,
  fr: O8,
  hr: N8,
  it: B8,
  ru: P8
}, x8 = "Breadcrumb", F8 = "إظهار الروابط المخفية", M8 = "إغلاق القائمة", q8 = "فتح القائمة", $8 = "إغلاق القائمة الفرعية:", k8 = "القائمة الرئيسية", U8 = "فتح بحث القائمة", H8 = "فتح القائمة الفرعية:", V8 = "بحث القائمة", W8 = "لم يتم العثور على عناصر القائمة", G8 = "إلى القائمة الرئيسية", K8 = {
  _A_MENU_2_BREADCRUMB_: x8,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: F8,
  _A_MENU_2_BTN_CLOSE_: M8,
  _A_MENU_2_BTN_OPEN_: q8,
  _A_MENU_2_CLOSE_SUBMENU_: $8,
  _A_MENU_2_MAIN_MENU_: k8,
  _A_MENU_2_OPEN_SEARCH_: U8,
  _A_MENU_2_OPEN_SUBMENU_: H8,
  _A_MENU_2_SEARCH_: V8,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "تم العثور على {{ count }} من عناصر القائمة",
  _A_MENU_2_SEARCH_NONE_FOUND_: W8,
  _A_MENU_2_TO_MAIN_MENU_: G8
}, j8 = "Breadcrumb", z8 = "Versteckte Links", Y8 = "Menü schließen", X8 = "Menü öffnen", Z8 = "Untermenü schließen:", J8 = "Hauptmenü", Q8 = "Öffnen Menüsuche", eK = "Untermenü öffnen:", tK = "Menüsuche", nK = "Keine Menüeinträge gefunden", rK = "Zum Hauptmenü", aK = {
  _A_MENU_2_BREADCRUMB_: j8,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: z8,
  _A_MENU_2_BTN_CLOSE_: Y8,
  _A_MENU_2_BTN_OPEN_: X8,
  _A_MENU_2_CLOSE_SUBMENU_: Z8,
  _A_MENU_2_MAIN_MENU_: J8,
  _A_MENU_2_OPEN_SEARCH_: Q8,
  _A_MENU_2_OPEN_SUBMENU_: eK,
  _A_MENU_2_SEARCH_: tK,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} Menüeinträge gefunden",
  _A_MENU_2_SEARCH_NONE_FOUND_: nK,
  _A_MENU_2_TO_MAIN_MENU_: rK
}, sK = "Breadcrumb", iK = "Show Hidden Links", lK = "Close Menu", oK = "Open Menu", uK = "Close Submenu:", _K = "Main Menu", dK = "Open Menu Search", cK = "Open Submenu:", fK = "Menu Search", hK = "No Menu Entries Found", AK = "To Main Menu", EK = {
  _A_MENU_2_BREADCRUMB_: sK,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: iK,
  _A_MENU_2_BTN_CLOSE_: lK,
  _A_MENU_2_BTN_OPEN_: oK,
  _A_MENU_2_CLOSE_SUBMENU_: uK,
  _A_MENU_2_MAIN_MENU_: _K,
  _A_MENU_2_OPEN_SEARCH_: dK,
  _A_MENU_2_OPEN_SUBMENU_: cK,
  _A_MENU_2_SEARCH_: fK,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} Menu Entries Found",
  _A_MENU_2_SEARCH_NONE_FOUND_: hK,
  _A_MENU_2_TO_MAIN_MENU_: AK
}, pK = "Breadcrumb", TK = "Mostrar enlaces ocultos", mK = "Cerrar menú", SK = "Abrir menú", bK = "Cerrar submenú:", LK = "Menú principal", vK = "Abrir búsqueda en menú", IK = "Abrir submenú:", yK = "Búsqueda en menú", gK = "No se encontraron entradas de menú", RK = "Al menú principal", OK = {
  _A_MENU_2_BREADCRUMB_: pK,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: TK,
  _A_MENU_2_BTN_CLOSE_: mK,
  _A_MENU_2_BTN_OPEN_: SK,
  _A_MENU_2_CLOSE_SUBMENU_: bK,
  _A_MENU_2_MAIN_MENU_: LK,
  _A_MENU_2_OPEN_SEARCH_: vK,
  _A_MENU_2_OPEN_SUBMENU_: IK,
  _A_MENU_2_SEARCH_: yK,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} entradas de menú encontradas",
  _A_MENU_2_SEARCH_NONE_FOUND_: gK,
  _A_MENU_2_TO_MAIN_MENU_: RK
}, CK = "Breadcrumb", NK = "Afficher les liens cachés", DK = "Fermer le menu", BK = "Ouvrir le menu", wK = "Fermer le sous-menu :", PK = "Menu principal", xK = "Ouvrir la recherche dans le menu", FK = "Ouvrir le sous-menu :", MK = "Recherche dans le menu", qK = "Aucune entrée de menu trouvée", $K = "Au menu principal", kK = {
  _A_MENU_2_BREADCRUMB_: CK,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: NK,
  _A_MENU_2_BTN_CLOSE_: DK,
  _A_MENU_2_BTN_OPEN_: BK,
  _A_MENU_2_CLOSE_SUBMENU_: wK,
  _A_MENU_2_MAIN_MENU_: PK,
  _A_MENU_2_OPEN_SEARCH_: xK,
  _A_MENU_2_OPEN_SUBMENU_: FK,
  _A_MENU_2_SEARCH_: MK,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} entrées de menu trouvées",
  _A_MENU_2_SEARCH_NONE_FOUND_: qK,
  _A_MENU_2_TO_MAIN_MENU_: $K
}, UK = "_A_MENU_2_BREADCRUMB_", HK = "_A_MENU_2_BREADCRUMB_SHOW_BTN_", VK = "Zatvaranje izbornika", WK = "Otvaranje izbornika", GK = "Glavni izbornik", KK = "Zatvaranje podizbornika", jK = "Otvaranje pretraživanja", zK = "Otvaranje podizbornika:", YK = "Pretraživanje izbornika", XK = "Nisu pronađeni rezultati pretraživanja", ZK = "Natrag na glavni izbornik", JK = {
  _A_MENU_2_BREADCRUMB_: UK,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: HK,
  _A_MENU_2_BTN_CLOSE_: VK,
  _A_MENU_2_BTN_OPEN_: WK,
  _A_MENU_2_MAIN_MENU_: GK,
  _A_MENU_2_CLOSE_SUBMENU_: KK,
  _A_MENU_2_OPEN_SEARCH_: jK,
  _A_MENU_2_OPEN_SUBMENU_: zK,
  _A_MENU_2_SEARCH_: YK,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "Broj pronađenih rezultata: {{ count }}",
  _A_MENU_2_SEARCH_NONE_FOUND_: XK,
  _A_MENU_2_TO_MAIN_MENU_: ZK
}, QK = "Breadcrumb", ej = "Mostra link nascosti", tj = "Chiudi menu", nj = "Apri menu", rj = "Chiudi sottomenu:", aj = "Menu principale", sj = "Apri ricerca nel menu", ij = "Apri sottomenu:", lj = "Ricerca nel menu", oj = "Nessuna voce di menu trovata", uj = "Al menu principale", _j = {
  _A_MENU_2_BREADCRUMB_: QK,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: ej,
  _A_MENU_2_BTN_CLOSE_: tj,
  _A_MENU_2_BTN_OPEN_: nj,
  _A_MENU_2_CLOSE_SUBMENU_: rj,
  _A_MENU_2_MAIN_MENU_: aj,
  _A_MENU_2_OPEN_SEARCH_: sj,
  _A_MENU_2_OPEN_SUBMENU_: ij,
  _A_MENU_2_SEARCH_: lj,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} voci di menu trovate",
  _A_MENU_2_SEARCH_NONE_FOUND_: oj,
  _A_MENU_2_TO_MAIN_MENU_: uj
}, dj = "Breadcrumb", cj = "Скрытые ссылки", fj = "Закрыть меню", hj = "Открыть меню", Aj = "Главное меню", Ej = "Закрыть подменю:", pj = "Открыть поиск в меню", Tj = "Открыть подменю:", mj = "Поиск в меню", Sj = "Пункты меню не найдены", bj = "В главное меню", Lj = {
  _A_MENU_2_BREADCRUMB_: dj,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: cj,
  _A_MENU_2_BTN_CLOSE_: fj,
  _A_MENU_2_BTN_OPEN_: hj,
  _A_MENU_2_MAIN_MENU_: Aj,
  _A_MENU_2_CLOSE_SUBMENU_: Ej,
  _A_MENU_2_OPEN_SEARCH_: pj,
  _A_MENU_2_OPEN_SUBMENU_: Tj,
  _A_MENU_2_SEARCH_: mj,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "Найдены пункты меню: {{ count }}",
  _A_MENU_2_SEARCH_NONE_FOUND_: Sj,
  _A_MENU_2_TO_MAIN_MENU_: bj
}, Xa = {
  ar: K8,
  de: aK,
  en: EK,
  es: OK,
  fr: kK,
  hr: JK,
  it: _j,
  ru: Lj
}, vj = "قطع", Ij = "حفظ", yj = "إغلاق النافذة المنبثقة (موجودة في الرأس)", gj = "إغلاق النافذة المنبثقة (موجودة في التذييل)", Rj = "حفظ البيانات في النافذة المنبثقة", Oj = {
  _A_MODAL_BTN_CANCEL_: vj,
  _A_MODAL_BTN_SAVE_: Ij,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: yj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: gj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: Rj
}, Cj = "Abbrechen", Nj = "Speichern", Dj = "Modales Fenster schließen (im Header angeordnet)", Bj = "Modales Fenster schließen (im Footer angeordnet)", wj = "Daten im modalen Fenster speichern", Pj = {
  _A_MODAL_BTN_CANCEL_: Cj,
  _A_MODAL_BTN_SAVE_: Nj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: Dj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: Bj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: wj
}, xj = "cancel", Fj = "save", Mj = "Close modal window (located in the header)", qj = "Close modal window (located in the footer)", $j = "Save data in the modal window", kj = {
  _A_MODAL_BTN_CANCEL_: xj,
  _A_MODAL_BTN_SAVE_: Fj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: Mj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: qj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: $j
}, Uj = "Interrumpir", Hj = "Guardar", Vj = "Cerrar ventana modal (ubicada en el encabezado)", Wj = "Cerrar ventana modal (ubicada en el pie de página)", Gj = "Guardar los datos en la ventana modal", Kj = {
  _A_MODAL_BTN_CANCEL_: Uj,
  _A_MODAL_BTN_SAVE_: Hj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: Vj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: Wj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: Gj
}, jj = "Interrompre", zj = "Enregistrer", Yj = "Fermer la fenêtre modale (située dans l'en-tête)", Xj = "Fermer la fenêtre modale (située dans le pied de page)", Zj = "Enregistrer les données dans la fenêtre modale", Jj = {
  _A_MODAL_BTN_CANCEL_: jj,
  _A_MODAL_BTN_SAVE_: zj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: Yj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: Xj,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: Zj
}, Qj = "Odustani", e9 = "Spremi", t9 = "Zatvori modalni prozor (smještena u zaglavlju)", n9 = "Zatvori modalni prozor (smještena u podnožju)", r9 = "Spremi podatke u modalnom prozoru", a9 = {
  _A_MODAL_BTN_CANCEL_: Qj,
  _A_MODAL_BTN_SAVE_: e9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: t9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: n9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: r9
}, s9 = "Interrompere", i9 = "Salva", l9 = "Chiudi finestra modale (situata nell'intestazione)", o9 = "Chiudi finestra modale (situata nel piè di pagina)", u9 = "Salva i dati nella finestra modale", _9 = {
  _A_MODAL_BTN_CANCEL_: s9,
  _A_MODAL_BTN_SAVE_: i9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: l9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: o9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: u9
}, d9 = "Прервать", c9 = "Сохранить", f9 = "Закрыть модальное окно (расположена в хедере)", h9 = "Закрыть модальное окно (расположена в футере)", A9 = "Сохранить данные в модальном окне", E9 = {
  _A_MODAL_BTN_CANCEL_: d9,
  _A_MODAL_BTN_SAVE_: c9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: f9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: h9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: A9
}, Za = {
  ar: Oj,
  de: Pj,
  en: kj,
  es: Kj,
  fr: Jj,
  hr: a9,
  it: _9,
  ru: E9
}, p9 = "[ALOHA]", T9 = "[ALOHA]", m9 = "[ALOHA]", S9 = "التنقل بين الصفحات", b9 = "[ALOHA]", L9 = "[ALOHA]", v9 = {
  _A_COUNT_PER_PAGE_: p9,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: T9,
  _A_PAGINATION_LAST_PAGE_: m9,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ allPages }}ل {{ currentPage }}",
  _A_PAGINATION_NAVIGATION_: S9,
  _A_PAGINATION_NEXT_PAGE_: b9,
  _A_PAGINATION_PREVIOUS_PAGE_: L9,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, I9 = "Pro Seite:", y9 = "Zur ersten Seite", g9 = "Zur letzten Seite", R9 = "Paginierungsnavigation", O9 = "Zur nächsten Seite", C9 = "Zur vorherigen Seite", N9 = {
  _A_COUNT_PER_PAGE_: I9,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Zeilen pro Seite: {{ count }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} von {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: y9,
  _A_PAGINATION_LAST_PAGE_: g9,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} von {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: R9,
  _A_PAGINATION_NEXT_PAGE_: O9,
  _A_PAGINATION_PREVIOUS_PAGE_: C9,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "Zur Seite Nummer {{ page }}"
}, D9 = "Per page:", B9 = "To first page", w9 = "To last page", P9 = "Pagination navigation", x9 = "To next page", F9 = "To previous page", M9 = {
  _A_COUNT_PER_PAGE_: D9,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Items per page:",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} to {{ current }} of {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: B9,
  _A_PAGINATION_LAST_PAGE_: w9,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} of {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: P9,
  _A_PAGINATION_NEXT_PAGE_: x9,
  _A_PAGINATION_PREVIOUS_PAGE_: F9,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "To page {{ page }}"
}, q9 = "[ALOHA]", $9 = "[ALOHA]", k9 = "[ALOHA]", U9 = "Navegación de paginación", H9 = "[ALOHA]", V9 = "[ALOHA]", W9 = {
  _A_COUNT_PER_PAGE_: q9,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: $9,
  _A_PAGINATION_LAST_PAGE_: k9,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} de {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: U9,
  _A_PAGINATION_NEXT_PAGE_: H9,
  _A_PAGINATION_PREVIOUS_PAGE_: V9,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, G9 = "[ALOHA]", K9 = "[ALOHA]", j9 = "[ALOHA]", z9 = "Navigation dans la pagination", Y9 = "[ALOHA]", X9 = "[ALOHA]", Z9 = {
  _A_COUNT_PER_PAGE_: G9,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: K9,
  _A_PAGINATION_LAST_PAGE_: j9,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} de {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: z9,
  _A_PAGINATION_NEXT_PAGE_: Y9,
  _A_PAGINATION_PREVIOUS_PAGE_: X9,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, J9 = "Po stranici:", Q9 = "[ALOHA]", ez = "[ALOHA]", tz = "Navigacija po stranicama", nz = "[ALOHA]", rz = "[ALOHA]", az = {
  _A_COUNT_PER_PAGE_: J9,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Broj redaka po stranici: {{ count }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} od {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: Q9,
  _A_PAGINATION_LAST_PAGE_: ez,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} iz {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: tz,
  _A_PAGINATION_NEXT_PAGE_: nz,
  _A_PAGINATION_PREVIOUS_PAGE_: rz,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, sz = "[ALOHA]", iz = "[ALOHA]", lz = "[ALOHA]", oz = "Navigazione dell'impaginazione", uz = "[ALOHA]", _z = "[ALOHA]", dz = {
  _A_COUNT_PER_PAGE_: sz,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: iz,
  _A_PAGINATION_LAST_PAGE_: lz,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} Di {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: oz,
  _A_PAGINATION_NEXT_PAGE_: uz,
  _A_PAGINATION_PREVIOUS_PAGE_: _z,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, cz = "На странице:", fz = "К первой странице", hz = "К последней странице", Az = "Навигация по страницам", Ez = "К следующей странице", pz = "К предыдущей странице", Tz = {
  _A_COUNT_PER_PAGE_: cz,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Строк на странице: {{ cont }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} из {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: fz,
  _A_PAGINATION_LAST_PAGE_: hz,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} из {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: Az,
  _A_PAGINATION_NEXT_PAGE_: Ez,
  _A_PAGINATION_PREVIOUS_PAGE_: pz,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "К странице номер {{ page }}"
}, Ja = {
  ar: v9,
  de: N9,
  en: M9,
  es: W9,
  fr: Z9,
  hr: az,
  it: dz,
  ru: Tz
}, mz = "[لا توجد عناصر متاحة للاختيار]", Sz = "بحث", bz = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: mz,
  _A_RADIO_SEARCH_: Sz
}, Lz = "[Keine Elemente zur Auswahl verfügbar]", vz = "Suche", Iz = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: Lz,
  _A_RADIO_SEARCH_: vz
}, yz = "[No items available for selection]", gz = "Search", Rz = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: yz,
  _A_RADIO_SEARCH_: gz
}, Oz = "[No hay elementos disponibles para seleccionar]", Cz = "Buscar", Nz = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: Oz,
  _A_RADIO_SEARCH_: Cz
}, Dz = "[Aucun élément disponible pour la sélection]", Bz = "Recherche", wz = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: Dz,
  _A_RADIO_SEARCH_: Bz
}, Pz = "[Nema dostupnih elemenata za odabir]", xz = "Pretraživanje", Fz = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: Pz,
  _A_RADIO_SEARCH_: xz
}, Mz = "[Nessun elemento disponibile per la selezione]", qz = "Cerca", $z = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: Mz,
  _A_RADIO_SEARCH_: qz
}, kz = "[Нет элементов для выбора]", Uz = "Поиск", Hz = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: kz,
  _A_RADIO_SEARCH_: Uz
}, Qa = {
  ar: bz,
  de: Iz,
  en: Rz,
  es: Nz,
  fr: wz,
  hr: Fz,
  it: $z,
  ru: Hz
}, Vz = "الحقول المميزة بعلامة النجمة * مطلوبة.", Wz = {
  _A_REQUIRED_TEXT_: Vz
}, Gz = "Die mit *Sternchen versehenen Felder sind Pflichtfelder.", Kz = {
  _A_REQUIRED_TEXT_: Gz
}, jz = "Fields marked with an asterisk * are required.", zz = {
  _A_REQUIRED_TEXT_: jz
}, Yz = "Los campos marcados con un asterisco * son obligatorios.", Xz = {
  _A_REQUIRED_TEXT_: Yz
}, Zz = "Les champs marqués d'un astérisque * sont obligatoires.", Jz = {
  _A_REQUIRED_TEXT_: Zz
}, Qz = "Polja označena zvjezdicom * su obavezna.", eY = {
  _A_REQUIRED_TEXT_: Qz
}, tY = "I campi contrassegnati con un asterisco * sono obbligatori.", nY = {
  _A_REQUIRED_TEXT_: tY
}, rY = "Поля, отмеченные звездочкой *, являются обязательными.", aY = {
  _A_REQUIRED_TEXT_: rY
}, es = {
  ar: Wz,
  de: Kz,
  en: zz,
  es: Xz,
  fr: Jz,
  hr: eY,
  it: nY,
  ru: aY
}, sY = "عرض كلمة المرور", iY = "إخفاء كلمة المرور", lY = {
  _A_INPUT_SHOW_PASSWORD_: sY,
  _A_INPUT_HIDE_PASSWORD_: iY
}, oY = "Dynamische Parameter werden in Routen verwendet, um Daten innerhalb des Pfads zu übergeben. Sie werden durch einen Doppelpunkt <code>:</code> vor dem Parameternamen gekennzeichnet, zum Beispiel: <code>/user/:id</code>. Beim Navigieren wird dieser Parameter durch einen bestimmten Wert ersetzt, z. B.: <code>/user/123</code>.", uY = '<span lang="en">URL</span>-Parameter ermöglichen das Übertragen zusätzlicher Informationen in der Anfrage. Sie werden nach dem <code>?</code>-Zeichen in der Adressleiste hinzugefügt und im Format "Schlüssel=Wert" geschrieben. Zum Beispiel: <code>?limit=10&sort=asc</code>.', _Y = "Die Adresse bestimmt, wohin der Link führt. Sie kann statisch sein (z. B. <code>/home</code>) oder dynamische Parameter enthalten (z. B. <code>/user/:id</code>). Wählen Sie die Adresse für die Navigation.", dY = "Legt fest, wo der Link geöffnet wird. Verfügbare Optionen: im selben Fenster (<code>_self</code>), in einem neuen Fenster oder Tab (<code>_blank</code>), im übergeordneten Frame (<code>_parent</code>) oder im äußersten Frame (<code>_top</code>).", cY = "Dynamische Parameter", fY = '<span lang="en">URL</span>-Parameter', hY = "Adresse auswählen", AY = '<span lang="en">target</span>-Attribut', EY = 'In einem neuen Tab öffnen <strong lang="en">_blank</strong>', pY = 'Im übergeordneten Frame öffnen <strong lang="en">_parent</strong>', TY = 'Im selben Fenster öffnen <strong lang="en">_self</strong>', mY = 'Im äußersten Frame öffnen <strong lang="en">_top</strong>', SY = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: oY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: uY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: _Y,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: dY,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: cY,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: fY,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: hY,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: AY,
  _A_TARGET_BLANK_: EY,
  _A_TARGET_PARENT_: pY,
  _A_TARGET_SELF_: TY,
  _A_TARGET_TOP_: mY
}, bY = "Dynamic parameters are used in routes to pass data within the path. They are denoted by a colon <code>:</code> before the parameter name, for example: <code>/user/:id</code>. When navigating, this parameter is replaced with a specific value, such as: <code>/user/123</code>.", LY = '<span lang="en">URL</span> parameters allow passing additional information in the request. They are added after the <code>?</code> symbol in the address bar and follow the format "key=value". For example: <code>?limit=10&sort=asc</code>.', vY = "The address determines where the link will navigate. It can be static (e.g., <code>/home</code>) or contain dynamic parameters (e.g., <code>/user/:id</code>). Select the address for navigation.", IY = "Defines where the link will open. Available options: in the same window (<code>_self</code>), in a new window or tab (<code>_blank</code>), in the parent frame (<code>_parent</code>), or in the outermost frame (<code>_top</code>).", yY = "Dynamic parameters", gY = '<span lang="en">URL</span> parameters', RY = "Select address", OY = '<span lang="en">target</span> attribute', CY = 'Open in a new tab <strong lang="en">_blank</strong>', NY = 'Open in the parent frame <strong lang="en">_parent</strong>', DY = 'Open in the same window <strong lang="en">_self</strong>', BY = 'Open in the outermost frame <strong lang="en">_top</strong>', wY = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: bY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: LY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: vY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: IY,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: yY,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: gY,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: RY,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: OY,
  _A_TARGET_BLANK_: CY,
  _A_TARGET_PARENT_: NY,
  _A_TARGET_SELF_: DY,
  _A_TARGET_TOP_: BY
}, PY = "Los parámetros dinámicos se utilizan en las rutas para transmitir datos dentro de la ruta. Se denotan con dos puntos <code>:</code> antes del nombre del parámetro, por ejemplo: <code>/user/:id</code>. Al navegar, este parámetro se reemplaza con un valor específico, como: <code>/user/123</code>.", xY = 'Los parámetros de <span lang="en">URL</span> permiten enviar información adicional en la solicitud. Se agregan después del símbolo <code>?</code> en la barra de direcciones y tienen el formato "clave=valor". Por ejemplo: <code>?limit=10&sort=asc</code>.', FY = "La dirección determina a dónde llevará el enlace. Puede ser estática (por ejemplo, <code>/home</code>) o contener parámetros dinámicos (por ejemplo, <code>/user/:id</code>). Seleccione la dirección de navegación.", MY = "Define dónde se abrirá el enlace. Opciones disponibles: en la misma ventana (<code>_self</code>), en una nueva ventana o pestaña (<code>_blank</code>), en el marco padre (<code>_parent</code>) o en el marco superior (<code>_top</code>).", qY = "Parámetros dinámicos", $Y = 'Parámetros de <span lang="en">URL</span>', kY = "Seleccionar dirección", UY = 'Atributo <span lang="en">target</span>', HY = 'Abrir en una nueva pestaña <strong lang="en">_blank</strong>', VY = 'Abrir en el marco padre <strong lang="en">_parent</strong>', WY = 'Abrir en la misma ventana <strong lang="en">_self</strong>', GY = 'Abrir en el marco superior <strong lang="en">_top</strong>', KY = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: PY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: xY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: FY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: MY,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: qY,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: $Y,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: kY,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: UY,
  _A_TARGET_BLANK_: HY,
  _A_TARGET_PARENT_: VY,
  _A_TARGET_SELF_: WY,
  _A_TARGET_TOP_: GY
}, jY = "Les paramètres dynamiques sont utilisés dans les routes pour transmettre des données dans le chemin. Ils sont indiqués par un deux-points <code>:</code> avant le nom du paramètre, par exemple : <code>/user/:id</code>. Lors de la navigation, ce paramètre est remplacé par une valeur spécifique, comme : <code>/user/123</code>.", zY = `Les paramètres <span lang="en">URL</span> permettent de transmettre des informations supplémentaires dans la requête. Ils sont ajoutés après le symbole <code>?</code> dans la barre d'adresse et sont formatés en "clé=valeur". Par exemple : <code>?limit=10&sort=asc</code>.`, YY = "L'adresse détermine où le lien dirigera. Elle peut être statique (ex. <code>/home</code>) ou contenir des paramètres dynamiques (ex. <code>/user/:id</code>). Sélectionnez l'adresse de navigation.", XY = "Définit où le lien s'ouvrira. Options disponibles : dans la même fenêtre (<code>_self</code>), dans une nouvelle fenêtre ou un nouvel onglet (<code>_blank</code>), dans le cadre parent (<code>_parent</code>) ou dans le cadre principal (<code>_top</code>).", ZY = "Paramètres dynamiques", JY = 'Paramètres <span lang="en">URL</span>', QY = "Choisir une adresse", eX = 'Attribut <span lang="en">target</span>', tX = 'Ouvrir dans un nouvel onglet <strong lang="en">_blank</strong>', nX = 'Ouvrir dans le cadre parent <strong lang="en">_parent</strong>', rX = 'Ouvrir dans la même fenêtre <strong lang="en">_self</strong>', aX = 'Ouvrir dans le cadre principal <strong lang="en">_top</strong>', sX = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: jY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: zY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: YY,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: XY,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: ZY,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: JY,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: QY,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: eX,
  _A_TARGET_BLANK_: tX,
  _A_TARGET_PARENT_: nX,
  _A_TARGET_SELF_: rX,
  _A_TARGET_TOP_: aX
}, iX = "Dinamički parametri koriste se u rutama za prijenos podataka unutar putanje. Označeni su dvotočkom <code>:</code> ispred naziva parametra, primjer: <code>/user/:id</code>. Prilikom navigacije, ovaj parametar zamjenjuje se specifičnom vrijednošću, primjer: <code>/user/123</code>.", lX = 'Parametri <span lang="en">URL</span> omogućuju prijenos dodatnih informacija u zahtjevu. Dodaju se nakon simbola <code>?</code> u adresnoj traci i zapisani su u formatu "ključ=vrijednost". Na primjer: <code>?limit=10&sort=asc</code>.', oX = "Adresa određuje kamo će veza voditi. Može biti statična (npr. <code>/home</code>) ili sadržavati dinamičke parametre (npr. <code>/user/:id</code>). Odaberite adresu za navigaciju.", uX = "Određuje gdje će se veza otvoriti. Dostupne opcije: u istom prozoru (<code>_self</code>), u novom prozoru ili kartici (<code>_blank</code>), u roditeljskom okviru (<code>_parent</code>) ili u najvišem okviru (<code>_top</code>).", _X = "Dinamički parametri", dX = 'Parametri <span lang="en">URL</span>', cX = "Odaberi adresu", fX = 'Atribut <span lang="en">target</span>', hX = 'Otvori u novoj kartici <strong lang="en">_blank</strong>', AX = 'Otvori u roditeljskom okviru <strong lang="en">_parent</strong>', EX = 'Otvori u istom prozoru <strong lang="en">_self</strong>', pX = 'Otvori u najvišem okviru <strong lang="en">_top</strong>', TX = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: iX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: lX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: oX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: uX,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: _X,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: dX,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: cX,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: fX,
  _A_TARGET_BLANK_: hX,
  _A_TARGET_PARENT_: AX,
  _A_TARGET_SELF_: EX,
  _A_TARGET_TOP_: pX
}, mX = "I parametri dinamici vengono utilizzati nelle rotte per trasmettere dati all'interno del percorso. Sono indicati con due punti <code>:</code> prima del nome del parametro, ad esempio: <code>/user/:id</code>. Durante la navigazione, questo parametro viene sostituito con un valore specifico, ad esempio: <code>/user/123</code>.", SX = 'I parametri <span lang="en">URL</span> consentono di trasmettere informazioni aggiuntive nella richiesta. Vengono aggiunti dopo il simbolo <code>?</code> nella barra degli indirizzi e sono scritti nel formato "chiave=valore". Ad esempio: <code>?limit=10&sort=asc</code>.', bX = "L'indirizzo determina dove porterà il link. Può essere statico (ad esempio, <code>/home</code>) o contenere parametri dinamici (ad esempio, <code>/user/:id</code>). Selezionare l'indirizzo per la navigazione.", LX = "Definisce dove si aprirà il link. Opzioni disponibili: nella stessa finestra (<code>_self</code>), in una nuova finestra o scheda (<code>_blank</code>), nel frame padre (<code>_parent</code>) o nel frame superiore (<code>_top</code>).", vX = "Parametri dinamici", IX = 'Parametri <span lang="en">URL</span>', yX = "Seleziona indirizzo", gX = 'Attributo <span lang="en">target</span>', RX = 'Apri in una nuova scheda <strong lang="en">_blank</strong>', OX = 'Apri nel frame padre <strong lang="en">_parent</strong>', CX = 'Apri nella stessa finestra <strong lang="en">_self</strong>', NX = 'Apri nel frame superiore <strong lang="en">_top</strong>', DX = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: mX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: SX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: bX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: LX,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: vX,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: IX,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: yX,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: gX,
  _A_TARGET_BLANK_: RX,
  _A_TARGET_PARENT_: OX,
  _A_TARGET_SELF_: CX,
  _A_TARGET_TOP_: NX
}, BX = "Динамические параметры используются в маршрутах для передачи данных внутри пути. Они обозначаются двоеточием <code>:</code> перед именем параметра, например: <code>/user/:id</code>. При переходе этот параметр заменяется конкретным значением, например: <code>/user/123</code>.", wX = 'Параметры <span lang="en">URL</span> позволяют передавать дополнительную информацию в запросе. Они добавляются после знака <code>?</code> в адресной строке и записываются в формате «ключ=значение». Например: <code>?limit=10&sort=asc</code>.', PX = "Адрес определяет, куда будет вести ссылка. Он может быть статическим (например, <code>/home</code>) или содержать динамические параметры (например, <code>/user/:id</code>). Выберите адрес, по которому будет происходить навигация.", xX = "Определяет, где будет открываться ссылка. Доступные варианты: в том же окне (<code>_self</code>), в новом окне или вкладке (<code>_blank</code>), в родительском фрейме (<code>_parent</code>) или во внешнем фрейме (<code>_top</code>).", FX = "Динамические параметры", MX = 'Параметры <span lang="en">URL</span>', qX = "Выберите адрес", $X = 'Атрибут <span lang="en">target</span>', kX = 'Открыть в новой вкладке <strong lang="en">_blank</strong>', UX = 'Открыть в родительском фрейме <strong lang="en">_parent</strong>', HX = 'Открыть в этом же окне <strong lang="en">_self</strong>', VX = 'Открыть во внешнем фрейме <strong lang="en">_top</strong>', WX = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: BX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: wX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: PX,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: xX,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: FX,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: MX,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: qX,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: $X,
  _A_TARGET_BLANK_: kX,
  _A_TARGET_PARENT_: UX,
  _A_TARGET_SELF_: HX,
  _A_TARGET_TOP_: VX
}, ts = {
  ar: lY,
  de: SY,
  en: wY,
  es: KY,
  fr: sX,
  hr: TX,
  it: DX,
  ru: WX
}, GX = "اختر هذا الخيار فقط", KX = "[No choices]", jX = "Search", zX = {
  _A_SELECT_EXCLUSIVE_: GX,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: KX,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: jX,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, YX = "Nur diese Option auswählen", XX = "[Keine Auswahl]", ZX = "Suche", JX = {
  _A_SELECT_EXCLUSIVE_: YX,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: XX,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} ausgewählt",
  _A_SELECT_SEARCH_: ZX,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} ausgewählt"
}, QX = "Select only this option", eZ = "[No choices]", tZ = "Search", nZ = {
  _A_SELECT_EXCLUSIVE_: QX,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: eZ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: tZ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, rZ = "Seleccionar solo esta opción", aZ = "[No choices]", sZ = "Search", iZ = {
  _A_SELECT_EXCLUSIVE_: rZ,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: aZ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: sZ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, lZ = "Sélectionner uniquement cette option", oZ = "[No choices]", uZ = "Search", _Z = {
  _A_SELECT_EXCLUSIVE_: lZ,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: oZ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: uZ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, dZ = "Odaberi samo ovu opciju", cZ = "[No choices]", fZ = "Search", hZ = {
  _A_SELECT_EXCLUSIVE_: dZ,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: cZ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: fZ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, AZ = "Seleziona solo questa opzione", EZ = "[No choices]", pZ = "Search", TZ = {
  _A_SELECT_EXCLUSIVE_: AZ,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: EZ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: pZ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, mZ = "Выбрать только этот вариант", SZ = "[Нет элементов для выбора]", bZ = "Поиск", LZ = {
  _A_SELECT_EXCLUSIVE_: mZ,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: SZ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} выбрано",
  _A_SELECT_SEARCH_: bZ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} выбрано"
}, ns = {
  ar: zX,
  de: JX,
  en: nZ,
  es: iZ,
  fr: _Z,
  hr: hZ,
  it: TZ,
  ru: LZ
}, vZ = "إظهار أقل", IZ = "أظهر المزيد", yZ = "إظهار أقل - يمكن تجاهل زر لأن جميع المحتويات قابلة للقراءة بواسطة قارئات الشاشة بالفعل", gZ = "إظهار المزيد - يمكن تجاهل زر لأن جميع المحتويات قابلة للقراءة بواسطة قارئات الشاشة بالفعل", RZ = {
  _A_SHOW_MORE_LESS_: vZ,
  _A_SHOW_MORE_MORE_: IZ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: yZ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: gZ
}, OZ = "Mehr anzeigen", CZ = "Weniger anzeigen", NZ = "Weniger anzeigen - Button kann ignoriert werden, da der gesamte Inhalt für ScreenReader bereits lesbar ist", DZ = "Mehr anzeigen - Button kann ignoriert werden, da der gesamte Inhalt für ScreenReader bereits lesbar ist", BZ = {
  _A_SHOW_MORE_MORE_: OZ,
  _A_SHOW_MORE_LESS_: CZ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: NZ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: DZ
}, wZ = "Show less", PZ = "Show more", xZ = "Show less - Button can be ignored since all content is already readable by screen readers", FZ = "Show more - Button can be ignored since all content is already readable by screen readers", MZ = {
  _A_SHOW_MORE_LESS_: wZ,
  _A_SHOW_MORE_MORE_: PZ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: xZ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: FZ
}, qZ = "Mostrar menos", $Z = "Mostrar más", kZ = "Mostrar menos - El botón se puede ignorar ya que todo el contenido ya es legible para los lectores de pantalla", UZ = "Mostrar más - El botón se puede ignorar ya que todo el contenido ya es legible para los lectores de pantalla", HZ = {
  _A_SHOW_MORE_LESS_: qZ,
  _A_SHOW_MORE_MORE_: $Z,
  _A_SHOW_MORE_LESS_SCREEN_READER_: kZ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: UZ
}, VZ = "Afficher moins", WZ = "Afficher plus", GZ = "Afficher moins - Le bouton peut être ignoré car tout le contenu est déjà lisible par les lecteurs d'écran", KZ = "Afficher plus - Le bouton peut être ignoré car tout le contenu est déjà lisible par les lecteurs d'écran", jZ = {
  _A_SHOW_MORE_LESS_: VZ,
  _A_SHOW_MORE_MORE_: WZ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: GZ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: KZ
}, zZ = "Prikaži manje", YZ = "Prikaži više", XZ = "Prikaži manje - Ovo dugme se može zanemariti jer je cjelokupan sadržaj već vidljiv čitaču zaslona.", ZZ = "Prikaži više - Ovo dugme se može zanemariti jer je cjelokupan sadržaj već vidljiv čitaču zaslona.", JZ = {
  _A_SHOW_MORE_LESS_: zZ,
  _A_SHOW_MORE_MORE_: YZ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: XZ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: ZZ
}, QZ = "Mostra meno", eJ = "Mostra di più", tJ = "Mostra meno - Il pulsante può essere ignorato poiché tutto il contenuto è già leggibile dagli screen reader", nJ = "Mostra di più - Il pulsante può essere ignorato poiché tutto il contenuto è già leggibile dagli screen reader", rJ = {
  _A_SHOW_MORE_LESS_: QZ,
  _A_SHOW_MORE_MORE_: eJ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: tJ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: nJ
}, aJ = "Показать меньше", sJ = "Показать больше", iJ = "Показать меньше - Кнопку можно проигнорировать, так как весь контент уже доступен для чтения с помощью скринридера", lJ = "Показать больше - Кнопку можно проигнорировать, так как весь контент уже доступен для чтения с помощью скринридера", oJ = {
  _A_SHOW_MORE_LESS_: aJ,
  _A_SHOW_MORE_MORE_: sJ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: iJ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: lJ
}, rs = {
  ar: RZ,
  de: BZ,
  en: MZ,
  es: HZ,
  fr: jZ,
  hr: JZ,
  it: rJ,
  ru: oJ
}, uJ = "تحميل", _J = {
  _A_SPINNER_LOADING_: uJ
}, dJ = "Wird geladen", cJ = {
  _A_SPINNER_LOADING_: dJ
}, fJ = "Loading", hJ = {
  _A_SPINNER_LOADING_: fJ
}, AJ = "Cargando", EJ = {
  _A_SPINNER_LOADING_: AJ
}, pJ = "Chargement", TJ = {
  _A_SPINNER_LOADING_: pJ
}, mJ = "Učitavam", SJ = {
  _A_SPINNER_LOADING_: mJ
}, bJ = "Caricamento", LJ = {
  _A_SPINNER_LOADING_: bJ
}, vJ = "Загрузка", IJ = {
  _A_SPINNER_LOADING_: vJ
}, as = {
  ar: _J,
  de: cJ,
  en: hJ,
  es: EJ,
  fr: TJ,
  hr: SJ,
  it: LJ,
  ru: IJ
}, yJ = "غير محدد", gJ = "لا", RJ = "نعم", OJ = {
  _A_SWITCH_DEFAULT_LABEL_: yJ,
  _A_SWITCH_FALSE_LABEL_: gJ,
  _A_SWITCH_TRUE_LABEL_: RJ
}, CJ = "Nicht ausgewählt", NJ = "Nein", DJ = "Ja", BJ = {
  _A_SWITCH_DEFAULT_LABEL_: CJ,
  _A_SWITCH_FALSE_LABEL_: NJ,
  _A_SWITCH_TRUE_LABEL_: DJ
}, wJ = "Not selected", PJ = "No", xJ = "Yes", FJ = {
  _A_SWITCH_DEFAULT_LABEL_: wJ,
  _A_SWITCH_FALSE_LABEL_: PJ,
  _A_SWITCH_TRUE_LABEL_: xJ
}, MJ = "No seleccionado", qJ = "No", $J = "Sí", kJ = {
  _A_SWITCH_DEFAULT_LABEL_: MJ,
  _A_SWITCH_FALSE_LABEL_: qJ,
  _A_SWITCH_TRUE_LABEL_: $J
}, UJ = "Non sélectionné", HJ = "Non", VJ = "Oui", WJ = {
  _A_SWITCH_DEFAULT_LABEL_: UJ,
  _A_SWITCH_FALSE_LABEL_: HJ,
  _A_SWITCH_TRUE_LABEL_: VJ
}, GJ = "Nije odabrano", KJ = "Ne", jJ = "Da", zJ = {
  _A_SWITCH_DEFAULT_LABEL_: GJ,
  _A_SWITCH_FALSE_LABEL_: KJ,
  _A_SWITCH_TRUE_LABEL_: jJ
}, YJ = "Non selezionato", XJ = "No", ZJ = "Sì", JJ = {
  _A_SWITCH_DEFAULT_LABEL_: YJ,
  _A_SWITCH_FALSE_LABEL_: XJ,
  _A_SWITCH_TRUE_LABEL_: ZJ
}, QJ = "Не выбрано", eQ = "Нет", tQ = "Да", nQ = {
  _A_SWITCH_DEFAULT_LABEL_: QJ,
  _A_SWITCH_FALSE_LABEL_: eQ,
  _A_SWITCH_TRUE_LABEL_: tQ
}, ss = {
  ar: OJ,
  de: BJ,
  en: FJ,
  es: kJ,
  fr: WJ,
  hr: zJ,
  it: JJ,
  ru: nQ
}, rQ = "إجراءات", aQ = "إلغاء تحديد جميع الصفوف المحددة", sQ = "إلغاء تحديد هذا الصف", iQ = "1 حقل", lQ = "تخصيص الجدول", oQ = "لا توجد إدخالات.", uQ = "تنفيذ إجراء متعدد؟", _Q = "متابعة", dQ = "إغلاق", cQ = "+ 1 حقل", fQ = "إجراءات متعددة", hQ = "إلغاء الإجراء المتعدد", AQ = "نقل العمود إلى اليمين", EQ = "نقل العمود إلى اليسار", pQ = "إظهار العمود", TQ = "إخفاء العمود", mQ = "العمود مقفل", SQ = "معاينة الصف", bQ = "إغلاق المعاينة", LQ = "الرجاء استخدام الفتحة: 'معاينة'", vQ = "معاينة الصف", IQ = "إغلاق المعاينة", yQ = "إلى الصف التالي", gQ = "إلى الصف السابق", RQ = "بحث سريع", OQ = "إغلاق معاينة الصف", CQ = "فتح معاينة الصف", NQ = "تحديد جميع الصفوف المرئية ذات الصلة", DQ = "تحديد هذا الصف", BQ = "إلغاء الترتيب", wQ = "إغلاق", PQ = "عمود", xQ = "اتجاه", FQ = "تصاعدي", MQ = "تنازلي", qQ = "ترتيب", $Q = "ترتيب حسب", kQ = "ترتيب", UQ = "ثم حسب", HQ = "انقر هنا للتبديل بين الترتيب التصاعدي، الترتيب التنازلي، وعدم الترتيب.", VQ = "اضغط مع الاستمرار على مفتاح Shift أثناء النقر للجمع بين ترتيب أعمدة متعددة.", WQ = {
  _A_TABLE_ACTIONS_: rQ,
  "_A_TABLE_ALL_ROWS_{{count}}_": "إجمالي عدد الإدخالات: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "إلغاء تحديد جميع الصفوف ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: aQ,
  _A_TABLE_DESELECT_THIS_ROW_: sQ,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "إجراءات للصف: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: iQ,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} حقول",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "عرض المزيد من الحقول ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: lQ,
  _A_TABLE_EMPTY_TEXT_: oQ,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: uQ,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>هل تريد تنفيذ الإجراء <strong>{{ action }}</strong> على <strong>{{ selectedRows }}</strong> من العناصر؟</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: _Q,
  _A_TABLE_MOBILE_TR_CLOSE_: dQ,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: cQ,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} حقول",
  _A_TABLE_MULTIPLE_ACTIONS_: fQ,
  _A_TABLE_MULTIPLE_CANCEL_: hQ,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} من {{ countAllRowsFiltered }} محددة",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: AQ,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: EQ,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: pQ,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: TQ,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: mQ,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: SQ,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: bQ,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: LQ,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: vQ,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: IQ,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} من {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: yQ,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: gQ,
  _A_TABLE_QUICK_SEARCH_: RQ,
  _A_TABLE_ROW_PREVIEW_CLOSE_: OQ,
  _A_TABLE_ROW_PREVIEW_OPEN_: CQ,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "تحديد جميع الصفوف ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: NQ,
  _A_TABLE_SELECT_THIS_ROW_: DQ,
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: BQ,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: wQ,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: PQ,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: xQ,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: FQ,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: MQ,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "تغيير الترتيب (الأعمدة المحددة: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_HEADER_: qQ,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: $Q,
  _A_TABLE_SORT_ADDITIONAL_START_: kQ,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: UQ,
  _A_TABLE_SORT_TITLE_: HQ,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: VQ
}, GQ = "Aktionen", KQ = "Alle ausgewählten Zeilen abwählen", jQ = "Die Zeile abwählen", zQ = "1 Feld", YQ = "Tabelle anpassen", XQ = "Keine Einträge vorhanden.", ZQ = "Mehrfachaktion durchführen?", JQ = "Fortfahren", QQ = "Schließen", eee = "+ 1 Feld", tee = "Mehrfachaktionen", nee = "Mehrfachaktion abbrechen", ree = "Spalte nach rechts verschieben", aee = "Spalte nach links verschieben", see = "Spalte einblenden", iee = "Spalte ausblenden", lee = "Spalte ist gesperrt", oee = "Vorschau der Zeile", uee = "Vorschau schließen", _ee = "Benutzen sie bitte slot: 'preview'", dee = "Vorschau der Zeile", cee = "Vorschau schließen", fee = "Zur nächsten Zeile", hee = "Zur vorherigen Zeile", Aee = "Schnellsuche", Eee = "Vorschau der Zeile schließen", pee = "Vorschau der Zeile öffnen", Tee = "Alle sichtbaren, relevanten Zeilen auswählen", mee = "Die Zeile auswählen", See = "Sortierung aufheben", bee = "Schließen", Lee = "Spalte", vee = "Reihenfolge", Iee = "Aufsteigend", yee = "Absteigend", gee = "Sortierung", Ree = "Sortieren nach", Oee = "Sortieren", Cee = "Dann nach", Nee = "Klicken Sie hier, um zwischen aufsteigender, absteigender und keiner Sortierung zu wechseln.", Dee = "Halten Sie die Umschalttaste beim Klicken gedrückt, um die Sortierung mehrerer Spalten zu kombinieren.", Bee = {
  _A_TABLE_ACTIONS_: GQ,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Gesamtanzahl der Einträge: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Alle Zeilen abwählen ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: KQ,
  _A_TABLE_DESELECT_THIS_ROW_: jQ,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Aktionen zur Zeile: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: zQ,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} Felder",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Weitere Felder anzeigen ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: YQ,
  _A_TABLE_EMPTY_TEXT_: XQ,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: ZQ,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Möchten Sie die Aktion <strong>{{ action }}</strong> auf <strong>{{ selectedRows }}</strong> Objekten durchführen?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: JQ,
  _A_TABLE_MOBILE_TR_CLOSE_: QQ,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: eee,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} Felder",
  _A_TABLE_MULTIPLE_ACTIONS_: tee,
  _A_TABLE_MULTIPLE_CANCEL_: nee,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} von {{ countAllRowsFiltered }} ausgewählt",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: ree,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: aee,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: see,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: iee,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: lee,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: oee,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: uee,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: _ee,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: dee,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: cee,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} von {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: fee,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: hee,
  _A_TABLE_QUICK_SEARCH_: Aee,
  _A_TABLE_ROW_PREVIEW_CLOSE_: Eee,
  _A_TABLE_ROW_PREVIEW_OPEN_: pee,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Alle Zeilen auswählen ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Tee,
  _A_TABLE_SELECT_THIS_ROW_: mee,
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: See,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: bee,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Lee,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: vee,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Iee,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: yee,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Sortierung ändern (ausgewählte Spalten: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_HEADER_: gee,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Ree,
  _A_TABLE_SORT_ADDITIONAL_START_: Oee,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Cee,
  _A_TABLE_SORT_TITLE_: Nee,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: Dee
}, wee = "Actions", Pee = "Deselect all selected rows", xee = "Deselect this row", Fee = "1 field", Mee = "Customize table", qee = "No entries available.", $ee = "Execute multiple actions?", kee = "Proceed", Uee = "Close", Hee = "+ 1 field", Vee = "Multiple actions", Wee = "Cancel multiple actions", Gee = "Move column to the right", Kee = "Move column to the left", jee = "Show column", zee = "Hide column", Yee = "Column is locked", Xee = "Row preview", Zee = "Close preview", Jee = "Row preview", Qee = "Close preview", ete = "Please use slot: 'preview'", tte = "To the next row", nte = "To the previous row", rte = "Quick search", ate = "Close row preview", ste = "Open row preview", ite = "Select all visible, relevant rows", lte = "Select this row", ote = "Click here to toggle between ascending, descending, and no sorting.", ute = "Hold Shift while clicking to combine sorting of multiple columns.", _te = "Sorting", dte = "Sort by", cte = "Then by", fte = "Column", hte = "Direction", Ate = "Ascending", Ete = "Descending", pte = "Close", Tte = "Sort", mte = "Remove sorting", Ste = {
  _A_TABLE_ACTIONS_: wee,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Total number of entries: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deselect all rows ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Pee,
  _A_TABLE_DESELECT_THIS_ROW_: xee,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Actions for row: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Fee,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} fields",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Show more fields ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: Mee,
  _A_TABLE_EMPTY_TEXT_: qee,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: $ee,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Do you want to execute the action <strong>{{ action }}</strong> on <strong>{{ selectedRows }}</strong> items?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: kee,
  _A_TABLE_MOBILE_TR_CLOSE_: Uee,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: Hee,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} fields",
  _A_TABLE_MULTIPLE_ACTIONS_: Vee,
  _A_TABLE_MULTIPLE_CANCEL_: Wee,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} of {{ countAllRowsFiltered }} selected",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: Gee,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: Kee,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: jee,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: zee,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: Yee,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: Xee,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: Zee,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Jee,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: Qee,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: ete,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} of {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: tte,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: nte,
  _A_TABLE_QUICK_SEARCH_: rte,
  _A_TABLE_ROW_PREVIEW_CLOSE_: ate,
  _A_TABLE_ROW_PREVIEW_OPEN_: ste,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Select all rows ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: ite,
  _A_TABLE_SELECT_THIS_ROW_: lte,
  _A_TABLE_SORT_TITLE_: ote,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: ute,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: _te,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: dte,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: cte,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: fte,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: hte,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Ate,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: Ete,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: pte,
  _A_TABLE_SORT_ADDITIONAL_START_: Tte,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Change sorting (selected columns: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: mte
}, bte = "Acciones", Lte = "Deseleccionar todas las filas seleccionadas", vte = "Deseleccionar esta fila", Ite = "1 campo", yte = "Personalizar tabla", gte = "No hay entradas disponibles.", Rte = "¿Ejecutar múltiples acciones?", Ote = "Continuar", Cte = "Cerrar", Nte = "+ 1 campo", Dte = "Acciones múltiples", Bte = "Cancelar acciones múltiples", wte = "Mover columna a la derecha", Pte = "Mover columna a la izquierda", xte = "Mostrar columna", Fte = "Ocultar columna", Mte = "La columna está bloqueada", qte = "Vista previa de la fila", $te = "Cerrar vista previa", kte = "Vista previa de la fila", Ute = "Cerrar vista previa", Hte = "Por favor, use el slot: 'preview'", Vte = "A la siguiente fila", Wte = "A la fila anterior", Gte = "Búsqueda rápida", Kte = "Cerrar vista previa de la fila", jte = "Abrir vista previa de la fila", zte = "Seleccionar todas las filas visibles y relevantes", Yte = "Seleccionar esta fila", Xte = "Haga clic aquí para alternar entre orden ascendente, descendente o sin ordenar.", Zte = "Mantenga presionada la tecla Shift al hacer clic para combinar la ordenación de varias columnas.", Jte = "Ordenar", Qte = "Ordenar por", ene = "Luego por", tne = "Columna", nne = "Dirección", rne = "Ascendente", ane = "Descendente", sne = "Cerrar", ine = "Ordenar", lne = "Eliminar orden", one = {
  _A_TABLE_ACTIONS_: bte,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Número total de entradas: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deseleccionar todas las filas ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Lte,
  _A_TABLE_DESELECT_THIS_ROW_: vte,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Acciones para la fila: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Ite,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} campos",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Mostrar más campos ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: yte,
  _A_TABLE_EMPTY_TEXT_: gte,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: Rte,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>¿Desea ejecutar la acción <strong>{{ action }}</strong> en <strong>{{ selectedRows }}</strong> objetos?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: Ote,
  _A_TABLE_MOBILE_TR_CLOSE_: Cte,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: Nte,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} campos",
  _A_TABLE_MULTIPLE_ACTIONS_: Dte,
  _A_TABLE_MULTIPLE_CANCEL_: Bte,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} de {{ countAllRowsFiltered }} seleccionadas",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: wte,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: Pte,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: xte,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: Fte,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: Mte,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: qte,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: $te,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: kte,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: Ute,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: Hte,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} de {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Vte,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Wte,
  _A_TABLE_QUICK_SEARCH_: Gte,
  _A_TABLE_ROW_PREVIEW_CLOSE_: Kte,
  _A_TABLE_ROW_PREVIEW_OPEN_: jte,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Seleccionar todas las filas ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: zte,
  _A_TABLE_SELECT_THIS_ROW_: Yte,
  _A_TABLE_SORT_TITLE_: Xte,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: Zte,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: Jte,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Qte,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: ene,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: tne,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: nne,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: rne,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: ane,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: sne,
  _A_TABLE_SORT_ADDITIONAL_START_: ine,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Cambiar orden (columnas seleccionadas: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: lne
}, une = "Actions", _ne = "Désélectionner toutes les lignes sélectionnées", dne = "Désélectionner cette ligne", cne = "1 champ", fne = "Personnaliser le tableau", hne = "Aucune entrée disponible.", Ane = "Exécuter plusieurs actions ?", Ene = "Continuer", pne = "Fermer", Tne = "+ 1 champ", mne = "Actions multiples", Sne = "Annuler l'action multiple", bne = "Déplacer la colonne vers la droite", Lne = "Déplacer la colonne vers la gauche", vne = "Afficher la colonne", Ine = "Masquer la colonne", yne = "La colonne est verrouillée", gne = "Aperçu de la ligne", Rne = "Fermer l'aperçu", One = "Aperçu de la ligne", Cne = "Fermer l'aperçu", Nne = "Veuillez utiliser le slot : 'preview'", Dne = "À la ligne suivante", Bne = "À la ligne précédente", wne = "Recherche rapide", Pne = "Fermer l'aperçu de la ligne", xne = "Ouvrir l'aperçu de la ligne", Fne = "Sélectionner toutes les lignes visibles et pertinentes", Mne = "Sélectionner cette ligne", qne = "Cliquez ici pour alterner entre tri ascendant, descendant et sans tri.", $ne = "Maintenez la touche Maj enfoncée en cliquant pour combiner le tri de plusieurs colonnes.", kne = "Tri", Une = "Trier par", Hne = "Puis par", Vne = "Colonne", Wne = "Direction", Gne = "Ascendant", Kne = "Descendant", jne = "Fermer", zne = "Trier", Yne = "Supprimer le tri", Xne = {
  _A_TABLE_ACTIONS_: une,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Nombre total d'entrées : {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Désélectionner toutes les lignes ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: _ne,
  _A_TABLE_DESELECT_THIS_ROW_: dne,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Actions pour la ligne : {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: cne,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} champs",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Afficher plus de champs ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: fne,
  _A_TABLE_EMPTY_TEXT_: hne,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: Ane,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Voulez-vous exécuter l'action <strong>{{ action }}</strong> sur <strong>{{ selectedRows }}</strong> objets ?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: Ene,
  _A_TABLE_MOBILE_TR_CLOSE_: pne,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: Tne,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} champs",
  _A_TABLE_MULTIPLE_ACTIONS_: mne,
  _A_TABLE_MULTIPLE_CANCEL_: Sne,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} sur {{ countAllRowsFiltered }} sélectionnés",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: bne,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: Lne,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: vne,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: Ine,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: yne,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: gne,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: Rne,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: One,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: Cne,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: Nne,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} sur {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Dne,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Bne,
  _A_TABLE_QUICK_SEARCH_: wne,
  _A_TABLE_ROW_PREVIEW_CLOSE_: Pne,
  _A_TABLE_ROW_PREVIEW_OPEN_: xne,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Sélectionner toutes les lignes ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Fne,
  _A_TABLE_SELECT_THIS_ROW_: Mne,
  _A_TABLE_SORT_TITLE_: qne,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: $ne,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: kne,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Une,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Hne,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Vne,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Wne,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Gne,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: Kne,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: jne,
  _A_TABLE_SORT_ADDITIONAL_START_: zne,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Modifier le tri (colonnes sélectionnées : {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: Yne
}, Zne = "Akcije", Jne = "Poništi odabir svih odabranih redaka", Qne = "Poništi odabir ovog retka", ere = "1 polje", tre = "Prilagodi tablicu", nre = "Nema dostupnih unosa.", rre = "Izvršiti više akcija?", are = "Nastavi", sre = "Zatvori", ire = "+ 1 polje", lre = "Višestruke akcije", ore = "Poništi višestruku akciju", ure = "Premjesti stupac desno", _re = "Premjesti stupac lijevo", dre = "Prikaži stupac", cre = "Sakrij stupac", fre = "Stupac je zaključan", hre = "Pregled retka", Are = "Zatvori pregled", Ere = "Pregled retka", pre = "Zatvori pregled", Tre = "Molimo koristite slot: 'pregled'", mre = "Na sljedeći redak", Sre = "Na prethodni redak", bre = "Brza pretraga", Lre = "Zatvori pregled retka", vre = "Otvori pregled retka", Ire = "Odaberi sve vidljive, relevantne retke", yre = "Odaberi ovaj redak", gre = "Kliknite ovdje da biste se prebacivali između uzlaznog, silaznog i bez sortiranja.", Rre = "Držite tipku Shift dok klikate da biste kombinirali sortiranje više stupaca.", Ore = "Sortiranje", Cre = "Sortiraj po", Nre = "Zatim po", Dre = "Stupac", Bre = "Smjer", wre = "Uzlazno", Pre = "Silazno", xre = "Zatvori", Fre = "Sortiraj", Mre = "Ukloni sortiranje", qre = {
  _A_TABLE_ACTIONS_: Zne,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Ukupan broj unosa: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Poništi odabir svih redaka ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Jne,
  _A_TABLE_DESELECT_THIS_ROW_: Qne,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Akcije za redak: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: ere,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} polja",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Prikaži više polja ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: tre,
  _A_TABLE_EMPTY_TEXT_: nre,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: rre,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Želite li izvršiti akciju <strong>{{ action }}</strong> na <strong>{{ selectedRows }}</strong> objekata?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: are,
  _A_TABLE_MOBILE_TR_CLOSE_: sre,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: ire,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} polja",
  _A_TABLE_MULTIPLE_ACTIONS_: lre,
  _A_TABLE_MULTIPLE_CANCEL_: ore,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} od {{ countAllRowsFiltered }} odabrano",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: ure,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: _re,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: dre,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: cre,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: fre,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: hre,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: Are,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Ere,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: pre,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: Tre,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} od {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: mre,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Sre,
  _A_TABLE_QUICK_SEARCH_: bre,
  _A_TABLE_ROW_PREVIEW_CLOSE_: Lre,
  _A_TABLE_ROW_PREVIEW_OPEN_: vre,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Odaberi sve retke ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Ire,
  _A_TABLE_SELECT_THIS_ROW_: yre,
  _A_TABLE_SORT_TITLE_: gre,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: Rre,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: Ore,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Cre,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Nre,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Dre,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Bre,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: wre,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: Pre,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: xre,
  _A_TABLE_SORT_ADDITIONAL_START_: Fre,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Promijeni sortiranje (odabrani stupci: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: Mre
}, $re = "Azioni", kre = "Deseleziona tutte le righe selezionate", Ure = "Deseleziona questa riga", Hre = "1 campo", Vre = "Personalizza tabella", Wre = "Nessuna voce disponibile.", Gre = "Eseguire più azioni?", Kre = "Continua", jre = "Chiudi", zre = "+ 1 campo", Yre = "Azioni multiple", Xre = "Annulla azione multipla", Zre = "Sposta colonna a destra", Jre = "Sposta colonna a sinistra", Qre = "Mostra colonna", eae = "Nascondi colonna", tae = "Colonna bloccata", nae = "Anteprima riga", rae = "Chiudi anteprima", aae = "Anteprima riga", sae = "Chiudi anteprima", iae = "Si prega di utilizzare lo slot: 'preview'", lae = "Alla riga successiva", oae = "Alla riga precedente", uae = "Ricerca rapida", _ae = "Chiudi anteprima riga", dae = "Apri anteprima riga", cae = "Seleziona tutte le righe visibili e pertinenti", fae = "Seleziona questa riga", hae = "Clicca qui per alternare tra ordinamento crescente, decrescente e nessun ordinamento.", Aae = "Tieni premuto il tasto Maiusc mentre fai clic per combinare l'ordinamento di più colonne.", Eae = "Ordinamento", pae = "Ordina per", Tae = "Poi per", mae = "Colonna", Sae = "Direzione", bae = "Crescente", Lae = "Decrescente", vae = "Chiudi", Iae = "Ordina", yae = "Rimuovi ordinamento", gae = {
  _A_TABLE_ACTIONS_: $re,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Numero totale di voci: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deseleziona tutte le righe ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: kre,
  _A_TABLE_DESELECT_THIS_ROW_: Ure,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Azioni per la riga: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Hre,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} campi",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Mostra più campi ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: Vre,
  _A_TABLE_EMPTY_TEXT_: Wre,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: Gre,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Vuoi eseguire l'azione <strong>{{ action }}</strong> su <strong>{{ selectedRows }}</strong> oggetti?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: Kre,
  _A_TABLE_MOBILE_TR_CLOSE_: jre,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: zre,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} campi",
  _A_TABLE_MULTIPLE_ACTIONS_: Yre,
  _A_TABLE_MULTIPLE_CANCEL_: Xre,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} di {{ countAllRowsFiltered }} selezionate",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: Zre,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: Jre,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: Qre,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: eae,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: tae,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: nae,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: rae,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: aae,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: sae,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: iae,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} di {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: lae,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: oae,
  _A_TABLE_QUICK_SEARCH_: uae,
  _A_TABLE_ROW_PREVIEW_CLOSE_: _ae,
  _A_TABLE_ROW_PREVIEW_OPEN_: dae,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Seleziona tutte le righe ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: cae,
  _A_TABLE_SELECT_THIS_ROW_: fae,
  _A_TABLE_SORT_TITLE_: hae,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: Aae,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: Eae,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: pae,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Tae,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: mae,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Sae,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: bae,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: Lae,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: vae,
  _A_TABLE_SORT_ADDITIONAL_START_: Iae,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Modifica ordinamento (colonne selezionate: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: yae
}, Rae = "Действия", Oae = "Отменить выбор всех выбранных строк", Cae = "Отменить выбор строки", Nae = "1 поле", Dae = "Настроить таблицу", Bae = "Нет доступных записей.", wae = "Выполнить несколько действий?", Pae = "Продолжить", xae = "Закрыть", Fae = "+ 1 поле", Mae = "Множественные действия", qae = "Отменить", $ae = "Переместить столбец вправо", kae = "Переместить столбец влево", Uae = "Показать столбец", Hae = "Скрыть столбец", Vae = "Столбец заблокирован", Wae = "Предпросмотр строки", Gae = "Закрыть предварительный просмотр", Kae = "Предпросмотр строки", jae = "Закрыть предварительный просмотр", zae = "Пожалуйста, используйте слот: 'preview'", Yae = "К следующей строке", Xae = "К предыдущей строке", Zae = "Быстрый поиск", Jae = "Закрыть предпросмотр строки", Qae = "Открыть предпросмотр строки", ese = "Выбрать все видимые, возможные строки", tse = "Выбрать эту строку", nse = "Нажмите здесь, чтобы переключиться между сортировкой по возрастанию, по убыванию и без сортировки.", rse = "Удерживайте Shift при нажатии, чтобы объединить сортировку нескольких столбцов.", ase = "Сортировка", sse = "Сортировать по", ise = "Затем по", lse = "Столбец", ose = "Направление", use = "По возрастанию", _se = "По убыванию", dse = "Закрыть", cse = "Сортировать", fse = "Отменить сортировку", hse = {
  _A_TABLE_ACTIONS_: Rae,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Общее количество записей: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Отменить выбор всех строк ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Oae,
  _A_TABLE_DESELECT_THIS_ROW_: Cae,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Действия для строки: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Nae,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} полей",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Показать дополнительные поля ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: Dae,
  _A_TABLE_EMPTY_TEXT_: Bae,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: wae,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Вы хотите выполнить действие <strong>{{ action }}</strong> для <strong>{{ selectedRows }}</strong> объектов?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: Pae,
  _A_TABLE_MOBILE_TR_CLOSE_: xae,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: Fae,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} полей",
  _A_TABLE_MULTIPLE_ACTIONS_: Mae,
  _A_TABLE_MULTIPLE_CANCEL_: qae,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} из {{ countAllRowsFiltered }} выбрано",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: $ae,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: kae,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: Uae,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: Hae,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: Vae,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: Wae,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: Gae,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Kae,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: jae,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: zae,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} из {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Yae,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Xae,
  _A_TABLE_QUICK_SEARCH_: Zae,
  _A_TABLE_ROW_PREVIEW_CLOSE_: Jae,
  _A_TABLE_ROW_PREVIEW_OPEN_: Qae,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Выбрать все строки ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: ese,
  _A_TABLE_SELECT_THIS_ROW_: tse,
  _A_TABLE_SORT_TITLE_: nse,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: rse,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: ase,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: sse,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: ise,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: lse,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: ose,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: use,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: _se,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: dse,
  _A_TABLE_SORT_ADDITIONAL_START_: cse,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Изменить сортировку (выбрано столбцов: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: fse
}, is = {
  ar: WQ,
  de: Bee,
  en: Ste,
  es: one,
  fr: Xne,
  hr: qre,
  it: gae,
  ru: hse
}, Ase = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Ese = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", pse = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Ase,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Ese
}, Tse = "Nach oben scrollen", mse = "Nach unten scrollen", Sse = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Tse,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: mse
}, bse = "Scroll top", Lse = "Scroll down", vse = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: bse,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Lse
}, Ise = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", yse = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", gse = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Ise,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: yse
}, Rse = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Ose = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Cse = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Rse,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Ose
}, Nse = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Dse = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Bse = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Nse,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Dse
}, wse = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Pse = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", xse = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: wse,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Pse
}, Fse = "Прокрутить наверх", Mse = "Прокрутить вниз", qse = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Fse,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Mse
}, ls = {
  ar: pse,
  de: Sse,
  en: vse,
  es: gse,
  fr: Cse,
  hr: Bse,
  it: xse,
  ru: qse
}, $se = "معالج", kse = "التالي", Use = "الخطوة التالية", Hse = "سابق", Vse = "الخطوة السابقة", Wse = "الخطوة الحالية", Gse = "خطأ في الخطوة", Kse = "الخطوة القادمة", jse = "الخطوة المزار", zse = "تحذير خطوة", Yse = "خطوات المعالج", Xse = {
  _A_WIZARD_ARIA_LABEL_: $se,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "الخطوة {{ stepNumber }}:",
  _A_WIZARD_NEXT_: kse,
  _A_WIZARD_NEXT_TITLE_: Use,
  _A_WIZARD_PREVIOUS_: Hse,
  _A_WIZARD_PREVIOUS_TITLE_: Vse,
  _A_WIZARD_STEP_ACTIVE_: Wse,
  _A_WIZARD_STEP_ERROR_: Gse,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} من {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: Kse,
  _A_WIZARD_STEP_VISITED_: jse,
  _A_WIZARD_STEP_WARNING_: zse,
  _A_WIZARD_STEPS_ARIA_LABEL_: Yse,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "{{ stepsCount }} من {{ stepActive }} خطوة"
}, Zse = "Wizard", Jse = "Nächste", Qse = "Nächster Schritt", eie = "Vorherige", tie = "Vorheriger Schritt", nie = "Schritt aktuell", rie = "Schrittfehler", aie = "Schritt bevorstehend", sie = "Schritt besucht", iie = "Schrittwarnung", lie = "Wizard Schritte", oie = {
  _A_WIZARD_ARIA_LABEL_: Zse,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Schritt {{ stepNumber }}:",
  _A_WIZARD_NEXT_: Jse,
  _A_WIZARD_NEXT_TITLE_: Qse,
  _A_WIZARD_PREVIOUS_: eie,
  _A_WIZARD_PREVIOUS_TITLE_: tie,
  _A_WIZARD_STEP_ACTIVE_: nie,
  _A_WIZARD_STEP_ERROR_: rie,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} von {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: aie,
  _A_WIZARD_STEP_VISITED_: sie,
  _A_WIZARD_STEP_WARNING_: iie,
  _A_WIZARD_STEPS_ARIA_LABEL_: lie,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Schritt {{ stepActive }} von {{ stepsCount }}"
}, uie = "Wizard", _ie = "Next", die = "Next step", cie = "Previous", fie = "Previous step", hie = "Step current", Aie = "Step error", Eie = "Step upcoming", pie = "Step visited", Tie = "Step warning", mie = "Wizard steps", Sie = {
  _A_WIZARD_ARIA_LABEL_: uie,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Step {{ stepNumber }}:",
  _A_WIZARD_NEXT_: _ie,
  _A_WIZARD_NEXT_TITLE_: die,
  _A_WIZARD_PREVIOUS_: cie,
  _A_WIZARD_PREVIOUS_TITLE_: fie,
  _A_WIZARD_STEP_ACTIVE_: hie,
  _A_WIZARD_STEP_ERROR_: Aie,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} of {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: Eie,
  _A_WIZARD_STEP_VISITED_: pie,
  _A_WIZARD_STEP_WARNING_: Tie,
  _A_WIZARD_STEPS_ARIA_LABEL_: mie,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Step {{ stepActive }} of {{ stepsCount }}"
}, bie = "Asistente", Lie = "Próximo", vie = "Siguiente paso", Iie = "Previo", yie = "Paso anterior", gie = "Paso actual", Rie = "Error de paso", Oie = "Paso próximo", Cie = "Paso visitado", Nie = "Advertencia de paso", Die = "Pasos del asistente", Bie = {
  _A_WIZARD_ARIA_LABEL_: bie,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Paso {{ stepNumber }}:",
  _A_WIZARD_NEXT_: Lie,
  _A_WIZARD_NEXT_TITLE_: vie,
  _A_WIZARD_PREVIOUS_: Iie,
  _A_WIZARD_PREVIOUS_TITLE_: yie,
  _A_WIZARD_STEP_ACTIVE_: gie,
  _A_WIZARD_STEP_ERROR_: Rie,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} de {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: Oie,
  _A_WIZARD_STEP_VISITED_: Cie,
  _A_WIZARD_STEP_WARNING_: Nie,
  _A_WIZARD_STEPS_ARIA_LABEL_: Die,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "escenario {{ stepActive }} de {{ stepsCount }}"
}, wie = "Assistant", Pie = "Suivant", xie = "Étape suivante", Fie = "Précédent", Mie = "Étape précédente", qie = "Étape actuelle", $ie = "Erreur de l'étape", kie = "Étape à venir", Uie = "Étape visitée", Hie = "Avertissement de l'étape", Vie = "Étapes de l'assistant", Wie = {
  _A_WIZARD_ARIA_LABEL_: wie,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Étape {{ stepNumber }} :",
  _A_WIZARD_NEXT_: Pie,
  _A_WIZARD_NEXT_TITLE_: xie,
  _A_WIZARD_PREVIOUS_: Fie,
  _A_WIZARD_PREVIOUS_TITLE_: Mie,
  _A_WIZARD_STEP_ACTIVE_: qie,
  _A_WIZARD_STEP_ERROR_: $ie,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} sur {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: kie,
  _A_WIZARD_STEP_VISITED_: Uie,
  _A_WIZARD_STEP_WARNING_: Hie,
  _A_WIZARD_STEPS_ARIA_LABEL_: Vie,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Etape {{ stepActive }} de {{ stepsCount }}"
}, Gie = "Čarobnjak", Kie = "Dalje", jie = "Sljedeći korak", zie = "Natrag", Yie = "Prethodni korak", Xie = "Trenutni korak", Zie = "Pogreška koraka", Jie = "Preostali koraci", Qie = "Posjećeni korak", ele = "Upozorenje koraka", tle = "Koraci čarobnjaka", nle = {
  _A_WIZARD_ARIA_LABEL_: Gie,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Korak {{ stepNumber }}:",
  _A_WIZARD_NEXT_: Kie,
  _A_WIZARD_NEXT_TITLE_: jie,
  _A_WIZARD_PREVIOUS_: zie,
  _A_WIZARD_PREVIOUS_TITLE_: Yie,
  _A_WIZARD_STEP_ACTIVE_: Xie,
  _A_WIZARD_STEP_ERROR_: Zie,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} od {{stepsCount}}",
  _A_WIZARD_STEP_UPCOMING_: Jie,
  _A_WIZARD_STEP_VISITED_: Qie,
  _A_WIZARD_STEP_WARNING_: ele,
  _A_WIZARD_STEPS_ARIA_LABEL_: tle,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Korak {{ stepActive }} od {{ stepsCount }}"
}, rle = "Wizard", ale = "Prossimo", sle = "Passo successivo", ile = "Precedente", lle = "Passo precedente", ole = "Passo attuale", ule = "Errore del passo", _le = "Passo successivo", dle = "Passo visitato", cle = "Avvertimento del passo", fle = "Passi dell'assistente", hle = {
  _A_WIZARD_ARIA_LABEL_: rle,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Passo {{ stepNumber }}:",
  _A_WIZARD_NEXT_: ale,
  _A_WIZARD_NEXT_TITLE_: sle,
  _A_WIZARD_PREVIOUS_: ile,
  _A_WIZARD_PREVIOUS_TITLE_: lle,
  _A_WIZARD_STEP_ACTIVE_: ole,
  _A_WIZARD_STEP_ERROR_: ule,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} di {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: _le,
  _A_WIZARD_STEP_VISITED_: dle,
  _A_WIZARD_STEP_WARNING_: cle,
  _A_WIZARD_STEPS_ARIA_LABEL_: fle,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "palcoscenico {{ stepActive }} Di {{ stepsCount }}"
}, Ale = "Мастер", Ele = "Следующий", ple = "Следующий шаг", Tle = "Предыдущий", mle = "Предыдущий шаг", Sle = "Шаг актуальный", ble = "Ошибка шага", Lle = "Шаг предстоящий", vle = "Шаг посещённый", Ile = "Предупреждение шага", yle = "Шаги мастера", gle = {
  _A_WIZARD_ARIA_LABEL_: Ale,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Шаг {{ stepNumber }}:",
  _A_WIZARD_NEXT_: Ele,
  _A_WIZARD_NEXT_TITLE_: ple,
  _A_WIZARD_PREVIOUS_: Tle,
  _A_WIZARD_PREVIOUS_TITLE_: mle,
  _A_WIZARD_STEP_ACTIVE_: Sle,
  _A_WIZARD_STEP_ERROR_: ble,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} из {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: Lle,
  _A_WIZARD_STEP_VISITED_: vle,
  _A_WIZARD_STEP_WARNING_: Ile,
  _A_WIZARD_STEPS_ARIA_LABEL_: yle,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Шаг {{ stepActive }} из {{ stepsCount }}"
}, os = {
  ar: Xse,
  de: oie,
  en: Sie,
  es: Bie,
  fr: Wie,
  hr: nle,
  it: hle,
  ru: gle
}, Rle = "Bytes", Ole = "KB", Cle = "MB", Nle = "GB", Dle = "TB", Ble = "PB", wle = "EB", Ple = "ZB", xle = "YB", Fle = {
  _A_FILE_SIZE_B_: Rle,
  _A_FILE_SIZE_KB_: Ole,
  _A_FILE_SIZE_MB_: Cle,
  _A_FILE_SIZE_GB_: Nle,
  _A_FILE_SIZE_TB_: Dle,
  _A_FILE_SIZE_PB_: Ble,
  _A_FILE_SIZE_EB_: wle,
  _A_FILE_SIZE_ZB_: Ple,
  _A_FILE_SIZE_YB_: xle
}, Mle = "Bytes", qle = "KB", $le = "MB", kle = "GB", Ule = "TB", Hle = "PB", Vle = "EB", Wle = "ZB", Gle = "YB", Kle = {
  _A_FILE_SIZE_B_: Mle,
  _A_FILE_SIZE_KB_: qle,
  _A_FILE_SIZE_MB_: $le,
  _A_FILE_SIZE_GB_: kle,
  _A_FILE_SIZE_TB_: Ule,
  _A_FILE_SIZE_PB_: Hle,
  _A_FILE_SIZE_EB_: Vle,
  _A_FILE_SIZE_ZB_: Wle,
  _A_FILE_SIZE_YB_: Gle
}, jle = "Bytes", zle = "KB", Yle = "MB", Xle = "GB", Zle = "TB", Jle = "PB", Qle = "EB", eoe = "ZB", toe = "YB", noe = {
  _A_FILE_SIZE_B_: jle,
  _A_FILE_SIZE_KB_: zle,
  _A_FILE_SIZE_MB_: Yle,
  _A_FILE_SIZE_GB_: Xle,
  _A_FILE_SIZE_TB_: Zle,
  _A_FILE_SIZE_PB_: Jle,
  _A_FILE_SIZE_EB_: Qle,
  _A_FILE_SIZE_ZB_: eoe,
  _A_FILE_SIZE_YB_: toe
}, roe = "Bytes", aoe = "KB", soe = "MB", ioe = "GB", loe = "TB", ooe = "PB", uoe = "EB", _oe = "ZB", doe = "YB", coe = {
  _A_FILE_SIZE_B_: roe,
  _A_FILE_SIZE_KB_: aoe,
  _A_FILE_SIZE_MB_: soe,
  _A_FILE_SIZE_GB_: ioe,
  _A_FILE_SIZE_TB_: loe,
  _A_FILE_SIZE_PB_: ooe,
  _A_FILE_SIZE_EB_: uoe,
  _A_FILE_SIZE_ZB_: _oe,
  _A_FILE_SIZE_YB_: doe
}, foe = "Bytes", hoe = "KB", Aoe = "MB", Eoe = "GB", poe = "TB", Toe = "PB", moe = "EB", Soe = "ZB", boe = "YB", Loe = {
  _A_FILE_SIZE_B_: foe,
  _A_FILE_SIZE_KB_: hoe,
  _A_FILE_SIZE_MB_: Aoe,
  _A_FILE_SIZE_GB_: Eoe,
  _A_FILE_SIZE_TB_: poe,
  _A_FILE_SIZE_PB_: Toe,
  _A_FILE_SIZE_EB_: moe,
  _A_FILE_SIZE_ZB_: Soe,
  _A_FILE_SIZE_YB_: boe
}, voe = "B", Ioe = "KB", yoe = "MB", goe = "GB", Roe = "TB", Ooe = "PB", Coe = "EB", Noe = "ZB", Doe = "YB", Boe = {
  _A_FILE_SIZE_B_: voe,
  _A_FILE_SIZE_KB_: Ioe,
  _A_FILE_SIZE_MB_: yoe,
  _A_FILE_SIZE_GB_: goe,
  _A_FILE_SIZE_TB_: Roe,
  _A_FILE_SIZE_PB_: Ooe,
  _A_FILE_SIZE_EB_: Coe,
  _A_FILE_SIZE_ZB_: Noe,
  _A_FILE_SIZE_YB_: Doe
}, woe = "Bytes", Poe = "KB", xoe = "MB", Foe = "GB", Moe = "TB", qoe = "PB", $oe = "EB", koe = "ZB", Uoe = "YB", Hoe = {
  _A_FILE_SIZE_B_: woe,
  _A_FILE_SIZE_KB_: Poe,
  _A_FILE_SIZE_MB_: xoe,
  _A_FILE_SIZE_GB_: Foe,
  _A_FILE_SIZE_TB_: Moe,
  _A_FILE_SIZE_PB_: qoe,
  _A_FILE_SIZE_EB_: $oe,
  _A_FILE_SIZE_ZB_: koe,
  _A_FILE_SIZE_YB_: Uoe
}, Voe = "Б", Woe = "КБ", Goe = "МБ", Koe = "ГБ", joe = "ТБ", zoe = "ПБ", Yoe = "ЭБ", Xoe = "ЗБ", Zoe = "ИБ", Joe = {
  _A_FILE_SIZE_B_: Voe,
  _A_FILE_SIZE_KB_: Woe,
  _A_FILE_SIZE_MB_: Goe,
  _A_FILE_SIZE_GB_: Koe,
  _A_FILE_SIZE_TB_: joe,
  _A_FILE_SIZE_PB_: zoe,
  _A_FILE_SIZE_EB_: Yoe,
  _A_FILE_SIZE_ZB_: Xoe,
  _A_FILE_SIZE_YB_: Zoe
}, us = {
  ar: Fle,
  de: Kle,
  en: noe,
  es: coe,
  fr: Loe,
  hr: Boe,
  it: Hoe,
  ru: Joe
}, Qoe = "غلق", eue = "يكمل", tue = "مواد لكل صفحة", nue = "مزيد من الإجراءات", rue = "التالي", aue = "لا", sue = "سابق", iue = "إزالة المحتوى", lue = "إزالة التحديد", oue = "قائمة البحث", uue = "نعم", _ue = {
  "_ADD_NOTIFICATION_{{type}}_": "إضافة إشعار {{ type }}",
  _ALERT_CLOSE_: Qoe,
  _CONTINUE_: eue,
  _ITEMS_PER_PAGE_: tue,
  _MORE_ACTIONS_: nue,
  _NEXT_: rue,
  _NO_: aue,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ count}} من {{ current }} - {{ start }}",
  _PREVIOUS_: sue,
  _REMOVE_FIELD_CONTENT_: iue,
  _REMOVE_SELECTION_: lue,
  _SEARCH_MENU_: oue,
  _YES_: uue
}, due = "Schließen", cue = "Fortfahren", fue = "Objekte pro Seite", hue = "Weitere Aktionen", Aue = "Nächste", Eue = "Nein", pue = "Vorherige", Tue = "Feldinhalt entfernen", mue = "Auswahl entfernen", Sue = "Menüsuche", bue = "[Keine Auswahl]", Lue = "Ja", vue = {
  "_ADD_NOTIFICATION_{{type}}_": "Benachrichtigung hinzufügen {{ type }}",
  _ALERT_CLOSE_: due,
  _CONTINUE_: cue,
  _ITEMS_PER_PAGE_: fue,
  _MORE_ACTIONS_: hue,
  _NEXT_: Aue,
  _NO_: Eue,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} von {{ count}}",
  _PREVIOUS_: pue,
  _REMOVE_FIELD_CONTENT_: Tue,
  _REMOVE_SELECTION_: mue,
  _SEARCH_MENU_: Sue,
  _SELECT_TEXT_EMPTY_: bue,
  _YES_: Lue
}, Iue = "Close", yue = "Continue", gue = "Items per page", Rue = "more actions", Oue = "Next", Cue = "No", Nue = "Previous", Due = "Remove field content", Bue = "remove selection", wue = "Search menu", Pue = "[No selection]", xue = "Yes", Fue = {
  "_ADD_NOTIFICATION_{{type}}_": "Add Notification {{ type }}",
  _ALERT_CLOSE_: Iue,
  _CONTINUE_: yue,
  _ITEMS_PER_PAGE_: gue,
  _MORE_ACTIONS_: Rue,
  _NEXT_: Oue,
  _NO_: Cue,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} from {{ count}}",
  _PREVIOUS_: Nue,
  _REMOVE_FIELD_CONTENT_: Due,
  _REMOVE_SELECTION_: Bue,
  _SEARCH_MENU_: wue,
  _SELECT_TEXT_EMPTY_: Pue,
  _YES_: xue
}, Mue = "Cerrar", que = "Continuar", $ue = "Artículos por página", kue = "Otras acciones", Uue = "Próximo", Hue = "No", Vue = "Previo", Wue = "Quitar el contenido del campo", Gue = "eliminar selección", Kue = "Menú de búsqueda", jue = "Sí", zue = {
  "_ADD_NOTIFICATION_{{type}}_": "Agregar Notificación {{ type }}",
  _ALERT_CLOSE_: Mue,
  _CONTINUE_: que,
  _ITEMS_PER_PAGE_: $ue,
  _MORE_ACTIONS_: kue,
  _NEXT_: Uue,
  _NO_: Hue,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} de {{ count}}",
  _PREVIOUS_: Vue,
  _REMOVE_FIELD_CONTENT_: Wue,
  _REMOVE_SELECTION_: Gue,
  _SEARCH_MENU_: Kue,
  _YES_: jue
}, Yue = "Fermer", Xue = "Continuer", Zue = "objets par page", Jue = "autres actions", Que = "Suivant", e_e = "Non", t_e = "Précédent", n_e = "Supprimer le contenu du champ", r_e = "supprimer la sélection", a_e = "Menu de recherche", s_e = "Oui", i_e = {
  "_ADD_NOTIFICATION_{{type}}_": "Ajouter notification {{ type }}",
  _ALERT_CLOSE_: Yue,
  _CONTINUE_: Xue,
  _ITEMS_PER_PAGE_: Zue,
  _MORE_ACTIONS_: Jue,
  _NEXT_: Que,
  _NO_: e_e,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} depuis {{ count}}",
  _PREVIOUS_: t_e,
  _REMOVE_FIELD_CONTENT_: n_e,
  _REMOVE_SELECTION_: r_e,
  _SEARCH_MENU_: a_e,
  _YES_: s_e
}, l_e = "Zatvori", o_e = "Nastaviti", u_e = "Stavke po stranici", __e = "Daljnje akcije", d_e = "Sljedeći", c_e = "Ne", f_e = "Prethodni", h_e = "Izbrišite sadržaj polja", A_e = "Ukloniti odabir", E_e = "Pretraživanje izbornika", p_e = "[Bez odabira]", T_e = "Da", m_e = {
  "_ADD_NOTIFICATION_{{type}}_": "Dodaj obavijest {{ type }}",
  _ALERT_CLOSE_: l_e,
  _CONTINUE_: o_e,
  _ITEMS_PER_PAGE_: u_e,
  _MORE_ACTIONS_: __e,
  _NEXT_: d_e,
  _NO_: c_e,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} iz {{ count}}",
  _PREVIOUS_: f_e,
  _REMOVE_FIELD_CONTENT_: h_e,
  _REMOVE_SELECTION_: A_e,
  _SEARCH_MENU_: E_e,
  _SELECT_TEXT_EMPTY_: p_e,
  _YES_: T_e
}, S_e = "Vicino", b_e = "Continua", L_e = "oggetti per pagina", v_e = "Ulteriori azioni", I_e = "Prossimo", y_e = "No", g_e = "Precedente", R_e = "Rimuovi il contenuto del campo", O_e = "rimuovere la selezione", C_e = "Menù di ricerca", N_e = "Sì", D_e = {
  "_ADD_NOTIFICATION_{{type}}_": "Aggiungi notifica {{ type }}",
  _ALERT_CLOSE_: S_e,
  _CONTINUE_: b_e,
  _ITEMS_PER_PAGE_: L_e,
  _MORE_ACTIONS_: v_e,
  _NEXT_: I_e,
  _NO_: y_e,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} da {{ count}}",
  _PREVIOUS_: g_e,
  _REMOVE_FIELD_CONTENT_: R_e,
  _REMOVE_SELECTION_: O_e,
  _SEARCH_MENU_: C_e,
  _YES_: N_e
}, B_e = "Закрыть", w_e = "Продолжать", P_e = "Элементов на странице", x_e = "Дальнейшие действия", F_e = "Следующий", M_e = "Нет", q_e = "Предыдущий", $_e = "Удалить содержимое поля", k_e = "удалить выделение", U_e = "Быстрый поиск", H_e = "поиск в меню", V_e = "[Нет элементов]", W_e = "Да", G_e = {
  "_ADD_NOTIFICATION_{{type}}_": "Добавить Уведомление {{ type }}",
  _ALERT_CLOSE_: B_e,
  _CONTINUE_: w_e,
  _ITEMS_PER_PAGE_: P_e,
  _MORE_ACTIONS_: x_e,
  _NEXT_: F_e,
  _NO_: M_e,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} из {{ count}}",
  _PREVIOUS_: q_e,
  _REMOVE_FIELD_CONTENT_: $_e,
  _REMOVE_SELECTION_: k_e,
  _SCHNELLSUCHE_: U_e,
  _SEARCH_MENU_: H_e,
  _SELECT_TEXT_EMPTY_: V_e,
  _YES_: W_e
}, K_e = {
  ..._ue,
  ...rs.ar,
  ...ka.ar,
  ...Qa.ar,
  ...Ma.ar,
  ...ns.ar,
  ...is.ar,
  ...Ua.ar,
  ...za.ar,
  ...Wa.ar,
  ...Ka.ar,
  ...Ha.ar,
  ...os.ar,
  ...Za.ar,
  ...$a.ar,
  ...Xa.ar,
  ...ls.ar,
  ...us.ar,
  ...Ja.ar,
  ...ja.ar,
  ...ss.ar,
  ...as.ar,
  ...Ya.ar,
  ...qa.ar,
  ...es.ar,
  ...Ga.ar,
  ...Va.ar,
  ...ts.ar
}, j_e = {
  ...vue,
  ...rs.de,
  ...ka.de,
  ...Qa.de,
  ...Ma.de,
  ...ns.de,
  ...is.de,
  ...Ua.de,
  ...za.de,
  ...Wa.de,
  ...Ka.de,
  ...Ha.de,
  ...os.de,
  ...Za.de,
  ...$a.de,
  ...Xa.de,
  ...ls.de,
  ...us.de,
  ...Ja.de,
  ...ja.de,
  ...ss.de,
  ...as.de,
  ...Ya.de,
  ...qa.de,
  ...es.de,
  ...Ga.de,
  ...Va.de,
  ...ts.de
}, z_e = {
  ...Fue,
  ...rs.en,
  ...ka.en,
  ...Qa.en,
  ...Ma.en,
  ...ns.en,
  ...is.en,
  ...Ua.en,
  ...za.en,
  ...Wa.en,
  ...Ka.en,
  ...Ha.en,
  ...os.en,
  ...Za.en,
  ...$a.en,
  ...Xa.en,
  ...ls.en,
  ...us.en,
  ...Ja.en,
  ...ja.en,
  ...ss.en,
  ...as.en,
  ...Ya.en,
  ...qa.en,
  ...es.en,
  ...Ga.en,
  ...Va.en,
  ...ts.en
}, Y_e = {
  ...zue,
  ...rs.es,
  ...ka.es,
  ...Qa.es,
  ...Ma.es,
  ...ns.es,
  ...is.es,
  ...Ua.es,
  ...za.es,
  ...Wa.es,
  ...Ka.es,
  ...Ha.es,
  ...os.es,
  ...Za.es,
  ...$a.es,
  ...Xa.es,
  ...ls.es,
  ...us.es,
  ...Ja.es,
  ...ja.es,
  ...ss.es,
  ...as.es,
  ...Ya.es,
  ...qa.es,
  ...es.es,
  ...Ga.es,
  ...Va.es,
  ...ts.es
}, X_e = {
  ...i_e,
  ...rs.fr,
  ...ka.fr,
  ...Qa.fr,
  ...Ma.fr,
  ...ns.fr,
  ...is.fr,
  ...Ua.fr,
  ...za.fr,
  ...Wa.fr,
  ...Ka.fr,
  ...Ha.fr,
  ...os.fr,
  ...Za.fr,
  ...$a.fr,
  ...Xa.fr,
  ...ls.fr,
  ...us.fr,
  ...Ja.fr,
  ...ja.fr,
  ...ss.fr,
  ...as.fr,
  ...Ya.fr,
  ...qa.fr,
  ...es.fr,
  ...Ga.fr,
  ...Va.fr,
  ...ts.fr
}, Z_e = {
  ...m_e,
  ...rs.hr,
  ...ka.hr,
  ...Qa.hr,
  ...Ma.hr,
  ...ns.hr,
  ...is.hr,
  ...Ua.hr,
  ...za.hr,
  ...Wa.hr,
  ...Ka.hr,
  ...Ha.hr,
  ...os.hr,
  ...Za.hr,
  ...$a.hr,
  ...Xa.hr,
  ...ls.hr,
  ...us.hr,
  ...Ja.hr,
  ...ja.hr,
  ...ss.hr,
  ...as.hr,
  ...Ya.hr,
  ...qa.hr,
  ...es.hr,
  ...Ga.hr,
  ...Va.hr,
  ...ts.hr
}, J_e = {
  ...D_e,
  ...rs.it,
  ...ka.it,
  ...Qa.it,
  ...Ma.it,
  ...ns.it,
  ...is.it,
  ...Ua.it,
  ...za.it,
  ...Wa.it,
  ...Ka.it,
  ...Ha.it,
  ...os.it,
  ...Za.it,
  ...$a.it,
  ...Xa.it,
  ...ls.it,
  ...us.it,
  ...Ja.it,
  ...ja.it,
  ...ss.it,
  ...as.it,
  ...Ya.it,
  ...qa.it,
  ...es.it,
  ...Ga.it,
  ...Va.it,
  ...ts.it
}, Q_e = {
  ...G_e,
  ...rs.ru,
  ...ka.ru,
  ...Qa.ru,
  ...Ma.ru,
  ...ns.ru,
  ...is.ru,
  ...Ua.ru,
  ...za.ru,
  ...Wa.ru,
  ...Ka.ru,
  ...Ha.ru,
  ...os.ru,
  ...Za.ru,
  ...$a.ru,
  ...Xa.ru,
  ...ls.ru,
  ...us.ru,
  ...Ja.ru,
  ...ja.ru,
  ...ss.ru,
  ...as.ru,
  ...Ya.ru,
  ...qa.ru,
  ...es.ru,
  ...Ga.ru,
  ...Va.ru,
  ...ts.ru
}, hce = {
  ar: K_e,
  de: j_e,
  en: z_e,
  es: Y_e,
  fr: X_e,
  hr: Z_e,
  it: J_e,
  ru: Q_e
};
export {
  sde as AAccordion,
  gc as AAlert,
  ide as AAlertPlugin,
  ft as AButton,
  UF as ACheckbox,
  Ma as ACheckboxI18n,
  Gc as ACheckboxRadioGroups,
  dl as ACloak,
  qa as ACloakI18n,
  ude as ACloakPlugin,
  Zc as AConfirmAPI,
  ri as ADatepicker,
  A0 as ADatepickerRange,
  $a as ADatepickerRangeI18n,
  fde as ADisclosure,
  ka as ADisclosureI18n,
  ia as ADropdown,
  YT as ADropdownGlobalAPI,
  be as AElement,
  K0 as AErrors,
  ln as AErrorsText,
  e1 as AEventOutsideAPI,
  um as AFieldset,
  Ua as AFieldsetI18n,
  pde as AFilters,
  Wn as AFiltersAPI,
  PF as AFiltersAPI_additionFilters,
  rq as AFiltersHorizontal,
  Ha as AFiltersI18n,
  nce as AFiltersPlugin,
  y1 as AFiltersRight,
  Nu as AForm,
  Tde as AFormElement,
  Du as AFormElementBtnClear,
  Zt as AFormHelpText,
  Ede as AFormPlugin,
  Vn as AFormPluginOptions,
  gn as AFormReadonly,
  Hd as AGet,
  cm as AGroup,
  Vd as AGroupButtonDropdown,
  mde as AGroupButtonDropdownPlugin,
  NW as AHttpAPI,
  ES as AHttpAPI_API_CONFIG,
  RW as AHttpAPI_abortHttp,
  $s as AHttpAPI_callHttpRequestAndCheckSavedApi,
  OW as AHttpAPI_clearAllApiSaved,
  CW as AHttpAPI_clearApiSaved,
  MW as AHttpAPI_deleteHttp,
  DW as AHttpAPI_getHttp,
  BW as AHttpAPI_getListHttp,
  wW as AHttpAPI_getOptionsHttp,
  tce as AHttpAPI_getUrlParams,
  FW as AHttpAPI_patchHttp,
  PW as AHttpAPI_postHttp,
  xW as AHttpAPI_putHttp,
  IW as AHttpAPI_setBaseUrl,
  yW as AHttpAPI_setErrorCallbacks,
  gW as AHttpAPI_setHeaderParams,
  kW as AHttpAPI_setUrlForArray,
  $W as AHttpAPI_setUrlWithParams,
  rce as AHttpPlugin,
  lde as AI18nPlugin,
  ut as AIcon,
  ode as AIconPlugin,
  Sde as AInfiniteScroll,
  vn as AInput,
  oM as AInputCurrency,
  Va as AInputCurrencyI18n,
  ace as AInputCurrencyPlugin,
  an as AInputCurrencyPluginOptions,
  AM as AInputFile,
  Wa as AInputI18n,
  Ba as AInputNumber,
  Ga as AInputNumberI18n,
  sce as AInputNumberPlugin,
  fn as AInputNumberPluginOptions,
  No as AInputNumberRange,
  Ka as AInputNumberRangeI18n,
  PM as AJson,
  ja as AJsonI18n,
  T$ as AKeyChildren,
  Ke as AKeyId,
  bt as AKeyLabel,
  Al as AKeyParent,
  X as AKeysCode,
  Mt as ALabel,
  Bu as ALink,
  bde as ALinkCopy,
  za as ALinkCopyI18n,
  Pq as AList,
  pm as ALoading,
  Ya as ALoadingI18n,
  Lde as ALoadingPlugin,
  vde as AMenu,
  Xa as AMenu2I18n,
  Fq as AMenuButtonToggle,
  mm as AMenuButtonToggle_ToggleAPI,
  En as AMobileAPI,
  Xo as AMobileAPI_isMobileWidth,
  Po as AMobileAPI_setIsMobileWidth,
  lce as AMobilePlugin,
  wu as AModal,
  yde as AModalConfirm,
  K$ as AModalForm,
  Za as AModalI18n,
  Ide as AModalPlugin,
  gde as AModalWizard,
  Rde as ANotification,
  Cu as ANotificationAPI,
  W1 as ANotificationAPI_addNotification,
  V1 as ANotificationAPI_setNotificationTimeout,
  _l as AOnHooks,
  Ou as AOneCheckbox,
  Ode as APageTabTitle,
  Ik as APageTabTitleAPI,
  yk as APageTabTitleAPI_setBaseTitle,
  oce as APageTabTitlePlugin,
  qk as APagination,
  Ja as APaginationI18n,
  Rr as APlacements,
  jc as APopupAPI,
  Ud as APopupAPI_closePopup,
  cd as APopupAPI_isCurrentPopupOpen,
  kd as APopupAPI_openPopup,
  y0 as APopupAPI_togglePopup,
  Cde as AProgress,
  Nde as AProgressCircle,
  im as ARadio,
  Qa as ARadioI18n,
  Dde as ARate,
  Eq as ARequired,
  es as ARequiredI18n,
  Gk as AResizer,
  KM as ARouterLinkConfig,
  ts as ARouterLinkConfigI18n,
  uce as ARouterLinkConfigPlugin,
  zt as ARouterLinkConfigPluginOptions,
  Yt as ASafeHtml,
  Bde as AScale,
  fl as ASelect,
  ns as ASelectI18n,
  Ade as ASelectPlugin,
  wde as AShowMore,
  rs as AShowMoreI18n,
  hl as ASpinner,
  as as ASpinnerI18n,
  _de as ASpinnerPlugin,
  lm as ASwitch,
  ss as ASwitchI18n,
  xde as ATable,
  is as ATableI18n,
  Pde as ATablePlugin,
  Fde as ATabs,
  i1 as ATemplate,
  h1 as ATextarea,
  rF as ATooltip,
  Ae as ATranslation,
  pi as AUiTypes_typesContainer,
  fM as AUiTypes_typesLabelProps,
  zc as AUiTypes_typesModelArray,
  tm as AUiTypes_typesModelObject,
  cM as AUiTypes_typesWithData,
  h$ as AVerticalScroll,
  ls as AVerticalScrollI18n,
  Sk as AWizard,
  os as AWizardI18n,
  ice as AlohaPlugin,
  Ct as EventBus,
  us as Filters18n,
  sf as UIDataGroupAPI,
  Bt as UIExcludeRenderAttributesAPI,
  Xt as UiAPI,
  ku as UiClearButtonAPI,
  lf as UiCollapseAPI,
  of as UiDataFromServerAPI,
  uf as UiDataSortAPI,
  _f as UiDataWatchEmitAPI,
  df as UiDataWithKeyIdAndLabelAPI,
  wl as UiDisabledAPI,
  rf as UiInputAutofillAPI,
  af as UiLabelClickEventBusAPI,
  cf as UiLoadingAPI,
  ff as UiSearchAPI,
  Jt as UiStyleHideAPI,
  Sd as colorToHex,
  qo as concatTwoStringsWithSpace,
  nde as dompurify,
  EF as filterBoolean,
  pF as filterCapitalize,
  TF as filterCurrency,
  mF as filterDate,
  SF as filterDefaultForEmpty,
  bF as filterEmail,
  LF as filterEscapeHtml,
  vF as filterFileSize,
  tl as filterFloat,
  IF as filterJson,
  yF as filterKeyValue,
  gF as filterLimitTo,
  RF as filterLink,
  tu as filterList,
  CF as filterLowerCase,
  NF as filterMask,
  DF as filterPropertyByValue,
  BF as filterSearchHighlight,
  wF as filterUpperCase,
  m0 as focusableList,
  Ei as focusableSelector,
  VP as getTotalNestedCount,
  xt as getTranslatedText,
  cde as getUniqueSelector,
  fce as hexToRgb,
  IT as i18n,
  K_e as i18nAR,
  hce as i18nAll,
  j_e as i18nDE,
  z_e as i18nEN,
  Y_e as i18nES,
  X_e as i18nFR,
  Z_e as i18nHR,
  J_e as i18nIT,
  Q_e as i18nRU,
  UP as isArrayOfArrays,
  ade as isArrayOfStrings,
  sM as isEven,
  hde as isOdd,
  Da as isPlaceholderTranslate,
  oi as isTranslate,
  dce as mixBlack,
  pS as mixColor,
  _ce as mixWhite,
  cce as rgbToHex,
  rde as sanitize,
  Yo as sanitizeLocal,
  dde as scrollToElement,
  sa as setFocusToElement,
  S0 as setFocusToNextFocusableElement,
  b0 as setFocusToPreviousFocusableElement,
  RT as setI18n,
  OT as setLanguage,
  Rc as timeTranslationLastChanged,
  $o as toPrecision,
  sx as toggleTranslate,
  gT as translation,
  CT as updateTranslation
};
