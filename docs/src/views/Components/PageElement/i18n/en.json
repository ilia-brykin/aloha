{
  "_A_ELEMENT_COMPONENT_DESCRIPTION_": "The <strong lang=\"en\">AElement</strong> component is a universal element with advanced configuration through props, allowing customization of accessibility, classes, IDs, loading state, and other parameters. It supports styling, text, icons, and event handling such as click, making it a powerful tool for building interfaces.",
  "_A_ELEMENT_COMPONENT_NAME_": "Element",
  "_A_ELEMENT_EVENTS_CLICK_DESCRIPTION_": "Triggered when the component is clicked.",
  "_A_ELEMENT_EXAMPLE_BIG_TITLE_": "<div>THIS IS A <strong>MAGICAL HTML TOOLTIP!!!!</strong></div><div>Second line</div>",
  "_A_ELEMENT_EXAMPLE_BIG_TITLE_{{number}}_": "<div>THIS IS A <strong>MAGICAL HTML TOOLTIP!!!!</strong></div><div>Second line</div><div>Number: {{ number }}</div>",
  "_A_ELEMENT_EXAMPLE_HTML_": "<span onclick='alert(\"Aloha\")'>Aloha</button>",
  "_A_ELEMENT_GROUP_ARIA_DISABLED_DESCRIPTION_": "The <strong lang=\"en\">AElement</strong> component allows rendering an element in an inactive state and setting the appropriate accessibility attributes. To do this, use the \"<strong lang=\"en\">aria-disabled</strong>\" property to indicate the disabled state. This allows events such as focus or hover to work while keeping the element inactive for clicks.",
  "_A_ELEMENT_GROUP_ARIA_DISABLED_HEADER_": "Inactive element using <strong lang=\"en\">aria-disabled</strong>",
  "_A_ELEMENT_GROUP_BASIC_CLASS_DESCRIPTION_": "There are many <strong lang=\"en\">CSS</strong> classes you can use with the element.",
  "_A_ELEMENT_GROUP_BASIC_CLASS_HEADER_": "Basic classes",
  "_A_ELEMENT_GROUP_BASIC_DESCRIPTION_": "There are several types you can use with the element: <strong lang=\"en\">button</strong>, <strong lang=\"en\">link</strong>, <strong lang=\"en\">text</strong>, <strong lang=\"en\">submit</strong>, and <strong lang=\"en\">reset</strong>.",
  "_A_ELEMENT_GROUP_COMPLEX_DESCRIPTION_": "The <strong lang=\"en\">AElement</strong> component allows using various advanced properties and events for configuring and managing the element. The following example demonstrates several properties and events used to configure the element and manage its loading state.",
  "_A_ELEMENT_GROUP_COMPLEX_HEADER_": "Using advanced properties and events",
  "_A_ELEMENT_GROUP_DISABLED_DESCRIPTION_": "The <strong lang=\"en\">AElement</strong> component allows disabling the element via the \"<strong lang=\"en\">disabled</strong>\" property. This makes the element non-interactive both visually and functionally.",
  "_A_ELEMENT_GROUP_DISABLED_HEADER_": "Disabling the element",
  "_A_ELEMENT_GROUP_GROUP_DESCRIPTION_": "Group a series of elements in one row.",
  "_A_ELEMENT_GROUP_GROUP_HEADER_": "Horizontal grouping of elements",
  "_A_ELEMENT_GROUP_GROUP_HORIZONTAL_VERTICAL_DESCRIPTION_": "You can group elements in a table layout.",
  "_A_ELEMENT_GROUP_GROUP_HORIZONTAL_VERTICAL_HEADER_": "Tabular grouping of elements",
  "_A_ELEMENT_GROUP_GROUP_SIZES_DESCRIPTION_": "Instead of applying size classes to each element in the group, simply add <strong lang=\"en\">.a_btn_group_large</strong> or <strong lang=\"en\">.a_btn_group_small</strong> to each <strong lang=\"en\">.a_btn_group</strong>, including nested groups if you have multiple levels.",
  "_A_ELEMENT_GROUP_GROUP_SIZES_HEADER_": "Group element sizes",
  "_A_ELEMENT_GROUP_GROUP_VERTICAL_DESCRIPTION_": "Arrange elements in a vertical column.",
  "_A_ELEMENT_GROUP_GROUP_VERTICAL_HEADER_": "Vertical grouping of elements",
  "_A_ELEMENT_GROUP_HTML_DESCRIPTION_": "The <strong lang=\"en\">AElement</strong> component allows safely rendering <strong lang=\"en\">HTML</strong> content without fully trusting it. Using the \"<strong lang=\"en\">html</strong>\" property and the <strong lang=\"en\">DomPurify</strong> library, the provided <strong lang=\"en\">HTML</strong> content is sanitized and safely displayed inside the element.",
  "_A_ELEMENT_GROUP_HTML_HEADER_": "Safe display of <strong lang=\"en\">HTML</strong> content using <strong lang=\"en\">DomPurify</strong>",
  "_A_ELEMENT_GROUP_ICONS_DESCRIPTION_": "The <strong lang=\"en\">AElement</strong> component allows displaying icons to the left and right of the element using the \"<strong lang=\"en\">:icon-left</strong>\" and \"<strong lang=\"en\">:icon-right</strong>\" properties. You can define different icons for different devices to achieve a customized look.",
  "_A_ELEMENT_GROUP_ICONS_HEADER_": "Using icon properties",
  "_A_ELEMENT_GROUP_LOADING_DESCRIPTION_": "The <strong lang=\"en\">AElement</strong> component allows showing the element in a loading state with a loading indicator. You can also specify the alignment of the loading indicator. This is useful for representing a background process that requires the user to wait.",
  "_A_ELEMENT_GROUP_LOADING_HEADER_": "Element in loading state and loading indicator alignment",
  "_A_ELEMENT_GROUP_OUTLINE_DESCRIPTION_": "Need an element without strong background colors? Replace the default modifier classes with <strong lang=\"en\">.a_btn_outline_*</strong> classes to remove all background images and colors on any element.",
  "_A_ELEMENT_GROUP_OUTLINE_HEADER_": "Outline elements",
  "_A_ELEMENT_GROUP_SAFE_HTML_DESCRIPTION_": "The <strong lang=\"en\">AElement</strong> component allows using safe <strong lang=\"en\">HTML</strong> content as a string inside the element. When the \"<strong lang=\"en\">safe-html</strong>\" property is enabled and an <strong lang=\"en\">HTML</strong> string is passed, the provided <strong lang=\"en\">HTML</strong> content is trusted and inserted directly using the <strong lang=\"en\">JavaScript</strong> \"<strong lang=\"en\">innerHTML</strong>\" attribute.",
  "_A_ELEMENT_GROUP_SAFE_HTML_HEADER_": "Using safe <strong lang=\"en\">HTML</strong> content as a string inside the element",
  "_A_ELEMENT_GROUP_SIZES_DESCRIPTION_": "Want larger or smaller elements? Add <strong lang=\"en\">.a_btn_large</strong> or <strong lang=\"en\">.a_btn_small</strong> for additional sizing.",
  "_A_ELEMENT_GROUP_SIZES_HEADER_": "Element sizes",
  "_A_ELEMENT_GROUP_SLOT_APPEND_DESCRIPTION_": "The <strong lang=\"en\">AElement</strong> component allows rendering additional content after the element's text using the \"<strong lang=\"en\">buttonAppend</strong>\" slot. Content placed in this slot will appear after the element's text.",
  "_A_ELEMENT_GROUP_SLOT_APPEND_HEADER_": "Using the \"<strong lang=\"en\">buttonAppend</strong>\" slot",
  "_A_ELEMENT_GROUP_SLOT_DEFAULT_DESCRIPTION_": "The <strong lang=\"en\">AElement</strong> component allows placing custom content inside the element using the default slot \"<strong lang=\"en\">:slots='default'</strong>\". Content placed in this slot will be displayed inside the element.",
  "_A_ELEMENT_GROUP_SLOT_DEFAULT_HEADER_": "Using the default slot",
  "_A_ELEMENT_GROUP_SLOT_PREPEND_DESCRIPTION_": "The <strong lang=\"en\">AElement</strong> component allows rendering additional content before the element's text using the \"<strong lang=\"en\">buttonPrepend</strong>\" slot. Content placed in this slot will appear before the element's text.",
  "_A_ELEMENT_GROUP_SLOT_PREPEND_HEADER_": "Using the \"<strong lang=\"en\">buttonPrepend</strong>\" slot",
  "_A_ELEMENT_GROUP_SLOT_TITLE_DESCRIPTION_": "The <strong lang=\"en\">AElement</strong> component allows specifying custom <strong lang=\"en\">HTML</strong> content for the element's title using the \"<strong lang=\"en\">buttonTitle</strong>\" slot in combination with the \"<strong lang=\"en\">:is-title-html</strong>\" attribute. Content placed in this slot will be used as the <strong lang=\"en\">HTML</strong> title of the element.",
  "_A_ELEMENT_GROUP_SLOT_TITLE_HEADER_": "Using the \"<strong lang=\"en\">buttonTitle</strong>\" slot for the <strong lang=\"en\">HTML</strong> title",
  "_A_ELEMENT_GROUP_STOP_DESCRIPTION_": "Setting the <strong lang=\"en\">props</strong> \"stop\" to a boolean value can be used to control whether the event should propagate. The example shows two scenarios: one with \"stop\" set to <strong lang=\"en\">true</strong> and the other with <strong lang=\"en\">false</strong>.",
  "_A_ELEMENT_GROUP_STOP_HEADER_": "Using the <strong lang=\"en\">props</strong> \"stop\" to stop event propagation",
  "_A_ELEMENT_GROUP_SWITCH_DESCRIPTION_": "The <strong lang=\"en\">AElement</strong> component allows using the element as a switch with two states (on/off). Using the \"<strong lang=\"en\">:is-switch</strong>\" and \"<strong lang=\"en\">:model-switch</strong>\" attributes, you can enable switch mode and control the element's state. The element is rendered as a <strong lang=\"en\">button</strong> tag with the <strong lang=\"en\">aria-pressed</strong> attribute indicating its state.",
  "_A_ELEMENT_GROUP_SWITCH_HEADER_": "Using the element in switch mode",
  "_A_ELEMENT_GROUP_TEXT_AFTER_BEFORE_DESCRIPTION_": "The <strong lang=\"en\">AElement</strong> component allows displaying additional text inside the element. This can be useful for adding predefined text before or after the main text of the element.",
  "_A_ELEMENT_GROUP_TEXT_AFTER_BEFORE_HEADER_": "Additional text inside the element",
  "_A_ELEMENT_GROUP_TEXT_OBJECT_DESCRIPTION_": "The <strong lang=\"en\">AElement</strong> component allows you to configure the element text for different devices. Using the \"<strong lang=\"en\">:text</strong>\" prop as an object, you can specify different text for mobile and desktop devices.",
  "_A_ELEMENT_GROUP_TEXT_OBJECT_HEADER_": "Configuring text for different devices",
  "_A_ELEMENT_GROUP_TEXT_TAG_DESCRIPTION_": "This example shows how to configure the tag for the text in the <strong lang=\"en\">AElement</strong> component in <strong lang=\"en\">Vue.js</strong>. By default, the text is rendered inside a <strong lang=\"en\">span</strong> tag. However, using the <strong lang=\"en\">text-tag</strong> prop, the tag can be customized to use other <strong lang=\"en\">HTML</strong> tags such as <strong lang=\"en\">strong</strong>, <strong lang=\"en\">em</strong>, or others.",
  "_A_ELEMENT_GROUP_TEXT_TAG_HEADER_": "Changing the text tag in the <strong lang=\"en\">AElement</strong> component",
  "_A_ELEMENT_GROUP_TITLE_ARRAY_DESCRIPTION_": "The <strong lang=\"en\">AElement</strong> component allows you to combine multiple titles in one attribute. Using the \"<strong lang=\"en\">:title</strong>\" prop as an array, you can specify multiple elements that will be merged into a single title for the element.",
  "_A_ELEMENT_GROUP_TITLE_ARRAY_HEADER_": "Combining multiple titles into a single attribute",
  "_A_ELEMENT_GROUP_TITLE_HTML_DESCRIPTION_": "The <strong lang=\"en\">AElement</strong> component allows displaying the title as <strong lang=\"en\">HTML</strong> and controlling its placement. Using the \"<strong lang=\"en\">:is-title-html</strong>\", \"<strong lang=\"en\">:title</strong>\", and \"<strong lang=\"en\">:title-placement</strong>\" props, you can use an <strong lang=\"en\">HTML</strong> title and define its placement.",
  "_A_ELEMENT_GROUP_TITLE_HTML_EXTRA_DESCRIPTION_": "Displaying <strong lang=\"en\">HTML</strong> title with translation and parameters",
  "_A_ELEMENT_GROUP_TITLE_HTML_EXTRA_HEADER_": "The example below shows a translated title with a parameter. The <strong lang=\"en\">number</strong> parameter is passed via the <strong lang=\"en\">extra</strong> attribute.",
  "_A_ELEMENT_GROUP_TITLE_HTML_HEADER_": "Displaying <strong lang=\"en\">HTML</strong> title and its placement",
  "_A_ELEMENT_GROUP_TRANSPARENT_DESCRIPTION_": "If you need an element that blends with the background rather than overlaying it, replace standard classes with <strong lang=\"en\">.a_btn_transparent*</strong> classes.",
  "_A_ELEMENT_GROUP_TRANSPARENT_HEADER_": "Transparent elements",
  "_A_ELEMENT_PROPS_ARIA_DISABLED_DESCRIPTION_": "Determines whether the element is inactive. If set to <strong lang=\"en\">true</strong>, the element will appear as inactive, and the \"<strong lang=\"en\">aria-disabled</strong>\" accessibility attribute will be added.",
  "_A_ELEMENT_PROPS_ARIA_LABEL_DESCRIPTION_": "Defines the <strong lang=\"en\">ARIA</strong> label for the element. You can use a string, number, or object as the value to set the desired label.",
  "_A_ELEMENT_PROPS_ATTRIBUTES_DESCRIPTION_": "Specifies additional attributes for the element. You can use an object to define the required attributes and their values.",
  "_A_ELEMENT_PROPS_CLASS_DEFAULT_DESCRIPTION_": "Sets the default style class for the element, establishing its general visual style.",
  "_A_ELEMENT_PROPS_CLASS_DEFAULT_HIDDEN_DESCRIPTION_": "Defines the class used to hide the element, used for managing its visibility in different contexts.",
  "_A_ELEMENT_PROPS_CLASS_DESCRIPTION_": "<strong lang=\"en\">CSS</strong> class",
  "_A_ELEMENT_PROPS_CLASS_DISABLED_DESCRIPTION_": "Specifies the <strong lang=\"en\">CSS</strong> class applied when the element is disabled.",
  "_A_ELEMENT_PROPS_DISABLED_DESCRIPTION_": "Determines whether the element is disabled. If set to <strong lang=\"en\">true</strong>, the element will be non-interactive.",
  "_A_ELEMENT_PROPS_EXTRA_DATA_DESCRIPTION_": "Provides additional data for all slots of the component, allowing you to pass custom data and information for flexible and detailed slot customization.",
  "_A_ELEMENT_PROPS_EXTRA_DESCRIPTION_": "Additional object for translation",
  "_A_ELEMENT_PROPS_HTML_DESCRIPTION_": "<strong lang=\"en\">HTML</strong> content to be rendered inside the element.",
  "_A_ELEMENT_PROPS_HTML_SCREEN_READER_DESCRIPTION_": "Defines <strong lang=\"en\">HTML</strong> content for screen reader accessibility. You can use a string, number, or object to specify the desired <strong lang=\"en\">HTML</strong> content.",
  "_A_ELEMENT_PROPS_ICON_ATTRIBUTES_DESCRIPTION_": "Defines additional attributes for icons. You can use an object to specify the necessary attributes and their values for icons.",
  "_A_ELEMENT_PROPS_ICON_CLASS_DESCRIPTION_": "Specifies an additional <strong lang=\"en\">CSS</strong> class for the icons.",
  "_A_ELEMENT_PROPS_ICON_LEFT_DESCRIPTION_": "Defines the icon displayed to the left of the element. You can specify the icon name as a string or provide different icons for different devices as an object.",
  "_A_ELEMENT_PROPS_ICON_RIGHT_DESCRIPTION_": "Defines the icon displayed to the right of the element. You can specify the icon name as a string or provide different icons for different devices as an object.",
  "_A_ELEMENT_PROPS_ICON_TAG_DESCRIPTION_": "Defines a custom <strong lang=\"en\">HTML</strong> tag for the icons.",
  "_A_ELEMENT_PROPS_ID_DESCRIPTION_": "Defines a unique ID for the element. If not specified, a unique ID will be automatically generated.",
  "_A_ELEMENT_PROPS_IS_SWITCH_DESCRIPTION_": "Determines whether the element should be used as a switch. If set to <strong lang=\"en\">true</strong>, the element will be rendered as a toggle.",
  "_A_ELEMENT_PROPS_IS_TITLE_HTML_DESCRIPTION_": "Determines whether the title should be interpreted as <strong lang=\"en\">HTML</strong>. If set to <strong lang=\"en\">true</strong>, the title will be rendered as <strong lang=\"en\">HTML</strong>.",
  "_A_ELEMENT_PROPS_LOADING_ALIGN_DESCRIPTION_": "Defines the alignment of the loading indicator. Accepts values \"<strong lang=\"en\">left</strong>\" or \"<strong lang=\"en\">right</strong>\".",
  "_A_ELEMENT_PROPS_LOADING_CLASS_DESCRIPTION_": "Specifies the <strong lang=\"en\">CSS</strong> class used when the element is in a loading state. Accepts a string or an object for different state styles.",
  "_A_ELEMENT_PROPS_LOADING_DESCRIPTION_": "Determines whether the element is in a loading state. If set to <strong lang=\"en\">true</strong>, a loading indicator will be shown.",
  "_A_ELEMENT_PROPS_MODEL_SWITCH_DESCRIPTION_": "The model value that controls the toggle state of the element. If set to <strong lang=\"en\">true</strong>, the element is active (<strong lang=\"en\">pressed=true</strong>); otherwise, it is inactive (<strong lang=\"en\">pressed=false</strong>).",
  "_A_ELEMENT_PROPS_PREVENT_DESCRIPTION_": "Determines whether to prevent the default behavior of event handlers for the element (<strong lang=\"en\">preventDefault</strong>).",
  "_A_ELEMENT_PROPS_SAFE_HTML_DESCRIPTION_": "Enables trust for the provided <strong lang=\"en\">HTML</strong> string, allowing it to be rendered inside the element.",
  "_A_ELEMENT_PROPS_SAFE_HTML_SCREEN_READER_DESCRIPTION_": "Defines safe <strong lang=\"en\">HTML</strong> content for screen reader regions. Accepts a string, number, or object for different states.",
  "_A_ELEMENT_PROPS_STOP_DESCRIPTION_": "Determines whether to stop event propagation (<strong lang=\"en\">stopPropagation</strong>).",
  "_A_ELEMENT_PROPS_TABINDEX_DESCRIPTION_": "Defines the <strong lang=\"en\">tabindex</strong> value for the element. Can be a number or a string.",
  "_A_ELEMENT_PROPS_TAG_DESCRIPTION_": "Specifies the <strong lang=\"en\">HTML</strong> tag to be used for rendering the element.",
  "_A_ELEMENT_PROPS_TEXT_AFTER_DESCRIPTION_": "Defines the text to be displayed after the main element text.",
  "_A_ELEMENT_PROPS_TEXT_ARIA_HIDDEN_DESCRIPTION_": "Indicates whether the element's text should be marked as <strong lang=\"en\">aria-hidden=\"true\"</strong>.",
  "_A_ELEMENT_PROPS_TEXT_BEFORE_DESCRIPTION_": "Defines the text to be displayed before the main element text.",
  "_A_ELEMENT_PROPS_TEXT_CLASS_DESCRIPTION_": "Specifies the <strong lang=\"en\">CSS</strong> class to be applied to the element’s text.",
  "_A_ELEMENT_PROPS_TEXT_DESCRIPTION_": "String or object containing text for different devices. Use the keys \"<strong lang=\"en\">mobile</strong>\" and \"<strong lang=\"en\">desktop</strong>\" to set respective texts.",
  "_A_ELEMENT_PROPS_TEXT_SCREEN_READER_DESCRIPTION_": "Defines the text to be read by a <strong lang=\"en\">screen reader</strong>.",
  "_A_ELEMENT_PROPS_TEXT_TAG_DESCRIPTION_": "This prop allows customizing the <strong lang=\"en\">HTML</strong> tag used to wrap the text inside the element.",
  "_A_ELEMENT_PROPS_TITLE_ATTRIBUTES_DESCRIPTION_": "Provides an object for configuring additional <strong lang=\"en\">HTML</strong> attributes for the element's title, allowing more detailed control over its behavior and style.",
  "_A_ELEMENT_PROPS_TITLE_DESCRIPTION_": "String or array of elements that will be merged into a single title.",
  "_A_ELEMENT_PROPS_TITLE_PLACEMENT_DESCRIPTION_": "Positioning of the <strong lang=\"en\">HTML</strong> title.",
  "_A_ELEMENT_PROPS_TITLE_Z_INDEX_DESCRIPTION_": "Sets the <strong lang=\"en\">z-index</strong> for the element's title to define its stacking order among overlapping elements.",
  "_A_ELEMENT_PROPS_TYPE_DESCRIPTION_": "Specifies the element type. Allowed values: <strong lang=\"en\">button</strong>, <strong lang=\"en\">link</strong>, <strong lang=\"en\">text</strong>, <strong lang=\"en\">submit</strong>, and <strong lang=\"en\">reset</strong>.",
  "_A_ELEMENT_SLOT_BUTTON_APPEND_DESCRIPTION_": "Slot containing content to be rendered after the element’s text.",
  "_A_ELEMENT_SLOT_BUTTON_PREPEND_DESCRIPTION_": "Slot containing content to be rendered before the element’s text.",
  "_A_ELEMENT_SLOT_BUTTON_TITLE_DESCRIPTION_": "Slot that contains <strong lang=\"en\">HTML</strong> content to be used as the element’s title.",
  "_A_ELEMENT_SLOT_DEFAULT_DESCRIPTION_": "Default slot that contains content for the element."
}