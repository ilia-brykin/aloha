import { toRef as f, inject as ue, computed as _, ref as B, watch as tt, onBeforeUnmount as Ot, withDirectives as Ft, h as c, resolveComponent as Fr, unref as _R, Teleport as ti, onMounted as kr, onUnmounted as tp, nextTick as Jo, provide as Qe, getCurrentInstance as dR, toRefs as cR } from "vue";
import Dn from "moment";
/*! @license DOMPurify 3.2.3 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.3/LICENSE */
const {
  entries: np,
  setPrototypeOf: LA,
  isFrozen: fR,
  getPrototypeOf: hR,
  getOwnPropertyDescriptor: AR
} = Object;
let {
  freeze: dn,
  seal: tr,
  create: rp
} = Object, {
  apply: ud,
  construct: _d
} = typeof Reflect < "u" && Reflect;
dn || (dn = function(t) {
  return t;
});
tr || (tr = function(t) {
  return t;
});
ud || (ud = function(t, n, r) {
  return t.apply(n, r);
});
_d || (_d = function(t, n) {
  return new t(...n);
});
const Eo = Mn(Array.prototype.forEach), vA = Mn(Array.prototype.pop), Fs = Mn(Array.prototype.push), Io = Mn(String.prototype.toLowerCase), U_ = Mn(String.prototype.toString), IA = Mn(String.prototype.match), Ms = Mn(String.prototype.replace), ER = Mn(String.prototype.indexOf), pR = Mn(String.prototype.trim), pr = Mn(Object.prototype.hasOwnProperty), _n = Mn(RegExp.prototype.test), qs = TR(TypeError);
function Mn(e) {
  return function(t) {
    for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), a = 1; a < n; a++)
      r[a - 1] = arguments[a];
    return ud(e, t, r);
  };
}
function TR(e) {
  return function() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return _d(e, n);
  };
}
function Ke(e, t) {
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Io;
  LA && LA(e, null);
  let r = t.length;
  for (; r--; ) {
    let a = t[r];
    if (typeof a == "string") {
      const l = n(a);
      l !== a && (fR(t) || (t[r] = l), a = l);
    }
    e[a] = !0;
  }
  return e;
}
function SR(e) {
  for (let t = 0; t < e.length; t++)
    pr(e, t) || (e[t] = null);
  return e;
}
function Aa(e) {
  const t = rp(null);
  for (const [n, r] of np(e))
    pr(e, n) && (Array.isArray(r) ? t[n] = SR(r) : r && typeof r == "object" && r.constructor === Object ? t[n] = Aa(r) : t[n] = r);
  return t;
}
function $s(e, t) {
  for (; e !== null; ) {
    const r = AR(e, t);
    if (r) {
      if (r.get)
        return Mn(r.get);
      if (typeof r.value == "function")
        return Mn(r.value);
    }
    e = hR(e);
  }
  function n() {
    return null;
  }
  return n;
}
const gA = dn(["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"]), W_ = dn(["svg", "a", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "filter", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "style", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern"]), V_ = dn(["feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence"]), mR = dn(["animate", "color-profile", "cursor", "discard", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignobject", "hatch", "hatchpath", "mesh", "meshgradient", "meshpatch", "meshrow", "missing-glyph", "script", "set", "solidcolor", "unknown", "use"]), G_ = dn(["math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover", "mprescripts"]), bR = dn(["maction", "maligngroup", "malignmark", "mlongdiv", "mscarries", "mscarry", "msgroup", "mstack", "msline", "msrow", "semantics", "annotation", "annotation-xml", "mprescripts", "none"]), yA = dn(["#text"]), RA = dn(["accept", "action", "align", "alt", "autocapitalize", "autocomplete", "autopictureinpicture", "autoplay", "background", "bgcolor", "border", "capture", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "controls", "controlslist", "coords", "crossorigin", "datetime", "decoding", "default", "dir", "disabled", "disablepictureinpicture", "disableremoteplayback", "download", "draggable", "enctype", "enterkeyhint", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "inputmode", "integrity", "ismap", "kind", "label", "lang", "list", "loading", "loop", "low", "max", "maxlength", "media", "method", "min", "minlength", "multiple", "muted", "name", "nonce", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "playsinline", "popover", "popovertarget", "popovertargetaction", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "role", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "sizes", "span", "srclang", "start", "src", "srcset", "step", "style", "summary", "tabindex", "title", "translate", "type", "usemap", "valign", "value", "width", "wrap", "xmlns", "slot"]), j_ = dn(["accent-height", "accumulate", "additive", "alignment-baseline", "amplitude", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "class", "clip", "clippathunits", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "exponent", "fill", "fill-opacity", "fill-rule", "filter", "filterunits", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "height", "href", "id", "image-rendering", "in", "in2", "intercept", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lang", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "media", "method", "mode", "min", "name", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "preserveaspectratio", "primitiveunits", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "result", "rotate", "scale", "seed", "shape-rendering", "slope", "specularconstant", "specularexponent", "spreadmethod", "startoffset", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "style", "surfacescale", "systemlanguage", "tabindex", "tablevalues", "targetx", "targety", "transform", "transform-origin", "text-anchor", "text-decoration", "text-rendering", "textlength", "type", "u1", "u2", "unicode", "values", "viewbox", "visibility", "version", "vert-adv-y", "vert-origin-x", "vert-origin-y", "width", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "xmlns", "y", "y1", "y2", "z", "zoomandpan"]), OA = dn(["accent", "accentunder", "align", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "dir", "display", "displaystyle", "encoding", "fence", "frame", "height", "href", "id", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "width", "xmlns"]), po = dn(["xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"]), LR = tr(/\{\{[\w\W]*|[\w\W]*\}\}/gm), vR = tr(/<%[\w\W]*|[\w\W]*%>/gm), IR = tr(/\$\{[\w\W]*}/gm), gR = tr(/^data-[\-\w.\u00B7-\uFFFF]+$/), yR = tr(/^aria-[\-\w]+$/), ip = tr(
  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i
  // eslint-disable-line no-useless-escape
), RR = tr(/^(?:\w+script|data):/i), OR = tr(
  /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g
  // eslint-disable-line no-control-regex
), ap = tr(/^html$/i), CR = tr(/^[a-z][.\w]*(-[.\w]+)+$/i);
var CA = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  ARIA_ATTR: yR,
  ATTR_WHITESPACE: OR,
  CUSTOM_ELEMENT: CR,
  DATA_ATTR: gR,
  DOCTYPE_NAME: ap,
  ERB_EXPR: vR,
  IS_ALLOWED_URI: ip,
  IS_SCRIPT_OR_DATA: RR,
  MUSTACHE_EXPR: LR,
  TMPLIT_EXPR: IR
});
const ks = {
  element: 1,
  attribute: 2,
  text: 3,
  cdataSection: 4,
  entityReference: 5,
  // Deprecated
  entityNode: 6,
  // Deprecated
  progressingInstruction: 7,
  comment: 8,
  document: 9,
  documentType: 10,
  documentFragment: 11,
  notation: 12
  // Deprecated
}, NR = function() {
  return typeof window > "u" ? null : window;
}, DR = function(t, n) {
  if (typeof t != "object" || typeof t.createPolicy != "function")
    return null;
  let r = null;
  const a = "data-tt-policy-suffix";
  n && n.hasAttribute(a) && (r = n.getAttribute(a));
  const l = "dompurify" + (r ? "#" + r : "");
  try {
    return t.createPolicy(l, {
      createHTML(o) {
        return o;
      },
      createScriptURL(o) {
        return o;
      }
    });
  } catch {
    return console.warn("TrustedTypes policy " + l + " could not be created."), null;
  }
}, NA = function() {
  return {
    afterSanitizeAttributes: [],
    afterSanitizeElements: [],
    afterSanitizeShadowDOM: [],
    beforeSanitizeAttributes: [],
    beforeSanitizeElements: [],
    beforeSanitizeShadowDOM: [],
    uponSanitizeAttribute: [],
    uponSanitizeElement: [],
    uponSanitizeShadowNode: []
  };
};
function sp() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : NR();
  const t = (Ce) => sp(Ce);
  if (t.version = "3.2.3", t.removed = [], !e || !e.document || e.document.nodeType !== ks.document)
    return t.isSupported = !1, t;
  let {
    document: n
  } = e;
  const r = n, a = r.currentScript, {
    DocumentFragment: l,
    HTMLTemplateElement: o,
    Node: u,
    Element: h,
    NodeFilter: A,
    NamedNodeMap: E = e.NamedNodeMap || e.MozNamedAttrMap,
    HTMLFormElement: p,
    DOMParser: T,
    trustedTypes: m
  } = e, b = h.prototype, L = $s(b, "cloneNode"), v = $s(b, "remove"), I = $s(b, "nextSibling"), R = $s(b, "childNodes"), y = $s(b, "parentNode");
  if (typeof o == "function") {
    const Ce = n.createElement("template");
    Ce.content && Ce.content.ownerDocument && (n = Ce.content.ownerDocument);
  }
  let C, w = "";
  const {
    implementation: F,
    createNodeIterator: P,
    createDocumentFragment: q,
    getElementsByTagName: N
  } = n, {
    importNode: U
  } = r;
  let V = NA();
  t.isSupported = typeof np == "function" && typeof y == "function" && F && F.createHTMLDocument !== void 0;
  const {
    MUSTACHE_EXPR: j,
    ERB_EXPR: ne,
    TMPLIT_EXPR: Z,
    DATA_ATTR: le,
    ARIA_ATTR: oe,
    IS_SCRIPT_OR_DATA: fe,
    ATTR_WHITESPACE: he,
    CUSTOM_ELEMENT: we
  } = CA;
  let {
    IS_ALLOWED_URI: Ie
  } = CA, se = null;
  const me = Ke({}, [...gA, ...W_, ...V_, ...G_, ...yA]);
  let Le = null;
  const ce = Ke({}, [...RA, ...j_, ...OA, ...po]);
  let Ae = Object.seal(rp(null, {
    tagNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    attributeNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    allowCustomizedBuiltInElements: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: !1
    }
  })), $ = null, ee = null, re = !0, be = !0, xe = !1, He = !0, Ve = !1, Ye = !0, Re = !1, je = !1, ft = !1, $e = !1, it = !1, _t = !1, mt = !0, vt = !1;
  const lr = "user-content-";
  let $n = !0, or = !1, Kt = {}, kn = null;
  const Hn = Ke({}, ["annotation-xml", "audio", "colgroup", "desc", "foreignobject", "head", "iframe", "math", "mi", "mn", "mo", "ms", "mtext", "noembed", "noframes", "noscript", "plaintext", "script", "style", "svg", "template", "thead", "title", "video", "xmp"]);
  let Ln = null;
  const Ir = Ke({}, ["audio", "video", "img", "source", "image", "track"]);
  let vn = null;
  const gr = Ke({}, ["alt", "class", "for", "id", "label", "name", "pattern", "placeholder", "role", "summary", "title", "value", "style", "xmlns"]), Un = "http://www.w3.org/1998/Math/MathML", Wn = "http://www.w3.org/2000/svg", Vt = "http://www.w3.org/1999/xhtml";
  let hn = Vt, ur = !1, _r = null;
  const ta = Ke({}, [Un, Wn, Vt], U_);
  let yr = Ke({}, ["mi", "mo", "mn", "ms", "mtext"]), Rr = Ke({}, ["annotation-xml"]);
  const ui = Ke({}, ["title", "style", "font", "a", "script"]);
  let dr = null;
  const As = ["application/xhtml+xml", "text/html"], Es = "text/html";
  let It = null, Or = null;
  const na = n.createElement("form"), Na = function(k) {
    return k instanceof RegExp || k instanceof Function;
  }, ra = function() {
    let k = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (!(Or && Or === k)) {
      if ((!k || typeof k != "object") && (k = {}), k = Aa(k), dr = // eslint-disable-next-line unicorn/prefer-includes
      As.indexOf(k.PARSER_MEDIA_TYPE) === -1 ? Es : k.PARSER_MEDIA_TYPE, It = dr === "application/xhtml+xml" ? U_ : Io, se = pr(k, "ALLOWED_TAGS") ? Ke({}, k.ALLOWED_TAGS, It) : me, Le = pr(k, "ALLOWED_ATTR") ? Ke({}, k.ALLOWED_ATTR, It) : ce, _r = pr(k, "ALLOWED_NAMESPACES") ? Ke({}, k.ALLOWED_NAMESPACES, U_) : ta, vn = pr(k, "ADD_URI_SAFE_ATTR") ? Ke(Aa(gr), k.ADD_URI_SAFE_ATTR, It) : gr, Ln = pr(k, "ADD_DATA_URI_TAGS") ? Ke(Aa(Ir), k.ADD_DATA_URI_TAGS, It) : Ir, kn = pr(k, "FORBID_CONTENTS") ? Ke({}, k.FORBID_CONTENTS, It) : Hn, $ = pr(k, "FORBID_TAGS") ? Ke({}, k.FORBID_TAGS, It) : {}, ee = pr(k, "FORBID_ATTR") ? Ke({}, k.FORBID_ATTR, It) : {}, Kt = pr(k, "USE_PROFILES") ? k.USE_PROFILES : !1, re = k.ALLOW_ARIA_ATTR !== !1, be = k.ALLOW_DATA_ATTR !== !1, xe = k.ALLOW_UNKNOWN_PROTOCOLS || !1, He = k.ALLOW_SELF_CLOSE_IN_ATTR !== !1, Ve = k.SAFE_FOR_TEMPLATES || !1, Ye = k.SAFE_FOR_XML !== !1, Re = k.WHOLE_DOCUMENT || !1, $e = k.RETURN_DOM || !1, it = k.RETURN_DOM_FRAGMENT || !1, _t = k.RETURN_TRUSTED_TYPE || !1, ft = k.FORCE_BODY || !1, mt = k.SANITIZE_DOM !== !1, vt = k.SANITIZE_NAMED_PROPS || !1, $n = k.KEEP_CONTENT !== !1, or = k.IN_PLACE || !1, Ie = k.ALLOWED_URI_REGEXP || ip, hn = k.NAMESPACE || Vt, yr = k.MATHML_TEXT_INTEGRATION_POINTS || yr, Rr = k.HTML_INTEGRATION_POINTS || Rr, Ae = k.CUSTOM_ELEMENT_HANDLING || {}, k.CUSTOM_ELEMENT_HANDLING && Na(k.CUSTOM_ELEMENT_HANDLING.tagNameCheck) && (Ae.tagNameCheck = k.CUSTOM_ELEMENT_HANDLING.tagNameCheck), k.CUSTOM_ELEMENT_HANDLING && Na(k.CUSTOM_ELEMENT_HANDLING.attributeNameCheck) && (Ae.attributeNameCheck = k.CUSTOM_ELEMENT_HANDLING.attributeNameCheck), k.CUSTOM_ELEMENT_HANDLING && typeof k.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements == "boolean" && (Ae.allowCustomizedBuiltInElements = k.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements), Ve && (be = !1), it && ($e = !0), Kt && (se = Ke({}, yA), Le = [], Kt.html === !0 && (Ke(se, gA), Ke(Le, RA)), Kt.svg === !0 && (Ke(se, W_), Ke(Le, j_), Ke(Le, po)), Kt.svgFilters === !0 && (Ke(se, V_), Ke(Le, j_), Ke(Le, po)), Kt.mathMl === !0 && (Ke(se, G_), Ke(Le, OA), Ke(Le, po))), k.ADD_TAGS && (se === me && (se = Aa(se)), Ke(se, k.ADD_TAGS, It)), k.ADD_ATTR && (Le === ce && (Le = Aa(Le)), Ke(Le, k.ADD_ATTR, It)), k.ADD_URI_SAFE_ATTR && Ke(vn, k.ADD_URI_SAFE_ATTR, It), k.FORBID_CONTENTS && (kn === Hn && (kn = Aa(kn)), Ke(kn, k.FORBID_CONTENTS, It)), $n && (se["#text"] = !0), Re && Ke(se, ["html", "head", "body"]), se.table && (Ke(se, ["tbody"]), delete $.tbody), k.TRUSTED_TYPES_POLICY) {
        if (typeof k.TRUSTED_TYPES_POLICY.createHTML != "function")
          throw qs('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');
        if (typeof k.TRUSTED_TYPES_POLICY.createScriptURL != "function")
          throw qs('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');
        C = k.TRUSTED_TYPES_POLICY, w = C.createHTML("");
      } else
        C === void 0 && (C = DR(m, a)), C !== null && typeof w == "string" && (w = C.createHTML(""));
      dn && dn(k), Or = k;
    }
  }, Da = Ke({}, [...W_, ...V_, ...mR]), _i = Ke({}, [...G_, ...bR]), ps = function(k) {
    let ie = y(k);
    (!ie || !ie.tagName) && (ie = {
      namespaceURI: hn,
      tagName: "template"
    });
    const ve = Io(k.tagName), dt = Io(ie.tagName);
    return _r[k.namespaceURI] ? k.namespaceURI === Wn ? ie.namespaceURI === Vt ? ve === "svg" : ie.namespaceURI === Un ? ve === "svg" && (dt === "annotation-xml" || yr[dt]) : !!Da[ve] : k.namespaceURI === Un ? ie.namespaceURI === Vt ? ve === "math" : ie.namespaceURI === Wn ? ve === "math" && Rr[dt] : !!_i[ve] : k.namespaceURI === Vt ? ie.namespaceURI === Wn && !Rr[dt] || ie.namespaceURI === Un && !yr[dt] ? !1 : !_i[ve] && (ui[ve] || !Da[ve]) : !!(dr === "application/xhtml+xml" && _r[k.namespaceURI]) : !1;
  }, Yt = function(k) {
    Fs(t.removed, {
      element: k
    });
    try {
      y(k).removeChild(k);
    } catch {
      v(k);
    }
  }, di = function(k, ie) {
    try {
      Fs(t.removed, {
        attribute: ie.getAttributeNode(k),
        from: ie
      });
    } catch {
      Fs(t.removed, {
        attribute: null,
        from: ie
      });
    }
    if (ie.removeAttribute(k), k === "is")
      if ($e || it)
        try {
          Yt(ie);
        } catch {
        }
      else
        try {
          ie.setAttribute(k, "");
        } catch {
        }
  }, Ba = function(k) {
    let ie = null, ve = null;
    if (ft)
      k = "<remove></remove>" + k;
    else {
      const gt = IA(k, /^[\r\n\t ]+/);
      ve = gt && gt[0];
    }
    dr === "application/xhtml+xml" && hn === Vt && (k = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + k + "</body></html>");
    const dt = C ? C.createHTML(k) : k;
    if (hn === Vt)
      try {
        ie = new T().parseFromString(dt, dr);
      } catch {
      }
    if (!ie || !ie.documentElement) {
      ie = F.createDocument(hn, "template", null);
      try {
        ie.documentElement.innerHTML = ur ? w : dt;
      } catch {
      }
    }
    const Ht = ie.body || ie.documentElement;
    return k && ve && Ht.insertBefore(n.createTextNode(ve), Ht.childNodes[0] || null), hn === Vt ? N.call(ie, Re ? "html" : "body")[0] : Re ? ie.documentElement : Ht;
  }, wa = function(k) {
    return P.call(
      k.ownerDocument || k,
      k,
      // eslint-disable-next-line no-bitwise
      A.SHOW_ELEMENT | A.SHOW_COMMENT | A.SHOW_TEXT | A.SHOW_PROCESSING_INSTRUCTION | A.SHOW_CDATA_SECTION,
      null
    );
  }, cr = function(k) {
    return k instanceof p && (typeof k.nodeName != "string" || typeof k.textContent != "string" || typeof k.removeChild != "function" || !(k.attributes instanceof E) || typeof k.removeAttribute != "function" || typeof k.setAttribute != "function" || typeof k.namespaceURI != "string" || typeof k.insertBefore != "function" || typeof k.hasChildNodes != "function");
  }, ia = function(k) {
    return typeof u == "function" && k instanceof u;
  };
  function sn(Ce, k, ie) {
    Eo(Ce, (ve) => {
      ve.call(t, k, ie, Or);
    });
  }
  const Pa = function(k) {
    let ie = null;
    if (sn(V.beforeSanitizeElements, k, null), cr(k))
      return Yt(k), !0;
    const ve = It(k.nodeName);
    if (sn(V.uponSanitizeElement, k, {
      tagName: ve,
      allowedTags: se
    }), k.hasChildNodes() && !ia(k.firstElementChild) && _n(/<[/\w]/g, k.innerHTML) && _n(/<[/\w]/g, k.textContent) || k.nodeType === ks.progressingInstruction || Ye && k.nodeType === ks.comment && _n(/<[/\w]/g, k.data))
      return Yt(k), !0;
    if (!se[ve] || $[ve]) {
      if (!$[ve] && Ts(ve) && (Ae.tagNameCheck instanceof RegExp && _n(Ae.tagNameCheck, ve) || Ae.tagNameCheck instanceof Function && Ae.tagNameCheck(ve)))
        return !1;
      if ($n && !kn[ve]) {
        const dt = y(k) || k.parentNode, Ht = R(k) || k.childNodes;
        if (Ht && dt) {
          const gt = Ht.length;
          for (let Zt = gt - 1; Zt >= 0; --Zt) {
            const Vn = L(Ht[Zt], !0);
            Vn.__removalCount = (k.__removalCount || 0) + 1, dt.insertBefore(Vn, I(k));
          }
        }
      }
      return Yt(k), !0;
    }
    return k instanceof h && !ps(k) || (ve === "noscript" || ve === "noembed" || ve === "noframes") && _n(/<\/no(script|embed|frames)/i, k.innerHTML) ? (Yt(k), !0) : (Ve && k.nodeType === ks.text && (ie = k.textContent, Eo([j, ne, Z], (dt) => {
      ie = Ms(ie, dt, " ");
    }), k.textContent !== ie && (Fs(t.removed, {
      element: k.cloneNode()
    }), k.textContent = ie)), sn(V.afterSanitizeElements, k, null), !1);
  }, Rl = function(k, ie, ve) {
    if (mt && (ie === "id" || ie === "name") && (ve in n || ve in na))
      return !1;
    if (!(be && !ee[ie] && _n(le, ie))) {
      if (!(re && _n(oe, ie))) {
        if (!Le[ie] || ee[ie]) {
          if (
            // First condition does a very basic check if a) it's basically a valid custom element tagname AND
            // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck
            !(Ts(k) && (Ae.tagNameCheck instanceof RegExp && _n(Ae.tagNameCheck, k) || Ae.tagNameCheck instanceof Function && Ae.tagNameCheck(k)) && (Ae.attributeNameCheck instanceof RegExp && _n(Ae.attributeNameCheck, ie) || Ae.attributeNameCheck instanceof Function && Ae.attributeNameCheck(ie)) || // Alternative, second condition checks if it's an `is`-attribute, AND
            // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            ie === "is" && Ae.allowCustomizedBuiltInElements && (Ae.tagNameCheck instanceof RegExp && _n(Ae.tagNameCheck, ve) || Ae.tagNameCheck instanceof Function && Ae.tagNameCheck(ve)))
          ) return !1;
        } else if (!vn[ie]) {
          if (!_n(Ie, Ms(ve, he, ""))) {
            if (!((ie === "src" || ie === "xlink:href" || ie === "href") && k !== "script" && ER(ve, "data:") === 0 && Ln[k])) {
              if (!(xe && !_n(fe, Ms(ve, he, "")))) {
                if (ve)
                  return !1;
              }
            }
          }
        }
      }
    }
    return !0;
  }, Ts = function(k) {
    return k !== "annotation-xml" && IA(k, we);
  }, Ol = function(k) {
    sn(V.beforeSanitizeAttributes, k, null);
    const {
      attributes: ie
    } = k;
    if (!ie || cr(k))
      return;
    const ve = {
      attrName: "",
      attrValue: "",
      keepAttr: !0,
      allowedAttributes: Le,
      forceKeepAttr: void 0
    };
    let dt = ie.length;
    for (; dt--; ) {
      const Ht = ie[dt], {
        name: gt,
        namespaceURI: Zt,
        value: Vn
      } = Ht, aa = It(gt);
      let Ut = gt === "value" ? Vn : pR(Vn);
      if (ve.attrName = aa, ve.attrValue = Ut, ve.keepAttr = !0, ve.forceKeepAttr = void 0, sn(V.uponSanitizeAttribute, k, ve), Ut = ve.attrValue, vt && (aa === "id" || aa === "name") && (di(gt, k), Ut = lr + Ut), Ye && _n(/((--!?|])>)|<\/(style|title)/i, Ut)) {
        di(gt, k);
        continue;
      }
      if (ve.forceKeepAttr || (di(gt, k), !ve.keepAttr))
        continue;
      if (!He && _n(/\/>/i, Ut)) {
        di(gt, k);
        continue;
      }
      Ve && Eo([j, ne, Z], (ms) => {
        Ut = Ms(Ut, ms, " ");
      });
      const Ss = It(k.nodeName);
      if (Rl(Ss, aa, Ut)) {
        if (C && typeof m == "object" && typeof m.getAttributeType == "function" && !Zt)
          switch (m.getAttributeType(Ss, aa)) {
            case "TrustedHTML": {
              Ut = C.createHTML(Ut);
              break;
            }
            case "TrustedScriptURL": {
              Ut = C.createScriptURL(Ut);
              break;
            }
          }
        try {
          Zt ? k.setAttributeNS(Zt, gt, Ut) : k.setAttribute(gt, Ut), cr(k) ? Yt(k) : vA(t.removed);
        } catch {
        }
      }
    }
    sn(V.afterSanitizeAttributes, k, null);
  }, Du = function Ce(k) {
    let ie = null;
    const ve = wa(k);
    for (sn(V.beforeSanitizeShadowDOM, k, null); ie = ve.nextNode(); )
      sn(V.uponSanitizeShadowNode, ie, null), Pa(ie), Ol(ie), ie.content instanceof l && Ce(ie.content);
    sn(V.afterSanitizeShadowDOM, k, null);
  };
  return t.sanitize = function(Ce) {
    let k = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, ie = null, ve = null, dt = null, Ht = null;
    if (ur = !Ce, ur && (Ce = "<!-->"), typeof Ce != "string" && !ia(Ce))
      if (typeof Ce.toString == "function") {
        if (Ce = Ce.toString(), typeof Ce != "string")
          throw qs("dirty is not a string, aborting");
      } else
        throw qs("toString is not a function");
    if (!t.isSupported)
      return Ce;
    if (je || ra(k), t.removed = [], typeof Ce == "string" && (or = !1), or) {
      if (Ce.nodeName) {
        const Vn = It(Ce.nodeName);
        if (!se[Vn] || $[Vn])
          throw qs("root node is forbidden and cannot be sanitized in-place");
      }
    } else if (Ce instanceof u)
      ie = Ba("<!---->"), ve = ie.ownerDocument.importNode(Ce, !0), ve.nodeType === ks.element && ve.nodeName === "BODY" || ve.nodeName === "HTML" ? ie = ve : ie.appendChild(ve);
    else {
      if (!$e && !Ve && !Re && // eslint-disable-next-line unicorn/prefer-includes
      Ce.indexOf("<") === -1)
        return C && _t ? C.createHTML(Ce) : Ce;
      if (ie = Ba(Ce), !ie)
        return $e ? null : _t ? w : "";
    }
    ie && ft && Yt(ie.firstChild);
    const gt = wa(or ? Ce : ie);
    for (; dt = gt.nextNode(); )
      Pa(dt), Ol(dt), dt.content instanceof l && Du(dt.content);
    if (or)
      return Ce;
    if ($e) {
      if (it)
        for (Ht = q.call(ie.ownerDocument); ie.firstChild; )
          Ht.appendChild(ie.firstChild);
      else
        Ht = ie;
      return (Le.shadowroot || Le.shadowrootmode) && (Ht = U.call(r, Ht, !0)), Ht;
    }
    let Zt = Re ? ie.outerHTML : ie.innerHTML;
    return Re && se["!doctype"] && ie.ownerDocument && ie.ownerDocument.doctype && ie.ownerDocument.doctype.name && _n(ap, ie.ownerDocument.doctype.name) && (Zt = "<!DOCTYPE " + ie.ownerDocument.doctype.name + `>
` + Zt), Ve && Eo([j, ne, Z], (Vn) => {
      Zt = Ms(Zt, Vn, " ");
    }), C && _t ? C.createHTML(Zt) : Zt;
  }, t.setConfig = function() {
    let Ce = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    ra(Ce), je = !0;
  }, t.clearConfig = function() {
    Or = null, je = !1;
  }, t.isValidAttribute = function(Ce, k, ie) {
    Or || ra({});
    const ve = It(Ce), dt = It(k);
    return Rl(ve, dt, ie);
  }, t.addHook = function(Ce, k) {
    typeof k == "function" && Fs(V[Ce], k);
  }, t.removeHook = function(Ce) {
    return vA(V[Ce]);
  }, t.removeHooks = function(Ce) {
    V[Ce] = [];
  }, t.removeAllHooks = function() {
    V = NA();
  }, t;
}
var Wd = sp(), lp = typeof global == "object" && global && global.Object === Object && global, BR = typeof self == "object" && self && self.Object === Object && self, ar = lp || BR || Function("return this")(), nr = ar.Symbol, op = Object.prototype, wR = op.hasOwnProperty, PR = op.toString, Hs = nr ? nr.toStringTag : void 0;
function xR(e) {
  var t = wR.call(e, Hs), n = e[Hs];
  try {
    e[Hs] = void 0;
    var r = !0;
  } catch {
  }
  var a = PR.call(e);
  return r && (t ? e[Hs] = n : delete e[Hs]), a;
}
var FR = Object.prototype, MR = FR.toString;
function qR(e) {
  return MR.call(e);
}
var $R = "[object Null]", kR = "[object Undefined]", DA = nr ? nr.toStringTag : void 0;
function ni(e) {
  return e == null ? e === void 0 ? kR : $R : DA && DA in Object(e) ? xR(e) : qR(e);
}
function rr(e) {
  return e != null && typeof e == "object";
}
var HR = "[object Symbol]";
function ma(e) {
  return typeof e == "symbol" || rr(e) && ni(e) == HR;
}
function Ja(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, a = Array(r); ++n < r; )
    a[n] = t(e[n], n, e);
  return a;
}
var Te = Array.isArray, UR = 1 / 0, BA = nr ? nr.prototype : void 0, wA = BA ? BA.toString : void 0;
function _l(e) {
  if (typeof e == "string")
    return e;
  if (Te(e))
    return Ja(e, _l) + "";
  if (ma(e))
    return wA ? wA.call(e) : "";
  var t = e + "";
  return t == "0" && 1 / e == -UR ? "-0" : t;
}
var WR = /\s/;
function VR(e) {
  for (var t = e.length; t-- && WR.test(e.charAt(t)); )
    ;
  return t;
}
var GR = /^\s+/;
function jR(e) {
  return e && e.slice(0, VR(e) + 1).replace(GR, "");
}
function qn(e) {
  var t = typeof e;
  return e != null && (t == "object" || t == "function");
}
var PA = NaN, zR = /^[-+]0x[0-9a-f]+$/i, KR = /^0b[01]+$/i, YR = /^0o[0-7]+$/i, ZR = parseInt;
function ns(e) {
  if (typeof e == "number")
    return e;
  if (ma(e))
    return PA;
  if (qn(e)) {
    var t = typeof e.valueOf == "function" ? e.valueOf() : e;
    e = qn(t) ? t + "" : t;
  }
  if (typeof e != "string")
    return e === 0 ? e : +e;
  e = jR(e);
  var n = KR.test(e);
  return n || YR.test(e) ? ZR(e.slice(2), n ? 2 : 8) : zR.test(e) ? PA : +e;
}
var xA = 1 / 0, XR = 17976931348623157e292;
function go(e) {
  if (!e)
    return e === 0 ? e : 0;
  if (e = ns(e), e === xA || e === -xA) {
    var t = e < 0 ? -1 : 1;
    return t * XR;
  }
  return e === e ? e : 0;
}
function Hr(e) {
  var t = go(e), n = t % 1;
  return t === t ? n ? t - n : t : 0;
}
function ga(e) {
  return e;
}
var JR = "[object AsyncFunction]", QR = "[object Function]", eO = "[object GeneratorFunction]", tO = "[object Proxy]";
function qe(e) {
  if (!qn(e))
    return !1;
  var t = ni(e);
  return t == QR || t == eO || t == JR || t == tO;
}
var z_ = ar["__core-js_shared__"], FA = function() {
  var e = /[^.]+$/.exec(z_ && z_.keys && z_.keys.IE_PROTO || "");
  return e ? "Symbol(src)_1." + e : "";
}();
function nO(e) {
  return !!FA && FA in e;
}
var rO = Function.prototype, iO = rO.toString;
function ya(e) {
  if (e != null) {
    try {
      return iO.call(e);
    } catch {
    }
    try {
      return e + "";
    } catch {
    }
  }
  return "";
}
var aO = /[\\^$.*+?()[\]{}|]/g, sO = /^\[object .+?Constructor\]$/, lO = Function.prototype, oO = Object.prototype, uO = lO.toString, _O = oO.hasOwnProperty, dO = RegExp(
  "^" + uO.call(_O).replace(aO, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function cO(e) {
  if (!qn(e) || nO(e))
    return !1;
  var t = qe(e) ? dO : sO;
  return t.test(ya(e));
}
function fO(e, t) {
  return e == null ? void 0 : e[t];
}
function Ra(e, t) {
  var n = fO(e, t);
  return cO(n) ? n : void 0;
}
var dd = Ra(ar, "WeakMap"), MA = Object.create, hO = /* @__PURE__ */ function() {
  function e() {
  }
  return function(t) {
    if (!qn(t))
      return {};
    if (MA)
      return MA(t);
    e.prototype = t;
    var n = new e();
    return e.prototype = void 0, n;
  };
}();
function AO(e, t, n) {
  switch (n.length) {
    case 0:
      return e.call(t);
    case 1:
      return e.call(t, n[0]);
    case 2:
      return e.call(t, n[0], n[1]);
    case 3:
      return e.call(t, n[0], n[1], n[2]);
  }
  return e.apply(t, n);
}
function EO() {
}
function pO(e, t) {
  var n = -1, r = e.length;
  for (t || (t = Array(r)); ++n < r; )
    t[n] = e[n];
  return t;
}
var TO = 800, SO = 16, mO = Date.now;
function bO(e) {
  var t = 0, n = 0;
  return function() {
    var r = mO(), a = SO - (r - n);
    if (n = r, a > 0) {
      if (++t >= TO)
        return arguments[0];
    } else
      t = 0;
    return e.apply(void 0, arguments);
  };
}
function LO(e) {
  return function() {
    return e;
  };
}
var Po = function() {
  try {
    var e = Ra(Object, "defineProperty");
    return e({}, "", {}), e;
  } catch {
  }
}(), vO = Po ? function(e, t) {
  return Po(e, "toString", {
    configurable: !0,
    enumerable: !1,
    value: LO(t),
    writable: !0
  });
} : ga, IO = bO(vO);
function up(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r && t(e[n], n, e) !== !1; )
    ;
  return e;
}
function _p(e, t, n, r) {
  for (var a = e.length, l = n + -1; ++l < a; )
    if (t(e[l], l, e))
      return l;
  return -1;
}
function gO(e) {
  return e !== e;
}
function yO(e, t, n) {
  for (var r = n - 1, a = e.length; ++r < a; )
    if (e[r] === t)
      return r;
  return -1;
}
function dp(e, t, n) {
  return t === t ? yO(e, t, n) : _p(e, gO, n);
}
function cp(e, t) {
  var n = e == null ? 0 : e.length;
  return !!n && dp(e, t, 0) > -1;
}
var RO = 9007199254740991, OO = /^(?:0|[1-9]\d*)$/;
function Qo(e, t) {
  var n = typeof e;
  return t = t ?? RO, !!t && (n == "number" || n != "symbol" && OO.test(e)) && e > -1 && e % 1 == 0 && e < t;
}
function Vd(e, t, n) {
  t == "__proto__" && Po ? Po(e, t, {
    configurable: !0,
    enumerable: !0,
    value: n,
    writable: !0
  }) : e[t] = n;
}
function eu(e, t) {
  return e === t || e !== e && t !== t;
}
var CO = Object.prototype, NO = CO.hasOwnProperty;
function tu(e, t, n) {
  var r = e[t];
  (!(NO.call(e, t) && eu(r, n)) || n === void 0 && !(t in e)) && Vd(e, t, n);
}
function dl(e, t, n, r) {
  var a = !n;
  n || (n = {});
  for (var l = -1, o = t.length; ++l < o; ) {
    var u = t[l], h = void 0;
    h === void 0 && (h = e[u]), a ? Vd(n, u, h) : tu(n, u, h);
  }
  return n;
}
var qA = Math.max;
function DO(e, t, n) {
  return t = qA(t === void 0 ? e.length - 1 : t, 0), function() {
    for (var r = arguments, a = -1, l = qA(r.length - t, 0), o = Array(l); ++a < l; )
      o[a] = r[t + a];
    a = -1;
    for (var u = Array(t + 1); ++a < t; )
      u[a] = r[a];
    return u[t] = n(o), AO(e, this, u);
  };
}
function nu(e, t) {
  return IO(DO(e, t, ga), e + "");
}
var BO = 9007199254740991;
function Gd(e) {
  return typeof e == "number" && e > -1 && e % 1 == 0 && e <= BO;
}
function br(e) {
  return e != null && Gd(e.length) && !qe(e);
}
function xo(e, t, n) {
  if (!qn(n))
    return !1;
  var r = typeof t;
  return (r == "number" ? br(n) && Qo(t, n.length) : r == "string" && t in n) ? eu(n[t], e) : !1;
}
function wO(e) {
  return nu(function(t, n) {
    var r = -1, a = n.length, l = a > 1 ? n[a - 1] : void 0, o = a > 2 ? n[2] : void 0;
    for (l = e.length > 3 && typeof l == "function" ? (a--, l) : void 0, o && xo(n[0], n[1], o) && (l = a < 3 ? void 0 : l, a = 1), t = Object(t); ++r < a; ) {
      var u = n[r];
      u && e(t, u, r, l);
    }
    return t;
  });
}
var PO = Object.prototype;
function cl(e) {
  var t = e && e.constructor, n = typeof t == "function" && t.prototype || PO;
  return e === n;
}
function fp(e, t) {
  for (var n = -1, r = Array(e); ++n < e; )
    r[n] = t(n);
  return r;
}
var xO = "[object Arguments]";
function $A(e) {
  return rr(e) && ni(e) == xO;
}
var hp = Object.prototype, FO = hp.hasOwnProperty, MO = hp.propertyIsEnumerable, ru = $A(/* @__PURE__ */ function() {
  return arguments;
}()) ? $A : function(e) {
  return rr(e) && FO.call(e, "callee") && !MO.call(e, "callee");
};
function qO() {
  return !1;
}
var Ap = typeof exports == "object" && exports && !exports.nodeType && exports, kA = Ap && typeof module == "object" && module && !module.nodeType && module, $O = kA && kA.exports === Ap, HA = $O ? ar.Buffer : void 0, kO = HA ? HA.isBuffer : void 0, Js = kO || qO, HO = "[object Arguments]", UO = "[object Array]", WO = "[object Boolean]", VO = "[object Date]", GO = "[object Error]", jO = "[object Function]", zO = "[object Map]", KO = "[object Number]", YO = "[object Object]", ZO = "[object RegExp]", XO = "[object Set]", JO = "[object String]", QO = "[object WeakMap]", eC = "[object ArrayBuffer]", tC = "[object DataView]", nC = "[object Float32Array]", rC = "[object Float64Array]", iC = "[object Int8Array]", aC = "[object Int16Array]", sC = "[object Int32Array]", lC = "[object Uint8Array]", oC = "[object Uint8ClampedArray]", uC = "[object Uint16Array]", _C = "[object Uint32Array]", Tt = {};
Tt[nC] = Tt[rC] = Tt[iC] = Tt[aC] = Tt[sC] = Tt[lC] = Tt[oC] = Tt[uC] = Tt[_C] = !0;
Tt[HO] = Tt[UO] = Tt[eC] = Tt[WO] = Tt[tC] = Tt[VO] = Tt[GO] = Tt[jO] = Tt[zO] = Tt[KO] = Tt[YO] = Tt[ZO] = Tt[XO] = Tt[JO] = Tt[QO] = !1;
function dC(e) {
  return rr(e) && Gd(e.length) && !!Tt[ni(e)];
}
function iu(e) {
  return function(t) {
    return e(t);
  };
}
var Ep = typeof exports == "object" && exports && !exports.nodeType && exports, js = Ep && typeof module == "object" && module && !module.nodeType && module, cC = js && js.exports === Ep, K_ = cC && lp.process, rs = function() {
  try {
    var e = js && js.require && js.require("util").types;
    return e || K_ && K_.binding && K_.binding("util");
  } catch {
  }
}(), UA = rs && rs.isTypedArray, jd = UA ? iu(UA) : dC, fC = Object.prototype, hC = fC.hasOwnProperty;
function pp(e, t) {
  var n = Te(e), r = !n && ru(e), a = !n && !r && Js(e), l = !n && !r && !a && jd(e), o = n || r || a || l, u = o ? fp(e.length, String) : [], h = u.length;
  for (var A in e)
    (t || hC.call(e, A)) && !(o && // Safari 9 has enumerable `arguments.length` in strict mode.
    (A == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    a && (A == "offset" || A == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    l && (A == "buffer" || A == "byteLength" || A == "byteOffset") || // Skip index properties.
    Qo(A, h))) && u.push(A);
  return u;
}
function Tp(e, t) {
  return function(n) {
    return e(t(n));
  };
}
var AC = Tp(Object.keys, Object), EC = Object.prototype, pC = EC.hasOwnProperty;
function zd(e) {
  if (!cl(e))
    return AC(e);
  var t = [];
  for (var n in Object(e))
    pC.call(e, n) && n != "constructor" && t.push(n);
  return t;
}
function ri(e) {
  return br(e) ? pp(e) : zd(e);
}
var TC = Object.prototype, SC = TC.hasOwnProperty, cd = wO(function(e, t) {
  if (cl(t) || br(t)) {
    dl(t, ri(t), e);
    return;
  }
  for (var n in t)
    SC.call(t, n) && tu(e, n, t[n]);
});
function mC(e) {
  var t = [];
  if (e != null)
    for (var n in Object(e))
      t.push(n);
  return t;
}
var bC = Object.prototype, LC = bC.hasOwnProperty;
function vC(e) {
  if (!qn(e))
    return mC(e);
  var t = cl(e), n = [];
  for (var r in e)
    r == "constructor" && (t || !LC.call(e, r)) || n.push(r);
  return n;
}
function Kd(e) {
  return br(e) ? pp(e, !0) : vC(e);
}
var IC = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, gC = /^\w*$/;
function Yd(e, t) {
  if (Te(e))
    return !1;
  var n = typeof e;
  return n == "number" || n == "symbol" || n == "boolean" || e == null || ma(e) ? !0 : gC.test(e) || !IC.test(e) || t != null && e in Object(t);
}
var Qs = Ra(Object, "create");
function yC() {
  this.__data__ = Qs ? Qs(null) : {}, this.size = 0;
}
function RC(e) {
  var t = this.has(e) && delete this.__data__[e];
  return this.size -= t ? 1 : 0, t;
}
var OC = "__lodash_hash_undefined__", CC = Object.prototype, NC = CC.hasOwnProperty;
function DC(e) {
  var t = this.__data__;
  if (Qs) {
    var n = t[e];
    return n === OC ? void 0 : n;
  }
  return NC.call(t, e) ? t[e] : void 0;
}
var BC = Object.prototype, wC = BC.hasOwnProperty;
function PC(e) {
  var t = this.__data__;
  return Qs ? t[e] !== void 0 : wC.call(t, e);
}
var xC = "__lodash_hash_undefined__";
function FC(e, t) {
  var n = this.__data__;
  return this.size += this.has(e) ? 0 : 1, n[e] = Qs && t === void 0 ? xC : t, this;
}
function ba(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
ba.prototype.clear = yC;
ba.prototype.delete = RC;
ba.prototype.get = DC;
ba.prototype.has = PC;
ba.prototype.set = FC;
function MC() {
  this.__data__ = [], this.size = 0;
}
function au(e, t) {
  for (var n = e.length; n--; )
    if (eu(e[n][0], t))
      return n;
  return -1;
}
var qC = Array.prototype, $C = qC.splice;
function kC(e) {
  var t = this.__data__, n = au(t, e);
  if (n < 0)
    return !1;
  var r = t.length - 1;
  return n == r ? t.pop() : $C.call(t, n, 1), --this.size, !0;
}
function HC(e) {
  var t = this.__data__, n = au(t, e);
  return n < 0 ? void 0 : t[n][1];
}
function UC(e) {
  return au(this.__data__, e) > -1;
}
function WC(e, t) {
  var n = this.__data__, r = au(n, e);
  return r < 0 ? (++this.size, n.push([e, t])) : n[r][1] = t, this;
}
function ii(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
ii.prototype.clear = MC;
ii.prototype.delete = kC;
ii.prototype.get = HC;
ii.prototype.has = UC;
ii.prototype.set = WC;
var el = Ra(ar, "Map");
function VC() {
  this.size = 0, this.__data__ = {
    hash: new ba(),
    map: new (el || ii)(),
    string: new ba()
  };
}
function GC(e) {
  var t = typeof e;
  return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null;
}
function su(e, t) {
  var n = e.__data__;
  return GC(t) ? n[typeof t == "string" ? "string" : "hash"] : n.map;
}
function jC(e) {
  var t = su(this, e).delete(e);
  return this.size -= t ? 1 : 0, t;
}
function zC(e) {
  return su(this, e).get(e);
}
function KC(e) {
  return su(this, e).has(e);
}
function YC(e, t) {
  var n = su(this, e), r = n.size;
  return n.set(e, t), this.size += n.size == r ? 0 : 1, this;
}
function ai(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
ai.prototype.clear = VC;
ai.prototype.delete = jC;
ai.prototype.get = zC;
ai.prototype.has = KC;
ai.prototype.set = YC;
var ZC = "Expected a function";
function Zd(e, t) {
  if (typeof e != "function" || t != null && typeof t != "function")
    throw new TypeError(ZC);
  var n = function() {
    var r = arguments, a = t ? t.apply(this, r) : r[0], l = n.cache;
    if (l.has(a))
      return l.get(a);
    var o = e.apply(this, r);
    return n.cache = l.set(a, o) || l, o;
  };
  return n.cache = new (Zd.Cache || ai)(), n;
}
Zd.Cache = ai;
var XC = 500;
function JC(e) {
  var t = Zd(e, function(r) {
    return n.size === XC && n.clear(), r;
  }), n = t.cache;
  return t;
}
var QC = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, eN = /\\(\\)?/g, tN = JC(function(e) {
  var t = [];
  return e.charCodeAt(0) === 46 && t.push(""), e.replace(QC, function(n, r, a, l) {
    t.push(a ? l.replace(eN, "$1") : r || n);
  }), t;
});
function $t(e) {
  return e == null ? "" : _l(e);
}
function Xd(e, t) {
  return Te(e) ? e : Yd(e, t) ? [e] : tN($t(e));
}
var nN = 1 / 0;
function fl(e) {
  if (typeof e == "string" || ma(e))
    return e;
  var t = e + "";
  return t == "0" && 1 / e == -nN ? "-0" : t;
}
function Jd(e, t) {
  t = Xd(t, e);
  for (var n = 0, r = t.length; e != null && n < r; )
    e = e[fl(t[n++])];
  return n && n == r ? e : void 0;
}
function de(e, t, n) {
  var r = e == null ? void 0 : Jd(e, t);
  return r === void 0 ? n : r;
}
function Qd(e, t) {
  for (var n = -1, r = t.length, a = e.length; ++n < r; )
    e[a + n] = t[n];
  return e;
}
var WA = nr ? nr.isConcatSpreadable : void 0;
function rN(e) {
  return Te(e) || ru(e) || !!(WA && e && e[WA]);
}
function ec(e, t, n, r, a) {
  var l = -1, o = e.length;
  for (n || (n = rN), a || (a = []); ++l < o; ) {
    var u = e[l];
    n(u) ? Qd(a, u) : r || (a[a.length] = u);
  }
  return a;
}
var tc = Tp(Object.getPrototypeOf, Object), iN = "[object Object]", aN = Function.prototype, sN = Object.prototype, Sp = aN.toString, lN = sN.hasOwnProperty, oN = Sp.call(Object);
function nt(e) {
  if (!rr(e) || ni(e) != iN)
    return !1;
  var t = tc(e);
  if (t === null)
    return !0;
  var n = lN.call(t, "constructor") && t.constructor;
  return typeof n == "function" && n instanceof n && Sp.call(n) == oN;
}
function mp(e, t, n) {
  var r = -1, a = e.length;
  t < 0 && (t = -t > a ? 0 : a + t), n = n > a ? a : n, n < 0 && (n += a), a = t > n ? 0 : n - t >>> 0, t >>>= 0;
  for (var l = Array(a); ++r < a; )
    l[r] = e[r + t];
  return l;
}
function bp(e, t, n) {
  var r = e.length;
  return n = n === void 0 ? r : n, !t && n >= r ? e : mp(e, t, n);
}
var uN = "\\ud800-\\udfff", _N = "\\u0300-\\u036f", dN = "\\ufe20-\\ufe2f", cN = "\\u20d0-\\u20ff", fN = _N + dN + cN, hN = "\\ufe0e\\ufe0f", AN = "\\u200d", EN = RegExp("[" + AN + uN + fN + hN + "]");
function lu(e) {
  return EN.test(e);
}
function pN(e) {
  return e.split("");
}
var Lp = "\\ud800-\\udfff", TN = "\\u0300-\\u036f", SN = "\\ufe20-\\ufe2f", mN = "\\u20d0-\\u20ff", bN = TN + SN + mN, LN = "\\ufe0e\\ufe0f", vN = "[" + Lp + "]", fd = "[" + bN + "]", hd = "\\ud83c[\\udffb-\\udfff]", IN = "(?:" + fd + "|" + hd + ")", vp = "[^" + Lp + "]", Ip = "(?:\\ud83c[\\udde6-\\uddff]){2}", gp = "[\\ud800-\\udbff][\\udc00-\\udfff]", gN = "\\u200d", yp = IN + "?", Rp = "[" + LN + "]?", yN = "(?:" + gN + "(?:" + [vp, Ip, gp].join("|") + ")" + Rp + yp + ")*", RN = Rp + yp + yN, ON = "(?:" + [vp + fd + "?", fd, Ip, gp, vN].join("|") + ")", CN = RegExp(hd + "(?=" + hd + ")|" + ON + RN, "g");
function NN(e) {
  return e.match(CN) || [];
}
function Op(e) {
  return lu(e) ? NN(e) : pN(e);
}
function DN(e) {
  return function(t) {
    t = $t(t);
    var n = lu(t) ? Op(t) : void 0, r = n ? n[0] : t.charAt(0), a = n ? bp(n, 1).join("") : t.slice(1);
    return r[e]() + a;
  };
}
var Cp = DN("toUpperCase");
function BN(e) {
  return Cp($t(e).toLowerCase());
}
function wN(e, t, n, r) {
  var a = -1, l = e == null ? 0 : e.length;
  for (r && l && (n = e[++a]); ++a < l; )
    n = t(n, e[a], a, e);
  return n;
}
var PN = ar.isFinite, xN = Math.min;
function Np(e) {
  var t = Math[e];
  return function(n, r) {
    if (n = ns(n), r = r == null ? 0 : xN(Hr(r), 292), r && PN(n)) {
      var a = ($t(n) + "e").split("e"), l = t(a[0] + "e" + (+a[1] + r));
      return a = ($t(l) + "e").split("e"), +(a[0] + "e" + (+a[1] - r));
    }
    return t(n);
  };
}
var FN = Np("ceil");
function Dp(e, t, n) {
  return e === e && (n !== void 0 && (e = e <= n ? e : n), e = e >= t ? e : t), e;
}
function MN() {
  this.__data__ = new ii(), this.size = 0;
}
function qN(e) {
  var t = this.__data__, n = t.delete(e);
  return this.size = t.size, n;
}
function $N(e) {
  return this.__data__.get(e);
}
function kN(e) {
  return this.__data__.has(e);
}
var HN = 200;
function UN(e, t) {
  var n = this.__data__;
  if (n instanceof ii) {
    var r = n.__data__;
    if (!el || r.length < HN - 1)
      return r.push([e, t]), this.size = ++n.size, this;
    n = this.__data__ = new ai(r);
  }
  return n.set(e, t), this.size = n.size, this;
}
function Pr(e) {
  var t = this.__data__ = new ii(e);
  this.size = t.size;
}
Pr.prototype.clear = MN;
Pr.prototype.delete = qN;
Pr.prototype.get = $N;
Pr.prototype.has = kN;
Pr.prototype.set = UN;
function WN(e, t) {
  return e && dl(t, ri(t), e);
}
function VN(e, t) {
  return e && dl(t, Kd(t), e);
}
var Bp = typeof exports == "object" && exports && !exports.nodeType && exports, VA = Bp && typeof module == "object" && module && !module.nodeType && module, GN = VA && VA.exports === Bp, GA = GN ? ar.Buffer : void 0, jA = GA ? GA.allocUnsafe : void 0;
function jN(e, t) {
  if (t)
    return e.slice();
  var n = e.length, r = jA ? jA(n) : new e.constructor(n);
  return e.copy(r), r;
}
function wp(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, a = 0, l = []; ++n < r; ) {
    var o = e[n];
    t(o, n, e) && (l[a++] = o);
  }
  return l;
}
function Pp() {
  return [];
}
var zN = Object.prototype, KN = zN.propertyIsEnumerable, zA = Object.getOwnPropertySymbols, nc = zA ? function(e) {
  return e == null ? [] : (e = Object(e), wp(zA(e), function(t) {
    return KN.call(e, t);
  }));
} : Pp;
function YN(e, t) {
  return dl(e, nc(e), t);
}
var ZN = Object.getOwnPropertySymbols, xp = ZN ? function(e) {
  for (var t = []; e; )
    Qd(t, nc(e)), e = tc(e);
  return t;
} : Pp;
function XN(e, t) {
  return dl(e, xp(e), t);
}
function Fp(e, t, n) {
  var r = t(e);
  return Te(e) ? r : Qd(r, n(e));
}
function Ad(e) {
  return Fp(e, ri, nc);
}
function JN(e) {
  return Fp(e, Kd, xp);
}
var Ed = Ra(ar, "DataView"), pd = Ra(ar, "Promise"), Qa = Ra(ar, "Set"), KA = "[object Map]", QN = "[object Object]", YA = "[object Promise]", ZA = "[object Set]", XA = "[object WeakMap]", JA = "[object DataView]", eD = ya(Ed), tD = ya(el), nD = ya(pd), rD = ya(Qa), iD = ya(dd), Bn = ni;
(Ed && Bn(new Ed(new ArrayBuffer(1))) != JA || el && Bn(new el()) != KA || pd && Bn(pd.resolve()) != YA || Qa && Bn(new Qa()) != ZA || dd && Bn(new dd()) != XA) && (Bn = function(e) {
  var t = ni(e), n = t == QN ? e.constructor : void 0, r = n ? ya(n) : "";
  if (r)
    switch (r) {
      case eD:
        return JA;
      case tD:
        return KA;
      case nD:
        return YA;
      case rD:
        return ZA;
      case iD:
        return XA;
    }
  return t;
});
var aD = Object.prototype, sD = aD.hasOwnProperty;
function lD(e) {
  var t = e.length, n = new e.constructor(t);
  return t && typeof e[0] == "string" && sD.call(e, "index") && (n.index = e.index, n.input = e.input), n;
}
var Fo = ar.Uint8Array;
function rc(e) {
  var t = new e.constructor(e.byteLength);
  return new Fo(t).set(new Fo(e)), t;
}
function oD(e, t) {
  var n = t ? rc(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.byteLength);
}
var uD = /\w*$/;
function _D(e) {
  var t = new e.constructor(e.source, uD.exec(e));
  return t.lastIndex = e.lastIndex, t;
}
var QA = nr ? nr.prototype : void 0, eE = QA ? QA.valueOf : void 0;
function dD(e) {
  return eE ? Object(eE.call(e)) : {};
}
function cD(e, t) {
  var n = t ? rc(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.length);
}
var fD = "[object Boolean]", hD = "[object Date]", AD = "[object Map]", ED = "[object Number]", pD = "[object RegExp]", TD = "[object Set]", SD = "[object String]", mD = "[object Symbol]", bD = "[object ArrayBuffer]", LD = "[object DataView]", vD = "[object Float32Array]", ID = "[object Float64Array]", gD = "[object Int8Array]", yD = "[object Int16Array]", RD = "[object Int32Array]", OD = "[object Uint8Array]", CD = "[object Uint8ClampedArray]", ND = "[object Uint16Array]", DD = "[object Uint32Array]";
function BD(e, t, n) {
  var r = e.constructor;
  switch (t) {
    case bD:
      return rc(e);
    case fD:
    case hD:
      return new r(+e);
    case LD:
      return oD(e, n);
    case vD:
    case ID:
    case gD:
    case yD:
    case RD:
    case OD:
    case CD:
    case ND:
    case DD:
      return cD(e, n);
    case AD:
      return new r();
    case ED:
    case SD:
      return new r(e);
    case pD:
      return _D(e);
    case TD:
      return new r();
    case mD:
      return dD(e);
  }
}
function wD(e) {
  return typeof e.constructor == "function" && !cl(e) ? hO(tc(e)) : {};
}
var PD = "[object Map]";
function xD(e) {
  return rr(e) && Bn(e) == PD;
}
var tE = rs && rs.isMap, FD = tE ? iu(tE) : xD, MD = "[object Set]";
function qD(e) {
  return rr(e) && Bn(e) == MD;
}
var nE = rs && rs.isSet, $D = nE ? iu(nE) : qD, kD = 1, HD = 2, UD = 4, Mp = "[object Arguments]", WD = "[object Array]", VD = "[object Boolean]", GD = "[object Date]", jD = "[object Error]", qp = "[object Function]", zD = "[object GeneratorFunction]", KD = "[object Map]", YD = "[object Number]", $p = "[object Object]", ZD = "[object RegExp]", XD = "[object Set]", JD = "[object String]", QD = "[object Symbol]", eB = "[object WeakMap]", tB = "[object ArrayBuffer]", nB = "[object DataView]", rB = "[object Float32Array]", iB = "[object Float64Array]", aB = "[object Int8Array]", sB = "[object Int16Array]", lB = "[object Int32Array]", oB = "[object Uint8Array]", uB = "[object Uint8ClampedArray]", _B = "[object Uint16Array]", dB = "[object Uint32Array]", Et = {};
Et[Mp] = Et[WD] = Et[tB] = Et[nB] = Et[VD] = Et[GD] = Et[rB] = Et[iB] = Et[aB] = Et[sB] = Et[lB] = Et[KD] = Et[YD] = Et[$p] = Et[ZD] = Et[XD] = Et[JD] = Et[QD] = Et[oB] = Et[uB] = Et[_B] = Et[dB] = !0;
Et[jD] = Et[qp] = Et[eB] = !1;
function zs(e, t, n, r, a, l) {
  var o, u = t & kD, h = t & HD, A = t & UD;
  if (o !== void 0)
    return o;
  if (!qn(e))
    return e;
  var E = Te(e);
  if (E) {
    if (o = lD(e), !u)
      return pO(e, o);
  } else {
    var p = Bn(e), T = p == qp || p == zD;
    if (Js(e))
      return jN(e, u);
    if (p == $p || p == Mp || T && !a) {
      if (o = h || T ? {} : wD(e), !u)
        return h ? XN(e, VN(o, e)) : YN(e, WN(o, e));
    } else {
      if (!Et[p])
        return a ? e : {};
      o = BD(e, p, u);
    }
  }
  l || (l = new Pr());
  var m = l.get(e);
  if (m)
    return m;
  l.set(e, o), $D(e) ? e.forEach(function(v) {
    o.add(zs(v, t, n, v, e, l));
  }) : FD(e) && e.forEach(function(v, I) {
    o.set(I, zs(v, t, n, I, e, l));
  });
  var b = A ? h ? JN : Ad : h ? Kd : ri, L = E ? void 0 : b(e);
  return up(L || e, function(v, I) {
    L && (I = v, v = e[I]), tu(o, I, zs(v, t, n, I, e, l));
  }), o;
}
var cB = 4;
function kp(e) {
  return zs(e, cB);
}
var fB = 1, hB = 4;
function Se(e) {
  return zs(e, fB | hB);
}
var AB = "__lodash_hash_undefined__";
function EB(e) {
  return this.__data__.set(e, AB), this;
}
function pB(e) {
  return this.__data__.has(e);
}
function is(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.__data__ = new ai(); ++t < n; )
    this.add(e[t]);
}
is.prototype.add = is.prototype.push = EB;
is.prototype.has = pB;
function TB(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r; )
    if (t(e[n], n, e))
      return !0;
  return !1;
}
function ic(e, t) {
  return e.has(t);
}
var SB = 1, mB = 2;
function Hp(e, t, n, r, a, l) {
  var o = n & SB, u = e.length, h = t.length;
  if (u != h && !(o && h > u))
    return !1;
  var A = l.get(e), E = l.get(t);
  if (A && E)
    return A == t && E == e;
  var p = -1, T = !0, m = n & mB ? new is() : void 0;
  for (l.set(e, t), l.set(t, e); ++p < u; ) {
    var b = e[p], L = t[p];
    if (r)
      var v = o ? r(L, b, p, t, e, l) : r(b, L, p, e, t, l);
    if (v !== void 0) {
      if (v)
        continue;
      T = !1;
      break;
    }
    if (m) {
      if (!TB(t, function(I, R) {
        if (!ic(m, R) && (b === I || a(b, I, n, r, l)))
          return m.push(R);
      })) {
        T = !1;
        break;
      }
    } else if (!(b === L || a(b, L, n, r, l))) {
      T = !1;
      break;
    }
  }
  return l.delete(e), l.delete(t), T;
}
function bB(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r, a) {
    n[++t] = [a, r];
  }), n;
}
function ac(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r) {
    n[++t] = r;
  }), n;
}
var LB = 1, vB = 2, IB = "[object Boolean]", gB = "[object Date]", yB = "[object Error]", RB = "[object Map]", OB = "[object Number]", CB = "[object RegExp]", NB = "[object Set]", DB = "[object String]", BB = "[object Symbol]", wB = "[object ArrayBuffer]", PB = "[object DataView]", rE = nr ? nr.prototype : void 0, Y_ = rE ? rE.valueOf : void 0;
function xB(e, t, n, r, a, l, o) {
  switch (n) {
    case PB:
      if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset)
        return !1;
      e = e.buffer, t = t.buffer;
    case wB:
      return !(e.byteLength != t.byteLength || !l(new Fo(e), new Fo(t)));
    case IB:
    case gB:
    case OB:
      return eu(+e, +t);
    case yB:
      return e.name == t.name && e.message == t.message;
    case CB:
    case DB:
      return e == t + "";
    case RB:
      var u = bB;
    case NB:
      var h = r & LB;
      if (u || (u = ac), e.size != t.size && !h)
        return !1;
      var A = o.get(e);
      if (A)
        return A == t;
      r |= vB, o.set(e, t);
      var E = Hp(u(e), u(t), r, a, l, o);
      return o.delete(e), E;
    case BB:
      if (Y_)
        return Y_.call(e) == Y_.call(t);
  }
  return !1;
}
var FB = 1, MB = Object.prototype, qB = MB.hasOwnProperty;
function $B(e, t, n, r, a, l) {
  var o = n & FB, u = Ad(e), h = u.length, A = Ad(t), E = A.length;
  if (h != E && !o)
    return !1;
  for (var p = h; p--; ) {
    var T = u[p];
    if (!(o ? T in t : qB.call(t, T)))
      return !1;
  }
  var m = l.get(e), b = l.get(t);
  if (m && b)
    return m == t && b == e;
  var L = !0;
  l.set(e, t), l.set(t, e);
  for (var v = o; ++p < h; ) {
    T = u[p];
    var I = e[T], R = t[T];
    if (r)
      var y = o ? r(R, I, T, t, e, l) : r(I, R, T, e, t, l);
    if (!(y === void 0 ? I === R || a(I, R, n, r, l) : y)) {
      L = !1;
      break;
    }
    v || (v = T == "constructor");
  }
  if (L && !v) {
    var C = e.constructor, w = t.constructor;
    C != w && "constructor" in e && "constructor" in t && !(typeof C == "function" && C instanceof C && typeof w == "function" && w instanceof w) && (L = !1);
  }
  return l.delete(e), l.delete(t), L;
}
var kB = 1, iE = "[object Arguments]", aE = "[object Array]", To = "[object Object]", HB = Object.prototype, sE = HB.hasOwnProperty;
function UB(e, t, n, r, a, l) {
  var o = Te(e), u = Te(t), h = o ? aE : Bn(e), A = u ? aE : Bn(t);
  h = h == iE ? To : h, A = A == iE ? To : A;
  var E = h == To, p = A == To, T = h == A;
  if (T && Js(e)) {
    if (!Js(t))
      return !1;
    o = !0, E = !1;
  }
  if (T && !E)
    return l || (l = new Pr()), o || jd(e) ? Hp(e, t, n, r, a, l) : xB(e, t, h, n, r, a, l);
  if (!(n & kB)) {
    var m = E && sE.call(e, "__wrapped__"), b = p && sE.call(t, "__wrapped__");
    if (m || b) {
      var L = m ? e.value() : e, v = b ? t.value() : t;
      return l || (l = new Pr()), a(L, v, n, r, l);
    }
  }
  return T ? (l || (l = new Pr()), $B(e, t, n, r, a, l)) : !1;
}
function ou(e, t, n, r, a) {
  return e === t ? !0 : e == null || t == null || !rr(e) && !rr(t) ? e !== e && t !== t : UB(e, t, n, r, ou, a);
}
var WB = 1, VB = 2;
function Up(e, t, n, r) {
  var a = n.length, l = a;
  if (e == null)
    return !l;
  for (e = Object(e); a--; ) {
    var o = n[a];
    if (o[2] ? o[1] !== e[o[0]] : !(o[0] in e))
      return !1;
  }
  for (; ++a < l; ) {
    o = n[a];
    var u = o[0], h = e[u], A = o[1];
    if (o[2]) {
      if (h === void 0 && !(u in e))
        return !1;
    } else {
      var E = new Pr(), p;
      if (!(p === void 0 ? ou(A, h, WB | VB, r, E) : p))
        return !1;
    }
  }
  return !0;
}
function Wp(e) {
  return e === e && !qn(e);
}
function Vp(e) {
  for (var t = ri(e), n = t.length; n--; ) {
    var r = t[n], a = e[r];
    t[n] = [r, a, Wp(a)];
  }
  return t;
}
function Gp(e, t) {
  return function(n) {
    return n == null ? !1 : n[e] === t && (t !== void 0 || e in Object(n));
  };
}
function GB(e) {
  var t = Vp(e);
  return t.length == 1 && t[0][2] ? Gp(t[0][0], t[0][1]) : function(n) {
    return n === e || Up(n, e, t);
  };
}
function jB(e, t) {
  return e != null && t in Object(e);
}
function zB(e, t, n) {
  t = Xd(t, e);
  for (var r = -1, a = t.length, l = !1; ++r < a; ) {
    var o = fl(t[r]);
    if (!(l = e != null && n(e, o)))
      break;
    e = e[o];
  }
  return l || ++r != a ? l : (a = e == null ? 0 : e.length, !!a && Gd(a) && Qo(o, a) && (Te(e) || ru(e)));
}
function KB(e, t) {
  return e != null && zB(e, t, jB);
}
var YB = 1, ZB = 2;
function XB(e, t) {
  return Yd(e) && Wp(t) ? Gp(fl(e), t) : function(n) {
    var r = de(n, e);
    return r === void 0 && r === t ? KB(n, e) : ou(t, r, YB | ZB);
  };
}
function jp(e) {
  return function(t) {
    return t == null ? void 0 : t[e];
  };
}
function JB(e) {
  return function(t) {
    return Jd(t, e);
  };
}
function QB(e) {
  return Yd(e) ? jp(fl(e)) : JB(e);
}
function si(e) {
  return typeof e == "function" ? e : e == null ? ga : typeof e == "object" ? Te(e) ? XB(e[0], e[1]) : GB(e) : QB(e);
}
function ew(e, t, n, r) {
  for (var a = -1, l = e == null ? 0 : e.length; ++a < l; ) {
    var o = e[a];
    t(r, o, n(o), e);
  }
  return r;
}
function zp(e) {
  return function(t, n, r) {
    for (var a = -1, l = Object(t), o = r(t), u = o.length; u--; ) {
      var h = o[e ? u : ++a];
      if (n(l[h], h, l) === !1)
        break;
    }
    return t;
  };
}
var tw = zp();
function nw(e, t) {
  return e && tw(e, t, ri);
}
function Kp(e, t) {
  return function(n, r) {
    if (n == null)
      return n;
    if (!br(n))
      return e(n, r);
    for (var a = n.length, l = t ? a : -1, o = Object(n); (t ? l-- : ++l < a) && r(o[l], l, o) !== !1; )
      ;
    return n;
  };
}
var us = Kp(nw);
function rw(e, t, n, r) {
  return us(e, function(a, l, o) {
    t(r, a, n(a), o);
  }), r;
}
function iw(e, t) {
  return function(n, r) {
    var a = Te(n) ? ew : rw, l = {};
    return a(n, e, si(r), l);
  };
}
var Z_ = function() {
  return ar.Date.now();
}, aw = "Expected a function", sw = Math.max, lw = Math.min;
function tl(e, t, n) {
  var r, a, l, o, u, h, A = 0, E = !1, p = !1, T = !0;
  if (typeof e != "function")
    throw new TypeError(aw);
  t = ns(t) || 0, qn(n) && (E = !!n.leading, p = "maxWait" in n, l = p ? sw(ns(n.maxWait) || 0, t) : l, T = "trailing" in n ? !!n.trailing : T);
  function m(F) {
    var P = r, q = a;
    return r = a = void 0, A = F, o = e.apply(q, P), o;
  }
  function b(F) {
    return A = F, u = setTimeout(I, t), E ? m(F) : o;
  }
  function L(F) {
    var P = F - h, q = F - A, N = t - P;
    return p ? lw(N, l - q) : N;
  }
  function v(F) {
    var P = F - h, q = F - A;
    return h === void 0 || P >= t || P < 0 || p && q >= l;
  }
  function I() {
    var F = Z_();
    if (v(F))
      return R(F);
    u = setTimeout(I, L(F));
  }
  function R(F) {
    return u = void 0, T && r ? m(F) : (r = a = void 0, o);
  }
  function y() {
    u !== void 0 && clearTimeout(u), A = 0, r = h = a = u = void 0;
  }
  function C() {
    return u === void 0 ? o : R(Z_());
  }
  function w() {
    var F = Z_(), P = v(F);
    if (r = arguments, a = this, h = F, P) {
      if (u === void 0)
        return b(h);
      if (p)
        return clearTimeout(u), u = setTimeout(I, t), m(h);
    }
    return u === void 0 && (u = setTimeout(I, t)), o;
  }
  return w.cancel = y, w.flush = C, w;
}
function Td(e) {
  return rr(e) && br(e);
}
var ow = 200;
function uw(e, t, n, r) {
  var a = -1, l = cp, o = !0, u = e.length, h = [], A = t.length;
  if (!u)
    return h;
  t.length >= ow && (l = ic, o = !1, t = new is(t));
  e:
    for (; ++a < u; ) {
      var E = e[a], p = E;
      if (E = E !== 0 ? E : 0, o && p === p) {
        for (var T = A; T--; )
          if (t[T] === p)
            continue e;
        h.push(E);
      } else l(t, p, r) || h.push(E);
    }
  return h;
}
var _w = nu(function(e, t) {
  return Td(e) ? uw(e, ec(t, 1, Td, !0)) : [];
});
function as(e) {
  var t = e == null ? 0 : e.length;
  return t ? e[t - 1] : void 0;
}
function sc(e) {
  return typeof e == "function" ? e : ga;
}
function Y(e, t) {
  var n = Te(e) ? up : us;
  return n(e, sc(t));
}
function dw(e, t) {
  for (var n = e == null ? 0 : e.length; n-- && t(e[n], n, e) !== !1; )
    ;
  return e;
}
var cw = zp(!0);
function fw(e, t) {
  return e && cw(e, t, ri);
}
var hw = Kp(fw, !0);
function Aw(e, t) {
  var n = Te(e) ? dw : hw;
  return n(e, sc(t));
}
function Ew(e, t, n) {
  e = $t(e), t = _l(t);
  var r = e.length;
  n = n === void 0 ? r : Dp(Hr(n), 0, r);
  var a = n;
  return n -= t.length, n >= 0 && e.slice(n, a) == t;
}
var Yp = /[\\^$.*+?()[\]{}|]/g, pw = RegExp(Yp.source);
function uu(e) {
  return e = $t(e), e && pw.test(e) ? e.replace(Yp, "\\$&") : e;
}
function Tw(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r; )
    if (!t(e[n], n, e))
      return !1;
  return !0;
}
function Sw(e, t) {
  var n = !0;
  return us(e, function(r, a, l) {
    return n = !!t(r, a, l), n;
  }), n;
}
function Zp(e, t, n) {
  var r = Te(e) ? Tw : Sw;
  return r(e, si(t));
}
function mw(e, t) {
  var n = [];
  return us(e, function(r, a, l) {
    t(r, a, l) && n.push(r);
  }), n;
}
function Dt(e, t) {
  var n = Te(e) ? wp : mw;
  return n(e, si(t));
}
function bw(e) {
  return function(t, n, r) {
    var a = Object(t);
    if (!br(t)) {
      var l = si(n);
      t = ri(t), n = function(u) {
        return l(a[u], u, a);
      };
    }
    var o = e(t, n, r);
    return o > -1 ? a[l ? t[o] : o] : void 0;
  };
}
var Lw = Math.max;
function Xp(e, t, n) {
  var r = e == null ? 0 : e.length;
  if (!r)
    return -1;
  var a = n == null ? 0 : Hr(n);
  return a < 0 && (a = Lw(r + a, 0)), _p(e, si(t), a);
}
var lc = bw(Xp);
function Jp(e, t) {
  var n = -1, r = br(e) ? Array(e.length) : [];
  return us(e, function(a, l, o) {
    r[++n] = t(a, l, o);
  }), r;
}
function Nn(e, t) {
  var n = Te(e) ? Ja : Jp;
  return n(e, si(t));
}
function vw(e, t) {
  return e > t;
}
var Iw = "[object String]";
function lt(e) {
  return typeof e == "string" || !Te(e) && rr(e) && ni(e) == Iw;
}
function gw(e, t) {
  return Ja(t, function(n) {
    return e[n];
  });
}
function oc(e) {
  return e == null ? [] : gw(e, ri(e));
}
var yw = Math.max;
function Sd(e, t, n, r) {
  e = br(e) ? e : oc(e), n = n && !r ? Hr(n) : 0;
  var a = e.length;
  return n < 0 && (n = yw(a + n, 0)), lt(e) ? n <= a && e.indexOf(t, n) > -1 : !!a && dp(e, t, n) > -1;
}
var Rw = "[object Map]", Ow = "[object Set]", Cw = Object.prototype, Nw = Cw.hasOwnProperty;
function wn(e) {
  if (e == null)
    return !0;
  if (br(e) && (Te(e) || typeof e == "string" || typeof e.splice == "function" || Js(e) || jd(e) || ru(e)))
    return !e.length;
  var t = Bn(e);
  if (t == Rw || t == Ow)
    return !e.size;
  if (cl(e))
    return !zd(e).length;
  for (var n in e)
    if (Nw.call(e, n))
      return !1;
  return !0;
}
function Qp(e, t) {
  return ou(e, t);
}
function Oi(e) {
  return typeof e == "number" && e == Hr(e);
}
function Dw(e, t) {
  return e === t || Up(e, t, Vp(t));
}
var Bw = "[object Number]";
function bn(e) {
  return typeof e == "number" || rr(e) && ni(e) == Bw;
}
function ww(e) {
  return bn(e) && e != +e;
}
function ae(e) {
  return e == null;
}
function Pe(e) {
  return e === void 0;
}
var La = iw(function(e, t, n) {
  Vd(e, n, t);
});
function Pw(e, t) {
  return e < t;
}
function eT(e, t, n) {
  for (var r = -1, a = e.length; ++r < a; ) {
    var l = e[r], o = t(l);
    if (o != null && (u === void 0 ? o === o && !ma(o) : n(o, u)))
      var u = o, h = l;
  }
  return h;
}
function xw(e) {
  return e.length ? eT(e, ga, vw) : void 0;
}
function Fw(e) {
  return e && e.length ? eT(e, ga, Pw) : void 0;
}
function Mw(e, t, n, r) {
  if (!qn(e))
    return e;
  t = Xd(t, e);
  for (var a = -1, l = t.length, o = l - 1, u = e; u != null && ++a < l; ) {
    var h = fl(t[a]), A = n;
    if (h === "__proto__" || h === "constructor" || h === "prototype")
      return e;
    if (a != o) {
      var E = u[h];
      A = void 0, A === void 0 && (A = qn(E) ? E : Qo(t[a + 1]) ? [] : {});
    }
    tu(u, h, A), u = u[h];
  }
  return e;
}
function qw(e, t) {
  var n = e.length;
  for (e.sort(t); n--; )
    e[n] = e[n].value;
  return e;
}
function $w(e, t) {
  if (e !== t) {
    var n = e !== void 0, r = e === null, a = e === e, l = ma(e), o = t !== void 0, u = t === null, h = t === t, A = ma(t);
    if (!u && !A && !l && e > t || l && o && h && !u && !A || r && o && h || !n && h || !a)
      return 1;
    if (!r && !l && !A && e < t || A && n && a && !r && !l || u && n && a || !o && a || !h)
      return -1;
  }
  return 0;
}
function kw(e, t, n) {
  for (var r = -1, a = e.criteria, l = t.criteria, o = a.length, u = n.length; ++r < o; ) {
    var h = $w(a[r], l[r]);
    if (h) {
      if (r >= u)
        return h;
      var A = n[r];
      return h * (A == "desc" ? -1 : 1);
    }
  }
  return e.index - t.index;
}
function tT(e, t, n) {
  t.length ? t = Ja(t, function(l) {
    return Te(l) ? function(o) {
      return Jd(o, l.length === 1 ? l[0] : l);
    } : l;
  }) : t = [ga];
  var r = -1;
  t = Ja(t, iu(si));
  var a = Jp(e, function(l, o, u) {
    var h = Ja(t, function(A) {
      return A(l);
    });
    return { criteria: h, index: ++r, value: l };
  });
  return qw(a, function(l, o) {
    return kw(l, o, n);
  });
}
function uc(e, t, n, r) {
  return e == null ? [] : (Te(t) || (t = t == null ? [] : [t]), n = n, Te(n) || (n = n == null ? [] : [n]), tT(e, t, n));
}
var Hw = 9007199254740991, Uw = Math.floor;
function md(e, t) {
  var n = "";
  if (!e || t < 1 || t > Hw)
    return n;
  do
    t % 2 && (n += e), t = Uw(t / 2), t && (e += e);
  while (t);
  return n;
}
var Ww = jp("length"), nT = "\\ud800-\\udfff", Vw = "\\u0300-\\u036f", Gw = "\\ufe20-\\ufe2f", jw = "\\u20d0-\\u20ff", zw = Vw + Gw + jw, Kw = "\\ufe0e\\ufe0f", Yw = "[" + nT + "]", bd = "[" + zw + "]", Ld = "\\ud83c[\\udffb-\\udfff]", Zw = "(?:" + bd + "|" + Ld + ")", rT = "[^" + nT + "]", iT = "(?:\\ud83c[\\udde6-\\uddff]){2}", aT = "[\\ud800-\\udbff][\\udc00-\\udfff]", Xw = "\\u200d", sT = Zw + "?", lT = "[" + Kw + "]?", Jw = "(?:" + Xw + "(?:" + [rT, iT, aT].join("|") + ")" + lT + sT + ")*", Qw = lT + sT + Jw, eP = "(?:" + [rT + bd + "?", bd, iT, aT, Yw].join("|") + ")", lE = RegExp(Ld + "(?=" + Ld + ")|" + eP + Qw, "g");
function tP(e) {
  for (var t = lE.lastIndex = 0; lE.test(e); )
    ++t;
  return t;
}
function _c(e) {
  return lu(e) ? tP(e) : Ww(e);
}
var nP = Math.ceil;
function rP(e, t) {
  t = t === void 0 ? " " : _l(t);
  var n = t.length;
  if (n < 2)
    return n ? md(t, e) : t;
  var r = md(t, nP(e / _c(t)));
  return lu(t) ? bp(Op(r), 0, e).join("") : r.slice(0, e);
}
function iP(e, t, n) {
  e = $t(e), t = Hr(t);
  var r = t ? _c(e) : 0;
  return t && r < t ? rP(t - r, n) + e : e;
}
var aP = Math.ceil, sP = Math.max;
function lP(e, t, n, r) {
  for (var a = -1, l = sP(aP((t - e) / (n || 1)), 0), o = Array(l); l--; )
    o[++a] = e, e += n;
  return o;
}
function oP(e) {
  return function(t, n, r) {
    return r && typeof r != "number" && xo(t, n, r) && (n = r = void 0), t = go(t), n === void 0 ? (n = t, t = 0) : n = go(n), r = r === void 0 ? t < n ? 1 : -1 : go(r), lP(t, n, r);
  };
}
var uP = oP();
function _P(e, t, n, r, a) {
  return a(e, function(l, o, u) {
    n = r ? (r = !1, l) : t(n, l, o, u);
  }), n;
}
function dP(e, t, n) {
  var r = Te(e) ? wN : _P, a = arguments.length < 3;
  return r(e, si(t), n, a, us);
}
function cP(e, t, n) {
  return t === void 0 ? t = 1 : t = Hr(t), md($t(e), t);
}
var fP = Np("round");
function dc(e, t, n) {
  return e == null ? e : Mw(e, t, n);
}
var hP = "[object Map]", AP = "[object Set]";
function _s(e) {
  if (e == null)
    return 0;
  if (br(e))
    return lt(e) ? _c(e) : e.length;
  var t = Bn(e);
  return t == hP || t == AP ? e.size : zd(e).length;
}
var vd = nu(function(e, t) {
  if (e == null)
    return [];
  var n = t.length;
  return n > 1 && xo(e, t[0], t[1]) ? t = [] : n > 2 && xo(t[0], t[1], t[2]) && (t = [t[0]]), tT(e, ec(t), []);
});
function cc(e, t, n) {
  return e = $t(e), n = n == null ? 0 : Dp(Hr(n), 0, e.length), t = _l(t), e.slice(n, n + t.length) == t;
}
function oT(e, t, n) {
  return e && e.length ? (t = t === void 0 ? 1 : Hr(t), mp(e, 0, t < 0 ? 0 : t)) : [];
}
var EP = 9007199254740991, X_ = 4294967295, pP = Math.min;
function er(e, t) {
  if (e = Hr(e), e < 1 || e > EP)
    return [];
  var n = X_, r = pP(e, X_);
  t = sc(t), e -= X_;
  for (var a = fp(r, t); ++n < e; )
    t(n);
  return a;
}
function uT(e) {
  return $t(e).toLowerCase();
}
function _T(e) {
  return $t(e).toUpperCase();
}
var TP = 1 / 0, SP = Qa && 1 / ac(new Qa([, -0]))[1] == TP ? function(e) {
  return new Qa(e);
} : EO, mP = 200;
function fc(e, t, n) {
  var r = -1, a = cp, l = e.length, o = !0, u = [], h = u;
  if (l >= mP) {
    var A = t ? null : SP(e);
    if (A)
      return ac(A);
    o = !1, a = ic, h = new is();
  } else
    h = t ? [] : u;
  e:
    for (; ++r < l; ) {
      var E = e[r], p = t ? t(E) : E;
      if (E = E !== 0 ? E : 0, o && p === p) {
        for (var T = h.length; T--; )
          if (h[T] === p)
            continue e;
        t && h.push(p), u.push(E);
      } else a(h, p, n) || (h !== u && h.push(p), u.push(E));
    }
  return u;
}
var bP = nu(function(e) {
  return fc(ec(e, 1, Td, !0));
});
function LP(e) {
  return e && e.length ? fc(e) : [];
}
function dT(e, t) {
  return e && e.length ? fc(e, si(t)) : [];
}
var vP = 0;
function ot(e) {
  var t = ++vP;
  return $t(e) + t;
}
const Loe = Wd, voe = Wd.sanitize;
function Mo(e) {
  return Wd.sanitize(IP(e), { ADD_ATTR: ["target"] });
}
function IP(e) {
  return bn(e) ? $t(e) : e;
}
function Ioe(e) {
  return !Te(e) || !e.length ? !1 : Zp(e, lt);
}
function gP(e) {
  return !Te(e) || !e.length ? !1 : Zp(e, Te);
}
function yP(e) {
  const t = Object.keys(e);
  return t.length === 0 ? "" : `<ul class="a_list_without_styles">${t.map((r) => `<li>${e[r]}</li>`).join("")}</ul>`;
}
function RP({ array: e, keyChildren: t }) {
  return cT({ array: e, keyChildren: t, count: 0 });
}
function cT({ array: e, keyChildren: t, count: n = 0 }) {
  return Te(e) && Y(e, (r) => {
    n++;
    const a = de(r, t);
    n = cT({ array: a, keyChildren: t, count: n });
  }), n;
}
const cn = {
  beforeMount(e, t) {
    e.innerHTML = ae(t.value) || t.value === "" ? "" : Mo(t.value);
  },
  updated(e, t) {
    e.innerHTML = ae(t.value) || t.value === "" ? "" : Mo(t.value);
  }
};
function OP(e, {
  classButtonLocal: t = _(() => {
  }),
  isOpen: n = _(() => !1),
  toggleLocal: r = () => {
  },
  currentId: a = _(() => "")
}) {
  const l = f(e, "item"), o = ue("classButton"), u = ue("disabled"), h = ue("id"), A = ue("isCaret"), E = ue("keyContent"), p = ue("keyLabel"), T = ue("readonly"), m = ue("withGap"), b = _(() => !!(u.value || l.value.disabled)), L = _(() => Pe(l.value.isCaret) ? A.value : l.value.isCaret), v = _(() => T.value || l.value.readonly), I = _(() => `${h.value}_${a.value}`), R = _(() => v.value ? "div" : "a"), y = _(() => {
    const F = {
      class: ["a_accordion__button", o.value, t.value, {
        a_accordion__button_collapsed: !n.value,
        a_accordion__button_has_not_caret: !L.value,
        a_accordion__button_with_gap: m.value,
        readonly: v.value
      }],
      id: l.value.id
    };
    return v.value || (F.ariaExpanded = n.value, F["aria-controls"] = I.value, F.rolw = "button", F.tabindex = 0, F.disabled = b.value, F.onClick = r), F;
  }), C = _(() => p.value ? de(l.value, p.value) : ""), w = _(() => E.value ? de(l.value, E.value) : "");
  return {
    buttonAttributes: y,
    buttonTag: R,
    contentLocal: w,
    idForCollapse: I,
    labelLocal: C
  };
}
function CP(e) {
  const t = f(e, "item"), n = ue("keyChildren"), r = _(() => de(t.value, n.value, []) || []), a = _(() => r.value.length !== 0);
  return {
    children: r,
    hasChildren: a
  };
}
function NP(e) {
  const t = f(e, "item"), n = ue("keyClassBody"), r = ue("keyClassHeader"), a = ue("keyClassButton"), l = _(() => {
    if (n.value)
      return de(t.value, n.value);
  }), o = _(() => {
    if (r.value)
      return de(t.value, r.value);
  }), u = _(() => {
    if (a.value)
      return de(t.value, a.value);
  });
  return {
    classBodyLocal: l,
    classButtonLocal: u,
    classHeaderLocal: o
  };
}
function DP(e) {
  const t = f(e, "item"), n = ue("keyIsRender"), r = ue("keyIsRenderBodyByFirstOpen"), a = B(!1), l = _(() => {
    if (r.value)
      return de(t.value, r.value);
  }), o = _(() => l.value ? a.value : !0), u = _(() => n.value ? !!de(t.value, n.value, !0) : !0);
  return {
    isBodyVisible: o,
    isOpenFirst: a,
    isRender: u
  };
}
const et = "_a_id";
function BP(e) {
  const t = f(e, "isParentOpen"), n = f(e, "item"), r = f(e, "itemIndex"), a = f(e, "keyId"), l = f(e, "parentsIds"), o = f(e, "parentIndexes"), u = ue("idsForOpen"), h = ue("toggle"), A = _(() => n.value[et]), E = _(() => t.value ? u.value.indexOf(A.value) !== -1 : !1), p = _(() => {
    const I = Se(l.value);
    return I.push(`${A.value}`), I;
  }), T = _(() => o.value.join(".")), m = _(() => T.value ? `${T.value}.${r.value}` : `${r.value}`), b = _(() => {
    const I = Se(o.value);
    return I.push(`${m.value}`), I;
  }), L = (I) => {
    h({
      $event: I,
      parentsIds: l.value,
      isOpen: E.value,
      item: n.value,
      itemIndex: r.value
    });
  };
  return {
    closeItemIfOpen: () => {
      E.value && a.value && L();
    },
    currentId: A,
    isOpen: E,
    parentIndexesForChild: b,
    parentsIdsForChild: p,
    toggleLocal: L
  };
}
const wP = {
  name: "AAccordionItem",
  props: {
    isParentOpen: {
      type: Boolean,
      required: !0
    },
    item: {
      type: Object,
      required: !0
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    parentsIds: {
      type: Array,
      required: !1,
      default: () => []
    },
    parentIndexes: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  inject: [
    "classBody",
    "classHeader",
    "id",
    "withGap"
  ],
  setup(e) {
    const {
      closeItemIfOpen: t,
      currentId: n,
      isOpen: r,
      parentIndexesForChild: a,
      parentsIdsForChild: l,
      toggleLocal: o
    } = BP(e), {
      children: u,
      hasChildren: h
    } = CP(e), {
      classBodyLocal: A,
      classButtonLocal: E,
      classHeaderLocal: p
    } = NP(e), {
      isBodyVisible: T,
      isOpenFirst: m,
      isRender: b
    } = DP(e), {
      buttonAttributes: L,
      buttonTag: v,
      contentLocal: I,
      idForCollapse: R,
      labelLocal: y
    } = OP(e, {
      classButtonLocal: E,
      isOpen: r,
      toggleLocal: o,
      currentId: n
    });
    return tt(r, (C) => {
      C && !m.value && (m.value = !0);
    }, {
      immediate: !0
    }), Ot(() => {
      t();
    }), {
      buttonAttributes: L,
      buttonTag: v,
      children: u,
      classBodyLocal: A,
      classButtonLocal: E,
      classHeaderLocal: p,
      contentLocal: I,
      currentId: n,
      hasChildren: h,
      idForCollapse: R,
      isBodyVisible: T,
      isOpen: r,
      isRender: b,
      labelLocal: y,
      parentIndexesForChild: a,
      parentsIdsForChild: l
    };
  },
  render() {
    let e = [];
    return this.isBodyVisible && (e = [
      this.item.slotContent && this.$slots[this.item.slotContent] ? this.$slots[this.item.slotContent]({
        item: this.item,
        itemIndex: this.itemIndex,
        parentsIds: this.parentsIds,
        parentIndexes: this.parentIndexes,
        id: this.id,
        currentId: this.currentId
      }) : this.$slots.accordionContent ? this.$slots.accordionContent({
        item: this.item,
        itemIndex: this.itemIndex,
        parentsIds: this.parentsIds,
        parentIndexes: this.parentIndexes,
        id: this.id,
        currentId: this.currentId
      }) : this.contentLocal && Ft(c("div"), [
        [cn, this.contentLocal]
      ]),
      this.hasChildren && c("div", {
        class: ["a_accordion"]
      }, [
        this.children.map((t, n) => c(Fr("AAccordionItem"), {
          key: t[et],
          item: t,
          itemIndex: n,
          isParentOpen: this.isOpen,
          parentsIds: this.parentsIdsForChild,
          parentIndexes: this.parentIndexesForChild,
          keyId: this.keyId
        }, this.$slots))
      ])
    ]), this.isRender && c("div", {
      class: [
        "a_accordion__item",
        {
          a_accordion__item_with_gap: this.withGap
        }
      ]
    }, [
      c("div", {
        class: ["a_accordion__header", this.classHeader, this.classHeaderLocal]
      }, [
        c(this.buttonTag, this.buttonAttributes, [
          this.item.slotButton && this.$slots[this.item.slotButton] ? this.$slots[this.item.slotButton]({
            item: this.item,
            itemIndex: this.itemIndex,
            parentsIds: this.parentsIds,
            parentIndexes: this.parentIndexes,
            id: this.id,
            currentId: this.currentId
          }) : this.$slots.accordionButton && this.$slots.accordionButton({
            item: this.item,
            itemIndex: this.itemIndex,
            parentsIds: this.parentsIds,
            parentIndexes: this.parentIndexes,
            id: this.id,
            currentId: this.currentId
          }),
          this.labelLocal && Ft(c("span"), [
            [cn, this.labelLocal]
          ])
        ])
      ]),
      c("div", {
        id: this.idForCollapse,
        class: ["a_accordion__collapse_box", {
          a_accordion__collapse_box_show: this.isOpen
        }]
      }, [
        c("div", {
          class: ["a_accordion__body", this.classBody, this.classBodyLocal]
        }, e)
      ])
    ]);
  }
};
function PP(e) {
  const t = f(e, "data"), n = f(e, "keyId"), r = f(e, "keyChildren"), a = ({ items: o, parentIds: u = "" }) => {
    Y(o, (h, A) => {
      const E = de(h, n.value);
      let p;
      ae(E) ? p = `${u}${A}` : p = `${u}${E}`, h[et] = p;
      const T = h[r.value];
      T && T.length && a({ items: T, parentIds: `${p}_` });
    });
  };
  return {
    dataWithIds: _(() => {
      const o = Se(t.value);
      return a({ items: o }), o;
    })
  };
}
function xP(e, {
  idsForOpen: t = _(() => []),
  dataWithIds: n = _(() => [])
}) {
  const r = f(e, "indexesForOpen"), a = f(e, "keyChildren"), l = ({ indexForOpen: h }) => {
    let A = `${h}`.replaceAll(".", `.${a.value}.`);
    return A += `.${et}`, A;
  }, o = ({ isInit: h } = {}) => {
    if (h && !r.value.length)
      return;
    const A = [];
    a.value ? Y(r.value, (E) => {
      const p = de(n.value, l({ indexForOpen: E }));
      ae(p) || A.push(p);
    }) : Y(r.value, (E) => {
      const p = de(n.value, `${E}.${et}`);
      ae(p) || A.push(p);
    }), t.value = A;
  }, u = () => {
    o({ isInit: !0 });
  };
  return tt(r, () => {
    o();
  }), {
    initIdsFromIndexesForOpen: u
  };
}
function FP(e, { emit: t }) {
  const n = f(e, "alwaysOpen"), r = f(e, "disabled"), a = f(e, "idsForOpenDefault"), l = f(e, "prevent"), o = f(e, "stop"), u = B(void 0), h = () => {
    u.value = a.value;
  }, A = ({ currentId: T, isOpen: m }) => {
    if (m) {
      const b = T.split("__")[0];
      u.value = Dt(u.value, (L) => !cc(L, b));
    } else
      u.value.push(T);
  }, E = ({ currentId: T, parentsIds: m, isOpen: b }) => {
    b ? u.value = m : u.value = [...m, T];
  }, p = ({ item: T, parentsIds: m, isOpen: b, $event: L }) => {
    if (r.value)
      return;
    const v = Se(m), I = T[et];
    n.value ? A({ item: T, currentId: I, isOpen: b }) : E({ parentsIds: v, currentId: I, isOpen: b }), t("toggle", { idsForOpen: u.value, currentId: I, parentsIds: v, isOpen: b, $event: L, item: T }), o.value && L && L.stopPropagation(), l.value && L && L.preventDefault();
  };
  return tt(a, (T) => {
    Qp(T, u.value) || (u.value = Se(T));
  }), {
    idsForOpen: u,
    initIdsForOpen: h,
    toggleLocal: p
  };
}
const goe = {
  name: "AAccordion",
  provide() {
    return {
      classBody: _(() => this.classBody),
      classButton: _(() => this.classButton),
      classHeader: _(() => this.classHeader),
      disabled: _(() => this.disabled),
      id: _(() => this.id),
      idsForOpen: _(() => this.idsForOpen),
      isCaret: _(() => this.isCaret),
      keyChildren: _(() => this.keyChildren),
      keyClassBody: _(() => this.keyClassBody),
      keyClassButton: _(() => this.keyClassButton),
      keyClassHeader: _(() => this.keyClassHeader),
      keyContent: _(() => this.keyContent),
      keyIsRender: _(() => this.keyIsRender),
      keyIsRenderBodyByFirstOpen: _(() => this.keyIsRenderBodyByFirstOpen),
      keyLabel: _(() => this.keyLabel),
      readonly: _(() => this.readonly),
      withGap: _(() => this.withGap),
      toggle: this.toggleLocal
    };
  },
  props: {
    alwaysOpen: {
      type: Boolean,
      required: !1
    },
    classBody: {
      type: [String, Object],
      required: !1,
      default: ""
    },
    classButton: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classHeader: {
      type: [String, Object],
      required: !1,
      default: ""
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: ot("accordion_")
    },
    idsForOpenDefault: {
      type: Array,
      required: !1,
      default: () => []
    },
    isCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    data: {
      type: Array,
      required: !0
    },
    keyClassBody: {
      type: String,
      required: !1,
      default: "classBody"
    },
    keyClassButton: {
      type: String,
      required: !1,
      default: "classButton"
    },
    keyClassHeader: {
      type: String,
      required: !1,
      default: "classHeader"
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyIsRender: {
      type: String,
      required: !1,
      default: "isRender"
    },
    keyIsRenderBodyByFirstOpen: {
      type: String,
      required: !1,
      default: "isRenderBodyByFirstOpen"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyChildren: {
      type: String,
      required: !1,
      default: "children"
    },
    prevent: {
      type: Boolean,
      required: !1
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    stop: {
      type: Boolean,
      required: !1
    },
    withGap: {
      type: Boolean,
      required: !1
    },
    indexesForOpen: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      idsForOpen: n,
      initIdsForOpen: r,
      toggleLocal: a
    } = FP(e, t), {
      dataWithIds: l
    } = PP(e), {
      initIdsFromIndexesForOpen: o
    } = xP(e, {
      idsForOpen: n,
      dataWithIds: l
    });
    return r(), o(), {
      dataWithIds: l,
      idsForOpen: n,
      toggleLocal: a
    };
  },
  render() {
    return c("div", {
      class: ["a_accordion"]
    }, [
      this.dataWithIds.map((e, t) => c(wP, {
        key: e[et],
        item: e,
        itemIndex: t,
        isParentOpen: !0,
        keyId: this.keyId
      }, this.$slots))
    ]);
  }
};
function MP(e) {
  const t = f(e, "ariLabel");
  return {
    attributesAriaLabelHidden: _(() => t.value ? {
      ariaLabel: t.value
    } : {
      ariaHidden: !0
    })
  };
}
function qP(e, {
  isIconSvg: t = _(() => !1)
}) {
  const n = f(e, "icon");
  return {
    iconClass: _(() => {
      if (!t.value)
        return `a_icon_${n.value || "_NoImage"}`;
    })
  };
}
var So = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function $P(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var mo = { exports: {} }, oE;
function kP() {
  if (oE) return mo.exports;
  oE = 1;
  function e() {
  }
  return e.prototype = {
    on: function(t, n, r) {
      var a = this.e || (this.e = {});
      return (a[t] || (a[t] = [])).push({
        fn: n,
        ctx: r
      }), this;
    },
    once: function(t, n, r) {
      var a = this;
      function l() {
        a.off(t, l), n.apply(r, arguments);
      }
      return l._ = n, this.on(t, l, r);
    },
    emit: function(t) {
      var n = [].slice.call(arguments, 1), r = ((this.e || (this.e = {}))[t] || []).slice(), a = 0, l = r.length;
      for (a; a < l; a++)
        r[a].fn.apply(r[a].ctx, n);
      return this;
    },
    off: function(t, n) {
      var r = this.e || (this.e = {}), a = r[t], l = [];
      if (a && n)
        for (var o = 0, u = a.length; o < u; o++)
          a[o].fn !== n && a[o].fn._ !== n && l.push(a[o]);
      return l.length ? r[t] = l : delete r[t], this;
    }
  }, mo.exports = e, mo.exports.TinyEmitter = e, mo.exports;
}
var J_, uE;
function HP() {
  if (uE) return J_;
  uE = 1;
  var e = kP();
  return J_ = new e(), J_;
}
var UP = HP();
const bo = /* @__PURE__ */ $P(UP), Rt = {
  $on: (...e) => bo.on(...e),
  $once: (...e) => bo.once(...e),
  $off: (...e) => bo.off(...e),
  $emit: (...e) => bo.emit(...e)
}, qo = B(void 0);
function yo(e) {
  qo.value = e, Rt.$emit("updateViewOnResize", e), e ? document.body.classList.add("a_mobile") : document.body.classList.remove("a_mobile");
}
function fn() {
  return {
    isMobileWidth: qo,
    setIsMobileWidth: yo
  };
}
const WP = `<svg
  xmlns="http://www.w3.org/2000/svg"
  version="1.1"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <path
    d="M 14.204045,11.607942 C 15.968997,11.607942 17.4,13.038977 17.4,14.80397 17.4,16.568964 15.968997,18 14.204045,18 12.439093,18 11.00809,16.568964 11.00809,14.80397 c 0,-1.764993 1.431003,-3.196028 3.195955,-3.196028 z M 1.7468526,0 H 15.702424 c 0.317838,0 0.601987,0.13036037 0.809974,0.33688648 0.207986,0.20799097 0.336879,0.49654172 0.336879,0.80999272 V 11.401416 C 16.488962,11.121653 16.081779,10.89755 15.640907,10.745219 V 1.4251769 c 0,-0.062983 -0.02344,-0.1157132 -0.06738,-0.1537962 -0.03808,-0.038083 -0.09667,-0.067377 -0.153792,-0.067377 H 2.0192852 c -0.062982,0 -0.1157107,0.023436 -0.1537926,0.067377 -0.038082,0.038083 -0.067375,0.095207 -0.067375,0.1537962 V 11.681178 h 0.00439 L 6.4851264,7.1976561 c 0.1874805,-0.1728376 0.4818832,-0.153796 0.6503226,0.033689 0.00439,0.00439 0.00439,0.010252 0.010252,0.010252 l 3.937088,4.6578239 c -0.692799,0.758727 -1.116094,1.769387 -1.116094,2.878184 0,0.481894 0.08056,0.944747 0.227027,1.376841 H 1.7468526 c -0.3178379,0 -0.6019878,-0.130361 -0.8099738,-0.336887 C 0.7288927,15.611034 0.6,15.321018 0.6,15.007567 V 1.1468792 C 0.6,0.82903398 0.7303573,0.54487745 0.9368788,0.33688648 1.1434002,0.12889569 1.4334089,0 1.7468526,0 Z m 9.6523104,11.585971 0.543401,-3.3381075 c 0.04394,-0.2504678 0.279755,-0.42477 0.530217,-0.3808284 0.09667,0.014647 0.183086,0.062984 0.250463,0.1259664 l 2.50462,2.6321095 c -0.319302,-0.07616 -0.650322,-0.115713 -0.993061,-0.115713 -1.088264,-0.0015 -2.081324,0.405729 -2.83564,1.076573 z m 1.171752,-8.9582554 c 0.458448,0 0.87735,0.1874847 1.176147,0.4862886 0.303191,0.3031979 0.486278,0.717715 0.486278,1.1761738 0,0.4584587 -0.187481,0.8773698 -0.486278,1.1761737 -0.303191,0.3031979 -0.717699,0.4862888 -1.176147,0.4862888 -0.458447,0 -0.87735,-0.1874849 -1.176146,-0.4862888 -0.303191,-0.3031979 -0.486277,-0.717715 -0.486277,-1.1761737 0,-0.4584588 0.18748,-0.8773701 0.486277,-1.1761738 0.303191,-0.3031981 0.719163,-0.4862886 1.176146,-0.4862886 z m 0.562442,10.2325654 2.923522,3.163805 c 0.231421,-0.350069 0.366173,-0.76898 0.366173,-1.220116 0,-1.224509 -0.99306,-2.217592 -2.217542,-2.217592 -0.389608,-0.0015 -0.754315,0.09814 -1.072153,0.273903 z m 2.141377,3.885914 -2.923522,-3.163805 c -0.231421,0.350069 -0.366172,0.768981 -0.366172,1.220116 0,1.224509 0.99306,2.217593 2.217541,2.217593 0.389607,0.0015 0.754316,-0.09814 1.072153,-0.273904 z"
  />
</svg>`, VP = `<svg
   xmlns="http://www.w3.org/2000/svg"
   viewBox="0 0 18 18"
   height="18"
   width="18"
>
  <g
   transform="matrix(0.26617655,0,0,0.26617655,-33.607656,-85.223817)"
  >
    <path
      style="fill:#35495e;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 139.13004,365.87267 -4.53409,7.81862 h 51.05837 l -4.53409,-7.81862 z"
    />
    <path
      style="fill:#41b883;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 134.59595,373.69129 -4.51704,7.7892 h 60.09245 l -4.51704,-7.7892 z"
    />
    <path
      style="fill:#41b883;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 160.07266,329.49377 -16.90595,29.1543 -16.90594,29.15378 h 7.67291 l 13.03745,-22.48287 13.03745,-22.48236 13.03745,22.48236 13.03744,22.48287 h 7.80159 l -16.90594,-29.15378 z"
    />
    <path
      style="fill:#35495e;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 160.00903,342.83634 -13.03745,22.48287 -13.03796,22.48286 h 8.03103 l 9.02632,-15.56546 9.02581,-15.56494 9.02632,15.56494 9.02581,15.56546 h 8.01501 l -13.03744,-22.48286 z"
    />
  </g>
</svg>`, $o = B({
  icons: {
    _NoImage: WP,
    Aloha: VP
  }
}), yoe = {
  install: (e, {
    icons: t = {}
  } = {}) => {
    $o.value.icons = {
      ...$o.value.icons,
      ...t
    };
  }
};
function GP(e) {
  const t = f(e, "icon"), {
    isMobileWidth: n
  } = fn(), r = _(() => nt(t.value) ? n.value ? t.value.mobile : t.value.desktop : t.value), a = _(() => !ae(r.value) && r.value !== ""), l = _(() => {
    const u = r.value;
    return !!(lt(u) && u.trim().startsWith("<svg"));
  }), o = _(() => {
    if (l.value)
      return r.value;
    const u = $o.value.icons[r.value];
    return u || $o.value.icons._NoImage;
  });
  return {
    hasIcon: a,
    iconSvg: o,
    isIconSvg: l
  };
}
const st = {
  name: "AIcon",
  props: {
    ariLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    icon: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: "i"
    },
    isSaveHtml: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  setup(e) {
    const {
      attributesAriaLabelHidden: t
    } = MP(e), {
      hasIcon: n,
      iconSvg: r,
      isIconSvg: a
    } = GP(e), {
      iconClass: l
    } = qP(e, {
      isIconSvg: a
    });
    return {
      attributesAriaLabelHidden: t,
      hasIcon: n,
      iconClass: l,
      iconSvg: r
    };
  },
  render() {
    if (this.hasIcon)
      return this.isSaveHtml ? c(this.iconTag, {
        class: ["a_icon", this.iconClass],
        innerHTML: this.iconSvg,
        ...this.attributesAriaLabelHidden
      }) : Ft(c(this.iconTag, {
        class: ["a_icon", this.iconClass],
        ...this.attributesAriaLabelHidden
      }), [
        [cn, this.iconSvg]
      ]);
  }
}, _u = B("de");
let fT = {};
const hT = B(/* @__PURE__ */ new Date()), hc = B(/* @__PURE__ */ new Date());
let AT = {};
const es = B(!0), jP = _(() => [
  _u.value,
  hT.value,
  es.value
]);
tt(jP, () => {
  KP();
}, {
  immediate: !0
});
function ds() {
  return {
    isTranslate: es,
    language: _u,
    setI18n: ET,
    setLanguage: pT,
    toggleTranslate: zP,
    translationChanges: hc,
    updateTranslation: TT
  };
}
function ET(e = {}) {
  fT = e;
}
function pT(e = "") {
  _u.value = e;
}
function zP(e) {
  Pe(e) ? es.value = !es.value : es.value = !!e;
}
function KP() {
  AT = fT[_u.value], hc.value = /* @__PURE__ */ new Date();
}
function TT() {
  hT.value = /* @__PURE__ */ new Date();
}
const Id = B({
  replaceText: void 0
}), YP = (e = {}) => {
  qe(e == null ? void 0 : e.replaceText) && (Id.value.replaceText = e == null ? void 0 : e.replaceText);
}, Roe = {
  install: (e, t, n, r = {}) => {
    ET(t), pT(n), TT(), YP(r);
  }
};
function Oa() {
  return {
    getTranslatedText: xt,
    getTranslationAttributes: ZP,
    isPlaceholderTranslate: Ii,
    replaceText: ST,
    spliceString: mT
  };
}
function Ii(e = "") {
  return !(!lt(e) || e[0] !== "_" || e[e.length - 1] !== "_");
}
function xt({ placeholder: e, translationObj: t = AT, extra: n, alwaysTranslate: r = !1 }) {
  if (!t || !hc.value)
    return e;
  let a;
  return !r && !es.value ? a = e : a = ae(t[e]) ? e : t[e], n ? ST({
    text: a,
    object: n
  }) : a;
}
function ST({ text: e = "", object: t }) {
  var a, l;
  if (qe((a = Id.value) == null ? void 0 : a.replaceText))
    return (l = Id.value) == null ? void 0 : l.replaceText({ text: e, object: t });
  if (!nt(t))
    return e;
  let n = e, r = 0;
  for (; ; ) {
    const o = n.indexOf("{{", r), u = n.indexOf("}}", r);
    if (o === -1 || u === -1)
      break;
    const h = n.slice(o + 2, u).trim(), A = de(t, h);
    n = mT({
      text: n,
      replaceText: A,
      firstIndex: o,
      lastindex: u + 2
    }), r = o + `${A}`.length;
  }
  return n;
}
function mT({
  text: e = "",
  replaceText: t = "",
  firstIndex: n,
  lastindex: r
}) {
  return `${e.slice(0, n)}${t}${e.slice(r, e.length)}`;
}
function ZP({ attr: e = "", value: t = "", translation: n = "", isTranslate: r = !0 }) {
  const a = {};
  return ae(n) || (a[e] = n), r && (a[`data-translate-${e}`] = t), a;
}
function Ac(e) {
  const t = f(e, "alwaysTranslate"), n = f(e, "ariaLabel"), r = f(e, "extra"), {
    translationChanges: a
  } = ds(), {
    isPlaceholderTranslate: l,
    getTranslatedText: o,
    getTranslationAttributes: u
  } = Oa(), {
    isMobileWidth: h
  } = fn(), A = _(() => nt(n.value) ? h.value ? n.value.mobile : n.value.desktop : n.value), E = _(() => !Pe(A.value)), p = _(() => !(!E.value || !l(A.value))), T = _(() => {
    if (a.value)
      return p.value ? o({
        placeholder: A.value,
        extra: r.value,
        alwaysTranslate: t.value
      }) : A.value;
  });
  return {
    ariaLabelAttributes: _(() => E.value ? u({
      attr: "aria-label",
      translation: T.value,
      value: A.value,
      isTranslate: p.value
    }) : {}),
    hasAriaLabel: E
  };
}
function XP(e) {
  const t = f(e, "size");
  return {
    classSize: _(() => {
      if (t.value)
        return `a_spinner_size_${t.value}`;
    })
  };
}
const Pn = B({
  propsDefault: {
    ariaLabel: "_A_SPINNER_LOADING_",
    class: "a_spinner",
    extra: void 0,
    safeHtml: "",
    size: void 0,
    tag: "span"
  }
}), Ooe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Pn.value.propsDefault = {
      ...Pn.value.propsDefault,
      ...t
    };
  }
}, nl = {
  name: "ASpinner",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: () => Pn.value.propsDefault.ariaLabel
    },
    extra: {
      type: Object,
      required: !1,
      default: () => Pn.value.propsDefault.extra
    },
    safeHtml: {
      type: String,
      required: !1,
      default: () => Pn.value.propsDefault.safeHtml
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => Pn.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    tag: {
      type: String,
      required: !1,
      default: () => Pn.value.propsDefault.tag
    }
  },
  setup(e) {
    const {
      ariaLabelAttributes: t
    } = Ac(e), {
      classSize: n
    } = XP(e);
    return {
      ariaLabelAttributes: t,
      classSize: n
    };
  },
  render() {
    return c(this.tag, {
      class: [
        Pn.value.propsDefault.class,
        this.classSize
      ],
      role: "status",
      innerHTML: this.safeHtml,
      ...this.ariaLabelAttributes
    });
  }
};
function JP({
  htmlLocalOptions: e = _(() => {
  }),
  textLocalOptions: t = _(() => ({})),
  titleLocalOptions: n = _(() => ({}))
}) {
  const r = _(() => {
    var l, o, u, h;
    return ((l = t.value) == null ? void 0 : l.dataTranslateText) || ((o = e.value) == null ? void 0 : o.dataTranslateSafeHtml) || ((u = e.value) == null ? void 0 : u.dataTranslateHtml) || ((h = n.value) == null ? void 0 : h.title);
  });
  return {
    attributesLocal: _(() => {
      var o, u, h;
      const l = {};
      return (o = t.value) != null && o.dataTranslateText ? l["data-translate-text"] = t.value.dataTranslateText : (u = e.value) != null && u.dataTranslateSafeHtml ? l["data-translate-safe-html"] = e.value.dataTranslateSafeHtml : (h = e.value) != null && h.dataTranslateHtml && (l["data-translate-html"] = e.value.dataTranslateHtml), n.value.title && (l.title = n.value.title, n.value.dataTranslateTitle && (l["data-translate-title"] = n.value.dataTranslateTitle)), l;
    }),
    hasAttributesLocal: r
  };
}
function QP(e, {
  hasTextAfter: t = _(() => !1),
  hasTextBefore: n = _(() => !1),
  textAfterForCurrentDevice: r = _(() => ""),
  textBeforeForCurrentDevice: a = _(() => "")
}) {
  const l = f(e, "alwaysTranslate"), o = f(e, "extra"), u = f(e, "html"), h = f(e, "safeHtml"), {
    isPlaceholderTranslate: A,
    getTranslatedText: E
  } = Oa(), {
    isMobileWidth: p
  } = fn(), {
    translationChanges: T
  } = ds(), m = _(() => nt(h.value) ? p.value ? h.value.mobile : h.value.desktop : h.value), b = _(() => nt(u.value) ? p.value ? u.value.mobile : u.value.desktop : u.value), L = _(() => Te(h.value)), v = _(() => Te(u.value)), I = _(() => L.value ? h.value.length > 0 : !Pe(m.value)), R = _(() => v.value ? u.value.length > 0 : !Pe(b.value)), y = _(() => n.value ? `<span>${a.value}</span>` : ""), C = _(() => t.value ? `<span>${r.value}</span>` : ""), w = _(() => {
    const P = {
      safeHtml: void 0,
      html: void 0,
      dataTranslateHtml: void 0,
      dataTranslateSafeHtml: void 0
    };
    if (!T.value)
      return P;
    if (I.value) {
      const q = L.value ? h.value : [m.value];
      let N = "", U = "";
      Y(q, (V) => {
        !V && V !== 0 || (N && (N += " ", U += " "), A(V) ? (N += E({
          placeholder: V,
          extra: o.value,
          alwaysTranslate: l.value
        }), U += V) : N += V);
      }), P.safeHtml = N || void 0, P.dataTranslateSafeHtml = U || void 0;
    } else if (R.value) {
      const q = v.value ? u.value : [b.value];
      let N = "", U = "";
      Y(q, (V) => {
        !V && V !== 0 || (N && (N += " ", U += " "), A(V) ? (N += Mo(E({
          placeholder: V,
          extra: o.value,
          alwaysTranslate: l.value
        })), U += V) : N += Mo(V));
      }), P.html = ae(N) ? void 0 : N, P.dataTranslateHtml = ae(U) ? void 0 : U;
    }
    return P;
  }), F = _(() => `${y.value}${w.value.safeHtml || w.value.html}${C.value}`);
  return {
    hasHtml: R,
    hasSafeHtml: I,
    htmlLocalOptions: w,
    htmlLocalWithBeforeAndAfter: F
  };
}
function hl(e) {
  const t = f(e, "alwaysTranslate"), n = f(e, "extra"), r = f(e, "placeholder"), {
    translationChanges: a
  } = ds(), {
    isPlaceholderTranslate: l,
    getTranslatedText: o,
    getTranslationAttributes: u
  } = Oa(), {
    isMobileWidth: h
  } = fn(), A = _(() => nt(r.value) ? h.value ? r.value.mobile : r.value.desktop : r.value), E = _(() => !Pe(A.value)), p = _(() => !(!E.value || !l(A.value))), T = _(() => {
    if (a.value)
      return p.value ? o({
        placeholder: A.value,
        extra: n.value,
        alwaysTranslate: t.value
      }) : A.value;
  }), m = _(() => {
    const b = {};
    return E.value ? u({
      attr: "placeholder",
      translation: T.value,
      value: A.value,
      isTranslate: p.value
    }) : b;
  });
  return {
    hasPlaceholder: E,
    placeholderAttributes: m
  };
}
function e0({
  hasAriaLabel: e,
  hasAttributesLocal: t,
  hasPlaceholder: n,
  hasTextAfter: r,
  hasTextBefore: a
}) {
  return {
    hasRestAttributes: _(() => e.value || t.value || n.value || r.value || a.value)
  };
}
function t0(e) {
  const t = f(e, "textAfter"), n = f(e, "textBefore"), {
    isMobileWidth: r
  } = fn(), a = _(() => nt(t.value) ? r.value ? t.value.mobile : t.value.desktop : t.value), l = _(() => nt(n.value) ? r.value ? n.value.mobile : n.value.desktop : n.value), o = _(() => !ae(a.value) && a.value !== ""), u = _(() => !ae(l.value) && l.value !== "");
  return {
    hasTextAfter: o,
    hasTextBefore: u,
    textAfterForCurrentDevice: a,
    textBeforeForCurrentDevice: l
  };
}
function n0(e) {
  const t = f(e, "alwaysTranslate"), n = f(e, "extra"), r = f(e, "text"), {
    isPlaceholderTranslate: a,
    getTranslatedText: l
  } = Oa(), {
    isMobileWidth: o
  } = fn(), {
    translationChanges: u
  } = ds(), h = _(() => nt(r.value) ? o.value ? r.value.mobile : r.value.desktop : r.value), A = _(() => Te(r.value)), E = _(() => A.value ? r.value.length > 0 : !Pe(h.value)), p = _(() => {
    const T = {
      text: void 0,
      dataTranslateText: void 0
    };
    if (!u.value)
      return T;
    if (E.value) {
      const m = A.value ? r.value : [h.value];
      let b = "", L = "";
      Y(m, (v) => {
        !v && v !== 0 || (b && (b += " ", L += " "), a(v) ? (b += l({
          placeholder: v,
          extra: n.value,
          alwaysTranslate: t.value
        }), L += v) : b += v);
      }), T.text = b || void 0, T.dataTranslateText = L || void 0;
    }
    return T;
  });
  return {
    hasText: E,
    textLocalOptions: p
  };
}
function r0(e) {
  const t = f(e, "alwaysTranslate"), n = f(e, "extra"), r = f(e, "title"), {
    isPlaceholderTranslate: a,
    getTranslatedText: l
  } = Oa(), {
    isMobileWidth: o
  } = fn(), {
    translationChanges: u
  } = ds(), h = _(() => nt(r.value) ? o.value ? r.value.mobile : r.value.desktop : r.value), A = _(() => Te(r.value)), E = _(() => A.value ? r.value.length > 0 : !(ae(h.value) || h.value === ""));
  return {
    titleLocalOptions: _(() => {
      if (!u.value)
        return;
      const T = {
        title: void 0,
        dataTranslateTitle: void 0
      };
      if (!E.value)
        return T;
      const m = A.value ? r.value : [h.value];
      let b = "", L = "";
      return Y(m, (v) => {
        !v && v !== 0 || (b && (b += " ", L += " "), a(v) ? (b += l({
          placeholder: v,
          extra: n.value,
          alwaysTranslate: t.value
        }), L += v) : b += v);
      }), T.title = b || void 0, T.dataTranslateTitle = L || void 0, T;
    })
  };
}
const pe = {
  name: "ATranslation",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: ""
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: ""
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      hasTextAfter: t,
      hasTextBefore: n,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: a
    } = t0(e), {
      hasText: l,
      textLocalOptions: o
    } = n0(e), {
      hasHtml: u,
      hasSafeHtml: h,
      htmlLocalOptions: A,
      htmlLocalWithBeforeAndAfter: E
    } = QP(e, {
      hasTextAfter: t,
      hasTextBefore: n,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: a
    }), {
      titleLocalOptions: p
    } = r0(e), {
      hasPlaceholder: T,
      placeholderAttributes: m
    } = hl(e), {
      ariaLabelAttributes: b,
      hasAriaLabel: L
    } = Ac(e), {
      attributesLocal: v,
      hasAttributesLocal: I
    } = JP({
      htmlLocalOptions: A,
      textLocalOptions: o,
      titleLocalOptions: p
    }), {
      hasRestAttributes: R
    } = e0({
      hasAriaLabel: L,
      hasAttributesLocal: I,
      hasPlaceholder: T,
      hasTextAfter: t,
      hasTextBefore: n
    });
    return {
      ariaLabelAttributes: b,
      attributesLocal: v,
      hasText: l,
      hasTextAfter: t,
      hasTextBefore: n,
      hasHtml: u,
      hasRestAttributes: R,
      hasSafeHtml: h,
      htmlLocalWithBeforeAndAfter: E,
      placeholderAttributes: m,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: a,
      textLocalOptions: o
    };
  },
  render() {
    return this.hasText ? c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes
    }, [
      this.textBeforeForCurrentDevice,
      this.textLocalOptions.text,
      this.$slots.default && this.$slots.default(),
      this.textAfterForCurrentDevice
    ]) : this.hasSafeHtml || this.hasHtml ? c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes,
      innerHTML: this.htmlLocalWithBeforeAndAfter
    }) : (this.hasRestAttributes || this.$slots.default) && c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes
    }, [
      this.textBeforeForCurrentDevice,
      this.$slots.default && this.$slots.default(),
      this.textAfterForCurrentDevice
    ]);
  }
}, i0 = {
  button: !0,
  submit: !0,
  reset: !0
};
function a0(e, {
  isRouterLink: t = _(() => !1),
  tagLocal: n = _(() => "")
}) {
  const r = f(e, "disabled"), a = f(e, "href"), l = f(e, "target"), o = f(e, "to"), u = f(e, "type"), h = _(() => {
    if (n.value === "button" && i0[u.value])
      return u.value;
  });
  return {
    toHrefAttributes: _(() => t.value ? {
      target: l.value,
      to: o.value
    } : r.value ? {} : {
      href: a.value,
      target: l.value
    }),
    typeAttribut: h
  };
}
function s0(e, { emit: t }) {
  const n = f(e, "prevent"), r = f(e, "stop"), a = f(e, "disabled"), l = f(e, "ariaDisabled");
  return {
    onClick: (u) => {
      n.value && u.preventDefault(), r.value && u.stopPropagation(), !(a.value || l.value) && t("click", {
        props: e,
        $event: u
      });
    }
  };
}
const rl = {
  /*
   * called before bound element's attributes
   * or event listeners are applied
   */
  created(e, t) {
    var n;
    qe((n = t.value) == null ? void 0 : n.created) && t.value.created(e, t);
  },
  // called right before the element is inserted into the DOM.
  beforeMount(e, t) {
    var n;
    qe((n = t.value) == null ? void 0 : n.beforeMount) && t.value.beforeMount(e, t);
  },
  /*
   * called when the bound element's parent component
   * and all its children are mounted.
   */
  mounted(e, t) {
    var n;
    qe((n = t.value) == null ? void 0 : n.mounted) && t.value.mounted(e, t);
  },
  // called before the parent component is unmounted
  beforeUnmount(e, t) {
    var n;
    qe((n = t.value) == null ? void 0 : n.beforeUnmount) && t.value.beforeUnmount(e, t);
  },
  // called when the parent component is unmounted
  unmounted(e, t) {
    var n;
    qe((n = t.value) == null ? void 0 : n.unmounted) && t.value.unmounted(e, t);
  }
};
function l0(e, {
  isTitleVisible: t = B(!1)
}) {
  const n = f(e, "id"), r = f(e, "minWidth"), a = f(e, "width"), l = f(e, "maxWidth"), o = f(e, "withoutAriaDescribedby"), u = _(() => {
    if (!o.value && t.value)
      return `${n.value}_title`;
  }), h = _(() => {
    const A = {};
    return ae(r.value) || (A["min-width"] = `${r.value}px`), ae(a.value) || (A.width = `${a.value}px`), ae(l.value) || (A["max-width"] = `${l.value}px`), A;
  });
  return {
    ariaDescribedby: u,
    tooltipStyles: h
  };
}
const o0 = ["top", "right", "bottom", "left"], _E = ["start", "end"], dE = /* @__PURE__ */ o0.reduce((e, t) => e.concat(t, t + "-" + _E[0], t + "-" + _E[1]), []), ss = Math.min, Ta = Math.max, ko = Math.round, Lo = Math.floor, gi = (e) => ({
  x: e,
  y: e
}), u0 = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, _0 = {
  start: "end",
  end: "start"
};
function gd(e, t, n) {
  return Ta(e, ss(t, n));
}
function yi(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function Mr(e) {
  return e.split("-")[0];
}
function xr(e) {
  return e.split("-")[1];
}
function Ec(e) {
  return e === "x" ? "y" : "x";
}
function pc(e) {
  return e === "y" ? "height" : "width";
}
function Al(e) {
  return ["top", "bottom"].includes(Mr(e)) ? "y" : "x";
}
function Tc(e) {
  return Ec(Al(e));
}
function bT(e, t, n) {
  n === void 0 && (n = !1);
  const r = xr(e), a = Tc(e), l = pc(a);
  let o = a === "x" ? r === (n ? "end" : "start") ? "right" : "left" : r === "start" ? "bottom" : "top";
  return t.reference[l] > t.floating[l] && (o = Uo(o)), [o, Uo(o)];
}
function d0(e) {
  const t = Uo(e);
  return [Ho(e), t, Ho(t)];
}
function Ho(e) {
  return e.replace(/start|end/g, (t) => _0[t]);
}
function c0(e, t, n) {
  const r = ["left", "right"], a = ["right", "left"], l = ["top", "bottom"], o = ["bottom", "top"];
  switch (e) {
    case "top":
    case "bottom":
      return n ? t ? a : r : t ? r : a;
    case "left":
    case "right":
      return t ? l : o;
    default:
      return [];
  }
}
function f0(e, t, n, r) {
  const a = xr(e);
  let l = c0(Mr(e), n === "start", r);
  return a && (l = l.map((o) => o + "-" + a), t && (l = l.concat(l.map(Ho)))), l;
}
function Uo(e) {
  return e.replace(/left|right|bottom|top/g, (t) => u0[t]);
}
function h0(e) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...e
  };
}
function LT(e) {
  return typeof e != "number" ? h0(e) : {
    top: e,
    right: e,
    bottom: e,
    left: e
  };
}
function Wo(e) {
  const {
    x: t,
    y: n,
    width: r,
    height: a
  } = e;
  return {
    width: r,
    height: a,
    top: n,
    left: t,
    right: t + r,
    bottom: n + a,
    x: t,
    y: n
  };
}
function cE(e, t, n) {
  let {
    reference: r,
    floating: a
  } = e;
  const l = Al(t), o = Tc(t), u = pc(o), h = Mr(t), A = l === "y", E = r.x + r.width / 2 - a.width / 2, p = r.y + r.height / 2 - a.height / 2, T = r[u] / 2 - a[u] / 2;
  let m;
  switch (h) {
    case "top":
      m = {
        x: E,
        y: r.y - a.height
      };
      break;
    case "bottom":
      m = {
        x: E,
        y: r.y + r.height
      };
      break;
    case "right":
      m = {
        x: r.x + r.width,
        y: p
      };
      break;
    case "left":
      m = {
        x: r.x - a.width,
        y: p
      };
      break;
    default:
      m = {
        x: r.x,
        y: r.y
      };
  }
  switch (xr(t)) {
    case "start":
      m[o] -= T * (n && A ? -1 : 1);
      break;
    case "end":
      m[o] += T * (n && A ? -1 : 1);
      break;
  }
  return m;
}
const A0 = async (e, t, n) => {
  const {
    placement: r = "bottom",
    strategy: a = "absolute",
    middleware: l = [],
    platform: o
  } = n, u = l.filter(Boolean), h = await (o.isRTL == null ? void 0 : o.isRTL(t));
  let A = await o.getElementRects({
    reference: e,
    floating: t,
    strategy: a
  }), {
    x: E,
    y: p
  } = cE(A, r, h), T = r, m = {}, b = 0;
  for (let L = 0; L < u.length; L++) {
    const {
      name: v,
      fn: I
    } = u[L], {
      x: R,
      y,
      data: C,
      reset: w
    } = await I({
      x: E,
      y: p,
      initialPlacement: r,
      placement: T,
      strategy: a,
      middlewareData: m,
      rects: A,
      platform: o,
      elements: {
        reference: e,
        floating: t
      }
    });
    E = R ?? E, p = y ?? p, m = {
      ...m,
      [v]: {
        ...m[v],
        ...C
      }
    }, w && b <= 50 && (b++, typeof w == "object" && (w.placement && (T = w.placement), w.rects && (A = w.rects === !0 ? await o.getElementRects({
      reference: e,
      floating: t,
      strategy: a
    }) : w.rects), {
      x: E,
      y: p
    } = cE(A, T, h)), L = -1);
  }
  return {
    x: E,
    y: p,
    placement: T,
    strategy: a,
    middlewareData: m
  };
};
async function Sc(e, t) {
  var n;
  t === void 0 && (t = {});
  const {
    x: r,
    y: a,
    platform: l,
    rects: o,
    elements: u,
    strategy: h
  } = e, {
    boundary: A = "clippingAncestors",
    rootBoundary: E = "viewport",
    elementContext: p = "floating",
    altBoundary: T = !1,
    padding: m = 0
  } = yi(t, e), b = LT(m), v = u[T ? p === "floating" ? "reference" : "floating" : p], I = Wo(await l.getClippingRect({
    element: (n = await (l.isElement == null ? void 0 : l.isElement(v))) == null || n ? v : v.contextElement || await (l.getDocumentElement == null ? void 0 : l.getDocumentElement(u.floating)),
    boundary: A,
    rootBoundary: E,
    strategy: h
  })), R = p === "floating" ? {
    ...o.floating,
    x: r,
    y: a
  } : o.reference, y = await (l.getOffsetParent == null ? void 0 : l.getOffsetParent(u.floating)), C = await (l.isElement == null ? void 0 : l.isElement(y)) ? await (l.getScale == null ? void 0 : l.getScale(y)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, w = Wo(l.convertOffsetParentRelativeRectToViewportRelativeRect ? await l.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements: u,
    rect: R,
    offsetParent: y,
    strategy: h
  }) : R);
  return {
    top: (I.top - w.top + b.top) / C.y,
    bottom: (w.bottom - I.bottom + b.bottom) / C.y,
    left: (I.left - w.left + b.left) / C.x,
    right: (w.right - I.right + b.right) / C.x
  };
}
const E0 = (e) => ({
  name: "arrow",
  options: e,
  async fn(t) {
    const {
      x: n,
      y: r,
      placement: a,
      rects: l,
      platform: o,
      elements: u,
      middlewareData: h
    } = t, {
      element: A,
      padding: E = 0
    } = yi(e, t) || {};
    if (A == null)
      return {};
    const p = LT(E), T = {
      x: n,
      y: r
    }, m = Tc(a), b = pc(m), L = await o.getDimensions(A), v = m === "y", I = v ? "top" : "left", R = v ? "bottom" : "right", y = v ? "clientHeight" : "clientWidth", C = l.reference[b] + l.reference[m] - T[m] - l.floating[b], w = T[m] - l.reference[m], F = await (o.getOffsetParent == null ? void 0 : o.getOffsetParent(A));
    let P = F ? F[y] : 0;
    (!P || !await (o.isElement == null ? void 0 : o.isElement(F))) && (P = u.floating[y] || l.floating[b]);
    const q = C / 2 - w / 2, N = P / 2 - L[b] / 2 - 1, U = ss(p[I], N), V = ss(p[R], N), j = U, ne = P - L[b] - V, Z = P / 2 - L[b] / 2 + q, le = gd(j, Z, ne), oe = !h.arrow && xr(a) != null && Z !== le && l.reference[b] / 2 - (Z < j ? U : V) - L[b] / 2 < 0, fe = oe ? Z < j ? Z - j : Z - ne : 0;
    return {
      [m]: T[m] + fe,
      data: {
        [m]: le,
        centerOffset: Z - le - fe,
        ...oe && {
          alignmentOffset: fe
        }
      },
      reset: oe
    };
  }
});
function p0(e, t, n) {
  return (e ? [...n.filter((a) => xr(a) === e), ...n.filter((a) => xr(a) !== e)] : n.filter((a) => Mr(a) === a)).filter((a) => e ? xr(a) === e || (t ? Ho(a) !== a : !1) : !0);
}
const T0 = function(e) {
  return e === void 0 && (e = {}), {
    name: "autoPlacement",
    options: e,
    async fn(t) {
      var n, r, a;
      const {
        rects: l,
        middlewareData: o,
        placement: u,
        platform: h,
        elements: A
      } = t, {
        crossAxis: E = !1,
        alignment: p,
        allowedPlacements: T = dE,
        autoAlignment: m = !0,
        ...b
      } = yi(e, t), L = p !== void 0 || T === dE ? p0(p || null, m, T) : T, v = await Sc(t, b), I = ((n = o.autoPlacement) == null ? void 0 : n.index) || 0, R = L[I];
      if (R == null)
        return {};
      const y = bT(R, l, await (h.isRTL == null ? void 0 : h.isRTL(A.floating)));
      if (u !== R)
        return {
          reset: {
            placement: L[0]
          }
        };
      const C = [v[Mr(R)], v[y[0]], v[y[1]]], w = [...((r = o.autoPlacement) == null ? void 0 : r.overflows) || [], {
        placement: R,
        overflows: C
      }], F = L[I + 1];
      if (F)
        return {
          data: {
            index: I + 1,
            overflows: w
          },
          reset: {
            placement: F
          }
        };
      const P = w.map((U) => {
        const V = xr(U.placement);
        return [U.placement, V && E ? (
          // Check along the mainAxis and main crossAxis side.
          U.overflows.slice(0, 2).reduce((j, ne) => j + ne, 0)
        ) : (
          // Check only the mainAxis.
          U.overflows[0]
        ), U.overflows];
      }).sort((U, V) => U[1] - V[1]), N = ((a = P.filter((U) => U[2].slice(
        0,
        // Aligned placements should not check their opposite crossAxis
        // side.
        xr(U[0]) ? 2 : 3
      ).every((V) => V <= 0))[0]) == null ? void 0 : a[0]) || P[0][0];
      return N !== u ? {
        data: {
          index: I + 1,
          overflows: w
        },
        reset: {
          placement: N
        }
      } : {};
    }
  };
}, S0 = function(e) {
  return e === void 0 && (e = {}), {
    name: "flip",
    options: e,
    async fn(t) {
      var n, r;
      const {
        placement: a,
        middlewareData: l,
        rects: o,
        initialPlacement: u,
        platform: h,
        elements: A
      } = t, {
        mainAxis: E = !0,
        crossAxis: p = !0,
        fallbackPlacements: T,
        fallbackStrategy: m = "bestFit",
        fallbackAxisSideDirection: b = "none",
        flipAlignment: L = !0,
        ...v
      } = yi(e, t);
      if ((n = l.arrow) != null && n.alignmentOffset)
        return {};
      const I = Mr(a), R = Mr(u) === u, y = await (h.isRTL == null ? void 0 : h.isRTL(A.floating)), C = T || (R || !L ? [Uo(u)] : d0(u));
      !T && b !== "none" && C.push(...f0(u, L, b, y));
      const w = [u, ...C], F = await Sc(t, v), P = [];
      let q = ((r = l.flip) == null ? void 0 : r.overflows) || [];
      if (E && P.push(F[I]), p) {
        const j = bT(a, o, y);
        P.push(F[j[0]], F[j[1]]);
      }
      if (q = [...q, {
        placement: a,
        overflows: P
      }], !P.every((j) => j <= 0)) {
        var N, U;
        const j = (((N = l.flip) == null ? void 0 : N.index) || 0) + 1, ne = w[j];
        if (ne)
          return {
            data: {
              index: j,
              overflows: q
            },
            reset: {
              placement: ne
            }
          };
        let Z = (U = q.filter((le) => le.overflows[0] <= 0).sort((le, oe) => le.overflows[1] - oe.overflows[1])[0]) == null ? void 0 : U.placement;
        if (!Z)
          switch (m) {
            case "bestFit": {
              var V;
              const le = (V = q.map((oe) => [oe.placement, oe.overflows.filter((fe) => fe > 0).reduce((fe, he) => fe + he, 0)]).sort((oe, fe) => oe[1] - fe[1])[0]) == null ? void 0 : V[0];
              le && (Z = le);
              break;
            }
            case "initialPlacement":
              Z = u;
              break;
          }
        if (a !== Z)
          return {
            reset: {
              placement: Z
            }
          };
      }
      return {};
    }
  };
};
async function m0(e, t) {
  const {
    placement: n,
    platform: r,
    elements: a
  } = e, l = await (r.isRTL == null ? void 0 : r.isRTL(a.floating)), o = Mr(n), u = xr(n), h = Al(n) === "y", A = ["left", "top"].includes(o) ? -1 : 1, E = l && h ? -1 : 1, p = yi(t, e);
  let {
    mainAxis: T,
    crossAxis: m,
    alignmentAxis: b
  } = typeof p == "number" ? {
    mainAxis: p,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...p
  };
  return u && typeof b == "number" && (m = u === "end" ? b * -1 : b), h ? {
    x: m * E,
    y: T * A
  } : {
    x: T * A,
    y: m * E
  };
}
const b0 = function(e) {
  return e === void 0 && (e = 0), {
    name: "offset",
    options: e,
    async fn(t) {
      var n, r;
      const {
        x: a,
        y: l,
        placement: o,
        middlewareData: u
      } = t, h = await m0(t, e);
      return o === ((n = u.offset) == null ? void 0 : n.placement) && (r = u.arrow) != null && r.alignmentOffset ? {} : {
        x: a + h.x,
        y: l + h.y,
        data: {
          ...h,
          placement: o
        }
      };
    }
  };
}, L0 = function(e) {
  return e === void 0 && (e = {}), {
    name: "shift",
    options: e,
    async fn(t) {
      const {
        x: n,
        y: r,
        placement: a
      } = t, {
        mainAxis: l = !0,
        crossAxis: o = !1,
        limiter: u = {
          fn: (v) => {
            let {
              x: I,
              y: R
            } = v;
            return {
              x: I,
              y: R
            };
          }
        },
        ...h
      } = yi(e, t), A = {
        x: n,
        y: r
      }, E = await Sc(t, h), p = Al(Mr(a)), T = Ec(p);
      let m = A[T], b = A[p];
      if (l) {
        const v = T === "y" ? "top" : "left", I = T === "y" ? "bottom" : "right", R = m + E[v], y = m - E[I];
        m = gd(R, m, y);
      }
      if (o) {
        const v = p === "y" ? "top" : "left", I = p === "y" ? "bottom" : "right", R = b + E[v], y = b - E[I];
        b = gd(R, b, y);
      }
      const L = u.fn({
        ...t,
        [T]: m,
        [p]: b
      });
      return {
        ...L,
        data: {
          x: L.x - n,
          y: L.y - r
        }
      };
    }
  };
}, v0 = function(e) {
  return e === void 0 && (e = {}), {
    options: e,
    fn(t) {
      const {
        x: n,
        y: r,
        placement: a,
        rects: l,
        middlewareData: o
      } = t, {
        offset: u = 0,
        mainAxis: h = !0,
        crossAxis: A = !0
      } = yi(e, t), E = {
        x: n,
        y: r
      }, p = Al(a), T = Ec(p);
      let m = E[T], b = E[p];
      const L = yi(u, t), v = typeof L == "number" ? {
        mainAxis: L,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...L
      };
      if (h) {
        const y = T === "y" ? "height" : "width", C = l.reference[T] - l.floating[y] + v.mainAxis, w = l.reference[T] + l.reference[y] - v.mainAxis;
        m < C ? m = C : m > w && (m = w);
      }
      if (A) {
        var I, R;
        const y = T === "y" ? "width" : "height", C = ["top", "left"].includes(Mr(a)), w = l.reference[p] - l.floating[y] + (C && ((I = o.offset) == null ? void 0 : I[p]) || 0) + (C ? 0 : v.crossAxis), F = l.reference[p] + l.reference[y] + (C ? 0 : ((R = o.offset) == null ? void 0 : R[p]) || 0) - (C ? v.crossAxis : 0);
        b < w ? b = w : b > F && (b = F);
      }
      return {
        [T]: m,
        [p]: b
      };
    }
  };
};
function du() {
  return typeof window < "u";
}
function Jr(e) {
  return mc(e) ? (e.nodeName || "").toLowerCase() : "#document";
}
function xn(e) {
  var t;
  return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;
}
function li(e) {
  var t;
  return (t = (mc(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement;
}
function mc(e) {
  return du() ? e instanceof Node || e instanceof xn(e).Node : !1;
}
function qr(e) {
  return du() ? e instanceof Element || e instanceof xn(e).Element : !1;
}
function $r(e) {
  return du() ? e instanceof HTMLElement || e instanceof xn(e).HTMLElement : !1;
}
function fE(e) {
  return !du() || typeof ShadowRoot > "u" ? !1 : e instanceof ShadowRoot || e instanceof xn(e).ShadowRoot;
}
function El(e) {
  const {
    overflow: t,
    overflowX: n,
    overflowY: r,
    display: a
  } = ir(e);
  return /auto|scroll|overlay|hidden|clip/.test(t + r + n) && !["inline", "contents"].includes(a);
}
function I0(e) {
  return ["table", "td", "th"].includes(Jr(e));
}
function g0(e) {
  return [":popover-open", ":modal"].some((t) => {
    try {
      return e.matches(t);
    } catch {
      return !1;
    }
  });
}
function bc(e) {
  const t = Lc(), n = qr(e) ? ir(e) : e;
  return n.transform !== "none" || n.perspective !== "none" || (n.containerType ? n.containerType !== "normal" : !1) || !t && (n.backdropFilter ? n.backdropFilter !== "none" : !1) || !t && (n.filter ? n.filter !== "none" : !1) || ["transform", "perspective", "filter"].some((r) => (n.willChange || "").includes(r)) || ["paint", "layout", "strict", "content"].some((r) => (n.contain || "").includes(r));
}
function y0(e) {
  let t = ls(e);
  for (; $r(t) && !cu(t); ) {
    if (bc(t))
      return t;
    if (g0(t))
      return null;
    t = ls(t);
  }
  return null;
}
function Lc() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
function cu(e) {
  return ["html", "body", "#document"].includes(Jr(e));
}
function ir(e) {
  return xn(e).getComputedStyle(e);
}
function fu(e) {
  return qr(e) ? {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  } : {
    scrollLeft: e.scrollX,
    scrollTop: e.scrollY
  };
}
function ls(e) {
  if (Jr(e) === "html")
    return e;
  const t = (
    // Step into the shadow DOM of the parent of a slotted node.
    e.assignedSlot || // DOM Element detected.
    e.parentNode || // ShadowRoot detected.
    fE(e) && e.host || // Fallback.
    li(e)
  );
  return fE(t) ? t.host : t;
}
function vT(e) {
  const t = ls(e);
  return cu(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : $r(t) && El(t) ? t : vT(t);
}
function il(e, t, n) {
  var r;
  t === void 0 && (t = []), n === void 0 && (n = !0);
  const a = vT(e), l = a === ((r = e.ownerDocument) == null ? void 0 : r.body), o = xn(a);
  if (l) {
    const u = R0(o);
    return t.concat(o, o.visualViewport || [], El(a) ? a : [], u && n ? il(u) : []);
  }
  return t.concat(a, il(a, [], n));
}
function R0(e) {
  return e.parent && Object.getPrototypeOf(e.parent) ? e.frameElement : null;
}
function IT(e) {
  const t = ir(e);
  let n = parseFloat(t.width) || 0, r = parseFloat(t.height) || 0;
  const a = $r(e), l = a ? e.offsetWidth : n, o = a ? e.offsetHeight : r, u = ko(n) !== l || ko(r) !== o;
  return u && (n = l, r = o), {
    width: n,
    height: r,
    $: u
  };
}
function vc(e) {
  return qr(e) ? e : e.contextElement;
}
function ts(e) {
  const t = vc(e);
  if (!$r(t))
    return gi(1);
  const n = t.getBoundingClientRect(), {
    width: r,
    height: a,
    $: l
  } = IT(t);
  let o = (l ? ko(n.width) : n.width) / r, u = (l ? ko(n.height) : n.height) / a;
  return (!o || !Number.isFinite(o)) && (o = 1), (!u || !Number.isFinite(u)) && (u = 1), {
    x: o,
    y: u
  };
}
const O0 = /* @__PURE__ */ gi(0);
function gT(e) {
  const t = xn(e);
  return !Lc() || !t.visualViewport ? O0 : {
    x: t.visualViewport.offsetLeft,
    y: t.visualViewport.offsetTop
  };
}
function C0(e, t, n) {
  return t === void 0 && (t = !1), !n || t && n !== xn(e) ? !1 : t;
}
function va(e, t, n, r) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  const a = e.getBoundingClientRect(), l = vc(e);
  let o = gi(1);
  t && (r ? qr(r) && (o = ts(r)) : o = ts(e));
  const u = C0(l, n, r) ? gT(l) : gi(0);
  let h = (a.left + u.x) / o.x, A = (a.top + u.y) / o.y, E = a.width / o.x, p = a.height / o.y;
  if (l) {
    const T = xn(l), m = r && qr(r) ? xn(r) : r;
    let b = T, L = b.frameElement;
    for (; L && r && m !== b; ) {
      const v = ts(L), I = L.getBoundingClientRect(), R = ir(L), y = I.left + (L.clientLeft + parseFloat(R.paddingLeft)) * v.x, C = I.top + (L.clientTop + parseFloat(R.paddingTop)) * v.y;
      h *= v.x, A *= v.y, E *= v.x, p *= v.y, h += y, A += C, b = xn(L), L = b.frameElement;
    }
  }
  return Wo({
    width: E,
    height: p,
    x: h,
    y: A
  });
}
const N0 = [":popover-open", ":modal"];
function yT(e) {
  return N0.some((t) => {
    try {
      return e.matches(t);
    } catch {
      return !1;
    }
  });
}
function D0(e) {
  let {
    elements: t,
    rect: n,
    offsetParent: r,
    strategy: a
  } = e;
  const l = a === "fixed", o = li(r), u = t ? yT(t.floating) : !1;
  if (r === o || u && l)
    return n;
  let h = {
    scrollLeft: 0,
    scrollTop: 0
  }, A = gi(1);
  const E = gi(0), p = $r(r);
  if ((p || !p && !l) && ((Jr(r) !== "body" || El(o)) && (h = fu(r)), $r(r))) {
    const T = va(r);
    A = ts(r), E.x = T.x + r.clientLeft, E.y = T.y + r.clientTop;
  }
  return {
    width: n.width * A.x,
    height: n.height * A.y,
    x: n.x * A.x - h.scrollLeft * A.x + E.x,
    y: n.y * A.y - h.scrollTop * A.y + E.y
  };
}
function B0(e) {
  return Array.from(e.getClientRects());
}
function RT(e) {
  return va(li(e)).left + fu(e).scrollLeft;
}
function w0(e) {
  const t = li(e), n = fu(e), r = e.ownerDocument.body, a = Ta(t.scrollWidth, t.clientWidth, r.scrollWidth, r.clientWidth), l = Ta(t.scrollHeight, t.clientHeight, r.scrollHeight, r.clientHeight);
  let o = -n.scrollLeft + RT(e);
  const u = -n.scrollTop;
  return ir(r).direction === "rtl" && (o += Ta(t.clientWidth, r.clientWidth) - a), {
    width: a,
    height: l,
    x: o,
    y: u
  };
}
function P0(e, t) {
  const n = xn(e), r = li(e), a = n.visualViewport;
  let l = r.clientWidth, o = r.clientHeight, u = 0, h = 0;
  if (a) {
    l = a.width, o = a.height;
    const A = Lc();
    (!A || A && t === "fixed") && (u = a.offsetLeft, h = a.offsetTop);
  }
  return {
    width: l,
    height: o,
    x: u,
    y: h
  };
}
function x0(e, t) {
  const n = va(e, !0, t === "fixed"), r = n.top + e.clientTop, a = n.left + e.clientLeft, l = $r(e) ? ts(e) : gi(1), o = e.clientWidth * l.x, u = e.clientHeight * l.y, h = a * l.x, A = r * l.y;
  return {
    width: o,
    height: u,
    x: h,
    y: A
  };
}
function hE(e, t, n) {
  let r;
  if (t === "viewport")
    r = P0(e, n);
  else if (t === "document")
    r = w0(li(e));
  else if (qr(t))
    r = x0(t, n);
  else {
    const a = gT(e);
    r = {
      ...t,
      x: t.x - a.x,
      y: t.y - a.y
    };
  }
  return Wo(r);
}
function OT(e, t) {
  const n = ls(e);
  return n === t || !qr(n) || cu(n) ? !1 : ir(n).position === "fixed" || OT(n, t);
}
function F0(e, t) {
  const n = t.get(e);
  if (n)
    return n;
  let r = il(e, [], !1).filter((u) => qr(u) && Jr(u) !== "body"), a = null;
  const l = ir(e).position === "fixed";
  let o = l ? ls(e) : e;
  for (; qr(o) && !cu(o); ) {
    const u = ir(o), h = bc(o);
    !h && u.position === "fixed" && (a = null), (l ? !h && !a : !h && u.position === "static" && !!a && ["absolute", "fixed"].includes(a.position) || El(o) && !h && OT(e, o)) ? r = r.filter((E) => E !== o) : a = u, o = ls(o);
  }
  return t.set(e, r), r;
}
function M0(e) {
  let {
    element: t,
    boundary: n,
    rootBoundary: r,
    strategy: a
  } = e;
  const o = [...n === "clippingAncestors" ? F0(t, this._c) : [].concat(n), r], u = o[0], h = o.reduce((A, E) => {
    const p = hE(t, E, a);
    return A.top = Ta(p.top, A.top), A.right = ss(p.right, A.right), A.bottom = ss(p.bottom, A.bottom), A.left = Ta(p.left, A.left), A;
  }, hE(t, u, a));
  return {
    width: h.right - h.left,
    height: h.bottom - h.top,
    x: h.left,
    y: h.top
  };
}
function q0(e) {
  const {
    width: t,
    height: n
  } = IT(e);
  return {
    width: t,
    height: n
  };
}
function $0(e, t, n) {
  const r = $r(t), a = li(t), l = n === "fixed", o = va(e, !0, l, t);
  let u = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const h = gi(0);
  if (r || !r && !l)
    if ((Jr(t) !== "body" || El(a)) && (u = fu(t)), r) {
      const p = va(t, !0, l, t);
      h.x = p.x + t.clientLeft, h.y = p.y + t.clientTop;
    } else a && (h.x = RT(a));
  const A = o.left + u.scrollLeft - h.x, E = o.top + u.scrollTop - h.y;
  return {
    x: A,
    y: E,
    width: o.width,
    height: o.height
  };
}
function AE(e, t) {
  return !$r(e) || ir(e).position === "fixed" ? null : t ? t(e) : e.offsetParent;
}
function CT(e, t) {
  const n = xn(e);
  if (!$r(e) || yT(e))
    return n;
  let r = AE(e, t);
  for (; r && I0(r) && ir(r).position === "static"; )
    r = AE(r, t);
  return r && (Jr(r) === "html" || Jr(r) === "body" && ir(r).position === "static" && !bc(r)) ? n : r || y0(e) || n;
}
const k0 = async function(e) {
  const t = this.getOffsetParent || CT, n = this.getDimensions;
  return {
    reference: $0(e.reference, await t(e.floating), e.strategy),
    floating: {
      x: 0,
      y: 0,
      ...await n(e.floating)
    }
  };
};
function H0(e) {
  return ir(e).direction === "rtl";
}
const U0 = {
  convertOffsetParentRelativeRectToViewportRelativeRect: D0,
  getDocumentElement: li,
  getClippingRect: M0,
  getOffsetParent: CT,
  getElementRects: k0,
  getClientRects: B0,
  getDimensions: q0,
  getScale: ts,
  isElement: qr,
  isRTL: H0
};
function W0(e, t) {
  let n = null, r;
  const a = li(e);
  function l() {
    var u;
    clearTimeout(r), (u = n) == null || u.disconnect(), n = null;
  }
  function o(u, h) {
    u === void 0 && (u = !1), h === void 0 && (h = 1), l();
    const {
      left: A,
      top: E,
      width: p,
      height: T
    } = e.getBoundingClientRect();
    if (u || t(), !p || !T)
      return;
    const m = Lo(E), b = Lo(a.clientWidth - (A + p)), L = Lo(a.clientHeight - (E + T)), v = Lo(A), R = {
      rootMargin: -m + "px " + -b + "px " + -L + "px " + -v + "px",
      threshold: Ta(0, ss(1, h)) || 1
    };
    let y = !0;
    function C(w) {
      const F = w[0].intersectionRatio;
      if (F !== h) {
        if (!y)
          return o();
        F ? o(!1, F) : r = setTimeout(() => {
          o(!1, 1e-7);
        }, 100);
      }
      y = !1;
    }
    try {
      n = new IntersectionObserver(C, {
        ...R,
        // Handle <iframe>s
        root: a.ownerDocument
      });
    } catch {
      n = new IntersectionObserver(C, R);
    }
    n.observe(e);
  }
  return o(!0), l;
}
function pl(e, t, n, r) {
  r === void 0 && (r = {});
  const {
    ancestorScroll: a = !0,
    ancestorResize: l = !0,
    elementResize: o = typeof ResizeObserver == "function",
    layoutShift: u = typeof IntersectionObserver == "function",
    animationFrame: h = !1
  } = r, A = vc(e), E = a || l ? [...A ? il(A) : [], ...il(t)] : [];
  E.forEach((I) => {
    a && I.addEventListener("scroll", n, {
      passive: !0
    }), l && I.addEventListener("resize", n);
  });
  const p = A && u ? W0(A, n) : null;
  let T = -1, m = null;
  o && (m = new ResizeObserver((I) => {
    let [R] = I;
    R && R.target === A && m && (m.unobserve(t), cancelAnimationFrame(T), T = requestAnimationFrame(() => {
      var y;
      (y = m) == null || y.observe(t);
    })), n();
  }), A && !h && m.observe(A), m.observe(t));
  let b, L = h ? va(e) : null;
  h && v();
  function v() {
    const I = va(e);
    L && (I.x !== L.x || I.y !== L.y || I.width !== L.width || I.height !== L.height) && n(), L = I, b = requestAnimationFrame(v);
  }
  return n(), () => {
    var I;
    E.forEach((R) => {
      a && R.removeEventListener("scroll", n), l && R.removeEventListener("resize", n);
    }), p == null || p(), (I = m) == null || I.disconnect(), m = null, h && cancelAnimationFrame(b);
  };
}
const V0 = T0, Tl = L0, Sl = S0, G0 = E0, hu = v0, ml = (e, t, n) => {
  const r = /* @__PURE__ */ new Map(), a = {
    platform: U0,
    ...n
  }, l = {
    ...a.platform,
    _c: r
  };
  return A0(e, t, {
    ...a,
    platform: l
  });
};
function j0(e) {
  return e != null && typeof e == "object" && "$el" in e;
}
function z0(e) {
  if (j0(e)) {
    const t = e.$el;
    return mc(t) && Jr(t) === "#comment" ? null : t;
  }
  return e;
}
function K0(e) {
  return typeof e == "function" ? e() : _R(e);
}
function Y0(e) {
  return {
    name: "arrow",
    options: e,
    fn(t) {
      const n = z0(K0(e.element));
      return n == null ? {} : G0({
        element: n,
        padding: e.padding
      }).fn(t);
    }
  };
}
const X = {
  arrowDown: 40,
  arrowLeft: 37,
  arrowRight: 39,
  arrowUp: 38,
  e: 69,
  enter: 13,
  escape: 27,
  minus: 189,
  numMinus: 109,
  numPlus: 107,
  plus: 187,
  space: 32,
  tab: 9,
  backspace: 8,
  del: 46,
  home: 36,
  end: 35
};
function Z0(e) {
  const t = f(e, "id"), n = f(e, "offsetDistance"), r = f(e, "offsetSkidding"), a = f(e, "placement"), l = f(e, "timeClose"), o = B(void 0), u = B(void 0), h = B(!1), A = B(void 0), E = B(void 0), p = B(void 0), T = _(() => document.getElementById(t.value)), m = _(() => a.value && a.value.includes("auto")), b = _(() => [
    b0({
      mainAxis: n.value || 0,
      crossAxis: r.value || 0,
      alignmentAxis: null
    }),
    m.value ? V0() : Sl(),
    Tl({ limiter: hu() }),
    E.value && Y0({
      element: E.value,
      padding: 5
    })
  ]), L = (V) => {
    V.keyCode === X.escape && U();
  }, v = () => {
    document.addEventListener("keydown", L);
  }, I = () => {
    document.removeEventListener("keydown", L);
  }, R = () => {
    Rt.$on("closeHtmlTitle", U);
  }, y = () => {
    Rt.$off("closeHtmlTitle", U);
  }, C = () => {
    o.value && (o.value(), o.value = void 0);
  }, w = () => {
    A.value = setTimeout(() => {
      U();
    }, l.value);
  }, F = () => {
    if (h.value) {
      clearTimeout(A.value);
      return;
    }
    h.value = !0;
  }, P = () => {
    o.value || !T.value || !p.value || (o.value = pl(T.value, p.value, () => {
      !T.value || !p.value || ml(
        T.value,
        p.value,
        {
          placement: a.value,
          middleware: b.value
        }
      ).then(({ x: V, y: j, middlewareData: ne, placement: Z }) => {
        Object.assign(p.value.style, {
          left: `${V}px`,
          top: `${j}px`
        });
        const le = Z.split("-")[0], oe = {
          top: "bottom",
          right: "left",
          bottom: "top",
          left: "right"
        }[le];
        if (ne.arrow) {
          const { x: fe, y: he } = ne.arrow;
          Object.assign(E.value.style, {
            left: ae(fe) ? "" : `${fe}px`,
            top: ae(he) ? "" : `${he}px`,
            [oe]: `${-E.value.offsetWidth / 2}px`
          });
        }
      });
    }), Rt.$emit("closeHtmlTitle"), R(), v());
  }, q = () => {
    clearTimeout(A.value);
  }, N = () => {
    w();
  };
  function U() {
    clearTimeout(A.value), C(), y(), I(), h.value = !1;
  }
  return {
    closeTitle: U,
    closeTitleWithTimer: w,
    componentRef: u,
    isTitleVisible: h,
    mouseEnterTooltip: q,
    mouseLeaveTooltip: N,
    showTitle: F,
    startPopper: P,
    titleArrowRef: E,
    titleRef: p
  };
}
function Ic(e) {
  const t = f(e, "popperContainerId"), n = _(() => `#${t.value}`);
  return {
    addPopperContainerInBody: ({ className: a = "a_popup_container" } = {}) => {
      if (!document.getElementById(t.value)) {
        const o = document.createElement("div");
        o.id = t.value, o.className = a, document.body.prepend(o);
      }
    },
    popperContainerIdSelector: n
  };
}
const X0 = ["RouterLink", "router-link"];
function J0(e) {
  const t = f(e, "tag");
  return {
    tagLocal: _(() => X0.indexOf(t.value) !== -1 ? Fr(t.value) : t.value)
  };
}
function Q0(e, {
  showTitle: t = () => {
  },
  closeTitle: n = () => {
  },
  closeTitleWithTimer: r = () => {
  }
}) {
  const a = f(e, "isHide");
  return {
    onBlur: () => {
      n();
    },
    onFocus: () => {
      a.value || t();
    },
    onMouseenter: () => {
      a.value || t();
    },
    onMouseleave: () => {
      r();
    }
  };
}
const Lr = [
  "auto",
  "auto-start",
  "auto-end",
  "top",
  "top-start",
  "top-end",
  "right",
  "right-start",
  "right-end",
  "bottom",
  "bottom-start",
  "bottom-end",
  "left",
  "left-start",
  "left-end"
], e1 = {
  name: "ATooltip",
  props: {
    arrowPadding: {
      type: [Number, Function],
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => ot("a_tooltip_")
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    maxWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    minWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    offsetDistance: {
      type: Number,
      required: !1,
      default: 6
    },
    offsetSkidding: {
      type: Number,
      required: !1,
      default: 0
    },
    placement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Lr.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: "a_tooltip_container"
    },
    showArrow: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tag: {
      type: String,
      required: !1,
      default: "span"
    },
    timeClose: {
      type: Number,
      required: !1,
      default: 100,
      validator: (e) => e >= 0
    },
    width: {
      type: Number,
      required: !1,
      default: void 0
    },
    withoutAriaDescribedby: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      closeTitle: t,
      closeTitleWithTimer: n,
      componentRef: r,
      isTitleVisible: a,
      mouseEnterTooltip: l,
      mouseLeaveTooltip: o,
      showTitle: u,
      startPopper: h,
      titleArrowRef: A,
      titleRef: E
    } = Z0(e), {
      onBlur: p,
      onFocus: T,
      onMouseenter: m,
      onMouseleave: b
    } = Q0(e, {
      showTitle: u,
      closeTitle: t,
      closeTitleWithTimer: n
    }), {
      tagLocal: L
    } = J0(e), {
      ariaDescribedby: v,
      tooltipStyles: I
    } = l0(e, {
      isTitleVisible: a
    }), {
      addPopperContainerInBody: R,
      popperContainerIdSelector: y
    } = Ic(e);
    return R(), Ot(() => {
      t();
    }), {
      ariaDescribedby: v,
      closeTitle: t,
      componentRef: r,
      isTitleVisible: a,
      mouseEnterTooltip: l,
      mouseLeaveTooltip: o,
      onBlur: p,
      onFocus: T,
      onMouseenter: m,
      onMouseleave: b,
      showTitle: u,
      popperContainerIdSelector: y,
      startPopper: h,
      tagLocal: L,
      titleArrowRef: A,
      titleRef: E,
      tooltipStyles: I
    };
  },
  render() {
    return c(this.tagLocal, {
      ref: "componentRef",
      id: this.id,
      "aria-describedby": this.ariaDescribedby,
      onFocus: this.onFocus,
      onBlur: this.onBlur,
      onMouseenter: this.onMouseenter,
      onMouseleave: this.onMouseleave
    }, {
      default: () => [
        this.$slots.default && this.$slots.default(),
        !this.isHide && c(ti, {
          to: this.popperContainerIdSelector
        }, [
          /*
           * h("div", {
           *   id: this.ariaDescribedby,
           *   class: "a_sr_only",
           * }, [
           *   this.$slots.title && this.$slots.title(),
           * ]),
           */
          !!(this.$slots.title && this.isTitleVisible) && Ft(c("div", {
            ref: "titleRef",
            class: "a_tooltip__container",
            style: this.tooltipStyles,
            onMouseenter: this.mouseEnterTooltip,
            onMouseleave: this.mouseLeaveTooltip
          }, [
            this.showArrow && c("div", {
              ref: "titleArrowRef",
              "data-popper-arrow": !0,
              class: "a_tooltip__arrow"
            }),
            c("div", {
              id: this.ariaDescribedby,
              class: "a_tooltip__wrapper"
            }, this.$slots.title && this.$slots.title())
          ]), [
            [rl, {
              mounted: this.startPopper
            }]
          ])
        ])
      ]
    });
  }
};
function t1(e, {
  tagLocal: t = _(() => "")
}) {
  const n = f(e, "isTitleHtml");
  return {
    componentLocal: _(() => n.value ? e1 : t.value)
  };
}
function n1(e) {
  const t = f(e, "type"), n = f(e, "disabled");
  return {
    disabledLocal: _(() => {
      if (["button", "submit", "reset"].indexOf(t.value) !== -1 && n.value)
        return !0;
    })
  };
}
function r1(e, {
  tagLocal: t = _(() => "")
}) {
  const n = f(e, "isTitleHtml"), r = f(e, "titleAttributes"), a = f(e, "titlePlacement"), l = B(void 0), o = _(() => n.value ? {
    tag: t.value,
    placement: a.value,
    withoutAriaDescribedby: !0,
    ...r.value
  } : {});
  return {
    elementRef: l,
    htmlTitleAttributes: o
  };
}
function i1(e) {
  const t = f(e, "loading"), n = f(e, "loadingAlign"), r = _(() => t.value && n.value === "left"), a = _(() => t.value && n.value === "right");
  return {
    isLoadingLeft: r,
    isLoadingRight: a
  };
}
function a1(e) {
  const t = f(e, "disabled"), n = f(e, "to"), r = f(e, "type");
  return {
    isRouterLink: _(() => r.value === "link" && !!n.value && !t.value)
  };
}
const EE = "a_btn a_btn_switch";
function s1(e) {
  const t = f(e, "isSwitch"), n = f(e, "modelSwitch"), r = _(() => {
    if (t.value)
      return !!n.value;
  }), a = _(() => {
    if (t.value)
      return n.value ? `${EE} a_btn_switch_active` : EE;
  });
  return {
    isSwitchActive: r,
    switchClass: a
  };
}
const l1 = {
  button: "button",
  submit: "button",
  reset: "button",
  link: "a",
  text: "span"
};
function o1(e, {
  isRouterLink: t = _(() => !1)
}) {
  const n = f(e, "tag"), r = f(e, "type");
  return {
    tagLocal: _(() => n.value ? n.value : t.value ? Fr("RouterLink") : l1[r.value] || "span")
  };
}
function u1(e) {
  const t = f(e, "html"), n = f(e, "htmlScreenReader"), r = f(e, "safeHtml"), a = f(e, "safeHtmlScreenReader"), l = f(e, "text"), o = f(e, "textScreenReader"), u = _(() => nt(l.value) ? !wn(l.value) : !ae(l.value) && l.value !== ""), h = _(() => nt(r.value) ? !wn(r.value) : !ae(r.value) && r.value !== ""), A = _(() => nt(t.value) ? !wn(t.value) : !ae(t.value) && t.value !== ""), E = _(() => u.value || h.value || A.value), p = _(() => nt(o.value) ? !wn(o.value) : !ae(o.value) && o.value !== ""), T = _(() => nt(a.value) ? !wn(a.value) : !ae(a.value) && a.value !== ""), m = _(() => nt(n.value) ? !wn(n.value) : !ae(n.value) && n.value !== ""), b = _(() => p.value || T.value || m.value);
  return {
    isTextOrHtmlVisible: E,
    isTextOrHtmlScreenReaderVisible: b
  };
}
function _1(e) {
  const t = f(e, "title");
  return {
    isTitleVisible: _(() => Te(t.value) && t.value.length > 0 ? !0 : nt(t.value) ? !wn(t.value) : !Pe(t.value))
  };
}
function wt(e) {
  const t = f(e, "excludeRenderAttributes");
  return {
    attributesToExcludeFromRender: _(() => {
      const r = {};
      return Y(t.value, (a) => {
        r[a] = void 0;
      }), r;
    })
  };
}
const Oe = {
  name: "AElement",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaDisabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    href: {
      type: String,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => ot("a_element_")
    },
    isSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    modelSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tabindex: {
      type: [Number, String],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: void 0
    },
    target: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Lr.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => lt(e) ? e === "auto" : Oi(e)
    },
    to: {
      type: [Object, String],
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0,
      default: "text",
      validator: (e) => ["button", "submit", "reset", "link", "text"].indexOf(e) !== -1
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = wt(e), {
      isRouterLink: r
    } = a1(e), {
      disabledLocal: a
    } = n1(e), {
      tagLocal: l
    } = o1(e, {
      isRouterLink: r
    }), {
      toHrefAttributes: o,
      typeAttribut: u
    } = a0(e, {
      isRouterLink: r,
      tagLocal: l
    }), {
      isTitleVisible: h
    } = _1(e), {
      isLoadingLeft: A,
      isLoadingRight: E
    } = i1(e), {
      isTextOrHtmlVisible: p,
      isTextOrHtmlScreenReaderVisible: T
    } = u1(e), {
      onClick: m
    } = s0(e, t), {
      componentLocal: b
    } = t1(e, {
      tagLocal: l
    }), {
      elementRef: L,
      htmlTitleAttributes: v
    } = r1(e, {
      tagLocal: l
    }), {
      ariaLabelAttributes: I
    } = Ac(e), {
      isSwitchActive: R,
      switchClass: y
    } = s1(e);
    return {
      ariaLabelAttributes: I,
      attributesToExcludeFromRender: n,
      componentLocal: b,
      disabledLocal: a,
      elementRef: L,
      htmlTitleAttributes: v,
      isLoadingLeft: A,
      isLoadingRight: E,
      isSwitchActive: R,
      isTextOrHtmlScreenReaderVisible: T,
      isTextOrHtmlVisible: p,
      isTitleVisible: h,
      onClick: m,
      switchClass: y,
      tagLocal: l,
      toHrefAttributes: o,
      typeAttribut: u
    };
  },
  render() {
    return c(this.componentLocal, {
      ...this.$attrs,
      ...this.htmlTitleAttributes,
      ...this.ariaLabelAttributes,
      ...this.toHrefAttributes,
      ref: "elementRef",
      id: this.id,
      class: [
        this.classDefault,
        this.switchClass,
        this.class,
        {
          [this.classDisabled]: this.ariaDisabled
        }
      ],
      type: this.typeAttribut,
      tabindex: this.tabindex,
      disabled: this.disabledLocal,
      ariaDisabled: this.ariaDisabled,
      "aria-pressed": this.isSwitchActive,
      isAllRowsSelected: void 0,
      // TODO: ATable
      onClick: this.onClick,
      ...this.attributes,
      ...this.attributesToExcludeFromRender
    }, {
      default: () => [
        !this.isTitleHtml && this.isTitleVisible ? c(pe, {
          tag: "span",
          alwaysTranslate: this.alwaysTranslate,
          ariaHidden: !0,
          class: [
            "a_position_absolute_all",
            this.classDefaultHidden
          ],
          title: this.title,
          extra: this.extra,
          style: {
            zIndex: this.titleZIndex
          },
          ...this.titleAttributes
        }) : "",
        this.isTextOrHtmlScreenReaderVisible ? c(pe, {
          alwaysTranslate: this.alwaysTranslate,
          class: [
            "a_sr_only",
            this.classDefaultHidden
          ],
          tag: "span",
          text: this.textScreenReader,
          html: this.htmlScreenReader,
          safeHtml: this.safeHtmlScreenReader,
          extra: this.extra
        }) : "",
        this.$slots.buttonPrepend ? this.$slots.buttonPrepend({ extraData: this.extraData }) : "",
        this.isLoadingLeft ? c(nl, {
          class: [
            "aloha_btn__spinner_left",
            this.loadingClass
          ]
        }) : "",
        c(st, {
          icon: this.iconLeft,
          iconTag: this.iconTag,
          class: [
            "aloha_btn__icon_left",
            this.iconClass
          ],
          ...this.iconAttributes
        }),
        this.$slots.default ? this.$slots.default({ extraData: this.extraData }) : "",
        this.isTextOrHtmlVisible ? c(pe, {
          alwaysTranslate: this.alwaysTranslate,
          ariaHidden: this.textAriaHidden,
          class: this.textClass,
          extra: this.extra,
          html: this.html,
          safeHtml: this.safeHtml,
          tag: this.textTag,
          text: this.text,
          textAfter: this.textAfter,
          textBefore: this.textBefore
        }) : "",
        c(st, {
          icon: this.iconRight,
          iconTag: this.iconTag,
          class: [
            "aloha_btn__icon_right",
            this.iconClass
          ],
          ...this.iconAttributes
        }),
        this.isLoadingRight ? c(nl, {
          class: [
            "aloha_btn__spinner_right",
            this.loadingClass
          ]
        }) : "",
        this.$slots.buttonAppend ? this.$slots.buttonAppend({ extraData: this.extraData }) : ""
      ],
      title: !this.isTitleHtml || !this.title && !this.$slots.buttonTitle ? () => "" : () => [
        this.isTitleVisible ? c(pe, {
          alwaysTranslate: this.alwaysTranslate,
          html: this.title,
          tag: "span",
          extra: this.extra
        }) : "",
        this.$slots.buttonTitle ? this.$slots.buttonTitle({ extraData: this.extraData }) : ""
      ]
    });
  }
};
function NT(e, { emit: t }) {
  return {
    clickEmit: (r) => {
      t("click", r);
    }
  };
}
const rt = {
  name: "AButton",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaDisabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => ot("a_btn_")
    },
    isSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    modelSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tabindex: {
      type: [Number, String],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Lr.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => lt(e) ? e === "auto" : Oi(e)
    },
    type: {
      type: String,
      required: !1,
      default: "button",
      validator: (e) => ["button", "submit", "reset"].indexOf(e) !== -1
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      clickEmit: n
    } = NT(e, t);
    return {
      clickEmit: n
    };
  },
  render() {
    return c(Oe, {
      ...this.$attrs,
      ...this.$props,
      onClick: this.clickEmit
    }, this.$slots);
  }
};
function d1(e) {
  const t = f(e, "type");
  return {
    alertClassLocal: _(() => `a_alert a_alert_${t.value}`)
  };
}
function c1(e, { emit: t }) {
  const n = f(e, "closable"), r = f(e, "removeAlertOnClose"), a = B(!1);
  return {
    close: () => {
      n.value && (r.value && (a.value = !0), t("close"));
    },
    isHidden: a
  };
}
const f1 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>
</svg>`, Au = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4m.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2"/>
</svg>`, h1 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle-fill" viewBox="0 0 16 16">
  <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2"/>
</svg>`, Eu = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293z"/>
</svg>`, Pt = B({
  propsDefault: {
    alertClass: void 0,
    alertContentClass: void 0,
    btnCloseAttributes: {},
    closable: !1,
    extra: void 0,
    html: void 0,
    icon: void 0,
    iconClass: void 0,
    isVisible: !1,
    removeAlertOnClose: !1,
    safeHtml: void 0,
    showIcon: !1,
    text: void 0,
    textClose: "_ALERT_CLOSE_",
    type: "danger"
  },
  icons: {
    success: f1,
    danger: Eu,
    info: h1,
    warning: Au
  }
}), Coe = {
  install: (e, {
    propsDefault: t = {},
    icons: n = {}
  } = {}) => {
    Pt.value.propsDefault = {
      ...Pt.value.propsDefault,
      ...t
    }, Pt.value.icons = {
      ...Pt.value.icons,
      ...n
    };
  }
};
function A1(e) {
  const t = f(e, "icon"), n = f(e, "showIcon"), r = f(e, "type");
  return {
    iconLocal: _(() => {
      if (n.value)
        return t.value ? t.value : Pt.value.icons[r.value];
    })
  };
}
const gc = {
  name: "AAlert",
  props: {
    alertClass: {
      type: [String, Object],
      required: !1,
      default: () => Pt.value.propsDefault.alertClass
    },
    alertContentClass: {
      type: [String, Object],
      required: !1,
      default: () => Pt.value.propsDefault.alertContentClass
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    btnCloseAttributes: {
      type: Object,
      required: !1,
      default: () => Pt.value.propsDefault.btnCloseAttributes
    },
    closable: {
      type: Boolean,
      required: !1,
      default: () => Pt.value.propsDefault.closable
    },
    extra: {
      type: Object,
      required: !1,
      default: () => Pt.value.propsDefault.extra
    },
    html: {
      type: String,
      required: !1,
      default: () => Pt.value.propsDefault.html
    },
    icon: {
      type: String,
      required: !1,
      default: () => Pt.value.propsDefault.icon
    },
    iconClass: {
      type: String,
      required: !1,
      default: () => Pt.value.propsDefault.iconClass
    },
    isVisible: {
      type: Boolean,
      required: !1,
      default: () => Pt.value.propsDefault.isVisible
    },
    removeAlertOnClose: {
      type: Boolean,
      required: !1,
      default: () => Pt.value.propsDefault.removeAlertOnClose
    },
    safeHtml: {
      type: String,
      required: !1,
      default: () => Pt.value.propsDefault.safeHtml
    },
    showIcon: {
      type: Boolean,
      required: !1,
      default: () => Pt.value.propsDefault.showIcon
    },
    text: {
      type: String,
      required: !1,
      default: () => Pt.value.propsDefault.text
    },
    textClose: {
      type: String,
      required: !1,
      default: () => Pt.value.propsDefault.textClose
    },
    type: {
      type: String,
      required: !1,
      default: () => Pt.value.propsDefault.type
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      alertClassLocal: r
    } = d1(e), {
      close: a,
      isHidden: l
    } = c1(e, t), {
      iconLocal: o
    } = A1(e);
    return n({
      close: a,
      isHidden: l
    }), {
      alertClassLocal: r,
      close: a,
      iconLocal: o,
      isHidden: l
    };
  },
  render() {
    return this.isHidden ? null : c("div", {
      class: [
        "a_alert__parent",
        {
          a_alert__parent_closable: this.closable
        }
      ]
    }, [
      c("div", {
        role: "alert",
        ariaAtomic: !0
      }, [
        this.isVisible && c("div", {
          class: [this.alertClass, this.alertClassLocal]
        }, [
          this.iconLocal && c(st, {
            icon: this.iconLocal,
            class: [
              "a_alert__icon",
              this.iconClass
            ]
          }),
          c("div", {
            class: [
              "a_alert__content",
              this.alertContentClass
            ]
          }, [
            (this.html || this.text || this.safeHtml) && c(pe, {
              alwaysTranslate: this.alwaysTranslate,
              extra: this.extra,
              html: this.html,
              safeHtml: this.safeHtml,
              text: this.text
            }),
            this.$slots.default && this.$slots.default()
          ])
        ])
      ]),
      this.isVisible && this.closable && c(rt, {
        alwaysTranslate: this.alwaysTranslate,
        type: "button",
        class: "a_btn_close",
        textScreenReader: this.textClose,
        ...this.btnCloseAttributes,
        onClick: this.close
      })
    ]);
  }
};
function DT(e) {
  const t = f(e, "dataItem"), n = f(e, "isButtonGroup"), r = f(e, "classButtonGroupDefault");
  return {
    classButton: _(() => {
      if (n.value)
        return t.value.classButton || r.value;
    })
  };
}
function E1(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = f(e, "modelValue");
  return {
    isChecked: _(() => n.value && n.value.indexOf(t.value) !== -1)
  };
}
function p1(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: a = _(() => {
  })
}) {
  const l = f(e, "dataItem"), o = f(e, "modelValue"), u = (A) => {
    if (n.value) {
      A.preventDefault(), A.stopPropagation();
      return;
    }
    const E = Se(o.value) || [];
    if (r.value) {
      const p = E.indexOf(a.value);
      E.splice(p, 1);
    } else
      E.push(a.value);
    t("changeModelValue", {
      model: E,
      item: l.value,
      $event: A
    }), A.preventDefault(), A.stopPropagation();
  };
  return {
    onClick: u,
    onKeydown: (A) => {
      (A.key === "Enter" || A.keyCode === X.space) && (u(A), A.stopPropagation(), A.preventDefault());
    }
  };
}
const Lt = "_a_label";
function yc(e) {
  const t = f(e, "dataItem"), n = f(e, "id"), r = f(e, "idSuffix"), a = f(e, "itemIndex"), l = _(() => t.value[et]), o = _(() => t.value[Lt]), u = _(() => r.value ? `_${r.value}` : "");
  return {
    idLocal: _(() => `${n.value}_${a.value}${u.value}`),
    labelLocal: o,
    valueLocal: l
  };
}
function Rc(e) {
  const t = f(e, "dataItem"), n = f(e, "disabled"), r = f(e, "keyDisabled");
  return {
    disabledElement: _(() => {
      if (n.value || r.value && de(t.value, r.value))
        return !0;
    })
  };
}
function BT(e) {
  const t = f(e, "dataItem"), n = f(e, "keyTitle"), r = f(e, "keyTitleCallback");
  return {
    titleLocal: _(() => {
      if (r.value)
        return r.value({ item: t.value });
      if (n.value)
        return de(t.value, n.value);
    })
  };
}
function T1(e, {
  trueValue: t = "_YES_",
  falseValue: n = "_NO_",
  useNil: r = !0
} = {}) {
  return r && ae(e) ? "" : xt(e ? { placeholder: t } : { placeholder: n });
}
function S1(e) {
  return BN(e);
}
function Ks(e, { suffix: t = "", digits: n = 2, digitGrouping: r = !0 } = {}) {
  if (ae(e))
    return "";
  let a = $t(e);
  if (a.split(",").length - 1 > 1)
    return e;
  a = a.replace(",", ".").replace(/[.](?=.*[.])/g, "");
  let o = ns(a);
  if (o === 0)
    return `0${n > 0 ? "," : ""}${cP("0", n)}${t ? ` ${t}` : ""}`;
  if (!o)
    return e;
  o = fP(o, n), a = $t(o);
  const u = a.split(".");
  let h = "";
  if (u[1])
    for (let m = 0; m < n; m++) {
      const b = Pe(u[1][m]) ? "0" : u[1][m];
      h = `${h}${b}`;
    }
  else
    h = iP("", n, "0");
  let A = $t(u[0] || "0"), E = !1;
  A.startsWith("-") && (A = A.substring(1), E = !0);
  let p = 0, T = "";
  return Aw(A, (m) => {
    p > 0 && p % 3 === 0 && r && (T += "."), p++, T += m;
  }), `${E ? "-" : ""}${T.split("").reverse().join("")}${_s(h) > 0 ? "," : ""}${h}${t ? ` ${t}` : ""}`;
}
function m1(e, { suffix: t = "€", digits: n = 2, digitGrouping: r = !0 } = {}) {
  return Ks(e, { suffix: t, digits: n, digitGrouping: r });
}
Dn.suppressDeprecationWarnings = !0;
const pE = {
  date: () => "DD.MM.YYYY",
  datetime: () => "DD.MM.YYYY HH:mm",
  fullDate: () => "dddd, DD. MMMM YYYY, HH:mm",
  time: () => "HH:mm",
  timeWithSeconds: () => "HH:mm:ss"
};
function b1(e, { format: t = "date" } = {}) {
  if (ae(e) || e === "")
    return "";
  const n = Dn(String(e));
  return n.isValid() ? (qe(pE[t]) && (t = pE[t]()), n.format(t)) : e;
}
function L1(e, { emptyValue: t = "-" } = {}) {
  return ae(e) || e === "" ? t : e;
}
function v1(e, { linkClass: t } = {}) {
  if (ae(e) || e === "" || !lt(e) || !/^\S+@\S+\.\S+$/.test(e))
    return "";
  let n = "";
  return t && (n = ` class="${t}"`), `<a href="mailto:${e}"${n}>${e}</a>`;
}
function I1(e) {
  const t = document.createElement("div");
  return t.textContent = e, t.innerHTML;
}
function g1(e, { units: t = "kb", sourceUnits: n = "b", digits: r = 2 } = {}) {
  const l = [
    "b",
    "kb",
    "mb",
    "gb",
    "tb",
    "pb",
    "eb",
    "zb",
    "yb"
  ], o = ns(e);
  if (ww(o))
    return "";
  const u = l.indexOf(n);
  let h = l.indexOf(t);
  if (u === -1)
    return "";
  const A = o * Math.pow(1024, u);
  h === -1 && (h = Math.floor(Math.log(A) / Math.log(1024)), h < 0 && (h = 0), t = l[h]);
  const E = xt({ placeholder: `_A_FILE_SIZE_${_T(t)}_` });
  if (o === 0)
    return Ks(0, { suffix: E, digits: r });
  if (u === h)
    return Ks(o, { suffix: E, digits: r });
  const p = A / Math.pow(1024, Math.abs(h));
  return Ks(p, { suffix: E, digits: r });
}
function y1(e, { replacer: t, space: n = 2 } = {}) {
  if (ae(e))
    return "";
  try {
    return JSON.stringify(e, t, n);
  } catch {
    return "";
  }
}
function R1(e) {
  return e ? dP(e, (t, n, r) => `${t}${t ? ", " : ""}${r}: ${n}`, "") : "";
}
function O1(e, { limit: t = 30, maxThreeDots: n = !0 } = {}) {
  if (ae(e))
    return "";
  const r = $t(e);
  if (r.length <= t)
    return r;
  if (n) {
    const a = r.slice(0, t).trimEnd();
    let l = "...", o = !0;
    for (let u = a.length - 1; u > a.length - 4 && a[u] === "."; u--) {
      if (o)
        l = l.slice(0, -1);
      else
        break;
      o = !0;
    }
    return `${a}${l}`;
  }
  return `${r.substring(0, t)}...`;
}
function C1(e, { linkText: t = "", protocol: n = "https://", target: r = "", linkClass: a = "" } = {}) {
  if (ae(e) || !lt(e))
    return "";
  let l = n;
  (e.startsWith("https://") || e.startsWith("http://")) && (l = "");
  const o = r ? ` target="${r}"` : "", u = a ? ` class="${a}"` : "";
  return `<a href="${l}${e}"${o}${u}>${t || e}</a>`;
}
function Vo(e, {
  defaultValue: t = "",
  isChild: n = !1,
  isHtml: r = !0,
  isSimpleArray: a = !1,
  keyChildren: l = "",
  keyLabel: o = "",
  keyLabelCallback: u,
  lastSeparator: h,
  listClass: A = "",
  separator: E,
  separatorHtml: p = "",
  tag: T = "ul"
} = {}) {
  if (!Te(e) || !e.length)
    return t;
  let m = "";
  return r === !1 || r === "false" ? (Pe(E) && (E = ", "), Y(e, (b, L) => {
    let v = TE({
      keyLabel: o,
      keyLabelCallback: u,
      index: L,
      item: b,
      isSimpleArray: a
    }), I;
    if (a) {
      if (Te(v)) {
        let R = "";
        Y(v, (y) => {
          Te(y) ? I = y : R = y;
        }), v = R;
      }
    } else l && (I = de(b, l));
    !Pe(h) && L === e.length - 1 ? m += `${L !== 0 || n ? h : ""}${v}` : m += `${L !== 0 || n ? E : ""}${v}`, I != null && I.length && (m += Vo(I, {
      isChild: !0,
      isHtml: r,
      isSimpleArray: a,
      keyChildren: l,
      keyLabel: o,
      keyLabelCallback: u,
      separator: E
    }));
  }), m) : (Y(e, (b, L) => {
    const v = e.length === L + 1, I = TE({
      keyLabel: o,
      keyLabelCallback: u,
      index: L,
      item: b,
      isSimpleArray: a
    });
    let R, y = I;
    a ? Te(I) && Y(I, (C) => {
      Te(C) ? R = C : y = C;
    }) : l && (R = de(b, l)), E && !v && (y += E), R != null && R.length && (y += Vo(R, {
      isChild: !0,
      isHtml: r,
      isSimpleArray: a,
      keyChildren: l,
      keyLabel: o,
      keyLabelCallback: u,
      listClass: A,
      tag: T
    })), p && !v && (y += p), m += `<li>${y}</li>`;
  }), `<${T}${N1({ listClass: A })}>${m}</${T}>`);
}
function TE({ keyLabel: e, keyLabelCallback: t, index: n, item: r, isSimpleArray: a }) {
  let l;
  return a ? l = r : qe(t) ? l = t({ item: r, itemIndex: n }) : l = e ? de(r, e) : r, Pe(l) && (l = ""), l;
}
function N1({ listClass: e }) {
  return e ? ` class="${e}"` : "";
}
function D1(e) {
  return uT(e);
}
function B1(e, { chars: t = 4, mask: n = "*" } = {}) {
  if (ae(e))
    return "";
  const r = $t(e);
  if (r.length <= t)
    return r;
  const a = xw([t, 0]), l = n.repeat(r.length - a), o = a === 0 ? "" : r.slice(-a);
  return `${l}${o}`;
}
function w1(e, { mapping: t = {}, defaultValue: n = "" } = {}) {
  return `${e}` in t ? t[e] : n;
}
function P1(e, {
  searchModel: t = "",
  searchClass: n = "a_search_highlight",
  tag: r = "mark",
  attributes: a = [],
  caseSensitive: l = !1,
  isHtml: o = !1
} = {}) {
  if (!e)
    return "";
  if (t === "" || ae(t))
    return e;
  const u = l ? "g" : "gi", h = new RegExp(uu(t), u), A = a.length ? ` ${a.join(" ")}` : "";
  if (!o)
    return e.replace(h, (T) => wT({
      value: T,
      tag: r,
      searchClass: n,
      attributesString: A
    }));
  const p = new DOMParser().parseFromString(e, "text/html");
  return PT({
    node: p.body,
    tag: r,
    searchClass: n,
    re: h,
    attributesString: A
  }), p.body.innerHTML;
}
function wT({ value: e, tag: t, searchClass: n, attributesString: r }) {
  return `<${t} class="${n}"${r}>${e}</${t}>`;
}
function PT({ node: e, re: t, tag: n, searchClass: r, attributesString: a }) {
  if (e.nodeType === Node.TEXT_NODE) {
    if (e.nodeValue.match(t)) {
      const o = e.parentNode, u = e.nodeValue.replace(t, (A) => wT({
        value: A,
        tag: n,
        searchClass: r,
        attributesString: a
      })), h = document.createElement("span");
      for (h.innerHTML = u; h.firstChild; )
        o.insertBefore(h.firstChild, e);
      o.removeChild(e);
    }
  } else e.nodeType === Node.ELEMENT_NODE && Array.from(e.childNodes).forEach((l) => PT({
    node: l,
    re: t,
    tag: n,
    searchClass: r,
    attributesString: a
  }));
}
function x1(e) {
  return _T(e);
}
const F1 = B({});
function sr() {
  return {
    filterBoolean: (y, { trueValue: C = "_YES_", falseValue: w = "_NO_", useNil: F = !0 } = {}) => T1(y, {
      trueValue: C,
      falseValue: w,
      useNil: F
    }),
    filterCapitalize: (y) => S1(y),
    filterCurrency: (y, { suffix: C = "€", digits: w = 2, digitGrouping: F = !0 } = {}) => m1(y, { suffix: C, digits: w, digitGrouping: F }),
    filterDate: (y, { format: C = "date" } = {}) => b1(y, { format: C }),
    filterDefaultForEmpty: (y, { emptyValue: C = "-" } = {}) => L1(y, {
      emptyValue: C
    }),
    filterEmail: (y, { linkClass: C } = {}) => v1(y, { linkClass: C }),
    filterEscapeHtml: (y) => I1(y),
    filterFileSize: (y, { units: C = "kb", sourceUnits: w = "b", digits: F = 2 } = {}) => g1(y, { units: C, sourceUnits: w, digits: F }),
    filterFloat: (y, { suffix: C = "", digits: w = 2, digitGrouping: F = !0 } = {}) => Ks(y, { suffix: C, digits: w, digitGrouping: F }),
    filterJson: (y, { replacer: C, space: w = 2 } = {}) => y1(y, { replacer: C, space: w }),
    filterKeyValue: (y) => R1(y),
    filterLimitTo: (y, {
      limit: C = 30,
      maxThreeDots: w = !0
    } = {}) => O1(y, { limit: C, maxThreeDots: w }),
    filterLink: (y, { linkText: C = "", protocol: w = "https://", target: F = "", linkClass: P = "" } = {}) => C1(y, { linkText: C, protocol: w, target: F, linkClass: P }),
    filterList: (y, {
      isHtml: C = !0,
      isSimpleArray: w = !1,
      keyChildren: F = "",
      keyLabel: P = "",
      keyLabelCallback: q,
      listClass: N = "",
      separator: U = ", ",
      tag: V = "ul"
    } = {}) => Vo(y, { isHtml: C, listClass: N, keyLabel: P, keyLabelCallback: q, keyChildren: F, isSimpleArray: w, separator: U, tag: V }),
    filterLowerCase: (y) => D1(y),
    filterMask: (y, { chars: C = 4, mask: w = "*" } = {}) => B1(y, { chars: C, mask: w }),
    filterPropertyByValue: (y, { mapping: C = {}, defaultValue: w = "" } = {}) => w1(y, { mapping: C, defaultValue: w }),
    filterSearchHighlight: (y, {
      searchModel: C = "",
      searchClass: w = "a_search_highlight",
      tag: F = "mark",
      attributes: P = [],
      caseSensitive: q = !1,
      isHtml: N = !1
    } = {}) => P1(y, {
      searchModel: C,
      searchClass: w,
      tag: F,
      attributes: P,
      caseSensitive: q,
      isHtml: N
    }),
    filterUpperCase: (y) => x1(y),
    ...F1.value
  };
}
function Oc(e, {
  labelLocal: t = _(() => ""),
  valueLocal: n = _(() => "")
}) {
  const r = f(e, "isHiddenWithSearch"), a = f(e, "modelSearch"), l = f(e, "searching"), o = f(e, "searchingElements"), u = f(e, "showElementWennGroupFound"), {
    filterSearchHighlight: h
  } = sr(), A = _(() => !!(r.value || l.value && !u.value && !o.value[n.value])), E = _(() => A.value ? t.value : h(t.value, { searchModel: a.value })), p = _(() => A.value ? "display: none;" : void 0), T = _(() => A.value ? !0 : void 0);
  return {
    currentLabelFiltered: E,
    dataHideWithSearch: T,
    styleWithSearch: p
  };
}
const yd = {
  name: "ACheckboxItem",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !0
    },
    modelValue: {
      type: Array,
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: a
    } = yc(e), {
      classButton: l
    } = DT(e), {
      isChecked: o
    } = E1(e, {
      valueLocal: a
    }), {
      disabledElement: u
    } = Rc(e), {
      onClick: h,
      onKeydown: A
    } = p1(e, t, {
      isChecked: o,
      valueLocal: a
    }), {
      currentLabelFiltered: E,
      styleWithSearch: p
    } = Oc(e, {
      labelLocal: r,
      valueLocal: a
    }), {
      titleLocal: T
    } = BT(e);
    return {
      classButton: l,
      currentLabelFiltered: E,
      disabledElement: u,
      idLocal: n,
      isChecked: o,
      labelLocal: r,
      onClick: h,
      onKeydown: A,
      styleWithSearch: p,
      titleLocal: T,
      valueLocal: a
    };
  },
  render() {
    return this.isButtonGroup ? [
      c("input", {
        id: this.idLocal,
        checked: this.isChecked,
        class: "a_btn_check",
        disabled: this.disabledElement,
        name: this.id,
        style: this.styleWithSearch,
        type: "checkbox",
        value: this.valueLocal,
        onClick: this.onClick,
        onKeydown: this.onKeydown
      }),
      c(Oe, {
        alwaysTranslate: this.alwaysTranslate,
        class: this.classButton,
        classDefault: "",
        extra: {
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        },
        for: this.idLocal,
        tag: "label",
        title: this.titleLocal,
        type: "button"
      }, () => [
        this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          id: this.id,
          item: this.dataItem,
          itemIndex: this.itemIndex,
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        }) : this.labelLocal && Ft(c("span", {}), [
          [cn, this.currentLabelFiltered]
        ])
      ])
    ] : [
      c("div", {
        class: ["a_custom_control a_custom_checkbox", {
          a_custom_control_invalid: this.isErrors
        }],
        style: this.styleWithSearch
      }, [
        c("input", {
          id: this.idLocal,
          checked: this.isChecked,
          class: "a_custom_control_input",
          disabled: this.disabledElement,
          name: this.id,
          type: "checkbox",
          value: this.valueLocal,
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(Oe, {
          alwaysTranslate: this.alwaysTranslate,
          class: {
            a_custom_control_label: !0,
            a_custom_control_label_width_auto: this.isWidthAuto
          },
          classDefault: "",
          extra: {
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          },
          for: this.idLocal,
          tag: "label",
          title: this.titleLocal,
          type: "button"
        }, () => [
          this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            id: this.id,
            item: this.dataItem,
            itemIndex: this.itemIndex,
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          }) : this.labelLocal && Ft(c("span", {
            class: "a_custom_control_label__text"
          }), [
            [cn, this.currentLabelFiltered]
          ])
        ])
      ]),
      this.slotAppendName && this.$slots[this.slotAppendName] ? this.$slots[this.slotAppendName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        isChecked: this.isChecked,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : ""
    ];
  }
};
function M1(e) {
  const t = f(e, "data"), n = f(e, "modelValueObj"), r = _(() => {
    const o = {
      indeterminate: void 0,
      checkedAll: !1,
      checkedSome: !1,
      uncheckedSome: !1
    };
    return wn(n.value) || (Y(t.value, (u) => {
      const h = u[et];
      if (n.value[h] ? o.checkedSome = !0 : o.uncheckedSome = !0, o.checkedSome && o.uncheckedSome)
        return o.indeterminate = !0, !1;
    }), o.checkedSome && !o.uncheckedSome && (o.checkedAll = !0)), o;
  }), a = _(() => r.value.checkedAll), l = _(() => r.value.indeterminate);
  return {
    isCheckedAll: a,
    isIndeterminate: l
  };
}
function q1(e, { emit: t }, {
  isCheckedAll: n = _(() => !1),
  isIndeterminate: r = _(() => {
  })
}) {
  const a = f(e, "data"), l = f(e, "dataKeyByKeyId"), o = f(e, "modelValue"), u = () => Dt(o.value || [], (T) => !l.value[T]), h = ({ model: T }) => (Y(a.value, (m) => {
    const b = m[et];
    T.push(b);
  }), T), A = (T) => {
    let m = u();
    (r.value || !n.value) && (m = h({ model: m })), t("changeModelValue", {
      $event: T,
      model: m
    });
  }, E = (T) => {
    T.stopPropagation(), T.preventDefault(), A(T);
  };
  return {
    onClick: E,
    onKeydown: (T) => {
      (T.keyCode === X.enter || T.keyCode === X.space) && (E(T), T.stopPropagation(), T.preventDefault());
    }
  };
}
function $1(e) {
  const t = f(e, "id"), n = _(() => `${t.value}_legend`);
  return {
    idGroup: _(() => `${t.value}_group`),
    idLocal: n
  };
}
function k1(e) {
  const t = f(e, "label"), n = f(e, "modelSearch"), r = f(e, "showSearchHighlight"), {
    filterSearchHighlight: a
  } = sr();
  return {
    labelSearchHighlight: _(() => r.value ? a(t.value, { searchModel: n.value }) : t.value)
  };
}
const xT = {
  name: "ACheckboxLegend",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    dataKeyByKeyId: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: !1
    },
    id: {
      type: String,
      required: !0
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    label: {
      type: String,
      required: !1,
      default: void 0
    },
    legendClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    main: {
      type: Boolean,
      required: !1
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: () => []
    },
    modelValueObj: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    showSearchHighlight: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textAfterLabel: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idGroup: n,
      idLocal: r
    } = $1(e), {
      isCheckedAll: a,
      isIndeterminate: l
    } = M1(e), {
      onClick: o,
      onKeydown: u
    } = q1(e, t, {
      isCheckedAll: a,
      isIndeterminate: l
    }), {
      labelSearchHighlight: h
    } = k1(e);
    return {
      idGroup: n,
      idLocal: r,
      isCheckedAll: a,
      isIndeterminate: l,
      labelSearchHighlight: h,
      onClick: o,
      onKeydown: u
    };
  },
  render() {
    return this.hasControlCheckbox ? c("legend", {
      class: [
        "a_legend",
        {
          a_legend_invalid: this.isErrors
        },
        this.legendClass
      ]
    }, [
      c("div", {
        class: ["a_custom_control a_custom_checkbox", {
          a_custom_control_invalid: this.isErrors
        }]
      }, [
        c("input", {
          id: this.idLocal,
          "aria-controls": this.idGroup,
          checked: this.isCheckedAll,
          class: "a_custom_control_input",
          disabled: this.disabled,
          indeterminate: this.isIndeterminate,
          type: "checkbox",
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(Oe, {
          alwaysTranslate: this.alwaysTranslate,
          class: "a_custom_control_label a_custom_control_label_width_auto",
          classDefault: "",
          for: this.idLocal,
          html: this.labelSearchHighlight,
          textScreenReader: this.labelScreenReader,
          tag: "label",
          textAfter: this.textAfterLabel,
          textClass: "a_custom_control_label__text",
          type: "text"
        })
      ])
    ]) : c(Oe, {
      id: this.idLocal,
      class: [
        "a_legend",
        {
          a_legend_invalid: this.isErrors
        },
        this.legendClass
      ],
      html: this.labelSearchHighlight,
      tag: "legend",
      textAfter: this.textAfterLabel,
      textScreenReader: this.labelScreenReader,
      type: "text"
    });
  }
};
function H1(e) {
  const t = f(e, "levelIndex"), n = f(e, "groupsForLever"), r = f(e, "groupParentKey"), a = _(() => !!n.value[t.value]);
  return {
    currentGroups: _(() => {
      const o = n.value[t.value];
      return ae(r.value) ? o : Dt(n.value[t.value], ["groupParentKey", r.value]);
    }),
    isComponentVisible: a
  };
}
function U1(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = f(e, "modelValue");
  return {
    isChecked: _(() => Te(n.value) ? n.value.indexOf(t.value) !== -1 : n.value === t.value)
  };
}
function W1(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: a = _(() => {
  })
}) {
  const l = f(e, "dataItem"), o = (h) => {
    if (n.value || r.value) {
      h.preventDefault(), h.stopPropagation();
      return;
    }
    t("changeModelValue", {
      model: a.value,
      item: l.value,
      $event: h
    }), h.preventDefault(), h.stopPropagation();
  };
  return {
    onClick: o,
    onKeydown: (h) => {
      (h.key === "Enter" || h.keyCode === X.space) && (o(h), h.stopPropagation(), h.preventDefault());
    }
  };
}
const Rd = {
  name: "ARadioItem",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: a
    } = yc(e), {
      classButton: l
    } = DT(e), {
      isChecked: o
    } = U1(e, {
      valueLocal: a
    }), {
      disabledElement: u
    } = Rc(e), {
      onClick: h,
      onKeydown: A
    } = W1(e, t, {
      disabledElement: u,
      isChecked: o,
      valueLocal: a
    }), {
      currentLabelFiltered: E,
      styleWithSearch: p
    } = Oc(e, {
      labelLocal: r,
      valueLocal: a
    }), {
      titleLocal: T
    } = BT(e);
    return {
      classButton: l,
      currentLabelFiltered: E,
      disabledElement: u,
      idLocal: n,
      isChecked: o,
      labelLocal: r,
      onClick: h,
      onKeydown: A,
      styleWithSearch: p,
      titleLocal: T,
      valueLocal: a
    };
  },
  render() {
    return this.isButtonGroup ? [
      c("input", {
        id: this.idLocal,
        checked: this.isChecked,
        class: "a_btn_check",
        disabled: this.disabledElement,
        name: this.id,
        style: this.styleWithSearch,
        type: "radio",
        value: this.valueLocal,
        onClick: this.onClick,
        onKeydown: this.onKeydown
      }),
      c(Oe, {
        alwaysTranslate: this.alwaysTranslate,
        class: this.classButton,
        classDefault: "",
        extra: {
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        },
        for: this.idLocal,
        tag: "label",
        title: this.titleLocal,
        type: "button"
      }, () => [
        this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          id: this.id,
          item: this.dataItem,
          itemIndex: this.itemIndex,
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        }) : this.labelLocal && Ft(c("span", {}), [
          [cn, this.currentLabelFiltered]
        ])
      ])
    ] : [
      c("div", {
        class: ["a_custom_control a_custom_radio", {
          a_custom_control_invalid: this.isErrors
        }],
        style: this.styleWithSearch
      }, [
        c("input", {
          id: this.idLocal,
          checked: this.isChecked,
          class: "a_custom_control_input",
          disabled: this.disabledElement,
          name: this.id,
          type: "radio",
          value: this.valueLocal,
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(Oe, {
          alwaysTranslate: this.alwaysTranslate,
          class: {
            a_custom_control_label: !0,
            a_custom_control_label_width_auto: this.isWidthAuto
          },
          classDefault: "",
          extra: {
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          },
          for: this.idLocal,
          tag: "label",
          title: this.titleLocal,
          type: "button"
        }, () => [
          this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            id: this.id,
            item: this.dataItem,
            itemIndex: this.itemIndex,
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          }) : this.labelLocal && Ft(c("span", {
            class: "a_custom_control_label__text"
          }), [
            [cn, this.currentLabelFiltered]
          ])
        ])
      ]),
      this.slotAppendName && this.$slots[this.slotAppendName] ? this.$slots[this.slotAppendName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        isChecked: this.isChecked,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : ""
    ];
  }
};
function V1(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = f(e, "type"), r = f(e, "modelValue");
  return {
    isChecked: _(() => n.value === "multiselect" ? !!(r.value && r.value.indexOf(t.value) !== -1) : r.value === t.value)
  };
}
function G1(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: a = _(() => {
  })
}) {
  const l = (u) => {
    n.value || (t("changeModelValue", {
      currentValue: a.value,
      $event: u,
      isSelected: r.value
    }), u.stopPropagation(), u.preventDefault());
  };
  return {
    onClick: l,
    onKeydown: (u) => {
      n.value || (u.keyCode === X.enter || u.keyCode === X.space) && l(u);
    }
  };
}
const Cc = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-lg" viewBox="0 0 16 16">
  <path d="M12.736 3.97a.733.733 0 0 1 1.047 0c.286.289.29.756.01 1.05L7.88 12.01a.733.733 0 0 1-1.065.02L3.217 8.384a.757.757 0 0 1 0-1.06.733.733 0 0 1 1.047 0l3.052 3.093 5.4-6.425z"/>
</svg>`, Od = {
  name: "ASelectElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: a
    } = yc(e), {
      isChecked: l
    } = V1(e, {
      valueLocal: a
    }), {
      disabledElement: o
    } = Rc(e), {
      onClick: u,
      onKeydown: h
    } = G1(e, t, {
      disabledElement: o,
      isChecked: l,
      valueLocal: a
    }), {
      currentLabelFiltered: A,
      dataHideWithSearch: E,
      styleWithSearch: p
    } = Oc(e, {
      labelLocal: r,
      valueLocal: a
    });
    return {
      currentLabelFiltered: A,
      dataHideWithSearch: E,
      disabledElement: o,
      idLocal: n,
      isChecked: l,
      labelLocal: r,
      onClick: u,
      onKeydown: h,
      styleWithSearch: p
    };
  },
  render() {
    return c("div", {
      ariaSelected: this.isChecked,
      class: ["a_select__menu__link a_select__element_clickable", {
        a_select__menu__link_selected: this.isChecked,
        a_select__menu__link_disabled: this.disabledElement
      }],
      "data-hide": this.dataHideWithSearch,
      disabled: this.disabledElement,
      role: "option",
      style: this.styleWithSearch,
      tabindex: "-1",
      onClick: this.onClick,
      onKeydown: this.onKeydown
    }, [
      c("span", {
        class: "a_select__menu__link__icon_box"
      }, [
        this.isChecked && c(st, {
          icon: Cc
        })
      ]),
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered,
        inDropdown: !0
      }) : Ft(c("span"), [
        [cn, this.currentLabelFiltered]
      ])
    ]);
  }
};
function j1(e) {
  const t = f(e, "type"), n = _(() => t.value === "select" || t.value === "multiselect");
  return {
    currentComponent: _(() => t.value === "radio" ? Rd : t.value === "checkbox" ? yd : n.value ? Od : ""),
    isComponentSelect: n
  };
}
function z1({ emit: e }) {
  return {
    onChangeModelValue: (n) => {
      e("changeModelValue", n);
    }
  };
}
const Nc = {
  name: "ACheckboxRadioGroups",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    dataGrouped: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    groupParentKey: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    groupsForLever: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: !1
    },
    hideParentWithSearch: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    levelIndex: {
      type: Number,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    modelValueObj: {
      type: Object,
      required: !1,
      default: void 0
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    searchingGroups: {
      type: Object,
      required: !0
    },
    searchingGroupsWithSearchInGroup: {
      type: Object,
      required: !0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0,
      validator: (e) => ["radio", "checkbox", "select", "multiselect"].indexOf(e) !== -1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      onChangeModelValue: n
    } = z1(t), {
      currentComponent: r,
      isComponentSelect: a
    } = j1(e), {
      isComponentVisible: l,
      currentGroups: o
    } = H1(e);
    return {
      currentComponent: r,
      currentGroups: o,
      isComponentSelect: a,
      isComponentVisible: l,
      onChangeModelValue: n
    };
  },
  render() {
    return this.isComponentVisible ? [
      ...this.currentGroups.map((e, t) => {
        let n, r = !1, a = !1;
        if (this.searching) {
          const l = `${this.groupParentKey ? `${this.groupParentKey}_` : ""}${e.groupKey}`;
          a = this.searchingGroupsWithSearchInGroup[l], (this.isHiddenWithSearch || !this.searchingGroups[l] && !a) && (n = "display: none;", r = !0);
        }
        return e.groupKey === "_not_grouped" ? c("div", {
          class: [
            "a_checkbox_radio_group__data",
            {
              a_btn_group: this.isButtonGroup
            }
          ],
          style: n
        }, [
          ...this.dataGrouped[e.allGroupKeys].map((l, o) => c(this.currentComponent, {
            id: `${this.id}`,
            alwaysTranslate: this.alwaysTranslate,
            classButtonGroupDefault: this.isComponentSelect ? void 0 : this.classButtonGroupDefault,
            dataItem: l,
            disabled: this.disabled,
            isButtonGroup: this.isComponentSelect ? void 0 : this.isButtonGroup,
            isErrors: this.isComponentSelect ? void 0 : this.isErrors,
            isHiddenWithSearch: r,
            isWidthAuto: this.isComponentSelect ? void 0 : this.isWidthAuto,
            itemIndex: o,
            keyDisabled: this.keyDisabled,
            keyTitle: this.keyTitle,
            keyTitleCallback: this.keyTitleCallback,
            modelSearch: this.modelSearch,
            modelValue: this.modelValue,
            searching: this.searching,
            searchingElements: this.searchingElements,
            showElementWennGroupFound: a,
            slotAppendName: this.slotAppendName,
            slotName: this.slotName,
            type: this.type,
            onChangeModelValue: this.onChangeModelValue
          }, this.$slots))
        ]) : c("fieldset", {
          class: "a_fieldset",
          style: n
        }, [
          c(xT, {
            id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}`,
            alwaysTranslate: this.alwaysTranslate,
            data: e.data,
            dataKeyByKeyId: e.dataKeyByKeyId,
            disabled: this.disabled,
            hasControlCheckbox: this.hasControlCheckbox,
            isErrors: this.isErrors,
            label: e.groupLabel,
            modelSearch: this.modelSearch,
            modelValue: this.modelValue,
            modelValueObj: this.modelValueObj,
            showSearchHighlight: a,
            onChangeModelValue: this.onChangeModelValue
          }),
          c("div", {
            id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}_group`,
            "aria-labelledby": `${this.id}_lev_${this.levelIndex + 1}_gr_${t}_legend`,
            role: "group"
          }, [
            !!(this.dataGrouped[e.allGroupKeys] || []).length && c("div", {
              class: [
                "a_checkbox_radio_group__data",
                {
                  a_btn_group: this.isButtonGroup
                }
              ]
            }, [
              ...(this.dataGrouped[e.allGroupKeys] || []).map((l, o) => c(this.currentComponent, {
                id: `${this.id}_gr_${t}`,
                alwaysTranslate: this.alwaysTranslate,
                classButtonGroupDefault: this.isComponentSelect ? void 0 : this.classButtonGroupDefault,
                dataItem: l,
                disabled: this.disabled,
                isButtonGroup: this.isComponentSelect ? void 0 : this.isButtonGroup,
                isErrors: this.isComponentSelect ? void 0 : this.isErrors,
                isHiddenWithSearch: r,
                isWidthAuto: this.isComponentSelect ? void 0 : this.isWidthAuto,
                itemIndex: o,
                keyDisabled: this.keyDisabled,
                keyTitle: this.keyTitle,
                keyTitleCallback: this.keyTitleCallback,
                modelSearch: this.modelSearch,
                modelValue: this.modelValue,
                searching: this.searching,
                searchingElements: this.searchingElements,
                showElementWennGroupFound: a,
                slotAppendName: this.slotAppendName,
                slotName: this.slotName,
                type: this.type,
                onChangeModelValue: this.onChangeModelValue
              }, this.$slots))
            ]),
            c(Fr("ACheckboxRadioGroups"), {
              id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}`,
              alwaysTranslate: this.alwaysTranslate,
              classButtonGroupDefault: this.classButtonGroupDefault,
              dataGrouped: this.dataGrouped,
              disabled: this.disabled,
              groupParentKey: e.groupKey,
              groupsForLever: this.groupsForLever,
              hasControlCheckbox: this.hasControlCheckbox,
              isButtonGroup: this.isButtonGroup,
              isErrors: this.isErrors,
              isHiddenWithSearch: r,
              isWidthAuto: this.isWidthAuto,
              keyDisabled: this.keyDisabled,
              keyTitle: this.keyTitle,
              keyTitleCallback: this.keyTitleCallback,
              levelIndex: this.levelIndex + 1,
              modelSearch: this.modelSearch,
              modelValue: this.modelValue,
              modelValueObj: this.modelValueObj,
              searching: this.searching,
              searchingElements: this.searchingElements,
              searchingGroups: this.searchingGroups,
              searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
              slotName: this.slotName,
              slotAppendName: this.slotAppendName,
              type: this.type,
              onChangeModelValue: this.onChangeModelValue
            }, this.$slots)
          ])
        ]);
      })
    ] : null;
  }
};
function FT(e) {
  const t = f(e, "align"), n = f(e, "size"), r = f(e, "textAlign"), a = _(() => `a_text_${t.value}`), l = _(() => r.value === "left" ? "a_cloak__box_text_left" : "a_cloak__box_text_right"), o = _(() => `a_fs_${n.value}`);
  return {
    classAlign: a,
    classForBox: l,
    classTextSize: o
  };
}
const bi = B({
  propsDefault: {
    align: "center",
    extra: void 0,
    size: 6,
    tag: "div",
    text: "_A_CLOAK_LOADING_",
    textAlign: "right"
  }
}), Noe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    bi.value.propsDefault = {
      ...bi.value.propsDefault,
      ...t
    };
  }
}, al = {
  name: "ACloak",
  props: {
    align: {
      type: String,
      required: !1,
      default: () => bi.value.propsDefault.align,
      validator: (e) => ["left", "center", "right"].indexOf(e) !== -1
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: bi.value.propsDefault.extra
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => bi.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    spinnerClass: {
      type: [String, Object],
      required: !1,
      default: () => Pn.value.propsDefault.class
    },
    spinnerSafeHtml: {
      type: String,
      required: !1,
      default: () => Pn.value.propsDefault.safeHtml
    },
    spinnerTag: {
      type: String,
      required: !1,
      default: () => Pn.value.propsDefault.tag
    },
    tag: {
      type: String,
      required: !1,
      default: () => bi.value.propsDefault.tag
    },
    text: {
      type: String,
      required: !1,
      default: () => bi.value.propsDefault.text
    },
    textAlign: {
      type: String,
      required: !1,
      default: () => bi.value.propsDefault.textAlign,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    }
  },
  setup(e) {
    const {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    } = FT(e);
    return {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    };
  },
  render() {
    const e = this.textAlign === "left", t = c(pe, {
      alwaysTranslate: this.alwaysTranslate,
      tag: "span",
      class: [
        "a_cloak__text",
        e ? "a_cloak__text_left" : "a_cloak__text_right",
        this.classTextSize
      ],
      text: this.text,
      extra: this.extra
    });
    return c(
      this.tag,
      {
        role: "status",
        class: this.classAlign
      },
      [
        c("div", {
          class: ["a_cloak__box", this.classForBox]
        }, [
          e ? t : "",
          c(nl, {
            alwaysTranslate: this.alwaysTranslate,
            class: [
              "a_cloak__spinner",
              this.spinnerClass
            ],
            "aria-hidden": "true",
            safeHtml: this.spinnerSafeHtml,
            size: this.size,
            tag: this.spinnerTag
          }),
          e ? "" : t
        ])
      ]
    );
  }
}, nn = {
  name: "AErrorsText",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const t = f(e, "errors");
    return {
      errorsLocal: _(() => lt(t.value) ? [t.value] : t.value)
    };
  },
  render() {
    return c("ul", {
      id: this.id,
      class: "a_form_element__invalid_text"
    }, [
      this.errorsLocal.map((e) => c("li", null, e))
    ]);
  }
}, rn = {
  name: "AFormHelpText",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    html: {
      type: [String, Number],
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  render() {
    return this.html && c(pe, {
      id: this.id,
      alwaysTranslate: this.alwaysTranslate,
      class: "a_form_element__help_text",
      html: this.html,
      extra: this.extra
    });
  }
};
function K1({ emit: e }) {
  return {
    clearLocal: ({ $event: n }) => {
      n.stopPropagation(), n.preventDefault(), e("clear", n);
    }
  };
}
const oi = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
  <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z"/>
</svg>`, pu = {
  name: "AFormElementBtnClear",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    class: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_transparent_dark a_btn_small"
    },
    icon: {
      type: String,
      required: !1,
      default: oi
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    title: {
      type: String,
      required: !1,
      default: "_REMOVE_FIELD_CONTENT_"
    },
    textScreenReader: {
      type: String,
      required: !1,
      default: "_REMOVE_FIELD_CONTENT_"
    },
    tabindex: {
      type: Number,
      required: !1,
      default: -1
    },
    iconClass: {
      type: String,
      required: !1,
      default: "a_form_element__btn_close__icon"
    }
  },
  emits: [
    "clear"
  ],
  setup(e, t) {
    const {
      clearLocal: n
    } = K1(t);
    return {
      clearLocal: n
    };
  },
  render() {
    if (!this.disabled)
      return c(Oe, {
        class: [
          "a_form_control__actions__btn",
          this.class
        ],
        disabled: this.disabled,
        iconClass: this.iconClass,
        iconLeft: this.icon,
        onClick: this.clearLocal,
        tabindex: this.tabindex,
        textScreenReader: this.textScreenReader,
        title: this.title,
        type: "button"
      });
  }
};
function MT(e) {
  return `clickALabel_${e}`;
}
function Y1(e, {
  idLabelLocal: t = _(() => ""),
  preventLocal: n = _(() => !1),
  stopLocal: r = _(() => !1)
}) {
  const a = f(e, "clickLabel"), l = f(e, "id");
  return {
    onClick: ({ $event: u }) => {
      qe(a.value) && a.value({
        id: l.value,
        idLabel: t.value,
        $event: u
      }), n.value && (u == null || u.preventDefault()), r.value && (u == null || u.stopPropagation()), setTimeout(() => {
        Rt.$emit(MT(l.value), {
          id: l.value,
          idLabel: t.value,
          $event: u
        });
      });
    }
  };
}
function Z1(e, {
  hideForLocal: t = _(() => !1),
  hideIdLocal: n = _(() => !1)
}) {
  const r = f(e, "id"), a = f(e, "idSuffix"), l = _(() => {
    if (!n.value)
      return `${r.value}${a.value}`;
  });
  return {
    forLabelLocal: _(() => {
      if (!t.value)
        return r.value;
    }),
    idLabelLocal: l
  };
}
function X1(e) {
  const t = f(e, "isLabelFloat"), n = f(e, "label"), r = f(e, "required"), a = _(() => !ae(n.value)), l = _(() => a.value ? n.value : void 0), o = _(() => r.value && a.value ? "*" : ""), u = _(() => {
    if (t.value)
      return l.value;
  });
  return {
    isLabel: a,
    labelLocal: l,
    textAfterLabel: o,
    titleLocal: u
  };
}
const Ri = B({
  fieldset: !0,
  group: !0
}), Dc = B({
  multiselect: !0,
  checkbox: !0
}), qT = B({
  dateRange: !0,
  integerNonNegativeRange: !0,
  integerPositiveRange: !0,
  integerRange: !0,
  numberRange: !0
}), J1 = B({
  checkbox: !0,
  multiselect: !0,
  radio: !0,
  select: !0
}), Q1 = B({
  select: {
    hideFor: !0,
    prevent: !0
  },
  multiselect: {
    hideFor: !0,
    prevent: !0
  },
  file: {
    hideId: !0
  },
  // numberRange
  numberRange: {
    hideFor: !0,
    prevent: !0
  },
  integerNonNegativeRange: {
    hideFor: !0,
    prevent: !0
  },
  integerPositiveRange: {
    hideFor: !0,
    prevent: !0
  },
  integerRange: {
    hideFor: !0,
    prevent: !0
  },
  // numberRange /
  dateRange: {
    hideFor: !0,
    prevent: !0
  }
});
function ex(e) {
  const t = f(e, "hideFor"), n = f(e, "hideId"), r = f(e, "prevent"), a = f(e, "stop"), l = f(e, "type"), o = _(() => Q1.value[l.value] || {}), u = ({ prop: T, propForType: m }) => Pe(T) ? m : T, h = _(() => u({
    prop: a.value,
    propForType: o.value.stop
  })), A = _(() => u({
    prop: r.value,
    propForType: o.value.prevent
  })), E = _(() => u({
    prop: n.value,
    propForType: o.value.hideId
  }));
  return {
    hideForLocal: _(() => u({
      prop: t.value,
      propForType: o.value.hideFor
    })),
    hideIdLocal: E,
    preventLocal: A,
    stopLocal: h
  };
}
const kt = {
  name: "ALabel",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    clickLabel: {
      type: Function,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hideFor: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    hideId: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: "_label"
    },
    isError: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "label"
    },
    type: {
      type: String,
      required: !1
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = wt(e), {
      hideForLocal: n,
      hideIdLocal: r,
      preventLocal: a,
      stopLocal: l
    } = ex(e), {
      forLabelLocal: o,
      idLabelLocal: u
    } = Z1(e, {
      hideForLocal: n,
      hideIdLocal: r
    }), {
      isLabel: h,
      labelLocal: A,
      textAfterLabel: E,
      titleLocal: p
    } = X1(e), {
      onClick: T
    } = Y1(e, {
      idLabelLocal: u,
      preventLocal: a,
      stopLocal: l
    });
    return {
      attributesToExcludeFromRender: t,
      forLabelLocal: o,
      idLabelLocal: u,
      isLabel: h,
      labelLocal: A,
      onClick: T,
      textAfterLabel: E,
      titleLocal: p
    };
  },
  render() {
    return c(Oe, {
      id: this.idLabelLocal,
      alwaysTranslate: this.alwaysTranslate,
      class: [
        "a_form_element_label",
        this.labelClass,
        this.isLabelFloat ? "a_form_element_label_float" : "a_form_element_label_static",
        {
          a_form_element_label_error: this.isError
        }
      ],
      extra: this.extra,
      for: this.forLabelLocal,
      html: this.labelLocal,
      htmlScreenReader: this.labelScreenReader,
      loading: this.loading,
      loadingAlign: "right",
      loadingClass: "a_spinner_small a_form_element_label__spinner",
      tag: this.tag,
      textAfter: this.textAfterLabel,
      textAriaHidden: !!this.labelScreenReader,
      title: this.titleLocal,
      type: "text",
      onClick: this.onClick,
      ...this.attributesToExcludeFromRender
    });
  }
};
function tx({
  isBtnShowPasswordVisible: e = _(() => !1),
  isClearButtonLocal: t = _(() => !1)
}) {
  return {
    inputClassBtns: _(() => {
      if (e.value)
        return t.value ? "a_form_element_with_two_btns" : "a_form_element_with_one_btn";
      if (t.value)
        return "a_form_element_with_one_btn";
    })
  };
}
function nx(e) {
  const t = f(e, "modelValue"), n = f(e, "type");
  return {
    modelValueLocal: _(() => n.value === "color" && !t.value ? "#000000" : t.value)
  };
}
function rx(e, {
  changeModel: t = () => {
  }
}) {
  const n = f(e, "disabled"), r = f(e, "type"), a = B(void 0);
  return {
    inputRef: a,
    onInput: (o) => {
      if (n.value)
        return;
      let u = o.target.value;
      r.value === "integer" && (u = u.replace(/\D/g, ""), u !== "" && (u = +u), a.value.value = u), r.value === "number" && u !== "" && (u = +u), t({
        model: u
      });
    }
  };
}
const $T = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01757813,0,0,0.0175781,-0.02634961,0.65854895)"
  >
    <path
      d="m 318.642,688.822 44.574,-80.57 q -49.718,-35.998 -77.712,-90.858 -27.994,-54.86 -27.999,-116.002 0,-69.147 34.857,-128.572 Q 161.506,339.676 74.649,474.533 170.076,621.96 318.651,688.819 Z M 540.925,255.106 q 0,-11.42 -8.004,-19.424 -8.004,-8.004 -19.424,-8.004 -71.429,0 -122.571,51.142 -51.142,51.142 -51.142,122.571 0,11.42 8.004,19.424 8.004,8.004 19.424,8.004 11.42,0 19.424,-8.004 8.004,-8.004 8.004,-19.424 0,-49.143 34.857,-83.997 34.857,-34.854 83.997,-34.857 11.42,0 19.424,-8.004 8.004,-8.004 8.004,-19.424 z M 748.354,145.968 q 0,4.001 -0.584,5.141 -60.003,107.428 -179.999,323.427 -119.996,215.999 -180.573,324 l -27.999,50.859 q -5.725,9.142 -16.006,9.142 -6.864,0 -76.57,-40 -9.142,-5.725 -9.142,-16.006 0,-6.864 25.149,-49.718 Q 200.917,715.671 132.062,653.954 63.207,592.237 12.919,513.955 1.499,496.244 1.499,474.522 q 0,-21.722 11.42,-39.433 87.429,-134.286 217.143,-211.999 129.714,-77.713 283.429,-77.712 50.859,0 102.861,9.725 l 30.855,-55.425 q 5.725,-9.142 16.006,-9.142 2.863,0 10.282,3.418 7.419,3.418 17.711,8.865 10.292,5.447 18.858,10.564 8.566,5.117 18.008,10.564 9.442,5.447 11.143,6.566 9.142,5.725 9.142,15.423 z m 21.143,255.427 q 0,79.43 -45.141,144.859 -45.141,65.429 -119.429,94 l 160,-286.857 q 4.57,25.711 4.57,48 z m 256.002,73.144 q 0,20.008 -11.42,39.433 -22.287,36.571 -62.285,82.856 -85.714,98.284 -198.568,152.568 -112.854,54.284 -239.713,54.285 l 42.284,-75.43 q 121.144,-10.282 224.285,-78.29 103.141,-68.008 172.286,-175.429 -65.711,-102.285 -161.146,-168 l 35.998,-64.004 q 54.285,36.571 104.285,87.429 50,50.858 82.572,105.143 11.42,19.424 11.42,39.433 z"
    />
  </g>
</svg>`, kT = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01752671,0,0,0.01752691,-1.7526709e-5,0.68479724)"
  >
    <path
      d="M 953.646,474.431 Q 866.534,339.176 735.292,272.123 q 34.959,59.601 34.959,128.952 0,106.025 -75.367,181.39 -75.367,75.365 -181.39,75.367 -106.023,0.002 -181.39,-75.367 -75.367,-75.369 -75.367,-181.39 0,-69.35 34.959,-128.952 -131.243,67.052 -218.354,202.308 76.223,117.492 191.132,187.121 114.909,69.629 249.018,69.633 134.109,0.004 249.018,-69.633 114.909,-69.637 191.132,-187.121 z M 541.004,254.353 q 0,-11.454 -8.027,-19.481 -8.027,-8.027 -19.481,-8.027 -71.639,0 -122.932,51.293 -51.293,51.293 -51.293,122.932 0,11.454 8.027,19.481 8.027,8.027 19.481,8.027 11.454,0 19.481,-8.027 8.027,-8.027 8.027,-19.481 0,-49.288 34.959,-84.246 34.959,-34.958 84.246,-34.959 11.454,0 19.481,-8.027 Q 541,265.811 541,254.357 Z m 486.001,220.078 q 0,19.481 -11.454,39.549 Q 935.316,645.795 799.773,725.169 664.23,804.543 513.503,804.546 362.776,804.549 227.233,724.882 91.69,645.215 11.455,513.974 0.001,493.906 0.001,474.425 q 0,-19.481 11.454,-39.549 80.235,-131.243 215.778,-210.908 135.543,-79.665 286.27,-79.664 150.727,0.001 286.27,79.664 135.543,79.663 215.778,210.908 11.454,20.068 11.454,39.549 z"
    />
  </g>
</svg>`;
function ix(e, {
  setTypeLocal: t = () => {
  },
  typeForInput: n = _(() => "")
}) {
  const r = f(e, "showPassword"), a = f(e, "type"), l = _(() => !!(a.value === "password" && r.value)), o = _(() => n.value === "password"), u = _(() => o.value ? $T : kT), h = () => {
    t({
      type: o.value ? "text" : "password"
    });
  }, A = _(() => o.value ? "_A_INPUT_SHOW_PASSWORD_" : "_A_INPUT_HIDE_PASSWORD_");
  return {
    iconBtnShowPassword: u,
    isBtnShowPasswordVisible: l,
    titleBtnShowPassword: A,
    toggleTypePassword: h
  };
}
function ax(e) {
  const t = f(e, "type"), n = B(void 0), r = _(() => n.value === "integer" ? "text" : n.value);
  return {
    setTypeLocal: ({ type: l } = {}) => {
      l ? n.value = l : n.value = t.value;
    },
    typeForInput: r
  };
}
function sx(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = f(e, "errors"), r = _(() => n.value ? lt(n.value) ? !0 : Te(n.value) ? !!_s(n.value) : !1 : !1);
  return {
    errorsId: _(() => `${t.value}_errors_text`),
    isErrors: r
  };
}
function an(e, { emit: t }) {
  const n = f(e, "change"), r = f(e, "disabled"), a = f(e, "helpText"), l = f(e, "htmlId"), o = f(e, "id"), u = f(e, "idPrefix"), h = f(e, "modelUndefined"), A = f(e, "modelValue"), E = B(!1), p = _(() => sl({
    id: o.value,
    idPrefix: u.value,
    htmlId: l.value
  })), {
    errorsId: T,
    isErrors: m
  } = sx(e, {
    htmlIdLocal: p
  }), b = ({ model: w, currentModel: F, item: P }) => {
    t("update:modelValue", w), n.value({
      currentModel: F,
      id: o.value,
      item: P,
      model: w,
      props: e
    });
  }, L = _(() => !!(A.value || A.value === 0)), v = () => {
    r.value || b({
      model: h.value
    });
  }, I = _(() => `${p.value}_help_text`);
  return {
    ariaDescribedbyLocal: _(() => {
      let w = "";
      return a.value && (w += I.value), m.value && (w && (w += " "), w += T.value), w || void 0;
    }),
    changeModel: b,
    clearModel: v,
    errorsId: T,
    helpTextId: I,
    htmlIdLocal: p,
    isErrors: m,
    isFocus: E,
    isModel: L,
    onBlur: (w) => {
      E.value = !1, t("blur", {
        event: w,
        props: e
      });
    },
    onFocus: (w) => {
      E.value = !0, t("focus", {
        event: w,
        props: e
      });
    }
  };
}
function sl({ id: e, idPrefix: t, htmlId: n }) {
  return n || `${t || ""}${e}`;
}
function Tu(e, {
  isModel: t = _(() => !0)
} = {}) {
  const n = f(e, "isClearButton");
  return {
    isClearButtonLocal: _(() => !!(n.value && t.value))
  };
}
function bl(e) {
  const t = f(e, "disabled");
  return {
    disabledAttribut: _(() => {
      if (t.value === !0)
        return !0;
    })
  };
}
function Bc({
  inputRef: e = B(void 0)
}) {
  const t = B(void 0), n = () => {
    t.value = !0;
  }, r = () => {
    t.value = !1;
  }, a = (l) => {
    switch (l.animationName) {
      case "onAutoFillStart":
        return n();
      case "onAutoFillCancel":
        return r();
    }
  };
  return kr(() => {
    e.value && e.value.addEventListener("animationstart", a);
  }), Ot(() => {
    e.value && e.value.removeEventListener && e.value.removeEventListener("animationstart", a);
  }), {
    isAutofill: t
  };
}
function zt(e) {
  const t = f(e, "dependencies"), n = f(e, "isHide"), r = f(e, "modelDependencies"), a = ({ id: u, value: h }) => {
    var A;
    return ((A = r.value) == null ? void 0 : A[u]) === h;
  }, l = _(() => {
    if (!t.value)
      return !1;
    if (nt(t.value))
      return !a(t.value);
    if (Te(t.value)) {
      let u = !1;
      return Y(t.value, (h) => {
        if (!a(h))
          return u = !0, !1;
      }), u;
    }
    return !1;
  });
  return {
    componentStyleHide: _(() => n.value || l.value ? "display: none;" : "")
  };
}
const Sn = {
  name: "AInput",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => ot("a_input_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    maxlength: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    showPassword: {
      type: Boolean,
      required: !1,
      default: !0
    },
    step: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "text"
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const n = f(e, "type"), {
      disabledAttribut: r
    } = bl(e), {
      setTypeLocal: a,
      typeForInput: l
    } = ax(e), {
      attributesToExcludeFromRender: o
    } = wt(e), {
      componentStyleHide: u
    } = zt(e), {
      ariaDescribedbyLocal: h,
      changeModel: A,
      clearModel: E,
      errorsId: p,
      helpTextId: T,
      htmlIdLocal: m,
      isErrors: b,
      isModel: L,
      onBlur: v,
      onFocus: I
    } = an(e, t), {
      isClearButtonLocal: R
    } = Tu(e, {
      isModel: L
    }), {
      inputRef: y,
      onInput: C
    } = rx(e, {
      changeModel: A
    }), {
      iconBtnShowPassword: w,
      isBtnShowPasswordVisible: F,
      titleBtnShowPassword: P,
      toggleTypePassword: q
    } = ix(e, {
      setTypeLocal: a,
      typeForInput: l
    }), {
      isAutofill: N
    } = Bc({ inputRef: y }), {
      inputClassBtns: U
    } = tx({
      isBtnShowPasswordVisible: F,
      isClearButtonLocal: R
    }), {
      placeholderAttributes: V
    } = hl(e), {
      modelValueLocal: j
    } = nx(e);
    return tt(n, () => {
      a();
    }), a(), {
      ariaDescribedbyLocal: h,
      attributesToExcludeFromRender: o,
      clearModel: E,
      componentStyleHide: u,
      disabledAttribut: r,
      errorsId: p,
      helpTextId: T,
      htmlIdLocal: m,
      iconBtnShowPassword: w,
      inputClassBtns: U,
      inputRef: y,
      isAutofill: N,
      isBtnShowPasswordVisible: F,
      isClearButtonLocal: R,
      isErrors: b,
      isModel: L,
      modelValueLocal: j,
      onBlur: v,
      onFocus: I,
      onInput: C,
      placeholderAttributes: V,
      titleBtnShowPassword: P,
      toggleTypePassword: q,
      typeForInput: l
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel || this.isAutofill,
          a_form_element__parent_float_has_icon_prepend: this.iconPrepend
        }]
      }, [
        this.label || this.labelScreenReader ? c(kt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: this.isLabelFloat,
          isError: this.isErrors
        }) : "",
        c("div", {
          class: "a_form_element"
        }, [
          this.iconPrepend && c(st, {
            icon: this.iconPrepend,
            class: "a_input__icon_prepend"
          }),
          c("input", {
            ref: "inputRef",
            id: this.htmlIdLocal,
            autocomplete: this.autocomplete,
            value: this.modelValueLocal,
            type: this.typeForInput,
            class: [
              "a_form_control a_input",
              this.inputClass,
              this.inputClassBtns,
              {
                a_form_control_invalid: this.isErrors
              }
            ],
            disabled: this.disabledAttribut,
            ariaRequired: this.required,
            ariaInvalid: this.isErrors,
            "aria-describedby": this.ariaDescribedbyLocal,
            maxlength: this.maxlength,
            step: this.step,
            ...this.placeholderAttributes,
            ...this.inputAttributes,
            onInput: this.onInput,
            onFocus: this.onFocus,
            onBlur: this.onBlur
          }),
          this.isBtnShowPasswordVisible || this.isClearButtonLocal ? c("div", {
            class: "a_form_control__actions"
          }, [
            this.isBtnShowPasswordVisible ? c(rt, {
              alwaysTranslate: this.alwaysTranslate,
              class: "a_btn a_btn_transparent_dark a_btn_small a_form_control__actions__btn",
              iconLeft: this.iconBtnShowPassword,
              type: "button",
              title: this.titleBtnShowPassword,
              textScreenReader: this.titleBtnShowPassword,
              disabled: this.disabled,
              onClick: this.toggleTypePassword
            }) : "",
            this.isClearButtonLocal ? c(pu, {
              alwaysTranslate: this.alwaysTranslate,
              disabled: this.disabled,
              class: this.clearButtonClass,
              onClear: this.clearModel
            }) : ""
          ]) : ""
        ]),
        c(rn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(nn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function wc(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = f(e, "label"), r = _(() => `${t.value}_group`);
  return {
    groupAriaLabelledby: _(() => {
      if (n.value)
        return `${t.value}_legend`;
    }),
    groupId: r
  };
}
function lx(e, {
  changeModel: t = () => {
  }
}) {
  const n = f(e, "disabled");
  return {
    onChangeModelValue: ({ model: a, $event: l }) => {
      n.value || setTimeout(() => {
        t({
          model: a,
          $event: l
        });
      });
    }
  };
}
function ox(e) {
  const t = f(e, "modelValue");
  return {
    modelValueObj: _(() => {
      const r = {};
      return Y(t.value || [], (a) => {
        r[a] = !0;
      }), r;
    })
  };
}
function Pc(e) {
  const t = f(e, "required");
  return {
    textAfterLabel: _(() => t.value ? "*" : "")
  };
}
const cs = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708"/>
</svg>`, xc = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-up" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708z"/>
</svg>`;
function Fc(e, { emit: t }) {
  const n = f(e, "collapsible"), r = f(e, "id"), a = f(e, "isCollapsed"), l = f(e, "texts"), o = B(!1), u = _(() => o.value ? xc : cs), h = _(() => {
    var m;
    return ((m = l.value) == null ? void 0 : m.collapseOpen) || "_A_FIELDSET_COLLAPSE_OPEN_";
  }), A = _(() => {
    var m;
    return ((m = l.value) == null ? void 0 : m.collapseClose) || "_A_FIELDSET_COLLAPSE_CLOSE_";
  }), E = _(() => o.value ? h.value : A.value), p = () => {
    o.value = !o.value, t("toggleCollapse", { isCollapsed: o.value, id: r.value, props: e });
  }, T = () => {
    n.value ? o.value = a.value || !1 : o.value = !1;
  };
  return tt(a, () => {
    o.value = a.value || !1;
  }), {
    iconCollapse: u,
    initIsCollapsedLocal: T,
    isCollapsedLocal: o,
    titleCollapse: E,
    toggleCollapse: p
  };
}
function HT(e, t) {
  return function() {
    return e.apply(t, arguments);
  };
}
const { toString: ux } = Object.prototype, { getPrototypeOf: Mc } = Object, Su = /* @__PURE__ */ ((e) => (t) => {
  const n = ux.call(t);
  return e[n] || (e[n] = n.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null)), vr = (e) => (e = e.toLowerCase(), (t) => Su(t) === e), mu = (e) => (t) => typeof t === e, { isArray: fs } = Array, ll = mu("undefined");
function _x(e) {
  return e !== null && !ll(e) && e.constructor !== null && !ll(e.constructor) && Fn(e.constructor.isBuffer) && e.constructor.isBuffer(e);
}
const UT = vr("ArrayBuffer");
function dx(e) {
  let t;
  return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? t = ArrayBuffer.isView(e) : t = e && e.buffer && UT(e.buffer), t;
}
const cx = mu("string"), Fn = mu("function"), WT = mu("number"), bu = (e) => e !== null && typeof e == "object", fx = (e) => e === !0 || e === !1, Ro = (e) => {
  if (Su(e) !== "object")
    return !1;
  const t = Mc(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}, hx = vr("Date"), Ax = vr("File"), Ex = vr("Blob"), px = vr("FileList"), Tx = (e) => bu(e) && Fn(e.pipe), Sx = (e) => {
  let t;
  return e && (typeof FormData == "function" && e instanceof FormData || Fn(e.append) && ((t = Su(e)) === "formdata" || // detect form-data instance
  t === "object" && Fn(e.toString) && e.toString() === "[object FormData]"));
}, mx = vr("URLSearchParams"), [bx, Lx, vx, Ix] = ["ReadableStream", "Request", "Response", "Headers"].map(vr), gx = (e) => e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function Ll(e, t, { allOwnKeys: n = !1 } = {}) {
  if (e === null || typeof e > "u")
    return;
  let r, a;
  if (typeof e != "object" && (e = [e]), fs(e))
    for (r = 0, a = e.length; r < a; r++)
      t.call(null, e[r], r, e);
  else {
    const l = n ? Object.getOwnPropertyNames(e) : Object.keys(e), o = l.length;
    let u;
    for (r = 0; r < o; r++)
      u = l[r], t.call(null, e[u], u, e);
  }
}
function VT(e, t) {
  t = t.toLowerCase();
  const n = Object.keys(e);
  let r = n.length, a;
  for (; r-- > 0; )
    if (a = n[r], t === a.toLowerCase())
      return a;
  return null;
}
const pa = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : global, GT = (e) => !ll(e) && e !== pa;
function Cd() {
  const { caseless: e } = GT(this) && this || {}, t = {}, n = (r, a) => {
    const l = e && VT(t, a) || a;
    Ro(t[l]) && Ro(r) ? t[l] = Cd(t[l], r) : Ro(r) ? t[l] = Cd({}, r) : fs(r) ? t[l] = r.slice() : t[l] = r;
  };
  for (let r = 0, a = arguments.length; r < a; r++)
    arguments[r] && Ll(arguments[r], n);
  return t;
}
const yx = (e, t, n, { allOwnKeys: r } = {}) => (Ll(t, (a, l) => {
  n && Fn(a) ? e[l] = HT(a, n) : e[l] = a;
}, { allOwnKeys: r }), e), Rx = (e) => (e.charCodeAt(0) === 65279 && (e = e.slice(1)), e), Ox = (e, t, n, r) => {
  e.prototype = Object.create(t.prototype, r), e.prototype.constructor = e, Object.defineProperty(e, "super", {
    value: t.prototype
  }), n && Object.assign(e.prototype, n);
}, Cx = (e, t, n, r) => {
  let a, l, o;
  const u = {};
  if (t = t || {}, e == null) return t;
  do {
    for (a = Object.getOwnPropertyNames(e), l = a.length; l-- > 0; )
      o = a[l], (!r || r(o, e, t)) && !u[o] && (t[o] = e[o], u[o] = !0);
    e = n !== !1 && Mc(e);
  } while (e && (!n || n(e, t)) && e !== Object.prototype);
  return t;
}, Nx = (e, t, n) => {
  e = String(e), (n === void 0 || n > e.length) && (n = e.length), n -= t.length;
  const r = e.indexOf(t, n);
  return r !== -1 && r === n;
}, Dx = (e) => {
  if (!e) return null;
  if (fs(e)) return e;
  let t = e.length;
  if (!WT(t)) return null;
  const n = new Array(t);
  for (; t-- > 0; )
    n[t] = e[t];
  return n;
}, Bx = /* @__PURE__ */ ((e) => (t) => e && t instanceof e)(typeof Uint8Array < "u" && Mc(Uint8Array)), wx = (e, t) => {
  const r = (e && e[Symbol.iterator]).call(e);
  let a;
  for (; (a = r.next()) && !a.done; ) {
    const l = a.value;
    t.call(e, l[0], l[1]);
  }
}, Px = (e, t) => {
  let n;
  const r = [];
  for (; (n = e.exec(t)) !== null; )
    r.push(n);
  return r;
}, xx = vr("HTMLFormElement"), Fx = (e) => e.toLowerCase().replace(
  /[-_\s]([a-z\d])(\w*)/g,
  function(n, r, a) {
    return r.toUpperCase() + a;
  }
), SE = (({ hasOwnProperty: e }) => (t, n) => e.call(t, n))(Object.prototype), Mx = vr("RegExp"), jT = (e, t) => {
  const n = Object.getOwnPropertyDescriptors(e), r = {};
  Ll(n, (a, l) => {
    let o;
    (o = t(a, l, e)) !== !1 && (r[l] = o || a);
  }), Object.defineProperties(e, r);
}, qx = (e) => {
  jT(e, (t, n) => {
    if (Fn(e) && ["arguments", "caller", "callee"].indexOf(n) !== -1)
      return !1;
    const r = e[n];
    if (Fn(r)) {
      if (t.enumerable = !1, "writable" in t) {
        t.writable = !1;
        return;
      }
      t.set || (t.set = () => {
        throw Error("Can not rewrite read-only method '" + n + "'");
      });
    }
  });
}, $x = (e, t) => {
  const n = {}, r = (a) => {
    a.forEach((l) => {
      n[l] = !0;
    });
  };
  return fs(e) ? r(e) : r(String(e).split(t)), n;
}, kx = () => {
}, Hx = (e, t) => e != null && Number.isFinite(e = +e) ? e : t, Q_ = "abcdefghijklmnopqrstuvwxyz", mE = "0123456789", zT = {
  DIGIT: mE,
  ALPHA: Q_,
  ALPHA_DIGIT: Q_ + Q_.toUpperCase() + mE
}, Ux = (e = 16, t = zT.ALPHA_DIGIT) => {
  let n = "";
  const { length: r } = t;
  for (; e--; )
    n += t[Math.random() * r | 0];
  return n;
};
function Wx(e) {
  return !!(e && Fn(e.append) && e[Symbol.toStringTag] === "FormData" && e[Symbol.iterator]);
}
const Vx = (e) => {
  const t = new Array(10), n = (r, a) => {
    if (bu(r)) {
      if (t.indexOf(r) >= 0)
        return;
      if (!("toJSON" in r)) {
        t[a] = r;
        const l = fs(r) ? [] : {};
        return Ll(r, (o, u) => {
          const h = n(o, a + 1);
          !ll(h) && (l[u] = h);
        }), t[a] = void 0, l;
      }
    }
    return r;
  };
  return n(e, 0);
}, Gx = vr("AsyncFunction"), jx = (e) => e && (bu(e) || Fn(e)) && Fn(e.then) && Fn(e.catch), KT = ((e, t) => e ? setImmediate : t ? ((n, r) => (pa.addEventListener("message", ({ source: a, data: l }) => {
  a === pa && l === n && r.length && r.shift()();
}, !1), (a) => {
  r.push(a), pa.postMessage(n, "*");
}))(`axios@${Math.random()}`, []) : (n) => setTimeout(n))(
  typeof setImmediate == "function",
  Fn(pa.postMessage)
), zx = typeof queueMicrotask < "u" ? queueMicrotask.bind(pa) : typeof process < "u" && process.nextTick || KT, z = {
  isArray: fs,
  isArrayBuffer: UT,
  isBuffer: _x,
  isFormData: Sx,
  isArrayBufferView: dx,
  isString: cx,
  isNumber: WT,
  isBoolean: fx,
  isObject: bu,
  isPlainObject: Ro,
  isReadableStream: bx,
  isRequest: Lx,
  isResponse: vx,
  isHeaders: Ix,
  isUndefined: ll,
  isDate: hx,
  isFile: Ax,
  isBlob: Ex,
  isRegExp: Mx,
  isFunction: Fn,
  isStream: Tx,
  isURLSearchParams: mx,
  isTypedArray: Bx,
  isFileList: px,
  forEach: Ll,
  merge: Cd,
  extend: yx,
  trim: gx,
  stripBOM: Rx,
  inherits: Ox,
  toFlatObject: Cx,
  kindOf: Su,
  kindOfTest: vr,
  endsWith: Nx,
  toArray: Dx,
  forEachEntry: wx,
  matchAll: Px,
  isHTMLForm: xx,
  hasOwnProperty: SE,
  hasOwnProp: SE,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors: jT,
  freezeMethods: qx,
  toObjectSet: $x,
  toCamelCase: Fx,
  noop: kx,
  toFiniteNumber: Hx,
  findKey: VT,
  global: pa,
  isContextDefined: GT,
  ALPHABET: zT,
  generateString: Ux,
  isSpecCompliantForm: Wx,
  toJSONObject: Vx,
  isAsyncFn: Gx,
  isThenable: jx,
  setImmediate: KT,
  asap: zx
};
function ke(e, t, n, r, a) {
  Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = e, this.name = "AxiosError", t && (this.code = t), n && (this.config = n), r && (this.request = r), a && (this.response = a, this.status = a.status ? a.status : null);
}
z.inherits(ke, Error, {
  toJSON: function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: z.toJSONObject(this.config),
      code: this.code,
      status: this.status
    };
  }
});
const YT = ke.prototype, ZT = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
].forEach((e) => {
  ZT[e] = { value: e };
});
Object.defineProperties(ke, ZT);
Object.defineProperty(YT, "isAxiosError", { value: !0 });
ke.from = (e, t, n, r, a, l) => {
  const o = Object.create(YT);
  return z.toFlatObject(e, o, function(h) {
    return h !== Error.prototype;
  }, (u) => u !== "isAxiosError"), ke.call(o, e.message, t, n, r, a), o.cause = e, o.name = e.name, l && Object.assign(o, l), o;
};
const Kx = null;
function Nd(e) {
  return z.isPlainObject(e) || z.isArray(e);
}
function XT(e) {
  return z.endsWith(e, "[]") ? e.slice(0, -2) : e;
}
function bE(e, t, n) {
  return e ? e.concat(t).map(function(a, l) {
    return a = XT(a), !n && l ? "[" + a + "]" : a;
  }).join(n ? "." : "") : t;
}
function Yx(e) {
  return z.isArray(e) && !e.some(Nd);
}
const Zx = z.toFlatObject(z, {}, null, function(t) {
  return /^is[A-Z]/.test(t);
});
function Lu(e, t, n) {
  if (!z.isObject(e))
    throw new TypeError("target must be an object");
  t = t || new FormData(), n = z.toFlatObject(n, {
    metaTokens: !0,
    dots: !1,
    indexes: !1
  }, !1, function(L, v) {
    return !z.isUndefined(v[L]);
  });
  const r = n.metaTokens, a = n.visitor || E, l = n.dots, o = n.indexes, h = (n.Blob || typeof Blob < "u" && Blob) && z.isSpecCompliantForm(t);
  if (!z.isFunction(a))
    throw new TypeError("visitor must be a function");
  function A(b) {
    if (b === null) return "";
    if (z.isDate(b))
      return b.toISOString();
    if (!h && z.isBlob(b))
      throw new ke("Blob is not supported. Use a Buffer instead.");
    return z.isArrayBuffer(b) || z.isTypedArray(b) ? h && typeof Blob == "function" ? new Blob([b]) : Buffer.from(b) : b;
  }
  function E(b, L, v) {
    let I = b;
    if (b && !v && typeof b == "object") {
      if (z.endsWith(L, "{}"))
        L = r ? L : L.slice(0, -2), b = JSON.stringify(b);
      else if (z.isArray(b) && Yx(b) || (z.isFileList(b) || z.endsWith(L, "[]")) && (I = z.toArray(b)))
        return L = XT(L), I.forEach(function(y, C) {
          !(z.isUndefined(y) || y === null) && t.append(
            // eslint-disable-next-line no-nested-ternary
            o === !0 ? bE([L], C, l) : o === null ? L : L + "[]",
            A(y)
          );
        }), !1;
    }
    return Nd(b) ? !0 : (t.append(bE(v, L, l), A(b)), !1);
  }
  const p = [], T = Object.assign(Zx, {
    defaultVisitor: E,
    convertValue: A,
    isVisitable: Nd
  });
  function m(b, L) {
    if (!z.isUndefined(b)) {
      if (p.indexOf(b) !== -1)
        throw Error("Circular reference detected in " + L.join("."));
      p.push(b), z.forEach(b, function(I, R) {
        (!(z.isUndefined(I) || I === null) && a.call(
          t,
          I,
          z.isString(R) ? R.trim() : R,
          L,
          T
        )) === !0 && m(I, L ? L.concat(R) : [R]);
      }), p.pop();
    }
  }
  if (!z.isObject(e))
    throw new TypeError("data must be an object");
  return m(e), t;
}
function LE(e) {
  const t = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0"
  };
  return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function(r) {
    return t[r];
  });
}
function qc(e, t) {
  this._pairs = [], e && Lu(e, this, t);
}
const JT = qc.prototype;
JT.append = function(t, n) {
  this._pairs.push([t, n]);
};
JT.toString = function(t) {
  const n = t ? function(r) {
    return t.call(this, r, LE);
  } : LE;
  return this._pairs.map(function(a) {
    return n(a[0]) + "=" + n(a[1]);
  }, "").join("&");
};
function Xx(e) {
  return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
function QT(e, t, n) {
  if (!t)
    return e;
  const r = n && n.encode || Xx;
  z.isFunction(n) && (n = {
    serialize: n
  });
  const a = n && n.serialize;
  let l;
  if (a ? l = a(t, n) : l = z.isURLSearchParams(t) ? t.toString() : new qc(t, n).toString(r), l) {
    const o = e.indexOf("#");
    o !== -1 && (e = e.slice(0, o)), e += (e.indexOf("?") === -1 ? "?" : "&") + l;
  }
  return e;
}
class vE {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(t, n, r) {
    return this.handlers.push({
      fulfilled: t,
      rejected: n,
      synchronous: r ? r.synchronous : !1,
      runWhen: r ? r.runWhen : null
    }), this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(t) {
    this.handlers[t] && (this.handlers[t] = null);
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    this.handlers && (this.handlers = []);
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(t) {
    z.forEach(this.handlers, function(r) {
      r !== null && t(r);
    });
  }
}
const eS = {
  silentJSONParsing: !0,
  forcedJSONParsing: !0,
  clarifyTimeoutError: !1
}, Jx = typeof URLSearchParams < "u" ? URLSearchParams : qc, Qx = typeof FormData < "u" ? FormData : null, eF = typeof Blob < "u" ? Blob : null, tF = {
  isBrowser: !0,
  classes: {
    URLSearchParams: Jx,
    FormData: Qx,
    Blob: eF
  },
  protocols: ["http", "https", "file", "blob", "url", "data"]
}, $c = typeof window < "u" && typeof document < "u", Dd = typeof navigator == "object" && navigator || void 0, nF = $c && (!Dd || ["ReactNative", "NativeScript", "NS"].indexOf(Dd.product) < 0), rF = typeof WorkerGlobalScope < "u" && // eslint-disable-next-line no-undef
self instanceof WorkerGlobalScope && typeof self.importScripts == "function", iF = $c && window.location.href || "http://localhost", aF = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hasBrowserEnv: $c,
  hasStandardBrowserEnv: nF,
  hasStandardBrowserWebWorkerEnv: rF,
  navigator: Dd,
  origin: iF
}, Symbol.toStringTag, { value: "Module" })), tn = {
  ...aF,
  ...tF
};
function sF(e, t) {
  return Lu(e, new tn.classes.URLSearchParams(), Object.assign({
    visitor: function(n, r, a, l) {
      return tn.isNode && z.isBuffer(n) ? (this.append(r, n.toString("base64")), !1) : l.defaultVisitor.apply(this, arguments);
    }
  }, t));
}
function lF(e) {
  return z.matchAll(/\w+|\[(\w*)]/g, e).map((t) => t[0] === "[]" ? "" : t[1] || t[0]);
}
function oF(e) {
  const t = {}, n = Object.keys(e);
  let r;
  const a = n.length;
  let l;
  for (r = 0; r < a; r++)
    l = n[r], t[l] = e[l];
  return t;
}
function tS(e) {
  function t(n, r, a, l) {
    let o = n[l++];
    if (o === "__proto__") return !0;
    const u = Number.isFinite(+o), h = l >= n.length;
    return o = !o && z.isArray(a) ? a.length : o, h ? (z.hasOwnProp(a, o) ? a[o] = [a[o], r] : a[o] = r, !u) : ((!a[o] || !z.isObject(a[o])) && (a[o] = []), t(n, r, a[o], l) && z.isArray(a[o]) && (a[o] = oF(a[o])), !u);
  }
  if (z.isFormData(e) && z.isFunction(e.entries)) {
    const n = {};
    return z.forEachEntry(e, (r, a) => {
      t(lF(r), a, n, 0);
    }), n;
  }
  return null;
}
function uF(e, t, n) {
  if (z.isString(e))
    try {
      return (t || JSON.parse)(e), z.trim(e);
    } catch (r) {
      if (r.name !== "SyntaxError")
        throw r;
    }
  return (0, JSON.stringify)(e);
}
const vl = {
  transitional: eS,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [function(t, n) {
    const r = n.getContentType() || "", a = r.indexOf("application/json") > -1, l = z.isObject(t);
    if (l && z.isHTMLForm(t) && (t = new FormData(t)), z.isFormData(t))
      return a ? JSON.stringify(tS(t)) : t;
    if (z.isArrayBuffer(t) || z.isBuffer(t) || z.isStream(t) || z.isFile(t) || z.isBlob(t) || z.isReadableStream(t))
      return t;
    if (z.isArrayBufferView(t))
      return t.buffer;
    if (z.isURLSearchParams(t))
      return n.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1), t.toString();
    let u;
    if (l) {
      if (r.indexOf("application/x-www-form-urlencoded") > -1)
        return sF(t, this.formSerializer).toString();
      if ((u = z.isFileList(t)) || r.indexOf("multipart/form-data") > -1) {
        const h = this.env && this.env.FormData;
        return Lu(
          u ? { "files[]": t } : t,
          h && new h(),
          this.formSerializer
        );
      }
    }
    return l || a ? (n.setContentType("application/json", !1), uF(t)) : t;
  }],
  transformResponse: [function(t) {
    const n = this.transitional || vl.transitional, r = n && n.forcedJSONParsing, a = this.responseType === "json";
    if (z.isResponse(t) || z.isReadableStream(t))
      return t;
    if (t && z.isString(t) && (r && !this.responseType || a)) {
      const o = !(n && n.silentJSONParsing) && a;
      try {
        return JSON.parse(t);
      } catch (u) {
        if (o)
          throw u.name === "SyntaxError" ? ke.from(u, ke.ERR_BAD_RESPONSE, this, null, this.response) : u;
      }
    }
    return t;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: tn.classes.FormData,
    Blob: tn.classes.Blob
  },
  validateStatus: function(t) {
    return t >= 200 && t < 300;
  },
  headers: {
    common: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": void 0
    }
  }
};
z.forEach(["delete", "get", "head", "post", "put", "patch"], (e) => {
  vl.headers[e] = {};
});
const _F = z.toObjectSet([
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
]), dF = (e) => {
  const t = {};
  let n, r, a;
  return e && e.split(`
`).forEach(function(o) {
    a = o.indexOf(":"), n = o.substring(0, a).trim().toLowerCase(), r = o.substring(a + 1).trim(), !(!n || t[n] && _F[n]) && (n === "set-cookie" ? t[n] ? t[n].push(r) : t[n] = [r] : t[n] = t[n] ? t[n] + ", " + r : r);
  }), t;
}, IE = Symbol("internals");
function Us(e) {
  return e && String(e).trim().toLowerCase();
}
function Oo(e) {
  return e === !1 || e == null ? e : z.isArray(e) ? e.map(Oo) : String(e);
}
function cF(e) {
  const t = /* @__PURE__ */ Object.create(null), n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let r;
  for (; r = n.exec(e); )
    t[r[1]] = r[2];
  return t;
}
const fF = (e) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());
function ed(e, t, n, r, a) {
  if (z.isFunction(r))
    return r.call(this, t, n);
  if (a && (t = n), !!z.isString(t)) {
    if (z.isString(r))
      return t.indexOf(r) !== -1;
    if (z.isRegExp(r))
      return r.test(t);
  }
}
function hF(e) {
  return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (t, n, r) => n.toUpperCase() + r);
}
function AF(e, t) {
  const n = z.toCamelCase(" " + t);
  ["get", "set", "has"].forEach((r) => {
    Object.defineProperty(e, r + n, {
      value: function(a, l, o) {
        return this[r].call(this, t, a, l, o);
      },
      configurable: !0
    });
  });
}
class mn {
  constructor(t) {
    t && this.set(t);
  }
  set(t, n, r) {
    const a = this;
    function l(u, h, A) {
      const E = Us(h);
      if (!E)
        throw new Error("header name must be a non-empty string");
      const p = z.findKey(a, E);
      (!p || a[p] === void 0 || A === !0 || A === void 0 && a[p] !== !1) && (a[p || h] = Oo(u));
    }
    const o = (u, h) => z.forEach(u, (A, E) => l(A, E, h));
    if (z.isPlainObject(t) || t instanceof this.constructor)
      o(t, n);
    else if (z.isString(t) && (t = t.trim()) && !fF(t))
      o(dF(t), n);
    else if (z.isHeaders(t))
      for (const [u, h] of t.entries())
        l(h, u, r);
    else
      t != null && l(n, t, r);
    return this;
  }
  get(t, n) {
    if (t = Us(t), t) {
      const r = z.findKey(this, t);
      if (r) {
        const a = this[r];
        if (!n)
          return a;
        if (n === !0)
          return cF(a);
        if (z.isFunction(n))
          return n.call(this, a, r);
        if (z.isRegExp(n))
          return n.exec(a);
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(t, n) {
    if (t = Us(t), t) {
      const r = z.findKey(this, t);
      return !!(r && this[r] !== void 0 && (!n || ed(this, this[r], r, n)));
    }
    return !1;
  }
  delete(t, n) {
    const r = this;
    let a = !1;
    function l(o) {
      if (o = Us(o), o) {
        const u = z.findKey(r, o);
        u && (!n || ed(r, r[u], u, n)) && (delete r[u], a = !0);
      }
    }
    return z.isArray(t) ? t.forEach(l) : l(t), a;
  }
  clear(t) {
    const n = Object.keys(this);
    let r = n.length, a = !1;
    for (; r--; ) {
      const l = n[r];
      (!t || ed(this, this[l], l, t, !0)) && (delete this[l], a = !0);
    }
    return a;
  }
  normalize(t) {
    const n = this, r = {};
    return z.forEach(this, (a, l) => {
      const o = z.findKey(r, l);
      if (o) {
        n[o] = Oo(a), delete n[l];
        return;
      }
      const u = t ? hF(l) : String(l).trim();
      u !== l && delete n[l], n[u] = Oo(a), r[u] = !0;
    }), this;
  }
  concat(...t) {
    return this.constructor.concat(this, ...t);
  }
  toJSON(t) {
    const n = /* @__PURE__ */ Object.create(null);
    return z.forEach(this, (r, a) => {
      r != null && r !== !1 && (n[a] = t && z.isArray(r) ? r.join(", ") : r);
    }), n;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([t, n]) => t + ": " + n).join(`
`);
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(t) {
    return t instanceof this ? t : new this(t);
  }
  static concat(t, ...n) {
    const r = new this(t);
    return n.forEach((a) => r.set(a)), r;
  }
  static accessor(t) {
    const r = (this[IE] = this[IE] = {
      accessors: {}
    }).accessors, a = this.prototype;
    function l(o) {
      const u = Us(o);
      r[u] || (AF(a, o), r[u] = !0);
    }
    return z.isArray(t) ? t.forEach(l) : l(t), this;
  }
}
mn.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
z.reduceDescriptors(mn.prototype, ({ value: e }, t) => {
  let n = t[0].toUpperCase() + t.slice(1);
  return {
    get: () => e,
    set(r) {
      this[n] = r;
    }
  };
});
z.freezeMethods(mn);
function td(e, t) {
  const n = this || vl, r = t || n, a = mn.from(r.headers);
  let l = r.data;
  return z.forEach(e, function(u) {
    l = u.call(n, l, a.normalize(), t ? t.status : void 0);
  }), a.normalize(), l;
}
function nS(e) {
  return !!(e && e.__CANCEL__);
}
function hs(e, t, n) {
  ke.call(this, e ?? "canceled", ke.ERR_CANCELED, t, n), this.name = "CanceledError";
}
z.inherits(hs, ke, {
  __CANCEL__: !0
});
function rS(e, t, n) {
  const r = n.config.validateStatus;
  !n.status || !r || r(n.status) ? e(n) : t(new ke(
    "Request failed with status code " + n.status,
    [ke.ERR_BAD_REQUEST, ke.ERR_BAD_RESPONSE][Math.floor(n.status / 100) - 4],
    n.config,
    n.request,
    n
  ));
}
function EF(e) {
  const t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
  return t && t[1] || "";
}
function pF(e, t) {
  e = e || 10;
  const n = new Array(e), r = new Array(e);
  let a = 0, l = 0, o;
  return t = t !== void 0 ? t : 1e3, function(h) {
    const A = Date.now(), E = r[l];
    o || (o = A), n[a] = h, r[a] = A;
    let p = l, T = 0;
    for (; p !== a; )
      T += n[p++], p = p % e;
    if (a = (a + 1) % e, a === l && (l = (l + 1) % e), A - o < t)
      return;
    const m = E && A - E;
    return m ? Math.round(T * 1e3 / m) : void 0;
  };
}
function TF(e, t) {
  let n = 0, r = 1e3 / t, a, l;
  const o = (A, E = Date.now()) => {
    n = E, a = null, l && (clearTimeout(l), l = null), e.apply(null, A);
  };
  return [(...A) => {
    const E = Date.now(), p = E - n;
    p >= r ? o(A, E) : (a = A, l || (l = setTimeout(() => {
      l = null, o(a);
    }, r - p)));
  }, () => a && o(a)];
}
const Go = (e, t, n = 3) => {
  let r = 0;
  const a = pF(50, 250);
  return TF((l) => {
    const o = l.loaded, u = l.lengthComputable ? l.total : void 0, h = o - r, A = a(h), E = o <= u;
    r = o;
    const p = {
      loaded: o,
      total: u,
      progress: u ? o / u : void 0,
      bytes: h,
      rate: A || void 0,
      estimated: A && u && E ? (u - o) / A : void 0,
      event: l,
      lengthComputable: u != null,
      [t ? "download" : "upload"]: !0
    };
    e(p);
  }, n);
}, gE = (e, t) => {
  const n = e != null;
  return [(r) => t[0]({
    lengthComputable: n,
    total: e,
    loaded: r
  }), t[1]];
}, yE = (e) => (...t) => z.asap(() => e(...t)), SF = tn.hasStandardBrowserEnv ? /* @__PURE__ */ ((e, t) => (n) => (n = new URL(n, tn.origin), e.protocol === n.protocol && e.host === n.host && (t || e.port === n.port)))(
  new URL(tn.origin),
  tn.navigator && /(msie|trident)/i.test(tn.navigator.userAgent)
) : () => !0, mF = tn.hasStandardBrowserEnv ? (
  // Standard browser envs support document.cookie
  {
    write(e, t, n, r, a, l) {
      const o = [e + "=" + encodeURIComponent(t)];
      z.isNumber(n) && o.push("expires=" + new Date(n).toGMTString()), z.isString(r) && o.push("path=" + r), z.isString(a) && o.push("domain=" + a), l === !0 && o.push("secure"), document.cookie = o.join("; ");
    },
    read(e) {
      const t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
      return t ? decodeURIComponent(t[3]) : null;
    },
    remove(e) {
      this.write(e, "", Date.now() - 864e5);
    }
  }
) : (
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {
    },
    read() {
      return null;
    },
    remove() {
    }
  }
);
function bF(e) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e);
}
function LF(e, t) {
  return t ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "") : e;
}
function iS(e, t) {
  return e && !bF(t) ? LF(e, t) : t;
}
const RE = (e) => e instanceof mn ? { ...e } : e;
function Ia(e, t) {
  t = t || {};
  const n = {};
  function r(A, E, p, T) {
    return z.isPlainObject(A) && z.isPlainObject(E) ? z.merge.call({ caseless: T }, A, E) : z.isPlainObject(E) ? z.merge({}, E) : z.isArray(E) ? E.slice() : E;
  }
  function a(A, E, p, T) {
    if (z.isUndefined(E)) {
      if (!z.isUndefined(A))
        return r(void 0, A, p, T);
    } else return r(A, E, p, T);
  }
  function l(A, E) {
    if (!z.isUndefined(E))
      return r(void 0, E);
  }
  function o(A, E) {
    if (z.isUndefined(E)) {
      if (!z.isUndefined(A))
        return r(void 0, A);
    } else return r(void 0, E);
  }
  function u(A, E, p) {
    if (p in t)
      return r(A, E);
    if (p in e)
      return r(void 0, A);
  }
  const h = {
    url: l,
    method: l,
    data: l,
    baseURL: o,
    transformRequest: o,
    transformResponse: o,
    paramsSerializer: o,
    timeout: o,
    timeoutMessage: o,
    withCredentials: o,
    withXSRFToken: o,
    adapter: o,
    responseType: o,
    xsrfCookieName: o,
    xsrfHeaderName: o,
    onUploadProgress: o,
    onDownloadProgress: o,
    decompress: o,
    maxContentLength: o,
    maxBodyLength: o,
    beforeRedirect: o,
    transport: o,
    httpAgent: o,
    httpsAgent: o,
    cancelToken: o,
    socketPath: o,
    responseEncoding: o,
    validateStatus: u,
    headers: (A, E, p) => a(RE(A), RE(E), p, !0)
  };
  return z.forEach(Object.keys(Object.assign({}, e, t)), function(E) {
    const p = h[E] || a, T = p(e[E], t[E], E);
    z.isUndefined(T) && p !== u || (n[E] = T);
  }), n;
}
const aS = (e) => {
  const t = Ia({}, e);
  let { data: n, withXSRFToken: r, xsrfHeaderName: a, xsrfCookieName: l, headers: o, auth: u } = t;
  t.headers = o = mn.from(o), t.url = QT(iS(t.baseURL, t.url), e.params, e.paramsSerializer), u && o.set(
    "Authorization",
    "Basic " + btoa((u.username || "") + ":" + (u.password ? unescape(encodeURIComponent(u.password)) : ""))
  );
  let h;
  if (z.isFormData(n)) {
    if (tn.hasStandardBrowserEnv || tn.hasStandardBrowserWebWorkerEnv)
      o.setContentType(void 0);
    else if ((h = o.getContentType()) !== !1) {
      const [A, ...E] = h ? h.split(";").map((p) => p.trim()).filter(Boolean) : [];
      o.setContentType([A || "multipart/form-data", ...E].join("; "));
    }
  }
  if (tn.hasStandardBrowserEnv && (r && z.isFunction(r) && (r = r(t)), r || r !== !1 && SF(t.url))) {
    const A = a && l && mF.read(l);
    A && o.set(a, A);
  }
  return t;
}, vF = typeof XMLHttpRequest < "u", IF = vF && function(e) {
  return new Promise(function(n, r) {
    const a = aS(e);
    let l = a.data;
    const o = mn.from(a.headers).normalize();
    let { responseType: u, onUploadProgress: h, onDownloadProgress: A } = a, E, p, T, m, b;
    function L() {
      m && m(), b && b(), a.cancelToken && a.cancelToken.unsubscribe(E), a.signal && a.signal.removeEventListener("abort", E);
    }
    let v = new XMLHttpRequest();
    v.open(a.method.toUpperCase(), a.url, !0), v.timeout = a.timeout;
    function I() {
      if (!v)
        return;
      const y = mn.from(
        "getAllResponseHeaders" in v && v.getAllResponseHeaders()
      ), w = {
        data: !u || u === "text" || u === "json" ? v.responseText : v.response,
        status: v.status,
        statusText: v.statusText,
        headers: y,
        config: e,
        request: v
      };
      rS(function(P) {
        n(P), L();
      }, function(P) {
        r(P), L();
      }, w), v = null;
    }
    "onloadend" in v ? v.onloadend = I : v.onreadystatechange = function() {
      !v || v.readyState !== 4 || v.status === 0 && !(v.responseURL && v.responseURL.indexOf("file:") === 0) || setTimeout(I);
    }, v.onabort = function() {
      v && (r(new ke("Request aborted", ke.ECONNABORTED, e, v)), v = null);
    }, v.onerror = function() {
      r(new ke("Network Error", ke.ERR_NETWORK, e, v)), v = null;
    }, v.ontimeout = function() {
      let C = a.timeout ? "timeout of " + a.timeout + "ms exceeded" : "timeout exceeded";
      const w = a.transitional || eS;
      a.timeoutErrorMessage && (C = a.timeoutErrorMessage), r(new ke(
        C,
        w.clarifyTimeoutError ? ke.ETIMEDOUT : ke.ECONNABORTED,
        e,
        v
      )), v = null;
    }, l === void 0 && o.setContentType(null), "setRequestHeader" in v && z.forEach(o.toJSON(), function(C, w) {
      v.setRequestHeader(w, C);
    }), z.isUndefined(a.withCredentials) || (v.withCredentials = !!a.withCredentials), u && u !== "json" && (v.responseType = a.responseType), A && ([T, b] = Go(A, !0), v.addEventListener("progress", T)), h && v.upload && ([p, m] = Go(h), v.upload.addEventListener("progress", p), v.upload.addEventListener("loadend", m)), (a.cancelToken || a.signal) && (E = (y) => {
      v && (r(!y || y.type ? new hs(null, e, v) : y), v.abort(), v = null);
    }, a.cancelToken && a.cancelToken.subscribe(E), a.signal && (a.signal.aborted ? E() : a.signal.addEventListener("abort", E)));
    const R = EF(a.url);
    if (R && tn.protocols.indexOf(R) === -1) {
      r(new ke("Unsupported protocol " + R + ":", ke.ERR_BAD_REQUEST, e));
      return;
    }
    v.send(l || null);
  });
}, gF = (e, t) => {
  const { length: n } = e = e ? e.filter(Boolean) : [];
  if (t || n) {
    let r = new AbortController(), a;
    const l = function(A) {
      if (!a) {
        a = !0, u();
        const E = A instanceof Error ? A : this.reason;
        r.abort(E instanceof ke ? E : new hs(E instanceof Error ? E.message : E));
      }
    };
    let o = t && setTimeout(() => {
      o = null, l(new ke(`timeout ${t} of ms exceeded`, ke.ETIMEDOUT));
    }, t);
    const u = () => {
      e && (o && clearTimeout(o), o = null, e.forEach((A) => {
        A.unsubscribe ? A.unsubscribe(l) : A.removeEventListener("abort", l);
      }), e = null);
    };
    e.forEach((A) => A.addEventListener("abort", l));
    const { signal: h } = r;
    return h.unsubscribe = () => z.asap(u), h;
  }
}, yF = function* (e, t) {
  let n = e.byteLength;
  if (n < t) {
    yield e;
    return;
  }
  let r = 0, a;
  for (; r < n; )
    a = r + t, yield e.slice(r, a), r = a;
}, RF = async function* (e, t) {
  for await (const n of OF(e))
    yield* yF(n, t);
}, OF = async function* (e) {
  if (e[Symbol.asyncIterator]) {
    yield* e;
    return;
  }
  const t = e.getReader();
  try {
    for (; ; ) {
      const { done: n, value: r } = await t.read();
      if (n)
        break;
      yield r;
    }
  } finally {
    await t.cancel();
  }
}, OE = (e, t, n, r) => {
  const a = RF(e, t);
  let l = 0, o, u = (h) => {
    o || (o = !0, r && r(h));
  };
  return new ReadableStream({
    async pull(h) {
      try {
        const { done: A, value: E } = await a.next();
        if (A) {
          u(), h.close();
          return;
        }
        let p = E.byteLength;
        if (n) {
          let T = l += p;
          n(T);
        }
        h.enqueue(new Uint8Array(E));
      } catch (A) {
        throw u(A), A;
      }
    },
    cancel(h) {
      return u(h), a.return();
    }
  }, {
    highWaterMark: 2
  });
}, vu = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", sS = vu && typeof ReadableStream == "function", CF = vu && (typeof TextEncoder == "function" ? /* @__PURE__ */ ((e) => (t) => e.encode(t))(new TextEncoder()) : async (e) => new Uint8Array(await new Response(e).arrayBuffer())), lS = (e, ...t) => {
  try {
    return !!e(...t);
  } catch {
    return !1;
  }
}, NF = sS && lS(() => {
  let e = !1;
  const t = new Request(tn.origin, {
    body: new ReadableStream(),
    method: "POST",
    get duplex() {
      return e = !0, "half";
    }
  }).headers.has("Content-Type");
  return e && !t;
}), CE = 64 * 1024, Bd = sS && lS(() => z.isReadableStream(new Response("").body)), jo = {
  stream: Bd && ((e) => e.body)
};
vu && ((e) => {
  ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((t) => {
    !jo[t] && (jo[t] = z.isFunction(e[t]) ? (n) => n[t]() : (n, r) => {
      throw new ke(`Response type '${t}' is not supported`, ke.ERR_NOT_SUPPORT, r);
    });
  });
})(new Response());
const DF = async (e) => {
  if (e == null)
    return 0;
  if (z.isBlob(e))
    return e.size;
  if (z.isSpecCompliantForm(e))
    return (await new Request(tn.origin, {
      method: "POST",
      body: e
    }).arrayBuffer()).byteLength;
  if (z.isArrayBufferView(e) || z.isArrayBuffer(e))
    return e.byteLength;
  if (z.isURLSearchParams(e) && (e = e + ""), z.isString(e))
    return (await CF(e)).byteLength;
}, BF = async (e, t) => {
  const n = z.toFiniteNumber(e.getContentLength());
  return n ?? DF(t);
}, wF = vu && (async (e) => {
  let {
    url: t,
    method: n,
    data: r,
    signal: a,
    cancelToken: l,
    timeout: o,
    onDownloadProgress: u,
    onUploadProgress: h,
    responseType: A,
    headers: E,
    withCredentials: p = "same-origin",
    fetchOptions: T
  } = aS(e);
  A = A ? (A + "").toLowerCase() : "text";
  let m = gF([a, l && l.toAbortSignal()], o), b;
  const L = m && m.unsubscribe && (() => {
    m.unsubscribe();
  });
  let v;
  try {
    if (h && NF && n !== "get" && n !== "head" && (v = await BF(E, r)) !== 0) {
      let w = new Request(t, {
        method: "POST",
        body: r,
        duplex: "half"
      }), F;
      if (z.isFormData(r) && (F = w.headers.get("content-type")) && E.setContentType(F), w.body) {
        const [P, q] = gE(
          v,
          Go(yE(h))
        );
        r = OE(w.body, CE, P, q);
      }
    }
    z.isString(p) || (p = p ? "include" : "omit");
    const I = "credentials" in Request.prototype;
    b = new Request(t, {
      ...T,
      signal: m,
      method: n.toUpperCase(),
      headers: E.normalize().toJSON(),
      body: r,
      duplex: "half",
      credentials: I ? p : void 0
    });
    let R = await fetch(b);
    const y = Bd && (A === "stream" || A === "response");
    if (Bd && (u || y && L)) {
      const w = {};
      ["status", "statusText", "headers"].forEach((N) => {
        w[N] = R[N];
      });
      const F = z.toFiniteNumber(R.headers.get("content-length")), [P, q] = u && gE(
        F,
        Go(yE(u), !0)
      ) || [];
      R = new Response(
        OE(R.body, CE, P, () => {
          q && q(), L && L();
        }),
        w
      );
    }
    A = A || "text";
    let C = await jo[z.findKey(jo, A) || "text"](R, e);
    return !y && L && L(), await new Promise((w, F) => {
      rS(w, F, {
        data: C,
        headers: mn.from(R.headers),
        status: R.status,
        statusText: R.statusText,
        config: e,
        request: b
      });
    });
  } catch (I) {
    throw L && L(), I && I.name === "TypeError" && /fetch/i.test(I.message) ? Object.assign(
      new ke("Network Error", ke.ERR_NETWORK, e, b),
      {
        cause: I.cause || I
      }
    ) : ke.from(I, I && I.code, e, b);
  }
}), wd = {
  http: Kx,
  xhr: IF,
  fetch: wF
};
z.forEach(wd, (e, t) => {
  if (e) {
    try {
      Object.defineProperty(e, "name", { value: t });
    } catch {
    }
    Object.defineProperty(e, "adapterName", { value: t });
  }
});
const NE = (e) => `- ${e}`, PF = (e) => z.isFunction(e) || e === null || e === !1, oS = {
  getAdapter: (e) => {
    e = z.isArray(e) ? e : [e];
    const { length: t } = e;
    let n, r;
    const a = {};
    for (let l = 0; l < t; l++) {
      n = e[l];
      let o;
      if (r = n, !PF(n) && (r = wd[(o = String(n)).toLowerCase()], r === void 0))
        throw new ke(`Unknown adapter '${o}'`);
      if (r)
        break;
      a[o || "#" + l] = r;
    }
    if (!r) {
      const l = Object.entries(a).map(
        ([u, h]) => `adapter ${u} ` + (h === !1 ? "is not supported by the environment" : "is not available in the build")
      );
      let o = t ? l.length > 1 ? `since :
` + l.map(NE).join(`
`) : " " + NE(l[0]) : "as no adapter specified";
      throw new ke(
        "There is no suitable adapter to dispatch the request " + o,
        "ERR_NOT_SUPPORT"
      );
    }
    return r;
  },
  adapters: wd
};
function nd(e) {
  if (e.cancelToken && e.cancelToken.throwIfRequested(), e.signal && e.signal.aborted)
    throw new hs(null, e);
}
function DE(e) {
  return nd(e), e.headers = mn.from(e.headers), e.data = td.call(
    e,
    e.transformRequest
  ), ["post", "put", "patch"].indexOf(e.method) !== -1 && e.headers.setContentType("application/x-www-form-urlencoded", !1), oS.getAdapter(e.adapter || vl.adapter)(e).then(function(r) {
    return nd(e), r.data = td.call(
      e,
      e.transformResponse,
      r
    ), r.headers = mn.from(r.headers), r;
  }, function(r) {
    return nS(r) || (nd(e), r && r.response && (r.response.data = td.call(
      e,
      e.transformResponse,
      r.response
    ), r.response.headers = mn.from(r.response.headers))), Promise.reject(r);
  });
}
const uS = "1.7.9", Iu = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((e, t) => {
  Iu[e] = function(r) {
    return typeof r === e || "a" + (t < 1 ? "n " : " ") + e;
  };
});
const BE = {};
Iu.transitional = function(t, n, r) {
  function a(l, o) {
    return "[Axios v" + uS + "] Transitional option '" + l + "'" + o + (r ? ". " + r : "");
  }
  return (l, o, u) => {
    if (t === !1)
      throw new ke(
        a(o, " has been removed" + (n ? " in " + n : "")),
        ke.ERR_DEPRECATED
      );
    return n && !BE[o] && (BE[o] = !0, console.warn(
      a(
        o,
        " has been deprecated since v" + n + " and will be removed in the near future"
      )
    )), t ? t(l, o, u) : !0;
  };
};
Iu.spelling = function(t) {
  return (n, r) => (console.warn(`${r} is likely a misspelling of ${t}`), !0);
};
function xF(e, t, n) {
  if (typeof e != "object")
    throw new ke("options must be an object", ke.ERR_BAD_OPTION_VALUE);
  const r = Object.keys(e);
  let a = r.length;
  for (; a-- > 0; ) {
    const l = r[a], o = t[l];
    if (o) {
      const u = e[l], h = u === void 0 || o(u, l, e);
      if (h !== !0)
        throw new ke("option " + l + " must be " + h, ke.ERR_BAD_OPTION_VALUE);
      continue;
    }
    if (n !== !0)
      throw new ke("Unknown option " + l, ke.ERR_BAD_OPTION);
  }
}
const Co = {
  assertOptions: xF,
  validators: Iu
}, Br = Co.validators;
class Sa {
  constructor(t) {
    this.defaults = t, this.interceptors = {
      request: new vE(),
      response: new vE()
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(t, n) {
    try {
      return await this._request(t, n);
    } catch (r) {
      if (r instanceof Error) {
        let a = {};
        Error.captureStackTrace ? Error.captureStackTrace(a) : a = new Error();
        const l = a.stack ? a.stack.replace(/^.+\n/, "") : "";
        try {
          r.stack ? l && !String(r.stack).endsWith(l.replace(/^.+\n.+\n/, "")) && (r.stack += `
` + l) : r.stack = l;
        } catch {
        }
      }
      throw r;
    }
  }
  _request(t, n) {
    typeof t == "string" ? (n = n || {}, n.url = t) : n = t || {}, n = Ia(this.defaults, n);
    const { transitional: r, paramsSerializer: a, headers: l } = n;
    r !== void 0 && Co.assertOptions(r, {
      silentJSONParsing: Br.transitional(Br.boolean),
      forcedJSONParsing: Br.transitional(Br.boolean),
      clarifyTimeoutError: Br.transitional(Br.boolean)
    }, !1), a != null && (z.isFunction(a) ? n.paramsSerializer = {
      serialize: a
    } : Co.assertOptions(a, {
      encode: Br.function,
      serialize: Br.function
    }, !0)), Co.assertOptions(n, {
      baseUrl: Br.spelling("baseURL"),
      withXsrfToken: Br.spelling("withXSRFToken")
    }, !0), n.method = (n.method || this.defaults.method || "get").toLowerCase();
    let o = l && z.merge(
      l.common,
      l[n.method]
    );
    l && z.forEach(
      ["delete", "get", "head", "post", "put", "patch", "common"],
      (b) => {
        delete l[b];
      }
    ), n.headers = mn.concat(o, l);
    const u = [];
    let h = !0;
    this.interceptors.request.forEach(function(L) {
      typeof L.runWhen == "function" && L.runWhen(n) === !1 || (h = h && L.synchronous, u.unshift(L.fulfilled, L.rejected));
    });
    const A = [];
    this.interceptors.response.forEach(function(L) {
      A.push(L.fulfilled, L.rejected);
    });
    let E, p = 0, T;
    if (!h) {
      const b = [DE.bind(this), void 0];
      for (b.unshift.apply(b, u), b.push.apply(b, A), T = b.length, E = Promise.resolve(n); p < T; )
        E = E.then(b[p++], b[p++]);
      return E;
    }
    T = u.length;
    let m = n;
    for (p = 0; p < T; ) {
      const b = u[p++], L = u[p++];
      try {
        m = b(m);
      } catch (v) {
        L.call(this, v);
        break;
      }
    }
    try {
      E = DE.call(this, m);
    } catch (b) {
      return Promise.reject(b);
    }
    for (p = 0, T = A.length; p < T; )
      E = E.then(A[p++], A[p++]);
    return E;
  }
  getUri(t) {
    t = Ia(this.defaults, t);
    const n = iS(t.baseURL, t.url);
    return QT(n, t.params, t.paramsSerializer);
  }
}
z.forEach(["delete", "get", "head", "options"], function(t) {
  Sa.prototype[t] = function(n, r) {
    return this.request(Ia(r || {}, {
      method: t,
      url: n,
      data: (r || {}).data
    }));
  };
});
z.forEach(["post", "put", "patch"], function(t) {
  function n(r) {
    return function(l, o, u) {
      return this.request(Ia(u || {}, {
        method: t,
        headers: r ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url: l,
        data: o
      }));
    };
  }
  Sa.prototype[t] = n(), Sa.prototype[t + "Form"] = n(!0);
});
class kc {
  constructor(t) {
    if (typeof t != "function")
      throw new TypeError("executor must be a function.");
    let n;
    this.promise = new Promise(function(l) {
      n = l;
    });
    const r = this;
    this.promise.then((a) => {
      if (!r._listeners) return;
      let l = r._listeners.length;
      for (; l-- > 0; )
        r._listeners[l](a);
      r._listeners = null;
    }), this.promise.then = (a) => {
      let l;
      const o = new Promise((u) => {
        r.subscribe(u), l = u;
      }).then(a);
      return o.cancel = function() {
        r.unsubscribe(l);
      }, o;
    }, t(function(l, o, u) {
      r.reason || (r.reason = new hs(l, o, u), n(r.reason));
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason)
      throw this.reason;
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(t) {
    if (this.reason) {
      t(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(t) : this._listeners = [t];
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(t) {
    if (!this._listeners)
      return;
    const n = this._listeners.indexOf(t);
    n !== -1 && this._listeners.splice(n, 1);
  }
  toAbortSignal() {
    const t = new AbortController(), n = (r) => {
      t.abort(r);
    };
    return this.subscribe(n), t.signal.unsubscribe = () => this.unsubscribe(n), t.signal;
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let t;
    return {
      token: new kc(function(a) {
        t = a;
      }),
      cancel: t
    };
  }
}
function FF(e) {
  return function(n) {
    return e.apply(null, n);
  };
}
function MF(e) {
  return z.isObject(e) && e.isAxiosError === !0;
}
const Pd = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(Pd).forEach(([e, t]) => {
  Pd[t] = e;
});
function _S(e) {
  const t = new Sa(e), n = HT(Sa.prototype.request, t);
  return z.extend(n, Sa.prototype, t, { allOwnKeys: !0 }), z.extend(n, t, null, { allOwnKeys: !0 }), n.create = function(a) {
    return _S(Ia(e, a));
  }, n;
}
const Bt = _S(vl);
Bt.Axios = Sa;
Bt.CanceledError = hs;
Bt.CancelToken = kc;
Bt.isCancel = nS;
Bt.VERSION = uS;
Bt.toFormData = Lu;
Bt.AxiosError = ke;
Bt.Cancel = Bt.CanceledError;
Bt.all = function(t) {
  return Promise.all(t);
};
Bt.spread = FF;
Bt.isAxiosError = MF;
Bt.mergeConfig = Ia;
Bt.AxiosHeaders = mn;
Bt.formToJSON = (e) => tS(z.isHTMLForm(e) ? new FormData(e) : e);
Bt.getAdapter = oS.getAdapter;
Bt.HttpStatusCode = Pd;
Bt.default = Bt;
const dS = B("/api/"), xd = B(Bt.create()), Qn = B({}), No = B({}), cS = B({}), wr = {}, Sr = {}, fS = B({
  setUrlForArray: tM
});
function qF({ axiosCreateOptions: e = {} }) {
  xd.value = Bt.create(e);
}
function $F({ baseUrl: e = "" }) {
  dS.value = e;
}
function kF({ errorCallbacks: e = {} }) {
  No.value = e;
}
function HF({ headerParams: e = {} } = {}) {
  cS.value = e;
}
function UF({
  all: e = !1,
  abortGroup: t,
  excludeAbortGroup: n
}) {
  const r = iM({ excludeAbortGroup: n });
  if (e)
    Y(wr, (a, l) => {
      r[l] || (a.abort(), delete wr[l], Sr[t] && delete Sr[t]);
    });
  else if (t) {
    let a = [];
    lt(t) ? a.push(t) : Te(t) && (a = t), Y(a, (l) => {
      r[l] || wr[l] && (wr[l].abort(), delete wr[l], Sr[t] && delete Sr[t]);
    });
  }
}
function WF() {
  Qn.value = {};
}
function VF({ apiSaveId: e }) {
  e in Qn.value && delete Qn.value[e];
}
function GF() {
  return {
    abortHttp: UF,
    clearAllApiSaved: WF,
    clearApiSaved: VF,
    deleteHttp: JF,
    getHttp: jF,
    getListHttp: zF,
    getOptionsHttp: KF,
    patchHttp: XF,
    postHttp: YF,
    putHttp: ZF
  };
}
function jF({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: a,
  responseType: l,
  apiSaveId: o,
  keyId: u,
  fullResponse: h,
  showError: A,
  ignoreErrorHandler: E = !1,
  abortable: p = !0,
  abortGroup: T = ""
}) {
  return Ca({
    methodHttp: "get",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: a,
    responseType: l,
    apiSaveId: o,
    keyId: u,
    fullResponse: h,
    showError: A,
    ignoreErrorHandler: E,
    abortable: p,
    abortGroup: T
  });
}
function zF({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: a,
  responseType: l,
  apiSaveId: o,
  keyId: u,
  fullResponse: h,
  showError: A,
  ignoreErrorHandler: E = !1,
  abortable: p = !0,
  abortGroup: T = ""
}) {
  return Ca({
    methodHttp: "get",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: a,
    responseType: l,
    apiSaveId: o,
    keyId: u,
    fullResponse: h,
    showError: A,
    ignoreErrorHandler: E,
    abortable: p,
    abortGroup: T,
    expectedList: !0
  });
}
function KF({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: a,
  responseType: l,
  keyId: o,
  fullResponse: u,
  showError: h,
  ignoreErrorHandler: A = !1,
  abortable: E = !0,
  abortGroup: p = ""
}) {
  return Ca({
    methodHttp: "options",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: a,
    responseType: l,
    keyId: o,
    fullResponse: u,
    showError: h,
    abortable: E,
    abortGroup: p,
    ignoreErrorHandler: A
  });
}
function YF({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: a,
  responseType: l,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: h = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return Ca({
    methodHttp: "post",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: a,
    responseType: l,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: h
  });
}
function ZF({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: a,
  responseType: l,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: h = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return Ca({
    methodHttp: "put",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: a,
    responseType: l,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: h
  });
}
function XF({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: a,
  responseType: l,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: h = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return Ca({
    methodHttp: "patch",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: a,
    responseType: l,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: h
  });
}
function JF({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: a,
  responseType: l,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: h = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return Ca({
    methodHttp: "delete",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: a,
    responseType: l,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: h
  });
}
function Ca({
  methodHttp: e,
  url: t,
  urlBase: n,
  urlParams: r,
  data: a,
  headerParams: l = {},
  responseType: o = "json",
  apiSaveId: u,
  keyId: h,
  fullResponse: A,
  showError: E = !1,
  ignoreErrorHandler: p = !1,
  abortable: T = !0,
  abortGroup: m = "",
  expectedList: b
}) {
  let L;
  if (u && (L = Qn.value[u], L && L.loading))
    return L.promise;
  const v = new Promise((I, R) => {
    if (L && !L.loading) {
      if (h) {
        if (L.keyData)
          return I(L.keyData);
        const P = wE({ data: L.data, keyId: h });
        return Qn.value[u].keyData = P, I(P);
      }
      return I(L.data);
    }
    const y = eM({ url: t, params: r });
    let C = `${ae(n) ? dS.value : n}${y}`;
    C = C.replace(/\/\//g, "/");
    const w = {
      ...cS.value,
      ...l
    }, F = rM({ abortGroup: m, abortable: T });
    aM({ abortGroup: m, abortable: T }), xd.value({
      method: e,
      url: C,
      data: a,
      headers: w,
      responseType: o,
      signal: F
    }).then(
      (P) => {
        if (A)
          return I(P);
        const q = nM({ expectedList: b, response: P }), N = wE({ data: q, keyId: h });
        return u && (Qn.value[u].data = q, Qn.value[u].keyData = N, Qn.value[u].loading = !1), I(h ? N : q);
      },
      (P) => {
        if ((P == null ? void 0 : P.code) === "ERR_CANCELED")
          return R(P);
        if (p || QF({ error: P.response, showError: E, client: xd, reject: R, resolve: I }))
          return R(P.response);
      }
    ).finally(
      () => {
        sM({ abortGroup: m, abortable: T });
      }
    );
  });
  return L || (Qn.value[u] = Qn.value[u] || {}, Qn.value[u].loading = !0, Qn.value[u].promise = v), v;
}
function QF({ error: e, showError: t, client: n, resolve: r, reject: a }) {
  return e ? (() => {
    const o = No.value[e.status];
    return qe(o) ? o({ error: e, showError: t, client: n, resolve: r, reject: a }) : qe(No.value.all) ? No.value.all({ error: e, showError: t, client: n, resolve: r, reject: a }) : !0;
  })() : !0;
}
function eM({ url: e, params: t }) {
  const n = e || "";
  let r = "";
  Y(t, (l, o) => {
    Te(l) ? r = fS.value.setUrlForArray({ id: o, array: l, url: r }) : nt(l) ? Y(l, (u, h) => {
      u && (r && (r += "&"), r += `${h}=${u}`);
    }) : ae(l) || (r && (r += "&"), r += `${o}=${l}`);
  });
  const a = r && n ? n.indexOf("?") === -1 ? "?" : "&" : "";
  return `${n}${a}${r}`;
}
function tM({ array: e, url: t, id: n }) {
  if (!e.length)
    return t;
  let r = t || "";
  return n === "fields" || n === "ordering" ? (r && (r += "&"), r += `${n}=`, r += e.join(",")) : Y(e, (a) => {
    r && (r += "&"), r += `${n}=${a}`;
  }), r;
}
function wE({ data: e, keyId: t }) {
  if (t)
    return La(e, t);
}
function nM({ expectedList: e, response: t }) {
  return e ? Te(t.data) ? t.data : t.data.results ? t.data.results : [] : t.data;
}
function rM({ abortGroup: e = "_global", abortable: t } = {}) {
  if (t)
    return wr[e] = wr[e] || new AbortController(), wr[e].signal;
}
function iM({ excludeAbortGroup: e }) {
  const t = {};
  return e && (lt(e) ? t[e] = !0 : Te(e) && Y(e, (n) => {
    t[n] = !0;
  })), t;
}
function aM({ abortGroup: e, abortable: t }) {
  !t || !e || (Sr[e] ? Sr[e]++ : Sr[e] = 1);
}
function sM({ abortGroup: e, abortable: t }) {
  !t || !e || (Sr[e] && Sr[e]--, Sr[e] === 0 && wr[e] && (delete Sr[e], delete wr[e]));
}
function Doe({ url: e, allCommasToArray: t = !1, keysCommaToArray: n = [] } = {}) {
  let r = e || window.location.search.substring(1);
  try {
    r = decodeURI(r);
  } catch (o) {
    console.error(o);
  }
  const a = r.split("&"), l = {};
  return Y(a, (o) => {
    const u = o.split("=");
    if (u && u.length === 2)
      if (u[1].indexOf("[") !== -1 || u[1].indexOf("%5B") !== -1) {
        const h = u[1].replace("%5B", "[").replace("%5D", "]").replace(/%22/g, '"');
        l[u[0]] = JSON.parse(h);
      } else if (u[1].indexOf(",") !== -1 && (t || n.indexOf(u[0]) !== -1)) {
        const h = u[1].split(",");
        l[u[0]] = h;
      } else l[u[0]] ? lt(l[u[0]]) ? (l[u[0]] = [l[u[0]]], l[u[0]].push(u[1])) : Te(l[u[0]]) && l[u[0]].push(u[1]) : l[u[0]] = u[1];
  }), l;
}
function Hc(e, {
  changeModel: t = () => {
  },
  dataExtraLocal: n = _(() => []),
  dataFromServer: r = B([])
} = {}) {
  const a = f(e, "apiSaveId"), l = f(e, "isDataSimpleArray"), o = f(e, "keyId"), u = f(e, "keyLabel"), h = f(e, "searchApi"), A = f(e, "modelValue"), E = f(e, "searchApiKey"), p = f(e, "type"), T = f(e, "url"), m = f(e, "urlParams"), b = B(!1), L = B(void 0), {
    getListHttp: v
  } = GF(), I = _(() => !!(h.value && E.value && T.value)), R = _(() => [
    a,
    T,
    m
  ]), y = () => {
    if (!T.value || I.value) {
      r.value = [];
      return;
    }
    L.value = !0, v({
      url: T.value,
      urlParams: m.value,
      apiSaveId: a.value
    }).then(
      (j) => {
        r.value = j;
      }
    ).finally(
      () => {
        L.value = !1;
      }
    );
  }, C = _(() => p.value === "checkbox" || p.value === "multiselect"), w = (j, ne) => {
    !ae(ne) && !Dw(ne, j) && (y(), C.value ? t({
      model: [],
      currentModel: []
    }) : t({
      model: void 0,
      currentModel: void 0
    }));
  }, F = (j) => l.value ? LP(j) : dT(j, o.value), P = (j) => n.value.length ? !lc(n.value, [et, j]) : lt(j) || bn(j), q = _(() => {
    let j = [];
    return Te(A.value) && A.value.length ? j = Dt(A.value, (ne) => P(ne)) : P(A.value) && (j = [A.value]), j;
  }), N = ({ response: j }) => {
    const ne = Se(r.value), Z = [], le = Se(q.value);
    Y(ne, (oe) => {
      if (le.length === 0)
        return !1;
      const fe = l.value ? oe : de(oe, o.value), he = le.indexOf(fe);
      he !== -1 && (le.splice(he, 1), Z.push(oe));
    }), Z.push(...j), r.value = F(Z);
  };
  return {
    loadDataFromServer: y,
    loadDataFromServerForSearchAPI: () => {
      if (!I.value || !q.value.length)
        return;
      let j;
      if (o.value === "pk" ? j = Dt(q.value, (Z) => !ae(Z)) : j = Se(q.value), !j.length)
        return;
      L.value = !0;
      const ne = {
        ...m.value,
        [o.value]: j,
        limit: j.length
      };
      return v({
        url: T.value,
        urlParams: ne
      }).then(
        (Z) => {
          r.value = Z || [];
        }
      ).finally(() => {
        L.value = !1;
      });
    },
    loadingDataFromServer: L,
    loadingSearchApi: b,
    onSearchInApi: ({ search: j, data: ne = [] }) => {
      I.value && (b.value = !0, v({
        url: T.value,
        urlParams: {
          ...m.value || {},
          [E.value]: j
        }
      }).then(
        (Z) => {
          l.value && (Z = Nn(Z, (le) => le[u.value])), N({ response: Z, data: ne });
        }
      ).then(
        () => {
          b.value = !1;
        }
      ));
    },
    searchApiLocal: I,
    updateUrlPropsComputed: w,
    urlPropsComputed: R
  };
}
function Uc(e, {
  data: t = _(() => [])
}) {
  const n = f(e, "keyGroup"), r = f(e, "keyGroupLabelCallback"), a = f(e, "sortOrderGroup"), l = _(() => Te(n.value) ? n.value : lt(n.value) ? [n.value] : []), o = _(() => l.value.length > 0), u = _(() => {
    if (!o.value)
      return;
    const A = {};
    return Y(l.value, (E, p) => {
      A[p] = {};
    }), Y(t.value, (E) => {
      let p;
      const T = [];
      let m = "";
      Y(l.value, (b, L) => {
        let v = de(E, b);
        (ae(v) || v === "") && (v = "_not_grouped"), m += `${m ? "_" : ""}${v}`, A[L][m] || (A[L][m] = {
          groupKey: v,
          groupLabel: qe(r.value) ? r.value({ group: v, item: E }) : v,
          groupParentKey: p,
          allGroupKeys: m,
          allParentKeys: Se(T),
          data: [],
          dataKeyByKeyId: {}
        }), A[L][m].data.push(E), A[L][m].dataKeyByKeyId[E[et]] = E, p = v, T.push(v);
      });
    }), Y(A, (E, p) => {
      A[p] = oc(E);
    }), a.value && Y(A, (E, p) => {
      A[p] = uc(E, ["groupLabel"], [a.value]);
    }), A;
  });
  return {
    dataGrouped: _(() => {
      if (!o.value)
        return;
      const A = {};
      return Y(t.value, (E) => {
        let p = "";
        Y(l.value, (T) => {
          let m = de(E, T);
          if (ae(m) || m === "")
            return m = "_not_grouped", p += `${p ? "_" : ""}${m}`, !1;
          p += `${p ? "_" : ""}${m}`;
        }), A[p] = A[p] || [], A[p].push(E);
      }), A;
    }),
    groupsForLever: u,
    hasKeyGroup: o,
    keyGroupArray: l
  };
}
function Wc(e, {
  data: t = _(() => [])
}) {
  const n = f(e, "sortOrder");
  return {
    dataSort: _(() => n.value ? uc(t.value, [Lt], [n.value]) : t.value)
  };
}
function Vc({ emit: e }, {
  dataKeyByKeyIdLocal: t = _(() => ({})),
  dataLocal: n = _(() => ({}))
}) {
  tt(n, () => {
    e("updateData", {
      dataKeyByKeyId: t.value
    });
  }, {
    immediate: !0,
    deep: !0
  });
}
function Gc(e) {
  const t = f(e, "alwaysTranslate"), n = f(e, "data"), r = f(e, "dataExtra"), a = f(e, "isDataSimpleArray"), l = f(e, "keyId"), o = f(e, "keyLabel"), u = f(e, "keyLabelCallback"), h = f(e, "translateData"), A = B([]), E = _(() => gP(r.value)), p = ({ _data: C, _isArrayOfArrays: w = !1 }) => {
    const F = Se(C);
    if (w) {
      const P = [];
      return Y(F, (q) => {
        const N = q[0];
        let U = q[1];
        h.value && Ii(U) && (U = xt({ placeholder: U, alwaysTranslate: t.value })), P.push({
          [et]: N,
          [Lt]: U
        });
      }), P;
    }
    if (u.value) {
      if (a.value) {
        const P = [];
        return Y(F, (q) => {
          let N = u.value({ item: q });
          h.value && Ii(N) && (N = xt({ placeholder: N, alwaysTranslate: t.value })), P.push({
            [et]: q,
            [Lt]: N
          });
        }), P;
      }
      Y(F, (P) => {
        let q = u.value({ item: P });
        h.value && Ii(q) && (q = xt({ placeholder: q, alwaysTranslate: t.value })), P[et] = de(P, l.value), P[Lt] = q;
      });
    } else {
      if (a.value) {
        const P = [];
        return Y(F, (q) => {
          let N = q;
          h.value && Ii(N) && (N = xt({ placeholder: N, alwaysTranslate: t.value })), P.push({
            [et]: q,
            [Lt]: N
          });
        }), P;
      }
      Y(F, (P) => {
        let q = de(P, o.value);
        h.value && Ii(q) && (q = xt({ placeholder: q, alwaysTranslate: t.value })), P[et] = de(P, l.value), P[Lt] = q;
      });
    }
    return F;
  }, T = _(() => n.value || A.value), m = _(() => p({
    _data: T.value,
    _isArrayOfArrays: !1
  })), b = _(() => p({
    _data: r.value,
    _isArrayOfArrays: E.value
  })), L = _(() => La(b.value, et)), v = _(() => La(m.value, et)), I = _(() => ({
    ...L.value,
    ...v.value
  })), R = _(() => [
    ...b.value,
    ...m.value
  ]), y = _(() => b.value.length > 0);
  return {
    dataAll: R,
    dataExtraLocal: b,
    dataFromServer: A,
    dataKeyByKeyIdLocal: I,
    dataLocal: m,
    hasDataExtra: y
  };
}
function jc(e, {
  loadingDataFromServer: t = B(!1)
}) {
  const n = f(e, "loading");
  return {
    loadingLocal: _(() => !!(n.value || t.value))
  };
}
function zc(e, { emit: t }, {
  data: n = _(() => []),
  dataExtra: r = _(() => []),
  groupsForLever: a = _(() => {
  }),
  hasKeyGroup: l = _(() => !1),
  htmlIdLocal: o = _(() => ""),
  keyGroupArray: u = _(() => []),
  onSearchInApi: h = () => {
  },
  searchApiLocal: A = _(() => !1)
}) {
  const E = f(e, "searchTimeout"), p = f(e, "searchInGroup"), T = f(e, "searchOutside"), m = B(!1), b = B(""), L = B(""), v = B(!1), I = B({}), R = B({}), y = B({}), C = B({}), w = B(void 0), F = _(() => !!(T.value || A.value)), P = _(() => `${o.value}_search_global`), q = _(() => uT(b.value || "")), N = _(() => uu(q.value)), U = _(() => new RegExp(N.value, "gi")), V = () => {
    let he = !1;
    if (!p.value || !a.value) {
      C.value = {}, m.value = he;
      return;
    }
    const we = {}, Ie = {};
    Y(a.value, (se) => {
      Y(se, (me) => {
        const Le = me.groupLabel;
        Le === "_not_grouped" && !me.groupParentKey || (we[me.groupParentKey] ? (we[me.allGroupKeys] = !0, me.data.length && (he = !0)) : `${Le}`.search(U.value) !== -1 && (we[me.allGroupKeys] = !0, me.data.length && (he = !0), me.allParentKeys.length && Y(me.allParentKeys, (ce) => {
          Ie[ce] = !0;
        })));
      });
    }), C.value = {
      ...we,
      ...Ie
    }, m.value = he;
  }, j = () => {
    const he = {}, we = {}, Ie = {};
    b.value ? (v.value = !0, l.value ? (V(), Y(n.value, (se) => {
      const me = se[Lt], Le = se[et];
      if (`${me}`.search(U.value) !== -1) {
        we[Le] = !0;
        let ce = "";
        Y(u.value, (Ae) => {
          let $ = de(se, Ae);
          (ae($) || $ === "") && ($ = "_not_grouped"), ce += `${ce ? "_" : ""}${$}`, Ie[ce] = !0;
        });
      }
    })) : Y(n.value, (se) => {
      const me = se[Lt], Le = se[et];
      `${me}`.search(U.value) !== -1 && (we[Le] = !0);
    }), Y(r.value, (se) => {
      const me = se[Lt], Le = se[et];
      `${me}`.search(U.value) !== -1 && (he[Le] = !0);
    })) : v.value = !1, I.value = we, R.value = he, y.value = Ie;
  }, ne = _(() => !!(v.value && wn(R.value))), Z = _(() => !!(v.value && wn(I.value) && ne.value && !m.value));
  return {
    hasNotElementsExtraWithSearch: ne,
    hasNotElementsWithSearch: Z,
    idForButtonSearchOutside: P,
    modelSearch: b,
    modelSearchLowerCase: q,
    modelSearchOutside: L,
    onSearchOutside: (he) => {
      he && he.preventDefault(), h({
        search: L.value
      }), t("onSearchOutside", {
        model: L.value
      });
    },
    searching: v,
    searchingElements: I,
    searchingElementsExtra: R,
    searchingGroups: y,
    searchingGroupsWithSearchInGroup: C,
    searchOutsideOrApi: F,
    searchOutsideRef: w,
    updateModelSearch: (he) => {
      b.value = he, E.value ? setTimeout(() => {
        j();
      }, E.value) : j();
    },
    updateModelSearchOutside: (he) => {
      L.value = he;
    }
  };
}
const Il = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
  <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0"/>
</svg>`, lM = {
  name: "ACheckbox",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    classDataParent: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => []
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => ot("a_checkbox_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inline: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: void 0
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "value"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: Array,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    search: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: void 0
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrder: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_",
        notElementsWithSearch: "_A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_",
        search: "_A_CHECKBOX_SEARCH_"
      })
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "onSearchOutside",
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = wt(e), {
      componentStyleHide: r
    } = zt(e), {
      ariaDescribedbyLocal: a,
      changeModel: l,
      errorsId: o,
      helpTextId: u,
      htmlIdLocal: h,
      isErrors: A,
      onBlur: E,
      onFocus: p
    } = an(e, t), {
      textAfterLabel: T
    } = Pc(e), {
      dataAll: m,
      dataFromServer: b,
      dataExtraLocal: L,
      dataKeyByKeyIdLocal: v,
      dataLocal: I,
      hasDataExtra: R
    } = Gc(e), {
      loadDataFromServer: y,
      loadDataFromServerForSearchAPI: C,
      loadingDataFromServer: w,
      loadingSearchApi: F,
      onSearchInApi: P,
      searchApiLocal: q,
      updateUrlPropsComputed: N,
      urlPropsComputed: U
    } = Hc(e, {
      changeModel: l,
      dataExtraLocal: L,
      dataFromServer: b
    }), {
      loadingLocal: V
    } = jc(e, {
      loadingDataFromServer: w
    });
    Vc(t, {
      dataKeyByKeyIdLocal: v,
      dataLocal: I
    });
    const {
      dataSort: j
    } = Wc(e, {
      data: I
    }), {
      dataGrouped: ne,
      groupsForLever: Z,
      hasKeyGroup: le,
      keyGroupArray: oe
    } = Uc(e, {
      data: j
    }), {
      hasNotElementsExtraWithSearch: fe,
      hasNotElementsWithSearch: he,
      idForButtonSearchOutside: we,
      modelSearch: Ie,
      modelSearchLowerCase: se,
      modelSearchOutside: me,
      onSearchOutside: Le,
      searching: ce,
      searchingElements: Ae,
      searchingElementsExtra: $,
      searchingGroups: ee,
      searchingGroupsWithSearchInGroup: re,
      searchOutsideOrApi: be,
      searchOutsideRef: xe,
      updateModelSearch: He,
      updateModelSearchOutside: Ve
    } = zc(e, t, {
      data: j,
      dataExtra: L,
      groupsForLever: Z,
      htmlIdLocal: h,
      hasKeyGroup: le,
      keyGroupArray: oe,
      searchApiLocal: q,
      onSearchInApi: P
    }), {
      onChangeModelValue: Ye
    } = lx(e, {
      changeModel: l
    }), {
      iconCollapse: Re,
      initIsCollapsedLocal: je,
      isCollapsedLocal: ft,
      titleCollapse: $e,
      toggleCollapse: it
    } = Fc(e, t), {
      modelValueObj: _t
    } = ox(e), {
      groupId: mt
    } = wc(e, {
      htmlIdLocal: h
    });
    return tt(U, N, {
      deep: !0
    }), je(), y(), C(), {
      ariaDescribedbyLocal: a,
      attributesToExcludeFromRender: n,
      componentStyleHide: r,
      dataAll: m,
      dataExtraLocal: L,
      dataGrouped: ne,
      dataKeyByKeyIdLocal: v,
      dataSort: j,
      errorsId: o,
      groupId: mt,
      groupsForLever: Z,
      hasDataExtra: R,
      hasKeyGroup: le,
      hasNotElementsExtraWithSearch: fe,
      hasNotElementsWithSearch: he,
      helpTextId: u,
      htmlIdLocal: h,
      iconCollapse: Re,
      idForButtonSearchOutside: we,
      isCollapsedLocal: ft,
      isErrors: A,
      loadingLocal: V,
      loadingSearchApi: F,
      modelSearch: Ie,
      modelSearchLowerCase: se,
      modelSearchOutside: me,
      modelValueObj: _t,
      onBlur: E,
      onChangeModelValue: Ye,
      onFocus: p,
      onSearchOutside: Le,
      searching: ce,
      searchingElements: Ae,
      searchingElementsExtra: $,
      searchingGroups: ee,
      searchingGroupsWithSearchInGroup: re,
      searchOutsideOrApi: be,
      searchOutsideRef: xe,
      textAfterLabel: T,
      titleCollapse: $e,
      toggleCollapse: it,
      updateModelSearch: He,
      updateModelSearchOutside: Ve
    };
  },
  render() {
    var e, t, n;
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: [
          "a_form_element__parent",
          {
            a_checkbox_inline: this.inline,
            a_checkbox_control: this.hasControlCheckbox
          }
        ]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("fieldset", {
            id: this.htmlIdLocal,
            tabindex: -1,
            class: [
              "a_fieldset",
              this.classFieldset,
              {
                a_fieldset_no_border: !this.hasBorder,
                a_fieldset_invalid: this.isErrors,
                a_fieldset_collapsed: this.isCollapsedLocal
              }
            ],
            "aria-describedby": this.ariaDescribedbyLocal
          }, [
            this.label || this.labelScreenReader ? c(xT, {
              id: this.htmlIdLocal,
              alwaysTranslate: this.alwaysTranslate,
              data: this.dataAll,
              dataKeyByKeyId: this.dataKeyByKeyIdLocal,
              disabled: this.disabled,
              hasControlCheckbox: this.hasControlCheckbox,
              isErrors: this.isErrors,
              label: this.label,
              legendClass: this.labelClass,
              labelScreenReader: this.labelScreenReader,
              main: !0,
              modelValue: this.modelValue,
              modelValueObj: this.modelValueObj,
              textAfter: this.textAfterLabel,
              onChangeModelValue: this.onChangeModelValue
            }) : "",
            this.collapsible ? c(Oe, {
              "aria-controls": this.groupId,
              "aria-expanded": !this.isCollapsedLocal,
              alwaysTranslate: this.alwaysTranslate,
              class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
              iconLeft: this.iconCollapse,
              title: this.titleCollapse,
              textScreenReader: this.titleCollapse,
              type: "button",
              onClick: this.toggleCollapse
            }) : "",
            c("div", {
              id: this.groupId,
              class: "a_fieldset__content"
            }, [
              this.searchOutsideOrApi ? c("div", {
                class: "a_fieldset__search"
              }, [
                c("form", {
                  onSubmit: this.onSearchOutside
                }, [
                  c("div", {
                    class: "input-group"
                  }, [
                    c(Sn, {
                      alwaysTranslate: this.alwaysTranslate,
                      label: ((e = this.texts) == null ? void 0 : e.search) || "_A_CHECKBOX_SEARCH_",
                      inputClass: "a_select__element_clickable",
                      modelValue: this.modelSearchOutside,
                      modelUndefined: "",
                      "onUpdate:modelValue": this.updateModelSearchOutside
                    }),
                    c(Oe, {
                      alwaysTranslate: this.alwaysTranslate,
                      ariaDisabled: this.loadingSearchApi,
                      disabled: this.disabled,
                      class: "a_btn a_btn_primary",
                      type: "submit",
                      iconLeft: Il
                    })
                  ])
                ])
              ]) : "",
              this.search ? c(Sn, {
                alwaysTranslate: this.alwaysTranslate,
                label: ((t = this.texts) == null ? void 0 : t.search) || "_A_CHECKBOX_SEARCH_",
                class: "a_fieldset__search",
                modelValue: this.modelSearch,
                modelUndefined: "",
                "onUpdate:modelValue": this.updateModelSearch
              }) : "",
              this.loadingLocal ? c(al) : "",
              this.hasDataExtra ? c("div", {
                class: "a_checkbox__data_extra"
              }, [
                ...this.dataExtraLocal.map((r, a) => c(yd, {
                  key: a,
                  id: this.htmlIdLocal,
                  alwaysTranslate: this.alwaysTranslate,
                  idSuffix: "extra",
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataItem: r,
                  disabled: this.disabled,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  itemIndex: a,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElementsExtra,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.hasNotElementsExtraWithSearch ? "" : c("div", {
                  class: "a_divider",
                  ariaHidden: !0
                })
              ]) : "",
              c("div", {}, this.hasKeyGroup ? [
                c(Nc, {
                  id: `${this.htmlIdLocal}_lev_0`,
                  alwaysTranslate: this.alwaysTranslate,
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataGrouped: this.dataGrouped,
                  disabled: this.disabled,
                  hasControlCheckbox: this.hasControlCheckbox,
                  groupsForLever: this.groupsForLever,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  levelIndex: 0,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  modelValueObj: this.modelValueObj,
                  searching: this.searching,
                  searchingElements: this.searchingElements,
                  searchingGroups: this.searchingGroups,
                  searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  type: "checkbox",
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)
              ] : [
                c("div", {
                  class: [
                    "a_checkbox_data",
                    {
                      a_btn_group: this.isButtonGroup
                    },
                    this.classDataParent
                  ]
                }, [
                  ...this.dataSort.map((r, a) => c(yd, {
                    key: a,
                    id: this.htmlIdLocal,
                    alwaysTranslate: this.alwaysTranslate,
                    classButtonGroupDefault: this.classButtonGroupDefault,
                    dataItem: r,
                    disabled: this.disabled,
                    isButtonGroup: this.isButtonGroup,
                    isErrors: this.isErrors,
                    isWidthAuto: this.isWidthAuto,
                    itemIndex: a,
                    keyDisabled: this.keyDisabled,
                    keyTitle: this.keyTitle,
                    keyTitleCallback: this.keyTitleCallback,
                    modelSearch: this.modelSearchLowerCase,
                    modelValue: this.modelValue,
                    searching: this.searching,
                    searchingElements: this.searchingElements,
                    slotAppendName: this.slotAppendName,
                    slotName: this.slotName,
                    onChangeModelValue: this.onChangeModelValue
                  }, this.$slots))
                ])
              ]),
              !this.dataSort.length || this.hasNotElementsWithSearch ? c(pe, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_form__not_elements",
                text: ((n = this.texts) == null ? void 0 : n.notElementsWithSearch) || "_A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_"
              }) : ""
            ])
          ])
        ]),
        c(rn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(nn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, gl = {
  props: {
    id: {
      type: String,
      required: !0
    }
  },
  computed: {
    idForHeader() {
      return `${this.id}_header`;
    },
    nameForEventBusDestroyKeyDownEvent() {
      return `${this.id}DestroyKeyDown`;
    },
    attributesForMainElement() {
      return this.idForFocus ? {
        "aria-activedescendant": this.idForFocus
      } : {};
    }
  },
  created() {
    this.setEventBus();
  },
  beforeUnmount() {
    this.destroyEventBus(), this.destroyListenerForPressButtons();
  },
  methods: {
    setEventBus() {
      Rt.$on(this.nameForEventBusDestroyKeyDownEvent, this.destroyListenerForPressButtons);
    },
    emitEventBusDestroyAllListenerForPressButtonsForPanels() {
      Rt.$emit(this.nameForEventBusDestroyKeyDownEvent);
    },
    destroyEventBus() {
      Rt.$off(this.nameForEventBusDestroyKeyDownEvent, this.destroyListenerForPressButtons);
    },
    setListenerForPressButtons() {
      document.addEventListener("keydown", this.pressButton);
    },
    destroyListenerForPressButtons() {
      document.removeEventListener("keydown", this.pressButton), this.destroyListenerForPressButtonsCallback();
    },
    stopCurrentEvent(e) {
      e.preventDefault(), e.stopPropagation();
    },
    setFocusToElementWithTimeout(e) {
      setTimeout(() => {
        const t = document.getElementById(e);
        t && t.focus();
      });
    },
    destroyListenerForPressButtonsCallback() {
    }
  }
};
function zo(e) {
  return Object.prototype.toString.call(e) === "[object Object]";
}
function Fd(e) {
  return e instanceof Date;
}
function Tr(e) {
  return e == null ? !1 : !isNaN(new Date(e).getTime());
}
function oM(e) {
  return Array.isArray(e) && e.length === 2 && Tr(e[0]) && Tr(e[1]) && new Date(e[1]).getTime() >= new Date(e[0]).getTime();
}
function Ko(e, t) {
  if (!e)
    return "";
  try {
    return Dn(e).format(t);
  } catch {
    return "";
  }
}
function PE(e, t, n) {
  try {
    return Dn(e, n).format(t) || null;
  } catch {
    return null;
  }
}
const xE = {
  name: "APanelDate",
  mixins: [
    gl
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    startAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    endAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    dateFormat: {
      type: String,
      default: "YYYY-MM-DD"
    },
    calendarMonth: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getMonth()
    },
    calendarYear: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getFullYear()
    },
    firstDayOfWeek: {
      default: 7,
      type: Number,
      validator: (e) => e >= 1 && e <= 7
    },
    disabledDate: {
      type: Function,
      default: () => !1
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "handleIconMonth",
    "select"
  ],
  data() {
    return {
      dayForFocusButton: void 0
    };
  },
  computed: {
    ths() {
      return this.getDays(this.firstDayOfWeek);
    },
    dates() {
      return this.getDates(this.calendarYear, this.calendarMonth, this.firstDayOfWeek);
    },
    trsWithTds() {
      const e = [];
      for (let t = 0; t < 6; t++) {
        const n = [];
        this.dates.slice(7 * t, 7 * t + 7).forEach((r) => {
          const a = this.isCurrentDayToday(r), l = this.getCellTime(r), o = this.disabledDate(l);
          n.push({
            class: this.getCellClasses({
              cellTime: l,
              isToday: a,
              month: r.month
            }),
            id: this.getId({
              month: r.month,
              day: r.day
            }),
            year: r.year,
            month: r.month,
            fullDate: this.getCellTitle(r),
            date: r,
            label: r.day,
            isToday: a,
            isDisabled: o,
            isCurrentMonth: r.month === this.calendarMonth
          });
        }), e.push(n);
      }
      return e;
    },
    dayFromValueOrToday() {
      return this.dayFromValue || (/* @__PURE__ */ new Date()).getDate();
    },
    dayFromValue() {
      return this.value ? new Date(this.value).getDate() : "";
    },
    idForFocus() {
      return this.dayForFocusButton ? `${this.id}_${this.dayForFocusButton}` : "";
    },
    daysInMonth() {
      return Dn(`${this.calendarYear}_${this.calendarMonth + 1}`, "YYYY-MM").daysInMonth();
    },
    todayTranslate() {
      return this.currentLanguage.today;
    }
  },
  methods: {
    selectDate(e, { year: t, month: n, day: r }) {
      e.stopPropagation();
      const a = new Date(t, n, r);
      this.disabledDate(a) || this.$emit("select", a);
    },
    getDays(e) {
      const t = this.currentLanguage.days, n = parseInt(e, 10);
      return t.concat(t).slice(n, n + 7);
    },
    getDates(e, t, n) {
      const r = [], a = new Date(e, t);
      a.setDate(0);
      const l = (a.getDay() + 7 - n) % 7 + 1, o = a.getDate() - (l - 1);
      for (let A = 0; A < l; A++)
        r.push({ year: e, month: t - 1, day: o + A });
      a.setMonth(a.getMonth() + 2, 0);
      const u = a.getDate();
      for (let A = 0; A < u; A++)
        r.push({ year: e, month: t, day: 1 + A });
      a.setMonth(a.getMonth() + 1, 1);
      const h = 42 - (l + u);
      for (let A = 0; A < h; A++)
        r.push({ year: e, month: t + 1, day: 1 + A });
      return r;
    },
    isCurrentDayToday({ year: e, month: t, day: n }) {
      const r = this.getCellTime({ year: e, month: t, day: n }), a = (/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0);
      return r === a;
    },
    getCellClasses({ cellTime: e, isToday: t, month: n }) {
      const r = [], a = this.value && new Date(this.value).setHours(0, 0, 0, 0), l = this.startAt && new Date(this.startAt).setHours(0, 0, 0, 0), o = this.endAt && new Date(this.endAt).setHours(0, 0, 0, 0);
      return n < this.calendarMonth ? r.push("last-month") : n > this.calendarMonth ? r.push("next-month") : r.push("cur-month"), t && r.push("today"), this.disabledDate(e) && r.push("disabled"), a && (e === a ? r.push("actived") : (l && e <= a || o && e >= a) && r.push("inrange")), r.join(" ");
    },
    getCellTime({ year: e, month: t, day: n }) {
      return new Date(e, t, n).getTime();
    },
    getCellTitle({ year: e, month: t, day: n }) {
      return Ko(new Date(e, t, n), this.dateFormat);
    },
    getId({ month: e, day: t }) {
      let n = `${this.id}_${t}`;
      return e < this.calendarMonth ? n += "_last_month" : e > this.calendarMonth && (n += "_next_month"), n;
    },
    setFocusToActiveDay() {
      setTimeout(() => {
        this.setDefaultDayForFocusButton(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultDayForFocusButton() {
      this.dayForFocusButton = this.dayFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === X.arrowUp ? (this.setFocusToPast(7), this.stopCurrentEvent(e)) : t === X.arrowDown ? (this.setFocusToFuture(7), this.stopCurrentEvent(e)) : t === X.arrowLeft ? (this.setFocusToPast(1), this.stopCurrentEvent(e)) : t === X.arrowRight && (this.setFocusToFuture(1), this.stopCurrentEvent(e));
    },
    setFocusToPast(e) {
      const t = this.dayForFocusButton - e;
      t > 0 ? this.dayForFocusButton = t : (this.$emit("handleIconMonth", -1), setTimeout(() => {
        this.dayForFocusButton = this.daysInMonth - Math.abs(t);
      })), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToFuture(e) {
      const t = this.dayForFocusButton + e;
      if (t <= this.daysInMonth)
        this.dayForFocusButton = t;
      else {
        const n = this.daysInMonth;
        this.$emit("handleIconMonth", 1), this.dayForFocusButton = t - n;
      }
      this.setFocusToElementWithTimeout(this.idForFocus);
    },
    destroyListenerForPressButtonsCallback() {
      this.dayForFocusButton = void 0;
    }
  },
  render() {
    return c("table", {
      class: "pux_datepicker__panel pux_datepicker__panel_date",
      role: "grid",
      ariaReadonly: !0,
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      c("thead", null, [
        c("tr", null, [
          this.ths.map((e, t) => c("th", {
            key: t,
            ariaLabel: e.longName
          }, e.shortName))
        ])
      ]),
      c("tbody", null, [
        this.trsWithTds.map((e, t) => c("tr", {
          key: t
        }, [
          e.map((n, r) => c("td", {
            key: r,
            class: ["cell", n.class, {
              pux_datepicker__panel__cell_focus: n.id === this.idForFocus
            }]
          }, [
            c("button", {
              id: n.id,
              class: "pux_datepicker__panel__button",
              type: "button",
              tabindex: -1,
              ariaHidden: !0,
              ariaSelected: !!(n.isCurrentMonth && n.label === this.dayFromValue),
              onClick: (a) => this.selectDate(a, n.date)
            }, [
              c("span", {
                ariaHidden: !0
              }, n.label),
              c("span", {
                class: "a_sr_only"
              }, n.fullDate),
              n.isToday && c("span", {
                class: "a_sr_only"
              }, this.todayTranslate)
            ])
          ]))
        ]))
      ])
    ]);
  }
}, FE = {
  name: "APanelMonth",
  mixins: [
    gl
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    calendarYear: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getFullYear(),
      required: !1
    },
    disabledMonth: {
      type: Function,
      required: !1,
      default: void 0
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "handleIconYear",
    "select"
  ],
  data() {
    return {
      monthIndexForFocus: void 0
    };
  },
  computed: {
    currentYear() {
      return this.value && new Date(this.value).getFullYear();
    },
    currentMonth() {
      return this.value && new Date(this.value).getMonth();
    },
    monthsTranslate() {
      return this.currentLanguage.months;
    },
    months() {
      const e = [];
      return this.monthsTranslate.forEach((t, n) => {
        e.push({
          isActive: this.currentYear === this.calendarYear && this.currentMonth === n,
          isDisabled: this.isDisabled(n),
          label: t,
          id: this.getIdForMonth(n)
        });
      }), e;
    },
    idForFocus() {
      return Pe(this.monthIndexForFocus) ? "" : this.getIdForMonth(this.monthIndexForFocus);
    },
    monthFromValueOrToday() {
      return this.monthFromValue || (/* @__PURE__ */ new Date()).getMonth();
    },
    monthFromValue() {
      return this.value ? new Date(this.value).getMonth() : "";
    }
  },
  methods: {
    isDisabled(e) {
      return !!(typeof this.disabledMonth == "function" && this.disabledMonth(e));
    },
    selectMonth(e, t, n) {
      e.stopPropagation(), e.preventDefault(), !this.isDisabled(t) && this.$emit("select", { month: t, isButtonClick: n });
    },
    getIdForMonth(e) {
      return `${this.id}_month_${e}`;
    },
    setFocusToActiveMonth() {
      setTimeout(() => {
        this.setDefaultMonthForFocus(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultMonthForFocus() {
      this.monthIndexForFocus = this.monthFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === X.arrowUp || t === X.arrowLeft ? (this.setFocusToLastMonth(), this.stopCurrentEvent(e)) : (t === X.arrowDown || t === X.arrowRight) && (this.setFocusToNextMonth(), this.stopCurrentEvent(e));
    },
    setFocusToLastMonth() {
      const e = this.monthIndexForFocus - 1;
      e >= 0 ? this.monthIndexForFocus = e : (this.$emit("handleIconYear", -1), this.monthIndexForFocus = 11), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToNextMonth() {
      const e = this.monthIndexForFocus + 1;
      e <= 11 ? this.monthIndexForFocus = e : (this.$emit("handleIconYear", 1), this.monthIndexForFocus = 0), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    keypress(e, t) {
      (e.keyCode === X.enter || e.keyCode === X.space) && this.selectMonth(e, t);
    }
  },
  render() {
    return c("ul", {
      class: "pux_datepicker__panel pux_datepicker__panel_month pux_datepicker__panel__list",
      role: "listbox",
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      this.months.map((e, t) => c("li", {
        id: e.id,
        key: e.id,
        class: ["cell", {
          actived: e.isActive,
          disabled: e.isDisabled,
          pux_datepicker__panel__cell_focus: t === this.monthIndexForFocus
        }],
        role: "option",
        ariaSelected: !!e.isActive,
        tabindex: -1,
        onClick: (n) => this.selectMonth(n, t),
        onKeypress: (n) => this.keypress(n, t)
      }, e.label))
    ]);
  }
}, ME = {
  name: "APanelTime",
  mixins: [
    gl
  ],
  props: {
    minuteStep: {
      type: Number,
      default: 0,
      validator: (e) => e >= 0 && e <= 60
    },
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: void 0
    },
    timeType: {
      type: Array,
      default() {
        return ["24", "a"];
      }
    },
    disabledTime: {
      type: Function,
      required: !1,
      default: void 0
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "select"
  ],
  data() {
    return {
      timeIndexForFocus: void 0,
      columnIndexForFocus: void 0
    };
  },
  computed: {
    currentHours() {
      return this.value ? new Date(this.value).getHours() : 0;
    },
    currentMinutes() {
      return this.value ? new Date(this.value).getMinutes() : 0;
    },
    currentSeconds() {
      return this.value ? new Date(this.value).getSeconds() : 0;
    },
    date() {
      return this.value ? new Date(this.value) : (/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0);
    },
    isDisabledTimeFunction() {
      return typeof this.disabledTime == "function";
    },
    timesFiltered() {
      const e = [];
      let t = 0;
      const n = this.setColumn({
        times: this.hours,
        timeFunctionName: "setHours",
        currentTime: this.currentHours,
        ariaLabel: this.currentLanguage.hours,
        columnIndex: t
      });
      n.length && (e.push(n), t++);
      const r = this.setColumn({
        times: this.minutes,
        timeFunctionName: "setMinutes",
        currentTime: this.currentMinutes,
        ariaLabel: this.currentLanguage.minutes,
        columnIndex: t
      });
      r.length && (e.push(r), t++);
      const a = this.setColumn({
        times: this.seconds,
        timeFunctionName: "setSeconds",
        currentTime: this.currentSeconds,
        ariaLabel: this.currentLanguage.seconds,
        columnIndex: t
      });
      return a.length && e.push(a), e;
    },
    minuteStepLocal() {
      return this.minuteStep || 1;
    },
    minuteLength() {
      return parseInt(60 / this.minuteStepLocal);
    },
    hours() {
      return Array.apply(null, { length: 24 }).map((e, t) => t);
    },
    minutes() {
      return Array.apply(null, { length: this.minuteLength }).map(
        (e, t) => t * this.minuteStepLocal
      );
    },
    seconds() {
      return this.minuteStep === 0 ? Array.apply(null, { length: 60 }).map((e, t) => t) : [];
    },
    idForFocus() {
      return this.getCurrentId({
        columnIndex: this.columnIndexForFocus,
        rowIndex: this.timeIndexForFocus
      });
    },
    fullIndexForFocus() {
      return `${this.columnIndexForFocus}_${this.timeIndexForFocus}`;
    }
  },
  methods: {
    stringifyText(e) {
      return ("00" + e).slice(String(e).length);
    },
    selectTime(e, t) {
      typeof this.disabledTime == "function" && this.disabledTime(e) || this.$emit("select", new Date(e), t);
    },
    setColumn({ times: e, timeFunctionName: t, currentTime: n, ariaLabel: r, columnIndex: a }) {
      const l = [];
      return e.forEach((o, u) => {
        const h = new Date(this.date)[t](o), A = o === n, E = this.isDisabledTimeFunction && this.disabledTime(h), p = this.stringifyText(o);
        l.push({
          label: p,
          time: h,
          isActive: A,
          isDisabled: E,
          ariaLabel: `${r}: ${p}`,
          id: this.getCurrentId({
            columnIndex: a,
            rowIndex: u
          })
        });
      }), l;
    },
    getCurrentId({ columnIndex: e, rowIndex: t }) {
      return `${this.id}_time_${e}_${t}`;
    },
    setFocusToActiveTime() {
      setTimeout(() => {
        this.setDefaultTimeForFocus(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultTimeForFocus() {
      this.timeIndexForFocus = 0, this.columnIndexForFocus = 0;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === X.arrowUp ? (this.setFocusToLastTime(), this.stopCurrentEvent(e)) : t === X.arrowDown ? (this.setFocusToNextTime(), this.stopCurrentEvent(e)) : t === X.arrowLeft ? (this.setFocusToLastTimeColumn(), this.stopCurrentEvent(e)) : t === X.arrowRight && (this.setFocusToNextTimeColumn(), this.stopCurrentEvent(e));
    },
    setFocusToLastTime() {
      const e = this.timesFiltered[this.columnIndexForFocus];
      this.timeIndexForFocus > 0 ? this.timeIndexForFocus-- : this.timeIndexForFocus = e.length - 1, this.setFocusToElement(this.idForFocus);
    },
    setFocusToNextTime() {
      const e = this.timesFiltered[this.columnIndexForFocus];
      this.timeIndexForFocus < e.length - 1 ? this.timeIndexForFocus++ : this.timeIndexForFocus = 0, this.setFocusToElement(this.idForFocus);
    },
    setFocusToLastTimeColumn() {
      this.columnIndexForFocus > 0 ? this.columnIndexForFocus-- : this.columnIndexForFocus = this.timesFiltered.length - 1, this.timeIndexForFocus = 0, this.setFocusToElement(this.idForFocus);
    },
    setFocusToNextTimeColumn() {
      this.columnIndexForFocus < this.timesFiltered.length - 1 ? this.columnIndexForFocus++ : this.columnIndexForFocus = 0, this.timeIndexForFocus = 0, this.setFocusToElement(this.idForFocus);
    },
    setFocusToElement(e) {
      const t = document.getElementById(e);
      t && t.focus();
    },
    keypress(e, t, n) {
      (e.keyCode === X.enter || e.keyCode === X.space) && (this.selectTime(t, n), e.stopPropagation(), e.preventDefault());
    }
  },
  render() {
    return c("div", {
      class: "pux_datepicker__panel pux_datepicker__panel_time"
    }, [
      this.timesFiltered.map((e, t) => c("ul", {
        key: t,
        class: "pux_datepicker__time_list",
        role: "listbox",
        "aria-labelledby": this.idForHeader,
        style: { width: `${100 / this.timesFiltered.length}%` }
      }, [
        e.map((n, r) => c("li", {
          id: n.id,
          key: r,
          class: ["cell", {
            actived: n.isActive,
            disabled: n.isDisabled,
            pux_datepicker__panel__cell_focus: t + "_" + r === this.fullIndexForFocus
          }],
          tabindex: -1,
          role: "option",
          ariaSelected: !!n.isActive,
          ariaLabel: n.ariaLabel,
          onClick: () => this.selectTime(n.time),
          onKeypress: (a) => this.keypress(a, n.time, t === this.timesFiltered.length - 1)
        }, n.label))
      ]))
    ]);
  }
}, uM = {
  name: "APanelYearItem",
  props: {
    prefixForId: {
      type: String,
      required: !0
    },
    year: {
      type: Number,
      required: !0
    },
    yearFromValue: {
      type: Number,
      required: !1,
      default: void 0
    },
    yearIndex: {
      type: Number,
      required: !0
    },
    isDisabled: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "selectYear"
  ],
  computed: {
    isDisabledLocal() {
      return this.isDisabled(this.year);
    },
    isYearActive() {
      return this.yearFromValue === this.year;
    },
    idForList() {
      return `${this.prefixForId}${this.yearIndex}`;
    },
    ariaSelected() {
      return `${this.isYearActive}`;
    }
  },
  methods: {
    selectYearLocal(e, t) {
      e.stopPropagation(), e.preventDefault(), !this.isDisabledLocal && this.$emit("selectYear", { year: this.year, isButtonClick: t });
    },
    keypress(e) {
      (e.keyCode === X.enter || e.keyCode === X.space) && this.selectYearLocal(e, !0);
    }
  },
  render() {
    return c("li", {
      id: this.idForList,
      class: ["cell", {
        actived: this.isYearActive,
        disabled: this.isDisabledLocal
      }],
      role: "option",
      tabindex: -1,
      "aria-selected": this.ariaSelected,
      onClick: this.selectYearLocal,
      onKeypress: this.keypress
    }, this.year);
  }
}, qE = {
  name: "APanelYear",
  mixins: [
    gl
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    firstYear: {
      type: Number,
      required: !0
    },
    disabledYear: {
      type: Function,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "handleIconYear",
    "select"
  ],
  data() {
    return {
      yearIndexForFocus: void 0
    };
  },
  computed: {
    firstYearLocal() {
      return Math.floor(this.firstYear / 10) * 10;
    },
    yearFromValue() {
      return this.value && new Date(this.value).getFullYear();
    },
    idForFocus() {
      return Pe(this.yearIndexForFocus) ? "" : this.getIdForYear(this.yearIndexForFocus);
    },
    yearIndexFromValueOrToday() {
      const e = this.yearFromValueOrToday - this.firstYearLocal;
      return e <= 9 && e >= 0 ? e : 0;
    },
    yearFromValueOrToday() {
      return this.yearFromValue || (/* @__PURE__ */ new Date()).getFullYear();
    },
    prefixForId() {
      return `${this.id}_year_`;
    }
  },
  methods: {
    isDisabled(e) {
      return !!(typeof this.disabledYear == "function" && this.disabledYear(e));
    },
    selectYear({ year: e, isButtonClick: t }) {
      this.isDisabled(e) || this.$emit("select", { year: e, isButtonClick: t });
    },
    getIdForYear(e) {
      return `${this.prefixForId}${e}`;
    },
    setFocusToActiveYear() {
      setTimeout(() => {
        this.setDefaultYearForFocus(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultYearForFocus() {
      this.yearIndexForFocus = this.yearIndexFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === X.arrowUp || t === X.arrowLeft ? (this.setFocusToLastYear(), this.stopCurrentEvent(e)) : (t === X.arrowDown || t === X.arrowRight) && (this.setFocusToNextYear(), this.stopCurrentEvent(e));
    },
    setFocusToLastYear() {
      const e = this.yearIndexForFocus - 1;
      e >= 0 && e <= 9 ? this.yearIndexForFocus = e : (this.$emit("handleIconYear", -1), this.yearIndexForFocus = 9), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToNextYear() {
      const e = this.yearIndexForFocus + 1;
      e <= 9 && e >= 0 ? this.yearIndexForFocus = e : (this.$emit("handleIconYear", 1), this.yearIndexForFocus = 0), this.setFocusToElementWithTimeout(this.idForFocus);
    }
  },
  render() {
    return c("ul", {
      class: "pux_datepicker__panel pux_datepicker__panel_year pux_datepicker__panel__list",
      role: "listbox",
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      uP(10).map((e) => c(uM, {
        key: e,
        class: {
          pux_datepicker__panel__cell_focus: e === this.yearIndexForFocus
        },
        year: this.firstYearLocal + e,
        yearFromValue: this.yearFromValue,
        yearIndex: e,
        prefixForId: this.prefixForId,
        isDisabled: this.isDisabled,
        onSelectYear: this.selectYear
      }))
    ]);
  }
};
function _M(e, t) {
  if (!t) {
    e.scrollTop = 0;
    return;
  }
  const n = [];
  let r = t.offsetParent;
  for (; r && e !== r && e.contains(r); )
    n.push(r), r = r.offsetParent;
  const a = t.offsetTop + n.reduce((h, A) => h + A.offsetTop, 0), l = a + t.offsetHeight, o = e.scrollTop, u = o + e.clientHeight;
  a < o ? e.scrollTop = a : l > u && (e.scrollTop = l - e.clientHeight);
}
const rd = {
  name: "ADatepickerCalendarPanel",
  components: {
    APanelDate: xE,
    APanelMonth: FE,
    APanelTime: ME,
    APanelYear: qE
  },
  mixins: [
    gl
  ],
  props: {
    id: {
      type: String,
      required: !0
    },
    value: {
      default: null,
      validator: function(e) {
        return e === null || Tr(e);
      }
    },
    startAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    endAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    visible: {
      type: Boolean,
      default: !1
    },
    type: {
      type: String,
      default: "date"
      // ["date", "datetime"]
    },
    dateFormat: {
      type: String,
      default: "YYYY-MM-DD"
    },
    index: {
      type: Number,
      default: void 0
    },
    defaultValue: {
      validator: function(e) {
        return Tr(e);
      },
      default: void 0
    },
    firstDayOfWeek: {
      default: 1,
      type: Number,
      validator: (e) => e >= 1 && e <= 7
    },
    notBefore: {
      default: null,
      validator: function(e) {
        return !e || Tr(e);
      }
    },
    notAfter: {
      default: null,
      validator: function(e) {
        return !e || Tr(e);
      }
    },
    disabledDays: {
      type: [Array, Function],
      default: function() {
        return [];
      }
    },
    minuteStep: {
      type: Number,
      default: 0,
      validator: (e) => e >= 0 && e <= 60
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "closePopup",
    "selectDate",
    "selectTime"
  ],
  data() {
    const e = this.getNow(this.value), t = e.getFullYear(), n = e.getMonth(), r = Math.floor(t / 10) * 10;
    return {
      panel: "NONE",
      dates: [],
      calendarMonth: n,
      calendarYear: t,
      firstYear: r,
      isFocusPanelChild: !1,
      isWorkWithKeyboard: !1
    };
  },
  computed: {
    now: {
      get() {
        return new Date(this.calendarYear, this.calendarMonth).getTime();
      },
      set(e) {
        const t = new Date(e);
        this.calendarYear = t.getFullYear(), this.calendarMonth = t.getMonth();
      }
    },
    timeType() {
      const e = /h+/.test(this.$parent.format) ? "12" : "24", t = /A/.test(this.$parent.format) ? "A" : "a";
      return [e, t];
    },
    timeHeader() {
      return this.type === "time" ? this.$parent.format : this.value && Ko(this.value, this.dateFormat);
    },
    yearHeader() {
      const e = this.firstYear + 9;
      return this.currentLanguage.headerYears(this.firstYear, e);
    },
    months() {
      return this.currentLanguage.months;
    },
    notBeforeTime() {
      return this.getCriticalTime(this.notBefore);
    },
    notAfterTime() {
      return this.getCriticalTime(this.notAfter);
    },
    suffixForHeader() {
      return this.panel === "TIME" ? this.currentLanguage.placeholder.regionTime : this.currentLanguage.placeholder.regionDate;
    },
    idForHeaderParent() {
      return `${this.idForHeader}_parent`;
    },
    ariaLabelForButtonLastYear() {
      return this.panel === "YEAR" ? this.currentLanguage.buttons.lastYears : this.currentLanguage.buttons.lastYear;
    },
    ariaLabelForButtonLastMonth() {
      return this.currentLanguage.buttons.lastMonth;
    },
    ariaLabelForButtonNextMonth() {
      return this.currentLanguage.buttons.nextMonth;
    },
    ariaLabelForButtonNextYear() {
      return this.panel === "YEAR" ? this.currentLanguage.buttons.nextYears : this.currentLanguage.buttons.nextYear;
    },
    ariaLabelForButtonCurrentMonth() {
      return this.currentLanguage.buttons.toMonthsView;
    },
    ariaLabelForButtonCurrentYear() {
      return this.currentLanguage.buttons.toYearsView;
    },
    ariaLabelForButtonToDays() {
      return this.currentLanguage.buttons.toDaysView;
    }
  },
  watch: {
    value: {
      immediate: !0,
      handler: "updateNow"
    },
    defaultValue: {
      handler: "updateNow"
    },
    visible: {
      immediate: !0,
      handler: "init"
    },
    panel: {
      handler: "handelPanelChange"
    }
  },
  beforeUnmount() {
    this.destroyListenerForPressTabButton(), this.destroyListenerForPressEscapeButton();
  },
  methods: {
    handelPanelChange(e) {
      e === "YEAR" ? this.firstYear = Math.floor(this.calendarYear / 10) * 10 : e === "TIME" && this.$nextTick().then(() => {
        const t = this.$el.querySelectorAll(".pux_datepicker__panel_time .pux_datepicker__time_list");
        for (let n = 0, r = t.length; n < r; n++) {
          const a = t[n];
          _M(a, a.querySelector(".actived"));
        }
      });
    },
    init(e) {
      if (e) {
        const t = this.type;
        t === "month" ? this.showPanelMonth() : t === "year" ? this.showPanelYear() : t === "time" ? this.showPanelTime() : this.showPanelDate(), this.setListenerForPressEscapeButton();
      } else
        this.showPanelNone(), this.updateNow(this.value), this.destroyListenerForPressEscapeButton();
      this.emitEventBusDestroyAllListenerForPressButtonsForPanels();
    },
    getNow(e) {
      return e ? new Date(e) : this.defaultValue && Tr(this.defaultValue) ? new Date(this.defaultValue) : /* @__PURE__ */ new Date();
    },
    updateNow(e) {
      this.now = this.getNow(e);
    },
    getCriticalTime(e) {
      if (!e)
        return null;
      const t = new Date(e);
      return this.type === "year" ? new Date(t.getFullYear(), 0).getTime() : this.type === "month" ? new Date(t.getFullYear(), t.getMonth()).getTime() : this.type === "date" ? t.setHours(0, 0, 0, 0) : t.getTime();
    },
    inBefore(e, t) {
      return t === void 0 && (t = this.startAt), this.notBeforeTime && e < this.notBeforeTime || t && e < this.getCriticalTime(t);
    },
    inAfter(e, t) {
      return t === void 0 && (t = this.endAt), this.notAfterTime && e > this.notAfterTime || t && e > this.getCriticalTime(t);
    },
    inDisabledDays(e) {
      return Array.isArray(this.disabledDays) ? this.disabledDays.some((t) => this.getCriticalTime(t) === e) : typeof this.disabledDays == "function" ? this.disabledDays(new Date(e)) : !1;
    },
    isDisabledYear(e) {
      const t = new Date(e, 0).getTime(), n = new Date(e + 1, 0).getTime() - 1;
      return this.inBefore(n) || this.inAfter(t) || this.type === "year" && this.inDisabledDays(t);
    },
    isDisabledMonth(e) {
      const t = new Date(this.calendarYear, e).getTime(), n = new Date(this.calendarYear, e + 1).getTime() - 1;
      return this.inBefore(n) || this.inAfter(t) || this.type === "month" && this.inDisabledDays(t);
    },
    isDisabledDate(e) {
      const t = new Date(e).getTime(), n = new Date(e).setHours(23, 59, 59, 999);
      return this.inBefore(n) || this.inAfter(t) || this.inDisabledDays(t);
    },
    isDisabledTime(e, t, n) {
      const r = new Date(e).getTime();
      return this.inBefore(r, t) || this.inAfter(r, n) || this.inDisabledDays(r);
    },
    selectDate(e) {
      if (this.type === "datetime") {
        let t = new Date(e);
        Fd(this.value) && t.setHours(
          this.value.getHours(),
          this.value.getMinutes(),
          this.value.getSeconds()
        ), this.isDisabledTime(t) && (t.setHours(0, 0, 0, 0), this.notBefore && t.getTime() < new Date(this.notBefore).getTime() && (t = new Date(this.notBefore)), this.startAt && t.getTime() < new Date(this.startAt).getTime() && (t = new Date(this.startAt))), this.selectTime(t), this.showPanelTime();
        return;
      }
      this.$emit("selectDate", e);
    },
    selectYear({ year: e, isButtonClick: t }) {
      if (this.changeCalendarYear(e), this.type.toLowerCase() === "year")
        return this.selectDate(new Date(this.now));
      this.showPanelMonth(), t && this.setFocusToActivePanel();
    },
    selectMonth({ month: e, isButtonClick: t }) {
      if (this.changeCalendarMonth(e), this.type.toLowerCase() === "month")
        return this.selectDate(new Date(this.now));
      this.showPanelDate(), t && this.setFocusToActivePanel();
    },
    selectTime(e, t = !1) {
      this.$emit("selectTime", e, t);
    },
    changeCalendarYear(e) {
      this.updateNow(new Date(e, this.calendarMonth));
    },
    changeCalendarMonth(e) {
      this.updateNow(new Date(this.calendarYear, e));
    },
    getSibling() {
      const e = [
        this.$parent.$refs.calendarPanelRef
      ];
      this.$parent.$refs.calendarPanel2Ref && e.push(this.$parent.$refs.calendarPanel2Ref);
      const t = e.filter(
        (r) => r.$options.name === this.$options.name
      ), n = t.indexOf(this);
      return t[n ^ 1];
    },
    handleIconMonth(e) {
      const t = this.calendarMonth;
      this.changeCalendarMonth(t + e), this.$parent.$emit("changeCalendarMonth", {
        month: t,
        flag: e,
        vm: this,
        sibling: this.getSibling()
      });
    },
    handleIconYear(e) {
      if (this.panel === "YEAR")
        this.changePanelYears(e);
      else {
        const t = this.calendarYear;
        this.changeCalendarYear(t + e), this.$parent.$emit("changeCalendarYear", {
          year: t,
          flag: e,
          vm: this,
          sibling: this.getSibling()
        });
      }
    },
    handleBtnYear(e) {
      e.stopPropagation(), this.showPanelYear(), this.isWorkWithKeyboard && this.setFocusToActivePanel();
    },
    handleBtnMonth(e) {
      e.stopPropagation(), this.showPanelMonth(), this.isWorkWithKeyboard && this.setFocusToActivePanel();
    },
    handleTimeHeader(e) {
      e.stopPropagation(), this.type !== "time" && (this.showPanelDate(), this.isWorkWithKeyboard && this.setFocusToActivePanel());
    },
    changePanelYears(e) {
      this.firstYear = this.firstYear + e * 10;
    },
    showPanelNone() {
      this.panel = "NONE", this.isFocusPanelChild = !1, this.destroyListenerForPressTabButton(), this.emitEventBusDestroyAllListenerForPressButtonsForPanels(), this.setWorkWithoutKeyboard();
    },
    showPanelTime() {
      this.panel = "TIME";
    },
    showPanelDate() {
      this.panel = "DATE";
    },
    showPanelYear() {
      this.panel = "YEAR";
    },
    showPanelMonth() {
      this.panel = "MONTH";
    },
    setFocusToActivePanelFromParent() {
      this.setWorkWithKeyboard(), this.setFocusToActivePanel(), this.setListenerForPressTabButton();
    },
    setFocusToActivePanel() {
      this.isFocusPanelChild = !0, this.setFocusToActiveElementInChild();
    },
    removeFocusFromActivePanel() {
      this.isFocusPanelChild && (this.isFocusPanelChild = !1, this.emitEventBusDestroyAllListenerForPressButtonsForPanels());
    },
    setFocusToActiveElementInChild() {
      this.panel === "DATE" ? this.$refs.panelDate.setFocusToActiveDay() : this.panel === "TIME" ? this.$refs.panelTime.setFocusToActiveTime() : this.panel === "YEAR" ? this.$refs.panelYear.setFocusToActiveYear() : this.panel === "MONTH" && this.$refs.panelMonth.setFocusToActiveMonth();
    },
    setListenerForPressTabButton() {
      document.addEventListener("keydown", this.pressTabButton);
    },
    destroyListenerForPressTabButton() {
      document.removeEventListener("keydown", this.pressTabButton);
    },
    pressTabButton(e) {
      e.keyCode === X.tab && (this.trapFocus(e), this.stopCurrentEvent(e));
    },
    trapFocus(e) {
      const t = this.$el.querySelectorAll(".pux_datepicker__calendar__tab");
      if (t.length <= 1)
        return;
      let n = !1, r = !1;
      Y(t, (a, l) => {
        if (document.activeElement === a)
          return e.shiftKey ? l === 0 ? (t[t.length - 1].focus(), r = !0) : t[l - 1].focus() : (l === t.length - 1 ? t[0].focus() : t[l + 1].focus(), l === t.length - 2 && (r = !0)), n = !0, !1;
      }), n || (e.shiftKey ? t[t.length - 2].focus() : t[0].focus()), r ? this.setFocusToActivePanel() : this.removeFocusFromActivePanel();
    },
    setWorkWithKeyboard() {
      this.isWorkWithKeyboard = !0;
    },
    setWorkWithoutKeyboard() {
      this.isWorkWithKeyboard = !1;
    },
    setListenerForPressEscapeButton() {
      document.addEventListener("keydown", this.pressEscapeButton);
    },
    destroyListenerForPressEscapeButton() {
      document.removeEventListener("keydown", this.pressEscapeButton);
    },
    pressEscapeButton(e) {
      e.keyCode === X.escape && this.$emit("closePopup", !0);
    }
  },
  render() {
    return c("div", {
      class: ["pux_datepicker__calendar", `pux_datepicker__calendar_${this.panel.toLowerCase()}`],
      role: "region",
      "aria-labelledby": this.idForHeaderParent,
      onClick: (e) => e.stopPropagation()
    }, [
      c("div", {
        id: this.idForHeaderParent,
        class: "a_sr_only",
        role: "header"
      }, [
        c("div", {
          id: this.idForHeader,
          "aria-live": "polite"
        }, [
          this.panel === "DATE" && c("span", null, this.months[this.calendarMonth]),
          (this.panel === "DATE" || this.panel === "MONTH") && c("span", null, this.calendarYear),
          this.panel === "YEAR" && c("span", null, this.yearHeader),
          this.panel === "TIME" && c("span", null, this.timeHeader)
        ]),
        c("div", null, this.suffixForHeader)
      ]),
      c("div", {
        class: "pux_datepicker__calendar__header"
      }, [
        c("div", null, [
          this.panel !== "TIME" && c("button", {
            class: "pux_datepicker__icon_last_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonLastYear,
            innerHTML: "&laquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconYear(-1);
            }
          }),
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__icon_last_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonLastMonth,
            innerHTML: "&lsaquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconMonth(-1);
            }
          })
        ]),
        c("div", null, [
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__current_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonCurrentMonth,
            onClick: this.handleBtnMonth
          }, this.months[this.calendarMonth]),
          (this.panel === "DATE" || this.panel === "MONTH") && c("button", {
            class: "pux_datepicker__current_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonCurrentYear,
            onClick: this.handleBtnYear
          }, this.calendarYear),
          this.panel === "YEAR" && c("span", {
            class: "pux_datepicker__current_year"
          }, this.yearHeader),
          this.panel === "TIME" && c("span", null, [
            this.type === "time" ? c("span", {
              class: "pux_datepicker__time_header"
            }, this.timeHeader) : c("button", {
              class: "pux_datepicker__time_header pux_datepicker__calendar__tab",
              type: "button",
              ariaLabel: this.ariaLabelForButtonToDays,
              onClick: this.handleTimeHeader
            }, this.timeHeader)
          ])
        ]),
        c("div", null, [
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__icon_next_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonNextMonth,
            innerHTML: "&rsaquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconMonth(1);
            }
          }),
          this.panel !== "TIME" && c("button", {
            class: "pux_datepicker__icon_next_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonNextYear,
            innerHTML: "&raquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconYear(1);
            }
          })
        ])
      ]),
      c("div", {
        class: "pux_datepicker__calendar__content",
        role: "application"
      }, [
        c(xE, {
          ref: "panelDate",
          id: this.id,
          style: this.panel !== "DATE" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "DATE"
          },
          tabindex: 0,
          value: this.value,
          dateFormat: this.dateFormat,
          calendarMonth: this.calendarMonth,
          calendarYear: this.calendarYear,
          startAt: this.startAt,
          endAt: this.endAt,
          firstDayOfWeek: this.firstDayOfWeek,
          disabledDate: this.isDisabledDate,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectDate,
          onHandleIconMonth: this.handleIconMonth
        }),
        c(qE, {
          ref: "panelYear",
          id: this.id,
          style: this.panel !== "YEAR" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "YEAR"
          },
          value: this.value,
          disabledYear: this.isDisabledYear,
          firstYear: this.firstYear,
          onSelect: this.selectYear,
          onHandleIconYear: this.handleIconYear
        }),
        c(FE, {
          ref: "panelMonth",
          id: this.id,
          style: this.panel !== "MONTH" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "MONTH"
          },
          value: this.value,
          disabledMonth: this.isDisabledMonth,
          calendarYear: this.calendarYear,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectMonth,
          onHandleIconYear: this.handleIconYear
        }),
        c(ME, {
          ref: "panelTime",
          id: this.id,
          style: this.panel !== "TIME" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "TIME"
          },
          minuteStep: this.minuteStep,
          value: this.value,
          disabledTime: this.isDisabledTime,
          timeType: this.timeType,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectTime
        })
      ])
    ]);
  }
}, dM = {
  name: "ADatepickerIcon",
  computed: {
    svgHtml() {
      return `<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 200 200" class="a_datepicker__calendar_icon">
        <rect x="13" y="29" rx="14" ry="14" width="174" height="158" fill="transparent"></rect> 
        <line x1="46" x2="46" y1="8" y2="50"></line> <line x1="154" x2="154" y1="8" y2="50"></line> 
        <line x1="13" x2="187" y1="70" y2="70"></line> 
        <text x="50%" y="135" font-size="90" stroke-width="1" text-anchor="middle" dominant-baseline="middle">${this.todayInDayFormat}</text>
      </svg>`;
    },
    todayInDayFormat() {
      return (/* @__PURE__ */ new Date()).getDate();
    }
  },
  render() {
    return c("span", {
      ariaHidden: !0,
      innerHTML: this.svgHtml
    });
  }
}, Kc = {
  props: {
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => ot("a_ui_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      required: !1
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ]
};
function cM(e, {
  currentLanguage: t = _(() => ({})),
  popupVisible: n = B(!1)
}) {
  const r = f(e, "extra"), a = f(e, "id"), l = f(e, "placeholder"), o = f(e, "range"), u = f(e, "type"), h = f(e, "width"), A = _(() => lt(l.value) ? xt({ placeholder: l.value, extra: r.value }) : o.value ? t.value.placeholder.dateRange : u.value === "time" ? t.value.placeholder.time : t.value.placeholder.date), E = _(() => `${a.value}_panel`), p = _(() => [
    `${E.value}_0`,
    `${E.value}_1`
  ]), T = _(() => `${!n.value}`), m = _(() => `${n.value}`), b = _(() => `${a.value}_calendar`), L = _(() => bn(h.value) || lt(h.value) && /^\d+$/.test(h.value) ? h.value + "px" : h.value), v = _(() => String(u.value).toLowerCase());
  return {
    ariaExpandedForCalendar: m,
    ariaHiddenForCalendar: T,
    idForCalendar: b,
    idForPanel: E,
    idsForPanelRange: p,
    innerPlaceholder: A,
    innerType: v,
    widthLocal: L
  };
}
function fM(e, { emit: t }, {
  calendarPanelRef: n = B(void 0),
  changeModel: r = () => {
  },
  closePopover: a = () => {
  },
  setCloseFocus: l = () => {
  }
}) {
  const o = f(e, "range"), u = f(e, "confirm"), h = f(e, "disabled"), A = f(e, "modelValue"), E = f(e, "formatSave"), p = f(e, "editable"), T = f(e, "format"), m = f(e, "type"), b = B(null), L = B(null), v = () => {
    b.value = o.value ? [null, null] : null;
  }, I = ($) => !!PE($, T.value, E.value), R = ($) => {
    try {
      return Dn($, E.value).isValid() && Dn($, E.value).format(T.value) || "";
    } catch {
      return "";
    }
  }, y = ($) => {
    try {
      return !!Dn($, E.value).isValid();
    } catch {
      return !1;
    }
  }, C = ($) => zo(T.value) && typeof this.format.stringify == "function" ? T.value.stringify($) : Ko($, T.value), w = _(() => L.value !== null ? L.value : o.value ? "" : I(A.value) ? R(A.value) : ""), F = ($, ee) => Fd($) && Fd(ee) && $.getTime() === ee.getTime(), P = ($, ee) => Array.isArray($) && Array.isArray(ee) && $.length === ee.length && $.every((re, be) => F(re, ee[be])), q = ($) => {
    const ee = o.value ? "" : (
      // TODO: range this.currentValue.map(date2value)
      Ko(b.value, E.value)
    );
    r({
      model: ee
    }), t($, ee);
  }, N = ($ = !1) => u.value && !$ || h.value || (o.value ? P(A.value, b.value) : F(A.value, b.value)) ? !1 : (q("change"), !0), U = ($) => {
    $ && $.stopPropagation();
    const ee = o.value ? [null, null] : null;
    b.value = ee, N(!0), t("clear");
  }, V = ($) => {
    b.value = $, N() && a(), l();
  }, j = ($, ee) => {
    b.value = $, N() && ee && a(), ee && l();
  }, ne = ($) => {
    b.value[0] = $, b.value[1] && N();
  }, Z = ($) => {
    b.value[1] = $, b.value[0] && N();
  }, le = ($) => {
    ne($);
  }, oe = ($) => {
    Z($);
  }, fe = ($) => zo(T.value) && typeof T.value.parse == "function" ? T.value.parse($) : PE($, T.value, E.value), he = ($) => {
    try {
      return Dn($, T.value).isValid() && Dn($, T.value).format() || null;
    } catch {
      return null;
    }
  }, we = ($) => {
    try {
      return Dn($, E.value).isValid() && Dn($, E.value).format() || null;
    } catch {
      return null;
    }
  }, Ie = () => {
    if (p.value && L.value !== null) {
      let $ = w.value;
      const ee = n.value.isDisabledTime;
      if (!$) {
        U();
        return;
      }
      if (o.value)
        return;
      m.value === "time" && ($ = `${Dn().format("DD.MM.YYYY")} ${$}`);
      const re = he($);
      if (re && !ee(re, null, null)) {
        b.value = re, N(!0), a();
        return;
      }
      t("inputError", $);
    }
  }, se = () => {
    n.value.setFocusToActivePanelFromParent();
  };
  return {
    clearDate: U,
    confirmDate: () => {
      (o.value ? oM(b.value) : Tr(b.value)) && N(!0), q("confirm"), a();
    },
    currentValue: b,
    emitDate: q,
    handleChange: Ie,
    handleInput: ($) => {
      L.value = $.target.value;
    },
    handleKeydown: ($) => {
      const ee = $.keyCode;
      ee === X.tab || ee === X.enter ? (Ie(), L.value = null, a()) : (ee === X.arrowUp || ee === X.arrowDown) && (se(), $.stopPropagation(), $.preventDefault());
    },
    initCurrentValue: v,
    onModelValueChange: ($) => {
      o.value ? b.value = [null, null] : b.value = y($) ? we($) : null;
    },
    parse: fe,
    selectDate: V,
    selectEndDate: Z,
    selectEndTime: oe,
    selectStartDate: ne,
    selectStartTime: le,
    selectTime: j,
    stringify: C,
    text: w,
    updateDate: N,
    userInput: L
  };
}
const hM = {
  en: {
    days: [
      {
        shortName: "Sun",
        longName: "Sunday"
      },
      {
        shortName: "Mon",
        longName: "Monday"
      },
      {
        shortName: "Tue",
        longName: "Tuesday"
      },
      {
        shortName: "Wed",
        longName: "Wednesday"
      },
      {
        shortName: "Thu",
        longName: "Thursday"
      },
      {
        shortName: "Fri",
        longName: "Friday"
      },
      {
        shortName: "Sat",
        longName: "Saturday"
      }
    ],
    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    pickers: ["next 7 days", "next 30 days", "previous 7 days", "previous 30 days"],
    placeholder: {
      date: "Enter date in format DD.MM.YYYY",
      time: "Enter time in format HH:MM",
      dateRange: "Select Date Range",
      regionDate: "Date picker",
      regionTime: "Time picker"
    },
    today: "today",
    buttons: {
      lastYear: "Last year",
      lastYears: "Last 10 years",
      nextYear: "Next year",
      nextYears: "Next 10 years",
      lastMonth: "Last month",
      nextMonth: "Next month",
      monthsView: "Show detailed month view",
      toDaysView: "Switch to the day selection",
      toMonthsView: "Switch to the month selection",
      toYearsView: "switch to the selection of the years"
    },
    hours: "Hours",
    minutes: "Minutes",
    seconds: "Seconds",
    headerYears: (e, t) => `${e} to ${t}`
  },
  ru: {
    days: [
      {
        shortName: "Вс",
        longName: "Воскресенье"
      },
      {
        shortName: "Пн",
        longName: "Понедельник"
      },
      {
        shortName: "Вт",
        longName: "Вторник"
      },
      {
        shortName: "Ср",
        longName: "Среда"
      },
      {
        shortName: "Чт",
        longName: "Четверг"
      },
      {
        shortName: "Пт",
        longName: "Пятница"
      },
      {
        shortName: "Сб",
        longName: "Суббота"
      }
    ],
    months: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
    pickers: ["след. 7 дней", "след. 30 дней", "прош. 7 дней", "прош. 30 дней"],
    placeholder: {
      date: "Введите дату в формате ДД.ММ.ГГГГ",
      time: "Enter время in format ЧЧ.ММ",
      dateRange: "Выберите период",
      regionDate: "Выбор даты",
      regionTime: "Выбор времени"
    },
    today: "Сегодня",
    buttons: {
      lastYear: "Предыдущий год",
      lastYears: "Предыдущие 10 лет",
      nextYear: "Следующий год",
      nextYears: "Следующие 10 лет",
      lastMonth: "Предыдущий месяц",
      nextMonth: "Следующий месяц",
      toDaysView: "Перейти к выбору дня",
      toMonthsView: "Перейти к выбору месяца",
      toYearsView: "Перейти к выбору года"
    },
    hours: "Часы",
    minutes: "Минуты",
    seconds: "Секунды",
    headerYears: (e, t) => `с ${e} по ${t}`
  },
  de: {
    days: [
      {
        shortName: "So",
        longName: "Sontag"
      },
      {
        shortName: "Mo",
        longName: "Montag"
      },
      {
        shortName: "Di",
        longName: "Dienstag"
      },
      {
        shortName: "Mi",
        longName: "Mittwoch"
      },
      {
        shortName: "Do",
        longName: "Donnerstag"
      },
      {
        shortName: "Fr",
        longName: "Freitag"
      },
      {
        shortName: "Sa",
        longName: "Samstag"
      }
    ],
    months: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
    pickers: ["nächste 7 Tage", "nächste 30 Tage", "vorige 7 Tage", "vorige 30 Tage"],
    placeholder: {
      date: "Datum im Format TT.MM.JJJJ eingeben",
      time: "Zeit im Format HH.MM eingeben",
      dateRange: "Zeitraum auswählen",
      regionDate: "Datumsauswahl",
      regionTime: "Zeitauswahl"
    },
    today: "Heute",
    buttons: {
      lastYear: "Voriges Jahr",
      lastYears: "Vorige 10 Jahre",
      nextYear: "Nächstes Jahr",
      nextYears: "Nächste 10 Jahre",
      lastMonth: "Voriger Monat",
      nextMonth: "Nächster Monat",
      toDaysView: "Zur Auswahl der Tage wechseln",
      toMonthsView: "Zur Auswahl der Monate wechseln",
      toYearsView: "Zur Auswahl der Jahre wechseln"
    },
    hours: "Stunden",
    minutes: "Minuten",
    seconds: "Sekunden",
    headerYears: (e, t) => `${e} bis ${t}`
  }
};
function AM(e) {
  const t = f(e, "languages"), n = f(e, "lang"), r = _(() => ({
    ...hM,
    ...t.value
  }));
  return {
    currentLanguage: _(() => r.value[n.value])
  };
}
function EM(e, {
  calendarRef: t = B(void 0),
  focusByCloseRef: n = B(void 0),
  inputRef: r = B(void 0)
}) {
  const a = f(e, "placement"), l = f(e, "disabled"), o = B(void 0), u = B(void 0), h = () => {
    document.addEventListener("click", L);
  }, A = () => {
    document.removeEventListener("click", L);
  }, E = () => {
    !o.value && !l.value && r.value && t.value && (o.value = pl(
      r.value,
      t.value,
      () => {
        t.value && r.value && ml(
          r.value,
          t.value,
          {
            placement: a.value,
            middleware: [
              Sl(),
              Tl({ limiter: hu() })
            ]
          }
        ).then(({ x: v, y: I }) => {
          Object.assign(t.value.style, {
            left: `${v}px`,
            top: `${I}px`
          });
        });
      }
    ), setTimeout(() => {
      h();
    }, 300));
  }, p = () => {
    n.value && n.value.focus && n.value.focus();
  }, T = () => {
    o.value && (o.value(), o.value = void 0);
  }, m = (v) => {
    A(), T(), u.value = !1, v && p();
  }, b = () => {
    u.value = !0;
  };
  function L(v) {
    t.value.contains(v.target) || m();
  }
  return tp(() => {
    T(), A();
  }), {
    closePopover: m,
    destroyPopover: T,
    initCalendar: b,
    openPopoverWithFloatingUi: E,
    popupVisible: u,
    setCloseFocus: p
  };
}
function pM() {
  const e = B(void 0), t = B(void 0), n = B(void 0), r = B(void 0), a = B(void 0);
  return {
    calendarRef: e,
    calendarPanelRef: t,
    calendarPanel2Ref: n,
    focusByCloseRef: a,
    inputRef: r
  };
}
const id = {
  date: {
    value2date: (e) => Tr(e) ? new Date(e) : null,
    date2value: (e) => e
  },
  timestamp: {
    value2date: (e) => Tr(e) ? new Date(e) : null,
    date2value: (e) => e && new Date(e).getTime()
  }
}, Yo = {
  name: "ADatepicker",
  mixins: [
    Kc
  ],
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    appendToBody: {
      type: Boolean,
      default: !1
    },
    clearable: {
      type: Boolean,
      default: !0
    },
    confirm: {
      type: Boolean,
      default: !1
    },
    confirmText: {
      type: String,
      default: "OK"
    },
    dateFormat: {
      type: String,
      // format the time header and date tooltip
      default: void 0
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    editable: {
      type: Boolean,
      default: !0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    firstDayOfWeek: {
      type: Number,
      required: !1,
      default: 1,
      validator: (e) => e >= 1 && e <= 7
    },
    format: {
      type: [String, Object],
      default: "DD.MM.YYYY"
    },
    formatSave: {
      type: String,
      required: !1,
      default: "YYYY-MM-DD"
    },
    iconDay: {
      type: [Number, String],
      default: void 0
    },
    inputAttr: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: "pux_datepicker__input"
    },
    inputName: {
      type: String,
      default: "date"
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !1
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    lang: {
      type: String,
      default: "de",
      required: !1
    },
    languages: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: void 0
    },
    placeholder: {
      type: String,
      default: null
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => Lr.indexOf(e) !== -1
    },
    popupStyle: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    range: {
      type: Boolean,
      default: !1
    },
    rangeSeparator: {
      type: String,
      default: "~"
    },
    shortcuts: {
      type: [Boolean, Array],
      default: !0
    },
    type: {
      type: String,
      default: "date"
      // ["date", "datetime"] zendy added "month", "year", mxie added "time"
    },
    valueType: {
      default: "format",
      validator: function(e) {
        return ["timestamp", "format", "date"].indexOf(e) !== -1 || zo(e);
      }
    },
    width: {
      type: [String, Number],
      default: null
    }
  },
  emits: [
    "blur",
    "change",
    "clear",
    "confirm",
    "focus",
    "input",
    "inputError",
    "changeCalendarMonth",
    "changeCalendarYear"
  ],
  setup(e, t) {
    const n = f(e, "modelValue"), {
      attributesToExcludeFromRender: r
    } = wt(e), {
      calendarRef: a,
      calendarPanelRef: l,
      calendarPanel2Ref: o,
      focusByCloseRef: u,
      inputRef: h
    } = pM(), {
      componentStyleHide: A
    } = zt(e), {
      ariaDescribedbyLocal: E,
      changeModel: p,
      clearModel: T,
      errorsId: m,
      helpTextId: b,
      htmlIdLocal: L,
      isErrors: v,
      isModel: I,
      onBlur: R,
      onFocus: y
    } = an(e, t), {
      isAutofill: C
    } = Bc({ inputRef: h }), {
      currentLanguage: w
    } = AM(e), {
      closePopover: F,
      destroyPopover: P,
      initCalendar: q,
      openPopoverWithFloatingUi: N,
      popupVisible: U,
      setCloseFocus: V
    } = EM(e, {
      calendarRef: a,
      focusByCloseRef: u,
      inputRef: h
    }), {
      ariaExpandedForCalendar: j,
      ariaHiddenForCalendar: ne,
      idForCalendar: Z,
      idForPanel: le,
      idsForPanelRange: oe,
      innerPlaceholder: fe,
      innerType: he,
      widthLocal: we
    } = cM(e, {
      currentLanguage: w,
      popupVisible: U
    }), {
      clearDate: Ie,
      confirmDate: se,
      currentValue: me,
      emitDate: Le,
      handleChange: ce,
      handleInput: Ae,
      handleKeydown: $,
      initCurrentValue: ee,
      onModelValueChange: re,
      parse: be,
      selectDate: xe,
      selectEndDate: He,
      selectEndTime: Ve,
      selectStartDate: Ye,
      selectStartTime: Re,
      selectTime: je,
      stringify: ft,
      text: $e,
      updateDate: it,
      userInput: _t
    } = fM(e, t, {
      calendarPanelRef: l,
      changeModel: p,
      closePopover: F,
      setCloseFocus: V
    }), mt = () => {
      h.value && h.value.blur();
    };
    return ee(), tt(n, re, {
      immediate: !0
    }), {
      ariaDescribedbyLocal: E,
      ariaExpandedForCalendar: j,
      ariaHiddenForCalendar: ne,
      attributesToExcludeFromRender: r,
      blur: mt,
      calendarPanel2Ref: o,
      calendarPanelRef: l,
      calendarRef: a,
      changeModel: p,
      clearDate: Ie,
      clearModel: T,
      parse: be,
      closePopover: F,
      componentStyleHide: A,
      confirmDate: se,
      stringify: ft,
      currentLanguage: w,
      currentValue: me,
      destroyPopover: P,
      emitDate: Le,
      errorsId: m,
      text: $e,
      focusByCloseRef: u,
      handleChange: ce,
      handleInput: Ae,
      handleKeydown: $,
      helpTextId: b,
      htmlIdLocal: L,
      idForCalendar: Z,
      idForPanel: le,
      idsForPanelRange: oe,
      initCalendar: q,
      innerPlaceholder: fe,
      innerType: he,
      inputRef: h,
      isAutofill: C,
      isErrors: v,
      isModel: I,
      onBlur: R,
      onFocus: y,
      openPopoverWithFloatingUi: N,
      popupVisible: U,
      selectDate: xe,
      selectEndDate: He,
      selectEndTime: Ve,
      selectStartDate: Ye,
      selectStartTime: Re,
      selectTime: je,
      setCloseFocus: V,
      updateDate: it,
      userInput: _t,
      widthLocal: we
    };
  },
  computed: {
    transform() {
      const e = this.valueType;
      return zo(e) ? { ...id.date, ...e } : e === "format" ? {
        value2date: this.parse.bind(this),
        date2value: this.stringify.bind(this)
      } : id[e] || id.date;
    },
    showClearIcon() {
      return !this.disabled && this.clearable && this.text;
    },
    innerShortcuts() {
      if (Array.isArray(this.shortcuts))
        return this.shortcuts;
      if (this.shortcuts === !1)
        return [];
      const e = this.currentLanguage.pickers;
      return [
        {
          text: e[0],
          onClick(n) {
            n.currentValue = [/* @__PURE__ */ new Date(), new Date(Date.now() + 3600 * 1e3 * 24 * 7)], n.updateDate(!0);
          }
        },
        {
          text: e[1],
          onClick(n) {
            n.currentValue = [/* @__PURE__ */ new Date(), new Date(Date.now() + 3600 * 1e3 * 24 * 30)], n.updateDate(!0);
          }
        },
        {
          text: e[2],
          onClick(n) {
            n.currentValue = [new Date(Date.now() - 3600 * 1e3 * 24 * 7), /* @__PURE__ */ new Date()], n.updateDate(!0);
          }
        },
        {
          text: e[3],
          onClick(n) {
            n.currentValue = [new Date(Date.now() - 3600 * 1e3 * 24 * 30), /* @__PURE__ */ new Date()], n.updateDate(!0);
          }
        }
      ];
    },
    innerDateFormat() {
      return this.dateFormat ? this.dateFormat : typeof this.format != "string" ? "YYYY-MM-DD" : this.innerType === "date" ? this.format : this.format.replace(/[Hh]+.*[msSaAZ]|\[.*?\]/g, "").trim() || "YYYY-MM-DD";
    }
  },
  watch: {
    popupVisible(e) {
      e ? this.initCalendar() : (this.userInput = null, this.blur());
    }
  },
  methods: {
    isValidValue(e) {
      const { value2date: t } = this.transform;
      return Tr(t(e));
    },
    isValidRangeValue(e) {
      const { value2date: t } = this.transform;
      return Array.isArray(e) && e.length === 2 && this.isValidValue(e[0]) && this.isValidValue(e[1]) && t(e[1]).getTime() >= t(e[0]).getTime();
    },
    selectRange(e) {
      typeof e.onClick == "function" ? e.onClick(this) !== !1 && this.closePopover() : (this.currentValue = [new Date(e.start), new Date(e.end)], this.updateDate(!0), this.closePopover());
    },
    handleBlur(e) {
      this.$emit("blur", e);
    },
    handleFocus(e) {
      this.initCalendar(), this.$emit("focus", e);
    }
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      class: "a_form_element__container",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel || this.isAutofill
        }]
      }, [
        this.label && c(kt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: this.isLabelFloat,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            class: ["pux_datepicker", {
              pux_datepicker_range: this.range,
              disabled: this.disabled
            }],
            style: { width: this.widthLocal },
            onMousedown: this.initCalendar,
            onTouchstart: this.initCalendar
          }, [
            c("div", {
              class: "pux_datepicker__input_wrapper",
              role: "application"
            }, [
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                class: [
                  "a_form_control pux_datepicker__input",
                  this.inputClass,
                  {
                    a_form_control_invalid: this.isErrors
                  }
                ],
                name: this.inputName,
                type: "text",
                autocomplete: "off",
                disabled: this.disabled,
                readonly: !this.editable,
                value: this.text,
                placeholder: this.innerPlaceholder,
                ariaHaspopup: !0,
                "aria-owns": this.idForCalendar,
                ...this.inputAttr,
                onKeydown: this.handleKeydown,
                onFocus: this.handleFocus,
                onBlur: this.handleBlur,
                onInput: this.handleInput,
                onChange: this.handleChange
              }),
              this.showClearIcon && c("span", {
                class: "pux_datepicker__input_wrapper__append pux_datepicker__input_wrapper__clear_wrapper",
                ariaHidden: !0,
                onMousedown: this.clearDate
              }, [
                c("i", {
                  class: "pux_datepicker__input__icon pux_datepicker__input__clear_icon"
                })
              ]),
              c("span", {
                class: "pux_datepicker__input_wrapper__append"
              }, [
                c(dM)
              ])
            ]),
            c(ti, {
              to: "body"
            }, [
              this.popupVisible && Ft(c("div", {
                ref: "calendarRef",
                id: this.idForCalendar,
                class: "pux_datepicker__popup",
                ariaHidden: this.ariaHiddenForCalendar,
                ariaExpanded: this.ariaExpandedForCalendar,
                style: this.popupStyle
              }, [
                !!(this.range && this.innerShortcuts.length) && c("div", {
                  class: "pux_datepicker__shortcuts_wrapper"
                }, [
                  this.innerShortcuts.map((e, t) => c("button", {
                    key: t,
                    class: "pux_datepicker__shortcuts_wrapper__shortcuts",
                    type: "button",
                    onClick: () => this.selectRange(e)
                  }, e.text))
                ]),
                this.range ? c("div", {
                  class: "pux_datepicker__range_wrapper"
                }, [
                  c(rd, {
                    ref: "calendarPanelRef",
                    id: this.idsForPanelRange[0],
                    style: "box-shadow: 1px 0 rgba(0, 0, 0, .1);",
                    index: 0,
                    type: this.innerType,
                    dateFormat: this.innerDateFormat,
                    value: this.currentValue[0],
                    endAt: this.currentValue[1],
                    startAt: null,
                    visible: this.popupVisible,
                    currentLanguage: this.currentLanguage,
                    firstDayOfWeek: this.firstDayOfWeek,
                    onSelectDate: this.selectStartDate,
                    onSelectTime: this.selectStartTime,
                    onClosePopup: this.closePopover
                  }),
                  c(rd, {
                    ref: "calendarPanel2Ref",
                    id: this.idsForPanelRange[1],
                    index: 1,
                    type: this.innerType,
                    dateFormat: this.innerDateFormat,
                    value: this.currentValue[1],
                    endAt: null,
                    startAt: this.currentValue[0],
                    visible: this.popupVisible,
                    currentLanguage: this.currentLanguage,
                    firstDayOfWeek: this.firstDayOfWeek,
                    onSelectDate: this.selectEndDate,
                    onSelectTime: this.selectEndTime,
                    onClosePopup: this.closePopover
                  })
                ]) : c(rd, {
                  ref: "calendarPanelRef",
                  id: this.idForPanel,
                  index: -1,
                  type: this.innerType,
                  dateFormat: this.innerDateFormat,
                  value: this.currentValue,
                  visible: this.popupVisible,
                  currentLanguage: this.currentLanguage,
                  firstDayOfWeek: this.firstDayOfWeek,
                  onSelectDate: this.selectDate,
                  onSelectTime: this.selectTime,
                  onClosePopup: this.closePopover
                }),
                this.confirm && c("div", {
                  class: "pux_datepicker__footer"
                }, [
                  c("button", {
                    class: "pux_datepicker__footer__btn pux_datepicker__footer__btn_confirm",
                    type: "button",
                    onClick: this.confirmDate
                  }, this.confirmText)
                ])
              ]), [
                [rl, {
                  mounted: this.openPopoverWithFloatingUi
                }]
              ])
            ]),
            c("div", {
              ref: "focusByCloseRef",
              ariaHidden: !0,
              tabindex: -1
            })
          ])
          /*
           * this.isClearButtonLocal && h(AFormElementBtnClear, {
           *   disabled: this.disabled,
           *   clearButtonClass: this.clearButtonClass,
           *   onClear: this.clearModel,
           * }),
           */
        ]),
        c(rn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(nn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function TM({
  idFrom: e = _(() => "")
}) {
  return {
    setFocusToFromInput: () => {
      const n = document.getElementById(e.value);
      n && n.focus();
    }
  };
}
function SM({
  htmlIdLocal: e = _(() => "")
}) {
  const t = _(() => `${e.value}_from`), n = _(() => `${e.value}_until`);
  return {
    idFrom: t,
    idUntil: n
  };
}
function mM(e, {
  htmlIdLocal: t = _(() => ""),
  idFrom: n = _(() => ""),
  idUntil: r = _(() => "")
}) {
  const a = f(e, "inputAttributes"), l = f(e, "inputAttributesFrom"), o = f(e, "inputAttributesUntil"), u = _(() => `${t.value}_label`), h = _(() => ({
    "aria-labelledby": `${u.value} ${n.value}`,
    ...a.value,
    ...l.value
  })), A = _(() => ({
    "aria-labelledby": `${u.value} ${r.value}`,
    ...a.value,
    ...o.value
  }));
  return {
    inputAttributesFromLocal: h,
    inputAttributesUntilLocal: A
  };
}
function bM(e, {
  changeModel: t = () => ({})
}) {
  const n = f(e, "keyFrom"), r = f(e, "keyUntil"), a = f(e, "modelValue"), l = _(() => {
    var A;
    return (A = a.value) == null ? void 0 : A[n.value];
  }), o = _(() => {
    var A;
    return (A = a.value) == null ? void 0 : A[r.value];
  });
  return {
    changeModelFrom: (A) => {
      const E = Se(a.value) || {};
      E[n.value] = A, t({ model: E });
    },
    changeModelUntil: (A) => {
      const E = Se(a.value) || {};
      E[r.value] = A, t({ model: E });
    },
    modelValueFrom: l,
    modelValueUntil: o
  };
}
function Yc({
  htmlIdLocal: e = _(() => ""),
  clickLabel: t = () => {
  }
}) {
  const n = _(() => MT(e.value)), r = () => {
    t();
  };
  return {
    destroyEventBusClickLabel: () => {
      Rt.$off(n.value, r);
    },
    initEventBusClickLabel: () => {
      Rt.$on(n.value, r);
    }
  };
}
const LM = {
  name: "ADatepickerRange",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    appendToBody: {
      type: Boolean,
      default: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearable: {
      type: Boolean,
      default: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    disabledFrom: {
      type: Boolean,
      required: !1
    },
    disabledUntil: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    firstDayOfWeek: {
      type: Number,
      required: !1,
      default: 1,
      validator: (e) => e >= 1 && e <= 7
    },
    format: {
      type: [String, Object],
      default: "DD.MM.YYYY"
    },
    formatSave: {
      type: String,
      required: !1,
      default: "YYYY-MM-DD"
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconDay: {
      type: [Number, String],
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => ot("a_datepicker_range_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesFrom: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesUntil: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: "pux_datepicker__input"
    },
    inputName: {
      type: String,
      default: "date"
    },
    inputWidth: {
      type: [Number, String],
      required: !1,
      default: 270
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyFrom: {
      tpe: String,
      required: !1,
      default: "from"
    },
    keyUntil: {
      tpe: String,
      required: !1,
      default: "until"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelFrom: {
      type: String,
      required: !1,
      default: "_A_DATEPICKER_RANGE_FROM_"
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    labelUntil: {
      type: String,
      required: !1,
      default: "_A_DATEPICKER_RANGE_UNTIL_"
    },
    lang: {
      type: String,
      default: "de",
      required: !1
    },
    modelUndefined: {
      required: !1,
      default: void 0
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholderFrom: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholderUntil: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => Lr.indexOf(e) !== -1
    },
    popupStyle: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    shortcuts: {
      type: [Boolean, Array],
      default: !0
    },
    type: {
      type: String,
      required: !1,
      default: "dateRange"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = wt(e), {
      componentStyleHide: r
    } = zt(e), {
      changeModel: a,
      errorsId: l,
      helpTextId: o,
      htmlIdLocal: u,
      isErrors: h
    } = an(e, t), {
      changeModelFrom: A,
      changeModelUntil: E,
      modelValueFrom: p,
      modelValueUntil: T
    } = bM(e, {
      changeModel: a
    }), {
      idFrom: m,
      idUntil: b
    } = SM({
      htmlIdLocal: u
    }), {
      inputAttributesFromLocal: L,
      inputAttributesUntilLocal: v
    } = mM(e, {
      htmlIdLocal: u,
      idFrom: m,
      idUntil: b
    }), {
      setFocusToFromInput: I
    } = TM({
      idFrom: m
    }), {
      destroyEventBusClickLabel: R,
      initEventBusClickLabel: y
    } = Yc({
      htmlIdLocal: u,
      clickLabel: I
    });
    return y(), Ot(() => {
      R();
    }), {
      attributesToExcludeFromRender: n,
      changeModelFrom: A,
      changeModelUntil: E,
      componentStyleHide: r,
      errorsId: l,
      helpTextId: o,
      idFrom: m,
      idUntil: b,
      inputAttributesFromLocal: L,
      inputAttributesUntilLocal: v,
      isErrors: h,
      modelValueFrom: p,
      modelValueUntil: T
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      class: "a_datepicker_range",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_invalid: this.isErrors
        }]
      }, [
        this.label && c(kt, {
          id: this.idFrom,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: !1,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_datepicker_range__content"
        }, [
          c("div", {
            class: "a_datepicker_range__group a_datepicker_range__group_min"
          }, [
            c(kt, {
              id: this.idFrom,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_datepicker_range__label a_datepicker_range__label_min",
              isLabelFloat: !1,
              label: this.labelFrom,
              isError: this.isErrors
            }),
            c(Yo, {
              id: this.idFrom,
              ref: "from",
              alwaysTranslate: this.alwaysTranslate,
              inputAttr: this.inputAttributesFromLocal,
              modelValue: this.modelValueFrom,
              formatSave: this.formatSave,
              firstDayOfWeek: this.firstDayOfWeek,
              appendToBody: this.appendToBody,
              popupStyle: this.popupStyle,
              iconDay: this.iconDay,
              inputName: this.inputName,
              placement: this.placement,
              clearable: this.clearable,
              shortcuts: this.shortcuts,
              lang: this.lang,
              inputClass: this.inputClass,
              placeholder: this.placeholderFrom,
              disabled: this.disabled || this.disabledFrom,
              width: this.inputWidth,
              format: this.format,
              type: "date",
              onChange: this.changeModelFrom
            })
          ]),
          c("div", {
            class: "a_datepicker_range__group"
          }, [
            c(kt, {
              id: this.idUntil,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_datepicker_range__label a_datepicker_range__label_max",
              isLabelFloat: !1,
              label: this.labelUntil,
              isError: this.isErrors
            }),
            c(Yo, {
              id: this.idUntil,
              ref: "until",
              alwaysTranslate: this.alwaysTranslate,
              modelValue: this.modelValueUntil,
              formatSave: this.formatSave,
              firstDayOfWeek: this.firstDayOfWeek,
              appendToBody: this.appendToBody,
              popupStyle: this.popupStyle,
              iconDay: this.iconDay,
              inputName: this.inputName,
              placement: this.placement,
              clearable: this.clearable,
              shortcuts: this.shortcuts,
              lang: this.lang,
              inputClass: this.inputClass,
              placeholder: this.placeholderUntil,
              disabled: this.disabled || this.disabledUntil,
              width: this.inputWidth,
              format: this.format,
              type: "date",
              inputAttr: this.inputAttributesUntilLocal,
              onChange: this.changeModelUntil
            })
          ]),
          c(rn, {
            alwaysTranslate: this.alwaysTranslate,
            class: "a_datepicker_range__help_text",
            id: this.helpTextId,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(nn, {
            id: this.errorsId,
            alwaysTranslate: this.alwaysTranslate,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
};
function vM(e, {
  isOpen: t = B(!1)
}) {
  const n = f(e, "btnIconLeftLess"), r = f(e, "btnIconLeftMore"), a = f(e, "btnIconRightLess"), l = f(e, "btnIconRightMore"), o = f(e, "btnTextLess"), u = f(e, "btnTextMore"), h = f(e, "btnTitleLess"), A = f(e, "btnTitleMore"), E = f(e, "showLess"), p = B(void 0), T = _(() => t.value ? o.value : u.value), m = _(() => t.value ? h.value : A.value), b = _(() => t.value ? n.value : r.value), L = _(() => t.value ? a.value : l.value), v = _(() => t.value ? E.value : !0);
  return {
    btnIconLeft: b,
    btnIconRight: L,
    btnText: T,
    btnTitle: m,
    buttonRef: p,
    isButtonVisible: v
  };
}
function IM(e) {
  const t = f(e, "isOpenDefault"), n = B(void 0);
  return {
    initIsOpen: () => {
      n.value = t.value;
    },
    isOpen: n
  };
}
function gM(e, {
  isOpen: t = B(!1)
}) {
  const n = f(e, "htmlLess"), r = f(e, "htmlMore"), a = f(e, "safeHtmlLess"), l = f(e, "safeHtmlMore"), o = f(e, "textLess"), u = f(e, "textMore"), h = _(() => t.value ? r.value : n.value), A = _(() => t.value ? l.value : a.value), E = _(() => t.value ? u.value : o.value), p = _(() => !!(E.value || A.value || h.value));
  return {
    htmlLocal: h,
    isTextOrHtmlVisible: p,
    safeHtmlLocal: A,
    textLocal: E
  };
}
const yM = [
  "a[href]:not([tabindex='-1'])",
  "button:not([disabled]):not([tabindex='-1'])",
  "area[href]:not([tabindex='-1'])",
  "input:not([disabled]):not([tabindex='-1'])",
  "select:not([disabled]):not([tabindex='-1'])",
  "textarea:not([disabled]):not([tabindex='-1'])",
  "iframe:not([tabindex='-1'])",
  "[tabindex]:not([tabindex='-1'])",
  "[contentEditable=true]:not([tabindex='-1'])"
], os = yM.join(", ");
function Boe({ element: e, isMiddleOfScreen: t = !0, behavior: n = "smooth" }) {
  t ? window.scroll({
    top: e.offsetTop - window.innerHeight / 2,
    behavior: n
  }) : e.scrollIntoView();
}
function Qr({ element: e, selector: t }) {
  const n = e || document.querySelector(t);
  n && (n.hasAttribute("tabindex") ? n.focus() : (n.setAttribute("tabindex", "-1"), n.focus(), n.removeAttribute("tabindex")));
}
function hS(e) {
  const t = e.getBoundingClientRect();
  return t.width > 0 && t.height > 0;
}
function RM({ element: e } = {}) {
  const t = document.querySelectorAll(os), n = e || document.activeElement, r = Array.from(t).indexOf(n);
  if (r !== -1) {
    let a = r + 1;
    a >= t.length && (a = 0);
    let l = t[a];
    for (; a < t.length && !hS(l); )
      a++, a >= t.length && (a = 0), l = t[a];
    a < t.length && l.focus();
  }
}
function OM({ element: e } = {}) {
  const t = document.querySelectorAll(os), n = e || document.activeElement, r = Array.from(t).indexOf(n);
  if (r !== -1) {
    let a = r - 1;
    a < 0 && (a = t.length - 1);
    let l = t[a];
    for (; a >= 0 && !hS(l); )
      a--, a < 0 && (a = t.length - 1), l = t[a];
    a >= 0 && l.focus();
  }
}
function woe({ element: e }) {
  if (e.id)
    return `#${e.id}`;
  const t = [];
  for (; e; ) {
    const n = e.tagName;
    n === "BODY" || n === "HTML" ? t.unshift(n) : t.unshift(
      e.className ? `${n}.${e.className.replace(/\s+/g, ".")}` : n
    );
    const r = parent.children;
    r != null && r.length && r.length > 1 && (t[0] += `:nth-child(${Array.prototype.indexOf.call(r, e) + 1})`), e = e.parentElement;
  }
  return t.join(" > ");
}
function CM(e, { emit: t }, {
  isOpen: n = B(!1)
}) {
  const r = B(void 0);
  return {
    containerRef: r,
    toggleButton: () => {
      n.value = !n.value, t("toggle", { isOpen: n.value }), n.value && !window.isScrollDisabled && Jo().then(
        () => Qr({
          element: r.value
        })
      );
    }
  };
}
const Poe = {
  name: "ADisclosure",
  inheritAttrs: !0,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    btnAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link a_p_0"
    },
    btnIconLeftLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconLeftMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnId: {
      type: String,
      required: !1,
      default: void 0
    },
    btnParentClass: {
      type: String,
      required: !1,
      default: "a_text_center"
    },
    btnTextLess: {
      type: String,
      required: !1,
      default: "_A_DISCLOSURE_LESS_"
    },
    btnTextMore: {
      type: String,
      required: !1,
      default: "_A_DISCLOSURE_MORE_"
    },
    btnTitleLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitleMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitlePlacement: {
      type: String,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    htmlLess: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlMore: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => ot("a_disclosure_")
    },
    isBtnTitleHtml: {
      type: Boolean,
      required: !1
    },
    isOpenDefault: {
      type: Boolean,
      required: !1,
      default: !1
    },
    safeHtmlLess: {
      type: String,
      required: !1,
      default: void 0
    },
    safeHtmlMore: {
      type: String,
      required: !1,
      default: void 0
    },
    showLess: {
      type: Boolean,
      required: !1,
      default: !0
    },
    textLess: {
      type: String,
      required: !1,
      default: void 0
    },
    textMore: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      initIsOpen: r,
      isOpen: a
    } = IM(e), {
      htmlLocal: l,
      isTextOrHtmlVisible: o,
      safeHtmlLocal: u,
      textLocal: h
    } = gM(e, {
      isOpen: a
    }), {
      containerRef: A,
      toggleButton: E
    } = CM(e, t, {
      isOpen: a
    }), {
      btnIconLeft: p,
      btnIconRight: T,
      btnText: m,
      btnTitle: b,
      buttonRef: L,
      isButtonVisible: v
    } = vM(e, {
      isOpen: a
    });
    return r(), n({
      buttonRef: L,
      containerRef: A,
      isOpen: a,
      toggleButton: E
    }), {
      btnIconLeft: p,
      btnIconRight: T,
      btnText: m,
      btnTitle: b,
      buttonRef: L,
      containerRef: A,
      htmlLocal: l,
      isButtonVisible: v,
      isOpen: a,
      isTextOrHtmlVisible: o,
      safeHtmlLocal: u,
      textLocal: h,
      toggleButton: E
    };
  },
  render() {
    return c("div", {
      class: [
        "a_show_more",
        {
          a_show_more_open: this.isOpen
        }
      ]
    }, [
      c("div", {
        class: "a_show_more__wrapper"
      }, [
        c("div", {
          ref: "containerRef",
          id: this.id,
          ariaExpanded: this.isOpen,
          ...this.$attrs
        }, [
          this.isTextOrHtmlVisible && c(pe, {
            alwaysTranslate: this.alwaysTranslate,
            html: this.htmlLocal,
            safeHtml: this.safeHtmlLocal,
            tag: "div",
            text: this.textLocal
          }),
          this.isOpen ? this.$slots.more && this.$slots.more({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          }) : this.$slots.less && this.$slots.less({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          })
        ])
      ]),
      this.isButtonVisible && c("div", {
        class: this.btnParentClass
      }, [
        c(Oe, {
          ref: "buttonRef",
          id: this.btnId,
          alwaysTranslate: this.alwaysTranslate,
          "aria-controls": this.id,
          class: [
            "a_show_more__button",
            this.btnClass
          ],
          disabled: this.disabled,
          iconLeft: this.btnIconLeft,
          iconRight: this.btnIconRight,
          isTitleHtml: this.isBtnTitleHtml,
          text: this.btnText,
          title: this.btnTitle,
          titlePlacement: this.btnTitlePlacement,
          type: "button",
          ...this.btnAttributes,
          onClick: this.toggleButton
        }, () => this.$slots.button && this.$slots.button({
          isButtonVisible: this.isButtonVisible,
          isOpen: this.isOpen
        }))
      ])
    ]);
  }
}, gu = {
  name: "ALink",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    href: {
      type: String,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => ot("a_link_")
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    target: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Lr.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => lt(e) ? e === "auto" : Oi(e)
    },
    to: {
      type: [Object, String],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      clickEmit: n
    } = NT(e, t);
    return {
      clickEmit: n
    };
  },
  render() {
    return c(Oe, {
      ...this.$attrs,
      ...this.$props,
      type: "link",
      onClick: this.clickEmit
    }, this.$slots);
  }
};
function NM(e) {
  const t = f(e, "action");
  return {
    attributesAction: _(() => {
      const r = {
        ...t.value,
        isHiddenCallback: void 0,
        classReplace: void 0
      };
      return t.value.classReplace ? r.class = t.value.classReplace : lt(r.class) ? r.class += " a_dropdown__item" : nt(r.class) ? r.class.a_dropdown__item = !0 : r.class = "a_dropdown__item", r.type === "link" && (r.type = void 0), r;
    })
  };
}
const DM = {
  name: "ADropdownAction",
  props: {
    action: {
      type: Object,
      required: !0
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      attributesAction: t
    } = NM(e);
    return {
      attributesAction: t
    };
  },
  render() {
    return this.action.type === "button" ? c("li", {
      class: this.action.liClass
    }, [
      c(rt, {
        ...this.attributesAction,
        alwaysTranslate: this.alwaysTranslate,
        isHidden: void 0,
        callback: void 0,
        classButton: void 0,
        classExtra: void 0,
        isConfirm: void 0,
        callbackLocal: void 0,
        onClick: this.action.callback
      })
    ]) : this.action.type === "divider" ? c("li", {
      class: [
        "a_dropdown__divider",
        this.action.liClass
      ]
    }) : this.action.type === "link" ? c("li", {
      class: this.action.liClass
    }, [
      c(gu, {
        ...this.attributesAction,
        alwaysTranslate: this.alwaysTranslate,
        classButton: void 0,
        classExtra: void 0,
        isHidden: void 0,
        isConfirm: void 0,
        callbackLocal: void 0
      })
    ]) : this.action.type === "template" && this.action.slotName && this.$slots[this.action.slotName] ? this.$slots[this.action.slotName]({
      action: this.action
    }) : null;
  }
};
function AS({ actions: e }) {
  const t = Dt(e, (a) => !a.isHidden), n = [];
  Y(t, (a) => {
    (a.type !== "divider" || n.length > 0 && as(n).type !== "divider") && n.push(a);
  });
  const r = as(n);
  return r && r.type === "divider" && n.pop(), n;
}
function Do({ class1: e, class2: t, defaultValue: n = void 0 }) {
  return e ? t ? `${e} ${t}` : e : t || n;
}
function BM(e) {
  const t = f(e, "actions"), n = _(() => AS({
    actions: t.value
  })), r = _(() => n.value.length > 0);
  return {
    actionsFiltered: n,
    hasActions: r
  };
}
function wM(e, {
  eventsMenu: t = _(() => ({})),
  statusExpanded: n = B(!1),
  wasOpened: r = B(!1)
}) {
  const a = f(e, "buttonAttributes"), l = f(e, "buttonTag"), o = f(e, "disabled"), u = f(e, "dropdownAttributes"), h = f(e, "dropdownClass"), A = f(e, "id"), E = f(e, "menuWidth"), p = f(e, "persist"), T = _(() => a.value.id || A.value), m = _(() => {
    const I = Se(a.value);
    return I["aria-haspopup"] = "true", I["aria-expanded"] = n.value, l.value === "button" && (I.type = I.type || "button"), I;
  }), b = _(() => {
    const I = {};
    return o.value && (l.value === "button" ? I.disabled = !0 : l.value === "a" && (I.ariaDisabled = !0)), I;
  }), L = _(() => {
    const I = Se(u.value);
    return I.class = ["a_dropdown__menu", h.value, {
      a_dropdown__menu_show: n.value
    }], E.value && (I.style = `width: ${E.value}px`), cd({}, I, t.value);
  }), v = _(() => n.value || p.value && r.value);
  return {
    idLocal: T,
    buttonAttributesDisabled: b,
    buttonAttributesLocal: m,
    dropdownAttributesLocal: L,
    isMenuRendered: v
  };
}
function PM(e) {
  const t = f(e, "buttonClass"), n = f(e, "class");
  return {
    buttonClassLocal: _(() => {
      let a = {};
      return t.value && (lt(t.value) ? a[t.value] = !0 : nt(t.value) && (a = cd(a, t.value))), n.value && (lt(n.value) ? a[n.value] = !0 : nt(n.value) && (a = cd(a, n.value))), a;
    })
  };
}
function xM(e, {
  onToggle: t = () => {
  },
  onKeydown: n = () => {
  },
  onOpen: r = () => {
  },
  onClose: a = () => {
  },
  timerCloseHover: l = B(void 0),
  triggerOpen: o = B(void 0)
}) {
  const u = f(e, "triggers"), h = _(() => {
    const m = {};
    return Y(u.value, (b) => {
      m[b] = !0;
    }), m;
  }), A = _(() => {
    const m = {};
    return h.value.click && (m.onClick = t, m.onKeydown = n), h.value.focus && (m.onFocus = () => r({ trigger: "focus" })), h.value.hover && (m.onMouseenter = () => r({ trigger: "hover" }), m.onMouseleave = () => a({ trigger: "hover" })), m;
  }), E = () => {
    o.value === "hover" && clearTimeout(l.value);
  }, p = () => {
    a({ trigger: "hover" });
  }, T = _(() => {
    const m = {};
    return h.value.hover && (m.onMouseenter = E, m.onMouseleave = p), m;
  });
  return {
    eventsLocal: A,
    eventsMenu: T
  };
}
function FM(e, {
  dropdownRef: t = B(void 0)
}) {
  const n = f(e, "elementsForArrows");
  return {
    setFocusToFirstElement: () => {
      if (!t.value)
        return;
      const a = t.value.querySelectorAll(n.value);
      a.length !== 0 && a[0].focus();
    }
  };
}
function MM(e, {
  dropdownButtonRef: t = B(void 0),
  dropdownRef: n = B(void 0)
}) {
  const r = f(e, "floatingFlip"), a = f(e, "floatingShift"), l = f(e, "placement"), o = B(void 0), u = _(() => {
    var p, T;
    const E = [];
    return (p = r.value) != null && p.use && E.push(
      Sl(r.value)
    ), (T = a.value) != null && T.use && E.push(
      Tl(a.value)
    ), E;
  });
  return {
    destroyPopover: () => {
      o.value && (o.value(), o.value = void 0);
    },
    startPopper: () => {
      !o.value && t.value.$el && n.value && (o.value = pl(
        t.value.$el,
        n.value,
        () => {
          !t.value.$el || !n.value || ml(
            t.value.$el,
            n.value,
            {
              placement: l.value,
              middleware: u.value
            }
          ).then(({ x: E, y: p }) => {
            Object.assign(n.value.style, {
              left: `${E}px`,
              top: `${p}px`
            });
          });
        }
      ));
    }
  };
}
function qM() {
  const e = B(void 0), t = B(void 0);
  return {
    dropdownButtonRef: e,
    dropdownRef: t
  };
}
const ad = B(!1);
function ES() {
  return {
    closeDropdownGlobal: () => {
      ad.value = !1;
    },
    isDropdownGlobalOpen: ad,
    openDropdownGlobal: () => {
      ad.value = !0;
    }
  };
}
function $M(e, { emit: t }, {
  dropdownButtonRef: n = B(void 0),
  dropdownRef: r = B(void 0),
  destroyPopover: a = () => {
  },
  setFocusToFirstElement: l = () => {
  },
  startPopper: o = () => {
  }
}) {
  const u = f(e, "disabled"), h = f(e, "dropdownRenderDefault"), A = f(e, "elementsForArrows"), E = f(e, "isCloseByClickInside"), p = f(e, "isCloseByClickOutside"), T = f(e, "isListWidthSameWithButton"), m = f(e, "lockArrowsNavigation"), b = f(e, "lockTabNavigation"), L = f(e, "persist"), v = f(e, "useEscape"), I = B(void 0), R = B(!1), y = B(!1), C = B(void 0), w = B(void 0), F = B(!1), {
    closeDropdownGlobal: P,
    openDropdownGlobal: q
  } = ES(), N = () => {
    F.value = h.value || !1;
  }, U = ({ down: ce }) => {
    var $;
    const Ae = r.value.querySelectorAll(A.value);
    if (Ae.length !== 0) {
      if ((($ = n.value) == null ? void 0 : $.$el) === document.activeElement) {
        ce ? Ae[0].focus() : Ae[Ae.length - 1].focus();
        return;
      }
      Y(Ae, (ee, re) => {
        if (ee === document.activeElement)
          return ce ? re < Ae.length - 1 && Ae[re + 1].focus() : re > 0 && Ae[re - 1].focus(), !1;
      });
    }
  }, V = () => {
    var ce, Ae;
    (Ae = (ce = n.value) == null ? void 0 : ce.$el) == null || Ae.focus();
  }, j = (ce) => {
    const Ae = ce || window.$event;
    if (Ae.keyCode === X.arrowDown || Ae.keyCode === X.arrowUp) {
      if (!m.value)
        return;
      const $ = Ae.keyCode === X.arrowDown;
      U({ down: $ }), ce.preventDefault(), ce.stopPropagation();
    } else if (Ae.keyCode === X.escape)
      v.value && (me({ trigger: "click" }), ce.preventDefault(), ce.stopPropagation());
    else if (Ae.keyCode === X.tab) {
      if (!b.value)
        return;
      Ae.shiftKey ? (me(), setTimeout(() => {
        var $;
        OM({
          element: ($ = n.value) == null ? void 0 : $.$el
        });
      })) : (me(), setTimeout(() => {
        var $;
        RM({
          element: ($ = n.value) == null ? void 0 : $.$el
        });
      })), ce.stopPropagation(), ce.preventDefault();
    }
  }, ne = () => {
    p.value && document.addEventListener("click", Le);
  }, Z = () => {
    p.value && document.removeEventListener("click", Le);
  }, le = () => {
    R.value || (R.value = !0, document.body.addEventListener("keydown", j));
  }, oe = () => {
    R.value && (R.value = !1, document.body.removeEventListener("keydown", j));
  }, fe = () => {
    T.value && n.value && (I.value = n.value.clientWidth);
  }, he = ({ trigger: ce = "click", selectorToFocus: Ae } = {}) => {
    ce === "hover" && w.value === "hover" && clearTimeout(C.value), !(u.value || y.value) && (w.value = ce, fe(), le(), y.value = !0, L.value && F.value && o(), F.value = !0, setTimeout(() => {
      ne(), Ae ? setTimeout(() => {
        document.getElementById(Ae).focus();
      }) : ce === "click" && setTimeout(() => {
        l();
      }), q(), t("open");
    }));
  }, we = ({ $event: ce }) => {
    w.value === "hover" ? y.value && (w.value = "click", ce.stopPropagation()) : y.value ? me({ trigger: "click" }) : he();
  }, Ie = (ce) => {
    (ce.keyCode === X.enter || ce.keyCode === X.space) && (we({ $event: ce }), ce.stopPropagation(), ce.preventDefault()), (ce.keyCode === X.arrowUp || ce.keyCode === X.arrowDown) && (y.value || he());
  };
  function se({ trigger: ce }) {
    Z(), oe(), a(), y.value = !1, P(), ce && ce !== "hover" && // the event did not come from outside
    w.value !== "hover" && V(), w.value = void 0, t("close");
  }
  function me({ trigger: ce } = {}) {
    if (y.value)
      if (ce === "hover") {
        if (w.value !== "hover")
          return;
        C.value = setTimeout(() => {
          se({ trigger: ce });
        }, 120);
      } else
        se({ trigger: ce });
  }
  function Le(ce) {
    r.value.contains(ce.target) ? E.value && (me(), V()) : me();
  }
  return {
    buttonWidth: I,
    destroyEventCloseClick: Z,
    destroyEventPressArrows: oe,
    initWasOpened: N,
    onClose: me,
    onKeydown: Ie,
    onOpen: he,
    onToggle: we,
    statusExpanded: y,
    timerCloseHover: C,
    triggerOpen: w,
    wasOpened: F
  };
}
const ei = {
  name: "ADropdown",
  inheritAttrs: !1,
  props: {
    actions: {
      type: Array,
      required: !1,
      default: () => []
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    buttonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    buttonIconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonIconClass: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonIconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    buttonIconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    buttonIconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonIsTitleHtml: {
      type: Boolean,
      required: !1
    },
    buttonLoading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    buttonLoadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    buttonLoadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    buttonPrevent: {
      type: Boolean,
      required: !1
    },
    buttonStop: {
      type: Boolean,
      required: !1
    },
    buttonTag: {
      type: String,
      required: !1,
      default: "button"
    },
    buttonText: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTextAriaHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    buttonTextClass: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonTextScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTitle: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTitlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => ["top", "left", "bottom", "right"].indexOf(e) !== -1
    },
    caretIcon: {
      type: String,
      required: !1,
      default: cs
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dropdownClass: {
      type: String,
      required: !1,
      default: void 0
    },
    dropdownRenderDefault: {
      type: Boolean,
      required: !1
    },
    dropdownTag: {
      type: String,
      required: !1,
      default: "ul"
    },
    elementsForArrows: {
      type: String,
      required: !1,
      default: os
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    floatingFlip: {
      type: Object,
      required: !1,
      /*
       * mainAxis?: boolean;
       * crossAxis?: boolean;
       * fallbackAxisSideDirection?: 'none' | 'start' | 'end';
       * flipAlignment?: boolean;
       * fallbackPlacements?: Array<Placement>;
       * fallbackStrategy?: 'bestFit' | 'initialPlacement';
       */
      default: () => ({})
    },
    floatingShift: {
      type: Object,
      required: !1,
      default: () => ({
        use: !0,
        crossAxis: !0,
        padding: 20
      })
    },
    hasCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => ot("a_dropdown_btn_")
    },
    inBody: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isCloseByClickInside: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isCloseByClickOutside: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHideWithoutActionAndSlot: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isListWidthSameWithButton: {
      type: Boolean,
      required: !1
    },
    lockArrowsNavigation: {
      type: Boolean,
      required: !1,
      default: !0
    },
    lockTabNavigation: {
      type: Boolean,
      required: !1,
      default: !0
    },
    menuWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    persist: {
      type: Boolean,
      required: !1,
      default: !0
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => Lr.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: "a_tooltip_container"
    },
    triggers: {
      type: Array,
      required: !1,
      default: () => ["click"],
      validator: (e) => _w(e, ["click", "hover", "focus"]).length === 0
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: [
    "open",
    "close"
  ],
  setup(e, t) {
    const {
      dropdownButtonRef: n,
      dropdownRef: r
    } = qM(), {
      setFocusToFirstElement: a
    } = FM(e, {
      dropdownRef: r
    }), {
      destroyPopover: l,
      startPopper: o
    } = MM(e, {
      dropdownButtonRef: n,
      dropdownRef: r
    }), {
      buttonWidth: u,
      destroyEventCloseClick: h,
      destroyEventPressArrows: A,
      initWasOpened: E,
      onClose: p,
      onKeydown: T,
      onOpen: m,
      onToggle: b,
      statusExpanded: L,
      timerCloseHover: v,
      triggerOpen: I,
      wasOpened: R
    } = $M(e, t, {
      dropdownButtonRef: n,
      dropdownRef: r,
      destroyPopover: l,
      setFocusToFirstElement: a,
      startPopper: o
    }), {
      eventsLocal: y,
      eventsMenu: C
    } = xM(e, {
      onToggle: b,
      onKeydown: T,
      onOpen: m,
      onClose: p,
      timerCloseHover: v,
      triggerOpen: I
    }), {
      idLocal: w,
      buttonAttributesDisabled: F,
      buttonAttributesLocal: P,
      dropdownAttributesLocal: q,
      isMenuRendered: N
    } = wM(e, {
      eventsMenu: C,
      statusExpanded: L,
      wasOpened: R
    }), {
      actionsFiltered: U,
      hasActions: V
    } = BM(e), {
      addPopperContainerInBody: j,
      popperContainerIdSelector: ne
    } = Ic(e), {
      buttonClassLocal: Z
    } = PM(e);
    return E(), j(), Ot(() => {
      h(), A(), l();
    }), {
      actionsFiltered: U,
      buttonAttributesDisabled: F,
      buttonAttributesLocal: P,
      buttonClassLocal: Z,
      buttonWidth: u,
      dropdownAttributesLocal: q,
      dropdownButtonRef: n,
      dropdownRef: r,
      eventsLocal: y,
      hasActions: V,
      idLocal: w,
      isMenuRendered: N,
      onClose: p,
      onOpen: m,
      popperContainerIdSelector: ne,
      startPopper: o,
      statusExpanded: L
    };
  },
  render() {
    return this.isHideWithoutActionAndSlot && !this.hasActions && !this.$slots.dropdown ? null : [
      c(Oe, {
        ref: "dropdownButtonRef",
        ...this.$attrs,
        id: this.idLocal,
        alwaysTranslate: this.alwaysTranslate,
        tag: this.buttonTag,
        class: this.buttonClassLocal,
        text: this.buttonText,
        textScreenReader: this.buttonTextScreenReader,
        textAriaHidden: this.buttonTextAriaHidden,
        textClass: this.buttonTextClass,
        title: this.buttonTitle,
        isTitleHtml: this.buttonIsTitleHtml,
        titlePlacement: this.buttonTitlePlacement,
        loading: this.buttonLoading,
        loadingClass: this.buttonLoadingClass,
        loadingAlign: this.buttonLoadingAlign,
        iconLeft: this.buttonIconLeft,
        iconRight: this.buttonIconRight,
        iconClass: this.buttonIconClass,
        iconAttributes: this.buttonIconAttributes,
        iconTag: this.buttonIconTag,
        prevent: this.buttonPrevent,
        stop: this.buttonStop,
        extra: this.extra,
        type: "button",
        attributes: this.buttonAttributesLocal,
        ...this.buttonAttributesDisabled,
        ...this.eventsLocal
      }, {
        default: () => this.$slots.button && this.$slots.button(),
        buttonAppend: () => this.hasCaret && c(st, {
          class: "a_dropdown__caret",
          icon: this.caretIcon
        })
      }),
      c(ti, {
        to: this.popperContainerIdSelector,
        disabled: !this.inBody
      }, [
        this.isMenuRendered && Ft(c(
          "div",
          {
            ref: "dropdownRef",
            role: "application",
            "aria-labelledby": this.idLocal,
            ariaHidden: !this.statusExpanded,
            ...this.dropdownAttributesLocal
          },
          [
            c(this.dropdownTag, {}, [
              this.$slots.dropdown && this.$slots.dropdown(),
              this.hasActions && this.actionsFiltered.map((e, t) => c(DM, {
                key: t,
                action: e,
                alwaysTranslate: this.alwaysTranslate
              }, this.$slots))
            ])
          ]
        ), [
          [rl, {
            mounted: this.startPopper
          }]
        ])
      ])
    ];
  }
}, kM = {
  name: "AErrorsElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    error: {
      type: [Object, Array, String],
      required: !1,
      default: void 0
    },
    errorKey: {
      type: String,
      required: !1,
      default: void 0
    },
    errorLabels: {
      type: [String, Object],
      required: !0
    },
    goToError: {
      type: Function,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => ot("a_errors_")
    },
    isErrorLink: {
      type: Boolean,
      required: !0
    }
  },
  setup(e) {
    const t = f(e, "errorLabels"), n = _(() => lt(t.value) ? t.value : nt(t.value) ? t.value.label : ""), r = f(e, "isErrorLink"), a = _(() => nt(t.value) && t.value.link && r.value), l = f(e, "error"), o = _(() => lt(l.value)), u = _(() => Te(l.value)), h = _(() => nt(l.value)), A = _(() => Te(t.value)), E = f(e, "id"), p = _(() => de(t.value, "id") || E.value), T = f(e, "goToError"), m = f(e, "errorKey"), b = () => {
      if (qe(T.value))
        return T.value({
          id: p.value,
          key: m.value
        });
      let v = p.value;
      if (ae(m.value) || (v = `${v}_${m.value}`), _s(v) > 0) {
        const I = document.getElementById(v);
        I && I.focus();
      }
    };
    return {
      currentLabel: n,
      goToErrorLocal: b,
      isErrorArray: u,
      isErrorLabelsArray: A,
      isErrorLinkLocal: a,
      isErrorObject: h,
      isErrorString: o,
      onKeydown: (v) => {
        (v.keyCode === X.enter || v.keyCode === X.space) && (b(), v.stopPropagation(), v.preventDefault());
      }
    };
  },
  render() {
    return c("div", {
      class: "a_error__list__li"
    }, [
      this.isErrorString ? this.isErrorLinkLocal ? c(Oe, {
        type: "link",
        class: "a_errors__label a_btn a_btn_link a_p_0",
        tabindex: 0,
        "aria-describedby": this.id,
        safeHtml: this.currentLabel,
        textTag: "strong",
        textAfter: ":",
        onClick: this.goToErrorLocal,
        onKeydown: this.onKeydown
      }) : c("div", {
        class: "a_errors__label",
        "aria-describedby": this.id
      }, [
        c(pe, {
          tag: "strong",
          safeHtml: this.currentLabel
        })
      ]) : "",
      c(
        "div",
        {
          id: this.id,
          class: "a_errors__errors"
        },
        this.isErrorString ? [
          c(pe, {
            alwaysTranslate: this.alwaysTranslate,
            tag: "span",
            html: this.error
          })
        ] : this.isErrorArray ? [...this.error.map((e, t) => c(Fr("AErrorsElement"), {
          key: t,
          error: e,
          alwaysTranslate: this.alwaysTranslate,
          errorLabels: this.isErrorLabelsArray ? this.errorLabels[t] || this.errorLabels : this.errorLabels,
          goToError: this.goToError,
          isErrorLink: this.isErrorLink
        }))] : this.isErrorObject ? [
          c("div", {
            class: "a_pl_2"
          }, [
            ...Object.keys(this.error).map((e) => c(Fr("AErrorsElement"), {
              key: e,
              alwaysTranslate: this.alwaysTranslate,
              error: this.error[e],
              errorLabels: this.errorLabels[e] || this.errorLabels,
              goToError: this.goToError,
              isErrorLink: this.isErrorLink
            }))
          ])
        ] : []
      )
    ]);
  }
};
function HM({ emit: e }) {
  return {
    close: () => {
      e("close");
    }
  };
}
function UM(e) {
  const t = f(e, "errors");
  return {
    hasErrors: _(() => !wn(t.value))
  };
}
function WM(e, {
  hasErrors: t = _(() => !1)
}) {
  const n = f(e, "autoFocus"), r = B(void 0);
  return {
    elRef: r,
    setFocusToElement: () => {
      n.value && t.value && setTimeout(() => {
        r.value.$el.focus();
      });
    }
  };
}
function VM(e) {
  const t = f(e, "optionsList"), n = f(e, "idPrefix"), r = (l) => {
    let o = {};
    return Y(l, (u) => {
      o[u.id] = {
        label: u.labelError || u.label,
        link: Pe(u.isErrorLink) ? !0 : u.isErrorLink,
        id: sl({
          id: u.id,
          idPrefix: u.idPrefix || n.value,
          htmlId: u.htmlId
        })
      }, u.children && u.children.length && (o = {
        ...o,
        ...r(u.children)
      });
    }), o;
  };
  return {
    labelsLocal: _(() => {
      let l = {};
      return t.value.forEach((o) => {
        l[o.id] = {
          label: o.labelError || o.label,
          link: Pe(o.isErrorLink) ? !0 : o.isErrorLink,
          id: sl({
            id: o.id,
            idPrefix: o.idPrefix || n.value,
            htmlId: o.htmlId
          })
        }, o.children && o.children.length && (l = {
          ...l,
          ...r(o.children)
        });
      }), l;
    })
  };
}
const GM = {
  name: "AErrors",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closable: {
      type: Boolean,
      required: !1,
      default: !0
    },
    goToError: {
      type: Function,
      required: !1,
      default: void 0
    },
    optionsList: {
      type: Array,
      required: !1,
      default: () => []
    },
    autoFocus: {
      type: Boolean,
      required: !1,
      default: !0
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: "Bitte überprüfen Sie Ihre Eingaben."
    },
    isErrorLink: {
      type: Boolean,
      required: !1,
      default: !0
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      hasErrors: n
    } = UM(e), {
      elRef: r,
      setFocusToElement: a
    } = WM(e, {
      hasErrors: n
    }), {
      labelsLocal: l
    } = VM(e), {
      close: o
    } = HM(t);
    return tt(n, () => {
      a();
    }), kr(() => {
      a();
    }), {
      close: o,
      elRef: r,
      hasErrors: n,
      labelsLocal: l
    };
  },
  render() {
    return c(gc, {
      ref: "elRef",
      alwaysTranslate: this.alwaysTranslate,
      tabindex: -1,
      role: "alert",
      "aria-atomic": !0,
      isVisible: this.hasErrors,
      closable: this.closable,
      onClose: this.close
    }, () => [
      this.hasErrors && c("div", {
        class: "a_errors"
      }, [
        c("div", {
          class: "a_errors__header"
        }, [
          c("strong", null, this.textErrorHeader)
        ]),
        c("div", {
          class: "a_errors__list"
        }, [
          ...Object.keys(this.errors).map((e) => c(kM, {
            key: e,
            alwaysTranslate: this.alwaysTranslate,
            error: this.errors[e],
            errorLabels: this.labelsLocal[e] || this.labelsLocal,
            goToError: this.goToError,
            isErrorLink: this.isErrorLink
          }))
        ])
      ])
    ]);
  }
};
function jM(e, {
  ensurePrecision: t = () => {
  },
  getCleanIntValue: n = () => {
  },
  setCurrentValue: r = () => {
  },
  modelNumber: a = _(() => {
  })
}) {
  const l = f(e, "decimalDivider"), o = f(e, "disabled"), u = f(e, "modelValue"), h = f(e, "max"), A = f(e, "min"), E = f(e, "decimalPartLength"), p = f(e, "step"), T = f(e, "thousandDivider"), m = _(() => a.value <= A.value), b = _(() => a.value >= h.value), L = (C) => {
    if (l.value) {
      const w = typeof C == "number" ? C.toString().split(".") : C.toString().split(l.value), F = w[0], P = F[0] === "-" ? "-" : "", q = T.value ? n({ value: F, thousandDivider: T.value }) : F, N = w.length > 1 ? w[1] : "", U = N.length, V = er(E.value - U, () => "0").join("");
      return `${P}${q}${l.value}${N}${V}`;
    }
    return C;
  }, v = () => {
    const C = L(h.value);
    r(C);
  }, I = () => {
    const C = L(A.value);
    r(C);
  };
  return {
    adjustFloatPartAndDivider: L,
    increase: () => {
      if (o.value || b.value)
        return;
      const C = a.value, w = t({
        value: C,
        currentValue: u.value
      }).replace(".", l.value);
      if (C + p.value > h.value) {
        v();
        return;
      }
      r(L(w));
    },
    decrease: () => {
      if (o.value || m.value)
        return;
      const C = a.value, w = t({
        value: C,
        currentValue: u.value,
        coefficient: -1
      }).replace(".", l.value);
      if (C - p.value < A.value) {
        I();
        return;
      }
      r(L(w));
    }
  };
}
function zM(e, {
  adjustFloatPartAndDivider: t = () => {
  },
  decrease: n = () => {
  },
  getCleanIntValue: r = () => {
  },
  increase: a = () => {
  },
  modelNumber: l = _(() => {
  }),
  modelUndefinedLocal: o = _(() => {
  }),
  onBlur: u = () => {
  },
  setCurrentValue: h = () => {
  }
}) {
  const A = f(e, "decimalDivider"), E = B(void 0), p = f(e, "max"), T = f(e, "min"), m = f(e, "modelValue"), b = f(e, "required"), L = f(e, "decimalPartLength"), v = f(e, "thousandDivider"), I = f(e, "validationOnChange"), R = B(0), y = navigator.userAgent.indexOf("Firefox") !== -1 ? 1 : 0, C = [
    X.tab,
    X.del,
    X.escape,
    X.backspace,
    X.arrowLeft,
    X.arrowRight,
    X.home,
    X.end
  ], w = _(() => !L.value), F = ($) => Number(`${$}`.replaceAll(v.value, "").replace(A.value, ".")), P = ($, ee) => {
    h($, ee);
  }, q = ($) => {
    setTimeout(() => {
      E.value.setSelectionRange($, $);
    });
  }, N = () => {
    const $ = t(p.value);
    P($);
  }, U = () => {
    const $ = t(T.value);
    P($);
  }, V = ($) => {
    const ee = F($);
    if (ee > p.value)
      return N(), !0;
    if (ee < T.value)
      return U(), !0;
  }, j = ($, ee, re = !1) => {
    var _t;
    if (!b.value && ae(ee) && !((_t = $ == null ? void 0 : $.target) != null && _t.value)) {
      P(ee, re);
      return;
    }
    let be;
    re ? be = typeof ee == "number" ? `${ee}`.replace(".", A.value) : ee : be = ae(ee) ? $.target.value : `${ee}`;
    const He = be.indexOf(A.value) !== -1, Ve = E.value.selectionStart, Ye = be.split(A.value), Re = Ye[0].length && Ye[0][0] === "-" ? "-" : "", je = Number(Ye[0].replace(/[^0-9]/g, "")).toString(), ft = Ye[1] ? Ye[1].substring(0, L.value) : "";
    if (ae(je) || je === "")
      return;
    const $e = v.value ? r({ value: je, thousandDivider: v.value }) : je;
    let it;
    if (w.value)
      it = `${Re}${$e}`;
    else if (re) {
      const mt = ft || "", vt = er(L.value - mt.length, () => "0").join("");
      it = `${Re}${$e}${A.value}${mt}${vt}`;
    } else ft ? it = `${Re}${$e}${A.value}${ft}` : He ? it = `${Re}${$e}${A.value}` : it = `${Re}${$e}`;
    I.value && V(it) || (P(it, re), q(Ve));
  }, ne = ({ value: $ }) => {
    T.value >= 0 || $[0] !== "-" && (R.value++, setTimeout(() => {
      const ee = `-${$}`;
      I.value && V(ee) || (P(ee), R.value--);
    }, y));
  }, Z = ({ value: $ }) => {
    $[0] === "-" && (R.value++, setTimeout(() => {
      const ee = $.replace("-", "");
      I.value && V(ee) || (P(ee), R.value--);
    }, y));
  }, le = ({ value: $ }) => {
    R.value++, setTimeout(() => {
      const ee = E.value.selectionStart;
      if (v.value && $[ee - 1] === v.value) {
        const re = ee - 1;
        q(re);
      }
      R.value--;
    }, y);
  }, oe = ({ value: $ }) => {
    setTimeout(() => {
      R.value++;
      const ee = E.value.selectionStart;
      if (v.value && $[ee - 1] === v.value) {
        const re = ee + 1;
        q(re);
      }
      R.value--;
    }, y);
  }, fe = ({ value: $, cursorPosition: ee }, re) => {
    setTimeout(() => {
      R.value++;
      let be = E.value.value;
      if (re) {
        const xe = $.length + 1;
        be[be.length - 1] === A.value && (be += er(L.value, () => "0").join(""), P(be), q(xe));
      } else {
        const xe = $.substring(0, ee).split("").reverse().join("").replaceAll(v.value, "").match(/.{1,3}/g).join(v.value).split("").reverse().join("");
        let He = $.substring(ee, $.length).replace(/[^0-9]/g, "").substring(0, L.value);
        He = `${He}${er(L.value - He.length, () => "0").join("")}`;
        const Ve = [
          xe,
          He
        ].join(A.value);
        P(Ve), q(xe.length + 1);
      }
      R.value--;
    });
  }, he = ({ cursorPosition: $, numberOfSymbols: ee }) => {
    let re = $ && $ - 1;
    E.value.value.length < ee - 1 && re > 0 && re--, q(re);
  }, we = ({ hasDecimalDivider: $, value: ee, cursorPosition: re }) => {
    const be = ee.length;
    if (!w.value) {
      const xe = ee.indexOf(A.value);
      if ($ && xe === re - 1) {
        const Ve = ee.split(A.value)[0];
        R.value++, setTimeout(() => {
          he({ cursorPosition: re, numberOfSymbols: be }), P(Ve), R.value--;
        }, y);
        return;
      }
      R.value++, setTimeout(() => {
        he({ cursorPosition: re, numberOfSymbols: be }), R.value--;
      }, y);
    }
  }, Ie = ({ value: $, $event: ee, hasDecimalDivider: re, cursorPosition: be }) => {
    if (!w.value && re && $[be] === A.value) {
      const He = $.split(A.value)[0];
      P(He), q(be);
      return;
    }
    if (v.value)
      if ($[be] === v.value) {
        ee.preventDefault();
        const xe = be, He = $.split(A.value), Ve = He[0], Ye = He[1];
        let Re = Ve.split("");
        Re.splice(be + 1, 1), Re = Re.reverse().join("").replaceAll(v.value, "").match(/.{1,3}/g).join(v.value).split("").reverse().join("");
        let je;
        w.value ? je = Re : Ye ? je = `${Re}${A.value}${Ye}` : re ? je = `${Re}${A.value}` : je = Re, P(je), q(xe + 1);
      } else
        setTimeout(() => {
          R.value++, E.value.value.length < $.length - 1 && q(be > 0 ? be - 1 : 0), R.value--;
        }, y);
  };
  return {
    handleInput: j,
    handleKeydown: ($) => {
      if (R.value) {
        $.preventDefault();
        return;
      }
      const ee = $.target.value, re = $.keyCode, be = $.key, xe = re >= 48 && re <= 57 || re >= 96 && re <= 105, He = be === A.value && !!L.value, Ve = $.target.value.indexOf(A.value), Ye = Ve !== -1, Re = E.value.selectionStart, je = Re === ee.length, ft = {
        value: ee,
        keyCode: re,
        keyValue: be,
        keyIsNumber: xe,
        keyIsDecimalDivider: He,
        hasDecimalDivider: Ye,
        cursorPosition: Re,
        $event: $
      };
      if (re === X.arrowUp) {
        a(), $.preventDefault();
        return;
      }
      if (re === X.arrowDown) {
        n(), $.preventDefault();
        return;
      }
      if (re === X.minus || re === X.numMinus) {
        ne(ft), $.preventDefault();
        return;
      }
      if (re === X.plus && $.shiftKey || re === X.numPlus) {
        Z(ft), $.preventDefault();
        return;
      }
      if (re === X.arrowLeft) {
        le(ft);
        return;
      }
      if (re === X.arrowRight) {
        oe(ft);
        return;
      }
      if (He) {
        if (Ye) {
          q(Ve + 1), $.preventDefault();
          return;
        }
        je || $.preventDefault(), fe(ft, je);
        return;
      }
      if ($.keyCode === X.backspace) {
        if (E.value.selectionStart !== E.value.selectionEnd)
          return;
        we(ft);
        return;
      }
      if ($.keyCode === X.del) {
        Ie(ft);
        return;
      }
      if (xe && !$.ctrlKey && Ye) {
        const $e = ee.indexOf(A.value);
        if (Re > $e && ee.split(A.value)[1].length === L.value) {
          if (je) {
            $.preventDefault();
            return;
          }
          $.preventDefault();
          const mt = ee.split("");
          mt[Re] = be;
          const vt = mt.join("");
          P(vt), R.value++, setTimeout(() => {
            q(Re + 1), R.value--;
          }, y);
          return;
        }
      }
      if (!xe && !$.ctrlKey && !Sd(C, $.keyCode) && $.preventDefault(), $.keyCode !== X.home && $.keyCode !== X.end && !$.ctrlKey && $.keyCode)
        if (Re === 0 && ee.length && ee[0] === "0") {
          $.preventDefault();
          const $e = `${be}${ee.slice(1)}`;
          P($e), q(1);
        } else {
          const $e = ee.length;
          R.value++, setTimeout(() => {
            let it = Re + 1;
            const _t = E.value.value.length;
            _t - 1 > $e ? it++ : _t === $e && it--, q(it), R.value--;
          }, y);
        }
    },
    handlePaste: ($) => {
      var _t;
      $.preventDefault();
      const re = ($.clipboardData || window.clipboardData).getData("text").split(A.value), be = re[0].replace(/[^0-9]/g, ""), xe = ((_t = re[1]) == null ? void 0 : _t.replace(/[^0-9]/g, "")) || "";
      let He;
      const Ve = E.value.selectionStart, Ye = E.value.selectionEnd, Re = E.value.value, je = Re.indexOf(A.value) !== -1, $e = Re.substring(Ve, Ye).indexOf(A.value) !== -1;
      je && !$e ? He = xe ? [be, xe].join("") : be : He = xe ? [be, xe].join(A.value) : be;
      const it = Re.slice(0, Ve) + He + Re.slice(Ye);
      j(null, it);
    },
    initFirstCheck: () => {
      setTimeout(() => {
        let $;
        if (m.value || m.value === 0) {
          if ($ = m.value.toString().replace(".", A.value), A.value) {
            const ee = $.toString().split(A.value), re = ee[0], be = re[0] === "-" ? "-" : "", xe = ee.length > 1 ? ee[1] : "", He = xe.length, Ve = er(L.value - He, () => "0").join("");
            $ = `${be}${re}${A.value}${xe}${Ve}`;
          }
        } else
          $ = b.value ? [
            "0",
            A.value,
            er(L.value, () => "0").join("")
          ].join("") : o.value;
        j(null, $, !0);
      });
    },
    inputRef: E,
    onBlurNumber: ($) => {
      let ee = $.target.value;
      if (w.value || (ee = ee.split(A.value)[0]), ae(ee) || ee === "") {
        if (b.value) {
          if (T.value > 0) {
            const be = A.value ? `0${A.value}${er(L.value, () => "0").join("")}` : "0";
            P(be);
          } else
            U();
          u($);
          return;
        }
        const re = o.value;
        P(re), u($);
        return;
      } else if (l.value < T.value) {
        U();
        return;
      } else if (l.value > p.value) {
        N();
        return;
      }
      if (L.value) {
        let re = `${$.target.value}`;
        const xe = re.split(A.value)[1];
        re.indexOf(A.value) === -1 ? re += `${A.value}${er(L.value, () => "0").join("")}` : xe.length < L.value && (re += `${er(L.value - xe.length, () => "0").join("")}`), P(re);
      }
      u($);
    },
    onClickNumber: ($) => {
      R.value++, setTimeout(() => {
        const ee = $.target.selectionStart, re = $.target.value;
        v.value && v.value === re[ee - 1] && q(ee - 1), R.value--;
      });
    }
  };
}
function KM(e, {
  changeModel: t = () => {
  }
}) {
  const n = f(e, "required"), r = f(e, "modelValue"), a = f(e, "modelType"), l = f(e, "modelUndefined"), o = f(e, "decimalDivider"), u = f(e, "disabled"), h = f(e, "decimalPartLength"), A = f(e, "thousandDivider"), E = B(void 0), p = B(!1), T = B(void 0), m = () => {
    E.value = r.value, T.value = r.value;
  }, b = _(() => Number(`${E.value}`.replaceAll(A.value, "").replace(o.value, "."))), L = _(() => n.value ? [
    "0",
    o.value,
    er(h.value, () => "0").join("")
  ].join("") : l.value), v = (R, y = !1) => {
    E.value = ae(R) ? "" : R;
    let C;
    !n.value && ae(R) ? C = L.value : C = a.value === "number" ? Number(`${R}`.replaceAll(A.value, "").replace(o.value, ".")) : R, y || (p.value = !0, T.value = C, t({ model: C }));
  };
  return {
    clearModel: () => {
      u.value || v(L.value);
    },
    displayValue: E,
    initLocalVars: m,
    isInternalChange: p,
    localModel: T,
    modelNumber: b,
    modelUndefinedLocal: L,
    setCurrentValue: v
  };
}
function YM() {
  return {
    getCleanIntValue: ({ value: t, thousandDivider: n }) => t.replaceAll(n, "").replaceAll("-", "").split("").reverse().join("").match(/.{1,3}/g).join(n).split("").reverse().join("")
  };
}
function xoe(e) {
  return Oi(e) ? Math.abs(e % 2) === 1 : !1;
}
function ZM(e) {
  return Oi(e) ? e % 2 === 0 : !1;
}
function Bo(e, t) {
  if (t === 0)
    return Math.round(e);
  let n = String(e);
  const r = n.indexOf(".");
  if (r === -1 || !n.replace(".", "").split("")[r + t])
    return e;
  const o = n.length;
  return n.charAt(o - 1) === "5" && (n = `${n.slice(0, Math.max(0, o - 1))}6`), Number.parseFloat(Number(n).toFixed(t));
}
function XM(e) {
  const t = f(e, "step"), n = f(e, "decimalPartLength");
  return {
    ensurePrecision: ({ value: a, currentValue: l, coefficient: o = 1 }) => bn(a) ? Bo(a + t.value * o, n.value).toString() : l
  };
}
function JM(e) {
  const t = f(e, "inputWidth");
  return {
    inputWidthStyleValue: _(() => {
      let r = t.value;
      return bn(t.value) && (r = `${t.value}px`), Pe(r) ? {} : {
        "--a_input_number_width": r
      };
    })
  };
}
const pS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-dash" viewBox="0 0 16 16">
  <path d="M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8"/>
</svg>`, TS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4"/>
</svg>`, Qt = B({
  propsDefault: {
    controlsType: "none",
    currencySymbol: "€",
    currencySymbolPosition: "right",
    decimalDivider: ",",
    decimalPartLength: 2,
    iconPrepend: void 0,
    inputWidth: 200,
    isLabelFloat: !1,
    max: void 0,
    min: void 0,
    modelUndefined: void 0,
    placeholder: void 0,
    step: 1,
    thousandDivider: "."
  }
}), Foe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Qt.value.propsDefault = {
      ...Qt.value.propsDefault,
      ...t
    };
  }
}, QM = {
  name: "AInputCurrency",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    controlsType: {
      type: String,
      required: !1,
      default: () => Qt.value.propsDefault.controlsType,
      validator: (e) => ["plus-minus", "arrows", "none"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    currencySymbol: {
      type: String,
      required: !1,
      default: () => Qt.value.propsDefault.currencySymbol
    },
    currencySymbolPosition: {
      type: String,
      required: !1,
      default: () => Qt.value.propsDefault.currencySymbolPosition,
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    decimalDivider: {
      type: String,
      required: !1,
      default: () => Qt.value.propsDefault.decimalDivider,
      validator: (e, t) => {
        const n = t == null ? void 0 : t.thousandDivider;
        return n ? [".", ","].indexOf(e) !== -1 && e !== n : [".", ","].indexOf(e) !== -1;
      }
    },
    decimalPartLength: {
      type: Number,
      required: !1,
      default: () => Qt.value.propsDefault.decimalPartLength,
      validator: (e) => e >= 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: () => Qt.value.propsDefault.iconPrepend
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => ot("a_input_currency_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    inputWidth: {
      type: [String, Number],
      required: !1,
      default: () => Qt.value.propsDefault.inputWidth
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: () => Qt.value.propsDefault.isLabelFloat
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: () => Qt.value.propsDefault.max
    },
    min: {
      type: Number,
      required: !1,
      default: () => Qt.value.propsDefault.min
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelType: {
      type: String,
      required: !1,
      default: "number",
      validator: (e) => ["number", "string"].indexOf(e) !== -1
    },
    modelUndefined: {
      required: !1,
      default: () => Qt.value.propsDefault.modelUndefined
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: () => Qt.value.propsDefault.placeholder
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    step: {
      type: Number,
      required: !1,
      default: () => Qt.value.propsDefault.step,
      validator: (e) => e > 0
    },
    thousandDivider: {
      type: String,
      required: !1,
      default: () => Qt.value.propsDefault.thousandDivider,
      validator: (e, t) => {
        const n = t == null ? void 0 : t.decimalDivider;
        return n ? [".", ",", " "].indexOf(e) !== -1 && e !== n : [".", ",", " "].indexOf(e) !== -1;
      }
    },
    validationOnChange: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const n = f(e, "modelValue"), {
      attributesToExcludeFromRender: r
    } = wt(e), {
      componentStyleHide: a
    } = zt(e), {
      getCleanIntValue: l
    } = YM(), {
      ariaDescribedbyLocal: o,
      changeModel: u,
      errorsId: h,
      helpTextId: A,
      htmlIdLocal: E,
      isErrors: p,
      isModel: T,
      onBlur: m,
      onFocus: b
    } = an(e, t), {
      isClearButtonLocal: L
    } = Tu(e, {
      isModel: T
    }), {
      placeholderAttributes: v
    } = hl(e), {
      inputWidthStyleValue: I
    } = JM(e), {
      ensurePrecision: R
    } = XM(e), {
      clearModel: y,
      displayValue: C,
      initLocalVars: w,
      isInternalChange: F,
      localModel: P,
      modelNumber: q,
      modelUndefinedLocal: N,
      setCurrentValue: U
    } = KM(e, {
      changeModel: u
    }), {
      adjustFloatPartAndDivider: V,
      increase: j,
      decrease: ne
    } = jM(e, {
      displayValue: C,
      ensurePrecision: R,
      getCleanIntValue: l,
      setCurrentValue: U,
      modelNumber: q
    }), {
      handleInput: Z,
      handleKeydown: le,
      handlePaste: oe,
      initFirstCheck: fe,
      inputRef: he,
      onBlurNumber: we,
      onClickNumber: Ie
    } = zM(e, {
      adjustFloatPartAndDivider: V,
      decrease: ne,
      displayValue: C,
      getCleanIntValue: l,
      increase: j,
      modelNumber: q,
      modelUndefinedLocal: N,
      onBlur: m,
      setCurrentValue: U
    });
    return w(), fe(), tt(n, (se) => {
      F.value || (P.value = se, Z(null, se, !0)), F.value = !1;
    }), {
      ariaDescribedbyLocal: o,
      attributesToExcludeFromRender: r,
      clearModel: y,
      componentStyleHide: a,
      decrease: ne,
      displayValue: C,
      errorsId: h,
      handleInput: Z,
      handleKeydown: le,
      handlePaste: oe,
      helpTextId: A,
      htmlIdLocal: E,
      increase: j,
      inputRef: he,
      inputWidthStyleValue: I,
      isClearButtonLocal: L,
      isErrors: p,
      isModel: T,
      onBlurNumber: we,
      onClickNumber: Ie,
      onFocus: b,
      placeholderAttributes: v
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__container"
      }, [
        c("div", {
          class: ["a_form_element__parent", {
            a_form_element__parent_float: this.isLabelFloat,
            a_form_element__parent_not_empty: this.isModel,
            a_form_element__parent_float_has_icon_prepend: this.iconPrepend,
            a_form_element__parent_invalid: this.isErrors
          }]
        }, [
          (this.label || this.labelScreenReader) && !this.isLabelFloat ? c(kt, {
            id: this.htmlIdLocal,
            extra: this.extra,
            isLabelFloat: this.isLabelFloat,
            isError: this.isErrors,
            label: this.label,
            labelClass: this.labelClass,
            labelScreenReader: this.labelScreenReader,
            required: this.required,
            type: "text"
          }) : "",
          c("div", {
            class: [
              "a_form_element_number",
              {
                a_form_element_number_controls: this.controlsType && this.controlsType !== "none"
              }
            ]
          }, [
            this.currencySymbol && this.currencySymbolPosition === "left" && c("span", {
              class: "a_form_element_number__currency_symbol"
            }, this.currencySymbol),
            c("div", {
              class: "a_form_element",
              style: {
                ...this.inputWidthStyleValue
              }
            }, [
              (this.label || this.labelScreenReader) && this.isLabelFloat ? c(kt, {
                id: this.htmlIdLocal,
                isLabelFloat: this.isLabelFloat,
                isError: this.isErrors,
                label: this.label,
                labelClass: this.labelClass,
                labelScreenReader: this.labelScreenReader,
                required: this.required,
                type: "text"
              }) : "",
              this.iconPrepend && c(st, {
                icon: this.iconPrepend,
                class: "a_input__icon_prepend"
              }),
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                autocomplete: this.autocomplete,
                value: this.displayValue,
                type: "text",
                class: [
                  "a_form_control a_input a_input_number",
                  this.inputClass,
                  {
                    a_form_element_with_one_btn: this.isClearButtonLocal,
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabled,
                ariaRequired: this.required,
                ariaInvalid: this.isErrors,
                "aria-describedby": this.ariaDescribedbyLocal,
                ...this.placeholderAttributes,
                ...this.inputAttributes,
                onInput: this.handleInput,
                onKeydown: this.handleKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlurNumber,
                onClick: this.onClickNumber,
                onPaste: this.handlePaste
              }),
              this.isClearButtonLocal ? c("div", {
                class: "a_form_control__actions"
              }, [
                c(pu, {
                  alwaysTranslate: this.alwaysTranslate,
                  disabled: !1,
                  class: this.clearButtonClass,
                  onClear: this.clearModel
                })
              ]) : ""
            ]),
            this.controlsType === "plus-minus" && c("div", {
              class: "a_btn_group"
            }, [
              c(rt, {
                class: "a_btn a_btn_outline_secondary",
                iconLeft: pS,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_CURRENCY_BTN_DECREASE_",
                textScreenReader: "_A_INPUT_CURRENCY_BTN_DECREASE_",
                onClick: this.decrease
              }),
              c(rt, {
                class: "a_btn a_btn_outline_secondary",
                iconLeft: TS,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_CURRENCY_BTN_INCREASE_",
                textScreenReader: "_A_INPUT_CURRENCY_BTN_INCREASE_",
                onClick: this.increase
              })
            ]),
            this.currencySymbol && this.currencySymbolPosition === "right" && c("div", {
              class: "a_form_element_number__currency_symbol"
            }, this.currencySymbol)
          ]),
          c(rn, {
            id: this.helpTextId,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(nn, {
            id: this.errorsId,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
}, eq = {
  name: "AInputFile",
  inheritAttrs: !1,
  mixins: [
    Kc
  ],
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    isMultiple: {
      type: Boolean,
      required: !1
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    modelUndefined: {
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number, Object, Array],
      required: !1
    },
    text: {
      type: String,
      required: !1,
      default: "Dateien auswählen"
    },
    type: {
      type: String,
      required: !1,
      default: "input"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = wt(e), {
      componentStyleHide: r
    } = zt(e), {
      ariaDescribedbyLocal: a,
      changeModel: l,
      clearModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = an(e, t), m = f(e, "isMultiple"), b = f(e, "modelValue"), L = _(() => m.value ? !!(Te(b.value) && b.value.length > 0) : !!(nt(b.value) && _s(b.value) > 0)), v = _(() => L.value ? m.value ? b.value : [b.value] : []), I = B(void 0), R = f(e, "disabled"), y = (F) => {
      if (R.value)
        return;
      const P = F.target.files;
      if (P && P.length) {
        const q = [];
        Y(P, (N) => {
          q.push({
            id: "",
            size: N.size,
            name: N.webkitRelativePath || N.relativePath || N.name,
            type: N.type,
            file: N
          });
        }), l({
          model: m.value ? q : q[0]
        });
      }
    }, C = f(e, "required"), w = _(() => C.value ? "*" : "");
    return {
      ariaDescribedbyLocal: a,
      attributesToExcludeFromRender: n,
      clearModel: o,
      componentStyleHide: r,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      inputRef: I,
      isErrors: E,
      isModel: L,
      modelValueListLocal: v,
      onBlur: p,
      onFocus: T,
      onInput: y,
      textAfterLabel: w
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__parent"
      }, [
        this.label && c(kt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          hideId: !0,
          type: this.type,
          isError: this.isErrors
        }),
        c("div", {}, [
          c("label", {
            for: this.htmlIdLocal,
            class: ["a_file__label a_form_control", this.labelClass, {
              disabled: this.disabled
            }],
            required: this.required,
            type: this.type
          }, [
            c("input", {
              ref: "inputRef",
              id: this.htmlIdLocal,
              type: "file",
              multiple: this.isMultiple,
              class: [
                "a_file__input",
                this.inputClass,
                {
                  a_form_control_invalid: this.isErrors
                }
              ],
              disabled: this.disabled,
              ariaRequired: this.required,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              ...this.inputAttributes,
              onInput: this.onInput,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }),
            c("span", {
              class: "a_file__label"
            }, this.text)
          ])
        ]),
        this.isModel && c("ul", {}, [
          this.modelValueListLocal.map((e) => c("li", {}, e.name))
        ]),
        c(rn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(nn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, tq = {
  props: {
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    }
  }
};
function nq(e, {
  currentValue: t = B(0),
  displayValue: n = _(() => ""),
  ensurePrecision: r = () => {
  },
  setCurrentValue: a = () => {
  },
  minLocal: l = _(() => {
  })
}) {
  const o = f(e, "disabled"), u = f(e, "modelValue"), h = f(e, "max"), A = f(e, "readonly"), E = _(() => bn(u.value) && u.value <= l.value), p = _(() => bn(u.value) && u.value >= h.value);
  return {
    increase: () => {
      if (A.value || o.value || p.value)
        return;
      const b = Number(n.value) || 0, L = r({ value: b, currentValue: t.value });
      a(L);
    },
    decrease: () => {
      if (A.value || o.value || E.value)
        return;
      const b = Number(n.value) || 0, L = r({ value: b, currentValue: t.value, coefficient: -1 });
      a(L);
    }
  };
}
function rq(e, {
  decrease: t = () => {
  },
  increase: n = () => {
  },
  inputRef: r = B({}),
  onBlur: a = () => {
  },
  setCurrentValue: l = () => {
  },
  userInput: o = B(null),
  currentValue: u = B(void 0),
  displayValue: h = _(() => ""),
  isTypeNumber: A = _(() => !0)
}) {
  const E = f(e, "type"), p = f(e, "eAllowed"), T = f(e, "min"), m = f(e, "modelValue");
  return {
    handleInput: (R) => {
      if (A.value) {
        const C = R.target.value;
        o.value = C;
        const w = C === "" ? null : Number(C);
        l(w, !1);
        return;
      }
      let y = R.target.value.trim();
      if (E.value === "integerNonNegative") {
        const C = y.match(/\d+/g);
        if (C !== null) {
          let w = parseInt(C.join(""), 10);
          w = Math.max(w, 0), y = w;
        } else
          y = null;
        l(y), r.value.value = y;
      } else if (E.value === "integerPositive") {
        if (y === "0")
          y = null;
        else {
          const C = y.match(/\d+/g);
          if (C !== null) {
            let w = parseInt(C.join(""), 10);
            w = Math.max(w, 1), y = w;
          } else
            y = null;
        }
        l(y), r.value.value = y;
      } else if (E.value === "integer") {
        const C = y.match(/\d+/g);
        if (C !== null) {
          let w = parseInt(C.join(""), 10);
          y.indexOf("-") !== -1 && (w = -w), y = w, l(y), r.value.value = y;
        } else y === "-" ? (y = "-", r.value.value = y) : (y = null, l(y), r.value.value = y);
      }
    },
    handleInputChange: (R) => {
      if (!A.value)
        return;
      const y = R.target.value, C = y !== "" ? Number(y) : "";
      (bn(C) && !Number.isNaN(C) || y === "") && l(C), o.value = null;
    },
    handleKeydown: (R) => {
      R.keyCode === X.arrowUp ? (n(), R.preventDefault()) : R.keyCode === X.arrowDown ? (t(), R.preventDefault()) : (!p.value && R.keyCode === X.e || T.value >= 0 && R.keyCode === X.minus || R.keyCode === X.plus) && (R.preventDefault(), R.stopPropagation());
    },
    onBlurNumber: (R) => {
      (o.value !== null || !m.value && m.value !== 0) && (o.value = null, u.value = m.value, r.value.value = h.value), a(R);
    }
  };
}
function iq(e) {
  const t = f(e, "type"), n = f(e, "min");
  return {
    minLocal: _(() => {
      let a;
      return t.value === "integerNonNegative" ? a = 0 : t.value === "integerPositive" && (a = 1), (Pe(a) || !ae(n.value) && n.value > a) && (a = n.value), a;
    })
  };
}
function aq(e, {
  verifyValue: t = () => {
  },
  changeModel: n = () => {
  }
}) {
  const r = f(e, "precision"), a = f(e, "modelValue"), l = B(null), o = B(null), u = () => {
    o.value = a.value;
  }, h = _(() => {
    if (l.value !== null)
      return l.value;
    let E = o.value;
    if (ae(E))
      return "";
    if (bn(E)) {
      if (Number.isNaN(E))
        return "";
      Pe(r.value) || (E = E.toFixed(r.value));
    }
    return E;
  });
  return {
    currentValue: o,
    displayValue: h,
    initCurrentValue: u,
    setCurrentValue: (E, p = !0) => {
      const T = o.value, m = t(E);
      if (T !== m) {
        if (!p) {
          n({ model: m });
          return;
        }
        l.value = null, n({ model: m }), o.value = m;
      }
    },
    userInput: l
  };
}
function sq(e) {
  const t = f(e, "max"), n = f(e, "min"), r = f(e, "step"), a = f(e, "type"), l = _(() => a.value === "number"), o = _(() => l.value ? "number" : "text"), u = _(() => l.value ? {
    max: t.value,
    min: n.value,
    step: r.value
  } : {});
  return {
    inputType: o,
    isTypeNumber: l,
    numberAttributes: u
  };
}
function lq(e, {
  changeModel: t = () => {
  },
  minLocal: n = _(() => {
  })
}) {
  const r = f(e, "modelUndefined"), a = f(e, "stepStrictly"), l = f(e, "step"), o = f(e, "precision"), u = f(e, "max"), h = f(e, "modelValue"), A = (m) => {
    if (ae(m))
      return 0;
    const b = m.toString(), L = b.indexOf(".");
    let v = 0;
    return L !== -1 && (v = b.length - L - 1), v;
  }, E = _(() => {
    const m = A(l.value);
    return Pe(o.value) ? Math.max(A(h.value), m) : (m > o.value && console.warn(
      "AInputNumber",
      "precision should not be less than the decimal places of step"
    ), o.value);
  });
  return {
    ensurePrecision: ({ value: m, currentValue: b, coefficient: L = 1 }) => bn(m) ? Bo(m + l.value * L, E.value) : b,
    verifyValue: (m, b) => {
      let L = Number(m);
      return ae(m) || Number.isNaN(L) ? null : (m === "" && (L = r.value), a.value && (L = Bo(Math.round(L / l.value) * l.value, o.value)), Pe(o.value) || (L = Bo(L, o.value)), L > u.value ? (L = u.value, b && t({ model: L })) : L < n.value && (L = n.value, b && t({ model: L })), L);
    }
  };
}
function oq(e) {
  const t = f(e, "inputWidth");
  return {
    inputWidthStyleValue: _(() => {
      let r = t.value;
      return bn(t.value) && (r = `${t.value}px`), Pe(r) ? {} : {
        "--a_input_number_width": r
      };
    })
  };
}
const en = B({
  propsDefault: {
    controlsType: "plus-minus",
    eAllowed: !1,
    iconPrepend: void 0,
    inputWidth: 200,
    isLabelFloat: !1,
    max: void 0,
    min: void 0,
    modelUndefined: void 0,
    placeholder: void 0,
    precision: void 0,
    readonly: void 0,
    step: 1,
    stepStrictly: void 0,
    type: "number"
  }
}), Moe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    en.value.propsDefault = {
      ...en.value.propsDefault,
      ...t
    };
  }
}, Ya = {
  name: "AInputNumber",
  inheritAttrs: !1,
  mixins: [
    tq,
    Kc
  ],
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    controlsType: {
      type: String,
      required: !1,
      default: () => en.value.propsDefault.controlsType,
      validator: (e) => ["plus-minus", "arrows", "none"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    eAllowed: {
      type: Boolean,
      required: !1,
      default: () => en.value.propsDefault.eAllowed
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: () => en.value.propsDefault.iconPrepend
    },
    inputWidth: {
      type: [String, Number],
      required: !1,
      default: () => en.value.propsDefault.inputWidth
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: () => en.value.propsDefault.isLabelFloat
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: () => en.value.propsDefault.max
    },
    min: {
      type: Number,
      required: !1,
      default: () => en.value.propsDefault.min
    },
    modelUndefined: {
      required: !1,
      default: () => en.value.propsDefault.modelUndefined
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: () => en.value.propsDefault.placeholder
    },
    precision: {
      type: Number,
      validator: (e) => e >= 0 && e === Number.parseInt(`${e}`, 10),
      default: () => en.value.propsDefault.precision
    },
    readonly: {
      type: Boolean,
      required: !1,
      default: () => en.value.propsDefault.readonly
    },
    step: {
      type: Number,
      required: !1,
      default: () => en.value.propsDefault.step
    },
    stepStrictly: {
      type: Boolean,
      required: !1,
      default: () => en.value.propsDefault.stepStrictly
    },
    type: {
      type: String,
      required: !1,
      default: () => en.value.propsDefault.type,
      validator: (e) => ["number", "integerNonNegative", "integerPositive", "integer"].indexOf(e) !== -1
      // TODO: "float", "floatPositiv", "floatNonNegative"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = wt(e), {
      componentStyleHide: r
    } = zt(e), {
      ariaDescribedbyLocal: a,
      changeModel: l,
      clearModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: m
    } = an(e, t), {
      isClearButtonLocal: b
    } = Tu(e, {
      isModel: p
    }), {
      minLocal: L
    } = iq(e), {
      inputType: v,
      isTypeNumber: I,
      numberAttributes: R
    } = sq(e), {
      placeholderAttributes: y
    } = hl(e), {
      inputWidthStyleValue: C
    } = oq(e), w = B(void 0), F = f(e, "disabled"), P = (me) => {
      if (F.value)
        return;
      const Le = me.target.value;
      l({
        model: +Le
      });
    }, {
      isAutofill: q
    } = Bc({ inputRef: w }), {
      ensurePrecision: N,
      verifyValue: U
    } = lq(e, {
      changeModel: l,
      minLocal: L
    }), {
      currentValue: V,
      displayValue: j,
      initCurrentValue: ne,
      setCurrentValue: Z,
      userInput: le
    } = aq(e, {
      verifyValue: U,
      changeModel: l
    }), {
      increase: oe,
      decrease: fe
    } = nq(e, {
      currentValue: V,
      displayValue: j,
      ensurePrecision: N,
      setCurrentValue: Z,
      minLocal: L
    }), {
      handleInput: he,
      handleInputChange: we,
      handleKeydown: Ie,
      onBlurNumber: se
    } = rq(e, {
      currentValue: V,
      decrease: fe,
      displayValue: j,
      increase: oe,
      inputRef: w,
      onBlur: T,
      setCurrentValue: Z,
      userInput: le,
      isTypeNumber: I
    });
    return ne(), tt(
      () => e.modelValue,
      (me) => {
        const Le = U(le.value), ce = U(me, !0);
        !bn(Le) && (!Le || Le !== ce) && (V.value = ce, le.value = null);
      },
      { immediate: !0 }
    ), {
      ariaDescribedbyLocal: a,
      attributesToExcludeFromRender: n,
      clearModel: o,
      componentStyleHide: r,
      currentValue: V,
      decrease: fe,
      displayValue: j,
      errorsId: u,
      handleInput: he,
      handleInputChange: we,
      handleKeydown: Ie,
      helpTextId: h,
      htmlIdLocal: A,
      increase: oe,
      inputRef: w,
      inputType: v,
      inputWidthStyleValue: C,
      isAutofill: q,
      isClearButtonLocal: b,
      isErrors: E,
      isModel: p,
      numberAttributes: R,
      onBlurNumber: se,
      onFocus: m,
      onInput: P,
      placeholderAttributes: y,
      userInput: le
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__container"
      }, [
        c("div", {
          class: ["a_form_element__parent", {
            a_form_element__parent_float: this.isLabelFloat,
            a_form_element__parent_not_empty: this.isModel || this.isAutofill,
            a_form_element__parent_float_has_icon_prepend: this.iconPrepend,
            a_form_element__parent_invalid: this.isErrors
          }]
        }, [
          this.label && !this.isLabelFloat && c(kt, {
            id: this.htmlIdLocal,
            alwaysTranslate: this.alwaysTranslate,
            label: this.label,
            labelClass: this.labelClass,
            labelScreenReader: this.labelScreenReader,
            required: this.required,
            type: this.type,
            isLabelFloat: this.isLabelFloat,
            isError: this.isErrors
          }),
          c("div", {
            class: [
              "a_form_element_number",
              {
                a_form_element_number_controls: this.controlsType !== "none"
              }
            ]
          }, [
            c("div", {
              class: "a_form_element",
              style: {
                ...this.inputWidthStyleValue
              }
            }, [
              this.label && this.isLabelFloat && c(kt, {
                id: this.htmlIdLocal,
                alwaysTranslate: this.alwaysTranslate,
                label: this.label,
                labelClass: this.labelClass,
                labelScreenReader: this.labelScreenReader,
                required: this.required,
                type: this.type,
                isLabelFloat: this.isLabelFloat,
                isError: this.isErrors
              }),
              this.iconPrepend && c(st, {
                icon: this.iconPrepend,
                class: "a_input__icon_prepend"
              }),
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                autocomplete: this.autocomplete,
                value: this.displayValue,
                type: this.inputType,
                class: [
                  "a_form_control a_input a_input_number",
                  this.inputClass,
                  {
                    a_form_element_with_one_btn: this.isClearButtonLocal,
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabled,
                ariaRequired: this.required,
                ariaInvalid: this.isErrors,
                "aria-describedby": this.ariaDescribedbyLocal,
                ...this.numberAttributes,
                ...this.placeholderAttributes,
                ...this.inputAttributes,
                onInput: this.handleInput,
                onChange: this.handleInputChange,
                onKeydown: this.handleKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlurNumber
              }),
              this.isClearButtonLocal ? c("div", {
                class: "a_form_control__actions"
              }, [
                c(pu, {
                  alwaysTranslate: this.alwaysTranslate,
                  disabled: this.disabled,
                  class: this.clearButtonClass,
                  onClear: this.clearModel
                })
              ]) : ""
            ]),
            this.controlsType === "plus-minus" && c("div", {
              class: "a_btn_group"
            }, [
              c(rt, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_btn a_btn_outline_secondary",
                iconLeft: pS,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_NUMBER_BTN_DECREASE_",
                textScreenReader: "_A_INPUT_NUMBER_BTN_DECREASE_",
                onClick: this.decrease
              }),
              c(rt, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_btn a_btn_outline_secondary",
                iconLeft: TS,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_NUMBER_BTN_INCREASE_",
                textScreenReader: "_A_INPUT_NUMBER_BTN_INCREASE_",
                onClick: this.increase
              })
            ])
          ]),
          c(rn, {
            id: this.helpTextId,
            alwaysTranslate: this.alwaysTranslate,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(nn, {
            id: this.errorsId,
            alwaysTranslate: this.alwaysTranslate,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
};
function uq({
  idMin: e = _(() => "")
}) {
  return {
    setFocusToMinInput: () => {
      const n = document.getElementById(e.value);
      n && n.focus();
    }
  };
}
function _q({
  htmlIdLocal: e = _(() => "")
}) {
  const t = _(() => `${e.value}_min`);
  return {
    idMax: _(() => `${e.value}_max`),
    idMin: t
  };
}
function dq(e, {
  htmlIdLocal: t = _(() => ""),
  idMax: n = _(() => ""),
  idMin: r = _(() => "")
}) {
  const a = f(e, "inputAttributes"), l = f(e, "inputAttributesMax"), o = f(e, "inputAttributesMin"), u = _(() => `${t.value}_label`), h = _(() => ({
    "aria-labelledby": `${u.value} ${r.value}`,
    ...a.value,
    ...o.value
  }));
  return {
    inputAttributesMaxLocal: _(() => ({
      "aria-labelledby": `${u.value} ${n.value}`,
      ...a.value,
      ...l.value
    })),
    inputAttributesMinLocal: h
  };
}
function cq(e, {
  changeModel: t = () => ({})
}) {
  const n = f(e, "keyMax"), r = f(e, "keyMin"), a = f(e, "modelValue"), l = _(() => {
    var A;
    return (A = a.value) == null ? void 0 : A[r.value];
  }), o = _(() => {
    var A;
    return (A = a.value) == null ? void 0 : A[n.value];
  });
  return {
    changeModelMax: ({ model: A }) => {
      const E = Se(a.value);
      E[n.value] = A, t({ model: E });
    },
    changeModelMin: ({ model: A }) => {
      const E = Se(a.value);
      E[r.value] = A, t({ model: E });
    },
    modelValueMax: o,
    modelValueMin: l
  };
}
function fq(e) {
  const t = f(e, "type");
  return {
    typeLocal: _(() => t.value.replace("Range", ""))
  };
}
const Zc = ["numberRange", "integerNonNegativeRange", "integerPositiveRange", "integerRange"], SS = {};
Y(Zc, (e) => {
  SS[e] = !0;
});
const mS = SS, vo = {
  name: "AInputNumberRange",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    controlsType: {
      type: String,
      required: !1,
      default: "plus-minus",
      validator: (e) => ["plus-minus", "arrows"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => ot("a_input_number_range_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesMax: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesMin: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputWidth: {
      type: [Number, String],
      required: !1,
      default: 200
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyMax: {
      tpe: String,
      required: !1,
      default: "max"
    },
    keyMin: {
      tpe: String,
      required: !1,
      default: "min"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelMax: {
      type: String,
      required: !1,
      default: "_A_INPUT_NUMBER_RANGE_LABEL_MAX_"
    },
    labelMin: {
      type: String,
      required: !1,
      default: "_A_INPUT_NUMBER_RANGE_LABEL_MIN_"
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: void 0
    },
    min: {
      type: Number,
      required: !1,
      default: void 0
    },
    modelUndefined: {
      required: !1,
      default: void 0
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholderMax: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholderMin: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    precision: {
      type: Number,
      validator: (e) => e >= 0 && e === Number.parseInt(`${e}`, 10)
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    step: {
      type: Number,
      required: !1,
      default: 1
    },
    stepStrictly: {
      type: Boolean,
      required: !1
    },
    type: {
      type: String,
      required: !1,
      default: "numberRange",
      validator: (e) => Zc.indexOf(e) !== -1
      // TODO: "float", "floatPositiv", "floatNonNegative"
    }
  },
  emits: [
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = wt(e), {
      componentStyleHide: r
    } = zt(e), {
      changeModel: a,
      errorsId: l,
      helpTextId: o,
      htmlIdLocal: u,
      isErrors: h
    } = an(e, t), {
      changeModelMax: A,
      changeModelMin: E,
      modelValueMax: p,
      modelValueMin: T
    } = cq(e, {
      changeModel: a
    }), {
      idMax: m,
      idMin: b
    } = _q({
      htmlIdLocal: u
    }), {
      typeLocal: L
    } = fq(e), {
      inputAttributesMaxLocal: v,
      inputAttributesMinLocal: I
    } = dq(e, {
      htmlIdLocal: u,
      idMax: m,
      idMin: b
    }), {
      setFocusToMinInput: R
    } = uq({
      idMin: b
    }), {
      destroyEventBusClickLabel: y,
      initEventBusClickLabel: C
    } = Yc({
      htmlIdLocal: u,
      clickLabel: R
    });
    return C(), Ot(() => {
      y();
    }), {
      attributesToExcludeFromRender: n,
      changeModelMax: A,
      changeModelMin: E,
      componentStyleHide: r,
      errorsId: l,
      helpTextId: o,
      htmlIdLocal: u,
      idMax: m,
      idMin: b,
      inputAttributesMaxLocal: v,
      inputAttributesMinLocal: I,
      isErrors: h,
      modelValueMax: p,
      modelValueMin: T,
      typeLocal: L
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      class: "a_input_number_range",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_invalid: this.isErrors
        }]
      }, [
        this.label ? c(kt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: !1,
          isError: this.isErrors
        }) : "",
        c("div", {
          class: "a_input_number_range__content"
        }, [
          c("div", {
            class: "a_input_number_range__group a_input_number_range__group_min"
          }, [
            c(kt, {
              id: this.idMin,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_input_number_range__label a_input_number_range__label_min",
              isLabelFloat: !1,
              label: this.labelMin,
              isError: this.isErrors
            }),
            c(Ya, {
              id: this.idMin,
              alwaysTranslate: this.alwaysTranslate,
              controlsType: this.controlsType,
              iconPrepend: this.iconPrepend,
              inputWidth: this.inputWidth,
              isLabelFloat: !0,
              max: this.max,
              min: this.min,
              modelUndefined: this.modelUndefined,
              precision: this.precision,
              readonly: this.readonly,
              step: this.step,
              stepStrictly: this.stepStrictly,
              type: this.typeLocal,
              disabled: this.disabled,
              inputAttributes: this.inputAttributesMinLocal,
              required: this.required,
              modelValue: this.modelValueMin,
              placeholder: this.placeholderMin,
              change: this.changeModelMin
            })
          ]),
          c("div", {
            class: "a_input_number_range__group a_input_number_range__group_max"
          }, [
            c(kt, {
              id: this.idMax,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_input_number_range__label a_input_number_range__label_max",
              isLabelFloat: !1,
              label: this.labelMax,
              isError: this.isErrors
            }),
            c(Ya, {
              id: this.idMax,
              alwaysTranslate: this.alwaysTranslate,
              controlsType: this.controlsType,
              iconPrepend: this.iconPrepend,
              inputWidth: this.inputWidth,
              isLabelFloat: !0,
              max: this.max,
              min: this.min,
              modelUndefined: this.modelUndefined,
              precision: this.precision,
              readonly: this.readonly,
              step: this.step,
              stepStrictly: this.stepStrictly,
              type: this.typeLocal,
              disabled: this.disabled,
              inputAttributes: this.inputAttributesMaxLocal,
              required: this.required,
              modelValue: this.modelValueMax,
              placeholder: this.placeholderMax,
              change: this.changeModelMax
            })
          ])
        ]),
        c(rn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors ? c(nn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        }) : ""
      ])
    ]) : null;
  }
};
function hq(e) {
  const t = f(e, "heightCss"), n = _(() => {
    if (t.value)
      return `height: ${t.value}`;
  }), r = _(() => {
    if (t.value)
      return `max-height: ${t.value}`;
  });
  return {
    styleHeight: n,
    styleMaxHeight: r
  };
}
function Aq(e, {
  changeModel: t = () => {
  }
}) {
  const n = f(e, "disabled"), r = f(e, "modelUndefined"), a = f(e, "modelValue"), l = B(void 0), o = B(""), u = B(""), h = B(void 0), A = () => {
    l.value = Se(a.value) || "";
  }, E = () => {
    n.value || t({
      model: r.value
    });
  }, p = () => {
    try {
      a.value ? o.value = JSON.stringify(a.value, void 0, 2) : o.value = "", u.value = o.value, h.value = void 0;
    } catch {
    }
  }, T = (v) => {
    if (!n.value)
      if (!u.value || u.value.length === 0)
        t({
          $event: v,
          model: r.value
        });
      else
        try {
          const I = JSON.parse(u.value);
          t({
            $event: v,
            model: I
          }), o.value = JSON.stringify(I, void 0, 2), h.value = null;
        } catch (I) {
          h.value = I.toString();
        }
  };
  return {
    clearModel: E,
    formatJson: () => {
      try {
        u.value = JSON.stringify(JSON.parse(u.value), void 0, 2);
      } catch (v) {
        h.value = v.toString();
      }
    },
    initialValue: l,
    initInitialValue: A,
    jsonString: o,
    jsonStringInput: u,
    JSONtoString: p,
    onInput: (v) => {
      n.value || (u.value = v.target.value, T());
    },
    parseError: h,
    resetModel: () => {
      n.value || (t({
        model: l.value
      }), setTimeout(() => {
        p();
      }));
    },
    stringToJSON: T
  };
}
const Eq = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-repeat" viewBox="0 0 16 16">
  <path d="M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41m-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9"/>
  <path fill-rule="evenodd" d="M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5 5 0 0 0 8 3M3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9z"/>
</svg>`, pq = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-braces" viewBox="0 0 16 16">
  <path d="M2.114 8.063V7.9c1.005-.102 1.497-.615 1.497-1.6V4.503c0-1.094.39-1.538 1.354-1.538h.273V2h-.376C3.25 2 2.49 2.759 2.49 4.352v1.524c0 1.094-.376 1.456-1.49 1.456v1.299c1.114 0 1.49.362 1.49 1.456v1.524c0 1.593.759 2.352 2.372 2.352h.376v-.964h-.273c-.964 0-1.354-.444-1.354-1.538V9.663c0-.984-.492-1.497-1.497-1.6M13.886 7.9v.163c-1.005.103-1.497.616-1.497 1.6v1.798c0 1.094-.39 1.538-1.354 1.538h-.273v.964h.376c1.613 0 2.372-.759 2.372-2.352v-1.524c0-1.094.376-1.456 1.49-1.456V7.332c-1.114 0-1.49-.362-1.49-1.456V4.352C13.51 2.759 12.75 2 11.138 2h-.376v.964h.273c.964 0 1.354.444 1.354 1.538V6.3c0 .984.492 1.497 1.497 1.6"/>
</svg>`, bS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
  <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"/>
  <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"/>
</svg>`, Tq = {
  name: "AJson",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    heightCss: {
      type: String,
      required: !1,
      default: "400px;"
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => ot("a_json_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = bl(e), {
      attributesToExcludeFromRender: r
    } = wt(e), {
      componentStyleHide: a
    } = zt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: m
    } = an(e, t), {
      styleHeight: b,
      styleMaxHeight: L
    } = hq(e), {
      clearModel: v,
      formatJson: I,
      initialValue: R,
      initInitialValue: y,
      jsonString: C,
      jsonStringInput: w,
      JSONtoString: F,
      onInput: P,
      parseError: q,
      resetModel: N
    } = Aq(e, {
      changeModel: o
    });
    return y(), F(), {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: r,
      changeModel: o,
      clearModel: v,
      componentStyleHide: a,
      disabledAttribut: n,
      errorsId: u,
      formatJson: I,
      helpTextId: h,
      htmlIdLocal: A,
      onInput: P,
      initialValue: R,
      initInitialValue: y,
      isErrors: E,
      isModel: p,
      jsonString: C,
      jsonStringInput: w,
      JSONtoString: F,
      onBlur: T,
      onFocus: m,
      parseError: q,
      resetModel: N,
      styleHeight: b,
      styleMaxHeight: L
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(kt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: !1,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required
        }) : "",
        c("div", {
          class: "a_columns a_columns_count_12"
        }, [
          c("div", {
            class: "a_column a_column_6 a_column_12_touch"
          }, [
            c("div", {
              class: "a_d_flex a_justify_content_between"
            }, [
              c(kt, {
                id: this.htmlIdLocal,
                alwaysTranslate: this.alwaysTranslate,
                extra: this.extra,
                idSuffix: "_input",
                isError: this.isErrors,
                isLabelFloat: !1,
                label: "_A_JSON_INPUT_"
              }),
              c("div", {
                class: "a_btn_group",
                role: "group"
              }, [
                c(Oe, {
                  class: [
                    "a_btn",
                    {
                      a_btn_transparent_info: !this.parseError,
                      a_btn_transparent_dark: this.parseError
                    }
                  ],
                  disabled: !!this.parseError,
                  iconLeft: pq,
                  textScreenReader: "_A_JSON_FORMAT_INPUT_",
                  title: "_A_JSON_FORMAT_INPUT_",
                  type: "button",
                  onClick: this.formatJson
                }),
                c(Oe, {
                  class: "a_btn a_btn_transparent_warning",
                  iconLeft: Eq,
                  textScreenReader: "_A_JSON_RESET_INPUT_",
                  title: "_A_JSON_RESET_INPUT_",
                  type: "button",
                  onClick: this.JSONtoString
                }),
                c(Oe, {
                  class: "a_btn a_btn_transparent_danger",
                  iconLeft: bS,
                  textScreenReader: "_A_JSON_DISCARD_ALL_CHANGES_",
                  title: "_A_JSON_DISCARD_ALL_CHANGES_",
                  type: "button",
                  onClick: this.resetModel
                })
              ])
            ]),
            c("div", {
              class: "a_form_element a_form_element_textarea"
            }, [
              c("textarea", {
                ref: "textareaRef",
                id: this.htmlIdLocal,
                style: this.styleHeight,
                value: this.jsonStringInput,
                "aria-describedby": this.ariaDescribedbyLocal,
                ariaInvalid: this.isErrors,
                ariaRequired: this.required,
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: [
                  "a_form_control a_json__textarea",
                  this.inputClass,
                  {
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabledAttribut,
                spellcheck: "false",
                ...this.inputAttributes,
                onInput: this.onInput,
                onFocus: this.onFocus,
                onBlur: this.onBlur
              })
            ]),
            this.parseError ? c(pe, {
              alwaysTranslate: this.alwaysTranslate,
              class: "a_form_element__invalid_text",
              html: "_A_JSON_ERROR_HTML_{{error}}_",
              extra: {
                error: this.parseError
              }
            }) : ""
          ]),
          c("div", {
            class: "a_column a_column_6 a_column_12_touch"
          }, [
            c(pe, {
              tag: "div",
              text: "_A_JSON_CURRENT_VALUE_"
            }),
            Ft(c("div", {
              class: "a_json__code",
              style: this.styleMaxHeight
            }), [
              [cn, this.jsonString]
            ])
          ])
        ]),
        c(rn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(nn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function Sq(e) {
  const t = f(e, "label");
  return {
    hasLabel: _(() => !ae(t.value))
  };
}
function mq(e, {
  changeModel: t = () => {
  }
}) {
  const n = f(e, "modelValue"), r = f(e, "trueValue"), a = f(e, "falseValue"), l = f(e, "disabled"), o = _(() => n.value === r.value), u = (A) => {
    l.value || (setTimeout(() => {
      const E = o.value ? a.value : r.value;
      t({
        model: E,
        $event: A
      });
    }), A.stopPropagation(), A.preventDefault());
  };
  return {
    isChecked: o,
    onClick: u,
    onKeydown: (A) => {
      (A.keyCode === X.enter || A.keyCode === X.space) && u(A);
    }
  };
}
const yu = {
  name: "AOneCheckbox",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    falseValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => ot("a_one_checkbox_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelTitle: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    trueValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !0
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = bl(e), {
      attributesToExcludeFromRender: r
    } = wt(e), {
      componentStyleHide: a
    } = zt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = an(e, t), {
      isChecked: m,
      onClick: b,
      onKeydown: L
    } = mq(e, {
      changeModel: o
    }), {
      hasLabel: v
    } = Sq(e);
    return {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: r,
      componentStyleHide: a,
      disabledAttribut: n,
      errorsId: u,
      hasLabel: v,
      helpTextId: h,
      htmlIdLocal: A,
      isChecked: m,
      isErrors: E,
      onBlur: p,
      onClick: b,
      onFocus: T,
      onKeydown: L
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent"]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            class: ["a_custom_control a_custom_checkbox", {
              a_custom_control_invalid: this.isErrors
            }]
          }, [
            c("input", {
              id: this.htmlIdLocal,
              value: this.modelValue,
              type: "checkbox",
              checked: this.isChecked,
              class: "a_custom_control_input",
              disabled: this.disabledAttribut,
              ariaRequired: this.required,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              indeterminate: this.indeterminate,
              ...this.inputAttributes,
              onClick: this.onClick,
              onKeydown: this.onKeydown,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }),
            c(Oe, {
              alwaysTranslate: this.alwaysTranslate,
              class: [
                "a_custom_control_label",
                {
                  a_custom_control_label_width_auto: this.isWidthAuto
                }
              ],
              extra: this.extra,
              for: this.htmlIdLocal,
              tag: "label",
              title: this.isLabelTitle ? this.label : void 0,
              type: "text",
              ...this.labelAttributes
            }, () => {
              var e;
              return [
                (e = this.$slots) != null && e[this.slotName] ? this.$slots[this.slotName]({
                  id: this.htmlIdLocal,
                  labelClass: [
                    "a_custom_control_label__text",
                    this.labelClass
                  ],
                  label: this.label,
                  labelScreenReader: this.labelScreenReader,
                  props: this.$props,
                  required: this.required
                }) : this.hasLabel && c("span", {
                  class: [
                    "a_custom_control_label__text",
                    this.labelClass
                  ]
                }, [
                  c(Oe, {
                    alwaysTranslate: this.alwaysTranslate,
                    extra: this.extra,
                    html: this.label,
                    textScreenReader: this.labelScreenReader,
                    tag: "span",
                    title: this.isLabelTitle ? this.label : void 0,
                    type: "text"
                  }),
                  this.required ? c("span", null, "*") : ""
                ])
              ];
            })
          ])
        ]),
        c(rn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(nn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function bq(e, {
  changeModel: t = () => {
  },
  dataKeyByKeyIdLocal: n = _(() => ({}))
}) {
  const r = f(e, "disabled"), a = f(e, "isModelArray"), l = f(e, "modelValue");
  return {
    onChangeModelValue: ({ model: u, $event: h }) => {
      r.value || (a.value ? !l.value || l.value.length === 0 ? setTimeout(() => {
        t({
          model: [u],
          $event: h
        });
      }) : setTimeout(() => {
        const A = [];
        Y(l.value, (E) => {
          n.value[E] || A.push(E);
        }), A.push(u), t({
          model: A,
          $event: h
        });
      }) : setTimeout(() => {
        t({
          model: u,
          $event: h
        });
      }));
    }
  };
}
const LS = {
  name: "ARadio",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    classDataParent: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => []
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => ot("a_radio_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inline: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isModelArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: void 0
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "value"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    search: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: void 0
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrder: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_",
        notElementsWithSearch: "_A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_",
        search: "_A_RADIO_SEARCH_"
      })
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "onSearchOutside",
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = wt(e), {
      componentStyleHide: r
    } = zt(e), {
      ariaDescribedbyLocal: a,
      changeModel: l,
      errorsId: o,
      helpTextId: u,
      htmlIdLocal: h,
      isErrors: A,
      onBlur: E,
      onFocus: p
    } = an(e, t), {
      textAfterLabel: T
    } = Pc(e), {
      dataFromServer: m,
      dataExtraLocal: b,
      dataKeyByKeyIdLocal: L,
      dataLocal: v,
      hasDataExtra: I
    } = Gc(e), {
      loadDataFromServer: R,
      loadDataFromServerForSearchAPI: y,
      loadingDataFromServer: C,
      loadingSearchApi: w,
      onSearchInApi: F,
      searchApiLocal: P,
      updateUrlPropsComputed: q,
      urlPropsComputed: N
    } = Hc(e, {
      changeModel: l,
      dataExtraLocal: b,
      dataFromServer: m
    }), {
      loadingLocal: U
    } = jc(e, {
      loadingDataFromServer: C
    });
    Vc(t, {
      dataKeyByKeyIdLocal: L,
      dataLocal: v
    });
    const {
      dataSort: V
    } = Wc(e, {
      data: v
    }), {
      dataGrouped: j,
      groupsForLever: ne,
      hasKeyGroup: Z,
      keyGroupArray: le
    } = Uc(e, {
      data: V
    }), {
      hasNotElementsExtraWithSearch: oe,
      hasNotElementsWithSearch: fe,
      idForButtonSearchOutside: he,
      modelSearch: we,
      modelSearchLowerCase: Ie,
      modelSearchOutside: se,
      onSearchOutside: me,
      searching: Le,
      searchingElements: ce,
      searchingElementsExtra: Ae,
      searchingGroups: $,
      searchingGroupsWithSearchInGroup: ee,
      searchOutsideOrApi: re,
      searchOutsideRef: be,
      updateModelSearch: xe,
      updateModelSearchOutside: He
    } = zc(e, t, {
      data: V,
      dataExtra: b,
      groupsForLever: ne,
      htmlIdLocal: h,
      hasKeyGroup: Z,
      keyGroupArray: le,
      searchApiLocal: P,
      onSearchInApi: F
    }), {
      onChangeModelValue: Ve
    } = bq(e, {
      changeModel: l,
      dataKeyByKeyIdLocal: L
    }), {
      iconCollapse: Ye,
      initIsCollapsedLocal: Re,
      isCollapsedLocal: je,
      titleCollapse: ft,
      toggleCollapse: $e
    } = Fc(e, t), {
      groupId: it
    } = wc(e, {
      htmlIdLocal: h
    });
    return tt(N, q, {
      deep: !0
    }), Re(), R(), y(), {
      ariaDescribedbyLocal: a,
      attributesToExcludeFromRender: n,
      componentStyleHide: r,
      dataExtraLocal: b,
      dataGrouped: j,
      dataSort: V,
      errorsId: o,
      groupId: it,
      groupsForLever: ne,
      hasDataExtra: I,
      hasKeyGroup: Z,
      hasNotElementsExtraWithSearch: oe,
      hasNotElementsWithSearch: fe,
      helpTextId: u,
      htmlIdLocal: h,
      iconCollapse: Ye,
      idForButtonSearchOutside: he,
      isCollapsedLocal: je,
      isErrors: A,
      loadingLocal: U,
      loadingSearchApi: w,
      modelSearch: we,
      modelSearchLowerCase: Ie,
      modelSearchOutside: se,
      onBlur: E,
      onChangeModelValue: Ve,
      onFocus: p,
      onSearchOutside: me,
      searching: Le,
      searchingElements: ce,
      searchingElementsExtra: Ae,
      searchingGroups: $,
      searchingGroupsWithSearchInGroup: ee,
      searchOutsideOrApi: re,
      searchOutsideRef: be,
      textAfterLabel: T,
      titleCollapse: ft,
      toggleCollapse: $e,
      updateModelSearch: xe,
      updateModelSearchOutside: He
    };
  },
  render() {
    var e, t, n;
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: [
          "a_form_element__parent",
          {
            a_radio_inline: this.inline
          }
        ]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("fieldset", {
            id: this.htmlIdLocal,
            tabindex: -1,
            class: [
              "a_fieldset",
              this.classFieldset,
              {
                a_fieldset_no_border: !this.hasBorder,
                a_fieldset_invalid: this.isErrors,
                a_fieldset_collapsed: this.isCollapsedLocal
              }
            ],
            "aria-describedby": this.ariaDescribedbyLocal
          }, [
            this.label || this.labelScreenReader ? c(Oe, {
              type: "text",
              alwaysTranslate: this.alwaysTranslate,
              tag: "legend",
              class: [
                "a_legend",
                {
                  a_legend_invalid: this.isErrors
                },
                this.labelClass
              ],
              extra: this.extra,
              html: this.label,
              textScreenReader: this.labelScreenReader,
              textAfter: this.textAfterLabel
            }) : "",
            this.collapsible ? c(Oe, {
              "aria-controls": this.groupId,
              "aria-expanded": !this.isCollapsedLocal,
              alwaysTranslate: this.alwaysTranslate,
              class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
              iconLeft: this.iconCollapse,
              title: this.titleCollapse,
              textScreenReader: this.titleCollapse,
              type: "button",
              onClick: this.toggleCollapse
            }) : "",
            c("div", {
              id: this.groupId,
              class: "a_fieldset__content"
            }, [
              this.searchOutsideOrApi ? c("div", {
                class: "a_fieldset__search"
              }, [
                c("form", {
                  onSubmit: this.onSearchOutside
                }, [
                  c("div", {
                    class: "input-group"
                  }, [
                    c(Sn, {
                      alwaysTranslate: this.alwaysTranslate,
                      label: ((e = this.texts) == null ? void 0 : e.search) || "_A_RADIO_SEARCH_",
                      inputClass: "a_select__element_clickable",
                      modelValue: this.modelSearchOutside,
                      modelUndefined: "",
                      "onUpdate:modelValue": this.updateModelSearchOutside
                    }),
                    c(Oe, {
                      alwaysTranslate: this.alwaysTranslate,
                      ariaDisabled: this.loadingSearchApi,
                      class: "a_btn a_btn_primary",
                      disabled: this.disabled,
                      iconLeft: Il,
                      type: "submit"
                    })
                  ])
                ])
              ]) : "",
              this.search ? c(Sn, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_fieldset__search",
                label: ((t = this.texts) == null ? void 0 : t.search) || "_A_RADIO_SEARCH_",
                modelValue: this.modelSearch,
                modelUndefined: "",
                "onUpdate:modelValue": this.updateModelSearch
              }) : "",
              this.loadingLocal ? c(al) : "",
              this.hasDataExtra ? c("div", {
                class: "a_radio__data_extra"
              }, [
                ...this.dataExtraLocal.map((r, a) => c(Rd, {
                  key: r[et],
                  id: this.htmlIdLocal,
                  alwaysTranslate: this.alwaysTranslate,
                  idSuffix: "extra",
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataItem: r,
                  disabled: this.disabled,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  itemIndex: a,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElementsExtra,
                  slotName: this.slotName,
                  slotAppendName: this.slotAppendName,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.hasNotElementsExtraWithSearch ? "" : c("div", {
                  class: "a_divider",
                  ariaHidden: !0
                })
              ]) : "",
              c("div", {}, this.hasKeyGroup ? [
                c(Nc, {
                  id: `${this.htmlIdLocal}_lev_0`,
                  alwaysTranslate: this.alwaysTranslate,
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataGrouped: this.dataGrouped,
                  disabled: this.disabled,
                  groupsForLever: this.groupsForLever,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  levelIndex: 0,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElements,
                  searchingGroups: this.searchingGroups,
                  searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  type: "radio",
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)
              ] : [
                c("div", {
                  class: [
                    "a_radio_data",
                    {
                      a_btn_group: this.isButtonGroup
                    },
                    this.classDataParent
                  ]
                }, [
                  ...this.dataSort.map((r, a) => c(Rd, {
                    key: r[et],
                    id: this.htmlIdLocal,
                    alwaysTranslate: this.alwaysTranslate,
                    classButtonGroupDefault: this.classButtonGroupDefault,
                    dataItem: r,
                    disabled: this.disabled,
                    isButtonGroup: this.isButtonGroup,
                    isErrors: this.isErrors,
                    isWidthAuto: this.isWidthAuto,
                    itemIndex: a,
                    keyDisabled: this.keyDisabled,
                    keyTitle: this.keyTitle,
                    keyTitleCallback: this.keyTitleCallback,
                    modelSearch: this.modelSearchLowerCase,
                    modelValue: this.modelValue,
                    searching: this.searching,
                    searchingElements: this.searchingElements,
                    slotName: this.slotName,
                    slotAppendName: this.slotAppendName,
                    onChangeModelValue: this.onChangeModelValue
                  }, this.$slots))
                ])
              ]),
              !this.dataSort.length || this.hasNotElementsWithSearch ? c(pe, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_form__not_elements",
                text: ((n = this.texts) == null ? void 0 : n.notElementsWithSearch) || "_A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_"
              }) : ""
            ])
          ])
        ]),
        c(rn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(nn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, $E = {
  name: "ASelectLabelElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Object,
      required: !0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = f(e, "data");
    return {
      currentLabel: _(() => t.value[Lt])
    };
  },
  render() {
    return c("span", {}, [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        item: this.data,
        label: this.currentLabel,
        inDropdown: !1
      }) : Ft(c("span"), [
        [cn, this.currentLabel]
      ])
    ]);
  }
}, kE = {
  name: "ASelectValueCloseable",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hideDeleteButton: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, { emit: t }) {
    const n = f(e, "data"), r = _(() => n.value[Lt]), a = _(() => n.value[et]);
    return {
      closeModel: (o) => {
        t("changeModelValue", {
          currentValue: a.value,
          $event: o,
          isSelected: !0
        }), o.stopPropagation(), o.preventDefault();
      },
      currentLabel: r
    };
  },
  render() {
    return c("li", {
      class: "a_select__ul_closeable__item"
    }, [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        item: this.data,
        label: this.currentLabel,
        inDropdown: !1
      }) : c(pe, {
        alwaysTranslate: this.alwaysTranslate,
        tag: "span",
        text: this.currentLabel,
        extra: this.data.extra
      }),
      !this.hideDeleteButton && c("button", {
        class: "a_btn a_btn_link a_select__ul_closeable__item__btn",
        type: "button",
        tabindex: -1,
        disabled: this.disabled,
        onClick: this.closeModel
      }, [
        c(st, {
          icon: oi
        })
      ])
    ]);
  }
};
function Lq(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = f(e, "disabled"), r = _(() => `${t.value}_container`), a = _(() => `${t.value}_list`), l = _(() => `${t.value}_label`), o = _(() => n.value ? void 0 : 0);
  return {
    ariaLabelledby: l,
    containerId: r,
    idForList: a,
    tabindex: o
  };
}
function vq(e, {
  isMultiselect: t = _(() => !1)
}) {
  const n = f(e, "isSelectAll"), r = f(e, "isDeselectAll");
  return {
    isDividerSelectDeselectVisible: _(() => t.value && (n.value || r.value))
  };
}
function Iq(e, {
  dataKeyByKeyIdLocal: t = _(() => ({}))
}) {
  const n = f(e, "countMultiselect"), r = f(e, "modelValue"), a = f(e, "type"), l = _(() => a.value === "multiselect"), o = _(() => !l.value || !r.value || !Te(r.value) ? [] : Dt(r.value, (p) => t.value[p])), u = _(() => l.value ? o.value.length > 0 : !ae(r.value)), h = _(() => {
    var p;
    return ((p = o.value) == null ? void 0 : p.length) || 0;
  }), A = _(() => h.value > n.value), E = _(() => ({
    [Lt]: "_A_SELECT_MORE_SELECTED_{{count}}_",
    extra: {
      count: h.value - n.value
    }
  }));
  return {
    isModelLengthLimitExceeded: A,
    isModelValue: u,
    isMultiselect: l,
    limitExceededModelData: E,
    modelValueLength: h,
    modelValueMultiselectFiltered: o
  };
}
function gq(e, {
  changeModel: t = () => {
  },
  dataAll: n = _(() => []),
  dataKeyByKeyIdLocal: r = _(() => ({})),
  isMultiselect: a = _(() => !1),
  togglePopover: l = () => {
  }
}) {
  const o = f(e, "countMultiselect"), u = f(e, "isCloseByClick"), h = f(e, "deselectable"), A = f(e, "maxCountMultiselect"), E = f(e, "modelValue"), p = _(() => !a.value || !A.value ? !1 : de(E.value, "length") >= A.value), T = _(() => Pe(u.value) ? !a.value : u.value), m = ({ currentValue: y, $event: C, isSelected: w }) => {
    let F;
    if (a.value)
      if (F = Se(E.value) || [], w) {
        const P = F.indexOf(y);
        F.splice(P, 1);
      } else {
        if (p.value)
          return;
        F.push(y);
      }
    else if (w)
      if (h.value)
        F = void 0;
      else
        return;
    else
      F = y;
    t({
      model: F,
      $event: C,
      currentModel: y,
      item: r.value[y]
    }), T.value && l();
  }, b = (y) => {
    const C = oT(E.value, o.value);
    t({
      model: C,
      $event: y
    });
  }, L = () => {
    const y = n.value.map((C) => C[et]);
    t({
      model: y
    });
  }, v = (y) => {
    const C = y.keyCode;
    (C === X.enter || C === X.space) && (L(), y.preventDefault());
  }, I = () => {
    t({
      model: []
    });
  };
  return {
    deleteExceededItems: b,
    onChangeModelValue: m,
    onDeselectAll: I,
    onKeydownDeselectAll: (y) => {
      const C = y.keyCode;
      (C === X.enter || C === X.space) && (I(), y.preventDefault());
    },
    onKeydownSelectAll: v,
    onSelectAll: L
  };
}
function yq(e, {
  dataKeyByKeyIdLocal: t = _(() => ({})),
  isModelLengthLimitExceeded: n,
  isModelValue: r = _(() => !1),
  isMultiselect: a,
  modelValueLength: l,
  modelValueMultiselectFiltered: o = _(() => [])
}) {
  const u = f(e, "modelValue"), h = f(e, "isSelectionCloseable"), A = _(() => {
    if (!r.value)
      return;
    let p = "";
    return a.value ? h.value || !n.value ? Y(o.value, (T, m) => {
      const b = t.value[T] || {};
      p += `${m > 0 ? ", " : ""}${b[Lt]}`;
    }) : p = `${l.value} ausgewählt` : p = (t.value[u.value] || {})[Lt], p;
  });
  return {
    hasSelectedTitle: _(() => !!A.value),
    selectedTitle: A
  };
}
function Rq({
  $elements: e = _(() => []),
  clickOutsideCallback: t = () => {
  }
}) {
  const n = B("ontouchend" in document ? "touchstart" : "click"), r = (o) => {
    let u = !1;
    Y(e.value, (h) => {
      if (h === o.target || h.contains(o.target))
        return u = !0, !1;
    }), u || t();
  }, a = () => {
    document.addEventListener(n.value, r);
  }, l = () => {
    document.removeEventListener(n.value, r);
  };
  return Ot(() => l()), {
    setEventClickOutside: a,
    destroyEventClickOutside: l
  };
}
const HE = ".a_select__element_clickable:not([disabled]):not([data-hide])";
function Oq(e, {
  emit: t
}) {
  const n = f(e, "disabled"), r = f(e, "menuWidthType"), a = B(void 0), l = B(void 0), o = B(!1), u = B(void 0), h = B(void 0), A = f(e, "placement"), E = B(void 0), p = _(() => [
    a.value,
    u.value
  ]), T = _(() => {
    if (r.value === "as_button")
      return a.value.clientWidth;
  }), {
    setEventClickOutside: m,
    destroyEventClickOutside: b
  } = Rq({
    $elements: p,
    clickOutsideCallback: j
  }), L = ({ isArrowDown: ne }) => {
    const Z = h.value.querySelectorAll(HE);
    if (Z.length === 0)
      return;
    let le = !1;
    Y(Z, (oe, fe) => {
      if (oe === document.activeElement)
        return le = !0, ne ? fe < Z.length - 1 && Z[fe + 1].focus() : fe > 0 && Z[fe - 1].focus(), !1;
    }), le || Z[0].focus();
  }, v = () => {
    a.value.focus();
  }, I = (ne) => {
    const Z = ne.keyCode, le = Z === X.arrowDown;
    le || Z === X.arrowUp ? (L({ isArrowDown: le }), ne.preventDefault()) : Z === X.escape ? (j(), v(), ne.preventDefault(), ne.stopPropagation()) : Z === X.tab && (j(), v());
  }, R = () => {
    l.value && (l.value(), l.value = void 0);
  }, y = () => {
    t("open");
  }, C = () => {
    const ne = h.value.querySelector(HE);
    ne && ne.focus();
  }, w = () => {
    E.value || (E.value = !0, document.addEventListener("keydown", I));
  }, F = () => {
    y(), setTimeout(() => {
      C(), w();
    });
  }, P = () => {
    !l.value && a.value && h.value && (l.value = pl(
      a.value,
      h.value,
      () => {
        !a.value || !h.value || ml(
          a.value,
          h.value,
          {
            placement: A.value,
            middleware: [
              Sl(),
              Tl({ limiter: hu() })
            ]
          }
        ).then(({ x: ne, y: Z }) => {
          if (!a.value.clientWidth) {
            j();
            return;
          }
          const le = {
            left: `${ne}px`,
            top: `${Z}px`
          };
          T.value && (le.maxWidth = `${T.value}px`, le.minWidth = `${T.value}px`), Object.assign(h.value.style, le);
        });
      }
    ), F());
  }, q = () => {
    n.value || (o.value = !0, m(), P());
  }, N = () => {
    o.value ? (j(), v()) : q();
  }, U = (ne) => {
    const Z = ne.keyCode;
    Z === X.enter || Z === X.space ? (N(), ne.preventDefault()) : !o.value && (Z === X.arrowUp || Z === X.arrowDown) && (q(), ne.preventDefault());
  }, V = () => {
    E.value && (E.value = !1, document.removeEventListener("keydown", I));
  };
  function j() {
    o.value = !1, R(), b(), V();
  }
  return Ot(() => V()), {
    buttonRef: a,
    handleKeydown: U,
    isOpen: o,
    menuParentRef: u,
    menuRef: h,
    togglePopover: N
  };
}
const Je = B({
  propsDefault: {
    buttonClass: void 0,
    caretIcon: cs,
    countMultiselect: 4,
    dataExtra: [],
    exceededItemsDeletable: !0,
    inBody: !0,
    isCloseByClick: void 0,
    isDataSimpleArray: !1,
    deselectable: !0,
    isDeselectAll: !1,
    isSelectAll: !1,
    isSelectionCloseable: !0,
    keyDisabled: void 0,
    keyGroup: void 0,
    keyId: "value",
    keyLabel: "label",
    maxCountMultiselect: void 0,
    menuWidthType: "as_button",
    modelValue: void 0,
    placement: "bottom-end",
    popperContainerId: "a_select_container",
    search: !1,
    searchApi: !1,
    searchApiKey: void 0,
    searchOutside: !1,
    searchTimeout: 0,
    slotName: void 0,
    sortOrder: void 0,
    sortOrderGroup: void 0,
    textDeselectAll: "Alle abwählen",
    textSelectAll: "Alle auswählen",
    translateData: !1,
    type: "select"
  }
}), qoe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Je.value.propsDefault = {
      ...Je.value.propsDefault,
      ...t
    };
  }
}, ol = {
  name: "ASelect",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonClass: {
      type: String,
      required: !1,
      default: () => Je.value.propsDefault.buttonClass
    },
    buttonClassDefault: {
      type: [String, Object],
      required: !1,
      default: "a_form_control a_select_toggle"
    },
    caretIcon: {
      type: [String, Object],
      required: !1,
      default: () => Je.value.propsDefault.caretIcon
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    class: {
      type: [String, Object],
      required: !1
    },
    countMultiselect: {
      type: Number,
      required: !1,
      default: () => Je.value.propsDefault.countMultiselect
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => Je.value.propsDefault.dataExtra
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    deselectable: {
      type: Boolean,
      required: !1,
      default: () => Je.value.propsDefault.deselectable
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    exceededItemsDeletable: {
      type: Boolean,
      required: !1,
      default: () => Je.value.propsDefault.exceededItemsDeletable
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => ot("a_ui_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inBody: {
      type: Boolean,
      required: !1,
      default: () => Je.value.propsDefault.inBody
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      required: !1
    },
    isCloseByClick: {
      type: Boolean,
      required: !1,
      default: () => Je.value.propsDefault.isCloseByClick
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: () => Je.value.propsDefault.isDataSimpleArray
    },
    isDeselectAll: {
      type: Boolean,
      required: !1,
      default: () => Je.value.propsDefault.isDeselectAll
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSelectAll: {
      type: Boolean,
      required: !1,
      default: () => Je.value.propsDefault.isSelectAll
    },
    isSelectionCloseable: {
      type: Boolean,
      required: !1,
      default: () => Je.value.propsDefault.isSelectionCloseable
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: () => Je.value.propsDefault.keyDisabled
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: () => Je.value.propsDefault.keyGroup
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: () => Je.value.propsDefault.keyId
    },
    keyLabel: {
      type: String,
      required: !1,
      default: () => Je.value.propsDefault.keyLabel
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    maxCountMultiselect: {
      type: Number,
      required: !1,
      default: () => Je.value.propsDefault.maxCountMultiselect,
      validator: (e) => e > 0
    },
    menuWidthType: {
      type: String,
      required: !1,
      default: () => Je.value.propsDefault.menuWidthType,
      validator: (e) => ["as_button", "by_content"].indexOf(e) !== -1
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: () => Je.value.propsDefault.modelValue
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholder: {
      type: String,
      required: !1,
      default: void 0
    },
    placement: {
      type: String,
      required: !1,
      default: () => Je.value.propsDefault.placement,
      validator: (e) => Lr.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: () => Je.value.propsDefault.popperContainerId
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    search: {
      type: Boolean,
      required: !1,
      default: () => Je.value.propsDefault.search
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: () => Je.value.propsDefault.searchApi
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: () => Je.value.propsDefault.searchApiKey
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: () => Je.value.propsDefault.searchOutside
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: () => Je.value.propsDefault.searchTimeout
    },
    selectMenuClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: () => Je.value.propsDefault.slotName
    },
    sortOrder: {
      type: String,
      required: !1,
      default: () => Je.value.propsDefault.sortOrder,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: () => Je.value.propsDefault.sortOrderGroup,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    textDeselectAll: {
      type: String,
      required: !1,
      default: () => Je.value.propsDefault.textDeselectAll
    },
    textSelectAll: {
      type: String,
      required: !1,
      default: () => Je.value.propsDefault.textSelectAll
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: () => Je.value.propsDefault.translateData
    },
    type: {
      type: String,
      required: !1,
      default: () => Je.value.propsDefault.type,
      validator: (e) => ["select", "multiselect"].indexOf(e) !== -1
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "blur",
    "focus",
    "onSearchOutside",
    "open",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = wt(e), {
      componentStyleHide: r
    } = zt(e), {
      ariaDescribedbyLocal: a,
      changeModel: l,
      clearModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = an(e, t), {
      dataAll: m,
      dataFromServer: b,
      dataExtraLocal: L,
      dataKeyByKeyIdLocal: v,
      dataLocal: I,
      hasDataExtra: R
    } = Gc(e), {
      loadDataFromServer: y,
      loadDataFromServerForSearchAPI: C,
      loadingDataFromServer: w,
      loadingSearchApi: F,
      onSearchInApi: P,
      searchApiLocal: q,
      updateUrlPropsComputed: N,
      urlPropsComputed: U
    } = Hc(e, {
      changeModel: l,
      dataExtraLocal: L,
      dataFromServer: b
    }), {
      loadingLocal: V
    } = jc(e, {
      loadingDataFromServer: w
    }), {
      addPopperContainerInBody: j,
      popperContainerIdSelector: ne
    } = Ic(e);
    Vc(t, {
      dataKeyByKeyIdLocal: v,
      dataLocal: I
    });
    const {
      isModelLengthLimitExceeded: Z,
      isModelValue: le,
      isMultiselect: oe,
      limitExceededModelData: fe,
      modelValueLength: he,
      modelValueMultiselectFiltered: we
    } = Iq(e, {
      dataKeyByKeyIdLocal: v
    }), {
      ariaLabelledby: Ie,
      containerId: se,
      idForList: me,
      tabindex: Le
    } = Lq(e, {
      htmlIdLocal: A
    }), {
      dataSort: ce
    } = Wc(e, {
      data: I
    }), {
      dataGrouped: Ae,
      groupsForLever: $,
      hasKeyGroup: ee,
      keyGroupArray: re
    } = Uc(e, {
      data: ce
    }), {
      hasNotElementsExtraWithSearch: be,
      hasNotElementsWithSearch: xe,
      idForButtonSearchOutside: He,
      modelSearch: Ve,
      modelSearchLowerCase: Ye,
      modelSearchOutside: Re,
      onSearchOutside: je,
      searching: ft,
      searchingElements: $e,
      searchingElementsExtra: it,
      searchingGroups: _t,
      searchingGroupsWithSearchInGroup: mt,
      searchOutsideOrApi: vt,
      searchOutsideRef: lr,
      updateModelSearch: $n,
      updateModelSearchOutside: or
    } = zc(e, t, {
      data: ce,
      dataExtra: L,
      groupsForLever: $,
      hasKeyGroup: ee,
      htmlIdLocal: A,
      keyGroupArray: re,
      onSearchInApi: P,
      searchApiLocal: q
    }), {
      buttonRef: Kt,
      handleKeydown: kn,
      isOpen: Hn,
      menuParentRef: Ln,
      menuRef: Ir,
      togglePopover: vn
    } = Oq(e, t), {
      deleteExceededItems: gr,
      onChangeModelValue: Un,
      onDeselectAll: Wn,
      onKeydownDeselectAll: Vt,
      onKeydownSelectAll: hn,
      onSelectAll: ur
    } = gq(e, {
      changeModel: l,
      dataAll: m,
      dataKeyByKeyIdLocal: v,
      isMultiselect: oe,
      togglePopover: vn
    }), {
      hasSelectedTitle: _r,
      selectedTitle: ta
    } = yq(e, {
      dataKeyByKeyIdLocal: v,
      isModelLengthLimitExceeded: Z,
      isModelValue: le,
      isMultiselect: oe,
      modelValueLength: he,
      modelValueMultiselectFiltered: we
    }), {
      isDividerSelectDeselectVisible: yr
    } = vq(e, {
      isMultiselect: oe
    }), {
      destroyEventBusClickLabel: Rr,
      initEventBusClickLabel: ui
    } = Yc({
      htmlIdLocal: A,
      clickLabel: vn
    });
    return tt(U, N, {
      deep: !0
    }), j({ className: "a_select_container" }), ui(), y(), C(), Ot(() => {
      Rr();
    }), {
      ariaDescribedbyLocal: a,
      ariaLabelledby: Ie,
      attributesToExcludeFromRender: n,
      buttonRef: Kt,
      clearModel: o,
      componentStyleHide: r,
      containerId: se,
      dataExtraLocal: L,
      dataGrouped: Ae,
      dataKeyByKeyIdLocal: v,
      dataLocal: I,
      dataSort: ce,
      deleteExceededItems: gr,
      errorsId: u,
      groupsForLever: $,
      handleKeydown: kn,
      hasDataExtra: R,
      hasKeyGroup: ee,
      hasNotElementsExtraWithSearch: be,
      hasNotElementsWithSearch: xe,
      hasSelectedTitle: _r,
      helpTextId: h,
      htmlIdLocal: A,
      idForButtonSearchOutside: He,
      idForList: me,
      isDividerSelectDeselectVisible: yr,
      isErrors: E,
      isModelLengthLimitExceeded: Z,
      isModelValue: le,
      isMultiselect: oe,
      isOpen: Hn,
      limitExceededModelData: fe,
      loadingLocal: V,
      loadingSearchApi: F,
      menuParentRef: Ln,
      menuRef: Ir,
      modelSearch: Ve,
      modelSearchLowerCase: Ye,
      modelSearchOutside: Re,
      modelValueLength: he,
      modelValueMultiselectFiltered: we,
      onBlur: p,
      onChangeModelValue: Un,
      onDeselectAll: Wn,
      onFocus: T,
      onKeydownDeselectAll: Vt,
      onKeydownSelectAll: hn,
      onSearchOutside: je,
      onSelectAll: ur,
      popperContainerIdSelector: ne,
      searching: ft,
      searchingElements: $e,
      searchingElementsExtra: it,
      searchingGroups: _t,
      searchingGroupsWithSearchInGroup: mt,
      searchOutsideOrApi: vt,
      searchOutsideRef: lr,
      selectedTitle: ta,
      tabindex: Le,
      togglePopover: vn,
      updateModelSearch: $n,
      updateModelSearchOutside: or
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      class: this.class,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModelValue || this.isOpen
        }]
      }, [
        this.label && c(kt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          loading: this.loadingLocal,
          required: this.required,
          type: this.type,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            id: this.containerId,
            ref: "ui_select",
            class: "a_select",
            role: "application"
          }, [
            c("div", {
              ref: "buttonRef",
              id: this.htmlIdLocal,
              autocomplete: this.autocomplete,
              class: [this.buttonClassDefault, this.buttonClass, {
                disabled: this.disabled,
                a_select_toggle_closeable: this.isMultiselect && this.isSelectionCloseable && this.isModelValue,
                a_form_control_invalid: this.isErrors
              }],
              "aria-labelledby": this.ariaLabelledby,
              role: "combobox",
              tabindex: this.tabindex,
              "aria-haspopup": "listbox",
              ariaExpanded: this.isOpen,
              ariaRequired: this.required,
              ariaDisabled: this.disabled,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              title: this.hasSelectedTitle ? this.selectedTitle : void 0,
              // TODO: title
              onClick: this.togglePopover,
              onKeydown: this.handleKeydown,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }, [
              this.$slots.fixedPlaceholder ? this.$slots.fixedPlaceholder({
                dataKeyByKeyId: this.dataKeyByKeyIdLocal,
                modelValue: this.modelValue
              }) : this.isModelValue ? this.isMultiselect ? this.isSelectionCloseable ? c("ul", {
                class: "a_select__ul_closeable"
              }, [
                oT(this.modelValueMultiselectFiltered, this.countMultiselect).map((e, t) => c(kE, {
                  key: t,
                  alwaysTranslate: this.alwaysTranslate,
                  data: this.dataKeyByKeyIdLocal[e] || {},
                  slotName: this.slotName,
                  disabled: this.disabled,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.isModelLengthLimitExceeded && c(kE, {
                  key: this.countMultiselect,
                  alwaysTranslate: this.alwaysTranslate,
                  data: this.limitExceededModelData,
                  disabled: this.disabled,
                  hideDeleteButton: !this.exceededItemsDeletable,
                  onChangeModelValue: this.deleteExceededItems
                })
              ]) : c("span", {
                class: "a_select__value__label"
              }, [
                this.isModelLengthLimitExceeded ? c(pe, {
                  alwaysTranslate: this.alwaysTranslate,
                  text: "_A_SELECT_SELECTED_{{count}}_",
                  extra: {
                    count: this.modelValueLength
                  }
                }) : this.modelValueMultiselectFiltered.map((e, t) => c("span", {
                  key: t
                }, [
                  c("span", null, t !== 0 ? ", " : ""),
                  c($E, {
                    alwaysTranslate: this.alwaysTranslate,
                    data: this.dataKeyByKeyIdLocal[e] || {},
                    slotName: this.slotName
                  }, this.$slots)
                ]))
              ]) : c($E, {
                alwaysTranslate: this.alwaysTranslate,
                data: this.dataKeyByKeyIdLocal[this.modelValue] || {},
                class: "a_select__value__label",
                slotName: this.slotName
              }, this.$slots) : c(pe, {
                tag: "span",
                text: this.placeholder
              }),
              c(ti, {
                to: this.popperContainerIdSelector,
                disabled: !this.inBody
              }, [
                c("div", {
                  ref: "menuParentRef",
                  id: this.idForList,
                  style: this.isOpen ? "" : "display: none;",
                  "aria-hidden": !this.isOpen,
                  role: "application"
                }, [
                  c("div", {
                    ref: "menuRef",
                    class: [
                      "a_select_menu",
                      {
                        a_select_menu_by_content: this.menuWidthType === "by_content"
                      },
                      this.selectMenuClass
                    ],
                    role: "listbox",
                    "aria-labelledby": this.htmlIdLocal,
                    onClick: (e) => e.stopPropagation()
                  }, [
                    this.searchOutsideOrApi && c("div", {
                      class: "a_select__search"
                    }, [
                      c("form", {
                        onSubmit: this.onSearchOutside
                      }, [
                        c("div", {
                          class: "a_select__search__group"
                        }, [
                          c(Sn, {
                            alwaysTranslate: this.alwaysTranslate,
                            label: "_A_SELECT_SEARCH_",
                            inputClass: "a_select__element_clickable",
                            modelValue: this.modelSearchOutside,
                            modelUndefined: "",
                            "onUpdate:modelValue": this.updateModelSearchOutside
                          }),
                          c(rt, {
                            alwaysTranslate: this.alwaysTranslate,
                            ariaDisabled: this.loadingSearchApi,
                            disabled: this.disabled,
                            class: "a_btn a_btn_primary a_select__element_clickable",
                            type: "submit",
                            iconLeft: Il,
                            loadingAlign: "left"
                          })
                        ])
                      ])
                    ]),
                    this.search && c("div", {
                      class: "a_select__search"
                    }, [
                      c(Sn, {
                        alwaysTranslate: this.alwaysTranslate,
                        label: "_A_SELECT_SEARCH_",
                        inputClass: "a_select__element_clickable",
                        modelValue: this.modelSearch,
                        modelUndefined: "",
                        "onUpdate:modelValue": this.updateModelSearch
                      })
                    ]),
                    (this.searchOutside || this.search) && c("div", {
                      class: "a_select__divider",
                      ariaHidden: !0
                    }),
                    c("div", {
                      class: "a_select_menu__child"
                    }, [
                      this.isMultiselect && this.isSelectAll && c("div", {
                        class: "a_select__menu__link a_select__menu__link_selected a_select__element_clickable",
                        role: "option",
                        tabindex: "-1",
                        onClick: this.onSelectAll,
                        onKeydown: this.onKeydownSelectAll
                      }, [
                        c("span", {
                          class: "a_select__menu__link__icon_box"
                        }, [
                          c(st, {
                            icon: Cc
                          })
                        ]),
                        c("span", null, this.textSelectAll)
                      ]),
                      this.isMultiselect && this.isDeselectAll && c("div", {
                        class: "a_select__menu__link a_select__menu__link_selected a_select__element_clickable",
                        role: "option",
                        tabindex: "-1",
                        onClick: this.onDeselectAll,
                        onKeydown: this.onKeydownDeselectAll
                      }, [
                        c("span", {
                          class: "a_select__menu__link__icon_box"
                        }, [
                          c(st, {
                            icon: oi
                          })
                        ]),
                        c("span", null, this.textDeselectAll)
                      ]),
                      this.isDividerSelectDeselectVisible && c("div", {
                        class: "a_select__divider",
                        ariaHidden: !0
                      }),
                      this.loadingLocal || this.loadingSearchApi ? c(al) : "",
                      this.hasDataExtra && c("div", {}, [
                        ...this.dataExtraLocal.map((e, t) => c(Od, {
                          key: e[et],
                          id: this.htmlIdLocal,
                          alwaysTranslate: this.alwaysTranslate,
                          dataItem: e,
                          disabled: this.disabled,
                          searching: this.searching,
                          searchingElements: this.searchingElementsExtra,
                          itemIndex: t,
                          keyDisabled: this.keyDisabled,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          slotName: this.slotName,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)),
                        !this.hasNotElementsExtraWithSearch && c("div", {
                          class: "a_select__divider",
                          ariaHidden: !0
                        })
                      ]),
                      c("div", {}, this.hasKeyGroup ? [
                        c(Nc, {
                          id: `${this.htmlIdLocal}_lev_0`,
                          alwaysTranslate: this.alwaysTranslate,
                          dataGrouped: this.dataGrouped,
                          disabled: this.disabled,
                          groupsForLever: this.groupsForLever,
                          isErrors: this.isErrors,
                          keyDisabled: this.keyDisabled,
                          levelIndex: 0,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          searching: this.searching,
                          searchingElements: this.searchingElements,
                          searchingGroups: this.searchingGroups,
                          searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                          slotName: this.slotName,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)
                      ] : [
                        c("div", {}, [
                          ...this.dataSort.map((e, t) => c(Od, {
                            key: e[et],
                            id: this.htmlIdLocal,
                            alwaysTranslate: this.alwaysTranslate,
                            dataItem: e,
                            disabled: this.disabled,
                            searching: this.searching,
                            searchingElements: this.searchingElements,
                            itemIndex: t,
                            keyDisabled: this.keyDisabled,
                            modelSearch: this.modelSearchLowerCase,
                            modelValue: this.modelValue,
                            slotName: this.slotName,
                            type: this.type,
                            onChangeModelValue: this.onChangeModelValue
                          }, this.$slots))
                        ])
                      ]),
                      !this.dataSort.length && !this.hasDataExtra || this.hasNotElementsWithSearch ? c(pe, {
                        alwaysTranslate: this.alwaysTranslate,
                        class: "a_form__not_elements",
                        text: "_A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_"
                      }) : ""
                    ])
                  ])
                ])
              ]),
              this.hasCaret ? c("span", {
                class: "a_caret"
              }, [
                c(st, {
                  icon: this.caretIcon
                })
              ]) : ""
            ])
          ])
        ]),
        c(rn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(nn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function Cq({
  isModelFalse: e = _(() => !1),
  isModelTrue: t = _(() => !1)
}) {
  return {
    isChecked: _(() => {
      if (t.value)
        return !0;
      if (e.value)
        return !1;
    })
  };
}
function Nq(e, {
  isModelFalse: t = _(() => !1),
  isModelTrue: n = _(() => !1)
}) {
  const r = f(e, "trueLabel"), a = f(e, "falseLabel"), l = f(e, "defaultLabel");
  return {
    labelValueLocal: _(() => n.value ? r.value : t.value ? a.value : l.value)
  };
}
function Dq(e) {
  const t = f(e, "modelValue"), n = f(e, "trueValue"), r = f(e, "falseValue"), a = _(() => t.value === n.value || t.value === "true"), l = _(() => t.value === r.value || t.value === "false");
  return {
    isModelDefault: _(() => !a.value && !l.value),
    isModelFalse: l,
    isModelTrue: a
  };
}
function Bq(e, {
  changeModel: t = () => {
  },
  isModelFalse: n = _(() => !1),
  isModelTrue: r = _(() => !1)
}) {
  const a = f(e, "defaultValue"), l = f(e, "disabled"), o = f(e, "falseValue"), u = f(e, "isThreeState"), h = f(e, "trueValue"), A = (p) => {
    if (l.value)
      return;
    let T;
    r.value ? T = o.value : u.value && n.value ? T = a.value : T = h.value, t({
      model: T,
      $event: p
    });
  };
  return {
    onInput: A,
    onKeydown: (p) => {
      (p.keyCode === X.enter || p.keyCode === X.space) && (A(p), p.stopPropagation(), p.preventDefault());
    }
  };
}
const vS = {
  name: "ASwitch",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    defaultLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_DEFAULT_LABEL_"
    },
    defaultValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    falseLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_FALSE_LABEL_"
    },
    falseValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !1
    },
    fullWidth: {
      type: Boolean,
      required: !1
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => ot("a_switch_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isThreeState: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Lr.indexOf(e) !== -1
    },
    trueLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_TRUE_LABEL_"
    },
    trueValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !0
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = bl(e), {
      attributesToExcludeFromRender: r
    } = wt(e), {
      componentStyleHide: a
    } = zt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      clearModel: u,
      errorsId: h,
      helpTextId: A,
      htmlIdLocal: E,
      isErrors: p,
      isModel: T,
      onBlur: m,
      onFocus: b
    } = an(e, t), {
      isModelDefault: L,
      isModelFalse: v,
      isModelTrue: I
    } = Dq(e), {
      labelValueLocal: R
    } = Nq(e, {
      isModelFalse: v,
      isModelTrue: I
    }), {
      isChecked: y
    } = Cq({
      isModelFalse: v,
      isModelTrue: I
    }), {
      onInput: C,
      onKeydown: w
    } = Bq(e, {
      changeModel: o,
      isModelFalse: v,
      isModelTrue: I
    });
    return {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: r,
      clearModel: u,
      componentStyleHide: a,
      disabledAttribut: n,
      errorsId: h,
      helpTextId: A,
      htmlIdLocal: E,
      isChecked: y,
      isErrors: p,
      isModel: T,
      isModelDefault: L,
      labelValueLocal: R,
      onBlur: m,
      onFocus: b,
      onInput: C,
      onKeydown: w
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(kt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          isError: this.isErrors
        }) : "",
        c("div", {
          class: "switch_button__wrapper"
        }, [
          c(Oe, {
            class: [
              "switch_button",
              {
                switch_button_undefined: this.isModelDefault,
                switch_button_invalid: this.isErrors,
                switch_button_auto: !this.fullWidth
              }
            ],
            classDefault: "",
            isTitleHtml: this.isTitleHtml,
            tag: "div",
            title: this.title,
            titlePlacement: this.titlePlacement,
            type: "text"
          }, {
            default: () => [
              c("input", {
                id: this.htmlIdLocal,
                "aria-describedby": this.ariaDescribedbyLocal,
                ariaInvalid: this.isErrors,
                ariaRequired: this.required,
                checked: this.isChecked,
                class: [
                  "switch_button__input",
                  this.inputClass
                ],
                disabled: this.disabledAttribut,
                type: "checkbox",
                ...this.inputAttributes,
                onClick: this.onInput,
                onKeydown: this.onKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlur
              }),
              c(pe, {
                alwaysTranslate: this.alwaysTranslate,
                tag: "label",
                class: [
                  "switch_button__label",
                  {
                    switch_button__label_full: this.fullWidth
                  }
                ],
                for: this.htmlIdLocal,
                extra: this.extra,
                html: this.labelValueLocal
              })
            ]
          })
        ]),
        c(rn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(nn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, wq = {
  name: "ATemplate",
  inheritAttrs: !1,
  props: {
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    html: {
      type: String,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    options: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = wt(e), {
      componentStyleHide: n
    } = zt(e);
    return {
      attributesToExcludeFromRender: t,
      componentStyleHide: n
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      alwaysTranslate: void 0,
      type: void 0,
      modelValue: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      this.$slots[this.slotName] ? c("div", {
        class: "a_template"
      }, this.$slots[this.slotName]({
        options: this.options,
        props: this.$props
      })) : "",
      this.html ? Ft(c("div", {
        class: "a_template"
      }), [
        [cn, this.html]
      ]) : ""
    ]) : null;
  }
}, Ys = typeof Map == "function" ? /* @__PURE__ */ new Map() : /* @__PURE__ */ function() {
  const e = [], t = [];
  return {
    has: function(r) {
      return e.indexOf(r) > -1;
    },
    get: function(r) {
      return t[e.indexOf(r)];
    },
    set: function(r, a) {
      e.indexOf(r) === -1 && (e.push(r), t.push(a));
    },
    delete: function(r) {
      const a = e.indexOf(r);
      a > -1 && (e.splice(a, 1), t.splice(a, 1));
    }
  };
}();
let IS = function(t) {
  return new Event(t, { bubbles: !0 });
};
try {
  new Event("test");
} catch {
  IS = function(n) {
    const r = document.createEvent("Event");
    return r.initEvent(n, !0, !1), r;
  };
}
function Pq(e) {
  if (!e || !e.nodeName || e.nodeName !== "TEXTAREA" || Ys.has(e))
    return;
  let t = null, n = null, r = null;
  function a() {
    const p = window.getComputedStyle(e, null);
    p.resize === "vertical" ? e.style.resize = "none" : p.resize === "both" && (e.style.resize = "horizontal"), p.boxSizing === "content-box" ? t = -(parseFloat(p.paddingTop) + parseFloat(p.paddingBottom)) : t = parseFloat(p.borderTopWidth) + parseFloat(p.borderBottomWidth), isNaN(t) && (t = 0), h();
  }
  function l(p) {
    {
      const T = e.style.width;
      e.style.width = "0px", e.offsetWidth, e.style.width = T;
    }
    e.style.overflowY = p;
  }
  function o(p) {
    const T = [];
    for (; p && p.parentNode && p.parentNode instanceof Element; )
      p.parentNode.scrollTop && T.push({
        node: p.parentNode,
        scrollTop: p.parentNode.scrollTop
      }), p = p.parentNode;
    return T;
  }
  function u() {
    if (e.scrollHeight === 0)
      return;
    const p = o(e), T = document.documentElement && document.documentElement.scrollTop;
    e.style.height = "", e.style.height = e.scrollHeight + t + "px", n = e.clientWidth, p.forEach(function(m) {
      m.node.scrollTop = m.scrollTop;
    }), T && (document.documentElement.scrollTop = T);
  }
  function h() {
    u();
    const p = Math.round(parseFloat(e.style.height)), T = window.getComputedStyle(e, null);
    let m = T.boxSizing === "content-box" ? Math.round(parseFloat(T.height)) : e.offsetHeight;
    if (m < p ? T.overflowY === "hidden" && (l("scroll"), u(), m = T.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(e, null).height)) : e.offsetHeight) : T.overflowY !== "hidden" && (l("hidden"), u(), m = T.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(e, null).height)) : e.offsetHeight), r !== m) {
      r = m;
      const b = IS("autosize:resized");
      try {
        e.dispatchEvent(b);
      } catch {
      }
    }
  }
  const A = function() {
    e.clientWidth !== n && h();
  }, E = (function(p) {
    window.removeEventListener("resize", A, !1), e.removeEventListener("input", h, !1), e.removeEventListener("keyup", h, !1), e.removeEventListener("autosize:destroy", E, !1), e.removeEventListener("autosize:update", h, !1), Object.keys(p).forEach(function(T) {
      e.style[T] = p[T];
    }), Ys.delete(e);
  }).bind(e, {
    height: e.style.height,
    resize: e.style.resize,
    overflowY: e.style.overflowY,
    overflowX: e.style.overflowX,
    wordWrap: e.style.wordWrap
  });
  e.addEventListener("autosize:destroy", E, !1), "onpropertychange" in e && "oninput" in e && e.addEventListener("keyup", h, !1), window.addEventListener("resize", A, !1), e.addEventListener("input", h, !1), e.addEventListener("autosize:update", h, !1), e.style.overflowX = "hidden", e.style.wordWrap = "break-word", Ys.set(e, {
    destroy: E,
    update: h
  }), a();
}
function xq(e) {
  const t = Ys.get(e);
  t && t.destroy();
}
function Fq(e) {
  const t = Ys.get(e);
  t && t.update();
}
let Ea;
typeof window > "u" || typeof window.getComputedStyle != "function" ? (Ea = function(t) {
  return t;
}, Ea.destroy = function(e) {
  return e;
}, Ea.update = function(e) {
  return e;
}) : (Ea = function(t, n) {
  return t && Array.prototype.forEach.call(t.length ? t : [t], function(r) {
    return Pq(r);
  }), t;
}, Ea.destroy = function(e) {
  return e && Array.prototype.forEach.call(e.length ? e : [e], xq), e;
}, Ea.update = function(e) {
  return e && Array.prototype.forEach.call(e.length ? e : [e], Fq), e;
});
const sd = Ea;
function Mq(e) {
  const t = f(e, "isScalable"), n = B(!1), r = B(void 0);
  return {
    destroyAutosize: () => {
      n.value && (sd.destroy(r.value), n.value = !1);
    },
    initAutosize: () => {
      t.value && (sd(r.value), n.value = !0);
    },
    textareaRef: r,
    updateAutosize: () => {
      t.value && n.value && setTimeout(() => {
        sd.update(r.value);
      });
    }
  };
}
function qq(e, {
  changeModel: t = () => {
  },
  updateAutosize: n = () => {
  }
}) {
  const r = f(e, "disabled"), a = f(e, "modelUndefined");
  return {
    clearModel: () => {
      r.value || (t({
        model: a.value
      }), n());
    },
    onInput: (u) => {
      if (r.value)
        return;
      const h = u.target.value;
      t({
        model: h
      });
    }
  };
}
function $q(e) {
  const t = f(e, "resize"), n = {
    v: "a_textarea_resize_v",
    h: "a_textarea_resize_h",
    none: "a_textarea_resize_none",
    auto: ""
  };
  return {
    resizeClass: _(() => n[t.value])
  };
}
function kq(e) {
  const t = f(e, "isScalable"), n = f(e, "rows");
  return {
    rowsLocal: _(() => {
      if (n.value)
        return n.value;
      if (t.value)
        return 1;
    })
  };
}
const Hq = {
  name: "ATextarea",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => ot("a_textarea_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isScalable: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    maxlength: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    resize: {
      type: String,
      required: !1,
      default: "v",
      validator: (e) => ["v", "h", "none", "auto"].indexOf(e) !== -1
    },
    rows: {
      type: [String, Number],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = bl(e), {
      attributesToExcludeFromRender: r
    } = wt(e), {
      componentStyleHide: a
    } = zt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: m
    } = an(e, t), {
      isClearButtonLocal: b
    } = Tu(e, {
      isModel: p
    }), {
      resizeClass: L
    } = $q(e), {
      destroyAutosize: v,
      initAutosize: I,
      textareaRef: R,
      updateAutosize: y
    } = Mq(e), {
      clearModel: C,
      onInput: w
    } = qq(e, {
      changeModel: o,
      updateAutosize: y
    }), {
      rowsLocal: F
    } = kq(e), {
      placeholderAttributes: P
    } = hl(e);
    return kr(() => {
      I();
    }), Ot(() => {
      v();
    }), {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: r,
      changeModel: o,
      clearModel: C,
      componentStyleHide: a,
      disabledAttribut: n,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isClearButtonLocal: b,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: m,
      onInput: w,
      placeholderAttributes: P,
      resizeClass: L,
      rowsLocal: F,
      textareaRef: R
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(kt, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required
        }) : "",
        c("div", {
          class: [
            "a_form_element a_form_element_textarea",
            {
              a_form_element_textarea_scalable: this.isScalable
            }
          ]
        }, [
          c("textarea", {
            ref: "textareaRef",
            id: this.htmlIdLocal,
            autocomplete: this.autocomplete,
            value: this.modelValue,
            rows: this.rowsLocal,
            class: [
              "a_form_control a_textarea",
              this.inputClass,
              {
                a_textarea_scalable: this.isScalable,
                a_form_element_with_one_btn: this.isClearButton,
                a_form_control_invalid: this.isErrors
              },
              this.resizeClass
            ],
            disabled: this.disabledAttribut,
            ariaRequired: this.required,
            ariaInvalid: this.isErrors,
            "aria-describedby": this.ariaDescribedbyLocal,
            maxlength: this.maxlength,
            ...this.placeholderAttributes,
            ...this.inputAttributes,
            onInput: this.onInput,
            onFocus: this.onFocus,
            onBlur: this.onBlur
          }),
          this.isClearButtonLocal ? c("div", {
            class: "a_form_control__actions"
          }, [
            c(pu, {
              alwaysTranslate: this.alwaysTranslate,
              disabled: this.disabled,
              class: this.clearButtonClass,
              onClear: this.clearModel
            })
          ]) : ""
        ]),
        c(rn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(nn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, Ru = {
  checkbox: lM,
  color: Sn,
  currency: QM,
  date: Yo,
  dateRange: LM,
  datetime: Yo,
  email: Sn,
  file: eq,
  integer: Ya,
  integerNonNegative: Ya,
  integerNonNegativeRange: vo,
  integerPositive: Ya,
  integerPositiveRange: vo,
  integerRange: vo,
  json: Tq,
  multiselect: ol,
  natural: Sn,
  number: Ya,
  numberRange: vo,
  oneCheckbox: yu,
  password: Sn,
  radio: LS,
  select: ol,
  switch: vS,
  template: wq,
  text: Sn,
  textarea: Hq
}, Uq = ["datepickerRange", "dateRange"], gS = {};
Y(Uq, (e) => {
  gS[e] = !0;
});
const yS = gS;
function Wq(e) {
  const t = f(e, "children");
  return {
    specificAttributes: _(() => {
      const r = {};
      return Y(t.value, (a) => {
        const l = mS[a.type], o = yS[a.type];
        l && Pe(a.inputWidth) && (r[a.id] = {
          inputWidth: "auto"
        }), o && (r[a.id] = {
          inputWidth: "inherit",
          inputAttributes: {
            style: "min-width: 181px"
          }
        });
      }), r;
    })
  };
}
const mr = {
  components: {},
  containerComponents: {}
}, $oe = {
  install: (e, {
    components: t = {},
    containerComponents: n = {}
  } = {}) => {
    mr.components = t, mr.containerComponents = n;
  }
}, RS = {
  name: "AGroup",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    children: {
      type: Array,
      required: !1,
      default: () => []
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_6 a_column_12_touch"
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12 a_columns_gap_2"
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => ot("a_group_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: [String, Number, Array, Object, Boolean],
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = wt(e), r = () => ({
      ...Ru,
      ...mr.components,
      ...mr.containerComponents
    }), {
      componentStyleHide: a
    } = zt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      clearModel: u,
      errorsId: h,
      helpTextId: A,
      htmlIdLocal: E,
      isErrors: p
    } = an(e, t), T = f(e, "modelValue"), m = ({ item: C, model: w }) => {
      const F = C.id, P = Se(T.value);
      dc(P, F, Se(w)), t.emit("update:modelValue", P);
    }, b = ({ item: C, dataKeyByKeyId: w }) => {
      t.emit("updateData", { item: C, dataKeyByKeyId: w });
    }, L = f(e, "children"), v = f(e, "idPrefix"), I = _(() => L.value[0] || {}), R = _(() => sl({
      id: I.value.id,
      idPrefix: I.value.idPrefix || v.value,
      htmlId: I.value.htmlId
    })), {
      specificAttributes: y
    } = Wq(e);
    return {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: n,
      changeModel: o,
      clearModel: u,
      componentStyleHide: a,
      componentTypesMapping: r,
      errorsId: h,
      firstChild: I,
      helpTextId: A,
      htmlIdFirstChild: R,
      htmlIdLocal: E,
      isErrors: p,
      onUpdateDataLocal: b,
      onUpdateModelLocal: m,
      specificAttributes: y
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        id: this.htmlIdLocal,
        role: "group",
        tabindex: -1,
        class: [this.inputClass, {
          a_group_invalid: this.isErrors
        }],
        "aria-describedby": this.ariaDescribedbyLocal
      }, [
        c("div", {
          class: this.classColumns
        }, [
          this.firstChild.label && c(kt, {
            id: this.htmlIdFirstChild,
            alwaysTranslate: this.alwaysTranslate,
            extra: this.extra,
            isError: !!this.errorsAll[this.firstChild.id],
            isLabelFloat: !1,
            label: this.label || this.firstChild.label,
            labelClass: this.labelClass || this.firstChild.labelClass || this.classColumnDefault,
            labelScreenReader: this.labelScreenReader || this.firstChild.labelScreenReader,
            required: this.required || this.firstChild.required,
            type: this.firstChild.type
          }),
          this.children.map((e, t) => {
            const n = Ri.value[e.type];
            let r;
            ae(e.classColumn) ? r = this.classColumnDefault : e.classColumn && (r = e.classColumn);
            let a;
            e.isHide && (a = "display: none;");
            const l = this.componentTypesMapping()[e.type];
            return c("div", {
              class: r,
              style: a
            }, [
              c(l, {
                key: t,
                alwaysTranslate: this.alwaysTranslate,
                modelValue: n ? this.modelValue : de(this.modelValue, e.id),
                modelDependencies: n ? this.modelValue : void 0,
                errors: this.errorsAll[e.id],
                errorsAll: n ? this.errorsAll : void 0,
                idPrefix: this.idPrefix,
                "onUpdate:modelValue": (o) => this.onUpdateModelLocal({ item: e, model: o }),
                onUpdateData: ({ dataKeyByKeyId: o }) => this.onUpdateDataLocal({ item: e, dataKeyByKeyId: o }),
                ...e,
                disabled: this.disabled || e.disabled,
                ...this.specificAttributes[e.id],
                label: t === 0 ? void 0 : e.label,
                slotAppend: void 0,
                classColumn: void 0,
                ...this.attributesToExcludeFromRender
              }, this.$slots),
              e.slotAppend && this.$slots[e.slotAppend] ? this.$slots[e.slotAppend]({ item: e, itemIndex: t }) : ""
            ]);
          })
        ])
      ]),
      c(rn, {
        id: this.helpTextId,
        alwaysTranslate: this.alwaysTranslate,
        html: this.helpText,
        extra: this.extra
      }),
      this.isErrors && c(nn, {
        class: "a_px_3",
        id: this.errorsId,
        alwaysTranslate: this.alwaysTranslate,
        errors: this.errors
      })
    ]) : null;
  }
};
function Vq(e, t, {
  changeModel: n = () => {
  }
}) {
  const r = f(e, "modelValue");
  return {
    onUpdateModelLocal: ({ model: l, currentModel: o, item: u }) => {
      if (Ri.value[u.type])
        n({ model: l, currentModel: o, item: u });
      else {
        const h = u.id, A = Se(r.value);
        dc(A, h, Se(l)), n({ model: A, currentModel: o, item: u });
      }
    }
  };
}
const Gq = {
  name: "AFieldset",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    children: {
      type: Array,
      required: !1,
      default: () => []
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_12"
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12"
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => ot("a_fieldset_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_"
      })
    }
  },
  emits: [
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = wt(e), r = () => ({
      ...Ru,
      group: RS,
      fieldset: Fr("AFieldset"),
      ...mr.components,
      ...mr.containerComponents
    }), {
      componentStyleHide: a
    } = zt(e), {
      ariaDescribedbyLocal: l,
      changeModel: o,
      errorsId: u,
      helpTextId: h,
      htmlIdLocal: A,
      isErrors: E
    } = an(e, t), {
      textAfterLabel: p
    } = Pc(e), {
      onUpdateModelLocal: T
    } = Vq(e, t, {
      changeModel: o
    }), m = ({ item: C, dataKeyByKeyId: w }) => {
      t.emit("updateData", { item: C, dataKeyByKeyId: w });
    }, {
      groupId: b
    } = wc(e, {
      htmlIdLocal: A
    }), {
      iconCollapse: L,
      initIsCollapsedLocal: v,
      isCollapsedLocal: I,
      titleCollapse: R,
      toggleCollapse: y
    } = Fc(e, t);
    return v(), {
      ariaDescribedbyLocal: l,
      attributesToExcludeFromRender: n,
      componentStyleHide: a,
      componentTypesMapping: r,
      errorsId: u,
      groupId: b,
      helpTextId: h,
      htmlIdLocal: A,
      iconCollapse: L,
      isCollapsedLocal: I,
      isErrors: E,
      onUpdateDataLocal: m,
      onUpdateModelLocal: T,
      textAfterLabel: p,
      titleCollapse: R,
      toggleCollapse: y
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__parent"
      }, [
        c("fieldset", {
          id: this.htmlIdLocal,
          tabindex: -1,
          class: ["a_fieldset", this.classFieldset, {
            a_fieldset_invalid: this.isErrors,
            a_fieldset_no_border: !this.hasBorder,
            a_fieldset_collapsed: this.isCollapsedLocal
          }],
          "aria-describedby": this.ariaDescribedbyLocal
        }, [
          this.label || this.labelScreenReader ? c(Oe, {
            type: "text",
            alwaysTranslate: this.alwaysTranslate,
            tag: "legend",
            class: [
              "a_legend",
              {
                a_legend_invalid: this.isErrors
              },
              this.labelClass
            ],
            extra: this.extra,
            html: this.label,
            textScreenReader: this.labelScreenReader,
            textAfter: this.textAfterLabel
          }) : "",
          this.collapsible ? c(Oe, {
            "aria-controls": this.groupId,
            "aria-expanded": !this.isCollapsedLocal,
            alwaysTranslate: this.alwaysTranslate,
            class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
            iconLeft: this.iconCollapse,
            title: this.titleCollapse,
            textScreenReader: this.titleCollapse,
            type: "button",
            onClick: this.toggleCollapse
          }) : "",
          c("div", {
            id: this.groupId,
            class: [
              this.classColumns,
              "a_fieldset__content"
            ]
          }, [
            this.children.map((e, t) => {
              if (e.isRender !== !1) {
                const n = Ri.value[e.type];
                let r;
                ae(e.classColumn) ? r = this.classColumnDefault : e.classColumn && (r = e.classColumn);
                let a;
                e.isHide && (a = "display: none;");
                const l = this.componentTypesMapping()[e.type];
                return c("div", {
                  class: r,
                  style: a
                }, [
                  c(l, {
                    key: t,
                    alwaysTranslate: this.alwaysTranslate,
                    modelValue: n ? this.modelValue : de(this.modelValue, e.id),
                    modelDependencies: n ? this.modelValue : void 0,
                    errors: de(this.errorsAll, e.id),
                    errorsAll: n ? this.errorsAll : void 0,
                    idPrefix: this.idPrefix,
                    "onUpdate:modelValue": (o) => this.onUpdateModelLocal({ item: e, model: o }),
                    onUpdateData: ({ dataKeyByKeyId: o }) => this.onUpdateDataLocal({ item: e, dataKeyByKeyId: o }),
                    ...e,
                    disabled: this.disabled || e.disabled,
                    classColumn: void 0,
                    slotAppend: void 0,
                    ...this.attributesToExcludeFromRender
                  }, this.$slots),
                  e.slotAppend && this.$slots[e.slotAppend] ? this.$slots[e.slotAppend]({ item: e, itemIndex: t }) : ""
                ]);
              }
            }),
            this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
              id: this.htmlIdLocal,
              props: this.$props
            }) : ""
          ])
        ]),
        c(rn, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(nn, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, OS = {
  fieldset: Gq,
  group: RS,
  ...mr.containerComponents
};
function jq() {
  return {
    componentTypesMapping: () => ({
      ...Ru,
      ...OS,
      ...mr.components,
      ...mr.containerComponents
    })
  };
}
function zq(e) {
  const t = f(e, "filter");
  return {
    isContainer: _(() => !!Ri.value[t.value.type])
  };
}
function Kq(e) {
  const t = f(e, "filter");
  return {
    filterSpecificAttributes: _(() => {
      const r = {}, a = mS[t.value.type], l = yS[t.value.type];
      return a && Pe(t.value.inputWidth) && (r.inputWidth = "auto"), l && (r.inputWidth = "inherit", r.inputAttributes = {
        style: "min-width: 181px"
      }), r;
    })
  };
}
function Yq(e) {
  const t = f(e, "id");
  return {
    idPrefix: _(() => `${t.value}_`)
  };
}
function Zq(e, {
  isContainer: t = _(() => !1)
}) {
  const n = f(e, "filter"), r = f(e, "onUpdateModelFilters"), a = f(e, "unappliedModel");
  return {
    onUpdateModelFiltersLocal: (o) => {
      if (t.value)
        r.value({ model: o });
      else {
        const u = Se(a.value);
        u[n.value.id] = Se(o), r.value({ model: u });
      }
    }
  };
}
function Xq(e) {
  const t = f(e, "filter"), n = f(e, "updateDataKeyByIdFromFilter"), r = ["select", "multiselect", "radio", "checkbox", "group", "fieldset"], a = ({ dataKeyByKeyId: o, item: u }) => {
    let h = t.value.id;
    u && (h = u.id), n.value({
      filterId: h,
      dataKeyByKeyId: o
    });
  };
  return {
    emitForComponentsWithData: _(() => {
      const o = {};
      return r.indexOf(t.value.type) !== -1 && (o.onUpdateData = a), o;
    })
  };
}
const Jq = {
  name: "AFiltersHorizontalFilterUi",
  props: {
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filter: {
      type: Object,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    isLabelVisible: {
      type: Boolean,
      required: !0
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    unappliedModel: {
      type: Object,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = wt(e), {
      isContainer: n
    } = zq(e), {
      onUpdateModelFiltersLocal: r
    } = Zq(e, {
      isContainer: n
    }), {
      emitForComponentsWithData: a
    } = Xq(e), {
      idPrefix: l
    } = Yq(e), {
      componentTypesMapping: o
    } = jq(), {
      filterSpecificAttributes: u
    } = Kq(e);
    return {
      attributesToExcludeFromRender: t,
      componentTypesMapping: o,
      emitForComponentsWithData: a,
      filterSpecificAttributes: u,
      idPrefix: l,
      isContainer: n,
      onUpdateModelFiltersLocal: r
    };
  },
  render() {
    const e = this.componentTypesMapping()[this.filter.type];
    return c(e, {
      idPrefix: this.idPrefix,
      modelValue: this.isContainer ? this.unappliedModel : this.unappliedModel[this.filter.id],
      "onUpdate:modelValue": this.onUpdateModelFiltersLocal,
      excludeRenderAttributes: this.excludeRenderAttributes,
      ...this.filter,
      ...this.filterSpecificAttributes,
      label: this.isLabelVisible ? this.filter.label : void 0,
      ...this.emitForComponentsWithData,
      ...this.attributesToExcludeFromRender
    }, this.$slots);
  }
};
function Qq(e) {
  const t = f(e, "id");
  return {
    idFilterRight: _(() => `${t.value}_filter_right`)
  };
}
const e$ = {
  name: "AFilersRight",
  props: {
    appliedModel: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filters: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch"
  ],
  setup(e) {
    const {
      idFilterRight: t
    } = Qq(e);
    return {
      idFilterRight: t
    };
  },
  render() {
    return c("div", {
      id: this.idFilterRight,
      class: "a_filters_right"
    }, [
      c("form", {}, [
        this.filters.map((e) => c(Jq, {
          id: this.id,
          class: "a_filters_right__filter_ui",
          excludeRenderAttributes: this.excludeRenderAttributes,
          filter: e,
          isLabelVisible: !0,
          onUpdateModelFilters: this.onUpdateModelFilters,
          unappliedModel: this.appliedModel,
          updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter
        }, this.$slots))
      ])
    ]);
  }
};
function t$(e) {
  const t = f(e, "closeFilterValue"), n = f(e, "disabled"), r = f(e, "filter");
  return {
    closeCurrentFilterValue: ({ modelValue: l }) => {
      n.value || t.value({
        filter: r.value,
        modelArray: l.modelArray,
        keyId: l.keyId
      });
    }
  };
}
function n$(e, { emit: t }, {
  modelValuesForCurrentFilter: n = _(() => [])
}) {
  const r = f(e, "filter"), a = _(() => n.value.length > 0);
  return {
    isLeastOneFilterVisible: a,
    updateVisibleChildFilters: ({ destroy: o } = {}) => {
      t("updateVisibleChildFilters", {
        id: r.value.id,
        isVisible: o ? !1 : a.value
      });
    }
  };
}
function r$(e) {
  const t = f(e, "filter"), n = f(e, "id"), r = _(() => `eventATableFilterTopOnOpen_${n.value}`);
  return {
    goToFilter: ({ modelValue: l } = {}) => {
      let o = sl({
        id: t.value.id,
        idPrefix: `${n.value}_filter_top`,
        htmlId: t.value.htmlId
      });
      l.idSuffix && (o += l.idSuffix), t.value.main || Rt.$emit(r.value, o);
    }
  };
}
function i$({ filter: e, currentModel: t }) {
  return !(!e || e.hideFilterCenter || ae(t) || t === "" || Te(t) && !t.length);
}
function a$(e) {
  const t = f(e, "filter"), n = f(e, "model");
  return {
    hasCurrentFilter: _(() => i$({
      filter: t.value,
      currentModel: n.value
    }))
  };
}
function s$(e, { emit: t }, {
  hasCurrentFilter: n = _(() => !1)
}) {
  const r = f(e, "dataKeyByKeyIdPerFilter"), a = f(e, "filter"), l = _(() => n.value && J1.value[a.value.type] ? wn(r.value[a.value.id]) : !1);
  return {
    isFilterLoading: l,
    updateLoadingChildFilters: (u, h) => {
      u !== h && t("updateLoadingChildFilters", {
        id: a.value.id,
        isLoading: l.value
      });
    }
  };
}
function l$(e, {
  hasCurrentFilter: t = _(() => !1)
}) {
  const n = f(e, "filter"), r = _(() => t.value ? n.value.label : ""), a = _(() => {
    if (t.value)
      return n.value.labelScreenReader;
  }), l = _(() => a.value || r.value);
  return {
    filterLabel: r,
    filterLabelForTitle: l
  };
}
function o$(e, {
  filterLabel: t = _(() => ""),
  filterLabelForTitle: n = _(() => ""),
  hasCurrentFilter: r = _(() => !1)
}) {
  const a = f(e, "dataKeyByKeyIdPerFilter"), l = f(e, "filter"), o = f(e, "model"), {
    filterBoolean: u,
    filterDate: h
  } = sr(), A = _(() => {
    if (l.value)
      return a.value[l.value.id];
  }), E = _(() => {
    var m;
    return (m = o.value) != null && m.length ? Dt(o.value, (b) => A.value && A.value[b]) : [];
  }), p = ({ label: m, suffixTranslated: b }) => {
    const L = xt({
      placeholder: m
    });
    return b ? `${L} ${b}` : L;
  };
  return {
    modelValuesForCurrentFilter: _(() => {
      var m, b, L, v, I, R, y, C, w;
      if (!r.value)
        return [];
      if (l.value.type === "switch" || l.value.type === "oneCheckbox")
        return [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: u(o.value)
        }];
      if (l.value.type === "date")
        return [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: h(o.value)
        }];
      if (l.value.type === "select" || l.value.type === "radio") {
        const F = de(A.value, `${o.value}.${Lt}`);
        return F ? [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: F
        }] : [];
      }
      if (Dc.value[l.value.type] || l.value.type === "radio" && l.value.isModelArray) {
        if (E.value.length) {
          if (E.value.length === 1) {
            const F = (m = A.value) == null ? void 0 : m[E.value[0]];
            return [{
              filterLabelTranslated: p({ label: t.value }),
              filterLabelForTitleTranslated: p({ label: n.value }),
              label: F == null ? void 0 : F[Lt],
              item: F,
              modelArray: E.value
            }];
          }
          return [{
            filterLabelTranslated: p({ label: t.value }),
            filterLabelForTitleTranslated: p({ label: n.value }),
            label: xt({
              placeholder: "_A_FILTERS_SELECTED_{{count}}_",
              extra: {
                count: E.value.length,
                modelArray: E.value
              }
            }),
            modelArray: E.value,
            extra: {
              count: E.value.length,
              modelArray: E.value
            }
          }];
        }
        return [];
      }
      if (l.value.type === "dateRange") {
        const F = l.value.keyFrom || "from", P = l.value.keyUntil || "until", q = [];
        if (!ae((b = o.value) == null ? void 0 : b[F]) && ((L = o.value) == null ? void 0 : L[F]) !== "") {
          const N = xt({
            placeholder: l.value.labelFrom || "_A_DATEPICKER_RANGE_FROM_"
          });
          q.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: N
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: N
            }),
            label: h(o.value[F]),
            idSuffix: "_from",
            keyId: F
          });
        }
        if (!ae((v = o.value) == null ? void 0 : v[P]) && ((I = o.value) == null ? void 0 : I[P]) !== "") {
          const N = xt({
            placeholder: l.value.labelUntil || "_A_DATEPICKER_RANGE_UNTIL_"
          });
          q.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: N
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: N
            }),
            label: h(o.value[P]),
            idSuffix: "_until",
            keyId: P
          });
        }
        return q;
      }
      if (Zc.indexOf(l.value.type) !== -1) {
        const F = l.value.keyMax || "max", P = l.value.keyMin || "min", q = [];
        if (!ae((R = o.value) == null ? void 0 : R[P]) && ((y = o.value) == null ? void 0 : y[P]) !== "") {
          const N = xt({
            placeholder: l.value.labelMin || "_A_INPUT_NUMBER_RANGE_LABEL_MIN_"
          });
          q.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: N
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: N
            }),
            label: o.value[P],
            idSuffix: "_min",
            keyId: P
          });
        }
        if (!ae((C = o.value) == null ? void 0 : C[F]) && ((w = o.value) == null ? void 0 : w[F]) !== "") {
          const N = xt({
            placeholder: l.value.labelMax || "_A_INPUT_NUMBER_RANGE_LABEL_MAX_"
          });
          q.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: N
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: N
            }),
            label: o.value[F],
            idSuffix: "_max",
            keyId: F
          });
        }
        return q;
      }
      return [{
        label: o.value,
        filterLabelTranslated: p({ label: t.value }),
        filterLabelForTitleTranslated: p({ label: n.value })
      }];
    })
  };
}
const u$ = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pin-fill" viewBox="0 0 16 16">
  <path d="M4.146.146A.5.5 0 0 1 4.5 0h7a.5.5 0 0 1 .5.5c0 .68-.342 1.174-.646 1.479-.126.125-.25.224-.354.298v4.431l.078.048c.203.127.476.314.751.555C12.36 7.775 13 8.527 13 9.5a.5.5 0 0 1-.5.5h-4v4.5c0 .276-.224 1.5-.5 1.5s-.5-1.224-.5-1.5V10h-4a.5.5 0 0 1-.5-.5c0-.973.64-1.725 1.17-2.189A6 6 0 0 1 5 6.708V2.277a3 3 0 0 1-.354-.298C4.342 1.674 4 1.179 4 .5a.5.5 0 0 1 .146-.354"/>
</svg>`, _$ = {
  name: "AFilterCenterItem",
  props: {
    closeFilterValue: {
      type: Function,
      required: !0
    },
    dataKeyByKeyIdPerFilter: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    filter: {
      type: Object,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    model: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "updateVisibleChildFilters",
    "updateLoadingChildFilters"
  ],
  setup(e, t) {
    const {
      hasCurrentFilter: n
    } = a$(e), {
      isFilterLoading: r,
      updateLoadingChildFilters: a
    } = s$(e, t, {
      hasCurrentFilter: n
    }), {
      filterLabel: l,
      filterLabelForTitle: o
    } = l$(e, {
      hasCurrentFilter: n
    }), {
      modelValuesForCurrentFilter: u
    } = o$(e, {
      filterLabel: l,
      filterLabelForTitle: o,
      hasCurrentFilter: n
    }), {
      isLeastOneFilterVisible: h,
      updateVisibleChildFilters: A
    } = n$(e, t, {
      modelValuesForCurrentFilter: u
    }), {
      goToFilter: E
    } = r$(e), {
      closeCurrentFilterValue: p
    } = t$(e);
    return tt(h, () => {
      A();
    }, {
      immediate: !0
    }), tt(r, (T, m) => {
      a(T, m);
    }, {
      immediate: !0
    }), Ot(() => {
      A({
        destroy: !0
      });
    }), {
      closeCurrentFilterValue: p,
      filterLabel: l,
      goToFilter: E,
      hasCurrentFilter: n,
      isLeastOneFilterVisible: h,
      modelValuesForCurrentFilter: u
    };
  },
  render() {
    return this.hasCurrentFilter && [
      this.modelValuesForCurrentFilter.map((e) => c("div", {
        role: "group",
        class: "a_filters_center__item a_btn_group a_btn_group_small"
      }, [
        this.filter.hasNotClose && c(Oe, {
          class: "a_btn a_btn_secondary",
          ariaHidden: !0,
          tabindex: -1,
          iconLeft: u$,
          type: "text"
        }),
        c(Oe, {
          class: "a_btn a_btn_secondary",
          title: "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_",
          textScreenReader: "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_",
          extra: {
            filterLabel: e.filterLabelForTitleTranslated,
            filterValue: e.label
          },
          type: "button",
          onClick: () => this.goToFilter({ modelValue: e })
        }, () => [
          e.filterLabelTranslated ? c("strong", {
            class: "a_filters_center__item__label",
            ariaHidden: !0
          }, [
            c(pe, {
              tag: "span",
              html: e.filterLabelTranslated,
              textAfter: ":"
            })
          ]) : "",
          this.filter.slotName && this.$slots[this.filter.slotName] ? this.$slots[this.filter.slotName]({
            item: e.item,
            label: e.label,
            extra: e.extra,
            inFilterCenter: !0
          }) : c("span", {
            class: "a_filters_center__item__value"
          }, e.label)
        ]),
        this.filter.hasNotClose ? "" : c(Oe, {
          class: "a_btn a_btn_secondary",
          disabled: this.disabled,
          iconLeft: oi,
          title: "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_",
          textScreenReader: "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_",
          extra: {
            filterLabel: e.filterLabelForTitleTranslated,
            filterValue: e.label
          },
          type: "button",
          onClick: () => this.closeCurrentFilterValue({ modelValue: e })
        })
      ]))
    ];
  }
};
function d$() {
  const e = B({}), t = ({ id: r, isLoading: a }) => {
    e.value[r] = a;
  };
  return {
    isLeastOneChildFilterLoading: _(() => {
      let r = !1;
      return Y(e.value, (a) => {
        if (a)
          return r = !0, !1;
      }), r;
    }),
    updateLoadingChildFilters: t
  };
}
function c$(e) {
  const t = f(e, "filtersGroup"), n = B({}), r = ({ id: u, isVisible: h }) => {
    n.value[u] = h;
  }, a = _(() => {
    let u = !1;
    return Y(n.value, (h) => {
      if (h)
        return u = !0, !1;
    }), u;
  }), l = _(() => !!(t.value.alwaysVisible.length || t.value.filters.length)), o = _(() => a.value ? void 0 : "display: none;");
  return {
    hasFilters: l,
    styleHide: o,
    updateVisibleChildFilters: r
  };
}
const f$ = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-clockwise" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2z"/>
  <path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466"/>
</svg>`, h$ = {
  name: "AFilterCenter",
  props: {
    appliedModel: {
      type: Object,
      required: !0
    },
    closeAllFilters: {
      type: Function,
      required: !0
    },
    closeFilterValue: {
      type: Function,
      required: !0
    },
    dataKeyByKeyIdPerFilter: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    filtersGroup: {
      type: Object,
      required: !0,
      default: () => ({
        alwaysVisible: [],
        filters: []
      })
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    filtersVisibleAll: {
      type: Array,
      required: !0
    },
    id: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      hasFilters: t,
      styleHide: n,
      updateVisibleChildFilters: r
    } = c$(e), {
      isLeastOneChildFilterLoading: a,
      updateLoadingChildFilters: l
    } = d$();
    return {
      hasFilters: t,
      isLeastOneChildFilterLoading: a,
      styleHide: n,
      updateLoadingChildFilters: l,
      updateVisibleChildFilters: r
    };
  },
  render() {
    return this.hasFilters ? c("div", {
      class: "a_filters_center"
    }, [
      c("div", {
        class: "a_filters_center__item"
      }, [
        this.$slots.filtersHorizontal ? this.$slots.filtersHorizontal() : ""
      ]),
      this.filtersVisibleAll.map((e) => c(_$, {
        key: e.id,
        id: this.id,
        disabled: this.disabled,
        filter: e,
        closeFilterValue: this.closeFilterValue,
        dataKeyByKeyIdPerFilter: this.dataKeyByKeyIdPerFilter,
        model: this.appliedModel[e.id],
        onUpdateVisibleChildFilters: this.updateVisibleChildFilters,
        onUpdateLoadingChildFilters: this.updateLoadingChildFilters
      }, this.$slots)),
      this.isLeastOneChildFilterLoading ? c("div", {
        style: this.styleHide,
        class: "a_filters_center__item"
      }, [
        c(nl, {
          class: "a_spinner_small"
        })
      ]) : "",
      c("div", {
        class: "a_filters_center__item",
        style: this.styleHide
      }, [
        c(rt, {
          class: "a_btn a_btn_link a_btn_small",
          iconLeft: f$,
          text: "_A_FILTERS_DESELECT_ALL_",
          onClick: this.closeAllFilters
        })
      ])
    ]) : null;
  }
}, A$ = {
  name: "ARequired",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    text: {
      type: String,
      required: !1,
      default: "_A_REQUIRED_TEXT_"
    }
  },
  render() {
    return c(pe, {
      alwaysTranslate: this.alwaysTranslate,
      class: "a_required",
      html: this.text
    });
  }
};
function E$(e) {
  const t = f(e, "isHide");
  return {
    styleFormHide: _(() => t.value ? "display: none;" : "")
  };
}
function p$(e, { emit: t }) {
  const n = f(e, "modelValue"), r = _(() => n.value || {});
  return {
    modelValueLocal: r,
    onUpdateModelLocal: ({ item: l, model: o }) => {
      if (Ri.value[l.type])
        t("update:modelValue", o), t("change", { model: o });
      else {
        const u = Se(r.value), h = l.id;
        dc(u, h, Se(o)), t("update:modelValue", u), t("change", { model: u });
      }
    }
  };
}
function T$(e) {
  const t = f(e, "data"), n = f(e, "isRequired");
  return {
    isRequiredLocal: _(() => {
      if (n.value)
        return !0;
      let a = !1;
      return Y(t.value, (l) => {
        if (l.required)
          return a = !0, !1;
      }), a;
    })
  };
}
const Ou = {
  name: "AForm",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12 a_columns_gap_2"
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_12"
    },
    data: {
      type: Array,
      required: !0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRequired: {
      type: Boolean,
      required: !1
    },
    modelValue: {
      type: Object,
      required: !1,
      default: void 0
    },
    showErrors: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tag: {
      type: String,
      required: !1,
      default: "form"
    },
    textRequired: {
      type: String,
      required: !1,
      default: void 0
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue",
    "change"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = wt(e), {
      modelValueLocal: r,
      onUpdateModelLocal: a
    } = p$(e, t), {
      styleFormHide: l
    } = E$(e), {
      isRequiredLocal: o
    } = T$(e);
    return {
      attributesToExcludeFromRender: n,
      componentTypesMapping: () => ({
        ...Ru,
        ...OS,
        ...mr.components,
        ...mr.containerComponents
      }),
      isRequiredLocal: o,
      modelValueLocal: r,
      onUpdateModelLocal: a,
      styleFormHide: l
    };
  },
  render() {
    return this.isRender ? c(this.tag, {
      class: "a_form",
      style: this.styleFormHide
    }, [
      this.$slots.formPrepend ? this.$slots.formPrepend() : "",
      this.isRequiredLocal ? c(A$, {
        text: this.textRequired
      }) : "",
      this.$slots.formPrependAfterRequired ? this.$slots.formPrependAfterRequired() : "",
      this.showErrors ? c(GM, {
        alwaysTranslate: this.alwaysTranslate,
        errors: this.errors,
        closable: !1,
        optionsList: this.data,
        idPrefix: this.idPrefix,
        textErrorHeader: this.textErrorHeader
      }) : "",
      c("div", {
        class: this.classColumns
      }, [
        this.$slots.formDataPrepend ? this.$slots.formDataPrepend() : "",
        ...this.data.map((e, t) => {
          const n = Ri.value[e.type];
          let r;
          ae(e.classColumn) ? r = this.classColumnDefault : e.classColumn && (r = e.classColumn);
          const a = this.componentTypesMapping()[e.type];
          return c(a, {
            key: t,
            alwaysTranslate: this.alwaysTranslate,
            modelValue: n ? this.modelValueLocal : de(this.modelValueLocal, e.id),
            modelDependencies: n ? this.modelValueLocal : void 0,
            class: r,
            errors: this.errors[e.id],
            errorsAll: n ? this.errors : void 0,
            idPrefix: this.idPrefix,
            excludeRenderAttributes: this.excludeRenderAttributes,
            "onUpdate:modelValue": (l) => this.onUpdateModelLocal({ item: e, model: l }),
            ...e,
            classColumn: void 0,
            ...this.attributesToExcludeFromRender
          }, this.$slots);
        }),
        this.$slots.formDataAppend ? this.$slots.formDataAppend() : ""
      ]),
      this.$slots.formAppend ? this.$slots.formAppend() : ""
    ]) : null;
  }
}, Li = B({
  propsDefault: {
    align: "center",
    extra: void 0,
    size: 6,
    tag: "div",
    text: "_A_LOADING_LOADING_",
    textAlign: "right"
  }
}), koe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Li.value.propsDefault = {
      ...Li.value.propsDefault,
      ...t
    };
  }
}, CS = {
  name: "ALoading",
  inheritAttrs: !1,
  props: {
    align: {
      type: String,
      required: !1,
      default: () => Li.value.propsDefault.align,
      validator: (e) => ["left", "center", "right"].indexOf(e) !== -1
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: () => Li.value.propsDefault.extra
    },
    isLoading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => Li.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    spinnerClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    spinnerSafeHtml: {
      type: String,
      required: !1,
      default: () => Pn.value.propsDefault.safeHtml
    },
    spinnerTag: {
      type: String,
      required: !1,
      default: () => Pn.value.propsDefault.tag
    },
    tag: {
      type: String,
      required: !1,
      default: () => Li.value.propsDefault.tag
    },
    text: {
      type: String,
      required: !1,
      default: () => Li.value.propsDefault.text
    },
    textAlign: {
      type: String,
      required: !1,
      default: () => Li.value.propsDefault.textAlign,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    }
  },
  setup(e) {
    const {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    } = FT(e);
    return {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    };
  },
  render() {
    const e = this.textAlign === "left", t = c(pe, {
      alwaysTranslate: this.alwaysTranslate,
      tag: "span",
      class: [
        "a_cloak__text",
        e ? "a_cloak__text_left" : "a_cloak__text_right",
        this.classTextSize
      ],
      text: this.text,
      extra: this.extra
    });
    return [
      this.$slots.default && this.$slots.default(),
      this.isLoading && c(
        this.tag,
        {
          ...this.$attrs,
          role: "status",
          tabindex: -1,
          class: ["a_loading", this.classAlign]
        },
        [
          c("div", {
            class: ["a_cloak__box", this.classForBox]
          }, [
            e ? t : "",
            c(nl, {
              alwaysTranslate: this.alwaysTranslate,
              class: [
                "a_cloak__spinner",
                this.spinnerClass
              ],
              "aria-hidden": "true",
              safeHtml: this.spinnerSafeHtml,
              size: this.size,
              tag: this.spinnerTag
            }),
            e ? "" : t
          ])
        ]
      )
    ];
  }
};
function S$(e) {
  const t = f(e, "hideHeader"), n = f(e, "id");
  return {
    headerId: _(() => {
      if (!t.value)
        return `${n.value}_header`;
    })
  };
}
function NS(e) {
  const t = f(e, "bodyHtml"), n = f(e, "id");
  return {
    bodyHtmlId: _(() => {
      if (t.value)
        return `${n.value}_body_html`;
    })
  };
}
function m$(e) {
  const t = f(e, "close"), n = f(e, "isConfirm"), r = () => {
    n.value || t.value();
  };
  return {
    destroyEventBusCloseFromOutside: () => {
      Rt.$off("closeModal", r);
    },
    initEventBusCloseFromOutside: () => {
      Rt.$on("closeModal", r);
    }
  };
}
function b$(e) {
  const t = f(e, "disabled"), n = f(e, "loading");
  return {
    disabledLocal: _(() => t.value || n.value)
  };
}
function L$(e) {
  const t = f(e, "close"), n = f(e, "useEscape");
  return {
    pressEscape: (a) => {
      n.value && (t.value(), a.preventDefault(), a.stopPropagation());
    }
  };
}
function v$(e) {
  const t = f(e, "focusStartId"), n = f(e, "focusStartId"), r = B(void 0), a = B(void 0), l = () => {
    const A = document.getElementById(t.value);
    A && A.focus();
  }, o = () => {
    var E;
    const A = ((E = a.value) == null ? void 0 : E.querySelectorAll(os)) || [];
    A.length !== 0 && A[0].focus();
  };
  return {
    modalRef: r,
    modalWrapperRef: a,
    setFocusByShowModal: () => {
      setTimeout(() => {
        n.value || (t.value ? l() : o());
      });
    },
    trapFocus: (A) => {
      const E = a.value.querySelectorAll(os);
      if (E.length === 0) {
        A.preventDefault();
        return;
      }
      const p = E[0], T = E[E.length - 1];
      A.shiftKey ? document.activeElement === p && (T.focus(), A.preventDefault()) : document.activeElement === T && (p.focus(), A.preventDefault());
    }
  };
}
function I$(e) {
  const t = f(e, "selectorClose"), n = f(e, "selectorCloseIds"), r = _(() => {
    const o = [];
    return n.value && (lt(n.value) ? o.push(`#${n.value}`) : Te(n.value) && Y(n.value, (u) => {
      o.push(`#${u}`);
    })), t.value && (lt(t.value) ? o.push(t.value) : Te(t.value) && o.push(...t.value)), o;
  }), a = ({ selector: o }) => {
    const u = document.querySelector(o);
    return u ? (u.focus(), !0) : !1;
  };
  return {
    setFocusByDestroy: () => {
      if (!r.value.length)
        return;
      const o = Se(r.value);
      setTimeout(() => {
        Y(o, (u) => {
          if (a({ selector: u }))
            return !1;
        });
      }, 300);
    }
  };
}
function g$({
  removeListenerForKeydown: e = () => {
  },
  setFocusByDestroy: t = () => {
  }
}) {
  return {
    hideModal: () => {
      document.body.classList.remove("a_modal_open"), t(), e();
    }
  };
}
function y$({
  pressEscape: e = () => {
  },
  trapFocus: t = () => {
  }
}) {
  const n = (l) => {
    const o = l || window.$event;
    o.key === "Escape" || o.keyCode === X.escape ? e(l) : (o.key === "Tab" || o.keyCode === X.tab) && t(o);
  };
  return {
    setListenerForKeydown: () => {
      document.addEventListener("keydown", n);
    },
    removeListenerForKeydown: () => {
      document.removeEventListener("keydown", n);
    }
  };
}
function R$(e, {
  checkOpenedModals: t = () => {
  },
  setFocusByShowModal: n = () => {
  },
  setListenerForKeydown: r = () => {
  }
}) {
  const a = f(e, "isModalHidden");
  return {
    showModal: () => {
      a.value || (t(), document.body.classList.add("a_modal_open"), n(), r());
    }
  };
}
function O$(e) {
  const t = f(e, "size");
  return {
    sizeClass: _(() => {
      if (t.value)
        return `a_modal_${t.value}`;
    })
  };
}
function C$(e) {
  const t = f(e, "stop");
  return {
    clickWrapperStoppPropagationEventMap: _(() => t.value ? {
      onClick: (r) => r.stopPropagation()
    } : {})
  };
}
function N$(e) {
  const t = f(e, "backdropZIndex"), n = f(e, "zIndex"), r = B(0), a = _(() => {
    const u = {};
    return n.value ? u["--a_modal_zindex"] = n.value : r.value > 2 && (u["--a_modal_zindex"] = 1055 + r.value - 1), u;
  }), l = _(() => {
    const u = {};
    return t.value ? u["--a__backdrop_zindex"] = t.value : r.value > 2 && (u["--a__backdrop_zindex"] = 1050 + r.value - 1), u;
  });
  return {
    checkOpenedModals: () => {
      const u = document.querySelectorAll(".a_backdrop");
      r.value = (u == null ? void 0 : u.length) || 0;
    },
    countOpenedModals: r,
    stylesBackdrop: l,
    stylesZIndexModal: a
  };
}
const ye = B({
  propsDefault: {
    closeButtonClass: "a_btn a_btn_secondary",
    closeButtonText: "_A_MODAL_BTN_CANCEL_",
    closeButtonTextScreenReaderFooter: "_A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_",
    closeButtonTextScreenReaderHeader: "_A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_",
    headerTag: "h2",
    idPrefix: void 0,
    isCloseButtonHide: !1,
    isDataFormHide: !1,
    isDataFormRender: !0,
    isFooterSticky: !1,
    isRequired: !1,
    isSaveButtonHide: !1,
    modalClass: void 0,
    modalStyle: void 0,
    saveButtonClass: "a_btn a_btn_primary",
    saveButtonText: "_A_MODAL_BTN_SAVE_",
    saveButtonTextScreenReader: "_A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_",
    selectorClose: void 0,
    selectorCloseIds: void 0,
    size: void 0,
    textRequired: void 0,
    useEscape: !0
  }
}), Hoe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    ye.value.propsDefault = {
      ...ye.value.propsDefault,
      ...t
    };
  }
}, Cu = {
  name: "AModal",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    bodyHtml: {
      type: String,
      required: !1,
      default: ""
    },
    bodyHtmlClass: {
      type: [String, Array, Object],
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ye.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideFooter: {
      type: Boolean,
      required: !1
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: () => ot("a_modal_")
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ye.value.propsDefault.isCloseButtonHide
    },
    isConfirm: {
      type: Boolean,
      required: !1
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => ye.value.propsDefault.isFooterSticky
    },
    isModalHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ye.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => ye.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => ye.value.propsDefault.modalStyle
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ye.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => ye.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => ye.value.propsDefault.selectorCloseIds
    },
    showCloseButtonHeader: {
      type: Boolean,
      required: !1,
      default: !0
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => ye.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => ye.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = f(e, "isModalHidden"), {
      checkOpenedModals: n,
      stylesBackdrop: r,
      stylesZIndexModal: a
    } = N$(e), {
      bodyHtmlId: l
    } = NS(e), {
      destroyEventBusCloseFromOutside: o,
      initEventBusCloseFromOutside: u
    } = m$(e), {
      headerId: h
    } = S$(e), {
      sizeClass: A
    } = O$(e), {
      disabledLocal: E
    } = b$(e), {
      modalRef: p,
      modalWrapperRef: T,
      setFocusByShowModal: m,
      trapFocus: b
    } = v$(e), {
      setFocusByDestroy: L
    } = I$(e), {
      pressEscape: v
    } = L$(e), {
      setListenerForKeydown: I,
      removeListenerForKeydown: R
    } = y$({
      pressEscape: v,
      trapFocus: b
    }), {
      showModal: y
    } = R$(e, {
      checkOpenedModals: n,
      setFocusByShowModal: m,
      setListenerForKeydown: I
    }), {
      hideModal: C
    } = g$({
      removeListenerForKeydown: R,
      setFocusByDestroy: L
    }), {
      clickWrapperStoppPropagationEventMap: w
    } = C$(e);
    return tt(t, () => {
      t.value ? C() : y();
    }), u(), kr(() => {
      y();
    }), Ot(() => {
      o();
    }), tp(() => {
      C();
    }), {
      bodyHtmlId: l,
      clickWrapperStoppPropagationEventMap: w,
      disabledLocal: E,
      headerId: h,
      modalRef: p,
      modalWrapperRef: T,
      sizeClass: A,
      stylesBackdrop: r,
      stylesZIndexModal: a
    };
  },
  render() {
    const e = this.hideFooter ? "" : c("div", {
      ref: "modal_footer",
      class: [
        "a_modal_footer",
        {
          a_modal_footer_sticky: this.isFooterSticky
        }
      ]
    }, [
      c(CS, {
        alwaysTranslate: this.alwaysTranslate,
        isLoading: this.loading
      }, () => [
        c("div", {
          class: "a_modal_footer_actions"
        }, [
          this.$slots.modalFooterPrepend && this.$slots.modalFooterPrepend(),
          !this.isSaveButtonHide && this.save && c(Oe, {
            id: this.saveButtonId,
            alwaysTranslate: this.alwaysTranslate,
            class: this.saveButtonClass,
            disabled: this.disabledLocal || this.disabledSave,
            extra: this.extra,
            html: this.saveButtonText,
            textAriaHidden: !0,
            textScreenReader: this.saveButtonTextScreenReader,
            type: "button",
            ...this.saveButtonAttributes,
            onClick: this.save
          }),
          !this.isCloseButtonHide && c(Oe, {
            id: this.closeButtonId,
            alwaysTranslate: this.alwaysTranslate,
            class: this.closeButtonClass,
            disabled: this.disabledLocal,
            extra: this.extra,
            html: this.closeButtonText,
            textAriaHidden: !0,
            textScreenReader: this.closeButtonTextScreenReaderFooter,
            type: "button",
            ...this.closeButtonAttributes,
            onClick: () => this.close(!0)
          }),
          this.$slots.modalFooterAppend && this.$slots.modalFooterAppend()
        ])
      ])
    ]);
    return c(ti, {
      to: "body"
    }, [
      c("div", {
        ref: "modalWrapperRef",
        ...this.clickWrapperStoppPropagationEventMap
      }, [
        c("div", {
          ref: "modalRef",
          id: this.id,
          class: ["a_modal", this.modalClass, {
            a_modal_confirm: this.isConfirm,
            a_modal_show: !this.isModalHidden
          }],
          role: "dialog",
          ariaModal: !0,
          "aria-labelledby": this.headerId,
          "aria-describedby": this.bodyHtmlId,
          style: [
            this.modalStyle,
            this.stylesZIndexModal
          ],
          ...this.$attrs
        }, [
          c("div", {
            class: ["a_modal_dialog a_modal_dialog_scrollable", this.sizeClass]
          }, [
            c("div", {
              class: [
                "a_modal_content",
                {
                  a_modal_content_with_footer_sticky: this.isFooterSticky
                }
              ]
            }, [
              this.hideHeader ? "" : c("div", {
                ref: "modal_header",
                class: "a_modal_header"
              }, [
                c("div", {
                  id: this.headerId
                }, [
                  this.$slots.modalHeader ? this.$slots.modalHeader() : "",
                  this.headerText ? c(this.headerTag, {
                    class: "a_modal_title"
                  }, [
                    c(pe, {
                      alwaysTranslate: this.alwaysTranslate,
                      tag: "span",
                      html: this.headerText,
                      extra: this.extra
                    })
                  ]) : ""
                ]),
                this.showCloseButtonHeader ? c(Oe, {
                  alwaysTranslate: this.alwaysTranslate,
                  class: "a_btn_close",
                  disabled: this.disabledLocal,
                  textScreenReader: this.closeButtonTextScreenReaderHeader,
                  title: this.closeButtonTextScreenReaderHeader,
                  type: "button",
                  onClick: () => this.close(!0)
                }) : ""
              ]),
              c("div", {
                ref: "modal_body",
                class: "a_modal_body"
              }, [
                c("div", {
                  ref: "modal_body",
                  class: "a_modal_body__content"
                }, [
                  this.bodyHtml && c(pe, {
                    id: this.bodyHtmlId,
                    alwaysTranslate: this.alwaysTranslate,
                    class: this.bodyHtmlClass,
                    html: this.bodyHtml,
                    extra: this.extra
                  }),
                  this.$slots.modalBody && this.$slots.modalBody()
                ]),
                this.isFooterSticky ? e : ""
              ]),
              this.isFooterSticky ? "" : e
            ])
          ])
        ])
      ]),
      !this.isModalHidden && c("div", {
        class: [
          "a_backdrop a_backdrop_fade a_backdrop_show",
          {
            a_backdrop_confirm: this.isConfirm
          }
        ],
        style: this.stylesBackdrop
      })
    ]);
  }
};
function D$(e) {
  const t = f(e, "dataForm");
  return {
    hasDataForm: _(() => t.value.length > 0)
  };
}
function B$({ emit: e }) {
  return {
    updateModelLocal: (n) => {
      e("update:modelValue", n);
    }
  };
}
const w$ = {
  name: "AModalForm",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    bodyHtml: {
      type: String,
      required: !1,
      default: ""
    },
    bodyHtmlClass: {
      type: [String, Array, Object],
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ye.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    dataForm: {
      type: Array,
      required: !1,
      default: () => []
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideFooter: {
      type: Boolean,
      required: !1
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: () => ot("a_modal_form_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.idPrefix
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ye.value.propsDefault.isCloseButtonHide
    },
    isConfirm: {
      type: Boolean,
      required: !1
    },
    isDataFormHide: {
      type: Boolean,
      required: !1,
      default: () => ye.value.propsDefault.isDataFormHide
    },
    isDataFormRender: {
      type: Boolean,
      required: !1,
      default: () => ye.value.propsDefault.isDataFormRender
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => ye.value.propsDefault.isFooterSticky
    },
    isModalHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isRequired: {
      type: Boolean,
      required: !1,
      default: ye.value.propsDefault.isRequired
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ye.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => ye.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => ye.value.propsDefault.modalStyle
    },
    modelValue: {
      type: Object,
      required: !1,
      default: void 0
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ye.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => ye.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => ye.value.propsDefault.selectorCloseIds
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => ye.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: void 0
    },
    textRequired: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.textRequired
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => ye.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      bodyHtmlId: n
    } = NS(e), {
      hasDataForm: r
    } = D$(e), {
      updateModelLocal: a
    } = B$(t);
    return {
      bodyHtmlId: n,
      hasDataForm: r,
      updateModelLocal: a
    };
  },
  render() {
    return c(Cu, {
      alwaysTranslate: this.alwaysTranslate,
      backdropZIndex: this.backdropZIndex,
      close: this.close,
      closeButtonClass: this.closeButtonClass,
      closeButtonId: this.closeButtonId,
      closeButtonText: this.closeButtonText,
      closeButtonTextScreenReaderFooter: this.closeButtonTextScreenReaderFooter,
      closeButtonTextScreenReaderHeader: this.closeButtonTextScreenReaderHeader,
      disabled: this.disabled,
      disabledSave: this.disabledSave,
      extra: this.extra,
      focusStartId: this.focusStartId,
      headerTag: this.headerTag,
      headerText: this.headerText,
      hideFooter: this.hideFooter,
      hideHeader: this.hideHeader,
      id: this.id,
      isCloseButtonHide: this.isCloseButtonHide,
      isConfirm: this.isConfirm,
      isFooterSticky: this.isFooterSticky,
      isModalHidden: this.isModalHidden,
      isSaveButtonHide: this.isSaveButtonHide,
      loading: this.loading,
      modalClass: this.modalClass,
      modalStyle: this.modalStyle,
      save: this.save,
      saveButtonClass: this.saveButtonClass,
      saveButtonId: this.saveButtonId,
      saveButtonText: this.saveButtonText,
      saveButtonTextScreenReader: this.saveButtonTextScreenReader,
      selectorClose: this.selectorClose,
      selectorCloseIds: this.selectorCloseIds,
      size: this.size,
      stop: this.stop,
      useEscape: this.useEscape,
      useFocusOnStart: this.useFocusOnStart,
      zIndex: this.zIndex,
      "aria-describedby": this.bodyHtmlId
    }, {
      ...this.$slots || {},
      modalBody: () => [
        this.$slots.modalBodyPrepend && this.$slots.modalBodyPrepend(),
        this.bodyHtml && c(pe, {
          id: this.bodyHtmlId,
          alwaysTranslate: this.alwaysTranslate,
          class: this.bodyHtmlClass,
          html: this.bodyHtml,
          extra: this.extra
        }),
        this.hasDataForm && c(Ou, {
          alwaysTranslate: this.alwaysTranslate,
          modelValue: this.modelValue,
          data: this.dataForm,
          errors: this.errors,
          idPrefix: this.idPrefix,
          isRequired: this.isRequired,
          textRequired: this.textRequired,
          textErrorHeader: this.textErrorHeader,
          isHide: this.isDataFormHide,
          isRender: this.isDataFormRender,
          "onUpdate:modelValue": this.updateModelLocal
        }, this.$slots),
        this.$slots.modalBodyAppend && this.$slots.modalBodyAppend()
      ]
    });
  }
};
function P$(e, {
  model: t = B({})
}) {
  const n = f(e, "filtersSaved"), r = _(() => {
    const u = {};
    return Y(n.value, (h) => {
      u[h.label] = !0;
    }), u;
  }), a = _(() => r.value[t.value.name]), l = _(() => {
    if (a.value)
      return "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_";
  });
  return {
    dataForm: _(() => [
      {
        id: "name",
        label: "_A_FILTERS_SAVE_LABEL_NAME_",
        type: "text",
        required: !0,
        extra: {
          name: t.value.name || ""
        },
        helpText: l.value
      }
    ]),
    isUpdate: a
  };
}
function x$(e) {
  const t = f(e, "isModelFilterSavedNew"), n = f(e, "modelFiltersSaved"), r = B({});
  return {
    initModel: () => {
      n.value && !t.value && (r.value = {
        name: n.value
      });
    },
    model: r,
    updateModel: (o) => {
      r.value = o;
    }
  };
}
let DS = 5e3;
const Zo = B({}), F$ = _(() => oc(Zo.value));
let UE = 0;
function Nu() {
  return {
    addNotification: q$,
    removeNotification: BS,
    notifications: F$,
    setNotificationTimeout: M$
  };
}
function M$(e) {
  DS = e;
}
function q$({ text: e, type: t = "success", timeout: n, extra: r, useValuesFromObject: a = !0 }) {
  const l = ae(n) ? DS : n, o = UE, u = t === "error" ? "danger" : t;
  let h = e;
  nt(e) && a && (h = yP(e)), Zo.value[o] = {
    text: h,
    type: u,
    index: o,
    extra: r
  }, UE++, l && setTimeout(() => {
    BS(o);
  }, l);
}
function BS(e) {
  Zo.value[e] && delete Zo.value[e];
}
function $$(e, { emit: t }, {
  isUpdate: n = _(() => !1),
  model: r = B({})
}) {
  const a = f(e, "changeModelFiltersSaved"), l = f(e, "updateFiltersSaved"), o = B(void 0), {
    addNotification: u
  } = Nu(), h = _(() => !r.value.name), A = () => {
    t("close");
  };
  return {
    close: A,
    disabledBtnSave: h,
    loading: o,
    save: async () => {
      o.value = !0;
      const p = n.value;
      try {
        await l.value({
          action: p ? "update" : "create",
          label: r.value.name
        });
      } catch {
        u({
          text: "_A_FILTERS_SAVE_MSG_ERROR_",
          type: "danger"
        }), o.value = !1;
        return;
      }
      u({
        text: p ? "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_" : "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
        extra: {
          name: r.value.name
        }
      }), a.value({ model: r.value.name, isCreateOrEdit: !0 }), A(), o.value = !1;
    }
  };
}
const k$ = {
  name: "AFiltersSaveModal",
  props: {
    changeModelFiltersSaved: {
      type: Function,
      required: !0
    },
    filtersSaved: {
      type: Array,
      required: !0
    },
    isModelFilterSavedNew: {
      type: Boolean,
      required: !0
    },
    modelFiltersSaved: {
      type: String,
      required: !1,
      default: void 0
    },
    selectorCloseIds: {
      type: String,
      required: !0
    },
    updateFiltersSaved: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      initModel: n,
      model: r,
      updateModel: a
    } = x$(e), {
      dataForm: l,
      isUpdate: o
    } = P$(e, {
      model: r
    }), {
      close: u,
      disabledBtnSave: h,
      loading: A,
      save: E
    } = $$(e, t, {
      isUpdate: o,
      model: r
    });
    return n(), {
      close: u,
      dataForm: l,
      disabledBtnSave: h,
      initModel: n,
      loading: A,
      model: r,
      save: E,
      updateModel: a
    };
  },
  render() {
    return c(w$, {
      close: this.close,
      dataForm: this.dataForm,
      disabledSave: this.disabledBtnSave,
      headerText: "_A_FILTERS_SAVE_MODAL_HEADER_",
      modelValue: this.model,
      idPrefix: "modal_filter_top_",
      loading: this.loading,
      selectorCloseIds: this.selectorCloseIds,
      size: "large",
      save: this.save,
      stop: !0,
      zIndex: 1901,
      backdropZIndex: 1900,
      "onUpdate:modelValue": this.updateModel
    }, {
      modalBodyPrepend: () => [
        c(gc, {
          type: "info",
          isVisible: !0,
          safeHtml: "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_"
        })
      ]
    });
  }
};
function H$(e) {
  const t = f(e, "filtersGroup"), n = B(void 0), r = _(() => !!(t.value.alwaysVisible.length || t.value.filters.length));
  return {
    closeDropdown: () => {
      var o;
      (o = n.value) == null || o.onClose({ trigger: "click" });
    },
    dropdownRef: n,
    isDropdownVisible: r,
    openDropdown: (o) => {
      var u;
      (u = n.value) == null || u.onOpen({ trigger: "click", selectorToFocus: o });
    }
  };
}
function U$(e, {
  openDropdown: t = () => {
  }
}) {
  const n = f(e, "id");
  let r;
  return {
    destroyEventBus: () => {
      Rt.$off(r, t);
    },
    initEventBus: () => {
      Rt.$on(r, t);
    },
    initEventName: () => {
      r = `eventATableFilterTopOnOpen_${n.value}`;
    }
  };
}
function W$(e, { emit: t }) {
  const n = f(e, "filtersGroup"), r = f(e, "filtersVisible"), a = ({ isAdd: E, filterId: p, filter: T }) => {
    t("toggleFiltersVisible", { isAdd: E, filterId: p, filter: T });
  }, l = ({ model: E }) => {
    a({ isAdd: !0, filterId: E });
  }, o = ({ filter: E }) => {
    a({ isAdd: !1, filterId: E.id, filter: E });
  }, u = _(() => !!(n.value.filters && n.value.filters.length)), h = _(() => {
    const E = {};
    return Y(r.value, (p) => {
      E[p.id] = !0;
    }), E;
  }), A = _(() => u.value ? Dt(n.value.filters, (E) => !h.value[E.id]) : []);
  return {
    addFiltersVisible: l,
    deleteFiltersVisible: o,
    filtersHidden: A,
    hasFiltersHiddenDefault: u
  };
}
function V$(e, {
  openDropdown: t = () => ({})
}) {
  const n = f(e, "filtersSaved"), r = f(e, "id"), a = f(e, "onUpdateModelFilters"), l = "_A_FILTERS_HOR_FILTER_NEW_", o = B(void 0), u = B(void 0), h = B(void 0), A = _(() => `${r.value}btn_save_`), E = _(() => u.value === l), p = _(() => {
    const v = [{
      label: l
    }];
    return Y(Se(n.value), (I) => {
      I.group = "_A_FILTERS_FILTER_SAVED_GROUP_MY_", v.push(I);
    }), v;
  });
  return {
    buttonSaveComponentId: A,
    changeModelFiltersSaved: ({ model: v, item: I, isDelete: R, isCreateOrEdit: y }) => {
      if (y) {
        u.value = v;
        return;
      }
      if ((I == null ? void 0 : I.label) === l || R) {
        a.value({
          model: {},
          isUpdateFiltersVisible: !0
        }), u.value = l;
        return;
      }
      v ? (u.value = v, I && (a.value({
        model: I.data || {},
        isUpdateFiltersVisible: !0
      }), t())) : I && (a.value({
        model: I.data || {},
        isUpdateFiltersVisible: !0
      }), t());
    },
    closeModalSave: () => {
      o.value = !1;
    },
    filtersSavedLocal: p,
    initModelFiltersSaved: () => {
      u.value = l;
    },
    isModalSaveVisible: o,
    isModelFilterSavedNew: E,
    modelFiltersSaved: u,
    openModalSave: () => {
      h.value = A.value, o.value = !0;
    },
    selectorCloseIds: h
  };
}
const ld = B(!0), Ws = B({});
function Xc() {
  const e = (r = {}) => {
    Y(r, (a, l) => {
      Ws.value[l] = a;
    });
  };
  return {
    changeConfirmOptions: e,
    closeConfirm: (r) => {
      r && qe(Ws.value.close) && Ws.value.close(), ld.value = !0, setTimeout(() => {
        Ws.value = {};
      });
    },
    confirmOptions: Ws,
    isModalHidden: ld,
    openConfirm: (r = {}) => {
      e(r), ld.value = !1;
    }
  };
}
function G$(e, {
  changeModelFiltersSaved: t = () => {
  },
  idFilterTop: n = _(() => ""),
  isModelFilterSavedNew: r = _(() => !1),
  modelFiltersSaved: a = B(void 0)
}) {
  const l = f(e, "id"), o = f(e, "updateFiltersSaved"), {
    changeConfirmOptions: u,
    closeConfirm: h,
    isModalHidden: A,
    openConfirm: E
  } = Xc(), {
    addNotification: p
  } = Nu(), T = _(() => `${l.value}btn_save`), m = _(() => r.value ? "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_" : {
    mobile: "_A_FILTERS_DELETE_FILTER_SAVED_BTN_"
  }), b = _(() => r.value ? "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_" : "_A_FILTERS_DELETE_FILTER_SAVED_BTN_"), L = async () => {
    u({
      loading: !0
    });
    try {
      await o.value({
        action: "delete",
        label: a.value
      });
    } catch {
      p({
        text: "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
        type: "danger",
        extra: {
          name: a.value
        }
      }), u({
        loading: !1
      });
      return;
    }
    p({
      text: "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
      extra: {
        name: a.value
      }
    }), u({
      loading: !1
    }), h(), t({ model: void 0, isDelete: !0 });
  };
  return {
    buttonDeleteId: T,
    isConfirmHidden: A,
    openDeleteConfirm: () => {
      E({
        headerText: "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
        bodyHtml: "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
        extra: {
          name: a.value
        },
        save: L,
        selectorCloseIds: [T.value, n.value],
        saveButtonText: "_A_FILTERS_DELETE_FILTER_BTN_DELETE_",
        stop: !0,
        zIndex: 1901,
        backdropZIndex: 1900
      });
    },
    textScreenreaderButtonDeleteFiltersSaved: b,
    titleButtonDeleteFiltersSaved: m
  };
}
function j$(e) {
  const t = f(e, "filtersGroup"), n = f(e, "filtersVisible"), r = f(e, "updateDataKeyByIdFromFilter"), a = "a_column a_column_12_touch a_column_3_fullhd a_column_3_widescreen a_column_3_desktop", l = "a_columns a_columns_count_12 a_columns_gap_x_2 a_columns_gap_y_2 a_columns_gap_y_1_touch", o = "a_filters__form_element a_column a_column_12_touch a_column_9_fullhd a_column_9_widescreen a_column_9_desktop", u = ["select", "multiselect", "radio", "checkbox", "group", "fieldset"], h = ({ dataKeyByKeyId: E, item: p, filter: T }) => {
    let m = T.id;
    p && (m = p.id), r.value({
      filterId: m,
      dataKeyByKeyId: E
    });
  };
  return {
    dataForForm: _(() => {
      const E = [];
      return Y(t.value.alwaysVisible, (p) => {
        const T = Se(p);
        T.labelClass = a, T.classColumn = o, u.indexOf(p.type) !== -1 && (T.onUpdateData = ({ dataKeyByKeyId: m, item: b }) => h({ dataKeyByKeyId: m, item: b, filter: p })), E.push({
          type: "group",
          id: `group_${p.id}`,
          classColumns: l,
          children: [
            T
          ]
        });
      }), Y(n.value, (p) => {
        const T = Se(p);
        T.labelClass = a, T.classColumn = `${o}  a_d_flex a_align_items_center`, T.slotAppend = "groupAppend", T.class = "a_width_100", u.indexOf(p.type) !== -1 && (T.onUpdateData = ({ dataKeyByKeyId: m, item: b }) => h({ dataKeyByKeyId: m, item: b, filter: p })), E.push({
          type: "group",
          id: `group_${p.id}`,
          classColumns: l,
          children: [
            T
          ]
        });
      }), E;
    })
  };
}
function z$(e) {
  const t = f(e, "id");
  return {
    idFilterTop: _(() => `${t.value}_filter_top`)
  };
}
function K$(e, { emit: t }, {
  closeDropdown: n = () => {
  }
}) {
  const r = f(e, "disabled");
  return {
    onSearch: () => {
      r.value || (n(), t("startSearch"));
    }
  };
}
const Y$ = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-filter" viewBox="0 0 16 16">
  <path d="M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5"/>
</svg>`, Z$ = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-floppy2-fill" viewBox="0 0 16 16">
  <path d="M12 2h-2v3h2z"/>
  <path d="M1.5 0A1.5 1.5 0 0 0 0 1.5v13A1.5 1.5 0 0 0 1.5 16h13a1.5 1.5 0 0 0 1.5-1.5V2.914a1.5 1.5 0 0 0-.44-1.06L14.147.439A1.5 1.5 0 0 0 13.086 0zM4 6a1 1 0 0 1-1-1V1h10v4a1 1 0 0 1-1 1zM3 9h10a1 1 0 0 1 1 1v5H2v-5a1 1 0 0 1 1-1"/>
</svg>`, wS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2"/>
</svg>`, PS = `<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 1024 1024">
    <path d="M761.37 637.327l256.642 256.642q5.988 6.844 5.988 15.399t-5.988 15.399l-93.246 93.246q-6.844 5.988-15.399 5.988t-15.399-5.988l-256.642-256.642q-101.802 66.727-223.278 66.727-171.095 0-292.572-121.477t-121.477-292.572 121.477-292.572 292.572-121.477 292.572 121.477 121.477 292.572q0 121.477-66.727 223.278zM130.887 414.049q0 116.344 82.981 199.325t200.181 82.981 199.753-82.553 82.553-199.753-82.553-199.753-199.753-82.553-200.181 82.981-82.981 199.325z"></path>
</svg>
`, X$ = {
  name: "AFiltersHorizontal",
  props: {
    canSave: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersGroup: {
      type: Object,
      required: !0,
      default: () => ({
        alwaysVisible: [],
        filters: []
      })
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    filtersSaved: {
      type: Array,
      required: !0
    },
    filtersVisible: {
      type: Array,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    mainModel: {
      type: Object,
      required: !1
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    unappliedModel: {
      type: Object,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    },
    updateFiltersSaved: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch",
    "toggleFiltersVisible"
  ],
  setup(e, t) {
    const {
      dataForForm: n
    } = j$(e), {
      closeDropdown: r,
      dropdownRef: a,
      isDropdownVisible: l,
      openDropdown: o
    } = H$(e), {
      idFilterTop: u
    } = z$(e), {
      onSearch: h
    } = K$(e, t, {
      closeDropdown: r
    }), {
      destroyEventBus: A,
      initEventBus: E,
      initEventName: p
    } = U$(e, {
      openDropdown: o
    }), {
      addFiltersVisible: T,
      deleteFiltersVisible: m,
      filtersHidden: b,
      hasFiltersHiddenDefault: L
    } = W$(e, t), {
      buttonSaveComponentId: v,
      changeModelFiltersSaved: I,
      closeModalSave: R,
      filtersSavedLocal: y,
      initModelFiltersSaved: C,
      isModalSaveVisible: w,
      isModelFilterSavedNew: F,
      modelFiltersSaved: P,
      openModalSave: q,
      selectorCloseIds: N
    } = V$(e, {
      openDropdown: o
    }), {
      buttonDeleteId: U,
      isConfirmHidden: V,
      openDeleteConfirm: j,
      textScreenreaderButtonDeleteFiltersSaved: ne,
      titleButtonDeleteFiltersSaved: Z
    } = G$(e, {
      changeModelFiltersSaved: I,
      idFilterTop: u,
      isModelFilterSavedNew: F,
      modelFiltersSaved: P
    });
    return p(), C(), E(), Ot(() => {
      A();
    }), {
      addFiltersVisible: T,
      buttonDeleteId: U,
      buttonSaveComponentId: v,
      changeModelFiltersSaved: I,
      closeDropdown: r,
      closeModalSave: R,
      dataForForm: n,
      deleteFiltersVisible: m,
      dropdownRef: a,
      filtersHidden: b,
      filtersSavedLocal: y,
      hasFiltersHiddenDefault: L,
      idFilterTop: u,
      initModelFiltersSaved: C,
      isConfirmHidden: V,
      isDropdownVisible: l,
      isModalSaveVisible: w,
      isModelFilterSavedNew: F,
      modelFiltersSaved: P,
      onSearch: h,
      openDeleteConfirm: j,
      openModalSave: q,
      selectorCloseIds: N,
      textScreenreaderButtonDeleteFiltersSaved: ne,
      titleButtonDeleteFiltersSaved: Z
    };
  },
  render() {
    return this.isDropdownVisible ? [
      c(ei, {
        ref: "dropdownRef",
        buttonIconLeft: Y$,
        buttonText: "Filter",
        buttonClass: "a_btn a_btn_primary a_btn_small a_filter_horizontal__btn_dropdown",
        dropdownTag: "div",
        dropdownClass: "a_filter_horizontal__wrapper",
        dropdownRenderDefault: !0,
        isCloseByClickInside: !1,
        hasCaret: !1,
        inBody: !0,
        lockArrowsNavigation: !1,
        lockTabNavigation: !1,
        useEscape: !this.isModalSaveVisible && this.isConfirmHidden
      }, {
        ...this.$slots,
        dropdown: () => c("div", {
          class: "a_filter_horizontal"
        }, [
          c("div", {
            class: "a_filter_horizontal__header__wrapper"
          }, [
            c("div", {
              class: "a_filter_horizontal__header"
            }, [
              c("div", {
                class: "a_filter_horizontal__header__texts"
              }, [
                c(pe, {
                  class: "a_filter_horizontal__header__texts__filter",
                  tag: "span",
                  text: "_A_FILTERS_HOR_FILTER_HEADER_"
                }),
                this.isModelFilterSavedNew ? c(pe, {
                  class: "a_filter_horizontal__header__texts__new",
                  tag: "em",
                  text: this.modelFiltersSaved
                }) : c("span", {}, this.modelFiltersSaved)
              ]),
              this.canSave ? c(ol, {
                modelValue: this.modelFiltersSaved,
                change: this.changeModelFiltersSaved,
                class: "a_filters_top__save_select",
                data: this.filtersSavedLocal,
                deselectable: !1,
                keyId: "label",
                keyLabel: "label",
                keyGroup: "group",
                label: "_A_FILTERS_SAVE_SELECT_",
                menuWidthType: "by_content",
                search: !0,
                translateData: !0,
                type: "select"
              }) : ""
            ])
          ]),
          c("div", {
            class: "a_filter_horizontal__body__wrapper"
          }, [
            c("div", {
              class: "a_filter_horizontal__body"
            }, [
              c(Ou, {
                idPrefix: this.idFilterTop,
                class: "a_filter_horizontal__body__form",
                classColumnDefault: "",
                classColumns: "",
                data: this.dataForForm,
                excludeRenderAttributes: this.excludeRenderAttributes,
                modelValue: this.unappliedModel,
                showErrors: !1,
                onChange: this.onUpdateModelFilters
              }, {
                ...this.$slots,
                groupAppend: ({ item: e }) => c(Oe, {
                  type: "button",
                  class: "a_btn a_btn_primary a_ml_2",
                  title: "_A_FILTERS_TOP_CLOSE_",
                  textScreenReader: "_A_FILTERS_TOP_CLOSE_",
                  iconLeft: oi,
                  stop: !0,
                  onClick: () => this.deleteFiltersVisible({ filter: e })
                }),
                formDataAppend: () => c("div", {
                  class: "a_filter_horizontal__add_filter__wrapper"
                }, [
                  c(ol, {
                    buttonClassDefault: "a_btn a_btn_primary a_filter_horizontal__add_filter",
                    change: this.addFiltersVisible,
                    data: this.filtersHidden,
                    hasCaret: !1,
                    disabled: !this.filtersHidden.length,
                    isLabelFloat: !1,
                    keyGroup: "group",
                    keyId: "id",
                    keyLabel: "label",
                    label: "_A_FILTERS_ADD_FILTER_",
                    labelClass: "a_sr_only",
                    menuWidthType: "by_content",
                    sortOrderGroup: "asc",
                    placement: "bottom-start",
                    search: !0,
                    translateData: !0,
                    type: "select"
                  }, {
                    fixedPlaceholder: () => [
                      c(pe, {
                        tag: "span",
                        ariaHidden: !0,
                        class: "a_position_absolute_all",
                        title: "_A_FILTERS_ADD_FILTER_"
                      }),
                      c(st, {
                        icon: wS
                      })
                    ]
                  })
                ]),
                formAppend: () => this.canSave ? c("div", {
                  class: "a_filter_horizontal__save_actions"
                }, [
                  c(Oe, {
                    id: this.buttonSaveComponentId,
                    class: "a_btn a_btn_primary",
                    iconLeft: Z$,
                    type: "button",
                    text: "_A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_",
                    onClick: this.openModalSave
                  }),
                  c(Oe, {
                    id: this.buttonDeleteId,
                    ariaDisabled: this.isModelFilterSavedNew,
                    class: "a_btn a_btn_secondary",
                    iconLeft: bS,
                    text: {
                      desktop: "_A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_"
                    },
                    textAriaHidden: !0,
                    textScreenReader: this.textScreenreaderButtonDeleteFiltersSaved,
                    title: this.titleButtonDeleteFiltersSaved,
                    type: "button",
                    onClick: this.openDeleteConfirm
                  })
                ]) : ""
              })
            ]),
            c("div", {
              class: "a_filter_horizontal__footer"
            }, [
              c("div", {
                class: "a_filter_horizontal__footer__actions"
              }, [
                c(Oe, {
                  type: "button",
                  class: "a_btn a_btn_primary a_text_nowrap a_filter_horizontal__footer__actions__btn_search",
                  iconLeft: PS,
                  text: "_A_FILTERS_START_SEARCH_",
                  disabled: this.disabled,
                  onClick: this.onSearch
                }),
                c(Oe, {
                  type: "button",
                  class: "a_btn a_btn_secondary a_text_nowrap a_filter_horizontal__footer__actions__btn_close",
                  text: "_A_FILTERS_HOR_CLOSE_DROPDOWN_",
                  onClick: this.closeDropdown
                })
              ])
            ])
          ])
        ])
      }),
      this.isModalSaveVisible ? c(k$, {
        changeModelFiltersSaved: this.changeModelFiltersSaved,
        filtersSaved: this.filtersSaved,
        isModelFilterSavedNew: this.isModelFilterSavedNew,
        modelFiltersSaved: this.modelFiltersSaved,
        selectorCloseIds: this.selectorCloseIds,
        updateFiltersSaved: this.updateFiltersSaved,
        onClose: this.closeModalSave
      }) : ""
    ] : null;
  }
};
function J$(e) {
  const t = f(e, "id");
  return {
    idFilterTop: _(() => `${t.value}_filter_main`)
  };
}
function Q$(e) {
  const t = f(e, "filterMain"), n = _(() => !!t.value), r = _(() => n.value ? [
    t.value
  ] : []);
  return {
    hasFilterMain: n,
    dataMainFilter: r
  };
}
function ek(e, { emit: t }) {
  const n = f(e, "disabled");
  return {
    onSearch: () => {
      n.value || t("startSearch");
    }
  };
}
const tk = {
  name: "AFiltersMain",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filterMain: {
      type: Object,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    mainModel: {
      type: Object,
      required: !1
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    },
    updateMainModel: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch"
  ],
  setup(e, t) {
    const {
      hasFilterMain: n,
      dataMainFilter: r
    } = Q$(e), {
      idFilterTop: a
    } = J$(e), {
      onSearch: l
    } = ek(e, t);
    return {
      hasFilterMain: n,
      dataMainFilter: r,
      idFilterTop: a,
      onSearch: l
    };
  },
  render() {
    return this.hasFilterMain ? c("div", {
      id: this.idFilterTop,
      class: "a_filters_top"
    }, [
      c(Ou, {
        idPrefix: this.idFilterTop,
        class: "a_filters_top__form",
        classColumns: "a_filters_top__main_wrapper",
        classColumnDefault: "a_filters_top__main",
        data: this.dataMainFilter,
        excludeRenderAttributes: this.excludeRenderAttributes,
        modelValue: this.mainModel,
        showErrors: !1,
        onChange: this.updateMainModel
      }, {
        formDataAppend: () => c(rt, {
          class: "a_btn a_btn_primary a_text_nowrap a_filters_top__search",
          iconLeft: Il,
          type: "submit",
          text: {
            desktop: "_A_FILTERS_START_SEARCH_"
          },
          textScreenReader: {
            mobile: "_A_FILTERS_START_SEARCH_"
          },
          prevent: !0,
          stop: !0,
          disabled: this.disabled,
          onClick: this.onSearch
        })
      })
    ]) : null;
  }
};
function nk(e, { emit: t }, {
  filtersHorizontalRef: n = B(void 0),
  filtersVisibleAll: r = _(() => []),
  onUpdateModelFilters: a = () => {
  }
}) {
  const l = f(e, "appliedModel"), o = f(e, "unappliedModel"), u = () => {
    var p;
    (p = n.value) == null || p.initModelFiltersSaved();
  }, h = ({ filter: p, keyId: T, modelArray: m, appliedModelLocal: b, unappliedModelLocal: L }) => {
    const v = p.id;
    return Dc.value[p.type] ? (b[v] && b[v].length && (m ? b[v] = Dt(b[v], (I) => m.indexOf(I) === -1) : b[v] = []), L[v] && L[v].length && (m ? L[v] = Dt(L[v], (I) => m.indexOf(I) === -1) : L[v] = [])) : qT.value[p.type] && T ? (nt(L == null ? void 0 : L[v]) && (L[v][T] = void 0), nt(b == null ? void 0 : b[v]) && (b[v][T] = void 0)) : (L[v] = void 0, b[v] = void 0), {
      appliedModelLocal: b,
      unappliedModelLocal: L
    };
  };
  return {
    closeAllFilters: () => {
      let p = Se(l.value), T = Se(o.value);
      Y(r.value, (m) => {
        const b = h({
          filter: m,
          appliedModelLocal: p,
          unappliedModelLocal: T
        });
        p = b.appliedModelLocal, T = b.unappliedModelLocal;
      }), u(), t("update:unappliedModel", T), t("update:appliedModel", p), setTimeout(() => {
        a({ model: l.value });
      });
    },
    closeFilterValue: ({ filter: p, keyId: T, modelArray: m }) => {
      const b = Se(l.value), L = Se(o.value), {
        appliedModelLocal: v,
        unappliedModelLocal: I
      } = h({
        filter: p,
        keyId: T,
        modelArray: m,
        appliedModelLocal: b,
        unappliedModelLocal: L
      });
      t("update:unappliedModel", I), t("update:appliedModel", v), setTimeout(() => {
        a({ model: l.value });
      });
    }
  };
}
function rk() {
  const e = B({});
  return {
    dataKeyByKeyIdPerFilter: e,
    updateDataKeyByIdFromFilter: ({ dataKeyByKeyId: n, filterId: r }) => {
      e.value[r] = Se(n);
    }
  };
}
function ik(e) {
  const t = f(e, "excludeRenderAttributes"), n = [
    "alwaysVisible"
  ];
  return {
    excludeRenderAttributesComputed: _(() => bP(n, t.value))
  };
}
function ak({ filter: e = {}, modelObj: t = {} }) {
  var r;
  const n = e.id;
  return n in t ? Dc.value[e.type] ? !!((r = t[n]) != null && r.length) : qT.value[e.type] ? !!(t[n] && !wn(t[n])) : !0 : !1;
}
function sk(e, { emit: t }) {
  const n = f(e, "filters"), r = f(e, "filterMain"), a = f(e, "unappliedModel"), l = B({}), o = B(void 0), u = B([]), h = _(() => !!(n.value.length || r.value)), A = _(() => {
    const I = {};
    return Y(Se(n.value), (R) => {
      I[R.id] = R, Ri.value[R.type] && R.children && R.children.length && Y(R.children, (y) => {
        I[y.id] = y;
      });
    }), I;
  }), E = _(() => {
    const I = {
      alwaysVisible: [],
      filters: []
    };
    return Y(Se(n.value), (R) => {
      R.alwaysVisible ? I.alwaysVisible.push(R) : I.filters.push(R);
    }), I;
  }), p = _(() => {
    const I = [];
    return Y(u.value, (R) => {
      A.value[R] && I.push(A.value[R]);
    }), I;
  }), T = _(() => {
    const I = [];
    I.push(...n.value);
    const R = [];
    return Y(I, (y) => {
      R.push(y), Ri.value[y.type] && y.children && y.children.length && Y(y.children, (C) => {
        R.push(C);
      });
    }), R;
  }), m = () => {
    const I = [];
    Y(E.value.filters, (R) => {
      ak({
        filter: R,
        modelObj: a.value
      }) && I.push(R.id);
    }), u.value = I;
  };
  return {
    filtersDataKeyById: l,
    filtersGroup: E,
    filtersHorizontalRef: o,
    filtersKeyById: A,
    filtersVisible: p,
    filtersVisibleAll: T,
    filtersVisibleIds: u,
    hasFilters: h,
    onUpdateModelFilters: ({ model: I, isUpdateFiltersVisible: R }) => {
      t("update:unappliedModel", I), R && setTimeout(() => {
        m();
      });
    },
    setFiltersVisibleIds: m,
    updateAppliedModel: ({ model: I }) => {
      t("update:appliedModel", I);
    },
    updateMainModel: ({ model: I }) => {
      t("update:mainModel", I);
    }
  };
}
function lk(e) {
  const t = f(e, "filtersSaved"), n = f(e, "unappliedModel"), r = f(e, "updateFiltersSaved"), a = B([]);
  return {
    filtersSavedLocal: a,
    initFiltersSaved: () => {
      a.value = t.value || [];
    },
    updateFiltersSavedLocal: ({ action: u = "", label: h = "" }) => {
      if (u === "create")
        a.value.push({
          label: h,
          data: Se(n.value)
        });
      else {
        const A = Xp(a.value, ["label", h]);
        A !== -1 && (u === "delete" ? a.value.splice(A, 1) : u === "update" && a.value.splice(A, 1, {
          label: h,
          data: Se(n.value)
        }));
      }
      qe(r.value) && r.value({
        action: u,
        label: h,
        model: n.value,
        filtersSaved: a.value
      });
    }
  };
}
function ok(e, { emit: t }, {
  onUpdateModelFilters: n = () => {
  }
}) {
  const r = f(e, "appliedModel"), a = f(e, "unappliedModel");
  return {
    startSearch: () => {
      t("update:appliedModel", a.value), setTimeout(() => {
        n({ model: r.value });
      });
    }
  };
}
function uk(e, {
  dataKeyByKeyIdPerFilter: t = B({}),
  filtersVisibleIds: n = B([]),
  onUpdateModelFilters: r = () => {
  }
}) {
  const a = f(e, "unappliedModel");
  return {
    toggleFiltersVisible: ({ isAdd: o = !0, filterId: u, filter: h }) => {
      var A, E;
      if (o)
        n.value.push(u);
      else {
        const p = n.value.indexOf(u);
        p !== -1 && n.value.splice(p, 1);
        const T = Se(a.value);
        if (h && h.modelId) {
          const m = (A = t.value) == null ? void 0 : A[u];
          (E = T == null ? void 0 : T[h.modelId]) != null && E.length && m ? T[h.modelId] = Dt(T[h.modelId], (b) => !m[b]) : T[u] = void 0;
        } else
          T[u] = void 0;
        r({ model: T });
      }
    }
  };
}
const Uoe = {
  name: "AFilters",
  props: {
    appliedModel: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canSave: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filterMain: {
      type: Object,
      required: !1
    },
    filters: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersSaved: {
      type: Array,
      required: !1,
      default: () => []
    },
    id: {
      type: String,
      required: !1,
      default: () => ot("a_filters_")
    },
    mainModel: {
      type: Object,
      required: !1
    },
    unappliedModel: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    updateFiltersSaved: {
      type: Function,
      required: !1,
      default: void 0
    },
    view: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => ["top", "right"].indexOf(e) !== -1
    },
    viewRightTeleportSelector: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "startSearch",
    "update:appliedModel",
    "update:mainModel",
    "update:unappliedModel"
  ],
  setup(e, t) {
    const n = f(e, "filtersSaved"), {
      filtersDataKeyById: r,
      filtersGroup: a,
      filtersHorizontalRef: l,
      filtersKeyById: o,
      filtersVisible: u,
      filtersVisibleAll: h,
      filtersVisibleIds: A,
      hasFilters: E,
      onUpdateModelFilters: p,
      setFiltersVisibleIds: T,
      updateAppliedModel: m,
      updateMainModel: b
    } = sk(e, t), {
      closeAllFilters: L,
      closeFilterValue: v
    } = nk(e, t, {
      filtersHorizontalRef: l,
      filtersVisibleAll: h,
      onUpdateModelFilters: p
    }), {
      dataKeyByKeyIdPerFilter: I,
      updateDataKeyByIdFromFilter: R
    } = rk(), {
      toggleFiltersVisible: y
    } = uk(e, {
      dataKeyByKeyIdPerFilter: I,
      filtersVisibleIds: A,
      onUpdateModelFilters: p
    }), {
      startSearch: C
    } = ok(e, t, {
      onUpdateModelFilters: p
    }), {
      filtersSavedLocal: w,
      initFiltersSaved: F,
      updateFiltersSavedLocal: P
    } = lk(e), {
      excludeRenderAttributesComputed: q
    } = ik(e);
    return tt(n, () => {
      F();
    }, {
      deep: !0
    }), T(), F(), {
      closeAllFilters: L,
      closeFilterValue: v,
      dataKeyByKeyIdPerFilter: I,
      excludeRenderAttributesComputed: q,
      filtersDataKeyById: r,
      filtersGroup: a,
      filtersHorizontalRef: l,
      filtersKeyById: o,
      filtersSavedLocal: w,
      filtersVisible: u,
      filtersVisibleAll: h,
      filtersVisibleIds: A,
      hasFilters: E,
      onUpdateModelFilters: p,
      setFiltersVisibleIds: T,
      startSearch: C,
      toggleFiltersVisible: y,
      updateAppliedModel: m,
      updateDataKeyByIdFromFilter: R,
      updateFiltersSavedLocal: P,
      updateMainModel: b
    };
  },
  render() {
    if (this.hasFilters)
      return c(
        "div",
        [
          this.view === "top" && c(tk, {
            id: this.id,
            disabled: this.disabled,
            excludeRenderAttributes: this.excludeRenderAttributesComputed,
            filterMain: this.filterMain,
            mainModel: this.mainModel,
            updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
            updateMainModel: this.updateMainModel,
            onStartSearch: this.startSearch
          }, this.$slots),
          this.view === "right" && c(ti, {
            to: this.viewRightTeleportSelector,
            disabled: !this.viewRightTeleportSelector
          }, [
            c(e$, {
              id: this.id,
              disabled: this.disabled,
              excludeRenderAttributes: this.excludeRenderAttributesComputed,
              filters: this.filters,
              filtersKeyById: this.filtersKeyById,
              appliedModel: this.appliedModel,
              onUpdateModelFilters: this.updateAppliedModel,
              updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
              onStartSearch: this.startSearch
            }, this.$slots)
          ]),
          c(h$, {
            id: this.id,
            appliedModel: this.appliedModel,
            closeAllFilters: this.closeAllFilters,
            closeFilterValue: this.closeFilterValue,
            dataKeyByKeyIdPerFilter: this.dataKeyByKeyIdPerFilter,
            disabled: this.disabled,
            filtersGroup: this.filtersGroup,
            filtersKeyById: this.filtersKeyById,
            filtersVisibleAll: this.filtersVisibleAll
          }, {
            filtersHorizontal: () => this.view === "top" ? c(X$, {
              ref: "filtersHorizontalRef",
              id: this.id,
              canSave: this.canSave,
              disabled: this.disabled,
              excludeRenderAttributes: this.excludeRenderAttributesComputed,
              filtersGroup: this.filtersGroup,
              filtersKeyById: this.filtersKeyById,
              filtersSaved: this.filtersSavedLocal,
              filtersVisible: this.filtersVisible,
              onUpdateModelFilters: this.onUpdateModelFilters,
              unappliedModel: this.unappliedModel,
              updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
              updateFiltersSaved: this.updateFiltersSavedLocal,
              onStartSearch: this.startSearch,
              onToggleFiltersVisible: this.toggleFiltersVisible
            }, this.$slots) : "",
            ...this.$slots
          })
        ]
      );
  }
}, Md = {
  name: "AGet",
  props: {
    keyLabel: {
      type: [String, Array],
      required: !0,
      info: "Weg zu Informationen. Z.B.('a[0].b.c', 'vertrag.antrag_obj.pk', ['vertrag', aloha, 'pk'])"
    },
    data: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Haupt-Objekt oder -Array, wo man sucht"
    },
    tag: {
      type: String,
      required: !1,
      default: "span",
      info: "Semantisch-relevanter HTML-Tag.(span, div, ...)"
    },
    defaultValue: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Standardwert, wenn Lodash-Funktion 'get' undefined zurückschickt"
    },
    filter: {
      type: String,
      required: !1,
      default: void 0
    },
    filterParameters: {
      type: [Object, String, Number, Boolean],
      required: !1,
      default: () => {
      }
    },
    replacedWithDefault: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Wenn das Wert, das Lodash-Funktion 'get' zurückschickt, === this.replacedWithDefault, dann this.defaultValue"
    }
  },
  setup() {
    return sr();
  },
  computed: {
    valueLocal() {
      let e = de(this.data, this.keyLabelLocal);
      if (ae(e) && (e = this.defaultValue), this.isValueEqualsWithValueThenDefaultValue(e))
        return this.defaultValue;
      if (this.filter) {
        const t = `filter${Cp(this.filter)}`;
        if (qe(this[t]))
          return this[t](e, this.filterParameters);
        console.warn(`filter "${t}" ist not defined`);
      }
      return e;
    },
    keyLabelLocal() {
      return Te(this.keyLabel) ? this.keyLabel.join(".") : this.keyLabel;
    }
  },
  methods: {
    isValueEqualsWithValueThenDefaultValue(e) {
      if (Pe(this.replacedWithDefault))
        return !1;
      let t = !1;
      return Te(this.replacedWithDefault) ? Y(this.replacedWithDefault, (n) => {
        if (n === e)
          return t = !0, !1;
      }) : this.replacedWithDefault === e && (t = !0), t;
    }
  },
  render() {
    return Ft(c(this.tag), [
      [cn, this.valueLocal]
    ]);
  }
};
function _k(e) {
  const t = f(e, "isLast"), n = f(e, "hasDropdownActions"), r = f(e, "hasDividerBeforeDropdown"), a = _(() => t.value && n.value), l = _(() => a.value && !r.value);
  return {
    isDropdownActionsAfterGroup: _(() => a.value && r.value),
    isDropdownActionsInGroup: l
  };
}
const dk = {
  name: "AGroupButtonDropdownItem",
  props: {
    actionsClasses: {
      type: Array,
      required: !0
    },
    actionsIds: {
      type: Array,
      required: !0
    },
    actionsDropdown: {
      type: Array,
      required: !0
    },
    btnGroupClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn_group"
    },
    data: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !0
    },
    hasDividerBeforeDropdown: {
      type: Boolean,
      required: !0
    },
    hasDropdownActions: {
      type: Boolean,
      required: !0
    },
    isLast: {
      type: Boolean,
      required: !0
    }
  },
  setup(e) {
    const {
      isDropdownActionsAfterGroup: t,
      isDropdownActionsInGroup: n
    } = _k(e);
    return {
      isDropdownActionsAfterGroup: t,
      isDropdownActionsInGroup: n
    };
  },
  render() {
    return [
      !!this.data.children.length && c("div", {
        class: this.btnGroupClass
      }, [
        ...this.data.children.map((e) => {
          let t = e.classButton ? e.classButton : this.actionsClasses[e.actionNotDividerIndex];
          e.classExtra && (t = Do({
            class1: t,
            class2: e.classExtra
          }));
          const n = e.id ? e.id : this.actionsIds[e.actionNotDividerIndex], r = this.disabled || e.disabled;
          if (e.type === "button")
            return c(rt, {
              ...e,
              id: n,
              class: t,
              classButton: void 0,
              classExtra: void 0,
              disabled: r,
              onClick: e.callback,
              callback: void 0,
              actionNotDividerIndex: void 0,
              isHidden: void 0,
              isConfirm: void 0,
              callbackLocal: void 0
            });
          if (e.type === "link")
            return c(gu, {
              ...e,
              id: n,
              classButton: void 0,
              classExtra: void 0,
              disabled: r,
              class: t,
              actionNotDividerIndex: void 0,
              isHidden: void 0,
              type: void 0,
              isConfirm: void 0,
              callbackLocal: void 0
            });
          if (e.type === "template" && e.slotName && this.$slots[e.slotName])
            return this.$slots[e.slotName]({
              id: n,
              class: t,
              action: e
            });
        }),
        this.isDropdownActionsInGroup && c(ei, {
          isHideWithoutActionAndSlot: !0,
          actions: this.actionsDropdown,
          disabled: this.disabled,
          ...this.dropdownAttributes
        }, this.$slots)
      ]),
      this.isDropdownActionsAfterGroup && c(ei, {
        isHideWithoutActionAndSlot: !0,
        actions: this.actionsDropdown,
        disabled: this.disabled,
        ...this.dropdownAttributes
      }, this.$slots)
    ];
  }
};
function ck(e) {
  const t = f(e, "actions"), n = f(e, "indexFirstDropdownAction"), r = f(e, "indexFirstDropdownActionMobile"), a = f(e, "minDropdownActions"), {
    isMobileWidth: l
  } = fn(), o = _(() => AS({
    actions: t.value
  })), u = _(() => {
    const m = Se(o.value);
    return Y(m, (b) => {
      b.classButton = Do({
        class1: b.classButton,
        class2: b.class
      }), b.class = Do({
        class1: b.classDropdown,
        class2: b.class
      }), delete b.classDropdown, b.classExtra && (b.class = Do({
        class1: b.classExtra,
        class2: b.class
      }));
    }), m;
  }), h = _(() => l.value ? r.value : n.value), A = ({ actions: m = [], minCountActions: b = 0 }) => {
    let L = 0;
    return Y(m, (v) => {
      if (L >= b)
        return !1;
      v.type !== "divider" && L++;
    }), L >= b;
  }, E = _(() => {
    const m = Se(u.value), b = {
      buttons: [],
      dropdown: []
    };
    let L = 0, v = !0;
    return Y(m, (I, R) => {
      if (L === h.value) {
        const y = m.slice(R, m.length);
        if (A({
          actions: y,
          minCountActions: a.value
        }))
          return b.dropdown = m.splice(R, m.length), h.value === 0 && b.buttons.push({
            type: "group",
            children: []
          }), !1;
      }
      I.type !== "divider" ? (I.actionNotDividerIndex = L, L++, v ? b.buttons.push({
        type: "group",
        children: [I]
      }) : as(b.buttons).children.push(I), v = !1) : v = !0;
    }), b;
  }), p = _(() => E.value.dropdown.length > 0), T = _(() => u.value.length > 0);
  return {
    actionsAllWithClassesFiltered: u,
    actionsGrouped: E,
    hasActionsAllFiltered: T,
    hasDropdownActions: p
  };
}
const vi = B({
  propsDefault: {
    actionsClasses: ["a_btn a_btn_primary", "a_btn a_btn_secondary"],
    dropdownAttributes: {},
    hasDividerBeforeDropdown: !0,
    indexFirstDropdownAction: 1,
    indexFirstDropdownActionMobile: 0,
    minDropdownActions: 2,
    useActionClass: !0,
    useDropdownActionClass: !1
  }
}), Woe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    vi.value.propsDefault = {
      ...vi.value.propsDefault,
      ...t
    };
  }
}, qd = {
  name: "AGroupButtonDropdown",
  props: {
    actions: {
      type: Array,
      required: !1,
      default: () => []
    },
    actionsClasses: {
      type: Array,
      required: !1,
      default: () => vi.value.propsDefault.actionsClasses
    },
    actionsIds: {
      type: Array,
      required: !1,
      default: () => []
    },
    btnGroupClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn_group"
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !1,
      default: () => vi.value.propsDefault.dropdownAttributes
    },
    hasDividerBeforeDropdown: {
      type: Boolean,
      required: !1,
      default: () => vi.value.propsDefault.hasDividerBeforeDropdown
    },
    indexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: () => vi.value.propsDefault.indexFirstDropdownAction,
      validator: (e) => e >= -1
    },
    indexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: () => vi.value.propsDefault.indexFirstDropdownActionMobile,
      validator: (e) => e >= -1
    },
    minDropdownActions: {
      type: Number,
      required: !1,
      default: () => vi.value.propsDefault.minDropdownActions
    },
    innerFlagHasActions: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "update:innerFlagHasActions"
  ],
  setup(e, { emit: t }) {
    const {
      actionsAllWithClassesFiltered: n,
      actionsGrouped: r,
      hasActionsAllFiltered: a,
      hasDropdownActions: l
    } = ck(e);
    return tt(a, (o) => {
      t("update:innerFlagHasActions", o);
    }, {
      immediate: !0
    }), {
      actionsAllWithClassesFiltered: n,
      actionsGrouped: r,
      hasActionsAllFiltered: a,
      hasDropdownActions: l
    };
  },
  render() {
    if (this.hasActionsAllFiltered)
      return c("div", {
        class: "aloha_group_btn_dropdown"
      }, [
        ...this.actionsGrouped.buttons.map((e, t) => c(dk, {
          btnGroupClass: this.btnGroupClass,
          data: e,
          disabled: this.disabled,
          actionsDropdown: this.actionsGrouped.dropdown,
          hasDropdownActions: this.hasDropdownActions,
          dropdownAttributes: this.dropdownAttributes,
          actionsClasses: this.actionsClasses,
          actionsIds: this.actionsIds,
          isLast: t === this.actionsGrouped.buttons.length - 1,
          hasDividerBeforeDropdown: this.hasDividerBeforeDropdown
        }, this.$slots))
      ]);
  }
};
function fk(e) {
  const t = f(e, "callback"), n = f(e, "disabled"), r = f(e, "rootMargin"), a = f(e, "threshold");
  let l = {};
  const o = B(void 0);
  let u;
  const h = () => {
    l = {
      rootMargin: r.value,
      threshold: a.value
    };
  }, A = () => {
    u = new IntersectionObserver((T) => {
      const [m] = T;
      m.isIntersecting && t.value();
    }, l);
  }, E = () => {
    n.value || u.observe(o.value);
  }, p = () => {
    u && u.disconnect();
  };
  return tt(n, (T) => {
    T === !0 ? E() : p();
  }), {
    disconnectObserver: p,
    sentinelRef: o,
    setIntersectionObserver: A,
    setObserverOptions: h,
    startObserver: E
  };
}
const Voe = {
  name: "AInfiniteScroll",
  props: {
    callback: {
      type: Function,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    rootMargin: {
      type: String,
      required: !1,
      default: "300px"
    },
    sentinelTag: {
      type: String,
      required: !1,
      default: "span"
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    threshold: {
      type: [Number, Array],
      required: !1,
      default: 0.5
    }
  },
  setup(e) {
    const {
      disconnectObserver: t,
      sentinelRef: n,
      setIntersectionObserver: r,
      setObserverOptions: a,
      startObserver: l
    } = fk(e);
    return kr(() => {
      a(), r(), l();
    }), Ot(() => {
      t();
    }), {
      sentinelRef: n
    };
  },
  render() {
    return c(this.tag, {}, [
      this.$slots.default ? this.$slots.default() : null,
      c(this.sentinelTag, {
        ref: "sentinelRef",
        style: "height: 1px; display: block;",
        ariaHidden: !0
      })
    ]);
  }
};
function hk(e) {
  const t = f(e, "textCopy"), n = B(void 0), {
    addNotification: r
  } = Nu();
  return {
    copyText: async () => {
      var o;
      let l = "";
      if (t.value ? l = t.value : (o = n.value) != null && o.$el && Y(n.value.$el.children, (u) => {
        u.classList.contains("a_sr_only") || (l += u.textContent);
      }), l)
        try {
          await navigator.clipboard.writeText(l), r({
            text: "_A_LINK_COPY_COPIED_TO_CLIPBOARD_"
          });
        } catch (u) {
          console.error(u);
        }
    },
    linkRef: n
  };
}
const Ak = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-copy" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z"/>
</svg>`, Goe = {
  name: "ALinkCopy",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    buttonOptions: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonPosition: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "a_btn_group"
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    linkOptions: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    textCopy: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup() {
    const {
      copyText: e,
      linkRef: t
    } = hk();
    return {
      copyText: e,
      linkRef: t
    };
  },
  render() {
    var t, n;
    const e = c(rt, {
      alwaysTranslate: this.alwaysTranslate,
      class: "a_btn a_btn_secondary",
      disabled: this.disabled,
      iconLeft: Ak,
      textScreenReader: "_A_LINK_COPY_BTN_TITLE_",
      title: "_A_LINK_COPY_BTN_TITLE_",
      onClick: this.copyText,
      ...this.buttonOptions
    }, (t = this.$slots) == null ? void 0 : t.button);
    return c("div", {
      class: [
        this.classDefault,
        this.class
      ],
      role: "group"
    }, [
      this.buttonPosition === "left" && e,
      c(gu, {
        ref: "linkRef",
        alwaysTranslate: this.alwaysTranslate,
        disabled: this.disabled,
        ...this.linkOptions
      }, (n = this.$slots) == null ? void 0 : n.link),
      this.buttonPosition === "right" && e
    ]);
  }
};
function Ek(e) {
  const t = f(e, "isDataSimpleArray"), n = f(e, "item"), r = f(e, "keyChildren"), a = _(() => qn(n.value)), l = _(() => {
    var u;
    return t.value ? (u = n.value) == null ? void 0 : u[1] : !r.value || !a.value ? [] : de(n.value, r.value) || [];
  }), o = _(() => Te(l.value) && l.value.length > 0);
  return {
    children: l,
    hasChildren: o
  };
}
function pk(e) {
  const t = f(e, "isDataSimpleArray"), n = f(e, "item"), r = f(e, "itemIndex"), a = f(e, "keyLabel"), l = f(e, "keyLabelCallback");
  return {
    label: _(() => {
      var u;
      return t.value ? Te(n.value) ? ((u = n.value) == null ? void 0 : u[0]) || "" : n.value : qe(l.value) ? l.value({ item: n.value, itemIndex: r.value }) : a.value ? de(n.value, a.value) : n.value;
    })
  };
}
const Tk = {
  name: "AListItem",
  props: {
    classItem: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    classMain: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    item: {
      type: [Object, String, Number, Array],
      required: !0
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !0
    },
    listItemTag: {
      type: String,
      required: !1,
      default: "li"
    },
    separator: {
      type: String,
      required: !1,
      default: void 0
    },
    separatorHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      children: t,
      hasChildren: n
    } = Ek(e), {
      label: r
    } = pk(e);
    return {
      children: t,
      hasChildren: n,
      label: r
    };
  },
  render() {
    return c(this.listItemTag, {
      class: this.classItem
    }, [
      this.$slots.listItem ? this.$slots.listItem({
        item: this.item,
        itemIndex: this.itemIndex
      }) : Ft(c(this.labelTag), [
        [cn, this.label]
      ]),
      this.separator ? c("span", {}, this.separator) : "",
      this.hasChildren ? c(bk, {
        classItem: this.classItem,
        classMain: this.classMain,
        data: this.children,
        isDataSimpleArray: this.isDataSimpleArray,
        keyChildren: this.keyChildren,
        keyId: this.keyId,
        keyLabel: this.keyLabel,
        keyLabelCallback: this.keyLabelCallback,
        labelTag: this.labelTag,
        listItemTag: this.listItemTag,
        separator: this.separator,
        separatorHtml: this.separatorHtml,
        tag: this.tag
      }, this.$slots) : "",
      this.separatorHtml ? Ft(c("div"), [
        [cn, this.separatorHtml]
      ]) : ""
    ]);
  }
};
function Sk(e) {
  const t = f(e, "data"), n = f(e, "isDataSimpleArray"), r = f(e, "keyChildren"), a = f(e, "keyLabel"), l = f(e, "keyLabelCallback"), o = f(e, "separator");
  return {
    plainText: _(() => Vo(t.value, {
      isHtml: !1,
      keyLabel: a.value,
      keyLabelCallback: l.value,
      keyChildren: r.value,
      isSimpleArray: n.value,
      separator: o.value
    }))
  };
}
function mk(e) {
  const t = f(e, "tag"), n = f(e, "isHtml");
  return {
    tagLocal: _(() => !n.value && (t.value === "ul" || t.value === "ol") ? "span" : t.value)
  };
}
const bk = {
  name: "AList",
  props: {
    classItem: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    classMain: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isHtml: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !1,
      default: "span"
    },
    listItemTag: {
      type: String,
      required: !1,
      default: "li"
    },
    separator: {
      type: String,
      required: !1,
      default: void 0
    },
    separatorHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "ul"
    }
  },
  setup(e) {
    const {
      tagLocal: t
    } = mk(e), {
      plainText: n
    } = Sk(e);
    return {
      plainText: n,
      tagLocal: t
    };
  },
  render() {
    return this.isHtml ? c(this.tag, {
      class: this.classMain
    }, [
      this.data.map((e, t) => {
        const n = this.keyId ? de(e, this.keyId) : t;
        return c(Tk, {
          key: n,
          classItem: this.classItem,
          classMain: this.classMain,
          isDataSimpleArray: this.isDataSimpleArray,
          item: e,
          itemIndex: t,
          keyChildren: this.keyChildren,
          keyId: this.keyId,
          keyLabel: this.keyLabel,
          keyLabelCallback: this.keyLabelCallback,
          labelTag: this.labelTag,
          listItemTag: this.listItemTag,
          separator: this.separator,
          separatorHtml: this.separatorHtml,
          tag: this.tag
        }, this.$slots);
      })
    ]) : c(this.tagLocal, null, this.plainText);
  }
};
function xS({
  menuId: e = "a_menu_",
  panelId: t = ""
}) {
  const r = `${`#${Xr({ menuId: e, id: t, suffix: "panel" })}`} .a_menu__listview a`;
  setTimeout(() => {
    const a = document.querySelector(r);
    a && a.focus();
  });
}
function Xr({
  menuId: e = "a_menu_",
  id: t = "",
  suffix: n = ""
}) {
  return `${e}_${t}_${n}`;
}
const Vs = B({});
function FS(e) {
  const t = f(e, "menuId"), n = f(e, "canChangeBodyClass"), r = () => {
    n.value && (document.body.classList.add("a_menu__wrapper_open"), document.body.classList.remove("a_menu__wrapper_close")), Vs.value[t.value] = !0;
  }, a = () => {
    n.value && (document.body.classList.add("a_menu__wrapper_close"), document.body.classList.remove("a_menu__wrapper_open")), Vs.value[t.value] = !1;
  }, l = () => {
    n.value && (document.body.classList.remove("a_menu__wrapper_close"), document.body.classList.remove("a_menu__wrapper_open"));
  }, o = ({ isOpen: E } = {}) => {
    Pe(E) ? Vs.value[t.value] ? a() : r() : E ? r() : a();
  }, u = _(() => Vs.value[t.value]), h = () => {
    o(), u.value && xS({
      menuId: t.value,
      panelId: ""
    });
  };
  return {
    btnToggleTitle: _(() => Vs.value[t.value] ? "_A_MENU_2_BTN_CLOSE_" : "_A_MENU_2_BTN_OPEN_"),
    closeMenu: a,
    isMenuOpen: u,
    removeBodyClasses: l,
    toggleMenu: o,
    toggleMenuObButton: h
  };
}
const Lk = {
  name: "AMenuButtonToggle",
  props: {
    buttonToggleProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canChangeBodyClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    class: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    insideMenu: {
      type: Boolean,
      required: !1
    },
    menuId: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      btnToggleTitle: t,
      isMenuOpen: n,
      toggleMenuObButton: r
    } = FS(e);
    return {
      btnToggleTitle: t,
      isMenuOpen: n,
      toggleMenuObButton: r
    };
  },
  render() {
    return c(rt, {
      class: ["a_menu__btn_toggle", this.class, {
        a_menu__btn_toggle_open: this.isMenuOpen,
        a_menu__btn_toggle_close: !this.isMenuOpen,
        a_menu__btn_toggle_inside_menu: this.insideMenu,
        a_menu__btn_toggle_outside_menu: !this.insideMenu
      }],
      type: "button",
      title: this.btnToggleTitle,
      textScreenReader: this.btnToggleTitle,
      onClick: this.toggleMenuObButton,
      ...this.buttonToggleProps
    }, () => [
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_1 aloha_element__ml_0"
      }),
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_2 aloha_element__ml_0"
      }),
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_3 aloha_element__ml_0"
      })
    ]);
  }
};
function vk() {
  const e = ue("togglePanel"), t = ({ parentId: r }) => {
    e({ parentId: r });
  };
  return {
    goBack: t,
    goBackKeydown: ({ $event: r, parentId: a }) => {
      (r.keyCode === X.enter || r.keyCode === X.space) && (t({ parentId: a }), r.stopPropagation(), r.preventDefault());
    }
  };
}
function Ik(e) {
  const t = f(e, "dataKeyById"), n = f(e, "panelParentsOpen");
  return {
    breadcrumbsItems: _(() => {
      if (!n.value.length)
        return [];
      const a = [];
      let l = "_A_MENU_2_MAIN_MENU_";
      return Y(n.value, (o, u) => {
        a.push({
          isFirst: u === 0,
          label: l,
          panelParentId: o
        }), l = de(t.value, `${o}.${Lt}`);
      }), a.push({
        panelParentId: void 0,
        label: l
      }), a;
    })
  };
}
function gk({
  breadcrumbsItems: e = _(() => []),
  breadcrumbsTruncatedOffset: t = B(0)
}) {
  const n = B([]), r = B([]), a = B(0), l = B(void 0), o = B(!1), u = B(0), h = B([]), A = () => {
    if (l.value < 0) {
      o.value = !0;
      return;
    }
    r.value.unshift(e.value[l.value]), l.value--;
  }, E = () => {
    n.value = e.value.slice(0, l.value + 1), o.value = !0;
  }, p = () => {
    if (r.value.length <= 1 || u.value + t.value <= a.value) {
      E();
      return;
    }
    r.value.splice(0, 1), l.value++, u.value -= as(h.value), h.value.pop(), p();
  };
  return {
    breadcrumbsItemsDropdown: n,
    breadcrumbsItemsTruncated: r,
    isRenderedAll: o,
    renderItem: (b) => {
      const L = b.offsetWidth;
      u.value += L, h.value.push(L), u.value >= a.value ? p() : A();
    },
    renderParent: (b) => {
      l.value = e.value.length - 1, A(), a.value = b.offsetWidth;
    }
  };
}
const yl = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots" viewBox="0 0 16 16">
  <path d="M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3"/>
</svg>`, yk = {
  name: "AMenuBreadcrumbs",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !0
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    isPanelMain: {
      type: Boolean,
      required: !1
    },
    dataKeyById: {
      type: Object,
      required: !0
    },
    panelParentsOpen: {
      type: Array,
      required: !0
    }
  },
  setup(e) {
    const t = ue("breadcrumbsTruncatedOffset"), {
      breadcrumbsItems: n
    } = Ik(e), {
      goBack: r,
      goBackKeydown: a
    } = vk(), {
      breadcrumbsItemsDropdown: l,
      breadcrumbsItemsTruncated: o,
      isRenderedAll: u,
      renderItem: h,
      renderParent: A
    } = gk({
      breadcrumbsItems: n,
      breadcrumbsTruncatedOffset: t
    });
    return {
      breadcrumbsItems: n,
      breadcrumbsItemsDropdown: l,
      breadcrumbsItemsTruncated: o,
      goBack: r,
      goBackKeydown: a,
      isRenderedAll: u,
      renderItem: h,
      renderParent: A
    };
  },
  render() {
    if (this.isSearchActive || this.isPanelMain)
      return null;
    if (this.isBreadcrumbsTruncated)
      return c(pe, {
        ariaLabel: "_A_MENU_2_BREADCRUMB_",
        class: "a_menu__breadcrumb a_menu__breadcrumb_secondary",
        tag: "nav"
      }, () => [
        Ft(c("ul", {
          class: [
            "a_menu__breadcrumb__ul a_menu__breadcrumb__ul_truncated"
          ]
        }, [
          this.breadcrumbsItemsDropdown.length > 0 ? c("li", {
            class: "a_menu__breadcrumbs__item"
          }, [
            c(ei, {
              buttonClass: "a_btn a_btn_secondary a_btn_small a_menu__breadcrumb__ul_truncated__btn",
              buttonIconLeft: yl,
              buttonTextScreenReader: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
              buttonTitle: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
              dropdownClass: "a_menu__breadcrumb__ul_truncated__dropdown",
              hasCaret: !1,
              inBody: !0,
              ...this.breadcrumbsTruncatedDropdownProps
            }, {
              dropdown: () => [
                this.breadcrumbsItemsDropdown.map((e) => {
                  const t = e.panelParentId ? {
                    tag: "a",
                    class: [
                      "a_menu__breadcrumbs__link",
                      this.breadcrumbsLinkClass
                    ],
                    role: "button",
                    tabindex: 0,
                    onClick: () => this.goBack({ parentId: e.panelParentId }),
                    onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
                  } : {
                    class: "a_menu__breadcrumbs__link",
                    tag: "strong"
                  };
                  return c("li", {
                    key: e.panelParentId,
                    class: "a_menu__breadcrumbs__item"
                  }, [
                    c(rt, {
                      text: e.label,
                      title: e.label,
                      ...t
                    }),
                    c("span", {
                      class: "a_menu__breadcrumbs__item__divider"
                    }, "/")
                  ]);
                })
              ]
            })
          ]) : "",
          this.breadcrumbsItemsTruncated.map((e) => {
            const t = e.panelParentId ? {
              tag: "a",
              class: [
                "a_menu__breadcrumbs__link",
                this.breadcrumbsLinkClass
              ],
              role: "button",
              tabindex: 0,
              onClick: () => this.goBack({ parentId: e.panelParentId }),
              onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
            } : {
              class: "a_menu__breadcrumbs__link",
              tag: "strong"
            };
            return Ft(c("li", {
              key: e.panelParentId,
              class: "a_menu__breadcrumbs__item"
            }, [
              !e.isFirst && c("span", {
                class: "a_menu__breadcrumbs__item__divider"
              }, "/"),
              c(rt, {
                text: e.label,
                title: e.label,
                ...t
              })
            ]), [
              [rl, { mounted: this.renderItem }]
            ]);
          })
        ]), [
          [rl, { mounted: this.renderParent }]
        ])
      ]);
    if (!this.isBreadcrumbsTruncated)
      return c(pe, {
        ariaLabel: "_A_MENU_2_BREADCRUMB_",
        class: "a_menu__breadcrumb a_menu__breadcrumb_secondary",
        tag: "nav"
      }, () => [
        c("ul", {
          class: [
            "a_menu__breadcrumb__ul"
          ]
        }, [
          this.breadcrumbsItems.map((e) => {
            const t = e.panelParentId ? {
              tag: "a",
              class: [
                "a_menu__breadcrumbs__link",
                this.breadcrumbsLinkClass
              ],
              role: "button",
              tabindex: 0,
              onClick: () => this.goBack({ parentId: e.panelParentId }),
              onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
            } : {
              class: "a_menu__breadcrumbs__link",
              tag: "strong"
            };
            return c("li", {
              key: e.panelParentId,
              class: "a_menu__breadcrumbs__item"
            }, [
              !e.isFirst && c("span", {
                class: "a_menu__breadcrumbs__item__divider"
              }, "/"),
              c(rt, {
                text: e.label,
                title: e.label,
                ...t
              })
            ]);
          })
        ])
      ]);
  }
};
function Rk(e, {
  id: t = _(() => {
  })
}) {
  const n = f(e, "isLinkInSearchPanel"), r = ue("activeRoutesIds");
  return {
    isLinkActive: _(() => n.value ? !1 : r.value.indexOf(t.value) !== -1)
  };
}
function Ok(e) {
  const t = f(e, "isLinkInSearchPanel"), n = f(e, "item"), r = f(e, "keyIcon"), a = _(() => n.value[et]), l = _(() => {
    if (!t.value)
      return de(n.value, r.value);
  }), o = _(() => {
    const u = "a_menu__link__icon";
    return n.value.iconClass ? `{ CLASS } ${n.value.iconClass}` : u;
  });
  return {
    icon: l,
    iconClassLocal: o,
    id: a
  };
}
function Ck(e, {
  id: t = _(() => {
  })
}) {
  const n = f(e, "dataProParentChildren"), r = f(e, "item");
  return {
    countChildren: _(() => r.value.to ? 0 : n.value[t.value] && n.value[t.value].length)
  };
}
const ul = "_a_parent";
function Nk(e, {
  id: t = _(() => {
  })
}) {
  const n = f(e, "isLinkInSearchPanel"), r = f(e, "item"), a = ue("clickMenuLink"), l = ue("isPanelMain"), o = ue("togglePanel"), u = () => {
    o({
      parentId: t.value,
      isLinkInSearchPanel: n.value,
      isPanelMain: l.value
    });
  };
  return {
    clickLink: ({ $event: E }) => {
      n.value && o({ parentId: r.value[ul], isLinkInSearchPanel: n.value }), a({ ctrlKey: E.ctrlKey, isPanelMain: l.value });
    },
    onKeydown: (E) => {
      (E.keyCode === X.enter || E.keyCode === X.space) && (u(), E.stopPropagation(), E.preventDefault());
    },
    openSubMenu: u
  };
}
function Dk(e, {
  id: t = _(() => {
  })
}) {
  const n = f(e, "menuId");
  return {
    linkId: _(() => Xr({
      menuId: n.value,
      id: t.value,
      suffix: "link"
    }))
  };
}
function Bk(e) {
  const t = f(e, "isLinkInSearchPanel"), n = f(e, "item"), r = f(e, "modelSearch"), {
    filterSearchHighlight: a
  } = sr(), l = _(() => n.value[Lt]);
  return {
    label: _(() => {
      const u = l.value;
      return t.value ? a(u, { searchModel: r.value }) : u;
    }),
    labelWithoutFilter: l
  };
}
function wk(e) {
  const t = f(e, "item"), n = _(() => !!t.value.disabled), r = _(() => n.value ? "#" : t.value.to);
  return {
    isItemLink: _(() => !!t.value.to),
    isLinkDisabled: n,
    toLocal: r
  };
}
function Pk(e, {
  id: t = _(() => "")
}) {
  const n = ue("isChildPanelOpen"), r = ue("isMenuOpen"), a = ue("isPanelMain"), l = ue("panelParentsOpen"), o = _(() => a.value && l.value[0] === t.value), u = _(() => !r.value && n.value && l.value.indexOf(t.value) !== -1);
  return {
    isLinkOpen: _(() => o.value || u.value),
    isLinkOpenPanelMain: o,
    isLinkOpenPanelSecondaryMenuClose: u
  };
}
function xk(e) {
  const t = f(e, "item"), n = ue("keySlot");
  return {
    currentSlot: _(() => {
      if (n.value)
        return de(t.value, n.value);
    })
  };
}
function Fk(e) {
  const t = f(e, "isLinkInSearchPanel"), n = f(e, "isPanelOpen"), r = ue("isMenuOpen"), a = ue("isPanelMain", !1), l = ue("isChildPanelOpen", !1);
  return {
    tabindex: _(() => t.value || a.value || n.value || !r.value && l.value ? 0 : -1)
  };
}
function Mk(e, {
  isItemLink: t = _(() => !1),
  isLinkOpenPanelMain: n = _(() => !1),
  isLinkOpenPanelSecondaryMenuClose: r = _(() => !1),
  labelWithoutFilter: a = _(() => "")
}) {
  const l = f(e, "item"), o = _(() => !!l.value.isTitleHtml), u = _(() => n.value ? "_A_MENU_2_TO_MAIN_MENU_" : r.value ? [
    "_A_MENU_2_CLOSE_SUBMENU_",
    l.value.title || a.value
  ] : t.value ? l.value.title || a.value : [
    "_A_MENU_2_OPEN_SUBMENU_",
    l.value.title || a.value
  ]), h = _(() => ({
    minWidth: l.value.titleHtmlMinWidth,
    width: l.value.titleHtmlWidth,
    maxWidth: l.value.titleHtmlMaxWidth
  }));
  return {
    isTitleHtml: o,
    titleLocal: u,
    titleAttributes: h
  };
}
const MS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708"/>
</svg>`, $d = {
  name: "AMenuPanelLink",
  inject: [
    "isPanelMain",
    "showCountChildren"
  ],
  props: {
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    idsSearchVisible: {
      type: Object,
      required: !1,
      default: void 0
    },
    isLinkInSearchPanel: {
      type: Boolean,
      required: !1
    },
    isPanelOpen: {
      type: Boolean,
      required: !1
    },
    item: {
      type: Object,
      required: !0
    },
    keyIcon: {
      type: String,
      required: !1,
      default: void 0
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      currentSlot: t
    } = xk(e), {
      isItemLink: n,
      isLinkDisabled: r,
      toLocal: a
    } = wk(e), {
      label: l,
      labelWithoutFilter: o
    } = Bk(e), {
      icon: u,
      iconClassLocal: h,
      id: A
    } = Ok(e), {
      isLinkActive: E
    } = Rk(e, {
      id: A
    }), {
      linkId: p
    } = Dk(e, {
      id: A
    }), {
      isLinkOpen: T,
      isLinkOpenPanelMain: m,
      isLinkOpenPanelSecondaryMenuClose: b
    } = Pk(e, {
      id: A
    }), {
      tabindex: L
    } = Fk(e), {
      countChildren: v
    } = Ck(e, {
      id: A
    }), {
      isTitleHtml: I,
      titleLocal: R,
      titleAttributes: y
    } = Mk(e, {
      isItemLink: n,
      isLinkOpenPanelMain: m,
      isLinkOpenPanelSecondaryMenuClose: b,
      labelWithoutFilter: o
    }), {
      clickLink: C,
      onKeydown: w,
      openSubMenu: F
    } = Nk(e, {
      id: A
    });
    return {
      clickLink: C,
      countChildren: v,
      currentSlot: t,
      icon: u,
      iconClassLocal: h,
      isItemLink: n,
      isLinkActive: E,
      isLinkDisabled: r,
      isLinkOpen: T,
      isTitleHtml: I,
      label: l,
      labelWithoutFilter: o,
      linkId: p,
      onKeydown: w,
      openSubMenu: F,
      tabindex: L,
      titleAttributes: y,
      titleLocal: R,
      toLocal: a
    };
  },
  render() {
    return c("li", {
      class: "a_menu__listitem"
    }, [
      this.isLinkInSearchPanel && c("span", {
        class: "a_menu__breadcrumbs__item__divider",
        ariaHidden: !0
      }, "/"),
      this.currentSlot && this.$slots[this.currentSlot] ? this.$slots[this.currentSlot]({
        id: this.linkId,
        item: this.item,
        clickLink: this.clickLink,
        countChildren: this.countChildren,
        isLinkActive: this.isLinkActive,
        isLinkOpen: this.isLinkOpen,
        isPanelOpen: this.isPanelOpen,
        isPanelMain: this.isPanelMain,
        label: this.label,
        labelWithoutFilter: this.labelWithoutFilter,
        onKeydown: this.onKeydown,
        openSubMenu: this.openSubMenu,
        tabindex: this.tabindex
      }) : this.isItemLink ? c(gu, {
        id: this.linkId,
        class: ["a_menu__link a_menu__link__text_truncated", {
          a_menu__link_disabled: this.isLinkDisabled,
          a_menu__link_active: this.isLinkActive,
          a_menu__link_panel_main: this.isPanelMain
        }],
        html: this.label,
        iconClass: this.iconClassLocal,
        iconLeft: this.icon,
        isTitleHtml: this.isTitleHtml,
        tabindex: this.tabindex,
        textAriaHidden: !0,
        textClass: "a_menu__link__text aloha_element__ml_0",
        textScreenReader: this.titleLocal,
        title: this.titleLocal,
        titleAttributes: this.titleAttributes,
        titlePlacement: "right",
        to: this.toLocal,
        onClick: this.clickLink
      }) : c(rt, {
        id: this.linkId,
        class: [
          "a_menu__link a_menu__link_btn a_menu__link__text_truncated",
          {
            a_menu__link_open: this.isLinkOpen,
            a_menu__link_active: this.isLinkActive,
            a_menu__link_panel_main: this.isPanelMain
          }
        ],
        html: this.label,
        iconClass: this.iconClassLocal,
        iconLeft: this.icon,
        isTitleHtml: this.isTitleHtml,
        role: "button",
        tabindex: this.tabindex,
        tag: "a",
        textAriaHidden: !0,
        textClass: "a_menu__link__text aloha_element__ml_0",
        textScreenReader: this.titleLocal,
        title: this.titleLocal,
        titleAttributes: this.titleAttributes,
        titlePlacement: "right",
        onClick: this.openSubMenu,
        onKeydown: this.onKeydown
      }, () => [
        c("span", {
          class: "a_menu__link__counter aloha_element__ml_0"
        }, [
          this.showCountChildren && c("span", {
            ariaHidden: !0
          }, this.countChildren),
          c(st, {
            class: "a_menu__link__counter__icon",
            icon: MS
          })
        ])
      ])
    ]);
  }
};
function qk(e) {
  const t = f(e, "groupItems");
  return {
    hasItems: _(() => t.value.length > 0)
  };
}
function $k(e) {
  const t = f(e, "groupIndex"), n = f(e, "groupLabel"), r = f(e, "menuId"), a = f(e, "paneIndex"), l = _(() => `${r.value}_${a.value}_${t.value}_label`);
  return {
    ariaLabelledbyObj: _(() => n.value ? {
      "aria-labelledby": l.value
    } : {}),
    labelId: l
  };
}
const WE = {
  name: "AMenuPanelGroup",
  props: {
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    groupIndex: {
      type: [Number, String],
      required: !0
    },
    groupItems: {
      type: Array,
      required: !0
    },
    groupLabel: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    isPanelOpen: {
      type: Boolean,
      required: !1
    },
    keyIcon: {
      type: String,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    paneIndex: {
      type: [Number, String],
      required: !0
    }
  },
  setup(e) {
    const {
      hasItems: t
    } = qk(e), {
      ariaLabelledbyObj: n,
      labelId: r
    } = $k(e);
    return {
      ariaLabelledbyObj: n,
      hasItems: t,
      labelId: r
    };
  },
  render() {
    return this.hasItems ? this.groupLabel ? c("li", {
      ...this.ariaLabelledbyObj
    }, [
      c("div", {
        id: this.labelId,
        class: "a_menu__list_header"
      }, this.groupLabel),
      c("ul", {
        class: "a_menu__listview"
      }, [
        this.groupItems.map((e, t) => c($d, {
          key: t,
          item: e,
          dataProParentChildren: this.dataProParentChildren,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId
        }, this.$slots))
      ])
    ]) : this.groupItems.map((e, t) => c($d, {
      key: t,
      item: e,
      dataProParentChildren: this.dataProParentChildren,
      isPanelOpen: this.isPanelOpen,
      keyIcon: this.keyIcon,
      menuId: this.menuId
    }, this.$slots)) : null;
  }
};
function kk(e) {
  const t = f(e, "panelItems"), n = f(e, "keyGroup"), r = _(() => {
    const l = [], o = {};
    return Y(t.value, (u) => {
      const h = de(u, n.value);
      ae(h) ? l.push(u) : (o[h] = o[h] || [], o[h].push(u));
    }), {
      withoutGroup: l,
      withGroup: o
    };
  });
  return {
    isItemsWithoutGroup: _(() => r.value.withoutGroup.length > 0),
    itemsGroup: r
  };
}
function Hk(e, {
  openedLevelIndex: t = _(() => 0)
}) {
  const n = f(e, "dataKeyById"), r = f(e, "isPanelMain"), a = f(e, "parentId"), l = ue("isMenuOpen"), o = _(() => !r.value && !l.value && t.value === 0), u = _(() => de(n.value, `${a.value}.${Lt}`));
  return {
    isHeaderPanelVisible: o,
    parentLabel: u
  };
}
function Uk(e) {
  const t = f(e, "menuId"), n = f(e, "parentId");
  return {
    panelId: _(() => Xr({
      menuId: t.value,
      id: n.value,
      suffix: "panel"
    }))
  };
}
function Wk(e) {
  const t = f(e, "panelParentsOpen"), n = f(e, "parentId"), r = _(() => t.value.indexOf(n.value)), a = _(() => {
    if (r.value !== -1)
      return `z-index: ${r.value + 2};`;
  });
  return {
    openedLevelIndex: r,
    styleZIndex: a
  };
}
function Vk(e, {
  openedLevelIndex: t = _(() => -1)
}) {
  const n = f(e, "isPanelMain"), r = f(e, "isSearchActive"), a = f(e, "panelParentsOpen"), l = _(() => r.value ? !1 : n.value ? a.value.length === 0 : a.value.length ? t.value === a.value.length - 1 : !1);
  return {
    isChildPanelOpen: _(() => {
      if (n.value)
        return a.value.length > 0;
      const u = t.value;
      return u !== -1 && u !== a.value.length - 1;
    }),
    isPanelOpen: l
  };
}
const VE = {
  name: "AMenuPanel",
  props: {
    attributesBlockerClick: {
      type: Object,
      required: !0
    },
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataKeyById: {
      type: Object,
      required: !0
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !1
    },
    isPanelMain: {
      type: Boolean,
      required: !1
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    keyGroup: {
      type: String,
      required: !0
    },
    keyIcon: {
      type: String,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    paneIndex: {
      type: [Number, String],
      required: !0
    },
    panelItems: {
      type: Array,
      required: !0
    },
    panelParentsOpen: {
      type: Array,
      required: !0
    },
    parentId: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = f(e, "isPanelMain"), {
      panelId: n
    } = Uk(e), {
      openedLevelIndex: r,
      styleZIndex: a
    } = Wk(e), {
      isItemsWithoutGroup: l,
      itemsGroup: o
    } = kk(e), {
      isChildPanelOpen: u,
      isPanelOpen: h
    } = Vk(e, {
      openedLevelIndex: r
    }), {
      isHeaderPanelVisible: A,
      parentLabel: E
    } = Hk(e, {
      openedLevelIndex: r
    });
    return Qe("isChildPanelOpen", u), Qe("isPanelMain", t), {
      isChildPanelOpen: u,
      isHeaderPanelVisible: A,
      isItemsWithoutGroup: l,
      isPanelOpen: h,
      itemsGroup: o,
      panelId: n,
      parentLabel: E,
      styleZIndex: a
    };
  },
  render() {
    return c("div", {
      id: this.panelId,
      class: ["a_menu__panel", {
        a_menu__panel_main: !this.isSearchActive && this.isPanelMain,
        a_menu__panel_secondary: !this.isPanelMain,
        a_menu__panel_opened: !this.isSearchActive && this.isPanelOpen,
        a_menu__panel_parent: !this.isSearchActive && this.isChildPanelOpen
      }],
      style: this.styleZIndex
    }, [
      !this.isPanelMain && this.isPanelOpen && c(yk, {
        breadcrumbsLinkClass: this.breadcrumbsLinkClass,
        breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
        dataKeyById: this.dataKeyById,
        isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
        isPanelMain: this.isPanelMain,
        isSearchActive: this.isSearchActive,
        panelParentsOpen: this.panelParentsOpen
      }),
      this.isHeaderPanelVisible && c("div", {
        class: "a_menu__panel_header"
      }, [
        c(pe, {
          class: "a_menu__panel_header__text",
          html: this.parentLabel,
          tag: "strong"
        })
      ]),
      c("ul", {
        class: "a_menu__listview"
      }, [
        this.isItemsWithoutGroup && c(WE, {
          dataProParentChildren: this.dataProParentChildren,
          groupItems: this.itemsGroup.withoutGroup,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId,
          paneIndex: this.paneIndex,
          groupIndex: "00"
        }, this.$slots),
        Object.keys(this.itemsGroup.withGroup).map((e, t) => c(WE, {
          key: e,
          dataProParentChildren: this.dataProParentChildren,
          groupIndex: t,
          groupItems: this.itemsGroup.withGroup[e],
          groupLabel: e,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId,
          paneIndex: this.paneIndex
        }, this.$slots))
      ])
    ]);
  }
}, kd = "_a_breadcrumbs";
function Gk(e) {
  const t = f(e, "item");
  return {
    breadcrumbsItems: _(() => {
      const r = [
        {
          label: "_A_MENU_2_MAIN_MENU_",
          isFirst: !0,
          parentIds: []
        }
      ], a = [];
      return Y(t.value[kd], (l) => {
        a.push(l.parentId), r.push({
          label: l.label,
          parentId: l.parentId,
          parentIds: [
            ...a
          ]
        });
      }), r;
    })
  };
}
function jk() {
  const e = ue("togglePanel"), t = ({ parentIds: r }) => {
    e({ parentIds: r });
  };
  return {
    goTo: t,
    goToKeydown: ({ $event: r, parentIds: a }) => {
      (r.keyCode === X.enter || r.keyCode === X.space) && (t({ parentIds: a }), r.stopPropagation(), r.preventDefault());
    }
  };
}
const zk = {
  name: "AMenuSearchPanelBreadcrumbs",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    item: {
      type: Object,
      required: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      breadcrumbsItems: t
    } = Gk(e), {
      goTo: n,
      goToKeydown: r
    } = jk();
    return {
      breadcrumbsItems: t,
      goTo: n,
      goToKeydown: r
    };
  },
  render() {
    return c("li", {}, [
      c("ul", {
        class: "a_menu__breadcrumb__ul a_menu__breadcrumb__ul_search"
      }, [
        c("li", {}, [
          c(ei, {
            buttonClass: "a_btn a_btn_secondary a_btn_small a_menu__breadcrumb__ul_truncated__btn",
            buttonIconLeft: yl,
            buttonTextScreenReader: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
            buttonTitle: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
            dropdownClass: "a_menu__breadcrumb__ul_truncated__dropdown",
            hasCaret: !1,
            inBody: !0,
            ...this.breadcrumbsTruncatedDropdownProps
          }, {
            dropdown: () => [
              this.breadcrumbsItems.map((e) => c("li", {
                key: e.parentId,
                class: "a_menu__breadcrumbs__item"
              }, [
                c(rt, {
                  text: e.label,
                  title: e.label,
                  tag: "a",
                  class: [
                    "a_menu__breadcrumbs__link",
                    this.breadcrumbsLinkClass
                  ],
                  role: "button",
                  tabindex: 0,
                  onClick: () => this.goTo({ parentIds: e.parentIds }),
                  onKeydown: (t) => this.goToKeydown({ $event: t, parentIds: e.parentIds })
                }),
                c("span", {
                  class: "a_menu__breadcrumbs__item__divider"
                }, "/")
              ]))
            ]
          })
        ]),
        c($d, {
          item: this.item,
          dataProParentChildren: this.dataProParentChildren,
          isLinkInSearchPanel: !0,
          modelSearch: this.modelSearch,
          menuId: this.menuId
        }, this.$slots)
      ])
    ]);
  }
};
function Kk(e) {
  const t = f(e, "itemsWithSearch"), n = f(e, "isSearchActive");
  return {
    isNoneFound: _(() => n.value ? t.value.length === 0 : !1)
  };
}
function Yk(e, {
  isNoneFound: t = _(() => !1)
}) {
  return {
    textLocal: _(() => t.value ? "_A_MENU_2_SEARCH_NONE_FOUND_" : "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_")
  };
}
const Zk = {
  name: "AMenuSearchPanel",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    itemsWithSearch: {
      type: Array,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      isNoneFound: t
    } = Kk(e), {
      textLocal: n
    } = Yk(e, {
      isNoneFound: t
    });
    return Qe("isPanelMain", !1), Qe("isChildPanelOpen", !1), {
      isNoneFound: t,
      textLocal: n
    };
  },
  render() {
    return this.isSearchActive ? c("div", {
      class: "a_menu__panels__main a_menu__panel_search"
    }, [
      c("div", {
        class: "a_menu__navbar_top_sub"
      }, [
        c(pe, {
          class: "a_menu__navbar_top_sub__text",
          tag: "strong",
          text: this.textLocal,
          extra: {
            count: this.itemsWithSearch.length
          }
        })
      ]),
      !this.isNoneFound && c("div", {
        class: "a_vertical_scroll"
      }, [
        c("div", {
          class: "a_scroll_content"
        }, [
          c("ul", {
            class: "a_menu__listview"
          }, [
            this.itemsWithSearch.map((e) => c(zk, {
              key: e[et],
              breadcrumbsLinkClass: this.breadcrumbsLinkClass,
              breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
              dataProParentChildren: this.dataProParentChildren,
              item: e,
              menuId: this.menuId,
              modelSearch: this.modelSearch
            }, this.$slots))
          ])
        ])
      ])
    ]) : null;
  }
};
function Xk({
  onScroll: e = () => {
  },
  scrollContentRef: t = B(void 0)
}) {
  return {
    addScrollListener: () => {
      t.value.addEventListener("scroll", e);
    },
    destroyScrollListener: () => {
      t.value.removeEventListener("scroll", e);
    }
  };
}
function Jk({
  checkScroll: e = () => {
  },
  containerRef: t = B(void 0),
  scrollContentChildRef: n = B(void 0)
}) {
  const r = B(void 0), a = B(!1), l = B(void 0), o = B(!1), u = B(0), h = B(0), A = (P) => {
    const N = P[0].contentRect.height;
    (u.value === 0 || u.value !== N) && (u.value = N, e());
  }, E = (P) => {
    const N = P[0].contentRect.height;
    (h.value === 0 || h.value !== N) && (h.value = N, e());
  }, p = () => {
    r.value = new ResizeObserver(
      tl((P) => A(P), 300)
    );
  }, T = () => {
    l.value = new ResizeObserver(
      tl((P) => E(P), 300)
    );
  }, m = () => {
    a.value || (r.value.observe(t.value), a.value = !0);
  }, b = () => {
    a.value && (r.value.unobserve(t.value), a.value = !1);
  }, L = () => {
    r.value.disconnect();
  }, v = () => {
    o.value || (l.value.observe(n.value), o.value = !0);
  }, I = () => {
    o.value && (l.value.unobserve(n.value), o.value = !1);
  }, R = () => {
    l.value.disconnect();
  };
  return {
    connectObservers: () => {
      m(), v();
    },
    destroyObservers: () => {
      L(), R();
    },
    disconnectObservers: () => {
      b(), I();
    },
    initObservers: () => {
      p(), T();
    }
  };
}
function Qk(e) {
  const t = f(e, "scrollDistance"), n = B(!1), r = B(!1), a = B(void 0), l = B(!1), o = B(void 0), u = B(void 0), h = () => {
    const T = o.value;
    r.value = T.scrollTop > 0, n.value = T.scrollTop < T.scrollHeight - T.clientHeight;
  }, A = () => {
    l.value = o.value.scrollHeight > o.value.clientHeight, l.value && h();
  };
  return {
    canScrollDown: n,
    canScrollUp: r,
    checkScroll: A,
    containerRef: a,
    hasScroll: l,
    onScroll: h,
    scrollContentChildRef: u,
    scrollContentRef: o,
    scrollDown: () => {
      o.value.scrollTop += t.value, A();
    },
    scrollUp: () => {
      o.value.scrollTop -= t.value, A();
    }
  };
}
const eH = {
  name: "AVerticalScroll",
  props: {
    btnDownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnUpProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    scrollContentAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    scrollDistance: {
      type: Number,
      required: !1,
      default: 100
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    tagScrollContent: {
      type: String,
      required: !1,
      default: "div"
    }
  },
  setup(e) {
    const t = f(e, "disabled"), {
      canScrollDown: n,
      canScrollUp: r,
      checkScroll: a,
      containerRef: l,
      hasScroll: o,
      onScroll: u,
      scrollContentChildRef: h,
      scrollContentRef: A,
      scrollDown: E,
      scrollUp: p
    } = Qk(e), {
      connectObservers: T,
      destroyObservers: m,
      disconnectObservers: b,
      initObservers: L
    } = Jk({
      checkScroll: a,
      containerRef: l,
      scrollContentChildRef: h
    }), {
      addScrollListener: v,
      destroyScrollListener: I
    } = Xk({
      onScroll: u,
      scrollContentRef: A
    });
    return kr(() => {
      L(), t.value || (T(), v());
    }), Ot(() => {
      m(), I();
    }), tt(t, (R) => {
      R ? (b(), I()) : (T(), v());
    }), {
      canScrollDown: n,
      canScrollUp: r,
      containerRef: l,
      hasScroll: o,
      scrollContentChildRef: h,
      scrollContentRef: A,
      scrollDown: E,
      scrollUp: p
    };
  },
  render() {
    return c(this.tag, {
      ref: "containerRef",
      class: [
        "a_vertical_scroll",
        {
          a_vertical_scroll_scrollable: this.hasScroll && !this.disabled
        }
      ]
    }, [
      c("div", {
        class: "a_vertical_scroll__btn__wrapper a_vertical_scroll__btn__wrapper_up"
      }, [
        c(rt, {
          class: "a_btn a_btn_transparent_secondary a_btn_small a_vertical_scroll__btn a_vertical_scroll__btn_up",
          iconLeft: xc,
          disabled: !this.canScrollUp,
          tabindex: -1,
          title: "_A_VERTICAL_SCROLL_BTN_UP_TITLE_",
          textScreenReader: "_A_VERTICAL_SCROLL_BTN_UP_TITLE_",
          onClick: this.scrollUp,
          ...this.btnUpProps
        })
      ]),
      c(this.tagScrollContent, {
        ref: "scrollContentRef",
        class: "a_scroll_content",
        ...this.scrollContentAttributes
      }, [
        c("div", {
          ref: "scrollContentChildRef"
        }, [
          this.$slots.default && this.$slots.default()
        ])
      ]),
      c("div", {
        class: "a_vertical_scroll__btn__wrapper a_vertical_scroll__btn__wrapper_down"
      }, [
        c(rt, {
          class: "a_btn a_btn_transparent_secondary a_btn_small a_vertical_scroll__btn a_vertical_scroll__btn_down",
          iconLeft: cs,
          disabled: !this.canScrollDown,
          title: "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_",
          textScreenReader: "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_",
          tabindex: -1,
          onClick: this.scrollDown,
          ...this.btnDownProps
        })
      ])
    ]);
  }
};
function tH(e, {
  closeAllPanels: t = () => {
  }
}) {
  const n = f(e, "isBlockerClickable"), r = () => {
    t();
  };
  return {
    attributesBlockerClick: _(() => {
      const l = {};
      return n.value && (l.onClick = r, l.class = "a_menu__blocker a_menu_clickable"), l;
    })
  };
}
function nH(e, {
  isMenuOpen: t = _(() => !1),
  isMobileWidth: n = B(void 0),
  toggleMenu: r = () => {
  }
}) {
  const a = f(e, "isBackdropMobileClickable"), l = f(e, "useBackdropMobile"), o = _(() => l.value && t.value && n.value), u = () => {
    r({
      isOpen: !1
    });
  };
  return {
    clickAttributesBackdrop: _(() => a.value ? {
      onClick: u
    } : {}),
    isBackdropVisible: o
  };
}
function rH(e, {
  dataKeyById: t = _(() => ({})),
  dataProParent: n = _(() => ({
    main: [],
    children: {}
  })),
  isMenuLinkClicked: r = B(!1),
  isMenuOpen: a = _(() => !1),
  panelParentsOpen: l = B([])
}) {
  const o = f(e, "compareUrlCallback"), h = dR().appContext.config.globalProperties.$router, A = B([]), E = _(() => h.currentRoute), p = ({ route: L = {}, ids: v = [] }) => {
    const I = L[ul];
    return I && (v.unshift(I), p({ route: t.value[I], ids: v })), v;
  }, T = ({ routerFullPath: L, route: v }) => {
    const {
      fullPath: I
    } = h.resolve(v.to);
    return qe(o.value) ? o.value({
      fullPath: I,
      routerFullPath: L,
      item: v,
      currentRoute: h.currentRoute.value
    }) : I === L;
  }, m = ({ routes: L = [], routerFullPath: v = "/" }) => {
    let I = !1;
    return Y(L, (R) => {
      if (R.to && T({ routerFullPath: v, route: R })) {
        const y = p({ route: R, ids: [] });
        return !r.value && a.value && (l.value = y), A.value = [...y, R[et]], I = !0, !1;
      }
    }), I;
  };
  return {
    activeRoutesIds: A,
    checkAllRoutes: () => {
      const L = h.currentRoute.value.fullPath;
      let v = !1;
      v = m({ routes: n.value.main, routerFullPath: L }), !v && (Y(n.value.children, (I) => {
        if (v = m({ routes: I, routerFullPath: L }), v)
          return !1;
      }), r.value && (r.value = !1));
    },
    currentRoute: E
  };
}
const iH = "_a_children";
function aH(e) {
  const t = f(e, "data"), n = f(e, "isTranslated"), r = f(e, "keyChildren"), a = f(e, "keyId"), l = f(e, "keyLabel"), o = f(e, "keyLabelCallback"), u = ({ breadcrumbs: T = [], parentId: m, parentLabel: b }) => {
    const L = kp(T);
    return m && L.push({
      parentId: m,
      label: b
    }), L;
  }, h = ({ dataClone: T, dataFlat: m = [], parentId: b, parentLabel: L, breadcrumbs: v = [] }) => (Y(T, (I) => {
    I[et] = de(I, a.value), I[ul] = b, I[kd] = u({
      breadcrumbs: v,
      parentId: b,
      parentLabel: L
    });
    let R;
    if (o.value ? R = o.value({ item: I }) : R = de(I, l.value), n.value && Ii(R) && (R = xt({ placeholder: R })), I[Lt] = R, r.value) {
      const y = de(I, r.value);
      y && y.length && (h({
        dataClone: y,
        parentId: I[et],
        parentLabel: I[Lt],
        dataFlat: m,
        breadcrumbs: I[kd]
      }), I[iH] = y);
    }
    m.push(I);
  }), m), A = _(() => {
    const T = Se(t.value);
    let m = [];
    return m = h({ dataClone: T, dataFlat: m }), m;
  }), E = _(() => {
    const T = [], m = {};
    return Y(A.value, (b) => {
      const L = b[ul];
      ae(L) ? T.push(b) : (m[L] = m[L] || [], m[L].push(b));
    }), {
      main: T,
      children: m
    };
  });
  return {
    dataKeyById: _(() => La(A.value, et)),
    dataProParent: E
  };
}
function sH(e, {
  closeMenu: t = () => {
  },
  isMenuOpen: n = _(() => !1),
  isSubMenuOpen: r = _(() => !1),
  panelParentsOpen: a = B([]),
  togglePanel: l = () => {
  }
}) {
  const o = f(e, "menuId"), u = f(e, "useEscapeForMobile"), h = B(void 0), {
    isMobileWidth: A
  } = fn(), E = _(() => !A.value && !n.value && r.value), p = (P) => {
    if (!h.value)
      return;
    const q = h.value.querySelectorAll(os);
    if (q.length === 0) {
      P.preventDefault();
      return;
    }
    const N = q[0], U = q[q.length - 1];
    P.shiftKey ? document.activeElement === N && (U.focus(), P.preventDefault()) : document.activeElement === U && (N.focus(), P.preventDefault());
  }, T = (P) => {
    u.value && (t(), P.preventDefault(), P.stopPropagation());
  }, m = (P) => {
    const q = P || window.$event;
    q.key === "Escape" || q.keyCode === X.escape ? T(P) : (q.key === "Tab" || q.keyCode === X.tab) && p(q);
  }, b = ({ panelIndex: P, panelId: q }) => {
    const N = Xr({
      menuId: o.value,
      id: q,
      suffix: "link"
    }), U = document.getElementById(N);
    if (U) {
      if (P > 0) {
        const V = a.value.slice(0, P);
        l({ parentIds: V, withoutFocus: !0 });
      }
      U.focus();
    }
  }, L = ({ panelIndex: P }) => {
    const q = a.value[P + 1], N = Xr({
      menuId: o.value,
      id: q,
      suffix: "panel"
    }), U = document.querySelectorAll(`#${N} a.a_menu__link`);
    U.length && U[0].focus();
  }, v = ({ panelId: P }) => {
    const q = Xr({
      menuId: o.value,
      id: P,
      suffix: "link"
    }), N = document.getElementById(q);
    N && (l({ parentIds: [], withoutFocus: !0 }), N.focus());
  }, I = ({ EVENT: P, PANEL_ELEMENT: q, panelIndex: N, panelId: U }) => {
    const V = q.querySelectorAll("a.a_menu__link");
    P.shiftKey ? document.activeElement === V[0] && (N > 0 ? b({ panelIndex: N, panelId: U }) : v({ panelId: U }), P.preventDefault()) : document.activeElement === V[V.length - 1] && (N < a.value.length - 1 ? L({ panelIndex: N }) : N > 0 ? b({ panelIndex: N, panelId: U }) : v({ panelId: U }), P.preventDefault());
  }, R = (P) => {
    const q = P || window.$event;
    (q.key === "Tab" || q.keyCode === X.tab) && Y(a.value, (N, U) => {
      const V = Xr({
        menuId: o.value,
        id: N,
        suffix: "panel"
      }), j = document.getElementById(V);
      if (j && j.contains(document.activeElement))
        return I({ EVENT: q, PANEL_ELEMENT: j, panelIndex: U, panelId: N }), !1;
    });
  };
  return {
    isDesktopSubMenuVisibleWhenMenuClosed: E,
    menuRef: h,
    removeListenerForKeydownDesktop: () => {
      document.removeEventListener("keydown", R);
    },
    removeListenerForKeydownMobile: () => {
      document.removeEventListener("keydown", m);
    },
    setListenerForKeydownDesktop: () => {
      document.addEventListener("keydown", R);
    },
    setListenerForKeydownMobile: () => {
      A.value && document.addEventListener("keydown", m);
    }
  };
}
function lH(e, {
  closeAllPanels: t = () => {
  },
  isMenuOpen: n = _(() => !1),
  isMobileWidth: r = B(!1),
  resetSearch: a = () => {
  },
  toggleMenu: l = () => {
  }
}) {
  const o = f(e, "isBodyFocusAfterClick"), u = B(!1), h = () => {
    o.value && (document.body.hasAttribute("tabindex") ? document.body.focus() : (document.body.setAttribute("tabindex", "-1"), document.body.focus(), document.body.removeAttribute("tabindex")));
  };
  return {
    clickMenuLink: ({ ctrlKey: E = !1, isPanelMain: p = !1 } = {}) => {
      u.value = !0, a(), h(), (!n.value || p) && t(), r.value && !E && l({ isOpen: !1 });
    },
    isMenuLinkClicked: u
  };
}
function oH(e, {
  isMenuOpen: t = B(!1),
  toggleMenu: n = () => {
  }
}) {
  const r = f(e, "isBlockerClickable"), a = f(e, "menuId"), {
    isMobileWidth: l
  } = fn(), o = _(() => l.value ? {
    role: "dialog",
    ariaModal: !0
  } : {}), u = _(() => `${a.value}_header`);
  return {
    attributesMenuClick: _(() => {
      const A = {};
      return r.value && !t.value && (A.onClick = () => n({ isOpen: !0 }), A.class = "a_menu a_menu_clickable"), A;
    }),
    attributesMobile: o,
    headerId: u
  };
}
function uH({
  isMenuOpen: e = _(() => !1),
  panelParentsOpen: t = B([])
}) {
  return {
    isLeastOnePanelOpenAndMenuClosed: _(() => !e.value && t.value.length > 0)
  };
}
function _H(e, {
  dataKeyById: t = _(() => ({})),
  resetSearch: n = () => {
  }
}) {
  const r = f(e, "menuId"), a = B([]), l = _(() => a.value.length > 0), o = ({ parentId: E, panelParentsOpenLocal: p }) => {
    if (E) {
      p.unshift(E);
      const T = t.value[E][ul];
      return o({ parentId: T, panelParentsOpenLocal: p });
    }
    return p;
  };
  return {
    closeAllPanels: () => {
      a.value = [], n();
    },
    isSubMenuOpen: l,
    panelParentsOpen: a,
    setDefaultMenu: () => {
      n(), a.value = [];
    },
    togglePanel: ({ parentIds: E, parentId: p, isLinkInSearchPanel: T, withoutFocus: m }) => {
      if (E)
        a.value = E;
      else {
        const b = a.value.indexOf(p), L = o({ parentId: p, panelParentsOpenLocal: [] });
        !T && b !== -1 && L.splice(-1, 1), a.value = L;
      }
      m || xS({
        menuId: r.value,
        panelId: as(a.value) || ""
      }), n();
    }
  };
}
function dH(e, {
  menuRef: t = B(void 0),
  isMenuOpen: n = _(() => !1),
  panelParentsOpen: r = B([])
}) {
  const a = f(e, "menuId"), l = B({}), o = B(!1), u = ({ id: L }) => {
    const v = Xr({
      menuId: a.value,
      id: L,
      suffix: "link"
    });
    return document.getElementById(v);
  }, h = ({ id: L }) => {
    const v = Xr({
      menuId: a.value,
      id: L,
      suffix: "panel"
    });
    return document.getElementById(v);
  }, A = (L) => {
    t.value.contains(L.target) || (r.value = []);
  }, E = () => {
    o.value || (o.value = !0, document.addEventListener("click", A));
  }, p = () => {
    o.value = !1, document.removeEventListener("click", A);
  }, T = (L) => {
    if (l.value[L]) {
      l.value[L](), delete l.value[L];
      const v = h({ id: L });
      v.style.removeProperty("left"), v.style.removeProperty("top");
    }
  };
  return {
    destroyPopover: () => {
      Y(l.value, (L, v) => {
        T(v);
      }), p();
    },
    startPopper: () => {
      if (n.value)
        return;
      E();
      const L = kp(l.value);
      Y(r.value, (v) => {
        if (l.value[v]) {
          delete L[v];
          return;
        }
        const I = u({ id: v }), R = h({ id: v });
        !I || !R || (l.value[v] = pl(
          I,
          R,
          () => {
            !I || !R || ml(
              I,
              R,
              {
                placement: "right",
                middleware: [
                  Sl(),
                  Tl({ limiter: hu() })
                ]
              }
            ).then(({ x: y, y: C }) => {
              Object.assign(R.style, {
                left: `${y}px`,
                top: `${C}px`
              });
            });
          }
        ));
      }), Y(L, (v, I) => {
        T(I);
      });
    }
  };
}
function cH(e, {
  removeListenerForKeydownMobile: t = () => {
  },
  toggleMenu: n = () => {
  }
}) {
  const r = f(e, "isMenuOpenInitial"), a = B(!1), {
    isMobileWidth: l
  } = fn(), o = (E) => {
    E ? n({ isOpen: !1 }) : (n({ isOpen: r.value }), t());
  };
  return {
    destroyEventBusUpdateViewOnResize: () => {
      Rt.$on("updateViewOnResize", o);
    },
    initEventBusUpdateViewOnResize: () => {
      Rt.$on("updateViewOnResize", o);
    },
    initMenuOpenOrClose: () => {
      l.value ? n({ isOpen: !1 }) : n({ isOpen: r.value }), Jo().then(() => {
        a.value = !0;
      });
    },
    isMenuInitialized: a,
    isMobileWidth: l
  };
}
function fH(e, {
  dataKeyById: t = _(() => ({}))
}) {
  const n = f(e, "menuId"), r = B(""), a = _(() => `${n.value}_search`), l = (p) => {
    r.value = p;
  }, o = _(() => !!r.value), u = _(() => o.value ? "display: none;" : void 0), h = () => {
    o.value && (r.value = "");
  }, A = _(() => uu(r.value)), E = _(() => {
    const p = [];
    if (o.value) {
      const T = new RegExp(A.value, "gi");
      Y(t.value, (m) => {
        `${m[Lt]}`.search(T) !== -1 && p.push(m);
      });
    }
    return p;
  });
  return {
    isSearchActive: o,
    itemsWithSearch: E,
    modelSearch: r,
    resetSearch: h,
    searchInputId: a,
    styleSearchPanelMain: u,
    updateModelSearch: l
  };
}
function hH({
  searchInputId: e = _(() => {
  }),
  toggleMenu: t = () => {
  }
}) {
  const n = () => {
    t({ isOpen: !0 }), window.isScrollDisabled || setTimeout(() => {
      Qr({
        selector: `#${e.value}`
      });
    });
  };
  return {
    clickOnSearchBtn: n,
    keydownOnSearchBtn: (a) => {
      (a.keyCode === X.enter || a.keyCode === X.space) && (n(), a.stopPropagation(), a.preventDefault());
    }
  };
}
const AH = 34, EH = 20, joe = {
  name: "AMenu",
  provide() {
    return {
      keySlot: _(() => this.keySlot)
    };
  },
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link"
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    breadcrumbsTruncatedOffset: {
      type: Number,
      required: !1,
      default: () => AH + EH
    },
    buttonToggleClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_transparent_secondary a_btn_small"
    },
    buttonToggleProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canChangeBodyClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    compareUrlCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    hasSearch: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBackdropMobileClickable: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBlockerClickable: {
      type: Boolean,
      required: !1
    },
    isBodyFocusAfterClick: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLinkTruncated: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMenuOpenInitial: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTranslated: {
      type: Boolean,
      required: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: String,
      required: !1,
      default: "group"
    },
    keyIcon: {
      type: String,
      required: !1,
      default: "icon"
    },
    keyId: {
      type: String,
      required: !1,
      default: "id"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyParent: {
      type: String,
      required: !1,
      default: "parent"
    },
    keySlot: {
      type: String,
      required: !1,
      default: void 0
    },
    menuId: {
      type: String,
      required: !1,
      default: () => ot("a_menu_")
    },
    showCountChildren: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useBackdropMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useEscapeForMobile: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  setup(e) {
    const t = f(e, "isLinkTruncated"), n = f(e, "showCountChildren"), r = f(e, "breadcrumbsTruncatedOffset"), {
      dataKeyById: a,
      dataProParent: l
    } = aH(e), {
      isSearchActive: o,
      itemsWithSearch: u,
      modelSearch: h,
      resetSearch: A,
      searchInputId: E,
      styleSearchPanelMain: p,
      updateModelSearch: T
    } = fH(e, {
      dataKeyById: a
    }), {
      closeAllPanels: m,
      isSubMenuOpen: b,
      panelParentsOpen: L,
      setDefaultMenu: v,
      togglePanel: I
    } = _H(e, {
      dataKeyById: a,
      resetSearch: A
    }), {
      closeMenu: R,
      isMenuOpen: y,
      removeBodyClasses: C,
      toggleMenu: w
    } = FS(e), {
      isDesktopSubMenuVisibleWhenMenuClosed: F,
      menuRef: P,
      removeListenerForKeydownDesktop: q,
      removeListenerForKeydownMobile: N,
      setListenerForKeydownDesktop: U,
      setListenerForKeydownMobile: V
    } = sH(e, {
      closeMenu: R,
      isMenuOpen: y,
      isSubMenuOpen: b,
      panelParentsOpen: L,
      togglePanel: I
    }), {
      clickOnSearchBtn: j,
      keydownOnSearchBtn: ne
    } = hH({
      searchInputId: E,
      toggleMenu: w
    }), {
      attributesMenuClick: Z,
      attributesMobile: le,
      headerId: oe
    } = oH(e, {
      isMenuOpen: y,
      toggleMenu: w
    }), {
      destroyEventBusUpdateViewOnResize: fe,
      initEventBusUpdateViewOnResize: he,
      initMenuOpenOrClose: we,
      isMenuInitialized: Ie,
      isMobileWidth: se
    } = cH(e, {
      removeListenerForKeydownMobile: N,
      toggleMenu: w
    }), {
      clickMenuLink: me,
      isMenuLinkClicked: Le
    } = lH(e, {
      closeAllPanels: m,
      isMenuOpen: y,
      isMobileWidth: se,
      resetSearch: A,
      toggleMenu: w
    }), {
      attributesBlockerClick: ce
    } = tH(e, {
      closeAllPanels: m
    }), {
      activeRoutesIds: Ae,
      checkAllRoutes: $,
      currentRoute: ee
    } = rH(e, {
      dataKeyById: a,
      dataProParent: l,
      isMenuLinkClicked: Le,
      isMenuOpen: y,
      panelParentsOpen: L
    }), {
      destroyPopover: re,
      startPopper: be
    } = dH(e, {
      menuRef: P,
      isMenuOpen: y,
      panelParentsOpen: L
    }), {
      isLeastOnePanelOpenAndMenuClosed: xe
    } = uH({
      isMenuOpen: y,
      panelParentsOpen: L
    }), {
      clickAttributesBackdrop: He,
      isBackdropVisible: Ve
    } = nH(e, {
      isMenuOpen: y,
      isMobileWidth: se,
      toggleMenu: w
    });
    return tt(ee, () => {
      $();
    }, {
      immediate: !0,
      deep: !0
    }), tt(y, (Ye) => {
      Ie.value && (A(), m(), Ye ? (re(), V()) : N());
    }), tt(L, () => {
      be();
    }, {
      deep: !0
    }), tt(F, (Ye) => {
      Ye ? U() : q();
    }), Qe("activeRoutesIds", _(() => Ae.value)), Qe("clickMenuLink", me), Qe("isLinkTruncated", _(() => t.value)), Qe("isMenuOpen", _(() => y.value)), Qe("panelParentsOpen", L), Qe("showCountChildren", _(() => n.value)), Qe("togglePanel", I), Qe("breadcrumbsTruncatedOffset", _(() => r.value)), we(), he(), Ot(() => {
      C(), fe(), re(), q(), N();
    }), {
      activeRoutesIds: Ae,
      attributesBlockerClick: ce,
      attributesMenuClick: Z,
      attributesMobile: le,
      checkAllRoutes: $,
      clickAttributesBackdrop: He,
      clickOnSearchBtn: j,
      dataKeyById: a,
      dataProParent: l,
      headerId: oe,
      isBackdropVisible: Ve,
      isLeastOnePanelOpenAndMenuClosed: xe,
      isMenuOpen: y,
      isMobileWidth: se,
      isSearchActive: o,
      isSubMenuOpen: b,
      itemsWithSearch: u,
      keydownOnSearchBtn: ne,
      menuRef: P,
      modelSearch: h,
      panelParentsOpen: L,
      removeBodyClasses: C,
      searchInputId: E,
      setDefaultMenu: v,
      styleSearchPanelMain: p,
      toggleMenu: w,
      togglePanel: I,
      updateModelSearch: T
    };
  },
  render() {
    return c("nav", {
      ref: "menuRef",
      id: this.menuId,
      "aria-labelledby": this.headerId,
      class: [
        "a_menu",
        {
          a_menu_sub_open: this.isSubMenuOpen,
          a_menu_open: this.isMenuOpen,
          a_menu_close: !this.isMenuOpen,
          a_menu_mobile: this.isMobileWidth
        }
      ],
      ...this.attributesMobile,
      ...this.attributesMenuClick
    }, [
      c("div", {
        class: "a_menu__navbar_top"
      }, [
        c(Lk, {
          buttonToggleProps: this.buttonToggleProps,
          canChangeBodyClass: this.canChangeBodyClass,
          class: this.buttonToggleClass,
          insideMenu: !0,
          menuId: this.menuId
        }),
        this.$slots.menuSearch && this.$slots.menuSearch(),
        this.hasSearch && c(Sn, {
          id: this.searchInputId,
          class: "a_menu__navbar_top__search",
          modelValue: this.modelSearch,
          label: "_A_MENU_2_SEARCH_",
          "onUpdate:modelValue": this.updateModelSearch
        })
      ]),
      c("div", {
        class: "a_menu__panels__main",
        style: this.styleSearchPanelMain
      }, [
        c("div", {
          class: "a_menu__navbar_top_sub"
        }, [
          c(pe, {
            id: this.headerId,
            class: "a_menu__navbar_top_sub__text",
            tag: "strong",
            text: "_A_MENU_2_MAIN_MENU_"
          }),
          this.hasSearch && c(rt, {
            role: "button",
            tabindex: 0,
            tag: "a",
            class: "a_menu__navbar_top_sub__search a_menu__link a_menu__link_btn",
            iconLeft: Il,
            iconClass: "a_menu__link__icon",
            title: "_A_MENU_2_OPEN_SEARCH_",
            textScreenReader: "_A_MENU_2_OPEN_SEARCH_",
            onClick: this.clickOnSearchBtn,
            onKeydown: this.keydownOnSearchBtn
          })
        ]),
        c(eH, {
          class: {
            a_menu__vertical_scroll_hidden: this.isLeastOnePanelOpenAndMenuClosed
          },
          disabled: this.isMenuOpen || this.isLeastOnePanelOpenAndMenuClosed
        }, () => [
          c(VE, {
            attributesBlockerClick: this.attributesBlockerClick,
            dataKeyById: this.dataKeyById,
            dataProParentChildren: this.dataProParent.children,
            isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
            isPanelMain: !0,
            isSearchActive: this.isSearchActive,
            keyGroup: this.keyGroup,
            keyIcon: this.keyIcon,
            menuId: this.menuId,
            paneIndex: "00",
            panelItems: this.dataProParent.main,
            panelParentsOpen: this.panelParentsOpen
          }, this.$slots)
        ]),
        c("div", {
          class: "a_menu__panels"
        }, [
          Object.keys(this.dataProParent.children).map((e, t) => c(VE, {
            key: e,
            attributesBlockerClick: {},
            breadcrumbsLinkClass: this.breadcrumbsLinkClass,
            breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
            dataKeyById: this.dataKeyById,
            dataProParentChildren: this.dataProParent.children,
            isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
            isSearchActive: this.isSearchActive,
            keyGroup: this.keyGroup,
            keyIcon: this.keyIcon,
            menuId: this.menuId,
            paneIndex: t,
            panelItems: this.dataProParent.children[e],
            panelParentsOpen: this.panelParentsOpen,
            parentId: e
          }, this.$slots))
        ])
      ]),
      c(Zk, {
        breadcrumbsLinkClass: this.breadcrumbsLinkClass,
        breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
        dataProParentChildren: this.dataProParent.children,
        isSearchActive: this.isSearchActive,
        isSearchBreadcrumbsTruncated: this.isSearchBreadcrumbsTruncated,
        itemsWithSearch: this.itemsWithSearch,
        menuId: this.menuId,
        modelSearch: this.modelSearch
      }, this.$slots),
      this.isBackdropVisible ? c(ti, {
        to: "body"
      }, [
        c("div", {
          class: "a_menu__backdrop a_backdrop a_backdrop_fade",
          "aria-hidden": !0,
          ...this.clickAttributesBackdrop
        })
      ]) : ""
    ]);
  }
};
function pH({
  isModalHidden: e = B(!1)
}) {
  const t = () => {
    e.value = !0;
  };
  return {
    destroyEventBusCloseFromOutside: () => {
      Rt.$off("closeModalConfirm", t);
    },
    initEventBusCloseFromOutside: () => {
      Rt.$on("closeModalConfirm", t);
    }
  };
}
const zoe = {
  name: "AModalConfirm",
  setup() {
    const {
      closeConfirm: e,
      confirmOptions: t,
      isModalHidden: n
    } = Xc(), {
      destroyEventBusCloseFromOutside: r,
      initEventBusCloseFromOutside: a
    } = pH({
      isModalHidden: n
    }), l = _(() => ({
      isModalHidden: n.value,
      isConfirm: !0,
      ...t.value,
      showCloseButtonHeader: !1,
      close: e
    }));
    return a(), Ot(() => {
      r();
    }), {
      modalProps: l
    };
  },
  render() {
    return c(Cu, this.modalProps, this.$slots);
  }
};
function TH(e) {
  const t = f(e, "stepIndex"), n = f(e, "stepActiveComputed"), r = _(() => n.value === t.value), a = _(() => t.value < n.value);
  return {
    isStepActive: r,
    isStepBeforeActive: a
  };
}
function SH(e, {
  isStepDisabled: t = _(() => !1),
  isStepActive: n = _(() => !1)
}) {
  const r = f(e, "id"), a = f(e, "stepIndex"), l = _(() => t.value || n.value ? -1 : 0), o = _(() => n.value ? {
    "aria-current": "step"
  } : {}), u = _(() => `${r.value}_step_text_${a.value}`), h = _(() => `${r.value}_step_status_text_${a.value}`);
  return {
    ariaCurrentAttributes: o,
    tabindex: l,
    stepStatusTextId: h,
    stepTextId: u
  };
}
function qS(e) {
  const t = f(e, "id"), n = f(e, "stepIndex");
  return {
    contentId: _(() => `${t.value}_${n.value}_content`)
  };
}
function mH(e) {
  const t = f(e, "step"), n = f(e, "stepIndex"), r = f(e, "stepActiveComputed"), a = f(e, "isForwardStepButtonDisabled"), l = f(e, "isBackStepButtonDisabled"), o = f(e, "isForwardButtonDisabled"), u = f(e, "isBackButtonDisabled"), h = _(() => n.value < r.value), A = _(() => n.value > r.value);
  return {
    isStepDisabled: _(() => t.value.disabled ? !0 : A.value ? o.value || a.value : h.value ? u.value || l.value : !1)
  };
}
function bH(e, { emit: t }, {
  isStepDisabled: n = _(() => !1)
}) {
  const r = f(e, "step"), a = f(e, "stepIndex"), l = ({ $event: u }) => {
    n.value || t("onStepClick", {
      $event: u,
      step: r.value,
      stepIndex: a.value
    });
  };
  return {
    onClick: l,
    onKeydown: (u) => {
      (u.keyCode === X.enter || u.keyCode === X.space) && (l({ $event: u }), u.preventDefault(), u.stopPropagation());
    }
  };
}
function LH(e) {
  const t = f(e, "step"), n = f(e, "stepIconError"), r = f(e, "stepIconErrorText"), a = f(e, "stepIconWarning"), l = f(e, "stepIconWarningText"), o = _(() => {
    if (t.value.error)
      return n.value;
    if (t.value.warning)
      return a.value;
  }), u = _(() => {
    if (t.value.error)
      return r.value;
    if (t.value.warning)
      return l.value;
  });
  return {
    iconErrorWarning: o,
    titleIconErrorWarning: u
  };
}
function vH(e, {
  isStepActive: t = _(() => !1),
  isStepBeforeActive: n = _(() => !1),
  isStepDisabled: r = _(() => !1)
}) {
  const a = f(e, "step");
  return {
    linkClass: _(() => ["a_wizard__step__link", {
      active: t.value,
      before_active: n.value,
      default: r.value,
      done: !t.value && !r.value,
      error: a.value.error,
      warning: a.value.warning
    }])
  };
}
function IH(e, {
  isStepActive: t = _(() => !1)
}) {
  const n = f(e, "isMobile"), r = f(e, "isStepNumberVisible"), a = f(e, "showOnlyActiveStepMobile"), l = f(e, "stepIndex"), o = _(() => l.value + 1), u = _(() => n.value && a.value && t.value), h = _(() => r.value ? u.value ? "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_" : o.value : "");
  return {
    stepNumber: o,
    stepNumberText: h
  };
}
function gH(e, {
  isStepActive: t = _(() => !1),
  isStepBeforeActive: n = _(() => !1)
}) {
  return {
    statusText: _(() => t.value ? "_A_WIZARD_STEP_ACTIVE_" : n.value ? "_A_WIZARD_STEP_VISITED_" : "_A_WIZARD_STEP_UPCOMING_")
  };
}
const yH = {
  name: "AWizardStep",
  props: {
    extra: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isMobile: {
      type: Boolean,
      required: !0
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    step: {
      type: Object,
      required: !0
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: Eu
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: Au
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    stepIndex: {
      type: Number,
      required: !0
    },
    stepsCount: {
      type: Number,
      required: !0
    }
  },
  emits: [
    "onStepClick"
  ],
  setup(e, t) {
    const {
      isStepActive: n,
      isStepBeforeActive: r
    } = TH(e), {
      stepNumber: a,
      stepNumberText: l
    } = IH(e, {
      isStepActive: n
    }), {
      isStepDisabled: o
    } = mH(e), {
      linkClass: u
    } = vH(e, {
      isStepActive: n,
      isStepBeforeActive: r,
      isStepDisabled: o
    }), {
      onClick: h,
      onKeydown: A
    } = bH(e, t, {
      isStepDisabled: o
    }), {
      ariaCurrentAttributes: E,
      stepTextId: p,
      stepStatusTextId: T,
      tabindex: m
    } = SH(e, {
      isStepDisabled: o,
      isStepActive: n
    }), {
      contentId: b
    } = qS(e), {
      statusText: L
    } = gH(e, {
      isStepActive: n,
      isStepBeforeActive: r
    }), {
      iconErrorWarning: v,
      titleIconErrorWarning: I
    } = LH(e);
    return {
      ariaCurrentAttributes: E,
      contentId: b,
      iconErrorWarning: v,
      isStepActive: n,
      isStepDisabled: o,
      linkClass: u,
      onClick: h,
      onKeydown: A,
      statusText: L,
      stepNumber: a,
      stepNumberText: l,
      stepStatusTextId: T,
      stepTextId: p,
      tabindex: m,
      titleIconErrorWarning: I
    };
  },
  render() {
    return c(
      "li",
      {
        class: [
          "a_wizard__step",
          {
            a_wizard__step_active: this.isStepActive
          }
        ]
      },
      [
        c(Oe, {
          "aria-controls": this.contentId,
          "aria-describedby": this.stepStatusTextId,
          ariaDisabled: this.isStepDisabled,
          class: this.linkClass,
          classDefault: "",
          classDisabled: "disabled",
          role: "button",
          tabindex: this.tabindex,
          title: this.step.title,
          type: "link",
          onClick: this.onClick,
          onKeydown: this.onKeydown,
          ...this.ariaCurrentAttributes
        }, () => this.step.slotLabel && this.$slots[this.step.slotLabel] ? this.$slots[this.step.slotLabel]({
          isStepActive: this.isStepActive,
          isStepDisabled: this.isStepDisabled,
          step: this.step,
          stepIndex: this.stepIndex,
          stepNumber: this.stepNumber,
          stepTextId: this.stepTextId
        }) : [
          this.isStepNumberVisible ? c("span", {
            class: "a_wizard__step__number"
          }, [
            this.step.icon ? c(st, {
              class: "a_wizard__step__number__icon",
              icon: this.step.icon
            }) : c(pe, {
              class: "a_wizard__step__number__text",
              tag: "span",
              text: this.stepNumberText,
              extra: {
                stepActive: this.stepNumber,
                stepsCount: this.stepsCount
              }
            })
          ]) : "",
          c("span", {
            class: "a_wizard__step__text"
          }, [
            c(pe, {
              id: this.stepTextId,
              class: "a_wizard__step__text__child",
              extra: this.extra,
              html: this.step.label,
              tag: "span"
            }),
            this.iconErrorWarning ? c(Oe, {
              iconClass: "a_wizard__step__text__icon",
              iconLeft: this.iconErrorWarning,
              tag: "span",
              textScreenReader: this.titleIconErrorWarning,
              title: this.titleIconErrorWarning,
              type: "text"
            }) : ""
          ])
        ]),
        c(pe, {
          id: this.stepStatusTextId,
          class: "a_sr_only",
          tag: "span",
          text: this.statusText
        }),
        c("span", {
          class: "a_wizard__step__divider",
          ariaHidden: !0
        })
      ]
    );
  }
};
function RH(e) {
  const t = f(e, "stepIndex"), n = f(e, "stepActiveComputed");
  return {
    isStepActive: _(() => t.value === n.value)
  };
}
function OH(e) {
  const t = f(e, "id"), n = f(e, "stepIndex");
  return {
    focusId: _(() => `${t.value}_${n.value}_focus`)
  };
}
function CH(e, {
  isStepActive: t = _(() => !1)
}) {
  const n = f(e, "stepsVisitedComputed"), r = f(e, "stepIndex"), a = _(() => t.value ? "" : "display: none;");
  return {
    isStepRender: _(() => t.value || n.value[r.value]),
    styleStep: a
  };
}
const NH = {
  name: "AWizardTab",
  props: {
    extra: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    step: {
      type: Object,
      required: !0
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    stepIndex: {
      type: Number,
      required: !0
    },
    stepsVisitedComputed: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    wizardAriaDescribedby: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      isStepActive: t
    } = RH(e), {
      isStepRender: n,
      styleStep: r
    } = CH(e, {
      isStepActive: t
    }), {
      focusId: a
    } = OH(e), {
      contentId: l
    } = qS(e);
    return {
      contentId: l,
      focusId: a,
      isStepRender: n,
      styleStep: r
    };
  },
  render() {
    return c("div", {
      id: this.contentId
    }, [
      this.isStepRender && c("div", {
        class: "a_wizard__tab_pane",
        style: this.styleStep
      }, [
        c("div", {
          id: this.focusId,
          class: "a_sr_only",
          tabindex: "-1",
          "aria-describedby": this.wizardAriaDescribedby
        }),
        this.$slots[this.step.slot] && this.$slots[this.step.slot]({
          step: this.step,
          stepIndex: this.stepIndex
        })
      ])
    ]);
  }
};
function DH(e, {
  isStepActiveFirst: t = _(() => !1),
  isStepActiveLast: n = _(() => !1)
}) {
  const r = f(e, "isBackButtonDisabled"), a = f(e, "isForwardButtonDisabled"), l = _(() => t.value ? !0 : r.value), o = _(() => n.value ? !0 : a.value);
  return {
    isBackButtonDisabledLocal: l,
    isForwardButtonDisabledLocal: o
  };
}
function BH(e, { emit: t }) {
  return {
    goOneStepBack: () => {
      t("goOneStepBack");
    },
    goOneStepForward: () => {
      t("goOneStepForward");
    }
  };
}
function wH(e) {
  const t = f(e, "steps"), n = f(e, "stepActiveComputed"), r = _(() => n.value === 0), a = _(() => n.value === t.value.length - 1);
  return {
    isStepActiveFirst: r,
    isStepActiveLast: a
  };
}
function PH(e, {
  isStepActiveFirst: t = _(() => !1),
  isStepActiveLast: n = _(() => !1)
}) {
  const r = f(e, "isForwardButtonHide"), a = f(e, "isBackButtonHide"), l = f(e, "isForwardLastButtonHide"), o = f(e, "isBackFirstButtonHide"), u = _(() => a.value ? !0 : t.value && o.value), h = _(() => r.value ? !0 : n.value && l.value);
  return {
    isBackButtonHideLocal: u,
    isForwardButtonHideLocal: h
  };
}
const xH = {
  name: "AWizardToolbar",
  props: {
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    steps: {
      type: Array,
      required: !0
    }
  },
  emits: [
    "goOneStepBack",
    "goOneStepForward"
  ],
  setup(e, t) {
    const {
      isStepActiveFirst: n,
      isStepActiveLast: r
    } = wH(e), {
      isBackButtonDisabledLocal: a,
      isForwardButtonDisabledLocal: l
    } = DH(e, {
      isStepActiveFirst: n,
      isStepActiveLast: r
    }), {
      isBackButtonHideLocal: o,
      isForwardButtonHideLocal: u
    } = PH(e, {
      isStepActiveFirst: n,
      isStepActiveLast: r
    }), {
      goOneStepBack: h,
      goOneStepForward: A
    } = BH(e, t);
    return {
      goOneStepBack: h,
      goOneStepForward: A,
      isBackButtonDisabledLocal: a,
      isBackButtonHideLocal: o,
      isForwardButtonDisabledLocal: l,
      isForwardButtonHideLocal: u
    };
  },
  render() {
    return c(
      "div",
      {
        class: "a_wizard__toolbar"
      },
      [
        !this.isBackButtonHideLocal && c(Oe, {
          class: this.backButtonClass,
          disabled: this.isBackButtonDisabledLocal,
          extra: this.extra,
          iconLeft: this.backButtonIconLeft,
          iconRight: this.backButtonIconRight,
          loading: this.isButtonsLoading,
          text: this.backButtonText,
          textAriaHidden: !0,
          textScreenReader: this.backButtonTitle,
          title: this.backButtonTitle,
          type: "button",
          onClick: this.goOneStepBack,
          ...this.backButtonAttributes
        }),
        !this.isForwardButtonHideLocal && c(Oe, {
          class: this.forwardButtonClass,
          disabled: this.isForwardButtonDisabledLocal,
          extra: this.extra,
          iconLeft: this.forwardButtonIconLeft,
          iconRight: this.forwardButtonIconRight,
          loading: this.isButtonsLoading,
          text: this.forwardButtonText,
          textAriaHidden: !0,
          textScreenReader: this.forwardButtonTitle,
          title: this.forwardButtonTitle,
          type: "button",
          onClick: this.goOneStepForward,
          ...this.forwardButtonAttributes
        }),
        this.$slots.toolbar && this.$slots.toolbar()
      ]
    );
  }
};
function FH(e, {
  stepActiveComputed: t = _(() => 0)
}) {
  const n = f(e, "ariaLabel"), r = f(e, "ariaLabelSteps"), a = f(e, "extra"), l = f(e, "id"), {
    getTranslationAttributes: o,
    getTranslatedText: u,
    isPlaceholderTranslate: h
  } = Oa(), A = _(() => h(n.value)), E = _(() => h(r.value)), p = _(() => {
    if (A.value)
      return u({
        placeholder: n.value,
        extra: a.value
      });
  }), T = _(() => {
    if (E.value)
      return u({
        placeholder: r.value,
        extra: a.value
      });
  }), m = _(() => o({
    attr: "aria-label",
    value: n.value,
    translation: p.value,
    isTranslate: A.value
  })), b = _(() => o({
    attr: "aria-label",
    value: r.value,
    translation: T.value,
    isTranslate: E.value
  })), L = _(() => `${l.value}_progressbar`), v = _(() => `${l.value}_step_text_${t.value}`), I = _(() => `${L.value} ${v.value}`);
  return {
    ariaLabelAttributes: m,
    ariaLabelStepsAttributes: b,
    idProgressbar: L,
    wizardAriaDescribedby: I
  };
}
var Gs = { exports: {} };
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
var MH = Gs.exports, GE;
function qH() {
  return GE || (GE = 1, function(e, t) {
    (function() {
      var n, r = "4.17.21", a = 200, l = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", o = "Expected a function", u = "Invalid `variable` option passed into `_.template`", h = "__lodash_hash_undefined__", A = 500, E = "__lodash_placeholder__", p = 1, T = 2, m = 4, b = 1, L = 2, v = 1, I = 2, R = 4, y = 8, C = 16, w = 32, F = 64, P = 128, q = 256, N = 512, U = 30, V = "...", j = 800, ne = 16, Z = 1, le = 2, oe = 3, fe = 1 / 0, he = 9007199254740991, we = 17976931348623157e292, Ie = NaN, se = 4294967295, me = se - 1, Le = se >>> 1, ce = [
        ["ary", P],
        ["bind", v],
        ["bindKey", I],
        ["curry", y],
        ["curryRight", C],
        ["flip", N],
        ["partial", w],
        ["partialRight", F],
        ["rearg", q]
      ], Ae = "[object Arguments]", $ = "[object Array]", ee = "[object AsyncFunction]", re = "[object Boolean]", be = "[object Date]", xe = "[object DOMException]", He = "[object Error]", Ve = "[object Function]", Ye = "[object GeneratorFunction]", Re = "[object Map]", je = "[object Number]", ft = "[object Null]", $e = "[object Object]", it = "[object Promise]", _t = "[object Proxy]", mt = "[object RegExp]", vt = "[object Set]", lr = "[object String]", $n = "[object Symbol]", or = "[object Undefined]", Kt = "[object WeakMap]", kn = "[object WeakSet]", Hn = "[object ArrayBuffer]", Ln = "[object DataView]", Ir = "[object Float32Array]", vn = "[object Float64Array]", gr = "[object Int8Array]", Un = "[object Int16Array]", Wn = "[object Int32Array]", Vt = "[object Uint8Array]", hn = "[object Uint8ClampedArray]", ur = "[object Uint16Array]", _r = "[object Uint32Array]", ta = /\b__p \+= '';/g, yr = /\b(__p \+=) '' \+/g, Rr = /(__e\(.*?\)|\b__t\)) \+\n'';/g, ui = /&(?:amp|lt|gt|quot|#39);/g, dr = /[&<>"']/g, As = RegExp(ui.source), Es = RegExp(dr.source), It = /<%-([\s\S]+?)%>/g, Or = /<%([\s\S]+?)%>/g, na = /<%=([\s\S]+?)%>/g, Na = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, ra = /^\w*$/, Da = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, _i = /[\\^$.*+?()[\]{}|]/g, ps = RegExp(_i.source), Yt = /^\s+/, di = /\s/, Ba = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, wa = /\{\n\/\* \[wrapped with (.+)\] \*/, cr = /,? & /, ia = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, sn = /[()=,{}\[\]\/\s]/, Pa = /\\(\\)?/g, Rl = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, Ts = /\w*$/, Ol = /^[-+]0x[0-9a-f]+$/i, Du = /^0b[01]+$/i, Ce = /^\[object .+?Constructor\]$/, k = /^0o[0-7]+$/i, ie = /^(?:0|[1-9]\d*)$/, ve = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, dt = /($^)/, Ht = /['\n\r\u2028\u2029\\]/g, gt = "\\ud800-\\udfff", Zt = "\\u0300-\\u036f", Vn = "\\ufe20-\\ufe2f", aa = "\\u20d0-\\u20ff", Ut = Zt + Vn + aa, Ss = "\\u2700-\\u27bf", ms = "a-z\\xdf-\\xf6\\xf8-\\xff", sm = "\\xac\\xb1\\xd7\\xf7", lm = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", om = "\\u2000-\\u206f", um = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", Qc = "A-Z\\xc0-\\xd6\\xd8-\\xde", ef = "\\ufe0e\\ufe0f", tf = sm + lm + om + um, Bu = "['’]", _m = "[" + gt + "]", nf = "[" + tf + "]", Cl = "[" + Ut + "]", rf = "\\d+", dm = "[" + Ss + "]", af = "[" + ms + "]", sf = "[^" + gt + tf + rf + Ss + ms + Qc + "]", wu = "\\ud83c[\\udffb-\\udfff]", cm = "(?:" + Cl + "|" + wu + ")", lf = "[^" + gt + "]", Pu = "(?:\\ud83c[\\udde6-\\uddff]){2}", xu = "[\\ud800-\\udbff][\\udc00-\\udfff]", xa = "[" + Qc + "]", of = "\\u200d", uf = "(?:" + af + "|" + sf + ")", fm = "(?:" + xa + "|" + sf + ")", _f = "(?:" + Bu + "(?:d|ll|m|re|s|t|ve))?", df = "(?:" + Bu + "(?:D|LL|M|RE|S|T|VE))?", cf = cm + "?", ff = "[" + ef + "]?", hm = "(?:" + of + "(?:" + [lf, Pu, xu].join("|") + ")" + ff + cf + ")*", Am = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", Em = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", hf = ff + cf + hm, pm = "(?:" + [dm, Pu, xu].join("|") + ")" + hf, Tm = "(?:" + [lf + Cl + "?", Cl, Pu, xu, _m].join("|") + ")", Sm = RegExp(Bu, "g"), mm = RegExp(Cl, "g"), Fu = RegExp(wu + "(?=" + wu + ")|" + Tm + hf, "g"), bm = RegExp([
        xa + "?" + af + "+" + _f + "(?=" + [nf, xa, "$"].join("|") + ")",
        fm + "+" + df + "(?=" + [nf, xa + uf, "$"].join("|") + ")",
        xa + "?" + uf + "+" + _f,
        xa + "+" + df,
        Em,
        Am,
        rf,
        pm
      ].join("|"), "g"), Lm = RegExp("[" + of + gt + Ut + ef + "]"), vm = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, Im = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
      ], gm = -1, pt = {};
      pt[Ir] = pt[vn] = pt[gr] = pt[Un] = pt[Wn] = pt[Vt] = pt[hn] = pt[ur] = pt[_r] = !0, pt[Ae] = pt[$] = pt[Hn] = pt[re] = pt[Ln] = pt[be] = pt[He] = pt[Ve] = pt[Re] = pt[je] = pt[$e] = pt[mt] = pt[vt] = pt[lr] = pt[Kt] = !1;
      var At = {};
      At[Ae] = At[$] = At[Hn] = At[Ln] = At[re] = At[be] = At[Ir] = At[vn] = At[gr] = At[Un] = At[Wn] = At[Re] = At[je] = At[$e] = At[mt] = At[vt] = At[lr] = At[$n] = At[Vt] = At[hn] = At[ur] = At[_r] = !0, At[He] = At[Ve] = At[Kt] = !1;
      var ym = {
        // Latin-1 Supplement block.
        À: "A",
        Á: "A",
        Â: "A",
        Ã: "A",
        Ä: "A",
        Å: "A",
        à: "a",
        á: "a",
        â: "a",
        ã: "a",
        ä: "a",
        å: "a",
        Ç: "C",
        ç: "c",
        Ð: "D",
        ð: "d",
        È: "E",
        É: "E",
        Ê: "E",
        Ë: "E",
        è: "e",
        é: "e",
        ê: "e",
        ë: "e",
        Ì: "I",
        Í: "I",
        Î: "I",
        Ï: "I",
        ì: "i",
        í: "i",
        î: "i",
        ï: "i",
        Ñ: "N",
        ñ: "n",
        Ò: "O",
        Ó: "O",
        Ô: "O",
        Õ: "O",
        Ö: "O",
        Ø: "O",
        ò: "o",
        ó: "o",
        ô: "o",
        õ: "o",
        ö: "o",
        ø: "o",
        Ù: "U",
        Ú: "U",
        Û: "U",
        Ü: "U",
        ù: "u",
        ú: "u",
        û: "u",
        ü: "u",
        Ý: "Y",
        ý: "y",
        ÿ: "y",
        Æ: "Ae",
        æ: "ae",
        Þ: "Th",
        þ: "th",
        ß: "ss",
        // Latin Extended-A block.
        Ā: "A",
        Ă: "A",
        Ą: "A",
        ā: "a",
        ă: "a",
        ą: "a",
        Ć: "C",
        Ĉ: "C",
        Ċ: "C",
        Č: "C",
        ć: "c",
        ĉ: "c",
        ċ: "c",
        č: "c",
        Ď: "D",
        Đ: "D",
        ď: "d",
        đ: "d",
        Ē: "E",
        Ĕ: "E",
        Ė: "E",
        Ę: "E",
        Ě: "E",
        ē: "e",
        ĕ: "e",
        ė: "e",
        ę: "e",
        ě: "e",
        Ĝ: "G",
        Ğ: "G",
        Ġ: "G",
        Ģ: "G",
        ĝ: "g",
        ğ: "g",
        ġ: "g",
        ģ: "g",
        Ĥ: "H",
        Ħ: "H",
        ĥ: "h",
        ħ: "h",
        Ĩ: "I",
        Ī: "I",
        Ĭ: "I",
        Į: "I",
        İ: "I",
        ĩ: "i",
        ī: "i",
        ĭ: "i",
        į: "i",
        ı: "i",
        Ĵ: "J",
        ĵ: "j",
        Ķ: "K",
        ķ: "k",
        ĸ: "k",
        Ĺ: "L",
        Ļ: "L",
        Ľ: "L",
        Ŀ: "L",
        Ł: "L",
        ĺ: "l",
        ļ: "l",
        ľ: "l",
        ŀ: "l",
        ł: "l",
        Ń: "N",
        Ņ: "N",
        Ň: "N",
        Ŋ: "N",
        ń: "n",
        ņ: "n",
        ň: "n",
        ŋ: "n",
        Ō: "O",
        Ŏ: "O",
        Ő: "O",
        ō: "o",
        ŏ: "o",
        ő: "o",
        Ŕ: "R",
        Ŗ: "R",
        Ř: "R",
        ŕ: "r",
        ŗ: "r",
        ř: "r",
        Ś: "S",
        Ŝ: "S",
        Ş: "S",
        Š: "S",
        ś: "s",
        ŝ: "s",
        ş: "s",
        š: "s",
        Ţ: "T",
        Ť: "T",
        Ŧ: "T",
        ţ: "t",
        ť: "t",
        ŧ: "t",
        Ũ: "U",
        Ū: "U",
        Ŭ: "U",
        Ů: "U",
        Ű: "U",
        Ų: "U",
        ũ: "u",
        ū: "u",
        ŭ: "u",
        ů: "u",
        ű: "u",
        ų: "u",
        Ŵ: "W",
        ŵ: "w",
        Ŷ: "Y",
        ŷ: "y",
        Ÿ: "Y",
        Ź: "Z",
        Ż: "Z",
        Ž: "Z",
        ź: "z",
        ż: "z",
        ž: "z",
        Ĳ: "IJ",
        ĳ: "ij",
        Œ: "Oe",
        œ: "oe",
        ŉ: "'n",
        ſ: "s"
      }, Rm = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      }, Om = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      }, Cm = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
      }, Nm = parseFloat, Dm = parseInt, Af = typeof So == "object" && So && So.Object === Object && So, Bm = typeof self == "object" && self && self.Object === Object && self, Gt = Af || Bm || Function("return this")(), Mu = t && !t.nodeType && t, sa = Mu && !0 && e && !e.nodeType && e, Ef = sa && sa.exports === Mu, qu = Ef && Af.process, Gn = function() {
        try {
          var H = sa && sa.require && sa.require("util").types;
          return H || qu && qu.binding && qu.binding("util");
        } catch {
        }
      }(), pf = Gn && Gn.isArrayBuffer, Tf = Gn && Gn.isDate, Sf = Gn && Gn.isMap, mf = Gn && Gn.isRegExp, bf = Gn && Gn.isSet, Lf = Gn && Gn.isTypedArray;
      function In(H, K, G) {
        switch (G.length) {
          case 0:
            return H.call(K);
          case 1:
            return H.call(K, G[0]);
          case 2:
            return H.call(K, G[0], G[1]);
          case 3:
            return H.call(K, G[0], G[1], G[2]);
        }
        return H.apply(K, G);
      }
      function wm(H, K, G, Ee) {
        for (var Fe = -1, at = H == null ? 0 : H.length; ++Fe < at; ) {
          var Mt = H[Fe];
          K(Ee, Mt, G(Mt), H);
        }
        return Ee;
      }
      function jn(H, K) {
        for (var G = -1, Ee = H == null ? 0 : H.length; ++G < Ee && K(H[G], G, H) !== !1; )
          ;
        return H;
      }
      function Pm(H, K) {
        for (var G = H == null ? 0 : H.length; G-- && K(H[G], G, H) !== !1; )
          ;
        return H;
      }
      function vf(H, K) {
        for (var G = -1, Ee = H == null ? 0 : H.length; ++G < Ee; )
          if (!K(H[G], G, H))
            return !1;
        return !0;
      }
      function ci(H, K) {
        for (var G = -1, Ee = H == null ? 0 : H.length, Fe = 0, at = []; ++G < Ee; ) {
          var Mt = H[G];
          K(Mt, G, H) && (at[Fe++] = Mt);
        }
        return at;
      }
      function Nl(H, K) {
        var G = H == null ? 0 : H.length;
        return !!G && Fa(H, K, 0) > -1;
      }
      function $u(H, K, G) {
        for (var Ee = -1, Fe = H == null ? 0 : H.length; ++Ee < Fe; )
          if (G(K, H[Ee]))
            return !0;
        return !1;
      }
      function St(H, K) {
        for (var G = -1, Ee = H == null ? 0 : H.length, Fe = Array(Ee); ++G < Ee; )
          Fe[G] = K(H[G], G, H);
        return Fe;
      }
      function fi(H, K) {
        for (var G = -1, Ee = K.length, Fe = H.length; ++G < Ee; )
          H[Fe + G] = K[G];
        return H;
      }
      function ku(H, K, G, Ee) {
        var Fe = -1, at = H == null ? 0 : H.length;
        for (Ee && at && (G = H[++Fe]); ++Fe < at; )
          G = K(G, H[Fe], Fe, H);
        return G;
      }
      function xm(H, K, G, Ee) {
        var Fe = H == null ? 0 : H.length;
        for (Ee && Fe && (G = H[--Fe]); Fe--; )
          G = K(G, H[Fe], Fe, H);
        return G;
      }
      function Hu(H, K) {
        for (var G = -1, Ee = H == null ? 0 : H.length; ++G < Ee; )
          if (K(H[G], G, H))
            return !0;
        return !1;
      }
      var Fm = Uu("length");
      function Mm(H) {
        return H.split("");
      }
      function qm(H) {
        return H.match(ia) || [];
      }
      function If(H, K, G) {
        var Ee;
        return G(H, function(Fe, at, Mt) {
          if (K(Fe, at, Mt))
            return Ee = at, !1;
        }), Ee;
      }
      function Dl(H, K, G, Ee) {
        for (var Fe = H.length, at = G + (Ee ? 1 : -1); Ee ? at-- : ++at < Fe; )
          if (K(H[at], at, H))
            return at;
        return -1;
      }
      function Fa(H, K, G) {
        return K === K ? Zm(H, K, G) : Dl(H, gf, G);
      }
      function $m(H, K, G, Ee) {
        for (var Fe = G - 1, at = H.length; ++Fe < at; )
          if (Ee(H[Fe], K))
            return Fe;
        return -1;
      }
      function gf(H) {
        return H !== H;
      }
      function yf(H, K) {
        var G = H == null ? 0 : H.length;
        return G ? Vu(H, K) / G : Ie;
      }
      function Uu(H) {
        return function(K) {
          return K == null ? n : K[H];
        };
      }
      function Wu(H) {
        return function(K) {
          return H == null ? n : H[K];
        };
      }
      function Rf(H, K, G, Ee, Fe) {
        return Fe(H, function(at, Mt, ht) {
          G = Ee ? (Ee = !1, at) : K(G, at, Mt, ht);
        }), G;
      }
      function km(H, K) {
        var G = H.length;
        for (H.sort(K); G--; )
          H[G] = H[G].value;
        return H;
      }
      function Vu(H, K) {
        for (var G, Ee = -1, Fe = H.length; ++Ee < Fe; ) {
          var at = K(H[Ee]);
          at !== n && (G = G === n ? at : G + at);
        }
        return G;
      }
      function Gu(H, K) {
        for (var G = -1, Ee = Array(H); ++G < H; )
          Ee[G] = K(G);
        return Ee;
      }
      function Hm(H, K) {
        return St(K, function(G) {
          return [G, H[G]];
        });
      }
      function Of(H) {
        return H && H.slice(0, Bf(H) + 1).replace(Yt, "");
      }
      function gn(H) {
        return function(K) {
          return H(K);
        };
      }
      function ju(H, K) {
        return St(K, function(G) {
          return H[G];
        });
      }
      function bs(H, K) {
        return H.has(K);
      }
      function Cf(H, K) {
        for (var G = -1, Ee = H.length; ++G < Ee && Fa(K, H[G], 0) > -1; )
          ;
        return G;
      }
      function Nf(H, K) {
        for (var G = H.length; G-- && Fa(K, H[G], 0) > -1; )
          ;
        return G;
      }
      function Um(H, K) {
        for (var G = H.length, Ee = 0; G--; )
          H[G] === K && ++Ee;
        return Ee;
      }
      var Wm = Wu(ym), Vm = Wu(Rm);
      function Gm(H) {
        return "\\" + Cm[H];
      }
      function jm(H, K) {
        return H == null ? n : H[K];
      }
      function Ma(H) {
        return Lm.test(H);
      }
      function zm(H) {
        return vm.test(H);
      }
      function Km(H) {
        for (var K, G = []; !(K = H.next()).done; )
          G.push(K.value);
        return G;
      }
      function zu(H) {
        var K = -1, G = Array(H.size);
        return H.forEach(function(Ee, Fe) {
          G[++K] = [Fe, Ee];
        }), G;
      }
      function Df(H, K) {
        return function(G) {
          return H(K(G));
        };
      }
      function hi(H, K) {
        for (var G = -1, Ee = H.length, Fe = 0, at = []; ++G < Ee; ) {
          var Mt = H[G];
          (Mt === K || Mt === E) && (H[G] = E, at[Fe++] = G);
        }
        return at;
      }
      function Bl(H) {
        var K = -1, G = Array(H.size);
        return H.forEach(function(Ee) {
          G[++K] = Ee;
        }), G;
      }
      function Ym(H) {
        var K = -1, G = Array(H.size);
        return H.forEach(function(Ee) {
          G[++K] = [Ee, Ee];
        }), G;
      }
      function Zm(H, K, G) {
        for (var Ee = G - 1, Fe = H.length; ++Ee < Fe; )
          if (H[Ee] === K)
            return Ee;
        return -1;
      }
      function Xm(H, K, G) {
        for (var Ee = G + 1; Ee--; )
          if (H[Ee] === K)
            return Ee;
        return Ee;
      }
      function qa(H) {
        return Ma(H) ? Qm(H) : Fm(H);
      }
      function fr(H) {
        return Ma(H) ? eb(H) : Mm(H);
      }
      function Bf(H) {
        for (var K = H.length; K-- && di.test(H.charAt(K)); )
          ;
        return K;
      }
      var Jm = Wu(Om);
      function Qm(H) {
        for (var K = Fu.lastIndex = 0; Fu.test(H); )
          ++K;
        return K;
      }
      function eb(H) {
        return H.match(Fu) || [];
      }
      function tb(H) {
        return H.match(bm) || [];
      }
      var nb = function H(K) {
        K = K == null ? Gt : $a.defaults(Gt.Object(), K, $a.pick(Gt, Im));
        var G = K.Array, Ee = K.Date, Fe = K.Error, at = K.Function, Mt = K.Math, ht = K.Object, Ku = K.RegExp, rb = K.String, zn = K.TypeError, wl = G.prototype, ib = at.prototype, ka = ht.prototype, Pl = K["__core-js_shared__"], xl = ib.toString, ct = ka.hasOwnProperty, ab = 0, wf = function() {
          var i = /[^.]+$/.exec(Pl && Pl.keys && Pl.keys.IE_PROTO || "");
          return i ? "Symbol(src)_1." + i : "";
        }(), Fl = ka.toString, sb = xl.call(ht), lb = Gt._, ob = Ku(
          "^" + xl.call(ct).replace(_i, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
        ), Ml = Ef ? K.Buffer : n, Ai = K.Symbol, ql = K.Uint8Array, Pf = Ml ? Ml.allocUnsafe : n, $l = Df(ht.getPrototypeOf, ht), xf = ht.create, Ff = ka.propertyIsEnumerable, kl = wl.splice, Mf = Ai ? Ai.isConcatSpreadable : n, Ls = Ai ? Ai.iterator : n, la = Ai ? Ai.toStringTag : n, Hl = function() {
          try {
            var i = ca(ht, "defineProperty");
            return i({}, "", {}), i;
          } catch {
          }
        }(), ub = K.clearTimeout !== Gt.clearTimeout && K.clearTimeout, _b = Ee && Ee.now !== Gt.Date.now && Ee.now, db = K.setTimeout !== Gt.setTimeout && K.setTimeout, Ul = Mt.ceil, Wl = Mt.floor, Yu = ht.getOwnPropertySymbols, cb = Ml ? Ml.isBuffer : n, qf = K.isFinite, fb = wl.join, hb = Df(ht.keys, ht), qt = Mt.max, Xt = Mt.min, Ab = Ee.now, Eb = K.parseInt, $f = Mt.random, pb = wl.reverse, Zu = ca(K, "DataView"), vs = ca(K, "Map"), Xu = ca(K, "Promise"), Ha = ca(K, "Set"), Is = ca(K, "WeakMap"), gs = ca(ht, "create"), Vl = Is && new Is(), Ua = {}, Tb = fa(Zu), Sb = fa(vs), mb = fa(Xu), bb = fa(Ha), Lb = fa(Is), Gl = Ai ? Ai.prototype : n, ys = Gl ? Gl.valueOf : n, kf = Gl ? Gl.toString : n;
        function O(i) {
          if (yt(i) && !Me(i) && !(i instanceof Ze)) {
            if (i instanceof Kn)
              return i;
            if (ct.call(i, "__wrapped__"))
              return Hh(i);
          }
          return new Kn(i);
        }
        var Wa = /* @__PURE__ */ function() {
          function i() {
          }
          return function(s) {
            if (!bt(s))
              return {};
            if (xf)
              return xf(s);
            i.prototype = s;
            var d = new i();
            return i.prototype = n, d;
          };
        }();
        function jl() {
        }
        function Kn(i, s) {
          this.__wrapped__ = i, this.__actions__ = [], this.__chain__ = !!s, this.__index__ = 0, this.__values__ = n;
        }
        O.templateSettings = {
          /**
           * Used to detect `data` property values to be HTML-escaped.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          escape: It,
          /**
           * Used to detect code to be evaluated.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          evaluate: Or,
          /**
           * Used to detect `data` property values to inject.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          interpolate: na,
          /**
           * Used to reference the data object in the template text.
           *
           * @memberOf _.templateSettings
           * @type {string}
           */
          variable: "",
          /**
           * Used to import variables into the compiled template.
           *
           * @memberOf _.templateSettings
           * @type {Object}
           */
          imports: {
            /**
             * A reference to the `lodash` function.
             *
             * @memberOf _.templateSettings.imports
             * @type {Function}
             */
            _: O
          }
        }, O.prototype = jl.prototype, O.prototype.constructor = O, Kn.prototype = Wa(jl.prototype), Kn.prototype.constructor = Kn;
        function Ze(i) {
          this.__wrapped__ = i, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = se, this.__views__ = [];
        }
        function vb() {
          var i = new Ze(this.__wrapped__);
          return i.__actions__ = An(this.__actions__), i.__dir__ = this.__dir__, i.__filtered__ = this.__filtered__, i.__iteratees__ = An(this.__iteratees__), i.__takeCount__ = this.__takeCount__, i.__views__ = An(this.__views__), i;
        }
        function Ib() {
          if (this.__filtered__) {
            var i = new Ze(this);
            i.__dir__ = -1, i.__filtered__ = !0;
          } else
            i = this.clone(), i.__dir__ *= -1;
          return i;
        }
        function gb() {
          var i = this.__wrapped__.value(), s = this.__dir__, d = Me(i), S = s < 0, g = d ? i.length : 0, D = ML(0, g, this.__views__), x = D.start, M = D.end, W = M - x, J = S ? M : x - 1, Q = this.__iteratees__, te = Q.length, _e = 0, ge = Xt(W, this.__takeCount__);
          if (!d || !S && g == W && ge == W)
            return _h(i, this.__actions__);
          var De = [];
          e:
            for (; W-- && _e < ge; ) {
              J += s;
              for (var We = -1, Be = i[J]; ++We < te; ) {
                var ze = Q[We], Xe = ze.iteratee, On = ze.type, un = Xe(Be);
                if (On == le)
                  Be = un;
                else if (!un) {
                  if (On == Z)
                    continue e;
                  break e;
                }
              }
              De[_e++] = Be;
            }
          return De;
        }
        Ze.prototype = Wa(jl.prototype), Ze.prototype.constructor = Ze;
        function oa(i) {
          var s = -1, d = i == null ? 0 : i.length;
          for (this.clear(); ++s < d; ) {
            var S = i[s];
            this.set(S[0], S[1]);
          }
        }
        function yb() {
          this.__data__ = gs ? gs(null) : {}, this.size = 0;
        }
        function Rb(i) {
          var s = this.has(i) && delete this.__data__[i];
          return this.size -= s ? 1 : 0, s;
        }
        function Ob(i) {
          var s = this.__data__;
          if (gs) {
            var d = s[i];
            return d === h ? n : d;
          }
          return ct.call(s, i) ? s[i] : n;
        }
        function Cb(i) {
          var s = this.__data__;
          return gs ? s[i] !== n : ct.call(s, i);
        }
        function Nb(i, s) {
          var d = this.__data__;
          return this.size += this.has(i) ? 0 : 1, d[i] = gs && s === n ? h : s, this;
        }
        oa.prototype.clear = yb, oa.prototype.delete = Rb, oa.prototype.get = Ob, oa.prototype.has = Cb, oa.prototype.set = Nb;
        function Ur(i) {
          var s = -1, d = i == null ? 0 : i.length;
          for (this.clear(); ++s < d; ) {
            var S = i[s];
            this.set(S[0], S[1]);
          }
        }
        function Db() {
          this.__data__ = [], this.size = 0;
        }
        function Bb(i) {
          var s = this.__data__, d = zl(s, i);
          if (d < 0)
            return !1;
          var S = s.length - 1;
          return d == S ? s.pop() : kl.call(s, d, 1), --this.size, !0;
        }
        function wb(i) {
          var s = this.__data__, d = zl(s, i);
          return d < 0 ? n : s[d][1];
        }
        function Pb(i) {
          return zl(this.__data__, i) > -1;
        }
        function xb(i, s) {
          var d = this.__data__, S = zl(d, i);
          return S < 0 ? (++this.size, d.push([i, s])) : d[S][1] = s, this;
        }
        Ur.prototype.clear = Db, Ur.prototype.delete = Bb, Ur.prototype.get = wb, Ur.prototype.has = Pb, Ur.prototype.set = xb;
        function Wr(i) {
          var s = -1, d = i == null ? 0 : i.length;
          for (this.clear(); ++s < d; ) {
            var S = i[s];
            this.set(S[0], S[1]);
          }
        }
        function Fb() {
          this.size = 0, this.__data__ = {
            hash: new oa(),
            map: new (vs || Ur)(),
            string: new oa()
          };
        }
        function Mb(i) {
          var s = ao(this, i).delete(i);
          return this.size -= s ? 1 : 0, s;
        }
        function qb(i) {
          return ao(this, i).get(i);
        }
        function $b(i) {
          return ao(this, i).has(i);
        }
        function kb(i, s) {
          var d = ao(this, i), S = d.size;
          return d.set(i, s), this.size += d.size == S ? 0 : 1, this;
        }
        Wr.prototype.clear = Fb, Wr.prototype.delete = Mb, Wr.prototype.get = qb, Wr.prototype.has = $b, Wr.prototype.set = kb;
        function ua(i) {
          var s = -1, d = i == null ? 0 : i.length;
          for (this.__data__ = new Wr(); ++s < d; )
            this.add(i[s]);
        }
        function Hb(i) {
          return this.__data__.set(i, h), this;
        }
        function Ub(i) {
          return this.__data__.has(i);
        }
        ua.prototype.add = ua.prototype.push = Hb, ua.prototype.has = Ub;
        function hr(i) {
          var s = this.__data__ = new Ur(i);
          this.size = s.size;
        }
        function Wb() {
          this.__data__ = new Ur(), this.size = 0;
        }
        function Vb(i) {
          var s = this.__data__, d = s.delete(i);
          return this.size = s.size, d;
        }
        function Gb(i) {
          return this.__data__.get(i);
        }
        function jb(i) {
          return this.__data__.has(i);
        }
        function zb(i, s) {
          var d = this.__data__;
          if (d instanceof Ur) {
            var S = d.__data__;
            if (!vs || S.length < a - 1)
              return S.push([i, s]), this.size = ++d.size, this;
            d = this.__data__ = new Wr(S);
          }
          return d.set(i, s), this.size = d.size, this;
        }
        hr.prototype.clear = Wb, hr.prototype.delete = Vb, hr.prototype.get = Gb, hr.prototype.has = jb, hr.prototype.set = zb;
        function Hf(i, s) {
          var d = Me(i), S = !d && ha(i), g = !d && !S && mi(i), D = !d && !S && !g && za(i), x = d || S || g || D, M = x ? Gu(i.length, rb) : [], W = M.length;
          for (var J in i)
            (s || ct.call(i, J)) && !(x && // Safari 9 has enumerable `arguments.length` in strict mode.
            (J == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
            g && (J == "offset" || J == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
            D && (J == "buffer" || J == "byteLength" || J == "byteOffset") || // Skip index properties.
            zr(J, W))) && M.push(J);
          return M;
        }
        function Uf(i) {
          var s = i.length;
          return s ? i[o_(0, s - 1)] : n;
        }
        function Kb(i, s) {
          return so(An(i), _a(s, 0, i.length));
        }
        function Yb(i) {
          return so(An(i));
        }
        function Ju(i, s, d) {
          (d !== n && !Ar(i[s], d) || d === n && !(s in i)) && Vr(i, s, d);
        }
        function Rs(i, s, d) {
          var S = i[s];
          (!(ct.call(i, s) && Ar(S, d)) || d === n && !(s in i)) && Vr(i, s, d);
        }
        function zl(i, s) {
          for (var d = i.length; d--; )
            if (Ar(i[d][0], s))
              return d;
          return -1;
        }
        function Zb(i, s, d, S) {
          return Ei(i, function(g, D, x) {
            s(S, g, d(g), x);
          }), S;
        }
        function Wf(i, s) {
          return i && Nr(s, Wt(s), i);
        }
        function Xb(i, s) {
          return i && Nr(s, pn(s), i);
        }
        function Vr(i, s, d) {
          s == "__proto__" && Hl ? Hl(i, s, {
            configurable: !0,
            enumerable: !0,
            value: d,
            writable: !0
          }) : i[s] = d;
        }
        function Qu(i, s) {
          for (var d = -1, S = s.length, g = G(S), D = i == null; ++d < S; )
            g[d] = D ? n : w_(i, s[d]);
          return g;
        }
        function _a(i, s, d) {
          return i === i && (d !== n && (i = i <= d ? i : d), s !== n && (i = i >= s ? i : s)), i;
        }
        function Yn(i, s, d, S, g, D) {
          var x, M = s & p, W = s & T, J = s & m;
          if (d && (x = g ? d(i, S, g, D) : d(i)), x !== n)
            return x;
          if (!bt(i))
            return i;
          var Q = Me(i);
          if (Q) {
            if (x = $L(i), !M)
              return An(i, x);
          } else {
            var te = Jt(i), _e = te == Ve || te == Ye;
            if (mi(i))
              return fh(i, M);
            if (te == $e || te == Ae || _e && !g) {
              if (x = W || _e ? {} : Bh(i), !M)
                return W ? OL(i, Xb(x, i)) : RL(i, Wf(x, i));
            } else {
              if (!At[te])
                return g ? i : {};
              x = kL(i, te, M);
            }
          }
          D || (D = new hr());
          var ge = D.get(i);
          if (ge)
            return ge;
          D.set(i, x), lA(i) ? i.forEach(function(Be) {
            x.add(Yn(Be, s, d, Be, i, D));
          }) : aA(i) && i.forEach(function(Be, ze) {
            x.set(ze, Yn(Be, s, d, ze, i, D));
          });
          var De = J ? W ? S_ : T_ : W ? pn : Wt, We = Q ? n : De(i);
          return jn(We || i, function(Be, ze) {
            We && (ze = Be, Be = i[ze]), Rs(x, ze, Yn(Be, s, d, ze, i, D));
          }), x;
        }
        function Jb(i) {
          var s = Wt(i);
          return function(d) {
            return Vf(d, i, s);
          };
        }
        function Vf(i, s, d) {
          var S = d.length;
          if (i == null)
            return !S;
          for (i = ht(i); S--; ) {
            var g = d[S], D = s[g], x = i[g];
            if (x === n && !(g in i) || !D(x))
              return !1;
          }
          return !0;
        }
        function Gf(i, s, d) {
          if (typeof i != "function")
            throw new zn(o);
          return Ps(function() {
            i.apply(n, d);
          }, s);
        }
        function Os(i, s, d, S) {
          var g = -1, D = Nl, x = !0, M = i.length, W = [], J = s.length;
          if (!M)
            return W;
          d && (s = St(s, gn(d))), S ? (D = $u, x = !1) : s.length >= a && (D = bs, x = !1, s = new ua(s));
          e:
            for (; ++g < M; ) {
              var Q = i[g], te = d == null ? Q : d(Q);
              if (Q = S || Q !== 0 ? Q : 0, x && te === te) {
                for (var _e = J; _e--; )
                  if (s[_e] === te)
                    continue e;
                W.push(Q);
              } else D(s, te, S) || W.push(Q);
            }
          return W;
        }
        var Ei = Th(Cr), jf = Th(t_, !0);
        function Qb(i, s) {
          var d = !0;
          return Ei(i, function(S, g, D) {
            return d = !!s(S, g, D), d;
          }), d;
        }
        function Kl(i, s, d) {
          for (var S = -1, g = i.length; ++S < g; ) {
            var D = i[S], x = s(D);
            if (x != null && (M === n ? x === x && !Rn(x) : d(x, M)))
              var M = x, W = D;
          }
          return W;
        }
        function eL(i, s, d, S) {
          var g = i.length;
          for (d = Ue(d), d < 0 && (d = -d > g ? 0 : g + d), S = S === n || S > g ? g : Ue(S), S < 0 && (S += g), S = d > S ? 0 : uA(S); d < S; )
            i[d++] = s;
          return i;
        }
        function zf(i, s) {
          var d = [];
          return Ei(i, function(S, g, D) {
            s(S, g, D) && d.push(S);
          }), d;
        }
        function jt(i, s, d, S, g) {
          var D = -1, x = i.length;
          for (d || (d = UL), g || (g = []); ++D < x; ) {
            var M = i[D];
            s > 0 && d(M) ? s > 1 ? jt(M, s - 1, d, S, g) : fi(g, M) : S || (g[g.length] = M);
          }
          return g;
        }
        var e_ = Sh(), Kf = Sh(!0);
        function Cr(i, s) {
          return i && e_(i, s, Wt);
        }
        function t_(i, s) {
          return i && Kf(i, s, Wt);
        }
        function Yl(i, s) {
          return ci(s, function(d) {
            return Kr(i[d]);
          });
        }
        function da(i, s) {
          s = Ti(s, i);
          for (var d = 0, S = s.length; i != null && d < S; )
            i = i[Dr(s[d++])];
          return d && d == S ? i : n;
        }
        function Yf(i, s, d) {
          var S = s(i);
          return Me(i) ? S : fi(S, d(i));
        }
        function ln(i) {
          return i == null ? i === n ? or : ft : la && la in ht(i) ? FL(i) : YL(i);
        }
        function n_(i, s) {
          return i > s;
        }
        function tL(i, s) {
          return i != null && ct.call(i, s);
        }
        function nL(i, s) {
          return i != null && s in ht(i);
        }
        function rL(i, s, d) {
          return i >= Xt(s, d) && i < qt(s, d);
        }
        function r_(i, s, d) {
          for (var S = d ? $u : Nl, g = i[0].length, D = i.length, x = D, M = G(D), W = 1 / 0, J = []; x--; ) {
            var Q = i[x];
            x && s && (Q = St(Q, gn(s))), W = Xt(Q.length, W), M[x] = !d && (s || g >= 120 && Q.length >= 120) ? new ua(x && Q) : n;
          }
          Q = i[0];
          var te = -1, _e = M[0];
          e:
            for (; ++te < g && J.length < W; ) {
              var ge = Q[te], De = s ? s(ge) : ge;
              if (ge = d || ge !== 0 ? ge : 0, !(_e ? bs(_e, De) : S(J, De, d))) {
                for (x = D; --x; ) {
                  var We = M[x];
                  if (!(We ? bs(We, De) : S(i[x], De, d)))
                    continue e;
                }
                _e && _e.push(De), J.push(ge);
              }
            }
          return J;
        }
        function iL(i, s, d, S) {
          return Cr(i, function(g, D, x) {
            s(S, d(g), D, x);
          }), S;
        }
        function Cs(i, s, d) {
          s = Ti(s, i), i = Fh(i, s);
          var S = i == null ? i : i[Dr(Xn(s))];
          return S == null ? n : In(S, i, d);
        }
        function Zf(i) {
          return yt(i) && ln(i) == Ae;
        }
        function aL(i) {
          return yt(i) && ln(i) == Hn;
        }
        function sL(i) {
          return yt(i) && ln(i) == be;
        }
        function Ns(i, s, d, S, g) {
          return i === s ? !0 : i == null || s == null || !yt(i) && !yt(s) ? i !== i && s !== s : lL(i, s, d, S, Ns, g);
        }
        function lL(i, s, d, S, g, D) {
          var x = Me(i), M = Me(s), W = x ? $ : Jt(i), J = M ? $ : Jt(s);
          W = W == Ae ? $e : W, J = J == Ae ? $e : J;
          var Q = W == $e, te = J == $e, _e = W == J;
          if (_e && mi(i)) {
            if (!mi(s))
              return !1;
            x = !0, Q = !1;
          }
          if (_e && !Q)
            return D || (D = new hr()), x || za(i) ? Ch(i, s, d, S, g, D) : PL(i, s, W, d, S, g, D);
          if (!(d & b)) {
            var ge = Q && ct.call(i, "__wrapped__"), De = te && ct.call(s, "__wrapped__");
            if (ge || De) {
              var We = ge ? i.value() : i, Be = De ? s.value() : s;
              return D || (D = new hr()), g(We, Be, d, S, D);
            }
          }
          return _e ? (D || (D = new hr()), xL(i, s, d, S, g, D)) : !1;
        }
        function oL(i) {
          return yt(i) && Jt(i) == Re;
        }
        function i_(i, s, d, S) {
          var g = d.length, D = g, x = !S;
          if (i == null)
            return !D;
          for (i = ht(i); g--; ) {
            var M = d[g];
            if (x && M[2] ? M[1] !== i[M[0]] : !(M[0] in i))
              return !1;
          }
          for (; ++g < D; ) {
            M = d[g];
            var W = M[0], J = i[W], Q = M[1];
            if (x && M[2]) {
              if (J === n && !(W in i))
                return !1;
            } else {
              var te = new hr();
              if (S)
                var _e = S(J, Q, W, i, s, te);
              if (!(_e === n ? Ns(Q, J, b | L, S, te) : _e))
                return !1;
            }
          }
          return !0;
        }
        function Xf(i) {
          if (!bt(i) || VL(i))
            return !1;
          var s = Kr(i) ? ob : Ce;
          return s.test(fa(i));
        }
        function uL(i) {
          return yt(i) && ln(i) == mt;
        }
        function _L(i) {
          return yt(i) && Jt(i) == vt;
        }
        function dL(i) {
          return yt(i) && fo(i.length) && !!pt[ln(i)];
        }
        function Jf(i) {
          return typeof i == "function" ? i : i == null ? Tn : typeof i == "object" ? Me(i) ? th(i[0], i[1]) : eh(i) : mA(i);
        }
        function a_(i) {
          if (!ws(i))
            return hb(i);
          var s = [];
          for (var d in ht(i))
            ct.call(i, d) && d != "constructor" && s.push(d);
          return s;
        }
        function cL(i) {
          if (!bt(i))
            return KL(i);
          var s = ws(i), d = [];
          for (var S in i)
            S == "constructor" && (s || !ct.call(i, S)) || d.push(S);
          return d;
        }
        function s_(i, s) {
          return i < s;
        }
        function Qf(i, s) {
          var d = -1, S = En(i) ? G(i.length) : [];
          return Ei(i, function(g, D, x) {
            S[++d] = s(g, D, x);
          }), S;
        }
        function eh(i) {
          var s = b_(i);
          return s.length == 1 && s[0][2] ? Ph(s[0][0], s[0][1]) : function(d) {
            return d === i || i_(d, i, s);
          };
        }
        function th(i, s) {
          return v_(i) && wh(s) ? Ph(Dr(i), s) : function(d) {
            var S = w_(d, i);
            return S === n && S === s ? P_(d, i) : Ns(s, S, b | L);
          };
        }
        function Zl(i, s, d, S, g) {
          i !== s && e_(s, function(D, x) {
            if (g || (g = new hr()), bt(D))
              fL(i, s, x, d, Zl, S, g);
            else {
              var M = S ? S(g_(i, x), D, x + "", i, s, g) : n;
              M === n && (M = D), Ju(i, x, M);
            }
          }, pn);
        }
        function fL(i, s, d, S, g, D, x) {
          var M = g_(i, d), W = g_(s, d), J = x.get(W);
          if (J) {
            Ju(i, d, J);
            return;
          }
          var Q = D ? D(M, W, d + "", i, s, x) : n, te = Q === n;
          if (te) {
            var _e = Me(W), ge = !_e && mi(W), De = !_e && !ge && za(W);
            Q = W, _e || ge || De ? Me(M) ? Q = M : Ct(M) ? Q = An(M) : ge ? (te = !1, Q = fh(W, !0)) : De ? (te = !1, Q = hh(W, !0)) : Q = [] : xs(W) || ha(W) ? (Q = M, ha(M) ? Q = _A(M) : (!bt(M) || Kr(M)) && (Q = Bh(W))) : te = !1;
          }
          te && (x.set(W, Q), g(Q, W, S, D, x), x.delete(W)), Ju(i, d, Q);
        }
        function nh(i, s) {
          var d = i.length;
          if (d)
            return s += s < 0 ? d : 0, zr(s, d) ? i[s] : n;
        }
        function rh(i, s, d) {
          s.length ? s = St(s, function(D) {
            return Me(D) ? function(x) {
              return da(x, D.length === 1 ? D[0] : D);
            } : D;
          }) : s = [Tn];
          var S = -1;
          s = St(s, gn(Ne()));
          var g = Qf(i, function(D, x, M) {
            var W = St(s, function(J) {
              return J(D);
            });
            return { criteria: W, index: ++S, value: D };
          });
          return km(g, function(D, x) {
            return yL(D, x, d);
          });
        }
        function hL(i, s) {
          return ih(i, s, function(d, S) {
            return P_(i, S);
          });
        }
        function ih(i, s, d) {
          for (var S = -1, g = s.length, D = {}; ++S < g; ) {
            var x = s[S], M = da(i, x);
            d(M, x) && Ds(D, Ti(x, i), M);
          }
          return D;
        }
        function AL(i) {
          return function(s) {
            return da(s, i);
          };
        }
        function l_(i, s, d, S) {
          var g = S ? $m : Fa, D = -1, x = s.length, M = i;
          for (i === s && (s = An(s)), d && (M = St(i, gn(d))); ++D < x; )
            for (var W = 0, J = s[D], Q = d ? d(J) : J; (W = g(M, Q, W, S)) > -1; )
              M !== i && kl.call(M, W, 1), kl.call(i, W, 1);
          return i;
        }
        function ah(i, s) {
          for (var d = i ? s.length : 0, S = d - 1; d--; ) {
            var g = s[d];
            if (d == S || g !== D) {
              var D = g;
              zr(g) ? kl.call(i, g, 1) : d_(i, g);
            }
          }
          return i;
        }
        function o_(i, s) {
          return i + Wl($f() * (s - i + 1));
        }
        function EL(i, s, d, S) {
          for (var g = -1, D = qt(Ul((s - i) / (d || 1)), 0), x = G(D); D--; )
            x[S ? D : ++g] = i, i += d;
          return x;
        }
        function u_(i, s) {
          var d = "";
          if (!i || s < 1 || s > he)
            return d;
          do
            s % 2 && (d += i), s = Wl(s / 2), s && (i += i);
          while (s);
          return d;
        }
        function Ge(i, s) {
          return y_(xh(i, s, Tn), i + "");
        }
        function pL(i) {
          return Uf(Ka(i));
        }
        function TL(i, s) {
          var d = Ka(i);
          return so(d, _a(s, 0, d.length));
        }
        function Ds(i, s, d, S) {
          if (!bt(i))
            return i;
          s = Ti(s, i);
          for (var g = -1, D = s.length, x = D - 1, M = i; M != null && ++g < D; ) {
            var W = Dr(s[g]), J = d;
            if (W === "__proto__" || W === "constructor" || W === "prototype")
              return i;
            if (g != x) {
              var Q = M[W];
              J = S ? S(Q, W, M) : n, J === n && (J = bt(Q) ? Q : zr(s[g + 1]) ? [] : {});
            }
            Rs(M, W, J), M = M[W];
          }
          return i;
        }
        var sh = Vl ? function(i, s) {
          return Vl.set(i, s), i;
        } : Tn, SL = Hl ? function(i, s) {
          return Hl(i, "toString", {
            configurable: !0,
            enumerable: !1,
            value: F_(s),
            writable: !0
          });
        } : Tn;
        function mL(i) {
          return so(Ka(i));
        }
        function Zn(i, s, d) {
          var S = -1, g = i.length;
          s < 0 && (s = -s > g ? 0 : g + s), d = d > g ? g : d, d < 0 && (d += g), g = s > d ? 0 : d - s >>> 0, s >>>= 0;
          for (var D = G(g); ++S < g; )
            D[S] = i[S + s];
          return D;
        }
        function bL(i, s) {
          var d;
          return Ei(i, function(S, g, D) {
            return d = s(S, g, D), !d;
          }), !!d;
        }
        function Xl(i, s, d) {
          var S = 0, g = i == null ? S : i.length;
          if (typeof s == "number" && s === s && g <= Le) {
            for (; S < g; ) {
              var D = S + g >>> 1, x = i[D];
              x !== null && !Rn(x) && (d ? x <= s : x < s) ? S = D + 1 : g = D;
            }
            return g;
          }
          return __(i, s, Tn, d);
        }
        function __(i, s, d, S) {
          var g = 0, D = i == null ? 0 : i.length;
          if (D === 0)
            return 0;
          s = d(s);
          for (var x = s !== s, M = s === null, W = Rn(s), J = s === n; g < D; ) {
            var Q = Wl((g + D) / 2), te = d(i[Q]), _e = te !== n, ge = te === null, De = te === te, We = Rn(te);
            if (x)
              var Be = S || De;
            else J ? Be = De && (S || _e) : M ? Be = De && _e && (S || !ge) : W ? Be = De && _e && !ge && (S || !We) : ge || We ? Be = !1 : Be = S ? te <= s : te < s;
            Be ? g = Q + 1 : D = Q;
          }
          return Xt(D, me);
        }
        function lh(i, s) {
          for (var d = -1, S = i.length, g = 0, D = []; ++d < S; ) {
            var x = i[d], M = s ? s(x) : x;
            if (!d || !Ar(M, W)) {
              var W = M;
              D[g++] = x === 0 ? 0 : x;
            }
          }
          return D;
        }
        function oh(i) {
          return typeof i == "number" ? i : Rn(i) ? Ie : +i;
        }
        function yn(i) {
          if (typeof i == "string")
            return i;
          if (Me(i))
            return St(i, yn) + "";
          if (Rn(i))
            return kf ? kf.call(i) : "";
          var s = i + "";
          return s == "0" && 1 / i == -fe ? "-0" : s;
        }
        function pi(i, s, d) {
          var S = -1, g = Nl, D = i.length, x = !0, M = [], W = M;
          if (d)
            x = !1, g = $u;
          else if (D >= a) {
            var J = s ? null : BL(i);
            if (J)
              return Bl(J);
            x = !1, g = bs, W = new ua();
          } else
            W = s ? [] : M;
          e:
            for (; ++S < D; ) {
              var Q = i[S], te = s ? s(Q) : Q;
              if (Q = d || Q !== 0 ? Q : 0, x && te === te) {
                for (var _e = W.length; _e--; )
                  if (W[_e] === te)
                    continue e;
                s && W.push(te), M.push(Q);
              } else g(W, te, d) || (W !== M && W.push(te), M.push(Q));
            }
          return M;
        }
        function d_(i, s) {
          return s = Ti(s, i), i = Fh(i, s), i == null || delete i[Dr(Xn(s))];
        }
        function uh(i, s, d, S) {
          return Ds(i, s, d(da(i, s)), S);
        }
        function Jl(i, s, d, S) {
          for (var g = i.length, D = S ? g : -1; (S ? D-- : ++D < g) && s(i[D], D, i); )
            ;
          return d ? Zn(i, S ? 0 : D, S ? D + 1 : g) : Zn(i, S ? D + 1 : 0, S ? g : D);
        }
        function _h(i, s) {
          var d = i;
          return d instanceof Ze && (d = d.value()), ku(s, function(S, g) {
            return g.func.apply(g.thisArg, fi([S], g.args));
          }, d);
        }
        function c_(i, s, d) {
          var S = i.length;
          if (S < 2)
            return S ? pi(i[0]) : [];
          for (var g = -1, D = G(S); ++g < S; )
            for (var x = i[g], M = -1; ++M < S; )
              M != g && (D[g] = Os(D[g] || x, i[M], s, d));
          return pi(jt(D, 1), s, d);
        }
        function dh(i, s, d) {
          for (var S = -1, g = i.length, D = s.length, x = {}; ++S < g; ) {
            var M = S < D ? s[S] : n;
            d(x, i[S], M);
          }
          return x;
        }
        function f_(i) {
          return Ct(i) ? i : [];
        }
        function h_(i) {
          return typeof i == "function" ? i : Tn;
        }
        function Ti(i, s) {
          return Me(i) ? i : v_(i, s) ? [i] : kh(ut(i));
        }
        var LL = Ge;
        function Si(i, s, d) {
          var S = i.length;
          return d = d === n ? S : d, !s && d >= S ? i : Zn(i, s, d);
        }
        var ch = ub || function(i) {
          return Gt.clearTimeout(i);
        };
        function fh(i, s) {
          if (s)
            return i.slice();
          var d = i.length, S = Pf ? Pf(d) : new i.constructor(d);
          return i.copy(S), S;
        }
        function A_(i) {
          var s = new i.constructor(i.byteLength);
          return new ql(s).set(new ql(i)), s;
        }
        function vL(i, s) {
          var d = s ? A_(i.buffer) : i.buffer;
          return new i.constructor(d, i.byteOffset, i.byteLength);
        }
        function IL(i) {
          var s = new i.constructor(i.source, Ts.exec(i));
          return s.lastIndex = i.lastIndex, s;
        }
        function gL(i) {
          return ys ? ht(ys.call(i)) : {};
        }
        function hh(i, s) {
          var d = s ? A_(i.buffer) : i.buffer;
          return new i.constructor(d, i.byteOffset, i.length);
        }
        function Ah(i, s) {
          if (i !== s) {
            var d = i !== n, S = i === null, g = i === i, D = Rn(i), x = s !== n, M = s === null, W = s === s, J = Rn(s);
            if (!M && !J && !D && i > s || D && x && W && !M && !J || S && x && W || !d && W || !g)
              return 1;
            if (!S && !D && !J && i < s || J && d && g && !S && !D || M && d && g || !x && g || !W)
              return -1;
          }
          return 0;
        }
        function yL(i, s, d) {
          for (var S = -1, g = i.criteria, D = s.criteria, x = g.length, M = d.length; ++S < x; ) {
            var W = Ah(g[S], D[S]);
            if (W) {
              if (S >= M)
                return W;
              var J = d[S];
              return W * (J == "desc" ? -1 : 1);
            }
          }
          return i.index - s.index;
        }
        function Eh(i, s, d, S) {
          for (var g = -1, D = i.length, x = d.length, M = -1, W = s.length, J = qt(D - x, 0), Q = G(W + J), te = !S; ++M < W; )
            Q[M] = s[M];
          for (; ++g < x; )
            (te || g < D) && (Q[d[g]] = i[g]);
          for (; J--; )
            Q[M++] = i[g++];
          return Q;
        }
        function ph(i, s, d, S) {
          for (var g = -1, D = i.length, x = -1, M = d.length, W = -1, J = s.length, Q = qt(D - M, 0), te = G(Q + J), _e = !S; ++g < Q; )
            te[g] = i[g];
          for (var ge = g; ++W < J; )
            te[ge + W] = s[W];
          for (; ++x < M; )
            (_e || g < D) && (te[ge + d[x]] = i[g++]);
          return te;
        }
        function An(i, s) {
          var d = -1, S = i.length;
          for (s || (s = G(S)); ++d < S; )
            s[d] = i[d];
          return s;
        }
        function Nr(i, s, d, S) {
          var g = !d;
          d || (d = {});
          for (var D = -1, x = s.length; ++D < x; ) {
            var M = s[D], W = S ? S(d[M], i[M], M, d, i) : n;
            W === n && (W = i[M]), g ? Vr(d, M, W) : Rs(d, M, W);
          }
          return d;
        }
        function RL(i, s) {
          return Nr(i, L_(i), s);
        }
        function OL(i, s) {
          return Nr(i, Nh(i), s);
        }
        function Ql(i, s) {
          return function(d, S) {
            var g = Me(d) ? wm : Zb, D = s ? s() : {};
            return g(d, i, Ne(S, 2), D);
          };
        }
        function Va(i) {
          return Ge(function(s, d) {
            var S = -1, g = d.length, D = g > 1 ? d[g - 1] : n, x = g > 2 ? d[2] : n;
            for (D = i.length > 3 && typeof D == "function" ? (g--, D) : n, x && on(d[0], d[1], x) && (D = g < 3 ? n : D, g = 1), s = ht(s); ++S < g; ) {
              var M = d[S];
              M && i(s, M, S, D);
            }
            return s;
          });
        }
        function Th(i, s) {
          return function(d, S) {
            if (d == null)
              return d;
            if (!En(d))
              return i(d, S);
            for (var g = d.length, D = s ? g : -1, x = ht(d); (s ? D-- : ++D < g) && S(x[D], D, x) !== !1; )
              ;
            return d;
          };
        }
        function Sh(i) {
          return function(s, d, S) {
            for (var g = -1, D = ht(s), x = S(s), M = x.length; M--; ) {
              var W = x[i ? M : ++g];
              if (d(D[W], W, D) === !1)
                break;
            }
            return s;
          };
        }
        function CL(i, s, d) {
          var S = s & v, g = Bs(i);
          function D() {
            var x = this && this !== Gt && this instanceof D ? g : i;
            return x.apply(S ? d : this, arguments);
          }
          return D;
        }
        function mh(i) {
          return function(s) {
            s = ut(s);
            var d = Ma(s) ? fr(s) : n, S = d ? d[0] : s.charAt(0), g = d ? Si(d, 1).join("") : s.slice(1);
            return S[i]() + g;
          };
        }
        function Ga(i) {
          return function(s) {
            return ku(TA(pA(s).replace(Sm, "")), i, "");
          };
        }
        function Bs(i) {
          return function() {
            var s = arguments;
            switch (s.length) {
              case 0:
                return new i();
              case 1:
                return new i(s[0]);
              case 2:
                return new i(s[0], s[1]);
              case 3:
                return new i(s[0], s[1], s[2]);
              case 4:
                return new i(s[0], s[1], s[2], s[3]);
              case 5:
                return new i(s[0], s[1], s[2], s[3], s[4]);
              case 6:
                return new i(s[0], s[1], s[2], s[3], s[4], s[5]);
              case 7:
                return new i(s[0], s[1], s[2], s[3], s[4], s[5], s[6]);
            }
            var d = Wa(i.prototype), S = i.apply(d, s);
            return bt(S) ? S : d;
          };
        }
        function NL(i, s, d) {
          var S = Bs(i);
          function g() {
            for (var D = arguments.length, x = G(D), M = D, W = ja(g); M--; )
              x[M] = arguments[M];
            var J = D < 3 && x[0] !== W && x[D - 1] !== W ? [] : hi(x, W);
            if (D -= J.length, D < d)
              return gh(
                i,
                s,
                eo,
                g.placeholder,
                n,
                x,
                J,
                n,
                n,
                d - D
              );
            var Q = this && this !== Gt && this instanceof g ? S : i;
            return In(Q, this, x);
          }
          return g;
        }
        function bh(i) {
          return function(s, d, S) {
            var g = ht(s);
            if (!En(s)) {
              var D = Ne(d, 3);
              s = Wt(s), d = function(M) {
                return D(g[M], M, g);
              };
            }
            var x = i(s, d, S);
            return x > -1 ? g[D ? s[x] : x] : n;
          };
        }
        function Lh(i) {
          return jr(function(s) {
            var d = s.length, S = d, g = Kn.prototype.thru;
            for (i && s.reverse(); S--; ) {
              var D = s[S];
              if (typeof D != "function")
                throw new zn(o);
              if (g && !x && io(D) == "wrapper")
                var x = new Kn([], !0);
            }
            for (S = x ? S : d; ++S < d; ) {
              D = s[S];
              var M = io(D), W = M == "wrapper" ? m_(D) : n;
              W && I_(W[0]) && W[1] == (P | y | w | q) && !W[4].length && W[9] == 1 ? x = x[io(W[0])].apply(x, W[3]) : x = D.length == 1 && I_(D) ? x[M]() : x.thru(D);
            }
            return function() {
              var J = arguments, Q = J[0];
              if (x && J.length == 1 && Me(Q))
                return x.plant(Q).value();
              for (var te = 0, _e = d ? s[te].apply(this, J) : Q; ++te < d; )
                _e = s[te].call(this, _e);
              return _e;
            };
          });
        }
        function eo(i, s, d, S, g, D, x, M, W, J) {
          var Q = s & P, te = s & v, _e = s & I, ge = s & (y | C), De = s & N, We = _e ? n : Bs(i);
          function Be() {
            for (var ze = arguments.length, Xe = G(ze), On = ze; On--; )
              Xe[On] = arguments[On];
            if (ge)
              var un = ja(Be), Cn = Um(Xe, un);
            if (S && (Xe = Eh(Xe, S, g, ge)), D && (Xe = ph(Xe, D, x, ge)), ze -= Cn, ge && ze < J) {
              var Nt = hi(Xe, un);
              return gh(
                i,
                s,
                eo,
                Be.placeholder,
                d,
                Xe,
                Nt,
                M,
                W,
                J - ze
              );
            }
            var Er = te ? d : this, Zr = _e ? Er[i] : i;
            return ze = Xe.length, M ? Xe = ZL(Xe, M) : De && ze > 1 && Xe.reverse(), Q && W < ze && (Xe.length = W), this && this !== Gt && this instanceof Be && (Zr = We || Bs(Zr)), Zr.apply(Er, Xe);
          }
          return Be;
        }
        function vh(i, s) {
          return function(d, S) {
            return iL(d, i, s(S), {});
          };
        }
        function to(i, s) {
          return function(d, S) {
            var g;
            if (d === n && S === n)
              return s;
            if (d !== n && (g = d), S !== n) {
              if (g === n)
                return S;
              typeof d == "string" || typeof S == "string" ? (d = yn(d), S = yn(S)) : (d = oh(d), S = oh(S)), g = i(d, S);
            }
            return g;
          };
        }
        function E_(i) {
          return jr(function(s) {
            return s = St(s, gn(Ne())), Ge(function(d) {
              var S = this;
              return i(s, function(g) {
                return In(g, S, d);
              });
            });
          });
        }
        function no(i, s) {
          s = s === n ? " " : yn(s);
          var d = s.length;
          if (d < 2)
            return d ? u_(s, i) : s;
          var S = u_(s, Ul(i / qa(s)));
          return Ma(s) ? Si(fr(S), 0, i).join("") : S.slice(0, i);
        }
        function DL(i, s, d, S) {
          var g = s & v, D = Bs(i);
          function x() {
            for (var M = -1, W = arguments.length, J = -1, Q = S.length, te = G(Q + W), _e = this && this !== Gt && this instanceof x ? D : i; ++J < Q; )
              te[J] = S[J];
            for (; W--; )
              te[J++] = arguments[++M];
            return In(_e, g ? d : this, te);
          }
          return x;
        }
        function Ih(i) {
          return function(s, d, S) {
            return S && typeof S != "number" && on(s, d, S) && (d = S = n), s = Yr(s), d === n ? (d = s, s = 0) : d = Yr(d), S = S === n ? s < d ? 1 : -1 : Yr(S), EL(s, d, S, i);
          };
        }
        function ro(i) {
          return function(s, d) {
            return typeof s == "string" && typeof d == "string" || (s = Jn(s), d = Jn(d)), i(s, d);
          };
        }
        function gh(i, s, d, S, g, D, x, M, W, J) {
          var Q = s & y, te = Q ? x : n, _e = Q ? n : x, ge = Q ? D : n, De = Q ? n : D;
          s |= Q ? w : F, s &= ~(Q ? F : w), s & R || (s &= ~(v | I));
          var We = [
            i,
            s,
            g,
            ge,
            te,
            De,
            _e,
            M,
            W,
            J
          ], Be = d.apply(n, We);
          return I_(i) && Mh(Be, We), Be.placeholder = S, qh(Be, i, s);
        }
        function p_(i) {
          var s = Mt[i];
          return function(d, S) {
            if (d = Jn(d), S = S == null ? 0 : Xt(Ue(S), 292), S && qf(d)) {
              var g = (ut(d) + "e").split("e"), D = s(g[0] + "e" + (+g[1] + S));
              return g = (ut(D) + "e").split("e"), +(g[0] + "e" + (+g[1] - S));
            }
            return s(d);
          };
        }
        var BL = Ha && 1 / Bl(new Ha([, -0]))[1] == fe ? function(i) {
          return new Ha(i);
        } : $_;
        function yh(i) {
          return function(s) {
            var d = Jt(s);
            return d == Re ? zu(s) : d == vt ? Ym(s) : Hm(s, i(s));
          };
        }
        function Gr(i, s, d, S, g, D, x, M) {
          var W = s & I;
          if (!W && typeof i != "function")
            throw new zn(o);
          var J = S ? S.length : 0;
          if (J || (s &= ~(w | F), S = g = n), x = x === n ? x : qt(Ue(x), 0), M = M === n ? M : Ue(M), J -= g ? g.length : 0, s & F) {
            var Q = S, te = g;
            S = g = n;
          }
          var _e = W ? n : m_(i), ge = [
            i,
            s,
            d,
            S,
            g,
            Q,
            te,
            D,
            x,
            M
          ];
          if (_e && zL(ge, _e), i = ge[0], s = ge[1], d = ge[2], S = ge[3], g = ge[4], M = ge[9] = ge[9] === n ? W ? 0 : i.length : qt(ge[9] - J, 0), !M && s & (y | C) && (s &= ~(y | C)), !s || s == v)
            var De = CL(i, s, d);
          else s == y || s == C ? De = NL(i, s, M) : (s == w || s == (v | w)) && !g.length ? De = DL(i, s, d, S) : De = eo.apply(n, ge);
          var We = _e ? sh : Mh;
          return qh(We(De, ge), i, s);
        }
        function Rh(i, s, d, S) {
          return i === n || Ar(i, ka[d]) && !ct.call(S, d) ? s : i;
        }
        function Oh(i, s, d, S, g, D) {
          return bt(i) && bt(s) && (D.set(s, i), Zl(i, s, n, Oh, D), D.delete(s)), i;
        }
        function wL(i) {
          return xs(i) ? n : i;
        }
        function Ch(i, s, d, S, g, D) {
          var x = d & b, M = i.length, W = s.length;
          if (M != W && !(x && W > M))
            return !1;
          var J = D.get(i), Q = D.get(s);
          if (J && Q)
            return J == s && Q == i;
          var te = -1, _e = !0, ge = d & L ? new ua() : n;
          for (D.set(i, s), D.set(s, i); ++te < M; ) {
            var De = i[te], We = s[te];
            if (S)
              var Be = x ? S(We, De, te, s, i, D) : S(De, We, te, i, s, D);
            if (Be !== n) {
              if (Be)
                continue;
              _e = !1;
              break;
            }
            if (ge) {
              if (!Hu(s, function(ze, Xe) {
                if (!bs(ge, Xe) && (De === ze || g(De, ze, d, S, D)))
                  return ge.push(Xe);
              })) {
                _e = !1;
                break;
              }
            } else if (!(De === We || g(De, We, d, S, D))) {
              _e = !1;
              break;
            }
          }
          return D.delete(i), D.delete(s), _e;
        }
        function PL(i, s, d, S, g, D, x) {
          switch (d) {
            case Ln:
              if (i.byteLength != s.byteLength || i.byteOffset != s.byteOffset)
                return !1;
              i = i.buffer, s = s.buffer;
            case Hn:
              return !(i.byteLength != s.byteLength || !D(new ql(i), new ql(s)));
            case re:
            case be:
            case je:
              return Ar(+i, +s);
            case He:
              return i.name == s.name && i.message == s.message;
            case mt:
            case lr:
              return i == s + "";
            case Re:
              var M = zu;
            case vt:
              var W = S & b;
              if (M || (M = Bl), i.size != s.size && !W)
                return !1;
              var J = x.get(i);
              if (J)
                return J == s;
              S |= L, x.set(i, s);
              var Q = Ch(M(i), M(s), S, g, D, x);
              return x.delete(i), Q;
            case $n:
              if (ys)
                return ys.call(i) == ys.call(s);
          }
          return !1;
        }
        function xL(i, s, d, S, g, D) {
          var x = d & b, M = T_(i), W = M.length, J = T_(s), Q = J.length;
          if (W != Q && !x)
            return !1;
          for (var te = W; te--; ) {
            var _e = M[te];
            if (!(x ? _e in s : ct.call(s, _e)))
              return !1;
          }
          var ge = D.get(i), De = D.get(s);
          if (ge && De)
            return ge == s && De == i;
          var We = !0;
          D.set(i, s), D.set(s, i);
          for (var Be = x; ++te < W; ) {
            _e = M[te];
            var ze = i[_e], Xe = s[_e];
            if (S)
              var On = x ? S(Xe, ze, _e, s, i, D) : S(ze, Xe, _e, i, s, D);
            if (!(On === n ? ze === Xe || g(ze, Xe, d, S, D) : On)) {
              We = !1;
              break;
            }
            Be || (Be = _e == "constructor");
          }
          if (We && !Be) {
            var un = i.constructor, Cn = s.constructor;
            un != Cn && "constructor" in i && "constructor" in s && !(typeof un == "function" && un instanceof un && typeof Cn == "function" && Cn instanceof Cn) && (We = !1);
          }
          return D.delete(i), D.delete(s), We;
        }
        function jr(i) {
          return y_(xh(i, n, Vh), i + "");
        }
        function T_(i) {
          return Yf(i, Wt, L_);
        }
        function S_(i) {
          return Yf(i, pn, Nh);
        }
        var m_ = Vl ? function(i) {
          return Vl.get(i);
        } : $_;
        function io(i) {
          for (var s = i.name + "", d = Ua[s], S = ct.call(Ua, s) ? d.length : 0; S--; ) {
            var g = d[S], D = g.func;
            if (D == null || D == i)
              return g.name;
          }
          return s;
        }
        function ja(i) {
          var s = ct.call(O, "placeholder") ? O : i;
          return s.placeholder;
        }
        function Ne() {
          var i = O.iteratee || M_;
          return i = i === M_ ? Jf : i, arguments.length ? i(arguments[0], arguments[1]) : i;
        }
        function ao(i, s) {
          var d = i.__data__;
          return WL(s) ? d[typeof s == "string" ? "string" : "hash"] : d.map;
        }
        function b_(i) {
          for (var s = Wt(i), d = s.length; d--; ) {
            var S = s[d], g = i[S];
            s[d] = [S, g, wh(g)];
          }
          return s;
        }
        function ca(i, s) {
          var d = jm(i, s);
          return Xf(d) ? d : n;
        }
        function FL(i) {
          var s = ct.call(i, la), d = i[la];
          try {
            i[la] = n;
            var S = !0;
          } catch {
          }
          var g = Fl.call(i);
          return S && (s ? i[la] = d : delete i[la]), g;
        }
        var L_ = Yu ? function(i) {
          return i == null ? [] : (i = ht(i), ci(Yu(i), function(s) {
            return Ff.call(i, s);
          }));
        } : k_, Nh = Yu ? function(i) {
          for (var s = []; i; )
            fi(s, L_(i)), i = $l(i);
          return s;
        } : k_, Jt = ln;
        (Zu && Jt(new Zu(new ArrayBuffer(1))) != Ln || vs && Jt(new vs()) != Re || Xu && Jt(Xu.resolve()) != it || Ha && Jt(new Ha()) != vt || Is && Jt(new Is()) != Kt) && (Jt = function(i) {
          var s = ln(i), d = s == $e ? i.constructor : n, S = d ? fa(d) : "";
          if (S)
            switch (S) {
              case Tb:
                return Ln;
              case Sb:
                return Re;
              case mb:
                return it;
              case bb:
                return vt;
              case Lb:
                return Kt;
            }
          return s;
        });
        function ML(i, s, d) {
          for (var S = -1, g = d.length; ++S < g; ) {
            var D = d[S], x = D.size;
            switch (D.type) {
              case "drop":
                i += x;
                break;
              case "dropRight":
                s -= x;
                break;
              case "take":
                s = Xt(s, i + x);
                break;
              case "takeRight":
                i = qt(i, s - x);
                break;
            }
          }
          return { start: i, end: s };
        }
        function qL(i) {
          var s = i.match(wa);
          return s ? s[1].split(cr) : [];
        }
        function Dh(i, s, d) {
          s = Ti(s, i);
          for (var S = -1, g = s.length, D = !1; ++S < g; ) {
            var x = Dr(s[S]);
            if (!(D = i != null && d(i, x)))
              break;
            i = i[x];
          }
          return D || ++S != g ? D : (g = i == null ? 0 : i.length, !!g && fo(g) && zr(x, g) && (Me(i) || ha(i)));
        }
        function $L(i) {
          var s = i.length, d = new i.constructor(s);
          return s && typeof i[0] == "string" && ct.call(i, "index") && (d.index = i.index, d.input = i.input), d;
        }
        function Bh(i) {
          return typeof i.constructor == "function" && !ws(i) ? Wa($l(i)) : {};
        }
        function kL(i, s, d) {
          var S = i.constructor;
          switch (s) {
            case Hn:
              return A_(i);
            case re:
            case be:
              return new S(+i);
            case Ln:
              return vL(i, d);
            case Ir:
            case vn:
            case gr:
            case Un:
            case Wn:
            case Vt:
            case hn:
            case ur:
            case _r:
              return hh(i, d);
            case Re:
              return new S();
            case je:
            case lr:
              return new S(i);
            case mt:
              return IL(i);
            case vt:
              return new S();
            case $n:
              return gL(i);
          }
        }
        function HL(i, s) {
          var d = s.length;
          if (!d)
            return i;
          var S = d - 1;
          return s[S] = (d > 1 ? "& " : "") + s[S], s = s.join(d > 2 ? ", " : " "), i.replace(Ba, `{
/* [wrapped with ` + s + `] */
`);
        }
        function UL(i) {
          return Me(i) || ha(i) || !!(Mf && i && i[Mf]);
        }
        function zr(i, s) {
          var d = typeof i;
          return s = s ?? he, !!s && (d == "number" || d != "symbol" && ie.test(i)) && i > -1 && i % 1 == 0 && i < s;
        }
        function on(i, s, d) {
          if (!bt(d))
            return !1;
          var S = typeof s;
          return (S == "number" ? En(d) && zr(s, d.length) : S == "string" && s in d) ? Ar(d[s], i) : !1;
        }
        function v_(i, s) {
          if (Me(i))
            return !1;
          var d = typeof i;
          return d == "number" || d == "symbol" || d == "boolean" || i == null || Rn(i) ? !0 : ra.test(i) || !Na.test(i) || s != null && i in ht(s);
        }
        function WL(i) {
          var s = typeof i;
          return s == "string" || s == "number" || s == "symbol" || s == "boolean" ? i !== "__proto__" : i === null;
        }
        function I_(i) {
          var s = io(i), d = O[s];
          if (typeof d != "function" || !(s in Ze.prototype))
            return !1;
          if (i === d)
            return !0;
          var S = m_(d);
          return !!S && i === S[0];
        }
        function VL(i) {
          return !!wf && wf in i;
        }
        var GL = Pl ? Kr : H_;
        function ws(i) {
          var s = i && i.constructor, d = typeof s == "function" && s.prototype || ka;
          return i === d;
        }
        function wh(i) {
          return i === i && !bt(i);
        }
        function Ph(i, s) {
          return function(d) {
            return d == null ? !1 : d[i] === s && (s !== n || i in ht(d));
          };
        }
        function jL(i) {
          var s = _o(i, function(S) {
            return d.size === A && d.clear(), S;
          }), d = s.cache;
          return s;
        }
        function zL(i, s) {
          var d = i[1], S = s[1], g = d | S, D = g < (v | I | P), x = S == P && d == y || S == P && d == q && i[7].length <= s[8] || S == (P | q) && s[7].length <= s[8] && d == y;
          if (!(D || x))
            return i;
          S & v && (i[2] = s[2], g |= d & v ? 0 : R);
          var M = s[3];
          if (M) {
            var W = i[3];
            i[3] = W ? Eh(W, M, s[4]) : M, i[4] = W ? hi(i[3], E) : s[4];
          }
          return M = s[5], M && (W = i[5], i[5] = W ? ph(W, M, s[6]) : M, i[6] = W ? hi(i[5], E) : s[6]), M = s[7], M && (i[7] = M), S & P && (i[8] = i[8] == null ? s[8] : Xt(i[8], s[8])), i[9] == null && (i[9] = s[9]), i[0] = s[0], i[1] = g, i;
        }
        function KL(i) {
          var s = [];
          if (i != null)
            for (var d in ht(i))
              s.push(d);
          return s;
        }
        function YL(i) {
          return Fl.call(i);
        }
        function xh(i, s, d) {
          return s = qt(s === n ? i.length - 1 : s, 0), function() {
            for (var S = arguments, g = -1, D = qt(S.length - s, 0), x = G(D); ++g < D; )
              x[g] = S[s + g];
            g = -1;
            for (var M = G(s + 1); ++g < s; )
              M[g] = S[g];
            return M[s] = d(x), In(i, this, M);
          };
        }
        function Fh(i, s) {
          return s.length < 2 ? i : da(i, Zn(s, 0, -1));
        }
        function ZL(i, s) {
          for (var d = i.length, S = Xt(s.length, d), g = An(i); S--; ) {
            var D = s[S];
            i[S] = zr(D, d) ? g[D] : n;
          }
          return i;
        }
        function g_(i, s) {
          if (!(s === "constructor" && typeof i[s] == "function") && s != "__proto__")
            return i[s];
        }
        var Mh = $h(sh), Ps = db || function(i, s) {
          return Gt.setTimeout(i, s);
        }, y_ = $h(SL);
        function qh(i, s, d) {
          var S = s + "";
          return y_(i, HL(S, XL(qL(S), d)));
        }
        function $h(i) {
          var s = 0, d = 0;
          return function() {
            var S = Ab(), g = ne - (S - d);
            if (d = S, g > 0) {
              if (++s >= j)
                return arguments[0];
            } else
              s = 0;
            return i.apply(n, arguments);
          };
        }
        function so(i, s) {
          var d = -1, S = i.length, g = S - 1;
          for (s = s === n ? S : s; ++d < s; ) {
            var D = o_(d, g), x = i[D];
            i[D] = i[d], i[d] = x;
          }
          return i.length = s, i;
        }
        var kh = jL(function(i) {
          var s = [];
          return i.charCodeAt(0) === 46 && s.push(""), i.replace(Da, function(d, S, g, D) {
            s.push(g ? D.replace(Pa, "$1") : S || d);
          }), s;
        });
        function Dr(i) {
          if (typeof i == "string" || Rn(i))
            return i;
          var s = i + "";
          return s == "0" && 1 / i == -fe ? "-0" : s;
        }
        function fa(i) {
          if (i != null) {
            try {
              return xl.call(i);
            } catch {
            }
            try {
              return i + "";
            } catch {
            }
          }
          return "";
        }
        function XL(i, s) {
          return jn(ce, function(d) {
            var S = "_." + d[0];
            s & d[1] && !Nl(i, S) && i.push(S);
          }), i.sort();
        }
        function Hh(i) {
          if (i instanceof Ze)
            return i.clone();
          var s = new Kn(i.__wrapped__, i.__chain__);
          return s.__actions__ = An(i.__actions__), s.__index__ = i.__index__, s.__values__ = i.__values__, s;
        }
        function JL(i, s, d) {
          (d ? on(i, s, d) : s === n) ? s = 1 : s = qt(Ue(s), 0);
          var S = i == null ? 0 : i.length;
          if (!S || s < 1)
            return [];
          for (var g = 0, D = 0, x = G(Ul(S / s)); g < S; )
            x[D++] = Zn(i, g, g += s);
          return x;
        }
        function QL(i) {
          for (var s = -1, d = i == null ? 0 : i.length, S = 0, g = []; ++s < d; ) {
            var D = i[s];
            D && (g[S++] = D);
          }
          return g;
        }
        function ev() {
          var i = arguments.length;
          if (!i)
            return [];
          for (var s = G(i - 1), d = arguments[0], S = i; S--; )
            s[S - 1] = arguments[S];
          return fi(Me(d) ? An(d) : [d], jt(s, 1));
        }
        var tv = Ge(function(i, s) {
          return Ct(i) ? Os(i, jt(s, 1, Ct, !0)) : [];
        }), nv = Ge(function(i, s) {
          var d = Xn(s);
          return Ct(d) && (d = n), Ct(i) ? Os(i, jt(s, 1, Ct, !0), Ne(d, 2)) : [];
        }), rv = Ge(function(i, s) {
          var d = Xn(s);
          return Ct(d) && (d = n), Ct(i) ? Os(i, jt(s, 1, Ct, !0), n, d) : [];
        });
        function iv(i, s, d) {
          var S = i == null ? 0 : i.length;
          return S ? (s = d || s === n ? 1 : Ue(s), Zn(i, s < 0 ? 0 : s, S)) : [];
        }
        function av(i, s, d) {
          var S = i == null ? 0 : i.length;
          return S ? (s = d || s === n ? 1 : Ue(s), s = S - s, Zn(i, 0, s < 0 ? 0 : s)) : [];
        }
        function sv(i, s) {
          return i && i.length ? Jl(i, Ne(s, 3), !0, !0) : [];
        }
        function lv(i, s) {
          return i && i.length ? Jl(i, Ne(s, 3), !0) : [];
        }
        function ov(i, s, d, S) {
          var g = i == null ? 0 : i.length;
          return g ? (d && typeof d != "number" && on(i, s, d) && (d = 0, S = g), eL(i, s, d, S)) : [];
        }
        function Uh(i, s, d) {
          var S = i == null ? 0 : i.length;
          if (!S)
            return -1;
          var g = d == null ? 0 : Ue(d);
          return g < 0 && (g = qt(S + g, 0)), Dl(i, Ne(s, 3), g);
        }
        function Wh(i, s, d) {
          var S = i == null ? 0 : i.length;
          if (!S)
            return -1;
          var g = S - 1;
          return d !== n && (g = Ue(d), g = d < 0 ? qt(S + g, 0) : Xt(g, S - 1)), Dl(i, Ne(s, 3), g, !0);
        }
        function Vh(i) {
          var s = i == null ? 0 : i.length;
          return s ? jt(i, 1) : [];
        }
        function uv(i) {
          var s = i == null ? 0 : i.length;
          return s ? jt(i, fe) : [];
        }
        function _v(i, s) {
          var d = i == null ? 0 : i.length;
          return d ? (s = s === n ? 1 : Ue(s), jt(i, s)) : [];
        }
        function dv(i) {
          for (var s = -1, d = i == null ? 0 : i.length, S = {}; ++s < d; ) {
            var g = i[s];
            S[g[0]] = g[1];
          }
          return S;
        }
        function Gh(i) {
          return i && i.length ? i[0] : n;
        }
        function cv(i, s, d) {
          var S = i == null ? 0 : i.length;
          if (!S)
            return -1;
          var g = d == null ? 0 : Ue(d);
          return g < 0 && (g = qt(S + g, 0)), Fa(i, s, g);
        }
        function fv(i) {
          var s = i == null ? 0 : i.length;
          return s ? Zn(i, 0, -1) : [];
        }
        var hv = Ge(function(i) {
          var s = St(i, f_);
          return s.length && s[0] === i[0] ? r_(s) : [];
        }), Av = Ge(function(i) {
          var s = Xn(i), d = St(i, f_);
          return s === Xn(d) ? s = n : d.pop(), d.length && d[0] === i[0] ? r_(d, Ne(s, 2)) : [];
        }), Ev = Ge(function(i) {
          var s = Xn(i), d = St(i, f_);
          return s = typeof s == "function" ? s : n, s && d.pop(), d.length && d[0] === i[0] ? r_(d, n, s) : [];
        });
        function pv(i, s) {
          return i == null ? "" : fb.call(i, s);
        }
        function Xn(i) {
          var s = i == null ? 0 : i.length;
          return s ? i[s - 1] : n;
        }
        function Tv(i, s, d) {
          var S = i == null ? 0 : i.length;
          if (!S)
            return -1;
          var g = S;
          return d !== n && (g = Ue(d), g = g < 0 ? qt(S + g, 0) : Xt(g, S - 1)), s === s ? Xm(i, s, g) : Dl(i, gf, g, !0);
        }
        function Sv(i, s) {
          return i && i.length ? nh(i, Ue(s)) : n;
        }
        var mv = Ge(jh);
        function jh(i, s) {
          return i && i.length && s && s.length ? l_(i, s) : i;
        }
        function bv(i, s, d) {
          return i && i.length && s && s.length ? l_(i, s, Ne(d, 2)) : i;
        }
        function Lv(i, s, d) {
          return i && i.length && s && s.length ? l_(i, s, n, d) : i;
        }
        var vv = jr(function(i, s) {
          var d = i == null ? 0 : i.length, S = Qu(i, s);
          return ah(i, St(s, function(g) {
            return zr(g, d) ? +g : g;
          }).sort(Ah)), S;
        });
        function Iv(i, s) {
          var d = [];
          if (!(i && i.length))
            return d;
          var S = -1, g = [], D = i.length;
          for (s = Ne(s, 3); ++S < D; ) {
            var x = i[S];
            s(x, S, i) && (d.push(x), g.push(S));
          }
          return ah(i, g), d;
        }
        function R_(i) {
          return i == null ? i : pb.call(i);
        }
        function gv(i, s, d) {
          var S = i == null ? 0 : i.length;
          return S ? (d && typeof d != "number" && on(i, s, d) ? (s = 0, d = S) : (s = s == null ? 0 : Ue(s), d = d === n ? S : Ue(d)), Zn(i, s, d)) : [];
        }
        function yv(i, s) {
          return Xl(i, s);
        }
        function Rv(i, s, d) {
          return __(i, s, Ne(d, 2));
        }
        function Ov(i, s) {
          var d = i == null ? 0 : i.length;
          if (d) {
            var S = Xl(i, s);
            if (S < d && Ar(i[S], s))
              return S;
          }
          return -1;
        }
        function Cv(i, s) {
          return Xl(i, s, !0);
        }
        function Nv(i, s, d) {
          return __(i, s, Ne(d, 2), !0);
        }
        function Dv(i, s) {
          var d = i == null ? 0 : i.length;
          if (d) {
            var S = Xl(i, s, !0) - 1;
            if (Ar(i[S], s))
              return S;
          }
          return -1;
        }
        function Bv(i) {
          return i && i.length ? lh(i) : [];
        }
        function wv(i, s) {
          return i && i.length ? lh(i, Ne(s, 2)) : [];
        }
        function Pv(i) {
          var s = i == null ? 0 : i.length;
          return s ? Zn(i, 1, s) : [];
        }
        function xv(i, s, d) {
          return i && i.length ? (s = d || s === n ? 1 : Ue(s), Zn(i, 0, s < 0 ? 0 : s)) : [];
        }
        function Fv(i, s, d) {
          var S = i == null ? 0 : i.length;
          return S ? (s = d || s === n ? 1 : Ue(s), s = S - s, Zn(i, s < 0 ? 0 : s, S)) : [];
        }
        function Mv(i, s) {
          return i && i.length ? Jl(i, Ne(s, 3), !1, !0) : [];
        }
        function qv(i, s) {
          return i && i.length ? Jl(i, Ne(s, 3)) : [];
        }
        var $v = Ge(function(i) {
          return pi(jt(i, 1, Ct, !0));
        }), kv = Ge(function(i) {
          var s = Xn(i);
          return Ct(s) && (s = n), pi(jt(i, 1, Ct, !0), Ne(s, 2));
        }), Hv = Ge(function(i) {
          var s = Xn(i);
          return s = typeof s == "function" ? s : n, pi(jt(i, 1, Ct, !0), n, s);
        });
        function Uv(i) {
          return i && i.length ? pi(i) : [];
        }
        function Wv(i, s) {
          return i && i.length ? pi(i, Ne(s, 2)) : [];
        }
        function Vv(i, s) {
          return s = typeof s == "function" ? s : n, i && i.length ? pi(i, n, s) : [];
        }
        function O_(i) {
          if (!(i && i.length))
            return [];
          var s = 0;
          return i = ci(i, function(d) {
            if (Ct(d))
              return s = qt(d.length, s), !0;
          }), Gu(s, function(d) {
            return St(i, Uu(d));
          });
        }
        function zh(i, s) {
          if (!(i && i.length))
            return [];
          var d = O_(i);
          return s == null ? d : St(d, function(S) {
            return In(s, n, S);
          });
        }
        var Gv = Ge(function(i, s) {
          return Ct(i) ? Os(i, s) : [];
        }), jv = Ge(function(i) {
          return c_(ci(i, Ct));
        }), zv = Ge(function(i) {
          var s = Xn(i);
          return Ct(s) && (s = n), c_(ci(i, Ct), Ne(s, 2));
        }), Kv = Ge(function(i) {
          var s = Xn(i);
          return s = typeof s == "function" ? s : n, c_(ci(i, Ct), n, s);
        }), Yv = Ge(O_);
        function Zv(i, s) {
          return dh(i || [], s || [], Rs);
        }
        function Xv(i, s) {
          return dh(i || [], s || [], Ds);
        }
        var Jv = Ge(function(i) {
          var s = i.length, d = s > 1 ? i[s - 1] : n;
          return d = typeof d == "function" ? (i.pop(), d) : n, zh(i, d);
        });
        function Kh(i) {
          var s = O(i);
          return s.__chain__ = !0, s;
        }
        function Qv(i, s) {
          return s(i), i;
        }
        function lo(i, s) {
          return s(i);
        }
        var eI = jr(function(i) {
          var s = i.length, d = s ? i[0] : 0, S = this.__wrapped__, g = function(D) {
            return Qu(D, i);
          };
          return s > 1 || this.__actions__.length || !(S instanceof Ze) || !zr(d) ? this.thru(g) : (S = S.slice(d, +d + (s ? 1 : 0)), S.__actions__.push({
            func: lo,
            args: [g],
            thisArg: n
          }), new Kn(S, this.__chain__).thru(function(D) {
            return s && !D.length && D.push(n), D;
          }));
        });
        function tI() {
          return Kh(this);
        }
        function nI() {
          return new Kn(this.value(), this.__chain__);
        }
        function rI() {
          this.__values__ === n && (this.__values__ = oA(this.value()));
          var i = this.__index__ >= this.__values__.length, s = i ? n : this.__values__[this.__index__++];
          return { done: i, value: s };
        }
        function iI() {
          return this;
        }
        function aI(i) {
          for (var s, d = this; d instanceof jl; ) {
            var S = Hh(d);
            S.__index__ = 0, S.__values__ = n, s ? g.__wrapped__ = S : s = S;
            var g = S;
            d = d.__wrapped__;
          }
          return g.__wrapped__ = i, s;
        }
        function sI() {
          var i = this.__wrapped__;
          if (i instanceof Ze) {
            var s = i;
            return this.__actions__.length && (s = new Ze(this)), s = s.reverse(), s.__actions__.push({
              func: lo,
              args: [R_],
              thisArg: n
            }), new Kn(s, this.__chain__);
          }
          return this.thru(R_);
        }
        function lI() {
          return _h(this.__wrapped__, this.__actions__);
        }
        var oI = Ql(function(i, s, d) {
          ct.call(i, d) ? ++i[d] : Vr(i, d, 1);
        });
        function uI(i, s, d) {
          var S = Me(i) ? vf : Qb;
          return d && on(i, s, d) && (s = n), S(i, Ne(s, 3));
        }
        function _I(i, s) {
          var d = Me(i) ? ci : zf;
          return d(i, Ne(s, 3));
        }
        var dI = bh(Uh), cI = bh(Wh);
        function fI(i, s) {
          return jt(oo(i, s), 1);
        }
        function hI(i, s) {
          return jt(oo(i, s), fe);
        }
        function AI(i, s, d) {
          return d = d === n ? 1 : Ue(d), jt(oo(i, s), d);
        }
        function Yh(i, s) {
          var d = Me(i) ? jn : Ei;
          return d(i, Ne(s, 3));
        }
        function Zh(i, s) {
          var d = Me(i) ? Pm : jf;
          return d(i, Ne(s, 3));
        }
        var EI = Ql(function(i, s, d) {
          ct.call(i, d) ? i[d].push(s) : Vr(i, d, [s]);
        });
        function pI(i, s, d, S) {
          i = En(i) ? i : Ka(i), d = d && !S ? Ue(d) : 0;
          var g = i.length;
          return d < 0 && (d = qt(g + d, 0)), ho(i) ? d <= g && i.indexOf(s, d) > -1 : !!g && Fa(i, s, d) > -1;
        }
        var TI = Ge(function(i, s, d) {
          var S = -1, g = typeof s == "function", D = En(i) ? G(i.length) : [];
          return Ei(i, function(x) {
            D[++S] = g ? In(s, x, d) : Cs(x, s, d);
          }), D;
        }), SI = Ql(function(i, s, d) {
          Vr(i, d, s);
        });
        function oo(i, s) {
          var d = Me(i) ? St : Qf;
          return d(i, Ne(s, 3));
        }
        function mI(i, s, d, S) {
          return i == null ? [] : (Me(s) || (s = s == null ? [] : [s]), d = S ? n : d, Me(d) || (d = d == null ? [] : [d]), rh(i, s, d));
        }
        var bI = Ql(function(i, s, d) {
          i[d ? 0 : 1].push(s);
        }, function() {
          return [[], []];
        });
        function LI(i, s, d) {
          var S = Me(i) ? ku : Rf, g = arguments.length < 3;
          return S(i, Ne(s, 4), d, g, Ei);
        }
        function vI(i, s, d) {
          var S = Me(i) ? xm : Rf, g = arguments.length < 3;
          return S(i, Ne(s, 4), d, g, jf);
        }
        function II(i, s) {
          var d = Me(i) ? ci : zf;
          return d(i, co(Ne(s, 3)));
        }
        function gI(i) {
          var s = Me(i) ? Uf : pL;
          return s(i);
        }
        function yI(i, s, d) {
          (d ? on(i, s, d) : s === n) ? s = 1 : s = Ue(s);
          var S = Me(i) ? Kb : TL;
          return S(i, s);
        }
        function RI(i) {
          var s = Me(i) ? Yb : mL;
          return s(i);
        }
        function OI(i) {
          if (i == null)
            return 0;
          if (En(i))
            return ho(i) ? qa(i) : i.length;
          var s = Jt(i);
          return s == Re || s == vt ? i.size : a_(i).length;
        }
        function CI(i, s, d) {
          var S = Me(i) ? Hu : bL;
          return d && on(i, s, d) && (s = n), S(i, Ne(s, 3));
        }
        var NI = Ge(function(i, s) {
          if (i == null)
            return [];
          var d = s.length;
          return d > 1 && on(i, s[0], s[1]) ? s = [] : d > 2 && on(s[0], s[1], s[2]) && (s = [s[0]]), rh(i, jt(s, 1), []);
        }), uo = _b || function() {
          return Gt.Date.now();
        };
        function DI(i, s) {
          if (typeof s != "function")
            throw new zn(o);
          return i = Ue(i), function() {
            if (--i < 1)
              return s.apply(this, arguments);
          };
        }
        function Xh(i, s, d) {
          return s = d ? n : s, s = i && s == null ? i.length : s, Gr(i, P, n, n, n, n, s);
        }
        function Jh(i, s) {
          var d;
          if (typeof s != "function")
            throw new zn(o);
          return i = Ue(i), function() {
            return --i > 0 && (d = s.apply(this, arguments)), i <= 1 && (s = n), d;
          };
        }
        var C_ = Ge(function(i, s, d) {
          var S = v;
          if (d.length) {
            var g = hi(d, ja(C_));
            S |= w;
          }
          return Gr(i, S, s, d, g);
        }), Qh = Ge(function(i, s, d) {
          var S = v | I;
          if (d.length) {
            var g = hi(d, ja(Qh));
            S |= w;
          }
          return Gr(s, S, i, d, g);
        });
        function eA(i, s, d) {
          s = d ? n : s;
          var S = Gr(i, y, n, n, n, n, n, s);
          return S.placeholder = eA.placeholder, S;
        }
        function tA(i, s, d) {
          s = d ? n : s;
          var S = Gr(i, C, n, n, n, n, n, s);
          return S.placeholder = tA.placeholder, S;
        }
        function nA(i, s, d) {
          var S, g, D, x, M, W, J = 0, Q = !1, te = !1, _e = !0;
          if (typeof i != "function")
            throw new zn(o);
          s = Jn(s) || 0, bt(d) && (Q = !!d.leading, te = "maxWait" in d, D = te ? qt(Jn(d.maxWait) || 0, s) : D, _e = "trailing" in d ? !!d.trailing : _e);
          function ge(Nt) {
            var Er = S, Zr = g;
            return S = g = n, J = Nt, x = i.apply(Zr, Er), x;
          }
          function De(Nt) {
            return J = Nt, M = Ps(ze, s), Q ? ge(Nt) : x;
          }
          function We(Nt) {
            var Er = Nt - W, Zr = Nt - J, bA = s - Er;
            return te ? Xt(bA, D - Zr) : bA;
          }
          function Be(Nt) {
            var Er = Nt - W, Zr = Nt - J;
            return W === n || Er >= s || Er < 0 || te && Zr >= D;
          }
          function ze() {
            var Nt = uo();
            if (Be(Nt))
              return Xe(Nt);
            M = Ps(ze, We(Nt));
          }
          function Xe(Nt) {
            return M = n, _e && S ? ge(Nt) : (S = g = n, x);
          }
          function On() {
            M !== n && ch(M), J = 0, S = W = g = M = n;
          }
          function un() {
            return M === n ? x : Xe(uo());
          }
          function Cn() {
            var Nt = uo(), Er = Be(Nt);
            if (S = arguments, g = this, W = Nt, Er) {
              if (M === n)
                return De(W);
              if (te)
                return ch(M), M = Ps(ze, s), ge(W);
            }
            return M === n && (M = Ps(ze, s)), x;
          }
          return Cn.cancel = On, Cn.flush = un, Cn;
        }
        var BI = Ge(function(i, s) {
          return Gf(i, 1, s);
        }), wI = Ge(function(i, s, d) {
          return Gf(i, Jn(s) || 0, d);
        });
        function PI(i) {
          return Gr(i, N);
        }
        function _o(i, s) {
          if (typeof i != "function" || s != null && typeof s != "function")
            throw new zn(o);
          var d = function() {
            var S = arguments, g = s ? s.apply(this, S) : S[0], D = d.cache;
            if (D.has(g))
              return D.get(g);
            var x = i.apply(this, S);
            return d.cache = D.set(g, x) || D, x;
          };
          return d.cache = new (_o.Cache || Wr)(), d;
        }
        _o.Cache = Wr;
        function co(i) {
          if (typeof i != "function")
            throw new zn(o);
          return function() {
            var s = arguments;
            switch (s.length) {
              case 0:
                return !i.call(this);
              case 1:
                return !i.call(this, s[0]);
              case 2:
                return !i.call(this, s[0], s[1]);
              case 3:
                return !i.call(this, s[0], s[1], s[2]);
            }
            return !i.apply(this, s);
          };
        }
        function xI(i) {
          return Jh(2, i);
        }
        var FI = LL(function(i, s) {
          s = s.length == 1 && Me(s[0]) ? St(s[0], gn(Ne())) : St(jt(s, 1), gn(Ne()));
          var d = s.length;
          return Ge(function(S) {
            for (var g = -1, D = Xt(S.length, d); ++g < D; )
              S[g] = s[g].call(this, S[g]);
            return In(i, this, S);
          });
        }), N_ = Ge(function(i, s) {
          var d = hi(s, ja(N_));
          return Gr(i, w, n, s, d);
        }), rA = Ge(function(i, s) {
          var d = hi(s, ja(rA));
          return Gr(i, F, n, s, d);
        }), MI = jr(function(i, s) {
          return Gr(i, q, n, n, n, s);
        });
        function qI(i, s) {
          if (typeof i != "function")
            throw new zn(o);
          return s = s === n ? s : Ue(s), Ge(i, s);
        }
        function $I(i, s) {
          if (typeof i != "function")
            throw new zn(o);
          return s = s == null ? 0 : qt(Ue(s), 0), Ge(function(d) {
            var S = d[s], g = Si(d, 0, s);
            return S && fi(g, S), In(i, this, g);
          });
        }
        function kI(i, s, d) {
          var S = !0, g = !0;
          if (typeof i != "function")
            throw new zn(o);
          return bt(d) && (S = "leading" in d ? !!d.leading : S, g = "trailing" in d ? !!d.trailing : g), nA(i, s, {
            leading: S,
            maxWait: s,
            trailing: g
          });
        }
        function HI(i) {
          return Xh(i, 1);
        }
        function UI(i, s) {
          return N_(h_(s), i);
        }
        function WI() {
          if (!arguments.length)
            return [];
          var i = arguments[0];
          return Me(i) ? i : [i];
        }
        function VI(i) {
          return Yn(i, m);
        }
        function GI(i, s) {
          return s = typeof s == "function" ? s : n, Yn(i, m, s);
        }
        function jI(i) {
          return Yn(i, p | m);
        }
        function zI(i, s) {
          return s = typeof s == "function" ? s : n, Yn(i, p | m, s);
        }
        function KI(i, s) {
          return s == null || Vf(i, s, Wt(s));
        }
        function Ar(i, s) {
          return i === s || i !== i && s !== s;
        }
        var YI = ro(n_), ZI = ro(function(i, s) {
          return i >= s;
        }), ha = Zf(/* @__PURE__ */ function() {
          return arguments;
        }()) ? Zf : function(i) {
          return yt(i) && ct.call(i, "callee") && !Ff.call(i, "callee");
        }, Me = G.isArray, XI = pf ? gn(pf) : aL;
        function En(i) {
          return i != null && fo(i.length) && !Kr(i);
        }
        function Ct(i) {
          return yt(i) && En(i);
        }
        function JI(i) {
          return i === !0 || i === !1 || yt(i) && ln(i) == re;
        }
        var mi = cb || H_, QI = Tf ? gn(Tf) : sL;
        function eg(i) {
          return yt(i) && i.nodeType === 1 && !xs(i);
        }
        function tg(i) {
          if (i == null)
            return !0;
          if (En(i) && (Me(i) || typeof i == "string" || typeof i.splice == "function" || mi(i) || za(i) || ha(i)))
            return !i.length;
          var s = Jt(i);
          if (s == Re || s == vt)
            return !i.size;
          if (ws(i))
            return !a_(i).length;
          for (var d in i)
            if (ct.call(i, d))
              return !1;
          return !0;
        }
        function ng(i, s) {
          return Ns(i, s);
        }
        function rg(i, s, d) {
          d = typeof d == "function" ? d : n;
          var S = d ? d(i, s) : n;
          return S === n ? Ns(i, s, n, d) : !!S;
        }
        function D_(i) {
          if (!yt(i))
            return !1;
          var s = ln(i);
          return s == He || s == xe || typeof i.message == "string" && typeof i.name == "string" && !xs(i);
        }
        function ig(i) {
          return typeof i == "number" && qf(i);
        }
        function Kr(i) {
          if (!bt(i))
            return !1;
          var s = ln(i);
          return s == Ve || s == Ye || s == ee || s == _t;
        }
        function iA(i) {
          return typeof i == "number" && i == Ue(i);
        }
        function fo(i) {
          return typeof i == "number" && i > -1 && i % 1 == 0 && i <= he;
        }
        function bt(i) {
          var s = typeof i;
          return i != null && (s == "object" || s == "function");
        }
        function yt(i) {
          return i != null && typeof i == "object";
        }
        var aA = Sf ? gn(Sf) : oL;
        function ag(i, s) {
          return i === s || i_(i, s, b_(s));
        }
        function sg(i, s, d) {
          return d = typeof d == "function" ? d : n, i_(i, s, b_(s), d);
        }
        function lg(i) {
          return sA(i) && i != +i;
        }
        function og(i) {
          if (GL(i))
            throw new Fe(l);
          return Xf(i);
        }
        function ug(i) {
          return i === null;
        }
        function _g(i) {
          return i == null;
        }
        function sA(i) {
          return typeof i == "number" || yt(i) && ln(i) == je;
        }
        function xs(i) {
          if (!yt(i) || ln(i) != $e)
            return !1;
          var s = $l(i);
          if (s === null)
            return !0;
          var d = ct.call(s, "constructor") && s.constructor;
          return typeof d == "function" && d instanceof d && xl.call(d) == sb;
        }
        var B_ = mf ? gn(mf) : uL;
        function dg(i) {
          return iA(i) && i >= -he && i <= he;
        }
        var lA = bf ? gn(bf) : _L;
        function ho(i) {
          return typeof i == "string" || !Me(i) && yt(i) && ln(i) == lr;
        }
        function Rn(i) {
          return typeof i == "symbol" || yt(i) && ln(i) == $n;
        }
        var za = Lf ? gn(Lf) : dL;
        function cg(i) {
          return i === n;
        }
        function fg(i) {
          return yt(i) && Jt(i) == Kt;
        }
        function hg(i) {
          return yt(i) && ln(i) == kn;
        }
        var Ag = ro(s_), Eg = ro(function(i, s) {
          return i <= s;
        });
        function oA(i) {
          if (!i)
            return [];
          if (En(i))
            return ho(i) ? fr(i) : An(i);
          if (Ls && i[Ls])
            return Km(i[Ls]());
          var s = Jt(i), d = s == Re ? zu : s == vt ? Bl : Ka;
          return d(i);
        }
        function Yr(i) {
          if (!i)
            return i === 0 ? i : 0;
          if (i = Jn(i), i === fe || i === -fe) {
            var s = i < 0 ? -1 : 1;
            return s * we;
          }
          return i === i ? i : 0;
        }
        function Ue(i) {
          var s = Yr(i), d = s % 1;
          return s === s ? d ? s - d : s : 0;
        }
        function uA(i) {
          return i ? _a(Ue(i), 0, se) : 0;
        }
        function Jn(i) {
          if (typeof i == "number")
            return i;
          if (Rn(i))
            return Ie;
          if (bt(i)) {
            var s = typeof i.valueOf == "function" ? i.valueOf() : i;
            i = bt(s) ? s + "" : s;
          }
          if (typeof i != "string")
            return i === 0 ? i : +i;
          i = Of(i);
          var d = Du.test(i);
          return d || k.test(i) ? Dm(i.slice(2), d ? 2 : 8) : Ol.test(i) ? Ie : +i;
        }
        function _A(i) {
          return Nr(i, pn(i));
        }
        function pg(i) {
          return i ? _a(Ue(i), -he, he) : i === 0 ? i : 0;
        }
        function ut(i) {
          return i == null ? "" : yn(i);
        }
        var Tg = Va(function(i, s) {
          if (ws(s) || En(s)) {
            Nr(s, Wt(s), i);
            return;
          }
          for (var d in s)
            ct.call(s, d) && Rs(i, d, s[d]);
        }), dA = Va(function(i, s) {
          Nr(s, pn(s), i);
        }), Ao = Va(function(i, s, d, S) {
          Nr(s, pn(s), i, S);
        }), Sg = Va(function(i, s, d, S) {
          Nr(s, Wt(s), i, S);
        }), mg = jr(Qu);
        function bg(i, s) {
          var d = Wa(i);
          return s == null ? d : Wf(d, s);
        }
        var Lg = Ge(function(i, s) {
          i = ht(i);
          var d = -1, S = s.length, g = S > 2 ? s[2] : n;
          for (g && on(s[0], s[1], g) && (S = 1); ++d < S; )
            for (var D = s[d], x = pn(D), M = -1, W = x.length; ++M < W; ) {
              var J = x[M], Q = i[J];
              (Q === n || Ar(Q, ka[J]) && !ct.call(i, J)) && (i[J] = D[J]);
            }
          return i;
        }), vg = Ge(function(i) {
          return i.push(n, Oh), In(cA, n, i);
        });
        function Ig(i, s) {
          return If(i, Ne(s, 3), Cr);
        }
        function gg(i, s) {
          return If(i, Ne(s, 3), t_);
        }
        function yg(i, s) {
          return i == null ? i : e_(i, Ne(s, 3), pn);
        }
        function Rg(i, s) {
          return i == null ? i : Kf(i, Ne(s, 3), pn);
        }
        function Og(i, s) {
          return i && Cr(i, Ne(s, 3));
        }
        function Cg(i, s) {
          return i && t_(i, Ne(s, 3));
        }
        function Ng(i) {
          return i == null ? [] : Yl(i, Wt(i));
        }
        function Dg(i) {
          return i == null ? [] : Yl(i, pn(i));
        }
        function w_(i, s, d) {
          var S = i == null ? n : da(i, s);
          return S === n ? d : S;
        }
        function Bg(i, s) {
          return i != null && Dh(i, s, tL);
        }
        function P_(i, s) {
          return i != null && Dh(i, s, nL);
        }
        var wg = vh(function(i, s, d) {
          s != null && typeof s.toString != "function" && (s = Fl.call(s)), i[s] = d;
        }, F_(Tn)), Pg = vh(function(i, s, d) {
          s != null && typeof s.toString != "function" && (s = Fl.call(s)), ct.call(i, s) ? i[s].push(d) : i[s] = [d];
        }, Ne), xg = Ge(Cs);
        function Wt(i) {
          return En(i) ? Hf(i) : a_(i);
        }
        function pn(i) {
          return En(i) ? Hf(i, !0) : cL(i);
        }
        function Fg(i, s) {
          var d = {};
          return s = Ne(s, 3), Cr(i, function(S, g, D) {
            Vr(d, s(S, g, D), S);
          }), d;
        }
        function Mg(i, s) {
          var d = {};
          return s = Ne(s, 3), Cr(i, function(S, g, D) {
            Vr(d, g, s(S, g, D));
          }), d;
        }
        var qg = Va(function(i, s, d) {
          Zl(i, s, d);
        }), cA = Va(function(i, s, d, S) {
          Zl(i, s, d, S);
        }), $g = jr(function(i, s) {
          var d = {};
          if (i == null)
            return d;
          var S = !1;
          s = St(s, function(D) {
            return D = Ti(D, i), S || (S = D.length > 1), D;
          }), Nr(i, S_(i), d), S && (d = Yn(d, p | T | m, wL));
          for (var g = s.length; g--; )
            d_(d, s[g]);
          return d;
        });
        function kg(i, s) {
          return fA(i, co(Ne(s)));
        }
        var Hg = jr(function(i, s) {
          return i == null ? {} : hL(i, s);
        });
        function fA(i, s) {
          if (i == null)
            return {};
          var d = St(S_(i), function(S) {
            return [S];
          });
          return s = Ne(s), ih(i, d, function(S, g) {
            return s(S, g[0]);
          });
        }
        function Ug(i, s, d) {
          s = Ti(s, i);
          var S = -1, g = s.length;
          for (g || (g = 1, i = n); ++S < g; ) {
            var D = i == null ? n : i[Dr(s[S])];
            D === n && (S = g, D = d), i = Kr(D) ? D.call(i) : D;
          }
          return i;
        }
        function Wg(i, s, d) {
          return i == null ? i : Ds(i, s, d);
        }
        function Vg(i, s, d, S) {
          return S = typeof S == "function" ? S : n, i == null ? i : Ds(i, s, d, S);
        }
        var hA = yh(Wt), AA = yh(pn);
        function Gg(i, s, d) {
          var S = Me(i), g = S || mi(i) || za(i);
          if (s = Ne(s, 4), d == null) {
            var D = i && i.constructor;
            g ? d = S ? new D() : [] : bt(i) ? d = Kr(D) ? Wa($l(i)) : {} : d = {};
          }
          return (g ? jn : Cr)(i, function(x, M, W) {
            return s(d, x, M, W);
          }), d;
        }
        function jg(i, s) {
          return i == null ? !0 : d_(i, s);
        }
        function zg(i, s, d) {
          return i == null ? i : uh(i, s, h_(d));
        }
        function Kg(i, s, d, S) {
          return S = typeof S == "function" ? S : n, i == null ? i : uh(i, s, h_(d), S);
        }
        function Ka(i) {
          return i == null ? [] : ju(i, Wt(i));
        }
        function Yg(i) {
          return i == null ? [] : ju(i, pn(i));
        }
        function Zg(i, s, d) {
          return d === n && (d = s, s = n), d !== n && (d = Jn(d), d = d === d ? d : 0), s !== n && (s = Jn(s), s = s === s ? s : 0), _a(Jn(i), s, d);
        }
        function Xg(i, s, d) {
          return s = Yr(s), d === n ? (d = s, s = 0) : d = Yr(d), i = Jn(i), rL(i, s, d);
        }
        function Jg(i, s, d) {
          if (d && typeof d != "boolean" && on(i, s, d) && (s = d = n), d === n && (typeof s == "boolean" ? (d = s, s = n) : typeof i == "boolean" && (d = i, i = n)), i === n && s === n ? (i = 0, s = 1) : (i = Yr(i), s === n ? (s = i, i = 0) : s = Yr(s)), i > s) {
            var S = i;
            i = s, s = S;
          }
          if (d || i % 1 || s % 1) {
            var g = $f();
            return Xt(i + g * (s - i + Nm("1e-" + ((g + "").length - 1))), s);
          }
          return o_(i, s);
        }
        var Qg = Ga(function(i, s, d) {
          return s = s.toLowerCase(), i + (d ? EA(s) : s);
        });
        function EA(i) {
          return x_(ut(i).toLowerCase());
        }
        function pA(i) {
          return i = ut(i), i && i.replace(ve, Wm).replace(mm, "");
        }
        function ey(i, s, d) {
          i = ut(i), s = yn(s);
          var S = i.length;
          d = d === n ? S : _a(Ue(d), 0, S);
          var g = d;
          return d -= s.length, d >= 0 && i.slice(d, g) == s;
        }
        function ty(i) {
          return i = ut(i), i && Es.test(i) ? i.replace(dr, Vm) : i;
        }
        function ny(i) {
          return i = ut(i), i && ps.test(i) ? i.replace(_i, "\\$&") : i;
        }
        var ry = Ga(function(i, s, d) {
          return i + (d ? "-" : "") + s.toLowerCase();
        }), iy = Ga(function(i, s, d) {
          return i + (d ? " " : "") + s.toLowerCase();
        }), ay = mh("toLowerCase");
        function sy(i, s, d) {
          i = ut(i), s = Ue(s);
          var S = s ? qa(i) : 0;
          if (!s || S >= s)
            return i;
          var g = (s - S) / 2;
          return no(Wl(g), d) + i + no(Ul(g), d);
        }
        function ly(i, s, d) {
          i = ut(i), s = Ue(s);
          var S = s ? qa(i) : 0;
          return s && S < s ? i + no(s - S, d) : i;
        }
        function oy(i, s, d) {
          i = ut(i), s = Ue(s);
          var S = s ? qa(i) : 0;
          return s && S < s ? no(s - S, d) + i : i;
        }
        function uy(i, s, d) {
          return d || s == null ? s = 0 : s && (s = +s), Eb(ut(i).replace(Yt, ""), s || 0);
        }
        function _y(i, s, d) {
          return (d ? on(i, s, d) : s === n) ? s = 1 : s = Ue(s), u_(ut(i), s);
        }
        function dy() {
          var i = arguments, s = ut(i[0]);
          return i.length < 3 ? s : s.replace(i[1], i[2]);
        }
        var cy = Ga(function(i, s, d) {
          return i + (d ? "_" : "") + s.toLowerCase();
        });
        function fy(i, s, d) {
          return d && typeof d != "number" && on(i, s, d) && (s = d = n), d = d === n ? se : d >>> 0, d ? (i = ut(i), i && (typeof s == "string" || s != null && !B_(s)) && (s = yn(s), !s && Ma(i)) ? Si(fr(i), 0, d) : i.split(s, d)) : [];
        }
        var hy = Ga(function(i, s, d) {
          return i + (d ? " " : "") + x_(s);
        });
        function Ay(i, s, d) {
          return i = ut(i), d = d == null ? 0 : _a(Ue(d), 0, i.length), s = yn(s), i.slice(d, d + s.length) == s;
        }
        function Ey(i, s, d) {
          var S = O.templateSettings;
          d && on(i, s, d) && (s = n), i = ut(i), s = Ao({}, s, S, Rh);
          var g = Ao({}, s.imports, S.imports, Rh), D = Wt(g), x = ju(g, D), M, W, J = 0, Q = s.interpolate || dt, te = "__p += '", _e = Ku(
            (s.escape || dt).source + "|" + Q.source + "|" + (Q === na ? Rl : dt).source + "|" + (s.evaluate || dt).source + "|$",
            "g"
          ), ge = "//# sourceURL=" + (ct.call(s, "sourceURL") ? (s.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++gm + "]") + `
`;
          i.replace(_e, function(Be, ze, Xe, On, un, Cn) {
            return Xe || (Xe = On), te += i.slice(J, Cn).replace(Ht, Gm), ze && (M = !0, te += `' +
__e(` + ze + `) +
'`), un && (W = !0, te += `';
` + un + `;
__p += '`), Xe && (te += `' +
((__t = (` + Xe + `)) == null ? '' : __t) +
'`), J = Cn + Be.length, Be;
          }), te += `';
`;
          var De = ct.call(s, "variable") && s.variable;
          if (!De)
            te = `with (obj) {
` + te + `
}
`;
          else if (sn.test(De))
            throw new Fe(u);
          te = (W ? te.replace(ta, "") : te).replace(yr, "$1").replace(Rr, "$1;"), te = "function(" + (De || "obj") + `) {
` + (De ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + (M ? ", __e = _.escape" : "") + (W ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + te + `return __p
}`;
          var We = SA(function() {
            return at(D, ge + "return " + te).apply(n, x);
          });
          if (We.source = te, D_(We))
            throw We;
          return We;
        }
        function py(i) {
          return ut(i).toLowerCase();
        }
        function Ty(i) {
          return ut(i).toUpperCase();
        }
        function Sy(i, s, d) {
          if (i = ut(i), i && (d || s === n))
            return Of(i);
          if (!i || !(s = yn(s)))
            return i;
          var S = fr(i), g = fr(s), D = Cf(S, g), x = Nf(S, g) + 1;
          return Si(S, D, x).join("");
        }
        function my(i, s, d) {
          if (i = ut(i), i && (d || s === n))
            return i.slice(0, Bf(i) + 1);
          if (!i || !(s = yn(s)))
            return i;
          var S = fr(i), g = Nf(S, fr(s)) + 1;
          return Si(S, 0, g).join("");
        }
        function by(i, s, d) {
          if (i = ut(i), i && (d || s === n))
            return i.replace(Yt, "");
          if (!i || !(s = yn(s)))
            return i;
          var S = fr(i), g = Cf(S, fr(s));
          return Si(S, g).join("");
        }
        function Ly(i, s) {
          var d = U, S = V;
          if (bt(s)) {
            var g = "separator" in s ? s.separator : g;
            d = "length" in s ? Ue(s.length) : d, S = "omission" in s ? yn(s.omission) : S;
          }
          i = ut(i);
          var D = i.length;
          if (Ma(i)) {
            var x = fr(i);
            D = x.length;
          }
          if (d >= D)
            return i;
          var M = d - qa(S);
          if (M < 1)
            return S;
          var W = x ? Si(x, 0, M).join("") : i.slice(0, M);
          if (g === n)
            return W + S;
          if (x && (M += W.length - M), B_(g)) {
            if (i.slice(M).search(g)) {
              var J, Q = W;
              for (g.global || (g = Ku(g.source, ut(Ts.exec(g)) + "g")), g.lastIndex = 0; J = g.exec(Q); )
                var te = J.index;
              W = W.slice(0, te === n ? M : te);
            }
          } else if (i.indexOf(yn(g), M) != M) {
            var _e = W.lastIndexOf(g);
            _e > -1 && (W = W.slice(0, _e));
          }
          return W + S;
        }
        function vy(i) {
          return i = ut(i), i && As.test(i) ? i.replace(ui, Jm) : i;
        }
        var Iy = Ga(function(i, s, d) {
          return i + (d ? " " : "") + s.toUpperCase();
        }), x_ = mh("toUpperCase");
        function TA(i, s, d) {
          return i = ut(i), s = d ? n : s, s === n ? zm(i) ? tb(i) : qm(i) : i.match(s) || [];
        }
        var SA = Ge(function(i, s) {
          try {
            return In(i, n, s);
          } catch (d) {
            return D_(d) ? d : new Fe(d);
          }
        }), gy = jr(function(i, s) {
          return jn(s, function(d) {
            d = Dr(d), Vr(i, d, C_(i[d], i));
          }), i;
        });
        function yy(i) {
          var s = i == null ? 0 : i.length, d = Ne();
          return i = s ? St(i, function(S) {
            if (typeof S[1] != "function")
              throw new zn(o);
            return [d(S[0]), S[1]];
          }) : [], Ge(function(S) {
            for (var g = -1; ++g < s; ) {
              var D = i[g];
              if (In(D[0], this, S))
                return In(D[1], this, S);
            }
          });
        }
        function Ry(i) {
          return Jb(Yn(i, p));
        }
        function F_(i) {
          return function() {
            return i;
          };
        }
        function Oy(i, s) {
          return i == null || i !== i ? s : i;
        }
        var Cy = Lh(), Ny = Lh(!0);
        function Tn(i) {
          return i;
        }
        function M_(i) {
          return Jf(typeof i == "function" ? i : Yn(i, p));
        }
        function Dy(i) {
          return eh(Yn(i, p));
        }
        function By(i, s) {
          return th(i, Yn(s, p));
        }
        var wy = Ge(function(i, s) {
          return function(d) {
            return Cs(d, i, s);
          };
        }), Py = Ge(function(i, s) {
          return function(d) {
            return Cs(i, d, s);
          };
        });
        function q_(i, s, d) {
          var S = Wt(s), g = Yl(s, S);
          d == null && !(bt(s) && (g.length || !S.length)) && (d = s, s = i, i = this, g = Yl(s, Wt(s)));
          var D = !(bt(d) && "chain" in d) || !!d.chain, x = Kr(i);
          return jn(g, function(M) {
            var W = s[M];
            i[M] = W, x && (i.prototype[M] = function() {
              var J = this.__chain__;
              if (D || J) {
                var Q = i(this.__wrapped__), te = Q.__actions__ = An(this.__actions__);
                return te.push({ func: W, args: arguments, thisArg: i }), Q.__chain__ = J, Q;
              }
              return W.apply(i, fi([this.value()], arguments));
            });
          }), i;
        }
        function xy() {
          return Gt._ === this && (Gt._ = lb), this;
        }
        function $_() {
        }
        function Fy(i) {
          return i = Ue(i), Ge(function(s) {
            return nh(s, i);
          });
        }
        var My = E_(St), qy = E_(vf), $y = E_(Hu);
        function mA(i) {
          return v_(i) ? Uu(Dr(i)) : AL(i);
        }
        function ky(i) {
          return function(s) {
            return i == null ? n : da(i, s);
          };
        }
        var Hy = Ih(), Uy = Ih(!0);
        function k_() {
          return [];
        }
        function H_() {
          return !1;
        }
        function Wy() {
          return {};
        }
        function Vy() {
          return "";
        }
        function Gy() {
          return !0;
        }
        function jy(i, s) {
          if (i = Ue(i), i < 1 || i > he)
            return [];
          var d = se, S = Xt(i, se);
          s = Ne(s), i -= se;
          for (var g = Gu(S, s); ++d < i; )
            s(d);
          return g;
        }
        function zy(i) {
          return Me(i) ? St(i, Dr) : Rn(i) ? [i] : An(kh(ut(i)));
        }
        function Ky(i) {
          var s = ++ab;
          return ut(i) + s;
        }
        var Yy = to(function(i, s) {
          return i + s;
        }, 0), Zy = p_("ceil"), Xy = to(function(i, s) {
          return i / s;
        }, 1), Jy = p_("floor");
        function Qy(i) {
          return i && i.length ? Kl(i, Tn, n_) : n;
        }
        function eR(i, s) {
          return i && i.length ? Kl(i, Ne(s, 2), n_) : n;
        }
        function tR(i) {
          return yf(i, Tn);
        }
        function nR(i, s) {
          return yf(i, Ne(s, 2));
        }
        function rR(i) {
          return i && i.length ? Kl(i, Tn, s_) : n;
        }
        function iR(i, s) {
          return i && i.length ? Kl(i, Ne(s, 2), s_) : n;
        }
        var aR = to(function(i, s) {
          return i * s;
        }, 1), sR = p_("round"), lR = to(function(i, s) {
          return i - s;
        }, 0);
        function oR(i) {
          return i && i.length ? Vu(i, Tn) : 0;
        }
        function uR(i, s) {
          return i && i.length ? Vu(i, Ne(s, 2)) : 0;
        }
        return O.after = DI, O.ary = Xh, O.assign = Tg, O.assignIn = dA, O.assignInWith = Ao, O.assignWith = Sg, O.at = mg, O.before = Jh, O.bind = C_, O.bindAll = gy, O.bindKey = Qh, O.castArray = WI, O.chain = Kh, O.chunk = JL, O.compact = QL, O.concat = ev, O.cond = yy, O.conforms = Ry, O.constant = F_, O.countBy = oI, O.create = bg, O.curry = eA, O.curryRight = tA, O.debounce = nA, O.defaults = Lg, O.defaultsDeep = vg, O.defer = BI, O.delay = wI, O.difference = tv, O.differenceBy = nv, O.differenceWith = rv, O.drop = iv, O.dropRight = av, O.dropRightWhile = sv, O.dropWhile = lv, O.fill = ov, O.filter = _I, O.flatMap = fI, O.flatMapDeep = hI, O.flatMapDepth = AI, O.flatten = Vh, O.flattenDeep = uv, O.flattenDepth = _v, O.flip = PI, O.flow = Cy, O.flowRight = Ny, O.fromPairs = dv, O.functions = Ng, O.functionsIn = Dg, O.groupBy = EI, O.initial = fv, O.intersection = hv, O.intersectionBy = Av, O.intersectionWith = Ev, O.invert = wg, O.invertBy = Pg, O.invokeMap = TI, O.iteratee = M_, O.keyBy = SI, O.keys = Wt, O.keysIn = pn, O.map = oo, O.mapKeys = Fg, O.mapValues = Mg, O.matches = Dy, O.matchesProperty = By, O.memoize = _o, O.merge = qg, O.mergeWith = cA, O.method = wy, O.methodOf = Py, O.mixin = q_, O.negate = co, O.nthArg = Fy, O.omit = $g, O.omitBy = kg, O.once = xI, O.orderBy = mI, O.over = My, O.overArgs = FI, O.overEvery = qy, O.overSome = $y, O.partial = N_, O.partialRight = rA, O.partition = bI, O.pick = Hg, O.pickBy = fA, O.property = mA, O.propertyOf = ky, O.pull = mv, O.pullAll = jh, O.pullAllBy = bv, O.pullAllWith = Lv, O.pullAt = vv, O.range = Hy, O.rangeRight = Uy, O.rearg = MI, O.reject = II, O.remove = Iv, O.rest = qI, O.reverse = R_, O.sampleSize = yI, O.set = Wg, O.setWith = Vg, O.shuffle = RI, O.slice = gv, O.sortBy = NI, O.sortedUniq = Bv, O.sortedUniqBy = wv, O.split = fy, O.spread = $I, O.tail = Pv, O.take = xv, O.takeRight = Fv, O.takeRightWhile = Mv, O.takeWhile = qv, O.tap = Qv, O.throttle = kI, O.thru = lo, O.toArray = oA, O.toPairs = hA, O.toPairsIn = AA, O.toPath = zy, O.toPlainObject = _A, O.transform = Gg, O.unary = HI, O.union = $v, O.unionBy = kv, O.unionWith = Hv, O.uniq = Uv, O.uniqBy = Wv, O.uniqWith = Vv, O.unset = jg, O.unzip = O_, O.unzipWith = zh, O.update = zg, O.updateWith = Kg, O.values = Ka, O.valuesIn = Yg, O.without = Gv, O.words = TA, O.wrap = UI, O.xor = jv, O.xorBy = zv, O.xorWith = Kv, O.zip = Yv, O.zipObject = Zv, O.zipObjectDeep = Xv, O.zipWith = Jv, O.entries = hA, O.entriesIn = AA, O.extend = dA, O.extendWith = Ao, q_(O, O), O.add = Yy, O.attempt = SA, O.camelCase = Qg, O.capitalize = EA, O.ceil = Zy, O.clamp = Zg, O.clone = VI, O.cloneDeep = jI, O.cloneDeepWith = zI, O.cloneWith = GI, O.conformsTo = KI, O.deburr = pA, O.defaultTo = Oy, O.divide = Xy, O.endsWith = ey, O.eq = Ar, O.escape = ty, O.escapeRegExp = ny, O.every = uI, O.find = dI, O.findIndex = Uh, O.findKey = Ig, O.findLast = cI, O.findLastIndex = Wh, O.findLastKey = gg, O.floor = Jy, O.forEach = Yh, O.forEachRight = Zh, O.forIn = yg, O.forInRight = Rg, O.forOwn = Og, O.forOwnRight = Cg, O.get = w_, O.gt = YI, O.gte = ZI, O.has = Bg, O.hasIn = P_, O.head = Gh, O.identity = Tn, O.includes = pI, O.indexOf = cv, O.inRange = Xg, O.invoke = xg, O.isArguments = ha, O.isArray = Me, O.isArrayBuffer = XI, O.isArrayLike = En, O.isArrayLikeObject = Ct, O.isBoolean = JI, O.isBuffer = mi, O.isDate = QI, O.isElement = eg, O.isEmpty = tg, O.isEqual = ng, O.isEqualWith = rg, O.isError = D_, O.isFinite = ig, O.isFunction = Kr, O.isInteger = iA, O.isLength = fo, O.isMap = aA, O.isMatch = ag, O.isMatchWith = sg, O.isNaN = lg, O.isNative = og, O.isNil = _g, O.isNull = ug, O.isNumber = sA, O.isObject = bt, O.isObjectLike = yt, O.isPlainObject = xs, O.isRegExp = B_, O.isSafeInteger = dg, O.isSet = lA, O.isString = ho, O.isSymbol = Rn, O.isTypedArray = za, O.isUndefined = cg, O.isWeakMap = fg, O.isWeakSet = hg, O.join = pv, O.kebabCase = ry, O.last = Xn, O.lastIndexOf = Tv, O.lowerCase = iy, O.lowerFirst = ay, O.lt = Ag, O.lte = Eg, O.max = Qy, O.maxBy = eR, O.mean = tR, O.meanBy = nR, O.min = rR, O.minBy = iR, O.stubArray = k_, O.stubFalse = H_, O.stubObject = Wy, O.stubString = Vy, O.stubTrue = Gy, O.multiply = aR, O.nth = Sv, O.noConflict = xy, O.noop = $_, O.now = uo, O.pad = sy, O.padEnd = ly, O.padStart = oy, O.parseInt = uy, O.random = Jg, O.reduce = LI, O.reduceRight = vI, O.repeat = _y, O.replace = dy, O.result = Ug, O.round = sR, O.runInContext = H, O.sample = gI, O.size = OI, O.snakeCase = cy, O.some = CI, O.sortedIndex = yv, O.sortedIndexBy = Rv, O.sortedIndexOf = Ov, O.sortedLastIndex = Cv, O.sortedLastIndexBy = Nv, O.sortedLastIndexOf = Dv, O.startCase = hy, O.startsWith = Ay, O.subtract = lR, O.sum = oR, O.sumBy = uR, O.template = Ey, O.times = jy, O.toFinite = Yr, O.toInteger = Ue, O.toLength = uA, O.toLower = py, O.toNumber = Jn, O.toSafeInteger = pg, O.toString = ut, O.toUpper = Ty, O.trim = Sy, O.trimEnd = my, O.trimStart = by, O.truncate = Ly, O.unescape = vy, O.uniqueId = Ky, O.upperCase = Iy, O.upperFirst = x_, O.each = Yh, O.eachRight = Zh, O.first = Gh, q_(O, function() {
          var i = {};
          return Cr(O, function(s, d) {
            ct.call(O.prototype, d) || (i[d] = s);
          }), i;
        }(), { chain: !1 }), O.VERSION = r, jn(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(i) {
          O[i].placeholder = O;
        }), jn(["drop", "take"], function(i, s) {
          Ze.prototype[i] = function(d) {
            d = d === n ? 1 : qt(Ue(d), 0);
            var S = this.__filtered__ && !s ? new Ze(this) : this.clone();
            return S.__filtered__ ? S.__takeCount__ = Xt(d, S.__takeCount__) : S.__views__.push({
              size: Xt(d, se),
              type: i + (S.__dir__ < 0 ? "Right" : "")
            }), S;
          }, Ze.prototype[i + "Right"] = function(d) {
            return this.reverse()[i](d).reverse();
          };
        }), jn(["filter", "map", "takeWhile"], function(i, s) {
          var d = s + 1, S = d == Z || d == oe;
          Ze.prototype[i] = function(g) {
            var D = this.clone();
            return D.__iteratees__.push({
              iteratee: Ne(g, 3),
              type: d
            }), D.__filtered__ = D.__filtered__ || S, D;
          };
        }), jn(["head", "last"], function(i, s) {
          var d = "take" + (s ? "Right" : "");
          Ze.prototype[i] = function() {
            return this[d](1).value()[0];
          };
        }), jn(["initial", "tail"], function(i, s) {
          var d = "drop" + (s ? "" : "Right");
          Ze.prototype[i] = function() {
            return this.__filtered__ ? new Ze(this) : this[d](1);
          };
        }), Ze.prototype.compact = function() {
          return this.filter(Tn);
        }, Ze.prototype.find = function(i) {
          return this.filter(i).head();
        }, Ze.prototype.findLast = function(i) {
          return this.reverse().find(i);
        }, Ze.prototype.invokeMap = Ge(function(i, s) {
          return typeof i == "function" ? new Ze(this) : this.map(function(d) {
            return Cs(d, i, s);
          });
        }), Ze.prototype.reject = function(i) {
          return this.filter(co(Ne(i)));
        }, Ze.prototype.slice = function(i, s) {
          i = Ue(i);
          var d = this;
          return d.__filtered__ && (i > 0 || s < 0) ? new Ze(d) : (i < 0 ? d = d.takeRight(-i) : i && (d = d.drop(i)), s !== n && (s = Ue(s), d = s < 0 ? d.dropRight(-s) : d.take(s - i)), d);
        }, Ze.prototype.takeRightWhile = function(i) {
          return this.reverse().takeWhile(i).reverse();
        }, Ze.prototype.toArray = function() {
          return this.take(se);
        }, Cr(Ze.prototype, function(i, s) {
          var d = /^(?:filter|find|map|reject)|While$/.test(s), S = /^(?:head|last)$/.test(s), g = O[S ? "take" + (s == "last" ? "Right" : "") : s], D = S || /^find/.test(s);
          g && (O.prototype[s] = function() {
            var x = this.__wrapped__, M = S ? [1] : arguments, W = x instanceof Ze, J = M[0], Q = W || Me(x), te = function(ze) {
              var Xe = g.apply(O, fi([ze], M));
              return S && _e ? Xe[0] : Xe;
            };
            Q && d && typeof J == "function" && J.length != 1 && (W = Q = !1);
            var _e = this.__chain__, ge = !!this.__actions__.length, De = D && !_e, We = W && !ge;
            if (!D && Q) {
              x = We ? x : new Ze(this);
              var Be = i.apply(x, M);
              return Be.__actions__.push({ func: lo, args: [te], thisArg: n }), new Kn(Be, _e);
            }
            return De && We ? i.apply(this, M) : (Be = this.thru(te), De ? S ? Be.value()[0] : Be.value() : Be);
          });
        }), jn(["pop", "push", "shift", "sort", "splice", "unshift"], function(i) {
          var s = wl[i], d = /^(?:push|sort|unshift)$/.test(i) ? "tap" : "thru", S = /^(?:pop|shift)$/.test(i);
          O.prototype[i] = function() {
            var g = arguments;
            if (S && !this.__chain__) {
              var D = this.value();
              return s.apply(Me(D) ? D : [], g);
            }
            return this[d](function(x) {
              return s.apply(Me(x) ? x : [], g);
            });
          };
        }), Cr(Ze.prototype, function(i, s) {
          var d = O[s];
          if (d) {
            var S = d.name + "";
            ct.call(Ua, S) || (Ua[S] = []), Ua[S].push({ name: s, func: d });
          }
        }), Ua[eo(n, I).name] = [{
          name: "wrapper",
          func: n
        }], Ze.prototype.clone = vb, Ze.prototype.reverse = Ib, Ze.prototype.value = gb, O.prototype.at = eI, O.prototype.chain = tI, O.prototype.commit = nI, O.prototype.next = rI, O.prototype.plant = aI, O.prototype.reverse = sI, O.prototype.toJSON = O.prototype.valueOf = O.prototype.value = lI, O.prototype.first = O.prototype.head, Ls && (O.prototype[Ls] = iI), O;
      }, $a = nb();
      sa ? ((sa.exports = $a)._ = $a, Mu._ = $a) : Gt._ = $a;
    }).call(MH);
  }(Gs, Gs.exports)), Gs.exports;
}
var $H = qH();
function kH(e, {
  subTypeLocal: t = _(() => {
  })
}) {
  const n = f(e, "type"), r = f(e, "isStepsJustified");
  return {
    classWizard: _(() => {
      let l = `a_wizard a_wizard_${n.value}`;
      return r.value && (l += " a_wizard_justified"), t.value && (l += ` a_wizard_${n.value}_${$H.snakeCase(t.value)}`), l;
    })
  };
}
function HH(e, { emit: t }, {
  stepActiveComputed: n = _(() => 0),
  stepActiveLocal: r = B(0),
  stepsVisitedLocal: a = B({})
}) {
  const l = f(e, "isControlOutside"), o = f(e, "steps"), u = ({ stepIndex: T, step: m }) => {
    l.value ? t("goStepBack", {
      step: m,
      targetStepIndex: T,
      currentStepIndex: n.value
    }) : r.value = T;
  }, h = ({ stepIndex: T, step: m }) => {
    l.value ? t("goStepForward", {
      step: m,
      targetStepIndex: T,
      currentStepIndex: n.value
    }) : (r.value = T, a.value[T] = !0);
  };
  return {
    goOneStepBack: () => {
      n.value !== 0 && u({
        stepIndex: n.value - 1
      });
    },
    goOneStepForward: () => {
      n.value >= o.value.length - 1 || h({
        stepIndex: n.value + 1
      });
    },
    onStepClick: ({ stepIndex: T, step: m }) => {
      n.value !== T && (T < n.value ? u({ stepIndex: T, step: m }) : h({ stepIndex: T, step: m }));
    }
  };
}
function UH(e) {
  const t = f(e, "hasFocusJump"), n = f(e, "id"), r = B([]);
  return {
    setFocusToActiveStep: ({ stepActive: l }) => {
      t.value && !window.isScrollDisabled && setTimeout(() => {
        const o = `#${n.value}_${l}_focus`;
        Qr({
          selector: o
        });
      });
    },
    wizardTabsRef: r
  };
}
function WH(e, {
  setFocusToActiveStep: t = () => {
  }
}) {
  const n = f(e, "stepActive"), r = f(e, "stepsVisited"), a = f(e, "isControlOutside"), l = B(!1), o = B(0), u = B({
    0: !0
  }), h = _(() => a.value ? n.value : o.value), A = _(() => a.value ? r.value : u.value), E = () => {
    a.value || ae(n.value) || (o.value = n.value, u.value = {
      [n.value]: !0
    }), setTimeout(() => {
      l.value = !0;
    });
  };
  return tt(h, (p) => {
    l.value && t({ stepActive: p });
  }), {
    initStepActive: E,
    stepActiveComputed: h,
    stepActiveLocal: o,
    stepsVisitedComputed: A,
    stepsVisitedLocal: u
  };
}
function VH(e) {
  const t = f(e, "isMobile"), {
    isMobileWidth: n
  } = fn();
  return {
    isMobileLocal: _(() => t.value || n.value)
  };
}
function GH(e, {
  stepActiveComputed: t = _(() => 0)
}) {
  const n = f(e, "steps"), r = _(() => n.value.length);
  return {
    stepActiveNumber: _(() => t.value + 1),
    stepsCount: r
  };
}
function jH(e) {
  const t = f(e, "toolbarBottomTeleportId"), n = _(() => !!t.value);
  return {
    toolbarBottomTeleportSelector: _(() => {
      if (n.value)
        return `#${t.value}`;
    }),
    useTeleportToolbarBottom: n
  };
}
function zH(e) {
  const t = f(e, "subType"), n = f(e, "type");
  return {
    subTypeLocal: _(() => {
      if (t.value)
        return t.value;
      if (n.value === "line")
        return "square";
    })
  };
}
const KH = {
  name: "AWizard",
  props: {
    ariaLabel: {
      type: String,
      required: !1,
      default: "_A_WIZARD_ARIA_LABEL_"
    },
    ariaLabelSteps: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_ARIA_LABEL_"
    },
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_"
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_TITLE_"
    },
    extra: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_"
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_TITLE_"
    },
    hasFocusJump: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => ot("a_wizard_")
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isControlOutside: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMobile: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isStepsJustified: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isToolbarBottom: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isToolbarTop: {
      type: Boolean,
      required: !1,
      default: !1
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    stepActive: {
      type: Number,
      required: !1,
      default: void 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: Eu
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: Au
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    steps: {
      type: Array,
      required: !1,
      default: () => []
    },
    stepsProgressbarText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_"
    },
    stepsVisited: {
      type: Object,
      required: !1,
      default: void 0
    },
    subType: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e, t) => {
        const n = {
          arrows: [],
          basic: [],
          line: ["square", "circle", "square-bordered", "circle-bordered"],
          round: []
        };
        if (t) {
          if (t.type in n)
            return ae(e) || n[t.type].indexOf(e) !== -1;
        } else
          return ["square", "circle", "square-bordered", "circle-bordered"].indexOf(e) !== -1;
        return !1;
      }
    },
    toolbarBottomTeleportId: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "basic",
      validator: (e) => ["arrows", "line", "round", "basic"].indexOf(e) !== -1
    }
  },
  emits: [
    "goStepBack",
    "goStepForward"
  ],
  setup(e, t) {
    const {
      subTypeLocal: n
    } = zH(e), {
      classWizard: r
    } = kH(e, {
      subTypeLocal: n
    }), {
      setFocusToActiveStep: a,
      wizardTabsRef: l
    } = UH(e), {
      initStepActive: o,
      stepActiveComputed: u,
      stepActiveLocal: h,
      stepsVisitedComputed: A,
      stepsVisitedLocal: E
    } = WH(e, {
      setFocusToActiveStep: a
    }), {
      ariaLabelAttributes: p,
      ariaLabelStepsAttributes: T,
      idProgressbar: m,
      wizardAriaDescribedby: b
    } = FH(e, {
      stepActiveComputed: u
    }), {
      goOneStepBack: L,
      goOneStepForward: v,
      onStepClick: I
    } = HH(e, t, {
      stepActiveComputed: u,
      stepActiveLocal: h,
      stepsVisitedLocal: E
    }), {
      stepActiveNumber: R,
      stepsCount: y
    } = GH(e, {
      stepActiveComputed: u
    }), {
      toolbarBottomTeleportSelector: C,
      useTeleportToolbarBottom: w
    } = jH(e), {
      isMobileLocal: F
    } = VH(e);
    return o(), {
      ariaLabelAttributes: p,
      ariaLabelStepsAttributes: T,
      classWizard: r,
      goOneStepBack: L,
      goOneStepForward: v,
      idProgressbar: m,
      isMobileLocal: F,
      onStepClick: I,
      stepActiveComputed: u,
      stepActiveNumber: R,
      stepsCount: y,
      stepsVisitedComputed: A,
      toolbarBottomTeleportSelector: C,
      useTeleportToolbarBottom: w,
      wizardAriaDescribedby: b,
      wizardTabsRef: l
    };
  },
  render() {
    const e = c(xH, {
      backButtonAttributes: this.backButtonAttributes,
      backButtonClass: this.backButtonClass,
      backButtonIconLeft: this.backButtonIconLeft,
      backButtonIconRight: this.backButtonIconRight,
      backButtonText: this.backButtonText,
      backButtonTitle: this.backButtonTitle,
      extra: this.extra,
      forwardButtonAttributes: this.forwardButtonAttributes,
      forwardButtonClass: this.forwardButtonClass,
      forwardButtonIconLeft: this.forwardButtonIconLeft,
      forwardButtonIconRight: this.forwardButtonIconRight,
      forwardButtonText: this.forwardButtonText,
      forwardButtonTitle: this.forwardButtonTitle,
      isBackButtonDisabled: this.isBackButtonDisabled,
      isBackButtonHide: this.isBackButtonHide,
      isBackFirstButtonHide: this.isBackFirstButtonHide,
      isButtonsLoading: this.isButtonsLoading,
      isForwardButtonDisabled: this.isForwardButtonDisabled,
      isForwardButtonHide: this.isForwardButtonHide,
      isForwardLastButtonHide: this.isForwardLastButtonHide,
      stepActiveComputed: this.stepActiveComputed,
      steps: this.steps,
      onGoOneStepBack: this.goOneStepBack,
      onGoOneStepForward: this.goOneStepForward
    }, this.$slots);
    return c("div", {
      tabindex: 0,
      id: this.id,
      role: "application",
      "aria-describedby": this.wizardAriaDescribedby,
      class: [
        this.classWizard,
        {
          a_wizard_mobile: this.isMobileLocal,
          a_wizard_show_only_active_step_mobile: this.showOnlyActiveStepMobile
        }
      ],
      ...this.ariaLabelAttributes
    }, [
      c(pe, {
        id: this.idProgressbar,
        class: "a_sr_only",
        extra: {
          stepActive: this.stepActiveNumber,
          stepsCount: this.stepsCount
        },
        tag: "span",
        text: this.stepsProgressbarText
      }),
      c("ul", {
        class: "a_wizard__steps",
        role: "navigation",
        ...this.ariaLabelStepsAttributes
      }, [
        this.steps.map((t, n) => c(yH, {
          key: this.keyId ? t[this.keyId] : n,
          id: this.id,
          extra: this.extra,
          isBackButtonDisabled: this.isBackButtonDisabled,
          isBackStepButtonDisabled: this.isBackStepButtonDisabled,
          isForwardButtonDisabled: this.isForwardButtonDisabled,
          isForwardStepButtonDisabled: this.isForwardStepButtonDisabled,
          isMobile: this.isMobileLocal,
          isStepNumberVisible: this.isStepNumberVisible,
          showOnlyActiveStepMobile: this.showOnlyActiveStepMobile,
          step: t,
          stepActiveComputed: this.stepActiveComputed,
          stepIconError: this.stepIconError,
          stepIconWarning: this.stepIconWarning,
          stepIndex: n,
          stepsCount: this.stepsCount,
          onOnStepClick: this.onStepClick
        }, this.$slots))
      ]),
      this.isToolbarTop && e,
      c("div", {
        class: "a_wizard__tab_content"
      }, [
        this.steps.map((t, n) => c(NH, {
          key: this.keyId ? t[this.keyId] : n,
          id: this.id,
          extra: this.extra,
          step: t,
          stepActiveComputed: this.stepActiveComputed,
          stepIndex: n,
          stepsVisitedComputed: this.stepsVisitedComputed,
          wizardAriaDescribedby: this.wizardAriaDescribedby
        }, this.$slots))
      ]),
      this.isToolbarBottom && c(ti, {
        to: this.toolbarBottomTeleportSelector,
        disabled: !this.useTeleportToolbarBottom
      }, [
        e
      ])
    ]);
  }
};
function YH({ emit: e }) {
  return {
    goStepBackLocal: (r) => {
      e("goStepBack", r);
    },
    goStepForwardLocal: (r) => {
      e("goStepForward", r);
    }
  };
}
function ZH(e) {
  const t = f(e, "id"), n = _(() => `${t.value}_footer`), r = _(() => `${t.value}_wizard`);
  return {
    footerId: n,
    wizardId: r
  };
}
function XH() {
  const e = B(void 0);
  return {
    initWizard: () => {
      Jo().then(
        () => {
          e.value = !0;
        }
      );
    },
    isWizardVisible: e
  };
}
const Koe = {
  name: "AModalWizard",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ye.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ye.value.propsDefault.isCloseButtonHide
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => ye.value.propsDefault.isFooterSticky
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => ye.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => ye.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => ye.value.propsDefault.modalStyle
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => ye.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => ye.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => ye.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => ye.value.propsDefault.selectorCloseIds
    },
    showCloseButtonHeader: {
      type: Boolean,
      required: !1,
      default: !0
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => ye.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => ye.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    // WIZARD
    ariaLabel: {
      type: String,
      required: !1,
      default: "_A_WIZARD_ARIA_LABEL_"
    },
    ariaLabelSteps: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_ARIA_LABEL_"
    },
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_"
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_TITLE_"
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_"
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_TITLE_"
    },
    hasFocusJump: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => ot("a_modal_wizard_")
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isControlOutside: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMobile: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isStepsJustified: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    stepActive: {
      type: Number,
      default: void 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: Eu
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: Au
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    steps: {
      type: Array,
      default: () => []
    },
    stepsProgressbarText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_"
    },
    subType: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e, t) => {
        const n = {
          arrows: [],
          basic: [],
          line: ["square", "circle", "square-bordered", "circle-bordered"],
          round: []
        };
        if (t) {
          if (t.type in n)
            return ae(e) || n[t.type].indexOf(e) !== -1;
        } else
          return ["square", "circle", "square-bordered", "circle-bordered"].indexOf(e) !== -1;
        return !1;
      }
    },
    stepsVisited: {
      type: Object,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "basic",
      validator: (e) => ["arrows", "line", "round", "basic"].indexOf(e) !== -1
    }
  },
  emits: [
    "goStepBack",
    "goStepForward"
  ],
  setup(e, t) {
    const {
      goStepBackLocal: n,
      goStepForwardLocal: r
    } = YH(t), {
      footerId: a,
      wizardId: l
    } = ZH(e), {
      initWizard: o,
      isWizardVisible: u
    } = XH();
    return o(), {
      footerId: a,
      goStepBackLocal: n,
      goStepForwardLocal: r,
      isWizardVisible: u,
      wizardId: l
    };
  },
  render() {
    return c(Cu, {
      alwaysTranslate: this.alwaysTranslate,
      backdropZIndex: this.backdropZIndex,
      close: this.close,
      closeButtonAttributes: this.closeButtonAttributes,
      closeButtonClass: this.closeButtonClass,
      closeButtonId: this.closeButtonId,
      closeButtonText: this.closeButtonText,
      closeButtonTextScreenReaderFooter: this.closeButtonTextScreenReaderFooter,
      closeButtonTextScreenReaderHeader: this.closeButtonTextScreenReaderHeader,
      disabled: this.disabled,
      disabledSave: this.disabledSave,
      extra: this.extra,
      focusStartId: this.focusStartId,
      headerTag: this.headerTag,
      headerText: this.headerText,
      hideHeader: this.hideHeader,
      id: this.id,
      isCloseButtonHide: this.isCloseButtonHide,
      isFooterSticky: this.isFooterSticky,
      isSaveButtonHide: this.isSaveButtonHide,
      loading: this.loading,
      modalClass: this.modalClass,
      modalStyle: this.modalStyle,
      save: this.save,
      saveButtonAttributes: this.saveButtonAttributes,
      saveButtonClass: this.saveButtonClass,
      saveButtonId: this.saveButtonId,
      saveButtonText: this.saveButtonText,
      saveButtonTextScreenReader: this.saveButtonTextScreenReader,
      selectorClose: this.selectorClose,
      selectorCloseIds: this.selectorCloseIds,
      showCloseButtonHeader: this.showCloseButtonHeader,
      size: this.size,
      stop: this.stop,
      useEscape: this.useEscape,
      useFocusOnStart: this.useFocusOnStart,
      zIndex: this.zIndex
    }, {
      ...this.$slots || {},
      modalBody: () => [
        this.isWizardVisible && c(KH, {
          id: this.wizardId,
          ariaLabel: this.ariaLabel,
          ariaLabelSteps: this.ariaLabelSteps,
          backButtonAttributes: this.backButtonAttributes,
          backButtonClass: this.backButtonClass,
          backButtonIconLeft: this.backButtonIconLeft,
          backButtonIconRight: this.backButtonIconRight,
          backButtonText: this.backButtonText,
          backButtonTitle: this.backButtonTitle,
          forwardButtonAttributes: this.forwardButtonAttributes,
          forwardButtonClass: this.forwardButtonClass,
          forwardButtonIconLeft: this.forwardButtonIconLeft,
          forwardButtonIconRight: this.forwardButtonIconRight,
          forwardButtonText: this.forwardButtonText,
          forwardButtonTitle: this.forwardButtonTitle,
          hasFocusJump: this.hasFocusJump,
          extra: this.extra,
          isBackButtonDisabled: this.isBackButtonDisabled,
          isBackButtonHide: this.isBackButtonHide,
          isBackFirstButtonHide: this.isBackFirstButtonHide,
          isBackStepButtonDisabled: this.isBackStepButtonDisabled,
          isButtonsLoading: this.isButtonsLoading,
          isControlOutside: this.isControlOutside,
          isForwardButtonDisabled: this.isForwardButtonDisabled,
          isForwardButtonHide: this.isForwardButtonHide,
          isForwardLastButtonHide: this.isForwardLastButtonHide,
          isForwardStepButtonDisabled: this.isForwardStepButtonDisabled,
          isMobile: this.isMobile,
          isStepNumberVisible: this.isStepNumberVisible,
          isStepsJustified: this.isStepsJustified,
          keyId: this.keyId,
          isToolbarBottom: !0,
          isToolbarTop: !1,
          showOnlyActiveStepMobile: this.showOnlyActiveStepMobile,
          stepActive: this.stepActive,
          stepIconError: this.stepIconError,
          stepIconErrorText: this.stepIconErrorText,
          stepIconWarning: this.stepIconWarning,
          stepIconWarningText: this.stepIconWarningText,
          steps: this.steps,
          stepsProgressbarText: this.stepsProgressbarText,
          stepsVisited: this.stepsVisited,
          subType: this.subType,
          toolbarBottomTeleportId: this.footerId,
          type: this.type,
          onGoStepBack: this.goStepBackLocal,
          onGoStepForward: this.goStepForwardLocal
        }, this.$slots)
      ],
      modalFooterPrepend: () => [
        this.$slots.modalWizardFooterPrepend && this.$slots.modalWizardFooterPrepend(),
        c("div", {
          id: this.footerId
        }),
        this.$slots.modalWizardFooterAppend && this.$slots.modalWizardFooterAppend()
      ]
    });
  }
}, Yoe = {
  name: "ANotification",
  setup() {
    const {
      notifications: e,
      removeNotification: t
    } = Nu();
    return {
      notifications: e,
      removeNotification: t
    };
  },
  render() {
    return c(ti, {
      to: "body"
    }, [
      c("div", {
        class: "a_notification_parent"
      }, this.notifications.map((e) => c(gc, {
        key: e.index,
        alwaysTranslate: e.alwaysTranslate,
        isVisible: !0,
        closable: !0,
        type: e.type,
        alertClass: "a_notification",
        onClose: () => this.removeNotification(e.index)
      }, () => [
        c(pe, {
          alwaysTranslate: e.alwaysTranslate,
          html: e.text,
          extra: e.extra
        })
      ])))
    ]);
  }
}, wo = B("");
function JH(e) {
  const t = f(e, "title"), n = f(e, "extra"), {
    translationChanges: r
  } = ds(), {
    isPlaceholderTranslate: a,
    getTranslatedText: l
  } = Oa(), o = _(() => {
    if (r.value)
      return a(wo.value) ? l({
        placeholder: wo.value
      }) : wo.value;
  }), u = _(() => {
    if (r.value)
      return a(t.value) ? l({
        placeholder: t.value,
        extra: n.value
      }) : t.value;
  }), h = () => {
    let A = "";
    u.value ? (A = u.value, o.value && (A += ` - ${o.value}`)) : o.value && (A = o.value), document.title = A;
  };
  h(), tt(u, () => {
    h();
  });
}
function QH(e = "") {
  wo.value = e;
}
const Zoe = {
  name: "APageTabTitle",
  props: {
    title: {
      type: String,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    JH(e);
  },
  render() {
    return "";
  }
};
function eU(e, {
  currentItem: t = _(() => 1),
  maxItems: n = _(() => 1)
}) {
  const r = f(e, "disabled"), a = _(() => r.value || t.value === 1), l = _(() => r.value || t.value === n.value);
  return {
    disabledButtonFirstPage: a,
    disabledButtonLastPage: l
  };
}
function tU(e) {
  const t = f(e, "paginationMaxItems"), n = f(e, "offset"), r = f(e, "limit"), a = f(e, "totalRowsCount"), l = _(() => ZM(t.value)), o = _(() => (n.value / r.value >> 0) + 1), u = _(() => FN(a.value / r.value)), h = _(() => Math.floor(t.value / 2)), A = _(() => t.value * 2 - 1), E = ({ currentItemIndex: T, paginationLength: m }) => {
    let b, L;
    const v = h.value, I = A.value;
    if (T <= v ? (b = 0, L = t.value) : T >= I - (v + 1) ? (b = I - t.value, L = I) : l.value ? (b = T - v + 1, L = T + v + 1) : (b = T - v, L = T + v + 1), L > m) {
      const R = L - m;
      L = m + 1, b = b - R, b < 0 && (b = 0);
    }
    return {
      indexStart: b,
      indexEnd: L
    };
  }, p = _(() => {
    const T = [];
    let m = -1;
    for (let v = t.value - 1; v > -t.value; v--) {
      const I = o.value - v;
      I > 0 && I <= u.value && T.push(I), v === 0 && (m = T.length - 1);
    }
    const {
      indexStart: b,
      indexEnd: L
    } = E({
      currentItemIndex: m,
      paginationLength: T.length
    });
    return T.slice(b, L);
  });
  return {
    currentItem: o,
    maxItems: u,
    paginationItems: p
  };
}
function nU(e, { emit: t }, {
  currentItem: n = _(() => 1),
  disabledButtonFirstPage: r = _(() => !1),
  disabledButtonLastPage: a = _(() => !1),
  maxItems: l = _(() => 1)
}) {
  const o = f(e, "disabled"), u = f(e, "limit"), h = f(e, "offset"), A = (y) => {
    if (o.value || y === n.value)
      return;
    const C = (y - 1) * u.value;
    t("update:offset", C);
  }, E = () => {
    r.value || t("update:offset", 0);
  }, p = () => {
    r.value || t("update:offset", h.value - u.value);
  }, T = () => {
    a.value || t("update:offset", (l.value - 1) * u.value);
  }, m = () => {
    a.value || t("update:offset", h.value + u.value);
  };
  return {
    keyDownUpdateOffset: (y, C) => {
      (y.keyCode === X.enter || y.keyCode === X.space) && (A(C), y.stopPropagation(), y.preventDefault());
    },
    keyDownUpdateOffsetFirst: (y) => {
      (y.keyCode === X.enter || y.keyCode === X.space) && (E(), y.stopPropagation(), y.preventDefault());
    },
    keyDownUpdateOffsetLast: (y) => {
      (y.keyCode === X.enter || y.keyCode === X.space) && (T(), y.stopPropagation(), y.preventDefault());
    },
    keyDownUpdateOffsetNext: (y) => {
      (y.keyCode === X.enter || y.keyCode === X.space) && (m(), y.stopPropagation(), y.preventDefault());
    },
    keyDownUpdateOffsetPrevious: (y) => {
      (y.keyCode === X.enter || y.keyCode === X.space) && (p(), y.stopPropagation(), y.preventDefault());
    },
    updateOffset: A,
    updateOffsetFirst: E,
    updateOffsetLast: T,
    updateOffsetNext: m,
    updateOffsetPrevious: p
  };
}
const rU = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
  <path fill-rule="evenodd" d="M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
</svg>`, iU = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M3.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L9.293 8 3.646 2.354a.5.5 0 0 1 0-.708"/>
  <path fill-rule="evenodd" d="M7.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L13.293 8 7.646 2.354a.5.5 0 0 1 0-.708"/>
</svg>`, aU = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
</svg>`, sU = {
  name: "APaginationPages",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    limit: {
      type: Number,
      required: !0
    },
    mode: {
      type: String,
      required: !1,
      default: "normal",
      validator: (e) => ["normal", "short", "loadMore"].indexOf(e) !== -1
    },
    offset: {
      type: Number,
      required: !0
    },
    paginationMaxItems: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => Oi(e) && e > 0
    },
    totalRowsCount: {
      type: Number,
      required: !0
    }
  },
  emits: [
    "update:offset"
  ],
  setup(e, t) {
    const {
      currentItem: n,
      maxItems: r,
      paginationItems: a
    } = tU(e), {
      disabledButtonFirstPage: l,
      disabledButtonLastPage: o
    } = eU(e, {
      currentItem: n,
      maxItems: r
    }), {
      keyDownUpdateOffset: u,
      keyDownUpdateOffsetFirst: h,
      keyDownUpdateOffsetLast: A,
      keyDownUpdateOffsetNext: E,
      keyDownUpdateOffsetPrevious: p,
      updateOffset: T,
      updateOffsetFirst: m,
      updateOffsetLast: b,
      updateOffsetNext: L,
      updateOffsetPrevious: v
    } = nU(e, t, {
      currentItem: n,
      disabledButtonFirstPage: l,
      disabledButtonLastPage: o,
      maxItems: r
    });
    return {
      currentItem: n,
      disabledButtonFirstPage: l,
      disabledButtonLastPage: o,
      keyDownUpdateOffset: u,
      keyDownUpdateOffsetFirst: h,
      keyDownUpdateOffsetLast: A,
      keyDownUpdateOffsetNext: E,
      keyDownUpdateOffsetPrevious: p,
      maxItems: r,
      paginationItems: a,
      updateOffset: T,
      updateOffsetFirst: m,
      updateOffsetLast: b,
      updateOffsetNext: L,
      updateOffsetPrevious: v
    };
  },
  render() {
    return c(pe, {
      tag: "nav",
      class: "a_pagination__nav",
      "aria-label": "_A_PAGINATION_NAVIGATION_"
    }, {
      default: () => this.mode === "loadMore" ? c(Oe, {
        class: "a_btn a_btn_primary",
        text: "Load more",
        type: "button"
      }) : [
        c("ul", {
          class: "a_pagination"
        }, [
          this.mode !== "short" ? c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonFirstPage }]
          }, [
            c(Oe, {
              class: "a_pagination__item__link",
              iconLeft: rU,
              role: "button",
              tabindex: this.disabledButtonFirstPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_FIRST_PAGE_",
              title: "_A_PAGINATION_FIRST_PAGE_",
              type: "button",
              onClick: this.updateOffsetFirst,
              onKeydown: this.keyDownUpdateOffsetFirst
            })
          ]) : "",
          c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonFirstPage }]
          }, [
            c(Oe, {
              class: "a_pagination__item__link",
              iconLeft: aU,
              role: "button",
              tabindex: this.disabledButtonFirstPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_PREVIOUS_PAGE_",
              title: "_A_PAGINATION_PREVIOUS_PAGE_",
              type: "button",
              onClick: this.updateOffsetPrevious,
              onKeydown: this.keyDownUpdateOffsetPrevious
            })
          ]),
          this.mode === "short" ? c("li", {
            class: "a_pagination__item"
          }, [
            c(pe, {
              class: "a_pagination__item__link disabled",
              html: "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_",
              extra: {
                currentPage: this.currentItem,
                allPages: this.maxItems
              }
            })
          ]) : this.paginationItems.map((e) => {
            const t = e === this.currentItem;
            return c("li", {
              class: ["a_pagination__item", {
                active: t,
                disabled: this.disabled
              }]
            }, [
              c(Oe, {
                "aria-current": t ? !0 : void 0,
                class: "a_pagination__item__link",
                extra: {
                  page: e
                },
                role: "button",
                tabindex: t || this.disabled ? -1 : 0,
                tag: "a",
                text: e,
                textAriaHidden: !0,
                textScreenReader: "_A_PAGINATION_TO_PAGE_{{page}}_",
                title: "_A_PAGINATION_TO_PAGE_{{page}}_",
                type: "button",
                onClick: () => this.updateOffset(e),
                onKeydown: (n) => this.keyDownUpdateOffset(n, e)
              })
            ]);
          }),
          c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonLastPage }]
          }, [
            c(Oe, {
              class: "a_pagination__item__link",
              iconLeft: MS,
              role: "button",
              tabindex: this.disabledButtonLastPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_NEXT_PAGE_",
              title: "_A_PAGINATION_NEXT_PAGE_",
              type: "button",
              onClick: this.updateOffsetNext,
              onKeydown: this.keyDownUpdateOffsetNext
            })
          ]),
          this.mode !== "short" ? c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonLastPage }]
          }, [
            c(Oe, {
              class: "a_pagination__item__link",
              iconLeft: iU,
              role: "button",
              tabindex: this.disabledButtonLastPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_LAST_PAGE_",
              title: "_A_PAGINATION_LAST_PAGE_",
              type: "button",
              onClick: this.updateOffsetLast,
              onKeydown: this.keyDownUpdateOffsetLast
            })
          ]) : ""
        ])
      ]
    });
  }
};
function lU(e, { emit: t }) {
  const n = f(e, "isLoadingTable"), r = f(e, "limit"), a = _(() => `${r.value}`), l = (h) => {
    n.value || t("update:limit", +h);
  };
  return {
    changeLimit: l,
    changeLimitFromSelect: ({ model: h }) => {
      l(h);
    },
    keyDownChangeLimit: (h, A) => {
      (h.keyCode === X.enter || h.keyCode === X.space) && (l(A), h.stopPropagation(), h.preventDefault());
    },
    limitString: a
  };
}
function oU(e) {
  const t = f(e, "offset"), n = f(e, "rowsLength"), r = f(e, "countAllRows"), {
    filterCurrency: a
  } = sr(), l = _(() => a(+t.value + 1, { suffix: "", digits: 0 })), o = _(() => a(+t.value + n.value, { suffix: "", digits: 0 })), u = _(() => a(r.value, { suffix: "", digits: 0 }));
  return {
    extraForTranslate: _(() => ({
      start: l.value,
      current: o.value,
      count: u.value
    }))
  };
}
const uU = {
  name: "APaginationCountPerPage",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    limit: {
      type: Number,
      required: !0
    },
    limitsPerPage: {
      type: Array,
      required: !1,
      default: () => ["10", "25", "50", "100"]
    },
    mode: {
      type: String,
      required: !1,
      default: "group",
      validator: (e) => ["inline", "group", "select"].indexOf(e) !== -1
    },
    offset: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    showTextCountFromTo: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: [
    "update:limit"
  ],
  setup(e, t) {
    const {
      changeLimit: n,
      changeLimitFromSelect: r,
      keyDownChangeLimit: a,
      limitString: l
    } = lU(e, t), {
      extraForTranslate: o
    } = oU(e);
    return {
      changeLimit: n,
      changeLimitFromSelect: r,
      extraForTranslate: o,
      keyDownChangeLimit: a,
      limitString: l
    };
  },
  render() {
    return c("div", {
      class: "a_pagination__counts"
    }, this.mode === "inline" || this.mode === "group" ? [
      this.showTextCountFromTo ? c(pe, {
        class: "a_pagination__count_from_to",
        html: "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_",
        extra: this.extraForTranslate
      }) : "",
      c(pe, {
        tag: "span",
        class: "a_pagination__count__text",
        html: "_A_COUNT_PER_PAGE_"
      }),
      this.mode === "inline" ? c("div", {
        class: "a_pagination__count"
      }, [
        this.limitsPerPage.map((e) => {
          const t = +e === this.limit;
          return c("div", {
            class: "a_pagination__count__item"
          }, [
            c(Oe, {
              "aria-current": t ? !0 : void 0,
              class: "a_btn a_btn_link a_pagination__count__button",
              disabled: t || this.disabled,
              extra: {
                count: e
              },
              text: e,
              textAriaHidden: !0,
              textScreenReader: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              title: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              type: "button",
              onClick: () => this.changeLimit(e)
            })
          ]);
        })
      ]) : c("ul", {
        class: "a_pagination a_pagination_group"
      }, [
        this.limitsPerPage.map((e) => {
          const t = +e === this.limit;
          return c("li", {
            class: [
              "a_pagination__item",
              {
                active: t
              }
            ]
          }, [
            c(Oe, {
              "aria-current": t ? !0 : void 0,
              class: "a_pagination__item__link",
              disabled: this.disabled,
              extra: {
                count: e
              },
              role: "button",
              tabindex: t || this.disabled ? -1 : 0,
              tag: "a",
              text: e,
              textAriaHidden: !0,
              textScreenReader: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              title: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              type: "button",
              onClick: () => this.changeLimit(e),
              onKeydown: (n) => this.keyDownChangeLimit(n, e)
            })
          ]);
        })
      ])
    ] : [
      this.showTextCountFromTo ? c(pe, {
        class: "a_pagination__count_from_to",
        html: "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_",
        extra: this.extraForTranslate
      }) : "",
      c(ol, {
        label: "_A_COUNT_PER_PAGE_",
        labelClass: "a_sr_only",
        data: this.limitsPerPage,
        isDataSimpleArray: !0,
        isLabelFloat: !1,
        deselectable: !1,
        menuWidthType: "by_content",
        modelValue: this.limitString,
        disabled: this.disabled,
        change: this.changeLimitFromSelect
      })
    ]);
  }
};
function _U(e, {
  isMobile: t = B(!1),
  updateLimit: n = () => {
  },
  updateOffset: r = () => {
  }
}) {
  const a = f(e, "modes"), l = f(e, "countAllRows"), o = f(e, "disabled"), u = f(e, "limitsPerPage"), h = f(e, "limit"), A = f(e, "offset"), E = f(e, "rowsLength"), p = f(e, "totalRowsCount"), T = f(e, "maxPages"), m = _(() => t.value ? a.value.mobile || {
    perPage: {
      mode: "select",
      position: 0,
      showTextCountFromTo: !1
    },
    pagination: {
      mode: "short",
      position: 1
    }
  } : a.value.desktop || {
    perPage: {
      mode: "inline",
      position: 0,
      showTextCountFromTo: !0
    },
    pagination: {
      mode: "normal",
      position: 1
    }
  }), b = _(() => {
    const v = [];
    return Y(m.value, (I, R) => {
      v.push({
        ...I,
        component: R
      });
    }), vd(v, "position");
  });
  return {
    components: _(() => {
      const v = [];
      return Y(b.value, (I) => {
        I.component === "perPage" ? v.push(c(uU, {
          countAllRows: l.value,
          disabled: o.value,
          limitsPerPage: u.value,
          limit: h.value,
          offset: A.value,
          rowsLength: E.value,
          mode: I.mode,
          showTextCountFromTo: I.showTextCountFromTo,
          "onUpdate:limit": n
        })) : I.component === "pagination" && v.push(c(sU, {
          limit: h.value,
          disabled: o.value,
          totalRowsCount: p.value,
          offset: A.value,
          paginationMaxItems: T.value,
          mode: I.mode,
          "onUpdate:offset": r
        }));
      }), v;
    })
  };
}
function dU(e, { emit: t }) {
  return {
    updateLimit: (a) => {
      t("update:limit", a);
    },
    updateOffset: (a) => {
      t("update:offset", a);
    }
  };
}
const cU = {
  name: "APagination",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hasRows: {
      type: Boolean,
      required: !0
    },
    limit: {
      type: Number,
      required: !0
    },
    limitsPerPage: {
      type: Array,
      required: !1,
      default: () => ["10", "25", "50", "100"]
    },
    maxPages: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => Oi(e) && e > 0
    },
    offset: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    totalRowsCount: {
      type: Number,
      required: !0
    },
    modes: {
      type: Object,
      required: !1,
      default: () => ({
        /*
         * perPage: inline / group / select
         * pagination: normal / short / loadMore
         */
        desktop: {
          perPage: {
            mode: "group",
            position: 0,
            showTextCountFromTo: !0
          },
          pagination: {
            mode: "normal",
            position: 1
          }
        },
        mobile: {
          perPage: {
            mode: "select",
            position: 0,
            showTextCountFromTo: !1
          },
          pagination: {
            mode: "short",
            position: 1
          }
        }
      })
    }
  },
  emits: [
    "update:limit",
    "update:offset"
  ],
  setup(e, t) {
    const {
      isMobileWidth: n
    } = fn(), {
      updateLimit: r,
      updateOffset: a
    } = dU(e, t), {
      components: l
    } = _U(e, {
      isMobile: n,
      updateLimit: r,
      updateOffset: a
    });
    return {
      components: l,
      updateLimit: r,
      updateOffset: a
    };
  },
  render() {
    return this.hasRows ? c("div", {
      class: "a_pagination__parent"
    }, this.components) : null;
  }
};
function fU(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = f(e, "classProgressBar");
  return {
    classProgressBarLocal: _(() => qe(n.value) ? n.value(t.value) : n.value)
  };
}
function hU(e) {
  const t = f(e, "duration");
  return {
    durationLocal: _(() => {
      if (!ae(t.value))
        return `${t.value}s`;
    })
  };
}
function $S(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = f(e, "valueTextInteger"), {
    filterCurrency: r
  } = sr();
  return {
    valuePercent: _(() => n.value ? r(t.value, {
      suffix: "%",
      digits: 0
    }) : r(t.value, {
      suffix: "%",
      digits: 2
    }))
  };
}
function kS(e) {
  const t = f(e, "min"), n = f(e, "max"), r = f(e, "value");
  return {
    widthPercent: _(() => (r.value - t.value) / (n.value - t.value) * 100)
  };
}
const Xoe = {
  name: "AProgress",
  props: {
    classProgressBar: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    duration: {
      type: Number,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1,
      default: !1
    },
    max: {
      type: Number,
      required: !1,
      default: 100
    },
    min: {
      type: Number,
      required: !1,
      default: 0
    },
    reverse: {
      type: Boolean,
      required: !1,
      default: !1
    },
    showValue: {
      type: Boolean,
      required: !1,
      default: !0
    },
    striped: {
      type: Boolean,
      required: !1,
      default: !1
    },
    stripedFlow: {
      type: Boolean,
      required: !1,
      default: !1
    },
    value: {
      type: Number,
      required: !1,
      default: 0
    },
    valueTextInteger: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  setup(e) {
    const {
      widthPercent: t
    } = kS(e), {
      valuePercent: n
    } = $S(e, {
      widthPercent: t
    }), {
      classProgressBarLocal: r
    } = fU(e, {
      widthPercent: t
    }), {
      durationLocal: a
    } = hU(e);
    return {
      classProgressBarLocal: r,
      durationLocal: a,
      valuePercent: n,
      widthPercent: t
    };
  },
  render() {
    let e;
    return this.$slots.progressText ? e = c("span", {
      class: "a_progress__text"
    }, [
      this.$slots.progressText && this.$slots.progressText({
        valuePercent: this.valuePercent
      })
    ]) : this.showValue && (e = c("span", {
      class: "a_progress__text"
    }, this.valuePercent)), c("div", {
      class: ["a_progress", {
        a_progress_reverse: this.reverse
      }]
    }, [
      c("div", {
        class: [
          "a_progress__bar",
          {
            a_progress__bar_striped: this.striped,
            a_progress__bar_striped_flow: this.stripedFlow,
            a_progress__bar_indeterminate: this.indeterminate
          },
          this.classProgressBarLocal
        ],
        role: "progressbar",
        "aria-valuenow": this.value,
        "aria-valuemin": this.min,
        "aria-valuemax": this.max,
        style: {
          width: `${this.widthPercent}%`,
          "animation-duration": this.durationLocal
        }
      }, [
        e
      ])
    ]);
  }
};
function AU(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = f(e, "strokeWidth"), r = 50, a = 2 * Math.PI * r, l = _(() => t.value * a / 100), o = _(() => `${l.value}px ${a - l.value}px`), u = _(() => `stroke-dasharray: ${o.value};`), h = _(() => r + n.value / 2);
  return {
    circleStyles: u,
    cxCy: h,
    radius: r
  };
}
function EU(e) {
  const t = f(e, "width");
  return {
    sizesLocal: _(() => bn(t.value) ? `height: ${t.value}px; width: ${t.value}px;` : `height: ${t.value}; width: ${t.value};`)
  };
}
function pU(e) {
  const t = f(e, "rotate"), n = f(e, "strokeWidth"), r = _(() => {
    const l = 100 + n.value;
    return `0 0 ${l} ${l}`;
  });
  return {
    svgTransform: _(() => `transform: rotate(${t.value - 90}deg);`),
    svgViewBox: r
  };
}
const Joe = {
  name: "AProgressCircle",
  props: {
    duration: {
      type: Number,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1,
      default: !1
    },
    max: {
      type: Number,
      required: !1,
      default: 100
    },
    min: {
      type: Number,
      required: !1,
      default: 0
    },
    rotate: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0 && e <= 360
    },
    showValue: {
      type: Boolean,
      required: !1,
      default: !0
    },
    strokeWidth: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => e > 0
    },
    value: {
      type: Number,
      required: !1,
      default: 0
    },
    valueTextClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    valueTextInteger: {
      type: Boolean,
      required: !1,
      default: !1
    },
    width: {
      type: [Number, String],
      required: !1,
      default: 125
    }
  },
  setup(e) {
    const {
      widthPercent: t
    } = kS(e), {
      valuePercent: n
    } = $S(e, {
      widthPercent: t
    }), {
      circleStyles: r,
      cxCy: a,
      radius: l
    } = AU(e, {
      widthPercent: t
    }), {
      svgTransform: o,
      svgViewBox: u
    } = pU(e), {
      sizesLocal: h
    } = EU(e);
    return {
      circleStyles: r,
      cxCy: a,
      radius: l,
      sizesLocal: h,
      svgTransform: o,
      svgViewBox: u,
      valuePercent: n,
      widthPercent: t
    };
  },
  render() {
    let e;
    return this.$slots.progressText ? e = c("span", {
      class: ["a_progress_circle__text", this.valueTextClass]
    }, [
      this.$slots.progressText && this.$slots.progressText({
        valuePercent: this.valuePercent
      })
    ]) : this.showValue && (e = c("span", {
      class: ["a_progress_circle__text", this.valueTextClass]
    }, this.valuePercent)), c("div", {
      class: "a_progress_circle",
      style: this.sizesLocal,
      role: "progressbar",
      "aria-valuenow": this.value,
      "aria-valuemin": this.min,
      "aria-valuemax": this.max
    }, [
      c("svg", {
        viewBox: this.svgViewBox,
        style: this.svgTransform
      }, [
        c("circle", {
          class: "a_progress_circle__base",
          cx: this.cxCy,
          cy: this.cxCy,
          r: this.radius,
          "stroke-width": this.strokeWidth
        }),
        c("circle", {
          class: ["a_progress_circle__scale", {
            a_progress_circle__scale_indeterminate: this.indeterminate
          }],
          cx: this.cxCy,
          cy: this.cxCy,
          r: this.radius,
          "stroke-width": this.strokeWidth,
          style: this.circleStyles
        })
      ]),
      e
    ]);
  }
}, Jc = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16">
  <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
</svg>`, jE = {
  name: "ADecimalIcon",
  components: {
    AIcon: st
  },
  props: {
    value: {
      type: Number,
      default: 50
    },
    color: {
      type: String,
      default: "yellow"
    },
    icon: {
      type: String,
      default: Jc
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    }
  },
  render() {
    const e = {
      class: "a_decimal_rate_icon a_rate_icon_decimal",
      style: {
        position: "absolute",
        overflow: "hidden",
        width: `${this.value}%`,
        color: this.color
      }
    };
    return c("i", e, [
      c(st, {
        icon: this.icon,
        class: `a_decimal_rate_icon a_rate_icon_${this.size}`
      })
    ]);
  }
}, HS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star" viewBox="0 0 16 16">
  <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.56.56 0 0 0-.163-.505L1.71 6.745l4.052-.576a.53.53 0 0 0 .393-.288L8 2.223l1.847 3.658a.53.53 0 0 0 .393.288l4.052.575-2.906 2.77a.56.56 0 0 0-.163.506l.694 3.957-3.686-1.894a.5.5 0 0 0-.461 0z"/>
</svg>`, zE = {
  name: "ARateIcon",
  components: {
    AIcon: st,
    ADecimalIcon: jE
  },
  props: {
    value: {
      type: Number,
      default: 50
    },
    color: {
      type: String,
      default: "yellow"
    },
    icon: {
      type: String,
      default: HS
    },
    iconFill: {
      type: String,
      default: Jc
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    },
    isHovered: {
      type: Boolean,
      default: !1
    }
  },
  emits: [
    "mouseenter",
    "mouseleave",
    "click",
    "dblclick",
    "mousemove"
  ],
  setup(e, { emit: t }) {
    return {
      handleMouseEnter(n) {
        t("mouseenter", n);
      },
      handleMouseLeave(n) {
        t("mouseleave", n);
      },
      handleClick(n) {
        t("click", n);
      },
      handleDblClick(n) {
        t("dblclick", n);
      },
      handleMouseMove(n) {
        t("mousemove", n);
      }
    };
  },
  render() {
    return c(
      "span",
      {
        class: `el-rate__item a_rate_icon_${this.size}`,
        style: {
          position: "relative",
          display: "inline-flex",
          alignItems: "center",
          justifyContent: "center"
        },
        onClick: this.handleClick,
        onDblclick: this.handleDblClick,
        onMouseenter: this.handleMouseEnter,
        onMouseleave: this.handleMouseLeave,
        onMousemove: this.handleMouseMove
      },
      [
        c("div", { class: "a_rate_icon_align" }, [
          c(st, {
            icon: this.icon,
            class: "a_decimal_rate_icon a_rate_decimal",
            color: this.color
          }),
          c(jE, {
            icon: this.iconFill,
            value: this.value,
            color: this.color,
            size: this.size
          })
        ])
      ]
    );
  }
}, Qoe = {
  name: "ARate",
  components: {
    AIcon: st,
    ATranslation: pe,
    ARateIcon: zE
  },
  props: {
    text: {
      type: String,
      default: null
    },
    extra: {
      type: Object,
      required: !1
    },
    rating: {
      type: Number,
      default: 5
    },
    icon: {
      type: String,
      default: HS
    },
    iconFill: {
      type: String,
      default: Jc
    },
    readonly: {
      type: Boolean,
      default: !1
    },
    showScore: {
      type: Boolean,
      default: !1
    },
    modelValue: {
      type: Number,
      default: 0
    },
    color: {
      type: String,
      default: "yellow"
    },
    hoveredColor: {
      type: String,
      default: "orange"
    },
    halfIcon: {
      type: Boolean,
      default: !1
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const {
      text: n,
      rating: r,
      modelValue: a,
      showScore: l,
      readonly: o,
      icon: u,
      extra: h,
      color: A,
      hoveredColor: E,
      halfIcon: p,
      size: T
    } = cR(e), m = B(void 0), b = B(void 0), L = B(-1), v = () => {
      m.value = a.value, b.value = a.value;
    }, I = _(() => e.iconFill ? e.iconFill : `${e.icon}Fill`), R = () => {
      o.value || (m.value = 0, t("update:modelValue", m.value));
    }, y = (N, U) => {
      if (o.value)
        return;
      L.value = U;
      let V = U + 1;
      if (p.value) {
        const j = N.target.getBoundingClientRect();
        V = N.clientX - j.left < j.width / 2 ? U + 0.5 : U + 1;
      }
      b.value = V;
    }, C = () => {
      o.value || (L.value = -1);
    }, w = _(() => Array(r.value).fill(null).map((N, U) => U <= L.value ? E.value : U < m.value ? A.value : null)), F = (N, U) => {
      if (o.value)
        return;
      let V = U + 1;
      if (p.value) {
        const j = N.target.getBoundingClientRect();
        V = N.clientX - j.left < j.width / 2 ? U + 0.5 : U + 1;
      }
      t("update:modelValue", V), m.value = V;
    }, P = _(() => {
      const N = L.value >= 0 ? b.value : m.value, U = Math.floor(N), V = N % 1, j = Array(r.value).fill(0);
      for (let ne = 0; ne < U; ne++)
        j[ne] = 100;
      return V !== 0 && U < r.value && (j[U] = V * 100), j;
    }), q = (N, U) => {
      if (o.value)
        return;
      let V = U + 1;
      if (p.value) {
        const j = N.target.getBoundingClientRect();
        V = N.clientX - j.left < j.width / 2 ? U + 0.5 : U + 1;
      }
      b.value !== V && (b.value = V, L.value = U);
    };
    return v(), {
      rating: r,
      showScore: l,
      readonly: o,
      icon: u,
      iconFill: I,
      text: n,
      extra: h,
      color: A,
      size: T,
      onMouseEnterIcon: y,
      onMouseLeaveIcon: C,
      onClickIcon: F,
      onDoubleClickIcon: R,
      onMouseMoveIcon: q,
      modelValue: _(() => m.value),
      iconValues: P,
      computedColor: w
    };
  },
  render() {
    return c("div", { class: "a_rate_container" }, [
      ...Array.from({ length: this.rating }, (e, t) => c(zE, {
        class: "a_rate_icon",
        icon: this.icon,
        iconFill: this.iconFill,
        value: this.iconValues[t],
        onClick: (n) => this.onClickIcon(n, t),
        onDblclick: this.onDoubleClickIcon,
        onMouseenter: (n) => this.onMouseEnterIcon(n, t),
        onMouseleave: this.onMouseLeaveIcon,
        onMousemove: (n) => this.onMouseMoveIcon(n, t),
        color: this.computedColor[t],
        size: this.size,
        key: t
      })),
      this.showScore && c("span", { class: "a_rate_score" }, this.modelValue.toString()),
      c(pe, {
        class: "a_rate_label",
        text: this.text,
        extra: this.extra
      })
    ]);
  }
}, TU = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
  <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0"/>
</svg>`, SU = {
  name: "AResizer",
  props: {
    direction: {
      type: String,
      required: !0,
      validator: (e) => ["x", "y"].indexOf(e) !== -1
    },
    disabled: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "mousedown",
    "mousemove",
    "mouseoutDocument",
    "mouseup"
  ],
  data() {
    return {
      clientHeight: 0,
      clientWidth: 0
    };
  },
  computed: {
    isDirectionX() {
      return this.direction === "x";
    },
    isDirectionY() {
      return this.direction === "y";
    },
    directionClass() {
      return `a_resizer_${this.direction}`;
    },
    directionIcon() {
      if (this.direction === "x")
        return TU;
      if (this.direction === "y")
        return yl;
    },
    cursor() {
      if (this.direction === "x")
        return "w-resize";
      if (this.direction === "y")
        return "s-resize";
    },
    bodyClass() {
      return `a_resizer_${this.direction}_active__body`;
    },
    attributesResizer() {
      const e = {
        class: ["a_resizer", this.directionClass, {
          a_resizer_disabled: this.disabled
        }],
        ariaHidden: !0
      };
      return this.disabled || (e.onMousedown = this.mousedown), e;
    }
  },
  unmounted() {
    this.removeMouseEventListeners(), this.removeClassFromBody();
  },
  methods: {
    mousedown(e) {
      this.addMouseEventListeners(), this.clientHeight = document.documentElement.clientHeight, this.clientWidth = document.documentElement.clientWidth, this.$emit("mousedown", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.addClassToBody();
    },
    mousemove(e) {
      this.$emit("mousemove", {
        $event: e,
        clientX: e.clientX,
        clientY: e.clientY,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      });
    },
    mouseup(e) {
      this.removeMouseEventListeners(), this.$emit("mouseup", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.removeClassFromBody();
    },
    mouseoutDocument(e) {
      this.removeMouseEventListeners(), this.$emit("mouseoutDocument", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.removeClassFromBody();
    },
    addMouseEventListeners() {
      document.addEventListener("mousemove", this.mousemove), document.addEventListener("mouseup", this.mouseup), document.addEventListener("mouseleave", this.mouseoutDocument);
    },
    removeMouseEventListeners() {
      document.removeEventListener("mousemove", this.mousemove), document.removeEventListener("mouseup", this.mouseup), document.removeEventListener("mouseleave", this.mouseoutDocument);
    },
    addClassToBody() {
      document.body.classList.add(this.bodyClass);
    },
    removeClassFromBody() {
      document.body.classList.remove(this.bodyClass);
    }
  },
  render() {
    return c("div", this.attributesResizer, [
      c("div", {
        class: "a_resizer__line"
      }),
      c(st, {
        class: "a_resizer__icon",
        icon: this.directionIcon
      })
    ]);
  }
}, mU = {
  name: "ACircle",
  props: {
    cx: {
      type: [Number, String],
      required: !0
    },
    cy: {
      type: [Number, String],
      required: !0
    },
    r: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("circle", {
      cx: this.cx,
      cy: this.cy,
      r: this.r,
      fill: this.fill,
      stroke: this.stroke,
      "stroke-width": this.strokeWidth
    });
  }
}, Zs = {
  name: "ARect",
  props: {
    width: {
      type: [Number, String],
      required: !0
    },
    height: {
      type: [Number, String],
      required: !0
    },
    x: {
      type: [Number, String],
      required: !0
    },
    y: {
      type: [Number, String],
      required: !0
    },
    rx: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    ry: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("rect", {
      width: this.width,
      height: this.height,
      x: this.x,
      y: this.y,
      rx: this.rx,
      ry: this.ry,
      fill: this.fill,
      stroke: this.stroke,
      strokeWidth: this.strokeWidth
    });
  }
};
function bU(e) {
  const t = f(e, "yStandTop"), n = f(e, "pipesWidth"), r = f(e, "centerX"), a = f(e, "balanceWidth"), l = f(e, "balanceCircleRadius"), o = f(e, "balanceTopHeight"), u = f(e, "degree"), h = _(() => t.value - l.value - n.value / 2), A = _(() => a.value / 2), E = _(() => r.value - A.value - l.value), p = _(() => r.value + l.value), T = _(() => t.value - l.value), m = _(() => r.value - n.value / 2), b = _(() => T.value - l.value - o.value);
  return {
    transformRotate: _(() => `rotate(${u.value}, ${r.value}, ${T.value})`),
    widthBalancePipe: A,
    xBalanceLeft: E,
    xBalanceRight: p,
    xBalanceTopHeight: m,
    yBalance: h,
    yBalanceCenter: T,
    yBalanceTopHeight: b
  };
}
const LU = {
  name: "AScaleBalance",
  props: {
    degree: {
      type: Number,
      required: !0
    },
    pipesWidth: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    balanceWidth: {
      type: Number,
      required: !0
    },
    balanceCircleRadius: {
      type: Number,
      required: !0
    },
    balanceTopHeight: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      transformRotate: t,
      widthBalancePipe: n,
      xBalanceLeft: r,
      xBalanceRight: a,
      xBalanceTopHeight: l,
      yBalance: o,
      yBalanceCenter: u,
      yBalanceTopHeight: h
    } = bU(e);
    return {
      transformRotate: t,
      widthBalancePipe: n,
      xBalanceLeft: r,
      xBalanceRight: a,
      xBalanceTopHeight: l,
      yBalance: o,
      yBalanceCenter: u,
      yBalanceTopHeight: h
    };
  },
  render() {
    return c("g", {
      transform: this.transformRotate
    }, [
      c(Zs, {
        width: this.pipesWidth,
        height: this.balanceTopHeight,
        x: this.xBalanceTopHeight,
        y: this.yBalanceTopHeight,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(Zs, {
        width: this.widthBalancePipe,
        height: this.pipesWidth,
        x: this.xBalanceLeft,
        y: this.yBalance,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(Zs, {
        width: this.widthBalancePipe,
        height: this.pipesWidth,
        x: this.xBalanceRight,
        y: this.yBalance,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(mU, {
        cx: this.centerX,
        cy: this.yBalanceCenter,
        r: this.balanceCircleRadius,
        fill: "none",
        stroke: "currentColor",
        strokeWidth: this.pipesWidth
      })
    ]);
  }
};
function vU(e) {
  const t = f(e, "direction"), n = f(e, "degree"), r = f(e, "balanceWidth"), a = f(e, "balanceCircleRadius"), l = f(e, "yStandTop"), o = f(e, "bowlThreadHeight"), u = f(e, "pipesWidth"), h = f(e, "centerX"), A = f(e, "bowlWidth"), E = _(() => r.value / 2 + a.value), p = _(() => l.value + o.value - u.value / 2 - a.value + 2), T = _(() => t.value === "right" ? n.value : n.value + 180), m = _(() => r.value / 2 + A.value / 2 + a.value - 2), b = _(() => r.value / 2 - A.value / 2 + a.value - 1), L = _(() => t.value === "left" ? h.value - m.value + E.value : h.value + b.value - E.value), v = _(() => (t.value === "right", E.value * Math.cos(T.value * Math.PI / 180) + L.value)), I = _(() => E.value * Math.sin(T.value * Math.PI / 180) + p.value);
  return {
    x: v,
    y: I
  };
}
const KE = {
  name: "AScaleBowl",
  props: {
    direction: {
      type: String,
      required: !0,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    },
    degree: {
      type: Number,
      required: !0
    },
    balanceWidth: {
      type: Number,
      required: !0
    },
    balanceCircleRadius: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    bowlThreadHeight: {
      type: Number,
      required: !0
    },
    pipesWidth: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    },
    bowlWidth: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      x: t,
      y: n
    } = vU(e);
    return {
      x: t,
      y: n
    };
  },
  render() {
    return c("use", {
      x: this.x,
      y: this.y,
      "xlink:href": "#scale_bowl"
    });
  }
}, IU = {
  name: "APath",
  props: {
    d: {
      type: String,
      required: !0,
      default: ""
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    fillRule: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["evenodd", "inherit", "initial", "nonzero", "revert", "unset"].indexOf(e) !== -1
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("path", {
      d: this.d,
      fill: this.fill,
      fillRule: this.fillRule,
      stroke: this.stroke,
      strokeWidth: this.strokeWidth
    });
  }
};
function gU(e) {
  const t = f(e, "points"), n = (a) => Nn(a, (o) => {
    let u = "";
    return lt(o) ? u = o : Te(o) && (u = o.join(",")), u;
  }).join(" ");
  return {
    pointsLocal: _(() => lt(t.value) ? t.value : Te(t.value) ? n(t.value) : "")
  };
}
const yU = {
  name: "APolyline",
  props: {
    points: {
      type: [Array, String],
      required: !0,
      default: []
    },
    fill: {
      type: String,
      required: !1,
      default: "none"
    },
    stroke: {
      type: String,
      required: !1,
      default: "currentColor"
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      pointsLocal: t
    } = gU(e);
    return {
      pointsLocal: t
    };
  },
  render() {
    return c("polyline", {
      points: this.pointsLocal,
      fill: this.fill,
      stroke: this.stroke,
      "stroke-width": this.strokeWidth
    });
  }
};
function RU(e) {
  const t = f(e, "bowlThreadHeight"), n = f(e, "bowlThreadWidth"), r = f(e, "bowlThreadPaddingX"), a = f(e, "bowlWidth"), l = f(e, "bowlRadius"), o = _(() => {
    const h = r.value, A = r.value + n.value / 2, E = r.value + n.value, p = 1, T = p - t.value;
    return `${h},${p} ${A},${T} ${E},${p}`;
  });
  return {
    bowlD: _(() => `m0,0 a${l.value},${l.value} 0 1,0 ${a.value},0 z`),
    bowlThreadPoints: o
  };
}
const OU = {
  name: "AScaleBowlDefs",
  props: {
    bowlThreadStrokeWidth: {
      type: Number,
      required: !0
    },
    bowlThreadWidth: {
      type: Number,
      required: !0
    },
    bowlThreadHeight: {
      type: Number,
      required: !0
    },
    bowlThreadPaddingX: {
      type: Number,
      required: !0
    },
    bowlWidth: {
      type: Number,
      required: !0
    },
    bowlRadius: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      bowlD: t,
      bowlThreadPoints: n
    } = RU(e);
    return {
      bowlD: t,
      bowlThreadPoints: n
    };
  },
  render() {
    return c("defs", {}, [
      c("g", {
        id: "scale_bowl"
      }, [
        c(yU, {
          points: this.bowlThreadPoints,
          strokeWidth: this.bowlThreadStrokeWidth
        }),
        c(IU, {
          d: this.bowlD,
          fill: "currentColor"
        })
      ])
    ]);
  }
};
function CU(e) {
  const t = f(e, "centerX"), n = f(e, "standWidth"), r = f(e, "pipesWidth"), a = _(() => t.value - r.value / 2), l = _(() => t.value - n.value / 2);
  return {
    xTop: a,
    xBottom: l
  };
}
const NU = {
  name: "AScaleStand",
  props: {
    pipesWidth: {
      type: Number,
      required: !0
    },
    standWidth: {
      type: Number,
      required: !0
    },
    standHeight: {
      type: Number,
      required: !0
    },
    yStandBottom: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      xBottom: t,
      xTop: n
    } = CU(e);
    return {
      xBottom: t,
      xTop: n
    };
  },
  render() {
    return c("g", null, [
      c(Zs, {
        width: this.pipesWidth,
        height: this.standHeight,
        x: this.xTop,
        y: this.yStandTop,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(Zs, {
        width: this.standWidth,
        height: this.pipesWidth,
        x: this.xBottom,
        y: this.yStandBottom,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      })
    ]);
  }
};
function DU(e) {
  const t = f(e, "value"), n = f(e, "classNegative"), r = f(e, "classPositive"), a = f(e, "classNeutral");
  return {
    cssClass: _(() => {
      if (t.value === 0) {
        if (a.value)
          return a.value;
      } else if (t.value < 0) {
        if (n.value)
          return n.value;
      } else if (r.value)
        return r.value;
    })
  };
}
function BU(e) {
  const t = f(e, "value"), n = f(e, "maxDegree");
  return {
    degree: _(() => n.value * t.value / 100)
  };
}
function wU(e) {
  const t = f(e, "viewBoxWidth"), n = f(e, "viewBoxHeight"), r = f(e, "pipesWidth"), a = f(e, "standHeight"), l = _(() => `0 0 ${t.value} ${n.value}`), o = _(() => t.value / 2), u = _(() => n.value - r.value), h = _(() => u.value - a.value + 1);
  return {
    centerX: o,
    viewBoxLocal: l,
    yStandBottom: u,
    yStandTop: h
  };
}
const eue = {
  name: "AScale",
  props: {
    balanceCircleRadius: {
      type: Number,
      required: !1,
      default: 3.5
    },
    balanceTopHeight: {
      type: Number,
      required: !1,
      default: 6
    },
    balanceWidth: {
      type: Number,
      required: !1,
      default: 60
    },
    bowlRadius: {
      type: Number,
      required: !1,
      default: 12.6
    },
    bowlThreadHeight: {
      type: Number,
      required: !1,
      default: 20
    },
    bowlThreadPaddingX: {
      type: Number,
      required: !1,
      default: 4
    },
    bowlThreadStrokeWidth: {
      type: Number,
      required: !1,
      default: 2
    },
    bowlThreadWidth: {
      type: Number,
      required: !1,
      default: 16
    },
    bowlWidth: {
      type: Number,
      required: !1,
      default: 25
    },
    classNegative: {
      type: String,
      required: !1,
      default: void 0
    },
    classNeutral: {
      type: String,
      required: !1,
      default: void 0
    },
    classPositive: {
      type: String,
      required: !1,
      default: void 0
    },
    maxDegree: {
      type: Number,
      required: !1,
      default: 30
    },
    pipesWidth: {
      type: Number,
      required: !1,
      default: 3
    },
    standHeight: {
      type: Number,
      required: !1,
      default: 46
    },
    standWidth: {
      type: Number,
      required: !1,
      default: 70
    },
    value: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= -100 && e <= 100
    },
    viewBoxHeight: {
      type: Number,
      required: !1,
      default: 80
    },
    viewBoxWidth: {
      type: Number,
      required: !1,
      default: 100
    }
  },
  setup(e) {
    const {
      degree: t
    } = BU(e), {
      cssClass: n
    } = DU(e), {
      centerX: r,
      viewBoxLocal: a,
      yStandBottom: l,
      yStandTop: o
    } = wU(e);
    return {
      centerX: r,
      cssClass: n,
      degree: t,
      viewBoxLocal: a,
      yStandBottom: l,
      yStandTop: o
    };
  },
  render() {
    return c("div", {
      class: this.cssClass
    }, [
      c("svg", {
        viewBox: this.viewBoxLocal,
        version: "1.1",
        xmlns: "http://www.w3.org/2000/svg"
      }, [
        c(OU, {
          bowlThreadStrokeWidth: this.bowlThreadStrokeWidth,
          bowlThreadWidth: this.bowlThreadWidth,
          bowlThreadHeight: this.bowlThreadHeight,
          bowlThreadPaddingX: this.bowlThreadPaddingX,
          bowlWidth: this.bowlWidth,
          bowlRadius: this.bowlRadius
        }),
        c(LU, {
          degree: this.degree,
          pipesWidth: this.pipesWidth,
          yStandTop: this.yStandTop,
          centerX: this.centerX,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          balanceTopHeight: this.balanceTopHeight
        }),
        c(NU, {
          standWidth: this.standWidth,
          standHeight: this.standHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          yStandBottom: this.yStandBottom,
          yStandTop: this.yStandTop
        }),
        c(KE, {
          direction: "left",
          degree: this.degree,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          yStandTop: this.yStandTop,
          bowlThreadHeight: this.bowlThreadHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          bowlWidth: this.bowlWidth
        }),
        c(KE, {
          direction: "right",
          degree: this.degree,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          yStandTop: this.yStandTop,
          bowlThreadHeight: this.bowlThreadHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          bowlWidth: this.bowlWidth
        })
      ])
    ]);
  }
};
function PU(e, {
  hasTextAndLength: t = B(!1),
  isMoreButtonObservingVisible: n = B(!1),
  isOpen: r = B(!1),
  isTextShorterThanTextLength: a = B(!1)
}) {
  const l = f(e, "btnIconLeftLess"), o = f(e, "btnIconLeftMore"), u = f(e, "btnIconRightLess"), h = f(e, "btnIconRightMore"), A = f(e, "btnTextLess"), E = f(e, "btnTextMore"), p = f(e, "btnTitleLess"), T = f(e, "btnTitleMore"), m = f(e, "showLess"), b = B(void 0), L = _(() => r.value ? A.value : E.value), v = _(() => r.value ? p.value : T.value), I = _(() => r.value ? l.value : o.value), R = _(() => r.value ? u.value : h.value), y = _(() => t.value ? a.value ? !1 : m.value ? !0 : !r.value : n.value ? m.value ? !0 : !r.value : !1);
  return {
    btnIconLeft: I,
    btnIconRight: R,
    btnText: L,
    btnTitle: v,
    buttonRef: b,
    isButtonVisible: y
  };
}
function xU({
  hasTextAndLength: e = _(() => !1),
  isOpen: t = B(!1)
}) {
  return {
    ariaExpanded: _(() => {
      if (e.value)
        return t.value;
    })
  };
}
function FU(e, {
  hasTextAndLength: t = _(() => !1),
  isOpen: n = B(!1)
}) {
  const r = f(e, "height");
  return {
    maxHeightStyle: _(() => {
      if (!(t.value || n.value))
        return r.value === 0 ? "max-height: none;" : `max-height: ${r.value}px`;
    })
  };
}
function MU(e) {
  const t = f(e, "isOpenDefault"), n = B(void 0);
  return {
    initIsOpen: () => {
      n.value = t.value;
    },
    isOpen: n
  };
}
function qU(e, {
  isBtnHiddenDependentOnTextLength: t = _(() => !1)
}) {
  const n = f(e, "height"), r = B(void 0), a = B(void 0), l = B(void 0), o = () => {
    if (t.value)
      return;
    (de(r.value, "offsetHeight") || 0) > n.value ? l.value = !0 : l.value = !1;
  };
  return {
    checkHeight: o,
    containerRef: r,
    isMoreButtonObservingVisible: l,
    startObservingMutation: () => {
      t.value || (a.value = new ResizeObserver(
        tl(() => {
          o();
        }, 300)
      ), a.value.observe(r.value));
    },
    stopObservingMutation: () => {
      t.value || a.value && a.value.unobserve(r.value);
    }
  };
}
function $U({
  hasTextAndLength: e = _(() => !1),
  isOpen: t = B(!1)
}) {
  return {
    textScreenReaderLocal: _(() => {
      if (!e.value)
        return t.value ? "_A_SHOW_MORE_LESS_SCREEN_READER_" : "_A_SHOW_MORE_MORE_SCREEN_READER_";
    })
  };
}
function kU(e, {
  isOpen: t = B(!1)
}) {
  const n = f(e, "text"), r = f(e, "textLength"), a = _(() => !!(n.value && r.value)), l = _(() => r.value > n.value.length), o = _(() => a.value && l.value), u = _(() => {
    const A = n.value.slice(0, r.value).trimEnd();
    let E = "...", p = !0;
    for (let T = A.length - 1; T > A.length - 4 && A[T] === "."; T--) {
      if (p)
        E = E.slice(0, -1);
      else
        break;
      p = !0;
    }
    return `${A}${E}`;
  }), h = _(() => {
    if (a.value) {
      if (l.value)
        return n.value;
      if (!t.value)
        return u.value;
    }
    return n.value;
  });
  return {
    hasTextAndLength: a,
    isBtnHiddenDependentOnTextLength: o,
    isTextShorterThanTextLength: l,
    textLocal: h
  };
}
function HU(e, {
  textLocal: t = _(() => {
  })
}) {
  const n = f(e, "safeHtml"), r = f(e, "html");
  return {
    isTextOrHtmlVisible: _(() => !!(t.value || n.value || r.value))
  };
}
function UU(e, { emit: t }, {
  containerRef: n = B(void 0),
  hasTextAndLength: r = _(() => !1),
  isOpen: a = B(!1),
  stopObservingMutation: l = () => {
  }
}) {
  const o = f(e, "showLess");
  return {
    isOpen: a,
    toggleButton: () => {
      a.value = !a.value, a.value && !o.value && l(), t("toggle", { isOpen: a.value }), r.value && a.value && !window.isScrollDisabled && Jo().then(
        () => Qr({
          element: n.value
        })
      );
    }
  };
}
const tue = {
  name: "AShowMore",
  inheritAttrs: !0,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    btnAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link a_p_0"
    },
    btnIconLeftLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconLeftMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnId: {
      type: String,
      required: !1,
      default: void 0
    },
    btnParentClass: {
      type: String,
      required: !1,
      default: "a_text_center"
    },
    btnTextLess: {
      type: String,
      required: !1,
      default: "_A_SHOW_MORE_LESS_"
    },
    btnTextMore: {
      type: String,
      required: !1,
      default: "_A_SHOW_MORE_MORE_"
    },
    btnTitleLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitleMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitlePlacement: {
      type: String,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    height: {
      type: Number,
      required: !1,
      default: 200,
      validator: (e) => e >= 0
    },
    html: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => ot("a_show_more_")
    },
    isBtnTitleHtml: {
      type: Boolean,
      required: !1
    },
    isOpenDefault: {
      type: Boolean,
      required: !1,
      default: !1
    },
    safeHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    showLess: {
      type: Boolean,
      required: !1,
      default: !0
    },
    text: {
      type: String,
      required: !1,
      default: void 0
    },
    textLength: {
      type: Number,
      required: !1,
      default: void 0,
      validator: (e) => e > 0
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      isOpen: r
    } = MU(e), {
      hasTextAndLength: a,
      isBtnHiddenDependentOnTextLength: l,
      isTextShorterThanTextLength: o,
      textLocal: u
    } = kU(e, {
      isOpen: r
    }), {
      isTextOrHtmlVisible: h
    } = HU(e, {
      textLocal: u
    }), {
      checkHeight: A,
      containerRef: E,
      isMoreButtonObservingVisible: p,
      startObservingMutation: T,
      stopObservingMutation: m
    } = qU(e, {
      isBtnHiddenDependentOnTextLength: l
    }), {
      toggleButton: b
    } = UU(e, t, {
      containerRef: E,
      hasTextAndLength: a,
      isOpen: r,
      stopObservingMutation: m
    }), {
      btnIconLeft: L,
      btnIconRight: v,
      btnText: I,
      btnTitle: R,
      buttonRef: y,
      isButtonVisible: C
    } = PU(e, {
      hasTextAndLength: a,
      isMoreButtonObservingVisible: p,
      isOpen: r,
      isTextShorterThanTextLength: o
    }), {
      maxHeightStyle: w
    } = FU(e, {
      hasTextAndLength: a,
      isOpen: r
    }), {
      textScreenReaderLocal: F
    } = $U({
      hasTextAndLength: a,
      isOpen: r
    }), {
      ariaExpanded: P
    } = xU({
      hasTextAndLength: a,
      isOpen: r
    });
    return n({
      buttonRef: y,
      containerRef: E,
      isOpen: r,
      toggleButton: b
    }), kr(() => {
      A(), T();
    }), Ot(() => {
      m();
    }), {
      ariaExpanded: P,
      btnIconLeft: L,
      btnIconRight: v,
      btnText: I,
      btnTitle: R,
      buttonRef: y,
      containerRef: E,
      hasTextAndLength: a,
      isButtonVisible: C,
      isOpen: r,
      isTextOrHtmlVisible: h,
      maxHeightStyle: w,
      textLocal: u,
      textScreenReaderLocal: F,
      toggleButton: b
    };
  },
  render() {
    return c("div", {
      class: [
        "a_show_more",
        {
          a_show_more_open: this.isOpen
        }
      ]
    }, [
      c("div", {
        class: "a_show_more__wrapper",
        style: this.maxHeightStyle
      }, [
        c("div", {
          ref: "containerRef",
          id: this.id,
          ariaExpanded: this.ariaExpanded,
          ...this.$attrs
        }, [
          this.isTextOrHtmlVisible && c(pe, {
            alwaysTranslate: this.alwaysTranslate,
            tag: "div",
            text: this.textLocal,
            html: this.html,
            safeHtml: this.safeHtml
          }),
          this.$slots.default && this.$slots.default({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          })
        ])
      ]),
      this.isButtonVisible && c("div", {
        class: this.btnParentClass
      }, [
        c(rt, {
          ref: "buttonRef",
          id: this.btnId,
          alwaysTranslate: this.alwaysTranslate,
          "aria-controls": this.id,
          class: [
            "a_show_more__button",
            this.btnClass
          ],
          disabled: this.disabled,
          iconLeft: this.btnIconLeft,
          iconRight: this.btnIconRight,
          isTitleHtml: this.isBtnTitleHtml,
          text: this.btnText,
          textAriaHidden: !this.hasTextAndLength,
          textScreenReader: this.textScreenReaderLocal,
          title: this.btnTitle,
          titlePlacement: this.btnTitlePlacement,
          ...this.btnAttributes,
          onClick: this.toggleButton
        }, () => this.$slots.button && this.$slots.button({
          isButtonVisible: this.isButtonVisible,
          isOpen: this.isOpen
        }))
      ])
    ]);
  }
};
function WU(e, {
  ariaSort: t = _(() => ({})),
  attributesForRoot: n = _(() => ({})),
  columnsStyles: r = _(() => ""),
  isLocked: a = _(() => !1),
  isSorting: l = _(() => !1),
  titlesSort: o = _(() => [])
}) {
  const u = f(e, "column"), h = f(e, "columnIndex"), A = f(e, "hasMultipleActions"), E = ue("isLoadingOptions"), p = ue("isLoadingOptions"), T = _(() => [
    "a_table__th a_table__cell",
    {
      a_table__th_draggable: !a.value && !p.value && E.value,
      a_table__th_sorting: l.value
    },
    u.value.classHeaderParent
  ]), m = _(() => {
    const L = [];
    return (u.value.title || u.value.title === 0) && L.push(u.value.title), L.push(...o.value), L;
  });
  return {
    attributesForTh: _(() => {
      let L = h.value + 1;
      return A.value && L++, {
        ...t.value,
        ...n.value,
        "aria-colindex": L,
        ref: "root",
        role: "columnheader",
        class: T.value,
        style: r.value
      };
    }),
    titlesLocal: m
  };
}
function VU(e) {
  const t = f(e, "column"), n = ue("columnsVisibleAdditionalSpaceForOneGrow", 0), r = _(() => ae(t.value.grow) ? 1 : t.value.grow);
  return {
    additionalWidthForCurrentColumn: _(() => n.value * r.value)
  };
}
function US(e) {
  const t = f(e, "column"), n = ue("columnWidthDefault"), {
    additionalWidthForCurrentColumn: r
  } = VU(e), a = _(() => t.value.width || n.value), l = _(() => a.value + r.value), o = _(() => `width: ${l.value}px; min-width: ${l.value}px; max-width: ${l.value}px;`);
  return {
    columnsStyles: _(() => t.value.style ? `${o.value} ${t.value.style}` : o.value)
  };
}
const YE = "a_table__drag_element";
function WS(e, { emit: t }, {
  classOverString: n = "",
  inDropdown: r = !1
}) {
  const a = f(e, "column"), l = f(e, "columnIndex"), o = f(e, "columnIndexDraggable"), u = ue("isLoadingOptions"), h = ue("isColumnsDnd"), A = B(null), E = _(() => o.value > l.value ? n : `${n}_right`), p = (R) => {
    var y, C, w;
    if ((y = R.target) == null || y.classList.add(YE), r) {
      const F = ((C = R.target) == null ? void 0 : C.offsetHeight) || 30;
      (w = R.target) == null || w.parentElement.style.setProperty("--a_table_draggable_li_height", `${F}px`);
    }
    R.dataTransfer.effectAllowed = "move", t("dragstartParent", {
      columnIndex: l.value
    });
  }, T = (R) => {
    var y, C;
    (y = R.target) == null || y.classList.remove(E.value), (C = R.target) == null || C.classList.remove(YE), t("dragendParent");
  }, m = () => {
    A.value && A.value.classList && A.value.classList.add(E.value), t("dragenterParent", {
      columnIndex: l.value
    });
  }, b = (R) => (R.preventDefault && R.preventDefault(), !1), L = () => {
    A.value && A.value.classList && A.value.classList.remove(E.value), t("dragleaveParent", {
      columnIndex: l.value
    });
  }, v = _(() => !!a.value.locked);
  return {
    attributesForRoot: _(() => {
      const R = {
        ref: "root"
      };
      return !v.value && h.value && (R.draggable = !u.value, R.onDragstart = p, R.onDragend = T, R.onDragenter = m, R.onDragover = b, R.onDragleave = L), R;
    }),
    isLocked: v,
    root: A
  };
}
const GU = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-down-fill" viewBox="0 0 16 16">
  <path d="M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z"/>
</svg>`, jU = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-up-fill" viewBox="0 0 16 16">
  <path d="m7.247 4.86-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z"/>
</svg>`, Za = B({
  propsDefault: {
    borderType: "bordered"
  },
  config: {
    isHtmlTitleSort: !1
  }
}), nue = {
  install: (e, {
    propsDefault: t = {},
    config: n = {}
  } = {}) => {
    Za.value.propsDefault = {
      ...Za.value.propsDefault,
      ...t
    }, Za.value.config = {
      ...Za.value.config,
      ...n
    };
  }
};
function zU(e) {
  const t = f(e, "column"), n = f(e, "columnIndex"), r = f(e, "disabledSort"), a = f(e, "isSortingMultiColumn"), l = f(e, "modelSort"), o = f(e, "showFirstSortingSequenceNumber"), u = ue("changeModelSort"), h = ue("tableId"), A = _(() => t.value.sortId), E = _(() => !!A.value), p = _(() => l.value.indexOf(A.value)), T = _(() => l.value.indexOf(`-${A.value}`)), m = _(() => p.value !== -1), b = _(() => T.value !== -1), L = _(() => E.value && (m.value || b.value)), v = _(() => {
    if (E.value) {
      let N = "none";
      return m.value ? N = "ascending" : b.value && (N = "descending"), {
        "aria-sort": N
      };
    }
    return {};
  }), I = _(() => c(st, {
    icon: jU,
    class: "a_table__th__sort__icon a_table__th__sort__icon_up"
  })), R = _(() => c(st, {
    icon: GU,
    class: "a_table__th__sort__icon a_table__th__sort__icon_down"
  })), y = _(() => {
    const N = [];
    return E.value && (b.value || N.push(I.value), m.value || N.push(R.value)), N;
  }), C = ({ $event: N }) => {
    r.value || u({
      $event: N,
      sortId: A.value
    });
  }, w = _(() => `${h.value}_th_${n.value}_screen_reader`), F = _(() => {
    var N;
    return E.value ? {
      type: "button",
      disabled: r.value,
      isTitleHtml: ((N = Za.value.config) == null ? void 0 : N.isHtmlTitleSort) || !1,
      "aria-describedby": w.value,
      onClick: C
    } : {
      tag: "span"
    };
  }), P = _(() => {
    if (!(!a.value && !L.value) && !(l.value.length <= 1 && !o.value)) {
      if (p.value !== -1)
        return p.value + 1;
      if (T.value !== -1)
        return T.value + 1;
    }
  }), q = _(() => {
    const N = [];
    return E.value && (N.push("_A_TABLE_SORT_TITLE_"), a.value && N.push("_A_TABLE_SORT_TITLE_MULTI_COLUMN_")), N;
  });
  return {
    ariaSort: v,
    attributesForButtonSort: F,
    columnTextScreenReaderId: w,
    iconsSortable: y,
    isSortable: E,
    isSorting: L,
    sequenceNumberSort: P,
    titlesSort: q
  };
}
const Hd = {
  name: "ATableHeaderTh",
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnGroupNames: {
      type: Array,
      required: !1,
      default: void 0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    columnIndexDraggable: {
      type: Number,
      required: !1,
      default: -1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !1
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "dragendParent",
    "dragstartParent",
    "dragenterParent",
    "dragleaveParent"
  ],
  inject: [
    "changeModelSort",
    "isColumnsDnd",
    "isLoadingOptions",
    "isLoadingTable"
  ],
  setup(e, t) {
    const {
      columnsStyles: n
    } = US(e), {
      attributesForRoot: r,
      isLocked: a,
      root: l
    } = WS(e, t, {
      classOverString: "a_table__th_over",
      inDropdown: !1
    }), {
      ariaSort: o,
      attributesForButtonSort: u,
      columnTextScreenReaderId: h,
      iconsSortable: A,
      isSortable: E,
      isSorting: p,
      sequenceNumberSort: T,
      titlesSort: m
    } = zU(e), {
      attributesForTh: b,
      titlesLocal: L
    } = WU(e, {
      ariaSort: o,
      attributesForRoot: r,
      columnsStyles: n,
      isLocked: a,
      isSorting: p,
      titlesSort: m
    });
    return {
      attributesForButtonSort: u,
      attributesForTh: b,
      columnTextScreenReaderId: h,
      columnsStyles: n,
      iconsSortable: A,
      isSortable: E,
      root: l,
      sequenceNumberSort: T,
      titlesLocal: L,
      titlesSort: m
    };
  },
  render() {
    return c("div", this.attributesForTh, [
      c("div", {
        class: [
          "a_table__cell__child"
        ]
      }, [
        this.columnGroupNames && c(pe, {
          html: this.columnGroupNames,
          tag: "span",
          class: "a_sr_only"
        }),
        c(pe, {
          id: this.columnTextScreenReaderId,
          text: this.titlesLocal,
          tag: "span",
          class: "a_sr_only",
          ariaHidden: !0
        }),
        c(rt, {
          class: [
            "a_table__th__btn",
            this.column.class,
            this.column.classHeader,
            {
              "a_btn a_btn_link a_table__th__btn_sort": this.isSortable,
              a_table__th__btn_sequence: this.sequenceNumberSort
            }
          ],
          iconLeft: this.column.icon,
          iconClass: "a_table__th__icon",
          extra: this.column.extra,
          title: this.titlesLocal,
          textScreenReader: this.column.textScreenReader || void 0,
          ...this.attributesForButtonSort
        }, () => [
          this.column.label && c(pe, {
            html: this.column.label,
            tag: "span",
            extra: this.column.extra,
            class: "a_table__th__text aloha_element__ml_0",
            ariaHidden: !!this.column.textScreenReader
          }),
          this.isSortable && c("span", {
            class: "a_table__th__sort__box aloha_element__ml_0"
          }, [
            this.sequenceNumberSort && c("span", {
              class: [
                "a_table__th__sort__sequence_num",
                this.sortingSequenceNumberClass
              ]
            }, this.sequenceNumberSort),
            c("span", {
              class: "a_table__th__sort__icons"
            }, [
              ...this.iconsSortable
            ])
          ])
        ])
      ])
    ]);
  }
};
function KU(e, {
  attributesForRoot: t = _(() => ({})),
  isColumnVisible: n = _(() => !1),
  isLocked: r = _(() => !1),
  labelTranslated: a = _(() => "")
}) {
  const l = f(e, "searchColumnModel"), o = _(() => {
    if (!l.value)
      return !0;
    const h = new RegExp(uu(l.value), "gi");
    return `${a.value}`.search(h) !== -1;
  });
  return {
    attributesComponent: _(() => {
      const h = {
        ...t.value,
        class: "a_table__th__dropdown__li"
      };
      return o.value || (h.style = "display: none;"), !r.value && !n.value && (h.class += " a_table__th__dropdown__li_invisible"), h;
    })
  };
}
const YU = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01757813,0,0,0.01757813,-3.96314e-5,1.7578125e-5)"
  >
    <path
      d="m 493.034,717.353 v 0 c -22.097,-7.811 -37.924,-28.881 -37.924,-53.651 0,-31.421 25.469,-56.89 56.89,-56.89 31.421,0 56.89,25.469 56.89,56.89 0,24.769 -15.833,45.843 -37.924,53.651 v 98.392 c 0,9.98 -8.486,18.618 -18.966,18.618 -10.164,0 -18.966,-8.339 -18.966,-18.618 z m -265.48,-300.17 v 0 0 C 164.683,417.358 113.78,467.989 113.78,531.324 v 189.27 c 0,167.568 136.008,303.405 303.372,303.405 h 189.695 c 167.548,0 303.372,-136.179 303.372,-303.405 v -189.27 c 0,-62.93 -50.854,-113.956 -113.774,-114.141 V 284.414 C 796.445,127.332 668.777,-0.001 512,-0.001 c -157.093,0 -284.445,127.307 -284.445,284.415 v 132.769 z m 113.779,0 V 284.476 c 0,-94.496 76.411,-170.699 170.665,-170.699 94.063,0 170.665,76.426 170.665,170.699 V 417.183 H 341.33 Z"
    />
  </g>
</svg>`;
function ZU(e, {
  isLocked: t = _(() => !1)
}) {
  const n = f(e, "column"), r = f(e, "disabledOptions"), a = ue("changeModelColumnsVisible"), l = ue("modelColumnsVisibleLocal"), o = _(() => n.value.id in l.value ? !!l.value[n.value.id] : !n.value.hide), u = _(() => t.value ? YU : o.value ? kT : $T), h = _(() => t.value ? "_A_TABLE_OPTIONS_BTN_LOCK_TITLE_" : o.value ? "_A_TABLE_OPTIONS_BTN_EYE_TITLE_" : "_A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_"), A = ({ $event: p }) => {
    p.stopPropagation(), p.preventDefault();
    const T = Se(l.value);
    T[n.value.id] = !o.value, a(T);
  };
  return {
    buttonVisibleProps: _(() => {
      const p = {
        class: "a_table__th__dropdown_item__icon",
        tag: "span",
        iconLeft: u.value,
        title: h.value,
        textScreenReader: h.value
      };
      return t.value || (p.tag = "button", p.class += " a_table__th__dropdown_item__icon_btn a_btn a_btn_link", p.onClick = A, r.value && (p.disabled = !0)), p;
    }),
    isColumnVisible: o
  };
}
function XU(e) {
  const t = f(e, "column"), n = f(e, "searchColumnModel"), {
    filterSearchHighlight: r
  } = sr(), a = _(() => Ii(t.value.label) ? xt({
    placeholder: t.value.label
  }) : t.value.label);
  return {
    labelLocal: _(() => r(a.value, { searchModel: n.value })),
    labelTranslated: a
  };
}
function JU(e) {
  const t = f(e, "columnIndex"), n = ue("changeColumnsOrdering"), r = ue("columnsOrdered"), a = ue("tableId"), l = ({ columnIndex: T, iconKey: m }) => `${a.value}_${m}_${T}`, o = ({ $event: T }) => {
    T.stopPropagation();
    const m = t.value - 1;
    n({
      columnIndexDraggable: t.value,
      columnIndexOver: m
    }), window.isScrollDisabled || setTimeout(() => {
      Qr({
        selector: `#${l({
          columnIndex: m,
          iconKey: "up"
        })}`
      });
    });
  }, u = ({ $event: T }) => {
    T.stopPropagation();
    const m = t.value + 1;
    n({
      columnIndexDraggable: t.value,
      columnIndexOver: m
    }), window.isScrollDisabled || setTimeout(() => {
      const b = `#${l({
        columnIndex: m,
        iconKey: "down"
      })}`;
      Qr({
        selector: b
      });
    });
  }, h = _(() => l({
    columnIndex: t.value,
    iconKey: "up"
  })), A = _(() => l({
    columnIndex: t.value,
    iconKey: "down"
  })), E = _(() => t.value !== 0 && !r.value[t.value - 1].locked), p = _(() => r.value.length - 1 !== t.value && !r.value[t.value + 1].locked);
  return {
    idButtonArrowDown: A,
    idButtonArrowUp: h,
    isButtonArrowDownVisible: p,
    isButtonArrowUpVisible: E,
    moveColumnDown: u,
    moveColumnUp: o
  };
}
const QU = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-grip-vertical" viewBox="0 0 16 16">
  <path d="M7 2a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M7 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/>
</svg>`, eW = {
  name: "ATableHeaderThActionItem",
  components: {
    AIcon: st,
    ATranslation: pe
  },
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    columnIndexDraggable: {
      type: Number,
      required: !1,
      default: -1
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    searchColumnModel: {
      type: String,
      required: !0
    }
  },
  emits: [
    "dragendParent",
    "dragstartParent",
    "dragenterParent",
    "dragleaveParent"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsOrdered",
    "isColumnsDnd",
    "isLoadingOptions",
    "isLoadingTable",
    "modelColumnsVisibleLocal",
    "tableId"
  ],
  setup(e, t) {
    const {
      attributesForRoot: n,
      isLocked: r,
      root: a
    } = WS(e, t, {
      classOverString: "a_table__th__dropdown__li_over",
      inDropdown: !0
    }), {
      labelLocal: l,
      labelTranslated: o
    } = XU(e), {
      buttonVisibleProps: u,
      isColumnVisible: h
    } = ZU(e, {
      isLocked: r
    }), {
      idButtonArrowDown: A,
      idButtonArrowUp: E,
      isButtonArrowDownVisible: p,
      isButtonArrowUpVisible: T,
      moveColumnDown: m,
      moveColumnUp: b
    } = JU(e), {
      attributesComponent: L
    } = KU(e, {
      attributesForRoot: n,
      isColumnVisible: h,
      isLocked: r,
      labelTranslated: o
    });
    return {
      attributesComponent: L,
      attributesForRoot: n,
      buttonVisibleProps: u,
      idButtonArrowDown: A,
      idButtonArrowUp: E,
      isButtonArrowDownVisible: p,
      isButtonArrowUpVisible: T,
      isLocked: r,
      labelLocal: l,
      moveColumnDown: m,
      moveColumnUp: b,
      root: a
    };
  },
  render() {
    return this.column.isRender === !1 ? null : c("li", this.attributesComponent, [
      c("div", {
        class: "a_dropdown__item_text a_table__th__dropdown_item"
      }, [
        c("div", {
          class: "a_table__th__dropdown_item__child"
        }, [
          c(rt, this.buttonVisibleProps),
          c("span", {
            class: "a_position_relative"
          }, [
            this.column.icon && c(st, {
              icon: this.column.icon,
              class: "a_table__th__icon"
            }),
            c(pe, {
              tag: "span",
              class: "a_table__th__text",
              safeHtml: this.labelLocal
            }),
            this.column.title && c(pe, {
              title: this.column.title,
              ariaHidden: !0,
              tag: "span",
              class: "a_position_absolute_all"
            }),
            this.column.title && c(pe, {
              text: this.column.title,
              tag: "span",
              class: "a_sr_only"
            })
          ]),
          !this.isLocked && this.isColumnsDnd ? [
            this.isButtonArrowUpVisible && c(rt, {
              id: this.idButtonArrowUp,
              class: "a_sr_only_focusable a_btn a_btn_link a_p_0 a_table__th__dropdown_item__btn_arrow",
              disabled: this.disabledOptions,
              type: "button",
              iconLeft: xc,
              title: "_A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_",
              textScreenReader: "_A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_",
              onClick: this.moveColumnUp
            }),
            this.isButtonArrowDownVisible && c(rt, {
              id: this.idButtonArrowDown,
              class: "a_sr_only_focusable a_btn a_btn_link a_p_0 a_table__th__dropdown_item__btn_arrow",
              disabled: this.disabledOptions,
              type: "button",
              iconLeft: cs,
              title: "_A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_",
              textScreenReader: "_A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_",
              onClick: this.moveColumnDown
            })
          ] : ""
        ]),
        !this.isLocked && this.isColumnsDnd && c(st, {
          icon: QU,
          class: "a_table__th__dropdown_item__icon_dnd"
        })
      ])
    ]);
  }
};
function tW() {
  const e = B("");
  return {
    searchColumnModel: e,
    updateSearchColumnModel: (n) => {
      e.value = n;
    }
  };
}
function VS({
  classOver: e = "",
  classOverRight: t = "",
  classOverParent: n = "",
  inHeader: r = !1
}) {
  const a = B(void 0), l = B(void 0), o = B(void 0), u = ue("changeColumnsOrdering"), h = _(() => !ae(l.value)), A = ({ columnIndex: L }) => {
    l.value = L;
  }, E = ({ columnIndex: L }) => {
    o.value = L;
  }, p = ({ columnIndex: L }) => {
    o.value === L && (o.value = void 0);
  }, T = (L) => {
    if (!(ae(l.value) || ae(o.value)))
      return u({
        columnIndexDraggable: l.value,
        columnIndexOver: o.value,
        inHeader: r
      }), L.stopPropagation(), !1;
  }, m = () => {
    a.value.querySelectorAll(`.${n}`).forEach((v) => {
      v.classList.remove(e), v.classList.remove(t);
    });
  };
  return {
    columnIndexDraggable: l,
    dragstart: A,
    dragenter: E,
    dragleave: p,
    dragend: () => {
      m(), l.value = void 0;
    },
    drop: T,
    isDragstart: h,
    root: a
  };
}
function GS() {
  const e = ue("columnActionsWidthMinLocal"), t = ue("modelIsTableWithoutScroll");
  return {
    stylesThTd: _(() => t.value ? {} : {
      style: `width: ${e.value}px;`
    })
  };
}
const nW = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-counterclockwise" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2z"/>
  <path d="M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466"/>
</svg>`, rW = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear-fill" viewBox="0 0 16 16">
  <path d="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z"/>
</svg>`;
function jS(e) {
  const t = {};
  return e.forEach((n) => {
    t[n.id] = !n.hide;
  }), t;
}
function zS({ element: e, tagsName: t, classStop: n }) {
  if (e && e.tagName) {
    if (t.indexOf(e.tagName) !== -1)
      return !0;
    if (e.classList.contains(n))
      return !1;
    if (e.parentElement)
      return zS({ element: e.parentElement, tagsName: t, classStop: n });
  }
  return !1;
}
function iW({ $event: e, classStop: t = "", tagsName: n = [] } = {}) {
  return e && e.target ? zS({ element: e.target, tagsName: n, classStop: t }) : !1;
}
function Xs({ column: e, modelColumnsVisibleLocal: t }) {
  return e.isRender === !1 ? !1 : e.id in t ? !!t[e.id] : !e.hide;
}
function aW({ column: e }) {
  return e.isRender === !1 ? !1 : !e.hide;
}
function sW({ columnIndex: e, indexFirstScrollInvisibleColumn: t }) {
  return ae(t) ? !0 : e < t;
}
function lW({ column: e, columnIndex: t, modelIsTableWithoutScroll: n, modelColumnsVisibleLocal: r, indexFirstScrollInvisibleColumn: a }) {
  return n ? Xs({
    column: e,
    modelColumnsVisibleLocal: r
  }) && sW({
    columnIndex: t,
    indexFirstScrollInvisibleColumn: a
  }) : Xs({
    column: e,
    modelColumnsVisibleLocal: r
  });
}
function KS({ tableId: e }) {
  return `${e}_preview_right`;
}
function YS({ tableId: e }) {
  return `${e}_multiple_panel`;
}
function ZS({ tableId: e }) {
  return `${e}_header_label`;
}
function Xo({ row: e, rowIndex: t, keyId: n }) {
  return n ? de(e, n) : t;
}
function XS({ rowAction: e, row: t, rowIndex: n }) {
  return e.isHidden ? !1 : qe(e.isHiddenCallback) ? !e.isHiddenCallback({
    row: t,
    rowIndex: n
  }) : !0;
}
const Ud = {
  name: "ATableHeaderThAction",
  inject: [
    "changeModelIsTableWithoutScroll",
    "columnActionsWidthLocal",
    "changeColumnsOrdering",
    "changeModelColumnsVisible",
    "columns",
    "columnsOrdered",
    "isActionIconVisible",
    "modelIsTableWithoutScroll"
  ],
  props: {
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    }
  },
  setup() {
    const {
      columnIndexDraggable: e,
      dragend: t,
      dragenter: n,
      dragleave: r,
      dragstart: a,
      drop: l,
      isDragstart: o,
      root: u
    } = VS({
      classOver: "a_table__th__dropdown__li_over",
      classOverRight: "a_table__th__dropdown__li_over_right",
      classOverParent: "a_table__th__dropdown__li",
      inHeader: !1
    }), {
      searchColumnModel: h,
      updateSearchColumnModel: A
    } = tW(), {
      stylesThTd: E
    } = GS();
    return {
      columnIndexDraggable: e,
      dragend: t,
      dragenter: n,
      dragleave: r,
      dragstart: a,
      drop: l,
      isDragstart: o,
      root: u,
      searchColumnModel: h,
      stylesThTd: E,
      updateSearchColumnModel: A
    };
  },
  methods: {
    selectAllColumns() {
      const e = {};
      Y(this.columnsOrdered, (t) => {
        e[t.id] = !0;
      }), this.changeModelColumnsVisible(e);
    },
    deselectAllColumns() {
      const e = {};
      Y(this.columnsOrdered, (t) => {
        e[t.id] = !!t.locked;
      }), this.changeModelColumnsVisible(e);
    },
    resetColumns() {
      this.changeModelColumnsVisible(jS(this.columnsOrdered)), this.changeColumnsOrdering({ reset: !0 });
    }
  },
  render() {
    return c("div", {
      class: [
        "a_table__th a_table__cell a_table__cell_action",
        {
          a_table__cell_action_sticky: this.isRowActionsStickyLocal
        }
      ],
      role: "columnheader",
      ...this.stylesThTd
    }, [
      c("span", {
        class: "a_sr_only"
      }, "Aktionen"),
      this.isActionIconVisible && c(ei, {
        buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
        buttonTitle: "_A_TABLE_DROPDOWN_OPTIONS_TITLE_",
        buttonTextScreenReader: "_A_TABLE_DROPDOWN_OPTIONS_TITLE_",
        dropdownTag: "div",
        dropdownClass: "a_p_0",
        hasCaret: !1,
        isCloseByClickInside: !1,
        disabled: this.disabledOptions,
        placement: "left",
        menuWidth: 320,
        inBody: !0
      }, {
        button: () => c(st, {
          icon: rW
        }),
        dropdown: () => [
          c("ul", {
            class: ["a_table__th__dropdown__ul", {
              a_table__th__dropdown__ul_dragstart: this.isDragstart
            }],
            ref: "root",
            onDrop: this.drop
          }, [
            c("li", null, [
              c("div", {
                class: "a_dropdown__item_text a_table__th__dropdown__search"
              }, [
                c(Sn, {
                  label: "Suchen",
                  modelValue: this.searchColumnModel,
                  isClearButton: !0,
                  modelUndefined: "",
                  "onUpdate:modelValue": this.updateSearchColumnModel
                })
              ])
            ]),
            c("li", {
              class: "a_dropdown__divider",
              "aria-hidden": !0
            }),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.selectAllColumns
              }, [
                c(st, {
                  icon: Cc,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Alle einblenden")
              ])
            ]),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.deselectAllColumns
              }, [
                c(st, {
                  icon: oi,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Alle ausblenden")
              ])
            ]),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.resetColumns
              }, [
                c(st, {
                  icon: nW,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Zurücksetzen")
              ])
            ]),
            c("li", null, [
              c(vS, {
                class: "a_dropdown__item_text a_text_nowrap",
                disabled: this.disabledOptions,
                modelValue: this.modelIsTableWithoutScroll,
                trueLabel: "Kompakte Ansicht",
                falseLabel: "Kompakte Ansicht",
                "onUpdate:modelValue": this.changeModelIsTableWithoutScroll
              })
            ]),
            c("li", {
              class: "a_dropdown__divider",
              "aria-hidden": !0
            }),
            this.columnsOrdered.map((e, t) => c(eW, {
              column: e,
              columnIndex: t,
              columnIndexDraggable: this.columnIndexDraggable,
              disabledOptions: this.disabledOptions,
              searchColumnModel: this.searchColumnModel,
              onDragstartParent: this.dragstart,
              onDragenterParent: this.dragenter,
              onDragleaveParent: this.dragleave,
              onDragendParent: this.dragend
            }))
          ])
        ]
      })
    ]);
  }
};
function JS(e, { emit: t }) {
  const n = f(e, "areAllRowsSelected"), r = f(e, "areAllVisibleRowsSelected"), a = f(e, "areSomeRowsSelected"), l = f(e, "rowsLocalLength"), o = _(() => !!(l.value === 0 || n.value)), u = _(() => a.value && !(r.value || n.value)), h = _(() => r.value || n.value), A = _(() => u.value || h.value ? "_A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_" : "_A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_");
  return {
    isCheckboxDisabled: o,
    isCheckboxIndeterminate: u,
    labelCheckbox: A,
    modelValueCheckboxLocal: h,
    toggleCheckbox: () => {
      o.value || t("setSelectedRowsIndexes", { isAll: !0 });
    }
  };
}
const oW = {
  name: "ATableHeader",
  components: {
    ATableHeaderTh: Hd,
    ATableHeaderThAction: Ud
  },
  props: {
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areAllVisibleRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !0
    },
    rowsLocalLength: {
      type: Number,
      required: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMobile",
    "isMultipleActionsActive"
  ],
  setup(e, t) {
    const {
      columnIndexDraggable: n,
      dragstart: r,
      dragenter: a,
      dragleave: l,
      dragend: o,
      drop: u,
      isDragstart: h,
      root: A
    } = VS({
      classOver: "a_table__th_over",
      classOverRight: "a_table__th_over_right",
      classOverParent: "a_table__th",
      inHeader: !0
    }), {
      isCheckboxDisabled: E,
      isCheckboxIndeterminate: p,
      labelCheckbox: T,
      modelValueCheckboxLocal: m,
      toggleCheckbox: b
    } = JS(e, t);
    return {
      columnIndexDraggable: n,
      dragend: o,
      dragenter: a,
      dragleave: l,
      dragstart: r,
      drop: u,
      isCheckboxDisabled: E,
      isCheckboxIndeterminate: p,
      isDragstart: h,
      labelCheckbox: T,
      modelValueCheckboxLocal: m,
      root: A,
      toggleCheckbox: b
    };
  },
  render() {
    return this.isMobile ? null : c("div", {
      ref: "root",
      role: "rowgroup",
      class: ["a_table__head", {
        a_table__head_dragstart: this.isDragstart
      }]
    }, [
      c("div", {
        class: "a_table__row a_table__head__row",
        role: "row",
        onDrop: this.drop
      }, [
        this.isMultipleActionsActive && c("div", {
          role: "columnheader",
          class: "a_table__th a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;",
          "aria-colindex": 1
        }, [
          c(yu, {
            isWidthAuto: !0,
            modelValue: this.modelValueCheckboxLocal,
            indeterminate: this.isCheckboxIndeterminate,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        this.columnsFilteredForRender.map((e, t) => c(Hd, {
          ref: "th",
          column: e,
          columnIndex: t,
          columnIndexDraggable: this.columnIndexDraggable,
          disabledSort: this.disabledSort,
          hasMultipleActions: this.hasMultipleActions,
          isSortingMultiColumn: this.isSortingMultiColumn,
          modelSort: this.modelSort,
          showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
          sortingSequenceNumberClass: this.sortingSequenceNumberClass,
          onDragstartParent: this.dragstart,
          onDragenterParent: this.dragenter,
          onDragleaveParent: this.dragleave,
          onDragendParent: this.dragend
        })),
        this.isActionColumnVisible && c(Ud, {
          disabledOptions: this.disabledOptions,
          isRowActionsStickyLocal: this.isRowActionsStickyLocal
        })
      ])
    ]);
  }
}, uW = {
  name: "ATableGroupedHeader",
  props: {
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areAllVisibleRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    columnsForRender: {
      type: Array,
      required: !0
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !0
    },
    rowsLocalLength: {
      type: Number,
      required: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMobile",
    "isMultipleActionsActive"
  ],
  setup(e, t) {
    const {
      isCheckboxDisabled: n,
      isCheckboxIndeterminate: r,
      labelCheckbox: a,
      modelValueCheckboxLocal: l,
      toggleCheckbox: o
    } = JS(e, t);
    return {
      isCheckboxDisabled: n,
      isCheckboxIndeterminate: r,
      labelCheckbox: a,
      modelValueCheckboxLocal: l,
      toggleCheckbox: o
    };
  },
  render() {
    return this.isMobile ? null : c("div", {
      ref: "root",
      role: "rowgroup",
      class: "a_table__head"
    }, [
      c("div", {
        class: "a_table__row a_table__head__row",
        role: "row"
      }, [
        this.isMultipleActionsActive && c("div", {
          role: "columnheader",
          class: "a_table__th a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;",
          "aria-colindex": 1
        }, [
          c(yu, {
            isWidthAuto: !0,
            modelValue: this.modelValueCheckboxLocal,
            indeterminate: this.isCheckboxIndeterminate,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        this.columnsForRender,
        this.isActionColumnVisible && c(Ud, {
          disabledOptions: this.disabledOptions,
          isRowActionsStickyLocal: this.isRowActionsStickyLocal
        })
      ])
    ]);
  }
};
function _W(e, { emit: t }, {
  nextAvailableRowIndex: n,
  previousAvailableRowIndex: r,
  rowNumber: a = _(() => 0)
}) {
  const l = f(e, "countAllRows"), o = f(e, "limitPagination"), u = f(e, "offsetPagination"), h = f(e, "rowIndex"), A = f(e, "usePagination"), E = _(() => a.value <= 1 || ae(r.value)), p = _(() => a.value >= l.value || ae(n.value));
  return {
    disabledBtnArrowLeft: E,
    disabledBtnArrowRight: p,
    toNextRow: () => {
      p.value || (A.value ? (h.value + 1) % o.value === 0 ? (t("update:offset", { offset: u.value + o.value, reload: !1 }), t("togglePreview", { rowIndex: 0 })) : t("togglePreview", { rowIndex: n.value }) : t("togglePreview", { rowIndex: n.value }));
    },
    toPreviousRow: () => {
      E.value || (A.value ? (h.value + 1) % o.value === 1 ? (t("update:offset", { offset: u.value - o.value, reload: !1 }), t("togglePreview", { rowIndex: o.value - 1 })) : t("togglePreview", { rowIndex: r.value }) : t("togglePreview", { rowIndex: r.value }));
    }
  };
}
function dW() {
  const e = ue("tableId");
  return {
    idLocal: _(() => KS({ tableId: e.value }))
  };
}
function cW({ emit: e }, {
  previewRef: t = B(void 0)
}) {
  return {
    mousedown: ({ clientWidth: l }) => {
      e("mousedownResizePreviewRight", {
        clientWidth: l
      });
    },
    mousemove: ({ clientX: l }) => {
      e("mousemoveResizePreviewRight", {
        clientX: l,
        previewRef: t.value
      });
    },
    mouseup: () => {
      e("mouseupResizePreviewRight", {
        previewRightWidth: de(t, "value.offsetWidth")
      });
    }
  };
}
const ZE = B(void 0);
function QS() {
  return {
    previewRef: ZE,
    removePreviewRef: () => {
      ZE.value = void 0;
    }
  };
}
function fW(e) {
  const t = f(e, "countAllRows"), n = f(e, "disabledPreviewRowCallback"), r = f(e, "offsetPagination"), a = f(e, "rowIndex"), l = f(e, "rows"), o = f(e, "usePagination"), {
    filterCurrency: u
  } = sr(), h = _(() => o.value ? (r.value || 0) + a.value + 1 : a.value + 1), A = _(() => l.value[a.value]), E = _(() => {
    let b = null;
    if (!qe(n.value))
      b = a.value === l.value.length - 1 ? null : a.value++;
    else
      for (let L = a.value + 1; L < l.value.length; L++) {
        const v = l.value[L];
        if (!n.value({ row: v, rowIndex: L })) {
          b = L;
          break;
        }
      }
    return b;
  }), p = _(() => {
    let b = null;
    if (!qe(n.value))
      b = a.value === 0 ? null : a.value--;
    else
      for (let L = a.value - 1; L >= 0; L--) {
        const v = l.value[L];
        if (!n.value({ row: v, rowIndex: L })) {
          b = L;
          break;
        }
      }
    return b;
  }), T = _(() => u(t.value, { suffix: "", digits: 0 })), m = _(() => u(h.value, { suffix: "", digits: 0 }));
  return {
    countAllRowsFormatted: T,
    currentRow: A,
    nextAvailableRowIndex: E,
    previousAvailableRowIndex: p,
    rowNumber: h,
    rowNumberFormatted: m
  };
}
const hW = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8"/>
</svg>`, AW = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8"/>
</svg>`, EW = {
  name: "ATablePreviewRight",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    isLoadingTable: {
      type: Boolean,
      required: !1
    },
    isMobile: {
      type: Boolean,
      required: !1
    },
    limitPagination: {
      type: Number,
      required: !1,
      default: void 0
    },
    offsetPagination: {
      type: Number,
      required: !1,
      default: void 0
    },
    previewStyles: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    rows: {
      type: Array,
      required: !0
    },
    usePagination: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "closePreview",
    "mousedownResizePreviewRight",
    "mousemoveResizePreviewRight",
    "mouseupResizePreviewRight",
    "togglePreviewResize",
    "togglePreview",
    "update:offset"
  ],
  inject: [
    "isLoadingOptions"
  ],
  setup(e, t) {
    const n = f(e, "isMobile"), {
      previewRef: r
    } = QS(), {
      idLocal: a
    } = dW(), {
      mousedown: l,
      mousemove: o,
      mouseup: u
    } = cW(t, {
      previewRef: r
    }), {
      countAllRowsFormatted: h,
      currentRow: A,
      nextAvailableRowIndex: E,
      previousAvailableRowIndex: p,
      rowNumber: T,
      rowNumberFormatted: m
    } = fW(e), {
      disabledBtnArrowLeft: b,
      disabledBtnArrowRight: L,
      toNextRow: v,
      toPreviousRow: I
    } = _W(e, t, {
      nextAvailableRowIndex: E,
      previousAvailableRowIndex: p,
      rowNumber: T
    });
    return kr(() => {
      n.value || t.emit("togglePreviewResize", {
        isOpen: !0,
        previewRef: r.value
      });
    }), Ot(() => {
      n.value || t.emit("togglePreviewResize", {
        isOpen: !1,
        previewRef: r.value
      });
    }), {
      countAllRowsFormatted: h,
      currentRow: A,
      disabledBtnArrowLeft: b,
      disabledBtnArrowRight: L,
      idLocal: a,
      mousedown: l,
      mousemove: o,
      mouseup: u,
      previewRef: r,
      rowNumber: T,
      rowNumberFormatted: m,
      toNextRow: v,
      toPreviousRow: I
    };
  },
  render() {
    const e = [
      this.isLoadingTable ? c(al) : c("div", {}, [
        c(pe, {
          class: "a_table__preview_right__header__text",
          tag: "span",
          text: "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_",
          extra: {
            rowNumber: this.rowNumber,
            rowNumberFormatted: this.rowNumberFormatted,
            countAllRows: this.countAllRows,
            countAllRowsFormatted: this.countAllRowsFormatted
          }
        }),
        c("div", {
          class: "a_table__preview_right__header__icons"
        }, [
          c(rt, {
            class: "a_btn a_btn_transparent_dark a_btn_small",
            disabled: this.disabledBtnArrowLeft,
            iconLeft: hW,
            title: "_A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_",
            textScreenReader: "_A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_",
            onClick: this.toPreviousRow
          }),
          c(rt, {
            class: "a_btn a_btn_transparent_dark a_btn_small",
            disabled: this.disabledBtnArrowRight,
            iconLeft: AW,
            title: "_A_TABLE_PREVIEW_RIGHT_NEXT_ROW_",
            textScreenReader: "_A_TABLE_PREVIEW_RIGHT_NEXT_ROW_",
            onClick: this.toNextRow
          })
        ])
      ]),
      this.isMobile ? "" : c(rt, {
        class: "a_btn a_btn_transparent_dark a_table__preview_right__btn_close",
        iconLeft: oi,
        iconClass: "a_table__preview_right__btn_close__icon",
        title: "_A_TABLE_PREVIEW_RIGHT_CLOSE_",
        textScreenReader: "_A_TABLE_PREVIEW_RIGHT_CLOSE_",
        onClick: () => this.$emit("closePreview")
      })
    ], t = [
      this.isLoadingTable ? c(al) : this.$slots.preview ? this.$slots.preview({
        row: this.currentRow,
        rowIndex: this.rowIndex
      }) : c(pe, {
        text: "_A_TABLE_PREVIEW_RIGHT_HAS_NOT_SLOT_"
      })
    ];
    return this.isMobile ? c(Cu, {
      hideFooter: !0,
      close: () => this.$emit("closePreview"),
      size: "xxl"
    }, {
      modalHeader: () => e,
      modalBody: () => t
    }) : c("div", {
      ref: "previewRef",
      id: this.idLocal,
      class: "a_table__preview_right",
      style: this.previewStyles,
      tabindex: -1
    }, [
      c(SU, {
        class: "a_table__preview_right__resizer",
        direction: "x",
        disabled: this.isLoadingOptions,
        onMousedown: this.mousedown,
        onMousemove: this.mousemove,
        onMouseup: this.mouseup,
        onMouseoutDocument: this.mouseup
      }),
      c(pe, {
        class: "a_sr_only",
        text: "_A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_"
      }),
      c("div", {
        class: "a_table__preview_right__header"
      }, e),
      c("div", {
        class: "a_table__preview_right__body"
      }, t)
    ]);
  }
};
function pW() {
  const e = ue("tableId"), t = [
    "additionalProps"
  ], n = _(() => `${e.value}_`);
  return {
    excludeRenderAttributes: t,
    idPrefix: n
  };
}
function TW(e) {
  const t = f(e, "additionalSortingColumns"), n = ue("columnsOrdered", []), r = _(() => [
    ...Dt(n.value, (o) => o.sortId),
    ...t.value
  ]), a = _(() => La(r.value, "sortId")), l = _(() => r.value.length);
  return {
    columnsAll: r,
    columnsAllKeyBySortId: a,
    countColumnsAll: l
  };
}
function SW(e, {
  columnsAll: t = _(() => [])
}) {
  const n = B(void 0), r = B(!1), a = _(() => t.value.length > 0);
  return {
    closeDropdown: () => {
      var o;
      (o = n.value) == null || o.onClose({ trigger: "click" });
    },
    dropdownRef: n,
    isDropdownVisible: a,
    wasOpenDropdown: r
  };
}
function mW(e, {
  columnsAll: t = _(() => []),
  columnsAllKeyBySortId: n = _(() => ({})),
  unappliedModelSort: r = B([])
}) {
  const a = B([]), l = [
    {
      label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_",
      id: "asc"
    },
    {
      label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_",
      id: "desc"
    }
  ], o = _(() => Dt(t.value, (h) => !lc(r.value, ["sortId", h.sortId])));
  return {
    dataForForm: a,
    initDataForForm: () => {
      const h = [];
      Y(r.value, ({ sortId: A }, E) => {
        const p = E === 0, T = Se(o.value);
        A && n.value[A] && T.unshift(n.value[A]), h.push({
          type: "fieldset",
          id: `group_${A}`,
          label: p ? "_A_TABLE_SORT_ADDITIONAL_SORT_BY_" : "_A_TABLE_SORT_ADDITIONAL_THEN_BY_",
          children: [
            {
              id: `[${E}].sortId`,
              type: "select",
              classColumn: "a_column a_column_12_touch a_column_7_fullhd a_column_7_widescreen a_column_7_desktop",
              deselectable: !1,
              data: T,
              keyId: "sortId",
              keyLabel: "label",
              translateData: !0,
              search: !0,
              label: "_A_TABLE_SORT_ADDITIONAL_COLUMN_"
            },
            {
              id: `[${E}].sortMode`,
              type: "select",
              classColumn: "a_column a_column_12_touch a_column_5_fullhd a_column_5_widescreen a_column_5_desktop a_d_flex a_align_items_center",
              class: "a_width_100",
              deselectable: !1,
              data: l,
              keyId: "id",
              keyLabel: "label",
              translateData: !0,
              search: !1,
              label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_",
              slotAppend: "slotAppend",
              additionalProps: {
                index: E
              }
            }
          ]
        });
      }), a.value = h;
    }
  };
}
function bW(e, {
  closeDropdown: t = () => {
  },
  countColumnsAll: n = _(() => 0),
  initDataForForm: r = () => {
  },
  unappliedModelSort: a = B([]),
  wasOpenDropdown: l = B(!1)
}) {
  const o = f(e, "isSortingMultiColumn"), u = f(e, "modelSort"), h = ue("changeModelSort"), A = ue("tableId"), E = ({ model: C } = {}) => {
    if (l.value && !C)
      return;
    l.value = !0;
    const w = C || Se(u.value);
    w.length < n.value && w.push(void 0), o.value || w.length > 1 && (w.length = 1);
    const F = [];
    Y(w, (P) => {
      const q = P && P.replace(/^-/, ""), N = cc(P, "-") ? "desc" : "asc";
      F.push({
        sortId: q,
        sortMode: N
      });
    }), a.value = F, r({ unappliedModelSort: F });
  }, p = ({ model: C }) => !o.value || C.length >= n.value ? !1 : !!as(C).sortId, T = ({ model: C }) => {
    p({ model: C }) && C.push({
      sortId: void 0,
      sortMode: "asc"
    }), a.value = C, r({ unappliedModelSort: a.value });
  }, m = ({ item: C }) => {
    var q, N;
    const w = C.additionalProps.index;
    w === a.value.length - 1 ? a.value[w].sortId = void 0 : a.value.splice(w, 1);
    const P = a.value.length - 1;
    (N = (q = a.value) == null ? void 0 : q[P]) != null && N.sortId && a.value.push({
      sortId: void 0,
      sortMode: "asc"
    }), r({ unappliedModelSort: a.value });
  }, b = () => {
    const C = [];
    Y(a.value, (w) => {
      w.sortId && C.push(`${w.sortMode === "asc" ? "" : "-"}${w.sortId}`);
    }), h({
      modelAll: C
    }), t();
  }, L = ({ modelSort: C = [], tableId: w }) => {
    w === A.value && E({ model: C });
  }, v = () => {
    Rt.$on("changeTableSorting", L);
  }, I = () => {
    Rt.$off("changeTableSorting", L);
  }, R = _(() => {
    var C;
    return ((C = u.value) == null ? void 0 : C.length) || 0;
  }), y = _(() => {
    if (R.value)
      return R.value;
  });
  return {
    changeModelSortInTable: b,
    countModelSort: R,
    destroyEventBus: I,
    initEventBus: v,
    initUnappliedModelSort: E,
    removeUnappliedModelSort: m,
    textCountModelSort: y,
    updateUnappliedModelSort: T
  };
}
const XE = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down-up" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M11.5 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L11 2.707V14.5a.5.5 0 0 0 .5.5m-7-14a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L4 13.293V1.5a.5.5 0 0 1 .5-.5"/>
</svg>`, LW = {
  name: "ATableSortingAdditional",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelSort: {
      type: Array,
      required: !1
    }
  },
  setup(e) {
    const t = B([]), {
      columnsAll: n,
      columnsAllKeyBySortId: r,
      countColumnsAll: a
    } = TW(e), {
      dataForForm: l,
      initDataForForm: o
    } = mW(e, {
      columnsAll: n,
      columnsAllKeyBySortId: r,
      unappliedModelSort: t
    }), {
      closeDropdown: u,
      dropdownRef: h,
      isDropdownVisible: A,
      wasOpenDropdown: E
    } = SW(e, {
      columnsAll: n
    }), {
      changeModelSortInTable: p,
      countModelSort: T,
      destroyEventBus: m,
      initEventBus: b,
      initUnappliedModelSort: L,
      removeUnappliedModelSort: v,
      textCountModelSort: I,
      updateUnappliedModelSort: R
    } = bW(e, {
      closeDropdown: u,
      countColumnsAll: a,
      initDataForForm: o,
      unappliedModelSort: t,
      wasOpenDropdown: E
    }), {
      excludeRenderAttributes: y,
      idPrefix: C
    } = pW();
    return b(), Ot(() => {
      m();
    }), {
      changeModelSortInTable: p,
      closeDropdown: u,
      countModelSort: T,
      dataForForm: l,
      dropdownRef: h,
      excludeRenderAttributes: y,
      idPrefix: C,
      initUnappliedModelSort: L,
      isDropdownVisible: A,
      removeUnappliedModelSort: v,
      textCountModelSort: I,
      unappliedModelSort: t,
      updateUnappliedModelSort: R,
      wasOpenDropdown: E
    };
  },
  render() {
    return this.isDropdownVisible ? c(ei, {
      ref: "dropdownRef",
      buttonClass: "a_btn a_btn_secondary a_table__action",
      buttonIconLeft: XE,
      buttonText: this.textCountModelSort,
      buttonTextAriaHidden: !0,
      buttonTitle: "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_",
      buttonTextScreenReader: "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_",
      buttonTextClass: "a_badge a_bg_primary",
      disabled: this.disabledSort,
      dropdownClass: "a_filter_horizontal__wrapper",
      dropdownRenderDefault: !1,
      dropdownTag: "div",
      hasCaret: !1,
      inBody: !0,
      extra: {
        count: this.countModelSort
      },
      isCloseByClickInside: !1,
      lockArrowsNavigation: !1,
      lockTabNavigation: !1,
      onOpen: this.initUnappliedModelSort
    }, {
      dropdown: () => c("div", {
        class: "a_filter_horizontal"
      }, [
        c("div", {
          class: "a_filter_horizontal__header__wrapper"
        }, [
          c("div", {
            class: "a_filter_horizontal__header"
          }, [
            c("div", {
              class: "a_filter_horizontal__header__texts"
            }, [
              c(pe, {
                class: "a_filter_horizontal__header__texts__filter",
                tag: "span",
                text: "_A_TABLE_SORT_ADDITIONAL_HEADER_"
              })
            ])
          ])
        ]),
        c("div", {
          class: "a_filter_horizontal__body__wrapper"
        }, [
          c("div", {
            class: "a_filter_horizontal__body"
          }, [
            c(Ou, {
              idPrefix: this.idPrefix,
              class: "a_filter_horizontal__body__form",
              classColumnDefault: "",
              classColumns: "",
              data: this.dataForForm,
              excludeRenderAttributes: this.excludeRenderAttributes,
              modelValue: this.unappliedModelSort,
              showErrors: !1,
              onChange: this.updateUnappliedModelSort
            }, {
              slotAppend: ({ item: e }) => {
                var t, n;
                return c(Oe, {
                  type: "button",
                  class: "a_btn a_btn_primary a_ml_2",
                  title: "_A_TABLE_SORT_ADDITIONAL_BTN_DELETE_",
                  textScreenReader: "_A_TABLE_SORT_ADDITIONAL_BTN_DELETE_",
                  disabled: !((n = (t = this.unappliedModelSort) == null ? void 0 : t[e.additionalProps.index]) != null && n.sortId),
                  iconLeft: oi,
                  onClick: () => this.removeUnappliedModelSort({ item: e })
                });
              }
            })
          ]),
          c("div", {
            class: "a_filter_horizontal__footer"
          }, [
            c("div", {
              class: "a_filter_horizontal__footer__actions"
            }, [
              c(Oe, {
                type: "button",
                class: "a_btn a_btn_primary a_text_nowrap a_filter_horizontal__footer__actions__btn_search",
                iconLeft: XE,
                text: "_A_TABLE_SORT_ADDITIONAL_START_",
                disabled: this.disabledSort,
                onClick: this.changeModelSortInTable
              }),
              c(Oe, {
                type: "button",
                class: "a_btn a_btn_secondary a_text_nowrap a_filter_horizontal__footer__actions__btn_close",
                text: "_A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_",
                onClick: this.closeDropdown
              })
            ])
          ])
        ])
      ])
    }) : null;
  }
};
function vW(e, { emit: t }) {
  const n = f(e, "areAllRowsSelected"), r = f(e, "closeMultipleActionsActive"), a = f(e, "multipleActions"), l = f(e, "selectedRows"), o = f(e, "tableActions"), u = ue("tableId"), h = ue("currentMultipleActions"), A = ue("rowsLocalAll"), {
    closeConfirm: E,
    openConfirm: p
  } = Xc(), T = _(() => `${u.value}_btn_multiple`), m = _(() => {
    const y = [];
    return Y(Se(o.value), (C) => {
      if (!C.isHidden) {
        if (qe(C.callback)) {
          const w = C.callback;
          C.callback = () => w({
            id: C.id,
            action: C
          });
        }
        y.push(C);
      }
    }), y;
  }), b = ({ action: y, callbackDefault: C }) => {
    const w = Se(y);
    w.callback = C, t("toggleMultipleActionsActive", { isActive: !0, action: w });
  }, L = () => {
    t("toggleMultipleActionsActive", { action: h.value });
  }, v = _(() => {
    const y = Se(a.value);
    return Y(y, (C) => {
      if (qe(C.callback)) {
        const w = C.callback;
        C.callback = () => b({ action: C, callbackDefault: w });
      }
    }), y;
  }), I = async () => {
    await h.value.callback({
      close: r.value,
      rows: l.value,
      rowsVisible: A.value,
      id: T.value,
      areAllRowsSelected: n.value,
      action: h.value
    }), E(), L();
  };
  return {
    buttonMultipleId: T,
    currentMultipleActions: h,
    multipleActionsFiltered: v,
    onCancelMultipleActions: L,
    onOpenModalMultipleActions: () => {
      h.value.isConfirm ? p({
        headerText: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_",
        bodyHtml: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_",
        saveButtonText: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_",
        extra: {
          action: xt({
            placeholder: h.value.text
          }),
          selectedRows: l.value.length
        },
        save: I
      }) : h.value.callback({
        close: r.value,
        rows: l.value,
        rowsVisible: A.value,
        id: T.value,
        areAllRowsSelected: n.value,
        action: h.value
      });
    },
    tableActionsFiltered: m
  };
}
function IW(e) {
  const t = f(e, "countAllRows"), {
    filterFloat: n
  } = sr();
  return {
    countAllRowsFormatted: _(() => `(${n(t.value, { digits: 0 })})`)
  };
}
function gW() {
  const e = ue("tableId");
  return {
    tableLabelId: _(() => ZS({ tableId: e.value }))
  };
}
function yW(e, { emit: t }) {
  const n = f(e, "areAllRowsSelected"), r = f(e, "areSomeRowsSelected"), a = f(e, "countAllRows"), l = f(e, "isLoadingMultipleActions"), o = f(e, "selectedRows"), u = ue("tableId"), {
    filterFloat: h
  } = sr(), A = _(() => YS({ tableId: u.value })), E = _(() => n.value ? a.value : o.value.length), p = _(() => ({
    countSelectedRows: E.value,
    countSelectedRowsFiltered: h(E.value, { digits: 0 }),
    countAllRows: a.value,
    countAllRowsFiltered: h(a.value, { digits: 0 })
  })), T = _(() => n.value ? "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_" : "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_"), m = _(() => !!(l.value || a.value === 0)), b = () => {
    m.value || t("toggleBtnAllRows");
  };
  return {
    isBtnMultipleActionDisabled: _(() => !r.value && !n.value),
    isBtnSelectAllRowsDisabled: m,
    multiplePanelId: A,
    textMultipleBtnAllRowsTranslate: T,
    textMultipleSelectedTranslateExtra: p,
    toggleBtnAllRows: b
  };
}
function RW(e, { emit: t }) {
  const n = f(e, "useViewSlot"), r = (l) => {
    t("updateViewCurrent", l);
  }, a = _(() => n.value ? "viewSlot" : void 0);
  return {
    updateViewCurrentLocal: r,
    viewSlotLocal: a
  };
}
const OW = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-ui-checks" viewBox="0 0 16 16">
  <path d="M7 2.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5zM2 1a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2zm0 8a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2zm.854-3.646a.5.5 0 0 1-.708 0l-1-1a.5.5 0 1 1 .708-.708l.646.647 1.646-1.647a.5.5 0 1 1 .708.708zm0 8a.5.5 0 0 1-.708 0l-1-1a.5.5 0 0 1 .708-.708l.646.647 1.646-1.647a.5.5 0 0 1 .708.708zM7 10.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5zm0-5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m0 8a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5"/>
</svg>`, CW = {
  name: "ATableTopPanel",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    closeMultipleActionsActive: {
      type: Function,
      required: !0
    },
    countAllRows: {
      type: Number,
      required: !0
    },
    disabledActions: {
      type: Boolean,
      required: !0
    },
    disabledMultipleActions: {
      type: Boolean,
      required: !0
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    disabledViews: {
      type: Boolean,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasViews: {
      type: Boolean,
      required: !0
    },
    isLabelVisible: {
      type: Boolean,
      required: !1
    },
    isLoadingMultipleActions: {
      type: Boolean,
      required: !1
    },
    isQuickSearch: {
      type: Boolean,
      required: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !0
    },
    modelQuickSearch: {
      type: String,
      required: !0
    },
    modelSort: {
      type: Array,
      required: !1
    },
    modelView: {
      type: String,
      required: !1,
      default: void 0
    },
    multipleActions: {
      type: Array,
      required: !0
    },
    selectedRows: {
      type: Array,
      required: !0
    },
    showCount: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tableActions: {
      type: Array,
      required: !0
    },
    tableActionsIndexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: -1
    },
    tableActionsIndexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: 0
    },
    useAdditionalSorting: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useViewSlot: {
      type: Boolean,
      required: !1
    },
    viewCurrent: {
      type: Object,
      required: !1,
      default: void 0
    },
    views: {
      type: Array,
      required: !0
    }
  },
  emits: [
    "toggleBtnAllRows",
    "toggleMultipleActionsActive",
    "updateModelQuickSearch",
    "updateViewCurrent"
  ],
  inject: [
    "isMultipleActionsActive",
    "rowsLocalAll",
    "tableId"
  ],
  setup(e, t) {
    const {
      tableLabelId: n
    } = gW(), {
      filterCurrency: r
    } = sr(), {
      buttonMultipleId: a,
      currentMultipleActions: l,
      multipleActionsFiltered: o,
      onCancelMultipleActions: u,
      onOpenModalMultipleActions: h,
      tableActionsFiltered: A
    } = vW(e, t), {
      isBtnMultipleActionDisabled: E,
      isBtnSelectAllRowsDisabled: p,
      multiplePanelId: T,
      textMultipleBtnAllRowsTranslate: m,
      textMultipleSelectedTranslateExtra: b,
      toggleBtnAllRows: L
    } = yW(e, t), {
      updateViewCurrentLocal: v,
      viewSlotLocal: I
    } = RW(e, t), {
      countAllRowsFormatted: R
    } = IW(e);
    return {
      buttonMultipleId: a,
      countAllRowsFormatted: R,
      currentMultipleActions: l,
      filterCurrency: r,
      isBtnMultipleActionDisabled: E,
      isBtnSelectAllRowsDisabled: p,
      multipleActionsFiltered: o,
      multiplePanelId: T,
      onCancelMultipleActions: u,
      onOpenModalMultipleActions: h,
      tableActionsFiltered: A,
      tableLabelId: n,
      textMultipleBtnAllRowsTranslate: m,
      textMultipleSelectedTranslateExtra: b,
      toggleBtnAllRows: L,
      updateViewCurrentLocal: v,
      viewSlotLocal: I
    };
  },
  methods: {
    updateModelQuickSearch(e) {
      this.$emit("updateModelQuickSearch", e);
    }
  },
  render() {
    return [
      c("div", {
        class: "a_table__top_panel"
      }, [
        this.isLabelVisible ? this.$slots.tableLabel ? this.$slots.tableLabel({
          countAllRows: this.countAllRows,
          tableLabelId: this.tableLabelId
        }) : c(this.labelTag, {
          class: ["a_table__top_panel__label", this.labelClass]
        }, [
          c(pe, {
            id: this.tableLabelId,
            tag: "span",
            class: "a_table__top_panel__label__text",
            text: this.label,
            extra: this.extra
          }),
          this.showCount ? c(Oe, {
            class: "a_table__top_panel__label__count",
            extra: {
              count: this.countAllRows
            },
            tag: "span",
            text: this.countAllRowsFormatted,
            textAriaHidden: !0,
            textScreenReader: "_A_TABLE_ALL_ROWS_{{count}}_",
            title: "_A_TABLE_ALL_ROWS_{{count}}_",
            type: "text"
          }) : ""
        ]) : "",
        c("div", {
          class: "a_table__top_panel__actions"
        }, [
          this.$slots.tableActionsPrepend ? this.$slots.tableActionsPrepend({
            isMultipleActionsActive: this.isMultipleActionsActive,
            modelView: this.modelView
          }) : "",
          c(qd, {
            actions: this.tableActionsFiltered,
            actionsClasses: [],
            disabled: this.isMultipleActionsActive || this.disabledActions,
            indexFirstDropdownAction: this.tableActionsIndexFirstDropdownAction,
            indexFirstDropdownActionMobile: this.tableActionsIndexFirstDropdownActionMobile,
            minDropdownActions: 0,
            dropdownAttributes: {
              buttonClass: "a_btn a_btn_secondary a_table__action",
              buttonIconLeft: yl,
              buttonText: {
                desktop: "_A_TABLE_ACTIONS_"
              },
              hasCaret: !1,
              inBody: !0,
              placement: "bottom-end"
            }
          }),
          c(qd, {
            actions: this.multipleActionsFiltered,
            actionsClasses: [],
            disabled: this.isMultipleActionsActive || this.disabledMultipleActions,
            indexFirstDropdownAction: 0,
            indexFirstDropdownActionMobile: 0,
            minDropdownActions: 0,
            dropdownAttributes: {
              id: this.buttonMultipleId,
              buttonClass: "a_btn a_btn_secondary a_table__action",
              buttonText: {
                desktop: "_A_TABLE_MULTIPLE_ACTIONS_"
              },
              buttonIconLeft: OW,
              inBody: !0,
              placement: "bottom-end"
            }
          }),
          this.isQuickSearch ? c(Sn, {
            label: "_A_TABLE_QUICK_SEARCH_",
            class: "a_table__top_panel__actions__quick_search",
            modelUndefined: "",
            modelValue: this.modelQuickSearch,
            iconPrepend: PS,
            "onUpdate:modelValue": this.updateModelQuickSearch
          }) : "",
          this.hasViews ? c(LS, {
            modelValue: this.modelView,
            class: "a_d_inline_block",
            isButtonGroup: !0,
            disabled: this.disabledViews,
            slotName: this.viewSlotLocal,
            data: this.views,
            keyId: "id",
            keyLabel: "label",
            hasBorder: !1,
            classFieldset: "a_p_0",
            "onUpdate:modelValue": this.updateViewCurrentLocal
          }, {
            viewSlot: (e) => this.$slots.viewSlot && this.$slots.viewSlot({
              ...e
            })
          }) : "",
          this.useAdditionalSorting ? c(LW, {
            additionalSortingColumns: this.additionalSortingColumns,
            disabledSort: this.disabledSort,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSort
          }) : "",
          this.$slots.tableActionsAppend ? this.$slots.tableActionsAppend({
            isMultipleActionsActive: this.isMultipleActionsActive,
            modelView: this.modelView
          }) : ""
        ])
      ]),
      this.isMultipleActionsActive && c("div", {
        id: this.multiplePanelId,
        class: "a_table__multiple_panel"
      }, [
        c("div", {
          class: "a_table__multiple_panel__header"
        }, [
          c(pe, {
            class: "a_table__multiple_panel__header__text",
            tag: "strong",
            text: "_A_TABLE_MULTIPLE_ACTIONS_"
          }),
          c("div", {
            class: "a_table__multiple_panel__items"
          }, [
            c(pe, {
              class: "a_table__multiple_panel__items__selected",
              tag: "span",
              text: "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_",
              extra: this.textMultipleSelectedTranslateExtra
            }),
            this.currentMultipleActions.isAllRowsSelected && c(rt, {
              class: "a_btn a_btn_secondary a_table__multiple_panel__btn_all_rows",
              type: "button",
              text: this.textMultipleBtnAllRowsTranslate,
              extra: this.textMultipleSelectedTranslateExtra,
              disabled: this.isBtnSelectAllRowsDisabled || this.disabledMultipleActions,
              loading: this.isLoadingMultipleActions,
              onClick: this.toggleBtnAllRows
            })
          ])
        ]),
        c("div", {
          class: "a_table__multiple_panel__actions"
        }, [
          this.currentMultipleActions.slot && this.$slots.multipleActionActiveSlot ? this.$slots.multipleActionActiveSlot({
            disabled: this.isBtnMultipleActionDisabled || this.isLoadingMultipleActions || this.disabledMultipleActions,
            loading: this.isLoadingMultipleActions,
            text: this.currentMultipleActions.text,
            action: this.currentMultipleActions,
            onClick: this.onOpenModalMultipleActions,
            close: this.closeMultipleActionsActive,
            rows: this.selectedRows,
            rowsVisible: this.rowsLocalAll,
            id: this.buttonMultipleId,
            areAllRowsSelected: this.areAllRowsSelected
          }) : c(rt, {
            class: "a_btn a_btn_primary a_table__action",
            type: "button",
            disabled: this.isBtnMultipleActionDisabled || this.isLoadingMultipleActions || this.disabledMultipleActions,
            text: this.currentMultipleActions.text,
            loading: this.isLoadingMultipleActions,
            loadingAlign: "left",
            onClick: this.onOpenModalMultipleActions
          }),
          c(rt, {
            class: "a_btn a_btn_secondary a_table__action",
            type: "button",
            text: "_A_TABLE_MULTIPLE_CANCEL_",
            onClick: this.onCancelMultipleActions
          })
        ])
      ])
    ];
  }
};
function NW() {
  const e = B(void 0);
  return {
    componentRef: e,
    setFocusToComponent: () => {
      var n;
      (n = e.value) == null || n.focus({ preventScroll: !0 });
    }
  };
}
const DW = {
  name: "ATablePreviewDown",
  props: {
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    }
  },
  inject: [
    "onTogglePreview"
  ],
  setup() {
    const {
      componentRef: e,
      setFocusToComponent: t
    } = NW();
    return kr(() => {
      t();
    }), {
      componentRef: e
    };
  },
  render() {
    return c("div", {
      ref: "componentRef",
      class: "a_table__preview_down",
      tabindex: -1
    }, [
      c(pe, {
        class: "a_sr_only",
        text: "_A_TABLE_PREVIEW_DOWN_ARIA_LABEL_"
      }),
      this.$slots.preview && this.$slots.preview({
        row: this.row,
        rowIndex: this.rowIndex
      }),
      c(rt, {
        class: "a_btn a_btn_transparent_dark a_table__preview_down__btn_close",
        iconLeft: oi,
        iconClass: "a_table__preview_down__btn_close__icon",
        title: "_A_TABLE_PREVIEW_DOWN_CLOSE_",
        textScreenReader: "_A_TABLE_PREVIEW_DOWN_CLOSE_",
        onClick: () => this.onTogglePreview({
          row: this.row,
          rowIndex: this.rowIndex
        })
      })
    ]);
  }
};
function BW(e) {
  const t = f(e, "column"), n = f(e, "disabledPreview"), r = f(e, "isFooter"), a = ue("hasPreview"), l = ue("isMobile"), {
    columnsStyles: o
  } = US(e);
  return {
    attributesForTd: _(() => {
      const h = {
        class: [
          "a_table__td a_table__cell",
          {
            a_table__cell_click: a.value && !r.value && !n.value
          },
          t.value.classRowParent
        ],
        style: o.value
      };
      return l.value || (h.role = "cell"), h;
    })
  };
}
function em(e) {
  const t = f(e, "column"), n = f(e, "row"), r = _(() => !!t.value.to), a = _(() => {
    if (lt(t.value.to))
      return t.value.to;
    if (nt(t.value.to)) {
      const o = Se(t.value.to), u = o.params || {}, h = o.query || {};
      if (t.value.to.nameDynamic && !t.value.to.name) {
        const A = de(n.value, t.value.to.nameDynamic);
        A && (o.name = A);
      }
      if (t.value.to.paramsDynamic) {
        let A = !1;
        if (Y(t.value.to.paramsDynamic, (E, p) => {
          const T = de(n.value, E);
          if (Pe(T))
            return A = !0, !1;
          u[p] = T;
        }), A)
          return;
      }
      if (t.value.to.queryDynamic) {
        let A = !1;
        if (Y(t.value.to.queryDynamic, (E, p) => {
          const T = de(n.value, E);
          if (Pe(T))
            return A = !0, !1;
          h[p] = T;
        }), A)
          return;
      }
      return o.params = u, o.query = h, o;
    }
  });
  return {
    classForLink: _(() => "a_btn a_btn_link a_p_0 a_text_left"),
    isLink: r,
    toLocal: a
  };
}
function tm(e) {
  const t = f(e, "column"), n = f(e, "isFooter"), r = _(() => n.value ? t.value.footerSlot : t.value.slot);
  return {
    hasSlot: _(() => !!r.value),
    slotName: r
  };
}
function nm(e) {
  const t = f(e, "column"), n = f(e, "isFooter"), r = f(e, "row"), a = ue("columnsDefaultValue"), l = ue("valuesForColumnDefault"), o = _(() => n.value && "footerDefaultValue" in t.value ? t.value.footerDefaultValue : "defaultValue" in t.value ? t.value.defaultValue : Pe(a.value) ? "" : a.value), u = _(() => n.value ? t.value.footerKeyLabel : t.value.keyLabel), h = _(() => n.value ? t.value.footerKeyLabelSafeHtml : t.value.keyLabelSafeHtml), A = _(() => n.value ? t.value.footerKeyLabelHtml : t.value.keyLabelHtml), E = _(() => {
    if (u.value)
      return de(r.value, u.value);
  }), p = _(() => {
    if (h.value)
      return de(r.value, h.value);
  }), T = _(() => {
    if (A.value)
      return de(r.value, A.value);
  }), m = (R) => {
    let y = !1;
    return Y(l.value, (C) => {
      if (R === C)
        return y = !0, !1;
    }), y ? o.value : R;
  }, b = _(() => m(E.value)), L = _(() => m(p.value)), v = _(() => m(T.value));
  return {
    textOrHtmlRender: _(() => {
      if (u.value)
        return c("span", null, b.value);
      if (h.value)
        return c("div", {
          innerHTML: L.value
        });
      if (A.value)
        return Ft(c("div"), [
          [cn, v.value]
        ]);
    })
  };
}
const rm = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-right-fill" viewBox="0 0 16 16">
  <path d="m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z"/>
</svg>`, JE = {
  name: "ATableTd",
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    level: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    showIconChildren: {
      type: Boolean,
      required: !1
    }
  },
  inject: [
    "isMobile",
    "rowsLocalAll"
  ],
  setup(e) {
    const {
      attributesForTd: t
    } = BW(e), {
      classForLink: n,
      isLink: r,
      toLocal: a
    } = em(e), {
      hasSlot: l,
      slotName: o
    } = tm(e), {
      textOrHtmlRender: u
    } = nm(e);
    return {
      attributesForTd: t,
      classForLink: n,
      hasSlot: l,
      isLink: r,
      slotName: o,
      textOrHtmlRender: u,
      toLocal: a
    };
  },
  render() {
    const e = c(
      "div",
      this.attributesForTd,
      [
        c("div", {
          class: [
            "a_table__cell__child",
            this.column.class,
            this.column.classRow
          ]
        }, [
          this.showIconChildren ? c(Oe, {
            "aria-hidden": !0,
            class: "a_table__row_level__icon",
            classDefault: "",
            iconLeft: rm,
            type: "text"
          }) : "",
          this.hasSlot && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            column: this.column,
            columnIndex: this.columnIndex,
            level: this.level,
            row: this.row,
            rowIndex: this.rowIndex,
            rows: this.rowsLocalAll
          }) : this.isLink && this.toLocal ? c(Fr("RouterLink"), {
            class: [
              this.column.class,
              this.classForLink,
              this.column.classRow
            ],
            to: this.toLocal
          }, () => [
            this.textOrHtmlRender
          ]) : this.textOrHtmlRender
        ])
      ]
    );
    return this.isMobile ? [
      c(pe, {
        text: this.column.label,
        tag: "dt"
      }),
      c("dd", {}, [
        e
      ])
    ] : e;
  }
}, QE = {
  name: "ATableListItem",
  inject: [
    "rowsLocalAll"
  ],
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    isFooter: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      classForLink: t,
      isLink: n,
      toLocal: r
    } = em(e), {
      hasSlot: a,
      slotName: l
    } = tm(e), {
      textOrHtmlRender: o
    } = nm(e);
    return {
      classForLink: t,
      hasSlot: a,
      isLink: n,
      slotName: l,
      textOrHtmlRender: o,
      toLocal: r
    };
  },
  render() {
    return [
      c(pe, {
        text: this.column.label,
        tag: "dt"
      }),
      c(
        "dd",
        null,
        this.hasSlot && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          column: this.column,
          columnIndex: this.columnIndex,
          row: this.row,
          rowIndex: this.rowIndex,
          rows: this.rowsLocalAll
        }) : this.isLink && this.toLocal ? [
          c(Fr("RouterLink"), {
            class: [
              this.column.class,
              this.classForLink,
              this.column.classRow
            ],
            to: this.toLocal
          }, () => [
            this.textOrHtmlRender
          ])
        ] : [
          this.textOrHtmlRender
        ]
      )
    ];
  }
};
function wW() {
  const e = ue("columnsScrollInvisible"), t = ue("modelIsTableWithoutScroll"), n = _(() => e.value.length), r = _(() => t.value ? n.value > 0 : !1);
  return {
    columnsScrollInvisibleText: _(() => n.value === 1 ? "_A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_" : "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_"),
    countColumnsScrollInvisible: n,
    isColumnsScrollInvisibleDropdownVisible: r
  };
}
function PW(e) {
  const t = f(e, "columnActionsView"), n = f(e, "isFooter"), r = f(e, "row"), a = f(e, "rowIndex"), l = ue("columnActionsOnePlusDropdownOptions"), o = ue("rowActions"), u = ue("tableId"), h = _(() => `${u.value}_action_${a.value}`), A = _(() => Pe(l.value.indexFirstDropdownAction) ? 1 : l.value.indexFirstDropdownAction), E = ({ rowAction: N }) => {
    if (N.text)
      return N.text;
    if (qe(N.textCallback))
      return N.textCallback({
        row: r.value,
        rowIndex: a.value,
        rowAction: N
      });
  }, p = ({ rowAction: N }) => {
    if (N.html)
      return N.html;
    if (qe(N.htmlCallback))
      return N.htmlCallback({
        row: r.value,
        rowIndex: a.value,
        rowAction: N
      });
  }, T = ({ rowAction: N }) => {
    if (N.title)
      return N.title;
    if (qe(N.titleCallback))
      return N.titleCallback({
        row: r.value,
        rowIndex: a.value,
        rowAction: N
      });
  }, m = ({ rowAction: N }) => N.disabled ? N.disabled : qe(N.disabledCallback) ? N.disabledCallback({
    row: r.value,
    rowIndex: a.value,
    rowAction: N
  }) : !1, b = ({ rowAction: N }) => N.class ? N.class : qe(N.classCallback) ? N.classCallback({
    row: r.value,
    rowIndex: a.value,
    rowAction: N
  }) : "", L = ({ rowAction: N }) => {
    if (N.iconLeft)
      return N.iconLeft;
    if (qe(N.iconLeftCallback))
      return N.iconLeftCallback({
        row: r.value,
        rowIndex: a.value,
        rowAction: N
      });
  }, v = ({ rowAction: N }) => {
    if (N.iconRight)
      return N.iconRight;
    if (qe(N.iconRightCallback))
      return N.iconRightCallback({
        row: r.value,
        rowIndex: a.value,
        rowAction: N
      });
  }, I = ({ rowAction: N }) => {
    if (lt(N.to))
      return N.to;
    if (nt(N.to)) {
      const U = Se(N.to), V = U.params || {}, j = U.query || {};
      if (N.to.nameDynamic && !N.to.name) {
        const ne = de(r.value, N.to.nameDynamic);
        ne && (U.name = ne);
      }
      if (N.to.paramsDynamic) {
        let ne = !1;
        if (Y(N.to.paramsDynamic, (Z, le) => {
          const oe = de(r.value, Z);
          if (Pe(oe))
            return ne = !0, !1;
          V[le] = oe;
        }), ne)
          return;
      }
      if (N.to.queryDynamic) {
        let ne = !1;
        if (Y(N.to.queryDynamic, (Z, le) => {
          const oe = de(r.value, Z);
          if (Pe(oe))
            return ne = !0, !1;
          j[le] = oe;
        }), ne)
          return;
      }
      return U.params = V, U.query = j, U;
    }
  }, R = ({ rowAction: N }) => N.href ? N.href : qe(N.hrefCallback) ? N.hrefCallback({
    row: r.value,
    rowIndex: a.value,
    rowAction: N
  }) : !1, y = ({ rowAction: N }) => {
    if (N.extra)
      return N.extra;
    if (qe(N.extraCallback))
      return N.extraCallback({
        row: r.value,
        rowIndex: a.value,
        rowAction: N
      });
  }, C = ({ rowAction: N }) => {
    if (N.textScreenReader)
      return N.textScreenReader;
    if (qe(N.textScreenReaderCallback))
      return N.textScreenReaderCallback({
        row: r.value,
        rowIndex: a.value,
        rowAction: N
      });
  }, w = ({ rowActionIndexVisible: N }) => {
    if (t.value === "dropdown")
      return {
        id: h.value,
        ids: [h.value, u.value]
      };
    if (N < A.value) {
      const U = `${h.value}_${N}`;
      return {
        buttonId: U,
        id: U,
        ids: [U, u.value]
      };
    }
    return {
      id: h.value,
      ids: [h.value, u.value]
    };
  }, F = (N) => {
    Y(N, (U, V) => {
      Ew(V, "Callback") && (N[V] = void 0);
    });
  }, P = _(() => {
    const N = [];
    let U = 0;
    return Y(Se(o.value), (V) => {
      if (XS({
        rowAction: V,
        row: r.value,
        rowIndex: a.value
      })) {
        if (V.type !== "divider") {
          const j = E({ rowAction: V });
          j && (V.text = j);
          const ne = p({ rowAction: V });
          ne && (V.html = ne);
          const Z = T({ rowAction: V });
          Z ? V.title = Z : j && (V.title = j);
          const le = m({ rowAction: V });
          le && (V.disabled = le);
          const oe = b({ rowAction: V });
          oe && (V.class = oe);
          const fe = L({ rowAction: V });
          fe && (V.iconLeft = fe);
          const he = v({ rowAction: V });
          he && (V.iconRight = he);
          const we = y({ rowAction: V });
          we && (V.extra = we);
          const Ie = C({ rowAction: V });
          if (we && (V.textScreenReader = Ie), V.type === "link") {
            const se = I({ rowAction: V });
            se ? V.to = se : V.href = R({ rowAction: V });
          }
          if (qe(V.callback)) {
            const {
              buttonId: se,
              id: me,
              ids: Le
            } = w({
              rowActionIndexVisible: U
            });
            V.id = se;
            const ce = V.callback;
            V.callback = () => ce({
              row: r.value,
              rowIndex: a.value,
              id: me,
              ids: Le,
              rowAction: V
            });
          }
          F(V);
        }
        U++, N.push(V);
      }
    }), N;
  }), q = _(() => !n.value && P.value.length > 0);
  return {
    buttonActionsId: h,
    isRowActionsDropdownVisible: q,
    rowActionsFiltered: P
  };
}
function xW(e) {
  const t = f(e, "rowIndex");
  return {
    rowNumber: _(() => t.value + 1)
  };
}
const FW = {
  name: "ATableTdAction",
  components: {
    AIcon: st,
    ATableListItem: QE
  },
  props: {
    columnActionsBtnGroupMaxWidthStyle: {
      type: String,
      required: !1,
      default: void 0
    },
    columnActionsView: {
      type: String,
      required: !0
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    }
  },
  inject: [
    "columnActionsOnePlusDropdownOptions",
    "columnsScrollInvisible",
    "tableId"
  ],
  setup(e) {
    const {
      isMobileWidth: t
    } = fn(), {
      buttonActionsId: n,
      isRowActionsDropdownVisible: r,
      rowActionsFiltered: a
    } = PW(e), {
      columnsScrollInvisibleText: l,
      countColumnsScrollInvisible: o,
      isColumnsScrollInvisibleDropdownVisible: u
    } = wW(), {
      rowNumber: h
    } = xW(e), {
      stylesThTd: A
    } = GS();
    return {
      buttonActionsId: n,
      columnsScrollInvisibleText: l,
      countColumnsScrollInvisible: o,
      isColumnsScrollInvisibleDropdownVisible: u,
      isMobileWidth: t,
      isRowActionsDropdownVisible: r,
      rowActionsFiltered: a,
      rowNumber: h,
      stylesThTd: A
    };
  },
  render() {
    return c("div", {
      role: "cell",
      class: [
        "a_table__td a_table__cell a_table__cell_action",
        {
          a_table__cell_action_sticky: this.isRowActionsStickyLocal
        }
      ],
      ...this.stylesThTd
    }, [
      c("div", {
        class: [
          "a_table__cell__child",
          this.rowActionsClass
        ]
      }, [
        this.isColumnsScrollInvisibleDropdownVisible && c(ei, {
          buttonClass: "a_btn a_btn_link a_text_nowrap",
          buttonIconLeft: wS,
          buttonIconClass: "a_table__cell_action__additional_icon",
          buttonTitle: "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_",
          buttonTextScreenReader: "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_",
          buttonText: this.columnsScrollInvisibleText,
          buttonTextClass: "a_table__cell_action__additional_text",
          buttonTextAriaHidden: !0,
          extra: {
            count: this.countColumnsScrollInvisible
          },
          dropdownClass: "a_p_0 a_overflow_x_hidden a_table__extra_dropdown",
          dropdownTag: "div",
          hasCaret: !1,
          floatingFlip: {
            use: !0,
            fallbackPlacements: ["top-end", "left"]
          },
          inBody: !0,
          placement: "bottom-end",
          menuWidth: 600,
          isCloseByClickInside: !1
        }, {
          dropdown: () => [
            c("dl", {
              class: "a_list_dl a_list_dl_dt_right"
            }, [
              this.columnsScrollInvisible.map((e, t) => c(QE, {
                column: e,
                columnIndex: t,
                row: this.row,
                rowIndex: this.rowIndex,
                isFooter: this.isFooter
              }, this.$slots))
            ])
          ]
        }),
        this.isRowActionsDropdownVisible || this.$slots.rowActions ? c("div", {
          class: "a_table__cell_action__group"
        }, [
          this.$slots.rowActions ? this.$slots.rowActions({
            tableId: this.tableId,
            row: this.row,
            rowIndex: this.rowIndex,
            isFooter: this.isFooter
          }) : "",
          this.isRowActionsDropdownVisible ? this.columnActionsView === "dropdown" || this.isMobileWidth && this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile === 0 ? c(ei, {
            id: this.buttonActionsId,
            actions: this.rowActionsFiltered,
            buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
            buttonIconLeft: yl,
            buttonTextScreenReader: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
            buttonTitle: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
            disabled: this.disabledRowActions,
            extra: {
              rowNumber: this.rowNumber
            },
            hasCaret: !1,
            inBody: !0,
            placement: "bottom-end"
          }, this.$slots) : c(qd, {
            class: "a_d_inline_block",
            style: this.columnActionsBtnGroupMaxWidthStyle,
            actions: this.rowActionsFiltered,
            dropdownAttributes: {
              id: this.buttonActionsId,
              buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
              buttonIconLeft: cs,
              buttonTextScreenReader: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
              buttonTitle: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
              extra: {
                rowNumber: this.rowNumber
              },
              hasCaret: !1,
              inBody: !0,
              placement: "bottom-end"
            },
            disabled: this.disabledRowActions,
            btnGroupClass: Pe(this.columnActionsOnePlusDropdownOptions.btnGroupClass) ? "a_btn_group a_btn_group_table" : this.columnActionsOnePlusDropdownOptions.btnGroupClass,
            hasDividerBeforeDropdown: this.columnActionsOnePlusDropdownOptions.hasDividerBeforeDropdown || !1,
            indexFirstDropdownAction: Pe(this.columnActionsOnePlusDropdownOptions.indexFirstDropdownAction) ? 1 : this.columnActionsOnePlusDropdownOptions.indexFirstDropdownAction,
            indexFirstDropdownActionMobile: Pe(this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile) ? 1 : this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile,
            minDropdownActions: Pe(this.columnActionsOnePlusDropdownOptions.minDropdownActions) ? 1 : this.columnActionsOnePlusDropdownOptions.minDropdownActions,
            actionsClasses: this.columnActionsOnePlusDropdownOptions.actionsClasses || ["a_btn a_btn_primary a_text_truncate"]
          }, this.$slots) : ""
        ]) : ""
      ])
    ]);
  }
};
function MW(e, {
  hasChildren: t = _(() => !1),
  hasPreviewLocal: n = _(() => !1),
  rowClassChildren: r = _(() => {
  }),
  rowClassLevelChildren: a = _(() => {
  }),
  rowClassPreview: l = _(() => {
  }),
  toggleChildren: o = () => {
  }
}) {
  const u = f(e, "disabledPreview"), h = f(e, "disabledPreviewRowCallback"), A = f(e, "isFooter"), E = f(e, "isTreeCollapsible"), p = f(e, "level"), T = f(e, "row"), m = f(e, "rowClass"), b = f(e, "rowIndex"), L = ue("isMobile"), v = ue("onTogglePreview"), I = ue("tableId"), R = _(() => {
    const U = A.value ? "_footer" : "";
    return `${I.value}${U}_${b.value}`;
  }), y = _(() => qe(m.value) ? m.value({
    level: p.value,
    row: T.value,
    rowindex: b.value
  }) : m.value), C = _(() => [
    "a_table__row a_table__body__row a_table__row_hover",
    r.value,
    a.value,
    l.value,
    y.value
  ]), w = _(() => L.value ? "listitem" : "row"), F = _(() => qe(h.value) ? h.value({ row: T.value, rowIndex: b.value }) : u.value), P = (U) => {
    iW({
      $event: U,
      tagsName: [
        "A",
        "BUTTON",
        "INPUT",
        "LABEL"
      ],
      classStop: "a_table__row"
    }) || (t.value ? o() : n.value && v({
      row: T.value,
      rowIndex: b.value
    }));
  }, q = (U) => {
    U.keyCode === X.enter && P(U);
  }, N = _(() => (E.value && t.value || n.value) && !F.value ? {
    tabindex: 0,
    onClick: P,
    onKeydown: q
  } : {});
  return {
    disabledPreviewRow: F,
    eventsLocal: N,
    roleLocal: w,
    rowClassComputed: C,
    rowHtmlId: R
  };
}
function qW(e, { emit: t }) {
  const n = f(e, "areAllRowsSelected"), r = f(e, "row"), a = f(e, "rowIndex"), l = f(e, "selectedRowsIndexes"), o = ue("currentMultipleActions"), u = ue("isMultipleActionsActive"), h = _(() => !!l.value[a.value] || n.value), A = _(() => {
    if (u.value) {
      if (qe(de(o.value, "isHiddenCallback")))
        return o.value.isHiddenCallback({
          row: r.value,
          rowIndex: a.value
        });
      if (n.value)
        return !0;
    }
    return !1;
  }), E = _(() => h.value ? "_A_TABLE_DESELECT_THIS_ROW_" : "_A_TABLE_SELECT_THIS_ROW_");
  return {
    isCheckboxDisabled: A,
    isRowSelected: h,
    labelCheckbox: E,
    toggleCheckbox: () => {
      A.value || t("setSelectedRowsIndexes", { rowIndex: a.value });
    }
  };
}
function $W(e) {
  const t = f(e, "isTree"), n = f(e, "keyChildren"), r = f(e, "level"), a = f(e, "row"), l = f(e, "rowIndex"), o = f(e, "rowsLength"), u = _(() => {
    if (!n.value)
      return [];
    const T = de(a.value, n.value);
    return Te(T) ? T : [];
  }), h = _(() => u.value.length > 0), A = _(() => r.value + 1), E = _(() => t.value ? {
    "aria-level": r.value,
    "aria-posinset": l.value + 1,
    "aria-setsize": o.value
  } : {}), p = _(() => {
    if (t.value)
      return `a_table__row_level a_table__row_level_${r.value}`;
  });
  return {
    ariaTreeAttributes: E,
    children: u,
    hasChildren: h,
    levelForChildren: A,
    rowClassLevelChildren: p
  };
}
function kW(e, {
  hasChildren: t = _(() => !1)
}) {
  const n = f(e, "isOneOfParentsClose"), r = f(e, "isTreeCollapsible"), a = f(e, "isTreeOpened"), l = B(!1), o = _(() => {
    if (t.value)
      return l.value;
  }), u = _(() => ({
    a_table__row_has_children: t.value,
    a_table__row_hide: n.value,
    a_table__row_level_open: t.value && l.value
  })), h = _(() => !!(n.value || !l.value));
  return {
    ariaExpanded: o,
    initIsChildrenOpen: () => {
      (!r.value || a.value) && (l.value = !0);
    },
    isOneOfParentsCloseForChildren: h,
    rowClassChildren: u,
    toggleChildren: () => {
      l.value = !l.value;
    }
  };
}
function HW(e) {
  const t = f(e, "allVisibleMobileColumns"), n = f(e, "countVisibleMobileColumns"), r = ue("isMobile"), a = B(!1), l = _(() => t.value.length - n.value), o = _(() => r.value && t.value.length > n.value), u = _(() => l.value === 1 ? "_A_TABLE_MOBILE_TR_PLUS_FIELD_" : "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_"), h = _(() => a.value ? "_A_TABLE_MOBILE_TR_CLOSE_" : u.value);
  return {
    countInvisibleMobileColumns: l,
    isAllColumnsVisibleMobile: a,
    isBtnToggleAllColumnsVisible: o,
    textBtnToggleAllColumns: h,
    toggleAllColumnsVisibleMobile: ({ $event: E }) => {
      a.value = !a.value, E.stopPropagation();
    }
  };
}
function UW(e, {
  hasChildren: t = _(() => !1)
}) {
  const n = f(e, "isFooter"), r = f(e, "rowIndex"), a = ue("hasPreview"), l = ue("previewRightRowIndex"), o = ue("previewRightRowIndexLast"), u = _(() => !!(!t.value && a.value && !n.value)), h = _(() => r.value === l.value), A = _(() => !h.value && r.value === o.value), E = _(() => xt({
    placeholder: h.value ? "_A_TABLE_ROW_PREVIEW_CLOSE_" : "_A_TABLE_ROW_PREVIEW_OPEN_"
  })), p = _(() => u.value ? {
    "aria-label": E.value
  } : {}), T = _(() => {
    if (u.value)
      return {
        a_table__row_preview_open: h.value,
        a_table__row_preview_was_open: A.value
      };
  });
  return {
    hasPreviewLocal: u,
    previewAttributes: p,
    rowClassPreview: T
  };
}
const ep = {
  name: "ATableTr",
  props: {
    allVisibleMobileColumns: {
      type: Array,
      required: !0
    },
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    columnActionsBtnGroupMaxWidthStyle: {
      type: String,
      required: !1,
      default: void 0
    },
    columnActionsView: {
      type: String,
      required: !0
    },
    countVisibleMobileColumns: {
      type: Number,
      required: !0
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    isOneOfParentsClose: {
      type: Boolean,
      required: !1
    },
    isPreviewDownOpen: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isTree: {
      type: Boolean,
      required: !1
    },
    isTreeCollapsible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTreeOpened: {
      type: Boolean,
      required: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "id"
    },
    level: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowClass: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    selectedRowsIndexes: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  setup(e, t) {
    const {
      ariaTreeAttributes: n,
      children: r,
      hasChildren: a,
      levelForChildren: l,
      rowClassLevelChildren: o
    } = $W(e), {
      ariaExpanded: u,
      initIsChildrenOpen: h,
      isOneOfParentsCloseForChildren: A,
      rowClassChildren: E,
      toggleChildren: p
    } = kW(e, {
      hasChildren: a
    }), {
      hasPreviewLocal: T,
      previewAttributes: m,
      rowClassPreview: b
    } = UW(e, {
      hasChildren: a
    }), {
      disabledPreviewRow: L,
      eventsLocal: v,
      roleLocal: I,
      rowClassComputed: R,
      rowHtmlId: y
    } = MW(e, {
      hasChildren: a,
      hasPreviewLocal: T,
      rowClassChildren: E,
      rowClassLevelChildren: o,
      rowClassPreview: b,
      toggleChildren: p
    }), {
      countInvisibleMobileColumns: C,
      isAllColumnsVisibleMobile: w,
      isBtnToggleAllColumnsVisible: F,
      textBtnToggleAllColumns: P,
      toggleAllColumnsVisibleMobile: q
    } = HW(e), {
      isCheckboxDisabled: N,
      isRowSelected: U,
      labelCheckbox: V,
      toggleCheckbox: j
    } = qW(e, t);
    return h(), {
      ariaExpanded: u,
      ariaTreeAttributes: n,
      children: r,
      countInvisibleMobileColumns: C,
      disabledPreviewRow: L,
      eventsLocal: v,
      hasChildren: a,
      isAllColumnsVisibleMobile: w,
      isBtnToggleAllColumnsVisible: F,
      isCheckboxDisabled: N,
      isOneOfParentsCloseForChildren: A,
      isRowSelected: U,
      labelCheckbox: V,
      levelForChildren: l,
      previewAttributes: m,
      roleLocal: I,
      rowClassComputed: R,
      rowHtmlId: y,
      textBtnToggleAllColumns: P,
      toggleAllColumnsVisibleMobile: q,
      toggleCheckbox: j,
      toggleChildren: p
    };
  },
  inject: [
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMultipleActionsActive",
    "isMobile"
  ],
  render() {
    let e = [];
    this.isMobile && !this.isAllColumnsVisibleMobile ? Y(this.allVisibleMobileColumns, (r, a) => {
      if (a + 1 > this.countVisibleMobileColumns)
        return !1;
      e.push(
        c(JE, {
          key: r.id,
          column: r,
          columnIndex: a,
          disabledPreview: this.disabledPreviewRow,
          level: this.level,
          row: this.row,
          rowIndex: this.rowIndex,
          isFooter: this.isFooter
        }, this.$slots)
      );
    }) : e = this.columnsFilteredForRender.map((r, a) => c(JE, {
      key: r.id,
      column: r,
      columnIndex: a,
      disabledPreview: this.disabledPreviewRow,
      level: this.level,
      row: this.row,
      rowIndex: this.rowIndex,
      isFooter: this.isFooter,
      showIconChildren: !!(this.isTreeCollapsible && this.hasChildren && a === 0)
    }, this.$slots));
    const t = this.isActionColumnVisible && c(FW, {
      columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
      columnActionsView: this.columnActionsView,
      disabledRowActions: this.disabledRowActions,
      row: this.row,
      rowIndex: this.rowIndex,
      isFooter: this.isFooter,
      rowActionsClass: this.rowActionsClass,
      isRowActionsStickyLocal: this.isRowActionsStickyLocal
    }, this.$slots), n = this.isMobile ? c("div", {
      class: "a_table_mobile__dl__wrapper"
    }, [
      this.$slots.rowMobilePrepend ? this.$slots.rowMobilePrepend({
        row: this.row,
        rowIndex: this.rowIndex,
        isFooter: this.isFooter
      }) : "",
      this.isTreeCollapsible && this.hasChildren ? c(Oe, {
        "aria-hidden": !0,
        class: "a_table__row_level__icon",
        classDefault: "",
        iconLeft: rm,
        type: "text"
      }) : "",
      c("dl", {
        class: "a_table_mobile__dl"
      }, e),
      this.$slots.rowMobileAppend ? this.$slots.rowMobileAppend({
        row: this.row,
        rowIndex: this.rowIndex,
        isFooter: this.isFooter
      }) : ""
    ]) : e;
    return [
      c("div", {
        id: this.rowHtmlId,
        role: this.roleLocal,
        class: this.rowClassComputed,
        "aria-expanded": this.ariaExpanded,
        ...this.previewAttributes,
        ...this.ariaTreeAttributes,
        ...this.eventsLocal
      }, [
        this.isMultipleActionsActive && c("div", {
          class: "a_table__td a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;"
        }, [
          !this.isFooter && c(yu, {
            isWidthAuto: !0,
            modelValue: this.isRowSelected,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        n,
        this.isMobile ? c("div", {
          class: "a_table_mobile__actions_parent"
        }, [
          this.isBtnToggleAllColumnsVisible && c(Oe, {
            class: "a_btn a_btn_link a_table_mobile__columns_btn_toggle",
            extra: {
              count: this.countInvisibleMobileColumns
            },
            text: this.textBtnToggleAllColumns,
            type: "button",
            onClick: this.toggleAllColumnsVisibleMobile
          }),
          t
        ]) : t
      ]),
      this.isPreviewDownOpen && c(DW, {
        row: this.row,
        rowIndex: this.rowIndex
      }, {
        preview: (r) => this.$slots.preview ? this.$slots.preview(r) : void 0
      }),
      this.hasChildren ? this.children.map((r, a) => c(Fr("ATableTr"), {
        key: r[this.keyId] || a,
        allVisibleMobileColumns: this.allVisibleMobileColumns,
        areAllRowsSelected: this.areAllRowsSelected,
        columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
        columnActionsView: this.columnActionsView,
        countVisibleMobileColumns: this.countVisibleMobileColumns,
        disabledPreview: this.disabledPreviewRow,
        disabledRowActions: this.disabledRowActions,
        isFooter: this.isFooter,
        isOneOfParentsClose: this.isOneOfParentsCloseForChildren,
        isPreviewDownOpen: !1,
        isRowActionsStickyLocal: this.isRowActionsStickyLocal,
        isTree: this.isTree,
        isTreeCollapsible: this.isTreeCollapsible,
        isTreeOpened: this.isTreeOpened,
        keyChildren: this.keyChildren,
        keyId: this.keyId,
        level: this.levelForChildren,
        row: r,
        rowActionsClass: this.rowActionsClass,
        rowClass: this.rowClass,
        rowIndex: a,
        rowsLength: this.children.length,
        selectedRowsIndexes: this.selectedRowsIndexes
      }, {
        get: (l) => [
          c(Md, {
            data: l.row,
            keyLabel: l.column.keyLabel,
            filter: l.column.filter,
            filterParameters: l.column.filterParameters,
            defaultValue: l.column.defaultValue,
            tag: l.column.filterTag || "div"
          })
        ],
        ...this.$slots
      })) : ""
    ];
  }
};
function WW(e, {
  isMobile: t = _(() => !1),
  rowsLocal: n = B([])
}) {
  const r = f(e, "columnActionsView"), a = f(e, "columnActionsWidth"), l = f(e, "columnActionsWidthDefaults"), o = f(e, "columnActionsWidthMin"), u = f(e, "rowActions"), h = _(() => r.value === "onePlusDropdown"), A = _(() => {
    let b = !1;
    e: for (let L = 0; L < n.value.length; L++) {
      const v = n.value[L];
      for (let I = 0; I < u.value.length; I++) {
        const R = u.value[I];
        if (XS({
          rowAction: R,
          row: v,
          rowIndex: L
        }) && R.type !== "divider") {
          b = !0;
          break e;
        }
      }
    }
    return b;
  }), E = _(() => !u.value.length || !h.value ? !1 : A.value), p = _(() => Pe(a.value) ? E.value && r.value === "onePlusDropdown" ? l.value.onePlusDropdown : l.value.default : a.value), T = _(() => Pe(o.value) ? E.value && r.value === "onePlusDropdown" ? l.value.onePlusDropdownMin : l.value.min : o.value);
  return {
    columnActionsBtnGroupMaxWidthStyle: _(() => {
      const b = l.value.btnGroupMaxWidth;
      if (!t.value && r.value !== "dropdown" && !Pe(b))
        return `max-width: ${b}px`;
    }),
    columnActionsWidthLocal: p,
    columnActionsWidthMinLocal: T,
    isColumnActionWide: E
  };
}
function VW(e, {
  columnsScrollInvisible: t = B([]),
  indexFirstScrollInvisibleColumn: n = B(void 0),
  modelColumnsVisibleLocal: r = B({}),
  modelIsTableWithoutScrollComputed: a = _(() => !1),
  columnsOrderedFromSimpleTable: l = _(() => [])
}) {
  const o = f(e, "columns"), u = f(e, "isActionColumnVisible"), h = f(e, "isSimpleTable"), A = f(e, "modelColumnsOrdering"), E = f(e, "multipleActions"), p = _(() => La(o.value, "id")), T = _(() => {
    const R = {
      true: [],
      false: [],
      trueObject: {},
      falseObject: {},
      trueColumns: [],
      falseColumns: []
    };
    return Y(Se(o.value), (y) => {
      const C = y.id;
      y.locked ? (R.true.push(C), R.trueColumns.push(y), R.trueObject[C] = !0) : (R.false.push(C), R.falseColumns.push(y), R.falseObject[C] = !0);
    }), R;
  }), m = _(() => {
    if (h.value && l.value && l.value.length)
      return l.value;
    if (!A.value.length)
      return [...T.value.trueColumns, ...T.value.falseColumns];
    const R = [], y = Se(p.value);
    return Y(A.value, (C) => {
      y[C] && R.push(y[C]);
    }), R;
  }), b = _(() => {
    const R = [], y = {};
    return Y(m.value, (C, w) => {
      lW({
        column: C,
        columnIndex: w,
        modelIsTableWithoutScroll: a.value,
        modelColumnsVisibleLocal: r.value,
        indexFirstScrollInvisibleColumn: n.value
      }) && (y[R.length] = w, R.push(C));
    }), {
      columns: R,
      columnsIndexesMapping: y
    };
  }), L = _(() => b.value.columnsIndexesMapping), v = _(() => b.value.columns), I = _(() => {
    let R = v.value.length;
    return a.value && (R += t.value.length), u.value && R++, E.value.length && R++, R;
  });
  return {
    columnIdsGroupByLocked: T,
    columnsFilteredForRender: v,
    columnsFilteredForRenderIndexesMapping: L,
    columnsOrdered: m,
    countNotHiddenColumns: I
  };
}
function GW(e, {
  modelSort: t = B([])
}) {
  const n = f(e, "columns"), r = f(e, "showFirstSortingSequenceNumber"), a = f(e, "sortingSequenceNumberClass"), l = _(() => Dt(n.value, (I) => aW({ column: I }))), o = _(() => Nn(l.value, (I, R) => ({
    ...I,
    _index: I.prio || R
  }))), u = _(() => Nn(o.value, (I) => (I.group && I.group.length && (I.group = Nn(I.group, (R, y) => [
    R,
    y
  ].join("%%%"))), I))), h = ({ groups: I, group: R, level: y, columnsOrderedFromGroups: C, firstLevelGroupObject: w }) => {
    const F = R ? Dt(I, (N) => Sd(N, R[y - 1])) : I, P = dT(F, (N) => N[y]), q = Nn(P, (N) => {
      const U = {
        id: N[y].split("%%%")[0]
      };
      let V;
      return y === 0 ? (V = U, V.columnIndexes = []) : V = w, N.length > y + 1 ? U.children = de(
        h({
          groups: I,
          group: N,
          level: y + 1,
          columnsOrderedFromGroups: C,
          firstLevelGroupObject: V
        }),
        "recursiveGroup"
      ) : N.length === y + 1 && (U.columns = Dt(u.value, (j) => Sd(j.group, N[y])), V.columnIndexes.push(...Nn(U.columns, "_index")), C.push(...U.columns)), U;
    });
    return {
      columnsOrderedFromGroups: C,
      recursiveGroup: q
    };
  }, A = _(() => Nn(u.value, (I) => de(I, "group", I))), E = _(() => Dt(A.value, (I) => Te(I))), p = _(() => Dt(A.value, (I) => !Te(I))), T = _(() => {
    const I = [];
    return h({ groups: E.value, group: null, level: 0, columnsOrderedFromGroups: I });
  }), m = _(() => vd([
    ...T.value.columnsOrderedFromGroups,
    ...p.value
  ], "_index")), b = (I) => c(Hd, {
    ref: "th",
    class: "a_table__cell__child_group",
    column: I,
    columnGroupNames: Nn(I.group, (R) => R.split("%%%")[0]),
    columnIndex: I._index,
    hasMultipleActions: !1,
    modelSort: t.value,
    showFirstSortingSequenceNumber: r.value,
    sortingSequenceNumberClass: a.value
  }), L = (I) => c("div", {
    class: "a_table__th_group"
  }, [
    c("div", {
      class: "a_table__th_child_group"
    }, [
      c("div", {
        class: "a_table__cell_group a_text_center"
      }, [
        I.id && c(pe, {
          html: I.id,
          tag: "span",
          "aria-hidden": !0
        })
      ]),
      c("div", {
        class: "a_table__th_group_container"
      }, I.children ? Nn(I.children, (R) => L(R)) : Nn(I.columns, (R) => b(R)))
    ])
  ]), v = _(() => {
    const I = vd([
      ...T.value.recursiveGroup,
      ...p.value
    ], (R) => R.columnIndexes ? Fw(R.columnIndexes) : R._index);
    return Nn(I, (R) => R.columnIndexes ? L(R) : b(R));
  });
  return {
    columnsOrderedFromSimpleTable: m,
    renderedGroupedColumns: v
  };
}
function jW(e, { emit: t }, {
  checkVisibleColumns: n = () => {
  },
  columnIdsGroupByLocked: r = _(() => ({
    true: [],
    false: [],
    trueObject: {},
    falseObject: {},
    trueColumns: [],
    falseColumns: []
  })),
  columnsFilteredForRenderIndexesMapping: a = _(() => ({}))
}) {
  const l = f(e, "columns"), o = f(e, "modelColumnsOrdering"), u = ({ columnIndexDraggable: E, columnIndexOver: p, reset: T, inHeader: m }) => {
    if (E === p && !T)
      return;
    m && (E = a.value[E], p = a.value[p]);
    let b;
    if (T)
      b = [...r.value.true, ...r.value.false];
    else {
      b = Se(o.value);
      const L = b[E];
      b.splice(E, 1), b.splice(p, 0, L);
    }
    t("changeColumnsOrdering", {
      columnIndexDraggable: E,
      columnIndexOver: p,
      modelColumnsOrdering: b
    }), setTimeout(() => {
      n();
    });
  }, h = () => {
    let E = [], p = !1;
    if (!o.value.length)
      E = [...r.value.true, ...r.value.false];
    else {
      E = [...r.value.true];
      const T = Se(r.value.falseObject);
      Y(o.value, (m) => {
        T[m] && (E.push(m), delete T[m]);
      }), Y(T, (m, b) => {
        E.push(b);
      }), JSON.stringify(o.value) !== JSON.stringify(E) && (p = !0);
    }
    return {
      shouldFixColumns: p,
      modelColumnsOrderingLocal: E
    };
  }, A = () => {
    const {
      shouldFixColumns: E,
      modelColumnsOrderingLocal: p
    } = h();
    E && t("changeColumnsOrdering", {
      modelColumnsOrdering: p,
      shouldFixColumns: E
    });
  };
  return tt(l, () => {
    A();
  }, {
    deep: !0
  }), {
    changeColumnsOrdering: u,
    checkColumnsOrdering: h
  };
}
function zW(e) {
  const t = f(e, "countAllRows"), n = f(e, "data"), r = f(e, "isTree"), a = f(e, "keyChildren"), l = f(e, "keyCountAllRowsInData"), o = _(() => nt(n.value)), u = _(() => Te(n.value)), h = _(() => ae(t.value) ? o.value ? +de(n.value, l.value) : u.value ? r.value ? RP({
    array: n.value,
    keyChildren: a.value
  }) : n.value.length : 0 : t.value), A = _(() => ae(t.value) ? n.value.length : t.value);
  return {
    countAllRowsLocal: h,
    totalRowsCount: A
  };
}
function KW({
  tableRef: e = B(void 0)
}) {
  return {
    scrollToTable: () => {
      if (e.value) {
        let a = e.value.getBoundingClientRect().top + window.scrollY - window.innerHeight / 2;
        a < 0 && (a = 0), document.documentElement.scrollTop = a;
      }
    },
    setFocusToTable: () => {
      e.value && (e.value.setAttribute("tabindex", "-1"), e.value.focus(), e.value.removeAttribute("tabindex"));
    }
  };
}
function YW(e, { emit: t }, {
  checkColumnsOrdering: n = () => {
  },
  checkVisibleColumns: r = () => {
  },
  modelColumnsVisibleLocal: a = B({})
}) {
  const l = f(e, "modelColumnsVisible"), o = f(e, "columns");
  return {
    initTable: () => {
      const {
        shouldFixColumns: h,
        modelColumnsOrderingLocal: A
      } = n();
      let E = !1;
      _s(l.value) ? a.value = Se(l.value) : (E = !0, a.value = jS(o.value), r()), t("initTable", Se({
        columnsOrdering: {
          model: A,
          shouldFix: h
        },
        columnsVisible: {
          model: a.value,
          shouldFix: E
        }
      }));
    }
  };
}
function ZW(e, { emit: t }, {
  closePreviewAll: n = () => {
  },
  scrollToTable: r = () => {
  },
  setFocusToTable: a = () => {
  },
  viewCurrent: l = _(() => ({}))
}) {
  const o = f(e, "isTree"), u = f(e, "offsetStart"), h = f(e, "pagination"), A = B(void 0), E = B(void 0), p = () => {
    A.value = h.value.limitStart || 10, E.value = u.value;
  }, T = _(() => {
    var L;
    return o.value ? !1 : (L = h.value) != null && L.use ? l.value ? l.value.usePagination || !1 : !0 : !1;
  });
  return {
    changeLimit: (L) => {
      a(), r(), A.value = L, E.value = u.value, t("changeLimit", {
        offset: E.value,
        limit: L
      }), n();
    },
    changeOffset: (L) => {
      let v, I;
      nt(L) ? (v = L.offset, I = L.reload) : (v = L, I = !0), I && (a(), r()), E.value = v, t("changeOffset", {
        offset: v,
        limit: A.value
      }), I && n();
    },
    initLocalVars: p,
    limit: A,
    offset: E,
    usePaginationLocal: T
  };
}
function XW({
  columnsOrdered: e = B([]),
  isMobile: t = B(!1),
  modelColumnsVisibleLocal: n = B({})
}) {
  return {
    allVisibleMobileColumns: _(() => t.value ? Dt(e.value, (a) => a.isRender !== !1 && n.value[a.id] !== !1) : [])
  };
}
function JW(e, { emit: t }, {
  checkVisibleColumns: n = () => {
  },
  isMultipleActionsActive: r = B(void 0),
  rowsLocalAll: a = _(() => []),
  rowsLocalLength: l = _(() => 0)
}) {
  const o = f(e, "id"), u = f(e, "multipleActions"), h = B(void 0), A = B({}), E = B(!1), p = _(() => u.value.length > 0), T = _(() => qe(de(h.value, "isHiddenCallback"))), m = _(() => Dt(a.value, (P, q) => A.value[q])), b = () => {
    A.value = {};
  }, L = () => {
    r.value = !1, h.value = void 0, E.value = !1, b();
  }, v = () => {
    if (window.isScrollDisabled)
      return;
    const P = YS({ tableId: o.value });
    Qr({
      selector: `#${P}`
    });
  }, I = ({ isActive: P, action: q } = {}) => {
    if (P) {
      r.value = !0, h.value = q, setTimeout(() => {
        n(), v();
      }), t("toggleMultipleActions", { isActive: P, action: q });
      return;
    }
    r.value ? L() : r.value = !0, setTimeout(() => {
      n(), v();
    }), t("toggleMultipleActions", { isActive: P, action: q });
  }, R = _(() => _s(A.value)), y = _(() => l.value > 0 && l.value === R.value), C = _(() => R.value > 0);
  return {
    areAllRowsSelected: E,
    areAllVisibleRowsSelected: y,
    areSomeRowsSelected: C,
    closeMultipleActionsActive: L,
    currentMultipleActions: h,
    hasMultipleActions: p,
    selectedRows: m,
    selectedRowsIndexes: A,
    setEmptySelectedRowsIndexes: b,
    setSelectedRowsIndexes: ({ rowIndex: P, isAll: q }) => {
      if (q) {
        if (C.value)
          b();
        else {
          const N = {};
          T.value ? er(l.value, (U) => {
            h.value.isHiddenCallback({
              row: a.value[U],
              rowIndex: U
            }) || (N[U] = !0);
          }) : er(l.value, (U) => {
            N[U] = !0;
          }), A.value = N;
        }
        return;
      }
      A.value[P] ? delete A.value[P] : A.value[P] = !0;
    },
    toggleBtnAllRows: () => {
      E.value = !E.value, E.value && b();
    },
    toggleMultipleActionsActive: I
  };
}
function QW(e, { emit: t }, {
  aTableRef: n = B({}),
  tableGrandparentRef: r = B({})
}) {
  const {
    previewRef: a,
    removePreviewRef: l
  } = QS(), o = f(e, "previewBoxWidth"), u = 200, h = 50;
  let A, E = 0, p = 0, T = 0;
  const m = () => {
    p = n.value.getBoundingClientRect().left;
  }, b = ({ clientWidth: N }) => {
    E = N, A = N / 100 * h, m();
  }, L = ({ clientWidthLocal: N, clientXTableParent: U, previewBoxWidth: V }) => {
    const j = N - U - V;
    n.value.style.width = `${j}px`;
  }, v = ({ clientX: N = 0, previewRef: U, previewBoxWidth: V = 0 }) => {
    let j = V || E - N;
    j < u ? j = u : j > A && (j = A), L({ clientWidthLocal: E, clientXTableParent: p, previewBoxWidth: j }), U.style.width = `${j}px`;
  }, I = ({ previewRef: N }) => {
    de(N, "style.removeProperty") && N.style.removeProperty("width"), de(n, "value.style.removeProperty") && n.value.style.removeProperty("width");
  }, R = ({ previewRef: N }) => {
    E = document.documentElement.clientWidth, T = de(r, "value.offsetWidth", 0), m(), v({
      previewRef: N,
      previewBoxWidth: o.value
    });
  }, y = ({ previewRef: N, isOpen: U }) => {
    U ? R({ previewRef: N }) : I({ previewRef: N });
  }, C = ({ previewRightWidth: N }) => {
    t("mouseupResizePreviewRight", { previewRightWidth: N });
  }, w = () => {
    R({
      previewRef: a.value
    });
  }, F = new ResizeObserver(
    tl((N) => {
      const U = N[0].contentRect;
      T !== U.width && (T = U.width, w());
    }, 300)
  ), P = () => {
    F.observe(r.value);
  }, q = () => {
    F.unobserve(r.value);
  };
  return Ot(() => {
    l(), q();
  }), {
    addEventListenerWindowResize: P,
    mousedownResizePreviewRight: b,
    mousemoveResizePreviewRight: v,
    mouseupResizePreviewRight: C,
    removeEventListenerWindowResize: q,
    togglePreviewResize: y
  };
}
function eV(e, t, {
  aTableRef: n = B({}),
  isMobile: r = B(void 0),
  rowsLocalAll: a = _(() => []),
  tableGrandparentRef: l = B({})
}) {
  const {
    isDropdownGlobalOpen: o
  } = ES(), {
    addEventListenerWindowResize: u,
    mousedownResizePreviewRight: h,
    mousemoveResizePreviewRight: A,
    mouseupResizePreviewRight: E,
    removeEventListenerWindowResize: p,
    togglePreviewResize: T
  } = QW(e, t, {
    aTableRef: n,
    tableGrandparentRef: l
  }), m = f(e, "keyId"), b = f(e, "preview"), L = f(e, "id"), v = t.emit, I = B({}), R = B(void 0), y = B(void 0), C = _(() => !!b.value), w = ({ rowIndex: Ie }) => {
    window.isScrollDisabled || setTimeout(() => {
      const se = `#${L.value}_${Ie}`;
      Qr({ selector: se });
    });
  }, F = () => {
    window.isScrollDisabled || setTimeout(() => {
      const Ie = `#${KS({ tableId: L.value })}`;
      Qr({ selector: Ie });
    });
  }, P = _(() => b.value === "right" || r.value), q = _(() => !ae(R.value)), N = () => {
    w({
      rowIndex: R.value
    }), v("togglePreview", {
      row: a.value[R.value],
      rowIndex: R.value,
      typeToggle: "close"
    }), y.value = R.value, R.value = void 0, p();
  }, U = () => {
    v("togglePreview", {
      row: a.value[R.value],
      rowIndex: R.value,
      typeToggle: "close"
    }), y.value = void 0, R.value = void 0, p();
  }, V = _(() => b.value === "down"), j = ({ rowIndex: Ie, row: se }) => {
    const me = Xo({ row: se, rowIndex: Ie, keyId: m.value });
    delete I.value[me];
  }, ne = () => {
    I.value = {};
  }, Z = () => {
    U(), ne();
  }, le = ({ rowIndex: Ie, row: se } = {}) => {
    P.value ? N() : V.value && j({ rowIndex: Ie, row: se });
  }, oe = ({ rowIndex: Ie }) => {
    !r.value && Pe(R.value) && u(), v("togglePreview", {
      row: a.value[Ie],
      rowIndex: Ie,
      typeToggle: "open"
    }), R.value = Ie, y.value = void 0, F();
  }, fe = ({ rowIndex: Ie }) => {
    R.value === Ie ? N() : oe({ rowIndex: Ie });
  }, he = ({ rowIndex: Ie, row: se }) => {
    const me = Xo({ row: se, rowIndex: Ie, keyId: m.value });
    I.value[me] ? delete I.value[me] : I.value[me] = !0;
  };
  return {
    closePreview: le,
    closePreviewAll: Z,
    hasPreview: C,
    isPreviewRightOpen: q,
    mousedownResizePreviewRight: h,
    mousemoveResizePreviewRight: A,
    mouseupResizePreviewRight: E,
    onTogglePreview: ({ row: Ie, rowIndex: se }) => {
      if (!o.value) {
        if (P.value) {
          fe({ rowIndex: se });
          return;
        }
        V.value && he({ row: Ie, rowIndex: se });
      }
    },
    previewDownRowIds: I,
    previewRightRowIndex: R,
    previewRightRowIndexLast: y,
    togglePreviewResize: T
  };
}
function tV(e, {
  dataSorted: t = _(() => []),
  limit: n = B(0),
  offset: r = B(0),
  setEmptySelectedRowsIndexes: a = () => {
  },
  usePaginationLocal: l = _(() => !1)
}) {
  const o = f(e, "clearSelectedRowsOnDataChange"), u = f(e, "pagination"), h = f(e, "rowsCountRenderPerTick"), A = B([]), E = B([]);
  let p = !0, T = 0, m;
  const b = _(() => {
    if (n.value && !u.value.isOutside && l.value) {
      const q = r.value, N = q + n.value;
      return t.value.slice(q, N);
    }
    return t.value;
  }), L = _(() => b.value), v = _(() => L.value.length), I = _(() => !!v.value), R = () => {
    const q = T * h.value, N = q + h.value;
    Nn(b.value.slice(q, N), (U) => E.value.push(U)), T++;
  }, y = () => {
    m = setInterval(() => {
      T * h.value >= b.value.length ? clearInterval(m) : R();
    });
  }, C = () => {
    clearInterval(m);
  }, w = ({ row: q, rowIndex: N }) => {
    N > E.value.length - 1 || (E.value[N] = q);
  }, F = ({ row: q }) => {
    E.value.unshift(q);
  }, P = ({ index: q }) => {
    E.value.splice(q, 1);
  };
  return tt(b, (q) => {
    Qp(q, A.value) || (A.value = [...q], !p && o.value && a(), p = !1, E.value = [], T = 0, C(), h.value > 0 ? (R(), y()) : E.value = b.value);
  }, {
    immediate: !0,
    deep: !0
  }), {
    addRow: F,
    deleteRow: P,
    hasRows: I,
    rowsLocal: E,
    rowsLocalAll: L,
    rowsLocalLength: v,
    stopRenderRows: C,
    updateRow: w
  };
}
function nV(e, { emit: t }, {
  columnActionsWidth: n = _(() => 0),
  columnActionsWidthMin: r = _(() => 0),
  columnsOrdered: a = _(() => []),
  columnsScrollInvisible: l = B([]),
  indexFirstScrollInvisibleColumn: o = B(void 0),
  isMobile: u = B(!1),
  isMultipleActionsActive: h = B(void 0),
  modelColumnsVisibleLocal: A = B({}),
  modelIsTableWithoutScroll: E = B(!1),
  modelIsTableWithoutScrollComputed: p = _(() => !1)
}) {
  const T = f(e, "columnWidthDefault"), m = f(e, "isActionColumnVisible"), b = f(e, "isSimpleTable"), L = B(void 0), v = B(0), I = B(void 0);
  let R = !1;
  const y = 20, C = _(() => m.value ? r.value : 0), w = _(() => {
    const Z = h.value ? r.value : 0, le = b.value ? 0 : y;
    return Z + le;
  }), F = ({
    sumGrows: Z = 0,
    freeSpaceWidth: le = 0
  }) => {
    Z > 0 ? v.value = le / Z : v.value = 0;
  }, P = () => {
    if (ae(o.value) || a.value.length < o.value)
      l.value = [];
    else {
      const Z = [];
      for (let le = o.value; le < a.value.length; le++) {
        const oe = a.value[le];
        Xs({
          column: oe,
          modelColumnsVisibleLocal: A.value
        }) && Z.push(Se(oe));
      }
      l.value = Z;
    }
  }, q = () => {
    l.value = [], v.value = 0, o.value = 1e3, I.value = 0;
  }, N = () => {
    if (u.value || I.value === 0) {
      q();
      return;
    }
    if (Pe(I.value))
      return;
    const Z = I.value - w.value - C.value, le = I.value - w.value - n.value;
    let oe = 0, fe = 0, he = 0, we = !1;
    if (Y(a.value, (me) => {
      if (!Xs({
        column: me,
        modelColumnsVisibleLocal: A.value
      })) {
        fe++;
        return;
      }
      const Le = +me.width || T.value;
      if (oe + Le > Z)
        return we = !0, !1;
      oe += Le, fe++, he += ae(me.grow) ? 1 : me.grow;
    }), we && oe > le)
      for (let me = fe - 1; me >= 0; me--) {
        fe--;
        const Le = a.value[fe];
        if (!Xs({
          column: Le,
          modelColumnsVisibleLocal: A.value
        }))
          continue;
        const ce = +Le.width || T.value;
        if (oe -= ce, he -= ae(Le.grow) ? 1 : Le.grow, oe <= le)
          break;
      }
    let Ie = 0;
    const se = we ? le : Z;
    (p.value || fe === a.value.length) && (Ie = se - oe), o.value = fe, F({
      sumGrows: he,
      freeSpaceWidth: Ie
    }), P();
  }, U = ({ entries: Z, forceAdjust: le }) => {
    const oe = Z[0].contentRect;
    (le || I.value > oe.width + y || I.value < oe.width - y) && (R || (R = !0, I.value = oe.width, N(), R = !1));
  }, V = new ResizeObserver(
    tl((Z) => {
      Pe(I.value) ? U({ entries: Z, forceAdjust: !0 }) : U({ entries: Z });
    }, 300)
  ), j = (Z) => {
    Z ? (V.unobserve(L.value), q()) : (V.observe(L.value), E.value && N());
  }, ne = (Z) => {
    E.value = Z, t("updateModelIsTableWithoutScroll", Z), E.value && N();
  };
  return kr(() => {
    u.value || V.observe(L.value);
  }), Ot(() => {
    V.unobserve(L.value);
  }), tt(a, () => {
    N();
  }), {
    aTableRef: L,
    changeModelIsTableWithoutScroll: ne,
    checkVisibleColumns: N,
    columnsVisibleAdditionalSpaceForOneGrow: v,
    onWatchMobileScrollControl: j
  };
}
function rV(e) {
  const t = f(e, "hasMobile"), n = f(e, "isActionColumnVisible"), r = f(e, "isActionColumnVisible"), a = f(e, "isColumnsDnd"), l = f(e, "isSimpleTable"), o = f(e, "modelIsTableWithoutScrollStart"), u = f(e, "rowActions"), h = B(void 0), A = () => {
    h.value = o.value;
  }, {
    isMobileWidth: E
  } = fn(), p = _(() => l.value ? u.value && !!u.value.length && n.value : r.value), T = _(() => !!(r.value && !l.value)), m = _(() => !!(a.value && !l.value)), b = _(() => t.value ? !!E.value : !1), L = _(() => l.value ? !1 : h.value);
  return {
    initModelIsTableWithoutScroll: A,
    isActionColumnVisibleLocal: p,
    isActionIconVisibleLocal: T,
    isColumnsDndLocal: m,
    isMobile: b,
    modelIsTableWithoutScroll: h,
    modelIsTableWithoutScrollComputed: L
  };
}
function iV(e, {
  viewCurrent: t = _(() => ({}))
}) {
  const n = f(e, "data"), r = f(e, "isSortingOutside"), a = f(e, "modelSort"), l = f(e, "useAdditionalSorting"), o = B([]), u = _(() => l.value ? t.value ? t.value.useAdditionalSorting || !1 : !0 : !1), h = () => {
    lt(a.value) ? o.value = [a.value] : Te(a.value) && (o.value = Se(a.value));
  }, A = _(() => {
    const p = {
      models: [],
      directions: []
    };
    return o.value.length && Y(o.value, (T) => {
      let m = "asc", b = T;
      cc(T, "-") && (m = "desc", b = T.slice(1)), p.models.push(b), p.directions.push(m);
    }), p;
  }), E = _(() => o.value.length && !r.value ? uc(n.value || [], A.value.models, A.value.directions) : n.value || []);
  return tt(a, () => {
    h();
  }), {
    dataSorted: E,
    initModelSort: h,
    modelSortLocal: o,
    useAdditionalSortingLocal: u
  };
}
function aV(e, { emit: t }, {
  modelSortLocal: n = B([]),
  closePreviewAll: r = () => {
  }
}) {
  const a = f(e, "id"), l = f(e, "isSortingMultiColumn"), o = f(e, "sortingMultiColumnKey"), u = _(() => `${o.value}Key`), h = (T) => l.value && T[u.value], A = ({ sortId: T }) => {
    const m = n.value.indexOf(T);
    if (m !== -1) {
      n.value.splice(m, 1, `-${T}`);
      return;
    }
    const b = n.value.indexOf(`-${T}`);
    if (b !== -1) {
      n.value.splice(b, 1);
      return;
    }
    n.value.push(T);
  }, E = ({ sortId: T }) => {
    if (n.value.indexOf(T) !== -1) {
      n.value = [`-${T}`];
      return;
    }
    if (n.value.indexOf(`-${T}`) !== -1) {
      n.value = [];
      return;
    }
    n.value = [T];
  };
  return {
    changeModelSort: ({ sortId: T, $event: m, modelAll: b }) => {
      b ? n.value = b : h(m) ? A({ sortId: T }) : E({ sortId: T }), t("changeSorting", {
        modelSort: Se(n.value)
      }), Rt.$emit("changeTableSorting", {
        modelSort: Se(n.value),
        tableId: a.value
      }), r();
    }
  };
}
function sV(e, {
  isMobile: t = B(void 0),
  modelIsTableWithoutScrollComputed: n = _(() => {
  })
}) {
  const r = f(e, "rowActionsSticky");
  return {
    isRowActionsStickyLocal: _(() => !!(!t.value && r.value && !n.value))
  };
}
function lV(e, {
  countNotHiddenColumns: t = _(() => -1),
  isMobile: n = B(!1)
}) {
  const r = f(e, "id"), a = f(e, "isLabelVisible"), l = _(() => {
    const h = {};
    return n.value || (h.role = "table", h["aria-colcount"] = t.value), h;
  }), o = _(() => n.value ? "list" : "rowgroup"), u = _(() => {
    if (a.value)
      return ZS({ tableId: r.value });
  });
  return {
    tableChildRole: o,
    tableLabelId: u,
    tableRoleAttributes: l
  };
}
function oV(e, { emit: t }, {
  modelColumnsVisibleLocal: n = B({}),
  checkVisibleColumns: r = () => {
  }
}) {
  return {
    changeModelColumnsVisible: (l) => {
      n.value = l, t("update:modelColumnsVisible", Se(n.value)), r();
    }
  };
}
function uV(e) {
  const t = f(e, "texts");
  return {
    emptyText: _(() => Pe(t.value.empty) ? "_A_TABLE_EMPTY_TEXT_" : t.value.empty)
  };
}
function _V() {
  const e = B([]), t = B(void 0), n = B(void 0), r = B({}), a = B(void 0), l = B(void 0);
  return {
    columnsScrollInvisible: e,
    indexFirstScrollInvisibleColumn: t,
    isMultipleActionsActive: n,
    modelColumnsVisibleLocal: r,
    tableGrandparentRef: a,
    tableRef: l
  };
}
function dV(e, { emit: t }, {
  closePreviewAll: n = () => {
  }
}) {
  const r = f(e, "views"), a = f(e, "modelFilters"), l = f(e, "modelView"), o = _(() => La(r.value, "id")), u = _(() => o.value[l.value]), h = _(() => r.value.length > 1), A = () => {
    if (h.value) {
      const T = lc(r.value, ["active", !0]);
      let m = r.value[0].id;
      T && (m = T.id), t("updateView", {
        _modelView: m,
        view: o.value[m],
        modelFilters: a.value,
        init: !0
      });
    }
  }, E = (T) => {
    n(), t("updateView", {
      _modelView: T,
      view: o.value[T],
      modelFilters: a.value
    });
  }, p = _(() => !u.value || u.value.type === "table");
  return {
    hasViews: h,
    initViewCurrent: A,
    isViewTableVisible: p,
    updateViewCurrent: E,
    viewCurrent: u
  };
}
const rue = {
  name: "ATable",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    clearSelectedRowsOnDataChange: {
      type: Boolean,
      required: !1,
      default: !0
    },
    columnActionsOnePlusDropdownOptions: {
      type: Object,
      required: !1,
      default: () => ({
        actionsClasses: ["a_btn a_btn_primary a_text_truncate"],
        btnGroupClass: "a_btn_group a_btn_group_table",
        hasDividerBeforeDropdown: !1,
        indexFirstDropdownAction: 1,
        indexFirstDropdownActionMobile: 1,
        minDropdownActions: 1
      })
    },
    columnActionsView: {
      type: String,
      required: !1,
      default: "dropdown",
      validator: (e) => ["onePlusDropdown", "onePlusDropdownEmptyPlace", "dropdown"].indexOf(e) !== -1
    },
    columnActionsWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    columnActionsWidthDefaults: {
      type: Object,
      required: !1,
      default: () => ({
        default: 170,
        min: 50,
        onePlusDropdown: 320,
        onePlusDropdownMin: 200,
        btnGroupMaxWidth: 180
      })
    },
    columnActionsWidthMin: {
      type: Number,
      required: !1,
      default: void 0
    },
    columns: {
      type: Array,
      required: !0
    },
    columnsDefaultValue: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    columnWidthDefault: {
      type: Number,
      required: !1,
      default: 250
    },
    countAllRows: {
      type: Number,
      required: !1,
      default: void 0
    },
    countVisibleMobileColumns: {
      type: Number,
      required: !1,
      default: 4,
      validator: (e) => e > 0
    },
    borderType: {
      type: String,
      required: !1,
      default: () => Za.value.propsDefault.borderType,
      validator: (e) => ["bordered", "innerBordered"].indexOf(e) !== -1
    },
    data: {
      type: [Array, Object, Promise],
      required: !1
    },
    disabledActions: {
      type: Boolean,
      required: !1
    },
    disabledMultipleActions: {
      type: Boolean,
      required: !1
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    disabledViews: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    hasScrollClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => ot("a_table")
    },
    isActionColumnVisible: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isActionIconVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isColumnsDnd: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLabelVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isLoadingMultipleActions: {
      type: Boolean,
      required: !1
    },
    isLoadingOptions: {
      type: Boolean,
      required: !1
    },
    isLoadingTable: {
      type: Boolean,
      required: !1
    },
    isQuickSearch: {
      type: Boolean,
      required: !1
    },
    isSimpleTable: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSortingOutside: {
      type: Boolean,
      required: !1
    },
    isTree: {
      type: Boolean,
      required: !1
    },
    isTreeCollapsible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTreeOpened: {
      type: Boolean,
      required: !1
    },
    keyCountAllRowsInData: {
      type: String,
      required: !1,
      default: "count"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyChildren: {
      type: String,
      required: !1,
      default: "children"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !1,
      default: "h2"
    },
    modelColumnsOrdering: {
      type: Array,
      required: !1,
      default: () => []
    },
    modelColumnsVisible: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelIsTableWithoutScrollStart: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelQuickSearch: {
      type: String,
      required: !1,
      default: ""
    },
    modelSort: {
      type: [String, Array],
      required: !1,
      default: () => []
    },
    modelView: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    multipleActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    offsetStart: {
      type: Number,
      required: !1,
      default: 0
    },
    pagination: {
      type: Object,
      required: !1,
      default: () => ({
        use: !1,
        maxPages: 5,
        limitsPerPage: [],
        limitStart: 10,
        disabled: !1,
        isOutside: !1,
        outside: !1,
        modes: {
          /*
           * perPage: inline / select
           * pagination: normal / short / loadMore
           */
          desktop: {
            pagination: {
              mode: "normal",
              position: 0
            },
            perPage: {
              mode: "inline",
              position: 1
            }
          },
          mobile: {
            pagination: {
              mode: "loadMore"
            }
          }
        }
      })
    },
    preview: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["right", "down"].indexOf(e) !== -1
    },
    previewBoxWidth: {
      type: Number,
      required: !1,
      default: 300
    },
    previewStyles: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowActionsSticky: {
      type: Boolean,
      required: !1,
      default: !0
    },
    rowClass: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    rowsCountRenderPerTick: {
      type: Number,
      required: !1,
      default: 25,
      validator: (e) => Oi(e) && e >= 0
    },
    rowsFooter: {
      type: Array,
      required: !1,
      default: () => []
    },
    showCount: {
      type: Boolean,
      required: !1,
      default: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1,
      default: !1
    },
    sortingMultiColumnKey: {
      type: String,
      required: !1,
      default: "shift",
      validator: (e) => ["shift", "ctrl", "alt"].indexOf(e) !== -1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1,
      default: "a_badge"
    },
    tableActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    tableActionsIndexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: -1
    },
    tableActionsIndexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: 0
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        empty: "_A_TABLE_EMPTY_TEXT_"
      })
    },
    useAdditionalSorting: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useViewSlot: {
      type: Boolean,
      required: !1
    },
    valuesForColumnDefault: {
      type: Array,
      required: !1,
      default: () => [null, void 0, ""]
    },
    views: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  emits: [
    "changeColumnsOrdering",
    "changeColumnsVisible",
    "changeLimit",
    "changeOffset",
    "changeSorting",
    "mouseupResizePreviewRight",
    "initTable",
    "togglePreview",
    "toggleMultipleActions",
    "update:modelColumnsOrder",
    "update:modelColumnsVisible",
    "update:modelQuickSearch",
    "updateModelIsTableWithoutScroll",
    "updateView"
  ],
  provide() {
    return {
      changeModelColumnsVisible: this.changeModelColumnsVisible,
      columnActionsOnePlusDropdownOptions: _(() => this.columnActionsOnePlusDropdownOptions),
      columns: _(() => this.columns),
      columnsDefaultValue: _(() => this.columnsDefaultValue),
      columnWidthDefault: _(() => this.columnWidthDefault),
      isLoadingOptions: _(() => this.isLoadingOptions),
      isLoadingTable: _(() => this.isLoadingTable),
      keyId: _(() => this.keyId),
      rowActions: _(() => this.rowActions),
      tableId: _(() => this.id),
      valuesForColumnDefault: _(() => this.valuesForColumnDefault)
    };
  },
  setup(e, t) {
    const {
      initModelIsTableWithoutScroll: n,
      isActionColumnVisibleLocal: r,
      isActionIconVisibleLocal: a,
      isColumnsDndLocal: l,
      isMobile: o,
      modelIsTableWithoutScroll: u,
      modelIsTableWithoutScrollComputed: h
    } = rV(e), {
      countAllRowsLocal: A,
      totalRowsCount: E
    } = zW(e), {
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      isMultipleActionsActive: m,
      modelColumnsVisibleLocal: b,
      tableGrandparentRef: L,
      tableRef: v
    } = _V(), {
      scrollToTable: I,
      setFocusToTable: R
    } = KW({
      tableRef: v
    }), {
      hasViews: y,
      initViewCurrent: C,
      isViewTableVisible: w,
      updateViewCurrent: F,
      viewCurrent: P
    } = dV(e, t, {
      closePreviewAll: cr
    }), {
      dataSorted: q,
      initModelSort: N,
      modelSortLocal: U,
      useAdditionalSortingLocal: V
    } = iV(e, {
      viewCurrent: P
    }), {
      columnsOrderedFromSimpleTable: j,
      renderedGroupedColumns: ne
    } = GW(e, {
      modelSort: U
    }), {
      columnIdsGroupByLocked: Z,
      columnsFilteredForRender: le,
      columnsFilteredForRenderIndexesMapping: oe,
      columnsOrdered: fe,
      countNotHiddenColumns: he
    } = VW(e, {
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      modelColumnsVisibleLocal: b,
      modelIsTableWithoutScrollComputed: h,
      columnsOrderedFromSimpleTable: j
    }), {
      changeLimit: we,
      changeOffset: Ie,
      initLocalVars: se,
      limit: me,
      offset: Le,
      usePaginationLocal: ce
    } = ZW(e, t, {
      closePreviewAll: cr,
      scrollToTable: I,
      setFocusToTable: R,
      viewCurrent: P
    }), {
      addRow: Ae,
      deleteRow: $,
      hasRows: ee,
      rowsLocal: re,
      rowsLocalAll: be,
      rowsLocalLength: xe,
      stopRenderRows: He,
      updateRow: Ve
    } = tV(e, {
      dataSorted: q,
      limit: me,
      offset: Le,
      setEmptySelectedRowsIndexes: ia,
      usePaginationLocal: ce
    }), {
      columnActionsBtnGroupMaxWidthStyle: Ye,
      columnActionsWidthLocal: Re,
      columnActionsWidthMinLocal: je,
      isColumnActionWide: ft
    } = WW(e, {
      isMobile: o,
      rowsLocal: re
    }), {
      aTableRef: $e,
      changeModelIsTableWithoutScroll: it,
      checkVisibleColumns: _t,
      columnsVisibleAdditionalSpaceForOneGrow: mt,
      onWatchMobileScrollControl: vt
    } = nV(e, t, {
      columnActionsWidth: Re,
      columnActionsWidthMin: je,
      columnsOrdered: fe,
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      isMobile: o,
      isMultipleActionsActive: m,
      modelColumnsVisibleLocal: b,
      modelIsTableWithoutScroll: u,
      modelIsTableWithoutScrollComputed: h
    }), {
      changeColumnsOrdering: lr,
      checkColumnsOrdering: $n
    } = jW(e, t, {
      checkVisibleColumns: _t,
      columnIdsGroupByLocked: Z,
      columnsFilteredForRenderIndexesMapping: oe
    }), {
      isRowActionsStickyLocal: or
    } = sV(e, {
      isMobile: o,
      modelIsTableWithoutScrollComputed: h
    }), {
      areAllRowsSelected: Kt,
      areAllVisibleRowsSelected: kn,
      areSomeRowsSelected: Hn,
      closeMultipleActionsActive: Ln,
      currentMultipleActions: Ir,
      hasMultipleActions: vn,
      selectedRows: gr,
      selectedRowsIndexes: Un,
      setEmptySelectedRowsIndexes: Wn,
      setSelectedRowsIndexes: Vt,
      toggleBtnAllRows: hn,
      toggleMultipleActionsActive: ur
    } = JW(e, t, {
      checkVisibleColumns: _t,
      isMultipleActionsActive: m,
      rowsLocalAll: be,
      rowsLocalLength: xe
    }), {
      changeModelColumnsVisible: _r
    } = oV(e, t, {
      modelColumnsVisibleLocal: b,
      checkVisibleColumns: _t
    }), {
      closePreview: ta,
      closePreviewAll: yr,
      hasPreview: Rr,
      isPreviewRightOpen: ui,
      onTogglePreview: dr,
      mousedownResizePreviewRight: As,
      mousemoveResizePreviewRight: Es,
      mouseupResizePreviewRight: It,
      previewDownRowIds: Or,
      previewRightRowIndex: na,
      previewRightRowIndexLast: Na,
      togglePreviewResize: ra
    } = eV(e, t, {
      aTableRef: $e,
      isMobile: o,
      rowsLocalAll: be,
      tableGrandparentRef: L
    }), {
      tableChildRole: Da,
      tableLabelId: _i,
      tableRoleAttributes: ps
    } = lV(e, {
      countNotHiddenColumns: he,
      isMobile: o
    }), {
      allVisibleMobileColumns: Yt
    } = XW({
      columnsOrdered: fe,
      isMobile: o,
      modelColumnsVisibleLocal: b
    }), {
      changeModelSort: di
    } = aV(e, t, {
      modelSortLocal: U,
      closePreviewAll: cr
    }), {
      initTable: Ba
    } = YW(e, t, {
      checkColumnsOrdering: $n,
      checkVisibleColumns: _t,
      modelColumnsVisibleLocal: b
    }), {
      emptyText: wa
    } = uV(e);
    function cr() {
      yr();
    }
    function ia() {
      Wn();
    }
    return tt(o, (sn) => {
      vt(sn), cr();
    }), tt(ft, (sn, Pa) => {
      sn !== Pa && _t();
    }), Qe("changeModelIsTableWithoutScroll", it), Qe("changeModelSort", di), Qe("columnsOrdered", fe), Qe("columnsFilteredForRender", le), Qe("columnsScrollInvisible", p), Qe("columnsVisibleAdditionalSpaceForOneGrow", mt), Qe("columnActionsWidthLocal", Re), Qe("columnActionsWidthMinLocal", je), Qe("currentMultipleActions", Ir), Qe("hasPreview", Rr), Qe("indexFirstScrollInvisibleColumn", T), Qe("isActionColumnVisible", r), Qe("isActionIconVisible", a), Qe("isColumnsDnd", l), Qe("isMobile", o), Qe("isMultipleActionsActive", m), Qe("modelIsTableWithoutScroll", h), Qe("onTogglePreview", dr), Qe("previewRightRowIndex", na), Qe("previewRightRowIndexLast", Na), Qe("rowsLocalAll", be), Qe("modelColumnsVisibleLocal", b), Qe("changeColumnsOrdering", lr), se(), n(), C(), Ba(), N(), {
      addRow: Ae,
      allVisibleMobileColumns: Yt,
      areAllRowsSelected: Kt,
      areAllVisibleRowsSelected: kn,
      areSomeRowsSelected: Hn,
      aTableRef: $e,
      changeLimit: we,
      changeModelColumnsVisible: _r,
      changeOffset: Ie,
      checkVisibleColumns: _t,
      closeMultipleActionsActive: Ln,
      closePreview: ta,
      closePreviewAll: cr,
      columnActionsBtnGroupMaxWidthStyle: Ye,
      columnsFilteredForRender: le,
      columnsOrdered: fe,
      countAllRowsLocal: A,
      deleteRow: $,
      emptyText: wa,
      hasMultipleActions: vn,
      hasRows: ee,
      hasViews: y,
      isMobile: o,
      isMultipleActionsActive: m,
      isPreviewRightOpen: ui,
      isRowActionsStickyLocal: or,
      isViewTableVisible: w,
      limit: me,
      modelColumnsVisibleLocal: b,
      modelIsTableWithoutScrollComputed: h,
      modelSortLocal: U,
      mousedownResizePreviewRight: As,
      mousemoveResizePreviewRight: Es,
      mouseupResizePreviewRight: It,
      offset: Le,
      onTogglePreview: dr,
      previewDownRowIds: Or,
      previewRightRowIndex: na,
      renderedGroupedColumns: ne,
      rowsLocal: re,
      rowsLocalAll: be,
      rowsLocalLength: xe,
      selectedRows: gr,
      selectedRowsIndexes: Un,
      setEmptySelectedRowsIndexes: ia,
      setSelectedRowsIndexes: Vt,
      stopRenderRows: He,
      tableChildRole: Da,
      tableGrandparentRef: L,
      tableLabelId: _i,
      tableRef: v,
      tableRoleAttributes: ps,
      toggleBtnAllRows: hn,
      toggleMultipleActionsActive: ur,
      togglePreviewResize: ra,
      totalRowsCount: E,
      updateRow: Ve,
      updateViewCurrent: F,
      useAdditionalSortingLocal: V,
      usePaginationLocal: ce,
      viewCurrent: P
    };
  },
  data() {
    return {
      resolved: void 0,
      error: void 0
    };
  },
  computed: {
    hasRowsFooter() {
      return this.rowsFooter.length > 0;
    }
  },
  methods: {
    updateModelQuickSearch(e) {
      this.$emit("update:modelQuickSearch", e);
    }
  },
  render() {
    return c("div", {
      ref: "tableGrandparentRef",
      class: ["a_table__grandparent", {
        a_table_mobile: this.isMobile,
        a_table__grandparent_without_scroll: !this.hasScrollClass
      }]
    }, [
      this.$slots.tablePrepend && this.$slots.tablePrepend({
        id: this.id
      }),
      c("div", {
        ref: "aTableRef",
        class: ["a_table__parent", {
          a_table__parent_scrollable: this.hasScrollClass && !this.modelIsTableWithoutScrollComputed
        }]
      }, [
        c(CW, {
          additionalSortingColumns: this.additionalSortingColumns,
          areAllRowsSelected: this.areAllRowsSelected,
          areSomeRowsSelected: this.areSomeRowsSelected,
          closeMultipleActionsActive: this.closeMultipleActionsActive,
          countAllRows: this.countAllRowsLocal,
          disabledActions: this.disabledActions,
          disabledMultipleActions: this.disabledMultipleActions,
          disabledSort: this.disabledSort,
          disabledViews: this.disabledViews,
          extra: this.extra,
          hasViews: this.hasViews,
          isLabelVisible: this.isLabelVisible,
          isLoadingMultipleActions: this.isLoadingMultipleActions,
          isQuickSearch: this.isQuickSearch,
          isSortingMultiColumn: this.isSortingMultiColumn,
          label: this.label,
          labelClass: this.labelClass,
          labelTag: this.labelTag,
          modelQuickSearch: this.modelQuickSearch,
          modelSort: this.modelSortLocal,
          modelView: this.modelView,
          multipleActions: this.multipleActions,
          selectedRows: this.selectedRows,
          showCount: this.showCount,
          tableActions: this.tableActions,
          tableActionsIndexFirstDropdownAction: this.tableActionsIndexFirstDropdownAction,
          tableActionsIndexFirstDropdownActionMobile: this.tableActionsIndexFirstDropdownActionMobile,
          useAdditionalSorting: this.useAdditionalSortingLocal,
          useViewSlot: this.useViewSlot,
          viewCurrent: this.viewCurrent,
          views: this.views,
          onUpdateViewCurrent: this.updateViewCurrent,
          onUpdateModelQuickSearch: this.updateModelQuickSearch,
          onToggleMultipleActionsActive: this.toggleMultipleActionsActive,
          onToggleBtnAllRows: this.toggleBtnAllRows
        }, this.$slots),
        this.$slots.topPanelAppend ? this.$slots.topPanelAppend() : "",
        this.isViewTableVisible && c("div", {
          ref: "tableRef",
          "aria-labelledby": this.isLabelVisible ? this.tableLabelId : void 0,
          class: [
            "a_table",
            {
              a_table_simple: this.isSimpleTable,
              a_table_bordered: this.borderType === "bordered",
              a_table_inner_bordered: this.borderType === "innerBordered"
            }
          ],
          ...this.tableRoleAttributes
        }, [
          this.isSimpleTable ? c(uW, {
            areAllRowsSelected: this.areAllRowsSelected,
            areAllVisibleRowsSelected: this.areAllVisibleRowsSelected,
            areSomeRowsSelected: this.areSomeRowsSelected,
            disabledOptions: this.disabledOptions,
            disabledSort: this.disabledSort,
            hasMultipleActions: this.hasMultipleActions,
            isRowActionsStickyLocal: this.isRowActionsStickyLocal,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSortLocal,
            rowsLocalLength: this.rowsLocalLength,
            showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
            sortingSequenceNumberClass: this.sortingSequenceNumberClass,
            onSetSelectedRowsIndexes: this.setSelectedRowsIndexes,
            columnsForRender: this.renderedGroupedColumns
          }) : c(oW, {
            areAllRowsSelected: this.areAllRowsSelected,
            areAllVisibleRowsSelected: this.areAllVisibleRowsSelected,
            areSomeRowsSelected: this.areSomeRowsSelected,
            disabledOptions: this.disabledOptions,
            disabledSort: this.disabledSort,
            hasMultipleActions: this.hasMultipleActions,
            isRowActionsStickyLocal: this.isRowActionsStickyLocal,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSortLocal,
            rowsLocalLength: this.rowsLocalLength,
            showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
            sortingSequenceNumberClass: this.sortingSequenceNumberClass,
            onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
          }),
          c("div", {
            class: "a_table__loading"
          }, [
            c(CS, {
              isLoading: this.isLoadingTable
            }, () => [
              c("div", {
                class: "a_table__body",
                role: this.tableChildRole
              }, {
                default: () => this.rowsLocal.map((e, t) => {
                  const n = Xo({ row: e, rowIndex: t, keyId: this.keyId });
                  return c(ep, {
                    key: n,
                    allVisibleMobileColumns: this.allVisibleMobileColumns,
                    areAllRowsSelected: this.areAllRowsSelected,
                    columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
                    columnActionsView: this.columnActionsView,
                    countVisibleMobileColumns: this.countVisibleMobileColumns,
                    disabledPreview: this.disabledPreview,
                    disabledPreviewRowCallback: this.disabledPreviewRowCallback,
                    disabledRowActions: this.disabledRowActions,
                    isFooter: !1,
                    isPreviewDownOpen: this.previewDownRowIds[n],
                    isRowActionsStickyLocal: this.isRowActionsStickyLocal,
                    isTree: this.isTree,
                    isTreeCollapsible: this.isTreeCollapsible,
                    isTreeOpened: this.isTreeOpened,
                    keyChildren: this.keyChildren,
                    keyId: this.keyId,
                    level: 1,
                    row: e,
                    rowActionsClass: this.rowActionsClass,
                    rowClass: this.rowClass,
                    rowIndex: t,
                    rowsLength: this.rowsLocal.length,
                    selectedRowsIndexes: this.selectedRowsIndexes,
                    onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
                  }, {
                    get: (r) => [
                      c(Md, {
                        data: r.row,
                        keyLabel: r.column.keyLabel,
                        filter: r.column.filter,
                        filterParameters: r.column.filterParameters,
                        defaultValue: r.column.defaultValue,
                        tag: r.column.filterTag || "div"
                      })
                    ],
                    ...this.$slots
                  });
                })
              }),
              this.isViewTableVisible && !this.hasRows && c(pe, {
                class: "a_table__empty_text",
                text: this.emptyText
              }),
              this.hasRowsFooter && c("div", {
                class: "a_table__footer",
                role: this.tableChildRole
              }, this.rowsFooter.map((e, t) => {
                const n = Xo({ row: e, rowIndex: t, keyId: this.keyId });
                return c(ep, {
                  key: n,
                  allVisibleMobileColumns: this.allVisibleMobileColumns,
                  areAllRowsSelected: this.areAllRowsSelected,
                  columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
                  columnActionsView: this.columnActionsView,
                  countVisibleMobileColumns: this.countVisibleMobileColumns,
                  disabledPreview: this.disabledPreview,
                  disabledPreviewRowCallback: this.disabledPreviewRowCallback,
                  disabledRowActions: this.disabledRowActions,
                  isFooter: !0,
                  isRowActionsStickyLocal: this.isRowActionsStickyLocal,
                  isTree: this.isTree,
                  isTreeCollapsible: this.isTreeCollapsible,
                  isTreeOpened: this.isTreeOpened,
                  keyChildren: this.keyChildren,
                  keyId: this.keyId,
                  level: 1,
                  row: e,
                  rowActionsClass: this.rowActionsClass,
                  rowClass: this.rowClass,
                  rowIndex: t,
                  rowsLength: this.rowsFooter.length,
                  selectedRowsIndexes: this.selectedRowsIndexes,
                  onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
                }, {
                  get: (r) => [
                    c(Md, {
                      data: r.row,
                      keyLabel: r.column.footerPath,
                      filter: r.column.footerFilter,
                      filterParameters: r.column.footerFilterParameters,
                      defaultValue: r.column.footerDefaultValue
                    })
                  ],
                  ...this.$slots
                });
              }))
            ])
          ])
        ]),
        !this.isViewTableVisible && this.viewCurrent && this.$slots[this.viewCurrent.type] && this.$slots[this.viewCurrent.type]({
          isLoading: this.isLoadingTable,
          rows: this.rowsLocalAll
        }),
        this.usePaginationLocal && c(cU, {
          countAllRows: this.countAllRowsLocal,
          disabled: this.pagination.disabled,
          hasRows: this.hasRows,
          limit: this.limit,
          limitsPerPage: this.pagination.limitsPerPage,
          maxPages: this.pagination.maxPages,
          offset: this.offset,
          rowsLength: this.rowsLocalLength,
          totalRowsCount: this.totalRowsCount,
          "onUpdate:limit": this.changeLimit,
          "onUpdate:offset": this.changeOffset
        }),
        this.isPreviewRightOpen && c(EW, {
          countAllRows: this.countAllRowsLocal,
          isMobile: this.isMobile,
          isLoadingTable: this.isLoadingTable,
          limitPagination: this.limit,
          offsetPagination: this.offset,
          previewStyles: this.previewStyles,
          rowIndex: this.previewRightRowIndex,
          rows: this.rowsLocalAll,
          disabledPreviewRowCallback: this.disabledPreviewRowCallback,
          usePagination: !!this.usePaginationLocal,
          onClosePreview: this.closePreview,
          onMousedownResizePreviewRight: this.mousedownResizePreviewRight,
          onMousemoveResizePreviewRight: this.mousemoveResizePreviewRight,
          onMouseupResizePreviewRight: this.mouseupResizePreviewRight,
          onTogglePreview: this.onTogglePreview,
          onTogglePreviewResize: this.togglePreviewResize,
          "onUpdate:offset": this.changeOffset
        }, this.$slots)
      ])
    ]);
  }
};
function im(e) {
  const t = f(e, "activeTabIdLocal"), n = f(e, "index"), r = f(e, "keyId"), a = f(e, "parentId"), l = f(e, "tab"), o = _(() => r.value ? de(l.value, r.value) : n.value), u = _(() => t.value === o.value), h = _(() => `${a.value}_${n.value}`);
  return {
    idForContent: _(() => `${h.value}_content`),
    idLocal: h,
    isActive: u,
    tabIdLocal: o
  };
}
function cV(e) {
  const t = f(e, "tab"), n = f(e, "keyContent");
  return {
    contentLocal: _(() => {
      if (n.value)
        return de(t.value, n.value);
    })
  };
}
const fV = {
  name: "ATabsContent",
  props: {
    activeTabIdLocal: {
      type: [String, Number],
      required: !0
    },
    index: {
      type: Number,
      required: !0
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    parentId: {
      type: String,
      required: !0
    },
    tab: {
      type: Object,
      required: !0
    }
  },
  setup(e) {
    const {
      idForContent: t,
      idLocal: n,
      isActive: r,
      tabIdLocal: a
    } = im(e), {
      contentLocal: l
    } = cV(e);
    return {
      contentLocal: l,
      idForContent: t,
      idLocal: n,
      isActive: r,
      tabIdLocal: a
    };
  },
  render() {
    let e = "";
    return this.tab.slotContent && this.$slots[this.tab.slotContent] ? e = this.$slots[this.tab.slotContent]({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.$slots.content ? e = this.$slots.content({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.contentLocal && (e = c(pe, {
      html: this.contentLocal
    })), c("div", {
      id: this.idForContent,
      "aria-labelledby": this.idLocal,
      class: [
        "a_tabs__content",
        {
          a_tabs__content_show: this.isActive
        }
      ],
      role: "tabpanel"
    }, [
      e
    ]);
  }
};
function hV({
  isDisabled: e = _(() => !1)
}) {
  return {
    tabindexLocal: _(() => e.value ? -1 : 0)
  };
}
function AV(e, { emit: t }, {
  isDisabled: n = _(() => !1),
  tabIdLocal: r = _(() => "")
}) {
  const a = f(e, "index"), l = f(e, "tab"), o = (h) => {
    n.value || t("changeTab", { $event: h, tab: l.value, tabId: r.value, index: a.value });
  };
  return {
    changeTabLocal: o,
    keydownTab: (h) => {
      (h.keyCode === X.enter || h.keyCode === X.space) && (o(h), h.stopPropagation(), h.preventDefault());
    }
  };
}
function EV(e) {
  const t = f(e, "disabled"), n = f(e, "keyDisabled"), r = f(e, "tab");
  return {
    isDisabled: _(() => {
      if (t.value || n.value && de(r.value, n.value) === !0)
        return !0;
    })
  };
}
function pV(e) {
  const t = f(e, "tab"), n = f(e, "keyLabel");
  return {
    labelLocal: _(() => {
      if (n.value)
        return de(t.value, n.value);
    })
  };
}
function TV(e) {
  const t = f(e, "tab"), n = f(e, "keyTitle");
  return {
    titleLocal: _(() => {
      if (n.value)
        return de(t.value, n.value);
    })
  };
}
const SV = {
  name: "ATabsTab",
  props: {
    activeTabIdLocal: {
      type: [String, Number],
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    index: {
      type: Number,
      required: !0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyTitle: {
      type: String,
      required: !1,
      default: "title"
    },
    parentId: {
      type: String,
      required: !0
    },
    tab: {
      type: Object,
      required: !0
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Lr.indexOf(e) !== -1
    }
  },
  emits: [
    "changeTab"
  ],
  setup(e, t) {
    const {
      idForContent: n,
      idLocal: r,
      isActive: a,
      tabIdLocal: l
    } = im(e), {
      isDisabled: o
    } = EV(e), {
      tabindexLocal: u
    } = hV({
      isDisabled: o
    }), {
      changeTabLocal: h,
      keydownTab: A
    } = AV(e, t, {
      isDisabled: o,
      tabIdLocal: l
    }), {
      labelLocal: E
    } = pV(e), {
      titleLocal: p
    } = TV(e);
    return {
      changeTabLocal: h,
      idForContent: n,
      idLocal: r,
      isActive: a,
      isDisabled: o,
      keydownTab: A,
      labelLocal: E,
      tabindexLocal: u,
      tabIdLocal: l,
      titleLocal: p
    };
  },
  render() {
    let e = "";
    return this.tab.slotTab && this.$slots[this.tab.slotTab] ? e = this.$slots[this.tab.slotTab]({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.$slots.tab ? e = this.$slots.tab({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.labelLocal && (e = c(pe, {
      html: this.labelLocal,
      tag: "span"
    })), c("li", {
      class: [
        "a_tabs__list__item",
        this.tab.classLi
      ]
    }, [
      c(Oe, {
        id: this.idLocal,
        "aria-controls": this.idForContent,
        ariaDisabled: this.isDisabled,
        ariaSelected: this.isActive,
        class: [
          "a_tabs__list__link",
          this.tab.class,
          {
            a_tabs__list__link_active: this.isActive,
            a_tabs__list__link_disabled: this.isDisabled
          }
        ],
        classDefault: "",
        isTitleHtml: this.isTitleHtml,
        role: "tab",
        tabindex: this.tabindexLocal,
        tag: "a",
        titlePlacement: this.titlePlacement,
        type: "button",
        title: this.titleLocal,
        onClick: this.changeTabLocal,
        onKeydown: this.keydownTab
      }, () => [
        e
      ])
    ]);
  }
};
function mV(e, { emit: t }) {
  const n = f(e, "activeTabId"), r = f(e, "data"), a = f(e, "isChangeOutside"), l = f(e, "keyActive"), o = f(e, "keyId"), u = B(void 0), h = () => {
    ae(n.value) || (u.value = n.value);
  };
  return {
    activeTabIdLocal: u,
    changeTab: ({ $event: p, tab: T, tabId: m, index: b }) => {
      u.value !== m && (a.value || (u.value = m), t("change", { $event: p, tab: T, tabId: m, index: b }));
    },
    initActiveTabIdLocal: () => {
      h(), ae(u.value) && (l.value && (Y(r.value, (p, T) => {
        if (de(p, l.value))
          return o.value ? u.value = de(p, o.value) || T : u.value = T, !1;
      }), !ae(u.value)) || (o.value ? u.value = de(r.value, `[0].${o.value}`) || 0 : u.value = 0));
    },
    setActiveTabIdLocal: h
  };
}
const iue = {
  name: "ATabs",
  props: {
    activeTabId: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => ot("a_tabs_")
    },
    isBoxed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isChangeOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isVertical: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyActive: {
      type: String,
      required: !1,
      default: "active"
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyTitle: {
      type: String,
      required: !1,
      default: "title"
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Lr.indexOf(e) !== -1
    }
  },
  emits: [
    "change"
  ],
  setup(e, t) {
    const n = f(e, "activeTabId"), {
      activeTabIdLocal: r,
      changeTab: a,
      initActiveTabIdLocal: l,
      setActiveTabIdLocal: o
    } = mV(e, t);
    return l(), tt(n, () => {
      o();
    }), {
      activeTabIdLocal: r,
      changeTab: a
    };
  },
  render() {
    return c("div", {
      id: this.id,
      class: ["a_tabs", {
        a_tabs_boxed: this.isBoxed,
        a_tabs_vertical: this.isVertical
      }]
    }, [
      c("div", {
        class: "a_tabs__box"
      }, [
        c("ul", {
          class: "a_tabs__list",
          role: "tablist"
        }, [
          this.data.map((e, t) => c(SV, {
            key: t,
            activeTabIdLocal: this.activeTabIdLocal,
            disabled: this.disabled,
            index: t,
            isTitleHtml: this.isTitleHtml,
            keyDisabled: this.keyDisabled,
            keyId: this.keyId,
            keyLabel: this.keyLabel,
            keyTitle: this.keyTitle,
            parentId: this.id,
            tab: e,
            titlePlacement: this.titlePlacement,
            onChangeTab: this.changeTab
          }, this.$slots))
        ])
      ]),
      c("div", {
        class: "a_tabs__contents"
      }, [
        this.data.map((e, t) => c(fV, {
          key: t,
          activeTabIdLocal: this.activeTabIdLocal,
          index: t,
          keyContent: this.keyContent,
          keyId: this.keyId,
          parentId: this.id,
          tab: e
        }, this.$slots))
      ])
    ]);
  }
}, Xa = B({
  propsDefault: {},
  config: {
    isHtmlTitleSort: !1,
    headerTopGroups: [
      {
        props: {},
        children: [
          {
            component: "filterMain",
            props: {}
          },
          {
            component: "buttonSearch",
            props: {}
          },
          {
            component: "buttonToggle",
            props: {}
          }
        ]
      },
      {
        props: {},
        children: [
          {
            component: "selectFiltersSaved",
            props: {}
          },
          {
            component: "buttonSaveTop",
            props: {}
          },
          {
            component: "buttonDeleteFiltersSaved",
            props: {}
          }
        ]
      }
    ],
    headerBottomGroups: [
      {
        props: {},
        children: [
          {
            component: "addFilterSelect",
            props: {}
          },
          {
            component: "buttonSearch",
            props: {}
          }
        ]
      }
    ]
  }
});
_(() => {
  const e = {};
  return Y(Xa.value.config.headerTopGroups, (t) => {
    Y(t.children, (n) => {
      e[n.component] = n.props;
    });
  }), Y(Xa.value.config.headerBottomGroups, (t) => {
    Y(t.children, (n) => {
      e[n.component] = n.props;
    });
  }), e;
});
const aue = {
  install: (e, {
    propsDefault: t = {},
    config: n = {}
  } = {}) => {
    Xa.value.propsDefault = {
      ...Xa.value.propsDefault,
      ...t
    }, Xa.value.config = {
      ...Xa.value.config,
      ...n
    };
  }
}, sue = {
  install: (e, { axiosCreateOptions: t = {}, baseUrl: n = "/api/", errorCallbacks: r = {}, headerParams: a = {}, setUrlForArray: l = void 0 } = {}) => {
    qF({ axiosCreateOptions: t }), $F({ baseUrl: n }), kF({ errorCallbacks: r }), HF({ headerParams: a }), qe(l) && (fS.value.setUrlForArray = l);
  }
}, lue = {
  install: (e, t) => {
    e.provide("$aloha", t);
  }
}, oue = {
  install: (e, {
    breakpoint: t
  } = {}) => {
    yo(window.innerWidth <= t);
    const n = () => {
      window.innerWidth > t ? qo.value && yo(!1) : qo.value || yo(!0);
    };
    window.addEventListener("resize", n);
  }
}, uue = {
  install: (e, t = "") => {
    QH(t);
  }
};
function am(e, t, n) {
  function r(o) {
    return o.toString(16);
  }
  function a(o) {
    return parseInt(o, 16);
  }
  e = e.replace(/#/g, ""), t = t.replace(/#/g, ""), n = typeof n < "u" ? n : 50;
  let l = "#";
  for (let o = 0; o <= 5; o += 2) {
    const u = a(e.substr(o, 2)), h = a(t.substr(o, 2));
    let A = r(Math.round(h + (u - h) * (n / 100)));
    for (; A.length < 2; )
      A = "0" + A;
    l += A;
  }
  return l;
}
function _ue(e, t) {
  return am("#ffffff", e, t);
}
function due(e, t) {
  return am("#000000", e, t);
}
function od(e) {
  const t = e.toString(16);
  return t.length === 1 ? `0${t}` : t;
}
function cue(e, t, n) {
  return `#${od(e)}${od(t)}${od(n)}`;
}
function fue(e, t = !1) {
  const n = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
  if (!n)
    return null;
  const r = parseInt(n[1], 16), a = parseInt(n[2], 16), l = parseInt(n[3], 16);
  return t ? `${r}, ${a}, ${l}` : {
    r,
    g: a,
    b: l
  };
}
const bV = "غلق", LV = "يكمل", vV = "مواد لكل صفحة", IV = "مزيد من الإجراءات", gV = "التالي", yV = "لا", RV = "سابق", OV = "إزالة المحتوى", CV = "إزالة التحديد", NV = "قائمة البحث", DV = "نعم", BV = {
  "_ADD_NOTIFICATION_{{type}}_": "إضافة إشعار {{ type }}",
  _ALERT_CLOSE_: bV,
  _CONTINUE_: LV,
  _ITEMS_PER_PAGE_: vV,
  _MORE_ACTIONS_: IV,
  _NEXT_: gV,
  _NO_: yV,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ count}} من {{ current }} - {{ start }}",
  _PREVIOUS_: RV,
  _REMOVE_FIELD_CONTENT_: OV,
  _REMOVE_SELECTION_: CV,
  _SEARCH_MENU_: NV,
  _YES_: DV
}, wV = "Schließen", PV = "Fortfahren", xV = "Objekte pro Seite", FV = "Weitere Aktionen", MV = "Nächste", qV = "Nein", $V = "Vorherige", kV = "Feldinhalt entfernen", HV = "Auswahl entfernen", UV = "Menüsuche", WV = "[Keine Auswahl]", VV = "Ja", GV = {
  "_ADD_NOTIFICATION_{{type}}_": "Benachrichtigung hinzufügen {{ type }}",
  _ALERT_CLOSE_: wV,
  _CONTINUE_: PV,
  _ITEMS_PER_PAGE_: xV,
  _MORE_ACTIONS_: FV,
  _NEXT_: MV,
  _NO_: qV,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} von {{ count}}",
  _PREVIOUS_: $V,
  _REMOVE_FIELD_CONTENT_: kV,
  _REMOVE_SELECTION_: HV,
  _SEARCH_MENU_: UV,
  _SELECT_TEXT_EMPTY_: WV,
  _YES_: VV
}, jV = "Close", zV = "Continue", KV = "Items per page", YV = "more actions", ZV = "Next", XV = "No", JV = "Previous", QV = "Remove field content", e2 = "remove selection", t2 = "Search menu", n2 = "[No selection]", r2 = "Yes", i2 = {
  "_ADD_NOTIFICATION_{{type}}_": "Add Notification {{ type }}",
  _ALERT_CLOSE_: jV,
  _CONTINUE_: zV,
  _ITEMS_PER_PAGE_: KV,
  _MORE_ACTIONS_: YV,
  _NEXT_: ZV,
  _NO_: XV,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} from {{ count}}",
  _PREVIOUS_: JV,
  _REMOVE_FIELD_CONTENT_: QV,
  _REMOVE_SELECTION_: e2,
  _SEARCH_MENU_: t2,
  _SELECT_TEXT_EMPTY_: n2,
  _YES_: r2
}, a2 = "Cerrar", s2 = "Continuar", l2 = "Artículos por página", o2 = "Otras acciones", u2 = "Próximo", _2 = "No", d2 = "Previo", c2 = "Quitar el contenido del campo", f2 = "eliminar selección", h2 = "Menú de búsqueda", A2 = "Sí", E2 = {
  "_ADD_NOTIFICATION_{{type}}_": "Agregar Notificación {{ type }}",
  _ALERT_CLOSE_: a2,
  _CONTINUE_: s2,
  _ITEMS_PER_PAGE_: l2,
  _MORE_ACTIONS_: o2,
  _NEXT_: u2,
  _NO_: _2,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} de {{ count}}",
  _PREVIOUS_: d2,
  _REMOVE_FIELD_CONTENT_: c2,
  _REMOVE_SELECTION_: f2,
  _SEARCH_MENU_: h2,
  _YES_: A2
}, p2 = "Fermer", T2 = "Continuer", S2 = "objets par page", m2 = "autres actions", b2 = "Suivant", L2 = "Non", v2 = "Précédent", I2 = "Supprimer le contenu du champ", g2 = "supprimer la sélection", y2 = "Menu de recherche", R2 = "Oui", O2 = {
  "_ADD_NOTIFICATION_{{type}}_": "Ajouter notification {{ type }}",
  _ALERT_CLOSE_: p2,
  _CONTINUE_: T2,
  _ITEMS_PER_PAGE_: S2,
  _MORE_ACTIONS_: m2,
  _NEXT_: b2,
  _NO_: L2,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} depuis {{ count}}",
  _PREVIOUS_: v2,
  _REMOVE_FIELD_CONTENT_: I2,
  _REMOVE_SELECTION_: g2,
  _SEARCH_MENU_: y2,
  _YES_: R2
}, C2 = "Zatvori", N2 = "Nastaviti", D2 = "Stavke po stranici", B2 = "Daljnje akcije", w2 = "Sljedeći", P2 = "Ne", x2 = "Prethodni", F2 = "Izbrišite sadržaj polja", M2 = "Ukloniti odabir", q2 = "Pretraživanje izbornika", $2 = "[Bez odabira]", k2 = "Da", H2 = {
  "_ADD_NOTIFICATION_{{type}}_": "Dodaj obavijest {{ type }}",
  _ALERT_CLOSE_: C2,
  _CONTINUE_: N2,
  _ITEMS_PER_PAGE_: D2,
  _MORE_ACTIONS_: B2,
  _NEXT_: w2,
  _NO_: P2,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} iz {{ count}}",
  _PREVIOUS_: x2,
  _REMOVE_FIELD_CONTENT_: F2,
  _REMOVE_SELECTION_: M2,
  _SEARCH_MENU_: q2,
  _SELECT_TEXT_EMPTY_: $2,
  _YES_: k2
}, U2 = "Vicino", W2 = "Continua", V2 = "oggetti per pagina", G2 = "Ulteriori azioni", j2 = "Prossimo", z2 = "No", K2 = "Precedente", Y2 = "Rimuovi il contenuto del campo", Z2 = "rimuovere la selezione", X2 = "Menù di ricerca", J2 = "Sì", Q2 = {
  "_ADD_NOTIFICATION_{{type}}_": "Aggiungi notifica {{ type }}",
  _ALERT_CLOSE_: U2,
  _CONTINUE_: W2,
  _ITEMS_PER_PAGE_: V2,
  _MORE_ACTIONS_: G2,
  _NEXT_: j2,
  _NO_: z2,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} da {{ count}}",
  _PREVIOUS_: K2,
  _REMOVE_FIELD_CONTENT_: Y2,
  _REMOVE_SELECTION_: Z2,
  _SEARCH_MENU_: X2,
  _YES_: J2
}, e5 = "Закрыть", t5 = "Продолжать", n5 = "Элементов на странице", r5 = "Дальнейшие действия", i5 = "Следующий", a5 = "Нет", s5 = "Предыдущий", l5 = "Удалить содержимое поля", o5 = "удалить выделение", u5 = "Быстрый поиск", _5 = "поиск в меню", d5 = "[Нет элементов]", c5 = "Да", f5 = {
  "_ADD_NOTIFICATION_{{type}}_": "Добавить Уведомление {{ type }}",
  _ALERT_CLOSE_: e5,
  _CONTINUE_: t5,
  _ITEMS_PER_PAGE_: n5,
  _MORE_ACTIONS_: r5,
  _NEXT_: i5,
  _NO_: a5,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} из {{ count}}",
  _PREVIOUS_: s5,
  _REMOVE_FIELD_CONTENT_: l5,
  _REMOVE_SELECTION_: o5,
  _SCHNELLSUCHE_: u5,
  _SEARCH_MENU_: _5,
  _SELECT_TEXT_EMPTY_: d5,
  _YES_: c5
}, h5 = "[لا توجد عناصر متاحة للاختيار]", A5 = "بحث", E5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: h5,
  _A_CHECKBOX_SEARCH_: A5
}, p5 = "[Keine Elemente zur Auswahl verfügbar]", T5 = "Suche", S5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: p5,
  _A_CHECKBOX_SEARCH_: T5
}, m5 = "[No items available for selection]", b5 = "Search", L5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: m5,
  _A_CHECKBOX_SEARCH_: b5
}, v5 = "[No hay elementos disponibles para seleccionar]", I5 = "Buscar", g5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: v5,
  _A_CHECKBOX_SEARCH_: I5
}, y5 = "[Aucun élément disponible pour la sélection]", R5 = "Recherche", O5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: y5,
  _A_CHECKBOX_SEARCH_: R5
}, C5 = "[Nema dostupnih elemenata za odabir]", N5 = "Pretraživanje", D5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: C5,
  _A_CHECKBOX_SEARCH_: N5
}, B5 = "[Nessun elemento disponibile per la selezione]", w5 = "Cerca", P5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: B5,
  _A_CHECKBOX_SEARCH_: w5
}, x5 = "[Нет элементов для выбора]", F5 = "Поиск", M5 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: x5,
  _A_CHECKBOX_SEARCH_: F5
}, Ci = {
  ar: E5,
  de: S5,
  en: L5,
  es: g5,
  fr: O5,
  hr: D5,
  it: P5,
  ru: M5
}, q5 = "من", $5 = "إلى", k5 = {
  _A_DATEPICKER_RANGE_FROM_: q5,
  _A_DATEPICKER_RANGE_UNTIL_: $5
}, H5 = "von", U5 = "bis", W5 = {
  _A_DATEPICKER_RANGE_FROM_: H5,
  _A_DATEPICKER_RANGE_UNTIL_: U5
}, V5 = "from", G5 = "until", j5 = {
  _A_DATEPICKER_RANGE_FROM_: V5,
  _A_DATEPICKER_RANGE_UNTIL_: G5
}, z5 = "desde", K5 = "hasta", Y5 = {
  _A_DATEPICKER_RANGE_FROM_: z5,
  _A_DATEPICKER_RANGE_UNTIL_: K5
}, Z5 = "de", X5 = "à", J5 = {
  _A_DATEPICKER_RANGE_FROM_: Z5,
  _A_DATEPICKER_RANGE_UNTIL_: X5
}, Q5 = "od", e3 = "do", t3 = {
  _A_DATEPICKER_RANGE_FROM_: Q5,
  _A_DATEPICKER_RANGE_UNTIL_: e3
}, n3 = "da", r3 = "a", i3 = {
  _A_DATEPICKER_RANGE_FROM_: n3,
  _A_DATEPICKER_RANGE_UNTIL_: r3
}, a3 = "с", s3 = "по", l3 = {
  _A_DATEPICKER_RANGE_FROM_: a3,
  _A_DATEPICKER_RANGE_UNTIL_: s3
}, Ni = {
  ar: k5,
  de: W5,
  en: j5,
  es: Y5,
  fr: J5,
  hr: t3,
  it: i3,
  ru: l3
}, o3 = "إظهار أقل", u3 = "أظهر المزيد", _3 = {
  _A_DISCLOSURE_LESS_: o3,
  _A_DISCLOSURE_MORE_: u3
}, d3 = "Mehr anzeigen", c3 = "Weniger anzeigen", f3 = {
  _A_DISCLOSURE_MORE_: d3,
  _A_DISCLOSURE_LESS_: c3
}, h3 = "Show less", A3 = "Show more", E3 = {
  _A_DISCLOSURE_LESS_: h3,
  _A_DISCLOSURE_MORE_: A3
}, p3 = "Mostrar menos", T3 = "Mostrar más", S3 = {
  _A_DISCLOSURE_LESS_: p3,
  _A_DISCLOSURE_MORE_: T3
}, m3 = "Afficher moins", b3 = "Afficher plus", L3 = {
  _A_DISCLOSURE_LESS_: m3,
  _A_DISCLOSURE_MORE_: b3
}, v3 = "Prikaži manje", I3 = "Prikaži više", g3 = {
  _A_DISCLOSURE_LESS_: v3,
  _A_DISCLOSURE_MORE_: I3
}, y3 = "Mostra meno", R3 = "Mostra di più", O3 = {
  _A_DISCLOSURE_LESS_: y3,
  _A_DISCLOSURE_MORE_: R3
}, C3 = "Показать меньше", N3 = "Показать больше", D3 = {
  _A_DISCLOSURE_LESS_: C3,
  _A_DISCLOSURE_MORE_: N3
}, Di = {
  ar: _3,
  de: f3,
  en: E3,
  es: S3,
  fr: L3,
  hr: g3,
  it: O3,
  ru: D3
}, B3 = "افتح", w3 = "اغلق", P3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: B3,
  _A_FIELDSET_COLLAPSE_CLOSE_: w3
}, x3 = "Ausklappen", F3 = "Einklappen", M3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: x3,
  _A_FIELDSET_COLLAPSE_CLOSE_: F3
}, q3 = "Open", $3 = "Close", k3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: q3,
  _A_FIELDSET_COLLAPSE_CLOSE_: $3
}, H3 = "Abrir", U3 = "Cerrar", W3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: H3,
  _A_FIELDSET_COLLAPSE_CLOSE_: U3
}, V3 = "Ouvrir", G3 = "Fermer", j3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: V3,
  _A_FIELDSET_COLLAPSE_CLOSE_: G3
}, z3 = "Otvori", K3 = "Zatvori", Y3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: z3,
  _A_FIELDSET_COLLAPSE_CLOSE_: K3
}, Z3 = "Apri", X3 = "Chiudi", J3 = {
  _A_FIELDSET_COLLAPSE_OPEN_: Z3,
  _A_FIELDSET_COLLAPSE_CLOSE_: X3
}, Q3 = "Открыть", e4 = "Закрыть", t4 = {
  _A_FIELDSET_COLLAPSE_OPEN_: Q3,
  _A_FIELDSET_COLLAPSE_CLOSE_: e4
}, Bi = {
  ar: P3,
  de: M3,
  en: k3,
  es: W3,
  fr: j3,
  hr: Y3,
  it: J3,
  ru: t4
}, n4 = "_A_FILTERS_ADD_FILTER_", r4 = "إغلاق البحث المتقدم", i4 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", a4 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", s4 = "افتح البحث المتقدم", l4 = "_A_FILTERS_SAVE_BTN_", o4 = "_A_FILTERS_SAVE_LABEL_NAME_", u4 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", _4 = "_A_FILTERS_SAVE_MODAL_HEADER_", d4 = "_A_FILTERS_SAVE_MSG_ERROR_", c4 = "_A_FILTERS_SAVE_SELECT_", f4 = "ابدأ البحث", h4 = "_A_FILTERS_TOP_CLOSE_", A4 = {
  _A_FILTERS_ADD_FILTER_: n4,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: r4,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: i4,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: a4,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: s4,
  _A_FILTERS_SAVE_BTN_: l4,
  _A_FILTERS_SAVE_LABEL_NAME_: o4,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: u4,
  _A_FILTERS_SAVE_MODAL_HEADER_: _4,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: d4,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: c4,
  _A_FILTERS_START_SEARCH_: f4,
  _A_FILTERS_TOP_CLOSE_: h4
}, E4 = "Neues Filterkriterium", p4 = "Löschen", T4 = "Ausgewählten Filter löschen", S4 = "Ausgewählten Filter kann nicht gelöscht werden. (Gespeicherter Filter nicht ausgewählt)", m4 = "Filter löschen", b4 = "Zurücksetzen", L4 = "Meine Filter", v4 = "Schließen", I4 = "Filter:", g4 = "Neu", y4 = "Filter speichern", R4 = "Name", O4 = "Bitte geben Sie einen Namen für den zu speichernden Filter ein. Bei Eingabe eines bestehenden Namens wird der bereits gespeicherte Filter aktualisiert. Bei Eingabe eines neuen Namens wird ein neuer Filter gespeichert.", C4 = "Filter speichern", N4 = "Filter konnte nicht gespeichert werden.", D4 = "Gespeicherte Filter", B4 = "Suchen", w4 = "Filterkriterium entfernen", P4 = {
  _A_FILTERS_ADD_FILTER_: E4,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "Sind Sie sicher, dass Sie diese gespeicherten Filter <strong>{{ name }}</strong> löschen wollen?",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: p4,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "Gespeicherten Filter löschen",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "Ausgewählter Filter <strong>{{ name }}</strong> konnte nicht entfernt werden.",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "Ausgewählter Filter <strong>{{ name }}</strong> wurde entfernt.",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_: T4,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: S4,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_: m4,
  _A_FILTERS_DESELECT_ALL_: b4,
  _A_FILTERS_FILTER_SAVED_GROUP_MY_: L4,
  _A_FILTERS_HOR_CLOSE_DROPDOWN_: v4,
  "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_": "Filterwert {{ filterValue }} für Filter löschen: {{ filterLabel }}",
  _A_FILTERS_HOR_FILTER_HEADER_: I4,
  _A_FILTERS_HOR_FILTER_NEW_: g4,
  "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_": "Filter öffnen: {{ filterLabel }} mit Wert {{ filterValue }}",
  _A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_: y4,
  _A_FILTERS_SAVE_LABEL_NAME_: R4,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: O4,
  _A_FILTERS_SAVE_MODAL_HEADER_: C4,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": 'Der Filter mit dem Namen <strong>"{{ name }}"</strong> wird beim Speichern aktualisiert.',
  _A_FILTERS_SAVE_MSG_ERROR_: N4,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": 'Neuer Filter <strong>"{{ name }}"</strong> ist gespeichert.',
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": 'Filter <strong>"{{ name }}"</strong> ist aktualisiert.',
  _A_FILTERS_SAVE_SELECT_: D4,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} ausgewählt",
  _A_FILTERS_START_SEARCH_: B4,
  _A_FILTERS_TOP_CLOSE_: w4
}, x4 = "_A_FILTERS_ADD_FILTER_", F4 = "Close advanced search", M4 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", q4 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", $4 = "Reset selection", k4 = "Open advanced search", H4 = "_A_FILTERS_SAVE_BTN_", U4 = "_A_FILTERS_SAVE_LABEL_NAME_", W4 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", V4 = "_A_FILTERS_SAVE_MODAL_HEADER_", G4 = "_A_FILTERS_SAVE_MSG_ERROR_", j4 = "My saved searches", z4 = "start search", K4 = "_A_FILTERS_TOP_CLOSE_", Y4 = "Your selection", Z4 = {
  _A_FILTERS_ADD_FILTER_: x4,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: F4,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: M4,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: q4,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_DESELECT_ALL_: $4,
  "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_": "Clear filter value {{ filterValue }} for filter: {{ filterLabel }}",
  "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_": "Open filter: {{ filterLabel }} with value {{ filterValue }}",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: k4,
  _A_FILTERS_SAVE_BTN_: H4,
  _A_FILTERS_SAVE_LABEL_NAME_: U4,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: W4,
  _A_FILTERS_SAVE_MODAL_HEADER_: V4,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: G4,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: j4,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} selected",
  _A_FILTERS_START_SEARCH_: z4,
  _A_FILTERS_TOP_CLOSE_: K4,
  _A_FILTERS_YOUR_SELECTION_: Y4
}, X4 = "_A_FILTERS_ADD_FILTER_", J4 = "Cerrar búsqueda avanzada", Q4 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", e6 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", t6 = "Abrir búsqueda avanzada", n6 = "_A_FILTERS_SAVE_BTN_", r6 = "_A_FILTERS_SAVE_LABEL_NAME_", i6 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", a6 = "_A_FILTERS_SAVE_MODAL_HEADER_", s6 = "_A_FILTERS_SAVE_MSG_ERROR_", l6 = "_A_FILTERS_SAVE_SELECT_", o6 = "iniciar busqueda", u6 = "_A_FILTERS_TOP_CLOSE_", _6 = {
  _A_FILTERS_ADD_FILTER_: X4,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: J4,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: Q4,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: e6,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: t6,
  _A_FILTERS_SAVE_BTN_: n6,
  _A_FILTERS_SAVE_LABEL_NAME_: r6,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: i6,
  _A_FILTERS_SAVE_MODAL_HEADER_: a6,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: s6,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: l6,
  _A_FILTERS_START_SEARCH_: o6,
  _A_FILTERS_TOP_CLOSE_: u6
}, d6 = "_A_FILTERS_ADD_FILTER_", c6 = "Fermer la recherche avancée", f6 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", h6 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", A6 = "Ouvrir la recherche avancée", E6 = "_A_FILTERS_SAVE_BTN_", p6 = "_A_FILTERS_SAVE_LABEL_NAME_", T6 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", S6 = "_A_FILTERS_SAVE_MODAL_HEADER_", m6 = "_A_FILTERS_SAVE_MSG_ERROR_", b6 = "_A_FILTERS_SAVE_SELECT_", L6 = "lancer la recherche", v6 = "_A_FILTERS_TOP_CLOSE_", I6 = {
  _A_FILTERS_ADD_FILTER_: d6,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: c6,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: f6,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: h6,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: A6,
  _A_FILTERS_SAVE_BTN_: E6,
  _A_FILTERS_SAVE_LABEL_NAME_: p6,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: T6,
  _A_FILTERS_SAVE_MODAL_HEADER_: S6,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: m6,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: b6,
  _A_FILTERS_START_SEARCH_: L6,
  _A_FILTERS_TOP_CLOSE_: v6
}, g6 = "_A_FILTERS_ADD_FILTER_", y6 = "Zatvorite napredno pretraživanje", R6 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", O6 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", C6 = "Otvorite napredno pretraživanje", N6 = "_A_FILTERS_SAVE_BTN_", D6 = "_A_FILTERS_SAVE_LABEL_NAME_", B6 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", w6 = "_A_FILTERS_SAVE_MODAL_HEADER_", P6 = "_A_FILTERS_SAVE_MSG_ERROR_", x6 = "_A_FILTERS_SAVE_SELECT_", F6 = "Započnite pretragu", M6 = "_A_FILTERS_TOP_CLOSE_", q6 = {
  _A_FILTERS_ADD_FILTER_: g6,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: y6,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: R6,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: O6,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: C6,
  _A_FILTERS_SAVE_BTN_: N6,
  _A_FILTERS_SAVE_LABEL_NAME_: D6,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: B6,
  _A_FILTERS_SAVE_MODAL_HEADER_: w6,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: P6,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: x6,
  _A_FILTERS_START_SEARCH_: F6,
  _A_FILTERS_TOP_CLOSE_: M6
}, $6 = "_A_FILTERS_ADD_FILTER_", k6 = "Chiudi la ricerca avanzata", H6 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", U6 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", W6 = "Apri la ricerca avanzata", V6 = "_A_FILTERS_SAVE_BTN_", G6 = "_A_FILTERS_SAVE_LABEL_NAME_", j6 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", z6 = "_A_FILTERS_SAVE_MODAL_HEADER_", K6 = "_A_FILTERS_SAVE_MSG_ERROR_", Y6 = "_A_FILTERS_SAVE_SELECT_", Z6 = "Inizia la ricerca", X6 = "_A_FILTERS_TOP_CLOSE_", J6 = {
  _A_FILTERS_ADD_FILTER_: $6,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: k6,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: H6,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: U6,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: W6,
  _A_FILTERS_SAVE_BTN_: V6,
  _A_FILTERS_SAVE_LABEL_NAME_: G6,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: j6,
  _A_FILTERS_SAVE_MODAL_HEADER_: z6,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: K6,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: Y6,
  _A_FILTERS_START_SEARCH_: Z6,
  _A_FILTERS_TOP_CLOSE_: X6
}, Q6 = "Новое условие фильтра", eG = "Удалить", tG = "Удалить выбранный фильтр", nG = "Не удается удалить выбранный фильтр. (Сохраненный фильтр не выбран)", rG = "Удалить фильтр", iG = "Сбросить", aG = "Мои фильтры", sG = "Закрыть", lG = "Фильтр:", oG = "Новый", uG = "Сохранить фильтр", _G = "Имя", dG = "Пожалуйста, введите имя для сохраняемого фильтра. При вводе существующего имени, уже сохраненный фильтр будет обновлен. При вводе нового имени, будет сохранен новый фильтр.", cG = "Сохранить фильтр", fG = "Не удалось сохранить фильтр.", hG = "Сохраненные фильтры", AG = "Поиск", EG = "Удалить условие фильтра", pG = {
  _A_FILTERS_ADD_FILTER_: Q6,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "Вы уверены, что хотите удалить этот сохраненный фильтр <strong>{{ name }}</strong>?",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: eG,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "Удалить сохраненный фильтр",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "Не удалось удалить выбранный фильтр <strong>{{ name }}</strong>.",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "Выбранный фильтр <strong>{{ name }}</strong> был удален.",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_: tG,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: nG,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_: rG,
  _A_FILTERS_DESELECT_ALL_: iG,
  _A_FILTERS_FILTER_SAVED_GROUP_MY_: aG,
  _A_FILTERS_HOR_CLOSE_DROPDOWN_: sG,
  _A_FILTERS_HOR_FILTER_HEADER_: lG,
  _A_FILTERS_HOR_FILTER_NEW_: oG,
  _A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_: uG,
  _A_FILTERS_SAVE_LABEL_NAME_: _G,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: dG,
  _A_FILTERS_SAVE_MODAL_HEADER_: cG,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": 'Фильтр с именем <strong>"{{ name }}"</strong> будет обновлен при сохранении.',
  _A_FILTERS_SAVE_MSG_ERROR_: fG,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": 'Новый фильтр <strong>"{{ name }}"</strong> был сохранен.',
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": 'Фильтр <strong>"{{ name }}"</strong> был обновлен.',
  _A_FILTERS_SAVE_SELECT_: hG,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} выбрано",
  _A_FILTERS_START_SEARCH_: AG,
  _A_FILTERS_TOP_CLOSE_: EG
}, wi = {
  ar: A4,
  de: P4,
  en: Z4,
  es: _6,
  fr: I6,
  hr: q6,
  it: J6,
  ru: pG
}, TG = "عرض كلمة المرور", SG = "إخفاء كلمة المرور", mG = {
  _A_INPUT_SHOW_PASSWORD_: TG,
  _A_INPUT_HIDE_PASSWORD_: SG
}, bG = "Passwort anzeigen", LG = "Passwort verbergen", vG = {
  _A_INPUT_SHOW_PASSWORD_: bG,
  _A_INPUT_HIDE_PASSWORD_: LG
}, IG = "Show password", gG = "Hide password", yG = {
  _A_INPUT_SHOW_PASSWORD_: IG,
  _A_INPUT_HIDE_PASSWORD_: gG
}, RG = "Mostrar contraseña", OG = "Ocultar contraseña", CG = {
  _A_INPUT_SHOW_PASSWORD_: RG,
  _A_INPUT_HIDE_PASSWORD_: OG
}, NG = "Afficher le mot de passe", DG = "Masquer le mot de passe", BG = {
  _A_INPUT_SHOW_PASSWORD_: NG,
  _A_INPUT_HIDE_PASSWORD_: DG
}, wG = "Prikaži lozinku", PG = "Sakrij lozinku", xG = {
  _A_INPUT_SHOW_PASSWORD_: wG,
  _A_INPUT_HIDE_PASSWORD_: PG
}, FG = "Mostra password", MG = "Nascondi password", qG = {
  _A_INPUT_SHOW_PASSWORD_: FG,
  _A_INPUT_HIDE_PASSWORD_: MG
}, $G = "Показать пароль", kG = "Скрыть пароль", HG = {
  _A_INPUT_SHOW_PASSWORD_: $G,
  _A_INPUT_HIDE_PASSWORD_: kG
}, Pi = {
  ar: mG,
  de: vG,
  en: yG,
  es: CG,
  fr: BG,
  hr: xG,
  it: qG,
  ru: HG
}, UG = {}, WG = "von", VG = "bis", GG = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: WG,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: VG
}, jG = {}, zG = {}, KG = {}, YG = {}, ZG = {}, XG = {}, xi = {
  ar: UG,
  de: GG,
  en: jG,
  es: zG,
  fr: KG,
  hr: YG,
  it: ZG,
  ru: XG
}, JG = "نسخ إلى الحافظة", QG = "تم النسخ إلى الحافظة", e7 = {
  _A_LINK_COPY_BTN_TITLE_: JG,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: QG
}, t7 = "In die Zwischenablage kopieren", n7 = "In die Zwischenablage kopiert", r7 = {
  _A_LINK_COPY_BTN_TITLE_: t7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: n7
}, i7 = "Copy to clipboard", a7 = "Copied to clipboard", s7 = {
  _A_LINK_COPY_BTN_TITLE_: i7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: a7
}, l7 = "Copiar al portapapeles", o7 = "Copiado al portapapeles", u7 = {
  _A_LINK_COPY_BTN_TITLE_: l7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: o7
}, _7 = "Copier dans le presse-papiers", d7 = "Copié dans le presse-papiers", c7 = {
  _A_LINK_COPY_BTN_TITLE_: _7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: d7
}, f7 = "Kopiraj u međuspremnik", h7 = "Kopirano u međuspremnik", A7 = {
  _A_LINK_COPY_BTN_TITLE_: f7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: h7
}, E7 = "Copia negli appunti", p7 = "Copiato negli appunti", T7 = {
  _A_LINK_COPY_BTN_TITLE_: E7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: p7
}, S7 = "Скопировать в буфер обмена", m7 = "Скопировано в буфер обмена", b7 = {
  _A_LINK_COPY_BTN_TITLE_: S7,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: m7
}, Fi = {
  ar: e7,
  de: r7,
  en: s7,
  es: u7,
  fr: c7,
  hr: A7,
  it: T7,
  ru: b7
}, L7 = "قطع", v7 = "حفظ", I7 = "إغلاق النافذة المنبثقة (موجودة في الرأس)", g7 = "إغلاق النافذة المنبثقة (موجودة في التذييل)", y7 = "حفظ البيانات في النافذة المنبثقة", R7 = {
  _A_MODAL_BTN_CANCEL_: L7,
  _A_MODAL_BTN_SAVE_: v7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: I7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: g7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: y7
}, O7 = "Abbrechen", C7 = "Speichern", N7 = "Modales Fenster schließen (im Header angeordnet)", D7 = "Modales Fenster schließen (im Footer angeordnet)", B7 = "Daten im modalen Fenster speichern", w7 = {
  _A_MODAL_BTN_CANCEL_: O7,
  _A_MODAL_BTN_SAVE_: C7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: N7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: D7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: B7
}, P7 = "cancel", x7 = "save", F7 = "Close modal window (located in the header)", M7 = "Close modal window (located in the footer)", q7 = "Save data in the modal window", $7 = {
  _A_MODAL_BTN_CANCEL_: P7,
  _A_MODAL_BTN_SAVE_: x7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: F7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: M7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: q7
}, k7 = "Interrumpir", H7 = "Guardar", U7 = "Cerrar ventana modal (ubicada en el encabezado)", W7 = "Cerrar ventana modal (ubicada en el pie de página)", V7 = "Guardar los datos en la ventana modal", G7 = {
  _A_MODAL_BTN_CANCEL_: k7,
  _A_MODAL_BTN_SAVE_: H7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: U7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: W7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: V7
}, j7 = "Interrompre", z7 = "Enregistrer", K7 = "Fermer la fenêtre modale (située dans l'en-tête)", Y7 = "Fermer la fenêtre modale (située dans le pied de page)", Z7 = "Enregistrer les données dans la fenêtre modale", X7 = {
  _A_MODAL_BTN_CANCEL_: j7,
  _A_MODAL_BTN_SAVE_: z7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: K7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: Y7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: Z7
}, J7 = "Odustani", Q7 = "Spremi", e8 = "Zatvori modalni prozor (smještena u zaglavlju)", t8 = "Zatvori modalni prozor (smještena u podnožju)", n8 = "Spremi podatke u modalnom prozoru", r8 = {
  _A_MODAL_BTN_CANCEL_: J7,
  _A_MODAL_BTN_SAVE_: Q7,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: e8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: t8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: n8
}, i8 = "Interrompere", a8 = "Salva", s8 = "Chiudi finestra modale (situata nell'intestazione)", l8 = "Chiudi finestra modale (situata nel piè di pagina)", o8 = "Salva i dati nella finestra modale", u8 = {
  _A_MODAL_BTN_CANCEL_: i8,
  _A_MODAL_BTN_SAVE_: a8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: s8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: l8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: o8
}, _8 = "Прервать", d8 = "Сохранить", c8 = "Закрыть модальное окно (расположена в хедере)", f8 = "Закрыть модальное окно (расположена в футере)", h8 = "Сохранить данные в модальном окне", A8 = {
  _A_MODAL_BTN_CANCEL_: _8,
  _A_MODAL_BTN_SAVE_: d8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: c8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: f8,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: h8
}, Mi = {
  ar: R7,
  de: w7,
  en: $7,
  es: G7,
  fr: X7,
  hr: r8,
  it: u8,
  ru: A8
}, E8 = "[لا توجد عناصر متاحة للاختيار]", p8 = "بحث", T8 = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: E8,
  _A_RADIO_SEARCH_: p8
}, S8 = "[Keine Elemente zur Auswahl verfügbar]", m8 = "Suche", b8 = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: S8,
  _A_RADIO_SEARCH_: m8
}, L8 = "[No items available for selection]", v8 = "Search", I8 = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: L8,
  _A_RADIO_SEARCH_: v8
}, g8 = "[No hay elementos disponibles para seleccionar]", y8 = "Buscar", R8 = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: g8,
  _A_RADIO_SEARCH_: y8
}, O8 = "[Aucun élément disponible pour la sélection]", C8 = "Recherche", N8 = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: O8,
  _A_RADIO_SEARCH_: C8
}, D8 = "[Nema dostupnih elemenata za odabir]", B8 = "Pretraživanje", w8 = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: D8,
  _A_RADIO_SEARCH_: B8
}, P8 = "[Nessun elemento disponibile per la selezione]", x8 = "Cerca", F8 = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: P8,
  _A_RADIO_SEARCH_: x8
}, M8 = "[Нет элементов для выбора]", q8 = "Поиск", $8 = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: M8,
  _A_RADIO_SEARCH_: q8
}, qi = {
  ar: T8,
  de: b8,
  en: I8,
  es: R8,
  fr: N8,
  hr: w8,
  it: F8,
  ru: $8
}, k8 = "[No choices]", H8 = "Search", U8 = {
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: k8,
  _A_SELECT_SEARCH_: H8,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, W8 = "[Keine Auswahl]", V8 = "Suche", G8 = {
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: W8,
  _A_SELECT_SEARCH_: V8,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} ausgewählt",
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} ausgewählt"
}, j8 = "[No choices]", z8 = "Search", K8 = {
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: j8,
  _A_SELECT_SEARCH_: z8,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, Y8 = "[No choices]", Z8 = "Search", X8 = {
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: Y8,
  _A_SELECT_SEARCH_: Z8,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, J8 = "[No choices]", Q8 = "Search", e9 = {
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: J8,
  _A_SELECT_SEARCH_: Q8,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, t9 = "[No choices]", n9 = "Search", r9 = {
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: t9,
  _A_SELECT_SEARCH_: n9,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, i9 = "[No choices]", a9 = "Search", s9 = {
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: i9,
  _A_SELECT_SEARCH_: a9,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, l9 = "[Нет элементов для выбора]", o9 = "Поиск", u9 = {
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: l9,
  _A_SELECT_SEARCH_: o9,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} выбрано",
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} выбрано"
}, $i = {
  ar: U8,
  de: G8,
  en: K8,
  es: X8,
  fr: e9,
  hr: r9,
  it: s9,
  ru: u9
}, _9 = "إظهار أقل", d9 = "أظهر المزيد", c9 = "إظهار أقل - يمكن تجاهل زر لأن جميع المحتويات قابلة للقراءة بواسطة قارئات الشاشة بالفعل", f9 = "إظهار المزيد - يمكن تجاهل زر لأن جميع المحتويات قابلة للقراءة بواسطة قارئات الشاشة بالفعل", h9 = {
  _A_SHOW_MORE_LESS_: _9,
  _A_SHOW_MORE_MORE_: d9,
  _A_SHOW_MORE_LESS_SCREEN_READER_: c9,
  _A_SHOW_MORE_MORE_SCREEN_READER_: f9
}, A9 = "Mehr anzeigen", E9 = "Weniger anzeigen", p9 = "Weniger anzeigen - Button kann ignoriert werden, da der gesamte Inhalt für ScreenReader bereits lesbar ist", T9 = "Mehr anzeigen - Button kann ignoriert werden, da der gesamte Inhalt für ScreenReader bereits lesbar ist", S9 = {
  _A_SHOW_MORE_MORE_: A9,
  _A_SHOW_MORE_LESS_: E9,
  _A_SHOW_MORE_LESS_SCREEN_READER_: p9,
  _A_SHOW_MORE_MORE_SCREEN_READER_: T9
}, m9 = "Show less", b9 = "Show more", L9 = "Show less - Button can be ignored since all content is already readable by screen readers", v9 = "Show more - Button can be ignored since all content is already readable by screen readers", I9 = {
  _A_SHOW_MORE_LESS_: m9,
  _A_SHOW_MORE_MORE_: b9,
  _A_SHOW_MORE_LESS_SCREEN_READER_: L9,
  _A_SHOW_MORE_MORE_SCREEN_READER_: v9
}, g9 = "Mostrar menos", y9 = "Mostrar más", R9 = "Mostrar menos - El botón se puede ignorar ya que todo el contenido ya es legible para los lectores de pantalla", O9 = "Mostrar más - El botón se puede ignorar ya que todo el contenido ya es legible para los lectores de pantalla", C9 = {
  _A_SHOW_MORE_LESS_: g9,
  _A_SHOW_MORE_MORE_: y9,
  _A_SHOW_MORE_LESS_SCREEN_READER_: R9,
  _A_SHOW_MORE_MORE_SCREEN_READER_: O9
}, N9 = "Afficher moins", D9 = "Afficher plus", B9 = "Afficher moins - Le bouton peut être ignoré car tout le contenu est déjà lisible par les lecteurs d'écran", w9 = "Afficher plus - Le bouton peut être ignoré car tout le contenu est déjà lisible par les lecteurs d'écran", P9 = {
  _A_SHOW_MORE_LESS_: N9,
  _A_SHOW_MORE_MORE_: D9,
  _A_SHOW_MORE_LESS_SCREEN_READER_: B9,
  _A_SHOW_MORE_MORE_SCREEN_READER_: w9
}, x9 = "Prikaži manje", F9 = "Prikaži više", M9 = "Prikaži manje - Ovo dugme se može zanemariti jer je cjelokupan sadržaj već vidljiv čitaču zaslona.", q9 = "Prikaži više - Ovo dugme se može zanemariti jer je cjelokupan sadržaj već vidljiv čitaču zaslona.", $9 = {
  _A_SHOW_MORE_LESS_: x9,
  _A_SHOW_MORE_MORE_: F9,
  _A_SHOW_MORE_LESS_SCREEN_READER_: M9,
  _A_SHOW_MORE_MORE_SCREEN_READER_: q9
}, k9 = "Mostra meno", H9 = "Mostra di più", U9 = "Mostra meno - Il pulsante può essere ignorato poiché tutto il contenuto è già leggibile dagli screen reader", W9 = "Mostra di più - Il pulsante può essere ignorato poiché tutto il contenuto è già leggibile dagli screen reader", V9 = {
  _A_SHOW_MORE_LESS_: k9,
  _A_SHOW_MORE_MORE_: H9,
  _A_SHOW_MORE_LESS_SCREEN_READER_: U9,
  _A_SHOW_MORE_MORE_SCREEN_READER_: W9
}, G9 = "Показать меньше", j9 = "Показать больше", z9 = "Показать меньше - Кнопку можно проигнорировать, так как весь контент уже доступен для чтения с помощью скринридера", K9 = "Показать больше - Кнопку можно проигнорировать, так как весь контент уже доступен для чтения с помощью скринридера", Y9 = {
  _A_SHOW_MORE_LESS_: G9,
  _A_SHOW_MORE_MORE_: j9,
  _A_SHOW_MORE_LESS_SCREEN_READER_: z9,
  _A_SHOW_MORE_MORE_SCREEN_READER_: K9
}, ki = {
  ar: h9,
  de: S9,
  en: I9,
  es: C9,
  fr: P9,
  hr: $9,
  it: V9,
  ru: Y9
}, Z9 = "إجراءات", X9 = "إلغاء تحديد جميع الصفوف المحددة", J9 = "إلغاء تحديد هذا الصف", Q9 = "1 حقل", ej = "تخصيص الجدول", tj = "لا توجد إدخالات.", nj = "تنفيذ إجراء متعدد؟", rj = "متابعة", ij = "إغلاق", aj = "+ 1 حقل", sj = "إجراءات متعددة", lj = "إلغاء الإجراء المتعدد", oj = "نقل العمود إلى اليمين", uj = "نقل العمود إلى اليسار", _j = "إظهار العمود", dj = "إخفاء العمود", cj = "العمود مقفل", fj = "معاينة الصف", hj = "إغلاق المعاينة", Aj = "الرجاء استخدام الفتحة: 'معاينة'", Ej = "معاينة الصف", pj = "إغلاق المعاينة", Tj = "إلى الصف التالي", Sj = "إلى الصف السابق", mj = "بحث سريع", bj = "إغلاق معاينة الصف", Lj = "فتح معاينة الصف", vj = "تحديد جميع الصفوف المرئية ذات الصلة", Ij = "تحديد هذا الصف", gj = "إلغاء الترتيب", yj = "إغلاق", Rj = "عمود", Oj = "اتجاه", Cj = "تصاعدي", Nj = "تنازلي", Dj = "ترتيب", Bj = "ترتيب حسب", wj = "ترتيب", Pj = "ثم حسب", xj = "انقر هنا للتبديل بين الترتيب التصاعدي، الترتيب التنازلي، وعدم الترتيب.", Fj = "اضغط مع الاستمرار على مفتاح Shift أثناء النقر للجمع بين ترتيب أعمدة متعددة.", Mj = {
  _A_TABLE_ACTIONS_: Z9,
  "_A_TABLE_ALL_ROWS_{{count}}_": "إجمالي عدد الإدخالات: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "إلغاء تحديد جميع الصفوف ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: X9,
  _A_TABLE_DESELECT_THIS_ROW_: J9,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "إجراءات للصف: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Q9,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} حقول",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "عرض المزيد من الحقول ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: ej,
  _A_TABLE_EMPTY_TEXT_: tj,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: nj,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>هل تريد تنفيذ الإجراء <strong>{{ action }}</strong> على <strong>{{ selectedRows }}</strong> من العناصر؟</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: rj,
  _A_TABLE_MOBILE_TR_CLOSE_: ij,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: aj,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} حقول",
  _A_TABLE_MULTIPLE_ACTIONS_: sj,
  _A_TABLE_MULTIPLE_CANCEL_: lj,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} من {{ countAllRowsFiltered }} محددة",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: oj,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: uj,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: _j,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: dj,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: cj,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: fj,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: hj,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: Aj,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Ej,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: pj,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} من {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Tj,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Sj,
  _A_TABLE_QUICK_SEARCH_: mj,
  _A_TABLE_ROW_PREVIEW_CLOSE_: bj,
  _A_TABLE_ROW_PREVIEW_OPEN_: Lj,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "تحديد جميع الصفوف ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: vj,
  _A_TABLE_SELECT_THIS_ROW_: Ij,
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: gj,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: yj,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Rj,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Oj,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Cj,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: Nj,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "تغيير الترتيب (الأعمدة المحددة: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_HEADER_: Dj,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Bj,
  _A_TABLE_SORT_ADDITIONAL_START_: wj,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Pj,
  _A_TABLE_SORT_TITLE_: xj,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: Fj
}, qj = "Aktionen", $j = "Alle ausgewählten Zeilen abwählen", kj = "Die Zeile abwählen", Hj = "1 Feld", Uj = "Tabelle anpassen", Wj = "Keine Einträge vorhanden.", Vj = "Mehrfachaktion durchführen?", Gj = "Fortfahren", jj = "Schließen", zj = "+ 1 Feld", Kj = "Mehrfachaktionen", Yj = "Mehrfachaktion abbrechen", Zj = "Spalte nach rechts verschieben", Xj = "Spalte nach links verschieben", Jj = "Spalte einblenden", Qj = "Spalte ausblenden", ez = "Spalte ist gesperrt", tz = "Vorschau der Zeile", nz = "Vorschau schließen", rz = "Benutzen sie bitte slot: 'preview'", iz = "Vorschau der Zeile", az = "Vorschau schließen", sz = "Zur nächsten Zeile", lz = "Zur vorherigen Zeile", oz = "Schnellsuche", uz = "Vorschau der Zeile schließen", _z = "Vorschau der Zeile öffnen", dz = "Alle sichtbaren, relevanten Zeilen auswählen", cz = "Die Zeile auswählen", fz = "Sortierung aufheben", hz = "Schließen", Az = "Spalte", Ez = "Reihenfolge", pz = "Aufsteigend", Tz = "Absteigend", Sz = "Sortierung", mz = "Sortieren nach", bz = "Sortieren", Lz = "Dann nach", vz = "Klicken Sie hier, um zwischen aufsteigender, absteigender und keiner Sortierung zu wechseln.", Iz = "Halten Sie die Umschalttaste beim Klicken gedrückt, um die Sortierung mehrerer Spalten zu kombinieren.", gz = {
  _A_TABLE_ACTIONS_: qj,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Gesamtanzahl der Einträge: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Alle Zeilen abwählen ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: $j,
  _A_TABLE_DESELECT_THIS_ROW_: kj,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Aktionen zur Zeile: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Hj,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} Felder",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Weitere Felder anzeigen ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: Uj,
  _A_TABLE_EMPTY_TEXT_: Wj,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: Vj,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Möchten Sie die Aktion <strong>{{ action }}</strong> auf <strong>{{ selectedRows }}</strong> Objekten durchführen?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: Gj,
  _A_TABLE_MOBILE_TR_CLOSE_: jj,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: zj,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} Felder",
  _A_TABLE_MULTIPLE_ACTIONS_: Kj,
  _A_TABLE_MULTIPLE_CANCEL_: Yj,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} von {{ countAllRowsFiltered }} ausgewählt",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: Zj,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: Xj,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: Jj,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: Qj,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: ez,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: tz,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: nz,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: rz,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: iz,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: az,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} von {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: sz,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: lz,
  _A_TABLE_QUICK_SEARCH_: oz,
  _A_TABLE_ROW_PREVIEW_CLOSE_: uz,
  _A_TABLE_ROW_PREVIEW_OPEN_: _z,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Alle Zeilen auswählen ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: dz,
  _A_TABLE_SELECT_THIS_ROW_: cz,
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: fz,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: hz,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Az,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Ez,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: pz,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: Tz,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Sortierung ändern (ausgewählte Spalten: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_HEADER_: Sz,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: mz,
  _A_TABLE_SORT_ADDITIONAL_START_: bz,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Lz,
  _A_TABLE_SORT_TITLE_: vz,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: Iz
}, yz = "Actions", Rz = "Deselect all selected rows", Oz = "Deselect this row", Cz = "1 field", Nz = "Customize table", Dz = "No entries available.", Bz = "Execute multiple actions?", wz = "Proceed", Pz = "Close", xz = "+ 1 field", Fz = "Multiple actions", Mz = "Cancel multiple actions", qz = "Move column to the right", $z = "Move column to the left", kz = "Show column", Hz = "Hide column", Uz = "Column is locked", Wz = "Row preview", Vz = "Close preview", Gz = "Row preview", jz = "Close preview", zz = "Please use slot: 'preview'", Kz = "To the next row", Yz = "To the previous row", Zz = "Quick search", Xz = "Close row preview", Jz = "Open row preview", Qz = "Select all visible, relevant rows", eK = "Select this row", tK = "Click here to toggle between ascending, descending, and no sorting.", nK = "Hold Shift while clicking to combine sorting of multiple columns.", rK = "Sorting", iK = "Sort by", aK = "Then by", sK = "Column", lK = "Direction", oK = "Ascending", uK = "Descending", _K = "Close", dK = "Sort", cK = "Remove sorting", fK = {
  _A_TABLE_ACTIONS_: yz,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Total number of entries: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deselect all rows ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Rz,
  _A_TABLE_DESELECT_THIS_ROW_: Oz,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Actions for row: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Cz,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} fields",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Show more fields ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: Nz,
  _A_TABLE_EMPTY_TEXT_: Dz,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: Bz,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Do you want to execute the action <strong>{{ action }}</strong> on <strong>{{ selectedRows }}</strong> items?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: wz,
  _A_TABLE_MOBILE_TR_CLOSE_: Pz,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: xz,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} fields",
  _A_TABLE_MULTIPLE_ACTIONS_: Fz,
  _A_TABLE_MULTIPLE_CANCEL_: Mz,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} of {{ countAllRowsFiltered }} selected",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: qz,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: $z,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: kz,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: Hz,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: Uz,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: Wz,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: Vz,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Gz,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: jz,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: zz,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} of {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Kz,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Yz,
  _A_TABLE_QUICK_SEARCH_: Zz,
  _A_TABLE_ROW_PREVIEW_CLOSE_: Xz,
  _A_TABLE_ROW_PREVIEW_OPEN_: Jz,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Select all rows ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Qz,
  _A_TABLE_SELECT_THIS_ROW_: eK,
  _A_TABLE_SORT_TITLE_: tK,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: nK,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: rK,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: iK,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: aK,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: sK,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: lK,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: oK,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: uK,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: _K,
  _A_TABLE_SORT_ADDITIONAL_START_: dK,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Change sorting (selected columns: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: cK
}, hK = "Acciones", AK = "Deseleccionar todas las filas seleccionadas", EK = "Deseleccionar esta fila", pK = "1 campo", TK = "Personalizar tabla", SK = "No hay entradas disponibles.", mK = "¿Ejecutar múltiples acciones?", bK = "Continuar", LK = "Cerrar", vK = "+ 1 campo", IK = "Acciones múltiples", gK = "Cancelar acciones múltiples", yK = "Mover columna a la derecha", RK = "Mover columna a la izquierda", OK = "Mostrar columna", CK = "Ocultar columna", NK = "La columna está bloqueada", DK = "Vista previa de la fila", BK = "Cerrar vista previa", wK = "Vista previa de la fila", PK = "Cerrar vista previa", xK = "Por favor, use el slot: 'preview'", FK = "A la siguiente fila", MK = "A la fila anterior", qK = "Búsqueda rápida", $K = "Cerrar vista previa de la fila", kK = "Abrir vista previa de la fila", HK = "Seleccionar todas las filas visibles y relevantes", UK = "Seleccionar esta fila", WK = "Haga clic aquí para alternar entre orden ascendente, descendente o sin ordenar.", VK = "Mantenga presionada la tecla Shift al hacer clic para combinar la ordenación de varias columnas.", GK = "Ordenar", jK = "Ordenar por", zK = "Luego por", KK = "Columna", YK = "Dirección", ZK = "Ascendente", XK = "Descendente", JK = "Cerrar", QK = "Ordenar", eY = "Eliminar orden", tY = {
  _A_TABLE_ACTIONS_: hK,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Número total de entradas: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deseleccionar todas las filas ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: AK,
  _A_TABLE_DESELECT_THIS_ROW_: EK,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Acciones para la fila: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: pK,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} campos",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Mostrar más campos ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: TK,
  _A_TABLE_EMPTY_TEXT_: SK,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: mK,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>¿Desea ejecutar la acción <strong>{{ action }}</strong> en <strong>{{ selectedRows }}</strong> objetos?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: bK,
  _A_TABLE_MOBILE_TR_CLOSE_: LK,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: vK,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} campos",
  _A_TABLE_MULTIPLE_ACTIONS_: IK,
  _A_TABLE_MULTIPLE_CANCEL_: gK,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} de {{ countAllRowsFiltered }} seleccionadas",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: yK,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: RK,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: OK,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: CK,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: NK,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: DK,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: BK,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: wK,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: PK,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: xK,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} de {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: FK,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: MK,
  _A_TABLE_QUICK_SEARCH_: qK,
  _A_TABLE_ROW_PREVIEW_CLOSE_: $K,
  _A_TABLE_ROW_PREVIEW_OPEN_: kK,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Seleccionar todas las filas ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: HK,
  _A_TABLE_SELECT_THIS_ROW_: UK,
  _A_TABLE_SORT_TITLE_: WK,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: VK,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: GK,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: jK,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: zK,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: KK,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: YK,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: ZK,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: XK,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: JK,
  _A_TABLE_SORT_ADDITIONAL_START_: QK,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Cambiar orden (columnas seleccionadas: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: eY
}, nY = "Actions", rY = "Désélectionner toutes les lignes sélectionnées", iY = "Désélectionner cette ligne", aY = "1 champ", sY = "Personnaliser le tableau", lY = "Aucune entrée disponible.", oY = "Exécuter plusieurs actions ?", uY = "Continuer", _Y = "Fermer", dY = "+ 1 champ", cY = "Actions multiples", fY = "Annuler l'action multiple", hY = "Déplacer la colonne vers la droite", AY = "Déplacer la colonne vers la gauche", EY = "Afficher la colonne", pY = "Masquer la colonne", TY = "La colonne est verrouillée", SY = "Aperçu de la ligne", mY = "Fermer l'aperçu", bY = "Aperçu de la ligne", LY = "Fermer l'aperçu", vY = "Veuillez utiliser le slot : 'preview'", IY = "À la ligne suivante", gY = "À la ligne précédente", yY = "Recherche rapide", RY = "Fermer l'aperçu de la ligne", OY = "Ouvrir l'aperçu de la ligne", CY = "Sélectionner toutes les lignes visibles et pertinentes", NY = "Sélectionner cette ligne", DY = "Cliquez ici pour alterner entre tri ascendant, descendant et sans tri.", BY = "Maintenez la touche Maj enfoncée en cliquant pour combiner le tri de plusieurs colonnes.", wY = "Tri", PY = "Trier par", xY = "Puis par", FY = "Colonne", MY = "Direction", qY = "Ascendant", $Y = "Descendant", kY = "Fermer", HY = "Trier", UY = "Supprimer le tri", WY = {
  _A_TABLE_ACTIONS_: nY,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Nombre total d'entrées : {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Désélectionner toutes les lignes ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: rY,
  _A_TABLE_DESELECT_THIS_ROW_: iY,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Actions pour la ligne : {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: aY,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} champs",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Afficher plus de champs ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: sY,
  _A_TABLE_EMPTY_TEXT_: lY,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: oY,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Voulez-vous exécuter l'action <strong>{{ action }}</strong> sur <strong>{{ selectedRows }}</strong> objets ?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: uY,
  _A_TABLE_MOBILE_TR_CLOSE_: _Y,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: dY,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} champs",
  _A_TABLE_MULTIPLE_ACTIONS_: cY,
  _A_TABLE_MULTIPLE_CANCEL_: fY,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} sur {{ countAllRowsFiltered }} sélectionnés",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: hY,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: AY,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: EY,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: pY,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: TY,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: SY,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: mY,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: bY,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: LY,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: vY,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} sur {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: IY,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: gY,
  _A_TABLE_QUICK_SEARCH_: yY,
  _A_TABLE_ROW_PREVIEW_CLOSE_: RY,
  _A_TABLE_ROW_PREVIEW_OPEN_: OY,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Sélectionner toutes les lignes ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: CY,
  _A_TABLE_SELECT_THIS_ROW_: NY,
  _A_TABLE_SORT_TITLE_: DY,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: BY,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: wY,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: PY,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: xY,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: FY,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: MY,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: qY,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: $Y,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: kY,
  _A_TABLE_SORT_ADDITIONAL_START_: HY,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Modifier le tri (colonnes sélectionnées : {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: UY
}, VY = "Akcije", GY = "Poništi odabir svih odabranih redaka", jY = "Poništi odabir ovog retka", zY = "1 polje", KY = "Prilagodi tablicu", YY = "Nema dostupnih unosa.", ZY = "Izvršiti više akcija?", XY = "Nastavi", JY = "Zatvori", QY = "+ 1 polje", eZ = "Višestruke akcije", tZ = "Poništi višestruku akciju", nZ = "Premjesti stupac desno", rZ = "Premjesti stupac lijevo", iZ = "Prikaži stupac", aZ = "Sakrij stupac", sZ = "Stupac je zaključan", lZ = "Pregled retka", oZ = "Zatvori pregled", uZ = "Pregled retka", _Z = "Zatvori pregled", dZ = "Molimo koristite slot: 'pregled'", cZ = "Na sljedeći redak", fZ = "Na prethodni redak", hZ = "Brza pretraga", AZ = "Zatvori pregled retka", EZ = "Otvori pregled retka", pZ = "Odaberi sve vidljive, relevantne retke", TZ = "Odaberi ovaj redak", SZ = "Kliknite ovdje da biste se prebacivali između uzlaznog, silaznog i bez sortiranja.", mZ = "Držite tipku Shift dok klikate da biste kombinirali sortiranje više stupaca.", bZ = "Sortiranje", LZ = "Sortiraj po", vZ = "Zatim po", IZ = "Stupac", gZ = "Smjer", yZ = "Uzlazno", RZ = "Silazno", OZ = "Zatvori", CZ = "Sortiraj", NZ = "Ukloni sortiranje", DZ = {
  _A_TABLE_ACTIONS_: VY,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Ukupan broj unosa: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Poništi odabir svih redaka ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: GY,
  _A_TABLE_DESELECT_THIS_ROW_: jY,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Akcije za redak: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: zY,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} polja",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Prikaži više polja ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: KY,
  _A_TABLE_EMPTY_TEXT_: YY,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: ZY,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Želite li izvršiti akciju <strong>{{ action }}</strong> na <strong>{{ selectedRows }}</strong> objekata?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: XY,
  _A_TABLE_MOBILE_TR_CLOSE_: JY,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: QY,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} polja",
  _A_TABLE_MULTIPLE_ACTIONS_: eZ,
  _A_TABLE_MULTIPLE_CANCEL_: tZ,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} od {{ countAllRowsFiltered }} odabrano",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: nZ,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: rZ,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: iZ,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: aZ,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: sZ,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: lZ,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: oZ,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: uZ,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: _Z,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: dZ,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} od {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: cZ,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: fZ,
  _A_TABLE_QUICK_SEARCH_: hZ,
  _A_TABLE_ROW_PREVIEW_CLOSE_: AZ,
  _A_TABLE_ROW_PREVIEW_OPEN_: EZ,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Odaberi sve retke ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: pZ,
  _A_TABLE_SELECT_THIS_ROW_: TZ,
  _A_TABLE_SORT_TITLE_: SZ,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: mZ,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: bZ,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: LZ,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: vZ,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: IZ,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: gZ,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: yZ,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: RZ,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: OZ,
  _A_TABLE_SORT_ADDITIONAL_START_: CZ,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Promijeni sortiranje (odabrani stupci: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: NZ
}, BZ = "Azioni", wZ = "Deseleziona tutte le righe selezionate", PZ = "Deseleziona questa riga", xZ = "1 campo", FZ = "Personalizza tabella", MZ = "Nessuna voce disponibile.", qZ = "Eseguire più azioni?", $Z = "Continua", kZ = "Chiudi", HZ = "+ 1 campo", UZ = "Azioni multiple", WZ = "Annulla azione multipla", VZ = "Sposta colonna a destra", GZ = "Sposta colonna a sinistra", jZ = "Mostra colonna", zZ = "Nascondi colonna", KZ = "Colonna bloccata", YZ = "Anteprima riga", ZZ = "Chiudi anteprima", XZ = "Anteprima riga", JZ = "Chiudi anteprima", QZ = "Si prega di utilizzare lo slot: 'preview'", eX = "Alla riga successiva", tX = "Alla riga precedente", nX = "Ricerca rapida", rX = "Chiudi anteprima riga", iX = "Apri anteprima riga", aX = "Seleziona tutte le righe visibili e pertinenti", sX = "Seleziona questa riga", lX = "Clicca qui per alternare tra ordinamento crescente, decrescente e nessun ordinamento.", oX = "Tieni premuto il tasto Maiusc mentre fai clic per combinare l'ordinamento di più colonne.", uX = "Ordinamento", _X = "Ordina per", dX = "Poi per", cX = "Colonna", fX = "Direzione", hX = "Crescente", AX = "Decrescente", EX = "Chiudi", pX = "Ordina", TX = "Rimuovi ordinamento", SX = {
  _A_TABLE_ACTIONS_: BZ,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Numero totale di voci: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deseleziona tutte le righe ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: wZ,
  _A_TABLE_DESELECT_THIS_ROW_: PZ,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Azioni per la riga: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: xZ,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} campi",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Mostra più campi ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: FZ,
  _A_TABLE_EMPTY_TEXT_: MZ,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: qZ,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Vuoi eseguire l'azione <strong>{{ action }}</strong> su <strong>{{ selectedRows }}</strong> oggetti?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: $Z,
  _A_TABLE_MOBILE_TR_CLOSE_: kZ,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: HZ,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} campi",
  _A_TABLE_MULTIPLE_ACTIONS_: UZ,
  _A_TABLE_MULTIPLE_CANCEL_: WZ,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} di {{ countAllRowsFiltered }} selezionate",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: VZ,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: GZ,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: jZ,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: zZ,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: KZ,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: YZ,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: ZZ,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: XZ,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: JZ,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: QZ,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} di {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: eX,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: tX,
  _A_TABLE_QUICK_SEARCH_: nX,
  _A_TABLE_ROW_PREVIEW_CLOSE_: rX,
  _A_TABLE_ROW_PREVIEW_OPEN_: iX,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Seleziona tutte le righe ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: aX,
  _A_TABLE_SELECT_THIS_ROW_: sX,
  _A_TABLE_SORT_TITLE_: lX,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: oX,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: uX,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: _X,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: dX,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: cX,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: fX,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: hX,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: AX,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: EX,
  _A_TABLE_SORT_ADDITIONAL_START_: pX,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Modifica ordinamento (colonne selezionate: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: TX
}, mX = "Действия", bX = "Отменить выбор всех выбранных строк", LX = "Отменить выбор строки", vX = "1 поле", IX = "Настроить таблицу", gX = "Нет доступных записей.", yX = "Выполнить несколько действий?", RX = "Продолжить", OX = "Закрыть", CX = "+ 1 поле", NX = "Множественные действия", DX = "Отменить", BX = "Переместить столбец вправо", wX = "Переместить столбец влево", PX = "Показать столбец", xX = "Скрыть столбец", FX = "Столбец заблокирован", MX = "Предпросмотр строки", qX = "Закрыть предварительный просмотр", $X = "Предпросмотр строки", kX = "Закрыть предварительный просмотр", HX = "Пожалуйста, используйте слот: 'preview'", UX = "К следующей строке", WX = "К предыдущей строке", VX = "Быстрый поиск", GX = "Закрыть предпросмотр строки", jX = "Открыть предпросмотр строки", zX = "Выбрать все видимые, возможные строки", KX = "Выбрать эту строку", YX = "Нажмите здесь, чтобы переключиться между сортировкой по возрастанию, по убыванию и без сортировки.", ZX = "Удерживайте Shift при нажатии, чтобы объединить сортировку нескольких столбцов.", XX = "Сортировка", JX = "Сортировать по", QX = "Затем по", eJ = "Столбец", tJ = "Направление", nJ = "По возрастанию", rJ = "По убыванию", iJ = "Закрыть", aJ = "Сортировать", sJ = "Отменить сортировку", lJ = {
  _A_TABLE_ACTIONS_: mX,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Общее количество записей: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Отменить выбор всех строк ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: bX,
  _A_TABLE_DESELECT_THIS_ROW_: LX,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Действия для строки: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: vX,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} полей",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Показать дополнительные поля ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: IX,
  _A_TABLE_EMPTY_TEXT_: gX,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: yX,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Вы хотите выполнить действие <strong>{{ action }}</strong> для <strong>{{ selectedRows }}</strong> объектов?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: RX,
  _A_TABLE_MOBILE_TR_CLOSE_: OX,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: CX,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} полей",
  _A_TABLE_MULTIPLE_ACTIONS_: NX,
  _A_TABLE_MULTIPLE_CANCEL_: DX,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} из {{ countAllRowsFiltered }} выбрано",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: BX,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: wX,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: PX,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: xX,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: FX,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: MX,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: qX,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: $X,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: kX,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: HX,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} из {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: UX,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: WX,
  _A_TABLE_QUICK_SEARCH_: VX,
  _A_TABLE_ROW_PREVIEW_CLOSE_: GX,
  _A_TABLE_ROW_PREVIEW_OPEN_: jX,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Выбрать все строки ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: zX,
  _A_TABLE_SELECT_THIS_ROW_: KX,
  _A_TABLE_SORT_TITLE_: YX,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: ZX,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: XX,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: JX,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: QX,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: eJ,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: tJ,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: nJ,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: rJ,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: iJ,
  _A_TABLE_SORT_ADDITIONAL_START_: aJ,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Изменить сортировку (выбрано столбцов: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: sJ
}, Hi = {
  ar: Mj,
  de: gz,
  en: fK,
  es: tY,
  fr: WY,
  hr: DZ,
  it: SX,
  ru: lJ
}, oJ = "معالج", uJ = "التالي", _J = "الخطوة التالية", dJ = "سابق", cJ = "الخطوة السابقة", fJ = "الخطوة الحالية", hJ = "خطأ في الخطوة", AJ = "الخطوة القادمة", EJ = "الخطوة المزار", pJ = "تحذير خطوة", TJ = "خطوات المعالج", SJ = {
  _A_WIZARD_ARIA_LABEL_: oJ,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "الخطوة {{ stepNumber }}:",
  _A_WIZARD_NEXT_: uJ,
  _A_WIZARD_NEXT_TITLE_: _J,
  _A_WIZARD_PREVIOUS_: dJ,
  _A_WIZARD_PREVIOUS_TITLE_: cJ,
  _A_WIZARD_STEP_ACTIVE_: fJ,
  _A_WIZARD_STEP_ERROR_: hJ,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} من {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: AJ,
  _A_WIZARD_STEP_VISITED_: EJ,
  _A_WIZARD_STEP_WARNING_: pJ,
  _A_WIZARD_STEPS_ARIA_LABEL_: TJ,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "{{ stepsCount }} من {{ stepActive }} خطوة"
}, mJ = "Wizard", bJ = "Nächste", LJ = "Nächster Schritt", vJ = "Vorherige", IJ = "Vorheriger Schritt", gJ = "Schritt aktuell", yJ = "Schrittfehler", RJ = "Schritt bevorstehend", OJ = "Schritt besucht", CJ = "Schrittwarnung", NJ = "Wizard Schritte", DJ = {
  _A_WIZARD_ARIA_LABEL_: mJ,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Schritt {{ stepNumber }}:",
  _A_WIZARD_NEXT_: bJ,
  _A_WIZARD_NEXT_TITLE_: LJ,
  _A_WIZARD_PREVIOUS_: vJ,
  _A_WIZARD_PREVIOUS_TITLE_: IJ,
  _A_WIZARD_STEP_ACTIVE_: gJ,
  _A_WIZARD_STEP_ERROR_: yJ,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} von {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: RJ,
  _A_WIZARD_STEP_VISITED_: OJ,
  _A_WIZARD_STEP_WARNING_: CJ,
  _A_WIZARD_STEPS_ARIA_LABEL_: NJ,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Schritt {{ stepActive }} von {{ stepsCount }}"
}, BJ = "Wizard", wJ = "Next", PJ = "Next step", xJ = "Previous", FJ = "Previous step", MJ = "Step current", qJ = "Step error", $J = "Step upcoming", kJ = "Step visited", HJ = "Step warning", UJ = "Wizard steps", WJ = {
  _A_WIZARD_ARIA_LABEL_: BJ,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Step {{ stepNumber }}:",
  _A_WIZARD_NEXT_: wJ,
  _A_WIZARD_NEXT_TITLE_: PJ,
  _A_WIZARD_PREVIOUS_: xJ,
  _A_WIZARD_PREVIOUS_TITLE_: FJ,
  _A_WIZARD_STEP_ACTIVE_: MJ,
  _A_WIZARD_STEP_ERROR_: qJ,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} of {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: $J,
  _A_WIZARD_STEP_VISITED_: kJ,
  _A_WIZARD_STEP_WARNING_: HJ,
  _A_WIZARD_STEPS_ARIA_LABEL_: UJ,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Step {{ stepActive }} of {{ stepsCount }}"
}, VJ = "Asistente", GJ = "Próximo", jJ = "Siguiente paso", zJ = "Previo", KJ = "Paso anterior", YJ = "Paso actual", ZJ = "Error de paso", XJ = "Paso próximo", JJ = "Paso visitado", QJ = "Advertencia de paso", eQ = "Pasos del asistente", tQ = {
  _A_WIZARD_ARIA_LABEL_: VJ,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Paso {{ stepNumber }}:",
  _A_WIZARD_NEXT_: GJ,
  _A_WIZARD_NEXT_TITLE_: jJ,
  _A_WIZARD_PREVIOUS_: zJ,
  _A_WIZARD_PREVIOUS_TITLE_: KJ,
  _A_WIZARD_STEP_ACTIVE_: YJ,
  _A_WIZARD_STEP_ERROR_: ZJ,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} de {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: XJ,
  _A_WIZARD_STEP_VISITED_: JJ,
  _A_WIZARD_STEP_WARNING_: QJ,
  _A_WIZARD_STEPS_ARIA_LABEL_: eQ,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "escenario {{ stepActive }} de {{ stepsCount }}"
}, nQ = "Assistant", rQ = "Suivant", iQ = "Étape suivante", aQ = "Précédent", sQ = "Étape précédente", lQ = "Étape actuelle", oQ = "Erreur de l'étape", uQ = "Étape à venir", _Q = "Étape visitée", dQ = "Avertissement de l'étape", cQ = "Étapes de l'assistant", fQ = {
  _A_WIZARD_ARIA_LABEL_: nQ,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Étape {{ stepNumber }} :",
  _A_WIZARD_NEXT_: rQ,
  _A_WIZARD_NEXT_TITLE_: iQ,
  _A_WIZARD_PREVIOUS_: aQ,
  _A_WIZARD_PREVIOUS_TITLE_: sQ,
  _A_WIZARD_STEP_ACTIVE_: lQ,
  _A_WIZARD_STEP_ERROR_: oQ,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} sur {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: uQ,
  _A_WIZARD_STEP_VISITED_: _Q,
  _A_WIZARD_STEP_WARNING_: dQ,
  _A_WIZARD_STEPS_ARIA_LABEL_: cQ,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Etape {{ stepActive }} de {{ stepsCount }}"
}, hQ = "Čarobnjak", AQ = "Dalje", EQ = "Sljedeći korak", pQ = "Natrag", TQ = "Prethodni korak", SQ = "Trenutni korak", mQ = "Pogreška koraka", bQ = "Preostali koraci", LQ = "Posjećeni korak", vQ = "Upozorenje koraka", IQ = "Koraci čarobnjaka", gQ = {
  _A_WIZARD_ARIA_LABEL_: hQ,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Korak {{ stepNumber }}:",
  _A_WIZARD_NEXT_: AQ,
  _A_WIZARD_NEXT_TITLE_: EQ,
  _A_WIZARD_PREVIOUS_: pQ,
  _A_WIZARD_PREVIOUS_TITLE_: TQ,
  _A_WIZARD_STEP_ACTIVE_: SQ,
  _A_WIZARD_STEP_ERROR_: mQ,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} od {{stepsCount}}",
  _A_WIZARD_STEP_UPCOMING_: bQ,
  _A_WIZARD_STEP_VISITED_: LQ,
  _A_WIZARD_STEP_WARNING_: vQ,
  _A_WIZARD_STEPS_ARIA_LABEL_: IQ,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Korak {{ stepActive }} od {{ stepsCount }}"
}, yQ = "Wizard", RQ = "Prossimo", OQ = "Passo successivo", CQ = "Precedente", NQ = "Passo precedente", DQ = "Passo attuale", BQ = "Errore del passo", wQ = "Passo successivo", PQ = "Passo visitato", xQ = "Avvertimento del passo", FQ = "Passi dell'assistente", MQ = {
  _A_WIZARD_ARIA_LABEL_: yQ,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Passo {{ stepNumber }}:",
  _A_WIZARD_NEXT_: RQ,
  _A_WIZARD_NEXT_TITLE_: OQ,
  _A_WIZARD_PREVIOUS_: CQ,
  _A_WIZARD_PREVIOUS_TITLE_: NQ,
  _A_WIZARD_STEP_ACTIVE_: DQ,
  _A_WIZARD_STEP_ERROR_: BQ,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} di {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: wQ,
  _A_WIZARD_STEP_VISITED_: PQ,
  _A_WIZARD_STEP_WARNING_: xQ,
  _A_WIZARD_STEPS_ARIA_LABEL_: FQ,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "palcoscenico {{ stepActive }} Di {{ stepsCount }}"
}, qQ = "Мастер", $Q = "Следующий", kQ = "Следующий шаг", HQ = "Предыдущий", UQ = "Предыдущий шаг", WQ = "Шаг актуальный", VQ = "Ошибка шага", GQ = "Шаг предстоящий", jQ = "Шаг посещённый", zQ = "Предупреждение шага", KQ = "Шаги мастера", YQ = {
  _A_WIZARD_ARIA_LABEL_: qQ,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Шаг {{ stepNumber }}:",
  _A_WIZARD_NEXT_: $Q,
  _A_WIZARD_NEXT_TITLE_: kQ,
  _A_WIZARD_PREVIOUS_: HQ,
  _A_WIZARD_PREVIOUS_TITLE_: UQ,
  _A_WIZARD_STEP_ACTIVE_: WQ,
  _A_WIZARD_STEP_ERROR_: VQ,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} из {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: GQ,
  _A_WIZARD_STEP_VISITED_: jQ,
  _A_WIZARD_STEP_WARNING_: zQ,
  _A_WIZARD_STEPS_ARIA_LABEL_: KQ,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Шаг {{ stepActive }} из {{ stepsCount }}"
}, Ui = {
  ar: SJ,
  de: DJ,
  en: WJ,
  es: tQ,
  fr: fQ,
  hr: gQ,
  it: MQ,
  ru: YQ
}, ZQ = "Breadcrumb", XQ = "إظهار الروابط المخفية", JQ = "إغلاق القائمة", QQ = "فتح القائمة", eee = "إغلاق القائمة الفرعية:", tee = "القائمة الرئيسية", nee = "فتح بحث القائمة", ree = "فتح القائمة الفرعية:", iee = "بحث القائمة", aee = "لم يتم العثور على عناصر القائمة", see = "إلى القائمة الرئيسية", lee = {
  _A_MENU_2_BREADCRUMB_: ZQ,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: XQ,
  _A_MENU_2_BTN_CLOSE_: JQ,
  _A_MENU_2_BTN_OPEN_: QQ,
  _A_MENU_2_CLOSE_SUBMENU_: eee,
  _A_MENU_2_MAIN_MENU_: tee,
  _A_MENU_2_OPEN_SEARCH_: nee,
  _A_MENU_2_OPEN_SUBMENU_: ree,
  _A_MENU_2_SEARCH_: iee,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "تم العثور على {{ count }} من عناصر القائمة",
  _A_MENU_2_SEARCH_NONE_FOUND_: aee,
  _A_MENU_2_TO_MAIN_MENU_: see
}, oee = "Breadcrumb", uee = "Versteckte Links", _ee = "Menü schließen", dee = "Menü öffnen", cee = "Untermenü schließen:", fee = "Hauptmenü", hee = "Öffnen Menüsuche", Aee = "Untermenü öffnen:", Eee = "Menüsuche", pee = "Keine Menüeinträge gefunden", Tee = "Zum Hauptmenü", See = {
  _A_MENU_2_BREADCRUMB_: oee,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: uee,
  _A_MENU_2_BTN_CLOSE_: _ee,
  _A_MENU_2_BTN_OPEN_: dee,
  _A_MENU_2_CLOSE_SUBMENU_: cee,
  _A_MENU_2_MAIN_MENU_: fee,
  _A_MENU_2_OPEN_SEARCH_: hee,
  _A_MENU_2_OPEN_SUBMENU_: Aee,
  _A_MENU_2_SEARCH_: Eee,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} Menüeinträge gefunden",
  _A_MENU_2_SEARCH_NONE_FOUND_: pee,
  _A_MENU_2_TO_MAIN_MENU_: Tee
}, mee = "Breadcrumb", bee = "Show Hidden Links", Lee = "Close Menu", vee = "Open Menu", Iee = "Close Submenu:", gee = "Main Menu", yee = "Open Menu Search", Ree = "Open Submenu:", Oee = "Menu Search", Cee = "No Menu Entries Found", Nee = "To Main Menu", Dee = {
  _A_MENU_2_BREADCRUMB_: mee,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: bee,
  _A_MENU_2_BTN_CLOSE_: Lee,
  _A_MENU_2_BTN_OPEN_: vee,
  _A_MENU_2_CLOSE_SUBMENU_: Iee,
  _A_MENU_2_MAIN_MENU_: gee,
  _A_MENU_2_OPEN_SEARCH_: yee,
  _A_MENU_2_OPEN_SUBMENU_: Ree,
  _A_MENU_2_SEARCH_: Oee,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} Menu Entries Found",
  _A_MENU_2_SEARCH_NONE_FOUND_: Cee,
  _A_MENU_2_TO_MAIN_MENU_: Nee
}, Bee = "Breadcrumb", wee = "Mostrar enlaces ocultos", Pee = "Cerrar menú", xee = "Abrir menú", Fee = "Cerrar submenú:", Mee = "Menú principal", qee = "Abrir búsqueda en menú", $ee = "Abrir submenú:", kee = "Búsqueda en menú", Hee = "No se encontraron entradas de menú", Uee = "Al menú principal", Wee = {
  _A_MENU_2_BREADCRUMB_: Bee,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: wee,
  _A_MENU_2_BTN_CLOSE_: Pee,
  _A_MENU_2_BTN_OPEN_: xee,
  _A_MENU_2_CLOSE_SUBMENU_: Fee,
  _A_MENU_2_MAIN_MENU_: Mee,
  _A_MENU_2_OPEN_SEARCH_: qee,
  _A_MENU_2_OPEN_SUBMENU_: $ee,
  _A_MENU_2_SEARCH_: kee,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} entradas de menú encontradas",
  _A_MENU_2_SEARCH_NONE_FOUND_: Hee,
  _A_MENU_2_TO_MAIN_MENU_: Uee
}, Vee = "Breadcrumb", Gee = "Afficher les liens cachés", jee = "Fermer le menu", zee = "Ouvrir le menu", Kee = "Fermer le sous-menu :", Yee = "Menu principal", Zee = "Ouvrir la recherche dans le menu", Xee = "Ouvrir le sous-menu :", Jee = "Recherche dans le menu", Qee = "Aucune entrée de menu trouvée", ete = "Au menu principal", tte = {
  _A_MENU_2_BREADCRUMB_: Vee,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: Gee,
  _A_MENU_2_BTN_CLOSE_: jee,
  _A_MENU_2_BTN_OPEN_: zee,
  _A_MENU_2_CLOSE_SUBMENU_: Kee,
  _A_MENU_2_MAIN_MENU_: Yee,
  _A_MENU_2_OPEN_SEARCH_: Zee,
  _A_MENU_2_OPEN_SUBMENU_: Xee,
  _A_MENU_2_SEARCH_: Jee,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} entrées de menu trouvées",
  _A_MENU_2_SEARCH_NONE_FOUND_: Qee,
  _A_MENU_2_TO_MAIN_MENU_: ete
}, nte = "_A_MENU_2_BREADCRUMB_", rte = "_A_MENU_2_BREADCRUMB_SHOW_BTN_", ite = "Zatvaranje izbornika", ate = "Otvaranje izbornika", ste = "Glavni izbornik", lte = "Zatvaranje podizbornika", ote = "Otvaranje pretraživanja", ute = "Otvaranje podizbornika:", _te = "Pretraživanje izbornika", dte = "Nisu pronađeni rezultati pretraživanja", cte = "Natrag na glavni izbornik", fte = {
  _A_MENU_2_BREADCRUMB_: nte,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: rte,
  _A_MENU_2_BTN_CLOSE_: ite,
  _A_MENU_2_BTN_OPEN_: ate,
  _A_MENU_2_MAIN_MENU_: ste,
  _A_MENU_2_CLOSE_SUBMENU_: lte,
  _A_MENU_2_OPEN_SEARCH_: ote,
  _A_MENU_2_OPEN_SUBMENU_: ute,
  _A_MENU_2_SEARCH_: _te,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "Broj pronađenih rezultata: {{ count }}",
  _A_MENU_2_SEARCH_NONE_FOUND_: dte,
  _A_MENU_2_TO_MAIN_MENU_: cte
}, hte = "Breadcrumb", Ate = "Mostra link nascosti", Ete = "Chiudi menu", pte = "Apri menu", Tte = "Chiudi sottomenu:", Ste = "Menu principale", mte = "Apri ricerca nel menu", bte = "Apri sottomenu:", Lte = "Ricerca nel menu", vte = "Nessuna voce di menu trovata", Ite = "Al menu principale", gte = {
  _A_MENU_2_BREADCRUMB_: hte,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: Ate,
  _A_MENU_2_BTN_CLOSE_: Ete,
  _A_MENU_2_BTN_OPEN_: pte,
  _A_MENU_2_CLOSE_SUBMENU_: Tte,
  _A_MENU_2_MAIN_MENU_: Ste,
  _A_MENU_2_OPEN_SEARCH_: mte,
  _A_MENU_2_OPEN_SUBMENU_: bte,
  _A_MENU_2_SEARCH_: Lte,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} voci di menu trovate",
  _A_MENU_2_SEARCH_NONE_FOUND_: vte,
  _A_MENU_2_TO_MAIN_MENU_: Ite
}, yte = "Breadcrumb", Rte = "Скрытые ссылки", Ote = "Закрыть меню", Cte = "Открыть меню", Nte = "Главное меню", Dte = "Закрыть подменю:", Bte = "Открыть поиск в меню", wte = "Открыть подменю:", Pte = "Поиск в меню", xte = "Пункты меню не найдены", Fte = "В главное меню", Mte = {
  _A_MENU_2_BREADCRUMB_: yte,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: Rte,
  _A_MENU_2_BTN_CLOSE_: Ote,
  _A_MENU_2_BTN_OPEN_: Cte,
  _A_MENU_2_MAIN_MENU_: Nte,
  _A_MENU_2_CLOSE_SUBMENU_: Dte,
  _A_MENU_2_OPEN_SEARCH_: Bte,
  _A_MENU_2_OPEN_SUBMENU_: wte,
  _A_MENU_2_SEARCH_: Pte,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "Найдены пункты меню: {{ count }}",
  _A_MENU_2_SEARCH_NONE_FOUND_: xte,
  _A_MENU_2_TO_MAIN_MENU_: Fte
}, Wi = {
  ar: lee,
  de: See,
  en: Dee,
  es: Wee,
  fr: tte,
  hr: fte,
  it: gte,
  ru: Mte
}, qte = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", $te = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", kte = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: qte,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: $te
}, Hte = "Nach oben scrollen", Ute = "Nach unten scrollen", Wte = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Hte,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Ute
}, Vte = "Scroll top", Gte = "Scroll down", jte = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Vte,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Gte
}, zte = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Kte = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Yte = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: zte,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Kte
}, Zte = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Xte = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Jte = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Zte,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Xte
}, Qte = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", ene = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", tne = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Qte,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: ene
}, nne = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", rne = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", ine = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: nne,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: rne
}, ane = "Прокрутить наверх", sne = "Прокрутить вниз", lne = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: ane,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: sne
}, Vi = {
  ar: kte,
  de: Wte,
  en: jte,
  es: Yte,
  fr: Jte,
  hr: tne,
  it: ine,
  ru: lne
}, one = "Bytes", une = "KB", _ne = "MB", dne = "GB", cne = "TB", fne = "PB", hne = "EB", Ane = "ZB", Ene = "YB", pne = {
  _A_FILE_SIZE_B_: one,
  _A_FILE_SIZE_KB_: une,
  _A_FILE_SIZE_MB_: _ne,
  _A_FILE_SIZE_GB_: dne,
  _A_FILE_SIZE_TB_: cne,
  _A_FILE_SIZE_PB_: fne,
  _A_FILE_SIZE_EB_: hne,
  _A_FILE_SIZE_ZB_: Ane,
  _A_FILE_SIZE_YB_: Ene
}, Tne = "Bytes", Sne = "KB", mne = "MB", bne = "GB", Lne = "TB", vne = "PB", Ine = "EB", gne = "ZB", yne = "YB", Rne = {
  _A_FILE_SIZE_B_: Tne,
  _A_FILE_SIZE_KB_: Sne,
  _A_FILE_SIZE_MB_: mne,
  _A_FILE_SIZE_GB_: bne,
  _A_FILE_SIZE_TB_: Lne,
  _A_FILE_SIZE_PB_: vne,
  _A_FILE_SIZE_EB_: Ine,
  _A_FILE_SIZE_ZB_: gne,
  _A_FILE_SIZE_YB_: yne
}, One = "Bytes", Cne = "KB", Nne = "MB", Dne = "GB", Bne = "TB", wne = "PB", Pne = "EB", xne = "ZB", Fne = "YB", Mne = {
  _A_FILE_SIZE_B_: One,
  _A_FILE_SIZE_KB_: Cne,
  _A_FILE_SIZE_MB_: Nne,
  _A_FILE_SIZE_GB_: Dne,
  _A_FILE_SIZE_TB_: Bne,
  _A_FILE_SIZE_PB_: wne,
  _A_FILE_SIZE_EB_: Pne,
  _A_FILE_SIZE_ZB_: xne,
  _A_FILE_SIZE_YB_: Fne
}, qne = "Bytes", $ne = "KB", kne = "MB", Hne = "GB", Une = "TB", Wne = "PB", Vne = "EB", Gne = "ZB", jne = "YB", zne = {
  _A_FILE_SIZE_B_: qne,
  _A_FILE_SIZE_KB_: $ne,
  _A_FILE_SIZE_MB_: kne,
  _A_FILE_SIZE_GB_: Hne,
  _A_FILE_SIZE_TB_: Une,
  _A_FILE_SIZE_PB_: Wne,
  _A_FILE_SIZE_EB_: Vne,
  _A_FILE_SIZE_ZB_: Gne,
  _A_FILE_SIZE_YB_: jne
}, Kne = "Bytes", Yne = "KB", Zne = "MB", Xne = "GB", Jne = "TB", Qne = "PB", ere = "EB", tre = "ZB", nre = "YB", rre = {
  _A_FILE_SIZE_B_: Kne,
  _A_FILE_SIZE_KB_: Yne,
  _A_FILE_SIZE_MB_: Zne,
  _A_FILE_SIZE_GB_: Xne,
  _A_FILE_SIZE_TB_: Jne,
  _A_FILE_SIZE_PB_: Qne,
  _A_FILE_SIZE_EB_: ere,
  _A_FILE_SIZE_ZB_: tre,
  _A_FILE_SIZE_YB_: nre
}, ire = "B", are = "KB", sre = "MB", lre = "GB", ore = "TB", ure = "PB", _re = "EB", dre = "ZB", cre = "YB", fre = {
  _A_FILE_SIZE_B_: ire,
  _A_FILE_SIZE_KB_: are,
  _A_FILE_SIZE_MB_: sre,
  _A_FILE_SIZE_GB_: lre,
  _A_FILE_SIZE_TB_: ore,
  _A_FILE_SIZE_PB_: ure,
  _A_FILE_SIZE_EB_: _re,
  _A_FILE_SIZE_ZB_: dre,
  _A_FILE_SIZE_YB_: cre
}, hre = "Bytes", Are = "KB", Ere = "MB", pre = "GB", Tre = "TB", Sre = "PB", mre = "EB", bre = "ZB", Lre = "YB", vre = {
  _A_FILE_SIZE_B_: hre,
  _A_FILE_SIZE_KB_: Are,
  _A_FILE_SIZE_MB_: Ere,
  _A_FILE_SIZE_GB_: pre,
  _A_FILE_SIZE_TB_: Tre,
  _A_FILE_SIZE_PB_: Sre,
  _A_FILE_SIZE_EB_: mre,
  _A_FILE_SIZE_ZB_: bre,
  _A_FILE_SIZE_YB_: Lre
}, Ire = "Б", gre = "КБ", yre = "МБ", Rre = "ГБ", Ore = "ТБ", Cre = "ПБ", Nre = "ЭБ", Dre = "ЗБ", Bre = "ИБ", wre = {
  _A_FILE_SIZE_B_: Ire,
  _A_FILE_SIZE_KB_: gre,
  _A_FILE_SIZE_MB_: yre,
  _A_FILE_SIZE_GB_: Rre,
  _A_FILE_SIZE_TB_: Ore,
  _A_FILE_SIZE_PB_: Cre,
  _A_FILE_SIZE_EB_: Nre,
  _A_FILE_SIZE_ZB_: Dre,
  _A_FILE_SIZE_YB_: Bre
}, Gi = {
  ar: pne,
  de: Rne,
  en: Mne,
  es: zne,
  fr: rre,
  hr: fre,
  it: vre,
  ru: wre
}, Pre = "[ALOHA]", xre = "[ALOHA]", Fre = "[ALOHA]", Mre = "التنقل بين الصفحات", qre = "[ALOHA]", $re = "[ALOHA]", kre = {
  _A_COUNT_PER_PAGE_: Pre,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: xre,
  _A_PAGINATION_LAST_PAGE_: Fre,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ allPages }}ل {{ currentPage }}",
  _A_PAGINATION_NAVIGATION_: Mre,
  _A_PAGINATION_NEXT_PAGE_: qre,
  _A_PAGINATION_PREVIOUS_PAGE_: $re,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, Hre = "Pro Seite:", Ure = "Zur ersten Seite", Wre = "Zur letzten Seite", Vre = "Paginierungsnavigation", Gre = "Zur nächsten Seite", jre = "Zur vorherigen Seite", zre = {
  _A_COUNT_PER_PAGE_: Hre,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Zeilen pro Seite: {{ count }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} von {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: Ure,
  _A_PAGINATION_LAST_PAGE_: Wre,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} von {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: Vre,
  _A_PAGINATION_NEXT_PAGE_: Gre,
  _A_PAGINATION_PREVIOUS_PAGE_: jre,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "Zur Seite Nummer {{ page }}"
}, Kre = "Per page:", Yre = "To first page", Zre = "To last page", Xre = "Pagination navigation", Jre = "To next page", Qre = "To previous page", eie = {
  _A_COUNT_PER_PAGE_: Kre,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Items per page:",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} to {{ current }} of {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: Yre,
  _A_PAGINATION_LAST_PAGE_: Zre,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} of {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: Xre,
  _A_PAGINATION_NEXT_PAGE_: Jre,
  _A_PAGINATION_PREVIOUS_PAGE_: Qre,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "To page {{ page }}"
}, tie = "[ALOHA]", nie = "[ALOHA]", rie = "[ALOHA]", iie = "Navegación de paginación", aie = "[ALOHA]", sie = "[ALOHA]", lie = {
  _A_COUNT_PER_PAGE_: tie,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: nie,
  _A_PAGINATION_LAST_PAGE_: rie,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} de {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: iie,
  _A_PAGINATION_NEXT_PAGE_: aie,
  _A_PAGINATION_PREVIOUS_PAGE_: sie,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, oie = "[ALOHA]", uie = "[ALOHA]", _ie = "[ALOHA]", die = "Navigation dans la pagination", cie = "[ALOHA]", fie = "[ALOHA]", hie = {
  _A_COUNT_PER_PAGE_: oie,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: uie,
  _A_PAGINATION_LAST_PAGE_: _ie,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} de {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: die,
  _A_PAGINATION_NEXT_PAGE_: cie,
  _A_PAGINATION_PREVIOUS_PAGE_: fie,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, Aie = "Po stranici:", Eie = "[ALOHA]", pie = "[ALOHA]", Tie = "Navigacija po stranicama", Sie = "[ALOHA]", mie = "[ALOHA]", bie = {
  _A_COUNT_PER_PAGE_: Aie,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Broj redaka po stranici: {{ count }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} od {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: Eie,
  _A_PAGINATION_LAST_PAGE_: pie,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} iz {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: Tie,
  _A_PAGINATION_NEXT_PAGE_: Sie,
  _A_PAGINATION_PREVIOUS_PAGE_: mie,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, Lie = "[ALOHA]", vie = "[ALOHA]", Iie = "[ALOHA]", gie = "Navigazione dell'impaginazione", yie = "[ALOHA]", Rie = "[ALOHA]", Oie = {
  _A_COUNT_PER_PAGE_: Lie,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: vie,
  _A_PAGINATION_LAST_PAGE_: Iie,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} Di {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: gie,
  _A_PAGINATION_NEXT_PAGE_: yie,
  _A_PAGINATION_PREVIOUS_PAGE_: Rie,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, Cie = "На странице:", Nie = "К первой странице", Die = "К последней странице", Bie = "Навигация по страницам", wie = "К следующей странице", Pie = "К предыдущей странице", xie = {
  _A_COUNT_PER_PAGE_: Cie,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Строк на странице: {{ cont }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} из {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: Nie,
  _A_PAGINATION_LAST_PAGE_: Die,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} из {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: Bie,
  _A_PAGINATION_NEXT_PAGE_: wie,
  _A_PAGINATION_PREVIOUS_PAGE_: Pie,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "К странице номер {{ page }}"
}, ji = {
  ar: kre,
  de: zre,
  en: eie,
  es: lie,
  fr: hie,
  hr: bie,
  it: Oie,
  ru: xie
}, Fie = "القيمة الحالية", Mie = "تجاهل جميع التغييرات", qie = "تنسيق الإدخال", $ie = "إدخال", kie = "إعادة تعيين الإدخال إلى القيمة الحالية", Hie = {
  _A_JSON_CURRENT_VALUE_: Fie,
  _A_JSON_DISCARD_ALL_CHANGES_: Mie,
  "_A_JSON_ERROR_HTML_{{error}}_": "لا يمكن تحويل الإدخال إلى كائن JSON. يرجى التحقق من الإدخال الخاص بك:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: qie,
  _A_JSON_INPUT_: $ie,
  _A_JSON_RESET_INPUT_: kie
}, Uie = "Aktueller Wert", Wie = "Alle Änderungen verwerfen", Vie = "Eingabe formatieren", Gie = "Eingabe", jie = "Eingabe aktuellen Wert zurücksetzen", zie = {
  _A_JSON_CURRENT_VALUE_: Uie,
  _A_JSON_DISCARD_ALL_CHANGES_: Wie,
  "_A_JSON_ERROR_HTML_{{error}}_": "Die Eingabe kann nicht in ein JSON-Objekt konvertiert werden. Bitte prüfen Sie Ihre Eingabe:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: Vie,
  _A_JSON_INPUT_: Gie,
  _A_JSON_RESET_INPUT_: jie
}, Kie = "Current Value", Yie = "Discard All Changes", Zie = "Format Input", Xie = "Input", Jie = "Reset Input to Current Value", Qie = {
  _A_JSON_CURRENT_VALUE_: Kie,
  _A_JSON_DISCARD_ALL_CHANGES_: Yie,
  "_A_JSON_ERROR_HTML_{{error}}_": "Input cannot be converted into a JSON object. Please check your input:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: Zie,
  _A_JSON_INPUT_: Xie,
  _A_JSON_RESET_INPUT_: Jie
}, eae = "Valor actual", tae = "Descartar todos los cambios", nae = "Formatear entrada", rae = "Entrada", iae = "Restablecer entrada al valor actual", aae = {
  _A_JSON_CURRENT_VALUE_: eae,
  _A_JSON_DISCARD_ALL_CHANGES_: tae,
  "_A_JSON_ERROR_HTML_{{error}}_": "No se puede convertir la entrada en un objeto JSON. Por favor, revise su entrada:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: nae,
  _A_JSON_INPUT_: rae,
  _A_JSON_RESET_INPUT_: iae
}, sae = "Valeur actuelle", lae = "Annuler toutes les modifications", oae = "Formater l'entrée", uae = "Entrée", _ae = "Réinitialiser l'entrée à la valeur actuelle", dae = {
  _A_JSON_CURRENT_VALUE_: sae,
  _A_JSON_DISCARD_ALL_CHANGES_: lae,
  "_A_JSON_ERROR_HTML_{{error}}_": "L'entrée ne peut pas être convertie en objet JSON. Veuillez vérifier votre entrée:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: oae,
  _A_JSON_INPUT_: uae,
  _A_JSON_RESET_INPUT_: _ae
}, cae = "Trenutna vrijednost", fae = "Odbaci sve promjene", hae = "Formatiraj unos", Aae = "Unos", Eae = "Poništi unos na trenutnu vrijednost", pae = {
  _A_JSON_CURRENT_VALUE_: cae,
  _A_JSON_DISCARD_ALL_CHANGES_: fae,
  "_A_JSON_ERROR_HTML_{{error}}_": "Unos se ne može pretvoriti u JSON objekt. Molimo provjerite svoj unos:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: hae,
  _A_JSON_INPUT_: Aae,
  _A_JSON_RESET_INPUT_: Eae
}, Tae = "Valore attuale", Sae = "Annulla tutte le modifiche", mae = "Formatta input", bae = "Input", Lae = "Reimposta input al valore corrente", vae = {
  _A_JSON_CURRENT_VALUE_: Tae,
  _A_JSON_DISCARD_ALL_CHANGES_: Sae,
  "_A_JSON_ERROR_HTML_{{error}}_": "L'input non può essere convertito in un oggetto JSON. Si prega di controllare l'input:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: mae,
  _A_JSON_INPUT_: bae,
  _A_JSON_RESET_INPUT_: Lae
}, Iae = "Текущее значение", gae = "Отменить все изменения", yae = "Форматировать ввод", Rae = "Ввод", Oae = "Сбросить ввод до текущего значения", Cae = {
  _A_JSON_CURRENT_VALUE_: Iae,
  _A_JSON_DISCARD_ALL_CHANGES_: gae,
  "_A_JSON_ERROR_HTML_{{error}}_": "Ввод не может быть преобразован в объект JSON. Пожалуйста, проверьте ваш ввод:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: yae,
  _A_JSON_INPUT_: Rae,
  _A_JSON_RESET_INPUT_: Oae
}, zi = {
  ar: Hie,
  de: zie,
  en: Qie,
  es: aae,
  fr: dae,
  hr: pae,
  it: vae,
  ru: Cae
}, Nae = "غير محدد", Dae = "لا", Bae = "نعم", wae = {
  _A_SWITCH_DEFAULT_LABEL_: Nae,
  _A_SWITCH_FALSE_LABEL_: Dae,
  _A_SWITCH_TRUE_LABEL_: Bae
}, Pae = "Nicht ausgewählt", xae = "Nein", Fae = "Ja", Mae = {
  _A_SWITCH_DEFAULT_LABEL_: Pae,
  _A_SWITCH_FALSE_LABEL_: xae,
  _A_SWITCH_TRUE_LABEL_: Fae
}, qae = "Not selected", $ae = "No", kae = "Yes", Hae = {
  _A_SWITCH_DEFAULT_LABEL_: qae,
  _A_SWITCH_FALSE_LABEL_: $ae,
  _A_SWITCH_TRUE_LABEL_: kae
}, Uae = "No seleccionado", Wae = "No", Vae = "Sí", Gae = {
  _A_SWITCH_DEFAULT_LABEL_: Uae,
  _A_SWITCH_FALSE_LABEL_: Wae,
  _A_SWITCH_TRUE_LABEL_: Vae
}, jae = "Non sélectionné", zae = "Non", Kae = "Oui", Yae = {
  _A_SWITCH_DEFAULT_LABEL_: jae,
  _A_SWITCH_FALSE_LABEL_: zae,
  _A_SWITCH_TRUE_LABEL_: Kae
}, Zae = "Nije odabrano", Xae = "Ne", Jae = "Da", Qae = {
  _A_SWITCH_DEFAULT_LABEL_: Zae,
  _A_SWITCH_FALSE_LABEL_: Xae,
  _A_SWITCH_TRUE_LABEL_: Jae
}, ese = "Non selezionato", tse = "No", nse = "Sì", rse = {
  _A_SWITCH_DEFAULT_LABEL_: ese,
  _A_SWITCH_FALSE_LABEL_: tse,
  _A_SWITCH_TRUE_LABEL_: nse
}, ise = "Не выбрано", ase = "Нет", sse = "Да", lse = {
  _A_SWITCH_DEFAULT_LABEL_: ise,
  _A_SWITCH_FALSE_LABEL_: ase,
  _A_SWITCH_TRUE_LABEL_: sse
}, Ki = {
  ar: wae,
  de: Mae,
  en: Hae,
  es: Gae,
  fr: Yae,
  hr: Qae,
  it: rse,
  ru: lse
}, ose = "تحميل", use = {
  _A_SPINNER_LOADING_: ose
}, _se = "Wird geladen", dse = {
  _A_SPINNER_LOADING_: _se
}, cse = "Loading", fse = {
  _A_SPINNER_LOADING_: cse
}, hse = "Cargando", Ase = {
  _A_SPINNER_LOADING_: hse
}, Ese = "Chargement", pse = {
  _A_SPINNER_LOADING_: Ese
}, Tse = "Učitavam", Sse = {
  _A_SPINNER_LOADING_: Tse
}, mse = "Caricamento", bse = {
  _A_SPINNER_LOADING_: mse
}, Lse = "Загрузка", vse = {
  _A_SPINNER_LOADING_: Lse
}, Yi = {
  ar: use,
  de: dse,
  en: fse,
  es: Ase,
  fr: pse,
  hr: Sse,
  it: bse,
  ru: vse
}, Ise = "تحميل", gse = {
  _A_LOADING_LOADING_: Ise
}, yse = "Wird geladen", Rse = {
  _A_LOADING_LOADING_: yse
}, Ose = "Loading", Cse = {
  _A_LOADING_LOADING_: Ose
}, Nse = "Cargando", Dse = {
  _A_LOADING_LOADING_: Nse
}, Bse = "Chargement", wse = {
  _A_LOADING_LOADING_: Bse
}, Pse = "Učitavam", xse = {
  _A_LOADING_LOADING_: Pse
}, Fse = "Caricamento", Mse = {
  _A_LOADING_LOADING_: Fse
}, qse = "Загрузка", $se = {
  _A_LOADING_LOADING_: qse
}, Zi = {
  ar: gse,
  de: Rse,
  en: Cse,
  es: Dse,
  fr: wse,
  hr: xse,
  it: Mse,
  ru: $se
}, kse = "تحميل", Hse = {
  _A_CLOAK_LOADING_: kse
}, Use = "Wird geladen", Wse = {
  _A_CLOAK_LOADING_: Use
}, Vse = "Loading", Gse = {
  _A_CLOAK_LOADING_: Vse
}, jse = "Cargando", zse = {
  _A_CLOAK_LOADING_: jse
}, Kse = "Chargement", Yse = {
  _A_CLOAK_LOADING_: Kse
}, Zse = "Učitavam", Xse = {
  _A_CLOAK_LOADING_: Zse
}, Jse = "Caricamento", Qse = {
  _A_CLOAK_LOADING_: Jse
}, ele = "Загрузка", tle = {
  _A_CLOAK_LOADING_: ele
}, Xi = {
  ar: Hse,
  de: Wse,
  en: Gse,
  es: zse,
  fr: Yse,
  hr: Xse,
  it: Qse,
  ru: tle
}, nle = "الحقول المميزة بعلامة النجمة * مطلوبة.", rle = {
  _A_REQUIRED_TEXT_: nle
}, ile = "Die mit *Sternchen versehenen Felder sind Pflichtfelder.", ale = {
  _A_REQUIRED_TEXT_: ile
}, sle = "Fields marked with an asterisk * are required.", lle = {
  _A_REQUIRED_TEXT_: sle
}, ole = "Los campos marcados con un asterisco * son obligatorios.", ule = {
  _A_REQUIRED_TEXT_: ole
}, _le = "Les champs marqués d'un astérisque * sont obligatoires.", dle = {
  _A_REQUIRED_TEXT_: _le
}, cle = "Polja označena zvjezdicom * su obavezna.", fle = {
  _A_REQUIRED_TEXT_: cle
}, hle = "I campi contrassegnati con un asterisco * sono obbligatori.", Ale = {
  _A_REQUIRED_TEXT_: hle
}, Ele = "Поля, отмеченные звездочкой *, являются обязательными.", ple = {
  _A_REQUIRED_TEXT_: Ele
}, Ji = {
  ar: rle,
  de: ale,
  en: lle,
  es: ule,
  fr: dle,
  hr: fle,
  it: Ale,
  ru: ple
}, Tle = "تقليل القيمة", Sle = "زيادة القيمة", mle = {
  _A_INPUT_NUMBER_BTN_DECREASE_: Tle,
  _A_INPUT_NUMBER_BTN_INCREASE_: Sle
}, ble = "Wert verringern", Lle = "Wert erhöhen", vle = {
  _A_INPUT_NUMBER_BTN_DECREASE_: ble,
  _A_INPUT_NUMBER_BTN_INCREASE_: Lle
}, Ile = "Decrease value", gle = "Increase value", yle = {
  _A_INPUT_NUMBER_BTN_DECREASE_: Ile,
  _A_INPUT_NUMBER_BTN_INCREASE_: gle
}, Rle = "Disminuir valor", Ole = "Aumentar valor", Cle = {
  _A_INPUT_NUMBER_BTN_DECREASE_: Rle,
  _A_INPUT_NUMBER_BTN_INCREASE_: Ole
}, Nle = "Diminuer la valeur", Dle = "Augmenter la valeur", Ble = {
  _A_INPUT_NUMBER_BTN_DECREASE_: Nle,
  _A_INPUT_NUMBER_BTN_INCREASE_: Dle
}, wle = "Smanji vrijednost", Ple = "Povećaj vrijednost", xle = {
  _A_INPUT_NUMBER_BTN_DECREASE_: wle,
  _A_INPUT_NUMBER_BTN_INCREASE_: Ple
}, Fle = "Diminuisci valore", Mle = "Aumenta valore", qle = {
  _A_INPUT_NUMBER_BTN_DECREASE_: Fle,
  _A_INPUT_NUMBER_BTN_INCREASE_: Mle
}, $le = "Уменьшить значение", kle = "Увеличить значение", Hle = {
  _A_INPUT_NUMBER_BTN_DECREASE_: $le,
  _A_INPUT_NUMBER_BTN_INCREASE_: kle
}, Qi = {
  ar: mle,
  de: vle,
  en: yle,
  es: Cle,
  fr: Ble,
  hr: xle,
  it: qle,
  ru: Hle
}, Ule = "تقليل القيمة", Wle = "زيادة القيمة", Vle = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: Ule,
  _A_INPUT_CURRENCY_BTN_INCREASE_: Wle
}, Gle = "Wert verringern", jle = "Wert erhöhen", zle = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: Gle,
  _A_INPUT_CURRENCY_BTN_INCREASE_: jle
}, Kle = "Decrease value", Yle = "Increase value", Zle = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: Kle,
  _A_INPUT_CURRENCY_BTN_INCREASE_: Yle
}, Xle = "Disminuir valor", Jle = "Aumentar valor", Qle = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: Xle,
  _A_INPUT_CURRENCY_BTN_INCREASE_: Jle
}, eoe = "Diminuer la valeur", toe = "Augmenter la valeur", noe = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: eoe,
  _A_INPUT_CURRENCY_BTN_INCREASE_: toe
}, roe = "Smanji vrijednost", ioe = "Povećaj vrijednost", aoe = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: roe,
  _A_INPUT_CURRENCY_BTN_INCREASE_: ioe
}, soe = "Diminuisci valore", loe = "Aumenta valore", ooe = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: soe,
  _A_INPUT_CURRENCY_BTN_INCREASE_: loe
}, uoe = "Уменьшить значение", _oe = "Увеличить значение", doe = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: uoe,
  _A_INPUT_CURRENCY_BTN_INCREASE_: _oe
}, ea = {
  ar: Vle,
  de: zle,
  en: Zle,
  es: Qle,
  fr: noe,
  hr: aoe,
  it: ooe,
  ru: doe
}, coe = {
  ...BV,
  ...ki.ar,
  ...Di.ar,
  ...qi.ar,
  ...Ci.ar,
  ...$i.ar,
  ...Hi.ar,
  ...Bi.ar,
  ...Fi.ar,
  ...Pi.ar,
  ...xi.ar,
  ...wi.ar,
  ...Ui.ar,
  ...Mi.ar,
  ...Ni.ar,
  ...Wi.ar,
  ...Vi.ar,
  ...Gi.ar,
  ...ji.ar,
  ...zi.ar,
  ...Ki.ar,
  ...Yi.ar,
  ...Zi.ar,
  ...Xi.ar,
  ...Ji.ar,
  ...Qi.ar,
  ...ea.ar
}, foe = {
  ...GV,
  ...ki.de,
  ...Di.de,
  ...qi.de,
  ...Ci.de,
  ...$i.de,
  ...Hi.de,
  ...Bi.de,
  ...Fi.de,
  ...Pi.de,
  ...xi.de,
  ...wi.de,
  ...Ui.de,
  ...Mi.de,
  ...Ni.de,
  ...Wi.de,
  ...Vi.de,
  ...Gi.de,
  ...ji.de,
  ...zi.de,
  ...Ki.de,
  ...Yi.de,
  ...Zi.de,
  ...Xi.de,
  ...Ji.de,
  ...Qi.de,
  ...ea.de
}, hoe = {
  ...i2,
  ...ki.en,
  ...Di.en,
  ...qi.en,
  ...Ci.en,
  ...$i.en,
  ...Hi.en,
  ...Bi.en,
  ...Fi.en,
  ...Pi.en,
  ...xi.en,
  ...wi.en,
  ...Ui.en,
  ...Mi.en,
  ...Ni.en,
  ...Wi.en,
  ...Vi.en,
  ...Gi.en,
  ...ji.en,
  ...zi.en,
  ...Ki.en,
  ...Yi.en,
  ...Zi.en,
  ...Xi.en,
  ...Ji.en,
  ...Qi.en,
  ...ea.en
}, Aoe = {
  ...E2,
  ...ki.es,
  ...Di.es,
  ...qi.es,
  ...Ci.es,
  ...$i.es,
  ...Hi.es,
  ...Bi.es,
  ...Fi.es,
  ...Pi.es,
  ...xi.es,
  ...wi.es,
  ...Ui.es,
  ...Mi.es,
  ...Ni.es,
  ...Wi.es,
  ...Vi.es,
  ...Gi.es,
  ...ji.es,
  ...zi.es,
  ...Ki.es,
  ...Yi.es,
  ...Zi.es,
  ...Xi.es,
  ...Ji.es,
  ...Qi.es,
  ...ea.es
}, Eoe = {
  ...O2,
  ...ki.fr,
  ...Di.fr,
  ...qi.fr,
  ...Ci.fr,
  ...$i.fr,
  ...Hi.fr,
  ...Bi.fr,
  ...Fi.fr,
  ...Pi.fr,
  ...xi.fr,
  ...wi.fr,
  ...Ui.fr,
  ...Mi.fr,
  ...Ni.fr,
  ...Wi.fr,
  ...Vi.fr,
  ...Gi.fr,
  ...ji.fr,
  ...zi.fr,
  ...Ki.fr,
  ...Yi.fr,
  ...Zi.fr,
  ...Xi.fr,
  ...Ji.fr,
  ...Qi.fr,
  ...ea.fr
}, poe = {
  ...H2,
  ...ki.hr,
  ...Di.hr,
  ...qi.hr,
  ...Ci.hr,
  ...$i.hr,
  ...Hi.hr,
  ...Bi.hr,
  ...Fi.hr,
  ...Pi.hr,
  ...xi.hr,
  ...wi.hr,
  ...Ui.hr,
  ...Mi.hr,
  ...Ni.hr,
  ...Wi.hr,
  ...Vi.hr,
  ...Gi.hr,
  ...ji.hr,
  ...zi.hr,
  ...Ki.hr,
  ...Yi.hr,
  ...Zi.hr,
  ...Xi.hr,
  ...Ji.hr,
  ...Qi.hr,
  ...ea.hr
}, Toe = {
  ...Q2,
  ...ki.it,
  ...Di.it,
  ...qi.it,
  ...Ci.it,
  ...$i.it,
  ...Hi.it,
  ...Bi.it,
  ...Fi.it,
  ...Pi.it,
  ...xi.it,
  ...wi.it,
  ...Ui.it,
  ...Mi.it,
  ...Ni.it,
  ...Wi.it,
  ...Vi.it,
  ...Gi.it,
  ...ji.it,
  ...zi.it,
  ...Ki.it,
  ...Yi.it,
  ...Zi.it,
  ...Xi.it,
  ...Ji.it,
  ...Qi.it,
  ...ea.it
}, Soe = {
  ...f5,
  ...ki.ru,
  ...Di.ru,
  ...qi.ru,
  ...Ci.ru,
  ...$i.ru,
  ...Hi.ru,
  ...Bi.ru,
  ...Fi.ru,
  ...Pi.ru,
  ...xi.ru,
  ...wi.ru,
  ...Ui.ru,
  ...Mi.ru,
  ...Ni.ru,
  ...Wi.ru,
  ...Vi.ru,
  ...Gi.ru,
  ...ji.ru,
  ...zi.ru,
  ...Ki.ru,
  ...Yi.ru,
  ...Zi.ru,
  ...Xi.ru,
  ...Ji.ru,
  ...Qi.ru,
  ...ea.ru
}, hue = {
  ar: coe,
  de: foe,
  en: hoe,
  es: Aoe,
  fr: Eoe,
  hr: poe,
  it: Toe,
  ru: Soe
};
export {
  goe as AAccordion,
  gc as AAlert,
  Coe as AAlertPlugin,
  rt as AButton,
  lM as ACheckbox,
  Ci as ACheckboxI18n,
  al as ACloak,
  Xi as ACloakI18n,
  Noe as ACloakPlugin,
  Xc as AConfirmAPI,
  Yo as ADatepicker,
  LM as ADatepickerRange,
  Ni as ADatepickerRangeI18n,
  Poe as ADisclosure,
  Di as ADisclosureI18n,
  ei as ADropdown,
  ES as ADropdownGlobalAPI,
  Oe as AElement,
  GM as AErrors,
  nn as AErrorsText,
  Rq as AEventOutsideAPI,
  Gq as AFieldset,
  Bi as AFieldsetI18n,
  Uoe as AFilters,
  sr as AFiltersAPI,
  F1 as AFiltersAPI_additionFilters,
  X$ as AFiltersHorizontal,
  wi as AFiltersI18n,
  aue as AFiltersPlugin,
  e$ as AFiltersRight,
  Ou as AForm,
  rn as AFormHelpText,
  $oe as AFormPlugin,
  Md as AGet,
  RS as AGroup,
  qd as AGroupButtonDropdown,
  Woe as AGroupButtonDropdownPlugin,
  GF as AHttpAPI,
  fS as AHttpAPI_API_CONFIG,
  UF as AHttpAPI_abortHttp,
  Ca as AHttpAPI_callHttpRequestAndCheckSavedApi,
  WF as AHttpAPI_clearAllApiSaved,
  VF as AHttpAPI_clearApiSaved,
  JF as AHttpAPI_deleteHttp,
  jF as AHttpAPI_getHttp,
  zF as AHttpAPI_getListHttp,
  KF as AHttpAPI_getOptionsHttp,
  Doe as AHttpAPI_getUrlParams,
  XF as AHttpAPI_patchHttp,
  YF as AHttpAPI_postHttp,
  ZF as AHttpAPI_putHttp,
  $F as AHttpAPI_setBaseUrl,
  kF as AHttpAPI_setErrorCallbacks,
  HF as AHttpAPI_setHeaderParams,
  tM as AHttpAPI_setUrlForArray,
  eM as AHttpAPI_setUrlWithParams,
  sue as AHttpPlugin,
  Roe as AI18nPlugin,
  st as AIcon,
  yoe as AIconPlugin,
  Voe as AInfiniteScroll,
  Sn as AInput,
  QM as AInputCurrency,
  ea as AInputCurrencyI18n,
  Foe as AInputCurrencyPlugin,
  eq as AInputFile,
  Pi as AInputI18n,
  Ya as AInputNumber,
  Qi as AInputNumberI18n,
  Moe as AInputNumberPlugin,
  vo as AInputNumberRange,
  xi as AInputNumberRangeI18n,
  Tq as AJson,
  zi as AJsonI18n,
  iH as AKeyChildren,
  et as AKeyId,
  Lt as AKeyLabel,
  ul as AKeyParent,
  X as AKeysCode,
  kt as ALabel,
  gu as ALink,
  Goe as ALinkCopy,
  Fi as ALinkCopyI18n,
  bk as AList,
  CS as ALoading,
  Zi as ALoadingI18n,
  koe as ALoadingPlugin,
  joe as AMenu,
  Wi as AMenu2I18n,
  Lk as AMenuButtonToggle,
  FS as AMenuButtonToggle_ToggleAPI,
  fn as AMobileAPI,
  qo as AMobileAPI_isMobileWidth,
  yo as AMobileAPI_setIsMobileWidth,
  oue as AMobilePlugin,
  Cu as AModal,
  zoe as AModalConfirm,
  w$ as AModalForm,
  Mi as AModalI18n,
  Hoe as AModalPlugin,
  Koe as AModalWizard,
  Yoe as ANotification,
  Nu as ANotificationAPI,
  q$ as ANotificationAPI_addNotification,
  M$ as ANotificationAPI_setNotificationTimeout,
  rl as AOnHooks,
  yu as AOneCheckbox,
  Zoe as APageTabTitle,
  JH as APageTabTitleAPI,
  QH as APageTabTitleAPI_setBaseTitle,
  uue as APageTabTitlePlugin,
  cU as APagination,
  ji as APaginationI18n,
  Lr as APlacements,
  Xoe as AProgress,
  Joe as AProgressCircle,
  LS as ARadio,
  qi as ARadioI18n,
  Qoe as ARate,
  A$ as ARequired,
  Ji as ARequiredI18n,
  SU as AResizer,
  cn as ASafeHtml,
  eue as AScale,
  ol as ASelect,
  $i as ASelectI18n,
  qoe as ASelectPlugin,
  tue as AShowMore,
  ki as AShowMoreI18n,
  nl as ASpinner,
  Yi as ASpinnerI18n,
  Ooe as ASpinnerPlugin,
  vS as ASwitch,
  Ki as ASwitchI18n,
  rue as ATable,
  Hi as ATableI18n,
  nue as ATablePlugin,
  iue as ATabs,
  wq as ATemplate,
  Hq as ATextarea,
  e1 as ATooltip,
  pe as ATranslation,
  eH as AVerticalScroll,
  Vi as AVerticalScrollI18n,
  KH as AWizard,
  Ui as AWizardI18n,
  lue as AlohaPlugin,
  Rt as EventBus,
  Gi as Filters18n,
  wt as UIExcludeRenderAttributesAPI,
  an as UiAPI,
  zt as UiStyleHideAPI,
  od as colorToHex,
  Do as concatTwoStringsWithSpace,
  Loe as dompurify,
  T1 as filterBoolean,
  S1 as filterCapitalize,
  m1 as filterCurrency,
  b1 as filterDate,
  L1 as filterDefaultForEmpty,
  v1 as filterEmail,
  I1 as filterEscapeHtml,
  g1 as filterFileSize,
  Ks as filterFloat,
  y1 as filterJson,
  R1 as filterKeyValue,
  O1 as filterLimitTo,
  C1 as filterLink,
  Vo as filterList,
  D1 as filterLowerCase,
  B1 as filterMask,
  w1 as filterPropertyByValue,
  P1 as filterSearchHighlight,
  x1 as filterUpperCase,
  yM as focusableList,
  os as focusableSelector,
  RP as getTotalNestedCount,
  xt as getTranslatedText,
  woe as getUniqueSelector,
  fue as hexToRgb,
  fT as i18n,
  coe as i18nAR,
  hue as i18nAll,
  foe as i18nDE,
  hoe as i18nEN,
  Aoe as i18nES,
  Eoe as i18nFR,
  poe as i18nHR,
  Toe as i18nIT,
  Soe as i18nRU,
  gP as isArrayOfArrays,
  Ioe as isArrayOfStrings,
  ZM as isEven,
  xoe as isOdd,
  Ii as isPlaceholderTranslate,
  es as isTranslate,
  due as mixBlack,
  am as mixColor,
  _ue as mixWhite,
  cue as rgbToHex,
  voe as sanitize,
  Mo as sanitizeLocal,
  Boe as scrollToElement,
  Qr as setFocusToElement,
  RM as setFocusToNextFocusableElement,
  OM as setFocusToPreviousFocusableElement,
  ET as setI18n,
  pT as setLanguage,
  hc as timeTranslationLastChanged,
  Bo as toPrecision,
  zP as toggleTranslate,
  AT as translation,
  TT as updateTranslation
};
