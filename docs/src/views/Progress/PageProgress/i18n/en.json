{
  "_A_PROGRESS_COMPONENT_DESCRIPTION_": "AProgress component is a customisable progress bar for Vue.js applications. It allows for a visual representation of the progress of an activity or a process.",
  "_A_PROGRESS_COMPONENT_NAME_": "Progress bar",
  "_A_PROGRESS_GROUP_CLASS_COMBINATION_DESCRIPTION_": "The AProgress component allows you to create progress bars with customizable color combinations and match them to your Vue.js application's theme. You can customize both the background color of the progress bar and the color of the progress bar.",
  "_A_PROGRESS_GROUP_CLASS_COMBINATION_HEADER_": "Customizable color combinations for progress bar",
  "_A_PROGRESS_GROUP_CLASS_PROGRESS_BAR_DESCRIPTION_": "The AProgress component allows for customization of the progress bars in different colors to match your Vue.js application's theme. With the flexibility of the props, you can customize the background colors of the progress bars and visualize the progress. These customizable colors give you easy integration into your projects and allow you to configure the progress bar based on application needs.",
  "_A_PROGRESS_GROUP_CLASS_PROGRESS_BAR_FUNCTION_DESCRIPTION_": "The AProgress component allows you to create progress bars with a function that dynamically generates the background class based on the progress value. Instead of a fixed background class, you can associate the <strong>class-progress-bar</strong> prop with a function that returns the desired class value.",
  "_A_PROGRESS_GROUP_CLASS_PROGRESS_BAR_FUNCTION_HEADER_": "Dynamically customizable progress bars with a class determining function.",
  "_A_PROGRESS_GROUP_CLASS_PROGRESS_BAR_HEADER_": "Customizable colors for progress bar",
  "_A_PROGRESS_GROUP_DURATION_DESCRIPTION_": "The AProgress component allows you to control the animation duration for progress bars. By using the <strong>duration</strong> prop, you can set the speed of the animation, causing the progress bar to animate slower or faster. The duration is given in seconds and affects the speed at which the progress bar moves for striped or indeterminate progress bar.",
  "_A_PROGRESS_GROUP_DURATION_HEADER_": "Controlling the duration of the animation",
  "_A_PROGRESS_GROUP_INDETERMINATE_DESCRIPTION_": "The AProgress component allows you to create indeterminate progress bars with animation. By using the <strong>indeterminate</strong> prop, you can create a progress bar where progress is not represented by a specific value. Instead, a continuous, animated motion is displayed to indicate that an activity is ongoing with no indication of how long it is expected to take.This type of progress bar is particularly useful in situations where a process takes a long time and progress cannot be quantified.",
  "_A_PROGRESS_GROUP_INDETERMINATE_HEADER_": "Indeterminate progress bar with animation",
  "_A_PROGRESS_GROUP_MIN_MAX_DESCRIPTION_": "The AProgress component allows you to create progress bars with dynamic thresholds. You can use the <strong>min</strong> and <strong>max</strong> props to set the lower and upper bounds of the progress bar. This gives you the flexibility to configure the progress bar for different scenarios and to display progress on different scales.",
  "_A_PROGRESS_GROUP_MIN_MAX_HEADER_": "Dynamic thresholds",
  "_A_PROGRESS_GROUP_REVERS_DESCRIPTION_": "The AProgress component allows you to create progress bars with reverse display. When the <strong>reverse</strong> prop is set to true, the progress bar is displayed from right to left instead of left to right.",
  "_A_PROGRESS_GROUP_REVERS_HEADER_": "Reversed display",
  "_A_PROGRESS_GROUP_SHOW_VALUE_DESCRIPTION_": "The AProgress component allows you to create progress bars with an optional value display. You can use the <strong>showValue</strong> prop to control whether the progress value should be displayed as text within the progress bar.",
  "_A_PROGRESS_GROUP_SHOW_VALUE_HEADER_": "Optional display of progress value",
  "_A_PROGRESS_GROUP_SIZES_DESCRIPTION_": "The AProgress component allows you to create progress bars of a different size and to adapt them to the theme of your Vue.js application.",
  "_A_PROGRESS_GROUP_SIZES_HEADER_": "Customizable progress bar size",
  "_A_PROGRESS_GROUP_SLOT_PROGRESS_TEXT_DESCRIPTION_": "The AProgress component provides the ability to customize the displayed progress value by using the <strong>progressText</strong> slot. This slot allows you to create a custom representation of the progress bar value over the default value display.",
  "_A_PROGRESS_GROUP_SLOT_PROGRESS_TEXT_HEADER_": "Custom display of the progress value by using <strong>progressText</strong> slot",
  "_A_PROGRESS_GROUP_STRIPED_DESCRIPTION_": "The AProgress component allows you to create striped progress bars. By using the <strong>striped</strong> prop, you can enable the progress bar to be striped, which makes it stand out visually. The striped appearance of the progress bar can help focus on the progress and give the user better visual feedback.",
  "_A_PROGRESS_GROUP_STRIPED_FLOW_DESCRIPTION_": "The AProgress component allows you to create animated striped progress bars. By using the <strong>striped-flow</strong> prop, you can enable a flowing animation for striped progress bars. This animation gives the progress bar a dynamic visual impact and can help show progress in an appealing way.",
  "_A_PROGRESS_GROUP_STRIPED_FLOW_HEADER_": "Striped progress bar with animation",
  "_A_PROGRESS_GROUP_STRIPED_HEADER_": "Striped progress bar",
  "_A_PROGRESS_GROUP_VALUE_DESCRIPTION_": "The AProgress component allows you to update progress bars in real time by dynamically changing the Props value. Coupled with an integer-non-negative input field, as shown in the example, users can control the progress using the a-input-number component. This allows you to dynamically adjust the progress bar depending on user input or other events and visually represent the current progress.",
  "_A_PROGRESS_GROUP_VALUE_HEADER_": "Dynamically updatable progress bar",
  "_A_PROGRESS_GROUP_VALUE_TEXT_INTEGER_DESCRIPTION_": "The AProgress component allows you to create progress bars with different text formats for the progress value. If the valueTextInteger prop is set to true , the progress value is displayed as an integer percentage (e.g. \"20%\"). If the valueTextInteger prop is false or not set, the progress value is displayed as a percentage with two decimal places (e.g. \"20.00%\").",
  "_A_PROGRESS_GROUP_VALUE_TEXT_INTEGER_HEADER_": "Different display of values",
  "_A_PROGRESS_PROPS_CLASS_PROGRESS_BAR_": "One or more classes for the progress bar that can be specified to customize its appearance.",
  "_A_PROGRESS_PROPS_DURATION_": "This prop controls the duration of the animation for the progress bar.",
  "_A_PROGRESS_PROPS_INDETERMINATE_": "Enables the indeterminate mode of the progress bar. When indeterminate is true , the progress bar is animated, showing continuous, indeterminate movement.",
  "_A_PROGRESS_PROPS_MAX_": "Upper bound, maximum value for the progress bar.",
  "_A_PROGRESS_PROPS_MIN_": "Lower bound, minimum value for the progress bar.",
  "_A_PROGRESS_PROPS_REVERS_": "Specifies whether the progress bar should be displayed from right to left.",
  "_A_PROGRESS_PROPS_SHOW_VALUE_": "Specifies whether the progress value should be displayed as text inside the progress bar.",
  "_A_PROGRESS_PROPS_STRIPED_": "Enables the striped progress bar.",
  "_A_PROGRESS_PROPS_STRIPED_FLOW_": "Enables the animated display for striped progress bars.",
  "_A_PROGRESS_PROPS_VALUE_": "The current progress of the progress bar.",
  "_A_PROGRESS_PROPS_VALUE_TEXT_INTEGER_": "Specifies which text format to use for the progress value. If valueTextInteger is true, the value is displayed as an integer percentage. If valueTextInteger is false or absent, then the value is displayed as a percentage with two decimal places.",
  "_A_PROGRESS_SLOT_PROGRESS_TEXT_": "Allows for customization of how the progress bar value is displayed. valuePercent variable can be accesed in the slot scope to show the current progress percentage."
}