{
  "_PAGE_FILTER_JSON_ARGUMENTS_VALUE_": "Der Wert oder das JavaScript-Objekt, das in eine JSON-Zeichenkette umgewandelt werden soll",
  "_PAGE_FILTER_JSON_ARGUMENTS_REPLACER_": "Eine Funktion, die das Verhalten des Umwandlungsprozesses beeinflusst, oder ein Array aus Zeichenketten und Zahlen, das Eigenschaften von value angibt, die in der Ausgabe enthalten sein sollen. Wenn replacer ein Array ist, werden alle Elemente in diesem Array, die keine Zeichenketten oder Zahlen sind (weder primitive Werte noch Wrapper-Objekte), einschließlich Symbol-Werte, vollständig ignoriert. Wenn replacer alles außer einer Funktion oder einem Array ist (z. B. null oder nicht angegeben), werden alle zeichenkettenbasierten Eigenschaften des Objekts in der resultierenden JSON-Zeichenkette aufgenommen",
  "_PAGE_FILTER_JSON_ARGUMENTS_SPACE_": "Eine Zeichenkette oder eine Zahl, die für die Einfügung von Leerzeichen (einschließlich Einrückung, Zeilenumbruchzeichen usw.) in die Ausgabe-JSON-Zeichenkette zu Lesbarkeitszwecken verwendet wird. Wenn dies eine Zahl ist, gibt sie die Anzahl der Leerzeichen oder anderer Zeichen an, die als Einrückung verwendet werden sollen, auf maximal 10 begrenzt (dh jede Zahl größer als 10 wird so behandelt, als wäre sie 10). Werte kleiner als 1 zeigen an, dass kein Leerzeichen verwendet werden soll. Wenn dies eine Zeichenkette ist, wird die Zeichenkette (oder die ersten 10 Zeichen der Zeichenkette, wenn sie länger ist als das) vor jedem verschachtelten Objekt oder Array eingefügt. Wenn space alles außer einer Zeichenkette oder Zahl ist (kann entweder ein Primitiv oder ein Wrapper-Objekt sein) — z. B. null oder nicht angegeben — wird kein Leerzeichen verwendet",
  "_PAGE_FILTER_JSON_ARGUMENTS_": "# Argumentos:  \nvalue (Any): El valor o el objeto JavaScript que se debe convertir en una cadena JSON\n[replacer] (Function | Array): Una función que influye en el comportamiento del proceso de conversión, o un arreglo de cadenas y números que especifica propiedades de value que deben incluirse en la salida. Si replacer es un arreglo, todos los elementos en este arreglo que no sean cadenas o números (ni valores primitivos ni objetos contenedores), incluyendo valores de símbolos, son completamente ignorados. Si replacer es cualquier cosa distinta de una función o un arreglo (por ejemplo, null o no especificado), todas las propiedades basadas en cadenas del objeto se incluyen en la cadena JSON resultante.\n[space=2] (Number | String): Una cadena o número utilizado para insertar espacios (incluyendo la indentación, caracteres de salto de línea, etc.) en la cadena JSON de salida para fines de legibilidad. Si es un número, indica la cantidad de espacios u otros caracteres a usar como indentación, limitado a un máximo de 10 (es decir, cualquier número mayor que 10 se trata como si fuera 10). Valores menores que 1 indican que no se debe usar espacio. Si es una cadena, la cadena (o los primeros 10 caracteres de la cadena, si es más larga que eso) se inserta antes de cada objeto o arreglo anidado. Si space es cualquier cosa distinta de una cadena o número (puede ser un primitivo o un objeto contenedor) — por ejemplo, null o no especificado — no se utiliza espacio.",
  "_PAGE_FILTER_JSON_DESCRIPTION_": "La función <strong>filterJson</strong> convierte un objeto o valor JavaScript en una cadena JSON formateada. Permite la personalización del replacer (una función para alterar el comportamiento de la conversión) y la indentación (número de espacios u otros caracteres para la indentación)."
}
