{
  "_A_INPUT_CURRENCY_COMPONENT_DESCRIPTION_": "Le composant <strong lang=\"en\">AInputCurrency</strong> offre la possibilité de saisir et de formater des valeurs monétaires. Le composant prend en charge diverses options telles que la gestion des symboles monétaires, le choix des séparateurs et l'arrondissement automatique des chiffres.",
  "_A_INPUT_CURRENCY_COMPONENT_NAME_": "Champ de saisie de devise",
  "_A_INPUT_CURRENCY_GROUP_CONTROLS_TYPE_DESCRIPTION_": "Cet exemple montre comment utiliser <strong lang=\"en\">controls-type</strong> pour configurer l'affichage des éléments de contrôle dans le champ de saisie. Dans le premier champ, les éléments de contrôle sont désactivés, tandis que dans le deuxième, les boutons '+' et '-' sont utilisés pour augmenter ou diminuer la valeur. Cela permet de choisir la méthode la plus appropriée pour contrôler la valeur en fonction des exigences.",
  "_A_INPUT_CURRENCY_GROUP_CONTROLS_TYPE_HEADER_": "Types d'éléments de contrôle",
  "_A_INPUT_CURRENCY_GROUP_DECIMAL_DIVIDER_DESCRIPTION_": "Cet exemple montre comment utiliser <strong lang=\"en\">decimal-divider</strong> pour configurer le séparateur décimal dans le champ de saisie. Dans le premier champ, une virgule <strong>','</strong> est utilisée comme séparateur, tandis que dans le deuxième, un point <strong>'.'</strong> est utilisé. Cela permet de choisir le format approprié pour afficher les valeurs décimales en fonction des paramètres régionaux ou des préférences de l'utilisateur.",
  "_A_INPUT_CURRENCY_GROUP_DECIMAL_DIVIDER_HEADER_": "Séparateur décimal",
  "_A_INPUT_CURRENCY_GROUP_DECIMAL_PART_LENGTH_DESCRIPTION_": "Cet exemple montre comment utiliser <strong lang=\"en\">decimal-part-length</strong> pour définir le nombre de chiffres après le séparateur décimal dans le composant <strong lang=\"en\">AInputCurrency</strong>. Dans le premier cas, la longueur de la partie décimale est définie sur <strong>0</strong>, ce qui signifie qu'aucune partie décimale n'est affichée. Dans le deuxième exemple, la longueur est définie sur <strong>1</strong>, permettant d'afficher un chiffre après la virgule décimale. Dans les exemples suivants, la longueur de la partie décimale est définie sur <strong>2</strong> et <strong>4</strong>, permettant une représentation plus précise des valeurs décimales.",
  "_A_INPUT_CURRENCY_GROUP_DECIMAL_PART_LENGTH_HEADER_": "Longueur de la partie décimale",
  "_A_INPUT_CURRENCY_GROUP_MAX_MIN_DESCRIPTION_": "Cet exemple montre comment utiliser <strong lang=\"en\">max</strong> et <strong lang=\"en\">min</strong> pour limiter les valeurs pouvant être saisies dans le champ. Dans le premier champ, la saisie est limitée à une plage de <strong>1</strong> à <strong>20</strong>, tandis que dans le second, elle est limitée à une plage de <strong>-10.05</strong> à <strong>19.05</strong>. Ces propriétés aident à contrôler la plage de valeurs numériques autorisées.",
  "_A_INPUT_CURRENCY_GROUP_MAX_MIN_HEADER_": "Limites maximale et minimale",
  "_A_INPUT_CURRENCY_GROUP_MODEL_TYPE_DESCRIPTION_": "Cet exemple montre comment utiliser <strong lang=\"en\">model-type</strong> pour définir le type de données qui sera stocké dans le modèle. Dans le premier cas, la valeur est stockée sous forme de <strong lang=\"en\">number</strong> (nombre), tandis que dans le deuxième, elle est stockée sous forme de <strong lang=\"en\">string</strong> (chaîne). Cette propriété permet une gestion flexible du type de données dans le modèle en fonction des exigences de l'application.",
  "_A_INPUT_CURRENCY_GROUP_MODEL_TYPE_HEADER_": "Type de modèle",
  "_A_INPUT_CURRENCY_GROUP_STEP_DESCRIPTION_": "Cet exemple montre comment utiliser <strong lang=\"en\">step</strong> pour définir la valeur de l'incrément dans le composant <strong lang=\"en\">AInputCurrency</strong>. Dans le premier cas, l'incrément est défini sur <strong>2</strong>, ce qui permet d'augmenter ou de diminuer la valeur de <strong>2</strong> unités à la fois. Dans le deuxième cas, l'incrément est défini sur <strong>0.01</strong>, permettant un contrôle plus précis de la valeur à l'aide des boutons de contrôle. Cette propriété est utile pour ajuster la précision de la saisie des données numériques.",
  "_A_INPUT_CURRENCY_GROUP_STEP_HEADER_": "Valeur de l'incrément",
  "_A_INPUT_CURRENCY_GROUP_SYMBOL_DESCRIPTION_": "Cet exemple montre comment utiliser <strong lang=\"en\">currency-symbol</strong> et <strong lang=\"en\">currency-symbol-position</strong> pour afficher le symbole monétaire dans le champ de saisie. Dans le premier champ, le symbole <strong>'%'</strong> est affiché à droite de la valeur saisie. Dans les deuxième et troisième champs, le symbole <strong>'$'</strong> est affiché à gauche de la valeur. Cela permet de configurer de manière flexible l'affichage des symboles monétaires en fonction des exigences.",
  "_A_INPUT_CURRENCY_GROUP_SYMBOL_HEADER_": "Symboles monétaires et leurs positions",
  "_A_INPUT_CURRENCY_GROUP_THOUSAND_DIVIDER_DESCRIPTION_": "Cet exemple montre comment utiliser la propriété <strong lang=\"en\">thousand-divider</strong> pour définir le séparateur de milliers dans le composant <strong lang=\"en\">AInputCurrency</strong>. Dans le premier cas, une virgule <strong>','</strong> est utilisée comme séparateur de milliers. Dans le deuxième exemple, un point <strong>'.'</strong> est utilisé comme séparateur. Dans le troisième exemple, un espace <strong>' '</strong> est utilisé comme séparateur, tandis que dans le dernier exemple, aucun séparateur n'est présent, permettant d'afficher des nombres sans séparation des milliers.",
  "_A_INPUT_CURRENCY_GROUP_THOUSAND_DIVIDER_HEADER_": "Séparateur de milliers",
  "_A_INPUT_CURRENCY_GROUP_VALIDATION_ON_CHANGE_DESCRIPTION_": "Cet exemple montre comment utiliser <strong lang=\"en\">validation-on-change</strong> dans le composant <strong lang=\"en\">AInputCurrency</strong>. Dans le premier exemple, la validation des valeurs n'est pas effectuée à chaque changement, car <strong lang=\"en\">validation-on-change</strong> est défini sur <strong>false</strong>. Dans le deuxième exemple, lorsque <strong lang=\"en\">validation-on-change</strong> est défini sur <strong>true</strong>, les valeurs saisies sont vérifiées immédiatement lors du changement.",
  "_A_INPUT_CURRENCY_GROUP_VALIDATION_ON_CHANGE_HEADER_": "Validation lors du changement",
  "_A_INPUT_CURRENCY_PROPS_CONTROLS_TYPE_DESCRIPTION_": "Définit le type d'éléments de contrôle qui seront affichés à côté du champ de saisie. Valeurs possibles : <strong lang=\"en\">plus-minus</strong> (boutons pour augmenter et diminuer), <strong lang=\"en\">arrows</strong> (flèches pour changer les valeurs) ou <strong lang=\"en\">none</strong> (aucun élément de contrôle).",
  "_A_INPUT_CURRENCY_PROPS_CURRENCY_SYMBOL_DESCRIPTION_": "Définit le symbole de la devise qui sera affiché dans le champ de saisie, comme <strong>$</strong>, <strong>€</strong> ou <strong>₽</strong>.",
  "_A_INPUT_CURRENCY_PROPS_CURRENCY_SYMBOL_POSITION_DESCRIPTION_": "Détermine la position du symbole de la devise par rapport à la valeur saisie. Valeurs possibles : <strong lang=\"en\">left</strong> (à gauche de la valeur) ou <strong lang=\"en\">right</strong> (à droite de la valeur).",
  "_A_INPUT_CURRENCY_PROPS_DECIMAL_DIVIDER_DESCRIPTION_": "Définit le symbole qui sera utilisé comme séparateur décimal. Valeurs possibles : <strong>.</strong> (point) ou <strong>,</strong> (virgule).",
  "_A_INPUT_CURRENCY_PROPS_DECIMAL_PART_LENGTH_DESCRIPTION_": "Définit le nombre de chiffres après le séparateur décimal qui seront affichés dans la valeur.",
  "_A_INPUT_CURRENCY_PROPS_INPUT_WIDTH_DESCRIPTION_": "Définit la largeur du champ de saisie. La valeur peut être spécifiée en pixels ou en pourcentages.",
  "_A_INPUT_CURRENCY_PROPS_MAX_DESCRIPTION_": "Définit la valeur maximale qui peut être saisie dans le champ.",
  "_A_INPUT_CURRENCY_PROPS_MIN_DESCRIPTION_": "Définit la valeur minimale qui peut être saisie dans le champ.",
  "_A_INPUT_CURRENCY_PROPS_MODEL_TYPE_DESCRIPTION_": "Définit le type de données qui sera stocké dans le modèle. Valeurs possibles : <strong lang=\"en\">number</strong> (valeur numérique) ou <strong lang=\"en\">string</strong> (valeur chaîne).",
  "_A_INPUT_CURRENCY_PROPS_THOUSAND_DIVIDER_DESCRIPTION_": "Définit le symbole utilisé pour séparer les milliers dans la valeur. Valeurs possibles : <strong>.</strong> (point), <strong>,</strong> (virgule) ou une chaîne vide (sans séparateur).",
  "_A_INPUT_CURRENCY_PROPS_VALIDATION_ON_CHANGE_DESCRIPTION_": "Si défini sur <strong lang=\"en\">true</strong>, la validation de la valeur saisie sera effectuée à chaque modification du champ."
}