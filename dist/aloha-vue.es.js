import { toRef as d, inject as de, computed as _, ref as B, watch as rt, onBeforeUnmount as Ot, withDirectives as Dt, h as c, resolveComponent as kr, unref as CR, Teleport as oa, onUnmounted as bp, nextTick as pi, toRefs as Ip, onMounted as Gr, provide as Je, getCurrentInstance as DR } from "vue";
import Fn from "moment";
var vp = typeof global == "object" && global && global.Object === Object && global, NR = typeof self == "object" && self && self.Object === Object && self, hr = vp || NR || Function("return this")(), _r = hr.Symbol, yp = Object.prototype, BR = yp.hasOwnProperty, wR = yp.toString, Xi = _r ? _r.toStringTag : void 0;
function PR(e) {
  var t = BR.call(e, Xi), n = e[Xi];
  try {
    e[Xi] = void 0;
    var r = !0;
  } catch {
  }
  var s = wR.call(e);
  return r && (t ? e[Xi] = n : delete e[Xi]), s;
}
var xR = Object.prototype, MR = xR.toString;
function FR(e) {
  return MR.call(e);
}
var qR = "[object Null]", $R = "[object Undefined]", VA = _r ? _r.toStringTag : void 0;
function ua(e) {
  return e == null ? e === void 0 ? $R : qR : VA && VA in Object(e) ? PR(e) : FR(e);
}
function dr(e) {
  return e != null && typeof e == "object";
}
var UR = "[object Symbol]";
function xs(e) {
  return typeof e == "symbol" || dr(e) && ua(e) == UR;
}
function fi(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, s = Array(r); ++n < r; )
    s[n] = t(e[n], n, e);
  return s;
}
var Te = Array.isArray, kR = 1 / 0, WA = _r ? _r.prototype : void 0, GA = WA ? WA.toString : void 0;
function yl(e) {
  if (typeof e == "string")
    return e;
  if (Te(e))
    return fi(e, yl) + "";
  if (xs(e))
    return GA ? GA.call(e) : "";
  var t = e + "";
  return t == "0" && 1 / e == -kR ? "-0" : t;
}
var HR = /\s/;
function VR(e) {
  for (var t = e.length; t-- && HR.test(e.charAt(t)); )
    ;
  return t;
}
var WR = /^\s+/;
function GR(e) {
  return e && e.slice(0, VR(e) + 1).replace(WR, "");
}
function Hn(e) {
  var t = typeof e;
  return e != null && (t == "object" || t == "function");
}
var jA = NaN, jR = /^[-+]0x[0-9a-f]+$/i, KR = /^0b[01]+$/i, zR = /^0o[0-7]+$/i, YR = parseInt;
function Ti(e) {
  if (typeof e == "number")
    return e;
  if (xs(e))
    return jA;
  if (Hn(e)) {
    var t = typeof e.valueOf == "function" ? e.valueOf() : e;
    e = Hn(t) ? t + "" : t;
  }
  if (typeof e != "string")
    return e === 0 ? e : +e;
  e = GR(e);
  var n = KR.test(e);
  return n || zR.test(e) ? YR(e.slice(2), n ? 2 : 8) : jR.test(e) ? jA : +e;
}
var KA = 1 / 0, XR = 17976931348623157e292;
function $o(e) {
  if (!e)
    return e === 0 ? e : 0;
  if (e = Ti(e), e === KA || e === -KA) {
    var t = e < 0 ? -1 : 1;
    return t * XR;
  }
  return e === e ? e : 0;
}
function jr(e) {
  var t = $o(e), n = t % 1;
  return t === t ? n ? t - n : t : 0;
}
function Us(e) {
  return e;
}
var ZR = "[object AsyncFunction]", JR = "[object Function]", QR = "[object GeneratorFunction]", eO = "[object Proxy]";
function Ne(e) {
  if (!Hn(e))
    return !1;
  var t = ua(e);
  return t == JR || t == QR || t == ZR || t == eO;
}
var dd = hr["__core-js_shared__"], zA = function() {
  var e = /[^.]+$/.exec(dd && dd.keys && dd.keys.IE_PROTO || "");
  return e ? "Symbol(src)_1." + e : "";
}();
function tO(e) {
  return !!zA && zA in e;
}
var nO = Function.prototype, rO = nO.toString;
function ks(e) {
  if (e != null) {
    try {
      return rO.call(e);
    } catch {
    }
    try {
      return e + "";
    } catch {
    }
  }
  return "";
}
var aO = /[\\^$.*+?()[\]{}|]/g, sO = /^\[object .+?Constructor\]$/, iO = Function.prototype, lO = Object.prototype, oO = iO.toString, uO = lO.hasOwnProperty, _O = RegExp(
  "^" + oO.call(uO).replace(aO, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function dO(e) {
  if (!Hn(e) || tO(e))
    return !1;
  var t = Ne(e) ? _O : sO;
  return t.test(ks(e));
}
function cO(e, t) {
  return e == null ? void 0 : e[t];
}
function Hs(e, t) {
  var n = cO(e, t);
  return dO(n) ? n : void 0;
}
var wd = Hs(hr, "WeakMap"), YA = Object.create, fO = /* @__PURE__ */ function() {
  function e() {
  }
  return function(t) {
    if (!Hn(t))
      return {};
    if (YA)
      return YA(t);
    e.prototype = t;
    var n = new e();
    return e.prototype = void 0, n;
  };
}();
function hO(e, t, n) {
  switch (n.length) {
    case 0:
      return e.call(t);
    case 1:
      return e.call(t, n[0]);
    case 2:
      return e.call(t, n[0], n[1]);
    case 3:
      return e.call(t, n[0], n[1], n[2]);
  }
  return e.apply(t, n);
}
function AO() {
}
function EO(e, t) {
  var n = -1, r = e.length;
  for (t || (t = Array(r)); ++n < r; )
    t[n] = e[n];
  return t;
}
var pO = 800, TO = 16, SO = Date.now;
function mO(e) {
  var t = 0, n = 0;
  return function() {
    var r = SO(), s = TO - (r - n);
    if (n = r, s > 0) {
      if (++t >= pO)
        return arguments[0];
    } else
      t = 0;
    return e.apply(void 0, arguments);
  };
}
function LO(e) {
  return function() {
    return e;
  };
}
var eu = function() {
  try {
    var e = Hs(Object, "defineProperty");
    return e({}, "", {}), e;
  } catch {
  }
}(), bO = eu ? function(e, t) {
  return eu(e, "toString", {
    configurable: !0,
    enumerable: !1,
    value: LO(t),
    writable: !0
  });
} : Us, IO = mO(bO);
function gp(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r && t(e[n], n, e) !== !1; )
    ;
  return e;
}
function Rp(e, t, n, r) {
  for (var s = e.length, i = n + -1; ++i < s; )
    if (t(e[i], i, e))
      return i;
  return -1;
}
function vO(e) {
  return e !== e;
}
function yO(e, t, n) {
  for (var r = n - 1, s = e.length; ++r < s; )
    if (e[r] === t)
      return r;
  return -1;
}
function Op(e, t, n) {
  return t === t ? yO(e, t, n) : Rp(e, vO, n);
}
function Cp(e, t) {
  var n = e == null ? 0 : e.length;
  return !!n && Op(e, t, 0) > -1;
}
var gO = 9007199254740991, RO = /^(?:0|[1-9]\d*)$/;
function Eu(e, t) {
  var n = typeof e;
  return t = t ?? gO, !!t && (n == "number" || n != "symbol" && RO.test(e)) && e > -1 && e % 1 == 0 && e < t;
}
function dc(e, t, n) {
  t == "__proto__" && eu ? eu(e, t, {
    configurable: !0,
    enumerable: !0,
    value: n,
    writable: !0
  }) : e[t] = n;
}
function pu(e, t) {
  return e === t || e !== e && t !== t;
}
var OO = Object.prototype, CO = OO.hasOwnProperty;
function Tu(e, t, n) {
  var r = e[t];
  (!(CO.call(e, t) && pu(r, n)) || n === void 0 && !(t in e)) && dc(e, t, n);
}
function gl(e, t, n, r) {
  var s = !n;
  n || (n = {});
  for (var i = -1, o = t.length; ++i < o; ) {
    var u = t[i], f = void 0;
    f === void 0 && (f = e[u]), s ? dc(n, u, f) : Tu(n, u, f);
  }
  return n;
}
var XA = Math.max;
function DO(e, t, n) {
  return t = XA(t === void 0 ? e.length - 1 : t, 0), function() {
    for (var r = arguments, s = -1, i = XA(r.length - t, 0), o = Array(i); ++s < i; )
      o[s] = r[t + s];
    s = -1;
    for (var u = Array(t + 1); ++s < t; )
      u[s] = r[s];
    return u[t] = n(o), hO(e, this, u);
  };
}
function Su(e, t) {
  return IO(DO(e, t, Us), e + "");
}
var NO = 9007199254740991;
function cc(e) {
  return typeof e == "number" && e > -1 && e % 1 == 0 && e <= NO;
}
function Or(e) {
  return e != null && cc(e.length) && !Ne(e);
}
function tu(e, t, n) {
  if (!Hn(n))
    return !1;
  var r = typeof t;
  return (r == "number" ? Or(n) && Eu(t, n.length) : r == "string" && t in n) ? pu(n[t], e) : !1;
}
function BO(e) {
  return Su(function(t, n) {
    var r = -1, s = n.length, i = s > 1 ? n[s - 1] : void 0, o = s > 2 ? n[2] : void 0;
    for (i = e.length > 3 && typeof i == "function" ? (s--, i) : void 0, o && tu(n[0], n[1], o) && (i = s < 3 ? void 0 : i, s = 1), t = Object(t); ++r < s; ) {
      var u = n[r];
      u && e(t, u, r, i);
    }
    return t;
  });
}
var wO = Object.prototype;
function Rl(e) {
  var t = e && e.constructor, n = typeof t == "function" && t.prototype || wO;
  return e === n;
}
function Dp(e, t) {
  for (var n = -1, r = Array(e); ++n < e; )
    r[n] = t(n);
  return r;
}
var PO = "[object Arguments]";
function ZA(e) {
  return dr(e) && ua(e) == PO;
}
var Np = Object.prototype, xO = Np.hasOwnProperty, MO = Np.propertyIsEnumerable, mu = ZA(/* @__PURE__ */ function() {
  return arguments;
}()) ? ZA : function(e) {
  return dr(e) && xO.call(e, "callee") && !MO.call(e, "callee");
};
function FO() {
  return !1;
}
var Bp = typeof exports == "object" && exports && !exports.nodeType && exports, JA = Bp && typeof module == "object" && module && !module.nodeType && module, qO = JA && JA.exports === Bp, QA = qO ? hr.Buffer : void 0, $O = QA ? QA.isBuffer : void 0, fl = $O || FO, UO = "[object Arguments]", kO = "[object Array]", HO = "[object Boolean]", VO = "[object Date]", WO = "[object Error]", GO = "[object Function]", jO = "[object Map]", KO = "[object Number]", zO = "[object Object]", YO = "[object RegExp]", XO = "[object Set]", ZO = "[object String]", JO = "[object WeakMap]", QO = "[object ArrayBuffer]", eC = "[object DataView]", tC = "[object Float32Array]", nC = "[object Float64Array]", rC = "[object Int8Array]", aC = "[object Int16Array]", sC = "[object Int32Array]", iC = "[object Uint8Array]", lC = "[object Uint8ClampedArray]", oC = "[object Uint16Array]", uC = "[object Uint32Array]", It = {};
It[tC] = It[nC] = It[rC] = It[aC] = It[sC] = It[iC] = It[lC] = It[oC] = It[uC] = !0;
It[UO] = It[kO] = It[QO] = It[HO] = It[eC] = It[VO] = It[WO] = It[GO] = It[jO] = It[KO] = It[zO] = It[YO] = It[XO] = It[ZO] = It[JO] = !1;
function _C(e) {
  return dr(e) && cc(e.length) && !!It[ua(e)];
}
function Lu(e) {
  return function(t) {
    return e(t);
  };
}
var wp = typeof exports == "object" && exports && !exports.nodeType && exports, il = wp && typeof module == "object" && module && !module.nodeType && module, dC = il && il.exports === wp, cd = dC && vp.process, Si = function() {
  try {
    var e = il && il.require && il.require("util").types;
    return e || cd && cd.binding && cd.binding("util");
  } catch {
  }
}(), eE = Si && Si.isTypedArray, fc = eE ? Lu(eE) : _C, cC = Object.prototype, fC = cC.hasOwnProperty;
function Pp(e, t) {
  var n = Te(e), r = !n && mu(e), s = !n && !r && fl(e), i = !n && !r && !s && fc(e), o = n || r || s || i, u = o ? Dp(e.length, String) : [], f = u.length;
  for (var A in e)
    (t || fC.call(e, A)) && !(o && // Safari 9 has enumerable `arguments.length` in strict mode.
    (A == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    s && (A == "offset" || A == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    i && (A == "buffer" || A == "byteLength" || A == "byteOffset") || // Skip index properties.
    Eu(A, f))) && u.push(A);
  return u;
}
function xp(e, t) {
  return function(n) {
    return e(t(n));
  };
}
var hC = xp(Object.keys, Object), AC = Object.prototype, EC = AC.hasOwnProperty;
function hc(e) {
  if (!Rl(e))
    return hC(e);
  var t = [];
  for (var n in Object(e))
    EC.call(e, n) && n != "constructor" && t.push(n);
  return t;
}
function _a(e) {
  return Or(e) ? Pp(e) : hc(e);
}
var pC = Object.prototype, TC = pC.hasOwnProperty, Pd = BO(function(e, t) {
  if (Rl(t) || Or(t)) {
    gl(t, _a(t), e);
    return;
  }
  for (var n in t)
    TC.call(t, n) && Tu(e, n, t[n]);
});
function SC(e) {
  var t = [];
  if (e != null)
    for (var n in Object(e))
      t.push(n);
  return t;
}
var mC = Object.prototype, LC = mC.hasOwnProperty;
function bC(e) {
  if (!Hn(e))
    return SC(e);
  var t = Rl(e), n = [];
  for (var r in e)
    r == "constructor" && (t || !LC.call(e, r)) || n.push(r);
  return n;
}
function Ac(e) {
  return Or(e) ? Pp(e, !0) : bC(e);
}
var IC = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, vC = /^\w*$/;
function Ec(e, t) {
  if (Te(e))
    return !1;
  var n = typeof e;
  return n == "number" || n == "symbol" || n == "boolean" || e == null || xs(e) ? !0 : vC.test(e) || !IC.test(e) || t != null && e in Object(t);
}
var hl = Hs(Object, "create");
function yC() {
  this.__data__ = hl ? hl(null) : {}, this.size = 0;
}
function gC(e) {
  var t = this.has(e) && delete this.__data__[e];
  return this.size -= t ? 1 : 0, t;
}
var RC = "__lodash_hash_undefined__", OC = Object.prototype, CC = OC.hasOwnProperty;
function DC(e) {
  var t = this.__data__;
  if (hl) {
    var n = t[e];
    return n === RC ? void 0 : n;
  }
  return CC.call(t, e) ? t[e] : void 0;
}
var NC = Object.prototype, BC = NC.hasOwnProperty;
function wC(e) {
  var t = this.__data__;
  return hl ? t[e] !== void 0 : BC.call(t, e);
}
var PC = "__lodash_hash_undefined__";
function xC(e, t) {
  var n = this.__data__;
  return this.size += this.has(e) ? 0 : 1, n[e] = hl && t === void 0 ? PC : t, this;
}
function Ms(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
Ms.prototype.clear = yC;
Ms.prototype.delete = gC;
Ms.prototype.get = DC;
Ms.prototype.has = wC;
Ms.prototype.set = xC;
function MC() {
  this.__data__ = [], this.size = 0;
}
function bu(e, t) {
  for (var n = e.length; n--; )
    if (pu(e[n][0], t))
      return n;
  return -1;
}
var FC = Array.prototype, qC = FC.splice;
function $C(e) {
  var t = this.__data__, n = bu(t, e);
  if (n < 0)
    return !1;
  var r = t.length - 1;
  return n == r ? t.pop() : qC.call(t, n, 1), --this.size, !0;
}
function UC(e) {
  var t = this.__data__, n = bu(t, e);
  return n < 0 ? void 0 : t[n][1];
}
function kC(e) {
  return bu(this.__data__, e) > -1;
}
function HC(e, t) {
  var n = this.__data__, r = bu(n, e);
  return r < 0 ? (++this.size, n.push([e, t])) : n[r][1] = t, this;
}
function da(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
da.prototype.clear = MC;
da.prototype.delete = $C;
da.prototype.get = UC;
da.prototype.has = kC;
da.prototype.set = HC;
var Al = Hs(hr, "Map");
function VC() {
  this.size = 0, this.__data__ = {
    hash: new Ms(),
    map: new (Al || da)(),
    string: new Ms()
  };
}
function WC(e) {
  var t = typeof e;
  return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null;
}
function Iu(e, t) {
  var n = e.__data__;
  return WC(t) ? n[typeof t == "string" ? "string" : "hash"] : n.map;
}
function GC(e) {
  var t = Iu(this, e).delete(e);
  return this.size -= t ? 1 : 0, t;
}
function jC(e) {
  return Iu(this, e).get(e);
}
function KC(e) {
  return Iu(this, e).has(e);
}
function zC(e, t) {
  var n = Iu(this, e), r = n.size;
  return n.set(e, t), this.size += n.size == r ? 0 : 1, this;
}
function ca(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
ca.prototype.clear = VC;
ca.prototype.delete = GC;
ca.prototype.get = jC;
ca.prototype.has = KC;
ca.prototype.set = zC;
var YC = "Expected a function";
function pc(e, t) {
  if (typeof e != "function" || t != null && typeof t != "function")
    throw new TypeError(YC);
  var n = function() {
    var r = arguments, s = t ? t.apply(this, r) : r[0], i = n.cache;
    if (i.has(s))
      return i.get(s);
    var o = e.apply(this, r);
    return n.cache = i.set(s, o) || i, o;
  };
  return n.cache = new (pc.Cache || ca)(), n;
}
pc.Cache = ca;
var XC = 500;
function ZC(e) {
  var t = pc(e, function(r) {
    return n.size === XC && n.clear(), r;
  }), n = t.cache;
  return t;
}
var JC = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, QC = /\\(\\)?/g, eD = ZC(function(e) {
  var t = [];
  return e.charCodeAt(0) === 46 && t.push(""), e.replace(JC, function(n, r, s, i) {
    t.push(s ? i.replace(QC, "$1") : r || n);
  }), t;
});
function Vt(e) {
  return e == null ? "" : yl(e);
}
function Tc(e, t) {
  return Te(e) ? e : Ec(e, t) ? [e] : eD(Vt(e));
}
var tD = 1 / 0;
function Ol(e) {
  if (typeof e == "string" || xs(e))
    return e;
  var t = e + "";
  return t == "0" && 1 / e == -tD ? "-0" : t;
}
function Sc(e, t) {
  t = Tc(t, e);
  for (var n = 0, r = t.length; e != null && n < r; )
    e = e[Ol(t[n++])];
  return n && n == r ? e : void 0;
}
function ce(e, t, n) {
  var r = e == null ? void 0 : Sc(e, t);
  return r === void 0 ? n : r;
}
function mc(e, t) {
  for (var n = -1, r = t.length, s = e.length; ++n < r; )
    e[s + n] = t[n];
  return e;
}
var tE = _r ? _r.isConcatSpreadable : void 0;
function nD(e) {
  return Te(e) || mu(e) || !!(tE && e && e[tE]);
}
function Lc(e, t, n, r, s) {
  var i = -1, o = e.length;
  for (n || (n = nD), s || (s = []); ++i < o; ) {
    var u = e[i];
    n(u) ? mc(s, u) : r || (s[s.length] = u);
  }
  return s;
}
var bc = xp(Object.getPrototypeOf, Object), rD = "[object Object]", aD = Function.prototype, sD = Object.prototype, Mp = aD.toString, iD = sD.hasOwnProperty, lD = Mp.call(Object);
function at(e) {
  if (!dr(e) || ua(e) != rD)
    return !1;
  var t = bc(e);
  if (t === null)
    return !0;
  var n = iD.call(t, "constructor") && t.constructor;
  return typeof n == "function" && n instanceof n && Mp.call(n) == lD;
}
function Fp(e, t, n) {
  var r = -1, s = e.length;
  t < 0 && (t = -t > s ? 0 : s + t), n = n > s ? s : n, n < 0 && (n += s), s = t > n ? 0 : n - t >>> 0, t >>>= 0;
  for (var i = Array(s); ++r < s; )
    i[r] = e[r + t];
  return i;
}
function qp(e, t, n) {
  var r = e.length;
  return n = n === void 0 ? r : n, !t && n >= r ? e : Fp(e, t, n);
}
var oD = "\\ud800-\\udfff", uD = "\\u0300-\\u036f", _D = "\\ufe20-\\ufe2f", dD = "\\u20d0-\\u20ff", cD = uD + _D + dD, fD = "\\ufe0e\\ufe0f", hD = "\\u200d", AD = RegExp("[" + hD + oD + cD + fD + "]");
function vu(e) {
  return AD.test(e);
}
function ED(e) {
  return e.split("");
}
var $p = "\\ud800-\\udfff", pD = "\\u0300-\\u036f", TD = "\\ufe20-\\ufe2f", SD = "\\u20d0-\\u20ff", mD = pD + TD + SD, LD = "\\ufe0e\\ufe0f", bD = "[" + $p + "]", xd = "[" + mD + "]", Md = "\\ud83c[\\udffb-\\udfff]", ID = "(?:" + xd + "|" + Md + ")", Up = "[^" + $p + "]", kp = "(?:\\ud83c[\\udde6-\\uddff]){2}", Hp = "[\\ud800-\\udbff][\\udc00-\\udfff]", vD = "\\u200d", Vp = ID + "?", Wp = "[" + LD + "]?", yD = "(?:" + vD + "(?:" + [Up, kp, Hp].join("|") + ")" + Wp + Vp + ")*", gD = Wp + Vp + yD, RD = "(?:" + [Up + xd + "?", xd, kp, Hp, bD].join("|") + ")", OD = RegExp(Md + "(?=" + Md + ")|" + RD + gD, "g");
function CD(e) {
  return e.match(OD) || [];
}
function Gp(e) {
  return vu(e) ? CD(e) : ED(e);
}
function DD(e) {
  return function(t) {
    t = Vt(t);
    var n = vu(t) ? Gp(t) : void 0, r = n ? n[0] : t.charAt(0), s = n ? qp(n, 1).join("") : t.slice(1);
    return r[e]() + s;
  };
}
var jp = DD("toUpperCase");
function ND(e) {
  return jp(Vt(e).toLowerCase());
}
function BD(e, t, n, r) {
  var s = -1, i = e == null ? 0 : e.length;
  for (r && i && (n = e[++s]); ++s < i; )
    n = t(n, e[s], s, e);
  return n;
}
var wD = hr.isFinite, PD = Math.min;
function Kp(e) {
  var t = Math[e];
  return function(n, r) {
    if (n = Ti(n), r = r == null ? 0 : PD(jr(r), 292), r && wD(n)) {
      var s = (Vt(n) + "e").split("e"), i = t(s[0] + "e" + (+s[1] + r));
      return s = (Vt(i) + "e").split("e"), +(s[0] + "e" + (+s[1] - r));
    }
    return t(n);
  };
}
var xD = Kp("ceil");
function zp(e, t, n) {
  return e === e && (n !== void 0 && (e = e <= n ? e : n), e = e >= t ? e : t), e;
}
function MD() {
  this.__data__ = new da(), this.size = 0;
}
function FD(e) {
  var t = this.__data__, n = t.delete(e);
  return this.size = t.size, n;
}
function qD(e) {
  return this.__data__.get(e);
}
function $D(e) {
  return this.__data__.has(e);
}
var UD = 200;
function kD(e, t) {
  var n = this.__data__;
  if (n instanceof da) {
    var r = n.__data__;
    if (!Al || r.length < UD - 1)
      return r.push([e, t]), this.size = ++n.size, this;
    n = this.__data__ = new ca(r);
  }
  return n.set(e, t), this.size = n.size, this;
}
function $r(e) {
  var t = this.__data__ = new da(e);
  this.size = t.size;
}
$r.prototype.clear = MD;
$r.prototype.delete = FD;
$r.prototype.get = qD;
$r.prototype.has = $D;
$r.prototype.set = kD;
function HD(e, t) {
  return e && gl(t, _a(t), e);
}
function VD(e, t) {
  return e && gl(t, Ac(t), e);
}
var Yp = typeof exports == "object" && exports && !exports.nodeType && exports, nE = Yp && typeof module == "object" && module && !module.nodeType && module, WD = nE && nE.exports === Yp, rE = WD ? hr.Buffer : void 0, aE = rE ? rE.allocUnsafe : void 0;
function GD(e, t) {
  if (t)
    return e.slice();
  var n = e.length, r = aE ? aE(n) : new e.constructor(n);
  return e.copy(r), r;
}
function Xp(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, s = 0, i = []; ++n < r; ) {
    var o = e[n];
    t(o, n, e) && (i[s++] = o);
  }
  return i;
}
function Zp() {
  return [];
}
var jD = Object.prototype, KD = jD.propertyIsEnumerable, sE = Object.getOwnPropertySymbols, Ic = sE ? function(e) {
  return e == null ? [] : (e = Object(e), Xp(sE(e), function(t) {
    return KD.call(e, t);
  }));
} : Zp;
function zD(e, t) {
  return gl(e, Ic(e), t);
}
var YD = Object.getOwnPropertySymbols, Jp = YD ? function(e) {
  for (var t = []; e; )
    mc(t, Ic(e)), e = bc(e);
  return t;
} : Zp;
function XD(e, t) {
  return gl(e, Jp(e), t);
}
function Qp(e, t, n) {
  var r = t(e);
  return Te(e) ? r : mc(r, n(e));
}
function Fd(e) {
  return Qp(e, _a, Ic);
}
function ZD(e) {
  return Qp(e, Ac, Jp);
}
var qd = Hs(hr, "DataView"), $d = Hs(hr, "Promise"), hi = Hs(hr, "Set"), iE = "[object Map]", JD = "[object Object]", lE = "[object Promise]", oE = "[object Set]", uE = "[object WeakMap]", _E = "[object DataView]", QD = ks(qd), eN = ks(Al), tN = ks($d), nN = ks(hi), rN = ks(wd), qn = ua;
(qd && qn(new qd(new ArrayBuffer(1))) != _E || Al && qn(new Al()) != iE || $d && qn($d.resolve()) != lE || hi && qn(new hi()) != oE || wd && qn(new wd()) != uE) && (qn = function(e) {
  var t = ua(e), n = t == JD ? e.constructor : void 0, r = n ? ks(n) : "";
  if (r)
    switch (r) {
      case QD:
        return _E;
      case eN:
        return iE;
      case tN:
        return lE;
      case nN:
        return oE;
      case rN:
        return uE;
    }
  return t;
});
var aN = Object.prototype, sN = aN.hasOwnProperty;
function iN(e) {
  var t = e.length, n = new e.constructor(t);
  return t && typeof e[0] == "string" && sN.call(e, "index") && (n.index = e.index, n.input = e.input), n;
}
var nu = hr.Uint8Array;
function vc(e) {
  var t = new e.constructor(e.byteLength);
  return new nu(t).set(new nu(e)), t;
}
function lN(e, t) {
  var n = t ? vc(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.byteLength);
}
var oN = /\w*$/;
function uN(e) {
  var t = new e.constructor(e.source, oN.exec(e));
  return t.lastIndex = e.lastIndex, t;
}
var dE = _r ? _r.prototype : void 0, cE = dE ? dE.valueOf : void 0;
function _N(e) {
  return cE ? Object(cE.call(e)) : {};
}
function dN(e, t) {
  var n = t ? vc(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.length);
}
var cN = "[object Boolean]", fN = "[object Date]", hN = "[object Map]", AN = "[object Number]", EN = "[object RegExp]", pN = "[object Set]", TN = "[object String]", SN = "[object Symbol]", mN = "[object ArrayBuffer]", LN = "[object DataView]", bN = "[object Float32Array]", IN = "[object Float64Array]", vN = "[object Int8Array]", yN = "[object Int16Array]", gN = "[object Int32Array]", RN = "[object Uint8Array]", ON = "[object Uint8ClampedArray]", CN = "[object Uint16Array]", DN = "[object Uint32Array]";
function NN(e, t, n) {
  var r = e.constructor;
  switch (t) {
    case mN:
      return vc(e);
    case cN:
    case fN:
      return new r(+e);
    case LN:
      return lN(e, n);
    case bN:
    case IN:
    case vN:
    case yN:
    case gN:
    case RN:
    case ON:
    case CN:
    case DN:
      return dN(e, n);
    case hN:
      return new r();
    case AN:
    case TN:
      return new r(e);
    case EN:
      return uN(e);
    case pN:
      return new r();
    case SN:
      return _N(e);
  }
}
function BN(e) {
  return typeof e.constructor == "function" && !Rl(e) ? fO(bc(e)) : {};
}
var wN = "[object Map]";
function PN(e) {
  return dr(e) && qn(e) == wN;
}
var fE = Si && Si.isMap, xN = fE ? Lu(fE) : PN, MN = "[object Set]";
function FN(e) {
  return dr(e) && qn(e) == MN;
}
var hE = Si && Si.isSet, qN = hE ? Lu(hE) : FN, $N = 1, UN = 2, kN = 4, eT = "[object Arguments]", HN = "[object Array]", VN = "[object Boolean]", WN = "[object Date]", GN = "[object Error]", tT = "[object Function]", jN = "[object GeneratorFunction]", KN = "[object Map]", zN = "[object Number]", nT = "[object Object]", YN = "[object RegExp]", XN = "[object Set]", ZN = "[object String]", JN = "[object Symbol]", QN = "[object WeakMap]", eB = "[object ArrayBuffer]", tB = "[object DataView]", nB = "[object Float32Array]", rB = "[object Float64Array]", aB = "[object Int8Array]", sB = "[object Int16Array]", iB = "[object Int32Array]", lB = "[object Uint8Array]", oB = "[object Uint8ClampedArray]", uB = "[object Uint16Array]", _B = "[object Uint32Array]", mt = {};
mt[eT] = mt[HN] = mt[eB] = mt[tB] = mt[VN] = mt[WN] = mt[nB] = mt[rB] = mt[aB] = mt[sB] = mt[iB] = mt[KN] = mt[zN] = mt[nT] = mt[YN] = mt[XN] = mt[ZN] = mt[JN] = mt[lB] = mt[oB] = mt[uB] = mt[_B] = !0;
mt[GN] = mt[tT] = mt[QN] = !1;
function ll(e, t, n, r, s, i) {
  var o, u = t & $N, f = t & UN, A = t & kN;
  if (o !== void 0)
    return o;
  if (!Hn(e))
    return e;
  var E = Te(e);
  if (E) {
    if (o = iN(e), !u)
      return EO(e, o);
  } else {
    var p = qn(e), T = p == tT || p == jN;
    if (fl(e))
      return GD(e, u);
    if (p == nT || p == eT || T && !s) {
      if (o = f || T ? {} : BN(e), !u)
        return f ? XD(e, VD(o, e)) : zD(e, HD(o, e));
    } else {
      if (!mt[p])
        return s ? e : {};
      o = NN(e, p, u);
    }
  }
  i || (i = new $r());
  var S = i.get(e);
  if (S)
    return S;
  i.set(e, o), qN(e) ? e.forEach(function(I) {
    o.add(ll(I, t, n, I, e, i));
  }) : xN(e) && e.forEach(function(I, v) {
    o.set(v, ll(I, t, n, v, e, i));
  });
  var L = A ? f ? ZD : Fd : f ? Ac : _a, b = E ? void 0 : L(e);
  return gp(b || e, function(I, v) {
    b && (v = I, I = e[v]), Tu(o, v, ll(I, t, n, v, e, i));
  }), o;
}
var dB = 4;
function rT(e) {
  return ll(e, dB);
}
var cB = 1, fB = 4;
function he(e) {
  return ll(e, cB | fB);
}
var hB = "__lodash_hash_undefined__";
function AB(e) {
  return this.__data__.set(e, hB), this;
}
function EB(e) {
  return this.__data__.has(e);
}
function mi(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.__data__ = new ca(); ++t < n; )
    this.add(e[t]);
}
mi.prototype.add = mi.prototype.push = AB;
mi.prototype.has = EB;
function pB(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r; )
    if (t(e[n], n, e))
      return !0;
  return !1;
}
function yc(e, t) {
  return e.has(t);
}
var TB = 1, SB = 2;
function aT(e, t, n, r, s, i) {
  var o = n & TB, u = e.length, f = t.length;
  if (u != f && !(o && f > u))
    return !1;
  var A = i.get(e), E = i.get(t);
  if (A && E)
    return A == t && E == e;
  var p = -1, T = !0, S = n & SB ? new mi() : void 0;
  for (i.set(e, t), i.set(t, e); ++p < u; ) {
    var L = e[p], b = t[p];
    if (r)
      var I = o ? r(b, L, p, t, e, i) : r(L, b, p, e, t, i);
    if (I !== void 0) {
      if (I)
        continue;
      T = !1;
      break;
    }
    if (S) {
      if (!pB(t, function(v, R) {
        if (!yc(S, R) && (L === v || s(L, v, n, r, i)))
          return S.push(R);
      })) {
        T = !1;
        break;
      }
    } else if (!(L === b || s(L, b, n, r, i))) {
      T = !1;
      break;
    }
  }
  return i.delete(e), i.delete(t), T;
}
function mB(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r, s) {
    n[++t] = [s, r];
  }), n;
}
function gc(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r) {
    n[++t] = r;
  }), n;
}
var LB = 1, bB = 2, IB = "[object Boolean]", vB = "[object Date]", yB = "[object Error]", gB = "[object Map]", RB = "[object Number]", OB = "[object RegExp]", CB = "[object Set]", DB = "[object String]", NB = "[object Symbol]", BB = "[object ArrayBuffer]", wB = "[object DataView]", AE = _r ? _r.prototype : void 0, fd = AE ? AE.valueOf : void 0;
function PB(e, t, n, r, s, i, o) {
  switch (n) {
    case wB:
      if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset)
        return !1;
      e = e.buffer, t = t.buffer;
    case BB:
      return !(e.byteLength != t.byteLength || !i(new nu(e), new nu(t)));
    case IB:
    case vB:
    case RB:
      return pu(+e, +t);
    case yB:
      return e.name == t.name && e.message == t.message;
    case OB:
    case DB:
      return e == t + "";
    case gB:
      var u = mB;
    case CB:
      var f = r & LB;
      if (u || (u = gc), e.size != t.size && !f)
        return !1;
      var A = o.get(e);
      if (A)
        return A == t;
      r |= bB, o.set(e, t);
      var E = aT(u(e), u(t), r, s, i, o);
      return o.delete(e), E;
    case NB:
      if (fd)
        return fd.call(e) == fd.call(t);
  }
  return !1;
}
var xB = 1, MB = Object.prototype, FB = MB.hasOwnProperty;
function qB(e, t, n, r, s, i) {
  var o = n & xB, u = Fd(e), f = u.length, A = Fd(t), E = A.length;
  if (f != E && !o)
    return !1;
  for (var p = f; p--; ) {
    var T = u[p];
    if (!(o ? T in t : FB.call(t, T)))
      return !1;
  }
  var S = i.get(e), L = i.get(t);
  if (S && L)
    return S == t && L == e;
  var b = !0;
  i.set(e, t), i.set(t, e);
  for (var I = o; ++p < f; ) {
    T = u[p];
    var v = e[T], R = t[T];
    if (r)
      var g = o ? r(R, v, T, t, e, i) : r(v, R, T, e, t, i);
    if (!(g === void 0 ? v === R || s(v, R, n, r, i) : g)) {
      b = !1;
      break;
    }
    I || (I = T == "constructor");
  }
  if (b && !I) {
    var D = e.constructor, w = t.constructor;
    D != w && "constructor" in e && "constructor" in t && !(typeof D == "function" && D instanceof D && typeof w == "function" && w instanceof w) && (b = !1);
  }
  return i.delete(e), i.delete(t), b;
}
var $B = 1, EE = "[object Arguments]", pE = "[object Array]", No = "[object Object]", UB = Object.prototype, TE = UB.hasOwnProperty;
function kB(e, t, n, r, s, i) {
  var o = Te(e), u = Te(t), f = o ? pE : qn(e), A = u ? pE : qn(t);
  f = f == EE ? No : f, A = A == EE ? No : A;
  var E = f == No, p = A == No, T = f == A;
  if (T && fl(e)) {
    if (!fl(t))
      return !1;
    o = !0, E = !1;
  }
  if (T && !E)
    return i || (i = new $r()), o || fc(e) ? aT(e, t, n, r, s, i) : PB(e, t, f, n, r, s, i);
  if (!(n & $B)) {
    var S = E && TE.call(e, "__wrapped__"), L = p && TE.call(t, "__wrapped__");
    if (S || L) {
      var b = S ? e.value() : e, I = L ? t.value() : t;
      return i || (i = new $r()), s(b, I, n, r, i);
    }
  }
  return T ? (i || (i = new $r()), qB(e, t, n, r, s, i)) : !1;
}
function yu(e, t, n, r, s) {
  return e === t ? !0 : e == null || t == null || !dr(e) && !dr(t) ? e !== e && t !== t : kB(e, t, n, r, yu, s);
}
var HB = 1, VB = 2;
function WB(e, t, n, r) {
  var s = n.length, i = s;
  if (e == null)
    return !i;
  for (e = Object(e); s--; ) {
    var o = n[s];
    if (o[2] ? o[1] !== e[o[0]] : !(o[0] in e))
      return !1;
  }
  for (; ++s < i; ) {
    o = n[s];
    var u = o[0], f = e[u], A = o[1];
    if (o[2]) {
      if (f === void 0 && !(u in e))
        return !1;
    } else {
      var E = new $r(), p;
      if (!(p === void 0 ? yu(A, f, HB | VB, r, E) : p))
        return !1;
    }
  }
  return !0;
}
function sT(e) {
  return e === e && !Hn(e);
}
function GB(e) {
  for (var t = _a(e), n = t.length; n--; ) {
    var r = t[n], s = e[r];
    t[n] = [r, s, sT(s)];
  }
  return t;
}
function iT(e, t) {
  return function(n) {
    return n == null ? !1 : n[e] === t && (t !== void 0 || e in Object(n));
  };
}
function jB(e) {
  var t = GB(e);
  return t.length == 1 && t[0][2] ? iT(t[0][0], t[0][1]) : function(n) {
    return n === e || WB(n, e, t);
  };
}
function KB(e, t) {
  return e != null && t in Object(e);
}
function zB(e, t, n) {
  t = Tc(t, e);
  for (var r = -1, s = t.length, i = !1; ++r < s; ) {
    var o = Ol(t[r]);
    if (!(i = e != null && n(e, o)))
      break;
    e = e[o];
  }
  return i || ++r != s ? i : (s = e == null ? 0 : e.length, !!s && cc(s) && Eu(o, s) && (Te(e) || mu(e)));
}
function YB(e, t) {
  return e != null && zB(e, t, KB);
}
var XB = 1, ZB = 2;
function JB(e, t) {
  return Ec(e) && sT(t) ? iT(Ol(e), t) : function(n) {
    var r = ce(n, e);
    return r === void 0 && r === t ? YB(n, e) : yu(t, r, XB | ZB);
  };
}
function lT(e) {
  return function(t) {
    return t == null ? void 0 : t[e];
  };
}
function QB(e) {
  return function(t) {
    return Sc(t, e);
  };
}
function ew(e) {
  return Ec(e) ? lT(Ol(e)) : QB(e);
}
function fa(e) {
  return typeof e == "function" ? e : e == null ? Us : typeof e == "object" ? Te(e) ? JB(e[0], e[1]) : jB(e) : ew(e);
}
function tw(e, t, n, r) {
  for (var s = -1, i = e == null ? 0 : e.length; ++s < i; ) {
    var o = e[s];
    t(r, o, n(o), e);
  }
  return r;
}
function oT(e) {
  return function(t, n, r) {
    for (var s = -1, i = Object(t), o = r(t), u = o.length; u--; ) {
      var f = o[e ? u : ++s];
      if (n(i[f], f, i) === !1)
        break;
    }
    return t;
  };
}
var nw = oT();
function rw(e, t) {
  return e && nw(e, t, _a);
}
function uT(e, t) {
  return function(n, r) {
    if (n == null)
      return n;
    if (!Or(n))
      return e(n, r);
    for (var s = n.length, i = t ? s : -1, o = Object(n); (t ? i-- : ++i < s) && r(o[i], i, o) !== !1; )
      ;
    return n;
  };
}
var gi = uT(rw);
function aw(e, t, n, r) {
  return gi(e, function(s, i, o) {
    t(r, s, n(s), o);
  }), r;
}
function sw(e, t) {
  return function(n, r) {
    var s = Te(n) ? tw : aw, i = {};
    return s(n, e, fa(r), i);
  };
}
var hd = function() {
  return hr.Date.now();
}, iw = "Expected a function", lw = Math.max, ow = Math.min;
function El(e, t, n) {
  var r, s, i, o, u, f, A = 0, E = !1, p = !1, T = !0;
  if (typeof e != "function")
    throw new TypeError(iw);
  t = Ti(t) || 0, Hn(n) && (E = !!n.leading, p = "maxWait" in n, i = p ? lw(Ti(n.maxWait) || 0, t) : i, T = "trailing" in n ? !!n.trailing : T);
  function S(F) {
    var P = r, M = s;
    return r = s = void 0, A = F, o = e.apply(M, P), o;
  }
  function L(F) {
    return A = F, u = setTimeout(v, t), E ? S(F) : o;
  }
  function b(F) {
    var P = F - f, M = F - A, O = t - P;
    return p ? ow(O, i - M) : O;
  }
  function I(F) {
    var P = F - f, M = F - A;
    return f === void 0 || P >= t || P < 0 || p && M >= i;
  }
  function v() {
    var F = hd();
    if (I(F))
      return R(F);
    u = setTimeout(v, b(F));
  }
  function R(F) {
    return u = void 0, T && r ? S(F) : (r = s = void 0, o);
  }
  function g() {
    u !== void 0 && clearTimeout(u), A = 0, r = f = s = u = void 0;
  }
  function D() {
    return u === void 0 ? o : R(hd());
  }
  function w() {
    var F = hd(), P = I(F);
    if (r = arguments, s = this, f = F, P) {
      if (u === void 0)
        return L(f);
      if (p)
        return clearTimeout(u), u = setTimeout(v, t), S(f);
    }
    return u === void 0 && (u = setTimeout(v, t)), o;
  }
  return w.cancel = g, w.flush = D, w;
}
function Ud(e) {
  return dr(e) && Or(e);
}
var uw = 200;
function _w(e, t, n, r) {
  var s = -1, i = Cp, o = !0, u = e.length, f = [], A = t.length;
  if (!u)
    return f;
  t.length >= uw && (i = yc, o = !1, t = new mi(t));
  e:
    for (; ++s < u; ) {
      var E = e[s], p = E;
      if (E = E !== 0 ? E : 0, o && p === p) {
        for (var T = A; T--; )
          if (t[T] === p)
            continue e;
        f.push(E);
      } else i(t, p, r) || f.push(E);
    }
  return f;
}
var dw = Su(function(e, t) {
  return Ud(e) ? _w(e, Lc(t, 1, Ud, !0)) : [];
});
function Li(e) {
  var t = e == null ? 0 : e.length;
  return t ? e[t - 1] : void 0;
}
function Rc(e) {
  return typeof e == "function" ? e : Us;
}
function z(e, t) {
  var n = Te(e) ? gp : gi;
  return n(e, Rc(t));
}
function cw(e, t) {
  for (var n = e == null ? 0 : e.length; n-- && t(e[n], n, e) !== !1; )
    ;
  return e;
}
var fw = oT(!0);
function hw(e, t) {
  return e && fw(e, t, _a);
}
var Aw = uT(hw, !0);
function Ew(e, t) {
  var n = Te(e) ? cw : Aw;
  return n(e, Rc(t));
}
function pw(e, t, n) {
  e = Vt(e), t = yl(t);
  var r = e.length;
  n = n === void 0 ? r : zp(jr(n), 0, r);
  var s = n;
  return n -= t.length, n >= 0 && e.slice(n, s) == t;
}
var _T = /[\\^$.*+?()[\]{}|]/g, Tw = RegExp(_T.source);
function gu(e) {
  return e = Vt(e), e && Tw.test(e) ? e.replace(_T, "\\$&") : e;
}
function Sw(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r; )
    if (!t(e[n], n, e))
      return !1;
  return !0;
}
function mw(e, t) {
  var n = !0;
  return gi(e, function(r, s, i) {
    return n = !!t(r, s, i), n;
  }), n;
}
function dT(e, t, n) {
  var r = Te(e) ? Sw : mw;
  return r(e, fa(t));
}
function Lw(e, t) {
  var n = [];
  return gi(e, function(r, s, i) {
    t(r, s, i) && n.push(r);
  }), n;
}
function Lt(e, t) {
  var n = Te(e) ? Xp : Lw;
  return n(e, fa(t));
}
function bw(e) {
  return function(t, n, r) {
    var s = Object(t);
    if (!Or(t)) {
      var i = fa(n);
      t = _a(t), n = function(u) {
        return i(s[u], u, s);
      };
    }
    var o = e(t, n, r);
    return o > -1 ? s[i ? t[o] : o] : void 0;
  };
}
var Iw = Math.max;
function Ns(e, t, n) {
  var r = e == null ? 0 : e.length;
  if (!r)
    return -1;
  var s = n == null ? 0 : jr(n);
  return s < 0 && (s = Iw(r + s, 0)), Rp(e, fa(t), s);
}
var Oc = bw(Ns);
function cT(e, t) {
  var n = -1, r = Or(e) ? Array(e.length) : [];
  return gi(e, function(s, i, o) {
    r[++n] = t(s, i, o);
  }), r;
}
function Mn(e, t) {
  var n = Te(e) ? fi : cT;
  return n(e, fa(t));
}
function vw(e, t) {
  return e > t;
}
var yw = "[object String]";
function ot(e) {
  return typeof e == "string" || !Te(e) && dr(e) && ua(e) == yw;
}
function gw(e, t) {
  return fi(t, function(n) {
    return e[n];
  });
}
function Cc(e) {
  return e == null ? [] : gw(e, _a(e));
}
var Rw = Math.max;
function kd(e, t, n, r) {
  e = Or(e) ? e : Cc(e), n = n && !r ? jr(n) : 0;
  var s = e.length;
  return n < 0 && (n = Rw(s + n, 0)), ot(e) ? n <= s && e.indexOf(t, n) > -1 : !!s && Op(e, t, n) > -1;
}
var Ow = "[object Map]", Cw = "[object Set]", Dw = Object.prototype, Nw = Dw.hasOwnProperty;
function En(e) {
  if (e == null)
    return !0;
  if (Or(e) && (Te(e) || typeof e == "string" || typeof e.splice == "function" || fl(e) || fc(e) || mu(e)))
    return !e.length;
  var t = qn(e);
  if (t == Ow || t == Cw)
    return !e.size;
  if (Rl(e))
    return !hc(e).length;
  for (var n in e)
    if (Nw.call(e, n))
      return !1;
  return !0;
}
function Dc(e, t) {
  return yu(e, t);
}
function ha(e) {
  return typeof e == "number" && e == jr(e);
}
var Bw = "[object Number]";
function Rn(e) {
  return typeof e == "number" || dr(e) && ua(e) == Bw;
}
function ww(e) {
  return Rn(e) && e != +e;
}
function le(e) {
  return e == null;
}
function Be(e) {
  return e === void 0;
}
var Fa = sw(function(e, t, n) {
  dc(e, n, t);
});
function Pw(e, t) {
  return e < t;
}
function fT(e, t, n) {
  for (var r = -1, s = e.length; ++r < s; ) {
    var i = e[r], o = t(i);
    if (o != null && (u === void 0 ? o === o && !xs(o) : n(o, u)))
      var u = o, f = i;
  }
  return f;
}
function xw(e) {
  return e.length ? fT(e, Us, vw) : void 0;
}
function Mw(e) {
  return e && e.length ? fT(e, Us, Pw) : void 0;
}
function Fw(e, t, n, r) {
  if (!Hn(e))
    return e;
  t = Tc(t, e);
  for (var s = -1, i = t.length, o = i - 1, u = e; u != null && ++s < i; ) {
    var f = Ol(t[s]), A = n;
    if (f === "__proto__" || f === "constructor" || f === "prototype")
      return e;
    if (s != o) {
      var E = u[f];
      A = void 0, A === void 0 && (A = Hn(E) ? E : Eu(t[s + 1]) ? [] : {});
    }
    Tu(u, f, A), u = u[f];
  }
  return e;
}
function qw(e, t) {
  var n = e.length;
  for (e.sort(t); n--; )
    e[n] = e[n].value;
  return e;
}
function $w(e, t) {
  if (e !== t) {
    var n = e !== void 0, r = e === null, s = e === e, i = xs(e), o = t !== void 0, u = t === null, f = t === t, A = xs(t);
    if (!u && !A && !i && e > t || i && o && f && !u && !A || r && o && f || !n && f || !s)
      return 1;
    if (!r && !i && !A && e < t || A && n && s && !r && !i || u && n && s || !o && s || !f)
      return -1;
  }
  return 0;
}
function Uw(e, t, n) {
  for (var r = -1, s = e.criteria, i = t.criteria, o = s.length, u = n.length; ++r < o; ) {
    var f = $w(s[r], i[r]);
    if (f) {
      if (r >= u)
        return f;
      var A = n[r];
      return f * (A == "desc" ? -1 : 1);
    }
  }
  return e.index - t.index;
}
function hT(e, t, n) {
  t.length ? t = fi(t, function(i) {
    return Te(i) ? function(o) {
      return Sc(o, i.length === 1 ? i[0] : i);
    } : i;
  }) : t = [Us];
  var r = -1;
  t = fi(t, Lu(fa));
  var s = cT(e, function(i, o, u) {
    var f = fi(t, function(A) {
      return A(i);
    });
    return { criteria: f, index: ++r, value: i };
  });
  return qw(s, function(i, o) {
    return Uw(i, o, n);
  });
}
function Nc(e, t, n, r) {
  return e == null ? [] : (Te(t) || (t = t == null ? [] : [t]), n = n, Te(n) || (n = n == null ? [] : [n]), hT(e, t, n));
}
var kw = 9007199254740991, Hw = Math.floor;
function Hd(e, t) {
  var n = "";
  if (!e || t < 1 || t > kw)
    return n;
  do
    t % 2 && (n += e), t = Hw(t / 2), t && (e += e);
  while (t);
  return n;
}
var Vw = lT("length"), AT = "\\ud800-\\udfff", Ww = "\\u0300-\\u036f", Gw = "\\ufe20-\\ufe2f", jw = "\\u20d0-\\u20ff", Kw = Ww + Gw + jw, zw = "\\ufe0e\\ufe0f", Yw = "[" + AT + "]", Vd = "[" + Kw + "]", Wd = "\\ud83c[\\udffb-\\udfff]", Xw = "(?:" + Vd + "|" + Wd + ")", ET = "[^" + AT + "]", pT = "(?:\\ud83c[\\udde6-\\uddff]){2}", TT = "[\\ud800-\\udbff][\\udc00-\\udfff]", Zw = "\\u200d", ST = Xw + "?", mT = "[" + zw + "]?", Jw = "(?:" + Zw + "(?:" + [ET, pT, TT].join("|") + ")" + mT + ST + ")*", Qw = mT + ST + Jw, eP = "(?:" + [ET + Vd + "?", Vd, pT, TT, Yw].join("|") + ")", SE = RegExp(Wd + "(?=" + Wd + ")|" + eP + Qw, "g");
function tP(e) {
  for (var t = SE.lastIndex = 0; SE.test(e); )
    ++t;
  return t;
}
function Bc(e) {
  return vu(e) ? tP(e) : Vw(e);
}
var nP = Math.ceil;
function rP(e, t) {
  t = t === void 0 ? " " : yl(t);
  var n = t.length;
  if (n < 2)
    return n ? Hd(t, e) : t;
  var r = Hd(t, nP(e / Bc(t)));
  return vu(t) ? qp(Gp(r), 0, e).join("") : r.slice(0, e);
}
function aP(e, t, n) {
  e = Vt(e), t = jr(t);
  var r = t ? Bc(e) : 0;
  return t && r < t ? rP(t - r, n) + e : e;
}
var sP = Math.ceil, iP = Math.max;
function lP(e, t, n, r) {
  for (var s = -1, i = iP(sP((t - e) / (n || 1)), 0), o = Array(i); i--; )
    o[++s] = e, e += n;
  return o;
}
function oP(e) {
  return function(t, n, r) {
    return r && typeof r != "number" && tu(t, n, r) && (n = r = void 0), t = $o(t), n === void 0 ? (n = t, t = 0) : n = $o(n), r = r === void 0 ? t < n ? 1 : -1 : $o(r), lP(t, n, r);
  };
}
var Uo = oP();
function uP(e, t, n, r, s) {
  return s(e, function(i, o, u) {
    n = r ? (r = !1, i) : t(n, i, o, u);
  }), n;
}
function _P(e, t, n) {
  var r = Te(e) ? BD : uP, s = arguments.length < 3;
  return r(e, fa(t), n, s, gi);
}
function dP(e, t, n) {
  return t === void 0 ? t = 1 : t = jr(t), Hd(Vt(e), t);
}
var cP = Kp("round");
function wc(e, t, n) {
  return e == null ? e : Fw(e, t, n);
}
var fP = "[object Map]", hP = "[object Set]";
function Ri(e) {
  if (e == null)
    return 0;
  if (Or(e))
    return ot(e) ? Bc(e) : e.length;
  var t = qn(e);
  return t == fP || t == hP ? e.size : hc(e).length;
}
var Gd = Su(function(e, t) {
  if (e == null)
    return [];
  var n = t.length;
  return n > 1 && tu(e, t[0], t[1]) ? t = [] : n > 2 && tu(t[0], t[1], t[2]) && (t = [t[0]]), hT(e, Lc(t), []);
});
function Pc(e, t, n) {
  return e = Vt(e), n = n == null ? 0 : zp(jr(n), 0, e.length), t = yl(t), e.slice(n, n + t.length) == t;
}
function LT(e, t, n) {
  return e && e.length ? (t = t === void 0 ? 1 : jr(t), Fp(e, 0, t < 0 ? 0 : t)) : [];
}
var AP = 9007199254740991, Ad = 4294967295, EP = Math.min;
function ur(e, t) {
  if (e = jr(e), e < 1 || e > AP)
    return [];
  var n = Ad, r = EP(e, Ad);
  t = Rc(t), e -= Ad;
  for (var s = Dp(r, t); ++n < e; )
    t(n);
  return s;
}
function bT(e) {
  return Vt(e).toLowerCase();
}
function IT(e) {
  return Vt(e).toUpperCase();
}
var pP = 1 / 0, TP = hi && 1 / gc(new hi([, -0]))[1] == pP ? function(e) {
  return new hi(e);
} : AO, SP = 200;
function xc(e, t, n) {
  var r = -1, s = Cp, i = e.length, o = !0, u = [], f = u;
  if (i >= SP) {
    var A = t ? null : TP(e);
    if (A)
      return gc(A);
    o = !1, s = yc, f = new mi();
  } else
    f = t ? [] : u;
  e:
    for (; ++r < i; ) {
      var E = e[r], p = t ? t(E) : E;
      if (E = E !== 0 ? E : 0, o && p === p) {
        for (var T = f.length; T--; )
          if (f[T] === p)
            continue e;
        t && f.push(p), u.push(E);
      } else s(f, p, n) || (f !== u && f.push(p), u.push(E));
    }
  return u;
}
var mP = Su(function(e) {
  return xc(Lc(e, 1, Ud, !0));
});
function LP(e) {
  return e && e.length ? xc(e) : [];
}
function vT(e, t) {
  return e && e.length ? xc(e, fa(t)) : [];
}
var bP = 0;
function st(e) {
  var t = ++bP;
  return Vt(e) + t;
}
function IP(e, {
  classButtonLocal: t = _(() => {
  }),
  isOpen: n = _(() => !1),
  toggleLocal: r = () => {
  },
  currentId: s = _(() => "")
}) {
  const i = d(e, "item"), o = de("classButton"), u = de("disabled"), f = de("id"), A = de("isCaret"), E = de("keyContent"), p = de("keyLabel"), T = de("readonly"), S = de("withGap"), L = _(() => !!(u.value || i.value.disabled)), b = _(() => Be(i.value.isCaret) ? A.value : i.value.isCaret), I = _(() => T.value || i.value.readonly), v = _(() => `${f.value}_${s.value}`), R = _(() => I.value ? "div" : "a"), g = _(() => {
    const F = {
      class: ["a_accordion__button", o.value, t.value, {
        a_accordion__button_collapsed: !n.value,
        a_accordion__button_has_not_caret: !b.value,
        a_accordion__button_with_gap: S.value,
        readonly: I.value
      }],
      id: i.value.id
    };
    return I.value || (F.ariaExpanded = n.value, F["aria-controls"] = v.value, F.rolw = "button", F.tabindex = 0, F.disabled = L.value, F.onClick = r), F;
  }), D = _(() => p.value ? ce(i.value, p.value) : ""), w = _(() => E.value ? ce(i.value, E.value) : "");
  return {
    buttonAttributes: g,
    buttonTag: R,
    contentLocal: w,
    idForCollapse: v,
    labelLocal: D
  };
}
function vP(e) {
  const t = d(e, "item"), n = de("keyChildren"), r = _(() => ce(t.value, n.value, []) || []), s = _(() => r.value.length !== 0);
  return {
    children: r,
    hasChildren: s
  };
}
function yP(e) {
  const t = d(e, "item"), n = de("keyClassBody"), r = de("keyClassHeader"), s = de("keyClassButton"), i = _(() => {
    if (n.value)
      return ce(t.value, n.value);
  }), o = _(() => {
    if (r.value)
      return ce(t.value, r.value);
  }), u = _(() => {
    if (s.value)
      return ce(t.value, s.value);
  });
  return {
    classBodyLocal: i,
    classButtonLocal: u,
    classHeaderLocal: o
  };
}
const gP = "_a_children", Ge = "_a_id", vt = "_a_label", oi = "_a_label_search", pl = "_a_parent";
function RP(e) {
  const t = d(e, "isParentOpen"), n = d(e, "item"), r = d(e, "itemIndex"), s = d(e, "keyId"), i = d(e, "parentsIds"), o = d(e, "parentIndexes"), u = de("idsForOpen"), f = de("toggle"), A = _(() => n.value[Ge]), E = _(() => t.value ? u.value.indexOf(A.value) !== -1 : !1), p = _(() => {
    const v = he(i.value);
    return v.push(`${A.value}`), v;
  }), T = _(() => o.value.join(".")), S = _(() => T.value ? `${T.value}.${r.value}` : `${r.value}`), L = _(() => {
    const v = he(o.value);
    return v.push(`${S.value}`), v;
  }), b = (v) => {
    f({
      $event: v,
      parentsIds: i.value,
      isOpen: E.value,
      item: n.value,
      itemIndex: r.value
    });
  };
  return {
    closeItemIfOpen: () => {
      E.value && s.value && b();
    },
    currentId: A,
    isOpen: E,
    parentIndexesForChild: L,
    parentsIdsForChild: p,
    toggleLocal: b
  };
}
function OP(e) {
  const t = d(e, "item"), n = de("keyIsRender"), r = de("keyIsRenderBodyByFirstOpen"), s = B(!1), i = _(() => {
    if (r.value)
      return ce(t.value, r.value);
  }), o = _(() => i.value ? s.value : !0), u = _(() => n.value ? !!ce(t.value, n.value, !0) : !0);
  return {
    isBodyVisible: o,
    isOpenFirst: s,
    isRender: u
  };
}
/*! @license DOMPurify 3.2.3 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.3/LICENSE */
const {
  entries: yT,
  setPrototypeOf: mE,
  isFrozen: CP,
  getPrototypeOf: DP,
  getOwnPropertyDescriptor: NP
} = Object;
let {
  freeze: pn,
  seal: cr,
  create: gT
} = Object, {
  apply: jd,
  construct: Kd
} = typeof Reflect < "u" && Reflect;
pn || (pn = function(t) {
  return t;
});
cr || (cr = function(t) {
  return t;
});
jd || (jd = function(t, n, r) {
  return t.apply(n, r);
});
Kd || (Kd = function(t, n) {
  return new t(...n);
});
const Bo = Vn(Array.prototype.forEach), LE = Vn(Array.prototype.pop), Zi = Vn(Array.prototype.push), ko = Vn(String.prototype.toLowerCase), Ed = Vn(String.prototype.toString), bE = Vn(String.prototype.match), Ji = Vn(String.prototype.replace), BP = Vn(String.prototype.indexOf), wP = Vn(String.prototype.trim), vr = Vn(Object.prototype.hasOwnProperty), hn = Vn(RegExp.prototype.test), Qi = PP(TypeError);
function Vn(e) {
  return function(t) {
    for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++)
      r[s - 1] = arguments[s];
    return jd(e, t, r);
  };
}
function PP(e) {
  return function() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return Kd(e, n);
  };
}
function Ze(e, t) {
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ko;
  mE && mE(e, null);
  let r = t.length;
  for (; r--; ) {
    let s = t[r];
    if (typeof s == "string") {
      const i = n(s);
      i !== s && (CP(t) || (t[r] = i), s = i);
    }
    e[s] = !0;
  }
  return e;
}
function xP(e) {
  for (let t = 0; t < e.length; t++)
    vr(e, t) || (e[t] = null);
  return e;
}
function Cs(e) {
  const t = gT(null);
  for (const [n, r] of yT(e))
    vr(e, n) && (Array.isArray(r) ? t[n] = xP(r) : r && typeof r == "object" && r.constructor === Object ? t[n] = Cs(r) : t[n] = r);
  return t;
}
function el(e, t) {
  for (; e !== null; ) {
    const r = NP(e, t);
    if (r) {
      if (r.get)
        return Vn(r.get);
      if (typeof r.value == "function")
        return Vn(r.value);
    }
    e = DP(e);
  }
  function n() {
    return null;
  }
  return n;
}
const IE = pn(["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"]), pd = pn(["svg", "a", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "filter", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "style", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern"]), Td = pn(["feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence"]), MP = pn(["animate", "color-profile", "cursor", "discard", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignobject", "hatch", "hatchpath", "mesh", "meshgradient", "meshpatch", "meshrow", "missing-glyph", "script", "set", "solidcolor", "unknown", "use"]), Sd = pn(["math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover", "mprescripts"]), FP = pn(["maction", "maligngroup", "malignmark", "mlongdiv", "mscarries", "mscarry", "msgroup", "mstack", "msline", "msrow", "semantics", "annotation", "annotation-xml", "mprescripts", "none"]), vE = pn(["#text"]), yE = pn(["accept", "action", "align", "alt", "autocapitalize", "autocomplete", "autopictureinpicture", "autoplay", "background", "bgcolor", "border", "capture", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "controls", "controlslist", "coords", "crossorigin", "datetime", "decoding", "default", "dir", "disabled", "disablepictureinpicture", "disableremoteplayback", "download", "draggable", "enctype", "enterkeyhint", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "inputmode", "integrity", "ismap", "kind", "label", "lang", "list", "loading", "loop", "low", "max", "maxlength", "media", "method", "min", "minlength", "multiple", "muted", "name", "nonce", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "playsinline", "popover", "popovertarget", "popovertargetaction", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "role", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "sizes", "span", "srclang", "start", "src", "srcset", "step", "style", "summary", "tabindex", "title", "translate", "type", "usemap", "valign", "value", "width", "wrap", "xmlns", "slot"]), md = pn(["accent-height", "accumulate", "additive", "alignment-baseline", "amplitude", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "class", "clip", "clippathunits", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "exponent", "fill", "fill-opacity", "fill-rule", "filter", "filterunits", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "height", "href", "id", "image-rendering", "in", "in2", "intercept", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lang", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "media", "method", "mode", "min", "name", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "preserveaspectratio", "primitiveunits", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "result", "rotate", "scale", "seed", "shape-rendering", "slope", "specularconstant", "specularexponent", "spreadmethod", "startoffset", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "style", "surfacescale", "systemlanguage", "tabindex", "tablevalues", "targetx", "targety", "transform", "transform-origin", "text-anchor", "text-decoration", "text-rendering", "textlength", "type", "u1", "u2", "unicode", "values", "viewbox", "visibility", "version", "vert-adv-y", "vert-origin-x", "vert-origin-y", "width", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "xmlns", "y", "y1", "y2", "z", "zoomandpan"]), gE = pn(["accent", "accentunder", "align", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "dir", "display", "displaystyle", "encoding", "fence", "frame", "height", "href", "id", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "width", "xmlns"]), wo = pn(["xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"]), qP = cr(/\{\{[\w\W]*|[\w\W]*\}\}/gm), $P = cr(/<%[\w\W]*|[\w\W]*%>/gm), UP = cr(/\$\{[\w\W]*}/gm), kP = cr(/^data-[\-\w.\u00B7-\uFFFF]+$/), HP = cr(/^aria-[\-\w]+$/), RT = cr(
  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i
  // eslint-disable-line no-useless-escape
), VP = cr(/^(?:\w+script|data):/i), WP = cr(
  /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g
  // eslint-disable-line no-control-regex
), OT = cr(/^html$/i), GP = cr(/^[a-z][.\w]*(-[.\w]+)+$/i);
var RE = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  ARIA_ATTR: HP,
  ATTR_WHITESPACE: WP,
  CUSTOM_ELEMENT: GP,
  DATA_ATTR: kP,
  DOCTYPE_NAME: OT,
  ERB_EXPR: $P,
  IS_ALLOWED_URI: RT,
  IS_SCRIPT_OR_DATA: VP,
  MUSTACHE_EXPR: qP,
  TMPLIT_EXPR: UP
});
const tl = {
  element: 1,
  attribute: 2,
  text: 3,
  cdataSection: 4,
  entityReference: 5,
  // Deprecated
  entityNode: 6,
  // Deprecated
  progressingInstruction: 7,
  comment: 8,
  document: 9,
  documentType: 10,
  documentFragment: 11,
  notation: 12
  // Deprecated
}, jP = function() {
  return typeof window > "u" ? null : window;
}, KP = function(t, n) {
  if (typeof t != "object" || typeof t.createPolicy != "function")
    return null;
  let r = null;
  const s = "data-tt-policy-suffix";
  n && n.hasAttribute(s) && (r = n.getAttribute(s));
  const i = "dompurify" + (r ? "#" + r : "");
  try {
    return t.createPolicy(i, {
      createHTML(o) {
        return o;
      },
      createScriptURL(o) {
        return o;
      }
    });
  } catch {
    return console.warn("TrustedTypes policy " + i + " could not be created."), null;
  }
}, OE = function() {
  return {
    afterSanitizeAttributes: [],
    afterSanitizeElements: [],
    afterSanitizeShadowDOM: [],
    beforeSanitizeAttributes: [],
    beforeSanitizeElements: [],
    beforeSanitizeShadowDOM: [],
    uponSanitizeAttribute: [],
    uponSanitizeElement: [],
    uponSanitizeShadowNode: []
  };
};
function CT() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : jP();
  const t = (De) => CT(De);
  if (t.version = "3.2.3", t.removed = [], !e || !e.document || e.document.nodeType !== tl.document)
    return t.isSupported = !1, t;
  let {
    document: n
  } = e;
  const r = n, s = r.currentScript, {
    DocumentFragment: i,
    HTMLTemplateElement: o,
    Node: u,
    Element: f,
    NodeFilter: A,
    NamedNodeMap: E = e.NamedNodeMap || e.MozNamedAttrMap,
    HTMLFormElement: p,
    DOMParser: T,
    trustedTypes: S
  } = e, L = f.prototype, b = el(L, "cloneNode"), I = el(L, "remove"), v = el(L, "nextSibling"), R = el(L, "childNodes"), g = el(L, "parentNode");
  if (typeof o == "function") {
    const De = n.createElement("template");
    De.content && De.content.ownerDocument && (n = De.content.ownerDocument);
  }
  let D, w = "";
  const {
    implementation: F,
    createNodeIterator: P,
    createDocumentFragment: M,
    getElementsByTagName: O
  } = n, {
    importNode: q
  } = r;
  let U = OE();
  t.isSupported = typeof yT == "function" && typeof g == "function" && F && F.createHTMLDocument !== void 0;
  const {
    MUSTACHE_EXPR: G,
    ERB_EXPR: te,
    TMPLIT_EXPR: ne,
    DATA_ATTR: oe,
    ARIA_ATTR: se,
    IS_SCRIPT_OR_DATA: ie,
    ATTR_WHITESPACE: me,
    CUSTOM_ELEMENT: Ve
  } = RE;
  let {
    IS_ALLOWED_URI: Le
  } = RE, _e = null;
  const ve = Ze({}, [...IE, ...pd, ...Td, ...Sd, ...vE]);
  let be = null;
  const je = Ze({}, [...yE, ...md, ...gE, ...wo]);
  let Re = Object.seal(gT(null, {
    tagNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    attributeNameCheck: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: null
    },
    allowCustomizedBuiltInElements: {
      writable: !0,
      configurable: !1,
      enumerable: !0,
      value: !1
    }
  })), Z = null, H = null, X = !0, ae = !0, ye = !1, Ce = !0, qe = !1, Qe = !0, $e = !1, Fe = !1, it = !1, Ke = !1, lt = !1, et = !1, ht = !0, At = !1;
  const xt = "user-content-";
  let tn = !0, Ar = !1, nn = {}, Kn = null;
  const zn = Ze({}, ["annotation-xml", "audio", "colgroup", "desc", "foreignobject", "head", "iframe", "math", "mi", "mn", "mo", "ms", "mtext", "noembed", "noframes", "noscript", "plaintext", "script", "style", "svg", "template", "thead", "title", "video", "xmp"]);
  let On = null;
  const Dr = Ze({}, ["audio", "video", "img", "source", "image", "track"]);
  let Er = null;
  const Nr = Ze({}, ["alt", "class", "for", "id", "label", "name", "pattern", "placeholder", "role", "summary", "title", "value", "style", "xmlns"]), Yn = "http://www.w3.org/1998/Math/MathML", Xn = "http://www.w3.org/2000/svg", Zt = "http://www.w3.org/1999/xhtml";
  let mn = Zt, pr = !1, Tr = null;
  const As = Ze({}, [Yn, Xn, Zt], Ed);
  let Br = Ze({}, ["mi", "mo", "mn", "ms", "mtext"]), Zn = Ze({}, ["annotation-xml"]);
  const pa = Ze({}, ["title", "style", "font", "a", "script"]);
  let Cn = null;
  const Es = ["application/xhtml+xml", "text/html"], ps = "text/html";
  let yt = null, Jn = null;
  const Kr = n.createElement("form"), Ta = function(k) {
    return k instanceof RegExp || k instanceof Function;
  }, zr = function() {
    let k = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (!(Jn && Jn === k)) {
      if ((!k || typeof k != "object") && (k = {}), k = Cs(k), Cn = // eslint-disable-next-line unicorn/prefer-includes
      Es.indexOf(k.PARSER_MEDIA_TYPE) === -1 ? ps : k.PARSER_MEDIA_TYPE, yt = Cn === "application/xhtml+xml" ? Ed : ko, _e = vr(k, "ALLOWED_TAGS") ? Ze({}, k.ALLOWED_TAGS, yt) : ve, be = vr(k, "ALLOWED_ATTR") ? Ze({}, k.ALLOWED_ATTR, yt) : je, Tr = vr(k, "ALLOWED_NAMESPACES") ? Ze({}, k.ALLOWED_NAMESPACES, Ed) : As, Er = vr(k, "ADD_URI_SAFE_ATTR") ? Ze(Cs(Nr), k.ADD_URI_SAFE_ATTR, yt) : Nr, On = vr(k, "ADD_DATA_URI_TAGS") ? Ze(Cs(Dr), k.ADD_DATA_URI_TAGS, yt) : Dr, Kn = vr(k, "FORBID_CONTENTS") ? Ze({}, k.FORBID_CONTENTS, yt) : zn, Z = vr(k, "FORBID_TAGS") ? Ze({}, k.FORBID_TAGS, yt) : {}, H = vr(k, "FORBID_ATTR") ? Ze({}, k.FORBID_ATTR, yt) : {}, nn = vr(k, "USE_PROFILES") ? k.USE_PROFILES : !1, X = k.ALLOW_ARIA_ATTR !== !1, ae = k.ALLOW_DATA_ATTR !== !1, ye = k.ALLOW_UNKNOWN_PROTOCOLS || !1, Ce = k.ALLOW_SELF_CLOSE_IN_ATTR !== !1, qe = k.SAFE_FOR_TEMPLATES || !1, Qe = k.SAFE_FOR_XML !== !1, $e = k.WHOLE_DOCUMENT || !1, Ke = k.RETURN_DOM || !1, lt = k.RETURN_DOM_FRAGMENT || !1, et = k.RETURN_TRUSTED_TYPE || !1, it = k.FORCE_BODY || !1, ht = k.SANITIZE_DOM !== !1, At = k.SANITIZE_NAMED_PROPS || !1, tn = k.KEEP_CONTENT !== !1, Ar = k.IN_PLACE || !1, Le = k.ALLOWED_URI_REGEXP || RT, mn = k.NAMESPACE || Zt, Br = k.MATHML_TEXT_INTEGRATION_POINTS || Br, Zn = k.HTML_INTEGRATION_POINTS || Zn, Re = k.CUSTOM_ELEMENT_HANDLING || {}, k.CUSTOM_ELEMENT_HANDLING && Ta(k.CUSTOM_ELEMENT_HANDLING.tagNameCheck) && (Re.tagNameCheck = k.CUSTOM_ELEMENT_HANDLING.tagNameCheck), k.CUSTOM_ELEMENT_HANDLING && Ta(k.CUSTOM_ELEMENT_HANDLING.attributeNameCheck) && (Re.attributeNameCheck = k.CUSTOM_ELEMENT_HANDLING.attributeNameCheck), k.CUSTOM_ELEMENT_HANDLING && typeof k.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements == "boolean" && (Re.allowCustomizedBuiltInElements = k.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements), qe && (ae = !1), lt && (Ke = !0), nn && (_e = Ze({}, vE), be = [], nn.html === !0 && (Ze(_e, IE), Ze(be, yE)), nn.svg === !0 && (Ze(_e, pd), Ze(be, md), Ze(be, wo)), nn.svgFilters === !0 && (Ze(_e, Td), Ze(be, md), Ze(be, wo)), nn.mathMl === !0 && (Ze(_e, Sd), Ze(be, gE), Ze(be, wo))), k.ADD_TAGS && (_e === ve && (_e = Cs(_e)), Ze(_e, k.ADD_TAGS, yt)), k.ADD_ATTR && (be === je && (be = Cs(be)), Ze(be, k.ADD_ATTR, yt)), k.ADD_URI_SAFE_ATTR && Ze(Er, k.ADD_URI_SAFE_ATTR, yt), k.FORBID_CONTENTS && (Kn === zn && (Kn = Cs(Kn)), Ze(Kn, k.FORBID_CONTENTS, yt)), tn && (_e["#text"] = !0), $e && Ze(_e, ["html", "head", "body"]), _e.table && (Ze(_e, ["tbody"]), delete Z.tbody), k.TRUSTED_TYPES_POLICY) {
        if (typeof k.TRUSTED_TYPES_POLICY.createHTML != "function")
          throw Qi('TRUSTED_TYPES_POLICY configuration option must provide a "createHTML" hook.');
        if (typeof k.TRUSTED_TYPES_POLICY.createScriptURL != "function")
          throw Qi('TRUSTED_TYPES_POLICY configuration option must provide a "createScriptURL" hook.');
        D = k.TRUSTED_TYPES_POLICY, w = D.createHTML("");
      } else
        D === void 0 && (D = KP(S, s)), D !== null && typeof w == "string" && (w = D.createHTML(""));
      pn && pn(k), Jn = k;
    }
  }, Sa = Ze({}, [...pd, ...Td, ...MP]), wr = Ze({}, [...Sd, ...FP]), Ni = function(k) {
    let ue = g(k);
    (!ue || !ue.tagName) && (ue = {
      namespaceURI: mn,
      tagName: "template"
    });
    const Ie = ko(k.tagName), ct = ko(ue.tagName);
    return Tr[k.namespaceURI] ? k.namespaceURI === Xn ? ue.namespaceURI === Zt ? Ie === "svg" : ue.namespaceURI === Yn ? Ie === "svg" && (ct === "annotation-xml" || Br[ct]) : !!Sa[Ie] : k.namespaceURI === Yn ? ue.namespaceURI === Zt ? Ie === "math" : ue.namespaceURI === Xn ? Ie === "math" && Zn[ct] : !!wr[Ie] : k.namespaceURI === Zt ? ue.namespaceURI === Xn && !Zn[ct] || ue.namespaceURI === Yn && !Br[ct] ? !1 : !wr[Ie] && (pa[Ie] || !Sa[Ie]) : !!(Cn === "application/xhtml+xml" && Tr[k.namespaceURI]) : !1;
  }, rn = function(k) {
    Zi(t.removed, {
      element: k
    });
    try {
      g(k).removeChild(k);
    } catch {
      I(k);
    }
  }, ma = function(k, ue) {
    try {
      Zi(t.removed, {
        attribute: ue.getAttributeNode(k),
        from: ue
      });
    } catch {
      Zi(t.removed, {
        attribute: null,
        from: ue
      });
    }
    if (ue.removeAttribute(k), k === "is")
      if (Ke || lt)
        try {
          rn(ue);
        } catch {
        }
      else
        try {
          ue.setAttribute(k, "");
        } catch {
        }
  }, Gs = function(k) {
    let ue = null, Ie = null;
    if (it)
      k = "<remove></remove>" + k;
    else {
      const Bt = bE(k, /^[\r\n\t ]+/);
      Ie = Bt && Bt[0];
    }
    Cn === "application/xhtml+xml" && mn === Zt && (k = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + k + "</body></html>");
    const ct = D ? D.createHTML(k) : k;
    if (mn === Zt)
      try {
        ue = new T().parseFromString(ct, Cn);
      } catch {
      }
    if (!ue || !ue.documentElement) {
      ue = F.createDocument(mn, "template", null);
      try {
        ue.documentElement.innerHTML = pr ? w : ct;
      } catch {
      }
    }
    const Wt = ue.body || ue.documentElement;
    return k && Ie && Wt.insertBefore(n.createTextNode(Ie), Wt.childNodes[0] || null), mn === Zt ? O.call(ue, $e ? "html" : "body")[0] : $e ? ue.documentElement : Wt;
  }, js = function(k) {
    return P.call(
      k.ownerDocument || k,
      k,
      // eslint-disable-next-line no-bitwise
      A.SHOW_ELEMENT | A.SHOW_COMMENT | A.SHOW_TEXT | A.SHOW_PROCESSING_INSTRUCTION | A.SHOW_CDATA_SECTION,
      null
    );
  }, Sr = function(k) {
    return k instanceof p && (typeof k.nodeName != "string" || typeof k.textContent != "string" || typeof k.removeChild != "function" || !(k.attributes instanceof E) || typeof k.removeAttribute != "function" || typeof k.setAttribute != "function" || typeof k.namespaceURI != "string" || typeof k.insertBefore != "function" || typeof k.hasChildNodes != "function");
  }, Ts = function(k) {
    return typeof u == "function" && k instanceof u;
  };
  function _n(De, k, ue) {
    Bo(De, (Ie) => {
      Ie.call(t, k, ue, Jn);
    });
  }
  const Ks = function(k) {
    let ue = null;
    if (_n(U.beforeSanitizeElements, k, null), Sr(k))
      return rn(k), !0;
    const Ie = yt(k.nodeName);
    if (_n(U.uponSanitizeElement, k, {
      tagName: Ie,
      allowedTags: _e
    }), k.hasChildNodes() && !Ts(k.firstElementChild) && hn(/<[/\w]/g, k.innerHTML) && hn(/<[/\w]/g, k.textContent) || k.nodeType === tl.progressingInstruction || Qe && k.nodeType === tl.comment && hn(/<[/\w]/g, k.data))
      return rn(k), !0;
    if (!_e[Ie] || Z[Ie]) {
      if (!Z[Ie] && Bi(Ie) && (Re.tagNameCheck instanceof RegExp && hn(Re.tagNameCheck, Ie) || Re.tagNameCheck instanceof Function && Re.tagNameCheck(Ie)))
        return !1;
      if (tn && !Kn[Ie]) {
        const ct = g(k) || k.parentNode, Wt = R(k) || k.childNodes;
        if (Wt && ct) {
          const Bt = Wt.length;
          for (let an = Bt - 1; an >= 0; --an) {
            const Qn = b(Wt[an], !0);
            Qn.__removalCount = (k.__removalCount || 0) + 1, ct.insertBefore(Qn, v(k));
          }
        }
      }
      return rn(k), !0;
    }
    return k instanceof f && !Ni(k) || (Ie === "noscript" || Ie === "noembed" || Ie === "noframes") && hn(/<\/no(script|embed|frames)/i, k.innerHTML) ? (rn(k), !0) : (qe && k.nodeType === tl.text && (ue = k.textContent, Bo([G, te, ne], (ct) => {
      ue = Ji(ue, ct, " ");
    }), k.textContent !== ue && (Zi(t.removed, {
      element: k.cloneNode()
    }), k.textContent = ue)), _n(U.afterSanitizeElements, k, null), !1);
  }, Hl = function(k, ue, Ie) {
    if (ht && (ue === "id" || ue === "name") && (Ie in n || Ie in Kr))
      return !1;
    if (!(ae && !H[ue] && hn(oe, ue))) {
      if (!(X && hn(se, ue))) {
        if (!be[ue] || H[ue]) {
          if (
            // First condition does a very basic check if a) it's basically a valid custom element tagname AND
            // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck
            !(Bi(k) && (Re.tagNameCheck instanceof RegExp && hn(Re.tagNameCheck, k) || Re.tagNameCheck instanceof Function && Re.tagNameCheck(k)) && (Re.attributeNameCheck instanceof RegExp && hn(Re.attributeNameCheck, ue) || Re.attributeNameCheck instanceof Function && Re.attributeNameCheck(ue)) || // Alternative, second condition checks if it's an `is`-attribute, AND
            // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck
            ue === "is" && Re.allowCustomizedBuiltInElements && (Re.tagNameCheck instanceof RegExp && hn(Re.tagNameCheck, Ie) || Re.tagNameCheck instanceof Function && Re.tagNameCheck(Ie)))
          ) return !1;
        } else if (!Er[ue]) {
          if (!hn(Le, Ji(Ie, me, ""))) {
            if (!((ue === "src" || ue === "xlink:href" || ue === "href") && k !== "script" && BP(Ie, "data:") === 0 && On[k])) {
              if (!(ye && !hn(ie, Ji(Ie, me, "")))) {
                if (Ie)
                  return !1;
              }
            }
          }
        }
      }
    }
    return !0;
  }, Bi = function(k) {
    return k !== "annotation-xml" && bE(k, Ve);
  }, Vl = function(k) {
    _n(U.beforeSanitizeAttributes, k, null);
    const {
      attributes: ue
    } = k;
    if (!ue || Sr(k))
      return;
    const Ie = {
      attrName: "",
      attrValue: "",
      keepAttr: !0,
      allowedAttributes: be,
      forceKeepAttr: void 0
    };
    let ct = ue.length;
    for (; ct--; ) {
      const Wt = ue[ct], {
        name: Bt,
        namespaceURI: an,
        value: Qn
      } = Wt, Ss = yt(Bt);
      let Gt = Bt === "value" ? Qn : wP(Qn);
      if (Ie.attrName = Ss, Ie.attrValue = Gt, Ie.keepAttr = !0, Ie.forceKeepAttr = void 0, _n(U.uponSanitizeAttribute, k, Ie), Gt = Ie.attrValue, At && (Ss === "id" || Ss === "name") && (ma(Bt, k), Gt = xt + Gt), Qe && hn(/((--!?|])>)|<\/(style|title)/i, Gt)) {
        ma(Bt, k);
        continue;
      }
      if (Ie.forceKeepAttr || (ma(Bt, k), !Ie.keepAttr))
        continue;
      if (!Ce && hn(/\/>/i, Gt)) {
        ma(Bt, k);
        continue;
      }
      qe && Bo([G, te, ne], (Pi) => {
        Gt = Ji(Gt, Pi, " ");
      });
      const wi = yt(k.nodeName);
      if (Hl(wi, Ss, Gt)) {
        if (D && typeof S == "object" && typeof S.getAttributeType == "function" && !an)
          switch (S.getAttributeType(wi, Ss)) {
            case "TrustedHTML": {
              Gt = D.createHTML(Gt);
              break;
            }
            case "TrustedScriptURL": {
              Gt = D.createScriptURL(Gt);
              break;
            }
          }
        try {
          an ? k.setAttributeNS(an, Bt, Gt) : k.setAttribute(Bt, Gt), Sr(k) ? rn(k) : LE(t.removed);
        } catch {
        }
      }
    }
    _n(U.afterSanitizeAttributes, k, null);
  }, e_ = function De(k) {
    let ue = null;
    const Ie = js(k);
    for (_n(U.beforeSanitizeShadowDOM, k, null); ue = Ie.nextNode(); )
      _n(U.uponSanitizeShadowNode, ue, null), Ks(ue), Vl(ue), ue.content instanceof i && De(ue.content);
    _n(U.afterSanitizeShadowDOM, k, null);
  };
  return t.sanitize = function(De) {
    let k = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, ue = null, Ie = null, ct = null, Wt = null;
    if (pr = !De, pr && (De = "<!-->"), typeof De != "string" && !Ts(De))
      if (typeof De.toString == "function") {
        if (De = De.toString(), typeof De != "string")
          throw Qi("dirty is not a string, aborting");
      } else
        throw Qi("toString is not a function");
    if (!t.isSupported)
      return De;
    if (Fe || zr(k), t.removed = [], typeof De == "string" && (Ar = !1), Ar) {
      if (De.nodeName) {
        const Qn = yt(De.nodeName);
        if (!_e[Qn] || Z[Qn])
          throw Qi("root node is forbidden and cannot be sanitized in-place");
      }
    } else if (De instanceof u)
      ue = Gs("<!---->"), Ie = ue.ownerDocument.importNode(De, !0), Ie.nodeType === tl.element && Ie.nodeName === "BODY" || Ie.nodeName === "HTML" ? ue = Ie : ue.appendChild(Ie);
    else {
      if (!Ke && !qe && !$e && // eslint-disable-next-line unicorn/prefer-includes
      De.indexOf("<") === -1)
        return D && et ? D.createHTML(De) : De;
      if (ue = Gs(De), !ue)
        return Ke ? null : et ? w : "";
    }
    ue && it && rn(ue.firstChild);
    const Bt = js(Ar ? De : ue);
    for (; ct = Bt.nextNode(); )
      Ks(ct), Vl(ct), ct.content instanceof i && e_(ct.content);
    if (Ar)
      return De;
    if (Ke) {
      if (lt)
        for (Wt = M.call(ue.ownerDocument); ue.firstChild; )
          Wt.appendChild(ue.firstChild);
      else
        Wt = ue;
      return (be.shadowroot || be.shadowrootmode) && (Wt = q.call(r, Wt, !0)), Wt;
    }
    let an = $e ? ue.outerHTML : ue.innerHTML;
    return $e && _e["!doctype"] && ue.ownerDocument && ue.ownerDocument.doctype && ue.ownerDocument.doctype.name && hn(OT, ue.ownerDocument.doctype.name) && (an = "<!DOCTYPE " + ue.ownerDocument.doctype.name + `>
` + an), qe && Bo([G, te, ne], (Qn) => {
      an = Ji(an, Qn, " ");
    }), D && et ? D.createHTML(an) : an;
  }, t.setConfig = function() {
    let De = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    zr(De), Fe = !0;
  }, t.clearConfig = function() {
    Jn = null, Fe = !1;
  }, t.isValidAttribute = function(De, k, ue) {
    Jn || zr({});
    const Ie = yt(De), ct = yt(k);
    return Hl(Ie, ct, ue);
  }, t.addHook = function(De, k) {
    typeof k == "function" && Zi(U[De], k);
  }, t.removeHook = function(De) {
    return LE(U[De]);
  }, t.removeHooks = function(De) {
    U[De] = [];
  }, t.removeAllHooks = function() {
    U = OE();
  }, t;
}
var Mc = CT();
const afe = Mc, sfe = Mc.sanitize;
function ru(e) {
  return Mc.sanitize(zP(e), { ADD_ATTR: ["target"] });
}
function zP(e) {
  return Rn(e) ? Vt(e) : e;
}
function ife(e) {
  return !Te(e) || !e.length ? !1 : dT(e, ot);
}
function YP(e) {
  return !Te(e) || !e.length ? !1 : dT(e, Te);
}
function XP(e) {
  const t = Object.keys(e);
  return t.length === 0 ? "" : `<ul class="a_list_without_styles">${t.map((r) => `<li>${e[r]}</li>`).join("")}</ul>`;
}
function ZP({ array: e, keyChildren: t }) {
  return DT({ array: e, keyChildren: t, count: 0 });
}
function DT({ array: e, keyChildren: t, count: n = 0 }) {
  return Te(e) && z(e, (r) => {
    n++;
    const s = ce(r, t);
    n = DT({ array: s, keyChildren: t, count: n });
  }), n;
}
function Fc(e) {
  return new DOMParser().parseFromString(e, "text/html").body.textContent || "";
}
const Kt = {
  beforeMount(e, t) {
    e.innerHTML = le(t.value) || t.value === "" ? "" : ru(t.value);
  },
  updated(e, t) {
    e.innerHTML = le(t.value) || t.value === "" ? "" : ru(t.value);
  }
}, JP = {
  name: "AAccordionItem",
  props: {
    isParentOpen: {
      type: Boolean,
      required: !0
    },
    item: {
      type: Object,
      required: !0
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    parentsIds: {
      type: Array,
      required: !1,
      default: () => []
    },
    parentIndexes: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  inject: [
    "classBody",
    "classHeader",
    "id",
    "withGap"
  ],
  setup(e) {
    const {
      closeItemIfOpen: t,
      currentId: n,
      isOpen: r,
      parentIndexesForChild: s,
      parentsIdsForChild: i,
      toggleLocal: o
    } = RP(e), {
      children: u,
      hasChildren: f
    } = vP(e), {
      classBodyLocal: A,
      classButtonLocal: E,
      classHeaderLocal: p
    } = yP(e), {
      isBodyVisible: T,
      isOpenFirst: S,
      isRender: L
    } = OP(e), {
      buttonAttributes: b,
      buttonTag: I,
      contentLocal: v,
      idForCollapse: R,
      labelLocal: g
    } = IP(e, {
      classButtonLocal: E,
      isOpen: r,
      toggleLocal: o,
      currentId: n
    });
    return rt(r, (D) => {
      D && !S.value && (S.value = !0);
    }, {
      immediate: !0
    }), Ot(() => {
      t();
    }), {
      buttonAttributes: b,
      buttonTag: I,
      children: u,
      classBodyLocal: A,
      classButtonLocal: E,
      classHeaderLocal: p,
      contentLocal: v,
      currentId: n,
      hasChildren: f,
      idForCollapse: R,
      isBodyVisible: T,
      isOpen: r,
      isRender: L,
      labelLocal: g,
      parentIndexesForChild: s,
      parentsIdsForChild: i
    };
  },
  render() {
    let e = [];
    return this.isBodyVisible && (e = [
      this.item.slotContent && this.$slots[this.item.slotContent] ? this.$slots[this.item.slotContent]({
        item: this.item,
        itemIndex: this.itemIndex,
        parentsIds: this.parentsIds,
        parentIndexes: this.parentIndexes,
        id: this.id,
        currentId: this.currentId
      }) : this.$slots.accordionContent ? this.$slots.accordionContent({
        item: this.item,
        itemIndex: this.itemIndex,
        parentsIds: this.parentsIds,
        parentIndexes: this.parentIndexes,
        id: this.id,
        currentId: this.currentId
      }) : this.contentLocal && Dt(c("div"), [
        [Kt, this.contentLocal]
      ]),
      this.hasChildren && c("div", {
        class: ["a_accordion"]
      }, [
        this.children.map((t, n) => c(kr("AAccordionItem"), {
          key: t[Ge],
          item: t,
          itemIndex: n,
          isParentOpen: this.isOpen,
          parentsIds: this.parentsIdsForChild,
          parentIndexes: this.parentIndexesForChild,
          keyId: this.keyId
        }, this.$slots))
      ])
    ]), this.isRender && c("div", {
      class: [
        "a_accordion__item",
        {
          a_accordion__item_with_gap: this.withGap
        }
      ]
    }, [
      c("div", {
        class: ["a_accordion__header", this.classHeader, this.classHeaderLocal]
      }, [
        c(this.buttonTag, this.buttonAttributes, [
          this.item.slotButton && this.$slots[this.item.slotButton] ? this.$slots[this.item.slotButton]({
            item: this.item,
            itemIndex: this.itemIndex,
            parentsIds: this.parentsIds,
            parentIndexes: this.parentIndexes,
            id: this.id,
            currentId: this.currentId
          }) : this.$slots.accordionButton && this.$slots.accordionButton({
            item: this.item,
            itemIndex: this.itemIndex,
            parentsIds: this.parentsIds,
            parentIndexes: this.parentIndexes,
            id: this.id,
            currentId: this.currentId
          }),
          this.labelLocal && Dt(c("span"), [
            [Kt, this.labelLocal]
          ])
        ])
      ]),
      c("div", {
        id: this.idForCollapse,
        class: ["a_accordion__collapse_box", {
          a_accordion__collapse_box_show: this.isOpen
        }]
      }, [
        c("div", {
          class: ["a_accordion__body", this.classBody, this.classBodyLocal]
        }, e)
      ])
    ]);
  }
};
function QP(e) {
  const t = d(e, "data"), n = d(e, "keyId"), r = d(e, "keyChildren"), s = ({ items: o, parentIds: u = "" }) => {
    z(o, (f, A) => {
      const E = ce(f, n.value);
      let p;
      le(E) ? p = `${u}${A}` : p = `${u}${E}`, f[Ge] = p;
      const T = f[r.value];
      T && T.length && s({ items: T, parentIds: `${p}_` });
    });
  };
  return {
    dataWithIds: _(() => {
      const o = he(t.value);
      return s({ items: o }), o;
    })
  };
}
function ex(e, {
  idsForOpen: t = _(() => []),
  dataWithIds: n = _(() => [])
}) {
  const r = d(e, "indexesForOpen"), s = d(e, "keyChildren"), i = ({ indexForOpen: f }) => {
    let A = `${f}`.replaceAll(".", `.${s.value}.`);
    return A += `.${Ge}`, A;
  }, o = ({ isInit: f } = {}) => {
    if (f && !r.value.length)
      return;
    const A = [];
    s.value ? z(r.value, (E) => {
      const p = ce(n.value, i({ indexForOpen: E }));
      le(p) || A.push(p);
    }) : z(r.value, (E) => {
      const p = ce(n.value, `${E}.${Ge}`);
      le(p) || A.push(p);
    }), t.value = A;
  }, u = () => {
    o({ isInit: !0 });
  };
  return rt(r, () => {
    o();
  }), {
    initIdsFromIndexesForOpen: u
  };
}
function tx(e, { emit: t }) {
  const n = d(e, "alwaysOpen"), r = d(e, "disabled"), s = d(e, "idsForOpenDefault"), i = d(e, "prevent"), o = d(e, "stop"), u = B(void 0), f = () => {
    u.value = s.value;
  }, A = ({ currentId: T, isOpen: S }) => {
    if (S) {
      const L = T.split("__")[0];
      u.value = Lt(u.value, (b) => !Pc(b, L));
    } else
      u.value.push(T);
  }, E = ({ currentId: T, parentsIds: S, isOpen: L }) => {
    L ? u.value = S : u.value = [...S, T];
  }, p = ({ item: T, parentsIds: S, isOpen: L, $event: b }) => {
    if (r.value)
      return;
    const I = he(S), v = T[Ge];
    n.value ? A({ item: T, currentId: v, isOpen: L }) : E({ parentsIds: I, currentId: v, isOpen: L }), t("toggle", { idsForOpen: u.value, currentId: v, parentsIds: I, isOpen: L, $event: b, item: T }), o.value && b && b.stopPropagation(), i.value && b && b.preventDefault();
  };
  return rt(s, (T) => {
    Dc(T, u.value) || (u.value = he(T));
  }), {
    idsForOpen: u,
    initIdsForOpen: f,
    toggleLocal: p
  };
}
const lfe = {
  name: "AAccordion",
  provide() {
    return {
      classBody: _(() => this.classBody),
      classButton: _(() => this.classButton),
      classHeader: _(() => this.classHeader),
      disabled: _(() => this.disabled),
      id: _(() => this.id),
      idsForOpen: _(() => this.idsForOpen),
      isCaret: _(() => this.isCaret),
      keyChildren: _(() => this.keyChildren),
      keyClassBody: _(() => this.keyClassBody),
      keyClassButton: _(() => this.keyClassButton),
      keyClassHeader: _(() => this.keyClassHeader),
      keyContent: _(() => this.keyContent),
      keyIsRender: _(() => this.keyIsRender),
      keyIsRenderBodyByFirstOpen: _(() => this.keyIsRenderBodyByFirstOpen),
      keyLabel: _(() => this.keyLabel),
      readonly: _(() => this.readonly),
      withGap: _(() => this.withGap),
      toggle: this.toggleLocal
    };
  },
  props: {
    alwaysOpen: {
      type: Boolean,
      required: !1
    },
    classBody: {
      type: [String, Object],
      required: !1,
      default: ""
    },
    classButton: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classHeader: {
      type: [String, Object],
      required: !1,
      default: ""
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: st("accordion_")
    },
    idsForOpenDefault: {
      type: Array,
      required: !1,
      default: () => []
    },
    isCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    data: {
      type: Array,
      required: !0
    },
    keyClassBody: {
      type: String,
      required: !1,
      default: "classBody"
    },
    keyClassButton: {
      type: String,
      required: !1,
      default: "classButton"
    },
    keyClassHeader: {
      type: String,
      required: !1,
      default: "classHeader"
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyIsRender: {
      type: String,
      required: !1,
      default: "isRender"
    },
    keyIsRenderBodyByFirstOpen: {
      type: String,
      required: !1,
      default: "isRenderBodyByFirstOpen"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyChildren: {
      type: String,
      required: !1,
      default: "children"
    },
    prevent: {
      type: Boolean,
      required: !1
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    stop: {
      type: Boolean,
      required: !1
    },
    withGap: {
      type: Boolean,
      required: !1
    },
    indexesForOpen: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      idsForOpen: n,
      initIdsForOpen: r,
      toggleLocal: s
    } = tx(e, t), {
      dataWithIds: i
    } = QP(e), {
      initIdsFromIndexesForOpen: o
    } = ex(e, {
      idsForOpen: n,
      dataWithIds: i
    });
    return r(), o(), {
      dataWithIds: i,
      idsForOpen: n,
      toggleLocal: s
    };
  },
  render() {
    return c("div", {
      class: ["a_accordion"]
    }, [
      this.dataWithIds.map((e, t) => c(JP, {
        key: e[Ge],
        item: e,
        itemIndex: t,
        isParentOpen: !0,
        keyId: this.keyId
      }, this.$slots))
    ]);
  }
};
function nx(e) {
  const t = d(e, "ariaAtomic"), n = d(e, "role"), r = _(() => {
    if (t.value)
      return !0;
  }), s = _(() => {
    if (n.value)
      return n.value;
  });
  return {
    ariaAtomicLocal: r,
    roleLocal: s
  };
}
function rx(e) {
  const t = d(e, "type");
  return {
    alertClassLocal: _(() => `a_alert a_alert_${t.value}`)
  };
}
function ax(e, { emit: t }) {
  const n = d(e, "closable"), r = d(e, "removeAlertOnClose"), s = B(!1);
  return {
    close: () => {
      n.value && (r.value && (s.value = !0), t("close"));
    },
    isHidden: s
  };
}
const sx = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0m-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>
</svg>`, Ru = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4m.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2"/>
</svg>`, ix = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle-fill" viewBox="0 0 16 16">
  <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2"/>
</svg>`, Ou = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293z"/>
</svg>`, $t = B({
  propsDefault: {
    alertClass: void 0,
    alertContentClass: void 0,
    btnCloseAttributes: {},
    closable: !1,
    extra: void 0,
    html: void 0,
    icon: void 0,
    iconClass: void 0,
    isVisible: !1,
    removeAlertOnClose: !1,
    safeHtml: void 0,
    showIcon: !1,
    text: void 0,
    textClose: "_ALERT_CLOSE_",
    type: "danger"
  },
  icons: {
    success: sx,
    danger: Ou,
    info: ix,
    warning: Ru
  }
}), ofe = {
  install: (e, {
    propsDefault: t = {},
    icons: n = {}
  } = {}) => {
    $t.value.propsDefault = {
      ...$t.value.propsDefault,
      ...t
    }, $t.value.icons = {
      ...$t.value.icons,
      ...n
    };
  }
};
function lx(e) {
  const t = d(e, "icon"), n = d(e, "showIcon"), r = d(e, "type");
  return {
    iconLocal: _(() => {
      if (n.value)
        return t.value ? t.value : $t.value.icons[r.value];
    })
  };
}
const qc = {
  name: "AAlert",
  props: {
    alertClass: {
      type: [String, Object],
      required: !1,
      default: () => $t.value.propsDefault.alertClass
    },
    alertContentClass: {
      type: [String, Object],
      required: !1,
      default: () => $t.value.propsDefault.alertContentClass
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaAtomic: {
      type: Boolean,
      required: !1,
      default: !0
    },
    btnCloseAttributes: {
      type: Object,
      required: !1,
      default: () => $t.value.propsDefault.btnCloseAttributes
    },
    closable: {
      type: Boolean,
      required: !1,
      default: () => $t.value.propsDefault.closable
    },
    extra: {
      type: Object,
      required: !1,
      default: () => $t.value.propsDefault.extra
    },
    html: {
      type: String,
      required: !1,
      default: () => $t.value.propsDefault.html
    },
    icon: {
      type: String,
      required: !1,
      default: () => $t.value.propsDefault.icon
    },
    iconClass: {
      type: String,
      required: !1,
      default: () => $t.value.propsDefault.iconClass
    },
    isVisible: {
      type: Boolean,
      required: !1,
      default: () => $t.value.propsDefault.isVisible
    },
    removeAlertOnClose: {
      type: Boolean,
      required: !1,
      default: () => $t.value.propsDefault.removeAlertOnClose
    },
    role: {
      type: String,
      required: !1,
      default: "alert"
    },
    safeHtml: {
      type: String,
      required: !1,
      default: () => $t.value.propsDefault.safeHtml
    },
    showIcon: {
      type: Boolean,
      required: !1,
      default: () => $t.value.propsDefault.showIcon
    },
    text: {
      type: String,
      required: !1,
      default: () => $t.value.propsDefault.text
    },
    textClose: {
      type: String,
      required: !1,
      default: () => $t.value.propsDefault.textClose
    },
    type: {
      type: String,
      required: !1,
      default: () => $t.value.propsDefault.type
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      alertClassLocal: r
    } = rx(e), {
      close: s,
      isHidden: i
    } = ax(e, t), {
      iconLocal: o
    } = lx(e), {
      ariaAtomicLocal: u,
      roleLocal: f
    } = nx(e);
    return n({
      close: s,
      isHidden: i
    }), {
      alertClassLocal: r,
      ariaAtomicLocal: u,
      close: s,
      iconLocal: o,
      isHidden: i,
      roleLocal: f
    };
  },
  render() {
    return this.isHidden ? null : c("div", {
      class: [
        "a_alert__parent",
        {
          a_alert__parent_closable: this.closable
        }
      ]
    }, [
      c("div", {
        role: this.roleLocal,
        ariaAtomic: this.ariaAtomicLocal
      }, [
        this.isVisible && c("div", {
          class: [this.alertClass, this.alertClassLocal]
        }, [
          this.iconLocal && c(_t, {
            icon: this.iconLocal,
            class: [
              "a_alert__icon",
              this.iconClass
            ]
          }),
          c("div", {
            class: [
              "a_alert__content",
              this.alertContentClass
            ]
          }, [
            (this.html || this.text || this.safeHtml) && c(Ee, {
              alwaysTranslate: this.alwaysTranslate,
              extra: this.extra,
              html: this.html,
              safeHtml: this.safeHtml,
              text: this.text
            }),
            this.$slots.default && this.$slots.default()
          ])
        ])
      ]),
      this.isVisible && this.closable && c(pt, {
        alwaysTranslate: this.alwaysTranslate,
        type: "button",
        class: "a_btn_close",
        textScreenReader: this.textClose,
        ...this.btnCloseAttributes,
        onClick: this.close
      })
    ]);
  }
};
function NT(e, { emit: t }) {
  return {
    clickEmit: (r) => {
      t("click", r);
    }
  };
}
const Gn = [
  "auto",
  "auto-start",
  "auto-end",
  "top",
  "top-start",
  "top-end",
  "right",
  "right-start",
  "right-end",
  "bottom",
  "bottom-start",
  "bottom-end",
  "left",
  "left-start",
  "left-end"
], pt = {
  name: "AButton",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaDisabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_btn_")
    },
    isSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    modelSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tabindex: {
      type: [Number, String],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Gn.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => ot(e) ? e === "auto" : ha(e)
    },
    type: {
      type: String,
      required: !1,
      default: "button",
      validator: (e) => ["button", "submit", "reset"].indexOf(e) !== -1
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      clickEmit: n
    } = NT(e, t);
    return {
      clickEmit: n
    };
  },
  render() {
    return c(Ae, {
      ...this.$attrs,
      ...this.$props,
      onClick: this.clickEmit
    }, this.$slots);
  }
};
var Po = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function ox(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var xo = { exports: {} }, CE;
function ux() {
  if (CE) return xo.exports;
  CE = 1;
  function e() {
  }
  return e.prototype = {
    on: function(t, n, r) {
      var s = this.e || (this.e = {});
      return (s[t] || (s[t] = [])).push({
        fn: n,
        ctx: r
      }), this;
    },
    once: function(t, n, r) {
      var s = this;
      function i() {
        s.off(t, i), n.apply(r, arguments);
      }
      return i._ = n, this.on(t, i, r);
    },
    emit: function(t) {
      var n = [].slice.call(arguments, 1), r = ((this.e || (this.e = {}))[t] || []).slice(), s = 0, i = r.length;
      for (s; s < i; s++)
        r[s].fn.apply(r[s].ctx, n);
      return this;
    },
    off: function(t, n) {
      var r = this.e || (this.e = {}), s = r[t], i = [];
      if (s && n)
        for (var o = 0, u = s.length; o < u; o++)
          s[o].fn !== n && s[o].fn._ !== n && i.push(s[o]);
      return i.length ? r[t] = i : delete r[t], this;
    }
  }, xo.exports = e, xo.exports.TinyEmitter = e, xo.exports;
}
var Ld, DE;
function _x() {
  if (DE) return Ld;
  DE = 1;
  var e = ux();
  return Ld = new e(), Ld;
}
var dx = _x();
const Mo = /* @__PURE__ */ ox(dx), Rt = {
  $on: (...e) => Mo.on(...e),
  $once: (...e) => Mo.once(...e),
  $off: (...e) => Mo.off(...e),
  $emit: (...e) => Mo.emit(...e)
}, au = B(void 0);
function Ho(e) {
  au.value = e, Rt.$emit("updateViewOnResize", e), e ? document.body.classList.add("a_mobile") : document.body.classList.remove("a_mobile");
}
function Tn() {
  return {
    isMobileWidth: au,
    setIsMobileWidth: Ho
  };
}
const Cu = B("de");
let Pa = {};
const BT = B(/* @__PURE__ */ new Date()), $c = B(/* @__PURE__ */ new Date());
let wT = {};
const Ai = B(!0), cx = _(() => [
  Cu.value,
  BT.value,
  Ai.value
]);
rt(cx, () => {
  Ex();
}, {
  immediate: !0
});
function Oi() {
  return {
    isTranslate: Ai,
    language: Cu,
    setI18n: PT,
    setLanguage: xT,
    toggleTranslate: Ax,
    translationChanges: $c,
    updateI18n: fx,
    updateI18nForLanguage: hx,
    updateTranslation: MT
  };
}
function PT(e = {}) {
  Pa = e;
}
function fx(e = {}) {
  Pa = {
    ...Pa,
    ...e
  };
}
function hx({ i18n: e = {}, language: t }) {
  Pa[t] = Pa[t] || {}, Pa[t] = {
    ...Pa[t] || {},
    ...e
  };
}
function xT(e = "") {
  Cu.value = e;
}
function Ax(e) {
  Be(e) ? Ai.value = !Ai.value : Ai.value = !!e;
}
function Ex() {
  wT = Pa[Cu.value], $c.value = /* @__PURE__ */ new Date();
}
function MT() {
  BT.value = /* @__PURE__ */ new Date();
}
const zd = B({
  replaceText: void 0
}), px = (e = {}) => {
  Ne(e == null ? void 0 : e.replaceText) && (zd.value.replaceText = e == null ? void 0 : e.replaceText);
}, ufe = {
  install: (e, t, n, r = {}) => {
    PT(t), xT(n), MT(), px(r);
  }
};
function Vs() {
  return {
    getTranslatedText: Pt,
    getTranslationAttributes: $T,
    isPlaceholderTranslate: wa,
    replaceText: FT,
    spliceString: qT
  };
}
function wa(e = "") {
  return !(!ot(e) || e[0] !== "_" || e[e.length - 1] !== "_");
}
function Pt({ placeholder: e, translationObj: t = wT, extra: n, alwaysTranslate: r = !1 }) {
  if (!t || !$c.value)
    return e;
  let s;
  return !r && !Ai.value ? s = e : s = le(t[e]) ? e : t[e], n ? FT({
    text: s,
    object: n
  }) : s;
}
function FT({ text: e = "", object: t }) {
  var s, i;
  if (Ne((s = zd.value) == null ? void 0 : s.replaceText))
    return (i = zd.value) == null ? void 0 : i.replaceText({ text: e, object: t });
  if (!at(t))
    return e;
  let n = e, r = 0;
  for (; ; ) {
    const o = n.indexOf("{{", r), u = n.indexOf("}}", r);
    if (o === -1 || u === -1)
      break;
    const f = n.slice(o + 2, u).trim(), A = ce(t, f);
    n = qT({
      text: n,
      replaceText: A,
      firstIndex: o,
      lastindex: u + 2
    }), r = o + `${A}`.length;
  }
  return n;
}
function qT({
  text: e = "",
  replaceText: t = "",
  firstIndex: n,
  lastindex: r
}) {
  return `${e.slice(0, n)}${t}${e.slice(r, e.length)}`;
}
function $T({ attr: e = "", value: t = "", translation: n = "", isTranslate: r = !0 }) {
  const s = {};
  return le(n) || (s[e] = n), r && (s[`data-translate-${e}`] = t), s;
}
function Uc(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "ariaLabel"), r = d(e, "extra"), {
    translationChanges: s
  } = Oi(), {
    isPlaceholderTranslate: i,
    getTranslatedText: o,
    getTranslationAttributes: u
  } = Vs(), {
    isMobileWidth: f
  } = Tn(), A = _(() => at(n.value) ? f.value ? n.value.mobile : n.value.desktop : n.value), E = _(() => !Be(A.value)), p = _(() => !(!E.value || !i(A.value))), T = _(() => {
    if (s.value)
      return p.value ? o({
        placeholder: A.value,
        extra: r.value,
        alwaysTranslate: t.value
      }) : A.value;
  });
  return {
    ariaLabelAttributes: _(() => E.value ? u({
      attr: "aria-label",
      translation: T.value,
      value: A.value,
      isTranslate: p.value
    }) : {}),
    hasAriaLabel: E
  };
}
const Tx = {
  button: !0,
  submit: !0,
  reset: !0
};
function Sx(e, {
  isRouterLink: t = _(() => !1),
  tagLocal: n = _(() => "")
}) {
  const r = d(e, "disabled"), s = d(e, "href"), i = d(e, "target"), o = d(e, "to"), u = d(e, "type"), f = _(() => {
    if (n.value === "button" && Tx[u.value])
      return u.value;
  });
  return {
    toHrefAttributes: _(() => t.value ? {
      target: i.value,
      to: o.value
    } : r.value ? {} : {
      href: s.value,
      target: i.value
    }),
    typeAttribut: f
  };
}
function mx(e, { emit: t }) {
  const n = d(e, "prevent"), r = d(e, "stop"), s = d(e, "disabled"), i = d(e, "ariaDisabled");
  return {
    onClick: (u) => {
      n.value && u.preventDefault(), r.value && u.stopPropagation(), !(s.value || i.value) && t("click", {
        props: e,
        $event: u
      });
    }
  };
}
function Lx(e, {
  isTitleVisible: t = B(!1)
}) {
  const n = d(e, "id"), r = d(e, "minWidth"), s = d(e, "width"), i = d(e, "maxWidth"), o = d(e, "withoutAriaDescribedby"), u = _(() => {
    if (!o.value && t.value)
      return `${n.value}_title`;
  }), f = _(() => {
    const A = {};
    return le(r.value) || (A["min-width"] = `${r.value}px`), le(s.value) || (A.width = `${s.value}px`), le(i.value) || (A["max-width"] = `${i.value}px`), A;
  });
  return {
    ariaDescribedby: u,
    tooltipStyles: f
  };
}
const bx = ["top", "right", "bottom", "left"], NE = ["start", "end"], BE = /* @__PURE__ */ bx.reduce((e, t) => e.concat(t, t + "-" + NE[0], t + "-" + NE[1]), []), bi = Math.min, ws = Math.max, su = Math.round, Fo = Math.floor, qa = (e) => ({
  x: e,
  y: e
}), Ix = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, vx = {
  start: "end",
  end: "start"
};
function Yd(e, t, n) {
  return ws(e, bi(t, n));
}
function $a(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function Hr(e) {
  return e.split("-")[0];
}
function Ur(e) {
  return e.split("-")[1];
}
function kc(e) {
  return e === "x" ? "y" : "x";
}
function Hc(e) {
  return e === "y" ? "height" : "width";
}
function Cl(e) {
  return ["top", "bottom"].includes(Hr(e)) ? "y" : "x";
}
function Vc(e) {
  return kc(Cl(e));
}
function UT(e, t, n) {
  n === void 0 && (n = !1);
  const r = Ur(e), s = Vc(e), i = Hc(s);
  let o = s === "x" ? r === (n ? "end" : "start") ? "right" : "left" : r === "start" ? "bottom" : "top";
  return t.reference[i] > t.floating[i] && (o = lu(o)), [o, lu(o)];
}
function yx(e) {
  const t = lu(e);
  return [iu(e), t, iu(t)];
}
function iu(e) {
  return e.replace(/start|end/g, (t) => vx[t]);
}
function gx(e, t, n) {
  const r = ["left", "right"], s = ["right", "left"], i = ["top", "bottom"], o = ["bottom", "top"];
  switch (e) {
    case "top":
    case "bottom":
      return n ? t ? s : r : t ? r : s;
    case "left":
    case "right":
      return t ? i : o;
    default:
      return [];
  }
}
function Rx(e, t, n, r) {
  const s = Ur(e);
  let i = gx(Hr(e), n === "start", r);
  return s && (i = i.map((o) => o + "-" + s), t && (i = i.concat(i.map(iu)))), i;
}
function lu(e) {
  return e.replace(/left|right|bottom|top/g, (t) => Ix[t]);
}
function Ox(e) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...e
  };
}
function kT(e) {
  return typeof e != "number" ? Ox(e) : {
    top: e,
    right: e,
    bottom: e,
    left: e
  };
}
function ou(e) {
  const {
    x: t,
    y: n,
    width: r,
    height: s
  } = e;
  return {
    width: r,
    height: s,
    top: n,
    left: t,
    right: t + r,
    bottom: n + s,
    x: t,
    y: n
  };
}
function wE(e, t, n) {
  let {
    reference: r,
    floating: s
  } = e;
  const i = Cl(t), o = Vc(t), u = Hc(o), f = Hr(t), A = i === "y", E = r.x + r.width / 2 - s.width / 2, p = r.y + r.height / 2 - s.height / 2, T = r[u] / 2 - s[u] / 2;
  let S;
  switch (f) {
    case "top":
      S = {
        x: E,
        y: r.y - s.height
      };
      break;
    case "bottom":
      S = {
        x: E,
        y: r.y + r.height
      };
      break;
    case "right":
      S = {
        x: r.x + r.width,
        y: p
      };
      break;
    case "left":
      S = {
        x: r.x - s.width,
        y: p
      };
      break;
    default:
      S = {
        x: r.x,
        y: r.y
      };
  }
  switch (Ur(t)) {
    case "start":
      S[o] -= T * (n && A ? -1 : 1);
      break;
    case "end":
      S[o] += T * (n && A ? -1 : 1);
      break;
  }
  return S;
}
const Cx = async (e, t, n) => {
  const {
    placement: r = "bottom",
    strategy: s = "absolute",
    middleware: i = [],
    platform: o
  } = n, u = i.filter(Boolean), f = await (o.isRTL == null ? void 0 : o.isRTL(t));
  let A = await o.getElementRects({
    reference: e,
    floating: t,
    strategy: s
  }), {
    x: E,
    y: p
  } = wE(A, r, f), T = r, S = {}, L = 0;
  for (let b = 0; b < u.length; b++) {
    const {
      name: I,
      fn: v
    } = u[b], {
      x: R,
      y: g,
      data: D,
      reset: w
    } = await v({
      x: E,
      y: p,
      initialPlacement: r,
      placement: T,
      strategy: s,
      middlewareData: S,
      rects: A,
      platform: o,
      elements: {
        reference: e,
        floating: t
      }
    });
    E = R ?? E, p = g ?? p, S = {
      ...S,
      [I]: {
        ...S[I],
        ...D
      }
    }, w && L <= 50 && (L++, typeof w == "object" && (w.placement && (T = w.placement), w.rects && (A = w.rects === !0 ? await o.getElementRects({
      reference: e,
      floating: t,
      strategy: s
    }) : w.rects), {
      x: E,
      y: p
    } = wE(A, T, f)), b = -1);
  }
  return {
    x: E,
    y: p,
    placement: T,
    strategy: s,
    middlewareData: S
  };
};
async function Wc(e, t) {
  var n;
  t === void 0 && (t = {});
  const {
    x: r,
    y: s,
    platform: i,
    rects: o,
    elements: u,
    strategy: f
  } = e, {
    boundary: A = "clippingAncestors",
    rootBoundary: E = "viewport",
    elementContext: p = "floating",
    altBoundary: T = !1,
    padding: S = 0
  } = $a(t, e), L = kT(S), I = u[T ? p === "floating" ? "reference" : "floating" : p], v = ou(await i.getClippingRect({
    element: (n = await (i.isElement == null ? void 0 : i.isElement(I))) == null || n ? I : I.contextElement || await (i.getDocumentElement == null ? void 0 : i.getDocumentElement(u.floating)),
    boundary: A,
    rootBoundary: E,
    strategy: f
  })), R = p === "floating" ? {
    ...o.floating,
    x: r,
    y: s
  } : o.reference, g = await (i.getOffsetParent == null ? void 0 : i.getOffsetParent(u.floating)), D = await (i.isElement == null ? void 0 : i.isElement(g)) ? await (i.getScale == null ? void 0 : i.getScale(g)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, w = ou(i.convertOffsetParentRelativeRectToViewportRelativeRect ? await i.convertOffsetParentRelativeRectToViewportRelativeRect({
    elements: u,
    rect: R,
    offsetParent: g,
    strategy: f
  }) : R);
  return {
    top: (v.top - w.top + L.top) / D.y,
    bottom: (w.bottom - v.bottom + L.bottom) / D.y,
    left: (v.left - w.left + L.left) / D.x,
    right: (w.right - v.right + L.right) / D.x
  };
}
const Dx = (e) => ({
  name: "arrow",
  options: e,
  async fn(t) {
    const {
      x: n,
      y: r,
      placement: s,
      rects: i,
      platform: o,
      elements: u,
      middlewareData: f
    } = t, {
      element: A,
      padding: E = 0
    } = $a(e, t) || {};
    if (A == null)
      return {};
    const p = kT(E), T = {
      x: n,
      y: r
    }, S = Vc(s), L = Hc(S), b = await o.getDimensions(A), I = S === "y", v = I ? "top" : "left", R = I ? "bottom" : "right", g = I ? "clientHeight" : "clientWidth", D = i.reference[L] + i.reference[S] - T[S] - i.floating[L], w = T[S] - i.reference[S], F = await (o.getOffsetParent == null ? void 0 : o.getOffsetParent(A));
    let P = F ? F[g] : 0;
    (!P || !await (o.isElement == null ? void 0 : o.isElement(F))) && (P = u.floating[g] || i.floating[L]);
    const M = D / 2 - w / 2, O = P / 2 - b[L] / 2 - 1, q = bi(p[v], O), U = bi(p[R], O), G = q, te = P - b[L] - U, ne = P / 2 - b[L] / 2 + M, oe = Yd(G, ne, te), se = !f.arrow && Ur(s) != null && ne !== oe && i.reference[L] / 2 - (ne < G ? q : U) - b[L] / 2 < 0, ie = se ? ne < G ? ne - G : ne - te : 0;
    return {
      [S]: T[S] + ie,
      data: {
        [S]: oe,
        centerOffset: ne - oe - ie,
        ...se && {
          alignmentOffset: ie
        }
      },
      reset: se
    };
  }
});
function Nx(e, t, n) {
  return (e ? [...n.filter((s) => Ur(s) === e), ...n.filter((s) => Ur(s) !== e)] : n.filter((s) => Hr(s) === s)).filter((s) => e ? Ur(s) === e || (t ? iu(s) !== s : !1) : !0);
}
const Bx = function(e) {
  return e === void 0 && (e = {}), {
    name: "autoPlacement",
    options: e,
    async fn(t) {
      var n, r, s;
      const {
        rects: i,
        middlewareData: o,
        placement: u,
        platform: f,
        elements: A
      } = t, {
        crossAxis: E = !1,
        alignment: p,
        allowedPlacements: T = BE,
        autoAlignment: S = !0,
        ...L
      } = $a(e, t), b = p !== void 0 || T === BE ? Nx(p || null, S, T) : T, I = await Wc(t, L), v = ((n = o.autoPlacement) == null ? void 0 : n.index) || 0, R = b[v];
      if (R == null)
        return {};
      const g = UT(R, i, await (f.isRTL == null ? void 0 : f.isRTL(A.floating)));
      if (u !== R)
        return {
          reset: {
            placement: b[0]
          }
        };
      const D = [I[Hr(R)], I[g[0]], I[g[1]]], w = [...((r = o.autoPlacement) == null ? void 0 : r.overflows) || [], {
        placement: R,
        overflows: D
      }], F = b[v + 1];
      if (F)
        return {
          data: {
            index: v + 1,
            overflows: w
          },
          reset: {
            placement: F
          }
        };
      const P = w.map((q) => {
        const U = Ur(q.placement);
        return [q.placement, U && E ? (
          // Check along the mainAxis and main crossAxis side.
          q.overflows.slice(0, 2).reduce((G, te) => G + te, 0)
        ) : (
          // Check only the mainAxis.
          q.overflows[0]
        ), q.overflows];
      }).sort((q, U) => q[1] - U[1]), O = ((s = P.filter((q) => q[2].slice(
        0,
        // Aligned placements should not check their opposite crossAxis
        // side.
        Ur(q[0]) ? 2 : 3
      ).every((U) => U <= 0))[0]) == null ? void 0 : s[0]) || P[0][0];
      return O !== u ? {
        data: {
          index: v + 1,
          overflows: w
        },
        reset: {
          placement: O
        }
      } : {};
    }
  };
}, wx = function(e) {
  return e === void 0 && (e = {}), {
    name: "flip",
    options: e,
    async fn(t) {
      var n, r;
      const {
        placement: s,
        middlewareData: i,
        rects: o,
        initialPlacement: u,
        platform: f,
        elements: A
      } = t, {
        mainAxis: E = !0,
        crossAxis: p = !0,
        fallbackPlacements: T,
        fallbackStrategy: S = "bestFit",
        fallbackAxisSideDirection: L = "none",
        flipAlignment: b = !0,
        ...I
      } = $a(e, t);
      if ((n = i.arrow) != null && n.alignmentOffset)
        return {};
      const v = Hr(s), R = Hr(u) === u, g = await (f.isRTL == null ? void 0 : f.isRTL(A.floating)), D = T || (R || !b ? [lu(u)] : yx(u));
      !T && L !== "none" && D.push(...Rx(u, b, L, g));
      const w = [u, ...D], F = await Wc(t, I), P = [];
      let M = ((r = i.flip) == null ? void 0 : r.overflows) || [];
      if (E && P.push(F[v]), p) {
        const G = UT(s, o, g);
        P.push(F[G[0]], F[G[1]]);
      }
      if (M = [...M, {
        placement: s,
        overflows: P
      }], !P.every((G) => G <= 0)) {
        var O, q;
        const G = (((O = i.flip) == null ? void 0 : O.index) || 0) + 1, te = w[G];
        if (te)
          return {
            data: {
              index: G,
              overflows: M
            },
            reset: {
              placement: te
            }
          };
        let ne = (q = M.filter((oe) => oe.overflows[0] <= 0).sort((oe, se) => oe.overflows[1] - se.overflows[1])[0]) == null ? void 0 : q.placement;
        if (!ne)
          switch (S) {
            case "bestFit": {
              var U;
              const oe = (U = M.map((se) => [se.placement, se.overflows.filter((ie) => ie > 0).reduce((ie, me) => ie + me, 0)]).sort((se, ie) => se[1] - ie[1])[0]) == null ? void 0 : U[0];
              oe && (ne = oe);
              break;
            }
            case "initialPlacement":
              ne = u;
              break;
          }
        if (s !== ne)
          return {
            reset: {
              placement: ne
            }
          };
      }
      return {};
    }
  };
};
async function Px(e, t) {
  const {
    placement: n,
    platform: r,
    elements: s
  } = e, i = await (r.isRTL == null ? void 0 : r.isRTL(s.floating)), o = Hr(n), u = Ur(n), f = Cl(n) === "y", A = ["left", "top"].includes(o) ? -1 : 1, E = i && f ? -1 : 1, p = $a(t, e);
  let {
    mainAxis: T,
    crossAxis: S,
    alignmentAxis: L
  } = typeof p == "number" ? {
    mainAxis: p,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...p
  };
  return u && typeof L == "number" && (S = u === "end" ? L * -1 : L), f ? {
    x: S * E,
    y: T * A
  } : {
    x: T * A,
    y: S * E
  };
}
const xx = function(e) {
  return e === void 0 && (e = 0), {
    name: "offset",
    options: e,
    async fn(t) {
      var n, r;
      const {
        x: s,
        y: i,
        placement: o,
        middlewareData: u
      } = t, f = await Px(t, e);
      return o === ((n = u.offset) == null ? void 0 : n.placement) && (r = u.arrow) != null && r.alignmentOffset ? {} : {
        x: s + f.x,
        y: i + f.y,
        data: {
          ...f,
          placement: o
        }
      };
    }
  };
}, Mx = function(e) {
  return e === void 0 && (e = {}), {
    name: "shift",
    options: e,
    async fn(t) {
      const {
        x: n,
        y: r,
        placement: s
      } = t, {
        mainAxis: i = !0,
        crossAxis: o = !1,
        limiter: u = {
          fn: (I) => {
            let {
              x: v,
              y: R
            } = I;
            return {
              x: v,
              y: R
            };
          }
        },
        ...f
      } = $a(e, t), A = {
        x: n,
        y: r
      }, E = await Wc(t, f), p = Cl(Hr(s)), T = kc(p);
      let S = A[T], L = A[p];
      if (i) {
        const I = T === "y" ? "top" : "left", v = T === "y" ? "bottom" : "right", R = S + E[I], g = S - E[v];
        S = Yd(R, S, g);
      }
      if (o) {
        const I = p === "y" ? "top" : "left", v = p === "y" ? "bottom" : "right", R = L + E[I], g = L - E[v];
        L = Yd(R, L, g);
      }
      const b = u.fn({
        ...t,
        [T]: S,
        [p]: L
      });
      return {
        ...b,
        data: {
          x: b.x - n,
          y: b.y - r
        }
      };
    }
  };
}, Fx = function(e) {
  return e === void 0 && (e = {}), {
    options: e,
    fn(t) {
      const {
        x: n,
        y: r,
        placement: s,
        rects: i,
        middlewareData: o
      } = t, {
        offset: u = 0,
        mainAxis: f = !0,
        crossAxis: A = !0
      } = $a(e, t), E = {
        x: n,
        y: r
      }, p = Cl(s), T = kc(p);
      let S = E[T], L = E[p];
      const b = $a(u, t), I = typeof b == "number" ? {
        mainAxis: b,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...b
      };
      if (f) {
        const g = T === "y" ? "height" : "width", D = i.reference[T] - i.floating[g] + I.mainAxis, w = i.reference[T] + i.reference[g] - I.mainAxis;
        S < D ? S = D : S > w && (S = w);
      }
      if (A) {
        var v, R;
        const g = T === "y" ? "width" : "height", D = ["top", "left"].includes(Hr(s)), w = i.reference[p] - i.floating[g] + (D && ((v = o.offset) == null ? void 0 : v[p]) || 0) + (D ? 0 : I.crossAxis), F = i.reference[p] + i.reference[g] + (D ? 0 : ((R = o.offset) == null ? void 0 : R[p]) || 0) - (D ? I.crossAxis : 0);
        L < w ? L = w : L > F && (L = F);
      }
      return {
        [T]: S,
        [p]: L
      };
    }
  };
};
function Du() {
  return typeof window < "u";
}
function ia(e) {
  return Gc(e) ? (e.nodeName || "").toLowerCase() : "#document";
}
function Un(e) {
  var t;
  return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;
}
function Aa(e) {
  var t;
  return (t = (Gc(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement;
}
function Gc(e) {
  return Du() ? e instanceof Node || e instanceof Un(e).Node : !1;
}
function Vr(e) {
  return Du() ? e instanceof Element || e instanceof Un(e).Element : !1;
}
function Wr(e) {
  return Du() ? e instanceof HTMLElement || e instanceof Un(e).HTMLElement : !1;
}
function PE(e) {
  return !Du() || typeof ShadowRoot > "u" ? !1 : e instanceof ShadowRoot || e instanceof Un(e).ShadowRoot;
}
function Dl(e) {
  const {
    overflow: t,
    overflowX: n,
    overflowY: r,
    display: s
  } = fr(e);
  return /auto|scroll|overlay|hidden|clip/.test(t + r + n) && !["inline", "contents"].includes(s);
}
function qx(e) {
  return ["table", "td", "th"].includes(ia(e));
}
function $x(e) {
  return [":popover-open", ":modal"].some((t) => {
    try {
      return e.matches(t);
    } catch {
      return !1;
    }
  });
}
function jc(e) {
  const t = Kc(), n = Vr(e) ? fr(e) : e;
  return n.transform !== "none" || n.perspective !== "none" || (n.containerType ? n.containerType !== "normal" : !1) || !t && (n.backdropFilter ? n.backdropFilter !== "none" : !1) || !t && (n.filter ? n.filter !== "none" : !1) || ["transform", "perspective", "filter"].some((r) => (n.willChange || "").includes(r)) || ["paint", "layout", "strict", "content"].some((r) => (n.contain || "").includes(r));
}
function Ux(e) {
  let t = Ii(e);
  for (; Wr(t) && !Nu(t); ) {
    if (jc(t))
      return t;
    if ($x(t))
      return null;
    t = Ii(t);
  }
  return null;
}
function Kc() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
function Nu(e) {
  return ["html", "body", "#document"].includes(ia(e));
}
function fr(e) {
  return Un(e).getComputedStyle(e);
}
function Bu(e) {
  return Vr(e) ? {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  } : {
    scrollLeft: e.scrollX,
    scrollTop: e.scrollY
  };
}
function Ii(e) {
  if (ia(e) === "html")
    return e;
  const t = (
    // Step into the shadow DOM of the parent of a slotted node.
    e.assignedSlot || // DOM Element detected.
    e.parentNode || // ShadowRoot detected.
    PE(e) && e.host || // Fallback.
    Aa(e)
  );
  return PE(t) ? t.host : t;
}
function HT(e) {
  const t = Ii(e);
  return Nu(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : Wr(t) && Dl(t) ? t : HT(t);
}
function Tl(e, t, n) {
  var r;
  t === void 0 && (t = []), n === void 0 && (n = !0);
  const s = HT(e), i = s === ((r = e.ownerDocument) == null ? void 0 : r.body), o = Un(s);
  if (i) {
    const u = kx(o);
    return t.concat(o, o.visualViewport || [], Dl(s) ? s : [], u && n ? Tl(u) : []);
  }
  return t.concat(s, Tl(s, [], n));
}
function kx(e) {
  return e.parent && Object.getPrototypeOf(e.parent) ? e.frameElement : null;
}
function VT(e) {
  const t = fr(e);
  let n = parseFloat(t.width) || 0, r = parseFloat(t.height) || 0;
  const s = Wr(e), i = s ? e.offsetWidth : n, o = s ? e.offsetHeight : r, u = su(n) !== i || su(r) !== o;
  return u && (n = i, r = o), {
    width: n,
    height: r,
    $: u
  };
}
function zc(e) {
  return Vr(e) ? e : e.contextElement;
}
function Ei(e) {
  const t = zc(e);
  if (!Wr(t))
    return qa(1);
  const n = t.getBoundingClientRect(), {
    width: r,
    height: s,
    $: i
  } = VT(t);
  let o = (i ? su(n.width) : n.width) / r, u = (i ? su(n.height) : n.height) / s;
  return (!o || !Number.isFinite(o)) && (o = 1), (!u || !Number.isFinite(u)) && (u = 1), {
    x: o,
    y: u
  };
}
const Hx = /* @__PURE__ */ qa(0);
function WT(e) {
  const t = Un(e);
  return !Kc() || !t.visualViewport ? Hx : {
    x: t.visualViewport.offsetLeft,
    y: t.visualViewport.offsetTop
  };
}
function Vx(e, t, n) {
  return t === void 0 && (t = !1), !n || t && n !== Un(e) ? !1 : t;
}
function Fs(e, t, n, r) {
  t === void 0 && (t = !1), n === void 0 && (n = !1);
  const s = e.getBoundingClientRect(), i = zc(e);
  let o = qa(1);
  t && (r ? Vr(r) && (o = Ei(r)) : o = Ei(e));
  const u = Vx(i, n, r) ? WT(i) : qa(0);
  let f = (s.left + u.x) / o.x, A = (s.top + u.y) / o.y, E = s.width / o.x, p = s.height / o.y;
  if (i) {
    const T = Un(i), S = r && Vr(r) ? Un(r) : r;
    let L = T, b = L.frameElement;
    for (; b && r && S !== L; ) {
      const I = Ei(b), v = b.getBoundingClientRect(), R = fr(b), g = v.left + (b.clientLeft + parseFloat(R.paddingLeft)) * I.x, D = v.top + (b.clientTop + parseFloat(R.paddingTop)) * I.y;
      f *= I.x, A *= I.y, E *= I.x, p *= I.y, f += g, A += D, L = Un(b), b = L.frameElement;
    }
  }
  return ou({
    width: E,
    height: p,
    x: f,
    y: A
  });
}
const Wx = [":popover-open", ":modal"];
function GT(e) {
  return Wx.some((t) => {
    try {
      return e.matches(t);
    } catch {
      return !1;
    }
  });
}
function Gx(e) {
  let {
    elements: t,
    rect: n,
    offsetParent: r,
    strategy: s
  } = e;
  const i = s === "fixed", o = Aa(r), u = t ? GT(t.floating) : !1;
  if (r === o || u && i)
    return n;
  let f = {
    scrollLeft: 0,
    scrollTop: 0
  }, A = qa(1);
  const E = qa(0), p = Wr(r);
  if ((p || !p && !i) && ((ia(r) !== "body" || Dl(o)) && (f = Bu(r)), Wr(r))) {
    const T = Fs(r);
    A = Ei(r), E.x = T.x + r.clientLeft, E.y = T.y + r.clientTop;
  }
  return {
    width: n.width * A.x,
    height: n.height * A.y,
    x: n.x * A.x - f.scrollLeft * A.x + E.x,
    y: n.y * A.y - f.scrollTop * A.y + E.y
  };
}
function jx(e) {
  return Array.from(e.getClientRects());
}
function jT(e) {
  return Fs(Aa(e)).left + Bu(e).scrollLeft;
}
function Kx(e) {
  const t = Aa(e), n = Bu(e), r = e.ownerDocument.body, s = ws(t.scrollWidth, t.clientWidth, r.scrollWidth, r.clientWidth), i = ws(t.scrollHeight, t.clientHeight, r.scrollHeight, r.clientHeight);
  let o = -n.scrollLeft + jT(e);
  const u = -n.scrollTop;
  return fr(r).direction === "rtl" && (o += ws(t.clientWidth, r.clientWidth) - s), {
    width: s,
    height: i,
    x: o,
    y: u
  };
}
function zx(e, t) {
  const n = Un(e), r = Aa(e), s = n.visualViewport;
  let i = r.clientWidth, o = r.clientHeight, u = 0, f = 0;
  if (s) {
    i = s.width, o = s.height;
    const A = Kc();
    (!A || A && t === "fixed") && (u = s.offsetLeft, f = s.offsetTop);
  }
  return {
    width: i,
    height: o,
    x: u,
    y: f
  };
}
function Yx(e, t) {
  const n = Fs(e, !0, t === "fixed"), r = n.top + e.clientTop, s = n.left + e.clientLeft, i = Wr(e) ? Ei(e) : qa(1), o = e.clientWidth * i.x, u = e.clientHeight * i.y, f = s * i.x, A = r * i.y;
  return {
    width: o,
    height: u,
    x: f,
    y: A
  };
}
function xE(e, t, n) {
  let r;
  if (t === "viewport")
    r = zx(e, n);
  else if (t === "document")
    r = Kx(Aa(e));
  else if (Vr(t))
    r = Yx(t, n);
  else {
    const s = WT(e);
    r = {
      ...t,
      x: t.x - s.x,
      y: t.y - s.y
    };
  }
  return ou(r);
}
function KT(e, t) {
  const n = Ii(e);
  return n === t || !Vr(n) || Nu(n) ? !1 : fr(n).position === "fixed" || KT(n, t);
}
function Xx(e, t) {
  const n = t.get(e);
  if (n)
    return n;
  let r = Tl(e, [], !1).filter((u) => Vr(u) && ia(u) !== "body"), s = null;
  const i = fr(e).position === "fixed";
  let o = i ? Ii(e) : e;
  for (; Vr(o) && !Nu(o); ) {
    const u = fr(o), f = jc(o);
    !f && u.position === "fixed" && (s = null), (i ? !f && !s : !f && u.position === "static" && !!s && ["absolute", "fixed"].includes(s.position) || Dl(o) && !f && KT(e, o)) ? r = r.filter((E) => E !== o) : s = u, o = Ii(o);
  }
  return t.set(e, r), r;
}
function Zx(e) {
  let {
    element: t,
    boundary: n,
    rootBoundary: r,
    strategy: s
  } = e;
  const o = [...n === "clippingAncestors" ? Xx(t, this._c) : [].concat(n), r], u = o[0], f = o.reduce((A, E) => {
    const p = xE(t, E, s);
    return A.top = ws(p.top, A.top), A.right = bi(p.right, A.right), A.bottom = bi(p.bottom, A.bottom), A.left = ws(p.left, A.left), A;
  }, xE(t, u, s));
  return {
    width: f.right - f.left,
    height: f.bottom - f.top,
    x: f.left,
    y: f.top
  };
}
function Jx(e) {
  const {
    width: t,
    height: n
  } = VT(e);
  return {
    width: t,
    height: n
  };
}
function Qx(e, t, n) {
  const r = Wr(t), s = Aa(t), i = n === "fixed", o = Fs(e, !0, i, t);
  let u = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const f = qa(0);
  if (r || !r && !i)
    if ((ia(t) !== "body" || Dl(s)) && (u = Bu(t)), r) {
      const p = Fs(t, !0, i, t);
      f.x = p.x + t.clientLeft, f.y = p.y + t.clientTop;
    } else s && (f.x = jT(s));
  const A = o.left + u.scrollLeft - f.x, E = o.top + u.scrollTop - f.y;
  return {
    x: A,
    y: E,
    width: o.width,
    height: o.height
  };
}
function ME(e, t) {
  return !Wr(e) || fr(e).position === "fixed" ? null : t ? t(e) : e.offsetParent;
}
function zT(e, t) {
  const n = Un(e);
  if (!Wr(e) || GT(e))
    return n;
  let r = ME(e, t);
  for (; r && qx(r) && fr(r).position === "static"; )
    r = ME(r, t);
  return r && (ia(r) === "html" || ia(r) === "body" && fr(r).position === "static" && !jc(r)) ? n : r || Ux(e) || n;
}
const eM = async function(e) {
  const t = this.getOffsetParent || zT, n = this.getDimensions;
  return {
    reference: Qx(e.reference, await t(e.floating), e.strategy),
    floating: {
      x: 0,
      y: 0,
      ...await n(e.floating)
    }
  };
};
function tM(e) {
  return fr(e).direction === "rtl";
}
const nM = {
  convertOffsetParentRelativeRectToViewportRelativeRect: Gx,
  getDocumentElement: Aa,
  getClippingRect: Zx,
  getOffsetParent: zT,
  getElementRects: eM,
  getClientRects: jx,
  getDimensions: Jx,
  getScale: Ei,
  isElement: Vr,
  isRTL: tM
};
function rM(e, t) {
  let n = null, r;
  const s = Aa(e);
  function i() {
    var u;
    clearTimeout(r), (u = n) == null || u.disconnect(), n = null;
  }
  function o(u, f) {
    u === void 0 && (u = !1), f === void 0 && (f = 1), i();
    const {
      left: A,
      top: E,
      width: p,
      height: T
    } = e.getBoundingClientRect();
    if (u || t(), !p || !T)
      return;
    const S = Fo(E), L = Fo(s.clientWidth - (A + p)), b = Fo(s.clientHeight - (E + T)), I = Fo(A), R = {
      rootMargin: -S + "px " + -L + "px " + -b + "px " + -I + "px",
      threshold: ws(0, bi(1, f)) || 1
    };
    let g = !0;
    function D(w) {
      const F = w[0].intersectionRatio;
      if (F !== f) {
        if (!g)
          return o();
        F ? o(!1, F) : r = setTimeout(() => {
          o(!1, 1e-7);
        }, 100);
      }
      g = !1;
    }
    try {
      n = new IntersectionObserver(D, {
        ...R,
        // Handle <iframe>s
        root: s.ownerDocument
      });
    } catch {
      n = new IntersectionObserver(D, R);
    }
    n.observe(e);
  }
  return o(!0), i;
}
function Nl(e, t, n, r) {
  r === void 0 && (r = {});
  const {
    ancestorScroll: s = !0,
    ancestorResize: i = !0,
    elementResize: o = typeof ResizeObserver == "function",
    layoutShift: u = typeof IntersectionObserver == "function",
    animationFrame: f = !1
  } = r, A = zc(e), E = s || i ? [...A ? Tl(A) : [], ...Tl(t)] : [];
  E.forEach((v) => {
    s && v.addEventListener("scroll", n, {
      passive: !0
    }), i && v.addEventListener("resize", n);
  });
  const p = A && u ? rM(A, n) : null;
  let T = -1, S = null;
  o && (S = new ResizeObserver((v) => {
    let [R] = v;
    R && R.target === A && S && (S.unobserve(t), cancelAnimationFrame(T), T = requestAnimationFrame(() => {
      var g;
      (g = S) == null || g.observe(t);
    })), n();
  }), A && !f && S.observe(A), S.observe(t));
  let L, b = f ? Fs(e) : null;
  f && I();
  function I() {
    const v = Fs(e);
    b && (v.x !== b.x || v.y !== b.y || v.width !== b.width || v.height !== b.height) && n(), b = v, L = requestAnimationFrame(I);
  }
  return n(), () => {
    var v;
    E.forEach((R) => {
      s && R.removeEventListener("scroll", n), i && R.removeEventListener("resize", n);
    }), p == null || p(), (v = S) == null || v.disconnect(), S = null, f && cancelAnimationFrame(L);
  };
}
const aM = Bx, Bl = Mx, wl = wx, sM = Dx, wu = Fx, Pl = (e, t, n) => {
  const r = /* @__PURE__ */ new Map(), s = {
    platform: nM,
    ...n
  }, i = {
    ...s.platform,
    _c: r
  };
  return Cx(e, t, {
    ...s,
    platform: i
  });
};
function iM(e) {
  return e != null && typeof e == "object" && "$el" in e;
}
function lM(e) {
  if (iM(e)) {
    const t = e.$el;
    return Gc(t) && ia(t) === "#comment" ? null : t;
  }
  return e;
}
function oM(e) {
  return typeof e == "function" ? e() : CR(e);
}
function uM(e) {
  return {
    name: "arrow",
    options: e,
    fn(t) {
      const n = lM(oM(e.element));
      return n == null ? {} : sM({
        element: n,
        padding: e.padding
      }).fn(t);
    }
  };
}
const J = {
  arrowDown: 40,
  arrowLeft: 37,
  arrowRight: 39,
  arrowUp: 38,
  e: 69,
  enter: 13,
  escape: 27,
  minus: 189,
  numMinus: 109,
  numPlus: 107,
  plus: 187,
  space: 32,
  tab: 9,
  backspace: 8,
  del: 46,
  home: 36,
  end: 35
};
function _M(e) {
  const t = d(e, "id"), n = d(e, "offsetDistance"), r = d(e, "offsetSkidding"), s = d(e, "placement"), i = d(e, "timeClose"), o = B(void 0), u = B(void 0), f = B(!1), A = B(void 0), E = B(void 0), p = B(void 0), T = _(() => document.getElementById(t.value)), S = _(() => s.value && s.value.includes("auto")), L = _(() => [
    xx({
      mainAxis: n.value || 0,
      crossAxis: r.value || 0,
      alignmentAxis: null
    }),
    S.value ? aM() : wl(),
    Bl({ limiter: wu() }),
    E.value && uM({
      element: E.value,
      padding: 5
    })
  ]), b = (U) => {
    U.keyCode === J.escape && q();
  }, I = () => {
    document.addEventListener("keydown", b);
  }, v = () => {
    document.removeEventListener("keydown", b);
  }, R = () => {
    Rt.$on("closeHtmlTitle", q);
  }, g = () => {
    Rt.$off("closeHtmlTitle", q);
  }, D = () => {
    o.value && (o.value(), o.value = void 0);
  }, w = () => {
    A.value = setTimeout(() => {
      q();
    }, i.value);
  }, F = () => {
    if (f.value) {
      clearTimeout(A.value);
      return;
    }
    f.value = !0;
  }, P = () => {
    o.value || !T.value || !p.value || (o.value = Nl(T.value, p.value, () => {
      !T.value || !p.value || Pl(
        T.value,
        p.value,
        {
          placement: s.value,
          middleware: L.value
        }
      ).then(({ x: U, y: G, middlewareData: te, placement: ne }) => {
        Object.assign(p.value.style, {
          left: `${U}px`,
          top: `${G}px`
        });
        const oe = ne.split("-")[0], se = {
          top: "bottom",
          right: "left",
          bottom: "top",
          left: "right"
        }[oe];
        if (te.arrow) {
          const { x: ie, y: me } = te.arrow;
          Object.assign(E.value.style, {
            left: le(ie) ? "" : `${ie}px`,
            top: le(me) ? "" : `${me}px`,
            [se]: `${-E.value.offsetWidth / 2}px`
          });
        }
      });
    }), Rt.$emit("closeHtmlTitle"), R(), I());
  }, M = () => {
    clearTimeout(A.value);
  }, O = () => {
    w();
  };
  function q() {
    clearTimeout(A.value), D(), g(), v(), f.value = !1;
  }
  return {
    closeTitle: q,
    closeTitleWithTimer: w,
    componentRef: u,
    isTitleVisible: f,
    mouseEnterTooltip: M,
    mouseLeaveTooltip: O,
    showTitle: F,
    startPopper: P,
    titleArrowRef: E,
    titleRef: p
  };
}
function Yc(e) {
  const t = d(e, "popperContainerId"), n = _(() => `#${t.value}`);
  return {
    addPopperContainerInBody: ({ className: s = "a_popup_container" } = {}) => {
      if (!document.getElementById(t.value)) {
        const o = document.createElement("div");
        o.id = t.value, o.className = s, document.body.prepend(o);
      }
    },
    popperContainerIdSelector: n
  };
}
const dM = ["RouterLink", "router-link"];
function cM(e) {
  const t = d(e, "tag");
  return {
    tagLocal: _(() => dM.indexOf(t.value) !== -1 ? kr(t.value) : t.value)
  };
}
function fM(e, {
  showTitle: t = () => {
  },
  closeTitle: n = () => {
  },
  closeTitleWithTimer: r = () => {
  }
}) {
  const s = d(e, "isHide");
  return {
    onBlur: () => {
      n();
    },
    onFocus: () => {
      s.value || t();
    },
    onMouseenter: () => {
      s.value || t();
    },
    onMouseleave: () => {
      r();
    }
  };
}
const Sl = {
  /*
   * called before bound element's attributes
   * or event listeners are applied
   */
  created(e, t) {
    var n;
    Ne((n = t.value) == null ? void 0 : n.created) && t.value.created(e, t);
  },
  // called right before the element is inserted into the DOM.
  beforeMount(e, t) {
    var n;
    Ne((n = t.value) == null ? void 0 : n.beforeMount) && t.value.beforeMount(e, t);
  },
  /*
   * called when the bound element's parent component
   * and all its children are mounted.
   */
  mounted(e, t) {
    var n;
    Ne((n = t.value) == null ? void 0 : n.mounted) && t.value.mounted(e, t);
  },
  // called before the parent component is unmounted
  beforeUnmount(e, t) {
    var n;
    Ne((n = t.value) == null ? void 0 : n.beforeUnmount) && t.value.beforeUnmount(e, t);
  },
  // called when the parent component is unmounted
  unmounted(e, t) {
    var n;
    Ne((n = t.value) == null ? void 0 : n.unmounted) && t.value.unmounted(e, t);
  }
}, hM = {
  name: "ATooltip",
  props: {
    arrowPadding: {
      type: [Number, Function],
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_tooltip_")
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    maxWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    minWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    offsetDistance: {
      type: Number,
      required: !1,
      default: 6
    },
    offsetSkidding: {
      type: Number,
      required: !1,
      default: 0
    },
    placement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Gn.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: "a_tooltip_container"
    },
    showArrow: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tag: {
      type: String,
      required: !1,
      default: "span"
    },
    timeClose: {
      type: Number,
      required: !1,
      default: 100,
      validator: (e) => e >= 0
    },
    width: {
      type: Number,
      required: !1,
      default: void 0
    },
    withoutAriaDescribedby: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      closeTitle: t,
      closeTitleWithTimer: n,
      componentRef: r,
      isTitleVisible: s,
      mouseEnterTooltip: i,
      mouseLeaveTooltip: o,
      showTitle: u,
      startPopper: f,
      titleArrowRef: A,
      titleRef: E
    } = _M(e), {
      onBlur: p,
      onFocus: T,
      onMouseenter: S,
      onMouseleave: L
    } = fM(e, {
      showTitle: u,
      closeTitle: t,
      closeTitleWithTimer: n
    }), {
      tagLocal: b
    } = cM(e), {
      ariaDescribedby: I,
      tooltipStyles: v
    } = Lx(e, {
      isTitleVisible: s
    }), {
      addPopperContainerInBody: R,
      popperContainerIdSelector: g
    } = Yc(e);
    return R(), Ot(() => {
      t();
    }), {
      ariaDescribedby: I,
      closeTitle: t,
      componentRef: r,
      isTitleVisible: s,
      mouseEnterTooltip: i,
      mouseLeaveTooltip: o,
      onBlur: p,
      onFocus: T,
      onMouseenter: S,
      onMouseleave: L,
      showTitle: u,
      popperContainerIdSelector: g,
      startPopper: f,
      tagLocal: b,
      titleArrowRef: A,
      titleRef: E,
      tooltipStyles: v
    };
  },
  render() {
    return c(this.tagLocal, {
      ref: "componentRef",
      id: this.id,
      "aria-describedby": this.ariaDescribedby,
      onFocus: this.onFocus,
      onBlur: this.onBlur,
      onMouseenter: this.onMouseenter,
      onMouseleave: this.onMouseleave
    }, {
      default: () => [
        this.$slots.default && this.$slots.default(),
        !this.isHide && c(oa, {
          to: this.popperContainerIdSelector
        }, [
          /*
           * h("div", {
           *   id: this.ariaDescribedby,
           *   class: "a_sr_only",
           * }, [
           *   this.$slots.title && this.$slots.title(),
           * ]),
           */
          !!(this.$slots.title && this.isTitleVisible) && Dt(c("div", {
            ref: "titleRef",
            class: "a_tooltip__container",
            style: this.tooltipStyles,
            onMouseenter: this.mouseEnterTooltip,
            onMouseleave: this.mouseLeaveTooltip
          }, [
            this.showArrow && c("div", {
              ref: "titleArrowRef",
              "data-popper-arrow": !0,
              class: "a_tooltip__arrow"
            }),
            c("div", {
              id: this.ariaDescribedby,
              class: "a_tooltip__wrapper"
            }, this.$slots.title && this.$slots.title())
          ]), [
            [Sl, {
              mounted: this.startPopper
            }]
          ])
        ])
      ]
    });
  }
};
function AM(e, {
  tagLocal: t = _(() => "")
}) {
  const n = d(e, "isTitleHtml");
  return {
    componentLocal: _(() => n.value ? hM : t.value)
  };
}
function EM(e) {
  const t = d(e, "type"), n = d(e, "disabled");
  return {
    disabledLocal: _(() => {
      if (["button", "submit", "reset"].indexOf(t.value) !== -1 && n.value)
        return !0;
    })
  };
}
function pM(e, {
  tagLocal: t = _(() => "")
}) {
  const n = d(e, "isTitleHtml"), r = d(e, "titleAttributes"), s = d(e, "titlePlacement"), i = B(void 0), o = _(() => n.value ? {
    tag: t.value,
    placement: s.value,
    withoutAriaDescribedby: !0,
    ...r.value
  } : {});
  return {
    elementRef: i,
    htmlTitleAttributes: o
  };
}
function TM(e) {
  const t = d(e, "loading"), n = d(e, "loadingAlign"), r = _(() => t.value && n.value === "left"), s = _(() => t.value && n.value === "right");
  return {
    isLoadingLeft: r,
    isLoadingRight: s
  };
}
function SM(e) {
  const t = d(e, "disabled"), n = d(e, "to"), r = d(e, "type");
  return {
    isRouterLink: _(() => r.value === "link" && !!n.value && !t.value)
  };
}
const FE = "a_btn a_btn_switch";
function mM(e) {
  const t = d(e, "isSwitch"), n = d(e, "modelSwitch"), r = _(() => {
    if (t.value)
      return !!n.value;
  }), s = _(() => {
    if (t.value)
      return n.value ? `${FE} a_btn_switch_active` : FE;
  });
  return {
    isSwitchActive: r,
    switchClass: s
  };
}
const LM = {
  button: "button",
  submit: "button",
  reset: "button",
  link: "a",
  text: "span"
};
function bM(e, {
  isRouterLink: t = _(() => !1)
}) {
  const n = d(e, "tag"), r = d(e, "type");
  return {
    tagLocal: _(() => n.value ? n.value : t.value ? kr("RouterLink") : LM[r.value] || "span")
  };
}
function IM(e) {
  const t = d(e, "html"), n = d(e, "htmlScreenReader"), r = d(e, "safeHtml"), s = d(e, "safeHtmlScreenReader"), i = d(e, "text"), o = d(e, "textScreenReader"), u = _(() => at(i.value) ? !En(i.value) : !le(i.value) && i.value !== ""), f = _(() => at(r.value) ? !En(r.value) : !le(r.value) && r.value !== ""), A = _(() => at(t.value) ? !En(t.value) : !le(t.value) && t.value !== ""), E = _(() => u.value || f.value || A.value), p = _(() => at(o.value) ? !En(o.value) : !le(o.value) && o.value !== ""), T = _(() => at(s.value) ? !En(s.value) : !le(s.value) && s.value !== ""), S = _(() => at(n.value) ? !En(n.value) : !le(n.value) && n.value !== ""), L = _(() => p.value || T.value || S.value);
  return {
    isTextOrHtmlVisible: E,
    isTextOrHtmlScreenReaderVisible: L
  };
}
function vM(e) {
  const t = d(e, "title");
  return {
    isTitleVisible: _(() => Te(t.value) && t.value.length > 0 ? !0 : at(t.value) ? !En(t.value) : !Be(t.value))
  };
}
function Nt(e) {
  const t = d(e, "excludeRenderAttributes");
  return {
    attributesToExcludeFromRender: _(() => {
      const r = {};
      return z(t.value, (s) => {
        r[s] = void 0;
      }), r;
    })
  };
}
const Ae = {
  name: "AElement",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaDisabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    href: {
      type: String,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_element_")
    },
    isSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    modelSwitch: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tabindex: {
      type: [Number, String],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: void 0
    },
    target: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Gn.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => ot(e) ? e === "auto" : ha(e)
    },
    to: {
      type: [Object, String],
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0,
      default: "text",
      validator: (e) => ["button", "submit", "reset", "link", "text"].indexOf(e) !== -1
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      isRouterLink: r
    } = SM(e), {
      disabledLocal: s
    } = EM(e), {
      tagLocal: i
    } = bM(e, {
      isRouterLink: r
    }), {
      toHrefAttributes: o,
      typeAttribut: u
    } = Sx(e, {
      isRouterLink: r,
      tagLocal: i
    }), {
      isTitleVisible: f
    } = vM(e), {
      isLoadingLeft: A,
      isLoadingRight: E
    } = TM(e), {
      isTextOrHtmlVisible: p,
      isTextOrHtmlScreenReaderVisible: T
    } = IM(e), {
      onClick: S
    } = mx(e, t), {
      componentLocal: L
    } = AM(e, {
      tagLocal: i
    }), {
      elementRef: b,
      htmlTitleAttributes: I
    } = pM(e, {
      tagLocal: i
    }), {
      ariaLabelAttributes: v
    } = Uc(e), {
      isSwitchActive: R,
      switchClass: g
    } = mM(e);
    return {
      ariaLabelAttributes: v,
      attributesToExcludeFromRender: n,
      componentLocal: L,
      disabledLocal: s,
      elementRef: b,
      htmlTitleAttributes: I,
      isLoadingLeft: A,
      isLoadingRight: E,
      isSwitchActive: R,
      isTextOrHtmlScreenReaderVisible: T,
      isTextOrHtmlVisible: p,
      isTitleVisible: f,
      onClick: S,
      switchClass: g,
      tagLocal: i,
      toHrefAttributes: o,
      typeAttribut: u
    };
  },
  render() {
    return c(this.componentLocal, {
      ...this.$attrs,
      ...this.htmlTitleAttributes,
      ...this.ariaLabelAttributes,
      ...this.toHrefAttributes,
      ref: "elementRef",
      id: this.id,
      class: [
        this.classDefault,
        this.switchClass,
        this.class,
        {
          [this.classDisabled]: this.ariaDisabled
        }
      ],
      type: this.typeAttribut,
      tabindex: this.tabindex,
      disabled: this.disabledLocal,
      ariaDisabled: this.ariaDisabled,
      "aria-pressed": this.isSwitchActive,
      isAllRowsSelected: void 0,
      // TODO: ATable
      onClick: this.onClick,
      ...this.attributes,
      ...this.attributesToExcludeFromRender
    }, {
      default: () => [
        !this.isTitleHtml && this.isTitleVisible ? c(Ee, {
          tag: "span",
          alwaysTranslate: this.alwaysTranslate,
          ariaHidden: !0,
          class: [
            "a_position_absolute_all",
            this.classDefaultHidden
          ],
          title: this.title,
          extra: this.extra,
          style: {
            zIndex: this.titleZIndex
          },
          ...this.titleAttributes
        }) : "",
        this.isTextOrHtmlScreenReaderVisible ? c(Ee, {
          alwaysTranslate: this.alwaysTranslate,
          class: [
            "a_sr_only",
            this.classDefaultHidden
          ],
          tag: "span",
          text: this.textScreenReader,
          html: this.htmlScreenReader,
          safeHtml: this.safeHtmlScreenReader,
          extra: this.extra
        }) : "",
        this.$slots.buttonPrepend ? this.$slots.buttonPrepend({ extraData: this.extraData }) : "",
        this.isLoadingLeft ? c(Il, {
          class: [
            "aloha_btn__spinner_left",
            this.loadingClass
          ]
        }) : "",
        c(_t, {
          icon: this.iconLeft,
          iconTag: this.iconTag,
          class: [
            "aloha_btn__icon_left",
            this.iconClass
          ],
          ...this.iconAttributes
        }),
        this.$slots.default ? this.$slots.default({ extraData: this.extraData }) : "",
        this.isTextOrHtmlVisible ? c(Ee, {
          alwaysTranslate: this.alwaysTranslate,
          ariaHidden: this.textAriaHidden,
          class: this.textClass,
          extra: this.extra,
          html: this.html,
          safeHtml: this.safeHtml,
          tag: this.textTag,
          text: this.text,
          textAfter: this.textAfter,
          textBefore: this.textBefore
        }) : "",
        c(_t, {
          icon: this.iconRight,
          iconTag: this.iconTag,
          class: [
            "aloha_btn__icon_right",
            this.iconClass
          ],
          ...this.iconAttributes
        }),
        this.isLoadingRight ? c(Il, {
          class: [
            "aloha_btn__spinner_right",
            this.loadingClass
          ]
        }) : "",
        this.$slots.buttonAppend ? this.$slots.buttonAppend({ extraData: this.extraData }) : ""
      ],
      title: !this.isTitleHtml || !this.title && !this.$slots.buttonTitle ? () => "" : () => [
        this.isTitleVisible ? c(Ee, {
          alwaysTranslate: this.alwaysTranslate,
          html: this.title,
          tag: "span",
          extra: this.extra
        }) : "",
        this.$slots.buttonTitle ? this.$slots.buttonTitle({ extraData: this.extraData }) : ""
      ]
    });
  }
};
function YT(e) {
  const t = d(e, "dataItem"), n = d(e, "isButtonGroup"), r = d(e, "classButtonGroupDefault");
  return {
    classButton: _(() => {
      if (n.value)
        return t.value.classButton || r.value;
    })
  };
}
function yM(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = d(e, "modelValue");
  return {
    isChecked: _(() => n.value && n.value.indexOf(t.value) !== -1)
  };
}
function gM(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: s = _(() => {
  })
}) {
  const i = d(e, "dataItem"), o = d(e, "modelValue"), u = (A) => {
    if (n.value) {
      A.preventDefault(), A.stopPropagation();
      return;
    }
    const E = he(o.value) || [];
    if (r.value) {
      const p = E.indexOf(s.value);
      E.splice(p, 1);
    } else
      E.push(s.value);
    t("changeModelValue", {
      model: E,
      item: i.value,
      $event: A
    }), A.preventDefault(), A.stopPropagation();
  };
  return {
    onClick: u,
    onKeydown: (A) => {
      (A.key === "Enter" || A.keyCode === J.space) && (u(A), A.stopPropagation(), A.preventDefault());
    }
  };
}
function Xc(e) {
  const t = d(e, "dataItem"), n = d(e, "id"), r = d(e, "idSuffix"), s = d(e, "itemIndex"), i = _(() => t.value[Ge]), o = _(() => t.value[vt]), u = _(() => r.value ? `_${r.value}` : "");
  return {
    idLocal: _(() => `${n.value}_${s.value}${u.value}`),
    labelLocal: o,
    valueLocal: i
  };
}
function Zc(e) {
  const t = d(e, "dataItem"), n = d(e, "disabled"), r = d(e, "keyDisabled"), s = d(e, "keyDisabledCallback");
  return {
    disabledElement: _(() => {
      if (n.value || Ne(s.value) && s.value({ item: t.value }) || r.value && ce(t.value, r.value))
        return !0;
    })
  };
}
function XT(e) {
  const t = d(e, "dataItem"), n = d(e, "keyTitle"), r = d(e, "keyTitleCallback");
  return {
    titleLocal: _(() => {
      if (r.value)
        return r.value({ item: t.value });
      if (n.value)
        return ce(t.value, n.value);
    })
  };
}
function RM(e, {
  trueValue: t = "_YES_",
  falseValue: n = "_NO_",
  useNil: r = !0
} = {}) {
  return r && le(e) ? "" : Pt(e ? { placeholder: t } : { placeholder: n });
}
function OM(e) {
  return ND(e);
}
function ol(e, { suffix: t = "", digits: n = 2, digitGrouping: r = !0 } = {}) {
  if (le(e))
    return "";
  let s = Vt(e);
  if (s.split(",").length - 1 > 1)
    return e;
  s = s.replace(",", ".").replace(/[.](?=.*[.])/g, "");
  let o = Ti(s);
  if (o === 0)
    return `0${n > 0 ? "," : ""}${dP("0", n)}${t ? ` ${t}` : ""}`;
  if (!o)
    return e;
  o = cP(o, n), s = Vt(o);
  const u = s.split(".");
  let f = "";
  if (u[1])
    for (let S = 0; S < n; S++) {
      const L = Be(u[1][S]) ? "0" : u[1][S];
      f = `${f}${L}`;
    }
  else
    f = aP("", n, "0");
  let A = Vt(u[0] || "0"), E = !1;
  A.startsWith("-") && (A = A.substring(1), E = !0);
  let p = 0, T = "";
  return Ew(A, (S) => {
    p > 0 && p % 3 === 0 && r && (T += "."), p++, T += S;
  }), `${E ? "-" : ""}${T.split("").reverse().join("")}${Ri(f) > 0 ? "," : ""}${f}${t ? ` ${t}` : ""}`;
}
function CM(e, { suffix: t = "€", digits: n = 2, digitGrouping: r = !0 } = {}) {
  return ol(e, { suffix: t, digits: n, digitGrouping: r });
}
Fn.suppressDeprecationWarnings = !0;
const qE = {
  date: () => "DD.MM.YYYY",
  datetime: () => "DD.MM.YYYY HH:mm",
  fullDate: () => "dddd, DD. MMMM YYYY, HH:mm",
  time: () => "HH:mm",
  timeWithSeconds: () => "HH:mm:ss"
};
function DM(e, { format: t = "date" } = {}) {
  if (le(e) || e === "")
    return "";
  const n = Fn(String(e));
  return n.isValid() ? (Ne(qE[t]) && (t = qE[t]()), n.format(t)) : e;
}
function NM(e, { emptyValue: t = "-" } = {}) {
  return le(e) || e === "" ? t : e;
}
function BM(e, { linkClass: t } = {}) {
  if (le(e) || e === "" || !ot(e) || !/^\S+@\S+\.\S+$/.test(e))
    return "";
  let n = "";
  return t && (n = ` class="${t}"`), `<a href="mailto:${e}"${n}>${e}</a>`;
}
function wM(e) {
  const t = document.createElement("div");
  return t.textContent = e, t.innerHTML;
}
function PM(e, { units: t = "kb", sourceUnits: n = "b", digits: r = 2 } = {}) {
  const i = [
    "b",
    "kb",
    "mb",
    "gb",
    "tb",
    "pb",
    "eb",
    "zb",
    "yb"
  ], o = Ti(e);
  if (ww(o))
    return "";
  const u = i.indexOf(n);
  let f = i.indexOf(t);
  if (u === -1)
    return "";
  const A = o * Math.pow(1024, u);
  f === -1 && (f = Math.floor(Math.log(A) / Math.log(1024)), f < 0 && (f = 0), t = i[f]);
  const E = Pt({ placeholder: `_A_FILE_SIZE_${IT(t)}_` });
  if (o === 0)
    return ol(0, { suffix: E, digits: r });
  if (u === f)
    return ol(o, { suffix: E, digits: r });
  const p = A / Math.pow(1024, Math.abs(f));
  return ol(p, { suffix: E, digits: r });
}
function xM(e, { replacer: t, space: n = 2, isHtml: r = !1, jsonClass: s = "a_code_content", tag: i = "pre" } = {}) {
  if (le(e))
    return "";
  try {
    const o = JSON.stringify(e, t, n);
    if (r) {
      const u = s ? ` class="${s}"` : "";
      return `<${i}${u}>${o}</${i}>`;
    }
    return o;
  } catch {
    return "";
  }
}
function MM(e) {
  return e ? _P(e, (t, n, r) => `${t}${t ? ", " : ""}${r}: ${n}`, "") : "";
}
function FM(e, { limit: t = 30, maxThreeDots: n = !0 } = {}) {
  if (le(e))
    return "";
  const r = Vt(e);
  if (r.length <= t)
    return r;
  if (n) {
    const s = r.slice(0, t).trimEnd();
    let i = "...", o = !0;
    for (let u = s.length - 1; u > s.length - 4 && s[u] === "."; u--) {
      if (o)
        i = i.slice(0, -1);
      else
        break;
      o = !0;
    }
    return `${s}${i}`;
  }
  return `${r.substring(0, t)}...`;
}
function qM(e, { linkText: t = "", protocol: n = "https://", target: r = "", linkClass: s = "" } = {}) {
  if (le(e) || !ot(e))
    return "";
  let i = n;
  (e.startsWith("https://") || e.startsWith("http://")) && (i = "");
  const o = r ? ` target="${r}"` : "", u = s ? ` class="${s}"` : "";
  return `<a href="${i}${e}"${o}${u}>${t || e}</a>`;
}
function uu(e, {
  defaultValue: t = "",
  isChild: n = !1,
  isHtml: r = !0,
  isSimpleArray: s = !1,
  keyChildren: i = "",
  keyLabel: o = "",
  keyLabelCallback: u,
  lastSeparator: f,
  listClass: A = "",
  separator: E,
  separatorHtml: p = "",
  tag: T = "ul"
} = {}) {
  if (!Te(e) || !e.length)
    return t;
  let S = "";
  return r === !1 || r === "false" ? (Be(E) && (E = ", "), z(e, (L, b) => {
    let I = $E({
      keyLabel: o,
      keyLabelCallback: u,
      index: b,
      item: L,
      isSimpleArray: s
    }), v;
    if (s) {
      if (Te(I)) {
        let R = "";
        z(I, (g) => {
          Te(g) ? v = g : R = g;
        }), I = R;
      }
    } else i && (v = ce(L, i));
    !Be(f) && b === e.length - 1 ? S += `${b !== 0 || n ? f : ""}${I}` : S += `${b !== 0 || n ? E : ""}${I}`, v != null && v.length && (S += uu(v, {
      isChild: !0,
      isHtml: r,
      isSimpleArray: s,
      keyChildren: i,
      keyLabel: o,
      keyLabelCallback: u,
      separator: E
    }));
  }), S) : (z(e, (L, b) => {
    const I = e.length === b + 1, v = $E({
      keyLabel: o,
      keyLabelCallback: u,
      index: b,
      item: L,
      isSimpleArray: s
    });
    let R, g = v;
    s ? Te(v) && z(v, (D) => {
      Te(D) ? R = D : g = D;
    }) : i && (R = ce(L, i)), E && !I && (g += E), R != null && R.length && (g += uu(R, {
      isChild: !0,
      isHtml: r,
      isSimpleArray: s,
      keyChildren: i,
      keyLabel: o,
      keyLabelCallback: u,
      listClass: A,
      tag: T
    })), p && !I && (g += p), S += `<li>${g}</li>`;
  }), `<${T}${$M({ listClass: A })}>${S}</${T}>`);
}
function $E({ keyLabel: e, keyLabelCallback: t, index: n, item: r, isSimpleArray: s }) {
  let i;
  return s ? i = r : Ne(t) ? i = t({ item: r, itemIndex: n }) : i = e ? ce(r, e) : r, Be(i) && (i = ""), i;
}
function $M({ listClass: e }) {
  return e ? ` class="${e}"` : "";
}
function UM(e) {
  return bT(e);
}
function kM(e, { chars: t = 4, mask: n = "*" } = {}) {
  if (le(e))
    return "";
  const r = Vt(e);
  if (r.length <= t)
    return r;
  const s = xw([t, 0]), i = n.repeat(r.length - s), o = s === 0 ? "" : r.slice(-s);
  return `${i}${o}`;
}
function HM(e, { mapping: t = {}, defaultValue: n = "" } = {}) {
  return `${e}` in t ? t[e] : n;
}
function VM(e, {
  searchModel: t = "",
  searchClass: n = "a_search_highlight",
  tag: r = "mark",
  attributes: s = [],
  caseSensitive: i = !1,
  isHtml: o = !1
} = {}) {
  if (!e)
    return "";
  if (t === "" || le(t))
    return e;
  const u = i ? "g" : "gi", f = new RegExp(gu(t), u), A = s.length ? ` ${s.join(" ")}` : "";
  if (!o)
    return e.replace(f, (T) => ZT({
      value: T,
      tag: r,
      searchClass: n,
      attributesString: A
    }));
  const p = new DOMParser().parseFromString(e, "text/html");
  return JT({
    node: p.body,
    tag: r,
    searchClass: n,
    re: f,
    attributesString: A
  }), p.body.innerHTML;
}
function ZT({ value: e, tag: t, searchClass: n, attributesString: r }) {
  return `<${t} class="${n}"${r}>${e}</${t}>`;
}
function JT({ node: e, re: t, tag: n, searchClass: r, attributesString: s }) {
  if (e.nodeType === Node.TEXT_NODE) {
    if (e.nodeValue.match(t)) {
      const o = e.parentNode, u = e.nodeValue.replace(t, (A) => ZT({
        value: A,
        tag: n,
        searchClass: r,
        attributesString: s
      })), f = document.createElement("span");
      for (f.innerHTML = u; f.firstChild; )
        o.insertBefore(f.firstChild, e);
      o.removeChild(e);
    }
  } else e.nodeType === Node.ELEMENT_NODE && Array.from(e.childNodes).forEach((i) => JT({
    node: i,
    re: t,
    tag: n,
    searchClass: r,
    attributesString: s
  }));
}
function WM(e) {
  return IT(e);
}
const GM = B({});
function jn() {
  return {
    filterBoolean: (g, { trueValue: D = "_YES_", falseValue: w = "_NO_", useNil: F = !0 } = {}) => RM(g, {
      trueValue: D,
      falseValue: w,
      useNil: F
    }),
    filterCapitalize: (g) => OM(g),
    filterCurrency: (g, { suffix: D = "€", digits: w = 2, digitGrouping: F = !0 } = {}) => CM(g, { suffix: D, digits: w, digitGrouping: F }),
    filterDate: (g, { format: D = "date" } = {}) => DM(g, { format: D }),
    filterDefaultForEmpty: (g, { emptyValue: D = "-" } = {}) => NM(g, {
      emptyValue: D
    }),
    filterEmail: (g, { linkClass: D } = {}) => BM(g, { linkClass: D }),
    filterEscapeHtml: (g) => wM(g),
    filterFileSize: (g, { units: D = "kb", sourceUnits: w = "b", digits: F = 2 } = {}) => PM(g, { units: D, sourceUnits: w, digits: F }),
    filterFloat: (g, { suffix: D = "", digits: w = 2, digitGrouping: F = !0 } = {}) => ol(g, { suffix: D, digits: w, digitGrouping: F }),
    filterJson: (g, {
      replacer: D,
      space: w = 2,
      isHtml: F = !1,
      jsonClass: P = "a_code_content",
      tag: M = "pre"
    } = {}) => xM(g, { replacer: D, space: w, isHtml: F, jsonClass: P, tag: M }),
    filterKeyValue: (g) => MM(g),
    filterLimitTo: (g, {
      limit: D = 30,
      maxThreeDots: w = !0
    } = {}) => FM(g, { limit: D, maxThreeDots: w }),
    filterLink: (g, { linkText: D = "", protocol: w = "https://", target: F = "", linkClass: P = "" } = {}) => qM(g, { linkText: D, protocol: w, target: F, linkClass: P }),
    filterList: (g, {
      isHtml: D = !0,
      isSimpleArray: w = !1,
      keyChildren: F = "",
      keyLabel: P = "",
      keyLabelCallback: M,
      listClass: O = "",
      separator: q = ", ",
      tag: U = "ul"
    } = {}) => uu(g, { isHtml: D, listClass: O, keyLabel: P, keyLabelCallback: M, keyChildren: F, isSimpleArray: w, separator: q, tag: U }),
    filterLowerCase: (g) => UM(g),
    filterMask: (g, { chars: D = 4, mask: w = "*" } = {}) => kM(g, { chars: D, mask: w }),
    filterPropertyByValue: (g, { mapping: D = {}, defaultValue: w = "" } = {}) => HM(g, { mapping: D, defaultValue: w }),
    filterSearchHighlight: (g, {
      searchModel: D = "",
      searchClass: w = "a_search_highlight",
      tag: F = "mark",
      attributes: P = [],
      caseSensitive: M = !1,
      isHtml: O = !1
    } = {}) => VM(g, {
      searchModel: D,
      searchClass: w,
      tag: F,
      attributes: P,
      caseSensitive: M,
      isHtml: O
    }),
    filterUpperCase: (g) => WM(g),
    ...GM.value
  };
}
function Jc(e, {
  labelLocal: t = _(() => ""),
  valueLocal: n = _(() => "")
}) {
  const r = d(e, "isHiddenWithSearch"), s = d(e, "modelSearch"), i = d(e, "searching"), o = d(e, "searchingElements"), u = d(e, "searchTextInHtml"), f = d(e, "showElementWennGroupFound"), {
    filterSearchHighlight: A
  } = jn(), E = _(() => !!(r.value || i.value && !f.value && !o.value[n.value])), p = _(() => E.value ? t.value : A(t.value, {
    searchModel: s.value,
    isHtml: u.value
  })), T = _(() => E.value ? "display: none;" : void 0), S = _(() => E.value ? !0 : void 0);
  return {
    currentLabelFiltered: p,
    dataHideWithSearch: S,
    styleWithSearch: T
  };
}
const Vo = {
  name: "ACheckboxItem",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: ""
    },
    modelValue: {
      type: Array,
      required: !1
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: s
    } = Xc(e), {
      classButton: i
    } = YT(e), {
      isChecked: o
    } = yM(e, {
      valueLocal: s
    }), {
      disabledElement: u
    } = Zc(e), {
      onClick: f,
      onKeydown: A
    } = gM(e, t, {
      isChecked: o,
      valueLocal: s
    }), {
      currentLabelFiltered: E,
      styleWithSearch: p
    } = Jc(e, {
      labelLocal: r,
      valueLocal: s
    }), {
      titleLocal: T
    } = XT(e);
    return {
      classButton: i,
      currentLabelFiltered: E,
      disabledElement: u,
      idLocal: n,
      isChecked: o,
      labelLocal: r,
      onClick: f,
      onKeydown: A,
      styleWithSearch: p,
      titleLocal: T,
      valueLocal: s
    };
  },
  render() {
    return this.readonly ? c(Ae, {
      alwaysTranslate: this.alwaysTranslate,
      classDefault: "",
      extra: {
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      },
      tag: "li",
      title: this.titleLocal,
      type: "text"
    }, () => [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : this.labelLocal && Dt(c("span", {
        class: "a_custom_control_label__text"
      }), [
        [Kt, this.currentLabelFiltered]
      ])
    ]) : this.isButtonGroup ? [
      c("input", {
        id: this.idLocal,
        checked: this.isChecked,
        class: "a_btn_check",
        disabled: this.disabledElement,
        name: this.id,
        style: this.styleWithSearch,
        type: "checkbox",
        value: this.valueLocal,
        onClick: this.onClick,
        onKeydown: this.onKeydown
      }),
      c(Ae, {
        alwaysTranslate: this.alwaysTranslate,
        class: this.classButton,
        classDefault: "",
        extra: {
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        },
        for: this.idLocal,
        tag: "label",
        title: this.titleLocal,
        type: "button"
      }, () => [
        this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          id: this.id,
          item: this.dataItem,
          itemIndex: this.itemIndex,
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        }) : this.labelLocal && Dt(c("span", {}), [
          [Kt, this.currentLabelFiltered]
        ])
      ])
    ] : [
      c("div", {
        class: ["a_custom_control a_custom_checkbox", {
          a_custom_control_invalid: this.isErrors
        }],
        style: this.styleWithSearch
      }, [
        c("input", {
          id: this.idLocal,
          checked: this.isChecked,
          class: "a_custom_control_input",
          disabled: this.disabledElement,
          name: this.id,
          type: "checkbox",
          value: this.valueLocal,
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(Ae, {
          alwaysTranslate: this.alwaysTranslate,
          class: {
            a_custom_control_label: !0,
            a_custom_control_label_width_auto: this.isWidthAuto
          },
          classDefault: "",
          extra: {
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          },
          for: this.idLocal,
          tag: "label",
          title: this.titleLocal,
          type: "button"
        }, () => [
          this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            id: this.id,
            item: this.dataItem,
            itemIndex: this.itemIndex,
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          }) : this.labelLocal && Dt(c("span", {
            class: "a_custom_control_label__text"
          }), [
            [Kt, this.currentLabelFiltered]
          ])
        ])
      ]),
      this.slotAppendName && this.$slots[this.slotAppendName] ? this.$slots[this.slotAppendName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        isChecked: this.isChecked,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : ""
    ];
  }
};
function jM(e) {
  const t = d(e, "data"), n = d(e, "modelValueObj"), r = _(() => {
    const o = {
      indeterminate: void 0,
      checkedAll: !1,
      checkedSome: !1,
      uncheckedSome: !1
    };
    return En(n.value) || (z(t.value, (u) => {
      const f = u[Ge];
      if (n.value[f] ? o.checkedSome = !0 : o.uncheckedSome = !0, o.checkedSome && o.uncheckedSome)
        return o.indeterminate = !0, !1;
    }), o.checkedSome && !o.uncheckedSome && (o.checkedAll = !0)), o;
  }), s = _(() => r.value.checkedAll), i = _(() => r.value.indeterminate);
  return {
    isCheckedAll: s,
    isIndeterminate: i
  };
}
function KM(e, { emit: t }, {
  isCheckedAll: n = _(() => !1),
  isIndeterminate: r = _(() => {
  })
}) {
  const s = d(e, "data"), i = d(e, "dataKeyByKeyId"), o = d(e, "modelValue"), u = () => Lt(o.value || [], (T) => !i.value[T]), f = ({ model: T }) => (z(s.value, (S) => {
    const L = S[Ge];
    T.push(L);
  }), T), A = (T) => {
    let S = u();
    (r.value || !n.value) && (S = f({ model: S })), t("changeModelValue", {
      $event: T,
      model: S
    });
  }, E = (T) => {
    T.stopPropagation(), T.preventDefault(), A(T);
  };
  return {
    onClick: E,
    onKeydown: (T) => {
      (T.keyCode === J.enter || T.keyCode === J.space) && (E(T), T.stopPropagation(), T.preventDefault());
    }
  };
}
function zM(e) {
  const t = d(e, "id"), n = _(() => `${t.value}_legend`);
  return {
    idGroup: _(() => `${t.value}_group`),
    idLocal: n
  };
}
function YM(e) {
  const t = d(e, "label"), n = d(e, "modelSearch"), r = d(e, "showSearchHighlight"), {
    filterSearchHighlight: s
  } = jn();
  return {
    labelSearchHighlight: _(() => r.value ? s(t.value, { searchModel: n.value }) : t.value)
  };
}
const QT = {
  name: "ACheckboxLegend",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    dataKeyByKeyId: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: !1
    },
    id: {
      type: String,
      required: !0
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    label: {
      type: String,
      required: !1,
      default: void 0
    },
    legendClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    main: {
      type: Boolean,
      required: !1
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: () => []
    },
    modelValueObj: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    showSearchHighlight: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textAfterLabel: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idGroup: n,
      idLocal: r
    } = zM(e), {
      isCheckedAll: s,
      isIndeterminate: i
    } = jM(e), {
      onClick: o,
      onKeydown: u
    } = KM(e, t, {
      isCheckedAll: s,
      isIndeterminate: i
    }), {
      labelSearchHighlight: f
    } = YM(e);
    return {
      idGroup: n,
      idLocal: r,
      isCheckedAll: s,
      isIndeterminate: i,
      labelSearchHighlight: f,
      onClick: o,
      onKeydown: u
    };
  },
  render() {
    return this.hasControlCheckbox ? c("legend", {
      class: [
        "a_legend",
        {
          a_legend_invalid: this.isErrors
        },
        this.legendClass
      ]
    }, [
      c("div", {
        class: ["a_custom_control a_custom_checkbox", {
          a_custom_control_invalid: this.isErrors
        }]
      }, [
        c("input", {
          id: this.idLocal,
          "aria-controls": this.idGroup,
          checked: this.isCheckedAll,
          class: "a_custom_control_input",
          disabled: this.disabled,
          indeterminate: this.isIndeterminate,
          type: "checkbox",
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(Ae, {
          alwaysTranslate: this.alwaysTranslate,
          class: "a_custom_control_label a_custom_control_label_width_auto",
          classDefault: "",
          for: this.idLocal,
          html: this.labelSearchHighlight,
          textScreenReader: this.labelScreenReader,
          tag: "label",
          textAfter: this.textAfterLabel,
          textClass: "a_custom_control_label__text",
          type: "text"
        })
      ])
    ]) : c(Ae, {
      id: this.idLocal,
      class: [
        "a_legend",
        {
          a_legend_invalid: this.isErrors
        },
        this.legendClass
      ],
      html: this.labelSearchHighlight,
      tag: "legend",
      textAfter: this.textAfterLabel,
      textScreenReader: this.labelScreenReader,
      type: "text"
    });
  }
};
function Qc(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = d(e, "label"), r = _(() => `${t.value}_group`);
  return {
    groupAriaLabelledby: _(() => {
      if (n.value)
        return `${t.value}_legend`;
    }),
    groupId: r
  };
}
function XM(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "disabled");
  return {
    onChangeModelValue: ({ model: s, $event: i }) => {
      n.value || setTimeout(() => {
        t({
          model: s,
          $event: i
        });
      });
    }
  };
}
function ZM(e, {
  dataKeyByKeyIdLocal: t = _(() => ({}))
}) {
  const n = d(e, "modelValue"), r = _(() => {
    const o = {};
    return z(n.value || [], (u) => {
      o[u] = !0;
    }), o;
  }), s = _(() => n.value ? Lt(n.value, (o) => t.value[o]) : []);
  return {
    isModelValue: _(() => s.value.length > 0),
    modelValueFiltered: s,
    modelValueObj: r
  };
}
const xl = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
  <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0"/>
</svg>`, JM = {
  name: "ACheckbox",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    attributesFieldset: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    classDataParent: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => []
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_checkbox_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inline: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: void 0
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "value"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: Array,
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    search: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: void 0
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrder: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_",
        notElementsWithSearch: "_A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_",
        search: "_A_CHECKBOX_SEARCH_"
      })
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "focusin",
    "focusout",
    "onSearchOutside",
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      componentStyleHide: r
    } = Xt(e), {
      ariaDescribedbyLocal: s,
      changeModel: i,
      errorsId: o,
      helpTextId: u,
      htmlIdLocal: f,
      isErrors: A,
      onFocusin: E,
      onFocusout: p,
      rootRef: T
    } = zt(e, t), {
      textAfterLabel: S
    } = Qu(e), {
      dataAll: L,
      dataFromServer: b,
      dataExtraLocal: I,
      dataKeyByKeyIdLocal: v,
      dataLocal: R,
      hasDataExtra: g
    } = Zu(e), {
      loadDataFromServer: D,
      loadDataFromServerForSearchAPI: w,
      loadingDataFromServer: F,
      loadingSearchApi: P,
      onSearchInApi: M,
      searchApiLocal: O,
      updateUrlPropsComputed: q,
      urlPropsComputed: U
    } = zu(e, {
      changeModel: i,
      dataExtraLocal: I,
      dataFromServer: b
    }), {
      loadingLocal: G
    } = Ju(e, {
      loadingDataFromServer: F
    });
    Xu(t, {
      dataKeyByKeyIdLocal: v,
      dataLocal: R
    });
    const {
      dataSort: te
    } = Yu(e, {
      data: R
    }), {
      dataGrouped: ne,
      groupsForLever: oe,
      hasKeyGroup: se,
      keyGroupArray: ie
    } = Tf(e, {
      data: te
    }), {
      hasNotElementsExtraWithSearch: me,
      hasNotElementsWithSearch: Ve,
      idForButtonSearchOutside: Le,
      modelSearch: _e,
      modelSearchLowerCase: ve,
      modelSearchOutside: be,
      onSearchOutside: je,
      searching: Re,
      searchingElements: Z,
      searchingElementsExtra: H,
      searchingGroups: X,
      searchingGroupsWithSearchInGroup: ae,
      searchOutsideOrApi: ye,
      searchOutsideRef: Ce,
      updateModelSearch: qe,
      updateModelSearchOutside: Qe
    } = mf(e, t, {
      data: te,
      dataExtra: I,
      groupsForLever: oe,
      htmlIdLocal: f,
      hasKeyGroup: se,
      keyGroupArray: ie,
      searchApiLocal: O,
      onSearchInApi: M
    }), {
      onChangeModelValue: $e
    } = XM(e, {
      changeModel: i
    }), {
      iconCollapse: Fe,
      initIsCollapsedLocal: it,
      isCollapsedLocal: Ke,
      titleCollapse: lt,
      toggleCollapse: et
    } = Sf(e, t), {
      isModelValue: ht,
      modelValueFiltered: At,
      modelValueObj: xt
    } = ZM(e, {
      dataKeyByKeyIdLocal: v
    }), {
      groupId: tn
    } = Qc(e, {
      htmlIdLocal: f
    });
    return rt(U, q, {
      deep: !0
    }), it(), D(), w(), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      componentStyleHide: r,
      dataAll: L,
      dataExtraLocal: I,
      dataGrouped: ne,
      dataKeyByKeyIdLocal: v,
      dataSort: te,
      errorsId: o,
      groupId: tn,
      groupsForLever: oe,
      hasDataExtra: g,
      hasKeyGroup: se,
      hasNotElementsExtraWithSearch: me,
      hasNotElementsWithSearch: Ve,
      helpTextId: u,
      htmlIdLocal: f,
      iconCollapse: Fe,
      idForButtonSearchOutside: Le,
      isCollapsedLocal: Ke,
      isErrors: A,
      isModelValue: ht,
      loadingLocal: G,
      loadingSearchApi: P,
      modelSearch: _e,
      modelSearchLowerCase: ve,
      modelSearchOutside: be,
      modelValueFiltered: At,
      modelValueObj: xt,
      onChangeModelValue: $e,
      onFocusin: E,
      onFocusout: p,
      onSearchOutside: je,
      rootRef: T,
      searching: Re,
      searchingElements: Z,
      searchingElementsExtra: H,
      searchingGroups: X,
      searchingGroupsWithSearchInGroup: ae,
      searchOutsideOrApi: ye,
      searchOutsideRef: Ce,
      textAfterLabel: S,
      titleCollapse: lt,
      toggleCollapse: et,
      updateModelSearch: qe,
      updateModelSearchOutside: Qe
    };
  },
  render() {
    var e, t, n;
    return this.isRender ? this.readonly ? c(Sn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: void 0,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "checkbox"
    }, this.isModelValue ? () => [
      c("ul", {}, [
        this.modelValueFiltered.map((r, s) => c(Vo, {
          key: s,
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          dataItem: this.dataKeyByKeyIdLocal[r] || {},
          isButtonGroup: this.isButtonGroup,
          itemIndex: s,
          readonly: !0,
          slotName: this.slotName
        }, this.$slots))
      ])
    ] : "") : c("div", {
      ref: "rootRef",
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      onFocusin: this.onFocusin,
      onFocusout: this.onFocusout,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: [
          "a_form_element__parent",
          {
            a_checkbox_inline: this.inline,
            a_checkbox_control: this.hasControlCheckbox
          }
        ]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("fieldset", {
            id: this.htmlIdLocal,
            tabindex: -1,
            class: [
              "a_fieldset",
              this.classFieldset,
              {
                a_fieldset_no_border: !this.hasBorder,
                a_fieldset_invalid: this.isErrors,
                a_fieldset_collapsed: this.isCollapsedLocal
              }
            ],
            "aria-describedby": this.ariaDescribedbyLocal,
            ...this.attributesFieldset
          }, [
            this.label || this.labelScreenReader ? c(QT, {
              id: this.htmlIdLocal,
              alwaysTranslate: this.alwaysTranslate,
              data: this.dataAll,
              dataKeyByKeyId: this.dataKeyByKeyIdLocal,
              disabled: this.disabled,
              hasControlCheckbox: this.hasControlCheckbox,
              isErrors: this.isErrors,
              label: this.label,
              legendClass: this.labelClass,
              labelScreenReader: this.labelScreenReader,
              main: !0,
              modelValue: this.modelValue,
              modelValueObj: this.modelValueObj,
              textAfter: this.textAfterLabel,
              onChangeModelValue: this.onChangeModelValue
            }) : "",
            this.collapsible ? c(Ae, {
              "aria-controls": this.groupId,
              "aria-expanded": !this.isCollapsedLocal,
              alwaysTranslate: this.alwaysTranslate,
              class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
              iconLeft: this.iconCollapse,
              title: this.titleCollapse,
              textScreenReader: this.titleCollapse,
              type: "button",
              onClick: this.toggleCollapse
            }) : "",
            c("div", {
              id: this.groupId,
              class: "a_fieldset__content"
            }, [
              this.searchOutsideOrApi ? c("div", {
                class: "a_fieldset__search"
              }, [
                c("form", {
                  onSubmit: this.onSearchOutside
                }, [
                  c("div", {
                    class: "input-group"
                  }, [
                    c(yn, {
                      alwaysTranslate: this.alwaysTranslate,
                      label: ((e = this.texts) == null ? void 0 : e.search) || "_A_CHECKBOX_SEARCH_",
                      inputClass: "a_select__element_clickable",
                      modelValue: this.modelSearchOutside,
                      modelUndefined: "",
                      "onUpdate:modelValue": this.updateModelSearchOutside
                    }),
                    c(Ae, {
                      alwaysTranslate: this.alwaysTranslate,
                      ariaDisabled: this.loadingSearchApi,
                      disabled: this.disabled,
                      class: "a_btn a_btn_primary",
                      type: "submit",
                      iconLeft: xl
                    })
                  ])
                ])
              ]) : "",
              this.search ? c(yn, {
                alwaysTranslate: this.alwaysTranslate,
                label: ((t = this.texts) == null ? void 0 : t.search) || "_A_CHECKBOX_SEARCH_",
                class: "a_fieldset__search",
                modelValue: this.modelSearch,
                modelUndefined: "",
                "onUpdate:modelValue": this.updateModelSearch
              }) : "",
              this.loadingLocal ? c(Ll) : "",
              this.hasDataExtra ? c("div", {
                class: "a_checkbox__data_extra"
              }, [
                ...this.dataExtraLocal.map((r, s) => c(Vo, {
                  key: s,
                  id: this.htmlIdLocal,
                  alwaysTranslate: this.alwaysTranslate,
                  idSuffix: "extra",
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataItem: r,
                  disabled: this.disabled,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  itemIndex: s,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElementsExtra,
                  searchTextInHtml: this.searchTextInHtml,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.hasNotElementsExtraWithSearch ? "" : c("div", {
                  class: "a_divider",
                  ariaHidden: !0
                })
              ]) : "",
              c("div", {}, this.hasKeyGroup ? [
                c(tf, {
                  id: `${this.htmlIdLocal}_lev_0`,
                  alwaysTranslate: this.alwaysTranslate,
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataGrouped: this.dataGrouped,
                  disabled: this.disabled,
                  hasControlCheckbox: this.hasControlCheckbox,
                  groupsForLever: this.groupsForLever,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  levelIndex: 0,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  modelValueObj: this.modelValueObj,
                  searching: this.searching,
                  searchingElements: this.searchingElements,
                  searchingGroups: this.searchingGroups,
                  searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                  searchTextInHtml: this.searchTextInHtml,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  type: "checkbox",
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)
              ] : [
                c("div", {
                  class: [
                    "a_checkbox_data",
                    {
                      a_btn_group: this.isButtonGroup
                    },
                    this.classDataParent
                  ]
                }, [
                  ...this.dataSort.map((r, s) => c(Vo, {
                    key: s,
                    id: this.htmlIdLocal,
                    alwaysTranslate: this.alwaysTranslate,
                    classButtonGroupDefault: this.classButtonGroupDefault,
                    dataItem: r,
                    disabled: this.disabled,
                    isButtonGroup: this.isButtonGroup,
                    isErrors: this.isErrors,
                    isWidthAuto: this.isWidthAuto,
                    itemIndex: s,
                    keyDisabled: this.keyDisabled,
                    keyTitle: this.keyTitle,
                    keyTitleCallback: this.keyTitleCallback,
                    modelSearch: this.modelSearchLowerCase,
                    modelValue: this.modelValue,
                    searching: this.searching,
                    searchingElements: this.searchingElements,
                    searchTextInHtml: this.searchTextInHtml,
                    slotAppendName: this.slotAppendName,
                    slotName: this.slotName,
                    onChangeModelValue: this.onChangeModelValue
                  }, this.$slots))
                ])
              ]),
              !this.dataSort.length || this.hasNotElementsWithSearch ? c(Ee, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_form__not_elements",
                text: ((n = this.texts) == null ? void 0 : n.notElementsWithSearch) || "_A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_"
              }) : ""
            ])
          ])
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function QM({ emit: e }) {
  return {
    onChangeModelValue: (n) => {
      e("changeModelValue", n);
    }
  };
}
function eF(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = d(e, "modelValue");
  return {
    isChecked: _(() => Te(n.value) ? n.value.indexOf(t.value) !== -1 : n.value === t.value)
  };
}
function tF(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: s = _(() => {
  })
}) {
  const i = d(e, "dataItem"), o = (f) => {
    if (n.value || r.value) {
      f.preventDefault(), f.stopPropagation();
      return;
    }
    t("changeModelValue", {
      model: s.value,
      item: i.value,
      $event: f
    }), f.preventDefault(), f.stopPropagation();
  };
  return {
    onClick: o,
    onKeydown: (f) => {
      (f.key === "Enter" || f.keyCode === J.space) && (o(f), f.stopPropagation(), f.preventDefault());
    }
  };
}
const Wo = {
  name: "ARadioItem",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: s
    } = Xc(e), {
      classButton: i
    } = YT(e), {
      isChecked: o
    } = eF(e, {
      valueLocal: s
    }), {
      disabledElement: u
    } = Zc(e), {
      onClick: f,
      onKeydown: A
    } = tF(e, t, {
      disabledElement: u,
      isChecked: o,
      valueLocal: s
    }), {
      currentLabelFiltered: E,
      styleWithSearch: p
    } = Jc(e, {
      labelLocal: r,
      valueLocal: s
    }), {
      titleLocal: T
    } = XT(e);
    return {
      classButton: i,
      currentLabelFiltered: E,
      disabledElement: u,
      idLocal: n,
      isChecked: o,
      labelLocal: r,
      onClick: f,
      onKeydown: A,
      styleWithSearch: p,
      titleLocal: T,
      valueLocal: s
    };
  },
  render() {
    return this.readonly ? c(Ae, {
      alwaysTranslate: this.alwaysTranslate,
      classDefault: "",
      extra: {
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      },
      tag: "span",
      title: this.titleLocal,
      type: "text"
    }, () => [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : this.labelLocal && Dt(c("span", {
        class: "a_custom_control_label__text"
      }), [
        [Kt, this.currentLabelFiltered]
      ])
    ]) : this.isButtonGroup ? [
      c("input", {
        id: this.idLocal,
        checked: this.isChecked,
        class: "a_btn_check",
        disabled: this.disabledElement,
        name: this.id,
        style: this.styleWithSearch,
        type: "radio",
        value: this.valueLocal,
        onClick: this.onClick,
        onKeydown: this.onKeydown
      }),
      c(Ae, {
        alwaysTranslate: this.alwaysTranslate,
        class: this.classButton,
        classDefault: "",
        extra: {
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        },
        for: this.idLocal,
        tag: "label",
        title: this.titleLocal,
        type: "button"
      }, () => [
        this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          id: this.id,
          item: this.dataItem,
          itemIndex: this.itemIndex,
          label: this.labelLocal,
          labelFiltered: this.currentLabelFiltered
        }) : this.labelLocal && Dt(c("span", {}), [
          [Kt, this.currentLabelFiltered]
        ])
      ])
    ] : [
      c("div", {
        class: ["a_custom_control a_custom_radio", {
          a_custom_control_invalid: this.isErrors
        }],
        style: this.styleWithSearch
      }, [
        c("input", {
          id: this.idLocal,
          checked: this.isChecked,
          class: "a_custom_control_input",
          disabled: this.disabledElement,
          name: this.id,
          type: "radio",
          value: this.valueLocal,
          onClick: this.onClick,
          onKeydown: this.onKeydown
        }),
        c(Ae, {
          alwaysTranslate: this.alwaysTranslate,
          class: {
            a_custom_control_label: !0,
            a_custom_control_label_width_auto: this.isWidthAuto
          },
          classDefault: "",
          extra: {
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          },
          for: this.idLocal,
          tag: "label",
          title: this.titleLocal,
          type: "button"
        }, () => [
          this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            id: this.id,
            item: this.dataItem,
            itemIndex: this.itemIndex,
            label: this.labelLocal,
            labelFiltered: this.currentLabelFiltered
          }) : this.labelLocal && Dt(c("span", {
            class: "a_custom_control_label__text"
          }), [
            [Kt, this.currentLabelFiltered]
          ])
        ])
      ]),
      this.slotAppendName && this.$slots[this.slotAppendName] ? this.$slots[this.slotAppendName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        isChecked: this.isChecked,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered
      }) : ""
    ];
  }
};
function nF(e) {
  const t = d(e, "ariLabel");
  return {
    attributesAriaLabelHidden: _(() => t.value ? {
      ariaLabel: t.value
    } : {
      ariaHidden: !0
    })
  };
}
function rF(e, {
  isIconSvg: t = _(() => !1)
}) {
  const n = d(e, "icon");
  return {
    iconClass: _(() => {
      if (!t.value)
        return `a_icon_${n.value || "_NoImage"}`;
    })
  };
}
const aF = `<svg
   xmlns="http://www.w3.org/2000/svg"
   viewBox="0 0 18 18"
   height="18"
   width="18"
>
  <g
   transform="matrix(0.26617655,0,0,0.26617655,-33.607656,-85.223817)"
  >
    <path
      style="fill:#35495e;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 139.13004,365.87267 -4.53409,7.81862 h 51.05837 l -4.53409,-7.81862 z"
    />
    <path
      style="fill:#41b883;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 134.59595,373.69129 -4.51704,7.7892 h 60.09245 l -4.51704,-7.7892 z"
    />
    <path
      style="fill:#41b883;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 160.07266,329.49377 -16.90595,29.1543 -16.90594,29.15378 h 7.67291 l 13.03745,-22.48287 13.03745,-22.48236 13.03745,22.48236 13.03744,22.48287 h 7.80159 l -16.90594,-29.15378 z"
    />
    <path
      style="fill:#35495e;fill-opacity:1;stroke:#ff0000;stroke-width:0;stroke-linejoin:miter;stroke-miterlimit:0;stroke-dasharray:none"
      d="m 160.00903,342.83634 -13.03745,22.48287 -13.03796,22.48286 h 8.03103 l 9.02632,-15.56546 9.02581,-15.56494 9.02632,15.56494 9.02581,15.56546 h 8.01501 l -13.03744,-22.48286 z"
    />
  </g>
</svg>`, sF = `<svg
  xmlns="http://www.w3.org/2000/svg"
  version="1.1"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <path
    d="M 14.204045,11.607942 C 15.968997,11.607942 17.4,13.038977 17.4,14.80397 17.4,16.568964 15.968997,18 14.204045,18 12.439093,18 11.00809,16.568964 11.00809,14.80397 c 0,-1.764993 1.431003,-3.196028 3.195955,-3.196028 z M 1.7468526,0 H 15.702424 c 0.317838,0 0.601987,0.13036037 0.809974,0.33688648 0.207986,0.20799097 0.336879,0.49654172 0.336879,0.80999272 V 11.401416 C 16.488962,11.121653 16.081779,10.89755 15.640907,10.745219 V 1.4251769 c 0,-0.062983 -0.02344,-0.1157132 -0.06738,-0.1537962 -0.03808,-0.038083 -0.09667,-0.067377 -0.153792,-0.067377 H 2.0192852 c -0.062982,0 -0.1157107,0.023436 -0.1537926,0.067377 -0.038082,0.038083 -0.067375,0.095207 -0.067375,0.1537962 V 11.681178 h 0.00439 L 6.4851264,7.1976561 c 0.1874805,-0.1728376 0.4818832,-0.153796 0.6503226,0.033689 0.00439,0.00439 0.00439,0.010252 0.010252,0.010252 l 3.937088,4.6578239 c -0.692799,0.758727 -1.116094,1.769387 -1.116094,2.878184 0,0.481894 0.08056,0.944747 0.227027,1.376841 H 1.7468526 c -0.3178379,0 -0.6019878,-0.130361 -0.8099738,-0.336887 C 0.7288927,15.611034 0.6,15.321018 0.6,15.007567 V 1.1468792 C 0.6,0.82903398 0.7303573,0.54487745 0.9368788,0.33688648 1.1434002,0.12889569 1.4334089,0 1.7468526,0 Z m 9.6523104,11.585971 0.543401,-3.3381075 c 0.04394,-0.2504678 0.279755,-0.42477 0.530217,-0.3808284 0.09667,0.014647 0.183086,0.062984 0.250463,0.1259664 l 2.50462,2.6321095 c -0.319302,-0.07616 -0.650322,-0.115713 -0.993061,-0.115713 -1.088264,-0.0015 -2.081324,0.405729 -2.83564,1.076573 z m 1.171752,-8.9582554 c 0.458448,0 0.87735,0.1874847 1.176147,0.4862886 0.303191,0.3031979 0.486278,0.717715 0.486278,1.1761738 0,0.4584587 -0.187481,0.8773698 -0.486278,1.1761737 -0.303191,0.3031979 -0.717699,0.4862888 -1.176147,0.4862888 -0.458447,0 -0.87735,-0.1874849 -1.176146,-0.4862888 -0.303191,-0.3031979 -0.486277,-0.717715 -0.486277,-1.1761737 0,-0.4584588 0.18748,-0.8773701 0.486277,-1.1761738 0.303191,-0.3031981 0.719163,-0.4862886 1.176146,-0.4862886 z m 0.562442,10.2325654 2.923522,3.163805 c 0.231421,-0.350069 0.366173,-0.76898 0.366173,-1.220116 0,-1.224509 -0.99306,-2.217592 -2.217542,-2.217592 -0.389608,-0.0015 -0.754315,0.09814 -1.072153,0.273903 z m 2.141377,3.885914 -2.923522,-3.163805 c -0.231421,0.350069 -0.366172,0.768981 -0.366172,1.220116 0,1.224509 0.99306,2.217593 2.217541,2.217593 0.389607,0.0015 0.754316,-0.09814 1.072153,-0.273904 z"
  />
</svg>`, ml = B({
  icons: {
    _NoImage: sF,
    Aloha: aF
  }
}), _fe = {
  install: (e, {
    icons: t = {}
  } = {}) => {
    ml.value.icons = {
      ...ml.value.icons,
      ...t
    };
  }
};
function iF(e) {
  const t = d(e, "icon"), {
    isMobileWidth: n
  } = Tn(), r = _(() => at(t.value) ? n.value ? t.value.mobile : t.value.desktop : t.value), s = _(() => !le(r.value) && r.value !== ""), i = _(() => {
    const u = r.value;
    return !!(ot(u) && u.trim().startsWith("<svg"));
  }), o = _(() => {
    if (i.value)
      return r.value;
    const u = ml.value.icons[r.value];
    return u || ml.value.icons._NoImage;
  });
  return {
    hasIcon: s,
    iconSvg: o,
    isIconSvg: i
  };
}
const _t = {
  name: "AIcon",
  props: {
    ariLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    icon: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: "i"
    },
    isSaveHtml: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  setup(e) {
    const {
      attributesAriaLabelHidden: t
    } = nF(e), {
      hasIcon: n,
      iconSvg: r,
      isIconSvg: s
    } = iF(e), {
      iconClass: i
    } = rF(e, {
      isIconSvg: s
    });
    return {
      attributesAriaLabelHidden: t,
      hasIcon: n,
      iconClass: i,
      iconSvg: r
    };
  },
  render() {
    if (this.hasIcon)
      return this.isSaveHtml ? c(this.iconTag, {
        class: ["a_icon", this.iconClass],
        innerHTML: this.iconSvg,
        ...this.attributesAriaLabelHidden
      }) : Dt(c(this.iconTag, {
        class: ["a_icon", this.iconClass],
        ...this.attributesAriaLabelHidden
      }), [
        [Kt, this.iconSvg]
      ]);
  }
};
function lF(e, {
  valueLocal: t = _(() => {
  })
}) {
  const n = d(e, "type"), r = d(e, "modelValue");
  return {
    isChecked: _(() => n.value === "multiselect" ? !!(r.value && r.value.indexOf(t.value) !== -1) : r.value === t.value)
  };
}
function oF(e, { emit: t }, {
  disabledElement: n = _(() => {
  }),
  isChecked: r = _(() => !1),
  valueLocal: s = _(() => {
  })
}) {
  const i = (u) => {
    n.value || (t("changeModelValue", {
      currentValue: s.value,
      $event: u,
      isSelected: r.value
    }), u.stopPropagation(), u.preventDefault());
  };
  return {
    onClick: i,
    onKeydown: (u) => {
      n.value || (u.keyCode === J.enter || u.keyCode === J.space) && i(u);
    }
  };
}
const ef = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-lg" viewBox="0 0 16 16">
  <path d="M12.736 3.97a.733.733 0 0 1 1.047 0c.286.289.29.756.01 1.05L7.88 12.01a.733.733 0 0 1-1.065.02L3.217 8.384a.757.757 0 0 1 0-1.06.733.733 0 0 1 1.047 0l3.052 3.093 5.4-6.425z"/>
</svg>`, Go = {
  name: "ASelectElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    dataItem: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1
    },
    showElementWennGroupFound: {
      type: Boolean,
      required: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      idLocal: n,
      labelLocal: r,
      valueLocal: s
    } = Xc(e), {
      isChecked: i
    } = lF(e, {
      valueLocal: s
    }), {
      disabledElement: o
    } = Zc(e), {
      onClick: u,
      onKeydown: f
    } = oF(e, t, {
      disabledElement: o,
      isChecked: i,
      valueLocal: s
    }), {
      currentLabelFiltered: A,
      dataHideWithSearch: E,
      styleWithSearch: p
    } = Jc(e, {
      labelLocal: r,
      valueLocal: s
    });
    return {
      currentLabelFiltered: A,
      dataHideWithSearch: E,
      disabledElement: o,
      idLocal: n,
      isChecked: i,
      labelLocal: r,
      onClick: u,
      onKeydown: f,
      styleWithSearch: p
    };
  },
  render() {
    return c("div", {
      ariaSelected: this.isChecked,
      class: ["a_select__menu__link a_select__element_clickable", {
        a_select__menu__link_selected: this.isChecked,
        a_select__menu__link_disabled: this.disabledElement
      }],
      "data-hide": this.dataHideWithSearch,
      disabled: this.disabledElement,
      role: "option",
      style: this.styleWithSearch,
      tabindex: "-1",
      onClick: this.onClick,
      onKeydown: this.onKeydown
    }, [
      c("span", {
        class: "a_select__menu__link__icon_box"
      }, [
        this.isChecked && c(_t, {
          icon: ef
        })
      ]),
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.id,
        item: this.dataItem,
        itemIndex: this.itemIndex,
        label: this.labelLocal,
        labelFiltered: this.currentLabelFiltered,
        inDropdown: !0
      }) : Dt(c("span"), [
        [Kt, this.currentLabelFiltered]
      ])
    ]);
  }
};
function uF(e) {
  const t = d(e, "type"), n = _(() => t.value === "select" || t.value === "multiselect");
  return {
    currentComponent: _(() => t.value === "radio" ? Wo : t.value === "checkbox" ? Vo : n.value ? Go : ""),
    isComponentSelect: n
  };
}
function _F(e) {
  const t = d(e, "levelIndex"), n = d(e, "groupsForLever"), r = d(e, "groupParentKey"), s = _(() => !!n.value[t.value]);
  return {
    currentGroups: _(() => {
      const o = n.value[t.value];
      return le(r.value) ? o : Lt(n.value[t.value], ["groupParentKey", r.value]);
    }),
    isComponentVisible: s
  };
}
const tf = {
  name: "ACheckboxRadioGroups",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    dataGrouped: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    groupParentKey: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    groupsForLever: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    hasControlCheckbox: {
      type: Boolean,
      required: !1,
      default: !1
    },
    hideParentWithSearch: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1
    },
    isErrors: {
      type: Boolean,
      required: !1
    },
    isHiddenWithSearch: {
      type: Boolean,
      required: !1
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    levelIndex: {
      type: Number,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !0
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1
    },
    modelValueObj: {
      type: Object,
      required: !1,
      default: void 0
    },
    searching: {
      type: Boolean,
      required: !1
    },
    searchingElements: {
      type: Object,
      required: !0
    },
    searchingGroups: {
      type: Object,
      required: !0
    },
    searchingGroupsWithSearchInGroup: {
      type: Object,
      required: !0
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !0,
      validator: (e) => ["radio", "checkbox", "select", "multiselect"].indexOf(e) !== -1
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, t) {
    const {
      onChangeModelValue: n
    } = QM(t), {
      currentComponent: r,
      isComponentSelect: s
    } = uF(e), {
      isComponentVisible: i,
      currentGroups: o
    } = _F(e);
    return {
      currentComponent: r,
      currentGroups: o,
      isComponentSelect: s,
      isComponentVisible: i,
      onChangeModelValue: n
    };
  },
  render() {
    return this.isComponentVisible ? [
      ...this.currentGroups.map((e, t) => {
        let n, r = !1, s = !1;
        if (this.searching) {
          const i = `${this.groupParentKey ? `${this.groupParentKey}_` : ""}${e.groupKey}`;
          s = this.searchingGroupsWithSearchInGroup[i], (this.isHiddenWithSearch || !this.searchingGroups[i] && !s) && (n = "display: none;", r = !0);
        }
        return e.groupKey === "_not_grouped" ? c("div", {
          class: [
            "a_checkbox_radio_group__data",
            {
              a_btn_group: this.isButtonGroup
            }
          ],
          style: n
        }, [
          ...this.dataGrouped[e.allGroupKeys].map((i, o) => c(this.currentComponent, {
            id: `${this.id}`,
            alwaysTranslate: this.alwaysTranslate,
            classButtonGroupDefault: this.isComponentSelect ? void 0 : this.classButtonGroupDefault,
            dataItem: i,
            disabled: this.disabled,
            isButtonGroup: this.isComponentSelect ? void 0 : this.isButtonGroup,
            isErrors: this.isComponentSelect ? void 0 : this.isErrors,
            isHiddenWithSearch: r,
            isWidthAuto: this.isComponentSelect ? void 0 : this.isWidthAuto,
            itemIndex: o,
            keyDisabled: this.keyDisabled,
            keyDisabledCallback: this.keyDisabledCallback,
            keyTitle: this.keyTitle,
            keyTitleCallback: this.keyTitleCallback,
            modelSearch: this.modelSearch,
            modelValue: this.modelValue,
            searching: this.searching,
            searchingElements: this.searchingElements,
            searchTextInHtml: this.searchTextInHtml,
            showElementWennGroupFound: s,
            slotAppendName: this.slotAppendName,
            slotName: this.slotName,
            type: this.type,
            onChangeModelValue: this.onChangeModelValue
          }, this.$slots))
        ]) : c("fieldset", {
          class: "a_fieldset",
          style: n
        }, [
          c(QT, {
            id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}`,
            alwaysTranslate: this.alwaysTranslate,
            data: e.data,
            dataKeyByKeyId: e.dataKeyByKeyId,
            disabled: this.disabled,
            hasControlCheckbox: this.hasControlCheckbox,
            isErrors: this.isErrors,
            label: e.groupLabel,
            modelSearch: this.modelSearch,
            modelValue: this.modelValue,
            modelValueObj: this.modelValueObj,
            showSearchHighlight: s,
            onChangeModelValue: this.onChangeModelValue
          }),
          c("div", {
            id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}_group`,
            "aria-labelledby": `${this.id}_lev_${this.levelIndex + 1}_gr_${t}_legend`,
            role: "group"
          }, [
            !!(this.dataGrouped[e.allGroupKeys] || []).length && c("div", {
              class: [
                "a_checkbox_radio_group__data",
                {
                  a_btn_group: this.isButtonGroup
                }
              ]
            }, [
              ...(this.dataGrouped[e.allGroupKeys] || []).map((i, o) => c(this.currentComponent, {
                id: `${this.id}_gr_${t}`,
                alwaysTranslate: this.alwaysTranslate,
                classButtonGroupDefault: this.isComponentSelect ? void 0 : this.classButtonGroupDefault,
                dataItem: i,
                disabled: this.disabled,
                isButtonGroup: this.isComponentSelect ? void 0 : this.isButtonGroup,
                isErrors: this.isComponentSelect ? void 0 : this.isErrors,
                isHiddenWithSearch: r,
                isWidthAuto: this.isComponentSelect ? void 0 : this.isWidthAuto,
                itemIndex: o,
                keyDisabled: this.keyDisabled,
                keyDisabledCallback: this.keyDisabledCallback,
                keyTitle: this.keyTitle,
                keyTitleCallback: this.keyTitleCallback,
                modelSearch: this.modelSearch,
                modelValue: this.modelValue,
                searching: this.searching,
                searchingElements: this.searchingElements,
                searchTextInHtml: this.searchTextInHtml,
                showElementWennGroupFound: s,
                slotAppendName: this.slotAppendName,
                slotName: this.slotName,
                type: this.type,
                onChangeModelValue: this.onChangeModelValue
              }, this.$slots))
            ]),
            c(kr("ACheckboxRadioGroups"), {
              id: `${this.id}_lev_${this.levelIndex + 1}_gr_${t}`,
              alwaysTranslate: this.alwaysTranslate,
              classButtonGroupDefault: this.classButtonGroupDefault,
              dataGrouped: this.dataGrouped,
              disabled: this.disabled,
              groupParentKey: e.groupKey,
              groupsForLever: this.groupsForLever,
              hasControlCheckbox: this.hasControlCheckbox,
              isButtonGroup: this.isButtonGroup,
              isErrors: this.isErrors,
              isHiddenWithSearch: r,
              isWidthAuto: this.isWidthAuto,
              keyDisabled: this.keyDisabled,
              keyDisabledCallback: this.keyDisabledCallback,
              keyTitle: this.keyTitle,
              keyTitleCallback: this.keyTitleCallback,
              levelIndex: this.levelIndex + 1,
              modelSearch: this.modelSearch,
              modelValue: this.modelValue,
              modelValueObj: this.modelValueObj,
              searching: this.searching,
              searchingElements: this.searchingElements,
              searchingGroups: this.searchingGroups,
              searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
              searchTextInHtml: this.searchTextInHtml,
              slotName: this.slotName,
              slotAppendName: this.slotAppendName,
              type: this.type,
              onChangeModelValue: this.onChangeModelValue
            }, this.$slots)
          ])
        ]);
      })
    ] : null;
  }
};
function eS(e) {
  const t = d(e, "align"), n = d(e, "size"), r = d(e, "textAlign"), s = _(() => `a_text_${t.value}`), i = _(() => r.value === "left" ? "a_cloak__box_text_left" : "a_cloak__box_text_right"), o = _(() => `a_fs_${n.value}`);
  return {
    classAlign: s,
    classForBox: i,
    classTextSize: o
  };
}
const Da = B({
  propsDefault: {
    align: "center",
    extra: void 0,
    size: 6,
    tag: "div",
    text: "_A_CLOAK_LOADING_",
    textAlign: "right"
  }
}), dfe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Da.value.propsDefault = {
      ...Da.value.propsDefault,
      ...t
    };
  }
}, $n = B({
  propsDefault: {
    ariaLabel: "_A_SPINNER_LOADING_",
    class: "a_spinner",
    extra: void 0,
    safeHtml: "",
    size: void 0,
    tag: "span"
  }
}), cfe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    $n.value.propsDefault = {
      ...$n.value.propsDefault,
      ...t
    };
  }
}, Ll = {
  name: "ACloak",
  props: {
    align: {
      type: String,
      required: !1,
      default: () => Da.value.propsDefault.align,
      validator: (e) => ["left", "center", "right"].indexOf(e) !== -1
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: Da.value.propsDefault.extra
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => Da.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    spinnerClass: {
      type: [String, Object],
      required: !1,
      default: () => $n.value.propsDefault.class
    },
    spinnerSafeHtml: {
      type: String,
      required: !1,
      default: () => $n.value.propsDefault.safeHtml
    },
    spinnerTag: {
      type: String,
      required: !1,
      default: () => $n.value.propsDefault.tag
    },
    tag: {
      type: String,
      required: !1,
      default: () => Da.value.propsDefault.tag
    },
    text: {
      type: String,
      required: !1,
      default: () => Da.value.propsDefault.text
    },
    textAlign: {
      type: String,
      required: !1,
      default: () => Da.value.propsDefault.textAlign,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    }
  },
  setup(e) {
    const {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    } = eS(e);
    return {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    };
  },
  render() {
    const e = this.textAlign === "left", t = c(Ee, {
      alwaysTranslate: this.alwaysTranslate,
      tag: "span",
      class: [
        "a_cloak__text",
        e ? "a_cloak__text_left" : "a_cloak__text_right",
        this.classTextSize
      ],
      text: this.text,
      extra: this.extra
    });
    return c(
      this.tag,
      {
        role: "status",
        class: this.classAlign
      },
      [
        c("div", {
          class: ["a_cloak__box", this.classForBox]
        }, [
          e ? t : "",
          c(Il, {
            alwaysTranslate: this.alwaysTranslate,
            class: [
              "a_cloak__spinner",
              this.spinnerClass
            ],
            "aria-hidden": "true",
            safeHtml: this.spinnerSafeHtml,
            size: this.size,
            tag: this.spinnerTag
          }),
          e ? "" : t
        ])
      ]
    );
  }
}, nf = {
  props: {
    id: {
      type: String,
      required: !0
    }
  },
  computed: {
    idForHeader() {
      return `${this.id}_header`;
    },
    nameForEventBusDestroyKeyDownEvent() {
      return `${this.id}DestroyKeyDown`;
    },
    attributesForMainElement() {
      return this.idForFocus ? {
        "aria-activedescendant": this.idForFocus
      } : {};
    }
  },
  created() {
    this.setEventBus();
  },
  beforeUnmount() {
    this.destroyEventBus(), this.destroyListenerForPressButtons();
  },
  methods: {
    setEventBus() {
      Rt.$on(this.nameForEventBusDestroyKeyDownEvent, this.destroyListenerForPressButtons);
    },
    emitEventBusDestroyAllListenerForPressButtonsForPanels() {
      Rt.$emit(this.nameForEventBusDestroyKeyDownEvent);
    },
    destroyEventBus() {
      Rt.$off(this.nameForEventBusDestroyKeyDownEvent, this.destroyListenerForPressButtons);
    },
    setListenerForPressButtons() {
      document.addEventListener("keydown", this.pressButton);
    },
    destroyListenerForPressButtons() {
      document.removeEventListener("keydown", this.pressButton), this.destroyListenerForPressButtonsCallback();
    },
    stopCurrentEvent(e) {
      e.preventDefault(), e.stopPropagation();
    },
    setFocusToElementWithTimeout(e) {
      setTimeout(() => {
        const t = document.getElementById(e);
        t && t.focus();
      });
    },
    destroyListenerForPressButtonsCallback() {
    }
  }
};
function _u(e) {
  return Object.prototype.toString.call(e) === "[object Object]";
}
function Xd(e) {
  return e instanceof Date;
}
function yr(e) {
  return e == null ? !1 : !isNaN(new Date(e).getTime());
}
function dF(e) {
  return Array.isArray(e) && e.length === 2 && yr(e[0]) && yr(e[1]) && new Date(e[1]).getTime() >= new Date(e[0]).getTime();
}
function du(e, t) {
  if (!e)
    return "";
  try {
    return Fn(e).format(t);
  } catch {
    return "";
  }
}
function UE(e, t, n) {
  try {
    return Fn(e, n).format(t) || null;
  } catch {
    return null;
  }
}
const kE = {
  name: "APanelDate",
  mixins: [
    nf
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    startAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    endAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    dateFormat: {
      type: String,
      default: "YYYY-MM-DD"
    },
    calendarMonth: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getMonth()
    },
    calendarYear: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getFullYear()
    },
    firstDayOfWeek: {
      default: 7,
      type: Number,
      validator: (e) => e >= 1 && e <= 7
    },
    disabledDate: {
      type: Function,
      default: () => !1
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "handleIconMonth",
    "select"
  ],
  data() {
    return {
      dayForFocusButton: void 0
    };
  },
  computed: {
    ths() {
      return this.getDays(this.firstDayOfWeek);
    },
    dates() {
      return this.getDates(this.calendarYear, this.calendarMonth, this.firstDayOfWeek);
    },
    trsWithTds() {
      const e = [];
      for (let t = 0; t < 6; t++) {
        const n = [];
        this.dates.slice(7 * t, 7 * t + 7).forEach((r) => {
          const s = this.isCurrentDayToday(r), i = this.getCellTime(r), o = this.disabledDate(i);
          n.push({
            class: this.getCellClasses({
              cellTime: i,
              isToday: s,
              month: r.month
            }),
            id: this.getId({
              month: r.month,
              day: r.day
            }),
            year: r.year,
            month: r.month,
            fullDate: this.getCellTitle(r),
            date: r,
            label: r.day,
            isToday: s,
            isDisabled: o,
            isCurrentMonth: r.month === this.calendarMonth
          });
        }), e.push(n);
      }
      return e;
    },
    dayFromValueOrToday() {
      return this.dayFromValue || (/* @__PURE__ */ new Date()).getDate();
    },
    dayFromValue() {
      return this.value ? new Date(this.value).getDate() : "";
    },
    idForFocus() {
      return this.dayForFocusButton ? `${this.id}_${this.dayForFocusButton}` : "";
    },
    daysInMonth() {
      return Fn(`${this.calendarYear}_${this.calendarMonth + 1}`, "YYYY-MM").daysInMonth();
    },
    todayTranslate() {
      return this.currentLanguage.today;
    }
  },
  methods: {
    selectDate(e, { year: t, month: n, day: r }) {
      e.stopPropagation();
      const s = new Date(t, n, r);
      this.disabledDate(s) || this.$emit("select", s);
    },
    getDays(e) {
      const t = this.currentLanguage.days, n = parseInt(e, 10);
      return t.concat(t).slice(n, n + 7);
    },
    getDates(e, t, n) {
      const r = [], s = new Date(e, t);
      s.setDate(0);
      const i = (s.getDay() + 7 - n) % 7 + 1, o = s.getDate() - (i - 1);
      for (let A = 0; A < i; A++)
        r.push({ year: e, month: t - 1, day: o + A });
      s.setMonth(s.getMonth() + 2, 0);
      const u = s.getDate();
      for (let A = 0; A < u; A++)
        r.push({ year: e, month: t, day: 1 + A });
      s.setMonth(s.getMonth() + 1, 1);
      const f = 42 - (i + u);
      for (let A = 0; A < f; A++)
        r.push({ year: e, month: t + 1, day: 1 + A });
      return r;
    },
    isCurrentDayToday({ year: e, month: t, day: n }) {
      const r = this.getCellTime({ year: e, month: t, day: n }), s = (/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0);
      return r === s;
    },
    getCellClasses({ cellTime: e, isToday: t, month: n }) {
      const r = [], s = this.value && new Date(this.value).setHours(0, 0, 0, 0), i = this.startAt && new Date(this.startAt).setHours(0, 0, 0, 0), o = this.endAt && new Date(this.endAt).setHours(0, 0, 0, 0);
      return n < this.calendarMonth ? r.push("last-month") : n > this.calendarMonth ? r.push("next-month") : r.push("cur-month"), t && r.push("today"), this.disabledDate(e) && r.push("disabled"), s && (e === s ? r.push("actived") : (i && e <= s || o && e >= s) && r.push("inrange")), r.join(" ");
    },
    getCellTime({ year: e, month: t, day: n }) {
      return new Date(e, t, n).getTime();
    },
    getCellTitle({ year: e, month: t, day: n }) {
      return du(new Date(e, t, n), this.dateFormat);
    },
    getId({ month: e, day: t }) {
      let n = `${this.id}_${t}`;
      return e < this.calendarMonth ? n += "_last_month" : e > this.calendarMonth && (n += "_next_month"), n;
    },
    setFocusToActiveDay() {
      setTimeout(() => {
        this.setDefaultDayForFocusButton(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultDayForFocusButton() {
      this.dayForFocusButton = this.dayFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === J.arrowUp ? (this.setFocusToPast(7), this.stopCurrentEvent(e)) : t === J.arrowDown ? (this.setFocusToFuture(7), this.stopCurrentEvent(e)) : t === J.arrowLeft ? (this.setFocusToPast(1), this.stopCurrentEvent(e)) : t === J.arrowRight && (this.setFocusToFuture(1), this.stopCurrentEvent(e));
    },
    setFocusToPast(e) {
      const t = this.dayForFocusButton - e;
      t > 0 ? this.dayForFocusButton = t : (this.$emit("handleIconMonth", -1), setTimeout(() => {
        this.dayForFocusButton = this.daysInMonth - Math.abs(t);
      })), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToFuture(e) {
      const t = this.dayForFocusButton + e;
      if (t <= this.daysInMonth)
        this.dayForFocusButton = t;
      else {
        const n = this.daysInMonth;
        this.$emit("handleIconMonth", 1), this.dayForFocusButton = t - n;
      }
      this.setFocusToElementWithTimeout(this.idForFocus);
    },
    destroyListenerForPressButtonsCallback() {
      this.dayForFocusButton = void 0;
    }
  },
  render() {
    return c("table", {
      class: "pux_datepicker__panel pux_datepicker__panel_date",
      role: "grid",
      ariaReadonly: !0,
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      c("thead", null, [
        c("tr", null, [
          this.ths.map((e, t) => c("th", {
            key: t,
            ariaLabel: e.longName
          }, e.shortName))
        ])
      ]),
      c("tbody", null, [
        this.trsWithTds.map((e, t) => c("tr", {
          key: t
        }, [
          e.map((n, r) => c("td", {
            key: r,
            class: ["cell", n.class, {
              pux_datepicker__panel__cell_focus: n.id === this.idForFocus
            }]
          }, [
            c("button", {
              id: n.id,
              class: "pux_datepicker__panel__button",
              type: "button",
              tabindex: -1,
              ariaHidden: !0,
              ariaSelected: !!(n.isCurrentMonth && n.label === this.dayFromValue),
              onClick: (s) => this.selectDate(s, n.date)
            }, [
              c("span", {
                ariaHidden: !0
              }, n.label),
              c("span", {
                class: "a_sr_only"
              }, n.fullDate),
              n.isToday && c("span", {
                class: "a_sr_only"
              }, this.todayTranslate)
            ])
          ]))
        ]))
      ])
    ]);
  }
}, HE = {
  name: "APanelMonth",
  mixins: [
    nf
  ],
  props: {
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    calendarYear: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: (/* @__PURE__ */ new Date()).getFullYear(),
      required: !1
    },
    disabledMonth: {
      type: Function,
      required: !1,
      default: void 0
    },
    currentLanguage: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "handleIconYear",
    "select"
  ],
  data() {
    return {
      monthIndexForFocus: void 0
    };
  },
  computed: {
    currentYear() {
      return this.value && new Date(this.value).getFullYear();
    },
    currentMonth() {
      return this.value && new Date(this.value).getMonth();
    },
    monthsTranslate() {
      return this.currentLanguage.months;
    },
    months() {
      const e = [];
      return this.monthsTranslate.forEach((t, n) => {
        e.push({
          isActive: this.currentYear === this.calendarYear && this.currentMonth === n,
          isDisabled: this.isDisabled(n),
          label: t,
          id: this.getIdForMonth(n)
        });
      }), e;
    },
    idForFocus() {
      return Be(this.monthIndexForFocus) ? "" : this.getIdForMonth(this.monthIndexForFocus);
    },
    monthFromValueOrToday() {
      return this.monthFromValue || (/* @__PURE__ */ new Date()).getMonth();
    },
    monthFromValue() {
      return this.value ? new Date(this.value).getMonth() : "";
    }
  },
  methods: {
    isDisabled(e) {
      return !!(typeof this.disabledMonth == "function" && this.disabledMonth(e));
    },
    selectMonth(e, t, n) {
      e.stopPropagation(), e.preventDefault(), !this.isDisabled(t) && this.$emit("select", { month: t, isButtonClick: n });
    },
    getIdForMonth(e) {
      return `${this.id}_month_${e}`;
    },
    setFocusToActiveMonth() {
      setTimeout(() => {
        this.setDefaultMonthForFocus(), document.getElementById(this.idForFocus).focus(), this.setListenerForPressButtons();
      });
    },
    setDefaultMonthForFocus() {
      this.monthIndexForFocus = this.monthFromValueOrToday;
    },
    pressButton(e) {
      const t = e.keyCode;
      t === J.arrowUp || t === J.arrowLeft ? (this.setFocusToLastMonth(), this.stopCurrentEvent(e)) : (t === J.arrowDown || t === J.arrowRight) && (this.setFocusToNextMonth(), this.stopCurrentEvent(e));
    },
    setFocusToLastMonth() {
      const e = this.monthIndexForFocus - 1;
      e >= 0 ? this.monthIndexForFocus = e : (this.$emit("handleIconYear", -1), this.monthIndexForFocus = 11), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    setFocusToNextMonth() {
      const e = this.monthIndexForFocus + 1;
      e <= 11 ? this.monthIndexForFocus = e : (this.$emit("handleIconYear", 1), this.monthIndexForFocus = 0), this.setFocusToElementWithTimeout(this.idForFocus);
    },
    keypress(e, t) {
      (e.keyCode === J.enter || e.keyCode === J.space) && this.selectMonth(e, t);
    }
  },
  render() {
    return c("ul", {
      class: "pux_datepicker__panel pux_datepicker__panel_month pux_datepicker__panel__list",
      role: "listbox",
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      this.months.map((e, t) => c("li", {
        id: e.id,
        key: e.id,
        class: ["cell", {
          actived: e.isActive,
          disabled: e.isDisabled,
          pux_datepicker__panel__cell_focus: t === this.monthIndexForFocus
        }],
        role: "option",
        ariaSelected: !!e.isActive,
        tabindex: -1,
        onClick: (n) => this.selectMonth(n, t),
        onKeypress: (n) => this.keypress(n, t)
      }, e.label))
    ]);
  }
};
function cF(e, {
  getCurrentId: t = () => {
  },
  timesFiltered: n = _(() => [])
}) {
  const r = B(void 0), s = B(void 0), i = _(() => `${s.value}_${r.value}`), o = _(() => t({
    columnIndex: s.value,
    rowIndex: r.value
  })), u = (b) => {
    const I = document.getElementById(b);
    I && I.focus();
  }, f = () => {
    const b = n.value[s.value];
    r.value > 0 ? r.value-- : r.value = b.length - 1, u(o.value);
  }, A = () => {
    const b = n.value[s.value];
    r.value < b.length - 1 ? r.value++ : r.value = 0, u(o.value);
  }, E = () => {
    s.value > 0 ? s.value-- : s.value = n.value.length - 1, r.value = 0, u(o.value);
  }, p = () => {
    s.value < n.value.length - 1 ? s.value++ : s.value = 0, r.value = 0, u(o.value);
  }, T = (b) => {
    b.preventDefault(), b.stopPropagation();
  };
  return {
    fullIndexForFocus: i,
    idForFocus: o,
    pressButton: (b) => {
      const I = b.keyCode;
      I === J.arrowUp ? (f(), T(b)) : I === J.arrowDown ? (A(), T(b)) : I === J.arrowLeft ? (E(), T(b)) : I === J.arrowRight && (p(), T(b));
    },
    setDefaultTimeForFocus: () => {
      r.value = 0, s.value = 0;
    }
  };
}
function fF({
  idForFocus: e = _(() => ""),
  setDefaultTimeForFocus: t = () => {
  },
  setListenerForPressButtons: n = () => {
  }
}) {
  return {
    setFocusToActiveTime: () => {
      setTimeout(() => {
        t(), document.getElementById(e.value).focus(), n();
      });
    }
  };
}
function tS(e, {
  destroyListenerForPressButtonsCallback: t = () => {
  },
  idForFocus: n = _(() => ""),
  pressButton: r = () => {
  }
}) {
  const s = d(e, "id"), i = _(() => `${s.value}_header`), o = _(() => n.value ? {
    "aria-activedescendant": n.value
  } : {}), u = _(() => `${s.value}DestroyKeyDown`), f = () => {
    document.removeEventListener("keydown", r), t();
  };
  return {
    attributesForMainElement: o,
    destroyEventBus: () => {
      Rt.$off(u.value, f);
    },
    destroyListenerForPressButtons: f,
    idForHeader: i,
    setEventBus: () => {
      Rt.$on(u.value, f);
    },
    setListenerForPressButtons: () => {
      document.addEventListener("keydown", r);
    }
  };
}
function hF(e, { emit: t }) {
  const n = d(e, "disabledTime"), r = (i, o) => {
    Ne(n.value) && n.value(i) || t("select", new Date(i), o);
  };
  return {
    keypress: (i, o, u) => {
      (i.keyCode === J.enter || i.keyCode === J.space) && (r(o, u), i.stopPropagation(), i.preventDefault());
    },
    selectTime: r
  };
}
function AF(e) {
  const t = d(e, "currentLanguage"), n = d(e, "disabledTime"), r = d(e, "id"), s = d(e, "minuteStep"), i = d(e, "value"), o = _(() => Ne(n.value)), u = (D) => ("00" + D).slice(String(D).length), f = _(() => i.value ? new Date(i.value) : (/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0)), A = ({ columnIndex: D, rowIndex: w }) => `${r.value}_time_${D}_${w}`, E = _(() => Uo(24)), p = _(() => i.value ? new Date(i.value).getHours() : 0), T = _(() => s.value || 1), S = _(() => parseInt(60 / T.value)), L = _(() => Uo(0, S.value * T.value, T.value)), b = _(() => i.value ? new Date(i.value).getMinutes() : 0), I = _(() => s.value === 0 ? Uo(0, 60) : []), v = _(() => i.value ? new Date(i.value).getSeconds() : 0), R = ({ times: D, timeFunctionName: w, currentTime: F, ariaLabel: P, columnIndex: M }) => {
    const O = [];
    return D.forEach((q, U) => {
      const G = new Date(f.value)[w](q), te = q === F, ne = o.value && n.value(G), oe = u(q);
      O.push({
        label: oe,
        time: G,
        isActive: te,
        isDisabled: ne,
        ariaLabel: `${P}: ${oe}`,
        id: A({
          columnIndex: M,
          rowIndex: U
        })
      });
    }), O;
  }, g = _(() => {
    const D = [];
    let w = 0;
    const F = R({
      times: E.value,
      timeFunctionName: "setHours",
      currentTime: p.value,
      ariaLabel: t.value.hours,
      columnIndex: w
    });
    F.length && (D.push(F), w++);
    const P = R({
      times: L.value,
      timeFunctionName: "setMinutes",
      currentTime: b.value,
      ariaLabel: t.value.minutes,
      columnIndex: w
    });
    P.length && (D.push(P), w++);
    const M = R({
      times: I.value,
      timeFunctionName: "setSeconds",
      currentTime: v.value,
      ariaLabel: t.value.seconds,
      columnIndex: w
    });
    return M.length && D.push(M), D;
  });
  return {
    getCurrentId: A,
    timesFiltered: g
  };
}
const VE = {
  name: "APanelTime",
  props: {
    currentLanguage: {
      type: Object,
      required: !0
    },
    disabledTime: {
      type: Function,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    minuteStep: {
      type: Number,
      default: 0,
      validator: (e) => e >= 0 && e <= 60
    },
    timeType: {
      type: Array,
      default() {
        return ["24", "a"];
      }
    },
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: void 0
    }
  },
  emits: [
    "select"
  ],
  setup(e, t) {
    const {
      getCurrentId: n,
      timesFiltered: r
    } = AF(e), {
      fullIndexForFocus: s,
      idForFocus: i,
      pressButton: o,
      setDefaultTimeForFocus: u
    } = cF(e, {
      getCurrentId: n,
      timesFiltered: r
    }), {
      keypress: f,
      selectTime: A
    } = hF(e, t), {
      attributesForMainElement: E,
      destroyEventBus: p,
      destroyListenerForPressButtons: T,
      idForHeader: S,
      setEventBus: L,
      setListenerForPressButtons: b
    } = tS(e, {
      idForFocus: i,
      pressButton: o
    }), {
      setFocusToActiveTime: I
    } = fF({
      idForFocus: i,
      setDefaultTimeForFocus: u,
      setListenerForPressButtons: b
    });
    return L(), Ot(() => {
      p(), T();
    }), {
      attributesForMainElement: E,
      idForHeader: S,
      fullIndexForFocus: s,
      keypress: f,
      selectTime: A,
      setFocusToActiveTime: I,
      timesFiltered: r
    };
  },
  render() {
    return c("div", {
      class: "pux_datepicker__panel pux_datepicker__panel_time",
      ...this.attributesForMainElement
    }, [
      this.timesFiltered.map((e, t) => c("ul", {
        key: t,
        class: "pux_datepicker__time_list",
        role: "listbox",
        "aria-labelledby": this.idForHeader,
        style: { width: `${100 / this.timesFiltered.length}%` }
      }, [
        e.map((n, r) => c("li", {
          id: n.id,
          key: r,
          class: ["cell", {
            actived: n.isActive,
            disabled: n.isDisabled,
            pux_datepicker__panel__cell_focus: t + "_" + r === this.fullIndexForFocus
          }],
          tabindex: -1,
          role: "option",
          ariaSelected: !!n.isActive,
          ariaLabel: n.ariaLabel,
          onClick: () => this.selectTime(n.time),
          onKeypress: (s) => this.keypress(s, n.time, t === this.timesFiltered.length - 1)
        }, n.label))
      ]))
    ]);
  }
}, EF = {
  name: "APanelYearItem",
  props: {
    prefixForId: {
      type: String,
      required: !0
    },
    year: {
      type: Number,
      required: !0
    },
    yearFromValue: {
      type: Number,
      required: !1,
      default: void 0
    },
    yearIndex: {
      type: Number,
      required: !0
    },
    isDisabled: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "selectYear"
  ],
  computed: {
    isDisabledLocal() {
      return this.isDisabled(this.year);
    },
    isYearActive() {
      return this.yearFromValue === this.year;
    },
    idForList() {
      return `${this.prefixForId}${this.yearIndex}`;
    },
    ariaSelected() {
      return `${this.isYearActive}`;
    }
  },
  methods: {
    selectYearLocal(e, t) {
      e.stopPropagation(), e.preventDefault(), !this.isDisabledLocal && this.$emit("selectYear", { year: this.year, isButtonClick: t });
    },
    keypress(e) {
      (e.keyCode === J.enter || e.keyCode === J.space) && this.selectYearLocal(e, !0);
    }
  },
  render() {
    return c("li", {
      id: this.idForList,
      class: ["cell", {
        actived: this.isYearActive,
        disabled: this.isDisabledLocal
      }],
      role: "option",
      tabindex: -1,
      "aria-selected": this.ariaSelected,
      onClick: this.selectYearLocal,
      onKeypress: this.keypress
    }, this.year);
  }
};
function pF(e, { emit: t }) {
  const n = d(e, "id"), r = B(void 0), s = _(() => `${n.value}_year_`), i = (T) => `${s.value}${T}`, o = _(() => Be(r.value) ? "" : i(r.value)), u = (T) => {
    T.preventDefault(), T.stopPropagation();
  }, f = (T) => {
    setTimeout(() => {
      const S = document.getElementById(T);
      S && S.focus();
    });
  }, A = () => {
    const T = r.value - 1;
    T >= 0 && T <= 9 ? r.value = T : (t("handleIconYear", -1), r.value = 9), f(o.value);
  }, E = () => {
    const T = r.value + 1;
    T <= 9 && T >= 0 ? r.value = T : (t("handleIconYear", 1), r.value = 0), f(o.value);
  };
  return {
    idForFocus: o,
    prefixForId: s,
    pressButton: (T) => {
      const S = T.keyCode;
      S === J.arrowUp || S === J.arrowLeft ? (A(), u(T)) : (S === J.arrowDown || S === J.arrowRight) && (E(), u(T));
    },
    yearIndexForFocus: r
  };
}
function TF(e, {
  idForFocus: t = _(() => ""),
  setListenerForPressButtons: n = () => {
  },
  yearIndexForFocus: r = B(void 0)
}) {
  const s = d(e, "firstYear"), i = d(e, "value"), o = _(() => Math.floor(s.value / 10) * 10), u = _(() => i.value && new Date(i.value).getFullYear()), f = _(() => u.value || (/* @__PURE__ */ new Date()).getFullYear()), A = _(() => {
    const T = f.value - o.value;
    return T <= 9 && T >= 0 ? T : 0;
  }), E = () => {
    r.value = A.value;
  };
  return {
    firstYearLocal: o,
    setFocusToActiveYear: () => {
      setTimeout(() => {
        E(), document.getElementById(t.value).focus(), n();
      });
    },
    yearFromValue: u
  };
}
function SF(e, { emit: t }) {
  const n = d(e, "disabledYear"), r = (i) => !!(Ne(n.value) && n.value(i));
  return {
    isDisabled: r,
    selectYear: ({ year: i, isButtonClick: o }) => {
      r(i) || t("select", { year: i, isButtonClick: o });
    }
  };
}
const WE = {
  name: "APanelYear",
  props: {
    disabledYear: {
      type: Function,
      required: !1,
      default: void 0
    },
    firstYear: {
      type: Number,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    value: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "handleIconYear",
    "select"
  ],
  setup(e, t) {
    const {
      isDisabled: n,
      selectYear: r
    } = SF(e, t), {
      idForFocus: s,
      prefixForId: i,
      pressButton: o,
      yearIndexForFocus: u
    } = pF(e, t), {
      attributesForMainElement: f,
      destroyEventBus: A,
      destroyListenerForPressButtons: E,
      idForHeader: p,
      setEventBus: T,
      setListenerForPressButtons: S
    } = tS(e, {
      idForFocus: s,
      pressButton: o
    }), {
      firstYearLocal: L,
      setFocusToActiveYear: b,
      yearFromValue: I
    } = TF(e, {
      idForFocus: s,
      setListenerForPressButtons: S,
      yearIndexForFocus: u
    });
    return T(), Ot(() => {
      A(), E();
    }), {
      attributesForMainElement: f,
      firstYearLocal: L,
      idForFocus: s,
      idForHeader: p,
      isDisabled: n,
      prefixForId: i,
      selectYear: r,
      setFocusToActiveYear: b,
      yearFromValue: I,
      yearIndexForFocus: u
    };
  },
  render() {
    return c("ul", {
      class: "pux_datepicker__panel pux_datepicker__panel_year pux_datepicker__panel__list",
      role: "listbox",
      "aria-labelledby": this.idForHeader,
      ...this.attributesForMainElement
    }, [
      Uo(10).map((e) => c(EF, {
        key: e,
        class: {
          pux_datepicker__panel__cell_focus: e === this.yearIndexForFocus
        },
        year: this.firstYearLocal + e,
        yearFromValue: this.yearFromValue,
        yearIndex: e,
        prefixForId: this.prefixForId,
        isDisabled: this.isDisabled,
        onSelectYear: this.selectYear
      }))
    ]);
  }
};
function mF(e, t) {
  if (!t) {
    e.scrollTop = 0;
    return;
  }
  const n = [];
  let r = t.offsetParent;
  for (; r && e !== r && e.contains(r); )
    n.push(r), r = r.offsetParent;
  const s = t.offsetTop + n.reduce((f, A) => f + A.offsetTop, 0), i = s + t.offsetHeight, o = e.scrollTop, u = o + e.clientHeight;
  s < o ? e.scrollTop = s : i > u && (e.scrollTop = i - e.clientHeight);
}
const bd = {
  name: "ADatepickerCalendarPanel",
  components: {
    APanelDate: kE,
    APanelMonth: HE,
    APanelTime: VE,
    APanelYear: WE
  },
  mixins: [
    nf
  ],
  props: {
    currentLanguage: {
      type: Object,
      required: !0
    },
    dateFormat: {
      type: String,
      default: "YYYY-MM-DD"
    },
    defaultValue: {
      validator: function(e) {
        return yr(e);
      },
      default: void 0
    },
    disabledDays: {
      type: [Array, Function],
      default: function() {
        return [];
      }
    },
    endAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    firstDayOfWeek: {
      default: 1,
      type: Number,
      validator: (e) => e >= 1 && e <= 7
    },
    id: {
      type: String,
      required: !0
    },
    index: {
      type: Number,
      default: void 0
    },
    minuteStep: {
      type: Number,
      default: 0,
      validator: (e) => e >= 0 && e <= 60
    },
    notAfter: {
      default: null,
      validator: function(e) {
        return !e || yr(e);
      }
    },
    notBefore: {
      default: null,
      validator: function(e) {
        return !e || yr(e);
      }
    },
    startAt: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      default: "date"
      // ["date", "datetime"]
    },
    value: {
      default: null,
      validator: function(e) {
        return e === null || yr(e);
      }
    },
    visible: {
      type: Boolean,
      default: !1
    }
  },
  emits: [
    "closePopup",
    "selectDate",
    "selectTime"
  ],
  data() {
    const e = this.getNow(this.value), t = e.getFullYear(), n = e.getMonth(), r = Math.floor(t / 10) * 10;
    return {
      panel: "NONE",
      dates: [],
      calendarMonth: n,
      calendarYear: t,
      firstYear: r,
      isFocusPanelChild: !1,
      isWorkWithKeyboard: !1
    };
  },
  computed: {
    now: {
      get() {
        return new Date(this.calendarYear, this.calendarMonth).getTime();
      },
      set(e) {
        const t = new Date(e);
        this.calendarYear = t.getFullYear(), this.calendarMonth = t.getMonth();
      }
    },
    timeType() {
      const e = /h+/.test(this.$parent.format) ? "12" : "24", t = /A/.test(this.$parent.format) ? "A" : "a";
      return [e, t];
    },
    timeHeader() {
      return this.type === "time" ? this.$parent.format : this.value && du(this.value, this.dateFormat);
    },
    yearHeader() {
      const e = this.firstYear + 9;
      return this.currentLanguage.headerYears(this.firstYear, e);
    },
    months() {
      return this.currentLanguage.months;
    },
    notBeforeTime() {
      return this.getCriticalTime(this.notBefore);
    },
    notAfterTime() {
      return this.getCriticalTime(this.notAfter);
    },
    suffixForHeader() {
      return this.panel === "TIME" ? this.currentLanguage.placeholder.regionTime : this.currentLanguage.placeholder.regionDate;
    },
    idForHeaderParent() {
      return `${this.idForHeader}_parent`;
    },
    ariaLabelForButtonLastYear() {
      return this.panel === "YEAR" ? this.currentLanguage.buttons.lastYears : this.currentLanguage.buttons.lastYear;
    },
    ariaLabelForButtonLastMonth() {
      return this.currentLanguage.buttons.lastMonth;
    },
    ariaLabelForButtonNextMonth() {
      return this.currentLanguage.buttons.nextMonth;
    },
    ariaLabelForButtonNextYear() {
      return this.panel === "YEAR" ? this.currentLanguage.buttons.nextYears : this.currentLanguage.buttons.nextYear;
    },
    ariaLabelForButtonCurrentMonth() {
      return this.currentLanguage.buttons.toMonthsView;
    },
    ariaLabelForButtonCurrentYear() {
      return this.currentLanguage.buttons.toYearsView;
    },
    ariaLabelForButtonToDays() {
      return this.currentLanguage.buttons.toDaysView;
    }
  },
  watch: {
    value: {
      immediate: !0,
      handler: "updateNow"
    },
    defaultValue: {
      handler: "updateNow"
    },
    visible: {
      immediate: !0,
      handler: "init"
    },
    panel: {
      handler: "handelPanelChange"
    }
  },
  beforeUnmount() {
    this.destroyListenerForPressTabButton(), this.destroyListenerForPressEscapeButton();
  },
  methods: {
    handelPanelChange(e) {
      e === "YEAR" ? this.firstYear = Math.floor(this.calendarYear / 10) * 10 : e === "TIME" && this.$nextTick().then(() => {
        const t = this.$el.querySelectorAll(".pux_datepicker__panel_time .pux_datepicker__time_list");
        for (let n = 0, r = t.length; n < r; n++) {
          const s = t[n];
          mF(s, s.querySelector(".actived"));
        }
      });
    },
    init(e) {
      if (e) {
        const t = this.type;
        t === "month" ? this.showPanelMonth() : t === "year" ? this.showPanelYear() : t === "time" ? this.showPanelTime() : this.showPanelDate(), this.setListenerForPressEscapeButton();
      } else
        this.showPanelNone(), this.updateNow(this.value), this.destroyListenerForPressEscapeButton();
      this.emitEventBusDestroyAllListenerForPressButtonsForPanels();
    },
    getNow(e) {
      return e ? new Date(e) : this.defaultValue && yr(this.defaultValue) ? new Date(this.defaultValue) : /* @__PURE__ */ new Date();
    },
    updateNow(e) {
      this.now = this.getNow(e);
    },
    getCriticalTime(e) {
      if (!e)
        return null;
      const t = new Date(e);
      return this.type === "year" ? new Date(t.getFullYear(), 0).getTime() : this.type === "month" ? new Date(t.getFullYear(), t.getMonth()).getTime() : this.type === "date" ? t.setHours(0, 0, 0, 0) : t.getTime();
    },
    inBefore(e, t) {
      return t === void 0 && (t = this.startAt), this.notBeforeTime && e < this.notBeforeTime || t && e < this.getCriticalTime(t);
    },
    inAfter(e, t) {
      return t === void 0 && (t = this.endAt), this.notAfterTime && e > this.notAfterTime || t && e > this.getCriticalTime(t);
    },
    inDisabledDays(e) {
      return Array.isArray(this.disabledDays) ? this.disabledDays.some((t) => this.getCriticalTime(t) === e) : typeof this.disabledDays == "function" ? this.disabledDays(new Date(e)) : !1;
    },
    isDisabledYear(e) {
      const t = new Date(e, 0).getTime(), n = new Date(e + 1, 0).getTime() - 1;
      return this.inBefore(n) || this.inAfter(t) || this.type === "year" && this.inDisabledDays(t);
    },
    isDisabledMonth(e) {
      const t = new Date(this.calendarYear, e).getTime(), n = new Date(this.calendarYear, e + 1).getTime() - 1;
      return this.inBefore(n) || this.inAfter(t) || this.type === "month" && this.inDisabledDays(t);
    },
    isDisabledDate(e) {
      const t = new Date(e).getTime(), n = new Date(e).setHours(23, 59, 59, 999);
      return this.inBefore(n) || this.inAfter(t) || this.inDisabledDays(t);
    },
    isDisabledTime(e, t, n) {
      const r = new Date(e).getTime();
      return this.inBefore(r, t) || this.inAfter(r, n) || this.inDisabledDays(r);
    },
    selectDate(e) {
      if (this.type === "datetime") {
        let t = new Date(e);
        Xd(this.value) && t.setHours(
          this.value.getHours(),
          this.value.getMinutes(),
          this.value.getSeconds()
        ), this.isDisabledTime(t) && (t.setHours(0, 0, 0, 0), this.notBefore && t.getTime() < new Date(this.notBefore).getTime() && (t = new Date(this.notBefore)), this.startAt && t.getTime() < new Date(this.startAt).getTime() && (t = new Date(this.startAt))), this.selectTime(t), this.showPanelTime();
        return;
      }
      this.$emit("selectDate", e);
    },
    selectYear({ year: e, isButtonClick: t }) {
      if (this.changeCalendarYear(e), this.type.toLowerCase() === "year")
        return this.selectDate(new Date(this.now));
      this.showPanelMonth(), t && this.setFocusToActivePanel();
    },
    selectMonth({ month: e, isButtonClick: t }) {
      if (this.changeCalendarMonth(e), this.type.toLowerCase() === "month")
        return this.selectDate(new Date(this.now));
      this.showPanelDate(), t && this.setFocusToActivePanel();
    },
    selectTime(e, t = !1) {
      this.$emit("selectTime", e, t);
    },
    changeCalendarYear(e) {
      this.updateNow(new Date(e, this.calendarMonth));
    },
    changeCalendarMonth(e) {
      this.updateNow(new Date(this.calendarYear, e));
    },
    getSibling() {
      const e = [
        this.$parent.$refs.calendarPanelRef
      ];
      this.$parent.$refs.calendarPanel2Ref && e.push(this.$parent.$refs.calendarPanel2Ref);
      const t = e.filter(
        (r) => r.$options.name === this.$options.name
      ), n = t.indexOf(this);
      return t[n ^ 1];
    },
    handleIconMonth(e) {
      const t = this.calendarMonth;
      this.changeCalendarMonth(t + e), this.$parent.$emit("changeCalendarMonth", {
        month: t,
        flag: e,
        vm: this,
        sibling: this.getSibling()
      });
    },
    handleIconYear(e) {
      if (this.panel === "YEAR")
        this.changePanelYears(e);
      else {
        const t = this.calendarYear;
        this.changeCalendarYear(t + e), this.$parent.$emit("changeCalendarYear", {
          year: t,
          flag: e,
          vm: this,
          sibling: this.getSibling()
        });
      }
    },
    handleBtnYear(e) {
      e.stopPropagation(), this.showPanelYear(), this.isWorkWithKeyboard && this.setFocusToActivePanel();
    },
    handleBtnMonth(e) {
      e.stopPropagation(), this.showPanelMonth(), this.isWorkWithKeyboard && this.setFocusToActivePanel();
    },
    handleTimeHeader(e) {
      e.stopPropagation(), this.type !== "time" && (this.showPanelDate(), this.isWorkWithKeyboard && this.setFocusToActivePanel());
    },
    changePanelYears(e) {
      this.firstYear = this.firstYear + e * 10;
    },
    showPanelNone() {
      this.panel = "NONE", this.isFocusPanelChild = !1, this.destroyListenerForPressTabButton(), this.emitEventBusDestroyAllListenerForPressButtonsForPanels(), this.setWorkWithoutKeyboard();
    },
    showPanelTime() {
      this.panel = "TIME";
    },
    showPanelDate() {
      this.panel = "DATE";
    },
    showPanelYear() {
      this.panel = "YEAR";
    },
    showPanelMonth() {
      this.panel = "MONTH";
    },
    setFocusToActivePanelFromParent() {
      this.setWorkWithKeyboard(), this.setFocusToActivePanel(), this.setListenerForPressTabButton();
    },
    setFocusToActivePanel() {
      this.isFocusPanelChild = !0, this.setFocusToActiveElementInChild();
    },
    removeFocusFromActivePanel() {
      this.isFocusPanelChild && (this.isFocusPanelChild = !1, this.emitEventBusDestroyAllListenerForPressButtonsForPanels());
    },
    setFocusToActiveElementInChild() {
      var e, t, n, r, s, i, o, u;
      this.panel === "DATE" ? (t = (e = this.$refs) == null ? void 0 : e.panelDate) == null || t.setFocusToActiveDay() : this.panel === "TIME" ? (r = (n = this.$refs) == null ? void 0 : n.panelTime) == null || r.setFocusToActiveTime() : this.panel === "YEAR" ? (i = (s = this.$refs) == null ? void 0 : s.panelYear) == null || i.setFocusToActiveYear() : this.panel === "MONTH" && ((u = (o = this.$refs) == null ? void 0 : o.panelMonth) == null || u.setFocusToActiveMonth());
    },
    setListenerForPressTabButton() {
      document.addEventListener("keydown", this.pressTabButton);
    },
    destroyListenerForPressTabButton() {
      document.removeEventListener("keydown", this.pressTabButton);
    },
    pressTabButton(e) {
      e.keyCode === J.tab && (this.trapFocus(e), this.stopCurrentEvent(e));
    },
    trapFocus(e) {
      const t = this.$el.querySelectorAll(".pux_datepicker__calendar__tab");
      if (t.length <= 1)
        return;
      let n = !1, r = !1;
      z(t, (s, i) => {
        if (document.activeElement === s)
          return e.shiftKey ? i === 0 ? (t[t.length - 1].focus(), r = !0) : t[i - 1].focus() : (i === t.length - 1 ? t[0].focus() : t[i + 1].focus(), i === t.length - 2 && (r = !0)), n = !0, !1;
      }), n || (e.shiftKey ? t[t.length - 2].focus() : t[0].focus()), r ? this.setFocusToActivePanel() : this.removeFocusFromActivePanel();
    },
    setWorkWithKeyboard() {
      this.isWorkWithKeyboard = !0;
    },
    setWorkWithoutKeyboard() {
      this.isWorkWithKeyboard = !1;
    },
    setListenerForPressEscapeButton() {
      document.addEventListener("keydown", this.pressEscapeButton);
    },
    destroyListenerForPressEscapeButton() {
      document.removeEventListener("keydown", this.pressEscapeButton);
    },
    pressEscapeButton(e) {
      e.keyCode === J.escape && this.$emit("closePopup", !0);
    }
  },
  render() {
    return c("div", {
      class: ["pux_datepicker__calendar", `pux_datepicker__calendar_${this.panel.toLowerCase()}`],
      role: "region",
      "aria-labelledby": this.idForHeaderParent,
      onClick: (e) => e.stopPropagation()
    }, [
      c("div", {
        id: this.idForHeaderParent,
        class: "a_sr_only",
        role: "header"
      }, [
        c("div", {
          id: this.idForHeader,
          "aria-live": "polite"
        }, [
          this.panel === "DATE" && c("span", null, this.months[this.calendarMonth]),
          (this.panel === "DATE" || this.panel === "MONTH") && c("span", null, this.calendarYear),
          this.panel === "YEAR" && c("span", null, this.yearHeader),
          this.panel === "TIME" && c("span", null, this.timeHeader)
        ]),
        c("div", null, this.suffixForHeader)
      ]),
      c("div", {
        class: "pux_datepicker__calendar__header"
      }, [
        c("div", null, [
          this.panel !== "TIME" && c("button", {
            class: "pux_datepicker__icon_last_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonLastYear,
            innerHTML: "&laquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconYear(-1);
            }
          }),
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__icon_last_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonLastMonth,
            innerHTML: "&lsaquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconMonth(-1);
            }
          })
        ]),
        c("div", null, [
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__current_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonCurrentMonth,
            onClick: this.handleBtnMonth
          }, this.months[this.calendarMonth]),
          (this.panel === "DATE" || this.panel === "MONTH") && c("button", {
            class: "pux_datepicker__current_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonCurrentYear,
            onClick: this.handleBtnYear
          }, this.calendarYear),
          this.panel === "YEAR" && c("span", {
            class: "pux_datepicker__current_year"
          }, this.yearHeader),
          this.panel === "TIME" && c("span", null, [
            this.type === "time" ? c("span", {
              class: "pux_datepicker__time_header"
            }, this.timeHeader) : c("button", {
              class: "pux_datepicker__time_header pux_datepicker__calendar__tab",
              type: "button",
              ariaLabel: this.ariaLabelForButtonToDays,
              onClick: this.handleTimeHeader
            }, this.timeHeader)
          ])
        ]),
        c("div", null, [
          this.panel === "DATE" && c("button", {
            class: "pux_datepicker__icon_next_month pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonNextMonth,
            innerHTML: "&rsaquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconMonth(1);
            }
          }),
          this.panel !== "TIME" && c("button", {
            class: "pux_datepicker__icon_next_year pux_datepicker__calendar__tab",
            type: "button",
            ariaLabel: this.ariaLabelForButtonNextYear,
            innerHTML: "&raquo;",
            onClick: (e) => {
              e.stopPropagation(), this.handleIconYear(1);
            }
          })
        ])
      ]),
      c("div", {
        class: "pux_datepicker__calendar__content",
        role: "application"
      }, [
        c(kE, {
          ref: "panelDate",
          id: this.id,
          style: this.panel !== "DATE" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "DATE"
          },
          tabindex: 0,
          value: this.value,
          dateFormat: this.dateFormat,
          calendarMonth: this.calendarMonth,
          calendarYear: this.calendarYear,
          startAt: this.startAt,
          endAt: this.endAt,
          firstDayOfWeek: this.firstDayOfWeek,
          disabledDate: this.isDisabledDate,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectDate,
          onHandleIconMonth: this.handleIconMonth
        }),
        c(WE, {
          ref: "panelYear",
          id: this.id,
          style: this.panel !== "YEAR" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "YEAR"
          },
          value: this.value,
          disabledYear: this.isDisabledYear,
          firstYear: this.firstYear,
          onSelect: this.selectYear,
          onHandleIconYear: this.handleIconYear
        }),
        c(HE, {
          ref: "panelMonth",
          id: this.id,
          style: this.panel !== "MONTH" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "MONTH"
          },
          value: this.value,
          disabledMonth: this.isDisabledMonth,
          calendarYear: this.calendarYear,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectMonth,
          onHandleIconYear: this.handleIconYear
        }),
        c(VE, {
          ref: "panelTime",
          id: this.id,
          style: this.panel !== "TIME" ? "display: none;" : "",
          class: {
            pux_datepicker__panel_focus: this.isFocusPanelChild,
            pux_datepicker__calendar__tab: this.panel === "TIME"
          },
          minuteStep: this.minuteStep,
          value: this.value,
          disabledTime: this.isDisabledTime,
          timeType: this.timeType,
          currentLanguage: this.currentLanguage,
          onSelect: this.selectTime
        })
      ])
    ]);
  }
}, LF = {
  name: "ADatepickerIcon",
  computed: {
    svgHtml() {
      return `<svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 200 200" class="a_datepicker__calendar_icon">
        <rect x="13" y="29" rx="14" ry="14" width="174" height="158" fill="transparent"></rect> 
        <line x1="46" x2="46" y1="8" y2="50"></line> <line x1="154" x2="154" y1="8" y2="50"></line> 
        <line x1="13" x2="187" y1="70" y2="70"></line> 
        <text x="50%" y="135" font-size="90" stroke-width="1" text-anchor="middle" dominant-baseline="middle">${this.todayInDayFormat}</text>
      </svg>`;
    },
    todayInDayFormat() {
      return (/* @__PURE__ */ new Date()).getDate();
    }
  },
  render() {
    return c("span", {
      ariaHidden: !0,
      innerHTML: this.svgHtml
    });
  }
};
function bF(e, {
  currentLanguage: t = _(() => ({})),
  popupVisible: n = B(!1)
}) {
  const r = d(e, "extra"), s = d(e, "id"), i = d(e, "placeholder"), o = d(e, "range"), u = d(e, "type"), f = d(e, "width"), A = _(() => ot(i.value) ? Pt({ placeholder: i.value, extra: r.value }) : o.value ? t.value.placeholder.dateRange : u.value === "time" ? t.value.placeholder.time : t.value.placeholder.date), E = _(() => `${s.value}_panel`), p = _(() => [
    `${E.value}_0`,
    `${E.value}_1`
  ]), T = _(() => `${!n.value}`), S = _(() => `${n.value}`), L = _(() => `${s.value}_calendar`), b = _(() => Rn(f.value) || ot(f.value) && /^\d+$/.test(f.value) ? f.value + "px" : f.value), I = _(() => String(u.value).toLowerCase());
  return {
    ariaExpandedForCalendar: S,
    ariaHiddenForCalendar: T,
    idForCalendar: L,
    idForPanel: E,
    idsForPanelRange: p,
    innerPlaceholder: A,
    innerType: I,
    widthLocal: b
  };
}
function IF(e, { emit: t }, {
  calendarPanelRef: n = B(void 0),
  changeModel: r = () => {
  },
  closePopover: s = () => {
  },
  formatLocal: i = _(() => ""),
  formatSaveLocal: o = _(() => ""),
  setCloseFocus: u = () => {
  }
}) {
  const f = d(e, "range"), A = d(e, "confirm"), E = d(e, "disabled"), p = d(e, "modelValue"), T = d(e, "editable"), S = d(e, "type"), L = B(null), b = B(null), I = () => {
    L.value = f.value ? [null, null] : null;
  }, v = (Z) => !!UE(Z, i.value, o.value), R = (Z) => {
    try {
      return Fn(Z, o.value).isValid() && Fn(Z, o.value).format(i.value) || "";
    } catch {
      return "";
    }
  }, g = (Z) => {
    try {
      return !!Fn(Z, o.value).isValid();
    } catch {
      return !1;
    }
  }, D = (Z) => _u(i.value) && typeof this.format.stringify == "function" ? i.value.stringify(Z) : du(Z, i.value), w = _(() => b.value !== null ? b.value : f.value ? "" : v(p.value) ? R(p.value) : ""), F = (Z, H) => Xd(Z) && Xd(H) && Z.getTime() === H.getTime(), P = (Z, H) => Array.isArray(Z) && Array.isArray(H) && Z.length === H.length && Z.every((X, ae) => F(X, H[ae])), M = (Z) => {
    const H = f.value ? "" : (
      // TODO: range this.currentValue.map(date2value)
      du(L.value, o.value)
    );
    r({
      model: H
    }), t(Z, H);
  }, O = (Z = !1) => A.value && !Z || E.value || (f.value ? P(p.value, L.value) : F(p.value, L.value)) ? !1 : (M("change"), !0), q = (Z) => {
    Z && Z.stopPropagation();
    const H = f.value ? [null, null] : null;
    L.value = H, O(!0), t("clear");
  }, U = (Z) => {
    L.value = Z, O() && s(), u();
  }, G = (Z, H) => {
    L.value = Z, O() && H && s(), H && u();
  }, te = (Z) => {
    L.value[0] = Z, L.value[1] && O();
  }, ne = (Z) => {
    L.value[1] = Z, L.value[0] && O();
  }, oe = (Z) => {
    te(Z);
  }, se = (Z) => {
    ne(Z);
  }, ie = (Z) => _u(i.value) && typeof i.value.parse == "function" ? i.value.parse(Z) : UE(Z, i.value, o.value), me = (Z) => {
    try {
      return Fn(Z, i.value).isValid() && Fn(Z, i.value).format() || null;
    } catch {
      return null;
    }
  }, Ve = (Z) => {
    try {
      return Fn(Z, o.value).isValid() && Fn(Z, o.value).format() || null;
    } catch {
      return null;
    }
  }, Le = () => {
    if (T.value && b.value !== null) {
      let Z = w.value;
      const H = n.value.isDisabledTime;
      if (!Z) {
        q();
        return;
      }
      if (f.value)
        return;
      S.value === "time" && (Z = `${Fn().format("DD.MM.YYYY")} ${Z}`);
      const X = me(Z);
      if (X && !H(X, null, null)) {
        L.value = X, O(!0), s();
        return;
      }
      t("inputError", Z);
    }
  }, _e = () => {
    n.value.setFocusToActivePanelFromParent();
  };
  return {
    clearDate: q,
    confirmDate: () => {
      (f.value ? dF(L.value) : yr(L.value)) && O(!0), M("confirm"), s();
    },
    currentValue: L,
    emitDate: M,
    handleChange: Le,
    handleInput: (Z) => {
      b.value = Z.target.value;
    },
    handleKeydown: (Z) => {
      const H = Z.keyCode;
      H === J.tab || H === J.enter ? (Le(), b.value = null, s()) : (H === J.arrowUp || H === J.arrowDown) && (_e(), Z.stopPropagation(), Z.preventDefault());
    },
    initCurrentValue: I,
    onModelValueChange: (Z) => {
      f.value ? L.value = [null, null] : L.value = g(Z) ? Ve(Z) : null;
    },
    parse: ie,
    selectDate: U,
    selectEndDate: ne,
    selectEndTime: se,
    selectStartDate: te,
    selectStartTime: oe,
    selectTime: G,
    stringify: D,
    text: w,
    updateDate: O,
    userInput: b
  };
}
const vF = {
  en: {
    days: [
      {
        shortName: "Sun",
        longName: "Sunday"
      },
      {
        shortName: "Mon",
        longName: "Monday"
      },
      {
        shortName: "Tue",
        longName: "Tuesday"
      },
      {
        shortName: "Wed",
        longName: "Wednesday"
      },
      {
        shortName: "Thu",
        longName: "Thursday"
      },
      {
        shortName: "Fri",
        longName: "Friday"
      },
      {
        shortName: "Sat",
        longName: "Saturday"
      }
    ],
    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    pickers: ["next 7 days", "next 30 days", "previous 7 days", "previous 30 days"],
    placeholder: {
      date: "Enter date in format DD.MM.YYYY",
      time: "Enter time in format HH:MM",
      dateRange: "Select Date Range",
      regionDate: "Date picker",
      regionTime: "Time picker"
    },
    today: "today",
    buttons: {
      lastYear: "Last year",
      lastYears: "Last 10 years",
      nextYear: "Next year",
      nextYears: "Next 10 years",
      lastMonth: "Last month",
      nextMonth: "Next month",
      monthsView: "Show detailed month view",
      toDaysView: "Switch to the day selection",
      toMonthsView: "Switch to the month selection",
      toYearsView: "switch to the selection of the years"
    },
    hours: "Hours",
    minutes: "Minutes",
    seconds: "Seconds",
    headerYears: (e, t) => `${e} to ${t}`
  },
  ru: {
    days: [
      {
        shortName: "Вс",
        longName: "Воскресенье"
      },
      {
        shortName: "Пн",
        longName: "Понедельник"
      },
      {
        shortName: "Вт",
        longName: "Вторник"
      },
      {
        shortName: "Ср",
        longName: "Среда"
      },
      {
        shortName: "Чт",
        longName: "Четверг"
      },
      {
        shortName: "Пт",
        longName: "Пятница"
      },
      {
        shortName: "Сб",
        longName: "Суббота"
      }
    ],
    months: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
    pickers: ["след. 7 дней", "след. 30 дней", "прош. 7 дней", "прош. 30 дней"],
    placeholder: {
      date: "Введите дату в формате ДД.ММ.ГГГГ",
      time: "Enter время in format ЧЧ.ММ",
      dateRange: "Выберите период",
      regionDate: "Выбор даты",
      regionTime: "Выбор времени"
    },
    today: "Сегодня",
    buttons: {
      lastYear: "Предыдущий год",
      lastYears: "Предыдущие 10 лет",
      nextYear: "Следующий год",
      nextYears: "Следующие 10 лет",
      lastMonth: "Предыдущий месяц",
      nextMonth: "Следующий месяц",
      toDaysView: "Перейти к выбору дня",
      toMonthsView: "Перейти к выбору месяца",
      toYearsView: "Перейти к выбору года"
    },
    hours: "Часы",
    minutes: "Минуты",
    seconds: "Секунды",
    headerYears: (e, t) => `с ${e} по ${t}`
  },
  de: {
    days: [
      {
        shortName: "So",
        longName: "Sontag"
      },
      {
        shortName: "Mo",
        longName: "Montag"
      },
      {
        shortName: "Di",
        longName: "Dienstag"
      },
      {
        shortName: "Mi",
        longName: "Mittwoch"
      },
      {
        shortName: "Do",
        longName: "Donnerstag"
      },
      {
        shortName: "Fr",
        longName: "Freitag"
      },
      {
        shortName: "Sa",
        longName: "Samstag"
      }
    ],
    months: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
    pickers: ["nächste 7 Tage", "nächste 30 Tage", "vorige 7 Tage", "vorige 30 Tage"],
    placeholder: {
      date: "Datum im Format TT.MM.JJJJ eingeben",
      time: "Zeit im Format HH.MM eingeben",
      dateRange: "Zeitraum auswählen",
      regionDate: "Datumsauswahl",
      regionTime: "Zeitauswahl"
    },
    today: "Heute",
    buttons: {
      lastYear: "Voriges Jahr",
      lastYears: "Vorige 10 Jahre",
      nextYear: "Nächstes Jahr",
      nextYears: "Nächste 10 Jahre",
      lastMonth: "Voriger Monat",
      nextMonth: "Nächster Monat",
      toDaysView: "Zur Auswahl der Tage wechseln",
      toMonthsView: "Zur Auswahl der Monate wechseln",
      toYearsView: "Zur Auswahl der Jahre wechseln"
    },
    hours: "Stunden",
    minutes: "Minuten",
    seconds: "Sekunden",
    headerYears: (e, t) => `${e} bis ${t}`
  }
};
function yF(e) {
  const t = d(e, "languages"), n = d(e, "lang"), r = _(() => ({
    ...vF,
    ...t.value
  }));
  return {
    currentLanguage: _(() => r.value[n.value])
  };
}
function gF(e, {
  calendarRef: t = B(void 0),
  focusByCloseRef: n = B(void 0),
  inputRef: r = B(void 0)
}) {
  const s = d(e, "placement"), i = d(e, "disabled"), o = B(void 0), u = B(void 0), f = () => {
    document.addEventListener("click", b);
  }, A = () => {
    document.removeEventListener("click", b);
  }, E = () => {
    !o.value && !i.value && r.value && t.value && (o.value = Nl(
      r.value,
      t.value,
      () => {
        t.value && r.value && Pl(
          r.value,
          t.value,
          {
            placement: s.value,
            middleware: [
              wl(),
              Bl({ limiter: wu() })
            ]
          }
        ).then(({ x: I, y: v }) => {
          Object.assign(t.value.style, {
            left: `${I}px`,
            top: `${v}px`
          });
        });
      }
    ), setTimeout(() => {
      f();
    }, 300));
  }, p = () => {
    n.value && n.value.focus && n.value.focus();
  }, T = () => {
    o.value && (o.value(), o.value = void 0);
  }, S = (I) => {
    A(), T(), u.value = !1, I && p();
  }, L = () => {
    u.value = !0;
  };
  function b(I) {
    t.value.contains(I.target) || S();
  }
  return bp(() => {
    T(), A();
  }), {
    closePopover: S,
    destroyPopover: T,
    initCalendar: L,
    openPopoverWithFloatingUi: E,
    popupVisible: u,
    setCloseFocus: p
  };
}
function RF() {
  const e = B(void 0), t = B(void 0), n = B(void 0), r = B(void 0), s = B(void 0);
  return {
    calendarRef: e,
    calendarPanelRef: t,
    calendarPanel2Ref: n,
    focusByCloseRef: s,
    inputRef: r
  };
}
function OF(e) {
  const t = d(e, "format"), n = d(e, "formatSave"), r = d(e, "type"), s = {
    date: "DD.MM.YYYY",
    time: "HH:mm:ss",
    datetime: "DD.MM.YYYY HH:mm:ss",
    month: "MM",
    year: "YYYY"
  }, i = {
    date: "YYYY-MM-DD",
    time: "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]",
    datetime: "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]",
    month: "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]",
    year: "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"
  }, o = _(() => n.value ? n.value : i[r.value]);
  return {
    formatLocal: _(() => t.value ? t.value : s[r.value]),
    formatSaveLocal: o
  };
}
const rf = {
  props: {
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_ui_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      required: !1
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    type: {
      type: String,
      required: !1
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ]
}, Id = {
  date: {
    value2date: (e) => yr(e) ? new Date(e) : null,
    date2value: (e) => e
  },
  timestamp: {
    value2date: (e) => yr(e) ? new Date(e) : null,
    date2value: (e) => e && new Date(e).getTime()
  }
}, ui = {
  name: "ADatepicker",
  mixins: [
    rf
  ],
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    appendToBody: {
      type: Boolean,
      default: !1
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    clearable: {
      type: Boolean,
      default: !0
    },
    confirm: {
      type: Boolean,
      default: !1
    },
    confirmText: {
      type: String,
      default: "OK"
    },
    dateFormat: {
      type: String,
      // format the time header and date tooltip
      default: void 0
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    editable: {
      type: Boolean,
      default: !0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    firstDayOfWeek: {
      type: Number,
      required: !1,
      default: 1,
      validator: (e) => e >= 1 && e <= 7
    },
    format: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    formatSave: {
      type: String,
      required: !1,
      default: void 0
    },
    iconDay: {
      type: [Number, String],
      default: void 0
    },
    inputAttr: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: "pux_datepicker__input"
    },
    inputName: {
      type: String,
      default: "date"
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !1
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    lang: {
      type: String,
      default: "de",
      required: !1
    },
    languages: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    minuteStep: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0 && e <= 60
    },
    modelValue: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: void 0
    },
    placeholder: {
      type: String,
      default: null
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => Gn.indexOf(e) !== -1
    },
    popupStyle: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    range: {
      type: Boolean,
      default: !1
    },
    rangeSeparator: {
      type: String,
      default: "~"
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    shortcuts: {
      type: [Boolean, Array],
      default: !0
    },
    type: {
      type: String,
      default: "date",
      // ["date", "datetime"] zendy added "month", "year", mxie added "time"
      validator: (e) => ["date", "datetime", "month", "year", "time"].indexOf(e) !== -1
    },
    valueType: {
      default: "format",
      validator: function(e) {
        return ["timestamp", "format", "date"].indexOf(e) !== -1 || _u(e);
      }
    },
    width: {
      type: [String, Number],
      default: null
    }
  },
  emits: [
    "blur",
    "change",
    "clear",
    "confirm",
    "focus",
    "input",
    "inputError",
    "changeCalendarMonth",
    "changeCalendarYear"
  ],
  setup(e, t) {
    const n = d(e, "modelValue"), {
      formatLocal: r,
      formatSaveLocal: s
    } = OF(e), {
      attributesToExcludeFromRender: i
    } = Nt(e), {
      calendarRef: o,
      calendarPanelRef: u,
      calendarPanel2Ref: f,
      focusByCloseRef: A,
      inputRef: E
    } = RF(), {
      componentStyleHide: p
    } = Xt(e), {
      ariaDescribedbyLocal: T,
      changeModel: S,
      clearModel: L,
      errorsId: b,
      helpTextId: I,
      htmlIdLocal: v,
      isErrors: R,
      isModel: g,
      onBlur: D,
      onFocus: w
    } = zt(e, t), {
      isAutofill: F
    } = Ef({ inputRef: E }), {
      currentLanguage: P
    } = yF(e), {
      closePopover: M,
      destroyPopover: O,
      initCalendar: q,
      openPopoverWithFloatingUi: U,
      popupVisible: G,
      setCloseFocus: te
    } = gF(e, {
      calendarRef: o,
      focusByCloseRef: A,
      inputRef: E
    }), {
      ariaExpandedForCalendar: ne,
      ariaHiddenForCalendar: oe,
      idForCalendar: se,
      idForPanel: ie,
      idsForPanelRange: me,
      innerPlaceholder: Ve,
      innerType: Le,
      widthLocal: _e
    } = bF(e, {
      currentLanguage: P,
      popupVisible: G
    }), {
      clearDate: ve,
      confirmDate: be,
      currentValue: je,
      emitDate: Re,
      handleChange: Z,
      handleInput: H,
      handleKeydown: X,
      initCurrentValue: ae,
      onModelValueChange: ye,
      parse: Ce,
      selectDate: qe,
      selectEndDate: Qe,
      selectEndTime: $e,
      selectStartDate: Fe,
      selectStartTime: it,
      selectTime: Ke,
      stringify: lt,
      text: et,
      updateDate: ht,
      userInput: At
    } = IF(e, t, {
      calendarPanelRef: u,
      changeModel: S,
      closePopover: M,
      formatLocal: r,
      formatSaveLocal: s,
      setCloseFocus: te
    }), xt = () => {
      E.value && E.value.blur();
    };
    return ae(), rt(n, ye, {
      immediate: !0
    }), {
      ariaDescribedbyLocal: T,
      ariaExpandedForCalendar: ne,
      ariaHiddenForCalendar: oe,
      attributesToExcludeFromRender: i,
      blur: xt,
      calendarPanel2Ref: f,
      calendarPanelRef: u,
      calendarRef: o,
      changeModel: S,
      clearDate: ve,
      clearModel: L,
      parse: Ce,
      closePopover: M,
      componentStyleHide: p,
      confirmDate: be,
      stringify: lt,
      currentLanguage: P,
      currentValue: je,
      destroyPopover: O,
      emitDate: Re,
      errorsId: b,
      text: et,
      focusByCloseRef: A,
      formatLocal: r,
      handleChange: Z,
      handleInput: H,
      handleKeydown: X,
      helpTextId: I,
      htmlIdLocal: v,
      idForCalendar: se,
      idForPanel: ie,
      idsForPanelRange: me,
      initCalendar: q,
      innerPlaceholder: Ve,
      innerType: Le,
      inputRef: E,
      isAutofill: F,
      isErrors: R,
      isModel: g,
      onBlur: D,
      onFocus: w,
      openPopoverWithFloatingUi: U,
      popupVisible: G,
      selectDate: qe,
      selectEndDate: Qe,
      selectEndTime: $e,
      selectStartDate: Fe,
      selectStartTime: it,
      selectTime: Ke,
      setCloseFocus: te,
      updateDate: ht,
      userInput: At,
      widthLocal: _e
    };
  },
  computed: {
    transform() {
      const e = this.valueType;
      return _u(e) ? { ...Id.date, ...e } : e === "format" ? {
        value2date: this.parse.bind(this),
        date2value: this.stringify.bind(this)
      } : Id[e] || Id.date;
    },
    showClearIcon() {
      return !this.disabled && this.clearable && this.text;
    },
    innerShortcuts() {
      if (Array.isArray(this.shortcuts))
        return this.shortcuts;
      if (this.shortcuts === !1)
        return [];
      const e = this.currentLanguage.pickers;
      return [
        {
          text: e[0],
          onClick(n) {
            n.currentValue = [/* @__PURE__ */ new Date(), new Date(Date.now() + 3600 * 1e3 * 24 * 7)], n.updateDate(!0);
          }
        },
        {
          text: e[1],
          onClick(n) {
            n.currentValue = [/* @__PURE__ */ new Date(), new Date(Date.now() + 3600 * 1e3 * 24 * 30)], n.updateDate(!0);
          }
        },
        {
          text: e[2],
          onClick(n) {
            n.currentValue = [new Date(Date.now() - 3600 * 1e3 * 24 * 7), /* @__PURE__ */ new Date()], n.updateDate(!0);
          }
        },
        {
          text: e[3],
          onClick(n) {
            n.currentValue = [new Date(Date.now() - 3600 * 1e3 * 24 * 30), /* @__PURE__ */ new Date()], n.updateDate(!0);
          }
        }
      ];
    },
    innerDateFormat() {
      return this.dateFormat ? this.dateFormat : typeof this.formatLocal != "string" ? "YYYY-MM-DD" : this.innerType === "date" ? this.formatLocal : this.formatLocal.replace(/[Hh]+.*[msSaAZ]|\[.*?\]/g, "").trim() || "YYYY-MM-DD";
    }
  },
  watch: {
    popupVisible(e) {
      e ? this.initCalendar() : (this.userInput = null, this.blur());
    }
  },
  methods: {
    isValidValue(e) {
      const { value2date: t } = this.transform;
      return yr(t(e));
    },
    isValidRangeValue(e) {
      const { value2date: t } = this.transform;
      return Array.isArray(e) && e.length === 2 && this.isValidValue(e[0]) && this.isValidValue(e[1]) && t(e[1]).getTime() >= t(e[0]).getTime();
    },
    selectRange(e) {
      typeof e.onClick == "function" ? e.onClick(this) !== !1 && this.closePopover() : (this.currentValue = [new Date(e.start), new Date(e.end)], this.updateDate(!0), this.closePopover());
    },
    handleBlur(e) {
      this.$emit("blur", e);
    },
    handleFocus(e) {
      this.initCalendar(), this.$emit("focus", e);
    }
  },
  render() {
    return this.isRender ? this.readonly ? c(Sn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.text,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: this.type
    }) : c("div", {
      ...this.$attrs,
      class: [
        this.class,
        "a_form_element__container"
      ],
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel || this.isAutofill
        }]
      }, [
        this.label && c(Ut, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: this.isLabelFloat,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            class: ["pux_datepicker", {
              pux_datepicker_range: this.range,
              disabled: this.disabled
            }],
            style: { width: this.widthLocal },
            onMousedown: this.initCalendar,
            onTouchstart: this.initCalendar
          }, [
            c("div", {
              class: "pux_datepicker__input_wrapper",
              role: "application"
            }, [
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                class: [
                  "a_form_control pux_datepicker__input",
                  this.inputClass,
                  {
                    a_form_control_invalid: this.isErrors
                  }
                ],
                name: this.inputName,
                type: "text",
                autocomplete: "off",
                disabled: this.disabled,
                readonly: !this.editable,
                value: this.text,
                placeholder: this.innerPlaceholder,
                ariaHaspopup: !0,
                "aria-owns": this.idForCalendar,
                ...this.inputAttr,
                onKeydown: this.handleKeydown,
                onFocus: this.handleFocus,
                onBlur: this.handleBlur,
                onInput: this.handleInput,
                onChange: this.handleChange
              }),
              this.showClearIcon && c("span", {
                class: "pux_datepicker__input_wrapper__append pux_datepicker__input_wrapper__clear_wrapper",
                ariaHidden: !0,
                onMousedown: this.clearDate
              }, [
                c("i", {
                  class: "pux_datepicker__input__icon pux_datepicker__input__clear_icon"
                })
              ]),
              c("span", {
                class: "pux_datepicker__input_wrapper__append"
              }, [
                c(LF)
              ])
            ]),
            c(oa, {
              to: "body"
            }, [
              this.popupVisible && Dt(c("div", {
                ref: "calendarRef",
                id: this.idForCalendar,
                class: "pux_datepicker__popup",
                ariaHidden: this.ariaHiddenForCalendar,
                ariaExpanded: this.ariaExpandedForCalendar,
                style: this.popupStyle
              }, [
                !!(this.range && this.innerShortcuts.length) && c("div", {
                  class: "pux_datepicker__shortcuts_wrapper"
                }, [
                  this.innerShortcuts.map((e, t) => c("button", {
                    key: t,
                    class: "pux_datepicker__shortcuts_wrapper__shortcuts",
                    type: "button",
                    onClick: () => this.selectRange(e)
                  }, e.text))
                ]),
                this.range ? c("div", {
                  class: "pux_datepicker__range_wrapper"
                }, [
                  c(bd, {
                    ref: "calendarPanelRef",
                    id: this.idsForPanelRange[0],
                    currentLanguage: this.currentLanguage,
                    dateFormat: this.innerDateFormat,
                    endAt: this.currentValue[1],
                    firstDayOfWeek: this.firstDayOfWeek,
                    index: 0,
                    minuteStep: this.minuteStep,
                    startAt: null,
                    style: "box-shadow: 1px 0 rgba(0, 0, 0, .1);",
                    type: this.innerType,
                    value: this.currentValue[0],
                    visible: this.popupVisible,
                    onSelectDate: this.selectStartDate,
                    onSelectTime: this.selectStartTime,
                    onClosePopup: this.closePopover
                  }),
                  c(bd, {
                    ref: "calendarPanel2Ref",
                    id: this.idsForPanelRange[1],
                    currentLanguage: this.currentLanguage,
                    dateFormat: this.innerDateFormat,
                    endAt: null,
                    firstDayOfWeek: this.firstDayOfWeek,
                    index: 1,
                    minuteStep: this.minuteStep,
                    startAt: this.currentValue[0],
                    type: this.innerType,
                    value: this.currentValue[1],
                    visible: this.popupVisible,
                    onSelectDate: this.selectEndDate,
                    onSelectTime: this.selectEndTime,
                    onClosePopup: this.closePopover
                  })
                ]) : c(bd, {
                  ref: "calendarPanelRef",
                  id: this.idForPanel,
                  currentLanguage: this.currentLanguage,
                  dateFormat: this.innerDateFormat,
                  firstDayOfWeek: this.firstDayOfWeek,
                  index: -1,
                  minuteStep: this.minuteStep,
                  type: this.innerType,
                  value: this.currentValue,
                  visible: this.popupVisible,
                  onSelectDate: this.selectDate,
                  onSelectTime: this.selectTime,
                  onClosePopup: this.closePopover
                }),
                this.confirm && c("div", {
                  class: "pux_datepicker__footer"
                }, [
                  c("button", {
                    class: "pux_datepicker__footer__btn pux_datepicker__footer__btn_confirm",
                    type: "button",
                    onClick: this.confirmDate
                  }, this.confirmText)
                ])
              ]), [
                [Sl, {
                  mounted: this.openPopoverWithFloatingUi
                }]
              ])
            ]),
            c("div", {
              ref: "focusByCloseRef",
              ariaHidden: !0,
              tabindex: -1
            })
          ])
          /*
           * this.isClearButtonLocal && h(AFormElementBtnClear, {
           *   disabled: this.disabled,
           *   clearButtonClass: this.clearButtonClass,
           *   onClear: this.clearModel,
           * }),
           */
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function CF({
  idFrom: e = _(() => "")
}) {
  return {
    setFocusToFromInput: () => {
      const n = document.getElementById(e.value);
      n && n.focus();
    }
  };
}
function DF({
  htmlIdLocal: e = _(() => "")
}) {
  const t = _(() => `${e.value}_from`), n = _(() => `${e.value}_until`);
  return {
    idFrom: t,
    idUntil: n
  };
}
function NF(e, {
  htmlIdLocal: t = _(() => ""),
  idFrom: n = _(() => ""),
  idUntil: r = _(() => "")
}) {
  const s = d(e, "inputAttributes"), i = d(e, "inputAttributesFrom"), o = d(e, "inputAttributesUntil"), u = _(() => `${t.value}_label`), f = _(() => ({
    "aria-labelledby": `${u.value} ${n.value}`,
    ...s.value,
    ...i.value
  })), A = _(() => ({
    "aria-labelledby": `${u.value} ${r.value}`,
    ...s.value,
    ...o.value
  }));
  return {
    inputAttributesFromLocal: f,
    inputAttributesUntilLocal: A
  };
}
function BF(e, {
  changeModel: t = () => ({})
}) {
  const n = d(e, "keyFrom"), r = d(e, "keyUntil"), s = d(e, "modelValue"), i = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[n.value];
  }), o = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[r.value];
  });
  return {
    changeModelFrom: (A) => {
      const E = he(s.value) || {};
      E[n.value] = A, t({ model: E });
    },
    changeModelUntil: (A) => {
      const E = he(s.value) || {};
      E[r.value] = A, t({ model: E });
    },
    modelValueFrom: i,
    modelValueUntil: o
  };
}
function wF(e) {
  const t = d(e, "readonlyDefault"), n = d(e, "readonlyDefaultFrom"), r = d(e, "readonlyDefaultUntil"), s = _(() => Be(n.value) ? t.value : n.value), i = _(() => Be(r.value) ? t.value : r.value);
  return {
    readonlyDefaultFromLocal: s,
    readonlyDefaultUntilLocal: i
  };
}
const PF = {
  name: "ADatepickerRange",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    appendToBody: {
      type: Boolean,
      default: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearable: {
      type: Boolean,
      default: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    disabledFrom: {
      type: Boolean,
      required: !1
    },
    disabledUntil: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    firstDayOfWeek: {
      type: Number,
      required: !1,
      default: 1,
      validator: (e) => e >= 1 && e <= 7
    },
    format: {
      type: [String, Object],
      default: "DD.MM.YYYY"
    },
    formatSave: {
      type: String,
      required: !1,
      default: "YYYY-MM-DD"
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconDay: {
      type: [Number, String],
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_datepicker_range_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesFrom: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesUntil: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      default: "pux_datepicker__input"
    },
    inputName: {
      type: String,
      default: "date"
    },
    inputWidth: {
      type: [Number, String],
      required: !1,
      default: 270
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyFrom: {
      tpe: String,
      required: !1,
      default: "from"
    },
    keyUntil: {
      tpe: String,
      required: !1,
      default: "until"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelFrom: {
      type: String,
      required: !1,
      default: "_A_DATEPICKER_RANGE_FROM_"
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    labelUntil: {
      type: String,
      required: !1,
      default: "_A_DATEPICKER_RANGE_UNTIL_"
    },
    lang: {
      type: String,
      default: "de",
      required: !1
    },
    modelUndefined: {
      required: !1,
      default: void 0
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholderFrom: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholderUntil: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => Gn.indexOf(e) !== -1
    },
    popupStyle: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    readonlyDefaultFrom: {
      type: String,
      required: !1,
      default: void 0
    },
    readonlyDefaultUntil: {
      type: String,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    shortcuts: {
      type: [Boolean, Array],
      default: !0
    },
    type: {
      type: String,
      required: !1,
      default: "dateRange"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      componentStyleHide: r
    } = Xt(e), {
      changeModel: s,
      errorsId: i,
      helpTextId: o,
      htmlIdLocal: u,
      isErrors: f
    } = zt(e, t), {
      changeModelFrom: A,
      changeModelUntil: E,
      modelValueFrom: p,
      modelValueUntil: T
    } = BF(e, {
      changeModel: s
    }), {
      idFrom: S,
      idUntil: L
    } = DF({
      htmlIdLocal: u
    }), {
      inputAttributesFromLocal: b,
      inputAttributesUntilLocal: I
    } = NF(e, {
      htmlIdLocal: u,
      idFrom: S,
      idUntil: L
    }), {
      setFocusToFromInput: v
    } = CF({
      idFrom: S
    }), {
      destroyEventBusClickLabel: R,
      initEventBusClickLabel: g
    } = pf({
      htmlIdLocal: u,
      clickLabel: v
    }), {
      readonlyDefaultFromLocal: D,
      readonlyDefaultUntilLocal: w
    } = wF(e);
    return g(), Ot(() => {
      R();
    }), {
      attributesToExcludeFromRender: n,
      changeModelFrom: A,
      changeModelUntil: E,
      componentStyleHide: r,
      errorsId: i,
      helpTextId: o,
      htmlIdLocal: u,
      idFrom: S,
      idUntil: L,
      inputAttributesFromLocal: b,
      inputAttributesUntilLocal: I,
      isErrors: f,
      modelValueFrom: p,
      modelValueUntil: T,
      readonlyDefaultFromLocal: D,
      readonlyDefaultUntilLocal: w
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Sn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      isRange: !0,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "dateRange",
      valueParentClass: "a_form_element_readonly_value_range"
    }, () => [
      c(ui, {
        id: this.idFrom,
        alwaysTranslate: this.alwaysTranslate,
        format: this.format,
        formatSave: this.formatSave,
        iconDay: this.iconDay,
        label: this.labelFrom,
        lang: this.lang,
        modelValue: this.modelValueFrom,
        readonly: !0,
        readonlyDefault: this.readonlyDefaultFromLocal,
        shortcuts: this.shortcuts,
        type: "date"
      }),
      c(ui, {
        id: this.idUntil,
        alwaysTranslate: this.alwaysTranslate,
        format: this.format,
        formatSave: this.formatSave,
        iconDay: this.iconDay,
        lang: this.lang,
        label: this.labelUntil,
        modelValue: this.modelValueUntil,
        readonly: !0,
        readonlyDefault: this.readonlyDefaultUntilLocal,
        shortcuts: this.shortcuts,
        type: "date"
      })
    ]) : c("div", {
      ...this.$attrs,
      class: "a_datepicker_range",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_invalid: this.isErrors
        }]
      }, [
        this.label && c(Ut, {
          id: this.idFrom,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: !1,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_datepicker_range__content"
        }, [
          c("div", {
            class: "a_datepicker_range__group a_datepicker_range__group_min"
          }, [
            c(Ut, {
              id: this.idFrom,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_datepicker_range__label a_datepicker_range__label_min",
              isLabelFloat: !1,
              label: this.labelFrom,
              isError: this.isErrors
            }),
            c(ui, {
              id: this.idFrom,
              ref: "from",
              alwaysTranslate: this.alwaysTranslate,
              inputAttr: this.inputAttributesFromLocal,
              modelValue: this.modelValueFrom,
              formatSave: this.formatSave,
              firstDayOfWeek: this.firstDayOfWeek,
              appendToBody: this.appendToBody,
              popupStyle: this.popupStyle,
              iconDay: this.iconDay,
              inputName: this.inputName,
              placement: this.placement,
              clearable: this.clearable,
              shortcuts: this.shortcuts,
              lang: this.lang,
              inputClass: this.inputClass,
              placeholder: this.placeholderFrom,
              disabled: this.disabled || this.disabledFrom,
              width: this.inputWidth,
              format: this.format,
              type: "date",
              onChange: this.changeModelFrom
            })
          ]),
          c("div", {
            class: "a_datepicker_range__group"
          }, [
            c(Ut, {
              id: this.idUntil,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_datepicker_range__label a_datepicker_range__label_max",
              isLabelFloat: !1,
              label: this.labelUntil,
              isError: this.isErrors
            }),
            c(ui, {
              id: this.idUntil,
              ref: "until",
              alwaysTranslate: this.alwaysTranslate,
              modelValue: this.modelValueUntil,
              formatSave: this.formatSave,
              firstDayOfWeek: this.firstDayOfWeek,
              appendToBody: this.appendToBody,
              popupStyle: this.popupStyle,
              iconDay: this.iconDay,
              inputName: this.inputName,
              placement: this.placement,
              clearable: this.clearable,
              shortcuts: this.shortcuts,
              lang: this.lang,
              inputClass: this.inputClass,
              placeholder: this.placeholderUntil,
              disabled: this.disabled || this.disabledUntil,
              width: this.inputWidth,
              format: this.format,
              type: "date",
              inputAttr: this.inputAttributesUntilLocal,
              onChange: this.changeModelUntil
            })
          ]),
          c(Yt, {
            alwaysTranslate: this.alwaysTranslate,
            class: "a_datepicker_range__help_text",
            id: this.helpTextId,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(en, {
            id: this.errorsId,
            alwaysTranslate: this.alwaysTranslate,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
};
function xF(e, {
  isOpen: t = B(!1)
}) {
  const n = d(e, "btnIconLeftLess"), r = d(e, "btnIconLeftMore"), s = d(e, "btnIconRightLess"), i = d(e, "btnIconRightMore"), o = d(e, "btnTextLess"), u = d(e, "btnTextMore"), f = d(e, "btnTitleLess"), A = d(e, "btnTitleMore"), E = d(e, "showLess"), p = B(void 0), T = _(() => t.value ? o.value : u.value), S = _(() => t.value ? f.value : A.value), L = _(() => t.value ? n.value : r.value), b = _(() => t.value ? s.value : i.value), I = _(() => t.value ? E.value : !0);
  return {
    btnIconLeft: L,
    btnIconRight: b,
    btnText: T,
    btnTitle: S,
    buttonRef: p,
    isButtonVisible: I
  };
}
function MF(e) {
  const t = d(e, "isOpenDefault"), n = B(void 0);
  return {
    initIsOpen: () => {
      n.value = t.value;
    },
    isOpen: n
  };
}
function FF(e, {
  isOpen: t = B(!1)
}) {
  const n = d(e, "htmlLess"), r = d(e, "htmlMore"), s = d(e, "safeHtmlLess"), i = d(e, "safeHtmlMore"), o = d(e, "textLess"), u = d(e, "textMore"), f = _(() => t.value ? r.value : n.value), A = _(() => t.value ? i.value : s.value), E = _(() => t.value ? u.value : o.value), p = _(() => !!(E.value || A.value || f.value));
  return {
    htmlLocal: f,
    isTextOrHtmlVisible: p,
    safeHtmlLocal: A,
    textLocal: E
  };
}
const qF = [
  "a[href]:not([tabindex='-1'])",
  "button:not([disabled]):not([tabindex='-1'])",
  "area[href]:not([tabindex='-1'])",
  "input:not([disabled]):not([tabindex='-1'])",
  "select:not([disabled]):not([tabindex='-1'])",
  "textarea:not([disabled]):not([tabindex='-1'])",
  "iframe:not([tabindex='-1'])",
  "[tabindex]:not([tabindex='-1'])",
  "[contentEditable=true]:not([tabindex='-1'])"
], vi = qF.join(", ");
function ffe({ element: e, isMiddleOfScreen: t = !0, behavior: n = "smooth" }) {
  t ? window.scroll({
    top: e.offsetTop - window.innerHeight / 2,
    behavior: n
  }) : e.scrollIntoView();
}
function Rr({ element: e, selector: t }) {
  const n = e || document.querySelector(t);
  n && (n.hasAttribute("tabindex") ? n.focus() : (n.setAttribute("tabindex", "-1"), n.focus(), n.removeAttribute("tabindex")));
}
function nS(e) {
  const t = e.getBoundingClientRect();
  return t.width > 0 && t.height > 0;
}
function $F({ element: e } = {}) {
  const t = document.querySelectorAll(vi), n = e || document.activeElement, r = Array.from(t).indexOf(n);
  if (r !== -1) {
    let s = r + 1;
    s >= t.length && (s = 0);
    let i = t[s];
    for (; s < t.length && !nS(i); )
      s++, s >= t.length && (s = 0), i = t[s];
    s < t.length && i.focus();
  }
}
function UF({ element: e } = {}) {
  const t = document.querySelectorAll(vi), n = e || document.activeElement, r = Array.from(t).indexOf(n);
  if (r !== -1) {
    let s = r - 1;
    s < 0 && (s = t.length - 1);
    let i = t[s];
    for (; s >= 0 && !nS(i); )
      s--, s < 0 && (s = t.length - 1), i = t[s];
    s >= 0 && i.focus();
  }
}
function hfe({ element: e }) {
  if (e.id)
    return `#${e.id}`;
  const t = [];
  for (; e; ) {
    const n = e.tagName;
    n === "BODY" || n === "HTML" ? t.unshift(n) : t.unshift(
      e.className ? `${n}.${e.className.replace(/\s+/g, ".")}` : n
    );
    const r = parent.children;
    r != null && r.length && r.length > 1 && (t[0] += `:nth-child(${Array.prototype.indexOf.call(r, e) + 1})`), e = e.parentElement;
  }
  return t.join(" > ");
}
function kF(e, { emit: t }, {
  isOpen: n = B(!1)
}) {
  const r = B(void 0);
  return {
    containerRef: r,
    toggleButton: () => {
      n.value = !n.value, t("toggle", { isOpen: n.value }), n.value && !window.isScrollDisabled && pi().then(
        () => Rr({
          element: r.value
        })
      );
    }
  };
}
const Afe = {
  name: "ADisclosure",
  inheritAttrs: !0,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    btnAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link a_p_0"
    },
    btnIconLeftLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconLeftMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnId: {
      type: String,
      required: !1,
      default: void 0
    },
    btnParentClass: {
      type: String,
      required: !1,
      default: "a_text_center"
    },
    btnTextLess: {
      type: String,
      required: !1,
      default: "_A_DISCLOSURE_LESS_"
    },
    btnTextMore: {
      type: String,
      required: !1,
      default: "_A_DISCLOSURE_MORE_"
    },
    btnTitleLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitleMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitlePlacement: {
      type: String,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    htmlLess: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlMore: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_disclosure_")
    },
    isBtnTitleHtml: {
      type: Boolean,
      required: !1
    },
    isOpenDefault: {
      type: Boolean,
      required: !1,
      default: !1
    },
    safeHtmlLess: {
      type: String,
      required: !1,
      default: void 0
    },
    safeHtmlMore: {
      type: String,
      required: !1,
      default: void 0
    },
    showLess: {
      type: Boolean,
      required: !1,
      default: !0
    },
    textLess: {
      type: String,
      required: !1,
      default: void 0
    },
    textMore: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      initIsOpen: r,
      isOpen: s
    } = MF(e), {
      htmlLocal: i,
      isTextOrHtmlVisible: o,
      safeHtmlLocal: u,
      textLocal: f
    } = FF(e, {
      isOpen: s
    }), {
      containerRef: A,
      toggleButton: E
    } = kF(e, t, {
      isOpen: s
    }), {
      btnIconLeft: p,
      btnIconRight: T,
      btnText: S,
      btnTitle: L,
      buttonRef: b,
      isButtonVisible: I
    } = xF(e, {
      isOpen: s
    });
    return r(), n({
      buttonRef: b,
      containerRef: A,
      isOpen: s,
      toggleButton: E
    }), {
      btnIconLeft: p,
      btnIconRight: T,
      btnText: S,
      btnTitle: L,
      buttonRef: b,
      containerRef: A,
      htmlLocal: i,
      isButtonVisible: I,
      isOpen: s,
      isTextOrHtmlVisible: o,
      safeHtmlLocal: u,
      textLocal: f,
      toggleButton: E
    };
  },
  render() {
    return c("div", {
      class: [
        "a_show_more",
        {
          a_show_more_open: this.isOpen
        }
      ]
    }, [
      c("div", {
        class: "a_show_more__wrapper"
      }, [
        c("div", {
          ref: "containerRef",
          id: this.id,
          ariaExpanded: this.isOpen,
          ...this.$attrs
        }, [
          this.isTextOrHtmlVisible && c(Ee, {
            alwaysTranslate: this.alwaysTranslate,
            html: this.htmlLocal,
            safeHtml: this.safeHtmlLocal,
            tag: "div",
            text: this.textLocal
          }),
          this.isOpen ? this.$slots.more && this.$slots.more({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          }) : this.$slots.less && this.$slots.less({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          })
        ])
      ]),
      this.isButtonVisible && c("div", {
        class: this.btnParentClass
      }, [
        c(Ae, {
          ref: "buttonRef",
          id: this.btnId,
          alwaysTranslate: this.alwaysTranslate,
          "aria-controls": this.id,
          class: [
            "a_show_more__button",
            this.btnClass
          ],
          disabled: this.disabled,
          iconLeft: this.btnIconLeft,
          iconRight: this.btnIconRight,
          isTitleHtml: this.isBtnTitleHtml,
          text: this.btnText,
          title: this.btnTitle,
          titlePlacement: this.btnTitlePlacement,
          type: "button",
          ...this.btnAttributes,
          onClick: this.toggleButton
        }, () => this.$slots.button && this.$slots.button({
          isButtonVisible: this.isButtonVisible,
          isOpen: this.isOpen
        }))
      ])
    ]);
  }
};
function HF(e) {
  const t = d(e, "action");
  return {
    attributesAction: _(() => {
      const r = {
        ...t.value,
        isHiddenCallback: void 0,
        classReplace: void 0
      };
      return t.value.classReplace ? r.class = t.value.classReplace : ot(r.class) ? r.class += " a_dropdown__item" : at(r.class) ? r.class.a_dropdown__item = !0 : r.class = "a_dropdown__item", r.type === "link" && (r.type = void 0), r;
    })
  };
}
const VF = {
  name: "ADropdownAction",
  props: {
    action: {
      type: Object,
      required: !0
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      attributesAction: t
    } = HF(e);
    return {
      attributesAction: t
    };
  },
  render() {
    return this.action.type === "button" ? c("li", {
      class: this.action.liClass
    }, [
      c(pt, {
        ...this.attributesAction,
        alwaysTranslate: this.alwaysTranslate,
        isHidden: void 0,
        callback: void 0,
        classButton: void 0,
        classExtra: void 0,
        isConfirm: void 0,
        callbackLocal: void 0,
        onClick: this.action.callback
      })
    ]) : this.action.type === "divider" ? c("li", {
      class: [
        "a_dropdown__divider",
        this.action.liClass
      ]
    }) : this.action.type === "link" ? c("li", {
      class: this.action.liClass
    }, [
      c($u, {
        ...this.attributesAction,
        alwaysTranslate: this.alwaysTranslate,
        classButton: void 0,
        classExtra: void 0,
        isHidden: void 0,
        isConfirm: void 0,
        callbackLocal: void 0
      })
    ]) : this.action.type === "template" && this.action.slotName && this.$slots[this.action.slotName] ? this.$slots[this.action.slotName]({
      action: this.action
    }) : null;
  }
}, Ma = B({});
function af({ id: e, idRef: t } = {}) {
  const n = _(() => vd(t ? { id: t.value } : { id: e })), r = _(() => {
    let s = !1;
    return En(Ma.value) || z(Ma.value, (i) => {
      if (i)
        return s = !0, !1;
    }), s;
  });
  return {
    closePopup: Jd,
    isCurrentPopupOpen: vd,
    isOnePopupOpen: r,
    isPopupOpen: n,
    openPopup: Zd,
    popupOpenIds: Ma,
    togglePopup: WF
  };
}
function vd({ id: e }) {
  return !!Ma.value[e];
}
function Zd({ id: e }) {
  Ma.value[e] = !0;
}
function Jd({ id: e }) {
  e in Ma.value && delete Ma.value[e];
}
function WF({ id: e, statusOpen: t }) {
  Be(t) ? Ma.value[e] ? Jd({ id: e }) : Zd({ id: e }) : t ? Zd({ id: e }) : Jd({ id: e });
}
function rS({ actions: e }) {
  const t = Lt(e, (s) => !s.isHidden), n = [];
  z(t, (s) => {
    (s.type !== "divider" || n.length > 0 && Li(n).type !== "divider") && n.push(s);
  });
  const r = Li(n);
  return r && r.type === "divider" && n.pop(), n;
}
function jo({ class1: e, class2: t, defaultValue: n = void 0 }) {
  return e ? t ? `${e} ${t}` : e : t || n;
}
function GF(e) {
  const t = d(e, "actions"), n = _(() => rS({
    actions: t.value
  })), r = _(() => n.value.length > 0);
  return {
    actionsFiltered: n,
    hasActions: r
  };
}
function jF(e, {
  eventsMenu: t = _(() => ({})),
  statusExpanded: n = B(!1),
  wasOpened: r = B(!1)
}) {
  const s = d(e, "buttonAttributes"), i = d(e, "buttonTag"), o = d(e, "disabled"), u = d(e, "dropdownAttributes"), f = d(e, "dropdownClass"), A = d(e, "id"), E = d(e, "menuWidth"), p = d(e, "persist"), T = _(() => s.value.id || A.value), S = _(() => {
    const v = he(s.value);
    return v["aria-haspopup"] = "true", v["aria-expanded"] = n.value, i.value === "button" && (v.type = v.type || "button"), v;
  }), L = _(() => {
    const v = {};
    return o.value && (i.value === "button" ? v.disabled = !0 : i.value === "a" && (v.ariaDisabled = !0)), v;
  }), b = _(() => {
    const v = he(u.value);
    return v.class = ["a_dropdown__menu", f.value, {
      a_dropdown__menu_show: n.value
    }], E.value && (v.style = `width: ${E.value}px`), Pd({}, v, t.value);
  }), I = _(() => n.value || p.value && r.value);
  return {
    idLocal: T,
    buttonAttributesDisabled: L,
    buttonAttributesLocal: S,
    dropdownAttributesLocal: b,
    isMenuRendered: I
  };
}
function KF(e) {
  const t = d(e, "buttonClass"), n = d(e, "class");
  return {
    buttonClassLocal: _(() => {
      let s = {};
      return t.value && (ot(t.value) ? s[t.value] = !0 : at(t.value) && (s = Pd(s, t.value))), n.value && (ot(n.value) ? s[n.value] = !0 : at(n.value) && (s = Pd(s, n.value))), s;
    })
  };
}
function zF(e, {
  onToggle: t = () => {
  },
  onKeydown: n = () => {
  },
  onOpen: r = () => {
  },
  onClose: s = () => {
  },
  timerCloseHover: i = B(void 0),
  triggerOpen: o = B(void 0)
}) {
  const u = d(e, "triggers"), f = _(() => {
    const S = {};
    return z(u.value, (L) => {
      S[L] = !0;
    }), S;
  }), A = _(() => {
    const S = {};
    return f.value.click && (S.onClick = t, S.onKeydown = n), f.value.focus && (S.onFocus = () => r({ trigger: "focus" })), f.value.hover && (S.onMouseenter = () => r({ trigger: "hover" }), S.onMouseleave = () => s({ trigger: "hover" })), S;
  }), E = () => {
    o.value === "hover" && clearTimeout(i.value);
  }, p = () => {
    s({ trigger: "hover" });
  }, T = _(() => {
    const S = {};
    return f.value.hover && (S.onMouseenter = E, S.onMouseleave = p), S;
  });
  return {
    eventsLocal: A,
    eventsMenu: T
  };
}
function YF(e, {
  dropdownRef: t = B(void 0)
}) {
  const n = d(e, "elementsForArrows");
  return {
    setFocusToFirstElement: () => {
      if (!t.value)
        return;
      const s = t.value.querySelectorAll(n.value);
      s.length !== 0 && s[0].focus();
    }
  };
}
function XF(e, {
  dropdownButtonRef: t = B(void 0),
  dropdownRef: n = B(void 0)
}) {
  const r = d(e, "floatingFlip"), s = d(e, "floatingShift"), i = d(e, "placement"), o = B(void 0), u = _(() => {
    var p, T;
    const E = [];
    return (p = r.value) != null && p.use && E.push(
      wl(r.value)
    ), (T = s.value) != null && T.use && E.push(
      Bl(s.value)
    ), E;
  });
  return {
    destroyPopover: () => {
      o.value && (o.value(), o.value = void 0);
    },
    startPopper: () => {
      !o.value && t.value.$el && n.value && (o.value = Nl(
        t.value.$el,
        n.value,
        () => {
          !t.value.$el || !n.value || Pl(
            t.value.$el,
            n.value,
            {
              placement: i.value,
              middleware: u.value
            }
          ).then(({ x: E, y: p }) => {
            Object.assign(n.value.style, {
              left: `${E}px`,
              top: `${p}px`
            });
          });
        }
      ));
    }
  };
}
function ZF() {
  const e = B(void 0), t = B(void 0);
  return {
    dropdownButtonRef: e,
    dropdownRef: t
  };
}
const yd = B(!1);
function aS() {
  return {
    closeDropdownGlobal: () => {
      yd.value = !1;
    },
    isDropdownGlobalOpen: yd,
    openDropdownGlobal: () => {
      yd.value = !0;
    }
  };
}
function JF(e, { emit: t }, {
  closePopup: n = () => {
  },
  dropdownButtonRef: r = B(void 0),
  dropdownRef: s = B(void 0),
  destroyPopover: i = () => {
  },
  openPopup: o = () => {
  },
  setFocusToFirstElement: u = () => {
  },
  startPopper: f = () => {
  }
}) {
  const A = d(e, "disabled"), E = d(e, "dropdownRenderDefault"), p = d(e, "elementsForArrows"), T = d(e, "id"), S = d(e, "isCloseByClickInside"), L = d(e, "isCloseByClickOutside"), b = d(e, "isListWidthSameWithButton"), I = d(e, "lockArrowsNavigation"), v = d(e, "lockTabNavigation"), R = d(e, "persist"), g = d(e, "useEscape"), D = B(void 0), w = B(!1), F = B(!1), P = B(void 0), M = B(void 0), O = B(!1), {
    closeDropdownGlobal: q,
    openDropdownGlobal: U
  } = aS(), G = () => {
    O.value = E.value || !1;
  }, te = ({ down: H }) => {
    var ae;
    const X = s.value.querySelectorAll(p.value);
    if (X.length !== 0) {
      if (((ae = r.value) == null ? void 0 : ae.$el) === document.activeElement) {
        H ? X[0].focus() : X[X.length - 1].focus();
        return;
      }
      z(X, (ye, Ce) => {
        if (ye === document.activeElement)
          return H ? Ce < X.length - 1 && X[Ce + 1].focus() : Ce > 0 && X[Ce - 1].focus(), !1;
      });
    }
  }, ne = () => {
    var H, X;
    (X = (H = r.value) == null ? void 0 : H.$el) == null || X.focus();
  }, oe = (H) => {
    const X = H || window.$event;
    if (X.keyCode === J.arrowDown || X.keyCode === J.arrowUp) {
      if (!I.value)
        return;
      const ae = X.keyCode === J.arrowDown;
      te({ down: ae }), H.preventDefault(), H.stopPropagation();
    } else if (X.keyCode === J.escape)
      g.value && (Re({ trigger: "click" }), H.preventDefault(), H.stopPropagation());
    else if (X.keyCode === J.tab) {
      if (!v.value)
        return;
      X.shiftKey ? (Re(), setTimeout(() => {
        var ae;
        UF({
          element: (ae = r.value) == null ? void 0 : ae.$el
        });
      })) : (Re(), setTimeout(() => {
        var ae;
        $F({
          element: (ae = r.value) == null ? void 0 : ae.$el
        });
      })), H.stopPropagation(), H.preventDefault();
    }
  }, se = () => {
    L.value && document.addEventListener("click", Z);
  }, ie = () => {
    L.value && document.removeEventListener("click", Z);
  }, me = () => {
    w.value || (w.value = !0, document.body.addEventListener("keydown", oe));
  }, Ve = () => {
    w.value && (w.value = !1, document.body.removeEventListener("keydown", oe));
  }, Le = () => {
    b.value && r.value && (D.value = r.value.clientWidth);
  }, _e = ({ trigger: H = "click", selectorToFocus: X } = {}) => {
    H === "hover" && M.value === "hover" && clearTimeout(P.value), !(A.value || F.value) && (M.value = H, Le(), me(), F.value = !0, R.value && O.value && f(), O.value = !0, setTimeout(() => {
      se(), X ? setTimeout(() => {
        document.getElementById(X).focus();
      }) : H === "click" && setTimeout(() => {
        u();
      }), U(), o({
        id: T.value
      }), t("open");
    }));
  }, ve = ({ $event: H }) => {
    M.value === "hover" ? F.value && (M.value = "click", H.stopPropagation()) : F.value ? Re({ trigger: "click" }) : _e();
  }, be = (H) => {
    (H.keyCode === J.enter || H.keyCode === J.space) && (ve({ $event: H }), H.stopPropagation(), H.preventDefault()), (H.keyCode === J.arrowUp || H.keyCode === J.arrowDown) && (F.value || _e());
  };
  function je({ trigger: H }) {
    ie(), Ve(), i(), F.value = !1, q(), H && H !== "hover" && // the event did not come from outside
    M.value !== "hover" && ne(), M.value = void 0, n({
      id: T.value
    }), t("close");
  }
  function Re({ trigger: H } = {}) {
    if (F.value)
      if (H === "hover") {
        if (M.value !== "hover")
          return;
        P.value = setTimeout(() => {
          je({ trigger: H });
        }, 120);
      } else
        je({ trigger: H });
  }
  function Z(H) {
    s.value.contains(H.target) ? S.value && (Re(), ne()) : Re();
  }
  return {
    buttonWidth: D,
    destroyEventCloseClick: ie,
    destroyEventPressArrows: Ve,
    initWasOpened: G,
    onClose: Re,
    onKeydown: be,
    onOpen: _e,
    onToggle: ve,
    statusExpanded: F,
    timerCloseHover: P,
    triggerOpen: M,
    wasOpened: O
  };
}
const Ua = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-down" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708"/>
</svg>`, la = {
  name: "ADropdown",
  inheritAttrs: !1,
  props: {
    actions: {
      type: Array,
      required: !1,
      default: () => []
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    buttonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    buttonIconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonIconClass: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonIconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    buttonIconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    buttonIconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonIsTitleHtml: {
      type: Boolean,
      required: !1
    },
    buttonLoading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    buttonLoadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    buttonLoadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    buttonPrevent: {
      type: Boolean,
      required: !1
    },
    buttonStop: {
      type: Boolean,
      required: !1
    },
    buttonTag: {
      type: String,
      required: !1,
      default: "button"
    },
    buttonText: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTextAriaHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    buttonTextClass: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonTextScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTitle: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    buttonTitlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => ["top", "left", "bottom", "right"].indexOf(e) !== -1
    },
    caretIcon: {
      type: String,
      required: !1,
      default: Ua
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dropdownClass: {
      type: String,
      required: !1,
      default: void 0
    },
    dropdownRenderDefault: {
      type: Boolean,
      required: !1
    },
    dropdownTag: {
      type: String,
      required: !1,
      default: "ul"
    },
    elementsForArrows: {
      type: String,
      required: !1,
      default: vi
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    floatingFlip: {
      type: Object,
      required: !1,
      /*
       * mainAxis?: boolean;
       * crossAxis?: boolean;
       * fallbackAxisSideDirection?: 'none' | 'start' | 'end';
       * flipAlignment?: boolean;
       * fallbackPlacements?: Array<Placement>;
       * fallbackStrategy?: 'bestFit' | 'initialPlacement';
       */
      default: () => ({})
    },
    floatingShift: {
      type: Object,
      required: !1,
      default: () => ({
        use: !0,
        crossAxis: !0,
        padding: 20
      })
    },
    hasCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_dropdown_btn_")
    },
    inBody: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isCloseByClickInside: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isCloseByClickOutside: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHideWithoutActionAndSlot: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isListWidthSameWithButton: {
      type: Boolean,
      required: !1
    },
    lockArrowsNavigation: {
      type: Boolean,
      required: !1,
      default: !0
    },
    lockTabNavigation: {
      type: Boolean,
      required: !1,
      default: !0
    },
    menuWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    persist: {
      type: Boolean,
      required: !1,
      default: !0
    },
    placement: {
      type: String,
      required: !1,
      default: "bottom-start",
      validator: (e) => Gn.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: "a_tooltip_container"
    },
    triggers: {
      type: Array,
      required: !1,
      default: () => ["click"],
      validator: (e) => dw(e, ["click", "hover", "focus"]).length === 0
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: [
    "open",
    "close"
  ],
  setup(e, t) {
    const n = d(e, "id"), {
      closePopup: r,
      openPopup: s
    } = af(), {
      dropdownButtonRef: i,
      dropdownRef: o
    } = ZF(), {
      setFocusToFirstElement: u
    } = YF(e, {
      dropdownRef: o
    }), {
      destroyPopover: f,
      startPopper: A
    } = XF(e, {
      dropdownButtonRef: i,
      dropdownRef: o
    }), {
      buttonWidth: E,
      destroyEventCloseClick: p,
      destroyEventPressArrows: T,
      initWasOpened: S,
      onClose: L,
      onKeydown: b,
      onOpen: I,
      onToggle: v,
      statusExpanded: R,
      timerCloseHover: g,
      triggerOpen: D,
      wasOpened: w
    } = JF(e, t, {
      closePopup: r,
      destroyPopover: f,
      dropdownButtonRef: i,
      dropdownRef: o,
      openPopup: s,
      setFocusToFirstElement: u,
      startPopper: A
    }), {
      eventsLocal: F,
      eventsMenu: P
    } = zF(e, {
      onToggle: v,
      onKeydown: b,
      onOpen: I,
      onClose: L,
      timerCloseHover: g,
      triggerOpen: D
    }), {
      idLocal: M,
      buttonAttributesDisabled: O,
      buttonAttributesLocal: q,
      dropdownAttributesLocal: U,
      isMenuRendered: G
    } = jF(e, {
      eventsMenu: P,
      statusExpanded: R,
      wasOpened: w
    }), {
      actionsFiltered: te,
      hasActions: ne
    } = GF(e), {
      addPopperContainerInBody: oe,
      popperContainerIdSelector: se
    } = Yc(e), {
      buttonClassLocal: ie
    } = KF(e);
    return S(), oe(), Ot(() => {
      p(), T(), f(), r({
        id: n.value
      });
    }), {
      actionsFiltered: te,
      buttonAttributesDisabled: O,
      buttonAttributesLocal: q,
      buttonClassLocal: ie,
      buttonWidth: E,
      dropdownAttributesLocal: U,
      dropdownButtonRef: i,
      dropdownRef: o,
      eventsLocal: F,
      hasActions: ne,
      idLocal: M,
      isMenuRendered: G,
      onClose: L,
      onOpen: I,
      popperContainerIdSelector: se,
      startPopper: A,
      statusExpanded: R
    };
  },
  render() {
    return this.isHideWithoutActionAndSlot && !this.hasActions && !this.$slots.dropdown ? null : [
      c(Ae, {
        ref: "dropdownButtonRef",
        ...this.$attrs,
        id: this.idLocal,
        alwaysTranslate: this.alwaysTranslate,
        tag: this.buttonTag,
        class: this.buttonClassLocal,
        text: this.buttonText,
        textScreenReader: this.buttonTextScreenReader,
        textAriaHidden: this.buttonTextAriaHidden,
        textClass: this.buttonTextClass,
        title: this.buttonTitle,
        isTitleHtml: this.buttonIsTitleHtml,
        titlePlacement: this.buttonTitlePlacement,
        loading: this.buttonLoading,
        loadingClass: this.buttonLoadingClass,
        loadingAlign: this.buttonLoadingAlign,
        iconLeft: this.buttonIconLeft,
        iconRight: this.buttonIconRight,
        iconClass: this.buttonIconClass,
        iconAttributes: this.buttonIconAttributes,
        iconTag: this.buttonIconTag,
        prevent: this.buttonPrevent,
        stop: this.buttonStop,
        extra: this.extra,
        type: "button",
        attributes: this.buttonAttributesLocal,
        ...this.buttonAttributesDisabled,
        ...this.eventsLocal
      }, {
        default: () => this.$slots.button && this.$slots.button(),
        buttonAppend: () => this.hasCaret && c(_t, {
          class: "a_dropdown__caret",
          icon: this.caretIcon
        })
      }),
      c(oa, {
        to: this.popperContainerIdSelector,
        disabled: !this.inBody
      }, [
        this.isMenuRendered && Dt(c(
          "div",
          {
            ref: "dropdownRef",
            role: "application",
            "aria-labelledby": this.idLocal,
            ariaHidden: !this.statusExpanded,
            ...this.dropdownAttributesLocal
          },
          [
            c(this.dropdownTag, {}, [
              this.$slots.dropdown && this.$slots.dropdown(),
              this.hasActions && this.actionsFiltered.map((e, t) => c(VF, {
                key: t,
                action: e,
                alwaysTranslate: this.alwaysTranslate
              }, this.$slots))
            ])
          ]
        ), [
          [Sl, {
            mounted: this.startPopper
          }]
        ])
      ])
    ];
  }
};
function QF({
  htmlLocalOptions: e = _(() => {
  }),
  textLocalOptions: t = _(() => ({})),
  titleLocalOptions: n = _(() => ({}))
}) {
  const r = _(() => {
    var i, o, u, f;
    return ((i = t.value) == null ? void 0 : i.dataTranslateText) || ((o = e.value) == null ? void 0 : o.dataTranslateSafeHtml) || ((u = e.value) == null ? void 0 : u.dataTranslateHtml) || ((f = n.value) == null ? void 0 : f.title);
  });
  return {
    attributesLocal: _(() => {
      var o, u, f;
      const i = {};
      return (o = t.value) != null && o.dataTranslateText ? i["data-translate-text"] = t.value.dataTranslateText : (u = e.value) != null && u.dataTranslateSafeHtml ? i["data-translate-safe-html"] = e.value.dataTranslateSafeHtml : (f = e.value) != null && f.dataTranslateHtml && (i["data-translate-html"] = e.value.dataTranslateHtml), n.value.title && (i.title = n.value.title, n.value.dataTranslateTitle && (i["data-translate-title"] = n.value.dataTranslateTitle)), i;
    }),
    hasAttributesLocal: r
  };
}
function e0(e, {
  hasTextAfter: t = _(() => !1),
  hasTextBefore: n = _(() => !1),
  textAfterForCurrentDevice: r = _(() => ""),
  textBeforeForCurrentDevice: s = _(() => "")
}) {
  const i = d(e, "alwaysTranslate"), o = d(e, "extra"), u = d(e, "html"), f = d(e, "safeHtml"), {
    isPlaceholderTranslate: A,
    getTranslatedText: E
  } = Vs(), {
    isMobileWidth: p
  } = Tn(), {
    translationChanges: T
  } = Oi(), S = _(() => at(f.value) ? p.value ? f.value.mobile : f.value.desktop : f.value), L = _(() => at(u.value) ? p.value ? u.value.mobile : u.value.desktop : u.value), b = _(() => Te(f.value)), I = _(() => Te(u.value)), v = _(() => b.value ? f.value.length > 0 : !Be(S.value)), R = _(() => I.value ? u.value.length > 0 : !Be(L.value)), g = _(() => n.value ? `<span>${s.value}</span>` : ""), D = _(() => t.value ? `<span>${r.value}</span>` : ""), w = _(() => {
    const P = {
      safeHtml: void 0,
      html: void 0,
      dataTranslateHtml: void 0,
      dataTranslateSafeHtml: void 0
    };
    if (!T.value)
      return P;
    if (v.value) {
      const M = b.value ? f.value : [S.value];
      let O = "", q = "";
      z(M, (U) => {
        !U && U !== 0 || (O && (O += " ", q += " "), A(U) ? (O += E({
          placeholder: U,
          extra: o.value,
          alwaysTranslate: i.value
        }), q += U) : O += U);
      }), P.safeHtml = O || void 0, P.dataTranslateSafeHtml = q || void 0;
    } else if (R.value) {
      const M = I.value ? u.value : [L.value];
      let O = "", q = "";
      z(M, (U) => {
        !U && U !== 0 || (O && (O += " ", q += " "), A(U) ? (O += ru(E({
          placeholder: U,
          extra: o.value,
          alwaysTranslate: i.value
        })), q += U) : O += ru(U));
      }), P.html = le(O) ? void 0 : O, P.dataTranslateHtml = le(q) ? void 0 : q;
    }
    return P;
  }), F = _(() => `${g.value}${w.value.safeHtml || w.value.html}${D.value}`);
  return {
    hasHtml: R,
    hasSafeHtml: v,
    htmlLocalOptions: w,
    htmlLocalWithBeforeAndAfter: F
  };
}
function Ml(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "extra"), r = d(e, "placeholder"), {
    translationChanges: s
  } = Oi(), {
    isPlaceholderTranslate: i,
    getTranslatedText: o,
    getTranslationAttributes: u
  } = Vs(), {
    isMobileWidth: f
  } = Tn(), A = _(() => at(r.value) ? f.value ? r.value.mobile : r.value.desktop : r.value), E = _(() => !Be(A.value)), p = _(() => !(!E.value || !i(A.value))), T = _(() => {
    if (s.value)
      return p.value ? o({
        placeholder: A.value,
        extra: n.value,
        alwaysTranslate: t.value
      }) : A.value;
  }), S = _(() => {
    const L = {};
    return E.value ? u({
      attr: "placeholder",
      translation: T.value,
      value: A.value,
      isTranslate: p.value
    }) : L;
  });
  return {
    hasPlaceholder: E,
    placeholderAttributes: S
  };
}
function t0({
  hasAriaLabel: e,
  hasAttributesLocal: t,
  hasPlaceholder: n,
  hasTextAfter: r,
  hasTextBefore: s
}) {
  return {
    hasRestAttributes: _(() => e.value || t.value || n.value || r.value || s.value)
  };
}
function n0(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "extra"), r = d(e, "text"), {
    isPlaceholderTranslate: s,
    getTranslatedText: i
  } = Vs(), {
    isMobileWidth: o
  } = Tn(), {
    translationChanges: u
  } = Oi(), f = _(() => at(r.value) ? o.value ? r.value.mobile : r.value.desktop : r.value), A = _(() => Te(r.value)), E = _(() => A.value ? r.value.length > 0 : !Be(f.value)), p = _(() => {
    const T = {
      text: void 0,
      dataTranslateText: void 0
    };
    if (!u.value)
      return T;
    if (E.value) {
      const S = A.value ? r.value : [f.value];
      let L = "", b = "";
      z(S, (I) => {
        !I && I !== 0 || (L && (L += " ", b += " "), s(I) ? (L += i({
          placeholder: I,
          extra: n.value,
          alwaysTranslate: t.value
        }), b += I) : L += I);
      }), T.text = L || void 0, T.dataTranslateText = b || void 0;
    }
    return T;
  });
  return {
    hasText: E,
    textLocalOptions: p
  };
}
function r0(e) {
  const t = d(e, "textAfter"), n = d(e, "textBefore"), {
    isMobileWidth: r
  } = Tn(), s = _(() => at(t.value) ? r.value ? t.value.mobile : t.value.desktop : t.value), i = _(() => at(n.value) ? r.value ? n.value.mobile : n.value.desktop : n.value), o = _(() => !le(s.value) && s.value !== ""), u = _(() => !le(i.value) && i.value !== "");
  return {
    hasTextAfter: o,
    hasTextBefore: u,
    textAfterForCurrentDevice: s,
    textBeforeForCurrentDevice: i
  };
}
function a0(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "extra"), r = d(e, "title"), {
    isPlaceholderTranslate: s,
    getTranslatedText: i
  } = Vs(), {
    isMobileWidth: o
  } = Tn(), {
    translationChanges: u
  } = Oi(), f = _(() => at(r.value) ? o.value ? r.value.mobile : r.value.desktop : r.value), A = _(() => Te(r.value)), E = _(() => A.value ? r.value.length > 0 : !(le(f.value) || f.value === ""));
  return {
    titleLocalOptions: _(() => {
      if (!u.value)
        return;
      const T = {
        title: void 0,
        dataTranslateTitle: void 0
      };
      if (!E.value)
        return T;
      const S = A.value ? r.value : [f.value];
      let L = "", b = "";
      return z(S, (I) => {
        !I && I !== 0 || (L && (L += " ", b += " "), s(I) ? (L += i({
          placeholder: I,
          extra: n.value,
          alwaysTranslate: t.value
        }), b += I) : L += I);
      }), T.title = L || void 0, T.dataTranslateTitle = b || void 0, T;
    })
  };
}
const Ee = {
  name: "ATranslation",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: ""
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: ""
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      hasTextAfter: t,
      hasTextBefore: n,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: s
    } = r0(e), {
      hasText: i,
      textLocalOptions: o
    } = n0(e), {
      hasHtml: u,
      hasSafeHtml: f,
      htmlLocalOptions: A,
      htmlLocalWithBeforeAndAfter: E
    } = e0(e, {
      hasTextAfter: t,
      hasTextBefore: n,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: s
    }), {
      titleLocalOptions: p
    } = a0(e), {
      hasPlaceholder: T,
      placeholderAttributes: S
    } = Ml(e), {
      ariaLabelAttributes: L,
      hasAriaLabel: b
    } = Uc(e), {
      attributesLocal: I,
      hasAttributesLocal: v
    } = QF({
      htmlLocalOptions: A,
      textLocalOptions: o,
      titleLocalOptions: p
    }), {
      hasRestAttributes: R
    } = t0({
      hasAriaLabel: b,
      hasAttributesLocal: v,
      hasPlaceholder: T,
      hasTextAfter: t,
      hasTextBefore: n
    });
    return {
      ariaLabelAttributes: L,
      attributesLocal: I,
      hasText: i,
      hasTextAfter: t,
      hasTextBefore: n,
      hasHtml: u,
      hasRestAttributes: R,
      hasSafeHtml: f,
      htmlLocalWithBeforeAndAfter: E,
      placeholderAttributes: S,
      textAfterForCurrentDevice: r,
      textBeforeForCurrentDevice: s,
      textLocalOptions: o
    };
  },
  render() {
    return this.hasText ? c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes
    }, [
      this.textBeforeForCurrentDevice,
      this.textLocalOptions.text,
      this.$slots.default && this.$slots.default(),
      this.textAfterForCurrentDevice
    ]) : this.hasSafeHtml || this.hasHtml ? c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes,
      innerHTML: this.htmlLocalWithBeforeAndAfter
    }) : (this.hasRestAttributes || this.$slots.default) && c(this.tag, {
      ...this.attributesLocal,
      ...this.ariaLabelAttributes,
      ...this.placeholderAttributes
    }, [
      this.textBeforeForCurrentDevice,
      this.$slots.default && this.$slots.default(),
      this.textAfterForCurrentDevice
    ]);
  }
}, s0 = {
  name: "AErrorsElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    error: {
      type: [Object, Array, String],
      required: !1,
      default: void 0
    },
    errorKey: {
      type: String,
      required: !1,
      default: void 0
    },
    errorLabels: {
      type: [String, Object],
      required: !0
    },
    goToError: {
      type: Function,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_errors_")
    },
    isErrorLink: {
      type: Boolean,
      required: !0
    }
  },
  setup(e) {
    const t = d(e, "errorLabels"), n = _(() => ot(t.value) ? t.value : at(t.value) ? t.value.label : ""), r = d(e, "isErrorLink"), s = _(() => at(t.value) && t.value.link && r.value), i = d(e, "error"), o = _(() => ot(i.value)), u = _(() => Te(i.value)), f = _(() => at(i.value)), A = _(() => Te(t.value)), E = d(e, "id"), p = _(() => ce(t.value, "id") || E.value), T = d(e, "goToError"), S = d(e, "errorKey"), L = () => {
      if (Ne(T.value))
        return T.value({
          id: p.value,
          key: S.value
        });
      let I = p.value;
      if (le(S.value) || (I = `${I}_${S.value}`), Ri(I) > 0) {
        const v = document.getElementById(I);
        v && v.focus();
      }
    };
    return {
      currentLabel: n,
      goToErrorLocal: L,
      isErrorArray: u,
      isErrorLabelsArray: A,
      isErrorLinkLocal: s,
      isErrorObject: f,
      isErrorString: o,
      onKeydown: (I) => {
        (I.keyCode === J.enter || I.keyCode === J.space) && (L(), I.stopPropagation(), I.preventDefault());
      }
    };
  },
  render() {
    return c("div", {
      class: "a_error__list__li"
    }, [
      this.isErrorString ? this.isErrorLinkLocal ? c(Ae, {
        type: "link",
        class: "a_errors__label a_btn a_btn_link a_p_0",
        tabindex: 0,
        "aria-describedby": this.id,
        safeHtml: this.currentLabel,
        textTag: "strong",
        textAfter: ":",
        onClick: this.goToErrorLocal,
        onKeydown: this.onKeydown
      }) : c("div", {
        class: "a_errors__label",
        "aria-describedby": this.id
      }, [
        c(Ee, {
          tag: "strong",
          safeHtml: this.currentLabel
        })
      ]) : "",
      c(
        "div",
        {
          id: this.id,
          class: "a_errors__errors"
        },
        this.isErrorString ? [
          c(Ee, {
            alwaysTranslate: this.alwaysTranslate,
            tag: "span",
            html: this.error
          })
        ] : this.isErrorArray ? [...this.error.map((e, t) => c(kr("AErrorsElement"), {
          key: t,
          error: e,
          alwaysTranslate: this.alwaysTranslate,
          errorLabels: this.isErrorLabelsArray ? this.errorLabels[t] || this.errorLabels : this.errorLabels,
          goToError: this.goToError,
          isErrorLink: this.isErrorLink
        }))] : this.isErrorObject ? [
          c("div", {
            class: "a_pl_2"
          }, [
            ...Object.keys(this.error).map((e) => c(kr("AErrorsElement"), {
              key: e,
              alwaysTranslate: this.alwaysTranslate,
              error: this.error[e],
              errorLabels: this.errorLabels[e] || this.errorLabels,
              goToError: this.goToError,
              isErrorLink: this.isErrorLink
            }))
          ])
        ] : []
      )
    ]);
  }
};
function i0({ emit: e }) {
  return {
    close: () => {
      e("close");
    }
  };
}
function l0(e) {
  const t = d(e, "errors");
  return {
    hasErrors: _(() => !En(t.value))
  };
}
function o0(e, {
  hasErrors: t = _(() => !1)
}) {
  const n = d(e, "autoFocus"), r = B(void 0);
  return {
    elRef: r,
    setFocusToElement: () => {
      n.value && t.value && setTimeout(() => {
        r.value.$el.focus();
      });
    }
  };
}
function u0(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = d(e, "errors"), r = _(() => n.value ? ot(n.value) ? !0 : Te(n.value) ? !!Ri(n.value) : !1 : !1);
  return {
    errorsId: _(() => `${t.value}_errors_text`),
    isErrors: r
  };
}
function zt(e, { emit: t }) {
  const n = d(e, "change"), r = d(e, "disabled"), s = d(e, "helpText"), i = d(e, "htmlId"), o = d(e, "id"), u = d(e, "idPrefix"), f = d(e, "modelUndefined"), A = d(e, "modelValue"), E = B(!1), p = B(!1), T = B(void 0), S = _(() => bl({
    id: o.value,
    idPrefix: u.value,
    htmlId: i.value
  })), {
    errorsId: L,
    isErrors: b
  } = u0(e, {
    htmlIdLocal: S
  }), I = ({ model: O, currentModel: q, item: U }) => {
    t("update:modelValue", O), n.value({
      currentModel: q,
      id: o.value,
      item: U,
      model: O,
      props: Ip(e)
    });
  }, v = _(() => !!(A.value || A.value === 0)), R = () => {
    r.value || I({
      model: f.value
    });
  }, g = _(() => `${S.value}_help_text`);
  return {
    ariaDescribedbyLocal: _(() => {
      let O = "";
      return s.value && (O += g.value), b.value && (O && (O += " "), O += L.value), O || void 0;
    }),
    changeModel: I,
    clearModel: R,
    errorsId: L,
    helpTextId: g,
    htmlIdLocal: S,
    isErrors: b,
    isFocus: E,
    isFocusIn: p,
    isModel: v,
    onBlur: (O) => {
      E.value = !1, t("blur", {
        event: O,
        props: e
      });
    },
    onFocus: (O) => {
      E.value = !0, t("focus", {
        event: O,
        props: e
      });
    },
    onFocusin: (O) => {
      p.value || (p.value = !0, t("focusin", {
        event: O,
        props: e
      }));
    },
    onFocusout: (O) => {
      p.value && T.value && !T.value.contains(O.relatedTarget) && (p.value = !1, t("focusout", {
        event: O,
        props: e
      }));
    },
    rootRef: T
  };
}
function bl({ id: e, idPrefix: t, htmlId: n }) {
  return n || `${t || ""}${e}`;
}
function _0(e) {
  const t = d(e, "optionsList"), n = d(e, "idPrefix"), r = (i) => {
    let o = {};
    return z(i, (u) => {
      o[u.id] = {
        label: u.labelError || u.label,
        link: Be(u.isErrorLink) ? !0 : u.isErrorLink,
        id: bl({
          id: u.id,
          idPrefix: u.idPrefix || n.value,
          htmlId: u.htmlId
        })
      }, u.children && u.children.length && (o = {
        ...o,
        ...r(u.children)
      });
    }), o;
  };
  return {
    labelsLocal: _(() => {
      let i = {};
      return t.value.forEach((o) => {
        i[o.id] = {
          label: o.labelError || o.label,
          link: Be(o.isErrorLink) ? !0 : o.isErrorLink,
          id: bl({
            id: o.id,
            idPrefix: o.idPrefix || n.value,
            htmlId: o.htmlId
          })
        }, o.children && o.children.length && (i = {
          ...i,
          ...r(o.children)
        });
      }), i;
    })
  };
}
const d0 = {
  name: "AErrors",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closable: {
      type: Boolean,
      required: !1,
      default: !0
    },
    goToError: {
      type: Function,
      required: !1,
      default: void 0
    },
    optionsList: {
      type: Array,
      required: !1,
      default: () => []
    },
    autoFocus: {
      type: Boolean,
      required: !1,
      default: !0
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: "Bitte überprüfen Sie Ihre Eingaben."
    },
    isErrorLink: {
      type: Boolean,
      required: !1,
      default: !0
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      hasErrors: n
    } = l0(e), {
      elRef: r,
      setFocusToElement: s
    } = o0(e, {
      hasErrors: n
    }), {
      labelsLocal: i
    } = _0(e), {
      close: o
    } = i0(t);
    return rt(n, () => {
      s();
    }), Gr(() => {
      s();
    }), {
      close: o,
      elRef: r,
      hasErrors: n,
      labelsLocal: i
    };
  },
  render() {
    return c(qc, {
      ref: "elRef",
      alwaysTranslate: this.alwaysTranslate,
      tabindex: -1,
      role: "alert",
      "aria-atomic": !0,
      isVisible: this.hasErrors,
      closable: this.closable,
      onClose: this.close
    }, () => [
      this.hasErrors && c("div", {
        class: "a_errors"
      }, [
        c("div", {
          class: "a_errors__header"
        }, [
          c("strong", null, this.textErrorHeader)
        ]),
        c("div", {
          class: "a_errors__list"
        }, [
          ...Object.keys(this.errors).map((e) => c(s0, {
            key: e,
            alwaysTranslate: this.alwaysTranslate,
            error: this.errors[e],
            errorLabels: this.labelsLocal[e] || this.labelsLocal,
            goToError: this.goToError,
            isErrorLink: this.isErrorLink
          }))
        ])
      ])
    ]);
  }
}, en = {
  name: "AErrorsText",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const t = d(e, "errors");
    return {
      errorsLocal: _(() => ot(t.value) ? [t.value] : t.value)
    };
  },
  render() {
    return c("ul", {
      id: this.id,
      class: "a_form_element__invalid_text"
    }, [
      this.errorsLocal.map((e) => c("li", null, e))
    ]);
  }
};
function c0(e, { emit: t }) {
  const n = d(e, "change"), r = d(e, "modelValue");
  return {
    onUpdateModelLocal: ({ currentModel: i, id: o, item: u, model: f, props: A, component: E }) => {
      const p = he(r.value || {});
      wc(p, o, he(f)), t("update:modelValue", p), n.value({ currentModel: i, id: o, item: u, fullModel: p, model: f, props: A }), Ne(E.change) && E.change({ currentModel: i, id: o, item: u, fullModel: p, model: f, props: A });
    }
  };
}
function f0(e) {
  const t = d(e, "classColumns"), n = "a_form_element_readonly_value_fieldset";
  return {
    classColumnsReadonly: _(() => at(t.value) ? {
      ...t.value,
      [n]: !0
    } : ot(t.value) && t.value.length ? `${t.value} ${n}` : n)
  };
}
function h0({
  isBtnShowPasswordVisible: e = _(() => !1),
  isClearButtonLocal: t = _(() => !1)
}) {
  return {
    inputClassBtns: _(() => {
      if (e.value)
        return t.value ? "a_form_element_with_two_btns" : "a_form_element_with_one_btn";
      if (t.value)
        return "a_form_element_with_one_btn";
    })
  };
}
function A0(e) {
  const t = d(e, "modelValue"), n = d(e, "type");
  return {
    modelValueLocal: _(() => n.value === "color" && !t.value ? "#000000" : t.value)
  };
}
function E0(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "disabled"), r = d(e, "type"), s = B(void 0);
  return {
    inputRef: s,
    onInput: (o) => {
      if (n.value)
        return;
      let u = o.target.value;
      r.value === "integer" && (u = u.replace(/\D/g, ""), u !== "" && (u = +u), s.value.value = u), r.value === "number" && u !== "" && (u = +u), t({
        model: u
      });
    }
  };
}
const sS = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01757813,0,0,0.0175781,-0.02634961,0.65854895)"
  >
    <path
      d="m 318.642,688.822 44.574,-80.57 q -49.718,-35.998 -77.712,-90.858 -27.994,-54.86 -27.999,-116.002 0,-69.147 34.857,-128.572 Q 161.506,339.676 74.649,474.533 170.076,621.96 318.651,688.819 Z M 540.925,255.106 q 0,-11.42 -8.004,-19.424 -8.004,-8.004 -19.424,-8.004 -71.429,0 -122.571,51.142 -51.142,51.142 -51.142,122.571 0,11.42 8.004,19.424 8.004,8.004 19.424,8.004 11.42,0 19.424,-8.004 8.004,-8.004 8.004,-19.424 0,-49.143 34.857,-83.997 34.857,-34.854 83.997,-34.857 11.42,0 19.424,-8.004 8.004,-8.004 8.004,-19.424 z M 748.354,145.968 q 0,4.001 -0.584,5.141 -60.003,107.428 -179.999,323.427 -119.996,215.999 -180.573,324 l -27.999,50.859 q -5.725,9.142 -16.006,9.142 -6.864,0 -76.57,-40 -9.142,-5.725 -9.142,-16.006 0,-6.864 25.149,-49.718 Q 200.917,715.671 132.062,653.954 63.207,592.237 12.919,513.955 1.499,496.244 1.499,474.522 q 0,-21.722 11.42,-39.433 87.429,-134.286 217.143,-211.999 129.714,-77.713 283.429,-77.712 50.859,0 102.861,9.725 l 30.855,-55.425 q 5.725,-9.142 16.006,-9.142 2.863,0 10.282,3.418 7.419,3.418 17.711,8.865 10.292,5.447 18.858,10.564 8.566,5.117 18.008,10.564 9.442,5.447 11.143,6.566 9.142,5.725 9.142,15.423 z m 21.143,255.427 q 0,79.43 -45.141,144.859 -45.141,65.429 -119.429,94 l 160,-286.857 q 4.57,25.711 4.57,48 z m 256.002,73.144 q 0,20.008 -11.42,39.433 -22.287,36.571 -62.285,82.856 -85.714,98.284 -198.568,152.568 -112.854,54.284 -239.713,54.285 l 42.284,-75.43 q 121.144,-10.282 224.285,-78.29 103.141,-68.008 172.286,-175.429 -65.711,-102.285 -161.146,-168 l 35.998,-64.004 q 54.285,36.571 104.285,87.429 50,50.858 82.572,105.143 11.42,19.424 11.42,39.433 z"
    />
  </g>
</svg>`, iS = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01752671,0,0,0.01752691,-1.7526709e-5,0.68479724)"
  >
    <path
      d="M 953.646,474.431 Q 866.534,339.176 735.292,272.123 q 34.959,59.601 34.959,128.952 0,106.025 -75.367,181.39 -75.367,75.365 -181.39,75.367 -106.023,0.002 -181.39,-75.367 -75.367,-75.369 -75.367,-181.39 0,-69.35 34.959,-128.952 -131.243,67.052 -218.354,202.308 76.223,117.492 191.132,187.121 114.909,69.629 249.018,69.633 134.109,0.004 249.018,-69.633 114.909,-69.637 191.132,-187.121 z M 541.004,254.353 q 0,-11.454 -8.027,-19.481 -8.027,-8.027 -19.481,-8.027 -71.639,0 -122.932,51.293 -51.293,51.293 -51.293,122.932 0,11.454 8.027,19.481 8.027,8.027 19.481,8.027 11.454,0 19.481,-8.027 8.027,-8.027 8.027,-19.481 0,-49.288 34.959,-84.246 34.959,-34.958 84.246,-34.959 11.454,0 19.481,-8.027 Q 541,265.811 541,254.357 Z m 486.001,220.078 q 0,19.481 -11.454,39.549 Q 935.316,645.795 799.773,725.169 664.23,804.543 513.503,804.546 362.776,804.549 227.233,724.882 91.69,645.215 11.455,513.974 0.001,493.906 0.001,474.425 q 0,-19.481 11.454,-39.549 80.235,-131.243 215.778,-210.908 135.543,-79.665 286.27,-79.664 150.727,0.001 286.27,79.664 135.543,79.663 215.778,210.908 11.454,20.068 11.454,39.549 z"
    />
  </g>
</svg>`;
function p0(e, {
  setTypeLocal: t = () => {
  },
  typeForInput: n = _(() => "")
}) {
  const r = d(e, "showPassword"), s = d(e, "type"), i = _(() => !!(s.value === "password" && r.value)), o = _(() => n.value === "password"), u = _(() => o.value ? sS : iS), f = () => {
    t({
      type: o.value ? "text" : "password"
    });
  }, A = _(() => o.value ? "_A_INPUT_SHOW_PASSWORD_" : "_A_INPUT_HIDE_PASSWORD_");
  return {
    iconBtnShowPassword: u,
    isBtnShowPasswordVisible: i,
    titleBtnShowPassword: A,
    toggleTypePassword: f
  };
}
function T0(e) {
  const t = d(e, "modelValue"), n = d(e, "readonlyPasswordLength"), r = d(e, "readonlyPasswordSymbol"), s = d(e, "showPassword"), i = d(e, "type");
  return {
    modelValueReadonly: _(() => i.value === "password" ? s.value ? t.value : r.value.repeat(n.value) : t.value)
  };
}
function S0(e) {
  const t = d(e, "type"), n = B(void 0), r = _(() => n.value === "integer" ? "text" : n.value);
  return {
    setTypeLocal: ({ type: i } = {}) => {
      i ? n.value = i : n.value = t.value;
    },
    typeForInput: r
  };
}
const yn = {
  name: "AInput",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_input_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    maxlength: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    readonlyPasswordLength: {
      type: Number,
      required: !1,
      default: 8,
      validator: (e) => e > 0 && ha(e)
    },
    readonlyPasswordSymbol: {
      type: String,
      required: !1,
      default: "*"
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    showPassword: {
      type: Boolean,
      required: !1,
      default: !0
    },
    step: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "text"
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const n = d(e, "type"), {
      disabledAttribut: r
    } = kl(e), {
      setTypeLocal: s,
      typeForInput: i
    } = S0(e), {
      attributesToExcludeFromRender: o
    } = Nt(e), {
      componentStyleHide: u
    } = Xt(e), {
      ariaDescribedbyLocal: f,
      changeModel: A,
      clearModel: E,
      errorsId: p,
      helpTextId: T,
      htmlIdLocal: S,
      isErrors: L,
      isModel: b,
      onBlur: I,
      onFocus: v
    } = zt(e, t), {
      isClearButtonLocal: R
    } = Ku(e, {
      isModel: b
    }), {
      inputRef: g,
      onInput: D
    } = E0(e, {
      changeModel: A
    }), {
      iconBtnShowPassword: w,
      isBtnShowPasswordVisible: F,
      titleBtnShowPassword: P,
      toggleTypePassword: M
    } = p0(e, {
      setTypeLocal: s,
      typeForInput: i
    }), {
      isAutofill: O
    } = Ef({ inputRef: g }), {
      inputClassBtns: q
    } = h0({
      isBtnShowPasswordVisible: F,
      isClearButtonLocal: R
    }), {
      placeholderAttributes: U
    } = Ml(e), {
      modelValueLocal: G
    } = A0(e), {
      modelValueReadonly: te
    } = T0(e);
    return rt(n, () => {
      s();
    }), s(), {
      ariaDescribedbyLocal: f,
      attributesToExcludeFromRender: o,
      clearModel: E,
      componentStyleHide: u,
      disabledAttribut: r,
      errorsId: p,
      helpTextId: T,
      htmlIdLocal: S,
      iconBtnShowPassword: w,
      inputClassBtns: q,
      inputRef: g,
      isAutofill: O,
      isBtnShowPasswordVisible: F,
      isClearButtonLocal: R,
      isErrors: L,
      isModel: b,
      modelValueLocal: G,
      modelValueReadonly: te,
      onBlur: I,
      onFocus: v,
      onInput: D,
      placeholderAttributes: U,
      titleBtnShowPassword: P,
      toggleTypePassword: M,
      typeForInput: i
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Sn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.modelValueReadonly,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: this.type
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel || this.isAutofill,
          a_form_element__parent_float_has_icon_prepend: this.iconPrepend
        }]
      }, [
        this.label || this.labelScreenReader ? c(Ut, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type
        }) : "",
        c("div", {
          class: "a_form_element"
        }, [
          this.iconPrepend && c(_t, {
            icon: this.iconPrepend,
            class: "a_input__icon_prepend"
          }),
          c("input", {
            ref: "inputRef",
            id: this.htmlIdLocal,
            autocomplete: this.autocomplete,
            value: this.modelValueLocal,
            type: this.typeForInput,
            class: [
              "a_form_control a_input",
              this.inputClass,
              this.inputClassBtns,
              {
                a_form_control_invalid: this.isErrors
              }
            ],
            disabled: this.disabledAttribut,
            ariaRequired: this.required,
            ariaInvalid: this.isErrors,
            "aria-describedby": this.ariaDescribedbyLocal,
            maxlength: this.maxlength,
            step: this.step,
            ...this.placeholderAttributes,
            ...this.inputAttributes,
            onInput: this.onInput,
            onFocus: this.onFocus,
            onBlur: this.onBlur
          }),
          this.isBtnShowPasswordVisible || this.isClearButtonLocal ? c("div", {
            class: "a_form_control__actions"
          }, [
            this.isBtnShowPasswordVisible ? c(pt, {
              alwaysTranslate: this.alwaysTranslate,
              class: "a_btn a_btn_transparent_dark a_btn_small a_form_control__actions__btn",
              iconLeft: this.iconBtnShowPassword,
              type: "button",
              title: this.titleBtnShowPassword,
              textScreenReader: this.titleBtnShowPassword,
              disabled: this.disabled,
              onClick: this.toggleTypePassword
            }) : "",
            this.isClearButtonLocal ? c(qu, {
              alwaysTranslate: this.alwaysTranslate,
              disabled: this.disabled,
              class: this.clearButtonClass,
              onClear: this.clearModel
            }) : ""
          ]) : ""
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function m0(e, {
  adjustFloatPartAndDivider: t = () => {
  },
  ensurePrecision: n = () => {
  },
  setCurrentValue: r = () => {
  },
  modelNumber: s = _(() => {
  })
}) {
  const i = d(e, "decimalDivider"), o = d(e, "disabled"), u = d(e, "modelValue"), f = d(e, "max"), A = d(e, "min"), E = d(e, "step"), p = _(() => s.value <= A.value), T = _(() => s.value >= f.value), S = () => {
    const v = t(f.value);
    r(v);
  }, L = () => {
    const v = t(A.value);
    r(v);
  };
  return {
    increase: () => {
      if (o.value || T.value)
        return;
      const v = s.value, R = n({
        value: v,
        currentValue: u.value
      }).replace(".", i.value);
      if (v + E.value > f.value) {
        S();
        return;
      }
      r(t(R));
    },
    decrease: () => {
      if (o.value || p.value)
        return;
      const v = s.value, R = n({
        value: v,
        currentValue: u.value,
        coefficient: -1
      }).replace(".", i.value);
      if (v - E.value < A.value) {
        L();
        return;
      }
      r(t(R));
    }
  };
}
function L0(e, {
  adjustFloatPartAndDivider: t = () => {
  },
  decrease: n = () => {
  },
  getCleanIntValue: r = () => {
  },
  increase: s = () => {
  },
  modelNumber: i = _(() => {
  }),
  modelUndefinedLocal: o = _(() => {
  }),
  onBlur: u = () => {
  },
  setCurrentValue: f = () => {
  }
}) {
  const A = d(e, "decimalDivider"), E = B(void 0), p = d(e, "max"), T = d(e, "min"), S = d(e, "modelValue"), L = d(e, "readonly"), b = d(e, "required"), I = d(e, "decimalPartLength"), v = d(e, "thousandDivider"), R = d(e, "validationOnChange"), g = B(0), D = navigator.userAgent.indexOf("Firefox") !== -1 ? 1 : 0, w = [
    J.tab,
    J.del,
    J.escape,
    J.backspace,
    J.arrowLeft,
    J.arrowRight,
    J.home,
    J.end
  ], F = _(() => !I.value), P = (H) => Number(`${H}`.replaceAll(v.value, "").replace(A.value, ".")), M = (H, X) => {
    f(H, X);
  }, O = (H) => {
    setTimeout(() => {
      E.value.setSelectionRange(H, H);
    });
  }, q = () => {
    const H = t(p.value);
    M(H);
  }, U = () => {
    const H = t(T.value);
    M(H);
  }, G = (H) => {
    const X = P(H);
    if (X > p.value)
      return q(), !0;
    if (X < T.value)
      return U(), !0;
  }, te = (H, X, ae = !1) => {
    var ht, At;
    if (!b.value && le(X) && !((ht = H == null ? void 0 : H.target) != null && ht.value)) {
      M(X, ae);
      return;
    }
    let ye;
    ae ? ye = typeof X == "number" ? `${X}`.replace(".", A.value) : X : ye = le(X) ? H.target.value : `${X}`;
    const qe = ye.indexOf(A.value) !== -1, Qe = (At = E.value) == null ? void 0 : At.selectionStart, $e = ye.split(A.value), Fe = $e[0].length && $e[0][0] === "-" ? "-" : "", it = Number($e[0].replace(/[^0-9]/g, "")).toString(), Ke = $e[1] ? $e[1].substring(0, I.value) : "";
    if (le(it) || it === "")
      return;
    const lt = v.value ? r({ value: it, thousandDivider: v.value }) : it;
    let et;
    if (F.value)
      et = `${Fe}${lt}`;
    else if (ae) {
      const xt = Ke || "", tn = ur(I.value - xt.length, () => "0").join("");
      et = `${Fe}${lt}${A.value}${xt}${tn}`;
    } else Ke ? et = `${Fe}${lt}${A.value}${Ke}` : qe ? et = `${Fe}${lt}${A.value}` : et = `${Fe}${lt}`;
    R.value && G(et) || (M(et, ae), O(Qe));
  }, ne = ({ value: H }) => {
    T.value >= 0 || H[0] !== "-" && (g.value++, setTimeout(() => {
      const X = `-${H}`;
      R.value && G(X) || (M(X), g.value--);
    }, D));
  }, oe = ({ value: H }) => {
    H[0] === "-" && (g.value++, setTimeout(() => {
      const X = H.replace("-", "");
      R.value && G(X) || (M(X), g.value--);
    }, D));
  }, se = ({ value: H }) => {
    g.value++, setTimeout(() => {
      const X = E.value.selectionStart;
      if (v.value && H[X - 1] === v.value) {
        const ae = X - 1;
        O(ae);
      }
      g.value--;
    }, D);
  }, ie = ({ value: H }) => {
    setTimeout(() => {
      g.value++;
      const X = E.value.selectionStart;
      if (v.value && H[X - 1] === v.value) {
        const ae = X + 1;
        O(ae);
      }
      g.value--;
    }, D);
  }, me = ({ value: H, cursorPosition: X }, ae) => {
    setTimeout(() => {
      g.value++;
      let ye = E.value.value;
      if (ae) {
        const Ce = H.length + 1;
        ye[ye.length - 1] === A.value && (ye += ur(I.value, () => "0").join(""), M(ye), O(Ce));
      } else {
        const Ce = H.substring(0, X).split("").reverse().join("").replaceAll(v.value, "").match(/.{1,3}/g).join(v.value).split("").reverse().join("");
        let qe = H.substring(X, H.length).replace(/[^0-9]/g, "").substring(0, I.value);
        qe = `${qe}${ur(I.value - qe.length, () => "0").join("")}`;
        const Qe = [
          Ce,
          qe
        ].join(A.value);
        M(Qe), O(Ce.length + 1);
      }
      g.value--;
    });
  }, Ve = ({ cursorPosition: H, numberOfSymbols: X }) => {
    let ae = H && H - 1;
    E.value.value.length < X - 1 && ae > 0 && ae--, O(ae);
  }, Le = ({ hasDecimalDivider: H, value: X, cursorPosition: ae }) => {
    const ye = X.length;
    if (!F.value) {
      const Ce = X.indexOf(A.value);
      if (H && Ce === ae - 1) {
        const Qe = X.split(A.value)[0];
        g.value++, setTimeout(() => {
          Ve({ cursorPosition: ae, numberOfSymbols: ye }), M(Qe), g.value--;
        }, D);
        return;
      }
      g.value++, setTimeout(() => {
        Ve({ cursorPosition: ae, numberOfSymbols: ye }), g.value--;
      }, D);
    }
  }, _e = ({ value: H, $event: X, hasDecimalDivider: ae, cursorPosition: ye }) => {
    if (!F.value && ae && H[ye] === A.value) {
      const qe = H.split(A.value)[0];
      M(qe), O(ye);
      return;
    }
    if (v.value)
      if (H[ye] === v.value) {
        X.preventDefault();
        const Ce = ye, qe = H.split(A.value), Qe = qe[0], $e = qe[1];
        let Fe = Qe.split("");
        Fe.splice(ye + 1, 1), Fe = Fe.reverse().join("").replaceAll(v.value, "").match(/.{1,3}/g).join(v.value).split("").reverse().join("");
        let it;
        F.value ? it = Fe : $e ? it = `${Fe}${A.value}${$e}` : ae ? it = `${Fe}${A.value}` : it = Fe, M(it), O(Ce + 1);
      } else
        setTimeout(() => {
          g.value++, E.value.value.length < H.length - 1 && O(ye > 0 ? ye - 1 : 0), g.value--;
        }, D);
  };
  return {
    handleInput: te,
    handleKeydown: (H) => {
      if (g.value) {
        H.preventDefault();
        return;
      }
      const X = H.target.value, ae = H.keyCode, ye = H.key, Ce = ae >= 48 && ae <= 57 || ae >= 96 && ae <= 105, qe = ye === A.value && !!I.value, Qe = H.target.value.indexOf(A.value), $e = Qe !== -1, Fe = E.value.selectionStart, it = Fe === X.length, Ke = {
        value: X,
        keyCode: ae,
        keyValue: ye,
        keyIsNumber: Ce,
        keyIsDecimalDivider: qe,
        hasDecimalDivider: $e,
        cursorPosition: Fe,
        $event: H
      };
      if (ae === J.arrowUp) {
        s(), H.preventDefault();
        return;
      }
      if (ae === J.arrowDown) {
        n(), H.preventDefault();
        return;
      }
      if (ae === J.minus || ae === J.numMinus) {
        ne(Ke), H.preventDefault();
        return;
      }
      if (ae === J.plus && H.shiftKey || ae === J.numPlus) {
        oe(Ke), H.preventDefault();
        return;
      }
      if (ae === J.arrowLeft) {
        se(Ke);
        return;
      }
      if (ae === J.arrowRight) {
        ie(Ke);
        return;
      }
      if (qe) {
        if ($e) {
          O(Qe + 1), H.preventDefault();
          return;
        }
        it || H.preventDefault(), me(Ke, it);
        return;
      }
      if (H.keyCode === J.backspace) {
        if (E.value.selectionStart !== E.value.selectionEnd)
          return;
        Le(Ke);
        return;
      }
      if (H.keyCode === J.del) {
        _e(Ke);
        return;
      }
      if (Ce && !H.ctrlKey && $e) {
        const lt = X.indexOf(A.value);
        if (Fe > lt && X.split(A.value)[1].length === I.value) {
          if (it) {
            H.preventDefault();
            return;
          }
          H.preventDefault();
          const At = X.split("");
          At[Fe] = ye;
          const xt = At.join("");
          M(xt), g.value++, setTimeout(() => {
            O(Fe + 1), g.value--;
          }, D);
          return;
        }
      }
      if (!Ce && !H.ctrlKey && !kd(w, H.keyCode) && H.preventDefault(), H.keyCode !== J.home && H.keyCode !== J.end && !H.ctrlKey && H.keyCode)
        if (Fe === 0 && X.length && X[0] === "0") {
          H.preventDefault();
          const lt = `${ye}${X.slice(1)}`;
          M(lt), O(1);
        } else {
          const lt = X.length;
          g.value++, setTimeout(() => {
            let et = Fe + 1;
            const ht = E.value.value.length;
            ht - 1 > lt ? et++ : ht === lt && et--, O(et), g.value--;
          }, D);
        }
    },
    handlePaste: (H) => {
      var ht;
      H.preventDefault();
      const ae = (H.clipboardData || window.clipboardData).getData("text").split(A.value), ye = ae[0].replace(/[^0-9]/g, ""), Ce = ((ht = ae[1]) == null ? void 0 : ht.replace(/[^0-9]/g, "")) || "";
      let qe;
      const Qe = E.value.selectionStart, $e = E.value.selectionEnd, Fe = E.value.value, it = Fe.indexOf(A.value) !== -1, lt = Fe.substring(Qe, $e).indexOf(A.value) !== -1;
      it && !lt ? qe = Ce ? [ye, Ce].join("") : ye : qe = Ce ? [ye, Ce].join(A.value) : ye;
      const et = Fe.slice(0, Qe) + qe + Fe.slice($e);
      te(null, et);
    },
    initFirstCheck: () => {
      L.value || setTimeout(() => {
        let H;
        if (S.value || S.value === 0) {
          if (H = S.value.toString().replace(".", A.value), A.value) {
            const X = H.toString().split(A.value), ae = X[0], ye = ae[0] === "-" ? "-" : "", Ce = X.length > 1 ? X[1] : "", qe = Ce.length, Qe = ur(I.value - qe, () => "0").join("");
            H = `${ye}${ae}${A.value}${Ce}${Qe}`;
          }
        } else
          H = b.value ? [
            "0",
            A.value,
            ur(I.value, () => "0").join("")
          ].join("") : o.value;
        te(null, H, !0);
      });
    },
    inputRef: E,
    onBlurNumber: (H) => {
      let X = H.target.value;
      if (F.value || (X = X.split(A.value)[0]), le(X) || X === "") {
        if (b.value) {
          if (T.value > 0) {
            const ye = A.value ? `0${A.value}${ur(I.value, () => "0").join("")}` : "0";
            M(ye);
          } else
            U();
          u(H);
          return;
        }
        const ae = o.value;
        M(ae), u(H);
        return;
      } else if (i.value < T.value) {
        U();
        return;
      } else if (i.value > p.value) {
        q();
        return;
      }
      if (I.value) {
        let ae = `${H.target.value}`;
        const Ce = ae.split(A.value)[1];
        ae.indexOf(A.value) === -1 ? ae += `${A.value}${ur(I.value, () => "0").join("")}` : Ce.length < I.value && (ae += `${ur(I.value - Ce.length, () => "0").join("")}`), M(ae);
      }
      u(H);
    },
    onClickNumber: (H) => {
      g.value++, setTimeout(() => {
        const X = H.target.selectionStart, ae = H.target.value;
        v.value && v.value === ae[X - 1] && O(X - 1), g.value--;
      });
    }
  };
}
function b0(e, {
  adjustFloatPartAndDivider: t = () => {
  },
  changeModel: n = () => {
  }
}) {
  const r = d(e, "required"), s = d(e, "modelValue"), i = d(e, "modelType"), o = d(e, "modelUndefined"), u = d(e, "decimalDivider"), f = d(e, "disabled"), A = d(e, "decimalPartLength"), E = d(e, "thousandDivider"), p = B(void 0), T = B(!1), S = B(void 0), L = () => {
    p.value = t(s.value), S.value = s.value;
  }, b = _(() => Number(`${p.value}`.replaceAll(E.value, "").replace(u.value, "."))), I = _(() => r.value ? [
    "0",
    u.value,
    ur(A.value, () => "0").join("")
  ].join("") : o.value), v = (g, D = !1) => {
    p.value = le(g) ? "" : g;
    let w;
    !r.value && le(g) ? w = I.value : w = i.value === "number" ? Number(`${g}`.replaceAll(E.value, "").replace(u.value, ".")) : g, D || (T.value = !0, S.value = w, n({ model: w }));
  };
  return {
    clearModel: () => {
      f.value || v(I.value);
    },
    displayValue: p,
    initLocalVars: L,
    isInternalChange: T,
    localModel: S,
    modelNumber: b,
    modelUndefinedLocal: I,
    setCurrentValue: v
  };
}
function I0(e) {
  const t = d(e, "decimalDivider"), n = d(e, "decimalPartLength"), r = d(e, "thousandDivider"), s = ({ value: o, thousandDivider: u }) => o.replaceAll(u, "").replaceAll("-", "").split("").reverse().join("").match(/.{1,3}/g).join(u).split("").reverse().join("");
  return {
    adjustFloatPartAndDivider: (o) => {
      if (le(o))
        return "";
      if (t.value) {
        const u = typeof o == "number" ? o.toString().split(".") : o.toString().split(t.value), f = u[0], A = f[0] === "-" ? "-" : "", E = r.value ? s({ value: f, thousandDivider: r.value }) : f, p = u.length > 1 ? u[1] : "", T = p.length, S = ur(n.value - T, () => "0").join("");
        return `${A}${E}${t.value}${p}${S}`;
      }
      return o;
    },
    getCleanIntValue: s
  };
}
function Efe(e) {
  return ha(e) ? Math.abs(e % 2) === 1 : !1;
}
function v0(e) {
  return ha(e) ? e % 2 === 0 : !1;
}
function Ko(e, t) {
  if (t === 0)
    return Math.round(e);
  let n = String(e);
  const r = n.indexOf(".");
  if (r === -1 || !n.replace(".", "").split("")[r + t])
    return e;
  const o = n.length;
  return n.charAt(o - 1) === "5" && (n = `${n.slice(0, Math.max(0, o - 1))}6`), Number.parseFloat(Number(n).toFixed(t));
}
function y0(e) {
  const t = d(e, "step"), n = d(e, "decimalPartLength");
  return {
    ensurePrecision: ({ value: s, currentValue: i, coefficient: o = 1 }) => Rn(s) ? Ko(s + t.value * o, n.value).toString() : i
  };
}
function g0(e) {
  const t = d(e, "inputWidth");
  return {
    inputWidthStyleValue: _(() => {
      let r = t.value;
      return Rn(t.value) && (r = `${t.value}px`), Be(r) ? {} : {
        "--a_input_number_width": r
      };
    })
  };
}
const lS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-dash" viewBox="0 0 16 16">
  <path d="M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8"/>
</svg>`, oS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4"/>
</svg>`, R0 = {
  name: "AInputCurrency",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    controlsType: {
      type: String,
      required: !1,
      default: () => on.propsDefault.controlsType,
      validator: (e) => ["plus-minus", "arrows", "none"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    currencySymbol: {
      type: String,
      required: !1,
      default: () => on.propsDefault.currencySymbol
    },
    currencySymbolPosition: {
      type: String,
      required: !1,
      default: () => on.propsDefault.currencySymbolPosition,
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    decimalDivider: {
      type: String,
      required: !1,
      default: () => on.propsDefault.decimalDivider,
      validator: (e, t) => {
        const n = t == null ? void 0 : t.thousandDivider;
        return n ? [".", ","].indexOf(e) !== -1 && e !== n : [".", ","].indexOf(e) !== -1;
      }
    },
    decimalPartLength: {
      type: Number,
      required: !1,
      default: () => on.propsDefault.decimalPartLength,
      validator: (e) => e >= 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: () => on.propsDefault.iconPrepend
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_input_currency_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    inputWidth: {
      type: [String, Number],
      required: !1,
      default: () => on.propsDefault.inputWidth
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: () => on.propsDefault.isLabelFloat
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: () => on.propsDefault.max
    },
    min: {
      type: Number,
      required: !1,
      default: () => on.propsDefault.min
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelType: {
      type: String,
      required: !1,
      default: "number",
      validator: (e) => ["number", "string"].indexOf(e) !== -1
    },
    modelUndefined: {
      required: !1,
      default: () => on.propsDefault.modelUndefined
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: () => on.propsDefault.placeholder
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    step: {
      type: Number,
      required: !1,
      default: () => on.propsDefault.step,
      validator: (e) => e > 0
    },
    thousandDivider: {
      type: String,
      required: !1,
      default: () => on.propsDefault.thousandDivider,
      validator: (e, t) => {
        const n = t == null ? void 0 : t.decimalDivider;
        return n ? [".", ",", " "].indexOf(e) !== -1 && e !== n : [".", ",", " "].indexOf(e) !== -1;
      }
    },
    validationOnChange: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const n = d(e, "modelValue"), {
      attributesToExcludeFromRender: r
    } = Nt(e), {
      componentStyleHide: s
    } = Xt(e), {
      adjustFloatPartAndDivider: i,
      getCleanIntValue: o
    } = I0(e), {
      ariaDescribedbyLocal: u,
      changeModel: f,
      errorsId: A,
      helpTextId: E,
      htmlIdLocal: p,
      isErrors: T,
      isModel: S,
      onBlur: L,
      onFocus: b
    } = zt(e, t), {
      isClearButtonLocal: I
    } = Ku(e, {
      isModel: S
    }), {
      placeholderAttributes: v
    } = Ml(e), {
      inputWidthStyleValue: R
    } = g0(e), {
      ensurePrecision: g
    } = y0(e), {
      clearModel: D,
      displayValue: w,
      initLocalVars: F,
      isInternalChange: P,
      localModel: M,
      modelNumber: O,
      modelUndefinedLocal: q,
      setCurrentValue: U
    } = b0(e, {
      adjustFloatPartAndDivider: i,
      changeModel: f
    }), {
      increase: G,
      decrease: te
    } = m0(e, {
      adjustFloatPartAndDivider: i,
      ensurePrecision: g,
      setCurrentValue: U,
      modelNumber: O
    }), {
      handleInput: ne,
      handleKeydown: oe,
      handlePaste: se,
      initFirstCheck: ie,
      inputRef: me,
      onBlurNumber: Ve,
      onClickNumber: Le
    } = L0(e, {
      adjustFloatPartAndDivider: i,
      decrease: te,
      displayValue: w,
      getCleanIntValue: o,
      increase: G,
      modelNumber: O,
      modelUndefinedLocal: q,
      onBlur: L,
      setCurrentValue: U
    });
    return F(), ie(), rt(n, (_e) => {
      P.value || (M.value = _e, ne(null, _e, !0)), P.value = !1;
    }), {
      ariaDescribedbyLocal: u,
      attributesToExcludeFromRender: r,
      clearModel: D,
      componentStyleHide: s,
      decrease: te,
      displayValue: w,
      errorsId: A,
      handleInput: ne,
      handleKeydown: oe,
      handlePaste: se,
      helpTextId: E,
      htmlIdLocal: p,
      increase: G,
      inputRef: me,
      inputWidthStyleValue: R,
      isClearButtonLocal: I,
      isErrors: T,
      isModel: S,
      onBlurNumber: Ve,
      onClickNumber: Le,
      onFocus: b,
      placeholderAttributes: v
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Sn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.displayValue,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "currency"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__container"
      }, [
        c("div", {
          class: ["a_form_element__parent", {
            a_form_element__parent_float: this.isLabelFloat,
            a_form_element__parent_not_empty: this.isModel,
            a_form_element__parent_float_has_icon_prepend: this.iconPrepend,
            a_form_element__parent_invalid: this.isErrors
          }]
        }, [
          (this.label || this.labelScreenReader) && !this.isLabelFloat ? c(Ut, {
            id: this.htmlIdLocal,
            extra: this.extra,
            isLabelFloat: this.isLabelFloat,
            isError: this.isErrors,
            label: this.label,
            labelClass: this.labelClass,
            labelScreenReader: this.labelScreenReader,
            required: this.required,
            type: "text"
          }) : "",
          c("div", {
            class: [
              "a_form_element_number",
              {
                a_form_element_number_controls: this.controlsType && this.controlsType !== "none"
              }
            ]
          }, [
            this.currencySymbol && this.currencySymbolPosition === "left" && c("span", {
              class: "a_form_element_number__currency_symbol"
            }, this.currencySymbol),
            c("div", {
              class: "a_form_element",
              style: {
                ...this.inputWidthStyleValue
              }
            }, [
              (this.label || this.labelScreenReader) && this.isLabelFloat ? c(Ut, {
                id: this.htmlIdLocal,
                isLabelFloat: this.isLabelFloat,
                isError: this.isErrors,
                label: this.label,
                labelClass: this.labelClass,
                labelScreenReader: this.labelScreenReader,
                required: this.required,
                type: "text"
              }) : "",
              this.iconPrepend && c(_t, {
                icon: this.iconPrepend,
                class: "a_input__icon_prepend"
              }),
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                autocomplete: this.autocomplete,
                value: this.displayValue,
                type: "text",
                class: [
                  "a_form_control a_input a_input_number",
                  this.inputClass,
                  {
                    a_form_element_with_one_btn: this.isClearButtonLocal,
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabled,
                ariaRequired: this.required,
                ariaInvalid: this.isErrors,
                "aria-describedby": this.ariaDescribedbyLocal,
                ...this.placeholderAttributes,
                ...this.inputAttributes,
                onInput: this.handleInput,
                onKeydown: this.handleKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlurNumber,
                onClick: this.onClickNumber,
                onPaste: this.handlePaste
              }),
              this.isClearButtonLocal ? c("div", {
                class: "a_form_control__actions"
              }, [
                c(qu, {
                  alwaysTranslate: this.alwaysTranslate,
                  disabled: !1,
                  class: this.clearButtonClass,
                  onClear: this.clearModel
                })
              ]) : ""
            ]),
            this.controlsType === "plus-minus" && c("div", {
              class: "a_btn_group"
            }, [
              c(Ae, {
                class: "a_btn a_btn_outline_secondary",
                iconLeft: lS,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_CURRENCY_BTN_DECREASE_",
                textScreenReader: "_A_INPUT_CURRENCY_BTN_DECREASE_",
                type: "button",
                onClick: this.decrease
              }),
              c(Ae, {
                class: "a_btn a_btn_outline_secondary",
                iconLeft: oS,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_CURRENCY_BTN_INCREASE_",
                textScreenReader: "_A_INPUT_CURRENCY_BTN_INCREASE_",
                type: "button",
                onClick: this.increase
              })
            ]),
            this.currencySymbol && this.currencySymbolPosition === "right" && c("div", {
              class: "a_form_element_number__currency_symbol"
            }, this.currencySymbol)
          ]),
          c(Yt, {
            id: this.helpTextId,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(en, {
            id: this.errorsId,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
}, Yt = {
  name: "AFormHelpText",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    html: {
      type: [String, Number],
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  render() {
    return this.html && c(Ee, {
      id: this.id,
      alwaysTranslate: this.alwaysTranslate,
      class: "a_form_element__help_text",
      html: this.html,
      extra: this.extra
    });
  }
};
function uS(e) {
  return `clickALabel_${e}`;
}
function O0(e, {
  idLabelLocal: t = _(() => ""),
  preventLocal: n = _(() => !1),
  stopLocal: r = _(() => !1)
}) {
  const s = d(e, "clickLabel"), i = d(e, "id");
  return {
    onClick: ({ $event: u }) => {
      Ne(s.value) && s.value({
        id: i.value,
        idLabel: t.value,
        $event: u
      }), n.value && (u == null || u.preventDefault()), r.value && (u == null || u.stopPropagation()), setTimeout(() => {
        Rt.$emit(uS(i.value), {
          id: i.value,
          idLabel: t.value,
          $event: u
        });
      });
    }
  };
}
function C0(e, {
  hideForLocal: t = _(() => !1),
  hideIdLocal: n = _(() => !1)
}) {
  const r = d(e, "id"), s = d(e, "idSuffix"), i = d(e, "readonly"), o = _(() => {
    if (!n.value)
      return `${r.value}${s.value}`;
  });
  return {
    forLabelLocal: _(() => {
      if (!(t.value || i.value))
        return r.value;
    }),
    idLabelLocal: o
  };
}
function D0(e) {
  const t = d(e, "isLabelFloat"), n = d(e, "label"), r = d(e, "readonly"), s = d(e, "required"), i = _(() => !le(n.value)), o = _(() => i.value ? n.value : void 0), u = _(() => s.value && i.value && !r.value ? "*" : ""), f = _(() => {
    if (t.value && !r.value)
      return o.value;
  });
  return {
    isLabel: i,
    labelLocal: o,
    textAfterLabel: u,
    titleLocal: f
  };
}
const yi = B({
  fieldset: !0,
  group: !0
}), sf = B({
  checkbox: !0,
  multiselect: !0,
  multiselectOrdered: !0
}), _S = B({
  dateRange: !0,
  integerNonNegativeRange: !0,
  integerPositiveRange: !0,
  integerRange: !0,
  numberRange: !0
}), N0 = B({
  checkbox: !0,
  multiselect: !0,
  multiselectOrdered: !0,
  radio: !0,
  select: !0
}), B0 = B({
  select: {
    hideFor: !0,
    prevent: !0
  },
  multiselect: {
    hideFor: !0,
    prevent: !0
  },
  file: {
    hideId: !0
  },
  // numberRange
  numberRange: {
    hideFor: !0,
    prevent: !0
  },
  integerNonNegativeRange: {
    hideFor: !0,
    prevent: !0
  },
  integerPositiveRange: {
    hideFor: !0,
    prevent: !0
  },
  integerRange: {
    hideFor: !0,
    prevent: !0
  },
  // numberRange /
  dateRange: {
    hideFor: !0,
    prevent: !0
  }
});
function w0(e) {
  const t = d(e, "hideFor"), n = d(e, "hideId"), r = d(e, "prevent"), s = d(e, "stop"), i = d(e, "type"), o = _(() => B0.value[i.value] || {}), u = ({ prop: T, propForType: S }) => Be(T) ? S : T, f = _(() => u({
    prop: s.value,
    propForType: o.value.stop
  })), A = _(() => u({
    prop: r.value,
    propForType: o.value.prevent
  })), E = _(() => u({
    prop: n.value,
    propForType: o.value.hideId
  }));
  return {
    hideForLocal: _(() => u({
      prop: t.value,
      propForType: o.value.hideFor
    })),
    hideIdLocal: E,
    preventLocal: A,
    stopLocal: f
  };
}
const Ut = {
  name: "ALabel",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    clickLabel: {
      type: Function,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hideFor: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    hideId: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    idSuffix: {
      type: String,
      required: !1,
      default: "_label"
    },
    isError: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1
    },
    prevent: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "label"
    },
    type: {
      type: String,
      required: !1
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = Nt(e), {
      hideForLocal: n,
      hideIdLocal: r,
      preventLocal: s,
      stopLocal: i
    } = w0(e), {
      forLabelLocal: o,
      idLabelLocal: u
    } = C0(e, {
      hideForLocal: n,
      hideIdLocal: r
    }), {
      isLabel: f,
      labelLocal: A,
      textAfterLabel: E,
      titleLocal: p
    } = D0(e), {
      onClick: T
    } = O0(e, {
      idLabelLocal: u,
      preventLocal: s,
      stopLocal: i
    });
    return {
      attributesToExcludeFromRender: t,
      forLabelLocal: o,
      idLabelLocal: u,
      isLabel: f,
      labelLocal: A,
      onClick: T,
      textAfterLabel: E,
      titleLocal: p
    };
  },
  render() {
    return c(Ae, {
      id: this.idLabelLocal,
      alwaysTranslate: this.alwaysTranslate,
      class: [
        "a_form_element_label",
        this.labelClass,
        this.isLabelFloat && !this.readonly ? "a_form_element_label_float" : "a_form_element_label_static",
        {
          a_form_element_label_error: this.isError,
          a_form_element_readonly_label: this.readonly
        }
      ],
      extra: this.extra,
      for: this.forLabelLocal,
      html: this.labelLocal,
      htmlScreenReader: this.labelScreenReader,
      loading: this.loading,
      loadingAlign: "right",
      loadingClass: "a_spinner_small a_form_element_label__spinner",
      tag: this.tag,
      textAfter: this.textAfterLabel,
      textAriaHidden: !!this.labelScreenReader,
      title: this.titleLocal,
      type: "text",
      onClick: this.readonly ? this.onClick : void 0,
      ...this.attributesToExcludeFromRender
    });
  }
};
function Xt(e) {
  const t = d(e, "dependencies"), n = d(e, "isHide"), r = d(e, "modelDependencies"), s = ({ id: u, value: f }) => {
    var A;
    return ((A = r.value) == null ? void 0 : A[u]) === f;
  }, i = _(() => {
    if (!t.value)
      return !1;
    if (at(t.value))
      return !s(t.value);
    if (Te(t.value)) {
      let u = !1;
      return z(t.value, (f) => {
        if (!s(f))
          return u = !0, !1;
      }), u;
    }
    return !1;
  });
  return {
    componentStyleHide: _(() => n.value || i.value ? "display: none;" : "")
  };
}
const P0 = {
  name: "AInputFile",
  inheritAttrs: !1,
  mixins: [
    rf
  ],
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    isMultiple: {
      type: Boolean,
      required: !1
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    modelUndefined: {
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number, Object, Array],
      required: !1
    },
    text: {
      type: String,
      required: !1,
      default: "Dateien auswählen"
    },
    type: {
      type: String,
      required: !1,
      default: "input"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      componentStyleHide: r
    } = Xt(e), {
      ariaDescribedbyLocal: s,
      changeModel: i,
      clearModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = zt(e, t), S = d(e, "isMultiple"), L = d(e, "modelValue"), b = _(() => S.value ? !!(Te(L.value) && L.value.length > 0) : !!(at(L.value) && Ri(L.value) > 0)), I = _(() => b.value ? S.value ? L.value : [L.value] : []), v = B(void 0), R = d(e, "disabled"), g = (F) => {
      if (R.value)
        return;
      const P = F.target.files;
      if (P && P.length) {
        const M = [];
        z(P, (O) => {
          M.push({
            id: "",
            size: O.size,
            name: O.webkitRelativePath || O.relativePath || O.name,
            type: O.type,
            file: O
          });
        }), i({
          model: S.value ? M : M[0]
        });
      }
    }, D = d(e, "required"), w = _(() => D.value ? "*" : "");
    return {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      clearModel: o,
      componentStyleHide: r,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      inputRef: v,
      isErrors: E,
      isModel: b,
      modelValueListLocal: I,
      onBlur: p,
      onFocus: T,
      onInput: g,
      textAfterLabel: w
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__parent"
      }, [
        this.label && c(Ut, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          hideId: !0,
          type: this.type,
          isError: this.isErrors
        }),
        c("div", {}, [
          c("label", {
            for: this.htmlIdLocal,
            class: ["a_file__label a_form_control", this.labelClass, {
              disabled: this.disabled
            }],
            required: this.required,
            type: this.type
          }, [
            c("input", {
              ref: "inputRef",
              id: this.htmlIdLocal,
              type: "file",
              multiple: this.isMultiple,
              class: [
                "a_file__input",
                this.inputClass,
                {
                  a_form_control_invalid: this.isErrors
                }
              ],
              disabled: this.disabled,
              ariaRequired: this.required,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              ...this.inputAttributes,
              onInput: this.onInput,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }),
            c("span", {
              class: "a_file__label"
            }, this.text)
          ])
        ]),
        this.isModel && c("ul", {}, [
          this.modelValueListLocal.map((e) => c("li", {}, e.name))
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function x0(e, {
  currentValue: t = B(0),
  displayValue: n = _(() => ""),
  ensurePrecision: r = () => {
  },
  setCurrentValue: s = () => {
  },
  minLocal: i = _(() => {
  })
}) {
  const o = d(e, "disabled"), u = d(e, "modelValue"), f = d(e, "max"), A = d(e, "readonly"), E = _(() => Rn(u.value) && u.value <= i.value), p = _(() => Rn(u.value) && u.value >= f.value);
  return {
    increase: () => {
      if (A.value || o.value || p.value)
        return;
      const L = Number(n.value) || 0, b = r({ value: L, currentValue: t.value });
      s(b);
    },
    decrease: () => {
      if (A.value || o.value || E.value)
        return;
      const L = Number(n.value) || 0, b = r({ value: L, currentValue: t.value, coefficient: -1 });
      s(b);
    }
  };
}
function M0(e, {
  decrease: t = () => {
  },
  increase: n = () => {
  },
  inputRef: r = B({}),
  onBlur: s = () => {
  },
  setCurrentValue: i = () => {
  },
  userInput: o = B(null),
  currentValue: u = B(void 0),
  displayValue: f = _(() => ""),
  isTypeNumber: A = _(() => !0)
}) {
  const E = d(e, "type"), p = d(e, "eAllowed"), T = d(e, "min"), S = d(e, "modelValue");
  return {
    handleInput: (R) => {
      if (A.value) {
        const D = R.target.value;
        o.value = D;
        const w = D === "" ? null : Number(D);
        i(w, !1);
        return;
      }
      let g = R.target.value.trim();
      if (E.value === "integerNonNegative") {
        const D = g.match(/\d+/g);
        if (D !== null) {
          let w = parseInt(D.join(""), 10);
          w = Math.max(w, 0), g = w;
        } else
          g = null;
        i(g), r.value.value = g;
      } else if (E.value === "integerPositive") {
        if (g === "0")
          g = null;
        else {
          const D = g.match(/\d+/g);
          if (D !== null) {
            let w = parseInt(D.join(""), 10);
            w = Math.max(w, 1), g = w;
          } else
            g = null;
        }
        i(g), r.value.value = g;
      } else if (E.value === "integer") {
        const D = g.match(/\d+/g);
        if (D !== null) {
          let w = parseInt(D.join(""), 10);
          g.indexOf("-") !== -1 && (w = -w), g = w, i(g), r.value.value = g;
        } else g === "-" ? (g = "-", r.value.value = g) : (g = null, i(g), r.value.value = g);
      }
    },
    handleInputChange: (R) => {
      if (!A.value)
        return;
      const g = R.target.value, D = g !== "" ? Number(g) : "";
      (Rn(D) && !Number.isNaN(D) || g === "") && i(D), o.value = null;
    },
    handleKeydown: (R) => {
      R.keyCode === J.arrowUp ? (n(), R.preventDefault()) : R.keyCode === J.arrowDown ? (t(), R.preventDefault()) : (!p.value && R.keyCode === J.e || T.value >= 0 && R.keyCode === J.minus || R.keyCode === J.plus) && (R.preventDefault(), R.stopPropagation());
    },
    onBlurNumber: (R) => {
      (o.value !== null || !S.value && S.value !== 0) && (o.value = null, u.value = S.value, r.value.value = f.value), s(R);
    }
  };
}
function F0(e) {
  const t = d(e, "type"), n = d(e, "min");
  return {
    minLocal: _(() => {
      let s;
      return t.value === "integerNonNegative" ? s = 0 : t.value === "integerPositive" && (s = 1), (Be(s) || !le(n.value) && n.value > s) && (s = n.value), s;
    })
  };
}
function q0(e, {
  verifyValue: t = () => {
  },
  changeModel: n = () => {
  }
}) {
  const r = d(e, "precision"), s = d(e, "modelValue"), i = B(null), o = B(null), u = () => {
    o.value = s.value;
  }, f = _(() => {
    if (i.value !== null)
      return i.value;
    let E = o.value;
    if (le(E))
      return "";
    if (Rn(E)) {
      if (Number.isNaN(E))
        return "";
      Be(r.value) || (E = E.toFixed(r.value));
    }
    return E;
  });
  return {
    currentValue: o,
    displayValue: f,
    initCurrentValue: u,
    setCurrentValue: (E, p = !0) => {
      const T = o.value, S = t(E);
      if (T !== S) {
        if (!p) {
          n({ model: S });
          return;
        }
        i.value = null, n({ model: S }), o.value = S;
      }
    },
    userInput: i
  };
}
function $0(e) {
  const t = d(e, "max"), n = d(e, "min"), r = d(e, "step"), s = d(e, "type"), i = _(() => s.value === "number"), o = _(() => i.value ? "number" : "text"), u = _(() => i.value ? {
    max: t.value,
    min: n.value,
    step: r.value
  } : {});
  return {
    inputType: o,
    isTypeNumber: i,
    numberAttributes: u
  };
}
function U0(e, {
  changeModel: t = () => {
  },
  minLocal: n = _(() => {
  })
}) {
  const r = d(e, "modelUndefined"), s = d(e, "stepStrictly"), i = d(e, "step"), o = d(e, "precision"), u = d(e, "max"), f = d(e, "modelValue"), A = (S) => {
    if (le(S))
      return 0;
    const L = S.toString(), b = L.indexOf(".");
    let I = 0;
    return b !== -1 && (I = L.length - b - 1), I;
  }, E = _(() => {
    const S = A(i.value);
    return Be(o.value) ? Math.max(A(f.value), S) : (S > o.value && console.warn(
      "AInputNumber",
      "precision should not be less than the decimal places of step"
    ), o.value);
  });
  return {
    ensurePrecision: ({ value: S, currentValue: L, coefficient: b = 1 }) => Rn(S) ? Ko(S + i.value * b, E.value) : L,
    verifyValue: (S, L) => {
      let b = Number(S);
      return le(S) || Number.isNaN(b) ? null : (S === "" && (b = r.value), s.value && (b = Ko(Math.round(b / i.value) * i.value, o.value)), Be(o.value) || (b = Ko(b, o.value)), b > u.value ? (b = u.value, L && t({ model: b })) : b < n.value && (b = n.value, L && t({ model: b })), b);
    }
  };
}
function k0(e) {
  const t = d(e, "inputWidth");
  return {
    inputWidthStyleValue: _(() => {
      let r = t.value;
      return Rn(t.value) && (r = `${t.value}px`), Be(r) ? {} : {
        "--a_input_number_width": r
      };
    })
  };
}
const xa = {
  name: "AInputNumber",
  inheritAttrs: !1,
  mixins: [
    rf
  ],
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    controlsType: {
      type: String,
      required: !1,
      default: () => An.propsDefault.controlsType,
      validator: (e) => ["plus-minus", "arrows", "none"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    eAllowed: {
      type: Boolean,
      required: !1,
      default: () => An.propsDefault.eAllowed
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: () => An.propsDefault.iconPrepend
    },
    inputWidth: {
      type: [String, Number],
      required: !1,
      default: () => An.propsDefault.inputWidth
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: () => An.propsDefault.isLabelFloat
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: () => An.propsDefault.max
    },
    min: {
      type: Number,
      required: !1,
      default: () => An.propsDefault.min
    },
    modelUndefined: {
      required: !1,
      default: () => An.propsDefault.modelUndefined
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: () => An.propsDefault.placeholder
    },
    precision: {
      type: Number,
      validator: (e) => e >= 0 && e === Number.parseInt(`${e}`, 10),
      default: () => An.propsDefault.precision
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    step: {
      type: Number,
      required: !1,
      default: () => An.propsDefault.step
    },
    stepStrictly: {
      type: Boolean,
      required: !1,
      default: () => An.propsDefault.stepStrictly
    },
    type: {
      type: String,
      required: !1,
      default: () => An.propsDefault.type,
      validator: (e) => ["number", "integerNonNegative", "integerPositive", "integer"].indexOf(e) !== -1
      // TODO: "float", "floatPositiv", "floatNonNegative"
    }
  },
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      componentStyleHide: r
    } = Xt(e), {
      ariaDescribedbyLocal: s,
      changeModel: i,
      clearModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: S
    } = zt(e, t), {
      isClearButtonLocal: L
    } = Ku(e, {
      isModel: p
    }), {
      minLocal: b
    } = F0(e), {
      inputType: I,
      isTypeNumber: v,
      numberAttributes: R
    } = $0(e), {
      placeholderAttributes: g
    } = Ml(e), {
      inputWidthStyleValue: D
    } = k0(e), w = B(void 0), F = d(e, "disabled"), P = (ve) => {
      if (F.value)
        return;
      const be = ve.target.value;
      i({
        model: +be
      });
    }, {
      isAutofill: M
    } = Ef({ inputRef: w }), {
      ensurePrecision: O,
      verifyValue: q
    } = U0(e, {
      changeModel: i,
      minLocal: b
    }), {
      currentValue: U,
      displayValue: G,
      initCurrentValue: te,
      setCurrentValue: ne,
      userInput: oe
    } = q0(e, {
      verifyValue: q,
      changeModel: i
    }), {
      increase: se,
      decrease: ie
    } = x0(e, {
      currentValue: U,
      displayValue: G,
      ensurePrecision: O,
      setCurrentValue: ne,
      minLocal: b
    }), {
      handleInput: me,
      handleInputChange: Ve,
      handleKeydown: Le,
      onBlurNumber: _e
    } = M0(e, {
      currentValue: U,
      decrease: ie,
      displayValue: G,
      increase: se,
      inputRef: w,
      onBlur: T,
      setCurrentValue: ne,
      userInput: oe,
      isTypeNumber: v
    });
    return te(), rt(
      () => e.modelValue,
      (ve) => {
        const be = q(oe.value), je = q(ve, !0);
        !Rn(be) && (!be || be !== je) && (U.value = je, oe.value = null);
      },
      { immediate: !0 }
    ), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      clearModel: o,
      componentStyleHide: r,
      currentValue: U,
      decrease: ie,
      displayValue: G,
      errorsId: u,
      handleInput: me,
      handleInputChange: Ve,
      handleKeydown: Le,
      helpTextId: f,
      htmlIdLocal: A,
      increase: se,
      inputRef: w,
      inputType: I,
      inputWidthStyleValue: D,
      isAutofill: M,
      isClearButtonLocal: L,
      isErrors: E,
      isModel: p,
      numberAttributes: R,
      onBlurNumber: _e,
      onFocus: S,
      onInput: P,
      placeholderAttributes: g,
      userInput: oe
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Sn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.displayValue,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: this.type
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__container"
      }, [
        c("div", {
          class: ["a_form_element__parent", {
            a_form_element__parent_float: this.isLabelFloat,
            a_form_element__parent_not_empty: this.isModel || this.isAutofill,
            a_form_element__parent_float_has_icon_prepend: this.iconPrepend,
            a_form_element__parent_invalid: this.isErrors
          }]
        }, [
          this.label && !this.isLabelFloat && c(Ut, {
            id: this.htmlIdLocal,
            alwaysTranslate: this.alwaysTranslate,
            label: this.label,
            labelClass: this.labelClass,
            labelScreenReader: this.labelScreenReader,
            required: this.required,
            type: this.type,
            isLabelFloat: this.isLabelFloat,
            isError: this.isErrors
          }),
          c("div", {
            class: [
              "a_form_element_number",
              {
                a_form_element_number_controls: this.controlsType !== "none"
              }
            ]
          }, [
            c("div", {
              class: "a_form_element",
              style: {
                ...this.inputWidthStyleValue
              }
            }, [
              this.label && this.isLabelFloat && c(Ut, {
                id: this.htmlIdLocal,
                alwaysTranslate: this.alwaysTranslate,
                label: this.label,
                labelClass: this.labelClass,
                labelScreenReader: this.labelScreenReader,
                required: this.required,
                type: this.type,
                isLabelFloat: this.isLabelFloat,
                isError: this.isErrors
              }),
              this.iconPrepend && c(_t, {
                icon: this.iconPrepend,
                class: "a_input__icon_prepend"
              }),
              c("input", {
                ref: "inputRef",
                id: this.htmlIdLocal,
                autocomplete: this.autocomplete,
                value: this.displayValue,
                type: this.inputType,
                class: [
                  "a_form_control a_input a_input_number",
                  this.inputClass,
                  {
                    a_form_element_with_one_btn: this.isClearButtonLocal,
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabled,
                ariaRequired: this.required,
                ariaInvalid: this.isErrors,
                "aria-describedby": this.ariaDescribedbyLocal,
                ...this.numberAttributes,
                ...this.placeholderAttributes,
                ...this.inputAttributes,
                onInput: this.handleInput,
                onChange: this.handleInputChange,
                onKeydown: this.handleKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlurNumber
              }),
              this.isClearButtonLocal ? c("div", {
                class: "a_form_control__actions"
              }, [
                c(qu, {
                  alwaysTranslate: this.alwaysTranslate,
                  disabled: this.disabled,
                  class: this.clearButtonClass,
                  onClear: this.clearModel
                })
              ]) : ""
            ]),
            this.controlsType === "plus-minus" && c("div", {
              class: "a_btn_group"
            }, [
              c(Ae, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_btn a_btn_outline_secondary",
                iconLeft: lS,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_NUMBER_BTN_DECREASE_",
                textScreenReader: "_A_INPUT_NUMBER_BTN_DECREASE_",
                type: "button",
                onClick: this.decrease
              }),
              c(Ae, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_btn a_btn_outline_secondary",
                iconLeft: oS,
                tabindex: -1,
                disabled: this.disabled,
                title: "_A_INPUT_NUMBER_BTN_INCREASE_",
                textScreenReader: "_A_INPUT_NUMBER_BTN_INCREASE_",
                type: "button",
                onClick: this.increase
              })
            ])
          ]),
          c(Yt, {
            id: this.helpTextId,
            alwaysTranslate: this.alwaysTranslate,
            html: this.helpText,
            extra: this.extra
          }),
          this.isErrors && c(en, {
            id: this.errorsId,
            alwaysTranslate: this.alwaysTranslate,
            errors: this.errors
          })
        ])
      ])
    ]) : null;
  }
};
function H0({
  idMin: e = _(() => "")
}) {
  return {
    setFocusToMinInput: () => {
      const n = document.getElementById(e.value);
      n && n.focus();
    }
  };
}
function V0({
  htmlIdLocal: e = _(() => "")
}) {
  const t = _(() => `${e.value}_min`);
  return {
    idMax: _(() => `${e.value}_max`),
    idMin: t
  };
}
function W0(e, {
  htmlIdLocal: t = _(() => ""),
  idMax: n = _(() => ""),
  idMin: r = _(() => "")
}) {
  const s = d(e, "inputAttributes"), i = d(e, "inputAttributesMax"), o = d(e, "inputAttributesMin"), u = _(() => `${t.value}_label`), f = _(() => ({
    "aria-labelledby": `${u.value} ${r.value}`,
    ...s.value,
    ...o.value
  }));
  return {
    inputAttributesMaxLocal: _(() => ({
      "aria-labelledby": `${u.value} ${n.value}`,
      ...s.value,
      ...i.value
    })),
    inputAttributesMinLocal: f
  };
}
function G0(e, {
  changeModel: t = () => ({})
}) {
  const n = d(e, "keyMax"), r = d(e, "keyMin"), s = d(e, "modelValue"), i = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[r.value];
  }), o = _(() => {
    var A;
    return (A = s.value) == null ? void 0 : A[n.value];
  });
  return {
    changeModelMax: ({ model: A }) => {
      const E = he(s.value);
      E[n.value] = A, t({ model: E });
    },
    changeModelMin: ({ model: A }) => {
      const E = he(s.value);
      E[r.value] = A, t({ model: E });
    },
    modelValueMax: o,
    modelValueMin: i
  };
}
function j0(e) {
  const t = d(e, "readonlyDefault"), n = d(e, "readonlyDefaultMax"), r = d(e, "readonlyDefaultMin"), s = _(() => Be(n.value) ? t.value : n.value), i = _(() => Be(r.value) ? t.value : r.value);
  return {
    readonlyDefaultMaxLocal: s,
    readonlyDefaultMinLocal: i
  };
}
function K0(e) {
  const t = d(e, "type");
  return {
    typeLocal: _(() => t.value.replace("Range", ""))
  };
}
const lf = ["numberRange", "integerNonNegativeRange", "integerPositiveRange", "integerRange"], dS = {};
z(lf, (e) => {
  dS[e] = !0;
});
const cS = dS, qo = {
  name: "AInputNumberRange",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    controlsType: {
      type: String,
      required: !1,
      default: "plus-minus",
      validator: (e) => ["plus-minus", "arrows"].indexOf(e) !== -1
      // TODO: "arrows",
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    iconPrepend: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_input_number_range_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesMax: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputAttributesMin: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputWidth: {
      type: [Number, String],
      required: !1,
      default: 200
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyMax: {
      tpe: String,
      required: !1,
      default: "max"
    },
    keyMin: {
      tpe: String,
      required: !1,
      default: "min"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: void 0
    },
    labelMax: {
      type: String,
      required: !1,
      default: "_A_INPUT_NUMBER_RANGE_LABEL_MAX_"
    },
    labelMin: {
      type: String,
      required: !1,
      default: "_A_INPUT_NUMBER_RANGE_LABEL_MIN_"
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    max: {
      type: Number,
      required: !1,
      default: void 0
    },
    min: {
      type: Number,
      required: !1,
      default: void 0
    },
    modelUndefined: {
      required: !1,
      default: void 0
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholderMax: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    placeholderMin: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    precision: {
      type: Number,
      validator: (e) => e >= 0 && e === Number.parseInt(`${e}`, 10)
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    readonlyDefaultMax: {
      type: String,
      required: !1,
      default: void 0
    },
    readonlyDefaultMin: {
      type: String,
      required: !1,
      default: void 0
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    step: {
      type: Number,
      required: !1,
      default: 1
    },
    stepStrictly: {
      type: Boolean,
      required: !1
    },
    type: {
      type: String,
      required: !1,
      default: "numberRange",
      validator: (e) => lf.indexOf(e) !== -1
      // TODO: "float", "floatPositiv", "floatNonNegative"
    }
  },
  emits: [
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      componentStyleHide: r
    } = Xt(e), {
      changeModel: s,
      errorsId: i,
      helpTextId: o,
      htmlIdLocal: u,
      isErrors: f
    } = zt(e, t), {
      changeModelMax: A,
      changeModelMin: E,
      modelValueMax: p,
      modelValueMin: T
    } = G0(e, {
      changeModel: s
    }), {
      idMax: S,
      idMin: L
    } = V0({
      htmlIdLocal: u
    }), {
      typeLocal: b
    } = K0(e), {
      inputAttributesMaxLocal: I,
      inputAttributesMinLocal: v
    } = W0(e, {
      htmlIdLocal: u,
      idMax: S,
      idMin: L
    }), {
      setFocusToMinInput: R
    } = H0({
      idMin: L
    }), {
      destroyEventBusClickLabel: g,
      initEventBusClickLabel: D
    } = pf({
      htmlIdLocal: u,
      clickLabel: R
    }), {
      readonlyDefaultMaxLocal: w,
      readonlyDefaultMinLocal: F
    } = j0(e);
    return D(), Ot(() => {
      g();
    }), {
      attributesToExcludeFromRender: n,
      changeModelMax: A,
      changeModelMin: E,
      componentStyleHide: r,
      errorsId: i,
      helpTextId: o,
      htmlIdLocal: u,
      idMax: S,
      idMin: L,
      inputAttributesMaxLocal: I,
      inputAttributesMinLocal: v,
      isErrors: f,
      modelValueMax: p,
      modelValueMin: T,
      readonlyDefaultMaxLocal: w,
      readonlyDefaultMinLocal: F,
      typeLocal: b
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Sn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      isRange: !0,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "numberRange",
      valueParentClass: "a_form_element_readonly_value_range"
    }, () => [
      c(xa, {
        id: this.idMin,
        alwaysTranslate: this.alwaysTranslate,
        inputWidth: this.inputWidth,
        label: this.labelMin,
        max: this.max,
        min: this.min,
        precision: this.precision,
        readonly: !0,
        readonlyDefault: this.readonlyDefaultMinLocal,
        type: this.typeLocal,
        required: this.required,
        modelValue: this.modelValueMin
      }),
      c(xa, {
        id: this.idMax,
        alwaysTranslate: this.alwaysTranslate,
        inputWidth: this.inputWidth,
        label: this.labelMax,
        max: this.max,
        min: this.min,
        precision: this.precision,
        readonly: !0,
        readonlyDefault: this.readonlyDefaultMaxLocal,
        type: this.typeLocal,
        required: this.required,
        modelValue: this.modelValueMax
      })
    ]) : c("div", {
      ...this.$attrs,
      class: "a_input_number_range",
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_invalid: this.isErrors
        }]
      }, [
        this.label ? c(Ut, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          type: this.type,
          isLabelFloat: !1,
          isError: this.isErrors
        }) : "",
        c("div", {
          class: "a_input_number_range__content"
        }, [
          c("div", {
            class: "a_input_number_range__group a_input_number_range__group_min"
          }, [
            c(Ut, {
              id: this.idMin,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_input_number_range__label a_input_number_range__label_min",
              isLabelFloat: !1,
              label: this.labelMin,
              isError: this.isErrors
            }),
            c(xa, {
              id: this.idMin,
              alwaysTranslate: this.alwaysTranslate,
              controlsType: this.controlsType,
              iconPrepend: this.iconPrepend,
              inputWidth: this.inputWidth,
              isLabelFloat: !0,
              max: this.max,
              min: this.min,
              modelUndefined: this.modelUndefined,
              precision: this.precision,
              step: this.step,
              stepStrictly: this.stepStrictly,
              type: this.typeLocal,
              disabled: this.disabled,
              inputAttributes: this.inputAttributesMinLocal,
              required: this.required,
              modelValue: this.modelValueMin,
              placeholder: this.placeholderMin,
              change: this.changeModelMin
            })
          ]),
          c("div", {
            class: "a_input_number_range__group a_input_number_range__group_max"
          }, [
            c(Ut, {
              id: this.idMax,
              alwaysTranslate: this.alwaysTranslate,
              labelClass: "a_input_number_range__label a_input_number_range__label_max",
              isLabelFloat: !1,
              label: this.labelMax,
              isError: this.isErrors
            }),
            c(xa, {
              id: this.idMax,
              alwaysTranslate: this.alwaysTranslate,
              controlsType: this.controlsType,
              iconPrepend: this.iconPrepend,
              inputWidth: this.inputWidth,
              isLabelFloat: !0,
              max: this.max,
              min: this.min,
              modelUndefined: this.modelUndefined,
              precision: this.precision,
              step: this.step,
              stepStrictly: this.stepStrictly,
              type: this.typeLocal,
              disabled: this.disabled,
              inputAttributes: this.inputAttributesMaxLocal,
              required: this.required,
              modelValue: this.modelValueMax,
              placeholder: this.placeholderMax,
              change: this.changeModelMax
            })
          ])
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors ? c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        }) : ""
      ])
    ]) : null;
  }
};
function z0(e) {
  const t = d(e, "heightCss"), n = _(() => {
    if (t.value)
      return `height: ${t.value}`;
  }), r = _(() => {
    if (t.value)
      return `max-height: ${t.value}`;
  });
  return {
    styleHeight: n,
    styleMaxHeight: r
  };
}
function Y0(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "disabled"), r = d(e, "modelUndefined"), s = d(e, "modelValue"), i = B(void 0), o = B(""), u = B(""), f = B(void 0), A = () => {
    i.value = he(s.value) || "";
  }, E = () => {
    n.value || t({
      model: r.value
    });
  }, p = () => {
    try {
      s.value ? o.value = JSON.stringify(s.value, void 0, 2) : o.value = "", u.value = o.value, f.value = void 0;
    } catch {
    }
  }, T = (I) => {
    if (!n.value)
      if (!u.value || u.value.length === 0)
        t({
          $event: I,
          model: r.value
        });
      else
        try {
          const v = JSON.parse(u.value);
          t({
            $event: I,
            model: v
          }), o.value = JSON.stringify(v, void 0, 2), f.value = null;
        } catch (v) {
          f.value = v.toString();
        }
  };
  return {
    clearModel: E,
    formatJson: () => {
      try {
        u.value = JSON.stringify(JSON.parse(u.value), void 0, 2);
      } catch (I) {
        f.value = I.toString();
      }
    },
    initialValue: i,
    initInitialValue: A,
    jsonString: o,
    jsonStringInput: u,
    JSONtoString: p,
    onInput: (I) => {
      n.value || (u.value = I.target.value, T());
    },
    parseError: f,
    resetModel: () => {
      n.value || (t({
        model: i.value
      }), setTimeout(() => {
        p();
      }));
    },
    stringToJSON: T
  };
}
function X0(e) {
  const t = d(e, "modelValue"), n = d(e, "readonlyDefault"), {
    filterJson: r
  } = jn();
  return {
    modelValueReadonly: _(() => le(t.value) || t.value === "" ? n.value : r(t.value))
  };
}
const Z0 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-repeat" viewBox="0 0 16 16">
  <path d="M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41m-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9"/>
  <path fill-rule="evenodd" d="M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5 5 0 0 0 8 3M3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9z"/>
</svg>`, J0 = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-braces" viewBox="0 0 16 16">
  <path d="M2.114 8.063V7.9c1.005-.102 1.497-.615 1.497-1.6V4.503c0-1.094.39-1.538 1.354-1.538h.273V2h-.376C3.25 2 2.49 2.759 2.49 4.352v1.524c0 1.094-.376 1.456-1.49 1.456v1.299c1.114 0 1.49.362 1.49 1.456v1.524c0 1.593.759 2.352 2.372 2.352h.376v-.964h-.273c-.964 0-1.354-.444-1.354-1.538V9.663c0-.984-.492-1.497-1.497-1.6M13.886 7.9v.163c-1.005.103-1.497.616-1.497 1.6v1.798c0 1.094-.39 1.538-1.354 1.538h-.273v.964h.376c1.613 0 2.372-.759 2.372-2.352v-1.524c0-1.094.376-1.456 1.49-1.456V7.332c-1.114 0-1.49-.362-1.49-1.456V4.352C13.51 2.759 12.75 2 11.138 2h-.376v.964h.273c.964 0 1.354.444 1.354 1.538V6.3c0 .984.492 1.497 1.497 1.6"/>
</svg>`, of = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
  <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z"/>
  <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z"/>
</svg>`, Q0 = {
  name: "AJson",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    heightCss: {
      type: String,
      required: !1,
      default: "400px;"
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_json_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = kl(e), {
      attributesToExcludeFromRender: r
    } = Nt(e), {
      componentStyleHide: s
    } = Xt(e), {
      ariaDescribedbyLocal: i,
      changeModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: S
    } = zt(e, t), {
      styleHeight: L,
      styleMaxHeight: b
    } = z0(e), {
      clearModel: I,
      formatJson: v,
      initialValue: R,
      initInitialValue: g,
      jsonString: D,
      jsonStringInput: w,
      JSONtoString: F,
      onInput: P,
      parseError: M,
      resetModel: O
    } = Y0(e, {
      changeModel: o
    }), {
      modelValueReadonly: q
    } = X0(e);
    return g(), F(), {
      ariaDescribedbyLocal: i,
      attributesToExcludeFromRender: r,
      changeModel: o,
      clearModel: I,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: u,
      formatJson: v,
      helpTextId: f,
      htmlIdLocal: A,
      onInput: P,
      initialValue: R,
      initInitialValue: g,
      isErrors: E,
      isModel: p,
      jsonString: D,
      jsonStringInput: w,
      JSONtoString: F,
      modelValueReadonly: q,
      onBlur: T,
      onFocus: S,
      parseError: M,
      resetModel: O,
      styleHeight: L,
      styleMaxHeight: b
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Sn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.modelValueReadonly,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "json",
      valueClass: "a_code_content",
      valueTag: "pre"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(Ut, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: !1,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required
        }) : "",
        c("div", {
          class: "a_columns a_columns_count_12"
        }, [
          c("div", {
            class: "a_column a_column_6 a_column_12_touch"
          }, [
            c("div", {
              class: "a_d_flex a_justify_content_between"
            }, [
              c(Ut, {
                id: this.htmlIdLocal,
                alwaysTranslate: this.alwaysTranslate,
                extra: this.extra,
                idSuffix: "_input",
                isError: this.isErrors,
                isLabelFloat: !1,
                label: "_A_JSON_INPUT_"
              }),
              c("div", {
                class: "a_btn_group",
                role: "group"
              }, [
                c(Ae, {
                  class: [
                    "a_btn",
                    {
                      a_btn_transparent_info: !this.parseError,
                      a_btn_transparent_dark: this.parseError
                    }
                  ],
                  disabled: !!this.parseError,
                  iconLeft: J0,
                  textScreenReader: "_A_JSON_FORMAT_INPUT_",
                  title: "_A_JSON_FORMAT_INPUT_",
                  type: "button",
                  onClick: this.formatJson
                }),
                c(Ae, {
                  class: "a_btn a_btn_transparent_warning",
                  iconLeft: Z0,
                  textScreenReader: "_A_JSON_RESET_INPUT_",
                  title: "_A_JSON_RESET_INPUT_",
                  type: "button",
                  onClick: this.JSONtoString
                }),
                c(Ae, {
                  class: "a_btn a_btn_transparent_danger",
                  iconLeft: of,
                  textScreenReader: "_A_JSON_DISCARD_ALL_CHANGES_",
                  title: "_A_JSON_DISCARD_ALL_CHANGES_",
                  type: "button",
                  onClick: this.resetModel
                })
              ])
            ]),
            c("div", {
              class: "a_form_element a_form_element_textarea"
            }, [
              c("textarea", {
                ref: "textareaRef",
                id: this.htmlIdLocal,
                style: this.styleHeight,
                value: this.jsonStringInput,
                "aria-describedby": this.ariaDescribedbyLocal,
                ariaInvalid: this.isErrors,
                ariaRequired: this.required,
                autocapitalize: "off",
                autocomplete: "off",
                autocorrect: "off",
                class: [
                  "a_form_control a_json__textarea",
                  this.inputClass,
                  {
                    a_form_control_invalid: this.isErrors
                  }
                ],
                disabled: this.disabledAttribut,
                spellcheck: "false",
                ...this.inputAttributes,
                onInput: this.onInput,
                onFocus: this.onFocus,
                onBlur: this.onBlur
              })
            ]),
            this.parseError ? c(Ee, {
              alwaysTranslate: this.alwaysTranslate,
              class: "a_form_element__invalid_text",
              html: "_A_JSON_ERROR_HTML_{{error}}_",
              extra: {
                error: this.parseError
              }
            }) : ""
          ]),
          c("div", {
            class: "a_column a_column_6 a_column_12_touch"
          }, [
            c(Ee, {
              tag: "div",
              text: "_A_JSON_CURRENT_VALUE_"
            }),
            Dt(c("div", {
              class: "a_json__code",
              style: this.styleMaxHeight
            }), [
              [Kt, this.jsonString]
            ])
          ])
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, _i = {
  name: "ASelectLabelElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Object,
      required: !0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = d(e, "data");
    return {
      currentLabel: _(() => t.value[vt])
    };
  },
  render() {
    return c(this.tag, {}, [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        item: this.data,
        label: this.currentLabel,
        inDropdown: !1
      }) : Dt(c("span"), [
        [Kt, this.currentLabel]
      ])
    ]);
  }
};
function e1(e) {
  const t = d(e, "btnGroupAriaLabel"), n = d(e, "id"), r = d(e, "index"), s = ({ id: p, index: T }) => `${p}_${T}_up`, i = ({ id: p, index: T }) => `${p}_${T}_down`, o = _(() => `${n.value}_${r.value}_label`), u = _(() => `${n.value}_${r.value}_delete`), f = _(() => s({ id: n.value, index: r.value })), A = _(() => i({ id: n.value, index: r.value }));
  return {
    ariaLabelAttributes: _(() => $T({
      attr: "aria-label",
      value: t.value,
      translation: Pt({ placeholder: t.value })
    })),
    getIdBtnDown: i,
    getIdBtnUp: s,
    idBtnDelete: u,
    idBtnDown: A,
    idBtnUp: f,
    idSelectLabel: o
  };
}
function t1(e, { emit: t }, {
  getIdBtnDown: n = () => {
  },
  getIdBtnUp: r = () => {
  }
}) {
  const s = d(e, "id"), i = d(e, "index"), o = d(e, "isLastItem"), u = d(e, "modelValue"), f = _(() => i.value === 0);
  return {
    deleteItem: () => {
      t("deleteItem", { modelValue: u.value });
    },
    isFirstItem: f,
    onDownItem: () => {
      o.value || t("downItem", {
        index: i.value,
        idForFocus: n({
          id: s.value,
          index: i.value + 1
        })
      });
    },
    onUpItem: () => {
      f.value || t("upItem", {
        index: i.value,
        idForFocus: r({
          id: s.value,
          index: i.value - 1
        })
      });
    }
  };
}
const n1 = {
  name: "AMultiselectOrderedItem",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    btnDeleteClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    btnDeleteIcon: {
      type: String,
      required: !1,
      default: void 0
    },
    btnDeleteTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    btnDownClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    btnDownIcon: {
      type: String,
      required: !1,
      default: void 0
    },
    btnDownTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    btnGroupAriaLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    btnGroupClass: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    btnUpClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    btnUpIcon: {
      type: String,
      required: !1,
      default: void 0
    },
    btnUpTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    listItemClass: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    data: {
      type: Object,
      required: !0
    },
    index: {
      type: Number,
      required: !0
    },
    isLastItem: {
      type: Boolean,
      required: !0
    },
    modelValue: {
      type: null,
      required: !0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "deleteItem",
    "downItem",
    "upItem"
  ],
  setup(e, t) {
    const {
      ariaLabelAttributes: n,
      getIdBtnDown: r,
      getIdBtnUp: s,
      idBtnDelete: i,
      idBtnDown: o,
      idBtnUp: u,
      idSelectLabel: f
    } = e1(e), {
      deleteItem: A,
      isFirstItem: E,
      onDownItem: p,
      onUpItem: T
    } = t1(e, t, {
      getIdBtnDown: r,
      getIdBtnUp: s
    });
    return {
      ariaLabelAttributes: n,
      deleteItem: A,
      idBtnDelete: i,
      idBtnDown: o,
      idBtnUp: u,
      idSelectLabel: f,
      isFirstItem: E,
      onDownItem: p,
      onUpItem: T
    };
  },
  render() {
    return c("li", {
      class: this.listItemClass
    }, [
      c(_i, {
        id: this.idSelectLabel,
        alwaysTranslate: this.alwaysTranslate,
        data: this.data,
        slotName: this.slotName
      }, this.$slots),
      c("div", {
        class: this.btnGroupClass,
        role: "group",
        "aria-describedBy": this.idSelectLabel,
        ...this.ariaLabelAttributes
      }, [
        c(Ae, {
          id: this.idBtnUp,
          ariaDisabled: this.disabled || this.isFirstItem,
          class: [
            this.btnUpClass,
            {
              disabled: this.disabled || this.isFirstItem
            }
          ],
          iconLeft: this.btnUpIcon,
          textScreenReader: this.btnUpTitle,
          title: this.btnUpTitle,
          type: "button",
          onClick: this.onUpItem
        }),
        c(Ae, {
          id: this.idBtnDown,
          ariaDisabled: this.disabled || this.isLastItem,
          class: [
            this.btnDownClass,
            {
              disabled: this.disabled || this.isLastItem
            }
          ],
          iconLeft: this.btnDownIcon,
          textScreenReader: this.btnDownTitle,
          title: this.btnDownTitle,
          type: "button",
          onClick: this.onDownItem
        }),
        c(Ae, {
          id: this.idBtnDelete,
          ariaDisabled: this.disabled,
          class: [
            this.btnDeleteClass,
            {
              disabled: this.disabled
            }
          ],
          iconLeft: this.btnDeleteIcon,
          textScreenReader: this.btnDeleteTitle,
          title: this.btnDeleteTitle,
          type: "button",
          onClick: this.deleteItem
        })
      ])
    ]);
  }
};
var sl = { exports: {} };
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
var r1 = sl.exports, GE;
function a1() {
  return GE || (GE = 1, function(e, t) {
    (function() {
      var n, r = "4.17.21", s = 200, i = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", o = "Expected a function", u = "Invalid `variable` option passed into `_.template`", f = "__lodash_hash_undefined__", A = 500, E = "__lodash_placeholder__", p = 1, T = 2, S = 4, L = 1, b = 2, I = 1, v = 2, R = 4, g = 8, D = 16, w = 32, F = 64, P = 128, M = 256, O = 512, q = 30, U = "...", G = 800, te = 16, ne = 1, oe = 2, se = 3, ie = 1 / 0, me = 9007199254740991, Ve = 17976931348623157e292, Le = NaN, _e = 4294967295, ve = _e - 1, be = _e >>> 1, je = [
        ["ary", P],
        ["bind", I],
        ["bindKey", v],
        ["curry", g],
        ["curryRight", D],
        ["flip", O],
        ["partial", w],
        ["partialRight", F],
        ["rearg", M]
      ], Re = "[object Arguments]", Z = "[object Array]", H = "[object AsyncFunction]", X = "[object Boolean]", ae = "[object Date]", ye = "[object DOMException]", Ce = "[object Error]", qe = "[object Function]", Qe = "[object GeneratorFunction]", $e = "[object Map]", Fe = "[object Number]", it = "[object Null]", Ke = "[object Object]", lt = "[object Promise]", et = "[object Proxy]", ht = "[object RegExp]", At = "[object Set]", xt = "[object String]", tn = "[object Symbol]", Ar = "[object Undefined]", nn = "[object WeakMap]", Kn = "[object WeakSet]", zn = "[object ArrayBuffer]", On = "[object DataView]", Dr = "[object Float32Array]", Er = "[object Float64Array]", Nr = "[object Int8Array]", Yn = "[object Int16Array]", Xn = "[object Int32Array]", Zt = "[object Uint8Array]", mn = "[object Uint8ClampedArray]", pr = "[object Uint16Array]", Tr = "[object Uint32Array]", As = /\b__p \+= '';/g, Br = /\b(__p \+=) '' \+/g, Zn = /(__e\(.*?\)|\b__t\)) \+\n'';/g, pa = /&(?:amp|lt|gt|quot|#39);/g, Cn = /[&<>"']/g, Es = RegExp(pa.source), ps = RegExp(Cn.source), yt = /<%-([\s\S]+?)%>/g, Jn = /<%([\s\S]+?)%>/g, Kr = /<%=([\s\S]+?)%>/g, Ta = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, zr = /^\w*$/, Sa = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, wr = /[\\^$.*+?()[\]{}|]/g, Ni = RegExp(wr.source), rn = /^\s+/, ma = /\s/, Gs = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, js = /\{\n\/\* \[wrapped with (.+)\] \*/, Sr = /,? & /, Ts = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, _n = /[()=,{}\[\]\/\s]/, Ks = /\\(\\)?/g, Hl = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, Bi = /\w*$/, Vl = /^[-+]0x[0-9a-f]+$/i, e_ = /^0b[01]+$/i, De = /^\[object .+?Constructor\]$/, k = /^0o[0-7]+$/i, ue = /^(?:0|[1-9]\d*)$/, Ie = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, ct = /($^)/, Wt = /['\n\r\u2028\u2029\\]/g, Bt = "\\ud800-\\udfff", an = "\\u0300-\\u036f", Qn = "\\ufe20-\\ufe2f", Ss = "\\u20d0-\\u20ff", Gt = an + Qn + Ss, wi = "\\u2700-\\u27bf", Pi = "a-z\\xdf-\\xf6\\xf8-\\xff", ym = "\\xac\\xb1\\xd7\\xf7", gm = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", Rm = "\\u2000-\\u206f", Om = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", Lf = "A-Z\\xc0-\\xd6\\xd8-\\xde", bf = "\\ufe0e\\ufe0f", If = ym + gm + Rm + Om, t_ = "['’]", Cm = "[" + Bt + "]", vf = "[" + If + "]", Wl = "[" + Gt + "]", yf = "\\d+", Dm = "[" + wi + "]", gf = "[" + Pi + "]", Rf = "[^" + Bt + If + yf + wi + Pi + Lf + "]", n_ = "\\ud83c[\\udffb-\\udfff]", Nm = "(?:" + Wl + "|" + n_ + ")", Of = "[^" + Bt + "]", r_ = "(?:\\ud83c[\\udde6-\\uddff]){2}", a_ = "[\\ud800-\\udbff][\\udc00-\\udfff]", zs = "[" + Lf + "]", Cf = "\\u200d", Df = "(?:" + gf + "|" + Rf + ")", Bm = "(?:" + zs + "|" + Rf + ")", Nf = "(?:" + t_ + "(?:d|ll|m|re|s|t|ve))?", Bf = "(?:" + t_ + "(?:D|LL|M|RE|S|T|VE))?", wf = Nm + "?", Pf = "[" + bf + "]?", wm = "(?:" + Cf + "(?:" + [Of, r_, a_].join("|") + ")" + Pf + wf + ")*", Pm = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", xm = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", xf = Pf + wf + wm, Mm = "(?:" + [Dm, r_, a_].join("|") + ")" + xf, Fm = "(?:" + [Of + Wl + "?", Wl, r_, a_, Cm].join("|") + ")", qm = RegExp(t_, "g"), $m = RegExp(Wl, "g"), s_ = RegExp(n_ + "(?=" + n_ + ")|" + Fm + xf, "g"), Um = RegExp([
        zs + "?" + gf + "+" + Nf + "(?=" + [vf, zs, "$"].join("|") + ")",
        Bm + "+" + Bf + "(?=" + [vf, zs + Df, "$"].join("|") + ")",
        zs + "?" + Df + "+" + Nf,
        zs + "+" + Bf,
        xm,
        Pm,
        yf,
        Mm
      ].join("|"), "g"), km = RegExp("[" + Cf + Bt + Gt + bf + "]"), Hm = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, Vm = [
        "Array",
        "Buffer",
        "DataView",
        "Date",
        "Error",
        "Float32Array",
        "Float64Array",
        "Function",
        "Int8Array",
        "Int16Array",
        "Int32Array",
        "Map",
        "Math",
        "Object",
        "Promise",
        "RegExp",
        "Set",
        "String",
        "Symbol",
        "TypeError",
        "Uint8Array",
        "Uint8ClampedArray",
        "Uint16Array",
        "Uint32Array",
        "WeakMap",
        "_",
        "clearTimeout",
        "isFinite",
        "parseInt",
        "setTimeout"
      ], Wm = -1, bt = {};
      bt[Dr] = bt[Er] = bt[Nr] = bt[Yn] = bt[Xn] = bt[Zt] = bt[mn] = bt[pr] = bt[Tr] = !0, bt[Re] = bt[Z] = bt[zn] = bt[X] = bt[On] = bt[ae] = bt[Ce] = bt[qe] = bt[$e] = bt[Fe] = bt[Ke] = bt[ht] = bt[At] = bt[xt] = bt[nn] = !1;
      var St = {};
      St[Re] = St[Z] = St[zn] = St[On] = St[X] = St[ae] = St[Dr] = St[Er] = St[Nr] = St[Yn] = St[Xn] = St[$e] = St[Fe] = St[Ke] = St[ht] = St[At] = St[xt] = St[tn] = St[Zt] = St[mn] = St[pr] = St[Tr] = !0, St[Ce] = St[qe] = St[nn] = !1;
      var Gm = {
        // Latin-1 Supplement block.
        À: "A",
        Á: "A",
        Â: "A",
        Ã: "A",
        Ä: "A",
        Å: "A",
        à: "a",
        á: "a",
        â: "a",
        ã: "a",
        ä: "a",
        å: "a",
        Ç: "C",
        ç: "c",
        Ð: "D",
        ð: "d",
        È: "E",
        É: "E",
        Ê: "E",
        Ë: "E",
        è: "e",
        é: "e",
        ê: "e",
        ë: "e",
        Ì: "I",
        Í: "I",
        Î: "I",
        Ï: "I",
        ì: "i",
        í: "i",
        î: "i",
        ï: "i",
        Ñ: "N",
        ñ: "n",
        Ò: "O",
        Ó: "O",
        Ô: "O",
        Õ: "O",
        Ö: "O",
        Ø: "O",
        ò: "o",
        ó: "o",
        ô: "o",
        õ: "o",
        ö: "o",
        ø: "o",
        Ù: "U",
        Ú: "U",
        Û: "U",
        Ü: "U",
        ù: "u",
        ú: "u",
        û: "u",
        ü: "u",
        Ý: "Y",
        ý: "y",
        ÿ: "y",
        Æ: "Ae",
        æ: "ae",
        Þ: "Th",
        þ: "th",
        ß: "ss",
        // Latin Extended-A block.
        Ā: "A",
        Ă: "A",
        Ą: "A",
        ā: "a",
        ă: "a",
        ą: "a",
        Ć: "C",
        Ĉ: "C",
        Ċ: "C",
        Č: "C",
        ć: "c",
        ĉ: "c",
        ċ: "c",
        č: "c",
        Ď: "D",
        Đ: "D",
        ď: "d",
        đ: "d",
        Ē: "E",
        Ĕ: "E",
        Ė: "E",
        Ę: "E",
        Ě: "E",
        ē: "e",
        ĕ: "e",
        ė: "e",
        ę: "e",
        ě: "e",
        Ĝ: "G",
        Ğ: "G",
        Ġ: "G",
        Ģ: "G",
        ĝ: "g",
        ğ: "g",
        ġ: "g",
        ģ: "g",
        Ĥ: "H",
        Ħ: "H",
        ĥ: "h",
        ħ: "h",
        Ĩ: "I",
        Ī: "I",
        Ĭ: "I",
        Į: "I",
        İ: "I",
        ĩ: "i",
        ī: "i",
        ĭ: "i",
        į: "i",
        ı: "i",
        Ĵ: "J",
        ĵ: "j",
        Ķ: "K",
        ķ: "k",
        ĸ: "k",
        Ĺ: "L",
        Ļ: "L",
        Ľ: "L",
        Ŀ: "L",
        Ł: "L",
        ĺ: "l",
        ļ: "l",
        ľ: "l",
        ŀ: "l",
        ł: "l",
        Ń: "N",
        Ņ: "N",
        Ň: "N",
        Ŋ: "N",
        ń: "n",
        ņ: "n",
        ň: "n",
        ŋ: "n",
        Ō: "O",
        Ŏ: "O",
        Ő: "O",
        ō: "o",
        ŏ: "o",
        ő: "o",
        Ŕ: "R",
        Ŗ: "R",
        Ř: "R",
        ŕ: "r",
        ŗ: "r",
        ř: "r",
        Ś: "S",
        Ŝ: "S",
        Ş: "S",
        Š: "S",
        ś: "s",
        ŝ: "s",
        ş: "s",
        š: "s",
        Ţ: "T",
        Ť: "T",
        Ŧ: "T",
        ţ: "t",
        ť: "t",
        ŧ: "t",
        Ũ: "U",
        Ū: "U",
        Ŭ: "U",
        Ů: "U",
        Ű: "U",
        Ų: "U",
        ũ: "u",
        ū: "u",
        ŭ: "u",
        ů: "u",
        ű: "u",
        ų: "u",
        Ŵ: "W",
        ŵ: "w",
        Ŷ: "Y",
        ŷ: "y",
        Ÿ: "Y",
        Ź: "Z",
        Ż: "Z",
        Ž: "Z",
        ź: "z",
        ż: "z",
        ž: "z",
        Ĳ: "IJ",
        ĳ: "ij",
        Œ: "Oe",
        œ: "oe",
        ŉ: "'n",
        ſ: "s"
      }, jm = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;"
      }, Km = {
        "&amp;": "&",
        "&lt;": "<",
        "&gt;": ">",
        "&quot;": '"',
        "&#39;": "'"
      }, zm = {
        "\\": "\\",
        "'": "'",
        "\n": "n",
        "\r": "r",
        "\u2028": "u2028",
        "\u2029": "u2029"
      }, Ym = parseFloat, Xm = parseInt, Mf = typeof Po == "object" && Po && Po.Object === Object && Po, Zm = typeof self == "object" && self && self.Object === Object && self, Jt = Mf || Zm || Function("return this")(), i_ = t && !t.nodeType && t, ms = i_ && !0 && e && !e.nodeType && e, Ff = ms && ms.exports === i_, l_ = Ff && Mf.process, er = function() {
        try {
          var V = ms && ms.require && ms.require("util").types;
          return V || l_ && l_.binding && l_.binding("util");
        } catch {
        }
      }(), qf = er && er.isArrayBuffer, $f = er && er.isDate, Uf = er && er.isMap, kf = er && er.isRegExp, Hf = er && er.isSet, Vf = er && er.isTypedArray;
      function Dn(V, Y, j) {
        switch (j.length) {
          case 0:
            return V.call(Y);
          case 1:
            return V.call(Y, j[0]);
          case 2:
            return V.call(Y, j[0], j[1]);
          case 3:
            return V.call(Y, j[0], j[1], j[2]);
        }
        return V.apply(Y, j);
      }
      function Jm(V, Y, j, pe) {
        for (var Ue = -1, ut = V == null ? 0 : V.length; ++Ue < ut; ) {
          var kt = V[Ue];
          Y(pe, kt, j(kt), V);
        }
        return pe;
      }
      function tr(V, Y) {
        for (var j = -1, pe = V == null ? 0 : V.length; ++j < pe && Y(V[j], j, V) !== !1; )
          ;
        return V;
      }
      function Qm(V, Y) {
        for (var j = V == null ? 0 : V.length; j-- && Y(V[j], j, V) !== !1; )
          ;
        return V;
      }
      function Wf(V, Y) {
        for (var j = -1, pe = V == null ? 0 : V.length; ++j < pe; )
          if (!Y(V[j], j, V))
            return !1;
        return !0;
      }
      function La(V, Y) {
        for (var j = -1, pe = V == null ? 0 : V.length, Ue = 0, ut = []; ++j < pe; ) {
          var kt = V[j];
          Y(kt, j, V) && (ut[Ue++] = kt);
        }
        return ut;
      }
      function Gl(V, Y) {
        var j = V == null ? 0 : V.length;
        return !!j && Ys(V, Y, 0) > -1;
      }
      function o_(V, Y, j) {
        for (var pe = -1, Ue = V == null ? 0 : V.length; ++pe < Ue; )
          if (j(Y, V[pe]))
            return !0;
        return !1;
      }
      function gt(V, Y) {
        for (var j = -1, pe = V == null ? 0 : V.length, Ue = Array(pe); ++j < pe; )
          Ue[j] = Y(V[j], j, V);
        return Ue;
      }
      function ba(V, Y) {
        for (var j = -1, pe = Y.length, Ue = V.length; ++j < pe; )
          V[Ue + j] = Y[j];
        return V;
      }
      function u_(V, Y, j, pe) {
        var Ue = -1, ut = V == null ? 0 : V.length;
        for (pe && ut && (j = V[++Ue]); ++Ue < ut; )
          j = Y(j, V[Ue], Ue, V);
        return j;
      }
      function eL(V, Y, j, pe) {
        var Ue = V == null ? 0 : V.length;
        for (pe && Ue && (j = V[--Ue]); Ue--; )
          j = Y(j, V[Ue], Ue, V);
        return j;
      }
      function __(V, Y) {
        for (var j = -1, pe = V == null ? 0 : V.length; ++j < pe; )
          if (Y(V[j], j, V))
            return !0;
        return !1;
      }
      var tL = d_("length");
      function nL(V) {
        return V.split("");
      }
      function rL(V) {
        return V.match(Ts) || [];
      }
      function Gf(V, Y, j) {
        var pe;
        return j(V, function(Ue, ut, kt) {
          if (Y(Ue, ut, kt))
            return pe = ut, !1;
        }), pe;
      }
      function jl(V, Y, j, pe) {
        for (var Ue = V.length, ut = j + (pe ? 1 : -1); pe ? ut-- : ++ut < Ue; )
          if (Y(V[ut], ut, V))
            return ut;
        return -1;
      }
      function Ys(V, Y, j) {
        return Y === Y ? AL(V, Y, j) : jl(V, jf, j);
      }
      function aL(V, Y, j, pe) {
        for (var Ue = j - 1, ut = V.length; ++Ue < ut; )
          if (pe(V[Ue], Y))
            return Ue;
        return -1;
      }
      function jf(V) {
        return V !== V;
      }
      function Kf(V, Y) {
        var j = V == null ? 0 : V.length;
        return j ? f_(V, Y) / j : Le;
      }
      function d_(V) {
        return function(Y) {
          return Y == null ? n : Y[V];
        };
      }
      function c_(V) {
        return function(Y) {
          return V == null ? n : V[Y];
        };
      }
      function zf(V, Y, j, pe, Ue) {
        return Ue(V, function(ut, kt, Tt) {
          j = pe ? (pe = !1, ut) : Y(j, ut, kt, Tt);
        }), j;
      }
      function sL(V, Y) {
        var j = V.length;
        for (V.sort(Y); j--; )
          V[j] = V[j].value;
        return V;
      }
      function f_(V, Y) {
        for (var j, pe = -1, Ue = V.length; ++pe < Ue; ) {
          var ut = Y(V[pe]);
          ut !== n && (j = j === n ? ut : j + ut);
        }
        return j;
      }
      function h_(V, Y) {
        for (var j = -1, pe = Array(V); ++j < V; )
          pe[j] = Y(j);
        return pe;
      }
      function iL(V, Y) {
        return gt(Y, function(j) {
          return [j, V[j]];
        });
      }
      function Yf(V) {
        return V && V.slice(0, Qf(V) + 1).replace(rn, "");
      }
      function Nn(V) {
        return function(Y) {
          return V(Y);
        };
      }
      function A_(V, Y) {
        return gt(Y, function(j) {
          return V[j];
        });
      }
      function xi(V, Y) {
        return V.has(Y);
      }
      function Xf(V, Y) {
        for (var j = -1, pe = V.length; ++j < pe && Ys(Y, V[j], 0) > -1; )
          ;
        return j;
      }
      function Zf(V, Y) {
        for (var j = V.length; j-- && Ys(Y, V[j], 0) > -1; )
          ;
        return j;
      }
      function lL(V, Y) {
        for (var j = V.length, pe = 0; j--; )
          V[j] === Y && ++pe;
        return pe;
      }
      var oL = c_(Gm), uL = c_(jm);
      function _L(V) {
        return "\\" + zm[V];
      }
      function dL(V, Y) {
        return V == null ? n : V[Y];
      }
      function Xs(V) {
        return km.test(V);
      }
      function cL(V) {
        return Hm.test(V);
      }
      function fL(V) {
        for (var Y, j = []; !(Y = V.next()).done; )
          j.push(Y.value);
        return j;
      }
      function E_(V) {
        var Y = -1, j = Array(V.size);
        return V.forEach(function(pe, Ue) {
          j[++Y] = [Ue, pe];
        }), j;
      }
      function Jf(V, Y) {
        return function(j) {
          return V(Y(j));
        };
      }
      function Ia(V, Y) {
        for (var j = -1, pe = V.length, Ue = 0, ut = []; ++j < pe; ) {
          var kt = V[j];
          (kt === Y || kt === E) && (V[j] = E, ut[Ue++] = j);
        }
        return ut;
      }
      function Kl(V) {
        var Y = -1, j = Array(V.size);
        return V.forEach(function(pe) {
          j[++Y] = pe;
        }), j;
      }
      function hL(V) {
        var Y = -1, j = Array(V.size);
        return V.forEach(function(pe) {
          j[++Y] = [pe, pe];
        }), j;
      }
      function AL(V, Y, j) {
        for (var pe = j - 1, Ue = V.length; ++pe < Ue; )
          if (V[pe] === Y)
            return pe;
        return -1;
      }
      function EL(V, Y, j) {
        for (var pe = j + 1; pe--; )
          if (V[pe] === Y)
            return pe;
        return pe;
      }
      function Zs(V) {
        return Xs(V) ? TL(V) : tL(V);
      }
      function mr(V) {
        return Xs(V) ? SL(V) : nL(V);
      }
      function Qf(V) {
        for (var Y = V.length; Y-- && ma.test(V.charAt(Y)); )
          ;
        return Y;
      }
      var pL = c_(Km);
      function TL(V) {
        for (var Y = s_.lastIndex = 0; s_.test(V); )
          ++Y;
        return Y;
      }
      function SL(V) {
        return V.match(s_) || [];
      }
      function mL(V) {
        return V.match(Um) || [];
      }
      var LL = function V(Y) {
        Y = Y == null ? Jt : Js.defaults(Jt.Object(), Y, Js.pick(Jt, Vm));
        var j = Y.Array, pe = Y.Date, Ue = Y.Error, ut = Y.Function, kt = Y.Math, Tt = Y.Object, p_ = Y.RegExp, bL = Y.String, nr = Y.TypeError, zl = j.prototype, IL = ut.prototype, Qs = Tt.prototype, Yl = Y["__core-js_shared__"], Xl = IL.toString, ft = Qs.hasOwnProperty, vL = 0, eh = function() {
          var a = /[^.]+$/.exec(Yl && Yl.keys && Yl.keys.IE_PROTO || "");
          return a ? "Symbol(src)_1." + a : "";
        }(), Zl = Qs.toString, yL = Xl.call(Tt), gL = Jt._, RL = p_(
          "^" + Xl.call(ft).replace(wr, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
        ), Jl = Ff ? Y.Buffer : n, va = Y.Symbol, Ql = Y.Uint8Array, th = Jl ? Jl.allocUnsafe : n, eo = Jf(Tt.getPrototypeOf, Tt), nh = Tt.create, rh = Qs.propertyIsEnumerable, to = zl.splice, ah = va ? va.isConcatSpreadable : n, Mi = va ? va.iterator : n, Ls = va ? va.toStringTag : n, no = function() {
          try {
            var a = gs(Tt, "defineProperty");
            return a({}, "", {}), a;
          } catch {
          }
        }(), OL = Y.clearTimeout !== Jt.clearTimeout && Y.clearTimeout, CL = pe && pe.now !== Jt.Date.now && pe.now, DL = Y.setTimeout !== Jt.setTimeout && Y.setTimeout, ro = kt.ceil, ao = kt.floor, T_ = Tt.getOwnPropertySymbols, NL = Jl ? Jl.isBuffer : n, sh = Y.isFinite, BL = zl.join, wL = Jf(Tt.keys, Tt), Ht = kt.max, sn = kt.min, PL = pe.now, xL = Y.parseInt, ih = kt.random, ML = zl.reverse, S_ = gs(Y, "DataView"), Fi = gs(Y, "Map"), m_ = gs(Y, "Promise"), ei = gs(Y, "Set"), qi = gs(Y, "WeakMap"), $i = gs(Tt, "create"), so = qi && new qi(), ti = {}, FL = Rs(S_), qL = Rs(Fi), $L = Rs(m_), UL = Rs(ei), kL = Rs(qi), io = va ? va.prototype : n, Ui = io ? io.valueOf : n, lh = io ? io.toString : n;
        function C(a) {
          if (wt(a) && !ke(a) && !(a instanceof tt)) {
            if (a instanceof rr)
              return a;
            if (ft.call(a, "__wrapped__"))
              return oA(a);
          }
          return new rr(a);
        }
        var ni = /* @__PURE__ */ function() {
          function a() {
          }
          return function(l) {
            if (!Ct(l))
              return {};
            if (nh)
              return nh(l);
            a.prototype = l;
            var h = new a();
            return a.prototype = n, h;
          };
        }();
        function lo() {
        }
        function rr(a, l) {
          this.__wrapped__ = a, this.__actions__ = [], this.__chain__ = !!l, this.__index__ = 0, this.__values__ = n;
        }
        C.templateSettings = {
          /**
           * Used to detect `data` property values to be HTML-escaped.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          escape: yt,
          /**
           * Used to detect code to be evaluated.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          evaluate: Jn,
          /**
           * Used to detect `data` property values to inject.
           *
           * @memberOf _.templateSettings
           * @type {RegExp}
           */
          interpolate: Kr,
          /**
           * Used to reference the data object in the template text.
           *
           * @memberOf _.templateSettings
           * @type {string}
           */
          variable: "",
          /**
           * Used to import variables into the compiled template.
           *
           * @memberOf _.templateSettings
           * @type {Object}
           */
          imports: {
            /**
             * A reference to the `lodash` function.
             *
             * @memberOf _.templateSettings.imports
             * @type {Function}
             */
            _: C
          }
        }, C.prototype = lo.prototype, C.prototype.constructor = C, rr.prototype = ni(lo.prototype), rr.prototype.constructor = rr;
        function tt(a) {
          this.__wrapped__ = a, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = _e, this.__views__ = [];
        }
        function HL() {
          var a = new tt(this.__wrapped__);
          return a.__actions__ = Ln(this.__actions__), a.__dir__ = this.__dir__, a.__filtered__ = this.__filtered__, a.__iteratees__ = Ln(this.__iteratees__), a.__takeCount__ = this.__takeCount__, a.__views__ = Ln(this.__views__), a;
        }
        function VL() {
          if (this.__filtered__) {
            var a = new tt(this);
            a.__dir__ = -1, a.__filtered__ = !0;
          } else
            a = this.clone(), a.__dir__ *= -1;
          return a;
        }
        function WL() {
          var a = this.__wrapped__.value(), l = this.__dir__, h = ke(a), m = l < 0, y = h ? a.length : 0, N = nI(0, y, this.__views__), x = N.start, $ = N.end, W = $ - x, Q = m ? $ : x - 1, ee = this.__iteratees__, re = ee.length, fe = 0, ge = sn(W, this.__takeCount__);
          if (!h || !m && y == W && ge == W)
            return Nh(a, this.__actions__);
          var Pe = [];
          e:
            for (; W-- && fe < ge; ) {
              Q += l;
              for (var ze = -1, xe = a[Q]; ++ze < re; ) {
                var Xe = ee[ze], nt = Xe.iteratee, Pn = Xe.type, fn = nt(xe);
                if (Pn == oe)
                  xe = fn;
                else if (!fn) {
                  if (Pn == ne)
                    continue e;
                  break e;
                }
              }
              Pe[fe++] = xe;
            }
          return Pe;
        }
        tt.prototype = ni(lo.prototype), tt.prototype.constructor = tt;
        function bs(a) {
          var l = -1, h = a == null ? 0 : a.length;
          for (this.clear(); ++l < h; ) {
            var m = a[l];
            this.set(m[0], m[1]);
          }
        }
        function GL() {
          this.__data__ = $i ? $i(null) : {}, this.size = 0;
        }
        function jL(a) {
          var l = this.has(a) && delete this.__data__[a];
          return this.size -= l ? 1 : 0, l;
        }
        function KL(a) {
          var l = this.__data__;
          if ($i) {
            var h = l[a];
            return h === f ? n : h;
          }
          return ft.call(l, a) ? l[a] : n;
        }
        function zL(a) {
          var l = this.__data__;
          return $i ? l[a] !== n : ft.call(l, a);
        }
        function YL(a, l) {
          var h = this.__data__;
          return this.size += this.has(a) ? 0 : 1, h[a] = $i && l === n ? f : l, this;
        }
        bs.prototype.clear = GL, bs.prototype.delete = jL, bs.prototype.get = KL, bs.prototype.has = zL, bs.prototype.set = YL;
        function Yr(a) {
          var l = -1, h = a == null ? 0 : a.length;
          for (this.clear(); ++l < h; ) {
            var m = a[l];
            this.set(m[0], m[1]);
          }
        }
        function XL() {
          this.__data__ = [], this.size = 0;
        }
        function ZL(a) {
          var l = this.__data__, h = oo(l, a);
          if (h < 0)
            return !1;
          var m = l.length - 1;
          return h == m ? l.pop() : to.call(l, h, 1), --this.size, !0;
        }
        function JL(a) {
          var l = this.__data__, h = oo(l, a);
          return h < 0 ? n : l[h][1];
        }
        function QL(a) {
          return oo(this.__data__, a) > -1;
        }
        function eb(a, l) {
          var h = this.__data__, m = oo(h, a);
          return m < 0 ? (++this.size, h.push([a, l])) : h[m][1] = l, this;
        }
        Yr.prototype.clear = XL, Yr.prototype.delete = ZL, Yr.prototype.get = JL, Yr.prototype.has = QL, Yr.prototype.set = eb;
        function Xr(a) {
          var l = -1, h = a == null ? 0 : a.length;
          for (this.clear(); ++l < h; ) {
            var m = a[l];
            this.set(m[0], m[1]);
          }
        }
        function tb() {
          this.size = 0, this.__data__ = {
            hash: new bs(),
            map: new (Fi || Yr)(),
            string: new bs()
          };
        }
        function nb(a) {
          var l = Lo(this, a).delete(a);
          return this.size -= l ? 1 : 0, l;
        }
        function rb(a) {
          return Lo(this, a).get(a);
        }
        function ab(a) {
          return Lo(this, a).has(a);
        }
        function sb(a, l) {
          var h = Lo(this, a), m = h.size;
          return h.set(a, l), this.size += h.size == m ? 0 : 1, this;
        }
        Xr.prototype.clear = tb, Xr.prototype.delete = nb, Xr.prototype.get = rb, Xr.prototype.has = ab, Xr.prototype.set = sb;
        function Is(a) {
          var l = -1, h = a == null ? 0 : a.length;
          for (this.__data__ = new Xr(); ++l < h; )
            this.add(a[l]);
        }
        function ib(a) {
          return this.__data__.set(a, f), this;
        }
        function lb(a) {
          return this.__data__.has(a);
        }
        Is.prototype.add = Is.prototype.push = ib, Is.prototype.has = lb;
        function Lr(a) {
          var l = this.__data__ = new Yr(a);
          this.size = l.size;
        }
        function ob() {
          this.__data__ = new Yr(), this.size = 0;
        }
        function ub(a) {
          var l = this.__data__, h = l.delete(a);
          return this.size = l.size, h;
        }
        function _b(a) {
          return this.__data__.get(a);
        }
        function db(a) {
          return this.__data__.has(a);
        }
        function cb(a, l) {
          var h = this.__data__;
          if (h instanceof Yr) {
            var m = h.__data__;
            if (!Fi || m.length < s - 1)
              return m.push([a, l]), this.size = ++h.size, this;
            h = this.__data__ = new Xr(m);
          }
          return h.set(a, l), this.size = h.size, this;
        }
        Lr.prototype.clear = ob, Lr.prototype.delete = ub, Lr.prototype.get = _b, Lr.prototype.has = db, Lr.prototype.set = cb;
        function oh(a, l) {
          var h = ke(a), m = !h && Os(a), y = !h && !m && Ca(a), N = !h && !m && !y && ii(a), x = h || m || y || N, $ = x ? h_(a.length, bL) : [], W = $.length;
          for (var Q in a)
            (l || ft.call(a, Q)) && !(x && // Safari 9 has enumerable `arguments.length` in strict mode.
            (Q == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
            y && (Q == "offset" || Q == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
            N && (Q == "buffer" || Q == "byteLength" || Q == "byteOffset") || // Skip index properties.
            ea(Q, W))) && $.push(Q);
          return $;
        }
        function uh(a) {
          var l = a.length;
          return l ? a[N_(0, l - 1)] : n;
        }
        function fb(a, l) {
          return bo(Ln(a), vs(l, 0, a.length));
        }
        function hb(a) {
          return bo(Ln(a));
        }
        function L_(a, l, h) {
          (h !== n && !br(a[l], h) || h === n && !(l in a)) && Zr(a, l, h);
        }
        function ki(a, l, h) {
          var m = a[l];
          (!(ft.call(a, l) && br(m, h)) || h === n && !(l in a)) && Zr(a, l, h);
        }
        function oo(a, l) {
          for (var h = a.length; h--; )
            if (br(a[h][0], l))
              return h;
          return -1;
        }
        function Ab(a, l, h, m) {
          return ya(a, function(y, N, x) {
            l(m, y, h(y), x);
          }), m;
        }
        function _h(a, l) {
          return a && xr(l, jt(l), a);
        }
        function Eb(a, l) {
          return a && xr(l, In(l), a);
        }
        function Zr(a, l, h) {
          l == "__proto__" && no ? no(a, l, {
            configurable: !0,
            enumerable: !0,
            value: h,
            writable: !0
          }) : a[l] = h;
        }
        function b_(a, l) {
          for (var h = -1, m = l.length, y = j(m), N = a == null; ++h < m; )
            y[h] = N ? n : nd(a, l[h]);
          return y;
        }
        function vs(a, l, h) {
          return a === a && (h !== n && (a = a <= h ? a : h), l !== n && (a = a >= l ? a : l)), a;
        }
        function ar(a, l, h, m, y, N) {
          var x, $ = l & p, W = l & T, Q = l & S;
          if (h && (x = y ? h(a, m, y, N) : h(a)), x !== n)
            return x;
          if (!Ct(a))
            return a;
          var ee = ke(a);
          if (ee) {
            if (x = aI(a), !$)
              return Ln(a, x);
          } else {
            var re = ln(a), fe = re == qe || re == Qe;
            if (Ca(a))
              return Ph(a, $);
            if (re == Ke || re == Re || fe && !y) {
              if (x = W || fe ? {} : Qh(a), !$)
                return W ? Kb(a, Eb(x, a)) : jb(a, _h(x, a));
            } else {
              if (!St[re])
                return y ? a : {};
              x = sI(a, re, $);
            }
          }
          N || (N = new Lr());
          var ge = N.get(a);
          if (ge)
            return ge;
          N.set(a, x), OA(a) ? a.forEach(function(xe) {
            x.add(ar(xe, l, h, xe, a, N));
          }) : gA(a) && a.forEach(function(xe, Xe) {
            x.set(Xe, ar(xe, l, h, Xe, a, N));
          });
          var Pe = Q ? W ? H_ : k_ : W ? In : jt, ze = ee ? n : Pe(a);
          return tr(ze || a, function(xe, Xe) {
            ze && (Xe = xe, xe = a[Xe]), ki(x, Xe, ar(xe, l, h, Xe, a, N));
          }), x;
        }
        function pb(a) {
          var l = jt(a);
          return function(h) {
            return dh(h, a, l);
          };
        }
        function dh(a, l, h) {
          var m = h.length;
          if (a == null)
            return !m;
          for (a = Tt(a); m--; ) {
            var y = h[m], N = l[y], x = a[y];
            if (x === n && !(y in a) || !N(x))
              return !1;
          }
          return !0;
        }
        function ch(a, l, h) {
          if (typeof a != "function")
            throw new nr(o);
          return zi(function() {
            a.apply(n, h);
          }, l);
        }
        function Hi(a, l, h, m) {
          var y = -1, N = Gl, x = !0, $ = a.length, W = [], Q = l.length;
          if (!$)
            return W;
          h && (l = gt(l, Nn(h))), m ? (N = o_, x = !1) : l.length >= s && (N = xi, x = !1, l = new Is(l));
          e:
            for (; ++y < $; ) {
              var ee = a[y], re = h == null ? ee : h(ee);
              if (ee = m || ee !== 0 ? ee : 0, x && re === re) {
                for (var fe = Q; fe--; )
                  if (l[fe] === re)
                    continue e;
                W.push(ee);
              } else N(l, re, m) || W.push(ee);
            }
          return W;
        }
        var ya = $h(Pr), fh = $h(v_, !0);
        function Tb(a, l) {
          var h = !0;
          return ya(a, function(m, y, N) {
            return h = !!l(m, y, N), h;
          }), h;
        }
        function uo(a, l, h) {
          for (var m = -1, y = a.length; ++m < y; ) {
            var N = a[m], x = l(N);
            if (x != null && ($ === n ? x === x && !wn(x) : h(x, $)))
              var $ = x, W = N;
          }
          return W;
        }
        function Sb(a, l, h, m) {
          var y = a.length;
          for (h = We(h), h < 0 && (h = -h > y ? 0 : y + h), m = m === n || m > y ? y : We(m), m < 0 && (m += y), m = h > m ? 0 : DA(m); h < m; )
            a[h++] = l;
          return a;
        }
        function hh(a, l) {
          var h = [];
          return ya(a, function(m, y, N) {
            l(m, y, N) && h.push(m);
          }), h;
        }
        function Qt(a, l, h, m, y) {
          var N = -1, x = a.length;
          for (h || (h = lI), y || (y = []); ++N < x; ) {
            var $ = a[N];
            l > 0 && h($) ? l > 1 ? Qt($, l - 1, h, m, y) : ba(y, $) : m || (y[y.length] = $);
          }
          return y;
        }
        var I_ = Uh(), Ah = Uh(!0);
        function Pr(a, l) {
          return a && I_(a, l, jt);
        }
        function v_(a, l) {
          return a && Ah(a, l, jt);
        }
        function _o(a, l) {
          return La(l, function(h) {
            return ta(a[h]);
          });
        }
        function ys(a, l) {
          l = Ra(l, a);
          for (var h = 0, m = l.length; a != null && h < m; )
            a = a[Mr(l[h++])];
          return h && h == m ? a : n;
        }
        function Eh(a, l, h) {
          var m = l(a);
          return ke(a) ? m : ba(m, h(a));
        }
        function dn(a) {
          return a == null ? a === n ? Ar : it : Ls && Ls in Tt(a) ? tI(a) : hI(a);
        }
        function y_(a, l) {
          return a > l;
        }
        function mb(a, l) {
          return a != null && ft.call(a, l);
        }
        function Lb(a, l) {
          return a != null && l in Tt(a);
        }
        function bb(a, l, h) {
          return a >= sn(l, h) && a < Ht(l, h);
        }
        function g_(a, l, h) {
          for (var m = h ? o_ : Gl, y = a[0].length, N = a.length, x = N, $ = j(N), W = 1 / 0, Q = []; x--; ) {
            var ee = a[x];
            x && l && (ee = gt(ee, Nn(l))), W = sn(ee.length, W), $[x] = !h && (l || y >= 120 && ee.length >= 120) ? new Is(x && ee) : n;
          }
          ee = a[0];
          var re = -1, fe = $[0];
          e:
            for (; ++re < y && Q.length < W; ) {
              var ge = ee[re], Pe = l ? l(ge) : ge;
              if (ge = h || ge !== 0 ? ge : 0, !(fe ? xi(fe, Pe) : m(Q, Pe, h))) {
                for (x = N; --x; ) {
                  var ze = $[x];
                  if (!(ze ? xi(ze, Pe) : m(a[x], Pe, h)))
                    continue e;
                }
                fe && fe.push(Pe), Q.push(ge);
              }
            }
          return Q;
        }
        function Ib(a, l, h, m) {
          return Pr(a, function(y, N, x) {
            l(m, h(y), N, x);
          }), m;
        }
        function Vi(a, l, h) {
          l = Ra(l, a), a = rA(a, l);
          var m = a == null ? a : a[Mr(ir(l))];
          return m == null ? n : Dn(m, a, h);
        }
        function ph(a) {
          return wt(a) && dn(a) == Re;
        }
        function vb(a) {
          return wt(a) && dn(a) == zn;
        }
        function yb(a) {
          return wt(a) && dn(a) == ae;
        }
        function Wi(a, l, h, m, y) {
          return a === l ? !0 : a == null || l == null || !wt(a) && !wt(l) ? a !== a && l !== l : gb(a, l, h, m, Wi, y);
        }
        function gb(a, l, h, m, y, N) {
          var x = ke(a), $ = ke(l), W = x ? Z : ln(a), Q = $ ? Z : ln(l);
          W = W == Re ? Ke : W, Q = Q == Re ? Ke : Q;
          var ee = W == Ke, re = Q == Ke, fe = W == Q;
          if (fe && Ca(a)) {
            if (!Ca(l))
              return !1;
            x = !0, ee = !1;
          }
          if (fe && !ee)
            return N || (N = new Lr()), x || ii(a) ? Xh(a, l, h, m, y, N) : Qb(a, l, W, h, m, y, N);
          if (!(h & L)) {
            var ge = ee && ft.call(a, "__wrapped__"), Pe = re && ft.call(l, "__wrapped__");
            if (ge || Pe) {
              var ze = ge ? a.value() : a, xe = Pe ? l.value() : l;
              return N || (N = new Lr()), y(ze, xe, h, m, N);
            }
          }
          return fe ? (N || (N = new Lr()), eI(a, l, h, m, y, N)) : !1;
        }
        function Rb(a) {
          return wt(a) && ln(a) == $e;
        }
        function R_(a, l, h, m) {
          var y = h.length, N = y, x = !m;
          if (a == null)
            return !N;
          for (a = Tt(a); y--; ) {
            var $ = h[y];
            if (x && $[2] ? $[1] !== a[$[0]] : !($[0] in a))
              return !1;
          }
          for (; ++y < N; ) {
            $ = h[y];
            var W = $[0], Q = a[W], ee = $[1];
            if (x && $[2]) {
              if (Q === n && !(W in a))
                return !1;
            } else {
              var re = new Lr();
              if (m)
                var fe = m(Q, ee, W, a, l, re);
              if (!(fe === n ? Wi(ee, Q, L | b, m, re) : fe))
                return !1;
            }
          }
          return !0;
        }
        function Th(a) {
          if (!Ct(a) || uI(a))
            return !1;
          var l = ta(a) ? RL : De;
          return l.test(Rs(a));
        }
        function Ob(a) {
          return wt(a) && dn(a) == ht;
        }
        function Cb(a) {
          return wt(a) && ln(a) == At;
        }
        function Db(a) {
          return wt(a) && Oo(a.length) && !!bt[dn(a)];
        }
        function Sh(a) {
          return typeof a == "function" ? a : a == null ? vn : typeof a == "object" ? ke(a) ? bh(a[0], a[1]) : Lh(a) : kA(a);
        }
        function O_(a) {
          if (!Ki(a))
            return wL(a);
          var l = [];
          for (var h in Tt(a))
            ft.call(a, h) && h != "constructor" && l.push(h);
          return l;
        }
        function Nb(a) {
          if (!Ct(a))
            return fI(a);
          var l = Ki(a), h = [];
          for (var m in a)
            m == "constructor" && (l || !ft.call(a, m)) || h.push(m);
          return h;
        }
        function C_(a, l) {
          return a < l;
        }
        function mh(a, l) {
          var h = -1, m = bn(a) ? j(a.length) : [];
          return ya(a, function(y, N, x) {
            m[++h] = l(y, N, x);
          }), m;
        }
        function Lh(a) {
          var l = W_(a);
          return l.length == 1 && l[0][2] ? tA(l[0][0], l[0][1]) : function(h) {
            return h === a || R_(h, a, l);
          };
        }
        function bh(a, l) {
          return j_(a) && eA(l) ? tA(Mr(a), l) : function(h) {
            var m = nd(h, a);
            return m === n && m === l ? rd(h, a) : Wi(l, m, L | b);
          };
        }
        function co(a, l, h, m, y) {
          a !== l && I_(l, function(N, x) {
            if (y || (y = new Lr()), Ct(N))
              Bb(a, l, x, h, co, m, y);
            else {
              var $ = m ? m(z_(a, x), N, x + "", a, l, y) : n;
              $ === n && ($ = N), L_(a, x, $);
            }
          }, In);
        }
        function Bb(a, l, h, m, y, N, x) {
          var $ = z_(a, h), W = z_(l, h), Q = x.get(W);
          if (Q) {
            L_(a, h, Q);
            return;
          }
          var ee = N ? N($, W, h + "", a, l, x) : n, re = ee === n;
          if (re) {
            var fe = ke(W), ge = !fe && Ca(W), Pe = !fe && !ge && ii(W);
            ee = W, fe || ge || Pe ? ke($) ? ee = $ : Mt($) ? ee = Ln($) : ge ? (re = !1, ee = Ph(W, !0)) : Pe ? (re = !1, ee = xh(W, !0)) : ee = [] : Yi(W) || Os(W) ? (ee = $, Os($) ? ee = NA($) : (!Ct($) || ta($)) && (ee = Qh(W))) : re = !1;
          }
          re && (x.set(W, ee), y(ee, W, m, N, x), x.delete(W)), L_(a, h, ee);
        }
        function Ih(a, l) {
          var h = a.length;
          if (h)
            return l += l < 0 ? h : 0, ea(l, h) ? a[l] : n;
        }
        function vh(a, l, h) {
          l.length ? l = gt(l, function(N) {
            return ke(N) ? function(x) {
              return ys(x, N.length === 1 ? N[0] : N);
            } : N;
          }) : l = [vn];
          var m = -1;
          l = gt(l, Nn(we()));
          var y = mh(a, function(N, x, $) {
            var W = gt(l, function(Q) {
              return Q(N);
            });
            return { criteria: W, index: ++m, value: N };
          });
          return sL(y, function(N, x) {
            return Gb(N, x, h);
          });
        }
        function wb(a, l) {
          return yh(a, l, function(h, m) {
            return rd(a, m);
          });
        }
        function yh(a, l, h) {
          for (var m = -1, y = l.length, N = {}; ++m < y; ) {
            var x = l[m], $ = ys(a, x);
            h($, x) && Gi(N, Ra(x, a), $);
          }
          return N;
        }
        function Pb(a) {
          return function(l) {
            return ys(l, a);
          };
        }
        function D_(a, l, h, m) {
          var y = m ? aL : Ys, N = -1, x = l.length, $ = a;
          for (a === l && (l = Ln(l)), h && ($ = gt(a, Nn(h))); ++N < x; )
            for (var W = 0, Q = l[N], ee = h ? h(Q) : Q; (W = y($, ee, W, m)) > -1; )
              $ !== a && to.call($, W, 1), to.call(a, W, 1);
          return a;
        }
        function gh(a, l) {
          for (var h = a ? l.length : 0, m = h - 1; h--; ) {
            var y = l[h];
            if (h == m || y !== N) {
              var N = y;
              ea(y) ? to.call(a, y, 1) : P_(a, y);
            }
          }
          return a;
        }
        function N_(a, l) {
          return a + ao(ih() * (l - a + 1));
        }
        function xb(a, l, h, m) {
          for (var y = -1, N = Ht(ro((l - a) / (h || 1)), 0), x = j(N); N--; )
            x[m ? N : ++y] = a, a += h;
          return x;
        }
        function B_(a, l) {
          var h = "";
          if (!a || l < 1 || l > me)
            return h;
          do
            l % 2 && (h += a), l = ao(l / 2), l && (a += a);
          while (l);
          return h;
        }
        function Ye(a, l) {
          return Y_(nA(a, l, vn), a + "");
        }
        function Mb(a) {
          return uh(li(a));
        }
        function Fb(a, l) {
          var h = li(a);
          return bo(h, vs(l, 0, h.length));
        }
        function Gi(a, l, h, m) {
          if (!Ct(a))
            return a;
          l = Ra(l, a);
          for (var y = -1, N = l.length, x = N - 1, $ = a; $ != null && ++y < N; ) {
            var W = Mr(l[y]), Q = h;
            if (W === "__proto__" || W === "constructor" || W === "prototype")
              return a;
            if (y != x) {
              var ee = $[W];
              Q = m ? m(ee, W, $) : n, Q === n && (Q = Ct(ee) ? ee : ea(l[y + 1]) ? [] : {});
            }
            ki($, W, Q), $ = $[W];
          }
          return a;
        }
        var Rh = so ? function(a, l) {
          return so.set(a, l), a;
        } : vn, qb = no ? function(a, l) {
          return no(a, "toString", {
            configurable: !0,
            enumerable: !1,
            value: sd(l),
            writable: !0
          });
        } : vn;
        function $b(a) {
          return bo(li(a));
        }
        function sr(a, l, h) {
          var m = -1, y = a.length;
          l < 0 && (l = -l > y ? 0 : y + l), h = h > y ? y : h, h < 0 && (h += y), y = l > h ? 0 : h - l >>> 0, l >>>= 0;
          for (var N = j(y); ++m < y; )
            N[m] = a[m + l];
          return N;
        }
        function Ub(a, l) {
          var h;
          return ya(a, function(m, y, N) {
            return h = l(m, y, N), !h;
          }), !!h;
        }
        function fo(a, l, h) {
          var m = 0, y = a == null ? m : a.length;
          if (typeof l == "number" && l === l && y <= be) {
            for (; m < y; ) {
              var N = m + y >>> 1, x = a[N];
              x !== null && !wn(x) && (h ? x <= l : x < l) ? m = N + 1 : y = N;
            }
            return y;
          }
          return w_(a, l, vn, h);
        }
        function w_(a, l, h, m) {
          var y = 0, N = a == null ? 0 : a.length;
          if (N === 0)
            return 0;
          l = h(l);
          for (var x = l !== l, $ = l === null, W = wn(l), Q = l === n; y < N; ) {
            var ee = ao((y + N) / 2), re = h(a[ee]), fe = re !== n, ge = re === null, Pe = re === re, ze = wn(re);
            if (x)
              var xe = m || Pe;
            else Q ? xe = Pe && (m || fe) : $ ? xe = Pe && fe && (m || !ge) : W ? xe = Pe && fe && !ge && (m || !ze) : ge || ze ? xe = !1 : xe = m ? re <= l : re < l;
            xe ? y = ee + 1 : N = ee;
          }
          return sn(N, ve);
        }
        function Oh(a, l) {
          for (var h = -1, m = a.length, y = 0, N = []; ++h < m; ) {
            var x = a[h], $ = l ? l(x) : x;
            if (!h || !br($, W)) {
              var W = $;
              N[y++] = x === 0 ? 0 : x;
            }
          }
          return N;
        }
        function Ch(a) {
          return typeof a == "number" ? a : wn(a) ? Le : +a;
        }
        function Bn(a) {
          if (typeof a == "string")
            return a;
          if (ke(a))
            return gt(a, Bn) + "";
          if (wn(a))
            return lh ? lh.call(a) : "";
          var l = a + "";
          return l == "0" && 1 / a == -ie ? "-0" : l;
        }
        function ga(a, l, h) {
          var m = -1, y = Gl, N = a.length, x = !0, $ = [], W = $;
          if (h)
            x = !1, y = o_;
          else if (N >= s) {
            var Q = l ? null : Zb(a);
            if (Q)
              return Kl(Q);
            x = !1, y = xi, W = new Is();
          } else
            W = l ? [] : $;
          e:
            for (; ++m < N; ) {
              var ee = a[m], re = l ? l(ee) : ee;
              if (ee = h || ee !== 0 ? ee : 0, x && re === re) {
                for (var fe = W.length; fe--; )
                  if (W[fe] === re)
                    continue e;
                l && W.push(re), $.push(ee);
              } else y(W, re, h) || (W !== $ && W.push(re), $.push(ee));
            }
          return $;
        }
        function P_(a, l) {
          return l = Ra(l, a), a = rA(a, l), a == null || delete a[Mr(ir(l))];
        }
        function Dh(a, l, h, m) {
          return Gi(a, l, h(ys(a, l)), m);
        }
        function ho(a, l, h, m) {
          for (var y = a.length, N = m ? y : -1; (m ? N-- : ++N < y) && l(a[N], N, a); )
            ;
          return h ? sr(a, m ? 0 : N, m ? N + 1 : y) : sr(a, m ? N + 1 : 0, m ? y : N);
        }
        function Nh(a, l) {
          var h = a;
          return h instanceof tt && (h = h.value()), u_(l, function(m, y) {
            return y.func.apply(y.thisArg, ba([m], y.args));
          }, h);
        }
        function x_(a, l, h) {
          var m = a.length;
          if (m < 2)
            return m ? ga(a[0]) : [];
          for (var y = -1, N = j(m); ++y < m; )
            for (var x = a[y], $ = -1; ++$ < m; )
              $ != y && (N[y] = Hi(N[y] || x, a[$], l, h));
          return ga(Qt(N, 1), l, h);
        }
        function Bh(a, l, h) {
          for (var m = -1, y = a.length, N = l.length, x = {}; ++m < y; ) {
            var $ = m < N ? l[m] : n;
            h(x, a[m], $);
          }
          return x;
        }
        function M_(a) {
          return Mt(a) ? a : [];
        }
        function F_(a) {
          return typeof a == "function" ? a : vn;
        }
        function Ra(a, l) {
          return ke(a) ? a : j_(a, l) ? [a] : lA(dt(a));
        }
        var kb = Ye;
        function Oa(a, l, h) {
          var m = a.length;
          return h = h === n ? m : h, !l && h >= m ? a : sr(a, l, h);
        }
        var wh = OL || function(a) {
          return Jt.clearTimeout(a);
        };
        function Ph(a, l) {
          if (l)
            return a.slice();
          var h = a.length, m = th ? th(h) : new a.constructor(h);
          return a.copy(m), m;
        }
        function q_(a) {
          var l = new a.constructor(a.byteLength);
          return new Ql(l).set(new Ql(a)), l;
        }
        function Hb(a, l) {
          var h = l ? q_(a.buffer) : a.buffer;
          return new a.constructor(h, a.byteOffset, a.byteLength);
        }
        function Vb(a) {
          var l = new a.constructor(a.source, Bi.exec(a));
          return l.lastIndex = a.lastIndex, l;
        }
        function Wb(a) {
          return Ui ? Tt(Ui.call(a)) : {};
        }
        function xh(a, l) {
          var h = l ? q_(a.buffer) : a.buffer;
          return new a.constructor(h, a.byteOffset, a.length);
        }
        function Mh(a, l) {
          if (a !== l) {
            var h = a !== n, m = a === null, y = a === a, N = wn(a), x = l !== n, $ = l === null, W = l === l, Q = wn(l);
            if (!$ && !Q && !N && a > l || N && x && W && !$ && !Q || m && x && W || !h && W || !y)
              return 1;
            if (!m && !N && !Q && a < l || Q && h && y && !m && !N || $ && h && y || !x && y || !W)
              return -1;
          }
          return 0;
        }
        function Gb(a, l, h) {
          for (var m = -1, y = a.criteria, N = l.criteria, x = y.length, $ = h.length; ++m < x; ) {
            var W = Mh(y[m], N[m]);
            if (W) {
              if (m >= $)
                return W;
              var Q = h[m];
              return W * (Q == "desc" ? -1 : 1);
            }
          }
          return a.index - l.index;
        }
        function Fh(a, l, h, m) {
          for (var y = -1, N = a.length, x = h.length, $ = -1, W = l.length, Q = Ht(N - x, 0), ee = j(W + Q), re = !m; ++$ < W; )
            ee[$] = l[$];
          for (; ++y < x; )
            (re || y < N) && (ee[h[y]] = a[y]);
          for (; Q--; )
            ee[$++] = a[y++];
          return ee;
        }
        function qh(a, l, h, m) {
          for (var y = -1, N = a.length, x = -1, $ = h.length, W = -1, Q = l.length, ee = Ht(N - $, 0), re = j(ee + Q), fe = !m; ++y < ee; )
            re[y] = a[y];
          for (var ge = y; ++W < Q; )
            re[ge + W] = l[W];
          for (; ++x < $; )
            (fe || y < N) && (re[ge + h[x]] = a[y++]);
          return re;
        }
        function Ln(a, l) {
          var h = -1, m = a.length;
          for (l || (l = j(m)); ++h < m; )
            l[h] = a[h];
          return l;
        }
        function xr(a, l, h, m) {
          var y = !h;
          h || (h = {});
          for (var N = -1, x = l.length; ++N < x; ) {
            var $ = l[N], W = m ? m(h[$], a[$], $, h, a) : n;
            W === n && (W = a[$]), y ? Zr(h, $, W) : ki(h, $, W);
          }
          return h;
        }
        function jb(a, l) {
          return xr(a, G_(a), l);
        }
        function Kb(a, l) {
          return xr(a, Zh(a), l);
        }
        function Ao(a, l) {
          return function(h, m) {
            var y = ke(h) ? Jm : Ab, N = l ? l() : {};
            return y(h, a, we(m, 2), N);
          };
        }
        function ri(a) {
          return Ye(function(l, h) {
            var m = -1, y = h.length, N = y > 1 ? h[y - 1] : n, x = y > 2 ? h[2] : n;
            for (N = a.length > 3 && typeof N == "function" ? (y--, N) : n, x && cn(h[0], h[1], x) && (N = y < 3 ? n : N, y = 1), l = Tt(l); ++m < y; ) {
              var $ = h[m];
              $ && a(l, $, m, N);
            }
            return l;
          });
        }
        function $h(a, l) {
          return function(h, m) {
            if (h == null)
              return h;
            if (!bn(h))
              return a(h, m);
            for (var y = h.length, N = l ? y : -1, x = Tt(h); (l ? N-- : ++N < y) && m(x[N], N, x) !== !1; )
              ;
            return h;
          };
        }
        function Uh(a) {
          return function(l, h, m) {
            for (var y = -1, N = Tt(l), x = m(l), $ = x.length; $--; ) {
              var W = x[a ? $ : ++y];
              if (h(N[W], W, N) === !1)
                break;
            }
            return l;
          };
        }
        function zb(a, l, h) {
          var m = l & I, y = ji(a);
          function N() {
            var x = this && this !== Jt && this instanceof N ? y : a;
            return x.apply(m ? h : this, arguments);
          }
          return N;
        }
        function kh(a) {
          return function(l) {
            l = dt(l);
            var h = Xs(l) ? mr(l) : n, m = h ? h[0] : l.charAt(0), y = h ? Oa(h, 1).join("") : l.slice(1);
            return m[a]() + y;
          };
        }
        function ai(a) {
          return function(l) {
            return u_($A(qA(l).replace(qm, "")), a, "");
          };
        }
        function ji(a) {
          return function() {
            var l = arguments;
            switch (l.length) {
              case 0:
                return new a();
              case 1:
                return new a(l[0]);
              case 2:
                return new a(l[0], l[1]);
              case 3:
                return new a(l[0], l[1], l[2]);
              case 4:
                return new a(l[0], l[1], l[2], l[3]);
              case 5:
                return new a(l[0], l[1], l[2], l[3], l[4]);
              case 6:
                return new a(l[0], l[1], l[2], l[3], l[4], l[5]);
              case 7:
                return new a(l[0], l[1], l[2], l[3], l[4], l[5], l[6]);
            }
            var h = ni(a.prototype), m = a.apply(h, l);
            return Ct(m) ? m : h;
          };
        }
        function Yb(a, l, h) {
          var m = ji(a);
          function y() {
            for (var N = arguments.length, x = j(N), $ = N, W = si(y); $--; )
              x[$] = arguments[$];
            var Q = N < 3 && x[0] !== W && x[N - 1] !== W ? [] : Ia(x, W);
            if (N -= Q.length, N < h)
              return jh(
                a,
                l,
                Eo,
                y.placeholder,
                n,
                x,
                Q,
                n,
                n,
                h - N
              );
            var ee = this && this !== Jt && this instanceof y ? m : a;
            return Dn(ee, this, x);
          }
          return y;
        }
        function Hh(a) {
          return function(l, h, m) {
            var y = Tt(l);
            if (!bn(l)) {
              var N = we(h, 3);
              l = jt(l), h = function($) {
                return N(y[$], $, y);
              };
            }
            var x = a(l, h, m);
            return x > -1 ? y[N ? l[x] : x] : n;
          };
        }
        function Vh(a) {
          return Qr(function(l) {
            var h = l.length, m = h, y = rr.prototype.thru;
            for (a && l.reverse(); m--; ) {
              var N = l[m];
              if (typeof N != "function")
                throw new nr(o);
              if (y && !x && mo(N) == "wrapper")
                var x = new rr([], !0);
            }
            for (m = x ? m : h; ++m < h; ) {
              N = l[m];
              var $ = mo(N), W = $ == "wrapper" ? V_(N) : n;
              W && K_(W[0]) && W[1] == (P | g | w | M) && !W[4].length && W[9] == 1 ? x = x[mo(W[0])].apply(x, W[3]) : x = N.length == 1 && K_(N) ? x[$]() : x.thru(N);
            }
            return function() {
              var Q = arguments, ee = Q[0];
              if (x && Q.length == 1 && ke(ee))
                return x.plant(ee).value();
              for (var re = 0, fe = h ? l[re].apply(this, Q) : ee; ++re < h; )
                fe = l[re].call(this, fe);
              return fe;
            };
          });
        }
        function Eo(a, l, h, m, y, N, x, $, W, Q) {
          var ee = l & P, re = l & I, fe = l & v, ge = l & (g | D), Pe = l & O, ze = fe ? n : ji(a);
          function xe() {
            for (var Xe = arguments.length, nt = j(Xe), Pn = Xe; Pn--; )
              nt[Pn] = arguments[Pn];
            if (ge)
              var fn = si(xe), xn = lL(nt, fn);
            if (m && (nt = Fh(nt, m, y, ge)), N && (nt = qh(nt, N, x, ge)), Xe -= xn, ge && Xe < Q) {
              var Ft = Ia(nt, fn);
              return jh(
                a,
                l,
                Eo,
                xe.placeholder,
                h,
                nt,
                Ft,
                $,
                W,
                Q - Xe
              );
            }
            var Ir = re ? h : this, ra = fe ? Ir[a] : a;
            return Xe = nt.length, $ ? nt = AI(nt, $) : Pe && Xe > 1 && nt.reverse(), ee && W < Xe && (nt.length = W), this && this !== Jt && this instanceof xe && (ra = ze || ji(ra)), ra.apply(Ir, nt);
          }
          return xe;
        }
        function Wh(a, l) {
          return function(h, m) {
            return Ib(h, a, l(m), {});
          };
        }
        function po(a, l) {
          return function(h, m) {
            var y;
            if (h === n && m === n)
              return l;
            if (h !== n && (y = h), m !== n) {
              if (y === n)
                return m;
              typeof h == "string" || typeof m == "string" ? (h = Bn(h), m = Bn(m)) : (h = Ch(h), m = Ch(m)), y = a(h, m);
            }
            return y;
          };
        }
        function $_(a) {
          return Qr(function(l) {
            return l = gt(l, Nn(we())), Ye(function(h) {
              var m = this;
              return a(l, function(y) {
                return Dn(y, m, h);
              });
            });
          });
        }
        function To(a, l) {
          l = l === n ? " " : Bn(l);
          var h = l.length;
          if (h < 2)
            return h ? B_(l, a) : l;
          var m = B_(l, ro(a / Zs(l)));
          return Xs(l) ? Oa(mr(m), 0, a).join("") : m.slice(0, a);
        }
        function Xb(a, l, h, m) {
          var y = l & I, N = ji(a);
          function x() {
            for (var $ = -1, W = arguments.length, Q = -1, ee = m.length, re = j(ee + W), fe = this && this !== Jt && this instanceof x ? N : a; ++Q < ee; )
              re[Q] = m[Q];
            for (; W--; )
              re[Q++] = arguments[++$];
            return Dn(fe, y ? h : this, re);
          }
          return x;
        }
        function Gh(a) {
          return function(l, h, m) {
            return m && typeof m != "number" && cn(l, h, m) && (h = m = n), l = na(l), h === n ? (h = l, l = 0) : h = na(h), m = m === n ? l < h ? 1 : -1 : na(m), xb(l, h, m, a);
          };
        }
        function So(a) {
          return function(l, h) {
            return typeof l == "string" && typeof h == "string" || (l = lr(l), h = lr(h)), a(l, h);
          };
        }
        function jh(a, l, h, m, y, N, x, $, W, Q) {
          var ee = l & g, re = ee ? x : n, fe = ee ? n : x, ge = ee ? N : n, Pe = ee ? n : N;
          l |= ee ? w : F, l &= ~(ee ? F : w), l & R || (l &= ~(I | v));
          var ze = [
            a,
            l,
            y,
            ge,
            re,
            Pe,
            fe,
            $,
            W,
            Q
          ], xe = h.apply(n, ze);
          return K_(a) && aA(xe, ze), xe.placeholder = m, sA(xe, a, l);
        }
        function U_(a) {
          var l = kt[a];
          return function(h, m) {
            if (h = lr(h), m = m == null ? 0 : sn(We(m), 292), m && sh(h)) {
              var y = (dt(h) + "e").split("e"), N = l(y[0] + "e" + (+y[1] + m));
              return y = (dt(N) + "e").split("e"), +(y[0] + "e" + (+y[1] - m));
            }
            return l(h);
          };
        }
        var Zb = ei && 1 / Kl(new ei([, -0]))[1] == ie ? function(a) {
          return new ei(a);
        } : od;
        function Kh(a) {
          return function(l) {
            var h = ln(l);
            return h == $e ? E_(l) : h == At ? hL(l) : iL(l, a(l));
          };
        }
        function Jr(a, l, h, m, y, N, x, $) {
          var W = l & v;
          if (!W && typeof a != "function")
            throw new nr(o);
          var Q = m ? m.length : 0;
          if (Q || (l &= ~(w | F), m = y = n), x = x === n ? x : Ht(We(x), 0), $ = $ === n ? $ : We($), Q -= y ? y.length : 0, l & F) {
            var ee = m, re = y;
            m = y = n;
          }
          var fe = W ? n : V_(a), ge = [
            a,
            l,
            h,
            m,
            y,
            ee,
            re,
            N,
            x,
            $
          ];
          if (fe && cI(ge, fe), a = ge[0], l = ge[1], h = ge[2], m = ge[3], y = ge[4], $ = ge[9] = ge[9] === n ? W ? 0 : a.length : Ht(ge[9] - Q, 0), !$ && l & (g | D) && (l &= ~(g | D)), !l || l == I)
            var Pe = zb(a, l, h);
          else l == g || l == D ? Pe = Yb(a, l, $) : (l == w || l == (I | w)) && !y.length ? Pe = Xb(a, l, h, m) : Pe = Eo.apply(n, ge);
          var ze = fe ? Rh : aA;
          return sA(ze(Pe, ge), a, l);
        }
        function zh(a, l, h, m) {
          return a === n || br(a, Qs[h]) && !ft.call(m, h) ? l : a;
        }
        function Yh(a, l, h, m, y, N) {
          return Ct(a) && Ct(l) && (N.set(l, a), co(a, l, n, Yh, N), N.delete(l)), a;
        }
        function Jb(a) {
          return Yi(a) ? n : a;
        }
        function Xh(a, l, h, m, y, N) {
          var x = h & L, $ = a.length, W = l.length;
          if ($ != W && !(x && W > $))
            return !1;
          var Q = N.get(a), ee = N.get(l);
          if (Q && ee)
            return Q == l && ee == a;
          var re = -1, fe = !0, ge = h & b ? new Is() : n;
          for (N.set(a, l), N.set(l, a); ++re < $; ) {
            var Pe = a[re], ze = l[re];
            if (m)
              var xe = x ? m(ze, Pe, re, l, a, N) : m(Pe, ze, re, a, l, N);
            if (xe !== n) {
              if (xe)
                continue;
              fe = !1;
              break;
            }
            if (ge) {
              if (!__(l, function(Xe, nt) {
                if (!xi(ge, nt) && (Pe === Xe || y(Pe, Xe, h, m, N)))
                  return ge.push(nt);
              })) {
                fe = !1;
                break;
              }
            } else if (!(Pe === ze || y(Pe, ze, h, m, N))) {
              fe = !1;
              break;
            }
          }
          return N.delete(a), N.delete(l), fe;
        }
        function Qb(a, l, h, m, y, N, x) {
          switch (h) {
            case On:
              if (a.byteLength != l.byteLength || a.byteOffset != l.byteOffset)
                return !1;
              a = a.buffer, l = l.buffer;
            case zn:
              return !(a.byteLength != l.byteLength || !N(new Ql(a), new Ql(l)));
            case X:
            case ae:
            case Fe:
              return br(+a, +l);
            case Ce:
              return a.name == l.name && a.message == l.message;
            case ht:
            case xt:
              return a == l + "";
            case $e:
              var $ = E_;
            case At:
              var W = m & L;
              if ($ || ($ = Kl), a.size != l.size && !W)
                return !1;
              var Q = x.get(a);
              if (Q)
                return Q == l;
              m |= b, x.set(a, l);
              var ee = Xh($(a), $(l), m, y, N, x);
              return x.delete(a), ee;
            case tn:
              if (Ui)
                return Ui.call(a) == Ui.call(l);
          }
          return !1;
        }
        function eI(a, l, h, m, y, N) {
          var x = h & L, $ = k_(a), W = $.length, Q = k_(l), ee = Q.length;
          if (W != ee && !x)
            return !1;
          for (var re = W; re--; ) {
            var fe = $[re];
            if (!(x ? fe in l : ft.call(l, fe)))
              return !1;
          }
          var ge = N.get(a), Pe = N.get(l);
          if (ge && Pe)
            return ge == l && Pe == a;
          var ze = !0;
          N.set(a, l), N.set(l, a);
          for (var xe = x; ++re < W; ) {
            fe = $[re];
            var Xe = a[fe], nt = l[fe];
            if (m)
              var Pn = x ? m(nt, Xe, fe, l, a, N) : m(Xe, nt, fe, a, l, N);
            if (!(Pn === n ? Xe === nt || y(Xe, nt, h, m, N) : Pn)) {
              ze = !1;
              break;
            }
            xe || (xe = fe == "constructor");
          }
          if (ze && !xe) {
            var fn = a.constructor, xn = l.constructor;
            fn != xn && "constructor" in a && "constructor" in l && !(typeof fn == "function" && fn instanceof fn && typeof xn == "function" && xn instanceof xn) && (ze = !1);
          }
          return N.delete(a), N.delete(l), ze;
        }
        function Qr(a) {
          return Y_(nA(a, n, dA), a + "");
        }
        function k_(a) {
          return Eh(a, jt, G_);
        }
        function H_(a) {
          return Eh(a, In, Zh);
        }
        var V_ = so ? function(a) {
          return so.get(a);
        } : od;
        function mo(a) {
          for (var l = a.name + "", h = ti[l], m = ft.call(ti, l) ? h.length : 0; m--; ) {
            var y = h[m], N = y.func;
            if (N == null || N == a)
              return y.name;
          }
          return l;
        }
        function si(a) {
          var l = ft.call(C, "placeholder") ? C : a;
          return l.placeholder;
        }
        function we() {
          var a = C.iteratee || id;
          return a = a === id ? Sh : a, arguments.length ? a(arguments[0], arguments[1]) : a;
        }
        function Lo(a, l) {
          var h = a.__data__;
          return oI(l) ? h[typeof l == "string" ? "string" : "hash"] : h.map;
        }
        function W_(a) {
          for (var l = jt(a), h = l.length; h--; ) {
            var m = l[h], y = a[m];
            l[h] = [m, y, eA(y)];
          }
          return l;
        }
        function gs(a, l) {
          var h = dL(a, l);
          return Th(h) ? h : n;
        }
        function tI(a) {
          var l = ft.call(a, Ls), h = a[Ls];
          try {
            a[Ls] = n;
            var m = !0;
          } catch {
          }
          var y = Zl.call(a);
          return m && (l ? a[Ls] = h : delete a[Ls]), y;
        }
        var G_ = T_ ? function(a) {
          return a == null ? [] : (a = Tt(a), La(T_(a), function(l) {
            return rh.call(a, l);
          }));
        } : ud, Zh = T_ ? function(a) {
          for (var l = []; a; )
            ba(l, G_(a)), a = eo(a);
          return l;
        } : ud, ln = dn;
        (S_ && ln(new S_(new ArrayBuffer(1))) != On || Fi && ln(new Fi()) != $e || m_ && ln(m_.resolve()) != lt || ei && ln(new ei()) != At || qi && ln(new qi()) != nn) && (ln = function(a) {
          var l = dn(a), h = l == Ke ? a.constructor : n, m = h ? Rs(h) : "";
          if (m)
            switch (m) {
              case FL:
                return On;
              case qL:
                return $e;
              case $L:
                return lt;
              case UL:
                return At;
              case kL:
                return nn;
            }
          return l;
        });
        function nI(a, l, h) {
          for (var m = -1, y = h.length; ++m < y; ) {
            var N = h[m], x = N.size;
            switch (N.type) {
              case "drop":
                a += x;
                break;
              case "dropRight":
                l -= x;
                break;
              case "take":
                l = sn(l, a + x);
                break;
              case "takeRight":
                a = Ht(a, l - x);
                break;
            }
          }
          return { start: a, end: l };
        }
        function rI(a) {
          var l = a.match(js);
          return l ? l[1].split(Sr) : [];
        }
        function Jh(a, l, h) {
          l = Ra(l, a);
          for (var m = -1, y = l.length, N = !1; ++m < y; ) {
            var x = Mr(l[m]);
            if (!(N = a != null && h(a, x)))
              break;
            a = a[x];
          }
          return N || ++m != y ? N : (y = a == null ? 0 : a.length, !!y && Oo(y) && ea(x, y) && (ke(a) || Os(a)));
        }
        function aI(a) {
          var l = a.length, h = new a.constructor(l);
          return l && typeof a[0] == "string" && ft.call(a, "index") && (h.index = a.index, h.input = a.input), h;
        }
        function Qh(a) {
          return typeof a.constructor == "function" && !Ki(a) ? ni(eo(a)) : {};
        }
        function sI(a, l, h) {
          var m = a.constructor;
          switch (l) {
            case zn:
              return q_(a);
            case X:
            case ae:
              return new m(+a);
            case On:
              return Hb(a, h);
            case Dr:
            case Er:
            case Nr:
            case Yn:
            case Xn:
            case Zt:
            case mn:
            case pr:
            case Tr:
              return xh(a, h);
            case $e:
              return new m();
            case Fe:
            case xt:
              return new m(a);
            case ht:
              return Vb(a);
            case At:
              return new m();
            case tn:
              return Wb(a);
          }
        }
        function iI(a, l) {
          var h = l.length;
          if (!h)
            return a;
          var m = h - 1;
          return l[m] = (h > 1 ? "& " : "") + l[m], l = l.join(h > 2 ? ", " : " "), a.replace(Gs, `{
/* [wrapped with ` + l + `] */
`);
        }
        function lI(a) {
          return ke(a) || Os(a) || !!(ah && a && a[ah]);
        }
        function ea(a, l) {
          var h = typeof a;
          return l = l ?? me, !!l && (h == "number" || h != "symbol" && ue.test(a)) && a > -1 && a % 1 == 0 && a < l;
        }
        function cn(a, l, h) {
          if (!Ct(h))
            return !1;
          var m = typeof l;
          return (m == "number" ? bn(h) && ea(l, h.length) : m == "string" && l in h) ? br(h[l], a) : !1;
        }
        function j_(a, l) {
          if (ke(a))
            return !1;
          var h = typeof a;
          return h == "number" || h == "symbol" || h == "boolean" || a == null || wn(a) ? !0 : zr.test(a) || !Ta.test(a) || l != null && a in Tt(l);
        }
        function oI(a) {
          var l = typeof a;
          return l == "string" || l == "number" || l == "symbol" || l == "boolean" ? a !== "__proto__" : a === null;
        }
        function K_(a) {
          var l = mo(a), h = C[l];
          if (typeof h != "function" || !(l in tt.prototype))
            return !1;
          if (a === h)
            return !0;
          var m = V_(h);
          return !!m && a === m[0];
        }
        function uI(a) {
          return !!eh && eh in a;
        }
        var _I = Yl ? ta : _d;
        function Ki(a) {
          var l = a && a.constructor, h = typeof l == "function" && l.prototype || Qs;
          return a === h;
        }
        function eA(a) {
          return a === a && !Ct(a);
        }
        function tA(a, l) {
          return function(h) {
            return h == null ? !1 : h[a] === l && (l !== n || a in Tt(h));
          };
        }
        function dI(a) {
          var l = go(a, function(m) {
            return h.size === A && h.clear(), m;
          }), h = l.cache;
          return l;
        }
        function cI(a, l) {
          var h = a[1], m = l[1], y = h | m, N = y < (I | v | P), x = m == P && h == g || m == P && h == M && a[7].length <= l[8] || m == (P | M) && l[7].length <= l[8] && h == g;
          if (!(N || x))
            return a;
          m & I && (a[2] = l[2], y |= h & I ? 0 : R);
          var $ = l[3];
          if ($) {
            var W = a[3];
            a[3] = W ? Fh(W, $, l[4]) : $, a[4] = W ? Ia(a[3], E) : l[4];
          }
          return $ = l[5], $ && (W = a[5], a[5] = W ? qh(W, $, l[6]) : $, a[6] = W ? Ia(a[5], E) : l[6]), $ = l[7], $ && (a[7] = $), m & P && (a[8] = a[8] == null ? l[8] : sn(a[8], l[8])), a[9] == null && (a[9] = l[9]), a[0] = l[0], a[1] = y, a;
        }
        function fI(a) {
          var l = [];
          if (a != null)
            for (var h in Tt(a))
              l.push(h);
          return l;
        }
        function hI(a) {
          return Zl.call(a);
        }
        function nA(a, l, h) {
          return l = Ht(l === n ? a.length - 1 : l, 0), function() {
            for (var m = arguments, y = -1, N = Ht(m.length - l, 0), x = j(N); ++y < N; )
              x[y] = m[l + y];
            y = -1;
            for (var $ = j(l + 1); ++y < l; )
              $[y] = m[y];
            return $[l] = h(x), Dn(a, this, $);
          };
        }
        function rA(a, l) {
          return l.length < 2 ? a : ys(a, sr(l, 0, -1));
        }
        function AI(a, l) {
          for (var h = a.length, m = sn(l.length, h), y = Ln(a); m--; ) {
            var N = l[m];
            a[m] = ea(N, h) ? y[N] : n;
          }
          return a;
        }
        function z_(a, l) {
          if (!(l === "constructor" && typeof a[l] == "function") && l != "__proto__")
            return a[l];
        }
        var aA = iA(Rh), zi = DL || function(a, l) {
          return Jt.setTimeout(a, l);
        }, Y_ = iA(qb);
        function sA(a, l, h) {
          var m = l + "";
          return Y_(a, iI(m, EI(rI(m), h)));
        }
        function iA(a) {
          var l = 0, h = 0;
          return function() {
            var m = PL(), y = te - (m - h);
            if (h = m, y > 0) {
              if (++l >= G)
                return arguments[0];
            } else
              l = 0;
            return a.apply(n, arguments);
          };
        }
        function bo(a, l) {
          var h = -1, m = a.length, y = m - 1;
          for (l = l === n ? m : l; ++h < l; ) {
            var N = N_(h, y), x = a[N];
            a[N] = a[h], a[h] = x;
          }
          return a.length = l, a;
        }
        var lA = dI(function(a) {
          var l = [];
          return a.charCodeAt(0) === 46 && l.push(""), a.replace(Sa, function(h, m, y, N) {
            l.push(y ? N.replace(Ks, "$1") : m || h);
          }), l;
        });
        function Mr(a) {
          if (typeof a == "string" || wn(a))
            return a;
          var l = a + "";
          return l == "0" && 1 / a == -ie ? "-0" : l;
        }
        function Rs(a) {
          if (a != null) {
            try {
              return Xl.call(a);
            } catch {
            }
            try {
              return a + "";
            } catch {
            }
          }
          return "";
        }
        function EI(a, l) {
          return tr(je, function(h) {
            var m = "_." + h[0];
            l & h[1] && !Gl(a, m) && a.push(m);
          }), a.sort();
        }
        function oA(a) {
          if (a instanceof tt)
            return a.clone();
          var l = new rr(a.__wrapped__, a.__chain__);
          return l.__actions__ = Ln(a.__actions__), l.__index__ = a.__index__, l.__values__ = a.__values__, l;
        }
        function pI(a, l, h) {
          (h ? cn(a, l, h) : l === n) ? l = 1 : l = Ht(We(l), 0);
          var m = a == null ? 0 : a.length;
          if (!m || l < 1)
            return [];
          for (var y = 0, N = 0, x = j(ro(m / l)); y < m; )
            x[N++] = sr(a, y, y += l);
          return x;
        }
        function TI(a) {
          for (var l = -1, h = a == null ? 0 : a.length, m = 0, y = []; ++l < h; ) {
            var N = a[l];
            N && (y[m++] = N);
          }
          return y;
        }
        function SI() {
          var a = arguments.length;
          if (!a)
            return [];
          for (var l = j(a - 1), h = arguments[0], m = a; m--; )
            l[m - 1] = arguments[m];
          return ba(ke(h) ? Ln(h) : [h], Qt(l, 1));
        }
        var mI = Ye(function(a, l) {
          return Mt(a) ? Hi(a, Qt(l, 1, Mt, !0)) : [];
        }), LI = Ye(function(a, l) {
          var h = ir(l);
          return Mt(h) && (h = n), Mt(a) ? Hi(a, Qt(l, 1, Mt, !0), we(h, 2)) : [];
        }), bI = Ye(function(a, l) {
          var h = ir(l);
          return Mt(h) && (h = n), Mt(a) ? Hi(a, Qt(l, 1, Mt, !0), n, h) : [];
        });
        function II(a, l, h) {
          var m = a == null ? 0 : a.length;
          return m ? (l = h || l === n ? 1 : We(l), sr(a, l < 0 ? 0 : l, m)) : [];
        }
        function vI(a, l, h) {
          var m = a == null ? 0 : a.length;
          return m ? (l = h || l === n ? 1 : We(l), l = m - l, sr(a, 0, l < 0 ? 0 : l)) : [];
        }
        function yI(a, l) {
          return a && a.length ? ho(a, we(l, 3), !0, !0) : [];
        }
        function gI(a, l) {
          return a && a.length ? ho(a, we(l, 3), !0) : [];
        }
        function RI(a, l, h, m) {
          var y = a == null ? 0 : a.length;
          return y ? (h && typeof h != "number" && cn(a, l, h) && (h = 0, m = y), Sb(a, l, h, m)) : [];
        }
        function uA(a, l, h) {
          var m = a == null ? 0 : a.length;
          if (!m)
            return -1;
          var y = h == null ? 0 : We(h);
          return y < 0 && (y = Ht(m + y, 0)), jl(a, we(l, 3), y);
        }
        function _A(a, l, h) {
          var m = a == null ? 0 : a.length;
          if (!m)
            return -1;
          var y = m - 1;
          return h !== n && (y = We(h), y = h < 0 ? Ht(m + y, 0) : sn(y, m - 1)), jl(a, we(l, 3), y, !0);
        }
        function dA(a) {
          var l = a == null ? 0 : a.length;
          return l ? Qt(a, 1) : [];
        }
        function OI(a) {
          var l = a == null ? 0 : a.length;
          return l ? Qt(a, ie) : [];
        }
        function CI(a, l) {
          var h = a == null ? 0 : a.length;
          return h ? (l = l === n ? 1 : We(l), Qt(a, l)) : [];
        }
        function DI(a) {
          for (var l = -1, h = a == null ? 0 : a.length, m = {}; ++l < h; ) {
            var y = a[l];
            m[y[0]] = y[1];
          }
          return m;
        }
        function cA(a) {
          return a && a.length ? a[0] : n;
        }
        function NI(a, l, h) {
          var m = a == null ? 0 : a.length;
          if (!m)
            return -1;
          var y = h == null ? 0 : We(h);
          return y < 0 && (y = Ht(m + y, 0)), Ys(a, l, y);
        }
        function BI(a) {
          var l = a == null ? 0 : a.length;
          return l ? sr(a, 0, -1) : [];
        }
        var wI = Ye(function(a) {
          var l = gt(a, M_);
          return l.length && l[0] === a[0] ? g_(l) : [];
        }), PI = Ye(function(a) {
          var l = ir(a), h = gt(a, M_);
          return l === ir(h) ? l = n : h.pop(), h.length && h[0] === a[0] ? g_(h, we(l, 2)) : [];
        }), xI = Ye(function(a) {
          var l = ir(a), h = gt(a, M_);
          return l = typeof l == "function" ? l : n, l && h.pop(), h.length && h[0] === a[0] ? g_(h, n, l) : [];
        });
        function MI(a, l) {
          return a == null ? "" : BL.call(a, l);
        }
        function ir(a) {
          var l = a == null ? 0 : a.length;
          return l ? a[l - 1] : n;
        }
        function FI(a, l, h) {
          var m = a == null ? 0 : a.length;
          if (!m)
            return -1;
          var y = m;
          return h !== n && (y = We(h), y = y < 0 ? Ht(m + y, 0) : sn(y, m - 1)), l === l ? EL(a, l, y) : jl(a, jf, y, !0);
        }
        function qI(a, l) {
          return a && a.length ? Ih(a, We(l)) : n;
        }
        var $I = Ye(fA);
        function fA(a, l) {
          return a && a.length && l && l.length ? D_(a, l) : a;
        }
        function UI(a, l, h) {
          return a && a.length && l && l.length ? D_(a, l, we(h, 2)) : a;
        }
        function kI(a, l, h) {
          return a && a.length && l && l.length ? D_(a, l, n, h) : a;
        }
        var HI = Qr(function(a, l) {
          var h = a == null ? 0 : a.length, m = b_(a, l);
          return gh(a, gt(l, function(y) {
            return ea(y, h) ? +y : y;
          }).sort(Mh)), m;
        });
        function VI(a, l) {
          var h = [];
          if (!(a && a.length))
            return h;
          var m = -1, y = [], N = a.length;
          for (l = we(l, 3); ++m < N; ) {
            var x = a[m];
            l(x, m, a) && (h.push(x), y.push(m));
          }
          return gh(a, y), h;
        }
        function X_(a) {
          return a == null ? a : ML.call(a);
        }
        function WI(a, l, h) {
          var m = a == null ? 0 : a.length;
          return m ? (h && typeof h != "number" && cn(a, l, h) ? (l = 0, h = m) : (l = l == null ? 0 : We(l), h = h === n ? m : We(h)), sr(a, l, h)) : [];
        }
        function GI(a, l) {
          return fo(a, l);
        }
        function jI(a, l, h) {
          return w_(a, l, we(h, 2));
        }
        function KI(a, l) {
          var h = a == null ? 0 : a.length;
          if (h) {
            var m = fo(a, l);
            if (m < h && br(a[m], l))
              return m;
          }
          return -1;
        }
        function zI(a, l) {
          return fo(a, l, !0);
        }
        function YI(a, l, h) {
          return w_(a, l, we(h, 2), !0);
        }
        function XI(a, l) {
          var h = a == null ? 0 : a.length;
          if (h) {
            var m = fo(a, l, !0) - 1;
            if (br(a[m], l))
              return m;
          }
          return -1;
        }
        function ZI(a) {
          return a && a.length ? Oh(a) : [];
        }
        function JI(a, l) {
          return a && a.length ? Oh(a, we(l, 2)) : [];
        }
        function QI(a) {
          var l = a == null ? 0 : a.length;
          return l ? sr(a, 1, l) : [];
        }
        function ev(a, l, h) {
          return a && a.length ? (l = h || l === n ? 1 : We(l), sr(a, 0, l < 0 ? 0 : l)) : [];
        }
        function tv(a, l, h) {
          var m = a == null ? 0 : a.length;
          return m ? (l = h || l === n ? 1 : We(l), l = m - l, sr(a, l < 0 ? 0 : l, m)) : [];
        }
        function nv(a, l) {
          return a && a.length ? ho(a, we(l, 3), !1, !0) : [];
        }
        function rv(a, l) {
          return a && a.length ? ho(a, we(l, 3)) : [];
        }
        var av = Ye(function(a) {
          return ga(Qt(a, 1, Mt, !0));
        }), sv = Ye(function(a) {
          var l = ir(a);
          return Mt(l) && (l = n), ga(Qt(a, 1, Mt, !0), we(l, 2));
        }), iv = Ye(function(a) {
          var l = ir(a);
          return l = typeof l == "function" ? l : n, ga(Qt(a, 1, Mt, !0), n, l);
        });
        function lv(a) {
          return a && a.length ? ga(a) : [];
        }
        function ov(a, l) {
          return a && a.length ? ga(a, we(l, 2)) : [];
        }
        function uv(a, l) {
          return l = typeof l == "function" ? l : n, a && a.length ? ga(a, n, l) : [];
        }
        function Z_(a) {
          if (!(a && a.length))
            return [];
          var l = 0;
          return a = La(a, function(h) {
            if (Mt(h))
              return l = Ht(h.length, l), !0;
          }), h_(l, function(h) {
            return gt(a, d_(h));
          });
        }
        function hA(a, l) {
          if (!(a && a.length))
            return [];
          var h = Z_(a);
          return l == null ? h : gt(h, function(m) {
            return Dn(l, n, m);
          });
        }
        var _v = Ye(function(a, l) {
          return Mt(a) ? Hi(a, l) : [];
        }), dv = Ye(function(a) {
          return x_(La(a, Mt));
        }), cv = Ye(function(a) {
          var l = ir(a);
          return Mt(l) && (l = n), x_(La(a, Mt), we(l, 2));
        }), fv = Ye(function(a) {
          var l = ir(a);
          return l = typeof l == "function" ? l : n, x_(La(a, Mt), n, l);
        }), hv = Ye(Z_);
        function Av(a, l) {
          return Bh(a || [], l || [], ki);
        }
        function Ev(a, l) {
          return Bh(a || [], l || [], Gi);
        }
        var pv = Ye(function(a) {
          var l = a.length, h = l > 1 ? a[l - 1] : n;
          return h = typeof h == "function" ? (a.pop(), h) : n, hA(a, h);
        });
        function AA(a) {
          var l = C(a);
          return l.__chain__ = !0, l;
        }
        function Tv(a, l) {
          return l(a), a;
        }
        function Io(a, l) {
          return l(a);
        }
        var Sv = Qr(function(a) {
          var l = a.length, h = l ? a[0] : 0, m = this.__wrapped__, y = function(N) {
            return b_(N, a);
          };
          return l > 1 || this.__actions__.length || !(m instanceof tt) || !ea(h) ? this.thru(y) : (m = m.slice(h, +h + (l ? 1 : 0)), m.__actions__.push({
            func: Io,
            args: [y],
            thisArg: n
          }), new rr(m, this.__chain__).thru(function(N) {
            return l && !N.length && N.push(n), N;
          }));
        });
        function mv() {
          return AA(this);
        }
        function Lv() {
          return new rr(this.value(), this.__chain__);
        }
        function bv() {
          this.__values__ === n && (this.__values__ = CA(this.value()));
          var a = this.__index__ >= this.__values__.length, l = a ? n : this.__values__[this.__index__++];
          return { done: a, value: l };
        }
        function Iv() {
          return this;
        }
        function vv(a) {
          for (var l, h = this; h instanceof lo; ) {
            var m = oA(h);
            m.__index__ = 0, m.__values__ = n, l ? y.__wrapped__ = m : l = m;
            var y = m;
            h = h.__wrapped__;
          }
          return y.__wrapped__ = a, l;
        }
        function yv() {
          var a = this.__wrapped__;
          if (a instanceof tt) {
            var l = a;
            return this.__actions__.length && (l = new tt(this)), l = l.reverse(), l.__actions__.push({
              func: Io,
              args: [X_],
              thisArg: n
            }), new rr(l, this.__chain__);
          }
          return this.thru(X_);
        }
        function gv() {
          return Nh(this.__wrapped__, this.__actions__);
        }
        var Rv = Ao(function(a, l, h) {
          ft.call(a, h) ? ++a[h] : Zr(a, h, 1);
        });
        function Ov(a, l, h) {
          var m = ke(a) ? Wf : Tb;
          return h && cn(a, l, h) && (l = n), m(a, we(l, 3));
        }
        function Cv(a, l) {
          var h = ke(a) ? La : hh;
          return h(a, we(l, 3));
        }
        var Dv = Hh(uA), Nv = Hh(_A);
        function Bv(a, l) {
          return Qt(vo(a, l), 1);
        }
        function wv(a, l) {
          return Qt(vo(a, l), ie);
        }
        function Pv(a, l, h) {
          return h = h === n ? 1 : We(h), Qt(vo(a, l), h);
        }
        function EA(a, l) {
          var h = ke(a) ? tr : ya;
          return h(a, we(l, 3));
        }
        function pA(a, l) {
          var h = ke(a) ? Qm : fh;
          return h(a, we(l, 3));
        }
        var xv = Ao(function(a, l, h) {
          ft.call(a, h) ? a[h].push(l) : Zr(a, h, [l]);
        });
        function Mv(a, l, h, m) {
          a = bn(a) ? a : li(a), h = h && !m ? We(h) : 0;
          var y = a.length;
          return h < 0 && (h = Ht(y + h, 0)), Co(a) ? h <= y && a.indexOf(l, h) > -1 : !!y && Ys(a, l, h) > -1;
        }
        var Fv = Ye(function(a, l, h) {
          var m = -1, y = typeof l == "function", N = bn(a) ? j(a.length) : [];
          return ya(a, function(x) {
            N[++m] = y ? Dn(l, x, h) : Vi(x, l, h);
          }), N;
        }), qv = Ao(function(a, l, h) {
          Zr(a, h, l);
        });
        function vo(a, l) {
          var h = ke(a) ? gt : mh;
          return h(a, we(l, 3));
        }
        function $v(a, l, h, m) {
          return a == null ? [] : (ke(l) || (l = l == null ? [] : [l]), h = m ? n : h, ke(h) || (h = h == null ? [] : [h]), vh(a, l, h));
        }
        var Uv = Ao(function(a, l, h) {
          a[h ? 0 : 1].push(l);
        }, function() {
          return [[], []];
        });
        function kv(a, l, h) {
          var m = ke(a) ? u_ : zf, y = arguments.length < 3;
          return m(a, we(l, 4), h, y, ya);
        }
        function Hv(a, l, h) {
          var m = ke(a) ? eL : zf, y = arguments.length < 3;
          return m(a, we(l, 4), h, y, fh);
        }
        function Vv(a, l) {
          var h = ke(a) ? La : hh;
          return h(a, Ro(we(l, 3)));
        }
        function Wv(a) {
          var l = ke(a) ? uh : Mb;
          return l(a);
        }
        function Gv(a, l, h) {
          (h ? cn(a, l, h) : l === n) ? l = 1 : l = We(l);
          var m = ke(a) ? fb : Fb;
          return m(a, l);
        }
        function jv(a) {
          var l = ke(a) ? hb : $b;
          return l(a);
        }
        function Kv(a) {
          if (a == null)
            return 0;
          if (bn(a))
            return Co(a) ? Zs(a) : a.length;
          var l = ln(a);
          return l == $e || l == At ? a.size : O_(a).length;
        }
        function zv(a, l, h) {
          var m = ke(a) ? __ : Ub;
          return h && cn(a, l, h) && (l = n), m(a, we(l, 3));
        }
        var Yv = Ye(function(a, l) {
          if (a == null)
            return [];
          var h = l.length;
          return h > 1 && cn(a, l[0], l[1]) ? l = [] : h > 2 && cn(l[0], l[1], l[2]) && (l = [l[0]]), vh(a, Qt(l, 1), []);
        }), yo = CL || function() {
          return Jt.Date.now();
        };
        function Xv(a, l) {
          if (typeof l != "function")
            throw new nr(o);
          return a = We(a), function() {
            if (--a < 1)
              return l.apply(this, arguments);
          };
        }
        function TA(a, l, h) {
          return l = h ? n : l, l = a && l == null ? a.length : l, Jr(a, P, n, n, n, n, l);
        }
        function SA(a, l) {
          var h;
          if (typeof l != "function")
            throw new nr(o);
          return a = We(a), function() {
            return --a > 0 && (h = l.apply(this, arguments)), a <= 1 && (l = n), h;
          };
        }
        var J_ = Ye(function(a, l, h) {
          var m = I;
          if (h.length) {
            var y = Ia(h, si(J_));
            m |= w;
          }
          return Jr(a, m, l, h, y);
        }), mA = Ye(function(a, l, h) {
          var m = I | v;
          if (h.length) {
            var y = Ia(h, si(mA));
            m |= w;
          }
          return Jr(l, m, a, h, y);
        });
        function LA(a, l, h) {
          l = h ? n : l;
          var m = Jr(a, g, n, n, n, n, n, l);
          return m.placeholder = LA.placeholder, m;
        }
        function bA(a, l, h) {
          l = h ? n : l;
          var m = Jr(a, D, n, n, n, n, n, l);
          return m.placeholder = bA.placeholder, m;
        }
        function IA(a, l, h) {
          var m, y, N, x, $, W, Q = 0, ee = !1, re = !1, fe = !0;
          if (typeof a != "function")
            throw new nr(o);
          l = lr(l) || 0, Ct(h) && (ee = !!h.leading, re = "maxWait" in h, N = re ? Ht(lr(h.maxWait) || 0, l) : N, fe = "trailing" in h ? !!h.trailing : fe);
          function ge(Ft) {
            var Ir = m, ra = y;
            return m = y = n, Q = Ft, x = a.apply(ra, Ir), x;
          }
          function Pe(Ft) {
            return Q = Ft, $ = zi(Xe, l), ee ? ge(Ft) : x;
          }
          function ze(Ft) {
            var Ir = Ft - W, ra = Ft - Q, HA = l - Ir;
            return re ? sn(HA, N - ra) : HA;
          }
          function xe(Ft) {
            var Ir = Ft - W, ra = Ft - Q;
            return W === n || Ir >= l || Ir < 0 || re && ra >= N;
          }
          function Xe() {
            var Ft = yo();
            if (xe(Ft))
              return nt(Ft);
            $ = zi(Xe, ze(Ft));
          }
          function nt(Ft) {
            return $ = n, fe && m ? ge(Ft) : (m = y = n, x);
          }
          function Pn() {
            $ !== n && wh($), Q = 0, m = W = y = $ = n;
          }
          function fn() {
            return $ === n ? x : nt(yo());
          }
          function xn() {
            var Ft = yo(), Ir = xe(Ft);
            if (m = arguments, y = this, W = Ft, Ir) {
              if ($ === n)
                return Pe(W);
              if (re)
                return wh($), $ = zi(Xe, l), ge(W);
            }
            return $ === n && ($ = zi(Xe, l)), x;
          }
          return xn.cancel = Pn, xn.flush = fn, xn;
        }
        var Zv = Ye(function(a, l) {
          return ch(a, 1, l);
        }), Jv = Ye(function(a, l, h) {
          return ch(a, lr(l) || 0, h);
        });
        function Qv(a) {
          return Jr(a, O);
        }
        function go(a, l) {
          if (typeof a != "function" || l != null && typeof l != "function")
            throw new nr(o);
          var h = function() {
            var m = arguments, y = l ? l.apply(this, m) : m[0], N = h.cache;
            if (N.has(y))
              return N.get(y);
            var x = a.apply(this, m);
            return h.cache = N.set(y, x) || N, x;
          };
          return h.cache = new (go.Cache || Xr)(), h;
        }
        go.Cache = Xr;
        function Ro(a) {
          if (typeof a != "function")
            throw new nr(o);
          return function() {
            var l = arguments;
            switch (l.length) {
              case 0:
                return !a.call(this);
              case 1:
                return !a.call(this, l[0]);
              case 2:
                return !a.call(this, l[0], l[1]);
              case 3:
                return !a.call(this, l[0], l[1], l[2]);
            }
            return !a.apply(this, l);
          };
        }
        function ey(a) {
          return SA(2, a);
        }
        var ty = kb(function(a, l) {
          l = l.length == 1 && ke(l[0]) ? gt(l[0], Nn(we())) : gt(Qt(l, 1), Nn(we()));
          var h = l.length;
          return Ye(function(m) {
            for (var y = -1, N = sn(m.length, h); ++y < N; )
              m[y] = l[y].call(this, m[y]);
            return Dn(a, this, m);
          });
        }), Q_ = Ye(function(a, l) {
          var h = Ia(l, si(Q_));
          return Jr(a, w, n, l, h);
        }), vA = Ye(function(a, l) {
          var h = Ia(l, si(vA));
          return Jr(a, F, n, l, h);
        }), ny = Qr(function(a, l) {
          return Jr(a, M, n, n, n, l);
        });
        function ry(a, l) {
          if (typeof a != "function")
            throw new nr(o);
          return l = l === n ? l : We(l), Ye(a, l);
        }
        function ay(a, l) {
          if (typeof a != "function")
            throw new nr(o);
          return l = l == null ? 0 : Ht(We(l), 0), Ye(function(h) {
            var m = h[l], y = Oa(h, 0, l);
            return m && ba(y, m), Dn(a, this, y);
          });
        }
        function sy(a, l, h) {
          var m = !0, y = !0;
          if (typeof a != "function")
            throw new nr(o);
          return Ct(h) && (m = "leading" in h ? !!h.leading : m, y = "trailing" in h ? !!h.trailing : y), IA(a, l, {
            leading: m,
            maxWait: l,
            trailing: y
          });
        }
        function iy(a) {
          return TA(a, 1);
        }
        function ly(a, l) {
          return Q_(F_(l), a);
        }
        function oy() {
          if (!arguments.length)
            return [];
          var a = arguments[0];
          return ke(a) ? a : [a];
        }
        function uy(a) {
          return ar(a, S);
        }
        function _y(a, l) {
          return l = typeof l == "function" ? l : n, ar(a, S, l);
        }
        function dy(a) {
          return ar(a, p | S);
        }
        function cy(a, l) {
          return l = typeof l == "function" ? l : n, ar(a, p | S, l);
        }
        function fy(a, l) {
          return l == null || dh(a, l, jt(l));
        }
        function br(a, l) {
          return a === l || a !== a && l !== l;
        }
        var hy = So(y_), Ay = So(function(a, l) {
          return a >= l;
        }), Os = ph(/* @__PURE__ */ function() {
          return arguments;
        }()) ? ph : function(a) {
          return wt(a) && ft.call(a, "callee") && !rh.call(a, "callee");
        }, ke = j.isArray, Ey = qf ? Nn(qf) : vb;
        function bn(a) {
          return a != null && Oo(a.length) && !ta(a);
        }
        function Mt(a) {
          return wt(a) && bn(a);
        }
        function py(a) {
          return a === !0 || a === !1 || wt(a) && dn(a) == X;
        }
        var Ca = NL || _d, Ty = $f ? Nn($f) : yb;
        function Sy(a) {
          return wt(a) && a.nodeType === 1 && !Yi(a);
        }
        function my(a) {
          if (a == null)
            return !0;
          if (bn(a) && (ke(a) || typeof a == "string" || typeof a.splice == "function" || Ca(a) || ii(a) || Os(a)))
            return !a.length;
          var l = ln(a);
          if (l == $e || l == At)
            return !a.size;
          if (Ki(a))
            return !O_(a).length;
          for (var h in a)
            if (ft.call(a, h))
              return !1;
          return !0;
        }
        function Ly(a, l) {
          return Wi(a, l);
        }
        function by(a, l, h) {
          h = typeof h == "function" ? h : n;
          var m = h ? h(a, l) : n;
          return m === n ? Wi(a, l, n, h) : !!m;
        }
        function ed(a) {
          if (!wt(a))
            return !1;
          var l = dn(a);
          return l == Ce || l == ye || typeof a.message == "string" && typeof a.name == "string" && !Yi(a);
        }
        function Iy(a) {
          return typeof a == "number" && sh(a);
        }
        function ta(a) {
          if (!Ct(a))
            return !1;
          var l = dn(a);
          return l == qe || l == Qe || l == H || l == et;
        }
        function yA(a) {
          return typeof a == "number" && a == We(a);
        }
        function Oo(a) {
          return typeof a == "number" && a > -1 && a % 1 == 0 && a <= me;
        }
        function Ct(a) {
          var l = typeof a;
          return a != null && (l == "object" || l == "function");
        }
        function wt(a) {
          return a != null && typeof a == "object";
        }
        var gA = Uf ? Nn(Uf) : Rb;
        function vy(a, l) {
          return a === l || R_(a, l, W_(l));
        }
        function yy(a, l, h) {
          return h = typeof h == "function" ? h : n, R_(a, l, W_(l), h);
        }
        function gy(a) {
          return RA(a) && a != +a;
        }
        function Ry(a) {
          if (_I(a))
            throw new Ue(i);
          return Th(a);
        }
        function Oy(a) {
          return a === null;
        }
        function Cy(a) {
          return a == null;
        }
        function RA(a) {
          return typeof a == "number" || wt(a) && dn(a) == Fe;
        }
        function Yi(a) {
          if (!wt(a) || dn(a) != Ke)
            return !1;
          var l = eo(a);
          if (l === null)
            return !0;
          var h = ft.call(l, "constructor") && l.constructor;
          return typeof h == "function" && h instanceof h && Xl.call(h) == yL;
        }
        var td = kf ? Nn(kf) : Ob;
        function Dy(a) {
          return yA(a) && a >= -me && a <= me;
        }
        var OA = Hf ? Nn(Hf) : Cb;
        function Co(a) {
          return typeof a == "string" || !ke(a) && wt(a) && dn(a) == xt;
        }
        function wn(a) {
          return typeof a == "symbol" || wt(a) && dn(a) == tn;
        }
        var ii = Vf ? Nn(Vf) : Db;
        function Ny(a) {
          return a === n;
        }
        function By(a) {
          return wt(a) && ln(a) == nn;
        }
        function wy(a) {
          return wt(a) && dn(a) == Kn;
        }
        var Py = So(C_), xy = So(function(a, l) {
          return a <= l;
        });
        function CA(a) {
          if (!a)
            return [];
          if (bn(a))
            return Co(a) ? mr(a) : Ln(a);
          if (Mi && a[Mi])
            return fL(a[Mi]());
          var l = ln(a), h = l == $e ? E_ : l == At ? Kl : li;
          return h(a);
        }
        function na(a) {
          if (!a)
            return a === 0 ? a : 0;
          if (a = lr(a), a === ie || a === -ie) {
            var l = a < 0 ? -1 : 1;
            return l * Ve;
          }
          return a === a ? a : 0;
        }
        function We(a) {
          var l = na(a), h = l % 1;
          return l === l ? h ? l - h : l : 0;
        }
        function DA(a) {
          return a ? vs(We(a), 0, _e) : 0;
        }
        function lr(a) {
          if (typeof a == "number")
            return a;
          if (wn(a))
            return Le;
          if (Ct(a)) {
            var l = typeof a.valueOf == "function" ? a.valueOf() : a;
            a = Ct(l) ? l + "" : l;
          }
          if (typeof a != "string")
            return a === 0 ? a : +a;
          a = Yf(a);
          var h = e_.test(a);
          return h || k.test(a) ? Xm(a.slice(2), h ? 2 : 8) : Vl.test(a) ? Le : +a;
        }
        function NA(a) {
          return xr(a, In(a));
        }
        function My(a) {
          return a ? vs(We(a), -me, me) : a === 0 ? a : 0;
        }
        function dt(a) {
          return a == null ? "" : Bn(a);
        }
        var Fy = ri(function(a, l) {
          if (Ki(l) || bn(l)) {
            xr(l, jt(l), a);
            return;
          }
          for (var h in l)
            ft.call(l, h) && ki(a, h, l[h]);
        }), BA = ri(function(a, l) {
          xr(l, In(l), a);
        }), Do = ri(function(a, l, h, m) {
          xr(l, In(l), a, m);
        }), qy = ri(function(a, l, h, m) {
          xr(l, jt(l), a, m);
        }), $y = Qr(b_);
        function Uy(a, l) {
          var h = ni(a);
          return l == null ? h : _h(h, l);
        }
        var ky = Ye(function(a, l) {
          a = Tt(a);
          var h = -1, m = l.length, y = m > 2 ? l[2] : n;
          for (y && cn(l[0], l[1], y) && (m = 1); ++h < m; )
            for (var N = l[h], x = In(N), $ = -1, W = x.length; ++$ < W; ) {
              var Q = x[$], ee = a[Q];
              (ee === n || br(ee, Qs[Q]) && !ft.call(a, Q)) && (a[Q] = N[Q]);
            }
          return a;
        }), Hy = Ye(function(a) {
          return a.push(n, Yh), Dn(wA, n, a);
        });
        function Vy(a, l) {
          return Gf(a, we(l, 3), Pr);
        }
        function Wy(a, l) {
          return Gf(a, we(l, 3), v_);
        }
        function Gy(a, l) {
          return a == null ? a : I_(a, we(l, 3), In);
        }
        function jy(a, l) {
          return a == null ? a : Ah(a, we(l, 3), In);
        }
        function Ky(a, l) {
          return a && Pr(a, we(l, 3));
        }
        function zy(a, l) {
          return a && v_(a, we(l, 3));
        }
        function Yy(a) {
          return a == null ? [] : _o(a, jt(a));
        }
        function Xy(a) {
          return a == null ? [] : _o(a, In(a));
        }
        function nd(a, l, h) {
          var m = a == null ? n : ys(a, l);
          return m === n ? h : m;
        }
        function Zy(a, l) {
          return a != null && Jh(a, l, mb);
        }
        function rd(a, l) {
          return a != null && Jh(a, l, Lb);
        }
        var Jy = Wh(function(a, l, h) {
          l != null && typeof l.toString != "function" && (l = Zl.call(l)), a[l] = h;
        }, sd(vn)), Qy = Wh(function(a, l, h) {
          l != null && typeof l.toString != "function" && (l = Zl.call(l)), ft.call(a, l) ? a[l].push(h) : a[l] = [h];
        }, we), eg = Ye(Vi);
        function jt(a) {
          return bn(a) ? oh(a) : O_(a);
        }
        function In(a) {
          return bn(a) ? oh(a, !0) : Nb(a);
        }
        function tg(a, l) {
          var h = {};
          return l = we(l, 3), Pr(a, function(m, y, N) {
            Zr(h, l(m, y, N), m);
          }), h;
        }
        function ng(a, l) {
          var h = {};
          return l = we(l, 3), Pr(a, function(m, y, N) {
            Zr(h, y, l(m, y, N));
          }), h;
        }
        var rg = ri(function(a, l, h) {
          co(a, l, h);
        }), wA = ri(function(a, l, h, m) {
          co(a, l, h, m);
        }), ag = Qr(function(a, l) {
          var h = {};
          if (a == null)
            return h;
          var m = !1;
          l = gt(l, function(N) {
            return N = Ra(N, a), m || (m = N.length > 1), N;
          }), xr(a, H_(a), h), m && (h = ar(h, p | T | S, Jb));
          for (var y = l.length; y--; )
            P_(h, l[y]);
          return h;
        });
        function sg(a, l) {
          return PA(a, Ro(we(l)));
        }
        var ig = Qr(function(a, l) {
          return a == null ? {} : wb(a, l);
        });
        function PA(a, l) {
          if (a == null)
            return {};
          var h = gt(H_(a), function(m) {
            return [m];
          });
          return l = we(l), yh(a, h, function(m, y) {
            return l(m, y[0]);
          });
        }
        function lg(a, l, h) {
          l = Ra(l, a);
          var m = -1, y = l.length;
          for (y || (y = 1, a = n); ++m < y; ) {
            var N = a == null ? n : a[Mr(l[m])];
            N === n && (m = y, N = h), a = ta(N) ? N.call(a) : N;
          }
          return a;
        }
        function og(a, l, h) {
          return a == null ? a : Gi(a, l, h);
        }
        function ug(a, l, h, m) {
          return m = typeof m == "function" ? m : n, a == null ? a : Gi(a, l, h, m);
        }
        var xA = Kh(jt), MA = Kh(In);
        function _g(a, l, h) {
          var m = ke(a), y = m || Ca(a) || ii(a);
          if (l = we(l, 4), h == null) {
            var N = a && a.constructor;
            y ? h = m ? new N() : [] : Ct(a) ? h = ta(N) ? ni(eo(a)) : {} : h = {};
          }
          return (y ? tr : Pr)(a, function(x, $, W) {
            return l(h, x, $, W);
          }), h;
        }
        function dg(a, l) {
          return a == null ? !0 : P_(a, l);
        }
        function cg(a, l, h) {
          return a == null ? a : Dh(a, l, F_(h));
        }
        function fg(a, l, h, m) {
          return m = typeof m == "function" ? m : n, a == null ? a : Dh(a, l, F_(h), m);
        }
        function li(a) {
          return a == null ? [] : A_(a, jt(a));
        }
        function hg(a) {
          return a == null ? [] : A_(a, In(a));
        }
        function Ag(a, l, h) {
          return h === n && (h = l, l = n), h !== n && (h = lr(h), h = h === h ? h : 0), l !== n && (l = lr(l), l = l === l ? l : 0), vs(lr(a), l, h);
        }
        function Eg(a, l, h) {
          return l = na(l), h === n ? (h = l, l = 0) : h = na(h), a = lr(a), bb(a, l, h);
        }
        function pg(a, l, h) {
          if (h && typeof h != "boolean" && cn(a, l, h) && (l = h = n), h === n && (typeof l == "boolean" ? (h = l, l = n) : typeof a == "boolean" && (h = a, a = n)), a === n && l === n ? (a = 0, l = 1) : (a = na(a), l === n ? (l = a, a = 0) : l = na(l)), a > l) {
            var m = a;
            a = l, l = m;
          }
          if (h || a % 1 || l % 1) {
            var y = ih();
            return sn(a + y * (l - a + Ym("1e-" + ((y + "").length - 1))), l);
          }
          return N_(a, l);
        }
        var Tg = ai(function(a, l, h) {
          return l = l.toLowerCase(), a + (h ? FA(l) : l);
        });
        function FA(a) {
          return ad(dt(a).toLowerCase());
        }
        function qA(a) {
          return a = dt(a), a && a.replace(Ie, oL).replace($m, "");
        }
        function Sg(a, l, h) {
          a = dt(a), l = Bn(l);
          var m = a.length;
          h = h === n ? m : vs(We(h), 0, m);
          var y = h;
          return h -= l.length, h >= 0 && a.slice(h, y) == l;
        }
        function mg(a) {
          return a = dt(a), a && ps.test(a) ? a.replace(Cn, uL) : a;
        }
        function Lg(a) {
          return a = dt(a), a && Ni.test(a) ? a.replace(wr, "\\$&") : a;
        }
        var bg = ai(function(a, l, h) {
          return a + (h ? "-" : "") + l.toLowerCase();
        }), Ig = ai(function(a, l, h) {
          return a + (h ? " " : "") + l.toLowerCase();
        }), vg = kh("toLowerCase");
        function yg(a, l, h) {
          a = dt(a), l = We(l);
          var m = l ? Zs(a) : 0;
          if (!l || m >= l)
            return a;
          var y = (l - m) / 2;
          return To(ao(y), h) + a + To(ro(y), h);
        }
        function gg(a, l, h) {
          a = dt(a), l = We(l);
          var m = l ? Zs(a) : 0;
          return l && m < l ? a + To(l - m, h) : a;
        }
        function Rg(a, l, h) {
          a = dt(a), l = We(l);
          var m = l ? Zs(a) : 0;
          return l && m < l ? To(l - m, h) + a : a;
        }
        function Og(a, l, h) {
          return h || l == null ? l = 0 : l && (l = +l), xL(dt(a).replace(rn, ""), l || 0);
        }
        function Cg(a, l, h) {
          return (h ? cn(a, l, h) : l === n) ? l = 1 : l = We(l), B_(dt(a), l);
        }
        function Dg() {
          var a = arguments, l = dt(a[0]);
          return a.length < 3 ? l : l.replace(a[1], a[2]);
        }
        var Ng = ai(function(a, l, h) {
          return a + (h ? "_" : "") + l.toLowerCase();
        });
        function Bg(a, l, h) {
          return h && typeof h != "number" && cn(a, l, h) && (l = h = n), h = h === n ? _e : h >>> 0, h ? (a = dt(a), a && (typeof l == "string" || l != null && !td(l)) && (l = Bn(l), !l && Xs(a)) ? Oa(mr(a), 0, h) : a.split(l, h)) : [];
        }
        var wg = ai(function(a, l, h) {
          return a + (h ? " " : "") + ad(l);
        });
        function Pg(a, l, h) {
          return a = dt(a), h = h == null ? 0 : vs(We(h), 0, a.length), l = Bn(l), a.slice(h, h + l.length) == l;
        }
        function xg(a, l, h) {
          var m = C.templateSettings;
          h && cn(a, l, h) && (l = n), a = dt(a), l = Do({}, l, m, zh);
          var y = Do({}, l.imports, m.imports, zh), N = jt(y), x = A_(y, N), $, W, Q = 0, ee = l.interpolate || ct, re = "__p += '", fe = p_(
            (l.escape || ct).source + "|" + ee.source + "|" + (ee === Kr ? Hl : ct).source + "|" + (l.evaluate || ct).source + "|$",
            "g"
          ), ge = "//# sourceURL=" + (ft.call(l, "sourceURL") ? (l.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++Wm + "]") + `
`;
          a.replace(fe, function(xe, Xe, nt, Pn, fn, xn) {
            return nt || (nt = Pn), re += a.slice(Q, xn).replace(Wt, _L), Xe && ($ = !0, re += `' +
__e(` + Xe + `) +
'`), fn && (W = !0, re += `';
` + fn + `;
__p += '`), nt && (re += `' +
((__t = (` + nt + `)) == null ? '' : __t) +
'`), Q = xn + xe.length, xe;
          }), re += `';
`;
          var Pe = ft.call(l, "variable") && l.variable;
          if (!Pe)
            re = `with (obj) {
` + re + `
}
`;
          else if (_n.test(Pe))
            throw new Ue(u);
          re = (W ? re.replace(As, "") : re).replace(Br, "$1").replace(Zn, "$1;"), re = "function(" + (Pe || "obj") + `) {
` + (Pe ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + ($ ? ", __e = _.escape" : "") + (W ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + re + `return __p
}`;
          var ze = UA(function() {
            return ut(N, ge + "return " + re).apply(n, x);
          });
          if (ze.source = re, ed(ze))
            throw ze;
          return ze;
        }
        function Mg(a) {
          return dt(a).toLowerCase();
        }
        function Fg(a) {
          return dt(a).toUpperCase();
        }
        function qg(a, l, h) {
          if (a = dt(a), a && (h || l === n))
            return Yf(a);
          if (!a || !(l = Bn(l)))
            return a;
          var m = mr(a), y = mr(l), N = Xf(m, y), x = Zf(m, y) + 1;
          return Oa(m, N, x).join("");
        }
        function $g(a, l, h) {
          if (a = dt(a), a && (h || l === n))
            return a.slice(0, Qf(a) + 1);
          if (!a || !(l = Bn(l)))
            return a;
          var m = mr(a), y = Zf(m, mr(l)) + 1;
          return Oa(m, 0, y).join("");
        }
        function Ug(a, l, h) {
          if (a = dt(a), a && (h || l === n))
            return a.replace(rn, "");
          if (!a || !(l = Bn(l)))
            return a;
          var m = mr(a), y = Xf(m, mr(l));
          return Oa(m, y).join("");
        }
        function kg(a, l) {
          var h = q, m = U;
          if (Ct(l)) {
            var y = "separator" in l ? l.separator : y;
            h = "length" in l ? We(l.length) : h, m = "omission" in l ? Bn(l.omission) : m;
          }
          a = dt(a);
          var N = a.length;
          if (Xs(a)) {
            var x = mr(a);
            N = x.length;
          }
          if (h >= N)
            return a;
          var $ = h - Zs(m);
          if ($ < 1)
            return m;
          var W = x ? Oa(x, 0, $).join("") : a.slice(0, $);
          if (y === n)
            return W + m;
          if (x && ($ += W.length - $), td(y)) {
            if (a.slice($).search(y)) {
              var Q, ee = W;
              for (y.global || (y = p_(y.source, dt(Bi.exec(y)) + "g")), y.lastIndex = 0; Q = y.exec(ee); )
                var re = Q.index;
              W = W.slice(0, re === n ? $ : re);
            }
          } else if (a.indexOf(Bn(y), $) != $) {
            var fe = W.lastIndexOf(y);
            fe > -1 && (W = W.slice(0, fe));
          }
          return W + m;
        }
        function Hg(a) {
          return a = dt(a), a && Es.test(a) ? a.replace(pa, pL) : a;
        }
        var Vg = ai(function(a, l, h) {
          return a + (h ? " " : "") + l.toUpperCase();
        }), ad = kh("toUpperCase");
        function $A(a, l, h) {
          return a = dt(a), l = h ? n : l, l === n ? cL(a) ? mL(a) : rL(a) : a.match(l) || [];
        }
        var UA = Ye(function(a, l) {
          try {
            return Dn(a, n, l);
          } catch (h) {
            return ed(h) ? h : new Ue(h);
          }
        }), Wg = Qr(function(a, l) {
          return tr(l, function(h) {
            h = Mr(h), Zr(a, h, J_(a[h], a));
          }), a;
        });
        function Gg(a) {
          var l = a == null ? 0 : a.length, h = we();
          return a = l ? gt(a, function(m) {
            if (typeof m[1] != "function")
              throw new nr(o);
            return [h(m[0]), m[1]];
          }) : [], Ye(function(m) {
            for (var y = -1; ++y < l; ) {
              var N = a[y];
              if (Dn(N[0], this, m))
                return Dn(N[1], this, m);
            }
          });
        }
        function jg(a) {
          return pb(ar(a, p));
        }
        function sd(a) {
          return function() {
            return a;
          };
        }
        function Kg(a, l) {
          return a == null || a !== a ? l : a;
        }
        var zg = Vh(), Yg = Vh(!0);
        function vn(a) {
          return a;
        }
        function id(a) {
          return Sh(typeof a == "function" ? a : ar(a, p));
        }
        function Xg(a) {
          return Lh(ar(a, p));
        }
        function Zg(a, l) {
          return bh(a, ar(l, p));
        }
        var Jg = Ye(function(a, l) {
          return function(h) {
            return Vi(h, a, l);
          };
        }), Qg = Ye(function(a, l) {
          return function(h) {
            return Vi(a, h, l);
          };
        });
        function ld(a, l, h) {
          var m = jt(l), y = _o(l, m);
          h == null && !(Ct(l) && (y.length || !m.length)) && (h = l, l = a, a = this, y = _o(l, jt(l)));
          var N = !(Ct(h) && "chain" in h) || !!h.chain, x = ta(a);
          return tr(y, function($) {
            var W = l[$];
            a[$] = W, x && (a.prototype[$] = function() {
              var Q = this.__chain__;
              if (N || Q) {
                var ee = a(this.__wrapped__), re = ee.__actions__ = Ln(this.__actions__);
                return re.push({ func: W, args: arguments, thisArg: a }), ee.__chain__ = Q, ee;
              }
              return W.apply(a, ba([this.value()], arguments));
            });
          }), a;
        }
        function eR() {
          return Jt._ === this && (Jt._ = gL), this;
        }
        function od() {
        }
        function tR(a) {
          return a = We(a), Ye(function(l) {
            return Ih(l, a);
          });
        }
        var nR = $_(gt), rR = $_(Wf), aR = $_(__);
        function kA(a) {
          return j_(a) ? d_(Mr(a)) : Pb(a);
        }
        function sR(a) {
          return function(l) {
            return a == null ? n : ys(a, l);
          };
        }
        var iR = Gh(), lR = Gh(!0);
        function ud() {
          return [];
        }
        function _d() {
          return !1;
        }
        function oR() {
          return {};
        }
        function uR() {
          return "";
        }
        function _R() {
          return !0;
        }
        function dR(a, l) {
          if (a = We(a), a < 1 || a > me)
            return [];
          var h = _e, m = sn(a, _e);
          l = we(l), a -= _e;
          for (var y = h_(m, l); ++h < a; )
            l(h);
          return y;
        }
        function cR(a) {
          return ke(a) ? gt(a, Mr) : wn(a) ? [a] : Ln(lA(dt(a)));
        }
        function fR(a) {
          var l = ++vL;
          return dt(a) + l;
        }
        var hR = po(function(a, l) {
          return a + l;
        }, 0), AR = U_("ceil"), ER = po(function(a, l) {
          return a / l;
        }, 1), pR = U_("floor");
        function TR(a) {
          return a && a.length ? uo(a, vn, y_) : n;
        }
        function SR(a, l) {
          return a && a.length ? uo(a, we(l, 2), y_) : n;
        }
        function mR(a) {
          return Kf(a, vn);
        }
        function LR(a, l) {
          return Kf(a, we(l, 2));
        }
        function bR(a) {
          return a && a.length ? uo(a, vn, C_) : n;
        }
        function IR(a, l) {
          return a && a.length ? uo(a, we(l, 2), C_) : n;
        }
        var vR = po(function(a, l) {
          return a * l;
        }, 1), yR = U_("round"), gR = po(function(a, l) {
          return a - l;
        }, 0);
        function RR(a) {
          return a && a.length ? f_(a, vn) : 0;
        }
        function OR(a, l) {
          return a && a.length ? f_(a, we(l, 2)) : 0;
        }
        return C.after = Xv, C.ary = TA, C.assign = Fy, C.assignIn = BA, C.assignInWith = Do, C.assignWith = qy, C.at = $y, C.before = SA, C.bind = J_, C.bindAll = Wg, C.bindKey = mA, C.castArray = oy, C.chain = AA, C.chunk = pI, C.compact = TI, C.concat = SI, C.cond = Gg, C.conforms = jg, C.constant = sd, C.countBy = Rv, C.create = Uy, C.curry = LA, C.curryRight = bA, C.debounce = IA, C.defaults = ky, C.defaultsDeep = Hy, C.defer = Zv, C.delay = Jv, C.difference = mI, C.differenceBy = LI, C.differenceWith = bI, C.drop = II, C.dropRight = vI, C.dropRightWhile = yI, C.dropWhile = gI, C.fill = RI, C.filter = Cv, C.flatMap = Bv, C.flatMapDeep = wv, C.flatMapDepth = Pv, C.flatten = dA, C.flattenDeep = OI, C.flattenDepth = CI, C.flip = Qv, C.flow = zg, C.flowRight = Yg, C.fromPairs = DI, C.functions = Yy, C.functionsIn = Xy, C.groupBy = xv, C.initial = BI, C.intersection = wI, C.intersectionBy = PI, C.intersectionWith = xI, C.invert = Jy, C.invertBy = Qy, C.invokeMap = Fv, C.iteratee = id, C.keyBy = qv, C.keys = jt, C.keysIn = In, C.map = vo, C.mapKeys = tg, C.mapValues = ng, C.matches = Xg, C.matchesProperty = Zg, C.memoize = go, C.merge = rg, C.mergeWith = wA, C.method = Jg, C.methodOf = Qg, C.mixin = ld, C.negate = Ro, C.nthArg = tR, C.omit = ag, C.omitBy = sg, C.once = ey, C.orderBy = $v, C.over = nR, C.overArgs = ty, C.overEvery = rR, C.overSome = aR, C.partial = Q_, C.partialRight = vA, C.partition = Uv, C.pick = ig, C.pickBy = PA, C.property = kA, C.propertyOf = sR, C.pull = $I, C.pullAll = fA, C.pullAllBy = UI, C.pullAllWith = kI, C.pullAt = HI, C.range = iR, C.rangeRight = lR, C.rearg = ny, C.reject = Vv, C.remove = VI, C.rest = ry, C.reverse = X_, C.sampleSize = Gv, C.set = og, C.setWith = ug, C.shuffle = jv, C.slice = WI, C.sortBy = Yv, C.sortedUniq = ZI, C.sortedUniqBy = JI, C.split = Bg, C.spread = ay, C.tail = QI, C.take = ev, C.takeRight = tv, C.takeRightWhile = nv, C.takeWhile = rv, C.tap = Tv, C.throttle = sy, C.thru = Io, C.toArray = CA, C.toPairs = xA, C.toPairsIn = MA, C.toPath = cR, C.toPlainObject = NA, C.transform = _g, C.unary = iy, C.union = av, C.unionBy = sv, C.unionWith = iv, C.uniq = lv, C.uniqBy = ov, C.uniqWith = uv, C.unset = dg, C.unzip = Z_, C.unzipWith = hA, C.update = cg, C.updateWith = fg, C.values = li, C.valuesIn = hg, C.without = _v, C.words = $A, C.wrap = ly, C.xor = dv, C.xorBy = cv, C.xorWith = fv, C.zip = hv, C.zipObject = Av, C.zipObjectDeep = Ev, C.zipWith = pv, C.entries = xA, C.entriesIn = MA, C.extend = BA, C.extendWith = Do, ld(C, C), C.add = hR, C.attempt = UA, C.camelCase = Tg, C.capitalize = FA, C.ceil = AR, C.clamp = Ag, C.clone = uy, C.cloneDeep = dy, C.cloneDeepWith = cy, C.cloneWith = _y, C.conformsTo = fy, C.deburr = qA, C.defaultTo = Kg, C.divide = ER, C.endsWith = Sg, C.eq = br, C.escape = mg, C.escapeRegExp = Lg, C.every = Ov, C.find = Dv, C.findIndex = uA, C.findKey = Vy, C.findLast = Nv, C.findLastIndex = _A, C.findLastKey = Wy, C.floor = pR, C.forEach = EA, C.forEachRight = pA, C.forIn = Gy, C.forInRight = jy, C.forOwn = Ky, C.forOwnRight = zy, C.get = nd, C.gt = hy, C.gte = Ay, C.has = Zy, C.hasIn = rd, C.head = cA, C.identity = vn, C.includes = Mv, C.indexOf = NI, C.inRange = Eg, C.invoke = eg, C.isArguments = Os, C.isArray = ke, C.isArrayBuffer = Ey, C.isArrayLike = bn, C.isArrayLikeObject = Mt, C.isBoolean = py, C.isBuffer = Ca, C.isDate = Ty, C.isElement = Sy, C.isEmpty = my, C.isEqual = Ly, C.isEqualWith = by, C.isError = ed, C.isFinite = Iy, C.isFunction = ta, C.isInteger = yA, C.isLength = Oo, C.isMap = gA, C.isMatch = vy, C.isMatchWith = yy, C.isNaN = gy, C.isNative = Ry, C.isNil = Cy, C.isNull = Oy, C.isNumber = RA, C.isObject = Ct, C.isObjectLike = wt, C.isPlainObject = Yi, C.isRegExp = td, C.isSafeInteger = Dy, C.isSet = OA, C.isString = Co, C.isSymbol = wn, C.isTypedArray = ii, C.isUndefined = Ny, C.isWeakMap = By, C.isWeakSet = wy, C.join = MI, C.kebabCase = bg, C.last = ir, C.lastIndexOf = FI, C.lowerCase = Ig, C.lowerFirst = vg, C.lt = Py, C.lte = xy, C.max = TR, C.maxBy = SR, C.mean = mR, C.meanBy = LR, C.min = bR, C.minBy = IR, C.stubArray = ud, C.stubFalse = _d, C.stubObject = oR, C.stubString = uR, C.stubTrue = _R, C.multiply = vR, C.nth = qI, C.noConflict = eR, C.noop = od, C.now = yo, C.pad = yg, C.padEnd = gg, C.padStart = Rg, C.parseInt = Og, C.random = pg, C.reduce = kv, C.reduceRight = Hv, C.repeat = Cg, C.replace = Dg, C.result = lg, C.round = yR, C.runInContext = V, C.sample = Wv, C.size = Kv, C.snakeCase = Ng, C.some = zv, C.sortedIndex = GI, C.sortedIndexBy = jI, C.sortedIndexOf = KI, C.sortedLastIndex = zI, C.sortedLastIndexBy = YI, C.sortedLastIndexOf = XI, C.startCase = wg, C.startsWith = Pg, C.subtract = gR, C.sum = RR, C.sumBy = OR, C.template = xg, C.times = dR, C.toFinite = na, C.toInteger = We, C.toLength = DA, C.toLower = Mg, C.toNumber = lr, C.toSafeInteger = My, C.toString = dt, C.toUpper = Fg, C.trim = qg, C.trimEnd = $g, C.trimStart = Ug, C.truncate = kg, C.unescape = Hg, C.uniqueId = fR, C.upperCase = Vg, C.upperFirst = ad, C.each = EA, C.eachRight = pA, C.first = cA, ld(C, function() {
          var a = {};
          return Pr(C, function(l, h) {
            ft.call(C.prototype, h) || (a[h] = l);
          }), a;
        }(), { chain: !1 }), C.VERSION = r, tr(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(a) {
          C[a].placeholder = C;
        }), tr(["drop", "take"], function(a, l) {
          tt.prototype[a] = function(h) {
            h = h === n ? 1 : Ht(We(h), 0);
            var m = this.__filtered__ && !l ? new tt(this) : this.clone();
            return m.__filtered__ ? m.__takeCount__ = sn(h, m.__takeCount__) : m.__views__.push({
              size: sn(h, _e),
              type: a + (m.__dir__ < 0 ? "Right" : "")
            }), m;
          }, tt.prototype[a + "Right"] = function(h) {
            return this.reverse()[a](h).reverse();
          };
        }), tr(["filter", "map", "takeWhile"], function(a, l) {
          var h = l + 1, m = h == ne || h == se;
          tt.prototype[a] = function(y) {
            var N = this.clone();
            return N.__iteratees__.push({
              iteratee: we(y, 3),
              type: h
            }), N.__filtered__ = N.__filtered__ || m, N;
          };
        }), tr(["head", "last"], function(a, l) {
          var h = "take" + (l ? "Right" : "");
          tt.prototype[a] = function() {
            return this[h](1).value()[0];
          };
        }), tr(["initial", "tail"], function(a, l) {
          var h = "drop" + (l ? "" : "Right");
          tt.prototype[a] = function() {
            return this.__filtered__ ? new tt(this) : this[h](1);
          };
        }), tt.prototype.compact = function() {
          return this.filter(vn);
        }, tt.prototype.find = function(a) {
          return this.filter(a).head();
        }, tt.prototype.findLast = function(a) {
          return this.reverse().find(a);
        }, tt.prototype.invokeMap = Ye(function(a, l) {
          return typeof a == "function" ? new tt(this) : this.map(function(h) {
            return Vi(h, a, l);
          });
        }), tt.prototype.reject = function(a) {
          return this.filter(Ro(we(a)));
        }, tt.prototype.slice = function(a, l) {
          a = We(a);
          var h = this;
          return h.__filtered__ && (a > 0 || l < 0) ? new tt(h) : (a < 0 ? h = h.takeRight(-a) : a && (h = h.drop(a)), l !== n && (l = We(l), h = l < 0 ? h.dropRight(-l) : h.take(l - a)), h);
        }, tt.prototype.takeRightWhile = function(a) {
          return this.reverse().takeWhile(a).reverse();
        }, tt.prototype.toArray = function() {
          return this.take(_e);
        }, Pr(tt.prototype, function(a, l) {
          var h = /^(?:filter|find|map|reject)|While$/.test(l), m = /^(?:head|last)$/.test(l), y = C[m ? "take" + (l == "last" ? "Right" : "") : l], N = m || /^find/.test(l);
          y && (C.prototype[l] = function() {
            var x = this.__wrapped__, $ = m ? [1] : arguments, W = x instanceof tt, Q = $[0], ee = W || ke(x), re = function(Xe) {
              var nt = y.apply(C, ba([Xe], $));
              return m && fe ? nt[0] : nt;
            };
            ee && h && typeof Q == "function" && Q.length != 1 && (W = ee = !1);
            var fe = this.__chain__, ge = !!this.__actions__.length, Pe = N && !fe, ze = W && !ge;
            if (!N && ee) {
              x = ze ? x : new tt(this);
              var xe = a.apply(x, $);
              return xe.__actions__.push({ func: Io, args: [re], thisArg: n }), new rr(xe, fe);
            }
            return Pe && ze ? a.apply(this, $) : (xe = this.thru(re), Pe ? m ? xe.value()[0] : xe.value() : xe);
          });
        }), tr(["pop", "push", "shift", "sort", "splice", "unshift"], function(a) {
          var l = zl[a], h = /^(?:push|sort|unshift)$/.test(a) ? "tap" : "thru", m = /^(?:pop|shift)$/.test(a);
          C.prototype[a] = function() {
            var y = arguments;
            if (m && !this.__chain__) {
              var N = this.value();
              return l.apply(ke(N) ? N : [], y);
            }
            return this[h](function(x) {
              return l.apply(ke(x) ? x : [], y);
            });
          };
        }), Pr(tt.prototype, function(a, l) {
          var h = C[l];
          if (h) {
            var m = h.name + "";
            ft.call(ti, m) || (ti[m] = []), ti[m].push({ name: l, func: h });
          }
        }), ti[Eo(n, v).name] = [{
          name: "wrapper",
          func: n
        }], tt.prototype.clone = HL, tt.prototype.reverse = VL, tt.prototype.value = WL, C.prototype.at = Sv, C.prototype.chain = mv, C.prototype.commit = Lv, C.prototype.next = bv, C.prototype.plant = vv, C.prototype.reverse = yv, C.prototype.toJSON = C.prototype.valueOf = C.prototype.value = gv, C.prototype.first = C.prototype.head, Mi && (C.prototype[Mi] = Iv), C;
      }, Js = LL();
      ms ? ((ms.exports = Js)._ = Js, i_._ = Js) : Jt._ = Js;
    }).call(r1);
  }(sl, sl.exports)), sl.exports;
}
var ul = a1();
function s1(e, {
  changeModel: t = () => {
  },
  dataExtraLocalFiltered: n = _(() => []),
  dataSortFiltered: r = _(() => []),
  modelValueFiltered: s = _(() => [])
}) {
  const i = d(e, "disabled"), o = d(e, "modelValue"), u = _(() => i.value || s.value.length === 0), f = _(() => i.value || n.value.length === 0 && r.value.length === 0), A = () => {
    if (f.value)
      return;
    const T = he(o.value);
    ul.forEach(n.value, (S) => {
      T.push(S[Ge]);
    }), ul.forEach(r.value, (S) => {
      T.push(S[Ge]);
    }), t({ model: T });
  }, E = _(() => {
    const T = {};
    return ul.forEach(s.value, (S) => {
      T[S] = !0;
    }), T;
  });
  return {
    deselectAll: () => {
      if (u.value)
        return;
      const T = Lt(o.value, (S) => !E.value[S]);
      t({ model: T });
    },
    disabledDeselectAll: u,
    disabledSelectAll: f,
    selectAll: A
  };
}
function i1(e, {
  htmlIdLocal: t = _(() => "")
}) {
  return {
    idForSelect: _(() => `${t.value}_select`)
  };
}
function l1(e, {
  dataExtraLocal: t = _(() => []),
  dataSort: n = _(() => []),
  modelValueFiltered: r = _(() => [])
}) {
  const s = _(() => r.value.length ? Lt(n.value, (o) => !r.value.includes(o[Ge])) : n.value);
  return {
    dataExtraLocalFiltered: _(() => r.value.length ? Lt(t.value, (o) => !r.value.includes(o[Ge])) : t.value),
    dataSortFiltered: s
  };
}
function o1(e, {
  changeModel: t = () => {
  },
  dataKeyByKeyIdLocal: n = _(() => ({}))
}) {
  const r = d(e, "modelValue"), s = _(() => !Te(r.value) || !r.value.length ? [] : Lt(r.value, (A) => n.value[A]));
  return {
    changeModelFromSelect: ({ model: A }) => {
      if (Te(A) && A.length) {
        const E = he(r.value);
        E.push(...A), t({ model: E });
      }
    },
    deleteItem: ({ modelValue: A }) => {
      const E = Ns(r.value, (T) => T === A), p = he(r.value);
      p.splice(E, 1), t({ model: p });
    },
    modelValueFiltered: s,
    onDownItem: async ({ index: A, idForFocus: E }) => {
      const p = A + 1, T = s.value[A], S = s.value[p], L = Ns(r.value, (v) => v === T), b = Ns(r.value, (v) => v === S), I = he(r.value);
      [I[L], I[b]] = [I[b], I[L]], t({ model: I }), await pi(), Rr({
        selector: `#${E}`
      });
    },
    onUpItem: async ({ index: A, idForFocus: E }) => {
      const p = A - 1, T = s.value[A], S = s.value[p], L = Ns(r.value, (v) => v === T), b = Ns(r.value, (v) => v === S), I = he(r.value);
      [I[L], I[b]] = [I[b], I[L]], t({ model: I }), await pi(), Rr({
        selector: `#${E}`
      });
    }
  };
}
const Pu = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-up" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708z"/>
</svg>`, aa = {
  btnDeleteTitle: "_A_MULTISELECT_ORDERED_BTN_DELETE_",
  btnDownTitle: "_A_MULTISELECT_ORDERED_BTN_DOWN_",
  btnGroupAriaLabel: "_A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_",
  btnUpTitle: "_A_MULTISELECT_ORDERED_BTN_UP_",
  deselectAll: "_A_MULTISELECT_ORDERED_DESELECT_ALL_",
  groupAllAriaLabel: "_A_MULTISELECT_ORDERED_GROUP_ALL_",
  modelEmpty: "_A_MULTISELECT_ORDERED_MODEL_EMPTY_",
  selectAll: "_A_MULTISELECT_ORDERED_SELECT_ALL_"
}, Me = {
  propsDefault: {
    attributesBtnDeselectAll: {},
    attributesBtnSelectAll: {},
    attributesFieldset: {},
    btnDeleteClass: "a_btn a_btn_primary",
    btnDeleteIcon: of,
    btnDownClass: "a_btn a_btn_outline_secondary",
    btnDownIcon: Ua,
    btnGroupClass: "a_btn_group",
    btnUpClass: "a_btn a_btn_outline_secondary",
    btnUpIcon: Pu,
    classFieldset: void 0,
    hasBorder: !0,
    isDeselectAll: !1,
    isSelectAll: !1,
    keyDisabled: void 0,
    keyGroup: void 0,
    keyId: "value",
    keyLabel: "label",
    labelClass: void 0,
    listItemClass: "a_list_group__item",
    readonlyDefault: "",
    search: !1,
    searchApi: !1,
    searchApiKey: void 0,
    searchInGroup: !1,
    searchOutside: !1,
    searchTextInHtml: !1,
    searchTimeout: 0,
    selectButtonClass: void 0,
    selectButtonClassDefault: "a_form_control a_select_toggle",
    selectCaretIcon: Ua,
    selectHasCaret: !0,
    selectInBody: !0,
    selectIsCloseByClick: !1,
    selectIsLabelFloat: !0,
    selectIsSelectionCloseable: !0,
    selectLabel: "_A_MULTISELECT_ORDERED_LABEL_SELECT_",
    selectLabelClass: void 0,
    selectMenuClass: void 0,
    selectMenuWidthType: "as_button",
    selectPlacement: "bottom-end",
    selectPopperContainerId: "a_select_container",
    slotName: void 0,
    sortOrder: "asc",
    sortOrderGroup: "asc",
    texts: {
      ...aa
    },
    translateData: !1
  }
}, pfe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Me.propsDefault = {
      ...Me.propsDefault,
      ...t
    };
  }
};
function u1(e) {
  const t = d(e, "texts"), n = _(() => t.value.btnDeleteTitle || aa.btnDeleteTitle), r = _(() => t.value.btnDownTitle || aa.btnDownTitle), s = _(() => t.value.btnGroupAriaLabel || aa.btnGroupAriaLabel), i = _(() => t.value.btnUpTitle || aa.btnUpTitle), o = _(() => t.value.deselectAll || aa.deselectAll), u = _(() => t.value.modelEmpty || aa.modelEmpty), f = _(() => t.value.selectAll || aa.selectAll), A = _(() => t.value.groupAllAriaLabel || aa.groupAllAriaLabel);
  return {
    textBtnDeleteTitle: n,
    textBtnDownTitle: r,
    textBtnGroupAriaLabel: s,
    textBtnUpTitle: i,
    textDeselectAll: o,
    textGroupAllAriaLabel: A,
    textModelEmpty: u,
    textSelectAll: f
  };
}
const fS = "AIsDataPrepared", _1 = {
  name: "AMultiselectOrdered",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    attributesBtnDeselectAll: {
      type: Object,
      required: !1,
      default: () => Me.propsDefault.attributesBtnDeselectAll
    },
    attributesBtnSelectAll: {
      type: Object,
      required: !1,
      default: () => Me.propsDefault.attributesBtnSelectAll
    },
    attributesFieldset: {
      type: Object,
      required: !1,
      default: () => Me.propsDefault.attributesFieldset
    },
    btnDeleteClass: {
      type: [String, Object],
      required: !1,
      default: () => Me.propsDefault.btnDeleteClass
    },
    btnDeleteIcon: {
      type: String,
      required: !1,
      default: () => Me.propsDefault.btnDeleteIcon
    },
    btnDownClass: {
      type: [String, Object],
      required: !1,
      default: () => Me.propsDefault.btnDownClass
    },
    btnDownIcon: {
      type: String,
      required: !1,
      default: () => Me.propsDefault.btnDownIcon
    },
    btnGroupClass: {
      type: [String, Object, Array],
      required: !1,
      default: () => Me.propsDefault.btnGroupClass
    },
    btnUpClass: {
      type: [String, Object],
      required: !1,
      default: () => Me.propsDefault.btnUpClass
    },
    btnUpIcon: {
      type: String,
      required: !1,
      default: () => Me.propsDefault.btnUpIcon
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: () => Me.propsDefault.classFieldset
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => []
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: () => Me.propsDefault.hasBorder
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_m_select_ordered_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isDeselectAll: {
      type: Boolean,
      required: !1,
      default: () => Me.propsDefault.isDeselectAll
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSelectAll: {
      type: Boolean,
      required: !1,
      default: () => Me.propsDefault.isSelectAll
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: () => Me.propsDefault.keyDisabled
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: () => Me.propsDefault.keyGroup
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: () => Me.propsDefault.keyId
    },
    keyLabel: {
      type: String,
      required: !1,
      default: () => Me.propsDefault.keyLabel
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      required: !1,
      default: () => Me.propsDefault.labelClass
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    listItemClass: {
      type: [String, Object, Array],
      required: !1,
      default: () => Me.propsDefault.listItemClass
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: Array,
      required: !1,
      default: () => []
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: () => Me.propsDefault.readonlyDefault
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    search: {
      type: Boolean,
      required: !1,
      default: () => Me.propsDefault.search
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: () => Me.propsDefault.searchApi
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: () => Me.propsDefault.searchApiKey
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: () => Me.propsDefault.searchInGroup
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: () => Me.propsDefault.searchOutside
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1,
      default: () => Me.propsDefault.searchTextInHtml
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: () => Me.propsDefault.searchTimeout
    },
    selectButtonClass: {
      type: String,
      required: !1,
      default: () => Me.propsDefault.selectButtonClass
    },
    selectButtonClassDefault: {
      type: [String, Object],
      required: !1,
      default: () => Me.propsDefault.selectButtonClassDefault
    },
    selectCaretIcon: {
      type: [String, Object],
      required: !1,
      default: () => Me.propsDefault.selectCaretIcon
    },
    selectHasCaret: {
      type: Boolean,
      required: !1,
      default: () => Me.propsDefault.selectHasCaret
    },
    selectInBody: {
      type: Boolean,
      required: !1,
      default: () => Me.propsDefault.selectInBody
    },
    selectIsCloseByClick: {
      type: Boolean,
      required: !1,
      default: () => Me.propsDefault.selectIsCloseByClick
    },
    selectIsLabelFloat: {
      type: Boolean,
      required: !1,
      default: () => Me.propsDefault.selectIsLabelFloat
    },
    selectIsSelectionCloseable: {
      type: Boolean,
      required: !1,
      default: () => Me.propsDefault.selectIsSelectionCloseable
    },
    selectLabel: {
      type: [String, Number],
      required: !1,
      default: () => Me.propsDefault.selectLabel
    },
    selectLabelClass: {
      type: [String, Object],
      required: !1,
      default: () => Me.propsDefault.selectLabelClass
    },
    selectLabelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    selectMenuClass: {
      type: [String, Object],
      required: !1,
      default: () => Me.propsDefault.selectMenuClass
    },
    selectMenuWidthType: {
      type: String,
      required: !1,
      default: () => Me.propsDefault.selectMenuWidthType,
      validator: (e) => ["as_button", "by_content"].indexOf(e) !== -1
    },
    selectPlaceholder: {
      type: String,
      required: !1,
      default: void 0
    },
    selectPlacement: {
      type: String,
      required: !1,
      default: () => Me.propsDefault.selectPlacement,
      validator: (e) => Gn.indexOf(e) !== -1
    },
    selectPopperContainerId: {
      type: String,
      required: !1,
      default: () => Me.propsDefault.selectPopperContainerId
    },
    slotName: {
      type: String,
      required: !1,
      default: () => Me.propsDefault.slotName
    },
    sortOrder: {
      type: String,
      required: !1,
      default: () => Me.propsDefault.sortOrder,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: () => Me.propsDefault.sortOrderGroup,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    texts: {
      type: Object,
      required: !1,
      default: () => Me.propsDefault.texts
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: () => Me.propsDefault.translateData
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "blur",
    "focus",
    "onSearchOutside",
    "open",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      componentStyleHide: r
    } = Xt(e), {
      textAfterLabel: s
    } = Qu(e), {
      textBtnDeleteTitle: i,
      textBtnDownTitle: o,
      textBtnGroupAriaLabel: u,
      textBtnUpTitle: f,
      textDeselectAll: A,
      textGroupAllAriaLabel: E,
      textModelEmpty: p,
      textSelectAll: T
    } = u1(e), {
      ariaDescribedbyLocal: S,
      changeModel: L,
      clearModel: b,
      errorsId: I,
      helpTextId: v,
      htmlIdLocal: R,
      isErrors: g,
      onBlur: D,
      onFocus: w
    } = zt(e, t), {
      idForSelect: F
    } = i1(e, {
      htmlIdLocal: R
    }), {
      dataFromServer: P,
      dataExtraLocal: M,
      dataKeyByKeyIdLocal: O,
      dataLocal: q,
      hasDataExtra: U
    } = Zu(e), {
      loadDataFromServer: G,
      loadDataFromServerForSearchAPI: te,
      loadingDataFromServer: ne,
      loadingSearchApi: oe,
      updateUrlPropsComputed: se,
      urlPropsComputed: ie
    } = zu(e, {
      changeModel: L,
      dataExtraLocal: M,
      dataFromServer: P
    }), {
      loadingLocal: me
    } = Ju(e, {
      loadingDataFromServer: ne
    });
    Xu(t, {
      dataKeyByKeyIdLocal: O,
      dataLocal: q
    });
    const {
      changeModelFromSelect: Ve,
      deleteItem: Le,
      modelValueFiltered: _e,
      onDownItem: ve,
      onUpItem: be
    } = o1(e, {
      changeModel: L,
      dataKeyByKeyIdLocal: O
    }), {
      dataSort: je
    } = Yu(e, {
      data: q
    }), {
      dataExtraLocalFiltered: Re,
      dataSortFiltered: Z
    } = l1(e, {
      dataExtraLocal: M,
      dataSort: je,
      modelValueFiltered: _e
    }), {
      deselectAll: H,
      disabledDeselectAll: X,
      disabledSelectAll: ae,
      selectAll: ye
    } = s1(e, {
      changeModel: L,
      dataExtraLocalFiltered: Re,
      dataSortFiltered: Z,
      modelValueFiltered: _e
    });
    return rt(ie, se), Je(fS, !0), G(), te(), {
      ariaDescribedbyLocal: S,
      attributesToExcludeFromRender: n,
      changeModelFromSelect: Ve,
      clearModel: b,
      componentStyleHide: r,
      dataExtraLocalFiltered: Re,
      dataKeyByKeyIdLocal: O,
      dataLocal: q,
      dataSortFiltered: Z,
      deleteItem: Le,
      deselectAll: H,
      disabledDeselectAll: X,
      disabledSelectAll: ae,
      errorsId: I,
      hasDataExtra: U,
      helpTextId: v,
      htmlIdLocal: R,
      idForSelect: F,
      isErrors: g,
      loadingLocal: me,
      loadingSearchApi: oe,
      modelValueFiltered: _e,
      onBlur: D,
      onDownItem: ve,
      onFocus: w,
      onUpItem: be,
      selectAll: ye,
      textAfterLabel: s,
      textBtnDeleteTitle: i,
      textBtnDownTitle: o,
      textBtnGroupAriaLabel: u,
      textBtnUpTitle: f,
      textDeselectAll: A,
      textGroupAllAriaLabel: E,
      textModelEmpty: p,
      textSelectAll: T
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Sn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: void 0,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "multiselectOrdered"
    }, this.modelValueFiltered.length ? () => [
      c("ul", {}, [
        this.modelValueFiltered.map((e) => c(_i, {
          key: e,
          alwaysTranslate: this.alwaysTranslate,
          data: this.dataKeyByKeyIdLocal[e] || {},
          slotName: this.slotName,
          tag: "li"
        }, this.$slots))
      ])
    ] : "") : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__parent"
      }, [
        c("fieldset", {
          id: this.htmlIdLocal,
          tabindex: -1,
          class: ["a_fieldset", this.classFieldset, {
            a_fieldset_invalid: this.isErrors,
            a_fieldset_no_border: !this.hasBorder
          }],
          "aria-describedby": this.ariaDescribedbyLocal,
          ...this.attributesFieldset
        }, [
          this.label || this.labelScreenReader ? c(Ae, {
            type: "text",
            alwaysTranslate: this.alwaysTranslate,
            tag: "legend",
            class: [
              "a_legend",
              {
                a_legend_invalid: this.isErrors
              },
              this.labelClass
            ],
            extra: this.extra,
            html: this.label,
            textScreenReader: this.labelScreenReader,
            textAfter: this.textAfterLabel
          }) : "",
          c("div", {
            class: [
              "a_fieldset__content"
            ]
          }, [
            this.modelValueFiltered.length ? c("ul", {
              class: "a_list_group a_m_select_ordered__ul"
            }, this.modelValueFiltered.map((e, t) => c(n1, {
              id: this.htmlIdLocal,
              key: e,
              alwaysTranslate: this.alwaysTranslate,
              btnDeleteClass: this.btnDeleteClass,
              btnDeleteIcon: this.btnDeleteIcon,
              btnDeleteTitle: this.textBtnDeleteTitle,
              btnDownClass: this.btnDownClass,
              btnDownIcon: this.btnDownIcon,
              btnDownTitle: this.textBtnDownTitle,
              btnGroupAriaLabel: this.textBtnGroupAriaLabel,
              btnGroupClass: this.btnGroupClass,
              btnUpClass: this.btnUpClass,
              btnUpIcon: this.btnUpIcon,
              btnUpTitle: this.textBtnUpTitle,
              listItemClass: this.listItemClass,
              data: this.dataKeyByKeyIdLocal[e] || {},
              disabled: this.disabled,
              index: t,
              isLastItem: t === this.modelValueFiltered.length - 1,
              modelValue: e,
              slotName: this.slotName,
              onDeleteItem: this.deleteItem,
              onUpItem: this.onUpItem,
              onDownItem: this.onDownItem
            }, this.$slots))) : "",
            this.isDeselectAll || this.isSelectAll || !this.modelValueFiltered.length ? c("div", {
              class: "a_m_select_ordered__panel"
            }, [
              this.modelValueFiltered.length ? "" : c(Ee, {
                class: "a_m_select_ordered__empty",
                tag: "div",
                html: this.textModelEmpty
              }),
              c(Ee, {
                ariaLabel: this.textGroupAllAriaLabel,
                role: "group",
                class: "a_btn_group",
                tag: "div"
              }, () => [
                this.isSelectAll ? c(Ae, {
                  ariaDisabled: this.disabledSelectAll,
                  type: "button",
                  text: this.textSelectAll,
                  onClick: this.selectAll,
                  ...this.attributesBtnSelectAll,
                  class: [
                    this.attributesBtnDeselectAll.class || "a_btn a_btn_outline_secondary",
                    {
                      disabled: this.disabledSelectAll
                    }
                  ]
                }) : "",
                this.isDeselectAll ? c(Ae, {
                  ariaDisabled: this.disabledDeselectAll,
                  type: "button",
                  text: this.textDeselectAll,
                  onClick: this.deselectAll,
                  ...this.attributesBtnDeselectAll,
                  class: [
                    this.attributesBtnDeselectAll.class || "a_btn a_btn_outline_secondary",
                    {
                      disabled: this.disabledDeselectAll
                    }
                  ]
                }) : ""
              ])
            ]) : "",
            c(qs, {
              alwaysTranslate: this.alwaysTranslate,
              buttonClass: this.selectButtonClass,
              buttonClassDefault: this.selectButtonClassDefault,
              caretIcon: this.selectCaretIcon,
              change: this.changeModelFromSelect,
              data: this.dataSortFiltered,
              dataExtra: this.dataExtraLocalFiltered,
              disabled: this.disabled,
              extra: this.extra,
              hasCaret: this.selectHasCaret,
              id: this.idForSelect,
              inBody: this.selectInBody,
              isCloseByClick: this.selectIsCloseByClick,
              isDataSimpleArray: this.isDataSimpleArray,
              isLabelFloat: this.selectIsLabelFloat,
              isSelectionCloseable: this.selectIsSelectionCloseable,
              keyDisabled: this.keyDisabled,
              keyDisabledCallback: this.keyDisabledCallback,
              keyGroup: this.keyGroup,
              keyGroupLabelCallback: this.keyGroupLabelCallback,
              keyId: this.keyId,
              keyLabel: this.keyLabel,
              keyLabelCallback: this.keyLabelCallback,
              label: this.selectLabel,
              labelClass: this.selectLabelClass,
              labelScreenReader: this.selectLabelScreenReader,
              loading: this.loading,
              menuWidthType: this.selectMenuWidthType,
              options: this.options,
              placeholder: this.selectPlaceholder,
              placement: this.selectPlacement,
              popperContainerId: this.selectPopperContainerId,
              search: this.search,
              searchInGroup: this.searchInGroup,
              searchTimeout: this.searchTimeout,
              searchTextInHtml: this.searchTextInHtml,
              selectMenuClass: this.selectMenuClass,
              slotName: this.slotName,
              type: "multiselect"
            }, this.$slots)
          ])
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function d1(e) {
  const t = d(e, "label");
  return {
    hasLabel: _(() => !le(t.value))
  };
}
function c1(e) {
  const t = d(e, "modelValue"), n = d(e, "trueValue"), r = d(e, "falseValue");
  return {
    modelValueReadonly: _(() => t.value === n.value ? "_YES_" : t.value === r.value ? "_NO_" : t.value)
  };
}
function f1(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "modelValue"), r = d(e, "trueValue"), s = d(e, "falseValue"), i = d(e, "disabled"), o = _(() => n.value === r.value), u = (A) => {
    i.value || (setTimeout(() => {
      const E = o.value ? s.value : r.value;
      t({
        model: E,
        $event: A
      });
    }), A.stopPropagation(), A.preventDefault());
  };
  return {
    isChecked: o,
    onClick: u,
    onKeydown: (A) => {
      (A.keyCode === J.enter || A.keyCode === J.space) && u(A);
    }
  };
}
const xu = {
  name: "AOneCheckbox",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    falseValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_one_checkbox_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelTitle: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    trueValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !0
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = kl(e), {
      attributesToExcludeFromRender: r
    } = Nt(e), {
      componentStyleHide: s
    } = Xt(e), {
      ariaDescribedbyLocal: i,
      changeModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = zt(e, t), {
      isChecked: S,
      onClick: L,
      onKeydown: b
    } = f1(e, {
      changeModel: o
    }), {
      hasLabel: I
    } = d1(e), {
      modelValueReadonly: v
    } = c1(e);
    return {
      ariaDescribedbyLocal: i,
      attributesToExcludeFromRender: r,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: u,
      hasLabel: I,
      helpTextId: f,
      htmlIdLocal: A,
      isChecked: S,
      isErrors: E,
      modelValueReadonly: v,
      onBlur: p,
      onClick: L,
      onFocus: T,
      onKeydown: b
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Sn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.modelValueReadonly,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "oneCheckbox"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent"]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            class: ["a_custom_control a_custom_checkbox", {
              a_custom_control_invalid: this.isErrors
            }]
          }, [
            c("input", {
              id: this.htmlIdLocal,
              value: this.modelValue,
              type: "checkbox",
              checked: this.isChecked,
              class: "a_custom_control_input",
              disabled: this.disabledAttribut,
              ariaRequired: this.required,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              indeterminate: this.indeterminate,
              ...this.inputAttributes,
              onClick: this.onClick,
              onKeydown: this.onKeydown,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }),
            c(Ae, {
              alwaysTranslate: this.alwaysTranslate,
              class: [
                "a_custom_control_label",
                {
                  a_custom_control_label_width_auto: this.isWidthAuto
                }
              ],
              extra: this.extra,
              for: this.htmlIdLocal,
              tag: "label",
              title: this.isLabelTitle ? this.label : void 0,
              type: "text",
              ...this.labelAttributes
            }, () => {
              var e;
              return [
                (e = this.$slots) != null && e[this.slotName] ? this.$slots[this.slotName]({
                  id: this.htmlIdLocal,
                  labelClass: [
                    "a_custom_control_label__text",
                    this.labelClass
                  ],
                  label: this.label,
                  labelScreenReader: this.labelScreenReader,
                  props: this.$props,
                  required: this.required
                }) : this.hasLabel && c("span", {
                  class: [
                    "a_custom_control_label__text",
                    this.labelClass
                  ]
                }, [
                  c(Ae, {
                    alwaysTranslate: this.alwaysTranslate,
                    extra: this.extra,
                    html: this.label,
                    textScreenReader: this.labelScreenReader,
                    tag: "span",
                    title: this.isLabelTitle ? this.label : void 0,
                    type: "text"
                  }),
                  this.required ? c("span", null, "*") : ""
                ])
              ];
            })
          ])
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function h1(e, {
  changeModel: t = () => {
  },
  dataKeyByKeyIdLocal: n = _(() => ({}))
}) {
  const r = d(e, "disabled"), s = d(e, "isModelArray"), i = d(e, "modelValue");
  return {
    onChangeModelValue: ({ model: u, $event: f }) => {
      r.value || (s.value ? !i.value || i.value.length === 0 ? setTimeout(() => {
        t({
          model: [u],
          $event: f
        });
      }) : setTimeout(() => {
        const A = [];
        z(i.value, (E) => {
          n.value[E] || A.push(E);
        }), A.push(u), t({
          model: A,
          $event: f
        });
      }) : setTimeout(() => {
        t({
          model: u,
          $event: f
        });
      }));
    }
  };
}
function A1(e, {
  dataKeyByKeyIdLocal: t = _(() => ({}))
}) {
  const n = d(e, "isModelArray"), r = d(e, "modelValue");
  return {
    modelValueItemReadonly: _(() => {
      var i;
      if (n.value) {
        let o;
        return (i = r.value) != null && i.length && ul.forEach(r.value, (u) => {
          if (u in t.value)
            return o = t.value[u], !1;
        }), o;
      }
      return t.value[r.value];
    })
  };
}
const hS = {
  name: "ARadio",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    attributesFieldset: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classButtonGroupDefault: {
      type: [String, Object, Array],
      required: !1,
      default: "a_btn a_btn_outline_primary"
    },
    classDataParent: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => []
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_radio_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inline: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isButtonGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isModelArray: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isWidthAuto: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: void 0
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "value"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    search: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: void 0
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0
    },
    slotAppendName: {
      type: String,
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrder: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_",
        notElementsWithSearch: "_A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_",
        search: "_A_RADIO_SEARCH_"
      })
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "focusin",
    "focusout",
    "onSearchOutside",
    "toggleCollapse",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      componentStyleHide: r
    } = Xt(e), {
      ariaDescribedbyLocal: s,
      changeModel: i,
      errorsId: o,
      helpTextId: u,
      htmlIdLocal: f,
      isErrors: A,
      onFocusin: E,
      onFocusout: p,
      rootRef: T
    } = zt(e, t), {
      textAfterLabel: S
    } = Qu(e), {
      dataFromServer: L,
      dataExtraLocal: b,
      dataKeyByKeyIdLocal: I,
      dataLocal: v,
      hasDataExtra: R
    } = Zu(e), {
      loadDataFromServer: g,
      loadDataFromServerForSearchAPI: D,
      loadingDataFromServer: w,
      loadingSearchApi: F,
      onSearchInApi: P,
      searchApiLocal: M,
      updateUrlPropsComputed: O,
      urlPropsComputed: q
    } = zu(e, {
      changeModel: i,
      dataExtraLocal: b,
      dataFromServer: L
    }), {
      loadingLocal: U
    } = Ju(e, {
      loadingDataFromServer: w
    });
    Xu(t, {
      dataKeyByKeyIdLocal: I,
      dataLocal: v
    });
    const {
      dataSort: G
    } = Yu(e, {
      data: v
    }), {
      dataGrouped: te,
      groupsForLever: ne,
      hasKeyGroup: oe,
      keyGroupArray: se
    } = Tf(e, {
      data: G
    }), {
      hasNotElementsExtraWithSearch: ie,
      hasNotElementsWithSearch: me,
      idForButtonSearchOutside: Ve,
      modelSearch: Le,
      modelSearchLowerCase: _e,
      modelSearchOutside: ve,
      onSearchOutside: be,
      searching: je,
      searchingElements: Re,
      searchingElementsExtra: Z,
      searchingGroups: H,
      searchingGroupsWithSearchInGroup: X,
      searchOutsideOrApi: ae,
      searchOutsideRef: ye,
      updateModelSearch: Ce,
      updateModelSearchOutside: qe
    } = mf(e, t, {
      data: G,
      dataExtra: b,
      groupsForLever: ne,
      htmlIdLocal: f,
      hasKeyGroup: oe,
      keyGroupArray: se,
      searchApiLocal: M,
      onSearchInApi: P
    }), {
      onChangeModelValue: Qe
    } = h1(e, {
      changeModel: i,
      dataKeyByKeyIdLocal: I
    }), {
      iconCollapse: $e,
      initIsCollapsedLocal: Fe,
      isCollapsedLocal: it,
      titleCollapse: Ke,
      toggleCollapse: lt
    } = Sf(e, t), {
      groupId: et
    } = Qc(e, {
      htmlIdLocal: f
    }), {
      modelValueItemReadonly: ht
    } = A1(e, {
      dataKeyByKeyIdLocal: I
    });
    return rt(q, O), Fe(), g(), D(), {
      ariaDescribedbyLocal: s,
      attributesToExcludeFromRender: n,
      componentStyleHide: r,
      dataExtraLocal: b,
      dataGrouped: te,
      dataSort: G,
      errorsId: o,
      groupId: et,
      groupsForLever: ne,
      hasDataExtra: R,
      hasKeyGroup: oe,
      hasNotElementsExtraWithSearch: ie,
      hasNotElementsWithSearch: me,
      helpTextId: u,
      htmlIdLocal: f,
      iconCollapse: $e,
      idForButtonSearchOutside: Ve,
      isCollapsedLocal: it,
      isErrors: A,
      loadingLocal: U,
      loadingSearchApi: F,
      modelSearch: Le,
      modelSearchLowerCase: _e,
      modelSearchOutside: ve,
      modelValueItemReadonly: ht,
      onChangeModelValue: Qe,
      onFocusin: E,
      onFocusout: p,
      onSearchOutside: be,
      rootRef: T,
      searching: je,
      searchingElements: Re,
      searchingElementsExtra: Z,
      searchingGroups: H,
      searchingGroupsWithSearchInGroup: X,
      searchOutsideOrApi: ae,
      searchOutsideRef: ye,
      textAfterLabel: S,
      titleCollapse: Ke,
      toggleCollapse: lt,
      updateModelSearch: Ce,
      updateModelSearchOutside: qe
    };
  },
  render() {
    var e, t, n;
    return this.isRender ? this.readonly ? c(Sn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: void 0,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "radio"
    }, this.modelValueItemReadonly ? () => [
      c(Wo, {
        id: this.htmlIdLocal,
        alwaysTranslate: this.alwaysTranslate,
        dataItem: this.modelValueItemReadonly,
        itemIndex: -1,
        modelValue: this.modelValue,
        readonly: !0,
        slotAppendName: this.slotAppendName,
        slotName: this.slotName
      }, this.$slots)
    ] : void 0) : c("div", {
      ref: "rootRef",
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      onFocusin: this.onFocusin,
      onFocusout: this.onFocusout,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: [
          "a_form_element__parent",
          {
            a_radio_inline: this.inline
          }
        ]
      }, [
        c("div", {
          class: "a_form_element"
        }, [
          c("fieldset", {
            id: this.htmlIdLocal,
            tabindex: -1,
            class: [
              "a_fieldset",
              this.classFieldset,
              {
                a_fieldset_no_border: !this.hasBorder,
                a_fieldset_invalid: this.isErrors,
                a_fieldset_collapsed: this.isCollapsedLocal
              }
            ],
            "aria-describedby": this.ariaDescribedbyLocal,
            ...this.attributesFieldset
          }, [
            this.label || this.labelScreenReader ? c(Ae, {
              type: "text",
              alwaysTranslate: this.alwaysTranslate,
              tag: "legend",
              class: [
                "a_legend",
                {
                  a_legend_invalid: this.isErrors
                },
                this.labelClass
              ],
              extra: this.extra,
              html: this.label,
              textScreenReader: this.labelScreenReader,
              textAfter: this.textAfterLabel
            }) : "",
            this.collapsible ? c(Ae, {
              "aria-controls": this.groupId,
              "aria-expanded": !this.isCollapsedLocal,
              alwaysTranslate: this.alwaysTranslate,
              class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
              iconLeft: this.iconCollapse,
              title: this.titleCollapse,
              textScreenReader: this.titleCollapse,
              type: "button",
              onClick: this.toggleCollapse
            }) : "",
            c("div", {
              id: this.groupId,
              class: "a_fieldset__content"
            }, [
              this.searchOutsideOrApi ? c("div", {
                class: "a_fieldset__search"
              }, [
                c("form", {
                  onSubmit: this.onSearchOutside
                }, [
                  c("div", {
                    class: "input-group"
                  }, [
                    c(yn, {
                      alwaysTranslate: this.alwaysTranslate,
                      label: ((e = this.texts) == null ? void 0 : e.search) || "_A_RADIO_SEARCH_",
                      inputClass: "a_select__element_clickable",
                      modelValue: this.modelSearchOutside,
                      modelUndefined: "",
                      "onUpdate:modelValue": this.updateModelSearchOutside
                    }),
                    c(Ae, {
                      alwaysTranslate: this.alwaysTranslate,
                      ariaDisabled: this.loadingSearchApi,
                      class: "a_btn a_btn_primary",
                      disabled: this.disabled,
                      iconLeft: xl,
                      type: "submit"
                    })
                  ])
                ])
              ]) : "",
              this.search ? c(yn, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_fieldset__search",
                label: ((t = this.texts) == null ? void 0 : t.search) || "_A_RADIO_SEARCH_",
                modelValue: this.modelSearch,
                modelUndefined: "",
                "onUpdate:modelValue": this.updateModelSearch
              }) : "",
              this.loadingLocal ? c(Ll) : "",
              this.hasDataExtra ? c("div", {
                class: "a_radio__data_extra"
              }, [
                ...this.dataExtraLocal.map((r, s) => c(Wo, {
                  key: r[Ge],
                  id: this.htmlIdLocal,
                  alwaysTranslate: this.alwaysTranslate,
                  idSuffix: "extra",
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataItem: r,
                  disabled: this.disabled,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  itemIndex: s,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElementsExtra,
                  searchTextInHtml: this.searchTextInHtml,
                  slotName: this.slotName,
                  slotAppendName: this.slotAppendName,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.hasNotElementsExtraWithSearch ? "" : c("div", {
                  class: "a_divider",
                  ariaHidden: !0
                })
              ]) : "",
              c("div", {}, this.hasKeyGroup ? [
                c(tf, {
                  id: `${this.htmlIdLocal}_lev_0`,
                  alwaysTranslate: this.alwaysTranslate,
                  classButtonGroupDefault: this.classButtonGroupDefault,
                  dataGrouped: this.dataGrouped,
                  disabled: this.disabled,
                  groupsForLever: this.groupsForLever,
                  isButtonGroup: this.isButtonGroup,
                  isErrors: this.isErrors,
                  isWidthAuto: this.isWidthAuto,
                  keyDisabled: this.keyDisabled,
                  keyTitle: this.keyTitle,
                  keyTitleCallback: this.keyTitleCallback,
                  levelIndex: 0,
                  modelSearch: this.modelSearchLowerCase,
                  modelValue: this.modelValue,
                  searching: this.searching,
                  searchingElements: this.searchingElements,
                  searchingGroups: this.searchingGroups,
                  searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                  searchTextInHtml: this.searchTextInHtml,
                  slotAppendName: this.slotAppendName,
                  slotName: this.slotName,
                  type: "radio",
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)
              ] : [
                c("div", {
                  class: [
                    "a_radio_data",
                    {
                      a_btn_group: this.isButtonGroup
                    },
                    this.classDataParent
                  ]
                }, [
                  ...this.dataSort.map((r, s) => c(Wo, {
                    key: r[Ge],
                    id: this.htmlIdLocal,
                    alwaysTranslate: this.alwaysTranslate,
                    classButtonGroupDefault: this.classButtonGroupDefault,
                    dataItem: r,
                    disabled: this.disabled,
                    isButtonGroup: this.isButtonGroup,
                    isErrors: this.isErrors,
                    isWidthAuto: this.isWidthAuto,
                    itemIndex: s,
                    keyDisabled: this.keyDisabled,
                    keyTitle: this.keyTitle,
                    keyTitleCallback: this.keyTitleCallback,
                    modelSearch: this.modelSearchLowerCase,
                    modelValue: this.modelValue,
                    searching: this.searching,
                    searchingElements: this.searchingElements,
                    searchTextInHtml: this.searchTextInHtml,
                    slotName: this.slotName,
                    slotAppendName: this.slotAppendName,
                    onChangeModelValue: this.onChangeModelValue
                  }, this.$slots))
                ])
              ]),
              !this.dataSort.length || this.hasNotElementsWithSearch ? c(Ee, {
                alwaysTranslate: this.alwaysTranslate,
                class: "a_form__not_elements",
                text: ((n = this.texts) == null ? void 0 : n.notElementsWithSearch) || "_A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_"
              }) : ""
            ])
          ])
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
};
function E1(e, {
  changeQueryModel: t = () => {
  },
  changeRouteModel: n = () => {
  },
  changeTargetModel: r = () => {
  },
  childrenForParam: s = _(() => []),
  hasParam: i = _(() => !1),
  htmlIdLocal: o = _(() => ""),
  routesLocal: u = _(() => [])
}) {
  const f = d(e, "helpTextParam"), A = d(e, "helpTextQuery"), E = d(e, "helpTextRoute"), p = d(e, "helpTextTarget"), T = d(e, "keyIdRoute"), S = d(e, "keyLabelCallbackRoute"), L = d(e, "keyLabelRoute"), b = d(e, "labelParam"), I = d(e, "labelQuery"), v = d(e, "labelRoute"), R = d(e, "labelTarget"), g = d(e, "modelValue"), D = d(e, "readonlyDefaultParam"), w = d(e, "readonlyDefaultQuery"), F = d(e, "readonlyDefaultRoute"), P = d(e, "readonlyDefaultTarget"), M = d(e, "required"), O = d(e, "sortOrderRoute"), q = d(e, "targets");
  return {
    dataFormChildren: _(() => {
      var G, te;
      return [
        {
          id: "route",
          change: n,
          data: u.value,
          deselectable: !0,
          helpText: E.value,
          idPrefix: o.value,
          isLabelFloat: !1,
          keyId: T.value,
          keyLabel: L.value,
          keyLabelCallback: S.value,
          label: v.value,
          readonlyDefault: F.value,
          required: M.value,
          search: !0,
          sortOrder: O.value,
          type: "select"
        },
        {
          id: "param",
          children: s.value,
          helpText: f.value,
          idPrefix: o.value,
          isRender: i.value,
          label: b.value,
          readonlyDefault: D.value,
          required: M.value,
          type: "fieldset"
        },
        {
          isHide: !((G = g.value) != null && G.route),
          id: "query",
          change: t,
          heightCss: "100px",
          helpText: A.value,
          idPrefix: o.value,
          label: I.value,
          readonlyDefault: w.value,
          type: "json"
        },
        {
          isHide: !((te = g.value) != null && te.route),
          id: "target",
          change: r,
          data: q.value,
          deselectable: !0,
          helpText: p.value,
          idPrefix: o.value,
          isLabelFloat: !1,
          keyId: "id",
          keyLabel: "label",
          label: R.value,
          readonlyDefault: P.value,
          translateData: !0,
          type: "select"
        }
      ];
    })
  };
}
function p1(e, {
  changeModel: t = () => {
  }
}) {
  const n = d(e, "modelValue");
  return {
    changeParamModel: ({ model: u, id: f }) => {
      const A = he(n.value) || {};
      A.param = A.param || {}, A.param[f] = u, t({ model: A });
    },
    changeQueryModel: ({ model: u }) => {
      const f = he(n.value) || {};
      f.query = u, t({ model: f });
    },
    changeRouteModel: ({ model: u }) => {
      var f;
      t(u ? {
        model: {
          route: u,
          query: (f = n.value) == null ? void 0 : f.query
        }
      } : {
        model: {}
      });
    },
    changeTargetModel: ({ model: u }) => {
      const f = he(n.value) || {};
      f.target = u, t({ model: f });
    }
  };
}
function T1(e, {
  changeParamModel: t = () => {
  },
  htmlIdLocal: n = _(() => ""),
  routePathKeyByKeyId: r = _(() => ({}))
}) {
  const s = d(e, "modelValue"), i = d(e, "required"), o = (E) => {
    const p = /:([a-zA-Z0-9_]+)/g, T = [];
    let S;
    for (; (S = p.exec(E)) !== null; )
      T.push(S[1]);
    return T;
  }, u = _(() => {
    var E;
    return (E = s.value) != null && E.route ? o(r.value[s.value.route]) : [];
  }), f = _(() => u.value.length > 0);
  return {
    childrenForParam: _(() => {
      const E = [];
      return z(u.value, (p) => {
        const T = {
          id: `param.${p}`,
          change: ({ model: S }) => t({ model: S, id: p }),
          label: p,
          type: "text",
          idPrefix: n.value,
          required: i.value
        };
        E.push(T);
      }), E;
    }),
    hasParam: f
  };
}
function S1(e) {
  const t = d(e, "keyIdRoute"), n = d(e, "routes"), r = _(() => n.value);
  return {
    routePathKeyByKeyId: _(() => {
      const i = {};
      return z(r.value, (o) => {
        const u = ce(o, t.value);
        i[u] = o.path;
      }), i;
    }),
    routesLocal: r
  };
}
const m1 = {
  name: "ARouterLinkConfig",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    attributesFieldset: {
      type: Object,
      required: !1,
      default: () => Et.propsDefault.attributesFieldset
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    classColumn: {
      type: [String, Object],
      required: !1,
      default: () => Et.propsDefault.classColumn
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: () => Et.propsDefault.classColumns
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: () => Et.propsDefault.classFieldset
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => Et.propsDefault.excludeRenderAttributes
    },
    extra: {
      type: Object,
      required: !1,
      default: () => Et.propsDefault.extra
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: () => Et.propsDefault.hasBorder
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    helpTextParam: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.helpTextParam
    },
    helpTextQuery: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.helpTextQuery
    },
    helpTextRoute: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.helpTextRoute
    },
    helpTextTarget: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.helpTextTarget
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_router_link_config_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyIdRoute: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.keyIdRoute
    },
    keyLabelCallbackRoute: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyLabelRoute: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.keyLabelRoute
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: () => Et.propsDefault.labelClass
    },
    labelParam: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.labelParam
    },
    labelQuery: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.labelQuery
    },
    labelRoute: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.labelRoute
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelTarget: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.labelTarget
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.readonlyDefault
    },
    readonlyDefaultParam: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.readonlyDefaultParam
    },
    readonlyDefaultQuery: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.readonlyDefaultQuery
    },
    readonlyDefaultRoute: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.readonlyDefaultRoute
    },
    readonlyDefaultTarget: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.readonlyDefaultTarget
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    routes: {
      type: Array,
      required: !1,
      default: () => Et.propsDefault.routes
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    sortOrderRoute: {
      type: String,
      required: !1,
      default: () => Et.propsDefault.sortOrderRoute,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    targets: {
      type: Array,
      required: !1,
      default: () => Et.propsDefault.targets
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      changeModel: n,
      htmlIdLocal: r
    } = zt(e, t), {
      changeParamModel: s,
      changeQueryModel: i,
      changeRouteModel: o,
      changeTargetModel: u
    } = p1(e, {
      changeModel: n
    }), {
      routePathKeyByKeyId: f,
      routesLocal: A
    } = S1(e), {
      childrenForParam: E,
      hasParam: p
    } = T1(e, {
      changeParamModel: s,
      htmlIdLocal: r,
      routePathKeyByKeyId: f
    }), {
      dataFormChildren: T
    } = E1(e, {
      changeQueryModel: i,
      changeRouteModel: o,
      changeTargetModel: u,
      childrenForParam: E,
      hasParam: p,
      htmlIdLocal: r,
      routesLocal: A
    });
    return {
      dataFormChildren: T,
      hasParam: p,
      htmlIdLocal: r
    };
  },
  render() {
    return c(pS, {
      ...this.$attrs,
      alwaysTranslate: this.alwaysTranslate,
      attributesFieldset: this.attributesFieldset,
      classColumn: this.classColumn,
      classColumns: this.classColumns,
      classFieldset: this.classFieldset,
      disabled: this.disabled,
      errors: this.errors,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      hasBorder: this.hasBorder,
      helpText: this.helpText,
      htmlId: this.htmlId,
      id: this.id,
      idPrefix: this.idPrefix,
      inputAttributes: this.inputAttributes,
      isHide: this.isHide,
      isRender: this.isRender,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelUndefined: this.modelUndefined,
      modelValue: this.modelValue,
      readonly: this.readonly,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      slotName: this.slotName,
      children: this.dataFormChildren,
      "onUpdate:modelValue": this.$emit["update:modelValue"]
    });
  }
}, Ea = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-lg" viewBox="0 0 16 16">
  <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z"/>
</svg>`, jE = {
  name: "ASelectValueCloseable",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    data: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hideDeleteButton: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "changeModelValue"
  ],
  setup(e, { emit: t }) {
    const n = d(e, "data"), r = _(() => n.value[vt]), s = _(() => n.value[Ge]);
    return {
      closeModel: (o) => {
        t("changeModelValue", {
          currentValue: s.value,
          $event: o,
          isSelected: !0
        }), o.stopPropagation(), o.preventDefault();
      },
      currentLabel: r
    };
  },
  render() {
    return c("li", {
      class: "a_select__ul_closeable__item"
    }, [
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        item: this.data,
        label: this.currentLabel,
        inDropdown: !1
      }) : c(Ee, {
        alwaysTranslate: this.alwaysTranslate,
        tag: "span",
        html: this.currentLabel,
        extra: this.data.extra
      }),
      !this.hideDeleteButton && c(Ae, {
        class: "a_btn a_btn_link a_select__ul_closeable__item__btn",
        type: "button",
        tabindex: -1,
        iconLeft: Ea,
        disabled: this.disabled,
        onClick: this.closeModel
      })
    ]);
  }
};
function L1(e, {
  htmlIdLocal: t = _(() => "")
}) {
  const n = d(e, "disabled"), r = _(() => `${t.value}_container`), s = _(() => `${t.value}_list`), i = _(() => `${t.value}_label`), o = _(() => n.value ? void 0 : 0);
  return {
    ariaLabelledby: i,
    containerId: r,
    idForList: s,
    tabindex: o
  };
}
function b1(e) {
  const t = d(e, "disabled"), n = d(e, "exclusiveOptionValue"), r = d(e, "isExclusiveOptionEnabled"), s = d(e, "modelValue"), i = _(() => r.value ? s.value && s.value.indexOf(n.value) !== -1 : !1), o = _(() => i.value || t.value), u = _(() => o.value || void 0);
  return {
    disabledAttribut: _(() => t.value || void 0),
    disabledLocal: o,
    disabledLocalAttribut: u,
    isExclusiveOptionSelected: i
  };
}
function I1(e, {
  isMultiselect: t = _(() => !1)
}) {
  const n = d(e, "isSelectAll"), r = d(e, "isDeselectAll");
  return {
    isDividerSelectDeselectVisible: _(() => t.value && (n.value || r.value))
  };
}
function v1(e) {
  const t = d(e, "exclusiveOptionLabel"), n = d(e, "exclusiveOptionValue"), r = d(e, "extra"), s = d(e, "isExclusiveOptionEnabled"), i = d(e, "searchTextInHtml"), o = _(() => {
    if (s.value) {
      const f = Pt({
        placeholder: t.value,
        extra: r.value
      }), A = {
        [Ge]: n.value,
        [vt]: f
      };
      return i.value && (A[oi] = Fc(f)), A;
    }
  }), u = _(() => Fa([o.value], Ge));
  return {
    exclusiveOption: o,
    exclusiveDataKeyByKeyIdLocal: u
  };
}
function y1(e, {
  dataKeyByKeyIdLocal: t = _(() => ({}))
}) {
  const n = d(e, "countMultiselect"), r = d(e, "exclusiveOptionValue"), s = d(e, "modelValue"), i = d(e, "type"), o = _(() => i.value === "multiselect"), u = _(() => !o.value || !s.value || !Te(s.value) ? [] : Lt(s.value, (T) => t.value[T] || T === r.value)), f = _(() => o.value ? u.value.length > 0 : !le(s.value)), A = _(() => {
    var T;
    return ((T = u.value) == null ? void 0 : T.length) || 0;
  }), E = _(() => A.value > n.value), p = _(() => ({
    [vt]: "_A_SELECT_MORE_SELECTED_{{count}}_",
    extra: {
      count: A.value - n.value
    }
  }));
  return {
    isModelLengthLimitExceeded: E,
    isModelValue: f,
    isMultiselect: o,
    limitExceededModelData: p,
    modelValueLength: A,
    modelValueMultiselectFiltered: u
  };
}
function g1(e, {
  changeModel: t = () => {
  },
  dataAll: n = _(() => []),
  dataKeyByKeyIdLocal: r = _(() => ({})),
  disabledLocal: s = _(() => !1),
  isMultiselect: i = _(() => !1),
  togglePopover: o = () => {
  }
}) {
  const u = d(e, "countMultiselect"), f = d(e, "disabled"), A = d(e, "exclusiveOptionValue"), E = d(e, "isCloseByClick"), p = d(e, "isExclusiveOptionEnabled"), T = d(e, "deselectable"), S = d(e, "maxCountMultiselect"), L = d(e, "modelValue"), b = _(() => !i.value || !S.value ? !1 : ce(L.value, "length") >= S.value), I = _(() => Be(E.value) ? !i.value : E.value), v = ({ currentValue: P, $event: M, isSelected: O }) => {
    let q;
    if (i.value)
      if (q = he(L.value) || [], O) {
        const U = q.indexOf(P);
        q.splice(U, 1), p.value && P === A.value && (q = []);
      } else if (p.value && P === A.value)
        q = [P];
      else {
        if (b.value)
          return;
        q.push(P);
      }
    else if (O)
      if (T.value)
        q = void 0;
      else
        return;
    else
      q = P;
    t({
      model: q,
      $event: M,
      currentModel: P,
      item: r.value[P]
    }), I.value && o();
  }, R = (P) => {
    const M = LT(L.value, u.value);
    t({
      model: M,
      $event: P
    });
  }, g = () => {
    if (s.value)
      return;
    const P = n.value.map((M) => M[Ge]);
    t({
      model: P
    });
  }, D = (P) => {
    const M = P.keyCode;
    (M === J.enter || M === J.space) && (g(), P.preventDefault());
  }, w = () => {
    f.value || t({
      model: []
    });
  };
  return {
    deleteExceededItems: R,
    onChangeModelValue: v,
    onDeselectAll: w,
    onKeydownDeselectAll: (P) => {
      const M = P.keyCode;
      (M === J.enter || M === J.space) && (w(), P.preventDefault());
    },
    onKeydownSelectAll: D,
    onSelectAll: g
  };
}
function R1(e, {
  dataKeyByKeyIdLocal: t = _(() => ({})),
  isModelLengthLimitExceeded: n,
  isModelValue: r = _(() => !1),
  isMultiselect: s,
  modelValueLength: i,
  modelValueMultiselectFiltered: o = _(() => [])
}) {
  const u = d(e, "isSelectionCloseable"), f = d(e, "keyTitle"), A = d(e, "keyTitleCallback"), E = d(e, "modelValue"), p = ({ item: L }) => Ne(A.value) ? A.value({ item: L, inDropdown: !1 }) || "" : f.value ? ce(L, f.value) || "" : L[vt], T = _(() => {
    if (!r.value)
      return;
    let L = "";
    if (s.value)
      u.value || !n.value ? z(o.value, (b, I) => {
        const v = t.value[b] || {};
        L += `${I > 0 ? ", " : ""}${p({ item: v })}`;
      }) : L = `${i.value} ausgewählt`;
    else {
      const b = t.value[E.value] || {};
      L = p({ item: b });
    }
    return L;
  });
  return {
    hasSelectedTitle: _(() => !!T.value),
    selectedTitle: T
  };
}
function O1({
  $elements: e = _(() => []),
  clickOutsideCallback: t = () => {
  }
}) {
  const n = B("ontouchend" in document ? "touchstart" : "click"), r = (o) => {
    let u = !1;
    z(e.value, (f) => {
      if (f === o.target || f.contains(o.target))
        return u = !0, !1;
    }), u || t();
  }, s = () => {
    document.addEventListener(n.value, r);
  }, i = () => {
    document.removeEventListener(n.value, r);
  };
  return Ot(() => i()), {
    setEventClickOutside: s,
    destroyEventClickOutside: i
  };
}
const KE = ".a_select__element_clickable:not([disabled]):not([data-hide])";
function C1(e, {
  emit: t
}, {
  closePopup: n = () => {
  },
  htmlIdLocal: r = _(() => ""),
  openPopup: s = () => {
  }
}) {
  const i = d(e, "disabled"), o = d(e, "menuWidthType"), u = B(void 0), f = B(void 0), A = B(!1), E = B(void 0), p = B(void 0), T = d(e, "placement"), S = B(void 0), L = _(() => [
    u.value,
    E.value
  ]), b = _(() => {
    if (o.value === "as_button")
      return u.value.clientWidth;
  }), {
    setEventClickOutside: I,
    destroyEventClickOutside: v
  } = O1({
    $elements: L,
    clickOutsideCallback: oe
  }), R = ({ isArrowDown: se }) => {
    const ie = p.value.querySelectorAll(KE);
    if (ie.length === 0)
      return;
    let me = !1;
    z(ie, (Ve, Le) => {
      if (Ve === document.activeElement)
        return me = !0, se ? Le < ie.length - 1 && ie[Le + 1].focus() : Le > 0 && ie[Le - 1].focus(), !1;
    }), me || ie[0].focus();
  }, g = () => {
    u.value.focus();
  }, D = (se) => {
    const ie = se.keyCode, me = ie === J.arrowDown;
    me || ie === J.arrowUp ? (R({ isArrowDown: me }), se.preventDefault()) : ie === J.escape ? (oe(), g(), se.preventDefault(), se.stopPropagation()) : ie === J.tab && (oe(), g());
  }, w = () => {
    f.value && (f.value(), f.value = void 0);
  }, F = () => {
    s({
      id: r.value
    }), t("open");
  }, P = () => {
    const se = p.value.querySelector(KE);
    se && se.focus();
  }, M = () => {
    S.value || (S.value = !0, document.addEventListener("keydown", D));
  }, O = () => {
    F(), setTimeout(() => {
      P(), M();
    });
  }, q = () => {
    !f.value && u.value && p.value && (f.value = Nl(
      u.value,
      p.value,
      () => {
        !u.value || !p.value || Pl(
          u.value,
          p.value,
          {
            placement: T.value,
            middleware: [
              wl(),
              Bl({ limiter: wu() })
            ]
          }
        ).then(({ x: se, y: ie }) => {
          if (!u.value.clientWidth) {
            oe();
            return;
          }
          const me = {
            left: `${se}px`,
            top: `${ie}px`
          };
          b.value && (me.maxWidth = `${b.value}px`, me.minWidth = `${b.value}px`), Object.assign(p.value.style, me);
        });
      }
    ), O());
  }, U = () => {
    i.value || (A.value = !0, I(), q());
  }, G = () => {
    A.value ? (oe(), g()) : U();
  }, te = (se) => {
    const ie = se.keyCode;
    ie === J.enter || ie === J.space ? (G(), se.preventDefault()) : !A.value && (ie === J.arrowUp || ie === J.arrowDown) && (U(), se.preventDefault());
  }, ne = () => {
    S.value && (S.value = !1, document.removeEventListener("keydown", D));
  };
  function oe() {
    A.value = !1, w(), v(), ne(), n({
      id: r.value
    });
  }
  return Ot(() => ne()), {
    buttonRef: u,
    handleKeydown: te,
    isOpen: A,
    menuParentRef: E,
    menuRef: p,
    togglePopover: G
  };
}
const Se = {
  propsDefault: {
    buttonClass: void 0,
    caretIcon: Ua,
    countMultiselect: 4,
    dataExtra: [],
    exceededItemsDeletable: !0,
    inBody: !0,
    isCloseByClick: void 0,
    isDataSimpleArray: !1,
    deselectable: !0,
    isDeselectAll: !1,
    isSelectAll: !1,
    isSelectionCloseable: !0,
    keyDisabled: void 0,
    keyGroup: void 0,
    keyId: "value",
    keyLabel: "label",
    keyTitle: void 0,
    maxCountMultiselect: void 0,
    menuWidthType: "as_button",
    modelValue: void 0,
    placement: "bottom-end",
    popperContainerId: "a_select_container",
    readonlyDefault: "",
    search: !1,
    searchApi: !1,
    searchApiKey: void 0,
    searchOutside: !1,
    searchTextInHtml: !1,
    searchTimeout: 0,
    slotName: void 0,
    sortOrder: void 0,
    sortOrderGroup: void 0,
    textDeselectAll: "Alle abwählen",
    textSelectAll: "Alle auswählen",
    translateData: !1,
    type: "select"
  }
}, Tfe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Se.propsDefault = {
      ...Se.propsDefault,
      ...t
    };
  }
}, qs = {
  name: "ASelect",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    apiSaveId: {
      type: String,
      required: !1,
      default: void 0
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    buttonClass: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.buttonClass
    },
    buttonClassDefault: {
      type: [String, Object],
      required: !1,
      default: "a_form_control a_select_toggle"
    },
    caretIcon: {
      type: [String, Object],
      required: !1,
      default: () => Se.propsDefault.caretIcon
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    class: {
      type: [String, Object],
      required: !1
    },
    countMultiselect: {
      type: Number,
      required: !1,
      default: () => Se.propsDefault.countMultiselect
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dataExtra: {
      type: Array,
      required: !1,
      default: () => Se.propsDefault.dataExtra
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    deselectable: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.deselectable
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    exceededItemsDeletable: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.exceededItemsDeletable
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    exclusiveOptionLabel: {
      type: String,
      required: !1,
      default: "_A_SELECT_EXCLUSIVE_"
    },
    exclusiveOptionValue: {
      type: [String, Number, Boolean],
      required: !1,
      default: "_exclusive_"
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_ui_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inBody: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.inBody
    },
    isCloseByClick: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.isCloseByClick
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.isDataSimpleArray
    },
    isDeselectAll: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.isDeselectAll
    },
    isExclusiveOptionEnabled: {
      type: Boolean,
      required: !1,
      default: !1,
      validator: (e, t) => (t == null ? void 0 : t.type) !== "multiselect" ? e === !1 : !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSelectAll: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.isSelectAll
    },
    isSelectionCloseable: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.isSelectionCloseable
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.keyDisabled
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: () => Se.propsDefault.keyGroup
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.keyId
    },
    keyLabel: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.keyLabel
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.keyTitle
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    maxCountMultiselect: {
      type: Number,
      required: !1,
      default: () => Se.propsDefault.maxCountMultiselect,
      validator: (e) => e > 0
    },
    menuWidthType: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.menuWidthType,
      validator: (e) => ["as_button", "by_content"].indexOf(e) !== -1
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: () => Se.propsDefault.modelValue
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholder: {
      type: String,
      required: !1,
      default: void 0
    },
    placement: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.placement,
      validator: (e) => Gn.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.popperContainerId
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.readonlyDefault
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    search: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.search
    },
    searchApi: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.searchApi
    },
    searchApiKey: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.searchApiKey
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchOutside: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.searchOutside
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.searchTextInHtml
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: () => Se.propsDefault.searchTimeout
    },
    selectMenuClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.slotName
    },
    sortOrder: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.sortOrder,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.sortOrderGroup,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    textDeselectAll: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.textDeselectAll
    },
    textSelectAll: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.textSelectAll
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.translateData
    },
    type: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.type,
      validator: (e) => ["select", "multiselect"].indexOf(e) !== -1
    },
    url: {
      type: String,
      required: !1,
      default: void 0
    },
    urlParams: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "blur",
    "focus",
    "onSearchOutside",
    "open",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      componentStyleHide: r
    } = Xt(e), {
      ariaDescribedbyLocal: s,
      changeModel: i,
      clearModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      isErrors: E,
      onBlur: p,
      onFocus: T
    } = zt(e, t), {
      closePopup: S,
      openPopup: L
    } = af(), {
      dataAll: b,
      dataFromServer: I,
      dataExtraLocal: v,
      dataKeyByKeyIdLocal: R,
      dataLocal: g,
      hasDataExtra: D
    } = Zu(e), {
      loadDataFromServer: w,
      loadDataFromServerForSearchAPI: F,
      loadingDataFromServer: P,
      loadingSearchApi: M,
      onSearchInApi: O,
      searchApiLocal: q,
      updateUrlPropsComputed: U,
      urlPropsComputed: G
    } = zu(e, {
      changeModel: i,
      dataExtraLocal: v,
      dataFromServer: I
    }), {
      loadingLocal: te
    } = Ju(e, {
      loadingDataFromServer: P
    }), {
      addPopperContainerInBody: ne,
      popperContainerIdSelector: oe
    } = Yc(e);
    Xu(t, {
      dataKeyByKeyIdLocal: R,
      dataLocal: g
    });
    const {
      disabledAttribut: se,
      disabledLocal: ie,
      disabledLocalAttribut: me,
      isExclusiveOptionSelected: Ve
    } = b1(e), {
      exclusiveOption: Le,
      exclusiveDataKeyByKeyIdLocal: _e
    } = v1(e), {
      isModelLengthLimitExceeded: ve,
      isModelValue: be,
      isMultiselect: je,
      limitExceededModelData: Re,
      modelValueLength: Z,
      modelValueMultiselectFiltered: H
    } = y1(e, {
      dataKeyByKeyIdLocal: R
    }), {
      ariaLabelledby: X,
      containerId: ae,
      idForList: ye,
      tabindex: Ce
    } = L1(e, {
      htmlIdLocal: A
    }), {
      dataSort: qe
    } = Yu(e, {
      data: g
    }), {
      dataGrouped: Qe,
      groupsForLever: $e,
      hasKeyGroup: Fe,
      keyGroupArray: it
    } = Tf(e, {
      data: qe
    }), {
      hasNotElementsExclusiveWithSearch: Ke,
      hasNotElementsExtraWithSearch: lt,
      hasNotElementsWithSearch: et,
      idForButtonSearchOutside: ht,
      modelSearch: At,
      modelSearchLowerCase: xt,
      modelSearchOutside: tn,
      onSearchOutside: Ar,
      searching: nn,
      searchingElements: Kn,
      searchingElementsExclusive: zn,
      searchingElementsExtra: On,
      searchingGroups: Dr,
      searchingGroupsWithSearchInGroup: Er,
      searchOutsideOrApi: Nr,
      searchOutsideRef: Yn,
      updateModelSearch: Xn,
      updateModelSearchOutside: Zt
    } = mf(e, t, {
      data: qe,
      dataExtra: v,
      exclusiveOption: Le,
      groupsForLever: $e,
      hasKeyGroup: Fe,
      htmlIdLocal: A,
      keyGroupArray: it,
      onSearchInApi: O,
      searchApiLocal: q
    }), {
      buttonRef: mn,
      handleKeydown: pr,
      isOpen: Tr,
      menuParentRef: As,
      menuRef: Br,
      togglePopover: Zn
    } = C1(e, t, {
      closePopup: S,
      htmlIdLocal: A,
      openPopup: L
    }), {
      deleteExceededItems: pa,
      onChangeModelValue: Cn,
      onDeselectAll: Es,
      onKeydownDeselectAll: ps,
      onKeydownSelectAll: yt,
      onSelectAll: Jn
    } = g1(e, {
      changeModel: i,
      dataAll: b,
      dataKeyByKeyIdLocal: R,
      disabledLocal: ie,
      isMultiselect: je,
      togglePopover: Zn
    }), {
      hasSelectedTitle: Kr,
      selectedTitle: Ta
    } = R1(e, {
      dataKeyByKeyIdLocal: R,
      isModelLengthLimitExceeded: ve,
      isModelValue: be,
      isMultiselect: je,
      modelValueLength: Z,
      modelValueMultiselectFiltered: H
    }), {
      isDividerSelectDeselectVisible: zr
    } = I1(e, {
      isMultiselect: je
    }), {
      destroyEventBusClickLabel: Sa,
      initEventBusClickLabel: wr
    } = pf({
      htmlIdLocal: A,
      clickLabel: Zn
    });
    return rt(G, U), ne({ className: "a_select_container" }), wr(), w(), F(), Ot(() => {
      Sa(), S({
        id: A.value
      });
    }), {
      ariaDescribedbyLocal: s,
      ariaLabelledby: X,
      attributesToExcludeFromRender: n,
      buttonRef: mn,
      clearModel: o,
      componentStyleHide: r,
      containerId: ae,
      dataExtraLocal: v,
      dataGrouped: Qe,
      dataKeyByKeyIdLocal: R,
      dataLocal: g,
      dataSort: qe,
      deleteExceededItems: pa,
      disabledAttribut: se,
      disabledLocal: ie,
      disabledLocalAttribut: me,
      errorsId: u,
      exclusiveDataKeyByKeyIdLocal: _e,
      exclusiveOption: Le,
      groupsForLever: $e,
      handleKeydown: pr,
      hasDataExtra: D,
      hasKeyGroup: Fe,
      hasNotElementsExclusiveWithSearch: Ke,
      hasNotElementsExtraWithSearch: lt,
      hasNotElementsWithSearch: et,
      hasSelectedTitle: Kr,
      helpTextId: f,
      htmlIdLocal: A,
      idForButtonSearchOutside: ht,
      idForList: ye,
      isDividerSelectDeselectVisible: zr,
      isErrors: E,
      isExclusiveOptionSelected: Ve,
      isModelLengthLimitExceeded: ve,
      isModelValue: be,
      isMultiselect: je,
      isOpen: Tr,
      limitExceededModelData: Re,
      loadingLocal: te,
      loadingSearchApi: M,
      menuParentRef: As,
      menuRef: Br,
      modelSearch: At,
      modelSearchLowerCase: xt,
      modelSearchOutside: tn,
      modelValueLength: Z,
      modelValueMultiselectFiltered: H,
      onBlur: p,
      onChangeModelValue: Cn,
      onDeselectAll: Es,
      onFocus: T,
      onKeydownDeselectAll: ps,
      onKeydownSelectAll: yt,
      onSearchOutside: Ar,
      onSelectAll: Jn,
      popperContainerIdSelector: oe,
      searching: nn,
      searchingElements: Kn,
      searchingElementsExclusive: zn,
      searchingElementsExtra: On,
      searchingGroups: Dr,
      searchingGroupsWithSearchInGroup: Er,
      searchOutsideOrApi: Nr,
      searchOutsideRef: Yn,
      selectedTitle: Ta,
      tabindex: Ce,
      togglePopover: Zn,
      updateModelSearch: Xn,
      updateModelSearchOutside: Zt
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Sn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: void 0,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: this.type
    }, this.isModelValue ? () => [
      this.isMultiselect ? this.modelValueMultiselectFiltered.length ? c("ul", {}, [
        this.modelValueMultiselectFiltered.map((e) => c(_i, {
          key: e,
          alwaysTranslate: this.alwaysTranslate,
          data: this.dataKeyByKeyIdLocal[e] || {},
          slotName: this.slotName,
          tag: "li"
        }, this.$slots))
      ]) : "" : c(_i, {
        alwaysTranslate: this.alwaysTranslate,
        data: this.dataKeyByKeyIdLocal[this.modelValue] || {},
        slotName: this.slotName
      }, this.$slots)
    ] : "") : c("div", {
      ...this.$attrs,
      class: this.class,
      style: this.componentStyleHide,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModelValue || this.isOpen
        }]
      }, [
        this.label && c(Ut, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          loading: this.loadingLocal,
          required: this.required,
          type: this.type,
          isError: this.isErrors
        }),
        c("div", {
          class: "a_form_element"
        }, [
          c("div", {
            id: this.containerId,
            ref: "ui_select",
            class: "a_select",
            role: "application"
          }, [
            c("div", {
              ref: "buttonRef",
              id: this.htmlIdLocal,
              autocomplete: this.autocomplete,
              class: [this.buttonClassDefault, this.buttonClass, {
                disabled: this.disabled,
                a_select_toggle_closeable: this.isMultiselect && this.isSelectionCloseable && this.isModelValue,
                a_form_control_invalid: this.isErrors
              }],
              "aria-labelledby": this.ariaLabelledby,
              role: "combobox",
              tabindex: this.tabindex,
              "aria-haspopup": "listbox",
              ariaExpanded: this.isOpen,
              ariaRequired: this.required,
              ariaDisabled: this.disabledLocal,
              ariaInvalid: this.isErrors,
              "aria-describedby": this.ariaDescribedbyLocal,
              title: this.hasSelectedTitle ? this.selectedTitle : void 0,
              // TODO: title
              onClick: this.togglePopover,
              onKeydown: this.handleKeydown,
              onFocus: this.onFocus,
              onBlur: this.onBlur
            }, [
              this.$slots.fixedPlaceholder ? this.$slots.fixedPlaceholder({
                dataKeyByKeyId: this.dataKeyByKeyIdLocal,
                modelValue: this.modelValue
              }) : this.isModelValue ? this.isMultiselect ? this.isSelectionCloseable ? c("ul", {
                class: "a_select__ul_closeable"
              }, [
                LT(this.modelValueMultiselectFiltered, this.countMultiselect).map((e, t) => c(jE, {
                  key: t,
                  alwaysTranslate: this.alwaysTranslate,
                  data: this.dataKeyByKeyIdLocal[e] || this.exclusiveDataKeyByKeyIdLocal[e] || {},
                  slotName: this.slotName,
                  disabled: this.disabled,
                  onChangeModelValue: this.onChangeModelValue
                }, this.$slots)),
                this.isModelLengthLimitExceeded && c(jE, {
                  key: this.countMultiselect,
                  alwaysTranslate: this.alwaysTranslate,
                  data: this.limitExceededModelData,
                  disabled: this.disabledLocal,
                  hideDeleteButton: !this.exceededItemsDeletable,
                  onChangeModelValue: this.deleteExceededItems
                })
              ]) : c("span", {
                class: "a_select__value__label"
              }, [
                this.isModelLengthLimitExceeded ? c(Ee, {
                  alwaysTranslate: this.alwaysTranslate,
                  text: "_A_SELECT_SELECTED_{{count}}_",
                  extra: {
                    count: this.modelValueLength
                  }
                }) : this.modelValueMultiselectFiltered.map((e, t) => c("span", {
                  key: t
                }, [
                  c("span", null, t !== 0 ? ", " : ""),
                  c(_i, {
                    alwaysTranslate: this.alwaysTranslate,
                    data: this.dataKeyByKeyIdLocal[e] || {},
                    slotName: this.slotName
                  }, this.$slots)
                ]))
              ]) : c(_i, {
                alwaysTranslate: this.alwaysTranslate,
                data: this.dataKeyByKeyIdLocal[this.modelValue] || {},
                class: "a_select__value__label",
                slotName: this.slotName
              }, this.$slots) : c(Ee, {
                tag: "span",
                text: this.placeholder
              }),
              c(oa, {
                to: this.popperContainerIdSelector,
                disabled: !this.inBody
              }, [
                c("div", {
                  ref: "menuParentRef",
                  id: this.idForList,
                  style: this.isOpen ? "" : "display: none;",
                  "aria-hidden": !this.isOpen,
                  role: "application"
                }, [
                  c("div", {
                    ref: "menuRef",
                    class: [
                      "a_select_menu",
                      {
                        a_select_menu_by_content: this.menuWidthType === "by_content"
                      },
                      this.selectMenuClass
                    ],
                    role: "listbox",
                    "aria-labelledby": this.htmlIdLocal,
                    onClick: (e) => e.stopPropagation()
                  }, [
                    this.searchOutsideOrApi && c("div", {
                      class: "a_select__search"
                    }, [
                      c("form", {
                        onSubmit: this.onSearchOutside
                      }, [
                        c("div", {
                          class: "a_select__search__group"
                        }, [
                          c(yn, {
                            alwaysTranslate: this.alwaysTranslate,
                            label: "_A_SELECT_SEARCH_",
                            inputClass: "a_select__element_clickable",
                            modelValue: this.modelSearchOutside,
                            modelUndefined: "",
                            "onUpdate:modelValue": this.updateModelSearchOutside
                          }),
                          c(Ae, {
                            alwaysTranslate: this.alwaysTranslate,
                            ariaDisabled: this.loadingSearchApi,
                            disabled: this.disabledLocal,
                            class: "a_btn a_btn_primary a_select__element_clickable",
                            type: "submit",
                            iconLeft: xl,
                            loadingAlign: "left"
                          })
                        ])
                      ])
                    ]),
                    this.search && c("div", {
                      class: "a_select__search"
                    }, [
                      c(yn, {
                        alwaysTranslate: this.alwaysTranslate,
                        label: "_A_SELECT_SEARCH_",
                        inputClass: "a_select__element_clickable",
                        modelValue: this.modelSearch,
                        modelUndefined: "",
                        "onUpdate:modelValue": this.updateModelSearch
                      })
                    ]),
                    (this.searchOutside || this.search) && c("div", {
                      class: "a_select__divider",
                      ariaHidden: !0
                    }),
                    c("div", {
                      class: "a_select_menu__child"
                    }, [
                      this.isMultiselect && this.isSelectAll && c("div", {
                        class: [
                          "a_select__menu__link a_select__menu__link_selected a_select__element_clickable",
                          {
                            a_select__menu__link_disabled: this.disabledLocal
                          }
                        ],
                        disabled: this.disabledLocalAttribut,
                        role: "option",
                        tabindex: "-1",
                        onClick: this.onSelectAll,
                        onKeydown: this.onKeydownSelectAll
                      }, [
                        c("span", {
                          class: "a_select__menu__link__icon_box"
                        }, [
                          c(_t, {
                            icon: ef
                          })
                        ]),
                        c("span", null, this.textSelectAll)
                      ]),
                      this.isMultiselect && this.isDeselectAll && c("div", {
                        class: [
                          "a_select__menu__link a_select__menu__link_selected a_select__element_clickable",
                          {
                            a_select__menu__link_disabled: this.disabled
                          }
                        ],
                        disabled: this.disabledAttribut,
                        role: "option",
                        tabindex: "-1",
                        onClick: this.onDeselectAll,
                        onKeydown: this.onKeydownDeselectAll
                      }, [
                        c("span", {
                          class: "a_select__menu__link__icon_box"
                        }, [
                          c(_t, {
                            icon: Ea
                          })
                        ]),
                        c("span", null, this.textDeselectAll)
                      ]),
                      this.isDividerSelectDeselectVisible && c("div", {
                        class: "a_select__divider",
                        ariaHidden: !0
                      }),
                      this.loadingLocal || this.loadingSearchApi ? c(Ll) : "",
                      this.isMultiselect && this.isExclusiveOptionEnabled && c("div", {}, [
                        c(Go, {
                          key: this.exclusiveOptionValue,
                          id: this.htmlIdLocal,
                          alwaysTranslate: !0,
                          dataItem: this.exclusiveOption,
                          disabled: !1,
                          itemIndex: 0,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          searching: this.searching,
                          searchingElements: this.searchingElementsExclusive,
                          searchingGroups: this.searchingGroups,
                          searchTextInHtml: this.searchTextInHtml,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)
                      ]),
                      this.hasDataExtra && c("div", {}, [
                        ...this.dataExtraLocal.map((e, t) => c(Go, {
                          key: e[Ge],
                          id: this.htmlIdLocal,
                          alwaysTranslate: this.alwaysTranslate,
                          dataItem: e,
                          disabled: this.disabledLocal,
                          searching: this.searching,
                          searchingElements: this.searchingElementsExtra,
                          searchTextInHtml: this.searchTextInHtml,
                          itemIndex: this.isExclusiveOptionEnabled ? t + 1 : t,
                          keyDisabled: this.keyDisabled,
                          keyDisabledCallback: this.keyDisabledCallback,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          slotName: this.slotName,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)),
                        !this.hasNotElementsExtraWithSearch && !this.hasNotElementsExclusiveWithSearch && c("div", {
                          class: "a_select__divider",
                          ariaHidden: !0
                        })
                      ]),
                      c("div", {}, this.hasKeyGroup ? [
                        c(tf, {
                          id: `${this.htmlIdLocal}_lev_0`,
                          alwaysTranslate: this.alwaysTranslate,
                          dataGrouped: this.dataGrouped,
                          disabled: this.disabledLocal,
                          groupsForLever: this.groupsForLever,
                          isErrors: this.isErrors,
                          keyDisabled: this.keyDisabled,
                          keyDisabledCallback: this.keyDisabledCallback,
                          levelIndex: 0,
                          modelSearch: this.modelSearchLowerCase,
                          modelValue: this.modelValue,
                          searching: this.searching,
                          searchingElements: this.searchingElements,
                          searchingGroups: this.searchingGroups,
                          searchingGroupsWithSearchInGroup: this.searchingGroupsWithSearchInGroup,
                          searchTextInHtml: this.searchTextInHtml,
                          slotName: this.slotName,
                          type: this.type,
                          onChangeModelValue: this.onChangeModelValue
                        }, this.$slots)
                      ] : [
                        c("div", {}, [
                          ...this.dataSort.map((e, t) => c(Go, {
                            key: e[Ge],
                            id: this.htmlIdLocal,
                            alwaysTranslate: this.alwaysTranslate,
                            dataItem: e,
                            disabled: this.disabledLocal,
                            itemIndex: t,
                            keyDisabled: this.keyDisabled,
                            keyDisabledCallback: this.keyDisabledCallback,
                            modelSearch: this.modelSearchLowerCase,
                            modelValue: this.modelValue,
                            searching: this.searching,
                            searchingElements: this.searchingElements,
                            searchTextInHtml: this.searchTextInHtml,
                            slotName: this.slotName,
                            type: this.type,
                            onChangeModelValue: this.onChangeModelValue
                          }, this.$slots))
                        ])
                      ]),
                      !this.dataSort.length && !this.hasDataExtra || this.hasNotElementsWithSearch ? c(Ee, {
                        alwaysTranslate: this.alwaysTranslate,
                        class: "a_form__not_elements",
                        text: "_A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_"
                      }) : ""
                    ])
                  ])
                ])
              ]),
              this.hasCaret ? c("span", {
                class: "a_caret"
              }, [
                c(_t, {
                  icon: this.caretIcon
                })
              ]) : ""
            ])
          ])
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, D1 = {
  name: "ASelectIconSlot",
  inheritAttrs: !1,
  props: {
    inDropdown: {
      type: Boolean,
      required: !0
    },
    icon: {
      type: String,
      required: !0
    },
    label: {
      type: String,
      required: !1,
      default: void 0
    },
    labelFiltered: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("span", null, [
      c(_t, {
        icon: this.icon
      }),
      this.inDropdown ? Dt(c("span", {
        class: "a_ml_2"
      }), [
        [Kt, this.labelFiltered]
      ]) : c("span", {
        class: "a_ml_2"
      }, this.label)
    ]);
  }
};
function N1({ emit: e }) {
  return {
    blur: (i) => {
      e("blur", i);
    },
    focus: (i) => {
      e("focus", i);
    },
    open: (i) => {
      e("open", i);
    },
    updateModelValue: (i) => {
      e("update:modelValue", i);
    }
  };
}
function B1(e) {
  const t = d(e, "data"), n = _(() => {
    const s = he(ml.value.icons);
    delete s.Aloha, delete s._NoImage;
    const i = [];
    return z(s, (o, u) => {
      i.push({
        value: u,
        label: u
      });
    }), i;
  });
  return {
    iconsLocal: _(() => t.value || n.value)
  };
}
function w1(e) {
  const t = d(e, "type");
  return {
    typeLocal: _(() => t.value === "selectIcon" ? "select" : t.value === "multiselectIcon" ? "multiselect" : t.value)
  };
}
const zE = {
  name: "ASelectIcon",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    buttonClass: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.buttonClass
    },
    buttonClassDefault: {
      type: [String, Object],
      required: !1,
      default: "a_form_control a_select_toggle"
    },
    caretIcon: {
      type: [String, Object],
      required: !1,
      default: () => Se.propsDefault.caretIcon
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    class: {
      type: [String, Object],
      required: !1
    },
    countMultiselect: {
      type: Number,
      required: !1,
      default: () => Se.propsDefault.countMultiselect
    },
    data: {
      type: Array,
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    deselectable: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.deselectable
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    exceededItemsDeletable: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.exceededItemsDeletable
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasCaret: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_select_icon_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inBody: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.inBody
    },
    isCloseByClick: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.isCloseByClick
    },
    isDeselectAll: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.isDeselectAll
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSelectAll: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.isSelectAll
    },
    isSelectionCloseable: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.isSelectionCloseable
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.keyDisabled
    },
    keyDisabledCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: [String, Number, Array],
      required: !1,
      default: () => Se.propsDefault.keyGroup
    },
    keyGroupLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "value"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyTitle: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.keyTitle
    },
    keyTitleCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: String,
      required: !1,
      default: void 0
    },
    maxCountMultiselect: {
      type: Number,
      required: !1,
      default: () => Se.propsDefault.maxCountMultiselect,
      validator: (e) => e > 0
    },
    menuWidthType: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.menuWidthType,
      validator: (e) => ["as_button", "by_content"].indexOf(e) !== -1
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      required: !1,
      default: null
    },
    modelValue: {
      type: [String, Number, Boolean, Array],
      required: !1,
      default: () => Se.propsDefault.modelValue
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    placeholder: {
      type: String,
      required: !1,
      default: void 0
    },
    placement: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.placement,
      validator: (e) => Gn.indexOf(e) !== -1
    },
    popperContainerId: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.popperContainerId
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.readonlyDefault
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    search: {
      type: Boolean,
      required: !1,
      default: !0
    },
    searchInGroup: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    searchTextInHtml: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.searchTextInHtml
    },
    searchTimeout: {
      type: Number,
      required: !1,
      default: () => Se.propsDefault.searchTimeout
    },
    selectMenuClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    slotName: {
      type: String,
      required: !1,
      default: "icon"
    },
    sortOrder: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.sortOrder,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    sortOrderGroup: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.sortOrderGroup,
      validator: (e) => ["asc", "desc"].indexOf(e) !== -1
    },
    textDeselectAll: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.textDeselectAll
    },
    textSelectAll: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.textSelectAll
    },
    translateData: {
      type: Boolean,
      required: !1,
      default: () => Se.propsDefault.translateData
    },
    type: {
      type: String,
      required: !1,
      default: () => Se.propsDefault.type,
      validator: (e) => ["select", "selectIcon", "multiselect", "multiselectIcon"].indexOf(e) !== -1
    }
  },
  emits: [
    "blur",
    "focus",
    "open",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      iconsLocal: n
    } = B1(e), {
      blur: r,
      focus: s,
      open: i,
      updateModelValue: o
    } = N1(t), {
      typeLocal: u
    } = w1(e);
    return {
      blur: r,
      focus: s,
      iconsLocal: n,
      open: i,
      typeLocal: u,
      updateModelValue: o
    };
  },
  render() {
    return c(qs, {
      ...this.$props,
      type: this.typeLocal,
      data: this.iconsLocal,
      onBlur: this.blur,
      onFocus: this.focus,
      onOpen: this.open,
      "onUpdate:modelValue": this.updateModelValue
    }, {
      icon: ({ item: e, label: t, labelFiltered: n, inDropdown: r }) => c(D1, {
        icon: e.value,
        label: t,
        labelFiltered: n,
        inDropdown: r
      }),
      ...this.$slots
    });
  }
};
function P1({
  isModelFalse: e = _(() => !1),
  isModelTrue: t = _(() => !1)
}) {
  return {
    isChecked: _(() => {
      if (t.value)
        return !0;
      if (e.value)
        return !1;
    })
  };
}
function x1(e, {
  isModelFalse: t = _(() => !1),
  isModelTrue: n = _(() => !1)
}) {
  const r = d(e, "trueLabel"), s = d(e, "falseLabel"), i = d(e, "defaultLabel"), o = d(e, "readonly"), u = d(e, "readonlyDefault");
  return {
    labelValueLocal: _(() => n.value ? r.value : t.value ? s.value : o.value ? u.value : i.value)
  };
}
function M1(e) {
  const t = d(e, "modelValue"), n = d(e, "trueValue"), r = d(e, "falseValue"), s = _(() => t.value === n.value || t.value === "true"), i = _(() => t.value === r.value || t.value === "false");
  return {
    isModelDefault: _(() => !s.value && !i.value),
    isModelFalse: i,
    isModelTrue: s
  };
}
function F1(e, {
  changeModel: t = () => {
  },
  isModelFalse: n = _(() => !1),
  isModelTrue: r = _(() => !1)
}) {
  const s = d(e, "defaultValue"), i = d(e, "disabled"), o = d(e, "falseValue"), u = d(e, "isThreeState"), f = d(e, "trueValue"), A = (p) => {
    if (i.value)
      return;
    let T;
    r.value ? T = o.value : u.value && n.value ? T = s.value : T = f.value, t({
      model: T,
      $event: p
    });
  };
  return {
    onInput: A,
    onKeydown: (p) => {
      (p.keyCode === J.enter || p.keyCode === J.space) && (A(p), p.stopPropagation(), p.preventDefault());
    }
  };
}
const AS = {
  name: "ASwitch",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    defaultLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_DEFAULT_LABEL_"
    },
    defaultValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    falseLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_FALSE_LABEL_"
    },
    falseValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !1
    },
    fullWidth: {
      type: Boolean,
      required: !1
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_switch_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isThreeState: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Gn.indexOf(e) !== -1
    },
    trueLabel: {
      type: String,
      required: !1,
      default: "_A_SWITCH_TRUE_LABEL_"
    },
    trueValue: {
      type: [Boolean, String, Number],
      required: !1,
      default: !0
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = kl(e), {
      attributesToExcludeFromRender: r
    } = Nt(e), {
      componentStyleHide: s
    } = Xt(e), {
      ariaDescribedbyLocal: i,
      changeModel: o,
      clearModel: u,
      errorsId: f,
      helpTextId: A,
      htmlIdLocal: E,
      isErrors: p,
      isModel: T,
      onBlur: S,
      onFocus: L
    } = zt(e, t), {
      isModelDefault: b,
      isModelFalse: I,
      isModelTrue: v
    } = M1(e), {
      labelValueLocal: R
    } = x1(e, {
      isModelFalse: I,
      isModelTrue: v
    }), {
      isChecked: g
    } = P1({
      isModelFalse: I,
      isModelTrue: v
    }), {
      onInput: D,
      onKeydown: w
    } = F1(e, {
      changeModel: o,
      isModelFalse: I,
      isModelTrue: v
    });
    return {
      ariaDescribedbyLocal: i,
      attributesToExcludeFromRender: r,
      clearModel: u,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: f,
      helpTextId: A,
      htmlIdLocal: E,
      isChecked: g,
      isErrors: p,
      isModel: T,
      isModelDefault: b,
      labelValueLocal: R,
      onBlur: S,
      onFocus: L,
      onInput: D,
      onKeydown: w
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Sn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.labelValueLocal,
      required: this.required,
      style: this.componentStyleHide,
      type: "switch"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(Ut, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required,
          isError: this.isErrors
        }) : "",
        c("div", {
          class: "switch_button__wrapper"
        }, [
          c(Ae, {
            class: [
              "switch_button",
              {
                switch_button_undefined: this.isModelDefault,
                switch_button_invalid: this.isErrors,
                switch_button_auto: !this.fullWidth
              }
            ],
            classDefault: "",
            isTitleHtml: this.isTitleHtml,
            tag: "div",
            title: this.title,
            titlePlacement: this.titlePlacement,
            type: "text"
          }, {
            default: () => [
              c("input", {
                id: this.htmlIdLocal,
                "aria-describedby": this.ariaDescribedbyLocal,
                ariaInvalid: this.isErrors,
                ariaRequired: this.required,
                checked: this.isChecked,
                class: [
                  "switch_button__input",
                  this.inputClass
                ],
                disabled: this.disabledAttribut,
                type: "checkbox",
                ...this.inputAttributes,
                onClick: this.onInput,
                onKeydown: this.onKeydown,
                onFocus: this.onFocus,
                onBlur: this.onBlur
              }),
              c(Ee, {
                alwaysTranslate: this.alwaysTranslate,
                tag: "label",
                class: [
                  "switch_button__label",
                  {
                    switch_button__label_full: this.fullWidth
                  }
                ],
                for: this.htmlIdLocal,
                extra: this.extra,
                html: this.labelValueLocal
              })
            ]
          })
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, q1 = {
  name: "ATemplate",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    html: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelValue: {
      required: !1
    },
    options: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = Nt(e), {
      componentStyleHide: n
    } = Xt(e);
    return {
      attributesToExcludeFromRender: t,
      componentStyleHide: n
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      this.$slots[this.slotName] ? c("div", {
        class: "a_template"
      }, this.$slots[this.slotName]({
        options: this.options,
        props: this.$props
      })) : "",
      this.html ? Dt(c("div", {
        class: "a_template"
      }), [
        [Kt, this.html]
      ]) : ""
    ]) : null;
  }
}, _l = typeof Map == "function" ? /* @__PURE__ */ new Map() : /* @__PURE__ */ function() {
  const e = [], t = [];
  return {
    has: function(r) {
      return e.indexOf(r) > -1;
    },
    get: function(r) {
      return t[e.indexOf(r)];
    },
    set: function(r, s) {
      e.indexOf(r) === -1 && (e.push(r), t.push(s));
    },
    delete: function(r) {
      const s = e.indexOf(r);
      s > -1 && (e.splice(s, 1), t.splice(s, 1));
    }
  };
}();
let ES = function(t) {
  return new Event(t, { bubbles: !0 });
};
try {
  new Event("test");
} catch {
  ES = function(n) {
    const r = document.createEvent("Event");
    return r.initEvent(n, !0, !1), r;
  };
}
function $1(e) {
  if (!e || !e.nodeName || e.nodeName !== "TEXTAREA" || _l.has(e))
    return;
  let t = null, n = null, r = null;
  function s() {
    const p = window.getComputedStyle(e, null);
    p.resize === "vertical" ? e.style.resize = "none" : p.resize === "both" && (e.style.resize = "horizontal"), p.boxSizing === "content-box" ? t = -(parseFloat(p.paddingTop) + parseFloat(p.paddingBottom)) : t = parseFloat(p.borderTopWidth) + parseFloat(p.borderBottomWidth), isNaN(t) && (t = 0), f();
  }
  function i(p) {
    {
      const T = e.style.width;
      e.style.width = "0px", e.offsetWidth, e.style.width = T;
    }
    e.style.overflowY = p;
  }
  function o(p) {
    const T = [];
    for (; p && p.parentNode && p.parentNode instanceof Element; )
      p.parentNode.scrollTop && T.push({
        node: p.parentNode,
        scrollTop: p.parentNode.scrollTop
      }), p = p.parentNode;
    return T;
  }
  function u() {
    if (e.scrollHeight === 0)
      return;
    const p = o(e), T = document.documentElement && document.documentElement.scrollTop;
    e.style.height = "", e.style.height = e.scrollHeight + t + "px", n = e.clientWidth, p.forEach(function(S) {
      S.node.scrollTop = S.scrollTop;
    }), T && (document.documentElement.scrollTop = T);
  }
  function f() {
    u();
    const p = Math.round(parseFloat(e.style.height)), T = window.getComputedStyle(e, null);
    let S = T.boxSizing === "content-box" ? Math.round(parseFloat(T.height)) : e.offsetHeight;
    if (S < p ? T.overflowY === "hidden" && (i("scroll"), u(), S = T.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(e, null).height)) : e.offsetHeight) : T.overflowY !== "hidden" && (i("hidden"), u(), S = T.boxSizing === "content-box" ? Math.round(parseFloat(window.getComputedStyle(e, null).height)) : e.offsetHeight), r !== S) {
      r = S;
      const L = ES("autosize:resized");
      try {
        e.dispatchEvent(L);
      } catch {
      }
    }
  }
  const A = function() {
    e.clientWidth !== n && f();
  }, E = (function(p) {
    window.removeEventListener("resize", A, !1), e.removeEventListener("input", f, !1), e.removeEventListener("keyup", f, !1), e.removeEventListener("autosize:destroy", E, !1), e.removeEventListener("autosize:update", f, !1), Object.keys(p).forEach(function(T) {
      e.style[T] = p[T];
    }), _l.delete(e);
  }).bind(e, {
    height: e.style.height,
    resize: e.style.resize,
    overflowY: e.style.overflowY,
    overflowX: e.style.overflowX,
    wordWrap: e.style.wordWrap
  });
  e.addEventListener("autosize:destroy", E, !1), "onpropertychange" in e && "oninput" in e && e.addEventListener("keyup", f, !1), window.addEventListener("resize", A, !1), e.addEventListener("input", f, !1), e.addEventListener("autosize:update", f, !1), e.style.overflowX = "hidden", e.style.wordWrap = "break-word", _l.set(e, {
    destroy: E,
    update: f
  }), s();
}
function U1(e) {
  const t = _l.get(e);
  t && t.destroy();
}
function k1(e) {
  const t = _l.get(e);
  t && t.update();
}
let Ds;
typeof window > "u" || typeof window.getComputedStyle != "function" ? (Ds = function(t) {
  return t;
}, Ds.destroy = function(e) {
  return e;
}, Ds.update = function(e) {
  return e;
}) : (Ds = function(t, n) {
  return t && Array.prototype.forEach.call(t.length ? t : [t], function(r) {
    return $1(r);
  }), t;
}, Ds.destroy = function(e) {
  return e && Array.prototype.forEach.call(e.length ? e : [e], U1), e;
}, Ds.update = function(e) {
  return e && Array.prototype.forEach.call(e.length ? e : [e], k1), e;
});
const gd = Ds;
function H1(e) {
  const t = d(e, "isScalable"), n = B(!1), r = B(void 0);
  return {
    destroyAutosize: () => {
      n.value && (gd.destroy(r.value), n.value = !1);
    },
    initAutosize: () => {
      t.value && (gd(r.value), n.value = !0);
    },
    textareaRef: r,
    updateAutosize: () => {
      t.value && n.value && setTimeout(() => {
        gd.update(r.value);
      });
    }
  };
}
function V1(e, {
  changeModel: t = () => {
  },
  updateAutosize: n = () => {
  }
}) {
  const r = d(e, "disabled"), s = d(e, "modelUndefined");
  return {
    clearModel: () => {
      r.value || (t({
        model: s.value
      }), n());
    },
    onInput: (u) => {
      if (r.value)
        return;
      const f = u.target.value;
      t({
        model: f
      });
    }
  };
}
function W1(e) {
  const t = d(e, "resize"), n = {
    v: "a_textarea_resize_v",
    h: "a_textarea_resize_h",
    none: "a_textarea_resize_none",
    auto: ""
  };
  return {
    resizeClass: _(() => n[t.value])
  };
}
function G1(e) {
  const t = d(e, "isScalable"), n = d(e, "rows");
  return {
    rowsLocal: _(() => {
      if (n.value)
        return n.value;
      if (t.value)
        return 1;
    })
  };
}
const j1 = {
  name: "ATextarea",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    autocomplete: {
      type: String,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    clearButtonClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_textarea_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isClearButton: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isLabelFloat: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isScalable: {
      type: Boolean,
      required: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    maxlength: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelUndefined: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: ""
    },
    modelValue: {
      type: [String, Number],
      required: !1
    },
    placeholder: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    resize: {
      type: String,
      required: !1,
      default: "v",
      validator: (e) => ["v", "h", "none", "auto"].indexOf(e) !== -1
    },
    rows: {
      type: [String, Number],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue",
    "focus",
    "blur"
  ],
  setup(e, t) {
    const {
      disabledAttribut: n
    } = kl(e), {
      attributesToExcludeFromRender: r
    } = Nt(e), {
      componentStyleHide: s
    } = Xt(e), {
      ariaDescribedbyLocal: i,
      changeModel: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: S
    } = zt(e, t), {
      isClearButtonLocal: L
    } = Ku(e, {
      isModel: p
    }), {
      resizeClass: b
    } = W1(e), {
      destroyAutosize: I,
      initAutosize: v,
      textareaRef: R,
      updateAutosize: g
    } = H1(e), {
      clearModel: D,
      onInput: w
    } = V1(e, {
      changeModel: o,
      updateAutosize: g
    }), {
      rowsLocal: F
    } = G1(e), {
      placeholderAttributes: P
    } = Ml(e);
    return Gr(() => {
      v();
    }), Ot(() => {
      I();
    }), {
      ariaDescribedbyLocal: i,
      attributesToExcludeFromRender: r,
      changeModel: o,
      clearModel: D,
      componentStyleHide: s,
      disabledAttribut: n,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      isClearButtonLocal: L,
      isErrors: E,
      isModel: p,
      onBlur: T,
      onFocus: S,
      onInput: w,
      placeholderAttributes: P,
      resizeClass: b,
      rowsLocal: F,
      textareaRef: R
    };
  },
  render() {
    return this.isRender ? this.readonly ? c(Sn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      modelValue: this.modelValue,
      readonlyDefault: this.readonlyDefault,
      required: this.required,
      style: this.componentStyleHide,
      type: "textarea",
      valueClass: "a_code_content",
      valueTag: "div"
    }) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: ["a_form_element__parent", {
          a_form_element__parent_float: this.isLabelFloat,
          a_form_element__parent_not_empty: this.isModel
        }]
      }, [
        this.label || this.labelScreenReader ? c(Ut, {
          id: this.htmlIdLocal,
          alwaysTranslate: this.alwaysTranslate,
          extra: this.extra,
          isError: this.isErrors,
          isLabelFloat: this.isLabelFloat,
          label: this.label,
          labelClass: this.labelClass,
          labelScreenReader: this.labelScreenReader,
          required: this.required
        }) : "",
        c("div", {
          class: [
            "a_form_element a_form_element_textarea",
            {
              a_form_element_textarea_scalable: this.isScalable
            }
          ]
        }, [
          c("textarea", {
            ref: "textareaRef",
            id: this.htmlIdLocal,
            autocomplete: this.autocomplete,
            value: this.modelValue,
            rows: this.rowsLocal,
            class: [
              "a_form_control a_textarea",
              this.inputClass,
              {
                a_textarea_scalable: this.isScalable,
                a_form_element_with_one_btn: this.isClearButton,
                a_form_control_invalid: this.isErrors
              },
              this.resizeClass
            ],
            disabled: this.disabledAttribut,
            ariaRequired: this.required,
            ariaInvalid: this.isErrors,
            "aria-describedby": this.ariaDescribedbyLocal,
            maxlength: this.maxlength,
            ...this.placeholderAttributes,
            ...this.inputAttributes,
            onInput: this.onInput,
            onFocus: this.onFocus,
            onBlur: this.onBlur
          }),
          this.isClearButtonLocal ? c("div", {
            class: "a_form_control__actions"
          }, [
            c(qu, {
              alwaysTranslate: this.alwaysTranslate,
              disabled: this.disabled,
              class: this.clearButtonClass,
              onClear: this.clearModel
            })
          ]) : ""
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]) : null;
  }
}, Fl = {
  checkbox: JM,
  color: yn,
  currency: R0,
  date: ui,
  dateRange: PF,
  datetime: ui,
  email: yn,
  file: P0,
  integer: xa,
  integerNonNegative: xa,
  integerNonNegativeRange: qo,
  integerPositive: xa,
  integerPositiveRange: qo,
  integerRange: qo,
  json: Q0,
  multiselect: qs,
  multiselectIcon: zE,
  multiselectOrdered: _1,
  natural: yn,
  number: xa,
  numberRange: qo,
  oneCheckbox: xu,
  password: yn,
  radio: hS,
  routerLinkConfig: m1,
  select: qs,
  selectIcon: zE,
  switch: AS,
  template: q1,
  text: yn,
  textarea: j1
}, pS = {
  name: "AFieldset",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    attributesFieldset: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    children: {
      type: Array,
      required: !1,
      default: () => []
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_12"
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12"
    },
    classFieldset: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasBorder: {
      type: Boolean,
      required: !1,
      default: !0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_fieldset_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    slotName: {
      type: String,
      required: !1,
      default: void 0
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        collapseClose: "_A_FIELDSET_COLLAPSE_CLOSE_",
        collapseOpen: "_A_FIELDSET_COLLAPSE_OPEN_"
      })
    }
  },
  emits: [
    "toggleCollapse",
    "updateData",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), r = () => ({
      ...Fl,
      group: mS,
      fieldset: kr("AFieldset"),
      ...Wn.components,
      ...Wn.containerComponents
    }), {
      componentStyleHide: s
    } = Xt(e), {
      textAfterLabel: i
    } = Qu(e), {
      ariaDescribedbyLocal: o,
      errorsId: u,
      helpTextId: f,
      htmlIdLocal: A,
      isErrors: E
    } = zt(e, t), {
      onUpdateModelLocal: p
    } = c0(e, t), T = ({ item: D, dataKeyByKeyId: w }) => {
      t.emit("updateData", { item: D, dataKeyByKeyId: w });
    }, {
      groupId: S
    } = Qc(e, {
      htmlIdLocal: A
    }), {
      iconCollapse: L,
      initIsCollapsedLocal: b,
      isCollapsedLocal: I,
      titleCollapse: v,
      toggleCollapse: R
    } = Sf(e, t), {
      classColumnsReadonly: g
    } = f0(e);
    return b(), {
      ariaDescribedbyLocal: o,
      attributesToExcludeFromRender: n,
      classColumnsReadonly: g,
      componentStyleHide: s,
      componentTypesMapping: r,
      errorsId: u,
      groupId: S,
      helpTextId: f,
      htmlIdLocal: A,
      iconCollapse: L,
      isCollapsedLocal: I,
      isErrors: E,
      onUpdateDataLocal: T,
      onUpdateModelLocal: p,
      textAfterLabel: i,
      titleCollapse: v,
      toggleCollapse: R
    };
  },
  render() {
    if (!this.isRender)
      return null;
    const e = [
      this.children.map((t, n) => {
        if (t.isRender !== !1) {
          const r = yi.value[t.type];
          let s;
          le(t.classColumn) ? s = this.classColumnDefault : t.classColumn && (s = t.classColumn);
          let i;
          t.isHide && (i = "display: none;");
          const o = this.componentTypesMapping()[t.type];
          return c("div", {
            class: s,
            style: i
          }, [
            c(o, {
              key: n,
              alwaysTranslate: this.alwaysTranslate,
              modelValue: r ? this.modelValue : ce(this.modelValue, t.id),
              modelDependencies: r ? this.modelValue : void 0,
              errors: ce(this.errorsAll, t.id),
              errorsAll: r ? this.errorsAll : void 0,
              idPrefix: this.idPrefix,
              onUpdateData: ({ dataKeyByKeyId: u }) => this.onUpdateDataLocal({ item: t, dataKeyByKeyId: u }),
              ...t,
              change: ({ currentModel: u, id: f, item: A, model: E, props: p }) => this.onUpdateModelLocal({
                currentModel: u,
                id: f,
                item: A,
                model: E,
                props: p,
                component: t
              }),
              readonly: this.readonly || t.readonly,
              readonlyDefault: "readonlyDefault" in t && !Be(t.readonlyDefault) ? t.readonlyDefault : this.readonlyDefault,
              disabled: this.disabled || t.disabled,
              classColumn: void 0,
              slotAppend: void 0,
              ...this.attributesToExcludeFromRender
            }, this.$slots),
            t.slotAppend && this.$slots[t.slotAppend] ? this.$slots[t.slotAppend]({ item: t, itemIndex: n }) : ""
          ]);
        }
      }),
      this.slotName && this.$slots[this.slotName] ? this.$slots[this.slotName]({
        id: this.htmlIdLocal,
        props: this.$props
      }) : ""
    ];
    return this.readonly ? c(Sn, {
      ...this.$attrs,
      id: this.htmlIdLocal,
      alwaysTranslate: this.alwaysTranslate,
      collapsible: this.collapsible,
      excludeRenderAttributes: this.excludeRenderAttributes,
      extra: this.extra,
      helpText: this.helpText,
      isCollapsed: this.isCollapsed,
      label: this.label,
      labelClass: this.labelClass,
      labelScreenReader: this.labelScreenReader,
      required: this.required,
      style: this.componentStyleHide,
      type: "fieldset",
      valueParentClass: this.classColumnsReadonly
    }, () => e) : c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        class: "a_form_element__parent"
      }, [
        c("fieldset", {
          id: this.htmlIdLocal,
          tabindex: -1,
          class: ["a_fieldset", this.classFieldset, {
            a_fieldset_invalid: this.isErrors,
            a_fieldset_no_border: !this.hasBorder,
            a_fieldset_collapsed: this.isCollapsedLocal
          }],
          "aria-describedby": this.ariaDescribedbyLocal,
          ...this.attributesFieldset
        }, [
          this.label || this.labelScreenReader ? c(Ae, {
            type: "text",
            alwaysTranslate: this.alwaysTranslate,
            tag: "legend",
            class: [
              "a_legend",
              {
                a_legend_invalid: this.isErrors
              },
              this.labelClass
            ],
            extra: this.extra,
            html: this.label,
            textScreenReader: this.labelScreenReader,
            textAfter: this.textAfterLabel
          }) : "",
          this.collapsible ? c(Ae, {
            "aria-controls": this.groupId,
            "aria-expanded": !this.isCollapsedLocal,
            alwaysTranslate: this.alwaysTranslate,
            class: "a_fieldset__btn_collapse a_btn a_btn_transparent_secondary",
            iconLeft: this.iconCollapse,
            title: this.titleCollapse,
            textScreenReader: this.titleCollapse,
            type: "button",
            onClick: this.toggleCollapse
          }) : "",
          c("div", {
            id: this.groupId,
            class: [
              this.classColumns,
              "a_fieldset__content"
            ]
          }, e)
        ]),
        c(Yt, {
          id: this.helpTextId,
          alwaysTranslate: this.alwaysTranslate,
          html: this.helpText,
          extra: this.extra
        }),
        this.isErrors && c(en, {
          id: this.errorsId,
          alwaysTranslate: this.alwaysTranslate,
          errors: this.errors
        })
      ])
    ]);
  }
}, K1 = ["datepickerRange", "dateRange"], TS = {};
z(K1, (e) => {
  TS[e] = !0;
});
const SS = TS;
function z1(e) {
  const t = d(e, "children");
  return {
    specificAttributes: _(() => {
      const r = {};
      return z(t.value, (s) => {
        const i = cS[s.type], o = SS[s.type];
        i && Be(s.inputWidth) && (r[s.id] = {
          inputWidth: "auto"
        }), o && (r[s.id] = {
          inputWidth: "inherit",
          inputAttributes: {
            style: "min-width: 181px"
          }
        });
      }), r;
    })
  };
}
const Wn = {
  components: {},
  containerComponents: {}
}, Sfe = {
  install: (e, {
    components: t = {},
    containerComponents: n = {}
  } = {}) => {
    Wn.components = t, Wn.containerComponents = n;
  }
}, mS = {
  name: "AGroup",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    children: {
      type: Array,
      required: !1,
      default: () => []
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_6 a_column_12_touch"
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12 a_columns_gap_2"
    },
    dependencies: {
      type: [Array, Object],
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    errorsAll: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: () => st("a_group_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    inputClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      type: [String, Number, Array, Object, Boolean],
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  emits: [
    "blur",
    "focus",
    "update:modelValue",
    "updateData"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), r = () => ({
      ...Fl,
      ...Wn.components,
      ...Wn.containerComponents
    }), {
      componentStyleHide: s
    } = Xt(e), {
      ariaDescribedbyLocal: i,
      changeModel: o,
      clearModel: u,
      errorsId: f,
      helpTextId: A,
      htmlIdLocal: E,
      isErrors: p
    } = zt(e, t), T = d(e, "change"), S = d(e, "modelValue"), L = ({ currentModel: w, id: F, item: P, model: M, props: O, component: q }) => {
      const U = he(S.value || {});
      wc(U, F, he(M)), t.emit("update:modelValue", U), T.value({ currentModel: w, id: F, item: P, fullModel: U, model: M, props: O }), Ne(q.change) && q.change({ currentModel: w, id: F, item: P, fullModel: U, model: M, props: O });
    }, b = ({ item: w, dataKeyByKeyId: F }) => {
      t.emit("updateData", { item: w, dataKeyByKeyId: F });
    }, I = d(e, "children"), v = d(e, "idPrefix"), R = _(() => I.value[0] || {}), g = _(() => bl({
      id: R.value.id,
      idPrefix: R.value.idPrefix || v.value,
      htmlId: R.value.htmlId
    })), {
      specificAttributes: D
    } = z1(e);
    return {
      ariaDescribedbyLocal: i,
      attributesToExcludeFromRender: n,
      changeModel: o,
      clearModel: u,
      componentStyleHide: s,
      componentTypesMapping: r,
      errorsId: f,
      firstChild: R,
      helpTextId: A,
      htmlIdFirstChild: g,
      htmlIdLocal: E,
      isErrors: p,
      onUpdateDataLocal: b,
      onUpdateModelLocal: L,
      specificAttributes: D
    };
  },
  render() {
    return this.isRender ? c("div", {
      ...this.$attrs,
      style: this.componentStyleHide,
      type: void 0,
      ...this.attributesToExcludeFromRender
    }, [
      c("div", {
        id: this.htmlIdLocal,
        role: "group",
        tabindex: -1,
        class: [this.inputClass, {
          a_group_invalid: this.isErrors
        }],
        "aria-describedby": this.ariaDescribedbyLocal
      }, [
        c("div", {
          class: this.classColumns
        }, [
          this.firstChild.label && c(Ut, {
            id: this.htmlIdFirstChild,
            alwaysTranslate: this.alwaysTranslate,
            extra: this.extra,
            isError: !!this.errorsAll[this.firstChild.id],
            isLabelFloat: !1,
            label: this.label || this.firstChild.label,
            labelClass: this.labelClass || this.firstChild.labelClass || this.classColumnDefault,
            labelScreenReader: this.labelScreenReader || this.firstChild.labelScreenReader,
            required: this.required || this.firstChild.required,
            type: this.firstChild.type
          }),
          this.children.map((e, t) => {
            const n = yi.value[e.type];
            let r;
            le(e.classColumn) ? r = this.classColumnDefault : e.classColumn && (r = e.classColumn);
            let s;
            e.isHide && (s = "display: none;");
            const i = this.componentTypesMapping()[e.type];
            return c("div", {
              class: r,
              style: s
            }, [
              c(i, {
                key: t,
                alwaysTranslate: this.alwaysTranslate,
                modelValue: n ? this.modelValue : ce(this.modelValue, e.id),
                modelDependencies: n ? this.modelValue : void 0,
                errors: this.errorsAll[e.id],
                errorsAll: n ? this.errorsAll : void 0,
                idPrefix: this.idPrefix,
                onUpdateData: ({ dataKeyByKeyId: o }) => this.onUpdateDataLocal({ item: e, dataKeyByKeyId: o }),
                ...e,
                change: ({ currentModel: o, id: u, item: f, model: A, props: E }) => this.onUpdateModelLocal({
                  currentModel: o,
                  id: u,
                  item: f,
                  model: A,
                  props: E,
                  component: e
                }),
                disabled: this.disabled || e.disabled,
                ...this.specificAttributes[e.id],
                label: t === 0 ? void 0 : e.label,
                slotAppend: void 0,
                classColumn: void 0,
                ...this.attributesToExcludeFromRender
              }, this.$slots),
              e.slotAppend && this.$slots[e.slotAppend] ? this.$slots[e.slotAppend]({ item: e, itemIndex: t }) : ""
            ]);
          })
        ])
      ]),
      c(Yt, {
        id: this.helpTextId,
        alwaysTranslate: this.alwaysTranslate,
        html: this.helpText,
        extra: this.extra
      }),
      this.isErrors && c(en, {
        class: "a_px_3",
        id: this.errorsId,
        alwaysTranslate: this.alwaysTranslate,
        errors: this.errors
      })
    ]) : null;
  }
}, uf = {
  fieldset: pS,
  group: mS,
  ...Wn.containerComponents
};
function Y1() {
  return {
    componentTypesMapping: () => ({
      ...Fl,
      ...uf,
      ...Wn.components,
      ...Wn.containerComponents
    })
  };
}
function X1(e) {
  const t = d(e, "filter");
  return {
    isContainer: _(() => !!yi.value[t.value.type])
  };
}
function Z1(e) {
  const t = d(e, "filter");
  return {
    filterSpecificAttributes: _(() => {
      const r = {}, s = cS[t.value.type], i = SS[t.value.type];
      return s && Be(t.value.inputWidth) && (r.inputWidth = "auto"), i && (r.inputWidth = "inherit", r.inputAttributes = {
        style: "min-width: 181px"
      }), r;
    })
  };
}
function J1(e) {
  const t = d(e, "id");
  return {
    idPrefix: _(() => `${t.value}_`)
  };
}
function Q1(e, {
  isContainer: t = _(() => !1)
}) {
  const n = d(e, "filter"), r = d(e, "onUpdateModelFilters"), s = d(e, "unappliedModel");
  return {
    onUpdateModelFiltersLocal: (o) => {
      if (t.value)
        r.value({ fullModel: o });
      else {
        const u = he(s.value);
        u[n.value.id] = he(o), r.value({ fullModel: u });
      }
    }
  };
}
function eq(e) {
  const t = d(e, "filter"), n = d(e, "updateDataKeyByIdFromFilter"), r = ["select", "multiselect", "radio", "checkbox", "group", "fieldset"], s = ({ dataKeyByKeyId: o, item: u }) => {
    let f = t.value.id;
    u && (f = u.id), n.value({
      filterId: f,
      dataKeyByKeyId: o
    });
  };
  return {
    emitForComponentsWithData: _(() => {
      const o = {};
      return r.indexOf(t.value.type) !== -1 && (o.onUpdateData = s), o;
    })
  };
}
const tq = {
  name: "AFiltersHorizontalFilterUi",
  props: {
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filter: {
      type: Object,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    isLabelVisible: {
      type: Boolean,
      required: !0
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    unappliedModel: {
      type: Object,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    }
  },
  setup(e) {
    const {
      attributesToExcludeFromRender: t
    } = Nt(e), {
      isContainer: n
    } = X1(e), {
      onUpdateModelFiltersLocal: r
    } = Q1(e, {
      isContainer: n
    }), {
      emitForComponentsWithData: s
    } = eq(e), {
      idPrefix: i
    } = J1(e), {
      componentTypesMapping: o
    } = Y1(), {
      filterSpecificAttributes: u
    } = Z1(e);
    return {
      attributesToExcludeFromRender: t,
      componentTypesMapping: o,
      emitForComponentsWithData: s,
      filterSpecificAttributes: u,
      idPrefix: i,
      isContainer: n,
      onUpdateModelFiltersLocal: r
    };
  },
  render() {
    const e = this.componentTypesMapping()[this.filter.type];
    return c(e, {
      idPrefix: this.idPrefix,
      modelValue: this.isContainer ? this.unappliedModel : this.unappliedModel[this.filter.id],
      "onUpdate:modelValue": this.onUpdateModelFiltersLocal,
      excludeRenderAttributes: this.excludeRenderAttributes,
      ...this.filter,
      ...this.filterSpecificAttributes,
      label: this.isLabelVisible ? this.filter.label : void 0,
      ...this.emitForComponentsWithData,
      ...this.attributesToExcludeFromRender
    }, this.$slots);
  }
};
function nq(e) {
  const t = d(e, "id");
  return {
    idFilterRight: _(() => `${t.value}_filter_right`)
  };
}
const rq = {
  name: "AFilersRight",
  props: {
    appliedModel: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filters: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch"
  ],
  setup(e) {
    const {
      idFilterRight: t
    } = nq(e);
    return {
      idFilterRight: t
    };
  },
  render() {
    return c("div", {
      id: this.idFilterRight,
      class: "a_filters_right"
    }, [
      c("form", {}, [
        this.filters.map((e) => c(tq, {
          id: this.id,
          class: "a_filters_right__filter_ui",
          excludeRenderAttributes: this.excludeRenderAttributes,
          filter: e,
          isLabelVisible: !0,
          onUpdateModelFilters: this.onUpdateModelFilters,
          unappliedModel: this.appliedModel,
          updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter
        }, this.$slots))
      ])
    ]);
  }
};
function aq(e) {
  const t = d(e, "closeFilterValue"), n = d(e, "disabled"), r = d(e, "filter");
  return {
    closeCurrentFilterValue: ({ modelValue: i }) => {
      n.value || t.value({
        filter: r.value,
        modelArray: i.modelArray,
        keyId: i.keyId
      });
    }
  };
}
function sq(e, { emit: t }, {
  modelValuesForCurrentFilter: n = _(() => [])
}) {
  const r = d(e, "filter"), s = _(() => n.value.length > 0);
  return {
    isLeastOneFilterVisible: s,
    updateVisibleChildFilters: ({ destroy: o } = {}) => {
      t("updateVisibleChildFilters", {
        id: r.value.id,
        isVisible: o ? !1 : s.value
      });
    }
  };
}
function iq(e) {
  const t = d(e, "filter"), n = d(e, "id"), r = _(() => `eventATableFilterTopOnOpen_${n.value}`);
  return {
    goToFilter: ({ modelValue: i } = {}) => {
      let o = bl({
        id: t.value.id,
        idPrefix: `${n.value}_filter_top`,
        htmlId: t.value.htmlId
      });
      i.idSuffix && (o += i.idSuffix), t.value.main || Rt.$emit(r.value, o);
    }
  };
}
function lq({ filter: e, currentModel: t }) {
  return !(!e || e.hideFilterCenter || le(t) || t === "" || Te(t) && !t.length);
}
function oq(e) {
  const t = d(e, "filter"), n = d(e, "model");
  return {
    hasCurrentFilter: _(() => lq({
      filter: t.value,
      currentModel: n.value
    }))
  };
}
function uq(e, { emit: t }, {
  hasCurrentFilter: n = _(() => !1)
}) {
  const r = d(e, "dataKeyByKeyIdPerFilter"), s = d(e, "filter"), i = _(() => n.value && N0.value[s.value.type] ? En(r.value[s.value.id]) : !1);
  return {
    isFilterLoading: i,
    updateLoadingChildFilters: (u, f) => {
      u !== f && t("updateLoadingChildFilters", {
        id: s.value.id,
        isLoading: i.value
      });
    }
  };
}
function _q(e, {
  hasCurrentFilter: t = _(() => !1)
}) {
  const n = d(e, "filter"), r = _(() => t.value ? n.value.label : ""), s = _(() => {
    if (t.value)
      return n.value.labelScreenReader;
  }), i = _(() => s.value || r.value);
  return {
    filterLabel: r,
    filterLabelForTitle: i
  };
}
function dq(e, {
  filterLabel: t = _(() => ""),
  filterLabelForTitle: n = _(() => ""),
  hasCurrentFilter: r = _(() => !1)
}) {
  const s = d(e, "dataKeyByKeyIdPerFilter"), i = d(e, "filter"), o = d(e, "model"), {
    filterBoolean: u,
    filterDate: f
  } = jn(), A = _(() => {
    if (i.value)
      return s.value[i.value.id];
  }), E = _(() => {
    var S;
    return (S = o.value) != null && S.length ? Lt(o.value, (L) => A.value && A.value[L]) : [];
  }), p = ({ label: S, suffixTranslated: L }) => {
    const b = Pt({
      placeholder: S
    });
    return L ? `${b} ${L}` : b;
  };
  return {
    modelValuesForCurrentFilter: _(() => {
      var S, L, b, I, v, R, g, D, w;
      if (!r.value)
        return [];
      if (i.value.type === "switch" || i.value.type === "oneCheckbox")
        return [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: u(o.value)
        }];
      if (i.value.type === "date")
        return [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: f(o.value)
        }];
      if (i.value.type === "select" || i.value.type === "radio") {
        const F = ce(A.value, `${o.value}.${vt}`);
        return F ? [{
          filterLabelTranslated: p({ label: t.value }),
          filterLabelForTitleTranslated: p({ label: n.value }),
          label: F
        }] : [];
      }
      if (sf.value[i.value.type] || i.value.type === "radio" && i.value.isModelArray) {
        if (E.value.length) {
          if (E.value.length === 1) {
            const F = (S = A.value) == null ? void 0 : S[E.value[0]];
            return [{
              filterLabelTranslated: p({ label: t.value }),
              filterLabelForTitleTranslated: p({ label: n.value }),
              label: F == null ? void 0 : F[vt],
              item: F,
              modelArray: E.value
            }];
          }
          return [{
            filterLabelTranslated: p({ label: t.value }),
            filterLabelForTitleTranslated: p({ label: n.value }),
            label: Pt({
              placeholder: "_A_FILTERS_SELECTED_{{count}}_",
              extra: {
                count: E.value.length,
                modelArray: E.value
              }
            }),
            modelArray: E.value,
            extra: {
              count: E.value.length,
              modelArray: E.value
            }
          }];
        }
        return [];
      }
      if (i.value.type === "dateRange") {
        const F = i.value.keyFrom || "from", P = i.value.keyUntil || "until", M = [];
        if (!le((L = o.value) == null ? void 0 : L[F]) && ((b = o.value) == null ? void 0 : b[F]) !== "") {
          const O = Pt({
            placeholder: i.value.labelFrom || "_A_DATEPICKER_RANGE_FROM_"
          });
          M.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: O
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: O
            }),
            label: f(o.value[F]),
            idSuffix: "_from",
            keyId: F
          });
        }
        if (!le((I = o.value) == null ? void 0 : I[P]) && ((v = o.value) == null ? void 0 : v[P]) !== "") {
          const O = Pt({
            placeholder: i.value.labelUntil || "_A_DATEPICKER_RANGE_UNTIL_"
          });
          M.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: O
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: O
            }),
            label: f(o.value[P]),
            idSuffix: "_until",
            keyId: P
          });
        }
        return M;
      }
      if (lf.indexOf(i.value.type) !== -1) {
        const F = i.value.keyMax || "max", P = i.value.keyMin || "min", M = [];
        if (!le((R = o.value) == null ? void 0 : R[P]) && ((g = o.value) == null ? void 0 : g[P]) !== "") {
          const O = Pt({
            placeholder: i.value.labelMin || "_A_INPUT_NUMBER_RANGE_LABEL_MIN_"
          });
          M.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: O
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: O
            }),
            label: o.value[P],
            idSuffix: "_min",
            keyId: P
          });
        }
        if (!le((D = o.value) == null ? void 0 : D[F]) && ((w = o.value) == null ? void 0 : w[F]) !== "") {
          const O = Pt({
            placeholder: i.value.labelMax || "_A_INPUT_NUMBER_RANGE_LABEL_MAX_"
          });
          M.push({
            filterLabelTranslated: p({
              label: t.value,
              suffixTranslated: O
            }),
            filterLabelForTitleTranslated: p({
              label: n.value,
              suffixTranslated: O
            }),
            label: o.value[F],
            idSuffix: "_max",
            keyId: F
          });
        }
        return M;
      }
      return [{
        label: o.value,
        filterLabelTranslated: p({ label: t.value }),
        filterLabelForTitleTranslated: p({ label: n.value })
      }];
    })
  };
}
const cq = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pin-fill" viewBox="0 0 16 16">
  <path d="M4.146.146A.5.5 0 0 1 4.5 0h7a.5.5 0 0 1 .5.5c0 .68-.342 1.174-.646 1.479-.126.125-.25.224-.354.298v4.431l.078.048c.203.127.476.314.751.555C12.36 7.775 13 8.527 13 9.5a.5.5 0 0 1-.5.5h-4v4.5c0 .276-.224 1.5-.5 1.5s-.5-1.224-.5-1.5V10h-4a.5.5 0 0 1-.5-.5c0-.973.64-1.725 1.17-2.189A6 6 0 0 1 5 6.708V2.277a3 3 0 0 1-.354-.298C4.342 1.674 4 1.179 4 .5a.5.5 0 0 1 .146-.354"/>
</svg>`, fq = {
  name: "AFilterCenterItem",
  props: {
    closeFilterValue: {
      type: Function,
      required: !0
    },
    dataKeyByKeyIdPerFilter: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    filter: {
      type: Object,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    model: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "updateVisibleChildFilters",
    "updateLoadingChildFilters"
  ],
  setup(e, t) {
    const {
      hasCurrentFilter: n
    } = oq(e), {
      isFilterLoading: r,
      updateLoadingChildFilters: s
    } = uq(e, t, {
      hasCurrentFilter: n
    }), {
      filterLabel: i,
      filterLabelForTitle: o
    } = _q(e, {
      hasCurrentFilter: n
    }), {
      modelValuesForCurrentFilter: u
    } = dq(e, {
      filterLabel: i,
      filterLabelForTitle: o,
      hasCurrentFilter: n
    }), {
      isLeastOneFilterVisible: f,
      updateVisibleChildFilters: A
    } = sq(e, t, {
      modelValuesForCurrentFilter: u
    }), {
      goToFilter: E
    } = iq(e), {
      closeCurrentFilterValue: p
    } = aq(e);
    return rt(f, () => {
      A();
    }, {
      immediate: !0
    }), rt(r, (T, S) => {
      s(T, S);
    }, {
      immediate: !0
    }), Ot(() => {
      A({
        destroy: !0
      });
    }), {
      closeCurrentFilterValue: p,
      filterLabel: i,
      goToFilter: E,
      hasCurrentFilter: n,
      isLeastOneFilterVisible: f,
      modelValuesForCurrentFilter: u
    };
  },
  render() {
    return this.hasCurrentFilter && [
      this.modelValuesForCurrentFilter.map((e) => c("div", {
        role: "group",
        class: "a_filters_center__item a_btn_group a_btn_group_small"
      }, [
        this.filter.hasNotClose && c(Ae, {
          class: "a_btn a_btn_secondary",
          ariaHidden: !0,
          tabindex: -1,
          iconLeft: cq,
          type: "text"
        }),
        c(Ae, {
          class: "a_btn a_btn_secondary",
          title: "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_",
          textScreenReader: "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_",
          extra: {
            filterLabel: e.filterLabelForTitleTranslated,
            filterValue: e.label
          },
          type: "button",
          onClick: () => this.goToFilter({ modelValue: e })
        }, () => [
          e.filterLabelTranslated ? c("strong", {
            class: "a_filters_center__item__label",
            ariaHidden: !0
          }, [
            c(Ee, {
              tag: "span",
              html: e.filterLabelTranslated,
              textAfter: ":"
            })
          ]) : "",
          this.filter.slotName && this.$slots[this.filter.slotName] ? this.$slots[this.filter.slotName]({
            item: e.item,
            label: e.label,
            extra: e.extra,
            inFilterCenter: !0
          }) : c("span", {
            class: "a_filters_center__item__value"
          }, e.label)
        ]),
        this.filter.hasNotClose ? "" : c(Ae, {
          class: "a_btn a_btn_secondary",
          disabled: this.disabled,
          iconLeft: Ea,
          title: "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_",
          textScreenReader: "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_",
          extra: {
            filterLabel: e.filterLabelForTitleTranslated,
            filterValue: e.label
          },
          type: "button",
          onClick: () => this.closeCurrentFilterValue({ modelValue: e })
        })
      ]))
    ];
  }
};
function hq() {
  const e = B({}), t = ({ id: r, isLoading: s }) => {
    e.value[r] = s;
  };
  return {
    isLeastOneChildFilterLoading: _(() => {
      let r = !1;
      return z(e.value, (s) => {
        if (s)
          return r = !0, !1;
      }), r;
    }),
    updateLoadingChildFilters: t
  };
}
function Aq(e) {
  const t = d(e, "filtersGroup"), n = B({}), r = ({ id: u, isVisible: f }) => {
    n.value[u] = f;
  }, s = _(() => {
    let u = !1;
    return z(n.value, (f) => {
      if (f)
        return u = !0, !1;
    }), u;
  }), i = _(() => !!(t.value.alwaysVisible.length || t.value.filters.length)), o = _(() => s.value ? void 0 : "display: none;");
  return {
    hasFilters: i,
    styleHide: o,
    updateVisibleChildFilters: r
  };
}
const Eq = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-clockwise" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2z"/>
  <path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466"/>
</svg>`, pq = {
  name: "AFilterCenter",
  props: {
    appliedModel: {
      type: Object,
      required: !0
    },
    closeAllFilters: {
      type: Function,
      required: !0
    },
    closeFilterValue: {
      type: Function,
      required: !0
    },
    dataKeyByKeyIdPerFilter: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    filtersGroup: {
      type: Object,
      required: !0,
      default: () => ({
        alwaysVisible: [],
        filters: []
      })
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    filtersVisibleAll: {
      type: Array,
      required: !0
    },
    id: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      hasFilters: t,
      styleHide: n,
      updateVisibleChildFilters: r
    } = Aq(e), {
      isLeastOneChildFilterLoading: s,
      updateLoadingChildFilters: i
    } = hq();
    return {
      hasFilters: t,
      isLeastOneChildFilterLoading: s,
      styleHide: n,
      updateLoadingChildFilters: i,
      updateVisibleChildFilters: r
    };
  },
  render() {
    return this.hasFilters ? c("div", {
      class: "a_filters_center"
    }, [
      c("div", {
        class: "a_filters_center__item"
      }, [
        this.$slots.filtersHorizontal ? this.$slots.filtersHorizontal() : ""
      ]),
      this.filtersVisibleAll.map((e) => c(fq, {
        key: e.id,
        id: this.id,
        disabled: this.disabled,
        filter: e,
        closeFilterValue: this.closeFilterValue,
        dataKeyByKeyIdPerFilter: this.dataKeyByKeyIdPerFilter,
        model: this.appliedModel[e.id],
        onUpdateVisibleChildFilters: this.updateVisibleChildFilters,
        onUpdateLoadingChildFilters: this.updateLoadingChildFilters
      }, this.$slots)),
      this.isLeastOneChildFilterLoading ? c("div", {
        style: this.styleHide,
        class: "a_filters_center__item"
      }, [
        c(Il, {
          class: "a_spinner_small"
        })
      ]) : "",
      c("div", {
        class: "a_filters_center__item",
        style: this.styleHide
      }, [
        c(pt, {
          class: "a_btn a_btn_link a_btn_small",
          iconLeft: Eq,
          text: "_A_FILTERS_DESELECT_ALL_",
          onClick: this.closeAllFilters
        })
      ])
    ]) : null;
  }
};
function Tq(e, {
  model: t = B({})
}) {
  const n = d(e, "filtersSaved"), r = _(() => {
    const u = {};
    return z(n.value, (f) => {
      u[f.label] = !0;
    }), u;
  }), s = _(() => r.value[t.value.name]), i = _(() => {
    if (s.value)
      return "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_";
  });
  return {
    dataForm: _(() => [
      {
        id: "name",
        label: "_A_FILTERS_SAVE_LABEL_NAME_",
        type: "text",
        required: !0,
        extra: {
          name: t.value.name || ""
        },
        helpText: i.value
      }
    ]),
    isUpdate: s
  };
}
function Sq(e) {
  const t = d(e, "isModelFilterSavedNew"), n = d(e, "modelFiltersSaved"), r = B({});
  return {
    initModel: () => {
      n.value && !t.value && (r.value = {
        name: n.value
      });
    },
    model: r,
    updateModel: (o) => {
      r.value = o;
    }
  };
}
let LS = 5e3;
const cu = B({}), mq = _(() => Cc(cu.value));
let YE = 0;
function Mu() {
  return {
    addNotification: bq,
    removeNotification: bS,
    notifications: mq,
    setNotificationTimeout: Lq
  };
}
function Lq(e) {
  LS = e;
}
function bq({ text: e, type: t = "success", timeout: n, extra: r, useValuesFromObject: s = !0 }) {
  const i = le(n) ? LS : n, o = YE, u = t === "error" ? "danger" : t;
  let f = e;
  at(e) && s && (f = XP(e)), cu.value[o] = {
    text: f,
    type: u,
    index: o,
    extra: r
  }, YE++, i && setTimeout(() => {
    bS(o);
  }, i);
}
function bS(e) {
  cu.value[e] && delete cu.value[e];
}
function Iq(e, { emit: t }, {
  isUpdate: n = _(() => !1),
  model: r = B({})
}) {
  const s = d(e, "changeModelFiltersSaved"), i = d(e, "updateFiltersSaved"), o = B(void 0), {
    addNotification: u
  } = Mu(), f = _(() => !r.value.name), A = () => {
    t("close");
  };
  return {
    close: A,
    disabledBtnSave: f,
    loading: o,
    save: async () => {
      o.value = !0;
      const p = n.value;
      try {
        await i.value({
          action: p ? "update" : "create",
          label: r.value.name
        });
      } catch {
        u({
          text: "_A_FILTERS_SAVE_MSG_ERROR_",
          type: "danger"
        }), o.value = !1;
        return;
      }
      u({
        text: p ? "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_" : "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
        extra: {
          name: r.value.name
        }
      }), s.value({ model: r.value.name, isCreateOrEdit: !0 }), A(), o.value = !1;
    }
  };
}
const vq = {
  name: "AFiltersSaveModal",
  props: {
    changeModelFiltersSaved: {
      type: Function,
      required: !0
    },
    filtersSaved: {
      type: Array,
      required: !0
    },
    isModelFilterSavedNew: {
      type: Boolean,
      required: !0
    },
    modelFiltersSaved: {
      type: String,
      required: !1,
      default: void 0
    },
    selectorCloseIds: {
      type: String,
      required: !0
    },
    updateFiltersSaved: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "close"
  ],
  setup(e, t) {
    const {
      initModel: n,
      model: r,
      updateModel: s
    } = Sq(e), {
      dataForm: i,
      isUpdate: o
    } = Tq(e, {
      model: r
    }), {
      close: u,
      disabledBtnSave: f,
      loading: A,
      save: E
    } = Iq(e, t, {
      isUpdate: o,
      model: r
    });
    return n(), {
      close: u,
      dataForm: i,
      disabledBtnSave: f,
      initModel: n,
      loading: A,
      model: r,
      save: E,
      updateModel: s
    };
  },
  render() {
    return c(IU, {
      close: this.close,
      dataForm: this.dataForm,
      disabledSave: this.disabledBtnSave,
      headerText: "_A_FILTERS_SAVE_MODAL_HEADER_",
      modelValue: this.model,
      idPrefix: "modal_filter_top_",
      loading: this.loading,
      selectorCloseIds: this.selectorCloseIds,
      size: "large",
      save: this.save,
      stop: !0,
      zIndex: 1901,
      backdropZIndex: 1900,
      "onUpdate:modelValue": this.updateModel
    }, {
      modalBodyPrepend: () => [
        c(qc, {
          type: "info",
          isVisible: !0,
          safeHtml: "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_"
        })
      ]
    });
  }
};
function yq(e) {
  const t = d(e, "filtersGroup"), n = B(void 0), r = _(() => !!(t.value.alwaysVisible.length || t.value.filters.length));
  return {
    closeDropdown: () => {
      var o;
      (o = n.value) == null || o.onClose({ trigger: "click" });
    },
    dropdownRef: n,
    isDropdownVisible: r,
    openDropdown: (o) => {
      var u;
      (u = n.value) == null || u.onOpen({ trigger: "click", selectorToFocus: o });
    }
  };
}
function gq(e, {
  openDropdown: t = () => {
  }
}) {
  const n = d(e, "id");
  let r;
  return {
    destroyEventBus: () => {
      Rt.$off(r, t);
    },
    initEventBus: () => {
      Rt.$on(r, t);
    },
    initEventName: () => {
      r = `eventATableFilterTopOnOpen_${n.value}`;
    }
  };
}
function Rq(e, { emit: t }) {
  const n = d(e, "filtersGroup"), r = d(e, "filtersVisible"), s = ({ isAdd: E, filterId: p, filter: T }) => {
    t("toggleFiltersVisible", { isAdd: E, filterId: p, filter: T });
  }, i = ({ model: E }) => {
    s({ isAdd: !0, filterId: E });
  }, o = ({ filter: E }) => {
    s({ isAdd: !1, filterId: E.id, filter: E });
  }, u = _(() => !!(n.value.filters && n.value.filters.length)), f = _(() => {
    const E = {};
    return z(r.value, (p) => {
      E[p.id] = !0;
    }), E;
  }), A = _(() => u.value ? Lt(n.value.filters, (E) => !f.value[E.id]) : []);
  return {
    addFiltersVisible: i,
    deleteFiltersVisible: o,
    filtersHidden: A,
    hasFiltersHiddenDefault: u
  };
}
function Oq(e, {
  openDropdown: t = () => ({})
}) {
  const n = d(e, "filtersSaved"), r = d(e, "id"), s = d(e, "onUpdateModelFilters"), i = "_A_FILTERS_HOR_FILTER_NEW_", o = B(void 0), u = B(void 0), f = B(void 0), A = _(() => `${r.value}btn_save_`), E = _(() => u.value === i), p = _(() => {
    const I = [{
      label: i
    }];
    return z(he(n.value), (v) => {
      v.group = "_A_FILTERS_FILTER_SAVED_GROUP_MY_", I.push(v);
    }), I;
  });
  return {
    buttonSaveComponentId: A,
    changeModelFiltersSaved: ({ model: I, item: v, isDelete: R, isCreateOrEdit: g }) => {
      if (g) {
        u.value = I;
        return;
      }
      if ((v == null ? void 0 : v.label) === i || R) {
        s.value({
          fullModel: {},
          isUpdateFiltersVisible: !0
        }), u.value = i;
        return;
      }
      I ? (u.value = I, v && (s.value({
        fullModel: v.data || {},
        isUpdateFiltersVisible: !0
      }), t())) : v && (s.value({
        fullModel: v.data || {},
        isUpdateFiltersVisible: !0
      }), t());
    },
    closeModalSave: () => {
      o.value = !1;
    },
    filtersSavedLocal: p,
    initModelFiltersSaved: () => {
      u.value = i;
    },
    isModalSaveVisible: o,
    isModelFilterSavedNew: E,
    modelFiltersSaved: u,
    openModalSave: () => {
      f.value = A.value, o.value = !0;
    },
    selectorCloseIds: f
  };
}
const Rd = B(!0), nl = B({});
function _f() {
  const e = (r = {}) => {
    z(r, (s, i) => {
      nl.value[i] = s;
    });
  };
  return {
    changeConfirmOptions: e,
    closeConfirm: (r) => {
      r && Ne(nl.value.close) && nl.value.close(), Rd.value = !0, setTimeout(() => {
        nl.value = {};
      });
    },
    confirmOptions: nl,
    isModalHidden: Rd,
    openConfirm: (r = {}) => {
      e(r), Rd.value = !1;
    }
  };
}
function Cq(e, {
  changeModelFiltersSaved: t = () => {
  },
  idFilterTop: n = _(() => ""),
  isModelFilterSavedNew: r = _(() => !1),
  modelFiltersSaved: s = B(void 0)
}) {
  const i = d(e, "id"), o = d(e, "updateFiltersSaved"), {
    changeConfirmOptions: u,
    closeConfirm: f,
    isModalHidden: A,
    openConfirm: E
  } = _f(), {
    addNotification: p
  } = Mu(), T = _(() => `${i.value}btn_save`), S = _(() => r.value ? "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_" : {
    mobile: "_A_FILTERS_DELETE_FILTER_SAVED_BTN_"
  }), L = _(() => r.value ? "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_" : "_A_FILTERS_DELETE_FILTER_SAVED_BTN_"), b = async () => {
    u({
      loading: !0
    });
    try {
      await o.value({
        action: "delete",
        label: s.value
      });
    } catch {
      p({
        text: "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
        type: "danger",
        extra: {
          name: s.value
        }
      }), u({
        loading: !1
      });
      return;
    }
    p({
      text: "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
      extra: {
        name: s.value
      }
    }), u({
      loading: !1
    }), f(), t({ model: void 0, isDelete: !0 });
  };
  return {
    buttonDeleteId: T,
    isConfirmHidden: A,
    openDeleteConfirm: () => {
      E({
        headerText: "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
        bodyHtml: "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
        extra: {
          name: s.value
        },
        save: b,
        selectorCloseIds: [T.value, n.value],
        saveButtonText: "_A_FILTERS_DELETE_FILTER_BTN_DELETE_",
        stop: !0,
        zIndex: 1901,
        backdropZIndex: 1900
      });
    },
    textScreenreaderButtonDeleteFiltersSaved: L,
    titleButtonDeleteFiltersSaved: S
  };
}
function Dq(e) {
  const t = d(e, "filtersGroup"), n = d(e, "filtersVisible"), r = d(e, "updateDataKeyByIdFromFilter"), s = "a_column a_column_12_touch a_column_3_fullhd a_column_3_widescreen a_column_3_desktop", i = "a_columns a_columns_count_12 a_columns_gap_x_2 a_columns_gap_y_2 a_columns_gap_y_1_touch", o = "a_filters__form_element a_column a_column_12_touch a_column_9_fullhd a_column_9_widescreen a_column_9_desktop", u = ["select", "multiselect", "radio", "checkbox", "group", "fieldset"], f = ({ dataKeyByKeyId: E, item: p, filter: T }) => {
    let S = T.id;
    p && (S = p.id), r.value({
      filterId: S,
      dataKeyByKeyId: E
    });
  };
  return {
    dataForForm: _(() => {
      const E = [];
      return z(t.value.alwaysVisible, (p) => {
        const T = he(p);
        T.labelClass = s, T.classColumn = o, u.indexOf(p.type) !== -1 && (T.onUpdateData = ({ dataKeyByKeyId: S, item: L }) => f({ dataKeyByKeyId: S, item: L, filter: p })), E.push({
          type: "group",
          id: `group_${p.id}`,
          classColumns: i,
          children: [
            T
          ]
        });
      }), z(n.value, (p) => {
        const T = he(p);
        T.labelClass = s, T.classColumn = `${o}  a_d_flex a_align_items_center`, T.slotAppend = "groupAppend", T.class = "a_width_100", u.indexOf(p.type) !== -1 && (T.onUpdateData = ({ dataKeyByKeyId: S, item: L }) => f({ dataKeyByKeyId: S, item: L, filter: p })), E.push({
          type: "group",
          id: `group_${p.id}`,
          classColumns: i,
          children: [
            T
          ]
        });
      }), E;
    })
  };
}
function Nq(e) {
  const t = d(e, "id");
  return {
    idFilterTop: _(() => `${t.value}_filter_top`)
  };
}
function Bq(e, { emit: t }, {
  closeDropdown: n = () => {
  }
}) {
  const r = d(e, "disabled");
  return {
    onSearch: () => {
      r.value || (n(), t("startSearch"));
    }
  };
}
const wq = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-filter" viewBox="0 0 16 16">
  <path d="M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5m-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5"/>
</svg>`, Pq = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-floppy2-fill" viewBox="0 0 16 16">
  <path d="M12 2h-2v3h2z"/>
  <path d="M1.5 0A1.5 1.5 0 0 0 0 1.5v13A1.5 1.5 0 0 0 1.5 16h13a1.5 1.5 0 0 0 1.5-1.5V2.914a1.5 1.5 0 0 0-.44-1.06L14.147.439A1.5 1.5 0 0 0 13.086 0zM4 6a1 1 0 0 1-1-1V1h10v4a1 1 0 0 1-1 1zM3 9h10a1 1 0 0 1 1 1v5H2v-5a1 1 0 0 1 1-1"/>
</svg>`, IS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2"/>
</svg>`, vS = `<svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 1024 1024">
    <path d="M761.37 637.327l256.642 256.642q5.988 6.844 5.988 15.399t-5.988 15.399l-93.246 93.246q-6.844 5.988-15.399 5.988t-15.399-5.988l-256.642-256.642q-101.802 66.727-223.278 66.727-171.095 0-292.572-121.477t-121.477-292.572 121.477-292.572 292.572-121.477 292.572 121.477 121.477 292.572q0 121.477-66.727 223.278zM130.887 414.049q0 116.344 82.981 199.325t200.181 82.981 199.753-82.553 82.553-199.753-82.553-199.753-199.753-82.553-200.181 82.981-82.981 199.325z"></path>
</svg>
`, xq = {
  name: "AFiltersHorizontal",
  props: {
    canSave: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersGroup: {
      type: Object,
      required: !0,
      default: () => ({
        alwaysVisible: [],
        filters: []
      })
    },
    filtersKeyById: {
      type: Object,
      required: !0
    },
    filtersSaved: {
      type: Array,
      required: !0
    },
    filtersVisible: {
      type: Array,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    mainModel: {
      type: Object,
      required: !1
    },
    onUpdateModelFilters: {
      type: Function,
      required: !0
    },
    unappliedModel: {
      type: Object,
      required: !0
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    },
    updateFiltersSaved: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch",
    "toggleFiltersVisible"
  ],
  setup(e, t) {
    const {
      dataForForm: n
    } = Dq(e), {
      closeDropdown: r,
      dropdownRef: s,
      isDropdownVisible: i,
      openDropdown: o
    } = yq(e), {
      idFilterTop: u
    } = Nq(e), {
      onSearch: f
    } = Bq(e, t, {
      closeDropdown: r
    }), {
      destroyEventBus: A,
      initEventBus: E,
      initEventName: p
    } = gq(e, {
      openDropdown: o
    }), {
      addFiltersVisible: T,
      deleteFiltersVisible: S,
      filtersHidden: L,
      hasFiltersHiddenDefault: b
    } = Rq(e, t), {
      buttonSaveComponentId: I,
      changeModelFiltersSaved: v,
      closeModalSave: R,
      filtersSavedLocal: g,
      initModelFiltersSaved: D,
      isModalSaveVisible: w,
      isModelFilterSavedNew: F,
      modelFiltersSaved: P,
      openModalSave: M,
      selectorCloseIds: O
    } = Oq(e, {
      openDropdown: o
    }), {
      buttonDeleteId: q,
      isConfirmHidden: U,
      openDeleteConfirm: G,
      textScreenreaderButtonDeleteFiltersSaved: te,
      titleButtonDeleteFiltersSaved: ne
    } = Cq(e, {
      changeModelFiltersSaved: v,
      idFilterTop: u,
      isModelFilterSavedNew: F,
      modelFiltersSaved: P
    });
    return p(), D(), E(), Ot(() => {
      A();
    }), {
      addFiltersVisible: T,
      buttonDeleteId: q,
      buttonSaveComponentId: I,
      changeModelFiltersSaved: v,
      closeDropdown: r,
      closeModalSave: R,
      dataForForm: n,
      deleteFiltersVisible: S,
      dropdownRef: s,
      filtersHidden: L,
      filtersSavedLocal: g,
      hasFiltersHiddenDefault: b,
      idFilterTop: u,
      initModelFiltersSaved: D,
      isConfirmHidden: U,
      isDropdownVisible: i,
      isModalSaveVisible: w,
      isModelFilterSavedNew: F,
      modelFiltersSaved: P,
      onSearch: f,
      openDeleteConfirm: G,
      openModalSave: M,
      selectorCloseIds: O,
      textScreenreaderButtonDeleteFiltersSaved: te,
      titleButtonDeleteFiltersSaved: ne
    };
  },
  render() {
    return this.isDropdownVisible ? [
      c(la, {
        ref: "dropdownRef",
        buttonIconLeft: wq,
        buttonText: "Filter",
        buttonClass: "a_btn a_btn_primary a_btn_small a_filter_horizontal__btn_dropdown",
        dropdownTag: "div",
        dropdownClass: "a_filter_horizontal__wrapper",
        dropdownRenderDefault: !0,
        isCloseByClickInside: !1,
        hasCaret: !1,
        inBody: !0,
        lockArrowsNavigation: !1,
        lockTabNavigation: !1,
        useEscape: !this.isModalSaveVisible && this.isConfirmHidden
      }, {
        ...this.$slots,
        dropdown: () => c("div", {
          class: "a_filter_horizontal"
        }, [
          c("div", {
            class: "a_filter_horizontal__header__wrapper"
          }, [
            c("div", {
              class: "a_filter_horizontal__header"
            }, [
              c("div", {
                class: "a_filter_horizontal__header__texts"
              }, [
                c(Ee, {
                  class: "a_filter_horizontal__header__texts__filter",
                  tag: "span",
                  text: "_A_FILTERS_HOR_FILTER_HEADER_"
                }),
                this.isModelFilterSavedNew ? c(Ee, {
                  class: "a_filter_horizontal__header__texts__new",
                  tag: "em",
                  text: this.modelFiltersSaved
                }) : c("span", {}, this.modelFiltersSaved)
              ]),
              this.canSave ? c(qs, {
                modelValue: this.modelFiltersSaved,
                change: this.changeModelFiltersSaved,
                class: "a_filters_top__save_select",
                data: this.filtersSavedLocal,
                deselectable: !1,
                keyId: "label",
                keyLabel: "label",
                keyGroup: "group",
                label: "_A_FILTERS_SAVE_SELECT_",
                menuWidthType: "by_content",
                search: !0,
                translateData: !0,
                type: "select"
              }) : ""
            ])
          ]),
          c("div", {
            class: "a_filter_horizontal__body__wrapper"
          }, [
            c("div", {
              class: "a_filter_horizontal__body"
            }, [
              c(Fu, {
                idPrefix: this.idFilterTop,
                class: "a_filter_horizontal__body__form",
                classColumnDefault: "",
                classColumns: "",
                data: this.dataForForm,
                excludeRenderAttributes: this.excludeRenderAttributes,
                modelValue: this.unappliedModel,
                showErrors: !1,
                onChange: this.onUpdateModelFilters
              }, {
                ...this.$slots,
                groupAppend: ({ item: e }) => c(Ae, {
                  type: "button",
                  class: "a_btn a_btn_primary a_ml_2",
                  title: "_A_FILTERS_TOP_CLOSE_",
                  textScreenReader: "_A_FILTERS_TOP_CLOSE_",
                  iconLeft: Ea,
                  stop: !0,
                  onClick: () => this.deleteFiltersVisible({ filter: e })
                }),
                formDataAppend: () => c("div", {
                  class: "a_filter_horizontal__add_filter__wrapper"
                }, [
                  c(qs, {
                    buttonClassDefault: "a_btn a_btn_primary a_filter_horizontal__add_filter",
                    change: this.addFiltersVisible,
                    data: this.filtersHidden,
                    hasCaret: !1,
                    disabled: !this.filtersHidden.length,
                    isLabelFloat: !1,
                    keyGroup: "group",
                    keyId: "id",
                    keyLabel: "label",
                    label: "_A_FILTERS_ADD_FILTER_",
                    labelClass: "a_sr_only",
                    menuWidthType: "by_content",
                    sortOrderGroup: "asc",
                    placement: "bottom-start",
                    search: !0,
                    translateData: !0,
                    type: "select"
                  }, {
                    fixedPlaceholder: () => [
                      c(Ee, {
                        tag: "span",
                        ariaHidden: !0,
                        class: "a_position_absolute_all",
                        title: "_A_FILTERS_ADD_FILTER_"
                      }),
                      c(_t, {
                        icon: IS
                      })
                    ]
                  })
                ]),
                formAppend: () => this.canSave ? c("div", {
                  class: "a_filter_horizontal__save_actions"
                }, [
                  c(Ae, {
                    id: this.buttonSaveComponentId,
                    class: "a_btn a_btn_primary",
                    iconLeft: Pq,
                    type: "button",
                    text: "_A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_",
                    onClick: this.openModalSave
                  }),
                  c(Ae, {
                    id: this.buttonDeleteId,
                    ariaDisabled: this.isModelFilterSavedNew,
                    class: "a_btn a_btn_secondary",
                    iconLeft: of,
                    text: {
                      desktop: "_A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_"
                    },
                    textAriaHidden: !0,
                    textScreenReader: this.textScreenreaderButtonDeleteFiltersSaved,
                    title: this.titleButtonDeleteFiltersSaved,
                    type: "button",
                    onClick: this.openDeleteConfirm
                  })
                ]) : ""
              })
            ]),
            c("div", {
              class: "a_filter_horizontal__footer"
            }, [
              c("div", {
                class: "a_filter_horizontal__footer__actions"
              }, [
                c(Ae, {
                  type: "button",
                  class: "a_btn a_btn_primary a_text_nowrap a_filter_horizontal__footer__actions__btn_search",
                  iconLeft: vS,
                  text: "_A_FILTERS_START_SEARCH_",
                  disabled: this.disabled,
                  onClick: this.onSearch
                }),
                c(Ae, {
                  type: "button",
                  class: "a_btn a_btn_secondary a_text_nowrap a_filter_horizontal__footer__actions__btn_close",
                  text: "_A_FILTERS_HOR_CLOSE_DROPDOWN_",
                  onClick: this.closeDropdown
                })
              ])
            ])
          ])
        ])
      }),
      this.isModalSaveVisible ? c(vq, {
        changeModelFiltersSaved: this.changeModelFiltersSaved,
        filtersSaved: this.filtersSaved,
        isModelFilterSavedNew: this.isModelFilterSavedNew,
        modelFiltersSaved: this.modelFiltersSaved,
        selectorCloseIds: this.selectorCloseIds,
        updateFiltersSaved: this.updateFiltersSaved,
        onClose: this.closeModalSave
      }) : ""
    ] : null;
  }
};
function Mq(e) {
  const t = d(e, "id");
  return {
    idFilterTop: _(() => `${t.value}_filter_main`)
  };
}
function Fq(e) {
  const t = d(e, "filterMain"), n = _(() => !!t.value), r = _(() => n.value ? [
    t.value
  ] : []);
  return {
    hasFilterMain: n,
    dataMainFilter: r
  };
}
function qq(e, { emit: t }) {
  const n = d(e, "disabled");
  return {
    onSearch: () => {
      n.value || t("startSearch");
    }
  };
}
const $q = {
  name: "AFiltersMain",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filterMain: {
      type: Object,
      required: !1
    },
    id: {
      type: String,
      required: !0
    },
    mainModel: {
      type: Object,
      required: !1
    },
    updateDataKeyByIdFromFilter: {
      type: Function,
      required: !0
    },
    updateMainModel: {
      type: Function,
      required: !0
    }
  },
  emits: [
    "startSearch"
  ],
  setup(e, t) {
    const {
      hasFilterMain: n,
      dataMainFilter: r
    } = Fq(e), {
      idFilterTop: s
    } = Mq(e), {
      onSearch: i
    } = qq(e, t);
    return {
      hasFilterMain: n,
      dataMainFilter: r,
      idFilterTop: s,
      onSearch: i
    };
  },
  render() {
    return this.hasFilterMain ? c("div", {
      id: this.idFilterTop,
      class: "a_filters_top"
    }, [
      c(Fu, {
        idPrefix: this.idFilterTop,
        class: "a_filters_top__form",
        classColumns: "a_filters_top__main_wrapper",
        classColumnDefault: "a_filters_top__main",
        data: this.dataMainFilter,
        excludeRenderAttributes: this.excludeRenderAttributes,
        modelValue: this.mainModel,
        showErrors: !1,
        onChange: this.updateMainModel
      }, {
        formDataAppend: () => c(pt, {
          class: "a_btn a_btn_primary a_text_nowrap a_filters_top__search",
          iconLeft: xl,
          type: "submit",
          text: {
            desktop: "_A_FILTERS_START_SEARCH_"
          },
          textScreenReader: {
            mobile: "_A_FILTERS_START_SEARCH_"
          },
          prevent: !0,
          stop: !0,
          disabled: this.disabled,
          onClick: this.onSearch
        })
      })
    ]) : null;
  }
};
function Uq(e, { emit: t }, {
  filtersHorizontalRef: n = B(void 0),
  filtersVisibleAll: r = _(() => []),
  onUpdateModelFilters: s = () => {
  }
}) {
  const i = d(e, "appliedModel"), o = d(e, "unappliedModel"), u = () => {
    var p;
    (p = n.value) == null || p.initModelFiltersSaved();
  }, f = ({ filter: p, keyId: T, modelArray: S, appliedModelLocal: L, unappliedModelLocal: b }) => {
    const I = p.id;
    return sf.value[p.type] ? (L[I] && L[I].length && (S ? L[I] = Lt(L[I], (v) => S.indexOf(v) === -1) : L[I] = []), b[I] && b[I].length && (S ? b[I] = Lt(b[I], (v) => S.indexOf(v) === -1) : b[I] = [])) : _S.value[p.type] && T ? (at(b == null ? void 0 : b[I]) && (b[I][T] = void 0), at(L == null ? void 0 : L[I]) && (L[I][T] = void 0)) : (b[I] = void 0, L[I] = void 0), {
      appliedModelLocal: L,
      unappliedModelLocal: b
    };
  };
  return {
    closeAllFilters: () => {
      let p = he(i.value), T = he(o.value);
      z(r.value, (S) => {
        const L = f({
          filter: S,
          appliedModelLocal: p,
          unappliedModelLocal: T
        });
        p = L.appliedModelLocal, T = L.unappliedModelLocal;
      }), u(), t("update:unappliedModel", T), t("update:appliedModel", p), setTimeout(() => {
        s({ fullModel: i.value });
      });
    },
    closeFilterValue: ({ filter: p, keyId: T, modelArray: S }) => {
      const L = he(i.value), b = he(o.value), {
        appliedModelLocal: I,
        unappliedModelLocal: v
      } = f({
        filter: p,
        keyId: T,
        modelArray: S,
        appliedModelLocal: L,
        unappliedModelLocal: b
      });
      t("update:unappliedModel", v), t("update:appliedModel", I), setTimeout(() => {
        s({ fullModel: i.value });
      });
    }
  };
}
function kq() {
  const e = B({});
  return {
    dataKeyByKeyIdPerFilter: e,
    updateDataKeyByIdFromFilter: ({ dataKeyByKeyId: n, filterId: r }) => {
      e.value[r] = he(n);
    }
  };
}
function Hq(e) {
  const t = d(e, "excludeRenderAttributes"), n = [
    "alwaysVisible"
  ];
  return {
    excludeRenderAttributesComputed: _(() => mP(n, t.value))
  };
}
function Vq({ filter: e = {}, modelObj: t = {} }) {
  var r;
  const n = e.id;
  return n in t ? sf.value[e.type] ? !!((r = t[n]) != null && r.length) : _S.value[e.type] ? !!(t[n] && !En(t[n])) : !0 : !1;
}
function Wq(e, { emit: t }) {
  const n = d(e, "filters"), r = d(e, "filterMain"), s = d(e, "unappliedModel"), i = B({}), o = B(void 0), u = B([]), f = _(() => !!(n.value.length || r.value)), A = _(() => {
    const v = {};
    return z(he(n.value), (R) => {
      v[R.id] = R, yi.value[R.type] && R.children && R.children.length && z(R.children, (g) => {
        v[g.id] = g;
      });
    }), v;
  }), E = _(() => {
    const v = {
      alwaysVisible: [],
      filters: []
    };
    return z(he(n.value), (R) => {
      R.alwaysVisible ? v.alwaysVisible.push(R) : v.filters.push(R);
    }), v;
  }), p = _(() => {
    const v = [];
    return z(u.value, (R) => {
      A.value[R] && v.push(A.value[R]);
    }), v;
  }), T = _(() => {
    const v = [];
    v.push(...n.value);
    const R = [];
    return z(v, (g) => {
      R.push(g), yi.value[g.type] && g.children && g.children.length && z(g.children, (D) => {
        R.push(D);
      });
    }), R;
  }), S = () => {
    const v = [];
    z(E.value.filters, (R) => {
      Vq({
        filter: R,
        modelObj: s.value
      }) && v.push(R.id);
    }), u.value = v;
  };
  return {
    filtersDataKeyById: i,
    filtersGroup: E,
    filtersHorizontalRef: o,
    filtersKeyById: A,
    filtersVisible: p,
    filtersVisibleAll: T,
    filtersVisibleIds: u,
    hasFilters: f,
    onUpdateModelFilters: ({ fullModel: v, isUpdateFiltersVisible: R }) => {
      t("update:unappliedModel", v), R && setTimeout(() => {
        S();
      });
    },
    setFiltersVisibleIds: S,
    updateAppliedModel: ({ fullModel: v }) => {
      t("update:appliedModel", v);
    },
    updateMainModel: ({ fullModel: v }) => {
      t("update:mainModel", v);
    }
  };
}
function Gq(e) {
  const t = d(e, "filtersSaved"), n = d(e, "unappliedModel"), r = d(e, "updateFiltersSaved"), s = B([]);
  return {
    filtersSavedLocal: s,
    initFiltersSaved: () => {
      s.value = t.value || [];
    },
    updateFiltersSavedLocal: ({ action: u = "", label: f = "" }) => {
      if (u === "create")
        s.value.push({
          label: f,
          data: he(n.value)
        });
      else {
        const A = Ns(s.value, ["label", f]);
        A !== -1 && (u === "delete" ? s.value.splice(A, 1) : u === "update" && s.value.splice(A, 1, {
          label: f,
          data: he(n.value)
        }));
      }
      Ne(r.value) && r.value({
        action: u,
        label: f,
        model: n.value,
        filtersSaved: s.value
      });
    }
  };
}
function jq(e, { emit: t }, {
  onUpdateModelFilters: n = () => {
  }
}) {
  const r = d(e, "appliedModel"), s = d(e, "unappliedModel");
  return {
    startSearch: () => {
      t("update:appliedModel", s.value), setTimeout(() => {
        n({ fullModel: r.value });
      });
    }
  };
}
function Kq(e, {
  dataKeyByKeyIdPerFilter: t = B({}),
  filtersVisibleIds: n = B([]),
  onUpdateModelFilters: r = () => {
  }
}) {
  const s = d(e, "unappliedModel");
  return {
    toggleFiltersVisible: ({ isAdd: o = !0, filterId: u, filter: f }) => {
      var A, E;
      if (o)
        n.value.push(u);
      else {
        const p = n.value.indexOf(u);
        p !== -1 && n.value.splice(p, 1);
        const T = he(s.value);
        if (f && f.modelId) {
          const S = (A = t.value) == null ? void 0 : A[u];
          (E = T == null ? void 0 : T[f.modelId]) != null && E.length && S ? T[f.modelId] = Lt(T[f.modelId], (L) => !S[L]) : T[u] = void 0;
        } else
          T[u] = void 0;
        r({ fullModel: T });
      }
    }
  };
}
const mfe = {
  name: "AFilters",
  props: {
    appliedModel: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canSave: {
      type: Boolean,
      required: !1
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    filterMain: {
      type: Object,
      required: !1
    },
    filters: {
      type: Array,
      required: !1,
      default: () => []
    },
    filtersSaved: {
      type: Array,
      required: !1,
      default: () => []
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_filters_")
    },
    mainModel: {
      type: Object,
      required: !1
    },
    unappliedModel: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    updateFiltersSaved: {
      type: Function,
      required: !1,
      default: void 0
    },
    view: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => ["top", "right"].indexOf(e) !== -1
    },
    viewRightTeleportSelector: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "startSearch",
    "update:appliedModel",
    "update:mainModel",
    "update:unappliedModel"
  ],
  setup(e, t) {
    const n = d(e, "filtersSaved"), {
      filtersDataKeyById: r,
      filtersGroup: s,
      filtersHorizontalRef: i,
      filtersKeyById: o,
      filtersVisible: u,
      filtersVisibleAll: f,
      filtersVisibleIds: A,
      hasFilters: E,
      onUpdateModelFilters: p,
      setFiltersVisibleIds: T,
      updateAppliedModel: S,
      updateMainModel: L
    } = Wq(e, t), {
      closeAllFilters: b,
      closeFilterValue: I
    } = Uq(e, t, {
      filtersHorizontalRef: i,
      filtersVisibleAll: f,
      onUpdateModelFilters: p
    }), {
      dataKeyByKeyIdPerFilter: v,
      updateDataKeyByIdFromFilter: R
    } = kq(), {
      toggleFiltersVisible: g
    } = Kq(e, {
      dataKeyByKeyIdPerFilter: v,
      filtersVisibleIds: A,
      onUpdateModelFilters: p
    }), {
      startSearch: D
    } = jq(e, t, {
      onUpdateModelFilters: p
    }), {
      filtersSavedLocal: w,
      initFiltersSaved: F,
      updateFiltersSavedLocal: P
    } = Gq(e), {
      excludeRenderAttributesComputed: M
    } = Hq(e);
    return rt(n, () => {
      F();
    }, {
      deep: !0
    }), T(), F(), {
      closeAllFilters: b,
      closeFilterValue: I,
      dataKeyByKeyIdPerFilter: v,
      excludeRenderAttributesComputed: M,
      filtersDataKeyById: r,
      filtersGroup: s,
      filtersHorizontalRef: i,
      filtersKeyById: o,
      filtersSavedLocal: w,
      filtersVisible: u,
      filtersVisibleAll: f,
      filtersVisibleIds: A,
      hasFilters: E,
      onUpdateModelFilters: p,
      setFiltersVisibleIds: T,
      startSearch: D,
      toggleFiltersVisible: g,
      updateAppliedModel: S,
      updateDataKeyByIdFromFilter: R,
      updateFiltersSavedLocal: P,
      updateMainModel: L
    };
  },
  render() {
    if (this.hasFilters)
      return c(
        "div",
        [
          this.view === "top" && c($q, {
            id: this.id,
            disabled: this.disabled,
            excludeRenderAttributes: this.excludeRenderAttributesComputed,
            filterMain: this.filterMain,
            mainModel: this.mainModel,
            updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
            updateMainModel: this.updateMainModel,
            onStartSearch: this.startSearch
          }, this.$slots),
          this.view === "right" && c(oa, {
            to: this.viewRightTeleportSelector,
            disabled: !this.viewRightTeleportSelector
          }, [
            c(rq, {
              id: this.id,
              disabled: this.disabled,
              excludeRenderAttributes: this.excludeRenderAttributesComputed,
              filters: this.filters,
              filtersKeyById: this.filtersKeyById,
              appliedModel: this.appliedModel,
              onUpdateModelFilters: this.updateAppliedModel,
              updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
              onStartSearch: this.startSearch
            }, this.$slots)
          ]),
          c(pq, {
            id: this.id,
            appliedModel: this.appliedModel,
            closeAllFilters: this.closeAllFilters,
            closeFilterValue: this.closeFilterValue,
            dataKeyByKeyIdPerFilter: this.dataKeyByKeyIdPerFilter,
            disabled: this.disabled,
            filtersGroup: this.filtersGroup,
            filtersKeyById: this.filtersKeyById,
            filtersVisibleAll: this.filtersVisibleAll
          }, {
            filtersHorizontal: () => this.view === "top" ? c(xq, {
              ref: "filtersHorizontalRef",
              id: this.id,
              canSave: this.canSave,
              disabled: this.disabled,
              excludeRenderAttributes: this.excludeRenderAttributesComputed,
              filtersGroup: this.filtersGroup,
              filtersKeyById: this.filtersKeyById,
              filtersSaved: this.filtersSavedLocal,
              filtersVisible: this.filtersVisible,
              onUpdateModelFilters: this.onUpdateModelFilters,
              unappliedModel: this.unappliedModel,
              updateDataKeyByIdFromFilter: this.updateDataKeyByIdFromFilter,
              updateFiltersSaved: this.updateFiltersSavedLocal,
              onStartSearch: this.startSearch,
              onToggleFiltersVisible: this.toggleFiltersVisible
            }, this.$slots) : "",
            ...this.$slots
          })
        ]
      );
  }
}, zq = {
  name: "ARequired",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    text: {
      type: String,
      required: !1,
      default: "_A_REQUIRED_TEXT_"
    }
  },
  render() {
    return c(Ee, {
      alwaysTranslate: this.alwaysTranslate,
      class: "a_required",
      html: this.text
    });
  }
};
function Yq(e) {
  const t = d(e, "isHide");
  return {
    styleFormHide: _(() => t.value ? "display: none;" : "")
  };
}
function Xq(e, { emit: t }) {
  const n = d(e, "modelValue"), r = _(() => n.value || {});
  return {
    modelValueLocal: r,
    onUpdateModelLocal: ({ currentModel: i, id: o, item: u, model: f, props: A, component: E }) => {
      const p = he(r.value);
      wc(p, o, he(f)), t("update:modelValue", p), t("change", { currentModel: i, id: o, item: u, fullModel: p, model: f, props: A }), Ne(E.change) && E.change({ currentModel: i, id: o, item: u, fullModel: p, model: f, props: A });
    }
  };
}
function Zq(e) {
  const t = d(e, "data"), n = d(e, "isRequired"), r = d(e, "readonly");
  return {
    isRequiredLocal: _(() => {
      if (r.value)
        return !1;
      if (n.value)
        return !0;
      let i = !1;
      return z(t.value, (o) => {
        if (o.required)
          return i = !0, !1;
      }), i;
    })
  };
}
const Fu = {
  name: "AForm",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    classColumns: {
      type: [String, Object],
      required: !1,
      default: "a_columns a_columns_count_12 a_columns_gap_2"
    },
    classColumnDefault: {
      type: [String, Object],
      required: !1,
      default: "a_column a_column_12"
    },
    data: {
      type: Array,
      required: !0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isRequired: {
      type: Boolean,
      required: !1
    },
    modelValue: {
      type: Object,
      required: !1,
      default: void 0
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    showErrors: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tag: {
      type: String,
      required: !1,
      default: "form"
    },
    textRequired: {
      type: String,
      required: !1,
      default: void 0
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "update:modelValue",
    "change"
  ],
  setup(e, t) {
    const {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      modelValueLocal: r,
      onUpdateModelLocal: s
    } = Xq(e, t), {
      styleFormHide: i
    } = Yq(e), {
      isRequiredLocal: o
    } = Zq(e);
    return {
      attributesToExcludeFromRender: n,
      componentTypesMapping: () => ({
        ...Fl,
        ...uf,
        ...Wn.components,
        ...Wn.containerComponents
      }),
      isRequiredLocal: o,
      modelValueLocal: r,
      onUpdateModelLocal: s,
      styleFormHide: i
    };
  },
  render() {
    return this.isRender ? c(this.tag, {
      class: "a_form",
      style: this.styleFormHide
    }, [
      this.$slots.formPrepend ? this.$slots.formPrepend() : "",
      this.isRequiredLocal ? c(zq, {
        text: this.textRequired
      }) : "",
      this.$slots.formPrependAfterRequired ? this.$slots.formPrependAfterRequired() : "",
      this.showErrors ? c(d0, {
        alwaysTranslate: this.alwaysTranslate,
        errors: this.errors,
        closable: !1,
        optionsList: this.data,
        idPrefix: this.idPrefix,
        textErrorHeader: this.textErrorHeader
      }) : "",
      c("div", {
        class: this.classColumns
      }, [
        this.$slots.formDataPrepend ? this.$slots.formDataPrepend() : "",
        ...this.data.map((e, t) => {
          const n = yi.value[e.type];
          let r;
          le(e.classColumn) ? r = this.classColumnDefault : e.classColumn && (r = e.classColumn);
          const s = this.componentTypesMapping()[e.type];
          return c(s, {
            key: t,
            alwaysTranslate: this.alwaysTranslate,
            modelValue: n ? this.modelValueLocal : ce(this.modelValueLocal, e.id),
            modelDependencies: n ? this.modelValueLocal : void 0,
            class: r,
            errors: this.errors[e.id],
            errorsAll: n ? this.errors : void 0,
            idPrefix: this.idPrefix,
            excludeRenderAttributes: this.excludeRenderAttributes,
            ...e,
            change: ({ currentModel: i, id: o, item: u, model: f, props: A }) => this.onUpdateModelLocal({
              currentModel: i,
              id: o,
              item: u,
              model: f,
              props: A,
              component: e
            }),
            readonly: this.readonly || e.readonly,
            readonlyDefault: "readonlyDefault" in e && !Be(e.readonlyDefault) ? e.readonlyDefault : this.readonlyDefault,
            classColumn: void 0,
            ...this.attributesToExcludeFromRender
          }, this.$slots);
        }),
        this.$slots.formDataAppend ? this.$slots.formDataAppend() : ""
      ]),
      this.$slots.formAppend ? this.$slots.formAppend() : ""
    ]) : null;
  }
}, Lfe = {
  name: "AFormElement",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    change: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    errors: {
      type: [String, Array],
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    htmlId: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    idPrefix: {
      type: String,
      required: !1,
      default: void 0
    },
    isHide: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRender: {
      type: Boolean,
      required: !1,
      default: !0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelDependencies: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelValue: {
      required: !1,
      default: void 0
    },
    options: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    readonly: {
      type: Boolean,
      required: !1
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    type: {
      type: String,
      required: !0
    }
  },
  emits: [
    "update:modelValue"
  ],
  setup(e, { emit: t, slots: n }) {
    const r = d(e, "options"), s = d(e, "type"), i = () => ({
      ...Fl,
      ...uf,
      ...Wn.components,
      ...Wn.containerComponents
    });
    return () => {
      const o = i()[s.value];
      return c(o, {
        ...e,
        ...r.value,
        "onUpdate:modelValue": (u) => t("update:modelValue", u)
      }, n);
    };
  }
};
function Jq({ emit: e }) {
  return {
    clearLocal: ({ $event: n }) => {
      n.stopPropagation(), n.preventDefault(), e("clear", n);
    }
  };
}
const qu = {
  name: "AFormElementBtnClear",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    class: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_transparent_dark a_btn_small"
    },
    icon: {
      type: String,
      required: !1,
      default: Ea
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    title: {
      type: String,
      required: !1,
      default: "_REMOVE_FIELD_CONTENT_"
    },
    textScreenReader: {
      type: String,
      required: !1,
      default: "_REMOVE_FIELD_CONTENT_"
    },
    tabindex: {
      type: Number,
      required: !1,
      default: -1
    },
    iconClass: {
      type: String,
      required: !1,
      default: "a_form_element__btn_close__icon"
    }
  },
  emits: [
    "clear"
  ],
  setup(e, t) {
    const {
      clearLocal: n
    } = Jq(t);
    return {
      clearLocal: n
    };
  },
  render() {
    if (!this.disabled)
      return c(Ae, {
        class: [
          "a_form_control__actions__btn",
          this.class
        ],
        disabled: this.disabled,
        iconClass: this.iconClass,
        iconLeft: this.icon,
        onClick: this.clearLocal,
        tabindex: this.tabindex,
        textScreenReader: this.textScreenReader,
        title: this.title,
        type: "button"
      });
  }
};
function Qq(e) {
  const t = d(e, "id"), n = d(e, "helpText"), r = d(e, "label"), s = d(e, "labelScreenReader"), i = de("isRangeProvide", !1), o = _(() => `${t.value}_label`), u = _(() => `${t.value}_help_text`), f = _(() => `${t.value}_value`), A = _(() => {
    if (!i.value && (r.value || s.value))
      return o.value;
  }), E = _(() => {
    if (!i.value)
      return !le(n.value) && n.value !== "" ? `${f.value} ${u.value}` : `${f.value}`;
  }), p = _(() => {
    if (!i.value)
      return "group";
  });
  return {
    ariaDescribedby: E,
    ariaLabelledby: A,
    helpTextId: u,
    isRangeProvide: i,
    labelId: o,
    role: p,
    valueId: f
  };
}
function e$(e) {
  const t = d(e, "modelValue"), n = d(e, "readonlyDefault");
  return {
    modelValueReadonly: _(() => le(t.value) || t.value === "" ? n.value : t.value)
  };
}
const Sn = {
  name: "AFormReadonly",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    collapsible: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    helpText: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !0
    },
    isCollapsed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isRange: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    label: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelScreenReader: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    modelValue: {
      type: [String, Number, Object, Array, Boolean],
      required: !1,
      default: void 0
    },
    readonlyDefault: {
      type: String,
      required: !1,
      default: ""
    },
    required: {
      type: Boolean,
      required: !1,
      default: !1
    },
    type: {
      type: String,
      required: !1,
      default: void 0
    },
    valueClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    valueParentClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    valueTag: {
      type: String,
      required: !1,
      default: "span"
    }
  },
  setup(e) {
    const t = d(e, "isRange"), {
      attributesToExcludeFromRender: n
    } = Nt(e), {
      ariaDescribedby: r,
      ariaLabelledby: s,
      helpTextId: i,
      labelId: o,
      role: u,
      valueId: f
    } = Qq(e), {
      modelValueReadonly: A
    } = e$(e);
    return Je("isRangeProvide", t), {
      ariaDescribedby: r,
      ariaLabelledby: s,
      attributesToExcludeFromRender: n,
      helpTextId: i,
      labelId: o,
      modelValueReadonly: A,
      role: u,
      valueId: f
    };
  },
  render() {
    return c("div", {
      "aria-labelledby": this.ariaLabelledby,
      "aria-describedby": this.ariaDescribedby,
      class: "a_form_element_readonly",
      role: this.role,
      ...this.attributesToExcludeFromRender
    }, [
      this.label || this.labelScreenReader ? c(Ut, {
        id: this.id,
        alwaysTranslate: this.alwaysTranslate,
        extra: this.extra,
        isLabelFloat: !1,
        label: this.label,
        labelClass: this.labelClass,
        labelScreenReader: this.labelScreenReader,
        readonly: !0,
        required: !1,
        tag: "div",
        type: this.type
      }) : "",
      c("div", {
        id: this.valueId,
        class: [
          "a_form_element_readonly_value",
          this.valueParentClass
        ]
      }, [
        this.$slots.default ? this.$slots.default() : c(Ee, {
          class: this.valueClass,
          extra: this.extra,
          html: this.modelValueReadonly,
          tag: this.valueTag
        })
      ]),
      c(Yt, {
        id: this.helpTextId,
        alwaysTranslate: this.alwaysTranslate,
        html: this.helpText,
        extra: this.extra
      })
    ]);
  }
}, Qd = {
  name: "AGet",
  props: {
    keyLabel: {
      type: [String, Array],
      required: !0,
      info: "Weg zu Informationen. Z.B.('a[0].b.c', 'vertrag.antrag_obj.pk', ['vertrag', aloha, 'pk'])"
    },
    data: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Haupt-Objekt oder -Array, wo man sucht"
    },
    tag: {
      type: String,
      required: !1,
      default: "span",
      info: "Semantisch-relevanter HTML-Tag.(span, div, ...)"
    },
    defaultValue: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Standardwert, wenn Lodash-Funktion 'get' undefined zurückschickt"
    },
    filter: {
      type: String,
      required: !1,
      default: void 0
    },
    filterParameters: {
      type: [Object, String, Number, Boolean],
      required: !1,
      default: () => {
      }
    },
    replacedWithDefault: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol],
      required: !1,
      default: void 0,
      info: "Wenn das Wert, das Lodash-Funktion 'get' zurückschickt, === this.replacedWithDefault, dann this.defaultValue"
    }
  },
  setup() {
    return jn();
  },
  computed: {
    valueLocal() {
      let e = ce(this.data, this.keyLabelLocal);
      if (le(e) && (e = this.defaultValue), this.isValueEqualsWithValueThenDefaultValue(e))
        return this.defaultValue;
      if (this.filter) {
        const t = `filter${jp(this.filter)}`;
        if (Ne(this[t]))
          return this[t](e, this.filterParameters);
        console.warn(`filter "${t}" ist not defined`);
      }
      return e;
    },
    keyLabelLocal() {
      return Te(this.keyLabel) ? this.keyLabel.join(".") : this.keyLabel;
    }
  },
  methods: {
    isValueEqualsWithValueThenDefaultValue(e) {
      if (Be(this.replacedWithDefault))
        return !1;
      let t = !1;
      return Te(this.replacedWithDefault) ? z(this.replacedWithDefault, (n) => {
        if (n === e)
          return t = !0, !1;
      }) : this.replacedWithDefault === e && (t = !0), t;
    }
  },
  render() {
    return Dt(c(this.tag), [
      [Kt, this.valueLocal]
    ]);
  }
}, $u = {
  name: "ALink",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    attributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "aloha_element"
    },
    classDefaultHidden: {
      type: String,
      required: !1,
      default: "aloha_element__hidden"
    },
    classDisabled: {
      type: String,
      required: !1,
      default: "disabled"
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    excludeRenderAttributes: {
      type: Array,
      required: !1,
      default: () => []
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    extraData: {
      type: [String, Number, Boolean, Array, Object, Date, Function, Symbol, null, void 0],
      required: !1,
      default: void 0
    },
    href: {
      type: String,
      required: !1,
      default: void 0
    },
    html: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    htmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    iconAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    iconClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconLeft: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconRight: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    iconTag: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_link_")
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    loading: {
      type: Boolean,
      required: !1,
      default: !1
    },
    loadingAlign: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    loadingClass: {
      type: [String, Object],
      required: !1,
      default: "a_spinner_small"
    },
    safeHtml: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    safeHtmlScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    stop: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    target: {
      type: String,
      required: !1,
      default: void 0
    },
    text: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textAfter: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textAriaHidden: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    textBefore: {
      type: [String, Number, Object],
      required: !1,
      default: void 0
    },
    textClass: {
      type: String,
      required: !1,
      default: void 0
    },
    textScreenReader: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    textTag: {
      type: String,
      required: !1,
      default: "span"
    },
    title: {
      type: [String, Number, Object, Array],
      required: !1,
      default: void 0
    },
    titleAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Gn.indexOf(e) !== -1
    },
    titleZIndex: {
      type: [Number, String],
      required: !1,
      default: "auto",
      validator: (e) => ot(e) ? e === "auto" : ha(e)
    },
    to: {
      type: [Object, String],
      required: !1,
      default: void 0
    }
  },
  emits: [
    "click"
  ],
  setup(e, t) {
    const {
      clickEmit: n
    } = NT(e, t);
    return {
      clickEmit: n
    };
  },
  render() {
    return c(Ae, {
      ...this.$attrs,
      ...this.$props,
      type: "link",
      onClick: this.clickEmit
    }, this.$slots);
  }
};
function t$(e) {
  const t = d(e, "isLast"), n = d(e, "hasDropdownActions"), r = d(e, "hasDividerBeforeDropdown"), s = _(() => t.value && n.value), i = _(() => s.value && !r.value);
  return {
    isDropdownActionsAfterGroup: _(() => s.value && r.value),
    isDropdownActionsInGroup: i
  };
}
const n$ = {
  name: "AGroupButtonDropdownItem",
  props: {
    actionsClasses: {
      type: Array,
      required: !0
    },
    actionsIds: {
      type: Array,
      required: !0
    },
    actionsDropdown: {
      type: Array,
      required: !0
    },
    btnGroupClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn_group"
    },
    data: {
      type: Object,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !0
    },
    hasDividerBeforeDropdown: {
      type: Boolean,
      required: !0
    },
    hasDropdownActions: {
      type: Boolean,
      required: !0
    },
    isLast: {
      type: Boolean,
      required: !0
    }
  },
  setup(e) {
    const {
      isDropdownActionsAfterGroup: t,
      isDropdownActionsInGroup: n
    } = t$(e);
    return {
      isDropdownActionsAfterGroup: t,
      isDropdownActionsInGroup: n
    };
  },
  render() {
    return [
      !!this.data.children.length && c("div", {
        class: this.btnGroupClass
      }, [
        ...this.data.children.map((e) => {
          let t = e.classButton ? e.classButton : this.actionsClasses[e.actionNotDividerIndex];
          e.classExtra && (t = jo({
            class1: t,
            class2: e.classExtra
          }));
          const n = e.id ? e.id : this.actionsIds[e.actionNotDividerIndex], r = this.disabled || e.disabled;
          if (e.type === "button")
            return c(pt, {
              ...e,
              id: n,
              class: t,
              classButton: void 0,
              classExtra: void 0,
              disabled: r,
              onClick: e.callback,
              callback: void 0,
              actionNotDividerIndex: void 0,
              isHidden: void 0,
              isConfirm: void 0,
              callbackLocal: void 0
            });
          if (e.type === "link")
            return c($u, {
              ...e,
              id: n,
              classButton: void 0,
              classExtra: void 0,
              disabled: r,
              class: t,
              actionNotDividerIndex: void 0,
              isHidden: void 0,
              type: void 0,
              isConfirm: void 0,
              callbackLocal: void 0
            });
          if (e.type === "template" && e.slotName && this.$slots[e.slotName])
            return this.$slots[e.slotName]({
              id: n,
              class: t,
              action: e
            });
        }),
        this.isDropdownActionsInGroup && c(la, {
          isHideWithoutActionAndSlot: !0,
          actions: this.actionsDropdown,
          disabled: this.disabled,
          ...this.dropdownAttributes
        }, this.$slots)
      ]),
      this.isDropdownActionsAfterGroup && c(la, {
        isHideWithoutActionAndSlot: !0,
        actions: this.actionsDropdown,
        disabled: this.disabled,
        ...this.dropdownAttributes
      }, this.$slots)
    ];
  }
};
function r$(e) {
  const t = d(e, "actions"), n = d(e, "indexFirstDropdownAction"), r = d(e, "indexFirstDropdownActionMobile"), s = d(e, "minDropdownActions"), {
    isMobileWidth: i
  } = Tn(), o = _(() => rS({
    actions: t.value
  })), u = _(() => {
    const S = he(o.value);
    return z(S, (L) => {
      L.classButton = jo({
        class1: L.classButton,
        class2: L.class
      }), L.class = jo({
        class1: L.classDropdown,
        class2: L.class
      }), delete L.classDropdown, L.classExtra && (L.class = jo({
        class1: L.classExtra,
        class2: L.class
      }));
    }), S;
  }), f = _(() => i.value ? r.value : n.value), A = ({ actions: S = [], minCountActions: L = 0 }) => {
    let b = 0;
    return z(S, (I) => {
      if (b >= L)
        return !1;
      I.type !== "divider" && b++;
    }), b >= L;
  }, E = _(() => {
    const S = he(u.value), L = {
      buttons: [],
      dropdown: []
    };
    let b = 0, I = !0;
    return z(S, (v, R) => {
      if (b === f.value) {
        const g = S.slice(R, S.length);
        if (A({
          actions: g,
          minCountActions: s.value
        }))
          return L.dropdown = S.splice(R, S.length), f.value === 0 && L.buttons.push({
            type: "group",
            children: []
          }), !1;
      }
      v.type !== "divider" ? (v.actionNotDividerIndex = b, b++, I ? L.buttons.push({
        type: "group",
        children: [v]
      }) : Li(L.buttons).children.push(v), I = !1) : I = !0;
    }), L;
  }), p = _(() => E.value.dropdown.length > 0), T = _(() => u.value.length > 0);
  return {
    actionsAllWithClassesFiltered: u,
    actionsGrouped: E,
    hasActionsAllFiltered: T,
    hasDropdownActions: p
  };
}
const Na = B({
  propsDefault: {
    actionsClasses: ["a_btn a_btn_primary", "a_btn a_btn_secondary"],
    dropdownAttributes: {},
    hasDividerBeforeDropdown: !0,
    indexFirstDropdownAction: 1,
    indexFirstDropdownActionMobile: 0,
    minDropdownActions: 2,
    useActionClass: !0,
    useDropdownActionClass: !1
  }
}), bfe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Na.value.propsDefault = {
      ...Na.value.propsDefault,
      ...t
    };
  }
}, ec = {
  name: "AGroupButtonDropdown",
  props: {
    actions: {
      type: Array,
      required: !1,
      default: () => []
    },
    actionsClasses: {
      type: Array,
      required: !1,
      default: () => Na.value.propsDefault.actionsClasses
    },
    actionsIds: {
      type: Array,
      required: !1,
      default: () => []
    },
    btnGroupClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn_group"
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    dropdownAttributes: {
      type: Object,
      required: !1,
      default: () => Na.value.propsDefault.dropdownAttributes
    },
    hasDividerBeforeDropdown: {
      type: Boolean,
      required: !1,
      default: () => Na.value.propsDefault.hasDividerBeforeDropdown
    },
    indexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: () => Na.value.propsDefault.indexFirstDropdownAction,
      validator: (e) => e >= -1
    },
    indexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: () => Na.value.propsDefault.indexFirstDropdownActionMobile,
      validator: (e) => e >= -1
    },
    minDropdownActions: {
      type: Number,
      required: !1,
      default: () => Na.value.propsDefault.minDropdownActions
    },
    innerFlagHasActions: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "update:innerFlagHasActions"
  ],
  setup(e, { emit: t }) {
    const {
      actionsAllWithClassesFiltered: n,
      actionsGrouped: r,
      hasActionsAllFiltered: s,
      hasDropdownActions: i
    } = r$(e);
    return rt(s, (o) => {
      t("update:innerFlagHasActions", o);
    }, {
      immediate: !0
    }), {
      actionsAllWithClassesFiltered: n,
      actionsGrouped: r,
      hasActionsAllFiltered: s,
      hasDropdownActions: i
    };
  },
  render() {
    if (this.hasActionsAllFiltered)
      return c("div", {
        class: "aloha_group_btn_dropdown"
      }, [
        ...this.actionsGrouped.buttons.map((e, t) => c(n$, {
          btnGroupClass: this.btnGroupClass,
          data: e,
          disabled: this.disabled,
          actionsDropdown: this.actionsGrouped.dropdown,
          hasDropdownActions: this.hasDropdownActions,
          dropdownAttributes: this.dropdownAttributes,
          actionsClasses: this.actionsClasses,
          actionsIds: this.actionsIds,
          isLast: t === this.actionsGrouped.buttons.length - 1,
          hasDividerBeforeDropdown: this.hasDividerBeforeDropdown
        }, this.$slots))
      ]);
  }
};
function a$(e) {
  const t = d(e, "callback"), n = d(e, "disabled"), r = d(e, "rootMargin"), s = d(e, "threshold");
  let i = {};
  const o = B(void 0);
  let u;
  const f = () => {
    i = {
      rootMargin: r.value,
      threshold: s.value
    };
  }, A = () => {
    u = new IntersectionObserver((T) => {
      const [S] = T;
      S.isIntersecting && t.value();
    }, i);
  }, E = () => {
    n.value || u.observe(o.value);
  }, p = () => {
    u && u.disconnect();
  };
  return rt(n, (T) => {
    T === !0 ? E() : p();
  }), {
    disconnectObserver: p,
    sentinelRef: o,
    setIntersectionObserver: A,
    setObserverOptions: f,
    startObserver: E
  };
}
const Ife = {
  name: "AInfiniteScroll",
  props: {
    callback: {
      type: Function,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    rootMargin: {
      type: String,
      required: !1,
      default: "300px"
    },
    sentinelTag: {
      type: String,
      required: !1,
      default: "span"
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    threshold: {
      type: [Number, Array],
      required: !1,
      default: 0.5
    }
  },
  setup(e) {
    const {
      disconnectObserver: t,
      sentinelRef: n,
      setIntersectionObserver: r,
      setObserverOptions: s,
      startObserver: i
    } = a$(e);
    return Gr(() => {
      s(), r(), i();
    }), Ot(() => {
      t();
    }), {
      sentinelRef: n
    };
  },
  render() {
    return c(this.tag, {}, [
      this.$slots.default ? this.$slots.default() : null,
      c(this.sentinelTag, {
        ref: "sentinelRef",
        style: "height: 1px; display: block;",
        ariaHidden: !0
      })
    ]);
  }
};
function s$(e) {
  const t = d(e, "textCopy"), n = B(void 0), {
    addNotification: r
  } = Mu();
  return {
    copyText: async () => {
      var o;
      let i = "";
      if (t.value ? i = t.value : (o = n.value) != null && o.$el && z(n.value.$el.children, (u) => {
        u.classList.contains("a_sr_only") || (i += u.textContent);
      }), i)
        try {
          await navigator.clipboard.writeText(i), r({
            text: "_A_LINK_COPY_COPIED_TO_CLIPBOARD_"
          });
        } catch (u) {
          console.error(u);
        }
    },
    linkRef: n
  };
}
const i$ = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-copy" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2zm2-1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 5a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1h1v1a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h1v1z"/>
</svg>`, vfe = {
  name: "ALinkCopy",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    buttonOptions: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    buttonPosition: {
      type: String,
      required: !1,
      default: "right",
      validator: (e) => ["right", "left"].indexOf(e) !== -1
    },
    class: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    classDefault: {
      type: String,
      required: !1,
      default: "a_btn_group"
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    linkOptions: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    textCopy: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup() {
    const {
      copyText: e,
      linkRef: t
    } = s$();
    return {
      copyText: e,
      linkRef: t
    };
  },
  render() {
    var t, n;
    const e = c(pt, {
      alwaysTranslate: this.alwaysTranslate,
      class: "a_btn a_btn_secondary",
      disabled: this.disabled,
      iconLeft: i$,
      textScreenReader: "_A_LINK_COPY_BTN_TITLE_",
      title: "_A_LINK_COPY_BTN_TITLE_",
      onClick: this.copyText,
      ...this.buttonOptions
    }, (t = this.$slots) == null ? void 0 : t.button);
    return c("div", {
      class: [
        this.classDefault,
        this.class
      ],
      role: "group"
    }, [
      this.buttonPosition === "left" && e,
      c($u, {
        ref: "linkRef",
        alwaysTranslate: this.alwaysTranslate,
        disabled: this.disabled,
        ...this.linkOptions
      }, (n = this.$slots) == null ? void 0 : n.link),
      this.buttonPosition === "right" && e
    ]);
  }
};
function l$(e) {
  const t = d(e, "isDataSimpleArray"), n = d(e, "item"), r = d(e, "keyChildren"), s = _(() => Hn(n.value)), i = _(() => {
    var u;
    return t.value ? (u = n.value) == null ? void 0 : u[1] : !r.value || !s.value ? [] : ce(n.value, r.value) || [];
  }), o = _(() => Te(i.value) && i.value.length > 0);
  return {
    children: i,
    hasChildren: o
  };
}
function o$(e) {
  const t = d(e, "isDataSimpleArray"), n = d(e, "item"), r = d(e, "itemIndex"), s = d(e, "keyLabel"), i = d(e, "keyLabelCallback");
  return {
    label: _(() => {
      var u;
      return t.value ? Te(n.value) ? ((u = n.value) == null ? void 0 : u[0]) || "" : n.value : Ne(i.value) ? i.value({ item: n.value, itemIndex: r.value }) : s.value ? ce(n.value, s.value) : n.value;
    })
  };
}
const u$ = {
  name: "AListItem",
  props: {
    classItem: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    classMain: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    item: {
      type: [Object, String, Number, Array],
      required: !0
    },
    itemIndex: {
      type: Number,
      required: !0
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !0
    },
    listItemTag: {
      type: String,
      required: !1,
      default: "li"
    },
    separator: {
      type: String,
      required: !1,
      default: void 0
    },
    separatorHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      children: t,
      hasChildren: n
    } = l$(e), {
      label: r
    } = o$(e);
    return {
      children: t,
      hasChildren: n,
      label: r
    };
  },
  render() {
    return c(this.listItemTag, {
      class: this.classItem
    }, [
      this.$slots.listItem ? this.$slots.listItem({
        item: this.item,
        itemIndex: this.itemIndex
      }) : Dt(c(this.labelTag), [
        [Kt, this.label]
      ]),
      this.separator ? c("span", {}, this.separator) : "",
      this.hasChildren ? c(c$, {
        classItem: this.classItem,
        classMain: this.classMain,
        data: this.children,
        isDataSimpleArray: this.isDataSimpleArray,
        keyChildren: this.keyChildren,
        keyId: this.keyId,
        keyLabel: this.keyLabel,
        keyLabelCallback: this.keyLabelCallback,
        labelTag: this.labelTag,
        listItemTag: this.listItemTag,
        separator: this.separator,
        separatorHtml: this.separatorHtml,
        tag: this.tag
      }, this.$slots) : "",
      this.separatorHtml ? Dt(c("div"), [
        [Kt, this.separatorHtml]
      ]) : ""
    ]);
  }
};
function _$(e) {
  const t = d(e, "data"), n = d(e, "isDataSimpleArray"), r = d(e, "keyChildren"), s = d(e, "keyLabel"), i = d(e, "keyLabelCallback"), o = d(e, "separator");
  return {
    plainText: _(() => uu(t.value, {
      isHtml: !1,
      keyLabel: s.value,
      keyLabelCallback: i.value,
      keyChildren: r.value,
      isSimpleArray: n.value,
      separator: o.value
    }))
  };
}
function d$(e) {
  const t = d(e, "tag"), n = d(e, "isHtml");
  return {
    tagLocal: _(() => !n.value && (t.value === "ul" || t.value === "ol") ? "span" : t.value)
  };
}
const c$ = {
  name: "AList",
  props: {
    classItem: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    classMain: {
      type: [String, Object, Array],
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    isDataSimpleArray: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isHtml: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !1,
      default: "span"
    },
    listItemTag: {
      type: String,
      required: !1,
      default: "li"
    },
    separator: {
      type: String,
      required: !1,
      default: void 0
    },
    separatorHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    tag: {
      type: String,
      required: !1,
      default: "ul"
    }
  },
  setup(e) {
    const {
      tagLocal: t
    } = d$(e), {
      plainText: n
    } = _$(e);
    return {
      plainText: n,
      tagLocal: t
    };
  },
  render() {
    return this.isHtml ? c(this.tag, {
      class: this.classMain
    }, [
      this.data.map((e, t) => {
        const n = this.keyId ? ce(e, this.keyId) : t;
        return c(u$, {
          key: n,
          classItem: this.classItem,
          classMain: this.classMain,
          isDataSimpleArray: this.isDataSimpleArray,
          item: e,
          itemIndex: t,
          keyChildren: this.keyChildren,
          keyId: this.keyId,
          keyLabel: this.keyLabel,
          keyLabelCallback: this.keyLabelCallback,
          labelTag: this.labelTag,
          listItemTag: this.listItemTag,
          separator: this.separator,
          separatorHtml: this.separatorHtml,
          tag: this.tag
        }, this.$slots);
      })
    ]) : c(this.tagLocal, null, this.plainText);
  }
};
function f$(e) {
  const t = d(e, "size");
  return {
    classSize: _(() => {
      if (t.value)
        return `a_spinner_size_${t.value}`;
    })
  };
}
const Il = {
  name: "ASpinner",
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    ariaLabel: {
      type: [String, Number, Object],
      required: !1,
      default: () => $n.value.propsDefault.ariaLabel
    },
    extra: {
      type: Object,
      required: !1,
      default: () => $n.value.propsDefault.extra
    },
    safeHtml: {
      type: String,
      required: !1,
      default: () => $n.value.propsDefault.safeHtml
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => $n.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    tag: {
      type: String,
      required: !1,
      default: () => $n.value.propsDefault.tag
    }
  },
  setup(e) {
    const {
      ariaLabelAttributes: t
    } = Uc(e), {
      classSize: n
    } = f$(e);
    return {
      ariaLabelAttributes: t,
      classSize: n
    };
  },
  render() {
    return c(this.tag, {
      class: [
        $n.value.propsDefault.class,
        this.classSize
      ],
      role: "status",
      innerHTML: this.safeHtml,
      ...this.ariaLabelAttributes
    });
  }
}, Ba = B({
  propsDefault: {
    align: "center",
    extra: void 0,
    size: 6,
    tag: "div",
    text: "_A_LOADING_LOADING_",
    textAlign: "right"
  }
}), yfe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Ba.value.propsDefault = {
      ...Ba.value.propsDefault,
      ...t
    };
  }
}, yS = {
  name: "ALoading",
  inheritAttrs: !1,
  props: {
    align: {
      type: String,
      required: !1,
      default: () => Ba.value.propsDefault.align,
      validator: (e) => ["left", "center", "right"].indexOf(e) !== -1
    },
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: () => Ba.value.propsDefault.extra
    },
    isLoading: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    size: {
      type: [String, Number],
      required: !1,
      default: () => Ba.value.propsDefault.size,
      validator: (e) => ["1", "2", "3", "4", "5", "6", "7"].indexOf(`${e}`) !== -1
    },
    spinnerClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    spinnerSafeHtml: {
      type: String,
      required: !1,
      default: () => $n.value.propsDefault.safeHtml
    },
    spinnerTag: {
      type: String,
      required: !1,
      default: () => $n.value.propsDefault.tag
    },
    tag: {
      type: String,
      required: !1,
      default: () => Ba.value.propsDefault.tag
    },
    text: {
      type: String,
      required: !1,
      default: () => Ba.value.propsDefault.text
    },
    textAlign: {
      type: String,
      required: !1,
      default: () => Ba.value.propsDefault.textAlign,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    }
  },
  setup(e) {
    const {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    } = eS(e);
    return {
      classAlign: t,
      classForBox: n,
      classTextSize: r
    };
  },
  render() {
    const e = this.textAlign === "left", t = c(Ee, {
      alwaysTranslate: this.alwaysTranslate,
      tag: "span",
      class: [
        "a_cloak__text",
        e ? "a_cloak__text_left" : "a_cloak__text_right",
        this.classTextSize
      ],
      text: this.text,
      extra: this.extra
    });
    return [
      this.$slots.default && this.$slots.default(),
      this.isLoading && c(
        this.tag,
        {
          ...this.$attrs,
          role: "status",
          tabindex: -1,
          class: ["a_loading", this.classAlign]
        },
        [
          c("div", {
            class: ["a_cloak__box", this.classForBox]
          }, [
            e ? t : "",
            c(Il, {
              alwaysTranslate: this.alwaysTranslate,
              class: [
                "a_cloak__spinner",
                this.spinnerClass
              ],
              "aria-hidden": "true",
              safeHtml: this.spinnerSafeHtml,
              size: this.size,
              tag: this.spinnerTag
            }),
            e ? "" : t
          ])
        ]
      )
    ];
  }
};
function gS({
  menuId: e = "a_menu_",
  panelId: t = ""
}) {
  const r = `${`#${sa({ menuId: e, id: t, suffix: "panel" })}`} .a_menu__listview a`;
  setTimeout(() => {
    const s = document.querySelector(r);
    s && s.focus();
  });
}
function sa({
  menuId: e = "a_menu_",
  id: t = "",
  suffix: n = ""
}) {
  return `${e}_${t}_${n}`;
}
const rl = B({});
function RS(e) {
  const t = d(e, "menuId"), n = d(e, "canChangeBodyClass"), r = () => {
    n.value && (document.body.classList.add("a_menu__wrapper_open"), document.body.classList.remove("a_menu__wrapper_close")), rl.value[t.value] = !0;
  }, s = () => {
    n.value && (document.body.classList.add("a_menu__wrapper_close"), document.body.classList.remove("a_menu__wrapper_open")), rl.value[t.value] = !1;
  }, i = () => {
    n.value && (document.body.classList.remove("a_menu__wrapper_close"), document.body.classList.remove("a_menu__wrapper_open"));
  }, o = ({ isOpen: E } = {}) => {
    Be(E) ? rl.value[t.value] ? s() : r() : E ? r() : s();
  }, u = _(() => rl.value[t.value]), f = () => {
    o(), u.value && gS({
      menuId: t.value,
      panelId: ""
    });
  };
  return {
    btnToggleTitle: _(() => rl.value[t.value] ? "_A_MENU_2_BTN_CLOSE_" : "_A_MENU_2_BTN_OPEN_"),
    closeMenu: s,
    isMenuOpen: u,
    removeBodyClasses: i,
    toggleMenu: o,
    toggleMenuObButton: f
  };
}
const h$ = {
  name: "AMenuButtonToggle",
  props: {
    buttonToggleProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canChangeBodyClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    class: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    insideMenu: {
      type: Boolean,
      required: !1
    },
    menuId: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      btnToggleTitle: t,
      isMenuOpen: n,
      toggleMenuObButton: r
    } = RS(e);
    return {
      btnToggleTitle: t,
      isMenuOpen: n,
      toggleMenuObButton: r
    };
  },
  render() {
    return c(pt, {
      class: ["a_menu__btn_toggle", this.class, {
        a_menu__btn_toggle_open: this.isMenuOpen,
        a_menu__btn_toggle_close: !this.isMenuOpen,
        a_menu__btn_toggle_inside_menu: this.insideMenu,
        a_menu__btn_toggle_outside_menu: !this.insideMenu
      }],
      type: "button",
      title: this.btnToggleTitle,
      textScreenReader: this.btnToggleTitle,
      onClick: this.toggleMenuObButton,
      ...this.buttonToggleProps
    }, () => [
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_1 aloha_element__ml_0"
      }),
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_2 aloha_element__ml_0"
      }),
      c("span", {
        ariaHidden: !0,
        class: "a_menu__btn_toggle__bar a_menu__btn_toggle__bar_3 aloha_element__ml_0"
      })
    ]);
  }
};
function A$() {
  const e = de("togglePanel"), t = ({ parentId: r }) => {
    e({ parentId: r });
  };
  return {
    goBack: t,
    goBackKeydown: ({ $event: r, parentId: s }) => {
      (r.keyCode === J.enter || r.keyCode === J.space) && (t({ parentId: s }), r.stopPropagation(), r.preventDefault());
    }
  };
}
function E$(e) {
  const t = d(e, "dataKeyById"), n = d(e, "panelParentsOpen");
  return {
    breadcrumbsItems: _(() => {
      if (!n.value.length)
        return [];
      const s = [];
      let i = "_A_MENU_2_MAIN_MENU_";
      return z(n.value, (o, u) => {
        s.push({
          isFirst: u === 0,
          label: i,
          panelParentId: o
        }), i = ce(t.value, `${o}.${vt}`);
      }), s.push({
        panelParentId: void 0,
        label: i
      }), s;
    })
  };
}
function p$({
  breadcrumbsItems: e = _(() => []),
  breadcrumbsTruncatedOffset: t = B(0)
}) {
  const n = B([]), r = B([]), s = B(0), i = B(void 0), o = B(!1), u = B(0), f = B([]), A = () => {
    if (i.value < 0) {
      o.value = !0;
      return;
    }
    r.value.unshift(e.value[i.value]), i.value--;
  }, E = () => {
    n.value = e.value.slice(0, i.value + 1), o.value = !0;
  }, p = () => {
    if (r.value.length <= 1 || u.value + t.value <= s.value) {
      E();
      return;
    }
    r.value.splice(0, 1), i.value++, u.value -= Li(f.value), f.value.pop(), p();
  };
  return {
    breadcrumbsItemsDropdown: n,
    breadcrumbsItemsTruncated: r,
    isRenderedAll: o,
    renderItem: (L) => {
      const b = L.offsetWidth;
      u.value += b, f.value.push(b), u.value >= s.value ? p() : A();
    },
    renderParent: (L) => {
      i.value = e.value.length - 1, A(), s.value = L.offsetWidth;
    }
  };
}
const ql = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots" viewBox="0 0 16 16">
  <path d="M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3m5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3"/>
</svg>`, T$ = {
  name: "AMenuBreadcrumbs",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !0
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    isPanelMain: {
      type: Boolean,
      required: !1
    },
    dataKeyById: {
      type: Object,
      required: !0
    },
    panelParentsOpen: {
      type: Array,
      required: !0
    }
  },
  setup(e) {
    const t = de("breadcrumbsTruncatedOffset"), {
      breadcrumbsItems: n
    } = E$(e), {
      goBack: r,
      goBackKeydown: s
    } = A$(), {
      breadcrumbsItemsDropdown: i,
      breadcrumbsItemsTruncated: o,
      isRenderedAll: u,
      renderItem: f,
      renderParent: A
    } = p$({
      breadcrumbsItems: n,
      breadcrumbsTruncatedOffset: t
    });
    return {
      breadcrumbsItems: n,
      breadcrumbsItemsDropdown: i,
      breadcrumbsItemsTruncated: o,
      goBack: r,
      goBackKeydown: s,
      isRenderedAll: u,
      renderItem: f,
      renderParent: A
    };
  },
  render() {
    if (this.isSearchActive || this.isPanelMain)
      return null;
    if (this.isBreadcrumbsTruncated)
      return c(Ee, {
        ariaLabel: "_A_MENU_2_BREADCRUMB_",
        class: "a_menu__breadcrumb a_menu__breadcrumb_secondary",
        tag: "nav"
      }, () => [
        Dt(c("ul", {
          class: [
            "a_menu__breadcrumb__ul a_menu__breadcrumb__ul_truncated"
          ]
        }, [
          this.breadcrumbsItemsDropdown.length > 0 ? c("li", {
            class: "a_menu__breadcrumbs__item"
          }, [
            c(la, {
              buttonClass: "a_btn a_btn_secondary a_btn_small a_menu__breadcrumb__ul_truncated__btn",
              buttonIconLeft: ql,
              buttonTextScreenReader: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
              buttonTitle: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
              dropdownClass: "a_menu__breadcrumb__ul_truncated__dropdown",
              hasCaret: !1,
              inBody: !0,
              ...this.breadcrumbsTruncatedDropdownProps
            }, {
              dropdown: () => [
                this.breadcrumbsItemsDropdown.map((e) => {
                  const t = e.panelParentId ? {
                    tag: "a",
                    class: [
                      "a_menu__breadcrumbs__link",
                      this.breadcrumbsLinkClass
                    ],
                    role: "button",
                    tabindex: 0,
                    onClick: () => this.goBack({ parentId: e.panelParentId }),
                    onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
                  } : {
                    class: "a_menu__breadcrumbs__link",
                    tag: "strong"
                  };
                  return c("li", {
                    key: e.panelParentId,
                    class: "a_menu__breadcrumbs__item"
                  }, [
                    c(pt, {
                      text: e.label,
                      title: e.label,
                      ...t
                    }),
                    c("span", {
                      class: "a_menu__breadcrumbs__item__divider"
                    }, "/")
                  ]);
                })
              ]
            })
          ]) : "",
          this.breadcrumbsItemsTruncated.map((e) => {
            const t = e.panelParentId ? {
              tag: "a",
              class: [
                "a_menu__breadcrumbs__link",
                this.breadcrumbsLinkClass
              ],
              role: "button",
              tabindex: 0,
              onClick: () => this.goBack({ parentId: e.panelParentId }),
              onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
            } : {
              class: "a_menu__breadcrumbs__link",
              tag: "strong"
            };
            return Dt(c("li", {
              key: e.panelParentId,
              class: "a_menu__breadcrumbs__item"
            }, [
              !e.isFirst && c("span", {
                class: "a_menu__breadcrumbs__item__divider"
              }, "/"),
              c(pt, {
                text: e.label,
                title: e.label,
                ...t
              })
            ]), [
              [Sl, { mounted: this.renderItem }]
            ]);
          })
        ]), [
          [Sl, { mounted: this.renderParent }]
        ])
      ]);
    if (!this.isBreadcrumbsTruncated)
      return c(Ee, {
        ariaLabel: "_A_MENU_2_BREADCRUMB_",
        class: "a_menu__breadcrumb a_menu__breadcrumb_secondary",
        tag: "nav"
      }, () => [
        c("ul", {
          class: [
            "a_menu__breadcrumb__ul"
          ]
        }, [
          this.breadcrumbsItems.map((e) => {
            const t = e.panelParentId ? {
              tag: "a",
              class: [
                "a_menu__breadcrumbs__link",
                this.breadcrumbsLinkClass
              ],
              role: "button",
              tabindex: 0,
              onClick: () => this.goBack({ parentId: e.panelParentId }),
              onKeydown: (n) => this.goBackKeydown({ $event: n, parentId: e.panelParentId })
            } : {
              class: "a_menu__breadcrumbs__link",
              tag: "strong"
            };
            return c("li", {
              key: e.panelParentId,
              class: "a_menu__breadcrumbs__item"
            }, [
              !e.isFirst && c("span", {
                class: "a_menu__breadcrumbs__item__divider"
              }, "/"),
              c(pt, {
                text: e.label,
                title: e.label,
                ...t
              })
            ]);
          })
        ])
      ]);
  }
};
function S$(e, {
  id: t = _(() => {
  })
}) {
  const n = d(e, "isLinkInSearchPanel"), r = de("activeRoutesIds");
  return {
    isLinkActive: _(() => n.value ? !1 : r.value.indexOf(t.value) !== -1)
  };
}
function m$(e) {
  const t = d(e, "isLinkInSearchPanel"), n = d(e, "item"), r = d(e, "keyIcon"), s = _(() => n.value[Ge]), i = _(() => {
    if (!t.value)
      return ce(n.value, r.value);
  }), o = _(() => {
    const u = "a_menu__link__icon";
    return n.value.iconClass ? `{ CLASS } ${n.value.iconClass}` : u;
  });
  return {
    icon: i,
    iconClassLocal: o,
    id: s
  };
}
function L$(e, {
  id: t = _(() => {
  })
}) {
  const n = d(e, "dataProParentChildren"), r = d(e, "item");
  return {
    countChildren: _(() => r.value.to ? 0 : n.value[t.value] && n.value[t.value].length)
  };
}
function b$(e, {
  id: t = _(() => {
  })
}) {
  const n = d(e, "isLinkInSearchPanel"), r = d(e, "item"), s = de("clickMenuLink"), i = de("isPanelMain"), o = de("togglePanel"), u = () => {
    o({
      parentId: t.value,
      isLinkInSearchPanel: n.value,
      isPanelMain: i.value
    });
  };
  return {
    clickLink: ({ $event: E }) => {
      n.value && o({ parentId: r.value[pl], isLinkInSearchPanel: n.value }), s({ ctrlKey: E.ctrlKey, isPanelMain: i.value });
    },
    onKeydown: (E) => {
      (E.keyCode === J.enter || E.keyCode === J.space) && (u(), E.stopPropagation(), E.preventDefault());
    },
    openSubMenu: u
  };
}
function I$(e, {
  id: t = _(() => {
  })
}) {
  const n = d(e, "menuId");
  return {
    linkId: _(() => sa({
      menuId: n.value,
      id: t.value,
      suffix: "link"
    }))
  };
}
function v$(e) {
  const t = d(e, "isLinkInSearchPanel"), n = d(e, "item"), r = d(e, "modelSearch"), {
    filterSearchHighlight: s
  } = jn(), i = _(() => n.value[vt]);
  return {
    label: _(() => {
      const u = i.value;
      return t.value ? s(u, { searchModel: r.value }) : u;
    }),
    labelWithoutFilter: i
  };
}
function y$(e) {
  const t = d(e, "item"), n = _(() => !!t.value.disabled), r = _(() => n.value ? "#" : t.value.to);
  return {
    isItemLink: _(() => !!t.value.to),
    isLinkDisabled: n,
    toLocal: r
  };
}
function g$(e, {
  id: t = _(() => "")
}) {
  const n = de("isChildPanelOpen"), r = de("isMenuOpen"), s = de("isPanelMain"), i = de("panelParentsOpen"), o = _(() => s.value && i.value[0] === t.value), u = _(() => !r.value && n.value && i.value.indexOf(t.value) !== -1);
  return {
    isLinkOpen: _(() => o.value || u.value),
    isLinkOpenPanelMain: o,
    isLinkOpenPanelSecondaryMenuClose: u
  };
}
function R$(e) {
  const t = d(e, "item"), n = de("keySlot");
  return {
    currentSlot: _(() => {
      if (n.value)
        return ce(t.value, n.value);
    })
  };
}
function O$(e) {
  const t = d(e, "isLinkInSearchPanel"), n = d(e, "isPanelOpen"), r = de("isMenuOpen"), s = de("isPanelMain", !1), i = de("isChildPanelOpen", !1);
  return {
    tabindex: _(() => t.value || s.value || n.value || !r.value && i.value ? 0 : -1)
  };
}
function C$(e, {
  isItemLink: t = _(() => !1),
  isLinkOpenPanelMain: n = _(() => !1),
  isLinkOpenPanelSecondaryMenuClose: r = _(() => !1),
  labelWithoutFilter: s = _(() => "")
}) {
  const i = d(e, "item"), o = _(() => !!i.value.isTitleHtml), u = _(() => n.value ? "_A_MENU_2_TO_MAIN_MENU_" : r.value ? [
    "_A_MENU_2_CLOSE_SUBMENU_",
    i.value.title || s.value
  ] : t.value ? i.value.title || s.value : [
    "_A_MENU_2_OPEN_SUBMENU_",
    i.value.title || s.value
  ]), f = _(() => ({
    minWidth: i.value.titleHtmlMinWidth,
    width: i.value.titleHtmlWidth,
    maxWidth: i.value.titleHtmlMaxWidth
  }));
  return {
    isTitleHtml: o,
    titleLocal: u,
    titleAttributes: f
  };
}
const OS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708"/>
</svg>`, tc = {
  name: "AMenuPanelLink",
  inject: [
    "isPanelMain",
    "showCountChildren"
  ],
  props: {
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    idsSearchVisible: {
      type: Object,
      required: !1,
      default: void 0
    },
    isLinkInSearchPanel: {
      type: Boolean,
      required: !1
    },
    isPanelOpen: {
      type: Boolean,
      required: !1
    },
    item: {
      type: Object,
      required: !0
    },
    keyIcon: {
      type: String,
      required: !1,
      default: void 0
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      currentSlot: t
    } = R$(e), {
      isItemLink: n,
      isLinkDisabled: r,
      toLocal: s
    } = y$(e), {
      label: i,
      labelWithoutFilter: o
    } = v$(e), {
      icon: u,
      iconClassLocal: f,
      id: A
    } = m$(e), {
      isLinkActive: E
    } = S$(e, {
      id: A
    }), {
      linkId: p
    } = I$(e, {
      id: A
    }), {
      isLinkOpen: T,
      isLinkOpenPanelMain: S,
      isLinkOpenPanelSecondaryMenuClose: L
    } = g$(e, {
      id: A
    }), {
      tabindex: b
    } = O$(e), {
      countChildren: I
    } = L$(e, {
      id: A
    }), {
      isTitleHtml: v,
      titleLocal: R,
      titleAttributes: g
    } = C$(e, {
      isItemLink: n,
      isLinkOpenPanelMain: S,
      isLinkOpenPanelSecondaryMenuClose: L,
      labelWithoutFilter: o
    }), {
      clickLink: D,
      onKeydown: w,
      openSubMenu: F
    } = b$(e, {
      id: A
    });
    return {
      clickLink: D,
      countChildren: I,
      currentSlot: t,
      icon: u,
      iconClassLocal: f,
      isItemLink: n,
      isLinkActive: E,
      isLinkDisabled: r,
      isLinkOpen: T,
      isTitleHtml: v,
      label: i,
      labelWithoutFilter: o,
      linkId: p,
      onKeydown: w,
      openSubMenu: F,
      tabindex: b,
      titleAttributes: g,
      titleLocal: R,
      toLocal: s
    };
  },
  render() {
    return c("li", {
      class: "a_menu__listitem"
    }, [
      this.isLinkInSearchPanel && c("span", {
        class: "a_menu__breadcrumbs__item__divider",
        ariaHidden: !0
      }, "/"),
      this.currentSlot && this.$slots[this.currentSlot] ? this.$slots[this.currentSlot]({
        id: this.linkId,
        item: this.item,
        clickLink: this.clickLink,
        countChildren: this.countChildren,
        isLinkActive: this.isLinkActive,
        isLinkOpen: this.isLinkOpen,
        isPanelOpen: this.isPanelOpen,
        isPanelMain: this.isPanelMain,
        label: this.label,
        labelWithoutFilter: this.labelWithoutFilter,
        onKeydown: this.onKeydown,
        openSubMenu: this.openSubMenu,
        tabindex: this.tabindex
      }) : this.isItemLink ? c($u, {
        id: this.linkId,
        class: ["a_menu__link a_menu__link__text_truncated", {
          a_menu__link_disabled: this.isLinkDisabled,
          a_menu__link_active: this.isLinkActive,
          a_menu__link_panel_main: this.isPanelMain
        }],
        html: this.label,
        iconClass: this.iconClassLocal,
        iconLeft: this.icon,
        isTitleHtml: this.isTitleHtml,
        tabindex: this.tabindex,
        textAriaHidden: !0,
        textClass: "a_menu__link__text aloha_element__ml_0",
        textScreenReader: this.titleLocal,
        title: this.titleLocal,
        titleAttributes: this.titleAttributes,
        titlePlacement: "right",
        to: this.toLocal,
        onClick: this.clickLink
      }) : c(pt, {
        id: this.linkId,
        class: [
          "a_menu__link a_menu__link_btn a_menu__link__text_truncated",
          {
            a_menu__link_open: this.isLinkOpen,
            a_menu__link_active: this.isLinkActive,
            a_menu__link_panel_main: this.isPanelMain
          }
        ],
        html: this.label,
        iconClass: this.iconClassLocal,
        iconLeft: this.icon,
        isTitleHtml: this.isTitleHtml,
        role: "button",
        tabindex: this.tabindex,
        tag: "a",
        textAriaHidden: !0,
        textClass: "a_menu__link__text aloha_element__ml_0",
        textScreenReader: this.titleLocal,
        title: this.titleLocal,
        titleAttributes: this.titleAttributes,
        titlePlacement: "right",
        onClick: this.openSubMenu,
        onKeydown: this.onKeydown
      }, () => [
        c("span", {
          class: "a_menu__link__counter aloha_element__ml_0"
        }, [
          this.showCountChildren && c("span", {
            ariaHidden: !0
          }, this.countChildren),
          c(_t, {
            class: "a_menu__link__counter__icon",
            icon: OS
          })
        ])
      ])
    ]);
  }
};
function D$(e) {
  const t = d(e, "groupItems");
  return {
    hasItems: _(() => t.value.length > 0)
  };
}
function N$(e) {
  const t = d(e, "groupIndex"), n = d(e, "groupLabel"), r = d(e, "menuId"), s = d(e, "paneIndex"), i = _(() => `${r.value}_${s.value}_${t.value}_label`);
  return {
    ariaLabelledbyObj: _(() => n.value ? {
      "aria-labelledby": i.value
    } : {}),
    labelId: i
  };
}
const XE = {
  name: "AMenuPanelGroup",
  props: {
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    groupIndex: {
      type: [Number, String],
      required: !0
    },
    groupItems: {
      type: Array,
      required: !0
    },
    groupLabel: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    isPanelOpen: {
      type: Boolean,
      required: !1
    },
    keyIcon: {
      type: String,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    paneIndex: {
      type: [Number, String],
      required: !0
    }
  },
  setup(e) {
    const {
      hasItems: t
    } = D$(e), {
      ariaLabelledbyObj: n,
      labelId: r
    } = N$(e);
    return {
      ariaLabelledbyObj: n,
      hasItems: t,
      labelId: r
    };
  },
  render() {
    return this.hasItems ? this.groupLabel ? c("li", {
      ...this.ariaLabelledbyObj
    }, [
      c("div", {
        id: this.labelId,
        class: "a_menu__list_header"
      }, this.groupLabel),
      c("ul", {
        class: "a_menu__listview"
      }, [
        this.groupItems.map((e, t) => c(tc, {
          key: t,
          item: e,
          dataProParentChildren: this.dataProParentChildren,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId
        }, this.$slots))
      ])
    ]) : this.groupItems.map((e, t) => c(tc, {
      key: t,
      item: e,
      dataProParentChildren: this.dataProParentChildren,
      isPanelOpen: this.isPanelOpen,
      keyIcon: this.keyIcon,
      menuId: this.menuId
    }, this.$slots)) : null;
  }
};
function B$(e) {
  const t = d(e, "panelItems"), n = d(e, "keyGroup"), r = _(() => {
    const i = [], o = {};
    return z(t.value, (u) => {
      const f = ce(u, n.value);
      le(f) ? i.push(u) : (o[f] = o[f] || [], o[f].push(u));
    }), {
      withoutGroup: i,
      withGroup: o
    };
  });
  return {
    isItemsWithoutGroup: _(() => r.value.withoutGroup.length > 0),
    itemsGroup: r
  };
}
function w$(e, {
  openedLevelIndex: t = _(() => 0)
}) {
  const n = d(e, "dataKeyById"), r = d(e, "isPanelMain"), s = d(e, "parentId"), i = de("isMenuOpen"), o = _(() => !r.value && !i.value && t.value === 0), u = _(() => ce(n.value, `${s.value}.${vt}`));
  return {
    isHeaderPanelVisible: o,
    parentLabel: u
  };
}
function P$(e) {
  const t = d(e, "menuId"), n = d(e, "parentId");
  return {
    panelId: _(() => sa({
      menuId: t.value,
      id: n.value,
      suffix: "panel"
    }))
  };
}
function x$(e) {
  const t = d(e, "panelParentsOpen"), n = d(e, "parentId"), r = _(() => t.value.indexOf(n.value)), s = _(() => {
    if (r.value !== -1)
      return `z-index: ${r.value + 2};`;
  });
  return {
    openedLevelIndex: r,
    styleZIndex: s
  };
}
function M$(e, {
  openedLevelIndex: t = _(() => -1)
}) {
  const n = d(e, "isPanelMain"), r = d(e, "isSearchActive"), s = d(e, "panelParentsOpen"), i = _(() => r.value ? !1 : n.value ? s.value.length === 0 : s.value.length ? t.value === s.value.length - 1 : !1);
  return {
    isChildPanelOpen: _(() => {
      if (n.value)
        return s.value.length > 0;
      const u = t.value;
      return u !== -1 && u !== s.value.length - 1;
    }),
    isPanelOpen: i
  };
}
const ZE = {
  name: "AMenuPanel",
  props: {
    attributesBlockerClick: {
      type: Object,
      required: !0
    },
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataKeyById: {
      type: Object,
      required: !0
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !1
    },
    isPanelMain: {
      type: Boolean,
      required: !1
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    keyGroup: {
      type: String,
      required: !0
    },
    keyIcon: {
      type: String,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    paneIndex: {
      type: [Number, String],
      required: !0
    },
    panelItems: {
      type: Array,
      required: !0
    },
    panelParentsOpen: {
      type: Array,
      required: !0
    },
    parentId: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = d(e, "isPanelMain"), {
      panelId: n
    } = P$(e), {
      openedLevelIndex: r,
      styleZIndex: s
    } = x$(e), {
      isItemsWithoutGroup: i,
      itemsGroup: o
    } = B$(e), {
      isChildPanelOpen: u,
      isPanelOpen: f
    } = M$(e, {
      openedLevelIndex: r
    }), {
      isHeaderPanelVisible: A,
      parentLabel: E
    } = w$(e, {
      openedLevelIndex: r
    });
    return Je("isChildPanelOpen", u), Je("isPanelMain", t), {
      isChildPanelOpen: u,
      isHeaderPanelVisible: A,
      isItemsWithoutGroup: i,
      isPanelOpen: f,
      itemsGroup: o,
      panelId: n,
      parentLabel: E,
      styleZIndex: s
    };
  },
  render() {
    return c("div", {
      id: this.panelId,
      class: ["a_menu__panel", {
        a_menu__panel_main: !this.isSearchActive && this.isPanelMain,
        a_menu__panel_secondary: !this.isPanelMain,
        a_menu__panel_opened: !this.isSearchActive && this.isPanelOpen,
        a_menu__panel_parent: !this.isSearchActive && this.isChildPanelOpen
      }],
      style: this.styleZIndex
    }, [
      !this.isPanelMain && this.isPanelOpen && c(T$, {
        breadcrumbsLinkClass: this.breadcrumbsLinkClass,
        breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
        dataKeyById: this.dataKeyById,
        isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
        isPanelMain: this.isPanelMain,
        isSearchActive: this.isSearchActive,
        panelParentsOpen: this.panelParentsOpen
      }),
      this.isHeaderPanelVisible && c("div", {
        class: "a_menu__panel_header"
      }, [
        c(Ee, {
          class: "a_menu__panel_header__text",
          html: this.parentLabel,
          tag: "strong"
        })
      ]),
      c("ul", {
        class: "a_menu__listview"
      }, [
        this.isItemsWithoutGroup && c(XE, {
          dataProParentChildren: this.dataProParentChildren,
          groupItems: this.itemsGroup.withoutGroup,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId,
          paneIndex: this.paneIndex,
          groupIndex: "00"
        }, this.$slots),
        Object.keys(this.itemsGroup.withGroup).map((e, t) => c(XE, {
          key: e,
          dataProParentChildren: this.dataProParentChildren,
          groupIndex: t,
          groupItems: this.itemsGroup.withGroup[e],
          groupLabel: e,
          isPanelOpen: this.isPanelOpen,
          keyIcon: this.keyIcon,
          menuId: this.menuId,
          paneIndex: this.paneIndex
        }, this.$slots))
      ])
    ]);
  }
}, nc = "_a_breadcrumbs";
function F$(e) {
  const t = d(e, "item");
  return {
    breadcrumbsItems: _(() => {
      const r = [
        {
          label: "_A_MENU_2_MAIN_MENU_",
          isFirst: !0,
          parentIds: []
        }
      ], s = [];
      return z(t.value[nc], (i) => {
        s.push(i.parentId), r.push({
          label: i.label,
          parentId: i.parentId,
          parentIds: [
            ...s
          ]
        });
      }), r;
    })
  };
}
function q$() {
  const e = de("togglePanel"), t = ({ parentIds: r }) => {
    e({ parentIds: r });
  };
  return {
    goTo: t,
    goToKeydown: ({ $event: r, parentIds: s }) => {
      (r.keyCode === J.enter || r.keyCode === J.space) && (t({ parentIds: s }), r.stopPropagation(), r.preventDefault());
    }
  };
}
const $$ = {
  name: "AMenuSearchPanelBreadcrumbs",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    item: {
      type: Object,
      required: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      breadcrumbsItems: t
    } = F$(e), {
      goTo: n,
      goToKeydown: r
    } = q$();
    return {
      breadcrumbsItems: t,
      goTo: n,
      goToKeydown: r
    };
  },
  render() {
    return c("li", {}, [
      c("ul", {
        class: "a_menu__breadcrumb__ul a_menu__breadcrumb__ul_search"
      }, [
        c("li", {}, [
          c(la, {
            buttonClass: "a_btn a_btn_secondary a_btn_small a_menu__breadcrumb__ul_truncated__btn",
            buttonIconLeft: ql,
            buttonTextScreenReader: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
            buttonTitle: "_A_MENU_2_BREADCRUMB_SHOW_BTN_",
            dropdownClass: "a_menu__breadcrumb__ul_truncated__dropdown",
            hasCaret: !1,
            inBody: !0,
            ...this.breadcrumbsTruncatedDropdownProps
          }, {
            dropdown: () => [
              this.breadcrumbsItems.map((e) => c("li", {
                key: e.parentId,
                class: "a_menu__breadcrumbs__item"
              }, [
                c(pt, {
                  text: e.label,
                  title: e.label,
                  tag: "a",
                  class: [
                    "a_menu__breadcrumbs__link",
                    this.breadcrumbsLinkClass
                  ],
                  role: "button",
                  tabindex: 0,
                  onClick: () => this.goTo({ parentIds: e.parentIds }),
                  onKeydown: (t) => this.goToKeydown({ $event: t, parentIds: e.parentIds })
                }),
                c("span", {
                  class: "a_menu__breadcrumbs__item__divider"
                }, "/")
              ]))
            ]
          })
        ]),
        c(tc, {
          item: this.item,
          dataProParentChildren: this.dataProParentChildren,
          isLinkInSearchPanel: !0,
          modelSearch: this.modelSearch,
          menuId: this.menuId
        }, this.$slots)
      ])
    ]);
  }
};
function U$(e) {
  const t = d(e, "itemsWithSearch"), n = d(e, "isSearchActive");
  return {
    isNoneFound: _(() => n.value ? t.value.length === 0 : !1)
  };
}
function k$(e, {
  isNoneFound: t = _(() => !1)
}) {
  return {
    textLocal: _(() => t.value ? "_A_MENU_2_SEARCH_NONE_FOUND_" : "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_")
  };
}
const H$ = {
  name: "AMenuSearchPanel",
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    dataProParentChildren: {
      type: Object,
      required: !0
    },
    isSearchActive: {
      type: Boolean,
      required: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    itemsWithSearch: {
      type: Array,
      required: !0
    },
    menuId: {
      type: String,
      required: !0
    },
    modelSearch: {
      type: String,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      isNoneFound: t
    } = U$(e), {
      textLocal: n
    } = k$(e, {
      isNoneFound: t
    });
    return Je("isPanelMain", !1), Je("isChildPanelOpen", !1), {
      isNoneFound: t,
      textLocal: n
    };
  },
  render() {
    return this.isSearchActive ? c("div", {
      class: "a_menu__panels__main a_menu__panel_search"
    }, [
      c("div", {
        class: "a_menu__navbar_top_sub"
      }, [
        c(Ee, {
          class: "a_menu__navbar_top_sub__text",
          tag: "strong",
          text: this.textLocal,
          extra: {
            count: this.itemsWithSearch.length
          }
        })
      ]),
      !this.isNoneFound && c("div", {
        class: "a_vertical_scroll"
      }, [
        c("div", {
          class: "a_scroll_content"
        }, [
          c("ul", {
            class: "a_menu__listview"
          }, [
            this.itemsWithSearch.map((e) => c($$, {
              key: e[Ge],
              breadcrumbsLinkClass: this.breadcrumbsLinkClass,
              breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
              dataProParentChildren: this.dataProParentChildren,
              item: e,
              menuId: this.menuId,
              modelSearch: this.modelSearch
            }, this.$slots))
          ])
        ])
      ])
    ]) : null;
  }
};
function V$({
  onScroll: e = () => {
  },
  scrollContentRef: t = B(void 0)
}) {
  return {
    addScrollListener: () => {
      t.value.addEventListener("scroll", e);
    },
    destroyScrollListener: () => {
      t.value.removeEventListener("scroll", e);
    }
  };
}
function W$({
  checkScroll: e = () => {
  },
  containerRef: t = B(void 0),
  scrollContentChildRef: n = B(void 0)
}) {
  const r = B(void 0), s = B(!1), i = B(void 0), o = B(!1), u = B(0), f = B(0), A = (P) => {
    const O = P[0].contentRect.height;
    (u.value === 0 || u.value !== O) && (u.value = O, e());
  }, E = (P) => {
    const O = P[0].contentRect.height;
    (f.value === 0 || f.value !== O) && (f.value = O, e());
  }, p = () => {
    r.value = new ResizeObserver(
      El((P) => A(P), 300)
    );
  }, T = () => {
    i.value = new ResizeObserver(
      El((P) => E(P), 300)
    );
  }, S = () => {
    s.value || (r.value.observe(t.value), s.value = !0);
  }, L = () => {
    s.value && (r.value.unobserve(t.value), s.value = !1);
  }, b = () => {
    r.value.disconnect();
  }, I = () => {
    o.value || (i.value.observe(n.value), o.value = !0);
  }, v = () => {
    o.value && (i.value.unobserve(n.value), o.value = !1);
  }, R = () => {
    i.value.disconnect();
  };
  return {
    connectObservers: () => {
      S(), I();
    },
    destroyObservers: () => {
      b(), R();
    },
    disconnectObservers: () => {
      L(), v();
    },
    initObservers: () => {
      p(), T();
    }
  };
}
function G$(e) {
  const t = d(e, "scrollDistance"), n = B(!1), r = B(!1), s = B(void 0), i = B(!1), o = B(void 0), u = B(void 0), f = () => {
    const T = o.value;
    r.value = T.scrollTop > 0, n.value = T.scrollTop < T.scrollHeight - T.clientHeight;
  }, A = () => {
    i.value = o.value.scrollHeight > o.value.clientHeight, i.value && f();
  };
  return {
    canScrollDown: n,
    canScrollUp: r,
    checkScroll: A,
    containerRef: s,
    hasScroll: i,
    onScroll: f,
    scrollContentChildRef: u,
    scrollContentRef: o,
    scrollDown: () => {
      o.value.scrollTop += t.value, A();
    },
    scrollUp: () => {
      o.value.scrollTop -= t.value, A();
    }
  };
}
const j$ = {
  name: "AVerticalScroll",
  props: {
    btnDownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnUpProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    scrollContentAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    scrollDistance: {
      type: Number,
      required: !1,
      default: 100
    },
    tag: {
      type: String,
      required: !1,
      default: "div"
    },
    tagScrollContent: {
      type: String,
      required: !1,
      default: "div"
    }
  },
  setup(e) {
    const t = d(e, "disabled"), {
      canScrollDown: n,
      canScrollUp: r,
      checkScroll: s,
      containerRef: i,
      hasScroll: o,
      onScroll: u,
      scrollContentChildRef: f,
      scrollContentRef: A,
      scrollDown: E,
      scrollUp: p
    } = G$(e), {
      connectObservers: T,
      destroyObservers: S,
      disconnectObservers: L,
      initObservers: b
    } = W$({
      checkScroll: s,
      containerRef: i,
      scrollContentChildRef: f
    }), {
      addScrollListener: I,
      destroyScrollListener: v
    } = V$({
      onScroll: u,
      scrollContentRef: A
    });
    return Gr(() => {
      b(), t.value || (T(), I());
    }), Ot(() => {
      S(), v();
    }), rt(t, (R) => {
      R ? (L(), v()) : (T(), I());
    }), {
      canScrollDown: n,
      canScrollUp: r,
      containerRef: i,
      hasScroll: o,
      scrollContentChildRef: f,
      scrollContentRef: A,
      scrollDown: E,
      scrollUp: p
    };
  },
  render() {
    return c(this.tag, {
      ref: "containerRef",
      class: [
        "a_vertical_scroll",
        {
          a_vertical_scroll_scrollable: this.hasScroll && !this.disabled
        }
      ]
    }, [
      c("div", {
        class: "a_vertical_scroll__btn__wrapper a_vertical_scroll__btn__wrapper_up"
      }, [
        c(pt, {
          class: "a_btn a_btn_transparent_secondary a_btn_small a_vertical_scroll__btn a_vertical_scroll__btn_up",
          iconLeft: Pu,
          disabled: !this.canScrollUp,
          tabindex: -1,
          title: "_A_VERTICAL_SCROLL_BTN_UP_TITLE_",
          textScreenReader: "_A_VERTICAL_SCROLL_BTN_UP_TITLE_",
          onClick: this.scrollUp,
          ...this.btnUpProps
        })
      ]),
      c(this.tagScrollContent, {
        ref: "scrollContentRef",
        class: "a_scroll_content",
        ...this.scrollContentAttributes
      }, [
        c("div", {
          ref: "scrollContentChildRef"
        }, [
          this.$slots.default && this.$slots.default()
        ])
      ]),
      c("div", {
        class: "a_vertical_scroll__btn__wrapper a_vertical_scroll__btn__wrapper_down"
      }, [
        c(pt, {
          class: "a_btn a_btn_transparent_secondary a_btn_small a_vertical_scroll__btn a_vertical_scroll__btn_down",
          iconLeft: Ua,
          disabled: !this.canScrollDown,
          title: "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_",
          textScreenReader: "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_",
          tabindex: -1,
          onClick: this.scrollDown,
          ...this.btnDownProps
        })
      ])
    ]);
  }
};
function K$(e, {
  closeAllPanels: t = () => {
  }
}) {
  const n = d(e, "isBlockerClickable"), r = () => {
    t();
  };
  return {
    attributesBlockerClick: _(() => {
      const i = {};
      return n.value && (i.onClick = r, i.class = "a_menu__blocker a_menu_clickable"), i;
    })
  };
}
function z$(e, {
  isMenuOpen: t = _(() => !1),
  isMobileWidth: n = B(void 0),
  toggleMenu: r = () => {
  }
}) {
  const s = d(e, "isBackdropMobileClickable"), i = d(e, "useBackdropMobile"), o = _(() => i.value && t.value && n.value), u = () => {
    r({
      isOpen: !1
    });
  };
  return {
    clickAttributesBackdrop: _(() => s.value ? {
      onClick: u
    } : {}),
    isBackdropVisible: o
  };
}
function Y$(e, {
  dataKeyById: t = _(() => ({})),
  dataProParent: n = _(() => ({
    main: [],
    children: {}
  })),
  isMenuLinkClicked: r = B(!1),
  isMenuOpen: s = _(() => !1),
  panelParentsOpen: i = B([])
}) {
  const o = d(e, "compareUrlCallback"), f = DR().appContext.config.globalProperties.$router, A = B([]), E = _(() => f.currentRoute), p = ({ route: b = {}, ids: I = [] }) => {
    const v = b[pl];
    return v && (I.unshift(v), p({ route: t.value[v], ids: I })), I;
  }, T = ({ routerFullPath: b, route: I }) => {
    const {
      fullPath: v
    } = f.resolve(I.to);
    return Ne(o.value) ? o.value({
      fullPath: v,
      routerFullPath: b,
      item: I,
      currentRoute: f.currentRoute.value
    }) : v === b;
  }, S = ({ routes: b = [], routerFullPath: I = "/" }) => {
    let v = !1;
    return z(b, (R) => {
      if (R.to && T({ routerFullPath: I, route: R })) {
        const g = p({ route: R, ids: [] });
        return !r.value && s.value && (i.value = g), A.value = [...g, R[Ge]], v = !0, !1;
      }
    }), v;
  };
  return {
    activeRoutesIds: A,
    checkAllRoutes: () => {
      const b = f.currentRoute.value.fullPath;
      let I = !1;
      I = S({ routes: n.value.main, routerFullPath: b }), !I && (z(n.value.children, (v) => {
        if (I = S({ routes: v, routerFullPath: b }), I)
          return !1;
      }), r.value && (r.value = !1));
    },
    currentRoute: E
  };
}
function X$(e) {
  const t = d(e, "data"), n = d(e, "isTranslated"), r = d(e, "keyChildren"), s = d(e, "keyId"), i = d(e, "keyLabel"), o = d(e, "keyLabelCallback"), u = ({ breadcrumbs: T = [], parentId: S, parentLabel: L }) => {
    const b = rT(T);
    return S && b.push({
      parentId: S,
      label: L
    }), b;
  }, f = ({ dataClone: T, dataFlat: S = [], parentId: L, parentLabel: b, breadcrumbs: I = [] }) => (z(T, (v) => {
    v[Ge] = ce(v, s.value), v[pl] = L, v[nc] = u({
      breadcrumbs: I,
      parentId: L,
      parentLabel: b
    });
    let R;
    if (o.value ? R = o.value({ item: v }) : R = ce(v, i.value), n.value && wa(R) && (R = Pt({ placeholder: R })), v[vt] = R, r.value) {
      const g = ce(v, r.value);
      g && g.length && (f({
        dataClone: g,
        parentId: v[Ge],
        parentLabel: v[vt],
        dataFlat: S,
        breadcrumbs: v[nc]
      }), v[gP] = g);
    }
    S.push(v);
  }), S), A = _(() => {
    const T = he(t.value);
    let S = [];
    return S = f({ dataClone: T, dataFlat: S }), S;
  }), E = _(() => {
    const T = [], S = {};
    return z(A.value, (L) => {
      const b = L[pl];
      le(b) ? T.push(L) : (S[b] = S[b] || [], S[b].push(L));
    }), {
      main: T,
      children: S
    };
  });
  return {
    dataKeyById: _(() => Fa(A.value, Ge)),
    dataProParent: E
  };
}
function Z$(e, {
  closeMenu: t = () => {
  },
  isMenuOpen: n = _(() => !1),
  isSubMenuOpen: r = _(() => !1),
  panelParentsOpen: s = B([]),
  togglePanel: i = () => {
  }
}) {
  const o = d(e, "menuId"), u = d(e, "useEscapeForMobile"), f = B(void 0), {
    isMobileWidth: A
  } = Tn(), E = _(() => !A.value && !n.value && r.value), p = (P) => {
    if (!f.value)
      return;
    const M = f.value.querySelectorAll(vi);
    if (M.length === 0) {
      P.preventDefault();
      return;
    }
    const O = M[0], q = M[M.length - 1];
    P.shiftKey ? document.activeElement === O && (q.focus(), P.preventDefault()) : document.activeElement === q && (O.focus(), P.preventDefault());
  }, T = (P) => {
    u.value && (t(), P.preventDefault(), P.stopPropagation());
  }, S = (P) => {
    const M = P || window.$event;
    M.key === "Escape" || M.keyCode === J.escape ? T(P) : (M.key === "Tab" || M.keyCode === J.tab) && p(M);
  }, L = ({ panelIndex: P, panelId: M }) => {
    const O = sa({
      menuId: o.value,
      id: M,
      suffix: "link"
    }), q = document.getElementById(O);
    if (q) {
      if (P > 0) {
        const U = s.value.slice(0, P);
        i({ parentIds: U, withoutFocus: !0 });
      }
      q.focus();
    }
  }, b = ({ panelIndex: P }) => {
    const M = s.value[P + 1], O = sa({
      menuId: o.value,
      id: M,
      suffix: "panel"
    }), q = document.querySelectorAll(`#${O} a.a_menu__link`);
    q.length && q[0].focus();
  }, I = ({ panelId: P }) => {
    const M = sa({
      menuId: o.value,
      id: P,
      suffix: "link"
    }), O = document.getElementById(M);
    O && (i({ parentIds: [], withoutFocus: !0 }), O.focus());
  }, v = ({ EVENT: P, PANEL_ELEMENT: M, panelIndex: O, panelId: q }) => {
    const U = M.querySelectorAll("a.a_menu__link");
    P.shiftKey ? document.activeElement === U[0] && (O > 0 ? L({ panelIndex: O, panelId: q }) : I({ panelId: q }), P.preventDefault()) : document.activeElement === U[U.length - 1] && (O < s.value.length - 1 ? b({ panelIndex: O }) : O > 0 ? L({ panelIndex: O, panelId: q }) : I({ panelId: q }), P.preventDefault());
  }, R = (P) => {
    const M = P || window.$event;
    (M.key === "Tab" || M.keyCode === J.tab) && z(s.value, (O, q) => {
      const U = sa({
        menuId: o.value,
        id: O,
        suffix: "panel"
      }), G = document.getElementById(U);
      if (G && G.contains(document.activeElement))
        return v({ EVENT: M, PANEL_ELEMENT: G, panelIndex: q, panelId: O }), !1;
    });
  };
  return {
    isDesktopSubMenuVisibleWhenMenuClosed: E,
    menuRef: f,
    removeListenerForKeydownDesktop: () => {
      document.removeEventListener("keydown", R);
    },
    removeListenerForKeydownMobile: () => {
      document.removeEventListener("keydown", S);
    },
    setListenerForKeydownDesktop: () => {
      document.addEventListener("keydown", R);
    },
    setListenerForKeydownMobile: () => {
      A.value && document.addEventListener("keydown", S);
    }
  };
}
function J$(e, {
  closeAllPanels: t = () => {
  },
  isMenuOpen: n = _(() => !1),
  isMobileWidth: r = B(!1),
  resetSearch: s = () => {
  },
  toggleMenu: i = () => {
  }
}) {
  const o = d(e, "isBodyFocusAfterClick"), u = B(!1), f = () => {
    o.value && (document.body.hasAttribute("tabindex") ? document.body.focus() : (document.body.setAttribute("tabindex", "-1"), document.body.focus(), document.body.removeAttribute("tabindex")));
  };
  return {
    clickMenuLink: ({ ctrlKey: E = !1, isPanelMain: p = !1 } = {}) => {
      u.value = !0, s(), f(), (!n.value || p) && t(), r.value && !E && i({ isOpen: !1 });
    },
    isMenuLinkClicked: u
  };
}
function Q$(e, {
  isMenuOpen: t = B(!1),
  toggleMenu: n = () => {
  }
}) {
  const r = d(e, "isBlockerClickable"), s = d(e, "menuId"), {
    isMobileWidth: i
  } = Tn(), o = _(() => i.value ? {
    role: "dialog",
    ariaModal: !0
  } : {}), u = _(() => `${s.value}_header`);
  return {
    attributesMenuClick: _(() => {
      const A = {};
      return r.value && !t.value && (A.onClick = () => n({ isOpen: !0 }), A.class = "a_menu a_menu_clickable"), A;
    }),
    attributesMobile: o,
    headerId: u
  };
}
function eU({
  isMenuOpen: e = _(() => !1),
  panelParentsOpen: t = B([])
}) {
  return {
    isLeastOnePanelOpenAndMenuClosed: _(() => !e.value && t.value.length > 0)
  };
}
function tU(e, {
  dataKeyById: t = _(() => ({})),
  resetSearch: n = () => {
  }
}) {
  const r = d(e, "menuId"), s = B([]), i = _(() => s.value.length > 0), o = ({ parentId: E, panelParentsOpenLocal: p }) => {
    if (E) {
      p.unshift(E);
      const T = t.value[E][pl];
      return o({ parentId: T, panelParentsOpenLocal: p });
    }
    return p;
  };
  return {
    closeAllPanels: () => {
      s.value = [], n();
    },
    isSubMenuOpen: i,
    panelParentsOpen: s,
    setDefaultMenu: () => {
      n(), s.value = [];
    },
    togglePanel: ({ parentIds: E, parentId: p, isLinkInSearchPanel: T, withoutFocus: S }) => {
      if (E)
        s.value = E;
      else {
        const L = s.value.indexOf(p), b = o({ parentId: p, panelParentsOpenLocal: [] });
        !T && L !== -1 && b.splice(-1, 1), s.value = b;
      }
      S || gS({
        menuId: r.value,
        panelId: Li(s.value) || ""
      }), n();
    }
  };
}
function nU(e, {
  menuRef: t = B(void 0),
  isMenuOpen: n = _(() => !1),
  panelParentsOpen: r = B([])
}) {
  const s = d(e, "menuId"), i = B({}), o = B(!1), u = ({ id: b }) => {
    const I = sa({
      menuId: s.value,
      id: b,
      suffix: "link"
    });
    return document.getElementById(I);
  }, f = ({ id: b }) => {
    const I = sa({
      menuId: s.value,
      id: b,
      suffix: "panel"
    });
    return document.getElementById(I);
  }, A = (b) => {
    t.value.contains(b.target) || (r.value = []);
  }, E = () => {
    o.value || (o.value = !0, document.addEventListener("click", A));
  }, p = () => {
    o.value = !1, document.removeEventListener("click", A);
  }, T = (b) => {
    if (i.value[b]) {
      i.value[b](), delete i.value[b];
      const I = f({ id: b });
      I.style.removeProperty("left"), I.style.removeProperty("top");
    }
  };
  return {
    destroyPopover: () => {
      z(i.value, (b, I) => {
        T(I);
      }), p();
    },
    startPopper: () => {
      if (n.value)
        return;
      E();
      const b = rT(i.value);
      z(r.value, (I) => {
        if (i.value[I]) {
          delete b[I];
          return;
        }
        const v = u({ id: I }), R = f({ id: I });
        !v || !R || (i.value[I] = Nl(
          v,
          R,
          () => {
            !v || !R || Pl(
              v,
              R,
              {
                placement: "right",
                middleware: [
                  wl(),
                  Bl({ limiter: wu() })
                ]
              }
            ).then(({ x: g, y: D }) => {
              Object.assign(R.style, {
                left: `${g}px`,
                top: `${D}px`
              });
            });
          }
        ));
      }), z(b, (I, v) => {
        T(v);
      });
    }
  };
}
function rU(e, {
  removeListenerForKeydownMobile: t = () => {
  },
  toggleMenu: n = () => {
  }
}) {
  const r = d(e, "isMenuOpenInitial"), s = B(!1), {
    isMobileWidth: i
  } = Tn(), o = (E) => {
    E ? n({ isOpen: !1 }) : (n({ isOpen: r.value }), t());
  };
  return {
    destroyEventBusUpdateViewOnResize: () => {
      Rt.$on("updateViewOnResize", o);
    },
    initEventBusUpdateViewOnResize: () => {
      Rt.$on("updateViewOnResize", o);
    },
    initMenuOpenOrClose: () => {
      i.value ? n({ isOpen: !1 }) : n({ isOpen: r.value }), pi().then(() => {
        s.value = !0;
      });
    },
    isMenuInitialized: s,
    isMobileWidth: i
  };
}
function aU(e, {
  dataKeyById: t = _(() => ({}))
}) {
  const n = d(e, "menuId"), r = B(""), s = _(() => `${n.value}_search`), i = (p) => {
    r.value = p;
  }, o = _(() => !!r.value), u = _(() => o.value ? "display: none;" : void 0), f = () => {
    o.value && (r.value = "");
  }, A = _(() => gu(r.value)), E = _(() => {
    const p = [];
    if (o.value) {
      const T = new RegExp(A.value, "gi");
      z(t.value, (S) => {
        `${S[vt]}`.search(T) !== -1 && p.push(S);
      });
    }
    return p;
  });
  return {
    isSearchActive: o,
    itemsWithSearch: E,
    modelSearch: r,
    resetSearch: f,
    searchInputId: s,
    styleSearchPanelMain: u,
    updateModelSearch: i
  };
}
function sU({
  searchInputId: e = _(() => {
  }),
  toggleMenu: t = () => {
  }
}) {
  const n = () => {
    t({ isOpen: !0 }), window.isScrollDisabled || setTimeout(() => {
      Rr({
        selector: `#${e.value}`
      });
    });
  };
  return {
    clickOnSearchBtn: n,
    keydownOnSearchBtn: (s) => {
      (s.keyCode === J.enter || s.keyCode === J.space) && (n(), s.stopPropagation(), s.preventDefault());
    }
  };
}
const iU = 34, lU = 20, gfe = {
  name: "AMenu",
  provide() {
    return {
      keySlot: _(() => this.keySlot)
    };
  },
  props: {
    breadcrumbsLinkClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link"
    },
    breadcrumbsTruncatedDropdownProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    breadcrumbsTruncatedOffset: {
      type: Number,
      required: !1,
      default: () => iU + lU
    },
    buttonToggleClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_transparent_secondary a_btn_small"
    },
    buttonToggleProps: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    canChangeBodyClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    compareUrlCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !1,
      default: () => []
    },
    hasSearch: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBackdropMobileClickable: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBlockerClickable: {
      type: Boolean,
      required: !1
    },
    isBodyFocusAfterClick: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLinkTruncated: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMenuOpenInitial: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isSearchBreadcrumbsTruncated: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTranslated: {
      type: Boolean,
      required: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyGroup: {
      type: String,
      required: !1,
      default: "group"
    },
    keyIcon: {
      type: String,
      required: !1,
      default: "icon"
    },
    keyId: {
      type: String,
      required: !1,
      default: "id"
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyLabelCallback: {
      type: Function,
      required: !1,
      default: void 0
    },
    keyParent: {
      type: String,
      required: !1,
      default: "parent"
    },
    keySlot: {
      type: String,
      required: !1,
      default: void 0
    },
    menuId: {
      type: String,
      required: !1,
      default: () => st("a_menu_")
    },
    showCountChildren: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useBackdropMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useEscapeForMobile: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  setup(e) {
    const t = d(e, "isLinkTruncated"), n = d(e, "showCountChildren"), r = d(e, "breadcrumbsTruncatedOffset"), {
      dataKeyById: s,
      dataProParent: i
    } = X$(e), {
      isSearchActive: o,
      itemsWithSearch: u,
      modelSearch: f,
      resetSearch: A,
      searchInputId: E,
      styleSearchPanelMain: p,
      updateModelSearch: T
    } = aU(e, {
      dataKeyById: s
    }), {
      closeAllPanels: S,
      isSubMenuOpen: L,
      panelParentsOpen: b,
      setDefaultMenu: I,
      togglePanel: v
    } = tU(e, {
      dataKeyById: s,
      resetSearch: A
    }), {
      closeMenu: R,
      isMenuOpen: g,
      removeBodyClasses: D,
      toggleMenu: w
    } = RS(e), {
      isDesktopSubMenuVisibleWhenMenuClosed: F,
      menuRef: P,
      removeListenerForKeydownDesktop: M,
      removeListenerForKeydownMobile: O,
      setListenerForKeydownDesktop: q,
      setListenerForKeydownMobile: U
    } = Z$(e, {
      closeMenu: R,
      isMenuOpen: g,
      isSubMenuOpen: L,
      panelParentsOpen: b,
      togglePanel: v
    }), {
      clickOnSearchBtn: G,
      keydownOnSearchBtn: te
    } = sU({
      searchInputId: E,
      toggleMenu: w
    }), {
      attributesMenuClick: ne,
      attributesMobile: oe,
      headerId: se
    } = Q$(e, {
      isMenuOpen: g,
      toggleMenu: w
    }), {
      destroyEventBusUpdateViewOnResize: ie,
      initEventBusUpdateViewOnResize: me,
      initMenuOpenOrClose: Ve,
      isMenuInitialized: Le,
      isMobileWidth: _e
    } = rU(e, {
      removeListenerForKeydownMobile: O,
      toggleMenu: w
    }), {
      clickMenuLink: ve,
      isMenuLinkClicked: be
    } = J$(e, {
      closeAllPanels: S,
      isMenuOpen: g,
      isMobileWidth: _e,
      resetSearch: A,
      toggleMenu: w
    }), {
      attributesBlockerClick: je
    } = K$(e, {
      closeAllPanels: S
    }), {
      activeRoutesIds: Re,
      checkAllRoutes: Z,
      currentRoute: H
    } = Y$(e, {
      dataKeyById: s,
      dataProParent: i,
      isMenuLinkClicked: be,
      isMenuOpen: g,
      panelParentsOpen: b
    }), {
      destroyPopover: X,
      startPopper: ae
    } = nU(e, {
      menuRef: P,
      isMenuOpen: g,
      panelParentsOpen: b
    }), {
      isLeastOnePanelOpenAndMenuClosed: ye
    } = eU({
      isMenuOpen: g,
      panelParentsOpen: b
    }), {
      clickAttributesBackdrop: Ce,
      isBackdropVisible: qe
    } = z$(e, {
      isMenuOpen: g,
      isMobileWidth: _e,
      toggleMenu: w
    });
    return rt(H, () => {
      Z();
    }, {
      immediate: !0,
      deep: !0
    }), rt(g, (Qe) => {
      Le.value && (A(), S(), Qe ? (X(), U()) : O());
    }), rt(b, () => {
      ae();
    }, {
      deep: !0
    }), rt(F, (Qe) => {
      Qe ? q() : M();
    }), Je("activeRoutesIds", _(() => Re.value)), Je("clickMenuLink", ve), Je("isLinkTruncated", _(() => t.value)), Je("isMenuOpen", _(() => g.value)), Je("panelParentsOpen", b), Je("showCountChildren", _(() => n.value)), Je("togglePanel", v), Je("breadcrumbsTruncatedOffset", _(() => r.value)), Ve(), me(), Ot(() => {
      D(), ie(), X(), M(), O();
    }), {
      activeRoutesIds: Re,
      attributesBlockerClick: je,
      attributesMenuClick: ne,
      attributesMobile: oe,
      checkAllRoutes: Z,
      clickAttributesBackdrop: Ce,
      clickOnSearchBtn: G,
      dataKeyById: s,
      dataProParent: i,
      headerId: se,
      isBackdropVisible: qe,
      isLeastOnePanelOpenAndMenuClosed: ye,
      isMenuOpen: g,
      isMobileWidth: _e,
      isSearchActive: o,
      isSubMenuOpen: L,
      itemsWithSearch: u,
      keydownOnSearchBtn: te,
      menuRef: P,
      modelSearch: f,
      panelParentsOpen: b,
      removeBodyClasses: D,
      searchInputId: E,
      setDefaultMenu: I,
      styleSearchPanelMain: p,
      toggleMenu: w,
      togglePanel: v,
      updateModelSearch: T
    };
  },
  render() {
    return c("nav", {
      ref: "menuRef",
      id: this.menuId,
      "aria-labelledby": this.headerId,
      class: [
        "a_menu",
        {
          a_menu_sub_open: this.isSubMenuOpen,
          a_menu_open: this.isMenuOpen,
          a_menu_close: !this.isMenuOpen,
          a_menu_mobile: this.isMobileWidth
        }
      ],
      ...this.attributesMobile,
      ...this.attributesMenuClick
    }, [
      c("div", {
        class: "a_menu__navbar_top"
      }, [
        c(h$, {
          buttonToggleProps: this.buttonToggleProps,
          canChangeBodyClass: this.canChangeBodyClass,
          class: this.buttonToggleClass,
          insideMenu: !0,
          menuId: this.menuId
        }),
        this.$slots.menuSearch && this.$slots.menuSearch(),
        this.hasSearch && c(yn, {
          id: this.searchInputId,
          class: "a_menu__navbar_top__search",
          modelValue: this.modelSearch,
          label: "_A_MENU_2_SEARCH_",
          "onUpdate:modelValue": this.updateModelSearch
        })
      ]),
      c("div", {
        class: "a_menu__panels__main",
        style: this.styleSearchPanelMain
      }, [
        c("div", {
          class: "a_menu__navbar_top_sub"
        }, [
          c(Ee, {
            id: this.headerId,
            class: "a_menu__navbar_top_sub__text",
            tag: "strong",
            text: "_A_MENU_2_MAIN_MENU_"
          }),
          this.hasSearch && c(pt, {
            role: "button",
            tabindex: 0,
            tag: "a",
            class: "a_menu__navbar_top_sub__search a_menu__link a_menu__link_btn",
            iconLeft: xl,
            iconClass: "a_menu__link__icon",
            title: "_A_MENU_2_OPEN_SEARCH_",
            textScreenReader: "_A_MENU_2_OPEN_SEARCH_",
            onClick: this.clickOnSearchBtn,
            onKeydown: this.keydownOnSearchBtn
          })
        ]),
        c(j$, {
          class: {
            a_menu__vertical_scroll_hidden: this.isLeastOnePanelOpenAndMenuClosed
          },
          disabled: this.isMenuOpen || this.isLeastOnePanelOpenAndMenuClosed
        }, () => [
          c(ZE, {
            attributesBlockerClick: this.attributesBlockerClick,
            dataKeyById: this.dataKeyById,
            dataProParentChildren: this.dataProParent.children,
            isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
            isPanelMain: !0,
            isSearchActive: this.isSearchActive,
            keyGroup: this.keyGroup,
            keyIcon: this.keyIcon,
            menuId: this.menuId,
            paneIndex: "00",
            panelItems: this.dataProParent.main,
            panelParentsOpen: this.panelParentsOpen
          }, this.$slots)
        ]),
        c("div", {
          class: "a_menu__panels"
        }, [
          Object.keys(this.dataProParent.children).map((e, t) => c(ZE, {
            key: e,
            attributesBlockerClick: {},
            breadcrumbsLinkClass: this.breadcrumbsLinkClass,
            breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
            dataKeyById: this.dataKeyById,
            dataProParentChildren: this.dataProParent.children,
            isBreadcrumbsTruncated: this.isBreadcrumbsTruncated,
            isSearchActive: this.isSearchActive,
            keyGroup: this.keyGroup,
            keyIcon: this.keyIcon,
            menuId: this.menuId,
            paneIndex: t,
            panelItems: this.dataProParent.children[e],
            panelParentsOpen: this.panelParentsOpen,
            parentId: e
          }, this.$slots))
        ])
      ]),
      c(H$, {
        breadcrumbsLinkClass: this.breadcrumbsLinkClass,
        breadcrumbsTruncatedDropdownProps: this.breadcrumbsTruncatedDropdownProps,
        dataProParentChildren: this.dataProParent.children,
        isSearchActive: this.isSearchActive,
        isSearchBreadcrumbsTruncated: this.isSearchBreadcrumbsTruncated,
        itemsWithSearch: this.itemsWithSearch,
        menuId: this.menuId,
        modelSearch: this.modelSearch
      }, this.$slots),
      this.isBackdropVisible ? c(oa, {
        to: "body"
      }, [
        c("div", {
          class: "a_menu__backdrop a_backdrop a_backdrop_fade",
          "aria-hidden": !0,
          ...this.clickAttributesBackdrop
        })
      ]) : ""
    ]);
  }
};
function oU(e) {
  const t = d(e, "hideHeader"), n = d(e, "id");
  return {
    headerId: _(() => {
      if (!t.value)
        return `${n.value}_header`;
    })
  };
}
function CS(e) {
  const t = d(e, "bodyHtml"), n = d(e, "id");
  return {
    bodyHtmlId: _(() => {
      if (t.value)
        return `${n.value}_body_html`;
    })
  };
}
function uU(e) {
  const t = d(e, "close"), n = d(e, "isConfirm"), r = () => {
    n.value || t.value();
  };
  return {
    destroyEventBusCloseFromOutside: () => {
      Rt.$off("closeModal", r);
    },
    initEventBusCloseFromOutside: () => {
      Rt.$on("closeModal", r);
    }
  };
}
function _U(e) {
  const t = d(e, "disabled"), n = d(e, "loading");
  return {
    disabledLocal: _(() => t.value || n.value)
  };
}
function dU(e) {
  const t = d(e, "close"), n = d(e, "useEscape"), {
    isOnePopupOpen: r
  } = af();
  return {
    pressEscape: (i) => {
      !n.value || r.value || (t.value(), i.preventDefault(), i.stopPropagation());
    }
  };
}
function cU(e) {
  const t = d(e, "focusStartId"), n = d(e, "focusStartId"), r = B(void 0), s = B(void 0), i = () => {
    const A = document.getElementById(t.value);
    A && A.focus();
  }, o = () => {
    var E;
    const A = ((E = s.value) == null ? void 0 : E.querySelectorAll(vi)) || [];
    A.length !== 0 && A[0].focus();
  };
  return {
    modalRef: r,
    modalWrapperRef: s,
    setFocusByShowModal: () => {
      setTimeout(() => {
        n.value || (t.value ? i() : o());
      });
    },
    trapFocus: (A) => {
      const E = s.value.querySelectorAll(vi);
      if (E.length === 0) {
        A.preventDefault();
        return;
      }
      const p = E[0], T = E[E.length - 1];
      A.shiftKey ? document.activeElement === p && (T.focus(), A.preventDefault()) : document.activeElement === T && (p.focus(), A.preventDefault());
    }
  };
}
function fU(e) {
  const t = d(e, "selectorClose"), n = d(e, "selectorCloseIds"), r = _(() => {
    const o = [];
    return n.value && (ot(n.value) ? o.push(`#${n.value}`) : Te(n.value) && z(n.value, (u) => {
      o.push(`#${u}`);
    })), t.value && (ot(t.value) ? o.push(t.value) : Te(t.value) && o.push(...t.value)), o;
  }), s = ({ selector: o }) => {
    const u = document.querySelector(o);
    return u ? (u.focus(), !0) : !1;
  };
  return {
    setFocusByDestroy: () => {
      if (!r.value.length)
        return;
      const o = he(r.value);
      setTimeout(() => {
        z(o, (u) => {
          if (s({ selector: u }))
            return !1;
        });
      }, 300);
    }
  };
}
function hU({
  removeListenerForKeydown: e = () => {
  },
  setFocusByDestroy: t = () => {
  }
}) {
  return {
    hideModal: () => {
      document.body.classList.remove("a_modal_open"), t(), e();
    }
  };
}
function AU({
  pressEscape: e = () => {
  },
  trapFocus: t = () => {
  }
}) {
  const n = (i) => {
    const o = i || window.$event;
    o.key === "Escape" || o.keyCode === J.escape ? e(i) : (o.key === "Tab" || o.keyCode === J.tab) && t(o);
  };
  return {
    setListenerForKeydown: () => {
      document.addEventListener("keydown", n);
    },
    removeListenerForKeydown: () => {
      document.removeEventListener("keydown", n);
    }
  };
}
function EU(e, {
  checkOpenedModals: t = () => {
  },
  setFocusByShowModal: n = () => {
  },
  setListenerForKeydown: r = () => {
  }
}) {
  const s = d(e, "isModalHidden");
  return {
    showModal: () => {
      s.value || (t(), document.body.classList.add("a_modal_open"), n(), r());
    }
  };
}
function pU(e) {
  const t = d(e, "size");
  return {
    sizeClass: _(() => {
      if (t.value)
        return `a_modal_${t.value}`;
    })
  };
}
function TU(e) {
  const t = d(e, "stop");
  return {
    clickWrapperStoppPropagationEventMap: _(() => t.value ? {
      onClick: (r) => r.stopPropagation()
    } : {})
  };
}
function SU(e) {
  const t = d(e, "backdropZIndex"), n = d(e, "zIndex"), r = B(0), s = _(() => {
    const u = {};
    return n.value ? u["--a_modal_zindex"] = n.value : r.value > 1 && (u["--a_modal_zindex"] = 1055 + r.value - 1), u;
  }), i = _(() => {
    const u = {};
    return t.value ? u["--a__backdrop_zindex"] = t.value : r.value > 1 && (u["--a__backdrop_zindex"] = 1054 + r.value - 1), u;
  });
  return {
    checkOpenedModals: () => {
      const u = document.querySelectorAll(".a_backdrop");
      r.value = (u == null ? void 0 : u.length) || 0;
    },
    countOpenedModals: r,
    stylesBackdrop: i,
    stylesZIndexModal: s
  };
}
const Oe = B({
  propsDefault: {
    closeButtonClass: "a_btn a_btn_secondary",
    closeButtonText: "_A_MODAL_BTN_CANCEL_",
    closeButtonTextScreenReaderFooter: "_A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_",
    closeButtonTextScreenReaderHeader: "_A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_",
    headerTag: "h2",
    idPrefix: void 0,
    isCloseButtonHide: !1,
    isDataFormHide: !1,
    isDataFormRender: !0,
    isFooterSticky: !1,
    isRequired: !1,
    isSaveButtonHide: !1,
    modalClass: void 0,
    modalStyle: void 0,
    saveButtonClass: "a_btn a_btn_primary",
    saveButtonText: "_A_MODAL_BTN_SAVE_",
    saveButtonTextScreenReader: "_A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_",
    selectorClose: void 0,
    selectorCloseIds: void 0,
    size: void 0,
    textRequired: void 0,
    useEscape: !0
  }
}), Rfe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    Oe.value.propsDefault = {
      ...Oe.value.propsDefault,
      ...t
    };
  }
}, Uu = {
  name: "AModal",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    bodyHtml: {
      type: String,
      required: !1,
      default: ""
    },
    bodyHtmlClass: {
      type: [String, Array, Object],
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideFooter: {
      type: Boolean,
      required: !1
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_modal_")
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isCloseButtonHide
    },
    isConfirm: {
      type: Boolean,
      required: !1
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isFooterSticky
    },
    isModalHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => Oe.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => Oe.value.propsDefault.modalStyle
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => Oe.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => Oe.value.propsDefault.selectorCloseIds
    },
    showCloseButtonHeader: {
      type: Boolean,
      required: !1,
      default: !0
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => Oe.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const t = d(e, "isModalHidden"), {
      checkOpenedModals: n,
      stylesBackdrop: r,
      stylesZIndexModal: s
    } = SU(e), {
      bodyHtmlId: i
    } = CS(e), {
      destroyEventBusCloseFromOutside: o,
      initEventBusCloseFromOutside: u
    } = uU(e), {
      headerId: f
    } = oU(e), {
      sizeClass: A
    } = pU(e), {
      disabledLocal: E
    } = _U(e), {
      modalRef: p,
      modalWrapperRef: T,
      setFocusByShowModal: S,
      trapFocus: L
    } = cU(e), {
      setFocusByDestroy: b
    } = fU(e), {
      pressEscape: I
    } = dU(e), {
      setListenerForKeydown: v,
      removeListenerForKeydown: R
    } = AU({
      pressEscape: I,
      trapFocus: L
    }), {
      showModal: g
    } = EU(e, {
      checkOpenedModals: n,
      setFocusByShowModal: S,
      setListenerForKeydown: v
    }), {
      hideModal: D
    } = hU({
      removeListenerForKeydown: R,
      setFocusByDestroy: b
    }), {
      clickWrapperStoppPropagationEventMap: w
    } = TU(e);
    return rt(t, () => {
      t.value ? D() : g();
    }), u(), Gr(() => {
      g();
    }), Ot(() => {
      o();
    }), bp(() => {
      D();
    }), {
      bodyHtmlId: i,
      clickWrapperStoppPropagationEventMap: w,
      disabledLocal: E,
      headerId: f,
      modalRef: p,
      modalWrapperRef: T,
      sizeClass: A,
      stylesBackdrop: r,
      stylesZIndexModal: s
    };
  },
  render() {
    const e = this.hideFooter ? "" : c("div", {
      ref: "modal_footer",
      class: [
        "a_modal_footer",
        {
          a_modal_footer_sticky: this.isFooterSticky
        }
      ]
    }, [
      c(yS, {
        alwaysTranslate: this.alwaysTranslate,
        isLoading: this.loading
      }, () => [
        c("div", {
          class: "a_modal_footer_actions"
        }, [
          this.$slots.modalFooterPrepend && this.$slots.modalFooterPrepend(),
          !this.isSaveButtonHide && this.save && c(Ae, {
            id: this.saveButtonId,
            alwaysTranslate: this.alwaysTranslate,
            class: this.saveButtonClass,
            disabled: this.disabledLocal || this.disabledSave,
            extra: this.extra,
            html: this.saveButtonText,
            textAriaHidden: !0,
            textScreenReader: this.saveButtonTextScreenReader,
            type: "button",
            ...this.saveButtonAttributes,
            onClick: this.save
          }),
          !this.isCloseButtonHide && c(Ae, {
            id: this.closeButtonId,
            alwaysTranslate: this.alwaysTranslate,
            class: this.closeButtonClass,
            disabled: this.disabledLocal,
            extra: this.extra,
            html: this.closeButtonText,
            textAriaHidden: !0,
            textScreenReader: this.closeButtonTextScreenReaderFooter,
            type: "button",
            ...this.closeButtonAttributes,
            onClick: () => this.close(!0)
          }),
          this.$slots.modalFooterAppend && this.$slots.modalFooterAppend()
        ])
      ])
    ]);
    return c(oa, {
      to: "body"
    }, [
      c("div", {
        ref: "modalWrapperRef",
        ...this.clickWrapperStoppPropagationEventMap
      }, [
        c("div", {
          ref: "modalRef",
          id: this.id,
          class: ["a_modal", this.modalClass, {
            a_modal_confirm: this.isConfirm,
            a_modal_show: !this.isModalHidden
          }],
          role: "dialog",
          ariaModal: !0,
          "aria-labelledby": this.headerId,
          "aria-describedby": this.bodyHtmlId,
          style: [
            this.modalStyle,
            this.stylesZIndexModal
          ],
          ...this.$attrs
        }, [
          c("div", {
            class: ["a_modal_dialog a_modal_dialog_scrollable", this.sizeClass]
          }, [
            c("div", {
              class: [
                "a_modal_content",
                {
                  a_modal_content_with_footer_sticky: this.isFooterSticky
                }
              ]
            }, [
              this.hideHeader ? "" : c("div", {
                ref: "modal_header",
                class: "a_modal_header"
              }, [
                c("div", {
                  id: this.headerId
                }, [
                  this.$slots.modalHeader ? this.$slots.modalHeader() : "",
                  this.headerText ? c(this.headerTag, {
                    class: "a_modal_title"
                  }, [
                    c(Ee, {
                      alwaysTranslate: this.alwaysTranslate,
                      tag: "span",
                      html: this.headerText,
                      extra: this.extra
                    })
                  ]) : ""
                ]),
                this.showCloseButtonHeader ? c(Ae, {
                  alwaysTranslate: this.alwaysTranslate,
                  class: "a_btn_close",
                  disabled: this.disabledLocal,
                  textScreenReader: this.closeButtonTextScreenReaderHeader,
                  title: this.closeButtonTextScreenReaderHeader,
                  type: "button",
                  onClick: () => this.close(!0)
                }) : ""
              ]),
              c("div", {
                ref: "modal_body",
                class: "a_modal_body"
              }, [
                c("div", {
                  ref: "modal_body",
                  class: "a_modal_body__content"
                }, [
                  this.bodyHtml && c(Ee, {
                    id: this.bodyHtmlId,
                    alwaysTranslate: this.alwaysTranslate,
                    class: this.bodyHtmlClass,
                    html: this.bodyHtml,
                    extra: this.extra
                  }),
                  this.$slots.modalBody && this.$slots.modalBody()
                ]),
                this.isFooterSticky ? e : ""
              ]),
              this.isFooterSticky ? "" : e
            ])
          ])
        ])
      ]),
      !this.isModalHidden && c("div", {
        class: [
          "a_backdrop a_backdrop_fade a_backdrop_show",
          {
            a_backdrop_confirm: this.isConfirm
          }
        ],
        style: this.stylesBackdrop
      })
    ]);
  }
};
function mU({
  isModalHidden: e = B(!1)
}) {
  const t = () => {
    e.value = !0;
  };
  return {
    destroyEventBusCloseFromOutside: () => {
      Rt.$off("closeModalConfirm", t);
    },
    initEventBusCloseFromOutside: () => {
      Rt.$on("closeModalConfirm", t);
    }
  };
}
const Ofe = {
  name: "AModalConfirm",
  setup() {
    const {
      closeConfirm: e,
      confirmOptions: t,
      isModalHidden: n
    } = _f(), {
      destroyEventBusCloseFromOutside: r,
      initEventBusCloseFromOutside: s
    } = mU({
      isModalHidden: n
    }), i = _(() => ({
      isModalHidden: n.value,
      isConfirm: !0,
      ...t.value,
      showCloseButtonHeader: !1,
      close: e
    }));
    return s(), Ot(() => {
      r();
    }), {
      modalProps: i
    };
  },
  render() {
    return c(Uu, this.modalProps, this.$slots);
  }
};
function LU(e) {
  const t = d(e, "dataForm");
  return {
    hasDataForm: _(() => t.value.length > 0)
  };
}
function bU({ emit: e }) {
  return {
    changeLocal: (r) => {
      e("change", r);
    },
    updateModelLocal: (r) => {
      e("update:modelValue", r);
    }
  };
}
const IU = {
  name: "AModalForm",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    bodyHtml: {
      type: String,
      required: !1,
      default: ""
    },
    bodyHtmlClass: {
      type: [String, Array, Object],
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    dataForm: {
      type: Array,
      required: !1,
      default: () => []
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    errors: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideFooter: {
      type: Boolean,
      required: !1
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_modal_form_")
    },
    idPrefix: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.idPrefix
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isCloseButtonHide
    },
    isConfirm: {
      type: Boolean,
      required: !1
    },
    isDataFormHide: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isDataFormHide
    },
    isDataFormRender: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isDataFormRender
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isFooterSticky
    },
    isModalHidden: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isRequired: {
      type: Boolean,
      required: !1,
      default: Oe.value.propsDefault.isRequired
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => Oe.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => Oe.value.propsDefault.modalStyle
    },
    modelValue: {
      type: Object,
      required: !1,
      default: void 0
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => Oe.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => Oe.value.propsDefault.selectorCloseIds
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => Oe.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    textErrorHeader: {
      type: String,
      required: !1,
      default: void 0
    },
    textRequired: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.textRequired
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    }
  },
  emits: [
    "change",
    "update:modelValue"
  ],
  setup(e, t) {
    const {
      bodyHtmlId: n
    } = CS(e), {
      hasDataForm: r
    } = LU(e), {
      changeLocal: s,
      updateModelLocal: i
    } = bU(t);
    return {
      bodyHtmlId: n,
      changeLocal: s,
      hasDataForm: r,
      updateModelLocal: i
    };
  },
  render() {
    return c(Uu, {
      alwaysTranslate: this.alwaysTranslate,
      backdropZIndex: this.backdropZIndex,
      close: this.close,
      closeButtonClass: this.closeButtonClass,
      closeButtonId: this.closeButtonId,
      closeButtonText: this.closeButtonText,
      closeButtonTextScreenReaderFooter: this.closeButtonTextScreenReaderFooter,
      closeButtonTextScreenReaderHeader: this.closeButtonTextScreenReaderHeader,
      disabled: this.disabled,
      disabledSave: this.disabledSave,
      extra: this.extra,
      focusStartId: this.focusStartId,
      headerTag: this.headerTag,
      headerText: this.headerText,
      hideFooter: this.hideFooter,
      hideHeader: this.hideHeader,
      id: this.id,
      isCloseButtonHide: this.isCloseButtonHide,
      isConfirm: this.isConfirm,
      isFooterSticky: this.isFooterSticky,
      isModalHidden: this.isModalHidden,
      isSaveButtonHide: this.isSaveButtonHide,
      loading: this.loading,
      modalClass: this.modalClass,
      modalStyle: this.modalStyle,
      save: this.save,
      saveButtonClass: this.saveButtonClass,
      saveButtonId: this.saveButtonId,
      saveButtonText: this.saveButtonText,
      saveButtonTextScreenReader: this.saveButtonTextScreenReader,
      selectorClose: this.selectorClose,
      selectorCloseIds: this.selectorCloseIds,
      size: this.size,
      stop: this.stop,
      useEscape: this.useEscape,
      useFocusOnStart: this.useFocusOnStart,
      zIndex: this.zIndex,
      "aria-describedby": this.bodyHtmlId
    }, {
      ...this.$slots || {},
      modalBody: () => [
        this.$slots.modalBodyPrepend && this.$slots.modalBodyPrepend(),
        this.bodyHtml && c(Ee, {
          id: this.bodyHtmlId,
          alwaysTranslate: this.alwaysTranslate,
          class: this.bodyHtmlClass,
          html: this.bodyHtml,
          extra: this.extra
        }),
        this.hasDataForm && c(Fu, {
          alwaysTranslate: this.alwaysTranslate,
          modelValue: this.modelValue,
          data: this.dataForm,
          errors: this.errors,
          idPrefix: this.idPrefix,
          isRequired: this.isRequired,
          textRequired: this.textRequired,
          textErrorHeader: this.textErrorHeader,
          isHide: this.isDataFormHide,
          isRender: this.isDataFormRender,
          "onUpdate:modelValue": this.updateModelLocal,
          onChange: this.changeLocal
        }, this.$slots),
        this.$slots.modalBodyAppend && this.$slots.modalBodyAppend()
      ]
    });
  }
};
function vU(e) {
  const t = d(e, "stepIndex"), n = d(e, "stepActiveComputed"), r = _(() => n.value === t.value), s = _(() => t.value < n.value);
  return {
    isStepActive: r,
    isStepBeforeActive: s
  };
}
function yU(e, {
  isStepDisabled: t = _(() => !1),
  isStepActive: n = _(() => !1)
}) {
  const r = d(e, "id"), s = d(e, "stepIndex"), i = _(() => t.value || n.value ? -1 : 0), o = _(() => n.value ? {
    "aria-current": "step"
  } : {}), u = _(() => `${r.value}_step_text_${s.value}`), f = _(() => `${r.value}_step_status_text_${s.value}`);
  return {
    ariaCurrentAttributes: o,
    tabindex: i,
    stepStatusTextId: f,
    stepTextId: u
  };
}
function DS(e) {
  const t = d(e, "id"), n = d(e, "stepIndex");
  return {
    contentId: _(() => `${t.value}_${n.value}_content`)
  };
}
function gU(e) {
  const t = d(e, "step"), n = d(e, "stepIndex"), r = d(e, "stepActiveComputed"), s = d(e, "isForwardStepButtonDisabled"), i = d(e, "isBackStepButtonDisabled"), o = d(e, "isForwardButtonDisabled"), u = d(e, "isBackButtonDisabled"), f = _(() => n.value < r.value), A = _(() => n.value > r.value);
  return {
    isStepDisabled: _(() => t.value.disabled ? !0 : A.value ? o.value || s.value : f.value ? u.value || i.value : !1)
  };
}
function RU(e) {
  const t = d(e, "step"), n = d(e, "stepIconError"), r = d(e, "stepIconErrorText"), s = d(e, "stepIconWarning"), i = d(e, "stepIconWarningText"), o = _(() => {
    if (t.value.error)
      return n.value;
    if (t.value.warning)
      return s.value;
  }), u = _(() => {
    if (t.value.error)
      return r.value;
    if (t.value.warning)
      return i.value;
  });
  return {
    iconErrorWarning: o,
    titleIconErrorWarning: u
  };
}
function OU(e, { emit: t }, {
  isStepDisabled: n = _(() => !1)
}) {
  const r = d(e, "step"), s = d(e, "stepIndex"), i = ({ $event: u }) => {
    n.value || t("onStepClick", {
      $event: u,
      step: r.value,
      stepIndex: s.value
    });
  };
  return {
    onClick: i,
    onKeydown: (u) => {
      (u.keyCode === J.enter || u.keyCode === J.space) && (i({ $event: u }), u.preventDefault(), u.stopPropagation());
    }
  };
}
function CU(e, {
  isStepActive: t = _(() => !1),
  isStepBeforeActive: n = _(() => !1),
  isStepDisabled: r = _(() => !1)
}) {
  const s = d(e, "step");
  return {
    linkClass: _(() => ["a_wizard__step__link", {
      active: t.value,
      before_active: n.value,
      default: r.value,
      done: !t.value && !r.value,
      error: s.value.error,
      warning: s.value.warning
    }])
  };
}
function DU(e, {
  isStepActive: t = _(() => !1)
}) {
  const n = d(e, "isMobile"), r = d(e, "isStepNumberVisible"), s = d(e, "showOnlyActiveStepMobile"), i = d(e, "stepIndex"), o = _(() => i.value + 1), u = _(() => n.value && s.value && t.value), f = _(() => r.value ? u.value ? "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_" : o.value : "");
  return {
    stepNumber: o,
    stepNumberText: f
  };
}
function NU(e, {
  isStepActive: t = _(() => !1),
  isStepBeforeActive: n = _(() => !1)
}) {
  return {
    statusText: _(() => t.value ? "_A_WIZARD_STEP_ACTIVE_" : n.value ? "_A_WIZARD_STEP_VISITED_" : "_A_WIZARD_STEP_UPCOMING_")
  };
}
const BU = {
  name: "AWizardStep",
  props: {
    extra: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isMobile: {
      type: Boolean,
      required: !0
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    step: {
      type: Object,
      required: !0
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: Ou
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: Ru
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    stepIndex: {
      type: Number,
      required: !0
    },
    stepsCount: {
      type: Number,
      required: !0
    }
  },
  emits: [
    "onStepClick"
  ],
  setup(e, t) {
    const {
      isStepActive: n,
      isStepBeforeActive: r
    } = vU(e), {
      stepNumber: s,
      stepNumberText: i
    } = DU(e, {
      isStepActive: n
    }), {
      isStepDisabled: o
    } = gU(e), {
      linkClass: u
    } = CU(e, {
      isStepActive: n,
      isStepBeforeActive: r,
      isStepDisabled: o
    }), {
      onClick: f,
      onKeydown: A
    } = OU(e, t, {
      isStepDisabled: o
    }), {
      ariaCurrentAttributes: E,
      stepTextId: p,
      stepStatusTextId: T,
      tabindex: S
    } = yU(e, {
      isStepDisabled: o,
      isStepActive: n
    }), {
      contentId: L
    } = DS(e), {
      statusText: b
    } = NU(e, {
      isStepActive: n,
      isStepBeforeActive: r
    }), {
      iconErrorWarning: I,
      titleIconErrorWarning: v
    } = RU(e);
    return {
      ariaCurrentAttributes: E,
      contentId: L,
      iconErrorWarning: I,
      isStepActive: n,
      isStepDisabled: o,
      linkClass: u,
      onClick: f,
      onKeydown: A,
      statusText: b,
      stepNumber: s,
      stepNumberText: i,
      stepStatusTextId: T,
      stepTextId: p,
      tabindex: S,
      titleIconErrorWarning: v
    };
  },
  render() {
    return c(
      "li",
      {
        class: [
          "a_wizard__step",
          {
            a_wizard__step_active: this.isStepActive
          }
        ]
      },
      [
        c(Ae, {
          "aria-controls": this.contentId,
          "aria-describedby": this.stepStatusTextId,
          ariaDisabled: this.isStepDisabled,
          class: this.linkClass,
          classDefault: "",
          classDisabled: "disabled",
          role: "button",
          tabindex: this.tabindex,
          title: this.step.title,
          type: "link",
          onClick: this.onClick,
          onKeydown: this.onKeydown,
          ...this.ariaCurrentAttributes
        }, () => this.step.slotLabel && this.$slots[this.step.slotLabel] ? this.$slots[this.step.slotLabel]({
          isStepActive: this.isStepActive,
          isStepDisabled: this.isStepDisabled,
          step: this.step,
          stepIndex: this.stepIndex,
          stepNumber: this.stepNumber,
          stepTextId: this.stepTextId
        }) : [
          this.isStepNumberVisible ? c("span", {
            class: "a_wizard__step__number"
          }, [
            this.step.icon ? c(_t, {
              class: "a_wizard__step__number__icon",
              icon: this.step.icon
            }) : c(Ee, {
              class: "a_wizard__step__number__text",
              tag: "span",
              text: this.stepNumberText,
              extra: {
                stepActive: this.stepNumber,
                stepsCount: this.stepsCount
              }
            })
          ]) : "",
          c("span", {
            class: "a_wizard__step__text"
          }, [
            c(Ee, {
              id: this.stepTextId,
              class: "a_wizard__step__text__child",
              extra: this.extra,
              html: this.step.label,
              tag: "span"
            }),
            this.iconErrorWarning ? c(Ae, {
              iconClass: "a_wizard__step__text__icon",
              iconLeft: this.iconErrorWarning,
              tag: "span",
              textScreenReader: this.titleIconErrorWarning,
              title: this.titleIconErrorWarning,
              type: "text"
            }) : ""
          ])
        ]),
        c(Ee, {
          id: this.stepStatusTextId,
          class: "a_sr_only",
          tag: "span",
          text: this.statusText
        }),
        c("span", {
          class: "a_wizard__step__divider",
          ariaHidden: !0
        })
      ]
    );
  }
};
function wU(e) {
  const t = d(e, "stepIndex"), n = d(e, "stepActiveComputed");
  return {
    isStepActive: _(() => t.value === n.value)
  };
}
function PU(e) {
  const t = d(e, "id"), n = d(e, "stepIndex");
  return {
    focusId: _(() => `${t.value}_${n.value}_focus`)
  };
}
function xU(e, {
  isStepActive: t = _(() => !1)
}) {
  const n = d(e, "stepsVisitedComputed"), r = d(e, "stepIndex"), s = _(() => t.value ? "" : "display: none;");
  return {
    isStepRender: _(() => t.value || n.value[r.value]),
    styleStep: s
  };
}
const MU = {
  name: "AWizardTab",
  props: {
    extra: {
      type: Object,
      required: !0
    },
    id: {
      type: String,
      required: !0
    },
    step: {
      type: Object,
      required: !0
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    stepIndex: {
      type: Number,
      required: !0
    },
    stepsVisitedComputed: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    wizardAriaDescribedby: {
      type: String,
      required: !0
    }
  },
  setup(e) {
    const {
      isStepActive: t
    } = wU(e), {
      isStepRender: n,
      styleStep: r
    } = xU(e, {
      isStepActive: t
    }), {
      focusId: s
    } = PU(e), {
      contentId: i
    } = DS(e);
    return {
      contentId: i,
      focusId: s,
      isStepRender: n,
      styleStep: r
    };
  },
  render() {
    return c("div", {
      id: this.contentId
    }, [
      this.isStepRender && c("div", {
        class: "a_wizard__tab_pane",
        style: this.styleStep
      }, [
        c("div", {
          id: this.focusId,
          class: "a_sr_only",
          tabindex: "-1",
          "aria-describedby": this.wizardAriaDescribedby
        }),
        this.$slots[this.step.slot] && this.$slots[this.step.slot]({
          step: this.step,
          stepIndex: this.stepIndex
        })
      ])
    ]);
  }
};
function FU(e, {
  isStepActiveFirst: t = _(() => !1),
  isStepActiveLast: n = _(() => !1)
}) {
  const r = d(e, "isBackButtonDisabled"), s = d(e, "isForwardButtonDisabled"), i = _(() => t.value ? !0 : r.value), o = _(() => n.value ? !0 : s.value);
  return {
    isBackButtonDisabledLocal: i,
    isForwardButtonDisabledLocal: o
  };
}
function qU(e, { emit: t }) {
  return {
    goOneStepBack: () => {
      t("goOneStepBack");
    },
    goOneStepForward: () => {
      t("goOneStepForward");
    }
  };
}
function $U(e) {
  const t = d(e, "steps"), n = d(e, "stepActiveComputed"), r = _(() => n.value === 0), s = _(() => n.value === t.value.length - 1);
  return {
    isStepActiveFirst: r,
    isStepActiveLast: s
  };
}
function UU(e, {
  isStepActiveFirst: t = _(() => !1),
  isStepActiveLast: n = _(() => !1)
}) {
  const r = d(e, "isForwardButtonHide"), s = d(e, "isBackButtonHide"), i = d(e, "isForwardLastButtonHide"), o = d(e, "isBackFirstButtonHide"), u = _(() => s.value ? !0 : t.value && o.value), f = _(() => r.value ? !0 : n.value && i.value);
  return {
    isBackButtonHideLocal: u,
    isForwardButtonHideLocal: f
  };
}
const kU = {
  name: "AWizardToolbar",
  props: {
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: void 0
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !0
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    stepActiveComputed: {
      type: Number,
      required: !1,
      default: 0
    },
    steps: {
      type: Array,
      required: !0
    }
  },
  emits: [
    "goOneStepBack",
    "goOneStepForward"
  ],
  setup(e, t) {
    const {
      isStepActiveFirst: n,
      isStepActiveLast: r
    } = $U(e), {
      isBackButtonDisabledLocal: s,
      isForwardButtonDisabledLocal: i
    } = FU(e, {
      isStepActiveFirst: n,
      isStepActiveLast: r
    }), {
      isBackButtonHideLocal: o,
      isForwardButtonHideLocal: u
    } = UU(e, {
      isStepActiveFirst: n,
      isStepActiveLast: r
    }), {
      goOneStepBack: f,
      goOneStepForward: A
    } = qU(e, t);
    return {
      goOneStepBack: f,
      goOneStepForward: A,
      isBackButtonDisabledLocal: s,
      isBackButtonHideLocal: o,
      isForwardButtonDisabledLocal: i,
      isForwardButtonHideLocal: u
    };
  },
  render() {
    return c(
      "div",
      {
        class: "a_wizard__toolbar"
      },
      [
        !this.isBackButtonHideLocal && c(Ae, {
          class: this.backButtonClass,
          disabled: this.isBackButtonDisabledLocal,
          extra: this.extra,
          iconLeft: this.backButtonIconLeft,
          iconRight: this.backButtonIconRight,
          loading: this.isButtonsLoading,
          text: this.backButtonText,
          textAriaHidden: !0,
          textScreenReader: this.backButtonTitle,
          title: this.backButtonTitle,
          type: "button",
          onClick: this.goOneStepBack,
          ...this.backButtonAttributes
        }),
        !this.isForwardButtonHideLocal && c(Ae, {
          class: this.forwardButtonClass,
          disabled: this.isForwardButtonDisabledLocal,
          extra: this.extra,
          iconLeft: this.forwardButtonIconLeft,
          iconRight: this.forwardButtonIconRight,
          loading: this.isButtonsLoading,
          text: this.forwardButtonText,
          textAriaHidden: !0,
          textScreenReader: this.forwardButtonTitle,
          title: this.forwardButtonTitle,
          type: "button",
          onClick: this.goOneStepForward,
          ...this.forwardButtonAttributes
        }),
        this.$slots.toolbar && this.$slots.toolbar()
      ]
    );
  }
};
function HU(e, {
  stepActiveComputed: t = _(() => 0)
}) {
  const n = d(e, "ariaLabel"), r = d(e, "ariaLabelSteps"), s = d(e, "extra"), i = d(e, "id"), {
    getTranslationAttributes: o,
    getTranslatedText: u,
    isPlaceholderTranslate: f
  } = Vs(), A = _(() => f(n.value)), E = _(() => f(r.value)), p = _(() => {
    if (A.value)
      return u({
        placeholder: n.value,
        extra: s.value
      });
  }), T = _(() => {
    if (E.value)
      return u({
        placeholder: r.value,
        extra: s.value
      });
  }), S = _(() => o({
    attr: "aria-label",
    value: n.value,
    translation: p.value,
    isTranslate: A.value
  })), L = _(() => o({
    attr: "aria-label",
    value: r.value,
    translation: T.value,
    isTranslate: E.value
  })), b = _(() => `${i.value}_progressbar`), I = _(() => `${i.value}_step_text_${t.value}`), v = _(() => `${b.value} ${I.value}`);
  return {
    ariaLabelAttributes: S,
    ariaLabelStepsAttributes: L,
    idProgressbar: b,
    wizardAriaDescribedby: v
  };
}
function VU(e, {
  subTypeLocal: t = _(() => {
  })
}) {
  const n = d(e, "type"), r = d(e, "isStepsJustified");
  return {
    classWizard: _(() => {
      let i = `a_wizard a_wizard_${n.value}`;
      return r.value && (i += " a_wizard_justified"), t.value && (i += ` a_wizard_${n.value}_${ul.snakeCase(t.value)}`), i;
    })
  };
}
function WU(e, { emit: t }, {
  stepActiveComputed: n = _(() => 0),
  stepActiveLocal: r = B(0),
  stepsVisitedLocal: s = B({})
}) {
  const i = d(e, "isControlOutside"), o = d(e, "steps"), u = ({ stepIndex: T, step: S }) => {
    i.value ? t("goStepBack", {
      step: S,
      targetStepIndex: T,
      currentStepIndex: n.value
    }) : r.value = T;
  }, f = ({ stepIndex: T, step: S }) => {
    i.value ? t("goStepForward", {
      step: S,
      targetStepIndex: T,
      currentStepIndex: n.value
    }) : (r.value = T, s.value[T] = !0);
  };
  return {
    goOneStepBack: () => {
      n.value !== 0 && u({
        stepIndex: n.value - 1
      });
    },
    goOneStepForward: () => {
      n.value >= o.value.length - 1 || f({
        stepIndex: n.value + 1
      });
    },
    onStepClick: ({ stepIndex: T, step: S }) => {
      n.value !== T && (T < n.value ? u({ stepIndex: T, step: S }) : f({ stepIndex: T, step: S }));
    }
  };
}
function GU(e) {
  const t = d(e, "hasFocusJump"), n = d(e, "id"), r = B([]);
  return {
    setFocusToActiveStep: ({ stepActive: i }) => {
      t.value && !window.isScrollDisabled && setTimeout(() => {
        const o = `#${n.value}_${i}_focus`;
        Rr({
          selector: o
        });
      });
    },
    wizardTabsRef: r
  };
}
function jU(e, {
  setFocusToActiveStep: t = () => {
  }
}) {
  const n = d(e, "stepActive"), r = d(e, "stepsVisited"), s = d(e, "isControlOutside"), i = B(!1), o = B(0), u = B({
    0: !0
  }), f = _(() => s.value ? n.value : o.value), A = _(() => s.value ? r.value : u.value), E = () => {
    s.value || le(n.value) || (o.value = n.value, u.value = {
      [n.value]: !0
    }), setTimeout(() => {
      i.value = !0;
    });
  };
  return rt(f, (p) => {
    i.value && t({ stepActive: p });
  }), {
    initStepActive: E,
    stepActiveComputed: f,
    stepActiveLocal: o,
    stepsVisitedComputed: A,
    stepsVisitedLocal: u
  };
}
function KU(e) {
  const t = d(e, "isMobile"), {
    isMobileWidth: n
  } = Tn();
  return {
    isMobileLocal: _(() => t.value || n.value)
  };
}
function zU(e, {
  stepActiveComputed: t = _(() => 0)
}) {
  const n = d(e, "steps"), r = _(() => n.value.length);
  return {
    stepActiveNumber: _(() => t.value + 1),
    stepsCount: r
  };
}
function YU(e) {
  const t = d(e, "toolbarBottomTeleportId"), n = _(() => !!t.value);
  return {
    toolbarBottomTeleportSelector: _(() => {
      if (n.value)
        return `#${t.value}`;
    }),
    useTeleportToolbarBottom: n
  };
}
function XU(e) {
  const t = d(e, "subType"), n = d(e, "type");
  return {
    subTypeLocal: _(() => {
      if (t.value)
        return t.value;
      if (n.value === "line")
        return "square";
    })
  };
}
const ZU = {
  name: "AWizard",
  props: {
    ariaLabel: {
      type: String,
      required: !1,
      default: "_A_WIZARD_ARIA_LABEL_"
    },
    ariaLabelSteps: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_ARIA_LABEL_"
    },
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_"
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_TITLE_"
    },
    extra: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_"
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_TITLE_"
    },
    hasFocusJump: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_wizard_")
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isControlOutside: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMobile: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isStepsJustified: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isToolbarBottom: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isToolbarTop: {
      type: Boolean,
      required: !1,
      default: !1
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    stepActive: {
      type: Number,
      required: !1,
      default: void 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: Ou
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: Ru
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    steps: {
      type: Array,
      required: !1,
      default: () => []
    },
    stepsProgressbarText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_"
    },
    stepsVisited: {
      type: Object,
      required: !1,
      default: void 0
    },
    subType: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e, t) => {
        const n = {
          arrows: [],
          basic: [],
          line: ["square", "circle", "square-bordered", "circle-bordered"],
          round: []
        };
        if (t) {
          if (t.type in n)
            return le(e) || n[t.type].indexOf(e) !== -1;
        } else
          return ["square", "circle", "square-bordered", "circle-bordered"].indexOf(e) !== -1;
        return !1;
      }
    },
    toolbarBottomTeleportId: {
      type: String,
      required: !1,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "basic",
      validator: (e) => ["arrows", "line", "round", "basic"].indexOf(e) !== -1
    }
  },
  emits: [
    "goStepBack",
    "goStepForward"
  ],
  setup(e, t) {
    const {
      subTypeLocal: n
    } = XU(e), {
      classWizard: r
    } = VU(e, {
      subTypeLocal: n
    }), {
      setFocusToActiveStep: s,
      wizardTabsRef: i
    } = GU(e), {
      initStepActive: o,
      stepActiveComputed: u,
      stepActiveLocal: f,
      stepsVisitedComputed: A,
      stepsVisitedLocal: E
    } = jU(e, {
      setFocusToActiveStep: s
    }), {
      ariaLabelAttributes: p,
      ariaLabelStepsAttributes: T,
      idProgressbar: S,
      wizardAriaDescribedby: L
    } = HU(e, {
      stepActiveComputed: u
    }), {
      goOneStepBack: b,
      goOneStepForward: I,
      onStepClick: v
    } = WU(e, t, {
      stepActiveComputed: u,
      stepActiveLocal: f,
      stepsVisitedLocal: E
    }), {
      stepActiveNumber: R,
      stepsCount: g
    } = zU(e, {
      stepActiveComputed: u
    }), {
      toolbarBottomTeleportSelector: D,
      useTeleportToolbarBottom: w
    } = YU(e), {
      isMobileLocal: F
    } = KU(e);
    return o(), {
      ariaLabelAttributes: p,
      ariaLabelStepsAttributes: T,
      classWizard: r,
      goOneStepBack: b,
      goOneStepForward: I,
      idProgressbar: S,
      isMobileLocal: F,
      onStepClick: v,
      stepActiveComputed: u,
      stepActiveNumber: R,
      stepsCount: g,
      stepsVisitedComputed: A,
      toolbarBottomTeleportSelector: D,
      useTeleportToolbarBottom: w,
      wizardAriaDescribedby: L,
      wizardTabsRef: i
    };
  },
  render() {
    const e = c(kU, {
      backButtonAttributes: this.backButtonAttributes,
      backButtonClass: this.backButtonClass,
      backButtonIconLeft: this.backButtonIconLeft,
      backButtonIconRight: this.backButtonIconRight,
      backButtonText: this.backButtonText,
      backButtonTitle: this.backButtonTitle,
      extra: this.extra,
      forwardButtonAttributes: this.forwardButtonAttributes,
      forwardButtonClass: this.forwardButtonClass,
      forwardButtonIconLeft: this.forwardButtonIconLeft,
      forwardButtonIconRight: this.forwardButtonIconRight,
      forwardButtonText: this.forwardButtonText,
      forwardButtonTitle: this.forwardButtonTitle,
      isBackButtonDisabled: this.isBackButtonDisabled,
      isBackButtonHide: this.isBackButtonHide,
      isBackFirstButtonHide: this.isBackFirstButtonHide,
      isButtonsLoading: this.isButtonsLoading,
      isForwardButtonDisabled: this.isForwardButtonDisabled,
      isForwardButtonHide: this.isForwardButtonHide,
      isForwardLastButtonHide: this.isForwardLastButtonHide,
      stepActiveComputed: this.stepActiveComputed,
      steps: this.steps,
      onGoOneStepBack: this.goOneStepBack,
      onGoOneStepForward: this.goOneStepForward
    }, this.$slots);
    return c("div", {
      tabindex: 0,
      id: this.id,
      role: "application",
      "aria-describedby": this.wizardAriaDescribedby,
      class: [
        this.classWizard,
        {
          a_wizard_mobile: this.isMobileLocal,
          a_wizard_show_only_active_step_mobile: this.showOnlyActiveStepMobile
        }
      ],
      ...this.ariaLabelAttributes
    }, [
      c(Ee, {
        id: this.idProgressbar,
        class: "a_sr_only",
        extra: {
          stepActive: this.stepActiveNumber,
          stepsCount: this.stepsCount
        },
        tag: "span",
        text: this.stepsProgressbarText
      }),
      c("ul", {
        class: "a_wizard__steps",
        role: "navigation",
        ...this.ariaLabelStepsAttributes
      }, [
        this.steps.map((t, n) => c(BU, {
          key: this.keyId ? t[this.keyId] : n,
          id: this.id,
          extra: this.extra,
          isBackButtonDisabled: this.isBackButtonDisabled,
          isBackStepButtonDisabled: this.isBackStepButtonDisabled,
          isForwardButtonDisabled: this.isForwardButtonDisabled,
          isForwardStepButtonDisabled: this.isForwardStepButtonDisabled,
          isMobile: this.isMobileLocal,
          isStepNumberVisible: this.isStepNumberVisible,
          showOnlyActiveStepMobile: this.showOnlyActiveStepMobile,
          step: t,
          stepActiveComputed: this.stepActiveComputed,
          stepIconError: this.stepIconError,
          stepIconWarning: this.stepIconWarning,
          stepIndex: n,
          stepsCount: this.stepsCount,
          onOnStepClick: this.onStepClick
        }, this.$slots))
      ]),
      this.isToolbarTop && e,
      c("div", {
        class: "a_wizard__tab_content"
      }, [
        this.steps.map((t, n) => c(MU, {
          key: this.keyId ? t[this.keyId] : n,
          id: this.id,
          extra: this.extra,
          step: t,
          stepActiveComputed: this.stepActiveComputed,
          stepIndex: n,
          stepsVisitedComputed: this.stepsVisitedComputed,
          wizardAriaDescribedby: this.wizardAriaDescribedby
        }, this.$slots))
      ]),
      this.isToolbarBottom && c(oa, {
        to: this.toolbarBottomTeleportSelector,
        disabled: !this.useTeleportToolbarBottom
      }, [
        e
      ])
    ]);
  }
};
function JU({ emit: e }) {
  return {
    goStepBackLocal: (r) => {
      e("goStepBack", r);
    },
    goStepForwardLocal: (r) => {
      e("goStepForward", r);
    }
  };
}
function QU(e) {
  const t = d(e, "id"), n = _(() => `${t.value}_footer`), r = _(() => `${t.value}_wizard`);
  return {
    footerId: n,
    wizardId: r
  };
}
function ek() {
  const e = B(void 0);
  return {
    initWizard: () => {
      pi().then(
        () => {
          e.value = !0;
        }
      );
    },
    isWizardVisible: e
  };
}
const Cfe = {
  name: "AModalWizard",
  inheritAttrs: !1,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    backdropZIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    close: {
      type: Function,
      required: !0
    },
    closeButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    closeButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonClass
    },
    closeButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    closeButtonText: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonText
    },
    closeButtonTextScreenReaderFooter: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonTextScreenReaderFooter
    },
    closeButtonTextScreenReaderHeader: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.closeButtonTextScreenReaderHeader
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    disabledSave: {
      type: Boolean,
      required: !1,
      default: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    focusStartId: {
      type: String,
      required: !1,
      default: void 0
    },
    headerTag: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.headerTag
    },
    headerText: {
      type: String,
      required: !1,
      default: void 0
    },
    hideHeader: {
      type: Boolean,
      required: !1
    },
    isCloseButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isCloseButtonHide
    },
    isFooterSticky: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isFooterSticky
    },
    isSaveButtonHide: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.isSaveButtonHide
    },
    loading: {
      type: Boolean,
      required: !1
    },
    modalClass: {
      type: [String, Object],
      required: !1,
      default: () => Oe.value.propsDefault.modalClass
    },
    modalStyle: {
      type: [String, Object],
      required: !1,
      default: () => Oe.value.propsDefault.modalStyle
    },
    save: {
      type: Function,
      required: !1,
      default: void 0
    },
    saveButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    saveButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonClass
    },
    saveButtonId: {
      type: String,
      required: !1,
      default: void 0
    },
    saveButtonText: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonText
    },
    saveButtonTextScreenReader: {
      type: String,
      required: !1,
      default: () => Oe.value.propsDefault.saveButtonTextScreenReader
    },
    selectorClose: {
      type: [String, Array],
      required: !1,
      default: () => Oe.value.propsDefault.selectorClose
    },
    selectorCloseIds: {
      type: [String, Array],
      required: !1,
      default: () => Oe.value.propsDefault.selectorCloseIds
    },
    showCloseButtonHeader: {
      type: Boolean,
      required: !1,
      default: !0
    },
    size: {
      type: String,
      validator: (e) => ["small", "large", "xl", "xxl", "fullscreen"].indexOf(e) !== -1,
      default: () => Oe.value.propsDefault.size
    },
    stop: {
      type: Boolean,
      required: !1
    },
    useEscape: {
      type: Boolean,
      required: !1,
      default: () => Oe.value.propsDefault.useEscape
    },
    useFocusOnStart: {
      type: Boolean,
      required: !1,
      default: !0
    },
    zIndex: {
      type: Number,
      required: !1,
      default: void 0
    },
    // WIZARD
    ariaLabel: {
      type: String,
      required: !1,
      default: "_A_WIZARD_ARIA_LABEL_"
    },
    ariaLabelSteps: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_ARIA_LABEL_"
    },
    backButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    backButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    backButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    backButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_"
    },
    backButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_PREVIOUS_TITLE_"
    },
    forwardButtonAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    forwardButtonClass: {
      type: [String, Array, Object],
      required: !1,
      default: "a_btn a_btn_secondary"
    },
    forwardButtonIconLeft: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonIconRight: {
      type: String,
      required: !1,
      default: void 0
    },
    forwardButtonText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_"
    },
    forwardButtonTitle: {
      type: String,
      required: !1,
      default: "_A_WIZARD_NEXT_TITLE_"
    },
    hasFocusJump: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_modal_wizard_")
    },
    isBackButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isBackButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackFirstButtonHide: {
      type: Boolean,
      required: !1
    },
    isBackStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isButtonsLoading: {
      type: Boolean,
      required: !1
    },
    isControlOutside: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isForwardButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardLastButtonHide: {
      type: Boolean,
      required: !1
    },
    isForwardStepButtonDisabled: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isMobile: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isStepNumberVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isStepsJustified: {
      type: Boolean,
      required: !1,
      default: !0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    showOnlyActiveStepMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    stepActive: {
      type: Number,
      default: void 0
    },
    stepIconError: {
      type: String,
      required: !1,
      default: Ou
    },
    stepIconErrorText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_ERROR_"
    },
    stepIconWarning: {
      type: String,
      required: !1,
      default: Ru
    },
    stepIconWarningText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEP_WARNING_"
    },
    steps: {
      type: Array,
      default: () => []
    },
    stepsProgressbarText: {
      type: String,
      required: !1,
      default: "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_"
    },
    subType: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e, t) => {
        const n = {
          arrows: [],
          basic: [],
          line: ["square", "circle", "square-bordered", "circle-bordered"],
          round: []
        };
        if (t) {
          if (t.type in n)
            return le(e) || n[t.type].indexOf(e) !== -1;
        } else
          return ["square", "circle", "square-bordered", "circle-bordered"].indexOf(e) !== -1;
        return !1;
      }
    },
    stepsVisited: {
      type: Object,
      default: void 0
    },
    type: {
      type: String,
      required: !1,
      default: "basic",
      validator: (e) => ["arrows", "line", "round", "basic"].indexOf(e) !== -1
    }
  },
  emits: [
    "goStepBack",
    "goStepForward"
  ],
  setup(e, t) {
    const {
      goStepBackLocal: n,
      goStepForwardLocal: r
    } = JU(t), {
      footerId: s,
      wizardId: i
    } = QU(e), {
      initWizard: o,
      isWizardVisible: u
    } = ek();
    return o(), {
      footerId: s,
      goStepBackLocal: n,
      goStepForwardLocal: r,
      isWizardVisible: u,
      wizardId: i
    };
  },
  render() {
    return c(Uu, {
      alwaysTranslate: this.alwaysTranslate,
      backdropZIndex: this.backdropZIndex,
      close: this.close,
      closeButtonAttributes: this.closeButtonAttributes,
      closeButtonClass: this.closeButtonClass,
      closeButtonId: this.closeButtonId,
      closeButtonText: this.closeButtonText,
      closeButtonTextScreenReaderFooter: this.closeButtonTextScreenReaderFooter,
      closeButtonTextScreenReaderHeader: this.closeButtonTextScreenReaderHeader,
      disabled: this.disabled,
      disabledSave: this.disabledSave,
      extra: this.extra,
      focusStartId: this.focusStartId,
      headerTag: this.headerTag,
      headerText: this.headerText,
      hideHeader: this.hideHeader,
      id: this.id,
      isCloseButtonHide: this.isCloseButtonHide,
      isFooterSticky: this.isFooterSticky,
      isSaveButtonHide: this.isSaveButtonHide,
      loading: this.loading,
      modalClass: this.modalClass,
      modalStyle: this.modalStyle,
      save: this.save,
      saveButtonAttributes: this.saveButtonAttributes,
      saveButtonClass: this.saveButtonClass,
      saveButtonId: this.saveButtonId,
      saveButtonText: this.saveButtonText,
      saveButtonTextScreenReader: this.saveButtonTextScreenReader,
      selectorClose: this.selectorClose,
      selectorCloseIds: this.selectorCloseIds,
      showCloseButtonHeader: this.showCloseButtonHeader,
      size: this.size,
      stop: this.stop,
      useEscape: this.useEscape,
      useFocusOnStart: this.useFocusOnStart,
      zIndex: this.zIndex
    }, {
      ...this.$slots || {},
      modalBody: () => [
        this.isWizardVisible && c(ZU, {
          id: this.wizardId,
          ariaLabel: this.ariaLabel,
          ariaLabelSteps: this.ariaLabelSteps,
          backButtonAttributes: this.backButtonAttributes,
          backButtonClass: this.backButtonClass,
          backButtonIconLeft: this.backButtonIconLeft,
          backButtonIconRight: this.backButtonIconRight,
          backButtonText: this.backButtonText,
          backButtonTitle: this.backButtonTitle,
          forwardButtonAttributes: this.forwardButtonAttributes,
          forwardButtonClass: this.forwardButtonClass,
          forwardButtonIconLeft: this.forwardButtonIconLeft,
          forwardButtonIconRight: this.forwardButtonIconRight,
          forwardButtonText: this.forwardButtonText,
          forwardButtonTitle: this.forwardButtonTitle,
          hasFocusJump: this.hasFocusJump,
          extra: this.extra,
          isBackButtonDisabled: this.isBackButtonDisabled,
          isBackButtonHide: this.isBackButtonHide,
          isBackFirstButtonHide: this.isBackFirstButtonHide,
          isBackStepButtonDisabled: this.isBackStepButtonDisabled,
          isButtonsLoading: this.isButtonsLoading,
          isControlOutside: this.isControlOutside,
          isForwardButtonDisabled: this.isForwardButtonDisabled,
          isForwardButtonHide: this.isForwardButtonHide,
          isForwardLastButtonHide: this.isForwardLastButtonHide,
          isForwardStepButtonDisabled: this.isForwardStepButtonDisabled,
          isMobile: this.isMobile,
          isStepNumberVisible: this.isStepNumberVisible,
          isStepsJustified: this.isStepsJustified,
          keyId: this.keyId,
          isToolbarBottom: !0,
          isToolbarTop: !1,
          showOnlyActiveStepMobile: this.showOnlyActiveStepMobile,
          stepActive: this.stepActive,
          stepIconError: this.stepIconError,
          stepIconErrorText: this.stepIconErrorText,
          stepIconWarning: this.stepIconWarning,
          stepIconWarningText: this.stepIconWarningText,
          steps: this.steps,
          stepsProgressbarText: this.stepsProgressbarText,
          stepsVisited: this.stepsVisited,
          subType: this.subType,
          toolbarBottomTeleportId: this.footerId,
          type: this.type,
          onGoStepBack: this.goStepBackLocal,
          onGoStepForward: this.goStepForwardLocal
        }, this.$slots)
      ],
      modalFooterPrepend: () => [
        this.$slots.modalWizardFooterPrepend && this.$slots.modalWizardFooterPrepend(),
        c("div", {
          id: this.footerId
        }),
        this.$slots.modalWizardFooterAppend && this.$slots.modalWizardFooterAppend()
      ]
    });
  }
}, Dfe = {
  name: "ANotification",
  setup() {
    const {
      notifications: e,
      removeNotification: t
    } = Mu();
    return {
      notifications: e,
      removeNotification: t
    };
  },
  render() {
    return c(oa, {
      to: "body"
    }, [
      c("div", {
        class: "a_notification_parent"
      }, this.notifications.map((e) => c(qc, {
        key: e.index,
        alwaysTranslate: e.alwaysTranslate,
        isVisible: !0,
        closable: !0,
        type: e.type,
        alertClass: "a_notification",
        onClose: () => this.removeNotification(e.index)
      }, () => [
        c(Ee, {
          alwaysTranslate: e.alwaysTranslate,
          html: e.text,
          extra: e.extra
        })
      ])))
    ]);
  }
}, zo = B("");
function tk(e) {
  const t = d(e, "title"), n = d(e, "extra"), {
    translationChanges: r
  } = Oi(), {
    isPlaceholderTranslate: s,
    getTranslatedText: i
  } = Vs(), o = _(() => {
    if (r.value)
      return s(zo.value) ? i({
        placeholder: zo.value
      }) : zo.value;
  }), u = _(() => {
    if (r.value)
      return s(t.value) ? i({
        placeholder: t.value,
        extra: n.value
      }) : t.value;
  }), f = () => {
    let A = "";
    u.value ? (A = u.value, o.value && (A += ` - ${o.value}`)) : o.value && (A = o.value), document.title = A;
  };
  f(), rt(u, () => {
    f();
  });
}
function nk(e = "") {
  zo.value = e;
}
const Nfe = {
  name: "APageTabTitle",
  props: {
    title: {
      type: String,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    tk(e);
  },
  render() {
    return "";
  }
};
function rk(e, { emit: t }) {
  const n = d(e, "isLoadingTable"), r = d(e, "limit"), s = _(() => `${r.value}`), i = (f) => {
    n.value || t("update:limit", +f);
  };
  return {
    changeLimit: i,
    changeLimitFromSelect: ({ model: f }) => {
      i(f);
    },
    keyDownChangeLimit: (f, A) => {
      (f.keyCode === J.enter || f.keyCode === J.space) && (i(A), f.stopPropagation(), f.preventDefault());
    },
    limitString: s
  };
}
function ak(e) {
  const t = d(e, "offset"), n = d(e, "rowsLength"), r = d(e, "countAllRows"), {
    filterCurrency: s
  } = jn(), i = _(() => s(+t.value + 1, { suffix: "", digits: 0 })), o = _(() => s(+t.value + n.value, { suffix: "", digits: 0 })), u = _(() => s(r.value, { suffix: "", digits: 0 }));
  return {
    extraForTranslate: _(() => ({
      start: i.value,
      current: o.value,
      count: u.value
    }))
  };
}
const sk = {
  name: "APaginationCountPerPage",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    limit: {
      type: Number,
      required: !0
    },
    limitsPerPage: {
      type: Array,
      required: !1,
      default: () => ["10", "25", "50", "100"]
    },
    mode: {
      type: String,
      required: !1,
      default: "group",
      validator: (e) => ["inline", "group", "select"].indexOf(e) !== -1
    },
    offset: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    showTextCountFromTo: {
      type: Boolean,
      required: !1,
      default: !0
    }
  },
  emits: [
    "update:limit"
  ],
  setup(e, t) {
    const {
      changeLimit: n,
      changeLimitFromSelect: r,
      keyDownChangeLimit: s,
      limitString: i
    } = rk(e, t), {
      extraForTranslate: o
    } = ak(e);
    return {
      changeLimit: n,
      changeLimitFromSelect: r,
      extraForTranslate: o,
      keyDownChangeLimit: s,
      limitString: i
    };
  },
  render() {
    return c("div", {
      class: "a_pagination__counts"
    }, this.mode === "inline" || this.mode === "group" ? [
      this.showTextCountFromTo ? c(Ee, {
        class: "a_pagination__count_from_to",
        html: "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_",
        extra: this.extraForTranslate
      }) : "",
      c(Ee, {
        tag: "span",
        class: "a_pagination__count__text",
        html: "_A_COUNT_PER_PAGE_"
      }),
      this.mode === "inline" ? c("div", {
        class: "a_pagination__count"
      }, [
        this.limitsPerPage.map((e) => {
          const t = +e === this.limit;
          return c("div", {
            class: "a_pagination__count__item"
          }, [
            c(Ae, {
              "aria-current": t ? !0 : void 0,
              class: "a_btn a_btn_link a_pagination__count__button",
              disabled: t || this.disabled,
              extra: {
                count: e
              },
              text: e,
              textAriaHidden: !0,
              textScreenReader: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              title: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              type: "button",
              onClick: () => this.changeLimit(e)
            })
          ]);
        })
      ]) : c("ul", {
        class: "a_pagination a_pagination_group"
      }, [
        this.limitsPerPage.map((e) => {
          const t = +e === this.limit;
          return c("li", {
            class: [
              "a_pagination__item",
              {
                active: t
              }
            ]
          }, [
            c(Ae, {
              "aria-current": t ? !0 : void 0,
              class: "a_pagination__item__link",
              disabled: this.disabled,
              extra: {
                count: e
              },
              role: "button",
              tabindex: t || this.disabled ? -1 : 0,
              tag: "a",
              text: e,
              textAriaHidden: !0,
              textScreenReader: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              title: "_A_COUNT_PER_PAGE_ITEM_{{count}}_",
              type: "button",
              onClick: () => this.changeLimit(e),
              onKeydown: (n) => this.keyDownChangeLimit(n, e)
            })
          ]);
        })
      ])
    ] : [
      this.showTextCountFromTo ? c(Ee, {
        class: "a_pagination__count_from_to",
        html: "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_",
        extra: this.extraForTranslate
      }) : "",
      c(qs, {
        label: "_A_COUNT_PER_PAGE_",
        labelClass: "a_sr_only",
        data: this.limitsPerPage,
        isDataSimpleArray: !0,
        isLabelFloat: !1,
        deselectable: !1,
        menuWidthType: "by_content",
        modelValue: this.limitString,
        disabled: this.disabled,
        change: this.changeLimitFromSelect
      })
    ]);
  }
};
function ik(e, {
  currentItem: t = _(() => 1),
  maxItems: n = _(() => 1)
}) {
  const r = d(e, "disabled"), s = _(() => r.value || t.value === 1), i = _(() => r.value || t.value === n.value);
  return {
    disabledButtonFirstPage: s,
    disabledButtonLastPage: i
  };
}
function lk(e) {
  const t = d(e, "paginationMaxItems"), n = d(e, "offset"), r = d(e, "limit"), s = d(e, "totalRowsCount"), i = _(() => v0(t.value)), o = _(() => (n.value / r.value >> 0) + 1), u = _(() => xD(s.value / r.value)), f = _(() => Math.floor(t.value / 2)), A = _(() => t.value * 2 - 1), E = ({ currentItemIndex: T, paginationLength: S }) => {
    let L, b;
    const I = f.value, v = A.value;
    if (T <= I ? (L = 0, b = t.value) : T >= v - (I + 1) ? (L = v - t.value, b = v) : i.value ? (L = T - I + 1, b = T + I + 1) : (L = T - I, b = T + I + 1), b > S) {
      const R = b - S;
      b = S + 1, L = L - R, L < 0 && (L = 0);
    }
    return {
      indexStart: L,
      indexEnd: b
    };
  }, p = _(() => {
    const T = [];
    let S = -1;
    for (let I = t.value - 1; I > -t.value; I--) {
      const v = o.value - I;
      v > 0 && v <= u.value && T.push(v), I === 0 && (S = T.length - 1);
    }
    const {
      indexStart: L,
      indexEnd: b
    } = E({
      currentItemIndex: S,
      paginationLength: T.length
    });
    return T.slice(L, b);
  });
  return {
    currentItem: o,
    maxItems: u,
    paginationItems: p
  };
}
function ok(e, { emit: t }, {
  currentItem: n = _(() => 1),
  disabledButtonFirstPage: r = _(() => !1),
  disabledButtonLastPage: s = _(() => !1),
  maxItems: i = _(() => 1)
}) {
  const o = d(e, "disabled"), u = d(e, "limit"), f = d(e, "offset"), A = (g) => {
    if (o.value || g === n.value)
      return;
    const D = (g - 1) * u.value;
    t("update:offset", D);
  }, E = () => {
    r.value || t("update:offset", 0);
  }, p = () => {
    r.value || t("update:offset", f.value - u.value);
  }, T = () => {
    s.value || t("update:offset", (i.value - 1) * u.value);
  }, S = () => {
    s.value || t("update:offset", f.value + u.value);
  };
  return {
    keyDownUpdateOffset: (g, D) => {
      (g.keyCode === J.enter || g.keyCode === J.space) && (A(D), g.stopPropagation(), g.preventDefault());
    },
    keyDownUpdateOffsetFirst: (g) => {
      (g.keyCode === J.enter || g.keyCode === J.space) && (E(), g.stopPropagation(), g.preventDefault());
    },
    keyDownUpdateOffsetLast: (g) => {
      (g.keyCode === J.enter || g.keyCode === J.space) && (T(), g.stopPropagation(), g.preventDefault());
    },
    keyDownUpdateOffsetNext: (g) => {
      (g.keyCode === J.enter || g.keyCode === J.space) && (S(), g.stopPropagation(), g.preventDefault());
    },
    keyDownUpdateOffsetPrevious: (g) => {
      (g.keyCode === J.enter || g.keyCode === J.space) && (p(), g.stopPropagation(), g.preventDefault());
    },
    updateOffset: A,
    updateOffsetFirst: E,
    updateOffsetLast: T,
    updateOffsetNext: S,
    updateOffsetPrevious: p
  };
}
const uk = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
  <path fill-rule="evenodd" d="M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
</svg>`, _k = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-double-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M3.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L9.293 8 3.646 2.354a.5.5 0 0 1 0-.708"/>
  <path fill-rule="evenodd" d="M7.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L13.293 8 7.646 2.354a.5.5 0 0 1 0-.708"/>
</svg>`, dk = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-chevron-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0"/>
</svg>`, ck = {
  name: "APaginationPages",
  props: {
    disabled: {
      type: Boolean,
      required: !1
    },
    limit: {
      type: Number,
      required: !0
    },
    mode: {
      type: String,
      required: !1,
      default: "normal",
      validator: (e) => ["normal", "short", "loadMore"].indexOf(e) !== -1
    },
    offset: {
      type: Number,
      required: !0
    },
    paginationMaxItems: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => ha(e) && e > 0
    },
    totalRowsCount: {
      type: Number,
      required: !0
    }
  },
  emits: [
    "update:offset"
  ],
  setup(e, t) {
    const {
      currentItem: n,
      maxItems: r,
      paginationItems: s
    } = lk(e), {
      disabledButtonFirstPage: i,
      disabledButtonLastPage: o
    } = ik(e, {
      currentItem: n,
      maxItems: r
    }), {
      keyDownUpdateOffset: u,
      keyDownUpdateOffsetFirst: f,
      keyDownUpdateOffsetLast: A,
      keyDownUpdateOffsetNext: E,
      keyDownUpdateOffsetPrevious: p,
      updateOffset: T,
      updateOffsetFirst: S,
      updateOffsetLast: L,
      updateOffsetNext: b,
      updateOffsetPrevious: I
    } = ok(e, t, {
      currentItem: n,
      disabledButtonFirstPage: i,
      disabledButtonLastPage: o,
      maxItems: r
    });
    return {
      currentItem: n,
      disabledButtonFirstPage: i,
      disabledButtonLastPage: o,
      keyDownUpdateOffset: u,
      keyDownUpdateOffsetFirst: f,
      keyDownUpdateOffsetLast: A,
      keyDownUpdateOffsetNext: E,
      keyDownUpdateOffsetPrevious: p,
      maxItems: r,
      paginationItems: s,
      updateOffset: T,
      updateOffsetFirst: S,
      updateOffsetLast: L,
      updateOffsetNext: b,
      updateOffsetPrevious: I
    };
  },
  render() {
    return c(Ee, {
      tag: "nav",
      class: "a_pagination__nav",
      "aria-label": "_A_PAGINATION_NAVIGATION_"
    }, {
      default: () => this.mode === "loadMore" ? c(Ae, {
        class: "a_btn a_btn_primary",
        text: "Load more",
        type: "button"
      }) : [
        c("ul", {
          class: "a_pagination"
        }, [
          this.mode !== "short" ? c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonFirstPage }]
          }, [
            c(Ae, {
              class: "a_pagination__item__link",
              iconLeft: uk,
              role: "button",
              tabindex: this.disabledButtonFirstPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_FIRST_PAGE_",
              title: "_A_PAGINATION_FIRST_PAGE_",
              type: "button",
              onClick: this.updateOffsetFirst,
              onKeydown: this.keyDownUpdateOffsetFirst
            })
          ]) : "",
          c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonFirstPage }]
          }, [
            c(Ae, {
              class: "a_pagination__item__link",
              iconLeft: dk,
              role: "button",
              tabindex: this.disabledButtonFirstPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_PREVIOUS_PAGE_",
              title: "_A_PAGINATION_PREVIOUS_PAGE_",
              type: "button",
              onClick: this.updateOffsetPrevious,
              onKeydown: this.keyDownUpdateOffsetPrevious
            })
          ]),
          this.mode === "short" ? c("li", {
            class: "a_pagination__item"
          }, [
            c(Ee, {
              class: "a_pagination__item__link disabled",
              html: "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_",
              extra: {
                currentPage: this.currentItem,
                allPages: this.maxItems
              }
            })
          ]) : this.paginationItems.map((e) => {
            const t = e === this.currentItem;
            return c("li", {
              class: ["a_pagination__item", {
                active: t,
                disabled: this.disabled
              }]
            }, [
              c(Ae, {
                "aria-current": t ? !0 : void 0,
                class: "a_pagination__item__link",
                extra: {
                  page: e
                },
                role: "button",
                tabindex: t || this.disabled ? -1 : 0,
                tag: "a",
                text: e,
                textAriaHidden: !0,
                textScreenReader: "_A_PAGINATION_TO_PAGE_{{page}}_",
                title: "_A_PAGINATION_TO_PAGE_{{page}}_",
                type: "button",
                onClick: () => this.updateOffset(e),
                onKeydown: (n) => this.keyDownUpdateOffset(n, e)
              })
            ]);
          }),
          c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonLastPage }]
          }, [
            c(Ae, {
              class: "a_pagination__item__link",
              iconLeft: OS,
              role: "button",
              tabindex: this.disabledButtonLastPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_NEXT_PAGE_",
              title: "_A_PAGINATION_NEXT_PAGE_",
              type: "button",
              onClick: this.updateOffsetNext,
              onKeydown: this.keyDownUpdateOffsetNext
            })
          ]),
          this.mode !== "short" ? c("li", {
            class: ["a_pagination__item", { disabled: this.disabledButtonLastPage }]
          }, [
            c(Ae, {
              class: "a_pagination__item__link",
              iconLeft: _k,
              role: "button",
              tabindex: this.disabledButtonLastPage ? -1 : 0,
              tag: "a",
              textScreenReader: "_A_PAGINATION_LAST_PAGE_",
              title: "_A_PAGINATION_LAST_PAGE_",
              type: "button",
              onClick: this.updateOffsetLast,
              onKeydown: this.keyDownUpdateOffsetLast
            })
          ]) : ""
        ])
      ]
    });
  }
};
function fk(e, {
  isMobile: t = B(!1),
  updateLimit: n = () => {
  },
  updateOffset: r = () => {
  }
}) {
  const s = d(e, "modes"), i = d(e, "countAllRows"), o = d(e, "disabled"), u = d(e, "limitsPerPage"), f = d(e, "limit"), A = d(e, "offset"), E = d(e, "rowsLength"), p = d(e, "totalRowsCount"), T = d(e, "maxPages"), S = _(() => t.value ? s.value.mobile || {
    perPage: {
      mode: "select",
      position: 0,
      showTextCountFromTo: !1
    },
    pagination: {
      mode: "short",
      position: 1
    }
  } : s.value.desktop || {
    perPage: {
      mode: "inline",
      position: 0,
      showTextCountFromTo: !0
    },
    pagination: {
      mode: "normal",
      position: 1
    }
  }), L = _(() => {
    const I = [];
    return z(S.value, (v, R) => {
      I.push({
        ...v,
        component: R
      });
    }), Gd(I, "position");
  });
  return {
    components: _(() => {
      const I = [];
      return z(L.value, (v) => {
        v.component === "perPage" ? I.push(c(sk, {
          countAllRows: i.value,
          disabled: o.value,
          limitsPerPage: u.value,
          limit: f.value,
          offset: A.value,
          rowsLength: E.value,
          mode: v.mode,
          showTextCountFromTo: v.showTextCountFromTo,
          "onUpdate:limit": n
        })) : v.component === "pagination" && I.push(c(ck, {
          limit: f.value,
          disabled: o.value,
          totalRowsCount: p.value,
          offset: A.value,
          paginationMaxItems: T.value,
          mode: v.mode,
          "onUpdate:offset": r
        }));
      }), I;
    })
  };
}
function hk(e, { emit: t }) {
  return {
    updateLimit: (s) => {
      t("update:limit", s);
    },
    updateOffset: (s) => {
      t("update:offset", s);
    }
  };
}
const Ak = {
  name: "APagination",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    hasRows: {
      type: Boolean,
      required: !0
    },
    limit: {
      type: Number,
      required: !0
    },
    limitsPerPage: {
      type: Array,
      required: !1,
      default: () => ["10", "25", "50", "100"]
    },
    maxPages: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => ha(e) && e > 0
    },
    offset: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    totalRowsCount: {
      type: Number,
      required: !0
    },
    modes: {
      type: Object,
      required: !1,
      default: () => ({
        /*
         * perPage: inline / group / select
         * pagination: normal / short / loadMore
         */
        desktop: {
          perPage: {
            mode: "group",
            position: 0,
            showTextCountFromTo: !0
          },
          pagination: {
            mode: "normal",
            position: 1
          }
        },
        mobile: {
          perPage: {
            mode: "select",
            position: 0,
            showTextCountFromTo: !1
          },
          pagination: {
            mode: "short",
            position: 1
          }
        }
      })
    }
  },
  emits: [
    "update:limit",
    "update:offset"
  ],
  setup(e, t) {
    const {
      isMobileWidth: n
    } = Tn(), {
      updateLimit: r,
      updateOffset: s
    } = hk(e, t), {
      components: i
    } = fk(e, {
      isMobile: n,
      updateLimit: r,
      updateOffset: s
    });
    return {
      components: i,
      updateLimit: r,
      updateOffset: s
    };
  },
  render() {
    return this.hasRows ? c("div", {
      class: "a_pagination__parent"
    }, this.components) : null;
  }
};
function Ek(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = d(e, "classProgressBar");
  return {
    classProgressBarLocal: _(() => Ne(n.value) ? n.value(t.value) : n.value)
  };
}
function pk(e) {
  const t = d(e, "duration");
  return {
    durationLocal: _(() => {
      if (!le(t.value))
        return `${t.value}s`;
    })
  };
}
function NS(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = d(e, "valueTextInteger"), {
    filterCurrency: r
  } = jn();
  return {
    valuePercent: _(() => n.value ? r(t.value, {
      suffix: "%",
      digits: 0
    }) : r(t.value, {
      suffix: "%",
      digits: 2
    }))
  };
}
function BS(e) {
  const t = d(e, "min"), n = d(e, "max"), r = d(e, "value");
  return {
    widthPercent: _(() => (r.value - t.value) / (n.value - t.value) * 100)
  };
}
const Bfe = {
  name: "AProgress",
  props: {
    classProgressBar: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    duration: {
      type: Number,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1,
      default: !1
    },
    max: {
      type: Number,
      required: !1,
      default: 100
    },
    min: {
      type: Number,
      required: !1,
      default: 0
    },
    reverse: {
      type: Boolean,
      required: !1,
      default: !1
    },
    showValue: {
      type: Boolean,
      required: !1,
      default: !0
    },
    striped: {
      type: Boolean,
      required: !1,
      default: !1
    },
    stripedFlow: {
      type: Boolean,
      required: !1,
      default: !1
    },
    value: {
      type: Number,
      required: !1,
      default: 0
    },
    valueTextInteger: {
      type: Boolean,
      required: !1,
      default: !1
    }
  },
  setup(e) {
    const {
      widthPercent: t
    } = BS(e), {
      valuePercent: n
    } = NS(e, {
      widthPercent: t
    }), {
      classProgressBarLocal: r
    } = Ek(e, {
      widthPercent: t
    }), {
      durationLocal: s
    } = pk(e);
    return {
      classProgressBarLocal: r,
      durationLocal: s,
      valuePercent: n,
      widthPercent: t
    };
  },
  render() {
    let e;
    return this.$slots.progressText ? e = c("span", {
      class: "a_progress__text"
    }, [
      this.$slots.progressText && this.$slots.progressText({
        valuePercent: this.valuePercent
      })
    ]) : this.showValue && (e = c("span", {
      class: "a_progress__text"
    }, this.valuePercent)), c("div", {
      class: ["a_progress", {
        a_progress_reverse: this.reverse
      }]
    }, [
      c("div", {
        class: [
          "a_progress__bar",
          {
            a_progress__bar_striped: this.striped,
            a_progress__bar_striped_flow: this.stripedFlow,
            a_progress__bar_indeterminate: this.indeterminate
          },
          this.classProgressBarLocal
        ],
        role: "progressbar",
        "aria-valuenow": this.value,
        "aria-valuemin": this.min,
        "aria-valuemax": this.max,
        style: {
          width: `${this.widthPercent}%`,
          "animation-duration": this.durationLocal
        }
      }, [
        e
      ])
    ]);
  }
};
function Tk(e, {
  widthPercent: t = _(() => 0)
}) {
  const n = d(e, "strokeWidth"), r = 50, s = 2 * Math.PI * r, i = _(() => t.value * s / 100), o = _(() => `${i.value}px ${s - i.value}px`), u = _(() => `stroke-dasharray: ${o.value};`), f = _(() => r + n.value / 2);
  return {
    circleStyles: u,
    cxCy: f,
    radius: r
  };
}
function Sk(e) {
  const t = d(e, "width");
  return {
    sizesLocal: _(() => Rn(t.value) ? `height: ${t.value}px; width: ${t.value}px;` : `height: ${t.value}; width: ${t.value};`)
  };
}
function mk(e) {
  const t = d(e, "rotate"), n = d(e, "strokeWidth"), r = _(() => {
    const i = 100 + n.value;
    return `0 0 ${i} ${i}`;
  });
  return {
    svgTransform: _(() => `transform: rotate(${t.value - 90}deg);`),
    svgViewBox: r
  };
}
const wfe = {
  name: "AProgressCircle",
  props: {
    duration: {
      type: Number,
      required: !1,
      default: void 0
    },
    indeterminate: {
      type: Boolean,
      required: !1,
      default: !1
    },
    max: {
      type: Number,
      required: !1,
      default: 100
    },
    min: {
      type: Number,
      required: !1,
      default: 0
    },
    rotate: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= 0 && e <= 360
    },
    showValue: {
      type: Boolean,
      required: !1,
      default: !0
    },
    strokeWidth: {
      type: Number,
      required: !1,
      default: 5,
      validator: (e) => e > 0
    },
    value: {
      type: Number,
      required: !1,
      default: 0
    },
    valueTextClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    valueTextInteger: {
      type: Boolean,
      required: !1,
      default: !1
    },
    width: {
      type: [Number, String],
      required: !1,
      default: 125
    }
  },
  setup(e) {
    const {
      widthPercent: t
    } = BS(e), {
      valuePercent: n
    } = NS(e, {
      widthPercent: t
    }), {
      circleStyles: r,
      cxCy: s,
      radius: i
    } = Tk(e, {
      widthPercent: t
    }), {
      svgTransform: o,
      svgViewBox: u
    } = mk(e), {
      sizesLocal: f
    } = Sk(e);
    return {
      circleStyles: r,
      cxCy: s,
      radius: i,
      sizesLocal: f,
      svgTransform: o,
      svgViewBox: u,
      valuePercent: n,
      widthPercent: t
    };
  },
  render() {
    let e;
    return this.$slots.progressText ? e = c("span", {
      class: ["a_progress_circle__text", this.valueTextClass]
    }, [
      this.$slots.progressText && this.$slots.progressText({
        valuePercent: this.valuePercent
      })
    ]) : this.showValue && (e = c("span", {
      class: ["a_progress_circle__text", this.valueTextClass]
    }, this.valuePercent)), c("div", {
      class: "a_progress_circle",
      style: this.sizesLocal,
      role: "progressbar",
      "aria-valuenow": this.value,
      "aria-valuemin": this.min,
      "aria-valuemax": this.max
    }, [
      c("svg", {
        viewBox: this.svgViewBox,
        style: this.svgTransform
      }, [
        c("circle", {
          class: "a_progress_circle__base",
          cx: this.cxCy,
          cy: this.cxCy,
          r: this.radius,
          "stroke-width": this.strokeWidth
        }),
        c("circle", {
          class: ["a_progress_circle__scale", {
            a_progress_circle__scale_indeterminate: this.indeterminate
          }],
          cx: this.cxCy,
          cy: this.cxCy,
          r: this.radius,
          "stroke-width": this.strokeWidth,
          style: this.circleStyles
        })
      ]),
      e
    ]);
  }
}, df = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16">
  <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
</svg>`, JE = {
  name: "ADecimalIcon",
  components: {
    AIcon: _t
  },
  props: {
    value: {
      type: Number,
      default: 50
    },
    color: {
      type: String,
      default: "yellow"
    },
    icon: {
      type: String,
      default: df
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    }
  },
  render() {
    const e = {
      class: "a_decimal_rate_icon a_rate_icon_decimal",
      style: {
        position: "absolute",
        overflow: "hidden",
        width: `${this.value}%`,
        color: this.color
      }
    };
    return c("i", e, [
      c(_t, {
        icon: this.icon,
        class: `a_decimal_rate_icon a_rate_icon_${this.size}`
      })
    ]);
  }
}, wS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star" viewBox="0 0 16 16">
  <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.56.56 0 0 0-.163-.505L1.71 6.745l4.052-.576a.53.53 0 0 0 .393-.288L8 2.223l1.847 3.658a.53.53 0 0 0 .393.288l4.052.575-2.906 2.77a.56.56 0 0 0-.163.506l.694 3.957-3.686-1.894a.5.5 0 0 0-.461 0z"/>
</svg>`, QE = {
  name: "ARateIcon",
  components: {
    AIcon: _t,
    ADecimalIcon: JE
  },
  props: {
    value: {
      type: Number,
      default: 50
    },
    color: {
      type: String,
      default: "yellow"
    },
    icon: {
      type: String,
      default: wS
    },
    iconFill: {
      type: String,
      default: df
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    },
    isHovered: {
      type: Boolean,
      default: !1
    }
  },
  emits: [
    "mouseenter",
    "mouseleave",
    "click",
    "dblclick",
    "mousemove"
  ],
  setup(e, { emit: t }) {
    return {
      handleMouseEnter(n) {
        t("mouseenter", n);
      },
      handleMouseLeave(n) {
        t("mouseleave", n);
      },
      handleClick(n) {
        t("click", n);
      },
      handleDblClick(n) {
        t("dblclick", n);
      },
      handleMouseMove(n) {
        t("mousemove", n);
      }
    };
  },
  render() {
    return c(
      "span",
      {
        class: `el-rate__item a_rate_icon_${this.size}`,
        style: {
          position: "relative",
          display: "inline-flex",
          alignItems: "center",
          justifyContent: "center"
        },
        onClick: this.handleClick,
        onDblclick: this.handleDblClick,
        onMouseenter: this.handleMouseEnter,
        onMouseleave: this.handleMouseLeave,
        onMousemove: this.handleMouseMove
      },
      [
        c("div", { class: "a_rate_icon_align" }, [
          c(_t, {
            icon: this.icon,
            class: "a_decimal_rate_icon a_rate_decimal",
            color: this.color
          }),
          c(JE, {
            icon: this.iconFill,
            value: this.value,
            color: this.color,
            size: this.size
          })
        ])
      ]
    );
  }
}, Pfe = {
  name: "ARate",
  components: {
    AIcon: _t,
    ATranslation: Ee,
    ARateIcon: QE
  },
  props: {
    text: {
      type: String,
      default: null
    },
    extra: {
      type: Object,
      required: !1
    },
    rating: {
      type: Number,
      default: 5
    },
    icon: {
      type: String,
      default: wS
    },
    iconFill: {
      type: String,
      default: df
    },
    readonly: {
      type: Boolean,
      default: !1
    },
    showScore: {
      type: Boolean,
      default: !1
    },
    modelValue: {
      type: Number,
      default: 0
    },
    color: {
      type: String,
      default: "yellow"
    },
    hoveredColor: {
      type: String,
      default: "orange"
    },
    halfIcon: {
      type: Boolean,
      default: !1
    },
    size: {
      type: String,
      default: "medium",
      validator: (e) => ["small", "medium", "big"].includes(e)
    }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const {
      text: n,
      rating: r,
      modelValue: s,
      showScore: i,
      readonly: o,
      icon: u,
      extra: f,
      color: A,
      hoveredColor: E,
      halfIcon: p,
      size: T
    } = Ip(e), S = B(void 0), L = B(void 0), b = B(-1), I = () => {
      S.value = s.value, L.value = s.value;
    }, v = _(() => e.iconFill ? e.iconFill : `${e.icon}Fill`), R = () => {
      o.value || (S.value = 0, t("update:modelValue", S.value));
    }, g = (O, q) => {
      if (o.value)
        return;
      b.value = q;
      let U = q + 1;
      if (p.value) {
        const G = O.target.getBoundingClientRect();
        U = O.clientX - G.left < G.width / 2 ? q + 0.5 : q + 1;
      }
      L.value = U;
    }, D = () => {
      o.value || (b.value = -1);
    }, w = _(() => Array(r.value).fill(null).map((O, q) => q <= b.value ? E.value : q < S.value ? A.value : null)), F = (O, q) => {
      if (o.value)
        return;
      let U = q + 1;
      if (p.value) {
        const G = O.target.getBoundingClientRect();
        U = O.clientX - G.left < G.width / 2 ? q + 0.5 : q + 1;
      }
      t("update:modelValue", U), S.value = U;
    }, P = _(() => {
      const O = b.value >= 0 ? L.value : S.value, q = Math.floor(O), U = O % 1, G = Array(r.value).fill(0);
      for (let te = 0; te < q; te++)
        G[te] = 100;
      return U !== 0 && q < r.value && (G[q] = U * 100), G;
    }), M = (O, q) => {
      if (o.value)
        return;
      let U = q + 1;
      if (p.value) {
        const G = O.target.getBoundingClientRect();
        U = O.clientX - G.left < G.width / 2 ? q + 0.5 : q + 1;
      }
      L.value !== U && (L.value = U, b.value = q);
    };
    return I(), {
      rating: r,
      showScore: i,
      readonly: o,
      icon: u,
      iconFill: v,
      text: n,
      extra: f,
      color: A,
      size: T,
      onMouseEnterIcon: g,
      onMouseLeaveIcon: D,
      onClickIcon: F,
      onDoubleClickIcon: R,
      onMouseMoveIcon: M,
      modelValue: _(() => S.value),
      iconValues: P,
      computedColor: w
    };
  },
  render() {
    return c("div", { class: "a_rate_container" }, [
      ...Array.from({ length: this.rating }, (e, t) => c(QE, {
        class: "a_rate_icon",
        icon: this.icon,
        iconFill: this.iconFill,
        value: this.iconValues[t],
        onClick: (n) => this.onClickIcon(n, t),
        onDblclick: this.onDoubleClickIcon,
        onMouseenter: (n) => this.onMouseEnterIcon(n, t),
        onMouseleave: this.onMouseLeaveIcon,
        onMousemove: (n) => this.onMouseMoveIcon(n, t),
        color: this.computedColor[t],
        size: this.size,
        key: t
      })),
      this.showScore && c("span", { class: "a_rate_score" }, this.modelValue.toString()),
      c(Ee, {
        class: "a_rate_label",
        text: this.text,
        extra: this.extra
      })
    ]);
  }
}, Lk = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
  <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0"/>
</svg>`, bk = {
  name: "AResizer",
  props: {
    direction: {
      type: String,
      required: !0,
      validator: (e) => ["x", "y"].indexOf(e) !== -1
    },
    disabled: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "mousedown",
    "mousemove",
    "mouseoutDocument",
    "mouseup"
  ],
  data() {
    return {
      clientHeight: 0,
      clientWidth: 0
    };
  },
  computed: {
    isDirectionX() {
      return this.direction === "x";
    },
    isDirectionY() {
      return this.direction === "y";
    },
    directionClass() {
      return `a_resizer_${this.direction}`;
    },
    directionIcon() {
      if (this.direction === "x")
        return Lk;
      if (this.direction === "y")
        return ql;
    },
    cursor() {
      if (this.direction === "x")
        return "w-resize";
      if (this.direction === "y")
        return "s-resize";
    },
    bodyClass() {
      return `a_resizer_${this.direction}_active__body`;
    },
    attributesResizer() {
      const e = {
        class: ["a_resizer", this.directionClass, {
          a_resizer_disabled: this.disabled
        }],
        ariaHidden: !0
      };
      return this.disabled || (e.onMousedown = this.mousedown), e;
    }
  },
  unmounted() {
    this.removeMouseEventListeners(), this.removeClassFromBody();
  },
  methods: {
    mousedown(e) {
      this.addMouseEventListeners(), this.clientHeight = document.documentElement.clientHeight, this.clientWidth = document.documentElement.clientWidth, this.$emit("mousedown", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.addClassToBody();
    },
    mousemove(e) {
      this.$emit("mousemove", {
        $event: e,
        clientX: e.clientX,
        clientY: e.clientY,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      });
    },
    mouseup(e) {
      this.removeMouseEventListeners(), this.$emit("mouseup", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.removeClassFromBody();
    },
    mouseoutDocument(e) {
      this.removeMouseEventListeners(), this.$emit("mouseoutDocument", {
        $event: e,
        clientHeight: this.clientHeight,
        clientWidth: this.clientWidth
      }), this.removeClassFromBody();
    },
    addMouseEventListeners() {
      document.addEventListener("mousemove", this.mousemove), document.addEventListener("mouseup", this.mouseup), document.addEventListener("mouseleave", this.mouseoutDocument);
    },
    removeMouseEventListeners() {
      document.removeEventListener("mousemove", this.mousemove), document.removeEventListener("mouseup", this.mouseup), document.removeEventListener("mouseleave", this.mouseoutDocument);
    },
    addClassToBody() {
      document.body.classList.add(this.bodyClass);
    },
    removeClassFromBody() {
      document.body.classList.remove(this.bodyClass);
    }
  },
  render() {
    return c("div", this.attributesResizer, [
      c("div", {
        class: "a_resizer__line"
      }),
      c(_t, {
        class: "a_resizer__icon",
        icon: this.directionIcon
      })
    ]);
  }
}, Ik = {
  name: "ACircle",
  props: {
    cx: {
      type: [Number, String],
      required: !0
    },
    cy: {
      type: [Number, String],
      required: !0
    },
    r: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("circle", {
      cx: this.cx,
      cy: this.cy,
      r: this.r,
      fill: this.fill,
      stroke: this.stroke,
      "stroke-width": this.strokeWidth
    });
  }
}, dl = {
  name: "ARect",
  props: {
    width: {
      type: [Number, String],
      required: !0
    },
    height: {
      type: [Number, String],
      required: !0
    },
    x: {
      type: [Number, String],
      required: !0
    },
    y: {
      type: [Number, String],
      required: !0
    },
    rx: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    ry: {
      type: [Number, String],
      required: !1,
      default: 0
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("rect", {
      width: this.width,
      height: this.height,
      x: this.x,
      y: this.y,
      rx: this.rx,
      ry: this.ry,
      fill: this.fill,
      stroke: this.stroke,
      strokeWidth: this.strokeWidth
    });
  }
};
function vk(e) {
  const t = d(e, "yStandTop"), n = d(e, "pipesWidth"), r = d(e, "centerX"), s = d(e, "balanceWidth"), i = d(e, "balanceCircleRadius"), o = d(e, "balanceTopHeight"), u = d(e, "degree"), f = _(() => t.value - i.value - n.value / 2), A = _(() => s.value / 2), E = _(() => r.value - A.value - i.value), p = _(() => r.value + i.value), T = _(() => t.value - i.value), S = _(() => r.value - n.value / 2), L = _(() => T.value - i.value - o.value);
  return {
    transformRotate: _(() => `rotate(${u.value}, ${r.value}, ${T.value})`),
    widthBalancePipe: A,
    xBalanceLeft: E,
    xBalanceRight: p,
    xBalanceTopHeight: S,
    yBalance: f,
    yBalanceCenter: T,
    yBalanceTopHeight: L
  };
}
const yk = {
  name: "AScaleBalance",
  props: {
    degree: {
      type: Number,
      required: !0
    },
    pipesWidth: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    balanceWidth: {
      type: Number,
      required: !0
    },
    balanceCircleRadius: {
      type: Number,
      required: !0
    },
    balanceTopHeight: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      transformRotate: t,
      widthBalancePipe: n,
      xBalanceLeft: r,
      xBalanceRight: s,
      xBalanceTopHeight: i,
      yBalance: o,
      yBalanceCenter: u,
      yBalanceTopHeight: f
    } = vk(e);
    return {
      transformRotate: t,
      widthBalancePipe: n,
      xBalanceLeft: r,
      xBalanceRight: s,
      xBalanceTopHeight: i,
      yBalance: o,
      yBalanceCenter: u,
      yBalanceTopHeight: f
    };
  },
  render() {
    return c("g", {
      transform: this.transformRotate
    }, [
      c(dl, {
        width: this.pipesWidth,
        height: this.balanceTopHeight,
        x: this.xBalanceTopHeight,
        y: this.yBalanceTopHeight,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(dl, {
        width: this.widthBalancePipe,
        height: this.pipesWidth,
        x: this.xBalanceLeft,
        y: this.yBalance,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(dl, {
        width: this.widthBalancePipe,
        height: this.pipesWidth,
        x: this.xBalanceRight,
        y: this.yBalance,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(Ik, {
        cx: this.centerX,
        cy: this.yBalanceCenter,
        r: this.balanceCircleRadius,
        fill: "none",
        stroke: "currentColor",
        strokeWidth: this.pipesWidth
      })
    ]);
  }
};
function gk(e) {
  const t = d(e, "direction"), n = d(e, "degree"), r = d(e, "balanceWidth"), s = d(e, "balanceCircleRadius"), i = d(e, "yStandTop"), o = d(e, "bowlThreadHeight"), u = d(e, "pipesWidth"), f = d(e, "centerX"), A = d(e, "bowlWidth"), E = _(() => r.value / 2 + s.value), p = _(() => i.value + o.value - u.value / 2 - s.value + 2), T = _(() => t.value === "right" ? n.value : n.value + 180), S = _(() => r.value / 2 + A.value / 2 + s.value - 2), L = _(() => r.value / 2 - A.value / 2 + s.value - 1), b = _(() => t.value === "left" ? f.value - S.value + E.value : f.value + L.value - E.value), I = _(() => (t.value === "right", E.value * Math.cos(T.value * Math.PI / 180) + b.value)), v = _(() => E.value * Math.sin(T.value * Math.PI / 180) + p.value);
  return {
    x: I,
    y: v
  };
}
const ep = {
  name: "AScaleBowl",
  props: {
    direction: {
      type: String,
      required: !0,
      validator: (e) => ["left", "right"].indexOf(e) !== -1
    },
    degree: {
      type: Number,
      required: !0
    },
    balanceWidth: {
      type: Number,
      required: !0
    },
    balanceCircleRadius: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    bowlThreadHeight: {
      type: Number,
      required: !0
    },
    pipesWidth: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    },
    bowlWidth: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      x: t,
      y: n
    } = gk(e);
    return {
      x: t,
      y: n
    };
  },
  render() {
    return c("use", {
      x: this.x,
      y: this.y,
      "xlink:href": "#scale_bowl"
    });
  }
}, Rk = {
  name: "APath",
  props: {
    d: {
      type: String,
      required: !0,
      default: ""
    },
    fill: {
      type: String,
      required: !1,
      default: void 0
    },
    fillRule: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["evenodd", "inherit", "initial", "nonzero", "revert", "unset"].indexOf(e) !== -1
    },
    stroke: {
      type: String,
      required: !1,
      default: void 0
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  render() {
    return c("path", {
      d: this.d,
      fill: this.fill,
      fillRule: this.fillRule,
      stroke: this.stroke,
      strokeWidth: this.strokeWidth
    });
  }
};
function Ok(e) {
  const t = d(e, "points"), n = (s) => Mn(s, (o) => {
    let u = "";
    return ot(o) ? u = o : Te(o) && (u = o.join(",")), u;
  }).join(" ");
  return {
    pointsLocal: _(() => ot(t.value) ? t.value : Te(t.value) ? n(t.value) : "")
  };
}
const Ck = {
  name: "APolyline",
  props: {
    points: {
      type: [Array, String],
      required: !0,
      default: []
    },
    fill: {
      type: String,
      required: !1,
      default: "none"
    },
    stroke: {
      type: String,
      required: !1,
      default: "currentColor"
    },
    strokeWidth: {
      type: [Number, String],
      required: !1,
      default: void 0
    }
  },
  setup(e) {
    const {
      pointsLocal: t
    } = Ok(e);
    return {
      pointsLocal: t
    };
  },
  render() {
    return c("polyline", {
      points: this.pointsLocal,
      fill: this.fill,
      stroke: this.stroke,
      "stroke-width": this.strokeWidth
    });
  }
};
function Dk(e) {
  const t = d(e, "bowlThreadHeight"), n = d(e, "bowlThreadWidth"), r = d(e, "bowlThreadPaddingX"), s = d(e, "bowlWidth"), i = d(e, "bowlRadius"), o = _(() => {
    const f = r.value, A = r.value + n.value / 2, E = r.value + n.value, p = 1, T = p - t.value;
    return `${f},${p} ${A},${T} ${E},${p}`;
  });
  return {
    bowlD: _(() => `m0,0 a${i.value},${i.value} 0 1,0 ${s.value},0 z`),
    bowlThreadPoints: o
  };
}
const Nk = {
  name: "AScaleBowlDefs",
  props: {
    bowlThreadStrokeWidth: {
      type: Number,
      required: !0
    },
    bowlThreadWidth: {
      type: Number,
      required: !0
    },
    bowlThreadHeight: {
      type: Number,
      required: !0
    },
    bowlThreadPaddingX: {
      type: Number,
      required: !0
    },
    bowlWidth: {
      type: Number,
      required: !0
    },
    bowlRadius: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      bowlD: t,
      bowlThreadPoints: n
    } = Dk(e);
    return {
      bowlD: t,
      bowlThreadPoints: n
    };
  },
  render() {
    return c("defs", {}, [
      c("g", {
        id: "scale_bowl"
      }, [
        c(Ck, {
          points: this.bowlThreadPoints,
          strokeWidth: this.bowlThreadStrokeWidth
        }),
        c(Rk, {
          d: this.bowlD,
          fill: "currentColor"
        })
      ])
    ]);
  }
};
function Bk(e) {
  const t = d(e, "centerX"), n = d(e, "standWidth"), r = d(e, "pipesWidth"), s = _(() => t.value - r.value / 2), i = _(() => t.value - n.value / 2);
  return {
    xTop: s,
    xBottom: i
  };
}
const wk = {
  name: "AScaleStand",
  props: {
    pipesWidth: {
      type: Number,
      required: !0
    },
    standWidth: {
      type: Number,
      required: !0
    },
    standHeight: {
      type: Number,
      required: !0
    },
    yStandBottom: {
      type: Number,
      required: !0
    },
    yStandTop: {
      type: Number,
      required: !0
    },
    centerX: {
      type: Number,
      required: !0
    }
  },
  setup(e) {
    const {
      xBottom: t,
      xTop: n
    } = Bk(e);
    return {
      xBottom: t,
      xTop: n
    };
  },
  render() {
    return c("g", null, [
      c(dl, {
        width: this.pipesWidth,
        height: this.standHeight,
        x: this.xTop,
        y: this.yStandTop,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      }),
      c(dl, {
        width: this.standWidth,
        height: this.pipesWidth,
        x: this.xBottom,
        y: this.yStandBottom,
        rx: 1.3,
        ry: 1.3,
        fill: "currentColor"
      })
    ]);
  }
};
function Pk(e) {
  const t = d(e, "value"), n = d(e, "classNegative"), r = d(e, "classPositive"), s = d(e, "classNeutral");
  return {
    cssClass: _(() => {
      if (t.value === 0) {
        if (s.value)
          return s.value;
      } else if (t.value < 0) {
        if (n.value)
          return n.value;
      } else if (r.value)
        return r.value;
    })
  };
}
function xk(e) {
  const t = d(e, "value"), n = d(e, "maxDegree");
  return {
    degree: _(() => n.value * t.value / 100)
  };
}
function Mk(e) {
  const t = d(e, "viewBoxWidth"), n = d(e, "viewBoxHeight"), r = d(e, "pipesWidth"), s = d(e, "standHeight"), i = _(() => `0 0 ${t.value} ${n.value}`), o = _(() => t.value / 2), u = _(() => n.value - r.value), f = _(() => u.value - s.value + 1);
  return {
    centerX: o,
    viewBoxLocal: i,
    yStandBottom: u,
    yStandTop: f
  };
}
const xfe = {
  name: "AScale",
  props: {
    balanceCircleRadius: {
      type: Number,
      required: !1,
      default: 3.5
    },
    balanceTopHeight: {
      type: Number,
      required: !1,
      default: 6
    },
    balanceWidth: {
      type: Number,
      required: !1,
      default: 60
    },
    bowlRadius: {
      type: Number,
      required: !1,
      default: 12.6
    },
    bowlThreadHeight: {
      type: Number,
      required: !1,
      default: 20
    },
    bowlThreadPaddingX: {
      type: Number,
      required: !1,
      default: 4
    },
    bowlThreadStrokeWidth: {
      type: Number,
      required: !1,
      default: 2
    },
    bowlThreadWidth: {
      type: Number,
      required: !1,
      default: 16
    },
    bowlWidth: {
      type: Number,
      required: !1,
      default: 25
    },
    classNegative: {
      type: String,
      required: !1,
      default: void 0
    },
    classNeutral: {
      type: String,
      required: !1,
      default: void 0
    },
    classPositive: {
      type: String,
      required: !1,
      default: void 0
    },
    maxDegree: {
      type: Number,
      required: !1,
      default: 30
    },
    pipesWidth: {
      type: Number,
      required: !1,
      default: 3
    },
    standHeight: {
      type: Number,
      required: !1,
      default: 46
    },
    standWidth: {
      type: Number,
      required: !1,
      default: 70
    },
    value: {
      type: Number,
      required: !1,
      default: 0,
      validator: (e) => e >= -100 && e <= 100
    },
    viewBoxHeight: {
      type: Number,
      required: !1,
      default: 80
    },
    viewBoxWidth: {
      type: Number,
      required: !1,
      default: 100
    }
  },
  setup(e) {
    const {
      degree: t
    } = xk(e), {
      cssClass: n
    } = Pk(e), {
      centerX: r,
      viewBoxLocal: s,
      yStandBottom: i,
      yStandTop: o
    } = Mk(e);
    return {
      centerX: r,
      cssClass: n,
      degree: t,
      viewBoxLocal: s,
      yStandBottom: i,
      yStandTop: o
    };
  },
  render() {
    return c("div", {
      class: this.cssClass
    }, [
      c("svg", {
        viewBox: this.viewBoxLocal,
        version: "1.1",
        xmlns: "http://www.w3.org/2000/svg"
      }, [
        c(Nk, {
          bowlThreadStrokeWidth: this.bowlThreadStrokeWidth,
          bowlThreadWidth: this.bowlThreadWidth,
          bowlThreadHeight: this.bowlThreadHeight,
          bowlThreadPaddingX: this.bowlThreadPaddingX,
          bowlWidth: this.bowlWidth,
          bowlRadius: this.bowlRadius
        }),
        c(yk, {
          degree: this.degree,
          pipesWidth: this.pipesWidth,
          yStandTop: this.yStandTop,
          centerX: this.centerX,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          balanceTopHeight: this.balanceTopHeight
        }),
        c(wk, {
          standWidth: this.standWidth,
          standHeight: this.standHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          yStandBottom: this.yStandBottom,
          yStandTop: this.yStandTop
        }),
        c(ep, {
          direction: "left",
          degree: this.degree,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          yStandTop: this.yStandTop,
          bowlThreadHeight: this.bowlThreadHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          bowlWidth: this.bowlWidth
        }),
        c(ep, {
          direction: "right",
          degree: this.degree,
          balanceWidth: this.balanceWidth,
          balanceCircleRadius: this.balanceCircleRadius,
          yStandTop: this.yStandTop,
          bowlThreadHeight: this.bowlThreadHeight,
          pipesWidth: this.pipesWidth,
          centerX: this.centerX,
          bowlWidth: this.bowlWidth
        })
      ])
    ]);
  }
};
function Fk(e, {
  hasTextAndLength: t = B(!1),
  isMoreButtonObservingVisible: n = B(!1),
  isOpen: r = B(!1),
  isTextShorterThanTextLength: s = B(!1)
}) {
  const i = d(e, "btnIconLeftLess"), o = d(e, "btnIconLeftMore"), u = d(e, "btnIconRightLess"), f = d(e, "btnIconRightMore"), A = d(e, "btnTextLess"), E = d(e, "btnTextMore"), p = d(e, "btnTitleLess"), T = d(e, "btnTitleMore"), S = d(e, "showLess"), L = B(void 0), b = _(() => r.value ? A.value : E.value), I = _(() => r.value ? p.value : T.value), v = _(() => r.value ? i.value : o.value), R = _(() => r.value ? u.value : f.value), g = _(() => t.value ? s.value ? !1 : S.value ? !0 : !r.value : n.value ? S.value ? !0 : !r.value : !1);
  return {
    btnIconLeft: v,
    btnIconRight: R,
    btnText: b,
    btnTitle: I,
    buttonRef: L,
    isButtonVisible: g
  };
}
function qk({
  hasTextAndLength: e = _(() => !1),
  isOpen: t = B(!1)
}) {
  return {
    ariaExpanded: _(() => {
      if (e.value)
        return t.value;
    })
  };
}
function $k(e, {
  hasTextAndLength: t = _(() => !1),
  isOpen: n = B(!1)
}) {
  const r = d(e, "height");
  return {
    maxHeightStyle: _(() => {
      if (!(t.value || n.value))
        return r.value === 0 ? "max-height: none;" : `max-height: ${r.value}px`;
    })
  };
}
function Uk(e) {
  const t = d(e, "isOpenDefault"), n = B(void 0);
  return {
    initIsOpen: () => {
      n.value = t.value;
    },
    isOpen: n
  };
}
function kk(e, {
  isBtnHiddenDependentOnTextLength: t = _(() => !1)
}) {
  const n = d(e, "height"), r = B(void 0), s = B(void 0), i = B(void 0), o = () => {
    if (t.value)
      return;
    (ce(r.value, "offsetHeight") || 0) > n.value ? i.value = !0 : i.value = !1;
  };
  return {
    checkHeight: o,
    containerRef: r,
    isMoreButtonObservingVisible: i,
    startObservingMutation: () => {
      t.value || (s.value = new ResizeObserver(
        El(() => {
          o();
        }, 300)
      ), s.value.observe(r.value));
    },
    stopObservingMutation: () => {
      t.value || s.value && s.value.unobserve(r.value);
    }
  };
}
function Hk({
  hasTextAndLength: e = _(() => !1),
  isOpen: t = B(!1)
}) {
  return {
    textScreenReaderLocal: _(() => {
      if (!e.value)
        return t.value ? "_A_SHOW_MORE_LESS_SCREEN_READER_" : "_A_SHOW_MORE_MORE_SCREEN_READER_";
    })
  };
}
function Vk(e, {
  isOpen: t = B(!1)
}) {
  const n = d(e, "text"), r = d(e, "textLength"), s = _(() => !!(n.value && r.value)), i = _(() => r.value > n.value.length), o = _(() => s.value && i.value), u = _(() => {
    const A = n.value.slice(0, r.value).trimEnd();
    let E = "...", p = !0;
    for (let T = A.length - 1; T > A.length - 4 && A[T] === "."; T--) {
      if (p)
        E = E.slice(0, -1);
      else
        break;
      p = !0;
    }
    return `${A}${E}`;
  }), f = _(() => {
    if (s.value) {
      if (i.value)
        return n.value;
      if (!t.value)
        return u.value;
    }
    return n.value;
  });
  return {
    hasTextAndLength: s,
    isBtnHiddenDependentOnTextLength: o,
    isTextShorterThanTextLength: i,
    textLocal: f
  };
}
function Wk(e, {
  textLocal: t = _(() => {
  })
}) {
  const n = d(e, "safeHtml"), r = d(e, "html");
  return {
    isTextOrHtmlVisible: _(() => !!(t.value || n.value || r.value))
  };
}
function Gk(e, { emit: t }, {
  containerRef: n = B(void 0),
  hasTextAndLength: r = _(() => !1),
  isOpen: s = B(!1),
  stopObservingMutation: i = () => {
  }
}) {
  const o = d(e, "showLess");
  return {
    isOpen: s,
    toggleButton: () => {
      s.value = !s.value, s.value && !o.value && i(), t("toggle", { isOpen: s.value }), r.value && s.value && !window.isScrollDisabled && pi().then(
        () => Rr({
          element: n.value
        })
      );
    }
  };
}
const Mfe = {
  name: "AShowMore",
  inheritAttrs: !0,
  props: {
    alwaysTranslate: {
      type: Boolean,
      required: !1
    },
    btnAttributes: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    btnClass: {
      type: [String, Object],
      required: !1,
      default: "a_btn a_btn_link a_p_0"
    },
    btnIconLeftLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconLeftMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnIconRightMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnId: {
      type: String,
      required: !1,
      default: void 0
    },
    btnParentClass: {
      type: String,
      required: !1,
      default: "a_text_center"
    },
    btnTextLess: {
      type: String,
      required: !1,
      default: "_A_SHOW_MORE_LESS_"
    },
    btnTextMore: {
      type: String,
      required: !1,
      default: "_A_SHOW_MORE_MORE_"
    },
    btnTitleLess: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitleMore: {
      type: String,
      required: !1,
      default: void 0
    },
    btnTitlePlacement: {
      type: String,
      required: !1,
      default: void 0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: !1
    },
    height: {
      type: Number,
      required: !1,
      default: 200,
      validator: (e) => e >= 0
    },
    html: {
      type: String,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_show_more_")
    },
    isBtnTitleHtml: {
      type: Boolean,
      required: !1
    },
    isOpenDefault: {
      type: Boolean,
      required: !1,
      default: !1
    },
    safeHtml: {
      type: String,
      required: !1,
      default: void 0
    },
    showLess: {
      type: Boolean,
      required: !1,
      default: !0
    },
    text: {
      type: String,
      required: !1,
      default: void 0
    },
    textLength: {
      type: Number,
      required: !1,
      default: void 0,
      validator: (e) => e > 0
    }
  },
  emits: [
    "toggle"
  ],
  setup(e, t) {
    const {
      expose: n
    } = t, {
      isOpen: r
    } = Uk(e), {
      hasTextAndLength: s,
      isBtnHiddenDependentOnTextLength: i,
      isTextShorterThanTextLength: o,
      textLocal: u
    } = Vk(e, {
      isOpen: r
    }), {
      isTextOrHtmlVisible: f
    } = Wk(e, {
      textLocal: u
    }), {
      checkHeight: A,
      containerRef: E,
      isMoreButtonObservingVisible: p,
      startObservingMutation: T,
      stopObservingMutation: S
    } = kk(e, {
      isBtnHiddenDependentOnTextLength: i
    }), {
      toggleButton: L
    } = Gk(e, t, {
      containerRef: E,
      hasTextAndLength: s,
      isOpen: r,
      stopObservingMutation: S
    }), {
      btnIconLeft: b,
      btnIconRight: I,
      btnText: v,
      btnTitle: R,
      buttonRef: g,
      isButtonVisible: D
    } = Fk(e, {
      hasTextAndLength: s,
      isMoreButtonObservingVisible: p,
      isOpen: r,
      isTextShorterThanTextLength: o
    }), {
      maxHeightStyle: w
    } = $k(e, {
      hasTextAndLength: s,
      isOpen: r
    }), {
      textScreenReaderLocal: F
    } = Hk({
      hasTextAndLength: s,
      isOpen: r
    }), {
      ariaExpanded: P
    } = qk({
      hasTextAndLength: s,
      isOpen: r
    });
    return n({
      buttonRef: g,
      containerRef: E,
      isOpen: r,
      toggleButton: L
    }), Gr(() => {
      A(), T();
    }), Ot(() => {
      S();
    }), {
      ariaExpanded: P,
      btnIconLeft: b,
      btnIconRight: I,
      btnText: v,
      btnTitle: R,
      buttonRef: g,
      containerRef: E,
      hasTextAndLength: s,
      isButtonVisible: D,
      isOpen: r,
      isTextOrHtmlVisible: f,
      maxHeightStyle: w,
      textLocal: u,
      textScreenReaderLocal: F,
      toggleButton: L
    };
  },
  render() {
    return c("div", {
      class: [
        "a_show_more",
        {
          a_show_more_open: this.isOpen
        }
      ]
    }, [
      c("div", {
        class: "a_show_more__wrapper",
        style: this.maxHeightStyle
      }, [
        c("div", {
          ref: "containerRef",
          id: this.id,
          ariaExpanded: this.ariaExpanded,
          ...this.$attrs
        }, [
          this.isTextOrHtmlVisible && c(Ee, {
            alwaysTranslate: this.alwaysTranslate,
            tag: "div",
            text: this.textLocal,
            html: this.html,
            safeHtml: this.safeHtml
          }),
          this.$slots.default && this.$slots.default({
            isButtonVisible: this.isButtonVisible,
            isOpen: this.isOpen
          })
        ])
      ]),
      this.isButtonVisible && c("div", {
        class: this.btnParentClass
      }, [
        c(pt, {
          ref: "buttonRef",
          id: this.btnId,
          alwaysTranslate: this.alwaysTranslate,
          "aria-controls": this.id,
          class: [
            "a_show_more__button",
            this.btnClass
          ],
          disabled: this.disabled,
          iconLeft: this.btnIconLeft,
          iconRight: this.btnIconRight,
          isTitleHtml: this.isBtnTitleHtml,
          text: this.btnText,
          textAriaHidden: !this.hasTextAndLength,
          textScreenReader: this.textScreenReaderLocal,
          title: this.btnTitle,
          titlePlacement: this.btnTitlePlacement,
          ...this.btnAttributes,
          onClick: this.toggleButton
        }, () => this.$slots.button && this.$slots.button({
          isButtonVisible: this.isButtonVisible,
          isOpen: this.isOpen
        }))
      ])
    ]);
  }
};
function jk(e, {
  attributesForRoot: t = _(() => ({})),
  isColumnVisible: n = _(() => !1),
  isLocked: r = _(() => !1),
  labelTranslated: s = _(() => "")
}) {
  const i = d(e, "searchColumnModel"), o = _(() => {
    if (!i.value)
      return !0;
    const f = new RegExp(gu(i.value), "gi");
    return `${s.value}`.search(f) !== -1;
  });
  return {
    attributesComponent: _(() => {
      const f = {
        ...t.value,
        class: "a_table__th__dropdown__li"
      };
      return o.value || (f.style = "display: none;"), !r.value && !n.value && (f.class += " a_table__th__dropdown__li_invisible"), f;
    })
  };
}
const Kk = `<svg
  xmlns="http://www.w3.org/2000/svg"
  width="18"
  height="18"
  viewBox="0 0 18 18"
>
  <g
    transform="matrix(0.01757813,0,0,0.01757813,-3.96314e-5,1.7578125e-5)"
  >
    <path
      d="m 493.034,717.353 v 0 c -22.097,-7.811 -37.924,-28.881 -37.924,-53.651 0,-31.421 25.469,-56.89 56.89,-56.89 31.421,0 56.89,25.469 56.89,56.89 0,24.769 -15.833,45.843 -37.924,53.651 v 98.392 c 0,9.98 -8.486,18.618 -18.966,18.618 -10.164,0 -18.966,-8.339 -18.966,-18.618 z m -265.48,-300.17 v 0 0 C 164.683,417.358 113.78,467.989 113.78,531.324 v 189.27 c 0,167.568 136.008,303.405 303.372,303.405 h 189.695 c 167.548,0 303.372,-136.179 303.372,-303.405 v -189.27 c 0,-62.93 -50.854,-113.956 -113.774,-114.141 V 284.414 C 796.445,127.332 668.777,-0.001 512,-0.001 c -157.093,0 -284.445,127.307 -284.445,284.415 v 132.769 z m 113.779,0 V 284.476 c 0,-94.496 76.411,-170.699 170.665,-170.699 94.063,0 170.665,76.426 170.665,170.699 V 417.183 H 341.33 Z"
    />
  </g>
</svg>`;
function zk(e, {
  isLocked: t = _(() => !1)
}) {
  const n = d(e, "column"), r = d(e, "disabledOptions"), s = de("changeModelColumnsVisible"), i = de("modelColumnsVisibleLocal"), o = _(() => n.value.id in i.value ? !!i.value[n.value.id] : !n.value.hide), u = _(() => t.value ? Kk : o.value ? iS : sS), f = _(() => t.value ? "_A_TABLE_OPTIONS_BTN_LOCK_TITLE_" : o.value ? "_A_TABLE_OPTIONS_BTN_EYE_TITLE_" : "_A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_"), A = ({ $event: p }) => {
    p.stopPropagation(), p.preventDefault();
    const T = he(i.value);
    T[n.value.id] = !o.value, s(T);
  };
  return {
    buttonVisibleProps: _(() => {
      const p = {
        class: "a_table__th__dropdown_item__icon",
        tag: "span",
        iconLeft: u.value,
        title: f.value,
        textScreenReader: f.value
      };
      return t.value || (p.tag = "button", p.class += " a_table__th__dropdown_item__icon_btn a_btn a_btn_link", p.onClick = A, r.value && (p.disabled = !0)), p;
    }),
    isColumnVisible: o
  };
}
const tp = "a_table__drag_element";
function PS(e, { emit: t }, {
  classOverString: n = "",
  inDropdown: r = !1
}) {
  const s = d(e, "column"), i = d(e, "columnIndex"), o = d(e, "columnIndexDraggable"), u = de("isLoadingOptions"), f = de("isColumnsDnd"), A = B(null), E = _(() => o.value > i.value ? n : `${n}_right`), p = (R) => {
    var g, D, w;
    if ((g = R.target) == null || g.classList.add(tp), r) {
      const F = ((D = R.target) == null ? void 0 : D.offsetHeight) || 30;
      (w = R.target) == null || w.parentElement.style.setProperty("--a_table_draggable_li_height", `${F}px`);
    }
    R.dataTransfer.effectAllowed = "move", t("dragstartParent", {
      columnIndex: i.value
    });
  }, T = (R) => {
    var g, D;
    (g = R.target) == null || g.classList.remove(E.value), (D = R.target) == null || D.classList.remove(tp), t("dragendParent");
  }, S = () => {
    A.value && A.value.classList && A.value.classList.add(E.value), t("dragenterParent", {
      columnIndex: i.value
    });
  }, L = (R) => (R.preventDefault && R.preventDefault(), !1), b = () => {
    A.value && A.value.classList && A.value.classList.remove(E.value), t("dragleaveParent", {
      columnIndex: i.value
    });
  }, I = _(() => !!s.value.locked);
  return {
    attributesForRoot: _(() => {
      const R = {
        ref: "root"
      };
      return !I.value && f.value && (R.draggable = !u.value, R.onDragstart = p, R.onDragend = T, R.onDragenter = S, R.onDragover = L, R.onDragleave = b), R;
    }),
    isLocked: I,
    root: A
  };
}
function Yk(e) {
  const t = d(e, "column"), n = d(e, "searchColumnModel"), {
    filterSearchHighlight: r
  } = jn(), s = _(() => wa(t.value.label) ? Pt({
    placeholder: t.value.label
  }) : t.value.label);
  return {
    labelLocal: _(() => r(s.value, { searchModel: n.value })),
    labelTranslated: s
  };
}
function Xk(e) {
  const t = d(e, "columnIndex"), n = de("changeColumnsOrdering"), r = de("columnsOrdered"), s = de("tableId"), i = ({ columnIndex: T, iconKey: S }) => `${s.value}_${S}_${T}`, o = ({ $event: T }) => {
    T.stopPropagation();
    const S = t.value - 1;
    n({
      columnIndexDraggable: t.value,
      columnIndexOver: S
    }), window.isScrollDisabled || setTimeout(() => {
      Rr({
        selector: `#${i({
          columnIndex: S,
          iconKey: "up"
        })}`
      });
    });
  }, u = ({ $event: T }) => {
    T.stopPropagation();
    const S = t.value + 1;
    n({
      columnIndexDraggable: t.value,
      columnIndexOver: S
    }), window.isScrollDisabled || setTimeout(() => {
      const L = `#${i({
        columnIndex: S,
        iconKey: "down"
      })}`;
      Rr({
        selector: L
      });
    });
  }, f = _(() => i({
    columnIndex: t.value,
    iconKey: "up"
  })), A = _(() => i({
    columnIndex: t.value,
    iconKey: "down"
  })), E = _(() => t.value !== 0 && !r.value[t.value - 1].locked), p = _(() => r.value.length - 1 !== t.value && !r.value[t.value + 1].locked);
  return {
    idButtonArrowDown: A,
    idButtonArrowUp: f,
    isButtonArrowDownVisible: p,
    isButtonArrowUpVisible: E,
    moveColumnDown: u,
    moveColumnUp: o
  };
}
const Zk = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-grip-vertical" viewBox="0 0 16 16">
  <path d="M7 2a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M7 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0M7 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0m-3 3a1 1 0 1 1-2 0 1 1 0 0 1 2 0m3 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/>
</svg>`, Jk = {
  name: "ATableHeaderThActionItem",
  components: {
    AIcon: _t,
    ATranslation: Ee
  },
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    columnIndexDraggable: {
      type: Number,
      required: !1,
      default: -1
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    searchColumnModel: {
      type: String,
      required: !0
    }
  },
  emits: [
    "dragendParent",
    "dragstartParent",
    "dragenterParent",
    "dragleaveParent"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsOrdered",
    "isColumnsDnd",
    "isLoadingOptions",
    "isLoadingTable",
    "modelColumnsVisibleLocal",
    "tableId"
  ],
  setup(e, t) {
    const {
      attributesForRoot: n,
      isLocked: r,
      root: s
    } = PS(e, t, {
      classOverString: "a_table__th__dropdown__li_over",
      inDropdown: !0
    }), {
      labelLocal: i,
      labelTranslated: o
    } = Yk(e), {
      buttonVisibleProps: u,
      isColumnVisible: f
    } = zk(e, {
      isLocked: r
    }), {
      idButtonArrowDown: A,
      idButtonArrowUp: E,
      isButtonArrowDownVisible: p,
      isButtonArrowUpVisible: T,
      moveColumnDown: S,
      moveColumnUp: L
    } = Xk(e), {
      attributesComponent: b
    } = jk(e, {
      attributesForRoot: n,
      isColumnVisible: f,
      isLocked: r,
      labelTranslated: o
    });
    return {
      attributesComponent: b,
      attributesForRoot: n,
      buttonVisibleProps: u,
      idButtonArrowDown: A,
      idButtonArrowUp: E,
      isButtonArrowDownVisible: p,
      isButtonArrowUpVisible: T,
      isLocked: r,
      labelLocal: i,
      moveColumnDown: S,
      moveColumnUp: L,
      root: s
    };
  },
  render() {
    return this.column.isRender === !1 ? null : c("li", this.attributesComponent, [
      c("div", {
        class: "a_dropdown__item_text a_table__th__dropdown_item"
      }, [
        c("div", {
          class: "a_table__th__dropdown_item__child"
        }, [
          c(pt, this.buttonVisibleProps),
          c("span", {
            class: "a_position_relative"
          }, [
            this.column.icon && c(_t, {
              icon: this.column.icon,
              class: "a_table__th__icon"
            }),
            c(Ee, {
              tag: "span",
              class: "a_table__th__text",
              safeHtml: this.labelLocal
            }),
            this.column.title && c(Ee, {
              title: this.column.title,
              ariaHidden: !0,
              tag: "span",
              class: "a_position_absolute_all"
            }),
            this.column.title && c(Ee, {
              text: this.column.title,
              tag: "span",
              class: "a_sr_only"
            })
          ]),
          !this.isLocked && this.isColumnsDnd ? [
            this.isButtonArrowUpVisible && c(pt, {
              id: this.idButtonArrowUp,
              class: "a_sr_only_focusable a_btn a_btn_link a_p_0 a_table__th__dropdown_item__btn_arrow",
              disabled: this.disabledOptions,
              type: "button",
              iconLeft: Pu,
              title: "_A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_",
              textScreenReader: "_A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_",
              onClick: this.moveColumnUp
            }),
            this.isButtonArrowDownVisible && c(pt, {
              id: this.idButtonArrowDown,
              class: "a_sr_only_focusable a_btn a_btn_link a_p_0 a_table__th__dropdown_item__btn_arrow",
              disabled: this.disabledOptions,
              type: "button",
              iconLeft: Ua,
              title: "_A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_",
              textScreenReader: "_A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_",
              onClick: this.moveColumnDown
            })
          ] : ""
        ]),
        !this.isLocked && this.isColumnsDnd && c(_t, {
          icon: Zk,
          class: "a_table__th__dropdown_item__icon_dnd"
        })
      ])
    ]);
  }
};
function xS(e) {
  const t = {};
  return e.forEach((n) => {
    t[n.id] = !n.hide;
  }), t;
}
function MS({ element: e, tagsName: t, classStop: n }) {
  if (e && e.tagName) {
    if (t.indexOf(e.tagName) !== -1)
      return !0;
    if (e.classList.contains(n))
      return !1;
    if (e.parentElement)
      return MS({ element: e.parentElement, tagsName: t, classStop: n });
  }
  return !1;
}
function Qk({ $event: e, classStop: t = "", tagsName: n = [] } = {}) {
  return e && e.target ? MS({ element: e.target, tagsName: n, classStop: t }) : !1;
}
function cl({ column: e, modelColumnsVisibleLocal: t }) {
  return e.isRender === !1 ? !1 : e.id in t ? !!t[e.id] : !e.hide;
}
function eH({ column: e }) {
  return e.isRender === !1 ? !1 : !e.hide;
}
function tH({ columnIndex: e, indexFirstScrollInvisibleColumn: t }) {
  return le(t) ? !0 : e < t;
}
function nH({ column: e, columnIndex: t, modelIsTableWithoutScroll: n, modelColumnsVisibleLocal: r, indexFirstScrollInvisibleColumn: s }) {
  return n ? cl({
    column: e,
    modelColumnsVisibleLocal: r
  }) && tH({
    columnIndex: t,
    indexFirstScrollInvisibleColumn: s
  }) : cl({
    column: e,
    modelColumnsVisibleLocal: r
  });
}
function FS({ tableId: e }) {
  return `${e}_preview_right`;
}
function qS({ tableId: e }) {
  return `${e}_multiple_panel`;
}
function $S({ tableId: e }) {
  return `${e}_header_label`;
}
function fu({ row: e, rowIndex: t, keyId: n }) {
  return n ? ce(e, n) : t;
}
function US({ rowAction: e, row: t, rowIndex: n }) {
  return e.isHidden ? !1 : Ne(e.isHiddenCallback) ? !e.isHiddenCallback({
    row: t,
    rowIndex: n
  }) : !0;
}
function rH() {
  const e = B("");
  return {
    searchColumnModel: e,
    updateSearchColumnModel: (n) => {
      e.value = n;
    }
  };
}
function kS({
  classOver: e = "",
  classOverRight: t = "",
  classOverParent: n = "",
  inHeader: r = !1
}) {
  const s = B(void 0), i = B(void 0), o = B(void 0), u = de("changeColumnsOrdering"), f = _(() => !le(i.value)), A = ({ columnIndex: b }) => {
    i.value = b;
  }, E = ({ columnIndex: b }) => {
    o.value = b;
  }, p = ({ columnIndex: b }) => {
    o.value === b && (o.value = void 0);
  }, T = (b) => {
    if (!(le(i.value) || le(o.value)))
      return u({
        columnIndexDraggable: i.value,
        columnIndexOver: o.value,
        inHeader: r
      }), b.stopPropagation(), !1;
  }, S = () => {
    s.value.querySelectorAll(`.${n}`).forEach((I) => {
      I.classList.remove(e), I.classList.remove(t);
    });
  };
  return {
    columnIndexDraggable: i,
    dragstart: A,
    dragenter: E,
    dragleave: p,
    dragend: () => {
      S(), i.value = void 0;
    },
    drop: T,
    isDragstart: f,
    root: s
  };
}
function HS() {
  const e = de("columnActionsWidthMinLocal"), t = de("modelIsTableWithoutScroll");
  return {
    stylesThTd: _(() => t.value ? {} : {
      style: `width: ${e.value}px;`
    })
  };
}
const aH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-counterclockwise" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2z"/>
  <path d="M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466"/>
</svg>`, sH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-gear-fill" viewBox="0 0 16 16">
  <path d="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z"/>
</svg>`, rc = {
  name: "ATableHeaderThAction",
  inject: [
    "changeModelIsTableWithoutScroll",
    "columnActionsWidthLocal",
    "changeColumnsOrdering",
    "changeModelColumnsVisible",
    "columns",
    "columnsOrdered",
    "isActionIconVisible",
    "modelIsTableWithoutScroll"
  ],
  props: {
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    }
  },
  setup() {
    const {
      columnIndexDraggable: e,
      dragend: t,
      dragenter: n,
      dragleave: r,
      dragstart: s,
      drop: i,
      isDragstart: o,
      root: u
    } = kS({
      classOver: "a_table__th__dropdown__li_over",
      classOverRight: "a_table__th__dropdown__li_over_right",
      classOverParent: "a_table__th__dropdown__li",
      inHeader: !1
    }), {
      searchColumnModel: f,
      updateSearchColumnModel: A
    } = rH(), {
      stylesThTd: E
    } = HS();
    return {
      columnIndexDraggable: e,
      dragend: t,
      dragenter: n,
      dragleave: r,
      dragstart: s,
      drop: i,
      isDragstart: o,
      root: u,
      searchColumnModel: f,
      stylesThTd: E,
      updateSearchColumnModel: A
    };
  },
  methods: {
    selectAllColumns() {
      const e = {};
      z(this.columnsOrdered, (t) => {
        e[t.id] = !0;
      }), this.changeModelColumnsVisible(e);
    },
    deselectAllColumns() {
      const e = {};
      z(this.columnsOrdered, (t) => {
        e[t.id] = !!t.locked;
      }), this.changeModelColumnsVisible(e);
    },
    resetColumns() {
      this.changeModelColumnsVisible(xS(this.columnsOrdered)), this.changeColumnsOrdering({ reset: !0 });
    }
  },
  render() {
    return c("div", {
      class: [
        "a_table__th a_table__cell a_table__cell_action",
        {
          a_table__cell_action_sticky: this.isRowActionsStickyLocal
        }
      ],
      role: "columnheader",
      ...this.stylesThTd
    }, [
      c("span", {
        class: "a_sr_only"
      }, "Aktionen"),
      this.isActionIconVisible && c(la, {
        buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
        buttonTitle: "_A_TABLE_DROPDOWN_OPTIONS_TITLE_",
        buttonTextScreenReader: "_A_TABLE_DROPDOWN_OPTIONS_TITLE_",
        dropdownTag: "div",
        dropdownClass: "a_p_0",
        hasCaret: !1,
        isCloseByClickInside: !1,
        disabled: this.disabledOptions,
        placement: "left",
        menuWidth: 320,
        inBody: !0
      }, {
        button: () => c(_t, {
          icon: sH
        }),
        dropdown: () => [
          c("ul", {
            class: ["a_table__th__dropdown__ul", {
              a_table__th__dropdown__ul_dragstart: this.isDragstart
            }],
            ref: "root",
            onDrop: this.drop
          }, [
            c("li", null, [
              c("div", {
                class: "a_dropdown__item_text a_table__th__dropdown__search"
              }, [
                c(yn, {
                  label: "Suchen",
                  modelValue: this.searchColumnModel,
                  isClearButton: !0,
                  modelUndefined: "",
                  "onUpdate:modelValue": this.updateSearchColumnModel
                })
              ])
            ]),
            c("li", {
              class: "a_dropdown__divider",
              "aria-hidden": !0
            }),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.selectAllColumns
              }, [
                c(_t, {
                  icon: ef,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Alle einblenden")
              ])
            ]),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.deselectAllColumns
              }, [
                c(_t, {
                  icon: Ea,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Alle ausblenden")
              ])
            ]),
            c("li", null, [
              c("button", {
                type: "button",
                class: "a_dropdown__item",
                disabled: this.disabledOptions,
                onClick: this.resetColumns
              }, [
                c(_t, {
                  icon: aH,
                  class: "a_table__th__dropdown_item__icon"
                }),
                c("span", null, "Zurücksetzen")
              ])
            ]),
            c("li", null, [
              c(AS, {
                class: "a_dropdown__item_text a_text_nowrap",
                disabled: this.disabledOptions,
                modelValue: this.modelIsTableWithoutScroll,
                trueLabel: "Kompakte Ansicht",
                falseLabel: "Kompakte Ansicht",
                "onUpdate:modelValue": this.changeModelIsTableWithoutScroll
              })
            ]),
            c("li", {
              class: "a_dropdown__divider",
              "aria-hidden": !0
            }),
            this.columnsOrdered.map((e, t) => c(Jk, {
              column: e,
              columnIndex: t,
              columnIndexDraggable: this.columnIndexDraggable,
              disabledOptions: this.disabledOptions,
              searchColumnModel: this.searchColumnModel,
              onDragstartParent: this.dragstart,
              onDragenterParent: this.dragenter,
              onDragleaveParent: this.dragleave,
              onDragendParent: this.dragend
            }))
          ])
        ]
      })
    ]);
  }
};
function VS(e, { emit: t }) {
  const n = d(e, "areAllRowsSelected"), r = d(e, "areAllVisibleRowsSelected"), s = d(e, "areSomeRowsSelected"), i = d(e, "rowsLocalLength"), o = _(() => !!(i.value === 0 || n.value)), u = _(() => s.value && !(r.value || n.value)), f = _(() => r.value || n.value), A = _(() => u.value || f.value ? "_A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_" : "_A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_");
  return {
    isCheckboxDisabled: o,
    isCheckboxIndeterminate: u,
    labelCheckbox: A,
    modelValueCheckboxLocal: f,
    toggleCheckbox: () => {
      o.value || t("setSelectedRowsIndexes", { isAll: !0 });
    }
  };
}
const iH = {
  name: "ATableGroupedHeader",
  props: {
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areAllVisibleRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    columnsForRender: {
      type: Array,
      required: !0
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !0
    },
    rowsLocalLength: {
      type: Number,
      required: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMobile",
    "isMultipleActionsActive"
  ],
  setup(e, t) {
    const {
      isCheckboxDisabled: n,
      isCheckboxIndeterminate: r,
      labelCheckbox: s,
      modelValueCheckboxLocal: i,
      toggleCheckbox: o
    } = VS(e, t);
    return {
      isCheckboxDisabled: n,
      isCheckboxIndeterminate: r,
      labelCheckbox: s,
      modelValueCheckboxLocal: i,
      toggleCheckbox: o
    };
  },
  render() {
    return this.isMobile ? null : c("div", {
      ref: "root",
      role: "rowgroup",
      class: "a_table__head"
    }, [
      c("div", {
        class: "a_table__row a_table__head__row",
        role: "row"
      }, [
        this.isMultipleActionsActive && c("div", {
          role: "columnheader",
          class: "a_table__th a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;",
          "aria-colindex": 1
        }, [
          c(xu, {
            isWidthAuto: !0,
            modelValue: this.modelValueCheckboxLocal,
            indeterminate: this.isCheckboxIndeterminate,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        this.columnsForRender,
        this.isActionColumnVisible && c(rc, {
          disabledOptions: this.disabledOptions,
          isRowActionsStickyLocal: this.isRowActionsStickyLocal
        })
      ])
    ]);
  }
};
function lH(e, {
  ariaSort: t = _(() => ({})),
  attributesForRoot: n = _(() => ({})),
  columnsStyles: r = _(() => ""),
  isLocked: s = _(() => !1),
  isSorting: i = _(() => !1),
  titlesSort: o = _(() => [])
}) {
  const u = d(e, "column"), f = d(e, "columnIndex"), A = d(e, "hasMultipleActions"), E = de("isLoadingOptions"), p = de("isLoadingOptions"), T = _(() => [
    "a_table__th a_table__cell",
    {
      a_table__th_draggable: !s.value && !p.value && E.value,
      a_table__th_sorting: i.value
    },
    u.value.classHeaderParent
  ]), S = _(() => {
    const b = [];
    return (u.value.title || u.value.title === 0) && b.push(u.value.title), b.push(...o.value), b;
  });
  return {
    attributesForTh: _(() => {
      let b = f.value + 1;
      return A.value && b++, {
        ...t.value,
        ...n.value,
        "aria-colindex": b,
        ref: "root",
        role: "columnheader",
        class: T.value,
        style: r.value
      };
    }),
    titlesLocal: S
  };
}
function oH(e) {
  const t = d(e, "column"), n = de("columnsVisibleAdditionalSpaceForOneGrow", 0), r = _(() => le(t.value.grow) ? 1 : t.value.grow);
  return {
    additionalWidthForCurrentColumn: _(() => n.value * r.value)
  };
}
function WS(e) {
  const t = d(e, "column"), n = de("columnWidthDefault"), {
    additionalWidthForCurrentColumn: r
  } = oH(e), s = _(() => t.value.width || n.value), i = _(() => s.value + r.value), o = _(() => `width: ${i.value}px; min-width: ${i.value}px; max-width: ${i.value}px;`);
  return {
    columnsStyles: _(() => t.value.style ? `${o.value} ${t.value.style}` : o.value)
  };
}
const uH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-down-fill" viewBox="0 0 16 16">
  <path d="M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z"/>
</svg>`, _H = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-up-fill" viewBox="0 0 16 16">
  <path d="m7.247 4.86-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z"/>
</svg>`, di = B({
  propsDefault: {
    borderType: "bordered"
  },
  config: {
    isHtmlTitleSort: !1
  }
}), Ffe = {
  install: (e, {
    propsDefault: t = {},
    config: n = {}
  } = {}) => {
    di.value.propsDefault = {
      ...di.value.propsDefault,
      ...t
    }, di.value.config = {
      ...di.value.config,
      ...n
    };
  }
};
function dH(e) {
  const t = d(e, "column"), n = d(e, "columnIndex"), r = d(e, "disabledSort"), s = d(e, "isSortingMultiColumn"), i = d(e, "modelSort"), o = d(e, "showFirstSortingSequenceNumber"), u = de("changeModelSort"), f = de("tableId"), A = _(() => t.value.sortId), E = _(() => !!A.value), p = _(() => i.value.indexOf(A.value)), T = _(() => i.value.indexOf(`-${A.value}`)), S = _(() => p.value !== -1), L = _(() => T.value !== -1), b = _(() => E.value && (S.value || L.value)), I = _(() => {
    if (E.value) {
      let O = "none";
      return S.value ? O = "ascending" : L.value && (O = "descending"), {
        "aria-sort": O
      };
    }
    return {};
  }), v = _(() => c(_t, {
    icon: _H,
    class: "a_table__th__sort__icon a_table__th__sort__icon_up"
  })), R = _(() => c(_t, {
    icon: uH,
    class: "a_table__th__sort__icon a_table__th__sort__icon_down"
  })), g = _(() => {
    const O = [];
    return E.value && (L.value || O.push(v.value), S.value || O.push(R.value)), O;
  }), D = ({ $event: O }) => {
    r.value || u({
      $event: O,
      sortId: A.value
    });
  }, w = _(() => `${f.value}_th_${n.value}_screen_reader`), F = _(() => {
    var O;
    return E.value ? {
      type: "button",
      disabled: r.value,
      isTitleHtml: ((O = di.value.config) == null ? void 0 : O.isHtmlTitleSort) || !1,
      "aria-describedby": w.value,
      onClick: D
    } : {
      tag: "span"
    };
  }), P = _(() => {
    if (!(!s.value && !b.value) && !(i.value.length <= 1 && !o.value)) {
      if (p.value !== -1)
        return p.value + 1;
      if (T.value !== -1)
        return T.value + 1;
    }
  }), M = _(() => {
    const O = [];
    return E.value && (O.push("_A_TABLE_SORT_TITLE_"), s.value && O.push("_A_TABLE_SORT_TITLE_MULTI_COLUMN_")), O;
  });
  return {
    ariaSort: I,
    attributesForButtonSort: F,
    columnTextScreenReaderId: w,
    iconsSortable: g,
    isSortable: E,
    isSorting: b,
    sequenceNumberSort: P,
    titlesSort: M
  };
}
const ac = {
  name: "ATableHeaderTh",
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnGroupNames: {
      type: Array,
      required: !1,
      default: void 0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    columnIndexDraggable: {
      type: Number,
      required: !1,
      default: -1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !1
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "dragendParent",
    "dragstartParent",
    "dragenterParent",
    "dragleaveParent"
  ],
  inject: [
    "changeModelSort",
    "isColumnsDnd",
    "isLoadingOptions",
    "isLoadingTable"
  ],
  setup(e, t) {
    const {
      columnsStyles: n
    } = WS(e), {
      attributesForRoot: r,
      isLocked: s,
      root: i
    } = PS(e, t, {
      classOverString: "a_table__th_over",
      inDropdown: !1
    }), {
      ariaSort: o,
      attributesForButtonSort: u,
      columnTextScreenReaderId: f,
      iconsSortable: A,
      isSortable: E,
      isSorting: p,
      sequenceNumberSort: T,
      titlesSort: S
    } = dH(e), {
      attributesForTh: L,
      titlesLocal: b
    } = lH(e, {
      ariaSort: o,
      attributesForRoot: r,
      columnsStyles: n,
      isLocked: s,
      isSorting: p,
      titlesSort: S
    });
    return {
      attributesForButtonSort: u,
      attributesForTh: L,
      columnTextScreenReaderId: f,
      columnsStyles: n,
      iconsSortable: A,
      isSortable: E,
      root: i,
      sequenceNumberSort: T,
      titlesLocal: b,
      titlesSort: S
    };
  },
  render() {
    return c("div", this.attributesForTh, [
      c("div", {
        class: [
          "a_table__cell__child"
        ]
      }, [
        this.columnGroupNames && c(Ee, {
          html: this.columnGroupNames,
          tag: "span",
          class: "a_sr_only"
        }),
        c(Ee, {
          id: this.columnTextScreenReaderId,
          text: this.titlesLocal,
          tag: "span",
          class: "a_sr_only",
          ariaHidden: !0
        }),
        c(pt, {
          class: [
            "a_table__th__btn",
            this.column.class,
            this.column.classHeader,
            {
              "a_btn a_btn_link a_table__th__btn_sort": this.isSortable,
              a_table__th__btn_sequence: this.sequenceNumberSort
            }
          ],
          iconLeft: this.column.icon,
          iconClass: "a_table__th__icon",
          extra: this.column.extra,
          title: this.titlesLocal,
          textScreenReader: this.column.textScreenReader || void 0,
          ...this.attributesForButtonSort
        }, () => [
          this.column.label && c(Ee, {
            html: this.column.label,
            tag: "span",
            extra: this.column.extra,
            class: "a_table__th__text aloha_element__ml_0",
            ariaHidden: !!this.column.textScreenReader
          }),
          this.isSortable && c("span", {
            class: "a_table__th__sort__box aloha_element__ml_0"
          }, [
            this.sequenceNumberSort && c("span", {
              class: [
                "a_table__th__sort__sequence_num",
                this.sortingSequenceNumberClass
              ]
            }, this.sequenceNumberSort),
            c("span", {
              class: "a_table__th__sort__icons"
            }, [
              ...this.iconsSortable
            ])
          ])
        ])
      ])
    ]);
  }
}, cH = {
  name: "ATableHeader",
  components: {
    ATableHeaderTh: ac,
    ATableHeaderThAction: rc
  },
  props: {
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areAllVisibleRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    hasMultipleActions: {
      type: Boolean,
      required: !0
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1
    },
    modelSort: {
      type: Array,
      required: !0
    },
    rowsLocalLength: {
      type: Number,
      required: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  inject: [
    "changeColumnsOrdering",
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMobile",
    "isMultipleActionsActive"
  ],
  setup(e, t) {
    const {
      columnIndexDraggable: n,
      dragstart: r,
      dragenter: s,
      dragleave: i,
      dragend: o,
      drop: u,
      isDragstart: f,
      root: A
    } = kS({
      classOver: "a_table__th_over",
      classOverRight: "a_table__th_over_right",
      classOverParent: "a_table__th",
      inHeader: !0
    }), {
      isCheckboxDisabled: E,
      isCheckboxIndeterminate: p,
      labelCheckbox: T,
      modelValueCheckboxLocal: S,
      toggleCheckbox: L
    } = VS(e, t);
    return {
      columnIndexDraggable: n,
      dragend: o,
      dragenter: s,
      dragleave: i,
      dragstart: r,
      drop: u,
      isCheckboxDisabled: E,
      isCheckboxIndeterminate: p,
      isDragstart: f,
      labelCheckbox: T,
      modelValueCheckboxLocal: S,
      root: A,
      toggleCheckbox: L
    };
  },
  render() {
    return this.isMobile ? null : c("div", {
      ref: "root",
      role: "rowgroup",
      class: ["a_table__head", {
        a_table__head_dragstart: this.isDragstart
      }]
    }, [
      c("div", {
        class: "a_table__row a_table__head__row",
        role: "row",
        onDrop: this.drop
      }, [
        this.isMultipleActionsActive && c("div", {
          role: "columnheader",
          class: "a_table__th a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;",
          "aria-colindex": 1
        }, [
          c(xu, {
            isWidthAuto: !0,
            modelValue: this.modelValueCheckboxLocal,
            indeterminate: this.isCheckboxIndeterminate,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        this.columnsFilteredForRender.map((e, t) => c(ac, {
          ref: "th",
          column: e,
          columnIndex: t,
          columnIndexDraggable: this.columnIndexDraggable,
          disabledSort: this.disabledSort,
          hasMultipleActions: this.hasMultipleActions,
          isSortingMultiColumn: this.isSortingMultiColumn,
          modelSort: this.modelSort,
          showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
          sortingSequenceNumberClass: this.sortingSequenceNumberClass,
          onDragstartParent: this.dragstart,
          onDragenterParent: this.dragenter,
          onDragleaveParent: this.dragleave,
          onDragendParent: this.dragend
        })),
        this.isActionColumnVisible && c(rc, {
          disabledOptions: this.disabledOptions,
          isRowActionsStickyLocal: this.isRowActionsStickyLocal
        })
      ])
    ]);
  }
};
function fH(e, { emit: t }, {
  nextAvailableRowIndex: n,
  previousAvailableRowIndex: r,
  rowNumber: s = _(() => 0)
}) {
  const i = d(e, "countAllRows"), o = d(e, "limitPagination"), u = d(e, "offsetPagination"), f = d(e, "rowIndex"), A = d(e, "usePagination"), E = _(() => s.value <= 1 || le(r.value)), p = _(() => s.value >= i.value || le(n.value));
  return {
    disabledBtnArrowLeft: E,
    disabledBtnArrowRight: p,
    toNextRow: () => {
      p.value || (A.value ? (f.value + 1) % o.value === 0 ? (t("update:offset", { offset: u.value + o.value, reload: !1 }), t("togglePreview", { rowIndex: 0 })) : t("togglePreview", { rowIndex: n.value }) : t("togglePreview", { rowIndex: n.value }));
    },
    toPreviousRow: () => {
      E.value || (A.value ? (f.value + 1) % o.value === 1 ? (t("update:offset", { offset: u.value - o.value, reload: !1 }), t("togglePreview", { rowIndex: o.value - 1 })) : t("togglePreview", { rowIndex: r.value }) : t("togglePreview", { rowIndex: r.value }));
    }
  };
}
function hH() {
  const e = de("tableId");
  return {
    idLocal: _(() => FS({ tableId: e.value }))
  };
}
function AH({ emit: e }, {
  previewRef: t = B(void 0)
}) {
  return {
    mousedown: ({ clientWidth: i }) => {
      e("mousedownResizePreviewRight", {
        clientWidth: i
      });
    },
    mousemove: ({ clientX: i }) => {
      e("mousemoveResizePreviewRight", {
        clientX: i,
        previewRef: t.value
      });
    },
    mouseup: () => {
      e("mouseupResizePreviewRight", {
        previewRightWidth: ce(t, "value.offsetWidth")
      });
    }
  };
}
const np = B(void 0);
function GS() {
  return {
    previewRef: np,
    removePreviewRef: () => {
      np.value = void 0;
    }
  };
}
function EH(e) {
  const t = d(e, "countAllRows"), n = d(e, "disabledPreviewRowCallback"), r = d(e, "offsetPagination"), s = d(e, "rowIndex"), i = d(e, "rows"), o = d(e, "usePagination"), {
    filterCurrency: u
  } = jn(), f = _(() => o.value ? (r.value || 0) + s.value + 1 : s.value + 1), A = _(() => i.value[s.value]), E = _(() => {
    let L = null;
    if (!Ne(n.value))
      L = s.value === i.value.length - 1 ? null : s.value++;
    else
      for (let b = s.value + 1; b < i.value.length; b++) {
        const I = i.value[b];
        if (!n.value({ row: I, rowIndex: b })) {
          L = b;
          break;
        }
      }
    return L;
  }), p = _(() => {
    let L = null;
    if (!Ne(n.value))
      L = s.value === 0 ? null : s.value--;
    else
      for (let b = s.value - 1; b >= 0; b--) {
        const I = i.value[b];
        if (!n.value({ row: I, rowIndex: b })) {
          L = b;
          break;
        }
      }
    return L;
  }), T = _(() => u(t.value, { suffix: "", digits: 0 })), S = _(() => u(f.value, { suffix: "", digits: 0 }));
  return {
    countAllRowsFormatted: T,
    currentRow: A,
    nextAvailableRowIndex: E,
    previousAvailableRowIndex: p,
    rowNumber: f,
    rowNumberFormatted: S
  };
}
const pH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8"/>
</svg>`, TH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8"/>
</svg>`, SH = {
  name: "ATablePreviewRight",
  props: {
    countAllRows: {
      type: Number,
      required: !0
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1,
      default: () => {
      }
    },
    isLoadingTable: {
      type: Boolean,
      required: !1
    },
    isMobile: {
      type: Boolean,
      required: !1
    },
    limitPagination: {
      type: Number,
      required: !1,
      default: void 0
    },
    offsetPagination: {
      type: Number,
      required: !1,
      default: void 0
    },
    previewStyles: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    rows: {
      type: Array,
      required: !0
    },
    usePagination: {
      type: Boolean,
      required: !1
    }
  },
  emits: [
    "closePreview",
    "mousedownResizePreviewRight",
    "mousemoveResizePreviewRight",
    "mouseupResizePreviewRight",
    "togglePreviewResize",
    "togglePreview",
    "update:offset"
  ],
  inject: [
    "isLoadingOptions"
  ],
  setup(e, t) {
    const n = d(e, "isMobile"), {
      previewRef: r
    } = GS(), {
      idLocal: s
    } = hH(), {
      mousedown: i,
      mousemove: o,
      mouseup: u
    } = AH(t, {
      previewRef: r
    }), {
      countAllRowsFormatted: f,
      currentRow: A,
      nextAvailableRowIndex: E,
      previousAvailableRowIndex: p,
      rowNumber: T,
      rowNumberFormatted: S
    } = EH(e), {
      disabledBtnArrowLeft: L,
      disabledBtnArrowRight: b,
      toNextRow: I,
      toPreviousRow: v
    } = fH(e, t, {
      nextAvailableRowIndex: E,
      previousAvailableRowIndex: p,
      rowNumber: T
    });
    return Gr(() => {
      n.value || t.emit("togglePreviewResize", {
        isOpen: !0,
        previewRef: r.value
      });
    }), Ot(() => {
      n.value || t.emit("togglePreviewResize", {
        isOpen: !1,
        previewRef: r.value
      });
    }), {
      countAllRowsFormatted: f,
      currentRow: A,
      disabledBtnArrowLeft: L,
      disabledBtnArrowRight: b,
      idLocal: s,
      mousedown: i,
      mousemove: o,
      mouseup: u,
      previewRef: r,
      rowNumber: T,
      rowNumberFormatted: S,
      toNextRow: I,
      toPreviousRow: v
    };
  },
  render() {
    const e = [
      this.isLoadingTable ? c(Ll) : c("div", {}, [
        c(Ee, {
          class: "a_table__preview_right__header__text",
          tag: "span",
          text: "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_",
          extra: {
            rowNumber: this.rowNumber,
            rowNumberFormatted: this.rowNumberFormatted,
            countAllRows: this.countAllRows,
            countAllRowsFormatted: this.countAllRowsFormatted
          }
        }),
        c("div", {
          class: "a_table__preview_right__header__icons"
        }, [
          c(pt, {
            class: "a_btn a_btn_transparent_dark a_btn_small",
            disabled: this.disabledBtnArrowLeft,
            iconLeft: pH,
            title: "_A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_",
            textScreenReader: "_A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_",
            onClick: this.toPreviousRow
          }),
          c(pt, {
            class: "a_btn a_btn_transparent_dark a_btn_small",
            disabled: this.disabledBtnArrowRight,
            iconLeft: TH,
            title: "_A_TABLE_PREVIEW_RIGHT_NEXT_ROW_",
            textScreenReader: "_A_TABLE_PREVIEW_RIGHT_NEXT_ROW_",
            onClick: this.toNextRow
          })
        ])
      ]),
      this.isMobile ? "" : c(pt, {
        class: "a_btn a_btn_transparent_dark a_table__preview_right__btn_close",
        iconLeft: Ea,
        iconClass: "a_table__preview_right__btn_close__icon",
        title: "_A_TABLE_PREVIEW_RIGHT_CLOSE_",
        textScreenReader: "_A_TABLE_PREVIEW_RIGHT_CLOSE_",
        onClick: () => this.$emit("closePreview")
      })
    ], t = [
      this.isLoadingTable ? c(Ll) : this.$slots.preview ? this.$slots.preview({
        row: this.currentRow,
        rowIndex: this.rowIndex
      }) : c(Ee, {
        text: "_A_TABLE_PREVIEW_RIGHT_HAS_NOT_SLOT_"
      })
    ];
    return this.isMobile ? c(Uu, {
      hideFooter: !0,
      close: () => this.$emit("closePreview"),
      size: "xxl"
    }, {
      modalHeader: () => e,
      modalBody: () => t
    }) : c("div", {
      ref: "previewRef",
      id: this.idLocal,
      class: "a_table__preview_right",
      style: this.previewStyles,
      tabindex: -1
    }, [
      c(bk, {
        class: "a_table__preview_right__resizer",
        direction: "x",
        disabled: this.isLoadingOptions,
        onMousedown: this.mousedown,
        onMousemove: this.mousemove,
        onMouseup: this.mouseup,
        onMouseoutDocument: this.mouseup
      }),
      c(Ee, {
        class: "a_sr_only",
        text: "_A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_"
      }),
      c("div", {
        class: "a_table__preview_right__header"
      }, e),
      c("div", {
        class: "a_table__preview_right__body"
      }, t)
    ]);
  }
};
function mH() {
  const e = de("tableId"), t = [
    "additionalProps"
  ], n = _(() => `${e.value}_`);
  return {
    excludeRenderAttributes: t,
    idPrefix: n
  };
}
function LH(e) {
  const t = d(e, "additionalSortingColumns"), n = de("columnsOrdered", []), r = _(() => [
    ...Lt(n.value, (o) => o.sortId),
    ...t.value
  ]), s = _(() => Fa(r.value, "sortId")), i = _(() => r.value.length);
  return {
    columnsAll: r,
    columnsAllKeyBySortId: s,
    countColumnsAll: i
  };
}
function bH(e, {
  columnsAll: t = _(() => [])
}) {
  const n = B(void 0), r = B(!1), s = _(() => t.value.length > 0);
  return {
    closeDropdown: () => {
      var o;
      (o = n.value) == null || o.onClose({ trigger: "click" });
    },
    dropdownRef: n,
    isDropdownVisible: s,
    wasOpenDropdown: r
  };
}
function IH(e, {
  columnsAll: t = _(() => []),
  columnsAllKeyBySortId: n = _(() => ({})),
  unappliedModelSort: r = B([])
}) {
  const s = B([]), i = [
    {
      label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_",
      id: "asc"
    },
    {
      label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_",
      id: "desc"
    }
  ], o = _(() => Lt(t.value, (f) => !Oc(r.value, ["sortId", f.sortId])));
  return {
    dataForForm: s,
    initDataForForm: () => {
      const f = [];
      z(r.value, ({ sortId: A }, E) => {
        const p = E === 0, T = he(o.value);
        A && n.value[A] && T.unshift(n.value[A]), f.push({
          type: "fieldset",
          id: `group_${A}`,
          label: p ? "_A_TABLE_SORT_ADDITIONAL_SORT_BY_" : "_A_TABLE_SORT_ADDITIONAL_THEN_BY_",
          children: [
            {
              id: `[${E}].sortId`,
              type: "select",
              classColumn: "a_column a_column_12_touch a_column_7_fullhd a_column_7_widescreen a_column_7_desktop",
              deselectable: !1,
              data: T,
              keyId: "sortId",
              keyLabel: "label",
              translateData: !0,
              search: !0,
              label: "_A_TABLE_SORT_ADDITIONAL_COLUMN_"
            },
            {
              id: `[${E}].sortMode`,
              type: "select",
              classColumn: "a_column a_column_12_touch a_column_5_fullhd a_column_5_widescreen a_column_5_desktop a_d_flex a_align_items_center",
              class: "a_width_100",
              deselectable: !1,
              data: i,
              keyId: "id",
              keyLabel: "label",
              translateData: !0,
              search: !1,
              label: "_A_TABLE_SORT_ADDITIONAL_DIRECTION_",
              slotAppend: "slotAppend",
              additionalProps: {
                index: E
              }
            }
          ]
        });
      }), s.value = f;
    }
  };
}
function vH(e, {
  closeDropdown: t = () => {
  },
  countColumnsAll: n = _(() => 0),
  initDataForForm: r = () => {
  },
  unappliedModelSort: s = B([]),
  wasOpenDropdown: i = B(!1)
}) {
  const o = d(e, "isSortingMultiColumn"), u = d(e, "modelSort"), f = de("changeModelSort"), A = de("tableId"), E = ({ model: D } = {}) => {
    if (i.value && !D)
      return;
    i.value = !0;
    const w = D || he(u.value);
    w.length < n.value && w.push(void 0), o.value || w.length > 1 && (w.length = 1);
    const F = [];
    z(w, (P) => {
      const M = P && P.replace(/^-/, ""), O = Pc(P, "-") ? "desc" : "asc";
      F.push({
        sortId: M,
        sortMode: O
      });
    }), s.value = F, r({ unappliedModelSort: F });
  }, p = ({ model: D }) => !o.value || D.length >= n.value ? !1 : !!Li(D).sortId, T = ({ model: D }) => {
    p({ model: D }) && D.push({
      sortId: void 0,
      sortMode: "asc"
    }), s.value = D, r({ unappliedModelSort: s.value });
  }, S = ({ item: D }) => {
    var M, O;
    const w = D.additionalProps.index;
    w === s.value.length - 1 ? s.value[w].sortId = void 0 : s.value.splice(w, 1);
    const P = s.value.length - 1;
    (O = (M = s.value) == null ? void 0 : M[P]) != null && O.sortId && s.value.push({
      sortId: void 0,
      sortMode: "asc"
    }), r({ unappliedModelSort: s.value });
  }, L = () => {
    const D = [];
    z(s.value, (w) => {
      w.sortId && D.push(`${w.sortMode === "asc" ? "" : "-"}${w.sortId}`);
    }), f({
      modelAll: D
    }), t();
  }, b = ({ modelSort: D = [], tableId: w }) => {
    w === A.value && E({ model: D });
  }, I = () => {
    Rt.$on("changeTableSorting", b);
  }, v = () => {
    Rt.$off("changeTableSorting", b);
  }, R = _(() => {
    var D;
    return ((D = u.value) == null ? void 0 : D.length) || 0;
  }), g = _(() => {
    if (R.value)
      return R.value;
  });
  return {
    changeModelSortInTable: L,
    countModelSort: R,
    destroyEventBus: v,
    initEventBus: I,
    initUnappliedModelSort: E,
    removeUnappliedModelSort: S,
    textCountModelSort: g,
    updateUnappliedModelSort: T
  };
}
const rp = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down-up" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M11.5 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L11 2.707V14.5a.5.5 0 0 0 .5.5m-7-14a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L4 13.293V1.5a.5.5 0 0 1 .5-.5"/>
</svg>`, yH = {
  name: "ATableSortingAdditional",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelSort: {
      type: Array,
      required: !1
    }
  },
  setup(e) {
    const t = B([]), {
      columnsAll: n,
      columnsAllKeyBySortId: r,
      countColumnsAll: s
    } = LH(e), {
      dataForForm: i,
      initDataForForm: o
    } = IH(e, {
      columnsAll: n,
      columnsAllKeyBySortId: r,
      unappliedModelSort: t
    }), {
      closeDropdown: u,
      dropdownRef: f,
      isDropdownVisible: A,
      wasOpenDropdown: E
    } = bH(e, {
      columnsAll: n
    }), {
      changeModelSortInTable: p,
      countModelSort: T,
      destroyEventBus: S,
      initEventBus: L,
      initUnappliedModelSort: b,
      removeUnappliedModelSort: I,
      textCountModelSort: v,
      updateUnappliedModelSort: R
    } = vH(e, {
      closeDropdown: u,
      countColumnsAll: s,
      initDataForForm: o,
      unappliedModelSort: t,
      wasOpenDropdown: E
    }), {
      excludeRenderAttributes: g,
      idPrefix: D
    } = mH();
    return L(), Ot(() => {
      S();
    }), {
      changeModelSortInTable: p,
      closeDropdown: u,
      countModelSort: T,
      dataForForm: i,
      dropdownRef: f,
      excludeRenderAttributes: g,
      idPrefix: D,
      initUnappliedModelSort: b,
      isDropdownVisible: A,
      removeUnappliedModelSort: I,
      textCountModelSort: v,
      unappliedModelSort: t,
      updateUnappliedModelSort: R,
      wasOpenDropdown: E
    };
  },
  render() {
    return this.isDropdownVisible ? c(la, {
      ref: "dropdownRef",
      buttonClass: "a_btn a_btn_secondary a_table__action",
      buttonIconLeft: rp,
      buttonText: this.textCountModelSort,
      buttonTextAriaHidden: !0,
      buttonTitle: "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_",
      buttonTextScreenReader: "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_",
      buttonTextClass: "a_badge a_bg_primary",
      disabled: this.disabledSort,
      dropdownClass: "a_filter_horizontal__wrapper",
      dropdownRenderDefault: !1,
      dropdownTag: "div",
      hasCaret: !1,
      inBody: !0,
      extra: {
        count: this.countModelSort
      },
      isCloseByClickInside: !1,
      lockArrowsNavigation: !1,
      lockTabNavigation: !1,
      onOpen: this.initUnappliedModelSort
    }, {
      dropdown: () => c("div", {
        class: "a_filter_horizontal"
      }, [
        c("div", {
          class: "a_filter_horizontal__header__wrapper"
        }, [
          c("div", {
            class: "a_filter_horizontal__header"
          }, [
            c("div", {
              class: "a_filter_horizontal__header__texts"
            }, [
              c(Ee, {
                class: "a_filter_horizontal__header__texts__filter",
                tag: "span",
                text: "_A_TABLE_SORT_ADDITIONAL_HEADER_"
              })
            ])
          ])
        ]),
        c("div", {
          class: "a_filter_horizontal__body__wrapper"
        }, [
          c("div", {
            class: "a_filter_horizontal__body"
          }, [
            c(Fu, {
              idPrefix: this.idPrefix,
              class: "a_filter_horizontal__body__form",
              classColumnDefault: "",
              classColumns: "",
              data: this.dataForForm,
              excludeRenderAttributes: this.excludeRenderAttributes,
              modelValue: this.unappliedModelSort,
              showErrors: !1,
              onChange: this.updateUnappliedModelSort
            }, {
              slotAppend: ({ item: e }) => {
                var t, n;
                return c(Ae, {
                  type: "button",
                  class: "a_btn a_btn_primary a_ml_2",
                  title: "_A_TABLE_SORT_ADDITIONAL_BTN_DELETE_",
                  textScreenReader: "_A_TABLE_SORT_ADDITIONAL_BTN_DELETE_",
                  disabled: !((n = (t = this.unappliedModelSort) == null ? void 0 : t[e.additionalProps.index]) != null && n.sortId),
                  iconLeft: Ea,
                  onClick: () => this.removeUnappliedModelSort({ item: e })
                });
              }
            })
          ]),
          c("div", {
            class: "a_filter_horizontal__footer"
          }, [
            c("div", {
              class: "a_filter_horizontal__footer__actions"
            }, [
              c(Ae, {
                type: "button",
                class: "a_btn a_btn_primary a_text_nowrap a_filter_horizontal__footer__actions__btn_search",
                iconLeft: rp,
                text: "_A_TABLE_SORT_ADDITIONAL_START_",
                disabled: this.disabledSort,
                onClick: this.changeModelSortInTable
              }),
              c(Ae, {
                type: "button",
                class: "a_btn a_btn_secondary a_text_nowrap a_filter_horizontal__footer__actions__btn_close",
                text: "_A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_",
                onClick: this.closeDropdown
              })
            ])
          ])
        ])
      ])
    }) : null;
  }
};
function gH(e, { emit: t }) {
  const n = d(e, "areAllRowsSelected"), r = d(e, "closeMultipleActionsActive"), s = d(e, "multipleActions"), i = d(e, "selectedRows"), o = d(e, "tableActions"), u = de("tableId"), f = de("currentMultipleActions"), A = de("rowsLocalAll"), {
    closeConfirm: E,
    openConfirm: p
  } = _f(), T = _(() => `${u.value}_btn_multiple`), S = _(() => {
    const g = [];
    return z(he(o.value), (D) => {
      if (!D.isHidden) {
        if (Ne(D.callback)) {
          const w = D.callback;
          D.callback = () => w({
            id: D.id,
            action: D
          });
        }
        g.push(D);
      }
    }), g;
  }), L = ({ action: g, callbackDefault: D }) => {
    const w = he(g);
    w.callback = D, t("toggleMultipleActionsActive", { isActive: !0, action: w });
  }, b = () => {
    t("toggleMultipleActionsActive", { action: f.value });
  }, I = _(() => {
    const g = he(s.value);
    return z(g, (D) => {
      if (Ne(D.callback)) {
        const w = D.callback;
        D.callback = () => L({ action: D, callbackDefault: w });
      }
    }), g;
  }), v = async () => {
    await f.value.callback({
      close: r.value,
      rows: i.value,
      rowsVisible: A.value,
      id: T.value,
      areAllRowsSelected: n.value,
      action: f.value
    }), E(), b();
  };
  return {
    buttonMultipleId: T,
    currentMultipleActions: f,
    multipleActionsFiltered: I,
    onCancelMultipleActions: b,
    onOpenModalMultipleActions: () => {
      f.value.isConfirm ? p({
        headerText: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_",
        bodyHtml: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_",
        saveButtonText: "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_",
        extra: {
          action: Pt({
            placeholder: f.value.text
          }),
          selectedRows: i.value.length
        },
        save: v
      }) : f.value.callback({
        close: r.value,
        rows: i.value,
        rowsVisible: A.value,
        id: T.value,
        areAllRowsSelected: n.value,
        action: f.value
      });
    },
    tableActionsFiltered: S
  };
}
function RH(e) {
  const t = d(e, "countAllRows"), {
    filterFloat: n
  } = jn();
  return {
    countAllRowsFormatted: _(() => `(${n(t.value, { digits: 0 })})`)
  };
}
function OH() {
  const e = de("tableId");
  return {
    tableLabelId: _(() => $S({ tableId: e.value }))
  };
}
function CH(e, { emit: t }) {
  const n = d(e, "areAllRowsSelected"), r = d(e, "areSomeRowsSelected"), s = d(e, "countAllRows"), i = d(e, "isLoadingMultipleActions"), o = d(e, "selectedRows"), u = de("tableId"), {
    filterFloat: f
  } = jn(), A = _(() => qS({ tableId: u.value })), E = _(() => n.value ? s.value : o.value.length), p = _(() => ({
    countSelectedRows: E.value,
    countSelectedRowsFiltered: f(E.value, { digits: 0 }),
    countAllRows: s.value,
    countAllRowsFiltered: f(s.value, { digits: 0 })
  })), T = _(() => n.value ? "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_" : "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_"), S = _(() => !!(i.value || s.value === 0)), L = () => {
    S.value || t("toggleBtnAllRows");
  };
  return {
    isBtnMultipleActionDisabled: _(() => !r.value && !n.value),
    isBtnSelectAllRowsDisabled: S,
    multiplePanelId: A,
    textMultipleBtnAllRowsTranslate: T,
    textMultipleSelectedTranslateExtra: p,
    toggleBtnAllRows: L
  };
}
function DH(e, { emit: t }) {
  const n = d(e, "useViewSlot"), r = (i) => {
    t("updateViewCurrent", i);
  }, s = _(() => n.value ? "viewSlot" : void 0);
  return {
    updateViewCurrentLocal: r,
    viewSlotLocal: s
  };
}
const NH = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-ui-checks" viewBox="0 0 16 16">
  <path d="M7 2.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5zM2 1a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2zm0 8a2 2 0 0 0-2 2v2a2 2 0 0 0 2 2h2a2 2 0 0 0 2-2v-2a2 2 0 0 0-2-2zm.854-3.646a.5.5 0 0 1-.708 0l-1-1a.5.5 0 1 1 .708-.708l.646.647 1.646-1.647a.5.5 0 1 1 .708.708zm0 8a.5.5 0 0 1-.708 0l-1-1a.5.5 0 0 1 .708-.708l.646.647 1.646-1.647a.5.5 0 0 1 .708.708zM7 10.5a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-7a.5.5 0 0 1-.5-.5zm0-5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m0 8a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5"/>
</svg>`, BH = {
  name: "ATableTopPanel",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    areSomeRowsSelected: {
      type: Boolean,
      required: !0
    },
    closeMultipleActionsActive: {
      type: Function,
      required: !0
    },
    countAllRows: {
      type: Number,
      required: !0
    },
    disabledActions: {
      type: Boolean,
      required: !0
    },
    disabledMultipleActions: {
      type: Boolean,
      required: !0
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    disabledViews: {
      type: Boolean,
      required: !0
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasViews: {
      type: Boolean,
      required: !0
    },
    isLabelVisible: {
      type: Boolean,
      required: !1
    },
    isLoadingMultipleActions: {
      type: Boolean,
      required: !1
    },
    isQuickSearch: {
      type: Boolean,
      required: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    label: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !0
    },
    modelQuickSearch: {
      type: String,
      required: !0
    },
    modelSort: {
      type: Array,
      required: !1
    },
    modelView: {
      type: String,
      required: !1,
      default: void 0
    },
    multipleActions: {
      type: Array,
      required: !0
    },
    selectedRows: {
      type: Array,
      required: !0
    },
    showCount: {
      type: Boolean,
      required: !1,
      default: !0
    },
    tableActions: {
      type: Array,
      required: !0
    },
    tableActionsIndexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: -1
    },
    tableActionsIndexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: 0
    },
    useAdditionalSorting: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useViewSlot: {
      type: Boolean,
      required: !1
    },
    viewCurrent: {
      type: Object,
      required: !1,
      default: void 0
    },
    views: {
      type: Array,
      required: !0
    }
  },
  emits: [
    "toggleBtnAllRows",
    "toggleMultipleActionsActive",
    "updateModelQuickSearch",
    "updateViewCurrent"
  ],
  inject: [
    "isMultipleActionsActive",
    "rowsLocalAll",
    "tableId"
  ],
  setup(e, t) {
    const {
      tableLabelId: n
    } = OH(), {
      filterCurrency: r
    } = jn(), {
      buttonMultipleId: s,
      currentMultipleActions: i,
      multipleActionsFiltered: o,
      onCancelMultipleActions: u,
      onOpenModalMultipleActions: f,
      tableActionsFiltered: A
    } = gH(e, t), {
      isBtnMultipleActionDisabled: E,
      isBtnSelectAllRowsDisabled: p,
      multiplePanelId: T,
      textMultipleBtnAllRowsTranslate: S,
      textMultipleSelectedTranslateExtra: L,
      toggleBtnAllRows: b
    } = CH(e, t), {
      updateViewCurrentLocal: I,
      viewSlotLocal: v
    } = DH(e, t), {
      countAllRowsFormatted: R
    } = RH(e);
    return {
      buttonMultipleId: s,
      countAllRowsFormatted: R,
      currentMultipleActions: i,
      filterCurrency: r,
      isBtnMultipleActionDisabled: E,
      isBtnSelectAllRowsDisabled: p,
      multipleActionsFiltered: o,
      multiplePanelId: T,
      onCancelMultipleActions: u,
      onOpenModalMultipleActions: f,
      tableActionsFiltered: A,
      tableLabelId: n,
      textMultipleBtnAllRowsTranslate: S,
      textMultipleSelectedTranslateExtra: L,
      toggleBtnAllRows: b,
      updateViewCurrentLocal: I,
      viewSlotLocal: v
    };
  },
  methods: {
    updateModelQuickSearch(e) {
      this.$emit("updateModelQuickSearch", e);
    }
  },
  render() {
    var e, t, n, r;
    return [
      c("div", {
        class: "a_table__top_panel"
      }, [
        this.isLabelVisible ? this.$slots.tableLabel ? this.$slots.tableLabel({
          countAllRows: this.countAllRows,
          tableLabelId: this.tableLabelId
        }) : c(this.labelTag, {
          class: ["a_table__top_panel__label", this.labelClass]
        }, [
          c(Ee, {
            id: this.tableLabelId,
            tag: "span",
            class: "a_table__top_panel__label__text",
            text: this.label,
            extra: this.extra
          }),
          this.showCount ? c(Ae, {
            class: "a_table__top_panel__label__count",
            extra: {
              count: this.countAllRows
            },
            tag: "span",
            text: this.countAllRowsFormatted,
            textAriaHidden: !0,
            textScreenReader: "_A_TABLE_ALL_ROWS_{{count}}_",
            title: "_A_TABLE_ALL_ROWS_{{count}}_",
            type: "text"
          }) : ""
        ]) : "",
        c("div", {
          class: "a_table__top_panel__actions"
        }, [
          this.$slots.tableActionsPrepend ? this.$slots.tableActionsPrepend({
            isMultipleActionsActive: this.isMultipleActionsActive,
            modelView: this.modelView
          }) : "",
          c(ec, {
            actions: this.tableActionsFiltered,
            actionsClasses: [],
            disabled: this.isMultipleActionsActive || this.disabledActions,
            indexFirstDropdownAction: this.tableActionsIndexFirstDropdownAction,
            indexFirstDropdownActionMobile: this.tableActionsIndexFirstDropdownActionMobile,
            minDropdownActions: 0,
            dropdownAttributes: {
              buttonClass: "a_btn a_btn_secondary a_table__action",
              buttonIconLeft: ql,
              buttonText: {
                desktop: "_A_TABLE_ACTIONS_"
              },
              hasCaret: !1,
              inBody: !0,
              placement: "bottom-end"
            }
          }),
          c(ec, {
            actions: this.multipleActionsFiltered,
            actionsClasses: [],
            disabled: this.isMultipleActionsActive || this.disabledMultipleActions,
            indexFirstDropdownAction: 0,
            indexFirstDropdownActionMobile: 0,
            minDropdownActions: 0,
            dropdownAttributes: {
              id: this.buttonMultipleId,
              buttonClass: "a_btn a_btn_secondary a_table__action",
              buttonText: {
                desktop: "_A_TABLE_MULTIPLE_ACTIONS_"
              },
              buttonIconLeft: NH,
              inBody: !0,
              placement: "bottom-end"
            }
          }),
          this.isQuickSearch ? c(yn, {
            label: "_A_TABLE_QUICK_SEARCH_",
            class: "a_table__top_panel__actions__quick_search",
            modelUndefined: "",
            modelValue: this.modelQuickSearch,
            iconPrepend: vS,
            "onUpdate:modelValue": this.updateModelQuickSearch
          }) : "",
          this.hasViews ? c(hS, {
            modelValue: this.modelView,
            class: "a_d_inline_block",
            isButtonGroup: !0,
            disabled: this.disabledViews,
            slotName: this.viewSlotLocal,
            data: this.views,
            keyId: "id",
            keyLabel: "label",
            hasBorder: !1,
            classFieldset: "a_p_0",
            "onUpdate:modelValue": this.updateViewCurrentLocal
          }, {
            viewSlot: (s) => this.$slots.viewSlot && this.$slots.viewSlot({
              ...s
            })
          }) : "",
          this.useAdditionalSorting ? c(yH, {
            additionalSortingColumns: this.additionalSortingColumns,
            disabledSort: this.disabledSort,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSort
          }) : "",
          this.$slots.tableActionsAppend ? this.$slots.tableActionsAppend({
            isMultipleActionsActive: this.isMultipleActionsActive,
            modelView: this.modelView
          }) : ""
        ])
      ]),
      this.isMultipleActionsActive && this.currentMultipleActions ? c("div", {
        id: this.multiplePanelId,
        class: "a_table__multiple_panel"
      }, [
        c("div", {
          class: "a_table__multiple_panel__header"
        }, [
          c(Ee, {
            class: "a_table__multiple_panel__header__text",
            tag: "strong",
            text: "_A_TABLE_MULTIPLE_ACTIONS_"
          }),
          c("div", {
            class: "a_table__multiple_panel__items"
          }, [
            c(Ee, {
              class: "a_table__multiple_panel__items__selected",
              tag: "span",
              text: "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_",
              extra: this.textMultipleSelectedTranslateExtra
            }),
            ((e = this.currentMultipleActions) == null ? void 0 : e.isAllRowsSelected) && c(pt, {
              class: "a_btn a_btn_secondary a_table__multiple_panel__btn_all_rows",
              type: "button",
              text: this.textMultipleBtnAllRowsTranslate,
              extra: this.textMultipleSelectedTranslateExtra,
              disabled: this.isBtnSelectAllRowsDisabled || this.disabledMultipleActions,
              loading: this.isLoadingMultipleActions,
              onClick: this.toggleBtnAllRows
            })
          ])
        ]),
        c("div", {
          class: "a_table__multiple_panel__actions"
        }, [
          (t = this.currentMultipleActions) != null && t.slot && this.$slots.multipleActionActiveSlot ? this.$slots.multipleActionActiveSlot({
            disabled: this.isBtnMultipleActionDisabled || this.isLoadingMultipleActions || this.disabledMultipleActions,
            loading: this.isLoadingMultipleActions,
            text: (n = this.currentMultipleActions) == null ? void 0 : n.text,
            action: this.currentMultipleActions,
            onClick: this.onOpenModalMultipleActions,
            close: this.closeMultipleActionsActive,
            rows: this.selectedRows,
            rowsVisible: this.rowsLocalAll,
            id: this.buttonMultipleId,
            areAllRowsSelected: this.areAllRowsSelected
          }) : c(pt, {
            class: "a_btn a_btn_primary a_table__action",
            type: "button",
            disabled: this.isBtnMultipleActionDisabled || this.isLoadingMultipleActions || this.disabledMultipleActions,
            text: (r = this.currentMultipleActions) == null ? void 0 : r.text,
            loading: this.isLoadingMultipleActions,
            loadingAlign: "left",
            onClick: this.onOpenModalMultipleActions
          }),
          c(pt, {
            class: "a_btn a_btn_secondary a_table__action",
            type: "button",
            text: "_A_TABLE_MULTIPLE_CANCEL_",
            onClick: this.onCancelMultipleActions
          })
        ])
      ]) : ""
    ];
  }
};
function wH() {
  const e = B(void 0);
  return {
    componentRef: e,
    setFocusToComponent: () => {
      var n;
      (n = e.value) == null || n.focus({ preventScroll: !0 });
    }
  };
}
const PH = {
  name: "ATablePreviewDown",
  props: {
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    }
  },
  inject: [
    "onTogglePreview"
  ],
  setup() {
    const {
      componentRef: e,
      setFocusToComponent: t
    } = wH();
    return Gr(() => {
      t();
    }), {
      componentRef: e
    };
  },
  render() {
    return c("div", {
      ref: "componentRef",
      class: "a_table__preview_down",
      tabindex: -1
    }, [
      c(Ee, {
        class: "a_sr_only",
        text: "_A_TABLE_PREVIEW_DOWN_ARIA_LABEL_"
      }),
      this.$slots.preview && this.$slots.preview({
        row: this.row,
        rowIndex: this.rowIndex
      }),
      c(pt, {
        class: "a_btn a_btn_transparent_dark a_table__preview_down__btn_close",
        iconLeft: Ea,
        iconClass: "a_table__preview_down__btn_close__icon",
        title: "_A_TABLE_PREVIEW_DOWN_CLOSE_",
        textScreenReader: "_A_TABLE_PREVIEW_DOWN_CLOSE_",
        onClick: () => this.onTogglePreview({
          row: this.row,
          rowIndex: this.rowIndex
        })
      })
    ]);
  }
};
function xH(e) {
  const t = d(e, "column"), n = d(e, "disabledPreview"), r = d(e, "isFooter"), s = de("hasPreview"), i = de("isMobile"), {
    columnsStyles: o
  } = WS(e);
  return {
    attributesForTd: _(() => {
      const f = {
        class: [
          "a_table__td a_table__cell",
          {
            a_table__cell_click: s.value && !r.value && !n.value
          },
          t.value.classRowParent
        ],
        style: o.value
      };
      return i.value || (f.role = "cell"), f;
    })
  };
}
function jS(e) {
  const t = d(e, "column"), n = d(e, "row"), r = _(() => !!t.value.to), s = _(() => {
    if (ot(t.value.to))
      return t.value.to;
    if (at(t.value.to)) {
      const o = he(t.value.to), u = o.params || {}, f = o.query || {};
      if (t.value.to.nameDynamic && !t.value.to.name) {
        const A = ce(n.value, t.value.to.nameDynamic);
        A && (o.name = A);
      }
      if (t.value.to.paramsDynamic) {
        let A = !1;
        if (z(t.value.to.paramsDynamic, (E, p) => {
          const T = ce(n.value, E);
          if (Be(T))
            return A = !0, !1;
          u[p] = T;
        }), A)
          return;
      }
      if (t.value.to.queryDynamic) {
        let A = !1;
        if (z(t.value.to.queryDynamic, (E, p) => {
          const T = ce(n.value, E);
          if (Be(T))
            return A = !0, !1;
          f[p] = T;
        }), A)
          return;
      }
      return o.params = u, o.query = f, o;
    }
  });
  return {
    classForLink: _(() => "a_btn a_btn_link a_p_0 a_text_left"),
    isLink: r,
    toLocal: s
  };
}
function KS(e) {
  const t = d(e, "column"), n = d(e, "isFooter"), r = _(() => n.value ? t.value.footerSlot : t.value.slot);
  return {
    hasSlot: _(() => !!r.value),
    slotName: r
  };
}
function zS(e) {
  const t = d(e, "column"), n = d(e, "isFooter"), r = d(e, "row"), s = de("columnsDefaultValue"), i = de("valuesForColumnDefault"), o = _(() => n.value && "footerDefaultValue" in t.value ? t.value.footerDefaultValue : "defaultValue" in t.value ? t.value.defaultValue : Be(s.value) ? "" : s.value), u = _(() => n.value ? t.value.footerKeyLabel : t.value.keyLabel), f = _(() => n.value ? t.value.footerKeyLabelSafeHtml : t.value.keyLabelSafeHtml), A = _(() => n.value ? t.value.footerKeyLabelHtml : t.value.keyLabelHtml), E = _(() => {
    if (u.value)
      return ce(r.value, u.value);
  }), p = _(() => {
    if (f.value)
      return ce(r.value, f.value);
  }), T = _(() => {
    if (A.value)
      return ce(r.value, A.value);
  }), S = (R) => {
    let g = !1;
    return z(i.value, (D) => {
      if (R === D)
        return g = !0, !1;
    }), g ? o.value : R;
  }, L = _(() => S(E.value)), b = _(() => S(p.value)), I = _(() => S(T.value));
  return {
    textOrHtmlRender: _(() => {
      if (u.value)
        return c("span", null, L.value);
      if (f.value)
        return c("div", {
          innerHTML: b.value
        });
      if (A.value)
        return Dt(c("div"), [
          [Kt, I.value]
        ]);
    })
  };
}
const YS = `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-right-fill" viewBox="0 0 16 16">
  <path d="m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z"/>
</svg>`, ap = {
  name: "ATableTd",
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    level: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    showIconChildren: {
      type: Boolean,
      required: !1
    }
  },
  inject: [
    "isMobile",
    "rowsLocalAll"
  ],
  setup(e) {
    const {
      attributesForTd: t
    } = xH(e), {
      classForLink: n,
      isLink: r,
      toLocal: s
    } = jS(e), {
      hasSlot: i,
      slotName: o
    } = KS(e), {
      textOrHtmlRender: u
    } = zS(e);
    return {
      attributesForTd: t,
      classForLink: n,
      hasSlot: i,
      isLink: r,
      slotName: o,
      textOrHtmlRender: u,
      toLocal: s
    };
  },
  render() {
    const e = c(
      "div",
      this.attributesForTd,
      [
        c("div", {
          class: [
            "a_table__cell__child",
            this.column.class,
            this.column.classRow
          ]
        }, [
          this.showIconChildren ? c(Ae, {
            "aria-hidden": !0,
            class: "a_table__row_level__icon",
            classDefault: "",
            iconLeft: YS,
            type: "text"
          }) : "",
          this.hasSlot && this.$slots[this.slotName] ? this.$slots[this.slotName]({
            column: this.column,
            columnIndex: this.columnIndex,
            level: this.level,
            row: this.row,
            rowIndex: this.rowIndex,
            rows: this.rowsLocalAll
          }) : this.isLink && this.toLocal ? c(kr("RouterLink"), {
            class: [
              this.column.class,
              this.classForLink,
              this.column.classRow
            ],
            to: this.toLocal
          }, () => [
            this.textOrHtmlRender
          ]) : this.textOrHtmlRender
        ])
      ]
    );
    return this.isMobile ? [
      c(Ee, {
        text: this.column.label,
        tag: "dt"
      }),
      c("dd", {}, [
        e
      ])
    ] : e;
  }
}, sp = {
  name: "ATableListItem",
  inject: [
    "rowsLocalAll"
  ],
  props: {
    column: {
      type: Object,
      required: !0
    },
    columnIndex: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    isFooter: {
      type: Boolean,
      required: !1
    }
  },
  setup(e) {
    const {
      classForLink: t,
      isLink: n,
      toLocal: r
    } = jS(e), {
      hasSlot: s,
      slotName: i
    } = KS(e), {
      textOrHtmlRender: o
    } = zS(e);
    return {
      classForLink: t,
      hasSlot: s,
      isLink: n,
      slotName: i,
      textOrHtmlRender: o,
      toLocal: r
    };
  },
  render() {
    return [
      c(Ee, {
        text: this.column.label,
        tag: "dt"
      }),
      c(
        "dd",
        null,
        this.hasSlot && this.$slots[this.slotName] ? this.$slots[this.slotName]({
          column: this.column,
          columnIndex: this.columnIndex,
          row: this.row,
          rowIndex: this.rowIndex,
          rows: this.rowsLocalAll
        }) : this.isLink && this.toLocal ? [
          c(kr("RouterLink"), {
            class: [
              this.column.class,
              this.classForLink,
              this.column.classRow
            ],
            to: this.toLocal
          }, () => [
            this.textOrHtmlRender
          ])
        ] : [
          this.textOrHtmlRender
        ]
      )
    ];
  }
};
function MH() {
  const e = de("columnsScrollInvisible"), t = de("modelIsTableWithoutScroll"), n = _(() => e.value.length), r = _(() => t.value ? n.value > 0 : !1);
  return {
    columnsScrollInvisibleText: _(() => n.value === 1 ? "_A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_" : "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_"),
    countColumnsScrollInvisible: n,
    isColumnsScrollInvisibleDropdownVisible: r
  };
}
function FH(e) {
  const t = d(e, "columnActionsView"), n = d(e, "isFooter"), r = d(e, "row"), s = d(e, "rowIndex"), i = de("columnActionsOnePlusDropdownOptions"), o = de("rowActions"), u = de("tableId"), f = _(() => `${u.value}_action_${s.value}`), A = _(() => Be(i.value.indexFirstDropdownAction) ? 1 : i.value.indexFirstDropdownAction), E = ({ rowAction: O }) => {
    if (O.text)
      return O.text;
    if (Ne(O.textCallback))
      return O.textCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: O
      });
  }, p = ({ rowAction: O }) => {
    if (O.html)
      return O.html;
    if (Ne(O.htmlCallback))
      return O.htmlCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: O
      });
  }, T = ({ rowAction: O }) => {
    if (O.title)
      return O.title;
    if (Ne(O.titleCallback))
      return O.titleCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: O
      });
  }, S = ({ rowAction: O }) => O.disabled ? O.disabled : Ne(O.disabledCallback) ? O.disabledCallback({
    row: r.value,
    rowIndex: s.value,
    rowAction: O
  }) : !1, L = ({ rowAction: O }) => O.class ? O.class : Ne(O.classCallback) ? O.classCallback({
    row: r.value,
    rowIndex: s.value,
    rowAction: O
  }) : "", b = ({ rowAction: O }) => {
    if (O.iconLeft)
      return O.iconLeft;
    if (Ne(O.iconLeftCallback))
      return O.iconLeftCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: O
      });
  }, I = ({ rowAction: O }) => {
    if (O.iconRight)
      return O.iconRight;
    if (Ne(O.iconRightCallback))
      return O.iconRightCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: O
      });
  }, v = ({ rowAction: O }) => {
    if (ot(O.to))
      return O.to;
    if (at(O.to)) {
      const q = he(O.to), U = q.params || {}, G = q.query || {};
      if (O.to.nameDynamic && !O.to.name) {
        const te = ce(r.value, O.to.nameDynamic);
        te && (q.name = te);
      }
      if (O.to.paramsDynamic) {
        let te = !1;
        if (z(O.to.paramsDynamic, (ne, oe) => {
          const se = ce(r.value, ne);
          if (Be(se))
            return te = !0, !1;
          U[oe] = se;
        }), te)
          return;
      }
      if (O.to.queryDynamic) {
        let te = !1;
        if (z(O.to.queryDynamic, (ne, oe) => {
          const se = ce(r.value, ne);
          if (Be(se))
            return te = !0, !1;
          G[oe] = se;
        }), te)
          return;
      }
      return q.params = U, q.query = G, q;
    }
  }, R = ({ rowAction: O }) => O.href ? O.href : Ne(O.hrefCallback) ? O.hrefCallback({
    row: r.value,
    rowIndex: s.value,
    rowAction: O
  }) : !1, g = ({ rowAction: O }) => {
    if (O.extra)
      return O.extra;
    if (Ne(O.extraCallback))
      return O.extraCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: O
      });
  }, D = ({ rowAction: O }) => {
    if (O.textScreenReader)
      return O.textScreenReader;
    if (Ne(O.textScreenReaderCallback))
      return O.textScreenReaderCallback({
        row: r.value,
        rowIndex: s.value,
        rowAction: O
      });
  }, w = ({ rowActionIndexVisible: O }) => {
    if (t.value === "dropdown")
      return {
        id: f.value,
        ids: [f.value, u.value]
      };
    if (O < A.value) {
      const q = `${f.value}_${O}`;
      return {
        buttonId: q,
        id: q,
        ids: [q, u.value]
      };
    }
    return {
      id: f.value,
      ids: [f.value, u.value]
    };
  }, F = (O) => {
    z(O, (q, U) => {
      pw(U, "Callback") && (O[U] = void 0);
    });
  }, P = _(() => {
    const O = [];
    let q = 0;
    return z(he(o.value), (U) => {
      if (US({
        rowAction: U,
        row: r.value,
        rowIndex: s.value
      })) {
        if (U.type !== "divider") {
          const G = E({ rowAction: U });
          G && (U.text = G);
          const te = p({ rowAction: U });
          te && (U.html = te);
          const ne = T({ rowAction: U });
          ne ? U.title = ne : G && (U.title = G);
          const oe = S({ rowAction: U });
          oe && (U.disabled = oe);
          const se = L({ rowAction: U });
          se && (U.class = se);
          const ie = b({ rowAction: U });
          ie && (U.iconLeft = ie);
          const me = I({ rowAction: U });
          me && (U.iconRight = me);
          const Ve = g({ rowAction: U });
          Ve && (U.extra = Ve);
          const Le = D({ rowAction: U });
          if (Ve && (U.textScreenReader = Le), U.type === "link") {
            const _e = v({ rowAction: U });
            _e ? U.to = _e : U.href = R({ rowAction: U });
          }
          if (Ne(U.callback)) {
            const {
              buttonId: _e,
              id: ve,
              ids: be
            } = w({
              rowActionIndexVisible: q
            });
            U.id = _e;
            const je = U.callback;
            U.callback = () => je({
              row: r.value,
              rowIndex: s.value,
              id: ve,
              ids: be,
              rowAction: U
            });
          }
          F(U), q++;
        }
        O.push(U);
      }
    }), O;
  }), M = _(() => !n.value && P.value.length > 0);
  return {
    buttonActionsId: f,
    isRowActionsDropdownVisible: M,
    rowActionsFiltered: P
  };
}
function qH(e) {
  const t = d(e, "rowIndex");
  return {
    rowNumber: _(() => t.value + 1)
  };
}
const $H = {
  name: "ATableTdAction",
  components: {
    AIcon: _t,
    ATableListItem: sp
  },
  props: {
    columnActionsBtnGroupMaxWidthStyle: {
      type: String,
      required: !1,
      default: void 0
    },
    columnActionsView: {
      type: String,
      required: !0
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    }
  },
  inject: [
    "columnActionsOnePlusDropdownOptions",
    "columnsScrollInvisible",
    "tableId"
  ],
  setup(e) {
    const {
      isMobileWidth: t
    } = Tn(), {
      buttonActionsId: n,
      isRowActionsDropdownVisible: r,
      rowActionsFiltered: s
    } = FH(e), {
      columnsScrollInvisibleText: i,
      countColumnsScrollInvisible: o,
      isColumnsScrollInvisibleDropdownVisible: u
    } = MH(), {
      rowNumber: f
    } = qH(e), {
      stylesThTd: A
    } = HS();
    return {
      buttonActionsId: n,
      columnsScrollInvisibleText: i,
      countColumnsScrollInvisible: o,
      isColumnsScrollInvisibleDropdownVisible: u,
      isMobileWidth: t,
      isRowActionsDropdownVisible: r,
      rowActionsFiltered: s,
      rowNumber: f,
      stylesThTd: A
    };
  },
  render() {
    return c("div", {
      role: "cell",
      class: [
        "a_table__td a_table__cell a_table__cell_action",
        {
          a_table__cell_action_sticky: this.isRowActionsStickyLocal
        }
      ],
      ...this.stylesThTd
    }, [
      c("div", {
        class: [
          "a_table__cell__child",
          this.rowActionsClass
        ]
      }, [
        this.isColumnsScrollInvisibleDropdownVisible && c(la, {
          buttonClass: "a_btn a_btn_link a_text_nowrap",
          buttonIconLeft: IS,
          buttonIconClass: "a_table__cell_action__additional_icon",
          buttonTitle: "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_",
          buttonTextScreenReader: "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_",
          buttonText: this.columnsScrollInvisibleText,
          buttonTextClass: "a_table__cell_action__additional_text",
          buttonTextAriaHidden: !0,
          extra: {
            count: this.countColumnsScrollInvisible
          },
          dropdownClass: "a_p_0 a_overflow_x_hidden a_table__extra_dropdown",
          dropdownTag: "div",
          hasCaret: !1,
          floatingFlip: {
            use: !0,
            fallbackPlacements: ["top-end", "left"]
          },
          inBody: !0,
          placement: "bottom-end",
          menuWidth: 600,
          isCloseByClickInside: !1
        }, {
          dropdown: () => [
            c("dl", {
              class: "a_list_dl a_list_dl_dt_right"
            }, [
              this.columnsScrollInvisible.map((e, t) => c(sp, {
                column: e,
                columnIndex: t,
                row: this.row,
                rowIndex: this.rowIndex,
                isFooter: this.isFooter
              }, this.$slots))
            ])
          ]
        }),
        this.isRowActionsDropdownVisible || this.$slots.rowActions ? c("div", {
          class: "a_table__cell_action__group"
        }, [
          this.$slots.rowActions ? this.$slots.rowActions({
            tableId: this.tableId,
            row: this.row,
            rowIndex: this.rowIndex,
            isFooter: this.isFooter
          }) : "",
          this.isRowActionsDropdownVisible ? this.columnActionsView === "dropdown" || this.isMobileWidth && this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile === 0 ? c(la, {
            id: this.buttonActionsId,
            actions: this.rowActionsFiltered,
            buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
            buttonIconLeft: ql,
            buttonTextScreenReader: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
            buttonTitle: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
            disabled: this.disabledRowActions,
            extra: {
              rowNumber: this.rowNumber
            },
            hasCaret: !1,
            inBody: !0,
            placement: "bottom-end"
          }, this.$slots) : c(ec, {
            class: "a_d_inline_block",
            style: this.columnActionsBtnGroupMaxWidthStyle,
            actions: this.rowActionsFiltered,
            dropdownAttributes: {
              id: this.buttonActionsId,
              buttonClass: "a_btn a_btn_secondary a_table__cell_action__btn",
              buttonIconLeft: Ua,
              buttonTextScreenReader: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
              buttonTitle: "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_",
              extra: {
                rowNumber: this.rowNumber
              },
              hasCaret: !1,
              inBody: !0,
              placement: "bottom-end"
            },
            disabled: this.disabledRowActions,
            btnGroupClass: Be(this.columnActionsOnePlusDropdownOptions.btnGroupClass) ? "a_btn_group a_btn_group_table" : this.columnActionsOnePlusDropdownOptions.btnGroupClass,
            hasDividerBeforeDropdown: this.columnActionsOnePlusDropdownOptions.hasDividerBeforeDropdown || !1,
            indexFirstDropdownAction: Be(this.columnActionsOnePlusDropdownOptions.indexFirstDropdownAction) ? 1 : this.columnActionsOnePlusDropdownOptions.indexFirstDropdownAction,
            indexFirstDropdownActionMobile: Be(this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile) ? 1 : this.columnActionsOnePlusDropdownOptions.indexFirstDropdownActionMobile,
            minDropdownActions: Be(this.columnActionsOnePlusDropdownOptions.minDropdownActions) ? 1 : this.columnActionsOnePlusDropdownOptions.minDropdownActions,
            actionsClasses: this.columnActionsOnePlusDropdownOptions.actionsClasses || ["a_btn a_btn_primary a_text_truncate"]
          }, this.$slots) : ""
        ]) : ""
      ])
    ]);
  }
};
function UH(e, {
  hasChildren: t = _(() => !1),
  hasPreviewLocal: n = _(() => !1),
  rowClassChildren: r = _(() => {
  }),
  rowClassLevelChildren: s = _(() => {
  }),
  rowClassPreview: i = _(() => {
  }),
  toggleChildren: o = () => {
  }
}) {
  const u = d(e, "disabledPreview"), f = d(e, "disabledPreviewRowCallback"), A = d(e, "isFooter"), E = d(e, "isTreeCollapsible"), p = d(e, "level"), T = d(e, "row"), S = d(e, "rowClass"), L = d(e, "rowIndex"), b = de("isMobile"), I = de("onTogglePreview"), v = de("tableId"), R = _(() => {
    const q = A.value ? "_footer" : "";
    return `${v.value}${q}_${L.value}`;
  }), g = _(() => Ne(S.value) ? S.value({
    level: p.value,
    row: T.value,
    rowindex: L.value
  }) : S.value), D = _(() => [
    "a_table__row a_table__body__row a_table__row_hover",
    r.value,
    s.value,
    i.value,
    g.value
  ]), w = _(() => b.value ? "listitem" : "row"), F = _(() => Ne(f.value) ? f.value({ row: T.value, rowIndex: L.value }) : u.value), P = (q) => {
    Qk({
      $event: q,
      tagsName: [
        "A",
        "BUTTON",
        "INPUT",
        "LABEL"
      ],
      classStop: "a_table__row"
    }) || (t.value ? o() : n.value && I({
      row: T.value,
      rowIndex: L.value
    }));
  }, M = (q) => {
    q.keyCode === J.enter && P(q);
  }, O = _(() => (E.value && t.value || n.value) && !F.value ? {
    tabindex: 0,
    onClick: P,
    onKeydown: M
  } : {});
  return {
    disabledPreviewRow: F,
    eventsLocal: O,
    roleLocal: w,
    rowClassComputed: D,
    rowHtmlId: R
  };
}
function kH(e, { emit: t }) {
  const n = d(e, "areAllRowsSelected"), r = d(e, "row"), s = d(e, "rowIndex"), i = d(e, "selectedRowsIndexes"), o = de("currentMultipleActions"), u = de("isMultipleActionsActive"), f = _(() => !!i.value[s.value] || n.value), A = _(() => {
    if (u.value) {
      if (Ne(ce(o.value, "isHiddenCallback")))
        return o.value.isHiddenCallback({
          row: r.value,
          rowIndex: s.value
        });
      if (n.value)
        return !0;
    }
    return !1;
  }), E = _(() => f.value ? "_A_TABLE_DESELECT_THIS_ROW_" : "_A_TABLE_SELECT_THIS_ROW_");
  return {
    isCheckboxDisabled: A,
    isRowSelected: f,
    labelCheckbox: E,
    toggleCheckbox: () => {
      A.value || t("setSelectedRowsIndexes", { rowIndex: s.value });
    }
  };
}
function HH(e) {
  const t = d(e, "isTree"), n = d(e, "keyChildren"), r = d(e, "level"), s = d(e, "row"), i = d(e, "rowIndex"), o = d(e, "rowsLength"), u = _(() => {
    if (!n.value)
      return [];
    const T = ce(s.value, n.value);
    return Te(T) ? T : [];
  }), f = _(() => u.value.length > 0), A = _(() => r.value + 1), E = _(() => t.value ? {
    "aria-level": r.value,
    "aria-posinset": i.value + 1,
    "aria-setsize": o.value
  } : {}), p = _(() => {
    if (t.value)
      return `a_table__row_level a_table__row_level_${r.value}`;
  });
  return {
    ariaTreeAttributes: E,
    children: u,
    hasChildren: f,
    levelForChildren: A,
    rowClassLevelChildren: p
  };
}
function VH(e, {
  hasChildren: t = _(() => !1)
}) {
  const n = d(e, "isOneOfParentsClose"), r = d(e, "isTreeCollapsible"), s = d(e, "isTreeOpened"), i = B(!1), o = _(() => {
    if (t.value)
      return i.value;
  }), u = _(() => ({
    a_table__row_has_children: t.value,
    a_table__row_hide: n.value,
    a_table__row_level_open: t.value && i.value
  })), f = _(() => !!(n.value || !i.value));
  return {
    ariaExpanded: o,
    initIsChildrenOpen: () => {
      (!r.value || s.value) && (i.value = !0);
    },
    isOneOfParentsCloseForChildren: f,
    rowClassChildren: u,
    toggleChildren: () => {
      i.value = !i.value;
    }
  };
}
function WH(e) {
  const t = d(e, "allVisibleMobileColumns"), n = d(e, "countVisibleMobileColumns"), r = de("isMobile"), s = B(!1), i = _(() => t.value.length - n.value), o = _(() => r.value && t.value.length > n.value), u = _(() => i.value === 1 ? "_A_TABLE_MOBILE_TR_PLUS_FIELD_" : "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_"), f = _(() => s.value ? "_A_TABLE_MOBILE_TR_CLOSE_" : u.value);
  return {
    countInvisibleMobileColumns: i,
    isAllColumnsVisibleMobile: s,
    isBtnToggleAllColumnsVisible: o,
    textBtnToggleAllColumns: f,
    toggleAllColumnsVisibleMobile: ({ $event: E }) => {
      s.value = !s.value, E.stopPropagation();
    }
  };
}
function GH(e, {
  hasChildren: t = _(() => !1)
}) {
  const n = d(e, "isFooter"), r = d(e, "rowIndex"), s = de("hasPreview"), i = de("previewRightRowIndex"), o = de("previewRightRowIndexLast"), u = _(() => !!(!t.value && s.value && !n.value)), f = _(() => r.value === i.value), A = _(() => !f.value && r.value === o.value), E = _(() => Pt({
    placeholder: f.value ? "_A_TABLE_ROW_PREVIEW_CLOSE_" : "_A_TABLE_ROW_PREVIEW_OPEN_"
  })), p = _(() => u.value ? {
    "aria-label": E.value
  } : {}), T = _(() => {
    if (u.value)
      return {
        a_table__row_preview_open: f.value,
        a_table__row_preview_was_open: A.value
      };
  });
  return {
    hasPreviewLocal: u,
    previewAttributes: p,
    rowClassPreview: T
  };
}
const ip = {
  name: "ATableTr",
  props: {
    allVisibleMobileColumns: {
      type: Array,
      required: !0
    },
    areAllRowsSelected: {
      type: Boolean,
      required: !0
    },
    columnActionsBtnGroupMaxWidthStyle: {
      type: String,
      required: !1,
      default: void 0
    },
    columnActionsView: {
      type: String,
      required: !0
    },
    countVisibleMobileColumns: {
      type: Number,
      required: !0
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    isFooter: {
      type: Boolean,
      required: !1
    },
    isOneOfParentsClose: {
      type: Boolean,
      required: !1
    },
    isPreviewDownOpen: {
      type: Boolean,
      required: !1
    },
    isRowActionsStickyLocal: {
      type: Boolean,
      required: !0
    },
    isTree: {
      type: Boolean,
      required: !1
    },
    isTreeCollapsible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTreeOpened: {
      type: Boolean,
      required: !1
    },
    keyChildren: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: "id"
    },
    level: {
      type: Number,
      required: !0
    },
    row: {
      type: Object,
      required: !0
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowClass: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    rowIndex: {
      type: Number,
      required: !0
    },
    rowsLength: {
      type: Number,
      required: !0
    },
    selectedRowsIndexes: {
      type: Object,
      required: !0
    }
  },
  emits: [
    "setSelectedRowsIndexes"
  ],
  setup(e, t) {
    const {
      ariaTreeAttributes: n,
      children: r,
      hasChildren: s,
      levelForChildren: i,
      rowClassLevelChildren: o
    } = HH(e), {
      ariaExpanded: u,
      initIsChildrenOpen: f,
      isOneOfParentsCloseForChildren: A,
      rowClassChildren: E,
      toggleChildren: p
    } = VH(e, {
      hasChildren: s
    }), {
      hasPreviewLocal: T,
      previewAttributes: S,
      rowClassPreview: L
    } = GH(e, {
      hasChildren: s
    }), {
      disabledPreviewRow: b,
      eventsLocal: I,
      roleLocal: v,
      rowClassComputed: R,
      rowHtmlId: g
    } = UH(e, {
      hasChildren: s,
      hasPreviewLocal: T,
      rowClassChildren: E,
      rowClassLevelChildren: o,
      rowClassPreview: L,
      toggleChildren: p
    }), {
      countInvisibleMobileColumns: D,
      isAllColumnsVisibleMobile: w,
      isBtnToggleAllColumnsVisible: F,
      textBtnToggleAllColumns: P,
      toggleAllColumnsVisibleMobile: M
    } = WH(e), {
      isCheckboxDisabled: O,
      isRowSelected: q,
      labelCheckbox: U,
      toggleCheckbox: G
    } = kH(e, t);
    return f(), {
      ariaExpanded: u,
      ariaTreeAttributes: n,
      children: r,
      countInvisibleMobileColumns: D,
      disabledPreviewRow: b,
      eventsLocal: I,
      hasChildren: s,
      isAllColumnsVisibleMobile: w,
      isBtnToggleAllColumnsVisible: F,
      isCheckboxDisabled: O,
      isOneOfParentsCloseForChildren: A,
      isRowSelected: q,
      labelCheckbox: U,
      levelForChildren: i,
      previewAttributes: S,
      roleLocal: v,
      rowClassComputed: R,
      rowHtmlId: g,
      textBtnToggleAllColumns: P,
      toggleAllColumnsVisibleMobile: M,
      toggleCheckbox: G,
      toggleChildren: p
    };
  },
  inject: [
    "columnsFilteredForRender",
    "isActionColumnVisible",
    "isMultipleActionsActive",
    "isMobile"
  ],
  render() {
    let e = [];
    this.isMobile && !this.isAllColumnsVisibleMobile ? z(this.allVisibleMobileColumns, (r, s) => {
      if (s + 1 > this.countVisibleMobileColumns)
        return !1;
      e.push(
        c(ap, {
          key: r.id,
          column: r,
          columnIndex: s,
          disabledPreview: this.disabledPreviewRow,
          level: this.level,
          row: this.row,
          rowIndex: this.rowIndex,
          isFooter: this.isFooter
        }, this.$slots)
      );
    }) : e = this.columnsFilteredForRender.map((r, s) => c(ap, {
      key: r.id,
      column: r,
      columnIndex: s,
      disabledPreview: this.disabledPreviewRow,
      level: this.level,
      row: this.row,
      rowIndex: this.rowIndex,
      isFooter: this.isFooter,
      showIconChildren: !!(this.isTreeCollapsible && this.hasChildren && s === 0)
    }, this.$slots));
    const t = this.isActionColumnVisible && c($H, {
      columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
      columnActionsView: this.columnActionsView,
      disabledRowActions: this.disabledRowActions,
      row: this.row,
      rowIndex: this.rowIndex,
      isFooter: this.isFooter,
      rowActionsClass: this.rowActionsClass,
      isRowActionsStickyLocal: this.isRowActionsStickyLocal
    }, this.$slots), n = this.isMobile ? c("div", {
      class: "a_table_mobile__dl__wrapper"
    }, [
      this.$slots.rowMobilePrepend ? this.$slots.rowMobilePrepend({
        row: this.row,
        rowIndex: this.rowIndex,
        isFooter: this.isFooter
      }) : "",
      this.isTreeCollapsible && this.hasChildren ? c(Ae, {
        "aria-hidden": !0,
        class: "a_table__row_level__icon",
        classDefault: "",
        iconLeft: YS,
        type: "text"
      }) : "",
      c("dl", {
        class: "a_table_mobile__dl"
      }, e),
      this.$slots.rowMobileAppend ? this.$slots.rowMobileAppend({
        row: this.row,
        rowIndex: this.rowIndex,
        isFooter: this.isFooter
      }) : ""
    ]) : e;
    return [
      c("div", {
        id: this.rowHtmlId,
        role: this.roleLocal,
        class: this.rowClassComputed,
        "aria-expanded": this.ariaExpanded,
        ...this.previewAttributes,
        ...this.ariaTreeAttributes,
        ...this.eventsLocal
      }, [
        this.isMultipleActionsActive && c("div", {
          class: "a_table__td a_table__cell a_table__cell_checkbox",
          style: "width: 50px; min-width: 50px; max-width: 50px;"
        }, [
          !this.isFooter && c(xu, {
            isWidthAuto: !0,
            modelValue: this.isRowSelected,
            disabled: this.isCheckboxDisabled,
            label: this.labelCheckbox,
            labelClass: "a_sr_only",
            isLabelTitle: !0,
            "onUpdate:modelValue": this.toggleCheckbox
          })
        ]),
        n,
        this.isMobile ? c("div", {
          class: "a_table_mobile__actions_parent"
        }, [
          this.isBtnToggleAllColumnsVisible && c(Ae, {
            class: "a_btn a_btn_link a_table_mobile__columns_btn_toggle",
            extra: {
              count: this.countInvisibleMobileColumns
            },
            text: this.textBtnToggleAllColumns,
            type: "button",
            onClick: this.toggleAllColumnsVisibleMobile
          }),
          t
        ]) : t
      ]),
      this.isPreviewDownOpen && c(PH, {
        row: this.row,
        rowIndex: this.rowIndex
      }, {
        preview: (r) => this.$slots.preview ? this.$slots.preview(r) : void 0
      }),
      this.hasChildren ? this.children.map((r, s) => c(kr("ATableTr"), {
        key: r[this.keyId] || s,
        allVisibleMobileColumns: this.allVisibleMobileColumns,
        areAllRowsSelected: this.areAllRowsSelected,
        columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
        columnActionsView: this.columnActionsView,
        countVisibleMobileColumns: this.countVisibleMobileColumns,
        disabledPreview: this.disabledPreviewRow,
        disabledRowActions: this.disabledRowActions,
        isFooter: this.isFooter,
        isOneOfParentsClose: this.isOneOfParentsCloseForChildren,
        isPreviewDownOpen: !1,
        isRowActionsStickyLocal: this.isRowActionsStickyLocal,
        isTree: this.isTree,
        isTreeCollapsible: this.isTreeCollapsible,
        isTreeOpened: this.isTreeOpened,
        keyChildren: this.keyChildren,
        keyId: this.keyId,
        level: this.levelForChildren,
        row: r,
        rowActionsClass: this.rowActionsClass,
        rowClass: this.rowClass,
        rowIndex: s,
        rowsLength: this.children.length,
        selectedRowsIndexes: this.selectedRowsIndexes
      }, {
        get: (i) => [
          c(Qd, {
            data: i.row,
            keyLabel: i.column.keyLabel,
            filter: i.column.filter,
            filterParameters: i.column.filterParameters,
            defaultValue: i.column.defaultValue,
            tag: i.column.filterTag || "div"
          })
        ],
        ...this.$slots
      })) : ""
    ];
  }
};
function jH(e, {
  isMobile: t = _(() => !1),
  rowsLocal: n = B([])
}) {
  const r = d(e, "columnActionsView"), s = d(e, "columnActionsWidth"), i = d(e, "columnActionsWidthDefaults"), o = d(e, "columnActionsWidthMin"), u = d(e, "rowActions"), f = _(() => r.value === "onePlusDropdown"), A = _(() => {
    let L = !1;
    e: for (let b = 0; b < n.value.length; b++) {
      const I = n.value[b];
      for (let v = 0; v < u.value.length; v++) {
        const R = u.value[v];
        if (US({
          rowAction: R,
          row: I,
          rowIndex: b
        }) && R.type !== "divider") {
          L = !0;
          break e;
        }
      }
    }
    return L;
  }), E = _(() => !u.value.length || !f.value ? !1 : A.value), p = _(() => Be(s.value) ? E.value && r.value === "onePlusDropdown" ? i.value.onePlusDropdown : i.value.default : s.value), T = _(() => Be(o.value) ? E.value && r.value === "onePlusDropdown" ? i.value.onePlusDropdownMin : i.value.min : o.value);
  return {
    columnActionsBtnGroupMaxWidthStyle: _(() => {
      const L = i.value.btnGroupMaxWidth;
      if (!t.value && r.value !== "dropdown" && !Be(L))
        return `max-width: ${L}px`;
    }),
    columnActionsWidthLocal: p,
    columnActionsWidthMinLocal: T,
    isColumnActionWide: E
  };
}
function KH(e, {
  columnsScrollInvisible: t = B([]),
  indexFirstScrollInvisibleColumn: n = B(void 0),
  modelColumnsVisibleLocal: r = B({}),
  modelIsTableWithoutScrollComputed: s = _(() => !1),
  columnsOrderedFromSimpleTable: i = _(() => [])
}) {
  const o = d(e, "columns"), u = d(e, "isActionColumnVisible"), f = d(e, "isSimpleTable"), A = d(e, "modelColumnsOrdering"), E = d(e, "multipleActions"), p = _(() => Fa(o.value, "id")), T = _(() => {
    const R = {
      true: [],
      false: [],
      trueObject: {},
      falseObject: {},
      trueColumns: [],
      falseColumns: []
    };
    return z(he(o.value), (g) => {
      const D = g.id;
      g.locked ? (R.true.push(D), R.trueColumns.push(g), R.trueObject[D] = !0) : (R.false.push(D), R.falseColumns.push(g), R.falseObject[D] = !0);
    }), R;
  }), S = _(() => {
    if (f.value && i.value && i.value.length)
      return i.value;
    if (!A.value.length)
      return [...T.value.trueColumns, ...T.value.falseColumns];
    const R = [], g = he(p.value);
    return z(A.value, (D) => {
      g[D] && R.push(g[D]);
    }), R;
  }), L = _(() => {
    const R = [], g = {};
    return z(S.value, (D, w) => {
      nH({
        column: D,
        columnIndex: w,
        modelIsTableWithoutScroll: s.value,
        modelColumnsVisibleLocal: r.value,
        indexFirstScrollInvisibleColumn: n.value
      }) && (g[R.length] = w, R.push(D));
    }), {
      columns: R,
      columnsIndexesMapping: g
    };
  }), b = _(() => L.value.columnsIndexesMapping), I = _(() => L.value.columns), v = _(() => {
    let R = I.value.length;
    return s.value && (R += t.value.length), u.value && R++, E.value.length && R++, R;
  });
  return {
    columnIdsGroupByLocked: T,
    columnsFilteredForRender: I,
    columnsFilteredForRenderIndexesMapping: b,
    columnsOrdered: S,
    countNotHiddenColumns: v
  };
}
function zH(e, {
  modelSort: t = B([])
}) {
  const n = d(e, "columns"), r = d(e, "showFirstSortingSequenceNumber"), s = d(e, "sortingSequenceNumberClass"), i = _(() => Lt(n.value, (v) => eH({ column: v }))), o = _(() => Mn(i.value, (v, R) => ({
    ...v,
    _index: v.prio || R
  }))), u = _(() => Mn(o.value, (v) => (v.group && v.group.length && (v.group = Mn(v.group, (R, g) => [
    R,
    g
  ].join("%%%"))), v))), f = ({ groups: v, group: R, level: g, columnsOrderedFromGroups: D, firstLevelGroupObject: w }) => {
    const F = R ? Lt(v, (O) => kd(O, R[g - 1])) : v, P = vT(F, (O) => O[g]), M = Mn(P, (O) => {
      const q = {
        id: O[g].split("%%%")[0]
      };
      let U;
      return g === 0 ? (U = q, U.columnIndexes = []) : U = w, O.length > g + 1 ? q.children = ce(
        f({
          groups: v,
          group: O,
          level: g + 1,
          columnsOrderedFromGroups: D,
          firstLevelGroupObject: U
        }),
        "recursiveGroup"
      ) : O.length === g + 1 && (q.columns = Lt(u.value, (G) => kd(G.group, O[g])), U.columnIndexes.push(...Mn(q.columns, "_index")), D.push(...q.columns)), q;
    });
    return {
      columnsOrderedFromGroups: D,
      recursiveGroup: M
    };
  }, A = _(() => Mn(u.value, (v) => ce(v, "group", v))), E = _(() => Lt(A.value, (v) => Te(v))), p = _(() => Lt(A.value, (v) => !Te(v))), T = _(() => {
    const v = [];
    return f({ groups: E.value, group: null, level: 0, columnsOrderedFromGroups: v });
  }), S = _(() => Gd([
    ...T.value.columnsOrderedFromGroups,
    ...p.value
  ], "_index")), L = (v) => c(ac, {
    ref: "th",
    class: "a_table__cell__child_group",
    column: v,
    columnGroupNames: Mn(v.group, (R) => R.split("%%%")[0]),
    columnIndex: v._index,
    hasMultipleActions: !1,
    modelSort: t.value,
    showFirstSortingSequenceNumber: r.value,
    sortingSequenceNumberClass: s.value
  }), b = (v) => c("div", {
    class: "a_table__th_group"
  }, [
    c("div", {
      class: "a_table__th_child_group"
    }, [
      c("div", {
        class: "a_table__cell_group a_text_center"
      }, [
        v.id && c(Ee, {
          html: v.id,
          tag: "span",
          "aria-hidden": !0
        })
      ]),
      c("div", {
        class: "a_table__th_group_container"
      }, v.children ? Mn(v.children, (R) => b(R)) : Mn(v.columns, (R) => L(R)))
    ])
  ]), I = _(() => {
    const v = Gd([
      ...T.value.recursiveGroup,
      ...p.value
    ], (R) => R.columnIndexes ? Mw(R.columnIndexes) : R._index);
    return Mn(v, (R) => R.columnIndexes ? b(R) : L(R));
  });
  return {
    columnsOrderedFromSimpleTable: S,
    renderedGroupedColumns: I
  };
}
function YH(e, { emit: t }, {
  checkVisibleColumns: n = () => {
  },
  columnIdsGroupByLocked: r = _(() => ({
    true: [],
    false: [],
    trueObject: {},
    falseObject: {},
    trueColumns: [],
    falseColumns: []
  })),
  columnsFilteredForRenderIndexesMapping: s = _(() => ({}))
}) {
  const i = d(e, "columns"), o = d(e, "modelColumnsOrdering"), u = ({ columnIndexDraggable: E, columnIndexOver: p, reset: T, inHeader: S }) => {
    if (E === p && !T)
      return;
    S && (E = s.value[E], p = s.value[p]);
    let L;
    if (T)
      L = [...r.value.true, ...r.value.false];
    else {
      L = he(o.value);
      const b = L[E];
      L.splice(E, 1), L.splice(p, 0, b);
    }
    t("changeColumnsOrdering", {
      columnIndexDraggable: E,
      columnIndexOver: p,
      modelColumnsOrdering: L
    }), setTimeout(() => {
      n();
    });
  }, f = () => {
    let E = [], p = !1;
    if (!o.value.length)
      E = [...r.value.true, ...r.value.false];
    else {
      E = [...r.value.true];
      const T = he(r.value.falseObject);
      z(o.value, (S) => {
        T[S] && (E.push(S), delete T[S]);
      }), z(T, (S, L) => {
        E.push(L);
      }), JSON.stringify(o.value) !== JSON.stringify(E) && (p = !0);
    }
    return {
      shouldFixColumns: p,
      modelColumnsOrderingLocal: E
    };
  }, A = () => {
    const {
      shouldFixColumns: E,
      modelColumnsOrderingLocal: p
    } = f();
    E && t("changeColumnsOrdering", {
      modelColumnsOrdering: p,
      shouldFixColumns: E
    });
  };
  return rt(i, () => {
    A();
  }, {
    deep: !0
  }), {
    changeColumnsOrdering: u,
    checkColumnsOrdering: f
  };
}
function XH(e) {
  const t = d(e, "countAllRows"), n = d(e, "data"), r = d(e, "isTree"), s = d(e, "keyChildren"), i = d(e, "keyCountAllRowsInData"), o = _(() => at(n.value)), u = _(() => Te(n.value)), f = _(() => le(t.value) ? o.value ? +ce(n.value, i.value) : u.value ? r.value ? ZP({
    array: n.value,
    keyChildren: s.value
  }) : n.value.length : 0 : t.value), A = _(() => le(t.value) ? n.value.length : t.value);
  return {
    countAllRowsLocal: f,
    totalRowsCount: A
  };
}
function ZH({
  tableRef: e = B(void 0)
}) {
  return {
    scrollToTable: () => {
      if (e.value) {
        let s = e.value.getBoundingClientRect().top + window.scrollY - window.innerHeight / 2;
        s < 0 && (s = 0), document.documentElement.scrollTop = s;
      }
    },
    setFocusToTable: () => {
      e.value && (e.value.setAttribute("tabindex", "-1"), e.value.focus(), e.value.removeAttribute("tabindex"));
    }
  };
}
function JH(e, { emit: t }, {
  checkColumnsOrdering: n = () => {
  },
  checkVisibleColumns: r = () => {
  },
  modelColumnsVisibleLocal: s = B({})
}) {
  const i = d(e, "modelColumnsVisible"), o = d(e, "columns");
  return {
    initTable: () => {
      const {
        shouldFixColumns: f,
        modelColumnsOrderingLocal: A
      } = n();
      let E = !1;
      Ri(i.value) ? s.value = he(i.value) : (E = !0, s.value = xS(o.value), r()), t("initTable", he({
        columnsOrdering: {
          model: A,
          shouldFix: f
        },
        columnsVisible: {
          model: s.value,
          shouldFix: E
        }
      }));
    }
  };
}
function QH(e, { emit: t }, {
  closePreviewAll: n = () => {
  },
  scrollToTable: r = () => {
  },
  setFocusToTable: s = () => {
  },
  viewCurrent: i = _(() => ({}))
}) {
  const o = d(e, "isTree"), u = d(e, "offsetStart"), f = d(e, "pagination"), A = B(void 0), E = B(void 0), p = () => {
    A.value = f.value.limitStart || 10, E.value = u.value;
  }, T = _(() => {
    var b;
    return o.value ? !1 : (b = f.value) != null && b.use ? i.value ? i.value.usePagination || !1 : !0 : !1;
  });
  return {
    changeLimit: (b) => {
      s(), r(), A.value = b, E.value = u.value, t("changeLimit", {
        offset: E.value,
        limit: b
      }), n();
    },
    changeOffset: (b) => {
      let I, v;
      at(b) ? (I = b.offset, v = b.reload) : (I = b, v = !0), v && (s(), r()), E.value = I, t("changeOffset", {
        offset: I,
        limit: A.value
      }), v && n();
    },
    initLocalVars: p,
    limit: A,
    offset: E,
    usePaginationLocal: T
  };
}
function eV({
  columnsOrdered: e = B([]),
  isMobile: t = B(!1),
  modelColumnsVisibleLocal: n = B({})
}) {
  return {
    allVisibleMobileColumns: _(() => t.value ? Lt(e.value, (s) => s.isRender !== !1 && n.value[s.id] !== !1) : [])
  };
}
function tV(e, { emit: t }, {
  checkVisibleColumns: n = () => {
  },
  isMultipleActionsActive: r = B(void 0),
  rowsLocalAll: s = _(() => []),
  rowsLocalLength: i = _(() => 0)
}) {
  const o = d(e, "id"), u = d(e, "multipleActions"), f = B(void 0), A = B({}), E = B(!1), p = _(() => u.value.length > 0), T = _(() => Ne(ce(f.value, "isHiddenCallback"))), S = _(() => Lt(s.value, (P, M) => A.value[M])), L = () => {
    A.value = {};
  }, b = () => {
    r.value = !1, f.value = void 0, E.value = !1, L();
  }, I = () => {
    if (window.isScrollDisabled)
      return;
    const P = qS({ tableId: o.value });
    Rr({
      selector: `#${P}`
    });
  }, v = ({ isActive: P, action: M } = {}) => {
    if (P) {
      r.value = !0, f.value = M, setTimeout(() => {
        n(), I();
      }), t("toggleMultipleActions", { isActive: P, action: M });
      return;
    }
    r.value ? b() : r.value = !0, setTimeout(() => {
      n(), I();
    }), t("toggleMultipleActions", { isActive: P, action: M });
  }, R = _(() => Ri(A.value)), g = _(() => i.value > 0 && i.value === R.value), D = _(() => R.value > 0);
  return {
    areAllRowsSelected: E,
    areAllVisibleRowsSelected: g,
    areSomeRowsSelected: D,
    closeMultipleActionsActive: b,
    currentMultipleActions: f,
    hasMultipleActions: p,
    selectedRows: S,
    selectedRowsIndexes: A,
    setEmptySelectedRowsIndexes: L,
    setSelectedRowsIndexes: ({ rowIndex: P, isAll: M }) => {
      if (M) {
        if (D.value)
          L();
        else {
          const O = {};
          T.value ? ur(i.value, (q) => {
            f.value.isHiddenCallback({
              row: s.value[q],
              rowIndex: q
            }) || (O[q] = !0);
          }) : ur(i.value, (q) => {
            O[q] = !0;
          }), A.value = O;
        }
        return;
      }
      A.value[P] ? delete A.value[P] : A.value[P] = !0;
    },
    toggleBtnAllRows: () => {
      E.value = !E.value, E.value && L();
    },
    toggleMultipleActionsActive: v
  };
}
function nV(e, { emit: t }, {
  aTableRef: n = B({}),
  tableGrandparentRef: r = B({})
}) {
  const {
    previewRef: s,
    removePreviewRef: i
  } = GS(), o = d(e, "previewBoxWidth"), u = 200, f = 50;
  let A, E = 0, p = 0, T = 0;
  const S = () => {
    p = n.value.getBoundingClientRect().left;
  }, L = ({ clientWidth: O }) => {
    E = O, A = O / 100 * f, S();
  }, b = ({ clientWidthLocal: O, clientXTableParent: q, previewBoxWidth: U }) => {
    const G = O - q - U;
    n.value.style.width = `${G}px`;
  }, I = ({ clientX: O = 0, previewRef: q, previewBoxWidth: U = 0 }) => {
    let G = U || E - O;
    G < u ? G = u : G > A && (G = A), b({ clientWidthLocal: E, clientXTableParent: p, previewBoxWidth: G }), q.style.width = `${G}px`;
  }, v = ({ previewRef: O }) => {
    ce(O, "style.removeProperty") && O.style.removeProperty("width"), ce(n, "value.style.removeProperty") && n.value.style.removeProperty("width");
  }, R = ({ previewRef: O }) => {
    E = document.documentElement.clientWidth, T = ce(r, "value.offsetWidth", 0), S(), I({
      previewRef: O,
      previewBoxWidth: o.value
    });
  }, g = ({ previewRef: O, isOpen: q }) => {
    q ? R({ previewRef: O }) : v({ previewRef: O });
  }, D = ({ previewRightWidth: O }) => {
    t("mouseupResizePreviewRight", { previewRightWidth: O });
  }, w = () => {
    R({
      previewRef: s.value
    });
  }, F = new ResizeObserver(
    El((O) => {
      const q = O[0].contentRect;
      T !== q.width && (T = q.width, w());
    }, 300)
  ), P = () => {
    F.observe(r.value);
  }, M = () => {
    F.unobserve(r.value);
  };
  return Ot(() => {
    i(), M();
  }), {
    addEventListenerWindowResize: P,
    mousedownResizePreviewRight: L,
    mousemoveResizePreviewRight: I,
    mouseupResizePreviewRight: D,
    removeEventListenerWindowResize: M,
    togglePreviewResize: g
  };
}
function rV(e, t, {
  aTableRef: n = B({}),
  isMobile: r = B(void 0),
  rowsLocalAll: s = _(() => []),
  tableGrandparentRef: i = B({})
}) {
  const {
    isDropdownGlobalOpen: o
  } = aS(), {
    addEventListenerWindowResize: u,
    mousedownResizePreviewRight: f,
    mousemoveResizePreviewRight: A,
    mouseupResizePreviewRight: E,
    removeEventListenerWindowResize: p,
    togglePreviewResize: T
  } = nV(e, t, {
    aTableRef: n,
    tableGrandparentRef: i
  }), S = d(e, "keyId"), L = d(e, "preview"), b = d(e, "id"), I = t.emit, v = B({}), R = B(void 0), g = B(void 0), D = _(() => !!L.value), w = ({ rowIndex: Le }) => {
    window.isScrollDisabled || setTimeout(() => {
      const _e = `#${b.value}_${Le}`;
      Rr({ selector: _e });
    });
  }, F = () => {
    window.isScrollDisabled || setTimeout(() => {
      const Le = `#${FS({ tableId: b.value })}`;
      Rr({ selector: Le });
    });
  }, P = _(() => L.value === "right" || r.value), M = _(() => !le(R.value)), O = () => {
    w({
      rowIndex: R.value
    }), I("togglePreview", {
      row: s.value[R.value],
      rowIndex: R.value,
      typeToggle: "close"
    }), g.value = R.value, R.value = void 0, p();
  }, q = () => {
    I("togglePreview", {
      row: s.value[R.value],
      rowIndex: R.value,
      typeToggle: "close"
    }), g.value = void 0, R.value = void 0, p();
  }, U = _(() => L.value === "down"), G = ({ rowIndex: Le, row: _e }) => {
    const ve = fu({ row: _e, rowIndex: Le, keyId: S.value });
    delete v.value[ve];
  }, te = () => {
    v.value = {};
  }, ne = () => {
    q(), te();
  }, oe = ({ rowIndex: Le, row: _e } = {}) => {
    P.value ? O() : U.value && G({ rowIndex: Le, row: _e });
  }, se = ({ rowIndex: Le }) => {
    !r.value && Be(R.value) && u(), I("togglePreview", {
      row: s.value[Le],
      rowIndex: Le,
      typeToggle: "open"
    }), R.value = Le, g.value = void 0, F();
  }, ie = ({ rowIndex: Le }) => {
    R.value === Le ? O() : se({ rowIndex: Le });
  }, me = ({ rowIndex: Le, row: _e }) => {
    const ve = fu({ row: _e, rowIndex: Le, keyId: S.value });
    v.value[ve] ? delete v.value[ve] : v.value[ve] = !0;
  };
  return {
    closePreview: oe,
    closePreviewAll: ne,
    hasPreview: D,
    isPreviewRightOpen: M,
    mousedownResizePreviewRight: f,
    mousemoveResizePreviewRight: A,
    mouseupResizePreviewRight: E,
    onTogglePreview: ({ row: Le, rowIndex: _e }) => {
      if (!o.value) {
        if (P.value) {
          ie({ rowIndex: _e });
          return;
        }
        U.value && me({ row: Le, rowIndex: _e });
      }
    },
    previewDownRowIds: v,
    previewRightRowIndex: R,
    previewRightRowIndexLast: g,
    togglePreviewResize: T
  };
}
function aV(e, {
  dataSorted: t = _(() => []),
  limit: n = B(0),
  offset: r = B(0),
  setEmptySelectedRowsIndexes: s = () => {
  },
  usePaginationLocal: i = _(() => !1)
}) {
  const o = d(e, "clearSelectedRowsOnDataChange"), u = d(e, "pagination"), f = d(e, "rowsCountRenderPerTick"), A = B([]), E = B([]);
  let p = !0, T = 0, S;
  const L = _(() => {
    if (n.value && !u.value.isOutside && i.value) {
      const M = r.value, O = M + n.value;
      return t.value.slice(M, O);
    }
    return t.value;
  }), b = _(() => L.value), I = _(() => b.value.length), v = _(() => !!I.value), R = () => {
    const M = T * f.value, O = M + f.value;
    Mn(L.value.slice(M, O), (q) => E.value.push(q)), T++;
  }, g = () => {
    S = setInterval(() => {
      T * f.value >= L.value.length ? clearInterval(S) : R();
    });
  }, D = () => {
    clearInterval(S);
  }, w = ({ row: M, rowIndex: O }) => {
    O > E.value.length - 1 || (E.value[O] = M);
  }, F = ({ row: M }) => {
    E.value.unshift(M);
  }, P = ({ index: M }) => {
    E.value.splice(M, 1);
  };
  return rt(L, (M) => {
    Dc(M, A.value) || (A.value = [...M], !p && o.value && s(), p = !1, E.value = [], T = 0, D(), f.value > 0 ? (R(), g()) : E.value = L.value);
  }, {
    immediate: !0,
    deep: !0
  }), {
    addRow: F,
    deleteRow: P,
    hasRows: v,
    rowsLocal: E,
    rowsLocalAll: b,
    rowsLocalLength: I,
    stopRenderRows: D,
    updateRow: w
  };
}
function sV(e, { emit: t }, {
  columnActionsWidth: n = _(() => 0),
  columnActionsWidthMin: r = _(() => 0),
  columnsOrdered: s = _(() => []),
  columnsScrollInvisible: i = B([]),
  indexFirstScrollInvisibleColumn: o = B(void 0),
  isMobile: u = B(!1),
  isMultipleActionsActive: f = B(void 0),
  modelColumnsVisibleLocal: A = B({}),
  modelIsTableWithoutScroll: E = B(!1),
  modelIsTableWithoutScrollComputed: p = _(() => !1)
}) {
  const T = d(e, "columnWidthDefault"), S = d(e, "isActionColumnVisible"), L = d(e, "isSimpleTable"), b = B(void 0), I = B(0), v = B(void 0);
  let R = !1;
  const g = 20, D = _(() => S.value ? r.value : 0), w = _(() => {
    const ne = f.value ? r.value : 0, oe = L.value ? 0 : g;
    return ne + oe;
  }), F = ({
    sumGrows: ne = 0,
    freeSpaceWidth: oe = 0
  }) => {
    ne > 0 ? I.value = oe / ne : I.value = 0;
  }, P = () => {
    if (le(o.value) || s.value.length < o.value)
      i.value = [];
    else {
      const ne = [];
      for (let oe = o.value; oe < s.value.length; oe++) {
        const se = s.value[oe];
        cl({
          column: se,
          modelColumnsVisibleLocal: A.value
        }) && ne.push(he(se));
      }
      i.value = ne;
    }
  }, M = () => {
    i.value = [], I.value = 0, o.value = 1e3, v.value = 0;
  }, O = () => {
    if (u.value || v.value === 0) {
      M();
      return;
    }
    if (Be(v.value))
      return;
    const ne = v.value - w.value - D.value, oe = v.value - w.value - n.value;
    let se = 0, ie = 0, me = 0, Ve = !1;
    if (z(s.value, (ve) => {
      if (!cl({
        column: ve,
        modelColumnsVisibleLocal: A.value
      })) {
        ie++;
        return;
      }
      const be = +ve.width || T.value;
      if (se + be > ne)
        return Ve = !0, !1;
      se += be, ie++, me += le(ve.grow) ? 1 : ve.grow;
    }), Ve && se > oe)
      for (let ve = ie - 1; ve >= 0; ve--) {
        ie--;
        const be = s.value[ie];
        if (!cl({
          column: be,
          modelColumnsVisibleLocal: A.value
        }))
          continue;
        const je = +be.width || T.value;
        if (se -= je, me -= le(be.grow) ? 1 : be.grow, se <= oe)
          break;
      }
    let Le = 0;
    const _e = Ve ? oe : ne;
    (p.value || ie === s.value.length) && (Le = _e - se), o.value = ie, F({
      sumGrows: me,
      freeSpaceWidth: Le
    }), P();
  }, q = ({ entries: ne, forceAdjust: oe }) => {
    const se = ne[0].contentRect;
    (oe || v.value > se.width + g || v.value < se.width - g) && (R || (R = !0, v.value = se.width, O(), R = !1));
  }, U = new ResizeObserver(
    El((ne) => {
      Be(v.value) ? q({ entries: ne, forceAdjust: !0 }) : q({ entries: ne });
    }, 300)
  ), G = (ne) => {
    ne ? (U.unobserve(b.value), M()) : (U.observe(b.value), E.value && O());
  }, te = (ne) => {
    E.value = ne, t("updateModelIsTableWithoutScroll", ne), E.value && O();
  };
  return Gr(() => {
    u.value || U.observe(b.value);
  }), Ot(() => {
    U.unobserve(b.value);
  }), rt(s, () => {
    O();
  }), {
    aTableRef: b,
    changeModelIsTableWithoutScroll: te,
    checkVisibleColumns: O,
    columnsVisibleAdditionalSpaceForOneGrow: I,
    onWatchMobileScrollControl: G
  };
}
function iV(e) {
  const t = d(e, "hasMobile"), n = d(e, "isActionColumnVisible"), r = d(e, "isActionColumnVisible"), s = d(e, "isColumnsDnd"), i = d(e, "isSimpleTable"), o = d(e, "modelIsTableWithoutScrollStart"), u = d(e, "rowActions"), f = B(void 0), A = () => {
    f.value = o.value;
  }, {
    isMobileWidth: E
  } = Tn(), p = _(() => i.value ? u.value && !!u.value.length && n.value : r.value), T = _(() => !!(r.value && !i.value)), S = _(() => !!(s.value && !i.value)), L = _(() => t.value ? !!E.value : !1), b = _(() => i.value ? !1 : f.value);
  return {
    initModelIsTableWithoutScroll: A,
    isActionColumnVisibleLocal: p,
    isActionIconVisibleLocal: T,
    isColumnsDndLocal: S,
    isMobile: L,
    modelIsTableWithoutScroll: f,
    modelIsTableWithoutScrollComputed: b
  };
}
function lV(e, {
  viewCurrent: t = _(() => ({}))
}) {
  const n = d(e, "data"), r = d(e, "isSortingOutside"), s = d(e, "modelSort"), i = d(e, "useAdditionalSorting"), o = B([]), u = _(() => i.value ? t.value ? t.value.useAdditionalSorting || !1 : !0 : !1), f = () => {
    ot(s.value) ? o.value = [s.value] : Te(s.value) && (o.value = he(s.value));
  }, A = _(() => {
    const p = {
      models: [],
      directions: []
    };
    return o.value.length && z(o.value, (T) => {
      let S = "asc", L = T;
      Pc(T, "-") && (S = "desc", L = T.slice(1)), p.models.push(L), p.directions.push(S);
    }), p;
  }), E = _(() => o.value.length && !r.value ? Nc(n.value || [], A.value.models, A.value.directions) : n.value || []);
  return rt(s, () => {
    f();
  }), {
    dataSorted: E,
    initModelSort: f,
    modelSortLocal: o,
    useAdditionalSortingLocal: u
  };
}
function oV(e, { emit: t }, {
  modelSortLocal: n = B([]),
  closePreviewAll: r = () => {
  }
}) {
  const s = d(e, "id"), i = d(e, "isSortingMultiColumn"), o = d(e, "sortingMultiColumnKey"), u = _(() => `${o.value}Key`), f = (T) => i.value && T[u.value], A = ({ sortId: T }) => {
    const S = n.value.indexOf(T);
    if (S !== -1) {
      n.value.splice(S, 1, `-${T}`);
      return;
    }
    const L = n.value.indexOf(`-${T}`);
    if (L !== -1) {
      n.value.splice(L, 1);
      return;
    }
    n.value.push(T);
  }, E = ({ sortId: T }) => {
    if (n.value.indexOf(T) !== -1) {
      n.value = [`-${T}`];
      return;
    }
    if (n.value.indexOf(`-${T}`) !== -1) {
      n.value = [];
      return;
    }
    n.value = [T];
  };
  return {
    changeModelSort: ({ sortId: T, $event: S, modelAll: L }) => {
      L ? n.value = L : f(S) ? A({ sortId: T }) : E({ sortId: T }), t("changeSorting", {
        modelSort: he(n.value)
      }), Rt.$emit("changeTableSorting", {
        modelSort: he(n.value),
        tableId: s.value
      }), r();
    }
  };
}
function uV(e, {
  isMobile: t = B(void 0),
  modelIsTableWithoutScrollComputed: n = _(() => {
  })
}) {
  const r = d(e, "rowActionsSticky");
  return {
    isRowActionsStickyLocal: _(() => !!(!t.value && r.value && !n.value))
  };
}
function _V(e, {
  countNotHiddenColumns: t = _(() => -1),
  isMobile: n = B(!1)
}) {
  const r = d(e, "id"), s = d(e, "isLabelVisible"), i = _(() => {
    const f = {};
    return n.value || (f.role = "table", f["aria-colcount"] = t.value), f;
  }), o = _(() => n.value ? "list" : "rowgroup"), u = _(() => {
    if (s.value)
      return $S({ tableId: r.value });
  });
  return {
    tableChildRole: o,
    tableLabelId: u,
    tableRoleAttributes: i
  };
}
function dV(e, { emit: t }, {
  modelColumnsVisibleLocal: n = B({}),
  checkVisibleColumns: r = () => {
  }
}) {
  return {
    changeModelColumnsVisible: (i) => {
      n.value = i, t("update:modelColumnsVisible", he(n.value)), r();
    }
  };
}
function cV(e) {
  const t = d(e, "texts");
  return {
    emptyText: _(() => Be(t.value.empty) ? "_A_TABLE_EMPTY_TEXT_" : t.value.empty)
  };
}
function fV() {
  const e = B([]), t = B(void 0), n = B(void 0), r = B({}), s = B(void 0), i = B(void 0);
  return {
    columnsScrollInvisible: e,
    indexFirstScrollInvisibleColumn: t,
    isMultipleActionsActive: n,
    modelColumnsVisibleLocal: r,
    tableGrandparentRef: s,
    tableRef: i
  };
}
function hV(e, { emit: t }, {
  closePreviewAll: n = () => {
  }
}) {
  const r = d(e, "views"), s = d(e, "modelFilters"), i = d(e, "modelView"), o = _(() => Fa(r.value, "id")), u = _(() => o.value[i.value]), f = _(() => r.value.length > 1), A = () => {
    if (f.value) {
      const T = Oc(r.value, ["active", !0]);
      let S = r.value[0].id;
      T && (S = T.id), t("updateView", {
        _modelView: S,
        view: o.value[S],
        modelFilters: s.value,
        init: !0
      });
    }
  }, E = (T) => {
    n(), t("updateView", {
      _modelView: T,
      view: o.value[T],
      modelFilters: s.value
    });
  }, p = _(() => !u.value || u.value.type === "table");
  return {
    hasViews: f,
    initViewCurrent: A,
    isViewTableVisible: p,
    updateViewCurrent: E,
    viewCurrent: u
  };
}
const qfe = {
  name: "ATable",
  props: {
    additionalSortingColumns: {
      type: Array,
      required: !1,
      default: () => []
    },
    clearSelectedRowsOnDataChange: {
      type: Boolean,
      required: !1,
      default: !0
    },
    columnActionsOnePlusDropdownOptions: {
      type: Object,
      required: !1,
      default: () => ({
        actionsClasses: ["a_btn a_btn_primary a_text_truncate"],
        btnGroupClass: "a_btn_group a_btn_group_table",
        hasDividerBeforeDropdown: !1,
        indexFirstDropdownAction: 1,
        indexFirstDropdownActionMobile: 1,
        minDropdownActions: 1
      })
    },
    columnActionsView: {
      type: String,
      required: !1,
      default: "dropdown",
      validator: (e) => ["onePlusDropdown", "onePlusDropdownEmptyPlace", "dropdown"].indexOf(e) !== -1
    },
    columnActionsWidth: {
      type: Number,
      required: !1,
      default: void 0
    },
    columnActionsWidthDefaults: {
      type: Object,
      required: !1,
      default: () => ({
        default: 170,
        min: 50,
        onePlusDropdown: 320,
        onePlusDropdownMin: 200,
        btnGroupMaxWidth: 180
      })
    },
    columnActionsWidthMin: {
      type: Number,
      required: !1,
      default: void 0
    },
    columns: {
      type: Array,
      required: !0
    },
    columnsDefaultValue: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    columnWidthDefault: {
      type: Number,
      required: !1,
      default: 250
    },
    countAllRows: {
      type: Number,
      required: !1,
      default: void 0
    },
    countVisibleMobileColumns: {
      type: Number,
      required: !1,
      default: 4,
      validator: (e) => e > 0
    },
    borderType: {
      type: String,
      required: !1,
      default: () => di.value.propsDefault.borderType,
      validator: (e) => ["bordered", "innerBordered"].indexOf(e) !== -1
    },
    data: {
      type: [Array, Object, Promise],
      required: !1
    },
    disabledActions: {
      type: Boolean,
      required: !1
    },
    disabledMultipleActions: {
      type: Boolean,
      required: !1
    },
    disabledOptions: {
      type: Boolean,
      required: !1
    },
    disabledPreview: {
      type: Boolean,
      required: !1
    },
    disabledPreviewRowCallback: {
      type: Function,
      required: !1
    },
    disabledRowActions: {
      type: Boolean,
      required: !1
    },
    disabledSort: {
      type: Boolean,
      required: !1
    },
    disabledViews: {
      type: Boolean,
      required: !1
    },
    extra: {
      type: Object,
      required: !1,
      default: void 0
    },
    hasMobile: {
      type: Boolean,
      required: !1,
      default: !0
    },
    hasScrollClass: {
      type: Boolean,
      required: !1,
      default: !0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_table")
    },
    isActionColumnVisible: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isActionIconVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isColumnsDnd: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isLabelVisible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isLoadingMultipleActions: {
      type: Boolean,
      required: !1
    },
    isLoadingOptions: {
      type: Boolean,
      required: !1
    },
    isLoadingTable: {
      type: Boolean,
      required: !1
    },
    isQuickSearch: {
      type: Boolean,
      required: !1
    },
    isSimpleTable: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSortingMultiColumn: {
      type: Boolean,
      required: !1,
      default: !1
    },
    isSortingOutside: {
      type: Boolean,
      required: !1
    },
    isTree: {
      type: Boolean,
      required: !1
    },
    isTreeCollapsible: {
      type: Boolean,
      required: !1,
      default: !0
    },
    isTreeOpened: {
      type: Boolean,
      required: !1
    },
    keyCountAllRowsInData: {
      type: String,
      required: !1,
      default: "count"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyChildren: {
      type: String,
      required: !1,
      default: "children"
    },
    label: {
      type: [String, Number],
      required: !1,
      default: ""
    },
    labelClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    labelTag: {
      type: String,
      required: !1,
      default: "h2"
    },
    modelColumnsOrdering: {
      type: Array,
      required: !1,
      default: () => []
    },
    modelColumnsVisible: {
      type: Object,
      required: !1,
      default: () => ({})
    },
    modelIsTableWithoutScrollStart: {
      type: Boolean,
      required: !1,
      default: !1
    },
    modelQuickSearch: {
      type: String,
      required: !1,
      default: ""
    },
    modelSort: {
      type: [String, Array],
      required: !1,
      default: () => []
    },
    modelView: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    multipleActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    offsetStart: {
      type: Number,
      required: !1,
      default: 0
    },
    pagination: {
      type: Object,
      required: !1,
      default: () => ({
        use: !1,
        maxPages: 5,
        limitsPerPage: [],
        limitStart: 10,
        disabled: !1,
        isOutside: !1,
        outside: !1,
        modes: {
          /*
           * perPage: inline / select
           * pagination: normal / short / loadMore
           */
          desktop: {
            pagination: {
              mode: "normal",
              position: 0
            },
            perPage: {
              mode: "inline",
              position: 1
            }
          },
          mobile: {
            pagination: {
              mode: "loadMore"
            }
          }
        }
      })
    },
    preview: {
      type: String,
      required: !1,
      default: void 0,
      validator: (e) => ["right", "down"].indexOf(e) !== -1
    },
    previewBoxWidth: {
      type: Number,
      required: !1,
      default: 300
    },
    previewStyles: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    rowActionsClass: {
      type: [String, Object],
      required: !1,
      default: void 0
    },
    rowActionsSticky: {
      type: Boolean,
      required: !1,
      default: !0
    },
    rowClass: {
      type: [String, Object, Function],
      required: !1,
      default: void 0
    },
    rowsCountRenderPerTick: {
      type: Number,
      required: !1,
      default: 25,
      validator: (e) => ha(e) && e >= 0
    },
    rowsFooter: {
      type: Array,
      required: !1,
      default: () => []
    },
    showCount: {
      type: Boolean,
      required: !1,
      default: !0
    },
    showFirstSortingSequenceNumber: {
      type: Boolean,
      required: !1,
      default: !1
    },
    sortingMultiColumnKey: {
      type: String,
      required: !1,
      default: "shift",
      validator: (e) => ["shift", "ctrl", "alt"].indexOf(e) !== -1
    },
    sortingSequenceNumberClass: {
      type: [String, Object],
      required: !1,
      default: "a_badge"
    },
    tableActions: {
      type: Array,
      required: !1,
      default: () => []
    },
    tableActionsIndexFirstDropdownAction: {
      type: Number,
      required: !1,
      default: -1
    },
    tableActionsIndexFirstDropdownActionMobile: {
      type: Number,
      required: !1,
      default: 0
    },
    texts: {
      type: Object,
      required: !1,
      default: () => ({
        empty: "_A_TABLE_EMPTY_TEXT_"
      })
    },
    useAdditionalSorting: {
      type: Boolean,
      required: !1,
      default: !0
    },
    useViewSlot: {
      type: Boolean,
      required: !1
    },
    valuesForColumnDefault: {
      type: Array,
      required: !1,
      default: () => [null, void 0, ""]
    },
    views: {
      type: Array,
      required: !1,
      default: () => []
    }
  },
  emits: [
    "changeColumnsOrdering",
    "changeColumnsVisible",
    "changeLimit",
    "changeOffset",
    "changeSorting",
    "mouseupResizePreviewRight",
    "initTable",
    "togglePreview",
    "toggleMultipleActions",
    "update:modelColumnsOrder",
    "update:modelColumnsVisible",
    "update:modelQuickSearch",
    "updateModelIsTableWithoutScroll",
    "updateView"
  ],
  provide() {
    return {
      changeModelColumnsVisible: this.changeModelColumnsVisible,
      columnActionsOnePlusDropdownOptions: _(() => this.columnActionsOnePlusDropdownOptions),
      columns: _(() => this.columns),
      columnsDefaultValue: _(() => this.columnsDefaultValue),
      columnWidthDefault: _(() => this.columnWidthDefault),
      isLoadingOptions: _(() => this.isLoadingOptions),
      isLoadingTable: _(() => this.isLoadingTable),
      keyId: _(() => this.keyId),
      rowActions: _(() => this.rowActions),
      tableId: _(() => this.id),
      valuesForColumnDefault: _(() => this.valuesForColumnDefault)
    };
  },
  setup(e, t) {
    const {
      initModelIsTableWithoutScroll: n,
      isActionColumnVisibleLocal: r,
      isActionIconVisibleLocal: s,
      isColumnsDndLocal: i,
      isMobile: o,
      modelIsTableWithoutScroll: u,
      modelIsTableWithoutScrollComputed: f
    } = iV(e), {
      countAllRowsLocal: A,
      totalRowsCount: E
    } = XH(e), {
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      isMultipleActionsActive: S,
      modelColumnsVisibleLocal: L,
      tableGrandparentRef: b,
      tableRef: I
    } = fV(), {
      scrollToTable: v,
      setFocusToTable: R
    } = ZH({
      tableRef: I
    }), {
      hasViews: g,
      initViewCurrent: D,
      isViewTableVisible: w,
      updateViewCurrent: F,
      viewCurrent: P
    } = hV(e, t, {
      closePreviewAll: Sr
    }), {
      dataSorted: M,
      initModelSort: O,
      modelSortLocal: q,
      useAdditionalSortingLocal: U
    } = lV(e, {
      viewCurrent: P
    }), {
      columnsOrderedFromSimpleTable: G,
      renderedGroupedColumns: te
    } = zH(e, {
      modelSort: q
    }), {
      columnIdsGroupByLocked: ne,
      columnsFilteredForRender: oe,
      columnsFilteredForRenderIndexesMapping: se,
      columnsOrdered: ie,
      countNotHiddenColumns: me
    } = KH(e, {
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      modelColumnsVisibleLocal: L,
      modelIsTableWithoutScrollComputed: f,
      columnsOrderedFromSimpleTable: G
    }), {
      changeLimit: Ve,
      changeOffset: Le,
      initLocalVars: _e,
      limit: ve,
      offset: be,
      usePaginationLocal: je
    } = QH(e, t, {
      closePreviewAll: Sr,
      scrollToTable: v,
      setFocusToTable: R,
      viewCurrent: P
    }), {
      addRow: Re,
      deleteRow: Z,
      hasRows: H,
      rowsLocal: X,
      rowsLocalAll: ae,
      rowsLocalLength: ye,
      stopRenderRows: Ce,
      updateRow: qe
    } = aV(e, {
      dataSorted: M,
      limit: ve,
      offset: be,
      setEmptySelectedRowsIndexes: Ts,
      usePaginationLocal: je
    }), {
      columnActionsBtnGroupMaxWidthStyle: Qe,
      columnActionsWidthLocal: $e,
      columnActionsWidthMinLocal: Fe,
      isColumnActionWide: it
    } = jH(e, {
      isMobile: o,
      rowsLocal: X
    }), {
      aTableRef: Ke,
      changeModelIsTableWithoutScroll: lt,
      checkVisibleColumns: et,
      columnsVisibleAdditionalSpaceForOneGrow: ht,
      onWatchMobileScrollControl: At
    } = sV(e, t, {
      columnActionsWidth: $e,
      columnActionsWidthMin: Fe,
      columnsOrdered: ie,
      columnsScrollInvisible: p,
      indexFirstScrollInvisibleColumn: T,
      isMobile: o,
      isMultipleActionsActive: S,
      modelColumnsVisibleLocal: L,
      modelIsTableWithoutScroll: u,
      modelIsTableWithoutScrollComputed: f
    }), {
      changeColumnsOrdering: xt,
      checkColumnsOrdering: tn
    } = YH(e, t, {
      checkVisibleColumns: et,
      columnIdsGroupByLocked: ne,
      columnsFilteredForRenderIndexesMapping: se
    }), {
      isRowActionsStickyLocal: Ar
    } = uV(e, {
      isMobile: o,
      modelIsTableWithoutScrollComputed: f
    }), {
      areAllRowsSelected: nn,
      areAllVisibleRowsSelected: Kn,
      areSomeRowsSelected: zn,
      closeMultipleActionsActive: On,
      currentMultipleActions: Dr,
      hasMultipleActions: Er,
      selectedRows: Nr,
      selectedRowsIndexes: Yn,
      setEmptySelectedRowsIndexes: Xn,
      setSelectedRowsIndexes: Zt,
      toggleBtnAllRows: mn,
      toggleMultipleActionsActive: pr
    } = tV(e, t, {
      checkVisibleColumns: et,
      isMultipleActionsActive: S,
      rowsLocalAll: ae,
      rowsLocalLength: ye
    }), {
      changeModelColumnsVisible: Tr
    } = dV(e, t, {
      modelColumnsVisibleLocal: L,
      checkVisibleColumns: et
    }), {
      closePreview: As,
      closePreviewAll: Br,
      hasPreview: Zn,
      isPreviewRightOpen: pa,
      onTogglePreview: Cn,
      mousedownResizePreviewRight: Es,
      mousemoveResizePreviewRight: ps,
      mouseupResizePreviewRight: yt,
      previewDownRowIds: Jn,
      previewRightRowIndex: Kr,
      previewRightRowIndexLast: Ta,
      togglePreviewResize: zr
    } = rV(e, t, {
      aTableRef: Ke,
      isMobile: o,
      rowsLocalAll: ae,
      tableGrandparentRef: b
    }), {
      tableChildRole: Sa,
      tableLabelId: wr,
      tableRoleAttributes: Ni
    } = _V(e, {
      countNotHiddenColumns: me,
      isMobile: o
    }), {
      allVisibleMobileColumns: rn
    } = eV({
      columnsOrdered: ie,
      isMobile: o,
      modelColumnsVisibleLocal: L
    }), {
      changeModelSort: ma
    } = oV(e, t, {
      modelSortLocal: q,
      closePreviewAll: Sr
    }), {
      initTable: Gs
    } = JH(e, t, {
      checkColumnsOrdering: tn,
      checkVisibleColumns: et,
      modelColumnsVisibleLocal: L
    }), {
      emptyText: js
    } = cV(e);
    function Sr() {
      Br();
    }
    function Ts() {
      Xn();
    }
    return rt(o, (_n) => {
      At(_n), Sr();
    }), rt(it, (_n, Ks) => {
      _n !== Ks && et();
    }), Je("changeModelIsTableWithoutScroll", lt), Je("changeModelSort", ma), Je("columnsOrdered", ie), Je("columnsFilteredForRender", oe), Je("columnsScrollInvisible", p), Je("columnsVisibleAdditionalSpaceForOneGrow", ht), Je("columnActionsWidthLocal", $e), Je("columnActionsWidthMinLocal", Fe), Je("currentMultipleActions", Dr), Je("hasPreview", Zn), Je("indexFirstScrollInvisibleColumn", T), Je("isActionColumnVisible", r), Je("isActionIconVisible", s), Je("isColumnsDnd", i), Je("isMobile", o), Je("isMultipleActionsActive", S), Je("modelIsTableWithoutScroll", f), Je("onTogglePreview", Cn), Je("previewRightRowIndex", Kr), Je("previewRightRowIndexLast", Ta), Je("rowsLocalAll", ae), Je("modelColumnsVisibleLocal", L), Je("changeColumnsOrdering", xt), _e(), n(), D(), Gs(), O(), {
      addRow: Re,
      allVisibleMobileColumns: rn,
      areAllRowsSelected: nn,
      areAllVisibleRowsSelected: Kn,
      areSomeRowsSelected: zn,
      aTableRef: Ke,
      changeLimit: Ve,
      changeModelColumnsVisible: Tr,
      changeOffset: Le,
      checkVisibleColumns: et,
      closeMultipleActionsActive: On,
      closePreview: As,
      closePreviewAll: Sr,
      columnActionsBtnGroupMaxWidthStyle: Qe,
      columnsFilteredForRender: oe,
      columnsOrdered: ie,
      countAllRowsLocal: A,
      deleteRow: Z,
      emptyText: js,
      hasMultipleActions: Er,
      hasRows: H,
      hasViews: g,
      isMobile: o,
      isMultipleActionsActive: S,
      isPreviewRightOpen: pa,
      isRowActionsStickyLocal: Ar,
      isViewTableVisible: w,
      limit: ve,
      modelColumnsVisibleLocal: L,
      modelIsTableWithoutScrollComputed: f,
      modelSortLocal: q,
      mousedownResizePreviewRight: Es,
      mousemoveResizePreviewRight: ps,
      mouseupResizePreviewRight: yt,
      offset: be,
      onTogglePreview: Cn,
      previewDownRowIds: Jn,
      previewRightRowIndex: Kr,
      renderedGroupedColumns: te,
      rowsLocal: X,
      rowsLocalAll: ae,
      rowsLocalLength: ye,
      selectedRows: Nr,
      selectedRowsIndexes: Yn,
      setEmptySelectedRowsIndexes: Ts,
      setSelectedRowsIndexes: Zt,
      stopRenderRows: Ce,
      tableChildRole: Sa,
      tableGrandparentRef: b,
      tableLabelId: wr,
      tableRef: I,
      tableRoleAttributes: Ni,
      toggleBtnAllRows: mn,
      toggleMultipleActionsActive: pr,
      togglePreviewResize: zr,
      totalRowsCount: E,
      updateRow: qe,
      updateViewCurrent: F,
      useAdditionalSortingLocal: U,
      usePaginationLocal: je,
      viewCurrent: P
    };
  },
  data() {
    return {
      resolved: void 0,
      error: void 0
    };
  },
  computed: {
    hasRowsFooter() {
      return this.rowsFooter.length > 0;
    }
  },
  methods: {
    updateModelQuickSearch(e) {
      this.$emit("update:modelQuickSearch", e);
    }
  },
  render() {
    return c("div", {
      ref: "tableGrandparentRef",
      class: ["a_table__grandparent", {
        a_table_mobile: this.isMobile,
        a_table__grandparent_without_scroll: !this.hasScrollClass
      }]
    }, [
      this.$slots.tablePrepend && this.$slots.tablePrepend({
        id: this.id
      }),
      c("div", {
        ref: "aTableRef",
        class: ["a_table__parent", {
          a_table__parent_scrollable: this.hasScrollClass && !this.modelIsTableWithoutScrollComputed
        }]
      }, [
        c(BH, {
          additionalSortingColumns: this.additionalSortingColumns,
          areAllRowsSelected: this.areAllRowsSelected,
          areSomeRowsSelected: this.areSomeRowsSelected,
          closeMultipleActionsActive: this.closeMultipleActionsActive,
          countAllRows: this.countAllRowsLocal,
          disabledActions: this.disabledActions,
          disabledMultipleActions: this.disabledMultipleActions,
          disabledSort: this.disabledSort,
          disabledViews: this.disabledViews,
          extra: this.extra,
          hasViews: this.hasViews,
          isLabelVisible: this.isLabelVisible,
          isLoadingMultipleActions: this.isLoadingMultipleActions,
          isQuickSearch: this.isQuickSearch,
          isSortingMultiColumn: this.isSortingMultiColumn,
          label: this.label,
          labelClass: this.labelClass,
          labelTag: this.labelTag,
          modelQuickSearch: this.modelQuickSearch,
          modelSort: this.modelSortLocal,
          modelView: this.modelView,
          multipleActions: this.multipleActions,
          selectedRows: this.selectedRows,
          showCount: this.showCount,
          tableActions: this.tableActions,
          tableActionsIndexFirstDropdownAction: this.tableActionsIndexFirstDropdownAction,
          tableActionsIndexFirstDropdownActionMobile: this.tableActionsIndexFirstDropdownActionMobile,
          useAdditionalSorting: this.useAdditionalSortingLocal,
          useViewSlot: this.useViewSlot,
          viewCurrent: this.viewCurrent,
          views: this.views,
          onUpdateViewCurrent: this.updateViewCurrent,
          onUpdateModelQuickSearch: this.updateModelQuickSearch,
          onToggleMultipleActionsActive: this.toggleMultipleActionsActive,
          onToggleBtnAllRows: this.toggleBtnAllRows
        }, this.$slots),
        this.$slots.topPanelAppend ? this.$slots.topPanelAppend() : "",
        this.isViewTableVisible && c("div", {
          ref: "tableRef",
          "aria-labelledby": this.isLabelVisible ? this.tableLabelId : void 0,
          class: [
            "a_table",
            {
              a_table_simple: this.isSimpleTable,
              a_table_bordered: this.borderType === "bordered",
              a_table_inner_bordered: this.borderType === "innerBordered"
            }
          ],
          ...this.tableRoleAttributes
        }, [
          this.isSimpleTable ? c(iH, {
            areAllRowsSelected: this.areAllRowsSelected,
            areAllVisibleRowsSelected: this.areAllVisibleRowsSelected,
            areSomeRowsSelected: this.areSomeRowsSelected,
            disabledOptions: this.disabledOptions,
            disabledSort: this.disabledSort,
            hasMultipleActions: this.hasMultipleActions,
            isRowActionsStickyLocal: this.isRowActionsStickyLocal,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSortLocal,
            rowsLocalLength: this.rowsLocalLength,
            showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
            sortingSequenceNumberClass: this.sortingSequenceNumberClass,
            onSetSelectedRowsIndexes: this.setSelectedRowsIndexes,
            columnsForRender: this.renderedGroupedColumns
          }) : c(cH, {
            areAllRowsSelected: this.areAllRowsSelected,
            areAllVisibleRowsSelected: this.areAllVisibleRowsSelected,
            areSomeRowsSelected: this.areSomeRowsSelected,
            disabledOptions: this.disabledOptions,
            disabledSort: this.disabledSort,
            hasMultipleActions: this.hasMultipleActions,
            isRowActionsStickyLocal: this.isRowActionsStickyLocal,
            isSortingMultiColumn: this.isSortingMultiColumn,
            modelSort: this.modelSortLocal,
            rowsLocalLength: this.rowsLocalLength,
            showFirstSortingSequenceNumber: this.showFirstSortingSequenceNumber,
            sortingSequenceNumberClass: this.sortingSequenceNumberClass,
            onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
          }),
          c("div", {
            class: "a_table__loading"
          }, [
            c(yS, {
              isLoading: this.isLoadingTable
            }, () => [
              c("div", {
                class: "a_table__body",
                role: this.tableChildRole
              }, {
                default: () => this.rowsLocal.map((e, t) => {
                  const n = fu({ row: e, rowIndex: t, keyId: this.keyId });
                  return c(ip, {
                    key: n,
                    allVisibleMobileColumns: this.allVisibleMobileColumns,
                    areAllRowsSelected: this.areAllRowsSelected,
                    columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
                    columnActionsView: this.columnActionsView,
                    countVisibleMobileColumns: this.countVisibleMobileColumns,
                    disabledPreview: this.disabledPreview,
                    disabledPreviewRowCallback: this.disabledPreviewRowCallback,
                    disabledRowActions: this.disabledRowActions,
                    isFooter: !1,
                    isPreviewDownOpen: this.previewDownRowIds[n],
                    isRowActionsStickyLocal: this.isRowActionsStickyLocal,
                    isTree: this.isTree,
                    isTreeCollapsible: this.isTreeCollapsible,
                    isTreeOpened: this.isTreeOpened,
                    keyChildren: this.keyChildren,
                    keyId: this.keyId,
                    level: 1,
                    row: e,
                    rowActionsClass: this.rowActionsClass,
                    rowClass: this.rowClass,
                    rowIndex: t,
                    rowsLength: this.rowsLocal.length,
                    selectedRowsIndexes: this.selectedRowsIndexes,
                    onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
                  }, {
                    get: (r) => [
                      c(Qd, {
                        data: r.row,
                        keyLabel: r.column.keyLabel,
                        filter: r.column.filter,
                        filterParameters: r.column.filterParameters,
                        defaultValue: r.column.defaultValue,
                        tag: r.column.filterTag || "div"
                      })
                    ],
                    ...this.$slots
                  });
                })
              }),
              this.isViewTableVisible && !this.hasRows && c(Ee, {
                class: "a_table__empty_text",
                text: this.emptyText
              }),
              this.hasRowsFooter && c("div", {
                class: "a_table__footer",
                role: this.tableChildRole
              }, this.rowsFooter.map((e, t) => {
                const n = fu({ row: e, rowIndex: t, keyId: this.keyId });
                return c(ip, {
                  key: n,
                  allVisibleMobileColumns: this.allVisibleMobileColumns,
                  areAllRowsSelected: this.areAllRowsSelected,
                  columnActionsBtnGroupMaxWidthStyle: this.columnActionsBtnGroupMaxWidthStyle,
                  columnActionsView: this.columnActionsView,
                  countVisibleMobileColumns: this.countVisibleMobileColumns,
                  disabledPreview: this.disabledPreview,
                  disabledPreviewRowCallback: this.disabledPreviewRowCallback,
                  disabledRowActions: this.disabledRowActions,
                  isFooter: !0,
                  isRowActionsStickyLocal: this.isRowActionsStickyLocal,
                  isTree: this.isTree,
                  isTreeCollapsible: this.isTreeCollapsible,
                  isTreeOpened: this.isTreeOpened,
                  keyChildren: this.keyChildren,
                  keyId: this.keyId,
                  level: 1,
                  row: e,
                  rowActionsClass: this.rowActionsClass,
                  rowClass: this.rowClass,
                  rowIndex: t,
                  rowsLength: this.rowsFooter.length,
                  selectedRowsIndexes: this.selectedRowsIndexes,
                  onSetSelectedRowsIndexes: this.setSelectedRowsIndexes
                }, {
                  get: (r) => [
                    c(Qd, {
                      data: r.row,
                      keyLabel: r.column.footerPath,
                      filter: r.column.footerFilter,
                      filterParameters: r.column.footerFilterParameters,
                      defaultValue: r.column.footerDefaultValue
                    })
                  ],
                  ...this.$slots
                });
              }))
            ])
          ])
        ]),
        !this.isViewTableVisible && this.viewCurrent && this.$slots[this.viewCurrent.type] && this.$slots[this.viewCurrent.type]({
          isLoading: this.isLoadingTable,
          rows: this.rowsLocalAll
        }),
        this.usePaginationLocal && c(Ak, {
          countAllRows: this.countAllRowsLocal,
          disabled: this.pagination.disabled,
          hasRows: this.hasRows,
          limit: this.limit,
          limitsPerPage: this.pagination.limitsPerPage,
          maxPages: this.pagination.maxPages,
          offset: this.offset,
          rowsLength: this.rowsLocalLength,
          totalRowsCount: this.totalRowsCount,
          "onUpdate:limit": this.changeLimit,
          "onUpdate:offset": this.changeOffset
        }),
        this.isPreviewRightOpen && c(SH, {
          countAllRows: this.countAllRowsLocal,
          isMobile: this.isMobile,
          isLoadingTable: this.isLoadingTable,
          limitPagination: this.limit,
          offsetPagination: this.offset,
          previewStyles: this.previewStyles,
          rowIndex: this.previewRightRowIndex,
          rows: this.rowsLocalAll,
          disabledPreviewRowCallback: this.disabledPreviewRowCallback,
          usePagination: !!this.usePaginationLocal,
          onClosePreview: this.closePreview,
          onMousedownResizePreviewRight: this.mousedownResizePreviewRight,
          onMousemoveResizePreviewRight: this.mousemoveResizePreviewRight,
          onMouseupResizePreviewRight: this.mouseupResizePreviewRight,
          onTogglePreview: this.onTogglePreview,
          onTogglePreviewResize: this.togglePreviewResize,
          "onUpdate:offset": this.changeOffset
        }, this.$slots)
      ])
    ]);
  }
};
function XS(e) {
  const t = d(e, "activeTabIdLocal"), n = d(e, "index"), r = d(e, "keyId"), s = d(e, "parentId"), i = d(e, "tab"), o = _(() => r.value ? ce(i.value, r.value) : n.value), u = _(() => t.value === o.value), f = _(() => `${s.value}_${n.value}`);
  return {
    idForContent: _(() => `${f.value}_content`),
    idLocal: f,
    isActive: u,
    tabIdLocal: o
  };
}
function AV(e) {
  const t = d(e, "tab"), n = d(e, "keyContent");
  return {
    contentLocal: _(() => {
      if (n.value)
        return ce(t.value, n.value);
    })
  };
}
const EV = {
  name: "ATabsContent",
  props: {
    activeTabIdLocal: {
      type: [String, Number],
      required: !0
    },
    index: {
      type: Number,
      required: !0
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    parentId: {
      type: String,
      required: !0
    },
    tab: {
      type: Object,
      required: !0
    }
  },
  setup(e) {
    const {
      idForContent: t,
      idLocal: n,
      isActive: r,
      tabIdLocal: s
    } = XS(e), {
      contentLocal: i
    } = AV(e);
    return {
      contentLocal: i,
      idForContent: t,
      idLocal: n,
      isActive: r,
      tabIdLocal: s
    };
  },
  render() {
    let e = "";
    return this.tab.slotContent && this.$slots[this.tab.slotContent] ? e = this.$slots[this.tab.slotContent]({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.$slots.content ? e = this.$slots.content({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.contentLocal && (e = c(Ee, {
      html: this.contentLocal
    })), c("div", {
      id: this.idForContent,
      "aria-labelledby": this.idLocal,
      class: [
        "a_tabs__content",
        {
          a_tabs__content_show: this.isActive
        }
      ],
      role: "tabpanel"
    }, [
      e
    ]);
  }
};
function pV({
  isDisabled: e = _(() => !1)
}) {
  return {
    tabindexLocal: _(() => e.value ? -1 : 0)
  };
}
function TV(e, { emit: t }, {
  isDisabled: n = _(() => !1),
  tabIdLocal: r = _(() => "")
}) {
  const s = d(e, "index"), i = d(e, "tab"), o = (f) => {
    n.value || t("changeTab", { $event: f, tab: i.value, tabId: r.value, index: s.value });
  };
  return {
    changeTabLocal: o,
    keydownTab: (f) => {
      (f.keyCode === J.enter || f.keyCode === J.space) && (o(f), f.stopPropagation(), f.preventDefault());
    }
  };
}
function SV(e) {
  const t = d(e, "disabled"), n = d(e, "keyDisabled"), r = d(e, "tab");
  return {
    isDisabled: _(() => {
      if (t.value || n.value && ce(r.value, n.value) === !0)
        return !0;
    })
  };
}
function mV(e) {
  const t = d(e, "tab"), n = d(e, "keyLabel");
  return {
    labelLocal: _(() => {
      if (n.value)
        return ce(t.value, n.value);
    })
  };
}
function LV(e) {
  const t = d(e, "tab"), n = d(e, "keyTitle");
  return {
    titleLocal: _(() => {
      if (n.value)
        return ce(t.value, n.value);
    })
  };
}
const bV = {
  name: "ATabsTab",
  props: {
    activeTabIdLocal: {
      type: [String, Number],
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1
    },
    index: {
      type: Number,
      required: !0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyTitle: {
      type: String,
      required: !1,
      default: "title"
    },
    parentId: {
      type: String,
      required: !0
    },
    tab: {
      type: Object,
      required: !0
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Gn.indexOf(e) !== -1
    }
  },
  emits: [
    "changeTab"
  ],
  setup(e, t) {
    const {
      idForContent: n,
      idLocal: r,
      isActive: s,
      tabIdLocal: i
    } = XS(e), {
      isDisabled: o
    } = SV(e), {
      tabindexLocal: u
    } = pV({
      isDisabled: o
    }), {
      changeTabLocal: f,
      keydownTab: A
    } = TV(e, t, {
      isDisabled: o,
      tabIdLocal: i
    }), {
      labelLocal: E
    } = mV(e), {
      titleLocal: p
    } = LV(e);
    return {
      changeTabLocal: f,
      idForContent: n,
      idLocal: r,
      isActive: s,
      isDisabled: o,
      keydownTab: A,
      labelLocal: E,
      tabindexLocal: u,
      tabIdLocal: i,
      titleLocal: p
    };
  },
  render() {
    let e = "";
    return this.tab.slotTab && this.$slots[this.tab.slotTab] ? e = this.$slots[this.tab.slotTab]({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.$slots.tab ? e = this.$slots.tab({
      activeTabId: this.activeTabIdLocal,
      contentId: this.idForContent,
      index: this.index,
      isActive: this.isActive,
      parentId: this.parentId,
      tab: this.tab,
      tabId: this.tabIdLocal
    }) : this.labelLocal && (e = c(Ee, {
      html: this.labelLocal,
      tag: "span"
    })), c("li", {
      class: [
        "a_tabs__list__item",
        this.tab.classLi
      ]
    }, [
      c(Ae, {
        id: this.idLocal,
        "aria-controls": this.idForContent,
        ariaDisabled: this.isDisabled,
        ariaSelected: this.isActive,
        class: [
          "a_tabs__list__link",
          this.tab.class,
          {
            a_tabs__list__link_active: this.isActive,
            a_tabs__list__link_disabled: this.isDisabled
          }
        ],
        classDefault: "",
        isTitleHtml: this.isTitleHtml,
        role: "tab",
        tabindex: this.tabindexLocal,
        tag: "a",
        titlePlacement: this.titlePlacement,
        type: "button",
        title: this.titleLocal,
        onClick: this.changeTabLocal,
        onKeydown: this.keydownTab
      }, () => [
        e
      ])
    ]);
  }
};
function IV(e, { emit: t }) {
  const n = d(e, "activeTabId"), r = d(e, "data"), s = d(e, "isChangeOutside"), i = d(e, "keyActive"), o = d(e, "keyId"), u = B(void 0), f = () => {
    le(n.value) || (u.value = n.value);
  };
  return {
    activeTabIdLocal: u,
    changeTab: ({ $event: p, tab: T, tabId: S, index: L }) => {
      u.value !== S && (s.value || (u.value = S), t("change", { $event: p, tab: T, tabId: S, index: L }));
    },
    initActiveTabIdLocal: () => {
      f(), le(u.value) && (i.value && (z(r.value, (p, T) => {
        if (ce(p, i.value))
          return o.value ? u.value = ce(p, o.value) || T : u.value = T, !1;
      }), !le(u.value)) || (o.value ? u.value = ce(r.value, `[0].${o.value}`) || 0 : u.value = 0));
    },
    setActiveTabIdLocal: f
  };
}
const $fe = {
  name: "ATabs",
  props: {
    activeTabId: {
      type: [String, Number],
      required: !1,
      default: void 0
    },
    data: {
      type: Array,
      required: !0
    },
    disabled: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    id: {
      type: String,
      required: !1,
      default: () => st("a_tabs_")
    },
    isBoxed: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isChangeOutside: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isTitleHtml: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    isVertical: {
      type: Boolean,
      required: !1,
      default: void 0
    },
    keyActive: {
      type: String,
      required: !1,
      default: "active"
    },
    keyContent: {
      type: String,
      required: !1,
      default: "content"
    },
    keyDisabled: {
      type: String,
      required: !1,
      default: void 0
    },
    keyId: {
      type: String,
      required: !1,
      default: void 0
    },
    keyLabel: {
      type: String,
      required: !1,
      default: "label"
    },
    keyTitle: {
      type: String,
      required: !1,
      default: "title"
    },
    titlePlacement: {
      type: String,
      required: !1,
      default: "top",
      validator: (e) => Gn.indexOf(e) !== -1
    }
  },
  emits: [
    "change"
  ],
  setup(e, t) {
    const n = d(e, "activeTabId"), {
      activeTabIdLocal: r,
      changeTab: s,
      initActiveTabIdLocal: i,
      setActiveTabIdLocal: o
    } = IV(e, t);
    return i(), rt(n, () => {
      o();
    }), {
      activeTabIdLocal: r,
      changeTab: s
    };
  },
  render() {
    return c("div", {
      id: this.id,
      class: ["a_tabs", {
        a_tabs_boxed: this.isBoxed,
        a_tabs_vertical: this.isVertical
      }]
    }, [
      c("div", {
        class: "a_tabs__box"
      }, [
        c("ul", {
          class: "a_tabs__list",
          role: "tablist"
        }, [
          this.data.map((e, t) => c(bV, {
            key: t,
            activeTabIdLocal: this.activeTabIdLocal,
            disabled: this.disabled,
            index: t,
            isTitleHtml: this.isTitleHtml,
            keyDisabled: this.keyDisabled,
            keyId: this.keyId,
            keyLabel: this.keyLabel,
            keyTitle: this.keyTitle,
            parentId: this.id,
            tab: e,
            titlePlacement: this.titlePlacement,
            onChangeTab: this.changeTab
          }, this.$slots))
        ])
      ]),
      c("div", {
        class: "a_tabs__contents"
      }, [
        this.data.map((e, t) => c(EV, {
          key: t,
          activeTabIdLocal: this.activeTabIdLocal,
          index: t,
          keyContent: this.keyContent,
          keyId: this.keyId,
          parentId: this.id,
          tab: e
        }, this.$slots))
      ])
    ]);
  }
};
function ZS(e, t) {
  return function() {
    return e.apply(t, arguments);
  };
}
const { toString: vV } = Object.prototype, { getPrototypeOf: cf } = Object, ku = /* @__PURE__ */ ((e) => (t) => {
  const n = vV.call(t);
  return e[n] || (e[n] = n.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null)), Cr = (e) => (e = e.toLowerCase(), (t) => ku(t) === e), Hu = (e) => (t) => typeof t === e, { isArray: Ci } = Array, vl = Hu("undefined");
function yV(e) {
  return e !== null && !vl(e) && e.constructor !== null && !vl(e.constructor) && kn(e.constructor.isBuffer) && e.constructor.isBuffer(e);
}
const JS = Cr("ArrayBuffer");
function gV(e) {
  let t;
  return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? t = ArrayBuffer.isView(e) : t = e && e.buffer && JS(e.buffer), t;
}
const RV = Hu("string"), kn = Hu("function"), QS = Hu("number"), Vu = (e) => e !== null && typeof e == "object", OV = (e) => e === !0 || e === !1, Yo = (e) => {
  if (ku(e) !== "object")
    return !1;
  const t = cf(e);
  return (t === null || t === Object.prototype || Object.getPrototypeOf(t) === null) && !(Symbol.toStringTag in e) && !(Symbol.iterator in e);
}, CV = Cr("Date"), DV = Cr("File"), NV = Cr("Blob"), BV = Cr("FileList"), wV = (e) => Vu(e) && kn(e.pipe), PV = (e) => {
  let t;
  return e && (typeof FormData == "function" && e instanceof FormData || kn(e.append) && ((t = ku(e)) === "formdata" || // detect form-data instance
  t === "object" && kn(e.toString) && e.toString() === "[object FormData]"));
}, xV = Cr("URLSearchParams"), [MV, FV, qV, $V] = ["ReadableStream", "Request", "Response", "Headers"].map(Cr), UV = (e) => e.trim ? e.trim() : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function $l(e, t, { allOwnKeys: n = !1 } = {}) {
  if (e === null || typeof e > "u")
    return;
  let r, s;
  if (typeof e != "object" && (e = [e]), Ci(e))
    for (r = 0, s = e.length; r < s; r++)
      t.call(null, e[r], r, e);
  else {
    const i = n ? Object.getOwnPropertyNames(e) : Object.keys(e), o = i.length;
    let u;
    for (r = 0; r < o; r++)
      u = i[r], t.call(null, e[u], u, e);
  }
}
function em(e, t) {
  t = t.toLowerCase();
  const n = Object.keys(e);
  let r = n.length, s;
  for (; r-- > 0; )
    if (s = n[r], t === s.toLowerCase())
      return s;
  return null;
}
const Bs = typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : global, tm = (e) => !vl(e) && e !== Bs;
function sc() {
  const { caseless: e } = tm(this) && this || {}, t = {}, n = (r, s) => {
    const i = e && em(t, s) || s;
    Yo(t[i]) && Yo(r) ? t[i] = sc(t[i], r) : Yo(r) ? t[i] = sc({}, r) : Ci(r) ? t[i] = r.slice() : t[i] = r;
  };
  for (let r = 0, s = arguments.length; r < s; r++)
    arguments[r] && $l(arguments[r], n);
  return t;
}
const kV = (e, t, n, { allOwnKeys: r } = {}) => ($l(t, (s, i) => {
  n && kn(s) ? e[i] = ZS(s, n) : e[i] = s;
}, { allOwnKeys: r }), e), HV = (e) => (e.charCodeAt(0) === 65279 && (e = e.slice(1)), e), VV = (e, t, n, r) => {
  e.prototype = Object.create(t.prototype, r), e.prototype.constructor = e, Object.defineProperty(e, "super", {
    value: t.prototype
  }), n && Object.assign(e.prototype, n);
}, WV = (e, t, n, r) => {
  let s, i, o;
  const u = {};
  if (t = t || {}, e == null) return t;
  do {
    for (s = Object.getOwnPropertyNames(e), i = s.length; i-- > 0; )
      o = s[i], (!r || r(o, e, t)) && !u[o] && (t[o] = e[o], u[o] = !0);
    e = n !== !1 && cf(e);
  } while (e && (!n || n(e, t)) && e !== Object.prototype);
  return t;
}, GV = (e, t, n) => {
  e = String(e), (n === void 0 || n > e.length) && (n = e.length), n -= t.length;
  const r = e.indexOf(t, n);
  return r !== -1 && r === n;
}, jV = (e) => {
  if (!e) return null;
  if (Ci(e)) return e;
  let t = e.length;
  if (!QS(t)) return null;
  const n = new Array(t);
  for (; t-- > 0; )
    n[t] = e[t];
  return n;
}, KV = /* @__PURE__ */ ((e) => (t) => e && t instanceof e)(typeof Uint8Array < "u" && cf(Uint8Array)), zV = (e, t) => {
  const r = (e && e[Symbol.iterator]).call(e);
  let s;
  for (; (s = r.next()) && !s.done; ) {
    const i = s.value;
    t.call(e, i[0], i[1]);
  }
}, YV = (e, t) => {
  let n;
  const r = [];
  for (; (n = e.exec(t)) !== null; )
    r.push(n);
  return r;
}, XV = Cr("HTMLFormElement"), ZV = (e) => e.toLowerCase().replace(
  /[-_\s]([a-z\d])(\w*)/g,
  function(n, r, s) {
    return r.toUpperCase() + s;
  }
), lp = (({ hasOwnProperty: e }) => (t, n) => e.call(t, n))(Object.prototype), JV = Cr("RegExp"), nm = (e, t) => {
  const n = Object.getOwnPropertyDescriptors(e), r = {};
  $l(n, (s, i) => {
    let o;
    (o = t(s, i, e)) !== !1 && (r[i] = o || s);
  }), Object.defineProperties(e, r);
}, QV = (e) => {
  nm(e, (t, n) => {
    if (kn(e) && ["arguments", "caller", "callee"].indexOf(n) !== -1)
      return !1;
    const r = e[n];
    if (kn(r)) {
      if (t.enumerable = !1, "writable" in t) {
        t.writable = !1;
        return;
      }
      t.set || (t.set = () => {
        throw Error("Can not rewrite read-only method '" + n + "'");
      });
    }
  });
}, eW = (e, t) => {
  const n = {}, r = (s) => {
    s.forEach((i) => {
      n[i] = !0;
    });
  };
  return Ci(e) ? r(e) : r(String(e).split(t)), n;
}, tW = () => {
}, nW = (e, t) => e != null && Number.isFinite(e = +e) ? e : t, Od = "abcdefghijklmnopqrstuvwxyz", op = "0123456789", rm = {
  DIGIT: op,
  ALPHA: Od,
  ALPHA_DIGIT: Od + Od.toUpperCase() + op
}, rW = (e = 16, t = rm.ALPHA_DIGIT) => {
  let n = "";
  const { length: r } = t;
  for (; e--; )
    n += t[Math.random() * r | 0];
  return n;
};
function aW(e) {
  return !!(e && kn(e.append) && e[Symbol.toStringTag] === "FormData" && e[Symbol.iterator]);
}
const sW = (e) => {
  const t = new Array(10), n = (r, s) => {
    if (Vu(r)) {
      if (t.indexOf(r) >= 0)
        return;
      if (!("toJSON" in r)) {
        t[s] = r;
        const i = Ci(r) ? [] : {};
        return $l(r, (o, u) => {
          const f = n(o, s + 1);
          !vl(f) && (i[u] = f);
        }), t[s] = void 0, i;
      }
    }
    return r;
  };
  return n(e, 0);
}, iW = Cr("AsyncFunction"), lW = (e) => e && (Vu(e) || kn(e)) && kn(e.then) && kn(e.catch), am = ((e, t) => e ? setImmediate : t ? ((n, r) => (Bs.addEventListener("message", ({ source: s, data: i }) => {
  s === Bs && i === n && r.length && r.shift()();
}, !1), (s) => {
  r.push(s), Bs.postMessage(n, "*");
}))(`axios@${Math.random()}`, []) : (n) => setTimeout(n))(
  typeof setImmediate == "function",
  kn(Bs.postMessage)
), oW = typeof queueMicrotask < "u" ? queueMicrotask.bind(Bs) : typeof process < "u" && process.nextTick || am, K = {
  isArray: Ci,
  isArrayBuffer: JS,
  isBuffer: yV,
  isFormData: PV,
  isArrayBufferView: gV,
  isString: RV,
  isNumber: QS,
  isBoolean: OV,
  isObject: Vu,
  isPlainObject: Yo,
  isReadableStream: MV,
  isRequest: FV,
  isResponse: qV,
  isHeaders: $V,
  isUndefined: vl,
  isDate: CV,
  isFile: DV,
  isBlob: NV,
  isRegExp: JV,
  isFunction: kn,
  isStream: wV,
  isURLSearchParams: xV,
  isTypedArray: KV,
  isFileList: BV,
  forEach: $l,
  merge: sc,
  extend: kV,
  trim: UV,
  stripBOM: HV,
  inherits: VV,
  toFlatObject: WV,
  kindOf: ku,
  kindOfTest: Cr,
  endsWith: GV,
  toArray: jV,
  forEachEntry: zV,
  matchAll: YV,
  isHTMLForm: XV,
  hasOwnProperty: lp,
  hasOwnProp: lp,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors: nm,
  freezeMethods: QV,
  toObjectSet: eW,
  toCamelCase: ZV,
  noop: tW,
  toFiniteNumber: nW,
  findKey: em,
  global: Bs,
  isContextDefined: tm,
  ALPHABET: rm,
  generateString: rW,
  isSpecCompliantForm: aW,
  toJSONObject: sW,
  isAsyncFn: iW,
  isThenable: lW,
  setImmediate: am,
  asap: oW
};
function He(e, t, n, r, s) {
  Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = e, this.name = "AxiosError", t && (this.code = t), n && (this.config = n), r && (this.request = r), s && (this.response = s, this.status = s.status ? s.status : null);
}
K.inherits(He, Error, {
  toJSON: function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: K.toJSONObject(this.config),
      code: this.code,
      status: this.status
    };
  }
});
const sm = He.prototype, im = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
].forEach((e) => {
  im[e] = { value: e };
});
Object.defineProperties(He, im);
Object.defineProperty(sm, "isAxiosError", { value: !0 });
He.from = (e, t, n, r, s, i) => {
  const o = Object.create(sm);
  return K.toFlatObject(e, o, function(f) {
    return f !== Error.prototype;
  }, (u) => u !== "isAxiosError"), He.call(o, e.message, t, n, r, s), o.cause = e, o.name = e.name, i && Object.assign(o, i), o;
};
const uW = null;
function ic(e) {
  return K.isPlainObject(e) || K.isArray(e);
}
function lm(e) {
  return K.endsWith(e, "[]") ? e.slice(0, -2) : e;
}
function up(e, t, n) {
  return e ? e.concat(t).map(function(s, i) {
    return s = lm(s), !n && i ? "[" + s + "]" : s;
  }).join(n ? "." : "") : t;
}
function _W(e) {
  return K.isArray(e) && !e.some(ic);
}
const dW = K.toFlatObject(K, {}, null, function(t) {
  return /^is[A-Z]/.test(t);
});
function Wu(e, t, n) {
  if (!K.isObject(e))
    throw new TypeError("target must be an object");
  t = t || new FormData(), n = K.toFlatObject(n, {
    metaTokens: !0,
    dots: !1,
    indexes: !1
  }, !1, function(b, I) {
    return !K.isUndefined(I[b]);
  });
  const r = n.metaTokens, s = n.visitor || E, i = n.dots, o = n.indexes, f = (n.Blob || typeof Blob < "u" && Blob) && K.isSpecCompliantForm(t);
  if (!K.isFunction(s))
    throw new TypeError("visitor must be a function");
  function A(L) {
    if (L === null) return "";
    if (K.isDate(L))
      return L.toISOString();
    if (!f && K.isBlob(L))
      throw new He("Blob is not supported. Use a Buffer instead.");
    return K.isArrayBuffer(L) || K.isTypedArray(L) ? f && typeof Blob == "function" ? new Blob([L]) : Buffer.from(L) : L;
  }
  function E(L, b, I) {
    let v = L;
    if (L && !I && typeof L == "object") {
      if (K.endsWith(b, "{}"))
        b = r ? b : b.slice(0, -2), L = JSON.stringify(L);
      else if (K.isArray(L) && _W(L) || (K.isFileList(L) || K.endsWith(b, "[]")) && (v = K.toArray(L)))
        return b = lm(b), v.forEach(function(g, D) {
          !(K.isUndefined(g) || g === null) && t.append(
            // eslint-disable-next-line no-nested-ternary
            o === !0 ? up([b], D, i) : o === null ? b : b + "[]",
            A(g)
          );
        }), !1;
    }
    return ic(L) ? !0 : (t.append(up(I, b, i), A(L)), !1);
  }
  const p = [], T = Object.assign(dW, {
    defaultVisitor: E,
    convertValue: A,
    isVisitable: ic
  });
  function S(L, b) {
    if (!K.isUndefined(L)) {
      if (p.indexOf(L) !== -1)
        throw Error("Circular reference detected in " + b.join("."));
      p.push(L), K.forEach(L, function(v, R) {
        (!(K.isUndefined(v) || v === null) && s.call(
          t,
          v,
          K.isString(R) ? R.trim() : R,
          b,
          T
        )) === !0 && S(v, b ? b.concat(R) : [R]);
      }), p.pop();
    }
  }
  if (!K.isObject(e))
    throw new TypeError("data must be an object");
  return S(e), t;
}
function _p(e) {
  const t = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0"
  };
  return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function(r) {
    return t[r];
  });
}
function ff(e, t) {
  this._pairs = [], e && Wu(e, this, t);
}
const om = ff.prototype;
om.append = function(t, n) {
  this._pairs.push([t, n]);
};
om.toString = function(t) {
  const n = t ? function(r) {
    return t.call(this, r, _p);
  } : _p;
  return this._pairs.map(function(s) {
    return n(s[0]) + "=" + n(s[1]);
  }, "").join("&");
};
function cW(e) {
  return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
function um(e, t, n) {
  if (!t)
    return e;
  const r = n && n.encode || cW;
  K.isFunction(n) && (n = {
    serialize: n
  });
  const s = n && n.serialize;
  let i;
  if (s ? i = s(t, n) : i = K.isURLSearchParams(t) ? t.toString() : new ff(t, n).toString(r), i) {
    const o = e.indexOf("#");
    o !== -1 && (e = e.slice(0, o)), e += (e.indexOf("?") === -1 ? "?" : "&") + i;
  }
  return e;
}
class dp {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(t, n, r) {
    return this.handlers.push({
      fulfilled: t,
      rejected: n,
      synchronous: r ? r.synchronous : !1,
      runWhen: r ? r.runWhen : null
    }), this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(t) {
    this.handlers[t] && (this.handlers[t] = null);
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    this.handlers && (this.handlers = []);
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(t) {
    K.forEach(this.handlers, function(r) {
      r !== null && t(r);
    });
  }
}
const _m = {
  silentJSONParsing: !0,
  forcedJSONParsing: !0,
  clarifyTimeoutError: !1
}, fW = typeof URLSearchParams < "u" ? URLSearchParams : ff, hW = typeof FormData < "u" ? FormData : null, AW = typeof Blob < "u" ? Blob : null, EW = {
  isBrowser: !0,
  classes: {
    URLSearchParams: fW,
    FormData: hW,
    Blob: AW
  },
  protocols: ["http", "https", "file", "blob", "url", "data"]
}, hf = typeof window < "u" && typeof document < "u", lc = typeof navigator == "object" && navigator || void 0, pW = hf && (!lc || ["ReactNative", "NativeScript", "NS"].indexOf(lc.product) < 0), TW = typeof WorkerGlobalScope < "u" && // eslint-disable-next-line no-undef
self instanceof WorkerGlobalScope && typeof self.importScripts == "function", SW = hf && window.location.href || "http://localhost", mW = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hasBrowserEnv: hf,
  hasStandardBrowserEnv: pW,
  hasStandardBrowserWebWorkerEnv: TW,
  navigator: lc,
  origin: SW
}, Symbol.toStringTag, { value: "Module" })), un = {
  ...mW,
  ...EW
};
function LW(e, t) {
  return Wu(e, new un.classes.URLSearchParams(), Object.assign({
    visitor: function(n, r, s, i) {
      return un.isNode && K.isBuffer(n) ? (this.append(r, n.toString("base64")), !1) : i.defaultVisitor.apply(this, arguments);
    }
  }, t));
}
function bW(e) {
  return K.matchAll(/\w+|\[(\w*)]/g, e).map((t) => t[0] === "[]" ? "" : t[1] || t[0]);
}
function IW(e) {
  const t = {}, n = Object.keys(e);
  let r;
  const s = n.length;
  let i;
  for (r = 0; r < s; r++)
    i = n[r], t[i] = e[i];
  return t;
}
function dm(e) {
  function t(n, r, s, i) {
    let o = n[i++];
    if (o === "__proto__") return !0;
    const u = Number.isFinite(+o), f = i >= n.length;
    return o = !o && K.isArray(s) ? s.length : o, f ? (K.hasOwnProp(s, o) ? s[o] = [s[o], r] : s[o] = r, !u) : ((!s[o] || !K.isObject(s[o])) && (s[o] = []), t(n, r, s[o], i) && K.isArray(s[o]) && (s[o] = IW(s[o])), !u);
  }
  if (K.isFormData(e) && K.isFunction(e.entries)) {
    const n = {};
    return K.forEachEntry(e, (r, s) => {
      t(bW(r), s, n, 0);
    }), n;
  }
  return null;
}
function vW(e, t, n) {
  if (K.isString(e))
    try {
      return (t || JSON.parse)(e), K.trim(e);
    } catch (r) {
      if (r.name !== "SyntaxError")
        throw r;
    }
  return (0, JSON.stringify)(e);
}
const Ul = {
  transitional: _m,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [function(t, n) {
    const r = n.getContentType() || "", s = r.indexOf("application/json") > -1, i = K.isObject(t);
    if (i && K.isHTMLForm(t) && (t = new FormData(t)), K.isFormData(t))
      return s ? JSON.stringify(dm(t)) : t;
    if (K.isArrayBuffer(t) || K.isBuffer(t) || K.isStream(t) || K.isFile(t) || K.isBlob(t) || K.isReadableStream(t))
      return t;
    if (K.isArrayBufferView(t))
      return t.buffer;
    if (K.isURLSearchParams(t))
      return n.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1), t.toString();
    let u;
    if (i) {
      if (r.indexOf("application/x-www-form-urlencoded") > -1)
        return LW(t, this.formSerializer).toString();
      if ((u = K.isFileList(t)) || r.indexOf("multipart/form-data") > -1) {
        const f = this.env && this.env.FormData;
        return Wu(
          u ? { "files[]": t } : t,
          f && new f(),
          this.formSerializer
        );
      }
    }
    return i || s ? (n.setContentType("application/json", !1), vW(t)) : t;
  }],
  transformResponse: [function(t) {
    const n = this.transitional || Ul.transitional, r = n && n.forcedJSONParsing, s = this.responseType === "json";
    if (K.isResponse(t) || K.isReadableStream(t))
      return t;
    if (t && K.isString(t) && (r && !this.responseType || s)) {
      const o = !(n && n.silentJSONParsing) && s;
      try {
        return JSON.parse(t);
      } catch (u) {
        if (o)
          throw u.name === "SyntaxError" ? He.from(u, He.ERR_BAD_RESPONSE, this, null, this.response) : u;
      }
    }
    return t;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: un.classes.FormData,
    Blob: un.classes.Blob
  },
  validateStatus: function(t) {
    return t >= 200 && t < 300;
  },
  headers: {
    common: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": void 0
    }
  }
};
K.forEach(["delete", "get", "head", "post", "put", "patch"], (e) => {
  Ul.headers[e] = {};
});
const yW = K.toObjectSet([
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
]), gW = (e) => {
  const t = {};
  let n, r, s;
  return e && e.split(`
`).forEach(function(o) {
    s = o.indexOf(":"), n = o.substring(0, s).trim().toLowerCase(), r = o.substring(s + 1).trim(), !(!n || t[n] && yW[n]) && (n === "set-cookie" ? t[n] ? t[n].push(r) : t[n] = [r] : t[n] = t[n] ? t[n] + ", " + r : r);
  }), t;
}, cp = Symbol("internals");
function al(e) {
  return e && String(e).trim().toLowerCase();
}
function Xo(e) {
  return e === !1 || e == null ? e : K.isArray(e) ? e.map(Xo) : String(e);
}
function RW(e) {
  const t = /* @__PURE__ */ Object.create(null), n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let r;
  for (; r = n.exec(e); )
    t[r[1]] = r[2];
  return t;
}
const OW = (e) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim());
function Cd(e, t, n, r, s) {
  if (K.isFunction(r))
    return r.call(this, t, n);
  if (s && (t = n), !!K.isString(t)) {
    if (K.isString(r))
      return t.indexOf(r) !== -1;
    if (K.isRegExp(r))
      return r.test(t);
  }
}
function CW(e) {
  return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (t, n, r) => n.toUpperCase() + r);
}
function DW(e, t) {
  const n = K.toCamelCase(" " + t);
  ["get", "set", "has"].forEach((r) => {
    Object.defineProperty(e, r + n, {
      value: function(s, i, o) {
        return this[r].call(this, t, s, i, o);
      },
      configurable: !0
    });
  });
}
class gn {
  constructor(t) {
    t && this.set(t);
  }
  set(t, n, r) {
    const s = this;
    function i(u, f, A) {
      const E = al(f);
      if (!E)
        throw new Error("header name must be a non-empty string");
      const p = K.findKey(s, E);
      (!p || s[p] === void 0 || A === !0 || A === void 0 && s[p] !== !1) && (s[p || f] = Xo(u));
    }
    const o = (u, f) => K.forEach(u, (A, E) => i(A, E, f));
    if (K.isPlainObject(t) || t instanceof this.constructor)
      o(t, n);
    else if (K.isString(t) && (t = t.trim()) && !OW(t))
      o(gW(t), n);
    else if (K.isHeaders(t))
      for (const [u, f] of t.entries())
        i(f, u, r);
    else
      t != null && i(n, t, r);
    return this;
  }
  get(t, n) {
    if (t = al(t), t) {
      const r = K.findKey(this, t);
      if (r) {
        const s = this[r];
        if (!n)
          return s;
        if (n === !0)
          return RW(s);
        if (K.isFunction(n))
          return n.call(this, s, r);
        if (K.isRegExp(n))
          return n.exec(s);
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(t, n) {
    if (t = al(t), t) {
      const r = K.findKey(this, t);
      return !!(r && this[r] !== void 0 && (!n || Cd(this, this[r], r, n)));
    }
    return !1;
  }
  delete(t, n) {
    const r = this;
    let s = !1;
    function i(o) {
      if (o = al(o), o) {
        const u = K.findKey(r, o);
        u && (!n || Cd(r, r[u], u, n)) && (delete r[u], s = !0);
      }
    }
    return K.isArray(t) ? t.forEach(i) : i(t), s;
  }
  clear(t) {
    const n = Object.keys(this);
    let r = n.length, s = !1;
    for (; r--; ) {
      const i = n[r];
      (!t || Cd(this, this[i], i, t, !0)) && (delete this[i], s = !0);
    }
    return s;
  }
  normalize(t) {
    const n = this, r = {};
    return K.forEach(this, (s, i) => {
      const o = K.findKey(r, i);
      if (o) {
        n[o] = Xo(s), delete n[i];
        return;
      }
      const u = t ? CW(i) : String(i).trim();
      u !== i && delete n[i], n[u] = Xo(s), r[u] = !0;
    }), this;
  }
  concat(...t) {
    return this.constructor.concat(this, ...t);
  }
  toJSON(t) {
    const n = /* @__PURE__ */ Object.create(null);
    return K.forEach(this, (r, s) => {
      r != null && r !== !1 && (n[s] = t && K.isArray(r) ? r.join(", ") : r);
    }), n;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([t, n]) => t + ": " + n).join(`
`);
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(t) {
    return t instanceof this ? t : new this(t);
  }
  static concat(t, ...n) {
    const r = new this(t);
    return n.forEach((s) => r.set(s)), r;
  }
  static accessor(t) {
    const r = (this[cp] = this[cp] = {
      accessors: {}
    }).accessors, s = this.prototype;
    function i(o) {
      const u = al(o);
      r[u] || (DW(s, o), r[u] = !0);
    }
    return K.isArray(t) ? t.forEach(i) : i(t), this;
  }
}
gn.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
K.reduceDescriptors(gn.prototype, ({ value: e }, t) => {
  let n = t[0].toUpperCase() + t.slice(1);
  return {
    get: () => e,
    set(r) {
      this[n] = r;
    }
  };
});
K.freezeMethods(gn);
function Dd(e, t) {
  const n = this || Ul, r = t || n, s = gn.from(r.headers);
  let i = r.data;
  return K.forEach(e, function(u) {
    i = u.call(n, i, s.normalize(), t ? t.status : void 0);
  }), s.normalize(), i;
}
function cm(e) {
  return !!(e && e.__CANCEL__);
}
function Di(e, t, n) {
  He.call(this, e ?? "canceled", He.ERR_CANCELED, t, n), this.name = "CanceledError";
}
K.inherits(Di, He, {
  __CANCEL__: !0
});
function fm(e, t, n) {
  const r = n.config.validateStatus;
  !n.status || !r || r(n.status) ? e(n) : t(new He(
    "Request failed with status code " + n.status,
    [He.ERR_BAD_REQUEST, He.ERR_BAD_RESPONSE][Math.floor(n.status / 100) - 4],
    n.config,
    n.request,
    n
  ));
}
function NW(e) {
  const t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
  return t && t[1] || "";
}
function BW(e, t) {
  e = e || 10;
  const n = new Array(e), r = new Array(e);
  let s = 0, i = 0, o;
  return t = t !== void 0 ? t : 1e3, function(f) {
    const A = Date.now(), E = r[i];
    o || (o = A), n[s] = f, r[s] = A;
    let p = i, T = 0;
    for (; p !== s; )
      T += n[p++], p = p % e;
    if (s = (s + 1) % e, s === i && (i = (i + 1) % e), A - o < t)
      return;
    const S = E && A - E;
    return S ? Math.round(T * 1e3 / S) : void 0;
  };
}
function wW(e, t) {
  let n = 0, r = 1e3 / t, s, i;
  const o = (A, E = Date.now()) => {
    n = E, s = null, i && (clearTimeout(i), i = null), e.apply(null, A);
  };
  return [(...A) => {
    const E = Date.now(), p = E - n;
    p >= r ? o(A, E) : (s = A, i || (i = setTimeout(() => {
      i = null, o(s);
    }, r - p)));
  }, () => s && o(s)];
}
const hu = (e, t, n = 3) => {
  let r = 0;
  const s = BW(50, 250);
  return wW((i) => {
    const o = i.loaded, u = i.lengthComputable ? i.total : void 0, f = o - r, A = s(f), E = o <= u;
    r = o;
    const p = {
      loaded: o,
      total: u,
      progress: u ? o / u : void 0,
      bytes: f,
      rate: A || void 0,
      estimated: A && u && E ? (u - o) / A : void 0,
      event: i,
      lengthComputable: u != null,
      [t ? "download" : "upload"]: !0
    };
    e(p);
  }, n);
}, fp = (e, t) => {
  const n = e != null;
  return [(r) => t[0]({
    lengthComputable: n,
    total: e,
    loaded: r
  }), t[1]];
}, hp = (e) => (...t) => K.asap(() => e(...t)), PW = un.hasStandardBrowserEnv ? /* @__PURE__ */ ((e, t) => (n) => (n = new URL(n, un.origin), e.protocol === n.protocol && e.host === n.host && (t || e.port === n.port)))(
  new URL(un.origin),
  un.navigator && /(msie|trident)/i.test(un.navigator.userAgent)
) : () => !0, xW = un.hasStandardBrowserEnv ? (
  // Standard browser envs support document.cookie
  {
    write(e, t, n, r, s, i) {
      const o = [e + "=" + encodeURIComponent(t)];
      K.isNumber(n) && o.push("expires=" + new Date(n).toGMTString()), K.isString(r) && o.push("path=" + r), K.isString(s) && o.push("domain=" + s), i === !0 && o.push("secure"), document.cookie = o.join("; ");
    },
    read(e) {
      const t = document.cookie.match(new RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
      return t ? decodeURIComponent(t[3]) : null;
    },
    remove(e) {
      this.write(e, "", Date.now() - 864e5);
    }
  }
) : (
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {
    },
    read() {
      return null;
    },
    remove() {
    }
  }
);
function MW(e) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(e);
}
function FW(e, t) {
  return t ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "") : e;
}
function hm(e, t) {
  return e && !MW(t) ? FW(e, t) : t;
}
const Ap = (e) => e instanceof gn ? { ...e } : e;
function $s(e, t) {
  t = t || {};
  const n = {};
  function r(A, E, p, T) {
    return K.isPlainObject(A) && K.isPlainObject(E) ? K.merge.call({ caseless: T }, A, E) : K.isPlainObject(E) ? K.merge({}, E) : K.isArray(E) ? E.slice() : E;
  }
  function s(A, E, p, T) {
    if (K.isUndefined(E)) {
      if (!K.isUndefined(A))
        return r(void 0, A, p, T);
    } else return r(A, E, p, T);
  }
  function i(A, E) {
    if (!K.isUndefined(E))
      return r(void 0, E);
  }
  function o(A, E) {
    if (K.isUndefined(E)) {
      if (!K.isUndefined(A))
        return r(void 0, A);
    } else return r(void 0, E);
  }
  function u(A, E, p) {
    if (p in t)
      return r(A, E);
    if (p in e)
      return r(void 0, A);
  }
  const f = {
    url: i,
    method: i,
    data: i,
    baseURL: o,
    transformRequest: o,
    transformResponse: o,
    paramsSerializer: o,
    timeout: o,
    timeoutMessage: o,
    withCredentials: o,
    withXSRFToken: o,
    adapter: o,
    responseType: o,
    xsrfCookieName: o,
    xsrfHeaderName: o,
    onUploadProgress: o,
    onDownloadProgress: o,
    decompress: o,
    maxContentLength: o,
    maxBodyLength: o,
    beforeRedirect: o,
    transport: o,
    httpAgent: o,
    httpsAgent: o,
    cancelToken: o,
    socketPath: o,
    responseEncoding: o,
    validateStatus: u,
    headers: (A, E, p) => s(Ap(A), Ap(E), p, !0)
  };
  return K.forEach(Object.keys(Object.assign({}, e, t)), function(E) {
    const p = f[E] || s, T = p(e[E], t[E], E);
    K.isUndefined(T) && p !== u || (n[E] = T);
  }), n;
}
const Am = (e) => {
  const t = $s({}, e);
  let { data: n, withXSRFToken: r, xsrfHeaderName: s, xsrfCookieName: i, headers: o, auth: u } = t;
  t.headers = o = gn.from(o), t.url = um(hm(t.baseURL, t.url), e.params, e.paramsSerializer), u && o.set(
    "Authorization",
    "Basic " + btoa((u.username || "") + ":" + (u.password ? unescape(encodeURIComponent(u.password)) : ""))
  );
  let f;
  if (K.isFormData(n)) {
    if (un.hasStandardBrowserEnv || un.hasStandardBrowserWebWorkerEnv)
      o.setContentType(void 0);
    else if ((f = o.getContentType()) !== !1) {
      const [A, ...E] = f ? f.split(";").map((p) => p.trim()).filter(Boolean) : [];
      o.setContentType([A || "multipart/form-data", ...E].join("; "));
    }
  }
  if (un.hasStandardBrowserEnv && (r && K.isFunction(r) && (r = r(t)), r || r !== !1 && PW(t.url))) {
    const A = s && i && xW.read(i);
    A && o.set(s, A);
  }
  return t;
}, qW = typeof XMLHttpRequest < "u", $W = qW && function(e) {
  return new Promise(function(n, r) {
    const s = Am(e);
    let i = s.data;
    const o = gn.from(s.headers).normalize();
    let { responseType: u, onUploadProgress: f, onDownloadProgress: A } = s, E, p, T, S, L;
    function b() {
      S && S(), L && L(), s.cancelToken && s.cancelToken.unsubscribe(E), s.signal && s.signal.removeEventListener("abort", E);
    }
    let I = new XMLHttpRequest();
    I.open(s.method.toUpperCase(), s.url, !0), I.timeout = s.timeout;
    function v() {
      if (!I)
        return;
      const g = gn.from(
        "getAllResponseHeaders" in I && I.getAllResponseHeaders()
      ), w = {
        data: !u || u === "text" || u === "json" ? I.responseText : I.response,
        status: I.status,
        statusText: I.statusText,
        headers: g,
        config: e,
        request: I
      };
      fm(function(P) {
        n(P), b();
      }, function(P) {
        r(P), b();
      }, w), I = null;
    }
    "onloadend" in I ? I.onloadend = v : I.onreadystatechange = function() {
      !I || I.readyState !== 4 || I.status === 0 && !(I.responseURL && I.responseURL.indexOf("file:") === 0) || setTimeout(v);
    }, I.onabort = function() {
      I && (r(new He("Request aborted", He.ECONNABORTED, e, I)), I = null);
    }, I.onerror = function() {
      r(new He("Network Error", He.ERR_NETWORK, e, I)), I = null;
    }, I.ontimeout = function() {
      let D = s.timeout ? "timeout of " + s.timeout + "ms exceeded" : "timeout exceeded";
      const w = s.transitional || _m;
      s.timeoutErrorMessage && (D = s.timeoutErrorMessage), r(new He(
        D,
        w.clarifyTimeoutError ? He.ETIMEDOUT : He.ECONNABORTED,
        e,
        I
      )), I = null;
    }, i === void 0 && o.setContentType(null), "setRequestHeader" in I && K.forEach(o.toJSON(), function(D, w) {
      I.setRequestHeader(w, D);
    }), K.isUndefined(s.withCredentials) || (I.withCredentials = !!s.withCredentials), u && u !== "json" && (I.responseType = s.responseType), A && ([T, L] = hu(A, !0), I.addEventListener("progress", T)), f && I.upload && ([p, S] = hu(f), I.upload.addEventListener("progress", p), I.upload.addEventListener("loadend", S)), (s.cancelToken || s.signal) && (E = (g) => {
      I && (r(!g || g.type ? new Di(null, e, I) : g), I.abort(), I = null);
    }, s.cancelToken && s.cancelToken.subscribe(E), s.signal && (s.signal.aborted ? E() : s.signal.addEventListener("abort", E)));
    const R = NW(s.url);
    if (R && un.protocols.indexOf(R) === -1) {
      r(new He("Unsupported protocol " + R + ":", He.ERR_BAD_REQUEST, e));
      return;
    }
    I.send(i || null);
  });
}, UW = (e, t) => {
  const { length: n } = e = e ? e.filter(Boolean) : [];
  if (t || n) {
    let r = new AbortController(), s;
    const i = function(A) {
      if (!s) {
        s = !0, u();
        const E = A instanceof Error ? A : this.reason;
        r.abort(E instanceof He ? E : new Di(E instanceof Error ? E.message : E));
      }
    };
    let o = t && setTimeout(() => {
      o = null, i(new He(`timeout ${t} of ms exceeded`, He.ETIMEDOUT));
    }, t);
    const u = () => {
      e && (o && clearTimeout(o), o = null, e.forEach((A) => {
        A.unsubscribe ? A.unsubscribe(i) : A.removeEventListener("abort", i);
      }), e = null);
    };
    e.forEach((A) => A.addEventListener("abort", i));
    const { signal: f } = r;
    return f.unsubscribe = () => K.asap(u), f;
  }
}, kW = function* (e, t) {
  let n = e.byteLength;
  if (n < t) {
    yield e;
    return;
  }
  let r = 0, s;
  for (; r < n; )
    s = r + t, yield e.slice(r, s), r = s;
}, HW = async function* (e, t) {
  for await (const n of VW(e))
    yield* kW(n, t);
}, VW = async function* (e) {
  if (e[Symbol.asyncIterator]) {
    yield* e;
    return;
  }
  const t = e.getReader();
  try {
    for (; ; ) {
      const { done: n, value: r } = await t.read();
      if (n)
        break;
      yield r;
    }
  } finally {
    await t.cancel();
  }
}, Ep = (e, t, n, r) => {
  const s = HW(e, t);
  let i = 0, o, u = (f) => {
    o || (o = !0, r && r(f));
  };
  return new ReadableStream({
    async pull(f) {
      try {
        const { done: A, value: E } = await s.next();
        if (A) {
          u(), f.close();
          return;
        }
        let p = E.byteLength;
        if (n) {
          let T = i += p;
          n(T);
        }
        f.enqueue(new Uint8Array(E));
      } catch (A) {
        throw u(A), A;
      }
    },
    cancel(f) {
      return u(f), s.return();
    }
  }, {
    highWaterMark: 2
  });
}, Gu = typeof fetch == "function" && typeof Request == "function" && typeof Response == "function", Em = Gu && typeof ReadableStream == "function", WW = Gu && (typeof TextEncoder == "function" ? /* @__PURE__ */ ((e) => (t) => e.encode(t))(new TextEncoder()) : async (e) => new Uint8Array(await new Response(e).arrayBuffer())), pm = (e, ...t) => {
  try {
    return !!e(...t);
  } catch {
    return !1;
  }
}, GW = Em && pm(() => {
  let e = !1;
  const t = new Request(un.origin, {
    body: new ReadableStream(),
    method: "POST",
    get duplex() {
      return e = !0, "half";
    }
  }).headers.has("Content-Type");
  return e && !t;
}), pp = 64 * 1024, oc = Em && pm(() => K.isReadableStream(new Response("").body)), Au = {
  stream: oc && ((e) => e.body)
};
Gu && ((e) => {
  ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((t) => {
    !Au[t] && (Au[t] = K.isFunction(e[t]) ? (n) => n[t]() : (n, r) => {
      throw new He(`Response type '${t}' is not supported`, He.ERR_NOT_SUPPORT, r);
    });
  });
})(new Response());
const jW = async (e) => {
  if (e == null)
    return 0;
  if (K.isBlob(e))
    return e.size;
  if (K.isSpecCompliantForm(e))
    return (await new Request(un.origin, {
      method: "POST",
      body: e
    }).arrayBuffer()).byteLength;
  if (K.isArrayBufferView(e) || K.isArrayBuffer(e))
    return e.byteLength;
  if (K.isURLSearchParams(e) && (e = e + ""), K.isString(e))
    return (await WW(e)).byteLength;
}, KW = async (e, t) => {
  const n = K.toFiniteNumber(e.getContentLength());
  return n ?? jW(t);
}, zW = Gu && (async (e) => {
  let {
    url: t,
    method: n,
    data: r,
    signal: s,
    cancelToken: i,
    timeout: o,
    onDownloadProgress: u,
    onUploadProgress: f,
    responseType: A,
    headers: E,
    withCredentials: p = "same-origin",
    fetchOptions: T
  } = Am(e);
  A = A ? (A + "").toLowerCase() : "text";
  let S = UW([s, i && i.toAbortSignal()], o), L;
  const b = S && S.unsubscribe && (() => {
    S.unsubscribe();
  });
  let I;
  try {
    if (f && GW && n !== "get" && n !== "head" && (I = await KW(E, r)) !== 0) {
      let w = new Request(t, {
        method: "POST",
        body: r,
        duplex: "half"
      }), F;
      if (K.isFormData(r) && (F = w.headers.get("content-type")) && E.setContentType(F), w.body) {
        const [P, M] = fp(
          I,
          hu(hp(f))
        );
        r = Ep(w.body, pp, P, M);
      }
    }
    K.isString(p) || (p = p ? "include" : "omit");
    const v = "credentials" in Request.prototype;
    L = new Request(t, {
      ...T,
      signal: S,
      method: n.toUpperCase(),
      headers: E.normalize().toJSON(),
      body: r,
      duplex: "half",
      credentials: v ? p : void 0
    });
    let R = await fetch(L);
    const g = oc && (A === "stream" || A === "response");
    if (oc && (u || g && b)) {
      const w = {};
      ["status", "statusText", "headers"].forEach((O) => {
        w[O] = R[O];
      });
      const F = K.toFiniteNumber(R.headers.get("content-length")), [P, M] = u && fp(
        F,
        hu(hp(u), !0)
      ) || [];
      R = new Response(
        Ep(R.body, pp, P, () => {
          M && M(), b && b();
        }),
        w
      );
    }
    A = A || "text";
    let D = await Au[K.findKey(Au, A) || "text"](R, e);
    return !g && b && b(), await new Promise((w, F) => {
      fm(w, F, {
        data: D,
        headers: gn.from(R.headers),
        status: R.status,
        statusText: R.statusText,
        config: e,
        request: L
      });
    });
  } catch (v) {
    throw b && b(), v && v.name === "TypeError" && /fetch/i.test(v.message) ? Object.assign(
      new He("Network Error", He.ERR_NETWORK, e, L),
      {
        cause: v.cause || v
      }
    ) : He.from(v, v && v.code, e, L);
  }
}), uc = {
  http: uW,
  xhr: $W,
  fetch: zW
};
K.forEach(uc, (e, t) => {
  if (e) {
    try {
      Object.defineProperty(e, "name", { value: t });
    } catch {
    }
    Object.defineProperty(e, "adapterName", { value: t });
  }
});
const Tp = (e) => `- ${e}`, YW = (e) => K.isFunction(e) || e === null || e === !1, Tm = {
  getAdapter: (e) => {
    e = K.isArray(e) ? e : [e];
    const { length: t } = e;
    let n, r;
    const s = {};
    for (let i = 0; i < t; i++) {
      n = e[i];
      let o;
      if (r = n, !YW(n) && (r = uc[(o = String(n)).toLowerCase()], r === void 0))
        throw new He(`Unknown adapter '${o}'`);
      if (r)
        break;
      s[o || "#" + i] = r;
    }
    if (!r) {
      const i = Object.entries(s).map(
        ([u, f]) => `adapter ${u} ` + (f === !1 ? "is not supported by the environment" : "is not available in the build")
      );
      let o = t ? i.length > 1 ? `since :
` + i.map(Tp).join(`
`) : " " + Tp(i[0]) : "as no adapter specified";
      throw new He(
        "There is no suitable adapter to dispatch the request " + o,
        "ERR_NOT_SUPPORT"
      );
    }
    return r;
  },
  adapters: uc
};
function Nd(e) {
  if (e.cancelToken && e.cancelToken.throwIfRequested(), e.signal && e.signal.aborted)
    throw new Di(null, e);
}
function Sp(e) {
  return Nd(e), e.headers = gn.from(e.headers), e.data = Dd.call(
    e,
    e.transformRequest
  ), ["post", "put", "patch"].indexOf(e.method) !== -1 && e.headers.setContentType("application/x-www-form-urlencoded", !1), Tm.getAdapter(e.adapter || Ul.adapter)(e).then(function(r) {
    return Nd(e), r.data = Dd.call(
      e,
      e.transformResponse,
      r
    ), r.headers = gn.from(r.headers), r;
  }, function(r) {
    return cm(r) || (Nd(e), r && r.response && (r.response.data = Dd.call(
      e,
      e.transformResponse,
      r.response
    ), r.response.headers = gn.from(r.response.headers))), Promise.reject(r);
  });
}
const Sm = "1.7.9", ju = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((e, t) => {
  ju[e] = function(r) {
    return typeof r === e || "a" + (t < 1 ? "n " : " ") + e;
  };
});
const mp = {};
ju.transitional = function(t, n, r) {
  function s(i, o) {
    return "[Axios v" + Sm + "] Transitional option '" + i + "'" + o + (r ? ". " + r : "");
  }
  return (i, o, u) => {
    if (t === !1)
      throw new He(
        s(o, " has been removed" + (n ? " in " + n : "")),
        He.ERR_DEPRECATED
      );
    return n && !mp[o] && (mp[o] = !0, console.warn(
      s(
        o,
        " has been deprecated since v" + n + " and will be removed in the near future"
      )
    )), t ? t(i, o, u) : !0;
  };
};
ju.spelling = function(t) {
  return (n, r) => (console.warn(`${r} is likely a misspelling of ${t}`), !0);
};
function XW(e, t, n) {
  if (typeof e != "object")
    throw new He("options must be an object", He.ERR_BAD_OPTION_VALUE);
  const r = Object.keys(e);
  let s = r.length;
  for (; s-- > 0; ) {
    const i = r[s], o = t[i];
    if (o) {
      const u = e[i], f = u === void 0 || o(u, i, e);
      if (f !== !0)
        throw new He("option " + i + " must be " + f, He.ERR_BAD_OPTION_VALUE);
      continue;
    }
    if (n !== !0)
      throw new He("Unknown option " + i, He.ERR_BAD_OPTION);
  }
}
const Zo = {
  assertOptions: XW,
  validators: ju
}, Fr = Zo.validators;
class Ps {
  constructor(t) {
    this.defaults = t, this.interceptors = {
      request: new dp(),
      response: new dp()
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(t, n) {
    try {
      return await this._request(t, n);
    } catch (r) {
      if (r instanceof Error) {
        let s = {};
        Error.captureStackTrace ? Error.captureStackTrace(s) : s = new Error();
        const i = s.stack ? s.stack.replace(/^.+\n/, "") : "";
        try {
          r.stack ? i && !String(r.stack).endsWith(i.replace(/^.+\n.+\n/, "")) && (r.stack += `
` + i) : r.stack = i;
        } catch {
        }
      }
      throw r;
    }
  }
  _request(t, n) {
    typeof t == "string" ? (n = n || {}, n.url = t) : n = t || {}, n = $s(this.defaults, n);
    const { transitional: r, paramsSerializer: s, headers: i } = n;
    r !== void 0 && Zo.assertOptions(r, {
      silentJSONParsing: Fr.transitional(Fr.boolean),
      forcedJSONParsing: Fr.transitional(Fr.boolean),
      clarifyTimeoutError: Fr.transitional(Fr.boolean)
    }, !1), s != null && (K.isFunction(s) ? n.paramsSerializer = {
      serialize: s
    } : Zo.assertOptions(s, {
      encode: Fr.function,
      serialize: Fr.function
    }, !0)), Zo.assertOptions(n, {
      baseUrl: Fr.spelling("baseURL"),
      withXsrfToken: Fr.spelling("withXSRFToken")
    }, !0), n.method = (n.method || this.defaults.method || "get").toLowerCase();
    let o = i && K.merge(
      i.common,
      i[n.method]
    );
    i && K.forEach(
      ["delete", "get", "head", "post", "put", "patch", "common"],
      (L) => {
        delete i[L];
      }
    ), n.headers = gn.concat(o, i);
    const u = [];
    let f = !0;
    this.interceptors.request.forEach(function(b) {
      typeof b.runWhen == "function" && b.runWhen(n) === !1 || (f = f && b.synchronous, u.unshift(b.fulfilled, b.rejected));
    });
    const A = [];
    this.interceptors.response.forEach(function(b) {
      A.push(b.fulfilled, b.rejected);
    });
    let E, p = 0, T;
    if (!f) {
      const L = [Sp.bind(this), void 0];
      for (L.unshift.apply(L, u), L.push.apply(L, A), T = L.length, E = Promise.resolve(n); p < T; )
        E = E.then(L[p++], L[p++]);
      return E;
    }
    T = u.length;
    let S = n;
    for (p = 0; p < T; ) {
      const L = u[p++], b = u[p++];
      try {
        S = L(S);
      } catch (I) {
        b.call(this, I);
        break;
      }
    }
    try {
      E = Sp.call(this, S);
    } catch (L) {
      return Promise.reject(L);
    }
    for (p = 0, T = A.length; p < T; )
      E = E.then(A[p++], A[p++]);
    return E;
  }
  getUri(t) {
    t = $s(this.defaults, t);
    const n = hm(t.baseURL, t.url);
    return um(n, t.params, t.paramsSerializer);
  }
}
K.forEach(["delete", "get", "head", "options"], function(t) {
  Ps.prototype[t] = function(n, r) {
    return this.request($s(r || {}, {
      method: t,
      url: n,
      data: (r || {}).data
    }));
  };
});
K.forEach(["post", "put", "patch"], function(t) {
  function n(r) {
    return function(i, o, u) {
      return this.request($s(u || {}, {
        method: t,
        headers: r ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url: i,
        data: o
      }));
    };
  }
  Ps.prototype[t] = n(), Ps.prototype[t + "Form"] = n(!0);
});
class Af {
  constructor(t) {
    if (typeof t != "function")
      throw new TypeError("executor must be a function.");
    let n;
    this.promise = new Promise(function(i) {
      n = i;
    });
    const r = this;
    this.promise.then((s) => {
      if (!r._listeners) return;
      let i = r._listeners.length;
      for (; i-- > 0; )
        r._listeners[i](s);
      r._listeners = null;
    }), this.promise.then = (s) => {
      let i;
      const o = new Promise((u) => {
        r.subscribe(u), i = u;
      }).then(s);
      return o.cancel = function() {
        r.unsubscribe(i);
      }, o;
    }, t(function(i, o, u) {
      r.reason || (r.reason = new Di(i, o, u), n(r.reason));
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason)
      throw this.reason;
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(t) {
    if (this.reason) {
      t(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(t) : this._listeners = [t];
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(t) {
    if (!this._listeners)
      return;
    const n = this._listeners.indexOf(t);
    n !== -1 && this._listeners.splice(n, 1);
  }
  toAbortSignal() {
    const t = new AbortController(), n = (r) => {
      t.abort(r);
    };
    return this.subscribe(n), t.signal.unsubscribe = () => this.unsubscribe(n), t.signal;
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let t;
    return {
      token: new Af(function(s) {
        t = s;
      }),
      cancel: t
    };
  }
}
function ZW(e) {
  return function(n) {
    return e.apply(null, n);
  };
}
function JW(e) {
  return K.isObject(e) && e.isAxiosError === !0;
}
const _c = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(_c).forEach(([e, t]) => {
  _c[t] = e;
});
function mm(e) {
  const t = new Ps(e), n = ZS(Ps.prototype.request, t);
  return K.extend(n, Ps.prototype, t, { allOwnKeys: !0 }), K.extend(n, t, null, { allOwnKeys: !0 }), n.create = function(s) {
    return mm($s(e, s));
  }, n;
}
const qt = mm(Ul);
qt.Axios = Ps;
qt.CanceledError = Di;
qt.CancelToken = Af;
qt.isCancel = cm;
qt.VERSION = Sm;
qt.toFormData = Wu;
qt.AxiosError = He;
qt.Cancel = qt.CanceledError;
qt.all = function(t) {
  return Promise.all(t);
};
qt.spread = ZW;
qt.isAxiosError = JW;
qt.mergeConfig = $s;
qt.AxiosHeaders = gn;
qt.formToJSON = (e) => dm(K.isHTMLForm(e) ? new FormData(e) : e);
qt.getAdapter = Tm.getAdapter;
qt.HttpStatusCode = _c;
qt.default = qt;
const Lm = B("/api/"), Jo = B(qt.create()), or = B({}), Qo = B({}), bm = B({}), qr = {}, gr = {}, Im = B({
  setUrlForArray: E2
});
function QW({ axiosCreateOptions: e = {} }) {
  Jo.value = qt.create(e);
}
function e2({ baseUrl: e = "" }) {
  Lm.value = e;
}
function t2({ errorCallbacks: e = {} }) {
  Qo.value = e;
}
function n2({ headerParams: e = {} } = {}) {
  bm.value = e;
}
function r2({
  all: e = !1,
  abortGroup: t,
  excludeAbortGroup: n
}) {
  const r = S2({ excludeAbortGroup: n });
  if (e)
    z(qr, (s, i) => {
      r[i] || (s.abort(), delete qr[i], gr[t] && delete gr[t]);
    });
  else if (t) {
    let s = [];
    ot(t) ? s.push(t) : Te(t) && (s = t), z(s, (i) => {
      r[i] || qr[i] && (qr[i].abort(), delete qr[i], gr[t] && delete gr[t]);
    });
  }
}
function a2() {
  or.value = {};
}
function s2({ apiSaveId: e }) {
  e in or.value && delete or.value[e];
}
function i2() {
  return {
    abortHttp: r2,
    clearAllApiSaved: a2,
    clearApiSaved: s2,
    deleteHttp: f2,
    getHttp: l2,
    getListHttp: o2,
    getOptionsHttp: u2,
    patchHttp: c2,
    postHttp: _2,
    putHttp: d2
  };
}
function l2({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  apiSaveId: o,
  keyId: u,
  fullResponse: f,
  showError: A,
  ignoreErrorHandler: E = !1,
  abortable: p = !0,
  abortGroup: T = ""
}) {
  return Ws({
    methodHttp: "get",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    apiSaveId: o,
    keyId: u,
    fullResponse: f,
    showError: A,
    ignoreErrorHandler: E,
    abortable: p,
    abortGroup: T
  });
}
function o2({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  apiSaveId: o,
  keyId: u,
  fullResponse: f,
  showError: A,
  ignoreErrorHandler: E = !1,
  abortable: p = !0,
  abortGroup: T = ""
}) {
  return Ws({
    methodHttp: "get",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    apiSaveId: o,
    keyId: u,
    fullResponse: f,
    showError: A,
    ignoreErrorHandler: E,
    abortable: p,
    abortGroup: T,
    expectedList: !0
  });
}
function u2({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  keyId: o,
  fullResponse: u,
  showError: f,
  ignoreErrorHandler: A = !1,
  abortable: E = !0,
  abortGroup: p = ""
}) {
  return Ws({
    methodHttp: "options",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    keyId: o,
    fullResponse: u,
    showError: f,
    abortable: E,
    abortGroup: p,
    ignoreErrorHandler: A
  });
}
function _2({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: f = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return Ws({
    methodHttp: "post",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: f
  });
}
function d2({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: f = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return Ws({
    methodHttp: "put",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: f
  });
}
function c2({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: f = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return Ws({
    methodHttp: "patch",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: f
  });
}
function f2({
  url: e,
  urlBase: t,
  data: n,
  urlParams: r = {},
  headerParams: s,
  responseType: i,
  fullResponse: o,
  showError: u,
  ignoreErrorHandler: f = !1,
  abortable: A = !0,
  abortGroup: E = ""
}) {
  return Ws({
    methodHttp: "delete",
    url: e,
    urlBase: t,
    urlParams: r,
    data: n,
    headerParams: s,
    responseType: i,
    fullResponse: o,
    showError: u,
    abortable: A,
    abortGroup: E,
    ignoreErrorHandler: f
  });
}
function Ws({
  methodHttp: e,
  url: t,
  urlBase: n,
  urlParams: r,
  data: s,
  headerParams: i = {},
  responseType: o = "json",
  apiSaveId: u,
  keyId: f,
  fullResponse: A,
  showError: E = !1,
  ignoreErrorHandler: p = !1,
  abortable: T = !0,
  abortGroup: S = "",
  expectedList: L
}) {
  let b;
  if (u && (b = or.value[u], b && b.loading))
    return b.promise;
  const I = new Promise((v, R) => {
    if (b && !b.loading) {
      if (f) {
        if (b.keyData)
          return v(b.keyData);
        const P = Lp({ data: b.data, keyId: f });
        return or.value[u].keyData = P, v(P);
      }
      return v(b.data);
    }
    const g = A2({ url: t, params: r });
    let D = `${le(n) ? Lm.value : n}${g}`;
    D = D.replace(/^(https?:\/\/)|(\/){2,}/g, (P, M) => M || "/");
    const w = {
      ...bm.value,
      ...i
    }, F = T2({ abortGroup: S, abortable: T });
    m2({ abortGroup: S, abortable: T }), Jo.value({
      method: e,
      url: D,
      data: s,
      headers: w,
      responseType: o,
      signal: F
    }).then(
      (P) => {
        if (A)
          return v(P);
        const M = p2({ expectedList: L, response: P }), O = Lp({ data: M, keyId: f });
        return u && (or.value[u].data = M, or.value[u].keyData = O, or.value[u].loading = !1), v(f ? O : M);
      },
      (P) => {
        if ((P == null ? void 0 : P.code) === "ERR_CANCELED")
          return R(P);
        if (Ne(p)) {
          if (p({ error: P.response, showError: E, client: Jo }))
            return R(P.response);
        } else if (p || h2({ error: P.response, showError: E, client: Jo, reject: R, resolve: v }))
          return R(P.response);
      }
    ).finally(
      () => {
        L2({ abortGroup: S, abortable: T });
      }
    );
  });
  return b || (or.value[u] = or.value[u] || {}, or.value[u].loading = !0, or.value[u].promise = I), I;
}
function h2({ error: e, showError: t, client: n, resolve: r, reject: s }) {
  return e ? (() => {
    const o = Qo.value[e.status];
    return Ne(o) ? o({ error: e, showError: t, client: n, resolve: r, reject: s }) : Ne(Qo.value.all) ? Qo.value.all({ error: e, showError: t, client: n, resolve: r, reject: s }) : !0;
  })() : !0;
}
function A2({ url: e, params: t }) {
  const n = e || "";
  let r = "";
  z(t, (i, o) => {
    Te(i) ? r = Im.value.setUrlForArray({ id: o, array: i, url: r }) : at(i) ? z(i, (u, f) => {
      u && (r && (r += "&"), r += `${f}=${u}`);
    }) : le(i) || (r && (r += "&"), r += `${o}=${i}`);
  });
  const s = r && n ? n.indexOf("?") === -1 ? "?" : "&" : "";
  return `${n}${s}${r}`;
}
function E2({ array: e, url: t, id: n }) {
  if (!e.length)
    return t;
  let r = t || "";
  return n === "fields" || n === "ordering" ? (r && (r += "&"), r += `${n}=`, r += e.join(",")) : z(e, (s) => {
    r && (r += "&"), r += `${n}=${s}`;
  }), r;
}
function Lp({ data: e, keyId: t }) {
  if (t)
    return Fa(e, t);
}
function p2({ expectedList: e, response: t }) {
  return e ? Te(t.data) ? t.data : t.data.results ? t.data.results : [] : t.data;
}
function T2({ abortGroup: e = "_global", abortable: t } = {}) {
  if (t)
    return qr[e] = qr[e] || new AbortController(), qr[e].signal;
}
function S2({ excludeAbortGroup: e }) {
  const t = {};
  return e && (ot(e) ? t[e] = !0 : Te(e) && z(e, (n) => {
    t[n] = !0;
  })), t;
}
function m2({ abortGroup: e, abortable: t }) {
  !t || !e || (gr[e] ? gr[e]++ : gr[e] = 1);
}
function L2({ abortGroup: e, abortable: t }) {
  !t || !e || (gr[e] && gr[e]--, gr[e] === 0 && qr[e] && (delete gr[e], delete qr[e]));
}
function Ufe({ url: e, allCommasToArray: t = !1, keysCommaToArray: n = [] } = {}) {
  let r = e || window.location.search.substring(1);
  try {
    r = decodeURI(r);
  } catch (o) {
    console.error(o);
  }
  const s = r.split("&"), i = {};
  return z(s, (o) => {
    const u = o.split("=");
    if (u && u.length === 2)
      if (u[1].indexOf("[") !== -1 || u[1].indexOf("%5B") !== -1) {
        const f = u[1].replace("%5B", "[").replace("%5D", "]").replace(/%22/g, '"');
        i[u[0]] = JSON.parse(f);
      } else if (u[1].indexOf(",") !== -1 && (t || n.indexOf(u[0]) !== -1)) {
        const f = u[1].split(",");
        i[u[0]] = f;
      } else i[u[0]] ? ot(i[u[0]]) ? (i[u[0]] = [i[u[0]]], i[u[0]].push(u[1])) : Te(i[u[0]]) && i[u[0]].push(u[1]) : i[u[0]] = u[1];
  }), i;
}
function kl(e) {
  const t = d(e, "disabled");
  return {
    disabledAttribut: _(() => {
      if (t.value === !0)
        return !0;
    })
  };
}
function Ku(e, {
  isModel: t = _(() => !0)
} = {}) {
  const n = d(e, "isClearButton");
  return {
    isClearButtonLocal: _(() => !!(n.value && t.value))
  };
}
function Ef({
  inputRef: e = B(void 0)
}) {
  const t = B(void 0), n = () => {
    t.value = !0;
  }, r = () => {
    t.value = !1;
  }, s = (i) => {
    switch (i.animationName) {
      case "onAutoFillStart":
        return n();
      case "onAutoFillCancel":
        return r();
    }
  };
  return Gr(() => {
    e.value && e.value.addEventListener("animationstart", s);
  }), Ot(() => {
    e.value && e.value.removeEventListener && e.value.removeEventListener("animationstart", s);
  }), {
    isAutofill: t
  };
}
function pf({
  htmlIdLocal: e = _(() => ""),
  clickLabel: t = () => {
  }
}) {
  const n = _(() => uS(e.value)), r = () => {
    t();
  };
  return {
    destroyEventBusClickLabel: () => {
      Rt.$off(n.value, r);
    },
    initEventBusClickLabel: () => {
      Rt.$on(n.value, r);
    }
  };
}
function Tf(e, {
  data: t = _(() => [])
}) {
  const n = d(e, "keyGroup"), r = d(e, "keyGroupLabelCallback"), s = d(e, "searchTextInHtml"), i = d(e, "sortOrderGroup"), o = _(() => Te(n.value) ? n.value : ot(n.value) ? [n.value] : []), u = _(() => o.value.length > 0), f = _(() => {
    if (!u.value)
      return;
    const E = {};
    return z(o.value, (p, T) => {
      E[T] = {};
    }), z(t.value, (p) => {
      let T;
      const S = [];
      let L = "";
      z(o.value, (b, I) => {
        let v = ce(p, b);
        if ((le(v) || v === "") && (v = "_not_grouped"), L += `${L ? "_" : ""}${v}`, !E[I][L]) {
          const R = Ne(r.value) ? r.value({ group: v, item: p }) : v;
          E[I][L] = {
            groupKey: v,
            groupLabel: R,
            groupParentKey: T,
            allGroupKeys: L,
            allParentKeys: he(S),
            data: [],
            dataKeyByKeyId: {}
          }, s.value && (E[I][L].groupLabelSearch = Fc(R));
        }
        E[I][L].data.push(p), E[I][L].dataKeyByKeyId[p[Ge]] = p, T = v, S.push(v);
      });
    }), z(E, (p, T) => {
      E[T] = Cc(p);
    }), i.value && z(E, (p, T) => {
      E[T] = Nc(p, ["groupLabel"], [i.value]);
    }), E;
  });
  return {
    dataGrouped: _(() => {
      if (!u.value)
        return;
      const E = {};
      return z(t.value, (p) => {
        let T = "";
        z(o.value, (S) => {
          let L = ce(p, S);
          if (le(L) || L === "")
            return L = "_not_grouped", T += `${T ? "_" : ""}${L}`, !1;
          T += `${T ? "_" : ""}${L}`;
        }), E[T] = E[T] || [], E[T].push(p);
      }), E;
    }),
    groupsForLever: f,
    hasKeyGroup: u,
    keyGroupArray: o
  };
}
function Sf(e, { emit: t }) {
  const n = d(e, "collapsible"), r = d(e, "id"), s = d(e, "isCollapsed"), i = d(e, "texts"), o = B(!1), u = _(() => o.value ? Pu : Ua), f = _(() => {
    var S;
    return ((S = i.value) == null ? void 0 : S.collapseOpen) || "_A_FIELDSET_COLLAPSE_OPEN_";
  }), A = _(() => {
    var S;
    return ((S = i.value) == null ? void 0 : S.collapseClose) || "_A_FIELDSET_COLLAPSE_CLOSE_";
  }), E = _(() => o.value ? f.value : A.value), p = () => {
    o.value = !o.value, t("toggleCollapse", { isCollapsed: o.value, id: r.value, props: e });
  }, T = () => {
    n.value ? o.value = s.value || !1 : o.value = !1;
  };
  return rt(s, () => {
    o.value = s.value || !1;
  }), {
    iconCollapse: u,
    initIsCollapsedLocal: T,
    isCollapsedLocal: o,
    titleCollapse: E,
    toggleCollapse: p
  };
}
function zu(e, {
  changeModel: t = () => {
  },
  dataExtraLocal: n = _(() => []),
  dataFromServer: r = B([])
} = {}) {
  const s = d(e, "apiSaveId"), i = d(e, "isDataSimpleArray"), o = d(e, "keyId"), u = d(e, "keyLabel"), f = d(e, "searchApi"), A = d(e, "modelValue"), E = d(e, "searchApiKey"), p = d(e, "type"), T = d(e, "url"), S = d(e, "urlParams"), L = B(!1), b = B(void 0), {
    getListHttp: I
  } = i2(), v = _(() => !!(f.value && E.value && T.value)), R = _(() => [
    s.value,
    T.value,
    S.value
  ]), g = () => {
    if (!T.value || v.value) {
      r.value = [];
      return;
    }
    b.value = !0, I({
      url: T.value,
      urlParams: S.value,
      apiSaveId: s.value
    }).then(
      (G) => {
        r.value = G;
      }
    ).finally(
      () => {
        b.value = !1;
      }
    );
  }, D = _(() => p.value === "checkbox" || p.value === "multiselect"), w = (G, te) => {
    Dc(te, G) || (g(), D.value ? t({
      model: [],
      currentModel: []
    }) : t({
      model: void 0,
      currentModel: void 0
    }));
  }, F = (G) => i.value ? LP(G) : vT(G, o.value), P = (G) => n.value.length ? !Oc(n.value, [Ge, G]) : ot(G) || Rn(G), M = _(() => {
    let G = [];
    return Te(A.value) && A.value.length ? G = Lt(A.value, (te) => P(te)) : P(A.value) && (G = [A.value]), G;
  }), O = ({ response: G }) => {
    const te = he(r.value), ne = [], oe = he(M.value);
    z(te, (se) => {
      if (oe.length === 0)
        return !1;
      const ie = i.value ? se : ce(se, o.value), me = oe.indexOf(ie);
      me !== -1 && (oe.splice(me, 1), ne.push(se));
    }), ne.push(...G), r.value = F(ne);
  };
  return {
    loadDataFromServer: g,
    loadDataFromServerForSearchAPI: () => {
      if (!v.value || !M.value.length)
        return;
      let G;
      if (o.value === "pk" ? G = Lt(M.value, (ne) => !le(ne)) : G = he(M.value), !G.length)
        return;
      b.value = !0;
      const te = {
        ...S.value,
        [o.value]: G,
        limit: G.length
      };
      return I({
        url: T.value,
        urlParams: te
      }).then(
        (ne) => {
          r.value = ne || [];
        }
      ).finally(() => {
        b.value = !1;
      });
    },
    loadingDataFromServer: b,
    loadingSearchApi: L,
    onSearchInApi: ({ search: G, data: te = [] }) => {
      v.value && (L.value = !0, I({
        url: T.value,
        urlParams: {
          ...S.value || {},
          [E.value]: G
        }
      }).then(
        (ne) => {
          i.value && (ne = Mn(ne, (oe) => oe[u.value])), O({ response: ne, data: te });
        }
      ).then(
        () => {
          L.value = !1;
        }
      ));
    },
    searchApiLocal: v,
    updateUrlPropsComputed: w,
    urlPropsComputed: R
  };
}
function Yu(e, {
  data: t = _(() => [])
}) {
  const n = d(e, "sortOrder");
  return {
    dataSort: _(() => n.value ? Nc(t.value, [vt], [n.value]) : t.value)
  };
}
function Xu({ emit: e }, {
  dataKeyByKeyIdLocal: t = _(() => ({})),
  dataLocal: n = _(() => ({}))
}) {
  rt(n, () => {
    e("updateData", {
      dataKeyByKeyId: t.value
    });
  }, {
    immediate: !0,
    deep: !0
  });
}
function Zu(e) {
  const t = d(e, "alwaysTranslate"), n = d(e, "data"), r = d(e, "dataExtra"), s = d(e, "isDataSimpleArray"), i = d(e, "keyId"), o = d(e, "keyLabel"), u = d(e, "keyLabelCallback"), f = d(e, "searchTextInHtml"), A = d(e, "translateData"), E = de(fS, !1), p = B([]), T = _(() => YP(r.value)), S = ({ _data: P }) => (z(P, (M) => {
    M[oi] = Fc(M[vt]);
  }), P), L = ({ _data: P, _isArrayOfArrays: M = !1 }) => {
    if (E.value)
      return P;
    const O = he(P);
    if (M) {
      const q = [];
      return z(O, (U) => {
        const G = U[0];
        let te = U[1];
        A.value && wa(te) && (te = Pt({ placeholder: te, alwaysTranslate: t.value })), q.push({
          [Ge]: G,
          [vt]: te
        });
      }), q;
    }
    if (u.value) {
      if (s.value) {
        const q = [];
        return z(O, (U) => {
          let G = u.value({ item: U });
          A.value && wa(G) && (G = Pt({ placeholder: G, alwaysTranslate: t.value })), q.push({
            [Ge]: U,
            [vt]: G
          });
        }), q;
      }
      z(O, (q) => {
        let U = u.value({ item: q });
        A.value && wa(U) && (U = Pt({ placeholder: U, alwaysTranslate: t.value })), q[Ge] = ce(q, i.value), q[vt] = U;
      });
    } else {
      if (s.value) {
        const q = [];
        return z(O, (U) => {
          let G = U;
          A.value && wa(G) && (G = Pt({ placeholder: G, alwaysTranslate: t.value })), q.push({
            [Ge]: U,
            [vt]: G
          });
        }), q;
      }
      z(O, (q) => {
        let U = ce(q, o.value);
        A.value && wa(U) && (U = Pt({ placeholder: U, alwaysTranslate: t.value })), q[Ge] = ce(q, i.value), q[vt] = U;
      });
    }
    return O;
  }, b = _(() => p.value.length ? p.value : n.value || []), I = _(() => {
    let P = L({
      _data: b.value,
      _isArrayOfArrays: !1
    });
    return f.value && (P = S({ _data: P })), P;
  }), v = _(() => {
    let P = L({
      _data: r.value,
      _isArrayOfArrays: T.value
    });
    return f.value && (P = S({ _data: P })), P;
  }), R = _(() => Fa(v.value, Ge)), g = _(() => Fa(I.value, Ge)), D = _(() => ({
    ...R.value,
    ...g.value
  })), w = _(() => [
    ...v.value,
    ...I.value
  ]), F = _(() => v.value.length > 0);
  return {
    dataAll: w,
    dataExtraLocal: v,
    dataFromServer: p,
    dataKeyByKeyIdLocal: D,
    dataLocal: I,
    hasDataExtra: F
  };
}
function Ju(e, {
  loadingDataFromServer: t = B(!1)
}) {
  const n = d(e, "loading");
  return {
    loadingLocal: _(() => !!(n.value || t.value))
  };
}
function mf(e, { emit: t }, {
  data: n = _(() => []),
  dataExtra: r = _(() => []),
  exclusiveOption: s = _(() => {
  }),
  groupsForLever: i = _(() => {
  }),
  hasKeyGroup: o = _(() => !1),
  htmlIdLocal: u = _(() => ""),
  keyGroupArray: f = _(() => []),
  onSearchInApi: A = () => {
  },
  searchApiLocal: E = _(() => !1)
}) {
  const p = d(e, "searchInGroup"), T = d(e, "searchOutside"), S = d(e, "searchTextInHtml"), L = d(e, "searchTimeout"), b = B(!1), I = B(""), v = B(""), R = B(!1), g = B({}), D = B({}), w = B({}), F = B({}), P = B({}), M = B(void 0), O = _(() => !!(T.value || E.value)), q = _(() => `${u.value}_search_global`), U = _(() => bT(I.value || "")), G = _(() => gu(U.value)), te = _(() => new RegExp(G.value, "gi")), ne = () => {
    let ve = !1;
    if (!p.value || !i.value) {
      P.value = {}, b.value = ve;
      return;
    }
    const be = {}, je = {};
    z(i.value, (Re) => {
      z(Re, (Z) => {
        const H = S.value ? Z.groupLabelSearch : Z.groupLabel;
        H === "_not_grouped" && !Z.groupParentKey || (be[Z.groupParentKey] ? (be[Z.allGroupKeys] = !0, Z.data.length && (ve = !0)) : `${H}`.search(te.value) !== -1 && (be[Z.allGroupKeys] = !0, Z.data.length && (ve = !0), Z.allParentKeys.length && z(Z.allParentKeys, (X) => {
          je[X] = !0;
        })));
      });
    }), P.value = {
      ...be,
      ...je
    }, b.value = ve;
  }, oe = () => {
    const ve = {}, be = {}, je = {}, Re = {};
    if (I.value) {
      if (R.value = !0, o.value ? (ne(), z(n.value, (Z) => {
        const H = S.value ? Z[oi] : Z[vt], X = Z[Ge];
        if (`${H}`.search(te.value) !== -1) {
          be[X] = !0;
          let ae = "";
          z(f.value, (ye) => {
            let Ce = ce(Z, ye);
            (le(Ce) || Ce === "") && (Ce = "_not_grouped"), ae += `${ae ? "_" : ""}${Ce}`, Re[ae] = !0;
          });
        }
      })) : z(n.value, (Z) => {
        const H = S.value ? Z[oi] : Z[vt], X = Z[Ge];
        `${H}`.search(te.value) !== -1 && (be[X] = !0);
      }), z(r.value, (Z) => {
        const H = S.value ? Z[oi] : Z[vt], X = Z[Ge];
        `${H}`.search(te.value) !== -1 && (ve[X] = !0);
      }), s.value) {
        const Z = S.value ? s.value[oi] : s.value[vt], H = s.value[Ge];
        `${Z}`.search(te.value) !== -1 && (je[H] = !0);
      }
    } else
      R.value = !1;
    g.value = be, D.value = ve, w.value = je, F.value = Re;
  }, se = _(() => !!(R.value && En(w.value))), ie = _(() => !!(R.value && En(D.value))), me = _(() => !!(R.value && En(g.value) && ie.value && se.value && !b.value));
  return {
    hasNotElementsExclusiveWithSearch: se,
    hasNotElementsExtraWithSearch: ie,
    hasNotElementsWithSearch: me,
    idForButtonSearchOutside: q,
    modelSearch: I,
    modelSearchLowerCase: U,
    modelSearchOutside: v,
    onSearchOutside: (ve) => {
      ve && ve.preventDefault(), A({
        search: v.value
      }), t("onSearchOutside", {
        model: v.value
      });
    },
    searching: R,
    searchingElements: g,
    searchingElementsExclusive: w,
    searchingElementsExtra: D,
    searchingGroups: F,
    searchingGroupsWithSearchInGroup: P,
    searchOutsideOrApi: O,
    searchOutsideRef: M,
    updateModelSearch: (ve) => {
      I.value = ve, L.value ? setTimeout(() => {
        oe();
      }, L.value) : oe();
    },
    updateModelSearchOutside: (ve) => {
      v.value = ve;
    }
  };
}
function Qu(e) {
  const t = d(e, "required");
  return {
    textAfterLabel: _(() => t.value ? "*" : "")
  };
}
const ci = B({
  propsDefault: {},
  config: {
    isHtmlTitleSort: !1,
    headerTopGroups: [
      {
        props: {},
        children: [
          {
            component: "filterMain",
            props: {}
          },
          {
            component: "buttonSearch",
            props: {}
          },
          {
            component: "buttonToggle",
            props: {}
          }
        ]
      },
      {
        props: {},
        children: [
          {
            component: "selectFiltersSaved",
            props: {}
          },
          {
            component: "buttonSaveTop",
            props: {}
          },
          {
            component: "buttonDeleteFiltersSaved",
            props: {}
          }
        ]
      }
    ],
    headerBottomGroups: [
      {
        props: {},
        children: [
          {
            component: "addFilterSelect",
            props: {}
          },
          {
            component: "buttonSearch",
            props: {}
          }
        ]
      }
    ]
  }
});
_(() => {
  const e = {};
  return z(ci.value.config.headerTopGroups, (t) => {
    z(t.children, (n) => {
      e[n.component] = n.props;
    });
  }), z(ci.value.config.headerBottomGroups, (t) => {
    z(t.children, (n) => {
      e[n.component] = n.props;
    });
  }), e;
});
const kfe = {
  install: (e, {
    propsDefault: t = {},
    config: n = {}
  } = {}) => {
    ci.value.propsDefault = {
      ...ci.value.propsDefault,
      ...t
    }, ci.value.config = {
      ...ci.value.config,
      ...n
    };
  }
}, Hfe = {
  install: (e, { axiosCreateOptions: t = {}, baseUrl: n = "/api/", errorCallbacks: r = {}, headerParams: s = {}, setUrlForArray: i = void 0 } = {}) => {
    QW({ axiosCreateOptions: t }), e2({ baseUrl: n }), t2({ errorCallbacks: r }), n2({ headerParams: s }), Ne(i) && (Im.value.setUrlForArray = i);
  }
}, on = {
  propsDefault: {
    controlsType: "none",
    currencySymbol: "€",
    currencySymbolPosition: "right",
    decimalDivider: ",",
    decimalPartLength: 2,
    iconPrepend: void 0,
    inputWidth: 200,
    isLabelFloat: !1,
    max: void 0,
    min: void 0,
    modelUndefined: void 0,
    placeholder: void 0,
    step: 1,
    thousandDivider: "."
  }
}, Vfe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    on.propsDefault = {
      ...on.propsDefault,
      ...t
    };
  }
}, An = {
  propsDefault: {
    controlsType: "plus-minus",
    eAllowed: !1,
    iconPrepend: void 0,
    inputWidth: 200,
    isLabelFloat: !1,
    max: void 0,
    min: void 0,
    modelUndefined: void 0,
    placeholder: void 0,
    precision: void 0,
    step: 1,
    stepStrictly: void 0,
    type: "number"
  }
}, Wfe = {
  install: (e, {
    propsDefault: t = {}
  } = {}) => {
    An.propsDefault = {
      ...An.propsDefault,
      ...t
    };
  }
}, Gfe = {
  install: (e, t) => {
    e.provide("$aloha", t);
  }
}, jfe = {
  install: (e, {
    breakpoint: t
  } = {}) => {
    Ho(window.innerWidth <= t);
    const n = () => {
      window.innerWidth > t ? au.value && Ho(!1) : au.value || Ho(!0);
    };
    window.addEventListener("resize", n);
  }
}, Kfe = {
  install: (e, t = "") => {
    nk(t);
  }
}, Et = {
  propsDefault: {
    attributesFieldset: {},
    classColumn: "a_column a_column_12",
    classColumns: "a_columns a_columns_count_12 a_columns_gap_y_1",
    classFieldset: void 0,
    excludeRenderAttributes: [],
    extra: void 0,
    hasBorder: !0,
    helpTextParam: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_",
    helpTextRoute: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_",
    helpTextQuery: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_",
    helpTextTarget: "_A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_",
    keyIdRoute: "name",
    keyLabelRoute: "path",
    labelClass: void 0,
    labelParam: "_A_ROUTER_LINK_CONFIG_LABEL_PARAM_",
    labelQuery: "_A_ROUTER_LINK_CONFIG_LABEL_QUERY_",
    labelRoute: "_A_ROUTER_LINK_CONFIG_LABEL_ROUTE_",
    labelTarget: "_A_ROUTER_LINK_CONFIG_LABEL_TARGET_",
    readonlyDefault: "",
    readonlyDefaultParam: void 0,
    readonlyDefaultQuery: void 0,
    readonlyDefaultRoute: void 0,
    readonlyDefaultTarget: void 0,
    routes: [],
    sortOrderRoute: "asc",
    targets: [
      {
        id: "_blank",
        label: "_A_TARGET_BLANK_"
      },
      {
        id: "_self",
        label: "_A_TARGET_SELF_"
      },
      {
        id: "_parent",
        label: "_A_TARGET_PARENT_"
      },
      {
        id: "_top",
        label: "_A_TARGET_TOP_"
      }
    ]
  }
};
function b2({ routes: e = [], excludedPathRoutes: t = [] }) {
  const n = [], r = {};
  return t.length && z(t, (s) => {
    r[s] = !0;
  }), z(e, (s) => {
    const i = s.path;
    s.name && !r[i] && n.push({
      path: s.path,
      name: s.name,
      meta: s.meta
    });
  }), n;
}
const zfe = {
  install: (e, {
    propsDefault: t = {},
    excludedPathRoutes: n = []
  } = {}) => {
    Et.propsDefault = {
      ...Et.propsDefault,
      ...t,
      routes: b2({ routes: t.routes, excludedPathRoutes: n })
    };
  }
};
function vm(e, t, n) {
  function r(o) {
    return o.toString(16);
  }
  function s(o) {
    return parseInt(o, 16);
  }
  e = e.replace(/#/g, ""), t = t.replace(/#/g, ""), n = typeof n < "u" ? n : 50;
  let i = "#";
  for (let o = 0; o <= 5; o += 2) {
    const u = s(e.substr(o, 2)), f = s(t.substr(o, 2));
    let A = r(Math.round(f + (u - f) * (n / 100)));
    for (; A.length < 2; )
      A = "0" + A;
    i += A;
  }
  return i;
}
function Yfe(e, t) {
  return vm("#ffffff", e, t);
}
function Xfe(e, t) {
  return vm("#000000", e, t);
}
function Bd(e) {
  const t = e.toString(16);
  return t.length === 1 ? `0${t}` : t;
}
function Zfe(e, t, n) {
  return `#${Bd(e)}${Bd(t)}${Bd(n)}`;
}
function Jfe(e, t = !1) {
  const n = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
  if (!n)
    return null;
  const r = parseInt(n[1], 16), s = parseInt(n[2], 16), i = parseInt(n[3], 16);
  return t ? `${r}, ${s}, ${i}` : {
    r,
    g: s,
    b: i
  };
}
const I2 = "[لا توجد عناصر متاحة للاختيار]", v2 = "بحث", y2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: I2,
  _A_CHECKBOX_SEARCH_: v2
}, g2 = "[Keine Elemente zur Auswahl verfügbar]", R2 = "Suche", O2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: g2,
  _A_CHECKBOX_SEARCH_: R2
}, C2 = "[No items available for selection]", D2 = "Search", N2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: C2,
  _A_CHECKBOX_SEARCH_: D2
}, B2 = "[No hay elementos disponibles para seleccionar]", w2 = "Buscar", P2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: B2,
  _A_CHECKBOX_SEARCH_: w2
}, x2 = "[Aucun élément disponible pour la sélection]", M2 = "Recherche", F2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: x2,
  _A_CHECKBOX_SEARCH_: M2
}, q2 = "[Nema dostupnih elemenata za odabir]", $2 = "Pretraživanje", U2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: q2,
  _A_CHECKBOX_SEARCH_: $2
}, k2 = "[Nessun elemento disponibile per la selezione]", H2 = "Cerca", V2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: k2,
  _A_CHECKBOX_SEARCH_: H2
}, W2 = "[Нет элементов для выбора]", G2 = "Поиск", j2 = {
  _A_CHECKBOX_HAS_NOT_ELEMENTS_WITH_SEARCH_: W2,
  _A_CHECKBOX_SEARCH_: G2
}, ka = {
  ar: y2,
  de: O2,
  en: N2,
  es: P2,
  fr: F2,
  hr: U2,
  it: V2,
  ru: j2
}, K2 = "تحميل", z2 = {
  _A_CLOAK_LOADING_: K2
}, Y2 = "Wird geladen", X2 = {
  _A_CLOAK_LOADING_: Y2
}, Z2 = "Loading", J2 = {
  _A_CLOAK_LOADING_: Z2
}, Q2 = "Cargando", e5 = {
  _A_CLOAK_LOADING_: Q2
}, t5 = "Chargement", n5 = {
  _A_CLOAK_LOADING_: t5
}, r5 = "Učitavam", a5 = {
  _A_CLOAK_LOADING_: r5
}, s5 = "Caricamento", i5 = {
  _A_CLOAK_LOADING_: s5
}, l5 = "Загрузка", o5 = {
  _A_CLOAK_LOADING_: l5
}, Ha = {
  ar: z2,
  de: X2,
  en: J2,
  es: e5,
  fr: n5,
  hr: a5,
  it: i5,
  ru: o5
}, u5 = "من", _5 = "إلى", d5 = {
  _A_DATEPICKER_RANGE_FROM_: u5,
  _A_DATEPICKER_RANGE_UNTIL_: _5
}, c5 = "von", f5 = "bis", h5 = {
  _A_DATEPICKER_RANGE_FROM_: c5,
  _A_DATEPICKER_RANGE_UNTIL_: f5
}, A5 = "from", E5 = "until", p5 = {
  _A_DATEPICKER_RANGE_FROM_: A5,
  _A_DATEPICKER_RANGE_UNTIL_: E5
}, T5 = "desde", S5 = "hasta", m5 = {
  _A_DATEPICKER_RANGE_FROM_: T5,
  _A_DATEPICKER_RANGE_UNTIL_: S5
}, L5 = "de", b5 = "à", I5 = {
  _A_DATEPICKER_RANGE_FROM_: L5,
  _A_DATEPICKER_RANGE_UNTIL_: b5
}, v5 = "od", y5 = "do", g5 = {
  _A_DATEPICKER_RANGE_FROM_: v5,
  _A_DATEPICKER_RANGE_UNTIL_: y5
}, R5 = "da", O5 = "a", C5 = {
  _A_DATEPICKER_RANGE_FROM_: R5,
  _A_DATEPICKER_RANGE_UNTIL_: O5
}, D5 = "с", N5 = "по", B5 = {
  _A_DATEPICKER_RANGE_FROM_: D5,
  _A_DATEPICKER_RANGE_UNTIL_: N5
}, Va = {
  ar: d5,
  de: h5,
  en: p5,
  es: m5,
  fr: I5,
  hr: g5,
  it: C5,
  ru: B5
}, w5 = "إظهار أقل", P5 = "أظهر المزيد", x5 = {
  _A_DISCLOSURE_LESS_: w5,
  _A_DISCLOSURE_MORE_: P5
}, M5 = "Mehr anzeigen", F5 = "Weniger anzeigen", q5 = {
  _A_DISCLOSURE_MORE_: M5,
  _A_DISCLOSURE_LESS_: F5
}, $5 = "Show less", U5 = "Show more", k5 = {
  _A_DISCLOSURE_LESS_: $5,
  _A_DISCLOSURE_MORE_: U5
}, H5 = "Mostrar menos", V5 = "Mostrar más", W5 = {
  _A_DISCLOSURE_LESS_: H5,
  _A_DISCLOSURE_MORE_: V5
}, G5 = "Afficher moins", j5 = "Afficher plus", K5 = {
  _A_DISCLOSURE_LESS_: G5,
  _A_DISCLOSURE_MORE_: j5
}, z5 = "Prikaži manje", Y5 = "Prikaži više", X5 = {
  _A_DISCLOSURE_LESS_: z5,
  _A_DISCLOSURE_MORE_: Y5
}, Z5 = "Mostra meno", J5 = "Mostra di più", Q5 = {
  _A_DISCLOSURE_LESS_: Z5,
  _A_DISCLOSURE_MORE_: J5
}, eG = "Показать меньше", tG = "Показать больше", nG = {
  _A_DISCLOSURE_LESS_: eG,
  _A_DISCLOSURE_MORE_: tG
}, Wa = {
  ar: x5,
  de: q5,
  en: k5,
  es: W5,
  fr: K5,
  hr: X5,
  it: Q5,
  ru: nG
}, rG = "افتح", aG = "اغلق", sG = {
  _A_FIELDSET_COLLAPSE_OPEN_: rG,
  _A_FIELDSET_COLLAPSE_CLOSE_: aG
}, iG = "Ausklappen", lG = "Einklappen", oG = {
  _A_FIELDSET_COLLAPSE_OPEN_: iG,
  _A_FIELDSET_COLLAPSE_CLOSE_: lG
}, uG = "Open", _G = "Close", dG = {
  _A_FIELDSET_COLLAPSE_OPEN_: uG,
  _A_FIELDSET_COLLAPSE_CLOSE_: _G
}, cG = "Abrir", fG = "Cerrar", hG = {
  _A_FIELDSET_COLLAPSE_OPEN_: cG,
  _A_FIELDSET_COLLAPSE_CLOSE_: fG
}, AG = "Ouvrir", EG = "Fermer", pG = {
  _A_FIELDSET_COLLAPSE_OPEN_: AG,
  _A_FIELDSET_COLLAPSE_CLOSE_: EG
}, TG = "Otvori", SG = "Zatvori", mG = {
  _A_FIELDSET_COLLAPSE_OPEN_: TG,
  _A_FIELDSET_COLLAPSE_CLOSE_: SG
}, LG = "Apri", bG = "Chiudi", IG = {
  _A_FIELDSET_COLLAPSE_OPEN_: LG,
  _A_FIELDSET_COLLAPSE_CLOSE_: bG
}, vG = "Открыть", yG = "Закрыть", gG = {
  _A_FIELDSET_COLLAPSE_OPEN_: vG,
  _A_FIELDSET_COLLAPSE_CLOSE_: yG
}, Ga = {
  ar: sG,
  de: oG,
  en: dG,
  es: hG,
  fr: pG,
  hr: mG,
  it: IG,
  ru: gG
}, RG = "_A_FILTERS_ADD_FILTER_", OG = "إغلاق البحث المتقدم", CG = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", DG = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", NG = "افتح البحث المتقدم", BG = "_A_FILTERS_SAVE_BTN_", wG = "_A_FILTERS_SAVE_LABEL_NAME_", PG = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", xG = "_A_FILTERS_SAVE_MODAL_HEADER_", MG = "_A_FILTERS_SAVE_MSG_ERROR_", FG = "_A_FILTERS_SAVE_SELECT_", qG = "ابدأ البحث", $G = "_A_FILTERS_TOP_CLOSE_", UG = {
  _A_FILTERS_ADD_FILTER_: RG,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: OG,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: CG,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: DG,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: NG,
  _A_FILTERS_SAVE_BTN_: BG,
  _A_FILTERS_SAVE_LABEL_NAME_: wG,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: PG,
  _A_FILTERS_SAVE_MODAL_HEADER_: xG,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: MG,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: FG,
  _A_FILTERS_START_SEARCH_: qG,
  _A_FILTERS_TOP_CLOSE_: $G
}, kG = "Neues Filterkriterium", HG = "Löschen", VG = "Ausgewählten Filter löschen", WG = "Ausgewählten Filter kann nicht gelöscht werden. (Gespeicherter Filter nicht ausgewählt)", GG = "Filter löschen", jG = "Zurücksetzen", KG = "Meine Filter", zG = "Schließen", YG = "Filter:", XG = "Neu", ZG = "Filter speichern", JG = "Name", QG = "Bitte geben Sie einen Namen für den zu speichernden Filter ein. Bei Eingabe eines bestehenden Namens wird der bereits gespeicherte Filter aktualisiert. Bei Eingabe eines neuen Namens wird ein neuer Filter gespeichert.", e3 = "Filter speichern", t3 = "Filter konnte nicht gespeichert werden.", n3 = "Gespeicherte Filter", r3 = "Suchen", a3 = "Filterkriterium entfernen", s3 = {
  _A_FILTERS_ADD_FILTER_: kG,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "Sind Sie sicher, dass Sie diese gespeicherten Filter <strong>{{ name }}</strong> löschen wollen?",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: HG,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "Gespeicherten Filter löschen",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "Ausgewählter Filter <strong>{{ name }}</strong> konnte nicht entfernt werden.",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "Ausgewählter Filter <strong>{{ name }}</strong> wurde entfernt.",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_: VG,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: WG,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_: GG,
  _A_FILTERS_DESELECT_ALL_: jG,
  _A_FILTERS_FILTER_SAVED_GROUP_MY_: KG,
  _A_FILTERS_HOR_CLOSE_DROPDOWN_: zG,
  "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_": "Filterwert {{ filterValue }} für Filter löschen: {{ filterLabel }}",
  _A_FILTERS_HOR_FILTER_HEADER_: YG,
  _A_FILTERS_HOR_FILTER_NEW_: XG,
  "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_": "Filter öffnen: {{ filterLabel }} mit Wert {{ filterValue }}",
  _A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_: ZG,
  _A_FILTERS_SAVE_LABEL_NAME_: JG,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: QG,
  _A_FILTERS_SAVE_MODAL_HEADER_: e3,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": 'Der Filter mit dem Namen <strong>"{{ name }}"</strong> wird beim Speichern aktualisiert.',
  _A_FILTERS_SAVE_MSG_ERROR_: t3,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": 'Neuer Filter <strong>"{{ name }}"</strong> ist gespeichert.',
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": 'Filter <strong>"{{ name }}"</strong> ist aktualisiert.',
  _A_FILTERS_SAVE_SELECT_: n3,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} ausgewählt",
  _A_FILTERS_START_SEARCH_: r3,
  _A_FILTERS_TOP_CLOSE_: a3
}, i3 = "_A_FILTERS_ADD_FILTER_", l3 = "Close advanced search", o3 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", u3 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", _3 = "Reset selection", d3 = "Open advanced search", c3 = "_A_FILTERS_SAVE_BTN_", f3 = "_A_FILTERS_SAVE_LABEL_NAME_", h3 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", A3 = "_A_FILTERS_SAVE_MODAL_HEADER_", E3 = "_A_FILTERS_SAVE_MSG_ERROR_", p3 = "My saved searches", T3 = "start search", S3 = "_A_FILTERS_TOP_CLOSE_", m3 = "Your selection", L3 = {
  _A_FILTERS_ADD_FILTER_: i3,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: l3,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: o3,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: u3,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_DESELECT_ALL_: _3,
  "_A_FILTERS_HOR_CLOSE_TITLE_{{filterLabel}}_{{filterValue}}_": "Clear filter value {{ filterValue }} for filter: {{ filterLabel }}",
  "_A_FILTERS_HOR_GO_TO_TITLE_{{filterLabel}}_{{filterValue}}_": "Open filter: {{ filterLabel }} with value {{ filterValue }}",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: d3,
  _A_FILTERS_SAVE_BTN_: c3,
  _A_FILTERS_SAVE_LABEL_NAME_: f3,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: h3,
  _A_FILTERS_SAVE_MODAL_HEADER_: A3,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: E3,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: p3,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} selected",
  _A_FILTERS_START_SEARCH_: T3,
  _A_FILTERS_TOP_CLOSE_: S3,
  _A_FILTERS_YOUR_SELECTION_: m3
}, b3 = "_A_FILTERS_ADD_FILTER_", I3 = "Cerrar búsqueda avanzada", v3 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", y3 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", g3 = "Abrir búsqueda avanzada", R3 = "_A_FILTERS_SAVE_BTN_", O3 = "_A_FILTERS_SAVE_LABEL_NAME_", C3 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", D3 = "_A_FILTERS_SAVE_MODAL_HEADER_", N3 = "_A_FILTERS_SAVE_MSG_ERROR_", B3 = "_A_FILTERS_SAVE_SELECT_", w3 = "iniciar busqueda", P3 = "_A_FILTERS_TOP_CLOSE_", x3 = {
  _A_FILTERS_ADD_FILTER_: b3,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: I3,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: v3,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: y3,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: g3,
  _A_FILTERS_SAVE_BTN_: R3,
  _A_FILTERS_SAVE_LABEL_NAME_: O3,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: C3,
  _A_FILTERS_SAVE_MODAL_HEADER_: D3,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: N3,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: B3,
  _A_FILTERS_START_SEARCH_: w3,
  _A_FILTERS_TOP_CLOSE_: P3
}, M3 = "_A_FILTERS_ADD_FILTER_", F3 = "Fermer la recherche avancée", q3 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", $3 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", U3 = "Ouvrir la recherche avancée", k3 = "_A_FILTERS_SAVE_BTN_", H3 = "_A_FILTERS_SAVE_LABEL_NAME_", V3 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", W3 = "_A_FILTERS_SAVE_MODAL_HEADER_", G3 = "_A_FILTERS_SAVE_MSG_ERROR_", j3 = "_A_FILTERS_SAVE_SELECT_", K3 = "lancer la recherche", z3 = "_A_FILTERS_TOP_CLOSE_", Y3 = {
  _A_FILTERS_ADD_FILTER_: M3,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: F3,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: q3,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: $3,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: U3,
  _A_FILTERS_SAVE_BTN_: k3,
  _A_FILTERS_SAVE_LABEL_NAME_: H3,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: V3,
  _A_FILTERS_SAVE_MODAL_HEADER_: W3,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: G3,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: j3,
  _A_FILTERS_START_SEARCH_: K3,
  _A_FILTERS_TOP_CLOSE_: z3
}, X3 = "_A_FILTERS_ADD_FILTER_", Z3 = "Zatvorite napredno pretraživanje", J3 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", Q3 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", e4 = "Otvorite napredno pretraživanje", t4 = "_A_FILTERS_SAVE_BTN_", n4 = "_A_FILTERS_SAVE_LABEL_NAME_", r4 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", a4 = "_A_FILTERS_SAVE_MODAL_HEADER_", s4 = "_A_FILTERS_SAVE_MSG_ERROR_", i4 = "_A_FILTERS_SAVE_SELECT_", l4 = "Započnite pretragu", o4 = "_A_FILTERS_TOP_CLOSE_", u4 = {
  _A_FILTERS_ADD_FILTER_: X3,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: Z3,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: J3,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: Q3,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: e4,
  _A_FILTERS_SAVE_BTN_: t4,
  _A_FILTERS_SAVE_LABEL_NAME_: n4,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: r4,
  _A_FILTERS_SAVE_MODAL_HEADER_: a4,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: s4,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: i4,
  _A_FILTERS_START_SEARCH_: l4,
  _A_FILTERS_TOP_CLOSE_: o4
}, _4 = "_A_FILTERS_ADD_FILTER_", d4 = "Chiudi la ricerca avanzata", c4 = "_A_FILTERS_DELETE_FILTER_BTN_DELETE_", f4 = "_A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_", h4 = "Apri la ricerca avanzata", A4 = "_A_FILTERS_SAVE_BTN_", E4 = "_A_FILTERS_SAVE_LABEL_NAME_", p4 = "_A_FILTERS_SAVE_MODAL_BODY_PREPEND_", T4 = "_A_FILTERS_SAVE_MODAL_HEADER_", S4 = "_A_FILTERS_SAVE_MSG_ERROR_", m4 = "_A_FILTERS_SAVE_SELECT_", L4 = "Inizia la ricerca", b4 = "_A_FILTERS_TOP_CLOSE_", I4 = {
  _A_FILTERS_ADD_FILTER_: _4,
  _A_FILTERS_CLOSE_ADVANCED_SEARCH_: d4,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: c4,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: f4,
  "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_": "_A_FILTERS_DELETE_FILTER_SAVED_BTN_{{name}}_",
  _A_FILTERS_OPEN_ADVANCED_SEARCH_: h4,
  _A_FILTERS_SAVE_BTN_: A4,
  _A_FILTERS_SAVE_LABEL_NAME_: E4,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: p4,
  _A_FILTERS_SAVE_MODAL_HEADER_: T4,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_",
  _A_FILTERS_SAVE_MSG_ERROR_: S4,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_",
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_",
  _A_FILTERS_SAVE_SELECT_: m4,
  _A_FILTERS_START_SEARCH_: L4,
  _A_FILTERS_TOP_CLOSE_: b4
}, v4 = "Новое условие фильтра", y4 = "Удалить", g4 = "Удалить выбранный фильтр", R4 = "Не удается удалить выбранный фильтр. (Сохраненный фильтр не выбран)", O4 = "Удалить фильтр", C4 = "Сбросить", D4 = "Мои фильтры", N4 = "Закрыть", B4 = "Фильтр:", w4 = "Новый", P4 = "Сохранить фильтр", x4 = "Имя", M4 = "Пожалуйста, введите имя для сохраняемого фильтра. При вводе существующего имени, уже сохраненный фильтр будет обновлен. При вводе нового имени, будет сохранен новый фильтр.", F4 = "Сохранить фильтр", q4 = "Не удалось сохранить фильтр.", $4 = "Сохраненные фильтры", U4 = "Поиск", k4 = "Удалить условие фильтра", H4 = {
  _A_FILTERS_ADD_FILTER_: v4,
  "_A_FILTERS_DELETE_FILTER_BODY_{{name}}_": "Вы уверены, что хотите удалить этот сохраненный фильтр <strong>{{ name }}</strong>?",
  _A_FILTERS_DELETE_FILTER_BTN_DELETE_: y4,
  "_A_FILTERS_DELETE_FILTER_HEADER_{{name}}_": "Удалить сохраненный фильтр",
  "_A_FILTERS_DELETE_FILTER_MSG_ERROR_{{name}}_": "Не удалось удалить выбранный фильтр <strong>{{ name }}</strong>.",
  "_A_FILTERS_DELETE_FILTER_MSG_SUCCESS_{{name}}_": "Выбранный фильтр <strong>{{ name }}</strong> был удален.",
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_: g4,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_DISABLED_: R4,
  _A_FILTERS_DELETE_FILTER_SAVED_BTN_TEXT_: O4,
  _A_FILTERS_DESELECT_ALL_: C4,
  _A_FILTERS_FILTER_SAVED_GROUP_MY_: D4,
  _A_FILTERS_HOR_CLOSE_DROPDOWN_: N4,
  _A_FILTERS_HOR_FILTER_HEADER_: B4,
  _A_FILTERS_HOR_FILTER_NEW_: w4,
  _A_FILTERS_SAVE_FILTER_SAVED_BTN_TEXT_: P4,
  _A_FILTERS_SAVE_LABEL_NAME_: x4,
  _A_FILTERS_SAVE_MODAL_BODY_PREPEND_: M4,
  _A_FILTERS_SAVE_MODAL_HEADER_: F4,
  "_A_FILTERS_SAVE_MODAL_NAME_HELP_TEXT_{{name}}_": 'Фильтр с именем <strong>"{{ name }}"</strong> будет обновлен при сохранении.',
  _A_FILTERS_SAVE_MSG_ERROR_: q4,
  "_A_FILTERS_SAVE_MSG_SUCCESS_CREATE_{{name}}_": 'Новый фильтр <strong>"{{ name }}"</strong> был сохранен.',
  "_A_FILTERS_SAVE_MSG_SUCCESS_UPDATE_{{name}}_": 'Фильтр <strong>"{{ name }}"</strong> был обновлен.',
  _A_FILTERS_SAVE_SELECT_: $4,
  "_A_FILTERS_SELECTED_{{count}}_": "{{ count }} выбрано",
  _A_FILTERS_START_SEARCH_: U4,
  _A_FILTERS_TOP_CLOSE_: k4
}, ja = {
  ar: UG,
  de: s3,
  en: L3,
  es: x3,
  fr: Y3,
  hr: u4,
  it: I4,
  ru: H4
}, V4 = "تقليل القيمة", W4 = "زيادة القيمة", G4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: V4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: W4
}, j4 = "Wert verringern", K4 = "Wert erhöhen", z4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: j4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: K4
}, Y4 = "Decrease value", X4 = "Increase value", Z4 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: Y4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: X4
}, J4 = "Disminuir valor", Q4 = "Aumentar valor", e6 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: J4,
  _A_INPUT_CURRENCY_BTN_INCREASE_: Q4
}, t6 = "Diminuer la valeur", n6 = "Augmenter la valeur", r6 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: t6,
  _A_INPUT_CURRENCY_BTN_INCREASE_: n6
}, a6 = "Smanji vrijednost", s6 = "Povećaj vrijednost", i6 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: a6,
  _A_INPUT_CURRENCY_BTN_INCREASE_: s6
}, l6 = "Diminuisci valore", o6 = "Aumenta valore", u6 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: l6,
  _A_INPUT_CURRENCY_BTN_INCREASE_: o6
}, _6 = "Уменьшить значение", d6 = "Увеличить значение", c6 = {
  _A_INPUT_CURRENCY_BTN_DECREASE_: _6,
  _A_INPUT_CURRENCY_BTN_INCREASE_: d6
}, Ka = {
  ar: G4,
  de: z4,
  en: Z4,
  es: e6,
  fr: r6,
  hr: i6,
  it: u6,
  ru: c6
}, f6 = "عرض كلمة المرور", h6 = "إخفاء كلمة المرور", A6 = {
  _A_INPUT_SHOW_PASSWORD_: f6,
  _A_INPUT_HIDE_PASSWORD_: h6
}, E6 = "Passwort anzeigen", p6 = "Passwort verbergen", T6 = {
  _A_INPUT_SHOW_PASSWORD_: E6,
  _A_INPUT_HIDE_PASSWORD_: p6
}, S6 = "Show password", m6 = "Hide password", L6 = {
  _A_INPUT_SHOW_PASSWORD_: S6,
  _A_INPUT_HIDE_PASSWORD_: m6
}, b6 = "Mostrar contraseña", I6 = "Ocultar contraseña", v6 = {
  _A_INPUT_SHOW_PASSWORD_: b6,
  _A_INPUT_HIDE_PASSWORD_: I6
}, y6 = "Afficher le mot de passe", g6 = "Masquer le mot de passe", R6 = {
  _A_INPUT_SHOW_PASSWORD_: y6,
  _A_INPUT_HIDE_PASSWORD_: g6
}, O6 = "Prikaži lozinku", C6 = "Sakrij lozinku", D6 = {
  _A_INPUT_SHOW_PASSWORD_: O6,
  _A_INPUT_HIDE_PASSWORD_: C6
}, N6 = "Mostra password", B6 = "Nascondi password", w6 = {
  _A_INPUT_SHOW_PASSWORD_: N6,
  _A_INPUT_HIDE_PASSWORD_: B6
}, P6 = "Показать пароль", x6 = "Скрыть пароль", M6 = {
  _A_INPUT_SHOW_PASSWORD_: P6,
  _A_INPUT_HIDE_PASSWORD_: x6
}, za = {
  ar: A6,
  de: T6,
  en: L6,
  es: v6,
  fr: R6,
  hr: D6,
  it: w6,
  ru: M6
}, F6 = "تقليل القيمة", q6 = "زيادة القيمة", $6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: F6,
  _A_INPUT_NUMBER_BTN_INCREASE_: q6
}, U6 = "Wert verringern", k6 = "Wert erhöhen", H6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: U6,
  _A_INPUT_NUMBER_BTN_INCREASE_: k6
}, V6 = "Decrease value", W6 = "Increase value", G6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: V6,
  _A_INPUT_NUMBER_BTN_INCREASE_: W6
}, j6 = "Disminuir valor", K6 = "Aumentar valor", z6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: j6,
  _A_INPUT_NUMBER_BTN_INCREASE_: K6
}, Y6 = "Diminuer la valeur", X6 = "Augmenter la valeur", Z6 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: Y6,
  _A_INPUT_NUMBER_BTN_INCREASE_: X6
}, J6 = "Smanji vrijednost", Q6 = "Povećaj vrijednost", e7 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: J6,
  _A_INPUT_NUMBER_BTN_INCREASE_: Q6
}, t7 = "Diminuisci valore", n7 = "Aumenta valore", r7 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: t7,
  _A_INPUT_NUMBER_BTN_INCREASE_: n7
}, a7 = "Уменьшить значение", s7 = "Увеличить значение", i7 = {
  _A_INPUT_NUMBER_BTN_DECREASE_: a7,
  _A_INPUT_NUMBER_BTN_INCREASE_: s7
}, Ya = {
  ar: $6,
  de: H6,
  en: G6,
  es: z6,
  fr: Z6,
  hr: e7,
  it: r7,
  ru: i7
}, l7 = "من", o7 = "إلى", u7 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: l7,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: o7
}, _7 = "von", d7 = "bis", c7 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: _7,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: d7
}, f7 = "from", h7 = "to", A7 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: f7,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: h7
}, E7 = "desde", p7 = "hasta", T7 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: E7,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: p7
}, S7 = "de", m7 = "à", L7 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: S7,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: m7
}, b7 = "od", I7 = "do", v7 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: b7,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: I7
}, y7 = "da", g7 = "a", R7 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: y7,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: g7
}, O7 = "от", C7 = "до", D7 = {
  _A_INPUT_NUMBER_RANGE_LABEL_MIN_: O7,
  _A_INPUT_NUMBER_RANGE_LABEL_MAX_: C7
}, Xa = {
  ar: u7,
  de: c7,
  en: A7,
  es: T7,
  fr: L7,
  hr: v7,
  it: R7,
  ru: D7
}, N7 = "القيمة الحالية", B7 = "تجاهل جميع التغييرات", w7 = "تنسيق الإدخال", P7 = "إدخال", x7 = "إعادة تعيين الإدخال إلى القيمة الحالية", M7 = {
  _A_JSON_CURRENT_VALUE_: N7,
  _A_JSON_DISCARD_ALL_CHANGES_: B7,
  "_A_JSON_ERROR_HTML_{{error}}_": "لا يمكن تحويل الإدخال إلى كائن JSON. يرجى التحقق من الإدخال الخاص بك:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: w7,
  _A_JSON_INPUT_: P7,
  _A_JSON_RESET_INPUT_: x7
}, F7 = "Aktueller Wert", q7 = "Alle Änderungen verwerfen", $7 = "Eingabe formatieren", U7 = "Eingabe", k7 = "Eingabe aktuellen Wert zurücksetzen", H7 = {
  _A_JSON_CURRENT_VALUE_: F7,
  _A_JSON_DISCARD_ALL_CHANGES_: q7,
  "_A_JSON_ERROR_HTML_{{error}}_": "Die Eingabe kann nicht in ein JSON-Objekt konvertiert werden. Bitte prüfen Sie Ihre Eingabe:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: $7,
  _A_JSON_INPUT_: U7,
  _A_JSON_RESET_INPUT_: k7
}, V7 = "Current Value", W7 = "Discard All Changes", G7 = "Format Input", j7 = "Input", K7 = "Reset Input to Current Value", z7 = {
  _A_JSON_CURRENT_VALUE_: V7,
  _A_JSON_DISCARD_ALL_CHANGES_: W7,
  "_A_JSON_ERROR_HTML_{{error}}_": "Input cannot be converted into a JSON object. Please check your input:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: G7,
  _A_JSON_INPUT_: j7,
  _A_JSON_RESET_INPUT_: K7
}, Y7 = "Valor actual", X7 = "Descartar todos los cambios", Z7 = "Formatear entrada", J7 = "Entrada", Q7 = "Restablecer entrada al valor actual", e8 = {
  _A_JSON_CURRENT_VALUE_: Y7,
  _A_JSON_DISCARD_ALL_CHANGES_: X7,
  "_A_JSON_ERROR_HTML_{{error}}_": "No se puede convertir la entrada en un objeto JSON. Por favor, revise su entrada:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: Z7,
  _A_JSON_INPUT_: J7,
  _A_JSON_RESET_INPUT_: Q7
}, t8 = "Valeur actuelle", n8 = "Annuler toutes les modifications", r8 = "Formater l'entrée", a8 = "Entrée", s8 = "Réinitialiser l'entrée à la valeur actuelle", i8 = {
  _A_JSON_CURRENT_VALUE_: t8,
  _A_JSON_DISCARD_ALL_CHANGES_: n8,
  "_A_JSON_ERROR_HTML_{{error}}_": "L'entrée ne peut pas être convertie en objet JSON. Veuillez vérifier votre entrée:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: r8,
  _A_JSON_INPUT_: a8,
  _A_JSON_RESET_INPUT_: s8
}, l8 = "Trenutna vrijednost", o8 = "Odbaci sve promjene", u8 = "Formatiraj unos", _8 = "Unos", d8 = "Poništi unos na trenutnu vrijednost", c8 = {
  _A_JSON_CURRENT_VALUE_: l8,
  _A_JSON_DISCARD_ALL_CHANGES_: o8,
  "_A_JSON_ERROR_HTML_{{error}}_": "Unos se ne može pretvoriti u JSON objekt. Molimo provjerite svoj unos:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: u8,
  _A_JSON_INPUT_: _8,
  _A_JSON_RESET_INPUT_: d8
}, f8 = "Valore attuale", h8 = "Annulla tutte le modifiche", A8 = "Formatta input", E8 = "Input", p8 = "Reimposta input al valore corrente", T8 = {
  _A_JSON_CURRENT_VALUE_: f8,
  _A_JSON_DISCARD_ALL_CHANGES_: h8,
  "_A_JSON_ERROR_HTML_{{error}}_": "L'input non può essere convertito in un oggetto JSON. Si prega di controllare l'input:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: A8,
  _A_JSON_INPUT_: E8,
  _A_JSON_RESET_INPUT_: p8
}, S8 = "Текущее значение", m8 = "Отменить все изменения", L8 = "Форматировать ввод", b8 = "Ввод", I8 = "Сбросить ввод до текущего значения", v8 = {
  _A_JSON_CURRENT_VALUE_: S8,
  _A_JSON_DISCARD_ALL_CHANGES_: m8,
  "_A_JSON_ERROR_HTML_{{error}}_": "Ввод не может быть преобразован в объект JSON. Пожалуйста, проверьте ваш ввод:<br>{{ error }}",
  _A_JSON_FORMAT_INPUT_: L8,
  _A_JSON_INPUT_: b8,
  _A_JSON_RESET_INPUT_: I8
}, Za = {
  ar: M7,
  de: H7,
  en: z7,
  es: e8,
  fr: i8,
  hr: c8,
  it: T8,
  ru: v8
}, y8 = "نسخ إلى الحافظة", g8 = "تم النسخ إلى الحافظة", R8 = {
  _A_LINK_COPY_BTN_TITLE_: y8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: g8
}, O8 = "In die Zwischenablage kopieren", C8 = "In die Zwischenablage kopiert", D8 = {
  _A_LINK_COPY_BTN_TITLE_: O8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: C8
}, N8 = "Copy to clipboard", B8 = "Copied to clipboard", w8 = {
  _A_LINK_COPY_BTN_TITLE_: N8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: B8
}, P8 = "Copiar al portapapeles", x8 = "Copiado al portapapeles", M8 = {
  _A_LINK_COPY_BTN_TITLE_: P8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: x8
}, F8 = "Copier dans le presse-papiers", q8 = "Copié dans le presse-papiers", $8 = {
  _A_LINK_COPY_BTN_TITLE_: F8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: q8
}, U8 = "Kopiraj u međuspremnik", k8 = "Kopirano u međuspremnik", H8 = {
  _A_LINK_COPY_BTN_TITLE_: U8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: k8
}, V8 = "Copia negli appunti", W8 = "Copiato negli appunti", G8 = {
  _A_LINK_COPY_BTN_TITLE_: V8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: W8
}, j8 = "Скопировать в буфер обмена", K8 = "Скопировано в буфер обмена", z8 = {
  _A_LINK_COPY_BTN_TITLE_: j8,
  _A_LINK_COPY_COPIED_TO_CLIPBOARD_: K8
}, Ja = {
  ar: R8,
  de: D8,
  en: w8,
  es: M8,
  fr: $8,
  hr: H8,
  it: G8,
  ru: z8
}, Y8 = "تحميل", X8 = {
  _A_LOADING_LOADING_: Y8
}, Z8 = "Wird geladen", J8 = {
  _A_LOADING_LOADING_: Z8
}, Q8 = "Loading", ej = {
  _A_LOADING_LOADING_: Q8
}, tj = "Cargando", nj = {
  _A_LOADING_LOADING_: tj
}, rj = "Chargement", aj = {
  _A_LOADING_LOADING_: rj
}, sj = "Učitavam", ij = {
  _A_LOADING_LOADING_: sj
}, lj = "Caricamento", oj = {
  _A_LOADING_LOADING_: lj
}, uj = "Загрузка", _j = {
  _A_LOADING_LOADING_: uj
}, Qa = {
  ar: X8,
  de: J8,
  en: ej,
  es: nj,
  fr: aj,
  hr: ij,
  it: oj,
  ru: _j
}, dj = "Breadcrumb", cj = "إظهار الروابط المخفية", fj = "إغلاق القائمة", hj = "فتح القائمة", Aj = "إغلاق القائمة الفرعية:", Ej = "القائمة الرئيسية", pj = "فتح بحث القائمة", Tj = "فتح القائمة الفرعية:", Sj = "بحث القائمة", mj = "لم يتم العثور على عناصر القائمة", Lj = "إلى القائمة الرئيسية", bj = {
  _A_MENU_2_BREADCRUMB_: dj,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: cj,
  _A_MENU_2_BTN_CLOSE_: fj,
  _A_MENU_2_BTN_OPEN_: hj,
  _A_MENU_2_CLOSE_SUBMENU_: Aj,
  _A_MENU_2_MAIN_MENU_: Ej,
  _A_MENU_2_OPEN_SEARCH_: pj,
  _A_MENU_2_OPEN_SUBMENU_: Tj,
  _A_MENU_2_SEARCH_: Sj,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "تم العثور على {{ count }} من عناصر القائمة",
  _A_MENU_2_SEARCH_NONE_FOUND_: mj,
  _A_MENU_2_TO_MAIN_MENU_: Lj
}, Ij = "Breadcrumb", vj = "Versteckte Links", yj = "Menü schließen", gj = "Menü öffnen", Rj = "Untermenü schließen:", Oj = "Hauptmenü", Cj = "Öffnen Menüsuche", Dj = "Untermenü öffnen:", Nj = "Menüsuche", Bj = "Keine Menüeinträge gefunden", wj = "Zum Hauptmenü", Pj = {
  _A_MENU_2_BREADCRUMB_: Ij,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: vj,
  _A_MENU_2_BTN_CLOSE_: yj,
  _A_MENU_2_BTN_OPEN_: gj,
  _A_MENU_2_CLOSE_SUBMENU_: Rj,
  _A_MENU_2_MAIN_MENU_: Oj,
  _A_MENU_2_OPEN_SEARCH_: Cj,
  _A_MENU_2_OPEN_SUBMENU_: Dj,
  _A_MENU_2_SEARCH_: Nj,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} Menüeinträge gefunden",
  _A_MENU_2_SEARCH_NONE_FOUND_: Bj,
  _A_MENU_2_TO_MAIN_MENU_: wj
}, xj = "Breadcrumb", Mj = "Show Hidden Links", Fj = "Close Menu", qj = "Open Menu", $j = "Close Submenu:", Uj = "Main Menu", kj = "Open Menu Search", Hj = "Open Submenu:", Vj = "Menu Search", Wj = "No Menu Entries Found", Gj = "To Main Menu", jj = {
  _A_MENU_2_BREADCRUMB_: xj,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: Mj,
  _A_MENU_2_BTN_CLOSE_: Fj,
  _A_MENU_2_BTN_OPEN_: qj,
  _A_MENU_2_CLOSE_SUBMENU_: $j,
  _A_MENU_2_MAIN_MENU_: Uj,
  _A_MENU_2_OPEN_SEARCH_: kj,
  _A_MENU_2_OPEN_SUBMENU_: Hj,
  _A_MENU_2_SEARCH_: Vj,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} Menu Entries Found",
  _A_MENU_2_SEARCH_NONE_FOUND_: Wj,
  _A_MENU_2_TO_MAIN_MENU_: Gj
}, Kj = "Breadcrumb", zj = "Mostrar enlaces ocultos", Yj = "Cerrar menú", Xj = "Abrir menú", Zj = "Cerrar submenú:", Jj = "Menú principal", Qj = "Abrir búsqueda en menú", eK = "Abrir submenú:", tK = "Búsqueda en menú", nK = "No se encontraron entradas de menú", rK = "Al menú principal", aK = {
  _A_MENU_2_BREADCRUMB_: Kj,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: zj,
  _A_MENU_2_BTN_CLOSE_: Yj,
  _A_MENU_2_BTN_OPEN_: Xj,
  _A_MENU_2_CLOSE_SUBMENU_: Zj,
  _A_MENU_2_MAIN_MENU_: Jj,
  _A_MENU_2_OPEN_SEARCH_: Qj,
  _A_MENU_2_OPEN_SUBMENU_: eK,
  _A_MENU_2_SEARCH_: tK,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} entradas de menú encontradas",
  _A_MENU_2_SEARCH_NONE_FOUND_: nK,
  _A_MENU_2_TO_MAIN_MENU_: rK
}, sK = "Breadcrumb", iK = "Afficher les liens cachés", lK = "Fermer le menu", oK = "Ouvrir le menu", uK = "Fermer le sous-menu :", _K = "Menu principal", dK = "Ouvrir la recherche dans le menu", cK = "Ouvrir le sous-menu :", fK = "Recherche dans le menu", hK = "Aucune entrée de menu trouvée", AK = "Au menu principal", EK = {
  _A_MENU_2_BREADCRUMB_: sK,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: iK,
  _A_MENU_2_BTN_CLOSE_: lK,
  _A_MENU_2_BTN_OPEN_: oK,
  _A_MENU_2_CLOSE_SUBMENU_: uK,
  _A_MENU_2_MAIN_MENU_: _K,
  _A_MENU_2_OPEN_SEARCH_: dK,
  _A_MENU_2_OPEN_SUBMENU_: cK,
  _A_MENU_2_SEARCH_: fK,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} entrées de menu trouvées",
  _A_MENU_2_SEARCH_NONE_FOUND_: hK,
  _A_MENU_2_TO_MAIN_MENU_: AK
}, pK = "_A_MENU_2_BREADCRUMB_", TK = "_A_MENU_2_BREADCRUMB_SHOW_BTN_", SK = "Zatvaranje izbornika", mK = "Otvaranje izbornika", LK = "Glavni izbornik", bK = "Zatvaranje podizbornika", IK = "Otvaranje pretraživanja", vK = "Otvaranje podizbornika:", yK = "Pretraživanje izbornika", gK = "Nisu pronađeni rezultati pretraživanja", RK = "Natrag na glavni izbornik", OK = {
  _A_MENU_2_BREADCRUMB_: pK,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: TK,
  _A_MENU_2_BTN_CLOSE_: SK,
  _A_MENU_2_BTN_OPEN_: mK,
  _A_MENU_2_MAIN_MENU_: LK,
  _A_MENU_2_CLOSE_SUBMENU_: bK,
  _A_MENU_2_OPEN_SEARCH_: IK,
  _A_MENU_2_OPEN_SUBMENU_: vK,
  _A_MENU_2_SEARCH_: yK,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "Broj pronađenih rezultata: {{ count }}",
  _A_MENU_2_SEARCH_NONE_FOUND_: gK,
  _A_MENU_2_TO_MAIN_MENU_: RK
}, CK = "Breadcrumb", DK = "Mostra link nascosti", NK = "Chiudi menu", BK = "Apri menu", wK = "Chiudi sottomenu:", PK = "Menu principale", xK = "Apri ricerca nel menu", MK = "Apri sottomenu:", FK = "Ricerca nel menu", qK = "Nessuna voce di menu trovata", $K = "Al menu principale", UK = {
  _A_MENU_2_BREADCRUMB_: CK,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: DK,
  _A_MENU_2_BTN_CLOSE_: NK,
  _A_MENU_2_BTN_OPEN_: BK,
  _A_MENU_2_CLOSE_SUBMENU_: wK,
  _A_MENU_2_MAIN_MENU_: PK,
  _A_MENU_2_OPEN_SEARCH_: xK,
  _A_MENU_2_OPEN_SUBMENU_: MK,
  _A_MENU_2_SEARCH_: FK,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "{{ count }} voci di menu trovate",
  _A_MENU_2_SEARCH_NONE_FOUND_: qK,
  _A_MENU_2_TO_MAIN_MENU_: $K
}, kK = "Breadcrumb", HK = "Скрытые ссылки", VK = "Закрыть меню", WK = "Открыть меню", GK = "Главное меню", jK = "Закрыть подменю:", KK = "Открыть поиск в меню", zK = "Открыть подменю:", YK = "Поиск в меню", XK = "Пункты меню не найдены", ZK = "В главное меню", JK = {
  _A_MENU_2_BREADCRUMB_: kK,
  _A_MENU_2_BREADCRUMB_SHOW_BTN_: HK,
  _A_MENU_2_BTN_CLOSE_: VK,
  _A_MENU_2_BTN_OPEN_: WK,
  _A_MENU_2_MAIN_MENU_: GK,
  _A_MENU_2_CLOSE_SUBMENU_: jK,
  _A_MENU_2_OPEN_SEARCH_: KK,
  _A_MENU_2_OPEN_SUBMENU_: zK,
  _A_MENU_2_SEARCH_: YK,
  "_A_MENU_2_SEARCH_ELEMENTS_{{count}}_": "Найдены пункты меню: {{ count }}",
  _A_MENU_2_SEARCH_NONE_FOUND_: XK,
  _A_MENU_2_TO_MAIN_MENU_: ZK
}, es = {
  ar: bj,
  de: Pj,
  en: jj,
  es: aK,
  fr: EK,
  hr: OK,
  it: UK,
  ru: JK
}, QK = "قطع", e9 = "حفظ", t9 = "إغلاق النافذة المنبثقة (موجودة في الرأس)", n9 = "إغلاق النافذة المنبثقة (موجودة في التذييل)", r9 = "حفظ البيانات في النافذة المنبثقة", a9 = {
  _A_MODAL_BTN_CANCEL_: QK,
  _A_MODAL_BTN_SAVE_: e9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: t9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: n9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: r9
}, s9 = "Abbrechen", i9 = "Speichern", l9 = "Modales Fenster schließen (im Header angeordnet)", o9 = "Modales Fenster schließen (im Footer angeordnet)", u9 = "Daten im modalen Fenster speichern", _9 = {
  _A_MODAL_BTN_CANCEL_: s9,
  _A_MODAL_BTN_SAVE_: i9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: l9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: o9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: u9
}, d9 = "cancel", c9 = "save", f9 = "Close modal window (located in the header)", h9 = "Close modal window (located in the footer)", A9 = "Save data in the modal window", E9 = {
  _A_MODAL_BTN_CANCEL_: d9,
  _A_MODAL_BTN_SAVE_: c9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: f9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: h9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: A9
}, p9 = "Interrumpir", T9 = "Guardar", S9 = "Cerrar ventana modal (ubicada en el encabezado)", m9 = "Cerrar ventana modal (ubicada en el pie de página)", L9 = "Guardar los datos en la ventana modal", b9 = {
  _A_MODAL_BTN_CANCEL_: p9,
  _A_MODAL_BTN_SAVE_: T9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: S9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: m9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: L9
}, I9 = "Interrompre", v9 = "Enregistrer", y9 = "Fermer la fenêtre modale (située dans l'en-tête)", g9 = "Fermer la fenêtre modale (située dans le pied de page)", R9 = "Enregistrer les données dans la fenêtre modale", O9 = {
  _A_MODAL_BTN_CANCEL_: I9,
  _A_MODAL_BTN_SAVE_: v9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: y9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: g9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: R9
}, C9 = "Odustani", D9 = "Spremi", N9 = "Zatvori modalni prozor (smještena u zaglavlju)", B9 = "Zatvori modalni prozor (smještena u podnožju)", w9 = "Spremi podatke u modalnom prozoru", P9 = {
  _A_MODAL_BTN_CANCEL_: C9,
  _A_MODAL_BTN_SAVE_: D9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: N9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: B9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: w9
}, x9 = "Interrompere", M9 = "Salva", F9 = "Chiudi finestra modale (situata nell'intestazione)", q9 = "Chiudi finestra modale (situata nel piè di pagina)", $9 = "Salva i dati nella finestra modale", U9 = {
  _A_MODAL_BTN_CANCEL_: x9,
  _A_MODAL_BTN_SAVE_: M9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: F9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: q9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: $9
}, k9 = "Прервать", H9 = "Сохранить", V9 = "Закрыть модальное окно (расположена в хедере)", W9 = "Закрыть модальное окно (расположена в футере)", G9 = "Сохранить данные в модальном окне", j9 = {
  _A_MODAL_BTN_CANCEL_: k9,
  _A_MODAL_BTN_SAVE_: H9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_HEADER_: V9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_CLOSE_FOOTER_: W9,
  _A_MODAL_BTN_TEXT_SCREEN_READER_SAVE_: G9
}, ts = {
  ar: a9,
  de: _9,
  en: E9,
  es: b9,
  fr: O9,
  hr: P9,
  it: U9,
  ru: j9
}, K9 = "إزالة من القائمة", z9 = "نقل إلى نهاية القائمة", Y9 = "الإجراءات لـ", X9 = "نقل إلى بداية القائمة", Z9 = "إلغاء تحديد الكل", J9 = "إدارة التحديد", Q9 = "اختر عنصراً", ez = "لم يتم اختيار عناصر", tz = "تحديد الكل", nz = {
  _A_MULTISELECT_ORDERED_BTN_DELETE_: K9,
  _A_MULTISELECT_ORDERED_BTN_DOWN_: z9,
  _A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_: Y9,
  _A_MULTISELECT_ORDERED_BTN_UP_: X9,
  _A_MULTISELECT_ORDERED_DESELECT_ALL_: Z9,
  _A_MULTISELECT_ORDERED_GROUP_ALL_: J9,
  _A_MULTISELECT_ORDERED_LABEL_SELECT_: Q9,
  _A_MULTISELECT_ORDERED_MODEL_EMPTY_: ez,
  _A_MULTISELECT_ORDERED_SELECT_ALL_: tz
}, rz = "Aus der Liste entfernen", az = "Weiter ans Listenende verschieben", sz = "Aktionen für", iz = "Weiter an den Listenanfang verschieben", lz = "Alle abwählen", oz = "Auswahlsteuerung", uz = "Element auswählen", _z = "Keine Elemente ausgewählt", dz = "Alle auswählen", cz = {
  _A_MULTISELECT_ORDERED_BTN_DELETE_: rz,
  _A_MULTISELECT_ORDERED_BTN_DOWN_: az,
  _A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_: sz,
  _A_MULTISELECT_ORDERED_BTN_UP_: iz,
  _A_MULTISELECT_ORDERED_DESELECT_ALL_: lz,
  _A_MULTISELECT_ORDERED_GROUP_ALL_: oz,
  _A_MULTISELECT_ORDERED_LABEL_SELECT_: uz,
  _A_MULTISELECT_ORDERED_MODEL_EMPTY_: _z,
  _A_MULTISELECT_ORDERED_SELECT_ALL_: dz
}, fz = "Remove from list", hz = "Move closer to the end of the list", Az = "Actions for", Ez = "Move closer to the beginning of the list", pz = "Deselect all", Tz = "Selection control", Sz = "Select an item", mz = "No items selected", Lz = "Select all", bz = {
  _A_MULTISELECT_ORDERED_BTN_DELETE_: fz,
  _A_MULTISELECT_ORDERED_BTN_DOWN_: hz,
  _A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_: Az,
  _A_MULTISELECT_ORDERED_BTN_UP_: Ez,
  _A_MULTISELECT_ORDERED_DESELECT_ALL_: pz,
  _A_MULTISELECT_ORDERED_GROUP_ALL_: Tz,
  _A_MULTISELECT_ORDERED_LABEL_SELECT_: Sz,
  _A_MULTISELECT_ORDERED_MODEL_EMPTY_: mz,
  _A_MULTISELECT_ORDERED_SELECT_ALL_: Lz
}, Iz = "Eliminar de la lista", vz = "Mover más cerca del final de la lista", yz = "Acciones para", gz = "Mover más cerca del principio de la lista", Rz = "Deseleccionar todo", Oz = "Control de selección", Cz = "Seleccione un elemento", Dz = "No hay elementos seleccionados", Nz = "Seleccionar todo", Bz = {
  _A_MULTISELECT_ORDERED_BTN_DELETE_: Iz,
  _A_MULTISELECT_ORDERED_BTN_DOWN_: vz,
  _A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_: yz,
  _A_MULTISELECT_ORDERED_BTN_UP_: gz,
  _A_MULTISELECT_ORDERED_DESELECT_ALL_: Rz,
  _A_MULTISELECT_ORDERED_GROUP_ALL_: Oz,
  _A_MULTISELECT_ORDERED_LABEL_SELECT_: Cz,
  _A_MULTISELECT_ORDERED_MODEL_EMPTY_: Dz,
  _A_MULTISELECT_ORDERED_SELECT_ALL_: Nz
}, wz = "Supprimer de la liste", Pz = "Déplacer vers la fin de la liste", xz = "Actions pour", Mz = "Déplacer vers le début de la liste", Fz = "Tout désélectionner", qz = "Contrôle de sélection", $z = "Sélectionnez un élément", Uz = "Aucun élément sélectionné", kz = "Tout sélectionner", Hz = {
  _A_MULTISELECT_ORDERED_BTN_DELETE_: wz,
  _A_MULTISELECT_ORDERED_BTN_DOWN_: Pz,
  _A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_: xz,
  _A_MULTISELECT_ORDERED_BTN_UP_: Mz,
  _A_MULTISELECT_ORDERED_DESELECT_ALL_: Fz,
  _A_MULTISELECT_ORDERED_GROUP_ALL_: qz,
  _A_MULTISELECT_ORDERED_LABEL_SELECT_: $z,
  _A_MULTISELECT_ORDERED_MODEL_EMPTY_: Uz,
  _A_MULTISELECT_ORDERED_SELECT_ALL_: kz
}, Vz = "Ukloni iz popisa", Wz = "Pomakni bliže kraju popisa", Gz = "Radnje za", jz = "Pomakni bliže početku popisa", Kz = "Poništi odabir svega", zz = "Upravljanje odabirom", Yz = "Odaberite stavku", Xz = "Nema odabranih stavki", Zz = "Odaberi sve", Jz = {
  _A_MULTISELECT_ORDERED_BTN_DELETE_: Vz,
  _A_MULTISELECT_ORDERED_BTN_DOWN_: Wz,
  _A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_: Gz,
  _A_MULTISELECT_ORDERED_BTN_UP_: jz,
  _A_MULTISELECT_ORDERED_DESELECT_ALL_: Kz,
  _A_MULTISELECT_ORDERED_GROUP_ALL_: zz,
  _A_MULTISELECT_ORDERED_LABEL_SELECT_: Yz,
  _A_MULTISELECT_ORDERED_MODEL_EMPTY_: Xz,
  _A_MULTISELECT_ORDERED_SELECT_ALL_: Zz
}, Qz = "Rimuovi dalla lista", eY = "Sposta verso la fine dell'elenco", tY = "Azioni per", nY = "Sposta verso l'inizio dell'elenco", rY = "Deseleziona tutto", aY = "Controllo della selezione", sY = "Seleziona un elemento", iY = "Nessun elemento selezionato", lY = "Seleziona tutto", oY = {
  _A_MULTISELECT_ORDERED_BTN_DELETE_: Qz,
  _A_MULTISELECT_ORDERED_BTN_DOWN_: eY,
  _A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_: tY,
  _A_MULTISELECT_ORDERED_BTN_UP_: nY,
  _A_MULTISELECT_ORDERED_DESELECT_ALL_: rY,
  _A_MULTISELECT_ORDERED_GROUP_ALL_: aY,
  _A_MULTISELECT_ORDERED_LABEL_SELECT_: sY,
  _A_MULTISELECT_ORDERED_MODEL_EMPTY_: iY,
  _A_MULTISELECT_ORDERED_SELECT_ALL_: lY
}, uY = "Удалить из списка", _Y = "Переместить ближе к концу списка", dY = "Действия с", cY = "Переместить ближе к началу списка", fY = "Очистить выбор", hY = "Управление выбором", AY = "Выберите элемент", EY = "Элементы не выбраны", pY = "Выбрать все элементы", TY = {
  _A_MULTISELECT_ORDERED_BTN_DELETE_: uY,
  _A_MULTISELECT_ORDERED_BTN_DOWN_: _Y,
  _A_MULTISELECT_ORDERED_BTN_GROUP_ARIA_LABEL_: dY,
  _A_MULTISELECT_ORDERED_BTN_UP_: cY,
  _A_MULTISELECT_ORDERED_DESELECT_ALL_: fY,
  _A_MULTISELECT_ORDERED_GROUP_ALL_: hY,
  _A_MULTISELECT_ORDERED_LABEL_SELECT_: AY,
  _A_MULTISELECT_ORDERED_MODEL_EMPTY_: EY,
  _A_MULTISELECT_ORDERED_SELECT_ALL_: pY
}, ns = {
  ar: nz,
  de: cz,
  en: bz,
  es: Bz,
  fr: Hz,
  hr: Jz,
  it: oY,
  ru: TY
}, SY = "[ALOHA]", mY = "[ALOHA]", LY = "[ALOHA]", bY = "التنقل بين الصفحات", IY = "[ALOHA]", vY = "[ALOHA]", yY = {
  _A_COUNT_PER_PAGE_: SY,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: mY,
  _A_PAGINATION_LAST_PAGE_: LY,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ allPages }}ل {{ currentPage }}",
  _A_PAGINATION_NAVIGATION_: bY,
  _A_PAGINATION_NEXT_PAGE_: IY,
  _A_PAGINATION_PREVIOUS_PAGE_: vY,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, gY = "Pro Seite:", RY = "Zur ersten Seite", OY = "Zur letzten Seite", CY = "Paginierungsnavigation", DY = "Zur nächsten Seite", NY = "Zur vorherigen Seite", BY = {
  _A_COUNT_PER_PAGE_: gY,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Zeilen pro Seite: {{ count }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} von {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: RY,
  _A_PAGINATION_LAST_PAGE_: OY,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} von {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: CY,
  _A_PAGINATION_NEXT_PAGE_: DY,
  _A_PAGINATION_PREVIOUS_PAGE_: NY,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "Zur Seite Nummer {{ page }}"
}, wY = "Per page:", PY = "To first page", xY = "To last page", MY = "Pagination navigation", FY = "To next page", qY = "To previous page", $Y = {
  _A_COUNT_PER_PAGE_: wY,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Items per page:",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} to {{ current }} of {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: PY,
  _A_PAGINATION_LAST_PAGE_: xY,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} of {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: MY,
  _A_PAGINATION_NEXT_PAGE_: FY,
  _A_PAGINATION_PREVIOUS_PAGE_: qY,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "To page {{ page }}"
}, UY = "[ALOHA]", kY = "[ALOHA]", HY = "[ALOHA]", VY = "Navegación de paginación", WY = "[ALOHA]", GY = "[ALOHA]", jY = {
  _A_COUNT_PER_PAGE_: UY,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: kY,
  _A_PAGINATION_LAST_PAGE_: HY,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} de {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: VY,
  _A_PAGINATION_NEXT_PAGE_: WY,
  _A_PAGINATION_PREVIOUS_PAGE_: GY,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, KY = "[ALOHA]", zY = "[ALOHA]", YY = "[ALOHA]", XY = "Navigation dans la pagination", ZY = "[ALOHA]", JY = "[ALOHA]", QY = {
  _A_COUNT_PER_PAGE_: KY,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: zY,
  _A_PAGINATION_LAST_PAGE_: YY,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} de {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: XY,
  _A_PAGINATION_NEXT_PAGE_: ZY,
  _A_PAGINATION_PREVIOUS_PAGE_: JY,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, eX = "Po stranici:", tX = "[ALOHA]", nX = "[ALOHA]", rX = "Navigacija po stranicama", aX = "[ALOHA]", sX = "[ALOHA]", iX = {
  _A_COUNT_PER_PAGE_: eX,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Broj redaka po stranici: {{ count }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} od {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: tX,
  _A_PAGINATION_LAST_PAGE_: nX,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} iz {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: rX,
  _A_PAGINATION_NEXT_PAGE_: aX,
  _A_PAGINATION_PREVIOUS_PAGE_: sX,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, lX = "[ALOHA]", oX = "[ALOHA]", uX = "[ALOHA]", _X = "Navigazione dell'impaginazione", dX = "[ALOHA]", cX = "[ALOHA]", fX = {
  _A_COUNT_PER_PAGE_: lX,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "[ALOHA]",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "[ALOHA]",
  _A_PAGINATION_FIRST_PAGE_: oX,
  _A_PAGINATION_LAST_PAGE_: uX,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} Di {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: _X,
  _A_PAGINATION_NEXT_PAGE_: dX,
  _A_PAGINATION_PREVIOUS_PAGE_: cX,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "[ALOHA]"
}, hX = "На странице:", AX = "К первой странице", EX = "К последней странице", pX = "Навигация по страницам", TX = "К следующей странице", SX = "К предыдущей странице", mX = {
  _A_COUNT_PER_PAGE_: hX,
  "_A_COUNT_PER_PAGE_ITEM_{{count}}_": "Строк на странице: {{ cont }}",
  "_A_COUNT_PER_PAGE_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} из {{ count }}",
  _A_PAGINATION_FIRST_PAGE_: AX,
  _A_PAGINATION_LAST_PAGE_: EX,
  "_A_PAGINATION_MOBILE_{{currentPage}}_{{allPages}}_": "{{ currentPage }} из {{ allPages }}",
  _A_PAGINATION_NAVIGATION_: pX,
  _A_PAGINATION_NEXT_PAGE_: TX,
  _A_PAGINATION_PREVIOUS_PAGE_: SX,
  "_A_PAGINATION_TO_PAGE_{{page}}_": "К странице номер {{ page }}"
}, rs = {
  ar: yY,
  de: BY,
  en: $Y,
  es: jY,
  fr: QY,
  hr: iX,
  it: fX,
  ru: mX
}, LX = "[لا توجد عناصر متاحة للاختيار]", bX = "بحث", IX = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: LX,
  _A_RADIO_SEARCH_: bX
}, vX = "[Keine Elemente zur Auswahl verfügbar]", yX = "Suche", gX = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: vX,
  _A_RADIO_SEARCH_: yX
}, RX = "[No items available for selection]", OX = "Search", CX = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: RX,
  _A_RADIO_SEARCH_: OX
}, DX = "[No hay elementos disponibles para seleccionar]", NX = "Buscar", BX = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: DX,
  _A_RADIO_SEARCH_: NX
}, wX = "[Aucun élément disponible pour la sélection]", PX = "Recherche", xX = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: wX,
  _A_RADIO_SEARCH_: PX
}, MX = "[Nema dostupnih elemenata za odabir]", FX = "Pretraživanje", qX = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: MX,
  _A_RADIO_SEARCH_: FX
}, $X = "[Nessun elemento disponibile per la selezione]", UX = "Cerca", kX = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: $X,
  _A_RADIO_SEARCH_: UX
}, HX = "[Нет элементов для выбора]", VX = "Поиск", WX = {
  _A_RADIO_HAS_NOT_ELEMENTS_WITH_SEARCH_: HX,
  _A_RADIO_SEARCH_: VX
}, as = {
  ar: IX,
  de: gX,
  en: CX,
  es: BX,
  fr: xX,
  hr: qX,
  it: kX,
  ru: WX
}, GX = "الحقول المميزة بعلامة النجمة * مطلوبة.", jX = {
  _A_REQUIRED_TEXT_: GX
}, KX = "Die mit *Sternchen versehenen Felder sind Pflichtfelder.", zX = {
  _A_REQUIRED_TEXT_: KX
}, YX = "Fields marked with an asterisk * are required.", XX = {
  _A_REQUIRED_TEXT_: YX
}, ZX = "Los campos marcados con un asterisco * son obligatorios.", JX = {
  _A_REQUIRED_TEXT_: ZX
}, QX = "Les champs marqués d'un astérisque * sont obligatoires.", eZ = {
  _A_REQUIRED_TEXT_: QX
}, tZ = "Polja označena zvjezdicom * su obavezna.", nZ = {
  _A_REQUIRED_TEXT_: tZ
}, rZ = "I campi contrassegnati con un asterisco * sono obbligatori.", aZ = {
  _A_REQUIRED_TEXT_: rZ
}, sZ = "Поля, отмеченные звездочкой *, являются обязательными.", iZ = {
  _A_REQUIRED_TEXT_: sZ
}, ss = {
  ar: jX,
  de: zX,
  en: XX,
  es: JX,
  fr: eZ,
  hr: nZ,
  it: aZ,
  ru: iZ
}, lZ = "عرض كلمة المرور", oZ = "إخفاء كلمة المرور", uZ = {
  _A_INPUT_SHOW_PASSWORD_: lZ,
  _A_INPUT_HIDE_PASSWORD_: oZ
}, _Z = "Dynamische Parameter werden in Routen verwendet, um Daten innerhalb des Pfads zu übergeben. Sie werden durch einen Doppelpunkt <code>:</code> vor dem Parameternamen gekennzeichnet, zum Beispiel: <code>/user/:id</code>. Beim Navigieren wird dieser Parameter durch einen bestimmten Wert ersetzt, z. B.: <code>/user/123</code>.", dZ = '<span lang="en">URL</span>-Parameter ermöglichen das Übertragen zusätzlicher Informationen in der Anfrage. Sie werden nach dem <code>?</code>-Zeichen in der Adressleiste hinzugefügt und im Format "Schlüssel=Wert" geschrieben. Zum Beispiel: <code>?limit=10&sort=asc</code>.', cZ = "Die Adresse bestimmt, wohin der Link führt. Sie kann statisch sein (z. B. <code>/home</code>) oder dynamische Parameter enthalten (z. B. <code>/user/:id</code>). Wählen Sie die Adresse für die Navigation.", fZ = "Legt fest, wo der Link geöffnet wird. Verfügbare Optionen: im selben Fenster (<code>_self</code>), in einem neuen Fenster oder Tab (<code>_blank</code>), im übergeordneten Frame (<code>_parent</code>) oder im äußersten Frame (<code>_top</code>).", hZ = "Dynamische Parameter", AZ = '<span lang="en">URL</span>-Parameter', EZ = "Adresse auswählen", pZ = '<span lang="en">target</span>-Attribut', TZ = 'In einem neuen Tab öffnen <strong lang="en">_blank</strong>', SZ = 'Im übergeordneten Frame öffnen <strong lang="en">_parent</strong>', mZ = 'Im selben Fenster öffnen <strong lang="en">_self</strong>', LZ = 'Im äußersten Frame öffnen <strong lang="en">_top</strong>', bZ = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: _Z,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: dZ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: cZ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: fZ,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: hZ,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: AZ,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: EZ,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: pZ,
  _A_TARGET_BLANK_: TZ,
  _A_TARGET_PARENT_: SZ,
  _A_TARGET_SELF_: mZ,
  _A_TARGET_TOP_: LZ
}, IZ = "Dynamic parameters are used in routes to pass data within the path. They are denoted by a colon <code>:</code> before the parameter name, for example: <code>/user/:id</code>. When navigating, this parameter is replaced with a specific value, such as: <code>/user/123</code>.", vZ = '<span lang="en">URL</span> parameters allow passing additional information in the request. They are added after the <code>?</code> symbol in the address bar and follow the format "key=value". For example: <code>?limit=10&sort=asc</code>.', yZ = "The address determines where the link will navigate. It can be static (e.g., <code>/home</code>) or contain dynamic parameters (e.g., <code>/user/:id</code>). Select the address for navigation.", gZ = "Defines where the link will open. Available options: in the same window (<code>_self</code>), in a new window or tab (<code>_blank</code>), in the parent frame (<code>_parent</code>), or in the outermost frame (<code>_top</code>).", RZ = "Dynamic parameters", OZ = '<span lang="en">URL</span> parameters', CZ = "Select address", DZ = '<span lang="en">target</span> attribute', NZ = 'Open in a new tab <strong lang="en">_blank</strong>', BZ = 'Open in the parent frame <strong lang="en">_parent</strong>', wZ = 'Open in the same window <strong lang="en">_self</strong>', PZ = 'Open in the outermost frame <strong lang="en">_top</strong>', xZ = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: IZ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: vZ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: yZ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: gZ,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: RZ,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: OZ,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: CZ,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: DZ,
  _A_TARGET_BLANK_: NZ,
  _A_TARGET_PARENT_: BZ,
  _A_TARGET_SELF_: wZ,
  _A_TARGET_TOP_: PZ
}, MZ = "Los parámetros dinámicos se utilizan en las rutas para transmitir datos dentro de la ruta. Se denotan con dos puntos <code>:</code> antes del nombre del parámetro, por ejemplo: <code>/user/:id</code>. Al navegar, este parámetro se reemplaza con un valor específico, como: <code>/user/123</code>.", FZ = 'Los parámetros de <span lang="en">URL</span> permiten enviar información adicional en la solicitud. Se agregan después del símbolo <code>?</code> en la barra de direcciones y tienen el formato "clave=valor". Por ejemplo: <code>?limit=10&sort=asc</code>.', qZ = "La dirección determina a dónde llevará el enlace. Puede ser estática (por ejemplo, <code>/home</code>) o contener parámetros dinámicos (por ejemplo, <code>/user/:id</code>). Seleccione la dirección de navegación.", $Z = "Define dónde se abrirá el enlace. Opciones disponibles: en la misma ventana (<code>_self</code>), en una nueva ventana o pestaña (<code>_blank</code>), en el marco padre (<code>_parent</code>) o en el marco superior (<code>_top</code>).", UZ = "Parámetros dinámicos", kZ = 'Parámetros de <span lang="en">URL</span>', HZ = "Seleccionar dirección", VZ = 'Atributo <span lang="en">target</span>', WZ = 'Abrir en una nueva pestaña <strong lang="en">_blank</strong>', GZ = 'Abrir en el marco padre <strong lang="en">_parent</strong>', jZ = 'Abrir en la misma ventana <strong lang="en">_self</strong>', KZ = 'Abrir en el marco superior <strong lang="en">_top</strong>', zZ = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: MZ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: FZ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: qZ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: $Z,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: UZ,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: kZ,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: HZ,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: VZ,
  _A_TARGET_BLANK_: WZ,
  _A_TARGET_PARENT_: GZ,
  _A_TARGET_SELF_: jZ,
  _A_TARGET_TOP_: KZ
}, YZ = "Les paramètres dynamiques sont utilisés dans les routes pour transmettre des données dans le chemin. Ils sont indiqués par un deux-points <code>:</code> avant le nom du paramètre, par exemple : <code>/user/:id</code>. Lors de la navigation, ce paramètre est remplacé par une valeur spécifique, comme : <code>/user/123</code>.", XZ = `Les paramètres <span lang="en">URL</span> permettent de transmettre des informations supplémentaires dans la requête. Ils sont ajoutés après le symbole <code>?</code> dans la barre d'adresse et sont formatés en "clé=valeur". Par exemple : <code>?limit=10&sort=asc</code>.`, ZZ = "L'adresse détermine où le lien dirigera. Elle peut être statique (ex. <code>/home</code>) ou contenir des paramètres dynamiques (ex. <code>/user/:id</code>). Sélectionnez l'adresse de navigation.", JZ = "Définit où le lien s'ouvrira. Options disponibles : dans la même fenêtre (<code>_self</code>), dans une nouvelle fenêtre ou un nouvel onglet (<code>_blank</code>), dans le cadre parent (<code>_parent</code>) ou dans le cadre principal (<code>_top</code>).", QZ = "Paramètres dynamiques", eJ = 'Paramètres <span lang="en">URL</span>', tJ = "Choisir une adresse", nJ = 'Attribut <span lang="en">target</span>', rJ = 'Ouvrir dans un nouvel onglet <strong lang="en">_blank</strong>', aJ = 'Ouvrir dans le cadre parent <strong lang="en">_parent</strong>', sJ = 'Ouvrir dans la même fenêtre <strong lang="en">_self</strong>', iJ = 'Ouvrir dans le cadre principal <strong lang="en">_top</strong>', lJ = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: YZ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: XZ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: ZZ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: JZ,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: QZ,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: eJ,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: tJ,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: nJ,
  _A_TARGET_BLANK_: rJ,
  _A_TARGET_PARENT_: aJ,
  _A_TARGET_SELF_: sJ,
  _A_TARGET_TOP_: iJ
}, oJ = "Dinamički parametri koriste se u rutama za prijenos podataka unutar putanje. Označeni su dvotočkom <code>:</code> ispred naziva parametra, primjer: <code>/user/:id</code>. Prilikom navigacije, ovaj parametar zamjenjuje se specifičnom vrijednošću, primjer: <code>/user/123</code>.", uJ = 'Parametri <span lang="en">URL</span> omogućuju prijenos dodatnih informacija u zahtjevu. Dodaju se nakon simbola <code>?</code> u adresnoj traci i zapisani su u formatu "ključ=vrijednost". Na primjer: <code>?limit=10&sort=asc</code>.', _J = "Adresa određuje kamo će veza voditi. Može biti statična (npr. <code>/home</code>) ili sadržavati dinamičke parametre (npr. <code>/user/:id</code>). Odaberite adresu za navigaciju.", dJ = "Određuje gdje će se veza otvoriti. Dostupne opcije: u istom prozoru (<code>_self</code>), u novom prozoru ili kartici (<code>_blank</code>), u roditeljskom okviru (<code>_parent</code>) ili u najvišem okviru (<code>_top</code>).", cJ = "Dinamički parametri", fJ = 'Parametri <span lang="en">URL</span>', hJ = "Odaberi adresu", AJ = 'Atribut <span lang="en">target</span>', EJ = 'Otvori u novoj kartici <strong lang="en">_blank</strong>', pJ = 'Otvori u roditeljskom okviru <strong lang="en">_parent</strong>', TJ = 'Otvori u istom prozoru <strong lang="en">_self</strong>', SJ = 'Otvori u najvišem okviru <strong lang="en">_top</strong>', mJ = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: oJ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: uJ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: _J,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: dJ,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: cJ,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: fJ,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: hJ,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: AJ,
  _A_TARGET_BLANK_: EJ,
  _A_TARGET_PARENT_: pJ,
  _A_TARGET_SELF_: TJ,
  _A_TARGET_TOP_: SJ
}, LJ = "I parametri dinamici vengono utilizzati nelle rotte per trasmettere dati all'interno del percorso. Sono indicati con due punti <code>:</code> prima del nome del parametro, ad esempio: <code>/user/:id</code>. Durante la navigazione, questo parametro viene sostituito con un valore specifico, ad esempio: <code>/user/123</code>.", bJ = 'I parametri <span lang="en">URL</span> consentono di trasmettere informazioni aggiuntive nella richiesta. Vengono aggiunti dopo il simbolo <code>?</code> nella barra degli indirizzi e sono scritti nel formato "chiave=valore". Ad esempio: <code>?limit=10&sort=asc</code>.', IJ = "L'indirizzo determina dove porterà il link. Può essere statico (ad esempio, <code>/home</code>) o contenere parametri dinamici (ad esempio, <code>/user/:id</code>). Selezionare l'indirizzo per la navigazione.", vJ = "Definisce dove si aprirà il link. Opzioni disponibili: nella stessa finestra (<code>_self</code>), in una nuova finestra o scheda (<code>_blank</code>), nel frame padre (<code>_parent</code>) o nel frame superiore (<code>_top</code>).", yJ = "Parametri dinamici", gJ = 'Parametri <span lang="en">URL</span>', RJ = "Seleziona indirizzo", OJ = 'Attributo <span lang="en">target</span>', CJ = 'Apri in una nuova scheda <strong lang="en">_blank</strong>', DJ = 'Apri nel frame padre <strong lang="en">_parent</strong>', NJ = 'Apri nella stessa finestra <strong lang="en">_self</strong>', BJ = 'Apri nel frame superiore <strong lang="en">_top</strong>', wJ = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: LJ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: bJ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: IJ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: vJ,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: yJ,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: gJ,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: RJ,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: OJ,
  _A_TARGET_BLANK_: CJ,
  _A_TARGET_PARENT_: DJ,
  _A_TARGET_SELF_: NJ,
  _A_TARGET_TOP_: BJ
}, PJ = "Динамические параметры используются в маршрутах для передачи данных внутри пути. Они обозначаются двоеточием <code>:</code> перед именем параметра, например: <code>/user/:id</code>. При переходе этот параметр заменяется конкретным значением, например: <code>/user/123</code>.", xJ = 'Параметры <span lang="en">URL</span> позволяют передавать дополнительную информацию в запросе. Они добавляются после знака <code>?</code> в адресной строке и записываются в формате «ключ=значение». Например: <code>?limit=10&sort=asc</code>.', MJ = "Адрес определяет, куда будет вести ссылка. Он может быть статическим (например, <code>/home</code>) или содержать динамические параметры (например, <code>/user/:id</code>). Выберите адрес, по которому будет происходить навигация.", FJ = "Определяет, где будет открываться ссылка. Доступные варианты: в том же окне (<code>_self</code>), в новом окне или вкладке (<code>_blank</code>), в родительском фрейме (<code>_parent</code>) или во внешнем фрейме (<code>_top</code>).", qJ = "Динамические параметры", $J = 'Параметры <span lang="en">URL</span>', UJ = "Выберите адрес", kJ = 'Атрибут <span lang="en">target</span>', HJ = 'Открыть в новой вкладке <strong lang="en">_blank</strong>', VJ = 'Открыть в родительском фрейме <strong lang="en">_parent</strong>', WJ = 'Открыть в этом же окне <strong lang="en">_self</strong>', GJ = 'Открыть во внешнем фрейме <strong lang="en">_top</strong>', jJ = {
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_PARAM_: PJ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_QUERY_: xJ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_ROUTE_: MJ,
  _A_ROUTER_LINK_CONFIG_HELP_TEXT_TARGET_: FJ,
  _A_ROUTER_LINK_CONFIG_LABEL_PARAM_: qJ,
  _A_ROUTER_LINK_CONFIG_LABEL_QUERY_: $J,
  _A_ROUTER_LINK_CONFIG_LABEL_ROUTE_: UJ,
  _A_ROUTER_LINK_CONFIG_LABEL_TARGET_: kJ,
  _A_TARGET_BLANK_: HJ,
  _A_TARGET_PARENT_: VJ,
  _A_TARGET_SELF_: WJ,
  _A_TARGET_TOP_: GJ
}, is = {
  ar: uZ,
  de: bZ,
  en: xZ,
  es: zZ,
  fr: lJ,
  hr: mJ,
  it: wJ,
  ru: jJ
}, KJ = "اختر هذا الخيار فقط", zJ = "[No choices]", YJ = "Search", XJ = {
  _A_SELECT_EXCLUSIVE_: KJ,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: zJ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: YJ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, ZJ = "Nur diese Option auswählen", JJ = "[Keine Auswahl]", QJ = "Suche", eQ = {
  _A_SELECT_EXCLUSIVE_: ZJ,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: JJ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} ausgewählt",
  _A_SELECT_SEARCH_: QJ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} ausgewählt"
}, tQ = "Select only this option", nQ = "[No choices]", rQ = "Search", aQ = {
  _A_SELECT_EXCLUSIVE_: tQ,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: nQ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: rQ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, sQ = "Seleccionar solo esta opción", iQ = "[No choices]", lQ = "Search", oQ = {
  _A_SELECT_EXCLUSIVE_: sQ,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: iQ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: lQ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, uQ = "Sélectionner uniquement cette option", _Q = "[No choices]", dQ = "Search", cQ = {
  _A_SELECT_EXCLUSIVE_: uQ,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: _Q,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: dQ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, fQ = "Odaberi samo ovu opciju", hQ = "[No choices]", AQ = "Search", EQ = {
  _A_SELECT_EXCLUSIVE_: fQ,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: hQ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: AQ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, pQ = "Seleziona solo questa opzione", TQ = "[No choices]", SQ = "Search", mQ = {
  _A_SELECT_EXCLUSIVE_: pQ,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: TQ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} selected",
  _A_SELECT_SEARCH_: SQ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} selected"
}, LQ = "Выбрать только этот вариант", bQ = "[Нет элементов для выбора]", IQ = "Поиск", vQ = {
  _A_SELECT_EXCLUSIVE_: LQ,
  _A_SELECT_HAS_NOT_ELEMENTS_WITH_SEARCH_: bQ,
  "_A_SELECT_MORE_SELECTED_{{count}}_": "+ {{count}} выбрано",
  _A_SELECT_SEARCH_: IQ,
  "_A_SELECT_SELECTED_{{count}}_": "{{count}} выбрано"
}, ls = {
  ar: XJ,
  de: eQ,
  en: aQ,
  es: oQ,
  fr: cQ,
  hr: EQ,
  it: mQ,
  ru: vQ
}, yQ = "إظهار أقل", gQ = "أظهر المزيد", RQ = "إظهار أقل - يمكن تجاهل زر لأن جميع المحتويات قابلة للقراءة بواسطة قارئات الشاشة بالفعل", OQ = "إظهار المزيد - يمكن تجاهل زر لأن جميع المحتويات قابلة للقراءة بواسطة قارئات الشاشة بالفعل", CQ = {
  _A_SHOW_MORE_LESS_: yQ,
  _A_SHOW_MORE_MORE_: gQ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: RQ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: OQ
}, DQ = "Mehr anzeigen", NQ = "Weniger anzeigen", BQ = "Weniger anzeigen - Button kann ignoriert werden, da der gesamte Inhalt für ScreenReader bereits lesbar ist", wQ = "Mehr anzeigen - Button kann ignoriert werden, da der gesamte Inhalt für ScreenReader bereits lesbar ist", PQ = {
  _A_SHOW_MORE_MORE_: DQ,
  _A_SHOW_MORE_LESS_: NQ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: BQ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: wQ
}, xQ = "Show less", MQ = "Show more", FQ = "Show less - Button can be ignored since all content is already readable by screen readers", qQ = "Show more - Button can be ignored since all content is already readable by screen readers", $Q = {
  _A_SHOW_MORE_LESS_: xQ,
  _A_SHOW_MORE_MORE_: MQ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: FQ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: qQ
}, UQ = "Mostrar menos", kQ = "Mostrar más", HQ = "Mostrar menos - El botón se puede ignorar ya que todo el contenido ya es legible para los lectores de pantalla", VQ = "Mostrar más - El botón se puede ignorar ya que todo el contenido ya es legible para los lectores de pantalla", WQ = {
  _A_SHOW_MORE_LESS_: UQ,
  _A_SHOW_MORE_MORE_: kQ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: HQ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: VQ
}, GQ = "Afficher moins", jQ = "Afficher plus", KQ = "Afficher moins - Le bouton peut être ignoré car tout le contenu est déjà lisible par les lecteurs d'écran", zQ = "Afficher plus - Le bouton peut être ignoré car tout le contenu est déjà lisible par les lecteurs d'écran", YQ = {
  _A_SHOW_MORE_LESS_: GQ,
  _A_SHOW_MORE_MORE_: jQ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: KQ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: zQ
}, XQ = "Prikaži manje", ZQ = "Prikaži više", JQ = "Prikaži manje - Ovo dugme se može zanemariti jer je cjelokupan sadržaj već vidljiv čitaču zaslona.", QQ = "Prikaži više - Ovo dugme se može zanemariti jer je cjelokupan sadržaj već vidljiv čitaču zaslona.", eee = {
  _A_SHOW_MORE_LESS_: XQ,
  _A_SHOW_MORE_MORE_: ZQ,
  _A_SHOW_MORE_LESS_SCREEN_READER_: JQ,
  _A_SHOW_MORE_MORE_SCREEN_READER_: QQ
}, tee = "Mostra meno", nee = "Mostra di più", ree = "Mostra meno - Il pulsante può essere ignorato poiché tutto il contenuto è già leggibile dagli screen reader", aee = "Mostra di più - Il pulsante può essere ignorato poiché tutto il contenuto è già leggibile dagli screen reader", see = {
  _A_SHOW_MORE_LESS_: tee,
  _A_SHOW_MORE_MORE_: nee,
  _A_SHOW_MORE_LESS_SCREEN_READER_: ree,
  _A_SHOW_MORE_MORE_SCREEN_READER_: aee
}, iee = "Показать меньше", lee = "Показать больше", oee = "Показать меньше - Кнопку можно проигнорировать, так как весь контент уже доступен для чтения с помощью скринридера", uee = "Показать больше - Кнопку можно проигнорировать, так как весь контент уже доступен для чтения с помощью скринридера", _ee = {
  _A_SHOW_MORE_LESS_: iee,
  _A_SHOW_MORE_MORE_: lee,
  _A_SHOW_MORE_LESS_SCREEN_READER_: oee,
  _A_SHOW_MORE_MORE_SCREEN_READER_: uee
}, os = {
  ar: CQ,
  de: PQ,
  en: $Q,
  es: WQ,
  fr: YQ,
  hr: eee,
  it: see,
  ru: _ee
}, dee = "تحميل", cee = {
  _A_SPINNER_LOADING_: dee
}, fee = "Wird geladen", hee = {
  _A_SPINNER_LOADING_: fee
}, Aee = "Loading", Eee = {
  _A_SPINNER_LOADING_: Aee
}, pee = "Cargando", Tee = {
  _A_SPINNER_LOADING_: pee
}, See = "Chargement", mee = {
  _A_SPINNER_LOADING_: See
}, Lee = "Učitavam", bee = {
  _A_SPINNER_LOADING_: Lee
}, Iee = "Caricamento", vee = {
  _A_SPINNER_LOADING_: Iee
}, yee = "Загрузка", gee = {
  _A_SPINNER_LOADING_: yee
}, us = {
  ar: cee,
  de: hee,
  en: Eee,
  es: Tee,
  fr: mee,
  hr: bee,
  it: vee,
  ru: gee
}, Ree = "غير محدد", Oee = "لا", Cee = "نعم", Dee = {
  _A_SWITCH_DEFAULT_LABEL_: Ree,
  _A_SWITCH_FALSE_LABEL_: Oee,
  _A_SWITCH_TRUE_LABEL_: Cee
}, Nee = "Nicht ausgewählt", Bee = "Nein", wee = "Ja", Pee = {
  _A_SWITCH_DEFAULT_LABEL_: Nee,
  _A_SWITCH_FALSE_LABEL_: Bee,
  _A_SWITCH_TRUE_LABEL_: wee
}, xee = "Not selected", Mee = "No", Fee = "Yes", qee = {
  _A_SWITCH_DEFAULT_LABEL_: xee,
  _A_SWITCH_FALSE_LABEL_: Mee,
  _A_SWITCH_TRUE_LABEL_: Fee
}, $ee = "No seleccionado", Uee = "No", kee = "Sí", Hee = {
  _A_SWITCH_DEFAULT_LABEL_: $ee,
  _A_SWITCH_FALSE_LABEL_: Uee,
  _A_SWITCH_TRUE_LABEL_: kee
}, Vee = "Non sélectionné", Wee = "Non", Gee = "Oui", jee = {
  _A_SWITCH_DEFAULT_LABEL_: Vee,
  _A_SWITCH_FALSE_LABEL_: Wee,
  _A_SWITCH_TRUE_LABEL_: Gee
}, Kee = "Nije odabrano", zee = "Ne", Yee = "Da", Xee = {
  _A_SWITCH_DEFAULT_LABEL_: Kee,
  _A_SWITCH_FALSE_LABEL_: zee,
  _A_SWITCH_TRUE_LABEL_: Yee
}, Zee = "Non selezionato", Jee = "No", Qee = "Sì", ete = {
  _A_SWITCH_DEFAULT_LABEL_: Zee,
  _A_SWITCH_FALSE_LABEL_: Jee,
  _A_SWITCH_TRUE_LABEL_: Qee
}, tte = "Не выбрано", nte = "Нет", rte = "Да", ate = {
  _A_SWITCH_DEFAULT_LABEL_: tte,
  _A_SWITCH_FALSE_LABEL_: nte,
  _A_SWITCH_TRUE_LABEL_: rte
}, _s = {
  ar: Dee,
  de: Pee,
  en: qee,
  es: Hee,
  fr: jee,
  hr: Xee,
  it: ete,
  ru: ate
}, ste = "إجراءات", ite = "إلغاء تحديد جميع الصفوف المحددة", lte = "إلغاء تحديد هذا الصف", ote = "1 حقل", ute = "تخصيص الجدول", _te = "لا توجد إدخالات.", dte = "تنفيذ إجراء متعدد؟", cte = "متابعة", fte = "إغلاق", hte = "+ 1 حقل", Ate = "إجراءات متعددة", Ete = "إلغاء الإجراء المتعدد", pte = "نقل العمود إلى اليمين", Tte = "نقل العمود إلى اليسار", Ste = "إظهار العمود", mte = "إخفاء العمود", Lte = "العمود مقفل", bte = "معاينة الصف", Ite = "إغلاق المعاينة", vte = "الرجاء استخدام الفتحة: 'معاينة'", yte = "معاينة الصف", gte = "إغلاق المعاينة", Rte = "إلى الصف التالي", Ote = "إلى الصف السابق", Cte = "بحث سريع", Dte = "إغلاق معاينة الصف", Nte = "فتح معاينة الصف", Bte = "تحديد جميع الصفوف المرئية ذات الصلة", wte = "تحديد هذا الصف", Pte = "إلغاء الترتيب", xte = "إغلاق", Mte = "عمود", Fte = "اتجاه", qte = "تصاعدي", $te = "تنازلي", Ute = "ترتيب", kte = "ترتيب حسب", Hte = "ترتيب", Vte = "ثم حسب", Wte = "انقر هنا للتبديل بين الترتيب التصاعدي، الترتيب التنازلي، وعدم الترتيب.", Gte = "اضغط مع الاستمرار على مفتاح Shift أثناء النقر للجمع بين ترتيب أعمدة متعددة.", jte = {
  _A_TABLE_ACTIONS_: ste,
  "_A_TABLE_ALL_ROWS_{{count}}_": "إجمالي عدد الإدخالات: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "إلغاء تحديد جميع الصفوف ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: ite,
  _A_TABLE_DESELECT_THIS_ROW_: lte,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "إجراءات للصف: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: ote,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} حقول",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "عرض المزيد من الحقول ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: ute,
  _A_TABLE_EMPTY_TEXT_: _te,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: dte,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>هل تريد تنفيذ الإجراء <strong>{{ action }}</strong> على <strong>{{ selectedRows }}</strong> من العناصر؟</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: cte,
  _A_TABLE_MOBILE_TR_CLOSE_: fte,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: hte,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} حقول",
  _A_TABLE_MULTIPLE_ACTIONS_: Ate,
  _A_TABLE_MULTIPLE_CANCEL_: Ete,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} من {{ countAllRowsFiltered }} محددة",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: pte,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: Tte,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: Ste,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: mte,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: Lte,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: bte,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: Ite,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: vte,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: yte,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: gte,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} من {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Rte,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Ote,
  _A_TABLE_QUICK_SEARCH_: Cte,
  _A_TABLE_ROW_PREVIEW_CLOSE_: Dte,
  _A_TABLE_ROW_PREVIEW_OPEN_: Nte,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "تحديد جميع الصفوف ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Bte,
  _A_TABLE_SELECT_THIS_ROW_: wte,
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: Pte,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: xte,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Mte,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Fte,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: qte,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: $te,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "تغيير الترتيب (الأعمدة المحددة: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_HEADER_: Ute,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: kte,
  _A_TABLE_SORT_ADDITIONAL_START_: Hte,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Vte,
  _A_TABLE_SORT_TITLE_: Wte,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: Gte
}, Kte = "Aktionen", zte = "Alle ausgewählten Zeilen abwählen", Yte = "Die Zeile abwählen", Xte = "1 Feld", Zte = "Tabelle anpassen", Jte = "Keine Einträge vorhanden.", Qte = "Mehrfachaktion durchführen?", ene = "Fortfahren", tne = "Schließen", nne = "+ 1 Feld", rne = "Mehrfachaktionen", ane = "Mehrfachaktion abbrechen", sne = "Spalte nach rechts verschieben", ine = "Spalte nach links verschieben", lne = "Spalte einblenden", one = "Spalte ausblenden", une = "Spalte ist gesperrt", _ne = "Vorschau der Zeile", dne = "Vorschau schließen", cne = "Benutzen sie bitte slot: 'preview'", fne = "Vorschau der Zeile", hne = "Vorschau schließen", Ane = "Zur nächsten Zeile", Ene = "Zur vorherigen Zeile", pne = "Schnellsuche", Tne = "Vorschau der Zeile schließen", Sne = "Vorschau der Zeile öffnen", mne = "Alle sichtbaren, relevanten Zeilen auswählen", Lne = "Die Zeile auswählen", bne = "Sortierung aufheben", Ine = "Schließen", vne = "Spalte", yne = "Reihenfolge", gne = "Aufsteigend", Rne = "Absteigend", One = "Sortierung", Cne = "Sortieren nach", Dne = "Sortieren", Nne = "Dann nach", Bne = "Klicken Sie hier, um zwischen aufsteigender, absteigender und keiner Sortierung zu wechseln.", wne = "Halten Sie die Umschalttaste beim Klicken gedrückt, um die Sortierung mehrerer Spalten zu kombinieren.", Pne = {
  _A_TABLE_ACTIONS_: Kte,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Gesamtanzahl der Einträge: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Alle Zeilen abwählen ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: zte,
  _A_TABLE_DESELECT_THIS_ROW_: Yte,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Aktionen zur Zeile: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Xte,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} Felder",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Weitere Felder anzeigen ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: Zte,
  _A_TABLE_EMPTY_TEXT_: Jte,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: Qte,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Möchten Sie die Aktion <strong>{{ action }}</strong> auf <strong>{{ selectedRows }}</strong> Objekten durchführen?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: ene,
  _A_TABLE_MOBILE_TR_CLOSE_: tne,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: nne,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} Felder",
  _A_TABLE_MULTIPLE_ACTIONS_: rne,
  _A_TABLE_MULTIPLE_CANCEL_: ane,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} von {{ countAllRowsFiltered }} ausgewählt",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: sne,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: ine,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: lne,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: one,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: une,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: _ne,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: dne,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: cne,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: fne,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: hne,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} von {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Ane,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Ene,
  _A_TABLE_QUICK_SEARCH_: pne,
  _A_TABLE_ROW_PREVIEW_CLOSE_: Tne,
  _A_TABLE_ROW_PREVIEW_OPEN_: Sne,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Alle Zeilen auswählen ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: mne,
  _A_TABLE_SELECT_THIS_ROW_: Lne,
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: bne,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: Ine,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: vne,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: yne,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: gne,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: Rne,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Sortierung ändern (ausgewählte Spalten: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_HEADER_: One,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Cne,
  _A_TABLE_SORT_ADDITIONAL_START_: Dne,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Nne,
  _A_TABLE_SORT_TITLE_: Bne,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: wne
}, xne = "Actions", Mne = "Deselect all selected rows", Fne = "Deselect this row", qne = "1 field", $ne = "Customize table", Une = "No entries available.", kne = "Execute multiple actions?", Hne = "Proceed", Vne = "Close", Wne = "+ 1 field", Gne = "Multiple actions", jne = "Cancel multiple actions", Kne = "Move column to the right", zne = "Move column to the left", Yne = "Show column", Xne = "Hide column", Zne = "Column is locked", Jne = "Row preview", Qne = "Close preview", ere = "Row preview", tre = "Close preview", nre = "Please use slot: 'preview'", rre = "To the next row", are = "To the previous row", sre = "Quick search", ire = "Close row preview", lre = "Open row preview", ore = "Select all visible, relevant rows", ure = "Select this row", _re = "Click here to toggle between ascending, descending, and no sorting.", dre = "Hold Shift while clicking to combine sorting of multiple columns.", cre = "Sorting", fre = "Sort by", hre = "Then by", Are = "Column", Ere = "Direction", pre = "Ascending", Tre = "Descending", Sre = "Close", mre = "Sort", Lre = "Remove sorting", bre = {
  _A_TABLE_ACTIONS_: xne,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Total number of entries: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deselect all rows ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Mne,
  _A_TABLE_DESELECT_THIS_ROW_: Fne,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Actions for row: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: qne,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} fields",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Show more fields ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: $ne,
  _A_TABLE_EMPTY_TEXT_: Une,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: kne,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Do you want to execute the action <strong>{{ action }}</strong> on <strong>{{ selectedRows }}</strong> items?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: Hne,
  _A_TABLE_MOBILE_TR_CLOSE_: Vne,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: Wne,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} fields",
  _A_TABLE_MULTIPLE_ACTIONS_: Gne,
  _A_TABLE_MULTIPLE_CANCEL_: jne,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} of {{ countAllRowsFiltered }} selected",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: Kne,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: zne,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: Yne,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: Xne,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: Zne,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: Jne,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: Qne,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: ere,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: tre,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: nre,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} of {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: rre,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: are,
  _A_TABLE_QUICK_SEARCH_: sre,
  _A_TABLE_ROW_PREVIEW_CLOSE_: ire,
  _A_TABLE_ROW_PREVIEW_OPEN_: lre,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Select all rows ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: ore,
  _A_TABLE_SELECT_THIS_ROW_: ure,
  _A_TABLE_SORT_TITLE_: _re,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: dre,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: cre,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: fre,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: hre,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Are,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Ere,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: pre,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: Tre,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: Sre,
  _A_TABLE_SORT_ADDITIONAL_START_: mre,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Change sorting (selected columns: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: Lre
}, Ire = "Acciones", vre = "Deseleccionar todas las filas seleccionadas", yre = "Deseleccionar esta fila", gre = "1 campo", Rre = "Personalizar tabla", Ore = "No hay entradas disponibles.", Cre = "¿Ejecutar múltiples acciones?", Dre = "Continuar", Nre = "Cerrar", Bre = "+ 1 campo", wre = "Acciones múltiples", Pre = "Cancelar acciones múltiples", xre = "Mover columna a la derecha", Mre = "Mover columna a la izquierda", Fre = "Mostrar columna", qre = "Ocultar columna", $re = "La columna está bloqueada", Ure = "Vista previa de la fila", kre = "Cerrar vista previa", Hre = "Vista previa de la fila", Vre = "Cerrar vista previa", Wre = "Por favor, use el slot: 'preview'", Gre = "A la siguiente fila", jre = "A la fila anterior", Kre = "Búsqueda rápida", zre = "Cerrar vista previa de la fila", Yre = "Abrir vista previa de la fila", Xre = "Seleccionar todas las filas visibles y relevantes", Zre = "Seleccionar esta fila", Jre = "Haga clic aquí para alternar entre orden ascendente, descendente o sin ordenar.", Qre = "Mantenga presionada la tecla Shift al hacer clic para combinar la ordenación de varias columnas.", eae = "Ordenar", tae = "Ordenar por", nae = "Luego por", rae = "Columna", aae = "Dirección", sae = "Ascendente", iae = "Descendente", lae = "Cerrar", oae = "Ordenar", uae = "Eliminar orden", _ae = {
  _A_TABLE_ACTIONS_: Ire,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Número total de entradas: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deseleccionar todas las filas ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: vre,
  _A_TABLE_DESELECT_THIS_ROW_: yre,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Acciones para la fila: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: gre,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} campos",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Mostrar más campos ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: Rre,
  _A_TABLE_EMPTY_TEXT_: Ore,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: Cre,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>¿Desea ejecutar la acción <strong>{{ action }}</strong> en <strong>{{ selectedRows }}</strong> objetos?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: Dre,
  _A_TABLE_MOBILE_TR_CLOSE_: Nre,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: Bre,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} campos",
  _A_TABLE_MULTIPLE_ACTIONS_: wre,
  _A_TABLE_MULTIPLE_CANCEL_: Pre,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} de {{ countAllRowsFiltered }} seleccionadas",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: xre,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: Mre,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: Fre,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: qre,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: $re,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: Ure,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: kre,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Hre,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: Vre,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: Wre,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} de {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Gre,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: jre,
  _A_TABLE_QUICK_SEARCH_: Kre,
  _A_TABLE_ROW_PREVIEW_CLOSE_: zre,
  _A_TABLE_ROW_PREVIEW_OPEN_: Yre,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Seleccionar todas las filas ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Xre,
  _A_TABLE_SELECT_THIS_ROW_: Zre,
  _A_TABLE_SORT_TITLE_: Jre,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: Qre,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: eae,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: tae,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: nae,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: rae,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: aae,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: sae,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: iae,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: lae,
  _A_TABLE_SORT_ADDITIONAL_START_: oae,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Cambiar orden (columnas seleccionadas: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: uae
}, dae = "Actions", cae = "Désélectionner toutes les lignes sélectionnées", fae = "Désélectionner cette ligne", hae = "1 champ", Aae = "Personnaliser le tableau", Eae = "Aucune entrée disponible.", pae = "Exécuter plusieurs actions ?", Tae = "Continuer", Sae = "Fermer", mae = "+ 1 champ", Lae = "Actions multiples", bae = "Annuler l'action multiple", Iae = "Déplacer la colonne vers la droite", vae = "Déplacer la colonne vers la gauche", yae = "Afficher la colonne", gae = "Masquer la colonne", Rae = "La colonne est verrouillée", Oae = "Aperçu de la ligne", Cae = "Fermer l'aperçu", Dae = "Aperçu de la ligne", Nae = "Fermer l'aperçu", Bae = "Veuillez utiliser le slot : 'preview'", wae = "À la ligne suivante", Pae = "À la ligne précédente", xae = "Recherche rapide", Mae = "Fermer l'aperçu de la ligne", Fae = "Ouvrir l'aperçu de la ligne", qae = "Sélectionner toutes les lignes visibles et pertinentes", $ae = "Sélectionner cette ligne", Uae = "Cliquez ici pour alterner entre tri ascendant, descendant et sans tri.", kae = "Maintenez la touche Maj enfoncée en cliquant pour combiner le tri de plusieurs colonnes.", Hae = "Tri", Vae = "Trier par", Wae = "Puis par", Gae = "Colonne", jae = "Direction", Kae = "Ascendant", zae = "Descendant", Yae = "Fermer", Xae = "Trier", Zae = "Supprimer le tri", Jae = {
  _A_TABLE_ACTIONS_: dae,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Nombre total d'entrées : {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Désélectionner toutes les lignes ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: cae,
  _A_TABLE_DESELECT_THIS_ROW_: fae,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Actions pour la ligne : {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: hae,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} champs",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Afficher plus de champs ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: Aae,
  _A_TABLE_EMPTY_TEXT_: Eae,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: pae,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Voulez-vous exécuter l'action <strong>{{ action }}</strong> sur <strong>{{ selectedRows }}</strong> objets ?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: Tae,
  _A_TABLE_MOBILE_TR_CLOSE_: Sae,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: mae,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} champs",
  _A_TABLE_MULTIPLE_ACTIONS_: Lae,
  _A_TABLE_MULTIPLE_CANCEL_: bae,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} sur {{ countAllRowsFiltered }} sélectionnés",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: Iae,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: vae,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: yae,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: gae,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: Rae,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: Oae,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: Cae,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Dae,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: Nae,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: Bae,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} sur {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: wae,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Pae,
  _A_TABLE_QUICK_SEARCH_: xae,
  _A_TABLE_ROW_PREVIEW_CLOSE_: Mae,
  _A_TABLE_ROW_PREVIEW_OPEN_: Fae,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Sélectionner toutes les lignes ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: qae,
  _A_TABLE_SELECT_THIS_ROW_: $ae,
  _A_TABLE_SORT_TITLE_: Uae,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: kae,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: Hae,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Vae,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Wae,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Gae,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: jae,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Kae,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: zae,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: Yae,
  _A_TABLE_SORT_ADDITIONAL_START_: Xae,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Modifier le tri (colonnes sélectionnées : {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: Zae
}, Qae = "Akcije", ese = "Poništi odabir svih odabranih redaka", tse = "Poništi odabir ovog retka", nse = "1 polje", rse = "Prilagodi tablicu", ase = "Nema dostupnih unosa.", sse = "Izvršiti više akcija?", ise = "Nastavi", lse = "Zatvori", ose = "+ 1 polje", use = "Višestruke akcije", _se = "Poništi višestruku akciju", dse = "Premjesti stupac desno", cse = "Premjesti stupac lijevo", fse = "Prikaži stupac", hse = "Sakrij stupac", Ase = "Stupac je zaključan", Ese = "Pregled retka", pse = "Zatvori pregled", Tse = "Pregled retka", Sse = "Zatvori pregled", mse = "Molimo koristite slot: 'pregled'", Lse = "Na sljedeći redak", bse = "Na prethodni redak", Ise = "Brza pretraga", vse = "Zatvori pregled retka", yse = "Otvori pregled retka", gse = "Odaberi sve vidljive, relevantne retke", Rse = "Odaberi ovaj redak", Ose = "Kliknite ovdje da biste se prebacivali između uzlaznog, silaznog i bez sortiranja.", Cse = "Držite tipku Shift dok klikate da biste kombinirali sortiranje više stupaca.", Dse = "Sortiranje", Nse = "Sortiraj po", Bse = "Zatim po", wse = "Stupac", Pse = "Smjer", xse = "Uzlazno", Mse = "Silazno", Fse = "Zatvori", qse = "Sortiraj", $se = "Ukloni sortiranje", Use = {
  _A_TABLE_ACTIONS_: Qae,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Ukupan broj unosa: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Poništi odabir svih redaka ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: ese,
  _A_TABLE_DESELECT_THIS_ROW_: tse,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Akcije za redak: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: nse,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} polja",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Prikaži više polja ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: rse,
  _A_TABLE_EMPTY_TEXT_: ase,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: sse,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Želite li izvršiti akciju <strong>{{ action }}</strong> na <strong>{{ selectedRows }}</strong> objekata?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: ise,
  _A_TABLE_MOBILE_TR_CLOSE_: lse,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: ose,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} polja",
  _A_TABLE_MULTIPLE_ACTIONS_: use,
  _A_TABLE_MULTIPLE_CANCEL_: _se,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} od {{ countAllRowsFiltered }} odabrano",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: dse,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: cse,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: fse,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: hse,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: Ase,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: Ese,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: pse,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: Tse,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: Sse,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: mse,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} od {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Lse,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: bse,
  _A_TABLE_QUICK_SEARCH_: Ise,
  _A_TABLE_ROW_PREVIEW_CLOSE_: vse,
  _A_TABLE_ROW_PREVIEW_OPEN_: yse,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Odaberi sve retke ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: gse,
  _A_TABLE_SELECT_THIS_ROW_: Rse,
  _A_TABLE_SORT_TITLE_: Ose,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: Cse,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: Dse,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Nse,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: Bse,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: wse,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: Pse,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: xse,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: Mse,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: Fse,
  _A_TABLE_SORT_ADDITIONAL_START_: qse,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Promijeni sortiranje (odabrani stupci: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: $se
}, kse = "Azioni", Hse = "Deseleziona tutte le righe selezionate", Vse = "Deseleziona questa riga", Wse = "1 campo", Gse = "Personalizza tabella", jse = "Nessuna voce disponibile.", Kse = "Eseguire più azioni?", zse = "Continua", Yse = "Chiudi", Xse = "+ 1 campo", Zse = "Azioni multiple", Jse = "Annulla azione multipla", Qse = "Sposta colonna a destra", eie = "Sposta colonna a sinistra", tie = "Mostra colonna", nie = "Nascondi colonna", rie = "Colonna bloccata", aie = "Anteprima riga", sie = "Chiudi anteprima", iie = "Anteprima riga", lie = "Chiudi anteprima", oie = "Si prega di utilizzare lo slot: 'preview'", uie = "Alla riga successiva", _ie = "Alla riga precedente", die = "Ricerca rapida", cie = "Chiudi anteprima riga", fie = "Apri anteprima riga", hie = "Seleziona tutte le righe visibili e pertinenti", Aie = "Seleziona questa riga", Eie = "Clicca qui per alternare tra ordinamento crescente, decrescente e nessun ordinamento.", pie = "Tieni premuto il tasto Maiusc mentre fai clic per combinare l'ordinamento di più colonne.", Tie = "Ordinamento", Sie = "Ordina per", mie = "Poi per", Lie = "Colonna", bie = "Direzione", Iie = "Crescente", vie = "Decrescente", yie = "Chiudi", gie = "Ordina", Rie = "Rimuovi ordinamento", Oie = {
  _A_TABLE_ACTIONS_: kse,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Numero totale di voci: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Deseleziona tutte le righe ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Hse,
  _A_TABLE_DESELECT_THIS_ROW_: Vse,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Azioni per la riga: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Wse,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} campi",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Mostra più campi ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: Gse,
  _A_TABLE_EMPTY_TEXT_: jse,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: Kse,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Vuoi eseguire l'azione <strong>{{ action }}</strong> su <strong>{{ selectedRows }}</strong> oggetti?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: zse,
  _A_TABLE_MOBILE_TR_CLOSE_: Yse,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: Xse,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} campi",
  _A_TABLE_MULTIPLE_ACTIONS_: Zse,
  _A_TABLE_MULTIPLE_CANCEL_: Jse,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} di {{ countAllRowsFiltered }} selezionate",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: Qse,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: eie,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: tie,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: nie,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: rie,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: aie,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: sie,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: iie,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: lie,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: oie,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} di {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: uie,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: _ie,
  _A_TABLE_QUICK_SEARCH_: die,
  _A_TABLE_ROW_PREVIEW_CLOSE_: cie,
  _A_TABLE_ROW_PREVIEW_OPEN_: fie,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Seleziona tutte le righe ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: hie,
  _A_TABLE_SELECT_THIS_ROW_: Aie,
  _A_TABLE_SORT_TITLE_: Eie,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: pie,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: Tie,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: Sie,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: mie,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: Lie,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: bie,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: Iie,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: vie,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: yie,
  _A_TABLE_SORT_ADDITIONAL_START_: gie,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Modifica ordinamento (colonne selezionate: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: Rie
}, Cie = "Действия", Die = "Отменить выбор всех выбранных строк", Nie = "Отменить выбор строки", Bie = "1 поле", wie = "Настроить таблицу", Pie = "Нет доступных записей.", xie = "Выполнить несколько действий?", Mie = "Продолжить", Fie = "Закрыть", qie = "+ 1 поле", $ie = "Множественные действия", Uie = "Отменить", kie = "Переместить столбец вправо", Hie = "Переместить столбец влево", Vie = "Показать столбец", Wie = "Скрыть столбец", Gie = "Столбец заблокирован", jie = "Предпросмотр строки", Kie = "Закрыть предварительный просмотр", zie = "Предпросмотр строки", Yie = "Закрыть предварительный просмотр", Xie = "Пожалуйста, используйте слот: 'preview'", Zie = "К следующей строке", Jie = "К предыдущей строке", Qie = "Быстрый поиск", ele = "Закрыть предпросмотр строки", tle = "Открыть предпросмотр строки", nle = "Выбрать все видимые, возможные строки", rle = "Выбрать эту строку", ale = "Нажмите здесь, чтобы переключиться между сортировкой по возрастанию, по убыванию и без сортировки.", sle = "Удерживайте Shift при нажатии, чтобы объединить сортировку нескольких столбцов.", ile = "Сортировка", lle = "Сортировать по", ole = "Затем по", ule = "Столбец", _le = "Направление", dle = "По возрастанию", cle = "По убыванию", fle = "Закрыть", hle = "Сортировать", Ale = "Отменить сортировку", Ele = {
  _A_TABLE_ACTIONS_: Cie,
  "_A_TABLE_ALL_ROWS_{{count}}_": "Общее количество записей: {{ count }}",
  "_A_TABLE_DESELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Отменить выбор всех строк ({{ countAllRowsFiltered }})",
  _A_TABLE_DESELECT_ALL_VISIBLE_POSSIBLE_ROWS_: Die,
  _A_TABLE_DESELECT_THIS_ROW_: Nie,
  "_A_TABLE_DROPDOWN_ACTIONS_TITLE_{{rowNumber}}_": "Действия для строки: {{ rowNumber }}",
  _A_TABLE_DROPDOWN_HIDE_FIELD_TEXT_: Bie,
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TEXT_{{count}}_": "{{ count }} полей",
  "_A_TABLE_DROPDOWN_HIDE_FIELDS_TITLE_{{count}}_": "Показать дополнительные поля ({{ count }})",
  _A_TABLE_DROPDOWN_OPTIONS_TITLE_: wie,
  _A_TABLE_EMPTY_TEXT_: Pie,
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_: xie,
  "_A_TABLE_EXECUTE_MULTIPLE_ACTION_BODY_HTML_{{action}}_{{selectedRows}}_": "<div>Вы хотите выполнить действие <strong>{{ action }}</strong> для <strong>{{ selectedRows }}</strong> объектов?</div>",
  _A_TABLE_EXECUTE_MULTIPLE_ACTION_BTN_SAVE_: Mie,
  _A_TABLE_MOBILE_TR_CLOSE_: Fie,
  _A_TABLE_MOBILE_TR_PLUS_FIELD_: qie,
  "_A_TABLE_MOBILE_TR_PLUS_FIELDS_{{count}}_": "+ {{ count }} полей",
  _A_TABLE_MULTIPLE_ACTIONS_: $ie,
  _A_TABLE_MULTIPLE_CANCEL_: Uie,
  "_A_TABLE_MULTIPLE_ITEMS_SELECTED_{{countSelectedRows}}_{{countAllRows}}_{{countSelectedRowsFiltered}}_{{countAllRowsFiltered}}_": "{{ countSelectedRowsFiltered }} из {{ countAllRowsFiltered }} выбрано",
  _A_TABLE_OPTIONS_BTN_ARROW_DOWN_TITLE_: kie,
  _A_TABLE_OPTIONS_BTN_ARROW_UP_TITLE_: Hie,
  _A_TABLE_OPTIONS_BTN_EYE_CLOSED_TITLE_: Vie,
  _A_TABLE_OPTIONS_BTN_EYE_TITLE_: Wie,
  _A_TABLE_OPTIONS_BTN_LOCK_TITLE_: Gie,
  _A_TABLE_PREVIEW_DOWN_ARIA_LABEL_: jie,
  _A_TABLE_PREVIEW_DOWN_CLOSE_: Kie,
  _A_TABLE_PREVIEW_RIGHT_ARIA_LABEL_: zie,
  _A_TABLE_PREVIEW_RIGHT_CLOSE_: Yie,
  _A_TABLE_PREVIEW_HAS_NOT_SLOT_: Xie,
  "_A_TABLE_PREVIEW_RIGHT_HEADER_{{rowNumber}}_{{rowNumberFormatted}}_{{countAllRows}}_{{countAllRowsFormatted}}_": "{{ rowNumberFormatted }} из {{ countAllRowsFormatted }}",
  _A_TABLE_PREVIEW_RIGHT_NEXT_ROW_: Zie,
  _A_TABLE_PREVIEW_RIGHT_PREVIOUS_ROW_: Jie,
  _A_TABLE_QUICK_SEARCH_: Qie,
  _A_TABLE_ROW_PREVIEW_CLOSE_: ele,
  _A_TABLE_ROW_PREVIEW_OPEN_: tle,
  "_A_TABLE_SELECT_ALL_ROWS_{{countAllRows}}_{{countAllRowsFiltered}}_": "Выбрать все строки ({{ countAllRowsFiltered }})",
  _A_TABLE_SELECT_ALL_VISIBLE_POSSIBLE_ROWS_: nle,
  _A_TABLE_SELECT_THIS_ROW_: rle,
  _A_TABLE_SORT_TITLE_: ale,
  _A_TABLE_SORT_TITLE_MULTI_COLUMN_: sle,
  _A_TABLE_SORT_ADDITIONAL_HEADER_: ile,
  _A_TABLE_SORT_ADDITIONAL_SORT_BY_: lle,
  _A_TABLE_SORT_ADDITIONAL_THEN_BY_: ole,
  _A_TABLE_SORT_ADDITIONAL_COLUMN_: ule,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_: _le,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_ASC_: dle,
  _A_TABLE_SORT_ADDITIONAL_DIRECTION_DESC_: cle,
  _A_TABLE_SORT_ADDITIONAL_CLOSE_DROPDOWN_: fle,
  _A_TABLE_SORT_ADDITIONAL_START_: hle,
  "_A_TABLE_SORT_ADDITIONAL_DROPDOWN_TITLE_{{count}}_": "Изменить сортировку (выбрано столбцов: {{ count }})",
  _A_TABLE_SORT_ADDITIONAL_BTN_DELETE_: Ale
}, ds = {
  ar: jte,
  de: Pne,
  en: bre,
  es: _ae,
  fr: Jae,
  hr: Use,
  it: Oie,
  ru: Ele
}, ple = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Tle = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Sle = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: ple,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Tle
}, mle = "Nach oben scrollen", Lle = "Nach unten scrollen", ble = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: mle,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Lle
}, Ile = "Scroll top", vle = "Scroll down", yle = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Ile,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: vle
}, gle = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Rle = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Ole = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: gle,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Rle
}, Cle = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Dle = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Nle = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Cle,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Dle
}, Ble = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", wle = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Ple = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: Ble,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: wle
}, xle = "_A_VERTICAL_SCROLL_BTN_UP_TITLE_", Mle = "_A_VERTICAL_SCROLL_BTN_DOWN_TITLE_", Fle = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: xle,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: Mle
}, qle = "Прокрутить наверх", $le = "Прокрутить вниз", Ule = {
  _A_VERTICAL_SCROLL_BTN_UP_TITLE_: qle,
  _A_VERTICAL_SCROLL_BTN_DOWN_TITLE_: $le
}, cs = {
  ar: Sle,
  de: ble,
  en: yle,
  es: Ole,
  fr: Nle,
  hr: Ple,
  it: Fle,
  ru: Ule
}, kle = "معالج", Hle = "التالي", Vle = "الخطوة التالية", Wle = "سابق", Gle = "الخطوة السابقة", jle = "الخطوة الحالية", Kle = "خطأ في الخطوة", zle = "الخطوة القادمة", Yle = "الخطوة المزار", Xle = "تحذير خطوة", Zle = "خطوات المعالج", Jle = {
  _A_WIZARD_ARIA_LABEL_: kle,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "الخطوة {{ stepNumber }}:",
  _A_WIZARD_NEXT_: Hle,
  _A_WIZARD_NEXT_TITLE_: Vle,
  _A_WIZARD_PREVIOUS_: Wle,
  _A_WIZARD_PREVIOUS_TITLE_: Gle,
  _A_WIZARD_STEP_ACTIVE_: jle,
  _A_WIZARD_STEP_ERROR_: Kle,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} من {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: zle,
  _A_WIZARD_STEP_VISITED_: Yle,
  _A_WIZARD_STEP_WARNING_: Xle,
  _A_WIZARD_STEPS_ARIA_LABEL_: Zle,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "{{ stepsCount }} من {{ stepActive }} خطوة"
}, Qle = "Wizard", eoe = "Nächste", toe = "Nächster Schritt", noe = "Vorherige", roe = "Vorheriger Schritt", aoe = "Schritt aktuell", soe = "Schrittfehler", ioe = "Schritt bevorstehend", loe = "Schritt besucht", ooe = "Schrittwarnung", uoe = "Wizard Schritte", _oe = {
  _A_WIZARD_ARIA_LABEL_: Qle,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Schritt {{ stepNumber }}:",
  _A_WIZARD_NEXT_: eoe,
  _A_WIZARD_NEXT_TITLE_: toe,
  _A_WIZARD_PREVIOUS_: noe,
  _A_WIZARD_PREVIOUS_TITLE_: roe,
  _A_WIZARD_STEP_ACTIVE_: aoe,
  _A_WIZARD_STEP_ERROR_: soe,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} von {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: ioe,
  _A_WIZARD_STEP_VISITED_: loe,
  _A_WIZARD_STEP_WARNING_: ooe,
  _A_WIZARD_STEPS_ARIA_LABEL_: uoe,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Schritt {{ stepActive }} von {{ stepsCount }}"
}, doe = "Wizard", coe = "Next", foe = "Next step", hoe = "Previous", Aoe = "Previous step", Eoe = "Step current", poe = "Step error", Toe = "Step upcoming", Soe = "Step visited", moe = "Step warning", Loe = "Wizard steps", boe = {
  _A_WIZARD_ARIA_LABEL_: doe,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Step {{ stepNumber }}:",
  _A_WIZARD_NEXT_: coe,
  _A_WIZARD_NEXT_TITLE_: foe,
  _A_WIZARD_PREVIOUS_: hoe,
  _A_WIZARD_PREVIOUS_TITLE_: Aoe,
  _A_WIZARD_STEP_ACTIVE_: Eoe,
  _A_WIZARD_STEP_ERROR_: poe,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} of {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: Toe,
  _A_WIZARD_STEP_VISITED_: Soe,
  _A_WIZARD_STEP_WARNING_: moe,
  _A_WIZARD_STEPS_ARIA_LABEL_: Loe,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Step {{ stepActive }} of {{ stepsCount }}"
}, Ioe = "Asistente", voe = "Próximo", yoe = "Siguiente paso", goe = "Previo", Roe = "Paso anterior", Ooe = "Paso actual", Coe = "Error de paso", Doe = "Paso próximo", Noe = "Paso visitado", Boe = "Advertencia de paso", woe = "Pasos del asistente", Poe = {
  _A_WIZARD_ARIA_LABEL_: Ioe,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Paso {{ stepNumber }}:",
  _A_WIZARD_NEXT_: voe,
  _A_WIZARD_NEXT_TITLE_: yoe,
  _A_WIZARD_PREVIOUS_: goe,
  _A_WIZARD_PREVIOUS_TITLE_: Roe,
  _A_WIZARD_STEP_ACTIVE_: Ooe,
  _A_WIZARD_STEP_ERROR_: Coe,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} de {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: Doe,
  _A_WIZARD_STEP_VISITED_: Noe,
  _A_WIZARD_STEP_WARNING_: Boe,
  _A_WIZARD_STEPS_ARIA_LABEL_: woe,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "escenario {{ stepActive }} de {{ stepsCount }}"
}, xoe = "Assistant", Moe = "Suivant", Foe = "Étape suivante", qoe = "Précédent", $oe = "Étape précédente", Uoe = "Étape actuelle", koe = "Erreur de l'étape", Hoe = "Étape à venir", Voe = "Étape visitée", Woe = "Avertissement de l'étape", Goe = "Étapes de l'assistant", joe = {
  _A_WIZARD_ARIA_LABEL_: xoe,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Étape {{ stepNumber }} :",
  _A_WIZARD_NEXT_: Moe,
  _A_WIZARD_NEXT_TITLE_: Foe,
  _A_WIZARD_PREVIOUS_: qoe,
  _A_WIZARD_PREVIOUS_TITLE_: $oe,
  _A_WIZARD_STEP_ACTIVE_: Uoe,
  _A_WIZARD_STEP_ERROR_: koe,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} sur {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: Hoe,
  _A_WIZARD_STEP_VISITED_: Voe,
  _A_WIZARD_STEP_WARNING_: Woe,
  _A_WIZARD_STEPS_ARIA_LABEL_: Goe,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Etape {{ stepActive }} de {{ stepsCount }}"
}, Koe = "Čarobnjak", zoe = "Dalje", Yoe = "Sljedeći korak", Xoe = "Natrag", Zoe = "Prethodni korak", Joe = "Trenutni korak", Qoe = "Pogreška koraka", eue = "Preostali koraci", tue = "Posjećeni korak", nue = "Upozorenje koraka", rue = "Koraci čarobnjaka", aue = {
  _A_WIZARD_ARIA_LABEL_: Koe,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Korak {{ stepNumber }}:",
  _A_WIZARD_NEXT_: zoe,
  _A_WIZARD_NEXT_TITLE_: Yoe,
  _A_WIZARD_PREVIOUS_: Xoe,
  _A_WIZARD_PREVIOUS_TITLE_: Zoe,
  _A_WIZARD_STEP_ACTIVE_: Joe,
  _A_WIZARD_STEP_ERROR_: Qoe,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} od {{stepsCount}}",
  _A_WIZARD_STEP_UPCOMING_: eue,
  _A_WIZARD_STEP_VISITED_: tue,
  _A_WIZARD_STEP_WARNING_: nue,
  _A_WIZARD_STEPS_ARIA_LABEL_: rue,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Korak {{ stepActive }} od {{ stepsCount }}"
}, sue = "Wizard", iue = "Prossimo", lue = "Passo successivo", oue = "Precedente", uue = "Passo precedente", _ue = "Passo attuale", due = "Errore del passo", cue = "Passo successivo", fue = "Passo visitato", hue = "Avvertimento del passo", Aue = "Passi dell'assistente", Eue = {
  _A_WIZARD_ARIA_LABEL_: sue,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Passo {{ stepNumber }}:",
  _A_WIZARD_NEXT_: iue,
  _A_WIZARD_NEXT_TITLE_: lue,
  _A_WIZARD_PREVIOUS_: oue,
  _A_WIZARD_PREVIOUS_TITLE_: uue,
  _A_WIZARD_STEP_ACTIVE_: _ue,
  _A_WIZARD_STEP_ERROR_: due,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} di {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: cue,
  _A_WIZARD_STEP_VISITED_: fue,
  _A_WIZARD_STEP_WARNING_: hue,
  _A_WIZARD_STEPS_ARIA_LABEL_: Aue,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "palcoscenico {{ stepActive }} Di {{ stepsCount }}"
}, pue = "Мастер", Tue = "Следующий", Sue = "Следующий шаг", mue = "Предыдущий", Lue = "Предыдущий шаг", bue = "Шаг актуальный", Iue = "Ошибка шага", vue = "Шаг предстоящий", yue = "Шаг посещённый", gue = "Предупреждение шага", Rue = "Шаги мастера", Oue = {
  _A_WIZARD_ARIA_LABEL_: pue,
  "_A_WIZARD_HEADER_STEP_SCREEN_READER_{{stepNumber}}_": "Шаг {{ stepNumber }}:",
  _A_WIZARD_NEXT_: Tue,
  _A_WIZARD_NEXT_TITLE_: Sue,
  _A_WIZARD_PREVIOUS_: mue,
  _A_WIZARD_PREVIOUS_TITLE_: Lue,
  _A_WIZARD_STEP_ACTIVE_: bue,
  _A_WIZARD_STEP_ERROR_: Iue,
  "_A_WIZARD_STEP_NUMBER_OF_{{stepActive}}_{{stepsCount}}_": "{{ stepActive }} из {{ stepsCount }}",
  _A_WIZARD_STEP_UPCOMING_: vue,
  _A_WIZARD_STEP_VISITED_: yue,
  _A_WIZARD_STEP_WARNING_: gue,
  _A_WIZARD_STEPS_ARIA_LABEL_: Rue,
  "_A_WIZARD_STEPS_PROGRESSBAR_TEXT_{{stepActive}}_{{stepsCount}}_": "Шаг {{ stepActive }} из {{ stepsCount }}"
}, fs = {
  ar: Jle,
  de: _oe,
  en: boe,
  es: Poe,
  fr: joe,
  hr: aue,
  it: Eue,
  ru: Oue
}, Cue = "Bytes", Due = "KB", Nue = "MB", Bue = "GB", wue = "TB", Pue = "PB", xue = "EB", Mue = "ZB", Fue = "YB", que = {
  _A_FILE_SIZE_B_: Cue,
  _A_FILE_SIZE_KB_: Due,
  _A_FILE_SIZE_MB_: Nue,
  _A_FILE_SIZE_GB_: Bue,
  _A_FILE_SIZE_TB_: wue,
  _A_FILE_SIZE_PB_: Pue,
  _A_FILE_SIZE_EB_: xue,
  _A_FILE_SIZE_ZB_: Mue,
  _A_FILE_SIZE_YB_: Fue
}, $ue = "Bytes", Uue = "KB", kue = "MB", Hue = "GB", Vue = "TB", Wue = "PB", Gue = "EB", jue = "ZB", Kue = "YB", zue = {
  _A_FILE_SIZE_B_: $ue,
  _A_FILE_SIZE_KB_: Uue,
  _A_FILE_SIZE_MB_: kue,
  _A_FILE_SIZE_GB_: Hue,
  _A_FILE_SIZE_TB_: Vue,
  _A_FILE_SIZE_PB_: Wue,
  _A_FILE_SIZE_EB_: Gue,
  _A_FILE_SIZE_ZB_: jue,
  _A_FILE_SIZE_YB_: Kue
}, Yue = "Bytes", Xue = "KB", Zue = "MB", Jue = "GB", Que = "TB", e_e = "PB", t_e = "EB", n_e = "ZB", r_e = "YB", a_e = {
  _A_FILE_SIZE_B_: Yue,
  _A_FILE_SIZE_KB_: Xue,
  _A_FILE_SIZE_MB_: Zue,
  _A_FILE_SIZE_GB_: Jue,
  _A_FILE_SIZE_TB_: Que,
  _A_FILE_SIZE_PB_: e_e,
  _A_FILE_SIZE_EB_: t_e,
  _A_FILE_SIZE_ZB_: n_e,
  _A_FILE_SIZE_YB_: r_e
}, s_e = "Bytes", i_e = "KB", l_e = "MB", o_e = "GB", u_e = "TB", __e = "PB", d_e = "EB", c_e = "ZB", f_e = "YB", h_e = {
  _A_FILE_SIZE_B_: s_e,
  _A_FILE_SIZE_KB_: i_e,
  _A_FILE_SIZE_MB_: l_e,
  _A_FILE_SIZE_GB_: o_e,
  _A_FILE_SIZE_TB_: u_e,
  _A_FILE_SIZE_PB_: __e,
  _A_FILE_SIZE_EB_: d_e,
  _A_FILE_SIZE_ZB_: c_e,
  _A_FILE_SIZE_YB_: f_e
}, A_e = "Bytes", E_e = "KB", p_e = "MB", T_e = "GB", S_e = "TB", m_e = "PB", L_e = "EB", b_e = "ZB", I_e = "YB", v_e = {
  _A_FILE_SIZE_B_: A_e,
  _A_FILE_SIZE_KB_: E_e,
  _A_FILE_SIZE_MB_: p_e,
  _A_FILE_SIZE_GB_: T_e,
  _A_FILE_SIZE_TB_: S_e,
  _A_FILE_SIZE_PB_: m_e,
  _A_FILE_SIZE_EB_: L_e,
  _A_FILE_SIZE_ZB_: b_e,
  _A_FILE_SIZE_YB_: I_e
}, y_e = "B", g_e = "KB", R_e = "MB", O_e = "GB", C_e = "TB", D_e = "PB", N_e = "EB", B_e = "ZB", w_e = "YB", P_e = {
  _A_FILE_SIZE_B_: y_e,
  _A_FILE_SIZE_KB_: g_e,
  _A_FILE_SIZE_MB_: R_e,
  _A_FILE_SIZE_GB_: O_e,
  _A_FILE_SIZE_TB_: C_e,
  _A_FILE_SIZE_PB_: D_e,
  _A_FILE_SIZE_EB_: N_e,
  _A_FILE_SIZE_ZB_: B_e,
  _A_FILE_SIZE_YB_: w_e
}, x_e = "Bytes", M_e = "KB", F_e = "MB", q_e = "GB", $_e = "TB", U_e = "PB", k_e = "EB", H_e = "ZB", V_e = "YB", W_e = {
  _A_FILE_SIZE_B_: x_e,
  _A_FILE_SIZE_KB_: M_e,
  _A_FILE_SIZE_MB_: F_e,
  _A_FILE_SIZE_GB_: q_e,
  _A_FILE_SIZE_TB_: $_e,
  _A_FILE_SIZE_PB_: U_e,
  _A_FILE_SIZE_EB_: k_e,
  _A_FILE_SIZE_ZB_: H_e,
  _A_FILE_SIZE_YB_: V_e
}, G_e = "Б", j_e = "КБ", K_e = "МБ", z_e = "ГБ", Y_e = "ТБ", X_e = "ПБ", Z_e = "ЭБ", J_e = "ЗБ", Q_e = "ИБ", ede = {
  _A_FILE_SIZE_B_: G_e,
  _A_FILE_SIZE_KB_: j_e,
  _A_FILE_SIZE_MB_: K_e,
  _A_FILE_SIZE_GB_: z_e,
  _A_FILE_SIZE_TB_: Y_e,
  _A_FILE_SIZE_PB_: X_e,
  _A_FILE_SIZE_EB_: Z_e,
  _A_FILE_SIZE_ZB_: J_e,
  _A_FILE_SIZE_YB_: Q_e
}, hs = {
  ar: que,
  de: zue,
  en: a_e,
  es: h_e,
  fr: v_e,
  hr: P_e,
  it: W_e,
  ru: ede
}, tde = "غلق", nde = "يكمل", rde = "مواد لكل صفحة", ade = "مزيد من الإجراءات", sde = "التالي", ide = "لا", lde = "سابق", ode = "إزالة المحتوى", ude = "إزالة التحديد", _de = "قائمة البحث", dde = "نعم", cde = {
  "_ADD_NOTIFICATION_{{type}}_": "إضافة إشعار {{ type }}",
  _ALERT_CLOSE_: tde,
  _CONTINUE_: nde,
  _ITEMS_PER_PAGE_: rde,
  _MORE_ACTIONS_: ade,
  _NEXT_: sde,
  _NO_: ide,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ count}} من {{ current }} - {{ start }}",
  _PREVIOUS_: lde,
  _REMOVE_FIELD_CONTENT_: ode,
  _REMOVE_SELECTION_: ude,
  _SEARCH_MENU_: _de,
  _YES_: dde
}, fde = "Schließen", hde = "Fortfahren", Ade = "Objekte pro Seite", Ede = "Weitere Aktionen", pde = "Nächste", Tde = "Nein", Sde = "Vorherige", mde = "Feldinhalt entfernen", Lde = "Auswahl entfernen", bde = "Menüsuche", Ide = "[Keine Auswahl]", vde = "Ja", yde = {
  "_ADD_NOTIFICATION_{{type}}_": "Benachrichtigung hinzufügen {{ type }}",
  _ALERT_CLOSE_: fde,
  _CONTINUE_: hde,
  _ITEMS_PER_PAGE_: Ade,
  _MORE_ACTIONS_: Ede,
  _NEXT_: pde,
  _NO_: Tde,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} von {{ count}}",
  _PREVIOUS_: Sde,
  _REMOVE_FIELD_CONTENT_: mde,
  _REMOVE_SELECTION_: Lde,
  _SEARCH_MENU_: bde,
  _SELECT_TEXT_EMPTY_: Ide,
  _YES_: vde
}, gde = "Close", Rde = "Continue", Ode = "Items per page", Cde = "more actions", Dde = "Next", Nde = "No", Bde = "Previous", wde = "Remove field content", Pde = "remove selection", xde = "Search menu", Mde = "[No selection]", Fde = "Yes", qde = {
  "_ADD_NOTIFICATION_{{type}}_": "Add Notification {{ type }}",
  _ALERT_CLOSE_: gde,
  _CONTINUE_: Rde,
  _ITEMS_PER_PAGE_: Ode,
  _MORE_ACTIONS_: Cde,
  _NEXT_: Dde,
  _NO_: Nde,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} from {{ count}}",
  _PREVIOUS_: Bde,
  _REMOVE_FIELD_CONTENT_: wde,
  _REMOVE_SELECTION_: Pde,
  _SEARCH_MENU_: xde,
  _SELECT_TEXT_EMPTY_: Mde,
  _YES_: Fde
}, $de = "Cerrar", Ude = "Continuar", kde = "Artículos por página", Hde = "Otras acciones", Vde = "Próximo", Wde = "No", Gde = "Previo", jde = "Quitar el contenido del campo", Kde = "eliminar selección", zde = "Menú de búsqueda", Yde = "Sí", Xde = {
  "_ADD_NOTIFICATION_{{type}}_": "Agregar Notificación {{ type }}",
  _ALERT_CLOSE_: $de,
  _CONTINUE_: Ude,
  _ITEMS_PER_PAGE_: kde,
  _MORE_ACTIONS_: Hde,
  _NEXT_: Vde,
  _NO_: Wde,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} de {{ count}}",
  _PREVIOUS_: Gde,
  _REMOVE_FIELD_CONTENT_: jde,
  _REMOVE_SELECTION_: Kde,
  _SEARCH_MENU_: zde,
  _YES_: Yde
}, Zde = "Fermer", Jde = "Continuer", Qde = "objets par page", ece = "autres actions", tce = "Suivant", nce = "Non", rce = "Précédent", ace = "Supprimer le contenu du champ", sce = "supprimer la sélection", ice = "Menu de recherche", lce = "Oui", oce = {
  "_ADD_NOTIFICATION_{{type}}_": "Ajouter notification {{ type }}",
  _ALERT_CLOSE_: Zde,
  _CONTINUE_: Jde,
  _ITEMS_PER_PAGE_: Qde,
  _MORE_ACTIONS_: ece,
  _NEXT_: tce,
  _NO_: nce,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} depuis {{ count}}",
  _PREVIOUS_: rce,
  _REMOVE_FIELD_CONTENT_: ace,
  _REMOVE_SELECTION_: sce,
  _SEARCH_MENU_: ice,
  _YES_: lce
}, uce = "Zatvori", _ce = "Nastaviti", dce = "Stavke po stranici", cce = "Daljnje akcije", fce = "Sljedeći", hce = "Ne", Ace = "Prethodni", Ece = "Izbrišite sadržaj polja", pce = "Ukloniti odabir", Tce = "Pretraživanje izbornika", Sce = "[Bez odabira]", mce = "Da", Lce = {
  "_ADD_NOTIFICATION_{{type}}_": "Dodaj obavijest {{ type }}",
  _ALERT_CLOSE_: uce,
  _CONTINUE_: _ce,
  _ITEMS_PER_PAGE_: dce,
  _MORE_ACTIONS_: cce,
  _NEXT_: fce,
  _NO_: hce,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} iz {{ count}}",
  _PREVIOUS_: Ace,
  _REMOVE_FIELD_CONTENT_: Ece,
  _REMOVE_SELECTION_: pce,
  _SEARCH_MENU_: Tce,
  _SELECT_TEXT_EMPTY_: Sce,
  _YES_: mce
}, bce = "Vicino", Ice = "Continua", vce = "oggetti per pagina", yce = "Ulteriori azioni", gce = "Prossimo", Rce = "No", Oce = "Precedente", Cce = "Rimuovi il contenuto del campo", Dce = "rimuovere la selezione", Nce = "Menù di ricerca", Bce = "Sì", wce = {
  "_ADD_NOTIFICATION_{{type}}_": "Aggiungi notifica {{ type }}",
  _ALERT_CLOSE_: bce,
  _CONTINUE_: Ice,
  _ITEMS_PER_PAGE_: vce,
  _MORE_ACTIONS_: yce,
  _NEXT_: gce,
  _NO_: Rce,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} da {{ count}}",
  _PREVIOUS_: Oce,
  _REMOVE_FIELD_CONTENT_: Cce,
  _REMOVE_SELECTION_: Dce,
  _SEARCH_MENU_: Nce,
  _YES_: Bce
}, Pce = "Закрыть", xce = "Продолжать", Mce = "Элементов на странице", Fce = "Дальнейшие действия", qce = "Следующий", $ce = "Нет", Uce = "Предыдущий", kce = "Удалить содержимое поля", Hce = "удалить выделение", Vce = "Быстрый поиск", Wce = "поиск в меню", Gce = "[Нет элементов]", jce = "Да", Kce = {
  "_ADD_NOTIFICATION_{{type}}_": "Добавить Уведомление {{ type }}",
  _ALERT_CLOSE_: Pce,
  _CONTINUE_: xce,
  _ITEMS_PER_PAGE_: Mce,
  _MORE_ACTIONS_: Fce,
  _NEXT_: qce,
  _NO_: $ce,
  "_PAGINATION_FROM_TO_{{start}}_{{current}}_{{count}}_": "{{ start }} - {{ current }} из {{ count}}",
  _PREVIOUS_: Uce,
  _REMOVE_FIELD_CONTENT_: kce,
  _REMOVE_SELECTION_: Hce,
  _SCHNELLSUCHE_: Vce,
  _SEARCH_MENU_: Wce,
  _SELECT_TEXT_EMPTY_: Gce,
  _YES_: jce
}, zce = {
  ...cde,
  ...ka.ar,
  ...Ha.ar,
  ...Va.ar,
  ...Wa.ar,
  ...Ga.ar,
  ...ja.ar,
  ...Ka.ar,
  ...za.ar,
  ...Ya.ar,
  ...Xa.ar,
  ...Za.ar,
  ...Ja.ar,
  ...Qa.ar,
  ...es.ar,
  ...ts.ar,
  ...ns.ar,
  ...rs.ar,
  ...as.ar,
  ...ss.ar,
  ...is.ar,
  ...ls.ar,
  ...os.ar,
  ...us.ar,
  ..._s.ar,
  ...ds.ar,
  ...cs.ar,
  ...fs.ar,
  ...hs.ar
}, Yce = {
  ...yde,
  ...ka.de,
  ...Ha.de,
  ...Va.de,
  ...Wa.de,
  ...Ga.de,
  ...ja.de,
  ...Ka.de,
  ...za.de,
  ...Ya.de,
  ...Xa.de,
  ...Za.de,
  ...Ja.de,
  ...Qa.de,
  ...es.de,
  ...ts.de,
  ...ns.de,
  ...rs.de,
  ...as.de,
  ...ss.de,
  ...is.de,
  ...ls.de,
  ...os.de,
  ...us.de,
  ..._s.de,
  ...ds.de,
  ...cs.de,
  ...fs.de,
  ...hs.de
}, Xce = {
  ...qde,
  ...ka.en,
  ...Ha.en,
  ...Va.en,
  ...Wa.en,
  ...Ga.en,
  ...ja.en,
  ...Ka.en,
  ...za.en,
  ...Ya.en,
  ...Xa.en,
  ...Za.en,
  ...Ja.en,
  ...Qa.en,
  ...es.en,
  ...ts.en,
  ...ns.en,
  ...rs.en,
  ...as.en,
  ...ss.en,
  ...is.en,
  ...ls.en,
  ...os.en,
  ...us.en,
  ..._s.en,
  ...ds.en,
  ...cs.en,
  ...fs.en,
  ...hs.en
}, Zce = {
  ...Xde,
  ...ka.es,
  ...Ha.es,
  ...Va.es,
  ...Wa.es,
  ...Ga.es,
  ...ja.es,
  ...Ka.es,
  ...za.es,
  ...Ya.es,
  ...Xa.es,
  ...Za.es,
  ...Ja.es,
  ...Qa.es,
  ...es.es,
  ...ts.es,
  ...ns.es,
  ...rs.es,
  ...as.es,
  ...ss.es,
  ...is.es,
  ...ls.es,
  ...os.es,
  ...us.es,
  ..._s.es,
  ...ds.es,
  ...cs.es,
  ...fs.es,
  ...hs.es
}, Jce = {
  ...oce,
  ...ka.fr,
  ...Ha.fr,
  ...Va.fr,
  ...Wa.fr,
  ...Ga.fr,
  ...ja.fr,
  ...Ka.fr,
  ...za.fr,
  ...Ya.fr,
  ...Xa.fr,
  ...Za.fr,
  ...Ja.fr,
  ...Qa.fr,
  ...es.fr,
  ...ts.fr,
  ...ns.fr,
  ...rs.fr,
  ...as.fr,
  ...ss.fr,
  ...is.fr,
  ...ls.fr,
  ...os.fr,
  ...us.fr,
  ..._s.fr,
  ...ds.fr,
  ...cs.fr,
  ...fs.fr,
  ...hs.fr
}, Qce = {
  ...Lce,
  ...ka.hr,
  ...Ha.hr,
  ...Va.hr,
  ...Wa.hr,
  ...Ga.hr,
  ...ja.hr,
  ...Ka.hr,
  ...za.hr,
  ...Ya.hr,
  ...Xa.hr,
  ...Za.hr,
  ...Ja.hr,
  ...Qa.hr,
  ...es.hr,
  ...ts.hr,
  ...ns.hr,
  ...rs.hr,
  ...as.hr,
  ...ss.hr,
  ...is.hr,
  ...ls.hr,
  ...os.hr,
  ...us.hr,
  ..._s.hr,
  ...ds.hr,
  ...cs.hr,
  ...fs.hr,
  ...hs.hr
}, efe = {
  ...wce,
  ...ka.it,
  ...Ha.it,
  ...Va.it,
  ...Wa.it,
  ...Ga.it,
  ...ja.it,
  ...Ka.it,
  ...za.it,
  ...Ya.it,
  ...Xa.it,
  ...Za.it,
  ...Ja.it,
  ...Qa.it,
  ...es.it,
  ...ts.it,
  ...ns.it,
  ...rs.it,
  ...as.it,
  ...ss.it,
  ...is.it,
  ...ls.it,
  ...os.it,
  ...us.it,
  ..._s.it,
  ...ds.it,
  ...cs.it,
  ...fs.it,
  ...hs.it
}, tfe = {
  ...Kce,
  ...ka.ru,
  ...Ha.ru,
  ...Va.ru,
  ...Wa.ru,
  ...Ga.ru,
  ...ja.ru,
  ...Ka.ru,
  ...za.ru,
  ...Ya.ru,
  ...Xa.ru,
  ...Za.ru,
  ...Ja.ru,
  ...Qa.ru,
  ...es.ru,
  ...ts.ru,
  ...ns.ru,
  ...rs.ru,
  ...as.ru,
  ...ss.ru,
  ...is.ru,
  ...ls.ru,
  ...os.ru,
  ...us.ru,
  ..._s.ru,
  ...ds.ru,
  ...cs.ru,
  ...fs.ru,
  ...hs.ru
}, Qfe = {
  ar: zce,
  de: Yce,
  en: Xce,
  es: Zce,
  fr: Jce,
  hr: Qce,
  it: efe,
  ru: tfe
};
export {
  lfe as AAccordion,
  qc as AAlert,
  ofe as AAlertPlugin,
  pt as AButton,
  JM as ACheckbox,
  ka as ACheckboxI18n,
  tf as ACheckboxRadioGroups,
  Ll as ACloak,
  Ha as ACloakI18n,
  dfe as ACloakPlugin,
  _f as AConfirmAPI,
  ui as ADatepicker,
  PF as ADatepickerRange,
  Va as ADatepickerRangeI18n,
  Afe as ADisclosure,
  Wa as ADisclosureI18n,
  la as ADropdown,
  aS as ADropdownGlobalAPI,
  Ae as AElement,
  d0 as AErrors,
  en as AErrorsText,
  O1 as AEventOutsideAPI,
  pS as AFieldset,
  Ga as AFieldsetI18n,
  pq as AFilterCenter,
  mfe as AFilters,
  jn as AFiltersAPI,
  GM as AFiltersAPI_additionFilters,
  xq as AFiltersHorizontal,
  ja as AFiltersI18n,
  kfe as AFiltersPlugin,
  rq as AFiltersRight,
  Fu as AForm,
  Lfe as AFormElement,
  qu as AFormElementBtnClear,
  Yt as AFormHelpText,
  Sfe as AFormPlugin,
  Wn as AFormPluginOptions,
  Sn as AFormReadonly,
  Qd as AGet,
  mS as AGroup,
  ec as AGroupButtonDropdown,
  bfe as AGroupButtonDropdownPlugin,
  i2 as AHttpAPI,
  Im as AHttpAPI_API_CONFIG,
  r2 as AHttpAPI_abortHttp,
  Ws as AHttpAPI_callHttpRequestAndCheckSavedApi,
  a2 as AHttpAPI_clearAllApiSaved,
  s2 as AHttpAPI_clearApiSaved,
  f2 as AHttpAPI_deleteHttp,
  l2 as AHttpAPI_getHttp,
  o2 as AHttpAPI_getListHttp,
  u2 as AHttpAPI_getOptionsHttp,
  Ufe as AHttpAPI_getUrlParams,
  c2 as AHttpAPI_patchHttp,
  _2 as AHttpAPI_postHttp,
  d2 as AHttpAPI_putHttp,
  e2 as AHttpAPI_setBaseUrl,
  t2 as AHttpAPI_setErrorCallbacks,
  n2 as AHttpAPI_setHeaderParams,
  E2 as AHttpAPI_setUrlForArray,
  A2 as AHttpAPI_setUrlWithParams,
  Hfe as AHttpPlugin,
  ufe as AI18nPlugin,
  _t as AIcon,
  _fe as AIconPlugin,
  Ife as AInfiniteScroll,
  yn as AInput,
  R0 as AInputCurrency,
  Ka as AInputCurrencyI18n,
  Vfe as AInputCurrencyPlugin,
  on as AInputCurrencyPluginOptions,
  P0 as AInputFile,
  za as AInputI18n,
  xa as AInputNumber,
  Ya as AInputNumberI18n,
  Wfe as AInputNumberPlugin,
  An as AInputNumberPluginOptions,
  qo as AInputNumberRange,
  Xa as AInputNumberRangeI18n,
  Q0 as AJson,
  Za as AJsonI18n,
  gP as AKeyChildren,
  Ge as AKeyId,
  vt as AKeyLabel,
  oi as AKeyLabelSearch,
  pl as AKeyParent,
  J as AKeysCode,
  Ut as ALabel,
  $u as ALink,
  vfe as ALinkCopy,
  Ja as ALinkCopyI18n,
  c$ as AList,
  yS as ALoading,
  Qa as ALoadingI18n,
  yfe as ALoadingPlugin,
  gfe as AMenu,
  es as AMenu2I18n,
  h$ as AMenuButtonToggle,
  RS as AMenuButtonToggle_ToggleAPI,
  Tn as AMobileAPI,
  au as AMobileAPI_isMobileWidth,
  Ho as AMobileAPI_setIsMobileWidth,
  jfe as AMobilePlugin,
  Uu as AModal,
  Ofe as AModalConfirm,
  IU as AModalForm,
  ts as AModalI18n,
  Rfe as AModalPlugin,
  Cfe as AModalWizard,
  _1 as AMultiselectOrdered,
  ns as AMultiselectOrderedI18n,
  pfe as AMultiselectOrderedPlugin,
  Me as AMultiselectOrderedPluginOptions,
  Dfe as ANotification,
  Mu as ANotificationAPI,
  bq as ANotificationAPI_addNotification,
  Lq as ANotificationAPI_setNotificationTimeout,
  Sl as AOnHooks,
  xu as AOneCheckbox,
  Nfe as APageTabTitle,
  tk as APageTabTitleAPI,
  nk as APageTabTitleAPI_setBaseTitle,
  Kfe as APageTabTitlePlugin,
  Ak as APagination,
  rs as APaginationI18n,
  Gn as APlacements,
  af as APopupAPI,
  Jd as APopupAPI_closePopup,
  vd as APopupAPI_isCurrentPopupOpen,
  Zd as APopupAPI_openPopup,
  WF as APopupAPI_togglePopup,
  Bfe as AProgress,
  wfe as AProgressCircle,
  hS as ARadio,
  as as ARadioI18n,
  Pfe as ARate,
  zq as ARequired,
  ss as ARequiredI18n,
  bk as AResizer,
  m1 as ARouterLinkConfig,
  is as ARouterLinkConfigI18n,
  zfe as ARouterLinkConfigPlugin,
  Et as ARouterLinkConfigPluginOptions,
  Kt as ASafeHtml,
  xfe as AScale,
  qs as ASelect,
  ls as ASelectI18n,
  zE as ASelectIcon,
  Tfe as ASelectPlugin,
  Mfe as AShowMore,
  os as AShowMoreI18n,
  Il as ASpinner,
  us as ASpinnerI18n,
  cfe as ASpinnerPlugin,
  AS as ASwitch,
  _s as ASwitchI18n,
  qfe as ATable,
  ds as ATableI18n,
  Ffe as ATablePlugin,
  $fe as ATabs,
  q1 as ATemplate,
  j1 as ATextarea,
  hM as ATooltip,
  Ee as ATranslation,
  yi as AUiTypes_typesContainer,
  B0 as AUiTypes_typesLabelProps,
  sf as AUiTypes_typesModelArray,
  _S as AUiTypes_typesModelObject,
  N0 as AUiTypes_typesWithData,
  j$ as AVerticalScroll,
  cs as AVerticalScrollI18n,
  ZU as AWizard,
  fs as AWizardI18n,
  Gfe as AlohaPlugin,
  Rt as EventBus,
  hs as Filters18n,
  Tf as UIDataGroupAPI,
  Nt as UIExcludeRenderAttributesAPI,
  zt as UiAPI,
  Ku as UiClearButtonAPI,
  Sf as UiCollapseAPI,
  zu as UiDataFromServerAPI,
  Yu as UiDataSortAPI,
  Xu as UiDataWatchEmitAPI,
  Zu as UiDataWithKeyIdAndLabelAPI,
  kl as UiDisabledAPI,
  Ef as UiInputAutofillAPI,
  pf as UiLabelClickEventBusAPI,
  Ju as UiLoadingAPI,
  mf as UiSearchAPI,
  Xt as UiStyleHideAPI,
  Qu as UiTextAfterLabelAPI,
  Bd as colorToHex,
  jo as concatTwoStringsWithSpace,
  afe as dompurify,
  Fc as extractTextFromHtml,
  RM as filterBoolean,
  OM as filterCapitalize,
  CM as filterCurrency,
  DM as filterDate,
  NM as filterDefaultForEmpty,
  BM as filterEmail,
  wM as filterEscapeHtml,
  PM as filterFileSize,
  ol as filterFloat,
  xM as filterJson,
  MM as filterKeyValue,
  FM as filterLimitTo,
  qM as filterLink,
  uu as filterList,
  UM as filterLowerCase,
  kM as filterMask,
  HM as filterPropertyByValue,
  VM as filterSearchHighlight,
  WM as filterUpperCase,
  qF as focusableList,
  vi as focusableSelector,
  ZP as getTotalNestedCount,
  Pt as getTranslatedText,
  $T as getTranslationAttributes,
  hfe as getUniqueSelector,
  Jfe as hexToRgb,
  Pa as i18n,
  zce as i18nAR,
  Qfe as i18nAll,
  Yce as i18nDE,
  Xce as i18nEN,
  Zce as i18nES,
  Jce as i18nFR,
  Qce as i18nHR,
  efe as i18nIT,
  tfe as i18nRU,
  YP as isArrayOfArrays,
  ife as isArrayOfStrings,
  v0 as isEven,
  Efe as isOdd,
  wa as isPlaceholderTranslate,
  Ai as isTranslate,
  Xfe as mixBlack,
  vm as mixColor,
  Yfe as mixWhite,
  Zfe as rgbToHex,
  sfe as sanitize,
  ru as sanitizeLocal,
  ffe as scrollToElement,
  Rr as setFocusToElement,
  $F as setFocusToNextFocusableElement,
  UF as setFocusToPreviousFocusableElement,
  PT as setI18n,
  xT as setLanguage,
  $c as timeTranslationLastChanged,
  Ko as toPrecision,
  Ax as toggleTranslate,
  wT as translation,
  fx as updateI18n,
  hx as updateI18nForLanguage,
  MT as updateTranslation
};
